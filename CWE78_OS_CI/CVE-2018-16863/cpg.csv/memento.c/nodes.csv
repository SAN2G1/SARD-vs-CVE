command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7503205	File	data/converged/CVE-2018-16863_ghostpdl/memento.c								
ANR	7503206	DeclStmt									
ANR	7503207	Decl							int	int ( void ( * ) ( void ) )	atexit
ANR	7503208	DeclStmt									
ANR	7503209	Decl							char	char [ 4096 ]	log_buffer
ANR	7503210	DeclStmt									
ANR	7503211	Decl							int	int	log_fill
ANR	7503212	DeclStmt									
ANR	7503213	Decl							char	char [ 4096 ]	log_buffer2
ANR	7503214	Function	android_fprintf	60:0:1613:2908							
ANR	7503215	FunctionDef	"android_fprintf (FILE * file , const char * fmt)"		7503214	0					
ANR	7503216	CompoundStatement		62:0:1674:2908	7503214	0					
ANR	7503217	IdentifierDeclStatement	va_list args ;	63:4:1680:1692	7503214	0	True				
ANR	7503218	IdentifierDecl	args		7503214	0					
ANR	7503219	IdentifierDeclType	va_list		7503214	0					
ANR	7503220	Identifier	args		7503214	1					
ANR	7503221	IdentifierDeclStatement	"char * p , * q ;"	64:4:1698:1709	7503214	1	True				
ANR	7503222	IdentifierDecl	* p		7503214	0					
ANR	7503223	IdentifierDeclType	char *		7503214	0					
ANR	7503224	Identifier	p		7503214	1					
ANR	7503225	IdentifierDecl	* q		7503214	1					
ANR	7503226	IdentifierDeclType	char *		7503214	0					
ANR	7503227	Identifier	q		7503214	1					
ANR	7503228	ExpressionStatement	"va_start ( args , fmt )"	66:4:1716:1735	7503214	2	True				
ANR	7503229	CallExpression	"va_start ( args , fmt )"		7503214	0					
ANR	7503230	Callee	va_start		7503214	0					
ANR	7503231	Identifier	va_start		7503214	0					
ANR	7503232	ArgumentList	args		7503214	1					
ANR	7503233	Argument	args		7503214	0					
ANR	7503234	Identifier	args		7503214	0					
ANR	7503235	Argument	fmt		7503214	1					
ANR	7503236	Identifier	fmt		7503214	0					
ANR	7503237	ExpressionStatement	"vsnprintf ( log_buffer2 , sizeof ( log_buffer2 ) - 1 , fmt , args )"	67:4:1741:1797	7503214	3	True				
ANR	7503238	CallExpression	"vsnprintf ( log_buffer2 , sizeof ( log_buffer2 ) - 1 , fmt , args )"		7503214	0					
ANR	7503239	Callee	vsnprintf		7503214	0					
ANR	7503240	Identifier	vsnprintf		7503214	0					
ANR	7503241	ArgumentList	log_buffer2		7503214	1					
ANR	7503242	Argument	log_buffer2		7503214	0					
ANR	7503243	Identifier	log_buffer2		7503214	0					
ANR	7503244	Argument	sizeof ( log_buffer2 ) - 1		7503214	1					
ANR	7503245	AdditiveExpression	sizeof ( log_buffer2 ) - 1		7503214	0		-			
ANR	7503246	SizeofExpression	sizeof ( log_buffer2 )		7503214	0					
ANR	7503247	Sizeof	sizeof		7503214	0					
ANR	7503248	SizeofOperand	log_buffer2		7503214	1					
ANR	7503249	PrimaryExpression	1		7503214	1					
ANR	7503250	Argument	fmt		7503214	2					
ANR	7503251	Identifier	fmt		7503214	0					
ANR	7503252	Argument	args		7503214	3					
ANR	7503253	Identifier	args		7503214	0					
ANR	7503254	ExpressionStatement	va_end ( args )	68:4:1803:1815	7503214	4	True				
ANR	7503255	CallExpression	va_end ( args )		7503214	0					
ANR	7503256	Callee	va_end		7503214	0					
ANR	7503257	Identifier	va_end		7503214	0					
ANR	7503258	ArgumentList	args		7503214	1					
ANR	7503259	Argument	args		7503214	0					
ANR	7503260	Identifier	args		7503214	0					
ANR	7503261	ExpressionStatement	log_buffer2 [ sizeof ( log_buffer2 ) - 1 ] = 0	71:4:1869:1907	7503214	5	True				
ANR	7503262	AssignmentExpression	log_buffer2 [ sizeof ( log_buffer2 ) - 1 ] = 0		7503214	0		=			
ANR	7503263	ArrayIndexing	log_buffer2 [ sizeof ( log_buffer2 ) - 1 ]		7503214	0					
ANR	7503264	Identifier	log_buffer2		7503214	0					
ANR	7503265	AdditiveExpression	sizeof ( log_buffer2 ) - 1		7503214	1		-			
ANR	7503266	SizeofExpression	sizeof ( log_buffer2 )		7503214	0					
ANR	7503267	Sizeof	sizeof		7503214	0					
ANR	7503268	SizeofOperand	log_buffer2		7503214	1					
ANR	7503269	PrimaryExpression	1		7503214	1					
ANR	7503270	PrimaryExpression	0		7503214	1					
ANR	7503271	ExpressionStatement	p = log_buffer2	73:4:1914:1929	7503214	6	True				
ANR	7503272	AssignmentExpression	p = log_buffer2		7503214	0		=			
ANR	7503273	Identifier	p		7503214	0					
ANR	7503274	Identifier	log_buffer2		7503214	1					
ANR	7503275	ExpressionStatement	q = p	74:4:1935:1940	7503214	7	True				
ANR	7503276	AssignmentExpression	q = p		7503214	0		=			
ANR	7503277	Identifier	q		7503214	0					
ANR	7503278	Identifier	p		7503214	1					
ANR	7503279	DoStatement	do		7503214	8					
ANR	7503280	CompoundStatement		15:4:278:278	7503214	0					
ANR	7503281	WhileStatement	while ( * p && * p != '\\n' )		7503214	0					
ANR	7503282	Condition	* p && * p != '\\n'	78:15:2027:2042	7503214	0	True				
ANR	7503283	AndExpression	* p && * p != '\\n'		7503214	0		&&			
ANR	7503284	UnaryOperationExpression	* p		7503214	0					
ANR	7503285	UnaryOperator	*		7503214	0					
ANR	7503286	Identifier	p		7503214	1					
ANR	7503287	EqualityExpression	* p != '\\n'		7503214	1		!=			
ANR	7503288	UnaryOperationExpression	* p		7503214	0					
ANR	7503289	UnaryOperator	*		7503214	0					
ANR	7503290	Identifier	p		7503214	1					
ANR	7503291	PrimaryExpression	'\\n'		7503214	1					
ANR	7503292	ExpressionStatement	p ++	79:12:2057:2060	7503214	1	True				
ANR	7503293	PostIncDecOperationExpression	p ++		7503214	0					
ANR	7503294	Identifier	p		7503214	0					
ANR	7503295	IncDec	++		7503214	1					
ANR	7503296	IfStatement	if ( p - q >= sizeof ( log_buffer ) - 1 - log_fill )		7503214	1					
ANR	7503297	Condition	p - q >= sizeof ( log_buffer ) - 1 - log_fill	83:12:2180:2219	7503214	0	True				
ANR	7503298	RelationalExpression	p - q >= sizeof ( log_buffer ) - 1 - log_fill		7503214	0		>=			
ANR	7503299	AdditiveExpression	p - q		7503214	0		-			
ANR	7503300	Identifier	p		7503214	0					
ANR	7503301	Identifier	q		7503214	1					
ANR	7503302	AdditiveExpression	sizeof ( log_buffer ) - 1 - log_fill		7503214	1		-			
ANR	7503303	SizeofExpression	sizeof ( log_buffer )		7503214	0					
ANR	7503304	Sizeof	sizeof		7503214	0					
ANR	7503305	SizeofOperand	log_buffer		7503214	1					
ANR	7503306	AdditiveExpression	1 - log_fill		7503214	1		-			
ANR	7503307	PrimaryExpression	1		7503214	0					
ANR	7503308	Identifier	log_fill		7503214	1					
ANR	7503309	ExpressionStatement	p = q + sizeof ( log_buffer ) - 1 - log_fill	84:16:2238:2277	7503214	1	True				
ANR	7503310	AssignmentExpression	p = q + sizeof ( log_buffer ) - 1 - log_fill		7503214	0		=			
ANR	7503311	Identifier	p		7503214	0					
ANR	7503312	AdditiveExpression	q + sizeof ( log_buffer ) - 1 - log_fill		7503214	1		+			
ANR	7503313	Identifier	q		7503214	0					
ANR	7503314	AdditiveExpression	sizeof ( log_buffer ) - 1 - log_fill		7503214	1		-			
ANR	7503315	SizeofExpression	sizeof ( log_buffer )		7503214	0					
ANR	7503316	Sizeof	sizeof		7503214	0					
ANR	7503317	SizeofOperand	log_buffer		7503214	1					
ANR	7503318	AdditiveExpression	1 - log_fill		7503214	1		-			
ANR	7503319	PrimaryExpression	1		7503214	0					
ANR	7503320	Identifier	log_fill		7503214	1					
ANR	7503321	ExpressionStatement	"memcpy ( & log_buffer [ log_fill ] , q , p - q )"	86:8:2288:2325	7503214	2	True				
ANR	7503322	CallExpression	"memcpy ( & log_buffer [ log_fill ] , q , p - q )"		7503214	0					
ANR	7503323	Callee	memcpy		7503214	0					
ANR	7503324	Identifier	memcpy		7503214	0					
ANR	7503325	ArgumentList	& log_buffer [ log_fill ]		7503214	1					
ANR	7503326	Argument	& log_buffer [ log_fill ]		7503214	0					
ANR	7503327	UnaryOperationExpression	& log_buffer [ log_fill ]		7503214	0					
ANR	7503328	UnaryOperator	&		7503214	0					
ANR	7503329	ArrayIndexing	log_buffer [ log_fill ]		7503214	1					
ANR	7503330	Identifier	log_buffer		7503214	0					
ANR	7503331	Identifier	log_fill		7503214	1					
ANR	7503332	Argument	q		7503214	1					
ANR	7503333	Identifier	q		7503214	0					
ANR	7503334	Argument	p - q		7503214	2					
ANR	7503335	AdditiveExpression	p - q		7503214	0		-			
ANR	7503336	Identifier	p		7503214	0					
ANR	7503337	Identifier	q		7503214	1					
ANR	7503338	ExpressionStatement	log_fill += p - q	87:8:2335:2350	7503214	3	True				
ANR	7503339	AssignmentExpression	log_fill += p - q		7503214	0		+=			
ANR	7503340	Identifier	log_fill		7503214	0					
ANR	7503341	AdditiveExpression	p - q		7503214	1		-			
ANR	7503342	Identifier	p		7503214	0					
ANR	7503343	Identifier	q		7503214	1					
ANR	7503344	IfStatement	if ( * p == '\\n' )		7503214	4					
ANR	7503345	Condition	* p == '\\n'	88:12:2364:2373	7503214	0	True				
ANR	7503346	EqualityExpression	* p == '\\n'		7503214	0		==			
ANR	7503347	UnaryOperationExpression	* p		7503214	0					
ANR	7503348	UnaryOperator	*		7503214	0					
ANR	7503349	Identifier	p		7503214	1					
ANR	7503350	PrimaryExpression	'\\n'		7503214	1					
ANR	7503351	CompoundStatement		28:8:709:709	7503214	1					
ANR	7503352	ExpressionStatement	log_buffer [ log_fill ] = 0	90:12:2398:2422	7503214	0	True				
ANR	7503353	AssignmentExpression	log_buffer [ log_fill ] = 0		7503214	0		=			
ANR	7503354	ArrayIndexing	log_buffer [ log_fill ]		7503214	0					
ANR	7503355	Identifier	log_buffer		7503214	0					
ANR	7503356	Identifier	log_fill		7503214	1					
ANR	7503357	PrimaryExpression	0		7503214	1					
ANR	7503358	ExpressionStatement	"__android_log_print ( ANDROID_LOG_ERROR , ""memento"" , ""%s"" , log_buffer )"	91:12:2436:2503	7503214	1	True				
ANR	7503359	CallExpression	"__android_log_print ( ANDROID_LOG_ERROR , ""memento"" , ""%s"" , log_buffer )"		7503214	0					
ANR	7503360	Callee	__android_log_print		7503214	0					
ANR	7503361	Identifier	__android_log_print		7503214	0					
ANR	7503362	ArgumentList	ANDROID_LOG_ERROR		7503214	1					
ANR	7503363	Argument	ANDROID_LOG_ERROR		7503214	0					
ANR	7503364	Identifier	ANDROID_LOG_ERROR		7503214	0					
ANR	7503365	Argument	"""memento"""		7503214	1					
ANR	7503366	PrimaryExpression	"""memento"""		7503214	0					
ANR	7503367	Argument	"""%s"""		7503214	2					
ANR	7503368	PrimaryExpression	"""%s"""		7503214	0					
ANR	7503369	Argument	log_buffer		7503214	3					
ANR	7503370	Identifier	log_buffer		7503214	0					
ANR	7503371	ExpressionStatement	usleep ( 1 )	92:12:2517:2526	7503214	2	True				
ANR	7503372	CallExpression	usleep ( 1 )		7503214	0					
ANR	7503373	Callee	usleep		7503214	0					
ANR	7503374	Identifier	usleep		7503214	0					
ANR	7503375	ArgumentList	1		7503214	1					
ANR	7503376	Argument	1		7503214	0					
ANR	7503377	PrimaryExpression	1		7503214	0					
ANR	7503378	ExpressionStatement	log_fill = 0	93:12:2540:2552	7503214	3	True				
ANR	7503379	AssignmentExpression	log_fill = 0		7503214	0		=			
ANR	7503380	Identifier	log_fill		7503214	0					
ANR	7503381	PrimaryExpression	0		7503214	1					
ANR	7503382	ExpressionStatement	p ++	94:12:2566:2569	7503214	4	True				
ANR	7503383	PostIncDecOperationExpression	p ++		7503214	0					
ANR	7503384	Identifier	p		7503214	0					
ANR	7503385	IncDec	++		7503214	1					
ANR	7503386	ElseStatement	else		7503214	0					
ANR	7503387	IfStatement	if ( log_fill >= sizeof ( log_buffer ) - 1 )		7503214	0					
ANR	7503388	Condition	log_fill >= sizeof ( log_buffer ) - 1	96:17:2621:2652	7503214	0	True				
ANR	7503389	RelationalExpression	log_fill >= sizeof ( log_buffer ) - 1		7503214	0		>=			
ANR	7503390	Identifier	log_fill		7503214	0					
ANR	7503391	AdditiveExpression	sizeof ( log_buffer ) - 1		7503214	1		-			
ANR	7503392	SizeofExpression	sizeof ( log_buffer )		7503214	0					
ANR	7503393	Sizeof	sizeof		7503214	0					
ANR	7503394	SizeofOperand	log_buffer		7503214	1					
ANR	7503395	PrimaryExpression	1		7503214	1					
ANR	7503396	CompoundStatement		36:8:988:988	7503214	1					
ANR	7503397	ExpressionStatement	log_buffer [ sizeof ( log_buffer2 ) - 1 ] = 0	98:12:2677:2714	7503214	0	True				
ANR	7503398	AssignmentExpression	log_buffer [ sizeof ( log_buffer2 ) - 1 ] = 0		7503214	0		=			
ANR	7503399	ArrayIndexing	log_buffer [ sizeof ( log_buffer2 ) - 1 ]		7503214	0					
ANR	7503400	Identifier	log_buffer		7503214	0					
ANR	7503401	AdditiveExpression	sizeof ( log_buffer2 ) - 1		7503214	1		-			
ANR	7503402	SizeofExpression	sizeof ( log_buffer2 )		7503214	0					
ANR	7503403	Sizeof	sizeof		7503214	0					
ANR	7503404	SizeofOperand	log_buffer2		7503214	1					
ANR	7503405	PrimaryExpression	1		7503214	1					
ANR	7503406	PrimaryExpression	0		7503214	1					
ANR	7503407	ExpressionStatement	"__android_log_print ( ANDROID_LOG_ERROR , ""memento"" , ""%s"" , log_buffer )"	99:12:2728:2795	7503214	1	True				
ANR	7503408	CallExpression	"__android_log_print ( ANDROID_LOG_ERROR , ""memento"" , ""%s"" , log_buffer )"		7503214	0					
ANR	7503409	Callee	__android_log_print		7503214	0					
ANR	7503410	Identifier	__android_log_print		7503214	0					
ANR	7503411	ArgumentList	ANDROID_LOG_ERROR		7503214	1					
ANR	7503412	Argument	ANDROID_LOG_ERROR		7503214	0					
ANR	7503413	Identifier	ANDROID_LOG_ERROR		7503214	0					
ANR	7503414	Argument	"""memento"""		7503214	1					
ANR	7503415	PrimaryExpression	"""memento"""		7503214	0					
ANR	7503416	Argument	"""%s"""		7503214	2					
ANR	7503417	PrimaryExpression	"""%s"""		7503214	0					
ANR	7503418	Argument	log_buffer		7503214	3					
ANR	7503419	Identifier	log_buffer		7503214	0					
ANR	7503420	ExpressionStatement	usleep ( 1 )	100:12:2809:2818	7503214	2	True				
ANR	7503421	CallExpression	usleep ( 1 )		7503214	0					
ANR	7503422	Callee	usleep		7503214	0					
ANR	7503423	Identifier	usleep		7503214	0					
ANR	7503424	ArgumentList	1		7503214	1					
ANR	7503425	Argument	1		7503214	0					
ANR	7503426	PrimaryExpression	1		7503214	0					
ANR	7503427	ExpressionStatement	log_fill = 0	101:12:2832:2844	7503214	3	True				
ANR	7503428	AssignmentExpression	log_fill = 0		7503214	0		=			
ANR	7503429	Identifier	log_fill		7503214	0					
ANR	7503430	PrimaryExpression	0		7503214	1					
ANR	7503431	ExpressionStatement	q = p	103:8:2864:2869	7503214	5	True				
ANR	7503432	AssignmentExpression	q = p		7503214	0		=			
ANR	7503433	Identifier	q		7503214	0					
ANR	7503434	Identifier	p		7503214	1					
ANR	7503435	Condition	* p	105:11:2888:2889	7503214	1	True				
ANR	7503436	UnaryOperationExpression	* p		7503214	0					
ANR	7503437	UnaryOperator	*		7503214	0					
ANR	7503438	Identifier	p		7503214	1					
ANR	7503439	ReturnStatement	return 0 ;	107:4:2898:2906	7503214	9	True				
ANR	7503440	PrimaryExpression	0		7503214	0					
ANR	7503441	ReturnType	static int		7503214	1					
ANR	7503442	Identifier	android_fprintf		7503214	2					
ANR	7503443	ParameterList	"FILE * file , const char * fmt"		7503214	3					
ANR	7503444	Parameter	FILE * file	61:16:1640:1649	7503214	0	True				
ANR	7503445	ParameterType	FILE *		7503214	0					
ANR	7503446	Identifier	file		7503214	1					
ANR	7503447	Parameter	const char * fmt	61:28:1652:1666	7503214	1	True				
ANR	7503448	ParameterType	const char *		7503214	0					
ANR	7503449	Identifier	fmt		7503214	1					
ANR	7503450	CFGEntryNode	ENTRY		7503214		True				
ANR	7503451	CFGExitNode	EXIT		7503214		True				
ANR	7503452	Symbol	ANDROID_LOG_ERROR		7503214						
ANR	7503453	Symbol	fmt		7503214						
ANR	7503454	Symbol	* log_fill		7503214						
ANR	7503455	Symbol	args		7503214						
ANR	7503456	Symbol	p		7503214						
ANR	7503457	Symbol	q		7503214						
ANR	7503458	Symbol	file		7503214						
ANR	7503459	Symbol	log_buffer2		7503214						
ANR	7503460	Symbol	* log_buffer		7503214						
ANR	7503461	Symbol	* log_buffer2		7503214						
ANR	7503462	Symbol	log_buffer		7503214						
ANR	7503463	Symbol	* p		7503214						
ANR	7503464	Symbol	log_fill		7503214						
ANR	7503465	Function	windows_fprintf	117:0:3048:3373							
ANR	7503466	FunctionDef	"windows_fprintf (FILE * file , const char * fmt)"		7503465	0					
ANR	7503467	CompoundStatement		119:0:3109:3373	7503465	0					
ANR	7503468	IdentifierDeclStatement	va_list args ;	120:4:3115:3127	7503465	0	True				
ANR	7503469	IdentifierDecl	args		7503465	0					
ANR	7503470	IdentifierDeclType	va_list		7503465	0					
ANR	7503471	Identifier	args		7503465	1					
ANR	7503472	IdentifierDeclStatement	char text [ 4096 ] ;	121:4:3133:3148	7503465	1	True				
ANR	7503473	IdentifierDecl	text [ 4096 ]		7503465	0					
ANR	7503474	IdentifierDeclType	char [ 4096 ]		7503465	0					
ANR	7503475	Identifier	text		7503465	1					
ANR	7503476	PrimaryExpression	4096		7503465	2					
ANR	7503477	IdentifierDeclStatement	int ret ;	122:4:3154:3161	7503465	2	True				
ANR	7503478	IdentifierDecl	ret		7503465	0					
ANR	7503479	IdentifierDeclType	int		7503465	0					
ANR	7503480	Identifier	ret		7503465	1					
ANR	7503481	ExpressionStatement	"va_start ( args , fmt )"	124:4:3168:3187	7503465	3	True				
ANR	7503482	CallExpression	"va_start ( args , fmt )"		7503465	0					
ANR	7503483	Callee	va_start		7503465	0					
ANR	7503484	Identifier	va_start		7503465	0					
ANR	7503485	ArgumentList	args		7503465	1					
ANR	7503486	Argument	args		7503465	0					
ANR	7503487	Identifier	args		7503465	0					
ANR	7503488	Argument	fmt		7503465	1					
ANR	7503489	Identifier	fmt		7503465	0					
ANR	7503490	ExpressionStatement	"ret = vfprintf ( file , fmt , args )"	125:4:3193:3224	7503465	4	True				
ANR	7503491	AssignmentExpression	"ret = vfprintf ( file , fmt , args )"		7503465	0		=			
ANR	7503492	Identifier	ret		7503465	0					
ANR	7503493	CallExpression	"vfprintf ( file , fmt , args )"		7503465	1					
ANR	7503494	Callee	vfprintf		7503465	0					
ANR	7503495	Identifier	vfprintf		7503465	0					
ANR	7503496	ArgumentList	file		7503465	1					
ANR	7503497	Argument	file		7503465	0					
ANR	7503498	Identifier	file		7503465	0					
ANR	7503499	Argument	fmt		7503465	1					
ANR	7503500	Identifier	fmt		7503465	0					
ANR	7503501	Argument	args		7503465	2					
ANR	7503502	Identifier	args		7503465	0					
ANR	7503503	ExpressionStatement	va_end ( args )	126:4:3230:3242	7503465	5	True				
ANR	7503504	CallExpression	va_end ( args )		7503465	0					
ANR	7503505	Callee	va_end		7503465	0					
ANR	7503506	Identifier	va_end		7503465	0					
ANR	7503507	ArgumentList	args		7503465	1					
ANR	7503508	Argument	args		7503465	0					
ANR	7503509	Identifier	args		7503465	0					
ANR	7503510	ExpressionStatement	"va_start ( args , fmt )"	128:4:3249:3268	7503465	6	True				
ANR	7503511	CallExpression	"va_start ( args , fmt )"		7503465	0					
ANR	7503512	Callee	va_start		7503465	0					
ANR	7503513	Identifier	va_start		7503465	0					
ANR	7503514	ArgumentList	args		7503465	1					
ANR	7503515	Argument	args		7503465	0					
ANR	7503516	Identifier	args		7503465	0					
ANR	7503517	Argument	fmt		7503465	1					
ANR	7503518	Identifier	fmt		7503465	0					
ANR	7503519	ExpressionStatement	"vsnprintf ( text , 4096 , fmt , args )"	129:4:3274:3306	7503465	7	True				
ANR	7503520	CallExpression	"vsnprintf ( text , 4096 , fmt , args )"		7503465	0					
ANR	7503521	Callee	vsnprintf		7503465	0					
ANR	7503522	Identifier	vsnprintf		7503465	0					
ANR	7503523	ArgumentList	text		7503465	1					
ANR	7503524	Argument	text		7503465	0					
ANR	7503525	Identifier	text		7503465	0					
ANR	7503526	Argument	4096		7503465	1					
ANR	7503527	PrimaryExpression	4096		7503465	0					
ANR	7503528	Argument	fmt		7503465	2					
ANR	7503529	Identifier	fmt		7503465	0					
ANR	7503530	Argument	args		7503465	3					
ANR	7503531	Identifier	args		7503465	0					
ANR	7503532	ExpressionStatement	OutputDebugStringA ( text )	130:4:3312:3336	7503465	8	True				
ANR	7503533	CallExpression	OutputDebugStringA ( text )		7503465	0					
ANR	7503534	Callee	OutputDebugStringA		7503465	0					
ANR	7503535	Identifier	OutputDebugStringA		7503465	0					
ANR	7503536	ArgumentList	text		7503465	1					
ANR	7503537	Argument	text		7503465	0					
ANR	7503538	Identifier	text		7503465	0					
ANR	7503539	ExpressionStatement	va_end ( args )	131:4:3342:3354	7503465	9	True				
ANR	7503540	CallExpression	va_end ( args )		7503465	0					
ANR	7503541	Callee	va_end		7503465	0					
ANR	7503542	Identifier	va_end		7503465	0					
ANR	7503543	ArgumentList	args		7503465	1					
ANR	7503544	Argument	args		7503465	0					
ANR	7503545	Identifier	args		7503465	0					
ANR	7503546	ReturnStatement	return ret ;	133:4:3361:3371	7503465	10	True				
ANR	7503547	Identifier	ret		7503465	0					
ANR	7503548	ReturnType	static int		7503465	1					
ANR	7503549	Identifier	windows_fprintf		7503465	2					
ANR	7503550	ParameterList	"FILE * file , const char * fmt"		7503465	3					
ANR	7503551	Parameter	FILE * file	118:16:3075:3084	7503465	0	True				
ANR	7503552	ParameterType	FILE *		7503465	0					
ANR	7503553	Identifier	file		7503465	1					
ANR	7503554	Parameter	const char * fmt	118:28:3087:3101	7503465	1	True				
ANR	7503555	ParameterType	const char *		7503465	0					
ANR	7503556	Identifier	fmt		7503465	1					
ANR	7503557	CFGEntryNode	ENTRY		7503465		True				
ANR	7503558	CFGExitNode	EXIT		7503465		True				
ANR	7503559	Symbol	args		7503465						
ANR	7503560	Symbol	ret		7503465						
ANR	7503561	Symbol	file		7503465						
ANR	7503562	Symbol	vfprintf		7503465						
ANR	7503563	Symbol	text		7503465						
ANR	7503564	Symbol	fmt		7503465						
ANR	7503565	DeclStmt									
ANR	7503566	Decl							void	void * ( size_t )	MEMENTO_UNDERLYING_MALLOC
ANR	7503567	DeclStmt									
ANR	7503568	Decl							void	void ( void * )	MEMENTO_UNDERLYING_FREE
ANR	7503569	DeclStmt									
ANR	7503570	Decl							void	"void * ( void * , size_t )"	MEMENTO_UNDERLYING_REALLOC
ANR	7503571	DeclStmt									
ANR	7503572	Decl							void	"void * ( size_t , size_t )"	MEMENTO_UNDERLYING_CALLOC
ANR	7503573	DeclStmt									
ANR	7503574	Decl							int	int ( const char * )	atoi
ANR	7503575	DeclStmt									
ANR	7503576	Decl							char	char * ( const char * )	getenv
ANR	7503577	ClassDef	<unnamed>	185:0:4653:4713							
ANR	7503578	ClassDef	<unnamed>	191:8:4756:5110							
ANR	7503579	DeclStmt									
ANR	7503580	Decl							char	char [ Memento_PreSize & 3 ? - 1 : 1 ]	MEMENTO_PRESIZE_MUST_BE_A_MULTIPLE_OF_4
ANR	7503581	DeclStmt									
ANR	7503582	Decl							char	char [ Memento_PostSize & 3 ? - 1 : 1 ]	MEMENTO_POSTSIZE_MUST_BE_A_MULTIPLE_OF_4
ANR	7503583	DeclStmt									
ANR	7503584	Decl							char	char [ Memento_PostSize >= 4 ? 1 : - 1 ]	MEMENTO_POSTSIZE_MUST_BE_AT_LEAST_4
ANR	7503585	DeclStmt									
ANR	7503586	Decl							char	char [ Memento_PreSize >= 4 ? 1 : - 1 ]	MEMENTO_PRESIZE_MUST_BE_AT_LEAST_4
ANR	7503587	DeclStmt									
ANR	7503588	Decl									MEMENTO_SANITY_CHECK_STRUCT
ANR	7503589	ClassDef	<unnamed>	208:0:5801:6003							
ANR	7503590	ClassDef	<unnamed>	217:0:6007:6396							
ANR	7503591	DeclStmt									
ANR	7503592	Decl							const char	const char * [ ]	eventType
ANR	7503593	DeclStmt									
ANR	7503594	Decl							struct Memento_BlkDetails	struct Memento_BlkDetails	Memento_BlkDetails
ANR	7503595	ClassDef	Memento_BlkDetails	271:0:7662:7849							
ANR	7503596	DeclStmt									
ANR	7503597	Decl							Memento_BlkDetails	Memento_BlkDetails *	next
ANR	7503598	DeclStmt									
ANR	7503599	Decl							char	char	type
ANR	7503600	DeclStmt									
ANR	7503601	Decl							char	char	count
ANR	7503602	DeclStmt									
ANR	7503603	Decl							int	int	sequence
ANR	7503604	DeclStmt									
ANR	7503605	Decl							void	void * [ 1 ]	stack
ANR	7503606	DeclStmt									
ANR	7503607	Decl							struct Memento_BlkHeader	struct Memento_BlkHeader	Memento_BlkHeader
ANR	7503608	ClassDef	Memento_BlkHeader	283:0:7935:8570							
ANR	7503609	DeclStmt									
ANR	7503610	Decl							size_t	size_t	rawsize
ANR	7503611	DeclStmt									
ANR	7503612	Decl							int	int	sequence
ANR	7503613	DeclStmt									
ANR	7503614	Decl							int	int	lastCheckedOK
ANR	7503615	DeclStmt									
ANR	7503616	Decl							int	int	flags
ANR	7503617	DeclStmt									
ANR	7503618	Decl							Memento_BlkHeader	Memento_BlkHeader *	next
ANR	7503619	DeclStmt									
ANR	7503620	Decl							Memento_BlkHeader	Memento_BlkHeader *	prev
ANR	7503621	DeclStmt									
ANR	7503622	Decl							const char	const char *	label
ANR	7503623	DeclStmt									
ANR	7503624	Decl							Memento_BlkHeader	Memento_BlkHeader *	child
ANR	7503625	DeclStmt									
ANR	7503626	Decl							Memento_BlkHeader	Memento_BlkHeader *	sibling
ANR	7503627	DeclStmt									
ANR	7503628	Decl							Memento_BlkDetails	Memento_BlkDetails *	details
ANR	7503629	DeclStmt									
ANR	7503630	Decl							Memento_BlkDetails	Memento_BlkDetails * *	details_tail
ANR	7503631	DeclStmt									
ANR	7503632	Decl							char	char [ Memento_PreSize ]	preblk
ANR	7503633	ClassDef	Memento_Blocks	310:8:8699:8797							
ANR	7503634	DeclStmt									
ANR	7503635	Decl							Memento_BlkHeader	Memento_BlkHeader *	head
ANR	7503636	DeclStmt									
ANR	7503637	Decl							Memento_BlkHeader	Memento_BlkHeader *	tail
ANR	7503638	DeclStmt									
ANR	7503639	Decl							Memento_Blocks	Memento_Blocks	Memento_Blocks
ANR	7503640	DeclStmt									
ANR	7503641	Decl							int	int	Memento_mutex
ANR	7503642	Function	Memento_initMutex	320:0:8892:8955							
ANR	7503643	FunctionDef	Memento_initMutex (Memento_mutex * m)		7503642	0					
ANR	7503644	CompoundStatement		321:0:8940:8955	7503642	0					
ANR	7503645	ExpressionStatement	( void ) m	322:4:8946:8953	7503642	0	True				
ANR	7503646	CastExpression	( void ) m		7503642	0					
ANR	7503647	CastTarget	void		7503642	0					
ANR	7503648	Identifier	m		7503642	1					
ANR	7503649	ReturnType	static void		7503642	1					
ANR	7503650	Identifier	Memento_initMutex		7503642	2					
ANR	7503651	ParameterList	Memento_mutex * m		7503642	3					
ANR	7503652	Parameter	Memento_mutex * m	320:30:8922:8937	7503642	0	True				
ANR	7503653	ParameterType	Memento_mutex *		7503642	0					
ANR	7503654	Identifier	m		7503642	1					
ANR	7503655	CFGEntryNode	ENTRY		7503642		True				
ANR	7503656	CFGExitNode	EXIT		7503642		True				
ANR	7503657	Symbol	m		7503642						
ANR	7503658	DeclStmt									
ANR	7503659	Decl							CRITICAL_SECTION	CRITICAL_SECTION	Memento_mutex
ANR	7503660	Function	Memento_initMutex	333:0:9147:9231							
ANR	7503661	FunctionDef	Memento_initMutex (Memento_mutex * m)		7503660	0					
ANR	7503662	CompoundStatement		334:0:9195:9231	7503660	0					
ANR	7503663	ExpressionStatement	InitializeCriticalSection ( m )	335:4:9201:9229	7503660	0	True				
ANR	7503664	CallExpression	InitializeCriticalSection ( m )		7503660	0					
ANR	7503665	Callee	InitializeCriticalSection		7503660	0					
ANR	7503666	Identifier	InitializeCriticalSection		7503660	0					
ANR	7503667	ArgumentList	m		7503660	1					
ANR	7503668	Argument	m		7503660	0					
ANR	7503669	Identifier	m		7503660	0					
ANR	7503670	ReturnType	static void		7503660	1					
ANR	7503671	Identifier	Memento_initMutex		7503660	2					
ANR	7503672	ParameterList	Memento_mutex * m		7503660	3					
ANR	7503673	Parameter	Memento_mutex * m	333:30:9177:9192	7503660	0	True				
ANR	7503674	ParameterType	Memento_mutex *		7503660	0					
ANR	7503675	Identifier	m		7503660	1					
ANR	7503676	CFGEntryNode	ENTRY		7503660		True				
ANR	7503677	CFGExitNode	EXIT		7503660		True				
ANR	7503678	Symbol	m		7503660						
ANR	7503679	DeclStmt									
ANR	7503680	Decl							pthread_mutex_t	pthread_mutex_t	Memento_mutex
ANR	7503681	Function	Memento_initMutex	347:0:9442:9525							
ANR	7503682	FunctionDef	Memento_initMutex (Memento_mutex * m)		7503681	0					
ANR	7503683	CompoundStatement		348:0:9490:9525	7503681	0					
ANR	7503684	ExpressionStatement	"pthread_mutex_init ( m , NULL )"	349:4:9496:9523	7503681	0	True				
ANR	7503685	CallExpression	"pthread_mutex_init ( m , NULL )"		7503681	0					
ANR	7503686	Callee	pthread_mutex_init		7503681	0					
ANR	7503687	Identifier	pthread_mutex_init		7503681	0					
ANR	7503688	ArgumentList	m		7503681	1					
ANR	7503689	Argument	m		7503681	0					
ANR	7503690	Identifier	m		7503681	0					
ANR	7503691	Argument	NULL		7503681	1					
ANR	7503692	Identifier	NULL		7503681	0					
ANR	7503693	ReturnType	static void		7503681	1					
ANR	7503694	Identifier	Memento_initMutex		7503681	2					
ANR	7503695	ParameterList	Memento_mutex * m		7503681	3					
ANR	7503696	Parameter	Memento_mutex * m	347:30:9472:9487	7503681	0	True				
ANR	7503697	ParameterType	Memento_mutex *		7503681	0					
ANR	7503698	Identifier	m		7503681	1					
ANR	7503699	CFGEntryNode	ENTRY		7503681		True				
ANR	7503700	CFGExitNode	EXIT		7503681		True				
ANR	7503701	Symbol	NULL		7503681						
ANR	7503702	Symbol	m		7503681						
ANR	7503703	ClassDef	<unnamed>	361:7:9720:10552							
ANR	7503704	DeclStmt									
ANR	7503705	Decl							int	int	inited
ANR	7503706	DeclStmt									
ANR	7503707	Decl							Memento_Blocks	Memento_Blocks	used
ANR	7503708	DeclStmt									
ANR	7503709	Decl							Memento_Blocks	Memento_Blocks	free
ANR	7503710	DeclStmt									
ANR	7503711	Decl							size_t	size_t	freeListSize
ANR	7503712	DeclStmt									
ANR	7503713	Decl							int	int	sequence
ANR	7503714	DeclStmt									
ANR	7503715	Decl							int	int	paranoia
ANR	7503716	DeclStmt									
ANR	7503717	Decl							int	int	paranoidAt
ANR	7503718	DeclStmt									
ANR	7503719	Decl							int	int	countdown
ANR	7503720	DeclStmt									
ANR	7503721	Decl							int	int	lastChecked
ANR	7503722	DeclStmt									
ANR	7503723	Decl							int	int	breakAt
ANR	7503724	DeclStmt									
ANR	7503725	Decl							int	int	failAt
ANR	7503726	DeclStmt									
ANR	7503727	Decl							int	int	failing
ANR	7503728	DeclStmt									
ANR	7503729	Decl							int	int	nextFailAt
ANR	7503730	DeclStmt									
ANR	7503731	Decl							int	int	squeezeAt
ANR	7503732	DeclStmt									
ANR	7503733	Decl							int	int	squeezing
ANR	7503734	DeclStmt									
ANR	7503735	Decl							int	int	segv
ANR	7503736	DeclStmt									
ANR	7503737	Decl							int	int	pattern
ANR	7503738	DeclStmt									
ANR	7503739	Decl							int	int	nextPattern
ANR	7503740	DeclStmt									
ANR	7503741	Decl							int	int	patternBit
ANR	7503742	DeclStmt									
ANR	7503743	Decl							int	int	leaking
ANR	7503744	DeclStmt									
ANR	7503745	Decl							size_t	size_t	maxMemory
ANR	7503746	DeclStmt									
ANR	7503747	Decl							size_t	size_t	alloc
ANR	7503748	DeclStmt									
ANR	7503749	Decl							size_t	size_t	peakAlloc
ANR	7503750	DeclStmt									
ANR	7503751	Decl							size_t	size_t	totalAlloc
ANR	7503752	DeclStmt									
ANR	7503753	Decl							size_t	size_t	numMallocs
ANR	7503754	DeclStmt									
ANR	7503755	Decl							size_t	size_t	numFrees
ANR	7503756	DeclStmt									
ANR	7503757	Decl							size_t	size_t	numReallocs
ANR	7503758	DeclStmt									
ANR	7503759	Decl							Memento_mutex	Memento_mutex	mutex
ANR	7503760	DeclStmt									
ANR	7503761	Decl									memento
ANR	7503762	ClassDef	<unnamed>	404:0:11093:11133							
ANR	7503763	DeclStmt									
ANR	7503764	Decl							extern size_t	"extern size_t ( void * * , int )"	backtrace
ANR	7503765	DeclStmt									
ANR	7503766	Decl							extern void	"extern void ( void * * , size_t , int )"	backtrace_symbols_fd
ANR	7503767	DeclStmt									
ANR	7503768	Decl							extern char	"extern char * * ( void * * , size_t )"	backtrace_symbols
ANR	7503769	DeclStmt									
ANR	7503770	Decl							"void ( * ) ( void * data , const char * msg , int errnum )"	"void ( * ) ( void * data , const char * msg , int errnum )"	backtrace_error_callback
ANR	7503771	DeclStmt									
ANR	7503772	Decl							"struct backtrace_state * ( * ) ( const char * filename , int threaded , backtrace_error_callback error_callback , void * data )"	"struct backtrace_state * ( * ) ( const char * filename , int threaded , backtrace_error_callback error_callback , void * data )"	backtrace_create_state_type
ANR	7503773	DeclStmt									
ANR	7503774	Decl							"int ( * ) ( void * data , uintptr_t pc , const char * filename , int lineno , const char * function )"	"int ( * ) ( void * data , uintptr_t pc , const char * filename , int lineno , const char * function )"	backtrace_full_callback
ANR	7503775	DeclStmt									
ANR	7503776	Decl							"int ( * ) ( struct backtrace_state * state , uintptr_t pc , backtrace_full_callback callback , backtrace_error_callback error_callback , void * data )"	"int ( * ) ( struct backtrace_state * state , uintptr_t pc , backtrace_full_callback callback , backtrace_error_callback error_callback , void * data )"	backtrace_pcinfo_type
ANR	7503777	DeclStmt									
ANR	7503778	Decl							"void ( * ) ( void * data , uintptr_t pc , const char * symname , uintptr_t symval , uintptr_t symsize )"	"void ( * ) ( void * data , uintptr_t pc , const char * symname , uintptr_t symval , uintptr_t symsize )"	backtrace_syminfo_callback
ANR	7503779	DeclStmt									
ANR	7503780	Decl							"int ( * ) ( struct backtrace_state * state , uintptr_t addr , backtrace_syminfo_callback callback , backtrace_error_callback error_callback , void * data )"	"int ( * ) ( struct backtrace_state * state , uintptr_t addr , backtrace_syminfo_callback callback , backtrace_error_callback error_callback , void * data )"	backtrace_syminfo_type
ANR	7503781	DeclStmt									
ANR	7503782	Decl							backtrace_syminfo_type	backtrace_syminfo_type	backtrace_syminfo
ANR	7503783	DeclStmt									
ANR	7503784	Decl							backtrace_create_state_type	backtrace_create_state_type	backtrace_create_state
ANR	7503785	DeclStmt									
ANR	7503786	Decl							backtrace_pcinfo_type	backtrace_pcinfo_type	backtrace_pcinfo
ANR	7503787	DeclStmt									
ANR	7503788	Decl							struct backtrace_state	struct backtrace_state *	my_backtrace_state
ANR	7503789	DeclStmt									
ANR	7503790	Decl							void	void *	libbt
ANR	7503791	DeclStmt									
ANR	7503792	Decl							void ( * ) ( void * address )	void ( * ) ( void * address )	print_stack_value
ANR	7503793	DeclStmt									
ANR	7503794	Decl							char	char [ 4096 ]	backtrace_exe
ANR	7503795	DeclStmt									
ANR	7503796	Decl							void	void *	current_addr
ANR	7503797	Function	error2_cb	456:0:13198:13263							
ANR	7503798	FunctionDef	"error2_cb (void * data , const char * msg , int errnum)"		7503797	0					
ANR	7503799	CompoundStatement		457:0:13261:13263	7503797	0					
ANR	7503800	ReturnType	static void		7503797	1					
ANR	7503801	Identifier	error2_cb		7503797	2					
ANR	7503802	ParameterList	"void * data , const char * msg , int errnum"		7503797	3					
ANR	7503803	Parameter	void * data	456:22:13220:13229	7503797	0	True				
ANR	7503804	ParameterType	void *		7503797	0					
ANR	7503805	Identifier	data		7503797	1					
ANR	7503806	Parameter	const char * msg	456:34:13232:13246	7503797	1	True				
ANR	7503807	ParameterType	const char *		7503797	0					
ANR	7503808	Identifier	msg		7503797	1					
ANR	7503809	Parameter	int errnum	456:51:13249:13258	7503797	2	True				
ANR	7503810	ParameterType	int		7503797	0					
ANR	7503811	Identifier	errnum		7503797	1					
ANR	7503812	CFGEntryNode	ENTRY		7503797		True				
ANR	7503813	CFGExitNode	EXIT		7503797		True				
ANR	7503814	Symbol	msg		7503797						
ANR	7503815	Symbol	data		7503797						
ANR	7503816	Symbol	errnum		7503797						
ANR	7503817	Function	syminfo_cb	460:0:13266:13554							
ANR	7503818	FunctionDef	"syminfo_cb (void * data , uintptr_t pc , const char * symname , uintptr_t symval , uintptr_t symsize)"		7503817	0					
ANR	7503819	CompoundStatement		461:0:13373:13554	7503817	0					
ANR	7503820	IfStatement	if ( sizeof ( void * ) == 4 )		7503817	0					
ANR	7503821	Condition	sizeof ( void * ) == 4	462:8:13383:13401	7503817	0	True				
ANR	7503822	EqualityExpression	sizeof ( void * ) == 4		7503817	0		==			
ANR	7503823	SizeofExpression	sizeof ( void * )		7503817	0					
ANR	7503824	Sizeof	sizeof		7503817	0					
ANR	7503825	SizeofOperand	void *		7503817	1					
ANR	7503826	PrimaryExpression	4		7503817	1					
ANR	7503827	ExpressionStatement	"fprintf ( stderr , ""    0x%08lx %s\\n"" , pc , symname ? symname : ""?"" )"	463:8:13412:13472	7503817	1	True				
ANR	7503828	CallExpression	"fprintf ( stderr , ""    0x%08lx %s\\n"" , pc , symname ? symname : ""?"" )"		7503817	0					
ANR	7503829	Callee	fprintf		7503817	0					
ANR	7503830	Identifier	fprintf		7503817	0					
ANR	7503831	ArgumentList	stderr		7503817	1					
ANR	7503832	Argument	stderr		7503817	0					
ANR	7503833	Identifier	stderr		7503817	0					
ANR	7503834	Argument	"""    0x%08lx %s\\n"""		7503817	1					
ANR	7503835	PrimaryExpression	"""    0x%08lx %s\\n"""		7503817	0					
ANR	7503836	Argument	pc		7503817	2					
ANR	7503837	Identifier	pc		7503817	0					
ANR	7503838	Argument	"symname ? symname : ""?"""		7503817	3					
ANR	7503839	ConditionalExpression	"symname ? symname : ""?"""		7503817	0					
ANR	7503840	Condition	symname		7503817	0					
ANR	7503841	Identifier	symname		7503817	0					
ANR	7503842	Identifier	symname		7503817	1					
ANR	7503843	PrimaryExpression	"""?"""		7503817	2					
ANR	7503844	ElseStatement	else		7503817	0					
ANR	7503845	ExpressionStatement	"fprintf ( stderr , ""    0x%016lx %s\\n"" , pc , symname ? symname : ""?"" )"	465:8:13491:13552	7503817	0	True				
ANR	7503846	CallExpression	"fprintf ( stderr , ""    0x%016lx %s\\n"" , pc , symname ? symname : ""?"" )"		7503817	0					
ANR	7503847	Callee	fprintf		7503817	0					
ANR	7503848	Identifier	fprintf		7503817	0					
ANR	7503849	ArgumentList	stderr		7503817	1					
ANR	7503850	Argument	stderr		7503817	0					
ANR	7503851	Identifier	stderr		7503817	0					
ANR	7503852	Argument	"""    0x%016lx %s\\n"""		7503817	1					
ANR	7503853	PrimaryExpression	"""    0x%016lx %s\\n"""		7503817	0					
ANR	7503854	Argument	pc		7503817	2					
ANR	7503855	Identifier	pc		7503817	0					
ANR	7503856	Argument	"symname ? symname : ""?"""		7503817	3					
ANR	7503857	ConditionalExpression	"symname ? symname : ""?"""		7503817	0					
ANR	7503858	Condition	symname		7503817	0					
ANR	7503859	Identifier	symname		7503817	0					
ANR	7503860	Identifier	symname		7503817	1					
ANR	7503861	PrimaryExpression	"""?"""		7503817	2					
ANR	7503862	ReturnType	static void		7503817	1					
ANR	7503863	Identifier	syminfo_cb		7503817	2					
ANR	7503864	ParameterList	"void * data , uintptr_t pc , const char * symname , uintptr_t symval , uintptr_t symsize"		7503817	3					
ANR	7503865	Parameter	void * data	460:23:13289:13298	7503817	0	True				
ANR	7503866	ParameterType	void *		7503817	0					
ANR	7503867	Identifier	data		7503817	1					
ANR	7503868	Parameter	uintptr_t pc	460:35:13301:13312	7503817	1	True				
ANR	7503869	ParameterType	uintptr_t		7503817	0					
ANR	7503870	Identifier	pc		7503817	1					
ANR	7503871	Parameter	const char * symname	460:49:13315:13333	7503817	2	True				
ANR	7503872	ParameterType	const char *		7503817	0					
ANR	7503873	Identifier	symname		7503817	1					
ANR	7503874	Parameter	uintptr_t symval	460:70:13336:13351	7503817	3	True				
ANR	7503875	ParameterType	uintptr_t		7503817	0					
ANR	7503876	Identifier	symval		7503817	1					
ANR	7503877	Parameter	uintptr_t symsize	460:88:13354:13370	7503817	4	True				
ANR	7503878	ParameterType	uintptr_t		7503817	0					
ANR	7503879	Identifier	symsize		7503817	1					
ANR	7503880	CFGEntryNode	ENTRY		7503817		True				
ANR	7503881	CFGExitNode	EXIT		7503817		True				
ANR	7503882	Symbol	pc		7503817						
ANR	7503883	Symbol	symval		7503817						
ANR	7503884	Symbol	data		7503817						
ANR	7503885	Symbol	symsize		7503817						
ANR	7503886	Symbol	symname		7503817						
ANR	7503887	Symbol	stderr		7503817						
ANR	7503888	Function	error_cb	468:0:13557:13802							
ANR	7503889	FunctionDef	"error_cb (void * data , const char * msg , int errnum)"		7503888	0					
ANR	7503890	CompoundStatement		469:0:13619:13802	7503888	0					
ANR	7503891	ExpressionStatement	"backtrace_syminfo ( my_backtrace_state , ( uintptr_t ) current_addr , syminfo_cb , error2_cb , NULL )"	470:4:13625:13800	7503888	0	True				
ANR	7503892	CallExpression	"backtrace_syminfo ( my_backtrace_state , ( uintptr_t ) current_addr , syminfo_cb , error2_cb , NULL )"		7503888	0					
ANR	7503893	Callee	backtrace_syminfo		7503888	0					
ANR	7503894	Identifier	backtrace_syminfo		7503888	0					
ANR	7503895	ArgumentList	my_backtrace_state		7503888	1					
ANR	7503896	Argument	my_backtrace_state		7503888	0					
ANR	7503897	Identifier	my_backtrace_state		7503888	0					
ANR	7503898	Argument	( uintptr_t ) current_addr		7503888	1					
ANR	7503899	CastExpression	( uintptr_t ) current_addr		7503888	0					
ANR	7503900	CastTarget	uintptr_t		7503888	0					
ANR	7503901	Identifier	current_addr		7503888	1					
ANR	7503902	Argument	syminfo_cb		7503888	2					
ANR	7503903	Identifier	syminfo_cb		7503888	0					
ANR	7503904	Argument	error2_cb		7503888	3					
ANR	7503905	Identifier	error2_cb		7503888	0					
ANR	7503906	Argument	NULL		7503888	4					
ANR	7503907	Identifier	NULL		7503888	0					
ANR	7503908	ReturnType	static void		7503888	1					
ANR	7503909	Identifier	error_cb		7503888	2					
ANR	7503910	ParameterList	"void * data , const char * msg , int errnum"		7503888	3					
ANR	7503911	Parameter	void * data	468:21:13578:13587	7503888	0	True				
ANR	7503912	ParameterType	void *		7503888	0					
ANR	7503913	Identifier	data		7503888	1					
ANR	7503914	Parameter	const char * msg	468:33:13590:13604	7503888	1	True				
ANR	7503915	ParameterType	const char *		7503888	0					
ANR	7503916	Identifier	msg		7503888	1					
ANR	7503917	Parameter	int errnum	468:50:13607:13616	7503888	2	True				
ANR	7503918	ParameterType	int		7503888	0					
ANR	7503919	Identifier	errnum		7503888	1					
ANR	7503920	CFGEntryNode	ENTRY		7503888		True				
ANR	7503921	CFGExitNode	EXIT		7503888		True				
ANR	7503922	Symbol	msg		7503888						
ANR	7503923	Symbol	error2_cb		7503888						
ANR	7503924	Symbol	syminfo_cb		7503888						
ANR	7503925	Symbol	current_addr		7503888						
ANR	7503926	Symbol	NULL		7503888						
ANR	7503927	Symbol	data		7503888						
ANR	7503928	Symbol	errnum		7503888						
ANR	7503929	Symbol	my_backtrace_state		7503888						
ANR	7503930	Function	full_cb	477:0:13805:14130							
ANR	7503931	FunctionDef	"full_cb (void * data , uintptr_t pc , const char * fname , int line , const char * fn)"		7503930	0					
ANR	7503932	CompoundStatement		478:0:13895:14130	7503930	0					
ANR	7503933	IfStatement	if ( sizeof ( void * ) == 4 )		7503930	0					
ANR	7503934	Condition	sizeof ( void * ) == 4	479:8:13905:13923	7503930	0	True				
ANR	7503935	EqualityExpression	sizeof ( void * ) == 4		7503930	0		==			
ANR	7503936	SizeofExpression	sizeof ( void * )		7503930	0					
ANR	7503937	Sizeof	sizeof		7503930	0					
ANR	7503938	SizeofOperand	void *		7503930	1					
ANR	7503939	PrimaryExpression	4		7503930	1					
ANR	7503940	ExpressionStatement	"fprintf ( stderr , ""    0x%08lx %s(%s:%d)\\n"" , pc , fn ? fn : ""?"" , fname ? fname : ""?"" , line )"	480:8:13934:14014	7503930	1	True				
ANR	7503941	CallExpression	"fprintf ( stderr , ""    0x%08lx %s(%s:%d)\\n"" , pc , fn ? fn : ""?"" , fname ? fname : ""?"" , line )"		7503930	0					
ANR	7503942	Callee	fprintf		7503930	0					
ANR	7503943	Identifier	fprintf		7503930	0					
ANR	7503944	ArgumentList	stderr		7503930	1					
ANR	7503945	Argument	stderr		7503930	0					
ANR	7503946	Identifier	stderr		7503930	0					
ANR	7503947	Argument	"""    0x%08lx %s(%s:%d)\\n"""		7503930	1					
ANR	7503948	PrimaryExpression	"""    0x%08lx %s(%s:%d)\\n"""		7503930	0					
ANR	7503949	Argument	pc		7503930	2					
ANR	7503950	Identifier	pc		7503930	0					
ANR	7503951	Argument	"fn ? fn : ""?"""		7503930	3					
ANR	7503952	ConditionalExpression	"fn ? fn : ""?"""		7503930	0					
ANR	7503953	Condition	fn		7503930	0					
ANR	7503954	Identifier	fn		7503930	0					
ANR	7503955	Identifier	fn		7503930	1					
ANR	7503956	PrimaryExpression	"""?"""		7503930	2					
ANR	7503957	Argument	"fname ? fname : ""?"""		7503930	4					
ANR	7503958	ConditionalExpression	"fname ? fname : ""?"""		7503930	0					
ANR	7503959	Condition	fname		7503930	0					
ANR	7503960	Identifier	fname		7503930	0					
ANR	7503961	Identifier	fname		7503930	1					
ANR	7503962	PrimaryExpression	"""?"""		7503930	2					
ANR	7503963	Argument	line		7503930	5					
ANR	7503964	Identifier	line		7503930	0					
ANR	7503965	ElseStatement	else		7503930	0					
ANR	7503966	ExpressionStatement	"fprintf ( stderr , ""    0x%016lx %s(%s:%d)\\n"" , pc , fn ? fn : ""?"" , fname ? fname : ""?"" , line )"	482:8:14033:14114	7503930	0	True				
ANR	7503967	CallExpression	"fprintf ( stderr , ""    0x%016lx %s(%s:%d)\\n"" , pc , fn ? fn : ""?"" , fname ? fname : ""?"" , line )"		7503930	0					
ANR	7503968	Callee	fprintf		7503930	0					
ANR	7503969	Identifier	fprintf		7503930	0					
ANR	7503970	ArgumentList	stderr		7503930	1					
ANR	7503971	Argument	stderr		7503930	0					
ANR	7503972	Identifier	stderr		7503930	0					
ANR	7503973	Argument	"""    0x%016lx %s(%s:%d)\\n"""		7503930	1					
ANR	7503974	PrimaryExpression	"""    0x%016lx %s(%s:%d)\\n"""		7503930	0					
ANR	7503975	Argument	pc		7503930	2					
ANR	7503976	Identifier	pc		7503930	0					
ANR	7503977	Argument	"fn ? fn : ""?"""		7503930	3					
ANR	7503978	ConditionalExpression	"fn ? fn : ""?"""		7503930	0					
ANR	7503979	Condition	fn		7503930	0					
ANR	7503980	Identifier	fn		7503930	0					
ANR	7503981	Identifier	fn		7503930	1					
ANR	7503982	PrimaryExpression	"""?"""		7503930	2					
ANR	7503983	Argument	"fname ? fname : ""?"""		7503930	4					
ANR	7503984	ConditionalExpression	"fname ? fname : ""?"""		7503930	0					
ANR	7503985	Condition	fname		7503930	0					
ANR	7503986	Identifier	fname		7503930	0					
ANR	7503987	Identifier	fname		7503930	1					
ANR	7503988	PrimaryExpression	"""?"""		7503930	2					
ANR	7503989	Argument	line		7503930	5					
ANR	7503990	Identifier	line		7503930	0					
ANR	7503991	ReturnStatement	return 0 ;	483:4:14120:14128	7503930	1	True				
ANR	7503992	PrimaryExpression	0		7503930	0					
ANR	7503993	ReturnType	static int		7503930	1					
ANR	7503994	Identifier	full_cb		7503930	2					
ANR	7503995	ParameterList	"void * data , uintptr_t pc , const char * fname , int line , const char * fn"		7503930	3					
ANR	7503996	Parameter	void * data	477:19:13824:13833	7503930	0	True				
ANR	7503997	ParameterType	void *		7503930	0					
ANR	7503998	Identifier	data		7503930	1					
ANR	7503999	Parameter	uintptr_t pc	477:31:13836:13847	7503930	1	True				
ANR	7504000	ParameterType	uintptr_t		7503930	0					
ANR	7504001	Identifier	pc		7503930	1					
ANR	7504002	Parameter	const char * fname	477:45:13850:13866	7503930	2	True				
ANR	7504003	ParameterType	const char *		7503930	0					
ANR	7504004	Identifier	fname		7503930	1					
ANR	7504005	Parameter	int line	477:64:13869:13876	7503930	3	True				
ANR	7504006	ParameterType	int		7503930	0					
ANR	7504007	Identifier	line		7503930	1					
ANR	7504008	Parameter	const char * fn	477:74:13879:13892	7503930	4	True				
ANR	7504009	ParameterType	const char *		7503930	0					
ANR	7504010	Identifier	fn		7503930	1					
ANR	7504011	CFGEntryNode	ENTRY		7503930		True				
ANR	7504012	CFGExitNode	EXIT		7503930		True				
ANR	7504013	Symbol	fname		7503930						
ANR	7504014	Symbol	pc		7503930						
ANR	7504015	Symbol	data		7503930						
ANR	7504016	Symbol	line		7503930						
ANR	7504017	Symbol	fn		7503930						
ANR	7504018	Symbol	stderr		7503930						
ANR	7504019	Function	print_stack_libbt	486:0:14133:14370							
ANR	7504020	FunctionDef	print_stack_libbt (void * addr)		7504019	0					
ANR	7504021	CompoundStatement		487:0:14175:14370	7504019	0					
ANR	7504022	ExpressionStatement	current_addr = addr	488:4:14181:14200	7504019	0	True				
ANR	7504023	AssignmentExpression	current_addr = addr		7504019	0		=			
ANR	7504024	Identifier	current_addr		7504019	0					
ANR	7504025	Identifier	addr		7504019	1					
ANR	7504026	ExpressionStatement	"backtrace_pcinfo ( my_backtrace_state , ( uintptr_t ) addr , full_cb , error_cb , NULL )"	489:4:14206:14368	7504019	1	True				
ANR	7504027	CallExpression	"backtrace_pcinfo ( my_backtrace_state , ( uintptr_t ) addr , full_cb , error_cb , NULL )"		7504019	0					
ANR	7504028	Callee	backtrace_pcinfo		7504019	0					
ANR	7504029	Identifier	backtrace_pcinfo		7504019	0					
ANR	7504030	ArgumentList	my_backtrace_state		7504019	1					
ANR	7504031	Argument	my_backtrace_state		7504019	0					
ANR	7504032	Identifier	my_backtrace_state		7504019	0					
ANR	7504033	Argument	( uintptr_t ) addr		7504019	1					
ANR	7504034	CastExpression	( uintptr_t ) addr		7504019	0					
ANR	7504035	CastTarget	uintptr_t		7504019	0					
ANR	7504036	Identifier	addr		7504019	1					
ANR	7504037	Argument	full_cb		7504019	2					
ANR	7504038	Identifier	full_cb		7504019	0					
ANR	7504039	Argument	error_cb		7504019	3					
ANR	7504040	Identifier	error_cb		7504019	0					
ANR	7504041	Argument	NULL		7504019	4					
ANR	7504042	Identifier	NULL		7504019	0					
ANR	7504043	ReturnType	static void		7504019	1					
ANR	7504044	Identifier	print_stack_libbt		7504019	2					
ANR	7504045	ParameterList	void * addr		7504019	3					
ANR	7504046	Parameter	void * addr	486:30:14163:14172	7504019	0	True				
ANR	7504047	ParameterType	void *		7504019	0					
ANR	7504048	Identifier	addr		7504019	1					
ANR	7504049	CFGEntryNode	ENTRY		7504019		True				
ANR	7504050	CFGExitNode	EXIT		7504019		True				
ANR	7504051	Symbol	error_cb		7504019						
ANR	7504052	Symbol	current_addr		7504019						
ANR	7504053	Symbol	NULL		7504019						
ANR	7504054	Symbol	full_cb		7504019						
ANR	7504055	Symbol	addr		7504019						
ANR	7504056	Symbol	my_backtrace_state		7504019						
ANR	7504057	Function	print_stack_libbt_failed	496:0:14373:14802							
ANR	7504058	FunctionDef	print_stack_libbt_failed (void * addr)		7504057	0					
ANR	7504059	CompoundStatement		497:0:14422:14802	7504057	0					
ANR	7504060	IdentifierDeclStatement	"char * * strings = backtrace_symbols ( & addr , 1 ) ;"	498:4:14428:14472	7504057	0	True				
ANR	7504061	IdentifierDecl	"* * strings = backtrace_symbols ( & addr , 1 )"		7504057	0					
ANR	7504062	IdentifierDeclType	char * *		7504057	0					
ANR	7504063	Identifier	strings		7504057	1					
ANR	7504064	AssignmentExpression	"* * strings = backtrace_symbols ( & addr , 1 )"		7504057	2		=			
ANR	7504065	Identifier	strings		7504057	0					
ANR	7504066	CallExpression	"backtrace_symbols ( & addr , 1 )"		7504057	1					
ANR	7504067	Callee	backtrace_symbols		7504057	0					
ANR	7504068	Identifier	backtrace_symbols		7504057	0					
ANR	7504069	ArgumentList	& addr		7504057	1					
ANR	7504070	Argument	& addr		7504057	0					
ANR	7504071	UnaryOperationExpression	& addr		7504057	0					
ANR	7504072	UnaryOperator	&		7504057	0					
ANR	7504073	Identifier	addr		7504057	1					
ANR	7504074	Argument	1		7504057	1					
ANR	7504075	PrimaryExpression	1		7504057	0					
ANR	7504076	IfStatement	if ( strings == NULL || strings [ 0 ] == NULL )		7504057	1					
ANR	7504077	Condition	strings == NULL || strings [ 0 ] == NULL	500:8:14483:14519	7504057	0	True				
ANR	7504078	OrExpression	strings == NULL || strings [ 0 ] == NULL		7504057	0		||			
ANR	7504079	EqualityExpression	strings == NULL		7504057	0		==			
ANR	7504080	Identifier	strings		7504057	0					
ANR	7504081	Identifier	NULL		7504057	1					
ANR	7504082	EqualityExpression	strings [ 0 ] == NULL		7504057	1		==			
ANR	7504083	ArrayIndexing	strings [ 0 ]		7504057	0					
ANR	7504084	Identifier	strings		7504057	0					
ANR	7504085	PrimaryExpression	0		7504057	1					
ANR	7504086	Identifier	NULL		7504057	1					
ANR	7504087	CompoundStatement		5:4:103:103	7504057	1					
ANR	7504088	IfStatement	if ( sizeof ( void * ) == 4 )		7504057	0					
ANR	7504089	Condition	sizeof ( void * ) == 4	502:12:14540:14558	7504057	0	True				
ANR	7504090	EqualityExpression	sizeof ( void * ) == 4		7504057	0		==			
ANR	7504091	SizeofExpression	sizeof ( void * )		7504057	0					
ANR	7504092	Sizeof	sizeof		7504057	0					
ANR	7504093	SizeofOperand	void *		7504057	1					
ANR	7504094	PrimaryExpression	4		7504057	1					
ANR	7504095	ExpressionStatement	"fprintf ( stderr , ""    [0x%08lx]\\n"" , ( uintptr_t ) addr )"	503:12:14573:14624	7504057	1	True				
ANR	7504096	CallExpression	"fprintf ( stderr , ""    [0x%08lx]\\n"" , ( uintptr_t ) addr )"		7504057	0					
ANR	7504097	Callee	fprintf		7504057	0					
ANR	7504098	Identifier	fprintf		7504057	0					
ANR	7504099	ArgumentList	stderr		7504057	1					
ANR	7504100	Argument	stderr		7504057	0					
ANR	7504101	Identifier	stderr		7504057	0					
ANR	7504102	Argument	"""    [0x%08lx]\\n"""		7504057	1					
ANR	7504103	PrimaryExpression	"""    [0x%08lx]\\n"""		7504057	0					
ANR	7504104	Argument	( uintptr_t ) addr		7504057	2					
ANR	7504105	CastExpression	( uintptr_t ) addr		7504057	0					
ANR	7504106	CastTarget	uintptr_t		7504057	0					
ANR	7504107	Identifier	addr		7504057	1					
ANR	7504108	ElseStatement	else		7504057	0					
ANR	7504109	ExpressionStatement	"fprintf ( stderr , ""    [0x%016lx]\\n"" , ( uintptr_t ) addr )"	505:12:14651:14703	7504057	0	True				
ANR	7504110	CallExpression	"fprintf ( stderr , ""    [0x%016lx]\\n"" , ( uintptr_t ) addr )"		7504057	0					
ANR	7504111	Callee	fprintf		7504057	0					
ANR	7504112	Identifier	fprintf		7504057	0					
ANR	7504113	ArgumentList	stderr		7504057	1					
ANR	7504114	Argument	stderr		7504057	0					
ANR	7504115	Identifier	stderr		7504057	0					
ANR	7504116	Argument	"""    [0x%016lx]\\n"""		7504057	1					
ANR	7504117	PrimaryExpression	"""    [0x%016lx]\\n"""		7504057	0					
ANR	7504118	Argument	( uintptr_t ) addr		7504057	2					
ANR	7504119	CastExpression	( uintptr_t ) addr		7504057	0					
ANR	7504120	CastTarget	uintptr_t		7504057	0					
ANR	7504121	Identifier	addr		7504057	1					
ANR	7504122	ElseStatement	else		7504057	0					
ANR	7504123	CompoundStatement		12:4:301:301	7504057	0					
ANR	7504124	ExpressionStatement	"fprintf ( stderr , ""    %s\\n"" , strings [ 0 ] )"	509:8:14734:14773	7504057	0	True				
ANR	7504125	CallExpression	"fprintf ( stderr , ""    %s\\n"" , strings [ 0 ] )"		7504057	0					
ANR	7504126	Callee	fprintf		7504057	0					
ANR	7504127	Identifier	fprintf		7504057	0					
ANR	7504128	ArgumentList	stderr		7504057	1					
ANR	7504129	Argument	stderr		7504057	0					
ANR	7504130	Identifier	stderr		7504057	0					
ANR	7504131	Argument	"""    %s\\n"""		7504057	1					
ANR	7504132	PrimaryExpression	"""    %s\\n"""		7504057	0					
ANR	7504133	Argument	strings [ 0 ]		7504057	2					
ANR	7504134	ArrayIndexing	strings [ 0 ]		7504057	0					
ANR	7504135	Identifier	strings		7504057	0					
ANR	7504136	PrimaryExpression	0		7504057	1					
ANR	7504137	ExpressionStatement	( free ) ( strings )	511:4:14785:14800	7504057	2	True				
ANR	7504138	CastExpression	( free ) ( strings )		7504057	0					
ANR	7504139	CastTarget	free		7504057	0					
ANR	7504140	Identifier	strings		7504057	1					
ANR	7504141	ReturnType	static void		7504057	1					
ANR	7504142	Identifier	print_stack_libbt_failed		7504057	2					
ANR	7504143	ParameterList	void * addr		7504057	3					
ANR	7504144	Parameter	void * addr	496:37:14410:14419	7504057	0	True				
ANR	7504145	ParameterType	void *		7504057	0					
ANR	7504146	Identifier	addr		7504057	1					
ANR	7504147	CFGEntryNode	ENTRY		7504057		True				
ANR	7504148	CFGExitNode	EXIT		7504057		True				
ANR	7504149	Symbol	& addr		7504057						
ANR	7504150	Symbol	NULL		7504057						
ANR	7504151	Symbol	strings		7504057						
ANR	7504152	Symbol	* strings		7504057						
ANR	7504153	Symbol	addr		7504057						
ANR	7504154	Symbol	stderr		7504057						
ANR	7504155	Symbol	backtrace_symbols		7504057						
ANR	7504156	Function	init_libbt	514:0:14805:16143							
ANR	7504157	FunctionDef	init_libbt ()		7504156	0					
ANR	7504158	CompoundStatement		515:0:14833:16143	7504156	0					
ANR	7504159	ExpressionStatement	"libbt = dlopen ( ""libbacktrace.so"" , RTLD_LAZY )"	516:4:14839:14883	7504156	0	True				
ANR	7504160	AssignmentExpression	"libbt = dlopen ( ""libbacktrace.so"" , RTLD_LAZY )"		7504156	0		=			
ANR	7504161	Identifier	libbt		7504156	0					
ANR	7504162	CallExpression	"dlopen ( ""libbacktrace.so"" , RTLD_LAZY )"		7504156	1					
ANR	7504163	Callee	dlopen		7504156	0					
ANR	7504164	Identifier	dlopen		7504156	0					
ANR	7504165	ArgumentList	"""libbacktrace.so"""		7504156	1					
ANR	7504166	Argument	"""libbacktrace.so"""		7504156	0					
ANR	7504167	PrimaryExpression	"""libbacktrace.so"""		7504156	0					
ANR	7504168	Argument	RTLD_LAZY		7504156	1					
ANR	7504169	Identifier	RTLD_LAZY		7504156	0					
ANR	7504170	IfStatement	if ( libbt == NULL )		7504156	1					
ANR	7504171	Condition	libbt == NULL	517:8:14893:14905	7504156	0	True				
ANR	7504172	EqualityExpression	libbt == NULL		7504156	0		==			
ANR	7504173	Identifier	libbt		7504156	0					
ANR	7504174	Identifier	NULL		7504156	1					
ANR	7504175	ExpressionStatement	"libbt = dlopen ( ""/opt/lib/libbacktrace.so"" , RTLD_LAZY )"	518:8:14916:14969	7504156	1	True				
ANR	7504176	AssignmentExpression	"libbt = dlopen ( ""/opt/lib/libbacktrace.so"" , RTLD_LAZY )"		7504156	0		=			
ANR	7504177	Identifier	libbt		7504156	0					
ANR	7504178	CallExpression	"dlopen ( ""/opt/lib/libbacktrace.so"" , RTLD_LAZY )"		7504156	1					
ANR	7504179	Callee	dlopen		7504156	0					
ANR	7504180	Identifier	dlopen		7504156	0					
ANR	7504181	ArgumentList	"""/opt/lib/libbacktrace.so"""		7504156	1					
ANR	7504182	Argument	"""/opt/lib/libbacktrace.so"""		7504156	0					
ANR	7504183	PrimaryExpression	"""/opt/lib/libbacktrace.so"""		7504156	0					
ANR	7504184	Argument	RTLD_LAZY		7504156	1					
ANR	7504185	Identifier	RTLD_LAZY		7504156	0					
ANR	7504186	IfStatement	if ( libbt == NULL )		7504156	2					
ANR	7504187	Condition	libbt == NULL	519:8:14979:14991	7504156	0	True				
ANR	7504188	EqualityExpression	libbt == NULL		7504156	0		==			
ANR	7504189	Identifier	libbt		7504156	0					
ANR	7504190	Identifier	NULL		7504156	1					
ANR	7504191	ExpressionStatement	"libbt = dlopen ( ""/lib/libbacktrace.so"" , RTLD_LAZY )"	520:8:15002:15051	7504156	1	True				
ANR	7504192	AssignmentExpression	"libbt = dlopen ( ""/lib/libbacktrace.so"" , RTLD_LAZY )"		7504156	0		=			
ANR	7504193	Identifier	libbt		7504156	0					
ANR	7504194	CallExpression	"dlopen ( ""/lib/libbacktrace.so"" , RTLD_LAZY )"		7504156	1					
ANR	7504195	Callee	dlopen		7504156	0					
ANR	7504196	Identifier	dlopen		7504156	0					
ANR	7504197	ArgumentList	"""/lib/libbacktrace.so"""		7504156	1					
ANR	7504198	Argument	"""/lib/libbacktrace.so"""		7504156	0					
ANR	7504199	PrimaryExpression	"""/lib/libbacktrace.so"""		7504156	0					
ANR	7504200	Argument	RTLD_LAZY		7504156	1					
ANR	7504201	Identifier	RTLD_LAZY		7504156	0					
ANR	7504202	IfStatement	if ( libbt == NULL )		7504156	3					
ANR	7504203	Condition	libbt == NULL	521:8:15061:15073	7504156	0	True				
ANR	7504204	EqualityExpression	libbt == NULL		7504156	0		==			
ANR	7504205	Identifier	libbt		7504156	0					
ANR	7504206	Identifier	NULL		7504156	1					
ANR	7504207	ExpressionStatement	"libbt = dlopen ( ""/usr/lib/libbacktrace.so"" , RTLD_LAZY )"	522:8:15084:15137	7504156	1	True				
ANR	7504208	AssignmentExpression	"libbt = dlopen ( ""/usr/lib/libbacktrace.so"" , RTLD_LAZY )"		7504156	0		=			
ANR	7504209	Identifier	libbt		7504156	0					
ANR	7504210	CallExpression	"dlopen ( ""/usr/lib/libbacktrace.so"" , RTLD_LAZY )"		7504156	1					
ANR	7504211	Callee	dlopen		7504156	0					
ANR	7504212	Identifier	dlopen		7504156	0					
ANR	7504213	ArgumentList	"""/usr/lib/libbacktrace.so"""		7504156	1					
ANR	7504214	Argument	"""/usr/lib/libbacktrace.so"""		7504156	0					
ANR	7504215	PrimaryExpression	"""/usr/lib/libbacktrace.so"""		7504156	0					
ANR	7504216	Argument	RTLD_LAZY		7504156	1					
ANR	7504217	Identifier	RTLD_LAZY		7504156	0					
ANR	7504218	IfStatement	if ( libbt == NULL )		7504156	4					
ANR	7504219	Condition	libbt == NULL	523:8:15147:15159	7504156	0	True				
ANR	7504220	EqualityExpression	libbt == NULL		7504156	0		==			
ANR	7504221	Identifier	libbt		7504156	0					
ANR	7504222	Identifier	NULL		7504156	1					
ANR	7504223	ExpressionStatement	"libbt = dlopen ( ""/usr/local/lib/libbacktrace.so"" , RTLD_LAZY )"	524:8:15170:15229	7504156	1	True				
ANR	7504224	AssignmentExpression	"libbt = dlopen ( ""/usr/local/lib/libbacktrace.so"" , RTLD_LAZY )"		7504156	0		=			
ANR	7504225	Identifier	libbt		7504156	0					
ANR	7504226	CallExpression	"dlopen ( ""/usr/local/lib/libbacktrace.so"" , RTLD_LAZY )"		7504156	1					
ANR	7504227	Callee	dlopen		7504156	0					
ANR	7504228	Identifier	dlopen		7504156	0					
ANR	7504229	ArgumentList	"""/usr/local/lib/libbacktrace.so"""		7504156	1					
ANR	7504230	Argument	"""/usr/local/lib/libbacktrace.so"""		7504156	0					
ANR	7504231	PrimaryExpression	"""/usr/local/lib/libbacktrace.so"""		7504156	0					
ANR	7504232	Argument	RTLD_LAZY		7504156	1					
ANR	7504233	Identifier	RTLD_LAZY		7504156	0					
ANR	7504234	IfStatement	if ( libbt == NULL )		7504156	5					
ANR	7504235	Condition	libbt == NULL	525:8:15239:15251	7504156	0	True				
ANR	7504236	EqualityExpression	libbt == NULL		7504156	0		==			
ANR	7504237	Identifier	libbt		7504156	0					
ANR	7504238	Identifier	NULL		7504156	1					
ANR	7504239	GotoStatement	goto fail ;	526:8:15262:15271	7504156	1	True				
ANR	7504240	Identifier	fail		7504156	0					
ANR	7504241	ExpressionStatement	"backtrace_create_state = dlsym ( libbt , ""backtrace_create_state"" )"	528:4:15278:15341	7504156	6	True				
ANR	7504242	AssignmentExpression	"backtrace_create_state = dlsym ( libbt , ""backtrace_create_state"" )"		7504156	0		=			
ANR	7504243	Identifier	backtrace_create_state		7504156	0					
ANR	7504244	CallExpression	"dlsym ( libbt , ""backtrace_create_state"" )"		7504156	1					
ANR	7504245	Callee	dlsym		7504156	0					
ANR	7504246	Identifier	dlsym		7504156	0					
ANR	7504247	ArgumentList	libbt		7504156	1					
ANR	7504248	Argument	libbt		7504156	0					
ANR	7504249	Identifier	libbt		7504156	0					
ANR	7504250	Argument	"""backtrace_create_state"""		7504156	1					
ANR	7504251	PrimaryExpression	"""backtrace_create_state"""		7504156	0					
ANR	7504252	ExpressionStatement	"backtrace_syminfo = dlsym ( libbt , ""backtrace_syminfo"" )"	529:4:15347:15405	7504156	7	True				
ANR	7504253	AssignmentExpression	"backtrace_syminfo = dlsym ( libbt , ""backtrace_syminfo"" )"		7504156	0		=			
ANR	7504254	Identifier	backtrace_syminfo		7504156	0					
ANR	7504255	CallExpression	"dlsym ( libbt , ""backtrace_syminfo"" )"		7504156	1					
ANR	7504256	Callee	dlsym		7504156	0					
ANR	7504257	Identifier	dlsym		7504156	0					
ANR	7504258	ArgumentList	libbt		7504156	1					
ANR	7504259	Argument	libbt		7504156	0					
ANR	7504260	Identifier	libbt		7504156	0					
ANR	7504261	Argument	"""backtrace_syminfo"""		7504156	1					
ANR	7504262	PrimaryExpression	"""backtrace_syminfo"""		7504156	0					
ANR	7504263	ExpressionStatement	"backtrace_pcinfo = dlsym ( libbt , ""backtrace_pcinfo"" )"	530:4:15411:15468	7504156	8	True				
ANR	7504264	AssignmentExpression	"backtrace_pcinfo = dlsym ( libbt , ""backtrace_pcinfo"" )"		7504156	0		=			
ANR	7504265	Identifier	backtrace_pcinfo		7504156	0					
ANR	7504266	CallExpression	"dlsym ( libbt , ""backtrace_pcinfo"" )"		7504156	1					
ANR	7504267	Callee	dlsym		7504156	0					
ANR	7504268	Identifier	dlsym		7504156	0					
ANR	7504269	ArgumentList	libbt		7504156	1					
ANR	7504270	Argument	libbt		7504156	0					
ANR	7504271	Identifier	libbt		7504156	0					
ANR	7504272	Argument	"""backtrace_pcinfo"""		7504156	1					
ANR	7504273	PrimaryExpression	"""backtrace_pcinfo"""		7504156	0					
ANR	7504274	IfStatement	if ( backtrace_create_state == NULL || backtrace_syminfo == NULL || backtrace_pcinfo == NULL )		7504156	9					
ANR	7504275	Condition	backtrace_create_state == NULL || backtrace_syminfo == NULL || backtrace_pcinfo == NULL	532:8:15479:15581	7504156	0	True				
ANR	7504276	OrExpression	backtrace_create_state == NULL || backtrace_syminfo == NULL || backtrace_pcinfo == NULL		7504156	0		||			
ANR	7504277	EqualityExpression	backtrace_create_state == NULL		7504156	0		==			
ANR	7504278	Identifier	backtrace_create_state		7504156	0					
ANR	7504279	Identifier	NULL		7504156	1					
ANR	7504280	OrExpression	backtrace_syminfo == NULL || backtrace_pcinfo == NULL		7504156	1		||			
ANR	7504281	EqualityExpression	backtrace_syminfo == NULL		7504156	0		==			
ANR	7504282	Identifier	backtrace_syminfo		7504156	0					
ANR	7504283	Identifier	NULL		7504156	1					
ANR	7504284	EqualityExpression	backtrace_pcinfo == NULL		7504156	1		==			
ANR	7504285	Identifier	backtrace_pcinfo		7504156	0					
ANR	7504286	Identifier	NULL		7504156	1					
ANR	7504287	CompoundStatement		21:4:754:754	7504156	1					
ANR	7504288	GotoStatement	goto fail ;	536:8:15598:15607	7504156	0	True				
ANR	7504289	Identifier	fail		7504156	0					
ANR	7504290	ExpressionStatement	"my_backtrace_state = backtrace_create_state ( backtrace_exe , 1 , error_cb , NULL )"	539:4:15620:15872	7504156	10	True				
ANR	7504291	AssignmentExpression	"my_backtrace_state = backtrace_create_state ( backtrace_exe , 1 , error_cb , NULL )"		7504156	0		=			
ANR	7504292	Identifier	my_backtrace_state		7504156	0					
ANR	7504293	CallExpression	"backtrace_create_state ( backtrace_exe , 1 , error_cb , NULL )"		7504156	1					
ANR	7504294	Callee	backtrace_create_state		7504156	0					
ANR	7504295	Identifier	backtrace_create_state		7504156	0					
ANR	7504296	ArgumentList	backtrace_exe		7504156	1					
ANR	7504297	Argument	backtrace_exe		7504156	0					
ANR	7504298	Identifier	backtrace_exe		7504156	0					
ANR	7504299	Argument	1		7504156	1					
ANR	7504300	PrimaryExpression	1		7504156	0					
ANR	7504301	Argument	error_cb		7504156	2					
ANR	7504302	Identifier	error_cb		7504156	0					
ANR	7504303	Argument	NULL		7504156	3					
ANR	7504304	Identifier	NULL		7504156	0					
ANR	7504305	IfStatement	if ( my_backtrace_state == NULL )		7504156	11					
ANR	7504306	Condition	my_backtrace_state == NULL	543:8:15882:15907	7504156	0	True				
ANR	7504307	EqualityExpression	my_backtrace_state == NULL		7504156	0		==			
ANR	7504308	Identifier	my_backtrace_state		7504156	0					
ANR	7504309	Identifier	NULL		7504156	1					
ANR	7504310	GotoStatement	goto fail ;	544:8:15918:15927	7504156	1	True				
ANR	7504311	Identifier	fail		7504156	0					
ANR	7504312	ExpressionStatement	print_stack_value = print_stack_libbt	546:4:15934:15971	7504156	12	True				
ANR	7504313	AssignmentExpression	print_stack_value = print_stack_libbt		7504156	0		=			
ANR	7504314	Identifier	print_stack_value		7504156	0					
ANR	7504315	Identifier	print_stack_libbt		7504156	1					
ANR	7504316	ReturnStatement	return 1 ;	548:4:15978:15986	7504156	13	True				
ANR	7504317	PrimaryExpression	1		7504156	0					
ANR	7504318	Label	fail :	550:1:15990:15994	7504156	14	True				
ANR	7504319	Identifier	fail		7504156	0					
ANR	7504320	ExpressionStatement	libbt = NULL	551:4:16000:16012	7504156	15	True				
ANR	7504321	AssignmentExpression	libbt = NULL		7504156	0		=			
ANR	7504322	Identifier	libbt		7504156	0					
ANR	7504323	Identifier	NULL		7504156	1					
ANR	7504324	ExpressionStatement	backtrace_create_state = NULL	552:4:16018:16047	7504156	16	True				
ANR	7504325	AssignmentExpression	backtrace_create_state = NULL		7504156	0		=			
ANR	7504326	Identifier	backtrace_create_state		7504156	0					
ANR	7504327	Identifier	NULL		7504156	1					
ANR	7504328	ExpressionStatement	backtrace_syminfo = NULL	553:4:16053:16077	7504156	17	True				
ANR	7504329	AssignmentExpression	backtrace_syminfo = NULL		7504156	0		=			
ANR	7504330	Identifier	backtrace_syminfo		7504156	0					
ANR	7504331	Identifier	NULL		7504156	1					
ANR	7504332	ExpressionStatement	print_stack_value = print_stack_libbt_failed	554:4:16083:16127	7504156	18	True				
ANR	7504333	AssignmentExpression	print_stack_value = print_stack_libbt_failed		7504156	0		=			
ANR	7504334	Identifier	print_stack_value		7504156	0					
ANR	7504335	Identifier	print_stack_libbt_failed		7504156	1					
ANR	7504336	ReturnStatement	return 0 ;	555:4:16133:16141	7504156	19	True				
ANR	7504337	PrimaryExpression	0		7504156	0					
ANR	7504338	ReturnType	static int		7504156	1					
ANR	7504339	Identifier	init_libbt		7504156	2					
ANR	7504340	ParameterList			7504156	3					
ANR	7504341	CFGEntryNode	ENTRY		7504156		True				
ANR	7504342	CFGExitNode	EXIT		7504156		True				
ANR	7504343	Symbol	error_cb		7504156						
ANR	7504344	Symbol	NULL		7504156						
ANR	7504345	Symbol	backtrace_create_state		7504156						
ANR	7504346	Symbol	dlsym		7504156						
ANR	7504347	Symbol	backtrace_pcinfo		7504156						
ANR	7504348	Symbol	my_backtrace_state		7504156						
ANR	7504349	Symbol	print_stack_value		7504156						
ANR	7504350	Symbol	print_stack_libbt		7504156						
ANR	7504351	Symbol	libbt		7504156						
ANR	7504352	Symbol	RTLD_LAZY		7504156						
ANR	7504353	Symbol	dlopen		7504156						
ANR	7504354	Symbol	print_stack_libbt_failed		7504156						
ANR	7504355	Symbol	backtrace_exe		7504156						
ANR	7504356	Symbol	backtrace_syminfo		7504156						
ANR	7504357	Function	print_stack_default	559:0:16153:16856							
ANR	7504358	FunctionDef	print_stack_default (void * addr)		7504357	0					
ANR	7504359	CompoundStatement		560:0:16197:16856	7504357	0					
ANR	7504360	IdentifierDeclStatement	"char * * strings = backtrace_symbols ( & addr , 1 ) ;"	561:4:16203:16247	7504357	0	True				
ANR	7504361	IdentifierDecl	"* * strings = backtrace_symbols ( & addr , 1 )"		7504357	0					
ANR	7504362	IdentifierDeclType	char * *		7504357	0					
ANR	7504363	Identifier	strings		7504357	1					
ANR	7504364	AssignmentExpression	"* * strings = backtrace_symbols ( & addr , 1 )"		7504357	2		=			
ANR	7504365	Identifier	strings		7504357	0					
ANR	7504366	CallExpression	"backtrace_symbols ( & addr , 1 )"		7504357	1					
ANR	7504367	Callee	backtrace_symbols		7504357	0					
ANR	7504368	Identifier	backtrace_symbols		7504357	0					
ANR	7504369	ArgumentList	& addr		7504357	1					
ANR	7504370	Argument	& addr		7504357	0					
ANR	7504371	UnaryOperationExpression	& addr		7504357	0					
ANR	7504372	UnaryOperator	&		7504357	0					
ANR	7504373	Identifier	addr		7504357	1					
ANR	7504374	Argument	1		7504357	1					
ANR	7504375	PrimaryExpression	1		7504357	0					
ANR	7504376	IfStatement	if ( strings == NULL || strings [ 0 ] == NULL )		7504357	1					
ANR	7504377	Condition	strings == NULL || strings [ 0 ] == NULL	563:8:16258:16294	7504357	0	True				
ANR	7504378	OrExpression	strings == NULL || strings [ 0 ] == NULL		7504357	0		||			
ANR	7504379	EqualityExpression	strings == NULL		7504357	0		==			
ANR	7504380	Identifier	strings		7504357	0					
ANR	7504381	Identifier	NULL		7504357	1					
ANR	7504382	EqualityExpression	strings [ 0 ] == NULL		7504357	1		==			
ANR	7504383	ArrayIndexing	strings [ 0 ]		7504357	0					
ANR	7504384	Identifier	strings		7504357	0					
ANR	7504385	PrimaryExpression	0		7504357	1					
ANR	7504386	Identifier	NULL		7504357	1					
ANR	7504387	CompoundStatement		5:4:103:103	7504357	1					
ANR	7504388	ExpressionStatement	"fprintf ( stderr , ""    [0x%p]\\n"" , addr )"	565:8:16311:16348	7504357	0	True				
ANR	7504389	CallExpression	"fprintf ( stderr , ""    [0x%p]\\n"" , addr )"		7504357	0					
ANR	7504390	Callee	fprintf		7504357	0					
ANR	7504391	Identifier	fprintf		7504357	0					
ANR	7504392	ArgumentList	stderr		7504357	1					
ANR	7504393	Argument	stderr		7504357	0					
ANR	7504394	Identifier	stderr		7504357	0					
ANR	7504395	Argument	"""    [0x%p]\\n"""		7504357	1					
ANR	7504396	PrimaryExpression	"""    [0x%p]\\n"""		7504357	0					
ANR	7504397	Argument	addr		7504357	2					
ANR	7504398	Identifier	addr		7504357	0					
ANR	7504399	ElseStatement	else		7504357	0					
ANR	7504400	IfStatement	"if ( strchr ( strings [ 0 ] , ':' ) == NULL )"		7504357	0					
ANR	7504401	Condition	"strchr ( strings [ 0 ] , ':' ) == NULL"	568:13:16387:16417	7504357	0	True				
ANR	7504402	EqualityExpression	"strchr ( strings [ 0 ] , ':' ) == NULL"		7504357	0		==			
ANR	7504403	CallExpression	"strchr ( strings [ 0 ] , ':' )"		7504357	0					
ANR	7504404	Callee	strchr		7504357	0					
ANR	7504405	Identifier	strchr		7504357	0					
ANR	7504406	ArgumentList	strings [ 0 ]		7504357	1					
ANR	7504407	Argument	strings [ 0 ]		7504357	0					
ANR	7504408	ArrayIndexing	strings [ 0 ]		7504357	0					
ANR	7504409	Identifier	strings		7504357	0					
ANR	7504410	PrimaryExpression	0		7504357	1					
ANR	7504411	Argument	':'		7504357	1					
ANR	7504412	PrimaryExpression	':'		7504357	0					
ANR	7504413	Identifier	NULL		7504357	1					
ANR	7504414	CompoundStatement		12:8:292:325	7504357	1					
ANR	7504415	IdentifierDeclStatement	"char * s = strchr ( strings [ 0 ] , ' ' ) ;"	571:8:16490:16523	7504357	0	True				
ANR	7504416	IdentifierDecl	"* s = strchr ( strings [ 0 ] , ' ' )"		7504357	0					
ANR	7504417	IdentifierDeclType	char *		7504357	0					
ANR	7504418	Identifier	s		7504357	1					
ANR	7504419	AssignmentExpression	"* s = strchr ( strings [ 0 ] , ' ' )"		7504357	2		=			
ANR	7504420	Identifier	s		7504357	0					
ANR	7504421	CallExpression	"strchr ( strings [ 0 ] , ' ' )"		7504357	1					
ANR	7504422	Callee	strchr		7504357	0					
ANR	7504423	Identifier	strchr		7504357	0					
ANR	7504424	ArgumentList	strings [ 0 ]		7504357	1					
ANR	7504425	Argument	strings [ 0 ]		7504357	0					
ANR	7504426	ArrayIndexing	strings [ 0 ]		7504357	0					
ANR	7504427	Identifier	strings		7504357	0					
ANR	7504428	PrimaryExpression	0		7504357	1					
ANR	7504429	Argument	' '		7504357	1					
ANR	7504430	PrimaryExpression	' '		7504357	0					
ANR	7504431	IfStatement	if ( s != strings [ 0 ] )		7504357	1					
ANR	7504432	Condition	s != strings [ 0 ]	573:12:16538:16552	7504357	0	True				
ANR	7504433	EqualityExpression	s != strings [ 0 ]		7504357	0		!=			
ANR	7504434	Identifier	s		7504357	0					
ANR	7504435	ArrayIndexing	strings [ 0 ]		7504357	1					
ANR	7504436	Identifier	strings		7504357	0					
ANR	7504437	PrimaryExpression	0		7504357	1					
ANR	7504438	CompoundStatement		15:8:365:365	7504357	1					
ANR	7504439	ExpressionStatement	"memcpy ( backtrace_exe , strings [ 0 ] , s - strings [ 0 ] )"	575:12:16577:16626	7504357	0	True				
ANR	7504440	CallExpression	"memcpy ( backtrace_exe , strings [ 0 ] , s - strings [ 0 ] )"		7504357	0					
ANR	7504441	Callee	memcpy		7504357	0					
ANR	7504442	Identifier	memcpy		7504357	0					
ANR	7504443	ArgumentList	backtrace_exe		7504357	1					
ANR	7504444	Argument	backtrace_exe		7504357	0					
ANR	7504445	Identifier	backtrace_exe		7504357	0					
ANR	7504446	Argument	strings [ 0 ]		7504357	1					
ANR	7504447	ArrayIndexing	strings [ 0 ]		7504357	0					
ANR	7504448	Identifier	strings		7504357	0					
ANR	7504449	PrimaryExpression	0		7504357	1					
ANR	7504450	Argument	s - strings [ 0 ]		7504357	2					
ANR	7504451	AdditiveExpression	s - strings [ 0 ]		7504357	0		-			
ANR	7504452	Identifier	s		7504357	0					
ANR	7504453	ArrayIndexing	strings [ 0 ]		7504357	1					
ANR	7504454	Identifier	strings		7504357	0					
ANR	7504455	PrimaryExpression	0		7504357	1					
ANR	7504456	ExpressionStatement	backtrace_exe [ s - strings [ 0 ] ] = 0	576:12:16640:16671	7504357	1	True				
ANR	7504457	AssignmentExpression	backtrace_exe [ s - strings [ 0 ] ] = 0		7504357	0		=			
ANR	7504458	ArrayIndexing	backtrace_exe [ s - strings [ 0 ] ]		7504357	0					
ANR	7504459	Identifier	backtrace_exe		7504357	0					
ANR	7504460	AdditiveExpression	s - strings [ 0 ]		7504357	1		-			
ANR	7504461	Identifier	s		7504357	0					
ANR	7504462	ArrayIndexing	strings [ 0 ]		7504357	1					
ANR	7504463	Identifier	strings		7504357	0					
ANR	7504464	PrimaryExpression	0		7504357	1					
ANR	7504465	PrimaryExpression	0		7504357	1					
ANR	7504466	IfStatement	if ( init_libbt ( ) )		7504357	2					
ANR	7504467	Condition	init_libbt ( )	577:16:16689:16700	7504357	0	True				
ANR	7504468	CallExpression	init_libbt ( )		7504357	0					
ANR	7504469	Callee	init_libbt		7504357	0					
ANR	7504470	Identifier	init_libbt		7504357	0					
ANR	7504471	ArgumentList			7504357	1					
ANR	7504472	ExpressionStatement	print_stack_value ( addr )	578:16:16719:16742	7504357	1	True				
ANR	7504473	CallExpression	print_stack_value ( addr )		7504357	0					
ANR	7504474	Callee	print_stack_value		7504357	0					
ANR	7504475	Identifier	print_stack_value		7504357	0					
ANR	7504476	ArgumentList	addr		7504357	1					
ANR	7504477	Argument	addr		7504357	0					
ANR	7504478	Identifier	addr		7504357	0					
ANR	7504479	ElseStatement	else		7504357	0					
ANR	7504480	CompoundStatement		24:4:582:582	7504357	0					
ANR	7504481	ExpressionStatement	"fprintf ( stderr , ""    %s\\n"" , strings [ 0 ] )"	584:8:16790:16829	7504357	0	True				
ANR	7504482	CallExpression	"fprintf ( stderr , ""    %s\\n"" , strings [ 0 ] )"		7504357	0					
ANR	7504483	Callee	fprintf		7504357	0					
ANR	7504484	Identifier	fprintf		7504357	0					
ANR	7504485	ArgumentList	stderr		7504357	1					
ANR	7504486	Argument	stderr		7504357	0					
ANR	7504487	Identifier	stderr		7504357	0					
ANR	7504488	Argument	"""    %s\\n"""		7504357	1					
ANR	7504489	PrimaryExpression	"""    %s\\n"""		7504357	0					
ANR	7504490	Argument	strings [ 0 ]		7504357	2					
ANR	7504491	ArrayIndexing	strings [ 0 ]		7504357	0					
ANR	7504492	Identifier	strings		7504357	0					
ANR	7504493	PrimaryExpression	0		7504357	1					
ANR	7504494	ExpressionStatement	free ( strings )	586:4:16841:16854	7504357	2	True				
ANR	7504495	CallExpression	free ( strings )		7504357	0					
ANR	7504496	Callee	free		7504357	0					
ANR	7504497	Identifier	free		7504357	0					
ANR	7504498	ArgumentList	strings		7504357	1					
ANR	7504499	Argument	strings		7504357	0					
ANR	7504500	Identifier	strings		7504357	0					
ANR	7504501	ReturnType	static void		7504357	1					
ANR	7504502	Identifier	print_stack_default		7504357	2					
ANR	7504503	ParameterList	void * addr		7504357	3					
ANR	7504504	Parameter	void * addr	559:32:16185:16194	7504357	0	True				
ANR	7504505	ParameterType	void *		7504357	0					
ANR	7504506	Identifier	addr		7504357	1					
ANR	7504507	CFGEntryNode	ENTRY		7504357		True				
ANR	7504508	CFGExitNode	EXIT		7504357		True				
ANR	7504509	Symbol	& addr		7504357						
ANR	7504510	Symbol	NULL		7504357						
ANR	7504511	Symbol	strchr		7504357						
ANR	7504512	Symbol	stderr		7504357						
ANR	7504513	Symbol	s		7504357						
ANR	7504514	Symbol	strings		7504357						
ANR	7504515	Symbol	* strings		7504357						
ANR	7504516	Symbol	addr		7504357						
ANR	7504517	Symbol	init_libbt		7504357						
ANR	7504518	Symbol	backtrace_symbols		7504357						
ANR	7504519	Symbol	backtrace_exe		7504357						
ANR	7504520	Symbol	* s		7504357						
ANR	7504521	Symbol	* * strings		7504357						
ANR	7504522	Symbol	* backtrace_exe		7504357						
ANR	7504523	Function	Memento_initStacktracer	589:0:16859:16948							
ANR	7504524	FunctionDef	Memento_initStacktracer ()		7504523	0					
ANR	7504525	CompoundStatement		590:0:16901:16948	7504523	0					
ANR	7504526	ExpressionStatement	print_stack_value = print_stack_default	591:4:16907:16946	7504523	0	True				
ANR	7504527	AssignmentExpression	print_stack_value = print_stack_default		7504523	0		=			
ANR	7504528	Identifier	print_stack_value		7504523	0					
ANR	7504529	Identifier	print_stack_default		7504523	1					
ANR	7504530	ReturnType	static void		7504523	1					
ANR	7504531	Identifier	Memento_initStacktracer		7504523	2					
ANR	7504532	ParameterList			7504523	3					
ANR	7504533	CFGEntryNode	ENTRY		7504523		True				
ANR	7504534	CFGExitNode	EXIT		7504523		True				
ANR	7504535	Symbol	print_stack_default		7504523						
ANR	7504536	Symbol	print_stack_value		7504523						
ANR	7504537	Function	Memento_getStacktrace	594:0:16951:17229							
ANR	7504538	FunctionDef	"Memento_getStacktrace (void * * stack , int * skip)"		7504537	0					
ANR	7504539	CompoundStatement		595:0:17009:17229	7504537	0					
ANR	7504540	IdentifierDeclStatement	size_t num ;	596:4:17015:17025	7504537	0	True				
ANR	7504541	IdentifierDecl	num		7504537	0					
ANR	7504542	IdentifierDeclType	size_t		7504537	0					
ANR	7504543	Identifier	num		7504537	1					
ANR	7504544	ExpressionStatement	"num = backtrace ( & stack [ 0 ] , MEMENTO_BACKTRACE_MAX )"	598:4:17032:17081	7504537	1	True				
ANR	7504545	AssignmentExpression	"num = backtrace ( & stack [ 0 ] , MEMENTO_BACKTRACE_MAX )"		7504537	0		=			
ANR	7504546	Identifier	num		7504537	0					
ANR	7504547	CallExpression	"backtrace ( & stack [ 0 ] , MEMENTO_BACKTRACE_MAX )"		7504537	1					
ANR	7504548	Callee	backtrace		7504537	0					
ANR	7504549	Identifier	backtrace		7504537	0					
ANR	7504550	ArgumentList	& stack [ 0 ]		7504537	1					
ANR	7504551	Argument	& stack [ 0 ]		7504537	0					
ANR	7504552	UnaryOperationExpression	& stack [ 0 ]		7504537	0					
ANR	7504553	UnaryOperator	&		7504537	0					
ANR	7504554	ArrayIndexing	stack [ 0 ]		7504537	1					
ANR	7504555	Identifier	stack		7504537	0					
ANR	7504556	PrimaryExpression	0		7504537	1					
ANR	7504557	Argument	MEMENTO_BACKTRACE_MAX		7504537	1					
ANR	7504558	Identifier	MEMENTO_BACKTRACE_MAX		7504537	0					
ANR	7504559	ExpressionStatement	* skip = SkipStackBackTraceLevels	600:4:17088:17120	7504537	2	True				
ANR	7504560	AssignmentExpression	* skip = SkipStackBackTraceLevels		7504537	0		=			
ANR	7504561	UnaryOperationExpression	* skip		7504537	0					
ANR	7504562	UnaryOperator	*		7504537	0					
ANR	7504563	Identifier	skip		7504537	1					
ANR	7504564	Identifier	SkipStackBackTraceLevels		7504537	1					
ANR	7504565	IfStatement	if ( num <= SkipStackBackTraceLevels )		7504537	3					
ANR	7504566	Condition	num <= SkipStackBackTraceLevels	601:8:17130:17160	7504537	0	True				
ANR	7504567	RelationalExpression	num <= SkipStackBackTraceLevels		7504537	0		<=			
ANR	7504568	Identifier	num		7504537	0					
ANR	7504569	Identifier	SkipStackBackTraceLevels		7504537	1					
ANR	7504570	ReturnStatement	return 0 ;	602:8:17171:17179	7504537	1	True				
ANR	7504571	PrimaryExpression	0		7504537	0					
ANR	7504572	ReturnStatement	return ( int ) ( num - SkipStackBackTraceLevels ) ;	603:4:17185:17227	7504537	4	True				
ANR	7504573	CastExpression	( int ) ( num - SkipStackBackTraceLevels )		7504537	0					
ANR	7504574	CastTarget	int		7504537	0					
ANR	7504575	AdditiveExpression	num - SkipStackBackTraceLevels		7504537	1		-			
ANR	7504576	Identifier	num		7504537	0					
ANR	7504577	Identifier	SkipStackBackTraceLevels		7504537	1					
ANR	7504578	ReturnType	static int		7504537	1					
ANR	7504579	Identifier	Memento_getStacktrace		7504537	2					
ANR	7504580	ParameterList	"void * * stack , int * skip"		7504537	3					
ANR	7504581	Parameter	void * * stack	594:33:16984:16995	7504537	0	True				
ANR	7504582	ParameterType	void * *		7504537	0					
ANR	7504583	Identifier	stack		7504537	1					
ANR	7504584	Parameter	int * skip	594:47:16998:17006	7504537	1	True				
ANR	7504585	ParameterType	int *		7504537	0					
ANR	7504586	Identifier	skip		7504537	1					
ANR	7504587	CFGEntryNode	ENTRY		7504537		True				
ANR	7504588	CFGExitNode	EXIT		7504537		True				
ANR	7504589	Symbol	MEMENTO_BACKTRACE_MAX		7504537						
ANR	7504590	Symbol	* skip		7504537						
ANR	7504591	Symbol	stack		7504537						
ANR	7504592	Symbol	backtrace		7504537						
ANR	7504593	Symbol	SkipStackBackTraceLevels		7504537						
ANR	7504594	Symbol	num		7504537						
ANR	7504595	Symbol	skip		7504537						
ANR	7504596	Function	Memento_showStacktrace	606:0:17232:17405							
ANR	7504597	FunctionDef	"Memento_showStacktrace (void * * stack , int numberOfFrames)"		7504596	0					
ANR	7504598	CompoundStatement		607:0:17301:17405	7504596	0					
ANR	7504599	IdentifierDeclStatement	int i ;	608:4:17307:17312	7504596	0	True				
ANR	7504600	IdentifierDecl	i		7504596	0					
ANR	7504601	IdentifierDeclType	int		7504596	0					
ANR	7504602	Identifier	i		7504596	1					
ANR	7504603	ForStatement	for ( i = 0 ; i < numberOfFrames ; i ++ )		7504596	1					
ANR	7504604	ForInit	i = 0 ;	610:9:17324:17329	7504596	0	True				
ANR	7504605	AssignmentExpression	i = 0		7504596	0		=			
ANR	7504606	Identifier	i		7504596	0					
ANR	7504607	PrimaryExpression	0		7504596	1					
ANR	7504608	Condition	i < numberOfFrames	610:16:17331:17348	7504596	1	True				
ANR	7504609	RelationalExpression	i < numberOfFrames		7504596	0		<			
ANR	7504610	Identifier	i		7504596	0					
ANR	7504611	Identifier	numberOfFrames		7504596	1					
ANR	7504612	PostIncDecOperationExpression	i ++	610:36:17351:17353	7504596	2	True				
ANR	7504613	Identifier	i		7504596	0					
ANR	7504614	IncDec	++		7504596	1					
ANR	7504615	CompoundStatement		5:4:58:58	7504596	3					
ANR	7504616	ExpressionStatement	print_stack_value ( stack [ i ] )	612:8:17370:17397	7504596	0	True				
ANR	7504617	CallExpression	print_stack_value ( stack [ i ] )		7504596	0					
ANR	7504618	Callee	print_stack_value		7504596	0					
ANR	7504619	Identifier	print_stack_value		7504596	0					
ANR	7504620	ArgumentList	stack [ i ]		7504596	1					
ANR	7504621	Argument	stack [ i ]		7504596	0					
ANR	7504622	ArrayIndexing	stack [ i ]		7504596	0					
ANR	7504623	Identifier	stack		7504596	0					
ANR	7504624	Identifier	i		7504596	1					
ANR	7504625	ReturnType	static void		7504596	1					
ANR	7504626	Identifier	Memento_showStacktrace		7504596	2					
ANR	7504627	ParameterList	"void * * stack , int numberOfFrames"		7504596	3					
ANR	7504628	Parameter	void * * stack	606:35:17267:17278	7504596	0	True				
ANR	7504629	ParameterType	void * *		7504596	0					
ANR	7504630	Identifier	stack		7504596	1					
ANR	7504631	Parameter	int numberOfFrames	606:49:17281:17298	7504596	1	True				
ANR	7504632	ParameterType	int		7504596	0					
ANR	7504633	Identifier	numberOfFrames		7504596	1					
ANR	7504634	CFGEntryNode	ENTRY		7504596		True				
ANR	7504635	CFGExitNode	EXIT		7504596		True				
ANR	7504636	Symbol	stack		7504596						
ANR	7504637	Symbol	* i		7504596						
ANR	7504638	Symbol	numberOfFrames		7504596						
ANR	7504639	Symbol	i		7504596						
ANR	7504640	Symbol	* stack		7504596						
ANR	7504641	DeclStmt									
ANR	7504642	Decl							DWORD64	DWORD64	DWORD_NATIVESIZED
ANR	7504643	DeclStmt									
ANR	7504644	Decl							DWORD	DWORD	DWORD_NATIVESIZED
ANR	7504645	ClassDef	MY_IMAGEHLP_LINE	635:8:18027:18218							
ANR	7504646	DeclStmt									
ANR	7504647	Decl							DWORD	DWORD	SizeOfStruct
ANR	7504648	DeclStmt									
ANR	7504649	Decl							PVOID	PVOID	Key
ANR	7504650	DeclStmt									
ANR	7504651	Decl							DWORD	DWORD	LineNumber
ANR	7504652	DeclStmt									
ANR	7504653	Decl							PCHAR	PCHAR	FileName
ANR	7504654	DeclStmt									
ANR	7504655	Decl							DWORD_NATIVESIZED	DWORD_NATIVESIZED	Address
ANR	7504656	DeclStmt									
ANR	7504657	Decl							MY_IMAGEHLP_LINE	MY_IMAGEHLP_LINE	MY_IMAGEHLP_LINE
ANR	7504658	Decl							MY_IMAGEHLP_LINE	MY_IMAGEHLP_LINE *	MY_PIMAGEHLP_LINE
ANR	7504659	ClassDef	MY_SYMBOL_INFO	645:8:18374:19198							
ANR	7504660	DeclStmt									
ANR	7504661	Decl							ULONG	ULONG	SizeOfStruct
ANR	7504662	DeclStmt									
ANR	7504663	Decl							ULONG	ULONG	TypeIndex
ANR	7504664	DeclStmt									
ANR	7504665	Decl							ULONG64	ULONG64 [ 2 ]	Reserved
ANR	7504666	DeclStmt									
ANR	7504667	Decl							ULONG	ULONG	info
ANR	7504668	DeclStmt									
ANR	7504669	Decl							ULONG	ULONG	Size
ANR	7504670	DeclStmt									
ANR	7504671	Decl							ULONG64	ULONG64	ModBase
ANR	7504672	DeclStmt									
ANR	7504673	Decl							ULONG	ULONG	Flags
ANR	7504674	DeclStmt									
ANR	7504675	Decl							ULONG64	ULONG64	Value
ANR	7504676	DeclStmt									
ANR	7504677	Decl							ULONG64	ULONG64	Address
ANR	7504678	DeclStmt									
ANR	7504679	Decl							ULONG	ULONG	Register
ANR	7504680	DeclStmt									
ANR	7504681	Decl							ULONG	ULONG	Scope
ANR	7504682	DeclStmt									
ANR	7504683	Decl							ULONG	ULONG	Tag
ANR	7504684	DeclStmt									
ANR	7504685	Decl							ULONG	ULONG	NameLen
ANR	7504686	DeclStmt									
ANR	7504687	Decl							ULONG	ULONG	MaxNameLen
ANR	7504688	DeclStmt									
ANR	7504689	Decl							CHAR	CHAR [ 1 ]	Name
ANR	7504690	DeclStmt									
ANR	7504691	Decl							MY_SYMBOL_INFO	MY_SYMBOL_INFO	MY_SYMBOL_INFO
ANR	7504692	Decl							MY_SYMBOL_INFO	MY_SYMBOL_INFO *	MY_PSYMBOL_INFO
ANR	7504693	DeclStmt									
ANR	7504694	Decl							My_CaptureStackBackTraceType	My_CaptureStackBackTraceType	Memento_CaptureStackBackTrace
ANR	7504695	DeclStmt									
ANR	7504696	Decl							My_SymGetLineFromAddrType	My_SymGetLineFromAddrType	Memento_SymGetLineFromAddr
ANR	7504697	DeclStmt									
ANR	7504698	Decl							My_SymFromAddrType	My_SymFromAddrType	Memento_SymFromAddr
ANR	7504699	DeclStmt									
ANR	7504700	Decl							My_SymInitializeType	My_SymInitializeType	Memento_SymInitialize
ANR	7504701	DeclStmt									
ANR	7504702	Decl							HANDLE	HANDLE	Memento_process
ANR	7504703	Function	Memento_initStacktracer	672:0:19694:21053							
ANR	7504704	FunctionDef	Memento_initStacktracer ()		7504703	0					
ANR	7504705	CompoundStatement		673:0:19736:21053	7504703	0					
ANR	7504706	IdentifierDeclStatement	"HMODULE mod = LoadLibrary ( ""kernel32.dll"" ) ;"	674:4:19742:19783	7504703	0	True				
ANR	7504707	IdentifierDecl	"mod = LoadLibrary ( ""kernel32.dll"" )"		7504703	0					
ANR	7504708	IdentifierDeclType	HMODULE		7504703	0					
ANR	7504709	Identifier	mod		7504703	1					
ANR	7504710	AssignmentExpression	"mod = LoadLibrary ( ""kernel32.dll"" )"		7504703	2		=			
ANR	7504711	Identifier	mod		7504703	0					
ANR	7504712	CallExpression	"LoadLibrary ( ""kernel32.dll"" )"		7504703	1					
ANR	7504713	Callee	LoadLibrary		7504703	0					
ANR	7504714	Identifier	LoadLibrary		7504703	0					
ANR	7504715	ArgumentList	"""kernel32.dll"""		7504703	1					
ANR	7504716	Argument	"""kernel32.dll"""		7504703	0					
ANR	7504717	PrimaryExpression	"""kernel32.dll"""		7504703	0					
ANR	7504718	IfStatement	if ( mod == NULL )		7504703	1					
ANR	7504719	Condition	mod == NULL	676:8:19794:19804	7504703	0	True				
ANR	7504720	EqualityExpression	mod == NULL		7504703	0		==			
ANR	7504721	Identifier	mod		7504703	0					
ANR	7504722	Identifier	NULL		7504703	1					
ANR	7504723	ReturnStatement	return ;	677:8:19815:19821	7504703	1	True				
ANR	7504724	ExpressionStatement	"Memento_CaptureStackBackTrace = ( My_CaptureStackBackTraceType ) ( GetProcAddress ( mod , ""RtlCaptureStackBackTrace"" ) )"	678:4:19827:19938	7504703	2	True				
ANR	7504725	AssignmentExpression	"Memento_CaptureStackBackTrace = ( My_CaptureStackBackTraceType ) ( GetProcAddress ( mod , ""RtlCaptureStackBackTrace"" ) )"		7504703	0		=			
ANR	7504726	Identifier	Memento_CaptureStackBackTrace		7504703	0					
ANR	7504727	CastExpression	"( My_CaptureStackBackTraceType ) ( GetProcAddress ( mod , ""RtlCaptureStackBackTrace"" ) )"		7504703	1					
ANR	7504728	CastTarget	My_CaptureStackBackTraceType		7504703	0					
ANR	7504729	CallExpression	"GetProcAddress ( mod , ""RtlCaptureStackBackTrace"" )"		7504703	1					
ANR	7504730	Callee	GetProcAddress		7504703	0					
ANR	7504731	Identifier	GetProcAddress		7504703	0					
ANR	7504732	ArgumentList	mod		7504703	1					
ANR	7504733	Argument	mod		7504703	0					
ANR	7504734	Identifier	mod		7504703	0					
ANR	7504735	Argument	"""RtlCaptureStackBackTrace"""		7504703	1					
ANR	7504736	PrimaryExpression	"""RtlCaptureStackBackTrace"""		7504703	0					
ANR	7504737	IfStatement	if ( Memento_CaptureStackBackTrace == NULL )		7504703	3					
ANR	7504738	Condition	Memento_CaptureStackBackTrace == NULL	679:8:19948:19984	7504703	0	True				
ANR	7504739	EqualityExpression	Memento_CaptureStackBackTrace == NULL		7504703	0		==			
ANR	7504740	Identifier	Memento_CaptureStackBackTrace		7504703	0					
ANR	7504741	Identifier	NULL		7504703	1					
ANR	7504742	ReturnStatement	return ;	680:8:19995:20001	7504703	1	True				
ANR	7504743	ExpressionStatement	"mod = LoadLibrary ( ""Dbghelp.dll"" )"	681:4:20007:20039	7504703	4	True				
ANR	7504744	AssignmentExpression	"mod = LoadLibrary ( ""Dbghelp.dll"" )"		7504703	0		=			
ANR	7504745	Identifier	mod		7504703	0					
ANR	7504746	CallExpression	"LoadLibrary ( ""Dbghelp.dll"" )"		7504703	1					
ANR	7504747	Callee	LoadLibrary		7504703	0					
ANR	7504748	Identifier	LoadLibrary		7504703	0					
ANR	7504749	ArgumentList	"""Dbghelp.dll"""		7504703	1					
ANR	7504750	Argument	"""Dbghelp.dll"""		7504703	0					
ANR	7504751	PrimaryExpression	"""Dbghelp.dll"""		7504703	0					
ANR	7504752	IfStatement	if ( mod == NULL )		7504703	5					
ANR	7504753	Condition	mod == NULL	682:8:20049:20059	7504703	0	True				
ANR	7504754	EqualityExpression	mod == NULL		7504703	0		==			
ANR	7504755	Identifier	mod		7504703	0					
ANR	7504756	Identifier	NULL		7504703	1					
ANR	7504757	CompoundStatement		10:21:325:325	7504703	1					
ANR	7504758	ExpressionStatement	Memento_CaptureStackBackTrace = NULL	683:8:20072:20108	7504703	0	True				
ANR	7504759	AssignmentExpression	Memento_CaptureStackBackTrace = NULL		7504703	0		=			
ANR	7504760	Identifier	Memento_CaptureStackBackTrace		7504703	0					
ANR	7504761	Identifier	NULL		7504703	1					
ANR	7504762	ReturnStatement	return ;	684:8:20118:20124	7504703	1	True				
ANR	7504763	Statement	Memento_SymGetLineFromAddr	686:4:20136:20161	7504703	6	True				
ANR	7504764	Statement	=	686:31:20163:20163	7504703	7	True				
ANR	7504765	Statement	(	687:12:20177:20177	7504703	8	True				
ANR	7504766	Statement	My_SymGetLineFromAddrType	687:13:20178:20202	7504703	9	True				
ANR	7504767	Statement	)	687:38:20203:20203	7504703	10	True				
ANR	7504768	Statement	(	687:39:20204:20204	7504703	11	True				
ANR	7504769	Statement	GetProcAddress	687:40:20205:20218	7504703	12	True				
ANR	7504770	Statement	(	687:54:20219:20219	7504703	13	True				
ANR	7504771	Statement	mod	687:55:20220:20222	7504703	14	True				
ANR	7504772	Statement	","	687:58:20223:20223	7504703	15	True				
ANR	7504773	Statement	"""SymGetLineFromAddr64"""	689:55:20294:20315	7504703	16	True				
ANR	7504774	Statement	)	693:40:20446:20446	7504703	17	True				
ANR	7504775	Statement	)	693:41:20447:20447	7504703	18	True				
ANR	7504776	ExpressionStatement		693:42:20448:20448	7504703	19	True				
ANR	7504777	IfStatement	if ( Memento_SymGetLineFromAddr == NULL )		7504703	20					
ANR	7504778	Condition	Memento_SymGetLineFromAddr == NULL	694:8:20458:20491	7504703	0	True				
ANR	7504779	EqualityExpression	Memento_SymGetLineFromAddr == NULL		7504703	0		==			
ANR	7504780	Identifier	Memento_SymGetLineFromAddr		7504703	0					
ANR	7504781	Identifier	NULL		7504703	1					
ANR	7504782	CompoundStatement		22:44:757:757	7504703	1					
ANR	7504783	ExpressionStatement	Memento_CaptureStackBackTrace = NULL	695:8:20504:20540	7504703	0	True				
ANR	7504784	AssignmentExpression	Memento_CaptureStackBackTrace = NULL		7504703	0		=			
ANR	7504785	Identifier	Memento_CaptureStackBackTrace		7504703	0					
ANR	7504786	Identifier	NULL		7504703	1					
ANR	7504787	ReturnStatement	return ;	696:8:20550:20556	7504703	1	True				
ANR	7504788	ExpressionStatement	"Memento_SymFromAddr = ( My_SymFromAddrType ) ( GetProcAddress ( mod , ""SymFromAddr"" ) )"	698:4:20568:20646	7504703	21	True				
ANR	7504789	AssignmentExpression	"Memento_SymFromAddr = ( My_SymFromAddrType ) ( GetProcAddress ( mod , ""SymFromAddr"" ) )"		7504703	0		=			
ANR	7504790	Identifier	Memento_SymFromAddr		7504703	0					
ANR	7504791	CastExpression	"( My_SymFromAddrType ) ( GetProcAddress ( mod , ""SymFromAddr"" ) )"		7504703	1					
ANR	7504792	CastTarget	My_SymFromAddrType		7504703	0					
ANR	7504793	CallExpression	"GetProcAddress ( mod , ""SymFromAddr"" )"		7504703	1					
ANR	7504794	Callee	GetProcAddress		7504703	0					
ANR	7504795	Identifier	GetProcAddress		7504703	0					
ANR	7504796	ArgumentList	mod		7504703	1					
ANR	7504797	Argument	mod		7504703	0					
ANR	7504798	Identifier	mod		7504703	0					
ANR	7504799	Argument	"""SymFromAddr"""		7504703	1					
ANR	7504800	PrimaryExpression	"""SymFromAddr"""		7504703	0					
ANR	7504801	IfStatement	if ( Memento_SymFromAddr == NULL )		7504703	22					
ANR	7504802	Condition	Memento_SymFromAddr == NULL	699:8:20656:20682	7504703	0	True				
ANR	7504803	EqualityExpression	Memento_SymFromAddr == NULL		7504703	0		==			
ANR	7504804	Identifier	Memento_SymFromAddr		7504703	0					
ANR	7504805	Identifier	NULL		7504703	1					
ANR	7504806	CompoundStatement		27:37:948:948	7504703	1					
ANR	7504807	ExpressionStatement	Memento_CaptureStackBackTrace = NULL	700:8:20695:20731	7504703	0	True				
ANR	7504808	AssignmentExpression	Memento_CaptureStackBackTrace = NULL		7504703	0		=			
ANR	7504809	Identifier	Memento_CaptureStackBackTrace		7504703	0					
ANR	7504810	Identifier	NULL		7504703	1					
ANR	7504811	ReturnStatement	return ;	701:8:20741:20747	7504703	1	True				
ANR	7504812	ExpressionStatement	"Memento_SymInitialize = ( My_SymInitializeType ) ( GetProcAddress ( mod , ""SymInitialize"" ) )"	703:4:20759:20843	7504703	23	True				
ANR	7504813	AssignmentExpression	"Memento_SymInitialize = ( My_SymInitializeType ) ( GetProcAddress ( mod , ""SymInitialize"" ) )"		7504703	0		=			
ANR	7504814	Identifier	Memento_SymInitialize		7504703	0					
ANR	7504815	CastExpression	"( My_SymInitializeType ) ( GetProcAddress ( mod , ""SymInitialize"" ) )"		7504703	1					
ANR	7504816	CastTarget	My_SymInitializeType		7504703	0					
ANR	7504817	CallExpression	"GetProcAddress ( mod , ""SymInitialize"" )"		7504703	1					
ANR	7504818	Callee	GetProcAddress		7504703	0					
ANR	7504819	Identifier	GetProcAddress		7504703	0					
ANR	7504820	ArgumentList	mod		7504703	1					
ANR	7504821	Argument	mod		7504703	0					
ANR	7504822	Identifier	mod		7504703	0					
ANR	7504823	Argument	"""SymInitialize"""		7504703	1					
ANR	7504824	PrimaryExpression	"""SymInitialize"""		7504703	0					
ANR	7504825	IfStatement	if ( Memento_SymInitialize == NULL )		7504703	24					
ANR	7504826	Condition	Memento_SymInitialize == NULL	704:8:20853:20881	7504703	0	True				
ANR	7504827	EqualityExpression	Memento_SymInitialize == NULL		7504703	0		==			
ANR	7504828	Identifier	Memento_SymInitialize		7504703	0					
ANR	7504829	Identifier	NULL		7504703	1					
ANR	7504830	CompoundStatement		32:39:1147:1147	7504703	1					
ANR	7504831	ExpressionStatement	Memento_CaptureStackBackTrace = NULL	705:8:20894:20930	7504703	0	True				
ANR	7504832	AssignmentExpression	Memento_CaptureStackBackTrace = NULL		7504703	0		=			
ANR	7504833	Identifier	Memento_CaptureStackBackTrace		7504703	0					
ANR	7504834	Identifier	NULL		7504703	1					
ANR	7504835	ReturnStatement	return ;	706:8:20940:20946	7504703	1	True				
ANR	7504836	ExpressionStatement	Memento_process = GetCurrentProcess ( )	708:4:20958:20995	7504703	25	True				
ANR	7504837	AssignmentExpression	Memento_process = GetCurrentProcess ( )		7504703	0		=			
ANR	7504838	Identifier	Memento_process		7504703	0					
ANR	7504839	CallExpression	GetCurrentProcess ( )		7504703	1					
ANR	7504840	Callee	GetCurrentProcess		7504703	0					
ANR	7504841	Identifier	GetCurrentProcess		7504703	0					
ANR	7504842	ArgumentList			7504703	1					
ANR	7504843	ExpressionStatement	"Memento_SymInitialize ( Memento_process , NULL , TRUE )"	709:4:21001:21051	7504703	26	True				
ANR	7504844	CallExpression	"Memento_SymInitialize ( Memento_process , NULL , TRUE )"		7504703	0					
ANR	7504845	Callee	Memento_SymInitialize		7504703	0					
ANR	7504846	Identifier	Memento_SymInitialize		7504703	0					
ANR	7504847	ArgumentList	Memento_process		7504703	1					
ANR	7504848	Argument	Memento_process		7504703	0					
ANR	7504849	Identifier	Memento_process		7504703	0					
ANR	7504850	Argument	NULL		7504703	1					
ANR	7504851	Identifier	NULL		7504703	0					
ANR	7504852	Argument	TRUE		7504703	2					
ANR	7504853	Identifier	TRUE		7504703	0					
ANR	7504854	ReturnType	static void		7504703	1					
ANR	7504855	Identifier	Memento_initStacktracer		7504703	2					
ANR	7504856	ParameterList			7504703	3					
ANR	7504857	CFGEntryNode	ENTRY		7504703		True				
ANR	7504858	CFGExitNode	EXIT		7504703		True				
ANR	7504859	Symbol	Memento_CaptureStackBackTrace		7504703						
ANR	7504860	Symbol	mod		7504703						
ANR	7504861	Symbol	NULL		7504703						
ANR	7504862	Symbol	LoadLibrary		7504703						
ANR	7504863	Symbol	GetProcAddress		7504703						
ANR	7504864	Symbol	GetCurrentProcess		7504703						
ANR	7504865	Symbol	TRUE		7504703						
ANR	7504866	Symbol	Memento_SymGetLineFromAddr		7504703						
ANR	7504867	Symbol	Memento_SymInitialize		7504703						
ANR	7504868	Symbol	Memento_process		7504703						
ANR	7504869	Symbol	Memento_SymFromAddr		7504703						
ANR	7504870	Function	Memento_getStacktrace	712:0:21056:21358							
ANR	7504871	FunctionDef	"Memento_getStacktrace (void * * stack , int * skip)"		7504870	0					
ANR	7504872	CompoundStatement		713:0:21114:21358	7504870	0					
ANR	7504873	IfStatement	if ( Memento_CaptureStackBackTrace == NULL )		7504870	0					
ANR	7504874	Condition	Memento_CaptureStackBackTrace == NULL	714:8:21124:21160	7504870	0	True				
ANR	7504875	EqualityExpression	Memento_CaptureStackBackTrace == NULL		7504870	0		==			
ANR	7504876	Identifier	Memento_CaptureStackBackTrace		7504870	0					
ANR	7504877	Identifier	NULL		7504870	1					
ANR	7504878	ReturnStatement	return 0 ;	715:8:21171:21179	7504870	1	True				
ANR	7504879	PrimaryExpression	0		7504870	0					
ANR	7504880	ExpressionStatement	* skip = 0	717:4:21186:21195	7504870	1	True				
ANR	7504881	AssignmentExpression	* skip = 0		7504870	0		=			
ANR	7504882	UnaryOperationExpression	* skip		7504870	0					
ANR	7504883	UnaryOperator	*		7504870	0					
ANR	7504884	Identifier	skip		7504870	1					
ANR	7504885	PrimaryExpression	0		7504870	1					
ANR	7504886	ReturnStatement	"return Memento_CaptureStackBackTrace ( SkipStackBackTraceLevels , 63 - SkipStackBackTraceLevels , stack , NULL ) ;"	719:4:21252:21356	7504870	2	True				
ANR	7504887	CallExpression	"Memento_CaptureStackBackTrace ( SkipStackBackTraceLevels , 63 - SkipStackBackTraceLevels , stack , NULL )"		7504870	0					
ANR	7504888	Callee	Memento_CaptureStackBackTrace		7504870	0					
ANR	7504889	Identifier	Memento_CaptureStackBackTrace		7504870	0					
ANR	7504890	ArgumentList	SkipStackBackTraceLevels		7504870	1					
ANR	7504891	Argument	SkipStackBackTraceLevels		7504870	0					
ANR	7504892	Identifier	SkipStackBackTraceLevels		7504870	0					
ANR	7504893	Argument	63 - SkipStackBackTraceLevels		7504870	1					
ANR	7504894	AdditiveExpression	63 - SkipStackBackTraceLevels		7504870	0		-			
ANR	7504895	PrimaryExpression	63		7504870	0					
ANR	7504896	Identifier	SkipStackBackTraceLevels		7504870	1					
ANR	7504897	Argument	stack		7504870	2					
ANR	7504898	Identifier	stack		7504870	0					
ANR	7504899	Argument	NULL		7504870	3					
ANR	7504900	Identifier	NULL		7504870	0					
ANR	7504901	ReturnType	static int		7504870	1					
ANR	7504902	Identifier	Memento_getStacktrace		7504870	2					
ANR	7504903	ParameterList	"void * * stack , int * skip"		7504870	3					
ANR	7504904	Parameter	void * * stack	712:33:21089:21100	7504870	0	True				
ANR	7504905	ParameterType	void * *		7504870	0					
ANR	7504906	Identifier	stack		7504870	1					
ANR	7504907	Parameter	int * skip	712:47:21103:21111	7504870	1	True				
ANR	7504908	ParameterType	int *		7504870	0					
ANR	7504909	Identifier	skip		7504870	1					
ANR	7504910	CFGEntryNode	ENTRY		7504870		True				
ANR	7504911	CFGExitNode	EXIT		7504870		True				
ANR	7504912	Symbol	Memento_CaptureStackBackTrace		7504870						
ANR	7504913	Symbol	* skip		7504870						
ANR	7504914	Symbol	stack		7504870						
ANR	7504915	Symbol	NULL		7504870						
ANR	7504916	Symbol	SkipStackBackTraceLevels		7504870						
ANR	7504917	Symbol	skip		7504870						
ANR	7504918	Function	Memento_showStacktrace	722:0:21361:22135							
ANR	7504919	FunctionDef	"Memento_showStacktrace (void * * stack , int numberOfFrames)"		7504918	0					
ANR	7504920	CompoundStatement		723:0:21430:22135	7504918	0					
ANR	7504921	IdentifierDeclStatement	MY_IMAGEHLP_LINE line ;	724:4:21436:21457	7504918	0	True				
ANR	7504922	IdentifierDecl	line		7504918	0					
ANR	7504923	IdentifierDeclType	MY_IMAGEHLP_LINE		7504918	0					
ANR	7504924	Identifier	line		7504918	1					
ANR	7504925	IdentifierDeclStatement	int i ;	725:4:21463:21468	7504918	1	True				
ANR	7504926	IdentifierDecl	i		7504918	0					
ANR	7504927	IdentifierDeclType	int		7504918	0					
ANR	7504928	Identifier	i		7504918	1					
ANR	7504929	IdentifierDeclStatement	char symbol_buffer [ sizeof ( MY_SYMBOL_INFO ) + 1024 + 1 ] ;	726:4:21474:21527	7504918	2	True				
ANR	7504930	IdentifierDecl	symbol_buffer [ sizeof ( MY_SYMBOL_INFO ) + 1024 + 1 ]		7504918	0					
ANR	7504931	IdentifierDeclType	char [ sizeof ( MY_SYMBOL_INFO ) + 1024 + 1 ]		7504918	0					
ANR	7504932	Identifier	symbol_buffer		7504918	1					
ANR	7504933	AdditiveExpression	sizeof ( MY_SYMBOL_INFO ) + 1024 + 1		7504918	2		+			
ANR	7504934	SizeofExpression	sizeof ( MY_SYMBOL_INFO )		7504918	0					
ANR	7504935	Sizeof	sizeof		7504918	0					
ANR	7504936	SizeofOperand	MY_SYMBOL_INFO		7504918	1					
ANR	7504937	AdditiveExpression	1024 + 1		7504918	1		+			
ANR	7504938	PrimaryExpression	1024		7504918	0					
ANR	7504939	PrimaryExpression	1		7504918	1					
ANR	7504940	IdentifierDeclStatement	MY_SYMBOL_INFO * symbol = ( MY_SYMBOL_INFO * ) symbol_buffer ;	727:4:21533:21589	7504918	3	True				
ANR	7504941	IdentifierDecl	* symbol = ( MY_SYMBOL_INFO * ) symbol_buffer		7504918	0					
ANR	7504942	IdentifierDeclType	MY_SYMBOL_INFO *		7504918	0					
ANR	7504943	Identifier	symbol		7504918	1					
ANR	7504944	AssignmentExpression	* symbol = ( MY_SYMBOL_INFO * ) symbol_buffer		7504918	2		=			
ANR	7504945	Identifier	symbol		7504918	0					
ANR	7504946	CastExpression	( MY_SYMBOL_INFO * ) symbol_buffer		7504918	1					
ANR	7504947	CastTarget	MY_SYMBOL_INFO *		7504918	0					
ANR	7504948	Identifier	symbol_buffer		7504918	1					
ANR	7504949	ExpressionStatement	symbol -> MaxNameLen = 1024	729:4:21596:21621	7504918	4	True				
ANR	7504950	AssignmentExpression	symbol -> MaxNameLen = 1024		7504918	0		=			
ANR	7504951	PtrMemberAccess	symbol -> MaxNameLen		7504918	0					
ANR	7504952	Identifier	symbol		7504918	0					
ANR	7504953	Identifier	MaxNameLen		7504918	1					
ANR	7504954	PrimaryExpression	1024		7504918	1					
ANR	7504955	ExpressionStatement	symbol -> SizeOfStruct = sizeof ( MY_SYMBOL_INFO )	730:4:21627:21672	7504918	5	True				
ANR	7504956	AssignmentExpression	symbol -> SizeOfStruct = sizeof ( MY_SYMBOL_INFO )		7504918	0		=			
ANR	7504957	PtrMemberAccess	symbol -> SizeOfStruct		7504918	0					
ANR	7504958	Identifier	symbol		7504918	0					
ANR	7504959	Identifier	SizeOfStruct		7504918	1					
ANR	7504960	SizeofExpression	sizeof ( MY_SYMBOL_INFO )		7504918	1					
ANR	7504961	Sizeof	sizeof		7504918	0					
ANR	7504962	SizeofOperand	MY_SYMBOL_INFO		7504918	1					
ANR	7504963	ExpressionStatement	line . SizeOfStruct = sizeof ( MY_IMAGEHLP_LINE )	731:4:21678:21722	7504918	6	True				
ANR	7504964	AssignmentExpression	line . SizeOfStruct = sizeof ( MY_IMAGEHLP_LINE )		7504918	0		=			
ANR	7504965	MemberAccess	line . SizeOfStruct		7504918	0					
ANR	7504966	Identifier	line		7504918	0					
ANR	7504967	Identifier	SizeOfStruct		7504918	1					
ANR	7504968	SizeofExpression	sizeof ( MY_IMAGEHLP_LINE )		7504918	1					
ANR	7504969	Sizeof	sizeof		7504918	0					
ANR	7504970	SizeofOperand	MY_IMAGEHLP_LINE		7504918	1					
ANR	7504971	ForStatement	for ( i = 0 ; i < numberOfFrames ; i ++ )		7504918	7					
ANR	7504972	ForInit	i = 0 ;	732:9:21733:21738	7504918	0	True				
ANR	7504973	AssignmentExpression	i = 0		7504918	0		=			
ANR	7504974	Identifier	i		7504918	0					
ANR	7504975	PrimaryExpression	0		7504918	1					
ANR	7504976	Condition	i < numberOfFrames	732:16:21740:21757	7504918	1	True				
ANR	7504977	RelationalExpression	i < numberOfFrames		7504918	0		<			
ANR	7504978	Identifier	i		7504918	0					
ANR	7504979	Identifier	numberOfFrames		7504918	1					
ANR	7504980	PostIncDecOperationExpression	i ++	732:36:21760:21762	7504918	2	True				
ANR	7504981	Identifier	i		7504918	0					
ANR	7504982	IncDec	++		7504918	1					
ANR	7504983	CompoundStatement		13:8:382:402	7504918	3					
ANR	7504984	IdentifierDeclStatement	DWORD64 dwDisplacement64 ;	734:8:21779:21803	7504918	0	True				
ANR	7504985	IdentifierDecl	dwDisplacement64		7504918	0					
ANR	7504986	IdentifierDeclType	DWORD64		7504918	0					
ANR	7504987	Identifier	dwDisplacement64		7504918	1					
ANR	7504988	IdentifierDeclStatement	DWORD dwDisplacement ;	735:8:21813:21833	7504918	1	True				
ANR	7504989	IdentifierDecl	dwDisplacement		7504918	0					
ANR	7504990	IdentifierDeclType	DWORD		7504918	0					
ANR	7504991	Identifier	dwDisplacement		7504918	1					
ANR	7504992	ExpressionStatement	"Memento_SymFromAddr ( Memento_process , ( DWORD64 ) ( stack [ i ] ) , & dwDisplacement64 , symbol )"	736:8:21843:21927	7504918	2	True				
ANR	7504993	CallExpression	"Memento_SymFromAddr ( Memento_process , ( DWORD64 ) ( stack [ i ] ) , & dwDisplacement64 , symbol )"		7504918	0					
ANR	7504994	Callee	Memento_SymFromAddr		7504918	0					
ANR	7504995	Identifier	Memento_SymFromAddr		7504918	0					
ANR	7504996	ArgumentList	Memento_process		7504918	1					
ANR	7504997	Argument	Memento_process		7504918	0					
ANR	7504998	Identifier	Memento_process		7504918	0					
ANR	7504999	Argument	( DWORD64 ) ( stack [ i ] )		7504918	1					
ANR	7505000	CastExpression	( DWORD64 ) ( stack [ i ] )		7504918	0					
ANR	7505001	CastTarget	DWORD64		7504918	0					
ANR	7505002	ArrayIndexing	stack [ i ]		7504918	1					
ANR	7505003	Identifier	stack		7504918	0					
ANR	7505004	Identifier	i		7504918	1					
ANR	7505005	Argument	& dwDisplacement64		7504918	2					
ANR	7505006	UnaryOperationExpression	& dwDisplacement64		7504918	0					
ANR	7505007	UnaryOperator	&		7504918	0					
ANR	7505008	Identifier	dwDisplacement64		7504918	1					
ANR	7505009	Argument	symbol		7504918	3					
ANR	7505010	Identifier	symbol		7504918	0					
ANR	7505011	ExpressionStatement	"Memento_SymGetLineFromAddr ( Memento_process , ( DWORD_NATIVESIZED ) ( stack [ i ] ) , & dwDisplacement , & line )"	737:8:21937:22035	7504918	3	True				
ANR	7505012	CallExpression	"Memento_SymGetLineFromAddr ( Memento_process , ( DWORD_NATIVESIZED ) ( stack [ i ] ) , & dwDisplacement , & line )"		7504918	0					
ANR	7505013	Callee	Memento_SymGetLineFromAddr		7504918	0					
ANR	7505014	Identifier	Memento_SymGetLineFromAddr		7504918	0					
ANR	7505015	ArgumentList	Memento_process		7504918	1					
ANR	7505016	Argument	Memento_process		7504918	0					
ANR	7505017	Identifier	Memento_process		7504918	0					
ANR	7505018	Argument	( DWORD_NATIVESIZED ) ( stack [ i ] )		7504918	1					
ANR	7505019	CastExpression	( DWORD_NATIVESIZED ) ( stack [ i ] )		7504918	0					
ANR	7505020	CastTarget	DWORD_NATIVESIZED		7504918	0					
ANR	7505021	ArrayIndexing	stack [ i ]		7504918	1					
ANR	7505022	Identifier	stack		7504918	0					
ANR	7505023	Identifier	i		7504918	1					
ANR	7505024	Argument	& dwDisplacement		7504918	2					
ANR	7505025	UnaryOperationExpression	& dwDisplacement		7504918	0					
ANR	7505026	UnaryOperator	&		7504918	0					
ANR	7505027	Identifier	dwDisplacement		7504918	1					
ANR	7505028	Argument	& line		7504918	3					
ANR	7505029	UnaryOperationExpression	& line		7504918	0					
ANR	7505030	UnaryOperator	&		7504918	0					
ANR	7505031	Identifier	line		7504918	1					
ANR	7505032	ExpressionStatement	"fprintf ( stderr , ""    %s in %s:%d\\n"" , symbol -> Name , line . FileName , line . LineNumber )"	738:8:22045:22127	7504918	4	True				
ANR	7505033	CallExpression	"fprintf ( stderr , ""    %s in %s:%d\\n"" , symbol -> Name , line . FileName , line . LineNumber )"		7504918	0					
ANR	7505034	Callee	fprintf		7504918	0					
ANR	7505035	Identifier	fprintf		7504918	0					
ANR	7505036	ArgumentList	stderr		7504918	1					
ANR	7505037	Argument	stderr		7504918	0					
ANR	7505038	Identifier	stderr		7504918	0					
ANR	7505039	Argument	"""    %s in %s:%d\\n"""		7504918	1					
ANR	7505040	PrimaryExpression	"""    %s in %s:%d\\n"""		7504918	0					
ANR	7505041	Argument	symbol -> Name		7504918	2					
ANR	7505042	PtrMemberAccess	symbol -> Name		7504918	0					
ANR	7505043	Identifier	symbol		7504918	0					
ANR	7505044	Identifier	Name		7504918	1					
ANR	7505045	Argument	line . FileName		7504918	3					
ANR	7505046	MemberAccess	line . FileName		7504918	0					
ANR	7505047	Identifier	line		7504918	0					
ANR	7505048	Identifier	FileName		7504918	1					
ANR	7505049	Argument	line . LineNumber		7504918	4					
ANR	7505050	MemberAccess	line . LineNumber		7504918	0					
ANR	7505051	Identifier	line		7504918	0					
ANR	7505052	Identifier	LineNumber		7504918	1					
ANR	7505053	ReturnType	static void		7504918	1					
ANR	7505054	Identifier	Memento_showStacktrace		7504918	2					
ANR	7505055	ParameterList	"void * * stack , int numberOfFrames"		7504918	3					
ANR	7505056	Parameter	void * * stack	722:35:21396:21407	7504918	0	True				
ANR	7505057	ParameterType	void * *		7504918	0					
ANR	7505058	Identifier	stack		7504918	1					
ANR	7505059	Parameter	int numberOfFrames	722:49:21410:21427	7504918	1	True				
ANR	7505060	ParameterType	int		7504918	0					
ANR	7505061	Identifier	numberOfFrames		7504918	1					
ANR	7505062	CFGEntryNode	ENTRY		7504918		True				
ANR	7505063	CFGExitNode	EXIT		7504918		True				
ANR	7505064	Symbol	symbol_buffer		7504918						
ANR	7505065	Symbol	symbol		7504918						
ANR	7505066	Symbol	stack		7504918						
ANR	7505067	Symbol	& line		7504918						
ANR	7505068	Symbol	line		7504918						
ANR	7505069	Symbol	line . FileName		7504918						
ANR	7505070	Symbol	line . LineNumber		7504918						
ANR	7505071	Symbol	i		7504918						
ANR	7505072	Symbol	dwDisplacement		7504918						
ANR	7505073	Symbol	line . SizeOfStruct		7504918						
ANR	7505074	Symbol	stderr		7504918						
ANR	7505075	Symbol	* i		7504918						
ANR	7505076	Symbol	numberOfFrames		7504918						
ANR	7505077	Symbol	symbol -> MaxNameLen		7504918						
ANR	7505078	Symbol	& dwDisplacement64		7504918						
ANR	7505079	Symbol	* stack		7504918						
ANR	7505080	Symbol	dwDisplacement64		7504918						
ANR	7505081	Symbol	symbol -> Name		7504918						
ANR	7505082	Symbol	* symbol		7504918						
ANR	7505083	Symbol	symbol -> SizeOfStruct		7504918						
ANR	7505084	Symbol	& dwDisplacement		7504918						
ANR	7505085	Symbol	Memento_process		7504918						
ANR	7505086	DeclStmt									
ANR	7505087	Decl							extern char	"extern char * ( const char * mangled_name , char * output_buffer , size_t * length , int * status )"	__cxa_demangle
ANR	7505088	Function	Memento_initStacktracer	752:0:22480:22524							
ANR	7505089	FunctionDef	Memento_initStacktracer ()		7505088	0					
ANR	7505090	CompoundStatement		753:0:22522:22524	7505088	0					
ANR	7505091	ReturnType	static void		7505088	1					
ANR	7505092	Identifier	Memento_initStacktracer		7505088	2					
ANR	7505093	ParameterList			7505088	3					
ANR	7505094	CFGEntryNode	ENTRY		7505088		True				
ANR	7505095	CFGExitNode	EXIT		7505088		True				
ANR	7505096	ClassDef	<unnamed>	758:8:22570:22630							
ANR	7505097	DeclStmt									
ANR	7505098	Decl							int	int	count
ANR	7505099	DeclStmt									
ANR	7505100	Decl							void	void * *	addr
ANR	7505101	DeclStmt									
ANR	7505102	Decl									my_unwind_details
ANR	7505103	Function	unwind_populate_callback	764:0:22633:23039							
ANR	7505104	FunctionDef	"unwind_populate_callback (struct _Unwind_Context * context , void * arg)"		7505103	0					
ANR	7505105	CompoundStatement		766:0:22781:23039	7505103	0					
ANR	7505106	IdentifierDeclStatement	my_unwind_details * uw = ( my_unwind_details * ) arg ;	767:4:22787:22835	7505103	0	True				
ANR	7505107	IdentifierDecl	* uw = ( my_unwind_details * ) arg		7505103	0					
ANR	7505108	IdentifierDeclType	my_unwind_details *		7505103	0					
ANR	7505109	Identifier	uw		7505103	1					
ANR	7505110	AssignmentExpression	* uw = ( my_unwind_details * ) arg		7505103	2		=			
ANR	7505111	Identifier	uw		7505103	0					
ANR	7505112	CastExpression	( my_unwind_details * ) arg		7505103	1					
ANR	7505113	CastTarget	my_unwind_details *		7505103	0					
ANR	7505114	Identifier	arg		7505103	1					
ANR	7505115	IdentifierDeclStatement	int count = uw -> count ;	768:4:22841:22862	7505103	1	True				
ANR	7505116	IdentifierDecl	count = uw -> count		7505103	0					
ANR	7505117	IdentifierDeclType	int		7505103	0					
ANR	7505118	Identifier	count		7505103	1					
ANR	7505119	AssignmentExpression	count = uw -> count		7505103	2		=			
ANR	7505120	Identifier	count		7505103	0					
ANR	7505121	PtrMemberAccess	uw -> count		7505103	1					
ANR	7505122	Identifier	uw		7505103	0					
ANR	7505123	Identifier	count		7505103	1					
ANR	7505124	IfStatement	if ( count >= MEMENTO_BACKTRACE_MAX )		7505103	2					
ANR	7505125	Condition	count >= MEMENTO_BACKTRACE_MAX	770:8:22873:22902	7505103	0	True				
ANR	7505126	RelationalExpression	count >= MEMENTO_BACKTRACE_MAX		7505103	0		>=			
ANR	7505127	Identifier	count		7505103	0					
ANR	7505128	Identifier	MEMENTO_BACKTRACE_MAX		7505103	1					
ANR	7505129	ReturnStatement	return _URC_END_OF_STACK ;	771:8:22913:22937	7505103	1	True				
ANR	7505130	Identifier	_URC_END_OF_STACK		7505103	0					
ANR	7505131	ExpressionStatement	uw -> addr [ count ] = ( void * ) _Unwind_GetIP ( context )	773:4:22944:22992	7505103	3	True				
ANR	7505132	AssignmentExpression	uw -> addr [ count ] = ( void * ) _Unwind_GetIP ( context )		7505103	0		=			
ANR	7505133	ArrayIndexing	uw -> addr [ count ]		7505103	0					
ANR	7505134	PtrMemberAccess	uw -> addr		7505103	0					
ANR	7505135	Identifier	uw		7505103	0					
ANR	7505136	Identifier	addr		7505103	1					
ANR	7505137	Identifier	count		7505103	1					
ANR	7505138	CastExpression	( void * ) _Unwind_GetIP ( context )		7505103	1					
ANR	7505139	CastTarget	void *		7505103	0					
ANR	7505140	CallExpression	_Unwind_GetIP ( context )		7505103	1					
ANR	7505141	Callee	_Unwind_GetIP		7505103	0					
ANR	7505142	Identifier	_Unwind_GetIP		7505103	0					
ANR	7505143	ArgumentList	context		7505103	1					
ANR	7505144	Argument	context		7505103	0					
ANR	7505145	Identifier	context		7505103	0					
ANR	7505146	ExpressionStatement	uw -> count ++	774:4:22998:23009	7505103	4	True				
ANR	7505147	PostIncDecOperationExpression	uw -> count ++		7505103	0					
ANR	7505148	PtrMemberAccess	uw -> count		7505103	0					
ANR	7505149	Identifier	uw		7505103	0					
ANR	7505150	Identifier	count		7505103	1					
ANR	7505151	IncDec	++		7505103	1					
ANR	7505152	ReturnStatement	return _URC_NO_REASON ;	776:4:23016:23037	7505103	5	True				
ANR	7505153	Identifier	_URC_NO_REASON		7505103	0					
ANR	7505154	ReturnType	static _Unwind_Reason_Code		7505103	1					
ANR	7505155	Identifier	unwind_populate_callback		7505103	2					
ANR	7505156	ParameterList	"struct _Unwind_Context * context , void * arg"		7505103	3					
ANR	7505157	Parameter	struct _Unwind_Context * context	764:52:22685:22715	7505103	0	True				
ANR	7505158	ParameterType	struct _Unwind_Context *		7505103	0					
ANR	7505159	Identifier	context		7505103	1					
ANR	7505160	Parameter	void * arg	765:52:22770:22778	7505103	1	True				
ANR	7505161	ParameterType	void *		7505103	0					
ANR	7505162	Identifier	arg		7505103	1					
ANR	7505163	CFGEntryNode	ENTRY		7505103		True				
ANR	7505164	CFGExitNode	EXIT		7505103		True				
ANR	7505165	Symbol	uw		7505103						
ANR	7505166	Symbol	_Unwind_GetIP		7505103						
ANR	7505167	Symbol	count		7505103						
ANR	7505168	Symbol	* uw		7505103						
ANR	7505169	Symbol	* * uw		7505103						
ANR	7505170	Symbol	uw -> count		7505103						
ANR	7505171	Symbol	* uw -> addr		7505103						
ANR	7505172	Symbol	MEMENTO_BACKTRACE_MAX		7505103						
ANR	7505173	Symbol	* count		7505103						
ANR	7505174	Symbol	_URC_END_OF_STACK		7505103						
ANR	7505175	Symbol	arg		7505103						
ANR	7505176	Symbol	context		7505103						
ANR	7505177	Symbol	uw -> addr		7505103						
ANR	7505178	Symbol	_URC_NO_REASON		7505103						
ANR	7505179	Function	Memento_getStacktrace	779:0:23042:23503							
ANR	7505180	FunctionDef	"Memento_getStacktrace (void * * stack , int * skip)"		7505179	0					
ANR	7505181	CompoundStatement		780:0:23100:23503	7505179	0					
ANR	7505182	IdentifierDeclStatement	"my_unwind_details uw = { 0 , stack } ;"	781:4:23106:23141	7505179	0	True				
ANR	7505183	IdentifierDecl	"uw = { 0 , stack }"		7505179	0					
ANR	7505184	IdentifierDeclType	my_unwind_details		7505179	0					
ANR	7505185	Identifier	uw		7505179	1					
ANR	7505186	AssignmentExpression	"uw = { 0 , stack }"		7505179	2		=			
ANR	7505187	Identifier	uw		7505179	0					
ANR	7505188	InitializerList	0		7505179	1					
ANR	7505189	PrimaryExpression	0		7505179	0					
ANR	7505190	Identifier	stack		7505179	1					
ANR	7505191	ExpressionStatement	* skip = 0	783:4:23148:23157	7505179	1	True				
ANR	7505192	AssignmentExpression	* skip = 0		7505179	0		=			
ANR	7505193	UnaryOperationExpression	* skip		7505179	0					
ANR	7505194	UnaryOperator	*		7505179	0					
ANR	7505195	Identifier	skip		7505179	1					
ANR	7505196	PrimaryExpression	0		7505179	1					
ANR	7505197	ExpressionStatement	"_Unwind_Backtrace ( unwind_populate_callback , & uw )"	788:4:23304:23352	7505179	2	True				
ANR	7505198	CallExpression	"_Unwind_Backtrace ( unwind_populate_callback , & uw )"		7505179	0					
ANR	7505199	Callee	_Unwind_Backtrace		7505179	0					
ANR	7505200	Identifier	_Unwind_Backtrace		7505179	0					
ANR	7505201	ArgumentList	unwind_populate_callback		7505179	1					
ANR	7505202	Argument	unwind_populate_callback		7505179	0					
ANR	7505203	Identifier	unwind_populate_callback		7505179	0					
ANR	7505204	Argument	& uw		7505179	1					
ANR	7505205	UnaryOperationExpression	& uw		7505179	0					
ANR	7505206	UnaryOperator	&		7505179	0					
ANR	7505207	Identifier	uw		7505179	1					
ANR	7505208	IfStatement	if ( uw . count <= SkipStackBackTraceLevels )		7505179	3					
ANR	7505209	Condition	uw . count <= SkipStackBackTraceLevels	789:8:23362:23397	7505179	0	True				
ANR	7505210	RelationalExpression	uw . count <= SkipStackBackTraceLevels		7505179	0		<=			
ANR	7505211	MemberAccess	uw . count		7505179	0					
ANR	7505212	Identifier	uw		7505179	0					
ANR	7505213	Identifier	count		7505179	1					
ANR	7505214	Identifier	SkipStackBackTraceLevels		7505179	1					
ANR	7505215	ReturnStatement	return 0 ;	790:8:23408:23416	7505179	1	True				
ANR	7505216	PrimaryExpression	0		7505179	0					
ANR	7505217	ExpressionStatement	* skip = SkipStackBackTraceLevels	792:4:23423:23455	7505179	4	True				
ANR	7505218	AssignmentExpression	* skip = SkipStackBackTraceLevels		7505179	0		=			
ANR	7505219	UnaryOperationExpression	* skip		7505179	0					
ANR	7505220	UnaryOperator	*		7505179	0					
ANR	7505221	Identifier	skip		7505179	1					
ANR	7505222	Identifier	SkipStackBackTraceLevels		7505179	1					
ANR	7505223	ReturnStatement	return uw . count - SkipStackBackTraceLevels ;	793:4:23461:23501	7505179	5	True				
ANR	7505224	AdditiveExpression	uw . count - SkipStackBackTraceLevels		7505179	0		-			
ANR	7505225	MemberAccess	uw . count		7505179	0					
ANR	7505226	Identifier	uw		7505179	0					
ANR	7505227	Identifier	count		7505179	1					
ANR	7505228	Identifier	SkipStackBackTraceLevels		7505179	1					
ANR	7505229	ReturnType	static int		7505179	1					
ANR	7505230	Identifier	Memento_getStacktrace		7505179	2					
ANR	7505231	ParameterList	"void * * stack , int * skip"		7505179	3					
ANR	7505232	Parameter	void * * stack	779:33:23075:23086	7505179	0	True				
ANR	7505233	ParameterType	void * *		7505179	0					
ANR	7505234	Identifier	stack		7505179	1					
ANR	7505235	Parameter	int * skip	779:47:23089:23097	7505179	1	True				
ANR	7505236	ParameterType	int *		7505179	0					
ANR	7505237	Identifier	skip		7505179	1					
ANR	7505238	CFGEntryNode	ENTRY		7505179		True				
ANR	7505239	CFGExitNode	EXIT		7505179		True				
ANR	7505240	Symbol	* skip		7505179						
ANR	7505241	Symbol	stack		7505179						
ANR	7505242	Symbol	uw		7505179						
ANR	7505243	Symbol	SkipStackBackTraceLevels		7505179						
ANR	7505244	Symbol	uw . count		7505179						
ANR	7505245	Symbol	skip		7505179						
ANR	7505246	Symbol	unwind_populate_callback		7505179						
ANR	7505247	Symbol	& uw		7505179						
ANR	7505248	Function	Memento_showStacktrace	796:0:23506:24176							
ANR	7505249	FunctionDef	"Memento_showStacktrace (void * * stack , int numberOfFrames)"		7505248	0					
ANR	7505250	CompoundStatement		797:0:23575:24176	7505248	0					
ANR	7505251	IdentifierDeclStatement	int i ;	798:4:23581:23586	7505248	0	True				
ANR	7505252	IdentifierDecl	i		7505248	0					
ANR	7505253	IdentifierDeclType	int		7505248	0					
ANR	7505254	Identifier	i		7505248	1					
ANR	7505255	ForStatement	for ( i = 0 ; i < numberOfFrames ; i ++ )		7505248	1					
ANR	7505256	ForInit	i = 0 ;	800:9:23598:23603	7505248	0	True				
ANR	7505257	AssignmentExpression	i = 0		7505248	0		=			
ANR	7505258	Identifier	i		7505248	0					
ANR	7505259	PrimaryExpression	0		7505248	1					
ANR	7505260	Condition	i < numberOfFrames	800:16:23605:23622	7505248	1	True				
ANR	7505261	RelationalExpression	i < numberOfFrames		7505248	0		<			
ANR	7505262	Identifier	i		7505248	0					
ANR	7505263	Identifier	numberOfFrames		7505248	1					
ANR	7505264	PostIncDecOperationExpression	i ++	800:36:23625:23627	7505248	2	True				
ANR	7505265	Identifier	i		7505248	0					
ANR	7505266	IncDec	++		7505248	1					
ANR	7505267	CompoundStatement		6:8:68:80	7505248	3					
ANR	7505268	IdentifierDeclStatement	Dl_info info ;	802:8:23644:23656	7505248	0	True				
ANR	7505269	IdentifierDecl	info		7505248	0					
ANR	7505270	IdentifierDeclType	Dl_info		7505248	0					
ANR	7505271	Identifier	info		7505248	1					
ANR	7505272	IfStatement	"if ( dladdr ( stack [ i ] , & info ) )"		7505248	1					
ANR	7505273	Condition	"dladdr ( stack [ i ] , & info )"	803:12:23670:23692	7505248	0	True				
ANR	7505274	CallExpression	"dladdr ( stack [ i ] , & info )"		7505248	0					
ANR	7505275	Callee	dladdr		7505248	0					
ANR	7505276	Identifier	dladdr		7505248	0					
ANR	7505277	ArgumentList	stack [ i ]		7505248	1					
ANR	7505278	Argument	stack [ i ]		7505248	0					
ANR	7505279	ArrayIndexing	stack [ i ]		7505248	0					
ANR	7505280	Identifier	stack		7505248	0					
ANR	7505281	Identifier	i		7505248	1					
ANR	7505282	Argument	& info		7505248	1					
ANR	7505283	UnaryOperationExpression	& info		7505248	0					
ANR	7505284	UnaryOperator	&		7505248	0					
ANR	7505285	Identifier	info		7505248	1					
ANR	7505286	CompoundStatement		12:12:315:353	7505248	1					
ANR	7505287	IdentifierDeclStatement	int status = 0 ;	805:12:23717:23731	7505248	0	True				
ANR	7505288	IdentifierDecl	status = 0		7505248	0					
ANR	7505289	IdentifierDeclType	int		7505248	0					
ANR	7505290	Identifier	status		7505248	1					
ANR	7505291	AssignmentExpression	status = 0		7505248	2		=			
ANR	7505292	Identifier	status		7505248	0					
ANR	7505293	PrimaryExpression	0		7505248	1					
ANR	7505294	IdentifierDeclStatement	"const char * sym = info . dli_sname ? info . dli_sname : ""<unknown>"" ;"	806:12:23745:23808	7505248	1	True				
ANR	7505295	IdentifierDecl	"* sym = info . dli_sname ? info . dli_sname : ""<unknown>"""		7505248	0					
ANR	7505296	IdentifierDeclType	const char *		7505248	0					
ANR	7505297	Identifier	sym		7505248	1					
ANR	7505298	AssignmentExpression	"* sym = info . dli_sname ? info . dli_sname : ""<unknown>"""		7505248	2		=			
ANR	7505299	Identifier	sym		7505248	0					
ANR	7505300	ConditionalExpression	"info . dli_sname ? info . dli_sname : ""<unknown>"""		7505248	1					
ANR	7505301	Condition	info . dli_sname		7505248	0					
ANR	7505302	MemberAccess	info . dli_sname		7505248	0					
ANR	7505303	Identifier	info		7505248	0					
ANR	7505304	Identifier	dli_sname		7505248	1					
ANR	7505305	MemberAccess	info . dli_sname		7505248	1					
ANR	7505306	Identifier	info		7505248	0					
ANR	7505307	Identifier	dli_sname		7505248	1					
ANR	7505308	PrimaryExpression	"""<unknown>"""		7505248	2					
ANR	7505309	IdentifierDeclStatement	"char * demangled = __cxa_demangle ( sym , NULL , 0 , & status ) ;"	807:12:23822:23877	7505248	2	True				
ANR	7505310	IdentifierDecl	"* demangled = __cxa_demangle ( sym , NULL , 0 , & status )"		7505248	0					
ANR	7505311	IdentifierDeclType	char *		7505248	0					
ANR	7505312	Identifier	demangled		7505248	1					
ANR	7505313	AssignmentExpression	"* demangled = __cxa_demangle ( sym , NULL , 0 , & status )"		7505248	2		=			
ANR	7505314	Identifier	demangled		7505248	0					
ANR	7505315	CallExpression	"__cxa_demangle ( sym , NULL , 0 , & status )"		7505248	1					
ANR	7505316	Callee	__cxa_demangle		7505248	0					
ANR	7505317	Identifier	__cxa_demangle		7505248	0					
ANR	7505318	ArgumentList	sym		7505248	1					
ANR	7505319	Argument	sym		7505248	0					
ANR	7505320	Identifier	sym		7505248	0					
ANR	7505321	Argument	NULL		7505248	1					
ANR	7505322	Identifier	NULL		7505248	0					
ANR	7505323	Argument	0		7505248	2					
ANR	7505324	PrimaryExpression	0		7505248	0					
ANR	7505325	Argument	& status		7505248	3					
ANR	7505326	UnaryOperationExpression	& status		7505248	0					
ANR	7505327	UnaryOperator	&		7505248	0					
ANR	7505328	Identifier	status		7505248	1					
ANR	7505329	IdentifierDeclStatement	int offset = stack [ i ] - info . dli_saddr ;	808:12:23891:23929	7505248	3	True				
ANR	7505330	IdentifierDecl	offset = stack [ i ] - info . dli_saddr		7505248	0					
ANR	7505331	IdentifierDeclType	int		7505248	0					
ANR	7505332	Identifier	offset		7505248	1					
ANR	7505333	AssignmentExpression	offset = stack [ i ] - info . dli_saddr		7505248	2		=			
ANR	7505334	Identifier	offset		7505248	0					
ANR	7505335	AdditiveExpression	stack [ i ] - info . dli_saddr		7505248	1		-			
ANR	7505336	ArrayIndexing	stack [ i ]		7505248	0					
ANR	7505337	Identifier	stack		7505248	0					
ANR	7505338	Identifier	i		7505248	1					
ANR	7505339	MemberAccess	info . dli_saddr		7505248	1					
ANR	7505340	Identifier	info		7505248	0					
ANR	7505341	Identifier	dli_saddr		7505248	1					
ANR	7505342	ExpressionStatement	"fprintf ( stderr , ""    [%p]%s(+0x%x)\\n"" , stack [ i ] , demangled && status == 0 ? demangled : sym , offset )"	809:12:23943:24043	7505248	4	True				
ANR	7505343	CallExpression	"fprintf ( stderr , ""    [%p]%s(+0x%x)\\n"" , stack [ i ] , demangled && status == 0 ? demangled : sym , offset )"		7505248	0					
ANR	7505344	Callee	fprintf		7505248	0					
ANR	7505345	Identifier	fprintf		7505248	0					
ANR	7505346	ArgumentList	stderr		7505248	1					
ANR	7505347	Argument	stderr		7505248	0					
ANR	7505348	Identifier	stderr		7505248	0					
ANR	7505349	Argument	"""    [%p]%s(+0x%x)\\n"""		7505248	1					
ANR	7505350	PrimaryExpression	"""    [%p]%s(+0x%x)\\n"""		7505248	0					
ANR	7505351	Argument	stack [ i ]		7505248	2					
ANR	7505352	ArrayIndexing	stack [ i ]		7505248	0					
ANR	7505353	Identifier	stack		7505248	0					
ANR	7505354	Identifier	i		7505248	1					
ANR	7505355	Argument	demangled && status == 0 ? demangled : sym		7505248	3					
ANR	7505356	ConditionalExpression	demangled && status == 0 ? demangled : sym		7505248	0					
ANR	7505357	Condition	demangled && status == 0		7505248	0					
ANR	7505358	AndExpression	demangled && status == 0		7505248	0		&&			
ANR	7505359	Identifier	demangled		7505248	0					
ANR	7505360	EqualityExpression	status == 0		7505248	1		==			
ANR	7505361	Identifier	status		7505248	0					
ANR	7505362	PrimaryExpression	0		7505248	1					
ANR	7505363	Identifier	demangled		7505248	1					
ANR	7505364	Identifier	sym		7505248	2					
ANR	7505365	Argument	offset		7505248	4					
ANR	7505366	Identifier	offset		7505248	0					
ANR	7505367	ExpressionStatement	free ( demangled )	810:12:24057:24072	7505248	5	True				
ANR	7505368	CallExpression	free ( demangled )		7505248	0					
ANR	7505369	Callee	free		7505248	0					
ANR	7505370	Identifier	free		7505248	0					
ANR	7505371	ArgumentList	demangled		7505248	1					
ANR	7505372	Argument	demangled		7505248	0					
ANR	7505373	Identifier	demangled		7505248	0					
ANR	7505374	ElseStatement	else		7505248	0					
ANR	7505375	CompoundStatement		17:8:529:529	7505248	0					
ANR	7505376	ExpressionStatement	"fprintf ( stderr , ""    [%p]\\n"" , stack [ i ] )"	814:12:24119:24158	7505248	0	True				
ANR	7505377	CallExpression	"fprintf ( stderr , ""    [%p]\\n"" , stack [ i ] )"		7505248	0					
ANR	7505378	Callee	fprintf		7505248	0					
ANR	7505379	Identifier	fprintf		7505248	0					
ANR	7505380	ArgumentList	stderr		7505248	1					
ANR	7505381	Argument	stderr		7505248	0					
ANR	7505382	Identifier	stderr		7505248	0					
ANR	7505383	Argument	"""    [%p]\\n"""		7505248	1					
ANR	7505384	PrimaryExpression	"""    [%p]\\n"""		7505248	0					
ANR	7505385	Argument	stack [ i ]		7505248	2					
ANR	7505386	ArrayIndexing	stack [ i ]		7505248	0					
ANR	7505387	Identifier	stack		7505248	0					
ANR	7505388	Identifier	i		7505248	1					
ANR	7505389	ReturnType	static void		7505248	1					
ANR	7505390	Identifier	Memento_showStacktrace		7505248	2					
ANR	7505391	ParameterList	"void * * stack , int numberOfFrames"		7505248	3					
ANR	7505392	Parameter	void * * stack	796:35:23541:23552	7505248	0	True				
ANR	7505393	ParameterType	void * *		7505248	0					
ANR	7505394	Identifier	stack		7505248	1					
ANR	7505395	Parameter	int numberOfFrames	796:49:23555:23572	7505248	1	True				
ANR	7505396	ParameterType	int		7505248	0					
ANR	7505397	Identifier	numberOfFrames		7505248	1					
ANR	7505398	CFGEntryNode	ENTRY		7505248		True				
ANR	7505399	CFGExitNode	EXIT		7505248		True				
ANR	7505400	Symbol	demangled		7505248						
ANR	7505401	Symbol	stack		7505248						
ANR	7505402	Symbol	NULL		7505248						
ANR	7505403	Symbol	& info		7505248						
ANR	7505404	Symbol	offset		7505248						
ANR	7505405	Symbol	sym		7505248						
ANR	7505406	Symbol	i		7505248						
ANR	7505407	Symbol	info . dli_saddr		7505248						
ANR	7505408	Symbol	stderr		7505248						
ANR	7505409	Symbol	info . dli_sname		7505248						
ANR	7505410	Symbol	& status		7505248						
ANR	7505411	Symbol	* i		7505248						
ANR	7505412	Symbol	numberOfFrames		7505248						
ANR	7505413	Symbol	__cxa_demangle		7505248						
ANR	7505414	Symbol	* stack		7505248						
ANR	7505415	Symbol	dladdr		7505248						
ANR	7505416	Symbol	info		7505248						
ANR	7505417	Symbol	status		7505248						
ANR	7505418	Function	Memento_initStacktracer	820:0:24185:24229							
ANR	7505419	FunctionDef	Memento_initStacktracer ()		7505418	0					
ANR	7505420	CompoundStatement		821:0:24227:24229	7505418	0					
ANR	7505421	ReturnType	static void		7505418	1					
ANR	7505422	Identifier	Memento_initStacktracer		7505418	2					
ANR	7505423	ParameterList			7505418	3					
ANR	7505424	CFGEntryNode	ENTRY		7505418		True				
ANR	7505425	CFGExitNode	EXIT		7505418		True				
ANR	7505426	Function	Memento_getStacktrace	824:0:24232:24321							
ANR	7505427	FunctionDef	"Memento_getStacktrace (void * * stack , int * skip)"		7505426	0					
ANR	7505428	CompoundStatement		825:0:24290:24321	7505426	0					
ANR	7505429	ExpressionStatement	* skip = 0	826:4:24296:24305	7505426	0	True				
ANR	7505430	AssignmentExpression	* skip = 0		7505426	0		=			
ANR	7505431	UnaryOperationExpression	* skip		7505426	0					
ANR	7505432	UnaryOperator	*		7505426	0					
ANR	7505433	Identifier	skip		7505426	1					
ANR	7505434	PrimaryExpression	0		7505426	1					
ANR	7505435	ReturnStatement	return 0 ;	827:4:24311:24319	7505426	1	True				
ANR	7505436	PrimaryExpression	0		7505426	0					
ANR	7505437	ReturnType	static int		7505426	1					
ANR	7505438	Identifier	Memento_getStacktrace		7505426	2					
ANR	7505439	ParameterList	"void * * stack , int * skip"		7505426	3					
ANR	7505440	Parameter	void * * stack	824:33:24265:24276	7505426	0	True				
ANR	7505441	ParameterType	void * *		7505426	0					
ANR	7505442	Identifier	stack		7505426	1					
ANR	7505443	Parameter	int * skip	824:47:24279:24287	7505426	1	True				
ANR	7505444	ParameterType	int *		7505426	0					
ANR	7505445	Identifier	skip		7505426	1					
ANR	7505446	CFGEntryNode	ENTRY		7505426		True				
ANR	7505447	CFGExitNode	EXIT		7505426		True				
ANR	7505448	Symbol	* skip		7505426						
ANR	7505449	Symbol	stack		7505426						
ANR	7505450	Symbol	skip		7505426						
ANR	7505451	Function	Memento_showStacktrace	830:0:24324:24395							
ANR	7505452	FunctionDef	"Memento_showStacktrace (void * * stack , int numberOfFrames)"		7505451	0					
ANR	7505453	CompoundStatement		831:0:24393:24395	7505451	0					
ANR	7505454	ReturnType	static void		7505451	1					
ANR	7505455	Identifier	Memento_showStacktrace		7505451	2					
ANR	7505456	ParameterList	"void * * stack , int numberOfFrames"		7505451	3					
ANR	7505457	Parameter	void * * stack	830:35:24359:24370	7505451	0	True				
ANR	7505458	ParameterType	void * *		7505451	0					
ANR	7505459	Identifier	stack		7505451	1					
ANR	7505460	Parameter	int numberOfFrames	830:49:24373:24390	7505451	1	True				
ANR	7505461	ParameterType	int		7505451	0					
ANR	7505462	Identifier	numberOfFrames		7505451	1					
ANR	7505463	CFGEntryNode	ENTRY		7505451		True				
ANR	7505464	CFGExitNode	EXIT		7505451		True				
ANR	7505465	Symbol	stack		7505451						
ANR	7505466	Symbol	numberOfFrames		7505451						
ANR	7505467	Function	Memento_storeDetails	836:0:24460:25373							
ANR	7505468	FunctionDef	"Memento_storeDetails (Memento_BlkHeader * head , int type)"		7505467	0					
ANR	7505469	CompoundStatement		837:0:24528:25373	7505467	0					
ANR	7505470	IdentifierDeclStatement	void * stack [ MEMENTO_BACKTRACE_MAX ] ;	838:4:24534:24568	7505467	0	True				
ANR	7505471	IdentifierDecl	* stack [ MEMENTO_BACKTRACE_MAX ]		7505467	0					
ANR	7505472	IdentifierDeclType	void * [ MEMENTO_BACKTRACE_MAX ]		7505467	0					
ANR	7505473	Identifier	stack		7505467	1					
ANR	7505474	Identifier	MEMENTO_BACKTRACE_MAX		7505467	2					
ANR	7505475	IdentifierDeclStatement	Memento_BlkDetails * details ;	839:4:24574:24601	7505467	1	True				
ANR	7505476	IdentifierDecl	* details		7505467	0					
ANR	7505477	IdentifierDeclType	Memento_BlkDetails *		7505467	0					
ANR	7505478	Identifier	details		7505467	1					
ANR	7505479	IdentifierDeclStatement	int count ;	840:4:24607:24616	7505467	2	True				
ANR	7505480	IdentifierDecl	count		7505467	0					
ANR	7505481	IdentifierDeclType	int		7505467	0					
ANR	7505482	Identifier	count		7505467	1					
ANR	7505483	IdentifierDeclStatement	int skip ;	841:4:24622:24630	7505467	3	True				
ANR	7505484	IdentifierDecl	skip		7505467	0					
ANR	7505485	IdentifierDeclType	int		7505467	0					
ANR	7505486	Identifier	skip		7505467	1					
ANR	7505487	IfStatement	if ( head == NULL )		7505467	4					
ANR	7505488	Condition	head == NULL	843:8:24641:24652	7505467	0	True				
ANR	7505489	EqualityExpression	head == NULL		7505467	0		==			
ANR	7505490	Identifier	head		7505467	0					
ANR	7505491	Identifier	NULL		7505467	1					
ANR	7505492	ReturnStatement	return ;	844:8:24663:24669	7505467	1	True				
ANR	7505493	ExpressionStatement	"count = Memento_getStacktrace ( stack , & skip )"	847:4:24709:24752	7505467	5	True				
ANR	7505494	AssignmentExpression	"count = Memento_getStacktrace ( stack , & skip )"		7505467	0		=			
ANR	7505495	Identifier	count		7505467	0					
ANR	7505496	CallExpression	"Memento_getStacktrace ( stack , & skip )"		7505467	1					
ANR	7505497	Callee	Memento_getStacktrace		7505467	0					
ANR	7505498	Identifier	Memento_getStacktrace		7505467	0					
ANR	7505499	ArgumentList	stack		7505467	1					
ANR	7505500	Argument	stack		7505467	0					
ANR	7505501	Identifier	stack		7505467	0					
ANR	7505502	Argument	& skip		7505467	1					
ANR	7505503	UnaryOperationExpression	& skip		7505467	0					
ANR	7505504	UnaryOperator	&		7505467	0					
ANR	7505505	Identifier	skip		7505467	1					
ANR	7505506	ExpressionStatement	details = MEMENTO_UNDERLYING_MALLOC ( sizeof ( * details ) + ( count - 1 ) * sizeof ( void * ) )	853:4:24801:24883	7505467	6	True				
ANR	7505507	AssignmentExpression	details = MEMENTO_UNDERLYING_MALLOC ( sizeof ( * details ) + ( count - 1 ) * sizeof ( void * ) )		7505467	0		=			
ANR	7505508	Identifier	details		7505467	0					
ANR	7505509	CallExpression	MEMENTO_UNDERLYING_MALLOC ( sizeof ( * details ) + ( count - 1 ) * sizeof ( void * ) )		7505467	1					
ANR	7505510	Callee	MEMENTO_UNDERLYING_MALLOC		7505467	0					
ANR	7505511	Identifier	MEMENTO_UNDERLYING_MALLOC		7505467	0					
ANR	7505512	ArgumentList	sizeof ( * details ) + ( count - 1 ) * sizeof ( void * )		7505467	1					
ANR	7505513	Argument	sizeof ( * details ) + ( count - 1 ) * sizeof ( void * )		7505467	0					
ANR	7505514	AdditiveExpression	sizeof ( * details ) + ( count - 1 ) * sizeof ( void * )		7505467	0		+			
ANR	7505515	SizeofExpression	sizeof ( * details )		7505467	0					
ANR	7505516	Sizeof	sizeof		7505467	0					
ANR	7505517	UnaryOperationExpression	* details		7505467	1					
ANR	7505518	UnaryOperator	*		7505467	0					
ANR	7505519	Identifier	details		7505467	1					
ANR	7505520	MultiplicativeExpression	( count - 1 ) * sizeof ( void * )		7505467	1		*			
ANR	7505521	AdditiveExpression	count - 1		7505467	0		-			
ANR	7505522	Identifier	count		7505467	0					
ANR	7505523	PrimaryExpression	1		7505467	1					
ANR	7505524	SizeofExpression	sizeof ( void * )		7505467	1					
ANR	7505525	Sizeof	sizeof		7505467	0					
ANR	7505526	SizeofOperand	void *		7505467	1					
ANR	7505527	IfStatement	if ( details == NULL )		7505467	7					
ANR	7505528	Condition	details == NULL	854:8:24893:24907	7505467	0	True				
ANR	7505529	EqualityExpression	details == NULL		7505467	0		==			
ANR	7505530	Identifier	details		7505467	0					
ANR	7505531	Identifier	NULL		7505467	1					
ANR	7505532	ReturnStatement	return ;	855:8:24918:24924	7505467	1	True				
ANR	7505533	IfStatement	if ( count )		7505467	8					
ANR	7505534	Condition	count	857:8:24935:24939	7505467	0	True				
ANR	7505535	Identifier	count		7505467	0					
ANR	7505536	ExpressionStatement	"memcpy ( & details -> stack , & stack [ skip ] , count * sizeof ( void * ) )"	858:8:24950:25011	7505467	1	True				
ANR	7505537	CallExpression	"memcpy ( & details -> stack , & stack [ skip ] , count * sizeof ( void * ) )"		7505467	0					
ANR	7505538	Callee	memcpy		7505467	0					
ANR	7505539	Identifier	memcpy		7505467	0					
ANR	7505540	ArgumentList	& details -> stack		7505467	1					
ANR	7505541	Argument	& details -> stack		7505467	0					
ANR	7505542	UnaryOperationExpression	& details -> stack		7505467	0					
ANR	7505543	UnaryOperator	&		7505467	0					
ANR	7505544	PtrMemberAccess	details -> stack		7505467	1					
ANR	7505545	Identifier	details		7505467	0					
ANR	7505546	Identifier	stack		7505467	1					
ANR	7505547	Argument	& stack [ skip ]		7505467	1					
ANR	7505548	UnaryOperationExpression	& stack [ skip ]		7505467	0					
ANR	7505549	UnaryOperator	&		7505467	0					
ANR	7505550	ArrayIndexing	stack [ skip ]		7505467	1					
ANR	7505551	Identifier	stack		7505467	0					
ANR	7505552	Identifier	skip		7505467	1					
ANR	7505553	Argument	count * sizeof ( void * )		7505467	2					
ANR	7505554	MultiplicativeExpression	count * sizeof ( void * )		7505467	0		*			
ANR	7505555	Identifier	count		7505467	0					
ANR	7505556	SizeofExpression	sizeof ( void * )		7505467	1					
ANR	7505557	Sizeof	sizeof		7505467	0					
ANR	7505558	SizeofOperand	void *		7505467	1					
ANR	7505559	ExpressionStatement	details -> type = type	860:4:25018:25038	7505467	9	True				
ANR	7505560	AssignmentExpression	details -> type = type		7505467	0		=			
ANR	7505561	PtrMemberAccess	details -> type		7505467	0					
ANR	7505562	Identifier	details		7505467	0					
ANR	7505563	Identifier	type		7505467	1					
ANR	7505564	Identifier	type		7505467	1					
ANR	7505565	ExpressionStatement	details -> count = count	861:4:25044:25066	7505467	10	True				
ANR	7505566	AssignmentExpression	details -> count = count		7505467	0		=			
ANR	7505567	PtrMemberAccess	details -> count		7505467	0					
ANR	7505568	Identifier	details		7505467	0					
ANR	7505569	Identifier	count		7505467	1					
ANR	7505570	Identifier	count		7505467	1					
ANR	7505571	ExpressionStatement	details -> sequence = memento . sequence	862:4:25072:25108	7505467	11	True				
ANR	7505572	AssignmentExpression	details -> sequence = memento . sequence		7505467	0		=			
ANR	7505573	PtrMemberAccess	details -> sequence		7505467	0					
ANR	7505574	Identifier	details		7505467	0					
ANR	7505575	Identifier	sequence		7505467	1					
ANR	7505576	MemberAccess	memento . sequence		7505467	1					
ANR	7505577	Identifier	memento		7505467	0					
ANR	7505578	Identifier	sequence		7505467	1					
ANR	7505579	ExpressionStatement	details -> next = NULL	863:4:25114:25134	7505467	12	True				
ANR	7505580	AssignmentExpression	details -> next = NULL		7505467	0		=			
ANR	7505581	PtrMemberAccess	details -> next		7505467	0					
ANR	7505582	Identifier	details		7505467	0					
ANR	7505583	Identifier	next		7505467	1					
ANR	7505584	Identifier	NULL		7505467	1					
ANR	7505585	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( & head -> details_tail , sizeof ( head -> details_tail ) )"	864:4:25140:25214	7505467	13	True				
ANR	7505586	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( & head -> details_tail , sizeof ( head -> details_tail ) )"		7505467	0					
ANR	7505587	Callee	VALGRIND_MAKE_MEM_DEFINED		7505467	0					
ANR	7505588	Identifier	VALGRIND_MAKE_MEM_DEFINED		7505467	0					
ANR	7505589	ArgumentList	& head -> details_tail		7505467	1					
ANR	7505590	Argument	& head -> details_tail		7505467	0					
ANR	7505591	UnaryOperationExpression	& head -> details_tail		7505467	0					
ANR	7505592	UnaryOperator	&		7505467	0					
ANR	7505593	PtrMemberAccess	head -> details_tail		7505467	1					
ANR	7505594	Identifier	head		7505467	0					
ANR	7505595	Identifier	details_tail		7505467	1					
ANR	7505596	Argument	sizeof ( head -> details_tail )		7505467	1					
ANR	7505597	SizeofExpression	sizeof ( head -> details_tail )		7505467	0					
ANR	7505598	Sizeof	sizeof		7505467	0					
ANR	7505599	PtrMemberAccess	head -> details_tail		7505467	1					
ANR	7505600	Identifier	head		7505467	0					
ANR	7505601	Identifier	details_tail		7505467	1					
ANR	7505602	ExpressionStatement	* head -> details_tail = details	865:4:25220:25249	7505467	14	True				
ANR	7505603	AssignmentExpression	* head -> details_tail = details		7505467	0		=			
ANR	7505604	UnaryOperationExpression	* head -> details_tail		7505467	0					
ANR	7505605	UnaryOperator	*		7505467	0					
ANR	7505606	PtrMemberAccess	head -> details_tail		7505467	1					
ANR	7505607	Identifier	head		7505467	0					
ANR	7505608	Identifier	details_tail		7505467	1					
ANR	7505609	Identifier	details		7505467	1					
ANR	7505610	ExpressionStatement	head -> details_tail = & details -> next	866:4:25255:25290	7505467	15	True				
ANR	7505611	AssignmentExpression	head -> details_tail = & details -> next		7505467	0		=			
ANR	7505612	PtrMemberAccess	head -> details_tail		7505467	0					
ANR	7505613	Identifier	head		7505467	0					
ANR	7505614	Identifier	details_tail		7505467	1					
ANR	7505615	UnaryOperationExpression	& details -> next		7505467	1					
ANR	7505616	UnaryOperator	&		7505467	0					
ANR	7505617	PtrMemberAccess	details -> next		7505467	1					
ANR	7505618	Identifier	details		7505467	0					
ANR	7505619	Identifier	next		7505467	1					
ANR	7505620	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( & head -> details_tail , sizeof ( head -> details_tail ) )"	867:4:25296:25371	7505467	16	True				
ANR	7505621	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( & head -> details_tail , sizeof ( head -> details_tail ) )"		7505467	0					
ANR	7505622	Callee	VALGRIND_MAKE_MEM_NOACCESS		7505467	0					
ANR	7505623	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7505467	0					
ANR	7505624	ArgumentList	& head -> details_tail		7505467	1					
ANR	7505625	Argument	& head -> details_tail		7505467	0					
ANR	7505626	UnaryOperationExpression	& head -> details_tail		7505467	0					
ANR	7505627	UnaryOperator	&		7505467	0					
ANR	7505628	PtrMemberAccess	head -> details_tail		7505467	1					
ANR	7505629	Identifier	head		7505467	0					
ANR	7505630	Identifier	details_tail		7505467	1					
ANR	7505631	Argument	sizeof ( head -> details_tail )		7505467	1					
ANR	7505632	SizeofExpression	sizeof ( head -> details_tail )		7505467	0					
ANR	7505633	Sizeof	sizeof		7505467	0					
ANR	7505634	PtrMemberAccess	head -> details_tail		7505467	1					
ANR	7505635	Identifier	head		7505467	0					
ANR	7505636	Identifier	details_tail		7505467	1					
ANR	7505637	ReturnType	static void		7505467	1					
ANR	7505638	Identifier	Memento_storeDetails		7505467	2					
ANR	7505639	ParameterList	"Memento_BlkHeader * head , int type"		7505467	3					
ANR	7505640	Parameter	Memento_BlkHeader * head	836:33:24493:24515	7505467	0	True				
ANR	7505641	ParameterType	Memento_BlkHeader *		7505467	0					
ANR	7505642	Identifier	head		7505467	1					
ANR	7505643	Parameter	int type	836:58:24518:24525	7505467	1	True				
ANR	7505644	ParameterType	int		7505467	0					
ANR	7505645	Identifier	type		7505467	1					
ANR	7505646	CFGEntryNode	ENTRY		7505467		True				
ANR	7505647	CFGExitNode	EXIT		7505467		True				
ANR	7505648	Symbol	head -> details_tail		7505467						
ANR	7505649	Symbol	stack		7505467						
ANR	7505650	Symbol	NULL		7505467						
ANR	7505651	Symbol	& head -> details_tail		7505467						
ANR	7505652	Symbol	details -> type		7505467						
ANR	7505653	Symbol	& details -> stack		7505467						
ANR	7505654	Symbol	details -> sequence		7505467						
ANR	7505655	Symbol	count		7505467						
ANR	7505656	Symbol	details -> next		7505467						
ANR	7505657	Symbol	& skip		7505467						
ANR	7505658	Symbol	memento		7505467						
ANR	7505659	Symbol	* head		7505467						
ANR	7505660	Symbol	skip		7505467						
ANR	7505661	Symbol	Memento_getStacktrace		7505467						
ANR	7505662	Symbol	type		7505467						
ANR	7505663	Symbol	head		7505467						
ANR	7505664	Symbol	details -> count		7505467						
ANR	7505665	Symbol	* details		7505467						
ANR	7505666	Symbol	* * head		7505467						
ANR	7505667	Symbol	& details -> next		7505467						
ANR	7505668	Symbol	details		7505467						
ANR	7505669	Symbol	MEMENTO_UNDERLYING_MALLOC		7505467						
ANR	7505670	Symbol	memento . sequence		7505467						
ANR	7505671	Symbol	* head -> details_tail		7505467						
ANR	7505672	Function	Memento_bt	871:0:25383:25626							
ANR	7505673	FunctionDef	Memento_bt ()		7505672	0					
ANR	7505674	CompoundStatement		872:0:25407:25626	7505672	0					
ANR	7505675	IdentifierDeclStatement	void * stack [ MEMENTO_BACKTRACE_MAX ] ;	874:4:25446:25480	7505672	0	True				
ANR	7505676	IdentifierDecl	* stack [ MEMENTO_BACKTRACE_MAX ]		7505672	0					
ANR	7505677	IdentifierDeclType	void * [ MEMENTO_BACKTRACE_MAX ]		7505672	0					
ANR	7505678	Identifier	stack		7505672	1					
ANR	7505679	Identifier	MEMENTO_BACKTRACE_MAX		7505672	2					
ANR	7505680	IdentifierDeclStatement	int count ;	875:4:25486:25495	7505672	1	True				
ANR	7505681	IdentifierDecl	count		7505672	0					
ANR	7505682	IdentifierDeclType	int		7505672	0					
ANR	7505683	Identifier	count		7505672	1					
ANR	7505684	IdentifierDeclStatement	int skip ;	876:4:25501:25509	7505672	2	True				
ANR	7505685	IdentifierDecl	skip		7505672	0					
ANR	7505686	IdentifierDeclType	int		7505672	0					
ANR	7505687	Identifier	skip		7505672	1					
ANR	7505688	ExpressionStatement	"count = Memento_getStacktrace ( stack , & skip )"	878:4:25516:25559	7505672	3	True				
ANR	7505689	AssignmentExpression	"count = Memento_getStacktrace ( stack , & skip )"		7505672	0		=			
ANR	7505690	Identifier	count		7505672	0					
ANR	7505691	CallExpression	"Memento_getStacktrace ( stack , & skip )"		7505672	1					
ANR	7505692	Callee	Memento_getStacktrace		7505672	0					
ANR	7505693	Identifier	Memento_getStacktrace		7505672	0					
ANR	7505694	ArgumentList	stack		7505672	1					
ANR	7505695	Argument	stack		7505672	0					
ANR	7505696	Identifier	stack		7505672	0					
ANR	7505697	Argument	& skip		7505672	1					
ANR	7505698	UnaryOperationExpression	& skip		7505672	0					
ANR	7505699	UnaryOperator	&		7505672	0					
ANR	7505700	Identifier	skip		7505672	1					
ANR	7505701	ExpressionStatement	"Memento_showStacktrace ( & stack [ skip - 2 ] , count - skip + 2 )"	879:4:25565:25617	7505672	4	True				
ANR	7505702	CallExpression	"Memento_showStacktrace ( & stack [ skip - 2 ] , count - skip + 2 )"		7505672	0					
ANR	7505703	Callee	Memento_showStacktrace		7505672	0					
ANR	7505704	Identifier	Memento_showStacktrace		7505672	0					
ANR	7505705	ArgumentList	& stack [ skip - 2 ]		7505672	1					
ANR	7505706	Argument	& stack [ skip - 2 ]		7505672	0					
ANR	7505707	UnaryOperationExpression	& stack [ skip - 2 ]		7505672	0					
ANR	7505708	UnaryOperator	&		7505672	0					
ANR	7505709	ArrayIndexing	stack [ skip - 2 ]		7505672	1					
ANR	7505710	Identifier	stack		7505672	0					
ANR	7505711	AdditiveExpression	skip - 2		7505672	1		-			
ANR	7505712	Identifier	skip		7505672	0					
ANR	7505713	PrimaryExpression	2		7505672	1					
ANR	7505714	Argument	count - skip + 2		7505672	1					
ANR	7505715	AdditiveExpression	count - skip + 2		7505672	0		-			
ANR	7505716	Identifier	count		7505672	0					
ANR	7505717	AdditiveExpression	skip + 2		7505672	1		+			
ANR	7505718	Identifier	skip		7505672	0					
ANR	7505719	PrimaryExpression	2		7505672	1					
ANR	7505720	ReturnType	void		7505672	1					
ANR	7505721	Identifier	( Memento_bt )		7505672	2					
ANR	7505722	Identifier	Memento_bt		7505672	3					
ANR	7505723	ParameterList			7505672	4					
ANR	7505724	CFGEntryNode	ENTRY		7505672		True				
ANR	7505725	CFGExitNode	EXIT		7505672		True				
ANR	7505726	Symbol	stack		7505672						
ANR	7505727	Symbol	count		7505672						
ANR	7505728	Symbol	& skip		7505672						
ANR	7505729	Symbol	skip		7505672						
ANR	7505730	Symbol	Memento_getStacktrace		7505672						
ANR	7505731	Function	Memento_bt_internal	883:0:25629:25899							
ANR	7505732	FunctionDef	Memento_bt_internal (int skip2)		7505731	0					
ANR	7505733	CompoundStatement		884:0:25672:25899	7505731	0					
ANR	7505734	IdentifierDeclStatement	void * stack [ MEMENTO_BACKTRACE_MAX ] ;	886:4:25711:25745	7505731	0	True				
ANR	7505735	IdentifierDecl	* stack [ MEMENTO_BACKTRACE_MAX ]		7505731	0					
ANR	7505736	IdentifierDeclType	void * [ MEMENTO_BACKTRACE_MAX ]		7505731	0					
ANR	7505737	Identifier	stack		7505731	1					
ANR	7505738	Identifier	MEMENTO_BACKTRACE_MAX		7505731	2					
ANR	7505739	IdentifierDeclStatement	int count ;	887:4:25751:25760	7505731	1	True				
ANR	7505740	IdentifierDecl	count		7505731	0					
ANR	7505741	IdentifierDeclType	int		7505731	0					
ANR	7505742	Identifier	count		7505731	1					
ANR	7505743	IdentifierDeclStatement	int skip ;	888:4:25766:25774	7505731	2	True				
ANR	7505744	IdentifierDecl	skip		7505731	0					
ANR	7505745	IdentifierDeclType	int		7505731	0					
ANR	7505746	Identifier	skip		7505731	1					
ANR	7505747	ExpressionStatement	"count = Memento_getStacktrace ( stack , & skip )"	890:4:25781:25824	7505731	3	True				
ANR	7505748	AssignmentExpression	"count = Memento_getStacktrace ( stack , & skip )"		7505731	0		=			
ANR	7505749	Identifier	count		7505731	0					
ANR	7505750	CallExpression	"Memento_getStacktrace ( stack , & skip )"		7505731	1					
ANR	7505751	Callee	Memento_getStacktrace		7505731	0					
ANR	7505752	Identifier	Memento_getStacktrace		7505731	0					
ANR	7505753	ArgumentList	stack		7505731	1					
ANR	7505754	Argument	stack		7505731	0					
ANR	7505755	Identifier	stack		7505731	0					
ANR	7505756	Argument	& skip		7505731	1					
ANR	7505757	UnaryOperationExpression	& skip		7505731	0					
ANR	7505758	UnaryOperator	&		7505731	0					
ANR	7505759	Identifier	skip		7505731	1					
ANR	7505760	ExpressionStatement	"Memento_showStacktrace ( & stack [ skip + skip2 ] , count - skip - skip2 )"	891:4:25830:25890	7505731	4	True				
ANR	7505761	CallExpression	"Memento_showStacktrace ( & stack [ skip + skip2 ] , count - skip - skip2 )"		7505731	0					
ANR	7505762	Callee	Memento_showStacktrace		7505731	0					
ANR	7505763	Identifier	Memento_showStacktrace		7505731	0					
ANR	7505764	ArgumentList	& stack [ skip + skip2 ]		7505731	1					
ANR	7505765	Argument	& stack [ skip + skip2 ]		7505731	0					
ANR	7505766	UnaryOperationExpression	& stack [ skip + skip2 ]		7505731	0					
ANR	7505767	UnaryOperator	&		7505731	0					
ANR	7505768	ArrayIndexing	stack [ skip + skip2 ]		7505731	1					
ANR	7505769	Identifier	stack		7505731	0					
ANR	7505770	AdditiveExpression	skip + skip2		7505731	1		+			
ANR	7505771	Identifier	skip		7505731	0					
ANR	7505772	Identifier	skip2		7505731	1					
ANR	7505773	Argument	count - skip - skip2		7505731	1					
ANR	7505774	AdditiveExpression	count - skip - skip2		7505731	0		-			
ANR	7505775	Identifier	count		7505731	0					
ANR	7505776	AdditiveExpression	skip - skip2		7505731	1		-			
ANR	7505777	Identifier	skip		7505731	0					
ANR	7505778	Identifier	skip2		7505731	1					
ANR	7505779	ReturnType	static void		7505731	1					
ANR	7505780	Identifier	Memento_bt_internal		7505731	2					
ANR	7505781	ParameterList	int skip2		7505731	3					
ANR	7505782	Parameter	int skip2	883:32:25661:25669	7505731	0	True				
ANR	7505783	ParameterType	int		7505731	0					
ANR	7505784	Identifier	skip2		7505731	1					
ANR	7505785	CFGEntryNode	ENTRY		7505731		True				
ANR	7505786	CFGExitNode	EXIT		7505731		True				
ANR	7505787	Symbol	stack		7505731						
ANR	7505788	Symbol	skip2		7505731						
ANR	7505789	Symbol	count		7505731						
ANR	7505790	Symbol	& skip		7505731						
ANR	7505791	Symbol	skip		7505731						
ANR	7505792	Symbol	Memento_getStacktrace		7505731						
ANR	7505793	DeclStmt									
ANR	7505794	Decl							int	int ( void )	Memento_checkAllMemoryLocked
ANR	7505795	Function	Memento_breakpoint	897:0:25950:26170							
ANR	7505796	FunctionDef	Memento_breakpoint ()		7505795	0					
ANR	7505797	CompoundStatement		898:0:25980:26170	7505795	0					
ANR	7505798	Statement	__asm	903:4:26136:26140	7505795	0	True				
ANR	7505799	Statement	int	903:10:26142:26144	7505795	1	True				
ANR	7505800	ExpressionStatement	3	903:14:26146:26147	7505795	2	True				
ANR	7505801	PrimaryExpression	3		7505795	0					
ANR	7505802	ReturnType	void		7505795	1					
ANR	7505803	Identifier	Memento_breakpoint		7505795	2					
ANR	7505804	ParameterList			7505795	3					
ANR	7505805	CFGEntryNode	ENTRY		7505795		True				
ANR	7505806	CFGExitNode	EXIT		7505795		True				
ANR	7505807	DeclStmt									
ANR	7505808	Decl							void	void ( void )	Memento_init
ANR	7505809	Function	Memento_addBlockHead	922:0:26587:27604							
ANR	7505810	FunctionDef	"Memento_addBlockHead (Memento_Blocks * blks , Memento_BlkHeader * b , int type)"		7505809	0					
ANR	7505811	CompoundStatement		925:0:26758:27604	7505809	0					
ANR	7505812	IfStatement	if ( blks -> tail == NULL )		7505809	0					
ANR	7505813	Condition	blks -> tail == NULL	926:8:26768:26785	7505809	0	True				
ANR	7505814	EqualityExpression	blks -> tail == NULL		7505809	0		==			
ANR	7505815	PtrMemberAccess	blks -> tail		7505809	0					
ANR	7505816	Identifier	blks		7505809	0					
ANR	7505817	Identifier	tail		7505809	1					
ANR	7505818	Identifier	NULL		7505809	1					
ANR	7505819	ExpressionStatement	blks -> tail = b	927:8:26796:26810	7505809	1	True				
ANR	7505820	AssignmentExpression	blks -> tail = b		7505809	0		=			
ANR	7505821	PtrMemberAccess	blks -> tail		7505809	0					
ANR	7505822	Identifier	blks		7505809	0					
ANR	7505823	Identifier	tail		7505809	1					
ANR	7505824	Identifier	b		7505809	1					
ANR	7505825	ExpressionStatement	b -> next = blks -> head	928:4:26816:26839	7505809	1	True				
ANR	7505826	AssignmentExpression	b -> next = blks -> head		7505809	0		=			
ANR	7505827	PtrMemberAccess	b -> next		7505809	0					
ANR	7505828	Identifier	b		7505809	0					
ANR	7505829	Identifier	next		7505809	1					
ANR	7505830	PtrMemberAccess	blks -> head		7505809	1					
ANR	7505831	Identifier	blks		7505809	0					
ANR	7505832	Identifier	head		7505809	1					
ANR	7505833	ExpressionStatement	b -> prev = NULL	929:4:26845:26862	7505809	2	True				
ANR	7505834	AssignmentExpression	b -> prev = NULL		7505809	0		=			
ANR	7505835	PtrMemberAccess	b -> prev		7505809	0					
ANR	7505836	Identifier	b		7505809	0					
ANR	7505837	Identifier	prev		7505809	1					
ANR	7505838	Identifier	NULL		7505809	1					
ANR	7505839	IfStatement	if ( blks -> head )		7505809	3					
ANR	7505840	Condition	blks -> head	930:8:26872:26881	7505809	0	True				
ANR	7505841	PtrMemberAccess	blks -> head		7505809	0					
ANR	7505842	Identifier	blks		7505809	0					
ANR	7505843	Identifier	head		7505809	1					
ANR	7505844	CompoundStatement		7:4:129:129	7505809	1					
ANR	7505845	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( & blks -> head -> prev , sizeof ( blks -> head -> prev ) )"	932:8:26898:26968	7505809	0	True				
ANR	7505846	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( & blks -> head -> prev , sizeof ( blks -> head -> prev ) )"		7505809	0					
ANR	7505847	Callee	VALGRIND_MAKE_MEM_DEFINED		7505809	0					
ANR	7505848	Identifier	VALGRIND_MAKE_MEM_DEFINED		7505809	0					
ANR	7505849	ArgumentList	& blks -> head -> prev		7505809	1					
ANR	7505850	Argument	& blks -> head -> prev		7505809	0					
ANR	7505851	UnaryOperationExpression	& blks -> head -> prev		7505809	0					
ANR	7505852	UnaryOperator	&		7505809	0					
ANR	7505853	PtrMemberAccess	blks -> head -> prev		7505809	1					
ANR	7505854	PtrMemberAccess	blks -> head		7505809	0					
ANR	7505855	Identifier	blks		7505809	0					
ANR	7505856	Identifier	head		7505809	1					
ANR	7505857	Identifier	prev		7505809	1					
ANR	7505858	Argument	sizeof ( blks -> head -> prev )		7505809	1					
ANR	7505859	SizeofExpression	sizeof ( blks -> head -> prev )		7505809	0					
ANR	7505860	Sizeof	sizeof		7505809	0					
ANR	7505861	PtrMemberAccess	blks -> head -> prev		7505809	1					
ANR	7505862	PtrMemberAccess	blks -> head		7505809	0					
ANR	7505863	Identifier	blks		7505809	0					
ANR	7505864	Identifier	head		7505809	1					
ANR	7505865	Identifier	prev		7505809	1					
ANR	7505866	ExpressionStatement	blks -> head -> prev = b	933:8:26978:26998	7505809	1	True				
ANR	7505867	AssignmentExpression	blks -> head -> prev = b		7505809	0		=			
ANR	7505868	PtrMemberAccess	blks -> head -> prev		7505809	0					
ANR	7505869	PtrMemberAccess	blks -> head		7505809	0					
ANR	7505870	Identifier	blks		7505809	0					
ANR	7505871	Identifier	head		7505809	1					
ANR	7505872	Identifier	prev		7505809	1					
ANR	7505873	Identifier	b		7505809	1					
ANR	7505874	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( & blks -> head -> prev , sizeof ( blks -> head -> prev ) )"	934:8:27008:27079	7505809	2	True				
ANR	7505875	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( & blks -> head -> prev , sizeof ( blks -> head -> prev ) )"		7505809	0					
ANR	7505876	Callee	VALGRIND_MAKE_MEM_NOACCESS		7505809	0					
ANR	7505877	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7505809	0					
ANR	7505878	ArgumentList	& blks -> head -> prev		7505809	1					
ANR	7505879	Argument	& blks -> head -> prev		7505809	0					
ANR	7505880	UnaryOperationExpression	& blks -> head -> prev		7505809	0					
ANR	7505881	UnaryOperator	&		7505809	0					
ANR	7505882	PtrMemberAccess	blks -> head -> prev		7505809	1					
ANR	7505883	PtrMemberAccess	blks -> head		7505809	0					
ANR	7505884	Identifier	blks		7505809	0					
ANR	7505885	Identifier	head		7505809	1					
ANR	7505886	Identifier	prev		7505809	1					
ANR	7505887	Argument	sizeof ( blks -> head -> prev )		7505809	1					
ANR	7505888	SizeofExpression	sizeof ( blks -> head -> prev )		7505809	0					
ANR	7505889	Sizeof	sizeof		7505809	0					
ANR	7505890	PtrMemberAccess	blks -> head -> prev		7505809	1					
ANR	7505891	PtrMemberAccess	blks -> head		7505809	0					
ANR	7505892	Identifier	blks		7505809	0					
ANR	7505893	Identifier	head		7505809	1					
ANR	7505894	Identifier	prev		7505809	1					
ANR	7505895	ExpressionStatement	blks -> head = b	936:4:27091:27105	7505809	4	True				
ANR	7505896	AssignmentExpression	blks -> head = b		7505809	0		=			
ANR	7505897	PtrMemberAccess	blks -> head		7505809	0					
ANR	7505898	Identifier	blks		7505809	0					
ANR	7505899	Identifier	head		7505809	1					
ANR	7505900	Identifier	b		7505809	1					
ANR	7505901	ExpressionStatement	"memset ( b -> preblk , MEMENTO_PREFILL , Memento_PreSize )"	938:4:27136:27187	7505809	5	True				
ANR	7505902	CallExpression	"memset ( b -> preblk , MEMENTO_PREFILL , Memento_PreSize )"		7505809	0					
ANR	7505903	Callee	memset		7505809	0					
ANR	7505904	Identifier	memset		7505809	0					
ANR	7505905	ArgumentList	b -> preblk		7505809	1					
ANR	7505906	Argument	b -> preblk		7505809	0					
ANR	7505907	PtrMemberAccess	b -> preblk		7505809	0					
ANR	7505908	Identifier	b		7505809	0					
ANR	7505909	Identifier	preblk		7505809	1					
ANR	7505910	Argument	MEMENTO_PREFILL		7505809	1					
ANR	7505911	Identifier	MEMENTO_PREFILL		7505809	0					
ANR	7505912	Argument	Memento_PreSize		7505809	2					
ANR	7505913	Identifier	Memento_PreSize		7505809	0					
ANR	7505914	ExpressionStatement	"memset ( MEMBLK_POSTPTR ( b ) , MEMENTO_POSTFILL , Memento_PostSize )"	939:4:27193:27254	7505809	6	True				
ANR	7505915	CallExpression	"memset ( MEMBLK_POSTPTR ( b ) , MEMENTO_POSTFILL , Memento_PostSize )"		7505809	0					
ANR	7505916	Callee	memset		7505809	0					
ANR	7505917	Identifier	memset		7505809	0					
ANR	7505918	ArgumentList	MEMBLK_POSTPTR ( b )		7505809	1					
ANR	7505919	Argument	MEMBLK_POSTPTR ( b )		7505809	0					
ANR	7505920	CallExpression	MEMBLK_POSTPTR ( b )		7505809	0					
ANR	7505921	Callee	MEMBLK_POSTPTR		7505809	0					
ANR	7505922	Identifier	MEMBLK_POSTPTR		7505809	0					
ANR	7505923	ArgumentList	b		7505809	1					
ANR	7505924	Argument	b		7505809	0					
ANR	7505925	Identifier	b		7505809	0					
ANR	7505926	Argument	MEMENTO_POSTFILL		7505809	1					
ANR	7505927	Identifier	MEMENTO_POSTFILL		7505809	0					
ANR	7505928	Argument	Memento_PostSize		7505809	2					
ANR	7505929	Identifier	Memento_PostSize		7505809	0					
ANR	7505930	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( b ) , Memento_PostSize )"	941:4:27267:27330	7505809	7	True				
ANR	7505931	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( b ) , Memento_PostSize )"		7505809	0					
ANR	7505932	Callee	VALGRIND_MAKE_MEM_NOACCESS		7505809	0					
ANR	7505933	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7505809	0					
ANR	7505934	ArgumentList	MEMBLK_POSTPTR ( b )		7505809	1					
ANR	7505935	Argument	MEMBLK_POSTPTR ( b )		7505809	0					
ANR	7505936	CallExpression	MEMBLK_POSTPTR ( b )		7505809	0					
ANR	7505937	Callee	MEMBLK_POSTPTR		7505809	0					
ANR	7505938	Identifier	MEMBLK_POSTPTR		7505809	0					
ANR	7505939	ArgumentList	b		7505809	1					
ANR	7505940	Argument	b		7505809	0					
ANR	7505941	Identifier	b		7505809	0					
ANR	7505942	Argument	Memento_PostSize		7505809	1					
ANR	7505943	Identifier	Memento_PostSize		7505809	0					
ANR	7505944	IfStatement	if ( type == 0 )		7505809	8					
ANR	7505945	Condition	type == 0	942:8:27340:27348	7505809	0	True				
ANR	7505946	EqualityExpression	type == 0		7505809	0		==			
ANR	7505947	Identifier	type		7505809	0					
ANR	7505948	PrimaryExpression	0		7505809	1					
ANR	7505949	CompoundStatement		18:19:592:592	7505809	1					
ANR	7505950	ExpressionStatement	"VALGRIND_MAKE_MEM_UNDEFINED ( MEMBLK_TOBLK ( b ) , b -> rawsize )"	943:8:27374:27430	7505809	0	True				
ANR	7505951	CallExpression	"VALGRIND_MAKE_MEM_UNDEFINED ( MEMBLK_TOBLK ( b ) , b -> rawsize )"		7505809	0					
ANR	7505952	Callee	VALGRIND_MAKE_MEM_UNDEFINED		7505809	0					
ANR	7505953	Identifier	VALGRIND_MAKE_MEM_UNDEFINED		7505809	0					
ANR	7505954	ArgumentList	MEMBLK_TOBLK ( b )		7505809	1					
ANR	7505955	Argument	MEMBLK_TOBLK ( b )		7505809	0					
ANR	7505956	CallExpression	MEMBLK_TOBLK ( b )		7505809	0					
ANR	7505957	Callee	MEMBLK_TOBLK		7505809	0					
ANR	7505958	Identifier	MEMBLK_TOBLK		7505809	0					
ANR	7505959	ArgumentList	b		7505809	1					
ANR	7505960	Argument	b		7505809	0					
ANR	7505961	Identifier	b		7505809	0					
ANR	7505962	Argument	b -> rawsize		7505809	1					
ANR	7505963	PtrMemberAccess	b -> rawsize		7505809	0					
ANR	7505964	Identifier	b		7505809	0					
ANR	7505965	Identifier	rawsize		7505809	1					
ANR	7505966	ElseStatement	else		7505809	0					
ANR	7505967	IfStatement	if ( type == 1 )		7505809	0					
ANR	7505968	Condition	type == 1	944:15:27447:27455	7505809	0	True				
ANR	7505969	EqualityExpression	type == 1		7505809	0		==			
ANR	7505970	Identifier	type		7505809	0					
ANR	7505971	PrimaryExpression	1		7505809	1					
ANR	7505972	CompoundStatement		20:26:699:699	7505809	1					
ANR	7505973	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_TOBLK ( b ) , b -> rawsize )"	945:8:27479:27534	7505809	0	True				
ANR	7505974	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_TOBLK ( b ) , b -> rawsize )"		7505809	0					
ANR	7505975	Callee	VALGRIND_MAKE_MEM_NOACCESS		7505809	0					
ANR	7505976	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7505809	0					
ANR	7505977	ArgumentList	MEMBLK_TOBLK ( b )		7505809	1					
ANR	7505978	Argument	MEMBLK_TOBLK ( b )		7505809	0					
ANR	7505979	CallExpression	MEMBLK_TOBLK ( b )		7505809	0					
ANR	7505980	Callee	MEMBLK_TOBLK		7505809	0					
ANR	7505981	Identifier	MEMBLK_TOBLK		7505809	0					
ANR	7505982	ArgumentList	b		7505809	1					
ANR	7505983	Argument	b		7505809	0					
ANR	7505984	Identifier	b		7505809	0					
ANR	7505985	Argument	b -> rawsize		7505809	1					
ANR	7505986	PtrMemberAccess	b -> rawsize		7505809	0					
ANR	7505987	Identifier	b		7505809	0					
ANR	7505988	Identifier	rawsize		7505809	1					
ANR	7505989	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( b , sizeof ( Memento_BlkHeader ) )"	947:4:27546:27602	7505809	9	True				
ANR	7505990	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( b , sizeof ( Memento_BlkHeader ) )"		7505809	0					
ANR	7505991	Callee	VALGRIND_MAKE_MEM_NOACCESS		7505809	0					
ANR	7505992	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7505809	0					
ANR	7505993	ArgumentList	b		7505809	1					
ANR	7505994	Argument	b		7505809	0					
ANR	7505995	Identifier	b		7505809	0					
ANR	7505996	Argument	sizeof ( Memento_BlkHeader )		7505809	1					
ANR	7505997	SizeofExpression	sizeof ( Memento_BlkHeader )		7505809	0					
ANR	7505998	Sizeof	sizeof		7505809	0					
ANR	7505999	SizeofOperand	Memento_BlkHeader		7505809	1					
ANR	7506000	ReturnType	static void		7505809	1					
ANR	7506001	Identifier	Memento_addBlockHead		7505809	2					
ANR	7506002	ParameterList	"Memento_Blocks * blks , Memento_BlkHeader * b , int type"		7505809	3					
ANR	7506003	Parameter	Memento_Blocks * blks	922:33:26620:26642	7505809	0	True				
ANR	7506004	ParameterType	Memento_Blocks *		7505809	0					
ANR	7506005	Identifier	blks		7505809	1					
ANR	7506006	Parameter	Memento_BlkHeader * b	923:33:26678:26697	7505809	1	True				
ANR	7506007	ParameterType	Memento_BlkHeader *		7505809	0					
ANR	7506008	Identifier	b		7505809	1					
ANR	7506009	Parameter	int type	924:33:26733:26755	7505809	2	True				
ANR	7506010	ParameterType	int		7505809	0					
ANR	7506011	Identifier	type		7505809	1					
ANR	7506012	CFGEntryNode	ENTRY		7505809		True				
ANR	7506013	CFGExitNode	EXIT		7505809		True				
ANR	7506014	Symbol	blks -> tail		7505809						
ANR	7506015	Symbol	b		7505809						
ANR	7506016	Symbol	NULL		7505809						
ANR	7506017	Symbol	Memento_PreSize		7505809						
ANR	7506018	Symbol	b -> preblk		7505809						
ANR	7506019	Symbol	blks -> head		7505809						
ANR	7506020	Symbol	* * blks		7505809						
ANR	7506021	Symbol	type		7505809						
ANR	7506022	Symbol	* b		7505809						
ANR	7506023	Symbol	& blks -> head -> prev		7505809						
ANR	7506024	Symbol	MEMBLK_TOBLK		7505809						
ANR	7506025	Symbol	b -> prev		7505809						
ANR	7506026	Symbol	b -> rawsize		7505809						
ANR	7506027	Symbol	MEMENTO_PREFILL		7505809						
ANR	7506028	Symbol	* blks		7505809						
ANR	7506029	Symbol	MEMBLK_POSTPTR		7505809						
ANR	7506030	Symbol	b -> next		7505809						
ANR	7506031	Symbol	MEMENTO_POSTFILL		7505809						
ANR	7506032	Symbol	* blks -> head		7505809						
ANR	7506033	Symbol	blks -> head -> prev		7505809						
ANR	7506034	Symbol	Memento_PostSize		7505809						
ANR	7506035	Symbol	blks		7505809						
ANR	7506036	Function	Memento_addBlockTail	950:0:27607:28761							
ANR	7506037	FunctionDef	"Memento_addBlockTail (Memento_Blocks * blks , Memento_BlkHeader * b , int type)"		7506036	0					
ANR	7506038	CompoundStatement		953:0:27778:28761	7506036	0					
ANR	7506039	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( & blks -> tail , sizeof ( Memento_BlkHeader * ) )"	954:4:27784:27851	7506036	0	True				
ANR	7506040	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( & blks -> tail , sizeof ( Memento_BlkHeader * ) )"		7506036	0					
ANR	7506041	Callee	VALGRIND_MAKE_MEM_DEFINED		7506036	0					
ANR	7506042	Identifier	VALGRIND_MAKE_MEM_DEFINED		7506036	0					
ANR	7506043	ArgumentList	& blks -> tail		7506036	1					
ANR	7506044	Argument	& blks -> tail		7506036	0					
ANR	7506045	UnaryOperationExpression	& blks -> tail		7506036	0					
ANR	7506046	UnaryOperator	&		7506036	0					
ANR	7506047	PtrMemberAccess	blks -> tail		7506036	1					
ANR	7506048	Identifier	blks		7506036	0					
ANR	7506049	Identifier	tail		7506036	1					
ANR	7506050	Argument	sizeof ( Memento_BlkHeader * )		7506036	1					
ANR	7506051	SizeofExpression	sizeof ( Memento_BlkHeader * )		7506036	0					
ANR	7506052	Sizeof	sizeof		7506036	0					
ANR	7506053	SizeofOperand	Memento_BlkHeader *		7506036	1					
ANR	7506054	IfStatement	if ( blks -> head == NULL )		7506036	1					
ANR	7506055	Condition	blks -> head == NULL	955:8:27861:27878	7506036	0	True				
ANR	7506056	EqualityExpression	blks -> head == NULL		7506036	0		==			
ANR	7506057	PtrMemberAccess	blks -> head		7506036	0					
ANR	7506058	Identifier	blks		7506036	0					
ANR	7506059	Identifier	head		7506036	1					
ANR	7506060	Identifier	NULL		7506036	1					
ANR	7506061	ExpressionStatement	blks -> head = b	956:8:27889:27903	7506036	1	True				
ANR	7506062	AssignmentExpression	blks -> head = b		7506036	0		=			
ANR	7506063	PtrMemberAccess	blks -> head		7506036	0					
ANR	7506064	Identifier	blks		7506036	0					
ANR	7506065	Identifier	head		7506036	1					
ANR	7506066	Identifier	b		7506036	1					
ANR	7506067	ExpressionStatement	b -> prev = blks -> tail	957:4:27909:27929	7506036	2	True				
ANR	7506068	AssignmentExpression	b -> prev = blks -> tail		7506036	0		=			
ANR	7506069	PtrMemberAccess	b -> prev		7506036	0					
ANR	7506070	Identifier	b		7506036	0					
ANR	7506071	Identifier	prev		7506036	1					
ANR	7506072	PtrMemberAccess	blks -> tail		7506036	1					
ANR	7506073	Identifier	blks		7506036	0					
ANR	7506074	Identifier	tail		7506036	1					
ANR	7506075	ExpressionStatement	b -> next = NULL	958:4:27935:27949	7506036	3	True				
ANR	7506076	AssignmentExpression	b -> next = NULL		7506036	0		=			
ANR	7506077	PtrMemberAccess	b -> next		7506036	0					
ANR	7506078	Identifier	b		7506036	0					
ANR	7506079	Identifier	next		7506036	1					
ANR	7506080	Identifier	NULL		7506036	1					
ANR	7506081	IfStatement	if ( blks -> tail )		7506036	4					
ANR	7506082	Condition	blks -> tail	959:8:27959:27968	7506036	0	True				
ANR	7506083	PtrMemberAccess	blks -> tail		7506036	0					
ANR	7506084	Identifier	blks		7506036	0					
ANR	7506085	Identifier	tail		7506036	1					
ANR	7506086	CompoundStatement		7:20:192:192	7506036	1					
ANR	7506087	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( & blks -> tail -> next , sizeof ( blks -> tail -> next ) )"	960:8:27981:28051	7506036	0	True				
ANR	7506088	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( & blks -> tail -> next , sizeof ( blks -> tail -> next ) )"		7506036	0					
ANR	7506089	Callee	VALGRIND_MAKE_MEM_DEFINED		7506036	0					
ANR	7506090	Identifier	VALGRIND_MAKE_MEM_DEFINED		7506036	0					
ANR	7506091	ArgumentList	& blks -> tail -> next		7506036	1					
ANR	7506092	Argument	& blks -> tail -> next		7506036	0					
ANR	7506093	UnaryOperationExpression	& blks -> tail -> next		7506036	0					
ANR	7506094	UnaryOperator	&		7506036	0					
ANR	7506095	PtrMemberAccess	blks -> tail -> next		7506036	1					
ANR	7506096	PtrMemberAccess	blks -> tail		7506036	0					
ANR	7506097	Identifier	blks		7506036	0					
ANR	7506098	Identifier	tail		7506036	1					
ANR	7506099	Identifier	next		7506036	1					
ANR	7506100	Argument	sizeof ( blks -> tail -> next )		7506036	1					
ANR	7506101	SizeofExpression	sizeof ( blks -> tail -> next )		7506036	0					
ANR	7506102	Sizeof	sizeof		7506036	0					
ANR	7506103	PtrMemberAccess	blks -> tail -> next		7506036	1					
ANR	7506104	PtrMemberAccess	blks -> tail		7506036	0					
ANR	7506105	Identifier	blks		7506036	0					
ANR	7506106	Identifier	tail		7506036	1					
ANR	7506107	Identifier	next		7506036	1					
ANR	7506108	ExpressionStatement	blks -> tail -> next = b	961:8:28061:28081	7506036	1	True				
ANR	7506109	AssignmentExpression	blks -> tail -> next = b		7506036	0		=			
ANR	7506110	PtrMemberAccess	blks -> tail -> next		7506036	0					
ANR	7506111	PtrMemberAccess	blks -> tail		7506036	0					
ANR	7506112	Identifier	blks		7506036	0					
ANR	7506113	Identifier	tail		7506036	1					
ANR	7506114	Identifier	next		7506036	1					
ANR	7506115	Identifier	b		7506036	1					
ANR	7506116	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( & blks -> tail -> next , sizeof ( blks -> tail -> next ) )"	962:8:28091:28162	7506036	2	True				
ANR	7506117	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( & blks -> tail -> next , sizeof ( blks -> tail -> next ) )"		7506036	0					
ANR	7506118	Callee	VALGRIND_MAKE_MEM_NOACCESS		7506036	0					
ANR	7506119	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7506036	0					
ANR	7506120	ArgumentList	& blks -> tail -> next		7506036	1					
ANR	7506121	Argument	& blks -> tail -> next		7506036	0					
ANR	7506122	UnaryOperationExpression	& blks -> tail -> next		7506036	0					
ANR	7506123	UnaryOperator	&		7506036	0					
ANR	7506124	PtrMemberAccess	blks -> tail -> next		7506036	1					
ANR	7506125	PtrMemberAccess	blks -> tail		7506036	0					
ANR	7506126	Identifier	blks		7506036	0					
ANR	7506127	Identifier	tail		7506036	1					
ANR	7506128	Identifier	next		7506036	1					
ANR	7506129	Argument	sizeof ( blks -> tail -> next )		7506036	1					
ANR	7506130	SizeofExpression	sizeof ( blks -> tail -> next )		7506036	0					
ANR	7506131	Sizeof	sizeof		7506036	0					
ANR	7506132	PtrMemberAccess	blks -> tail -> next		7506036	1					
ANR	7506133	PtrMemberAccess	blks -> tail		7506036	0					
ANR	7506134	Identifier	blks		7506036	0					
ANR	7506135	Identifier	tail		7506036	1					
ANR	7506136	Identifier	next		7506036	1					
ANR	7506137	ExpressionStatement	blks -> tail = b	964:4:28174:28188	7506036	5	True				
ANR	7506138	AssignmentExpression	blks -> tail = b		7506036	0		=			
ANR	7506139	PtrMemberAccess	blks -> tail		7506036	0					
ANR	7506140	Identifier	blks		7506036	0					
ANR	7506141	Identifier	tail		7506036	1					
ANR	7506142	Identifier	b		7506036	1					
ANR	7506143	ExpressionStatement	"memset ( b -> preblk , MEMENTO_PREFILL , Memento_PreSize )"	966:4:28219:28270	7506036	6	True				
ANR	7506144	CallExpression	"memset ( b -> preblk , MEMENTO_PREFILL , Memento_PreSize )"		7506036	0					
ANR	7506145	Callee	memset		7506036	0					
ANR	7506146	Identifier	memset		7506036	0					
ANR	7506147	ArgumentList	b -> preblk		7506036	1					
ANR	7506148	Argument	b -> preblk		7506036	0					
ANR	7506149	PtrMemberAccess	b -> preblk		7506036	0					
ANR	7506150	Identifier	b		7506036	0					
ANR	7506151	Identifier	preblk		7506036	1					
ANR	7506152	Argument	MEMENTO_PREFILL		7506036	1					
ANR	7506153	Identifier	MEMENTO_PREFILL		7506036	0					
ANR	7506154	Argument	Memento_PreSize		7506036	2					
ANR	7506155	Identifier	Memento_PreSize		7506036	0					
ANR	7506156	ExpressionStatement	"memset ( MEMBLK_POSTPTR ( b ) , MEMENTO_POSTFILL , Memento_PostSize )"	967:4:28276:28337	7506036	7	True				
ANR	7506157	CallExpression	"memset ( MEMBLK_POSTPTR ( b ) , MEMENTO_POSTFILL , Memento_PostSize )"		7506036	0					
ANR	7506158	Callee	memset		7506036	0					
ANR	7506159	Identifier	memset		7506036	0					
ANR	7506160	ArgumentList	MEMBLK_POSTPTR ( b )		7506036	1					
ANR	7506161	Argument	MEMBLK_POSTPTR ( b )		7506036	0					
ANR	7506162	CallExpression	MEMBLK_POSTPTR ( b )		7506036	0					
ANR	7506163	Callee	MEMBLK_POSTPTR		7506036	0					
ANR	7506164	Identifier	MEMBLK_POSTPTR		7506036	0					
ANR	7506165	ArgumentList	b		7506036	1					
ANR	7506166	Argument	b		7506036	0					
ANR	7506167	Identifier	b		7506036	0					
ANR	7506168	Argument	MEMENTO_POSTFILL		7506036	1					
ANR	7506169	Identifier	MEMENTO_POSTFILL		7506036	0					
ANR	7506170	Argument	Memento_PostSize		7506036	2					
ANR	7506171	Identifier	Memento_PostSize		7506036	0					
ANR	7506172	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( b ) , Memento_PostSize )"	969:4:28350:28413	7506036	8	True				
ANR	7506173	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( b ) , Memento_PostSize )"		7506036	0					
ANR	7506174	Callee	VALGRIND_MAKE_MEM_NOACCESS		7506036	0					
ANR	7506175	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7506036	0					
ANR	7506176	ArgumentList	MEMBLK_POSTPTR ( b )		7506036	1					
ANR	7506177	Argument	MEMBLK_POSTPTR ( b )		7506036	0					
ANR	7506178	CallExpression	MEMBLK_POSTPTR ( b )		7506036	0					
ANR	7506179	Callee	MEMBLK_POSTPTR		7506036	0					
ANR	7506180	Identifier	MEMBLK_POSTPTR		7506036	0					
ANR	7506181	ArgumentList	b		7506036	1					
ANR	7506182	Argument	b		7506036	0					
ANR	7506183	Identifier	b		7506036	0					
ANR	7506184	Argument	Memento_PostSize		7506036	1					
ANR	7506185	Identifier	Memento_PostSize		7506036	0					
ANR	7506186	IfStatement	if ( type == 0 )		7506036	9					
ANR	7506187	Condition	type == 0	970:8:28423:28431	7506036	0	True				
ANR	7506188	EqualityExpression	type == 0		7506036	0		==			
ANR	7506189	Identifier	type		7506036	0					
ANR	7506190	PrimaryExpression	0		7506036	1					
ANR	7506191	CompoundStatement		18:19:655:655	7506036	1					
ANR	7506192	ExpressionStatement	"VALGRIND_MAKE_MEM_UNDEFINED ( MEMBLK_TOBLK ( b ) , b -> rawsize )"	971:8:28457:28513	7506036	0	True				
ANR	7506193	CallExpression	"VALGRIND_MAKE_MEM_UNDEFINED ( MEMBLK_TOBLK ( b ) , b -> rawsize )"		7506036	0					
ANR	7506194	Callee	VALGRIND_MAKE_MEM_UNDEFINED		7506036	0					
ANR	7506195	Identifier	VALGRIND_MAKE_MEM_UNDEFINED		7506036	0					
ANR	7506196	ArgumentList	MEMBLK_TOBLK ( b )		7506036	1					
ANR	7506197	Argument	MEMBLK_TOBLK ( b )		7506036	0					
ANR	7506198	CallExpression	MEMBLK_TOBLK ( b )		7506036	0					
ANR	7506199	Callee	MEMBLK_TOBLK		7506036	0					
ANR	7506200	Identifier	MEMBLK_TOBLK		7506036	0					
ANR	7506201	ArgumentList	b		7506036	1					
ANR	7506202	Argument	b		7506036	0					
ANR	7506203	Identifier	b		7506036	0					
ANR	7506204	Argument	b -> rawsize		7506036	1					
ANR	7506205	PtrMemberAccess	b -> rawsize		7506036	0					
ANR	7506206	Identifier	b		7506036	0					
ANR	7506207	Identifier	rawsize		7506036	1					
ANR	7506208	ElseStatement	else		7506036	0					
ANR	7506209	IfStatement	if ( type == 1 )		7506036	0					
ANR	7506210	Condition	type == 1	972:15:28530:28538	7506036	0	True				
ANR	7506211	EqualityExpression	type == 1		7506036	0		==			
ANR	7506212	Identifier	type		7506036	0					
ANR	7506213	PrimaryExpression	1		7506036	1					
ANR	7506214	CompoundStatement		20:26:762:762	7506036	1					
ANR	7506215	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_TOBLK ( b ) , b -> rawsize )"	973:8:28562:28617	7506036	0	True				
ANR	7506216	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_TOBLK ( b ) , b -> rawsize )"		7506036	0					
ANR	7506217	Callee	VALGRIND_MAKE_MEM_NOACCESS		7506036	0					
ANR	7506218	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7506036	0					
ANR	7506219	ArgumentList	MEMBLK_TOBLK ( b )		7506036	1					
ANR	7506220	Argument	MEMBLK_TOBLK ( b )		7506036	0					
ANR	7506221	CallExpression	MEMBLK_TOBLK ( b )		7506036	0					
ANR	7506222	Callee	MEMBLK_TOBLK		7506036	0					
ANR	7506223	Identifier	MEMBLK_TOBLK		7506036	0					
ANR	7506224	ArgumentList	b		7506036	1					
ANR	7506225	Argument	b		7506036	0					
ANR	7506226	Identifier	b		7506036	0					
ANR	7506227	Argument	b -> rawsize		7506036	1					
ANR	7506228	PtrMemberAccess	b -> rawsize		7506036	0					
ANR	7506229	Identifier	b		7506036	0					
ANR	7506230	Identifier	rawsize		7506036	1					
ANR	7506231	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( b , sizeof ( Memento_BlkHeader ) )"	975:4:28629:28685	7506036	10	True				
ANR	7506232	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( b , sizeof ( Memento_BlkHeader ) )"		7506036	0					
ANR	7506233	Callee	VALGRIND_MAKE_MEM_NOACCESS		7506036	0					
ANR	7506234	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7506036	0					
ANR	7506235	ArgumentList	b		7506036	1					
ANR	7506236	Argument	b		7506036	0					
ANR	7506237	Identifier	b		7506036	0					
ANR	7506238	Argument	sizeof ( Memento_BlkHeader )		7506036	1					
ANR	7506239	SizeofExpression	sizeof ( Memento_BlkHeader )		7506036	0					
ANR	7506240	Sizeof	sizeof		7506036	0					
ANR	7506241	SizeofOperand	Memento_BlkHeader		7506036	1					
ANR	7506242	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( & blks -> tail , sizeof ( Memento_BlkHeader * ) )"	976:4:28691:28759	7506036	11	True				
ANR	7506243	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( & blks -> tail , sizeof ( Memento_BlkHeader * ) )"		7506036	0					
ANR	7506244	Callee	VALGRIND_MAKE_MEM_NOACCESS		7506036	0					
ANR	7506245	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7506036	0					
ANR	7506246	ArgumentList	& blks -> tail		7506036	1					
ANR	7506247	Argument	& blks -> tail		7506036	0					
ANR	7506248	UnaryOperationExpression	& blks -> tail		7506036	0					
ANR	7506249	UnaryOperator	&		7506036	0					
ANR	7506250	PtrMemberAccess	blks -> tail		7506036	1					
ANR	7506251	Identifier	blks		7506036	0					
ANR	7506252	Identifier	tail		7506036	1					
ANR	7506253	Argument	sizeof ( Memento_BlkHeader * )		7506036	1					
ANR	7506254	SizeofExpression	sizeof ( Memento_BlkHeader * )		7506036	0					
ANR	7506255	Sizeof	sizeof		7506036	0					
ANR	7506256	SizeofOperand	Memento_BlkHeader *		7506036	1					
ANR	7506257	ReturnType	static void		7506036	1					
ANR	7506258	Identifier	Memento_addBlockTail		7506036	2					
ANR	7506259	ParameterList	"Memento_Blocks * blks , Memento_BlkHeader * b , int type"		7506036	3					
ANR	7506260	Parameter	Memento_Blocks * blks	950:33:27640:27662	7506036	0	True				
ANR	7506261	ParameterType	Memento_Blocks *		7506036	0					
ANR	7506262	Identifier	blks		7506036	1					
ANR	7506263	Parameter	Memento_BlkHeader * b	951:33:27698:27717	7506036	1	True				
ANR	7506264	ParameterType	Memento_BlkHeader *		7506036	0					
ANR	7506265	Identifier	b		7506036	1					
ANR	7506266	Parameter	int type	952:33:27753:27775	7506036	2	True				
ANR	7506267	ParameterType	int		7506036	0					
ANR	7506268	Identifier	type		7506036	1					
ANR	7506269	CFGEntryNode	ENTRY		7506036		True				
ANR	7506270	CFGExitNode	EXIT		7506036		True				
ANR	7506271	Symbol	blks -> tail		7506036						
ANR	7506272	Symbol	b		7506036						
ANR	7506273	Symbol	NULL		7506036						
ANR	7506274	Symbol	Memento_PreSize		7506036						
ANR	7506275	Symbol	b -> preblk		7506036						
ANR	7506276	Symbol	blks -> head		7506036						
ANR	7506277	Symbol	* * blks		7506036						
ANR	7506278	Symbol	type		7506036						
ANR	7506279	Symbol	* b		7506036						
ANR	7506280	Symbol	& blks -> tail -> next		7506036						
ANR	7506281	Symbol	MEMBLK_TOBLK		7506036						
ANR	7506282	Symbol	b -> prev		7506036						
ANR	7506283	Symbol	b -> rawsize		7506036						
ANR	7506284	Symbol	* blks -> tail		7506036						
ANR	7506285	Symbol	MEMENTO_PREFILL		7506036						
ANR	7506286	Symbol	* blks		7506036						
ANR	7506287	Symbol	MEMBLK_POSTPTR		7506036						
ANR	7506288	Symbol	& blks -> tail		7506036						
ANR	7506289	Symbol	b -> next		7506036						
ANR	7506290	Symbol	MEMENTO_POSTFILL		7506036						
ANR	7506291	Symbol	Memento_PostSize		7506036						
ANR	7506292	Symbol	blks -> tail -> next		7506036						
ANR	7506293	Symbol	blks		7506036						
ANR	7506294	ClassDef	BlkCheckData	979:8:28772:28900							
ANR	7506295	DeclStmt									
ANR	7506296	Decl							int	int	found
ANR	7506297	DeclStmt									
ANR	7506298	Decl							int	int	preCorrupt
ANR	7506299	DeclStmt									
ANR	7506300	Decl							int	int	postCorrupt
ANR	7506301	DeclStmt									
ANR	7506302	Decl							int	int	freeCorrupt
ANR	7506303	DeclStmt									
ANR	7506304	Decl							int	int	index
ANR	7506305	DeclStmt									
ANR	7506306	Decl							BlkCheckData	BlkCheckData	BlkCheckData
ANR	7506307	Function	Memento_Internal_checkAllocedBlock	988:0:28928:30374							
ANR	7506308	FunctionDef	"Memento_Internal_checkAllocedBlock (Memento_BlkHeader * b , void * arg)"		7506307	0					
ANR	7506309	CompoundStatement		989:0:29007:30374	7506307	0					
ANR	7506310	IdentifierDeclStatement	int i ;	990:4:29013:29030	7506307	0	True				
ANR	7506311	IdentifierDecl	i		7506307	0					
ANR	7506312	IdentifierDeclType	int		7506307	0					
ANR	7506313	Identifier	i		7506307	1					
ANR	7506314	IdentifierDeclStatement	MEMENTO_UINT32 * ip ;	991:4:29036:29054	7506307	1	True				
ANR	7506315	IdentifierDecl	* ip		7506307	0					
ANR	7506316	IdentifierDeclType	MEMENTO_UINT32 *		7506307	0					
ANR	7506317	Identifier	ip		7506307	1					
ANR	7506318	IdentifierDeclStatement	unsigned char * p ;	992:4:29060:29077	7506307	2	True				
ANR	7506319	IdentifierDecl	* p		7506307	0					
ANR	7506320	IdentifierDeclType	unsigned char *		7506307	0					
ANR	7506321	Identifier	p		7506307	1					
ANR	7506322	IdentifierDeclStatement	BlkCheckData * data = ( BlkCheckData * ) arg ;	993:4:29083:29125	7506307	3	True				
ANR	7506323	IdentifierDecl	* data = ( BlkCheckData * ) arg		7506307	0					
ANR	7506324	IdentifierDeclType	BlkCheckData *		7506307	0					
ANR	7506325	Identifier	data		7506307	1					
ANR	7506326	AssignmentExpression	* data = ( BlkCheckData * ) arg		7506307	2		=			
ANR	7506327	Identifier	data		7506307	0					
ANR	7506328	CastExpression	( BlkCheckData * ) arg		7506307	1					
ANR	7506329	CastTarget	BlkCheckData *		7506307	0					
ANR	7506330	Identifier	arg		7506307	1					
ANR	7506331	ExpressionStatement	ip = ( MEMENTO_UINT32 * ) ( void * ) ( b -> preblk )	995:4:29132:29174	7506307	4	True				
ANR	7506332	AssignmentExpression	ip = ( MEMENTO_UINT32 * ) ( void * ) ( b -> preblk )		7506307	0		=			
ANR	7506333	Identifier	ip		7506307	0					
ANR	7506334	CastExpression	( MEMENTO_UINT32 * ) ( void * ) ( b -> preblk )		7506307	1					
ANR	7506335	CastTarget	MEMENTO_UINT32 *		7506307	0					
ANR	7506336	CastExpression	( void * ) ( b -> preblk )		7506307	1					
ANR	7506337	CastTarget	void *		7506307	0					
ANR	7506338	PtrMemberAccess	b -> preblk		7506307	1					
ANR	7506339	Identifier	b		7506307	0					
ANR	7506340	Identifier	preblk		7506307	1					
ANR	7506341	ExpressionStatement	i = Memento_PreSize >> 2	996:4:29180:29202	7506307	5	True				
ANR	7506342	AssignmentExpression	i = Memento_PreSize >> 2		7506307	0		=			
ANR	7506343	Identifier	i		7506307	0					
ANR	7506344	ShiftExpression	Memento_PreSize >> 2		7506307	1		>>			
ANR	7506345	Identifier	Memento_PreSize		7506307	0					
ANR	7506346	PrimaryExpression	2		7506307	1					
ANR	7506347	DoStatement	do		7506307	6					
ANR	7506348	CompoundStatement		9:7:203:203	7506307	0					
ANR	7506349	IfStatement	if ( * ip ++ != MEMENTO_PREFILL_UINT32 )		7506307	0					
ANR	7506350	Condition	* ip ++ != MEMENTO_PREFILL_UINT32	998:12:29225:29255	7506307	0	True				
ANR	7506351	EqualityExpression	* ip ++ != MEMENTO_PREFILL_UINT32		7506307	0		!=			
ANR	7506352	UnaryOperationExpression	* ip ++		7506307	0					
ANR	7506353	UnaryOperator	*		7506307	0					
ANR	7506354	PostIncDecOperationExpression	ip ++		7506307	1					
ANR	7506355	Identifier	ip		7506307	0					
ANR	7506356	IncDec	++		7506307	1					
ANR	7506357	Identifier	MEMENTO_PREFILL_UINT32		7506307	1					
ANR	7506358	GotoStatement	goto pre_corrupt ;	999:12:29270:29286	7506307	1	True				
ANR	7506359	Identifier	pre_corrupt		7506307	0					
ANR	7506360	Condition	-- i	1000:13:29301:29303	7506307	1	True				
ANR	7506361	UnaryExpression	-- i		7506307	0					
ANR	7506362	IncDec	--		7506307	0					
ANR	7506363	Identifier	i		7506307	1					
ANR	7506364	IfStatement	if ( 0 )		7506307	7					
ANR	7506365	Condition	0	1001:8:29315:29315	7506307	0	True				
ANR	7506366	PrimaryExpression	0		7506307	0					
ANR	7506367	CompoundStatement		13:11:310:310	7506307	1					
ANR	7506368	Label	pre_corrupt :	1002:0:29320:29331	7506307	0	True				
ANR	7506369	Identifier	pre_corrupt		7506307	0					
ANR	7506370	ExpressionStatement	data -> preCorrupt = 1	1003:8:29341:29361	7506307	1	True				
ANR	7506371	AssignmentExpression	data -> preCorrupt = 1		7506307	0		=			
ANR	7506372	PtrMemberAccess	data -> preCorrupt		7506307	0					
ANR	7506373	Identifier	data		7506307	0					
ANR	7506374	Identifier	preCorrupt		7506307	1					
ANR	7506375	PrimaryExpression	1		7506307	1					
ANR	7506376	ExpressionStatement	p = MEMBLK_POSTPTR ( b )	1006:4:29433:29454	7506307	8	True				
ANR	7506377	AssignmentExpression	p = MEMBLK_POSTPTR ( b )		7506307	0		=			
ANR	7506378	Identifier	p		7506307	0					
ANR	7506379	CallExpression	MEMBLK_POSTPTR ( b )		7506307	1					
ANR	7506380	Callee	MEMBLK_POSTPTR		7506307	0					
ANR	7506381	Identifier	MEMBLK_POSTPTR		7506307	0					
ANR	7506382	ArgumentList	b		7506307	1					
ANR	7506383	Argument	b		7506307	0					
ANR	7506384	Identifier	b		7506307	0					
ANR	7506385	ExpressionStatement	i = Memento_PostSize - 4	1007:4:29460:29482	7506307	9	True				
ANR	7506386	AssignmentExpression	i = Memento_PostSize - 4		7506307	0		=			
ANR	7506387	Identifier	i		7506307	0					
ANR	7506388	AdditiveExpression	Memento_PostSize - 4		7506307	1		-			
ANR	7506389	Identifier	Memento_PostSize		7506307	0					
ANR	7506390	PrimaryExpression	4		7506307	1					
ANR	7506391	IfStatement	if ( ( intptr_t ) p & 1 )		7506307	10					
ANR	7506392	Condition	( intptr_t ) p & 1	1008:8:29492:29506	7506307	0	True				
ANR	7506393	BitAndExpression	( intptr_t ) p & 1		7506307	0		&			
ANR	7506394	CastExpression	( intptr_t ) p		7506307	0					
ANR	7506395	CastTarget	intptr_t		7506307	0					
ANR	7506396	Identifier	p		7506307	1					
ANR	7506397	PrimaryExpression	1		7506307	1					
ANR	7506398	CompoundStatement		21:4:505:505	7506307	1					
ANR	7506399	IfStatement	if ( * p ++ != MEMENTO_POSTFILL )		7506307	0					
ANR	7506400	Condition	* p ++ != MEMENTO_POSTFILL	1010:12:29527:29550	7506307	0	True				
ANR	7506401	EqualityExpression	* p ++ != MEMENTO_POSTFILL		7506307	0		!=			
ANR	7506402	UnaryOperationExpression	* p ++		7506307	0					
ANR	7506403	UnaryOperator	*		7506307	0					
ANR	7506404	PostIncDecOperationExpression	p ++		7506307	1					
ANR	7506405	Identifier	p		7506307	0					
ANR	7506406	IncDec	++		7506307	1					
ANR	7506407	Identifier	MEMENTO_POSTFILL		7506307	1					
ANR	7506408	GotoStatement	goto post_corrupt ;	1011:12:29565:29582	7506307	1	True				
ANR	7506409	Identifier	post_corrupt		7506307	0					
ANR	7506410	ExpressionStatement	i --	1012:8:29592:29595	7506307	1	True				
ANR	7506411	PostIncDecOperationExpression	i --		7506307	0					
ANR	7506412	Identifier	i		7506307	0					
ANR	7506413	IncDec	--		7506307	1					
ANR	7506414	IfStatement	if ( ( intptr_t ) p & 2 )		7506307	11					
ANR	7506415	Condition	( intptr_t ) p & 2	1014:8:29611:29625	7506307	0	True				
ANR	7506416	BitAndExpression	( intptr_t ) p & 2		7506307	0		&			
ANR	7506417	CastExpression	( intptr_t ) p		7506307	0					
ANR	7506418	CastTarget	intptr_t		7506307	0					
ANR	7506419	Identifier	p		7506307	1					
ANR	7506420	PrimaryExpression	2		7506307	1					
ANR	7506421	CompoundStatement		27:4:624:624	7506307	1					
ANR	7506422	IfStatement	if ( * ( MEMENTO_UINT16 * ) p != MEMENTO_POSTFILL_UINT16 )		7506307	0					
ANR	7506423	Condition	* ( MEMENTO_UINT16 * ) p != MEMENTO_POSTFILL_UINT16	1016:12:29646:29692	7506307	0	True				
ANR	7506424	EqualityExpression	* ( MEMENTO_UINT16 * ) p != MEMENTO_POSTFILL_UINT16		7506307	0		!=			
ANR	7506425	UnaryOperationExpression	* ( MEMENTO_UINT16 * ) p		7506307	0					
ANR	7506426	UnaryOperator	*		7506307	0					
ANR	7506427	CastExpression	( MEMENTO_UINT16 * ) p		7506307	1					
ANR	7506428	CastTarget	MEMENTO_UINT16 *		7506307	0					
ANR	7506429	Identifier	p		7506307	1					
ANR	7506430	Identifier	MEMENTO_POSTFILL_UINT16		7506307	1					
ANR	7506431	GotoStatement	goto post_corrupt ;	1017:12:29707:29724	7506307	1	True				
ANR	7506432	Identifier	post_corrupt		7506307	0					
ANR	7506433	ExpressionStatement	p += 2	1018:8:29734:29740	7506307	1	True				
ANR	7506434	AssignmentExpression	p += 2		7506307	0		+=			
ANR	7506435	Identifier	p		7506307	0					
ANR	7506436	PrimaryExpression	2		7506307	1					
ANR	7506437	ExpressionStatement	i -= 2	1019:8:29750:29756	7506307	2	True				
ANR	7506438	AssignmentExpression	i -= 2		7506307	0		-=			
ANR	7506439	Identifier	i		7506307	0					
ANR	7506440	PrimaryExpression	2		7506307	1					
ANR	7506441	DoStatement	do		7506307	12					
ANR	7506442	CompoundStatement		33:7:763:763	7506307	0					
ANR	7506443	IfStatement	if ( * ( MEMENTO_UINT32 * ) p != MEMENTO_POSTFILL_UINT32 )		7506307	0					
ANR	7506444	Condition	* ( MEMENTO_UINT32 * ) p != MEMENTO_POSTFILL_UINT32	1022:12:29785:29831	7506307	0	True				
ANR	7506445	EqualityExpression	* ( MEMENTO_UINT32 * ) p != MEMENTO_POSTFILL_UINT32		7506307	0		!=			
ANR	7506446	UnaryOperationExpression	* ( MEMENTO_UINT32 * ) p		7506307	0					
ANR	7506447	UnaryOperator	*		7506307	0					
ANR	7506448	CastExpression	( MEMENTO_UINT32 * ) p		7506307	1					
ANR	7506449	CastTarget	MEMENTO_UINT32 *		7506307	0					
ANR	7506450	Identifier	p		7506307	1					
ANR	7506451	Identifier	MEMENTO_POSTFILL_UINT32		7506307	1					
ANR	7506452	GotoStatement	goto post_corrupt ;	1023:12:29846:29863	7506307	1	True				
ANR	7506453	Identifier	post_corrupt		7506307	0					
ANR	7506454	ExpressionStatement	p += 4	1024:8:29873:29879	7506307	1	True				
ANR	7506455	AssignmentExpression	p += 4		7506307	0		+=			
ANR	7506456	Identifier	p		7506307	0					
ANR	7506457	PrimaryExpression	4		7506307	1					
ANR	7506458	ExpressionStatement	i -= 4	1025:8:29889:29895	7506307	2	True				
ANR	7506459	AssignmentExpression	i -= 4		7506307	0		-=			
ANR	7506460	Identifier	i		7506307	0					
ANR	7506461	PrimaryExpression	4		7506307	1					
ANR	7506462	Condition	i >= 0	1026:13:29910:29915	7506307	1	True				
ANR	7506463	RelationalExpression	i >= 0		7506307	0		>=			
ANR	7506464	Identifier	i		7506307	0					
ANR	7506465	PrimaryExpression	0		7506307	1					
ANR	7506466	IfStatement	if ( i & 2 )		7506307	13					
ANR	7506467	Condition	i & 2	1027:8:29927:29931	7506307	0	True				
ANR	7506468	BitAndExpression	i & 2		7506307	0		&			
ANR	7506469	Identifier	i		7506307	0					
ANR	7506470	PrimaryExpression	2		7506307	1					
ANR	7506471	CompoundStatement		40:4:930:930	7506307	1					
ANR	7506472	IfStatement	if ( * ( MEMENTO_UINT16 * ) p != MEMENTO_POSTFILL_UINT16 )		7506307	0					
ANR	7506473	Condition	* ( MEMENTO_UINT16 * ) p != MEMENTO_POSTFILL_UINT16	1029:12:29952:29998	7506307	0	True				
ANR	7506474	EqualityExpression	* ( MEMENTO_UINT16 * ) p != MEMENTO_POSTFILL_UINT16		7506307	0		!=			
ANR	7506475	UnaryOperationExpression	* ( MEMENTO_UINT16 * ) p		7506307	0					
ANR	7506476	UnaryOperator	*		7506307	0					
ANR	7506477	CastExpression	( MEMENTO_UINT16 * ) p		7506307	1					
ANR	7506478	CastTarget	MEMENTO_UINT16 *		7506307	0					
ANR	7506479	Identifier	p		7506307	1					
ANR	7506480	Identifier	MEMENTO_POSTFILL_UINT16		7506307	1					
ANR	7506481	GotoStatement	goto post_corrupt ;	1030:12:30013:30030	7506307	1	True				
ANR	7506482	Identifier	post_corrupt		7506307	0					
ANR	7506483	ExpressionStatement	p += 2	1031:8:30040:30046	7506307	1	True				
ANR	7506484	AssignmentExpression	p += 2		7506307	0		+=			
ANR	7506485	Identifier	p		7506307	0					
ANR	7506486	PrimaryExpression	2		7506307	1					
ANR	7506487	IfStatement	if ( i & 1 )		7506307	14					
ANR	7506488	Condition	i & 1	1033:8:30062:30066	7506307	0	True				
ANR	7506489	BitAndExpression	i & 1		7506307	0		&			
ANR	7506490	Identifier	i		7506307	0					
ANR	7506491	PrimaryExpression	1		7506307	1					
ANR	7506492	CompoundStatement		46:4:1065:1065	7506307	1					
ANR	7506493	IfStatement	if ( * p != MEMENTO_POSTFILL )		7506307	0					
ANR	7506494	Condition	* p != MEMENTO_POSTFILL	1035:12:30087:30108	7506307	0	True				
ANR	7506495	EqualityExpression	* p != MEMENTO_POSTFILL		7506307	0		!=			
ANR	7506496	UnaryOperationExpression	* p		7506307	0					
ANR	7506497	UnaryOperator	*		7506307	0					
ANR	7506498	Identifier	p		7506307	1					
ANR	7506499	Identifier	MEMENTO_POSTFILL		7506307	1					
ANR	7506500	GotoStatement	goto post_corrupt ;	1036:12:30123:30140	7506307	1	True				
ANR	7506501	Identifier	post_corrupt		7506307	0					
ANR	7506502	IfStatement	if ( 0 )		7506307	15					
ANR	7506503	Condition	0	1038:8:30156:30156	7506307	0	True				
ANR	7506504	PrimaryExpression	0		7506307	0					
ANR	7506505	CompoundStatement		50:11:1151:1151	7506307	1					
ANR	7506506	Label	post_corrupt :	1039:0:30161:30173	7506307	0	True				
ANR	7506507	Identifier	post_corrupt		7506307	0					
ANR	7506508	ExpressionStatement	data -> postCorrupt = 1	1040:8:30183:30204	7506307	1	True				
ANR	7506509	AssignmentExpression	data -> postCorrupt = 1		7506307	0		=			
ANR	7506510	PtrMemberAccess	data -> postCorrupt		7506307	0					
ANR	7506511	Identifier	data		7506307	0					
ANR	7506512	Identifier	postCorrupt		7506307	1					
ANR	7506513	PrimaryExpression	1		7506307	1					
ANR	7506514	IfStatement	if ( ( data -> freeCorrupt | data -> preCorrupt | data -> postCorrupt ) == 0 )		7506307	16					
ANR	7506515	Condition	( data -> freeCorrupt | data -> preCorrupt | data -> postCorrupt ) == 0	1042:8:30220:30282	7506307	0	True				
ANR	7506516	EqualityExpression	( data -> freeCorrupt | data -> preCorrupt | data -> postCorrupt ) == 0		7506307	0		==			
ANR	7506517	InclusiveOrExpression	data -> freeCorrupt | data -> preCorrupt | data -> postCorrupt		7506307	0		|			
ANR	7506518	PtrMemberAccess	data -> freeCorrupt		7506307	0					
ANR	7506519	Identifier	data		7506307	0					
ANR	7506520	Identifier	freeCorrupt		7506307	1					
ANR	7506521	InclusiveOrExpression	data -> preCorrupt | data -> postCorrupt		7506307	1		|			
ANR	7506522	PtrMemberAccess	data -> preCorrupt		7506307	0					
ANR	7506523	Identifier	data		7506307	0					
ANR	7506524	Identifier	preCorrupt		7506307	1					
ANR	7506525	PtrMemberAccess	data -> postCorrupt		7506307	1					
ANR	7506526	Identifier	data		7506307	0					
ANR	7506527	Identifier	postCorrupt		7506307	1					
ANR	7506528	PrimaryExpression	0		7506307	1					
ANR	7506529	CompoundStatement		54:73:1277:1277	7506307	1					
ANR	7506530	ExpressionStatement	b -> lastCheckedOK = memento . sequence	1043:8:30295:30330	7506307	0	True				
ANR	7506531	AssignmentExpression	b -> lastCheckedOK = memento . sequence		7506307	0		=			
ANR	7506532	PtrMemberAccess	b -> lastCheckedOK		7506307	0					
ANR	7506533	Identifier	b		7506307	0					
ANR	7506534	Identifier	lastCheckedOK		7506307	1					
ANR	7506535	MemberAccess	memento . sequence		7506307	1					
ANR	7506536	Identifier	memento		7506307	0					
ANR	7506537	Identifier	sequence		7506307	1					
ANR	7506538	ExpressionStatement	data -> found |= 1	1045:4:30342:30358	7506307	17	True				
ANR	7506539	AssignmentExpression	data -> found |= 1		7506307	0		|=			
ANR	7506540	PtrMemberAccess	data -> found		7506307	0					
ANR	7506541	Identifier	data		7506307	0					
ANR	7506542	Identifier	found		7506307	1					
ANR	7506543	PrimaryExpression	1		7506307	1					
ANR	7506544	ReturnStatement	return 0 ;	1046:4:30364:30372	7506307	18	True				
ANR	7506545	PrimaryExpression	0		7506307	0					
ANR	7506546	ReturnType	static int		7506307	1					
ANR	7506547	Identifier	Memento_Internal_checkAllocedBlock		7506307	2					
ANR	7506548	ParameterList	"Memento_BlkHeader * b , void * arg"		7506307	3					
ANR	7506549	Parameter	Memento_BlkHeader * b	988:46:28974:28993	7506307	0	True				
ANR	7506550	ParameterType	Memento_BlkHeader *		7506307	0					
ANR	7506551	Identifier	b		7506307	1					
ANR	7506552	Parameter	void * arg	988:68:28996:29004	7506307	1	True				
ANR	7506553	ParameterType	void *		7506307	0					
ANR	7506554	Identifier	arg		7506307	1					
ANR	7506555	CFGEntryNode	ENTRY		7506307		True				
ANR	7506556	CFGExitNode	EXIT		7506307		True				
ANR	7506557	Symbol	data		7506307						
ANR	7506558	Symbol	MEMENTO_POSTFILL_UINT16		7506307						
ANR	7506559	Symbol	b -> preblk		7506307						
ANR	7506560	Symbol	data -> found		7506307						
ANR	7506561	Symbol	data -> preCorrupt		7506307						
ANR	7506562	Symbol	MEMENTO_POSTFILL_UINT32		7506307						
ANR	7506563	Symbol	MEMBLK_POSTPTR		7506307						
ANR	7506564	Symbol	data -> postCorrupt		7506307						
ANR	7506565	Symbol	arg		7506307						
ANR	7506566	Symbol	* ip ++		7506307						
ANR	7506567	Symbol	MEMENTO_POSTFILL		7506307						
ANR	7506568	Symbol	* ( MEMENTO_UINT16 * ) p		7506307						
ANR	7506569	Symbol	b		7506307						
ANR	7506570	Symbol	* ( MEMENTO_UINT32 * ) p		7506307						
ANR	7506571	Symbol	Memento_PreSize		7506307						
ANR	7506572	Symbol	ip		7506307						
ANR	7506573	Symbol	MEMENTO_PREFILL_UINT32		7506307						
ANR	7506574	Symbol	* p ++		7506307						
ANR	7506575	Symbol	i		7506307						
ANR	7506576	Symbol	memento		7506307						
ANR	7506577	Symbol	* b		7506307						
ANR	7506578	Symbol	p		7506307						
ANR	7506579	Symbol	data -> freeCorrupt		7506307						
ANR	7506580	Symbol	b -> lastCheckedOK		7506307						
ANR	7506581	Symbol	Memento_PostSize		7506307						
ANR	7506582	Symbol	* p		7506307						
ANR	7506583	Symbol	* data		7506307						
ANR	7506584	Symbol	memento . sequence		7506307						
ANR	7506585	Function	Memento_Internal_checkFreedBlock	1049:0:30377:31268							
ANR	7506586	FunctionDef	"Memento_Internal_checkFreedBlock (Memento_BlkHeader * b , void * arg)"		7506585	0					
ANR	7506587	CompoundStatement		1050:0:30454:31268	7506585	0					
ANR	7506588	IdentifierDeclStatement	int i ;	1051:4:30460:30476	7506585	0	True				
ANR	7506589	IdentifierDecl	i		7506585	0					
ANR	7506590	IdentifierDeclType	int		7506585	0					
ANR	7506591	Identifier	i		7506585	1					
ANR	7506592	IdentifierDeclStatement	unsigned char * p ;	1052:4:30482:30498	7506585	1	True				
ANR	7506593	IdentifierDecl	* p		7506585	0					
ANR	7506594	IdentifierDeclType	unsigned char *		7506585	0					
ANR	7506595	Identifier	p		7506585	1					
ANR	7506596	IdentifierDeclStatement	BlkCheckData * data = ( BlkCheckData * ) arg ;	1053:4:30504:30545	7506585	2	True				
ANR	7506597	IdentifierDecl	* data = ( BlkCheckData * ) arg		7506585	0					
ANR	7506598	IdentifierDeclType	BlkCheckData *		7506585	0					
ANR	7506599	Identifier	data		7506585	1					
ANR	7506600	AssignmentExpression	* data = ( BlkCheckData * ) arg		7506585	2		=			
ANR	7506601	Identifier	data		7506585	0					
ANR	7506602	CastExpression	( BlkCheckData * ) arg		7506585	1					
ANR	7506603	CastTarget	BlkCheckData *		7506585	0					
ANR	7506604	Identifier	arg		7506585	1					
ANR	7506605	ExpressionStatement	p = MEMBLK_TOBLK ( b )	1055:4:30552:30571	7506585	3	True				
ANR	7506606	AssignmentExpression	p = MEMBLK_TOBLK ( b )		7506585	0		=			
ANR	7506607	Identifier	p		7506585	0					
ANR	7506608	CallExpression	MEMBLK_TOBLK ( b )		7506585	1					
ANR	7506609	Callee	MEMBLK_TOBLK		7506585	0					
ANR	7506610	Identifier	MEMBLK_TOBLK		7506585	0					
ANR	7506611	ArgumentList	b		7506585	1					
ANR	7506612	Argument	b		7506585	0					
ANR	7506613	Identifier	b		7506585	0					
ANR	7506614	ExpressionStatement	i = b -> rawsize - 4	1056:4:30608:30626	7506585	4	True				
ANR	7506615	AssignmentExpression	i = b -> rawsize - 4		7506585	0		=			
ANR	7506616	Identifier	i		7506585	0					
ANR	7506617	AdditiveExpression	b -> rawsize - 4		7506585	1		-			
ANR	7506618	PtrMemberAccess	b -> rawsize		7506585	0					
ANR	7506619	Identifier	b		7506585	0					
ANR	7506620	Identifier	rawsize		7506585	1					
ANR	7506621	PrimaryExpression	4		7506585	1					
ANR	7506622	WhileStatement	while ( i >= 0 )		7506585	5					
ANR	7506623	Condition	i >= 0	1058:11:30713:30718	7506585	0	True				
ANR	7506624	RelationalExpression	i >= 0		7506585	0		>=			
ANR	7506625	Identifier	i		7506585	0					
ANR	7506626	PrimaryExpression	0		7506585	1					
ANR	7506627	CompoundStatement		9:19:266:266	7506585	1					
ANR	7506628	IfStatement	if ( * ( MEMENTO_UINT32 * ) p != MEMENTO_FREEFILL_UINT32 )		7506585	0					
ANR	7506629	Condition	* ( MEMENTO_UINT32 * ) p != MEMENTO_FREEFILL_UINT32	1059:12:30735:30781	7506585	0	True				
ANR	7506630	EqualityExpression	* ( MEMENTO_UINT32 * ) p != MEMENTO_FREEFILL_UINT32		7506585	0		!=			
ANR	7506631	UnaryOperationExpression	* ( MEMENTO_UINT32 * ) p		7506585	0					
ANR	7506632	UnaryOperator	*		7506585	0					
ANR	7506633	CastExpression	( MEMENTO_UINT32 * ) p		7506585	1					
ANR	7506634	CastTarget	MEMENTO_UINT32 *		7506585	0					
ANR	7506635	Identifier	p		7506585	1					
ANR	7506636	Identifier	MEMENTO_FREEFILL_UINT32		7506585	1					
ANR	7506637	GotoStatement	goto mismatch ;	1060:12:30796:30809	7506585	1	True				
ANR	7506638	Identifier	mismatch		7506585	0					
ANR	7506639	ExpressionStatement	p += 4	1061:8:30819:30825	7506585	1	True				
ANR	7506640	AssignmentExpression	p += 4		7506585	0		+=			
ANR	7506641	Identifier	p		7506585	0					
ANR	7506642	PrimaryExpression	4		7506585	1					
ANR	7506643	ExpressionStatement	i -= 4	1062:8:30835:30841	7506585	2	True				
ANR	7506644	AssignmentExpression	i -= 4		7506585	0		-=			
ANR	7506645	Identifier	i		7506585	0					
ANR	7506646	PrimaryExpression	4		7506585	1					
ANR	7506647	ExpressionStatement	i += 4	1064:4:30853:30859	7506585	6	True				
ANR	7506648	AssignmentExpression	i += 4		7506585	0		+=			
ANR	7506649	Identifier	i		7506585	0					
ANR	7506650	PrimaryExpression	4		7506585	1					
ANR	7506651	IfStatement	if ( i & 2 )		7506585	7					
ANR	7506652	Condition	i & 2	1065:8:30869:30873	7506585	0	True				
ANR	7506653	BitAndExpression	i & 2		7506585	0		&			
ANR	7506654	Identifier	i		7506585	0					
ANR	7506655	PrimaryExpression	2		7506585	1					
ANR	7506656	CompoundStatement		16:15:421:421	7506585	1					
ANR	7506657	IfStatement	if ( * ( MEMENTO_UINT16 * ) p != MEMENTO_FREEFILL_UINT16 )		7506585	0					
ANR	7506658	Condition	* ( MEMENTO_UINT16 * ) p != MEMENTO_FREEFILL_UINT16	1066:12:30890:30936	7506585	0	True				
ANR	7506659	EqualityExpression	* ( MEMENTO_UINT16 * ) p != MEMENTO_FREEFILL_UINT16		7506585	0		!=			
ANR	7506660	UnaryOperationExpression	* ( MEMENTO_UINT16 * ) p		7506585	0					
ANR	7506661	UnaryOperator	*		7506585	0					
ANR	7506662	CastExpression	( MEMENTO_UINT16 * ) p		7506585	1					
ANR	7506663	CastTarget	MEMENTO_UINT16 *		7506585	0					
ANR	7506664	Identifier	p		7506585	1					
ANR	7506665	Identifier	MEMENTO_FREEFILL_UINT16		7506585	1					
ANR	7506666	GotoStatement	goto mismatch ;	1067:12:30951:30964	7506585	1	True				
ANR	7506667	Identifier	mismatch		7506585	0					
ANR	7506668	ExpressionStatement	p += 2	1068:8:30974:30980	7506585	1	True				
ANR	7506669	AssignmentExpression	p += 2		7506585	0		+=			
ANR	7506670	Identifier	p		7506585	0					
ANR	7506671	PrimaryExpression	2		7506585	1					
ANR	7506672	ExpressionStatement	i -= 2	1069:8:30990:30996	7506585	2	True				
ANR	7506673	AssignmentExpression	i -= 2		7506585	0		-=			
ANR	7506674	Identifier	i		7506585	0					
ANR	7506675	PrimaryExpression	2		7506585	1					
ANR	7506676	Label	mismatch :	1071:0:31004:31012	7506585	8	True				
ANR	7506677	Identifier	mismatch		7506585	0					
ANR	7506678	WhileStatement	while ( i )		7506585	9					
ANR	7506679	Condition	i	1072:11:31025:31025	7506585	0	True				
ANR	7506680	Identifier	i		7506585	0					
ANR	7506681	CompoundStatement		23:14:573:573	7506585	1					
ANR	7506682	IfStatement	if ( * p ++ != ( unsigned char ) MEMENTO_FREEFILL )		7506585	0					
ANR	7506683	Condition	* p ++ != ( unsigned char ) MEMENTO_FREEFILL	1073:12:31042:31080	7506585	0	True				
ANR	7506684	EqualityExpression	* p ++ != ( unsigned char ) MEMENTO_FREEFILL		7506585	0		!=			
ANR	7506685	UnaryOperationExpression	* p ++		7506585	0					
ANR	7506686	UnaryOperator	*		7506585	0					
ANR	7506687	PostIncDecOperationExpression	p ++		7506585	1					
ANR	7506688	Identifier	p		7506585	0					
ANR	7506689	IncDec	++		7506585	1					
ANR	7506690	CastExpression	( unsigned char ) MEMENTO_FREEFILL		7506585	1					
ANR	7506691	CastTarget	unsigned char		7506585	0					
ANR	7506692	Identifier	MEMENTO_FREEFILL		7506585	1					
ANR	7506693	BreakStatement	break ;	1074:12:31095:31100	7506585	1	True				
ANR	7506694	ExpressionStatement	i --	1075:8:31110:31113	7506585	1	True				
ANR	7506695	PostIncDecOperationExpression	i --		7506585	0					
ANR	7506696	Identifier	i		7506585	0					
ANR	7506697	IncDec	--		7506585	1					
ANR	7506698	IfStatement	if ( i )		7506585	10					
ANR	7506699	Condition	i	1077:8:31129:31129	7506585	0	True				
ANR	7506700	Identifier	i		7506585	0					
ANR	7506701	CompoundStatement		28:11:677:677	7506585	1					
ANR	7506702	ExpressionStatement	data -> freeCorrupt = 1	1078:8:31142:31163	7506585	0	True				
ANR	7506703	AssignmentExpression	data -> freeCorrupt = 1		7506585	0		=			
ANR	7506704	PtrMemberAccess	data -> freeCorrupt		7506585	0					
ANR	7506705	Identifier	data		7506585	0					
ANR	7506706	Identifier	freeCorrupt		7506585	1					
ANR	7506707	PrimaryExpression	1		7506585	1					
ANR	7506708	ExpressionStatement	data -> index = b -> rawsize - i	1079:8:31173:31205	7506585	1	True				
ANR	7506709	AssignmentExpression	data -> index = b -> rawsize - i		7506585	0		=			
ANR	7506710	PtrMemberAccess	data -> index		7506585	0					
ANR	7506711	Identifier	data		7506585	0					
ANR	7506712	Identifier	index		7506585	1					
ANR	7506713	AdditiveExpression	b -> rawsize - i		7506585	1		-			
ANR	7506714	PtrMemberAccess	b -> rawsize		7506585	0					
ANR	7506715	Identifier	b		7506585	0					
ANR	7506716	Identifier	rawsize		7506585	1					
ANR	7506717	Identifier	i		7506585	1					
ANR	7506718	ReturnStatement	"return Memento_Internal_checkAllocedBlock ( b , arg ) ;"	1081:4:31217:31266	7506585	11	True				
ANR	7506719	CallExpression	"Memento_Internal_checkAllocedBlock ( b , arg )"		7506585	0					
ANR	7506720	Callee	Memento_Internal_checkAllocedBlock		7506585	0					
ANR	7506721	Identifier	Memento_Internal_checkAllocedBlock		7506585	0					
ANR	7506722	ArgumentList	b		7506585	1					
ANR	7506723	Argument	b		7506585	0					
ANR	7506724	Identifier	b		7506585	0					
ANR	7506725	Argument	arg		7506585	1					
ANR	7506726	Identifier	arg		7506585	0					
ANR	7506727	ReturnType	static int		7506585	1					
ANR	7506728	Identifier	Memento_Internal_checkFreedBlock		7506585	2					
ANR	7506729	ParameterList	"Memento_BlkHeader * b , void * arg"		7506585	3					
ANR	7506730	Parameter	Memento_BlkHeader * b	1049:44:30421:30440	7506585	0	True				
ANR	7506731	ParameterType	Memento_BlkHeader *		7506585	0					
ANR	7506732	Identifier	b		7506585	1					
ANR	7506733	Parameter	void * arg	1049:66:30443:30451	7506585	1	True				
ANR	7506734	ParameterType	void *		7506585	0					
ANR	7506735	Identifier	arg		7506585	1					
ANR	7506736	CFGEntryNode	ENTRY		7506585		True				
ANR	7506737	CFGExitNode	EXIT		7506585		True				
ANR	7506738	Symbol	b		7506585						
ANR	7506739	Symbol	* ( MEMENTO_UINT32 * ) p		7506585						
ANR	7506740	Symbol	data		7506585						
ANR	7506741	Symbol	* p ++		7506585						
ANR	7506742	Symbol	i		7506585						
ANR	7506743	Symbol	* b		7506585						
ANR	7506744	Symbol	MEMBLK_TOBLK		7506585						
ANR	7506745	Symbol	p		7506585						
ANR	7506746	Symbol	b -> rawsize		7506585						
ANR	7506747	Symbol	Memento_Internal_checkAllocedBlock		7506585						
ANR	7506748	Symbol	MEMENTO_FREEFILL_UINT32		7506585						
ANR	7506749	Symbol	MEMENTO_FREEFILL		7506585						
ANR	7506750	Symbol	data -> freeCorrupt		7506585						
ANR	7506751	Symbol	arg		7506585						
ANR	7506752	Symbol	data -> index		7506585						
ANR	7506753	Symbol	MEMENTO_FREEFILL_UINT16		7506585						
ANR	7506754	Symbol	* p		7506585						
ANR	7506755	Symbol	* data		7506585						
ANR	7506756	Symbol	* ( MEMENTO_UINT16 * ) p		7506585						
ANR	7506757	Function	Memento_removeBlock	1085:0:31301:31984							
ANR	7506758	FunctionDef	"Memento_removeBlock (Memento_Blocks * blks , Memento_BlkHeader * b)"		7506757	0					
ANR	7506759	CompoundStatement		1087:0:31412:31984	7506757	0					
ANR	7506760	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( b , sizeof ( * b ) )"	1088:4:31418:31458	7506757	0	True				
ANR	7506761	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( b , sizeof ( * b ) )"		7506757	0					
ANR	7506762	Callee	VALGRIND_MAKE_MEM_DEFINED		7506757	0					
ANR	7506763	Identifier	VALGRIND_MAKE_MEM_DEFINED		7506757	0					
ANR	7506764	ArgumentList	b		7506757	1					
ANR	7506765	Argument	b		7506757	0					
ANR	7506766	Identifier	b		7506757	0					
ANR	7506767	Argument	sizeof ( * b )		7506757	1					
ANR	7506768	SizeofExpression	sizeof ( * b )		7506757	0					
ANR	7506769	Sizeof	sizeof		7506757	0					
ANR	7506770	UnaryOperationExpression	* b		7506757	1					
ANR	7506771	UnaryOperator	*		7506757	0					
ANR	7506772	Identifier	b		7506757	1					
ANR	7506773	IfStatement	if ( b -> next )		7506757	1					
ANR	7506774	Condition	b -> next	1089:8:31468:31474	7506757	0	True				
ANR	7506775	PtrMemberAccess	b -> next		7506757	0					
ANR	7506776	Identifier	b		7506757	0					
ANR	7506777	Identifier	next		7506757	1					
ANR	7506778	CompoundStatement		3:17:64:64	7506757	1					
ANR	7506779	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( & b -> next -> prev , sizeof ( b -> next -> prev ) )"	1090:8:31487:31551	7506757	0	True				
ANR	7506780	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( & b -> next -> prev , sizeof ( b -> next -> prev ) )"		7506757	0					
ANR	7506781	Callee	VALGRIND_MAKE_MEM_DEFINED		7506757	0					
ANR	7506782	Identifier	VALGRIND_MAKE_MEM_DEFINED		7506757	0					
ANR	7506783	ArgumentList	& b -> next -> prev		7506757	1					
ANR	7506784	Argument	& b -> next -> prev		7506757	0					
ANR	7506785	UnaryOperationExpression	& b -> next -> prev		7506757	0					
ANR	7506786	UnaryOperator	&		7506757	0					
ANR	7506787	PtrMemberAccess	b -> next -> prev		7506757	1					
ANR	7506788	PtrMemberAccess	b -> next		7506757	0					
ANR	7506789	Identifier	b		7506757	0					
ANR	7506790	Identifier	next		7506757	1					
ANR	7506791	Identifier	prev		7506757	1					
ANR	7506792	Argument	sizeof ( b -> next -> prev )		7506757	1					
ANR	7506793	SizeofExpression	sizeof ( b -> next -> prev )		7506757	0					
ANR	7506794	Sizeof	sizeof		7506757	0					
ANR	7506795	PtrMemberAccess	b -> next -> prev		7506757	1					
ANR	7506796	PtrMemberAccess	b -> next		7506757	0					
ANR	7506797	Identifier	b		7506757	0					
ANR	7506798	Identifier	next		7506757	1					
ANR	7506799	Identifier	prev		7506757	1					
ANR	7506800	ExpressionStatement	b -> next -> prev = b -> prev	1091:8:31561:31584	7506757	1	True				
ANR	7506801	AssignmentExpression	b -> next -> prev = b -> prev		7506757	0		=			
ANR	7506802	PtrMemberAccess	b -> next -> prev		7506757	0					
ANR	7506803	PtrMemberAccess	b -> next		7506757	0					
ANR	7506804	Identifier	b		7506757	0					
ANR	7506805	Identifier	next		7506757	1					
ANR	7506806	Identifier	prev		7506757	1					
ANR	7506807	PtrMemberAccess	b -> prev		7506757	1					
ANR	7506808	Identifier	b		7506757	0					
ANR	7506809	Identifier	prev		7506757	1					
ANR	7506810	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( & b -> next -> prev , sizeof ( b -> next -> prev ) )"	1092:8:31594:31659	7506757	2	True				
ANR	7506811	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( & b -> next -> prev , sizeof ( b -> next -> prev ) )"		7506757	0					
ANR	7506812	Callee	VALGRIND_MAKE_MEM_NOACCESS		7506757	0					
ANR	7506813	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7506757	0					
ANR	7506814	ArgumentList	& b -> next -> prev		7506757	1					
ANR	7506815	Argument	& b -> next -> prev		7506757	0					
ANR	7506816	UnaryOperationExpression	& b -> next -> prev		7506757	0					
ANR	7506817	UnaryOperator	&		7506757	0					
ANR	7506818	PtrMemberAccess	b -> next -> prev		7506757	1					
ANR	7506819	PtrMemberAccess	b -> next		7506757	0					
ANR	7506820	Identifier	b		7506757	0					
ANR	7506821	Identifier	next		7506757	1					
ANR	7506822	Identifier	prev		7506757	1					
ANR	7506823	Argument	sizeof ( b -> next -> prev )		7506757	1					
ANR	7506824	SizeofExpression	sizeof ( b -> next -> prev )		7506757	0					
ANR	7506825	Sizeof	sizeof		7506757	0					
ANR	7506826	PtrMemberAccess	b -> next -> prev		7506757	1					
ANR	7506827	PtrMemberAccess	b -> next		7506757	0					
ANR	7506828	Identifier	b		7506757	0					
ANR	7506829	Identifier	next		7506757	1					
ANR	7506830	Identifier	prev		7506757	1					
ANR	7506831	IfStatement	if ( b -> prev )		7506757	2					
ANR	7506832	Condition	b -> prev	1094:8:31675:31681	7506757	0	True				
ANR	7506833	PtrMemberAccess	b -> prev		7506757	0					
ANR	7506834	Identifier	b		7506757	0					
ANR	7506835	Identifier	prev		7506757	1					
ANR	7506836	CompoundStatement		8:17:271:271	7506757	1					
ANR	7506837	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( & b -> prev -> next , sizeof ( b -> prev -> next ) )"	1095:8:31694:31758	7506757	0	True				
ANR	7506838	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( & b -> prev -> next , sizeof ( b -> prev -> next ) )"		7506757	0					
ANR	7506839	Callee	VALGRIND_MAKE_MEM_DEFINED		7506757	0					
ANR	7506840	Identifier	VALGRIND_MAKE_MEM_DEFINED		7506757	0					
ANR	7506841	ArgumentList	& b -> prev -> next		7506757	1					
ANR	7506842	Argument	& b -> prev -> next		7506757	0					
ANR	7506843	UnaryOperationExpression	& b -> prev -> next		7506757	0					
ANR	7506844	UnaryOperator	&		7506757	0					
ANR	7506845	PtrMemberAccess	b -> prev -> next		7506757	1					
ANR	7506846	PtrMemberAccess	b -> prev		7506757	0					
ANR	7506847	Identifier	b		7506757	0					
ANR	7506848	Identifier	prev		7506757	1					
ANR	7506849	Identifier	next		7506757	1					
ANR	7506850	Argument	sizeof ( b -> prev -> next )		7506757	1					
ANR	7506851	SizeofExpression	sizeof ( b -> prev -> next )		7506757	0					
ANR	7506852	Sizeof	sizeof		7506757	0					
ANR	7506853	PtrMemberAccess	b -> prev -> next		7506757	1					
ANR	7506854	PtrMemberAccess	b -> prev		7506757	0					
ANR	7506855	Identifier	b		7506757	0					
ANR	7506856	Identifier	prev		7506757	1					
ANR	7506857	Identifier	next		7506757	1					
ANR	7506858	ExpressionStatement	b -> prev -> next = b -> next	1096:8:31768:31791	7506757	1	True				
ANR	7506859	AssignmentExpression	b -> prev -> next = b -> next		7506757	0		=			
ANR	7506860	PtrMemberAccess	b -> prev -> next		7506757	0					
ANR	7506861	PtrMemberAccess	b -> prev		7506757	0					
ANR	7506862	Identifier	b		7506757	0					
ANR	7506863	Identifier	prev		7506757	1					
ANR	7506864	Identifier	next		7506757	1					
ANR	7506865	PtrMemberAccess	b -> next		7506757	1					
ANR	7506866	Identifier	b		7506757	0					
ANR	7506867	Identifier	next		7506757	1					
ANR	7506868	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( & b -> prev -> next , sizeof ( b -> prev -> next ) )"	1097:8:31801:31866	7506757	2	True				
ANR	7506869	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( & b -> prev -> next , sizeof ( b -> prev -> next ) )"		7506757	0					
ANR	7506870	Callee	VALGRIND_MAKE_MEM_NOACCESS		7506757	0					
ANR	7506871	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7506757	0					
ANR	7506872	ArgumentList	& b -> prev -> next		7506757	1					
ANR	7506873	Argument	& b -> prev -> next		7506757	0					
ANR	7506874	UnaryOperationExpression	& b -> prev -> next		7506757	0					
ANR	7506875	UnaryOperator	&		7506757	0					
ANR	7506876	PtrMemberAccess	b -> prev -> next		7506757	1					
ANR	7506877	PtrMemberAccess	b -> prev		7506757	0					
ANR	7506878	Identifier	b		7506757	0					
ANR	7506879	Identifier	prev		7506757	1					
ANR	7506880	Identifier	next		7506757	1					
ANR	7506881	Argument	sizeof ( b -> prev -> next )		7506757	1					
ANR	7506882	SizeofExpression	sizeof ( b -> prev -> next )		7506757	0					
ANR	7506883	Sizeof	sizeof		7506757	0					
ANR	7506884	PtrMemberAccess	b -> prev -> next		7506757	1					
ANR	7506885	PtrMemberAccess	b -> prev		7506757	0					
ANR	7506886	Identifier	b		7506757	0					
ANR	7506887	Identifier	prev		7506757	1					
ANR	7506888	Identifier	next		7506757	1					
ANR	7506889	IfStatement	if ( blks -> tail == b )		7506757	3					
ANR	7506890	Condition	blks -> tail == b	1099:8:31882:31896	7506757	0	True				
ANR	7506891	EqualityExpression	blks -> tail == b		7506757	0		==			
ANR	7506892	PtrMemberAccess	blks -> tail		7506757	0					
ANR	7506893	Identifier	blks		7506757	0					
ANR	7506894	Identifier	tail		7506757	1					
ANR	7506895	Identifier	b		7506757	1					
ANR	7506896	ExpressionStatement	blks -> tail = b -> prev	1100:8:31907:31927	7506757	1	True				
ANR	7506897	AssignmentExpression	blks -> tail = b -> prev		7506757	0		=			
ANR	7506898	PtrMemberAccess	blks -> tail		7506757	0					
ANR	7506899	Identifier	blks		7506757	0					
ANR	7506900	Identifier	tail		7506757	1					
ANR	7506901	PtrMemberAccess	b -> prev		7506757	1					
ANR	7506902	Identifier	b		7506757	0					
ANR	7506903	Identifier	prev		7506757	1					
ANR	7506904	IfStatement	if ( blks -> head == b )		7506757	4					
ANR	7506905	Condition	blks -> head == b	1101:8:31937:31951	7506757	0	True				
ANR	7506906	EqualityExpression	blks -> head == b		7506757	0		==			
ANR	7506907	PtrMemberAccess	blks -> head		7506757	0					
ANR	7506908	Identifier	blks		7506757	0					
ANR	7506909	Identifier	head		7506757	1					
ANR	7506910	Identifier	b		7506757	1					
ANR	7506911	ExpressionStatement	blks -> head = b -> next	1102:8:31962:31982	7506757	1	True				
ANR	7506912	AssignmentExpression	blks -> head = b -> next		7506757	0		=			
ANR	7506913	PtrMemberAccess	blks -> head		7506757	0					
ANR	7506914	Identifier	blks		7506757	0					
ANR	7506915	Identifier	head		7506757	1					
ANR	7506916	PtrMemberAccess	b -> next		7506757	1					
ANR	7506917	Identifier	b		7506757	0					
ANR	7506918	Identifier	next		7506757	1					
ANR	7506919	ReturnType	static void		7506757	1					
ANR	7506920	Identifier	Memento_removeBlock		7506757	2					
ANR	7506921	ParameterList	"Memento_Blocks * blks , Memento_BlkHeader * b"		7506757	3					
ANR	7506922	Parameter	Memento_Blocks * blks	1085:32:31333:31355	7506757	0	True				
ANR	7506923	ParameterType	Memento_Blocks *		7506757	0					
ANR	7506924	Identifier	blks		7506757	1					
ANR	7506925	Parameter	Memento_BlkHeader * b	1086:32:31390:31409	7506757	1	True				
ANR	7506926	ParameterType	Memento_BlkHeader *		7506757	0					
ANR	7506927	Identifier	b		7506757	1					
ANR	7506928	CFGEntryNode	ENTRY		7506757		True				
ANR	7506929	CFGExitNode	EXIT		7506757		True				
ANR	7506930	Symbol	blks -> tail		7506757						
ANR	7506931	Symbol	b		7506757						
ANR	7506932	Symbol	& b -> prev -> next		7506757						
ANR	7506933	Symbol	* b -> prev		7506757						
ANR	7506934	Symbol	b -> prev -> next		7506757						
ANR	7506935	Symbol	* b -> next		7506757						
ANR	7506936	Symbol	* * b		7506757						
ANR	7506937	Symbol	blks -> head		7506757						
ANR	7506938	Symbol	b -> next -> prev		7506757						
ANR	7506939	Symbol	* b		7506757						
ANR	7506940	Symbol	b -> prev		7506757						
ANR	7506941	Symbol	* blks		7506757						
ANR	7506942	Symbol	b -> next		7506757						
ANR	7506943	Symbol	blks		7506757						
ANR	7506944	Symbol	& b -> next -> prev		7506757						
ANR	7506945	Function	free_block	1105:0:31987:32300							
ANR	7506946	FunctionDef	free_block (Memento_BlkHeader * head)		7506945	0					
ANR	7506947	CompoundStatement		1106:0:32035:32300	7506945	0					
ANR	7506948	IdentifierDeclStatement	Memento_BlkDetails * details = head -> details ;	1108:4:32064:32107	7506945	0	True				
ANR	7506949	IdentifierDecl	* details = head -> details		7506945	0					
ANR	7506950	IdentifierDeclType	Memento_BlkDetails *		7506945	0					
ANR	7506951	Identifier	details		7506945	1					
ANR	7506952	AssignmentExpression	* details = head -> details		7506945	2		=			
ANR	7506953	Identifier	details		7506945	0					
ANR	7506954	PtrMemberAccess	head -> details		7506945	1					
ANR	7506955	Identifier	head		7506945	0					
ANR	7506956	Identifier	details		7506945	1					
ANR	7506957	WhileStatement	while ( details )		7506945	1					
ANR	7506958	Condition	details	1110:11:32121:32127	7506945	0	True				
ANR	7506959	Identifier	details		7506945	0					
ANR	7506960	CompoundStatement		7:8:108:148	7506945	1					
ANR	7506961	IdentifierDeclStatement	Memento_BlkDetails * next = details -> next ;	1112:8:32144:32184	7506945	0	True				
ANR	7506962	IdentifierDecl	* next = details -> next		7506945	0					
ANR	7506963	IdentifierDeclType	Memento_BlkDetails *		7506945	0					
ANR	7506964	Identifier	next		7506945	1					
ANR	7506965	AssignmentExpression	* next = details -> next		7506945	2		=			
ANR	7506966	Identifier	next		7506945	0					
ANR	7506967	PtrMemberAccess	details -> next		7506945	1					
ANR	7506968	Identifier	details		7506945	0					
ANR	7506969	Identifier	next		7506945	1					
ANR	7506970	ExpressionStatement	MEMENTO_UNDERLYING_FREE ( details )	1113:8:32194:32226	7506945	1	True				
ANR	7506971	CallExpression	MEMENTO_UNDERLYING_FREE ( details )		7506945	0					
ANR	7506972	Callee	MEMENTO_UNDERLYING_FREE		7506945	0					
ANR	7506973	Identifier	MEMENTO_UNDERLYING_FREE		7506945	0					
ANR	7506974	ArgumentList	details		7506945	1					
ANR	7506975	Argument	details		7506945	0					
ANR	7506976	Identifier	details		7506945	0					
ANR	7506977	ExpressionStatement	details = next	1114:8:32236:32250	7506945	2	True				
ANR	7506978	AssignmentExpression	details = next		7506945	0		=			
ANR	7506979	Identifier	details		7506945	0					
ANR	7506980	Identifier	next		7506945	1					
ANR	7506981	ExpressionStatement	MEMENTO_UNDERLYING_FREE ( head )	1117:4:32269:32298	7506945	2	True				
ANR	7506982	CallExpression	MEMENTO_UNDERLYING_FREE ( head )		7506945	0					
ANR	7506983	Callee	MEMENTO_UNDERLYING_FREE		7506945	0					
ANR	7506984	Identifier	MEMENTO_UNDERLYING_FREE		7506945	0					
ANR	7506985	ArgumentList	head		7506945	1					
ANR	7506986	Argument	head		7506945	0					
ANR	7506987	Identifier	head		7506945	0					
ANR	7506988	ReturnType	static void		7506945	1					
ANR	7506989	Identifier	free_block		7506945	2					
ANR	7506990	ParameterList	Memento_BlkHeader * head		7506945	3					
ANR	7506991	Parameter	Memento_BlkHeader * head	1105:23:32010:32032	7506945	0	True				
ANR	7506992	ParameterType	Memento_BlkHeader *		7506945	0					
ANR	7506993	Identifier	head		7506945	1					
ANR	7506994	CFGEntryNode	ENTRY		7506945		True				
ANR	7506995	CFGExitNode	EXIT		7506945		True				
ANR	7506996	Symbol	head		7506945						
ANR	7506997	Symbol	next		7506945						
ANR	7506998	Symbol	* details		7506945						
ANR	7506999	Symbol	details -> next		7506945						
ANR	7507000	Symbol	* head		7506945						
ANR	7507001	Symbol	details		7506945						
ANR	7507002	Symbol	head -> details		7506945						
ANR	7507003	Function	Memento_Internal_makeSpace	1120:0:32303:33114							
ANR	7507004	FunctionDef	Memento_Internal_makeSpace (size_t space)		7507003	0					
ANR	7507005	CompoundStatement		1121:0:32355:33114	7507003	0					
ANR	7507006	IfStatement	if ( space > MEMENTO_FREELIST_MAX_SINGLE_BLOCK )		7507003	0					
ANR	7507007	Condition	space > MEMENTO_FREELIST_MAX_SINGLE_BLOCK	1123:8:32419:32459	7507003	0	True				
ANR	7507008	RelationalExpression	space > MEMENTO_FREELIST_MAX_SINGLE_BLOCK		7507003	0		>			
ANR	7507009	Identifier	space		7507003	0					
ANR	7507010	Identifier	MEMENTO_FREELIST_MAX_SINGLE_BLOCK		7507003	1					
ANR	7507011	ReturnStatement	return 0 ;	1124:8:32470:32478	7507003	1	True				
ANR	7507012	PrimaryExpression	0		7507003	0					
ANR	7507013	ExpressionStatement	memento . freeListSize += space	1126:4:32518:32547	7507003	1	True				
ANR	7507014	AssignmentExpression	memento . freeListSize += space		7507003	0		+=			
ANR	7507015	MemberAccess	memento . freeListSize		7507003	0					
ANR	7507016	Identifier	memento		7507003	0					
ANR	7507017	Identifier	freeListSize		7507003	1					
ANR	7507018	Identifier	space		7507003	1					
ANR	7507019	WhileStatement	while ( memento . freeListSize > MEMENTO_FREELIST_MAX )		7507003	2					
ANR	7507020	Condition	memento . freeListSize > MEMENTO_FREELIST_MAX	1128:11:32614:32656	7507003	0	True				
ANR	7507021	RelationalExpression	memento . freeListSize > MEMENTO_FREELIST_MAX		7507003	0		>			
ANR	7507022	MemberAccess	memento . freeListSize		7507003	0					
ANR	7507023	Identifier	memento		7507003	0					
ANR	7507024	Identifier	freeListSize		7507003	1					
ANR	7507025	Identifier	MEMENTO_FREELIST_MAX		7507003	1					
ANR	7507026	CompoundStatement		9:8:313:356	7507003	1					
ANR	7507027	IdentifierDeclStatement	Memento_BlkHeader * head = memento . free . head ;	1129:8:32669:32712	7507003	0	True				
ANR	7507028	IdentifierDecl	* head = memento . free . head		7507003	0					
ANR	7507029	IdentifierDeclType	Memento_BlkHeader *		7507003	0					
ANR	7507030	Identifier	head		7507003	1					
ANR	7507031	AssignmentExpression	* head = memento . free . head		7507003	2		=			
ANR	7507032	Identifier	head		7507003	0					
ANR	7507033	MemberAccess	memento . free . head		7507003	1					
ANR	7507034	MemberAccess	memento . free		7507003	0					
ANR	7507035	Identifier	memento		7507003	0					
ANR	7507036	Identifier	free		7507003	1					
ANR	7507037	Identifier	head		7507003	1					
ANR	7507038	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( * head ) )"	1130:8:32722:32768	7507003	1	True				
ANR	7507039	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( * head ) )"		7507003	0					
ANR	7507040	Callee	VALGRIND_MAKE_MEM_DEFINED		7507003	0					
ANR	7507041	Identifier	VALGRIND_MAKE_MEM_DEFINED		7507003	0					
ANR	7507042	ArgumentList	head		7507003	1					
ANR	7507043	Argument	head		7507003	0					
ANR	7507044	Identifier	head		7507003	0					
ANR	7507045	Argument	sizeof ( * head )		7507003	1					
ANR	7507046	SizeofExpression	sizeof ( * head )		7507003	0					
ANR	7507047	Sizeof	sizeof		7507003	0					
ANR	7507048	UnaryOperationExpression	* head		7507003	1					
ANR	7507049	UnaryOperator	*		7507003	0					
ANR	7507050	Identifier	head		7507003	1					
ANR	7507051	ExpressionStatement	memento . free . head = head -> next	1131:8:32778:32808	7507003	2	True				
ANR	7507052	AssignmentExpression	memento . free . head = head -> next		7507003	0		=			
ANR	7507053	MemberAccess	memento . free . head		7507003	0					
ANR	7507054	MemberAccess	memento . free		7507003	0					
ANR	7507055	Identifier	memento		7507003	0					
ANR	7507056	Identifier	free		7507003	1					
ANR	7507057	Identifier	head		7507003	1					
ANR	7507058	PtrMemberAccess	head -> next		7507003	1					
ANR	7507059	Identifier	head		7507003	0					
ANR	7507060	Identifier	next		7507003	1					
ANR	7507061	ExpressionStatement	memento . freeListSize -= MEMBLK_SIZE ( head -> rawsize )	1132:8:32818:32868	7507003	3	True				
ANR	7507062	AssignmentExpression	memento . freeListSize -= MEMBLK_SIZE ( head -> rawsize )		7507003	0		-=			
ANR	7507063	MemberAccess	memento . freeListSize		7507003	0					
ANR	7507064	Identifier	memento		7507003	0					
ANR	7507065	Identifier	freeListSize		7507003	1					
ANR	7507066	CallExpression	MEMBLK_SIZE ( head -> rawsize )		7507003	1					
ANR	7507067	Callee	MEMBLK_SIZE		7507003	0					
ANR	7507068	Identifier	MEMBLK_SIZE		7507003	0					
ANR	7507069	ArgumentList	head -> rawsize		7507003	1					
ANR	7507070	Argument	head -> rawsize		7507003	0					
ANR	7507071	PtrMemberAccess	head -> rawsize		7507003	0					
ANR	7507072	Identifier	head		7507003	0					
ANR	7507073	Identifier	rawsize		7507003	1					
ANR	7507074	ExpressionStatement	free_block ( head )	1133:8:32878:32894	7507003	4	True				
ANR	7507075	CallExpression	free_block ( head )		7507003	0					
ANR	7507076	Callee	free_block		7507003	0					
ANR	7507077	Identifier	free_block		7507003	0					
ANR	7507078	ArgumentList	head		7507003	1					
ANR	7507079	Argument	head		7507003	0					
ANR	7507080	Identifier	head		7507003	0					
ANR	7507081	IfStatement	if ( memento . free . head == NULL )		7507003	3					
ANR	7507082	Condition	memento . free . head == NULL	1137:8:33039:33063	7507003	0	True				
ANR	7507083	EqualityExpression	memento . free . head == NULL		7507003	0		==			
ANR	7507084	MemberAccess	memento . free . head		7507003	0					
ANR	7507085	MemberAccess	memento . free		7507003	0					
ANR	7507086	Identifier	memento		7507003	0					
ANR	7507087	Identifier	free		7507003	1					
ANR	7507088	Identifier	head		7507003	1					
ANR	7507089	Identifier	NULL		7507003	1					
ANR	7507090	ExpressionStatement	memento . free . tail = NULL	1138:8:33074:33098	7507003	1	True				
ANR	7507091	AssignmentExpression	memento . free . tail = NULL		7507003	0		=			
ANR	7507092	MemberAccess	memento . free . tail		7507003	0					
ANR	7507093	MemberAccess	memento . free		7507003	0					
ANR	7507094	Identifier	memento		7507003	0					
ANR	7507095	Identifier	free		7507003	1					
ANR	7507096	Identifier	tail		7507003	1					
ANR	7507097	Identifier	NULL		7507003	1					
ANR	7507098	ReturnStatement	return 1 ;	1139:4:33104:33112	7507003	4	True				
ANR	7507099	PrimaryExpression	1		7507003	0					
ANR	7507100	ReturnType	static int		7507003	1					
ANR	7507101	Identifier	Memento_Internal_makeSpace		7507003	2					
ANR	7507102	ParameterList	size_t space		7507003	3					
ANR	7507103	Parameter	size_t space	1120:38:32341:32352	7507003	0	True				
ANR	7507104	ParameterType	size_t		7507003	0					
ANR	7507105	Identifier	space		7507003	1					
ANR	7507106	CFGEntryNode	ENTRY		7507003		True				
ANR	7507107	CFGExitNode	EXIT		7507003		True				
ANR	7507108	Symbol	NULL		7507003						
ANR	7507109	Symbol	MEMENTO_FREELIST_MAX_SINGLE_BLOCK		7507003						
ANR	7507110	Symbol	memento . freeListSize		7507003						
ANR	7507111	Symbol	memento . free . head		7507003						
ANR	7507112	Symbol	memento		7507003						
ANR	7507113	Symbol	* head		7507003						
ANR	7507114	Symbol	space		7507003						
ANR	7507115	Symbol	memento . free		7507003						
ANR	7507116	Symbol	head -> rawsize		7507003						
ANR	7507117	Symbol	MEMENTO_FREELIST_MAX		7507003						
ANR	7507118	Symbol	head		7507003						
ANR	7507119	Symbol	memento . free . tail		7507003						
ANR	7507120	Symbol	head -> next		7507003						
ANR	7507121	Symbol	MEMBLK_SIZE		7507003						
ANR	7507122	Function	Memento_appBlocks	1142:0:33117:33959							
ANR	7507123	FunctionDef	"Memento_appBlocks (Memento_Blocks * blks , int ( * app ) ( Memento_BlkHeader * , void * ) , void * arg)"		7507122	0					
ANR	7507124	CompoundStatement		1146:0:33352:33959	7507122	0					
ANR	7507125	IdentifierDeclStatement	Memento_BlkHeader * head = blks -> head ;	1147:4:33358:33394	7507122	0	True				
ANR	7507126	IdentifierDecl	* head = blks -> head		7507122	0					
ANR	7507127	IdentifierDeclType	Memento_BlkHeader *		7507122	0					
ANR	7507128	Identifier	head		7507122	1					
ANR	7507129	AssignmentExpression	* head = blks -> head		7507122	2		=			
ANR	7507130	Identifier	head		7507122	0					
ANR	7507131	PtrMemberAccess	blks -> head		7507122	1					
ANR	7507132	Identifier	blks		7507122	0					
ANR	7507133	Identifier	head		7507122	1					
ANR	7507134	IdentifierDeclStatement	Memento_BlkHeader * next ;	1148:4:33400:33423	7507122	1	True				
ANR	7507135	IdentifierDecl	* next		7507122	0					
ANR	7507136	IdentifierDeclType	Memento_BlkHeader *		7507122	0					
ANR	7507137	Identifier	next		7507122	1					
ANR	7507138	IdentifierDeclStatement	int result ;	1149:4:33429:33454	7507122	2	True				
ANR	7507139	IdentifierDecl	result		7507122	0					
ANR	7507140	IdentifierDeclType	int		7507122	0					
ANR	7507141	Identifier	result		7507122	1					
ANR	7507142	WhileStatement	while ( head )		7507122	3					
ANR	7507143	Condition	head	1150:11:33467:33470	7507122	0	True				
ANR	7507144	Identifier	head		7507122	0					
ANR	7507145	CompoundStatement		5:17:120:120	7507122	1					
ANR	7507146	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( Memento_BlkHeader ) )"	1151:8:33483:33541	7507122	0	True				
ANR	7507147	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( Memento_BlkHeader ) )"		7507122	0					
ANR	7507148	Callee	VALGRIND_MAKE_MEM_DEFINED		7507122	0					
ANR	7507149	Identifier	VALGRIND_MAKE_MEM_DEFINED		7507122	0					
ANR	7507150	ArgumentList	head		7507122	1					
ANR	7507151	Argument	head		7507122	0					
ANR	7507152	Identifier	head		7507122	0					
ANR	7507153	Argument	sizeof ( Memento_BlkHeader )		7507122	1					
ANR	7507154	SizeofExpression	sizeof ( Memento_BlkHeader )		7507122	0					
ANR	7507155	Sizeof	sizeof		7507122	0					
ANR	7507156	SizeofOperand	Memento_BlkHeader		7507122	1					
ANR	7507157	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_TOBLK ( head ) , head -> rawsize + Memento_PostSize )"	1152:8:33551:33664	7507122	1	True				
ANR	7507158	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_TOBLK ( head ) , head -> rawsize + Memento_PostSize )"		7507122	0					
ANR	7507159	Callee	VALGRIND_MAKE_MEM_DEFINED		7507122	0					
ANR	7507160	Identifier	VALGRIND_MAKE_MEM_DEFINED		7507122	0					
ANR	7507161	ArgumentList	MEMBLK_TOBLK ( head )		7507122	1					
ANR	7507162	Argument	MEMBLK_TOBLK ( head )		7507122	0					
ANR	7507163	CallExpression	MEMBLK_TOBLK ( head )		7507122	0					
ANR	7507164	Callee	MEMBLK_TOBLK		7507122	0					
ANR	7507165	Identifier	MEMBLK_TOBLK		7507122	0					
ANR	7507166	ArgumentList	head		7507122	1					
ANR	7507167	Argument	head		7507122	0					
ANR	7507168	Identifier	head		7507122	0					
ANR	7507169	Argument	head -> rawsize + Memento_PostSize		7507122	1					
ANR	7507170	AdditiveExpression	head -> rawsize + Memento_PostSize		7507122	0		+			
ANR	7507171	PtrMemberAccess	head -> rawsize		7507122	0					
ANR	7507172	Identifier	head		7507122	0					
ANR	7507173	Identifier	rawsize		7507122	1					
ANR	7507174	Identifier	Memento_PostSize		7507122	1					
ANR	7507175	ExpressionStatement	"result = app ( head , arg )"	1154:8:33674:33697	7507122	2	True				
ANR	7507176	AssignmentExpression	"result = app ( head , arg )"		7507122	0		=			
ANR	7507177	Identifier	result		7507122	0					
ANR	7507178	CallExpression	"app ( head , arg )"		7507122	1					
ANR	7507179	Callee	app		7507122	0					
ANR	7507180	Identifier	app		7507122	0					
ANR	7507181	ArgumentList	head		7507122	1					
ANR	7507182	Argument	head		7507122	0					
ANR	7507183	Identifier	head		7507122	0					
ANR	7507184	Argument	arg		7507122	1					
ANR	7507185	Identifier	arg		7507122	0					
ANR	7507186	ExpressionStatement	next = head -> next	1155:8:33707:33724	7507122	3	True				
ANR	7507187	AssignmentExpression	next = head -> next		7507122	0		=			
ANR	7507188	Identifier	next		7507122	0					
ANR	7507189	PtrMemberAccess	head -> next		7507122	1					
ANR	7507190	Identifier	head		7507122	0					
ANR	7507191	Identifier	next		7507122	1					
ANR	7507192	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( head ) , Memento_PostSize )"	1156:8:33734:33800	7507122	4	True				
ANR	7507193	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( head ) , Memento_PostSize )"		7507122	0					
ANR	7507194	Callee	VALGRIND_MAKE_MEM_NOACCESS		7507122	0					
ANR	7507195	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7507122	0					
ANR	7507196	ArgumentList	MEMBLK_POSTPTR ( head )		7507122	1					
ANR	7507197	Argument	MEMBLK_POSTPTR ( head )		7507122	0					
ANR	7507198	CallExpression	MEMBLK_POSTPTR ( head )		7507122	0					
ANR	7507199	Callee	MEMBLK_POSTPTR		7507122	0					
ANR	7507200	Identifier	MEMBLK_POSTPTR		7507122	0					
ANR	7507201	ArgumentList	head		7507122	1					
ANR	7507202	Argument	head		7507122	0					
ANR	7507203	Identifier	head		7507122	0					
ANR	7507204	Argument	Memento_PostSize		7507122	1					
ANR	7507205	Identifier	Memento_PostSize		7507122	0					
ANR	7507206	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( head , sizeof ( Memento_BlkHeader ) )"	1157:8:33810:33869	7507122	5	True				
ANR	7507207	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( head , sizeof ( Memento_BlkHeader ) )"		7507122	0					
ANR	7507208	Callee	VALGRIND_MAKE_MEM_NOACCESS		7507122	0					
ANR	7507209	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7507122	0					
ANR	7507210	ArgumentList	head		7507122	1					
ANR	7507211	Argument	head		7507122	0					
ANR	7507212	Identifier	head		7507122	0					
ANR	7507213	Argument	sizeof ( Memento_BlkHeader )		7507122	1					
ANR	7507214	SizeofExpression	sizeof ( Memento_BlkHeader )		7507122	0					
ANR	7507215	Sizeof	sizeof		7507122	0					
ANR	7507216	SizeofOperand	Memento_BlkHeader		7507122	1					
ANR	7507217	IfStatement	if ( result )		7507122	6					
ANR	7507218	Condition	result	1158:12:33883:33888	7507122	0	True				
ANR	7507219	Identifier	result		7507122	0					
ANR	7507220	ReturnStatement	return result ;	1159:12:33903:33916	7507122	1	True				
ANR	7507221	Identifier	result		7507122	0					
ANR	7507222	ExpressionStatement	head = next	1160:8:33926:33937	7507122	7	True				
ANR	7507223	AssignmentExpression	head = next		7507122	0		=			
ANR	7507224	Identifier	head		7507122	0					
ANR	7507225	Identifier	next		7507122	1					
ANR	7507226	ReturnStatement	return 0 ;	1162:4:33949:33957	7507122	4	True				
ANR	7507227	PrimaryExpression	0		7507122	0					
ANR	7507228	ReturnType	static int		7507122	1					
ANR	7507229	Identifier	Memento_appBlocks		7507122	2					
ANR	7507230	ParameterList	"Memento_Blocks * blks , int ( * app ) ( Memento_BlkHeader * , void * ) , void * arg"		7507122	3					
ANR	7507231	Parameter	Memento_Blocks * blks	1142:29:33146:33165	7507122	0	True				
ANR	7507232	ParameterType	Memento_Blocks *		7507122	0					
ANR	7507233	Identifier	blks		7507122	1					
ANR	7507234	Parameter	"int ( * app ) ( Memento_BlkHeader * , void * )"	1143:29:33197:33299	7507122	1	True				
ANR	7507235	ParameterType	"(( Memento_BlkHeader * , void * ) int) *"		7507122	0					
ANR	7507236	Identifier	app		7507122	1					
ANR	7507237	Parameter	void * arg	1145:29:33331:33349	7507122	2	True				
ANR	7507238	ParameterType	void *		7507122	0					
ANR	7507239	Identifier	arg		7507122	1					
ANR	7507240	CFGEntryNode	ENTRY		7507122		True				
ANR	7507241	CFGExitNode	EXIT		7507122		True				
ANR	7507242	Symbol	app		7507122						
ANR	7507243	Symbol	next		7507122						
ANR	7507244	Symbol	* head		7507122						
ANR	7507245	Symbol	blks -> head		7507122						
ANR	7507246	Symbol	head -> rawsize		7507122						
ANR	7507247	Symbol	MEMBLK_TOBLK		7507122						
ANR	7507248	Symbol	head		7507122						
ANR	7507249	Symbol	result		7507122						
ANR	7507250	Symbol	* blks		7507122						
ANR	7507251	Symbol	MEMBLK_POSTPTR		7507122						
ANR	7507252	Symbol	arg		7507122						
ANR	7507253	Symbol	head -> next		7507122						
ANR	7507254	Symbol	Memento_PostSize		7507122						
ANR	7507255	Symbol	blks		7507122						
ANR	7507256	Function	Memento_appBlockUser	1167:0:34037:35116							
ANR	7507257	FunctionDef	"Memento_appBlockUser (Memento_Blocks * blks , int ( * app ) ( Memento_BlkHeader * , void * ) , void * arg , Memento_BlkHeader * b)"		7507256	0					
ANR	7507258	CompoundStatement		1172:0:34350:35116	7507256	0					
ANR	7507259	IdentifierDeclStatement	Memento_BlkHeader * head = blks -> head ;	1173:4:34356:34392	7507256	0	True				
ANR	7507260	IdentifierDecl	* head = blks -> head		7507256	0					
ANR	7507261	IdentifierDeclType	Memento_BlkHeader *		7507256	0					
ANR	7507262	Identifier	head		7507256	1					
ANR	7507263	AssignmentExpression	* head = blks -> head		7507256	2		=			
ANR	7507264	Identifier	head		7507256	0					
ANR	7507265	PtrMemberAccess	blks -> head		7507256	1					
ANR	7507266	Identifier	blks		7507256	0					
ANR	7507267	Identifier	head		7507256	1					
ANR	7507268	IdentifierDeclStatement	Memento_BlkHeader * next ;	1174:4:34398:34421	7507256	1	True				
ANR	7507269	IdentifierDecl	* next		7507256	0					
ANR	7507270	IdentifierDeclType	Memento_BlkHeader *		7507256	0					
ANR	7507271	Identifier	next		7507256	1					
ANR	7507272	IdentifierDeclStatement	int result ;	1175:4:34427:34452	7507256	2	True				
ANR	7507273	IdentifierDecl	result		7507256	0					
ANR	7507274	IdentifierDeclType	int		7507256	0					
ANR	7507275	Identifier	result		7507256	1					
ANR	7507276	WhileStatement	while ( head && head != b )		7507256	3					
ANR	7507277	Condition	head && head != b	1176:11:34465:34481	7507256	0	True				
ANR	7507278	AndExpression	head && head != b		7507256	0		&&			
ANR	7507279	Identifier	head		7507256	0					
ANR	7507280	EqualityExpression	head != b		7507256	1		!=			
ANR	7507281	Identifier	head		7507256	0					
ANR	7507282	Identifier	b		7507256	1					
ANR	7507283	CompoundStatement		5:30:133:133	7507256	1					
ANR	7507284	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( Memento_BlkHeader ) )"	1177:8:34494:34552	7507256	0	True				
ANR	7507285	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( Memento_BlkHeader ) )"		7507256	0					
ANR	7507286	Callee	VALGRIND_MAKE_MEM_DEFINED		7507256	0					
ANR	7507287	Identifier	VALGRIND_MAKE_MEM_DEFINED		7507256	0					
ANR	7507288	ArgumentList	head		7507256	1					
ANR	7507289	Argument	head		7507256	0					
ANR	7507290	Identifier	head		7507256	0					
ANR	7507291	Argument	sizeof ( Memento_BlkHeader )		7507256	1					
ANR	7507292	SizeofExpression	sizeof ( Memento_BlkHeader )		7507256	0					
ANR	7507293	Sizeof	sizeof		7507256	0					
ANR	7507294	SizeofOperand	Memento_BlkHeader		7507256	1					
ANR	7507295	ExpressionStatement	next = head -> next	1178:8:34562:34579	7507256	1	True				
ANR	7507296	AssignmentExpression	next = head -> next		7507256	0		=			
ANR	7507297	Identifier	next		7507256	0					
ANR	7507298	PtrMemberAccess	head -> next		7507256	1					
ANR	7507299	Identifier	head		7507256	0					
ANR	7507300	Identifier	next		7507256	1					
ANR	7507301	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( head ) , Memento_PostSize )"	1179:7:34588:34654	7507256	2	True				
ANR	7507302	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( head ) , Memento_PostSize )"		7507256	0					
ANR	7507303	Callee	VALGRIND_MAKE_MEM_NOACCESS		7507256	0					
ANR	7507304	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7507256	0					
ANR	7507305	ArgumentList	MEMBLK_POSTPTR ( head )		7507256	1					
ANR	7507306	Argument	MEMBLK_POSTPTR ( head )		7507256	0					
ANR	7507307	CallExpression	MEMBLK_POSTPTR ( head )		7507256	0					
ANR	7507308	Callee	MEMBLK_POSTPTR		7507256	0					
ANR	7507309	Identifier	MEMBLK_POSTPTR		7507256	0					
ANR	7507310	ArgumentList	head		7507256	1					
ANR	7507311	Argument	head		7507256	0					
ANR	7507312	Identifier	head		7507256	0					
ANR	7507313	Argument	Memento_PostSize		7507256	1					
ANR	7507314	Identifier	Memento_PostSize		7507256	0					
ANR	7507315	ExpressionStatement	head = next	1180:8:34664:34675	7507256	3	True				
ANR	7507316	AssignmentExpression	head = next		7507256	0		=			
ANR	7507317	Identifier	head		7507256	0					
ANR	7507318	Identifier	next		7507256	1					
ANR	7507319	IfStatement	if ( head == b )		7507256	4					
ANR	7507320	Condition	head == b	1182:8:34691:34699	7507256	0	True				
ANR	7507321	EqualityExpression	head == b		7507256	0		==			
ANR	7507322	Identifier	head		7507256	0					
ANR	7507323	Identifier	b		7507256	1					
ANR	7507324	CompoundStatement		11:19:351:351	7507256	1					
ANR	7507325	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( Memento_BlkHeader ) )"	1183:8:34712:34770	7507256	0	True				
ANR	7507326	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( Memento_BlkHeader ) )"		7507256	0					
ANR	7507327	Callee	VALGRIND_MAKE_MEM_DEFINED		7507256	0					
ANR	7507328	Identifier	VALGRIND_MAKE_MEM_DEFINED		7507256	0					
ANR	7507329	ArgumentList	head		7507256	1					
ANR	7507330	Argument	head		7507256	0					
ANR	7507331	Identifier	head		7507256	0					
ANR	7507332	Argument	sizeof ( Memento_BlkHeader )		7507256	1					
ANR	7507333	SizeofExpression	sizeof ( Memento_BlkHeader )		7507256	0					
ANR	7507334	Sizeof	sizeof		7507256	0					
ANR	7507335	SizeofOperand	Memento_BlkHeader		7507256	1					
ANR	7507336	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_TOBLK ( head ) , head -> rawsize + Memento_PostSize )"	1184:8:34780:34893	7507256	1	True				
ANR	7507337	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_TOBLK ( head ) , head -> rawsize + Memento_PostSize )"		7507256	0					
ANR	7507338	Callee	VALGRIND_MAKE_MEM_DEFINED		7507256	0					
ANR	7507339	Identifier	VALGRIND_MAKE_MEM_DEFINED		7507256	0					
ANR	7507340	ArgumentList	MEMBLK_TOBLK ( head )		7507256	1					
ANR	7507341	Argument	MEMBLK_TOBLK ( head )		7507256	0					
ANR	7507342	CallExpression	MEMBLK_TOBLK ( head )		7507256	0					
ANR	7507343	Callee	MEMBLK_TOBLK		7507256	0					
ANR	7507344	Identifier	MEMBLK_TOBLK		7507256	0					
ANR	7507345	ArgumentList	head		7507256	1					
ANR	7507346	Argument	head		7507256	0					
ANR	7507347	Identifier	head		7507256	0					
ANR	7507348	Argument	head -> rawsize + Memento_PostSize		7507256	1					
ANR	7507349	AdditiveExpression	head -> rawsize + Memento_PostSize		7507256	0		+			
ANR	7507350	PtrMemberAccess	head -> rawsize		7507256	0					
ANR	7507351	Identifier	head		7507256	0					
ANR	7507352	Identifier	rawsize		7507256	1					
ANR	7507353	Identifier	Memento_PostSize		7507256	1					
ANR	7507354	ExpressionStatement	"result = app ( head , arg )"	1186:8:34903:34926	7507256	2	True				
ANR	7507355	AssignmentExpression	"result = app ( head , arg )"		7507256	0		=			
ANR	7507356	Identifier	result		7507256	0					
ANR	7507357	CallExpression	"app ( head , arg )"		7507256	1					
ANR	7507358	Callee	app		7507256	0					
ANR	7507359	Identifier	app		7507256	0					
ANR	7507360	ArgumentList	head		7507256	1					
ANR	7507361	Argument	head		7507256	0					
ANR	7507362	Identifier	head		7507256	0					
ANR	7507363	Argument	arg		7507256	1					
ANR	7507364	Identifier	arg		7507256	0					
ANR	7507365	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( head ) , Memento_PostSize )"	1187:8:34936:35002	7507256	3	True				
ANR	7507366	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( head ) , Memento_PostSize )"		7507256	0					
ANR	7507367	Callee	VALGRIND_MAKE_MEM_NOACCESS		7507256	0					
ANR	7507368	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7507256	0					
ANR	7507369	ArgumentList	MEMBLK_POSTPTR ( head )		7507256	1					
ANR	7507370	Argument	MEMBLK_POSTPTR ( head )		7507256	0					
ANR	7507371	CallExpression	MEMBLK_POSTPTR ( head )		7507256	0					
ANR	7507372	Callee	MEMBLK_POSTPTR		7507256	0					
ANR	7507373	Identifier	MEMBLK_POSTPTR		7507256	0					
ANR	7507374	ArgumentList	head		7507256	1					
ANR	7507375	Argument	head		7507256	0					
ANR	7507376	Identifier	head		7507256	0					
ANR	7507377	Argument	Memento_PostSize		7507256	1					
ANR	7507378	Identifier	Memento_PostSize		7507256	0					
ANR	7507379	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( head , sizeof ( Memento_BlkHeader ) )"	1188:8:35012:35071	7507256	4	True				
ANR	7507380	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( head , sizeof ( Memento_BlkHeader ) )"		7507256	0					
ANR	7507381	Callee	VALGRIND_MAKE_MEM_NOACCESS		7507256	0					
ANR	7507382	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7507256	0					
ANR	7507383	ArgumentList	head		7507256	1					
ANR	7507384	Argument	head		7507256	0					
ANR	7507385	Identifier	head		7507256	0					
ANR	7507386	Argument	sizeof ( Memento_BlkHeader )		7507256	1					
ANR	7507387	SizeofExpression	sizeof ( Memento_BlkHeader )		7507256	0					
ANR	7507388	Sizeof	sizeof		7507256	0					
ANR	7507389	SizeofOperand	Memento_BlkHeader		7507256	1					
ANR	7507390	ReturnStatement	return result ;	1189:8:35081:35094	7507256	5	True				
ANR	7507391	Identifier	result		7507256	0					
ANR	7507392	ReturnStatement	return 0 ;	1191:4:35106:35114	7507256	5	True				
ANR	7507393	PrimaryExpression	0		7507256	0					
ANR	7507394	ReturnType	static int		7507256	1					
ANR	7507395	Identifier	Memento_appBlockUser		7507256	2					
ANR	7507396	ParameterList	"Memento_Blocks * blks , int ( * app ) ( Memento_BlkHeader * , void * ) , void * arg , Memento_BlkHeader * b"		7507256	3					
ANR	7507397	Parameter	Memento_Blocks * blks	1167:32:34069:34091	7507256	0	True				
ANR	7507398	ParameterType	Memento_Blocks *		7507256	0					
ANR	7507399	Identifier	blks		7507256	1					
ANR	7507400	Parameter	"int ( * app ) ( Memento_BlkHeader * , void * )"	1168:32:34126:34237	7507256	1	True				
ANR	7507401	ParameterType	"(( Memento_BlkHeader * , void * ) int) *"		7507256	0					
ANR	7507402	Identifier	app		7507256	1					
ANR	7507403	Parameter	void * arg	1170:32:34272:34293	7507256	2	True				
ANR	7507404	ParameterType	void *		7507256	0					
ANR	7507405	Identifier	arg		7507256	1					
ANR	7507406	Parameter	Memento_BlkHeader * b	1171:32:34328:34347	7507256	3	True				
ANR	7507407	ParameterType	Memento_BlkHeader *		7507256	0					
ANR	7507408	Identifier	b		7507256	1					
ANR	7507409	CFGEntryNode	ENTRY		7507256		True				
ANR	7507410	CFGExitNode	EXIT		7507256		True				
ANR	7507411	Symbol	app		7507256						
ANR	7507412	Symbol	next		7507256						
ANR	7507413	Symbol	b		7507256						
ANR	7507414	Symbol	* head		7507256						
ANR	7507415	Symbol	blks -> head		7507256						
ANR	7507416	Symbol	head -> rawsize		7507256						
ANR	7507417	Symbol	MEMBLK_TOBLK		7507256						
ANR	7507418	Symbol	head		7507256						
ANR	7507419	Symbol	result		7507256						
ANR	7507420	Symbol	* blks		7507256						
ANR	7507421	Symbol	MEMBLK_POSTPTR		7507256						
ANR	7507422	Symbol	arg		7507256						
ANR	7507423	Symbol	head -> next		7507256						
ANR	7507424	Symbol	Memento_PostSize		7507256						
ANR	7507425	Symbol	blks		7507256						
ANR	7507426	Function	Memento_appBlock	1194:0:35119:35776							
ANR	7507427	FunctionDef	"Memento_appBlock (Memento_Blocks * blks , int ( * app ) ( Memento_BlkHeader * , void * ) , void * arg , Memento_BlkHeader * b)"		7507426	0					
ANR	7507428	CompoundStatement		1199:0:35412:35776	7507426	0					
ANR	7507429	IdentifierDeclStatement	int result ;	1200:4:35418:35428	7507426	0	True				
ANR	7507430	IdentifierDecl	result		7507426	0					
ANR	7507431	IdentifierDeclType	int		7507426	0					
ANR	7507432	Identifier	result		7507426	1					
ANR	7507433	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( b , sizeof ( Memento_BlkHeader ) )"	1201:4:35434:35489	7507426	1	True				
ANR	7507434	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( b , sizeof ( Memento_BlkHeader ) )"		7507426	0					
ANR	7507435	Callee	VALGRIND_MAKE_MEM_DEFINED		7507426	0					
ANR	7507436	Identifier	VALGRIND_MAKE_MEM_DEFINED		7507426	0					
ANR	7507437	ArgumentList	b		7507426	1					
ANR	7507438	Argument	b		7507426	0					
ANR	7507439	Identifier	b		7507426	0					
ANR	7507440	Argument	sizeof ( Memento_BlkHeader )		7507426	1					
ANR	7507441	SizeofExpression	sizeof ( Memento_BlkHeader )		7507426	0					
ANR	7507442	Sizeof	sizeof		7507426	0					
ANR	7507443	SizeofOperand	Memento_BlkHeader		7507426	1					
ANR	7507444	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_TOBLK ( b ) , b -> rawsize + Memento_PostSize )"	1202:4:35495:35598	7507426	2	True				
ANR	7507445	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_TOBLK ( b ) , b -> rawsize + Memento_PostSize )"		7507426	0					
ANR	7507446	Callee	VALGRIND_MAKE_MEM_DEFINED		7507426	0					
ANR	7507447	Identifier	VALGRIND_MAKE_MEM_DEFINED		7507426	0					
ANR	7507448	ArgumentList	MEMBLK_TOBLK ( b )		7507426	1					
ANR	7507449	Argument	MEMBLK_TOBLK ( b )		7507426	0					
ANR	7507450	CallExpression	MEMBLK_TOBLK ( b )		7507426	0					
ANR	7507451	Callee	MEMBLK_TOBLK		7507426	0					
ANR	7507452	Identifier	MEMBLK_TOBLK		7507426	0					
ANR	7507453	ArgumentList	b		7507426	1					
ANR	7507454	Argument	b		7507426	0					
ANR	7507455	Identifier	b		7507426	0					
ANR	7507456	Argument	b -> rawsize + Memento_PostSize		7507426	1					
ANR	7507457	AdditiveExpression	b -> rawsize + Memento_PostSize		7507426	0		+			
ANR	7507458	PtrMemberAccess	b -> rawsize		7507426	0					
ANR	7507459	Identifier	b		7507426	0					
ANR	7507460	Identifier	rawsize		7507426	1					
ANR	7507461	Identifier	Memento_PostSize		7507426	1					
ANR	7507462	ExpressionStatement	"result = app ( b , arg )"	1204:4:35604:35624	7507426	3	True				
ANR	7507463	AssignmentExpression	"result = app ( b , arg )"		7507426	0		=			
ANR	7507464	Identifier	result		7507426	0					
ANR	7507465	CallExpression	"app ( b , arg )"		7507426	1					
ANR	7507466	Callee	app		7507426	0					
ANR	7507467	Identifier	app		7507426	0					
ANR	7507468	ArgumentList	b		7507426	1					
ANR	7507469	Argument	b		7507426	0					
ANR	7507470	Identifier	b		7507426	0					
ANR	7507471	Argument	arg		7507426	1					
ANR	7507472	Identifier	arg		7507426	0					
ANR	7507473	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( b ) , Memento_PostSize )"	1205:4:35630:35693	7507426	4	True				
ANR	7507474	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( b ) , Memento_PostSize )"		7507426	0					
ANR	7507475	Callee	VALGRIND_MAKE_MEM_NOACCESS		7507426	0					
ANR	7507476	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7507426	0					
ANR	7507477	ArgumentList	MEMBLK_POSTPTR ( b )		7507426	1					
ANR	7507478	Argument	MEMBLK_POSTPTR ( b )		7507426	0					
ANR	7507479	CallExpression	MEMBLK_POSTPTR ( b )		7507426	0					
ANR	7507480	Callee	MEMBLK_POSTPTR		7507426	0					
ANR	7507481	Identifier	MEMBLK_POSTPTR		7507426	0					
ANR	7507482	ArgumentList	b		7507426	1					
ANR	7507483	Argument	b		7507426	0					
ANR	7507484	Identifier	b		7507426	0					
ANR	7507485	Argument	Memento_PostSize		7507426	1					
ANR	7507486	Identifier	Memento_PostSize		7507426	0					
ANR	7507487	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( b , sizeof ( Memento_BlkHeader ) )"	1206:4:35699:35755	7507426	5	True				
ANR	7507488	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( b , sizeof ( Memento_BlkHeader ) )"		7507426	0					
ANR	7507489	Callee	VALGRIND_MAKE_MEM_NOACCESS		7507426	0					
ANR	7507490	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7507426	0					
ANR	7507491	ArgumentList	b		7507426	1					
ANR	7507492	Argument	b		7507426	0					
ANR	7507493	Identifier	b		7507426	0					
ANR	7507494	Argument	sizeof ( Memento_BlkHeader )		7507426	1					
ANR	7507495	SizeofExpression	sizeof ( Memento_BlkHeader )		7507426	0					
ANR	7507496	Sizeof	sizeof		7507426	0					
ANR	7507497	SizeofOperand	Memento_BlkHeader		7507426	1					
ANR	7507498	ReturnStatement	return result ;	1207:4:35761:35774	7507426	6	True				
ANR	7507499	Identifier	result		7507426	0					
ANR	7507500	ReturnType	static int		7507426	1					
ANR	7507501	Identifier	Memento_appBlock		7507426	2					
ANR	7507502	ParameterList	"Memento_Blocks * blks , int ( * app ) ( Memento_BlkHeader * , void * ) , void * arg , Memento_BlkHeader * b"		7507426	3					
ANR	7507503	Parameter	Memento_Blocks * blks	1194:28:35147:35169	7507426	0	True				
ANR	7507504	ParameterType	Memento_Blocks *		7507426	0					
ANR	7507505	Identifier	blks		7507426	1					
ANR	7507506	Parameter	"int ( * app ) ( Memento_BlkHeader * , void * )"	1195:28:35200:35307	7507426	1	True				
ANR	7507507	ParameterType	"(( Memento_BlkHeader * , void * ) int) *"		7507426	0					
ANR	7507508	Identifier	app		7507426	1					
ANR	7507509	Parameter	void * arg	1197:28:35338:35359	7507426	2	True				
ANR	7507510	ParameterType	void *		7507426	0					
ANR	7507511	Identifier	arg		7507426	1					
ANR	7507512	Parameter	Memento_BlkHeader * b	1198:28:35390:35409	7507426	3	True				
ANR	7507513	ParameterType	Memento_BlkHeader *		7507426	0					
ANR	7507514	Identifier	b		7507426	1					
ANR	7507515	CFGEntryNode	ENTRY		7507426		True				
ANR	7507516	CFGExitNode	EXIT		7507426		True				
ANR	7507517	Symbol	app		7507426						
ANR	7507518	Symbol	result		7507426						
ANR	7507519	Symbol	b -> rawsize		7507426						
ANR	7507520	Symbol	b		7507426						
ANR	7507521	Symbol	MEMBLK_POSTPTR		7507426						
ANR	7507522	Symbol	arg		7507426						
ANR	7507523	Symbol	Memento_PostSize		7507426						
ANR	7507524	Symbol	blks		7507426						
ANR	7507525	Symbol	* b		7507426						
ANR	7507526	Symbol	MEMBLK_TOBLK		7507426						
ANR	7507527	Function	showBlock	1211:0:35809:36125							
ANR	7507528	FunctionDef	"showBlock (Memento_BlkHeader * b , int space)"		7507527	0					
ANR	7507529	CompoundStatement		1212:0:35864:36125	7507527	0					
ANR	7507530	ExpressionStatement	"fprintf ( stderr , ""0x%p:(size=%d,num=%d)"" , MEMBLK_TOBLK ( b ) , ( int ) b -> rawsize , b -> sequence )"	1213:4:35870:35969	7507527	0	True				
ANR	7507531	CallExpression	"fprintf ( stderr , ""0x%p:(size=%d,num=%d)"" , MEMBLK_TOBLK ( b ) , ( int ) b -> rawsize , b -> sequence )"		7507527	0					
ANR	7507532	Callee	fprintf		7507527	0					
ANR	7507533	Identifier	fprintf		7507527	0					
ANR	7507534	ArgumentList	stderr		7507527	1					
ANR	7507535	Argument	stderr		7507527	0					
ANR	7507536	Identifier	stderr		7507527	0					
ANR	7507537	Argument	"""0x%p:(size=%d,num=%d)"""		7507527	1					
ANR	7507538	PrimaryExpression	"""0x%p:(size=%d,num=%d)"""		7507527	0					
ANR	7507539	Argument	MEMBLK_TOBLK ( b )		7507527	2					
ANR	7507540	CallExpression	MEMBLK_TOBLK ( b )		7507527	0					
ANR	7507541	Callee	MEMBLK_TOBLK		7507527	0					
ANR	7507542	Identifier	MEMBLK_TOBLK		7507527	0					
ANR	7507543	ArgumentList	b		7507527	1					
ANR	7507544	Argument	b		7507527	0					
ANR	7507545	Identifier	b		7507527	0					
ANR	7507546	Argument	( int ) b -> rawsize		7507527	3					
ANR	7507547	CastExpression	( int ) b -> rawsize		7507527	0					
ANR	7507548	CastTarget	int		7507527	0					
ANR	7507549	PtrMemberAccess	b -> rawsize		7507527	1					
ANR	7507550	Identifier	b		7507527	0					
ANR	7507551	Identifier	rawsize		7507527	1					
ANR	7507552	Argument	b -> sequence		7507527	4					
ANR	7507553	PtrMemberAccess	b -> sequence		7507527	0					
ANR	7507554	Identifier	b		7507527	0					
ANR	7507555	Identifier	sequence		7507527	1					
ANR	7507556	IfStatement	if ( b -> label )		7507527	1					
ANR	7507557	Condition	b -> label	1215:8:35979:35986	7507527	0	True				
ANR	7507558	PtrMemberAccess	b -> label		7507527	0					
ANR	7507559	Identifier	b		7507527	0					
ANR	7507560	Identifier	label		7507527	1					
ANR	7507561	ExpressionStatement	"fprintf ( stderr , ""%c(%s)"" , space , b -> label )"	1216:8:35997:36039	7507527	1	True				
ANR	7507562	CallExpression	"fprintf ( stderr , ""%c(%s)"" , space , b -> label )"		7507527	0					
ANR	7507563	Callee	fprintf		7507527	0					
ANR	7507564	Identifier	fprintf		7507527	0					
ANR	7507565	ArgumentList	stderr		7507527	1					
ANR	7507566	Argument	stderr		7507527	0					
ANR	7507567	Identifier	stderr		7507527	0					
ANR	7507568	Argument	"""%c(%s)"""		7507527	1					
ANR	7507569	PrimaryExpression	"""%c(%s)"""		7507527	0					
ANR	7507570	Argument	space		7507527	2					
ANR	7507571	Identifier	space		7507527	0					
ANR	7507572	Argument	b -> label		7507527	3					
ANR	7507573	PtrMemberAccess	b -> label		7507527	0					
ANR	7507574	Identifier	b		7507527	0					
ANR	7507575	Identifier	label		7507527	1					
ANR	7507576	IfStatement	if ( b -> flags & Memento_Flag_KnownLeak )		7507527	2					
ANR	7507577	Condition	b -> flags & Memento_Flag_KnownLeak	1217:8:36049:36081	7507527	0	True				
ANR	7507578	BitAndExpression	b -> flags & Memento_Flag_KnownLeak		7507527	0		&			
ANR	7507579	PtrMemberAccess	b -> flags		7507527	0					
ANR	7507580	Identifier	b		7507527	0					
ANR	7507581	Identifier	flags		7507527	1					
ANR	7507582	Identifier	Memento_Flag_KnownLeak		7507527	1					
ANR	7507583	ExpressionStatement	"fprintf ( stderr , ""(Known Leak)"" )"	1218:8:36092:36123	7507527	1	True				
ANR	7507584	CallExpression	"fprintf ( stderr , ""(Known Leak)"" )"		7507527	0					
ANR	7507585	Callee	fprintf		7507527	0					
ANR	7507586	Identifier	fprintf		7507527	0					
ANR	7507587	ArgumentList	stderr		7507527	1					
ANR	7507588	Argument	stderr		7507527	0					
ANR	7507589	Identifier	stderr		7507527	0					
ANR	7507590	Argument	"""(Known Leak)"""		7507527	1					
ANR	7507591	PrimaryExpression	"""(Known Leak)"""		7507527	0					
ANR	7507592	ReturnType	static void		7507527	1					
ANR	7507593	Identifier	showBlock		7507527	2					
ANR	7507594	ParameterList	"Memento_BlkHeader * b , int space"		7507527	3					
ANR	7507595	Parameter	Memento_BlkHeader * b	1211:22:35831:35850	7507527	0	True				
ANR	7507596	ParameterType	Memento_BlkHeader *		7507527	0					
ANR	7507597	Identifier	b		7507527	1					
ANR	7507598	Parameter	int space	1211:44:35853:35861	7507527	1	True				
ANR	7507599	ParameterType	int		7507527	0					
ANR	7507600	Identifier	space		7507527	1					
ANR	7507601	CFGEntryNode	ENTRY		7507527		True				
ANR	7507602	CFGExitNode	EXIT		7507527		True				
ANR	7507603	Symbol	b -> rawsize		7507527						
ANR	7507604	Symbol	b		7507527						
ANR	7507605	Symbol	Memento_Flag_KnownLeak		7507527						
ANR	7507606	Symbol	b -> sequence		7507527						
ANR	7507607	Symbol	b -> flags		7507527						
ANR	7507608	Symbol	stderr		7507527						
ANR	7507609	Symbol	* b		7507527						
ANR	7507610	Symbol	space		7507527						
ANR	7507611	Symbol	MEMBLK_TOBLK		7507527						
ANR	7507612	Symbol	b -> label		7507527						
ANR	7507613	Function	blockDisplay	1221:0:36128:36508							
ANR	7507614	FunctionDef	"blockDisplay (Memento_BlkHeader * b , int n)"		7507613	0					
ANR	7507615	CompoundStatement		1222:0:36182:36508	7507613	0					
ANR	7507616	ExpressionStatement	n ++	1223:4:36188:36191	7507613	0	True				
ANR	7507617	PostIncDecOperationExpression	n ++		7507613	0					
ANR	7507618	Identifier	n		7507613	0					
ANR	7507619	IncDec	++		7507613	1					
ANR	7507620	WhileStatement	while ( n > 40 )		7507613	1					
ANR	7507621	Condition	n > 40	1224:11:36204:36209	7507613	0	True				
ANR	7507622	RelationalExpression	n > 40		7507613	0		>			
ANR	7507623	Identifier	n		7507613	0					
ANR	7507624	PrimaryExpression	40		7507613	1					
ANR	7507625	CompoundStatement		4:4:33:33	7507613	1					
ANR	7507626	ExpressionStatement	"fprintf ( stderr , ""*"" )"	1226:12:36230:36250	7507613	0	True				
ANR	7507627	CallExpression	"fprintf ( stderr , ""*"" )"		7507613	0					
ANR	7507628	Callee	fprintf		7507613	0					
ANR	7507629	Identifier	fprintf		7507613	0					
ANR	7507630	ArgumentList	stderr		7507613	1					
ANR	7507631	Argument	stderr		7507613	0					
ANR	7507632	Identifier	stderr		7507613	0					
ANR	7507633	Argument	"""*"""		7507613	1					
ANR	7507634	PrimaryExpression	"""*"""		7507613	0					
ANR	7507635	ExpressionStatement	n -= 40	1227:12:36264:36271	7507613	1	True				
ANR	7507636	AssignmentExpression	n -= 40		7507613	0		-=			
ANR	7507637	Identifier	n		7507613	0					
ANR	7507638	PrimaryExpression	40		7507613	1					
ANR	7507639	WhileStatement	while ( n > 0 )		7507613	2					
ANR	7507640	Condition	n > 0	1229:10:36289:36293	7507613	0	True				
ANR	7507641	RelationalExpression	n > 0		7507613	0		>			
ANR	7507642	Identifier	n		7507613	0					
ANR	7507643	PrimaryExpression	0		7507613	1					
ANR	7507644	CompoundStatement		10:8:127:136	7507613	1					
ANR	7507645	IdentifierDeclStatement	int i = n ;	1231:8:36310:36319	7507613	0	True				
ANR	7507646	IdentifierDecl	i = n		7507613	0					
ANR	7507647	IdentifierDeclType	int		7507613	0					
ANR	7507648	Identifier	i		7507613	1					
ANR	7507649	AssignmentExpression	i = n		7507613	2		=			
ANR	7507650	Identifier	n		7507613	0					
ANR	7507651	Identifier	n		7507613	1					
ANR	7507652	IfStatement	if ( i > 32 )		7507613	1					
ANR	7507653	Condition	i > 32	1232:12:36333:36338	7507613	0	True				
ANR	7507654	RelationalExpression	i > 32		7507613	0		>			
ANR	7507655	Identifier	i		7507613	0					
ANR	7507656	PrimaryExpression	32		7507613	1					
ANR	7507657	ExpressionStatement	i = 32	1233:12:36353:36359	7507613	1	True				
ANR	7507658	AssignmentExpression	i = 32		7507613	0		=			
ANR	7507659	Identifier	i		7507613	0					
ANR	7507660	PrimaryExpression	32		7507613	1					
ANR	7507661	ExpressionStatement	n -= i	1234:8:36369:36375	7507613	2	True				
ANR	7507662	AssignmentExpression	n -= i		7507613	0		-=			
ANR	7507663	Identifier	n		7507613	0					
ANR	7507664	Identifier	i		7507613	1					
ANR	7507665	ExpressionStatement	"fprintf ( stderr , ""%s"" , & ""                                "" [ 32 - i ] )"	1235:8:36385:36449	7507613	3	True				
ANR	7507666	CallExpression	"fprintf ( stderr , ""%s"" , & ""                                "" [ 32 - i ] )"		7507613	0					
ANR	7507667	Callee	fprintf		7507613	0					
ANR	7507668	Identifier	fprintf		7507613	0					
ANR	7507669	ArgumentList	stderr		7507613	1					
ANR	7507670	Argument	stderr		7507613	0					
ANR	7507671	Identifier	stderr		7507613	0					
ANR	7507672	Argument	"""%s"""		7507613	1					
ANR	7507673	PrimaryExpression	"""%s"""		7507613	0					
ANR	7507674	Argument	"& ""                                "" [ 32 - i ]"		7507613	2					
ANR	7507675	UnaryOperationExpression	"& ""                                "" [ 32 - i ]"		7507613	0					
ANR	7507676	UnaryOperator	&		7507613	0					
ANR	7507677	ArrayIndexing	"""                                "" [ 32 - i ]"		7507613	1					
ANR	7507678	PrimaryExpression	"""                                """		7507613	0					
ANR	7507679	AdditiveExpression	32 - i		7507613	1		-			
ANR	7507680	PrimaryExpression	32		7507613	0					
ANR	7507681	Identifier	i		7507613	1					
ANR	7507682	ExpressionStatement	"showBlock ( b , '\\t' )"	1237:4:36461:36479	7507613	3	True				
ANR	7507683	CallExpression	"showBlock ( b , '\\t' )"		7507613	0					
ANR	7507684	Callee	showBlock		7507613	0					
ANR	7507685	Identifier	showBlock		7507613	0					
ANR	7507686	ArgumentList	b		7507613	1					
ANR	7507687	Argument	b		7507613	0					
ANR	7507688	Identifier	b		7507613	0					
ANR	7507689	Argument	'\\t'		7507613	1					
ANR	7507690	PrimaryExpression	'\\t'		7507613	0					
ANR	7507691	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	1238:4:36485:36506	7507613	4	True				
ANR	7507692	CallExpression	"fprintf ( stderr , ""\\n"" )"		7507613	0					
ANR	7507693	Callee	fprintf		7507613	0					
ANR	7507694	Identifier	fprintf		7507613	0					
ANR	7507695	ArgumentList	stderr		7507613	1					
ANR	7507696	Argument	stderr		7507613	0					
ANR	7507697	Identifier	stderr		7507613	0					
ANR	7507698	Argument	"""\\n"""		7507613	1					
ANR	7507699	PrimaryExpression	"""\\n"""		7507613	0					
ANR	7507700	ReturnType	static void		7507613	1					
ANR	7507701	Identifier	blockDisplay		7507613	2					
ANR	7507702	ParameterList	"Memento_BlkHeader * b , int n"		7507613	3					
ANR	7507703	Parameter	Memento_BlkHeader * b	1221:25:36153:36172	7507613	0	True				
ANR	7507704	ParameterType	Memento_BlkHeader *		7507613	0					
ANR	7507705	Identifier	b		7507613	1					
ANR	7507706	Parameter	int n	1221:47:36175:36179	7507613	1	True				
ANR	7507707	ParameterType	int		7507613	0					
ANR	7507708	Identifier	n		7507613	1					
ANR	7507709	CFGEntryNode	ENTRY		7507613		True				
ANR	7507710	CFGExitNode	EXIT		7507613		True				
ANR	7507711	Symbol	b		7507613						
ANR	7507712	Symbol	i		7507613						
ANR	7507713	Symbol	stderr		7507613						
ANR	7507714	Symbol	n		7507613						
ANR	7507715	Function	Memento_listBlock	1241:0:36511:36730							
ANR	7507716	FunctionDef	"Memento_listBlock (Memento_BlkHeader * b , void * arg)"		7507715	0					
ANR	7507717	CompoundStatement		1243:0:36615:36730	7507715	0					
ANR	7507718	IdentifierDeclStatement	int * counts = ( int * ) arg ;	1244:4:36621:36645	7507715	0	True				
ANR	7507719	IdentifierDecl	* counts = ( int * ) arg		7507715	0					
ANR	7507720	IdentifierDeclType	int *		7507715	0					
ANR	7507721	Identifier	counts		7507715	1					
ANR	7507722	AssignmentExpression	* counts = ( int * ) arg		7507715	2		=			
ANR	7507723	Identifier	counts		7507715	0					
ANR	7507724	CastExpression	( int * ) arg		7507715	1					
ANR	7507725	CastTarget	int *		7507715	0					
ANR	7507726	Identifier	arg		7507715	1					
ANR	7507727	ExpressionStatement	"blockDisplay ( b , 0 )"	1245:4:36651:36669	7507715	1	True				
ANR	7507728	CallExpression	"blockDisplay ( b , 0 )"		7507715	0					
ANR	7507729	Callee	blockDisplay		7507715	0					
ANR	7507730	Identifier	blockDisplay		7507715	0					
ANR	7507731	ArgumentList	b		7507715	1					
ANR	7507732	Argument	b		7507715	0					
ANR	7507733	Identifier	b		7507715	0					
ANR	7507734	Argument	0		7507715	1					
ANR	7507735	PrimaryExpression	0		7507715	0					
ANR	7507736	ExpressionStatement	counts [ 0 ] ++	1246:4:36675:36686	7507715	2	True				
ANR	7507737	PostIncDecOperationExpression	counts [ 0 ] ++		7507715	0					
ANR	7507738	ArrayIndexing	counts [ 0 ]		7507715	0					
ANR	7507739	Identifier	counts		7507715	0					
ANR	7507740	PrimaryExpression	0		7507715	1					
ANR	7507741	IncDec	++		7507715	1					
ANR	7507742	ExpressionStatement	counts [ 1 ] += b -> rawsize	1247:4:36692:36714	7507715	3	True				
ANR	7507743	AssignmentExpression	counts [ 1 ] += b -> rawsize		7507715	0		+=			
ANR	7507744	ArrayIndexing	counts [ 1 ]		7507715	0					
ANR	7507745	Identifier	counts		7507715	0					
ANR	7507746	PrimaryExpression	1		7507715	1					
ANR	7507747	PtrMemberAccess	b -> rawsize		7507715	1					
ANR	7507748	Identifier	b		7507715	0					
ANR	7507749	Identifier	rawsize		7507715	1					
ANR	7507750	ReturnStatement	return 0 ;	1248:4:36720:36728	7507715	4	True				
ANR	7507751	PrimaryExpression	0		7507715	0					
ANR	7507752	ReturnType	static int		7507715	1					
ANR	7507753	Identifier	Memento_listBlock		7507715	2					
ANR	7507754	ParameterList	"Memento_BlkHeader * b , void * arg"		7507715	3					
ANR	7507755	Parameter	Memento_BlkHeader * b	1241:29:36540:36559	7507715	0	True				
ANR	7507756	ParameterType	Memento_BlkHeader *		7507715	0					
ANR	7507757	Identifier	b		7507715	1					
ANR	7507758	Parameter	void * arg	1242:29:36591:36612	7507715	1	True				
ANR	7507759	ParameterType	void *		7507715	0					
ANR	7507760	Identifier	arg		7507715	1					
ANR	7507761	CFGEntryNode	ENTRY		7507715		True				
ANR	7507762	CFGExitNode	EXIT		7507715		True				
ANR	7507763	Symbol	b -> rawsize		7507715						
ANR	7507764	Symbol	* counts		7507715						
ANR	7507765	Symbol	b		7507715						
ANR	7507766	Symbol	counts		7507715						
ANR	7507767	Symbol	arg		7507715						
ANR	7507768	Symbol	* b		7507715						
ANR	7507769	Function	doNestedDisplay	1251:0:36733:37140							
ANR	7507770	FunctionDef	"doNestedDisplay (Memento_BlkHeader * b , int depth)"		7507769	0					
ANR	7507771	CompoundStatement		1253:0:36822:37140	7507769	0					
ANR	7507772	DoStatement	do		7507769	0					
ANR	7507773	CompoundStatement		3:7:60:60	7507769	0					
ANR	7507774	ExpressionStatement	"blockDisplay ( b , depth )"	1256:8:36893:36915	7507769	0	True				
ANR	7507775	CallExpression	"blockDisplay ( b , depth )"		7507769	0					
ANR	7507776	Callee	blockDisplay		7507769	0					
ANR	7507777	Identifier	blockDisplay		7507769	0					
ANR	7507778	ArgumentList	b		7507769	1					
ANR	7507779	Argument	b		7507769	0					
ANR	7507780	Identifier	b		7507769	0					
ANR	7507781	Argument	depth		7507769	1					
ANR	7507782	Identifier	depth		7507769	0					
ANR	7507783	IfStatement	if ( b -> sibling )		7507769	1					
ANR	7507784	Condition	b -> sibling	1257:12:36929:36938	7507769	0	True				
ANR	7507785	PtrMemberAccess	b -> sibling		7507769	0					
ANR	7507786	Identifier	b		7507769	0					
ANR	7507787	Identifier	sibling		7507769	1					
ANR	7507788	CompoundStatement		5:24:118:118	7507769	1					
ANR	7507789	IfStatement	if ( b -> child )		7507769	0					
ANR	7507790	Condition	b -> child	1258:16:36959:36966	7507769	0	True				
ANR	7507791	PtrMemberAccess	b -> child		7507769	0					
ANR	7507792	Identifier	b		7507769	0					
ANR	7507793	Identifier	child		7507769	1					
ANR	7507794	ExpressionStatement	"doNestedDisplay ( b -> child , depth + 1 )"	1259:16:36985:37019	7507769	1	True				
ANR	7507795	CallExpression	"doNestedDisplay ( b -> child , depth + 1 )"		7507769	0					
ANR	7507796	Callee	doNestedDisplay		7507769	0					
ANR	7507797	Identifier	doNestedDisplay		7507769	0					
ANR	7507798	ArgumentList	b -> child		7507769	1					
ANR	7507799	Argument	b -> child		7507769	0					
ANR	7507800	PtrMemberAccess	b -> child		7507769	0					
ANR	7507801	Identifier	b		7507769	0					
ANR	7507802	Identifier	child		7507769	1					
ANR	7507803	Argument	depth + 1		7507769	1					
ANR	7507804	AdditiveExpression	depth + 1		7507769	0		+			
ANR	7507805	Identifier	depth		7507769	0					
ANR	7507806	PrimaryExpression	1		7507769	1					
ANR	7507807	ExpressionStatement	b = b -> sibling	1260:12:37033:37047	7507769	1	True				
ANR	7507808	AssignmentExpression	b = b -> sibling		7507769	0		=			
ANR	7507809	Identifier	b		7507769	0					
ANR	7507810	PtrMemberAccess	b -> sibling		7507769	1					
ANR	7507811	Identifier	b		7507769	0					
ANR	7507812	Identifier	sibling		7507769	1					
ANR	7507813	ElseStatement	else		7507769	0					
ANR	7507814	CompoundStatement		9:15:241:241	7507769	0					
ANR	7507815	ExpressionStatement	b = b -> child	1262:12:37078:37090	7507769	0	True				
ANR	7507816	AssignmentExpression	b = b -> child		7507769	0		=			
ANR	7507817	Identifier	b		7507769	0					
ANR	7507818	PtrMemberAccess	b -> child		7507769	1					
ANR	7507819	Identifier	b		7507769	0					
ANR	7507820	Identifier	child		7507769	1					
ANR	7507821	ExpressionStatement	depth ++	1263:12:37104:37111	7507769	1	True				
ANR	7507822	PostIncDecOperationExpression	depth ++		7507769	0					
ANR	7507823	Identifier	depth		7507769	0					
ANR	7507824	IncDec	++		7507769	1					
ANR	7507825	Condition	b	1265:13:37136:37136	7507769	1	True				
ANR	7507826	Identifier	b		7507769	0					
ANR	7507827	ReturnType	static void		7507769	1					
ANR	7507828	Identifier	doNestedDisplay		7507769	2					
ANR	7507829	ParameterList	"Memento_BlkHeader * b , int depth"		7507769	3					
ANR	7507830	Parameter	Memento_BlkHeader * b	1251:28:36761:36780	7507769	0	True				
ANR	7507831	ParameterType	Memento_BlkHeader *		7507769	0					
ANR	7507832	Identifier	b		7507769	1					
ANR	7507833	Parameter	int depth	1252:28:36811:36819	7507769	1	True				
ANR	7507834	ParameterType	int		7507769	0					
ANR	7507835	Identifier	depth		7507769	1					
ANR	7507836	CFGEntryNode	ENTRY		7507769		True				
ANR	7507837	CFGExitNode	EXIT		7507769		True				
ANR	7507838	Symbol	b		7507769						
ANR	7507839	Symbol	depth		7507769						
ANR	7507840	Symbol	b -> child		7507769						
ANR	7507841	Symbol	b -> sibling		7507769						
ANR	7507842	Symbol	* b		7507769						
ANR	7507843	Function	ptrcmp	1268:0:37143:37300							
ANR	7507844	FunctionDef	"ptrcmp (const void * a_ , const void * b_)"		7507843	0					
ANR	7507845	CompoundStatement		1269:0:37193:37300	7507843	0					
ANR	7507846	IdentifierDeclStatement	const char * * a = ( const char * * ) a_ ;	1270:4:37199:37233	7507843	0	True				
ANR	7507847	IdentifierDecl	* * a = ( const char * * ) a_		7507843	0					
ANR	7507848	IdentifierDeclType	const char * *		7507843	0					
ANR	7507849	Identifier	a		7507843	1					
ANR	7507850	AssignmentExpression	* * a = ( const char * * ) a_		7507843	2		=			
ANR	7507851	Identifier	a		7507843	0					
ANR	7507852	CastExpression	( const char * * ) a_		7507843	1					
ANR	7507853	CastTarget	const char * *		7507843	0					
ANR	7507854	Identifier	a_		7507843	1					
ANR	7507855	IdentifierDeclStatement	const char * * b = ( const char * * ) b_ ;	1271:4:37239:37273	7507843	1	True				
ANR	7507856	IdentifierDecl	* * b = ( const char * * ) b_		7507843	0					
ANR	7507857	IdentifierDeclType	const char * *		7507843	0					
ANR	7507858	Identifier	b		7507843	1					
ANR	7507859	AssignmentExpression	* * b = ( const char * * ) b_		7507843	2		=			
ANR	7507860	Identifier	b		7507843	0					
ANR	7507861	CastExpression	( const char * * ) b_		7507843	1					
ANR	7507862	CastTarget	const char * *		7507843	0					
ANR	7507863	Identifier	b_		7507843	1					
ANR	7507864	ReturnStatement	return ( int ) ( * a - * b ) ;	1272:4:37279:37298	7507843	2	True				
ANR	7507865	CastExpression	( int ) ( * a - * b )		7507843	0					
ANR	7507866	CastTarget	int		7507843	0					
ANR	7507867	AdditiveExpression	* a - * b		7507843	1		-			
ANR	7507868	UnaryOperationExpression	* a		7507843	0					
ANR	7507869	UnaryOperator	*		7507843	0					
ANR	7507870	Identifier	a		7507843	1					
ANR	7507871	UnaryOperationExpression	* b		7507843	1					
ANR	7507872	UnaryOperator	*		7507843	0					
ANR	7507873	Identifier	b		7507843	1					
ANR	7507874	ReturnType	static int		7507843	1					
ANR	7507875	Identifier	ptrcmp		7507843	2					
ANR	7507876	ParameterList	"const void * a_ , const void * b_"		7507843	3					
ANR	7507877	Parameter	const void * a_	1268:18:37161:37174	7507843	0	True				
ANR	7507878	ParameterType	const void *		7507843	0					
ANR	7507879	Identifier	a_		7507843	1					
ANR	7507880	Parameter	const void * b_	1268:34:37177:37190	7507843	1	True				
ANR	7507881	ParameterType	const void *		7507843	0					
ANR	7507882	Identifier	b_		7507843	1					
ANR	7507883	CFGEntryNode	ENTRY		7507843		True				
ANR	7507884	CFGExitNode	EXIT		7507843		True				
ANR	7507885	Symbol	a		7507843						
ANR	7507886	Symbol	b		7507843						
ANR	7507887	Symbol	* a		7507843						
ANR	7507888	Symbol	* b		7507843						
ANR	7507889	Symbol	b_		7507843						
ANR	7507890	Symbol	a_		7507843						
ANR	7507891	Function	Memento_listBlocksNested	1275:0:37303:40821							
ANR	7507892	FunctionDef	Memento_listBlocksNested ()		7507891	0					
ANR	7507893	CompoundStatement		1277:0:37345:40821	7507891	0					
ANR	7507894	IdentifierDeclStatement	"int count , size , i ;"	1278:4:37351:37369	7507891	0	True				
ANR	7507895	IdentifierDecl	count		7507891	0					
ANR	7507896	IdentifierDeclType	int		7507891	0					
ANR	7507897	Identifier	count		7507891	1					
ANR	7507898	IdentifierDecl	size		7507891	1					
ANR	7507899	IdentifierDeclType	int		7507891	0					
ANR	7507900	Identifier	size		7507891	1					
ANR	7507901	IdentifierDecl	i		7507891	2					
ANR	7507902	IdentifierDeclType	int		7507891	0					
ANR	7507903	Identifier	i		7507891	1					
ANR	7507904	IdentifierDeclStatement	"Memento_BlkHeader * b , * prev ;"	1279:4:37375:37402	7507891	1	True				
ANR	7507905	IdentifierDecl	* b		7507891	0					
ANR	7507906	IdentifierDeclType	Memento_BlkHeader *		7507891	0					
ANR	7507907	Identifier	b		7507891	1					
ANR	7507908	IdentifierDecl	* prev		7507891	1					
ANR	7507909	IdentifierDeclType	Memento_BlkHeader *		7507891	0					
ANR	7507910	Identifier	prev		7507891	1					
ANR	7507911	IdentifierDeclStatement	"void * * blocks , * minptr , * maxptr ;"	1280:4:37408:37439	7507891	2	True				
ANR	7507912	IdentifierDecl	* * blocks		7507891	0					
ANR	7507913	IdentifierDeclType	void * *		7507891	0					
ANR	7507914	Identifier	blocks		7507891	1					
ANR	7507915	IdentifierDecl	* minptr		7507891	1					
ANR	7507916	IdentifierDeclType	void *		7507891	0					
ANR	7507917	Identifier	minptr		7507891	1					
ANR	7507918	IdentifierDecl	* maxptr		7507891	2					
ANR	7507919	IdentifierDeclType	void *		7507891	0					
ANR	7507920	Identifier	maxptr		7507891	1					
ANR	7507921	IdentifierDeclStatement	intptr_t mask ;	1281:4:37445:37458	7507891	3	True				
ANR	7507922	IdentifierDecl	mask		7507891	0					
ANR	7507923	IdentifierDeclType	intptr_t		7507891	0					
ANR	7507924	Identifier	mask		7507891	1					
ANR	7507925	ExpressionStatement	count = 0	1284:4:37492:37501	7507891	4	True				
ANR	7507926	AssignmentExpression	count = 0		7507891	0		=			
ANR	7507927	Identifier	count		7507891	0					
ANR	7507928	PrimaryExpression	0		7507891	1					
ANR	7507929	ExpressionStatement	size = 0	1285:4:37507:37515	7507891	5	True				
ANR	7507930	AssignmentExpression	size = 0		7507891	0		=			
ANR	7507931	Identifier	size		7507891	0					
ANR	7507932	PrimaryExpression	0		7507891	1					
ANR	7507933	ForStatement	for ( b = memento . used . head ; b ; b = b -> next )		7507891	6					
ANR	7507934	ForInit	b = memento . used . head ;	1286:9:37526:37547	7507891	0	True				
ANR	7507935	AssignmentExpression	b = memento . used . head		7507891	0		=			
ANR	7507936	Identifier	b		7507891	0					
ANR	7507937	MemberAccess	memento . used . head		7507891	1					
ANR	7507938	MemberAccess	memento . used		7507891	0					
ANR	7507939	Identifier	memento		7507891	0					
ANR	7507940	Identifier	used		7507891	1					
ANR	7507941	Identifier	head		7507891	1					
ANR	7507942	Condition	b	1286:32:37549:37549	7507891	1	True				
ANR	7507943	Identifier	b		7507891	0					
ANR	7507944	AssignmentExpression	b = b -> next	1286:35:37552:37562	7507891	2	True	=			
ANR	7507945	Identifier	b		7507891	0					
ANR	7507946	PtrMemberAccess	b -> next		7507891	1					
ANR	7507947	Identifier	b		7507891	0					
ANR	7507948	Identifier	next		7507891	1					
ANR	7507949	CompoundStatement		10:48:219:219	7507891	3					
ANR	7507950	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( b , sizeof ( * b ) )"	1287:8:37575:37615	7507891	0	True				
ANR	7507951	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( b , sizeof ( * b ) )"		7507891	0					
ANR	7507952	Callee	VALGRIND_MAKE_MEM_DEFINED		7507891	0					
ANR	7507953	Identifier	VALGRIND_MAKE_MEM_DEFINED		7507891	0					
ANR	7507954	ArgumentList	b		7507891	1					
ANR	7507955	Argument	b		7507891	0					
ANR	7507956	Identifier	b		7507891	0					
ANR	7507957	Argument	sizeof ( * b )		7507891	1					
ANR	7507958	SizeofExpression	sizeof ( * b )		7507891	0					
ANR	7507959	Sizeof	sizeof		7507891	0					
ANR	7507960	UnaryOperationExpression	* b		7507891	1					
ANR	7507961	UnaryOperator	*		7507891	0					
ANR	7507962	Identifier	b		7507891	1					
ANR	7507963	ExpressionStatement	size += b -> rawsize	1288:8:37625:37643	7507891	1	True				
ANR	7507964	AssignmentExpression	size += b -> rawsize		7507891	0		+=			
ANR	7507965	Identifier	size		7507891	0					
ANR	7507966	PtrMemberAccess	b -> rawsize		7507891	1					
ANR	7507967	Identifier	b		7507891	0					
ANR	7507968	Identifier	rawsize		7507891	1					
ANR	7507969	ExpressionStatement	count ++	1289:8:37653:37660	7507891	2	True				
ANR	7507970	PostIncDecOperationExpression	count ++		7507891	0					
ANR	7507971	Identifier	count		7507891	0					
ANR	7507972	IncDec	++		7507891	1					
ANR	7507973	ExpressionStatement	blocks = MEMENTO_UNDERLYING_MALLOC ( sizeof ( void * ) * count )	1293:4:37703:37761	7507891	7	True				
ANR	7507974	AssignmentExpression	blocks = MEMENTO_UNDERLYING_MALLOC ( sizeof ( void * ) * count )		7507891	0		=			
ANR	7507975	Identifier	blocks		7507891	0					
ANR	7507976	CallExpression	MEMENTO_UNDERLYING_MALLOC ( sizeof ( void * ) * count )		7507891	1					
ANR	7507977	Callee	MEMENTO_UNDERLYING_MALLOC		7507891	0					
ANR	7507978	Identifier	MEMENTO_UNDERLYING_MALLOC		7507891	0					
ANR	7507979	ArgumentList	sizeof ( void * ) * count		7507891	1					
ANR	7507980	Argument	sizeof ( void * ) * count		7507891	0					
ANR	7507981	MultiplicativeExpression	sizeof ( void * ) * count		7507891	0		*			
ANR	7507982	SizeofExpression	sizeof ( void * )		7507891	0					
ANR	7507983	Sizeof	sizeof		7507891	0					
ANR	7507984	SizeofOperand	void *		7507891	1					
ANR	7507985	Identifier	count		7507891	1					
ANR	7507986	IfStatement	if ( blocks == NULL )		7507891	8					
ANR	7507987	Condition	blocks == NULL	1294:8:37771:37784	7507891	0	True				
ANR	7507988	EqualityExpression	blocks == NULL		7507891	0		==			
ANR	7507989	Identifier	blocks		7507891	0					
ANR	7507990	Identifier	NULL		7507891	1					
ANR	7507991	ReturnStatement	return 1 ;	1295:8:37795:37803	7507891	1	True				
ANR	7507992	PrimaryExpression	1		7507891	0					
ANR	7507993	ExpressionStatement	b = memento . used . head	1298:4:37844:37865	7507891	9	True				
ANR	7507994	AssignmentExpression	b = memento . used . head		7507891	0		=			
ANR	7507995	Identifier	b		7507891	0					
ANR	7507996	MemberAccess	memento . used . head		7507891	1					
ANR	7507997	MemberAccess	memento . used		7507891	0					
ANR	7507998	Identifier	memento		7507891	0					
ANR	7507999	Identifier	used		7507891	1					
ANR	7508000	Identifier	head		7507891	1					
ANR	7508001	ExpressionStatement	minptr = maxptr = MEMBLK_TOBLK ( b )	1299:4:37871:37904	7507891	10	True				
ANR	7508002	AssignmentExpression	minptr = maxptr = MEMBLK_TOBLK ( b )		7507891	0		=			
ANR	7508003	Identifier	minptr		7507891	0					
ANR	7508004	AssignmentExpression	maxptr = MEMBLK_TOBLK ( b )		7507891	1		=			
ANR	7508005	Identifier	maxptr		7507891	0					
ANR	7508006	CallExpression	MEMBLK_TOBLK ( b )		7507891	1					
ANR	7508007	Callee	MEMBLK_TOBLK		7507891	0					
ANR	7508008	Identifier	MEMBLK_TOBLK		7507891	0					
ANR	7508009	ArgumentList	b		7507891	1					
ANR	7508010	Argument	b		7507891	0					
ANR	7508011	Identifier	b		7507891	0					
ANR	7508012	ExpressionStatement	mask = ( intptr_t ) minptr	1300:4:37910:37933	7507891	11	True				
ANR	7508013	AssignmentExpression	mask = ( intptr_t ) minptr		7507891	0		=			
ANR	7508014	Identifier	mask		7507891	0					
ANR	7508015	CastExpression	( intptr_t ) minptr		7507891	1					
ANR	7508016	CastTarget	intptr_t		7507891	0					
ANR	7508017	Identifier	minptr		7507891	1					
ANR	7508018	ForStatement	"for ( i = 0 ; b ; b = b -> next , i ++ )"		7507891	12					
ANR	7508019	ForInit	i = 0 ;	1301:9:37944:37949	7507891	0	True				
ANR	7508020	AssignmentExpression	i = 0		7507891	0		=			
ANR	7508021	Identifier	i		7507891	0					
ANR	7508022	PrimaryExpression	0		7507891	1					
ANR	7508023	Condition	b	1301:16:37951:37951	7507891	1	True				
ANR	7508024	Identifier	b		7507891	0					
ANR	7508025	Expression	"b = b -> next , i ++"	1301:19:37954:37969	7507891	2	True				
ANR	7508026	AssignmentExpression	b = b -> next		7507891	0		=			
ANR	7508027	Identifier	b		7507891	0					
ANR	7508028	PtrMemberAccess	b -> next		7507891	1					
ANR	7508029	Identifier	b		7507891	0					
ANR	7508030	Identifier	next		7507891	1					
ANR	7508031	PostIncDecOperationExpression	i ++		7507891	1					
ANR	7508032	Identifier	i		7507891	0					
ANR	7508033	IncDec	++		7507891	1					
ANR	7508034	CompoundStatement		26:8:636:661	7507891	3					
ANR	7508035	IdentifierDeclStatement	void * p = MEMBLK_TOBLK ( b ) ;	1302:8:37982:38007	7507891	0	True				
ANR	7508036	IdentifierDecl	* p = MEMBLK_TOBLK ( b )		7507891	0					
ANR	7508037	IdentifierDeclType	void *		7507891	0					
ANR	7508038	Identifier	p		7507891	1					
ANR	7508039	AssignmentExpression	* p = MEMBLK_TOBLK ( b )		7507891	2		=			
ANR	7508040	Identifier	p		7507891	0					
ANR	7508041	CallExpression	MEMBLK_TOBLK ( b )		7507891	1					
ANR	7508042	Callee	MEMBLK_TOBLK		7507891	0					
ANR	7508043	Identifier	MEMBLK_TOBLK		7507891	0					
ANR	7508044	ArgumentList	b		7507891	1					
ANR	7508045	Argument	b		7507891	0					
ANR	7508046	Identifier	b		7507891	0					
ANR	7508047	ExpressionStatement	mask &= ( intptr_t ) p	1303:8:38017:38036	7507891	1	True				
ANR	7508048	AssignmentExpression	mask &= ( intptr_t ) p		7507891	0		&=			
ANR	7508049	Identifier	mask		7507891	0					
ANR	7508050	CastExpression	( intptr_t ) p		7507891	1					
ANR	7508051	CastTarget	intptr_t		7507891	0					
ANR	7508052	Identifier	p		7507891	1					
ANR	7508053	IfStatement	if ( p < minptr )		7507891	2					
ANR	7508054	Condition	p < minptr	1304:12:38050:38059	7507891	0	True				
ANR	7508055	RelationalExpression	p < minptr		7507891	0		<			
ANR	7508056	Identifier	p		7507891	0					
ANR	7508057	Identifier	minptr		7507891	1					
ANR	7508058	ExpressionStatement	minptr = p	1305:12:38074:38084	7507891	1	True				
ANR	7508059	AssignmentExpression	minptr = p		7507891	0		=			
ANR	7508060	Identifier	minptr		7507891	0					
ANR	7508061	Identifier	p		7507891	1					
ANR	7508062	IfStatement	if ( p > maxptr )		7507891	3					
ANR	7508063	Condition	p > maxptr	1306:12:38098:38107	7507891	0	True				
ANR	7508064	RelationalExpression	p > maxptr		7507891	0		>			
ANR	7508065	Identifier	p		7507891	0					
ANR	7508066	Identifier	maxptr		7507891	1					
ANR	7508067	ExpressionStatement	maxptr = p	1307:12:38122:38132	7507891	1	True				
ANR	7508068	AssignmentExpression	maxptr = p		7507891	0		=			
ANR	7508069	Identifier	maxptr		7507891	0					
ANR	7508070	Identifier	p		7507891	1					
ANR	7508071	ExpressionStatement	blocks [ i ] = p	1308:8:38142:38155	7507891	4	True				
ANR	7508072	AssignmentExpression	blocks [ i ] = p		7507891	0		=			
ANR	7508073	ArrayIndexing	blocks [ i ]		7507891	0					
ANR	7508074	Identifier	blocks		7507891	0					
ANR	7508075	Identifier	i		7507891	1					
ANR	7508076	Identifier	p		7507891	1					
ANR	7508077	ExpressionStatement	b -> flags &= ~Memento_Flag_HasParent	1309:8:38165:38200	7507891	5	True				
ANR	7508078	AssignmentExpression	b -> flags &= ~Memento_Flag_HasParent		7507891	0		&=			
ANR	7508079	PtrMemberAccess	b -> flags		7507891	0					
ANR	7508080	Identifier	b		7507891	0					
ANR	7508081	Identifier	flags		7507891	1					
ANR	7508082	Identifier	~Memento_Flag_HasParent		7507891	1					
ANR	7508083	ExpressionStatement	b -> child = NULL	1310:8:38210:38227	7507891	6	True				
ANR	7508084	AssignmentExpression	b -> child = NULL		7507891	0		=			
ANR	7508085	PtrMemberAccess	b -> child		7507891	0					
ANR	7508086	Identifier	b		7507891	0					
ANR	7508087	Identifier	child		7507891	1					
ANR	7508088	Identifier	NULL		7507891	1					
ANR	7508089	ExpressionStatement	b -> sibling = NULL	1311:8:38237:38254	7507891	7	True				
ANR	7508090	AssignmentExpression	b -> sibling = NULL		7507891	0		=			
ANR	7508091	PtrMemberAccess	b -> sibling		7507891	0					
ANR	7508092	Identifier	b		7507891	0					
ANR	7508093	Identifier	sibling		7507891	1					
ANR	7508094	Identifier	NULL		7507891	1					
ANR	7508095	ExpressionStatement	b -> prev = NULL	1312:8:38264:38281	7507891	8	True				
ANR	7508096	AssignmentExpression	b -> prev = NULL		7507891	0		=			
ANR	7508097	PtrMemberAccess	b -> prev		7507891	0					
ANR	7508098	Identifier	b		7507891	0					
ANR	7508099	Identifier	prev		7507891	1					
ANR	7508100	Identifier	NULL		7507891	1					
ANR	7508101	ExpressionStatement	"qsort ( blocks , count , sizeof ( void * ) , ptrcmp )"	1314:4:38306:38350	7507891	13	True				
ANR	7508102	CallExpression	"qsort ( blocks , count , sizeof ( void * ) , ptrcmp )"		7507891	0					
ANR	7508103	Callee	qsort		7507891	0					
ANR	7508104	Identifier	qsort		7507891	0					
ANR	7508105	ArgumentList	blocks		7507891	1					
ANR	7508106	Argument	blocks		7507891	0					
ANR	7508107	Identifier	blocks		7507891	0					
ANR	7508108	Argument	count		7507891	1					
ANR	7508109	Identifier	count		7507891	0					
ANR	7508110	Argument	sizeof ( void * )		7507891	2					
ANR	7508111	SizeofExpression	sizeof ( void * )		7507891	0					
ANR	7508112	Sizeof	sizeof		7507891	0					
ANR	7508113	SizeofOperand	void *		7507891	1					
ANR	7508114	Argument	ptrcmp		7507891	3					
ANR	7508115	Identifier	ptrcmp		7507891	0					
ANR	7508116	ForStatement	for ( b = memento . used . head ; b ; b = b -> next )		7507891	14					
ANR	7508117	ForInit	b = memento . used . head ;	1317:9:38392:38413	7507891	0	True				
ANR	7508118	AssignmentExpression	b = memento . used . head		7507891	0		=			
ANR	7508119	Identifier	b		7507891	0					
ANR	7508120	MemberAccess	memento . used . head		7507891	1					
ANR	7508121	MemberAccess	memento . used		7507891	0					
ANR	7508122	Identifier	memento		7507891	0					
ANR	7508123	Identifier	used		7507891	1					
ANR	7508124	Identifier	head		7507891	1					
ANR	7508125	Condition	b	1317:32:38415:38415	7507891	1	True				
ANR	7508126	Identifier	b		7507891	0					
ANR	7508127	AssignmentExpression	b = b -> next	1317:35:38418:38428	7507891	2	True	=			
ANR	7508128	Identifier	b		7507891	0					
ANR	7508129	PtrMemberAccess	b -> next		7507891	1					
ANR	7508130	Identifier	b		7507891	0					
ANR	7508131	Identifier	next		7507891	1					
ANR	7508132	CompoundStatement		43:8:1130:1205	7507891	3					
ANR	7508133	IdentifierDeclStatement	char * p = MEMBLK_TOBLK ( b ) ;	1318:8:38441:38466	7507891	0	True				
ANR	7508134	IdentifierDecl	* p = MEMBLK_TOBLK ( b )		7507891	0					
ANR	7508135	IdentifierDeclType	char *		7507891	0					
ANR	7508136	Identifier	p		7507891	1					
ANR	7508137	AssignmentExpression	* p = MEMBLK_TOBLK ( b )		7507891	2		=			
ANR	7508138	Identifier	p		7507891	0					
ANR	7508139	CallExpression	MEMBLK_TOBLK ( b )		7507891	1					
ANR	7508140	Callee	MEMBLK_TOBLK		7507891	0					
ANR	7508141	Identifier	MEMBLK_TOBLK		7507891	0					
ANR	7508142	ArgumentList	b		7507891	1					
ANR	7508143	Argument	b		7507891	0					
ANR	7508144	Identifier	b		7507891	0					
ANR	7508145	IdentifierDeclStatement	int end = ( b -> rawsize < MEMENTO_PTRSEARCH ? b -> rawsize : MEMENTO_PTRSEARCH ) ;	1319:8:38476:38551	7507891	1	True				
ANR	7508146	IdentifierDecl	end = ( b -> rawsize < MEMENTO_PTRSEARCH ? b -> rawsize : MEMENTO_PTRSEARCH )		7507891	0					
ANR	7508147	IdentifierDeclType	int		7507891	0					
ANR	7508148	Identifier	end		7507891	1					
ANR	7508149	AssignmentExpression	end = ( b -> rawsize < MEMENTO_PTRSEARCH ? b -> rawsize : MEMENTO_PTRSEARCH )		7507891	2		=			
ANR	7508150	Identifier	end		7507891	0					
ANR	7508151	ConditionalExpression	b -> rawsize < MEMENTO_PTRSEARCH ? b -> rawsize : MEMENTO_PTRSEARCH		7507891	1					
ANR	7508152	Condition	b -> rawsize < MEMENTO_PTRSEARCH		7507891	0					
ANR	7508153	RelationalExpression	b -> rawsize < MEMENTO_PTRSEARCH		7507891	0		<			
ANR	7508154	PtrMemberAccess	b -> rawsize		7507891	0					
ANR	7508155	Identifier	b		7507891	0					
ANR	7508156	Identifier	rawsize		7507891	1					
ANR	7508157	Identifier	MEMENTO_PTRSEARCH		7507891	1					
ANR	7508158	PtrMemberAccess	b -> rawsize		7507891	1					
ANR	7508159	Identifier	b		7507891	0					
ANR	7508160	Identifier	rawsize		7507891	1					
ANR	7508161	Identifier	MEMENTO_PTRSEARCH		7507891	2					
ANR	7508162	ForStatement	for ( i = MEMENTO_SEARCH_SKIP ; i < end ; i += sizeof ( void * ) )		7507891	2					
ANR	7508163	ForInit	i = MEMENTO_SEARCH_SKIP ;	1320:13:38566:38589	7507891	0	True				
ANR	7508164	AssignmentExpression	i = MEMENTO_SEARCH_SKIP		7507891	0		=			
ANR	7508165	Identifier	i		7507891	0					
ANR	7508166	Identifier	MEMENTO_SEARCH_SKIP		7507891	1					
ANR	7508167	Condition	i < end	1320:38:38591:38597	7507891	1	True				
ANR	7508168	RelationalExpression	i < end		7507891	0		<			
ANR	7508169	Identifier	i		7507891	0					
ANR	7508170	Identifier	end		7507891	1					
ANR	7508171	AssignmentExpression	i += sizeof ( void * )	1320:47:38600:38618	7507891	2	True	+=			
ANR	7508172	Identifier	i		7507891	0					
ANR	7508173	SizeofExpression	sizeof ( void * )		7507891	1					
ANR	7508174	Sizeof	sizeof		7507891	0					
ANR	7508175	SizeofOperand	void *		7507891	1					
ANR	7508176	CompoundStatement		46:12:1330:1338	7507891	3					
ANR	7508177	IdentifierDeclStatement	void * q = * ( void * * ) ( & p [ i ] ) ;	1321:12:38635:38662	7507891	0	True				
ANR	7508178	IdentifierDecl	* q = * ( void * * ) ( & p [ i ] )		7507891	0					
ANR	7508179	IdentifierDeclType	void *		7507891	0					
ANR	7508180	Identifier	q		7507891	1					
ANR	7508181	AssignmentExpression	* q = * ( void * * ) ( & p [ i ] )		7507891	2		=			
ANR	7508182	Identifier	q		7507891	0					
ANR	7508183	UnaryOperationExpression	* ( void * * ) ( & p [ i ] )		7507891	1					
ANR	7508184	UnaryOperator	*		7507891	0					
ANR	7508185	CastExpression	( void * * ) ( & p [ i ] )		7507891	1					
ANR	7508186	CastTarget	void * *		7507891	0					
ANR	7508187	UnaryOperationExpression	& p [ i ]		7507891	1					
ANR	7508188	UnaryOperator	&		7507891	0					
ANR	7508189	ArrayIndexing	p [ i ]		7507891	1					
ANR	7508190	Identifier	p		7507891	0					
ANR	7508191	Identifier	i		7507891	1					
ANR	7508192	IdentifierDeclStatement	void * * r ;	1322:12:38676:38684	7507891	1	True				
ANR	7508193	IdentifierDecl	* * r		7507891	0					
ANR	7508194	IdentifierDeclType	void * *		7507891	0					
ANR	7508195	Identifier	r		7507891	1					
ANR	7508196	IfStatement	if ( ( mask & ( intptr_t ) q ) != mask || q < minptr || q > maxptr )		7507891	2					
ANR	7508197	Condition	( mask & ( intptr_t ) q ) != mask || q < minptr || q > maxptr	1325:16:38750:38805	7507891	0	True				
ANR	7508198	OrExpression	( mask & ( intptr_t ) q ) != mask || q < minptr || q > maxptr		7507891	0		||			
ANR	7508199	EqualityExpression	( mask & ( intptr_t ) q ) != mask		7507891	0		!=			
ANR	7508200	BitAndExpression	mask & ( intptr_t ) q		7507891	0		&			
ANR	7508201	Identifier	mask		7507891	0					
ANR	7508202	CastExpression	( intptr_t ) q		7507891	1					
ANR	7508203	CastTarget	intptr_t		7507891	0					
ANR	7508204	Identifier	q		7507891	1					
ANR	7508205	Identifier	mask		7507891	1					
ANR	7508206	OrExpression	q < minptr || q > maxptr		7507891	1		||			
ANR	7508207	RelationalExpression	q < minptr		7507891	0		<			
ANR	7508208	Identifier	q		7507891	0					
ANR	7508209	Identifier	minptr		7507891	1					
ANR	7508210	RelationalExpression	q > maxptr		7507891	1		>			
ANR	7508211	Identifier	q		7507891	0					
ANR	7508212	Identifier	maxptr		7507891	1					
ANR	7508213	ContinueStatement	continue ;	1326:16:38824:38832	7507891	1	True				
ANR	7508214	ExpressionStatement	"r = bsearch ( & q , blocks , count , sizeof ( void * ) , ptrcmp )"	1329:12:38884:38938	7507891	3	True				
ANR	7508215	AssignmentExpression	"r = bsearch ( & q , blocks , count , sizeof ( void * ) , ptrcmp )"		7507891	0		=			
ANR	7508216	Identifier	r		7507891	0					
ANR	7508217	CallExpression	"bsearch ( & q , blocks , count , sizeof ( void * ) , ptrcmp )"		7507891	1					
ANR	7508218	Callee	bsearch		7507891	0					
ANR	7508219	Identifier	bsearch		7507891	0					
ANR	7508220	ArgumentList	& q		7507891	1					
ANR	7508221	Argument	& q		7507891	0					
ANR	7508222	UnaryOperationExpression	& q		7507891	0					
ANR	7508223	UnaryOperator	&		7507891	0					
ANR	7508224	Identifier	q		7507891	1					
ANR	7508225	Argument	blocks		7507891	1					
ANR	7508226	Identifier	blocks		7507891	0					
ANR	7508227	Argument	count		7507891	2					
ANR	7508228	Identifier	count		7507891	0					
ANR	7508229	Argument	sizeof ( void * )		7507891	3					
ANR	7508230	SizeofExpression	sizeof ( void * )		7507891	0					
ANR	7508231	Sizeof	sizeof		7507891	0					
ANR	7508232	SizeofOperand	void *		7507891	1					
ANR	7508233	Argument	ptrcmp		7507891	4					
ANR	7508234	Identifier	ptrcmp		7507891	0					
ANR	7508235	IfStatement	if ( r )		7507891	4					
ANR	7508236	Condition	r	1330:16:38956:38956	7507891	0	True				
ANR	7508237	Identifier	r		7507891	0					
ANR	7508238	CompoundStatement		57:16:1728:1753	7507891	1					
ANR	7508239	IdentifierDeclStatement	Memento_BlkHeader * child = MEMBLK_FROMBLK ( * r ) ;	1332:16:39011:39056	7507891	0	True				
ANR	7508240	IdentifierDecl	* child = MEMBLK_FROMBLK ( * r )		7507891	0					
ANR	7508241	IdentifierDeclType	Memento_BlkHeader *		7507891	0					
ANR	7508242	Identifier	child		7507891	1					
ANR	7508243	AssignmentExpression	* child = MEMBLK_FROMBLK ( * r )		7507891	2		=			
ANR	7508244	Identifier	child		7507891	0					
ANR	7508245	CallExpression	MEMBLK_FROMBLK ( * r )		7507891	1					
ANR	7508246	Callee	MEMBLK_FROMBLK		7507891	0					
ANR	7508247	Identifier	MEMBLK_FROMBLK		7507891	0					
ANR	7508248	ArgumentList	* r		7507891	1					
ANR	7508249	Argument	* r		7507891	0					
ANR	7508250	UnaryOperationExpression	* r		7507891	0					
ANR	7508251	UnaryOperator	*		7507891	0					
ANR	7508252	Identifier	r		7507891	1					
ANR	7508253	IdentifierDeclStatement	Memento_BlkHeader * parent ;	1333:16:39074:39099	7507891	1	True				
ANR	7508254	IdentifierDecl	* parent		7507891	0					
ANR	7508255	IdentifierDeclType	Memento_BlkHeader *		7507891	0					
ANR	7508256	Identifier	parent		7507891	1					
ANR	7508257	IfStatement	if ( child -> prev != NULL )		7507891	2					
ANR	7508258	Condition	child -> prev != NULL	1337:20:39245:39263	7507891	0	True				
ANR	7508259	EqualityExpression	child -> prev != NULL		7507891	0		!=			
ANR	7508260	PtrMemberAccess	child -> prev		7507891	0					
ANR	7508261	Identifier	child		7507891	0					
ANR	7508262	Identifier	prev		7507891	1					
ANR	7508263	Identifier	NULL		7507891	1					
ANR	7508264	ContinueStatement	continue ;	1338:20:39299:39307	7507891	1	True				
ANR	7508265	IfStatement	if ( child -> flags & Memento_Flag_HasParent )		7507891	3					
ANR	7508266	Condition	child -> flags & Memento_Flag_HasParent	1339:20:39329:39365	7507891	0	True				
ANR	7508267	BitAndExpression	child -> flags & Memento_Flag_HasParent		7507891	0		&			
ANR	7508268	PtrMemberAccess	child -> flags		7507891	0					
ANR	7508269	Identifier	child		7507891	0					
ANR	7508270	Identifier	flags		7507891	1					
ANR	7508271	Identifier	Memento_Flag_HasParent		7507891	1					
ANR	7508272	ContinueStatement	continue ;	1340:20:39388:39396	7507891	1	True				
ANR	7508273	IfStatement	if ( child == b )		7507891	4					
ANR	7508274	Condition	child == b	1343:20:39480:39489	7507891	0	True				
ANR	7508275	EqualityExpression	child == b		7507891	0		==			
ANR	7508276	Identifier	child		7507891	0					
ANR	7508277	Identifier	b		7507891	1					
ANR	7508278	ContinueStatement	continue ;	1344:24:39516:39524	7507891	1	True				
ANR	7508279	ExpressionStatement	parent = b -> prev	1348:16:39664:39680	7507891	5	True				
ANR	7508280	AssignmentExpression	parent = b -> prev		7507891	0		=			
ANR	7508281	Identifier	parent		7507891	0					
ANR	7508282	PtrMemberAccess	b -> prev		7507891	1					
ANR	7508283	Identifier	b		7507891	0					
ANR	7508284	Identifier	prev		7507891	1					
ANR	7508285	WhileStatement	while ( parent != NULL && parent != child )		7507891	6					
ANR	7508286	Condition	parent != NULL && parent != child	1349:23:39718:39750	7507891	0	True				
ANR	7508287	AndExpression	parent != NULL && parent != child		7507891	0		&&			
ANR	7508288	EqualityExpression	parent != NULL		7507891	0		!=			
ANR	7508289	Identifier	parent		7507891	0					
ANR	7508290	Identifier	NULL		7507891	1					
ANR	7508291	EqualityExpression	parent != child		7507891	1		!=			
ANR	7508292	Identifier	parent		7507891	0					
ANR	7508293	Identifier	child		7507891	1					
ANR	7508294	ExpressionStatement	parent = parent -> prev	1350:20:39773:39794	7507891	1	True				
ANR	7508295	AssignmentExpression	parent = parent -> prev		7507891	0		=			
ANR	7508296	Identifier	parent		7507891	0					
ANR	7508297	PtrMemberAccess	parent -> prev		7507891	1					
ANR	7508298	Identifier	parent		7507891	0					
ANR	7508299	Identifier	prev		7507891	1					
ANR	7508300	IfStatement	if ( parent == child )		7507891	7					
ANR	7508301	Condition	parent == child	1351:20:39829:39843	7507891	0	True				
ANR	7508302	EqualityExpression	parent == child		7507891	0		==			
ANR	7508303	Identifier	parent		7507891	0					
ANR	7508304	Identifier	child		7507891	1					
ANR	7508305	ContinueStatement	continue ;	1352:20:39866:39874	7507891	1	True				
ANR	7508306	ExpressionStatement	child -> sibling = b -> child	1354:16:39893:39918	7507891	8	True				
ANR	7508307	AssignmentExpression	child -> sibling = b -> child		7507891	0		=			
ANR	7508308	PtrMemberAccess	child -> sibling		7507891	0					
ANR	7508309	Identifier	child		7507891	0					
ANR	7508310	Identifier	sibling		7507891	1					
ANR	7508311	PtrMemberAccess	b -> child		7507891	1					
ANR	7508312	Identifier	b		7507891	0					
ANR	7508313	Identifier	child		7507891	1					
ANR	7508314	ExpressionStatement	b -> child = child	1355:16:39936:39952	7507891	9	True				
ANR	7508315	AssignmentExpression	b -> child = child		7507891	0		=			
ANR	7508316	PtrMemberAccess	b -> child		7507891	0					
ANR	7508317	Identifier	b		7507891	0					
ANR	7508318	Identifier	child		7507891	1					
ANR	7508319	Identifier	child		7507891	1					
ANR	7508320	ExpressionStatement	child -> prev = b	1356:16:39970:39985	7507891	10	True				
ANR	7508321	AssignmentExpression	child -> prev = b		7507891	0		=			
ANR	7508322	PtrMemberAccess	child -> prev		7507891	0					
ANR	7508323	Identifier	child		7507891	0					
ANR	7508324	Identifier	prev		7507891	1					
ANR	7508325	Identifier	b		7507891	1					
ANR	7508326	ExpressionStatement	child -> flags |= Memento_Flag_HasParent	1357:16:40016:40054	7507891	11	True				
ANR	7508327	AssignmentExpression	child -> flags |= Memento_Flag_HasParent		7507891	0		|=			
ANR	7508328	PtrMemberAccess	child -> flags		7507891	0					
ANR	7508329	Identifier	child		7507891	0					
ANR	7508330	Identifier	flags		7507891	1					
ANR	7508331	Identifier	Memento_Flag_HasParent		7507891	1					
ANR	7508332	ForStatement	for ( b = memento . used . head ; b ; b = b -> next )		7507891	15					
ANR	7508333	ForInit	b = memento . used . head ;	1363:9:40131:40152	7507891	0	True				
ANR	7508334	AssignmentExpression	b = memento . used . head		7507891	0		=			
ANR	7508335	Identifier	b		7507891	0					
ANR	7508336	MemberAccess	memento . used . head		7507891	1					
ANR	7508337	MemberAccess	memento . used		7507891	0					
ANR	7508338	Identifier	memento		7507891	0					
ANR	7508339	Identifier	used		7507891	1					
ANR	7508340	Identifier	head		7507891	1					
ANR	7508341	Condition	b	1363:32:40154:40154	7507891	1	True				
ANR	7508342	Identifier	b		7507891	0					
ANR	7508343	AssignmentExpression	b = b -> next	1363:35:40157:40167	7507891	2	True	=			
ANR	7508344	Identifier	b		7507891	0					
ANR	7508345	PtrMemberAccess	b -> next		7507891	1					
ANR	7508346	Identifier	b		7507891	0					
ANR	7508347	Identifier	next		7507891	1					
ANR	7508348	CompoundStatement		87:48:2824:2824	7507891	3					
ANR	7508349	IfStatement	if ( ( b -> flags & Memento_Flag_HasParent ) == 0 )		7507891	0					
ANR	7508350	Condition	( b -> flags & Memento_Flag_HasParent ) == 0	1364:12:40184:40223	7507891	0	True				
ANR	7508351	EqualityExpression	( b -> flags & Memento_Flag_HasParent ) == 0		7507891	0		==			
ANR	7508352	BitAndExpression	b -> flags & Memento_Flag_HasParent		7507891	0		&			
ANR	7508353	PtrMemberAccess	b -> flags		7507891	0					
ANR	7508354	Identifier	b		7507891	0					
ANR	7508355	Identifier	flags		7507891	1					
ANR	7508356	Identifier	Memento_Flag_HasParent		7507891	1					
ANR	7508357	PrimaryExpression	0		7507891	1					
ANR	7508358	ExpressionStatement	"doNestedDisplay ( b , 0 )"	1365:12:40238:40259	7507891	1	True				
ANR	7508359	CallExpression	"doNestedDisplay ( b , 0 )"		7507891	0					
ANR	7508360	Callee	doNestedDisplay		7507891	0					
ANR	7508361	Identifier	doNestedDisplay		7507891	0					
ANR	7508362	ArgumentList	b		7507891	1					
ANR	7508363	Argument	b		7507891	0					
ANR	7508364	Identifier	b		7507891	0					
ANR	7508365	Argument	0		7507891	1					
ANR	7508366	PrimaryExpression	0		7507891	0					
ANR	7508367	ExpressionStatement	"fprintf ( stderr , "" Total number of blocks = %d\\n"" , count )"	1367:4:40271:40327	7507891	16	True				
ANR	7508368	CallExpression	"fprintf ( stderr , "" Total number of blocks = %d\\n"" , count )"		7507891	0					
ANR	7508369	Callee	fprintf		7507891	0					
ANR	7508370	Identifier	fprintf		7507891	0					
ANR	7508371	ArgumentList	stderr		7507891	1					
ANR	7508372	Argument	stderr		7507891	0					
ANR	7508373	Identifier	stderr		7507891	0					
ANR	7508374	Argument	""" Total number of blocks = %d\\n"""		7507891	1					
ANR	7508375	PrimaryExpression	""" Total number of blocks = %d\\n"""		7507891	0					
ANR	7508376	Argument	count		7507891	2					
ANR	7508377	Identifier	count		7507891	0					
ANR	7508378	ExpressionStatement	"fprintf ( stderr , "" Total size of blocks = %d\\n"" , size )"	1368:4:40333:40386	7507891	17	True				
ANR	7508379	CallExpression	"fprintf ( stderr , "" Total size of blocks = %d\\n"" , size )"		7507891	0					
ANR	7508380	Callee	fprintf		7507891	0					
ANR	7508381	Identifier	fprintf		7507891	0					
ANR	7508382	ArgumentList	stderr		7507891	1					
ANR	7508383	Argument	stderr		7507891	0					
ANR	7508384	Identifier	stderr		7507891	0					
ANR	7508385	Argument	""" Total size of blocks = %d\\n"""		7507891	1					
ANR	7508386	PrimaryExpression	""" Total size of blocks = %d\\n"""		7507891	0					
ANR	7508387	Argument	size		7507891	2					
ANR	7508388	Identifier	size		7507891	0					
ANR	7508389	ExpressionStatement	MEMENTO_UNDERLYING_FREE ( blocks )	1370:4:40393:40424	7507891	18	True				
ANR	7508390	CallExpression	MEMENTO_UNDERLYING_FREE ( blocks )		7507891	0					
ANR	7508391	Callee	MEMENTO_UNDERLYING_FREE		7507891	0					
ANR	7508392	Identifier	MEMENTO_UNDERLYING_FREE		7507891	0					
ANR	7508393	ArgumentList	blocks		7507891	1					
ANR	7508394	Argument	blocks		7507891	0					
ANR	7508395	Identifier	blocks		7507891	0					
ANR	7508396	ExpressionStatement	prev = NULL	1374:4:40525:40536	7507891	19	True				
ANR	7508397	AssignmentExpression	prev = NULL		7507891	0		=			
ANR	7508398	Identifier	prev		7507891	0					
ANR	7508399	Identifier	NULL		7507891	1					
ANR	7508400	ForStatement	for ( b = memento . used . head ; b ; )		7507891	20					
ANR	7508401	ForInit	b = memento . used . head ;	1375:9:40547:40568	7507891	0	True				
ANR	7508402	AssignmentExpression	b = memento . used . head		7507891	0		=			
ANR	7508403	Identifier	b		7507891	0					
ANR	7508404	MemberAccess	memento . used . head		7507891	1					
ANR	7508405	MemberAccess	memento . used		7507891	0					
ANR	7508406	Identifier	memento		7507891	0					
ANR	7508407	Identifier	used		7507891	1					
ANR	7508408	Identifier	head		7507891	1					
ANR	7508409	Condition	b	1375:32:40570:40570	7507891	1	True				
ANR	7508410	Identifier	b		7507891	0					
ANR	7508411	CompoundStatement		100:6:3236:3269	7507891	2					
ANR	7508412	IdentifierDeclStatement	Memento_BlkHeader * next = b -> next ;	1376:6:40582:40615	7507891	0	True				
ANR	7508413	IdentifierDecl	* next = b -> next		7507891	0					
ANR	7508414	IdentifierDeclType	Memento_BlkHeader *		7507891	0					
ANR	7508415	Identifier	next		7507891	1					
ANR	7508416	AssignmentExpression	* next = b -> next		7507891	2		=			
ANR	7508417	Identifier	next		7507891	0					
ANR	7508418	PtrMemberAccess	b -> next		7507891	1					
ANR	7508419	Identifier	b		7507891	0					
ANR	7508420	Identifier	next		7507891	1					
ANR	7508421	ExpressionStatement	b -> prev = prev	1377:6:40623:40637	7507891	1	True				
ANR	7508422	AssignmentExpression	b -> prev = prev		7507891	0		=			
ANR	7508423	PtrMemberAccess	b -> prev		7507891	0					
ANR	7508424	Identifier	b		7507891	0					
ANR	7508425	Identifier	prev		7507891	1					
ANR	7508426	Identifier	prev		7507891	1					
ANR	7508427	ExpressionStatement	b -> child = MEMENTO_CHILD_MAGIC	1378:6:40645:40675	7507891	2	True				
ANR	7508428	AssignmentExpression	b -> child = MEMENTO_CHILD_MAGIC		7507891	0		=			
ANR	7508429	PtrMemberAccess	b -> child		7507891	0					
ANR	7508430	Identifier	b		7507891	0					
ANR	7508431	Identifier	child		7507891	1					
ANR	7508432	Identifier	MEMENTO_CHILD_MAGIC		7507891	1					
ANR	7508433	ExpressionStatement	b -> sibling = MEMENTO_SIBLING_MAGIC	1379:6:40683:40717	7507891	3	True				
ANR	7508434	AssignmentExpression	b -> sibling = MEMENTO_SIBLING_MAGIC		7507891	0		=			
ANR	7508435	PtrMemberAccess	b -> sibling		7507891	0					
ANR	7508436	Identifier	b		7507891	0					
ANR	7508437	Identifier	sibling		7507891	1					
ANR	7508438	Identifier	MEMENTO_SIBLING_MAGIC		7507891	1					
ANR	7508439	ExpressionStatement	prev = b	1380:6:40725:40733	7507891	4	True				
ANR	7508440	AssignmentExpression	prev = b		7507891	0		=			
ANR	7508441	Identifier	prev		7507891	0					
ANR	7508442	Identifier	b		7507891	1					
ANR	7508443	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( b , sizeof ( * b ) )"	1381:6:40741:40782	7507891	5	True				
ANR	7508444	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( b , sizeof ( * b ) )"		7507891	0					
ANR	7508445	Callee	VALGRIND_MAKE_MEM_NOACCESS		7507891	0					
ANR	7508446	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7507891	0					
ANR	7508447	ArgumentList	b		7507891	1					
ANR	7508448	Argument	b		7507891	0					
ANR	7508449	Identifier	b		7507891	0					
ANR	7508450	Argument	sizeof ( * b )		7507891	1					
ANR	7508451	SizeofExpression	sizeof ( * b )		7507891	0					
ANR	7508452	Sizeof	sizeof		7507891	0					
ANR	7508453	UnaryOperationExpression	* b		7507891	1					
ANR	7508454	UnaryOperator	*		7507891	0					
ANR	7508455	Identifier	b		7507891	1					
ANR	7508456	ExpressionStatement	b = next	1382:6:40790:40798	7507891	6	True				
ANR	7508457	AssignmentExpression	b = next		7507891	0		=			
ANR	7508458	Identifier	b		7507891	0					
ANR	7508459	Identifier	next		7507891	1					
ANR	7508460	ReturnStatement	return 0 ;	1385:4:40811:40819	7507891	21	True				
ANR	7508461	PrimaryExpression	0		7507891	0					
ANR	7508462	ReturnType	static int		7507891	1					
ANR	7508463	Identifier	Memento_listBlocksNested		7507891	2					
ANR	7508464	ParameterList			7507891	3					
ANR	7508465	CFGEntryNode	ENTRY		7507891		True				
ANR	7508466	CFGExitNode	EXIT		7507891		True				
ANR	7508467	Symbol	parent		7507891						
ANR	7508468	Symbol	child -> prev		7507891						
ANR	7508469	Symbol	* parent		7507891						
ANR	7508470	Symbol	child -> flags		7507891						
ANR	7508471	Symbol	maxptr		7507891						
ANR	7508472	Symbol	prev		7507891						
ANR	7508473	Symbol	* ( void * * ) ( & p [ i ] )		7507891						
ANR	7508474	Symbol	b -> prev		7507891						
ANR	7508475	Symbol	MEMENTO_CHILD_MAGIC		7507891						
ANR	7508476	Symbol	bsearch		7507891						
ANR	7508477	Symbol	MEMENTO_PTRSEARCH		7507891						
ANR	7508478	Symbol	* child		7507891						
ANR	7508479	Symbol	NULL		7507891						
ANR	7508480	Symbol	Memento_Flag_HasParent		7507891						
ANR	7508481	Symbol	* blocks		7507891						
ANR	7508482	Symbol	MEMENTO_SIBLING_MAGIC		7507891						
ANR	7508483	Symbol	minptr		7507891						
ANR	7508484	Symbol	count		7507891						
ANR	7508485	Symbol	memento		7507891						
ANR	7508486	Symbol	b -> child		7507891						
ANR	7508487	Symbol	stderr		7507891						
ANR	7508488	Symbol	ptrcmp		7507891						
ANR	7508489	Symbol	MEMBLK_TOBLK		7507891						
ANR	7508490	Symbol	b -> rawsize		7507891						
ANR	7508491	Symbol	size		7507891						
ANR	7508492	Symbol	MEMBLK_FROMBLK		7507891						
ANR	7508493	Symbol	parent -> prev		7507891						
ANR	7508494	Symbol	b -> flags		7507891						
ANR	7508495	Symbol	b -> sibling		7507891						
ANR	7508496	Symbol	child		7507891						
ANR	7508497	Symbol	child -> sibling		7507891						
ANR	7508498	Symbol	next		7507891						
ANR	7508499	Symbol	memento . used . head		7507891						
ANR	7508500	Symbol	memento . used		7507891						
ANR	7508501	Symbol	~Memento_Flag_HasParent		7507891						
ANR	7508502	Symbol	b -> next		7507891						
ANR	7508503	Symbol	end		7507891						
ANR	7508504	Symbol	MEMENTO_UNDERLYING_MALLOC		7507891						
ANR	7508505	Symbol	mask		7507891						
ANR	7508506	Symbol	b		7507891						
ANR	7508507	Symbol	blocks		7507891						
ANR	7508508	Symbol	i		7507891						
ANR	7508509	Symbol	* b		7507891						
ANR	7508510	Symbol	p		7507891						
ANR	7508511	Symbol	q		7507891						
ANR	7508512	Symbol	r		7507891						
ANR	7508513	Symbol	* i		7507891						
ANR	7508514	Symbol	MEMENTO_SEARCH_SKIP		7507891						
ANR	7508515	Symbol	& q		7507891						
ANR	7508516	Symbol	* p		7507891						
ANR	7508517	Symbol	* r		7507891						
ANR	7508518	Function	Memento_listBlocks	1388:0:40824:41270							
ANR	7508519	FunctionDef	Memento_listBlocks ()		7508518	0					
ANR	7508520	CompoundStatement		1389:0:40854:41270	7508518	0					
ANR	7508521	ExpressionStatement	MEMENTO_LOCK ( )	1390:4:40860:40874	7508518	0	True				
ANR	7508522	CallExpression	MEMENTO_LOCK ( )		7508518	0					
ANR	7508523	Callee	MEMENTO_LOCK		7508518	0					
ANR	7508524	Identifier	MEMENTO_LOCK		7508518	0					
ANR	7508525	ArgumentList			7508518	1					
ANR	7508526	ExpressionStatement	"fprintf ( stderr , ""Allocated blocks:\\n"" )"	1391:4:40880:40918	7508518	1	True				
ANR	7508527	CallExpression	"fprintf ( stderr , ""Allocated blocks:\\n"" )"		7508518	0					
ANR	7508528	Callee	fprintf		7508518	0					
ANR	7508529	Identifier	fprintf		7508518	0					
ANR	7508530	ArgumentList	stderr		7508518	1					
ANR	7508531	Argument	stderr		7508518	0					
ANR	7508532	Identifier	stderr		7508518	0					
ANR	7508533	Argument	"""Allocated blocks:\\n"""		7508518	1					
ANR	7508534	PrimaryExpression	"""Allocated blocks:\\n"""		7508518	0					
ANR	7508535	IfStatement	if ( Memento_listBlocksNested ( ) )		7508518	2					
ANR	7508536	Condition	Memento_listBlocksNested ( )	1392:8:40928:40953	7508518	0	True				
ANR	7508537	CallExpression	Memento_listBlocksNested ( )		7508518	0					
ANR	7508538	Callee	Memento_listBlocksNested		7508518	0					
ANR	7508539	Identifier	Memento_listBlocksNested		7508518	0					
ANR	7508540	ArgumentList			7508518	1					
ANR	7508541	CompoundStatement		6:8:115:128	7508518	1					
ANR	7508542	IdentifierDeclStatement	int counts [ 2 ] ;	1394:8:40970:40983	7508518	0	True				
ANR	7508543	IdentifierDecl	counts [ 2 ]		7508518	0					
ANR	7508544	IdentifierDeclType	int [ 2 ]		7508518	0					
ANR	7508545	Identifier	counts		7508518	1					
ANR	7508546	PrimaryExpression	2		7508518	2					
ANR	7508547	ExpressionStatement	counts [ 0 ] = 0	1395:8:40993:41006	7508518	1	True				
ANR	7508548	AssignmentExpression	counts [ 0 ] = 0		7508518	0		=			
ANR	7508549	ArrayIndexing	counts [ 0 ]		7508518	0					
ANR	7508550	Identifier	counts		7508518	0					
ANR	7508551	PrimaryExpression	0		7508518	1					
ANR	7508552	PrimaryExpression	0		7508518	1					
ANR	7508553	ExpressionStatement	counts [ 1 ] = 0	1396:8:41016:41029	7508518	2	True				
ANR	7508554	AssignmentExpression	counts [ 1 ] = 0		7508518	0		=			
ANR	7508555	ArrayIndexing	counts [ 1 ]		7508518	0					
ANR	7508556	Identifier	counts		7508518	0					
ANR	7508557	PrimaryExpression	1		7508518	1					
ANR	7508558	PrimaryExpression	0		7508518	1					
ANR	7508559	ExpressionStatement	"Memento_appBlocks ( & memento . used , Memento_listBlock , & counts [ 0 ] )"	1397:8:41039:41102	7508518	3	True				
ANR	7508560	CallExpression	"Memento_appBlocks ( & memento . used , Memento_listBlock , & counts [ 0 ] )"		7508518	0					
ANR	7508561	Callee	Memento_appBlocks		7508518	0					
ANR	7508562	Identifier	Memento_appBlocks		7508518	0					
ANR	7508563	ArgumentList	& memento . used		7508518	1					
ANR	7508564	Argument	& memento . used		7508518	0					
ANR	7508565	UnaryOperationExpression	& memento . used		7508518	0					
ANR	7508566	UnaryOperator	&		7508518	0					
ANR	7508567	MemberAccess	memento . used		7508518	1					
ANR	7508568	Identifier	memento		7508518	0					
ANR	7508569	Identifier	used		7508518	1					
ANR	7508570	Argument	Memento_listBlock		7508518	1					
ANR	7508571	Identifier	Memento_listBlock		7508518	0					
ANR	7508572	Argument	& counts [ 0 ]		7508518	2					
ANR	7508573	UnaryOperationExpression	& counts [ 0 ]		7508518	0					
ANR	7508574	UnaryOperator	&		7508518	0					
ANR	7508575	ArrayIndexing	counts [ 0 ]		7508518	1					
ANR	7508576	Identifier	counts		7508518	0					
ANR	7508577	PrimaryExpression	0		7508518	1					
ANR	7508578	ExpressionStatement	"fprintf ( stderr , "" Total number of blocks = %d\\n"" , counts [ 0 ] )"	1398:8:41112:41172	7508518	4	True				
ANR	7508579	CallExpression	"fprintf ( stderr , "" Total number of blocks = %d\\n"" , counts [ 0 ] )"		7508518	0					
ANR	7508580	Callee	fprintf		7508518	0					
ANR	7508581	Identifier	fprintf		7508518	0					
ANR	7508582	ArgumentList	stderr		7508518	1					
ANR	7508583	Argument	stderr		7508518	0					
ANR	7508584	Identifier	stderr		7508518	0					
ANR	7508585	Argument	""" Total number of blocks = %d\\n"""		7508518	1					
ANR	7508586	PrimaryExpression	""" Total number of blocks = %d\\n"""		7508518	0					
ANR	7508587	Argument	counts [ 0 ]		7508518	2					
ANR	7508588	ArrayIndexing	counts [ 0 ]		7508518	0					
ANR	7508589	Identifier	counts		7508518	0					
ANR	7508590	PrimaryExpression	0		7508518	1					
ANR	7508591	ExpressionStatement	"fprintf ( stderr , "" Total size of blocks = %d\\n"" , counts [ 1 ] )"	1399:8:41182:41240	7508518	5	True				
ANR	7508592	CallExpression	"fprintf ( stderr , "" Total size of blocks = %d\\n"" , counts [ 1 ] )"		7508518	0					
ANR	7508593	Callee	fprintf		7508518	0					
ANR	7508594	Identifier	fprintf		7508518	0					
ANR	7508595	ArgumentList	stderr		7508518	1					
ANR	7508596	Argument	stderr		7508518	0					
ANR	7508597	Identifier	stderr		7508518	0					
ANR	7508598	Argument	""" Total size of blocks = %d\\n"""		7508518	1					
ANR	7508599	PrimaryExpression	""" Total size of blocks = %d\\n"""		7508518	0					
ANR	7508600	Argument	counts [ 1 ]		7508518	2					
ANR	7508601	ArrayIndexing	counts [ 1 ]		7508518	0					
ANR	7508602	Identifier	counts		7508518	0					
ANR	7508603	PrimaryExpression	1		7508518	1					
ANR	7508604	ExpressionStatement	MEMENTO_UNLOCK ( )	1401:4:41252:41268	7508518	3	True				
ANR	7508605	CallExpression	MEMENTO_UNLOCK ( )		7508518	0					
ANR	7508606	Callee	MEMENTO_UNLOCK		7508518	0					
ANR	7508607	Identifier	MEMENTO_UNLOCK		7508518	0					
ANR	7508608	ArgumentList			7508518	1					
ANR	7508609	ReturnType	void		7508518	1					
ANR	7508610	Identifier	Memento_listBlocks		7508518	2					
ANR	7508611	ParameterList			7508518	3					
ANR	7508612	CFGEntryNode	ENTRY		7508518		True				
ANR	7508613	CFGExitNode	EXIT		7508518		True				
ANR	7508614	Symbol	* counts		7508518						
ANR	7508615	Symbol	& memento		7508518						
ANR	7508616	Symbol	Memento_listBlocksNested		7508518						
ANR	7508617	Symbol	counts		7508518						
ANR	7508618	Symbol	& memento . used		7508518						
ANR	7508619	Symbol	memento		7508518						
ANR	7508620	Symbol	stderr		7508518						
ANR	7508621	Symbol	Memento_listBlock		7508518						
ANR	7508622	Function	Memento_listNewBlock	1404:0:41273:41522							
ANR	7508623	FunctionDef	"Memento_listNewBlock (Memento_BlkHeader * b , void * arg)"		7508622	0					
ANR	7508624	CompoundStatement		1406:0:41383:41522	7508622	0					
ANR	7508625	IfStatement	if ( b -> flags & Memento_Flag_OldBlock )		7508622	0					
ANR	7508626	Condition	b -> flags & Memento_Flag_OldBlock	1407:8:41393:41424	7508622	0	True				
ANR	7508627	BitAndExpression	b -> flags & Memento_Flag_OldBlock		7508622	0		&			
ANR	7508628	PtrMemberAccess	b -> flags		7508622	0					
ANR	7508629	Identifier	b		7508622	0					
ANR	7508630	Identifier	flags		7508622	1					
ANR	7508631	Identifier	Memento_Flag_OldBlock		7508622	1					
ANR	7508632	ReturnStatement	return 0 ;	1408:8:41435:41443	7508622	1	True				
ANR	7508633	PrimaryExpression	0		7508622	0					
ANR	7508634	ExpressionStatement	b -> flags |= Memento_Flag_OldBlock	1409:4:41449:41482	7508622	1	True				
ANR	7508635	AssignmentExpression	b -> flags |= Memento_Flag_OldBlock		7508622	0		|=			
ANR	7508636	PtrMemberAccess	b -> flags		7508622	0					
ANR	7508637	Identifier	b		7508622	0					
ANR	7508638	Identifier	flags		7508622	1					
ANR	7508639	Identifier	Memento_Flag_OldBlock		7508622	1					
ANR	7508640	ReturnStatement	"return Memento_listBlock ( b , arg ) ;"	1410:4:41488:41520	7508622	2	True				
ANR	7508641	CallExpression	"Memento_listBlock ( b , arg )"		7508622	0					
ANR	7508642	Callee	Memento_listBlock		7508622	0					
ANR	7508643	Identifier	Memento_listBlock		7508622	0					
ANR	7508644	ArgumentList	b		7508622	1					
ANR	7508645	Argument	b		7508622	0					
ANR	7508646	Identifier	b		7508622	0					
ANR	7508647	Argument	arg		7508622	1					
ANR	7508648	Identifier	arg		7508622	0					
ANR	7508649	ReturnType	static int		7508622	1					
ANR	7508650	Identifier	Memento_listNewBlock		7508622	2					
ANR	7508651	ParameterList	"Memento_BlkHeader * b , void * arg"		7508622	3					
ANR	7508652	Parameter	Memento_BlkHeader * b	1404:32:41305:41324	7508622	0	True				
ANR	7508653	ParameterType	Memento_BlkHeader *		7508622	0					
ANR	7508654	Identifier	b		7508622	1					
ANR	7508655	Parameter	void * arg	1405:32:41359:41380	7508622	1	True				
ANR	7508656	ParameterType	void *		7508622	0					
ANR	7508657	Identifier	arg		7508622	1					
ANR	7508658	CFGEntryNode	ENTRY		7508622		True				
ANR	7508659	CFGExitNode	EXIT		7508622		True				
ANR	7508660	Symbol	Memento_Flag_OldBlock		7508622						
ANR	7508661	Symbol	b		7508622						
ANR	7508662	Symbol	arg		7508622						
ANR	7508663	Symbol	b -> flags		7508622						
ANR	7508664	Symbol	* b		7508622						
ANR	7508665	Symbol	Memento_listBlock		7508622						
ANR	7508666	Function	Memento_listNewBlocks	1413:0:41525:41940							
ANR	7508667	FunctionDef	Memento_listNewBlocks ()		7508666	0					
ANR	7508668	CompoundStatement		1414:0:41558:41940	7508666	0					
ANR	7508669	IdentifierDeclStatement	int counts [ 2 ] ;	1415:4:41564:41577	7508666	0	True				
ANR	7508670	IdentifierDecl	counts [ 2 ]		7508666	0					
ANR	7508671	IdentifierDeclType	int [ 2 ]		7508666	0					
ANR	7508672	Identifier	counts		7508666	1					
ANR	7508673	PrimaryExpression	2		7508666	2					
ANR	7508674	ExpressionStatement	MEMENTO_LOCK ( )	1416:4:41583:41597	7508666	1	True				
ANR	7508675	CallExpression	MEMENTO_LOCK ( )		7508666	0					
ANR	7508676	Callee	MEMENTO_LOCK		7508666	0					
ANR	7508677	Identifier	MEMENTO_LOCK		7508666	0					
ANR	7508678	ArgumentList			7508666	1					
ANR	7508679	ExpressionStatement	counts [ 0 ] = 0	1417:4:41603:41616	7508666	2	True				
ANR	7508680	AssignmentExpression	counts [ 0 ] = 0		7508666	0		=			
ANR	7508681	ArrayIndexing	counts [ 0 ]		7508666	0					
ANR	7508682	Identifier	counts		7508666	0					
ANR	7508683	PrimaryExpression	0		7508666	1					
ANR	7508684	PrimaryExpression	0		7508666	1					
ANR	7508685	ExpressionStatement	counts [ 1 ] = 0	1418:4:41622:41635	7508666	3	True				
ANR	7508686	AssignmentExpression	counts [ 1 ] = 0		7508666	0		=			
ANR	7508687	ArrayIndexing	counts [ 1 ]		7508666	0					
ANR	7508688	Identifier	counts		7508666	0					
ANR	7508689	PrimaryExpression	1		7508666	1					
ANR	7508690	PrimaryExpression	0		7508666	1					
ANR	7508691	ExpressionStatement	"fprintf ( stderr , ""Blocks allocated and still extant since last list:\\n"" )"	1419:4:41641:41712	7508666	4	True				
ANR	7508692	CallExpression	"fprintf ( stderr , ""Blocks allocated and still extant since last list:\\n"" )"		7508666	0					
ANR	7508693	Callee	fprintf		7508666	0					
ANR	7508694	Identifier	fprintf		7508666	0					
ANR	7508695	ArgumentList	stderr		7508666	1					
ANR	7508696	Argument	stderr		7508666	0					
ANR	7508697	Identifier	stderr		7508666	0					
ANR	7508698	Argument	"""Blocks allocated and still extant since last list:\\n"""		7508666	1					
ANR	7508699	PrimaryExpression	"""Blocks allocated and still extant since last list:\\n"""		7508666	0					
ANR	7508700	ExpressionStatement	"Memento_appBlocks ( & memento . used , Memento_listNewBlock , & counts [ 0 ] )"	1420:4:41718:41784	7508666	5	True				
ANR	7508701	CallExpression	"Memento_appBlocks ( & memento . used , Memento_listNewBlock , & counts [ 0 ] )"		7508666	0					
ANR	7508702	Callee	Memento_appBlocks		7508666	0					
ANR	7508703	Identifier	Memento_appBlocks		7508666	0					
ANR	7508704	ArgumentList	& memento . used		7508666	1					
ANR	7508705	Argument	& memento . used		7508666	0					
ANR	7508706	UnaryOperationExpression	& memento . used		7508666	0					
ANR	7508707	UnaryOperator	&		7508666	0					
ANR	7508708	MemberAccess	memento . used		7508666	1					
ANR	7508709	Identifier	memento		7508666	0					
ANR	7508710	Identifier	used		7508666	1					
ANR	7508711	Argument	Memento_listNewBlock		7508666	1					
ANR	7508712	Identifier	Memento_listNewBlock		7508666	0					
ANR	7508713	Argument	& counts [ 0 ]		7508666	2					
ANR	7508714	UnaryOperationExpression	& counts [ 0 ]		7508666	0					
ANR	7508715	UnaryOperator	&		7508666	0					
ANR	7508716	ArrayIndexing	counts [ 0 ]		7508666	1					
ANR	7508717	Identifier	counts		7508666	0					
ANR	7508718	PrimaryExpression	0		7508666	1					
ANR	7508719	ExpressionStatement	"fprintf ( stderr , ""  Total number of blocks = %d\\n"" , counts [ 0 ] )"	1421:4:41790:41851	7508666	6	True				
ANR	7508720	CallExpression	"fprintf ( stderr , ""  Total number of blocks = %d\\n"" , counts [ 0 ] )"		7508666	0					
ANR	7508721	Callee	fprintf		7508666	0					
ANR	7508722	Identifier	fprintf		7508666	0					
ANR	7508723	ArgumentList	stderr		7508666	1					
ANR	7508724	Argument	stderr		7508666	0					
ANR	7508725	Identifier	stderr		7508666	0					
ANR	7508726	Argument	"""  Total number of blocks = %d\\n"""		7508666	1					
ANR	7508727	PrimaryExpression	"""  Total number of blocks = %d\\n"""		7508666	0					
ANR	7508728	Argument	counts [ 0 ]		7508666	2					
ANR	7508729	ArrayIndexing	counts [ 0 ]		7508666	0					
ANR	7508730	Identifier	counts		7508666	0					
ANR	7508731	PrimaryExpression	0		7508666	1					
ANR	7508732	ExpressionStatement	"fprintf ( stderr , ""  Total size of blocks = %d\\n"" , counts [ 1 ] )"	1422:4:41857:41916	7508666	7	True				
ANR	7508733	CallExpression	"fprintf ( stderr , ""  Total size of blocks = %d\\n"" , counts [ 1 ] )"		7508666	0					
ANR	7508734	Callee	fprintf		7508666	0					
ANR	7508735	Identifier	fprintf		7508666	0					
ANR	7508736	ArgumentList	stderr		7508666	1					
ANR	7508737	Argument	stderr		7508666	0					
ANR	7508738	Identifier	stderr		7508666	0					
ANR	7508739	Argument	"""  Total size of blocks = %d\\n"""		7508666	1					
ANR	7508740	PrimaryExpression	"""  Total size of blocks = %d\\n"""		7508666	0					
ANR	7508741	Argument	counts [ 1 ]		7508666	2					
ANR	7508742	ArrayIndexing	counts [ 1 ]		7508666	0					
ANR	7508743	Identifier	counts		7508666	0					
ANR	7508744	PrimaryExpression	1		7508666	1					
ANR	7508745	ExpressionStatement	MEMENTO_UNLOCK ( )	1423:4:41922:41938	7508666	8	True				
ANR	7508746	CallExpression	MEMENTO_UNLOCK ( )		7508666	0					
ANR	7508747	Callee	MEMENTO_UNLOCK		7508666	0					
ANR	7508748	Identifier	MEMENTO_UNLOCK		7508666	0					
ANR	7508749	ArgumentList			7508666	1					
ANR	7508750	ReturnType	void		7508666	1					
ANR	7508751	Identifier	Memento_listNewBlocks		7508666	2					
ANR	7508752	ParameterList			7508666	3					
ANR	7508753	CFGEntryNode	ENTRY		7508666		True				
ANR	7508754	CFGExitNode	EXIT		7508666		True				
ANR	7508755	Symbol	* counts		7508666						
ANR	7508756	Symbol	Memento_listNewBlock		7508666						
ANR	7508757	Symbol	& memento		7508666						
ANR	7508758	Symbol	counts		7508666						
ANR	7508759	Symbol	& memento . used		7508666						
ANR	7508760	Symbol	memento		7508666						
ANR	7508761	Symbol	stderr		7508666						
ANR	7508762	Function	Memento_endStats	1426:0:41943:42493							
ANR	7508763	FunctionDef	Memento_endStats ()		7508762	0					
ANR	7508764	CompoundStatement		1427:0:41978:42493	7508762	0					
ANR	7508765	ExpressionStatement	"fprintf ( stderr , ""Total memory malloced = %u bytes\\n"" , ( unsigned int ) memento . totalAlloc )"	1428:4:41984:42071	7508762	0	True				
ANR	7508766	CallExpression	"fprintf ( stderr , ""Total memory malloced = %u bytes\\n"" , ( unsigned int ) memento . totalAlloc )"		7508762	0					
ANR	7508767	Callee	fprintf		7508762	0					
ANR	7508768	Identifier	fprintf		7508762	0					
ANR	7508769	ArgumentList	stderr		7508762	1					
ANR	7508770	Argument	stderr		7508762	0					
ANR	7508771	Identifier	stderr		7508762	0					
ANR	7508772	Argument	"""Total memory malloced = %u bytes\\n"""		7508762	1					
ANR	7508773	PrimaryExpression	"""Total memory malloced = %u bytes\\n"""		7508762	0					
ANR	7508774	Argument	( unsigned int ) memento . totalAlloc		7508762	2					
ANR	7508775	CastExpression	( unsigned int ) memento . totalAlloc		7508762	0					
ANR	7508776	CastTarget	unsigned int		7508762	0					
ANR	7508777	MemberAccess	memento . totalAlloc		7508762	1					
ANR	7508778	Identifier	memento		7508762	0					
ANR	7508779	Identifier	totalAlloc		7508762	1					
ANR	7508780	ExpressionStatement	"fprintf ( stderr , ""Peak memory malloced = %u bytes\\n"" , ( unsigned int ) memento . peakAlloc )"	1429:4:42077:42162	7508762	1	True				
ANR	7508781	CallExpression	"fprintf ( stderr , ""Peak memory malloced = %u bytes\\n"" , ( unsigned int ) memento . peakAlloc )"		7508762	0					
ANR	7508782	Callee	fprintf		7508762	0					
ANR	7508783	Identifier	fprintf		7508762	0					
ANR	7508784	ArgumentList	stderr		7508762	1					
ANR	7508785	Argument	stderr		7508762	0					
ANR	7508786	Identifier	stderr		7508762	0					
ANR	7508787	Argument	"""Peak memory malloced = %u bytes\\n"""		7508762	1					
ANR	7508788	PrimaryExpression	"""Peak memory malloced = %u bytes\\n"""		7508762	0					
ANR	7508789	Argument	( unsigned int ) memento . peakAlloc		7508762	2					
ANR	7508790	CastExpression	( unsigned int ) memento . peakAlloc		7508762	0					
ANR	7508791	CastTarget	unsigned int		7508762	0					
ANR	7508792	MemberAccess	memento . peakAlloc		7508762	1					
ANR	7508793	Identifier	memento		7508762	0					
ANR	7508794	Identifier	peakAlloc		7508762	1					
ANR	7508795	ExpressionStatement	"fprintf ( stderr , ""%u mallocs, %u frees, %u reallocs\\n"" , ( unsigned int ) memento . numMallocs , ( unsigned int ) memento . numFrees , ( unsigned int ) memento . numReallocs )"	1430:4:42168:42335	7508762	2	True				
ANR	7508796	CallExpression	"fprintf ( stderr , ""%u mallocs, %u frees, %u reallocs\\n"" , ( unsigned int ) memento . numMallocs , ( unsigned int ) memento . numFrees , ( unsigned int ) memento . numReallocs )"		7508762	0					
ANR	7508797	Callee	fprintf		7508762	0					
ANR	7508798	Identifier	fprintf		7508762	0					
ANR	7508799	ArgumentList	stderr		7508762	1					
ANR	7508800	Argument	stderr		7508762	0					
ANR	7508801	Identifier	stderr		7508762	0					
ANR	7508802	Argument	"""%u mallocs, %u frees, %u reallocs\\n"""		7508762	1					
ANR	7508803	PrimaryExpression	"""%u mallocs, %u frees, %u reallocs\\n"""		7508762	0					
ANR	7508804	Argument	( unsigned int ) memento . numMallocs		7508762	2					
ANR	7508805	CastExpression	( unsigned int ) memento . numMallocs		7508762	0					
ANR	7508806	CastTarget	unsigned int		7508762	0					
ANR	7508807	MemberAccess	memento . numMallocs		7508762	1					
ANR	7508808	Identifier	memento		7508762	0					
ANR	7508809	Identifier	numMallocs		7508762	1					
ANR	7508810	Argument	( unsigned int ) memento . numFrees		7508762	3					
ANR	7508811	CastExpression	( unsigned int ) memento . numFrees		7508762	0					
ANR	7508812	CastTarget	unsigned int		7508762	0					
ANR	7508813	MemberAccess	memento . numFrees		7508762	1					
ANR	7508814	Identifier	memento		7508762	0					
ANR	7508815	Identifier	numFrees		7508762	1					
ANR	7508816	Argument	( unsigned int ) memento . numReallocs		7508762	4					
ANR	7508817	CastExpression	( unsigned int ) memento . numReallocs		7508762	0					
ANR	7508818	CastTarget	unsigned int		7508762	0					
ANR	7508819	MemberAccess	memento . numReallocs		7508762	1					
ANR	7508820	Identifier	memento		7508762	0					
ANR	7508821	Identifier	numReallocs		7508762	1					
ANR	7508822	ExpressionStatement	"fprintf ( stderr , ""Average allocation size %u bytes\\n"" , ( unsigned int ) ( memento . numMallocs != 0 ? memento . totalAlloc / memento . numMallocs : 0 ) )"	1432:4:42341:42491	7508762	3	True				
ANR	7508823	CallExpression	"fprintf ( stderr , ""Average allocation size %u bytes\\n"" , ( unsigned int ) ( memento . numMallocs != 0 ? memento . totalAlloc / memento . numMallocs : 0 ) )"		7508762	0					
ANR	7508824	Callee	fprintf		7508762	0					
ANR	7508825	Identifier	fprintf		7508762	0					
ANR	7508826	ArgumentList	stderr		7508762	1					
ANR	7508827	Argument	stderr		7508762	0					
ANR	7508828	Identifier	stderr		7508762	0					
ANR	7508829	Argument	"""Average allocation size %u bytes\\n"""		7508762	1					
ANR	7508830	PrimaryExpression	"""Average allocation size %u bytes\\n"""		7508762	0					
ANR	7508831	Argument	( unsigned int ) ( memento . numMallocs != 0 ? memento . totalAlloc / memento . numMallocs : 0 )		7508762	2					
ANR	7508832	CastExpression	( unsigned int ) ( memento . numMallocs != 0 ? memento . totalAlloc / memento . numMallocs : 0 )		7508762	0					
ANR	7508833	CastTarget	unsigned int		7508762	0					
ANR	7508834	ConditionalExpression	memento . numMallocs != 0 ? memento . totalAlloc / memento . numMallocs : 0		7508762	1					
ANR	7508835	Condition	memento . numMallocs != 0		7508762	0					
ANR	7508836	EqualityExpression	memento . numMallocs != 0		7508762	0		!=			
ANR	7508837	MemberAccess	memento . numMallocs		7508762	0					
ANR	7508838	Identifier	memento		7508762	0					
ANR	7508839	Identifier	numMallocs		7508762	1					
ANR	7508840	PrimaryExpression	0		7508762	1					
ANR	7508841	MultiplicativeExpression	memento . totalAlloc / memento . numMallocs		7508762	1		/			
ANR	7508842	MemberAccess	memento . totalAlloc		7508762	0					
ANR	7508843	Identifier	memento		7508762	0					
ANR	7508844	Identifier	totalAlloc		7508762	1					
ANR	7508845	MemberAccess	memento . numMallocs		7508762	1					
ANR	7508846	Identifier	memento		7508762	0					
ANR	7508847	Identifier	numMallocs		7508762	1					
ANR	7508848	PrimaryExpression	0		7508762	2					
ANR	7508849	ReturnType	static void		7508762	1					
ANR	7508850	Identifier	Memento_endStats		7508762	2					
ANR	7508851	ParameterList			7508762	3					
ANR	7508852	CFGEntryNode	ENTRY		7508762		True				
ANR	7508853	CFGExitNode	EXIT		7508762		True				
ANR	7508854	Symbol	memento . peakAlloc		7508762						
ANR	7508855	Symbol	memento . numReallocs		7508762						
ANR	7508856	Symbol	memento . numMallocs		7508762						
ANR	7508857	Symbol	memento		7508762						
ANR	7508858	Symbol	memento . totalAlloc		7508762						
ANR	7508859	Symbol	memento . numFrees		7508762						
ANR	7508860	Symbol	stderr		7508762						
ANR	7508861	Function	Memento_stats	1436:0:42496:42679							
ANR	7508862	FunctionDef	Memento_stats ()		7508861	0					
ANR	7508863	CompoundStatement		1437:0:42521:42679	7508861	0					
ANR	7508864	ExpressionStatement	MEMENTO_LOCK ( )	1438:4:42527:42541	7508861	0	True				
ANR	7508865	CallExpression	MEMENTO_LOCK ( )		7508861	0					
ANR	7508866	Callee	MEMENTO_LOCK		7508861	0					
ANR	7508867	Identifier	MEMENTO_LOCK		7508861	0					
ANR	7508868	ArgumentList			7508861	1					
ANR	7508869	ExpressionStatement	"fprintf ( stderr , ""Current memory malloced = %u bytes\\n"" , ( unsigned int ) memento . alloc )"	1439:4:42547:42631	7508861	1	True				
ANR	7508870	CallExpression	"fprintf ( stderr , ""Current memory malloced = %u bytes\\n"" , ( unsigned int ) memento . alloc )"		7508861	0					
ANR	7508871	Callee	fprintf		7508861	0					
ANR	7508872	Identifier	fprintf		7508861	0					
ANR	7508873	ArgumentList	stderr		7508861	1					
ANR	7508874	Argument	stderr		7508861	0					
ANR	7508875	Identifier	stderr		7508861	0					
ANR	7508876	Argument	"""Current memory malloced = %u bytes\\n"""		7508861	1					
ANR	7508877	PrimaryExpression	"""Current memory malloced = %u bytes\\n"""		7508861	0					
ANR	7508878	Argument	( unsigned int ) memento . alloc		7508861	2					
ANR	7508879	CastExpression	( unsigned int ) memento . alloc		7508861	0					
ANR	7508880	CastTarget	unsigned int		7508861	0					
ANR	7508881	MemberAccess	memento . alloc		7508861	1					
ANR	7508882	Identifier	memento		7508861	0					
ANR	7508883	Identifier	alloc		7508861	1					
ANR	7508884	ExpressionStatement	Memento_endStats ( )	1440:4:42637:42655	7508861	2	True				
ANR	7508885	CallExpression	Memento_endStats ( )		7508861	0					
ANR	7508886	Callee	Memento_endStats		7508861	0					
ANR	7508887	Identifier	Memento_endStats		7508861	0					
ANR	7508888	ArgumentList			7508861	1					
ANR	7508889	ExpressionStatement	MEMENTO_UNLOCK ( )	1441:4:42661:42677	7508861	3	True				
ANR	7508890	CallExpression	MEMENTO_UNLOCK ( )		7508861	0					
ANR	7508891	Callee	MEMENTO_UNLOCK		7508861	0					
ANR	7508892	Identifier	MEMENTO_UNLOCK		7508861	0					
ANR	7508893	ArgumentList			7508861	1					
ANR	7508894	ReturnType	void		7508861	1					
ANR	7508895	Identifier	Memento_stats		7508861	2					
ANR	7508896	ParameterList			7508861	3					
ANR	7508897	CFGEntryNode	ENTRY		7508861		True				
ANR	7508898	CFGExitNode	EXIT		7508861		True				
ANR	7508899	Symbol	memento . alloc		7508861						
ANR	7508900	Symbol	memento		7508861						
ANR	7508901	Symbol	stderr		7508861						
ANR	7508902	Function	showInfo	1445:0:42705:43263							
ANR	7508903	FunctionDef	"showInfo (Memento_BlkHeader * b , void * arg)"		7508902	0					
ANR	7508904	CompoundStatement		1446:0:42758:43263	7508902	0					
ANR	7508905	IdentifierDeclStatement	Memento_BlkDetails * details ;	1447:4:42764:42791	7508902	0	True				
ANR	7508906	IdentifierDecl	* details		7508902	0					
ANR	7508907	IdentifierDeclType	Memento_BlkDetails *		7508902	0					
ANR	7508908	Identifier	details		7508902	1					
ANR	7508909	ExpressionStatement	"fprintf ( stderr , ""0x%p:(size=%d,num=%d)"" , MEMBLK_TOBLK ( b ) , ( int ) b -> rawsize , b -> sequence )"	1449:4:42798:42897	7508902	1	True				
ANR	7508910	CallExpression	"fprintf ( stderr , ""0x%p:(size=%d,num=%d)"" , MEMBLK_TOBLK ( b ) , ( int ) b -> rawsize , b -> sequence )"		7508902	0					
ANR	7508911	Callee	fprintf		7508902	0					
ANR	7508912	Identifier	fprintf		7508902	0					
ANR	7508913	ArgumentList	stderr		7508902	1					
ANR	7508914	Argument	stderr		7508902	0					
ANR	7508915	Identifier	stderr		7508902	0					
ANR	7508916	Argument	"""0x%p:(size=%d,num=%d)"""		7508902	1					
ANR	7508917	PrimaryExpression	"""0x%p:(size=%d,num=%d)"""		7508902	0					
ANR	7508918	Argument	MEMBLK_TOBLK ( b )		7508902	2					
ANR	7508919	CallExpression	MEMBLK_TOBLK ( b )		7508902	0					
ANR	7508920	Callee	MEMBLK_TOBLK		7508902	0					
ANR	7508921	Identifier	MEMBLK_TOBLK		7508902	0					
ANR	7508922	ArgumentList	b		7508902	1					
ANR	7508923	Argument	b		7508902	0					
ANR	7508924	Identifier	b		7508902	0					
ANR	7508925	Argument	( int ) b -> rawsize		7508902	3					
ANR	7508926	CastExpression	( int ) b -> rawsize		7508902	0					
ANR	7508927	CastTarget	int		7508902	0					
ANR	7508928	PtrMemberAccess	b -> rawsize		7508902	1					
ANR	7508929	Identifier	b		7508902	0					
ANR	7508930	Identifier	rawsize		7508902	1					
ANR	7508931	Argument	b -> sequence		7508902	4					
ANR	7508932	PtrMemberAccess	b -> sequence		7508902	0					
ANR	7508933	Identifier	b		7508902	0					
ANR	7508934	Identifier	sequence		7508902	1					
ANR	7508935	IfStatement	if ( b -> label )		7508902	2					
ANR	7508936	Condition	b -> label	1451:8:42907:42914	7508902	0	True				
ANR	7508937	PtrMemberAccess	b -> label		7508902	0					
ANR	7508938	Identifier	b		7508902	0					
ANR	7508939	Identifier	label		7508902	1					
ANR	7508940	ExpressionStatement	"fprintf ( stderr , "" (%s)"" , b -> label )"	1452:8:42925:42959	7508902	1	True				
ANR	7508941	CallExpression	"fprintf ( stderr , "" (%s)"" , b -> label )"		7508902	0					
ANR	7508942	Callee	fprintf		7508902	0					
ANR	7508943	Identifier	fprintf		7508902	0					
ANR	7508944	ArgumentList	stderr		7508902	1					
ANR	7508945	Argument	stderr		7508902	0					
ANR	7508946	Identifier	stderr		7508902	0					
ANR	7508947	Argument	""" (%s)"""		7508902	1					
ANR	7508948	PrimaryExpression	""" (%s)"""		7508902	0					
ANR	7508949	Argument	b -> label		7508902	2					
ANR	7508950	PtrMemberAccess	b -> label		7508902	0					
ANR	7508951	Identifier	b		7508902	0					
ANR	7508952	Identifier	label		7508902	1					
ANR	7508953	ExpressionStatement	"fprintf ( stderr , ""\\nEvents:\\n"" )"	1453:4:42965:42995	7508902	3	True				
ANR	7508954	CallExpression	"fprintf ( stderr , ""\\nEvents:\\n"" )"		7508902	0					
ANR	7508955	Callee	fprintf		7508902	0					
ANR	7508956	Identifier	fprintf		7508902	0					
ANR	7508957	ArgumentList	stderr		7508902	1					
ANR	7508958	Argument	stderr		7508902	0					
ANR	7508959	Identifier	stderr		7508902	0					
ANR	7508960	Argument	"""\\nEvents:\\n"""		7508902	1					
ANR	7508961	PrimaryExpression	"""\\nEvents:\\n"""		7508902	0					
ANR	7508962	ExpressionStatement	details = b -> details	1455:4:43002:43022	7508902	4	True				
ANR	7508963	AssignmentExpression	details = b -> details		7508902	0		=			
ANR	7508964	Identifier	details		7508902	0					
ANR	7508965	PtrMemberAccess	b -> details		7508902	1					
ANR	7508966	Identifier	b		7508902	0					
ANR	7508967	Identifier	details		7508902	1					
ANR	7508968	WhileStatement	while ( details )		7508902	5					
ANR	7508969	Condition	details	1456:11:43035:43041	7508902	0	True				
ANR	7508970	Identifier	details		7508902	0					
ANR	7508971	CompoundStatement		12:4:289:289	7508902	1					
ANR	7508972	ExpressionStatement	"fprintf ( stderr , ""  Event %d (%s)\\n"" , details -> sequence , eventType [ ( int ) details -> type ] )"	1458:8:43058:43144	7508902	0	True				
ANR	7508973	CallExpression	"fprintf ( stderr , ""  Event %d (%s)\\n"" , details -> sequence , eventType [ ( int ) details -> type ] )"		7508902	0					
ANR	7508974	Callee	fprintf		7508902	0					
ANR	7508975	Identifier	fprintf		7508902	0					
ANR	7508976	ArgumentList	stderr		7508902	1					
ANR	7508977	Argument	stderr		7508902	0					
ANR	7508978	Identifier	stderr		7508902	0					
ANR	7508979	Argument	"""  Event %d (%s)\\n"""		7508902	1					
ANR	7508980	PrimaryExpression	"""  Event %d (%s)\\n"""		7508902	0					
ANR	7508981	Argument	details -> sequence		7508902	2					
ANR	7508982	PtrMemberAccess	details -> sequence		7508902	0					
ANR	7508983	Identifier	details		7508902	0					
ANR	7508984	Identifier	sequence		7508902	1					
ANR	7508985	Argument	eventType [ ( int ) details -> type ]		7508902	3					
ANR	7508986	ArrayIndexing	eventType [ ( int ) details -> type ]		7508902	0					
ANR	7508987	Identifier	eventType		7508902	0					
ANR	7508988	CastExpression	( int ) details -> type		7508902	1					
ANR	7508989	CastTarget	int		7508902	0					
ANR	7508990	PtrMemberAccess	details -> type		7508902	1					
ANR	7508991	Identifier	details		7508902	0					
ANR	7508992	Identifier	type		7508902	1					
ANR	7508993	ExpressionStatement	"Memento_showStacktrace ( details -> stack , details -> count )"	1459:8:43154:43208	7508902	1	True				
ANR	7508994	CallExpression	"Memento_showStacktrace ( details -> stack , details -> count )"		7508902	0					
ANR	7508995	Callee	Memento_showStacktrace		7508902	0					
ANR	7508996	Identifier	Memento_showStacktrace		7508902	0					
ANR	7508997	ArgumentList	details -> stack		7508902	1					
ANR	7508998	Argument	details -> stack		7508902	0					
ANR	7508999	PtrMemberAccess	details -> stack		7508902	0					
ANR	7509000	Identifier	details		7508902	0					
ANR	7509001	Identifier	stack		7508902	1					
ANR	7509002	Argument	details -> count		7508902	1					
ANR	7509003	PtrMemberAccess	details -> count		7508902	0					
ANR	7509004	Identifier	details		7508902	0					
ANR	7509005	Identifier	count		7508902	1					
ANR	7509006	ExpressionStatement	details = details -> next	1460:8:43218:43241	7508902	2	True				
ANR	7509007	AssignmentExpression	details = details -> next		7508902	0		=			
ANR	7509008	Identifier	details		7508902	0					
ANR	7509009	PtrMemberAccess	details -> next		7508902	1					
ANR	7509010	Identifier	details		7508902	0					
ANR	7509011	Identifier	next		7508902	1					
ANR	7509012	ReturnStatement	return 0 ;	1462:4:43253:43261	7508902	6	True				
ANR	7509013	PrimaryExpression	0		7508902	0					
ANR	7509014	ReturnType	static int		7508902	1					
ANR	7509015	Identifier	showInfo		7508902	2					
ANR	7509016	ParameterList	"Memento_BlkHeader * b , void * arg"		7508902	3					
ANR	7509017	Parameter	Memento_BlkHeader * b	1445:20:42725:42744	7508902	0	True				
ANR	7509018	ParameterType	Memento_BlkHeader *		7508902	0					
ANR	7509019	Identifier	b		7508902	1					
ANR	7509020	Parameter	void * arg	1445:42:42747:42755	7508902	1	True				
ANR	7509021	ParameterType	void *		7508902	0					
ANR	7509022	Identifier	arg		7508902	1					
ANR	7509023	CFGEntryNode	ENTRY		7508902		True				
ANR	7509024	CFGExitNode	EXIT		7508902		True				
ANR	7509025	Symbol	b -> details		7508902						
ANR	7509026	Symbol	b		7508902						
ANR	7509027	Symbol	details -> type		7508902						
ANR	7509028	Symbol	details -> stack		7508902						
ANR	7509029	Symbol	details -> sequence		7508902						
ANR	7509030	Symbol	details -> next		7508902						
ANR	7509031	Symbol	b -> sequence		7508902						
ANR	7509032	Symbol	eventType		7508902						
ANR	7509033	Symbol	* b		7508902						
ANR	7509034	Symbol	stderr		7508902						
ANR	7509035	Symbol	* eventType		7508902						
ANR	7509036	Symbol	MEMBLK_TOBLK		7508902						
ANR	7509037	Symbol	b -> rawsize		7508902						
ANR	7509038	Symbol	details -> count		7508902						
ANR	7509039	Symbol	* details		7508902						
ANR	7509040	Symbol	arg		7508902						
ANR	7509041	Symbol	details		7508902						
ANR	7509042	Symbol	* * details		7508902						
ANR	7509043	Symbol	* details -> type		7508902						
ANR	7509044	Symbol	b -> label		7508902						
ANR	7509045	Function	Memento_listBlockInfo	1466:0:43273:43489							
ANR	7509046	FunctionDef	Memento_listBlockInfo ()		7509045	0					
ANR	7509047	CompoundStatement		1467:0:43306:43489	7509045	0					
ANR	7509048	ExpressionStatement	MEMENTO_LOCK ( )	1469:4:43335:43349	7509045	0	True				
ANR	7509049	CallExpression	MEMENTO_LOCK ( )		7509045	0					
ANR	7509050	Callee	MEMENTO_LOCK		7509045	0					
ANR	7509051	Identifier	MEMENTO_LOCK		7509045	0					
ANR	7509052	ArgumentList			7509045	1					
ANR	7509053	ExpressionStatement	"fprintf ( stderr , ""Details of allocated blocks:\\n"" )"	1470:4:43355:43404	7509045	1	True				
ANR	7509054	CallExpression	"fprintf ( stderr , ""Details of allocated blocks:\\n"" )"		7509045	0					
ANR	7509055	Callee	fprintf		7509045	0					
ANR	7509056	Identifier	fprintf		7509045	0					
ANR	7509057	ArgumentList	stderr		7509045	1					
ANR	7509058	Argument	stderr		7509045	0					
ANR	7509059	Identifier	stderr		7509045	0					
ANR	7509060	Argument	"""Details of allocated blocks:\\n"""		7509045	1					
ANR	7509061	PrimaryExpression	"""Details of allocated blocks:\\n"""		7509045	0					
ANR	7509062	ExpressionStatement	"Memento_appBlocks ( & memento . used , showInfo , NULL )"	1471:4:43410:43458	7509045	2	True				
ANR	7509063	CallExpression	"Memento_appBlocks ( & memento . used , showInfo , NULL )"		7509045	0					
ANR	7509064	Callee	Memento_appBlocks		7509045	0					
ANR	7509065	Identifier	Memento_appBlocks		7509045	0					
ANR	7509066	ArgumentList	& memento . used		7509045	1					
ANR	7509067	Argument	& memento . used		7509045	0					
ANR	7509068	UnaryOperationExpression	& memento . used		7509045	0					
ANR	7509069	UnaryOperator	&		7509045	0					
ANR	7509070	MemberAccess	memento . used		7509045	1					
ANR	7509071	Identifier	memento		7509045	0					
ANR	7509072	Identifier	used		7509045	1					
ANR	7509073	Argument	showInfo		7509045	1					
ANR	7509074	Identifier	showInfo		7509045	0					
ANR	7509075	Argument	NULL		7509045	2					
ANR	7509076	Identifier	NULL		7509045	0					
ANR	7509077	ExpressionStatement	MEMENTO_UNLOCK ( )	1472:4:43464:43480	7509045	3	True				
ANR	7509078	CallExpression	MEMENTO_UNLOCK ( )		7509045	0					
ANR	7509079	Callee	MEMENTO_UNLOCK		7509045	0					
ANR	7509080	Identifier	MEMENTO_UNLOCK		7509045	0					
ANR	7509081	ArgumentList			7509045	1					
ANR	7509082	ReturnType	void		7509045	1					
ANR	7509083	Identifier	Memento_listBlockInfo		7509045	2					
ANR	7509084	ParameterList			7509045	3					
ANR	7509085	CFGEntryNode	ENTRY		7509045		True				
ANR	7509086	CFGExitNode	EXIT		7509045		True				
ANR	7509087	Symbol	& memento		7509045						
ANR	7509088	Symbol	NULL		7509045						
ANR	7509089	Symbol	showInfo		7509045						
ANR	7509090	Symbol	& memento . used		7509045						
ANR	7509091	Symbol	memento		7509045						
ANR	7509092	Symbol	stderr		7509045						
ANR	7509093	Function	Memento_nonLeakBlocksLeaked	1476:0:43492:43732							
ANR	7509094	FunctionDef	Memento_nonLeakBlocksLeaked ()		7509093	0					
ANR	7509095	CompoundStatement		1477:0:43537:43732	7509093	0					
ANR	7509096	IdentifierDeclStatement	Memento_BlkHeader * blk = memento . used . head ;	1478:4:43543:43585	7509093	0	True				
ANR	7509097	IdentifierDecl	* blk = memento . used . head		7509093	0					
ANR	7509098	IdentifierDeclType	Memento_BlkHeader *		7509093	0					
ANR	7509099	Identifier	blk		7509093	1					
ANR	7509100	AssignmentExpression	* blk = memento . used . head		7509093	2		=			
ANR	7509101	Identifier	blk		7509093	0					
ANR	7509102	MemberAccess	memento . used . head		7509093	1					
ANR	7509103	MemberAccess	memento . used		7509093	0					
ANR	7509104	Identifier	memento		7509093	0					
ANR	7509105	Identifier	used		7509093	1					
ANR	7509106	Identifier	head		7509093	1					
ANR	7509107	WhileStatement	while ( blk )		7509093	1					
ANR	7509108	Condition	blk	1479:11:43598:43600	7509093	0	True				
ANR	7509109	Identifier	blk		7509093	0					
ANR	7509110	CompoundStatement		4:4:69:69	7509093	1					
ANR	7509111	IfStatement	if ( ( blk -> flags & Memento_Flag_KnownLeak ) == 0 )		7509093	0					
ANR	7509112	Condition	( blk -> flags & Memento_Flag_KnownLeak ) == 0	1481:12:43621:43662	7509093	0	True				
ANR	7509113	EqualityExpression	( blk -> flags & Memento_Flag_KnownLeak ) == 0		7509093	0		==			
ANR	7509114	BitAndExpression	blk -> flags & Memento_Flag_KnownLeak		7509093	0		&			
ANR	7509115	PtrMemberAccess	blk -> flags		7509093	0					
ANR	7509116	Identifier	blk		7509093	0					
ANR	7509117	Identifier	flags		7509093	1					
ANR	7509118	Identifier	Memento_Flag_KnownLeak		7509093	1					
ANR	7509119	PrimaryExpression	0		7509093	1					
ANR	7509120	ReturnStatement	return 1 ;	1482:12:43677:43685	7509093	1	True				
ANR	7509121	PrimaryExpression	1		7509093	0					
ANR	7509122	ExpressionStatement	blk = blk -> next	1483:8:43695:43710	7509093	1	True				
ANR	7509123	AssignmentExpression	blk = blk -> next		7509093	0		=			
ANR	7509124	Identifier	blk		7509093	0					
ANR	7509125	PtrMemberAccess	blk -> next		7509093	1					
ANR	7509126	Identifier	blk		7509093	0					
ANR	7509127	Identifier	next		7509093	1					
ANR	7509128	ReturnStatement	return 0 ;	1485:4:43722:43730	7509093	2	True				
ANR	7509129	PrimaryExpression	0		7509093	0					
ANR	7509130	ReturnType	static int		7509093	1					
ANR	7509131	Identifier	Memento_nonLeakBlocksLeaked		7509093	2					
ANR	7509132	ParameterList			7509093	3					
ANR	7509133	CFGEntryNode	ENTRY		7509093		True				
ANR	7509134	CFGExitNode	EXIT		7509093		True				
ANR	7509135	Symbol	blk		7509093						
ANR	7509136	Symbol	blk -> next		7509093						
ANR	7509137	Symbol	Memento_Flag_KnownLeak		7509093						
ANR	7509138	Symbol	memento . used . head		7509093						
ANR	7509139	Symbol	* blk		7509093						
ANR	7509140	Symbol	memento . used		7509093						
ANR	7509141	Symbol	blk -> flags		7509093						
ANR	7509142	Symbol	memento		7509093						
ANR	7509143	Function	Memento_fin	1488:0:43735:44892							
ANR	7509144	FunctionDef	Memento_fin ()		7509143	0					
ANR	7509145	CompoundStatement		1489:0:43758:44892	7509143	0					
ANR	7509146	ExpressionStatement	Memento_checkAllMemory ( )	1490:4:43764:43788	7509143	0	True				
ANR	7509147	CallExpression	Memento_checkAllMemory ( )		7509143	0					
ANR	7509148	Callee	Memento_checkAllMemory		7509143	0					
ANR	7509149	Identifier	Memento_checkAllMemory		7509143	0					
ANR	7509150	ArgumentList			7509143	1					
ANR	7509151	IfStatement	if ( ! memento . segv )		7509143	1					
ANR	7509152	Condition	! memento . segv	1491:8:43798:43810	7509143	0	True				
ANR	7509153	UnaryOperationExpression	! memento . segv		7509143	0					
ANR	7509154	UnaryOperator	!		7509143	0					
ANR	7509155	MemberAccess	memento . segv		7509143	1					
ANR	7509156	Identifier	memento		7509143	0					
ANR	7509157	Identifier	segv		7509143	1					
ANR	7509158	CompoundStatement		4:4:58:58	7509143	1					
ANR	7509159	ExpressionStatement	Memento_endStats ( )	1493:8:43827:43845	7509143	0	True				
ANR	7509160	CallExpression	Memento_endStats ( )		7509143	0					
ANR	7509161	Callee	Memento_endStats		7509143	0					
ANR	7509162	Identifier	Memento_endStats		7509143	0					
ANR	7509163	ArgumentList			7509143	1					
ANR	7509164	IfStatement	if ( Memento_nonLeakBlocksLeaked ( ) )		7509143	1					
ANR	7509165	Condition	Memento_nonLeakBlocksLeaked ( )	1494:12:43859:43887	7509143	0	True				
ANR	7509166	CallExpression	Memento_nonLeakBlocksLeaked ( )		7509143	0					
ANR	7509167	Callee	Memento_nonLeakBlocksLeaked		7509143	0					
ANR	7509168	Identifier	Memento_nonLeakBlocksLeaked		7509143	0					
ANR	7509169	ArgumentList			7509143	1					
ANR	7509170	CompoundStatement		6:43:131:131	7509143	1					
ANR	7509171	ExpressionStatement	Memento_listBlocks ( )	1495:12:43904:43924	7509143	0	True				
ANR	7509172	CallExpression	Memento_listBlocks ( )		7509143	0					
ANR	7509173	Callee	Memento_listBlocks		7509143	0					
ANR	7509174	Identifier	Memento_listBlocks		7509143	0					
ANR	7509175	ArgumentList			7509143	1					
ANR	7509176	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	1497:12:43961:43982	7509143	1	True				
ANR	7509177	CallExpression	"fprintf ( stderr , ""\\n"" )"		7509143	0					
ANR	7509178	Callee	fprintf		7509143	0					
ANR	7509179	Identifier	fprintf		7509143	0					
ANR	7509180	ArgumentList	stderr		7509143	1					
ANR	7509181	Argument	stderr		7509143	0					
ANR	7509182	Identifier	stderr		7509143	0					
ANR	7509183	Argument	"""\\n"""		7509143	1					
ANR	7509184	PrimaryExpression	"""\\n"""		7509143	0					
ANR	7509185	ExpressionStatement	Memento_listBlockInfo ( )	1498:12:43996:44019	7509143	2	True				
ANR	7509186	CallExpression	Memento_listBlockInfo ( )		7509143	0					
ANR	7509187	Callee	Memento_listBlockInfo		7509143	0					
ANR	7509188	Identifier	Memento_listBlockInfo		7509143	0					
ANR	7509189	ArgumentList			7509143	1					
ANR	7509190	ExpressionStatement	Memento_breakpoint ( )	1500:12:44040:44060	7509143	3	True				
ANR	7509191	CallExpression	Memento_breakpoint ( )		7509143	0					
ANR	7509192	Callee	Memento_breakpoint		7509143	0					
ANR	7509193	Identifier	Memento_breakpoint		7509143	0					
ANR	7509194	ArgumentList			7509143	1					
ANR	7509195	IfStatement	if ( memento . squeezing )		7509143	2					
ANR	7509196	Condition	memento . squeezing	1503:8:44079:44095	7509143	0	True				
ANR	7509197	MemberAccess	memento . squeezing		7509143	0					
ANR	7509198	Identifier	memento		7509143	0					
ANR	7509199	Identifier	squeezing		7509143	1					
ANR	7509200	CompoundStatement		15:27:339:339	7509143	1					
ANR	7509201	IfStatement	if ( memento . pattern == 0 )		7509143	0					
ANR	7509202	Condition	memento . pattern == 0	1504:12:44112:44131	7509143	0	True				
ANR	7509203	EqualityExpression	memento . pattern == 0		7509143	0		==			
ANR	7509204	MemberAccess	memento . pattern		7509143	0					
ANR	7509205	Identifier	memento		7509143	0					
ANR	7509206	Identifier	pattern		7509143	1					
ANR	7509207	PrimaryExpression	0		7509143	1					
ANR	7509208	ExpressionStatement	"fprintf ( stderr , ""Memory squeezing @ %d complete%s\\n"" , memento . squeezeAt , memento . segv ? "" (with SEGV)"" : """" )"	1505:12:44146:44254	7509143	1	True				
ANR	7509209	CallExpression	"fprintf ( stderr , ""Memory squeezing @ %d complete%s\\n"" , memento . squeezeAt , memento . segv ? "" (with SEGV)"" : """" )"		7509143	0					
ANR	7509210	Callee	fprintf		7509143	0					
ANR	7509211	Identifier	fprintf		7509143	0					
ANR	7509212	ArgumentList	stderr		7509143	1					
ANR	7509213	Argument	stderr		7509143	0					
ANR	7509214	Identifier	stderr		7509143	0					
ANR	7509215	Argument	"""Memory squeezing @ %d complete%s\\n"""		7509143	1					
ANR	7509216	PrimaryExpression	"""Memory squeezing @ %d complete%s\\n"""		7509143	0					
ANR	7509217	Argument	memento . squeezeAt		7509143	2					
ANR	7509218	MemberAccess	memento . squeezeAt		7509143	0					
ANR	7509219	Identifier	memento		7509143	0					
ANR	7509220	Identifier	squeezeAt		7509143	1					
ANR	7509221	Argument	"memento . segv ? "" (with SEGV)"" : """""		7509143	3					
ANR	7509222	ConditionalExpression	"memento . segv ? "" (with SEGV)"" : """""		7509143	0					
ANR	7509223	Condition	memento . segv		7509143	0					
ANR	7509224	MemberAccess	memento . segv		7509143	0					
ANR	7509225	Identifier	memento		7509143	0					
ANR	7509226	Identifier	segv		7509143	1					
ANR	7509227	PrimaryExpression	""" (with SEGV)"""		7509143	1					
ANR	7509228	PrimaryExpression	""""""		7509143	2					
ANR	7509229	ElseStatement	else		7509143	0					
ANR	7509230	ExpressionStatement	"fprintf ( stderr , ""Memory squeezing @ %d (%d) complete%s\\n"" , memento . squeezeAt , memento . pattern , memento . segv ? "" (with SEGV)"" : """" )"	1507:12:44281:44411	7509143	0	True				
ANR	7509231	CallExpression	"fprintf ( stderr , ""Memory squeezing @ %d (%d) complete%s\\n"" , memento . squeezeAt , memento . pattern , memento . segv ? "" (with SEGV)"" : """" )"		7509143	0					
ANR	7509232	Callee	fprintf		7509143	0					
ANR	7509233	Identifier	fprintf		7509143	0					
ANR	7509234	ArgumentList	stderr		7509143	1					
ANR	7509235	Argument	stderr		7509143	0					
ANR	7509236	Identifier	stderr		7509143	0					
ANR	7509237	Argument	"""Memory squeezing @ %d (%d) complete%s\\n"""		7509143	1					
ANR	7509238	PrimaryExpression	"""Memory squeezing @ %d (%d) complete%s\\n"""		7509143	0					
ANR	7509239	Argument	memento . squeezeAt		7509143	2					
ANR	7509240	MemberAccess	memento . squeezeAt		7509143	0					
ANR	7509241	Identifier	memento		7509143	0					
ANR	7509242	Identifier	squeezeAt		7509143	1					
ANR	7509243	Argument	memento . pattern		7509143	3					
ANR	7509244	MemberAccess	memento . pattern		7509143	0					
ANR	7509245	Identifier	memento		7509143	0					
ANR	7509246	Identifier	pattern		7509143	1					
ANR	7509247	Argument	"memento . segv ? "" (with SEGV)"" : """""		7509143	4					
ANR	7509248	ConditionalExpression	"memento . segv ? "" (with SEGV)"" : """""		7509143	0					
ANR	7509249	Condition	memento . segv		7509143	0					
ANR	7509250	MemberAccess	memento . segv		7509143	0					
ANR	7509251	Identifier	memento		7509143	0					
ANR	7509252	Identifier	segv		7509143	1					
ANR	7509253	PrimaryExpression	""" (with SEGV)"""		7509143	1					
ANR	7509254	PrimaryExpression	""""""		7509143	2					
ANR	7509255	ElseStatement	else		7509143	0					
ANR	7509256	IfStatement	if ( memento . segv )		7509143	0					
ANR	7509257	Condition	memento . segv	1508:15:44428:44439	7509143	0	True				
ANR	7509258	MemberAccess	memento . segv		7509143	0					
ANR	7509259	Identifier	memento		7509143	0					
ANR	7509260	Identifier	segv		7509143	1					
ANR	7509261	CompoundStatement		20:29:683:683	7509143	1					
ANR	7509262	ExpressionStatement	"fprintf ( stderr , ""Memory squeezing complete (with SEGV)\\n"" , memento . failAt )"	1509:8:44452:44526	7509143	0	True				
ANR	7509263	CallExpression	"fprintf ( stderr , ""Memory squeezing complete (with SEGV)\\n"" , memento . failAt )"		7509143	0					
ANR	7509264	Callee	fprintf		7509143	0					
ANR	7509265	Identifier	fprintf		7509143	0					
ANR	7509266	ArgumentList	stderr		7509143	1					
ANR	7509267	Argument	stderr		7509143	0					
ANR	7509268	Identifier	stderr		7509143	0					
ANR	7509269	Argument	"""Memory squeezing complete (with SEGV)\\n"""		7509143	1					
ANR	7509270	PrimaryExpression	"""Memory squeezing complete (with SEGV)\\n"""		7509143	0					
ANR	7509271	Argument	memento . failAt		7509143	2					
ANR	7509272	MemberAccess	memento . failAt		7509143	0					
ANR	7509273	Identifier	memento		7509143	0					
ANR	7509274	Identifier	failAt		7509143	1					
ANR	7509275	IfStatement	if ( memento . failing )		7509143	3					
ANR	7509276	Condition	memento . failing	1511:8:44542:44556	7509143	0	True				
ANR	7509277	MemberAccess	memento . failing		7509143	0					
ANR	7509278	Identifier	memento		7509143	0					
ANR	7509279	Identifier	failing		7509143	1					
ANR	7509280	CompoundStatement		24:4:804:804	7509143	1					
ANR	7509281	ExpressionStatement	"fprintf ( stderr , ""MEMENTO_FAILAT=%d\\n"" , memento . failAt )"	1513:8:44573:44627	7509143	0	True				
ANR	7509282	CallExpression	"fprintf ( stderr , ""MEMENTO_FAILAT=%d\\n"" , memento . failAt )"		7509143	0					
ANR	7509283	Callee	fprintf		7509143	0					
ANR	7509284	Identifier	fprintf		7509143	0					
ANR	7509285	ArgumentList	stderr		7509143	1					
ANR	7509286	Argument	stderr		7509143	0					
ANR	7509287	Identifier	stderr		7509143	0					
ANR	7509288	Argument	"""MEMENTO_FAILAT=%d\\n"""		7509143	1					
ANR	7509289	PrimaryExpression	"""MEMENTO_FAILAT=%d\\n"""		7509143	0					
ANR	7509290	Argument	memento . failAt		7509143	2					
ANR	7509291	MemberAccess	memento . failAt		7509143	0					
ANR	7509292	Identifier	memento		7509143	0					
ANR	7509293	Identifier	failAt		7509143	1					
ANR	7509294	ExpressionStatement	"fprintf ( stderr , ""MEMENTO_PATTERN=%d\\n"" , memento . pattern )"	1514:8:44637:44693	7509143	1	True				
ANR	7509295	CallExpression	"fprintf ( stderr , ""MEMENTO_PATTERN=%d\\n"" , memento . pattern )"		7509143	0					
ANR	7509296	Callee	fprintf		7509143	0					
ANR	7509297	Identifier	fprintf		7509143	0					
ANR	7509298	ArgumentList	stderr		7509143	1					
ANR	7509299	Argument	stderr		7509143	0					
ANR	7509300	Identifier	stderr		7509143	0					
ANR	7509301	Argument	"""MEMENTO_PATTERN=%d\\n"""		7509143	1					
ANR	7509302	PrimaryExpression	"""MEMENTO_PATTERN=%d\\n"""		7509143	0					
ANR	7509303	Argument	memento . pattern		7509143	2					
ANR	7509304	MemberAccess	memento . pattern		7509143	0					
ANR	7509305	Identifier	memento		7509143	0					
ANR	7509306	Identifier	pattern		7509143	1					
ANR	7509307	IfStatement	if ( memento . nextFailAt != 0 )		7509143	4					
ANR	7509308	Condition	memento . nextFailAt != 0	1516:8:44709:44731	7509143	0	True				
ANR	7509309	EqualityExpression	memento . nextFailAt != 0		7509143	0		!=			
ANR	7509310	MemberAccess	memento . nextFailAt		7509143	0					
ANR	7509311	Identifier	memento		7509143	0					
ANR	7509312	Identifier	nextFailAt		7509143	1					
ANR	7509313	PrimaryExpression	0		7509143	1					
ANR	7509314	CompoundStatement		29:4:979:979	7509143	1					
ANR	7509315	ExpressionStatement	"fprintf ( stderr , ""MEMENTO_NEXTFAILAT=%d\\n"" , memento . nextFailAt )"	1518:8:44748:44810	7509143	0	True				
ANR	7509316	CallExpression	"fprintf ( stderr , ""MEMENTO_NEXTFAILAT=%d\\n"" , memento . nextFailAt )"		7509143	0					
ANR	7509317	Callee	fprintf		7509143	0					
ANR	7509318	Identifier	fprintf		7509143	0					
ANR	7509319	ArgumentList	stderr		7509143	1					
ANR	7509320	Argument	stderr		7509143	0					
ANR	7509321	Identifier	stderr		7509143	0					
ANR	7509322	Argument	"""MEMENTO_NEXTFAILAT=%d\\n"""		7509143	1					
ANR	7509323	PrimaryExpression	"""MEMENTO_NEXTFAILAT=%d\\n"""		7509143	0					
ANR	7509324	Argument	memento . nextFailAt		7509143	2					
ANR	7509325	MemberAccess	memento . nextFailAt		7509143	0					
ANR	7509326	Identifier	memento		7509143	0					
ANR	7509327	Identifier	nextFailAt		7509143	1					
ANR	7509328	ExpressionStatement	"fprintf ( stderr , ""MEMENTO_NEXTPATTERN=%d\\n"" , memento . nextPattern )"	1519:8:44820:44884	7509143	1	True				
ANR	7509329	CallExpression	"fprintf ( stderr , ""MEMENTO_NEXTPATTERN=%d\\n"" , memento . nextPattern )"		7509143	0					
ANR	7509330	Callee	fprintf		7509143	0					
ANR	7509331	Identifier	fprintf		7509143	0					
ANR	7509332	ArgumentList	stderr		7509143	1					
ANR	7509333	Argument	stderr		7509143	0					
ANR	7509334	Identifier	stderr		7509143	0					
ANR	7509335	Argument	"""MEMENTO_NEXTPATTERN=%d\\n"""		7509143	1					
ANR	7509336	PrimaryExpression	"""MEMENTO_NEXTPATTERN=%d\\n"""		7509143	0					
ANR	7509337	Argument	memento . nextPattern		7509143	2					
ANR	7509338	MemberAccess	memento . nextPattern		7509143	0					
ANR	7509339	Identifier	memento		7509143	0					
ANR	7509340	Identifier	nextPattern		7509143	1					
ANR	7509341	ReturnType	void		7509143	1					
ANR	7509342	Identifier	Memento_fin		7509143	2					
ANR	7509343	ParameterList			7509143	3					
ANR	7509344	CFGEntryNode	ENTRY		7509143		True				
ANR	7509345	CFGExitNode	EXIT		7509143		True				
ANR	7509346	Symbol	Memento_nonLeakBlocksLeaked		7509143						
ANR	7509347	Symbol	memento . squeezeAt		7509143						
ANR	7509348	Symbol	memento . failAt		7509143						
ANR	7509349	Symbol	memento . failing		7509143						
ANR	7509350	Symbol	memento . nextPattern		7509143						
ANR	7509351	Symbol	memento		7509143						
ANR	7509352	Symbol	memento . segv		7509143						
ANR	7509353	Symbol	stderr		7509143						
ANR	7509354	Symbol	memento . pattern		7509143						
ANR	7509355	Symbol	memento . nextFailAt		7509143						
ANR	7509356	Symbol	memento . squeezing		7509143						
ANR	7509357	Function	Memento_init	1523:0:44895:45891							
ANR	7509358	FunctionDef	Memento_init ()		7509357	0					
ANR	7509359	CompoundStatement		1524:0:44926:45891	7509357	0					
ANR	7509360	IdentifierDeclStatement	char * env ;	1525:4:44932:44941	7509357	0	True				
ANR	7509361	IdentifierDecl	* env		7509357	0					
ANR	7509362	IdentifierDeclType	char *		7509357	0					
ANR	7509363	Identifier	env		7509357	1					
ANR	7509364	ExpressionStatement	"memset ( & memento , 0 , sizeof ( memento ) )"	1526:4:44947:44983	7509357	1	True				
ANR	7509365	CallExpression	"memset ( & memento , 0 , sizeof ( memento ) )"		7509357	0					
ANR	7509366	Callee	memset		7509357	0					
ANR	7509367	Identifier	memset		7509357	0					
ANR	7509368	ArgumentList	& memento		7509357	1					
ANR	7509369	Argument	& memento		7509357	0					
ANR	7509370	UnaryOperationExpression	& memento		7509357	0					
ANR	7509371	UnaryOperator	&		7509357	0					
ANR	7509372	Identifier	memento		7509357	1					
ANR	7509373	Argument	0		7509357	1					
ANR	7509374	PrimaryExpression	0		7509357	0					
ANR	7509375	Argument	sizeof ( memento )		7509357	2					
ANR	7509376	SizeofExpression	sizeof ( memento )		7509357	0					
ANR	7509377	Sizeof	sizeof		7509357	0					
ANR	7509378	SizeofOperand	memento		7509357	1					
ANR	7509379	ExpressionStatement	memento . inited = 1	1527:4:44989:45010	7509357	2	True				
ANR	7509380	AssignmentExpression	memento . inited = 1		7509357	0		=			
ANR	7509381	MemberAccess	memento . inited		7509357	0					
ANR	7509382	Identifier	memento		7509357	0					
ANR	7509383	Identifier	inited		7509357	1					
ANR	7509384	PrimaryExpression	1		7509357	1					
ANR	7509385	ExpressionStatement	memento . used . head = NULL	1528:4:45016:45040	7509357	3	True				
ANR	7509386	AssignmentExpression	memento . used . head = NULL		7509357	0		=			
ANR	7509387	MemberAccess	memento . used . head		7509357	0					
ANR	7509388	MemberAccess	memento . used		7509357	0					
ANR	7509389	Identifier	memento		7509357	0					
ANR	7509390	Identifier	used		7509357	1					
ANR	7509391	Identifier	head		7509357	1					
ANR	7509392	Identifier	NULL		7509357	1					
ANR	7509393	ExpressionStatement	memento . used . tail = NULL	1529:4:45046:45070	7509357	4	True				
ANR	7509394	AssignmentExpression	memento . used . tail = NULL		7509357	0		=			
ANR	7509395	MemberAccess	memento . used . tail		7509357	0					
ANR	7509396	MemberAccess	memento . used		7509357	0					
ANR	7509397	Identifier	memento		7509357	0					
ANR	7509398	Identifier	used		7509357	1					
ANR	7509399	Identifier	tail		7509357	1					
ANR	7509400	Identifier	NULL		7509357	1					
ANR	7509401	ExpressionStatement	memento . free . head = NULL	1530:4:45076:45100	7509357	5	True				
ANR	7509402	AssignmentExpression	memento . free . head = NULL		7509357	0		=			
ANR	7509403	MemberAccess	memento . free . head		7509357	0					
ANR	7509404	MemberAccess	memento . free		7509357	0					
ANR	7509405	Identifier	memento		7509357	0					
ANR	7509406	Identifier	free		7509357	1					
ANR	7509407	Identifier	head		7509357	1					
ANR	7509408	Identifier	NULL		7509357	1					
ANR	7509409	ExpressionStatement	memento . free . tail = NULL	1531:4:45106:45130	7509357	6	True				
ANR	7509410	AssignmentExpression	memento . free . tail = NULL		7509357	0		=			
ANR	7509411	MemberAccess	memento . free . tail		7509357	0					
ANR	7509412	MemberAccess	memento . free		7509357	0					
ANR	7509413	Identifier	memento		7509357	0					
ANR	7509414	Identifier	free		7509357	1					
ANR	7509415	Identifier	tail		7509357	1					
ANR	7509416	Identifier	NULL		7509357	1					
ANR	7509417	ExpressionStatement	memento . sequence = 0	1532:4:45136:45157	7509357	7	True				
ANR	7509418	AssignmentExpression	memento . sequence = 0		7509357	0		=			
ANR	7509419	MemberAccess	memento . sequence		7509357	0					
ANR	7509420	Identifier	memento		7509357	0					
ANR	7509421	Identifier	sequence		7509357	1					
ANR	7509422	PrimaryExpression	0		7509357	1					
ANR	7509423	ExpressionStatement	memento . countdown = 1024	1533:4:45163:45187	7509357	8	True				
ANR	7509424	AssignmentExpression	memento . countdown = 1024		7509357	0		=			
ANR	7509425	MemberAccess	memento . countdown		7509357	0					
ANR	7509426	Identifier	memento		7509357	0					
ANR	7509427	Identifier	countdown		7509357	1					
ANR	7509428	PrimaryExpression	1024		7509357	1					
ANR	7509429	ExpressionStatement	"env = getenv ( ""MEMENTO_FAILAT"" )"	1535:4:45194:45224	7509357	9	True				
ANR	7509430	AssignmentExpression	"env = getenv ( ""MEMENTO_FAILAT"" )"		7509357	0		=			
ANR	7509431	Identifier	env		7509357	0					
ANR	7509432	CallExpression	"getenv ( ""MEMENTO_FAILAT"" )"		7509357	1					
ANR	7509433	Callee	getenv		7509357	0					
ANR	7509434	Identifier	getenv		7509357	0					
ANR	7509435	ArgumentList	"""MEMENTO_FAILAT"""		7509357	1					
ANR	7509436	Argument	"""MEMENTO_FAILAT"""		7509357	0					
ANR	7509437	PrimaryExpression	"""MEMENTO_FAILAT"""		7509357	0					
ANR	7509438	ExpressionStatement	memento . failAt = ( env ? atoi ( env ) : 0 )	1536:4:45230:45268	7509357	10	True				
ANR	7509439	AssignmentExpression	memento . failAt = ( env ? atoi ( env ) : 0 )		7509357	0		=			
ANR	7509440	MemberAccess	memento . failAt		7509357	0					
ANR	7509441	Identifier	memento		7509357	0					
ANR	7509442	Identifier	failAt		7509357	1					
ANR	7509443	ConditionalExpression	env ? atoi ( env ) : 0		7509357	1					
ANR	7509444	Condition	env		7509357	0					
ANR	7509445	Identifier	env		7509357	0					
ANR	7509446	CallExpression	atoi ( env )		7509357	1					
ANR	7509447	Callee	atoi		7509357	0					
ANR	7509448	Identifier	atoi		7509357	0					
ANR	7509449	ArgumentList	env		7509357	1					
ANR	7509450	Argument	env		7509357	0					
ANR	7509451	Identifier	env		7509357	0					
ANR	7509452	PrimaryExpression	0		7509357	2					
ANR	7509453	ExpressionStatement	"env = getenv ( ""MEMENTO_PARANOIA"" )"	1538:4:45275:45307	7509357	11	True				
ANR	7509454	AssignmentExpression	"env = getenv ( ""MEMENTO_PARANOIA"" )"		7509357	0		=			
ANR	7509455	Identifier	env		7509357	0					
ANR	7509456	CallExpression	"getenv ( ""MEMENTO_PARANOIA"" )"		7509357	1					
ANR	7509457	Callee	getenv		7509357	0					
ANR	7509458	Identifier	getenv		7509357	0					
ANR	7509459	ArgumentList	"""MEMENTO_PARANOIA"""		7509357	1					
ANR	7509460	Argument	"""MEMENTO_PARANOIA"""		7509357	0					
ANR	7509461	PrimaryExpression	"""MEMENTO_PARANOIA"""		7509357	0					
ANR	7509462	ExpressionStatement	memento . paranoia = ( env ? atoi ( env ) : 0 )	1539:4:45313:45353	7509357	12	True				
ANR	7509463	AssignmentExpression	memento . paranoia = ( env ? atoi ( env ) : 0 )		7509357	0		=			
ANR	7509464	MemberAccess	memento . paranoia		7509357	0					
ANR	7509465	Identifier	memento		7509357	0					
ANR	7509466	Identifier	paranoia		7509357	1					
ANR	7509467	ConditionalExpression	env ? atoi ( env ) : 0		7509357	1					
ANR	7509468	Condition	env		7509357	0					
ANR	7509469	Identifier	env		7509357	0					
ANR	7509470	CallExpression	atoi ( env )		7509357	1					
ANR	7509471	Callee	atoi		7509357	0					
ANR	7509472	Identifier	atoi		7509357	0					
ANR	7509473	ArgumentList	env		7509357	1					
ANR	7509474	Argument	env		7509357	0					
ANR	7509475	Identifier	env		7509357	0					
ANR	7509476	PrimaryExpression	0		7509357	2					
ANR	7509477	IfStatement	if ( memento . paranoia == 0 )		7509357	13					
ANR	7509478	Condition	memento . paranoia == 0	1540:8:45363:45383	7509357	0	True				
ANR	7509479	EqualityExpression	memento . paranoia == 0		7509357	0		==			
ANR	7509480	MemberAccess	memento . paranoia		7509357	0					
ANR	7509481	Identifier	memento		7509357	0					
ANR	7509482	Identifier	paranoia		7509357	1					
ANR	7509483	PrimaryExpression	0		7509357	1					
ANR	7509484	ExpressionStatement	memento . paranoia = - 1024	1541:8:45394:45418	7509357	1	True				
ANR	7509485	AssignmentExpression	memento . paranoia = - 1024		7509357	0		=			
ANR	7509486	MemberAccess	memento . paranoia		7509357	0					
ANR	7509487	Identifier	memento		7509357	0					
ANR	7509488	Identifier	paranoia		7509357	1					
ANR	7509489	UnaryOperationExpression	- 1024		7509357	1					
ANR	7509490	UnaryOperator	-		7509357	0					
ANR	7509491	PrimaryExpression	1024		7509357	1					
ANR	7509492	ExpressionStatement	"env = getenv ( ""MEMENTO_PARANOIDAT"" )"	1543:4:45425:45459	7509357	14	True				
ANR	7509493	AssignmentExpression	"env = getenv ( ""MEMENTO_PARANOIDAT"" )"		7509357	0		=			
ANR	7509494	Identifier	env		7509357	0					
ANR	7509495	CallExpression	"getenv ( ""MEMENTO_PARANOIDAT"" )"		7509357	1					
ANR	7509496	Callee	getenv		7509357	0					
ANR	7509497	Identifier	getenv		7509357	0					
ANR	7509498	ArgumentList	"""MEMENTO_PARANOIDAT"""		7509357	1					
ANR	7509499	Argument	"""MEMENTO_PARANOIDAT"""		7509357	0					
ANR	7509500	PrimaryExpression	"""MEMENTO_PARANOIDAT"""		7509357	0					
ANR	7509501	ExpressionStatement	memento . paranoidAt = ( env ? atoi ( env ) : 0 )	1544:4:45465:45507	7509357	15	True				
ANR	7509502	AssignmentExpression	memento . paranoidAt = ( env ? atoi ( env ) : 0 )		7509357	0		=			
ANR	7509503	MemberAccess	memento . paranoidAt		7509357	0					
ANR	7509504	Identifier	memento		7509357	0					
ANR	7509505	Identifier	paranoidAt		7509357	1					
ANR	7509506	ConditionalExpression	env ? atoi ( env ) : 0		7509357	1					
ANR	7509507	Condition	env		7509357	0					
ANR	7509508	Identifier	env		7509357	0					
ANR	7509509	CallExpression	atoi ( env )		7509357	1					
ANR	7509510	Callee	atoi		7509357	0					
ANR	7509511	Identifier	atoi		7509357	0					
ANR	7509512	ArgumentList	env		7509357	1					
ANR	7509513	Argument	env		7509357	0					
ANR	7509514	Identifier	env		7509357	0					
ANR	7509515	PrimaryExpression	0		7509357	2					
ANR	7509516	ExpressionStatement	"env = getenv ( ""MEMENTO_SQUEEZEAT"" )"	1546:4:45514:45547	7509357	16	True				
ANR	7509517	AssignmentExpression	"env = getenv ( ""MEMENTO_SQUEEZEAT"" )"		7509357	0		=			
ANR	7509518	Identifier	env		7509357	0					
ANR	7509519	CallExpression	"getenv ( ""MEMENTO_SQUEEZEAT"" )"		7509357	1					
ANR	7509520	Callee	getenv		7509357	0					
ANR	7509521	Identifier	getenv		7509357	0					
ANR	7509522	ArgumentList	"""MEMENTO_SQUEEZEAT"""		7509357	1					
ANR	7509523	Argument	"""MEMENTO_SQUEEZEAT"""		7509357	0					
ANR	7509524	PrimaryExpression	"""MEMENTO_SQUEEZEAT"""		7509357	0					
ANR	7509525	ExpressionStatement	memento . squeezeAt = ( env ? atoi ( env ) : 0 )	1547:4:45553:45594	7509357	17	True				
ANR	7509526	AssignmentExpression	memento . squeezeAt = ( env ? atoi ( env ) : 0 )		7509357	0		=			
ANR	7509527	MemberAccess	memento . squeezeAt		7509357	0					
ANR	7509528	Identifier	memento		7509357	0					
ANR	7509529	Identifier	squeezeAt		7509357	1					
ANR	7509530	ConditionalExpression	env ? atoi ( env ) : 0		7509357	1					
ANR	7509531	Condition	env		7509357	0					
ANR	7509532	Identifier	env		7509357	0					
ANR	7509533	CallExpression	atoi ( env )		7509357	1					
ANR	7509534	Callee	atoi		7509357	0					
ANR	7509535	Identifier	atoi		7509357	0					
ANR	7509536	ArgumentList	env		7509357	1					
ANR	7509537	Argument	env		7509357	0					
ANR	7509538	Identifier	env		7509357	0					
ANR	7509539	PrimaryExpression	0		7509357	2					
ANR	7509540	ExpressionStatement	"env = getenv ( ""MEMENTO_PATTERN"" )"	1549:4:45601:45632	7509357	18	True				
ANR	7509541	AssignmentExpression	"env = getenv ( ""MEMENTO_PATTERN"" )"		7509357	0		=			
ANR	7509542	Identifier	env		7509357	0					
ANR	7509543	CallExpression	"getenv ( ""MEMENTO_PATTERN"" )"		7509357	1					
ANR	7509544	Callee	getenv		7509357	0					
ANR	7509545	Identifier	getenv		7509357	0					
ANR	7509546	ArgumentList	"""MEMENTO_PATTERN"""		7509357	1					
ANR	7509547	Argument	"""MEMENTO_PATTERN"""		7509357	0					
ANR	7509548	PrimaryExpression	"""MEMENTO_PATTERN"""		7509357	0					
ANR	7509549	ExpressionStatement	memento . pattern = ( env ? atoi ( env ) : 0 )	1550:4:45638:45677	7509357	19	True				
ANR	7509550	AssignmentExpression	memento . pattern = ( env ? atoi ( env ) : 0 )		7509357	0		=			
ANR	7509551	MemberAccess	memento . pattern		7509357	0					
ANR	7509552	Identifier	memento		7509357	0					
ANR	7509553	Identifier	pattern		7509357	1					
ANR	7509554	ConditionalExpression	env ? atoi ( env ) : 0		7509357	1					
ANR	7509555	Condition	env		7509357	0					
ANR	7509556	Identifier	env		7509357	0					
ANR	7509557	CallExpression	atoi ( env )		7509357	1					
ANR	7509558	Callee	atoi		7509357	0					
ANR	7509559	Identifier	atoi		7509357	0					
ANR	7509560	ArgumentList	env		7509357	1					
ANR	7509561	Argument	env		7509357	0					
ANR	7509562	Identifier	env		7509357	0					
ANR	7509563	PrimaryExpression	0		7509357	2					
ANR	7509564	ExpressionStatement	"env = getenv ( ""MEMENTO_MAXMEMORY"" )"	1552:4:45684:45717	7509357	20	True				
ANR	7509565	AssignmentExpression	"env = getenv ( ""MEMENTO_MAXMEMORY"" )"		7509357	0		=			
ANR	7509566	Identifier	env		7509357	0					
ANR	7509567	CallExpression	"getenv ( ""MEMENTO_MAXMEMORY"" )"		7509357	1					
ANR	7509568	Callee	getenv		7509357	0					
ANR	7509569	Identifier	getenv		7509357	0					
ANR	7509570	ArgumentList	"""MEMENTO_MAXMEMORY"""		7509357	1					
ANR	7509571	Argument	"""MEMENTO_MAXMEMORY"""		7509357	0					
ANR	7509572	PrimaryExpression	"""MEMENTO_MAXMEMORY"""		7509357	0					
ANR	7509573	ExpressionStatement	memento . maxMemory = ( env ? atoi ( env ) : 0 )	1553:4:45723:45764	7509357	21	True				
ANR	7509574	AssignmentExpression	memento . maxMemory = ( env ? atoi ( env ) : 0 )		7509357	0		=			
ANR	7509575	MemberAccess	memento . maxMemory		7509357	0					
ANR	7509576	Identifier	memento		7509357	0					
ANR	7509577	Identifier	maxMemory		7509357	1					
ANR	7509578	ConditionalExpression	env ? atoi ( env ) : 0		7509357	1					
ANR	7509579	Condition	env		7509357	0					
ANR	7509580	Identifier	env		7509357	0					
ANR	7509581	CallExpression	atoi ( env )		7509357	1					
ANR	7509582	Callee	atoi		7509357	0					
ANR	7509583	Identifier	atoi		7509357	0					
ANR	7509584	ArgumentList	env		7509357	1					
ANR	7509585	Argument	env		7509357	0					
ANR	7509586	Identifier	env		7509357	0					
ANR	7509587	PrimaryExpression	0		7509357	2					
ANR	7509588	ExpressionStatement	atexit ( Memento_fin )	1555:4:45771:45790	7509357	22	True				
ANR	7509589	CallExpression	atexit ( Memento_fin )		7509357	0					
ANR	7509590	Callee	atexit		7509357	0					
ANR	7509591	Identifier	atexit		7509357	0					
ANR	7509592	ArgumentList	Memento_fin		7509357	1					
ANR	7509593	Argument	Memento_fin		7509357	0					
ANR	7509594	Identifier	Memento_fin		7509357	0					
ANR	7509595	ExpressionStatement	Memento_initMutex ( & memento . mutex )	1557:4:45797:45830	7509357	23	True				
ANR	7509596	CallExpression	Memento_initMutex ( & memento . mutex )		7509357	0					
ANR	7509597	Callee	Memento_initMutex		7509357	0					
ANR	7509598	Identifier	Memento_initMutex		7509357	0					
ANR	7509599	ArgumentList	& memento . mutex		7509357	1					
ANR	7509600	Argument	& memento . mutex		7509357	0					
ANR	7509601	UnaryOperationExpression	& memento . mutex		7509357	0					
ANR	7509602	UnaryOperator	&		7509357	0					
ANR	7509603	MemberAccess	memento . mutex		7509357	1					
ANR	7509604	Identifier	memento		7509357	0					
ANR	7509605	Identifier	mutex		7509357	1					
ANR	7509606	ExpressionStatement	Memento_initStacktracer ( )	1559:4:45837:45862	7509357	24	True				
ANR	7509607	CallExpression	Memento_initStacktracer ( )		7509357	0					
ANR	7509608	Callee	Memento_initStacktracer		7509357	0					
ANR	7509609	Identifier	Memento_initStacktracer		7509357	0					
ANR	7509610	ArgumentList			7509357	1					
ANR	7509611	ExpressionStatement	Memento_breakpoint ( )	1561:4:45869:45889	7509357	25	True				
ANR	7509612	CallExpression	Memento_breakpoint ( )		7509357	0					
ANR	7509613	Callee	Memento_breakpoint		7509357	0					
ANR	7509614	Identifier	Memento_breakpoint		7509357	0					
ANR	7509615	ArgumentList			7509357	1					
ANR	7509616	ReturnType	static void		7509357	1					
ANR	7509617	Identifier	Memento_init		7509357	2					
ANR	7509618	ParameterList			7509357	3					
ANR	7509619	CFGEntryNode	ENTRY		7509357		True				
ANR	7509620	CFGExitNode	EXIT		7509357		True				
ANR	7509621	Symbol	atoi		7509357						
ANR	7509622	Symbol	Memento_fin		7509357						
ANR	7509623	Symbol	& memento		7509357						
ANR	7509624	Symbol	& memento . mutex		7509357						
ANR	7509625	Symbol	NULL		7509357						
ANR	7509626	Symbol	memento . used . head		7509357						
ANR	7509627	Symbol	memento . used		7509357						
ANR	7509628	Symbol	memento . free . head		7509357						
ANR	7509629	Symbol	memento		7509357						
ANR	7509630	Symbol	env		7509357						
ANR	7509631	Symbol	memento . pattern		7509357						
ANR	7509632	Symbol	memento . free		7509357						
ANR	7509633	Symbol	memento . used . tail		7509357						
ANR	7509634	Symbol	memento . free . tail		7509357						
ANR	7509635	Symbol	memento . paranoidAt		7509357						
ANR	7509636	Symbol	memento . squeezeAt		7509357						
ANR	7509637	Symbol	memento . failAt		7509357						
ANR	7509638	Symbol	memento . paranoia		7509357						
ANR	7509639	Symbol	memento . maxMemory		7509357						
ANR	7509640	Symbol	memento . inited		7509357						
ANR	7509641	Symbol	memento . countdown		7509357						
ANR	7509642	Symbol	memento . sequence		7509357						
ANR	7509643	Symbol	getenv		7509357						
ANR	7509644	ClassDef	findBlkData	1564:8:45902:46023							
ANR	7509645	DeclStmt									
ANR	7509646	Decl							void	void *	addr
ANR	7509647	DeclStmt									
ANR	7509648	Decl							Memento_BlkHeader	Memento_BlkHeader *	blk
ANR	7509649	DeclStmt									
ANR	7509650	Decl							int	int	flags
ANR	7509651	DeclStmt									
ANR	7509652	Decl							findBlkData	findBlkData	findBlkData
ANR	7509653	Function	Memento_containsAddr	1570:0:46026:46725							
ANR	7509654	FunctionDef	"Memento_containsAddr (Memento_BlkHeader * b , void * arg)"		7509653	0					
ANR	7509655	CompoundStatement		1572:0:46123:46725	7509653	0					
ANR	7509656	IdentifierDeclStatement	findBlkData * data = ( findBlkData * ) arg ;	1573:4:46129:46167	7509653	0	True				
ANR	7509657	IdentifierDecl	* data = ( findBlkData * ) arg		7509653	0					
ANR	7509658	IdentifierDeclType	findBlkData *		7509653	0					
ANR	7509659	Identifier	data		7509653	1					
ANR	7509660	AssignmentExpression	* data = ( findBlkData * ) arg		7509653	2		=			
ANR	7509661	Identifier	data		7509653	0					
ANR	7509662	CastExpression	( findBlkData * ) arg		7509653	1					
ANR	7509663	CastTarget	findBlkData *		7509653	0					
ANR	7509664	Identifier	arg		7509653	1					
ANR	7509665	IdentifierDeclStatement	char * blkend = & ( ( char * ) MEMBLK_TOBLK ( b ) ) [ b -> rawsize ] ;	1574:4:46173:46226	7509653	1	True				
ANR	7509666	IdentifierDecl	* blkend = & ( ( char * ) MEMBLK_TOBLK ( b ) ) [ b -> rawsize ]		7509653	0					
ANR	7509667	IdentifierDeclType	char *		7509653	0					
ANR	7509668	Identifier	blkend		7509653	1					
ANR	7509669	AssignmentExpression	* blkend = & ( ( char * ) MEMBLK_TOBLK ( b ) ) [ b -> rawsize ]		7509653	2		=			
ANR	7509670	Identifier	blkend		7509653	0					
ANR	7509671	UnaryOperationExpression	& ( ( char * ) MEMBLK_TOBLK ( b ) ) [ b -> rawsize ]		7509653	1					
ANR	7509672	UnaryOperator	&		7509653	0					
ANR	7509673	ArrayIndexing	( ( char * ) MEMBLK_TOBLK ( b ) ) [ b -> rawsize ]		7509653	1					
ANR	7509674	CastExpression	( char * ) MEMBLK_TOBLK ( b )		7509653	0					
ANR	7509675	CastTarget	char *		7509653	0					
ANR	7509676	CallExpression	MEMBLK_TOBLK ( b )		7509653	1					
ANR	7509677	Callee	MEMBLK_TOBLK		7509653	0					
ANR	7509678	Identifier	MEMBLK_TOBLK		7509653	0					
ANR	7509679	ArgumentList	b		7509653	1					
ANR	7509680	Argument	b		7509653	0					
ANR	7509681	Identifier	b		7509653	0					
ANR	7509682	PtrMemberAccess	b -> rawsize		7509653	1					
ANR	7509683	Identifier	b		7509653	0					
ANR	7509684	Identifier	rawsize		7509653	1					
ANR	7509685	IfStatement	if ( ( MEMBLK_TOBLK ( b ) <= data -> addr ) && ( ( void * ) blkend > data -> addr ) )		7509653	2					
ANR	7509686	Condition	( MEMBLK_TOBLK ( b ) <= data -> addr ) && ( ( void * ) blkend > data -> addr )	1575:8:46236:46307	7509653	0	True				
ANR	7509687	AndExpression	( MEMBLK_TOBLK ( b ) <= data -> addr ) && ( ( void * ) blkend > data -> addr )		7509653	0		&&			
ANR	7509688	RelationalExpression	MEMBLK_TOBLK ( b ) <= data -> addr		7509653	0		<=			
ANR	7509689	CallExpression	MEMBLK_TOBLK ( b )		7509653	0					
ANR	7509690	Callee	MEMBLK_TOBLK		7509653	0					
ANR	7509691	Identifier	MEMBLK_TOBLK		7509653	0					
ANR	7509692	ArgumentList	b		7509653	1					
ANR	7509693	Argument	b		7509653	0					
ANR	7509694	Identifier	b		7509653	0					
ANR	7509695	PtrMemberAccess	data -> addr		7509653	1					
ANR	7509696	Identifier	data		7509653	0					
ANR	7509697	Identifier	addr		7509653	1					
ANR	7509698	RelationalExpression	( void * ) blkend > data -> addr		7509653	1		>			
ANR	7509699	CastExpression	( void * ) blkend		7509653	0					
ANR	7509700	CastTarget	void *		7509653	0					
ANR	7509701	Identifier	blkend		7509653	1					
ANR	7509702	PtrMemberAccess	data -> addr		7509653	1					
ANR	7509703	Identifier	data		7509653	0					
ANR	7509704	Identifier	addr		7509653	1					
ANR	7509705	CompoundStatement		5:39:186:186	7509653	1					
ANR	7509706	ExpressionStatement	data -> blk = b	1577:8:46320:46333	7509653	0	True				
ANR	7509707	AssignmentExpression	data -> blk = b		7509653	0		=			
ANR	7509708	PtrMemberAccess	data -> blk		7509653	0					
ANR	7509709	Identifier	data		7509653	0					
ANR	7509710	Identifier	blk		7509653	1					
ANR	7509711	Identifier	b		7509653	1					
ANR	7509712	ExpressionStatement	data -> flags = 1	1578:8:46343:46358	7509653	1	True				
ANR	7509713	AssignmentExpression	data -> flags = 1		7509653	0		=			
ANR	7509714	PtrMemberAccess	data -> flags		7509653	0					
ANR	7509715	Identifier	data		7509653	0					
ANR	7509716	Identifier	flags		7509653	1					
ANR	7509717	PrimaryExpression	1		7509653	1					
ANR	7509718	ReturnStatement	return 1 ;	1579:8:46368:46376	7509653	2	True				
ANR	7509719	PrimaryExpression	1		7509653	0					
ANR	7509720	IfStatement	if ( ( ( void * ) b <= data -> addr ) && ( MEMBLK_TOBLK ( b ) > data -> addr ) )		7509653	3					
ANR	7509721	Condition	( ( void * ) b <= data -> addr ) && ( MEMBLK_TOBLK ( b ) > data -> addr )	1581:8:46392:46458	7509653	0	True				
ANR	7509722	AndExpression	( ( void * ) b <= data -> addr ) && ( MEMBLK_TOBLK ( b ) > data -> addr )		7509653	0		&&			
ANR	7509723	RelationalExpression	( void * ) b <= data -> addr		7509653	0		<=			
ANR	7509724	CastExpression	( void * ) b		7509653	0					
ANR	7509725	CastTarget	void *		7509653	0					
ANR	7509726	Identifier	b		7509653	1					
ANR	7509727	PtrMemberAccess	data -> addr		7509653	1					
ANR	7509728	Identifier	data		7509653	0					
ANR	7509729	Identifier	addr		7509653	1					
ANR	7509730	RelationalExpression	MEMBLK_TOBLK ( b ) > data -> addr		7509653	1		>			
ANR	7509731	CallExpression	MEMBLK_TOBLK ( b )		7509653	0					
ANR	7509732	Callee	MEMBLK_TOBLK		7509653	0					
ANR	7509733	Identifier	MEMBLK_TOBLK		7509653	0					
ANR	7509734	ArgumentList	b		7509653	1					
ANR	7509735	Argument	b		7509653	0					
ANR	7509736	Identifier	b		7509653	0					
ANR	7509737	PtrMemberAccess	data -> addr		7509653	1					
ANR	7509738	Identifier	data		7509653	0					
ANR	7509739	Identifier	addr		7509653	1					
ANR	7509740	CompoundStatement		11:40:337:337	7509653	1					
ANR	7509741	ExpressionStatement	data -> blk = b	1583:8:46471:46484	7509653	0	True				
ANR	7509742	AssignmentExpression	data -> blk = b		7509653	0		=			
ANR	7509743	PtrMemberAccess	data -> blk		7509653	0					
ANR	7509744	Identifier	data		7509653	0					
ANR	7509745	Identifier	blk		7509653	1					
ANR	7509746	Identifier	b		7509653	1					
ANR	7509747	ExpressionStatement	data -> flags = 2	1584:8:46494:46509	7509653	1	True				
ANR	7509748	AssignmentExpression	data -> flags = 2		7509653	0		=			
ANR	7509749	PtrMemberAccess	data -> flags		7509653	0					
ANR	7509750	Identifier	data		7509653	0					
ANR	7509751	Identifier	flags		7509653	1					
ANR	7509752	PrimaryExpression	2		7509653	1					
ANR	7509753	ReturnStatement	return 1 ;	1585:8:46519:46527	7509653	2	True				
ANR	7509754	PrimaryExpression	1		7509653	0					
ANR	7509755	IfStatement	if ( ( ( void * ) blkend <= data -> addr ) && ( ( void * ) ( blkend + Memento_PostSize ) > data -> addr ) )		7509653	4					
ANR	7509756	Condition	( ( void * ) blkend <= data -> addr ) && ( ( void * ) ( blkend + Memento_PostSize ) > data -> addr )	1587:8:46543:46634	7509653	0	True				
ANR	7509757	AndExpression	( ( void * ) blkend <= data -> addr ) && ( ( void * ) ( blkend + Memento_PostSize ) > data -> addr )		7509653	0		&&			
ANR	7509758	RelationalExpression	( void * ) blkend <= data -> addr		7509653	0		<=			
ANR	7509759	CastExpression	( void * ) blkend		7509653	0					
ANR	7509760	CastTarget	void *		7509653	0					
ANR	7509761	Identifier	blkend		7509653	1					
ANR	7509762	PtrMemberAccess	data -> addr		7509653	1					
ANR	7509763	Identifier	data		7509653	0					
ANR	7509764	Identifier	addr		7509653	1					
ANR	7509765	RelationalExpression	( void * ) ( blkend + Memento_PostSize ) > data -> addr		7509653	1		>			
ANR	7509766	CastExpression	( void * ) ( blkend + Memento_PostSize )		7509653	0					
ANR	7509767	CastTarget	void *		7509653	0					
ANR	7509768	AdditiveExpression	blkend + Memento_PostSize		7509653	1		+			
ANR	7509769	Identifier	blkend		7509653	0					
ANR	7509770	Identifier	Memento_PostSize		7509653	1					
ANR	7509771	PtrMemberAccess	data -> addr		7509653	1					
ANR	7509772	Identifier	data		7509653	0					
ANR	7509773	Identifier	addr		7509653	1					
ANR	7509774	CompoundStatement		17:60:513:513	7509653	1					
ANR	7509775	ExpressionStatement	data -> blk = b	1589:8:46647:46660	7509653	0	True				
ANR	7509776	AssignmentExpression	data -> blk = b		7509653	0		=			
ANR	7509777	PtrMemberAccess	data -> blk		7509653	0					
ANR	7509778	Identifier	data		7509653	0					
ANR	7509779	Identifier	blk		7509653	1					
ANR	7509780	Identifier	b		7509653	1					
ANR	7509781	ExpressionStatement	data -> flags = 3	1590:8:46670:46685	7509653	1	True				
ANR	7509782	AssignmentExpression	data -> flags = 3		7509653	0		=			
ANR	7509783	PtrMemberAccess	data -> flags		7509653	0					
ANR	7509784	Identifier	data		7509653	0					
ANR	7509785	Identifier	flags		7509653	1					
ANR	7509786	PrimaryExpression	3		7509653	1					
ANR	7509787	ReturnStatement	return 1 ;	1591:8:46695:46703	7509653	2	True				
ANR	7509788	PrimaryExpression	1		7509653	0					
ANR	7509789	ReturnStatement	return 0 ;	1593:4:46715:46723	7509653	5	True				
ANR	7509790	PrimaryExpression	0		7509653	0					
ANR	7509791	ReturnType	static int		7509653	1					
ANR	7509792	Identifier	Memento_containsAddr		7509653	2					
ANR	7509793	ParameterList	"Memento_BlkHeader * b , void * arg"		7509653	3					
ANR	7509794	Parameter	Memento_BlkHeader * b	1570:32:46058:46077	7509653	0	True				
ANR	7509795	ParameterType	Memento_BlkHeader *		7509653	0					
ANR	7509796	Identifier	b		7509653	1					
ANR	7509797	Parameter	void * arg	1571:32:46112:46120	7509653	1	True				
ANR	7509798	ParameterType	void *		7509653	0					
ANR	7509799	Identifier	arg		7509653	1					
ANR	7509800	CFGEntryNode	ENTRY		7509653		True				
ANR	7509801	CFGExitNode	EXIT		7509653		True				
ANR	7509802	Symbol	b -> rawsize		7509653						
ANR	7509803	Symbol	data -> blk		7509653						
ANR	7509804	Symbol	b		7509653						
ANR	7509805	Symbol	data		7509653						
ANR	7509806	Symbol	blkend		7509653						
ANR	7509807	Symbol	data -> addr		7509653						
ANR	7509808	Symbol	arg		7509653						
ANR	7509809	Symbol	Memento_PostSize		7509653						
ANR	7509810	Symbol	* b		7509653						
ANR	7509811	Symbol	* data		7509653						
ANR	7509812	Symbol	data -> flags		7509653						
ANR	7509813	Symbol	MEMBLK_TOBLK		7509653						
ANR	7509814	Function	Memento_info	1596:0:46728:47283							
ANR	7509815	FunctionDef	Memento_info (void * addr)		7509814	0					
ANR	7509816	CompoundStatement		1597:0:46758:47283	7509814	0					
ANR	7509817	IdentifierDeclStatement	findBlkData data ;	1599:4:46787:46803	7509814	0	True				
ANR	7509818	IdentifierDecl	data		7509814	0					
ANR	7509819	IdentifierDeclType	findBlkData		7509814	0					
ANR	7509820	Identifier	data		7509814	1					
ANR	7509821	ExpressionStatement	MEMENTO_LOCK ( )	1601:4:46810:46824	7509814	1	True				
ANR	7509822	CallExpression	MEMENTO_LOCK ( )		7509814	0					
ANR	7509823	Callee	MEMENTO_LOCK		7509814	0					
ANR	7509824	Identifier	MEMENTO_LOCK		7509814	0					
ANR	7509825	ArgumentList			7509814	1					
ANR	7509826	ExpressionStatement	data . addr = addr	1602:4:46830:46847	7509814	2	True				
ANR	7509827	AssignmentExpression	data . addr = addr		7509814	0		=			
ANR	7509828	MemberAccess	data . addr		7509814	0					
ANR	7509829	Identifier	data		7509814	0					
ANR	7509830	Identifier	addr		7509814	1					
ANR	7509831	Identifier	addr		7509814	1					
ANR	7509832	ExpressionStatement	data . blk = NULL	1603:4:46853:46870	7509814	3	True				
ANR	7509833	AssignmentExpression	data . blk = NULL		7509814	0		=			
ANR	7509834	MemberAccess	data . blk		7509814	0					
ANR	7509835	Identifier	data		7509814	0					
ANR	7509836	Identifier	blk		7509814	1					
ANR	7509837	Identifier	NULL		7509814	1					
ANR	7509838	ExpressionStatement	data . flags = 0	1604:4:46876:46890	7509814	4	True				
ANR	7509839	AssignmentExpression	data . flags = 0		7509814	0		=			
ANR	7509840	MemberAccess	data . flags		7509814	0					
ANR	7509841	Identifier	data		7509814	0					
ANR	7509842	Identifier	flags		7509814	1					
ANR	7509843	PrimaryExpression	0		7509814	1					
ANR	7509844	ExpressionStatement	"Memento_appBlocks ( & memento . used , Memento_containsAddr , & data )"	1605:4:46896:46957	7509814	5	True				
ANR	7509845	CallExpression	"Memento_appBlocks ( & memento . used , Memento_containsAddr , & data )"		7509814	0					
ANR	7509846	Callee	Memento_appBlocks		7509814	0					
ANR	7509847	Identifier	Memento_appBlocks		7509814	0					
ANR	7509848	ArgumentList	& memento . used		7509814	1					
ANR	7509849	Argument	& memento . used		7509814	0					
ANR	7509850	UnaryOperationExpression	& memento . used		7509814	0					
ANR	7509851	UnaryOperator	&		7509814	0					
ANR	7509852	MemberAccess	memento . used		7509814	1					
ANR	7509853	Identifier	memento		7509814	0					
ANR	7509854	Identifier	used		7509814	1					
ANR	7509855	Argument	Memento_containsAddr		7509814	1					
ANR	7509856	Identifier	Memento_containsAddr		7509814	0					
ANR	7509857	Argument	& data		7509814	2					
ANR	7509858	UnaryOperationExpression	& data		7509814	0					
ANR	7509859	UnaryOperator	&		7509814	0					
ANR	7509860	Identifier	data		7509814	1					
ANR	7509861	IfStatement	if ( data . blk != NULL )		7509814	6					
ANR	7509862	Condition	data . blk != NULL	1606:8:46967:46982	7509814	0	True				
ANR	7509863	EqualityExpression	data . blk != NULL		7509814	0		!=			
ANR	7509864	MemberAccess	data . blk		7509814	0					
ANR	7509865	Identifier	data		7509814	0					
ANR	7509866	Identifier	blk		7509814	1					
ANR	7509867	Identifier	NULL		7509814	1					
ANR	7509868	ExpressionStatement	"showInfo ( data . blk , NULL )"	1607:8:46993:47017	7509814	1	True				
ANR	7509869	CallExpression	"showInfo ( data . blk , NULL )"		7509814	0					
ANR	7509870	Callee	showInfo		7509814	0					
ANR	7509871	Identifier	showInfo		7509814	0					
ANR	7509872	ArgumentList	data . blk		7509814	1					
ANR	7509873	Argument	data . blk		7509814	0					
ANR	7509874	MemberAccess	data . blk		7509814	0					
ANR	7509875	Identifier	data		7509814	0					
ANR	7509876	Identifier	blk		7509814	1					
ANR	7509877	Argument	NULL		7509814	1					
ANR	7509878	Identifier	NULL		7509814	0					
ANR	7509879	ExpressionStatement	data . blk = NULL	1608:4:47023:47040	7509814	7	True				
ANR	7509880	AssignmentExpression	data . blk = NULL		7509814	0		=			
ANR	7509881	MemberAccess	data . blk		7509814	0					
ANR	7509882	Identifier	data		7509814	0					
ANR	7509883	Identifier	blk		7509814	1					
ANR	7509884	Identifier	NULL		7509814	1					
ANR	7509885	ExpressionStatement	data . flags = 0	1609:4:47046:47060	7509814	8	True				
ANR	7509886	AssignmentExpression	data . flags = 0		7509814	0		=			
ANR	7509887	MemberAccess	data . flags		7509814	0					
ANR	7509888	Identifier	data		7509814	0					
ANR	7509889	Identifier	flags		7509814	1					
ANR	7509890	PrimaryExpression	0		7509814	1					
ANR	7509891	ExpressionStatement	"Memento_appBlocks ( & memento . free , Memento_containsAddr , & data )"	1610:4:47066:47127	7509814	9	True				
ANR	7509892	CallExpression	"Memento_appBlocks ( & memento . free , Memento_containsAddr , & data )"		7509814	0					
ANR	7509893	Callee	Memento_appBlocks		7509814	0					
ANR	7509894	Identifier	Memento_appBlocks		7509814	0					
ANR	7509895	ArgumentList	& memento . free		7509814	1					
ANR	7509896	Argument	& memento . free		7509814	0					
ANR	7509897	UnaryOperationExpression	& memento . free		7509814	0					
ANR	7509898	UnaryOperator	&		7509814	0					
ANR	7509899	MemberAccess	memento . free		7509814	1					
ANR	7509900	Identifier	memento		7509814	0					
ANR	7509901	Identifier	free		7509814	1					
ANR	7509902	Argument	Memento_containsAddr		7509814	1					
ANR	7509903	Identifier	Memento_containsAddr		7509814	0					
ANR	7509904	Argument	& data		7509814	2					
ANR	7509905	UnaryOperationExpression	& data		7509814	0					
ANR	7509906	UnaryOperator	&		7509814	0					
ANR	7509907	Identifier	data		7509814	1					
ANR	7509908	IfStatement	if ( data . blk != NULL )		7509814	10					
ANR	7509909	Condition	data . blk != NULL	1611:8:47137:47152	7509814	0	True				
ANR	7509910	EqualityExpression	data . blk != NULL		7509814	0		!=			
ANR	7509911	MemberAccess	data . blk		7509814	0					
ANR	7509912	Identifier	data		7509814	0					
ANR	7509913	Identifier	blk		7509814	1					
ANR	7509914	Identifier	NULL		7509814	1					
ANR	7509915	ExpressionStatement	"showInfo ( data . blk , NULL )"	1612:8:47163:47187	7509814	1	True				
ANR	7509916	CallExpression	"showInfo ( data . blk , NULL )"		7509814	0					
ANR	7509917	Callee	showInfo		7509814	0					
ANR	7509918	Identifier	showInfo		7509814	0					
ANR	7509919	ArgumentList	data . blk		7509814	1					
ANR	7509920	Argument	data . blk		7509814	0					
ANR	7509921	MemberAccess	data . blk		7509814	0					
ANR	7509922	Identifier	data		7509814	0					
ANR	7509923	Identifier	blk		7509814	1					
ANR	7509924	Argument	NULL		7509814	1					
ANR	7509925	Identifier	NULL		7509814	0					
ANR	7509926	ExpressionStatement	MEMENTO_UNLOCK ( )	1613:4:47193:47209	7509814	11	True				
ANR	7509927	CallExpression	MEMENTO_UNLOCK ( )		7509814	0					
ANR	7509928	Callee	MEMENTO_UNLOCK		7509814	0					
ANR	7509929	Identifier	MEMENTO_UNLOCK		7509814	0					
ANR	7509930	ArgumentList			7509814	1					
ANR	7509931	ReturnType	void		7509814	1					
ANR	7509932	Identifier	Memento_info		7509814	2					
ANR	7509933	ParameterList	void * addr		7509814	3					
ANR	7509934	Parameter	void * addr	1596:18:46746:46755	7509814	0	True				
ANR	7509935	ParameterType	void *		7509814	0					
ANR	7509936	Identifier	addr		7509814	1					
ANR	7509937	CFGEntryNode	ENTRY		7509814		True				
ANR	7509938	CFGExitNode	EXIT		7509814		True				
ANR	7509939	Symbol	& memento . free		7509814						
ANR	7509940	Symbol	& memento		7509814						
ANR	7509941	Symbol	NULL		7509814						
ANR	7509942	Symbol	data		7509814						
ANR	7509943	Symbol	& memento . used		7509814						
ANR	7509944	Symbol	Memento_containsAddr		7509814						
ANR	7509945	Symbol	memento		7509814						
ANR	7509946	Symbol	addr		7509814						
ANR	7509947	Symbol	data . addr		7509814						
ANR	7509948	Symbol	& data		7509814						
ANR	7509949	Symbol	data . blk		7509814						
ANR	7509950	Symbol	data . flags		7509814						
ANR	7509951	DeclStmt									
ANR	7509952	Decl							int	int [ OPEN_MAX ]	stashed_map
ANR	7509953	Function	Memento_signal	1638:0:47726:47878							
ANR	7509954	FunctionDef	Memento_signal (int sig)		7509953	0					
ANR	7509955	CompoundStatement		1639:0:47762:47878	7509953	0					
ANR	7509956	ExpressionStatement	( void ) sig	1640:4:47768:47777	7509953	0	True				
ANR	7509957	CastExpression	( void ) sig		7509953	0					
ANR	7509958	CastTarget	void		7509953	0					
ANR	7509959	Identifier	sig		7509953	1					
ANR	7509960	ExpressionStatement	"fprintf ( stderr , ""SEGV at:\\n"" )"	1641:4:47783:47812	7509953	1	True				
ANR	7509961	CallExpression	"fprintf ( stderr , ""SEGV at:\\n"" )"		7509953	0					
ANR	7509962	Callee	fprintf		7509953	0					
ANR	7509963	Identifier	fprintf		7509953	0					
ANR	7509964	ArgumentList	stderr		7509953	1					
ANR	7509965	Argument	stderr		7509953	0					
ANR	7509966	Identifier	stderr		7509953	0					
ANR	7509967	Argument	"""SEGV at:\\n"""		7509953	1					
ANR	7509968	PrimaryExpression	"""SEGV at:\\n"""		7509953	0					
ANR	7509969	ExpressionStatement	memento . segv = 1	1642:4:47818:47834	7509953	2	True				
ANR	7509970	AssignmentExpression	memento . segv = 1		7509953	0		=			
ANR	7509971	MemberAccess	memento . segv		7509953	0					
ANR	7509972	Identifier	memento		7509953	0					
ANR	7509973	Identifier	segv		7509953	1					
ANR	7509974	PrimaryExpression	1		7509953	1					
ANR	7509975	ExpressionStatement	Memento_bt_internal ( 0 )	1643:4:47840:47862	7509953	3	True				
ANR	7509976	CallExpression	Memento_bt_internal ( 0 )		7509953	0					
ANR	7509977	Callee	Memento_bt_internal		7509953	0					
ANR	7509978	Identifier	Memento_bt_internal		7509953	0					
ANR	7509979	ArgumentList	0		7509953	1					
ANR	7509980	Argument	0		7509953	0					
ANR	7509981	PrimaryExpression	0		7509953	0					
ANR	7509982	ExpressionStatement	exit ( 1 )	1645:4:47869:47876	7509953	4	True				
ANR	7509983	CallExpression	exit ( 1 )		7509953	0					
ANR	7509984	Callee	exit		7509953	0					
ANR	7509985	Identifier	exit		7509953	0					
ANR	7509986	ArgumentList	1		7509953	1					
ANR	7509987	Argument	1		7509953	0					
ANR	7509988	PrimaryExpression	1		7509953	0					
ANR	7509989	ReturnType	static void		7509953	1					
ANR	7509990	Identifier	Memento_signal		7509953	2					
ANR	7509991	ParameterList	int sig		7509953	3					
ANR	7509992	Parameter	int sig	1638:27:47753:47759	7509953	0	True				
ANR	7509993	ParameterType	int		7509953	0					
ANR	7509994	Identifier	sig		7509953	1					
ANR	7509995	CFGEntryNode	ENTRY		7509953		True				
ANR	7509996	CFGExitNode	EXIT		7509953		True				
ANR	7509997	Symbol	sig		7509953						
ANR	7509998	Symbol	memento		7509953						
ANR	7509999	Symbol	memento . segv		7509953						
ANR	7510000	Symbol	stderr		7509953						
ANR	7510001	Function	squeeze	1648:0:47881:50397							
ANR	7510002	FunctionDef	squeeze ()		7510001	0					
ANR	7510003	CompoundStatement		1649:0:47906:50397	7510001	0					
ANR	7510004	IdentifierDeclStatement	pid_t pid ;	1650:4:47912:47921	7510001	0	True				
ANR	7510005	IdentifierDecl	pid		7510001	0					
ANR	7510006	IdentifierDeclType	pid_t		7510001	0					
ANR	7510007	Identifier	pid		7510001	1					
ANR	7510008	IdentifierDeclStatement	"int i , status ;"	1651:4:47927:47940	7510001	1	True				
ANR	7510009	IdentifierDecl	i		7510001	0					
ANR	7510010	IdentifierDeclType	int		7510001	0					
ANR	7510011	Identifier	i		7510001	1					
ANR	7510012	IdentifierDecl	status		7510001	1					
ANR	7510013	IdentifierDeclType	int		7510001	0					
ANR	7510014	Identifier	status		7510001	1					
ANR	7510015	IfStatement	if ( memento . patternBit < 0 )		7510001	2					
ANR	7510016	Condition	memento . patternBit < 0	1653:8:47951:47972	7510001	0	True				
ANR	7510017	RelationalExpression	memento . patternBit < 0		7510001	0		<			
ANR	7510018	MemberAccess	memento . patternBit		7510001	0					
ANR	7510019	Identifier	memento		7510001	0					
ANR	7510020	Identifier	patternBit		7510001	1					
ANR	7510021	PrimaryExpression	0		7510001	1					
ANR	7510022	ReturnStatement	return 1 ;	1654:8:47983:47991	7510001	1	True				
ANR	7510023	PrimaryExpression	1		7510001	0					
ANR	7510024	IfStatement	if ( memento . squeezing && memento . patternBit >= MEMENTO_MAXPATTERN )		7510001	3					
ANR	7510025	Condition	memento . squeezing && memento . patternBit >= MEMENTO_MAXPATTERN	1655:8:48001:48061	7510001	0	True				
ANR	7510026	AndExpression	memento . squeezing && memento . patternBit >= MEMENTO_MAXPATTERN		7510001	0		&&			
ANR	7510027	MemberAccess	memento . squeezing		7510001	0					
ANR	7510028	Identifier	memento		7510001	0					
ANR	7510029	Identifier	squeezing		7510001	1					
ANR	7510030	RelationalExpression	memento . patternBit >= MEMENTO_MAXPATTERN		7510001	1		>=			
ANR	7510031	MemberAccess	memento . patternBit		7510001	0					
ANR	7510032	Identifier	memento		7510001	0					
ANR	7510033	Identifier	patternBit		7510001	1					
ANR	7510034	Identifier	MEMENTO_MAXPATTERN		7510001	1					
ANR	7510035	ReturnStatement	return 1 ;	1656:8:48072:48080	7510001	1	True				
ANR	7510036	PrimaryExpression	1		7510001	0					
ANR	7510037	IfStatement	if ( memento . patternBit == 0 )		7510001	4					
ANR	7510038	Condition	memento . patternBit == 0	1658:8:48091:48113	7510001	0	True				
ANR	7510039	EqualityExpression	memento . patternBit == 0		7510001	0		==			
ANR	7510040	MemberAccess	memento . patternBit		7510001	0					
ANR	7510041	Identifier	memento		7510001	0					
ANR	7510042	Identifier	patternBit		7510001	1					
ANR	7510043	PrimaryExpression	0		7510001	1					
ANR	7510044	ExpressionStatement	memento . squeezeAt = memento . sequence	1659:8:48124:48160	7510001	1	True				
ANR	7510045	AssignmentExpression	memento . squeezeAt = memento . sequence		7510001	0		=			
ANR	7510046	MemberAccess	memento . squeezeAt		7510001	0					
ANR	7510047	Identifier	memento		7510001	0					
ANR	7510048	Identifier	squeezeAt		7510001	1					
ANR	7510049	MemberAccess	memento . sequence		7510001	1					
ANR	7510050	Identifier	memento		7510001	0					
ANR	7510051	Identifier	sequence		7510001	1					
ANR	7510052	IfStatement	if ( ! memento . squeezing )		7510001	5					
ANR	7510053	Condition	! memento . squeezing	1661:8:48171:48188	7510001	0	True				
ANR	7510054	UnaryOperationExpression	! memento . squeezing		7510001	0					
ANR	7510055	UnaryOperator	!		7510001	0					
ANR	7510056	MemberAccess	memento . squeezing		7510001	1					
ANR	7510057	Identifier	memento		7510001	0					
ANR	7510058	Identifier	squeezing		7510001	1					
ANR	7510059	CompoundStatement		13:28:284:284	7510001	1					
ANR	7510060	ExpressionStatement	"fprintf ( stderr , ""Memory squeezing @ %d\\n"" , memento . squeezeAt )"	1662:8:48201:48262	7510001	0	True				
ANR	7510061	CallExpression	"fprintf ( stderr , ""Memory squeezing @ %d\\n"" , memento . squeezeAt )"		7510001	0					
ANR	7510062	Callee	fprintf		7510001	0					
ANR	7510063	Identifier	fprintf		7510001	0					
ANR	7510064	ArgumentList	stderr		7510001	1					
ANR	7510065	Argument	stderr		7510001	0					
ANR	7510066	Identifier	stderr		7510001	0					
ANR	7510067	Argument	"""Memory squeezing @ %d\\n"""		7510001	1					
ANR	7510068	PrimaryExpression	"""Memory squeezing @ %d\\n"""		7510001	0					
ANR	7510069	Argument	memento . squeezeAt		7510001	2					
ANR	7510070	MemberAccess	memento . squeezeAt		7510001	0					
ANR	7510071	Identifier	memento		7510001	0					
ANR	7510072	Identifier	squeezeAt		7510001	1					
ANR	7510073	ElseStatement	else		7510001	0					
ANR	7510074	ExpressionStatement	"fprintf ( stderr , ""Memory squeezing @ %d (%x,%x)\\n"" , memento . squeezeAt , memento . pattern , memento . patternBit )"	1664:8:48283:48389	7510001	0	True				
ANR	7510075	CallExpression	"fprintf ( stderr , ""Memory squeezing @ %d (%x,%x)\\n"" , memento . squeezeAt , memento . pattern , memento . patternBit )"		7510001	0					
ANR	7510076	Callee	fprintf		7510001	0					
ANR	7510077	Identifier	fprintf		7510001	0					
ANR	7510078	ArgumentList	stderr		7510001	1					
ANR	7510079	Argument	stderr		7510001	0					
ANR	7510080	Identifier	stderr		7510001	0					
ANR	7510081	Argument	"""Memory squeezing @ %d (%x,%x)\\n"""		7510001	1					
ANR	7510082	PrimaryExpression	"""Memory squeezing @ %d (%x,%x)\\n"""		7510001	0					
ANR	7510083	Argument	memento . squeezeAt		7510001	2					
ANR	7510084	MemberAccess	memento . squeezeAt		7510001	0					
ANR	7510085	Identifier	memento		7510001	0					
ANR	7510086	Identifier	squeezeAt		7510001	1					
ANR	7510087	Argument	memento . pattern		7510001	3					
ANR	7510088	MemberAccess	memento . pattern		7510001	0					
ANR	7510089	Identifier	memento		7510001	0					
ANR	7510090	Identifier	pattern		7510001	1					
ANR	7510091	Argument	memento . patternBit		7510001	4					
ANR	7510092	MemberAccess	memento . patternBit		7510001	0					
ANR	7510093	Identifier	memento		7510001	0					
ANR	7510094	Identifier	patternBit		7510001	1					
ANR	7510095	ForStatement	for ( i = 0 ; i < OPEN_MAX ; i ++ )		7510001	6					
ANR	7510096	ForInit	i = 0 ;	1669:9:48616:48621	7510001	0	True				
ANR	7510097	AssignmentExpression	i = 0		7510001	0		=			
ANR	7510098	Identifier	i		7510001	0					
ANR	7510099	PrimaryExpression	0		7510001	1					
ANR	7510100	Condition	i < OPEN_MAX	1669:16:48623:48634	7510001	1	True				
ANR	7510101	RelationalExpression	i < OPEN_MAX		7510001	0		<			
ANR	7510102	Identifier	i		7510001	0					
ANR	7510103	Identifier	OPEN_MAX		7510001	1					
ANR	7510104	PostIncDecOperationExpression	i ++	1669:30:48637:48639	7510001	2	True				
ANR	7510105	Identifier	i		7510001	0					
ANR	7510106	IncDec	++		7510001	1					
ANR	7510107	CompoundStatement		21:35:735:735	7510001	3					
ANR	7510108	IfStatement	if ( stashed_map [ i ] == 0 )		7510001	0					
ANR	7510109	Condition	stashed_map [ i ] == 0	1670:12:48656:48674	7510001	0	True				
ANR	7510110	EqualityExpression	stashed_map [ i ] == 0		7510001	0		==			
ANR	7510111	ArrayIndexing	stashed_map [ i ]		7510001	0					
ANR	7510112	Identifier	stashed_map		7510001	0					
ANR	7510113	Identifier	i		7510001	1					
ANR	7510114	PrimaryExpression	0		7510001	1					
ANR	7510115	CompoundStatement		23:12:784:798	7510001	1					
ANR	7510116	IdentifierDeclStatement	int j = dup ( i ) ;	1671:12:48691:48705	7510001	0	True				
ANR	7510117	IdentifierDecl	j = dup ( i )		7510001	0					
ANR	7510118	IdentifierDeclType	int		7510001	0					
ANR	7510119	Identifier	j		7510001	1					
ANR	7510120	AssignmentExpression	j = dup ( i )		7510001	2		=			
ANR	7510121	Identifier	j		7510001	0					
ANR	7510122	CallExpression	dup ( i )		7510001	1					
ANR	7510123	Callee	dup		7510001	0					
ANR	7510124	Identifier	dup		7510001	0					
ANR	7510125	ArgumentList	i		7510001	1					
ANR	7510126	Argument	i		7510001	0					
ANR	7510127	Identifier	i		7510001	0					
ANR	7510128	ExpressionStatement	stashed_map [ j ] = i + 1	1672:12:48719:48739	7510001	1	True				
ANR	7510129	AssignmentExpression	stashed_map [ j ] = i + 1		7510001	0		=			
ANR	7510130	ArrayIndexing	stashed_map [ j ]		7510001	0					
ANR	7510131	Identifier	stashed_map		7510001	0					
ANR	7510132	Identifier	j		7510001	1					
ANR	7510133	AdditiveExpression	i + 1		7510001	1		+			
ANR	7510134	Identifier	i		7510001	0					
ANR	7510135	PrimaryExpression	1		7510001	1					
ANR	7510136	ExpressionStatement	"fprintf ( stderr , ""Failing at:\\n"" )"	1676:4:48762:48794	7510001	7	True				
ANR	7510137	CallExpression	"fprintf ( stderr , ""Failing at:\\n"" )"		7510001	0					
ANR	7510138	Callee	fprintf		7510001	0					
ANR	7510139	Identifier	fprintf		7510001	0					
ANR	7510140	ArgumentList	stderr		7510001	1					
ANR	7510141	Argument	stderr		7510001	0					
ANR	7510142	Identifier	stderr		7510001	0					
ANR	7510143	Argument	"""Failing at:\\n"""		7510001	1					
ANR	7510144	PrimaryExpression	"""Failing at:\\n"""		7510001	0					
ANR	7510145	ExpressionStatement	Memento_bt_internal ( 2 )	1677:4:48800:48822	7510001	8	True				
ANR	7510146	CallExpression	Memento_bt_internal ( 2 )		7510001	0					
ANR	7510147	Callee	Memento_bt_internal		7510001	0					
ANR	7510148	Identifier	Memento_bt_internal		7510001	0					
ANR	7510149	ArgumentList	2		7510001	1					
ANR	7510150	Argument	2		7510001	0					
ANR	7510151	PrimaryExpression	2		7510001	0					
ANR	7510152	ExpressionStatement	pid = fork ( )	1678:4:48828:48840	7510001	9	True				
ANR	7510153	AssignmentExpression	pid = fork ( )		7510001	0		=			
ANR	7510154	Identifier	pid		7510001	0					
ANR	7510155	CallExpression	fork ( )		7510001	1					
ANR	7510156	Callee	fork		7510001	0					
ANR	7510157	Identifier	fork		7510001	0					
ANR	7510158	ArgumentList			7510001	1					
ANR	7510159	IfStatement	if ( pid == 0 )		7510001	10					
ANR	7510160	Condition	pid == 0	1679:8:48850:48857	7510001	0	True				
ANR	7510161	EqualityExpression	pid == 0		7510001	0		==			
ANR	7510162	Identifier	pid		7510001	0					
ANR	7510163	PrimaryExpression	0		7510001	1					
ANR	7510164	CompoundStatement		31:18:953:953	7510001	1					
ANR	7510165	ExpressionStatement	"signal ( SIGSEGV , Memento_signal )"	1681:8:48890:48921	7510001	0	True				
ANR	7510166	CallExpression	"signal ( SIGSEGV , Memento_signal )"		7510001	0					
ANR	7510167	Callee	signal		7510001	0					
ANR	7510168	Identifier	signal		7510001	0					
ANR	7510169	ArgumentList	SIGSEGV		7510001	1					
ANR	7510170	Argument	SIGSEGV		7510001	0					
ANR	7510171	Identifier	SIGSEGV		7510001	0					
ANR	7510172	Argument	Memento_signal		7510001	1					
ANR	7510173	Identifier	Memento_signal		7510001	0					
ANR	7510174	IfStatement	if ( memento . patternBit == 0 )		7510001	1					
ANR	7510175	Condition	memento . patternBit == 0	1683:12:48999:49021	7510001	0	True				
ANR	7510176	EqualityExpression	memento . patternBit == 0		7510001	0		==			
ANR	7510177	MemberAccess	memento . patternBit		7510001	0					
ANR	7510178	Identifier	memento		7510001	0					
ANR	7510179	Identifier	patternBit		7510001	1					
ANR	7510180	PrimaryExpression	0		7510001	1					
ANR	7510181	CompoundStatement		35:37:1117:1117	7510001	1					
ANR	7510182	ExpressionStatement	memento . patternBit = 1	1684:12:49038:49060	7510001	0	True				
ANR	7510183	AssignmentExpression	memento . patternBit = 1		7510001	0		=			
ANR	7510184	MemberAccess	memento . patternBit		7510001	0					
ANR	7510185	Identifier	memento		7510001	0					
ANR	7510186	Identifier	patternBit		7510001	1					
ANR	7510187	PrimaryExpression	1		7510001	1					
ANR	7510188	ElseStatement	else		7510001	0					
ANR	7510189	ExpressionStatement	memento . patternBit <<= 1	1686:12:49089:49113	7510001	0	True				
ANR	7510190	AssignmentExpression	memento . patternBit <<= 1		7510001	0		<<=			
ANR	7510191	MemberAccess	memento . patternBit		7510001	0					
ANR	7510192	Identifier	memento		7510001	0					
ANR	7510193	Identifier	patternBit		7510001	1					
ANR	7510194	PrimaryExpression	1		7510001	1					
ANR	7510195	ExpressionStatement	memento . squeezing = 1	1687:8:49123:49144	7510001	2	True				
ANR	7510196	AssignmentExpression	memento . squeezing = 1		7510001	0		=			
ANR	7510197	MemberAccess	memento . squeezing		7510001	0					
ANR	7510198	Identifier	memento		7510001	0					
ANR	7510199	Identifier	squeezing		7510001	1					
ANR	7510200	PrimaryExpression	1		7510001	1					
ANR	7510201	ReturnStatement	return 1 ;	1688:8:49154:49162	7510001	3	True				
ANR	7510202	PrimaryExpression	1		7510001	0					
ANR	7510203	ExpressionStatement	memento . pattern |= memento . patternBit	1693:4:49294:49331	7510001	11	True				
ANR	7510204	AssignmentExpression	memento . pattern |= memento . patternBit		7510001	0		|=			
ANR	7510205	MemberAccess	memento . pattern		7510001	0					
ANR	7510206	Identifier	memento		7510001	0					
ANR	7510207	Identifier	pattern		7510001	1					
ANR	7510208	MemberAccess	memento . patternBit		7510001	1					
ANR	7510209	Identifier	memento		7510001	0					
ANR	7510210	Identifier	patternBit		7510001	1					
ANR	7510211	ExpressionStatement	memento . patternBit <<= 1	1694:4:49337:49361	7510001	12	True				
ANR	7510212	AssignmentExpression	memento . patternBit <<= 1		7510001	0		<<=			
ANR	7510213	MemberAccess	memento . patternBit		7510001	0					
ANR	7510214	Identifier	memento		7510001	0					
ANR	7510215	Identifier	patternBit		7510001	1					
ANR	7510216	PrimaryExpression	1		7510001	1					
ANR	7510217	CompoundStatement		51:8:1598:1628	7510001	13					
ANR	7510218	IdentifierDeclStatement	"struct timespec tm = { 0 , 10 * 1000 * 1000 } ;"	1698:8:49428:49472	7510001	0	True				
ANR	7510219	IdentifierDecl	"tm = { 0 , 10 * 1000 * 1000 }"		7510001	0					
ANR	7510220	IdentifierDeclType	struct timespec		7510001	0					
ANR	7510221	Identifier	tm		7510001	1					
ANR	7510222	AssignmentExpression	"tm = { 0 , 10 * 1000 * 1000 }"		7510001	2		=			
ANR	7510223	Identifier	tm		7510001	0					
ANR	7510224	InitializerList	0		7510001	1					
ANR	7510225	PrimaryExpression	0		7510001	0					
ANR	7510226	MultiplicativeExpression	10 * 1000 * 1000		7510001	1		*			
ANR	7510227	PrimaryExpression	10		7510001	0					
ANR	7510228	MultiplicativeExpression	1000 * 1000		7510001	1		*			
ANR	7510229	PrimaryExpression	1000		7510001	0					
ANR	7510230	PrimaryExpression	1000		7510001	1					
ANR	7510231	IdentifierDeclStatement	int timeout = 30 * 1000 * 1000 ;	1699:8:49505:49535	7510001	1	True				
ANR	7510232	IdentifierDecl	timeout = 30 * 1000 * 1000		7510001	0					
ANR	7510233	IdentifierDeclType	int		7510001	0					
ANR	7510234	Identifier	timeout		7510001	1					
ANR	7510235	AssignmentExpression	timeout = 30 * 1000 * 1000		7510001	2		=			
ANR	7510236	Identifier	timeout		7510001	0					
ANR	7510237	MultiplicativeExpression	30 * 1000 * 1000		7510001	1		*			
ANR	7510238	PrimaryExpression	30		7510001	0					
ANR	7510239	MultiplicativeExpression	1000 * 1000		7510001	1		*			
ANR	7510240	PrimaryExpression	1000		7510001	0					
ANR	7510241	PrimaryExpression	1000		7510001	1					
ANR	7510242	WhileStatement	"while ( waitpid ( pid , & status , WNOHANG ) == 0 )"		7510001	2					
ANR	7510243	Condition	"waitpid ( pid , & status , WNOHANG ) == 0"	1700:15:49584:49618	7510001	0	True				
ANR	7510244	EqualityExpression	"waitpid ( pid , & status , WNOHANG ) == 0"		7510001	0		==			
ANR	7510245	CallExpression	"waitpid ( pid , & status , WNOHANG )"		7510001	0					
ANR	7510246	Callee	waitpid		7510001	0					
ANR	7510247	Identifier	waitpid		7510001	0					
ANR	7510248	ArgumentList	pid		7510001	1					
ANR	7510249	Argument	pid		7510001	0					
ANR	7510250	Identifier	pid		7510001	0					
ANR	7510251	Argument	& status		7510001	1					
ANR	7510252	UnaryOperationExpression	& status		7510001	0					
ANR	7510253	UnaryOperator	&		7510001	0					
ANR	7510254	Identifier	status		7510001	1					
ANR	7510255	Argument	WNOHANG		7510001	2					
ANR	7510256	Identifier	WNOHANG		7510001	0					
ANR	7510257	PrimaryExpression	0		7510001	1					
ANR	7510258	CompoundStatement		52:52:1714:1714	7510001	1					
ANR	7510259	ExpressionStatement	"nanosleep ( & tm , NULL )"	1701:12:49635:49655	7510001	0	True				
ANR	7510260	CallExpression	"nanosleep ( & tm , NULL )"		7510001	0					
ANR	7510261	Callee	nanosleep		7510001	0					
ANR	7510262	Identifier	nanosleep		7510001	0					
ANR	7510263	ArgumentList	& tm		7510001	1					
ANR	7510264	Argument	& tm		7510001	0					
ANR	7510265	UnaryOperationExpression	& tm		7510001	0					
ANR	7510266	UnaryOperator	&		7510001	0					
ANR	7510267	Identifier	tm		7510001	1					
ANR	7510268	Argument	NULL		7510001	1					
ANR	7510269	Identifier	NULL		7510001	0					
ANR	7510270	ExpressionStatement	timeout -= ( tm . tv_nsec / 1000 )	1702:12:49669:49697	7510001	1	True				
ANR	7510271	AssignmentExpression	timeout -= ( tm . tv_nsec / 1000 )		7510001	0		-=			
ANR	7510272	Identifier	timeout		7510001	0					
ANR	7510273	MultiplicativeExpression	tm . tv_nsec / 1000		7510001	1		/			
ANR	7510274	MemberAccess	tm . tv_nsec		7510001	0					
ANR	7510275	Identifier	tm		7510001	0					
ANR	7510276	Identifier	tv_nsec		7510001	1					
ANR	7510277	PrimaryExpression	1000		7510001	1					
ANR	7510278	ExpressionStatement	tm . tv_nsec *= 2	1703:12:49711:49726	7510001	2	True				
ANR	7510279	AssignmentExpression	tm . tv_nsec *= 2		7510001	0		*=			
ANR	7510280	MemberAccess	tm . tv_nsec		7510001	0					
ANR	7510281	Identifier	tm		7510001	0					
ANR	7510282	Identifier	tv_nsec		7510001	1					
ANR	7510283	PrimaryExpression	2		7510001	1					
ANR	7510284	IfStatement	if ( tm . tv_nsec > 999999999 )		7510001	3					
ANR	7510285	Condition	tm . tv_nsec > 999999999	1704:16:49744:49765	7510001	0	True				
ANR	7510286	RelationalExpression	tm . tv_nsec > 999999999		7510001	0		>			
ANR	7510287	MemberAccess	tm . tv_nsec		7510001	0					
ANR	7510288	Identifier	tm		7510001	0					
ANR	7510289	Identifier	tv_nsec		7510001	1					
ANR	7510290	PrimaryExpression	999999999		7510001	1					
ANR	7510291	ExpressionStatement	tm . tv_nsec = 999999999	1705:16:49784:49806	7510001	1	True				
ANR	7510292	AssignmentExpression	tm . tv_nsec = 999999999		7510001	0		=			
ANR	7510293	MemberAccess	tm . tv_nsec		7510001	0					
ANR	7510294	Identifier	tm		7510001	0					
ANR	7510295	Identifier	tv_nsec		7510001	1					
ANR	7510296	PrimaryExpression	999999999		7510001	1					
ANR	7510297	IfStatement	if ( timeout <= 0 )		7510001	4					
ANR	7510298	Condition	timeout <= 0	1706:16:49824:49835	7510001	0	True				
ANR	7510299	RelationalExpression	timeout <= 0		7510001	0		<=			
ANR	7510300	Identifier	timeout		7510001	0					
ANR	7510301	PrimaryExpression	0		7510001	1					
ANR	7510302	CompoundStatement		59:16:1949:1962	7510001	1					
ANR	7510303	IdentifierDeclStatement	char text [ 32 ] ;	1707:16:49856:49869	7510001	0	True				
ANR	7510304	IdentifierDecl	text [ 32 ]		7510001	0					
ANR	7510305	IdentifierDeclType	char [ 32 ]		7510001	0					
ANR	7510306	Identifier	text		7510001	1					
ANR	7510307	PrimaryExpression	32		7510001	2					
ANR	7510308	ExpressionStatement	"fprintf ( stderr , ""Child is taking a long time to die. Killing it.\\n"" )"	1708:16:49887:49955	7510001	1	True				
ANR	7510309	CallExpression	"fprintf ( stderr , ""Child is taking a long time to die. Killing it.\\n"" )"		7510001	0					
ANR	7510310	Callee	fprintf		7510001	0					
ANR	7510311	Identifier	fprintf		7510001	0					
ANR	7510312	ArgumentList	stderr		7510001	1					
ANR	7510313	Argument	stderr		7510001	0					
ANR	7510314	Identifier	stderr		7510001	0					
ANR	7510315	Argument	"""Child is taking a long time to die. Killing it.\\n"""		7510001	1					
ANR	7510316	PrimaryExpression	"""Child is taking a long time to die. Killing it.\\n"""		7510001	0					
ANR	7510317	ExpressionStatement	"sprintf ( text , ""kill %d"" , pid )"	1709:16:49973:50002	7510001	2	True				
ANR	7510318	CallExpression	"sprintf ( text , ""kill %d"" , pid )"		7510001	0					
ANR	7510319	Callee	sprintf		7510001	0					
ANR	7510320	Identifier	sprintf		7510001	0					
ANR	7510321	ArgumentList	text		7510001	1					
ANR	7510322	Argument	text		7510001	0					
ANR	7510323	Identifier	text		7510001	0					
ANR	7510324	Argument	"""kill %d"""		7510001	1					
ANR	7510325	PrimaryExpression	"""kill %d"""		7510001	0					
ANR	7510326	Argument	pid		7510001	2					
ANR	7510327	Identifier	pid		7510001	0					
ANR	7510328	ExpressionStatement	system ( text )	1710:16:50020:50032	7510001	3	True				
ANR	7510329	CallExpression	system ( text )		7510001	0					
ANR	7510330	Callee	system		7510001	0					
ANR	7510331	Identifier	system		7510001	0					
ANR	7510332	ArgumentList	text		7510001	1					
ANR	7510333	Argument	text		7510001	0					
ANR	7510334	Identifier	text		7510001	0					
ANR	7510335	BreakStatement	break ;	1711:16:50050:50055	7510001	4	True				
ANR	7510336	IfStatement	if ( status != 0 )		7510001	14					
ANR	7510337	Condition	status != 0	1716:8:50096:50106	7510001	0	True				
ANR	7510338	EqualityExpression	status != 0		7510001	0		!=			
ANR	7510339	Identifier	status		7510001	0					
ANR	7510340	PrimaryExpression	0		7510001	1					
ANR	7510341	CompoundStatement		68:21:2202:2202	7510001	1					
ANR	7510342	ExpressionStatement	"fprintf ( stderr , ""Child status=%d\\n"" , status )"	1717:8:50119:50163	7510001	0	True				
ANR	7510343	CallExpression	"fprintf ( stderr , ""Child status=%d\\n"" , status )"		7510001	0					
ANR	7510344	Callee	fprintf		7510001	0					
ANR	7510345	Identifier	fprintf		7510001	0					
ANR	7510346	ArgumentList	stderr		7510001	1					
ANR	7510347	Argument	stderr		7510001	0					
ANR	7510348	Identifier	stderr		7510001	0					
ANR	7510349	Argument	"""Child status=%d\\n"""		7510001	1					
ANR	7510350	PrimaryExpression	"""Child status=%d\\n"""		7510001	0					
ANR	7510351	Argument	status		7510001	2					
ANR	7510352	Identifier	status		7510001	0					
ANR	7510353	ForStatement	for ( i = 0 ; i < OPEN_MAX ; i ++ )		7510001	15					
ANR	7510354	ForInit	i = 0 ;	1721:9:50210:50215	7510001	0	True				
ANR	7510355	AssignmentExpression	i = 0		7510001	0		=			
ANR	7510356	Identifier	i		7510001	0					
ANR	7510357	PrimaryExpression	0		7510001	1					
ANR	7510358	Condition	i < OPEN_MAX	1721:16:50217:50228	7510001	1	True				
ANR	7510359	RelationalExpression	i < OPEN_MAX		7510001	0		<			
ANR	7510360	Identifier	i		7510001	0					
ANR	7510361	Identifier	OPEN_MAX		7510001	1					
ANR	7510362	PostIncDecOperationExpression	i ++	1721:30:50231:50233	7510001	2	True				
ANR	7510363	Identifier	i		7510001	0					
ANR	7510364	IncDec	++		7510001	1					
ANR	7510365	CompoundStatement		73:35:2329:2329	7510001	3					
ANR	7510366	IfStatement	if ( stashed_map [ i ] != 0 )		7510001	0					
ANR	7510367	Condition	stashed_map [ i ] != 0	1722:12:50250:50268	7510001	0	True				
ANR	7510368	EqualityExpression	stashed_map [ i ] != 0		7510001	0		!=			
ANR	7510369	ArrayIndexing	stashed_map [ i ]		7510001	0					
ANR	7510370	Identifier	stashed_map		7510001	0					
ANR	7510371	Identifier	i		7510001	1					
ANR	7510372	PrimaryExpression	0		7510001	1					
ANR	7510373	CompoundStatement		74:33:2364:2364	7510001	1					
ANR	7510374	ExpressionStatement	"dup2 ( i , stashed_map [ i ] - 1 )"	1723:12:50285:50310	7510001	0	True				
ANR	7510375	CallExpression	"dup2 ( i , stashed_map [ i ] - 1 )"		7510001	0					
ANR	7510376	Callee	dup2		7510001	0					
ANR	7510377	Identifier	dup2		7510001	0					
ANR	7510378	ArgumentList	i		7510001	1					
ANR	7510379	Argument	i		7510001	0					
ANR	7510380	Identifier	i		7510001	0					
ANR	7510381	Argument	stashed_map [ i ] - 1		7510001	1					
ANR	7510382	AdditiveExpression	stashed_map [ i ] - 1		7510001	0		-			
ANR	7510383	ArrayIndexing	stashed_map [ i ]		7510001	0					
ANR	7510384	Identifier	stashed_map		7510001	0					
ANR	7510385	Identifier	i		7510001	1					
ANR	7510386	PrimaryExpression	1		7510001	1					
ANR	7510387	ExpressionStatement	close ( i )	1724:12:50324:50332	7510001	1	True				
ANR	7510388	CallExpression	close ( i )		7510001	0					
ANR	7510389	Callee	close		7510001	0					
ANR	7510390	Identifier	close		7510001	0					
ANR	7510391	ArgumentList	i		7510001	1					
ANR	7510392	Argument	i		7510001	0					
ANR	7510393	Identifier	i		7510001	0					
ANR	7510394	ExpressionStatement	stashed_map [ i ] = 0	1725:12:50346:50364	7510001	2	True				
ANR	7510395	AssignmentExpression	stashed_map [ i ] = 0		7510001	0		=			
ANR	7510396	ArrayIndexing	stashed_map [ i ]		7510001	0					
ANR	7510397	Identifier	stashed_map		7510001	0					
ANR	7510398	Identifier	i		7510001	1					
ANR	7510399	PrimaryExpression	0		7510001	1					
ANR	7510400	ReturnStatement	return 0 ;	1729:4:50387:50395	7510001	16	True				
ANR	7510401	PrimaryExpression	0		7510001	0					
ANR	7510402	ReturnType	static int		7510001	1					
ANR	7510403	Identifier	squeeze		7510001	2					
ANR	7510404	ParameterList			7510001	3					
ANR	7510405	CFGEntryNode	ENTRY		7510001		True				
ANR	7510406	CFGExitNode	EXIT		7510001		True				
ANR	7510407	Symbol	pid		7510001						
ANR	7510408	Symbol	memento . pattern		7510001						
ANR	7510409	Symbol	timeout		7510001						
ANR	7510410	Symbol	memento . squeezing		7510001						
ANR	7510411	Symbol	Memento_signal		7510001						
ANR	7510412	Symbol	memento . squeezeAt		7510001						
ANR	7510413	Symbol	stashed_map		7510001						
ANR	7510414	Symbol	WNOHANG		7510001						
ANR	7510415	Symbol	text		7510001						
ANR	7510416	Symbol	MEMENTO_MAXPATTERN		7510001						
ANR	7510417	Symbol	& tm		7510001						
ANR	7510418	Symbol	NULL		7510001						
ANR	7510419	Symbol	* stashed_map		7510001						
ANR	7510420	Symbol	i		7510001						
ANR	7510421	Symbol	memento		7510001						
ANR	7510422	Symbol	OPEN_MAX		7510001						
ANR	7510423	Symbol	j		7510001						
ANR	7510424	Symbol	stderr		7510001						
ANR	7510425	Symbol	& status		7510001						
ANR	7510426	Symbol	memento . patternBit		7510001						
ANR	7510427	Symbol	fork		7510001						
ANR	7510428	Symbol	* i		7510001						
ANR	7510429	Symbol	* j		7510001						
ANR	7510430	Symbol	SIGSEGV		7510001						
ANR	7510431	Symbol	tm		7510001						
ANR	7510432	Symbol	tm . tv_nsec		7510001						
ANR	7510433	Symbol	memento . sequence		7510001						
ANR	7510434	Symbol	dup		7510001						
ANR	7510435	Symbol	status		7510001						
ANR	7510436	Symbol	waitpid		7510001						
ANR	7510437	Function	Memento_signal	1734:0:50426:50891							
ANR	7510438	FunctionDef	Memento_signal (int sig)		7510437	0					
ANR	7510439	CompoundStatement		1735:0:50462:50891	7510437	0					
ANR	7510440	ExpressionStatement	( void ) sig	1736:4:50468:50477	7510437	0	True				
ANR	7510441	CastExpression	( void ) sig		7510437	0					
ANR	7510442	CastTarget	void		7510437	0					
ANR	7510443	Identifier	sig		7510437	1					
ANR	7510444	ExpressionStatement	memento . segv = 1	1737:4:50483:50499	7510437	1	True				
ANR	7510445	AssignmentExpression	memento . segv = 1		7510437	0		=			
ANR	7510446	MemberAccess	memento . segv		7510437	0					
ANR	7510447	Identifier	memento		7510437	0					
ANR	7510448	Identifier	segv		7510437	1					
ANR	7510449	PrimaryExpression	1		7510437	1					
ANR	7510450	IfStatement	"if ( getenv ( ""MEMENTO_NOJIT"" ) )"		7510437	2					
ANR	7510451	Condition	"getenv ( ""MEMENTO_NOJIT"" )"	1742:8:50817:50839	7510437	0	True				
ANR	7510452	CallExpression	"getenv ( ""MEMENTO_NOJIT"" )"		7510437	0					
ANR	7510453	Callee	getenv		7510437	0					
ANR	7510454	Identifier	getenv		7510437	0					
ANR	7510455	ArgumentList	"""MEMENTO_NOJIT"""		7510437	1					
ANR	7510456	Argument	"""MEMENTO_NOJIT"""		7510437	0					
ANR	7510457	PrimaryExpression	"""MEMENTO_NOJIT"""		7510437	0					
ANR	7510458	ExpressionStatement	exit ( 1 )	1743:8:50850:50857	7510437	1	True				
ANR	7510459	CallExpression	exit ( 1 )		7510437	0					
ANR	7510460	Callee	exit		7510437	0					
ANR	7510461	Identifier	exit		7510437	0					
ANR	7510462	ArgumentList	1		7510437	1					
ANR	7510463	Argument	1		7510437	0					
ANR	7510464	PrimaryExpression	1		7510437	0					
ANR	7510465	ElseStatement	else		7510437	0					
ANR	7510466	ExpressionStatement	Memento_fin ( )	1745:8:50876:50889	7510437	0	True				
ANR	7510467	CallExpression	Memento_fin ( )		7510437	0					
ANR	7510468	Callee	Memento_fin		7510437	0					
ANR	7510469	Identifier	Memento_fin		7510437	0					
ANR	7510470	ArgumentList			7510437	1					
ANR	7510471	ReturnType	static void		7510437	1					
ANR	7510472	Identifier	Memento_signal		7510437	2					
ANR	7510473	ParameterList	int sig		7510437	3					
ANR	7510474	Parameter	int sig	1734:27:50453:50459	7510437	0	True				
ANR	7510475	ParameterType	int		7510437	0					
ANR	7510476	Identifier	sig		7510437	1					
ANR	7510477	CFGEntryNode	ENTRY		7510437		True				
ANR	7510478	CFGExitNode	EXIT		7510437		True				
ANR	7510479	Symbol	sig		7510437						
ANR	7510480	Symbol	memento		7510437						
ANR	7510481	Symbol	memento . segv		7510437						
ANR	7510482	Symbol	getenv		7510437						
ANR	7510483	Function	squeeze	1748:0:50894:51007							
ANR	7510484	FunctionDef	squeeze ()		7510483	0					
ANR	7510485	CompoundStatement		1749:0:50919:51007	7510483	0					
ANR	7510486	ExpressionStatement	"fprintf ( stderr , ""Memento memory squeezing disabled as no fork!\\n"" )"	1750:4:50925:50991	7510483	0	True				
ANR	7510487	CallExpression	"fprintf ( stderr , ""Memento memory squeezing disabled as no fork!\\n"" )"		7510483	0					
ANR	7510488	Callee	fprintf		7510483	0					
ANR	7510489	Identifier	fprintf		7510483	0					
ANR	7510490	ArgumentList	stderr		7510483	1					
ANR	7510491	Argument	stderr		7510483	0					
ANR	7510492	Identifier	stderr		7510483	0					
ANR	7510493	Argument	"""Memento memory squeezing disabled as no fork!\\n"""		7510483	1					
ANR	7510494	PrimaryExpression	"""Memento memory squeezing disabled as no fork!\\n"""		7510483	0					
ANR	7510495	ReturnStatement	return 0 ;	1751:4:50997:51005	7510483	1	True				
ANR	7510496	PrimaryExpression	0		7510483	0					
ANR	7510497	ReturnType	static int		7510483	1					
ANR	7510498	Identifier	squeeze		7510483	2					
ANR	7510499	ParameterList			7510483	3					
ANR	7510500	CFGEntryNode	ENTRY		7510483		True				
ANR	7510501	CFGExitNode	EXIT		7510483		True				
ANR	7510502	Symbol	stderr		7510483						
ANR	7510503	Function	Memento_startFailing	1755:0:51017:51466							
ANR	7510504	FunctionDef	Memento_startFailing ()		7510503	0					
ANR	7510505	CompoundStatement		1756:0:51056:51466	7510503	0					
ANR	7510506	IfStatement	if ( ! memento . failing )		7510503	0					
ANR	7510507	Condition	! memento . failing	1757:8:51066:51081	7510503	0	True				
ANR	7510508	UnaryOperationExpression	! memento . failing		7510503	0					
ANR	7510509	UnaryOperator	!		7510503	0					
ANR	7510510	MemberAccess	memento . failing		7510503	1					
ANR	7510511	Identifier	memento		7510503	0					
ANR	7510512	Identifier	failing		7510503	1					
ANR	7510513	CompoundStatement		2:26:27:27	7510503	1					
ANR	7510514	ExpressionStatement	"fprintf ( stderr , ""Starting to fail...\\n"" )"	1758:8:51094:51134	7510503	0	True				
ANR	7510515	CallExpression	"fprintf ( stderr , ""Starting to fail...\\n"" )"		7510503	0					
ANR	7510516	Callee	fprintf		7510503	0					
ANR	7510517	Identifier	fprintf		7510503	0					
ANR	7510518	ArgumentList	stderr		7510503	1					
ANR	7510519	Argument	stderr		7510503	0					
ANR	7510520	Identifier	stderr		7510503	0					
ANR	7510521	Argument	"""Starting to fail...\\n"""		7510503	1					
ANR	7510522	PrimaryExpression	"""Starting to fail...\\n"""		7510503	0					
ANR	7510523	ExpressionStatement	fflush ( stderr )	1759:8:51144:51158	7510503	1	True				
ANR	7510524	CallExpression	fflush ( stderr )		7510503	0					
ANR	7510525	Callee	fflush		7510503	0					
ANR	7510526	Identifier	fflush		7510503	0					
ANR	7510527	ArgumentList	stderr		7510503	1					
ANR	7510528	Argument	stderr		7510503	0					
ANR	7510529	Identifier	stderr		7510503	0					
ANR	7510530	ExpressionStatement	memento . failing = 1	1760:8:51168:51187	7510503	2	True				
ANR	7510531	AssignmentExpression	memento . failing = 1		7510503	0		=			
ANR	7510532	MemberAccess	memento . failing		7510503	0					
ANR	7510533	Identifier	memento		7510503	0					
ANR	7510534	Identifier	failing		7510503	1					
ANR	7510535	PrimaryExpression	1		7510503	1					
ANR	7510536	ExpressionStatement	memento . failAt = memento . sequence	1761:8:51197:51230	7510503	3	True				
ANR	7510537	AssignmentExpression	memento . failAt = memento . sequence		7510503	0		=			
ANR	7510538	MemberAccess	memento . failAt		7510503	0					
ANR	7510539	Identifier	memento		7510503	0					
ANR	7510540	Identifier	failAt		7510503	1					
ANR	7510541	MemberAccess	memento . sequence		7510503	1					
ANR	7510542	Identifier	memento		7510503	0					
ANR	7510543	Identifier	sequence		7510503	1					
ANR	7510544	ExpressionStatement	memento . nextFailAt = memento . sequence + 1	1762:8:51240:51279	7510503	4	True				
ANR	7510545	AssignmentExpression	memento . nextFailAt = memento . sequence + 1		7510503	0		=			
ANR	7510546	MemberAccess	memento . nextFailAt		7510503	0					
ANR	7510547	Identifier	memento		7510503	0					
ANR	7510548	Identifier	nextFailAt		7510503	1					
ANR	7510549	AdditiveExpression	memento . sequence + 1		7510503	1		+			
ANR	7510550	MemberAccess	memento . sequence		7510503	0					
ANR	7510551	Identifier	memento		7510503	0					
ANR	7510552	Identifier	sequence		7510503	1					
ANR	7510553	PrimaryExpression	1		7510503	1					
ANR	7510554	ExpressionStatement	memento . pattern = 0	1763:8:51289:51308	7510503	5	True				
ANR	7510555	AssignmentExpression	memento . pattern = 0		7510503	0		=			
ANR	7510556	MemberAccess	memento . pattern		7510503	0					
ANR	7510557	Identifier	memento		7510503	0					
ANR	7510558	Identifier	pattern		7510503	1					
ANR	7510559	PrimaryExpression	0		7510503	1					
ANR	7510560	ExpressionStatement	memento . patternBit = 0	1764:8:51318:51340	7510503	6	True				
ANR	7510561	AssignmentExpression	memento . patternBit = 0		7510503	0		=			
ANR	7510562	MemberAccess	memento . patternBit		7510503	0					
ANR	7510563	Identifier	memento		7510503	0					
ANR	7510564	Identifier	patternBit		7510503	1					
ANR	7510565	PrimaryExpression	0		7510503	1					
ANR	7510566	ExpressionStatement	"signal ( SIGSEGV , Memento_signal )"	1765:8:51350:51381	7510503	7	True				
ANR	7510567	CallExpression	"signal ( SIGSEGV , Memento_signal )"		7510503	0					
ANR	7510568	Callee	signal		7510503	0					
ANR	7510569	Identifier	signal		7510503	0					
ANR	7510570	ArgumentList	SIGSEGV		7510503	1					
ANR	7510571	Argument	SIGSEGV		7510503	0					
ANR	7510572	Identifier	SIGSEGV		7510503	0					
ANR	7510573	Argument	Memento_signal		7510503	1					
ANR	7510574	Identifier	Memento_signal		7510503	0					
ANR	7510575	ExpressionStatement	"signal ( SIGABRT , Memento_signal )"	1766:8:51391:51422	7510503	8	True				
ANR	7510576	CallExpression	"signal ( SIGABRT , Memento_signal )"		7510503	0					
ANR	7510577	Callee	signal		7510503	0					
ANR	7510578	Identifier	signal		7510503	0					
ANR	7510579	ArgumentList	SIGABRT		7510503	1					
ANR	7510580	Argument	SIGABRT		7510503	0					
ANR	7510581	Identifier	SIGABRT		7510503	0					
ANR	7510582	Argument	Memento_signal		7510503	1					
ANR	7510583	Identifier	Memento_signal		7510503	0					
ANR	7510584	ExpressionStatement	Memento_breakpointLocked ( )	1767:8:51432:51458	7510503	9	True				
ANR	7510585	CallExpression	Memento_breakpointLocked ( )		7510503	0					
ANR	7510586	Callee	Memento_breakpointLocked		7510503	0					
ANR	7510587	Identifier	Memento_breakpointLocked		7510503	0					
ANR	7510588	ArgumentList			7510503	1					
ANR	7510589	ReturnType	static void		7510503	1					
ANR	7510590	Identifier	Memento_startFailing		7510503	2					
ANR	7510591	ParameterList			7510503	3					
ANR	7510592	CFGEntryNode	ENTRY		7510503		True				
ANR	7510593	CFGExitNode	EXIT		7510503		True				
ANR	7510594	Symbol	memento . patternBit		7510503						
ANR	7510595	Symbol	Memento_signal		7510503						
ANR	7510596	Symbol	SIGSEGV		7510503						
ANR	7510597	Symbol	memento . failing		7510503						
ANR	7510598	Symbol	memento . failAt		7510503						
ANR	7510599	Symbol	memento		7510503						
ANR	7510600	Symbol	SIGABRT		7510503						
ANR	7510601	Symbol	stderr		7510503						
ANR	7510602	Symbol	memento . sequence		7510503						
ANR	7510603	Symbol	memento . pattern		7510503						
ANR	7510604	Symbol	memento . nextFailAt		7510503						
ANR	7510605	Function	Memento_event	1771:0:51469:52163							
ANR	7510606	FunctionDef	Memento_event ()		7510605	0					
ANR	7510607	CompoundStatement		1772:0:51500:52163	7510605	0					
ANR	7510608	ExpressionStatement	memento . sequence ++	1773:4:51506:51524	7510605	0	True				
ANR	7510609	PostIncDecOperationExpression	memento . sequence ++		7510605	0					
ANR	7510610	MemberAccess	memento . sequence		7510605	0					
ANR	7510611	Identifier	memento		7510605	0					
ANR	7510612	Identifier	sequence		7510605	1					
ANR	7510613	IncDec	++		7510605	1					
ANR	7510614	IfStatement	if ( ( memento . sequence >= memento . paranoidAt ) && ( memento . paranoidAt != 0 ) )		7510605	1					
ANR	7510615	Condition	( memento . sequence >= memento . paranoidAt ) && ( memento . paranoidAt != 0 )	1774:8:51534:51602	7510605	0	True				
ANR	7510616	AndExpression	( memento . sequence >= memento . paranoidAt ) && ( memento . paranoidAt != 0 )		7510605	0		&&			
ANR	7510617	RelationalExpression	memento . sequence >= memento . paranoidAt		7510605	0		>=			
ANR	7510618	MemberAccess	memento . sequence		7510605	0					
ANR	7510619	Identifier	memento		7510605	0					
ANR	7510620	Identifier	sequence		7510605	1					
ANR	7510621	MemberAccess	memento . paranoidAt		7510605	1					
ANR	7510622	Identifier	memento		7510605	0					
ANR	7510623	Identifier	paranoidAt		7510605	1					
ANR	7510624	EqualityExpression	memento . paranoidAt != 0		7510605	1		!=			
ANR	7510625	MemberAccess	memento . paranoidAt		7510605	0					
ANR	7510626	Identifier	memento		7510605	0					
ANR	7510627	Identifier	paranoidAt		7510605	1					
ANR	7510628	PrimaryExpression	0		7510605	1					
ANR	7510629	CompoundStatement		3:79:104:104	7510605	1					
ANR	7510630	ExpressionStatement	memento . paranoia = 1	1775:8:51615:51635	7510605	0	True				
ANR	7510631	AssignmentExpression	memento . paranoia = 1		7510605	0		=			
ANR	7510632	MemberAccess	memento . paranoia		7510605	0					
ANR	7510633	Identifier	memento		7510605	0					
ANR	7510634	Identifier	paranoia		7510605	1					
ANR	7510635	PrimaryExpression	1		7510605	1					
ANR	7510636	ExpressionStatement	memento . countdown = 1	1776:8:51645:51666	7510605	1	True				
ANR	7510637	AssignmentExpression	memento . countdown = 1		7510605	0		=			
ANR	7510638	MemberAccess	memento . countdown		7510605	0					
ANR	7510639	Identifier	memento		7510605	0					
ANR	7510640	Identifier	countdown		7510605	1					
ANR	7510641	PrimaryExpression	1		7510605	1					
ANR	7510642	IfStatement	if ( -- memento . countdown == 0 )		7510605	2					
ANR	7510643	Condition	-- memento . countdown == 0	1778:8:51682:51705	7510605	0	True				
ANR	7510644	EqualityExpression	-- memento . countdown == 0		7510605	0		==			
ANR	7510645	UnaryExpression	-- memento . countdown		7510605	0					
ANR	7510646	IncDec	--		7510605	0					
ANR	7510647	MemberAccess	memento . countdown		7510605	1					
ANR	7510648	Identifier	memento		7510605	0					
ANR	7510649	Identifier	countdown		7510605	1					
ANR	7510650	PrimaryExpression	0		7510605	1					
ANR	7510651	CompoundStatement		7:34:207:207	7510605	1					
ANR	7510652	ExpressionStatement	Memento_checkAllMemoryLocked ( )	1779:8:51718:51748	7510605	0	True				
ANR	7510653	CallExpression	Memento_checkAllMemoryLocked ( )		7510605	0					
ANR	7510654	Callee	Memento_checkAllMemoryLocked		7510605	0					
ANR	7510655	Identifier	Memento_checkAllMemoryLocked		7510605	0					
ANR	7510656	ArgumentList			7510605	1					
ANR	7510657	IfStatement	if ( memento . paranoia > 0 )		7510605	1					
ANR	7510658	Condition	memento . paranoia > 0	1780:12:51762:51781	7510605	0	True				
ANR	7510659	RelationalExpression	memento . paranoia > 0		7510605	0		>			
ANR	7510660	MemberAccess	memento . paranoia		7510605	0					
ANR	7510661	Identifier	memento		7510605	0					
ANR	7510662	Identifier	paranoia		7510605	1					
ANR	7510663	PrimaryExpression	0		7510605	1					
ANR	7510664	ExpressionStatement	memento . countdown = memento . paranoia	1781:12:51796:51832	7510605	1	True				
ANR	7510665	AssignmentExpression	memento . countdown = memento . paranoia		7510605	0		=			
ANR	7510666	MemberAccess	memento . countdown		7510605	0					
ANR	7510667	Identifier	memento		7510605	0					
ANR	7510668	Identifier	countdown		7510605	1					
ANR	7510669	MemberAccess	memento . paranoia		7510605	1					
ANR	7510670	Identifier	memento		7510605	0					
ANR	7510671	Identifier	paranoia		7510605	1					
ANR	7510672	ElseStatement	else		7510605	0					
ANR	7510673	CompoundStatement		12:8:354:354	7510605	0					
ANR	7510674	ExpressionStatement	memento . countdown = - memento . paranoia	1784:12:51869:51906	7510605	0	True				
ANR	7510675	AssignmentExpression	memento . countdown = - memento . paranoia		7510605	0		=			
ANR	7510676	MemberAccess	memento . countdown		7510605	0					
ANR	7510677	Identifier	memento		7510605	0					
ANR	7510678	Identifier	countdown		7510605	1					
ANR	7510679	UnaryOperationExpression	- memento . paranoia		7510605	1					
ANR	7510680	UnaryOperator	-		7510605	0					
ANR	7510681	MemberAccess	memento . paranoia		7510605	1					
ANR	7510682	Identifier	memento		7510605	0					
ANR	7510683	Identifier	paranoia		7510605	1					
ANR	7510684	IfStatement	if ( memento . paranoia > INT_MIN / 2 )		7510605	1					
ANR	7510685	Condition	memento . paranoia > INT_MIN / 2	1785:16:51924:51951	7510605	0	True				
ANR	7510686	RelationalExpression	memento . paranoia > INT_MIN / 2		7510605	0		>			
ANR	7510687	MemberAccess	memento . paranoia		7510605	0					
ANR	7510688	Identifier	memento		7510605	0					
ANR	7510689	Identifier	paranoia		7510605	1					
ANR	7510690	MultiplicativeExpression	INT_MIN / 2		7510605	1		/			
ANR	7510691	Identifier	INT_MIN		7510605	0					
ANR	7510692	PrimaryExpression	2		7510605	1					
ANR	7510693	ExpressionStatement	memento . paranoia *= 2	1786:16:51970:51991	7510605	1	True				
ANR	7510694	AssignmentExpression	memento . paranoia *= 2		7510605	0		*=			
ANR	7510695	MemberAccess	memento . paranoia		7510605	0					
ANR	7510696	Identifier	memento		7510605	0					
ANR	7510697	Identifier	paranoia		7510605	1					
ANR	7510698	PrimaryExpression	2		7510605	1					
ANR	7510699	IfStatement	if ( memento . sequence == memento . breakAt )		7510605	3					
ANR	7510700	Condition	memento . sequence == memento . breakAt	1790:8:52018:52052	7510605	0	True				
ANR	7510701	EqualityExpression	memento . sequence == memento . breakAt		7510605	0		==			
ANR	7510702	MemberAccess	memento . sequence		7510605	0					
ANR	7510703	Identifier	memento		7510605	0					
ANR	7510704	Identifier	sequence		7510605	1					
ANR	7510705	MemberAccess	memento . breakAt		7510605	1					
ANR	7510706	Identifier	memento		7510605	0					
ANR	7510707	Identifier	breakAt		7510605	1					
ANR	7510708	CompoundStatement		19:45:554:554	7510605	1					
ANR	7510709	ExpressionStatement	"fprintf ( stderr , ""Breaking at event %d\\n"" , memento . breakAt )"	1791:8:52065:52123	7510605	0	True				
ANR	7510710	CallExpression	"fprintf ( stderr , ""Breaking at event %d\\n"" , memento . breakAt )"		7510605	0					
ANR	7510711	Callee	fprintf		7510605	0					
ANR	7510712	Identifier	fprintf		7510605	0					
ANR	7510713	ArgumentList	stderr		7510605	1					
ANR	7510714	Argument	stderr		7510605	0					
ANR	7510715	Identifier	stderr		7510605	0					
ANR	7510716	Argument	"""Breaking at event %d\\n"""		7510605	1					
ANR	7510717	PrimaryExpression	"""Breaking at event %d\\n"""		7510605	0					
ANR	7510718	Argument	memento . breakAt		7510605	2					
ANR	7510719	MemberAccess	memento . breakAt		7510605	0					
ANR	7510720	Identifier	memento		7510605	0					
ANR	7510721	Identifier	breakAt		7510605	1					
ANR	7510722	ReturnStatement	return 1 ;	1792:8:52133:52141	7510605	1	True				
ANR	7510723	PrimaryExpression	1		7510605	0					
ANR	7510724	ReturnStatement	return 0 ;	1794:4:52153:52161	7510605	4	True				
ANR	7510725	PrimaryExpression	0		7510605	0					
ANR	7510726	ReturnType	static int		7510605	1					
ANR	7510727	Identifier	Memento_event		7510605	2					
ANR	7510728	ParameterList			7510605	3					
ANR	7510729	CFGEntryNode	ENTRY		7510605		True				
ANR	7510730	CFGExitNode	EXIT		7510605		True				
ANR	7510731	Symbol	memento . breakAt		7510605						
ANR	7510732	Symbol	memento . paranoidAt		7510605						
ANR	7510733	Symbol	memento . paranoia		7510605						
ANR	7510734	Symbol	memento		7510605						
ANR	7510735	Symbol	memento . countdown		7510605						
ANR	7510736	Symbol	stderr		7510605						
ANR	7510737	Symbol	memento . sequence		7510605						
ANR	7510738	Symbol	INT_MIN		7510605						
ANR	7510739	Function	Memento_sequence	1797:0:52166:52224							
ANR	7510740	FunctionDef	Memento_sequence ()		7510739	0					
ANR	7510741	CompoundStatement		1798:0:52193:52224	7510739	0					
ANR	7510742	ReturnStatement	return memento . sequence ;	1799:4:52199:52222	7510739	0	True				
ANR	7510743	MemberAccess	memento . sequence		7510739	0					
ANR	7510744	Identifier	memento		7510739	0					
ANR	7510745	Identifier	sequence		7510739	1					
ANR	7510746	ReturnType	int		7510739	1					
ANR	7510747	Identifier	Memento_sequence		7510739	2					
ANR	7510748	ParameterList			7510739	3					
ANR	7510749	CFGEntryNode	ENTRY		7510739		True				
ANR	7510750	CFGExitNode	EXIT		7510739		True				
ANR	7510751	Symbol	memento		7510739						
ANR	7510752	Symbol	memento . sequence		7510739						
ANR	7510753	Function	Memento_breakAt	1802:0:52227:52349							
ANR	7510754	FunctionDef	Memento_breakAt (int event)		7510753	0					
ANR	7510755	CompoundStatement		1803:0:52258:52349	7510753	0					
ANR	7510756	ExpressionStatement	MEMENTO_LOCK ( )	1804:4:52264:52278	7510753	0	True				
ANR	7510757	CallExpression	MEMENTO_LOCK ( )		7510753	0					
ANR	7510758	Callee	MEMENTO_LOCK		7510753	0					
ANR	7510759	Identifier	MEMENTO_LOCK		7510753	0					
ANR	7510760	ArgumentList			7510753	1					
ANR	7510761	ExpressionStatement	memento . breakAt = event	1805:4:52284:52307	7510753	1	True				
ANR	7510762	AssignmentExpression	memento . breakAt = event		7510753	0		=			
ANR	7510763	MemberAccess	memento . breakAt		7510753	0					
ANR	7510764	Identifier	memento		7510753	0					
ANR	7510765	Identifier	breakAt		7510753	1					
ANR	7510766	Identifier	event		7510753	1					
ANR	7510767	ExpressionStatement	MEMENTO_UNLOCK ( )	1806:4:52313:52329	7510753	2	True				
ANR	7510768	CallExpression	MEMENTO_UNLOCK ( )		7510753	0					
ANR	7510769	Callee	MEMENTO_UNLOCK		7510753	0					
ANR	7510770	Identifier	MEMENTO_UNLOCK		7510753	0					
ANR	7510771	ArgumentList			7510753	1					
ANR	7510772	ReturnStatement	return event ;	1807:4:52335:52347	7510753	3	True				
ANR	7510773	Identifier	event		7510753	0					
ANR	7510774	ReturnType	int		7510753	1					
ANR	7510775	Identifier	Memento_breakAt		7510753	2					
ANR	7510776	ParameterList	int event		7510753	3					
ANR	7510777	Parameter	int event	1802:20:52247:52255	7510753	0	True				
ANR	7510778	ParameterType	int		7510753	0					
ANR	7510779	Identifier	event		7510753	1					
ANR	7510780	CFGEntryNode	ENTRY		7510753		True				
ANR	7510781	CFGExitNode	EXIT		7510753		True				
ANR	7510782	Symbol	memento . breakAt		7510753						
ANR	7510783	Symbol	memento		7510753						
ANR	7510784	Symbol	event		7510753						
ANR	7510785	Function	safe_find_block	1810:0:52352:53412							
ANR	7510786	FunctionDef	safe_find_block (void * ptr)		7510785	0					
ANR	7510787	CompoundStatement		1811:0:52392:53412	7510785	0					
ANR	7510788	IdentifierDeclStatement	Memento_BlkHeader * block ;	1812:4:52398:52422	7510785	0	True				
ANR	7510789	IdentifierDecl	* block		7510785	0					
ANR	7510790	IdentifierDeclType	Memento_BlkHeader *		7510785	0					
ANR	7510791	Identifier	block		7510785	1					
ANR	7510792	IdentifierDeclStatement	int valid ;	1813:4:52428:52437	7510785	1	True				
ANR	7510793	IdentifierDecl	valid		7510785	0					
ANR	7510794	IdentifierDeclType	int		7510785	0					
ANR	7510795	Identifier	valid		7510785	1					
ANR	7510796	IfStatement	if ( ptr == NULL )		7510785	2					
ANR	7510797	Condition	ptr == NULL	1815:8:52448:52458	7510785	0	True				
ANR	7510798	EqualityExpression	ptr == NULL		7510785	0		==			
ANR	7510799	Identifier	ptr		7510785	0					
ANR	7510800	Identifier	NULL		7510785	1					
ANR	7510801	ReturnStatement	return NULL ;	1816:8:52469:52480	7510785	1	True				
ANR	7510802	Identifier	NULL		7510785	0					
ANR	7510803	ExpressionStatement	block = MEMBLK_FROMBLK ( ptr )	1818:4:52487:52514	7510785	3	True				
ANR	7510804	AssignmentExpression	block = MEMBLK_FROMBLK ( ptr )		7510785	0		=			
ANR	7510805	Identifier	block		7510785	0					
ANR	7510806	CallExpression	MEMBLK_FROMBLK ( ptr )		7510785	1					
ANR	7510807	Callee	MEMBLK_FROMBLK		7510785	0					
ANR	7510808	Identifier	MEMBLK_FROMBLK		7510785	0					
ANR	7510809	ArgumentList	ptr		7510785	1					
ANR	7510810	Argument	ptr		7510785	0					
ANR	7510811	Identifier	ptr		7510785	0					
ANR	7510812	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( & block -> child , sizeof ( block -> child ) )"	1823:4:52725:52787	7510785	4	True				
ANR	7510813	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( & block -> child , sizeof ( block -> child ) )"		7510785	0					
ANR	7510814	Callee	VALGRIND_MAKE_MEM_DEFINED		7510785	0					
ANR	7510815	Identifier	VALGRIND_MAKE_MEM_DEFINED		7510785	0					
ANR	7510816	ArgumentList	& block -> child		7510785	1					
ANR	7510817	Argument	& block -> child		7510785	0					
ANR	7510818	UnaryOperationExpression	& block -> child		7510785	0					
ANR	7510819	UnaryOperator	&		7510785	0					
ANR	7510820	PtrMemberAccess	block -> child		7510785	1					
ANR	7510821	Identifier	block		7510785	0					
ANR	7510822	Identifier	child		7510785	1					
ANR	7510823	Argument	sizeof ( block -> child )		7510785	1					
ANR	7510824	SizeofExpression	sizeof ( block -> child )		7510785	0					
ANR	7510825	Sizeof	sizeof		7510785	0					
ANR	7510826	PtrMemberAccess	block -> child		7510785	1					
ANR	7510827	Identifier	block		7510785	0					
ANR	7510828	Identifier	child		7510785	1					
ANR	7510829	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( & block -> sibling , sizeof ( block -> sibling ) )"	1824:4:52793:52859	7510785	5	True				
ANR	7510830	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( & block -> sibling , sizeof ( block -> sibling ) )"		7510785	0					
ANR	7510831	Callee	VALGRIND_MAKE_MEM_DEFINED		7510785	0					
ANR	7510832	Identifier	VALGRIND_MAKE_MEM_DEFINED		7510785	0					
ANR	7510833	ArgumentList	& block -> sibling		7510785	1					
ANR	7510834	Argument	& block -> sibling		7510785	0					
ANR	7510835	UnaryOperationExpression	& block -> sibling		7510785	0					
ANR	7510836	UnaryOperator	&		7510785	0					
ANR	7510837	PtrMemberAccess	block -> sibling		7510785	1					
ANR	7510838	Identifier	block		7510785	0					
ANR	7510839	Identifier	sibling		7510785	1					
ANR	7510840	Argument	sizeof ( block -> sibling )		7510785	1					
ANR	7510841	SizeofExpression	sizeof ( block -> sibling )		7510785	0					
ANR	7510842	Sizeof	sizeof		7510785	0					
ANR	7510843	PtrMemberAccess	block -> sibling		7510785	1					
ANR	7510844	Identifier	block		7510785	0					
ANR	7510845	Identifier	sibling		7510785	1					
ANR	7510846	ExpressionStatement	valid = ( block -> child == MEMENTO_CHILD_MAGIC && block -> sibling == MEMENTO_SIBLING_MAGIC )	1825:4:52865:52966	7510785	6	True				
ANR	7510847	AssignmentExpression	valid = ( block -> child == MEMENTO_CHILD_MAGIC && block -> sibling == MEMENTO_SIBLING_MAGIC )		7510785	0		=			
ANR	7510848	Identifier	valid		7510785	0					
ANR	7510849	AndExpression	block -> child == MEMENTO_CHILD_MAGIC && block -> sibling == MEMENTO_SIBLING_MAGIC		7510785	1		&&			
ANR	7510850	EqualityExpression	block -> child == MEMENTO_CHILD_MAGIC		7510785	0		==			
ANR	7510851	PtrMemberAccess	block -> child		7510785	0					
ANR	7510852	Identifier	block		7510785	0					
ANR	7510853	Identifier	child		7510785	1					
ANR	7510854	Identifier	MEMENTO_CHILD_MAGIC		7510785	1					
ANR	7510855	EqualityExpression	block -> sibling == MEMENTO_SIBLING_MAGIC		7510785	1		==			
ANR	7510856	PtrMemberAccess	block -> sibling		7510785	0					
ANR	7510857	Identifier	block		7510785	0					
ANR	7510858	Identifier	sibling		7510785	1					
ANR	7510859	Identifier	MEMENTO_SIBLING_MAGIC		7510785	1					
ANR	7510860	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( & block -> child , sizeof ( block -> child ) )"	1827:4:52972:53035	7510785	7	True				
ANR	7510861	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( & block -> child , sizeof ( block -> child ) )"		7510785	0					
ANR	7510862	Callee	VALGRIND_MAKE_MEM_NOACCESS		7510785	0					
ANR	7510863	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7510785	0					
ANR	7510864	ArgumentList	& block -> child		7510785	1					
ANR	7510865	Argument	& block -> child		7510785	0					
ANR	7510866	UnaryOperationExpression	& block -> child		7510785	0					
ANR	7510867	UnaryOperator	&		7510785	0					
ANR	7510868	PtrMemberAccess	block -> child		7510785	1					
ANR	7510869	Identifier	block		7510785	0					
ANR	7510870	Identifier	child		7510785	1					
ANR	7510871	Argument	sizeof ( block -> child )		7510785	1					
ANR	7510872	SizeofExpression	sizeof ( block -> child )		7510785	0					
ANR	7510873	Sizeof	sizeof		7510785	0					
ANR	7510874	PtrMemberAccess	block -> child		7510785	1					
ANR	7510875	Identifier	block		7510785	0					
ANR	7510876	Identifier	child		7510785	1					
ANR	7510877	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( & block -> sibling , sizeof ( block -> sibling ) )"	1828:4:53041:53108	7510785	8	True				
ANR	7510878	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( & block -> sibling , sizeof ( block -> sibling ) )"		7510785	0					
ANR	7510879	Callee	VALGRIND_MAKE_MEM_NOACCESS		7510785	0					
ANR	7510880	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7510785	0					
ANR	7510881	ArgumentList	& block -> sibling		7510785	1					
ANR	7510882	Argument	& block -> sibling		7510785	0					
ANR	7510883	UnaryOperationExpression	& block -> sibling		7510785	0					
ANR	7510884	UnaryOperator	&		7510785	0					
ANR	7510885	PtrMemberAccess	block -> sibling		7510785	1					
ANR	7510886	Identifier	block		7510785	0					
ANR	7510887	Identifier	sibling		7510785	1					
ANR	7510888	Argument	sizeof ( block -> sibling )		7510785	1					
ANR	7510889	SizeofExpression	sizeof ( block -> sibling )		7510785	0					
ANR	7510890	Sizeof	sizeof		7510785	0					
ANR	7510891	PtrMemberAccess	block -> sibling		7510785	1					
ANR	7510892	Identifier	block		7510785	0					
ANR	7510893	Identifier	sibling		7510785	1					
ANR	7510894	IfStatement	if ( ! valid )		7510785	9					
ANR	7510895	Condition	! valid	1829:8:53118:53123	7510785	0	True				
ANR	7510896	UnaryOperationExpression	! valid		7510785	0					
ANR	7510897	UnaryOperator	!		7510785	0					
ANR	7510898	Identifier	valid		7510785	1					
ANR	7510899	CompoundStatement		21:8:747:763	7510785	1					
ANR	7510900	IdentifierDeclStatement	findBlkData data ;	1831:8:53140:53156	7510785	0	True				
ANR	7510901	IdentifierDecl	data		7510785	0					
ANR	7510902	IdentifierDeclType	findBlkData		7510785	0					
ANR	7510903	Identifier	data		7510785	1					
ANR	7510904	ExpressionStatement	data . addr = ptr	1833:8:53167:53183	7510785	1	True				
ANR	7510905	AssignmentExpression	data . addr = ptr		7510785	0		=			
ANR	7510906	MemberAccess	data . addr		7510785	0					
ANR	7510907	Identifier	data		7510785	0					
ANR	7510908	Identifier	addr		7510785	1					
ANR	7510909	Identifier	ptr		7510785	1					
ANR	7510910	ExpressionStatement	data . blk = NULL	1834:8:53193:53210	7510785	2	True				
ANR	7510911	AssignmentExpression	data . blk = NULL		7510785	0		=			
ANR	7510912	MemberAccess	data . blk		7510785	0					
ANR	7510913	Identifier	data		7510785	0					
ANR	7510914	Identifier	blk		7510785	1					
ANR	7510915	Identifier	NULL		7510785	1					
ANR	7510916	ExpressionStatement	data . flags = 0	1835:8:53220:53234	7510785	3	True				
ANR	7510917	AssignmentExpression	data . flags = 0		7510785	0		=			
ANR	7510918	MemberAccess	data . flags		7510785	0					
ANR	7510919	Identifier	data		7510785	0					
ANR	7510920	Identifier	flags		7510785	1					
ANR	7510921	PrimaryExpression	0		7510785	1					
ANR	7510922	ExpressionStatement	"Memento_appBlocks ( & memento . used , Memento_containsAddr , & data )"	1836:8:53244:53305	7510785	4	True				
ANR	7510923	CallExpression	"Memento_appBlocks ( & memento . used , Memento_containsAddr , & data )"		7510785	0					
ANR	7510924	Callee	Memento_appBlocks		7510785	0					
ANR	7510925	Identifier	Memento_appBlocks		7510785	0					
ANR	7510926	ArgumentList	& memento . used		7510785	1					
ANR	7510927	Argument	& memento . used		7510785	0					
ANR	7510928	UnaryOperationExpression	& memento . used		7510785	0					
ANR	7510929	UnaryOperator	&		7510785	0					
ANR	7510930	MemberAccess	memento . used		7510785	1					
ANR	7510931	Identifier	memento		7510785	0					
ANR	7510932	Identifier	used		7510785	1					
ANR	7510933	Argument	Memento_containsAddr		7510785	1					
ANR	7510934	Identifier	Memento_containsAddr		7510785	0					
ANR	7510935	Argument	& data		7510785	2					
ANR	7510936	UnaryOperationExpression	& data		7510785	0					
ANR	7510937	UnaryOperator	&		7510785	0					
ANR	7510938	Identifier	data		7510785	1					
ANR	7510939	IfStatement	if ( data . blk == NULL )		7510785	5					
ANR	7510940	Condition	data . blk == NULL	1837:12:53319:53334	7510785	0	True				
ANR	7510941	EqualityExpression	data . blk == NULL		7510785	0		==			
ANR	7510942	MemberAccess	data . blk		7510785	0					
ANR	7510943	Identifier	data		7510785	0					
ANR	7510944	Identifier	blk		7510785	1					
ANR	7510945	Identifier	NULL		7510785	1					
ANR	7510946	ReturnStatement	return NULL ;	1838:12:53349:53360	7510785	1	True				
ANR	7510947	Identifier	NULL		7510785	0					
ANR	7510948	ExpressionStatement	block = data . blk	1839:8:53370:53386	7510785	6	True				
ANR	7510949	AssignmentExpression	block = data . blk		7510785	0		=			
ANR	7510950	Identifier	block		7510785	0					
ANR	7510951	MemberAccess	data . blk		7510785	1					
ANR	7510952	Identifier	data		7510785	0					
ANR	7510953	Identifier	blk		7510785	1					
ANR	7510954	ReturnStatement	return block ;	1841:4:53398:53410	7510785	10	True				
ANR	7510955	Identifier	block		7510785	0					
ANR	7510956	ReturnType	static void *		7510785	1					
ANR	7510957	Identifier	safe_find_block		7510785	2					
ANR	7510958	ParameterList	void * ptr		7510785	3					
ANR	7510959	Parameter	void * ptr	1810:29:52381:52389	7510785	0	True				
ANR	7510960	ParameterType	void *		7510785	0					
ANR	7510961	Identifier	ptr		7510785	1					
ANR	7510962	CFGEntryNode	ENTRY		7510785		True				
ANR	7510963	CFGExitNode	EXIT		7510785		True				
ANR	7510964	Symbol	block -> sibling		7510785						
ANR	7510965	Symbol	& memento		7510785						
ANR	7510966	Symbol	NULL		7510785						
ANR	7510967	Symbol	data		7510785						
ANR	7510968	Symbol	MEMENTO_SIBLING_MAGIC		7510785						
ANR	7510969	Symbol	memento		7510785						
ANR	7510970	Symbol	& block -> child		7510785						
ANR	7510971	Symbol	& block -> sibling		7510785						
ANR	7510972	Symbol	data . addr		7510785						
ANR	7510973	Symbol	& data		7510785						
ANR	7510974	Symbol	ptr		7510785						
ANR	7510975	Symbol	* block		7510785						
ANR	7510976	Symbol	data . blk		7510785						
ANR	7510977	Symbol	data . flags		7510785						
ANR	7510978	Symbol	valid		7510785						
ANR	7510979	Symbol	MEMENTO_CHILD_MAGIC		7510785						
ANR	7510980	Symbol	& memento . used		7510785						
ANR	7510981	Symbol	MEMBLK_FROMBLK		7510785						
ANR	7510982	Symbol	Memento_containsAddr		7510785						
ANR	7510983	Symbol	block		7510785						
ANR	7510984	Symbol	block -> child		7510785						
ANR	7510985	Function	Memento_label	1844:0:53415:53842							
ANR	7510986	FunctionDef	"Memento_label (void * ptr , const char * label)"		7510985	0					
ANR	7510987	CompoundStatement		1845:0:53465:53842	7510985	0					
ANR	7510988	IdentifierDeclStatement	Memento_BlkHeader * block ;	1846:4:53471:53495	7510985	0	True				
ANR	7510989	IdentifierDecl	* block		7510985	0					
ANR	7510990	IdentifierDeclType	Memento_BlkHeader *		7510985	0					
ANR	7510991	Identifier	block		7510985	1					
ANR	7510992	IfStatement	if ( ptr == NULL )		7510985	1					
ANR	7510993	Condition	ptr == NULL	1848:8:53506:53516	7510985	0	True				
ANR	7510994	EqualityExpression	ptr == NULL		7510985	0		==			
ANR	7510995	Identifier	ptr		7510985	0					
ANR	7510996	Identifier	NULL		7510985	1					
ANR	7510997	ReturnStatement	return NULL ;	1849:8:53527:53538	7510985	1	True				
ANR	7510998	Identifier	NULL		7510985	0					
ANR	7510999	ExpressionStatement	MEMENTO_LOCK ( )	1850:4:53544:53558	7510985	2	True				
ANR	7511000	CallExpression	MEMENTO_LOCK ( )		7510985	0					
ANR	7511001	Callee	MEMENTO_LOCK		7510985	0					
ANR	7511002	Identifier	MEMENTO_LOCK		7510985	0					
ANR	7511003	ArgumentList			7510985	1					
ANR	7511004	ExpressionStatement	block = safe_find_block ( ptr )	1851:4:53564:53592	7510985	3	True				
ANR	7511005	AssignmentExpression	block = safe_find_block ( ptr )		7510985	0		=			
ANR	7511006	Identifier	block		7510985	0					
ANR	7511007	CallExpression	safe_find_block ( ptr )		7510985	1					
ANR	7511008	Callee	safe_find_block		7510985	0					
ANR	7511009	Identifier	safe_find_block		7510985	0					
ANR	7511010	ArgumentList	ptr		7510985	1					
ANR	7511011	Argument	ptr		7510985	0					
ANR	7511012	Identifier	ptr		7510985	0					
ANR	7511013	IfStatement	if ( block != NULL )		7510985	4					
ANR	7511014	Condition	block != NULL	1852:8:53602:53614	7510985	0	True				
ANR	7511015	EqualityExpression	block != NULL		7510985	0		!=			
ANR	7511016	Identifier	block		7510985	0					
ANR	7511017	Identifier	NULL		7510985	1					
ANR	7511018	CompoundStatement		9:4:155:155	7510985	1					
ANR	7511019	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( & block -> label , sizeof ( block -> label ) )"	1854:8:53631:53693	7510985	0	True				
ANR	7511020	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( & block -> label , sizeof ( block -> label ) )"		7510985	0					
ANR	7511021	Callee	VALGRIND_MAKE_MEM_DEFINED		7510985	0					
ANR	7511022	Identifier	VALGRIND_MAKE_MEM_DEFINED		7510985	0					
ANR	7511023	ArgumentList	& block -> label		7510985	1					
ANR	7511024	Argument	& block -> label		7510985	0					
ANR	7511025	UnaryOperationExpression	& block -> label		7510985	0					
ANR	7511026	UnaryOperator	&		7510985	0					
ANR	7511027	PtrMemberAccess	block -> label		7510985	1					
ANR	7511028	Identifier	block		7510985	0					
ANR	7511029	Identifier	label		7510985	1					
ANR	7511030	Argument	sizeof ( block -> label )		7510985	1					
ANR	7511031	SizeofExpression	sizeof ( block -> label )		7510985	0					
ANR	7511032	Sizeof	sizeof		7510985	0					
ANR	7511033	PtrMemberAccess	block -> label		7510985	1					
ANR	7511034	Identifier	block		7510985	0					
ANR	7511035	Identifier	label		7510985	1					
ANR	7511036	ExpressionStatement	block -> label = label	1855:8:53703:53723	7510985	1	True				
ANR	7511037	AssignmentExpression	block -> label = label		7510985	0		=			
ANR	7511038	PtrMemberAccess	block -> label		7510985	0					
ANR	7511039	Identifier	block		7510985	0					
ANR	7511040	Identifier	label		7510985	1					
ANR	7511041	Identifier	label		7510985	1					
ANR	7511042	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( & block -> label , sizeof ( block -> label ) )"	1856:8:53733:53796	7510985	2	True				
ANR	7511043	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( & block -> label , sizeof ( block -> label ) )"		7510985	0					
ANR	7511044	Callee	VALGRIND_MAKE_MEM_NOACCESS		7510985	0					
ANR	7511045	Identifier	VALGRIND_MAKE_MEM_NOACCESS		7510985	0					
ANR	7511046	ArgumentList	& block -> label		7510985	1					
ANR	7511047	Argument	& block -> label		7510985	0					
ANR	7511048	UnaryOperationExpression	& block -> label		7510985	0					
ANR	7511049	UnaryOperator	&		7510985	0					
ANR	7511050	PtrMemberAccess	block -> label		7510985	1					
ANR	7511051	Identifier	block		7510985	0					
ANR	7511052	Identifier	label		7510985	1					
ANR	7511053	Argument	sizeof ( block -> label )		7510985	1					
ANR	7511054	SizeofExpression	sizeof ( block -> label )		7510985	0					
ANR	7511055	Sizeof	sizeof		7510985	0					
ANR	7511056	PtrMemberAccess	block -> label		7510985	1					
ANR	7511057	Identifier	block		7510985	0					
ANR	7511058	Identifier	label		7510985	1					
ANR	7511059	ExpressionStatement	MEMENTO_UNLOCK ( )	1858:4:53808:53824	7510985	5	True				
ANR	7511060	CallExpression	MEMENTO_UNLOCK ( )		7510985	0					
ANR	7511061	Callee	MEMENTO_UNLOCK		7510985	0					
ANR	7511062	Identifier	MEMENTO_UNLOCK		7510985	0					
ANR	7511063	ArgumentList			7510985	1					
ANR	7511064	ReturnStatement	return ptr ;	1859:4:53830:53840	7510985	6	True				
ANR	7511065	Identifier	ptr		7510985	0					
ANR	7511066	ReturnType	void *		7510985	1					
ANR	7511067	Identifier	Memento_label		7510985	2					
ANR	7511068	ParameterList	"void * ptr , const char * label"		7510985	3					
ANR	7511069	Parameter	void * ptr	1844:20:53435:53443	7510985	0	True				
ANR	7511070	ParameterType	void *		7510985	0					
ANR	7511071	Identifier	ptr		7510985	1					
ANR	7511072	Parameter	const char * label	1844:31:53446:53462	7510985	1	True				
ANR	7511073	ParameterType	const char *		7510985	0					
ANR	7511074	Identifier	label		7510985	1					
ANR	7511075	CFGEntryNode	ENTRY		7510985		True				
ANR	7511076	CFGExitNode	EXIT		7510985		True				
ANR	7511077	Symbol	NULL		7510985						
ANR	7511078	Symbol	safe_find_block		7510985						
ANR	7511079	Symbol	& block -> label		7510985						
ANR	7511080	Symbol	block		7510985						
ANR	7511081	Symbol	label		7510985						
ANR	7511082	Symbol	ptr		7510985						
ANR	7511083	Symbol	block -> label		7510985						
ANR	7511084	Symbol	* block		7510985						
ANR	7511085	Function	Memento_tick	1862:0:53845:53966							
ANR	7511086	FunctionDef	Memento_tick ()		7511085	0					
ANR	7511087	CompoundStatement		1863:0:53869:53966	7511085	0					
ANR	7511088	ExpressionStatement	MEMENTO_LOCK ( )	1864:4:53875:53889	7511085	0	True				
ANR	7511089	CallExpression	MEMENTO_LOCK ( )		7511085	0					
ANR	7511090	Callee	MEMENTO_LOCK		7511085	0					
ANR	7511091	Identifier	MEMENTO_LOCK		7511085	0					
ANR	7511092	ArgumentList			7511085	1					
ANR	7511093	IfStatement	if ( Memento_event ( ) )		7511085	1					
ANR	7511094	Condition	Memento_event ( )	1865:8:53899:53913	7511085	0	True				
ANR	7511095	CallExpression	Memento_event ( )		7511085	0					
ANR	7511096	Callee	Memento_event		7511085	0					
ANR	7511097	Identifier	Memento_event		7511085	0					
ANR	7511098	ArgumentList			7511085	1					
ANR	7511099	ExpressionStatement	Memento_breakpointLocked ( )	1865:25:53916:53942	7511085	1	True				
ANR	7511100	CallExpression	Memento_breakpointLocked ( )		7511085	0					
ANR	7511101	Callee	Memento_breakpointLocked		7511085	0					
ANR	7511102	Identifier	Memento_breakpointLocked		7511085	0					
ANR	7511103	ArgumentList			7511085	1					
ANR	7511104	ExpressionStatement	MEMENTO_UNLOCK ( )	1866:4:53948:53964	7511085	2	True				
ANR	7511105	CallExpression	MEMENTO_UNLOCK ( )		7511085	0					
ANR	7511106	Callee	MEMENTO_UNLOCK		7511085	0					
ANR	7511107	Identifier	MEMENTO_UNLOCK		7511085	0					
ANR	7511108	ArgumentList			7511085	1					
ANR	7511109	ReturnType	void		7511085	1					
ANR	7511110	Identifier	Memento_tick		7511085	2					
ANR	7511111	ParameterList			7511085	3					
ANR	7511112	CFGEntryNode	ENTRY		7511085		True				
ANR	7511113	CFGExitNode	EXIT		7511085		True				
ANR	7511114	Symbol	Memento_event		7511085						
ANR	7511115	Function	Memento_failThisEventLocked	1869:0:53969:55080							
ANR	7511116	FunctionDef	Memento_failThisEventLocked ()		7511115	0					
ANR	7511117	CompoundStatement		1870:0:54014:55080	7511115	0					
ANR	7511118	IdentifierDeclStatement	int failThisOne ;	1871:4:54020:54035	7511115	0	True				
ANR	7511119	IdentifierDecl	failThisOne		7511115	0					
ANR	7511120	IdentifierDeclType	int		7511115	0					
ANR	7511121	Identifier	failThisOne		7511115	1					
ANR	7511122	IfStatement	if ( Memento_event ( ) )		7511115	1					
ANR	7511123	Condition	Memento_event ( )	1873:8:54046:54060	7511115	0	True				
ANR	7511124	CallExpression	Memento_event ( )		7511115	0					
ANR	7511125	Callee	Memento_event		7511115	0					
ANR	7511126	Identifier	Memento_event		7511115	0					
ANR	7511127	ArgumentList			7511115	1					
ANR	7511128	ExpressionStatement	Memento_breakpointLocked ( )	1873:25:54063:54089	7511115	1	True				
ANR	7511129	CallExpression	Memento_breakpointLocked ( )		7511115	0					
ANR	7511130	Callee	Memento_breakpointLocked		7511115	0					
ANR	7511131	Identifier	Memento_breakpointLocked		7511115	0					
ANR	7511132	ArgumentList			7511115	1					
ANR	7511133	IfStatement	if ( ( memento . sequence >= memento . failAt ) && ( memento . failAt != 0 ) )		7511115	2					
ANR	7511134	Condition	( memento . sequence >= memento . failAt ) && ( memento . failAt != 0 )	1875:8:54100:54160	7511115	0	True				
ANR	7511135	AndExpression	( memento . sequence >= memento . failAt ) && ( memento . failAt != 0 )		7511115	0		&&			
ANR	7511136	RelationalExpression	memento . sequence >= memento . failAt		7511115	0		>=			
ANR	7511137	MemberAccess	memento . sequence		7511115	0					
ANR	7511138	Identifier	memento		7511115	0					
ANR	7511139	Identifier	sequence		7511115	1					
ANR	7511140	MemberAccess	memento . failAt		7511115	1					
ANR	7511141	Identifier	memento		7511115	0					
ANR	7511142	Identifier	failAt		7511115	1					
ANR	7511143	EqualityExpression	memento . failAt != 0		7511115	1		!=			
ANR	7511144	MemberAccess	memento . failAt		7511115	0					
ANR	7511145	Identifier	memento		7511115	0					
ANR	7511146	Identifier	failAt		7511115	1					
ANR	7511147	PrimaryExpression	0		7511115	1					
ANR	7511148	ExpressionStatement	Memento_startFailing ( )	1876:8:54171:54193	7511115	1	True				
ANR	7511149	CallExpression	Memento_startFailing ( )		7511115	0					
ANR	7511150	Callee	Memento_startFailing		7511115	0					
ANR	7511151	Identifier	Memento_startFailing		7511115	0					
ANR	7511152	ArgumentList			7511115	1					
ANR	7511153	IfStatement	if ( ( memento . sequence >= memento . squeezeAt ) && ( memento . squeezeAt != 0 ) )		7511115	3					
ANR	7511154	Condition	( memento . sequence >= memento . squeezeAt ) && ( memento . squeezeAt != 0 )	1877:8:54203:54269	7511115	0	True				
ANR	7511155	AndExpression	( memento . sequence >= memento . squeezeAt ) && ( memento . squeezeAt != 0 )		7511115	0		&&			
ANR	7511156	RelationalExpression	memento . sequence >= memento . squeezeAt		7511115	0		>=			
ANR	7511157	MemberAccess	memento . sequence		7511115	0					
ANR	7511158	Identifier	memento		7511115	0					
ANR	7511159	Identifier	sequence		7511115	1					
ANR	7511160	MemberAccess	memento . squeezeAt		7511115	1					
ANR	7511161	Identifier	memento		7511115	0					
ANR	7511162	Identifier	squeezeAt		7511115	1					
ANR	7511163	EqualityExpression	memento . squeezeAt != 0		7511115	1		!=			
ANR	7511164	MemberAccess	memento . squeezeAt		7511115	0					
ANR	7511165	Identifier	memento		7511115	0					
ANR	7511166	Identifier	squeezeAt		7511115	1					
ANR	7511167	PrimaryExpression	0		7511115	1					
ANR	7511168	CompoundStatement		8:77:257:257	7511115	1					
ANR	7511169	ReturnStatement	return squeeze ( ) ;	1878:8:54282:54298	7511115	0	True				
ANR	7511170	CallExpression	squeeze ( )		7511115	0					
ANR	7511171	Callee	squeeze		7511115	0					
ANR	7511172	Identifier	squeeze		7511115	0					
ANR	7511173	ArgumentList			7511115	1					
ANR	7511174	IfStatement	if ( ! memento . failing )		7511115	4					
ANR	7511175	Condition	! memento . failing	1881:8:54315:54330	7511115	0	True				
ANR	7511176	UnaryOperationExpression	! memento . failing		7511115	0					
ANR	7511177	UnaryOperator	!		7511115	0					
ANR	7511178	MemberAccess	memento . failing		7511115	1					
ANR	7511179	Identifier	memento		7511115	0					
ANR	7511180	Identifier	failing		7511115	1					
ANR	7511181	ReturnStatement	return 0 ;	1882:8:54341:54349	7511115	1	True				
ANR	7511182	PrimaryExpression	0		7511115	0					
ANR	7511183	ExpressionStatement	failThisOne = ( ( memento . patternBit & memento . pattern ) == 0 )	1883:4:54355:54414	7511115	5	True				
ANR	7511184	AssignmentExpression	failThisOne = ( ( memento . patternBit & memento . pattern ) == 0 )		7511115	0		=			
ANR	7511185	Identifier	failThisOne		7511115	0					
ANR	7511186	EqualityExpression	( memento . patternBit & memento . pattern ) == 0		7511115	1		==			
ANR	7511187	BitAndExpression	memento . patternBit & memento . pattern		7511115	0		&			
ANR	7511188	MemberAccess	memento . patternBit		7511115	0					
ANR	7511189	Identifier	memento		7511115	0					
ANR	7511190	Identifier	patternBit		7511115	1					
ANR	7511191	MemberAccess	memento . pattern		7511115	1					
ANR	7511192	Identifier	memento		7511115	0					
ANR	7511193	Identifier	pattern		7511115	1					
ANR	7511194	PrimaryExpression	0		7511115	1					
ANR	7511195	IfStatement	if ( memento . failing && ( ( ~ ( memento . patternBit - 1 ) & memento . pattern ) == 0 ) && ( memento . patternBit != 0 ) && memento . nextPattern == 0 )		7511115	6					
ANR	7511196	Condition	memento . failing && ( ( ~ ( memento . patternBit - 1 ) & memento . pattern ) == 0 ) && ( memento . patternBit != 0 ) && memento . nextPattern == 0	1887:8:54631:54780	7511115	0	True				
ANR	7511197	AndExpression	memento . failing && ( ( ~ ( memento . patternBit - 1 ) & memento . pattern ) == 0 ) && ( memento . patternBit != 0 ) && memento . nextPattern == 0		7511115	0		&&			
ANR	7511198	MemberAccess	memento . failing		7511115	0					
ANR	7511199	Identifier	memento		7511115	0					
ANR	7511200	Identifier	failing		7511115	1					
ANR	7511201	AndExpression	( ( ~ ( memento . patternBit - 1 ) & memento . pattern ) == 0 ) && ( memento . patternBit != 0 ) && memento . nextPattern == 0		7511115	1		&&			
ANR	7511202	EqualityExpression	( ~ ( memento . patternBit - 1 ) & memento . pattern ) == 0		7511115	0		==			
ANR	7511203	BitAndExpression	~ ( memento . patternBit - 1 ) & memento . pattern		7511115	0		&			
ANR	7511204	UnaryOperationExpression	~ ( memento . patternBit - 1 )		7511115	0					
ANR	7511205	UnaryOperator	~		7511115	0					
ANR	7511206	AdditiveExpression	memento . patternBit - 1		7511115	1		-			
ANR	7511207	MemberAccess	memento . patternBit		7511115	0					
ANR	7511208	Identifier	memento		7511115	0					
ANR	7511209	Identifier	patternBit		7511115	1					
ANR	7511210	PrimaryExpression	1		7511115	1					
ANR	7511211	MemberAccess	memento . pattern		7511115	1					
ANR	7511212	Identifier	memento		7511115	0					
ANR	7511213	Identifier	pattern		7511115	1					
ANR	7511214	PrimaryExpression	0		7511115	1					
ANR	7511215	AndExpression	( memento . patternBit != 0 ) && memento . nextPattern == 0		7511115	1		&&			
ANR	7511216	EqualityExpression	memento . patternBit != 0		7511115	0		!=			
ANR	7511217	MemberAccess	memento . patternBit		7511115	0					
ANR	7511218	Identifier	memento		7511115	0					
ANR	7511219	Identifier	patternBit		7511115	1					
ANR	7511220	PrimaryExpression	0		7511115	1					
ANR	7511221	EqualityExpression	memento . nextPattern == 0		7511115	1		==			
ANR	7511222	MemberAccess	memento . nextPattern		7511115	0					
ANR	7511223	Identifier	memento		7511115	0					
ANR	7511224	Identifier	nextPattern		7511115	1					
ANR	7511225	PrimaryExpression	0		7511115	1					
ANR	7511226	CompoundStatement		22:4:772:772	7511115	1					
ANR	7511227	ExpressionStatement	memento . nextFailAt = memento . failAt	1893:8:54867:54902	7511115	0	True				
ANR	7511228	AssignmentExpression	memento . nextFailAt = memento . failAt		7511115	0		=			
ANR	7511229	MemberAccess	memento . nextFailAt		7511115	0					
ANR	7511230	Identifier	memento		7511115	0					
ANR	7511231	Identifier	nextFailAt		7511115	1					
ANR	7511232	MemberAccess	memento . failAt		7511115	1					
ANR	7511233	Identifier	memento		7511115	0					
ANR	7511234	Identifier	failAt		7511115	1					
ANR	7511235	ExpressionStatement	memento . nextPattern = memento . pattern | memento . patternBit	1894:8:54912:54970	7511115	1	True				
ANR	7511236	AssignmentExpression	memento . nextPattern = memento . pattern | memento . patternBit		7511115	0		=			
ANR	7511237	MemberAccess	memento . nextPattern		7511115	0					
ANR	7511238	Identifier	memento		7511115	0					
ANR	7511239	Identifier	nextPattern		7511115	1					
ANR	7511240	InclusiveOrExpression	memento . pattern | memento . patternBit		7511115	1		|			
ANR	7511241	MemberAccess	memento . pattern		7511115	0					
ANR	7511242	Identifier	memento		7511115	0					
ANR	7511243	Identifier	pattern		7511115	1					
ANR	7511244	MemberAccess	memento . patternBit		7511115	1					
ANR	7511245	Identifier	memento		7511115	0					
ANR	7511246	Identifier	patternBit		7511115	1					
ANR	7511247	ExpressionStatement	memento . patternBit = ( memento . patternBit ? memento . patternBit << 1 : 1 )	1896:4:54982:55053	7511115	7	True				
ANR	7511248	AssignmentExpression	memento . patternBit = ( memento . patternBit ? memento . patternBit << 1 : 1 )		7511115	0		=			
ANR	7511249	MemberAccess	memento . patternBit		7511115	0					
ANR	7511250	Identifier	memento		7511115	0					
ANR	7511251	Identifier	patternBit		7511115	1					
ANR	7511252	ConditionalExpression	memento . patternBit ? memento . patternBit << 1 : 1		7511115	1					
ANR	7511253	Condition	memento . patternBit		7511115	0					
ANR	7511254	MemberAccess	memento . patternBit		7511115	0					
ANR	7511255	Identifier	memento		7511115	0					
ANR	7511256	Identifier	patternBit		7511115	1					
ANR	7511257	ShiftExpression	memento . patternBit << 1		7511115	1		<<			
ANR	7511258	MemberAccess	memento . patternBit		7511115	0					
ANR	7511259	Identifier	memento		7511115	0					
ANR	7511260	Identifier	patternBit		7511115	1					
ANR	7511261	PrimaryExpression	1		7511115	1					
ANR	7511262	PrimaryExpression	1		7511115	2					
ANR	7511263	ReturnStatement	return failThisOne ;	1898:4:55060:55078	7511115	8	True				
ANR	7511264	Identifier	failThisOne		7511115	0					
ANR	7511265	ReturnType	static int		7511115	1					
ANR	7511266	Identifier	Memento_failThisEventLocked		7511115	2					
ANR	7511267	ParameterList			7511115	3					
ANR	7511268	CFGEntryNode	ENTRY		7511115		True				
ANR	7511269	CFGExitNode	EXIT		7511115		True				
ANR	7511270	Symbol	memento . patternBit		7511115						
ANR	7511271	Symbol	squeeze		7511115						
ANR	7511272	Symbol	memento . squeezeAt		7511115						
ANR	7511273	Symbol	memento . failAt		7511115						
ANR	7511274	Symbol	memento . failing		7511115						
ANR	7511275	Symbol	memento . nextPattern		7511115						
ANR	7511276	Symbol	memento		7511115						
ANR	7511277	Symbol	Memento_event		7511115						
ANR	7511278	Symbol	memento . sequence		7511115						
ANR	7511279	Symbol	memento . pattern		7511115						
ANR	7511280	Symbol	failThisOne		7511115						
ANR	7511281	Symbol	memento . nextFailAt		7511115						
ANR	7511282	Function	Memento_failThisEvent	1901:0:55083:55280							
ANR	7511283	FunctionDef	Memento_failThisEvent ()		7511282	0					
ANR	7511284	CompoundStatement		1902:0:55115:55280	7511282	0					
ANR	7511285	IdentifierDeclStatement	int ret ;	1903:4:55121:55128	7511282	0	True				
ANR	7511286	IdentifierDecl	ret		7511282	0					
ANR	7511287	IdentifierDeclType	int		7511282	0					
ANR	7511288	Identifier	ret		7511282	1					
ANR	7511289	IfStatement	if ( ! memento . inited )		7511282	1					
ANR	7511290	Condition	! memento . inited	1905:8:55139:55153	7511282	0	True				
ANR	7511291	UnaryOperationExpression	! memento . inited		7511282	0					
ANR	7511292	UnaryOperator	!		7511282	0					
ANR	7511293	MemberAccess	memento . inited		7511282	1					
ANR	7511294	Identifier	memento		7511282	0					
ANR	7511295	Identifier	inited		7511282	1					
ANR	7511296	ExpressionStatement	Memento_init ( )	1906:8:55164:55178	7511282	1	True				
ANR	7511297	CallExpression	Memento_init ( )		7511282	0					
ANR	7511298	Callee	Memento_init		7511282	0					
ANR	7511299	Identifier	Memento_init		7511282	0					
ANR	7511300	ArgumentList			7511282	1					
ANR	7511301	ExpressionStatement	MEMENTO_LOCK ( )	1908:4:55185:55199	7511282	2	True				
ANR	7511302	CallExpression	MEMENTO_LOCK ( )		7511282	0					
ANR	7511303	Callee	MEMENTO_LOCK		7511282	0					
ANR	7511304	Identifier	MEMENTO_LOCK		7511282	0					
ANR	7511305	ArgumentList			7511282	1					
ANR	7511306	ExpressionStatement	ret = Memento_failThisEventLocked ( )	1909:4:55205:55240	7511282	3	True				
ANR	7511307	AssignmentExpression	ret = Memento_failThisEventLocked ( )		7511282	0		=			
ANR	7511308	Identifier	ret		7511282	0					
ANR	7511309	CallExpression	Memento_failThisEventLocked ( )		7511282	1					
ANR	7511310	Callee	Memento_failThisEventLocked		7511282	0					
ANR	7511311	Identifier	Memento_failThisEventLocked		7511282	0					
ANR	7511312	ArgumentList			7511282	1					
ANR	7511313	ExpressionStatement	MEMENTO_UNLOCK ( )	1910:4:55246:55262	7511282	4	True				
ANR	7511314	CallExpression	MEMENTO_UNLOCK ( )		7511282	0					
ANR	7511315	Callee	MEMENTO_UNLOCK		7511282	0					
ANR	7511316	Identifier	MEMENTO_UNLOCK		7511282	0					
ANR	7511317	ArgumentList			7511282	1					
ANR	7511318	ReturnStatement	return ret ;	1911:4:55268:55278	7511282	5	True				
ANR	7511319	Identifier	ret		7511282	0					
ANR	7511320	ReturnType	int		7511282	1					
ANR	7511321	Identifier	Memento_failThisEvent		7511282	2					
ANR	7511322	ParameterList			7511282	3					
ANR	7511323	CFGEntryNode	ENTRY		7511282		True				
ANR	7511324	CFGExitNode	EXIT		7511282		True				
ANR	7511325	Symbol	ret		7511282						
ANR	7511326	Symbol	Memento_failThisEventLocked		7511282						
ANR	7511327	Symbol	memento		7511282						
ANR	7511328	Symbol	memento . inited		7511282						
ANR	7511329	Function	do_malloc	1914:0:55283:56598							
ANR	7511330	FunctionDef	"do_malloc (size_t s , int eventType)"		7511329	0					
ANR	7511331	CompoundStatement		1915:0:55331:56598	7511329	0					
ANR	7511332	IdentifierDeclStatement	Memento_BlkHeader * memblk ;	1916:4:55337:55362	7511329	0	True				
ANR	7511333	IdentifierDecl	* memblk		7511329	0					
ANR	7511334	IdentifierDeclType	Memento_BlkHeader *		7511329	0					
ANR	7511335	Identifier	memblk		7511329	1					
ANR	7511336	IdentifierDeclStatement	size_t smem = MEMBLK_SIZE ( s ) ;	1917:4:55368:55408	7511329	1	True				
ANR	7511337	IdentifierDecl	smem = MEMBLK_SIZE ( s )		7511329	0					
ANR	7511338	IdentifierDeclType	size_t		7511329	0					
ANR	7511339	Identifier	smem		7511329	1					
ANR	7511340	AssignmentExpression	smem = MEMBLK_SIZE ( s )		7511329	2		=			
ANR	7511341	Identifier	smem		7511329	0					
ANR	7511342	CallExpression	MEMBLK_SIZE ( s )		7511329	1					
ANR	7511343	Callee	MEMBLK_SIZE		7511329	0					
ANR	7511344	Identifier	MEMBLK_SIZE		7511329	0					
ANR	7511345	ArgumentList	s		7511329	1					
ANR	7511346	Argument	s		7511329	0					
ANR	7511347	Identifier	s		7511329	0					
ANR	7511348	IfStatement	if ( Memento_failThisEventLocked ( ) )		7511329	2					
ANR	7511349	Condition	Memento_failThisEventLocked ( )	1919:8:55419:55447	7511329	0	True				
ANR	7511350	CallExpression	Memento_failThisEventLocked ( )		7511329	0					
ANR	7511351	Callee	Memento_failThisEventLocked		7511329	0					
ANR	7511352	Identifier	Memento_failThisEventLocked		7511329	0					
ANR	7511353	ArgumentList			7511329	1					
ANR	7511354	ReturnStatement	return NULL ;	1920:8:55458:55469	7511329	1	True				
ANR	7511355	Identifier	NULL		7511329	0					
ANR	7511356	IfStatement	if ( s == 0 )		7511329	3					
ANR	7511357	Condition	s == 0	1922:8:55480:55485	7511329	0	True				
ANR	7511358	EqualityExpression	s == 0		7511329	0		==			
ANR	7511359	Identifier	s		7511329	0					
ANR	7511360	PrimaryExpression	0		7511329	1					
ANR	7511361	ReturnStatement	return NULL ;	1923:8:55496:55507	7511329	1	True				
ANR	7511362	Identifier	NULL		7511329	0					
ANR	7511363	ExpressionStatement	memento . numMallocs ++	1925:4:55514:55534	7511329	4	True				
ANR	7511364	PostIncDecOperationExpression	memento . numMallocs ++		7511329	0					
ANR	7511365	MemberAccess	memento . numMallocs		7511329	0					
ANR	7511366	Identifier	memento		7511329	0					
ANR	7511367	Identifier	numMallocs		7511329	1					
ANR	7511368	IncDec	++		7511329	1					
ANR	7511369	IfStatement	if ( memento . maxMemory != 0 && memento . alloc + s > memento . maxMemory )		7511329	5					
ANR	7511370	Condition	memento . maxMemory != 0 && memento . alloc + s > memento . maxMemory	1927:8:55545:55607	7511329	0	True				
ANR	7511371	AndExpression	memento . maxMemory != 0 && memento . alloc + s > memento . maxMemory		7511329	0		&&			
ANR	7511372	EqualityExpression	memento . maxMemory != 0		7511329	0		!=			
ANR	7511373	MemberAccess	memento . maxMemory		7511329	0					
ANR	7511374	Identifier	memento		7511329	0					
ANR	7511375	Identifier	maxMemory		7511329	1					
ANR	7511376	PrimaryExpression	0		7511329	1					
ANR	7511377	RelationalExpression	memento . alloc + s > memento . maxMemory		7511329	1		>			
ANR	7511378	AdditiveExpression	memento . alloc + s		7511329	0		+			
ANR	7511379	MemberAccess	memento . alloc		7511329	0					
ANR	7511380	Identifier	memento		7511329	0					
ANR	7511381	Identifier	alloc		7511329	1					
ANR	7511382	Identifier	s		7511329	1					
ANR	7511383	MemberAccess	memento . maxMemory		7511329	1					
ANR	7511384	Identifier	memento		7511329	0					
ANR	7511385	Identifier	maxMemory		7511329	1					
ANR	7511386	ReturnStatement	return NULL ;	1928:8:55618:55629	7511329	1	True				
ANR	7511387	Identifier	NULL		7511329	0					
ANR	7511388	ExpressionStatement	memblk = MEMENTO_UNDERLYING_MALLOC ( smem )	1930:4:55636:55676	7511329	6	True				
ANR	7511389	AssignmentExpression	memblk = MEMENTO_UNDERLYING_MALLOC ( smem )		7511329	0		=			
ANR	7511390	Identifier	memblk		7511329	0					
ANR	7511391	CallExpression	MEMENTO_UNDERLYING_MALLOC ( smem )		7511329	1					
ANR	7511392	Callee	MEMENTO_UNDERLYING_MALLOC		7511329	0					
ANR	7511393	Identifier	MEMENTO_UNDERLYING_MALLOC		7511329	0					
ANR	7511394	ArgumentList	smem		7511329	1					
ANR	7511395	Argument	smem		7511329	0					
ANR	7511396	Identifier	smem		7511329	0					
ANR	7511397	IfStatement	if ( memblk == NULL )		7511329	7					
ANR	7511398	Condition	memblk == NULL	1931:8:55686:55699	7511329	0	True				
ANR	7511399	EqualityExpression	memblk == NULL		7511329	0		==			
ANR	7511400	Identifier	memblk		7511329	0					
ANR	7511401	Identifier	NULL		7511329	1					
ANR	7511402	ReturnStatement	return NULL ;	1932:8:55710:55721	7511329	1	True				
ANR	7511403	Identifier	NULL		7511329	0					
ANR	7511404	ExpressionStatement	memento . alloc += s	1934:4:55728:55751	7511329	8	True				
ANR	7511405	AssignmentExpression	memento . alloc += s		7511329	0		+=			
ANR	7511406	MemberAccess	memento . alloc		7511329	0					
ANR	7511407	Identifier	memento		7511329	0					
ANR	7511408	Identifier	alloc		7511329	1					
ANR	7511409	Identifier	s		7511329	1					
ANR	7511410	ExpressionStatement	memento . totalAlloc += s	1935:4:55757:55780	7511329	9	True				
ANR	7511411	AssignmentExpression	memento . totalAlloc += s		7511329	0		+=			
ANR	7511412	MemberAccess	memento . totalAlloc		7511329	0					
ANR	7511413	Identifier	memento		7511329	0					
ANR	7511414	Identifier	totalAlloc		7511329	1					
ANR	7511415	Identifier	s		7511329	1					
ANR	7511416	IfStatement	if ( memento . peakAlloc < memento . alloc )		7511329	10					
ANR	7511417	Condition	memento . peakAlloc < memento . alloc	1936:8:55790:55822	7511329	0	True				
ANR	7511418	RelationalExpression	memento . peakAlloc < memento . alloc		7511329	0		<			
ANR	7511419	MemberAccess	memento . peakAlloc		7511329	0					
ANR	7511420	Identifier	memento		7511329	0					
ANR	7511421	Identifier	peakAlloc		7511329	1					
ANR	7511422	MemberAccess	memento . alloc		7511329	1					
ANR	7511423	Identifier	memento		7511329	0					
ANR	7511424	Identifier	alloc		7511329	1					
ANR	7511425	ExpressionStatement	memento . peakAlloc = memento . alloc	1937:8:55833:55866	7511329	1	True				
ANR	7511426	AssignmentExpression	memento . peakAlloc = memento . alloc		7511329	0		=			
ANR	7511427	MemberAccess	memento . peakAlloc		7511329	0					
ANR	7511428	Identifier	memento		7511329	0					
ANR	7511429	Identifier	peakAlloc		7511329	1					
ANR	7511430	MemberAccess	memento . alloc		7511329	1					
ANR	7511431	Identifier	memento		7511329	0					
ANR	7511432	Identifier	alloc		7511329	1					
ANR	7511433	ExpressionStatement	"memset ( MEMBLK_TOBLK ( memblk ) , MEMENTO_ALLOCFILL , s )"	1939:4:55897:55947	7511329	11	True				
ANR	7511434	CallExpression	"memset ( MEMBLK_TOBLK ( memblk ) , MEMENTO_ALLOCFILL , s )"		7511329	0					
ANR	7511435	Callee	memset		7511329	0					
ANR	7511436	Identifier	memset		7511329	0					
ANR	7511437	ArgumentList	MEMBLK_TOBLK ( memblk )		7511329	1					
ANR	7511438	Argument	MEMBLK_TOBLK ( memblk )		7511329	0					
ANR	7511439	CallExpression	MEMBLK_TOBLK ( memblk )		7511329	0					
ANR	7511440	Callee	MEMBLK_TOBLK		7511329	0					
ANR	7511441	Identifier	MEMBLK_TOBLK		7511329	0					
ANR	7511442	ArgumentList	memblk		7511329	1					
ANR	7511443	Argument	memblk		7511329	0					
ANR	7511444	Identifier	memblk		7511329	0					
ANR	7511445	Argument	MEMENTO_ALLOCFILL		7511329	1					
ANR	7511446	Identifier	MEMENTO_ALLOCFILL		7511329	0					
ANR	7511447	Argument	s		7511329	2					
ANR	7511448	Identifier	s		7511329	0					
ANR	7511449	ExpressionStatement	memblk -> rawsize = s	1941:4:55960:55985	7511329	12	True				
ANR	7511450	AssignmentExpression	memblk -> rawsize = s		7511329	0		=			
ANR	7511451	PtrMemberAccess	memblk -> rawsize		7511329	0					
ANR	7511452	Identifier	memblk		7511329	0					
ANR	7511453	Identifier	rawsize		7511329	1					
ANR	7511454	Identifier	s		7511329	1					
ANR	7511455	ExpressionStatement	memblk -> sequence = memento . sequence	1942:4:55991:56031	7511329	13	True				
ANR	7511456	AssignmentExpression	memblk -> sequence = memento . sequence		7511329	0		=			
ANR	7511457	PtrMemberAccess	memblk -> sequence		7511329	0					
ANR	7511458	Identifier	memblk		7511329	0					
ANR	7511459	Identifier	sequence		7511329	1					
ANR	7511460	MemberAccess	memento . sequence		7511329	1					
ANR	7511461	Identifier	memento		7511329	0					
ANR	7511462	Identifier	sequence		7511329	1					
ANR	7511463	ExpressionStatement	memblk -> lastCheckedOK = memblk -> sequence	1943:4:56037:56077	7511329	14	True				
ANR	7511464	AssignmentExpression	memblk -> lastCheckedOK = memblk -> sequence		7511329	0		=			
ANR	7511465	PtrMemberAccess	memblk -> lastCheckedOK		7511329	0					
ANR	7511466	Identifier	memblk		7511329	0					
ANR	7511467	Identifier	lastCheckedOK		7511329	1					
ANR	7511468	PtrMemberAccess	memblk -> sequence		7511329	1					
ANR	7511469	Identifier	memblk		7511329	0					
ANR	7511470	Identifier	sequence		7511329	1					
ANR	7511471	ExpressionStatement	memblk -> flags = 0	1944:4:56083:56108	7511329	15	True				
ANR	7511472	AssignmentExpression	memblk -> flags = 0		7511329	0		=			
ANR	7511473	PtrMemberAccess	memblk -> flags		7511329	0					
ANR	7511474	Identifier	memblk		7511329	0					
ANR	7511475	Identifier	flags		7511329	1					
ANR	7511476	PrimaryExpression	0		7511329	1					
ANR	7511477	ExpressionStatement	memblk -> label = 0	1945:4:56114:56139	7511329	16	True				
ANR	7511478	AssignmentExpression	memblk -> label = 0		7511329	0		=			
ANR	7511479	PtrMemberAccess	memblk -> label		7511329	0					
ANR	7511480	Identifier	memblk		7511329	0					
ANR	7511481	Identifier	label		7511329	1					
ANR	7511482	PrimaryExpression	0		7511329	1					
ANR	7511483	ExpressionStatement	memblk -> child = MEMENTO_CHILD_MAGIC	1946:4:56145:56188	7511329	17	True				
ANR	7511484	AssignmentExpression	memblk -> child = MEMENTO_CHILD_MAGIC		7511329	0		=			
ANR	7511485	PtrMemberAccess	memblk -> child		7511329	0					
ANR	7511486	Identifier	memblk		7511329	0					
ANR	7511487	Identifier	child		7511329	1					
ANR	7511488	Identifier	MEMENTO_CHILD_MAGIC		7511329	1					
ANR	7511489	ExpressionStatement	memblk -> sibling = MEMENTO_SIBLING_MAGIC	1947:4:56194:56239	7511329	18	True				
ANR	7511490	AssignmentExpression	memblk -> sibling = MEMENTO_SIBLING_MAGIC		7511329	0		=			
ANR	7511491	PtrMemberAccess	memblk -> sibling		7511329	0					
ANR	7511492	Identifier	memblk		7511329	0					
ANR	7511493	Identifier	sibling		7511329	1					
ANR	7511494	Identifier	MEMENTO_SIBLING_MAGIC		7511329	1					
ANR	7511495	ExpressionStatement	memblk -> details = NULL	1949:4:56268:56296	7511329	19	True				
ANR	7511496	AssignmentExpression	memblk -> details = NULL		7511329	0		=			
ANR	7511497	PtrMemberAccess	memblk -> details		7511329	0					
ANR	7511498	Identifier	memblk		7511329	0					
ANR	7511499	Identifier	details		7511329	1					
ANR	7511500	Identifier	NULL		7511329	1					
ANR	7511501	ExpressionStatement	memblk -> details_tail = & memblk -> details	1950:4:56302:56342	7511329	20	True				
ANR	7511502	AssignmentExpression	memblk -> details_tail = & memblk -> details		7511329	0		=			
ANR	7511503	PtrMemberAccess	memblk -> details_tail		7511329	0					
ANR	7511504	Identifier	memblk		7511329	0					
ANR	7511505	Identifier	details_tail		7511329	1					
ANR	7511506	UnaryOperationExpression	& memblk -> details		7511329	1					
ANR	7511507	UnaryOperator	&		7511329	0					
ANR	7511508	PtrMemberAccess	memblk -> details		7511329	1					
ANR	7511509	Identifier	memblk		7511329	0					
ANR	7511510	Identifier	details		7511329	1					
ANR	7511511	ExpressionStatement	"Memento_storeDetails ( memblk , Memento_EventType_malloc )"	1951:4:56348:56402	7511329	21	True				
ANR	7511512	CallExpression	"Memento_storeDetails ( memblk , Memento_EventType_malloc )"		7511329	0					
ANR	7511513	Callee	Memento_storeDetails		7511329	0					
ANR	7511514	Identifier	Memento_storeDetails		7511329	0					
ANR	7511515	ArgumentList	memblk		7511329	1					
ANR	7511516	Argument	memblk		7511329	0					
ANR	7511517	Identifier	memblk		7511329	0					
ANR	7511518	Argument	Memento_EventType_malloc		7511329	1					
ANR	7511519	Identifier	Memento_EventType_malloc		7511329	0					
ANR	7511520	ExpressionStatement	"Memento_addBlockHead ( & memento . used , memblk , 0 )"	1953:4:56437:56483	7511329	22	True				
ANR	7511521	CallExpression	"Memento_addBlockHead ( & memento . used , memblk , 0 )"		7511329	0					
ANR	7511522	Callee	Memento_addBlockHead		7511329	0					
ANR	7511523	Identifier	Memento_addBlockHead		7511329	0					
ANR	7511524	ArgumentList	& memento . used		7511329	1					
ANR	7511525	Argument	& memento . used		7511329	0					
ANR	7511526	UnaryOperationExpression	& memento . used		7511329	0					
ANR	7511527	UnaryOperator	&		7511329	0					
ANR	7511528	MemberAccess	memento . used		7511329	1					
ANR	7511529	Identifier	memento		7511329	0					
ANR	7511530	Identifier	used		7511329	1					
ANR	7511531	Argument	memblk		7511329	1					
ANR	7511532	Identifier	memblk		7511329	0					
ANR	7511533	Argument	0		7511329	2					
ANR	7511534	PrimaryExpression	0		7511329	0					
ANR	7511535	IfStatement	if ( memento . leaking > 0 )		7511329	23					
ANR	7511536	Condition	memento . leaking > 0	1955:8:56494:56512	7511329	0	True				
ANR	7511537	RelationalExpression	memento . leaking > 0		7511329	0		>			
ANR	7511538	MemberAccess	memento . leaking		7511329	0					
ANR	7511539	Identifier	memento		7511329	0					
ANR	7511540	Identifier	leaking		7511329	1					
ANR	7511541	PrimaryExpression	0		7511329	1					
ANR	7511542	ExpressionStatement	memblk -> flags |= Memento_Flag_KnownLeak	1956:8:56523:56562	7511329	1	True				
ANR	7511543	AssignmentExpression	memblk -> flags |= Memento_Flag_KnownLeak		7511329	0		|=			
ANR	7511544	PtrMemberAccess	memblk -> flags		7511329	0					
ANR	7511545	Identifier	memblk		7511329	0					
ANR	7511546	Identifier	flags		7511329	1					
ANR	7511547	Identifier	Memento_Flag_KnownLeak		7511329	1					
ANR	7511548	ReturnStatement	return MEMBLK_TOBLK ( memblk ) ;	1958:4:56569:56596	7511329	24	True				
ANR	7511549	CallExpression	MEMBLK_TOBLK ( memblk )		7511329	0					
ANR	7511550	Callee	MEMBLK_TOBLK		7511329	0					
ANR	7511551	Identifier	MEMBLK_TOBLK		7511329	0					
ANR	7511552	ArgumentList	memblk		7511329	1					
ANR	7511553	Argument	memblk		7511329	0					
ANR	7511554	Identifier	memblk		7511329	0					
ANR	7511555	ReturnType	static void *		7511329	1					
ANR	7511556	Identifier	do_malloc		7511329	2					
ANR	7511557	ParameterList	"size_t s , int eventType"		7511329	3					
ANR	7511558	Parameter	size_t s	1914:23:55306:55313	7511329	0	True				
ANR	7511559	ParameterType	size_t		7511329	0					
ANR	7511560	Identifier	s		7511329	1					
ANR	7511561	Parameter	int eventType	1914:33:55316:55328	7511329	1	True				
ANR	7511562	ParameterType	int		7511329	0					
ANR	7511563	Identifier	eventType		7511329	1					
ANR	7511564	CFGEntryNode	ENTRY		7511329		True				
ANR	7511565	CFGExitNode	EXIT		7511329		True				
ANR	7511566	Symbol	Memento_EventType_malloc		7511329						
ANR	7511567	Symbol	Memento_failThisEventLocked		7511329						
ANR	7511568	Symbol	memblk -> details		7511329						
ANR	7511569	Symbol	memento . peakAlloc		7511329						
ANR	7511570	Symbol	MEMENTO_CHILD_MAGIC		7511329						
ANR	7511571	Symbol	memblk -> details_tail		7511329						
ANR	7511572	Symbol	memento . numMallocs		7511329						
ANR	7511573	Symbol	* memblk		7511329						
ANR	7511574	Symbol	MEMBLK_SIZE		7511329						
ANR	7511575	Symbol	MEMENTO_UNDERLYING_MALLOC		7511329						
ANR	7511576	Symbol	memblk -> sequence		7511329						
ANR	7511577	Symbol	& memblk -> details		7511329						
ANR	7511578	Symbol	MEMENTO_ALLOCFILL		7511329						
ANR	7511579	Symbol	& memento		7511329						
ANR	7511580	Symbol	NULL		7511329						
ANR	7511581	Symbol	memento . leaking		7511329						
ANR	7511582	Symbol	memblk -> sibling		7511329						
ANR	7511583	Symbol	MEMENTO_SIBLING_MAGIC		7511329						
ANR	7511584	Symbol	memblk -> child		7511329						
ANR	7511585	Symbol	memento		7511329						
ANR	7511586	Symbol	eventType		7511329						
ANR	7511587	Symbol	memblk		7511329						
ANR	7511588	Symbol	MEMBLK_TOBLK		7511329						
ANR	7511589	Symbol	memblk -> rawsize		7511329						
ANR	7511590	Symbol	memblk -> lastCheckedOK		7511329						
ANR	7511591	Symbol	memento . alloc		7511329						
ANR	7511592	Symbol	Memento_Flag_KnownLeak		7511329						
ANR	7511593	Symbol	s		7511329						
ANR	7511594	Symbol	& memento . used		7511329						
ANR	7511595	Symbol	smem		7511329						
ANR	7511596	Symbol	memento . maxMemory		7511329						
ANR	7511597	Symbol	memento . totalAlloc		7511329						
ANR	7511598	Symbol	memblk -> flags		7511329						
ANR	7511599	Symbol	memblk -> label		7511329						
ANR	7511600	Symbol	memento . sequence		7511329						
ANR	7511601	Function	Memento_malloc	1961:0:56601:56808							
ANR	7511602	FunctionDef	Memento_malloc (size_t s)		7511601	0					
ANR	7511603	CompoundStatement		1962:0:56632:56808	7511601	0					
ANR	7511604	IdentifierDeclStatement	void * ret ;	1963:4:56638:56647	7511601	0	True				
ANR	7511605	IdentifierDecl	* ret		7511601	0					
ANR	7511606	IdentifierDeclType	void *		7511601	0					
ANR	7511607	Identifier	ret		7511601	1					
ANR	7511608	IfStatement	if ( ! memento . inited )		7511601	1					
ANR	7511609	Condition	! memento . inited	1965:8:56658:56672	7511601	0	True				
ANR	7511610	UnaryOperationExpression	! memento . inited		7511601	0					
ANR	7511611	UnaryOperator	!		7511601	0					
ANR	7511612	MemberAccess	memento . inited		7511601	1					
ANR	7511613	Identifier	memento		7511601	0					
ANR	7511614	Identifier	inited		7511601	1					
ANR	7511615	ExpressionStatement	Memento_init ( )	1966:8:56683:56697	7511601	1	True				
ANR	7511616	CallExpression	Memento_init ( )		7511601	0					
ANR	7511617	Callee	Memento_init		7511601	0					
ANR	7511618	Identifier	Memento_init		7511601	0					
ANR	7511619	ArgumentList			7511601	1					
ANR	7511620	ExpressionStatement	MEMENTO_LOCK ( )	1968:4:56704:56718	7511601	2	True				
ANR	7511621	CallExpression	MEMENTO_LOCK ( )		7511601	0					
ANR	7511622	Callee	MEMENTO_LOCK		7511601	0					
ANR	7511623	Identifier	MEMENTO_LOCK		7511601	0					
ANR	7511624	ArgumentList			7511601	1					
ANR	7511625	ExpressionStatement	"ret = do_malloc ( s , Memento_EventType_malloc )"	1969:4:56724:56768	7511601	3	True				
ANR	7511626	AssignmentExpression	"ret = do_malloc ( s , Memento_EventType_malloc )"		7511601	0		=			
ANR	7511627	Identifier	ret		7511601	0					
ANR	7511628	CallExpression	"do_malloc ( s , Memento_EventType_malloc )"		7511601	1					
ANR	7511629	Callee	do_malloc		7511601	0					
ANR	7511630	Identifier	do_malloc		7511601	0					
ANR	7511631	ArgumentList	s		7511601	1					
ANR	7511632	Argument	s		7511601	0					
ANR	7511633	Identifier	s		7511601	0					
ANR	7511634	Argument	Memento_EventType_malloc		7511601	1					
ANR	7511635	Identifier	Memento_EventType_malloc		7511601	0					
ANR	7511636	ExpressionStatement	MEMENTO_UNLOCK ( )	1970:4:56774:56790	7511601	4	True				
ANR	7511637	CallExpression	MEMENTO_UNLOCK ( )		7511601	0					
ANR	7511638	Callee	MEMENTO_UNLOCK		7511601	0					
ANR	7511639	Identifier	MEMENTO_UNLOCK		7511601	0					
ANR	7511640	ArgumentList			7511601	1					
ANR	7511641	ReturnStatement	return ret ;	1971:4:56796:56806	7511601	5	True				
ANR	7511642	Identifier	ret		7511601	0					
ANR	7511643	ReturnType	void *		7511601	1					
ANR	7511644	Identifier	Memento_malloc		7511601	2					
ANR	7511645	ParameterList	size_t s		7511601	3					
ANR	7511646	Parameter	size_t s	1961:21:56622:56629	7511601	0	True				
ANR	7511647	ParameterType	size_t		7511601	0					
ANR	7511648	Identifier	s		7511601	1					
ANR	7511649	CFGEntryNode	ENTRY		7511601		True				
ANR	7511650	CFGExitNode	EXIT		7511601		True				
ANR	7511651	Symbol	ret		7511601						
ANR	7511652	Symbol	s		7511601						
ANR	7511653	Symbol	Memento_EventType_malloc		7511601						
ANR	7511654	Symbol	memento		7511601						
ANR	7511655	Symbol	memento . inited		7511601						
ANR	7511656	Symbol	do_malloc		7511601						
ANR	7511657	Function	Memento_calloc	1974:0:56811:57082							
ANR	7511658	FunctionDef	"Memento_calloc (size_t n , size_t s)"		7511657	0					
ANR	7511659	CompoundStatement		1975:0:56852:57082	7511657	0					
ANR	7511660	IdentifierDeclStatement	void * block ;	1976:4:56858:56869	7511657	0	True				
ANR	7511661	IdentifierDecl	* block		7511657	0					
ANR	7511662	IdentifierDeclType	void *		7511657	0					
ANR	7511663	Identifier	block		7511657	1					
ANR	7511664	IfStatement	if ( ! memento . inited )		7511657	1					
ANR	7511665	Condition	! memento . inited	1978:8:56880:56894	7511657	0	True				
ANR	7511666	UnaryOperationExpression	! memento . inited		7511657	0					
ANR	7511667	UnaryOperator	!		7511657	0					
ANR	7511668	MemberAccess	memento . inited		7511657	1					
ANR	7511669	Identifier	memento		7511657	0					
ANR	7511670	Identifier	inited		7511657	1					
ANR	7511671	ExpressionStatement	Memento_init ( )	1979:8:56905:56919	7511657	1	True				
ANR	7511672	CallExpression	Memento_init ( )		7511657	0					
ANR	7511673	Callee	Memento_init		7511657	0					
ANR	7511674	Identifier	Memento_init		7511657	0					
ANR	7511675	ArgumentList			7511657	1					
ANR	7511676	ExpressionStatement	MEMENTO_LOCK ( )	1981:4:56926:56940	7511657	2	True				
ANR	7511677	CallExpression	MEMENTO_LOCK ( )		7511657	0					
ANR	7511678	Callee	MEMENTO_LOCK		7511657	0					
ANR	7511679	Identifier	MEMENTO_LOCK		7511657	0					
ANR	7511680	ArgumentList			7511657	1					
ANR	7511681	ExpressionStatement	"block = do_malloc ( n * s , Memento_EventType_calloc )"	1982:4:56946:56994	7511657	3	True				
ANR	7511682	AssignmentExpression	"block = do_malloc ( n * s , Memento_EventType_calloc )"		7511657	0		=			
ANR	7511683	Identifier	block		7511657	0					
ANR	7511684	CallExpression	"do_malloc ( n * s , Memento_EventType_calloc )"		7511657	1					
ANR	7511685	Callee	do_malloc		7511657	0					
ANR	7511686	Identifier	do_malloc		7511657	0					
ANR	7511687	ArgumentList	n * s		7511657	1					
ANR	7511688	Argument	n * s		7511657	0					
ANR	7511689	MultiplicativeExpression	n * s		7511657	0		*			
ANR	7511690	Identifier	n		7511657	0					
ANR	7511691	Identifier	s		7511657	1					
ANR	7511692	Argument	Memento_EventType_calloc		7511657	1					
ANR	7511693	Identifier	Memento_EventType_calloc		7511657	0					
ANR	7511694	IfStatement	if ( block )		7511657	4					
ANR	7511695	Condition	block	1983:8:57004:57008	7511657	0	True				
ANR	7511696	Identifier	block		7511657	0					
ANR	7511697	ExpressionStatement	"memset ( block , 0 , n * s )"	1984:8:57019:57040	7511657	1	True				
ANR	7511698	CallExpression	"memset ( block , 0 , n * s )"		7511657	0					
ANR	7511699	Callee	memset		7511657	0					
ANR	7511700	Identifier	memset		7511657	0					
ANR	7511701	ArgumentList	block		7511657	1					
ANR	7511702	Argument	block		7511657	0					
ANR	7511703	Identifier	block		7511657	0					
ANR	7511704	Argument	0		7511657	1					
ANR	7511705	PrimaryExpression	0		7511657	0					
ANR	7511706	Argument	n * s		7511657	2					
ANR	7511707	MultiplicativeExpression	n * s		7511657	0		*			
ANR	7511708	Identifier	n		7511657	0					
ANR	7511709	Identifier	s		7511657	1					
ANR	7511710	ExpressionStatement	MEMENTO_UNLOCK ( )	1985:4:57046:57062	7511657	5	True				
ANR	7511711	CallExpression	MEMENTO_UNLOCK ( )		7511657	0					
ANR	7511712	Callee	MEMENTO_UNLOCK		7511657	0					
ANR	7511713	Identifier	MEMENTO_UNLOCK		7511657	0					
ANR	7511714	ArgumentList			7511657	1					
ANR	7511715	ReturnStatement	return block ;	1986:4:57068:57080	7511657	6	True				
ANR	7511716	Identifier	block		7511657	0					
ANR	7511717	ReturnType	void *		7511657	1					
ANR	7511718	Identifier	Memento_calloc		7511657	2					
ANR	7511719	ParameterList	"size_t n , size_t s"		7511657	3					
ANR	7511720	Parameter	size_t n	1974:21:56832:56839	7511657	0	True				
ANR	7511721	ParameterType	size_t		7511657	0					
ANR	7511722	Identifier	n		7511657	1					
ANR	7511723	Parameter	size_t s	1974:31:56842:56849	7511657	1	True				
ANR	7511724	ParameterType	size_t		7511657	0					
ANR	7511725	Identifier	s		7511657	1					
ANR	7511726	CFGEntryNode	ENTRY		7511657		True				
ANR	7511727	CFGExitNode	EXIT		7511657		True				
ANR	7511728	Symbol	s		7511657						
ANR	7511729	Symbol	memento		7511657						
ANR	7511730	Symbol	block		7511657						
ANR	7511731	Symbol	memento . inited		7511657						
ANR	7511732	Symbol	do_malloc		7511657						
ANR	7511733	Symbol	n		7511657						
ANR	7511734	Symbol	Memento_EventType_calloc		7511657						
ANR	7511735	Function	do_reference	1989:0:57085:57237							
ANR	7511736	FunctionDef	"do_reference (Memento_BlkHeader * blk , int event)"		7511735	0					
ANR	7511737	CompoundStatement		1990:0:57145:57237	7511735	0					
ANR	7511738	ExpressionStatement	"Memento_storeDetails ( blk , event )"	1992:4:57174:57206	7511735	0	True				
ANR	7511739	CallExpression	"Memento_storeDetails ( blk , event )"		7511735	0					
ANR	7511740	Callee	Memento_storeDetails		7511735	0					
ANR	7511741	Identifier	Memento_storeDetails		7511735	0					
ANR	7511742	ArgumentList	blk		7511735	1					
ANR	7511743	Argument	blk		7511735	0					
ANR	7511744	Identifier	blk		7511735	0					
ANR	7511745	Argument	event		7511735	1					
ANR	7511746	Identifier	event		7511735	0					
ANR	7511747	ReturnType	static void		7511735	1					
ANR	7511748	Identifier	do_reference		7511735	2					
ANR	7511749	ParameterList	"Memento_BlkHeader * blk , int event"		7511735	3					
ANR	7511750	Parameter	Memento_BlkHeader * blk	1989:25:57110:57131	7511735	0	True				
ANR	7511751	ParameterType	Memento_BlkHeader *		7511735	0					
ANR	7511752	Identifier	blk		7511735	1					
ANR	7511753	Parameter	int event	1989:49:57134:57142	7511735	1	True				
ANR	7511754	ParameterType	int		7511735	0					
ANR	7511755	Identifier	event		7511735	1					
ANR	7511756	CFGEntryNode	ENTRY		7511735		True				
ANR	7511757	CFGExitNode	EXIT		7511735		True				
ANR	7511758	Symbol	blk		7511735						
ANR	7511759	Symbol	event		7511735						
ANR	7511760	Function	Memento_takeRef	1996:0:57240:57486							
ANR	7511761	FunctionDef	Memento_takeRef (void * blk)		7511760	0					
ANR	7511762	CompoundStatement		1997:0:57273:57486	7511760	0					
ANR	7511763	IfStatement	if ( ! blk )		7511760	0					
ANR	7511764	Condition	! blk	1998:8:57283:57286	7511760	0	True				
ANR	7511765	UnaryOperationExpression	! blk		7511760	0					
ANR	7511766	UnaryOperator	!		7511760	0					
ANR	7511767	Identifier	blk		7511760	1					
ANR	7511768	ReturnStatement	return NULL ;	1999:8:57297:57308	7511760	1	True				
ANR	7511769	Identifier	NULL		7511760	0					
ANR	7511770	IfStatement	if ( ! memento . inited )		7511760	1					
ANR	7511771	Condition	! memento . inited	2001:8:57319:57333	7511760	0	True				
ANR	7511772	UnaryOperationExpression	! memento . inited		7511760	0					
ANR	7511773	UnaryOperator	!		7511760	0					
ANR	7511774	MemberAccess	memento . inited		7511760	1					
ANR	7511775	Identifier	memento		7511760	0					
ANR	7511776	Identifier	inited		7511760	1					
ANR	7511777	ExpressionStatement	Memento_init ( )	2002:8:57344:57358	7511760	1	True				
ANR	7511778	CallExpression	Memento_init ( )		7511760	0					
ANR	7511779	Callee	Memento_init		7511760	0					
ANR	7511780	Identifier	Memento_init		7511760	0					
ANR	7511781	ArgumentList			7511760	1					
ANR	7511782	ExpressionStatement	MEMENTO_LOCK ( )	2004:4:57365:57379	7511760	2	True				
ANR	7511783	CallExpression	MEMENTO_LOCK ( )		7511760	0					
ANR	7511784	Callee	MEMENTO_LOCK		7511760	0					
ANR	7511785	Identifier	MEMENTO_LOCK		7511760	0					
ANR	7511786	ArgumentList			7511760	1					
ANR	7511787	ExpressionStatement	"do_reference ( safe_find_block ( blk ) , Memento_EventType_takeRef )"	2005:4:57385:57446	7511760	3	True				
ANR	7511788	CallExpression	"do_reference ( safe_find_block ( blk ) , Memento_EventType_takeRef )"		7511760	0					
ANR	7511789	Callee	do_reference		7511760	0					
ANR	7511790	Identifier	do_reference		7511760	0					
ANR	7511791	ArgumentList	safe_find_block ( blk )		7511760	1					
ANR	7511792	Argument	safe_find_block ( blk )		7511760	0					
ANR	7511793	CallExpression	safe_find_block ( blk )		7511760	0					
ANR	7511794	Callee	safe_find_block		7511760	0					
ANR	7511795	Identifier	safe_find_block		7511760	0					
ANR	7511796	ArgumentList	blk		7511760	1					
ANR	7511797	Argument	blk		7511760	0					
ANR	7511798	Identifier	blk		7511760	0					
ANR	7511799	Argument	Memento_EventType_takeRef		7511760	1					
ANR	7511800	Identifier	Memento_EventType_takeRef		7511760	0					
ANR	7511801	ExpressionStatement	MEMENTO_UNLOCK ( )	2006:4:57452:57468	7511760	4	True				
ANR	7511802	CallExpression	MEMENTO_UNLOCK ( )		7511760	0					
ANR	7511803	Callee	MEMENTO_UNLOCK		7511760	0					
ANR	7511804	Identifier	MEMENTO_UNLOCK		7511760	0					
ANR	7511805	ArgumentList			7511760	1					
ANR	7511806	ReturnStatement	return blk ;	2007:4:57474:57484	7511760	5	True				
ANR	7511807	Identifier	blk		7511760	0					
ANR	7511808	ReturnType	void *		7511760	1					
ANR	7511809	Identifier	Memento_takeRef		7511760	2					
ANR	7511810	ParameterList	void * blk		7511760	3					
ANR	7511811	Parameter	void * blk	1996:22:57262:57270	7511760	0	True				
ANR	7511812	ParameterType	void *		7511760	0					
ANR	7511813	Identifier	blk		7511760	1					
ANR	7511814	CFGEntryNode	ENTRY		7511760		True				
ANR	7511815	CFGExitNode	EXIT		7511760		True				
ANR	7511816	Symbol	blk		7511760						
ANR	7511817	Symbol	NULL		7511760						
ANR	7511818	Symbol	Memento_EventType_takeRef		7511760						
ANR	7511819	Symbol	safe_find_block		7511760						
ANR	7511820	Symbol	memento		7511760						
ANR	7511821	Symbol	memento . inited		7511760						
ANR	7511822	Function	Memento_dropRef	2010:0:57489:57735							
ANR	7511823	FunctionDef	Memento_dropRef (void * blk)		7511822	0					
ANR	7511824	CompoundStatement		2011:0:57522:57735	7511822	0					
ANR	7511825	IfStatement	if ( ! blk )		7511822	0					
ANR	7511826	Condition	! blk	2012:8:57532:57535	7511822	0	True				
ANR	7511827	UnaryOperationExpression	! blk		7511822	0					
ANR	7511828	UnaryOperator	!		7511822	0					
ANR	7511829	Identifier	blk		7511822	1					
ANR	7511830	ReturnStatement	return NULL ;	2013:8:57546:57557	7511822	1	True				
ANR	7511831	Identifier	NULL		7511822	0					
ANR	7511832	IfStatement	if ( ! memento . inited )		7511822	1					
ANR	7511833	Condition	! memento . inited	2015:8:57568:57582	7511822	0	True				
ANR	7511834	UnaryOperationExpression	! memento . inited		7511822	0					
ANR	7511835	UnaryOperator	!		7511822	0					
ANR	7511836	MemberAccess	memento . inited		7511822	1					
ANR	7511837	Identifier	memento		7511822	0					
ANR	7511838	Identifier	inited		7511822	1					
ANR	7511839	ExpressionStatement	Memento_init ( )	2016:8:57593:57607	7511822	1	True				
ANR	7511840	CallExpression	Memento_init ( )		7511822	0					
ANR	7511841	Callee	Memento_init		7511822	0					
ANR	7511842	Identifier	Memento_init		7511822	0					
ANR	7511843	ArgumentList			7511822	1					
ANR	7511844	ExpressionStatement	MEMENTO_LOCK ( )	2018:4:57614:57628	7511822	2	True				
ANR	7511845	CallExpression	MEMENTO_LOCK ( )		7511822	0					
ANR	7511846	Callee	MEMENTO_LOCK		7511822	0					
ANR	7511847	Identifier	MEMENTO_LOCK		7511822	0					
ANR	7511848	ArgumentList			7511822	1					
ANR	7511849	ExpressionStatement	"do_reference ( safe_find_block ( blk ) , Memento_EventType_dropRef )"	2019:4:57634:57695	7511822	3	True				
ANR	7511850	CallExpression	"do_reference ( safe_find_block ( blk ) , Memento_EventType_dropRef )"		7511822	0					
ANR	7511851	Callee	do_reference		7511822	0					
ANR	7511852	Identifier	do_reference		7511822	0					
ANR	7511853	ArgumentList	safe_find_block ( blk )		7511822	1					
ANR	7511854	Argument	safe_find_block ( blk )		7511822	0					
ANR	7511855	CallExpression	safe_find_block ( blk )		7511822	0					
ANR	7511856	Callee	safe_find_block		7511822	0					
ANR	7511857	Identifier	safe_find_block		7511822	0					
ANR	7511858	ArgumentList	blk		7511822	1					
ANR	7511859	Argument	blk		7511822	0					
ANR	7511860	Identifier	blk		7511822	0					
ANR	7511861	Argument	Memento_EventType_dropRef		7511822	1					
ANR	7511862	Identifier	Memento_EventType_dropRef		7511822	0					
ANR	7511863	ExpressionStatement	MEMENTO_UNLOCK ( )	2020:4:57701:57717	7511822	4	True				
ANR	7511864	CallExpression	MEMENTO_UNLOCK ( )		7511822	0					
ANR	7511865	Callee	MEMENTO_UNLOCK		7511822	0					
ANR	7511866	Identifier	MEMENTO_UNLOCK		7511822	0					
ANR	7511867	ArgumentList			7511822	1					
ANR	7511868	ReturnStatement	return blk ;	2021:4:57723:57733	7511822	5	True				
ANR	7511869	Identifier	blk		7511822	0					
ANR	7511870	ReturnType	void *		7511822	1					
ANR	7511871	Identifier	Memento_dropRef		7511822	2					
ANR	7511872	ParameterList	void * blk		7511822	3					
ANR	7511873	Parameter	void * blk	2010:22:57511:57519	7511822	0	True				
ANR	7511874	ParameterType	void *		7511822	0					
ANR	7511875	Identifier	blk		7511822	1					
ANR	7511876	CFGEntryNode	ENTRY		7511822		True				
ANR	7511877	CFGExitNode	EXIT		7511822		True				
ANR	7511878	Symbol	blk		7511822						
ANR	7511879	Symbol	NULL		7511822						
ANR	7511880	Symbol	safe_find_block		7511822						
ANR	7511881	Symbol	Memento_EventType_dropRef		7511822						
ANR	7511882	Symbol	memento		7511822						
ANR	7511883	Symbol	memento . inited		7511822						
ANR	7511884	Function	Memento_reference	2024:0:57738:57988							
ANR	7511885	FunctionDef	Memento_reference (void * blk)		7511884	0					
ANR	7511886	CompoundStatement		2025:0:57773:57988	7511884	0					
ANR	7511887	IfStatement	if ( ! blk )		7511884	0					
ANR	7511888	Condition	! blk	2026:8:57783:57786	7511884	0	True				
ANR	7511889	UnaryOperationExpression	! blk		7511884	0					
ANR	7511890	UnaryOperator	!		7511884	0					
ANR	7511891	Identifier	blk		7511884	1					
ANR	7511892	ReturnStatement	return NULL ;	2027:8:57797:57808	7511884	1	True				
ANR	7511893	Identifier	NULL		7511884	0					
ANR	7511894	IfStatement	if ( ! memento . inited )		7511884	1					
ANR	7511895	Condition	! memento . inited	2029:8:57819:57833	7511884	0	True				
ANR	7511896	UnaryOperationExpression	! memento . inited		7511884	0					
ANR	7511897	UnaryOperator	!		7511884	0					
ANR	7511898	MemberAccess	memento . inited		7511884	1					
ANR	7511899	Identifier	memento		7511884	0					
ANR	7511900	Identifier	inited		7511884	1					
ANR	7511901	ExpressionStatement	Memento_init ( )	2030:8:57844:57858	7511884	1	True				
ANR	7511902	CallExpression	Memento_init ( )		7511884	0					
ANR	7511903	Callee	Memento_init		7511884	0					
ANR	7511904	Identifier	Memento_init		7511884	0					
ANR	7511905	ArgumentList			7511884	1					
ANR	7511906	ExpressionStatement	MEMENTO_LOCK ( )	2032:4:57865:57879	7511884	2	True				
ANR	7511907	CallExpression	MEMENTO_LOCK ( )		7511884	0					
ANR	7511908	Callee	MEMENTO_LOCK		7511884	0					
ANR	7511909	Identifier	MEMENTO_LOCK		7511884	0					
ANR	7511910	ArgumentList			7511884	1					
ANR	7511911	ExpressionStatement	"do_reference ( safe_find_block ( blk ) , Memento_EventType_reference )"	2033:4:57885:57948	7511884	3	True				
ANR	7511912	CallExpression	"do_reference ( safe_find_block ( blk ) , Memento_EventType_reference )"		7511884	0					
ANR	7511913	Callee	do_reference		7511884	0					
ANR	7511914	Identifier	do_reference		7511884	0					
ANR	7511915	ArgumentList	safe_find_block ( blk )		7511884	1					
ANR	7511916	Argument	safe_find_block ( blk )		7511884	0					
ANR	7511917	CallExpression	safe_find_block ( blk )		7511884	0					
ANR	7511918	Callee	safe_find_block		7511884	0					
ANR	7511919	Identifier	safe_find_block		7511884	0					
ANR	7511920	ArgumentList	blk		7511884	1					
ANR	7511921	Argument	blk		7511884	0					
ANR	7511922	Identifier	blk		7511884	0					
ANR	7511923	Argument	Memento_EventType_reference		7511884	1					
ANR	7511924	Identifier	Memento_EventType_reference		7511884	0					
ANR	7511925	ExpressionStatement	MEMENTO_UNLOCK ( )	2034:4:57954:57970	7511884	4	True				
ANR	7511926	CallExpression	MEMENTO_UNLOCK ( )		7511884	0					
ANR	7511927	Callee	MEMENTO_UNLOCK		7511884	0					
ANR	7511928	Identifier	MEMENTO_UNLOCK		7511884	0					
ANR	7511929	ArgumentList			7511884	1					
ANR	7511930	ReturnStatement	return blk ;	2035:4:57976:57986	7511884	5	True				
ANR	7511931	Identifier	blk		7511884	0					
ANR	7511932	ReturnType	void *		7511884	1					
ANR	7511933	Identifier	Memento_reference		7511884	2					
ANR	7511934	ParameterList	void * blk		7511884	3					
ANR	7511935	Parameter	void * blk	2024:24:57762:57770	7511884	0	True				
ANR	7511936	ParameterType	void *		7511884	0					
ANR	7511937	Identifier	blk		7511884	1					
ANR	7511938	CFGEntryNode	ENTRY		7511884		True				
ANR	7511939	CFGExitNode	EXIT		7511884		True				
ANR	7511940	Symbol	blk		7511884						
ANR	7511941	Symbol	NULL		7511884						
ANR	7511942	Symbol	safe_find_block		7511884						
ANR	7511943	Symbol	memento		7511884						
ANR	7511944	Symbol	Memento_EventType_reference		7511884						
ANR	7511945	Symbol	memento . inited		7511884						
ANR	7511946	Function	checkBlockUser	2040:0:58081:59172							
ANR	7511947	FunctionDef	"checkBlockUser (Memento_BlkHeader * memblk , const char * action)"		7511946	0					
ANR	7511948	CompoundStatement		2041:0:58154:59172	7511946	0					
ANR	7511949	IdentifierDeclStatement	BlkCheckData data ;	2043:4:58185:58202	7511946	0	True				
ANR	7511950	IdentifierDecl	data		7511946	0					
ANR	7511951	IdentifierDeclType	BlkCheckData		7511946	0					
ANR	7511952	Identifier	data		7511946	1					
ANR	7511953	ExpressionStatement	"memset ( & data , 0 , sizeof ( data ) )"	2045:4:58209:58239	7511946	1	True				
ANR	7511954	CallExpression	"memset ( & data , 0 , sizeof ( data ) )"		7511946	0					
ANR	7511955	Callee	memset		7511946	0					
ANR	7511956	Identifier	memset		7511946	0					
ANR	7511957	ArgumentList	& data		7511946	1					
ANR	7511958	Argument	& data		7511946	0					
ANR	7511959	UnaryOperationExpression	& data		7511946	0					
ANR	7511960	UnaryOperator	&		7511946	0					
ANR	7511961	Identifier	data		7511946	1					
ANR	7511962	Argument	0		7511946	1					
ANR	7511963	PrimaryExpression	0		7511946	0					
ANR	7511964	Argument	sizeof ( data )		7511946	2					
ANR	7511965	SizeofExpression	sizeof ( data )		7511946	0					
ANR	7511966	Sizeof	sizeof		7511946	0					
ANR	7511967	SizeofOperand	data		7511946	1					
ANR	7511968	ExpressionStatement	"Memento_appBlockUser ( & memento . used , Memento_Internal_checkAllocedBlock , & data , memblk )"	2046:4:58245:58356	7511946	2	True				
ANR	7511969	CallExpression	"Memento_appBlockUser ( & memento . used , Memento_Internal_checkAllocedBlock , & data , memblk )"		7511946	0					
ANR	7511970	Callee	Memento_appBlockUser		7511946	0					
ANR	7511971	Identifier	Memento_appBlockUser		7511946	0					
ANR	7511972	ArgumentList	& memento . used		7511946	1					
ANR	7511973	Argument	& memento . used		7511946	0					
ANR	7511974	UnaryOperationExpression	& memento . used		7511946	0					
ANR	7511975	UnaryOperator	&		7511946	0					
ANR	7511976	MemberAccess	memento . used		7511946	1					
ANR	7511977	Identifier	memento		7511946	0					
ANR	7511978	Identifier	used		7511946	1					
ANR	7511979	Argument	Memento_Internal_checkAllocedBlock		7511946	1					
ANR	7511980	Identifier	Memento_Internal_checkAllocedBlock		7511946	0					
ANR	7511981	Argument	& data		7511946	2					
ANR	7511982	UnaryOperationExpression	& data		7511946	0					
ANR	7511983	UnaryOperator	&		7511946	0					
ANR	7511984	Identifier	data		7511946	1					
ANR	7511985	Argument	memblk		7511946	3					
ANR	7511986	Identifier	memblk		7511946	0					
ANR	7511987	IfStatement	if ( ! data . found )		7511946	3					
ANR	7511988	Condition	! data . found	2048:8:58366:58376	7511946	0	True				
ANR	7511989	UnaryOperationExpression	! data . found		7511946	0					
ANR	7511990	UnaryOperator	!		7511946	0					
ANR	7511991	MemberAccess	data . found		7511946	1					
ANR	7511992	Identifier	data		7511946	0					
ANR	7511993	Identifier	found		7511946	1					
ANR	7511994	CompoundStatement		8:21:224:224	7511946	1					
ANR	7511995	ExpressionStatement	"fprintf ( stderr , ""Attempt to %s block "" , action )"	2050:8:58412:58459	7511946	0	True				
ANR	7511996	CallExpression	"fprintf ( stderr , ""Attempt to %s block "" , action )"		7511946	0					
ANR	7511997	Callee	fprintf		7511946	0					
ANR	7511998	Identifier	fprintf		7511946	0					
ANR	7511999	ArgumentList	stderr		7511946	1					
ANR	7512000	Argument	stderr		7511946	0					
ANR	7512001	Identifier	stderr		7511946	0					
ANR	7512002	Argument	"""Attempt to %s block """		7511946	1					
ANR	7512003	PrimaryExpression	"""Attempt to %s block """		7511946	0					
ANR	7512004	Argument	action		7511946	2					
ANR	7512005	Identifier	action		7511946	0					
ANR	7512006	ExpressionStatement	"showBlock ( memblk , 32 )"	2051:8:58469:58490	7511946	1	True				
ANR	7512007	CallExpression	"showBlock ( memblk , 32 )"		7511946	0					
ANR	7512008	Callee	showBlock		7511946	0					
ANR	7512009	Identifier	showBlock		7511946	0					
ANR	7512010	ArgumentList	memblk		7511946	1					
ANR	7512011	Argument	memblk		7511946	0					
ANR	7512012	Identifier	memblk		7511946	0					
ANR	7512013	Argument	32		7511946	1					
ANR	7512014	PrimaryExpression	32		7511946	0					
ANR	7512015	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	2052:8:58500:58521	7511946	2	True				
ANR	7512016	CallExpression	"fprintf ( stderr , ""\\n"" )"		7511946	0					
ANR	7512017	Callee	fprintf		7511946	0					
ANR	7512018	Identifier	fprintf		7511946	0					
ANR	7512019	ArgumentList	stderr		7511946	1					
ANR	7512020	Argument	stderr		7511946	0					
ANR	7512021	Identifier	stderr		7511946	0					
ANR	7512022	Argument	"""\\n"""		7511946	1					
ANR	7512023	PrimaryExpression	"""\\n"""		7511946	0					
ANR	7512024	ExpressionStatement	Memento_breakpointLocked ( )	2053:8:58531:58557	7511946	3	True				
ANR	7512025	CallExpression	Memento_breakpointLocked ( )		7511946	0					
ANR	7512026	Callee	Memento_breakpointLocked		7511946	0					
ANR	7512027	Identifier	Memento_breakpointLocked		7511946	0					
ANR	7512028	ArgumentList			7511946	1					
ANR	7512029	ReturnStatement	return 1 ;	2054:8:58567:58575	7511946	4	True				
ANR	7512030	PrimaryExpression	1		7511946	0					
ANR	7512031	ElseStatement	else		7511946	0					
ANR	7512032	IfStatement	if ( data . preCorrupt || data . postCorrupt )		7511946	0					
ANR	7512033	Condition	data . preCorrupt || data . postCorrupt	2055:15:58592:58626	7511946	0	True				
ANR	7512034	OrExpression	data . preCorrupt || data . postCorrupt		7511946	0		||			
ANR	7512035	MemberAccess	data . preCorrupt		7511946	0					
ANR	7512036	Identifier	data		7511946	0					
ANR	7512037	Identifier	preCorrupt		7511946	1					
ANR	7512038	MemberAccess	data . postCorrupt		7511946	1					
ANR	7512039	Identifier	data		7511946	0					
ANR	7512040	Identifier	postCorrupt		7511946	1					
ANR	7512041	CompoundStatement		15:52:474:474	7511946	1					
ANR	7512042	ExpressionStatement	"fprintf ( stderr , ""Block "" )"	2056:8:58639:58664	7511946	0	True				
ANR	7512043	CallExpression	"fprintf ( stderr , ""Block "" )"		7511946	0					
ANR	7512044	Callee	fprintf		7511946	0					
ANR	7512045	Identifier	fprintf		7511946	0					
ANR	7512046	ArgumentList	stderr		7511946	1					
ANR	7512047	Argument	stderr		7511946	0					
ANR	7512048	Identifier	stderr		7511946	0					
ANR	7512049	Argument	"""Block """		7511946	1					
ANR	7512050	PrimaryExpression	"""Block """		7511946	0					
ANR	7512051	ExpressionStatement	"showBlock ( memblk , ' ' )"	2057:8:58674:58696	7511946	1	True				
ANR	7512052	CallExpression	"showBlock ( memblk , ' ' )"		7511946	0					
ANR	7512053	Callee	showBlock		7511946	0					
ANR	7512054	Identifier	showBlock		7511946	0					
ANR	7512055	ArgumentList	memblk		7511946	1					
ANR	7512056	Argument	memblk		7511946	0					
ANR	7512057	Identifier	memblk		7511946	0					
ANR	7512058	Argument	' '		7511946	1					
ANR	7512059	PrimaryExpression	' '		7511946	0					
ANR	7512060	ExpressionStatement	"fprintf ( stderr , "" found to be corrupted on %s!\\n"" , action )"	2058:8:58706:58764	7511946	2	True				
ANR	7512061	CallExpression	"fprintf ( stderr , "" found to be corrupted on %s!\\n"" , action )"		7511946	0					
ANR	7512062	Callee	fprintf		7511946	0					
ANR	7512063	Identifier	fprintf		7511946	0					
ANR	7512064	ArgumentList	stderr		7511946	1					
ANR	7512065	Argument	stderr		7511946	0					
ANR	7512066	Identifier	stderr		7511946	0					
ANR	7512067	Argument	""" found to be corrupted on %s!\\n"""		7511946	1					
ANR	7512068	PrimaryExpression	""" found to be corrupted on %s!\\n"""		7511946	0					
ANR	7512069	Argument	action		7511946	2					
ANR	7512070	Identifier	action		7511946	0					
ANR	7512071	IfStatement	if ( data . preCorrupt )		7511946	3					
ANR	7512072	Condition	data . preCorrupt	2059:12:58778:58792	7511946	0	True				
ANR	7512073	MemberAccess	data . preCorrupt		7511946	0					
ANR	7512074	Identifier	data		7511946	0					
ANR	7512075	Identifier	preCorrupt		7511946	1					
ANR	7512076	CompoundStatement		19:29:640:640	7511946	1					
ANR	7512077	ExpressionStatement	"fprintf ( stderr , ""Preguard corrupted\\n"" )"	2060:12:58809:58848	7511946	0	True				
ANR	7512078	CallExpression	"fprintf ( stderr , ""Preguard corrupted\\n"" )"		7511946	0					
ANR	7512079	Callee	fprintf		7511946	0					
ANR	7512080	Identifier	fprintf		7511946	0					
ANR	7512081	ArgumentList	stderr		7511946	1					
ANR	7512082	Argument	stderr		7511946	0					
ANR	7512083	Identifier	stderr		7511946	0					
ANR	7512084	Argument	"""Preguard corrupted\\n"""		7511946	1					
ANR	7512085	PrimaryExpression	"""Preguard corrupted\\n"""		7511946	0					
ANR	7512086	IfStatement	if ( data . postCorrupt )		7511946	4					
ANR	7512087	Condition	data . postCorrupt	2062:12:58872:58887	7511946	0	True				
ANR	7512088	MemberAccess	data . postCorrupt		7511946	0					
ANR	7512089	Identifier	data		7511946	0					
ANR	7512090	Identifier	postCorrupt		7511946	1					
ANR	7512091	CompoundStatement		22:30:735:735	7511946	1					
ANR	7512092	ExpressionStatement	"fprintf ( stderr , ""Postguard corrupted\\n"" )"	2063:12:58904:58944	7511946	0	True				
ANR	7512093	CallExpression	"fprintf ( stderr , ""Postguard corrupted\\n"" )"		7511946	0					
ANR	7512094	Callee	fprintf		7511946	0					
ANR	7512095	Identifier	fprintf		7511946	0					
ANR	7512096	ArgumentList	stderr		7511946	1					
ANR	7512097	Argument	stderr		7511946	0					
ANR	7512098	Identifier	stderr		7511946	0					
ANR	7512099	Argument	"""Postguard corrupted\\n"""		7511946	1					
ANR	7512100	PrimaryExpression	"""Postguard corrupted\\n"""		7511946	0					
ANR	7512101	ExpressionStatement	"fprintf ( stderr , ""Block last checked OK at allocation %d. Now %d.\\n"" , memblk -> lastCheckedOK , memento . sequence )"	2065:8:58964:59089	7511946	5	True				
ANR	7512102	CallExpression	"fprintf ( stderr , ""Block last checked OK at allocation %d. Now %d.\\n"" , memblk -> lastCheckedOK , memento . sequence )"		7511946	0					
ANR	7512103	Callee	fprintf		7511946	0					
ANR	7512104	Identifier	fprintf		7511946	0					
ANR	7512105	ArgumentList	stderr		7511946	1					
ANR	7512106	Argument	stderr		7511946	0					
ANR	7512107	Identifier	stderr		7511946	0					
ANR	7512108	Argument	"""Block last checked OK at allocation %d. Now %d.\\n"""		7511946	1					
ANR	7512109	PrimaryExpression	"""Block last checked OK at allocation %d. Now %d.\\n"""		7511946	0					
ANR	7512110	Argument	memblk -> lastCheckedOK		7511946	2					
ANR	7512111	PtrMemberAccess	memblk -> lastCheckedOK		7511946	0					
ANR	7512112	Identifier	memblk		7511946	0					
ANR	7512113	Identifier	lastCheckedOK		7511946	1					
ANR	7512114	Argument	memento . sequence		7511946	3					
ANR	7512115	MemberAccess	memento . sequence		7511946	0					
ANR	7512116	Identifier	memento		7511946	0					
ANR	7512117	Identifier	sequence		7511946	1					
ANR	7512118	ExpressionStatement	Memento_breakpointLocked ( )	2067:8:59099:59125	7511946	6	True				
ANR	7512119	CallExpression	Memento_breakpointLocked ( )		7511946	0					
ANR	7512120	Callee	Memento_breakpointLocked		7511946	0					
ANR	7512121	Identifier	Memento_breakpointLocked		7511946	0					
ANR	7512122	ArgumentList			7511946	1					
ANR	7512123	ReturnStatement	return 1 ;	2068:8:59135:59143	7511946	7	True				
ANR	7512124	PrimaryExpression	1		7511946	0					
ANR	7512125	ReturnStatement	return 0 ;	2071:4:59162:59170	7511946	4	True				
ANR	7512126	PrimaryExpression	0		7511946	0					
ANR	7512127	ReturnType	static int		7511946	1					
ANR	7512128	Identifier	checkBlockUser		7511946	2					
ANR	7512129	ParameterList	"Memento_BlkHeader * memblk , const char * action"		7511946	3					
ANR	7512130	Parameter	Memento_BlkHeader * memblk	2040:26:58107:58131	7511946	0	True				
ANR	7512131	ParameterType	Memento_BlkHeader *		7511946	0					
ANR	7512132	Identifier	memblk		7511946	1					
ANR	7512133	Parameter	const char * action	2040:53:58134:58151	7511946	1	True				
ANR	7512134	ParameterType	const char *		7511946	0					
ANR	7512135	Identifier	action		7511946	1					
ANR	7512136	CFGEntryNode	ENTRY		7511946		True				
ANR	7512137	CFGExitNode	EXIT		7511946		True				
ANR	7512138	Symbol	& memento		7511946						
ANR	7512139	Symbol	data . preCorrupt		7511946						
ANR	7512140	Symbol	data		7511946						
ANR	7512141	Symbol	data . postCorrupt		7511946						
ANR	7512142	Symbol	data . found		7511946						
ANR	7512143	Symbol	memento		7511946						
ANR	7512144	Symbol	stderr		7511946						
ANR	7512145	Symbol	memblk		7511946						
ANR	7512146	Symbol	& data		7511946						
ANR	7512147	Symbol	Memento_Internal_checkAllocedBlock		7511946						
ANR	7512148	Symbol	memblk -> lastCheckedOK		7511946						
ANR	7512149	Symbol	& memento . used		7511946						
ANR	7512150	Symbol	action		7511946						
ANR	7512151	Symbol	* memblk		7511946						
ANR	7512152	Symbol	memento . sequence		7511946						
ANR	7512153	Function	checkBlock	2074:0:59175:60601							
ANR	7512154	FunctionDef	"checkBlock (Memento_BlkHeader * memblk , const char * action)"		7512153	0					
ANR	7512155	CompoundStatement		2075:0:59244:60601	7512153	0					
ANR	7512156	IdentifierDeclStatement	BlkCheckData data ;	2077:4:59275:59292	7512153	0	True				
ANR	7512157	IdentifierDecl	data		7512153	0					
ANR	7512158	IdentifierDeclType	BlkCheckData		7512153	0					
ANR	7512159	Identifier	data		7512153	1					
ANR	7512160	IfStatement	if ( memblk -> child != MEMENTO_CHILD_MAGIC || memblk -> sibling != MEMENTO_SIBLING_MAGIC )		7512153	1					
ANR	7512161	Condition	memblk -> child != MEMENTO_CHILD_MAGIC || memblk -> sibling != MEMENTO_SIBLING_MAGIC	2080:8:59310:59397	7512153	0	True				
ANR	7512162	OrExpression	memblk -> child != MEMENTO_CHILD_MAGIC || memblk -> sibling != MEMENTO_SIBLING_MAGIC		7512153	0		||			
ANR	7512163	EqualityExpression	memblk -> child != MEMENTO_CHILD_MAGIC		7512153	0		!=			
ANR	7512164	PtrMemberAccess	memblk -> child		7512153	0					
ANR	7512165	Identifier	memblk		7512153	0					
ANR	7512166	Identifier	child		7512153	1					
ANR	7512167	Identifier	MEMENTO_CHILD_MAGIC		7512153	1					
ANR	7512168	EqualityExpression	memblk -> sibling != MEMENTO_SIBLING_MAGIC		7512153	1		!=			
ANR	7512169	PtrMemberAccess	memblk -> sibling		7512153	0					
ANR	7512170	Identifier	memblk		7512153	0					
ANR	7512171	Identifier	sibling		7512153	1					
ANR	7512172	Identifier	MEMENTO_SIBLING_MAGIC		7512153	1					
ANR	7512173	CompoundStatement		8:4:159:159	7512153	1					
ANR	7512174	ExpressionStatement	"fprintf ( stderr , ""Attempt to %s invalid block "" , action )"	2084:8:59437:59492	7512153	0	True				
ANR	7512175	CallExpression	"fprintf ( stderr , ""Attempt to %s invalid block "" , action )"		7512153	0					
ANR	7512176	Callee	fprintf		7512153	0					
ANR	7512177	Identifier	fprintf		7512153	0					
ANR	7512178	ArgumentList	stderr		7512153	1					
ANR	7512179	Argument	stderr		7512153	0					
ANR	7512180	Identifier	stderr		7512153	0					
ANR	7512181	Argument	"""Attempt to %s invalid block """		7512153	1					
ANR	7512182	PrimaryExpression	"""Attempt to %s invalid block """		7512153	0					
ANR	7512183	Argument	action		7512153	2					
ANR	7512184	Identifier	action		7512153	0					
ANR	7512185	ExpressionStatement	"showBlock ( memblk , 32 )"	2085:8:59502:59523	7512153	1	True				
ANR	7512186	CallExpression	"showBlock ( memblk , 32 )"		7512153	0					
ANR	7512187	Callee	showBlock		7512153	0					
ANR	7512188	Identifier	showBlock		7512153	0					
ANR	7512189	ArgumentList	memblk		7512153	1					
ANR	7512190	Argument	memblk		7512153	0					
ANR	7512191	Identifier	memblk		7512153	0					
ANR	7512192	Argument	32		7512153	1					
ANR	7512193	PrimaryExpression	32		7512153	0					
ANR	7512194	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	2086:8:59533:59554	7512153	2	True				
ANR	7512195	CallExpression	"fprintf ( stderr , ""\\n"" )"		7512153	0					
ANR	7512196	Callee	fprintf		7512153	0					
ANR	7512197	Identifier	fprintf		7512153	0					
ANR	7512198	ArgumentList	stderr		7512153	1					
ANR	7512199	Argument	stderr		7512153	0					
ANR	7512200	Identifier	stderr		7512153	0					
ANR	7512201	Argument	"""\\n"""		7512153	1					
ANR	7512202	PrimaryExpression	"""\\n"""		7512153	0					
ANR	7512203	ExpressionStatement	Memento_breakpointLocked ( )	2087:8:59564:59590	7512153	3	True				
ANR	7512204	CallExpression	Memento_breakpointLocked ( )		7512153	0					
ANR	7512205	Callee	Memento_breakpointLocked		7512153	0					
ANR	7512206	Identifier	Memento_breakpointLocked		7512153	0					
ANR	7512207	ArgumentList			7512153	1					
ANR	7512208	ReturnStatement	return 1 ;	2088:8:59600:59608	7512153	4	True				
ANR	7512209	PrimaryExpression	1		7512153	0					
ANR	7512210	ExpressionStatement	"memset ( & data , 0 , sizeof ( data ) )"	2092:4:59646:59676	7512153	2	True				
ANR	7512211	CallExpression	"memset ( & data , 0 , sizeof ( data ) )"		7512153	0					
ANR	7512212	Callee	memset		7512153	0					
ANR	7512213	Identifier	memset		7512153	0					
ANR	7512214	ArgumentList	& data		7512153	1					
ANR	7512215	Argument	& data		7512153	0					
ANR	7512216	UnaryOperationExpression	& data		7512153	0					
ANR	7512217	UnaryOperator	&		7512153	0					
ANR	7512218	Identifier	data		7512153	1					
ANR	7512219	Argument	0		7512153	1					
ANR	7512220	PrimaryExpression	0		7512153	0					
ANR	7512221	Argument	sizeof ( data )		7512153	2					
ANR	7512222	SizeofExpression	sizeof ( data )		7512153	0					
ANR	7512223	Sizeof	sizeof		7512153	0					
ANR	7512224	SizeofOperand	data		7512153	1					
ANR	7512225	ExpressionStatement	"Memento_appBlock ( & memento . used , Memento_Internal_checkAllocedBlock , & data , memblk )"	2093:4:59682:59785	7512153	3	True				
ANR	7512226	CallExpression	"Memento_appBlock ( & memento . used , Memento_Internal_checkAllocedBlock , & data , memblk )"		7512153	0					
ANR	7512227	Callee	Memento_appBlock		7512153	0					
ANR	7512228	Identifier	Memento_appBlock		7512153	0					
ANR	7512229	ArgumentList	& memento . used		7512153	1					
ANR	7512230	Argument	& memento . used		7512153	0					
ANR	7512231	UnaryOperationExpression	& memento . used		7512153	0					
ANR	7512232	UnaryOperator	&		7512153	0					
ANR	7512233	MemberAccess	memento . used		7512153	1					
ANR	7512234	Identifier	memento		7512153	0					
ANR	7512235	Identifier	used		7512153	1					
ANR	7512236	Argument	Memento_Internal_checkAllocedBlock		7512153	1					
ANR	7512237	Identifier	Memento_Internal_checkAllocedBlock		7512153	0					
ANR	7512238	Argument	& data		7512153	2					
ANR	7512239	UnaryOperationExpression	& data		7512153	0					
ANR	7512240	UnaryOperator	&		7512153	0					
ANR	7512241	Identifier	data		7512153	1					
ANR	7512242	Argument	memblk		7512153	3					
ANR	7512243	Identifier	memblk		7512153	0					
ANR	7512244	IfStatement	if ( ! data . found )		7512153	4					
ANR	7512245	Condition	! data . found	2095:8:59795:59805	7512153	0	True				
ANR	7512246	UnaryOperationExpression	! data . found		7512153	0					
ANR	7512247	UnaryOperator	!		7512153	0					
ANR	7512248	MemberAccess	data . found		7512153	1					
ANR	7512249	Identifier	data		7512153	0					
ANR	7512250	Identifier	found		7512153	1					
ANR	7512251	CompoundStatement		21:21:563:563	7512153	1					
ANR	7512252	ExpressionStatement	"fprintf ( stderr , ""Attempt to %s block "" , action )"	2097:8:59841:59888	7512153	0	True				
ANR	7512253	CallExpression	"fprintf ( stderr , ""Attempt to %s block "" , action )"		7512153	0					
ANR	7512254	Callee	fprintf		7512153	0					
ANR	7512255	Identifier	fprintf		7512153	0					
ANR	7512256	ArgumentList	stderr		7512153	1					
ANR	7512257	Argument	stderr		7512153	0					
ANR	7512258	Identifier	stderr		7512153	0					
ANR	7512259	Argument	"""Attempt to %s block """		7512153	1					
ANR	7512260	PrimaryExpression	"""Attempt to %s block """		7512153	0					
ANR	7512261	Argument	action		7512153	2					
ANR	7512262	Identifier	action		7512153	0					
ANR	7512263	ExpressionStatement	"showBlock ( memblk , 32 )"	2098:8:59898:59919	7512153	1	True				
ANR	7512264	CallExpression	"showBlock ( memblk , 32 )"		7512153	0					
ANR	7512265	Callee	showBlock		7512153	0					
ANR	7512266	Identifier	showBlock		7512153	0					
ANR	7512267	ArgumentList	memblk		7512153	1					
ANR	7512268	Argument	memblk		7512153	0					
ANR	7512269	Identifier	memblk		7512153	0					
ANR	7512270	Argument	32		7512153	1					
ANR	7512271	PrimaryExpression	32		7512153	0					
ANR	7512272	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	2099:8:59929:59950	7512153	2	True				
ANR	7512273	CallExpression	"fprintf ( stderr , ""\\n"" )"		7512153	0					
ANR	7512274	Callee	fprintf		7512153	0					
ANR	7512275	Identifier	fprintf		7512153	0					
ANR	7512276	ArgumentList	stderr		7512153	1					
ANR	7512277	Argument	stderr		7512153	0					
ANR	7512278	Identifier	stderr		7512153	0					
ANR	7512279	Argument	"""\\n"""		7512153	1					
ANR	7512280	PrimaryExpression	"""\\n"""		7512153	0					
ANR	7512281	ExpressionStatement	Memento_breakpointLocked ( )	2100:8:59960:59986	7512153	3	True				
ANR	7512282	CallExpression	Memento_breakpointLocked ( )		7512153	0					
ANR	7512283	Callee	Memento_breakpointLocked		7512153	0					
ANR	7512284	Identifier	Memento_breakpointLocked		7512153	0					
ANR	7512285	ArgumentList			7512153	1					
ANR	7512286	ReturnStatement	return 1 ;	2101:8:59996:60004	7512153	4	True				
ANR	7512287	PrimaryExpression	1		7512153	0					
ANR	7512288	ElseStatement	else		7512153	0					
ANR	7512289	IfStatement	if ( data . preCorrupt || data . postCorrupt )		7512153	0					
ANR	7512290	Condition	data . preCorrupt || data . postCorrupt	2102:15:60021:60055	7512153	0	True				
ANR	7512291	OrExpression	data . preCorrupt || data . postCorrupt		7512153	0		||			
ANR	7512292	MemberAccess	data . preCorrupt		7512153	0					
ANR	7512293	Identifier	data		7512153	0					
ANR	7512294	Identifier	preCorrupt		7512153	1					
ANR	7512295	MemberAccess	data . postCorrupt		7512153	1					
ANR	7512296	Identifier	data		7512153	0					
ANR	7512297	Identifier	postCorrupt		7512153	1					
ANR	7512298	CompoundStatement		28:52:813:813	7512153	1					
ANR	7512299	ExpressionStatement	"fprintf ( stderr , ""Block "" )"	2103:8:60068:60093	7512153	0	True				
ANR	7512300	CallExpression	"fprintf ( stderr , ""Block "" )"		7512153	0					
ANR	7512301	Callee	fprintf		7512153	0					
ANR	7512302	Identifier	fprintf		7512153	0					
ANR	7512303	ArgumentList	stderr		7512153	1					
ANR	7512304	Argument	stderr		7512153	0					
ANR	7512305	Identifier	stderr		7512153	0					
ANR	7512306	Argument	"""Block """		7512153	1					
ANR	7512307	PrimaryExpression	"""Block """		7512153	0					
ANR	7512308	ExpressionStatement	"showBlock ( memblk , ' ' )"	2104:8:60103:60125	7512153	1	True				
ANR	7512309	CallExpression	"showBlock ( memblk , ' ' )"		7512153	0					
ANR	7512310	Callee	showBlock		7512153	0					
ANR	7512311	Identifier	showBlock		7512153	0					
ANR	7512312	ArgumentList	memblk		7512153	1					
ANR	7512313	Argument	memblk		7512153	0					
ANR	7512314	Identifier	memblk		7512153	0					
ANR	7512315	Argument	' '		7512153	1					
ANR	7512316	PrimaryExpression	' '		7512153	0					
ANR	7512317	ExpressionStatement	"fprintf ( stderr , "" found to be corrupted on %s!\\n"" , action )"	2105:8:60135:60193	7512153	2	True				
ANR	7512318	CallExpression	"fprintf ( stderr , "" found to be corrupted on %s!\\n"" , action )"		7512153	0					
ANR	7512319	Callee	fprintf		7512153	0					
ANR	7512320	Identifier	fprintf		7512153	0					
ANR	7512321	ArgumentList	stderr		7512153	1					
ANR	7512322	Argument	stderr		7512153	0					
ANR	7512323	Identifier	stderr		7512153	0					
ANR	7512324	Argument	""" found to be corrupted on %s!\\n"""		7512153	1					
ANR	7512325	PrimaryExpression	""" found to be corrupted on %s!\\n"""		7512153	0					
ANR	7512326	Argument	action		7512153	2					
ANR	7512327	Identifier	action		7512153	0					
ANR	7512328	IfStatement	if ( data . preCorrupt )		7512153	3					
ANR	7512329	Condition	data . preCorrupt	2106:12:60207:60221	7512153	0	True				
ANR	7512330	MemberAccess	data . preCorrupt		7512153	0					
ANR	7512331	Identifier	data		7512153	0					
ANR	7512332	Identifier	preCorrupt		7512153	1					
ANR	7512333	CompoundStatement		32:29:979:979	7512153	1					
ANR	7512334	ExpressionStatement	"fprintf ( stderr , ""Preguard corrupted\\n"" )"	2107:12:60238:60277	7512153	0	True				
ANR	7512335	CallExpression	"fprintf ( stderr , ""Preguard corrupted\\n"" )"		7512153	0					
ANR	7512336	Callee	fprintf		7512153	0					
ANR	7512337	Identifier	fprintf		7512153	0					
ANR	7512338	ArgumentList	stderr		7512153	1					
ANR	7512339	Argument	stderr		7512153	0					
ANR	7512340	Identifier	stderr		7512153	0					
ANR	7512341	Argument	"""Preguard corrupted\\n"""		7512153	1					
ANR	7512342	PrimaryExpression	"""Preguard corrupted\\n"""		7512153	0					
ANR	7512343	IfStatement	if ( data . postCorrupt )		7512153	4					
ANR	7512344	Condition	data . postCorrupt	2109:12:60301:60316	7512153	0	True				
ANR	7512345	MemberAccess	data . postCorrupt		7512153	0					
ANR	7512346	Identifier	data		7512153	0					
ANR	7512347	Identifier	postCorrupt		7512153	1					
ANR	7512348	CompoundStatement		35:30:1074:1074	7512153	1					
ANR	7512349	ExpressionStatement	"fprintf ( stderr , ""Postguard corrupted\\n"" )"	2110:12:60333:60373	7512153	0	True				
ANR	7512350	CallExpression	"fprintf ( stderr , ""Postguard corrupted\\n"" )"		7512153	0					
ANR	7512351	Callee	fprintf		7512153	0					
ANR	7512352	Identifier	fprintf		7512153	0					
ANR	7512353	ArgumentList	stderr		7512153	1					
ANR	7512354	Argument	stderr		7512153	0					
ANR	7512355	Identifier	stderr		7512153	0					
ANR	7512356	Argument	"""Postguard corrupted\\n"""		7512153	1					
ANR	7512357	PrimaryExpression	"""Postguard corrupted\\n"""		7512153	0					
ANR	7512358	ExpressionStatement	"fprintf ( stderr , ""Block last checked OK at allocation %d. Now %d.\\n"" , memblk -> lastCheckedOK , memento . sequence )"	2112:8:60393:60518	7512153	5	True				
ANR	7512359	CallExpression	"fprintf ( stderr , ""Block last checked OK at allocation %d. Now %d.\\n"" , memblk -> lastCheckedOK , memento . sequence )"		7512153	0					
ANR	7512360	Callee	fprintf		7512153	0					
ANR	7512361	Identifier	fprintf		7512153	0					
ANR	7512362	ArgumentList	stderr		7512153	1					
ANR	7512363	Argument	stderr		7512153	0					
ANR	7512364	Identifier	stderr		7512153	0					
ANR	7512365	Argument	"""Block last checked OK at allocation %d. Now %d.\\n"""		7512153	1					
ANR	7512366	PrimaryExpression	"""Block last checked OK at allocation %d. Now %d.\\n"""		7512153	0					
ANR	7512367	Argument	memblk -> lastCheckedOK		7512153	2					
ANR	7512368	PtrMemberAccess	memblk -> lastCheckedOK		7512153	0					
ANR	7512369	Identifier	memblk		7512153	0					
ANR	7512370	Identifier	lastCheckedOK		7512153	1					
ANR	7512371	Argument	memento . sequence		7512153	3					
ANR	7512372	MemberAccess	memento . sequence		7512153	0					
ANR	7512373	Identifier	memento		7512153	0					
ANR	7512374	Identifier	sequence		7512153	1					
ANR	7512375	ExpressionStatement	Memento_breakpointLocked ( )	2114:8:60528:60554	7512153	6	True				
ANR	7512376	CallExpression	Memento_breakpointLocked ( )		7512153	0					
ANR	7512377	Callee	Memento_breakpointLocked		7512153	0					
ANR	7512378	Identifier	Memento_breakpointLocked		7512153	0					
ANR	7512379	ArgumentList			7512153	1					
ANR	7512380	ReturnStatement	return 1 ;	2115:8:60564:60572	7512153	7	True				
ANR	7512381	PrimaryExpression	1		7512153	0					
ANR	7512382	ReturnStatement	return 0 ;	2118:4:60591:60599	7512153	5	True				
ANR	7512383	PrimaryExpression	0		7512153	0					
ANR	7512384	ReturnType	static int		7512153	1					
ANR	7512385	Identifier	checkBlock		7512153	2					
ANR	7512386	ParameterList	"Memento_BlkHeader * memblk , const char * action"		7512153	3					
ANR	7512387	Parameter	Memento_BlkHeader * memblk	2074:22:59197:59221	7512153	0	True				
ANR	7512388	ParameterType	Memento_BlkHeader *		7512153	0					
ANR	7512389	Identifier	memblk		7512153	1					
ANR	7512390	Parameter	const char * action	2074:49:59224:59241	7512153	1	True				
ANR	7512391	ParameterType	const char *		7512153	0					
ANR	7512392	Identifier	action		7512153	1					
ANR	7512393	CFGEntryNode	ENTRY		7512153		True				
ANR	7512394	CFGExitNode	EXIT		7512153		True				
ANR	7512395	Symbol	& memento		7512153						
ANR	7512396	Symbol	data . preCorrupt		7512153						
ANR	7512397	Symbol	data		7512153						
ANR	7512398	Symbol	memblk -> sibling		7512153						
ANR	7512399	Symbol	MEMENTO_SIBLING_MAGIC		7512153						
ANR	7512400	Symbol	data . postCorrupt		7512153						
ANR	7512401	Symbol	memblk -> child		7512153						
ANR	7512402	Symbol	data . found		7512153						
ANR	7512403	Symbol	memento		7512153						
ANR	7512404	Symbol	stderr		7512153						
ANR	7512405	Symbol	memblk		7512153						
ANR	7512406	Symbol	& data		7512153						
ANR	7512407	Symbol	Memento_Internal_checkAllocedBlock		7512153						
ANR	7512408	Symbol	memblk -> lastCheckedOK		7512153						
ANR	7512409	Symbol	MEMENTO_CHILD_MAGIC		7512153						
ANR	7512410	Symbol	& memento . used		7512153						
ANR	7512411	Symbol	action		7512153						
ANR	7512412	Symbol	* memblk		7512153						
ANR	7512413	Symbol	memento . sequence		7512153						
ANR	7512414	Function	do_free	2121:0:60604:61827							
ANR	7512415	FunctionDef	"do_free (void * blk , int eventType)"		7512414	0					
ANR	7512416	CompoundStatement		2122:0:60650:61827	7512414	0					
ANR	7512417	IdentifierDeclStatement	Memento_BlkHeader * memblk ;	2123:4:60656:60681	7512414	0	True				
ANR	7512418	IdentifierDecl	* memblk		7512414	0					
ANR	7512419	IdentifierDeclType	Memento_BlkHeader *		7512414	0					
ANR	7512420	Identifier	memblk		7512414	1					
ANR	7512421	IfStatement	if ( Memento_event ( ) )		7512414	1					
ANR	7512422	Condition	Memento_event ( )	2125:8:60692:60706	7512414	0	True				
ANR	7512423	CallExpression	Memento_event ( )		7512414	0					
ANR	7512424	Callee	Memento_event		7512414	0					
ANR	7512425	Identifier	Memento_event		7512414	0					
ANR	7512426	ArgumentList			7512414	1					
ANR	7512427	ExpressionStatement	Memento_breakpointLocked ( )	2125:25:60709:60735	7512414	1	True				
ANR	7512428	CallExpression	Memento_breakpointLocked ( )		7512414	0					
ANR	7512429	Callee	Memento_breakpointLocked		7512414	0					
ANR	7512430	Identifier	Memento_breakpointLocked		7512414	0					
ANR	7512431	ArgumentList			7512414	1					
ANR	7512432	IfStatement	if ( blk == NULL )		7512414	2					
ANR	7512433	Condition	blk == NULL	2127:8:60746:60756	7512414	0	True				
ANR	7512434	EqualityExpression	blk == NULL		7512414	0		==			
ANR	7512435	Identifier	blk		7512414	0					
ANR	7512436	Identifier	NULL		7512414	1					
ANR	7512437	ReturnStatement	return ;	2128:8:60767:60773	7512414	1	True				
ANR	7512438	ExpressionStatement	memblk = MEMBLK_FROMBLK ( blk )	2130:4:60780:60808	7512414	3	True				
ANR	7512439	AssignmentExpression	memblk = MEMBLK_FROMBLK ( blk )		7512414	0		=			
ANR	7512440	Identifier	memblk		7512414	0					
ANR	7512441	CallExpression	MEMBLK_FROMBLK ( blk )		7512414	1					
ANR	7512442	Callee	MEMBLK_FROMBLK		7512414	0					
ANR	7512443	Identifier	MEMBLK_FROMBLK		7512414	0					
ANR	7512444	ArgumentList	blk		7512414	1					
ANR	7512445	Argument	blk		7512414	0					
ANR	7512446	Identifier	blk		7512414	0					
ANR	7512447	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"	2131:4:60814:60864	7512414	4	True				
ANR	7512448	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"		7512414	0					
ANR	7512449	Callee	VALGRIND_MAKE_MEM_DEFINED		7512414	0					
ANR	7512450	Identifier	VALGRIND_MAKE_MEM_DEFINED		7512414	0					
ANR	7512451	ArgumentList	memblk		7512414	1					
ANR	7512452	Argument	memblk		7512414	0					
ANR	7512453	Identifier	memblk		7512414	0					
ANR	7512454	Argument	sizeof ( * memblk )		7512414	1					
ANR	7512455	SizeofExpression	sizeof ( * memblk )		7512414	0					
ANR	7512456	Sizeof	sizeof		7512414	0					
ANR	7512457	UnaryOperationExpression	* memblk		7512414	1					
ANR	7512458	UnaryOperator	*		7512414	0					
ANR	7512459	Identifier	memblk		7512414	1					
ANR	7512460	IfStatement	"if ( checkBlock ( memblk , ""free"" ) )"		7512414	5					
ANR	7512461	Condition	"checkBlock ( memblk , ""free"" )"	2132:8:60874:60899	7512414	0	True				
ANR	7512462	CallExpression	"checkBlock ( memblk , ""free"" )"		7512414	0					
ANR	7512463	Callee	checkBlock		7512414	0					
ANR	7512464	Identifier	checkBlock		7512414	0					
ANR	7512465	ArgumentList	memblk		7512414	1					
ANR	7512466	Argument	memblk		7512414	0					
ANR	7512467	Identifier	memblk		7512414	0					
ANR	7512468	Argument	"""free"""		7512414	1					
ANR	7512469	PrimaryExpression	"""free"""		7512414	0					
ANR	7512470	ReturnStatement	return ;	2133:8:60910:60916	7512414	1	True				
ANR	7512471	ExpressionStatement	"Memento_storeDetails ( memblk , Memento_EventType_free )"	2136:4:60946:60998	7512414	6	True				
ANR	7512472	CallExpression	"Memento_storeDetails ( memblk , Memento_EventType_free )"		7512414	0					
ANR	7512473	Callee	Memento_storeDetails		7512414	0					
ANR	7512474	Identifier	Memento_storeDetails		7512414	0					
ANR	7512475	ArgumentList	memblk		7512414	1					
ANR	7512476	Argument	memblk		7512414	0					
ANR	7512477	Identifier	memblk		7512414	0					
ANR	7512478	Argument	Memento_EventType_free		7512414	1					
ANR	7512479	Identifier	Memento_EventType_free		7512414	0					
ANR	7512480	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"	2139:4:61012:61062	7512414	7	True				
ANR	7512481	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"		7512414	0					
ANR	7512482	Callee	VALGRIND_MAKE_MEM_DEFINED		7512414	0					
ANR	7512483	Identifier	VALGRIND_MAKE_MEM_DEFINED		7512414	0					
ANR	7512484	ArgumentList	memblk		7512414	1					
ANR	7512485	Argument	memblk		7512414	0					
ANR	7512486	Identifier	memblk		7512414	0					
ANR	7512487	Argument	sizeof ( * memblk )		7512414	1					
ANR	7512488	SizeofExpression	sizeof ( * memblk )		7512414	0					
ANR	7512489	Sizeof	sizeof		7512414	0					
ANR	7512490	UnaryOperationExpression	* memblk		7512414	1					
ANR	7512491	UnaryOperator	*		7512414	0					
ANR	7512492	Identifier	memblk		7512414	1					
ANR	7512493	IfStatement	if ( memblk -> flags & Memento_Flag_BreakOnFree )		7512414	8					
ANR	7512494	Condition	memblk -> flags & Memento_Flag_BreakOnFree	2140:8:61072:61111	7512414	0	True				
ANR	7512495	BitAndExpression	memblk -> flags & Memento_Flag_BreakOnFree		7512414	0		&			
ANR	7512496	PtrMemberAccess	memblk -> flags		7512414	0					
ANR	7512497	Identifier	memblk		7512414	0					
ANR	7512498	Identifier	flags		7512414	1					
ANR	7512499	Identifier	Memento_Flag_BreakOnFree		7512414	1					
ANR	7512500	ExpressionStatement	Memento_breakpointLocked ( )	2141:8:61122:61148	7512414	1	True				
ANR	7512501	CallExpression	Memento_breakpointLocked ( )		7512414	0					
ANR	7512502	Callee	Memento_breakpointLocked		7512414	0					
ANR	7512503	Identifier	Memento_breakpointLocked		7512414	0					
ANR	7512504	ArgumentList			7512414	1					
ANR	7512505	ExpressionStatement	memento . alloc -= memblk -> rawsize	2143:4:61155:61187	7512414	9	True				
ANR	7512506	AssignmentExpression	memento . alloc -= memblk -> rawsize		7512414	0		-=			
ANR	7512507	MemberAccess	memento . alloc		7512414	0					
ANR	7512508	Identifier	memento		7512414	0					
ANR	7512509	Identifier	alloc		7512414	1					
ANR	7512510	PtrMemberAccess	memblk -> rawsize		7512414	1					
ANR	7512511	Identifier	memblk		7512414	0					
ANR	7512512	Identifier	rawsize		7512414	1					
ANR	7512513	ExpressionStatement	memento . numFrees ++	2144:4:61193:61211	7512414	10	True				
ANR	7512514	PostIncDecOperationExpression	memento . numFrees ++		7512414	0					
ANR	7512515	MemberAccess	memento . numFrees		7512414	0					
ANR	7512516	Identifier	memento		7512414	0					
ANR	7512517	Identifier	numFrees		7512414	1					
ANR	7512518	IncDec	++		7512414	1					
ANR	7512519	ExpressionStatement	"Memento_removeBlock ( & memento . used , memblk )"	2146:4:61218:61260	7512414	11	True				
ANR	7512520	CallExpression	"Memento_removeBlock ( & memento . used , memblk )"		7512414	0					
ANR	7512521	Callee	Memento_removeBlock		7512414	0					
ANR	7512522	Identifier	Memento_removeBlock		7512414	0					
ANR	7512523	ArgumentList	& memento . used		7512414	1					
ANR	7512524	Argument	& memento . used		7512414	0					
ANR	7512525	UnaryOperationExpression	& memento . used		7512414	0					
ANR	7512526	UnaryOperator	&		7512414	0					
ANR	7512527	MemberAccess	memento . used		7512414	1					
ANR	7512528	Identifier	memento		7512414	0					
ANR	7512529	Identifier	used		7512414	1					
ANR	7512530	Argument	memblk		7512414	1					
ANR	7512531	Identifier	memblk		7512414	0					
ANR	7512532	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"	2148:4:61267:61317	7512414	12	True				
ANR	7512533	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"		7512414	0					
ANR	7512534	Callee	VALGRIND_MAKE_MEM_DEFINED		7512414	0					
ANR	7512535	Identifier	VALGRIND_MAKE_MEM_DEFINED		7512414	0					
ANR	7512536	ArgumentList	memblk		7512414	1					
ANR	7512537	Argument	memblk		7512414	0					
ANR	7512538	Identifier	memblk		7512414	0					
ANR	7512539	Argument	sizeof ( * memblk )		7512414	1					
ANR	7512540	SizeofExpression	sizeof ( * memblk )		7512414	0					
ANR	7512541	Sizeof	sizeof		7512414	0					
ANR	7512542	UnaryOperationExpression	* memblk		7512414	1					
ANR	7512543	UnaryOperator	*		7512414	0					
ANR	7512544	Identifier	memblk		7512414	1					
ANR	7512545	IfStatement	if ( Memento_Internal_makeSpace ( MEMBLK_SIZE ( memblk -> rawsize ) ) )		7512414	13					
ANR	7512546	Condition	Memento_Internal_makeSpace ( MEMBLK_SIZE ( memblk -> rawsize ) )	2149:8:61327:61382	7512414	0	True				
ANR	7512547	CallExpression	Memento_Internal_makeSpace ( MEMBLK_SIZE ( memblk -> rawsize ) )		7512414	0					
ANR	7512548	Callee	Memento_Internal_makeSpace		7512414	0					
ANR	7512549	Identifier	Memento_Internal_makeSpace		7512414	0					
ANR	7512550	ArgumentList	MEMBLK_SIZE ( memblk -> rawsize )		7512414	1					
ANR	7512551	Argument	MEMBLK_SIZE ( memblk -> rawsize )		7512414	0					
ANR	7512552	CallExpression	MEMBLK_SIZE ( memblk -> rawsize )		7512414	0					
ANR	7512553	Callee	MEMBLK_SIZE		7512414	0					
ANR	7512554	Identifier	MEMBLK_SIZE		7512414	0					
ANR	7512555	ArgumentList	memblk -> rawsize		7512414	1					
ANR	7512556	Argument	memblk -> rawsize		7512414	0					
ANR	7512557	PtrMemberAccess	memblk -> rawsize		7512414	0					
ANR	7512558	Identifier	memblk		7512414	0					
ANR	7512559	Identifier	rawsize		7512414	1					
ANR	7512560	CompoundStatement		28:66:734:734	7512414	1					
ANR	7512561	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"	2150:8:61395:61445	7512414	0	True				
ANR	7512562	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"		7512414	0					
ANR	7512563	Callee	VALGRIND_MAKE_MEM_DEFINED		7512414	0					
ANR	7512564	Identifier	VALGRIND_MAKE_MEM_DEFINED		7512414	0					
ANR	7512565	ArgumentList	memblk		7512414	1					
ANR	7512566	Argument	memblk		7512414	0					
ANR	7512567	Identifier	memblk		7512414	0					
ANR	7512568	Argument	sizeof ( * memblk )		7512414	1					
ANR	7512569	SizeofExpression	sizeof ( * memblk )		7512414	0					
ANR	7512570	Sizeof	sizeof		7512414	0					
ANR	7512571	UnaryOperationExpression	* memblk		7512414	1					
ANR	7512572	UnaryOperator	*		7512414	0					
ANR	7512573	Identifier	memblk		7512414	1					
ANR	7512574	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_TOBLK ( memblk ) , memblk -> rawsize + Memento_PostSize )"	2151:8:61455:61572	7512414	1	True				
ANR	7512575	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_TOBLK ( memblk ) , memblk -> rawsize + Memento_PostSize )"		7512414	0					
ANR	7512576	Callee	VALGRIND_MAKE_MEM_DEFINED		7512414	0					
ANR	7512577	Identifier	VALGRIND_MAKE_MEM_DEFINED		7512414	0					
ANR	7512578	ArgumentList	MEMBLK_TOBLK ( memblk )		7512414	1					
ANR	7512579	Argument	MEMBLK_TOBLK ( memblk )		7512414	0					
ANR	7512580	CallExpression	MEMBLK_TOBLK ( memblk )		7512414	0					
ANR	7512581	Callee	MEMBLK_TOBLK		7512414	0					
ANR	7512582	Identifier	MEMBLK_TOBLK		7512414	0					
ANR	7512583	ArgumentList	memblk		7512414	1					
ANR	7512584	Argument	memblk		7512414	0					
ANR	7512585	Identifier	memblk		7512414	0					
ANR	7512586	Argument	memblk -> rawsize + Memento_PostSize		7512414	1					
ANR	7512587	AdditiveExpression	memblk -> rawsize + Memento_PostSize		7512414	0		+			
ANR	7512588	PtrMemberAccess	memblk -> rawsize		7512414	0					
ANR	7512589	Identifier	memblk		7512414	0					
ANR	7512590	Identifier	rawsize		7512414	1					
ANR	7512591	Identifier	Memento_PostSize		7512414	1					
ANR	7512592	ExpressionStatement	"memset ( MEMBLK_TOBLK ( memblk ) , MEMENTO_FREEFILL , memblk -> rawsize )"	2154:8:61607:61670	7512414	2	True				
ANR	7512593	CallExpression	"memset ( MEMBLK_TOBLK ( memblk ) , MEMENTO_FREEFILL , memblk -> rawsize )"		7512414	0					
ANR	7512594	Callee	memset		7512414	0					
ANR	7512595	Identifier	memset		7512414	0					
ANR	7512596	ArgumentList	MEMBLK_TOBLK ( memblk )		7512414	1					
ANR	7512597	Argument	MEMBLK_TOBLK ( memblk )		7512414	0					
ANR	7512598	CallExpression	MEMBLK_TOBLK ( memblk )		7512414	0					
ANR	7512599	Callee	MEMBLK_TOBLK		7512414	0					
ANR	7512600	Identifier	MEMBLK_TOBLK		7512414	0					
ANR	7512601	ArgumentList	memblk		7512414	1					
ANR	7512602	Argument	memblk		7512414	0					
ANR	7512603	Identifier	memblk		7512414	0					
ANR	7512604	Argument	MEMENTO_FREEFILL		7512414	1					
ANR	7512605	Identifier	MEMENTO_FREEFILL		7512414	0					
ANR	7512606	Argument	memblk -> rawsize		7512414	2					
ANR	7512607	PtrMemberAccess	memblk -> rawsize		7512414	0					
ANR	7512608	Identifier	memblk		7512414	0					
ANR	7512609	Identifier	rawsize		7512414	1					
ANR	7512610	ExpressionStatement	memblk -> flags |= Memento_Flag_Freed	2156:8:61687:61722	7512414	3	True				
ANR	7512611	AssignmentExpression	memblk -> flags |= Memento_Flag_Freed		7512414	0		|=			
ANR	7512612	PtrMemberAccess	memblk -> flags		7512414	0					
ANR	7512613	Identifier	memblk		7512414	0					
ANR	7512614	Identifier	flags		7512414	1					
ANR	7512615	Identifier	Memento_Flag_Freed		7512414	1					
ANR	7512616	ExpressionStatement	"Memento_addBlockTail ( & memento . free , memblk , 1 )"	2157:8:61732:61778	7512414	4	True				
ANR	7512617	CallExpression	"Memento_addBlockTail ( & memento . free , memblk , 1 )"		7512414	0					
ANR	7512618	Callee	Memento_addBlockTail		7512414	0					
ANR	7512619	Identifier	Memento_addBlockTail		7512414	0					
ANR	7512620	ArgumentList	& memento . free		7512414	1					
ANR	7512621	Argument	& memento . free		7512414	0					
ANR	7512622	UnaryOperationExpression	& memento . free		7512414	0					
ANR	7512623	UnaryOperator	&		7512414	0					
ANR	7512624	MemberAccess	memento . free		7512414	1					
ANR	7512625	Identifier	memento		7512414	0					
ANR	7512626	Identifier	free		7512414	1					
ANR	7512627	Argument	memblk		7512414	1					
ANR	7512628	Identifier	memblk		7512414	0					
ANR	7512629	Argument	1		7512414	2					
ANR	7512630	PrimaryExpression	1		7512414	0					
ANR	7512631	ElseStatement	else		7512414	0					
ANR	7512632	CompoundStatement		37:11:1140:1140	7512414	0					
ANR	7512633	ExpressionStatement	free_block ( memblk )	2159:8:61801:61819	7512414	0	True				
ANR	7512634	CallExpression	free_block ( memblk )		7512414	0					
ANR	7512635	Callee	free_block		7512414	0					
ANR	7512636	Identifier	free_block		7512414	0					
ANR	7512637	ArgumentList	memblk		7512414	1					
ANR	7512638	Argument	memblk		7512414	0					
ANR	7512639	Identifier	memblk		7512414	0					
ANR	7512640	ReturnType	static void		7512414	1					
ANR	7512641	Identifier	do_free		7512414	2					
ANR	7512642	ParameterList	"void * blk , int eventType"		7512414	3					
ANR	7512643	Parameter	void * blk	2121:20:60624:60632	7512414	0	True				
ANR	7512644	ParameterType	void *		7512414	0					
ANR	7512645	Identifier	blk		7512414	1					
ANR	7512646	Parameter	int eventType	2121:31:60635:60647	7512414	1	True				
ANR	7512647	ParameterType	int		7512414	0					
ANR	7512648	Identifier	eventType		7512414	1					
ANR	7512649	CFGEntryNode	ENTRY		7512414		True				
ANR	7512650	CFGExitNode	EXIT		7512414		True				
ANR	7512651	Symbol	blk		7512414						
ANR	7512652	Symbol	& memento . free		7512414						
ANR	7512653	Symbol	& memento		7512414						
ANR	7512654	Symbol	NULL		7512414						
ANR	7512655	Symbol	Memento_Internal_makeSpace		7512414						
ANR	7512656	Symbol	Memento_EventType_free		7512414						
ANR	7512657	Symbol	memento		7512414						
ANR	7512658	Symbol	eventType		7512414						
ANR	7512659	Symbol	Memento_event		7512414						
ANR	7512660	Symbol	Memento_Flag_BreakOnFree		7512414						
ANR	7512661	Symbol	memblk		7512414						
ANR	7512662	Symbol	memblk -> rawsize		7512414						
ANR	7512663	Symbol	MEMBLK_TOBLK		7512414						
ANR	7512664	Symbol	memento . alloc		7512414						
ANR	7512665	Symbol	MEMENTO_FREEFILL		7512414						
ANR	7512666	Symbol	& memento . used		7512414						
ANR	7512667	Symbol	MEMBLK_FROMBLK		7512414						
ANR	7512668	Symbol	* memblk		7512414						
ANR	7512669	Symbol	memblk -> flags		7512414						
ANR	7512670	Symbol	MEMBLK_SIZE		7512414						
ANR	7512671	Symbol	Memento_PostSize		7512414						
ANR	7512672	Symbol	checkBlock		7512414						
ANR	7512673	Symbol	memento . numFrees		7512414						
ANR	7512674	Symbol	Memento_Flag_Freed		7512414						
ANR	7512675	Function	Memento_free	2163:0:61830:61995							
ANR	7512676	FunctionDef	Memento_free (void * blk)		7512675	0					
ANR	7512677	CompoundStatement		2164:0:61859:61995	7512675	0					
ANR	7512678	IfStatement	if ( ! memento . inited )		7512675	0					
ANR	7512679	Condition	! memento . inited	2165:8:61869:61883	7512675	0	True				
ANR	7512680	UnaryOperationExpression	! memento . inited		7512675	0					
ANR	7512681	UnaryOperator	!		7512675	0					
ANR	7512682	MemberAccess	memento . inited		7512675	1					
ANR	7512683	Identifier	memento		7512675	0					
ANR	7512684	Identifier	inited		7512675	1					
ANR	7512685	ExpressionStatement	Memento_init ( )	2166:8:61894:61908	7512675	1	True				
ANR	7512686	CallExpression	Memento_init ( )		7512675	0					
ANR	7512687	Callee	Memento_init		7512675	0					
ANR	7512688	Identifier	Memento_init		7512675	0					
ANR	7512689	ArgumentList			7512675	1					
ANR	7512690	ExpressionStatement	MEMENTO_LOCK ( )	2168:4:61915:61929	7512675	1	True				
ANR	7512691	CallExpression	MEMENTO_LOCK ( )		7512675	0					
ANR	7512692	Callee	MEMENTO_LOCK		7512675	0					
ANR	7512693	Identifier	MEMENTO_LOCK		7512675	0					
ANR	7512694	ArgumentList			7512675	1					
ANR	7512695	ExpressionStatement	"do_free ( blk , Memento_EventType_free )"	2169:4:61935:61971	7512675	2	True				
ANR	7512696	CallExpression	"do_free ( blk , Memento_EventType_free )"		7512675	0					
ANR	7512697	Callee	do_free		7512675	0					
ANR	7512698	Identifier	do_free		7512675	0					
ANR	7512699	ArgumentList	blk		7512675	1					
ANR	7512700	Argument	blk		7512675	0					
ANR	7512701	Identifier	blk		7512675	0					
ANR	7512702	Argument	Memento_EventType_free		7512675	1					
ANR	7512703	Identifier	Memento_EventType_free		7512675	0					
ANR	7512704	ExpressionStatement	MEMENTO_UNLOCK ( )	2170:4:61977:61993	7512675	3	True				
ANR	7512705	CallExpression	MEMENTO_UNLOCK ( )		7512675	0					
ANR	7512706	Callee	MEMENTO_UNLOCK		7512675	0					
ANR	7512707	Identifier	MEMENTO_UNLOCK		7512675	0					
ANR	7512708	ArgumentList			7512675	1					
ANR	7512709	ReturnType	void		7512675	1					
ANR	7512710	Identifier	Memento_free		7512675	2					
ANR	7512711	ParameterList	void * blk		7512675	3					
ANR	7512712	Parameter	void * blk	2163:18:61848:61856	7512675	0	True				
ANR	7512713	ParameterType	void *		7512675	0					
ANR	7512714	Identifier	blk		7512675	1					
ANR	7512715	CFGEntryNode	ENTRY		7512675		True				
ANR	7512716	CFGExitNode	EXIT		7512675		True				
ANR	7512717	Symbol	blk		7512675						
ANR	7512718	Symbol	Memento_EventType_free		7512675						
ANR	7512719	Symbol	memento		7512675						
ANR	7512720	Symbol	memento . inited		7512675						
ANR	7512721	Function	do_realloc	2173:0:61998:64359							
ANR	7512722	FunctionDef	"do_realloc (void * blk , size_t newsize , int type)"		7512721	0					
ANR	7512723	CompoundStatement		2174:0:62059:64359	7512721	0					
ANR	7512724	IdentifierDeclStatement	"Memento_BlkHeader * memblk , * newmemblk ;"	2175:4:62065:62102	7512721	0	True				
ANR	7512725	IdentifierDecl	* memblk		7512721	0					
ANR	7512726	IdentifierDeclType	Memento_BlkHeader *		7512721	0					
ANR	7512727	Identifier	memblk		7512721	1					
ANR	7512728	IdentifierDecl	* newmemblk		7512721	1					
ANR	7512729	IdentifierDeclType	Memento_BlkHeader *		7512721	0					
ANR	7512730	Identifier	newmemblk		7512721	1					
ANR	7512731	IdentifierDeclStatement	size_t newsizemem ;	2176:4:62108:62137	7512721	1	True				
ANR	7512732	IdentifierDecl	newsizemem		7512721	0					
ANR	7512733	IdentifierDeclType	size_t		7512721	0					
ANR	7512734	Identifier	newsizemem		7512721	1					
ANR	7512735	IdentifierDeclStatement	int flags ;	2177:4:62143:62167	7512721	2	True				
ANR	7512736	IdentifierDecl	flags		7512721	0					
ANR	7512737	IdentifierDeclType	int		7512721	0					
ANR	7512738	Identifier	flags		7512721	1					
ANR	7512739	IfStatement	if ( Memento_failThisEventLocked ( ) )		7512721	3					
ANR	7512740	Condition	Memento_failThisEventLocked ( )	2179:8:62178:62206	7512721	0	True				
ANR	7512741	CallExpression	Memento_failThisEventLocked ( )		7512721	0					
ANR	7512742	Callee	Memento_failThisEventLocked		7512721	0					
ANR	7512743	Identifier	Memento_failThisEventLocked		7512721	0					
ANR	7512744	ArgumentList			7512721	1					
ANR	7512745	ReturnStatement	return NULL ;	2180:8:62217:62228	7512721	1	True				
ANR	7512746	Identifier	NULL		7512721	0					
ANR	7512747	ExpressionStatement	memblk = MEMBLK_FROMBLK ( blk )	2182:4:62235:62267	7512721	4	True				
ANR	7512748	AssignmentExpression	memblk = MEMBLK_FROMBLK ( blk )		7512721	0		=			
ANR	7512749	Identifier	memblk		7512721	0					
ANR	7512750	CallExpression	MEMBLK_FROMBLK ( blk )		7512721	1					
ANR	7512751	Callee	MEMBLK_FROMBLK		7512721	0					
ANR	7512752	Identifier	MEMBLK_FROMBLK		7512721	0					
ANR	7512753	ArgumentList	blk		7512721	1					
ANR	7512754	Argument	blk		7512721	0					
ANR	7512755	Identifier	blk		7512721	0					
ANR	7512756	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"	2183:4:62273:62323	7512721	5	True				
ANR	7512757	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"		7512721	0					
ANR	7512758	Callee	VALGRIND_MAKE_MEM_DEFINED		7512721	0					
ANR	7512759	Identifier	VALGRIND_MAKE_MEM_DEFINED		7512721	0					
ANR	7512760	ArgumentList	memblk		7512721	1					
ANR	7512761	Argument	memblk		7512721	0					
ANR	7512762	Identifier	memblk		7512721	0					
ANR	7512763	Argument	sizeof ( * memblk )		7512721	1					
ANR	7512764	SizeofExpression	sizeof ( * memblk )		7512721	0					
ANR	7512765	Sizeof	sizeof		7512721	0					
ANR	7512766	UnaryOperationExpression	* memblk		7512721	1					
ANR	7512767	UnaryOperator	*		7512721	0					
ANR	7512768	Identifier	memblk		7512721	1					
ANR	7512769	IfStatement	"if ( checkBlock ( memblk , ""realloc"" ) )"		7512721	6					
ANR	7512770	Condition	"checkBlock ( memblk , ""realloc"" )"	2184:8:62333:62361	7512721	0	True				
ANR	7512771	CallExpression	"checkBlock ( memblk , ""realloc"" )"		7512721	0					
ANR	7512772	Callee	checkBlock		7512721	0					
ANR	7512773	Identifier	checkBlock		7512721	0					
ANR	7512774	ArgumentList	memblk		7512721	1					
ANR	7512775	Argument	memblk		7512721	0					
ANR	7512776	Identifier	memblk		7512721	0					
ANR	7512777	Argument	"""realloc"""		7512721	1					
ANR	7512778	PrimaryExpression	"""realloc"""		7512721	0					
ANR	7512779	ReturnStatement	return NULL ;	2185:8:62372:62383	7512721	1	True				
ANR	7512780	Identifier	NULL		7512721	0					
ANR	7512781	ExpressionStatement	"Memento_storeDetails ( memblk , type )"	2188:4:62413:62447	7512721	7	True				
ANR	7512782	CallExpression	"Memento_storeDetails ( memblk , type )"		7512721	0					
ANR	7512783	Callee	Memento_storeDetails		7512721	0					
ANR	7512784	Identifier	Memento_storeDetails		7512721	0					
ANR	7512785	ArgumentList	memblk		7512721	1					
ANR	7512786	Argument	memblk		7512721	0					
ANR	7512787	Identifier	memblk		7512721	0					
ANR	7512788	Argument	type		7512721	1					
ANR	7512789	Identifier	type		7512721	0					
ANR	7512790	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"	2191:4:62461:62511	7512721	8	True				
ANR	7512791	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"		7512721	0					
ANR	7512792	Callee	VALGRIND_MAKE_MEM_DEFINED		7512721	0					
ANR	7512793	Identifier	VALGRIND_MAKE_MEM_DEFINED		7512721	0					
ANR	7512794	ArgumentList	memblk		7512721	1					
ANR	7512795	Argument	memblk		7512721	0					
ANR	7512796	Identifier	memblk		7512721	0					
ANR	7512797	Argument	sizeof ( * memblk )		7512721	1					
ANR	7512798	SizeofExpression	sizeof ( * memblk )		7512721	0					
ANR	7512799	Sizeof	sizeof		7512721	0					
ANR	7512800	UnaryOperationExpression	* memblk		7512721	1					
ANR	7512801	UnaryOperator	*		7512721	0					
ANR	7512802	Identifier	memblk		7512721	1					
ANR	7512803	IfStatement	if ( memblk -> flags & Memento_Flag_BreakOnRealloc )		7512721	9					
ANR	7512804	Condition	memblk -> flags & Memento_Flag_BreakOnRealloc	2192:8:62521:62563	7512721	0	True				
ANR	7512805	BitAndExpression	memblk -> flags & Memento_Flag_BreakOnRealloc		7512721	0		&			
ANR	7512806	PtrMemberAccess	memblk -> flags		7512721	0					
ANR	7512807	Identifier	memblk		7512721	0					
ANR	7512808	Identifier	flags		7512721	1					
ANR	7512809	Identifier	Memento_Flag_BreakOnRealloc		7512721	1					
ANR	7512810	ExpressionStatement	Memento_breakpointLocked ( )	2193:8:62574:62600	7512721	1	True				
ANR	7512811	CallExpression	Memento_breakpointLocked ( )		7512721	0					
ANR	7512812	Callee	Memento_breakpointLocked		7512721	0					
ANR	7512813	Identifier	Memento_breakpointLocked		7512721	0					
ANR	7512814	ArgumentList			7512721	1					
ANR	7512815	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"	2195:4:62607:62657	7512721	10	True				
ANR	7512816	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"		7512721	0					
ANR	7512817	Callee	VALGRIND_MAKE_MEM_DEFINED		7512721	0					
ANR	7512818	Identifier	VALGRIND_MAKE_MEM_DEFINED		7512721	0					
ANR	7512819	ArgumentList	memblk		7512721	1					
ANR	7512820	Argument	memblk		7512721	0					
ANR	7512821	Identifier	memblk		7512721	0					
ANR	7512822	Argument	sizeof ( * memblk )		7512721	1					
ANR	7512823	SizeofExpression	sizeof ( * memblk )		7512721	0					
ANR	7512824	Sizeof	sizeof		7512721	0					
ANR	7512825	UnaryOperationExpression	* memblk		7512721	1					
ANR	7512826	UnaryOperator	*		7512721	0					
ANR	7512827	Identifier	memblk		7512721	1					
ANR	7512828	IfStatement	if ( memento . maxMemory != 0 && memento . alloc - memblk -> rawsize + newsize > memento . maxMemory )		7512721	11					
ANR	7512829	Condition	memento . maxMemory != 0 && memento . alloc - memblk -> rawsize + newsize > memento . maxMemory	2196:8:62667:62753	7512721	0	True				
ANR	7512830	AndExpression	memento . maxMemory != 0 && memento . alloc - memblk -> rawsize + newsize > memento . maxMemory		7512721	0		&&			
ANR	7512831	EqualityExpression	memento . maxMemory != 0		7512721	0		!=			
ANR	7512832	MemberAccess	memento . maxMemory		7512721	0					
ANR	7512833	Identifier	memento		7512721	0					
ANR	7512834	Identifier	maxMemory		7512721	1					
ANR	7512835	PrimaryExpression	0		7512721	1					
ANR	7512836	RelationalExpression	memento . alloc - memblk -> rawsize + newsize > memento . maxMemory		7512721	1		>			
ANR	7512837	AdditiveExpression	memento . alloc - memblk -> rawsize + newsize		7512721	0		-			
ANR	7512838	MemberAccess	memento . alloc		7512721	0					
ANR	7512839	Identifier	memento		7512721	0					
ANR	7512840	Identifier	alloc		7512721	1					
ANR	7512841	AdditiveExpression	memblk -> rawsize + newsize		7512721	1		+			
ANR	7512842	PtrMemberAccess	memblk -> rawsize		7512721	0					
ANR	7512843	Identifier	memblk		7512721	0					
ANR	7512844	Identifier	rawsize		7512721	1					
ANR	7512845	Identifier	newsize		7512721	1					
ANR	7512846	MemberAccess	memento . maxMemory		7512721	1					
ANR	7512847	Identifier	memento		7512721	0					
ANR	7512848	Identifier	maxMemory		7512721	1					
ANR	7512849	ReturnStatement	return NULL ;	2197:8:62764:62775	7512721	1	True				
ANR	7512850	Identifier	NULL		7512721	0					
ANR	7512851	ExpressionStatement	newsizemem = MEMBLK_SIZE ( newsize )	2199:4:62782:62815	7512721	12	True				
ANR	7512852	AssignmentExpression	newsizemem = MEMBLK_SIZE ( newsize )		7512721	0		=			
ANR	7512853	Identifier	newsizemem		7512721	0					
ANR	7512854	CallExpression	MEMBLK_SIZE ( newsize )		7512721	1					
ANR	7512855	Callee	MEMBLK_SIZE		7512721	0					
ANR	7512856	Identifier	MEMBLK_SIZE		7512721	0					
ANR	7512857	ArgumentList	newsize		7512721	1					
ANR	7512858	Argument	newsize		7512721	0					
ANR	7512859	Identifier	newsize		7512721	0					
ANR	7512860	ExpressionStatement	"Memento_removeBlock ( & memento . used , memblk )"	2200:4:62821:62863	7512721	13	True				
ANR	7512861	CallExpression	"Memento_removeBlock ( & memento . used , memblk )"		7512721	0					
ANR	7512862	Callee	Memento_removeBlock		7512721	0					
ANR	7512863	Identifier	Memento_removeBlock		7512721	0					
ANR	7512864	ArgumentList	& memento . used		7512721	1					
ANR	7512865	Argument	& memento . used		7512721	0					
ANR	7512866	UnaryOperationExpression	& memento . used		7512721	0					
ANR	7512867	UnaryOperator	&		7512721	0					
ANR	7512868	MemberAccess	memento . used		7512721	1					
ANR	7512869	Identifier	memento		7512721	0					
ANR	7512870	Identifier	used		7512721	1					
ANR	7512871	Argument	memblk		7512721	1					
ANR	7512872	Identifier	memblk		7512721	0					
ANR	7512873	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"	2201:4:62869:62919	7512721	14	True				
ANR	7512874	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"		7512721	0					
ANR	7512875	Callee	VALGRIND_MAKE_MEM_DEFINED		7512721	0					
ANR	7512876	Identifier	VALGRIND_MAKE_MEM_DEFINED		7512721	0					
ANR	7512877	ArgumentList	memblk		7512721	1					
ANR	7512878	Argument	memblk		7512721	0					
ANR	7512879	Identifier	memblk		7512721	0					
ANR	7512880	Argument	sizeof ( * memblk )		7512721	1					
ANR	7512881	SizeofExpression	sizeof ( * memblk )		7512721	0					
ANR	7512882	Sizeof	sizeof		7512721	0					
ANR	7512883	UnaryOperationExpression	* memblk		7512721	1					
ANR	7512884	UnaryOperator	*		7512721	0					
ANR	7512885	Identifier	memblk		7512721	1					
ANR	7512886	ExpressionStatement	flags = memblk -> flags	2202:4:62925:62946	7512721	15	True				
ANR	7512887	AssignmentExpression	flags = memblk -> flags		7512721	0		=			
ANR	7512888	Identifier	flags		7512721	0					
ANR	7512889	PtrMemberAccess	memblk -> flags		7512721	1					
ANR	7512890	Identifier	memblk		7512721	0					
ANR	7512891	Identifier	flags		7512721	1					
ANR	7512892	ExpressionStatement	"newmemblk = MEMENTO_UNDERLYING_REALLOC ( memblk , newsizemem )"	2203:4:62952:63011	7512721	16	True				
ANR	7512893	AssignmentExpression	"newmemblk = MEMENTO_UNDERLYING_REALLOC ( memblk , newsizemem )"		7512721	0		=			
ANR	7512894	Identifier	newmemblk		7512721	0					
ANR	7512895	CallExpression	"MEMENTO_UNDERLYING_REALLOC ( memblk , newsizemem )"		7512721	1					
ANR	7512896	Callee	MEMENTO_UNDERLYING_REALLOC		7512721	0					
ANR	7512897	Identifier	MEMENTO_UNDERLYING_REALLOC		7512721	0					
ANR	7512898	ArgumentList	memblk		7512721	1					
ANR	7512899	Argument	memblk		7512721	0					
ANR	7512900	Identifier	memblk		7512721	0					
ANR	7512901	Argument	newsizemem		7512721	1					
ANR	7512902	Identifier	newsizemem		7512721	0					
ANR	7512903	IfStatement	if ( newmemblk == NULL )		7512721	17					
ANR	7512904	Condition	newmemblk == NULL	2204:8:63021:63037	7512721	0	True				
ANR	7512905	EqualityExpression	newmemblk == NULL		7512721	0		==			
ANR	7512906	Identifier	newmemblk		7512721	0					
ANR	7512907	Identifier	NULL		7512721	1					
ANR	7512908	CompoundStatement		32:4:984:984	7512721	1					
ANR	7512909	ExpressionStatement	"Memento_addBlockHead ( & memento . used , memblk , 2 )"	2206:8:63054:63100	7512721	0	True				
ANR	7512910	CallExpression	"Memento_addBlockHead ( & memento . used , memblk , 2 )"		7512721	0					
ANR	7512911	Callee	Memento_addBlockHead		7512721	0					
ANR	7512912	Identifier	Memento_addBlockHead		7512721	0					
ANR	7512913	ArgumentList	& memento . used		7512721	1					
ANR	7512914	Argument	& memento . used		7512721	0					
ANR	7512915	UnaryOperationExpression	& memento . used		7512721	0					
ANR	7512916	UnaryOperator	&		7512721	0					
ANR	7512917	MemberAccess	memento . used		7512721	1					
ANR	7512918	Identifier	memento		7512721	0					
ANR	7512919	Identifier	used		7512721	1					
ANR	7512920	Argument	memblk		7512721	1					
ANR	7512921	Identifier	memblk		7512721	0					
ANR	7512922	Argument	2		7512721	2					
ANR	7512923	PrimaryExpression	2		7512721	0					
ANR	7512924	ReturnStatement	return NULL ;	2207:8:63110:63121	7512721	1	True				
ANR	7512925	Identifier	NULL		7512721	0					
ANR	7512926	ExpressionStatement	memento . numReallocs ++	2209:4:63133:63154	7512721	18	True				
ANR	7512927	PostIncDecOperationExpression	memento . numReallocs ++		7512721	0					
ANR	7512928	MemberAccess	memento . numReallocs		7512721	0					
ANR	7512929	Identifier	memento		7512721	0					
ANR	7512930	Identifier	numReallocs		7512721	1					
ANR	7512931	IncDec	++		7512721	1					
ANR	7512932	ExpressionStatement	memento . totalAlloc += newsize	2210:4:63160:63189	7512721	19	True				
ANR	7512933	AssignmentExpression	memento . totalAlloc += newsize		7512721	0		+=			
ANR	7512934	MemberAccess	memento . totalAlloc		7512721	0					
ANR	7512935	Identifier	memento		7512721	0					
ANR	7512936	Identifier	totalAlloc		7512721	1					
ANR	7512937	Identifier	newsize		7512721	1					
ANR	7512938	ExpressionStatement	memento . alloc -= newmemblk -> rawsize	2211:4:63195:63235	7512721	20	True				
ANR	7512939	AssignmentExpression	memento . alloc -= newmemblk -> rawsize		7512721	0		-=			
ANR	7512940	MemberAccess	memento . alloc		7512721	0					
ANR	7512941	Identifier	memento		7512721	0					
ANR	7512942	Identifier	alloc		7512721	1					
ANR	7512943	PtrMemberAccess	newmemblk -> rawsize		7512721	1					
ANR	7512944	Identifier	newmemblk		7512721	0					
ANR	7512945	Identifier	rawsize		7512721	1					
ANR	7512946	ExpressionStatement	memento . alloc += newsize	2212:4:63241:63270	7512721	21	True				
ANR	7512947	AssignmentExpression	memento . alloc += newsize		7512721	0		+=			
ANR	7512948	MemberAccess	memento . alloc		7512721	0					
ANR	7512949	Identifier	memento		7512721	0					
ANR	7512950	Identifier	alloc		7512721	1					
ANR	7512951	Identifier	newsize		7512721	1					
ANR	7512952	IfStatement	if ( memento . peakAlloc < memento . alloc )		7512721	22					
ANR	7512953	Condition	memento . peakAlloc < memento . alloc	2213:8:63280:63312	7512721	0	True				
ANR	7512954	RelationalExpression	memento . peakAlloc < memento . alloc		7512721	0		<			
ANR	7512955	MemberAccess	memento . peakAlloc		7512721	0					
ANR	7512956	Identifier	memento		7512721	0					
ANR	7512957	Identifier	peakAlloc		7512721	1					
ANR	7512958	MemberAccess	memento . alloc		7512721	1					
ANR	7512959	Identifier	memento		7512721	0					
ANR	7512960	Identifier	alloc		7512721	1					
ANR	7512961	ExpressionStatement	memento . peakAlloc = memento . alloc	2214:8:63323:63356	7512721	1	True				
ANR	7512962	AssignmentExpression	memento . peakAlloc = memento . alloc		7512721	0		=			
ANR	7512963	MemberAccess	memento . peakAlloc		7512721	0					
ANR	7512964	Identifier	memento		7512721	0					
ANR	7512965	Identifier	peakAlloc		7512721	1					
ANR	7512966	MemberAccess	memento . alloc		7512721	1					
ANR	7512967	Identifier	memento		7512721	0					
ANR	7512968	Identifier	alloc		7512721	1					
ANR	7512969	ExpressionStatement	newmemblk -> flags = flags	2215:4:63362:63386	7512721	23	True				
ANR	7512970	AssignmentExpression	newmemblk -> flags = flags		7512721	0		=			
ANR	7512971	PtrMemberAccess	newmemblk -> flags		7512721	0					
ANR	7512972	Identifier	newmemblk		7512721	0					
ANR	7512973	Identifier	flags		7512721	1					
ANR	7512974	Identifier	flags		7512721	1					
ANR	7512975	IfStatement	if ( newmemblk -> rawsize < newsize )		7512721	24					
ANR	7512976	Condition	newmemblk -> rawsize < newsize	2217:8:63421:63448	7512721	0	True				
ANR	7512977	RelationalExpression	newmemblk -> rawsize < newsize		7512721	0		<			
ANR	7512978	PtrMemberAccess	newmemblk -> rawsize		7512721	0					
ANR	7512979	Identifier	newmemblk		7512721	0					
ANR	7512980	Identifier	rawsize		7512721	1					
ANR	7512981	Identifier	newsize		7512721	1					
ANR	7512982	CompoundStatement		45:8:1401:1470	7512721	1					
ANR	7512983	IdentifierDeclStatement	char * newbytes = ( ( char * ) MEMBLK_TOBLK ( newmemblk ) ) + newmemblk -> rawsize ;	2218:8:63461:63530	7512721	0	True				
ANR	7512984	IdentifierDecl	* newbytes = ( ( char * ) MEMBLK_TOBLK ( newmemblk ) ) + newmemblk -> rawsize		7512721	0					
ANR	7512985	IdentifierDeclType	char *		7512721	0					
ANR	7512986	Identifier	newbytes		7512721	1					
ANR	7512987	AssignmentExpression	* newbytes = ( ( char * ) MEMBLK_TOBLK ( newmemblk ) ) + newmemblk -> rawsize		7512721	2		=			
ANR	7512988	Identifier	newbytes		7512721	0					
ANR	7512989	AdditiveExpression	( ( char * ) MEMBLK_TOBLK ( newmemblk ) ) + newmemblk -> rawsize		7512721	1		+			
ANR	7512990	CastExpression	( char * ) MEMBLK_TOBLK ( newmemblk )		7512721	0					
ANR	7512991	CastTarget	char *		7512721	0					
ANR	7512992	CallExpression	MEMBLK_TOBLK ( newmemblk )		7512721	1					
ANR	7512993	Callee	MEMBLK_TOBLK		7512721	0					
ANR	7512994	Identifier	MEMBLK_TOBLK		7512721	0					
ANR	7512995	ArgumentList	newmemblk		7512721	1					
ANR	7512996	Argument	newmemblk		7512721	0					
ANR	7512997	Identifier	newmemblk		7512721	0					
ANR	7512998	PtrMemberAccess	newmemblk -> rawsize		7512721	1					
ANR	7512999	Identifier	newmemblk		7512721	0					
ANR	7513000	Identifier	rawsize		7512721	1					
ANR	7513001	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( newbytes , newsize - newmemblk -> rawsize )"	2219:8:63540:63605	7512721	1	True				
ANR	7513002	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( newbytes , newsize - newmemblk -> rawsize )"		7512721	0					
ANR	7513003	Callee	VALGRIND_MAKE_MEM_DEFINED		7512721	0					
ANR	7513004	Identifier	VALGRIND_MAKE_MEM_DEFINED		7512721	0					
ANR	7513005	ArgumentList	newbytes		7512721	1					
ANR	7513006	Argument	newbytes		7512721	0					
ANR	7513007	Identifier	newbytes		7512721	0					
ANR	7513008	Argument	newsize - newmemblk -> rawsize		7512721	1					
ANR	7513009	AdditiveExpression	newsize - newmemblk -> rawsize		7512721	0		-			
ANR	7513010	Identifier	newsize		7512721	0					
ANR	7513011	PtrMemberAccess	newmemblk -> rawsize		7512721	1					
ANR	7513012	Identifier	newmemblk		7512721	0					
ANR	7513013	Identifier	rawsize		7512721	1					
ANR	7513014	ExpressionStatement	"memset ( newbytes , MEMENTO_ALLOCFILL , newsize - newmemblk -> rawsize )"	2220:8:63615:63680	7512721	2	True				
ANR	7513015	CallExpression	"memset ( newbytes , MEMENTO_ALLOCFILL , newsize - newmemblk -> rawsize )"		7512721	0					
ANR	7513016	Callee	memset		7512721	0					
ANR	7513017	Identifier	memset		7512721	0					
ANR	7513018	ArgumentList	newbytes		7512721	1					
ANR	7513019	Argument	newbytes		7512721	0					
ANR	7513020	Identifier	newbytes		7512721	0					
ANR	7513021	Argument	MEMENTO_ALLOCFILL		7512721	1					
ANR	7513022	Identifier	MEMENTO_ALLOCFILL		7512721	0					
ANR	7513023	Argument	newsize - newmemblk -> rawsize		7512721	2					
ANR	7513024	AdditiveExpression	newsize - newmemblk -> rawsize		7512721	0		-			
ANR	7513025	Identifier	newsize		7512721	0					
ANR	7513026	PtrMemberAccess	newmemblk -> rawsize		7512721	1					
ANR	7513027	Identifier	newmemblk		7512721	0					
ANR	7513028	Identifier	rawsize		7512721	1					
ANR	7513029	ExpressionStatement	"VALGRIND_MAKE_MEM_UNDEFINED ( newbytes , newsize - newmemblk -> rawsize )"	2221:8:63690:63757	7512721	3	True				
ANR	7513030	CallExpression	"VALGRIND_MAKE_MEM_UNDEFINED ( newbytes , newsize - newmemblk -> rawsize )"		7512721	0					
ANR	7513031	Callee	VALGRIND_MAKE_MEM_UNDEFINED		7512721	0					
ANR	7513032	Identifier	VALGRIND_MAKE_MEM_UNDEFINED		7512721	0					
ANR	7513033	ArgumentList	newbytes		7512721	1					
ANR	7513034	Argument	newbytes		7512721	0					
ANR	7513035	Identifier	newbytes		7512721	0					
ANR	7513036	Argument	newsize - newmemblk -> rawsize		7512721	1					
ANR	7513037	AdditiveExpression	newsize - newmemblk -> rawsize		7512721	0		-			
ANR	7513038	Identifier	newsize		7512721	0					
ANR	7513039	PtrMemberAccess	newmemblk -> rawsize		7512721	1					
ANR	7513040	Identifier	newmemblk		7512721	0					
ANR	7513041	Identifier	rawsize		7512721	1					
ANR	7513042	ExpressionStatement	newmemblk -> rawsize = newsize	2224:4:63776:63804	7512721	25	True				
ANR	7513043	AssignmentExpression	newmemblk -> rawsize = newsize		7512721	0		=			
ANR	7513044	PtrMemberAccess	newmemblk -> rawsize		7512721	0					
ANR	7513045	Identifier	newmemblk		7512721	0					
ANR	7513046	Identifier	rawsize		7512721	1					
ANR	7513047	Identifier	newsize		7512721	1					
ANR	7513048	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( newmemblk -> preblk , Memento_PreSize )"	2226:4:63835:63896	7512721	26	True				
ANR	7513049	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( newmemblk -> preblk , Memento_PreSize )"		7512721	0					
ANR	7513050	Callee	VALGRIND_MAKE_MEM_DEFINED		7512721	0					
ANR	7513051	Identifier	VALGRIND_MAKE_MEM_DEFINED		7512721	0					
ANR	7513052	ArgumentList	newmemblk -> preblk		7512721	1					
ANR	7513053	Argument	newmemblk -> preblk		7512721	0					
ANR	7513054	PtrMemberAccess	newmemblk -> preblk		7512721	0					
ANR	7513055	Identifier	newmemblk		7512721	0					
ANR	7513056	Identifier	preblk		7512721	1					
ANR	7513057	Argument	Memento_PreSize		7512721	1					
ANR	7513058	Identifier	Memento_PreSize		7512721	0					
ANR	7513059	ExpressionStatement	"memset ( newmemblk -> preblk , MEMENTO_PREFILL , Memento_PreSize )"	2227:4:63902:63961	7512721	27	True				
ANR	7513060	CallExpression	"memset ( newmemblk -> preblk , MEMENTO_PREFILL , Memento_PreSize )"		7512721	0					
ANR	7513061	Callee	memset		7512721	0					
ANR	7513062	Identifier	memset		7512721	0					
ANR	7513063	ArgumentList	newmemblk -> preblk		7512721	1					
ANR	7513064	Argument	newmemblk -> preblk		7512721	0					
ANR	7513065	PtrMemberAccess	newmemblk -> preblk		7512721	0					
ANR	7513066	Identifier	newmemblk		7512721	0					
ANR	7513067	Identifier	preblk		7512721	1					
ANR	7513068	Argument	MEMENTO_PREFILL		7512721	1					
ANR	7513069	Identifier	MEMENTO_PREFILL		7512721	0					
ANR	7513070	Argument	Memento_PreSize		7512721	2					
ANR	7513071	Identifier	Memento_PreSize		7512721	0					
ANR	7513072	ExpressionStatement	"VALGRIND_MAKE_MEM_UNDEFINED ( newmemblk -> preblk , Memento_PreSize )"	2228:4:63967:64030	7512721	28	True				
ANR	7513073	CallExpression	"VALGRIND_MAKE_MEM_UNDEFINED ( newmemblk -> preblk , Memento_PreSize )"		7512721	0					
ANR	7513074	Callee	VALGRIND_MAKE_MEM_UNDEFINED		7512721	0					
ANR	7513075	Identifier	VALGRIND_MAKE_MEM_UNDEFINED		7512721	0					
ANR	7513076	ArgumentList	newmemblk -> preblk		7512721	1					
ANR	7513077	Argument	newmemblk -> preblk		7512721	0					
ANR	7513078	PtrMemberAccess	newmemblk -> preblk		7512721	0					
ANR	7513079	Identifier	newmemblk		7512721	0					
ANR	7513080	Identifier	preblk		7512721	1					
ANR	7513081	Argument	Memento_PreSize		7512721	1					
ANR	7513082	Identifier	Memento_PreSize		7512721	0					
ANR	7513083	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_POSTPTR ( newmemblk ) , Memento_PostSize )"	2229:4:64036:64106	7512721	29	True				
ANR	7513084	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_POSTPTR ( newmemblk ) , Memento_PostSize )"		7512721	0					
ANR	7513085	Callee	VALGRIND_MAKE_MEM_DEFINED		7512721	0					
ANR	7513086	Identifier	VALGRIND_MAKE_MEM_DEFINED		7512721	0					
ANR	7513087	ArgumentList	MEMBLK_POSTPTR ( newmemblk )		7512721	1					
ANR	7513088	Argument	MEMBLK_POSTPTR ( newmemblk )		7512721	0					
ANR	7513089	CallExpression	MEMBLK_POSTPTR ( newmemblk )		7512721	0					
ANR	7513090	Callee	MEMBLK_POSTPTR		7512721	0					
ANR	7513091	Identifier	MEMBLK_POSTPTR		7512721	0					
ANR	7513092	ArgumentList	newmemblk		7512721	1					
ANR	7513093	Argument	newmemblk		7512721	0					
ANR	7513094	Identifier	newmemblk		7512721	0					
ANR	7513095	Argument	Memento_PostSize		7512721	1					
ANR	7513096	Identifier	Memento_PostSize		7512721	0					
ANR	7513097	ExpressionStatement	"memset ( MEMBLK_POSTPTR ( newmemblk ) , MEMENTO_POSTFILL , Memento_PostSize )"	2230:4:64112:64181	7512721	30	True				
ANR	7513098	CallExpression	"memset ( MEMBLK_POSTPTR ( newmemblk ) , MEMENTO_POSTFILL , Memento_PostSize )"		7512721	0					
ANR	7513099	Callee	memset		7512721	0					
ANR	7513100	Identifier	memset		7512721	0					
ANR	7513101	ArgumentList	MEMBLK_POSTPTR ( newmemblk )		7512721	1					
ANR	7513102	Argument	MEMBLK_POSTPTR ( newmemblk )		7512721	0					
ANR	7513103	CallExpression	MEMBLK_POSTPTR ( newmemblk )		7512721	0					
ANR	7513104	Callee	MEMBLK_POSTPTR		7512721	0					
ANR	7513105	Identifier	MEMBLK_POSTPTR		7512721	0					
ANR	7513106	ArgumentList	newmemblk		7512721	1					
ANR	7513107	Argument	newmemblk		7512721	0					
ANR	7513108	Identifier	newmemblk		7512721	0					
ANR	7513109	Argument	MEMENTO_POSTFILL		7512721	1					
ANR	7513110	Identifier	MEMENTO_POSTFILL		7512721	0					
ANR	7513111	Argument	Memento_PostSize		7512721	2					
ANR	7513112	Identifier	Memento_PostSize		7512721	0					
ANR	7513113	ExpressionStatement	"VALGRIND_MAKE_MEM_UNDEFINED ( MEMBLK_POSTPTR ( newmemblk ) , Memento_PostSize )"	2231:4:64187:64259	7512721	31	True				
ANR	7513114	CallExpression	"VALGRIND_MAKE_MEM_UNDEFINED ( MEMBLK_POSTPTR ( newmemblk ) , Memento_PostSize )"		7512721	0					
ANR	7513115	Callee	VALGRIND_MAKE_MEM_UNDEFINED		7512721	0					
ANR	7513116	Identifier	VALGRIND_MAKE_MEM_UNDEFINED		7512721	0					
ANR	7513117	ArgumentList	MEMBLK_POSTPTR ( newmemblk )		7512721	1					
ANR	7513118	Argument	MEMBLK_POSTPTR ( newmemblk )		7512721	0					
ANR	7513119	CallExpression	MEMBLK_POSTPTR ( newmemblk )		7512721	0					
ANR	7513120	Callee	MEMBLK_POSTPTR		7512721	0					
ANR	7513121	Identifier	MEMBLK_POSTPTR		7512721	0					
ANR	7513122	ArgumentList	newmemblk		7512721	1					
ANR	7513123	Argument	newmemblk		7512721	0					
ANR	7513124	Identifier	newmemblk		7512721	0					
ANR	7513125	Argument	Memento_PostSize		7512721	1					
ANR	7513126	Identifier	Memento_PostSize		7512721	0					
ANR	7513127	ExpressionStatement	"Memento_addBlockHead ( & memento . used , newmemblk , 2 )"	2233:4:64272:64321	7512721	32	True				
ANR	7513128	CallExpression	"Memento_addBlockHead ( & memento . used , newmemblk , 2 )"		7512721	0					
ANR	7513129	Callee	Memento_addBlockHead		7512721	0					
ANR	7513130	Identifier	Memento_addBlockHead		7512721	0					
ANR	7513131	ArgumentList	& memento . used		7512721	1					
ANR	7513132	Argument	& memento . used		7512721	0					
ANR	7513133	UnaryOperationExpression	& memento . used		7512721	0					
ANR	7513134	UnaryOperator	&		7512721	0					
ANR	7513135	MemberAccess	memento . used		7512721	1					
ANR	7513136	Identifier	memento		7512721	0					
ANR	7513137	Identifier	used		7512721	1					
ANR	7513138	Argument	newmemblk		7512721	1					
ANR	7513139	Identifier	newmemblk		7512721	0					
ANR	7513140	Argument	2		7512721	2					
ANR	7513141	PrimaryExpression	2		7512721	0					
ANR	7513142	ReturnStatement	return MEMBLK_TOBLK ( newmemblk ) ;	2234:4:64327:64357	7512721	33	True				
ANR	7513143	CallExpression	MEMBLK_TOBLK ( newmemblk )		7512721	0					
ANR	7513144	Callee	MEMBLK_TOBLK		7512721	0					
ANR	7513145	Identifier	MEMBLK_TOBLK		7512721	0					
ANR	7513146	ArgumentList	newmemblk		7512721	1					
ANR	7513147	Argument	newmemblk		7512721	0					
ANR	7513148	Identifier	newmemblk		7512721	0					
ANR	7513149	ReturnType	static void *		7512721	1					
ANR	7513150	Identifier	do_realloc		7512721	2					
ANR	7513151	ParameterList	"void * blk , size_t newsize , int type"		7512721	3					
ANR	7513152	Parameter	void * blk	2173:24:62022:62030	7512721	0	True				
ANR	7513153	ParameterType	void *		7512721	0					
ANR	7513154	Identifier	blk		7512721	1					
ANR	7513155	Parameter	size_t newsize	2173:35:62033:62046	7512721	1	True				
ANR	7513156	ParameterType	size_t		7512721	0					
ANR	7513157	Identifier	newsize		7512721	1					
ANR	7513158	Parameter	int type	2173:51:62049:62056	7512721	2	True				
ANR	7513159	ParameterType	int		7512721	0					
ANR	7513160	Identifier	type		7512721	1					
ANR	7513161	CFGEntryNode	ENTRY		7512721		True				
ANR	7513162	CFGExitNode	EXIT		7512721		True				
ANR	7513163	Symbol	memento . numReallocs		7512721						
ANR	7513164	Symbol	Memento_failThisEventLocked		7512721						
ANR	7513165	Symbol	flags		7512721						
ANR	7513166	Symbol	newmemblk		7512721						
ANR	7513167	Symbol	type		7512721						
ANR	7513168	Symbol	newbytes		7512721						
ANR	7513169	Symbol	memento . peakAlloc		7512721						
ANR	7513170	Symbol	MEMBLK_POSTPTR		7512721						
ANR	7513171	Symbol	MEMENTO_POSTFILL		7512721						
ANR	7513172	Symbol	* memblk		7512721						
ANR	7513173	Symbol	MEMBLK_SIZE		7512721						
ANR	7513174	Symbol	newmemblk -> rawsize		7512721						
ANR	7513175	Symbol	checkBlock		7512721						
ANR	7513176	Symbol	newmemblk -> flags		7512721						
ANR	7513177	Symbol	MEMENTO_ALLOCFILL		7512721						
ANR	7513178	Symbol	blk		7512721						
ANR	7513179	Symbol	& memento		7512721						
ANR	7513180	Symbol	NULL		7512721						
ANR	7513181	Symbol	Memento_PreSize		7512721						
ANR	7513182	Symbol	newsize		7512721						
ANR	7513183	Symbol	memento		7512721						
ANR	7513184	Symbol	memblk		7512721						
ANR	7513185	Symbol	newsizemem		7512721						
ANR	7513186	Symbol	memblk -> rawsize		7512721						
ANR	7513187	Symbol	* newmemblk		7512721						
ANR	7513188	Symbol	MEMBLK_TOBLK		7512721						
ANR	7513189	Symbol	memento . alloc		7512721						
ANR	7513190	Symbol	MEMENTO_PREFILL		7512721						
ANR	7513191	Symbol	MEMENTO_UNDERLYING_REALLOC		7512721						
ANR	7513192	Symbol	& memento . used		7512721						
ANR	7513193	Symbol	MEMBLK_FROMBLK		7512721						
ANR	7513194	Symbol	memento . maxMemory		7512721						
ANR	7513195	Symbol	newmemblk -> preblk		7512721						
ANR	7513196	Symbol	memblk -> flags		7512721						
ANR	7513197	Symbol	memento . totalAlloc		7512721						
ANR	7513198	Symbol	Memento_PostSize		7512721						
ANR	7513199	Symbol	Memento_Flag_BreakOnRealloc		7512721						
ANR	7513200	Function	Memento_realloc	2237:0:64362:64915							
ANR	7513201	FunctionDef	"Memento_realloc (void * blk , size_t newsize)"		7513200	0					
ANR	7513202	CompoundStatement		2238:0:64411:64915	7513200	0					
ANR	7513203	IdentifierDeclStatement	void * ret ;	2239:4:64417:64426	7513200	0	True				
ANR	7513204	IdentifierDecl	* ret		7513200	0					
ANR	7513205	IdentifierDeclType	void *		7513200	0					
ANR	7513206	Identifier	ret		7513200	1					
ANR	7513207	IfStatement	if ( ! memento . inited )		7513200	1					
ANR	7513208	Condition	! memento . inited	2241:8:64437:64451	7513200	0	True				
ANR	7513209	UnaryOperationExpression	! memento . inited		7513200	0					
ANR	7513210	UnaryOperator	!		7513200	0					
ANR	7513211	MemberAccess	memento . inited		7513200	1					
ANR	7513212	Identifier	memento		7513200	0					
ANR	7513213	Identifier	inited		7513200	1					
ANR	7513214	ExpressionStatement	Memento_init ( )	2242:8:64462:64476	7513200	1	True				
ANR	7513215	CallExpression	Memento_init ( )		7513200	0					
ANR	7513216	Callee	Memento_init		7513200	0					
ANR	7513217	Identifier	Memento_init		7513200	0					
ANR	7513218	ArgumentList			7513200	1					
ANR	7513219	IfStatement	if ( blk == NULL )		7513200	2					
ANR	7513220	Condition	blk == NULL	2244:8:64487:64497	7513200	0	True				
ANR	7513221	EqualityExpression	blk == NULL		7513200	0		==			
ANR	7513222	Identifier	blk		7513200	0					
ANR	7513223	Identifier	NULL		7513200	1					
ANR	7513224	CompoundStatement		8:4:92:92	7513200	1					
ANR	7513225	ExpressionStatement	MEMENTO_LOCK ( )	2246:8:64514:64528	7513200	0	True				
ANR	7513226	CallExpression	MEMENTO_LOCK ( )		7513200	0					
ANR	7513227	Callee	MEMENTO_LOCK		7513200	0					
ANR	7513228	Identifier	MEMENTO_LOCK		7513200	0					
ANR	7513229	ArgumentList			7513200	1					
ANR	7513230	ExpressionStatement	"ret = do_malloc ( newsize , Memento_EventType_realloc )"	2247:8:64538:64589	7513200	1	True				
ANR	7513231	AssignmentExpression	"ret = do_malloc ( newsize , Memento_EventType_realloc )"		7513200	0		=			
ANR	7513232	Identifier	ret		7513200	0					
ANR	7513233	CallExpression	"do_malloc ( newsize , Memento_EventType_realloc )"		7513200	1					
ANR	7513234	Callee	do_malloc		7513200	0					
ANR	7513235	Identifier	do_malloc		7513200	0					
ANR	7513236	ArgumentList	newsize		7513200	1					
ANR	7513237	Argument	newsize		7513200	0					
ANR	7513238	Identifier	newsize		7513200	0					
ANR	7513239	Argument	Memento_EventType_realloc		7513200	1					
ANR	7513240	Identifier	Memento_EventType_realloc		7513200	0					
ANR	7513241	ExpressionStatement	MEMENTO_UNLOCK ( )	2248:8:64599:64615	7513200	2	True				
ANR	7513242	CallExpression	MEMENTO_UNLOCK ( )		7513200	0					
ANR	7513243	Callee	MEMENTO_UNLOCK		7513200	0					
ANR	7513244	Identifier	MEMENTO_UNLOCK		7513200	0					
ANR	7513245	ArgumentList			7513200	1					
ANR	7513246	ReturnStatement	return ret ;	2249:8:64625:64635	7513200	3	True				
ANR	7513247	Identifier	ret		7513200	0					
ANR	7513248	IfStatement	if ( newsize == 0 )		7513200	3					
ANR	7513249	Condition	newsize == 0	2251:8:64651:64662	7513200	0	True				
ANR	7513250	EqualityExpression	newsize == 0		7513200	0		==			
ANR	7513251	Identifier	newsize		7513200	0					
ANR	7513252	PrimaryExpression	0		7513200	1					
ANR	7513253	CompoundStatement		14:22:253:253	7513200	1					
ANR	7513254	ExpressionStatement	MEMENTO_LOCK ( )	2252:8:64675:64689	7513200	0	True				
ANR	7513255	CallExpression	MEMENTO_LOCK ( )		7513200	0					
ANR	7513256	Callee	MEMENTO_LOCK		7513200	0					
ANR	7513257	Identifier	MEMENTO_LOCK		7513200	0					
ANR	7513258	ArgumentList			7513200	1					
ANR	7513259	ExpressionStatement	"do_free ( blk , Memento_EventType_realloc )"	2253:8:64699:64738	7513200	1	True				
ANR	7513260	CallExpression	"do_free ( blk , Memento_EventType_realloc )"		7513200	0					
ANR	7513261	Callee	do_free		7513200	0					
ANR	7513262	Identifier	do_free		7513200	0					
ANR	7513263	ArgumentList	blk		7513200	1					
ANR	7513264	Argument	blk		7513200	0					
ANR	7513265	Identifier	blk		7513200	0					
ANR	7513266	Argument	Memento_EventType_realloc		7513200	1					
ANR	7513267	Identifier	Memento_EventType_realloc		7513200	0					
ANR	7513268	ExpressionStatement	MEMENTO_UNLOCK ( )	2254:8:64748:64764	7513200	2	True				
ANR	7513269	CallExpression	MEMENTO_UNLOCK ( )		7513200	0					
ANR	7513270	Callee	MEMENTO_UNLOCK		7513200	0					
ANR	7513271	Identifier	MEMENTO_UNLOCK		7513200	0					
ANR	7513272	ArgumentList			7513200	1					
ANR	7513273	ReturnStatement	return NULL ;	2255:8:64774:64785	7513200	3	True				
ANR	7513274	Identifier	NULL		7513200	0					
ANR	7513275	ExpressionStatement	MEMENTO_LOCK ( )	2258:4:64798:64812	7513200	4	True				
ANR	7513276	CallExpression	MEMENTO_LOCK ( )		7513200	0					
ANR	7513277	Callee	MEMENTO_LOCK		7513200	0					
ANR	7513278	Identifier	MEMENTO_LOCK		7513200	0					
ANR	7513279	ArgumentList			7513200	1					
ANR	7513280	ExpressionStatement	"ret = do_realloc ( blk , newsize , Memento_EventType_realloc )"	2259:4:64818:64875	7513200	5	True				
ANR	7513281	AssignmentExpression	"ret = do_realloc ( blk , newsize , Memento_EventType_realloc )"		7513200	0		=			
ANR	7513282	Identifier	ret		7513200	0					
ANR	7513283	CallExpression	"do_realloc ( blk , newsize , Memento_EventType_realloc )"		7513200	1					
ANR	7513284	Callee	do_realloc		7513200	0					
ANR	7513285	Identifier	do_realloc		7513200	0					
ANR	7513286	ArgumentList	blk		7513200	1					
ANR	7513287	Argument	blk		7513200	0					
ANR	7513288	Identifier	blk		7513200	0					
ANR	7513289	Argument	newsize		7513200	1					
ANR	7513290	Identifier	newsize		7513200	0					
ANR	7513291	Argument	Memento_EventType_realloc		7513200	2					
ANR	7513292	Identifier	Memento_EventType_realloc		7513200	0					
ANR	7513293	ExpressionStatement	MEMENTO_UNLOCK ( )	2260:4:64881:64897	7513200	6	True				
ANR	7513294	CallExpression	MEMENTO_UNLOCK ( )		7513200	0					
ANR	7513295	Callee	MEMENTO_UNLOCK		7513200	0					
ANR	7513296	Identifier	MEMENTO_UNLOCK		7513200	0					
ANR	7513297	ArgumentList			7513200	1					
ANR	7513298	ReturnStatement	return ret ;	2261:4:64903:64913	7513200	7	True				
ANR	7513299	Identifier	ret		7513200	0					
ANR	7513300	ReturnType	void *		7513200	1					
ANR	7513301	Identifier	Memento_realloc		7513200	2					
ANR	7513302	ParameterList	"void * blk , size_t newsize"		7513200	3					
ANR	7513303	Parameter	void * blk	2237:22:64384:64392	7513200	0	True				
ANR	7513304	ParameterType	void *		7513200	0					
ANR	7513305	Identifier	blk		7513200	1					
ANR	7513306	Parameter	size_t newsize	2237:33:64395:64408	7513200	1	True				
ANR	7513307	ParameterType	size_t		7513200	0					
ANR	7513308	Identifier	newsize		7513200	1					
ANR	7513309	CFGEntryNode	ENTRY		7513200		True				
ANR	7513310	CFGExitNode	EXIT		7513200		True				
ANR	7513311	Symbol	blk		7513200						
ANR	7513312	Symbol	ret		7513200						
ANR	7513313	Symbol	NULL		7513200						
ANR	7513314	Symbol	Memento_EventType_realloc		7513200						
ANR	7513315	Symbol	newsize		7513200						
ANR	7513316	Symbol	memento		7513200						
ANR	7513317	Symbol	memento . inited		7513200						
ANR	7513318	Symbol	do_malloc		7513200						
ANR	7513319	Symbol	do_realloc		7513200						
ANR	7513320	Function	Memento_checkBlock	2264:0:64918:65174							
ANR	7513321	FunctionDef	Memento_checkBlock (void * blk)		7513320	0					
ANR	7513322	CompoundStatement		2265:0:64952:65174	7513320	0					
ANR	7513323	IdentifierDeclStatement	Memento_BlkHeader * memblk ;	2266:4:64958:64983	7513320	0	True				
ANR	7513324	IdentifierDecl	* memblk		7513320	0					
ANR	7513325	IdentifierDeclType	Memento_BlkHeader *		7513320	0					
ANR	7513326	Identifier	memblk		7513320	1					
ANR	7513327	IdentifierDeclStatement	int ret ;	2267:4:64989:64996	7513320	1	True				
ANR	7513328	IdentifierDecl	ret		7513320	0					
ANR	7513329	IdentifierDeclType	int		7513320	0					
ANR	7513330	Identifier	ret		7513320	1					
ANR	7513331	IfStatement	if ( blk == NULL )		7513320	2					
ANR	7513332	Condition	blk == NULL	2269:8:65007:65017	7513320	0	True				
ANR	7513333	EqualityExpression	blk == NULL		7513320	0		==			
ANR	7513334	Identifier	blk		7513320	0					
ANR	7513335	Identifier	NULL		7513320	1					
ANR	7513336	ReturnStatement	return 0 ;	2270:8:65028:65036	7513320	1	True				
ANR	7513337	PrimaryExpression	0		7513320	0					
ANR	7513338	ExpressionStatement	MEMENTO_LOCK ( )	2272:4:65043:65057	7513320	3	True				
ANR	7513339	CallExpression	MEMENTO_LOCK ( )		7513320	0					
ANR	7513340	Callee	MEMENTO_LOCK		7513320	0					
ANR	7513341	Identifier	MEMENTO_LOCK		7513320	0					
ANR	7513342	ArgumentList			7513320	1					
ANR	7513343	ExpressionStatement	memblk = MEMBLK_FROMBLK ( blk )	2273:4:65063:65091	7513320	4	True				
ANR	7513344	AssignmentExpression	memblk = MEMBLK_FROMBLK ( blk )		7513320	0		=			
ANR	7513345	Identifier	memblk		7513320	0					
ANR	7513346	CallExpression	MEMBLK_FROMBLK ( blk )		7513320	1					
ANR	7513347	Callee	MEMBLK_FROMBLK		7513320	0					
ANR	7513348	Identifier	MEMBLK_FROMBLK		7513320	0					
ANR	7513349	ArgumentList	blk		7513320	1					
ANR	7513350	Argument	blk		7513320	0					
ANR	7513351	Identifier	blk		7513320	0					
ANR	7513352	ExpressionStatement	"ret = checkBlockUser ( memblk , ""check"" )"	2274:4:65097:65134	7513320	5	True				
ANR	7513353	AssignmentExpression	"ret = checkBlockUser ( memblk , ""check"" )"		7513320	0		=			
ANR	7513354	Identifier	ret		7513320	0					
ANR	7513355	CallExpression	"checkBlockUser ( memblk , ""check"" )"		7513320	1					
ANR	7513356	Callee	checkBlockUser		7513320	0					
ANR	7513357	Identifier	checkBlockUser		7513320	0					
ANR	7513358	ArgumentList	memblk		7513320	1					
ANR	7513359	Argument	memblk		7513320	0					
ANR	7513360	Identifier	memblk		7513320	0					
ANR	7513361	Argument	"""check"""		7513320	1					
ANR	7513362	PrimaryExpression	"""check"""		7513320	0					
ANR	7513363	ExpressionStatement	MEMENTO_UNLOCK ( )	2275:4:65140:65156	7513320	6	True				
ANR	7513364	CallExpression	MEMENTO_UNLOCK ( )		7513320	0					
ANR	7513365	Callee	MEMENTO_UNLOCK		7513320	0					
ANR	7513366	Identifier	MEMENTO_UNLOCK		7513320	0					
ANR	7513367	ArgumentList			7513320	1					
ANR	7513368	ReturnStatement	return ret ;	2276:4:65162:65172	7513320	7	True				
ANR	7513369	Identifier	ret		7513320	0					
ANR	7513370	ReturnType	int		7513320	1					
ANR	7513371	Identifier	Memento_checkBlock		7513320	2					
ANR	7513372	ParameterList	void * blk		7513320	3					
ANR	7513373	Parameter	void * blk	2264:23:64941:64949	7513320	0	True				
ANR	7513374	ParameterType	void *		7513320	0					
ANR	7513375	Identifier	blk		7513320	1					
ANR	7513376	CFGEntryNode	ENTRY		7513320		True				
ANR	7513377	CFGExitNode	EXIT		7513320		True				
ANR	7513378	Symbol	blk		7513320						
ANR	7513379	Symbol	ret		7513320						
ANR	7513380	Symbol	NULL		7513320						
ANR	7513381	Symbol	MEMBLK_FROMBLK		7513320						
ANR	7513382	Symbol	checkBlockUser		7513320						
ANR	7513383	Symbol	memblk		7513320						
ANR	7513384	Function	Memento_Internal_checkAllAlloced	2280:0:65202:66202							
ANR	7513385	FunctionDef	"Memento_Internal_checkAllAlloced (Memento_BlkHeader * memblk , void * arg)"		7513384	0					
ANR	7513386	CompoundStatement		2281:0:65284:66202	7513384	0					
ANR	7513387	IdentifierDeclStatement	BlkCheckData * data = ( BlkCheckData * ) arg ;	2282:4:65290:65330	7513384	0	True				
ANR	7513388	IdentifierDecl	* data = ( BlkCheckData * ) arg		7513384	0					
ANR	7513389	IdentifierDeclType	BlkCheckData *		7513384	0					
ANR	7513390	Identifier	data		7513384	1					
ANR	7513391	AssignmentExpression	* data = ( BlkCheckData * ) arg		7513384	2		=			
ANR	7513392	Identifier	data		7513384	0					
ANR	7513393	CastExpression	( BlkCheckData * ) arg		7513384	1					
ANR	7513394	CastTarget	BlkCheckData *		7513384	0					
ANR	7513395	Identifier	arg		7513384	1					
ANR	7513396	ExpressionStatement	"Memento_Internal_checkAllocedBlock ( memblk , data )"	2284:4:65337:65385	7513384	1	True				
ANR	7513397	CallExpression	"Memento_Internal_checkAllocedBlock ( memblk , data )"		7513384	0					
ANR	7513398	Callee	Memento_Internal_checkAllocedBlock		7513384	0					
ANR	7513399	Identifier	Memento_Internal_checkAllocedBlock		7513384	0					
ANR	7513400	ArgumentList	memblk		7513384	1					
ANR	7513401	Argument	memblk		7513384	0					
ANR	7513402	Identifier	memblk		7513384	0					
ANR	7513403	Argument	data		7513384	1					
ANR	7513404	Identifier	data		7513384	0					
ANR	7513405	IfStatement	if ( data -> preCorrupt || data -> postCorrupt )		7513384	2					
ANR	7513406	Condition	data -> preCorrupt || data -> postCorrupt	2285:8:65395:65431	7513384	0	True				
ANR	7513407	OrExpression	data -> preCorrupt || data -> postCorrupt		7513384	0		||			
ANR	7513408	PtrMemberAccess	data -> preCorrupt		7513384	0					
ANR	7513409	Identifier	data		7513384	0					
ANR	7513410	Identifier	preCorrupt		7513384	1					
ANR	7513411	PtrMemberAccess	data -> postCorrupt		7513384	1					
ANR	7513412	Identifier	data		7513384	0					
ANR	7513413	Identifier	postCorrupt		7513384	1					
ANR	7513414	CompoundStatement		5:47:149:149	7513384	1					
ANR	7513415	IfStatement	if ( ( data -> found & 2 ) == 0 )		7513384	0					
ANR	7513416	Condition	( data -> found & 2 ) == 0	2286:12:65448:65469	7513384	0	True				
ANR	7513417	EqualityExpression	( data -> found & 2 ) == 0		7513384	0		==			
ANR	7513418	BitAndExpression	data -> found & 2		7513384	0		&			
ANR	7513419	PtrMemberAccess	data -> found		7513384	0					
ANR	7513420	Identifier	data		7513384	0					
ANR	7513421	Identifier	found		7513384	1					
ANR	7513422	PrimaryExpression	2		7513384	1					
ANR	7513423	PrimaryExpression	0		7513384	1					
ANR	7513424	CompoundStatement		6:36:187:187	7513384	1					
ANR	7513425	ExpressionStatement	"fprintf ( stderr , ""Allocated blocks:\\n"" )"	2287:12:65486:65524	7513384	0	True				
ANR	7513426	CallExpression	"fprintf ( stderr , ""Allocated blocks:\\n"" )"		7513384	0					
ANR	7513427	Callee	fprintf		7513384	0					
ANR	7513428	Identifier	fprintf		7513384	0					
ANR	7513429	ArgumentList	stderr		7513384	1					
ANR	7513430	Argument	stderr		7513384	0					
ANR	7513431	Identifier	stderr		7513384	0					
ANR	7513432	Argument	"""Allocated blocks:\\n"""		7513384	1					
ANR	7513433	PrimaryExpression	"""Allocated blocks:\\n"""		7513384	0					
ANR	7513434	ExpressionStatement	data -> found |= 2	2288:12:65538:65554	7513384	1	True				
ANR	7513435	AssignmentExpression	data -> found |= 2		7513384	0		|=			
ANR	7513436	PtrMemberAccess	data -> found		7513384	0					
ANR	7513437	Identifier	data		7513384	0					
ANR	7513438	Identifier	found		7513384	1					
ANR	7513439	PrimaryExpression	2		7513384	1					
ANR	7513440	ExpressionStatement	"fprintf ( stderr , ""  Block "" )"	2290:8:65574:65601	7513384	1	True				
ANR	7513441	CallExpression	"fprintf ( stderr , ""  Block "" )"		7513384	0					
ANR	7513442	Callee	fprintf		7513384	0					
ANR	7513443	Identifier	fprintf		7513384	0					
ANR	7513444	ArgumentList	stderr		7513384	1					
ANR	7513445	Argument	stderr		7513384	0					
ANR	7513446	Identifier	stderr		7513384	0					
ANR	7513447	Argument	"""  Block """		7513384	1					
ANR	7513448	PrimaryExpression	"""  Block """		7513384	0					
ANR	7513449	ExpressionStatement	"showBlock ( memblk , ' ' )"	2291:8:65611:65633	7513384	2	True				
ANR	7513450	CallExpression	"showBlock ( memblk , ' ' )"		7513384	0					
ANR	7513451	Callee	showBlock		7513384	0					
ANR	7513452	Identifier	showBlock		7513384	0					
ANR	7513453	ArgumentList	memblk		7513384	1					
ANR	7513454	Argument	memblk		7513384	0					
ANR	7513455	Identifier	memblk		7513384	0					
ANR	7513456	Argument	' '		7513384	1					
ANR	7513457	PrimaryExpression	' '		7513384	0					
ANR	7513458	IfStatement	if ( data -> preCorrupt )		7513384	3					
ANR	7513459	Condition	data -> preCorrupt	2292:12:65647:65662	7513384	0	True				
ANR	7513460	PtrMemberAccess	data -> preCorrupt		7513384	0					
ANR	7513461	Identifier	data		7513384	0					
ANR	7513462	Identifier	preCorrupt		7513384	1					
ANR	7513463	CompoundStatement		12:30:380:380	7513384	1					
ANR	7513464	ExpressionStatement	"fprintf ( stderr , "" Preguard "" )"	2293:12:65679:65708	7513384	0	True				
ANR	7513465	CallExpression	"fprintf ( stderr , "" Preguard "" )"		7513384	0					
ANR	7513466	Callee	fprintf		7513384	0					
ANR	7513467	Identifier	fprintf		7513384	0					
ANR	7513468	ArgumentList	stderr		7513384	1					
ANR	7513469	Argument	stderr		7513384	0					
ANR	7513470	Identifier	stderr		7513384	0					
ANR	7513471	Argument	""" Preguard """		7513384	1					
ANR	7513472	PrimaryExpression	""" Preguard """		7513384	0					
ANR	7513473	IfStatement	if ( data -> postCorrupt )		7513384	4					
ANR	7513474	Condition	data -> postCorrupt	2295:12:65732:65748	7513384	0	True				
ANR	7513475	PtrMemberAccess	data -> postCorrupt		7513384	0					
ANR	7513476	Identifier	data		7513384	0					
ANR	7513477	Identifier	postCorrupt		7513384	1					
ANR	7513478	CompoundStatement		15:31:466:466	7513384	1					
ANR	7513479	ExpressionStatement	"fprintf ( stderr , ""%s Postguard "" , ( data -> preCorrupt ? ""&"" : """" ) )"	2296:12:65765:65848	7513384	0	True				
ANR	7513480	CallExpression	"fprintf ( stderr , ""%s Postguard "" , ( data -> preCorrupt ? ""&"" : """" ) )"		7513384	0					
ANR	7513481	Callee	fprintf		7513384	0					
ANR	7513482	Identifier	fprintf		7513384	0					
ANR	7513483	ArgumentList	stderr		7513384	1					
ANR	7513484	Argument	stderr		7513384	0					
ANR	7513485	Identifier	stderr		7513384	0					
ANR	7513486	Argument	"""%s Postguard """		7513384	1					
ANR	7513487	PrimaryExpression	"""%s Postguard """		7513384	0					
ANR	7513488	Argument	"data -> preCorrupt ? ""&"" : """""		7513384	2					
ANR	7513489	ConditionalExpression	"data -> preCorrupt ? ""&"" : """""		7513384	0					
ANR	7513490	Condition	data -> preCorrupt		7513384	0					
ANR	7513491	PtrMemberAccess	data -> preCorrupt		7513384	0					
ANR	7513492	Identifier	data		7513384	0					
ANR	7513493	Identifier	preCorrupt		7513384	1					
ANR	7513494	PrimaryExpression	"""&"""		7513384	1					
ANR	7513495	PrimaryExpression	""""""		7513384	2					
ANR	7513496	Statement	fprintf	2299:8:65868:65874	7513384	5	True				
ANR	7513497	Statement	(	2299:15:65875:65875	7513384	6	True				
ANR	7513498	Statement	stderr	2299:16:65876:65881	7513384	7	True				
ANR	7513499	Statement	","	2299:22:65882:65882	7513384	8	True				
ANR	7513500	Statement	"""corrupted.\\n    """	2299:24:65884:65901	7513384	9	True				
ANR	7513501	Statement	"""Block last checked OK at allocation %d. Now %d.\\n"""	2300:16:65919:65969	7513384	10	True				
ANR	7513502	Statement	","	2300:67:65970:65970	7513384	11	True				
ANR	7513503	Statement	memblk	2301:16:65988:65993	7513384	12	True				
ANR	7513504	Statement	->	2301:22:65994:65995	7513384	13	True				
ANR	7513505	Statement	lastCheckedOK	2301:24:65996:66008	7513384	14	True				
ANR	7513506	Statement	","	2301:37:66009:66009	7513384	15	True				
ANR	7513507	Statement	memento	2301:39:66011:66017	7513384	16	True				
ANR	7513508	Statement	.	2301:46:66018:66018	7513384	17	True				
ANR	7513509	Statement	sequence	2301:47:66019:66026	7513384	18	True				
ANR	7513510	Statement	)	2301:55:66027:66027	7513384	19	True				
ANR	7513511	ExpressionStatement		2301:56:66028:66028	7513384	20	True				
ANR	7513512	ExpressionStatement	data -> preCorrupt = 0	2302:8:66038:66059	7513384	21	True				
ANR	7513513	AssignmentExpression	data -> preCorrupt = 0		7513384	0		=			
ANR	7513514	PtrMemberAccess	data -> preCorrupt		7513384	0					
ANR	7513515	Identifier	data		7513384	0					
ANR	7513516	Identifier	preCorrupt		7513384	1					
ANR	7513517	PrimaryExpression	0		7513384	1					
ANR	7513518	ExpressionStatement	data -> postCorrupt = 0	2303:8:66069:66090	7513384	22	True				
ANR	7513519	AssignmentExpression	data -> postCorrupt = 0		7513384	0		=			
ANR	7513520	PtrMemberAccess	data -> postCorrupt		7513384	0					
ANR	7513521	Identifier	data		7513384	0					
ANR	7513522	Identifier	postCorrupt		7513384	1					
ANR	7513523	PrimaryExpression	0		7513384	1					
ANR	7513524	ExpressionStatement	data -> freeCorrupt = 0	2304:8:66100:66121	7513384	23	True				
ANR	7513525	AssignmentExpression	data -> freeCorrupt = 0		7513384	0		=			
ANR	7513526	PtrMemberAccess	data -> freeCorrupt		7513384	0					
ANR	7513527	Identifier	data		7513384	0					
ANR	7513528	Identifier	freeCorrupt		7513384	1					
ANR	7513529	PrimaryExpression	0		7513384	1					
ANR	7513530	ElseStatement	else		7513384	0					
ANR	7513531	ExpressionStatement	memblk -> lastCheckedOK = memento . sequence	2307:8:66146:66186	7513384	0	True				
ANR	7513532	AssignmentExpression	memblk -> lastCheckedOK = memento . sequence		7513384	0		=			
ANR	7513533	PtrMemberAccess	memblk -> lastCheckedOK		7513384	0					
ANR	7513534	Identifier	memblk		7513384	0					
ANR	7513535	Identifier	lastCheckedOK		7513384	1					
ANR	7513536	MemberAccess	memento . sequence		7513384	1					
ANR	7513537	Identifier	memento		7513384	0					
ANR	7513538	Identifier	sequence		7513384	1					
ANR	7513539	ReturnStatement	return 0 ;	2308:4:66192:66200	7513384	3	True				
ANR	7513540	PrimaryExpression	0		7513384	0					
ANR	7513541	ReturnType	static int		7513384	1					
ANR	7513542	Identifier	Memento_Internal_checkAllAlloced		7513384	2					
ANR	7513543	ParameterList	"Memento_BlkHeader * memblk , void * arg"		7513384	3					
ANR	7513544	Parameter	Memento_BlkHeader * memblk	2280:44:65246:65270	7513384	0	True				
ANR	7513545	ParameterType	Memento_BlkHeader *		7513384	0					
ANR	7513546	Identifier	memblk		7513384	1					
ANR	7513547	Parameter	void * arg	2280:71:65273:65281	7513384	1	True				
ANR	7513548	ParameterType	void *		7513384	0					
ANR	7513549	Identifier	arg		7513384	1					
ANR	7513550	CFGEntryNode	ENTRY		7513384		True				
ANR	7513551	CFGExitNode	EXIT		7513384		True				
ANR	7513552	Symbol	data		7513384						
ANR	7513553	Symbol	memento		7513384						
ANR	7513554	Symbol	stderr		7513384						
ANR	7513555	Symbol	data -> found		7513384						
ANR	7513556	Symbol	memblk		7513384						
ANR	7513557	Symbol	data -> preCorrupt		7513384						
ANR	7513558	Symbol	memblk -> lastCheckedOK		7513384						
ANR	7513559	Symbol	data -> postCorrupt		7513384						
ANR	7513560	Symbol	data -> freeCorrupt		7513384						
ANR	7513561	Symbol	arg		7513384						
ANR	7513562	Symbol	* memblk		7513384						
ANR	7513563	Symbol	* data		7513384						
ANR	7513564	Symbol	memento . sequence		7513384						
ANR	7513565	Function	Memento_Internal_checkAllFreed	2311:0:66205:67639							
ANR	7513566	FunctionDef	"Memento_Internal_checkAllFreed (Memento_BlkHeader * memblk , void * arg)"		7513565	0					
ANR	7513567	CompoundStatement		2312:0:66285:67639	7513565	0					
ANR	7513568	IdentifierDeclStatement	BlkCheckData * data = ( BlkCheckData * ) arg ;	2313:4:66291:66331	7513565	0	True				
ANR	7513569	IdentifierDecl	* data = ( BlkCheckData * ) arg		7513565	0					
ANR	7513570	IdentifierDeclType	BlkCheckData *		7513565	0					
ANR	7513571	Identifier	data		7513565	1					
ANR	7513572	AssignmentExpression	* data = ( BlkCheckData * ) arg		7513565	2		=			
ANR	7513573	Identifier	data		7513565	0					
ANR	7513574	CastExpression	( BlkCheckData * ) arg		7513565	1					
ANR	7513575	CastTarget	BlkCheckData *		7513565	0					
ANR	7513576	Identifier	arg		7513565	1					
ANR	7513577	ExpressionStatement	"Memento_Internal_checkFreedBlock ( memblk , data )"	2315:4:66338:66384	7513565	1	True				
ANR	7513578	CallExpression	"Memento_Internal_checkFreedBlock ( memblk , data )"		7513565	0					
ANR	7513579	Callee	Memento_Internal_checkFreedBlock		7513565	0					
ANR	7513580	Identifier	Memento_Internal_checkFreedBlock		7513565	0					
ANR	7513581	ArgumentList	memblk		7513565	1					
ANR	7513582	Argument	memblk		7513565	0					
ANR	7513583	Identifier	memblk		7513565	0					
ANR	7513584	Argument	data		7513565	1					
ANR	7513585	Identifier	data		7513565	0					
ANR	7513586	IfStatement	if ( data -> preCorrupt || data -> postCorrupt || data -> freeCorrupt )		7513565	2					
ANR	7513587	Condition	data -> preCorrupt || data -> postCorrupt || data -> freeCorrupt	2316:8:66394:66451	7513565	0	True				
ANR	7513588	OrExpression	data -> preCorrupt || data -> postCorrupt || data -> freeCorrupt		7513565	0		||			
ANR	7513589	PtrMemberAccess	data -> preCorrupt		7513565	0					
ANR	7513590	Identifier	data		7513565	0					
ANR	7513591	Identifier	preCorrupt		7513565	1					
ANR	7513592	OrExpression	data -> postCorrupt || data -> freeCorrupt		7513565	1		||			
ANR	7513593	PtrMemberAccess	data -> postCorrupt		7513565	0					
ANR	7513594	Identifier	data		7513565	0					
ANR	7513595	Identifier	postCorrupt		7513565	1					
ANR	7513596	PtrMemberAccess	data -> freeCorrupt		7513565	1					
ANR	7513597	Identifier	data		7513565	0					
ANR	7513598	Identifier	freeCorrupt		7513565	1					
ANR	7513599	CompoundStatement		5:68:168:168	7513565	1					
ANR	7513600	IfStatement	if ( ( data -> found & 4 ) == 0 )		7513565	0					
ANR	7513601	Condition	( data -> found & 4 ) == 0	2317:12:66468:66489	7513565	0	True				
ANR	7513602	EqualityExpression	( data -> found & 4 ) == 0		7513565	0		==			
ANR	7513603	BitAndExpression	data -> found & 4		7513565	0		&			
ANR	7513604	PtrMemberAccess	data -> found		7513565	0					
ANR	7513605	Identifier	data		7513565	0					
ANR	7513606	Identifier	found		7513565	1					
ANR	7513607	PrimaryExpression	4		7513565	1					
ANR	7513608	PrimaryExpression	0		7513565	1					
ANR	7513609	CompoundStatement		6:36:206:206	7513565	1					
ANR	7513610	ExpressionStatement	"fprintf ( stderr , ""Freed blocks:\\n"" )"	2318:12:66506:66540	7513565	0	True				
ANR	7513611	CallExpression	"fprintf ( stderr , ""Freed blocks:\\n"" )"		7513565	0					
ANR	7513612	Callee	fprintf		7513565	0					
ANR	7513613	Identifier	fprintf		7513565	0					
ANR	7513614	ArgumentList	stderr		7513565	1					
ANR	7513615	Argument	stderr		7513565	0					
ANR	7513616	Identifier	stderr		7513565	0					
ANR	7513617	Argument	"""Freed blocks:\\n"""		7513565	1					
ANR	7513618	PrimaryExpression	"""Freed blocks:\\n"""		7513565	0					
ANR	7513619	ExpressionStatement	data -> found |= 4	2319:12:66554:66570	7513565	1	True				
ANR	7513620	AssignmentExpression	data -> found |= 4		7513565	0		|=			
ANR	7513621	PtrMemberAccess	data -> found		7513565	0					
ANR	7513622	Identifier	data		7513565	0					
ANR	7513623	Identifier	found		7513565	1					
ANR	7513624	PrimaryExpression	4		7513565	1					
ANR	7513625	ExpressionStatement	"fprintf ( stderr , ""  "" )"	2321:8:66590:66611	7513565	1	True				
ANR	7513626	CallExpression	"fprintf ( stderr , ""  "" )"		7513565	0					
ANR	7513627	Callee	fprintf		7513565	0					
ANR	7513628	Identifier	fprintf		7513565	0					
ANR	7513629	ArgumentList	stderr		7513565	1					
ANR	7513630	Argument	stderr		7513565	0					
ANR	7513631	Identifier	stderr		7513565	0					
ANR	7513632	Argument	"""  """		7513565	1					
ANR	7513633	PrimaryExpression	"""  """		7513565	0					
ANR	7513634	ExpressionStatement	"showBlock ( memblk , ' ' )"	2322:8:66621:66643	7513565	2	True				
ANR	7513635	CallExpression	"showBlock ( memblk , ' ' )"		7513565	0					
ANR	7513636	Callee	showBlock		7513565	0					
ANR	7513637	Identifier	showBlock		7513565	0					
ANR	7513638	ArgumentList	memblk		7513565	1					
ANR	7513639	Argument	memblk		7513565	0					
ANR	7513640	Identifier	memblk		7513565	0					
ANR	7513641	Argument	' '		7513565	1					
ANR	7513642	PrimaryExpression	' '		7513565	0					
ANR	7513643	IfStatement	if ( data -> freeCorrupt )		7513565	3					
ANR	7513644	Condition	data -> freeCorrupt	2323:12:66657:66673	7513565	0	True				
ANR	7513645	PtrMemberAccess	data -> freeCorrupt		7513565	0					
ANR	7513646	Identifier	data		7513565	0					
ANR	7513647	Identifier	freeCorrupt		7513565	1					
ANR	7513648	CompoundStatement		12:31:390:390	7513565	1					
ANR	7513649	ExpressionStatement	"fprintf ( stderr , "" index %d (address 0x%p) onwards"" , data -> index , & ( ( char * ) MEMBLK_TOBLK ( memblk ) ) [ data -> index ] )"	2324:12:66690:66820	7513565	0	True				
ANR	7513650	CallExpression	"fprintf ( stderr , "" index %d (address 0x%p) onwards"" , data -> index , & ( ( char * ) MEMBLK_TOBLK ( memblk ) ) [ data -> index ] )"		7513565	0					
ANR	7513651	Callee	fprintf		7513565	0					
ANR	7513652	Identifier	fprintf		7513565	0					
ANR	7513653	ArgumentList	stderr		7513565	1					
ANR	7513654	Argument	stderr		7513565	0					
ANR	7513655	Identifier	stderr		7513565	0					
ANR	7513656	Argument	""" index %d (address 0x%p) onwards"""		7513565	1					
ANR	7513657	PrimaryExpression	""" index %d (address 0x%p) onwards"""		7513565	0					
ANR	7513658	Argument	data -> index		7513565	2					
ANR	7513659	PtrMemberAccess	data -> index		7513565	0					
ANR	7513660	Identifier	data		7513565	0					
ANR	7513661	Identifier	index		7513565	1					
ANR	7513662	Argument	& ( ( char * ) MEMBLK_TOBLK ( memblk ) ) [ data -> index ]		7513565	3					
ANR	7513663	UnaryOperationExpression	& ( ( char * ) MEMBLK_TOBLK ( memblk ) ) [ data -> index ]		7513565	0					
ANR	7513664	UnaryOperator	&		7513565	0					
ANR	7513665	ArrayIndexing	( ( char * ) MEMBLK_TOBLK ( memblk ) ) [ data -> index ]		7513565	1					
ANR	7513666	CastExpression	( char * ) MEMBLK_TOBLK ( memblk )		7513565	0					
ANR	7513667	CastTarget	char *		7513565	0					
ANR	7513668	CallExpression	MEMBLK_TOBLK ( memblk )		7513565	1					
ANR	7513669	Callee	MEMBLK_TOBLK		7513565	0					
ANR	7513670	Identifier	MEMBLK_TOBLK		7513565	0					
ANR	7513671	ArgumentList	memblk		7513565	1					
ANR	7513672	Argument	memblk		7513565	0					
ANR	7513673	Identifier	memblk		7513565	0					
ANR	7513674	PtrMemberAccess	data -> index		7513565	1					
ANR	7513675	Identifier	data		7513565	0					
ANR	7513676	Identifier	index		7513565	1					
ANR	7513677	IfStatement	if ( data -> preCorrupt )		7513565	1					
ANR	7513678	Condition	data -> preCorrupt	2326:16:66838:66853	7513565	0	True				
ANR	7513679	PtrMemberAccess	data -> preCorrupt		7513565	0					
ANR	7513680	Identifier	data		7513565	0					
ANR	7513681	Identifier	preCorrupt		7513565	1					
ANR	7513682	CompoundStatement		15:34:570:570	7513565	1					
ANR	7513683	ExpressionStatement	"fprintf ( stderr , ""+ preguard"" )"	2327:16:66874:66903	7513565	0	True				
ANR	7513684	CallExpression	"fprintf ( stderr , ""+ preguard"" )"		7513565	0					
ANR	7513685	Callee	fprintf		7513565	0					
ANR	7513686	Identifier	fprintf		7513565	0					
ANR	7513687	ArgumentList	stderr		7513565	1					
ANR	7513688	Argument	stderr		7513565	0					
ANR	7513689	Identifier	stderr		7513565	0					
ANR	7513690	Argument	"""+ preguard"""		7513565	1					
ANR	7513691	PrimaryExpression	"""+ preguard"""		7513565	0					
ANR	7513692	IfStatement	if ( data -> postCorrupt )		7513565	2					
ANR	7513693	Condition	data -> postCorrupt	2329:16:66935:66951	7513565	0	True				
ANR	7513694	PtrMemberAccess	data -> postCorrupt		7513565	0					
ANR	7513695	Identifier	data		7513565	0					
ANR	7513696	Identifier	postCorrupt		7513565	1					
ANR	7513697	CompoundStatement		18:35:668:668	7513565	1					
ANR	7513698	ExpressionStatement	"fprintf ( stderr , ""+ postguard"" )"	2330:16:66972:67002	7513565	0	True				
ANR	7513699	CallExpression	"fprintf ( stderr , ""+ postguard"" )"		7513565	0					
ANR	7513700	Callee	fprintf		7513565	0					
ANR	7513701	Identifier	fprintf		7513565	0					
ANR	7513702	ArgumentList	stderr		7513565	1					
ANR	7513703	Argument	stderr		7513565	0					
ANR	7513704	Identifier	stderr		7513565	0					
ANR	7513705	Argument	"""+ postguard"""		7513565	1					
ANR	7513706	PrimaryExpression	"""+ postguard"""		7513565	0					
ANR	7513707	ElseStatement	else		7513565	0					
ANR	7513708	CompoundStatement		21:15:747:747	7513565	0					
ANR	7513709	IfStatement	if ( data -> preCorrupt )		7513565	0					
ANR	7513710	Condition	data -> preCorrupt	2333:16:67051:67066	7513565	0	True				
ANR	7513711	PtrMemberAccess	data -> preCorrupt		7513565	0					
ANR	7513712	Identifier	data		7513565	0					
ANR	7513713	Identifier	preCorrupt		7513565	1					
ANR	7513714	CompoundStatement		22:34:783:783	7513565	1					
ANR	7513715	ExpressionStatement	"fprintf ( stderr , "" preguard"" )"	2334:16:67087:67115	7513565	0	True				
ANR	7513716	CallExpression	"fprintf ( stderr , "" preguard"" )"		7513565	0					
ANR	7513717	Callee	fprintf		7513565	0					
ANR	7513718	Identifier	fprintf		7513565	0					
ANR	7513719	ArgumentList	stderr		7513565	1					
ANR	7513720	Argument	stderr		7513565	0					
ANR	7513721	Identifier	stderr		7513565	0					
ANR	7513722	Argument	""" preguard"""		7513565	1					
ANR	7513723	PrimaryExpression	""" preguard"""		7513565	0					
ANR	7513724	IfStatement	if ( data -> postCorrupt )		7513565	1					
ANR	7513725	Condition	data -> postCorrupt	2336:16:67147:67163	7513565	0	True				
ANR	7513726	PtrMemberAccess	data -> postCorrupt		7513565	0					
ANR	7513727	Identifier	data		7513565	0					
ANR	7513728	Identifier	postCorrupt		7513565	1					
ANR	7513729	CompoundStatement		25:35:880:880	7513565	1					
ANR	7513730	ExpressionStatement	"fprintf ( stderr , ""%s Postguard"" , ( data -> preCorrupt ? ""+"" : """" ) )"	2337:16:67184:67270	7513565	0	True				
ANR	7513731	CallExpression	"fprintf ( stderr , ""%s Postguard"" , ( data -> preCorrupt ? ""+"" : """" ) )"		7513565	0					
ANR	7513732	Callee	fprintf		7513565	0					
ANR	7513733	Identifier	fprintf		7513565	0					
ANR	7513734	ArgumentList	stderr		7513565	1					
ANR	7513735	Argument	stderr		7513565	0					
ANR	7513736	Identifier	stderr		7513565	0					
ANR	7513737	Argument	"""%s Postguard"""		7513565	1					
ANR	7513738	PrimaryExpression	"""%s Postguard"""		7513565	0					
ANR	7513739	Argument	"data -> preCorrupt ? ""+"" : """""		7513565	2					
ANR	7513740	ConditionalExpression	"data -> preCorrupt ? ""+"" : """""		7513565	0					
ANR	7513741	Condition	data -> preCorrupt		7513565	0					
ANR	7513742	PtrMemberAccess	data -> preCorrupt		7513565	0					
ANR	7513743	Identifier	data		7513565	0					
ANR	7513744	Identifier	preCorrupt		7513565	1					
ANR	7513745	PrimaryExpression	"""+"""		7513565	1					
ANR	7513746	PrimaryExpression	""""""		7513565	2					
ANR	7513747	Statement	fprintf	2341:8:67304:67310	7513565	4	True				
ANR	7513748	Statement	(	2341:15:67311:67311	7513565	5	True				
ANR	7513749	Statement	stderr	2341:16:67312:67317	7513565	6	True				
ANR	7513750	Statement	","	2341:22:67318:67318	7513565	7	True				
ANR	7513751	Statement	""" corrupted.\\n"""	2341:24:67320:67334	7513565	8	True				
ANR	7513752	Statement	"""    Block last checked OK at allocation %d. Now %d.\\n"""	2342:16:67352:67406	7513565	9	True				
ANR	7513753	Statement	","	2342:71:67407:67407	7513565	10	True				
ANR	7513754	Statement	memblk	2343:16:67425:67430	7513565	11	True				
ANR	7513755	Statement	->	2343:22:67431:67432	7513565	12	True				
ANR	7513756	Statement	lastCheckedOK	2343:24:67433:67445	7513565	13	True				
ANR	7513757	Statement	","	2343:37:67446:67446	7513565	14	True				
ANR	7513758	Statement	memento	2343:39:67448:67454	7513565	15	True				
ANR	7513759	Statement	.	2343:46:67455:67455	7513565	16	True				
ANR	7513760	Statement	sequence	2343:47:67456:67463	7513565	17	True				
ANR	7513761	Statement	)	2343:55:67464:67464	7513565	18	True				
ANR	7513762	ExpressionStatement		2343:56:67465:67465	7513565	19	True				
ANR	7513763	ExpressionStatement	data -> preCorrupt = 0	2344:8:67475:67496	7513565	20	True				
ANR	7513764	AssignmentExpression	data -> preCorrupt = 0		7513565	0		=			
ANR	7513765	PtrMemberAccess	data -> preCorrupt		7513565	0					
ANR	7513766	Identifier	data		7513565	0					
ANR	7513767	Identifier	preCorrupt		7513565	1					
ANR	7513768	PrimaryExpression	0		7513565	1					
ANR	7513769	ExpressionStatement	data -> postCorrupt = 0	2345:8:67506:67527	7513565	21	True				
ANR	7513770	AssignmentExpression	data -> postCorrupt = 0		7513565	0		=			
ANR	7513771	PtrMemberAccess	data -> postCorrupt		7513565	0					
ANR	7513772	Identifier	data		7513565	0					
ANR	7513773	Identifier	postCorrupt		7513565	1					
ANR	7513774	PrimaryExpression	0		7513565	1					
ANR	7513775	ExpressionStatement	data -> freeCorrupt = 0	2346:8:67537:67558	7513565	22	True				
ANR	7513776	AssignmentExpression	data -> freeCorrupt = 0		7513565	0		=			
ANR	7513777	PtrMemberAccess	data -> freeCorrupt		7513565	0					
ANR	7513778	Identifier	data		7513565	0					
ANR	7513779	Identifier	freeCorrupt		7513565	1					
ANR	7513780	PrimaryExpression	0		7513565	1					
ANR	7513781	ElseStatement	else		7513565	0					
ANR	7513782	ExpressionStatement	memblk -> lastCheckedOK = memento . sequence	2349:8:67583:67623	7513565	0	True				
ANR	7513783	AssignmentExpression	memblk -> lastCheckedOK = memento . sequence		7513565	0		=			
ANR	7513784	PtrMemberAccess	memblk -> lastCheckedOK		7513565	0					
ANR	7513785	Identifier	memblk		7513565	0					
ANR	7513786	Identifier	lastCheckedOK		7513565	1					
ANR	7513787	MemberAccess	memento . sequence		7513565	1					
ANR	7513788	Identifier	memento		7513565	0					
ANR	7513789	Identifier	sequence		7513565	1					
ANR	7513790	ReturnStatement	return 0 ;	2350:4:67629:67637	7513565	3	True				
ANR	7513791	PrimaryExpression	0		7513565	0					
ANR	7513792	ReturnType	static int		7513565	1					
ANR	7513793	Identifier	Memento_Internal_checkAllFreed		7513565	2					
ANR	7513794	ParameterList	"Memento_BlkHeader * memblk , void * arg"		7513565	3					
ANR	7513795	Parameter	Memento_BlkHeader * memblk	2311:42:66247:66271	7513565	0	True				
ANR	7513796	ParameterType	Memento_BlkHeader *		7513565	0					
ANR	7513797	Identifier	memblk		7513565	1					
ANR	7513798	Parameter	void * arg	2311:69:66274:66282	7513565	1	True				
ANR	7513799	ParameterType	void *		7513565	0					
ANR	7513800	Identifier	arg		7513565	1					
ANR	7513801	CFGEntryNode	ENTRY		7513565		True				
ANR	7513802	CFGExitNode	EXIT		7513565		True				
ANR	7513803	Symbol	data		7513565						
ANR	7513804	Symbol	memento		7513565						
ANR	7513805	Symbol	stderr		7513565						
ANR	7513806	Symbol	data -> found		7513565						
ANR	7513807	Symbol	memblk		7513565						
ANR	7513808	Symbol	data -> preCorrupt		7513565						
ANR	7513809	Symbol	MEMBLK_TOBLK		7513565						
ANR	7513810	Symbol	memblk -> lastCheckedOK		7513565						
ANR	7513811	Symbol	data -> postCorrupt		7513565						
ANR	7513812	Symbol	data -> freeCorrupt		7513565						
ANR	7513813	Symbol	arg		7513565						
ANR	7513814	Symbol	data -> index		7513565						
ANR	7513815	Symbol	* memblk		7513565						
ANR	7513816	Symbol	* data		7513565						
ANR	7513817	Symbol	memento . sequence		7513565						
ANR	7513818	Function	Memento_checkAllMemoryLocked	2354:0:67672:68011							
ANR	7513819	FunctionDef	Memento_checkAllMemoryLocked ()		7513818	0					
ANR	7513820	CompoundStatement		2355:0:67718:68011	7513818	0					
ANR	7513821	IdentifierDeclStatement	BlkCheckData data ;	2357:4:67749:67766	7513818	0	True				
ANR	7513822	IdentifierDecl	data		7513818	0					
ANR	7513823	IdentifierDeclType	BlkCheckData		7513818	0					
ANR	7513824	Identifier	data		7513818	1					
ANR	7513825	ExpressionStatement	"memset ( & data , 0 , sizeof ( data ) )"	2359:4:67773:67803	7513818	1	True				
ANR	7513826	CallExpression	"memset ( & data , 0 , sizeof ( data ) )"		7513818	0					
ANR	7513827	Callee	memset		7513818	0					
ANR	7513828	Identifier	memset		7513818	0					
ANR	7513829	ArgumentList	& data		7513818	1					
ANR	7513830	Argument	& data		7513818	0					
ANR	7513831	UnaryOperationExpression	& data		7513818	0					
ANR	7513832	UnaryOperator	&		7513818	0					
ANR	7513833	Identifier	data		7513818	1					
ANR	7513834	Argument	0		7513818	1					
ANR	7513835	PrimaryExpression	0		7513818	0					
ANR	7513836	Argument	sizeof ( data )		7513818	2					
ANR	7513837	SizeofExpression	sizeof ( data )		7513818	0					
ANR	7513838	Sizeof	sizeof		7513818	0					
ANR	7513839	SizeofOperand	data		7513818	1					
ANR	7513840	ExpressionStatement	"Memento_appBlocks ( & memento . used , Memento_Internal_checkAllAlloced , & data )"	2360:4:67809:67882	7513818	2	True				
ANR	7513841	CallExpression	"Memento_appBlocks ( & memento . used , Memento_Internal_checkAllAlloced , & data )"		7513818	0					
ANR	7513842	Callee	Memento_appBlocks		7513818	0					
ANR	7513843	Identifier	Memento_appBlocks		7513818	0					
ANR	7513844	ArgumentList	& memento . used		7513818	1					
ANR	7513845	Argument	& memento . used		7513818	0					
ANR	7513846	UnaryOperationExpression	& memento . used		7513818	0					
ANR	7513847	UnaryOperator	&		7513818	0					
ANR	7513848	MemberAccess	memento . used		7513818	1					
ANR	7513849	Identifier	memento		7513818	0					
ANR	7513850	Identifier	used		7513818	1					
ANR	7513851	Argument	Memento_Internal_checkAllAlloced		7513818	1					
ANR	7513852	Identifier	Memento_Internal_checkAllAlloced		7513818	0					
ANR	7513853	Argument	& data		7513818	2					
ANR	7513854	UnaryOperationExpression	& data		7513818	0					
ANR	7513855	UnaryOperator	&		7513818	0					
ANR	7513856	Identifier	data		7513818	1					
ANR	7513857	ExpressionStatement	"Memento_appBlocks ( & memento . free , Memento_Internal_checkAllFreed , & data )"	2361:4:67888:67959	7513818	3	True				
ANR	7513858	CallExpression	"Memento_appBlocks ( & memento . free , Memento_Internal_checkAllFreed , & data )"		7513818	0					
ANR	7513859	Callee	Memento_appBlocks		7513818	0					
ANR	7513860	Identifier	Memento_appBlocks		7513818	0					
ANR	7513861	ArgumentList	& memento . free		7513818	1					
ANR	7513862	Argument	& memento . free		7513818	0					
ANR	7513863	UnaryOperationExpression	& memento . free		7513818	0					
ANR	7513864	UnaryOperator	&		7513818	0					
ANR	7513865	MemberAccess	memento . free		7513818	1					
ANR	7513866	Identifier	memento		7513818	0					
ANR	7513867	Identifier	free		7513818	1					
ANR	7513868	Argument	Memento_Internal_checkAllFreed		7513818	1					
ANR	7513869	Identifier	Memento_Internal_checkAllFreed		7513818	0					
ANR	7513870	Argument	& data		7513818	2					
ANR	7513871	UnaryOperationExpression	& data		7513818	0					
ANR	7513872	UnaryOperator	&		7513818	0					
ANR	7513873	Identifier	data		7513818	1					
ANR	7513874	ReturnStatement	return data . found ;	2362:4:67965:67982	7513818	4	True				
ANR	7513875	MemberAccess	data . found		7513818	0					
ANR	7513876	Identifier	data		7513818	0					
ANR	7513877	Identifier	found		7513818	1					
ANR	7513878	ReturnType	static int		7513818	1					
ANR	7513879	Identifier	Memento_checkAllMemoryLocked		7513818	2					
ANR	7513880	ParameterList			7513818	3					
ANR	7513881	CFGEntryNode	ENTRY		7513818		True				
ANR	7513882	CFGExitNode	EXIT		7513818		True				
ANR	7513883	Symbol	& memento . free		7513818						
ANR	7513884	Symbol	& memento		7513818						
ANR	7513885	Symbol	Memento_Internal_checkAllAlloced		7513818						
ANR	7513886	Symbol	data		7513818						
ANR	7513887	Symbol	Memento_Internal_checkAllFreed		7513818						
ANR	7513888	Symbol	& memento . used		7513818						
ANR	7513889	Symbol	data . found		7513818						
ANR	7513890	Symbol	memento		7513818						
ANR	7513891	Symbol	& data		7513818						
ANR	7513892	Function	Memento_checkAllMemory	2368:0:68014:68266							
ANR	7513893	FunctionDef	Memento_checkAllMemory ()		7513892	0					
ANR	7513894	CompoundStatement		2369:0:68047:68266	7513892	0					
ANR	7513895	IdentifierDeclStatement	int ret ;	2371:4:68078:68085	7513892	0	True				
ANR	7513896	IdentifierDecl	ret		7513892	0					
ANR	7513897	IdentifierDeclType	int		7513892	0					
ANR	7513898	Identifier	ret		7513892	1					
ANR	7513899	ExpressionStatement	MEMENTO_LOCK ( )	2373:4:68092:68106	7513892	1	True				
ANR	7513900	CallExpression	MEMENTO_LOCK ( )		7513892	0					
ANR	7513901	Callee	MEMENTO_LOCK		7513892	0					
ANR	7513902	Identifier	MEMENTO_LOCK		7513892	0					
ANR	7513903	ArgumentList			7513892	1					
ANR	7513904	ExpressionStatement	ret = Memento_checkAllMemoryLocked ( )	2374:4:68112:68148	7513892	2	True				
ANR	7513905	AssignmentExpression	ret = Memento_checkAllMemoryLocked ( )		7513892	0		=			
ANR	7513906	Identifier	ret		7513892	0					
ANR	7513907	CallExpression	Memento_checkAllMemoryLocked ( )		7513892	1					
ANR	7513908	Callee	Memento_checkAllMemoryLocked		7513892	0					
ANR	7513909	Identifier	Memento_checkAllMemoryLocked		7513892	0					
ANR	7513910	ArgumentList			7513892	1					
ANR	7513911	ExpressionStatement	MEMENTO_UNLOCK ( )	2375:4:68154:68170	7513892	3	True				
ANR	7513912	CallExpression	MEMENTO_UNLOCK ( )		7513892	0					
ANR	7513913	Callee	MEMENTO_UNLOCK		7513892	0					
ANR	7513914	Identifier	MEMENTO_UNLOCK		7513892	0					
ANR	7513915	ArgumentList			7513892	1					
ANR	7513916	IfStatement	if ( ret & 6 )		7513892	4					
ANR	7513917	Condition	ret & 6	2376:8:68180:68186	7513892	0	True				
ANR	7513918	BitAndExpression	ret & 6		7513892	0		&			
ANR	7513919	Identifier	ret		7513892	0					
ANR	7513920	PrimaryExpression	6		7513892	1					
ANR	7513921	CompoundStatement		8:17:141:141	7513892	1					
ANR	7513922	ExpressionStatement	Memento_breakpoint ( )	2377:8:68199:68219	7513892	0	True				
ANR	7513923	CallExpression	Memento_breakpoint ( )		7513892	0					
ANR	7513924	Callee	Memento_breakpoint		7513892	0					
ANR	7513925	Identifier	Memento_breakpoint		7513892	0					
ANR	7513926	ArgumentList			7513892	1					
ANR	7513927	ReturnStatement	return 1 ;	2378:8:68229:68237	7513892	1	True				
ANR	7513928	PrimaryExpression	1		7513892	0					
ANR	7513929	ReturnStatement	return 0 ;	2380:4:68249:68257	7513892	5	True				
ANR	7513930	PrimaryExpression	0		7513892	0					
ANR	7513931	ReturnType	int		7513892	1					
ANR	7513932	Identifier	Memento_checkAllMemory		7513892	2					
ANR	7513933	ParameterList			7513892	3					
ANR	7513934	CFGEntryNode	ENTRY		7513892		True				
ANR	7513935	CFGExitNode	EXIT		7513892		True				
ANR	7513936	Symbol	ret		7513892						
ANR	7513937	Symbol	Memento_checkAllMemoryLocked		7513892						
ANR	7513938	Function	Memento_setParanoia	2384:0:68269:68474							
ANR	7513939	FunctionDef	Memento_setParanoia (int i)		7513938	0					
ANR	7513940	CompoundStatement		2385:0:68300:68474	7513938	0					
ANR	7513941	ExpressionStatement	memento . paranoia = i	2386:4:68306:68326	7513938	0	True				
ANR	7513942	AssignmentExpression	memento . paranoia = i		7513938	0		=			
ANR	7513943	MemberAccess	memento . paranoia		7513938	0					
ANR	7513944	Identifier	memento		7513938	0					
ANR	7513945	Identifier	paranoia		7513938	1					
ANR	7513946	Identifier	i		7513938	1					
ANR	7513947	IfStatement	if ( memento . paranoia > 0 )		7513938	1					
ANR	7513948	Condition	memento . paranoia > 0	2387:8:68336:68355	7513938	0	True				
ANR	7513949	RelationalExpression	memento . paranoia > 0		7513938	0		>			
ANR	7513950	MemberAccess	memento . paranoia		7513938	0					
ANR	7513951	Identifier	memento		7513938	0					
ANR	7513952	Identifier	paranoia		7513938	1					
ANR	7513953	PrimaryExpression	0		7513938	1					
ANR	7513954	ExpressionStatement	memento . countdown = memento . paranoia	2388:8:68366:68402	7513938	1	True				
ANR	7513955	AssignmentExpression	memento . countdown = memento . paranoia		7513938	0		=			
ANR	7513956	MemberAccess	memento . countdown		7513938	0					
ANR	7513957	Identifier	memento		7513938	0					
ANR	7513958	Identifier	countdown		7513938	1					
ANR	7513959	MemberAccess	memento . paranoia		7513938	1					
ANR	7513960	Identifier	memento		7513938	0					
ANR	7513961	Identifier	paranoia		7513938	1					
ANR	7513962	ElseStatement	else		7513938	0					
ANR	7513963	ExpressionStatement	memento . countdown = - memento . paranoia	2390:8:68421:68458	7513938	0	True				
ANR	7513964	AssignmentExpression	memento . countdown = - memento . paranoia		7513938	0		=			
ANR	7513965	MemberAccess	memento . countdown		7513938	0					
ANR	7513966	Identifier	memento		7513938	0					
ANR	7513967	Identifier	countdown		7513938	1					
ANR	7513968	UnaryOperationExpression	- memento . paranoia		7513938	1					
ANR	7513969	UnaryOperator	-		7513938	0					
ANR	7513970	MemberAccess	memento . paranoia		7513938	1					
ANR	7513971	Identifier	memento		7513938	0					
ANR	7513972	Identifier	paranoia		7513938	1					
ANR	7513973	ReturnStatement	return i ;	2391:4:68464:68472	7513938	2	True				
ANR	7513974	Identifier	i		7513938	0					
ANR	7513975	ReturnType	int		7513938	1					
ANR	7513976	Identifier	Memento_setParanoia		7513938	2					
ANR	7513977	ParameterList	int i		7513938	3					
ANR	7513978	Parameter	int i	2384:24:68293:68297	7513938	0	True				
ANR	7513979	ParameterType	int		7513938	0					
ANR	7513980	Identifier	i		7513938	1					
ANR	7513981	CFGEntryNode	ENTRY		7513938		True				
ANR	7513982	CFGExitNode	EXIT		7513938		True				
ANR	7513983	Symbol	memento . paranoia		7513938						
ANR	7513984	Symbol	i		7513938						
ANR	7513985	Symbol	memento		7513938						
ANR	7513986	Symbol	memento . countdown		7513938						
ANR	7513987	Function	Memento_paranoidAt	2394:0:68477:68551							
ANR	7513988	FunctionDef	Memento_paranoidAt (int i)		7513987	0					
ANR	7513989	CompoundStatement		2395:0:68507:68551	7513987	0					
ANR	7513990	ExpressionStatement	memento . paranoidAt = i	2396:4:68513:68535	7513987	0	True				
ANR	7513991	AssignmentExpression	memento . paranoidAt = i		7513987	0		=			
ANR	7513992	MemberAccess	memento . paranoidAt		7513987	0					
ANR	7513993	Identifier	memento		7513987	0					
ANR	7513994	Identifier	paranoidAt		7513987	1					
ANR	7513995	Identifier	i		7513987	1					
ANR	7513996	ReturnStatement	return i ;	2397:4:68541:68549	7513987	1	True				
ANR	7513997	Identifier	i		7513987	0					
ANR	7513998	ReturnType	int		7513987	1					
ANR	7513999	Identifier	Memento_paranoidAt		7513987	2					
ANR	7514000	ParameterList	int i		7513987	3					
ANR	7514001	Parameter	int i	2394:23:68500:68504	7513987	0	True				
ANR	7514002	ParameterType	int		7513987	0					
ANR	7514003	Identifier	i		7513987	1					
ANR	7514004	CFGEntryNode	ENTRY		7513987		True				
ANR	7514005	CFGExitNode	EXIT		7513987		True				
ANR	7514006	Symbol	memento . paranoidAt		7513987						
ANR	7514007	Symbol	i		7513987						
ANR	7514008	Symbol	memento		7513987						
ANR	7514009	Function	Memento_getBlockNum	2400:0:68554:68720							
ANR	7514010	FunctionDef	Memento_getBlockNum (void * b)		7514009	0					
ANR	7514011	CompoundStatement		2401:0:68587:68720	7514009	0					
ANR	7514012	IdentifierDeclStatement	Memento_BlkHeader * memblk ;	2402:4:68593:68618	7514009	0	True				
ANR	7514013	IdentifierDecl	* memblk		7514009	0					
ANR	7514014	IdentifierDeclType	Memento_BlkHeader *		7514009	0					
ANR	7514015	Identifier	memblk		7514009	1					
ANR	7514016	IfStatement	if ( b == NULL )		7514009	1					
ANR	7514017	Condition	b == NULL	2403:8:68628:68636	7514009	0	True				
ANR	7514018	EqualityExpression	b == NULL		7514009	0		==			
ANR	7514019	Identifier	b		7514009	0					
ANR	7514020	Identifier	NULL		7514009	1					
ANR	7514021	ReturnStatement	return 0 ;	2404:8:68647:68655	7514009	1	True				
ANR	7514022	PrimaryExpression	0		7514009	0					
ANR	7514023	ExpressionStatement	memblk = MEMBLK_FROMBLK ( b )	2405:4:68661:68687	7514009	2	True				
ANR	7514024	AssignmentExpression	memblk = MEMBLK_FROMBLK ( b )		7514009	0		=			
ANR	7514025	Identifier	memblk		7514009	0					
ANR	7514026	CallExpression	MEMBLK_FROMBLK ( b )		7514009	1					
ANR	7514027	Callee	MEMBLK_FROMBLK		7514009	0					
ANR	7514028	Identifier	MEMBLK_FROMBLK		7514009	0					
ANR	7514029	ArgumentList	b		7514009	1					
ANR	7514030	Argument	b		7514009	0					
ANR	7514031	Identifier	b		7514009	0					
ANR	7514032	ReturnStatement	return ( memblk -> sequence ) ;	2406:4:68693:68718	7514009	3	True				
ANR	7514033	PtrMemberAccess	memblk -> sequence		7514009	0					
ANR	7514034	Identifier	memblk		7514009	0					
ANR	7514035	Identifier	sequence		7514009	1					
ANR	7514036	ReturnType	int		7514009	1					
ANR	7514037	Identifier	Memento_getBlockNum		7514009	2					
ANR	7514038	ParameterList	void * b		7514009	3					
ANR	7514039	Parameter	void * b	2400:24:68578:68584	7514009	0	True				
ANR	7514040	ParameterType	void *		7514009	0					
ANR	7514041	Identifier	b		7514009	1					
ANR	7514042	CFGEntryNode	ENTRY		7514009		True				
ANR	7514043	CFGExitNode	EXIT		7514009		True				
ANR	7514044	Symbol	b		7514009						
ANR	7514045	Symbol	NULL		7514009						
ANR	7514046	Symbol	MEMBLK_FROMBLK		7514009						
ANR	7514047	Symbol	* memblk		7514009						
ANR	7514048	Symbol	memblk -> sequence		7514009						
ANR	7514049	Symbol	memblk		7514009						
ANR	7514050	Function	Memento_check	2409:0:68723:68908							
ANR	7514051	FunctionDef	Memento_check ()		7514050	0					
ANR	7514052	CompoundStatement		2410:0:68747:68908	7514050	0					
ANR	7514053	IdentifierDeclStatement	int result ;	2411:4:68753:68763	7514050	0	True				
ANR	7514054	IdentifierDecl	result		7514050	0					
ANR	7514055	IdentifierDeclType	int		7514050	0					
ANR	7514056	Identifier	result		7514050	1					
ANR	7514057	ExpressionStatement	"fprintf ( stderr , ""Checking memory\\n"" )"	2413:4:68770:68806	7514050	1	True				
ANR	7514058	CallExpression	"fprintf ( stderr , ""Checking memory\\n"" )"		7514050	0					
ANR	7514059	Callee	fprintf		7514050	0					
ANR	7514060	Identifier	fprintf		7514050	0					
ANR	7514061	ArgumentList	stderr		7514050	1					
ANR	7514062	Argument	stderr		7514050	0					
ANR	7514063	Identifier	stderr		7514050	0					
ANR	7514064	Argument	"""Checking memory\\n"""		7514050	1					
ANR	7514065	PrimaryExpression	"""Checking memory\\n"""		7514050	0					
ANR	7514066	ExpressionStatement	result = Memento_checkAllMemory ( )	2414:4:68812:68845	7514050	2	True				
ANR	7514067	AssignmentExpression	result = Memento_checkAllMemory ( )		7514050	0		=			
ANR	7514068	Identifier	result		7514050	0					
ANR	7514069	CallExpression	Memento_checkAllMemory ( )		7514050	1					
ANR	7514070	Callee	Memento_checkAllMemory		7514050	0					
ANR	7514071	Identifier	Memento_checkAllMemory		7514050	0					
ANR	7514072	ArgumentList			7514050	1					
ANR	7514073	ExpressionStatement	"fprintf ( stderr , ""Memory checked!\\n"" )"	2415:4:68851:68887	7514050	3	True				
ANR	7514074	CallExpression	"fprintf ( stderr , ""Memory checked!\\n"" )"		7514050	0					
ANR	7514075	Callee	fprintf		7514050	0					
ANR	7514076	Identifier	fprintf		7514050	0					
ANR	7514077	ArgumentList	stderr		7514050	1					
ANR	7514078	Argument	stderr		7514050	0					
ANR	7514079	Identifier	stderr		7514050	0					
ANR	7514080	Argument	"""Memory checked!\\n"""		7514050	1					
ANR	7514081	PrimaryExpression	"""Memory checked!\\n"""		7514050	0					
ANR	7514082	ReturnStatement	return result ;	2416:4:68893:68906	7514050	4	True				
ANR	7514083	Identifier	result		7514050	0					
ANR	7514084	ReturnType	int		7514050	1					
ANR	7514085	Identifier	Memento_check		7514050	2					
ANR	7514086	ParameterList			7514050	3					
ANR	7514087	CFGEntryNode	ENTRY		7514050		True				
ANR	7514088	CFGExitNode	EXIT		7514050		True				
ANR	7514089	Symbol	result		7514050						
ANR	7514090	Symbol	Memento_checkAllMemory		7514050						
ANR	7514091	Symbol	stderr		7514050						
ANR	7514092	Function	Memento_find	2419:0:68911:70032							
ANR	7514093	FunctionDef	Memento_find (void * a)		7514092	0					
ANR	7514094	CompoundStatement		2420:0:68937:70032	7514092	0					
ANR	7514095	IdentifierDeclStatement	findBlkData data ;	2421:4:68943:68959	7514092	0	True				
ANR	7514096	IdentifierDecl	data		7514092	0					
ANR	7514097	IdentifierDeclType	findBlkData		7514092	0					
ANR	7514098	Identifier	data		7514092	1					
ANR	7514099	ExpressionStatement	MEMENTO_LOCK ( )	2423:4:68966:68980	7514092	1	True				
ANR	7514100	CallExpression	MEMENTO_LOCK ( )		7514092	0					
ANR	7514101	Callee	MEMENTO_LOCK		7514092	0					
ANR	7514102	Identifier	MEMENTO_LOCK		7514092	0					
ANR	7514103	ArgumentList			7514092	1					
ANR	7514104	ExpressionStatement	data . addr = a	2424:4:68986:69000	7514092	2	True				
ANR	7514105	AssignmentExpression	data . addr = a		7514092	0		=			
ANR	7514106	MemberAccess	data . addr		7514092	0					
ANR	7514107	Identifier	data		7514092	0					
ANR	7514108	Identifier	addr		7514092	1					
ANR	7514109	Identifier	a		7514092	1					
ANR	7514110	ExpressionStatement	data . blk = NULL	2425:4:69006:69023	7514092	3	True				
ANR	7514111	AssignmentExpression	data . blk = NULL		7514092	0		=			
ANR	7514112	MemberAccess	data . blk		7514092	0					
ANR	7514113	Identifier	data		7514092	0					
ANR	7514114	Identifier	blk		7514092	1					
ANR	7514115	Identifier	NULL		7514092	1					
ANR	7514116	ExpressionStatement	data . flags = 0	2426:4:69029:69043	7514092	4	True				
ANR	7514117	AssignmentExpression	data . flags = 0		7514092	0		=			
ANR	7514118	MemberAccess	data . flags		7514092	0					
ANR	7514119	Identifier	data		7514092	0					
ANR	7514120	Identifier	flags		7514092	1					
ANR	7514121	PrimaryExpression	0		7514092	1					
ANR	7514122	ExpressionStatement	"Memento_appBlocks ( & memento . used , Memento_containsAddr , & data )"	2427:4:69049:69110	7514092	5	True				
ANR	7514123	CallExpression	"Memento_appBlocks ( & memento . used , Memento_containsAddr , & data )"		7514092	0					
ANR	7514124	Callee	Memento_appBlocks		7514092	0					
ANR	7514125	Identifier	Memento_appBlocks		7514092	0					
ANR	7514126	ArgumentList	& memento . used		7514092	1					
ANR	7514127	Argument	& memento . used		7514092	0					
ANR	7514128	UnaryOperationExpression	& memento . used		7514092	0					
ANR	7514129	UnaryOperator	&		7514092	0					
ANR	7514130	MemberAccess	memento . used		7514092	1					
ANR	7514131	Identifier	memento		7514092	0					
ANR	7514132	Identifier	used		7514092	1					
ANR	7514133	Argument	Memento_containsAddr		7514092	1					
ANR	7514134	Identifier	Memento_containsAddr		7514092	0					
ANR	7514135	Argument	& data		7514092	2					
ANR	7514136	UnaryOperationExpression	& data		7514092	0					
ANR	7514137	UnaryOperator	&		7514092	0					
ANR	7514138	Identifier	data		7514092	1					
ANR	7514139	IfStatement	if ( data . blk != NULL )		7514092	6					
ANR	7514140	Condition	data . blk != NULL	2428:8:69120:69135	7514092	0	True				
ANR	7514141	EqualityExpression	data . blk != NULL		7514092	0		!=			
ANR	7514142	MemberAccess	data . blk		7514092	0					
ANR	7514143	Identifier	data		7514092	0					
ANR	7514144	Identifier	blk		7514092	1					
ANR	7514145	Identifier	NULL		7514092	1					
ANR	7514146	CompoundStatement		9:26:200:200	7514092	1					
ANR	7514147	ExpressionStatement	"fprintf ( stderr , ""Address 0x%p is in %sallocated block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"	2429:8:69148:69367	7514092	0	True				
ANR	7514148	CallExpression	"fprintf ( stderr , ""Address 0x%p is in %sallocated block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"		7514092	0					
ANR	7514149	Callee	fprintf		7514092	0					
ANR	7514150	Identifier	fprintf		7514092	0					
ANR	7514151	ArgumentList	stderr		7514092	1					
ANR	7514152	Argument	stderr		7514092	0					
ANR	7514153	Identifier	stderr		7514092	0					
ANR	7514154	Argument	"""Address 0x%p is in %sallocated block """		7514092	1					
ANR	7514155	PrimaryExpression	"""Address 0x%p is in %sallocated block """		7514092	0					
ANR	7514156	Argument	data . addr		7514092	2					
ANR	7514157	MemberAccess	data . addr		7514092	0					
ANR	7514158	Identifier	data		7514092	0					
ANR	7514159	Identifier	addr		7514092	1					
ANR	7514160	Argument	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		7514092	3					
ANR	7514161	ConditionalExpression	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		7514092	0					
ANR	7514162	Condition	data . flags == 1		7514092	0					
ANR	7514163	EqualityExpression	data . flags == 1		7514092	0		==			
ANR	7514164	MemberAccess	data . flags		7514092	0					
ANR	7514165	Identifier	data		7514092	0					
ANR	7514166	Identifier	flags		7514092	1					
ANR	7514167	PrimaryExpression	1		7514092	1					
ANR	7514168	PrimaryExpression	""""""		7514092	1					
ANR	7514169	ConditionalExpression	"data . flags == 2 ? ""preguard of "" : ""postguard of """		7514092	2					
ANR	7514170	Condition	data . flags == 2		7514092	0					
ANR	7514171	EqualityExpression	data . flags == 2		7514092	0		==			
ANR	7514172	MemberAccess	data . flags		7514092	0					
ANR	7514173	Identifier	data		7514092	0					
ANR	7514174	Identifier	flags		7514092	1					
ANR	7514175	PrimaryExpression	2		7514092	1					
ANR	7514176	PrimaryExpression	"""preguard of """		7514092	1					
ANR	7514177	PrimaryExpression	"""postguard of """		7514092	2					
ANR	7514178	ExpressionStatement	"showBlock ( data . blk , ' ' )"	2433:8:69377:69401	7514092	1	True				
ANR	7514179	CallExpression	"showBlock ( data . blk , ' ' )"		7514092	0					
ANR	7514180	Callee	showBlock		7514092	0					
ANR	7514181	Identifier	showBlock		7514092	0					
ANR	7514182	ArgumentList	data . blk		7514092	1					
ANR	7514183	Argument	data . blk		7514092	0					
ANR	7514184	MemberAccess	data . blk		7514092	0					
ANR	7514185	Identifier	data		7514092	0					
ANR	7514186	Identifier	blk		7514092	1					
ANR	7514187	Argument	' '		7514092	1					
ANR	7514188	PrimaryExpression	' '		7514092	0					
ANR	7514189	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	2434:8:69411:69432	7514092	2	True				
ANR	7514190	CallExpression	"fprintf ( stderr , ""\\n"" )"		7514092	0					
ANR	7514191	Callee	fprintf		7514092	0					
ANR	7514192	Identifier	fprintf		7514092	0					
ANR	7514193	ArgumentList	stderr		7514092	1					
ANR	7514194	Argument	stderr		7514092	0					
ANR	7514195	Identifier	stderr		7514092	0					
ANR	7514196	Argument	"""\\n"""		7514092	1					
ANR	7514197	PrimaryExpression	"""\\n"""		7514092	0					
ANR	7514198	ExpressionStatement	MEMENTO_UNLOCK ( )	2435:8:69442:69458	7514092	3	True				
ANR	7514199	CallExpression	MEMENTO_UNLOCK ( )		7514092	0					
ANR	7514200	Callee	MEMENTO_UNLOCK		7514092	0					
ANR	7514201	Identifier	MEMENTO_UNLOCK		7514092	0					
ANR	7514202	ArgumentList			7514092	1					
ANR	7514203	ReturnStatement	return data . blk -> sequence ;	2436:8:69468:69493	7514092	4	True				
ANR	7514204	PtrMemberAccess	data . blk -> sequence		7514092	0					
ANR	7514205	MemberAccess	data . blk		7514092	0					
ANR	7514206	Identifier	data		7514092	0					
ANR	7514207	Identifier	blk		7514092	1					
ANR	7514208	Identifier	sequence		7514092	1					
ANR	7514209	ExpressionStatement	data . blk = NULL	2438:4:69505:69522	7514092	7	True				
ANR	7514210	AssignmentExpression	data . blk = NULL		7514092	0		=			
ANR	7514211	MemberAccess	data . blk		7514092	0					
ANR	7514212	Identifier	data		7514092	0					
ANR	7514213	Identifier	blk		7514092	1					
ANR	7514214	Identifier	NULL		7514092	1					
ANR	7514215	ExpressionStatement	data . flags = 0	2439:4:69528:69542	7514092	8	True				
ANR	7514216	AssignmentExpression	data . flags = 0		7514092	0		=			
ANR	7514217	MemberAccess	data . flags		7514092	0					
ANR	7514218	Identifier	data		7514092	0					
ANR	7514219	Identifier	flags		7514092	1					
ANR	7514220	PrimaryExpression	0		7514092	1					
ANR	7514221	ExpressionStatement	"Memento_appBlocks ( & memento . free , Memento_containsAddr , & data )"	2440:4:69548:69609	7514092	9	True				
ANR	7514222	CallExpression	"Memento_appBlocks ( & memento . free , Memento_containsAddr , & data )"		7514092	0					
ANR	7514223	Callee	Memento_appBlocks		7514092	0					
ANR	7514224	Identifier	Memento_appBlocks		7514092	0					
ANR	7514225	ArgumentList	& memento . free		7514092	1					
ANR	7514226	Argument	& memento . free		7514092	0					
ANR	7514227	UnaryOperationExpression	& memento . free		7514092	0					
ANR	7514228	UnaryOperator	&		7514092	0					
ANR	7514229	MemberAccess	memento . free		7514092	1					
ANR	7514230	Identifier	memento		7514092	0					
ANR	7514231	Identifier	free		7514092	1					
ANR	7514232	Argument	Memento_containsAddr		7514092	1					
ANR	7514233	Identifier	Memento_containsAddr		7514092	0					
ANR	7514234	Argument	& data		7514092	2					
ANR	7514235	UnaryOperationExpression	& data		7514092	0					
ANR	7514236	UnaryOperator	&		7514092	0					
ANR	7514237	Identifier	data		7514092	1					
ANR	7514238	IfStatement	if ( data . blk != NULL )		7514092	10					
ANR	7514239	Condition	data . blk != NULL	2441:8:69619:69634	7514092	0	True				
ANR	7514240	EqualityExpression	data . blk != NULL		7514092	0		!=			
ANR	7514241	MemberAccess	data . blk		7514092	0					
ANR	7514242	Identifier	data		7514092	0					
ANR	7514243	Identifier	blk		7514092	1					
ANR	7514244	Identifier	NULL		7514092	1					
ANR	7514245	CompoundStatement		22:26:699:699	7514092	1					
ANR	7514246	ExpressionStatement	"fprintf ( stderr , ""Address 0x%p is in %sfreed block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"	2442:8:69647:69862	7514092	0	True				
ANR	7514247	CallExpression	"fprintf ( stderr , ""Address 0x%p is in %sfreed block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"		7514092	0					
ANR	7514248	Callee	fprintf		7514092	0					
ANR	7514249	Identifier	fprintf		7514092	0					
ANR	7514250	ArgumentList	stderr		7514092	1					
ANR	7514251	Argument	stderr		7514092	0					
ANR	7514252	Identifier	stderr		7514092	0					
ANR	7514253	Argument	"""Address 0x%p is in %sfreed block """		7514092	1					
ANR	7514254	PrimaryExpression	"""Address 0x%p is in %sfreed block """		7514092	0					
ANR	7514255	Argument	data . addr		7514092	2					
ANR	7514256	MemberAccess	data . addr		7514092	0					
ANR	7514257	Identifier	data		7514092	0					
ANR	7514258	Identifier	addr		7514092	1					
ANR	7514259	Argument	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		7514092	3					
ANR	7514260	ConditionalExpression	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		7514092	0					
ANR	7514261	Condition	data . flags == 1		7514092	0					
ANR	7514262	EqualityExpression	data . flags == 1		7514092	0		==			
ANR	7514263	MemberAccess	data . flags		7514092	0					
ANR	7514264	Identifier	data		7514092	0					
ANR	7514265	Identifier	flags		7514092	1					
ANR	7514266	PrimaryExpression	1		7514092	1					
ANR	7514267	PrimaryExpression	""""""		7514092	1					
ANR	7514268	ConditionalExpression	"data . flags == 2 ? ""preguard of "" : ""postguard of """		7514092	2					
ANR	7514269	Condition	data . flags == 2		7514092	0					
ANR	7514270	EqualityExpression	data . flags == 2		7514092	0		==			
ANR	7514271	MemberAccess	data . flags		7514092	0					
ANR	7514272	Identifier	data		7514092	0					
ANR	7514273	Identifier	flags		7514092	1					
ANR	7514274	PrimaryExpression	2		7514092	1					
ANR	7514275	PrimaryExpression	"""preguard of """		7514092	1					
ANR	7514276	PrimaryExpression	"""postguard of """		7514092	2					
ANR	7514277	ExpressionStatement	"showBlock ( data . blk , ' ' )"	2446:8:69872:69896	7514092	1	True				
ANR	7514278	CallExpression	"showBlock ( data . blk , ' ' )"		7514092	0					
ANR	7514279	Callee	showBlock		7514092	0					
ANR	7514280	Identifier	showBlock		7514092	0					
ANR	7514281	ArgumentList	data . blk		7514092	1					
ANR	7514282	Argument	data . blk		7514092	0					
ANR	7514283	MemberAccess	data . blk		7514092	0					
ANR	7514284	Identifier	data		7514092	0					
ANR	7514285	Identifier	blk		7514092	1					
ANR	7514286	Argument	' '		7514092	1					
ANR	7514287	PrimaryExpression	' '		7514092	0					
ANR	7514288	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	2447:8:69906:69927	7514092	2	True				
ANR	7514289	CallExpression	"fprintf ( stderr , ""\\n"" )"		7514092	0					
ANR	7514290	Callee	fprintf		7514092	0					
ANR	7514291	Identifier	fprintf		7514092	0					
ANR	7514292	ArgumentList	stderr		7514092	1					
ANR	7514293	Argument	stderr		7514092	0					
ANR	7514294	Identifier	stderr		7514092	0					
ANR	7514295	Argument	"""\\n"""		7514092	1					
ANR	7514296	PrimaryExpression	"""\\n"""		7514092	0					
ANR	7514297	ExpressionStatement	MEMENTO_UNLOCK ( )	2448:8:69937:69953	7514092	3	True				
ANR	7514298	CallExpression	MEMENTO_UNLOCK ( )		7514092	0					
ANR	7514299	Callee	MEMENTO_UNLOCK		7514092	0					
ANR	7514300	Identifier	MEMENTO_UNLOCK		7514092	0					
ANR	7514301	ArgumentList			7514092	1					
ANR	7514302	ReturnStatement	return data . blk -> sequence ;	2449:8:69963:69988	7514092	4	True				
ANR	7514303	PtrMemberAccess	data . blk -> sequence		7514092	0					
ANR	7514304	MemberAccess	data . blk		7514092	0					
ANR	7514305	Identifier	data		7514092	0					
ANR	7514306	Identifier	blk		7514092	1					
ANR	7514307	Identifier	sequence		7514092	1					
ANR	7514308	ExpressionStatement	MEMENTO_UNLOCK ( )	2451:4:70000:70016	7514092	11	True				
ANR	7514309	CallExpression	MEMENTO_UNLOCK ( )		7514092	0					
ANR	7514310	Callee	MEMENTO_UNLOCK		7514092	0					
ANR	7514311	Identifier	MEMENTO_UNLOCK		7514092	0					
ANR	7514312	ArgumentList			7514092	1					
ANR	7514313	ReturnStatement	return 0 ;	2452:4:70022:70030	7514092	12	True				
ANR	7514314	PrimaryExpression	0		7514092	0					
ANR	7514315	ReturnType	int		7514092	1					
ANR	7514316	Identifier	Memento_find		7514092	2					
ANR	7514317	ParameterList	void * a		7514092	3					
ANR	7514318	Parameter	void * a	2419:17:68928:68934	7514092	0	True				
ANR	7514319	ParameterType	void *		7514092	0					
ANR	7514320	Identifier	a		7514092	1					
ANR	7514321	CFGEntryNode	ENTRY		7514092		True				
ANR	7514322	CFGExitNode	EXIT		7514092		True				
ANR	7514323	Symbol	& memento . free		7514092						
ANR	7514324	Symbol	a		7514092						
ANR	7514325	Symbol	& memento		7514092						
ANR	7514326	Symbol	NULL		7514092						
ANR	7514327	Symbol	data		7514092						
ANR	7514328	Symbol	memento		7514092						
ANR	7514329	Symbol	stderr		7514092						
ANR	7514330	Symbol	data . addr		7514092						
ANR	7514331	Symbol	& data		7514092						
ANR	7514332	Symbol	data . blk		7514092						
ANR	7514333	Symbol	data . flags		7514092						
ANR	7514334	Symbol	& memento . used		7514092						
ANR	7514335	Symbol	Memento_containsAddr		7514092						
ANR	7514336	Symbol	* data		7514092						
ANR	7514337	Symbol	* data . blk		7514092						
ANR	7514338	Symbol	data . blk -> sequence		7514092						
ANR	7514339	Function	Memento_breakOnFree	2455:0:70035:71295							
ANR	7514340	FunctionDef	Memento_breakOnFree (void * a)		7514339	0					
ANR	7514341	CompoundStatement		2456:0:70069:71295	7514339	0					
ANR	7514342	IdentifierDeclStatement	findBlkData data ;	2457:4:70075:70091	7514339	0	True				
ANR	7514343	IdentifierDecl	data		7514339	0					
ANR	7514344	IdentifierDeclType	findBlkData		7514339	0					
ANR	7514345	Identifier	data		7514339	1					
ANR	7514346	ExpressionStatement	MEMENTO_LOCK ( )	2459:4:70098:70112	7514339	1	True				
ANR	7514347	CallExpression	MEMENTO_LOCK ( )		7514339	0					
ANR	7514348	Callee	MEMENTO_LOCK		7514339	0					
ANR	7514349	Identifier	MEMENTO_LOCK		7514339	0					
ANR	7514350	ArgumentList			7514339	1					
ANR	7514351	ExpressionStatement	data . addr = a	2460:4:70118:70132	7514339	2	True				
ANR	7514352	AssignmentExpression	data . addr = a		7514339	0		=			
ANR	7514353	MemberAccess	data . addr		7514339	0					
ANR	7514354	Identifier	data		7514339	0					
ANR	7514355	Identifier	addr		7514339	1					
ANR	7514356	Identifier	a		7514339	1					
ANR	7514357	ExpressionStatement	data . blk = NULL	2461:4:70138:70155	7514339	3	True				
ANR	7514358	AssignmentExpression	data . blk = NULL		7514339	0		=			
ANR	7514359	MemberAccess	data . blk		7514339	0					
ANR	7514360	Identifier	data		7514339	0					
ANR	7514361	Identifier	blk		7514339	1					
ANR	7514362	Identifier	NULL		7514339	1					
ANR	7514363	ExpressionStatement	data . flags = 0	2462:4:70161:70175	7514339	4	True				
ANR	7514364	AssignmentExpression	data . flags = 0		7514339	0		=			
ANR	7514365	MemberAccess	data . flags		7514339	0					
ANR	7514366	Identifier	data		7514339	0					
ANR	7514367	Identifier	flags		7514339	1					
ANR	7514368	PrimaryExpression	0		7514339	1					
ANR	7514369	ExpressionStatement	"Memento_appBlocks ( & memento . used , Memento_containsAddr , & data )"	2463:4:70181:70242	7514339	5	True				
ANR	7514370	CallExpression	"Memento_appBlocks ( & memento . used , Memento_containsAddr , & data )"		7514339	0					
ANR	7514371	Callee	Memento_appBlocks		7514339	0					
ANR	7514372	Identifier	Memento_appBlocks		7514339	0					
ANR	7514373	ArgumentList	& memento . used		7514339	1					
ANR	7514374	Argument	& memento . used		7514339	0					
ANR	7514375	UnaryOperationExpression	& memento . used		7514339	0					
ANR	7514376	UnaryOperator	&		7514339	0					
ANR	7514377	MemberAccess	memento . used		7514339	1					
ANR	7514378	Identifier	memento		7514339	0					
ANR	7514379	Identifier	used		7514339	1					
ANR	7514380	Argument	Memento_containsAddr		7514339	1					
ANR	7514381	Identifier	Memento_containsAddr		7514339	0					
ANR	7514382	Argument	& data		7514339	2					
ANR	7514383	UnaryOperationExpression	& data		7514339	0					
ANR	7514384	UnaryOperator	&		7514339	0					
ANR	7514385	Identifier	data		7514339	1					
ANR	7514386	IfStatement	if ( data . blk != NULL )		7514339	6					
ANR	7514387	Condition	data . blk != NULL	2464:8:70252:70267	7514339	0	True				
ANR	7514388	EqualityExpression	data . blk != NULL		7514339	0		!=			
ANR	7514389	MemberAccess	data . blk		7514339	0					
ANR	7514390	Identifier	data		7514339	0					
ANR	7514391	Identifier	blk		7514339	1					
ANR	7514392	Identifier	NULL		7514339	1					
ANR	7514393	CompoundStatement		9:26:200:200	7514339	1					
ANR	7514394	ExpressionStatement	"fprintf ( stderr , ""Will stop when address 0x%p (in %sallocated block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"	2465:8:70280:70512	7514339	0	True				
ANR	7514395	CallExpression	"fprintf ( stderr , ""Will stop when address 0x%p (in %sallocated block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"		7514339	0					
ANR	7514396	Callee	fprintf		7514339	0					
ANR	7514397	Identifier	fprintf		7514339	0					
ANR	7514398	ArgumentList	stderr		7514339	1					
ANR	7514399	Argument	stderr		7514339	0					
ANR	7514400	Identifier	stderr		7514339	0					
ANR	7514401	Argument	"""Will stop when address 0x%p (in %sallocated block """		7514339	1					
ANR	7514402	PrimaryExpression	"""Will stop when address 0x%p (in %sallocated block """		7514339	0					
ANR	7514403	Argument	data . addr		7514339	2					
ANR	7514404	MemberAccess	data . addr		7514339	0					
ANR	7514405	Identifier	data		7514339	0					
ANR	7514406	Identifier	addr		7514339	1					
ANR	7514407	Argument	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		7514339	3					
ANR	7514408	ConditionalExpression	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		7514339	0					
ANR	7514409	Condition	data . flags == 1		7514339	0					
ANR	7514410	EqualityExpression	data . flags == 1		7514339	0		==			
ANR	7514411	MemberAccess	data . flags		7514339	0					
ANR	7514412	Identifier	data		7514339	0					
ANR	7514413	Identifier	flags		7514339	1					
ANR	7514414	PrimaryExpression	1		7514339	1					
ANR	7514415	PrimaryExpression	""""""		7514339	1					
ANR	7514416	ConditionalExpression	"data . flags == 2 ? ""preguard of "" : ""postguard of """		7514339	2					
ANR	7514417	Condition	data . flags == 2		7514339	0					
ANR	7514418	EqualityExpression	data . flags == 2		7514339	0		==			
ANR	7514419	MemberAccess	data . flags		7514339	0					
ANR	7514420	Identifier	data		7514339	0					
ANR	7514421	Identifier	flags		7514339	1					
ANR	7514422	PrimaryExpression	2		7514339	1					
ANR	7514423	PrimaryExpression	"""preguard of """		7514339	1					
ANR	7514424	PrimaryExpression	"""postguard of """		7514339	2					
ANR	7514425	ExpressionStatement	"showBlock ( data . blk , ' ' )"	2469:8:70522:70546	7514339	1	True				
ANR	7514426	CallExpression	"showBlock ( data . blk , ' ' )"		7514339	0					
ANR	7514427	Callee	showBlock		7514339	0					
ANR	7514428	Identifier	showBlock		7514339	0					
ANR	7514429	ArgumentList	data . blk		7514339	1					
ANR	7514430	Argument	data . blk		7514339	0					
ANR	7514431	MemberAccess	data . blk		7514339	0					
ANR	7514432	Identifier	data		7514339	0					
ANR	7514433	Identifier	blk		7514339	1					
ANR	7514434	Argument	' '		7514339	1					
ANR	7514435	PrimaryExpression	' '		7514339	0					
ANR	7514436	ExpressionStatement	"fprintf ( stderr , "") is freed\\n"" )"	2470:8:70556:70587	7514339	2	True				
ANR	7514437	CallExpression	"fprintf ( stderr , "") is freed\\n"" )"		7514339	0					
ANR	7514438	Callee	fprintf		7514339	0					
ANR	7514439	Identifier	fprintf		7514339	0					
ANR	7514440	ArgumentList	stderr		7514339	1					
ANR	7514441	Argument	stderr		7514339	0					
ANR	7514442	Identifier	stderr		7514339	0					
ANR	7514443	Argument	""") is freed\\n"""		7514339	1					
ANR	7514444	PrimaryExpression	""") is freed\\n"""		7514339	0					
ANR	7514445	ExpressionStatement	data . blk -> flags |= Memento_Flag_BreakOnFree	2471:8:70597:70640	7514339	3	True				
ANR	7514446	AssignmentExpression	data . blk -> flags |= Memento_Flag_BreakOnFree		7514339	0		|=			
ANR	7514447	PtrMemberAccess	data . blk -> flags		7514339	0					
ANR	7514448	MemberAccess	data . blk		7514339	0					
ANR	7514449	Identifier	data		7514339	0					
ANR	7514450	Identifier	blk		7514339	1					
ANR	7514451	Identifier	flags		7514339	1					
ANR	7514452	Identifier	Memento_Flag_BreakOnFree		7514339	1					
ANR	7514453	ExpressionStatement	MEMENTO_UNLOCK ( )	2472:8:70650:70666	7514339	4	True				
ANR	7514454	CallExpression	MEMENTO_UNLOCK ( )		7514339	0					
ANR	7514455	Callee	MEMENTO_UNLOCK		7514339	0					
ANR	7514456	Identifier	MEMENTO_UNLOCK		7514339	0					
ANR	7514457	ArgumentList			7514339	1					
ANR	7514458	ReturnStatement	return ;	2473:8:70676:70682	7514339	5	True				
ANR	7514459	ExpressionStatement	data . blk = NULL	2475:4:70694:70711	7514339	7	True				
ANR	7514460	AssignmentExpression	data . blk = NULL		7514339	0		=			
ANR	7514461	MemberAccess	data . blk		7514339	0					
ANR	7514462	Identifier	data		7514339	0					
ANR	7514463	Identifier	blk		7514339	1					
ANR	7514464	Identifier	NULL		7514339	1					
ANR	7514465	ExpressionStatement	data . flags = 0	2476:4:70717:70731	7514339	8	True				
ANR	7514466	AssignmentExpression	data . flags = 0		7514339	0		=			
ANR	7514467	MemberAccess	data . flags		7514339	0					
ANR	7514468	Identifier	data		7514339	0					
ANR	7514469	Identifier	flags		7514339	1					
ANR	7514470	PrimaryExpression	0		7514339	1					
ANR	7514471	ExpressionStatement	"Memento_appBlocks ( & memento . free , Memento_containsAddr , & data )"	2477:4:70737:70798	7514339	9	True				
ANR	7514472	CallExpression	"Memento_appBlocks ( & memento . free , Memento_containsAddr , & data )"		7514339	0					
ANR	7514473	Callee	Memento_appBlocks		7514339	0					
ANR	7514474	Identifier	Memento_appBlocks		7514339	0					
ANR	7514475	ArgumentList	& memento . free		7514339	1					
ANR	7514476	Argument	& memento . free		7514339	0					
ANR	7514477	UnaryOperationExpression	& memento . free		7514339	0					
ANR	7514478	UnaryOperator	&		7514339	0					
ANR	7514479	MemberAccess	memento . free		7514339	1					
ANR	7514480	Identifier	memento		7514339	0					
ANR	7514481	Identifier	free		7514339	1					
ANR	7514482	Argument	Memento_containsAddr		7514339	1					
ANR	7514483	Identifier	Memento_containsAddr		7514339	0					
ANR	7514484	Argument	& data		7514339	2					
ANR	7514485	UnaryOperationExpression	& data		7514339	0					
ANR	7514486	UnaryOperator	&		7514339	0					
ANR	7514487	Identifier	data		7514339	1					
ANR	7514488	IfStatement	if ( data . blk != NULL )		7514339	10					
ANR	7514489	Condition	data . blk != NULL	2478:8:70808:70823	7514339	0	True				
ANR	7514490	EqualityExpression	data . blk != NULL		7514339	0		!=			
ANR	7514491	MemberAccess	data . blk		7514339	0					
ANR	7514492	Identifier	data		7514339	0					
ANR	7514493	Identifier	blk		7514339	1					
ANR	7514494	Identifier	NULL		7514339	1					
ANR	7514495	CompoundStatement		23:26:756:756	7514339	1					
ANR	7514496	ExpressionStatement	"fprintf ( stderr , ""Can't stop on free; address 0x%p is in %sfreed block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"	2479:8:70836:71071	7514339	0	True				
ANR	7514497	CallExpression	"fprintf ( stderr , ""Can't stop on free; address 0x%p is in %sfreed block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"		7514339	0					
ANR	7514498	Callee	fprintf		7514339	0					
ANR	7514499	Identifier	fprintf		7514339	0					
ANR	7514500	ArgumentList	stderr		7514339	1					
ANR	7514501	Argument	stderr		7514339	0					
ANR	7514502	Identifier	stderr		7514339	0					
ANR	7514503	Argument	"""Can't stop on free; address 0x%p is in %sfreed block """		7514339	1					
ANR	7514504	PrimaryExpression	"""Can't stop on free; address 0x%p is in %sfreed block """		7514339	0					
ANR	7514505	Argument	data . addr		7514339	2					
ANR	7514506	MemberAccess	data . addr		7514339	0					
ANR	7514507	Identifier	data		7514339	0					
ANR	7514508	Identifier	addr		7514339	1					
ANR	7514509	Argument	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		7514339	3					
ANR	7514510	ConditionalExpression	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		7514339	0					
ANR	7514511	Condition	data . flags == 1		7514339	0					
ANR	7514512	EqualityExpression	data . flags == 1		7514339	0		==			
ANR	7514513	MemberAccess	data . flags		7514339	0					
ANR	7514514	Identifier	data		7514339	0					
ANR	7514515	Identifier	flags		7514339	1					
ANR	7514516	PrimaryExpression	1		7514339	1					
ANR	7514517	PrimaryExpression	""""""		7514339	1					
ANR	7514518	ConditionalExpression	"data . flags == 2 ? ""preguard of "" : ""postguard of """		7514339	2					
ANR	7514519	Condition	data . flags == 2		7514339	0					
ANR	7514520	EqualityExpression	data . flags == 2		7514339	0		==			
ANR	7514521	MemberAccess	data . flags		7514339	0					
ANR	7514522	Identifier	data		7514339	0					
ANR	7514523	Identifier	flags		7514339	1					
ANR	7514524	PrimaryExpression	2		7514339	1					
ANR	7514525	PrimaryExpression	"""preguard of """		7514339	1					
ANR	7514526	PrimaryExpression	"""postguard of """		7514339	2					
ANR	7514527	ExpressionStatement	"showBlock ( data . blk , ' ' )"	2483:8:71081:71105	7514339	1	True				
ANR	7514528	CallExpression	"showBlock ( data . blk , ' ' )"		7514339	0					
ANR	7514529	Callee	showBlock		7514339	0					
ANR	7514530	Identifier	showBlock		7514339	0					
ANR	7514531	ArgumentList	data . blk		7514339	1					
ANR	7514532	Argument	data . blk		7514339	0					
ANR	7514533	MemberAccess	data . blk		7514339	0					
ANR	7514534	Identifier	data		7514339	0					
ANR	7514535	Identifier	blk		7514339	1					
ANR	7514536	Argument	' '		7514339	1					
ANR	7514537	PrimaryExpression	' '		7514339	0					
ANR	7514538	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	2484:8:71115:71136	7514339	2	True				
ANR	7514539	CallExpression	"fprintf ( stderr , ""\\n"" )"		7514339	0					
ANR	7514540	Callee	fprintf		7514339	0					
ANR	7514541	Identifier	fprintf		7514339	0					
ANR	7514542	ArgumentList	stderr		7514339	1					
ANR	7514543	Argument	stderr		7514339	0					
ANR	7514544	Identifier	stderr		7514339	0					
ANR	7514545	Argument	"""\\n"""		7514339	1					
ANR	7514546	PrimaryExpression	"""\\n"""		7514339	0					
ANR	7514547	ExpressionStatement	MEMENTO_UNLOCK ( )	2485:8:71146:71162	7514339	3	True				
ANR	7514548	CallExpression	MEMENTO_UNLOCK ( )		7514339	0					
ANR	7514549	Callee	MEMENTO_UNLOCK		7514339	0					
ANR	7514550	Identifier	MEMENTO_UNLOCK		7514339	0					
ANR	7514551	ArgumentList			7514339	1					
ANR	7514552	ReturnStatement	return ;	2486:8:71172:71178	7514339	4	True				
ANR	7514553	ExpressionStatement	"fprintf ( stderr , ""Can't stop on free; address 0x%p is not in a known block.\\n"" , a )"	2488:4:71190:71271	7514339	11	True				
ANR	7514554	CallExpression	"fprintf ( stderr , ""Can't stop on free; address 0x%p is not in a known block.\\n"" , a )"		7514339	0					
ANR	7514555	Callee	fprintf		7514339	0					
ANR	7514556	Identifier	fprintf		7514339	0					
ANR	7514557	ArgumentList	stderr		7514339	1					
ANR	7514558	Argument	stderr		7514339	0					
ANR	7514559	Identifier	stderr		7514339	0					
ANR	7514560	Argument	"""Can't stop on free; address 0x%p is not in a known block.\\n"""		7514339	1					
ANR	7514561	PrimaryExpression	"""Can't stop on free; address 0x%p is not in a known block.\\n"""		7514339	0					
ANR	7514562	Argument	a		7514339	2					
ANR	7514563	Identifier	a		7514339	0					
ANR	7514564	ExpressionStatement	MEMENTO_UNLOCK ( )	2489:4:71277:71293	7514339	12	True				
ANR	7514565	CallExpression	MEMENTO_UNLOCK ( )		7514339	0					
ANR	7514566	Callee	MEMENTO_UNLOCK		7514339	0					
ANR	7514567	Identifier	MEMENTO_UNLOCK		7514339	0					
ANR	7514568	ArgumentList			7514339	1					
ANR	7514569	ReturnType	void		7514339	1					
ANR	7514570	Identifier	Memento_breakOnFree		7514339	2					
ANR	7514571	ParameterList	void * a		7514339	3					
ANR	7514572	Parameter	void * a	2455:25:70060:70066	7514339	0	True				
ANR	7514573	ParameterType	void *		7514339	0					
ANR	7514574	Identifier	a		7514339	1					
ANR	7514575	CFGEntryNode	ENTRY		7514339		True				
ANR	7514576	CFGExitNode	EXIT		7514339		True				
ANR	7514577	Symbol	& memento . free		7514339						
ANR	7514578	Symbol	a		7514339						
ANR	7514579	Symbol	& memento		7514339						
ANR	7514580	Symbol	NULL		7514339						
ANR	7514581	Symbol	data		7514339						
ANR	7514582	Symbol	data . blk -> flags		7514339						
ANR	7514583	Symbol	memento		7514339						
ANR	7514584	Symbol	stderr		7514339						
ANR	7514585	Symbol	Memento_Flag_BreakOnFree		7514339						
ANR	7514586	Symbol	data . addr		7514339						
ANR	7514587	Symbol	& data		7514339						
ANR	7514588	Symbol	data . blk		7514339						
ANR	7514589	Symbol	data . flags		7514339						
ANR	7514590	Symbol	& memento . used		7514339						
ANR	7514591	Symbol	Memento_containsAddr		7514339						
ANR	7514592	Symbol	* data		7514339						
ANR	7514593	Symbol	* data . blk		7514339						
ANR	7514594	Function	Memento_breakOnRealloc	2492:0:71298:72622							
ANR	7514595	FunctionDef	Memento_breakOnRealloc (void * a)		7514594	0					
ANR	7514596	CompoundStatement		2493:0:71335:72622	7514594	0					
ANR	7514597	IdentifierDeclStatement	findBlkData data ;	2494:4:71341:71357	7514594	0	True				
ANR	7514598	IdentifierDecl	data		7514594	0					
ANR	7514599	IdentifierDeclType	findBlkData		7514594	0					
ANR	7514600	Identifier	data		7514594	1					
ANR	7514601	ExpressionStatement	MEMENTO_LOCK ( )	2496:4:71364:71378	7514594	1	True				
ANR	7514602	CallExpression	MEMENTO_LOCK ( )		7514594	0					
ANR	7514603	Callee	MEMENTO_LOCK		7514594	0					
ANR	7514604	Identifier	MEMENTO_LOCK		7514594	0					
ANR	7514605	ArgumentList			7514594	1					
ANR	7514606	ExpressionStatement	data . addr = a	2497:4:71384:71398	7514594	2	True				
ANR	7514607	AssignmentExpression	data . addr = a		7514594	0		=			
ANR	7514608	MemberAccess	data . addr		7514594	0					
ANR	7514609	Identifier	data		7514594	0					
ANR	7514610	Identifier	addr		7514594	1					
ANR	7514611	Identifier	a		7514594	1					
ANR	7514612	ExpressionStatement	data . blk = NULL	2498:4:71404:71421	7514594	3	True				
ANR	7514613	AssignmentExpression	data . blk = NULL		7514594	0		=			
ANR	7514614	MemberAccess	data . blk		7514594	0					
ANR	7514615	Identifier	data		7514594	0					
ANR	7514616	Identifier	blk		7514594	1					
ANR	7514617	Identifier	NULL		7514594	1					
ANR	7514618	ExpressionStatement	data . flags = 0	2499:4:71427:71441	7514594	4	True				
ANR	7514619	AssignmentExpression	data . flags = 0		7514594	0		=			
ANR	7514620	MemberAccess	data . flags		7514594	0					
ANR	7514621	Identifier	data		7514594	0					
ANR	7514622	Identifier	flags		7514594	1					
ANR	7514623	PrimaryExpression	0		7514594	1					
ANR	7514624	ExpressionStatement	"Memento_appBlocks ( & memento . used , Memento_containsAddr , & data )"	2500:4:71447:71508	7514594	5	True				
ANR	7514625	CallExpression	"Memento_appBlocks ( & memento . used , Memento_containsAddr , & data )"		7514594	0					
ANR	7514626	Callee	Memento_appBlocks		7514594	0					
ANR	7514627	Identifier	Memento_appBlocks		7514594	0					
ANR	7514628	ArgumentList	& memento . used		7514594	1					
ANR	7514629	Argument	& memento . used		7514594	0					
ANR	7514630	UnaryOperationExpression	& memento . used		7514594	0					
ANR	7514631	UnaryOperator	&		7514594	0					
ANR	7514632	MemberAccess	memento . used		7514594	1					
ANR	7514633	Identifier	memento		7514594	0					
ANR	7514634	Identifier	used		7514594	1					
ANR	7514635	Argument	Memento_containsAddr		7514594	1					
ANR	7514636	Identifier	Memento_containsAddr		7514594	0					
ANR	7514637	Argument	& data		7514594	2					
ANR	7514638	UnaryOperationExpression	& data		7514594	0					
ANR	7514639	UnaryOperator	&		7514594	0					
ANR	7514640	Identifier	data		7514594	1					
ANR	7514641	IfStatement	if ( data . blk != NULL )		7514594	6					
ANR	7514642	Condition	data . blk != NULL	2501:8:71518:71533	7514594	0	True				
ANR	7514643	EqualityExpression	data . blk != NULL		7514594	0		!=			
ANR	7514644	MemberAccess	data . blk		7514594	0					
ANR	7514645	Identifier	data		7514594	0					
ANR	7514646	Identifier	blk		7514594	1					
ANR	7514647	Identifier	NULL		7514594	1					
ANR	7514648	CompoundStatement		9:26:200:200	7514594	1					
ANR	7514649	ExpressionStatement	"fprintf ( stderr , ""Will stop when address 0x%p (in %sallocated block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"	2502:8:71546:71778	7514594	0	True				
ANR	7514650	CallExpression	"fprintf ( stderr , ""Will stop when address 0x%p (in %sallocated block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"		7514594	0					
ANR	7514651	Callee	fprintf		7514594	0					
ANR	7514652	Identifier	fprintf		7514594	0					
ANR	7514653	ArgumentList	stderr		7514594	1					
ANR	7514654	Argument	stderr		7514594	0					
ANR	7514655	Identifier	stderr		7514594	0					
ANR	7514656	Argument	"""Will stop when address 0x%p (in %sallocated block """		7514594	1					
ANR	7514657	PrimaryExpression	"""Will stop when address 0x%p (in %sallocated block """		7514594	0					
ANR	7514658	Argument	data . addr		7514594	2					
ANR	7514659	MemberAccess	data . addr		7514594	0					
ANR	7514660	Identifier	data		7514594	0					
ANR	7514661	Identifier	addr		7514594	1					
ANR	7514662	Argument	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		7514594	3					
ANR	7514663	ConditionalExpression	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		7514594	0					
ANR	7514664	Condition	data . flags == 1		7514594	0					
ANR	7514665	EqualityExpression	data . flags == 1		7514594	0		==			
ANR	7514666	MemberAccess	data . flags		7514594	0					
ANR	7514667	Identifier	data		7514594	0					
ANR	7514668	Identifier	flags		7514594	1					
ANR	7514669	PrimaryExpression	1		7514594	1					
ANR	7514670	PrimaryExpression	""""""		7514594	1					
ANR	7514671	ConditionalExpression	"data . flags == 2 ? ""preguard of "" : ""postguard of """		7514594	2					
ANR	7514672	Condition	data . flags == 2		7514594	0					
ANR	7514673	EqualityExpression	data . flags == 2		7514594	0		==			
ANR	7514674	MemberAccess	data . flags		7514594	0					
ANR	7514675	Identifier	data		7514594	0					
ANR	7514676	Identifier	flags		7514594	1					
ANR	7514677	PrimaryExpression	2		7514594	1					
ANR	7514678	PrimaryExpression	"""preguard of """		7514594	1					
ANR	7514679	PrimaryExpression	"""postguard of """		7514594	2					
ANR	7514680	ExpressionStatement	"showBlock ( data . blk , ' ' )"	2506:8:71788:71812	7514594	1	True				
ANR	7514681	CallExpression	"showBlock ( data . blk , ' ' )"		7514594	0					
ANR	7514682	Callee	showBlock		7514594	0					
ANR	7514683	Identifier	showBlock		7514594	0					
ANR	7514684	ArgumentList	data . blk		7514594	1					
ANR	7514685	Argument	data . blk		7514594	0					
ANR	7514686	MemberAccess	data . blk		7514594	0					
ANR	7514687	Identifier	data		7514594	0					
ANR	7514688	Identifier	blk		7514594	1					
ANR	7514689	Argument	' '		7514594	1					
ANR	7514690	PrimaryExpression	' '		7514594	0					
ANR	7514691	ExpressionStatement	"fprintf ( stderr , "") is freed (or realloced)\\n"" )"	2507:8:71822:71868	7514594	2	True				
ANR	7514692	CallExpression	"fprintf ( stderr , "") is freed (or realloced)\\n"" )"		7514594	0					
ANR	7514693	Callee	fprintf		7514594	0					
ANR	7514694	Identifier	fprintf		7514594	0					
ANR	7514695	ArgumentList	stderr		7514594	1					
ANR	7514696	Argument	stderr		7514594	0					
ANR	7514697	Identifier	stderr		7514594	0					
ANR	7514698	Argument	""") is freed (or realloced)\\n"""		7514594	1					
ANR	7514699	PrimaryExpression	""") is freed (or realloced)\\n"""		7514594	0					
ANR	7514700	ExpressionStatement	data . blk -> flags |= Memento_Flag_BreakOnFree | Memento_Flag_BreakOnRealloc	2508:8:71878:71951	7514594	3	True				
ANR	7514701	AssignmentExpression	data . blk -> flags |= Memento_Flag_BreakOnFree | Memento_Flag_BreakOnRealloc		7514594	0		|=			
ANR	7514702	PtrMemberAccess	data . blk -> flags		7514594	0					
ANR	7514703	MemberAccess	data . blk		7514594	0					
ANR	7514704	Identifier	data		7514594	0					
ANR	7514705	Identifier	blk		7514594	1					
ANR	7514706	Identifier	flags		7514594	1					
ANR	7514707	InclusiveOrExpression	Memento_Flag_BreakOnFree | Memento_Flag_BreakOnRealloc		7514594	1		|			
ANR	7514708	Identifier	Memento_Flag_BreakOnFree		7514594	0					
ANR	7514709	Identifier	Memento_Flag_BreakOnRealloc		7514594	1					
ANR	7514710	ExpressionStatement	MEMENTO_UNLOCK ( )	2509:8:71961:71977	7514594	4	True				
ANR	7514711	CallExpression	MEMENTO_UNLOCK ( )		7514594	0					
ANR	7514712	Callee	MEMENTO_UNLOCK		7514594	0					
ANR	7514713	Identifier	MEMENTO_UNLOCK		7514594	0					
ANR	7514714	ArgumentList			7514594	1					
ANR	7514715	ReturnStatement	return ;	2510:8:71987:71993	7514594	5	True				
ANR	7514716	ExpressionStatement	data . blk = NULL	2512:4:72005:72022	7514594	7	True				
ANR	7514717	AssignmentExpression	data . blk = NULL		7514594	0		=			
ANR	7514718	MemberAccess	data . blk		7514594	0					
ANR	7514719	Identifier	data		7514594	0					
ANR	7514720	Identifier	blk		7514594	1					
ANR	7514721	Identifier	NULL		7514594	1					
ANR	7514722	ExpressionStatement	data . flags = 0	2513:4:72028:72042	7514594	8	True				
ANR	7514723	AssignmentExpression	data . flags = 0		7514594	0		=			
ANR	7514724	MemberAccess	data . flags		7514594	0					
ANR	7514725	Identifier	data		7514594	0					
ANR	7514726	Identifier	flags		7514594	1					
ANR	7514727	PrimaryExpression	0		7514594	1					
ANR	7514728	ExpressionStatement	"Memento_appBlocks ( & memento . free , Memento_containsAddr , & data )"	2514:4:72048:72109	7514594	9	True				
ANR	7514729	CallExpression	"Memento_appBlocks ( & memento . free , Memento_containsAddr , & data )"		7514594	0					
ANR	7514730	Callee	Memento_appBlocks		7514594	0					
ANR	7514731	Identifier	Memento_appBlocks		7514594	0					
ANR	7514732	ArgumentList	& memento . free		7514594	1					
ANR	7514733	Argument	& memento . free		7514594	0					
ANR	7514734	UnaryOperationExpression	& memento . free		7514594	0					
ANR	7514735	UnaryOperator	&		7514594	0					
ANR	7514736	MemberAccess	memento . free		7514594	1					
ANR	7514737	Identifier	memento		7514594	0					
ANR	7514738	Identifier	free		7514594	1					
ANR	7514739	Argument	Memento_containsAddr		7514594	1					
ANR	7514740	Identifier	Memento_containsAddr		7514594	0					
ANR	7514741	Argument	& data		7514594	2					
ANR	7514742	UnaryOperationExpression	& data		7514594	0					
ANR	7514743	UnaryOperator	&		7514594	0					
ANR	7514744	Identifier	data		7514594	1					
ANR	7514745	IfStatement	if ( data . blk != NULL )		7514594	10					
ANR	7514746	Condition	data . blk != NULL	2515:8:72119:72134	7514594	0	True				
ANR	7514747	EqualityExpression	data . blk != NULL		7514594	0		!=			
ANR	7514748	MemberAccess	data . blk		7514594	0					
ANR	7514749	Identifier	data		7514594	0					
ANR	7514750	Identifier	blk		7514594	1					
ANR	7514751	Identifier	NULL		7514594	1					
ANR	7514752	CompoundStatement		23:26:801:801	7514594	1					
ANR	7514753	ExpressionStatement	"fprintf ( stderr , ""Can't stop on free/realloc; address 0x%p is in %sfreed block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"	2516:8:72147:72390	7514594	0	True				
ANR	7514754	CallExpression	"fprintf ( stderr , ""Can't stop on free/realloc; address 0x%p is in %sfreed block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"		7514594	0					
ANR	7514755	Callee	fprintf		7514594	0					
ANR	7514756	Identifier	fprintf		7514594	0					
ANR	7514757	ArgumentList	stderr		7514594	1					
ANR	7514758	Argument	stderr		7514594	0					
ANR	7514759	Identifier	stderr		7514594	0					
ANR	7514760	Argument	"""Can't stop on free/realloc; address 0x%p is in %sfreed block """		7514594	1					
ANR	7514761	PrimaryExpression	"""Can't stop on free/realloc; address 0x%p is in %sfreed block """		7514594	0					
ANR	7514762	Argument	data . addr		7514594	2					
ANR	7514763	MemberAccess	data . addr		7514594	0					
ANR	7514764	Identifier	data		7514594	0					
ANR	7514765	Identifier	addr		7514594	1					
ANR	7514766	Argument	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		7514594	3					
ANR	7514767	ConditionalExpression	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		7514594	0					
ANR	7514768	Condition	data . flags == 1		7514594	0					
ANR	7514769	EqualityExpression	data . flags == 1		7514594	0		==			
ANR	7514770	MemberAccess	data . flags		7514594	0					
ANR	7514771	Identifier	data		7514594	0					
ANR	7514772	Identifier	flags		7514594	1					
ANR	7514773	PrimaryExpression	1		7514594	1					
ANR	7514774	PrimaryExpression	""""""		7514594	1					
ANR	7514775	ConditionalExpression	"data . flags == 2 ? ""preguard of "" : ""postguard of """		7514594	2					
ANR	7514776	Condition	data . flags == 2		7514594	0					
ANR	7514777	EqualityExpression	data . flags == 2		7514594	0		==			
ANR	7514778	MemberAccess	data . flags		7514594	0					
ANR	7514779	Identifier	data		7514594	0					
ANR	7514780	Identifier	flags		7514594	1					
ANR	7514781	PrimaryExpression	2		7514594	1					
ANR	7514782	PrimaryExpression	"""preguard of """		7514594	1					
ANR	7514783	PrimaryExpression	"""postguard of """		7514594	2					
ANR	7514784	ExpressionStatement	"showBlock ( data . blk , ' ' )"	2520:8:72400:72424	7514594	1	True				
ANR	7514785	CallExpression	"showBlock ( data . blk , ' ' )"		7514594	0					
ANR	7514786	Callee	showBlock		7514594	0					
ANR	7514787	Identifier	showBlock		7514594	0					
ANR	7514788	ArgumentList	data . blk		7514594	1					
ANR	7514789	Argument	data . blk		7514594	0					
ANR	7514790	MemberAccess	data . blk		7514594	0					
ANR	7514791	Identifier	data		7514594	0					
ANR	7514792	Identifier	blk		7514594	1					
ANR	7514793	Argument	' '		7514594	1					
ANR	7514794	PrimaryExpression	' '		7514594	0					
ANR	7514795	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	2521:8:72434:72455	7514594	2	True				
ANR	7514796	CallExpression	"fprintf ( stderr , ""\\n"" )"		7514594	0					
ANR	7514797	Callee	fprintf		7514594	0					
ANR	7514798	Identifier	fprintf		7514594	0					
ANR	7514799	ArgumentList	stderr		7514594	1					
ANR	7514800	Argument	stderr		7514594	0					
ANR	7514801	Identifier	stderr		7514594	0					
ANR	7514802	Argument	"""\\n"""		7514594	1					
ANR	7514803	PrimaryExpression	"""\\n"""		7514594	0					
ANR	7514804	ExpressionStatement	MEMENTO_UNLOCK ( )	2522:8:72465:72481	7514594	3	True				
ANR	7514805	CallExpression	MEMENTO_UNLOCK ( )		7514594	0					
ANR	7514806	Callee	MEMENTO_UNLOCK		7514594	0					
ANR	7514807	Identifier	MEMENTO_UNLOCK		7514594	0					
ANR	7514808	ArgumentList			7514594	1					
ANR	7514809	ReturnStatement	return ;	2523:8:72491:72497	7514594	4	True				
ANR	7514810	ExpressionStatement	"fprintf ( stderr , ""Can't stop on free/realloc; address 0x%p is not in a known block.\\n"" , a )"	2525:4:72509:72598	7514594	11	True				
ANR	7514811	CallExpression	"fprintf ( stderr , ""Can't stop on free/realloc; address 0x%p is not in a known block.\\n"" , a )"		7514594	0					
ANR	7514812	Callee	fprintf		7514594	0					
ANR	7514813	Identifier	fprintf		7514594	0					
ANR	7514814	ArgumentList	stderr		7514594	1					
ANR	7514815	Argument	stderr		7514594	0					
ANR	7514816	Identifier	stderr		7514594	0					
ANR	7514817	Argument	"""Can't stop on free/realloc; address 0x%p is not in a known block.\\n"""		7514594	1					
ANR	7514818	PrimaryExpression	"""Can't stop on free/realloc; address 0x%p is not in a known block.\\n"""		7514594	0					
ANR	7514819	Argument	a		7514594	2					
ANR	7514820	Identifier	a		7514594	0					
ANR	7514821	ExpressionStatement	MEMENTO_UNLOCK ( )	2526:4:72604:72620	7514594	12	True				
ANR	7514822	CallExpression	MEMENTO_UNLOCK ( )		7514594	0					
ANR	7514823	Callee	MEMENTO_UNLOCK		7514594	0					
ANR	7514824	Identifier	MEMENTO_UNLOCK		7514594	0					
ANR	7514825	ArgumentList			7514594	1					
ANR	7514826	ReturnType	void		7514594	1					
ANR	7514827	Identifier	Memento_breakOnRealloc		7514594	2					
ANR	7514828	ParameterList	void * a		7514594	3					
ANR	7514829	Parameter	void * a	2492:28:71326:71332	7514594	0	True				
ANR	7514830	ParameterType	void *		7514594	0					
ANR	7514831	Identifier	a		7514594	1					
ANR	7514832	CFGEntryNode	ENTRY		7514594		True				
ANR	7514833	CFGExitNode	EXIT		7514594		True				
ANR	7514834	Symbol	& memento . free		7514594						
ANR	7514835	Symbol	a		7514594						
ANR	7514836	Symbol	& memento		7514594						
ANR	7514837	Symbol	NULL		7514594						
ANR	7514838	Symbol	data		7514594						
ANR	7514839	Symbol	data . blk -> flags		7514594						
ANR	7514840	Symbol	memento		7514594						
ANR	7514841	Symbol	stderr		7514594						
ANR	7514842	Symbol	Memento_Flag_BreakOnFree		7514594						
ANR	7514843	Symbol	data . addr		7514594						
ANR	7514844	Symbol	& data		7514594						
ANR	7514845	Symbol	data . blk		7514594						
ANR	7514846	Symbol	data . flags		7514594						
ANR	7514847	Symbol	& memento . used		7514594						
ANR	7514848	Symbol	Memento_containsAddr		7514594						
ANR	7514849	Symbol	* data		7514594						
ANR	7514850	Symbol	Memento_Flag_BreakOnRealloc		7514594						
ANR	7514851	Symbol	* data . blk		7514594						
ANR	7514852	Function	Memento_failAt	2529:0:72625:72802							
ANR	7514853	FunctionDef	Memento_failAt (int i)		7514852	0					
ANR	7514854	CompoundStatement		2530:0:72651:72802	7514852	0					
ANR	7514855	ExpressionStatement	memento . failAt = i	2531:4:72657:72675	7514852	0	True				
ANR	7514856	AssignmentExpression	memento . failAt = i		7514852	0		=			
ANR	7514857	MemberAccess	memento . failAt		7514852	0					
ANR	7514858	Identifier	memento		7514852	0					
ANR	7514859	Identifier	failAt		7514852	1					
ANR	7514860	Identifier	i		7514852	1					
ANR	7514861	IfStatement	if ( ( memento . sequence > memento . failAt ) && ( memento . failing != 0 ) )		7514852	1					
ANR	7514862	Condition	( memento . sequence > memento . failAt ) && ( memento . failing != 0 )	2532:8:72685:72753	7514852	0	True				
ANR	7514863	AndExpression	( memento . sequence > memento . failAt ) && ( memento . failing != 0 )		7514852	0		&&			
ANR	7514864	RelationalExpression	memento . sequence > memento . failAt		7514852	0		>			
ANR	7514865	MemberAccess	memento . sequence		7514852	0					
ANR	7514866	Identifier	memento		7514852	0					
ANR	7514867	Identifier	sequence		7514852	1					
ANR	7514868	MemberAccess	memento . failAt		7514852	1					
ANR	7514869	Identifier	memento		7514852	0					
ANR	7514870	Identifier	failAt		7514852	1					
ANR	7514871	EqualityExpression	memento . failing != 0		7514852	1		!=			
ANR	7514872	MemberAccess	memento . failing		7514852	0					
ANR	7514873	Identifier	memento		7514852	0					
ANR	7514874	Identifier	failing		7514852	1					
ANR	7514875	PrimaryExpression	0		7514852	1					
ANR	7514876	ExpressionStatement	Memento_startFailing ( )	2534:8:72764:72786	7514852	1	True				
ANR	7514877	CallExpression	Memento_startFailing ( )		7514852	0					
ANR	7514878	Callee	Memento_startFailing		7514852	0					
ANR	7514879	Identifier	Memento_startFailing		7514852	0					
ANR	7514880	ArgumentList			7514852	1					
ANR	7514881	ReturnStatement	return i ;	2535:4:72792:72800	7514852	2	True				
ANR	7514882	Identifier	i		7514852	0					
ANR	7514883	ReturnType	int		7514852	1					
ANR	7514884	Identifier	Memento_failAt		7514852	2					
ANR	7514885	ParameterList	int i		7514852	3					
ANR	7514886	Parameter	int i	2529:19:72644:72648	7514852	0	True				
ANR	7514887	ParameterType	int		7514852	0					
ANR	7514888	Identifier	i		7514852	1					
ANR	7514889	CFGEntryNode	ENTRY		7514852		True				
ANR	7514890	CFGExitNode	EXIT		7514852		True				
ANR	7514891	Symbol	memento . failAt		7514852						
ANR	7514892	Symbol	memento . failing		7514852						
ANR	7514893	Symbol	i		7514852						
ANR	7514894	Symbol	memento		7514852						
ANR	7514895	Symbol	memento . sequence		7514852						
ANR	7514896	Function	Memento_setMax	2538:0:72805:72886							
ANR	7514897	FunctionDef	Memento_setMax (size_t max)		7514896	0					
ANR	7514898	CompoundStatement		2539:0:72839:72886	7514896	0					
ANR	7514899	ExpressionStatement	memento . maxMemory = max	2540:4:72845:72868	7514896	0	True				
ANR	7514900	AssignmentExpression	memento . maxMemory = max		7514896	0		=			
ANR	7514901	MemberAccess	memento . maxMemory		7514896	0					
ANR	7514902	Identifier	memento		7514896	0					
ANR	7514903	Identifier	maxMemory		7514896	1					
ANR	7514904	Identifier	max		7514896	1					
ANR	7514905	ReturnStatement	return max ;	2541:4:72874:72884	7514896	1	True				
ANR	7514906	Identifier	max		7514896	0					
ANR	7514907	ReturnType	size_t		7514896	1					
ANR	7514908	Identifier	Memento_setMax		7514896	2					
ANR	7514909	ParameterList	size_t max		7514896	3					
ANR	7514910	Parameter	size_t max	2538:22:72827:72836	7514896	0	True				
ANR	7514911	ParameterType	size_t		7514896	0					
ANR	7514912	Identifier	max		7514896	1					
ANR	7514913	CFGEntryNode	ENTRY		7514896		True				
ANR	7514914	CFGExitNode	EXIT		7514896		True				
ANR	7514915	Symbol	max		7514896						
ANR	7514916	Symbol	memento . maxMemory		7514896						
ANR	7514917	Symbol	memento		7514896						
ANR	7514918	Function	Memento_startLeaking	2544:0:72889:72946							
ANR	7514919	FunctionDef	Memento_startLeaking ()		7514918	0					
ANR	7514920	CompoundStatement		2545:0:72921:72946	7514918	0					
ANR	7514921	ExpressionStatement	memento . leaking ++	2546:4:72927:72944	7514918	0	True				
ANR	7514922	PostIncDecOperationExpression	memento . leaking ++		7514918	0					
ANR	7514923	MemberAccess	memento . leaking		7514918	0					
ANR	7514924	Identifier	memento		7514918	0					
ANR	7514925	Identifier	leaking		7514918	1					
ANR	7514926	IncDec	++		7514918	1					
ANR	7514927	ReturnType	void		7514918	1					
ANR	7514928	Identifier	Memento_startLeaking		7514918	2					
ANR	7514929	ParameterList			7514918	3					
ANR	7514930	CFGEntryNode	ENTRY		7514918		True				
ANR	7514931	CFGExitNode	EXIT		7514918		True				
ANR	7514932	Symbol	memento . leaking		7514918						
ANR	7514933	Symbol	memento		7514918						
ANR	7514934	Function	Memento_stopLeaking	2549:0:72949:73005							
ANR	7514935	FunctionDef	Memento_stopLeaking ()		7514934	0					
ANR	7514936	CompoundStatement		2550:0:72980:73005	7514934	0					
ANR	7514937	ExpressionStatement	memento . leaking --	2551:4:72986:73003	7514934	0	True				
ANR	7514938	PostIncDecOperationExpression	memento . leaking --		7514934	0					
ANR	7514939	MemberAccess	memento . leaking		7514934	0					
ANR	7514940	Identifier	memento		7514934	0					
ANR	7514941	Identifier	leaking		7514934	1					
ANR	7514942	IncDec	--		7514934	1					
ANR	7514943	ReturnType	void		7514934	1					
ANR	7514944	Identifier	Memento_stopLeaking		7514934	2					
ANR	7514945	ParameterList			7514934	3					
ANR	7514946	CFGEntryNode	ENTRY		7514934		True				
ANR	7514947	CFGExitNode	EXIT		7514934		True				
ANR	7514948	Symbol	memento . leaking		7514934						
ANR	7514949	Symbol	memento		7514934						
ANR	7514950	Function	operator new	2559:0:73120:73365							
ANR	7514951	FunctionDef	operator new (size_t size)		7514950	0					
ANR	7514952	CompoundStatement		2560:0:73152:73365	7514950	0					
ANR	7514953	IdentifierDeclStatement	void * ret ;	2561:4:73158:73167	7514950	0	True				
ANR	7514954	IdentifierDecl	* ret		7514950	0					
ANR	7514955	IdentifierDeclType	void *		7514950	0					
ANR	7514956	Identifier	ret		7514950	1					
ANR	7514957	IfStatement	if ( ! memento . inited )		7514950	1					
ANR	7514958	Condition	! memento . inited	2563:8:73178:73192	7514950	0	True				
ANR	7514959	UnaryOperationExpression	! memento . inited		7514950	0					
ANR	7514960	UnaryOperator	!		7514950	0					
ANR	7514961	MemberAccess	memento . inited		7514950	1					
ANR	7514962	Identifier	memento		7514950	0					
ANR	7514963	Identifier	inited		7514950	1					
ANR	7514964	ExpressionStatement	Memento_init ( )	2564:8:73203:73217	7514950	1	True				
ANR	7514965	CallExpression	Memento_init ( )		7514950	0					
ANR	7514966	Callee	Memento_init		7514950	0					
ANR	7514967	Identifier	Memento_init		7514950	0					
ANR	7514968	ArgumentList			7514950	1					
ANR	7514969	IfStatement	if ( size == 0 )		7514950	2					
ANR	7514970	Condition	size == 0	2566:8:73228:73236	7514950	0	True				
ANR	7514971	EqualityExpression	size == 0		7514950	0		==			
ANR	7514972	Identifier	size		7514950	0					
ANR	7514973	PrimaryExpression	0		7514950	1					
ANR	7514974	ExpressionStatement	size = 1	2567:8:73247:73255	7514950	1	True				
ANR	7514975	AssignmentExpression	size = 1		7514950	0		=			
ANR	7514976	Identifier	size		7514950	0					
ANR	7514977	PrimaryExpression	1		7514950	1					
ANR	7514978	ExpressionStatement	MEMENTO_LOCK ( )	2568:4:73261:73275	7514950	3	True				
ANR	7514979	CallExpression	MEMENTO_LOCK ( )		7514950	0					
ANR	7514980	Callee	MEMENTO_LOCK		7514950	0					
ANR	7514981	Identifier	MEMENTO_LOCK		7514950	0					
ANR	7514982	ArgumentList			7514950	1					
ANR	7514983	ExpressionStatement	"ret = do_malloc ( size , Memento_EventType_new )"	2569:4:73281:73325	7514950	4	True				
ANR	7514984	AssignmentExpression	"ret = do_malloc ( size , Memento_EventType_new )"		7514950	0		=			
ANR	7514985	Identifier	ret		7514950	0					
ANR	7514986	CallExpression	"do_malloc ( size , Memento_EventType_new )"		7514950	1					
ANR	7514987	Callee	do_malloc		7514950	0					
ANR	7514988	Identifier	do_malloc		7514950	0					
ANR	7514989	ArgumentList	size		7514950	1					
ANR	7514990	Argument	size		7514950	0					
ANR	7514991	Identifier	size		7514950	0					
ANR	7514992	Argument	Memento_EventType_new		7514950	1					
ANR	7514993	Identifier	Memento_EventType_new		7514950	0					
ANR	7514994	ExpressionStatement	MEMENTO_UNLOCK ( )	2570:4:73331:73347	7514950	5	True				
ANR	7514995	CallExpression	MEMENTO_UNLOCK ( )		7514950	0					
ANR	7514996	Callee	MEMENTO_UNLOCK		7514950	0					
ANR	7514997	Identifier	MEMENTO_UNLOCK		7514950	0					
ANR	7514998	ArgumentList			7514950	1					
ANR	7514999	ReturnStatement	return ret ;	2571:4:73353:73363	7514950	6	True				
ANR	7515000	Identifier	ret		7514950	0					
ANR	7515001	ReturnType	void *		7514950	1					
ANR	7515002	Identifier	operator new		7514950	2					
ANR	7515003	ParameterList	size_t size		7514950	3					
ANR	7515004	Parameter	size_t size	2559:19:73139:73149	7514950	0	True				
ANR	7515005	ParameterType	size_t		7514950	0					
ANR	7515006	Identifier	size		7514950	1					
ANR	7515007	CFGEntryNode	ENTRY		7514950		True				
ANR	7515008	CFGExitNode	EXIT		7514950		True				
ANR	7515009	Symbol	ret		7514950						
ANR	7515010	Symbol	size		7514950						
ANR	7515011	Symbol	Memento_EventType_new		7514950						
ANR	7515012	Symbol	memento		7514950						
ANR	7515013	Symbol	memento . inited		7514950						
ANR	7515014	Symbol	do_malloc		7514950						
ANR	7515015	Function	operator delete	2574:0:73368:73532							
ANR	7515016	FunctionDef	operator delete (void * pointer)		7515015	0					
ANR	7515017	CompoundStatement		2575:0:73405:73532	7515015	0					
ANR	7515018	IfStatement	if ( ! pointer )		7515015	0					
ANR	7515019	Condition	! pointer	2576:8:73415:73422	7515015	0	True				
ANR	7515020	UnaryOperationExpression	! pointer		7515015	0					
ANR	7515021	UnaryOperator	!		7515015	0					
ANR	7515022	Identifier	pointer		7515015	1					
ANR	7515023	ReturnStatement	return ;	2577:8:73433:73439	7515015	1	True				
ANR	7515024	ExpressionStatement	MEMENTO_LOCK ( )	2579:4:73446:73460	7515015	1	True				
ANR	7515025	CallExpression	MEMENTO_LOCK ( )		7515015	0					
ANR	7515026	Callee	MEMENTO_LOCK		7515015	0					
ANR	7515027	Identifier	MEMENTO_LOCK		7515015	0					
ANR	7515028	ArgumentList			7515015	1					
ANR	7515029	ExpressionStatement	"do_free ( pointer , Memento_EventType_delete )"	2580:4:73466:73508	7515015	2	True				
ANR	7515030	CallExpression	"do_free ( pointer , Memento_EventType_delete )"		7515015	0					
ANR	7515031	Callee	do_free		7515015	0					
ANR	7515032	Identifier	do_free		7515015	0					
ANR	7515033	ArgumentList	pointer		7515015	1					
ANR	7515034	Argument	pointer		7515015	0					
ANR	7515035	Identifier	pointer		7515015	0					
ANR	7515036	Argument	Memento_EventType_delete		7515015	1					
ANR	7515037	Identifier	Memento_EventType_delete		7515015	0					
ANR	7515038	ExpressionStatement	MEMENTO_UNLOCK ( )	2581:4:73514:73530	7515015	3	True				
ANR	7515039	CallExpression	MEMENTO_UNLOCK ( )		7515015	0					
ANR	7515040	Callee	MEMENTO_UNLOCK		7515015	0					
ANR	7515041	Identifier	MEMENTO_UNLOCK		7515015	0					
ANR	7515042	ArgumentList			7515015	1					
ANR	7515043	ReturnType	void		7515015	1					
ANR	7515044	Identifier	operator delete		7515015	2					
ANR	7515045	ParameterList	void * pointer		7515015	3					
ANR	7515046	Parameter	void * pointer	2574:22:73390:73402	7515015	0	True				
ANR	7515047	ParameterType	void *		7515015	0					
ANR	7515048	Identifier	pointer		7515015	1					
ANR	7515049	CFGEntryNode	ENTRY		7515015		True				
ANR	7515050	CFGExitNode	EXIT		7515015		True				
ANR	7515051	Symbol	pointer		7515015						
ANR	7515052	Symbol	Memento_EventType_delete		7515015						
ANR	7515053	Function	operator new [ ]	2587:0:73691:73942							
ANR	7515054	FunctionDef	operator new [ ] (size_t size)		7515053	0					
ANR	7515055	CompoundStatement		2588:0:73725:73942	7515053	0					
ANR	7515056	IdentifierDeclStatement	void * ret ;	2589:4:73731:73740	7515053	0	True				
ANR	7515057	IdentifierDecl	* ret		7515053	0					
ANR	7515058	IdentifierDeclType	void *		7515053	0					
ANR	7515059	Identifier	ret		7515053	1					
ANR	7515060	IfStatement	if ( ! memento . inited )		7515053	1					
ANR	7515061	Condition	! memento . inited	2590:8:73750:73764	7515053	0	True				
ANR	7515062	UnaryOperationExpression	! memento . inited		7515053	0					
ANR	7515063	UnaryOperator	!		7515053	0					
ANR	7515064	MemberAccess	memento . inited		7515053	1					
ANR	7515065	Identifier	memento		7515053	0					
ANR	7515066	Identifier	inited		7515053	1					
ANR	7515067	ExpressionStatement	Memento_init ( )	2591:8:73775:73789	7515053	1	True				
ANR	7515068	CallExpression	Memento_init ( )		7515053	0					
ANR	7515069	Callee	Memento_init		7515053	0					
ANR	7515070	Identifier	Memento_init		7515053	0					
ANR	7515071	ArgumentList			7515053	1					
ANR	7515072	IfStatement	if ( size == 0 )		7515053	2					
ANR	7515073	Condition	size == 0	2593:8:73800:73808	7515053	0	True				
ANR	7515074	EqualityExpression	size == 0		7515053	0		==			
ANR	7515075	Identifier	size		7515053	0					
ANR	7515076	PrimaryExpression	0		7515053	1					
ANR	7515077	ExpressionStatement	size = 1	2594:8:73819:73827	7515053	1	True				
ANR	7515078	AssignmentExpression	size = 1		7515053	0		=			
ANR	7515079	Identifier	size		7515053	0					
ANR	7515080	PrimaryExpression	1		7515053	1					
ANR	7515081	ExpressionStatement	MEMENTO_LOCK ( )	2595:4:73833:73847	7515053	3	True				
ANR	7515082	CallExpression	MEMENTO_LOCK ( )		7515053	0					
ANR	7515083	Callee	MEMENTO_LOCK		7515053	0					
ANR	7515084	Identifier	MEMENTO_LOCK		7515053	0					
ANR	7515085	ArgumentList			7515053	1					
ANR	7515086	ExpressionStatement	"ret = do_malloc ( size , Memento_EventType_newArray )"	2596:4:73853:73902	7515053	4	True				
ANR	7515087	AssignmentExpression	"ret = do_malloc ( size , Memento_EventType_newArray )"		7515053	0		=			
ANR	7515088	Identifier	ret		7515053	0					
ANR	7515089	CallExpression	"do_malloc ( size , Memento_EventType_newArray )"		7515053	1					
ANR	7515090	Callee	do_malloc		7515053	0					
ANR	7515091	Identifier	do_malloc		7515053	0					
ANR	7515092	ArgumentList	size		7515053	1					
ANR	7515093	Argument	size		7515053	0					
ANR	7515094	Identifier	size		7515053	0					
ANR	7515095	Argument	Memento_EventType_newArray		7515053	1					
ANR	7515096	Identifier	Memento_EventType_newArray		7515053	0					
ANR	7515097	ExpressionStatement	MEMENTO_UNLOCK ( )	2597:4:73908:73924	7515053	5	True				
ANR	7515098	CallExpression	MEMENTO_UNLOCK ( )		7515053	0					
ANR	7515099	Callee	MEMENTO_UNLOCK		7515053	0					
ANR	7515100	Identifier	MEMENTO_UNLOCK		7515053	0					
ANR	7515101	ArgumentList			7515053	1					
ANR	7515102	ReturnStatement	return ret ;	2598:4:73930:73940	7515053	6	True				
ANR	7515103	Identifier	ret		7515053	0					
ANR	7515104	ReturnType	void *		7515053	1					
ANR	7515105	Identifier	operator new [ ]		7515053	2					
ANR	7515106	ParameterList	size_t size		7515053	3					
ANR	7515107	Parameter	size_t size	2587:21:73712:73722	7515053	0	True				
ANR	7515108	ParameterType	size_t		7515053	0					
ANR	7515109	Identifier	size		7515053	1					
ANR	7515110	CFGEntryNode	ENTRY		7515053		True				
ANR	7515111	CFGExitNode	EXIT		7515053		True				
ANR	7515112	Symbol	ret		7515053						
ANR	7515113	Symbol	Memento_EventType_newArray		7515053						
ANR	7515114	Symbol	size		7515053						
ANR	7515115	Symbol	memento		7515053						
ANR	7515116	Symbol	memento . inited		7515053						
ANR	7515117	Symbol	do_malloc		7515053						
ANR	7515118	Function	operator delete [ ]	2601:0:73945:74081							
ANR	7515119	FunctionDef	operator delete [ ] (void * pointer)		7515118	0					
ANR	7515120	CompoundStatement		2602:0:73984:74081	7515118	0					
ANR	7515121	ExpressionStatement	MEMENTO_LOCK ( )	2603:4:73990:74004	7515118	0	True				
ANR	7515122	CallExpression	MEMENTO_LOCK ( )		7515118	0					
ANR	7515123	Callee	MEMENTO_LOCK		7515118	0					
ANR	7515124	Identifier	MEMENTO_LOCK		7515118	0					
ANR	7515125	ArgumentList			7515118	1					
ANR	7515126	ExpressionStatement	"do_free ( pointer , Memento_EventType_deleteArray )"	2604:4:74010:74057	7515118	1	True				
ANR	7515127	CallExpression	"do_free ( pointer , Memento_EventType_deleteArray )"		7515118	0					
ANR	7515128	Callee	do_free		7515118	0					
ANR	7515129	Identifier	do_free		7515118	0					
ANR	7515130	ArgumentList	pointer		7515118	1					
ANR	7515131	Argument	pointer		7515118	0					
ANR	7515132	Identifier	pointer		7515118	0					
ANR	7515133	Argument	Memento_EventType_deleteArray		7515118	1					
ANR	7515134	Identifier	Memento_EventType_deleteArray		7515118	0					
ANR	7515135	ExpressionStatement	MEMENTO_UNLOCK ( )	2605:4:74063:74079	7515118	2	True				
ANR	7515136	CallExpression	MEMENTO_UNLOCK ( )		7515118	0					
ANR	7515137	Callee	MEMENTO_UNLOCK		7515118	0					
ANR	7515138	Identifier	MEMENTO_UNLOCK		7515118	0					
ANR	7515139	ArgumentList			7515118	1					
ANR	7515140	ReturnType	void		7515118	1					
ANR	7515141	Identifier	operator delete [ ]		7515118	2					
ANR	7515142	ParameterList	void * pointer		7515118	3					
ANR	7515143	Parameter	void * pointer	2601:24:73969:73981	7515118	0	True				
ANR	7515144	ParameterType	void *		7515118	0					
ANR	7515145	Identifier	pointer		7515118	1					
ANR	7515146	CFGEntryNode	ENTRY		7515118		True				
ANR	7515147	CFGExitNode	EXIT		7515118		True				
ANR	7515148	Symbol	pointer		7515118						
ANR	7515149	Symbol	Memento_EventType_deleteArray		7515118						
ANR	7515150	Function	Memento_breakpoint	2613:0:74224:74258							
ANR	7515151	FunctionDef	Memento_breakpoint ()		7515150	0					
ANR	7515152	CompoundStatement		2614:0:74256:74258	7515150	0					
ANR	7515153	ReturnType	void		7515150	1					
ANR	7515154	Identifier	( Memento_breakpoint )		7515150	2					
ANR	7515155	Identifier	Memento_breakpoint		7515150	3					
ANR	7515156	ParameterList			7515150	4					
ANR	7515157	CFGEntryNode	ENTRY		7515150		True				
ANR	7515158	CFGExitNode	EXIT		7515150		True				
ANR	7515159	Function	Memento_checkBlock	2617:0:74261:74311							
ANR	7515160	FunctionDef	Memento_checkBlock (void * b)		7515159	0					
ANR	7515161	CompoundStatement		2618:0:74295:74311	7515159	0					
ANR	7515162	ReturnStatement	return 0 ;	2619:4:74301:74309	7515159	0	True				
ANR	7515163	PrimaryExpression	0		7515159	0					
ANR	7515164	ReturnType	int		7515159	1					
ANR	7515165	Identifier	( Memento_checkBlock )		7515159	2					
ANR	7515166	Identifier	Memento_checkBlock		7515159	3					
ANR	7515167	ParameterList	void * b		7515159	4					
ANR	7515168	Parameter	void * b	2617:25:74286:74292	7515159	0	True				
ANR	7515169	ParameterType	void *		7515159	0					
ANR	7515170	Identifier	b		7515159	1					
ANR	7515171	CFGEntryNode	ENTRY		7515159		True				
ANR	7515172	CFGExitNode	EXIT		7515159		True				
ANR	7515173	Symbol	b		7515159						
ANR	7515174	Function	Memento_checkAllMemory	2622:0:74314:74365							
ANR	7515175	FunctionDef	Memento_checkAllMemory ()		7515174	0					
ANR	7515176	CompoundStatement		2623:0:74349:74365	7515174	0					
ANR	7515177	ReturnStatement	return 0 ;	2624:4:74355:74363	7515174	0	True				
ANR	7515178	PrimaryExpression	0		7515174	0					
ANR	7515179	ReturnType	int		7515174	1					
ANR	7515180	Identifier	( Memento_checkAllMemory )		7515174	2					
ANR	7515181	Identifier	Memento_checkAllMemory		7515174	3					
ANR	7515182	ParameterList			7515174	4					
ANR	7515183	CFGEntryNode	ENTRY		7515174		True				
ANR	7515184	CFGExitNode	EXIT		7515174		True				
ANR	7515185	Function	Memento_check	2627:0:74368:74410							
ANR	7515186	FunctionDef	Memento_check ()		7515185	0					
ANR	7515187	CompoundStatement		2628:0:74394:74410	7515185	0					
ANR	7515188	ReturnStatement	return 0 ;	2629:4:74400:74408	7515185	0	True				
ANR	7515189	PrimaryExpression	0		7515185	0					
ANR	7515190	ReturnType	int		7515185	1					
ANR	7515191	Identifier	( Memento_check )		7515185	2					
ANR	7515192	Identifier	Memento_check		7515185	3					
ANR	7515193	ParameterList			7515185	4					
ANR	7515194	CFGEntryNode	ENTRY		7515185		True				
ANR	7515195	CFGExitNode	EXIT		7515185		True				
ANR	7515196	Function	Memento_setParanoia	2632:0:74413:74462							
ANR	7515197	FunctionDef	Memento_setParanoia (int i)		7515196	0					
ANR	7515198	CompoundStatement		2633:0:74446:74462	7515196	0					
ANR	7515199	ReturnStatement	return 0 ;	2634:4:74452:74460	7515196	0	True				
ANR	7515200	PrimaryExpression	0		7515196	0					
ANR	7515201	ReturnType	int		7515196	1					
ANR	7515202	Identifier	( Memento_setParanoia )		7515196	2					
ANR	7515203	Identifier	Memento_setParanoia		7515196	3					
ANR	7515204	ParameterList	int i		7515196	4					
ANR	7515205	Parameter	int i	2632:26:74439:74443	7515196	0	True				
ANR	7515206	ParameterType	int		7515196	0					
ANR	7515207	Identifier	i		7515196	1					
ANR	7515208	CFGEntryNode	ENTRY		7515196		True				
ANR	7515209	CFGExitNode	EXIT		7515196		True				
ANR	7515210	Symbol	i		7515196						
ANR	7515211	Function	Memento_paranoidAt	2637:0:74465:74513							
ANR	7515212	FunctionDef	Memento_paranoidAt (int i)		7515211	0					
ANR	7515213	CompoundStatement		2638:0:74497:74513	7515211	0					
ANR	7515214	ReturnStatement	return 0 ;	2639:4:74503:74511	7515211	0	True				
ANR	7515215	PrimaryExpression	0		7515211	0					
ANR	7515216	ReturnType	int		7515211	1					
ANR	7515217	Identifier	( Memento_paranoidAt )		7515211	2					
ANR	7515218	Identifier	Memento_paranoidAt		7515211	3					
ANR	7515219	ParameterList	int i		7515211	4					
ANR	7515220	Parameter	int i	2637:25:74490:74494	7515211	0	True				
ANR	7515221	ParameterType	int		7515211	0					
ANR	7515222	Identifier	i		7515211	1					
ANR	7515223	CFGEntryNode	ENTRY		7515211		True				
ANR	7515224	CFGExitNode	EXIT		7515211		True				
ANR	7515225	Symbol	i		7515211						
ANR	7515226	Function	Memento_breakAt	2642:0:74516:74561							
ANR	7515227	FunctionDef	Memento_breakAt (int i)		7515226	0					
ANR	7515228	CompoundStatement		2643:0:74545:74561	7515226	0					
ANR	7515229	ReturnStatement	return 0 ;	2644:4:74551:74559	7515226	0	True				
ANR	7515230	PrimaryExpression	0		7515226	0					
ANR	7515231	ReturnType	int		7515226	1					
ANR	7515232	Identifier	( Memento_breakAt )		7515226	2					
ANR	7515233	Identifier	Memento_breakAt		7515226	3					
ANR	7515234	ParameterList	int i		7515226	4					
ANR	7515235	Parameter	int i	2642:22:74538:74542	7515226	0	True				
ANR	7515236	ParameterType	int		7515226	0					
ANR	7515237	Identifier	i		7515226	1					
ANR	7515238	CFGEntryNode	ENTRY		7515226		True				
ANR	7515239	CFGExitNode	EXIT		7515226		True				
ANR	7515240	Symbol	i		7515226						
ANR	7515241	Function	Memento_getBlockNum	2647:0:74564:74616							
ANR	7515242	FunctionDef	Memento_getBlockNum (void * i)		7515241	0					
ANR	7515243	CompoundStatement		2648:0:74600:74616	7515241	0					
ANR	7515244	ReturnStatement	return 0 ;	2649:4:74606:74614	7515241	0	True				
ANR	7515245	PrimaryExpression	0		7515241	0					
ANR	7515246	ReturnType	int		7515241	1					
ANR	7515247	Identifier	( Memento_getBlockNum )		7515241	2					
ANR	7515248	Identifier	Memento_getBlockNum		7515241	3					
ANR	7515249	ParameterList	void * i		7515241	4					
ANR	7515250	Parameter	void * i	2647:27:74591:74597	7515241	0	True				
ANR	7515251	ParameterType	void *		7515241	0					
ANR	7515252	Identifier	i		7515241	1					
ANR	7515253	CFGEntryNode	ENTRY		7515241		True				
ANR	7515254	CFGExitNode	EXIT		7515241		True				
ANR	7515255	Symbol	i		7515241						
ANR	7515256	Function	Memento_find	2652:0:74619:74663							
ANR	7515257	FunctionDef	Memento_find (void * a)		7515256	0					
ANR	7515258	CompoundStatement		2653:0:74647:74663	7515256	0					
ANR	7515259	ReturnStatement	return 0 ;	2654:4:74653:74661	7515256	0	True				
ANR	7515260	PrimaryExpression	0		7515256	0					
ANR	7515261	ReturnType	int		7515256	1					
ANR	7515262	Identifier	( Memento_find )		7515256	2					
ANR	7515263	Identifier	Memento_find		7515256	3					
ANR	7515264	ParameterList	void * a		7515256	4					
ANR	7515265	Parameter	void * a	2652:19:74638:74644	7515256	0	True				
ANR	7515266	ParameterType	void *		7515256	0					
ANR	7515267	Identifier	a		7515256	1					
ANR	7515268	CFGEntryNode	ENTRY		7515256		True				
ANR	7515269	CFGExitNode	EXIT		7515256		True				
ANR	7515270	Symbol	a		7515256						
ANR	7515271	Function	Memento_failAt	2657:0:74666:74710							
ANR	7515272	FunctionDef	Memento_failAt (int i)		7515271	0					
ANR	7515273	CompoundStatement		2658:0:74694:74710	7515271	0					
ANR	7515274	ReturnStatement	return 0 ;	2659:4:74700:74708	7515271	0	True				
ANR	7515275	PrimaryExpression	0		7515271	0					
ANR	7515276	ReturnType	int		7515271	1					
ANR	7515277	Identifier	( Memento_failAt )		7515271	2					
ANR	7515278	Identifier	Memento_failAt		7515271	3					
ANR	7515279	ParameterList	int i		7515271	4					
ANR	7515280	Parameter	int i	2657:21:74687:74691	7515271	0	True				
ANR	7515281	ParameterType	int		7515271	0					
ANR	7515282	Identifier	i		7515271	1					
ANR	7515283	CFGEntryNode	ENTRY		7515271		True				
ANR	7515284	CFGExitNode	EXIT		7515271		True				
ANR	7515285	Symbol	i		7515271						
ANR	7515286	Function	Memento_breakOnFree	2662:0:74713:74751							
ANR	7515287	FunctionDef	Memento_breakOnFree (void * a)		7515286	0					
ANR	7515288	CompoundStatement		2663:0:74749:74751	7515286	0					
ANR	7515289	ReturnType	void		7515286	1					
ANR	7515290	Identifier	( Memento_breakOnFree )		7515286	2					
ANR	7515291	Identifier	Memento_breakOnFree		7515286	3					
ANR	7515292	ParameterList	void * a		7515286	4					
ANR	7515293	Parameter	void * a	2662:27:74740:74746	7515286	0	True				
ANR	7515294	ParameterType	void *		7515286	0					
ANR	7515295	Identifier	a		7515286	1					
ANR	7515296	CFGEntryNode	ENTRY		7515286		True				
ANR	7515297	CFGExitNode	EXIT		7515286		True				
ANR	7515298	Symbol	a		7515286						
ANR	7515299	Function	Memento_breakOnRealloc	2666:0:74754:74795							
ANR	7515300	FunctionDef	Memento_breakOnRealloc (void * a)		7515299	0					
ANR	7515301	CompoundStatement		2667:0:74793:74795	7515299	0					
ANR	7515302	ReturnType	void		7515299	1					
ANR	7515303	Identifier	( Memento_breakOnRealloc )		7515299	2					
ANR	7515304	Identifier	Memento_breakOnRealloc		7515299	3					
ANR	7515305	ParameterList	void * a		7515299	4					
ANR	7515306	Parameter	void * a	2666:30:74784:74790	7515299	0	True				
ANR	7515307	ParameterType	void *		7515299	0					
ANR	7515308	Identifier	a		7515299	1					
ANR	7515309	CFGEntryNode	ENTRY		7515299		True				
ANR	7515310	CFGExitNode	EXIT		7515299		True				
ANR	7515311	Symbol	a		7515299						
ANR	7515312	Function	Memento_takeRef	2670:0:74798:74847							
ANR	7515313	FunctionDef	Memento_takeRef (void * a)		7515312	0					
ANR	7515314	CompoundStatement		2671:0:74831:74847	7515312	0					
ANR	7515315	ReturnStatement	return a ;	2672:4:74837:74845	7515312	0	True				
ANR	7515316	Identifier	a		7515312	0					
ANR	7515317	ReturnType	void *		7515312	1					
ANR	7515318	Identifier	( Memento_takeRef )		7515312	2					
ANR	7515319	Identifier	Memento_takeRef		7515312	3					
ANR	7515320	ParameterList	void * a		7515312	4					
ANR	7515321	Parameter	void * a	2670:24:74822:74828	7515312	0	True				
ANR	7515322	ParameterType	void *		7515312	0					
ANR	7515323	Identifier	a		7515312	1					
ANR	7515324	CFGEntryNode	ENTRY		7515312		True				
ANR	7515325	CFGExitNode	EXIT		7515312		True				
ANR	7515326	Symbol	a		7515312						
ANR	7515327	Function	Memento_dropRef	2675:0:74850:74899							
ANR	7515328	FunctionDef	Memento_dropRef (void * a)		7515327	0					
ANR	7515329	CompoundStatement		2676:0:74883:74899	7515327	0					
ANR	7515330	ReturnStatement	return a ;	2677:4:74889:74897	7515327	0	True				
ANR	7515331	Identifier	a		7515327	0					
ANR	7515332	ReturnType	void *		7515327	1					
ANR	7515333	Identifier	( Memento_dropRef )		7515327	2					
ANR	7515334	Identifier	Memento_dropRef		7515327	3					
ANR	7515335	ParameterList	void * a		7515327	4					
ANR	7515336	Parameter	void * a	2675:24:74874:74880	7515327	0	True				
ANR	7515337	ParameterType	void *		7515327	0					
ANR	7515338	Identifier	a		7515327	1					
ANR	7515339	CFGEntryNode	ENTRY		7515327		True				
ANR	7515340	CFGExitNode	EXIT		7515327		True				
ANR	7515341	Symbol	a		7515327						
ANR	7515342	Function	Memento_reference	2680:0:74902:74953							
ANR	7515343	FunctionDef	Memento_reference (void * a)		7515342	0					
ANR	7515344	CompoundStatement		2681:0:74937:74953	7515342	0					
ANR	7515345	ReturnStatement	return a ;	2682:4:74943:74951	7515342	0	True				
ANR	7515346	Identifier	a		7515342	0					
ANR	7515347	ReturnType	void *		7515342	1					
ANR	7515348	Identifier	( Memento_reference )		7515342	2					
ANR	7515349	Identifier	Memento_reference		7515342	3					
ANR	7515350	ParameterList	void * a		7515342	4					
ANR	7515351	Parameter	void * a	2680:26:74928:74934	7515342	0	True				
ANR	7515352	ParameterType	void *		7515342	0					
ANR	7515353	Identifier	a		7515342	1					
ANR	7515354	CFGEntryNode	ENTRY		7515342		True				
ANR	7515355	CFGExitNode	EXIT		7515342		True				
ANR	7515356	Symbol	a		7515342						
ANR	7515357	Function	Memento_malloc	2685:1:74957:75124							
ANR	7515358	FunctionDef	Memento_malloc (size_t size)		7515357	0					
ANR	7515359	CompoundStatement		2691:0:75078:75124	7515357	0					
ANR	7515360	ReturnStatement	return MEMENTO_UNDERLYING_MALLOC ( size ) ;	2692:4:75084:75122	7515357	0	True				
ANR	7515361	CallExpression	MEMENTO_UNDERLYING_MALLOC ( size )		7515357	0					
ANR	7515362	Callee	MEMENTO_UNDERLYING_MALLOC		7515357	0					
ANR	7515363	Identifier	MEMENTO_UNDERLYING_MALLOC		7515357	0					
ANR	7515364	ArgumentList	size		7515357	1					
ANR	7515365	Argument	size		7515357	0					
ANR	7515366	Identifier	size		7515357	0					
ANR	7515367	ReturnType	undef Memento_malloc undef Memento_free undef Memento_realloc undef Memento_calloc void *		7515357	1					
ANR	7515368	Identifier	Memento_malloc		7515357	2					
ANR	7515369	ParameterList	size_t size		7515357	3					
ANR	7515370	Parameter	size_t size	2690:21:75065:75075	7515357	0	True				
ANR	7515371	ParameterType	size_t		7515357	0					
ANR	7515372	Identifier	size		7515357	1					
ANR	7515373	CFGEntryNode	ENTRY		7515357		True				
ANR	7515374	CFGExitNode	EXIT		7515357		True				
ANR	7515375	Symbol	size		7515357						
ANR	7515376	Symbol	MEMENTO_UNDERLYING_MALLOC		7515357						
ANR	7515377	Function	Memento_free	2695:0:75127:75188							
ANR	7515378	FunctionDef	Memento_free (void * b)		7515377	0					
ANR	7515379	CompoundStatement		2696:0:75154:75188	7515377	0					
ANR	7515380	ExpressionStatement	MEMENTO_UNDERLYING_FREE ( b )	2697:4:75160:75186	7515377	0	True				
ANR	7515381	CallExpression	MEMENTO_UNDERLYING_FREE ( b )		7515377	0					
ANR	7515382	Callee	MEMENTO_UNDERLYING_FREE		7515377	0					
ANR	7515383	Identifier	MEMENTO_UNDERLYING_FREE		7515377	0					
ANR	7515384	ArgumentList	b		7515377	1					
ANR	7515385	Argument	b		7515377	0					
ANR	7515386	Identifier	b		7515377	0					
ANR	7515387	ReturnType	void		7515377	1					
ANR	7515388	Identifier	Memento_free		7515377	2					
ANR	7515389	ParameterList	void * b		7515377	3					
ANR	7515390	Parameter	void * b	2695:18:75145:75151	7515377	0	True				
ANR	7515391	ParameterType	void *		7515377	0					
ANR	7515392	Identifier	b		7515377	1					
ANR	7515393	CFGEntryNode	ENTRY		7515377		True				
ANR	7515394	CFGExitNode	EXIT		7515377		True				
ANR	7515395	Symbol	b		7515377						
ANR	7515396	Function	Memento_realloc	2700:0:75191:75279							
ANR	7515397	FunctionDef	"Memento_realloc (void * b , size_t s)"		7515396	0					
ANR	7515398	CompoundStatement		2701:0:75232:75279	7515396	0					
ANR	7515399	ReturnStatement	"return MEMENTO_UNDERLYING_REALLOC ( b , s ) ;"	2702:4:75238:75277	7515396	0	True				
ANR	7515400	CallExpression	"MEMENTO_UNDERLYING_REALLOC ( b , s )"		7515396	0					
ANR	7515401	Callee	MEMENTO_UNDERLYING_REALLOC		7515396	0					
ANR	7515402	Identifier	MEMENTO_UNDERLYING_REALLOC		7515396	0					
ANR	7515403	ArgumentList	b		7515396	1					
ANR	7515404	Argument	b		7515396	0					
ANR	7515405	Identifier	b		7515396	0					
ANR	7515406	Argument	s		7515396	1					
ANR	7515407	Identifier	s		7515396	0					
ANR	7515408	ReturnType	void *		7515396	1					
ANR	7515409	Identifier	Memento_realloc		7515396	2					
ANR	7515410	ParameterList	"void * b , size_t s"		7515396	3					
ANR	7515411	Parameter	void * b	2700:22:75213:75219	7515396	0	True				
ANR	7515412	ParameterType	void *		7515396	0					
ANR	7515413	Identifier	b		7515396	1					
ANR	7515414	Parameter	size_t s	2700:31:75222:75229	7515396	1	True				
ANR	7515415	ParameterType	size_t		7515396	0					
ANR	7515416	Identifier	s		7515396	1					
ANR	7515417	CFGEntryNode	ENTRY		7515396		True				
ANR	7515418	CFGExitNode	EXIT		7515396		True				
ANR	7515419	Symbol	b		7515396						
ANR	7515420	Symbol	s		7515396						
ANR	7515421	Symbol	MEMENTO_UNDERLYING_REALLOC		7515396						
ANR	7515422	Function	Memento_calloc	2705:0:75282:75369							
ANR	7515423	FunctionDef	"Memento_calloc (size_t n , size_t s)"		7515422	0					
ANR	7515424	CompoundStatement		2706:0:75323:75369	7515422	0					
ANR	7515425	ReturnStatement	"return MEMENTO_UNDERLYING_CALLOC ( n , s ) ;"	2707:4:75329:75367	7515422	0	True				
ANR	7515426	CallExpression	"MEMENTO_UNDERLYING_CALLOC ( n , s )"		7515422	0					
ANR	7515427	Callee	MEMENTO_UNDERLYING_CALLOC		7515422	0					
ANR	7515428	Identifier	MEMENTO_UNDERLYING_CALLOC		7515422	0					
ANR	7515429	ArgumentList	n		7515422	1					
ANR	7515430	Argument	n		7515422	0					
ANR	7515431	Identifier	n		7515422	0					
ANR	7515432	Argument	s		7515422	1					
ANR	7515433	Identifier	s		7515422	0					
ANR	7515434	ReturnType	void *		7515422	1					
ANR	7515435	Identifier	Memento_calloc		7515422	2					
ANR	7515436	ParameterList	"size_t n , size_t s"		7515422	3					
ANR	7515437	Parameter	size_t n	2705:21:75303:75310	7515422	0	True				
ANR	7515438	ParameterType	size_t		7515422	0					
ANR	7515439	Identifier	n		7515422	1					
ANR	7515440	Parameter	size_t s	2705:31:75313:75320	7515422	1	True				
ANR	7515441	ParameterType	size_t		7515422	0					
ANR	7515442	Identifier	s		7515422	1					
ANR	7515443	CFGEntryNode	ENTRY		7515422		True				
ANR	7515444	CFGExitNode	EXIT		7515422		True				
ANR	7515445	Symbol	MEMENTO_UNDERLYING_CALLOC		7515422						
ANR	7515446	Symbol	s		7515422						
ANR	7515447	Symbol	n		7515422						
ANR	7515448	Function	Memento_listBlocks	2710:0:75372:75406							
ANR	7515449	FunctionDef	Memento_listBlocks ()		7515448	0					
ANR	7515450	CompoundStatement		2711:0:75404:75406	7515448	0					
ANR	7515451	ReturnType	void		7515448	1					
ANR	7515452	Identifier	( Memento_listBlocks )		7515448	2					
ANR	7515453	Identifier	Memento_listBlocks		7515448	3					
ANR	7515454	ParameterList			7515448	4					
ANR	7515455	CFGEntryNode	ENTRY		7515448		True				
ANR	7515456	CFGExitNode	EXIT		7515448		True				
ANR	7515457	Function	Memento_listNewBlocks	2714:0:75409:75446							
ANR	7515458	FunctionDef	Memento_listNewBlocks ()		7515457	0					
ANR	7515459	CompoundStatement		2715:0:75444:75446	7515457	0					
ANR	7515460	ReturnType	void		7515457	1					
ANR	7515461	Identifier	( Memento_listNewBlocks )		7515457	2					
ANR	7515462	Identifier	Memento_listNewBlocks		7515457	3					
ANR	7515463	ParameterList			7515457	4					
ANR	7515464	CFGEntryNode	ENTRY		7515457		True				
ANR	7515465	CFGExitNode	EXIT		7515457		True				
ANR	7515466	Function	Memento_setMax	2718:0:75449:75501							
ANR	7515467	FunctionDef	Memento_setMax (size_t max)		7515466	0					
ANR	7515468	CompoundStatement		2719:0:75485:75501	7515466	0					
ANR	7515469	ReturnStatement	return 0 ;	2720:4:75491:75499	7515466	0	True				
ANR	7515470	PrimaryExpression	0		7515466	0					
ANR	7515471	ReturnType	size_t		7515466	1					
ANR	7515472	Identifier	( Memento_setMax )		7515466	2					
ANR	7515473	Identifier	Memento_setMax		7515466	3					
ANR	7515474	ParameterList	size_t max		7515466	4					
ANR	7515475	Parameter	size_t max	2718:24:75473:75482	7515466	0	True				
ANR	7515476	ParameterType	size_t		7515466	0					
ANR	7515477	Identifier	max		7515466	1					
ANR	7515478	CFGEntryNode	ENTRY		7515466		True				
ANR	7515479	CFGExitNode	EXIT		7515466		True				
ANR	7515480	Symbol	max		7515466						
ANR	7515481	Function	Memento_stats	2723:0:75504:75533							
ANR	7515482	FunctionDef	Memento_stats ()		7515481	0					
ANR	7515483	CompoundStatement		2724:0:75531:75533	7515481	0					
ANR	7515484	ReturnType	void		7515481	1					
ANR	7515485	Identifier	( Memento_stats )		7515481	2					
ANR	7515486	Identifier	Memento_stats		7515481	3					
ANR	7515487	ParameterList			7515481	4					
ANR	7515488	CFGEntryNode	ENTRY		7515481		True				
ANR	7515489	CFGExitNode	EXIT		7515481		True				
ANR	7515490	Function	Memento_label	2727:0:75536:75606							
ANR	7515491	FunctionDef	"Memento_label (void * ptr , const char * label)"		7515490	0					
ANR	7515492	CompoundStatement		2728:0:75588:75606	7515490	0					
ANR	7515493	ReturnStatement	return ptr ;	2729:4:75594:75604	7515490	0	True				
ANR	7515494	Identifier	ptr		7515490	0					
ANR	7515495	ReturnType	void *		7515490	1					
ANR	7515496	Identifier	( Memento_label )		7515490	2					
ANR	7515497	Identifier	Memento_label		7515490	3					
ANR	7515498	ParameterList	"void * ptr , const char * label"		7515490	4					
ANR	7515499	Parameter	void * ptr	2727:22:75558:75566	7515490	0	True				
ANR	7515500	ParameterType	void *		7515490	0					
ANR	7515501	Identifier	ptr		7515490	1					
ANR	7515502	Parameter	const char * label	2727:33:75569:75585	7515490	1	True				
ANR	7515503	ParameterType	const char *		7515490	0					
ANR	7515504	Identifier	label		7515490	1					
ANR	7515505	CFGEntryNode	ENTRY		7515490		True				
ANR	7515506	CFGExitNode	EXIT		7515490		True				
ANR	7515507	Symbol	label		7515490						
ANR	7515508	Symbol	ptr		7515490						
ANR	7515509	Function	Memento_info	2732:0:75609:75643							
ANR	7515510	FunctionDef	Memento_info (void * addr)		7515509	0					
ANR	7515511	CompoundStatement		2733:0:75641:75643	7515509	0					
ANR	7515512	ReturnType	void		7515509	1					
ANR	7515513	Identifier	( Memento_info )		7515509	2					
ANR	7515514	Identifier	Memento_info		7515509	3					
ANR	7515515	ParameterList	void * addr		7515509	4					
ANR	7515516	Parameter	void * addr	2732:20:75629:75638	7515509	0	True				
ANR	7515517	ParameterType	void *		7515509	0					
ANR	7515518	Identifier	addr		7515509	1					
ANR	7515519	CFGEntryNode	ENTRY		7515509		True				
ANR	7515520	CFGExitNode	EXIT		7515509		True				
ANR	7515521	Symbol	addr		7515509						
ANR	7515522	Function	Memento_listBlockInfo	2736:0:75646:75683							
ANR	7515523	FunctionDef	Memento_listBlockInfo ()		7515522	0					
ANR	7515524	CompoundStatement		2737:0:75681:75683	7515522	0					
ANR	7515525	ReturnType	void		7515522	1					
ANR	7515526	Identifier	( Memento_listBlockInfo )		7515522	2					
ANR	7515527	Identifier	Memento_listBlockInfo		7515522	3					
ANR	7515528	ParameterList			7515522	4					
ANR	7515529	CFGEntryNode	ENTRY		7515522		True				
ANR	7515530	CFGExitNode	EXIT		7515522		True				
ANR	7515531	Function	Memento_startLeaking	2740:0:75686:75722							
ANR	7515532	FunctionDef	Memento_startLeaking ()		7515531	0					
ANR	7515533	CompoundStatement		2741:0:75720:75722	7515531	0					
ANR	7515534	ReturnType	void		7515531	1					
ANR	7515535	Identifier	( Memento_startLeaking )		7515531	2					
ANR	7515536	Identifier	Memento_startLeaking		7515531	3					
ANR	7515537	ParameterList			7515531	4					
ANR	7515538	CFGEntryNode	ENTRY		7515531		True				
ANR	7515539	CFGExitNode	EXIT		7515531		True				
ANR	7515540	Function	Memento_stopLeaking	2744:0:75725:75760							
ANR	7515541	FunctionDef	Memento_stopLeaking ()		7515540	0					
ANR	7515542	CompoundStatement		2745:0:75758:75760	7515540	0					
ANR	7515543	ReturnType	void		7515540	1					
ANR	7515544	Identifier	( Memento_stopLeaking )		7515540	2					
ANR	7515545	Identifier	Memento_stopLeaking		7515540	3					
ANR	7515546	ParameterList			7515540	4					
ANR	7515547	CFGEntryNode	ENTRY		7515540		True				
ANR	7515548	CFGExitNode	EXIT		7515540		True				
