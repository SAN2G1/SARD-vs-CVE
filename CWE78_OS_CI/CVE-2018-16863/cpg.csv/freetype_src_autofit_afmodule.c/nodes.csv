command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3319685	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_autofit_afmodule.c								
ANR	3319686	DeclStmt									
ANR	3319687	Decl							extern void	"extern void ( AF_GlyphHints hints , FT_Bool to_stdout )"	af_glyph_hints_dump_segments
ANR	3319688	DeclStmt									
ANR	3319689	Decl							extern void	"extern void ( AF_GlyphHints hints , FT_Bool to_stdout )"	af_glyph_hints_dump_points
ANR	3319690	DeclStmt									
ANR	3319691	Decl							extern void	"extern void ( AF_GlyphHints hints , FT_Bool to_stdout )"	af_glyph_hints_dump_edges
ANR	3319692	DeclStmt									
ANR	3319693	Decl							int	int	_af_debug_disable_horz_hints
ANR	3319694	DeclStmt									
ANR	3319695	Decl							int	int	_af_debug_disable_vert_hints
ANR	3319696	DeclStmt									
ANR	3319697	Decl							int	int	_af_debug_disable_blue_hints
ANR	3319698	DeclStmt									
ANR	3319699	Decl							AF_GlyphHintsRec	AF_GlyphHintsRec [ 1 ]	_af_debug_hints_rec
ANR	3319700	DeclStmt									
ANR	3319701	Decl							void	void *	_af_debug_hints
ANR	3319702	Function	af_property_get_face_globals	73:2:2802:3639							
ANR	3319703	FunctionDef	"af_property_get_face_globals (FT_Face face , AF_FaceGlobals * aglobals , AF_Module module)"		3319702	0					
ANR	3319704	CompoundStatement		77:2:2992:3639	3319702	0					
ANR	3319705	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	78:4:2998:3031	3319702	0	True				
ANR	3319706	IdentifierDecl	error = FT_Err_Ok		3319702	0					
ANR	3319707	IdentifierDeclType	FT_Error		3319702	0					
ANR	3319708	Identifier	error		3319702	1					
ANR	3319709	AssignmentExpression	error = FT_Err_Ok		3319702	2		=			
ANR	3319710	Identifier	FT_Err_Ok		3319702	0					
ANR	3319711	Identifier	FT_Err_Ok		3319702	1					
ANR	3319712	IdentifierDeclStatement	AF_FaceGlobals globals ;	79:4:3037:3060	3319702	1	True				
ANR	3319713	IdentifierDecl	globals		3319702	0					
ANR	3319714	IdentifierDeclType	AF_FaceGlobals		3319702	0					
ANR	3319715	Identifier	globals		3319702	1					
ANR	3319716	IfStatement	if ( ! face )		3319702	2					
ANR	3319717	Condition	! face	82:9:3073:3077	3319702	0	True				
ANR	3319718	UnaryOperationExpression	! face		3319702	0					
ANR	3319719	UnaryOperator	!		3319702	0					
ANR	3319720	Identifier	face		3319702	1					
ANR	3319721	ReturnStatement	return FT_THROW ( Invalid_Face_Handle ) ;	83:6:3087:3125	3319702	1	True				
ANR	3319722	CallExpression	FT_THROW ( Invalid_Face_Handle )		3319702	0					
ANR	3319723	Callee	FT_THROW		3319702	0					
ANR	3319724	Identifier	FT_THROW		3319702	0					
ANR	3319725	ArgumentList	Invalid_Face_Handle		3319702	1					
ANR	3319726	Argument	Invalid_Face_Handle		3319702	0					
ANR	3319727	Identifier	Invalid_Face_Handle		3319702	0					
ANR	3319728	ExpressionStatement	globals = ( AF_FaceGlobals ) face -> autohint . data	85:4:3132:3177	3319702	3	True				
ANR	3319729	AssignmentExpression	globals = ( AF_FaceGlobals ) face -> autohint . data		3319702	0		=			
ANR	3319730	Identifier	globals		3319702	0					
ANR	3319731	CastExpression	( AF_FaceGlobals ) face -> autohint . data		3319702	1					
ANR	3319732	CastTarget	AF_FaceGlobals		3319702	0					
ANR	3319733	MemberAccess	face -> autohint . data		3319702	1					
ANR	3319734	PtrMemberAccess	face -> autohint		3319702	0					
ANR	3319735	Identifier	face		3319702	0					
ANR	3319736	Identifier	autohint		3319702	1					
ANR	3319737	Identifier	data		3319702	1					
ANR	3319738	IfStatement	if ( ! globals )		3319702	4					
ANR	3319739	Condition	! globals	86:9:3188:3195	3319702	0	True				
ANR	3319740	UnaryOperationExpression	! globals		3319702	0					
ANR	3319741	UnaryOperator	!		3319702	0					
ANR	3319742	Identifier	globals		3319702	1					
ANR	3319743	CompoundStatement		11:4:210:210	3319702	1					
ANR	3319744	ExpressionStatement	"error = af_face_globals_new ( face , & globals , module )"	90:6:3325:3378	3319702	0	True				
ANR	3319745	AssignmentExpression	"error = af_face_globals_new ( face , & globals , module )"		3319702	0		=			
ANR	3319746	Identifier	error		3319702	0					
ANR	3319747	CallExpression	"af_face_globals_new ( face , & globals , module )"		3319702	1					
ANR	3319748	Callee	af_face_globals_new		3319702	0					
ANR	3319749	Identifier	af_face_globals_new		3319702	0					
ANR	3319750	ArgumentList	face		3319702	1					
ANR	3319751	Argument	face		3319702	0					
ANR	3319752	Identifier	face		3319702	0					
ANR	3319753	Argument	& globals		3319702	1					
ANR	3319754	UnaryOperationExpression	& globals		3319702	0					
ANR	3319755	UnaryOperator	&		3319702	0					
ANR	3319756	Identifier	globals		3319702	1					
ANR	3319757	Argument	module		3319702	2					
ANR	3319758	Identifier	module		3319702	0					
ANR	3319759	IfStatement	if ( ! error )		3319702	1					
ANR	3319760	Condition	! error	91:11:3391:3396	3319702	0	True				
ANR	3319761	UnaryOperationExpression	! error		3319702	0					
ANR	3319762	UnaryOperator	!		3319702	0					
ANR	3319763	Identifier	error		3319702	1					
ANR	3319764	CompoundStatement		16:6:413:413	3319702	1					
ANR	3319765	ExpressionStatement	face -> autohint . data = ( FT_Pointer ) globals	93:8:3416:3467	3319702	0	True				
ANR	3319766	AssignmentExpression	face -> autohint . data = ( FT_Pointer ) globals		3319702	0		=			
ANR	3319767	MemberAccess	face -> autohint . data		3319702	0					
ANR	3319768	PtrMemberAccess	face -> autohint		3319702	0					
ANR	3319769	Identifier	face		3319702	0					
ANR	3319770	Identifier	autohint		3319702	1					
ANR	3319771	Identifier	data		3319702	1					
ANR	3319772	CastExpression	( FT_Pointer ) globals		3319702	1					
ANR	3319773	CastTarget	FT_Pointer		3319702	0					
ANR	3319774	Identifier	globals		3319702	1					
ANR	3319775	ExpressionStatement	face -> autohint . finalizer = ( FT_Generic_Finalizer ) af_face_globals_free	95:8:3477:3556	3319702	1	True				
ANR	3319776	AssignmentExpression	face -> autohint . finalizer = ( FT_Generic_Finalizer ) af_face_globals_free		3319702	0		=			
ANR	3319777	MemberAccess	face -> autohint . finalizer		3319702	0					
ANR	3319778	PtrMemberAccess	face -> autohint		3319702	0					
ANR	3319779	Identifier	face		3319702	0					
ANR	3319780	Identifier	autohint		3319702	1					
ANR	3319781	Identifier	finalizer		3319702	1					
ANR	3319782	CastExpression	( FT_Generic_Finalizer ) af_face_globals_free		3319702	1					
ANR	3319783	CastTarget	FT_Generic_Finalizer		3319702	0					
ANR	3319784	Identifier	af_face_globals_free		3319702	1					
ANR	3319785	IfStatement	if ( ! error )		3319702	5					
ANR	3319786	Condition	! error	100:9:3582:3587	3319702	0	True				
ANR	3319787	UnaryOperationExpression	! error		3319702	0					
ANR	3319788	UnaryOperator	!		3319702	0					
ANR	3319789	Identifier	error		3319702	1					
ANR	3319790	ExpressionStatement	* aglobals = globals	101:6:3597:3616	3319702	1	True				
ANR	3319791	AssignmentExpression	* aglobals = globals		3319702	0		=			
ANR	3319792	UnaryOperationExpression	* aglobals		3319702	0					
ANR	3319793	UnaryOperator	*		3319702	0					
ANR	3319794	Identifier	aglobals		3319702	1					
ANR	3319795	Identifier	globals		3319702	1					
ANR	3319796	ReturnStatement	return error ;	103:4:3623:3635	3319702	6	True				
ANR	3319797	Identifier	error		3319702	0					
ANR	3319798	ReturnType	static FT_Error		3319702	1					
ANR	3319799	Identifier	af_property_get_face_globals		3319702	2					
ANR	3319800	ParameterList	"FT_Face face , AF_FaceGlobals * aglobals , AF_Module module"		3319702	3					
ANR	3319801	Parameter	FT_Face face	74:32:2850:2870	3319702	0	True				
ANR	3319802	ParameterType	FT_Face		3319702	0					
ANR	3319803	Identifier	face		3319702	1					
ANR	3319804	Parameter	AF_FaceGlobals * aglobals	75:32:2905:2929	3319702	1	True				
ANR	3319805	ParameterType	AF_FaceGlobals *		3319702	0					
ANR	3319806	Identifier	aglobals		3319702	1					
ANR	3319807	Parameter	AF_Module module	76:32:2964:2986	3319702	2	True				
ANR	3319808	ParameterType	AF_Module		3319702	0					
ANR	3319809	Identifier	module		3319702	1					
ANR	3319810	CFGEntryNode	ENTRY		3319702		True				
ANR	3319811	CFGExitNode	EXIT		3319702		True				
ANR	3319812	Symbol	face -> autohint		3319702						
ANR	3319813	Symbol	af_face_globals_free		3319702						
ANR	3319814	Symbol	FT_Err_Ok		3319702						
ANR	3319815	Symbol	aglobals		3319702						
ANR	3319816	Symbol	* aglobals		3319702						
ANR	3319817	Symbol	module		3319702						
ANR	3319818	Symbol	globals		3319702						
ANR	3319819	Symbol	error		3319702						
ANR	3319820	Symbol	face -> autohint . data		3319702						
ANR	3319821	Symbol	af_face_globals_new		3319702						
ANR	3319822	Symbol	* face		3319702						
ANR	3319823	Symbol	FT_THROW		3319702						
ANR	3319824	Symbol	face		3319702						
ANR	3319825	Symbol	face -> autohint . finalizer		3319702						
ANR	3319826	Symbol	& globals		3319702						
ANR	3319827	Symbol	Invalid_Face_Handle		3319702						
ANR	3319828	Function	af_property_set	120:2:3934:9312							
ANR	3319829	FunctionDef	"af_property_set (FT_Module ft_module , const char * property_name , const void * value , FT_Bool value_is_string)"		3319828	0					
ANR	3319830	CompoundStatement		125:2:4131:9312	3319828	0					
ANR	3319831	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	126:4:4137:4166	3319828	0	True				
ANR	3319832	IdentifierDecl	error = FT_Err_Ok		3319828	0					
ANR	3319833	IdentifierDeclType	FT_Error		3319828	0					
ANR	3319834	Identifier	error		3319828	1					
ANR	3319835	AssignmentExpression	error = FT_Err_Ok		3319828	2		=			
ANR	3319836	Identifier	FT_Err_Ok		3319828	0					
ANR	3319837	Identifier	FT_Err_Ok		3319828	1					
ANR	3319838	IdentifierDeclStatement	AF_Module module = ( AF_Module ) ft_module ;	127:4:4172:4212	3319828	1	True				
ANR	3319839	IdentifierDecl	module = ( AF_Module ) ft_module		3319828	0					
ANR	3319840	IdentifierDeclType	AF_Module		3319828	0					
ANR	3319841	Identifier	module		3319828	1					
ANR	3319842	AssignmentExpression	module = ( AF_Module ) ft_module		3319828	2		=			
ANR	3319843	Identifier	module		3319828	0					
ANR	3319844	CastExpression	( AF_Module ) ft_module		3319828	1					
ANR	3319845	CastTarget	AF_Module		3319828	0					
ANR	3319846	Identifier	ft_module		3319828	1					
ANR	3319847	ExpressionStatement	FT_UNUSED ( value_is_string )	130:4:4267:4295	3319828	2	True				
ANR	3319848	CallExpression	FT_UNUSED ( value_is_string )		3319828	0					
ANR	3319849	Callee	FT_UNUSED		3319828	0					
ANR	3319850	Identifier	FT_UNUSED		3319828	0					
ANR	3319851	ArgumentList	value_is_string		3319828	1					
ANR	3319852	Argument	value_is_string		3319828	0					
ANR	3319853	Identifier	value_is_string		3319828	0					
ANR	3319854	IfStatement	"if ( ! ft_strcmp ( property_name , ""fallback-script"" ) )"		3319828	3					
ANR	3319855	Condition	"! ft_strcmp ( property_name , ""fallback-script"" )"	134:9:4315:4360	3319828	0	True				
ANR	3319856	UnaryOperationExpression	"! ft_strcmp ( property_name , ""fallback-script"" )"		3319828	0					
ANR	3319857	UnaryOperator	!		3319828	0					
ANR	3319858	CallExpression	"ft_strcmp ( property_name , ""fallback-script"" )"		3319828	1					
ANR	3319859	Callee	ft_strcmp		3319828	0					
ANR	3319860	Identifier	ft_strcmp		3319828	0					
ANR	3319861	ArgumentList	property_name		3319828	1					
ANR	3319862	Argument	property_name		3319828	0					
ANR	3319863	Identifier	property_name		3319828	0					
ANR	3319864	Argument	"""fallback-script"""		3319828	1					
ANR	3319865	PrimaryExpression	"""fallback-script"""		3319828	0					
ANR	3319866	CompoundStatement		13:6:277:289	3319828	1					
ANR	3319867	IdentifierDeclStatement	FT_UInt * fallback_script ;	136:6:4376:4401	3319828	0	True				
ANR	3319868	IdentifierDecl	* fallback_script		3319828	0					
ANR	3319869	IdentifierDeclType	FT_UInt *		3319828	0					
ANR	3319870	Identifier	fallback_script		3319828	1					
ANR	3319871	IdentifierDeclStatement	FT_UInt ss ;	137:6:4409:4421	3319828	1	True				
ANR	3319872	IdentifierDecl	ss		3319828	0					
ANR	3319873	IdentifierDeclType	FT_UInt		3319828	0					
ANR	3319874	Identifier	ss		3319828	1					
ANR	3319875	IfStatement	if ( value_is_string )		3319828	2					
ANR	3319876	Condition	value_is_string	141:11:4483:4497	3319828	0	True				
ANR	3319877	Identifier	value_is_string		3319828	0					
ANR	3319878	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	142:8:4509:4544	3319828	1	True				
ANR	3319879	CallExpression	FT_THROW ( Invalid_Argument )		3319828	0					
ANR	3319880	Callee	FT_THROW		3319828	0					
ANR	3319881	Identifier	FT_THROW		3319828	0					
ANR	3319882	ArgumentList	Invalid_Argument		3319828	1					
ANR	3319883	Argument	Invalid_Argument		3319828	0					
ANR	3319884	Identifier	Invalid_Argument		3319828	0					
ANR	3319885	ExpressionStatement	fallback_script = ( FT_UInt * ) value	145:6:4560:4593	3319828	3	True				
ANR	3319886	AssignmentExpression	fallback_script = ( FT_UInt * ) value		3319828	0		=			
ANR	3319887	Identifier	fallback_script		3319828	0					
ANR	3319888	CastExpression	( FT_UInt * ) value		3319828	1					
ANR	3319889	CastTarget	FT_UInt *		3319828	0					
ANR	3319890	Identifier	value		3319828	1					
ANR	3319891	ForStatement	for ( ss = 0 ; AF_STYLE_CLASSES_GET [ ss ] ; ss ++ )		3319828	4					
ANR	3319892	ForInit	ss = 0 ;	150:12:4833:4839	3319828	0	True				
ANR	3319893	AssignmentExpression	ss = 0		3319828	0		=			
ANR	3319894	Identifier	ss		3319828	0					
ANR	3319895	PrimaryExpression	0		3319828	1					
ANR	3319896	Condition	AF_STYLE_CLASSES_GET [ ss ]	150:20:4841:4864	3319828	1	True				
ANR	3319897	ArrayIndexing	AF_STYLE_CLASSES_GET [ ss ]		3319828	0					
ANR	3319898	Identifier	AF_STYLE_CLASSES_GET		3319828	0					
ANR	3319899	Identifier	ss		3319828	1					
ANR	3319900	PostIncDecOperationExpression	ss ++	150:46:4867:4870	3319828	2	True				
ANR	3319901	Identifier	ss		3319828	0					
ANR	3319902	IncDec	++		3319828	1					
ANR	3319903	CompoundStatement		28:8:758:811	3319828	3					
ANR	3319904	IdentifierDeclStatement	AF_StyleClass style_class = AF_STYLE_CLASSES_GET [ ss ] ;	152:8:4890:4943	3319828	0	True				
ANR	3319905	IdentifierDecl	style_class = AF_STYLE_CLASSES_GET [ ss ]		3319828	0					
ANR	3319906	IdentifierDeclType	AF_StyleClass		3319828	0					
ANR	3319907	Identifier	style_class		3319828	1					
ANR	3319908	AssignmentExpression	style_class = AF_STYLE_CLASSES_GET [ ss ]		3319828	2		=			
ANR	3319909	Identifier	style_class		3319828	0					
ANR	3319910	ArrayIndexing	AF_STYLE_CLASSES_GET [ ss ]		3319828	1					
ANR	3319911	Identifier	AF_STYLE_CLASSES_GET		3319828	0					
ANR	3319912	Identifier	ss		3319828	1					
ANR	3319913	IfStatement	if ( ( FT_UInt ) style_class -> script == * fallback_script && style_class -> coverage == AF_COVERAGE_DEFAULT )		3319828	1					
ANR	3319914	Condition	( FT_UInt ) style_class -> script == * fallback_script && style_class -> coverage == AF_COVERAGE_DEFAULT	155:13:4960:5068	3319828	0	True				
ANR	3319915	AndExpression	( FT_UInt ) style_class -> script == * fallback_script && style_class -> coverage == AF_COVERAGE_DEFAULT		3319828	0		&&			
ANR	3319916	EqualityExpression	( FT_UInt ) style_class -> script == * fallback_script		3319828	0		==			
ANR	3319917	CastExpression	( FT_UInt ) style_class -> script		3319828	0					
ANR	3319918	CastTarget	FT_UInt		3319828	0					
ANR	3319919	PtrMemberAccess	style_class -> script		3319828	1					
ANR	3319920	Identifier	style_class		3319828	0					
ANR	3319921	Identifier	script		3319828	1					
ANR	3319922	UnaryOperationExpression	* fallback_script		3319828	1					
ANR	3319923	UnaryOperator	*		3319828	0					
ANR	3319924	Identifier	fallback_script		3319828	1					
ANR	3319925	EqualityExpression	style_class -> coverage == AF_COVERAGE_DEFAULT		3319828	1		==			
ANR	3319926	PtrMemberAccess	style_class -> coverage		3319828	0					
ANR	3319927	Identifier	style_class		3319828	0					
ANR	3319928	Identifier	coverage		3319828	1					
ANR	3319929	Identifier	AF_COVERAGE_DEFAULT		3319828	1					
ANR	3319930	CompoundStatement		33:8:952:952	3319828	1					
ANR	3319931	ExpressionStatement	module -> fallback_style = ss	158:10:5096:5123	3319828	0	True				
ANR	3319932	AssignmentExpression	module -> fallback_style = ss		3319828	0		=			
ANR	3319933	PtrMemberAccess	module -> fallback_style		3319828	0					
ANR	3319934	Identifier	module		3319828	0					
ANR	3319935	Identifier	fallback_style		3319828	1					
ANR	3319936	Identifier	ss		3319828	1					
ANR	3319937	BreakStatement	break ;	159:10:5135:5140	3319828	1	True				
ANR	3319938	IfStatement	if ( ! AF_STYLE_CLASSES_GET [ ss ] )		3319828	5					
ANR	3319939	Condition	! AF_STYLE_CLASSES_GET [ ss ]	163:11:5172:5196	3319828	0	True				
ANR	3319940	UnaryOperationExpression	! AF_STYLE_CLASSES_GET [ ss ]		3319828	0					
ANR	3319941	UnaryOperator	!		3319828	0					
ANR	3319942	ArrayIndexing	AF_STYLE_CLASSES_GET [ ss ]		3319828	1					
ANR	3319943	Identifier	AF_STYLE_CLASSES_GET		3319828	0					
ANR	3319944	Identifier	ss		3319828	1					
ANR	3319945	CompoundStatement		40:6:1074:1074	3319828	1					
ANR	3319946	ExpressionStatement	"FT_TRACE0 ( ( ""af_property_set: Invalid value %d for property `%s'\\n"" , fallback_script , property_name ) )"	165:8:5216:5338	3319828	0	True				
ANR	3319947	CallExpression	"FT_TRACE0 ( ( ""af_property_set: Invalid value %d for property `%s'\\n"" , fallback_script , property_name ) )"		3319828	0					
ANR	3319948	Callee	FT_TRACE0		3319828	0					
ANR	3319949	Identifier	FT_TRACE0		3319828	0					
ANR	3319950	ArgumentList	"""af_property_set: Invalid value %d for property `%s'\\n"" , fallback_script , property_name"		3319828	1					
ANR	3319951	Argument	"""af_property_set: Invalid value %d for property `%s'\\n"" , fallback_script , property_name"		3319828	0					
ANR	3319952	Expression	"""af_property_set: Invalid value %d for property `%s'\\n"" , fallback_script , property_name"		3319828	0					
ANR	3319953	PrimaryExpression	"""af_property_set: Invalid value %d for property `%s'\\n"""		3319828	0					
ANR	3319954	Expression	"fallback_script , property_name"		3319828	1					
ANR	3319955	Identifier	fallback_script		3319828	0					
ANR	3319956	Identifier	property_name		3319828	1					
ANR	3319957	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	167:8:5348:5383	3319828	1	True				
ANR	3319958	CallExpression	FT_THROW ( Invalid_Argument )		3319828	0					
ANR	3319959	Callee	FT_THROW		3319828	0					
ANR	3319960	Identifier	FT_THROW		3319828	0					
ANR	3319961	ArgumentList	Invalid_Argument		3319828	1					
ANR	3319962	Argument	Invalid_Argument		3319828	0					
ANR	3319963	Identifier	Invalid_Argument		3319828	0					
ANR	3319964	ReturnStatement	return error ;	170:6:5400:5412	3319828	6	True				
ANR	3319965	Identifier	error		3319828	0					
ANR	3319966	ElseStatement	else		3319828	0					
ANR	3319967	IfStatement	"if ( ! ft_strcmp ( property_name , ""default-script"" ) )"		3319828	0					
ANR	3319968	Condition	"! ft_strcmp ( property_name , ""default-script"" )"	172:14:5434:5478	3319828	0	True				
ANR	3319969	UnaryOperationExpression	"! ft_strcmp ( property_name , ""default-script"" )"		3319828	0					
ANR	3319970	UnaryOperator	!		3319828	0					
ANR	3319971	CallExpression	"ft_strcmp ( property_name , ""default-script"" )"		3319828	1					
ANR	3319972	Callee	ft_strcmp		3319828	0					
ANR	3319973	Identifier	ft_strcmp		3319828	0					
ANR	3319974	ArgumentList	property_name		3319828	1					
ANR	3319975	Argument	property_name		3319828	0					
ANR	3319976	Identifier	property_name		3319828	0					
ANR	3319977	Argument	"""default-script"""		3319828	1					
ANR	3319978	PrimaryExpression	"""default-script"""		3319828	0					
ANR	3319979	CompoundStatement		50:6:1362:1386	3319828	1					
ANR	3319980	IdentifierDeclStatement	FT_UInt * default_script ;	174:6:5494:5518	3319828	0	True				
ANR	3319981	IdentifierDecl	* default_script		3319828	0					
ANR	3319982	IdentifierDeclType	FT_UInt *		3319828	0					
ANR	3319983	Identifier	default_script		3319828	1					
ANR	3319984	IfStatement	if ( value_is_string )		3319828	1					
ANR	3319985	Condition	value_is_string	178:11:5580:5594	3319828	0	True				
ANR	3319986	Identifier	value_is_string		3319828	0					
ANR	3319987	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	179:8:5606:5641	3319828	1	True				
ANR	3319988	CallExpression	FT_THROW ( Invalid_Argument )		3319828	0					
ANR	3319989	Callee	FT_THROW		3319828	0					
ANR	3319990	Identifier	FT_THROW		3319828	0					
ANR	3319991	ArgumentList	Invalid_Argument		3319828	1					
ANR	3319992	Argument	Invalid_Argument		3319828	0					
ANR	3319993	Identifier	Invalid_Argument		3319828	0					
ANR	3319994	ExpressionStatement	default_script = ( FT_UInt * ) value	182:6:5657:5689	3319828	2	True				
ANR	3319995	AssignmentExpression	default_script = ( FT_UInt * ) value		3319828	0		=			
ANR	3319996	Identifier	default_script		3319828	0					
ANR	3319997	CastExpression	( FT_UInt * ) value		3319828	1					
ANR	3319998	CastTarget	FT_UInt *		3319828	0					
ANR	3319999	Identifier	value		3319828	1					
ANR	3320000	ExpressionStatement	module -> default_script = * default_script	184:6:5698:5738	3319828	3	True				
ANR	3320001	AssignmentExpression	module -> default_script = * default_script		3319828	0		=			
ANR	3320002	PtrMemberAccess	module -> default_script		3319828	0					
ANR	3320003	Identifier	module		3319828	0					
ANR	3320004	Identifier	default_script		3319828	1					
ANR	3320005	UnaryOperationExpression	* default_script		3319828	1					
ANR	3320006	UnaryOperator	*		3319828	0					
ANR	3320007	Identifier	default_script		3319828	1					
ANR	3320008	ReturnStatement	return error ;	186:6:5747:5759	3319828	4	True				
ANR	3320009	Identifier	error		3319828	0					
ANR	3320010	ElseStatement	else		3319828	0					
ANR	3320011	IfStatement	"if ( ! ft_strcmp ( property_name , ""increase-x-height"" ) )"		3319828	0					
ANR	3320012	Condition	"! ft_strcmp ( property_name , ""increase-x-height"" )"	188:14:5781:5828	3319828	0	True				
ANR	3320013	UnaryOperationExpression	"! ft_strcmp ( property_name , ""increase-x-height"" )"		3319828	0					
ANR	3320014	UnaryOperator	!		3319828	0					
ANR	3320015	CallExpression	"ft_strcmp ( property_name , ""increase-x-height"" )"		3319828	1					
ANR	3320016	Callee	ft_strcmp		3319828	0					
ANR	3320017	Identifier	ft_strcmp		3319828	0					
ANR	3320018	ArgumentList	property_name		3319828	1					
ANR	3320019	Argument	property_name		3319828	0					
ANR	3320020	Identifier	property_name		3319828	0					
ANR	3320021	Argument	"""increase-x-height"""		3319828	1					
ANR	3320022	PrimaryExpression	"""increase-x-height"""		3319828	0					
ANR	3320023	CompoundStatement		67:6:1750:1783	3319828	1					
ANR	3320024	IdentifierDeclStatement	FT_Prop_IncreaseXHeight * prop ;	190:6:5844:5874	3319828	0	True				
ANR	3320025	IdentifierDecl	* prop		3319828	0					
ANR	3320026	IdentifierDeclType	FT_Prop_IncreaseXHeight *		3319828	0					
ANR	3320027	Identifier	prop		3319828	1					
ANR	3320028	IdentifierDeclStatement	AF_FaceGlobals globals ;	191:6:5882:5915	3319828	1	True				
ANR	3320029	IdentifierDecl	globals		3319828	0					
ANR	3320030	IdentifierDeclType	AF_FaceGlobals		3319828	0					
ANR	3320031	Identifier	globals		3319828	1					
ANR	3320032	IfStatement	if ( value_is_string )		3319828	2					
ANR	3320033	Condition	value_is_string	195:11:5977:5991	3319828	0	True				
ANR	3320034	Identifier	value_is_string		3319828	0					
ANR	3320035	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	196:8:6003:6038	3319828	1	True				
ANR	3320036	CallExpression	FT_THROW ( Invalid_Argument )		3319828	0					
ANR	3320037	Callee	FT_THROW		3319828	0					
ANR	3320038	Identifier	FT_THROW		3319828	0					
ANR	3320039	ArgumentList	Invalid_Argument		3319828	1					
ANR	3320040	Argument	Invalid_Argument		3319828	0					
ANR	3320041	Identifier	Invalid_Argument		3319828	0					
ANR	3320042	ExpressionStatement	prop = ( FT_Prop_IncreaseXHeight * ) value	199:6:6054:6092	3319828	3	True				
ANR	3320043	AssignmentExpression	prop = ( FT_Prop_IncreaseXHeight * ) value		3319828	0		=			
ANR	3320044	Identifier	prop		3319828	0					
ANR	3320045	CastExpression	( FT_Prop_IncreaseXHeight * ) value		3319828	1					
ANR	3320046	CastTarget	FT_Prop_IncreaseXHeight *		3319828	0					
ANR	3320047	Identifier	value		3319828	1					
ANR	3320048	ExpressionStatement	"error = af_property_get_face_globals ( prop -> face , & globals , module )"	201:6:6101:6169	3319828	4	True				
ANR	3320049	AssignmentExpression	"error = af_property_get_face_globals ( prop -> face , & globals , module )"		3319828	0		=			
ANR	3320050	Identifier	error		3319828	0					
ANR	3320051	CallExpression	"af_property_get_face_globals ( prop -> face , & globals , module )"		3319828	1					
ANR	3320052	Callee	af_property_get_face_globals		3319828	0					
ANR	3320053	Identifier	af_property_get_face_globals		3319828	0					
ANR	3320054	ArgumentList	prop -> face		3319828	1					
ANR	3320055	Argument	prop -> face		3319828	0					
ANR	3320056	PtrMemberAccess	prop -> face		3319828	0					
ANR	3320057	Identifier	prop		3319828	0					
ANR	3320058	Identifier	face		3319828	1					
ANR	3320059	Argument	& globals		3319828	1					
ANR	3320060	UnaryOperationExpression	& globals		3319828	0					
ANR	3320061	UnaryOperator	&		3319828	0					
ANR	3320062	Identifier	globals		3319828	1					
ANR	3320063	Argument	module		3319828	2					
ANR	3320064	Identifier	module		3319828	0					
ANR	3320065	IfStatement	if ( ! error )		3319828	5					
ANR	3320066	Condition	! error	202:11:6182:6187	3319828	0	True				
ANR	3320067	UnaryOperationExpression	! error		3319828	0					
ANR	3320068	UnaryOperator	!		3319828	0					
ANR	3320069	Identifier	error		3319828	1					
ANR	3320070	ExpressionStatement	globals -> increase_x_height = prop -> limit	203:8:6199:6239	3319828	1	True				
ANR	3320071	AssignmentExpression	globals -> increase_x_height = prop -> limit		3319828	0		=			
ANR	3320072	PtrMemberAccess	globals -> increase_x_height		3319828	0					
ANR	3320073	Identifier	globals		3319828	0					
ANR	3320074	Identifier	increase_x_height		3319828	1					
ANR	3320075	PtrMemberAccess	prop -> limit		3319828	1					
ANR	3320076	Identifier	prop		3319828	0					
ANR	3320077	Identifier	limit		3319828	1					
ANR	3320078	ReturnStatement	return error ;	205:6:6248:6260	3319828	6	True				
ANR	3320079	Identifier	error		3319828	0					
ANR	3320080	ElseStatement	else		3319828	0					
ANR	3320081	IfStatement	"if ( ! ft_strcmp ( property_name , ""warping"" ) )"		3319828	0					
ANR	3320082	Condition	"! ft_strcmp ( property_name , ""warping"" )"	208:14:6317:6354	3319828	0	True				
ANR	3320083	UnaryOperationExpression	"! ft_strcmp ( property_name , ""warping"" )"		3319828	0					
ANR	3320084	UnaryOperator	!		3319828	0					
ANR	3320085	CallExpression	"ft_strcmp ( property_name , ""warping"" )"		3319828	1					
ANR	3320086	Callee	ft_strcmp		3319828	0					
ANR	3320087	Identifier	ft_strcmp		3319828	0					
ANR	3320088	ArgumentList	property_name		3319828	1					
ANR	3320089	Argument	property_name		3319828	0					
ANR	3320090	Identifier	property_name		3319828	0					
ANR	3320091	Argument	"""warping"""		3319828	1					
ANR	3320092	PrimaryExpression	"""warping"""		3319828	0					
ANR	3320093	CompoundStatement		85:4:2230:2230	3319828	1					
ANR	3320094	IfStatement	if ( value_is_string )		3319828	0					
ANR	3320095	Condition	value_is_string	211:11:6422:6436	3319828	0	True				
ANR	3320096	Identifier	value_is_string		3319828	0					
ANR	3320097	CompoundStatement		90:8:2369:2410	3319828	1					
ANR	3320098	IdentifierDeclStatement	const char * s = ( const char * ) value ;	213:8:6456:6491	3319828	0	True				
ANR	3320099	IdentifierDecl	* s = ( const char * ) value		3319828	0					
ANR	3320100	IdentifierDeclType	const char *		3319828	0					
ANR	3320101	Identifier	s		3319828	1					
ANR	3320102	AssignmentExpression	* s = ( const char * ) value		3319828	2		=			
ANR	3320103	Identifier	s		3319828	0					
ANR	3320104	CastExpression	( const char * ) value		3319828	1					
ANR	3320105	CastTarget	const char *		3319828	0					
ANR	3320106	Identifier	value		3319828	1					
ANR	3320107	IdentifierDeclStatement	"long w = ft_strtol ( s , NULL , 10 ) ;"	214:8:6501:6542	3319828	1	True				
ANR	3320108	IdentifierDecl	"w = ft_strtol ( s , NULL , 10 )"		3319828	0					
ANR	3320109	IdentifierDeclType	long		3319828	0					
ANR	3320110	Identifier	w		3319828	1					
ANR	3320111	AssignmentExpression	"w = ft_strtol ( s , NULL , 10 )"		3319828	2		=			
ANR	3320112	Identifier	w		3319828	0					
ANR	3320113	CallExpression	"ft_strtol ( s , NULL , 10 )"		3319828	1					
ANR	3320114	Callee	ft_strtol		3319828	0					
ANR	3320115	Identifier	ft_strtol		3319828	0					
ANR	3320116	ArgumentList	s		3319828	1					
ANR	3320117	Argument	s		3319828	0					
ANR	3320118	Identifier	s		3319828	0					
ANR	3320119	Argument	NULL		3319828	1					
ANR	3320120	Identifier	NULL		3319828	0					
ANR	3320121	Argument	10		3319828	2					
ANR	3320122	PrimaryExpression	10		3319828	0					
ANR	3320123	IfStatement	if ( w == 0 )		3319828	2					
ANR	3320124	Condition	w == 0	217:13:6559:6564	3319828	0	True				
ANR	3320125	EqualityExpression	w == 0		3319828	0		==			
ANR	3320126	Identifier	w		3319828	0					
ANR	3320127	PrimaryExpression	0		3319828	1					
ANR	3320128	ExpressionStatement	module -> warping = 0	218:10:6578:6597	3319828	1	True				
ANR	3320129	AssignmentExpression	module -> warping = 0		3319828	0		=			
ANR	3320130	PtrMemberAccess	module -> warping		3319828	0					
ANR	3320131	Identifier	module		3319828	0					
ANR	3320132	Identifier	warping		3319828	1					
ANR	3320133	PrimaryExpression	0		3319828	1					
ANR	3320134	ElseStatement	else		3319828	0					
ANR	3320135	IfStatement	if ( w == 1 )		3319828	0					
ANR	3320136	Condition	w == 1	219:18:6617:6622	3319828	0	True				
ANR	3320137	EqualityExpression	w == 1		3319828	0		==			
ANR	3320138	Identifier	w		3319828	0					
ANR	3320139	PrimaryExpression	1		3319828	1					
ANR	3320140	ExpressionStatement	module -> warping = 1	220:10:6636:6655	3319828	1	True				
ANR	3320141	AssignmentExpression	module -> warping = 1		3319828	0		=			
ANR	3320142	PtrMemberAccess	module -> warping		3319828	0					
ANR	3320143	Identifier	module		3319828	0					
ANR	3320144	Identifier	warping		3319828	1					
ANR	3320145	PrimaryExpression	1		3319828	1					
ANR	3320146	ElseStatement	else		3319828	0					
ANR	3320147	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	222:10:6680:6715	3319828	0	True				
ANR	3320148	CallExpression	FT_THROW ( Invalid_Argument )		3319828	0					
ANR	3320149	Callee	FT_THROW		3319828	0					
ANR	3320150	Identifier	FT_THROW		3319828	0					
ANR	3320151	ArgumentList	Invalid_Argument		3319828	1					
ANR	3320152	Argument	Invalid_Argument		3319828	0					
ANR	3320153	Identifier	Invalid_Argument		3319828	0					
ANR	3320154	ElseStatement	else		3319828	0					
ANR	3320155	CompoundStatement		103:8:2627:2662	3319828	0					
ANR	3320156	IdentifierDeclStatement	FT_Bool * warping = ( FT_Bool * ) value ;	227:8:6759:6794	3319828	0	True				
ANR	3320157	IdentifierDecl	* warping = ( FT_Bool * ) value		3319828	0					
ANR	3320158	IdentifierDeclType	FT_Bool *		3319828	0					
ANR	3320159	Identifier	warping		3319828	1					
ANR	3320160	AssignmentExpression	* warping = ( FT_Bool * ) value		3319828	2		=			
ANR	3320161	Identifier	warping		3319828	0					
ANR	3320162	CastExpression	( FT_Bool * ) value		3319828	1					
ANR	3320163	CastTarget	FT_Bool *		3319828	0					
ANR	3320164	Identifier	value		3319828	1					
ANR	3320165	ExpressionStatement	module -> warping = * warping	230:8:6806:6832	3319828	1	True				
ANR	3320166	AssignmentExpression	module -> warping = * warping		3319828	0		=			
ANR	3320167	PtrMemberAccess	module -> warping		3319828	0					
ANR	3320168	Identifier	module		3319828	0					
ANR	3320169	Identifier	warping		3319828	1					
ANR	3320170	UnaryOperationExpression	* warping		3319828	1					
ANR	3320171	UnaryOperator	*		3319828	0					
ANR	3320172	Identifier	warping		3319828	1					
ANR	3320173	ReturnStatement	return error ;	233:6:6849:6861	3319828	1	True				
ANR	3320174	Identifier	error		3319828	0					
ANR	3320175	ElseStatement	else		3319828	0					
ANR	3320176	IfStatement	"if ( ! ft_strcmp ( property_name , ""darkening-parameters"" ) )"		3319828	0					
ANR	3320177	Condition	"! ft_strcmp ( property_name , ""darkening-parameters"" )"	236:14:6924:6974	3319828	0	True				
ANR	3320178	UnaryOperationExpression	"! ft_strcmp ( property_name , ""darkening-parameters"" )"		3319828	0					
ANR	3320179	UnaryOperator	!		3319828	0					
ANR	3320180	CallExpression	"ft_strcmp ( property_name , ""darkening-parameters"" )"		3319828	1					
ANR	3320181	Callee	ft_strcmp		3319828	0					
ANR	3320182	Identifier	ft_strcmp		3319828	0					
ANR	3320183	ArgumentList	property_name		3319828	1					
ANR	3320184	Argument	property_name		3319828	0					
ANR	3320185	Identifier	property_name		3319828	0					
ANR	3320186	Argument	"""darkening-parameters"""		3319828	1					
ANR	3320187	PrimaryExpression	"""darkening-parameters"""		3319828	0					
ANR	3320188	CompoundStatement		118:6:2983:2997	3319828	1					
ANR	3320189	IdentifierDeclStatement	FT_Int * darken_params ;	238:6:6990:7012	3319828	0	True				
ANR	3320190	IdentifierDecl	* darken_params		3319828	0					
ANR	3320191	IdentifierDeclType	FT_Int *		3319828	0					
ANR	3320192	Identifier	darken_params		3319828	1					
ANR	3320193	IdentifierDeclStatement	"FT_Int x1 , y1 , x2 , y2 , x3 , y3 , x4 , y4 ;"	239:6:7020:7059	3319828	1	True				
ANR	3320194	IdentifierDecl	x1		3319828	0					
ANR	3320195	IdentifierDeclType	FT_Int		3319828	0					
ANR	3320196	Identifier	x1		3319828	1					
ANR	3320197	IdentifierDecl	y1		3319828	1					
ANR	3320198	IdentifierDeclType	FT_Int		3319828	0					
ANR	3320199	Identifier	y1		3319828	1					
ANR	3320200	IdentifierDecl	x2		3319828	2					
ANR	3320201	IdentifierDeclType	FT_Int		3319828	0					
ANR	3320202	Identifier	x2		3319828	1					
ANR	3320203	IdentifierDecl	y2		3319828	3					
ANR	3320204	IdentifierDeclType	FT_Int		3319828	0					
ANR	3320205	Identifier	y2		3319828	1					
ANR	3320206	IdentifierDecl	x3		3319828	4					
ANR	3320207	IdentifierDeclType	FT_Int		3319828	0					
ANR	3320208	Identifier	x3		3319828	1					
ANR	3320209	IdentifierDecl	y3		3319828	5					
ANR	3320210	IdentifierDeclType	FT_Int		3319828	0					
ANR	3320211	Identifier	y3		3319828	1					
ANR	3320212	IdentifierDecl	x4		3319828	6					
ANR	3320213	IdentifierDeclType	FT_Int		3319828	0					
ANR	3320214	Identifier	x4		3319828	1					
ANR	3320215	IdentifierDecl	y4		3319828	7					
ANR	3320216	IdentifierDeclType	FT_Int		3319828	0					
ANR	3320217	Identifier	y4		3319828	1					
ANR	3320218	IdentifierDeclStatement	FT_Int dp [ 8 ] ;	242:6:7115:7129	3319828	2	True				
ANR	3320219	IdentifierDecl	dp [ 8 ]		3319828	0					
ANR	3320220	IdentifierDeclType	FT_Int [ 8 ]		3319828	0					
ANR	3320221	Identifier	dp		3319828	1					
ANR	3320222	PrimaryExpression	8		3319828	2					
ANR	3320223	IfStatement	if ( value_is_string )		3319828	3					
ANR	3320224	Condition	value_is_string	245:11:7144:7158	3319828	0	True				
ANR	3320225	Identifier	value_is_string		3319828	0					
ANR	3320226	CompoundStatement		125:8:3116:3130	3319828	1					
ANR	3320227	IdentifierDeclStatement	const char * s = ( const char * ) value ;	247:8:7178:7213	3319828	0	True				
ANR	3320228	IdentifierDecl	* s = ( const char * ) value		3319828	0					
ANR	3320229	IdentifierDeclType	const char *		3319828	0					
ANR	3320230	Identifier	s		3319828	1					
ANR	3320231	AssignmentExpression	* s = ( const char * ) value		3319828	2		=			
ANR	3320232	Identifier	s		3319828	0					
ANR	3320233	CastExpression	( const char * ) value		3319828	1					
ANR	3320234	CastTarget	const char *		3319828	0					
ANR	3320235	Identifier	value		3319828	1					
ANR	3320236	IdentifierDeclStatement	char * ep ;	248:8:7223:7238	3319828	1	True				
ANR	3320237	IdentifierDecl	* ep		3319828	0					
ANR	3320238	IdentifierDeclType	char *		3319828	0					
ANR	3320239	Identifier	ep		3319828	1					
ANR	3320240	IdentifierDeclStatement	int i ;	249:8:7248:7262	3319828	2	True				
ANR	3320241	IdentifierDecl	i		3319828	0					
ANR	3320242	IdentifierDeclType	int		3319828	0					
ANR	3320243	Identifier	i		3319828	1					
ANR	3320244	ForStatement	for ( i = 0 ; i < 7 ; i ++ )		3319828	3					
ANR	3320245	ForInit	i = 0 ;	253:14:7324:7329	3319828	0	True				
ANR	3320246	AssignmentExpression	i = 0		3319828	0		=			
ANR	3320247	Identifier	i		3319828	0					
ANR	3320248	PrimaryExpression	0		3319828	1					
ANR	3320249	Condition	i < 7	253:21:7331:7335	3319828	1	True				
ANR	3320250	RelationalExpression	i < 7		3319828	0		<			
ANR	3320251	Identifier	i		3319828	0					
ANR	3320252	PrimaryExpression	7		3319828	1					
ANR	3320253	PostIncDecOperationExpression	i ++	253:28:7338:7340	3319828	2	True				
ANR	3320254	Identifier	i		3319828	0					
ANR	3320255	IncDec	++		3319828	1					
ANR	3320256	CompoundStatement		130:8:3220:3220	3319828	3					
ANR	3320257	ExpressionStatement	"dp [ i ] = ( FT_Int ) ft_strtol ( s , & ep , 10 )"	255:10:7364:7403	3319828	0	True				
ANR	3320258	AssignmentExpression	"dp [ i ] = ( FT_Int ) ft_strtol ( s , & ep , 10 )"		3319828	0		=			
ANR	3320259	ArrayIndexing	dp [ i ]		3319828	0					
ANR	3320260	Identifier	dp		3319828	0					
ANR	3320261	Identifier	i		3319828	1					
ANR	3320262	CastExpression	"( FT_Int ) ft_strtol ( s , & ep , 10 )"		3319828	1					
ANR	3320263	CastTarget	FT_Int		3319828	0					
ANR	3320264	CallExpression	"ft_strtol ( s , & ep , 10 )"		3319828	1					
ANR	3320265	Callee	ft_strtol		3319828	0					
ANR	3320266	Identifier	ft_strtol		3319828	0					
ANR	3320267	ArgumentList	s		3319828	1					
ANR	3320268	Argument	s		3319828	0					
ANR	3320269	Identifier	s		3319828	0					
ANR	3320270	Argument	& ep		3319828	1					
ANR	3320271	UnaryOperationExpression	& ep		3319828	0					
ANR	3320272	UnaryOperator	&		3319828	0					
ANR	3320273	Identifier	ep		3319828	1					
ANR	3320274	Argument	10		3319828	2					
ANR	3320275	PrimaryExpression	10		3319828	0					
ANR	3320276	IfStatement	"if ( * ep != ',' || s == ep )"		3319828	1					
ANR	3320277	Condition	"* ep != ',' || s == ep"	256:15:7420:7440	3319828	0	True				
ANR	3320278	OrExpression	"* ep != ',' || s == ep"		3319828	0		||			
ANR	3320279	EqualityExpression	"* ep != ','"		3319828	0		!=			
ANR	3320280	UnaryOperationExpression	* ep		3319828	0					
ANR	3320281	UnaryOperator	*		3319828	0					
ANR	3320282	Identifier	ep		3319828	1					
ANR	3320283	PrimaryExpression	"','"		3319828	1					
ANR	3320284	EqualityExpression	s == ep		3319828	1		==			
ANR	3320285	Identifier	s		3319828	0					
ANR	3320286	Identifier	ep		3319828	1					
ANR	3320287	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	257:12:7456:7491	3319828	1	True				
ANR	3320288	CallExpression	FT_THROW ( Invalid_Argument )		3319828	0					
ANR	3320289	Callee	FT_THROW		3319828	0					
ANR	3320290	Identifier	FT_THROW		3319828	0					
ANR	3320291	ArgumentList	Invalid_Argument		3319828	1					
ANR	3320292	Argument	Invalid_Argument		3319828	0					
ANR	3320293	Identifier	Invalid_Argument		3319828	0					
ANR	3320294	ExpressionStatement	s = ep + 1	259:10:7504:7514	3319828	2	True				
ANR	3320295	AssignmentExpression	s = ep + 1		3319828	0		=			
ANR	3320296	Identifier	s		3319828	0					
ANR	3320297	AdditiveExpression	ep + 1		3319828	1		+			
ANR	3320298	Identifier	ep		3319828	0					
ANR	3320299	PrimaryExpression	1		3319828	1					
ANR	3320300	ExpressionStatement	"dp [ 7 ] = ( FT_Int ) ft_strtol ( s , & ep , 10 )"	262:8:7535:7574	3319828	4	True				
ANR	3320301	AssignmentExpression	"dp [ 7 ] = ( FT_Int ) ft_strtol ( s , & ep , 10 )"		3319828	0		=			
ANR	3320302	ArrayIndexing	dp [ 7 ]		3319828	0					
ANR	3320303	Identifier	dp		3319828	0					
ANR	3320304	PrimaryExpression	7		3319828	1					
ANR	3320305	CastExpression	"( FT_Int ) ft_strtol ( s , & ep , 10 )"		3319828	1					
ANR	3320306	CastTarget	FT_Int		3319828	0					
ANR	3320307	CallExpression	"ft_strtol ( s , & ep , 10 )"		3319828	1					
ANR	3320308	Callee	ft_strtol		3319828	0					
ANR	3320309	Identifier	ft_strtol		3319828	0					
ANR	3320310	ArgumentList	s		3319828	1					
ANR	3320311	Argument	s		3319828	0					
ANR	3320312	Identifier	s		3319828	0					
ANR	3320313	Argument	& ep		3319828	1					
ANR	3320314	UnaryOperationExpression	& ep		3319828	0					
ANR	3320315	UnaryOperator	&		3319828	0					
ANR	3320316	Identifier	ep		3319828	1					
ANR	3320317	Argument	10		3319828	2					
ANR	3320318	PrimaryExpression	10		3319828	0					
ANR	3320319	IfStatement	if ( ! ( * ep == '\\0' || * ep == ' ' ) || s == ep )		3319828	5					
ANR	3320320	Condition	! ( * ep == '\\0' || * ep == ' ' ) || s == ep	263:13:7589:7629	3319828	0	True				
ANR	3320321	OrExpression	! ( * ep == '\\0' || * ep == ' ' ) || s == ep		3319828	0		||			
ANR	3320322	UnaryOperationExpression	! ( * ep == '\\0' || * ep == ' ' )		3319828	0					
ANR	3320323	UnaryOperator	!		3319828	0					
ANR	3320324	OrExpression	* ep == '\\0' || * ep == ' '		3319828	1		||			
ANR	3320325	EqualityExpression	* ep == '\\0'		3319828	0		==			
ANR	3320326	UnaryOperationExpression	* ep		3319828	0					
ANR	3320327	UnaryOperator	*		3319828	0					
ANR	3320328	Identifier	ep		3319828	1					
ANR	3320329	PrimaryExpression	'\\0'		3319828	1					
ANR	3320330	EqualityExpression	* ep == ' '		3319828	1		==			
ANR	3320331	UnaryOperationExpression	* ep		3319828	0					
ANR	3320332	UnaryOperator	*		3319828	0					
ANR	3320333	Identifier	ep		3319828	1					
ANR	3320334	PrimaryExpression	' '		3319828	1					
ANR	3320335	EqualityExpression	s == ep		3319828	1		==			
ANR	3320336	Identifier	s		3319828	0					
ANR	3320337	Identifier	ep		3319828	1					
ANR	3320338	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	264:10:7643:7678	3319828	1	True				
ANR	3320339	CallExpression	FT_THROW ( Invalid_Argument )		3319828	0					
ANR	3320340	Callee	FT_THROW		3319828	0					
ANR	3320341	Identifier	FT_THROW		3319828	0					
ANR	3320342	ArgumentList	Invalid_Argument		3319828	1					
ANR	3320343	Argument	Invalid_Argument		3319828	0					
ANR	3320344	Identifier	Invalid_Argument		3319828	0					
ANR	3320345	ExpressionStatement	darken_params = dp	266:8:7689:7707	3319828	6	True				
ANR	3320346	AssignmentExpression	darken_params = dp		3319828	0		=			
ANR	3320347	Identifier	darken_params		3319828	0					
ANR	3320348	Identifier	dp		3319828	1					
ANR	3320349	ElseStatement	else		3319828	0					
ANR	3320350	ExpressionStatement	darken_params = ( FT_Int * ) value	270:8:7743:7773	3319828	0	True				
ANR	3320351	AssignmentExpression	darken_params = ( FT_Int * ) value		3319828	0		=			
ANR	3320352	Identifier	darken_params		3319828	0					
ANR	3320353	CastExpression	( FT_Int * ) value		3319828	1					
ANR	3320354	CastTarget	FT_Int *		3319828	0					
ANR	3320355	Identifier	value		3319828	1					
ANR	3320356	ExpressionStatement	x1 = darken_params [ 0 ]	272:6:7782:7803	3319828	4	True				
ANR	3320357	AssignmentExpression	x1 = darken_params [ 0 ]		3319828	0		=			
ANR	3320358	Identifier	x1		3319828	0					
ANR	3320359	ArrayIndexing	darken_params [ 0 ]		3319828	1					
ANR	3320360	Identifier	darken_params		3319828	0					
ANR	3320361	PrimaryExpression	0		3319828	1					
ANR	3320362	ExpressionStatement	y1 = darken_params [ 1 ]	273:6:7811:7832	3319828	5	True				
ANR	3320363	AssignmentExpression	y1 = darken_params [ 1 ]		3319828	0		=			
ANR	3320364	Identifier	y1		3319828	0					
ANR	3320365	ArrayIndexing	darken_params [ 1 ]		3319828	1					
ANR	3320366	Identifier	darken_params		3319828	0					
ANR	3320367	PrimaryExpression	1		3319828	1					
ANR	3320368	ExpressionStatement	x2 = darken_params [ 2 ]	274:6:7840:7861	3319828	6	True				
ANR	3320369	AssignmentExpression	x2 = darken_params [ 2 ]		3319828	0		=			
ANR	3320370	Identifier	x2		3319828	0					
ANR	3320371	ArrayIndexing	darken_params [ 2 ]		3319828	1					
ANR	3320372	Identifier	darken_params		3319828	0					
ANR	3320373	PrimaryExpression	2		3319828	1					
ANR	3320374	ExpressionStatement	y2 = darken_params [ 3 ]	275:6:7869:7890	3319828	7	True				
ANR	3320375	AssignmentExpression	y2 = darken_params [ 3 ]		3319828	0		=			
ANR	3320376	Identifier	y2		3319828	0					
ANR	3320377	ArrayIndexing	darken_params [ 3 ]		3319828	1					
ANR	3320378	Identifier	darken_params		3319828	0					
ANR	3320379	PrimaryExpression	3		3319828	1					
ANR	3320380	ExpressionStatement	x3 = darken_params [ 4 ]	276:6:7898:7919	3319828	8	True				
ANR	3320381	AssignmentExpression	x3 = darken_params [ 4 ]		3319828	0		=			
ANR	3320382	Identifier	x3		3319828	0					
ANR	3320383	ArrayIndexing	darken_params [ 4 ]		3319828	1					
ANR	3320384	Identifier	darken_params		3319828	0					
ANR	3320385	PrimaryExpression	4		3319828	1					
ANR	3320386	ExpressionStatement	y3 = darken_params [ 5 ]	277:6:7927:7948	3319828	9	True				
ANR	3320387	AssignmentExpression	y3 = darken_params [ 5 ]		3319828	0		=			
ANR	3320388	Identifier	y3		3319828	0					
ANR	3320389	ArrayIndexing	darken_params [ 5 ]		3319828	1					
ANR	3320390	Identifier	darken_params		3319828	0					
ANR	3320391	PrimaryExpression	5		3319828	1					
ANR	3320392	ExpressionStatement	x4 = darken_params [ 6 ]	278:6:7956:7977	3319828	10	True				
ANR	3320393	AssignmentExpression	x4 = darken_params [ 6 ]		3319828	0		=			
ANR	3320394	Identifier	x4		3319828	0					
ANR	3320395	ArrayIndexing	darken_params [ 6 ]		3319828	1					
ANR	3320396	Identifier	darken_params		3319828	0					
ANR	3320397	PrimaryExpression	6		3319828	1					
ANR	3320398	ExpressionStatement	y4 = darken_params [ 7 ]	279:6:7985:8006	3319828	11	True				
ANR	3320399	AssignmentExpression	y4 = darken_params [ 7 ]		3319828	0		=			
ANR	3320400	Identifier	y4		3319828	0					
ANR	3320401	ArrayIndexing	darken_params [ 7 ]		3319828	1					
ANR	3320402	Identifier	darken_params		3319828	0					
ANR	3320403	PrimaryExpression	7		3319828	1					
ANR	3320404	IfStatement	if ( x1 < 0 || x2 < 0 || x3 < 0 || x4 < 0 || y1 < 0 || y2 < 0 || y3 < 0 || y4 < 0 || x1 > x2 || x2 > x3 || x3 > x4 || y1 > 500 || y2 > 500 || y3 > 500 || y4 > 500 )		3319828	12					
ANR	3320405	Condition	x1 < 0 || x2 < 0 || x3 < 0 || x4 < 0 || y1 < 0 || y2 < 0 || y3 < 0 || y4 < 0 || x1 > x2 || x2 > x3 || x3 > x4 || y1 > 500 || y2 > 500 || y3 > 500 || y4 > 500	281:11:8020:8240	3319828	0	True				
ANR	3320406	OrExpression	x1 < 0 || x2 < 0 || x3 < 0 || x4 < 0 || y1 < 0 || y2 < 0 || y3 < 0 || y4 < 0 || x1 > x2 || x2 > x3 || x3 > x4 || y1 > 500 || y2 > 500 || y3 > 500 || y4 > 500		3319828	0		||			
ANR	3320407	RelationalExpression	x1 < 0		3319828	0		<			
ANR	3320408	Identifier	x1		3319828	0					
ANR	3320409	PrimaryExpression	0		3319828	1					
ANR	3320410	OrExpression	x2 < 0 || x3 < 0 || x4 < 0 || y1 < 0 || y2 < 0 || y3 < 0 || y4 < 0 || x1 > x2 || x2 > x3 || x3 > x4 || y1 > 500 || y2 > 500 || y3 > 500 || y4 > 500		3319828	1		||			
ANR	3320411	RelationalExpression	x2 < 0		3319828	0		<			
ANR	3320412	Identifier	x2		3319828	0					
ANR	3320413	PrimaryExpression	0		3319828	1					
ANR	3320414	OrExpression	x3 < 0 || x4 < 0 || y1 < 0 || y2 < 0 || y3 < 0 || y4 < 0 || x1 > x2 || x2 > x3 || x3 > x4 || y1 > 500 || y2 > 500 || y3 > 500 || y4 > 500		3319828	1		||			
ANR	3320415	RelationalExpression	x3 < 0		3319828	0		<			
ANR	3320416	Identifier	x3		3319828	0					
ANR	3320417	PrimaryExpression	0		3319828	1					
ANR	3320418	OrExpression	x4 < 0 || y1 < 0 || y2 < 0 || y3 < 0 || y4 < 0 || x1 > x2 || x2 > x3 || x3 > x4 || y1 > 500 || y2 > 500 || y3 > 500 || y4 > 500		3319828	1		||			
ANR	3320419	RelationalExpression	x4 < 0		3319828	0		<			
ANR	3320420	Identifier	x4		3319828	0					
ANR	3320421	PrimaryExpression	0		3319828	1					
ANR	3320422	OrExpression	y1 < 0 || y2 < 0 || y3 < 0 || y4 < 0 || x1 > x2 || x2 > x3 || x3 > x4 || y1 > 500 || y2 > 500 || y3 > 500 || y4 > 500		3319828	1		||			
ANR	3320423	RelationalExpression	y1 < 0		3319828	0		<			
ANR	3320424	Identifier	y1		3319828	0					
ANR	3320425	PrimaryExpression	0		3319828	1					
ANR	3320426	OrExpression	y2 < 0 || y3 < 0 || y4 < 0 || x1 > x2 || x2 > x3 || x3 > x4 || y1 > 500 || y2 > 500 || y3 > 500 || y4 > 500		3319828	1		||			
ANR	3320427	RelationalExpression	y2 < 0		3319828	0		<			
ANR	3320428	Identifier	y2		3319828	0					
ANR	3320429	PrimaryExpression	0		3319828	1					
ANR	3320430	OrExpression	y3 < 0 || y4 < 0 || x1 > x2 || x2 > x3 || x3 > x4 || y1 > 500 || y2 > 500 || y3 > 500 || y4 > 500		3319828	1		||			
ANR	3320431	RelationalExpression	y3 < 0		3319828	0		<			
ANR	3320432	Identifier	y3		3319828	0					
ANR	3320433	PrimaryExpression	0		3319828	1					
ANR	3320434	OrExpression	y4 < 0 || x1 > x2 || x2 > x3 || x3 > x4 || y1 > 500 || y2 > 500 || y3 > 500 || y4 > 500		3319828	1		||			
ANR	3320435	RelationalExpression	y4 < 0		3319828	0		<			
ANR	3320436	Identifier	y4		3319828	0					
ANR	3320437	PrimaryExpression	0		3319828	1					
ANR	3320438	OrExpression	x1 > x2 || x2 > x3 || x3 > x4 || y1 > 500 || y2 > 500 || y3 > 500 || y4 > 500		3319828	1		||			
ANR	3320439	RelationalExpression	x1 > x2		3319828	0		>			
ANR	3320440	Identifier	x1		3319828	0					
ANR	3320441	Identifier	x2		3319828	1					
ANR	3320442	OrExpression	x2 > x3 || x3 > x4 || y1 > 500 || y2 > 500 || y3 > 500 || y4 > 500		3319828	1		||			
ANR	3320443	RelationalExpression	x2 > x3		3319828	0		>			
ANR	3320444	Identifier	x2		3319828	0					
ANR	3320445	Identifier	x3		3319828	1					
ANR	3320446	OrExpression	x3 > x4 || y1 > 500 || y2 > 500 || y3 > 500 || y4 > 500		3319828	1		||			
ANR	3320447	RelationalExpression	x3 > x4		3319828	0		>			
ANR	3320448	Identifier	x3		3319828	0					
ANR	3320449	Identifier	x4		3319828	1					
ANR	3320450	OrExpression	y1 > 500 || y2 > 500 || y3 > 500 || y4 > 500		3319828	1		||			
ANR	3320451	RelationalExpression	y1 > 500		3319828	0		>			
ANR	3320452	Identifier	y1		3319828	0					
ANR	3320453	PrimaryExpression	500		3319828	1					
ANR	3320454	OrExpression	y2 > 500 || y3 > 500 || y4 > 500		3319828	1		||			
ANR	3320455	RelationalExpression	y2 > 500		3319828	0		>			
ANR	3320456	Identifier	y2		3319828	0					
ANR	3320457	PrimaryExpression	500		3319828	1					
ANR	3320458	OrExpression	y3 > 500 || y4 > 500		3319828	1		||			
ANR	3320459	RelationalExpression	y3 > 500		3319828	0		>			
ANR	3320460	Identifier	y3		3319828	0					
ANR	3320461	PrimaryExpression	500		3319828	1					
ANR	3320462	RelationalExpression	y4 > 500		3319828	1		>			
ANR	3320463	Identifier	y4		3319828	0					
ANR	3320464	PrimaryExpression	500		3319828	1					
ANR	3320465	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	285:8:8252:8287	3319828	1	True				
ANR	3320466	CallExpression	FT_THROW ( Invalid_Argument )		3319828	0					
ANR	3320467	Callee	FT_THROW		3319828	0					
ANR	3320468	Identifier	FT_THROW		3319828	0					
ANR	3320469	ArgumentList	Invalid_Argument		3319828	1					
ANR	3320470	Argument	Invalid_Argument		3319828	0					
ANR	3320471	Identifier	Invalid_Argument		3319828	0					
ANR	3320472	ExpressionStatement	module -> darken_params [ 0 ] = x1	287:6:8296:8325	3319828	13	True				
ANR	3320473	AssignmentExpression	module -> darken_params [ 0 ] = x1		3319828	0		=			
ANR	3320474	ArrayIndexing	module -> darken_params [ 0 ]		3319828	0					
ANR	3320475	PtrMemberAccess	module -> darken_params		3319828	0					
ANR	3320476	Identifier	module		3319828	0					
ANR	3320477	Identifier	darken_params		3319828	1					
ANR	3320478	PrimaryExpression	0		3319828	1					
ANR	3320479	Identifier	x1		3319828	1					
ANR	3320480	ExpressionStatement	module -> darken_params [ 1 ] = y1	288:6:8333:8362	3319828	14	True				
ANR	3320481	AssignmentExpression	module -> darken_params [ 1 ] = y1		3319828	0		=			
ANR	3320482	ArrayIndexing	module -> darken_params [ 1 ]		3319828	0					
ANR	3320483	PtrMemberAccess	module -> darken_params		3319828	0					
ANR	3320484	Identifier	module		3319828	0					
ANR	3320485	Identifier	darken_params		3319828	1					
ANR	3320486	PrimaryExpression	1		3319828	1					
ANR	3320487	Identifier	y1		3319828	1					
ANR	3320488	ExpressionStatement	module -> darken_params [ 2 ] = x2	289:6:8370:8399	3319828	15	True				
ANR	3320489	AssignmentExpression	module -> darken_params [ 2 ] = x2		3319828	0		=			
ANR	3320490	ArrayIndexing	module -> darken_params [ 2 ]		3319828	0					
ANR	3320491	PtrMemberAccess	module -> darken_params		3319828	0					
ANR	3320492	Identifier	module		3319828	0					
ANR	3320493	Identifier	darken_params		3319828	1					
ANR	3320494	PrimaryExpression	2		3319828	1					
ANR	3320495	Identifier	x2		3319828	1					
ANR	3320496	ExpressionStatement	module -> darken_params [ 3 ] = y2	290:6:8407:8436	3319828	16	True				
ANR	3320497	AssignmentExpression	module -> darken_params [ 3 ] = y2		3319828	0		=			
ANR	3320498	ArrayIndexing	module -> darken_params [ 3 ]		3319828	0					
ANR	3320499	PtrMemberAccess	module -> darken_params		3319828	0					
ANR	3320500	Identifier	module		3319828	0					
ANR	3320501	Identifier	darken_params		3319828	1					
ANR	3320502	PrimaryExpression	3		3319828	1					
ANR	3320503	Identifier	y2		3319828	1					
ANR	3320504	ExpressionStatement	module -> darken_params [ 4 ] = x3	291:6:8444:8473	3319828	17	True				
ANR	3320505	AssignmentExpression	module -> darken_params [ 4 ] = x3		3319828	0		=			
ANR	3320506	ArrayIndexing	module -> darken_params [ 4 ]		3319828	0					
ANR	3320507	PtrMemberAccess	module -> darken_params		3319828	0					
ANR	3320508	Identifier	module		3319828	0					
ANR	3320509	Identifier	darken_params		3319828	1					
ANR	3320510	PrimaryExpression	4		3319828	1					
ANR	3320511	Identifier	x3		3319828	1					
ANR	3320512	ExpressionStatement	module -> darken_params [ 5 ] = y3	292:6:8481:8510	3319828	18	True				
ANR	3320513	AssignmentExpression	module -> darken_params [ 5 ] = y3		3319828	0		=			
ANR	3320514	ArrayIndexing	module -> darken_params [ 5 ]		3319828	0					
ANR	3320515	PtrMemberAccess	module -> darken_params		3319828	0					
ANR	3320516	Identifier	module		3319828	0					
ANR	3320517	Identifier	darken_params		3319828	1					
ANR	3320518	PrimaryExpression	5		3319828	1					
ANR	3320519	Identifier	y3		3319828	1					
ANR	3320520	ExpressionStatement	module -> darken_params [ 6 ] = x4	293:6:8518:8547	3319828	19	True				
ANR	3320521	AssignmentExpression	module -> darken_params [ 6 ] = x4		3319828	0		=			
ANR	3320522	ArrayIndexing	module -> darken_params [ 6 ]		3319828	0					
ANR	3320523	PtrMemberAccess	module -> darken_params		3319828	0					
ANR	3320524	Identifier	module		3319828	0					
ANR	3320525	Identifier	darken_params		3319828	1					
ANR	3320526	PrimaryExpression	6		3319828	1					
ANR	3320527	Identifier	x4		3319828	1					
ANR	3320528	ExpressionStatement	module -> darken_params [ 7 ] = y4	294:6:8555:8584	3319828	20	True				
ANR	3320529	AssignmentExpression	module -> darken_params [ 7 ] = y4		3319828	0		=			
ANR	3320530	ArrayIndexing	module -> darken_params [ 7 ]		3319828	0					
ANR	3320531	PtrMemberAccess	module -> darken_params		3319828	0					
ANR	3320532	Identifier	module		3319828	0					
ANR	3320533	Identifier	darken_params		3319828	1					
ANR	3320534	PrimaryExpression	7		3319828	1					
ANR	3320535	Identifier	y4		3319828	1					
ANR	3320536	ReturnStatement	return error ;	296:6:8593:8605	3319828	21	True				
ANR	3320537	Identifier	error		3319828	0					
ANR	3320538	ElseStatement	else		3319828	0					
ANR	3320539	IfStatement	"if ( ! ft_strcmp ( property_name , ""no-stem-darkening"" ) )"		3319828	0					
ANR	3320540	Condition	"! ft_strcmp ( property_name , ""no-stem-darkening"" )"	298:14:8627:8674	3319828	0	True				
ANR	3320541	UnaryOperationExpression	"! ft_strcmp ( property_name , ""no-stem-darkening"" )"		3319828	0					
ANR	3320542	UnaryOperator	!		3319828	0					
ANR	3320543	CallExpression	"ft_strcmp ( property_name , ""no-stem-darkening"" )"		3319828	1					
ANR	3320544	Callee	ft_strcmp		3319828	0					
ANR	3320545	Identifier	ft_strcmp		3319828	0					
ANR	3320546	ArgumentList	property_name		3319828	1					
ANR	3320547	Argument	property_name		3319828	0					
ANR	3320548	Identifier	property_name		3319828	0					
ANR	3320549	Argument	"""no-stem-darkening"""		3319828	1					
ANR	3320550	PrimaryExpression	"""no-stem-darkening"""		3319828	0					
ANR	3320551	CompoundStatement		175:4:4550:4550	3319828	1					
ANR	3320552	IfStatement	if ( value_is_string )		3319828	0					
ANR	3320553	Condition	value_is_string	301:11:8742:8756	3319828	0	True				
ANR	3320554	Identifier	value_is_string		3319828	0					
ANR	3320555	CompoundStatement		180:8:4691:4734	3319828	1					
ANR	3320556	IdentifierDeclStatement	const char * s = ( const char * ) value ;	303:8:8776:8813	3319828	0	True				
ANR	3320557	IdentifierDecl	* s = ( const char * ) value		3319828	0					
ANR	3320558	IdentifierDeclType	const char *		3319828	0					
ANR	3320559	Identifier	s		3319828	1					
ANR	3320560	AssignmentExpression	* s = ( const char * ) value		3319828	2		=			
ANR	3320561	Identifier	s		3319828	0					
ANR	3320562	CastExpression	( const char * ) value		3319828	1					
ANR	3320563	CastTarget	const char *		3319828	0					
ANR	3320564	Identifier	value		3319828	1					
ANR	3320565	IdentifierDeclStatement	"long nsd = ft_strtol ( s , NULL , 10 ) ;"	304:8:8823:8866	3319828	1	True				
ANR	3320566	IdentifierDecl	"nsd = ft_strtol ( s , NULL , 10 )"		3319828	0					
ANR	3320567	IdentifierDeclType	long		3319828	0					
ANR	3320568	Identifier	nsd		3319828	1					
ANR	3320569	AssignmentExpression	"nsd = ft_strtol ( s , NULL , 10 )"		3319828	2		=			
ANR	3320570	Identifier	nsd		3319828	0					
ANR	3320571	CallExpression	"ft_strtol ( s , NULL , 10 )"		3319828	1					
ANR	3320572	Callee	ft_strtol		3319828	0					
ANR	3320573	Identifier	ft_strtol		3319828	0					
ANR	3320574	ArgumentList	s		3319828	1					
ANR	3320575	Argument	s		3319828	0					
ANR	3320576	Identifier	s		3319828	0					
ANR	3320577	Argument	NULL		3319828	1					
ANR	3320578	Identifier	NULL		3319828	0					
ANR	3320579	Argument	10		3319828	2					
ANR	3320580	PrimaryExpression	10		3319828	0					
ANR	3320581	IfStatement	if ( ! nsd )		3319828	2					
ANR	3320582	Condition	! nsd	307:13:8883:8886	3319828	0	True				
ANR	3320583	UnaryOperationExpression	! nsd		3319828	0					
ANR	3320584	UnaryOperator	!		3319828	0					
ANR	3320585	Identifier	nsd		3319828	1					
ANR	3320586	ExpressionStatement	module -> no_stem_darkening = FALSE	308:10:8900:8933	3319828	1	True				
ANR	3320587	AssignmentExpression	module -> no_stem_darkening = FALSE		3319828	0		=			
ANR	3320588	PtrMemberAccess	module -> no_stem_darkening		3319828	0					
ANR	3320589	Identifier	module		3319828	0					
ANR	3320590	Identifier	no_stem_darkening		3319828	1					
ANR	3320591	Identifier	FALSE		3319828	1					
ANR	3320592	ElseStatement	else		3319828	0					
ANR	3320593	ExpressionStatement	module -> no_stem_darkening = TRUE	310:10:8958:8990	3319828	0	True				
ANR	3320594	AssignmentExpression	module -> no_stem_darkening = TRUE		3319828	0		=			
ANR	3320595	PtrMemberAccess	module -> no_stem_darkening		3319828	0					
ANR	3320596	Identifier	module		3319828	0					
ANR	3320597	Identifier	no_stem_darkening		3319828	1					
ANR	3320598	Identifier	TRUE		3319828	1					
ANR	3320599	ElseStatement	else		3319828	0					
ANR	3320600	CompoundStatement		191:8:4902:4947	3319828	0					
ANR	3320601	IdentifierDeclStatement	FT_Bool * no_stem_darkening = ( FT_Bool * ) value ;	315:8:9034:9079	3319828	0	True				
ANR	3320602	IdentifierDecl	* no_stem_darkening = ( FT_Bool * ) value		3319828	0					
ANR	3320603	IdentifierDeclType	FT_Bool *		3319828	0					
ANR	3320604	Identifier	no_stem_darkening		3319828	1					
ANR	3320605	AssignmentExpression	* no_stem_darkening = ( FT_Bool * ) value		3319828	2		=			
ANR	3320606	Identifier	no_stem_darkening		3319828	0					
ANR	3320607	CastExpression	( FT_Bool * ) value		3319828	1					
ANR	3320608	CastTarget	FT_Bool *		3319828	0					
ANR	3320609	Identifier	value		3319828	1					
ANR	3320610	ExpressionStatement	module -> no_stem_darkening = * no_stem_darkening	318:8:9091:9137	3319828	1	True				
ANR	3320611	AssignmentExpression	module -> no_stem_darkening = * no_stem_darkening		3319828	0		=			
ANR	3320612	PtrMemberAccess	module -> no_stem_darkening		3319828	0					
ANR	3320613	Identifier	module		3319828	0					
ANR	3320614	Identifier	no_stem_darkening		3319828	1					
ANR	3320615	UnaryOperationExpression	* no_stem_darkening		3319828	1					
ANR	3320616	UnaryOperator	*		3319828	0					
ANR	3320617	Identifier	no_stem_darkening		3319828	1					
ANR	3320618	ReturnStatement	return error ;	321:6:9154:9166	3319828	1	True				
ANR	3320619	Identifier	error		3319828	0					
ANR	3320620	ExpressionStatement	"FT_TRACE0 ( ( ""af_property_set: missing property `%s'\\n"" , property_name ) )"	324:4:9179:9267	3319828	4	True				
ANR	3320621	CallExpression	"FT_TRACE0 ( ( ""af_property_set: missing property `%s'\\n"" , property_name ) )"		3319828	0					
ANR	3320622	Callee	FT_TRACE0		3319828	0					
ANR	3320623	Identifier	FT_TRACE0		3319828	0					
ANR	3320624	ArgumentList	"""af_property_set: missing property `%s'\\n"" , property_name"		3319828	1					
ANR	3320625	Argument	"""af_property_set: missing property `%s'\\n"" , property_name"		3319828	0					
ANR	3320626	Expression	"""af_property_set: missing property `%s'\\n"" , property_name"		3319828	0					
ANR	3320627	PrimaryExpression	"""af_property_set: missing property `%s'\\n"""		3319828	0					
ANR	3320628	Identifier	property_name		3319828	1					
ANR	3320629	ReturnStatement	return FT_THROW ( Missing_Property ) ;	326:4:9273:9308	3319828	5	True				
ANR	3320630	CallExpression	FT_THROW ( Missing_Property )		3319828	0					
ANR	3320631	Callee	FT_THROW		3319828	0					
ANR	3320632	Identifier	FT_THROW		3319828	0					
ANR	3320633	ArgumentList	Missing_Property		3319828	1					
ANR	3320634	Argument	Missing_Property		3319828	0					
ANR	3320635	Identifier	Missing_Property		3319828	0					
ANR	3320636	ReturnType	static FT_Error		3319828	1					
ANR	3320637	Identifier	af_property_set		3319828	2					
ANR	3320638	ParameterList	"FT_Module ft_module , const char * property_name , const void * value , FT_Bool value_is_string"		3319828	3					
ANR	3320639	Parameter	FT_Module ft_module	121:19:3969:3990	3319828	0	True				
ANR	3320640	ParameterType	FT_Module		3319828	0					
ANR	3320641	Identifier	ft_module		3319828	1					
ANR	3320642	Parameter	const char * property_name	122:19:4012:4037	3319828	1	True				
ANR	3320643	ParameterType	const char *		3319828	0					
ANR	3320644	Identifier	property_name		3319828	1					
ANR	3320645	Parameter	const void * value	123:19:4059:4076	3319828	2	True				
ANR	3320646	ParameterType	const void *		3319828	0					
ANR	3320647	Identifier	value		3319828	1					
ANR	3320648	Parameter	FT_Bool value_is_string	124:19:4098:4125	3319828	3	True				
ANR	3320649	ParameterType	FT_Bool		3319828	0					
ANR	3320650	Identifier	value_is_string		3319828	1					
ANR	3320651	CFGEntryNode	ENTRY		3319828		True				
ANR	3320652	CFGExitNode	EXIT		3319828		True				
ANR	3320653	Symbol	* warping		3319828						
ANR	3320654	Symbol	ft_strtol		3319828						
ANR	3320655	Symbol	FT_Err_Ok		3319828						
ANR	3320656	Symbol	* ss		3319828						
ANR	3320657	Symbol	globals		3319828						
ANR	3320658	Symbol	dp		3319828						
ANR	3320659	Symbol	property_name		3319828						
ANR	3320660	Symbol	ft_strcmp		3319828						
ANR	3320661	Symbol	style_class		3319828						
ANR	3320662	Symbol	default_script		3319828						
ANR	3320663	Symbol	prop -> face		3319828						
ANR	3320664	Symbol	globals -> increase_x_height		3319828						
ANR	3320665	Symbol	module -> default_script		3319828						
ANR	3320666	Symbol	NULL		3319828						
ANR	3320667	Symbol	* module		3319828						
ANR	3320668	Symbol	module		3319828						
ANR	3320669	Symbol	TRUE		3319828						
ANR	3320670	Symbol	ep		3319828						
ANR	3320671	Symbol	* darken_params		3319828						
ANR	3320672	Symbol	* globals		3319828						
ANR	3320673	Symbol	style_class -> script		3319828						
ANR	3320674	Symbol	style_class -> coverage		3319828						
ANR	3320675	Symbol	fallback_script		3319828						
ANR	3320676	Symbol	af_property_get_face_globals		3319828						
ANR	3320677	Symbol	* AF_STYLE_CLASSES_GET		3319828						
ANR	3320678	Symbol	& globals		3319828						
ANR	3320679	Symbol	module -> fallback_style		3319828						
ANR	3320680	Symbol	AF_COVERAGE_DEFAULT		3319828						
ANR	3320681	Symbol	x1		3319828						
ANR	3320682	Symbol	* prop		3319828						
ANR	3320683	Symbol	x2		3319828						
ANR	3320684	Symbol	x3		3319828						
ANR	3320685	Symbol	x4		3319828						
ANR	3320686	Symbol	nsd		3319828						
ANR	3320687	Symbol	* fallback_script		3319828						
ANR	3320688	Symbol	darken_params		3319828						
ANR	3320689	Symbol	* * module		3319828						
ANR	3320690	Symbol	module -> darken_params		3319828						
ANR	3320691	Symbol	* module -> darken_params		3319828						
ANR	3320692	Symbol	* no_stem_darkening		3319828						
ANR	3320693	Symbol	error		3319828						
ANR	3320694	Symbol	* dp		3319828						
ANR	3320695	Symbol	* style_class		3319828						
ANR	3320696	Symbol	* default_script		3319828						
ANR	3320697	Symbol	module -> no_stem_darkening		3319828						
ANR	3320698	Symbol	prop		3319828						
ANR	3320699	Symbol	y1		3319828						
ANR	3320700	Symbol	y2		3319828						
ANR	3320701	Symbol	Missing_Property		3319828						
ANR	3320702	Symbol	y3		3319828						
ANR	3320703	Symbol	y4		3319828						
ANR	3320704	Symbol	warping		3319828						
ANR	3320705	Symbol	value		3319828						
ANR	3320706	Symbol	module -> warping		3319828						
ANR	3320707	Symbol	ss		3319828						
ANR	3320708	Symbol	value_is_string		3319828						
ANR	3320709	Symbol	no_stem_darkening		3319828						
ANR	3320710	Symbol	i		3319828						
ANR	3320711	Symbol	Invalid_Argument		3319828						
ANR	3320712	Symbol	FT_THROW		3319828						
ANR	3320713	Symbol	* ep		3319828						
ANR	3320714	Symbol	s		3319828						
ANR	3320715	Symbol	* i		3319828						
ANR	3320716	Symbol	& ep		3319828						
ANR	3320717	Symbol	ft_module		3319828						
ANR	3320718	Symbol	prop -> limit		3319828						
ANR	3320719	Symbol	w		3319828						
ANR	3320720	Symbol	FALSE		3319828						
ANR	3320721	Symbol	AF_STYLE_CLASSES_GET		3319828						
ANR	3320722	Function	af_property_get	330:2:9318:11972							
ANR	3320723	FunctionDef	"af_property_get (FT_Module ft_module , const char * property_name , void * value)"		3320722	0					
ANR	3320724	CompoundStatement		334:2:9466:11972	3320722	0					
ANR	3320725	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	335:4:9472:9509	3320722	0	True				
ANR	3320726	IdentifierDecl	error = FT_Err_Ok		3320722	0					
ANR	3320727	IdentifierDeclType	FT_Error		3320722	0					
ANR	3320728	Identifier	error		3320722	1					
ANR	3320729	AssignmentExpression	error = FT_Err_Ok		3320722	2		=			
ANR	3320730	Identifier	FT_Err_Ok		3320722	0					
ANR	3320731	Identifier	FT_Err_Ok		3320722	1					
ANR	3320732	IdentifierDeclStatement	AF_Module module = ( AF_Module ) ft_module ;	336:4:9515:9563	3320722	1	True				
ANR	3320733	IdentifierDecl	module = ( AF_Module ) ft_module		3320722	0					
ANR	3320734	IdentifierDeclType	AF_Module		3320722	0					
ANR	3320735	Identifier	module		3320722	1					
ANR	3320736	AssignmentExpression	module = ( AF_Module ) ft_module		3320722	2		=			
ANR	3320737	Identifier	module		3320722	0					
ANR	3320738	CastExpression	( AF_Module ) ft_module		3320722	1					
ANR	3320739	CastTarget	AF_Module		3320722	0					
ANR	3320740	Identifier	ft_module		3320722	1					
ANR	3320741	IdentifierDeclStatement	FT_UInt fallback_style = module -> fallback_style ;	337:4:9569:9619	3320722	2	True				
ANR	3320742	IdentifierDecl	fallback_style = module -> fallback_style		3320722	0					
ANR	3320743	IdentifierDeclType	FT_UInt		3320722	0					
ANR	3320744	Identifier	fallback_style		3320722	1					
ANR	3320745	AssignmentExpression	fallback_style = module -> fallback_style		3320722	2		=			
ANR	3320746	Identifier	fallback_style		3320722	0					
ANR	3320747	PtrMemberAccess	module -> fallback_style		3320722	1					
ANR	3320748	Identifier	module		3320722	0					
ANR	3320749	Identifier	fallback_style		3320722	1					
ANR	3320750	IdentifierDeclStatement	FT_UInt default_script = module -> default_script ;	338:4:9625:9675	3320722	3	True				
ANR	3320751	IdentifierDecl	default_script = module -> default_script		3320722	0					
ANR	3320752	IdentifierDeclType	FT_UInt		3320722	0					
ANR	3320753	Identifier	default_script		3320722	1					
ANR	3320754	AssignmentExpression	default_script = module -> default_script		3320722	2		=			
ANR	3320755	Identifier	default_script		3320722	0					
ANR	3320756	PtrMemberAccess	module -> default_script		3320722	1					
ANR	3320757	Identifier	module		3320722	0					
ANR	3320758	Identifier	default_script		3320722	1					
ANR	3320759	IdentifierDeclStatement	FT_Bool warping = module -> warping ;	340:4:9716:9759	3320722	4	True				
ANR	3320760	IdentifierDecl	warping = module -> warping		3320722	0					
ANR	3320761	IdentifierDeclType	FT_Bool		3320722	0					
ANR	3320762	Identifier	warping		3320722	1					
ANR	3320763	AssignmentExpression	warping = module -> warping		3320722	2		=			
ANR	3320764	Identifier	warping		3320722	0					
ANR	3320765	PtrMemberAccess	module -> warping		3320722	1					
ANR	3320766	Identifier	module		3320722	0					
ANR	3320767	Identifier	warping		3320722	1					
ANR	3320768	IfStatement	"if ( ! ft_strcmp ( property_name , ""glyph-to-script-map"" ) )"		3320722	5					
ANR	3320769	Condition	"! ft_strcmp ( property_name , ""glyph-to-script-map"" )"	344:9:9779:9828	3320722	0	True				
ANR	3320770	UnaryOperationExpression	"! ft_strcmp ( property_name , ""glyph-to-script-map"" )"		3320722	0					
ANR	3320771	UnaryOperator	!		3320722	0					
ANR	3320772	CallExpression	"ft_strcmp ( property_name , ""glyph-to-script-map"" )"		3320722	1					
ANR	3320773	Callee	ft_strcmp		3320722	0					
ANR	3320774	Identifier	ft_strcmp		3320722	0					
ANR	3320775	ArgumentList	property_name		3320722	1					
ANR	3320776	Argument	property_name		3320722	0					
ANR	3320777	Identifier	property_name		3320722	0					
ANR	3320778	Argument	"""glyph-to-script-map"""		3320722	1					
ANR	3320779	PrimaryExpression	"""glyph-to-script-map"""		3320722	0					
ANR	3320780	CompoundStatement		14:6:451:485	3320722	1					
ANR	3320781	IdentifierDeclStatement	FT_Prop_GlyphToScriptMap * prop = ( FT_Prop_GlyphToScriptMap * ) value ;	346:6:9844:9910	3320722	0	True				
ANR	3320782	IdentifierDecl	* prop = ( FT_Prop_GlyphToScriptMap * ) value		3320722	0					
ANR	3320783	IdentifierDeclType	FT_Prop_GlyphToScriptMap *		3320722	0					
ANR	3320784	Identifier	prop		3320722	1					
ANR	3320785	AssignmentExpression	* prop = ( FT_Prop_GlyphToScriptMap * ) value		3320722	2		=			
ANR	3320786	Identifier	prop		3320722	0					
ANR	3320787	CastExpression	( FT_Prop_GlyphToScriptMap * ) value		3320722	1					
ANR	3320788	CastTarget	FT_Prop_GlyphToScriptMap *		3320722	0					
ANR	3320789	Identifier	value		3320722	1					
ANR	3320790	IdentifierDeclStatement	AF_FaceGlobals globals ;	347:6:9918:9952	3320722	1	True				
ANR	3320791	IdentifierDecl	globals		3320722	0					
ANR	3320792	IdentifierDeclType	AF_FaceGlobals		3320722	0					
ANR	3320793	Identifier	globals		3320722	1					
ANR	3320794	ExpressionStatement	"error = af_property_get_face_globals ( prop -> face , & globals , module )"	350:6:9962:10030	3320722	2	True				
ANR	3320795	AssignmentExpression	"error = af_property_get_face_globals ( prop -> face , & globals , module )"		3320722	0		=			
ANR	3320796	Identifier	error		3320722	0					
ANR	3320797	CallExpression	"af_property_get_face_globals ( prop -> face , & globals , module )"		3320722	1					
ANR	3320798	Callee	af_property_get_face_globals		3320722	0					
ANR	3320799	Identifier	af_property_get_face_globals		3320722	0					
ANR	3320800	ArgumentList	prop -> face		3320722	1					
ANR	3320801	Argument	prop -> face		3320722	0					
ANR	3320802	PtrMemberAccess	prop -> face		3320722	0					
ANR	3320803	Identifier	prop		3320722	0					
ANR	3320804	Identifier	face		3320722	1					
ANR	3320805	Argument	& globals		3320722	1					
ANR	3320806	UnaryOperationExpression	& globals		3320722	0					
ANR	3320807	UnaryOperator	&		3320722	0					
ANR	3320808	Identifier	globals		3320722	1					
ANR	3320809	Argument	module		3320722	2					
ANR	3320810	Identifier	module		3320722	0					
ANR	3320811	IfStatement	if ( ! error )		3320722	3					
ANR	3320812	Condition	! error	351:11:10043:10048	3320722	0	True				
ANR	3320813	UnaryOperationExpression	! error		3320722	0					
ANR	3320814	UnaryOperator	!		3320722	0					
ANR	3320815	Identifier	error		3320722	1					
ANR	3320816	ExpressionStatement	prop -> map = globals -> glyph_styles	352:8:10060:10093	3320722	1	True				
ANR	3320817	AssignmentExpression	prop -> map = globals -> glyph_styles		3320722	0		=			
ANR	3320818	PtrMemberAccess	prop -> map		3320722	0					
ANR	3320819	Identifier	prop		3320722	0					
ANR	3320820	Identifier	map		3320722	1					
ANR	3320821	PtrMemberAccess	globals -> glyph_styles		3320722	1					
ANR	3320822	Identifier	globals		3320722	0					
ANR	3320823	Identifier	glyph_styles		3320722	1					
ANR	3320824	ReturnStatement	return error ;	354:6:10102:10114	3320722	4	True				
ANR	3320825	Identifier	error		3320722	0					
ANR	3320826	ElseStatement	else		3320722	0					
ANR	3320827	IfStatement	"if ( ! ft_strcmp ( property_name , ""fallback-script"" ) )"		3320722	0					
ANR	3320828	Condition	"! ft_strcmp ( property_name , ""fallback-script"" )"	356:14:10136:10181	3320722	0	True				
ANR	3320829	UnaryOperationExpression	"! ft_strcmp ( property_name , ""fallback-script"" )"		3320722	0					
ANR	3320830	UnaryOperator	!		3320722	0					
ANR	3320831	CallExpression	"ft_strcmp ( property_name , ""fallback-script"" )"		3320722	1					
ANR	3320832	Callee	ft_strcmp		3320722	0					
ANR	3320833	Identifier	ft_strcmp		3320722	0					
ANR	3320834	ArgumentList	property_name		3320722	1					
ANR	3320835	Argument	property_name		3320722	0					
ANR	3320836	Identifier	property_name		3320722	0					
ANR	3320837	Argument	"""fallback-script"""		3320722	1					
ANR	3320838	PrimaryExpression	"""fallback-script"""		3320722	0					
ANR	3320839	CompoundStatement		27:6:770:835	3320722	1					
ANR	3320840	IdentifierDeclStatement	FT_UInt * val = ( FT_UInt * ) value ;	358:6:10197:10228	3320722	0	True				
ANR	3320841	IdentifierDecl	* val = ( FT_UInt * ) value		3320722	0					
ANR	3320842	IdentifierDeclType	FT_UInt *		3320722	0					
ANR	3320843	Identifier	val		3320722	1					
ANR	3320844	AssignmentExpression	* val = ( FT_UInt * ) value		3320722	2		=			
ANR	3320845	Identifier	val		3320722	0					
ANR	3320846	CastExpression	( FT_UInt * ) value		3320722	1					
ANR	3320847	CastTarget	FT_UInt *		3320722	0					
ANR	3320848	Identifier	value		3320722	1					
ANR	3320849	IdentifierDeclStatement	AF_StyleClass style_class = AF_STYLE_CLASSES_GET [ fallback_style ] ;	360:6:10237:10302	3320722	1	True				
ANR	3320850	IdentifierDecl	style_class = AF_STYLE_CLASSES_GET [ fallback_style ]		3320722	0					
ANR	3320851	IdentifierDeclType	AF_StyleClass		3320722	0					
ANR	3320852	Identifier	style_class		3320722	1					
ANR	3320853	AssignmentExpression	style_class = AF_STYLE_CLASSES_GET [ fallback_style ]		3320722	2		=			
ANR	3320854	Identifier	style_class		3320722	0					
ANR	3320855	ArrayIndexing	AF_STYLE_CLASSES_GET [ fallback_style ]		3320722	1					
ANR	3320856	Identifier	AF_STYLE_CLASSES_GET		3320722	0					
ANR	3320857	Identifier	fallback_style		3320722	1					
ANR	3320858	ExpressionStatement	* val = style_class -> script	363:6:10312:10338	3320722	2	True				
ANR	3320859	AssignmentExpression	* val = style_class -> script		3320722	0		=			
ANR	3320860	UnaryOperationExpression	* val		3320722	0					
ANR	3320861	UnaryOperator	*		3320722	0					
ANR	3320862	Identifier	val		3320722	1					
ANR	3320863	PtrMemberAccess	style_class -> script		3320722	1					
ANR	3320864	Identifier	style_class		3320722	0					
ANR	3320865	Identifier	script		3320722	1					
ANR	3320866	ReturnStatement	return error ;	365:6:10347:10359	3320722	3	True				
ANR	3320867	Identifier	error		3320722	0					
ANR	3320868	ElseStatement	else		3320722	0					
ANR	3320869	IfStatement	"if ( ! ft_strcmp ( property_name , ""default-script"" ) )"		3320722	0					
ANR	3320870	Condition	"! ft_strcmp ( property_name , ""default-script"" )"	367:14:10381:10425	3320722	0	True				
ANR	3320871	UnaryOperationExpression	"! ft_strcmp ( property_name , ""default-script"" )"		3320722	0					
ANR	3320872	UnaryOperator	!		3320722	0					
ANR	3320873	CallExpression	"ft_strcmp ( property_name , ""default-script"" )"		3320722	1					
ANR	3320874	Callee	ft_strcmp		3320722	0					
ANR	3320875	Identifier	ft_strcmp		3320722	0					
ANR	3320876	ArgumentList	property_name		3320722	1					
ANR	3320877	Argument	property_name		3320722	0					
ANR	3320878	Identifier	property_name		3320722	0					
ANR	3320879	Argument	"""default-script"""		3320722	1					
ANR	3320880	PrimaryExpression	"""default-script"""		3320722	0					
ANR	3320881	CompoundStatement		36:6:974:1005	3320722	1					
ANR	3320882	IdentifierDeclStatement	FT_UInt * val = ( FT_UInt * ) value ;	369:6:10441:10472	3320722	0	True				
ANR	3320883	IdentifierDecl	* val = ( FT_UInt * ) value		3320722	0					
ANR	3320884	IdentifierDeclType	FT_UInt *		3320722	0					
ANR	3320885	Identifier	val		3320722	1					
ANR	3320886	AssignmentExpression	* val = ( FT_UInt * ) value		3320722	2		=			
ANR	3320887	Identifier	val		3320722	0					
ANR	3320888	CastExpression	( FT_UInt * ) value		3320722	1					
ANR	3320889	CastTarget	FT_UInt *		3320722	0					
ANR	3320890	Identifier	value		3320722	1					
ANR	3320891	ExpressionStatement	* val = default_script	372:6:10482:10503	3320722	1	True				
ANR	3320892	AssignmentExpression	* val = default_script		3320722	0		=			
ANR	3320893	UnaryOperationExpression	* val		3320722	0					
ANR	3320894	UnaryOperator	*		3320722	0					
ANR	3320895	Identifier	val		3320722	1					
ANR	3320896	Identifier	default_script		3320722	1					
ANR	3320897	ReturnStatement	return error ;	374:6:10512:10524	3320722	2	True				
ANR	3320898	Identifier	error		3320722	0					
ANR	3320899	ElseStatement	else		3320722	0					
ANR	3320900	IfStatement	"if ( ! ft_strcmp ( property_name , ""increase-x-height"" ) )"		3320722	0					
ANR	3320901	Condition	"! ft_strcmp ( property_name , ""increase-x-height"" )"	376:14:10546:10593	3320722	0	True				
ANR	3320902	UnaryOperationExpression	"! ft_strcmp ( property_name , ""increase-x-height"" )"		3320722	0					
ANR	3320903	UnaryOperator	!		3320722	0					
ANR	3320904	CallExpression	"ft_strcmp ( property_name , ""increase-x-height"" )"		3320722	1					
ANR	3320905	Callee	ft_strcmp		3320722	0					
ANR	3320906	Identifier	ft_strcmp		3320722	0					
ANR	3320907	ArgumentList	property_name		3320722	1					
ANR	3320908	Argument	property_name		3320722	0					
ANR	3320909	Identifier	property_name		3320722	0					
ANR	3320910	Argument	"""increase-x-height"""		3320722	1					
ANR	3320911	PrimaryExpression	"""increase-x-height"""		3320722	0					
ANR	3320912	CompoundStatement		46:6:1214:1247	3320722	1					
ANR	3320913	IdentifierDeclStatement	FT_Prop_IncreaseXHeight * prop = ( FT_Prop_IncreaseXHeight * ) value ;	378:6:10609:10673	3320722	0	True				
ANR	3320914	IdentifierDecl	* prop = ( FT_Prop_IncreaseXHeight * ) value		3320722	0					
ANR	3320915	IdentifierDeclType	FT_Prop_IncreaseXHeight *		3320722	0					
ANR	3320916	Identifier	prop		3320722	1					
ANR	3320917	AssignmentExpression	* prop = ( FT_Prop_IncreaseXHeight * ) value		3320722	2		=			
ANR	3320918	Identifier	prop		3320722	0					
ANR	3320919	CastExpression	( FT_Prop_IncreaseXHeight * ) value		3320722	1					
ANR	3320920	CastTarget	FT_Prop_IncreaseXHeight *		3320722	0					
ANR	3320921	Identifier	value		3320722	1					
ANR	3320922	IdentifierDeclStatement	AF_FaceGlobals globals ;	379:6:10681:10714	3320722	1	True				
ANR	3320923	IdentifierDecl	globals		3320722	0					
ANR	3320924	IdentifierDeclType	AF_FaceGlobals		3320722	0					
ANR	3320925	Identifier	globals		3320722	1					
ANR	3320926	ExpressionStatement	"error = af_property_get_face_globals ( prop -> face , & globals , module )"	382:6:10724:10792	3320722	2	True				
ANR	3320927	AssignmentExpression	"error = af_property_get_face_globals ( prop -> face , & globals , module )"		3320722	0		=			
ANR	3320928	Identifier	error		3320722	0					
ANR	3320929	CallExpression	"af_property_get_face_globals ( prop -> face , & globals , module )"		3320722	1					
ANR	3320930	Callee	af_property_get_face_globals		3320722	0					
ANR	3320931	Identifier	af_property_get_face_globals		3320722	0					
ANR	3320932	ArgumentList	prop -> face		3320722	1					
ANR	3320933	Argument	prop -> face		3320722	0					
ANR	3320934	PtrMemberAccess	prop -> face		3320722	0					
ANR	3320935	Identifier	prop		3320722	0					
ANR	3320936	Identifier	face		3320722	1					
ANR	3320937	Argument	& globals		3320722	1					
ANR	3320938	UnaryOperationExpression	& globals		3320722	0					
ANR	3320939	UnaryOperator	&		3320722	0					
ANR	3320940	Identifier	globals		3320722	1					
ANR	3320941	Argument	module		3320722	2					
ANR	3320942	Identifier	module		3320722	0					
ANR	3320943	IfStatement	if ( ! error )		3320722	3					
ANR	3320944	Condition	! error	383:11:10805:10810	3320722	0	True				
ANR	3320945	UnaryOperationExpression	! error		3320722	0					
ANR	3320946	UnaryOperator	!		3320722	0					
ANR	3320947	Identifier	error		3320722	1					
ANR	3320948	ExpressionStatement	prop -> limit = globals -> increase_x_height	384:8:10822:10862	3320722	1	True				
ANR	3320949	AssignmentExpression	prop -> limit = globals -> increase_x_height		3320722	0		=			
ANR	3320950	PtrMemberAccess	prop -> limit		3320722	0					
ANR	3320951	Identifier	prop		3320722	0					
ANR	3320952	Identifier	limit		3320722	1					
ANR	3320953	PtrMemberAccess	globals -> increase_x_height		3320722	1					
ANR	3320954	Identifier	globals		3320722	0					
ANR	3320955	Identifier	increase_x_height		3320722	1					
ANR	3320956	ReturnStatement	return error ;	386:6:10871:10883	3320722	4	True				
ANR	3320957	Identifier	error		3320722	0					
ANR	3320958	ElseStatement	else		3320722	0					
ANR	3320959	IfStatement	"if ( ! ft_strcmp ( property_name , ""warping"" ) )"		3320722	0					
ANR	3320960	Condition	"! ft_strcmp ( property_name , ""warping"" )"	389:14:10940:10977	3320722	0	True				
ANR	3320961	UnaryOperationExpression	"! ft_strcmp ( property_name , ""warping"" )"		3320722	0					
ANR	3320962	UnaryOperator	!		3320722	0					
ANR	3320963	CallExpression	"ft_strcmp ( property_name , ""warping"" )"		3320722	1					
ANR	3320964	Callee	ft_strcmp		3320722	0					
ANR	3320965	Identifier	ft_strcmp		3320722	0					
ANR	3320966	ArgumentList	property_name		3320722	1					
ANR	3320967	Argument	property_name		3320722	0					
ANR	3320968	Identifier	property_name		3320722	0					
ANR	3320969	Argument	"""warping"""		3320722	1					
ANR	3320970	PrimaryExpression	"""warping"""		3320722	0					
ANR	3320971	CompoundStatement		58:6:1526:1557	3320722	1					
ANR	3320972	IdentifierDeclStatement	FT_Bool * val = ( FT_Bool * ) value ;	391:6:10993:11024	3320722	0	True				
ANR	3320973	IdentifierDecl	* val = ( FT_Bool * ) value		3320722	0					
ANR	3320974	IdentifierDeclType	FT_Bool *		3320722	0					
ANR	3320975	Identifier	val		3320722	1					
ANR	3320976	AssignmentExpression	* val = ( FT_Bool * ) value		3320722	2		=			
ANR	3320977	Identifier	val		3320722	0					
ANR	3320978	CastExpression	( FT_Bool * ) value		3320722	1					
ANR	3320979	CastTarget	FT_Bool *		3320722	0					
ANR	3320980	Identifier	value		3320722	1					
ANR	3320981	ExpressionStatement	* val = warping	394:6:11034:11048	3320722	1	True				
ANR	3320982	AssignmentExpression	* val = warping		3320722	0		=			
ANR	3320983	UnaryOperationExpression	* val		3320722	0					
ANR	3320984	UnaryOperator	*		3320722	0					
ANR	3320985	Identifier	val		3320722	1					
ANR	3320986	Identifier	warping		3320722	1					
ANR	3320987	ReturnStatement	return error ;	396:6:11057:11069	3320722	2	True				
ANR	3320988	Identifier	error		3320722	0					
ANR	3320989	ElseStatement	else		3320722	0					
ANR	3320990	IfStatement	"if ( ! ft_strcmp ( property_name , ""darkening-parameters"" ) )"		3320722	0					
ANR	3320991	Condition	"! ft_strcmp ( property_name , ""darkening-parameters"" )"	399:14:11132:11182	3320722	0	True				
ANR	3320992	UnaryOperationExpression	"! ft_strcmp ( property_name , ""darkening-parameters"" )"		3320722	0					
ANR	3320993	UnaryOperator	!		3320722	0					
ANR	3320994	CallExpression	"ft_strcmp ( property_name , ""darkening-parameters"" )"		3320722	1					
ANR	3320995	Callee	ft_strcmp		3320722	0					
ANR	3320996	Identifier	ft_strcmp		3320722	0					
ANR	3320997	ArgumentList	property_name		3320722	1					
ANR	3320998	Argument	property_name		3320722	0					
ANR	3320999	Identifier	property_name		3320722	0					
ANR	3321000	Argument	"""darkening-parameters"""		3320722	1					
ANR	3321001	PrimaryExpression	"""darkening-parameters"""		3320722	0					
ANR	3321002	CompoundStatement		69:6:1785:1824	3320722	1					
ANR	3321003	IdentifierDeclStatement	FT_Int * darken_params = module -> darken_params ;	401:6:11198:11244	3320722	0	True				
ANR	3321004	IdentifierDecl	* darken_params = module -> darken_params		3320722	0					
ANR	3321005	IdentifierDeclType	FT_Int *		3320722	0					
ANR	3321006	Identifier	darken_params		3320722	1					
ANR	3321007	AssignmentExpression	* darken_params = module -> darken_params		3320722	2		=			
ANR	3321008	Identifier	darken_params		3320722	0					
ANR	3321009	PtrMemberAccess	module -> darken_params		3320722	1					
ANR	3321010	Identifier	module		3320722	0					
ANR	3321011	Identifier	darken_params		3320722	1					
ANR	3321012	IdentifierDeclStatement	FT_Int * val = ( FT_Int * ) value ;	402:6:11252:11291	3320722	1	True				
ANR	3321013	IdentifierDecl	* val = ( FT_Int * ) value		3320722	0					
ANR	3321014	IdentifierDeclType	FT_Int *		3320722	0					
ANR	3321015	Identifier	val		3320722	1					
ANR	3321016	AssignmentExpression	* val = ( FT_Int * ) value		3320722	2		=			
ANR	3321017	Identifier	val		3320722	0					
ANR	3321018	CastExpression	( FT_Int * ) value		3320722	1					
ANR	3321019	CastTarget	FT_Int *		3320722	0					
ANR	3321020	Identifier	value		3320722	1					
ANR	3321021	ExpressionStatement	val [ 0 ] = darken_params [ 0 ]	405:6:11301:11326	3320722	2	True				
ANR	3321022	AssignmentExpression	val [ 0 ] = darken_params [ 0 ]		3320722	0		=			
ANR	3321023	ArrayIndexing	val [ 0 ]		3320722	0					
ANR	3321024	Identifier	val		3320722	0					
ANR	3321025	PrimaryExpression	0		3320722	1					
ANR	3321026	ArrayIndexing	darken_params [ 0 ]		3320722	1					
ANR	3321027	Identifier	darken_params		3320722	0					
ANR	3321028	PrimaryExpression	0		3320722	1					
ANR	3321029	ExpressionStatement	val [ 1 ] = darken_params [ 1 ]	406:6:11334:11359	3320722	3	True				
ANR	3321030	AssignmentExpression	val [ 1 ] = darken_params [ 1 ]		3320722	0		=			
ANR	3321031	ArrayIndexing	val [ 1 ]		3320722	0					
ANR	3321032	Identifier	val		3320722	0					
ANR	3321033	PrimaryExpression	1		3320722	1					
ANR	3321034	ArrayIndexing	darken_params [ 1 ]		3320722	1					
ANR	3321035	Identifier	darken_params		3320722	0					
ANR	3321036	PrimaryExpression	1		3320722	1					
ANR	3321037	ExpressionStatement	val [ 2 ] = darken_params [ 2 ]	407:6:11367:11392	3320722	4	True				
ANR	3321038	AssignmentExpression	val [ 2 ] = darken_params [ 2 ]		3320722	0		=			
ANR	3321039	ArrayIndexing	val [ 2 ]		3320722	0					
ANR	3321040	Identifier	val		3320722	0					
ANR	3321041	PrimaryExpression	2		3320722	1					
ANR	3321042	ArrayIndexing	darken_params [ 2 ]		3320722	1					
ANR	3321043	Identifier	darken_params		3320722	0					
ANR	3321044	PrimaryExpression	2		3320722	1					
ANR	3321045	ExpressionStatement	val [ 3 ] = darken_params [ 3 ]	408:6:11400:11425	3320722	5	True				
ANR	3321046	AssignmentExpression	val [ 3 ] = darken_params [ 3 ]		3320722	0		=			
ANR	3321047	ArrayIndexing	val [ 3 ]		3320722	0					
ANR	3321048	Identifier	val		3320722	0					
ANR	3321049	PrimaryExpression	3		3320722	1					
ANR	3321050	ArrayIndexing	darken_params [ 3 ]		3320722	1					
ANR	3321051	Identifier	darken_params		3320722	0					
ANR	3321052	PrimaryExpression	3		3320722	1					
ANR	3321053	ExpressionStatement	val [ 4 ] = darken_params [ 4 ]	409:6:11433:11458	3320722	6	True				
ANR	3321054	AssignmentExpression	val [ 4 ] = darken_params [ 4 ]		3320722	0		=			
ANR	3321055	ArrayIndexing	val [ 4 ]		3320722	0					
ANR	3321056	Identifier	val		3320722	0					
ANR	3321057	PrimaryExpression	4		3320722	1					
ANR	3321058	ArrayIndexing	darken_params [ 4 ]		3320722	1					
ANR	3321059	Identifier	darken_params		3320722	0					
ANR	3321060	PrimaryExpression	4		3320722	1					
ANR	3321061	ExpressionStatement	val [ 5 ] = darken_params [ 5 ]	410:6:11466:11491	3320722	7	True				
ANR	3321062	AssignmentExpression	val [ 5 ] = darken_params [ 5 ]		3320722	0		=			
ANR	3321063	ArrayIndexing	val [ 5 ]		3320722	0					
ANR	3321064	Identifier	val		3320722	0					
ANR	3321065	PrimaryExpression	5		3320722	1					
ANR	3321066	ArrayIndexing	darken_params [ 5 ]		3320722	1					
ANR	3321067	Identifier	darken_params		3320722	0					
ANR	3321068	PrimaryExpression	5		3320722	1					
ANR	3321069	ExpressionStatement	val [ 6 ] = darken_params [ 6 ]	411:6:11499:11524	3320722	8	True				
ANR	3321070	AssignmentExpression	val [ 6 ] = darken_params [ 6 ]		3320722	0		=			
ANR	3321071	ArrayIndexing	val [ 6 ]		3320722	0					
ANR	3321072	Identifier	val		3320722	0					
ANR	3321073	PrimaryExpression	6		3320722	1					
ANR	3321074	ArrayIndexing	darken_params [ 6 ]		3320722	1					
ANR	3321075	Identifier	darken_params		3320722	0					
ANR	3321076	PrimaryExpression	6		3320722	1					
ANR	3321077	ExpressionStatement	val [ 7 ] = darken_params [ 7 ]	412:6:11532:11557	3320722	9	True				
ANR	3321078	AssignmentExpression	val [ 7 ] = darken_params [ 7 ]		3320722	0		=			
ANR	3321079	ArrayIndexing	val [ 7 ]		3320722	0					
ANR	3321080	Identifier	val		3320722	0					
ANR	3321081	PrimaryExpression	7		3320722	1					
ANR	3321082	ArrayIndexing	darken_params [ 7 ]		3320722	1					
ANR	3321083	Identifier	darken_params		3320722	0					
ANR	3321084	PrimaryExpression	7		3320722	1					
ANR	3321085	ReturnStatement	return error ;	414:6:11566:11578	3320722	10	True				
ANR	3321086	Identifier	error		3320722	0					
ANR	3321087	ElseStatement	else		3320722	0					
ANR	3321088	IfStatement	"if ( ! ft_strcmp ( property_name , ""no-stem-darkening"" ) )"		3320722	0					
ANR	3321089	Condition	"! ft_strcmp ( property_name , ""no-stem-darkening"" )"	416:14:11600:11647	3320722	0	True				
ANR	3321090	UnaryOperationExpression	"! ft_strcmp ( property_name , ""no-stem-darkening"" )"		3320722	0					
ANR	3321091	UnaryOperator	!		3320722	0					
ANR	3321092	CallExpression	"ft_strcmp ( property_name , ""no-stem-darkening"" )"		3320722	1					
ANR	3321093	Callee	ft_strcmp		3320722	0					
ANR	3321094	Identifier	ft_strcmp		3320722	0					
ANR	3321095	ArgumentList	property_name		3320722	1					
ANR	3321096	Argument	property_name		3320722	0					
ANR	3321097	Identifier	property_name		3320722	0					
ANR	3321098	Argument	"""no-stem-darkening"""		3320722	1					
ANR	3321099	PrimaryExpression	"""no-stem-darkening"""		3320722	0					
ANR	3321100	CompoundStatement		86:6:2259:2304	3320722	1					
ANR	3321101	IdentifierDeclStatement	FT_Bool no_stem_darkening = module -> no_stem_darkening ;	418:6:11663:11718	3320722	0	True				
ANR	3321102	IdentifierDecl	no_stem_darkening = module -> no_stem_darkening		3320722	0					
ANR	3321103	IdentifierDeclType	FT_Bool		3320722	0					
ANR	3321104	Identifier	no_stem_darkening		3320722	1					
ANR	3321105	AssignmentExpression	no_stem_darkening = module -> no_stem_darkening		3320722	2		=			
ANR	3321106	Identifier	no_stem_darkening		3320722	0					
ANR	3321107	PtrMemberAccess	module -> no_stem_darkening		3320722	1					
ANR	3321108	Identifier	module		3320722	0					
ANR	3321109	Identifier	no_stem_darkening		3320722	1					
ANR	3321110	IdentifierDeclStatement	FT_Bool * val = ( FT_Bool * ) value ;	419:6:11726:11771	3320722	1	True				
ANR	3321111	IdentifierDecl	* val = ( FT_Bool * ) value		3320722	0					
ANR	3321112	IdentifierDeclType	FT_Bool *		3320722	0					
ANR	3321113	Identifier	val		3320722	1					
ANR	3321114	AssignmentExpression	* val = ( FT_Bool * ) value		3320722	2		=			
ANR	3321115	Identifier	val		3320722	0					
ANR	3321116	CastExpression	( FT_Bool * ) value		3320722	1					
ANR	3321117	CastTarget	FT_Bool *		3320722	0					
ANR	3321118	Identifier	value		3320722	1					
ANR	3321119	ExpressionStatement	* val = no_stem_darkening	422:6:11781:11805	3320722	2	True				
ANR	3321120	AssignmentExpression	* val = no_stem_darkening		3320722	0		=			
ANR	3321121	UnaryOperationExpression	* val		3320722	0					
ANR	3321122	UnaryOperator	*		3320722	0					
ANR	3321123	Identifier	val		3320722	1					
ANR	3321124	Identifier	no_stem_darkening		3320722	1					
ANR	3321125	ReturnStatement	return error ;	424:6:11814:11826	3320722	3	True				
ANR	3321126	Identifier	error		3320722	0					
ANR	3321127	ExpressionStatement	"FT_TRACE0 ( ( ""af_property_get: missing property `%s'\\n"" , property_name ) )"	427:4:11839:11927	3320722	6	True				
ANR	3321128	CallExpression	"FT_TRACE0 ( ( ""af_property_get: missing property `%s'\\n"" , property_name ) )"		3320722	0					
ANR	3321129	Callee	FT_TRACE0		3320722	0					
ANR	3321130	Identifier	FT_TRACE0		3320722	0					
ANR	3321131	ArgumentList	"""af_property_get: missing property `%s'\\n"" , property_name"		3320722	1					
ANR	3321132	Argument	"""af_property_get: missing property `%s'\\n"" , property_name"		3320722	0					
ANR	3321133	Expression	"""af_property_get: missing property `%s'\\n"" , property_name"		3320722	0					
ANR	3321134	PrimaryExpression	"""af_property_get: missing property `%s'\\n"""		3320722	0					
ANR	3321135	Identifier	property_name		3320722	1					
ANR	3321136	ReturnStatement	return FT_THROW ( Missing_Property ) ;	429:4:11933:11968	3320722	7	True				
ANR	3321137	CallExpression	FT_THROW ( Missing_Property )		3320722	0					
ANR	3321138	Callee	FT_THROW		3320722	0					
ANR	3321139	Identifier	FT_THROW		3320722	0					
ANR	3321140	ArgumentList	Missing_Property		3320722	1					
ANR	3321141	Argument	Missing_Property		3320722	0					
ANR	3321142	Identifier	Missing_Property		3320722	0					
ANR	3321143	ReturnType	static FT_Error		3320722	1					
ANR	3321144	Identifier	af_property_get		3320722	2					
ANR	3321145	ParameterList	"FT_Module ft_module , const char * property_name , void * value"		3320722	3					
ANR	3321146	Parameter	FT_Module ft_module	331:19:9353:9374	3320722	0	True				
ANR	3321147	ParameterType	FT_Module		3320722	0					
ANR	3321148	Identifier	ft_module		3320722	1					
ANR	3321149	Parameter	const char * property_name	332:19:9396:9421	3320722	1	True				
ANR	3321150	ParameterType	const char *		3320722	0					
ANR	3321151	Identifier	property_name		3320722	1					
ANR	3321152	Parameter	void * value	333:19:9443:9460	3320722	2	True				
ANR	3321153	ParameterType	void *		3320722	0					
ANR	3321154	Identifier	value		3320722	1					
ANR	3321155	CFGEntryNode	ENTRY		3320722		True				
ANR	3321156	CFGExitNode	EXIT		3320722		True				
ANR	3321157	Symbol	darken_params		3320722						
ANR	3321158	Symbol	FT_Err_Ok		3320722						
ANR	3321159	Symbol	* fallback_style		3320722						
ANR	3321160	Symbol	globals		3320722						
ANR	3321161	Symbol	module -> darken_params		3320722						
ANR	3321162	Symbol	* val		3320722						
ANR	3321163	Symbol	error		3320722						
ANR	3321164	Symbol	property_name		3320722						
ANR	3321165	Symbol	* style_class		3320722						
ANR	3321166	Symbol	module -> no_stem_darkening		3320722						
ANR	3321167	Symbol	ft_strcmp		3320722						
ANR	3321168	Symbol	prop		3320722						
ANR	3321169	Symbol	default_script		3320722						
ANR	3321170	Symbol	style_class		3320722						
ANR	3321171	Symbol	Missing_Property		3320722						
ANR	3321172	Symbol	prop -> face		3320722						
ANR	3321173	Symbol	globals -> increase_x_height		3320722						
ANR	3321174	Symbol	warping		3320722						
ANR	3321175	Symbol	value		3320722						
ANR	3321176	Symbol	module -> default_script		3320722						
ANR	3321177	Symbol	module -> warping		3320722						
ANR	3321178	Symbol	val		3320722						
ANR	3321179	Symbol	no_stem_darkening		3320722						
ANR	3321180	Symbol	fallback_style		3320722						
ANR	3321181	Symbol	* module		3320722						
ANR	3321182	Symbol	globals -> glyph_styles		3320722						
ANR	3321183	Symbol	module		3320722						
ANR	3321184	Symbol	* darken_params		3320722						
ANR	3321185	Symbol	* globals		3320722						
ANR	3321186	Symbol	style_class -> script		3320722						
ANR	3321187	Symbol	FT_THROW		3320722						
ANR	3321188	Symbol	af_property_get_face_globals		3320722						
ANR	3321189	Symbol	& globals		3320722						
ANR	3321190	Symbol	* AF_STYLE_CLASSES_GET		3320722						
ANR	3321191	Symbol	module -> fallback_style		3320722						
ANR	3321192	Symbol	ft_module		3320722						
ANR	3321193	Symbol	prop -> limit		3320722						
ANR	3321194	Symbol	prop -> map		3320722						
ANR	3321195	Symbol	* prop		3320722						
ANR	3321196	Symbol	AF_STYLE_CLASSES_GET		3320722						
ANR	3321197	Function	af_get_interface	447:2:12332:12764							
ANR	3321198	FunctionDef	"af_get_interface (FT_Module module , const char * module_interface)"		3321197	0					
ANR	3321199	CompoundStatement		449:2:12425:12764	3321197	0					
ANR	3321200	IdentifierDeclStatement	FT_Library library ;	452:4:12520:12539	3321197	0	True				
ANR	3321201	IdentifierDecl	library		3321197	0					
ANR	3321202	IdentifierDeclType	FT_Library		3321197	0					
ANR	3321203	Identifier	library		3321197	1					
ANR	3321204	IfStatement	if ( ! module )		3321197	1					
ANR	3321205	Condition	! module	455:9:12552:12558	3321197	0	True				
ANR	3321206	UnaryOperationExpression	! module		3321197	0					
ANR	3321207	UnaryOperator	!		3321197	0					
ANR	3321208	Identifier	module		3321197	1					
ANR	3321209	ReturnStatement	return NULL ;	456:6:12568:12579	3321197	1	True				
ANR	3321210	Identifier	NULL		3321197	0					
ANR	3321211	ExpressionStatement	library = module -> library	457:4:12585:12610	3321197	2	True				
ANR	3321212	AssignmentExpression	library = module -> library		3321197	0		=			
ANR	3321213	Identifier	library		3321197	0					
ANR	3321214	PtrMemberAccess	module -> library		3321197	1					
ANR	3321215	Identifier	module		3321197	0					
ANR	3321216	Identifier	library		3321197	1					
ANR	3321217	IfStatement	if ( ! library )		3321197	3					
ANR	3321218	Condition	! library	458:9:12621:12628	3321197	0	True				
ANR	3321219	UnaryOperationExpression	! library		3321197	0					
ANR	3321220	UnaryOperator	!		3321197	0					
ANR	3321221	Identifier	library		3321197	1					
ANR	3321222	ReturnStatement	return NULL ;	459:6:12638:12649	3321197	1	True				
ANR	3321223	Identifier	NULL		3321197	0					
ANR	3321224	ReturnStatement	"return ft_service_list_lookup ( AF_SERVICES_GET , module_interface ) ;"	464:4:12694:12760	3321197	4	True				
ANR	3321225	CallExpression	"ft_service_list_lookup ( AF_SERVICES_GET , module_interface )"		3321197	0					
ANR	3321226	Callee	ft_service_list_lookup		3321197	0					
ANR	3321227	Identifier	ft_service_list_lookup		3321197	0					
ANR	3321228	ArgumentList	AF_SERVICES_GET		3321197	1					
ANR	3321229	Argument	AF_SERVICES_GET		3321197	0					
ANR	3321230	Identifier	AF_SERVICES_GET		3321197	0					
ANR	3321231	Argument	module_interface		3321197	1					
ANR	3321232	Identifier	module_interface		3321197	0					
ANR	3321233	Identifier	af_get_interface		3321197	1					
ANR	3321234	ParameterList	"FT_Module module , const char * module_interface"		3321197	2					
ANR	3321235	Parameter	FT_Module module	447:20:12350:12368	3321197	0	True				
ANR	3321236	ParameterType	FT_Module		3321197	0					
ANR	3321237	Identifier	module		3321197	1					
ANR	3321238	Parameter	const char * module_interface	448:20:12391:12419	3321197	1	True				
ANR	3321239	ParameterType	const char *		3321197	0					
ANR	3321240	Identifier	module_interface		3321197	1					
ANR	3321241	CFGEntryNode	ENTRY		3321197		True				
ANR	3321242	CFGExitNode	EXIT		3321197		True				
ANR	3321243	Symbol	AF_SERVICES_GET		3321197						
ANR	3321244	Symbol	module -> library		3321197						
ANR	3321245	Symbol	module_interface		3321197						
ANR	3321246	Symbol	library		3321197						
ANR	3321247	Symbol	NULL		3321197						
ANR	3321248	Symbol	* module		3321197						
ANR	3321249	Symbol	module		3321197						
ANR	3321250	Symbol	ft_service_list_lookup		3321197						
ANR	3321251	Function	af_autofitter_init	469:2:12800:13751							
ANR	3321252	FunctionDef	af_autofitter_init (FT_Module ft_module)		3321251	0					
ANR	3321253	CompoundStatement		470:2:12866:13751	3321251	0					
ANR	3321254	IdentifierDeclStatement	AF_Module module = ( AF_Module ) ft_module ;	471:4:12872:12912	3321251	0	True				
ANR	3321255	IdentifierDecl	module = ( AF_Module ) ft_module		3321251	0					
ANR	3321256	IdentifierDeclType	AF_Module		3321251	0					
ANR	3321257	Identifier	module		3321251	1					
ANR	3321258	AssignmentExpression	module = ( AF_Module ) ft_module		3321251	2		=			
ANR	3321259	Identifier	module		3321251	0					
ANR	3321260	CastExpression	( AF_Module ) ft_module		3321251	1					
ANR	3321261	CastTarget	AF_Module		3321251	0					
ANR	3321262	Identifier	ft_module		3321251	1					
ANR	3321263	ExpressionStatement	module -> fallback_style = AF_STYLE_FALLBACK	474:4:12920:12965	3321251	1	True				
ANR	3321264	AssignmentExpression	module -> fallback_style = AF_STYLE_FALLBACK		3321251	0		=			
ANR	3321265	PtrMemberAccess	module -> fallback_style		3321251	0					
ANR	3321266	Identifier	module		3321251	0					
ANR	3321267	Identifier	fallback_style		3321251	1					
ANR	3321268	Identifier	AF_STYLE_FALLBACK		3321251	1					
ANR	3321269	ExpressionStatement	module -> default_script = AF_SCRIPT_DEFAULT	475:4:12971:13016	3321251	2	True				
ANR	3321270	AssignmentExpression	module -> default_script = AF_SCRIPT_DEFAULT		3321251	0		=			
ANR	3321271	PtrMemberAccess	module -> default_script		3321251	0					
ANR	3321272	Identifier	module		3321251	0					
ANR	3321273	Identifier	default_script		3321251	1					
ANR	3321274	Identifier	AF_SCRIPT_DEFAULT		3321251	1					
ANR	3321275	ExpressionStatement	module -> warping = 0	477:4:13057:13086	3321251	3	True				
ANR	3321276	AssignmentExpression	module -> warping = 0		3321251	0		=			
ANR	3321277	PtrMemberAccess	module -> warping		3321251	0					
ANR	3321278	Identifier	module		3321251	0					
ANR	3321279	Identifier	warping		3321251	1					
ANR	3321280	PrimaryExpression	0		3321251	1					
ANR	3321281	ExpressionStatement	module -> no_stem_darkening = TRUE	479:4:13099:13131	3321251	4	True				
ANR	3321282	AssignmentExpression	module -> no_stem_darkening = TRUE		3321251	0		=			
ANR	3321283	PtrMemberAccess	module -> no_stem_darkening		3321251	0					
ANR	3321284	Identifier	module		3321251	0					
ANR	3321285	Identifier	no_stem_darkening		3321251	1					
ANR	3321286	Identifier	TRUE		3321251	1					
ANR	3321287	ExpressionStatement	module -> darken_params [ 0 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_X1	481:4:13138:13206	3321251	5	True				
ANR	3321288	AssignmentExpression	module -> darken_params [ 0 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_X1		3321251	0		=			
ANR	3321289	ArrayIndexing	module -> darken_params [ 0 ]		3321251	0					
ANR	3321290	PtrMemberAccess	module -> darken_params		3321251	0					
ANR	3321291	Identifier	module		3321251	0					
ANR	3321292	Identifier	darken_params		3321251	1					
ANR	3321293	PrimaryExpression	0		3321251	1					
ANR	3321294	Identifier	CFF_CONFIG_OPTION_DARKENING_PARAMETER_X1		3321251	1					
ANR	3321295	ExpressionStatement	module -> darken_params [ 1 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y1	482:4:13212:13280	3321251	6	True				
ANR	3321296	AssignmentExpression	module -> darken_params [ 1 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y1		3321251	0		=			
ANR	3321297	ArrayIndexing	module -> darken_params [ 1 ]		3321251	0					
ANR	3321298	PtrMemberAccess	module -> darken_params		3321251	0					
ANR	3321299	Identifier	module		3321251	0					
ANR	3321300	Identifier	darken_params		3321251	1					
ANR	3321301	PrimaryExpression	1		3321251	1					
ANR	3321302	Identifier	CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y1		3321251	1					
ANR	3321303	ExpressionStatement	module -> darken_params [ 2 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_X2	483:4:13286:13354	3321251	7	True				
ANR	3321304	AssignmentExpression	module -> darken_params [ 2 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_X2		3321251	0		=			
ANR	3321305	ArrayIndexing	module -> darken_params [ 2 ]		3321251	0					
ANR	3321306	PtrMemberAccess	module -> darken_params		3321251	0					
ANR	3321307	Identifier	module		3321251	0					
ANR	3321308	Identifier	darken_params		3321251	1					
ANR	3321309	PrimaryExpression	2		3321251	1					
ANR	3321310	Identifier	CFF_CONFIG_OPTION_DARKENING_PARAMETER_X2		3321251	1					
ANR	3321311	ExpressionStatement	module -> darken_params [ 3 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y2	484:4:13360:13428	3321251	8	True				
ANR	3321312	AssignmentExpression	module -> darken_params [ 3 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y2		3321251	0		=			
ANR	3321313	ArrayIndexing	module -> darken_params [ 3 ]		3321251	0					
ANR	3321314	PtrMemberAccess	module -> darken_params		3321251	0					
ANR	3321315	Identifier	module		3321251	0					
ANR	3321316	Identifier	darken_params		3321251	1					
ANR	3321317	PrimaryExpression	3		3321251	1					
ANR	3321318	Identifier	CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y2		3321251	1					
ANR	3321319	ExpressionStatement	module -> darken_params [ 4 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_X3	485:4:13434:13502	3321251	9	True				
ANR	3321320	AssignmentExpression	module -> darken_params [ 4 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_X3		3321251	0		=			
ANR	3321321	ArrayIndexing	module -> darken_params [ 4 ]		3321251	0					
ANR	3321322	PtrMemberAccess	module -> darken_params		3321251	0					
ANR	3321323	Identifier	module		3321251	0					
ANR	3321324	Identifier	darken_params		3321251	1					
ANR	3321325	PrimaryExpression	4		3321251	1					
ANR	3321326	Identifier	CFF_CONFIG_OPTION_DARKENING_PARAMETER_X3		3321251	1					
ANR	3321327	ExpressionStatement	module -> darken_params [ 5 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y3	486:4:13508:13576	3321251	10	True				
ANR	3321328	AssignmentExpression	module -> darken_params [ 5 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y3		3321251	0		=			
ANR	3321329	ArrayIndexing	module -> darken_params [ 5 ]		3321251	0					
ANR	3321330	PtrMemberAccess	module -> darken_params		3321251	0					
ANR	3321331	Identifier	module		3321251	0					
ANR	3321332	Identifier	darken_params		3321251	1					
ANR	3321333	PrimaryExpression	5		3321251	1					
ANR	3321334	Identifier	CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y3		3321251	1					
ANR	3321335	ExpressionStatement	module -> darken_params [ 6 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_X4	487:4:13582:13650	3321251	11	True				
ANR	3321336	AssignmentExpression	module -> darken_params [ 6 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_X4		3321251	0		=			
ANR	3321337	ArrayIndexing	module -> darken_params [ 6 ]		3321251	0					
ANR	3321338	PtrMemberAccess	module -> darken_params		3321251	0					
ANR	3321339	Identifier	module		3321251	0					
ANR	3321340	Identifier	darken_params		3321251	1					
ANR	3321341	PrimaryExpression	6		3321251	1					
ANR	3321342	Identifier	CFF_CONFIG_OPTION_DARKENING_PARAMETER_X4		3321251	1					
ANR	3321343	ExpressionStatement	module -> darken_params [ 7 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y4	488:4:13656:13724	3321251	12	True				
ANR	3321344	AssignmentExpression	module -> darken_params [ 7 ] = CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y4		3321251	0		=			
ANR	3321345	ArrayIndexing	module -> darken_params [ 7 ]		3321251	0					
ANR	3321346	PtrMemberAccess	module -> darken_params		3321251	0					
ANR	3321347	Identifier	module		3321251	0					
ANR	3321348	Identifier	darken_params		3321251	1					
ANR	3321349	PrimaryExpression	7		3321251	1					
ANR	3321350	Identifier	CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y4		3321251	1					
ANR	3321351	ReturnStatement	return FT_Err_Ok ;	490:4:13731:13747	3321251	13	True				
ANR	3321352	Identifier	FT_Err_Ok		3321251	0					
ANR	3321353	Identifier	af_autofitter_init		3321251	1					
ANR	3321354	ParameterList	FT_Module ft_module		3321251	2					
ANR	3321355	Parameter	FT_Module ft_module	469:22:12820:12839	3321251	0	True				
ANR	3321356	ParameterType	FT_Module		3321251	0					
ANR	3321357	Identifier	ft_module		3321251	1					
ANR	3321358	CFGEntryNode	ENTRY		3321251		True				
ANR	3321359	CFGExitNode	EXIT		3321251		True				
ANR	3321360	Symbol	FT_Err_Ok		3321251						
ANR	3321361	Symbol	* module		3321251						
ANR	3321362	Symbol	* * module		3321251						
ANR	3321363	Symbol	module		3321251						
ANR	3321364	Symbol	TRUE		3321251						
ANR	3321365	Symbol	module -> darken_params		3321251						
ANR	3321366	Symbol	* module -> darken_params		3321251						
ANR	3321367	Symbol	module -> no_stem_darkening		3321251						
ANR	3321368	Symbol	CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y1		3321251						
ANR	3321369	Symbol	module -> fallback_style		3321251						
ANR	3321370	Symbol	CFF_CONFIG_OPTION_DARKENING_PARAMETER_X1		3321251						
ANR	3321371	Symbol	CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y2		3321251						
ANR	3321372	Symbol	ft_module		3321251						
ANR	3321373	Symbol	CFF_CONFIG_OPTION_DARKENING_PARAMETER_X2		3321251						
ANR	3321374	Symbol	CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y3		3321251						
ANR	3321375	Symbol	CFF_CONFIG_OPTION_DARKENING_PARAMETER_X3		3321251						
ANR	3321376	Symbol	CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y4		3321251						
ANR	3321377	Symbol	CFF_CONFIG_OPTION_DARKENING_PARAMETER_X4		3321251						
ANR	3321378	Symbol	AF_STYLE_FALLBACK		3321251						
ANR	3321379	Symbol	module -> default_script		3321251						
ANR	3321380	Symbol	AF_SCRIPT_DEFAULT		3321251						
ANR	3321381	Symbol	module -> warping		3321251						
ANR	3321382	Function	af_autofitter_done	495:2:13783:14002							
ANR	3321383	FunctionDef	af_autofitter_done (FT_Module ft_module)		3321382	0					
ANR	3321384	CompoundStatement		496:2:13849:14002	3321382	0					
ANR	3321385	ExpressionStatement	FT_UNUSED ( ft_module )	497:4:13855:13877	3321382	0	True				
ANR	3321386	CallExpression	FT_UNUSED ( ft_module )		3321382	0					
ANR	3321387	Callee	FT_UNUSED		3321382	0					
ANR	3321388	Identifier	FT_UNUSED		3321382	0					
ANR	3321389	ArgumentList	ft_module		3321382	1					
ANR	3321390	Argument	ft_module		3321382	0					
ANR	3321391	Identifier	ft_module		3321382	0					
ANR	3321392	IfStatement	if ( _af_debug_hints_rec -> memory )		3321382	1					
ANR	3321393	Condition	_af_debug_hints_rec -> memory	500:9:13913:13939	3321382	0	True				
ANR	3321394	PtrMemberAccess	_af_debug_hints_rec -> memory		3321382	0					
ANR	3321395	Identifier	_af_debug_hints_rec		3321382	0					
ANR	3321396	Identifier	memory		3321382	1					
ANR	3321397	ExpressionStatement	af_glyph_hints_done ( _af_debug_hints_rec )	501:6:13949:13991	3321382	1	True				
ANR	3321398	CallExpression	af_glyph_hints_done ( _af_debug_hints_rec )		3321382	0					
ANR	3321399	Callee	af_glyph_hints_done		3321382	0					
ANR	3321400	Identifier	af_glyph_hints_done		3321382	0					
ANR	3321401	ArgumentList	_af_debug_hints_rec		3321382	1					
ANR	3321402	Argument	_af_debug_hints_rec		3321382	0					
ANR	3321403	Identifier	_af_debug_hints_rec		3321382	0					
ANR	3321404	Identifier	af_autofitter_done		3321382	1					
ANR	3321405	ParameterList	FT_Module ft_module		3321382	2					
ANR	3321406	Parameter	FT_Module ft_module	495:22:13803:13822	3321382	0	True				
ANR	3321407	ParameterType	FT_Module		3321382	0					
ANR	3321408	Identifier	ft_module		3321382	1					
ANR	3321409	CFGEntryNode	ENTRY		3321382		True				
ANR	3321410	CFGExitNode	EXIT		3321382		True				
ANR	3321411	Symbol	_af_debug_hints_rec -> memory		3321382						
ANR	3321412	Symbol	* _af_debug_hints_rec		3321382						
ANR	3321413	Symbol	ft_module		3321382						
ANR	3321414	Symbol	_af_debug_hints_rec		3321382						
ANR	3321415	Function	af_autofitter_load_glyph	507:2:14038:15613							
ANR	3321416	FunctionDef	"af_autofitter_load_glyph (AF_Module module , FT_GlyphSlot slot , FT_Size size , FT_UInt glyph_index , FT_Int32 load_flags)"		3321415	0					
ANR	3321417	CompoundStatement		512:2:14294:15613	3321415	0					
ANR	3321418	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	513:4:14300:14329	3321415	0	True				
ANR	3321419	IdentifierDecl	error = FT_Err_Ok		3321415	0					
ANR	3321420	IdentifierDeclType	FT_Error		3321415	0					
ANR	3321421	Identifier	error		3321415	1					
ANR	3321422	AssignmentExpression	error = FT_Err_Ok		3321415	2		=			
ANR	3321423	Identifier	FT_Err_Ok		3321415	0					
ANR	3321424	Identifier	FT_Err_Ok		3321415	1					
ANR	3321425	IdentifierDeclStatement	FT_Memory memory = module -> root . library -> memory ;	514:4:14335:14383	3321415	1	True				
ANR	3321426	IdentifierDecl	memory = module -> root . library -> memory		3321415	0					
ANR	3321427	IdentifierDeclType	FT_Memory		3321415	0					
ANR	3321428	Identifier	memory		3321415	1					
ANR	3321429	AssignmentExpression	memory = module -> root . library -> memory		3321415	2		=			
ANR	3321430	Identifier	memory		3321415	0					
ANR	3321431	PtrMemberAccess	module -> root . library -> memory		3321415	1					
ANR	3321432	MemberAccess	module -> root . library		3321415	0					
ANR	3321433	PtrMemberAccess	module -> root		3321415	0					
ANR	3321434	Identifier	module		3321415	0					
ANR	3321435	Identifier	root		3321415	1					
ANR	3321436	Identifier	library		3321415	1					
ANR	3321437	Identifier	memory		3321415	1					
ANR	3321438	IdentifierDeclStatement	AF_GlyphHints hints = _af_debug_hints_rec ;	520:4:14491:14533	3321415	2	True				
ANR	3321439	IdentifierDecl	hints = _af_debug_hints_rec		3321415	0					
ANR	3321440	IdentifierDeclType	AF_GlyphHints		3321415	0					
ANR	3321441	Identifier	hints		3321415	1					
ANR	3321442	AssignmentExpression	hints = _af_debug_hints_rec		3321415	2		=			
ANR	3321443	Identifier	_af_debug_hints_rec		3321415	0					
ANR	3321444	Identifier	_af_debug_hints_rec		3321415	1					
ANR	3321445	IdentifierDeclStatement	AF_LoaderRec loader [ 1 ] ;	521:4:14539:14563	3321415	3	True				
ANR	3321446	IdentifierDecl	loader [ 1 ]		3321415	0					
ANR	3321447	IdentifierDeclType	AF_LoaderRec [ 1 ]		3321415	0					
ANR	3321448	Identifier	loader		3321415	1					
ANR	3321449	PrimaryExpression	1		3321415	2					
ANR	3321450	ExpressionStatement	FT_UNUSED ( size )	523:4:14570:14587	3321415	4	True				
ANR	3321451	CallExpression	FT_UNUSED ( size )		3321415	0					
ANR	3321452	Callee	FT_UNUSED		3321415	0					
ANR	3321453	Identifier	FT_UNUSED		3321415	0					
ANR	3321454	ArgumentList	size		3321415	1					
ANR	3321455	Argument	size		3321415	0					
ANR	3321456	Identifier	size		3321415	0					
ANR	3321457	IfStatement	if ( hints -> memory )		3321415	5					
ANR	3321458	Condition	hints -> memory	526:9:14600:14612	3321415	0	True				
ANR	3321459	PtrMemberAccess	hints -> memory		3321415	0					
ANR	3321460	Identifier	hints		3321415	0					
ANR	3321461	Identifier	memory		3321415	1					
ANR	3321462	ExpressionStatement	af_glyph_hints_done ( hints )	527:6:14622:14650	3321415	1	True				
ANR	3321463	CallExpression	af_glyph_hints_done ( hints )		3321415	0					
ANR	3321464	Callee	af_glyph_hints_done		3321415	0					
ANR	3321465	Identifier	af_glyph_hints_done		3321415	0					
ANR	3321466	ArgumentList	hints		3321415	1					
ANR	3321467	Argument	hints		3321415	0					
ANR	3321468	Identifier	hints		3321415	0					
ANR	3321469	ExpressionStatement	"af_glyph_hints_init ( hints , memory )"	529:4:14657:14693	3321415	6	True				
ANR	3321470	CallExpression	"af_glyph_hints_init ( hints , memory )"		3321415	0					
ANR	3321471	Callee	af_glyph_hints_init		3321415	0					
ANR	3321472	Identifier	af_glyph_hints_init		3321415	0					
ANR	3321473	ArgumentList	hints		3321415	1					
ANR	3321474	Argument	hints		3321415	0					
ANR	3321475	Identifier	hints		3321415	0					
ANR	3321476	Argument	memory		3321415	1					
ANR	3321477	Identifier	memory		3321415	0					
ANR	3321478	ExpressionStatement	"af_loader_init ( loader , hints )"	530:4:14699:14730	3321415	7	True				
ANR	3321479	CallExpression	"af_loader_init ( loader , hints )"		3321415	0					
ANR	3321480	Callee	af_loader_init		3321415	0					
ANR	3321481	Identifier	af_loader_init		3321415	0					
ANR	3321482	ArgumentList	loader		3321415	1					
ANR	3321483	Argument	loader		3321415	0					
ANR	3321484	Identifier	loader		3321415	0					
ANR	3321485	Argument	hints		3321415	1					
ANR	3321486	Identifier	hints		3321415	0					
ANR	3321487	ExpressionStatement	"error = af_loader_load_glyph ( loader , module , slot -> face , glyph_index , load_flags )"	532:4:14737:14854	3321415	8	True				
ANR	3321488	AssignmentExpression	"error = af_loader_load_glyph ( loader , module , slot -> face , glyph_index , load_flags )"		3321415	0		=			
ANR	3321489	Identifier	error		3321415	0					
ANR	3321490	CallExpression	"af_loader_load_glyph ( loader , module , slot -> face , glyph_index , load_flags )"		3321415	1					
ANR	3321491	Callee	af_loader_load_glyph		3321415	0					
ANR	3321492	Identifier	af_loader_load_glyph		3321415	0					
ANR	3321493	ArgumentList	loader		3321415	1					
ANR	3321494	Argument	loader		3321415	0					
ANR	3321495	Identifier	loader		3321415	0					
ANR	3321496	Argument	module		3321415	1					
ANR	3321497	Identifier	module		3321415	0					
ANR	3321498	Argument	slot -> face		3321415	2					
ANR	3321499	PtrMemberAccess	slot -> face		3321415	0					
ANR	3321500	Identifier	slot		3321415	0					
ANR	3321501	Identifier	face		3321415	1					
ANR	3321502	Argument	glyph_index		3321415	3					
ANR	3321503	Identifier	glyph_index		3321415	0					
ANR	3321504	Argument	load_flags		3321415	4					
ANR	3321505	Identifier	load_flags		3321415	0					
ANR	3321506	IfStatement	if ( ft_trace_levels [ FT_COMPONENT ] )		3321415	9					
ANR	3321507	Condition	ft_trace_levels [ FT_COMPONENT ]	536:9:14894:14922	3321415	0	True				
ANR	3321508	ArrayIndexing	ft_trace_levels [ FT_COMPONENT ]		3321415	0					
ANR	3321509	Identifier	ft_trace_levels		3321415	0					
ANR	3321510	Identifier	FT_COMPONENT		3321415	1					
ANR	3321511	CompoundStatement		26:4:635:635	3321415	1					
ANR	3321512	ExpressionStatement	"af_glyph_hints_dump_points ( hints , 0 )"	539:6:14945:14983	3321415	0	True				
ANR	3321513	CallExpression	"af_glyph_hints_dump_points ( hints , 0 )"		3321415	0					
ANR	3321514	Callee	af_glyph_hints_dump_points		3321415	0					
ANR	3321515	Identifier	af_glyph_hints_dump_points		3321415	0					
ANR	3321516	ArgumentList	hints		3321415	1					
ANR	3321517	Argument	hints		3321415	0					
ANR	3321518	Identifier	hints		3321415	0					
ANR	3321519	Argument	0		3321415	1					
ANR	3321520	PrimaryExpression	0		3321415	0					
ANR	3321521	ExpressionStatement	"af_glyph_hints_dump_segments ( hints , 0 )"	540:6:14991:15031	3321415	1	True				
ANR	3321522	CallExpression	"af_glyph_hints_dump_segments ( hints , 0 )"		3321415	0					
ANR	3321523	Callee	af_glyph_hints_dump_segments		3321415	0					
ANR	3321524	Identifier	af_glyph_hints_dump_segments		3321415	0					
ANR	3321525	ArgumentList	hints		3321415	1					
ANR	3321526	Argument	hints		3321415	0					
ANR	3321527	Identifier	hints		3321415	0					
ANR	3321528	Argument	0		3321415	1					
ANR	3321529	PrimaryExpression	0		3321415	0					
ANR	3321530	ExpressionStatement	"af_glyph_hints_dump_edges ( hints , 0 )"	541:6:15039:15076	3321415	2	True				
ANR	3321531	CallExpression	"af_glyph_hints_dump_edges ( hints , 0 )"		3321415	0					
ANR	3321532	Callee	af_glyph_hints_dump_edges		3321415	0					
ANR	3321533	Identifier	af_glyph_hints_dump_edges		3321415	0					
ANR	3321534	ArgumentList	hints		3321415	1					
ANR	3321535	Argument	hints		3321415	0					
ANR	3321536	Identifier	hints		3321415	0					
ANR	3321537	Argument	0		3321415	1					
ANR	3321538	PrimaryExpression	0		3321415	0					
ANR	3321539	ExpressionStatement	af_loader_done ( loader )	546:4:15124:15148	3321415	10	True				
ANR	3321540	CallExpression	af_loader_done ( loader )		3321415	0					
ANR	3321541	Callee	af_loader_done		3321415	0					
ANR	3321542	Identifier	af_loader_done		3321415	0					
ANR	3321543	ArgumentList	loader		3321415	1					
ANR	3321544	Argument	loader		3321415	0					
ANR	3321545	Identifier	loader		3321415	0					
ANR	3321546	ReturnStatement	return error ;	548:4:15155:15167	3321415	11	True				
ANR	3321547	Identifier	error		3321415	0					
ANR	3321548	Identifier	af_autofitter_load_glyph		3321415	1					
ANR	3321549	ParameterList	"AF_Module module , FT_GlyphSlot slot , FT_Size size , FT_UInt glyph_index , FT_Int32 load_flags"		3321415	2					
ANR	3321550	Parameter	AF_Module module	507:28:14064:14083	3321415	0	True				
ANR	3321551	ParameterType	AF_Module		3321415	0					
ANR	3321552	Identifier	module		3321415	1					
ANR	3321553	Parameter	FT_GlyphSlot slot	508:28:14114:14131	3321415	1	True				
ANR	3321554	ParameterType	FT_GlyphSlot		3321415	0					
ANR	3321555	Identifier	slot		3321415	1					
ANR	3321556	Parameter	FT_Size size	509:28:14162:14179	3321415	2	True				
ANR	3321557	ParameterType	FT_Size		3321415	0					
ANR	3321558	Identifier	size		3321415	1					
ANR	3321559	Parameter	FT_UInt glyph_index	510:28:14210:14234	3321415	3	True				
ANR	3321560	ParameterType	FT_UInt		3321415	0					
ANR	3321561	Identifier	glyph_index		3321415	1					
ANR	3321562	Parameter	FT_Int32 load_flags	511:28:14265:14288	3321415	4	True				
ANR	3321563	ParameterType	FT_Int32		3321415	0					
ANR	3321564	Identifier	load_flags		3321415	1					
ANR	3321565	CFGEntryNode	ENTRY		3321415		True				
ANR	3321566	CFGExitNode	EXIT		3321415		True				
ANR	3321567	Symbol	* module -> root . library		3321415						
ANR	3321568	Symbol	memory		3321415						
ANR	3321569	Symbol	glyph_index		3321415						
ANR	3321570	Symbol	FT_Err_Ok		3321415						
ANR	3321571	Symbol	* * module		3321415						
ANR	3321572	Symbol	loader		3321415						
ANR	3321573	Symbol	slot -> face		3321415						
ANR	3321574	Symbol	slot		3321415						
ANR	3321575	Symbol	error		3321415						
ANR	3321576	Symbol	module -> root . library		3321415						
ANR	3321577	Symbol	* module -> root		3321415						
ANR	3321578	Symbol	* slot		3321415						
ANR	3321579	Symbol	hints -> memory		3321415						
ANR	3321580	Symbol	_af_debug_hints_rec		3321415						
ANR	3321581	Symbol	* ft_trace_levels		3321415						
ANR	3321582	Symbol	* hints		3321415						
ANR	3321583	Symbol	* module		3321415						
ANR	3321584	Symbol	hints		3321415						
ANR	3321585	Symbol	module		3321415						
ANR	3321586	Symbol	FT_COMPONENT		3321415						
ANR	3321587	Symbol	* FT_COMPONENT		3321415						
ANR	3321588	Symbol	af_loader_load_glyph		3321415						
ANR	3321589	Symbol	size		3321415						
ANR	3321590	Symbol	module -> root		3321415						
ANR	3321591	Symbol	module -> root . library -> memory		3321415						
ANR	3321592	Symbol	load_flags		3321415						
ANR	3321593	Symbol	ft_trace_levels		3321415						
