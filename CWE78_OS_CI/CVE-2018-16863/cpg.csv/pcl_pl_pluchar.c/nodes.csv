command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8220220	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pl_pluchar.c								
ANR	8220221	DeclStmt									
ANR	8220222	Decl							const pl_font_t	const pl_font_t *	plfont_last
ANR	8220223	DeclStmt									
ANR	8220224	Decl							const gs_matrix	const gs_matrix	pl_identmtx
ANR	8220225	DeclStmt									
ANR	8220226	Decl							extern IF_STATE	extern IF_STATE	if_state
ANR	8220227	DeclStmt									
ANR	8220228	Decl							extern PIF_STATE	extern PIF_STATE	pIFS
ANR	8220229	Function	pl_init_fc	89:0:2324:5222							
ANR	8220230	FunctionDef	"pl_init_fc (const pl_font_t * plfont , gs_gstate * pgs , int need_outline , FONTCONTEXT * pfc , bool width_request)"		8220229	0					
ANR	8220231	CompoundStatement		93:0:2469:5222	8220229	0					
ANR	8220232	IdentifierDeclStatement	gs_font * pfont = plfont -> pfont ;	94:4:2475:2505	8220229	0	True				
ANR	8220233	IdentifierDecl	* pfont = plfont -> pfont		8220229	0					
ANR	8220234	IdentifierDeclType	gs_font *		8220229	0					
ANR	8220235	Identifier	pfont		8220229	1					
ANR	8220236	AssignmentExpression	* pfont = plfont -> pfont		8220229	2		=			
ANR	8220237	Identifier	pfont		8220229	0					
ANR	8220238	PtrMemberAccess	plfont -> pfont		8220229	1					
ANR	8220239	Identifier	plfont		8220229	0					
ANR	8220240	Identifier	pfont		8220229	1					
ANR	8220241	IdentifierDeclStatement	gs_matrix mat ;	98:4:2699:2712	8220229	1	True				
ANR	8220242	IdentifierDecl	mat		8220229	0					
ANR	8220243	IdentifierDeclType	gs_matrix		8220229	0					
ANR	8220244	Identifier	mat		8220229	1					
ANR	8220245	IdentifierDeclStatement	"double xres , yres ;"	99:4:2718:2735	8220229	2	True				
ANR	8220246	IdentifierDecl	xres		8220229	0					
ANR	8220247	IdentifierDeclType	double		8220229	0					
ANR	8220248	Identifier	xres		8220229	1					
ANR	8220249	IdentifierDecl	yres		8220229	1					
ANR	8220250	IdentifierDeclType	double		8220229	0					
ANR	8220251	Identifier	yres		8220229	1					
ANR	8220252	IfStatement	if ( width_request )		8220229	3					
ANR	8220253	Condition	width_request	101:8:2746:2758	8220229	0	True				
ANR	8220254	Identifier	width_request		8220229	0					
ANR	8220255	CompoundStatement		9:23:291:291	8220229	1					
ANR	8220256	ExpressionStatement	gs_make_identity ( & mat )	102:8:2771:2793	8220229	0	True				
ANR	8220257	CallExpression	gs_make_identity ( & mat )		8220229	0					
ANR	8220258	Callee	gs_make_identity		8220229	0					
ANR	8220259	Identifier	gs_make_identity		8220229	0					
ANR	8220260	ArgumentList	& mat		8220229	1					
ANR	8220261	Argument	& mat		8220229	0					
ANR	8220262	UnaryOperationExpression	& mat		8220229	0					
ANR	8220263	UnaryOperator	&		8220229	0					
ANR	8220264	Identifier	mat		8220229	1					
ANR	8220265	ExpressionStatement	xres = yres = 1	103:8:2803:2818	8220229	1	True				
ANR	8220266	AssignmentExpression	xres = yres = 1		8220229	0		=			
ANR	8220267	Identifier	xres		8220229	0					
ANR	8220268	AssignmentExpression	yres = 1		8220229	1		=			
ANR	8220269	Identifier	yres		8220229	0					
ANR	8220270	PrimaryExpression	1		8220229	1					
ANR	8220271	ElseStatement	else		8220229	0					
ANR	8220272	CompoundStatement		12:11:361:361	8220229	0					
ANR	8220273	ExpressionStatement	"gs_currentmatrix ( pgs , & mat )"	105:8:2841:2868	8220229	0	True				
ANR	8220274	CallExpression	"gs_currentmatrix ( pgs , & mat )"		8220229	0					
ANR	8220275	Callee	gs_currentmatrix		8220229	0					
ANR	8220276	Identifier	gs_currentmatrix		8220229	0					
ANR	8220277	ArgumentList	pgs		8220229	1					
ANR	8220278	Argument	pgs		8220229	0					
ANR	8220279	Identifier	pgs		8220229	0					
ANR	8220280	Argument	& mat		8220229	1					
ANR	8220281	UnaryOperationExpression	& mat		8220229	0					
ANR	8220282	UnaryOperator	&		8220229	0					
ANR	8220283	Identifier	mat		8220229	1					
ANR	8220284	ExpressionStatement	xres = gs_currentdevice ( pgs ) -> HWResolution [ 0 ]	106:8:2878:2923	8220229	1	True				
ANR	8220285	AssignmentExpression	xres = gs_currentdevice ( pgs ) -> HWResolution [ 0 ]		8220229	0		=			
ANR	8220286	Identifier	xres		8220229	0					
ANR	8220287	ArrayIndexing	gs_currentdevice ( pgs ) -> HWResolution [ 0 ]		8220229	1					
ANR	8220288	PtrMemberAccess	gs_currentdevice ( pgs ) -> HWResolution		8220229	0					
ANR	8220289	CallExpression	gs_currentdevice ( pgs )		8220229	0					
ANR	8220290	Callee	gs_currentdevice		8220229	0					
ANR	8220291	Identifier	gs_currentdevice		8220229	0					
ANR	8220292	ArgumentList	pgs		8220229	1					
ANR	8220293	Argument	pgs		8220229	0					
ANR	8220294	Identifier	pgs		8220229	0					
ANR	8220295	Identifier	HWResolution		8220229	1					
ANR	8220296	PrimaryExpression	0		8220229	1					
ANR	8220297	ExpressionStatement	yres = gs_currentdevice ( pgs ) -> HWResolution [ 1 ]	107:8:2933:2978	8220229	2	True				
ANR	8220298	AssignmentExpression	yres = gs_currentdevice ( pgs ) -> HWResolution [ 1 ]		8220229	0		=			
ANR	8220299	Identifier	yres		8220229	0					
ANR	8220300	ArrayIndexing	gs_currentdevice ( pgs ) -> HWResolution [ 1 ]		8220229	1					
ANR	8220301	PtrMemberAccess	gs_currentdevice ( pgs ) -> HWResolution		8220229	0					
ANR	8220302	CallExpression	gs_currentdevice ( pgs )		8220229	0					
ANR	8220303	Callee	gs_currentdevice		8220229	0					
ANR	8220304	Identifier	gs_currentdevice		8220229	0					
ANR	8220305	ArgumentList	pgs		8220229	1					
ANR	8220306	Argument	pgs		8220229	0					
ANR	8220307	Identifier	pgs		8220229	0					
ANR	8220308	Identifier	HWResolution		8220229	1					
ANR	8220309	PrimaryExpression	1		8220229	1					
ANR	8220310	ExpressionStatement	pfc -> font_id = 0	109:4:2990:3006	8220229	4	True				
ANR	8220311	AssignmentExpression	pfc -> font_id = 0		8220229	0		=			
ANR	8220312	PtrMemberAccess	pfc -> font_id		8220229	0					
ANR	8220313	Identifier	pfc		8220229	0					
ANR	8220314	Identifier	font_id		8220229	1					
ANR	8220315	PrimaryExpression	0		8220229	1					
ANR	8220316	ExpressionStatement	pfc -> xspot = F_ONE	110:4:3012:3030	8220229	5	True				
ANR	8220317	AssignmentExpression	pfc -> xspot = F_ONE		8220229	0		=			
ANR	8220318	PtrMemberAccess	pfc -> xspot		8220229	0					
ANR	8220319	Identifier	pfc		8220229	0					
ANR	8220320	Identifier	xspot		8220229	1					
ANR	8220321	Identifier	F_ONE		8220229	1					
ANR	8220322	ExpressionStatement	pfc -> yspot = F_ONE	111:4:3036:3054	8220229	6	True				
ANR	8220323	AssignmentExpression	pfc -> yspot = F_ONE		8220229	0		=			
ANR	8220324	PtrMemberAccess	pfc -> yspot		8220229	0					
ANR	8220325	Identifier	pfc		8220229	0					
ANR	8220326	Identifier	yspot		8220229	1					
ANR	8220327	Identifier	F_ONE		8220229	1					
ANR	8220328	ExpressionStatement	pfc -> ssnum = 0x8000	113:4:3115:3134	8220229	7	True				
ANR	8220329	AssignmentExpression	pfc -> ssnum = 0x8000		8220229	0		=			
ANR	8220330	PtrMemberAccess	pfc -> ssnum		8220229	0					
ANR	8220331	Identifier	pfc		8220229	0					
ANR	8220332	Identifier	ssnum		8220229	1					
ANR	8220333	PrimaryExpression	0x8000		8220229	1					
ANR	8220334	ExpressionStatement	pfc -> font_hdr = NULL	115:4:3198:3218	8220229	8	True				
ANR	8220335	AssignmentExpression	pfc -> font_hdr = NULL		8220229	0		=			
ANR	8220336	PtrMemberAccess	pfc -> font_hdr		8220229	0					
ANR	8220337	Identifier	pfc		8220229	0					
ANR	8220338	Identifier	font_hdr		8220229	1					
ANR	8220339	Identifier	NULL		8220229	1					
ANR	8220340	ExpressionStatement	pfc -> dl_ssnum = 0	116:4:3224:3241	8220229	9	True				
ANR	8220341	AssignmentExpression	pfc -> dl_ssnum = 0		8220229	0		=			
ANR	8220342	PtrMemberAccess	pfc -> dl_ssnum		8220229	0					
ANR	8220343	Identifier	pfc		8220229	0					
ANR	8220344	Identifier	dl_ssnum		8220229	1					
ANR	8220345	PrimaryExpression	0		8220229	1					
ANR	8220346	ExpressionStatement	pfc -> fc_type = FC_MAT2_TYPE	119:4:3330:3357	8220229	10	True				
ANR	8220347	AssignmentExpression	pfc -> fc_type = FC_MAT2_TYPE		8220229	0		=			
ANR	8220348	PtrMemberAccess	pfc -> fc_type		8220229	0					
ANR	8220349	Identifier	pfc		8220229	0					
ANR	8220350	Identifier	fc_type		8220229	1					
ANR	8220351	Identifier	FC_MAT2_TYPE		8220229	1					
ANR	8220352	CompoundStatement		33:8:1097:1121	8220229	11					
ANR	8220353	IdentifierDeclStatement	"double hx = hypot ( mat . xx , mat . xy ) ;"	122:8:3447:3480	8220229	0	True				
ANR	8220354	IdentifierDecl	"hx = hypot ( mat . xx , mat . xy )"		8220229	0					
ANR	8220355	IdentifierDeclType	double		8220229	0					
ANR	8220356	Identifier	hx		8220229	1					
ANR	8220357	AssignmentExpression	"hx = hypot ( mat . xx , mat . xy )"		8220229	2		=			
ANR	8220358	Identifier	hx		8220229	0					
ANR	8220359	CallExpression	"hypot ( mat . xx , mat . xy )"		8220229	1					
ANR	8220360	Callee	hypot		8220229	0					
ANR	8220361	Identifier	hypot		8220229	0					
ANR	8220362	ArgumentList	mat . xx		8220229	1					
ANR	8220363	Argument	mat . xx		8220229	0					
ANR	8220364	MemberAccess	mat . xx		8220229	0					
ANR	8220365	Identifier	mat		8220229	0					
ANR	8220366	Identifier	xx		8220229	1					
ANR	8220367	Argument	mat . xy		8220229	1					
ANR	8220368	MemberAccess	mat . xy		8220229	0					
ANR	8220369	Identifier	mat		8220229	0					
ANR	8220370	Identifier	xy		8220229	1					
ANR	8220371	IdentifierDeclStatement	"double hy = hypot ( mat . yx , mat . yy ) ;"	123:8:3490:3523	8220229	1	True				
ANR	8220372	IdentifierDecl	"hy = hypot ( mat . yx , mat . yy )"		8220229	0					
ANR	8220373	IdentifierDeclType	double		8220229	0					
ANR	8220374	Identifier	hy		8220229	1					
ANR	8220375	AssignmentExpression	"hy = hypot ( mat . yx , mat . yy )"		8220229	2		=			
ANR	8220376	Identifier	hy		8220229	0					
ANR	8220377	CallExpression	"hypot ( mat . yx , mat . yy )"		8220229	1					
ANR	8220378	Callee	hypot		8220229	0					
ANR	8220379	Identifier	hypot		8220229	0					
ANR	8220380	ArgumentList	mat . yx		8220229	1					
ANR	8220381	Argument	mat . yx		8220229	0					
ANR	8220382	MemberAccess	mat . yx		8220229	0					
ANR	8220383	Identifier	mat		8220229	0					
ANR	8220384	Identifier	yx		8220229	1					
ANR	8220385	Argument	mat . yy		8220229	1					
ANR	8220386	MemberAccess	mat . yy		8220229	0					
ANR	8220387	Identifier	mat		8220229	0					
ANR	8220388	Identifier	yy		8220229	1					
ANR	8220389	IdentifierDeclStatement	double mscale = 1L << 16 ;	125:8:3567:3591	8220229	2	True				
ANR	8220390	IdentifierDecl	mscale = 1L << 16		8220229	0					
ANR	8220391	IdentifierDeclType	double		8220229	0					
ANR	8220392	Identifier	mscale		8220229	1					
ANR	8220393	AssignmentExpression	mscale = 1L << 16		8220229	2		=			
ANR	8220394	Identifier	mscale		8220229	0					
ANR	8220395	ShiftExpression	1L << 16		8220229	1		<<			
ANR	8220396	PrimaryExpression	1L		8220229	0					
ANR	8220397	PrimaryExpression	16		8220229	1					
ANR	8220398	ExpressionStatement	pfc -> s . m2 . matrix_scale = 16	127:8:3602:3629	8220229	3	True				
ANR	8220399	AssignmentExpression	pfc -> s . m2 . matrix_scale = 16		8220229	0		=			
ANR	8220400	MemberAccess	pfc -> s . m2 . matrix_scale		8220229	0					
ANR	8220401	MemberAccess	pfc -> s . m2		8220229	0					
ANR	8220402	PtrMemberAccess	pfc -> s		8220229	0					
ANR	8220403	Identifier	pfc		8220229	0					
ANR	8220404	Identifier	s		8220229	1					
ANR	8220405	Identifier	m2		8220229	1					
ANR	8220406	Identifier	matrix_scale		8220229	1					
ANR	8220407	PrimaryExpression	16		8220229	1					
ANR	8220408	ExpressionStatement	pfc -> s . m2 . point_size = ( int ) ( ( hy * plfont -> pts_per_inch / yres ) + 0.5 ) * 8	128:8:3639:3713	8220229	4	True				
ANR	8220409	AssignmentExpression	pfc -> s . m2 . point_size = ( int ) ( ( hy * plfont -> pts_per_inch / yres ) + 0.5 ) * 8		8220229	0		=			
ANR	8220410	MemberAccess	pfc -> s . m2 . point_size		8220229	0					
ANR	8220411	MemberAccess	pfc -> s . m2		8220229	0					
ANR	8220412	PtrMemberAccess	pfc -> s		8220229	0					
ANR	8220413	Identifier	pfc		8220229	0					
ANR	8220414	Identifier	s		8220229	1					
ANR	8220415	Identifier	m2		8220229	1					
ANR	8220416	Identifier	point_size		8220229	1					
ANR	8220417	MultiplicativeExpression	( int ) ( ( hy * plfont -> pts_per_inch / yres ) + 0.5 ) * 8		8220229	1		*			
ANR	8220418	CastExpression	( int ) ( ( hy * plfont -> pts_per_inch / yres ) + 0.5 )		8220229	0					
ANR	8220419	CastTarget	int		8220229	0					
ANR	8220420	AdditiveExpression	( hy * plfont -> pts_per_inch / yres ) + 0.5		8220229	1		+			
ANR	8220421	MultiplicativeExpression	hy * plfont -> pts_per_inch / yres		8220229	0		*			
ANR	8220422	Identifier	hy		8220229	0					
ANR	8220423	MultiplicativeExpression	plfont -> pts_per_inch / yres		8220229	1		/			
ANR	8220424	PtrMemberAccess	plfont -> pts_per_inch		8220229	0					
ANR	8220425	Identifier	plfont		8220229	0					
ANR	8220426	Identifier	pts_per_inch		8220229	1					
ANR	8220427	Identifier	yres		8220229	1					
ANR	8220428	PrimaryExpression	0.5		8220229	1					
ANR	8220429	PrimaryExpression	8		8220229	1					
ANR	8220430	ExpressionStatement	pfc -> s . m2 . set_size = ( int ) ( ( hx * plfont -> pts_per_inch / xres ) + 0.5 ) * 8	129:8:3740:3824	8220229	5	True				
ANR	8220431	AssignmentExpression	pfc -> s . m2 . set_size = ( int ) ( ( hx * plfont -> pts_per_inch / xres ) + 0.5 ) * 8		8220229	0		=			
ANR	8220432	MemberAccess	pfc -> s . m2 . set_size		8220229	0					
ANR	8220433	MemberAccess	pfc -> s . m2		8220229	0					
ANR	8220434	PtrMemberAccess	pfc -> s		8220229	0					
ANR	8220435	Identifier	pfc		8220229	0					
ANR	8220436	Identifier	s		8220229	1					
ANR	8220437	Identifier	m2		8220229	1					
ANR	8220438	Identifier	set_size		8220229	1					
ANR	8220439	MultiplicativeExpression	( int ) ( ( hx * plfont -> pts_per_inch / xres ) + 0.5 ) * 8		8220229	1		*			
ANR	8220440	CastExpression	( int ) ( ( hx * plfont -> pts_per_inch / xres ) + 0.5 )		8220229	0					
ANR	8220441	CastTarget	int		8220229	0					
ANR	8220442	AdditiveExpression	( hx * plfont -> pts_per_inch / xres ) + 0.5		8220229	1		+			
ANR	8220443	MultiplicativeExpression	hx * plfont -> pts_per_inch / xres		8220229	0		*			
ANR	8220444	Identifier	hx		8220229	0					
ANR	8220445	MultiplicativeExpression	plfont -> pts_per_inch / xres		8220229	1		/			
ANR	8220446	PtrMemberAccess	plfont -> pts_per_inch		8220229	0					
ANR	8220447	Identifier	plfont		8220229	0					
ANR	8220448	Identifier	pts_per_inch		8220229	1					
ANR	8220449	Identifier	xres		8220229	1					
ANR	8220450	PrimaryExpression	0.5		8220229	1					
ANR	8220451	PrimaryExpression	8		8220229	1					
ANR	8220452	ExpressionStatement	pfc -> s . m2 . m [ 0 ] = mscale * mat . xx / hx	131:8:3834:3871	8220229	6	True				
ANR	8220453	AssignmentExpression	pfc -> s . m2 . m [ 0 ] = mscale * mat . xx / hx		8220229	0		=			
ANR	8220454	ArrayIndexing	pfc -> s . m2 . m [ 0 ]		8220229	0					
ANR	8220455	MemberAccess	pfc -> s . m2 . m		8220229	0					
ANR	8220456	MemberAccess	pfc -> s . m2		8220229	0					
ANR	8220457	PtrMemberAccess	pfc -> s		8220229	0					
ANR	8220458	Identifier	pfc		8220229	0					
ANR	8220459	Identifier	s		8220229	1					
ANR	8220460	Identifier	m2		8220229	1					
ANR	8220461	Identifier	m		8220229	1					
ANR	8220462	PrimaryExpression	0		8220229	1					
ANR	8220463	MultiplicativeExpression	mscale * mat . xx / hx		8220229	1		*			
ANR	8220464	Identifier	mscale		8220229	0					
ANR	8220465	MultiplicativeExpression	mat . xx / hx		8220229	1		/			
ANR	8220466	MemberAccess	mat . xx		8220229	0					
ANR	8220467	Identifier	mat		8220229	0					
ANR	8220468	Identifier	xx		8220229	1					
ANR	8220469	Identifier	hx		8220229	1					
ANR	8220470	ExpressionStatement	pfc -> s . m2 . m [ 1 ] = mscale * - mat . xy / hx	132:8:3881:3919	8220229	7	True				
ANR	8220471	AssignmentExpression	pfc -> s . m2 . m [ 1 ] = mscale * - mat . xy / hx		8220229	0		=			
ANR	8220472	ArrayIndexing	pfc -> s . m2 . m [ 1 ]		8220229	0					
ANR	8220473	MemberAccess	pfc -> s . m2 . m		8220229	0					
ANR	8220474	MemberAccess	pfc -> s . m2		8220229	0					
ANR	8220475	PtrMemberAccess	pfc -> s		8220229	0					
ANR	8220476	Identifier	pfc		8220229	0					
ANR	8220477	Identifier	s		8220229	1					
ANR	8220478	Identifier	m2		8220229	1					
ANR	8220479	Identifier	m		8220229	1					
ANR	8220480	PrimaryExpression	1		8220229	1					
ANR	8220481	MultiplicativeExpression	mscale * - mat . xy / hx		8220229	1		*			
ANR	8220482	Identifier	mscale		8220229	0					
ANR	8220483	MultiplicativeExpression	- mat . xy / hx		8220229	1		/			
ANR	8220484	UnaryOperationExpression	- mat . xy		8220229	0					
ANR	8220485	UnaryOperator	-		8220229	0					
ANR	8220486	MemberAccess	mat . xy		8220229	1					
ANR	8220487	Identifier	mat		8220229	0					
ANR	8220488	Identifier	xy		8220229	1					
ANR	8220489	Identifier	hx		8220229	1					
ANR	8220490	ExpressionStatement	pfc -> s . m2 . m [ 2 ] = mscale * mat . yx / hy	133:8:3929:3966	8220229	8	True				
ANR	8220491	AssignmentExpression	pfc -> s . m2 . m [ 2 ] = mscale * mat . yx / hy		8220229	0		=			
ANR	8220492	ArrayIndexing	pfc -> s . m2 . m [ 2 ]		8220229	0					
ANR	8220493	MemberAccess	pfc -> s . m2 . m		8220229	0					
ANR	8220494	MemberAccess	pfc -> s . m2		8220229	0					
ANR	8220495	PtrMemberAccess	pfc -> s		8220229	0					
ANR	8220496	Identifier	pfc		8220229	0					
ANR	8220497	Identifier	s		8220229	1					
ANR	8220498	Identifier	m2		8220229	1					
ANR	8220499	Identifier	m		8220229	1					
ANR	8220500	PrimaryExpression	2		8220229	1					
ANR	8220501	MultiplicativeExpression	mscale * mat . yx / hy		8220229	1		*			
ANR	8220502	Identifier	mscale		8220229	0					
ANR	8220503	MultiplicativeExpression	mat . yx / hy		8220229	1		/			
ANR	8220504	MemberAccess	mat . yx		8220229	0					
ANR	8220505	Identifier	mat		8220229	0					
ANR	8220506	Identifier	yx		8220229	1					
ANR	8220507	Identifier	hy		8220229	1					
ANR	8220508	ExpressionStatement	pfc -> s . m2 . m [ 3 ] = mscale * - mat . yy / hy	134:8:3976:4014	8220229	9	True				
ANR	8220509	AssignmentExpression	pfc -> s . m2 . m [ 3 ] = mscale * - mat . yy / hy		8220229	0		=			
ANR	8220510	ArrayIndexing	pfc -> s . m2 . m [ 3 ]		8220229	0					
ANR	8220511	MemberAccess	pfc -> s . m2 . m		8220229	0					
ANR	8220512	MemberAccess	pfc -> s . m2		8220229	0					
ANR	8220513	PtrMemberAccess	pfc -> s		8220229	0					
ANR	8220514	Identifier	pfc		8220229	0					
ANR	8220515	Identifier	s		8220229	1					
ANR	8220516	Identifier	m2		8220229	1					
ANR	8220517	Identifier	m		8220229	1					
ANR	8220518	PrimaryExpression	3		8220229	1					
ANR	8220519	MultiplicativeExpression	mscale * - mat . yy / hy		8220229	1		*			
ANR	8220520	Identifier	mscale		8220229	0					
ANR	8220521	MultiplicativeExpression	- mat . yy / hy		8220229	1		/			
ANR	8220522	UnaryOperationExpression	- mat . yy		8220229	0					
ANR	8220523	UnaryOperator	-		8220229	0					
ANR	8220524	MemberAccess	mat . yy		8220229	1					
ANR	8220525	Identifier	mat		8220229	0					
ANR	8220526	Identifier	yy		8220229	1					
ANR	8220527	Identifier	hy		8220229	1					
ANR	8220528	ExpressionStatement	pfc -> s . m2 . world_scale = 16	135:8:4024:4050	8220229	10	True				
ANR	8220529	AssignmentExpression	pfc -> s . m2 . world_scale = 16		8220229	0		=			
ANR	8220530	MemberAccess	pfc -> s . m2 . world_scale		8220229	0					
ANR	8220531	MemberAccess	pfc -> s . m2		8220229	0					
ANR	8220532	PtrMemberAccess	pfc -> s		8220229	0					
ANR	8220533	Identifier	pfc		8220229	0					
ANR	8220534	Identifier	s		8220229	1					
ANR	8220535	Identifier	m2		8220229	1					
ANR	8220536	Identifier	world_scale		8220229	1					
ANR	8220537	PrimaryExpression	16		8220229	1					
ANR	8220538	ExpressionStatement	pfc -> s . m2 . xworld_res = mscale * xres	136:8:4060:4096	8220229	11	True				
ANR	8220539	AssignmentExpression	pfc -> s . m2 . xworld_res = mscale * xres		8220229	0		=			
ANR	8220540	MemberAccess	pfc -> s . m2 . xworld_res		8220229	0					
ANR	8220541	MemberAccess	pfc -> s . m2		8220229	0					
ANR	8220542	PtrMemberAccess	pfc -> s		8220229	0					
ANR	8220543	Identifier	pfc		8220229	0					
ANR	8220544	Identifier	s		8220229	1					
ANR	8220545	Identifier	m2		8220229	1					
ANR	8220546	Identifier	xworld_res		8220229	1					
ANR	8220547	MultiplicativeExpression	mscale * xres		8220229	1		*			
ANR	8220548	Identifier	mscale		8220229	0					
ANR	8220549	Identifier	xres		8220229	1					
ANR	8220550	ExpressionStatement	pfc -> s . m2 . yworld_res = mscale * yres	137:8:4106:4142	8220229	12	True				
ANR	8220551	AssignmentExpression	pfc -> s . m2 . yworld_res = mscale * yres		8220229	0		=			
ANR	8220552	MemberAccess	pfc -> s . m2 . yworld_res		8220229	0					
ANR	8220553	MemberAccess	pfc -> s . m2		8220229	0					
ANR	8220554	PtrMemberAccess	pfc -> s		8220229	0					
ANR	8220555	Identifier	pfc		8220229	0					
ANR	8220556	Identifier	s		8220229	1					
ANR	8220557	Identifier	m2		8220229	1					
ANR	8220558	Identifier	yworld_res		8220229	1					
ANR	8220559	MultiplicativeExpression	mscale * yres		8220229	1		*			
ANR	8220560	Identifier	mscale		8220229	0					
ANR	8220561	Identifier	yres		8220229	1					
ANR	8220562	IfStatement	if ( need_outline )		8220229	12					
ANR	8220563	Condition	need_outline	140:8:4159:4170	8220229	0	True				
ANR	8220564	Identifier	need_outline		8220229	0					
ANR	8220565	CompoundStatement		48:22:1703:1703	8220229	1					
ANR	8220566	ExpressionStatement	pfc -> s . m2 . m [ 1 ] = - pfc -> s . m2 . m [ 1 ]	141:8:4183:4215	8220229	0	True				
ANR	8220567	AssignmentExpression	pfc -> s . m2 . m [ 1 ] = - pfc -> s . m2 . m [ 1 ]		8220229	0		=			
ANR	8220568	ArrayIndexing	pfc -> s . m2 . m [ 1 ]		8220229	0					
ANR	8220569	MemberAccess	pfc -> s . m2 . m		8220229	0					
ANR	8220570	MemberAccess	pfc -> s . m2		8220229	0					
ANR	8220571	PtrMemberAccess	pfc -> s		8220229	0					
ANR	8220572	Identifier	pfc		8220229	0					
ANR	8220573	Identifier	s		8220229	1					
ANR	8220574	Identifier	m2		8220229	1					
ANR	8220575	Identifier	m		8220229	1					
ANR	8220576	PrimaryExpression	1		8220229	1					
ANR	8220577	UnaryOperationExpression	- pfc -> s . m2 . m [ 1 ]		8220229	1					
ANR	8220578	UnaryOperator	-		8220229	0					
ANR	8220579	ArrayIndexing	pfc -> s . m2 . m [ 1 ]		8220229	1					
ANR	8220580	MemberAccess	pfc -> s . m2 . m		8220229	0					
ANR	8220581	MemberAccess	pfc -> s . m2		8220229	0					
ANR	8220582	PtrMemberAccess	pfc -> s		8220229	0					
ANR	8220583	Identifier	pfc		8220229	0					
ANR	8220584	Identifier	s		8220229	1					
ANR	8220585	Identifier	m2		8220229	1					
ANR	8220586	Identifier	m		8220229	1					
ANR	8220587	PrimaryExpression	1		8220229	1					
ANR	8220588	ExpressionStatement	pfc -> s . m2 . m [ 3 ] = - pfc -> s . m2 . m [ 3 ]	142:8:4225:4257	8220229	1	True				
ANR	8220589	AssignmentExpression	pfc -> s . m2 . m [ 3 ] = - pfc -> s . m2 . m [ 3 ]		8220229	0		=			
ANR	8220590	ArrayIndexing	pfc -> s . m2 . m [ 3 ]		8220229	0					
ANR	8220591	MemberAccess	pfc -> s . m2 . m		8220229	0					
ANR	8220592	MemberAccess	pfc -> s . m2		8220229	0					
ANR	8220593	PtrMemberAccess	pfc -> s		8220229	0					
ANR	8220594	Identifier	pfc		8220229	0					
ANR	8220595	Identifier	s		8220229	1					
ANR	8220596	Identifier	m2		8220229	1					
ANR	8220597	Identifier	m		8220229	1					
ANR	8220598	PrimaryExpression	3		8220229	1					
ANR	8220599	UnaryOperationExpression	- pfc -> s . m2 . m [ 3 ]		8220229	1					
ANR	8220600	UnaryOperator	-		8220229	0					
ANR	8220601	ArrayIndexing	pfc -> s . m2 . m [ 3 ]		8220229	1					
ANR	8220602	MemberAccess	pfc -> s . m2 . m		8220229	0					
ANR	8220603	MemberAccess	pfc -> s . m2		8220229	0					
ANR	8220604	PtrMemberAccess	pfc -> s		8220229	0					
ANR	8220605	Identifier	pfc		8220229	0					
ANR	8220606	Identifier	s		8220229	1					
ANR	8220607	Identifier	m2		8220229	1					
ANR	8220608	Identifier	m		8220229	1					
ANR	8220609	PrimaryExpression	3		8220229	1					
ANR	8220610	ExpressionStatement	pfc -> ExtndFlags = EF_NOSYMSETMAP	146:4:4318:4350	8220229	13	True				
ANR	8220611	AssignmentExpression	pfc -> ExtndFlags = EF_NOSYMSETMAP		8220229	0		=			
ANR	8220612	PtrMemberAccess	pfc -> ExtndFlags		8220229	0					
ANR	8220613	Identifier	pfc		8220229	0					
ANR	8220614	Identifier	ExtndFlags		8220229	1					
ANR	8220615	Identifier	EF_NOSYMSETMAP		8220229	1					
ANR	8220616	IfStatement	if ( plfont -> is_xl_format )		8220229	14					
ANR	8220617	Condition	plfont -> is_xl_format	147:8:4360:4379	8220229	0	True				
ANR	8220618	PtrMemberAccess	plfont -> is_xl_format		8220229	0					
ANR	8220619	Identifier	plfont		8220229	0					
ANR	8220620	Identifier	is_xl_format		8220229	1					
ANR	8220621	CompoundStatement		55:30:1912:1912	8220229	1					
ANR	8220622	ExpressionStatement	pfc -> ExtndFlags = EF_XLFONT_TYPE	148:8:4392:4424	8220229	0	True				
ANR	8220623	AssignmentExpression	pfc -> ExtndFlags = EF_XLFONT_TYPE		8220229	0		=			
ANR	8220624	PtrMemberAccess	pfc -> ExtndFlags		8220229	0					
ANR	8220625	Identifier	pfc		8220229	0					
ANR	8220626	Identifier	ExtndFlags		8220229	1					
ANR	8220627	Identifier	EF_XLFONT_TYPE		8220229	1					
ANR	8220628	IfStatement	if ( ( pfont -> WMode & 0x1 ) != 0 )		8220229	1					
ANR	8220629	Condition	( pfont -> WMode & 0x1 ) != 0	149:12:4438:4462	8220229	0	True				
ANR	8220630	EqualityExpression	( pfont -> WMode & 0x1 ) != 0		8220229	0		!=			
ANR	8220631	BitAndExpression	pfont -> WMode & 0x1		8220229	0		&			
ANR	8220632	PtrMemberAccess	pfont -> WMode		8220229	0					
ANR	8220633	Identifier	pfont		8220229	0					
ANR	8220634	Identifier	WMode		8220229	1					
ANR	8220635	PrimaryExpression	0x1		8220229	1					
ANR	8220636	PrimaryExpression	0		8220229	1					
ANR	8220637	ExpressionStatement	pfc -> ExtndFlags |= EF_VERTSUBS_TYPE	150:12:4506:4541	8220229	1	True				
ANR	8220638	AssignmentExpression	pfc -> ExtndFlags |= EF_VERTSUBS_TYPE		8220229	0		|=			
ANR	8220639	PtrMemberAccess	pfc -> ExtndFlags		8220229	0					
ANR	8220640	Identifier	pfc		8220229	0					
ANR	8220641	Identifier	ExtndFlags		8220229	1					
ANR	8220642	Identifier	EF_VERTSUBS_TYPE		8220229	1					
ANR	8220643	ElseStatement	else		8220229	0					
ANR	8220644	IfStatement	if ( plfont -> scaling_technology == plfst_TrueType && plfont -> large_sizes )		8220229	0					
ANR	8220645	Condition	plfont -> scaling_technology == plfst_TrueType && plfont -> large_sizes	151:15:4558:4639	8220229	0	True				
ANR	8220646	AndExpression	plfont -> scaling_technology == plfst_TrueType && plfont -> large_sizes		8220229	0		&&			
ANR	8220647	EqualityExpression	plfont -> scaling_technology == plfst_TrueType		8220229	0		==			
ANR	8220648	PtrMemberAccess	plfont -> scaling_technology		8220229	0					
ANR	8220649	Identifier	plfont		8220229	0					
ANR	8220650	Identifier	scaling_technology		8220229	1					
ANR	8220651	Identifier	plfst_TrueType		8220229	1					
ANR	8220652	PtrMemberAccess	plfont -> large_sizes		8220229	1					
ANR	8220653	Identifier	plfont		8220229	0					
ANR	8220654	Identifier	large_sizes		8220229	1					
ANR	8220655	CompoundStatement		60:39:2172:2172	8220229	1					
ANR	8220656	ExpressionStatement	pfc -> ExtndFlags = EF_FORMAT16_TYPE | EF_GALLEYSEG_TYPE	153:8:4652:4706	8220229	0	True				
ANR	8220657	AssignmentExpression	pfc -> ExtndFlags = EF_FORMAT16_TYPE | EF_GALLEYSEG_TYPE		8220229	0		=			
ANR	8220658	PtrMemberAccess	pfc -> ExtndFlags		8220229	0					
ANR	8220659	Identifier	pfc		8220229	0					
ANR	8220660	Identifier	ExtndFlags		8220229	1					
ANR	8220661	InclusiveOrExpression	EF_FORMAT16_TYPE | EF_GALLEYSEG_TYPE		8220229	1		|			
ANR	8220662	Identifier	EF_FORMAT16_TYPE		8220229	0					
ANR	8220663	Identifier	EF_GALLEYSEG_TYPE		8220229	1					
ANR	8220664	IfStatement	if ( ( pfont -> WMode & 0x1 ) != 0 )		8220229	1					
ANR	8220665	Condition	( pfont -> WMode & 0x1 ) != 0	154:12:4720:4744	8220229	0	True				
ANR	8220666	EqualityExpression	( pfont -> WMode & 0x1 ) != 0		8220229	0		!=			
ANR	8220667	BitAndExpression	pfont -> WMode & 0x1		8220229	0		&			
ANR	8220668	PtrMemberAccess	pfont -> WMode		8220229	0					
ANR	8220669	Identifier	pfont		8220229	0					
ANR	8220670	Identifier	WMode		8220229	1					
ANR	8220671	PrimaryExpression	0x1		8220229	1					
ANR	8220672	PrimaryExpression	0		8220229	1					
ANR	8220673	ExpressionStatement	pfc -> ExtndFlags |= EF_VERTSUBS_TYPE	155:12:4788:4823	8220229	1	True				
ANR	8220674	AssignmentExpression	pfc -> ExtndFlags |= EF_VERTSUBS_TYPE		8220229	0		|=			
ANR	8220675	PtrMemberAccess	pfc -> ExtndFlags		8220229	0					
ANR	8220676	Identifier	pfc		8220229	0					
ANR	8220677	Identifier	ExtndFlags		8220229	1					
ANR	8220678	Identifier	EF_VERTSUBS_TYPE		8220229	1					
ANR	8220679	ExpressionStatement	pfc -> ExtndFlags |= EF_NOUSBOUNDBOX	157:4:4835:4869	8220229	15	True				
ANR	8220680	AssignmentExpression	pfc -> ExtndFlags |= EF_NOUSBOUNDBOX		8220229	0		|=			
ANR	8220681	PtrMemberAccess	pfc -> ExtndFlags		8220229	0					
ANR	8220682	Identifier	pfc		8220229	0					
ANR	8220683	Identifier	ExtndFlags		8220229	1					
ANR	8220684	Identifier	EF_NOUSBOUNDBOX		8220229	1					
ANR	8220685	IfStatement	if ( plfont -> bold_fraction && ! need_outline )		8220229	16					
ANR	8220686	Condition	plfont -> bold_fraction && ! need_outline	160:8:4945:4982	8220229	0	True				
ANR	8220687	AndExpression	plfont -> bold_fraction && ! need_outline		8220229	0		&&			
ANR	8220688	PtrMemberAccess	plfont -> bold_fraction		8220229	0					
ANR	8220689	Identifier	plfont		8220229	0					
ANR	8220690	Identifier	bold_fraction		8220229	1					
ANR	8220691	UnaryOperationExpression	! need_outline		8220229	1					
ANR	8220692	UnaryOperator	!		8220229	0					
ANR	8220693	Identifier	need_outline		8220229	1					
ANR	8220694	CompoundStatement		68:48:2515:2515	8220229	1					
ANR	8220695	ExpressionStatement	pfc -> pcl6bold = 32768 * plfont -> bold_fraction	161:8:4995:5040	8220229	0	True				
ANR	8220696	AssignmentExpression	pfc -> pcl6bold = 32768 * plfont -> bold_fraction		8220229	0		=			
ANR	8220697	PtrMemberAccess	pfc -> pcl6bold		8220229	0					
ANR	8220698	Identifier	pfc		8220229	0					
ANR	8220699	Identifier	pcl6bold		8220229	1					
ANR	8220700	MultiplicativeExpression	32768 * plfont -> bold_fraction		8220229	1		*			
ANR	8220701	PrimaryExpression	32768		8220229	0					
ANR	8220702	PtrMemberAccess	plfont -> bold_fraction		8220229	1					
ANR	8220703	Identifier	plfont		8220229	0					
ANR	8220704	Identifier	bold_fraction		8220229	1					
ANR	8220705	ElseStatement	else		8220229	0					
ANR	8220706	ExpressionStatement	pfc -> pcl6bold = 0	163:8:5061:5078	8220229	0	True				
ANR	8220707	AssignmentExpression	pfc -> pcl6bold = 0		8220229	0		=			
ANR	8220708	PtrMemberAccess	pfc -> pcl6bold		8220229	0					
ANR	8220709	Identifier	pfc		8220229	0					
ANR	8220710	Identifier	pcl6bold		8220229	1					
ANR	8220711	PrimaryExpression	0		8220229	1					
ANR	8220712	ExpressionStatement	pfc -> format = FC_PCL6_EMU | FC_INCHES_TYPE	165:4:5109:5151	8220229	17	True				
ANR	8220713	AssignmentExpression	pfc -> format = FC_PCL6_EMU | FC_INCHES_TYPE		8220229	0		=			
ANR	8220714	PtrMemberAccess	pfc -> format		8220229	0					
ANR	8220715	Identifier	pfc		8220229	0					
ANR	8220716	Identifier	format		8220229	1					
ANR	8220717	InclusiveOrExpression	FC_PCL6_EMU | FC_INCHES_TYPE		8220229	1		|			
ANR	8220718	Identifier	FC_PCL6_EMU		8220229	0					
ANR	8220719	Identifier	FC_INCHES_TYPE		8220229	1					
ANR	8220720	ExpressionStatement	pfc -> format |= ( need_outline ? FC_LINEAR_TYPE : FC_BITMAP_TYPE )	166:4:5157:5220	8220229	18	True				
ANR	8220721	AssignmentExpression	pfc -> format |= ( need_outline ? FC_LINEAR_TYPE : FC_BITMAP_TYPE )		8220229	0		|=			
ANR	8220722	PtrMemberAccess	pfc -> format		8220229	0					
ANR	8220723	Identifier	pfc		8220229	0					
ANR	8220724	Identifier	format		8220229	1					
ANR	8220725	ConditionalExpression	need_outline ? FC_LINEAR_TYPE : FC_BITMAP_TYPE		8220229	1					
ANR	8220726	Condition	need_outline		8220229	0					
ANR	8220727	Identifier	need_outline		8220229	0					
ANR	8220728	Identifier	FC_LINEAR_TYPE		8220229	1					
ANR	8220729	Identifier	FC_BITMAP_TYPE		8220229	2					
ANR	8220730	ReturnType	static void		8220229	1					
ANR	8220731	Identifier	pl_init_fc		8220229	2					
ANR	8220732	ParameterList	"const pl_font_t * plfont , gs_gstate * pgs , int need_outline , FONTCONTEXT * pfc , bool width_request"		8220229	3					
ANR	8220733	Parameter	const pl_font_t * plfont	90:11:2347:2370	8220229	0	True				
ANR	8220734	ParameterType	const pl_font_t *		8220229	0					
ANR	8220735	Identifier	plfont		8220229	1					
ANR	8220736	Parameter	gs_gstate * pgs	91:11:2384:2398	8220229	1	True				
ANR	8220737	ParameterType	gs_gstate *		8220229	0					
ANR	8220738	Identifier	pgs		8220229	1					
ANR	8220739	Parameter	int need_outline	92:11:2412:2427	8220229	2	True				
ANR	8220740	ParameterType	int		8220229	0					
ANR	8220741	Identifier	need_outline		8220229	1					
ANR	8220742	Parameter	FONTCONTEXT * pfc	92:29:2430:2446	8220229	3	True				
ANR	8220743	ParameterType	FONTCONTEXT *		8220229	0					
ANR	8220744	Identifier	pfc		8220229	1					
ANR	8220745	Parameter	bool width_request	92:48:2449:2466	8220229	4	True				
ANR	8220746	ParameterType	bool		8220229	0					
ANR	8220747	Identifier	width_request		8220229	1					
ANR	8220748	CFGEntryNode	ENTRY		8220229		True				
ANR	8220749	CFGExitNode	EXIT		8220229		True				
ANR	8220750	Symbol	* * pfc		8220229						
ANR	8220751	Symbol	plfont -> scaling_technology		8220229						
ANR	8220752	Symbol	FC_BITMAP_TYPE		8220229						
ANR	8220753	Symbol	gs_currentdevice		8220229						
ANR	8220754	Symbol	plfont		8220229						
ANR	8220755	Symbol	plfont -> large_sizes		8220229						
ANR	8220756	Symbol	xres		8220229						
ANR	8220757	Symbol	hx		8220229						
ANR	8220758	Symbol	FC_LINEAR_TYPE		8220229						
ANR	8220759	Symbol	hy		8220229						
ANR	8220760	Symbol	* gs_currentdevice		8220229						
ANR	8220761	Symbol	* * gs_currentdevice		8220229						
ANR	8220762	Symbol	pfont -> WMode		8220229						
ANR	8220763	Symbol	mat . xy		8220229						
ANR	8220764	Symbol	mat . xx		8220229						
ANR	8220765	Symbol	pfc -> s . m2 . yworld_res		8220229						
ANR	8220766	Symbol	gs_currentdevice ( pgs ) -> HWResolution		8220229						
ANR	8220767	Symbol	width_request		8220229						
ANR	8220768	Symbol	EF_XLFONT_TYPE		8220229						
ANR	8220769	Symbol	NULL		8220229						
ANR	8220770	Symbol	pfc -> fc_type		8220229						
ANR	8220771	Symbol	EF_VERTSUBS_TYPE		8220229						
ANR	8220772	Symbol	plfont -> is_xl_format		8220229						
ANR	8220773	Symbol	* pfc -> s . m2		8220229						
ANR	8220774	Symbol	pfc		8220229						
ANR	8220775	Symbol	* pfc -> s		8220229						
ANR	8220776	Symbol	pfc -> font_hdr		8220229						
ANR	8220777	Symbol	EF_NOUSBOUNDBOX		8220229						
ANR	8220778	Symbol	plfst_TrueType		8220229						
ANR	8220779	Symbol	pfc -> s . m2 . world_scale		8220229						
ANR	8220780	Symbol	yres		8220229						
ANR	8220781	Symbol	& mat		8220229						
ANR	8220782	Symbol	EF_GALLEYSEG_TYPE		8220229						
ANR	8220783	Symbol	pfc -> yspot		8220229						
ANR	8220784	Symbol	pfc -> ExtndFlags		8220229						
ANR	8220785	Symbol	pfc -> ssnum		8220229						
ANR	8220786	Symbol	F_ONE		8220229						
ANR	8220787	Symbol	pfc -> s . m2 . set_size		8220229						
ANR	8220788	Symbol	EF_NOSYMSETMAP		8220229						
ANR	8220789	Symbol	plfont -> pts_per_inch		8220229						
ANR	8220790	Symbol	pfc -> dl_ssnum		8220229						
ANR	8220791	Symbol	pfc -> s		8220229						
ANR	8220792	Symbol	pfc -> xspot		8220229						
ANR	8220793	Symbol	FC_MAT2_TYPE		8220229						
ANR	8220794	Symbol	pfc -> s . m2 . matrix_scale		8220229						
ANR	8220795	Symbol	* pfc -> s . m2 . m		8220229						
ANR	8220796	Symbol	hypot		8220229						
ANR	8220797	Symbol	FC_PCL6_EMU		8220229						
ANR	8220798	Symbol	* pfc		8220229						
ANR	8220799	Symbol	pfc -> pcl6bold		8220229						
ANR	8220800	Symbol	pfc -> s . m2 . m		8220229						
ANR	8220801	Symbol	FC_INCHES_TYPE		8220229						
ANR	8220802	Symbol	pgs		8220229						
ANR	8220803	Symbol	mat		8220229						
ANR	8220804	Symbol	* gs_currentdevice ( pgs ) -> HWResolution		8220229						
ANR	8220805	Symbol	pfc -> s . m2 . xworld_res		8220229						
ANR	8220806	Symbol	pfc -> format		8220229						
ANR	8220807	Symbol	pfont		8220229						
ANR	8220808	Symbol	pfc -> s . m2		8220229						
ANR	8220809	Symbol	pfc -> s . m2 . point_size		8220229						
ANR	8220810	Symbol	EF_FORMAT16_TYPE		8220229						
ANR	8220811	Symbol	* pfont		8220229						
ANR	8220812	Symbol	plfont -> pfont		8220229						
ANR	8220813	Symbol	plfont -> bold_fraction		8220229						
ANR	8220814	Symbol	mat . yy		8220229						
ANR	8220815	Symbol	mat . yx		8220229						
ANR	8220816	Symbol	* plfont		8220229						
ANR	8220817	Symbol	need_outline		8220229						
ANR	8220818	Symbol	pfc -> font_id		8220229						
ANR	8220819	Symbol	mscale		8220229						
ANR	8220820	Function	pl_set_ufst_font	172:0:5273:5861							
ANR	8220821	FunctionDef	"pl_set_ufst_font (const pl_font_t * plfont , FONTCONTEXT * pfc)"		8220820	0					
ANR	8220822	CompoundStatement		174:0:5346:5861	8220820	0					
ANR	8220823	Statement	uint	175:4:5352:5355	8220820	0	True				
ANR	8220824	Statement	status	175:9:5357:5362	8220820	1	True				
ANR	8220825	Statement	=	175:16:5364:5364	8220820	2	True				
ANR	8220826	Statement	CGIFfont	175:18:5366:5373	8220820	3	True				
ANR	8220827	Statement	(	175:26:5374:5374	8220820	4	True				
ANR	8220828	Statement	FSA	175:27:5375:5377	8220820	5	True				
ANR	8220829	Statement	pfc	175:31:5379:5381	8220820	6	True				
ANR	8220830	Statement	)	175:34:5382:5382	8220820	7	True				
ANR	8220831	ExpressionStatement		175:35:5383:5383	8220820	8	True				
ANR	8220832	IdentifierDeclStatement	FONT_METRICS fm ;	176:4:5389:5404	8220820	9	True				
ANR	8220833	IdentifierDecl	fm		8220820	0					
ANR	8220834	IdentifierDeclType	FONT_METRICS		8220820	0					
ANR	8220835	Identifier	fm		8220820	1					
ANR	8220836	IfStatement	if ( status != 0 )		8220820	10					
ANR	8220837	Condition	status != 0	178:8:5415:5425	8220820	0	True				
ANR	8220838	EqualityExpression	status != 0		8220820	0		!=			
ANR	8220839	Identifier	status		8220820	0					
ANR	8220840	PrimaryExpression	0		8220820	1					
ANR	8220841	ExpressionStatement	"dmprintf1 ( plfont -> pfont -> memory , ""CGIFfont error %d\\n"" , status )"	179:8:5436:5499	8220820	1	True				
ANR	8220842	CallExpression	"dmprintf1 ( plfont -> pfont -> memory , ""CGIFfont error %d\\n"" , status )"		8220820	0					
ANR	8220843	Callee	dmprintf1		8220820	0					
ANR	8220844	Identifier	dmprintf1		8220820	0					
ANR	8220845	ArgumentList	plfont -> pfont -> memory		8220820	1					
ANR	8220846	Argument	plfont -> pfont -> memory		8220820	0					
ANR	8220847	PtrMemberAccess	plfont -> pfont -> memory		8220820	0					
ANR	8220848	PtrMemberAccess	plfont -> pfont		8220820	0					
ANR	8220849	Identifier	plfont		8220820	0					
ANR	8220850	Identifier	pfont		8220820	1					
ANR	8220851	Identifier	memory		8220820	1					
ANR	8220852	Argument	"""CGIFfont error %d\\n"""		8220820	1					
ANR	8220853	PrimaryExpression	"""CGIFfont error %d\\n"""		8220820	0					
ANR	8220854	Argument	status		8220820	2					
ANR	8220855	Identifier	status		8220820	0					
ANR	8220856	ElseStatement	else		8220820	0					
ANR	8220857	CompoundStatement		7:9:163:163	8220820	0					
ANR	8220858	ExpressionStatement	status = CGIFfont_metrics ( & fm )	184:8:5627:5657	8220820	0	True				
ANR	8220859	AssignmentExpression	status = CGIFfont_metrics ( & fm )		8220820	0		=			
ANR	8220860	Identifier	status		8220820	0					
ANR	8220861	CallExpression	CGIFfont_metrics ( & fm )		8220820	1					
ANR	8220862	Callee	CGIFfont_metrics		8220820	0					
ANR	8220863	Identifier	CGIFfont_metrics		8220820	0					
ANR	8220864	ArgumentList	& fm		8220820	1					
ANR	8220865	Argument	& fm		8220820	0					
ANR	8220866	UnaryOperationExpression	& fm		8220820	0					
ANR	8220867	UnaryOperator	&		8220820	0					
ANR	8220868	Identifier	fm		8220820	1					
ANR	8220869	IfStatement	if ( status != 0 )		8220820	1					
ANR	8220870	Condition	status != 0	185:12:5671:5681	8220820	0	True				
ANR	8220871	EqualityExpression	status != 0		8220820	0		!=			
ANR	8220872	Identifier	status		8220820	0					
ANR	8220873	PrimaryExpression	0		8220820	1					
ANR	8220874	ExpressionStatement	"dprintf1 ( ""CGIFfont error %d\\n"" , status )"	186:12:5696:5735	8220820	1	True				
ANR	8220875	CallExpression	"dprintf1 ( ""CGIFfont error %d\\n"" , status )"		8220820	0					
ANR	8220876	Callee	dprintf1		8220820	0					
ANR	8220877	Identifier	dprintf1		8220820	0					
ANR	8220878	ArgumentList	"""CGIFfont error %d\\n"""		8220820	1					
ANR	8220879	Argument	"""CGIFfont error %d\\n"""		8220820	0					
ANR	8220880	PrimaryExpression	"""CGIFfont error %d\\n"""		8220820	0					
ANR	8220881	Argument	status		8220820	1					
ANR	8220882	Identifier	status		8220820	0					
ANR	8220883	ElseStatement	else		8220820	0					
ANR	8220884	ExpressionStatement	plfont_last = plfont	188:12:5762:5782	8220820	0	True				
ANR	8220885	AssignmentExpression	plfont_last = plfont		8220820	0		=			
ANR	8220886	Identifier	plfont_last		8220820	0					
ANR	8220887	Identifier	plfont		8220820	1					
ANR	8220888	ReturnStatement	return status ;	191:4:5846:5859	8220820	11	True				
ANR	8220889	Identifier	status		8220820	0					
ANR	8220890	ReturnType	static int		8220820	1					
ANR	8220891	Identifier	pl_set_ufst_font		8220820	2					
ANR	8220892	ParameterList	"const pl_font_t * plfont , FONTCONTEXT * pfc"		8220820	3					
ANR	8220893	Parameter	const pl_font_t * plfont	173:17:5301:5324	8220820	0	True				
ANR	8220894	ParameterType	const pl_font_t *		8220820	0					
ANR	8220895	Identifier	plfont		8220820	1					
ANR	8220896	Parameter	FONTCONTEXT * pfc	173:43:5327:5343	8220820	1	True				
ANR	8220897	ParameterType	FONTCONTEXT *		8220820	0					
ANR	8220898	Identifier	pfc		8220820	1					
ANR	8220899	CFGEntryNode	ENTRY		8220820		True				
ANR	8220900	CFGExitNode	EXIT		8220820		True				
ANR	8220901	Symbol	CGIFfont_metrics		8220820						
ANR	8220902	Symbol	& fm		8220820						
ANR	8220903	Symbol	* plfont -> pfont		8220820						
ANR	8220904	Symbol	plfont -> pfont		8220820						
ANR	8220905	Symbol	* * plfont		8220820						
ANR	8220906	Symbol	plfont -> pfont -> memory		8220820						
ANR	8220907	Symbol	fm		8220820						
ANR	8220908	Symbol	plfont_last		8220820						
ANR	8220909	Symbol	* plfont		8220820						
ANR	8220910	Symbol	plfont		8220820						
ANR	8220911	Symbol	pfc		8220820						
ANR	8220912	Symbol	status		8220820						
ANR	8220913	Function	image_outline_char	198:0:6014:8381							
ANR	8220914	FunctionDef	"image_outline_char (PIFOUTLINE pols , const gs_matrix_fixed * pmat , gx_path * ppath , gs_font * pfont , bool outline_sub_for_bitmap)"		8220913	0					
ANR	8220915	CompoundStatement		203:0:6211:8381	8220913	0					
ANR	8220916	IdentifierDeclStatement	"UW16 il , numLoops = pols -> ol . num_loops ;"	204:4:6217:6255	8220913	0	True				
ANR	8220917	IdentifierDecl	il		8220913	0					
ANR	8220918	IdentifierDeclType	UW16		8220913	0					
ANR	8220919	Identifier	il		8220913	1					
ANR	8220920	IdentifierDecl	numLoops = pols -> ol . num_loops		8220913	1					
ANR	8220921	IdentifierDeclType	UW16		8220913	0					
ANR	8220922	Identifier	numLoops		8220913	1					
ANR	8220923	AssignmentExpression	numLoops = pols -> ol . num_loops		8220913	2		=			
ANR	8220924	Identifier	numLoops		8220913	0					
ANR	8220925	MemberAccess	pols -> ol . num_loops		8220913	1					
ANR	8220926	PtrMemberAccess	pols -> ol		8220913	0					
ANR	8220927	Identifier	pols		8220913	0					
ANR	8220928	Identifier	ol		8220913	1					
ANR	8220929	Identifier	num_loops		8220913	1					
ANR	8220930	IdentifierDeclStatement	byte * pbase = ( byte * ) & pols -> ol . loop ;	205:4:6261:6299	8220913	1	True				
ANR	8220931	IdentifierDecl	* pbase = ( byte * ) & pols -> ol . loop		8220913	0					
ANR	8220932	IdentifierDeclType	byte *		8220913	0					
ANR	8220933	Identifier	pbase		8220913	1					
ANR	8220934	AssignmentExpression	* pbase = ( byte * ) & pols -> ol . loop		8220913	2		=			
ANR	8220935	Identifier	pbase		8220913	0					
ANR	8220936	CastExpression	( byte * ) & pols -> ol . loop		8220913	1					
ANR	8220937	CastTarget	byte *		8220913	0					
ANR	8220938	UnaryOperationExpression	& pols -> ol . loop		8220913	1					
ANR	8220939	UnaryOperator	&		8220913	0					
ANR	8220940	MemberAccess	pols -> ol . loop		8220913	1					
ANR	8220941	PtrMemberAccess	pols -> ol		8220913	0					
ANR	8220942	Identifier	pols		8220913	0					
ANR	8220943	Identifier	ol		8220913	1					
ANR	8220944	Identifier	loop		8220913	1					
ANR	8220945	IdentifierDeclStatement	int ishift = fixed_fraction_bits + pols -> VLCpower ;	206:4:6305:6354	8220913	2	True				
ANR	8220946	IdentifierDecl	ishift = fixed_fraction_bits + pols -> VLCpower		8220913	0					
ANR	8220947	IdentifierDeclType	int		8220913	0					
ANR	8220948	Identifier	ishift		8220913	1					
ANR	8220949	AssignmentExpression	ishift = fixed_fraction_bits + pols -> VLCpower		8220913	2		=			
ANR	8220950	Identifier	ishift		8220913	0					
ANR	8220951	AdditiveExpression	fixed_fraction_bits + pols -> VLCpower		8220913	1		+			
ANR	8220952	Identifier	fixed_fraction_bits		8220913	0					
ANR	8220953	PtrMemberAccess	pols -> VLCpower		8220913	1					
ANR	8220954	Identifier	pols		8220913	0					
ANR	8220955	Identifier	VLCpower		8220913	1					
ANR	8220956	IdentifierDeclStatement	"fixed tx = pmat -> tx_fixed , ty = pmat -> ty_fixed ;"	207:4:6360:6406	8220913	3	True				
ANR	8220957	IdentifierDecl	tx = pmat -> tx_fixed		8220913	0					
ANR	8220958	IdentifierDeclType	fixed		8220913	0					
ANR	8220959	Identifier	tx		8220913	1					
ANR	8220960	AssignmentExpression	tx = pmat -> tx_fixed		8220913	2		=			
ANR	8220961	Identifier	tx		8220913	0					
ANR	8220962	PtrMemberAccess	pmat -> tx_fixed		8220913	1					
ANR	8220963	Identifier	pmat		8220913	0					
ANR	8220964	Identifier	tx_fixed		8220913	1					
ANR	8220965	IdentifierDecl	ty = pmat -> ty_fixed		8220913	1					
ANR	8220966	IdentifierDeclType	fixed		8220913	0					
ANR	8220967	Identifier	ty		8220913	1					
ANR	8220968	AssignmentExpression	ty = pmat -> ty_fixed		8220913	2		=			
ANR	8220969	Identifier	ty		8220913	0					
ANR	8220970	PtrMemberAccess	pmat -> ty_fixed		8220913	1					
ANR	8220971	Identifier	pmat		8220913	0					
ANR	8220972	Identifier	ty_fixed		8220913	1					
ANR	8220973	ForStatement	for ( il = 0 ; il < numLoops ; il ++ )		8220913	4					
ANR	8220974	ForInit	il = 0 ;	209:9:6418:6424	8220913	0	True				
ANR	8220975	AssignmentExpression	il = 0		8220913	0		=			
ANR	8220976	Identifier	il		8220913	0					
ANR	8220977	PrimaryExpression	0		8220913	1					
ANR	8220978	Condition	il < numLoops	209:17:6426:6438	8220913	1	True				
ANR	8220979	RelationalExpression	il < numLoops		8220913	0		<			
ANR	8220980	Identifier	il		8220913	0					
ANR	8220981	Identifier	numLoops		8220913	1					
ANR	8220982	PostIncDecOperationExpression	il ++	209:32:6441:6444	8220913	2	True				
ANR	8220983	Identifier	il		8220913	0					
ANR	8220984	IncDec	++		8220913	1					
ANR	8220985	CompoundStatement		12:8:463:471	8220913	3					
ANR	8220986	IdentifierDeclStatement	OUTLINE_LOOP * ploop = & pols -> ol . loop [ il ] ;	210:8:6457:6497	8220913	0	True				
ANR	8220987	IdentifierDecl	* ploop = & pols -> ol . loop [ il ]		8220913	0					
ANR	8220988	IdentifierDeclType	OUTLINE_LOOP *		8220913	0					
ANR	8220989	Identifier	ploop		8220913	1					
ANR	8220990	AssignmentExpression	* ploop = & pols -> ol . loop [ il ]		8220913	2		=			
ANR	8220991	Identifier	ploop		8220913	0					
ANR	8220992	UnaryOperationExpression	& pols -> ol . loop [ il ]		8220913	1					
ANR	8220993	UnaryOperator	&		8220913	0					
ANR	8220994	ArrayIndexing	pols -> ol . loop [ il ]		8220913	1					
ANR	8220995	MemberAccess	pols -> ol . loop		8220913	0					
ANR	8220996	PtrMemberAccess	pols -> ol		8220913	0					
ANR	8220997	Identifier	pols		8220913	0					
ANR	8220998	Identifier	ol		8220913	1					
ANR	8220999	Identifier	loop		8220913	1					
ANR	8221000	Identifier	il		8220913	1					
ANR	8221001	IdentifierDeclStatement	uint numSegmts = ploop -> num_segmts ;	211:8:6507:6541	8220913	1	True				
ANR	8221002	IdentifierDecl	numSegmts = ploop -> num_segmts		8220913	0					
ANR	8221003	IdentifierDeclType	uint		8220913	0					
ANR	8221004	Identifier	numSegmts		8220913	1					
ANR	8221005	AssignmentExpression	numSegmts = ploop -> num_segmts		8220913	2		=			
ANR	8221006	Identifier	numSegmts		8220913	0					
ANR	8221007	PtrMemberAccess	ploop -> num_segmts		8220913	1					
ANR	8221008	Identifier	ploop		8220913	0					
ANR	8221009	Identifier	num_segmts		8220913	1					
ANR	8221010	IdentifierDeclStatement	byte * pseg = pbase + ploop -> segmt_offset ;	212:8:6551:6591	8220913	2	True				
ANR	8221011	IdentifierDecl	* pseg = pbase + ploop -> segmt_offset		8220913	0					
ANR	8221012	IdentifierDeclType	byte *		8220913	0					
ANR	8221013	Identifier	pseg		8220913	1					
ANR	8221014	AssignmentExpression	* pseg = pbase + ploop -> segmt_offset		8220913	2		=			
ANR	8221015	Identifier	pseg		8220913	0					
ANR	8221016	AdditiveExpression	pbase + ploop -> segmt_offset		8220913	1		+			
ANR	8221017	Identifier	pbase		8220913	0					
ANR	8221018	PtrMemberAccess	ploop -> segmt_offset		8220913	1					
ANR	8221019	Identifier	ploop		8220913	0					
ANR	8221020	Identifier	segmt_offset		8220913	1					
ANR	8221021	IdentifierDeclStatement	PINTRVECTOR pcoord = ( PINTRVECTOR ) ( pbase + ploop -> coord_offset ) ;	213:8:6601:6665	8220913	3	True				
ANR	8221022	IdentifierDecl	pcoord = ( PINTRVECTOR ) ( pbase + ploop -> coord_offset )		8220913	0					
ANR	8221023	IdentifierDeclType	PINTRVECTOR		8220913	0					
ANR	8221024	Identifier	pcoord		8220913	1					
ANR	8221025	AssignmentExpression	pcoord = ( PINTRVECTOR ) ( pbase + ploop -> coord_offset )		8220913	2		=			
ANR	8221026	Identifier	pcoord		8220913	0					
ANR	8221027	CastExpression	( PINTRVECTOR ) ( pbase + ploop -> coord_offset )		8220913	1					
ANR	8221028	CastTarget	PINTRVECTOR		8220913	0					
ANR	8221029	AdditiveExpression	pbase + ploop -> coord_offset		8220913	1		+			
ANR	8221030	Identifier	pbase		8220913	0					
ANR	8221031	PtrMemberAccess	ploop -> coord_offset		8220913	1					
ANR	8221032	Identifier	ploop		8220913	0					
ANR	8221033	Identifier	coord_offset		8220913	1					
ANR	8221034	IdentifierDeclStatement	int code ;	214:8:6675:6683	8220913	4	True				
ANR	8221035	IdentifierDecl	code		8220913	0					
ANR	8221036	IdentifierDeclType	int		8220913	0					
ANR	8221037	Identifier	code		8220913	1					
ANR	8221038	WhileStatement	while ( numSegmts -- > 0 )		8220913	5					
ANR	8221039	Condition	numSegmts -- > 0	216:15:6701:6715	8220913	0	True				
ANR	8221040	RelationalExpression	numSegmts -- > 0		8220913	0		>			
ANR	8221041	PostIncDecOperationExpression	numSegmts --		8220913	0					
ANR	8221042	Identifier	numSegmts		8220913	0					
ANR	8221043	IncDec	--		8220913	1					
ANR	8221044	PrimaryExpression	0		8220913	1					
ANR	8221045	CompoundStatement		17:12:581:601	8220913	1					
ANR	8221046	IdentifierDeclStatement	int segtype = * pseg ++ ;	217:12:6732:6753	8220913	0	True				
ANR	8221047	IdentifierDecl	segtype = * pseg ++		8220913	0					
ANR	8221048	IdentifierDeclType	int		8220913	0					
ANR	8221049	Identifier	segtype		8220913	1					
ANR	8221050	AssignmentExpression	segtype = * pseg ++		8220913	2		=			
ANR	8221051	Identifier	segtype		8220913	0					
ANR	8221052	UnaryOperationExpression	* pseg ++		8220913	1					
ANR	8221053	UnaryOperator	*		8220913	0					
ANR	8221054	PostIncDecOperationExpression	pseg ++		8220913	1					
ANR	8221055	Identifier	pseg		8220913	0					
ANR	8221056	IncDec	++		8220913	1					
ANR	8221057	IdentifierDeclStatement	"int ip , npts ;"	218:12:6767:6779	8220913	1	True				
ANR	8221058	IdentifierDecl	ip		8220913	0					
ANR	8221059	IdentifierDeclType	int		8220913	0					
ANR	8221060	Identifier	ip		8220913	1					
ANR	8221061	IdentifierDecl	npts		8220913	1					
ANR	8221062	IdentifierDeclType	int		8220913	0					
ANR	8221063	Identifier	npts		8220913	1					
ANR	8221064	IdentifierDeclStatement	gs_fixed_point pt [ 3 ] ;	219:12:6793:6813	8220913	2	True				
ANR	8221065	IdentifierDecl	pt [ 3 ]		8220913	0					
ANR	8221066	IdentifierDeclType	gs_fixed_point [ 3 ]		8220913	0					
ANR	8221067	Identifier	pt		8220913	1					
ANR	8221068	PrimaryExpression	3		8220913	2					
ANR	8221069	IfStatement	if ( segtype == 2 || segtype > 3 )		8220913	3					
ANR	8221070	Condition	segtype == 2 || segtype > 3	221:16:6832:6858	8220913	0	True				
ANR	8221071	OrExpression	segtype == 2 || segtype > 3		8220913	0		||			
ANR	8221072	EqualityExpression	segtype == 2		8220913	0		==			
ANR	8221073	Identifier	segtype		8220913	0					
ANR	8221074	PrimaryExpression	2		8220913	1					
ANR	8221075	RelationalExpression	segtype > 3		8220913	1		>			
ANR	8221076	Identifier	segtype		8220913	0					
ANR	8221077	PrimaryExpression	3		8220913	1					
ANR	8221078	ExpressionStatement	return_error ( gs_error_rangecheck )	222:16:6877:6910	8220913	1	True				
ANR	8221079	CallExpression	return_error ( gs_error_rangecheck )		8220913	0					
ANR	8221080	Callee	return_error		8220913	0					
ANR	8221081	Identifier	return_error		8220913	0					
ANR	8221082	ArgumentList	gs_error_rangecheck		8220913	1					
ANR	8221083	Argument	gs_error_rangecheck		8220913	0					
ANR	8221084	Identifier	gs_error_rangecheck		8220913	0					
ANR	8221085	ExpressionStatement	npts = ( segtype == 3 ? 3 : 1 )	224:12:6925:6954	8220913	4	True				
ANR	8221086	AssignmentExpression	npts = ( segtype == 3 ? 3 : 1 )		8220913	0		=			
ANR	8221087	Identifier	npts		8220913	0					
ANR	8221088	ConditionalExpression	segtype == 3 ? 3 : 1		8220913	1					
ANR	8221089	Condition	segtype == 3		8220913	0					
ANR	8221090	EqualityExpression	segtype == 3		8220913	0		==			
ANR	8221091	Identifier	segtype		8220913	0					
ANR	8221092	PrimaryExpression	3		8220913	1					
ANR	8221093	PrimaryExpression	3		8220913	1					
ANR	8221094	PrimaryExpression	1		8220913	2					
ANR	8221095	ForStatement	"for ( ip = 0 ; ip < npts ; ip ++ , ++ pcoord )"		8220913	5					
ANR	8221096	ForInit	ip = 0 ;	225:17:6973:6979	8220913	0	True				
ANR	8221097	AssignmentExpression	ip = 0		8220913	0		=			
ANR	8221098	Identifier	ip		8220913	0					
ANR	8221099	PrimaryExpression	0		8220913	1					
ANR	8221100	Condition	ip < npts	225:25:6981:6989	8220913	1	True				
ANR	8221101	RelationalExpression	ip < npts		8220913	0		<			
ANR	8221102	Identifier	ip		8220913	0					
ANR	8221103	Identifier	npts		8220913	1					
ANR	8221104	Expression	"ip ++ , ++ pcoord"	225:36:6992:7005	8220913	2	True				
ANR	8221105	PostIncDecOperationExpression	ip ++		8220913	0					
ANR	8221106	Identifier	ip		8220913	0					
ANR	8221107	IncDec	++		8220913	1					
ANR	8221108	UnaryExpression	++ pcoord		8220913	1					
ANR	8221109	IncDec	++		8220913	0					
ANR	8221110	Identifier	pcoord		8220913	1					
ANR	8221111	CompoundStatement		23:52:796:796	8220913	3					
ANR	8221112	ExpressionStatement	pt [ ip ] . x = ( pcoord -> x << ishift ) + tx	226:16:7026:7063	8220913	0	True				
ANR	8221113	AssignmentExpression	pt [ ip ] . x = ( pcoord -> x << ishift ) + tx		8220913	0		=			
ANR	8221114	MemberAccess	pt [ ip ] . x		8220913	0					
ANR	8221115	ArrayIndexing	pt [ ip ]		8220913	0					
ANR	8221116	Identifier	pt		8220913	0					
ANR	8221117	Identifier	ip		8220913	1					
ANR	8221118	Identifier	x		8220913	1					
ANR	8221119	AdditiveExpression	( pcoord -> x << ishift ) + tx		8220913	1		+			
ANR	8221120	ShiftExpression	pcoord -> x << ishift		8220913	0		<<			
ANR	8221121	PtrMemberAccess	pcoord -> x		8220913	0					
ANR	8221122	Identifier	pcoord		8220913	0					
ANR	8221123	Identifier	x		8220913	1					
ANR	8221124	Identifier	ishift		8220913	1					
ANR	8221125	Identifier	tx		8220913	1					
ANR	8221126	IfStatement	if ( outline_sub_for_bitmap )		8220913	1					
ANR	8221127	Condition	outline_sub_for_bitmap	232:20:7419:7440	8220913	0	True				
ANR	8221128	Identifier	outline_sub_for_bitmap		8220913	0					
ANR	8221129	ExpressionStatement	pt [ ip ] . y = ( - pcoord -> y << ishift ) + ty	233:20:7463:7501	8220913	1	True				
ANR	8221130	AssignmentExpression	pt [ ip ] . y = ( - pcoord -> y << ishift ) + ty		8220913	0		=			
ANR	8221131	MemberAccess	pt [ ip ] . y		8220913	0					
ANR	8221132	ArrayIndexing	pt [ ip ]		8220913	0					
ANR	8221133	Identifier	pt		8220913	0					
ANR	8221134	Identifier	ip		8220913	1					
ANR	8221135	Identifier	y		8220913	1					
ANR	8221136	AdditiveExpression	( - pcoord -> y << ishift ) + ty		8220913	1		+			
ANR	8221137	ShiftExpression	- pcoord -> y << ishift		8220913	0		<<			
ANR	8221138	UnaryOperationExpression	- pcoord -> y		8220913	0					
ANR	8221139	UnaryOperator	-		8220913	0					
ANR	8221140	PtrMemberAccess	pcoord -> y		8220913	1					
ANR	8221141	Identifier	pcoord		8220913	0					
ANR	8221142	Identifier	y		8220913	1					
ANR	8221143	Identifier	ishift		8220913	1					
ANR	8221144	Identifier	ty		8220913	1					
ANR	8221145	ElseStatement	else		8220913	0					
ANR	8221146	ExpressionStatement	pt [ ip ] . y = ( pcoord -> y << ishift ) + ty	235:20:7544:7581	8220913	0	True				
ANR	8221147	AssignmentExpression	pt [ ip ] . y = ( pcoord -> y << ishift ) + ty		8220913	0		=			
ANR	8221148	MemberAccess	pt [ ip ] . y		8220913	0					
ANR	8221149	ArrayIndexing	pt [ ip ]		8220913	0					
ANR	8221150	Identifier	pt		8220913	0					
ANR	8221151	Identifier	ip		8220913	1					
ANR	8221152	Identifier	y		8220913	1					
ANR	8221153	AdditiveExpression	( pcoord -> y << ishift ) + ty		8220913	1		+			
ANR	8221154	ShiftExpression	pcoord -> y << ishift		8220913	0		<<			
ANR	8221155	PtrMemberAccess	pcoord -> y		8220913	0					
ANR	8221156	Identifier	pcoord		8220913	0					
ANR	8221157	Identifier	y		8220913	1					
ANR	8221158	Identifier	ishift		8220913	1					
ANR	8221159	Identifier	ty		8220913	1					
ANR	8221160	SwitchStatement	switch ( segtype )		8220913	6					
ANR	8221161	Condition	segtype	238:20:7618:7624	8220913	0	True				
ANR	8221162	Identifier	segtype		8220913	0					
ANR	8221163	CompoundStatement		36:29:1415:1415	8220913	1					
ANR	8221164	Label	case 0 :	240:16:7646:7652	8220913	0	True				
ANR	8221165	ExpressionStatement	"code = gx_path_add_point ( ppath , pt [ 0 ] . x , pt [ 0 ] . y )"	241:20:7694:7743	8220913	1	True				
ANR	8221166	AssignmentExpression	"code = gx_path_add_point ( ppath , pt [ 0 ] . x , pt [ 0 ] . y )"		8220913	0		=			
ANR	8221167	Identifier	code		8220913	0					
ANR	8221168	CallExpression	"gx_path_add_point ( ppath , pt [ 0 ] . x , pt [ 0 ] . y )"		8220913	1					
ANR	8221169	Callee	gx_path_add_point		8220913	0					
ANR	8221170	Identifier	gx_path_add_point		8220913	0					
ANR	8221171	ArgumentList	ppath		8220913	1					
ANR	8221172	Argument	ppath		8220913	0					
ANR	8221173	Identifier	ppath		8220913	0					
ANR	8221174	Argument	pt [ 0 ] . x		8220913	1					
ANR	8221175	MemberAccess	pt [ 0 ] . x		8220913	0					
ANR	8221176	ArrayIndexing	pt [ 0 ]		8220913	0					
ANR	8221177	Identifier	pt		8220913	0					
ANR	8221178	PrimaryExpression	0		8220913	1					
ANR	8221179	Identifier	x		8220913	1					
ANR	8221180	Argument	pt [ 0 ] . y		8220913	2					
ANR	8221181	MemberAccess	pt [ 0 ] . y		8220913	0					
ANR	8221182	ArrayIndexing	pt [ 0 ]		8220913	0					
ANR	8221183	Identifier	pt		8220913	0					
ANR	8221184	PrimaryExpression	0		8220913	1					
ANR	8221185	Identifier	y		8220913	1					
ANR	8221186	BreakStatement	break ;	242:20:7765:7770	8220913	2	True				
ANR	8221187	Label	case 1 :	244:16:7789:7795	8220913	3	True				
ANR	8221188	ExpressionStatement	"code = gx_path_add_line ( ppath , pt [ 0 ] . x , pt [ 0 ] . y )"	245:20:7837:7885	8220913	4	True				
ANR	8221189	AssignmentExpression	"code = gx_path_add_line ( ppath , pt [ 0 ] . x , pt [ 0 ] . y )"		8220913	0		=			
ANR	8221190	Identifier	code		8220913	0					
ANR	8221191	CallExpression	"gx_path_add_line ( ppath , pt [ 0 ] . x , pt [ 0 ] . y )"		8220913	1					
ANR	8221192	Callee	gx_path_add_line		8220913	0					
ANR	8221193	Identifier	gx_path_add_line		8220913	0					
ANR	8221194	ArgumentList	ppath		8220913	1					
ANR	8221195	Argument	ppath		8220913	0					
ANR	8221196	Identifier	ppath		8220913	0					
ANR	8221197	Argument	pt [ 0 ] . x		8220913	1					
ANR	8221198	MemberAccess	pt [ 0 ] . x		8220913	0					
ANR	8221199	ArrayIndexing	pt [ 0 ]		8220913	0					
ANR	8221200	Identifier	pt		8220913	0					
ANR	8221201	PrimaryExpression	0		8220913	1					
ANR	8221202	Identifier	x		8220913	1					
ANR	8221203	Argument	pt [ 0 ] . y		8220913	2					
ANR	8221204	MemberAccess	pt [ 0 ] . y		8220913	0					
ANR	8221205	ArrayIndexing	pt [ 0 ]		8220913	0					
ANR	8221206	Identifier	pt		8220913	0					
ANR	8221207	PrimaryExpression	0		8220913	1					
ANR	8221208	Identifier	y		8220913	1					
ANR	8221209	BreakStatement	break ;	246:20:7907:7912	8220913	5	True				
ANR	8221210	Label	case 3 :	248:16:7931:7937	8220913	6	True				
ANR	8221211	ExpressionStatement	"code = gx_path_add_curve ( ppath , pt [ 0 ] . x , pt [ 0 ] . y , pt [ 1 ] . x , pt [ 1 ] . y , pt [ 2 ] . x , pt [ 2 ] . y )"	249:20:7980:8200	8220913	7	True				
ANR	8221212	AssignmentExpression	"code = gx_path_add_curve ( ppath , pt [ 0 ] . x , pt [ 0 ] . y , pt [ 1 ] . x , pt [ 1 ] . y , pt [ 2 ] . x , pt [ 2 ] . y )"		8220913	0		=			
ANR	8221213	Identifier	code		8220913	0					
ANR	8221214	CallExpression	"gx_path_add_curve ( ppath , pt [ 0 ] . x , pt [ 0 ] . y , pt [ 1 ] . x , pt [ 1 ] . y , pt [ 2 ] . x , pt [ 2 ] . y )"		8220913	1					
ANR	8221215	Callee	gx_path_add_curve		8220913	0					
ANR	8221216	Identifier	gx_path_add_curve		8220913	0					
ANR	8221217	ArgumentList	ppath		8220913	1					
ANR	8221218	Argument	ppath		8220913	0					
ANR	8221219	Identifier	ppath		8220913	0					
ANR	8221220	Argument	pt [ 0 ] . x		8220913	1					
ANR	8221221	MemberAccess	pt [ 0 ] . x		8220913	0					
ANR	8221222	ArrayIndexing	pt [ 0 ]		8220913	0					
ANR	8221223	Identifier	pt		8220913	0					
ANR	8221224	PrimaryExpression	0		8220913	1					
ANR	8221225	Identifier	x		8220913	1					
ANR	8221226	Argument	pt [ 0 ] . y		8220913	2					
ANR	8221227	MemberAccess	pt [ 0 ] . y		8220913	0					
ANR	8221228	ArrayIndexing	pt [ 0 ]		8220913	0					
ANR	8221229	Identifier	pt		8220913	0					
ANR	8221230	PrimaryExpression	0		8220913	1					
ANR	8221231	Identifier	y		8220913	1					
ANR	8221232	Argument	pt [ 1 ] . x		8220913	3					
ANR	8221233	MemberAccess	pt [ 1 ] . x		8220913	0					
ANR	8221234	ArrayIndexing	pt [ 1 ]		8220913	0					
ANR	8221235	Identifier	pt		8220913	0					
ANR	8221236	PrimaryExpression	1		8220913	1					
ANR	8221237	Identifier	x		8220913	1					
ANR	8221238	Argument	pt [ 1 ] . y		8220913	4					
ANR	8221239	MemberAccess	pt [ 1 ] . y		8220913	0					
ANR	8221240	ArrayIndexing	pt [ 1 ]		8220913	0					
ANR	8221241	Identifier	pt		8220913	0					
ANR	8221242	PrimaryExpression	1		8220913	1					
ANR	8221243	Identifier	y		8220913	1					
ANR	8221244	Argument	pt [ 2 ] . x		8220913	5					
ANR	8221245	MemberAccess	pt [ 2 ] . x		8220913	0					
ANR	8221246	ArrayIndexing	pt [ 2 ]		8220913	0					
ANR	8221247	Identifier	pt		8220913	0					
ANR	8221248	PrimaryExpression	2		8220913	1					
ANR	8221249	Identifier	x		8220913	1					
ANR	8221250	Argument	pt [ 2 ] . y		8220913	6					
ANR	8221251	MemberAccess	pt [ 2 ] . y		8220913	0					
ANR	8221252	ArrayIndexing	pt [ 2 ]		8220913	0					
ANR	8221253	Identifier	pt		8220913	0					
ANR	8221254	PrimaryExpression	2		8220913	1					
ANR	8221255	Identifier	y		8220913	1					
ANR	8221256	IfStatement	if ( code < 0 )		8220913	7					
ANR	8221257	Condition	code < 0	254:16:8232:8239	8220913	0	True				
ANR	8221258	RelationalExpression	code < 0		8220913	0		<			
ANR	8221259	Identifier	code		8220913	0					
ANR	8221260	PrimaryExpression	0		8220913	1					
ANR	8221261	ReturnStatement	return code ;	255:16:8258:8269	8220913	1	True				
ANR	8221262	Identifier	code		8220913	0					
ANR	8221263	IfStatement	if ( ( code = gx_path_close_subpath ( ppath ) ) < 0 )		8220913	6					
ANR	8221264	Condition	( code = gx_path_close_subpath ( ppath ) ) < 0	257:12:8293:8333	8220913	0	True				
ANR	8221265	RelationalExpression	( code = gx_path_close_subpath ( ppath ) ) < 0		8220913	0		<			
ANR	8221266	AssignmentExpression	code = gx_path_close_subpath ( ppath )		8220913	0		=			
ANR	8221267	Identifier	code		8220913	0					
ANR	8221268	CallExpression	gx_path_close_subpath ( ppath )		8220913	1					
ANR	8221269	Callee	gx_path_close_subpath		8220913	0					
ANR	8221270	Identifier	gx_path_close_subpath		8220913	0					
ANR	8221271	ArgumentList	ppath		8220913	1					
ANR	8221272	Argument	ppath		8220913	0					
ANR	8221273	Identifier	ppath		8220913	0					
ANR	8221274	PrimaryExpression	0		8220913	1					
ANR	8221275	ReturnStatement	return code ;	258:12:8348:8359	8220913	1	True				
ANR	8221276	Identifier	code		8220913	0					
ANR	8221277	ReturnStatement	return 0 ;	260:4:8371:8379	8220913	5	True				
ANR	8221278	PrimaryExpression	0		8220913	0					
ANR	8221279	ReturnType	static int		8220913	1					
ANR	8221280	Identifier	image_outline_char		8220913	2					
ANR	8221281	ParameterList	"PIFOUTLINE pols , const gs_matrix_fixed * pmat , gx_path * ppath , gs_font * pfont , bool outline_sub_for_bitmap"		8220913	3					
ANR	8221282	Parameter	PIFOUTLINE pols	199:19:6044:6058	8220913	0	True				
ANR	8221283	ParameterType	PIFOUTLINE		8220913	0					
ANR	8221284	Identifier	pols		8220913	1					
ANR	8221285	Parameter	const gs_matrix_fixed * pmat	200:19:6080:6107	8220913	1	True				
ANR	8221286	ParameterType	const gs_matrix_fixed *		8220913	0					
ANR	8221287	Identifier	pmat		8220913	1					
ANR	8221288	Parameter	gx_path * ppath	201:19:6129:6143	8220913	2	True				
ANR	8221289	ParameterType	gx_path *		8220913	0					
ANR	8221290	Identifier	ppath		8220913	1					
ANR	8221291	Parameter	gs_font * pfont	202:19:6165:6179	8220913	3	True				
ANR	8221292	ParameterType	gs_font *		8220913	0					
ANR	8221293	Identifier	pfont		8220913	1					
ANR	8221294	Parameter	bool outline_sub_for_bitmap	202:36:6182:6208	8220913	4	True				
ANR	8221295	ParameterType	bool		8220913	0					
ANR	8221296	Identifier	outline_sub_for_bitmap		8220913	1					
ANR	8221297	CFGEntryNode	ENTRY		8220913		True				
ANR	8221298	CFGExitNode	EXIT		8220913		True				
ANR	8221299	Symbol	tx		8220913						
ANR	8221300	Symbol	pt		8220913						
ANR	8221301	Symbol	gs_error_rangecheck		8220913						
ANR	8221302	Symbol	ty		8220913						
ANR	8221303	Symbol	* pmat		8220913						
ANR	8221304	Symbol	pt [ 0 ] . x		8220913						
ANR	8221305	Symbol	pt [ 0 ] . y		8220913						
ANR	8221306	Symbol	ploop -> segmt_offset		8220913						
ANR	8221307	Symbol	ishift		8220913						
ANR	8221308	Symbol	fixed_fraction_bits		8220913						
ANR	8221309	Symbol	* pseg ++		8220913						
ANR	8221310	Symbol	pols -> ol . num_loops		8220913						
ANR	8221311	Symbol	pbase		8220913						
ANR	8221312	Symbol	pmat -> tx_fixed		8220913						
ANR	8221313	Symbol	il		8220913						
ANR	8221314	Symbol	* ploop		8220913						
ANR	8221315	Symbol	pt [ ip ] . y		8220913						
ANR	8221316	Symbol	pt [ ip ] . x		8220913						
ANR	8221317	Symbol	segtype		8220913						
ANR	8221318	Symbol	ip		8220913						
ANR	8221319	Symbol	ploop -> num_segmts		8220913						
ANR	8221320	Symbol	* pt		8220913						
ANR	8221321	Symbol	gx_path_add_point		8220913						
ANR	8221322	Symbol	pols -> ol . loop		8220913						
ANR	8221323	Symbol	pmat -> ty_fixed		8220913						
ANR	8221324	Symbol	numLoops		8220913						
ANR	8221325	Symbol	pt [ 2 ] . x		8220913						
ANR	8221326	Symbol	pt [ 2 ] . y		8220913						
ANR	8221327	Symbol	& pols -> ol . loop		8220913						
ANR	8221328	Symbol	pols -> ol		8220913						
ANR	8221329	Symbol	pcoord -> x		8220913						
ANR	8221330	Symbol	pcoord		8220913						
ANR	8221331	Symbol	code		8220913						
ANR	8221332	Symbol	pcoord -> y		8220913						
ANR	8221333	Symbol	pmat		8220913						
ANR	8221334	Symbol	* pcoord		8220913						
ANR	8221335	Symbol	outline_sub_for_bitmap		8220913						
ANR	8221336	Symbol	ploop		8220913						
ANR	8221337	Symbol	ppath		8220913						
ANR	8221338	Symbol	* ip		8220913						
ANR	8221339	Symbol	gx_path_close_subpath		8220913						
ANR	8221340	Symbol	pseg		8220913						
ANR	8221341	Symbol	gx_path_add_curve		8220913						
ANR	8221342	Symbol	& pols -> ol		8220913						
ANR	8221343	Symbol	* pols		8220913						
ANR	8221344	Symbol	pols -> VLCpower		8220913						
ANR	8221345	Symbol	pfont		8220913						
ANR	8221346	Symbol	numSegmts		8220913						
ANR	8221347	Symbol	pt [ 1 ] . x		8220913						
ANR	8221348	Symbol	pt [ 1 ] . y		8220913						
ANR	8221349	Symbol	pols		8220913						
ANR	8221350	Symbol	npts		8220913						
ANR	8221351	Symbol	ploop -> coord_offset		8220913						
ANR	8221352	Symbol	gx_path_add_line		8220913						
ANR	8221353	Function	pl_ufst_char_width	267:0:8497:9298							
ANR	8221354	FunctionDef	"pl_ufst_char_width (uint char_code , const void * pgs , gs_point * pwidth , FONTCONTEXT * pfc)"		8221353	0					
ANR	8221355	CompoundStatement		270:0:8617:9298	8221353	0					
ANR	8221356	IdentifierDeclStatement	UW16 chIdloc = char_code ;	272:4:8624:8648	8221353	0	True				
ANR	8221357	IdentifierDecl	chIdloc = char_code		8221353	0					
ANR	8221358	IdentifierDeclType	UW16		8221353	0					
ANR	8221359	Identifier	chIdloc		8221353	1					
ANR	8221360	AssignmentExpression	chIdloc = char_code		8221353	2		=			
ANR	8221361	Identifier	char_code		8221353	0					
ANR	8221362	Identifier	char_code		8221353	1					
ANR	8221363	IdentifierDeclStatement	UW16 fontWidth [ 2 ] ;	273:4:8654:8671	8221353	1	True				
ANR	8221364	IdentifierDecl	fontWidth [ 2 ]		8221353	0					
ANR	8221365	IdentifierDeclType	UW16 [ 2 ]		8221353	0					
ANR	8221366	Identifier	fontWidth		8221353	1					
ANR	8221367	PrimaryExpression	2		8221353	2					
ANR	8221368	IdentifierDeclStatement	int status ;	274:4:8677:8687	8221353	2	True				
ANR	8221369	IdentifierDecl	status		8221353	0					
ANR	8221370	IdentifierDeclType	int		8221353	0					
ANR	8221371	Identifier	status		8221353	1					
ANR	8221372	IdentifierDeclStatement	WIDTH_LIST_INPUT_ENTRY fcode ;	275:4:8693:8721	8221353	3	True				
ANR	8221373	IdentifierDecl	fcode		8221353	0					
ANR	8221374	IdentifierDeclType	WIDTH_LIST_INPUT_ENTRY		8221353	0					
ANR	8221375	Identifier	fcode		8221353	1					
ANR	8221376	IfStatement	if ( pwidth != NULL )		8221353	4					
ANR	8221377	Condition	pwidth != NULL	277:8:8732:8745	8221353	0	True				
ANR	8221378	EqualityExpression	pwidth != NULL		8221353	0		!=			
ANR	8221379	Identifier	pwidth		8221353	0					
ANR	8221380	Identifier	NULL		8221353	1					
ANR	8221381	ExpressionStatement	pwidth -> x = pwidth -> y = 0	278:8:8756:8781	8221353	1	True				
ANR	8221382	AssignmentExpression	pwidth -> x = pwidth -> y = 0		8221353	0		=			
ANR	8221383	PtrMemberAccess	pwidth -> x		8221353	0					
ANR	8221384	Identifier	pwidth		8221353	0					
ANR	8221385	Identifier	x		8221353	1					
ANR	8221386	AssignmentExpression	pwidth -> y = 0		8221353	1		=			
ANR	8221387	PtrMemberAccess	pwidth -> y		8221353	0					
ANR	8221388	Identifier	pwidth		8221353	0					
ANR	8221389	Identifier	y		8221353	1					
ANR	8221390	PrimaryExpression	0		8221353	1					
ANR	8221391	Statement	CGIFchIdptr	280:4:8788:8798	8221353	5	True				
ANR	8221392	Statement	(	280:15:8799:8799	8221353	6	True				
ANR	8221393	Statement	FSA	280:16:8800:8802	8221353	7	True				
ANR	8221394	Statement	(	280:19:8803:8803	8221353	8	True				
ANR	8221395	Statement	VOID	280:20:8804:8807	8221353	9	True				
ANR	8221396	Statement	*	280:25:8809:8809	8221353	10	True				
ANR	8221397	Statement	)	280:26:8810:8810	8221353	11	True				
ANR	8221398	Statement	&	280:28:8812:8812	8221353	12	True				
ANR	8221399	Statement	chIdloc	280:30:8814:8820	8221353	13	True				
ANR	8221400	Statement	","	280:37:8821:8821	8221353	14	True				
ANR	8221401	Statement	NULL	280:39:8823:8826	8221353	15	True				
ANR	8221402	Statement	)	280:43:8827:8827	8221353	16	True				
ANR	8221403	ExpressionStatement		280:44:8828:8828	8221353	17	True				
ANR	8221404	ExpressionStatement	fcode . CharType . TT_unicode = char_code	281:4:8834:8871	8221353	18	True				
ANR	8221405	AssignmentExpression	fcode . CharType . TT_unicode = char_code		8221353	0		=			
ANR	8221406	MemberAccess	fcode . CharType . TT_unicode		8221353	0					
ANR	8221407	MemberAccess	fcode . CharType		8221353	0					
ANR	8221408	Identifier	fcode		8221353	0					
ANR	8221409	Identifier	CharType		8221353	1					
ANR	8221410	Identifier	TT_unicode		8221353	1					
ANR	8221411	Identifier	char_code		8221353	1					
ANR	8221412	IfStatement	"if ( ( status = CGIFwidth2 ( FSA & fcode , 1 , 4 , fontWidth ) ) != 0 )"		8221353	19					
ANR	8221413	Condition	"( status = CGIFwidth2 ( FSA & fcode , 1 , 4 , fontWidth ) ) != 0"	282:8:8881:8936	8221353	0	True				
ANR	8221414	EqualityExpression	"( status = CGIFwidth2 ( FSA & fcode , 1 , 4 , fontWidth ) ) != 0"		8221353	0		!=			
ANR	8221415	AssignmentExpression	"status = CGIFwidth2 ( FSA & fcode , 1 , 4 , fontWidth )"		8221353	0		=			
ANR	8221416	Identifier	status		8221353	0					
ANR	8221417	CallExpression	"CGIFwidth2 ( FSA & fcode , 1 , 4 , fontWidth )"		8221353	1					
ANR	8221418	Callee	CGIFwidth2		8221353	0					
ANR	8221419	Identifier	CGIFwidth2		8221353	0					
ANR	8221420	ArgumentList	FSA & fcode		8221353	1					
ANR	8221421	Argument	FSA & fcode		8221353	0					
ANR	8221422	BitAndExpression	FSA & fcode		8221353	0		&			
ANR	8221423	Identifier	FSA		8221353	0					
ANR	8221424	Identifier	fcode		8221353	1					
ANR	8221425	Argument	1		8221353	1					
ANR	8221426	PrimaryExpression	1		8221353	0					
ANR	8221427	Argument	4		8221353	2					
ANR	8221428	PrimaryExpression	4		8221353	0					
ANR	8221429	Argument	fontWidth		8221353	3					
ANR	8221430	Identifier	fontWidth		8221353	0					
ANR	8221431	PrimaryExpression	0		8221353	1					
ANR	8221432	CompoundStatement		13:66:321:321	8221353	1					
ANR	8221433	ReturnStatement	return status ;	283:8:8949:8962	8221353	0	True				
ANR	8221434	Identifier	status		8221353	0					
ANR	8221435	IfStatement	if ( fontWidth [ 0 ] == ERR_char_unavailable || fontWidth [ 1 ] == 0 )		8221353	20					
ANR	8221436	Condition	fontWidth [ 0 ] == ERR_char_unavailable || fontWidth [ 1 ] == 0	285:8:8978:9034	8221353	0	True				
ANR	8221437	OrExpression	fontWidth [ 0 ] == ERR_char_unavailable || fontWidth [ 1 ] == 0		8221353	0		||			
ANR	8221438	EqualityExpression	fontWidth [ 0 ] == ERR_char_unavailable		8221353	0		==			
ANR	8221439	ArrayIndexing	fontWidth [ 0 ]		8221353	0					
ANR	8221440	Identifier	fontWidth		8221353	0					
ANR	8221441	PrimaryExpression	0		8221353	1					
ANR	8221442	Identifier	ERR_char_unavailable		8221353	1					
ANR	8221443	EqualityExpression	fontWidth [ 1 ] == 0		8221353	1		==			
ANR	8221444	ArrayIndexing	fontWidth [ 1 ]		8221353	0					
ANR	8221445	Identifier	fontWidth		8221353	0					
ANR	8221446	PrimaryExpression	1		8221353	1					
ANR	8221447	PrimaryExpression	0		8221353	1					
ANR	8221448	ReturnStatement	return 1 ;	286:8:9045:9053	8221353	1	True				
ANR	8221449	PrimaryExpression	1		8221353	0					
ANR	8221450	ElseStatement	else		8221353	0					
ANR	8221451	IfStatement	if ( pwidth != NULL )		8221353	0					
ANR	8221452	Condition	pwidth != NULL	287:13:9068:9081	8221353	0	True				
ANR	8221453	EqualityExpression	pwidth != NULL		8221353	0		!=			
ANR	8221454	Identifier	pwidth		8221353	0					
ANR	8221455	Identifier	NULL		8221353	1					
ANR	8221456	CompoundStatement		20:8:546:612	8221353	1					
ANR	8221457	IdentifierDeclStatement	double fontw = ( double ) fontWidth [ 0 ] / ( double ) fontWidth [ 1 ] ;	288:8:9094:9154	8221353	0	True				
ANR	8221458	IdentifierDecl	fontw = ( double ) fontWidth [ 0 ] / ( double ) fontWidth [ 1 ]		8221353	0					
ANR	8221459	IdentifierDeclType	double		8221353	0					
ANR	8221460	Identifier	fontw		8221353	1					
ANR	8221461	AssignmentExpression	fontw = ( double ) fontWidth [ 0 ] / ( double ) fontWidth [ 1 ]		8221353	2		=			
ANR	8221462	Identifier	fontw		8221353	0					
ANR	8221463	MultiplicativeExpression	( double ) fontWidth [ 0 ] / ( double ) fontWidth [ 1 ]		8221353	1		/			
ANR	8221464	CastExpression	( double ) fontWidth [ 0 ]		8221353	0					
ANR	8221465	CastTarget	double		8221353	0					
ANR	8221466	ArrayIndexing	fontWidth [ 0 ]		8221353	1					
ANR	8221467	Identifier	fontWidth		8221353	0					
ANR	8221468	PrimaryExpression	0		8221353	1					
ANR	8221469	CastExpression	( double ) fontWidth [ 1 ]		8221353	1					
ANR	8221470	CastTarget	double		8221353	0					
ANR	8221471	ArrayIndexing	fontWidth [ 1 ]		8221353	1					
ANR	8221472	Identifier	fontWidth		8221353	0					
ANR	8221473	PrimaryExpression	1		8221353	1					
ANR	8221474	IdentifierDeclStatement	"int code = gs_distance_transform ( fontw , 0.0 , & pl_identmtx , pwidth ) ;"	289:8:9164:9230	8221353	1	True				
ANR	8221475	IdentifierDecl	"code = gs_distance_transform ( fontw , 0.0 , & pl_identmtx , pwidth )"		8221353	0					
ANR	8221476	IdentifierDeclType	int		8221353	0					
ANR	8221477	Identifier	code		8221353	1					
ANR	8221478	AssignmentExpression	"code = gs_distance_transform ( fontw , 0.0 , & pl_identmtx , pwidth )"		8221353	2		=			
ANR	8221479	Identifier	code		8221353	0					
ANR	8221480	CallExpression	"gs_distance_transform ( fontw , 0.0 , & pl_identmtx , pwidth )"		8221353	1					
ANR	8221481	Callee	gs_distance_transform		8221353	0					
ANR	8221482	Identifier	gs_distance_transform		8221353	0					
ANR	8221483	ArgumentList	fontw		8221353	1					
ANR	8221484	Argument	fontw		8221353	0					
ANR	8221485	Identifier	fontw		8221353	0					
ANR	8221486	Argument	0.0		8221353	1					
ANR	8221487	PrimaryExpression	0.0		8221353	0					
ANR	8221488	Argument	& pl_identmtx		8221353	2					
ANR	8221489	UnaryOperationExpression	& pl_identmtx		8221353	0					
ANR	8221490	UnaryOperator	&		8221353	0					
ANR	8221491	Identifier	pl_identmtx		8221353	1					
ANR	8221492	Argument	pwidth		8221353	3					
ANR	8221493	Identifier	pwidth		8221353	0					
ANR	8221494	ReturnStatement	return code < 0 ? code : 0 ;	291:8:9241:9267	8221353	2	True				
ANR	8221495	ConditionalExpression	code < 0 ? code : 0		8221353	0					
ANR	8221496	Condition	code < 0		8221353	0					
ANR	8221497	RelationalExpression	code < 0		8221353	0		<			
ANR	8221498	Identifier	code		8221353	0					
ANR	8221499	PrimaryExpression	0		8221353	1					
ANR	8221500	Identifier	code		8221353	1					
ANR	8221501	PrimaryExpression	0		8221353	2					
ANR	8221502	ElseStatement	else		8221353	0					
ANR	8221503	ReturnStatement	return 0 ;	293:8:9288:9296	8221353	0	True				
ANR	8221504	PrimaryExpression	0		8221353	0					
ANR	8221505	ReturnType	static int		8221353	1					
ANR	8221506	Identifier	pl_ufst_char_width		8221353	2					
ANR	8221507	ParameterList	"uint char_code , const void * pgs , gs_point * pwidth , FONTCONTEXT * pfc"		8221353	3					
ANR	8221508	Parameter	uint char_code	268:19:8527:8540	8221353	0	True				
ANR	8221509	ParameterType	uint		8221353	0					
ANR	8221510	Identifier	char_code		8221353	1					
ANR	8221511	Parameter	const void * pgs	269:19:8562:8576	8221353	1	True				
ANR	8221512	ParameterType	const void *		8221353	0					
ANR	8221513	Identifier	pgs		8221353	1					
ANR	8221514	Parameter	gs_point * pwidth	269:36:8579:8595	8221353	2	True				
ANR	8221515	ParameterType	gs_point *		8221353	0					
ANR	8221516	Identifier	pwidth		8221353	1					
ANR	8221517	Parameter	FONTCONTEXT * pfc	269:55:8598:8614	8221353	3	True				
ANR	8221518	ParameterType	FONTCONTEXT *		8221353	0					
ANR	8221519	Identifier	pfc		8221353	1					
ANR	8221520	CFGEntryNode	ENTRY		8221353		True				
ANR	8221521	CFGExitNode	EXIT		8221353		True				
ANR	8221522	Symbol	NULL		8221353						
ANR	8221523	Symbol	code		8221353						
ANR	8221524	Symbol	gs_distance_transform		8221353						
ANR	8221525	Symbol	fcode . CharType		8221353						
ANR	8221526	Symbol	ERR_char_unavailable		8221353						
ANR	8221527	Symbol	pwidth -> y		8221353						
ANR	8221528	Symbol	char_code		8221353						
ANR	8221529	Symbol	CGIFwidth2		8221353						
ANR	8221530	Symbol	pwidth		8221353						
ANR	8221531	Symbol	pfc		8221353						
ANR	8221532	Symbol	pwidth -> x		8221353						
ANR	8221533	Symbol	chIdloc		8221353						
ANR	8221534	Symbol	* fontWidth		8221353						
ANR	8221535	Symbol	FSA		8221353						
ANR	8221536	Symbol	& pl_identmtx		8221353						
ANR	8221537	Symbol	fontWidth		8221353						
ANR	8221538	Symbol	fcode . CharType . TT_unicode		8221353						
ANR	8221539	Symbol	* pwidth		8221353						
ANR	8221540	Symbol	fontw		8221353						
ANR	8221541	Symbol	pgs		8221353						
ANR	8221542	Symbol	status		8221353						
ANR	8221543	Symbol	fcode		8221353						
ANR	8221544	Function	pl_ufst_make_char	299:0:9338:14171							
ANR	8221545	FunctionDef	"pl_ufst_make_char (gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , FONTCONTEXT * pfc)"		8221544	0					
ANR	8221546	CompoundStatement		303:0:9491:14171	8221544	0					
ANR	8221547	IdentifierDeclStatement	MEM_HANDLE memhdl ;	304:4:9497:9514	8221544	0	True				
ANR	8221548	IdentifierDecl	memhdl		8221544	0					
ANR	8221549	IdentifierDeclType	MEM_HANDLE		8221544	0					
ANR	8221550	Identifier	memhdl		8221544	1					
ANR	8221551	IdentifierDeclStatement	"UW16 status , chIdloc = chr ;"	305:4:9520:9546	8221544	1	True				
ANR	8221552	IdentifierDecl	status		8221544	0					
ANR	8221553	IdentifierDeclType	UW16		8221544	0					
ANR	8221554	Identifier	status		8221544	1					
ANR	8221555	IdentifierDecl	chIdloc = chr		8221544	1					
ANR	8221556	IdentifierDeclType	UW16		8221544	0					
ANR	8221557	Identifier	chIdloc		8221544	1					
ANR	8221558	AssignmentExpression	chIdloc = chr		8221544	2		=			
ANR	8221559	Identifier	chr		8221544	0					
ANR	8221560	Identifier	chr		8221544	1					
ANR	8221561	IdentifierDeclStatement	"gs_matrix sv_ctm , tmp_ctm ;"	306:4:9552:9577	8221544	2	True				
ANR	8221562	IdentifierDecl	sv_ctm		8221544	0					
ANR	8221563	IdentifierDeclType	gs_matrix		8221544	0					
ANR	8221564	Identifier	sv_ctm		8221544	1					
ANR	8221565	IdentifierDecl	tmp_ctm		8221544	1					
ANR	8221566	IdentifierDeclType	gs_matrix		8221544	0					
ANR	8221567	Identifier	tmp_ctm		8221544	1					
ANR	8221568	IdentifierDeclStatement	bool outline_sub_for_bitmap = false ;	307:4:9583:9618	8221544	3	True				
ANR	8221569	IdentifierDecl	outline_sub_for_bitmap = false		8221544	0					
ANR	8221570	IdentifierDeclType	bool		8221544	0					
ANR	8221571	Identifier	outline_sub_for_bitmap		8221544	1					
ANR	8221572	AssignmentExpression	outline_sub_for_bitmap = false		8221544	2		=			
ANR	8221573	Identifier	false		8221544	0					
ANR	8221574	Identifier	false		8221544	1					
ANR	8221575	IdentifierDeclStatement	int wasValid ;	308:4:9624:9636	8221544	4	True				
ANR	8221576	IdentifierDecl	wasValid		8221544	0					
ANR	8221577	IdentifierDeclType	int		8221544	0					
ANR	8221578	Identifier	wasValid		8221544	1					
ANR	8221579	IfStatement	if ( chr == 0xffff )		8221544	5					
ANR	8221580	Condition	chr == 0xffff	311:8:9688:9700	8221544	0	True				
ANR	8221581	EqualityExpression	chr == 0xffff		8221544	0		==			
ANR	8221582	Identifier	chr		8221544	0					
ANR	8221583	PrimaryExpression	0xffff		8221544	1					
ANR	8221584	ReturnStatement	return 0 ;	312:8:9711:9719	8221544	1	True				
ANR	8221585	PrimaryExpression	0		8221544	0					
ANR	8221586	Statement	CGIFchIdptr	314:4:9726:9736	8221544	6	True				
ANR	8221587	Statement	(	314:15:9737:9737	8221544	7	True				
ANR	8221588	Statement	FSA	314:16:9738:9740	8221544	8	True				
ANR	8221589	Statement	(	314:19:9741:9741	8221544	9	True				
ANR	8221590	Statement	VOID	314:20:9742:9745	8221544	10	True				
ANR	8221591	Statement	*	314:25:9747:9747	8221544	11	True				
ANR	8221592	Statement	)	314:26:9748:9748	8221544	12	True				
ANR	8221593	Statement	&	314:28:9750:9750	8221544	13	True				
ANR	8221594	Statement	chIdloc	314:30:9752:9758	8221544	14	True				
ANR	8221595	Statement	","	314:37:9759:9759	8221544	15	True				
ANR	8221596	Statement	NULL	314:39:9761:9764	8221544	16	True				
ANR	8221597	Statement	)	314:43:9765:9765	8221544	17	True				
ANR	8221598	ExpressionStatement		314:44:9766:9766	8221544	18	True				
ANR	8221599	Statement	if	315:4:9772:9773	8221544	19	True				
ANR	8221600	Statement	(	315:7:9775:9775	8221544	20	True				
ANR	8221601	Statement	(	315:8:9776:9776	8221544	21	True				
ANR	8221602	Statement	status	315:9:9777:9782	8221544	22	True				
ANR	8221603	Statement	=	315:16:9784:9784	8221544	23	True				
ANR	8221604	Statement	CGIFchar_handle	315:18:9786:9800	8221544	24	True				
ANR	8221605	Statement	(	315:33:9801:9801	8221544	25	True				
ANR	8221606	Statement	FSA	315:34:9802:9804	8221544	26	True				
ANR	8221607	Statement	chr	315:38:9806:9808	8221544	27	True				
ANR	8221608	Statement	","	315:41:9809:9809	8221544	28	True				
ANR	8221609	Statement	&	315:43:9811:9811	8221544	29	True				
ANR	8221610	Statement	memhdl	315:44:9812:9817	8221544	30	True				
ANR	8221611	Statement	","	315:50:9818:9818	8221544	31	True				
ANR	8221612	Statement	0	315:52:9820:9820	8221544	32	True				
ANR	8221613	Statement	)	315:53:9821:9821	8221544	33	True				
ANR	8221614	Statement	)	315:54:9822:9822	8221544	34	True				
ANR	8221615	Statement	!=	315:56:9824:9825	8221544	35	True				
ANR	8221616	Statement	0	315:59:9827:9827	8221544	36	True				
ANR	8221617	Statement	&&	315:61:9829:9830	8221544	37	True				
ANR	8221618	Statement	status	316:8:9840:9845	8221544	38	True				
ANR	8221619	Statement	!=	316:15:9847:9848	8221544	39	True				
ANR	8221620	Statement	ERR_fixed_space	316:18:9850:9864	8221544	40	True				
ANR	8221621	Statement	)	316:33:9865:9865	8221544	41	True				
ANR	8221622	CompoundStatement		14:35:375:375	8221544	42					
ANR	8221623	IfStatement	if ( ( status >= ERR_bm_gt_oron && status <= ERRdu_pix_range ) || ( status == ERR_bm_buff ) )		8221544	0					
ANR	8221624	Condition	( status >= ERR_bm_gt_oron && status <= ERRdu_pix_range ) || ( status == ERR_bm_buff )	319:12:9938:10031	8221544	0	True				
ANR	8221625	OrExpression	( status >= ERR_bm_gt_oron && status <= ERRdu_pix_range ) || ( status == ERR_bm_buff )		8221544	0		||			
ANR	8221626	AndExpression	status >= ERR_bm_gt_oron && status <= ERRdu_pix_range		8221544	0		&&			
ANR	8221627	RelationalExpression	status >= ERR_bm_gt_oron		8221544	0		>=			
ANR	8221628	Identifier	status		8221544	0					
ANR	8221629	Identifier	ERR_bm_gt_oron		8221544	1					
ANR	8221630	RelationalExpression	status <= ERRdu_pix_range		8221544	1		<=			
ANR	8221631	Identifier	status		8221544	0					
ANR	8221632	Identifier	ERRdu_pix_range		8221544	1					
ANR	8221633	EqualityExpression	status == ERR_bm_buff		8221544	1		==			
ANR	8221634	Identifier	status		8221544	0					
ANR	8221635	Identifier	ERR_bm_buff		8221544	1					
ANR	8221636	CompoundStatement		18:37:542:542	8221544	1					
ANR	8221637	ExpressionStatement	pfc -> format = ( pfc -> format & ~FC_BITMAP_TYPE ) | FC_CUBIC_TYPE	321:12:10048:10109	8221544	0	True				
ANR	8221638	AssignmentExpression	pfc -> format = ( pfc -> format & ~FC_BITMAP_TYPE ) | FC_CUBIC_TYPE		8221544	0		=			
ANR	8221639	PtrMemberAccess	pfc -> format		8221544	0					
ANR	8221640	Identifier	pfc		8221544	0					
ANR	8221641	Identifier	format		8221544	1					
ANR	8221642	InclusiveOrExpression	( pfc -> format & ~FC_BITMAP_TYPE ) | FC_CUBIC_TYPE		8221544	1		|			
ANR	8221643	BitAndExpression	pfc -> format & ~FC_BITMAP_TYPE		8221544	0		&			
ANR	8221644	PtrMemberAccess	pfc -> format		8221544	0					
ANR	8221645	Identifier	pfc		8221544	0					
ANR	8221646	Identifier	format		8221544	1					
ANR	8221647	Identifier	~FC_BITMAP_TYPE		8221544	1					
ANR	8221648	Identifier	FC_CUBIC_TYPE		8221544	1					
ANR	8221649	Statement	if	322:12:10123:10124	8221544	1	True				
ANR	8221650	Statement	(	322:15:10126:10126	8221544	2	True				
ANR	8221651	Statement	(	322:16:10127:10127	8221544	3	True				
ANR	8221652	Statement	status	322:17:10128:10133	8221544	4	True				
ANR	8221653	Statement	=	322:24:10135:10135	8221544	5	True				
ANR	8221654	Statement	CGIFfont	322:26:10137:10144	8221544	6	True				
ANR	8221655	Statement	(	322:34:10145:10145	8221544	7	True				
ANR	8221656	Statement	FSA	322:35:10146:10148	8221544	8	True				
ANR	8221657	Statement	pfc	322:39:10150:10152	8221544	9	True				
ANR	8221658	Statement	)	322:42:10153:10153	8221544	10	True				
ANR	8221659	Statement	)	322:43:10154:10154	8221544	11	True				
ANR	8221660	Statement	==	322:45:10156:10157	8221544	12	True				
ANR	8221661	Statement	0	322:48:10159:10159	8221544	13	True				
ANR	8221662	Statement	)	322:49:10160:10160	8221544	14	True				
ANR	8221663	CompoundStatement		20:51:670:670	8221544	15					
ANR	8221664	Statement	CGIFchIdptr	323:16:10180:10190	8221544	0	True				
ANR	8221665	Statement	(	323:27:10191:10191	8221544	1	True				
ANR	8221666	Statement	FSA	323:28:10192:10194	8221544	2	True				
ANR	8221667	Statement	(	323:31:10195:10195	8221544	3	True				
ANR	8221668	Statement	VOID	323:32:10196:10199	8221544	4	True				
ANR	8221669	Statement	*	323:37:10201:10201	8221544	5	True				
ANR	8221670	Statement	)	323:38:10202:10202	8221544	6	True				
ANR	8221671	Statement	&	323:40:10204:10204	8221544	7	True				
ANR	8221672	Statement	chIdloc	323:42:10206:10212	8221544	8	True				
ANR	8221673	Statement	","	323:49:10213:10213	8221544	9	True				
ANR	8221674	Statement	NULL	323:51:10215:10218	8221544	10	True				
ANR	8221675	Statement	)	323:55:10219:10219	8221544	11	True				
ANR	8221676	ExpressionStatement		323:56:10220:10220	8221544	12	True				
ANR	8221677	Statement	status	324:16:10238:10243	8221544	13	True				
ANR	8221678	Statement	=	324:23:10245:10245	8221544	14	True				
ANR	8221679	Statement	CGIFchar_handle	324:25:10247:10261	8221544	15	True				
ANR	8221680	Statement	(	324:40:10262:10262	8221544	16	True				
ANR	8221681	Statement	FSA	324:41:10263:10265	8221544	17	True				
ANR	8221682	Statement	chr	324:45:10267:10269	8221544	18	True				
ANR	8221683	Statement	","	324:48:10270:10270	8221544	19	True				
ANR	8221684	Statement	&	324:50:10272:10272	8221544	20	True				
ANR	8221685	Statement	memhdl	324:51:10273:10278	8221544	21	True				
ANR	8221686	Statement	","	324:57:10279:10279	8221544	22	True				
ANR	8221687	Statement	0	324:59:10281:10281	8221544	23	True				
ANR	8221688	Statement	)	324:60:10282:10282	8221544	24	True				
ANR	8221689	ExpressionStatement		324:61:10283:10283	8221544	25	True				
ANR	8221690	ExpressionStatement	outline_sub_for_bitmap = true	325:16:10301:10330	8221544	26	True				
ANR	8221691	AssignmentExpression	outline_sub_for_bitmap = true		8221544	0		=			
ANR	8221692	Identifier	outline_sub_for_bitmap		8221544	0					
ANR	8221693	Identifier	true		8221544	1					
ANR	8221694	IfStatement	if ( status != 0 )		8221544	1					
ANR	8221695	Condition	status != 0	328:12:10368:10378	8221544	0	True				
ANR	8221696	EqualityExpression	status != 0		8221544	0		!=			
ANR	8221697	Identifier	status		8221544	0					
ANR	8221698	PrimaryExpression	0		8221544	1					
ANR	8221699	CompoundStatement		26:25:889:889	8221544	1					
ANR	8221700	ReturnStatement	"return gs_setcharwidth ( penum , pgs , 0.0 , 0.0 ) ;"	330:12:10459:10503	8221544	0	True				
ANR	8221701	CallExpression	"gs_setcharwidth ( penum , pgs , 0.0 , 0.0 )"		8221544	0					
ANR	8221702	Callee	gs_setcharwidth		8221544	0					
ANR	8221703	Identifier	gs_setcharwidth		8221544	0					
ANR	8221704	ArgumentList	penum		8221544	1					
ANR	8221705	Argument	penum		8221544	0					
ANR	8221706	Identifier	penum		8221544	0					
ANR	8221707	Argument	pgs		8221544	1					
ANR	8221708	Identifier	pgs		8221544	0					
ANR	8221709	Argument	0.0		8221544	2					
ANR	8221710	PrimaryExpression	0.0		8221544	0					
ANR	8221711	Argument	0.0		8221544	3					
ANR	8221712	PrimaryExpression	0.0		8221544	0					
ANR	8221713	ExpressionStatement	wasValid = pgs -> char_tm_valid	334:4:10526:10555	8221544	43	True				
ANR	8221714	AssignmentExpression	wasValid = pgs -> char_tm_valid		8221544	0		=			
ANR	8221715	Identifier	wasValid		8221544	0					
ANR	8221716	PtrMemberAccess	pgs -> char_tm_valid		8221544	1					
ANR	8221717	Identifier	pgs		8221544	0					
ANR	8221718	Identifier	char_tm_valid		8221544	1					
ANR	8221719	ExpressionStatement	"gs_currentmatrix ( pgs , & sv_ctm )"	336:4:10592:10622	8221544	44	True				
ANR	8221720	CallExpression	"gs_currentmatrix ( pgs , & sv_ctm )"		8221544	0					
ANR	8221721	Callee	gs_currentmatrix		8221544	0					
ANR	8221722	Identifier	gs_currentmatrix		8221544	0					
ANR	8221723	ArgumentList	pgs		8221544	1					
ANR	8221724	Argument	pgs		8221544	0					
ANR	8221725	Identifier	pgs		8221544	0					
ANR	8221726	Argument	& sv_ctm		8221544	1					
ANR	8221727	UnaryOperationExpression	& sv_ctm		8221544	0					
ANR	8221728	UnaryOperator	&		8221544	0					
ANR	8221729	Identifier	sv_ctm		8221544	1					
ANR	8221730	ExpressionStatement	gs_make_identity ( & tmp_ctm )	337:4:10628:10654	8221544	45	True				
ANR	8221731	CallExpression	gs_make_identity ( & tmp_ctm )		8221544	0					
ANR	8221732	Callee	gs_make_identity		8221544	0					
ANR	8221733	Identifier	gs_make_identity		8221544	0					
ANR	8221734	ArgumentList	& tmp_ctm		8221544	1					
ANR	8221735	Argument	& tmp_ctm		8221544	0					
ANR	8221736	UnaryOperationExpression	& tmp_ctm		8221544	0					
ANR	8221737	UnaryOperator	&		8221544	0					
ANR	8221738	Identifier	tmp_ctm		8221544	1					
ANR	8221739	ExpressionStatement	tmp_ctm . tx = sv_ctm . tx	338:4:10660:10682	8221544	46	True				
ANR	8221740	AssignmentExpression	tmp_ctm . tx = sv_ctm . tx		8221544	0		=			
ANR	8221741	MemberAccess	tmp_ctm . tx		8221544	0					
ANR	8221742	Identifier	tmp_ctm		8221544	0					
ANR	8221743	Identifier	tx		8221544	1					
ANR	8221744	MemberAccess	sv_ctm . tx		8221544	1					
ANR	8221745	Identifier	sv_ctm		8221544	0					
ANR	8221746	Identifier	tx		8221544	1					
ANR	8221747	ExpressionStatement	tmp_ctm . ty = sv_ctm . ty	339:4:10688:10710	8221544	47	True				
ANR	8221748	AssignmentExpression	tmp_ctm . ty = sv_ctm . ty		8221544	0		=			
ANR	8221749	MemberAccess	tmp_ctm . ty		8221544	0					
ANR	8221750	Identifier	tmp_ctm		8221544	0					
ANR	8221751	Identifier	ty		8221544	1					
ANR	8221752	MemberAccess	sv_ctm . ty		8221544	1					
ANR	8221753	Identifier	sv_ctm		8221544	0					
ANR	8221754	Identifier	ty		8221544	1					
ANR	8221755	ExpressionStatement	"gs_setmatrix ( pgs , & tmp_ctm )"	340:4:10716:10743	8221544	48	True				
ANR	8221756	CallExpression	"gs_setmatrix ( pgs , & tmp_ctm )"		8221544	0					
ANR	8221757	Callee	gs_setmatrix		8221544	0					
ANR	8221758	Identifier	gs_setmatrix		8221544	0					
ANR	8221759	ArgumentList	pgs		8221544	1					
ANR	8221760	Argument	pgs		8221544	0					
ANR	8221761	Identifier	pgs		8221544	0					
ANR	8221762	Argument	& tmp_ctm		8221544	1					
ANR	8221763	UnaryOperationExpression	& tmp_ctm		8221544	0					
ANR	8221764	UnaryOperator	&		8221544	0					
ANR	8221765	Identifier	tmp_ctm		8221544	1					
ANR	8221766	ExpressionStatement	pgs -> char_tm_valid = wasValid	341:4:10749:10778	8221544	49	True				
ANR	8221767	AssignmentExpression	pgs -> char_tm_valid = wasValid		8221544	0		=			
ANR	8221768	PtrMemberAccess	pgs -> char_tm_valid		8221544	0					
ANR	8221769	Identifier	pgs		8221544	0					
ANR	8221770	Identifier	char_tm_valid		8221544	1					
ANR	8221771	Identifier	wasValid		8221544	1					
ANR	8221772	IfStatement	if ( FC_ISBITMAP ( pfc ) )		8221544	50					
ANR	8221773	Condition	FC_ISBITMAP ( pfc )	343:8:10789:10804	8221544	0	True				
ANR	8221774	CallExpression	FC_ISBITMAP ( pfc )		8221544	0					
ANR	8221775	Callee	FC_ISBITMAP		8221544	0					
ANR	8221776	Identifier	FC_ISBITMAP		8221544	0					
ANR	8221777	ArgumentList	pfc		8221544	1					
ANR	8221778	Argument	pfc		8221544	0					
ANR	8221779	Identifier	pfc		8221544	0					
ANR	8221780	CompoundStatement		47:8:1475:1486	8221544	1					
ANR	8221781	IdentifierDeclStatement	PIFBITMAP psbm = ( PIFBITMAP ) MEMptr ( memhdl ) ;	344:8:10817:10860	8221544	0	True				
ANR	8221782	IdentifierDecl	psbm = ( PIFBITMAP ) MEMptr ( memhdl )		8221544	0					
ANR	8221783	IdentifierDeclType	PIFBITMAP		8221544	0					
ANR	8221784	Identifier	psbm		8221544	1					
ANR	8221785	AssignmentExpression	psbm = ( PIFBITMAP ) MEMptr ( memhdl )		8221544	2		=			
ANR	8221786	Identifier	psbm		8221544	0					
ANR	8221787	CastExpression	( PIFBITMAP ) MEMptr ( memhdl )		8221544	1					
ANR	8221788	CastTarget	PIFBITMAP		8221544	0					
ANR	8221789	CallExpression	MEMptr ( memhdl )		8221544	1					
ANR	8221790	Callee	MEMptr		8221544	0					
ANR	8221791	Identifier	MEMptr		8221544	0					
ANR	8221792	ArgumentList	memhdl		8221544	1					
ANR	8221793	Argument	memhdl		8221544	0					
ANR	8221794	Identifier	memhdl		8221544	0					
ANR	8221795	IdentifierDeclStatement	float wbox [ 6 ] ;	345:8:10870:10883	8221544	1	True				
ANR	8221796	IdentifierDecl	wbox [ 6 ]		8221544	0					
ANR	8221797	IdentifierDeclType	float [ 6 ]		8221544	0					
ANR	8221798	Identifier	wbox		8221544	1					
ANR	8221799	PrimaryExpression	6		8221544	2					
ANR	8221800	IdentifierDeclStatement	gs_image_t image ;	346:8:10893:10909	8221544	2	True				
ANR	8221801	IdentifierDecl	image		8221544	0					
ANR	8221802	IdentifierDeclType	gs_image_t		8221544	0					
ANR	8221803	Identifier	image		8221544	1					
ANR	8221804	IdentifierDeclStatement	gs_image_enum * ienum ;	347:8:10919:10939	8221544	3	True				
ANR	8221805	IdentifierDecl	* ienum		8221544	0					
ANR	8221806	IdentifierDeclType	gs_image_enum *		8221544	0					
ANR	8221807	Identifier	ienum		8221544	1					
ANR	8221808	IdentifierDeclStatement	int code ;	348:8:10949:10957	8221544	4	True				
ANR	8221809	IdentifierDecl	code		8221544	0					
ANR	8221810	IdentifierDeclType	int		8221544	0					
ANR	8221811	Identifier	code		8221544	1					
ANR	8221812	IdentifierDeclStatement	gs_point aw ;	349:8:10967:10978	8221544	5	True				
ANR	8221813	IdentifierDecl	aw		8221544	0					
ANR	8221814	IdentifierDeclType	gs_point		8221544	0					
ANR	8221815	Identifier	aw		8221544	1					
ANR	8221816	ExpressionStatement	"gs_distance_transform ( ( double ) psbm -> escapement / psbm -> du_emx , 0.0 , & sv_ctm , & aw )"	352:8:11027:11139	8221544	6	True				
ANR	8221817	CallExpression	"gs_distance_transform ( ( double ) psbm -> escapement / psbm -> du_emx , 0.0 , & sv_ctm , & aw )"		8221544	0					
ANR	8221818	Callee	gs_distance_transform		8221544	0					
ANR	8221819	Identifier	gs_distance_transform		8221544	0					
ANR	8221820	ArgumentList	( double ) psbm -> escapement / psbm -> du_emx		8221544	1					
ANR	8221821	Argument	( double ) psbm -> escapement / psbm -> du_emx		8221544	0					
ANR	8221822	MultiplicativeExpression	( double ) psbm -> escapement / psbm -> du_emx		8221544	0		/			
ANR	8221823	CastExpression	( double ) psbm -> escapement		8221544	0					
ANR	8221824	CastTarget	double		8221544	0					
ANR	8221825	PtrMemberAccess	psbm -> escapement		8221544	1					
ANR	8221826	Identifier	psbm		8221544	0					
ANR	8221827	Identifier	escapement		8221544	1					
ANR	8221828	PtrMemberAccess	psbm -> du_emx		8221544	1					
ANR	8221829	Identifier	psbm		8221544	0					
ANR	8221830	Identifier	du_emx		8221544	1					
ANR	8221831	Argument	0.0		8221544	1					
ANR	8221832	PrimaryExpression	0.0		8221544	0					
ANR	8221833	Argument	& sv_ctm		8221544	2					
ANR	8221834	UnaryOperationExpression	& sv_ctm		8221544	0					
ANR	8221835	UnaryOperator	&		8221544	0					
ANR	8221836	Identifier	sv_ctm		8221544	1					
ANR	8221837	Argument	& aw		8221544	3					
ANR	8221838	UnaryOperationExpression	& aw		8221544	0					
ANR	8221839	UnaryOperator	&		8221544	0					
ANR	8221840	Identifier	aw		8221544	1					
ANR	8221841	ExpressionStatement	wbox [ 0 ] = aw . x	355:8:11150:11164	8221544	7	True				
ANR	8221842	AssignmentExpression	wbox [ 0 ] = aw . x		8221544	0		=			
ANR	8221843	ArrayIndexing	wbox [ 0 ]		8221544	0					
ANR	8221844	Identifier	wbox		8221544	0					
ANR	8221845	PrimaryExpression	0		8221544	1					
ANR	8221846	MemberAccess	aw . x		8221544	1					
ANR	8221847	Identifier	aw		8221544	0					
ANR	8221848	Identifier	x		8221544	1					
ANR	8221849	ExpressionStatement	wbox [ 1 ] = aw . y	356:8:11174:11188	8221544	8	True				
ANR	8221850	AssignmentExpression	wbox [ 1 ] = aw . y		8221544	0		=			
ANR	8221851	ArrayIndexing	wbox [ 1 ]		8221544	0					
ANR	8221852	Identifier	wbox		8221544	0					
ANR	8221853	PrimaryExpression	1		8221544	1					
ANR	8221854	MemberAccess	aw . y		8221544	1					
ANR	8221855	Identifier	aw		8221544	0					
ANR	8221856	Identifier	y		8221544	1					
ANR	8221857	ExpressionStatement	wbox [ 2 ] = psbm -> xorigin / 16.0 + psbm -> left_indent	357:8:11198:11248	8221544	9	True				
ANR	8221858	AssignmentExpression	wbox [ 2 ] = psbm -> xorigin / 16.0 + psbm -> left_indent		8221544	0		=			
ANR	8221859	ArrayIndexing	wbox [ 2 ]		8221544	0					
ANR	8221860	Identifier	wbox		8221544	0					
ANR	8221861	PrimaryExpression	2		8221544	1					
ANR	8221862	AdditiveExpression	psbm -> xorigin / 16.0 + psbm -> left_indent		8221544	1		+			
ANR	8221863	MultiplicativeExpression	psbm -> xorigin / 16.0		8221544	0		/			
ANR	8221864	PtrMemberAccess	psbm -> xorigin		8221544	0					
ANR	8221865	Identifier	psbm		8221544	0					
ANR	8221866	Identifier	xorigin		8221544	1					
ANR	8221867	PrimaryExpression	16.0		8221544	1					
ANR	8221868	PtrMemberAccess	psbm -> left_indent		8221544	1					
ANR	8221869	Identifier	psbm		8221544	0					
ANR	8221870	Identifier	left_indent		8221544	1					
ANR	8221871	ExpressionStatement	wbox [ 3 ] = - psbm -> yorigin / 16.0 + psbm -> top_indent	358:8:11258:11308	8221544	10	True				
ANR	8221872	AssignmentExpression	wbox [ 3 ] = - psbm -> yorigin / 16.0 + psbm -> top_indent		8221544	0		=			
ANR	8221873	ArrayIndexing	wbox [ 3 ]		8221544	0					
ANR	8221874	Identifier	wbox		8221544	0					
ANR	8221875	PrimaryExpression	3		8221544	1					
ANR	8221876	AdditiveExpression	- psbm -> yorigin / 16.0 + psbm -> top_indent		8221544	1		+			
ANR	8221877	MultiplicativeExpression	- psbm -> yorigin / 16.0		8221544	0		/			
ANR	8221878	UnaryOperationExpression	- psbm -> yorigin		8221544	0					
ANR	8221879	UnaryOperator	-		8221544	0					
ANR	8221880	PtrMemberAccess	psbm -> yorigin		8221544	1					
ANR	8221881	Identifier	psbm		8221544	0					
ANR	8221882	Identifier	yorigin		8221544	1					
ANR	8221883	PrimaryExpression	16.0		8221544	1					
ANR	8221884	PtrMemberAccess	psbm -> top_indent		8221544	1					
ANR	8221885	Identifier	psbm		8221544	0					
ANR	8221886	Identifier	top_indent		8221544	1					
ANR	8221887	ExpressionStatement	wbox [ 4 ] = psbm -> black_width + wbox [ 2 ]	359:8:11318:11355	8221544	11	True				
ANR	8221888	AssignmentExpression	wbox [ 4 ] = psbm -> black_width + wbox [ 2 ]		8221544	0		=			
ANR	8221889	ArrayIndexing	wbox [ 4 ]		8221544	0					
ANR	8221890	Identifier	wbox		8221544	0					
ANR	8221891	PrimaryExpression	4		8221544	1					
ANR	8221892	AdditiveExpression	psbm -> black_width + wbox [ 2 ]		8221544	1		+			
ANR	8221893	PtrMemberAccess	psbm -> black_width		8221544	0					
ANR	8221894	Identifier	psbm		8221544	0					
ANR	8221895	Identifier	black_width		8221544	1					
ANR	8221896	ArrayIndexing	wbox [ 2 ]		8221544	1					
ANR	8221897	Identifier	wbox		8221544	0					
ANR	8221898	PrimaryExpression	2		8221544	1					
ANR	8221899	ExpressionStatement	wbox [ 5 ] = psbm -> black_depth + wbox [ 3 ]	360:8:11365:11402	8221544	12	True				
ANR	8221900	AssignmentExpression	wbox [ 5 ] = psbm -> black_depth + wbox [ 3 ]		8221544	0		=			
ANR	8221901	ArrayIndexing	wbox [ 5 ]		8221544	0					
ANR	8221902	Identifier	wbox		8221544	0					
ANR	8221903	PrimaryExpression	5		8221544	1					
ANR	8221904	AdditiveExpression	psbm -> black_depth + wbox [ 3 ]		8221544	1		+			
ANR	8221905	PtrMemberAccess	psbm -> black_depth		8221544	0					
ANR	8221906	Identifier	psbm		8221544	0					
ANR	8221907	Identifier	black_depth		8221544	1					
ANR	8221908	ArrayIndexing	wbox [ 3 ]		8221544	1					
ANR	8221909	Identifier	wbox		8221544	0					
ANR	8221910	PrimaryExpression	3		8221544	1					
ANR	8221911	IfStatement	"if ( ( code = gs_setcachedevice ( penum , pgs , wbox ) ) < 0 )"		8221544	13					
ANR	8221912	Condition	"( code = gs_setcachedevice ( penum , pgs , wbox ) ) < 0"	369:12:11734:11781	8221544	0	True				
ANR	8221913	RelationalExpression	"( code = gs_setcachedevice ( penum , pgs , wbox ) ) < 0"		8221544	0		<			
ANR	8221914	AssignmentExpression	"code = gs_setcachedevice ( penum , pgs , wbox )"		8221544	0		=			
ANR	8221915	Identifier	code		8221544	0					
ANR	8221916	CallExpression	"gs_setcachedevice ( penum , pgs , wbox )"		8221544	1					
ANR	8221917	Callee	gs_setcachedevice		8221544	0					
ANR	8221918	Identifier	gs_setcachedevice		8221544	0					
ANR	8221919	ArgumentList	penum		8221544	1					
ANR	8221920	Argument	penum		8221544	0					
ANR	8221921	Identifier	penum		8221544	0					
ANR	8221922	Argument	pgs		8221544	1					
ANR	8221923	Identifier	pgs		8221544	0					
ANR	8221924	Argument	wbox		8221544	2					
ANR	8221925	Identifier	wbox		8221544	0					
ANR	8221926	PrimaryExpression	0		8221544	1					
ANR	8221927	CompoundStatement		67:62:2292:2292	8221544	1					
ANR	8221928	Statement	MEMfree	370:12:11798:11804	8221544	0	True				
ANR	8221929	Statement	(	370:19:11805:11805	8221544	1	True				
ANR	8221930	Statement	FSA	370:20:11806:11808	8221544	2	True				
ANR	8221931	Statement	CACHE_POOL	370:24:11810:11819	8221544	3	True				
ANR	8221932	Statement	","	370:34:11820:11820	8221544	4	True				
ANR	8221933	Statement	memhdl	370:36:11822:11827	8221544	5	True				
ANR	8221934	Statement	)	370:42:11828:11828	8221544	6	True				
ANR	8221935	ExpressionStatement		370:43:11829:11829	8221544	7	True				
ANR	8221936	ExpressionStatement	"gs_setmatrix ( pgs , & sv_ctm )"	371:12:11843:11869	8221544	8	True				
ANR	8221937	CallExpression	"gs_setmatrix ( pgs , & sv_ctm )"		8221544	0					
ANR	8221938	Callee	gs_setmatrix		8221544	0					
ANR	8221939	Identifier	gs_setmatrix		8221544	0					
ANR	8221940	ArgumentList	pgs		8221544	1					
ANR	8221941	Argument	pgs		8221544	0					
ANR	8221942	Identifier	pgs		8221544	0					
ANR	8221943	Argument	& sv_ctm		8221544	1					
ANR	8221944	UnaryOperationExpression	& sv_ctm		8221544	0					
ANR	8221945	UnaryOperator	&		8221544	0					
ANR	8221946	Identifier	sv_ctm		8221544	1					
ANR	8221947	ReturnStatement	return code ;	372:12:11883:11894	8221544	9	True				
ANR	8221948	Identifier	code		8221544	0					
ANR	8221949	ExpressionStatement	"ienum = gs_image_enum_alloc ( pgs -> memory , ""pl_ufst_make_char"" )"	376:8:11946:12007	8221544	14	True				
ANR	8221950	AssignmentExpression	"ienum = gs_image_enum_alloc ( pgs -> memory , ""pl_ufst_make_char"" )"		8221544	0		=			
ANR	8221951	Identifier	ienum		8221544	0					
ANR	8221952	CallExpression	"gs_image_enum_alloc ( pgs -> memory , ""pl_ufst_make_char"" )"		8221544	1					
ANR	8221953	Callee	gs_image_enum_alloc		8221544	0					
ANR	8221954	Identifier	gs_image_enum_alloc		8221544	0					
ANR	8221955	ArgumentList	pgs -> memory		8221544	1					
ANR	8221956	Argument	pgs -> memory		8221544	0					
ANR	8221957	PtrMemberAccess	pgs -> memory		8221544	0					
ANR	8221958	Identifier	pgs		8221544	0					
ANR	8221959	Identifier	memory		8221544	1					
ANR	8221960	Argument	"""pl_ufst_make_char"""		8221544	1					
ANR	8221961	PrimaryExpression	"""pl_ufst_make_char"""		8221544	0					
ANR	8221962	IfStatement	if ( ienum == 0 )		8221544	15					
ANR	8221963	Condition	ienum == 0	377:12:12021:12030	8221544	0	True				
ANR	8221964	EqualityExpression	ienum == 0		8221544	0		==			
ANR	8221965	Identifier	ienum		8221544	0					
ANR	8221966	PrimaryExpression	0		8221544	1					
ANR	8221967	CompoundStatement		75:24:2541:2541	8221544	1					
ANR	8221968	Statement	MEMfree	378:12:12047:12053	8221544	0	True				
ANR	8221969	Statement	(	378:19:12054:12054	8221544	1	True				
ANR	8221970	Statement	FSA	378:20:12055:12057	8221544	2	True				
ANR	8221971	Statement	CACHE_POOL	378:24:12059:12068	8221544	3	True				
ANR	8221972	Statement	","	378:34:12069:12069	8221544	4	True				
ANR	8221973	Statement	memhdl	378:36:12071:12076	8221544	5	True				
ANR	8221974	Statement	)	378:42:12077:12077	8221544	6	True				
ANR	8221975	ExpressionStatement		378:43:12078:12078	8221544	7	True				
ANR	8221976	ExpressionStatement	"gs_setmatrix ( pgs , & sv_ctm )"	379:12:12092:12118	8221544	8	True				
ANR	8221977	CallExpression	"gs_setmatrix ( pgs , & sv_ctm )"		8221544	0					
ANR	8221978	Callee	gs_setmatrix		8221544	0					
ANR	8221979	Identifier	gs_setmatrix		8221544	0					
ANR	8221980	ArgumentList	pgs		8221544	1					
ANR	8221981	Argument	pgs		8221544	0					
ANR	8221982	Identifier	pgs		8221544	0					
ANR	8221983	Argument	& sv_ctm		8221544	1					
ANR	8221984	UnaryOperationExpression	& sv_ctm		8221544	0					
ANR	8221985	UnaryOperator	&		8221544	0					
ANR	8221986	Identifier	sv_ctm		8221544	1					
ANR	8221987	ExpressionStatement	return_error ( gs_error_VMerror )	380:12:12132:12162	8221544	9	True				
ANR	8221988	CallExpression	return_error ( gs_error_VMerror )		8221544	0					
ANR	8221989	Callee	return_error		8221544	0					
ANR	8221990	Identifier	return_error		8221544	0					
ANR	8221991	ArgumentList	gs_error_VMerror		8221544	1					
ANR	8221992	Argument	gs_error_VMerror		8221544	0					
ANR	8221993	Identifier	gs_error_VMerror		8221544	0					
ANR	8221994	ExpressionStatement	"gs_image_t_init_mask ( & image , true )"	382:8:12182:12216	8221544	16	True				
ANR	8221995	CallExpression	"gs_image_t_init_mask ( & image , true )"		8221544	0					
ANR	8221996	Callee	gs_image_t_init_mask		8221544	0					
ANR	8221997	Identifier	gs_image_t_init_mask		8221544	0					
ANR	8221998	ArgumentList	& image		8221544	1					
ANR	8221999	Argument	& image		8221544	0					
ANR	8222000	UnaryOperationExpression	& image		8221544	0					
ANR	8222001	UnaryOperator	&		8221544	0					
ANR	8222002	Identifier	image		8221544	1					
ANR	8222003	Argument	true		8221544	1					
ANR	8222004	Identifier	true		8221544	0					
ANR	8222005	ExpressionStatement	image . Width = psbm -> width << 3	383:8:12226:12256	8221544	17	True				
ANR	8222006	AssignmentExpression	image . Width = psbm -> width << 3		8221544	0		=			
ANR	8222007	MemberAccess	image . Width		8221544	0					
ANR	8222008	Identifier	image		8221544	0					
ANR	8222009	Identifier	Width		8221544	1					
ANR	8222010	ShiftExpression	psbm -> width << 3		8221544	1		<<			
ANR	8222011	PtrMemberAccess	psbm -> width		8221544	0					
ANR	8222012	Identifier	psbm		8221544	0					
ANR	8222013	Identifier	width		8221544	1					
ANR	8222014	PrimaryExpression	3		8221544	1					
ANR	8222015	ExpressionStatement	image . Height = psbm -> depth	384:8:12266:12292	8221544	18	True				
ANR	8222016	AssignmentExpression	image . Height = psbm -> depth		8221544	0		=			
ANR	8222017	MemberAccess	image . Height		8221544	0					
ANR	8222018	Identifier	image		8221544	0					
ANR	8222019	Identifier	Height		8221544	1					
ANR	8222020	PtrMemberAccess	psbm -> depth		8221544	1					
ANR	8222021	Identifier	psbm		8221544	0					
ANR	8222022	Identifier	depth		8221544	1					
ANR	8222023	ExpressionStatement	gs_make_identity ( & image . ImageMatrix )	385:8:12302:12338	8221544	19	True				
ANR	8222024	CallExpression	gs_make_identity ( & image . ImageMatrix )		8221544	0					
ANR	8222025	Callee	gs_make_identity		8221544	0					
ANR	8222026	Identifier	gs_make_identity		8221544	0					
ANR	8222027	ArgumentList	& image . ImageMatrix		8221544	1					
ANR	8222028	Argument	& image . ImageMatrix		8221544	0					
ANR	8222029	UnaryOperationExpression	& image . ImageMatrix		8221544	0					
ANR	8222030	UnaryOperator	&		8221544	0					
ANR	8222031	MemberAccess	image . ImageMatrix		8221544	1					
ANR	8222032	Identifier	image		8221544	0					
ANR	8222033	Identifier	ImageMatrix		8221544	1					
ANR	8222034	ExpressionStatement	image . ImageMatrix . tx = - psbm -> xorigin / 16.0	386:8:12348:12392	8221544	20	True				
ANR	8222035	AssignmentExpression	image . ImageMatrix . tx = - psbm -> xorigin / 16.0		8221544	0		=			
ANR	8222036	MemberAccess	image . ImageMatrix . tx		8221544	0					
ANR	8222037	MemberAccess	image . ImageMatrix		8221544	0					
ANR	8222038	Identifier	image		8221544	0					
ANR	8222039	Identifier	ImageMatrix		8221544	1					
ANR	8222040	Identifier	tx		8221544	1					
ANR	8222041	MultiplicativeExpression	- psbm -> xorigin / 16.0		8221544	1		/			
ANR	8222042	UnaryOperationExpression	- psbm -> xorigin		8221544	0					
ANR	8222043	UnaryOperator	-		8221544	0					
ANR	8222044	PtrMemberAccess	psbm -> xorigin		8221544	1					
ANR	8222045	Identifier	psbm		8221544	0					
ANR	8222046	Identifier	xorigin		8221544	1					
ANR	8222047	PrimaryExpression	16.0		8221544	1					
ANR	8222048	ExpressionStatement	image . ImageMatrix . ty = psbm -> yorigin / 16.0	387:8:12402:12445	8221544	21	True				
ANR	8222049	AssignmentExpression	image . ImageMatrix . ty = psbm -> yorigin / 16.0		8221544	0		=			
ANR	8222050	MemberAccess	image . ImageMatrix . ty		8221544	0					
ANR	8222051	MemberAccess	image . ImageMatrix		8221544	0					
ANR	8222052	Identifier	image		8221544	0					
ANR	8222053	Identifier	ImageMatrix		8221544	1					
ANR	8222054	Identifier	ty		8221544	1					
ANR	8222055	MultiplicativeExpression	psbm -> yorigin / 16.0		8221544	1		/			
ANR	8222056	PtrMemberAccess	psbm -> yorigin		8221544	0					
ANR	8222057	Identifier	psbm		8221544	0					
ANR	8222058	Identifier	yorigin		8221544	1					
ANR	8222059	PrimaryExpression	16.0		8221544	1					
ANR	8222060	ExpressionStatement	image . adjust = true	388:8:12455:12474	8221544	22	True				
ANR	8222061	AssignmentExpression	image . adjust = true		8221544	0		=			
ANR	8222062	MemberAccess	image . adjust		8221544	0					
ANR	8222063	Identifier	image		8221544	0					
ANR	8222064	Identifier	adjust		8221544	1					
ANR	8222065	Identifier	true		8221544	1					
ANR	8222066	ExpressionStatement	"code = pl_image_bitmap_char ( ienum , & image , ( byte * ) psbm -> bm , psbm -> width , 0 , NULL , pgs )"	389:8:12484:12680	8221544	23	True				
ANR	8222067	AssignmentExpression	"code = pl_image_bitmap_char ( ienum , & image , ( byte * ) psbm -> bm , psbm -> width , 0 , NULL , pgs )"		8221544	0		=			
ANR	8222068	Identifier	code		8221544	0					
ANR	8222069	CallExpression	"pl_image_bitmap_char ( ienum , & image , ( byte * ) psbm -> bm , psbm -> width , 0 , NULL , pgs )"		8221544	1					
ANR	8222070	Callee	pl_image_bitmap_char		8221544	0					
ANR	8222071	Identifier	pl_image_bitmap_char		8221544	0					
ANR	8222072	ArgumentList	ienum		8221544	1					
ANR	8222073	Argument	ienum		8221544	0					
ANR	8222074	Identifier	ienum		8221544	0					
ANR	8222075	Argument	& image		8221544	1					
ANR	8222076	UnaryOperationExpression	& image		8221544	0					
ANR	8222077	UnaryOperator	&		8221544	0					
ANR	8222078	Identifier	image		8221544	1					
ANR	8222079	Argument	( byte * ) psbm -> bm		8221544	2					
ANR	8222080	CastExpression	( byte * ) psbm -> bm		8221544	0					
ANR	8222081	CastTarget	byte *		8221544	0					
ANR	8222082	PtrMemberAccess	psbm -> bm		8221544	1					
ANR	8222083	Identifier	psbm		8221544	0					
ANR	8222084	Identifier	bm		8221544	1					
ANR	8222085	Argument	psbm -> width		8221544	3					
ANR	8222086	PtrMemberAccess	psbm -> width		8221544	0					
ANR	8222087	Identifier	psbm		8221544	0					
ANR	8222088	Identifier	width		8221544	1					
ANR	8222089	Argument	0		8221544	4					
ANR	8222090	PrimaryExpression	0		8221544	0					
ANR	8222091	Argument	NULL		8221544	5					
ANR	8222092	Identifier	NULL		8221544	0					
ANR	8222093	Argument	pgs		8221544	6					
ANR	8222094	Identifier	pgs		8221544	0					
ANR	8222095	ExpressionStatement	"gs_free_object ( pgs -> memory , ienum , ""pl_ufst_make_char"" )"	393:8:12690:12745	8221544	24	True				
ANR	8222096	CallExpression	"gs_free_object ( pgs -> memory , ienum , ""pl_ufst_make_char"" )"		8221544	0					
ANR	8222097	Callee	gs_free_object		8221544	0					
ANR	8222098	Identifier	gs_free_object		8221544	0					
ANR	8222099	ArgumentList	pgs -> memory		8221544	1					
ANR	8222100	Argument	pgs -> memory		8221544	0					
ANR	8222101	PtrMemberAccess	pgs -> memory		8221544	0					
ANR	8222102	Identifier	pgs		8221544	0					
ANR	8222103	Identifier	memory		8221544	1					
ANR	8222104	Argument	ienum		8221544	1					
ANR	8222105	Identifier	ienum		8221544	0					
ANR	8222106	Argument	"""pl_ufst_make_char"""		8221544	2					
ANR	8222107	PrimaryExpression	"""pl_ufst_make_char"""		8221544	0					
ANR	8222108	Statement	MEMfree	394:8:12755:12761	8221544	25	True				
ANR	8222109	Statement	(	394:15:12762:12762	8221544	26	True				
ANR	8222110	Statement	FSA	394:16:12763:12765	8221544	27	True				
ANR	8222111	Statement	CACHE_POOL	394:20:12767:12776	8221544	28	True				
ANR	8222112	Statement	","	394:30:12777:12777	8221544	29	True				
ANR	8222113	Statement	memhdl	394:32:12779:12784	8221544	30	True				
ANR	8222114	Statement	)	394:38:12785:12785	8221544	31	True				
ANR	8222115	ExpressionStatement		394:39:12786:12786	8221544	32	True				
ANR	8222116	ExpressionStatement	"gs_setmatrix ( pgs , & sv_ctm )"	395:8:12796:12822	8221544	33	True				
ANR	8222117	CallExpression	"gs_setmatrix ( pgs , & sv_ctm )"		8221544	0					
ANR	8222118	Callee	gs_setmatrix		8221544	0					
ANR	8222119	Identifier	gs_setmatrix		8221544	0					
ANR	8222120	ArgumentList	pgs		8221544	1					
ANR	8222121	Argument	pgs		8221544	0					
ANR	8222122	Identifier	pgs		8221544	0					
ANR	8222123	Argument	& sv_ctm		8221544	1					
ANR	8222124	UnaryOperationExpression	& sv_ctm		8221544	0					
ANR	8222125	UnaryOperator	&		8221544	0					
ANR	8222126	Identifier	sv_ctm		8221544	1					
ANR	8222127	ReturnStatement	return ( code < 0 ? code : 0 ) ;	396:8:12832:12860	8221544	34	True				
ANR	8222128	ConditionalExpression	code < 0 ? code : 0		8221544	0					
ANR	8222129	Condition	code < 0		8221544	0					
ANR	8222130	RelationalExpression	code < 0		8221544	0		<			
ANR	8222131	Identifier	code		8221544	0					
ANR	8222132	PrimaryExpression	0		8221544	1					
ANR	8222133	Identifier	code		8221544	1					
ANR	8222134	PrimaryExpression	0		8221544	2					
ANR	8222135	ElseStatement	else		8221544	0					
ANR	8222136	CompoundStatement		101:8:3567:3578	8221544	0					
ANR	8222137	IdentifierDeclStatement	PIFOUTLINE pols = ( PIFOUTLINE ) MEMptr ( memhdl ) ;	399:8:12917:12962	8221544	0	True				
ANR	8222138	IdentifierDecl	pols = ( PIFOUTLINE ) MEMptr ( memhdl )		8221544	0					
ANR	8222139	IdentifierDeclType	PIFOUTLINE		8221544	0					
ANR	8222140	Identifier	pols		8221544	1					
ANR	8222141	AssignmentExpression	pols = ( PIFOUTLINE ) MEMptr ( memhdl )		8221544	2		=			
ANR	8222142	Identifier	pols		8221544	0					
ANR	8222143	CastExpression	( PIFOUTLINE ) MEMptr ( memhdl )		8221544	1					
ANR	8222144	CastTarget	PIFOUTLINE		8221544	0					
ANR	8222145	CallExpression	MEMptr ( memhdl )		8221544	1					
ANR	8222146	Callee	MEMptr		8221544	0					
ANR	8222147	Identifier	MEMptr		8221544	0					
ANR	8222148	ArgumentList	memhdl		8221544	1					
ANR	8222149	Argument	memhdl		8221544	0					
ANR	8222150	Identifier	memhdl		8221544	0					
ANR	8222151	IdentifierDeclStatement	"float scale = pow ( 2 , pols -> VLCpower ) ;"	400:8:12972:13008	8221544	1	True				
ANR	8222152	IdentifierDecl	"scale = pow ( 2 , pols -> VLCpower )"		8221544	0					
ANR	8222153	IdentifierDeclType	float		8221544	0					
ANR	8222154	Identifier	scale		8221544	1					
ANR	8222155	AssignmentExpression	"scale = pow ( 2 , pols -> VLCpower )"		8221544	2		=			
ANR	8222156	Identifier	scale		8221544	0					
ANR	8222157	CallExpression	"pow ( 2 , pols -> VLCpower )"		8221544	1					
ANR	8222158	Callee	pow		8221544	0					
ANR	8222159	Identifier	pow		8221544	0					
ANR	8222160	ArgumentList	2		8221544	1					
ANR	8222161	Argument	2		8221544	0					
ANR	8222162	PrimaryExpression	2		8221544	0					
ANR	8222163	Argument	pols -> VLCpower		8221544	1					
ANR	8222164	PtrMemberAccess	pols -> VLCpower		8221544	0					
ANR	8222165	Identifier	pols		8221544	0					
ANR	8222166	Identifier	VLCpower		8221544	1					
ANR	8222167	IdentifierDeclStatement	float wbox [ 6 ] ;	401:8:13018:13031	8221544	2	True				
ANR	8222168	IdentifierDecl	wbox [ 6 ]		8221544	0					
ANR	8222169	IdentifierDeclType	float [ 6 ]		8221544	0					
ANR	8222170	Identifier	wbox		8221544	1					
ANR	8222171	PrimaryExpression	6		8221544	2					
ANR	8222172	IdentifierDeclStatement	int code ;	402:8:13041:13049	8221544	3	True				
ANR	8222173	IdentifierDecl	code		8221544	0					
ANR	8222174	IdentifierDeclType	int		8221544	0					
ANR	8222175	Identifier	code		8221544	1					
ANR	8222176	IdentifierDeclStatement	gs_point aw ;	403:8:13059:13070	8221544	4	True				
ANR	8222177	IdentifierDecl	aw		8221544	0					
ANR	8222178	IdentifierDeclType	gs_point		8221544	0					
ANR	8222179	Identifier	aw		8221544	1					
ANR	8222180	ExpressionStatement	"gs_distance_transform ( ( double ) pols -> escapement / pols -> du_emx , 0.0 , & sv_ctm , & aw )"	406:8:13119:13231	8221544	5	True				
ANR	8222181	CallExpression	"gs_distance_transform ( ( double ) pols -> escapement / pols -> du_emx , 0.0 , & sv_ctm , & aw )"		8221544	0					
ANR	8222182	Callee	gs_distance_transform		8221544	0					
ANR	8222183	Identifier	gs_distance_transform		8221544	0					
ANR	8222184	ArgumentList	( double ) pols -> escapement / pols -> du_emx		8221544	1					
ANR	8222185	Argument	( double ) pols -> escapement / pols -> du_emx		8221544	0					
ANR	8222186	MultiplicativeExpression	( double ) pols -> escapement / pols -> du_emx		8221544	0		/			
ANR	8222187	CastExpression	( double ) pols -> escapement		8221544	0					
ANR	8222188	CastTarget	double		8221544	0					
ANR	8222189	PtrMemberAccess	pols -> escapement		8221544	1					
ANR	8222190	Identifier	pols		8221544	0					
ANR	8222191	Identifier	escapement		8221544	1					
ANR	8222192	PtrMemberAccess	pols -> du_emx		8221544	1					
ANR	8222193	Identifier	pols		8221544	0					
ANR	8222194	Identifier	du_emx		8221544	1					
ANR	8222195	Argument	0.0		8221544	1					
ANR	8222196	PrimaryExpression	0.0		8221544	0					
ANR	8222197	Argument	& sv_ctm		8221544	2					
ANR	8222198	UnaryOperationExpression	& sv_ctm		8221544	0					
ANR	8222199	UnaryOperator	&		8221544	0					
ANR	8222200	Identifier	sv_ctm		8221544	1					
ANR	8222201	Argument	& aw		8221544	3					
ANR	8222202	UnaryOperationExpression	& aw		8221544	0					
ANR	8222203	UnaryOperator	&		8221544	0					
ANR	8222204	Identifier	aw		8221544	1					
ANR	8222205	ExpressionStatement	wbox [ 0 ] = aw . x	408:8:13241:13255	8221544	6	True				
ANR	8222206	AssignmentExpression	wbox [ 0 ] = aw . x		8221544	0		=			
ANR	8222207	ArrayIndexing	wbox [ 0 ]		8221544	0					
ANR	8222208	Identifier	wbox		8221544	0					
ANR	8222209	PrimaryExpression	0		8221544	1					
ANR	8222210	MemberAccess	aw . x		8221544	1					
ANR	8222211	Identifier	aw		8221544	0					
ANR	8222212	Identifier	x		8221544	1					
ANR	8222213	ExpressionStatement	wbox [ 1 ] = aw . y	409:8:13265:13279	8221544	7	True				
ANR	8222214	AssignmentExpression	wbox [ 1 ] = aw . y		8221544	0		=			
ANR	8222215	ArrayIndexing	wbox [ 1 ]		8221544	0					
ANR	8222216	Identifier	wbox		8221544	0					
ANR	8222217	PrimaryExpression	1		8221544	1					
ANR	8222218	MemberAccess	aw . y		8221544	1					
ANR	8222219	Identifier	aw		8221544	0					
ANR	8222220	Identifier	y		8221544	1					
ANR	8222221	ExpressionStatement	wbox [ 2 ] = scale * pols -> left	410:8:13289:13317	8221544	8	True				
ANR	8222222	AssignmentExpression	wbox [ 2 ] = scale * pols -> left		8221544	0		=			
ANR	8222223	ArrayIndexing	wbox [ 2 ]		8221544	0					
ANR	8222224	Identifier	wbox		8221544	0					
ANR	8222225	PrimaryExpression	2		8221544	1					
ANR	8222226	MultiplicativeExpression	scale * pols -> left		8221544	1		*			
ANR	8222227	Identifier	scale		8221544	0					
ANR	8222228	PtrMemberAccess	pols -> left		8221544	1					
ANR	8222229	Identifier	pols		8221544	0					
ANR	8222230	Identifier	left		8221544	1					
ANR	8222231	ExpressionStatement	wbox [ 3 ] = scale * pols -> bottom	411:8:13327:13357	8221544	9	True				
ANR	8222232	AssignmentExpression	wbox [ 3 ] = scale * pols -> bottom		8221544	0		=			
ANR	8222233	ArrayIndexing	wbox [ 3 ]		8221544	0					
ANR	8222234	Identifier	wbox		8221544	0					
ANR	8222235	PrimaryExpression	3		8221544	1					
ANR	8222236	MultiplicativeExpression	scale * pols -> bottom		8221544	1		*			
ANR	8222237	Identifier	scale		8221544	0					
ANR	8222238	PtrMemberAccess	pols -> bottom		8221544	1					
ANR	8222239	Identifier	pols		8221544	0					
ANR	8222240	Identifier	bottom		8221544	1					
ANR	8222241	ExpressionStatement	wbox [ 4 ] = scale * pols -> right	412:8:13367:13396	8221544	10	True				
ANR	8222242	AssignmentExpression	wbox [ 4 ] = scale * pols -> right		8221544	0		=			
ANR	8222243	ArrayIndexing	wbox [ 4 ]		8221544	0					
ANR	8222244	Identifier	wbox		8221544	0					
ANR	8222245	PrimaryExpression	4		8221544	1					
ANR	8222246	MultiplicativeExpression	scale * pols -> right		8221544	1		*			
ANR	8222247	Identifier	scale		8221544	0					
ANR	8222248	PtrMemberAccess	pols -> right		8221544	1					
ANR	8222249	Identifier	pols		8221544	0					
ANR	8222250	Identifier	right		8221544	1					
ANR	8222251	ExpressionStatement	wbox [ 5 ] = scale * pols -> top	413:8:13406:13433	8221544	11	True				
ANR	8222252	AssignmentExpression	wbox [ 5 ] = scale * pols -> top		8221544	0		=			
ANR	8222253	ArrayIndexing	wbox [ 5 ]		8221544	0					
ANR	8222254	Identifier	wbox		8221544	0					
ANR	8222255	PrimaryExpression	5		8221544	1					
ANR	8222256	MultiplicativeExpression	scale * pols -> top		8221544	1		*			
ANR	8222257	Identifier	scale		8221544	0					
ANR	8222258	PtrMemberAccess	pols -> top		8221544	1					
ANR	8222259	Identifier	pols		8221544	0					
ANR	8222260	Identifier	top		8221544	1					
ANR	8222261	IfStatement	if ( status == ERR_fixed_space )		8221544	12					
ANR	8222262	Condition	status == ERR_fixed_space	415:12:13448:13472	8221544	0	True				
ANR	8222263	EqualityExpression	status == ERR_fixed_space		8221544	0		==			
ANR	8222264	Identifier	status		8221544	0					
ANR	8222265	Identifier	ERR_fixed_space		8221544	1					
ANR	8222266	CompoundStatement		113:39:3983:3983	8221544	1					
ANR	8222267	Statement	MEMfree	416:12:13489:13495	8221544	0	True				
ANR	8222268	Statement	(	416:19:13496:13496	8221544	1	True				
ANR	8222269	Statement	FSA	416:20:13497:13499	8221544	2	True				
ANR	8222270	Statement	CACHE_POOL	416:24:13501:13510	8221544	3	True				
ANR	8222271	Statement	","	416:34:13511:13511	8221544	4	True				
ANR	8222272	Statement	memhdl	416:36:13513:13518	8221544	5	True				
ANR	8222273	Statement	)	416:42:13519:13519	8221544	6	True				
ANR	8222274	ExpressionStatement		416:43:13520:13520	8221544	7	True				
ANR	8222275	ExpressionStatement	"code = gs_setcharwidth ( penum , pgs , wbox [ 0 ] , wbox [ 1 ] )"	417:12:13534:13586	8221544	8	True				
ANR	8222276	AssignmentExpression	"code = gs_setcharwidth ( penum , pgs , wbox [ 0 ] , wbox [ 1 ] )"		8221544	0		=			
ANR	8222277	Identifier	code		8221544	0					
ANR	8222278	CallExpression	"gs_setcharwidth ( penum , pgs , wbox [ 0 ] , wbox [ 1 ] )"		8221544	1					
ANR	8222279	Callee	gs_setcharwidth		8221544	0					
ANR	8222280	Identifier	gs_setcharwidth		8221544	0					
ANR	8222281	ArgumentList	penum		8221544	1					
ANR	8222282	Argument	penum		8221544	0					
ANR	8222283	Identifier	penum		8221544	0					
ANR	8222284	Argument	pgs		8221544	1					
ANR	8222285	Identifier	pgs		8221544	0					
ANR	8222286	Argument	wbox [ 0 ]		8221544	2					
ANR	8222287	ArrayIndexing	wbox [ 0 ]		8221544	0					
ANR	8222288	Identifier	wbox		8221544	0					
ANR	8222289	PrimaryExpression	0		8221544	1					
ANR	8222290	Argument	wbox [ 1 ]		8221544	3					
ANR	8222291	ArrayIndexing	wbox [ 1 ]		8221544	0					
ANR	8222292	Identifier	wbox		8221544	0					
ANR	8222293	PrimaryExpression	1		8221544	1					
ANR	8222294	ExpressionStatement	"gs_setmatrix ( pgs , & sv_ctm )"	418:12:13600:13626	8221544	9	True				
ANR	8222295	CallExpression	"gs_setmatrix ( pgs , & sv_ctm )"		8221544	0					
ANR	8222296	Callee	gs_setmatrix		8221544	0					
ANR	8222297	Identifier	gs_setmatrix		8221544	0					
ANR	8222298	ArgumentList	pgs		8221544	1					
ANR	8222299	Argument	pgs		8221544	0					
ANR	8222300	Identifier	pgs		8221544	0					
ANR	8222301	Argument	& sv_ctm		8221544	1					
ANR	8222302	UnaryOperationExpression	& sv_ctm		8221544	0					
ANR	8222303	UnaryOperator	&		8221544	0					
ANR	8222304	Identifier	sv_ctm		8221544	1					
ANR	8222305	ReturnStatement	return code ;	419:12:13640:13651	8221544	10	True				
ANR	8222306	Identifier	code		8221544	0					
ANR	8222307	ElseStatement	else		8221544	0					
ANR	8222308	IfStatement	"if ( ( code = gs_setcachedevice ( penum , pgs , wbox ) ) < 0 )"		8221544	0					
ANR	8222309	Condition	"( code = gs_setcachedevice ( penum , pgs , wbox ) ) < 0"	420:19:13672:13719	8221544	0	True				
ANR	8222310	RelationalExpression	"( code = gs_setcachedevice ( penum , pgs , wbox ) ) < 0"		8221544	0		<			
ANR	8222311	AssignmentExpression	"code = gs_setcachedevice ( penum , pgs , wbox )"		8221544	0		=			
ANR	8222312	Identifier	code		8221544	0					
ANR	8222313	CallExpression	"gs_setcachedevice ( penum , pgs , wbox )"		8221544	1					
ANR	8222314	Callee	gs_setcachedevice		8221544	0					
ANR	8222315	Identifier	gs_setcachedevice		8221544	0					
ANR	8222316	ArgumentList	penum		8221544	1					
ANR	8222317	Argument	penum		8221544	0					
ANR	8222318	Identifier	penum		8221544	0					
ANR	8222319	Argument	pgs		8221544	1					
ANR	8222320	Identifier	pgs		8221544	0					
ANR	8222321	Argument	wbox		8221544	2					
ANR	8222322	Identifier	wbox		8221544	0					
ANR	8222323	PrimaryExpression	0		8221544	1					
ANR	8222324	CompoundStatement		118:69:4230:4230	8221544	1					
ANR	8222325	Statement	MEMfree	421:12:13736:13742	8221544	0	True				
ANR	8222326	Statement	(	421:19:13743:13743	8221544	1	True				
ANR	8222327	Statement	FSA	421:20:13744:13746	8221544	2	True				
ANR	8222328	Statement	CACHE_POOL	421:24:13748:13757	8221544	3	True				
ANR	8222329	Statement	","	421:34:13758:13758	8221544	4	True				
ANR	8222330	Statement	memhdl	421:36:13760:13765	8221544	5	True				
ANR	8222331	Statement	)	421:42:13766:13766	8221544	6	True				
ANR	8222332	ExpressionStatement		421:43:13767:13767	8221544	7	True				
ANR	8222333	ExpressionStatement	"gs_setmatrix ( pgs , & sv_ctm )"	422:12:13781:13807	8221544	8	True				
ANR	8222334	CallExpression	"gs_setmatrix ( pgs , & sv_ctm )"		8221544	0					
ANR	8222335	Callee	gs_setmatrix		8221544	0					
ANR	8222336	Identifier	gs_setmatrix		8221544	0					
ANR	8222337	ArgumentList	pgs		8221544	1					
ANR	8222338	Argument	pgs		8221544	0					
ANR	8222339	Identifier	pgs		8221544	0					
ANR	8222340	Argument	& sv_ctm		8221544	1					
ANR	8222341	UnaryOperationExpression	& sv_ctm		8221544	0					
ANR	8222342	UnaryOperator	&		8221544	0					
ANR	8222343	Identifier	sv_ctm		8221544	1					
ANR	8222344	ReturnStatement	return code ;	423:12:13821:13832	8221544	9	True				
ANR	8222345	Identifier	code		8221544	0					
ANR	8222346	ExpressionStatement	"code = image_outline_char ( pols , & pgs -> ctm , pgs -> path , pfont , outline_sub_for_bitmap )"	426:8:13853:13980	8221544	13	True				
ANR	8222347	AssignmentExpression	"code = image_outline_char ( pols , & pgs -> ctm , pgs -> path , pfont , outline_sub_for_bitmap )"		8221544	0		=			
ANR	8222348	Identifier	code		8221544	0					
ANR	8222349	CallExpression	"image_outline_char ( pols , & pgs -> ctm , pgs -> path , pfont , outline_sub_for_bitmap )"		8221544	1					
ANR	8222350	Callee	image_outline_char		8221544	0					
ANR	8222351	Identifier	image_outline_char		8221544	0					
ANR	8222352	ArgumentList	pols		8221544	1					
ANR	8222353	Argument	pols		8221544	0					
ANR	8222354	Identifier	pols		8221544	0					
ANR	8222355	Argument	& pgs -> ctm		8221544	1					
ANR	8222356	UnaryOperationExpression	& pgs -> ctm		8221544	0					
ANR	8222357	UnaryOperator	&		8221544	0					
ANR	8222358	PtrMemberAccess	pgs -> ctm		8221544	1					
ANR	8222359	Identifier	pgs		8221544	0					
ANR	8222360	Identifier	ctm		8221544	1					
ANR	8222361	Argument	pgs -> path		8221544	2					
ANR	8222362	PtrMemberAccess	pgs -> path		8221544	0					
ANR	8222363	Identifier	pgs		8221544	0					
ANR	8222364	Identifier	path		8221544	1					
ANR	8222365	Argument	pfont		8221544	3					
ANR	8222366	Identifier	pfont		8221544	0					
ANR	8222367	Argument	outline_sub_for_bitmap		8221544	4					
ANR	8222368	Identifier	outline_sub_for_bitmap		8221544	0					
ANR	8222369	IfStatement	if ( code >= 0 )		8221544	14					
ANR	8222370	Condition	code >= 0	429:12:13994:14002	8221544	0	True				
ANR	8222371	RelationalExpression	code >= 0		8221544	0		>=			
ANR	8222372	Identifier	code		8221544	0					
ANR	8222373	PrimaryExpression	0		8221544	1					
ANR	8222374	CompoundStatement		127:23:4513:4513	8221544	1					
ANR	8222375	ExpressionStatement	code = gs_fill ( pgs )	430:12:14019:14038	8221544	0	True				
ANR	8222376	AssignmentExpression	code = gs_fill ( pgs )		8221544	0		=			
ANR	8222377	Identifier	code		8221544	0					
ANR	8222378	CallExpression	gs_fill ( pgs )		8221544	1					
ANR	8222379	Callee	gs_fill		8221544	0					
ANR	8222380	Identifier	gs_fill		8221544	0					
ANR	8222381	ArgumentList	pgs		8221544	1					
ANR	8222382	Argument	pgs		8221544	0					
ANR	8222383	Identifier	pgs		8221544	0					
ANR	8222384	Statement	MEMfree	432:8:14058:14064	8221544	15	True				
ANR	8222385	Statement	(	432:15:14065:14065	8221544	16	True				
ANR	8222386	Statement	FSA	432:16:14066:14068	8221544	17	True				
ANR	8222387	Statement	CACHE_POOL	432:20:14070:14079	8221544	18	True				
ANR	8222388	Statement	","	432:30:14080:14080	8221544	19	True				
ANR	8222389	Statement	memhdl	432:32:14082:14087	8221544	20	True				
ANR	8222390	Statement	)	432:38:14088:14088	8221544	21	True				
ANR	8222391	ExpressionStatement		432:39:14089:14089	8221544	22	True				
ANR	8222392	ExpressionStatement	"gs_setmatrix ( pgs , & sv_ctm )"	433:8:14099:14125	8221544	23	True				
ANR	8222393	CallExpression	"gs_setmatrix ( pgs , & sv_ctm )"		8221544	0					
ANR	8222394	Callee	gs_setmatrix		8221544	0					
ANR	8222395	Identifier	gs_setmatrix		8221544	0					
ANR	8222396	ArgumentList	pgs		8221544	1					
ANR	8222397	Argument	pgs		8221544	0					
ANR	8222398	Identifier	pgs		8221544	0					
ANR	8222399	Argument	& sv_ctm		8221544	1					
ANR	8222400	UnaryOperationExpression	& sv_ctm		8221544	0					
ANR	8222401	UnaryOperator	&		8221544	0					
ANR	8222402	Identifier	sv_ctm		8221544	1					
ANR	8222403	ReturnStatement	return ( code < 0 ? code : 0 ) ;	434:8:14135:14163	8221544	24	True				
ANR	8222404	ConditionalExpression	code < 0 ? code : 0		8221544	0					
ANR	8222405	Condition	code < 0		8221544	0					
ANR	8222406	RelationalExpression	code < 0		8221544	0		<			
ANR	8222407	Identifier	code		8221544	0					
ANR	8222408	PrimaryExpression	0		8221544	1					
ANR	8222409	Identifier	code		8221544	1					
ANR	8222410	PrimaryExpression	0		8221544	2					
ANR	8222411	ReturnType	static int		8221544	1					
ANR	8222412	Identifier	pl_ufst_make_char		8221544	2					
ANR	8222413	ParameterList	"gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , FONTCONTEXT * pfc"		8221544	3					
ANR	8222414	Parameter	gs_show_enum * penum	300:18:9367:9386	8221544	0	True				
ANR	8222415	ParameterType	gs_show_enum *		8221544	0					
ANR	8222416	Identifier	penum		8221544	1					
ANR	8222417	Parameter	gs_gstate * pgs	301:18:9407:9421	8221544	1	True				
ANR	8222418	ParameterType	gs_gstate *		8221544	0					
ANR	8222419	Identifier	pgs		8221544	1					
ANR	8222420	Parameter	gs_font * pfont	302:18:9442:9456	8221544	2	True				
ANR	8222421	ParameterType	gs_font *		8221544	0					
ANR	8222422	Identifier	pfont		8221544	1					
ANR	8222423	Parameter	gs_char chr	302:35:9459:9469	8221544	3	True				
ANR	8222424	ParameterType	gs_char		8221544	0					
ANR	8222425	Identifier	chr		8221544	1					
ANR	8222426	Parameter	FONTCONTEXT * pfc	302:48:9472:9488	8221544	4	True				
ANR	8222427	ParameterType	FONTCONTEXT *		8221544	0					
ANR	8222428	Identifier	pfc		8221544	1					
ANR	8222429	CFGEntryNode	ENTRY		8221544		True				
ANR	8222430	CFGExitNode	EXIT		8221544		True				
ANR	8222431	Symbol	psbm -> top_indent		8221544						
ANR	8222432	Symbol	& tmp_ctm		8221544						
ANR	8222433	Symbol	image_outline_char		8221544						
ANR	8222434	Symbol	pgs -> char_tm_valid		8221544						
ANR	8222435	Symbol	image . ImageMatrix		8221544						
ANR	8222436	Symbol	* pgs		8221544						
ANR	8222437	Symbol	* wbox		8221544						
ANR	8222438	Symbol	ERR_bm_gt_oron		8221544						
ANR	8222439	Symbol	~FC_BITMAP_TYPE		8221544						
ANR	8222440	Symbol	pols -> escapement		8221544						
ANR	8222441	Symbol	psbm -> yorigin		8221544						
ANR	8222442	Symbol	pl_image_bitmap_char		8221544						
ANR	8222443	Symbol	wasValid		8221544						
ANR	8222444	Symbol	ienum		8221544						
ANR	8222445	Symbol	image		8221544						
ANR	8222446	Symbol	& image		8221544						
ANR	8222447	Symbol	NULL		8221544						
ANR	8222448	Symbol	penum		8221544						
ANR	8222449	Symbol	sv_ctm		8221544						
ANR	8222450	Symbol	chr		8221544						
ANR	8222451	Symbol	pfc		8221544						
ANR	8222452	Symbol	sv_ctm . ty		8221544						
ANR	8222453	Symbol	ERRdu_pix_range		8221544						
ANR	8222454	Symbol	sv_ctm . tx		8221544						
ANR	8222455	Symbol	psbm -> escapement		8221544						
ANR	8222456	Symbol	aw		8221544						
ANR	8222457	Symbol	true		8221544						
ANR	8222458	Symbol	memhdl		8221544						
ANR	8222459	Symbol	pols -> bottom		8221544						
ANR	8222460	Symbol	psbm		8221544						
ANR	8222461	Symbol	& image . ImageMatrix		8221544						
ANR	8222462	Symbol	aw . x		8221544						
ANR	8222463	Symbol	status		8221544						
ANR	8222464	Symbol	aw . y		8221544						
ANR	8222465	Symbol	gs_fill		8221544						
ANR	8222466	Symbol	image . Width		8221544						
ANR	8222467	Symbol	wbox		8221544						
ANR	8222468	Symbol	code		8221544						
ANR	8222469	Symbol	gs_image_enum_alloc		8221544						
ANR	8222470	Symbol	psbm -> bm		8221544						
ANR	8222471	Symbol	psbm -> black_depth		8221544						
ANR	8222472	Symbol	psbm -> depth		8221544						
ANR	8222473	Symbol	outline_sub_for_bitmap		8221544						
ANR	8222474	Symbol	tmp_ctm . ty		8221544						
ANR	8222475	Symbol	psbm -> black_width		8221544						
ANR	8222476	Symbol	tmp_ctm . tx		8221544						
ANR	8222477	Symbol	pols -> left		8221544						
ANR	8222478	Symbol	scale		8221544						
ANR	8222479	Symbol	pgs -> path		8221544						
ANR	8222480	Symbol	image . ImageMatrix . ty		8221544						
ANR	8222481	Symbol	gs_setcharwidth		8221544						
ANR	8222482	Symbol	pols -> right		8221544						
ANR	8222483	Symbol	MEMptr		8221544						
ANR	8222484	Symbol	image . ImageMatrix . tx		8221544						
ANR	8222485	Symbol	ERR_fixed_space		8221544						
ANR	8222486	Symbol	psbm -> du_emx		8221544						
ANR	8222487	Symbol	chIdloc		8221544						
ANR	8222488	Symbol	FC_ISBITMAP		8221544						
ANR	8222489	Symbol	* pfc		8221544						
ANR	8222490	Symbol	psbm -> width		8221544						
ANR	8222491	Symbol	pow		8221544						
ANR	8222492	Symbol	pols -> du_emx		8221544						
ANR	8222493	Symbol	pgs		8221544						
ANR	8222494	Symbol	pgs -> memory		8221544						
ANR	8222495	Symbol	tmp_ctm		8221544						
ANR	8222496	Symbol	* pols		8221544						
ANR	8222497	Symbol	pols -> VLCpower		8221544						
ANR	8222498	Symbol	& aw		8221544						
ANR	8222499	Symbol	pfc -> format		8221544						
ANR	8222500	Symbol	pfont		8221544						
ANR	8222501	Symbol	& sv_ctm		8221544						
ANR	8222502	Symbol	* psbm		8221544						
ANR	8222503	Symbol	false		8221544						
ANR	8222504	Symbol	image . Height		8221544						
ANR	8222505	Symbol	psbm -> left_indent		8221544						
ANR	8222506	Symbol	psbm -> xorigin		8221544						
ANR	8222507	Symbol	gs_error_VMerror		8221544						
ANR	8222508	Symbol	pols		8221544						
ANR	8222509	Symbol	image . adjust		8221544						
ANR	8222510	Symbol	pols -> top		8221544						
ANR	8222511	Symbol	& pgs -> ctm		8221544						
ANR	8222512	Symbol	ERR_bm_buff		8221544						
ANR	8222513	Symbol	FC_CUBIC_TYPE		8221544						
ANR	8222514	Symbol	gs_setcachedevice		8221544						
ANR	8222515	Function	pl_mt_encode_char	443:0:14342:14464							
ANR	8222516	FunctionDef	"pl_mt_encode_char (gs_font * pfont , gs_char pchr , gs_glyph_space_t not_used)"		8222515	0					
ANR	8222517	CompoundStatement		445:0:14434:14464	8222515	0					
ANR	8222518	ReturnStatement	return ( gs_glyph ) pchr ;	446:4:14440:14462	8222515	0	True				
ANR	8222519	CastExpression	( gs_glyph ) pchr		8222515	0					
ANR	8222520	CastTarget	gs_glyph		8222515	0					
ANR	8222521	Identifier	pchr		8222515	1					
ANR	8222522	ReturnType	static gs_glyph		8222515	1					
ANR	8222523	Identifier	pl_mt_encode_char		8222515	2					
ANR	8222524	ParameterList	"gs_font * pfont , gs_char pchr , gs_glyph_space_t not_used"		8222515	3					
ANR	8222525	Parameter	gs_font * pfont	444:18:14376:14390	8222515	0	True				
ANR	8222526	ParameterType	gs_font *		8222515	0					
ANR	8222527	Identifier	pfont		8222515	1					
ANR	8222528	Parameter	gs_char pchr	444:35:14393:14404	8222515	1	True				
ANR	8222529	ParameterType	gs_char		8222515	0					
ANR	8222530	Identifier	pchr		8222515	1					
ANR	8222531	Parameter	gs_glyph_space_t not_used	444:49:14407:14431	8222515	2	True				
ANR	8222532	ParameterType	gs_glyph_space_t		8222515	0					
ANR	8222533	Identifier	not_used		8222515	1					
ANR	8222534	CFGEntryNode	ENTRY		8222515		True				
ANR	8222535	CFGExitNode	EXIT		8222515		True				
ANR	8222536	Symbol	not_used		8222515						
ANR	8222537	Symbol	pfont		8222515						
ANR	8222538	Symbol	pchr		8222515						
ANR	8222539	Function	pl_set_mt_font	452:0:14527:14965							
ANR	8222540	FunctionDef	"pl_set_mt_font (gs_gstate * pgs , const pl_font_t * plfont , int need_outline , FONTCONTEXT * pfc)"		8222539	0					
ANR	8222541	CompoundStatement		455:0:14648:14965	8222539	0					
ANR	8222542	ExpressionStatement	"pl_init_fc ( plfont , pgs , need_outline , pfc , pgs == NULL )"	456:4:14654:14748	8222539	0	True				
ANR	8222543	CallExpression	"pl_init_fc ( plfont , pgs , need_outline , pfc , pgs == NULL )"		8222539	0					
ANR	8222544	Callee	pl_init_fc		8222539	0					
ANR	8222545	Identifier	pl_init_fc		8222539	0					
ANR	8222546	ArgumentList	plfont		8222539	1					
ANR	8222547	Argument	plfont		8222539	0					
ANR	8222548	Identifier	plfont		8222539	0					
ANR	8222549	Argument	pgs		8222539	1					
ANR	8222550	Identifier	pgs		8222539	0					
ANR	8222551	Argument	need_outline		8222539	2					
ANR	8222552	Identifier	need_outline		8222539	0					
ANR	8222553	Argument	pfc		8222539	3					
ANR	8222554	Identifier	pfc		8222539	0					
ANR	8222555	Argument	pgs == NULL		8222539	4					
ANR	8222556	EqualityExpression	pgs == NULL		8222539	0		==			
ANR	8222557	Identifier	pgs		8222539	0					
ANR	8222558	Identifier	NULL		8222539	1					
ANR	8222559	ExpressionStatement	pfc -> font_id = ( ( gs_font_base * ) ( plfont -> pfont ) ) -> UID . id	458:4:14754:14811	8222539	1	True				
ANR	8222560	AssignmentExpression	pfc -> font_id = ( ( gs_font_base * ) ( plfont -> pfont ) ) -> UID . id		8222539	0		=			
ANR	8222561	PtrMemberAccess	pfc -> font_id		8222539	0					
ANR	8222562	Identifier	pfc		8222539	0					
ANR	8222563	Identifier	font_id		8222539	1					
ANR	8222564	MemberAccess	( ( gs_font_base * ) ( plfont -> pfont ) ) -> UID . id		8222539	1					
ANR	8222565	PtrMemberAccess	( ( gs_font_base * ) ( plfont -> pfont ) ) -> UID		8222539	0					
ANR	8222566	CastExpression	( gs_font_base * ) ( plfont -> pfont )		8222539	0					
ANR	8222567	CastTarget	gs_font_base *		8222539	0					
ANR	8222568	PtrMemberAccess	plfont -> pfont		8222539	1					
ANR	8222569	Identifier	plfont		8222539	0					
ANR	8222570	Identifier	pfont		8222539	1					
ANR	8222571	Identifier	UID		8222539	1					
ANR	8222572	Identifier	id		8222539	1					
ANR	8222573	ExpressionStatement	pfc -> format |= FC_ROM_TYPE | FC_NOUSBOUNDBOX	460:4:14838:14882	8222539	2	True				
ANR	8222574	AssignmentExpression	pfc -> format |= FC_ROM_TYPE | FC_NOUSBOUNDBOX		8222539	0		|=			
ANR	8222575	PtrMemberAccess	pfc -> format		8222539	0					
ANR	8222576	Identifier	pfc		8222539	0					
ANR	8222577	Identifier	format		8222539	1					
ANR	8222578	InclusiveOrExpression	FC_ROM_TYPE | FC_NOUSBOUNDBOX		8222539	1		|			
ANR	8222579	Identifier	FC_ROM_TYPE		8222539	0					
ANR	8222580	Identifier	FC_NOUSBOUNDBOX		8222539	1					
ANR	8222581	ExpressionStatement	pfc -> format |= FC_FCO_TYPE	462:4:14895:14921	8222539	3	True				
ANR	8222582	AssignmentExpression	pfc -> format |= FC_FCO_TYPE		8222539	0		|=			
ANR	8222583	PtrMemberAccess	pfc -> format		8222539	0					
ANR	8222584	Identifier	pfc		8222539	0					
ANR	8222585	Identifier	format		8222539	1					
ANR	8222586	Identifier	FC_FCO_TYPE		8222539	1					
ANR	8222587	ReturnStatement	"return pl_set_ufst_font ( plfont , pfc ) ;"	463:4:14927:14963	8222539	4	True				
ANR	8222588	CallExpression	"pl_set_ufst_font ( plfont , pfc )"		8222539	0					
ANR	8222589	Callee	pl_set_ufst_font		8222539	0					
ANR	8222590	Identifier	pl_set_ufst_font		8222539	0					
ANR	8222591	ArgumentList	plfont		8222539	1					
ANR	8222592	Argument	plfont		8222539	0					
ANR	8222593	Identifier	plfont		8222539	0					
ANR	8222594	Argument	pfc		8222539	1					
ANR	8222595	Identifier	pfc		8222539	0					
ANR	8222596	ReturnType	static int		8222539	1					
ANR	8222597	Identifier	pl_set_mt_font		8222539	2					
ANR	8222598	ParameterList	"gs_gstate * pgs , const pl_font_t * plfont , int need_outline , FONTCONTEXT * pfc"		8222539	3					
ANR	8222599	Parameter	gs_gstate * pgs	453:15:14553:14567	8222539	0	True				
ANR	8222600	ParameterType	gs_gstate *		8222539	0					
ANR	8222601	Identifier	pgs		8222539	1					
ANR	8222602	Parameter	const pl_font_t * plfont	454:15:14585:14608	8222539	1	True				
ANR	8222603	ParameterType	const pl_font_t *		8222539	0					
ANR	8222604	Identifier	plfont		8222539	1					
ANR	8222605	Parameter	int need_outline	454:41:14611:14626	8222539	2	True				
ANR	8222606	ParameterType	int		8222539	0					
ANR	8222607	Identifier	need_outline		8222539	1					
ANR	8222608	Parameter	FONTCONTEXT * pfc	454:59:14629:14645	8222539	3	True				
ANR	8222609	ParameterType	FONTCONTEXT *		8222539	0					
ANR	8222610	Identifier	pfc		8222539	1					
ANR	8222611	CFGEntryNode	ENTRY		8222539		True				
ANR	8222612	CFGExitNode	EXIT		8222539		True				
ANR	8222613	Symbol	pfc -> format		8222539						
ANR	8222614	Symbol	FC_FCO_TYPE		8222539						
ANR	8222615	Symbol	NULL		8222539						
ANR	8222616	Symbol	* plfont -> pfont		8222539						
ANR	8222617	Symbol	* * plfont		8222539						
ANR	8222618	Symbol	( ( gs_font_base * ) ( plfont -> pfont ) ) -> UID		8222539						
ANR	8222619	Symbol	plfont		8222539						
ANR	8222620	Symbol	pfc		8222539						
ANR	8222621	Symbol	FC_NOUSBOUNDBOX		8222539						
ANR	8222622	Symbol	pl_set_ufst_font		8222539						
ANR	8222623	Symbol	FC_ROM_TYPE		8222539						
ANR	8222624	Symbol	plfont -> pfont		8222539						
ANR	8222625	Symbol	* pfc		8222539						
ANR	8222626	Symbol	* plfont		8222539						
ANR	8222627	Symbol	pgs		8222539						
ANR	8222628	Symbol	need_outline		8222539						
ANR	8222629	Symbol	( ( gs_font_base * ) ( plfont -> pfont ) ) -> UID . id		8222539						
ANR	8222630	Symbol	pfc -> font_id		8222539						
ANR	8222631	Function	pl_mt_build_char	467:0:15004:15378							
ANR	8222632	FunctionDef	"pl_mt_build_char (gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph glyph)"		8222631	0					
ANR	8222633	CompoundStatement		470:0:15134:15378	8222631	0					
ANR	8222634	IdentifierDeclStatement	const pl_font_t * plfont = ( const pl_font_t * ) pfont -> client_data ;	471:4:15140:15203	8222631	0	True				
ANR	8222635	IdentifierDecl	* plfont = ( const pl_font_t * ) pfont -> client_data		8222631	0					
ANR	8222636	IdentifierDeclType	const pl_font_t *		8222631	0					
ANR	8222637	Identifier	plfont		8222631	1					
ANR	8222638	AssignmentExpression	* plfont = ( const pl_font_t * ) pfont -> client_data		8222631	2		=			
ANR	8222639	Identifier	plfont		8222631	0					
ANR	8222640	CastExpression	( const pl_font_t * ) pfont -> client_data		8222631	1					
ANR	8222641	CastTarget	const pl_font_t *		8222631	0					
ANR	8222642	PtrMemberAccess	pfont -> client_data		8222631	1					
ANR	8222643	Identifier	pfont		8222631	0					
ANR	8222644	Identifier	client_data		8222631	1					
ANR	8222645	IdentifierDeclStatement	FONTCONTEXT fc ;	472:4:15209:15223	8222631	1	True				
ANR	8222646	IdentifierDecl	fc		8222631	0					
ANR	8222647	IdentifierDeclType	FONTCONTEXT		8222631	0					
ANR	8222648	Identifier	fc		8222631	1					
ANR	8222649	IfStatement	"if ( pl_set_mt_font ( pgs , plfont , gs_show_in_charpath ( penum ) , & fc ) != 0 )"		8222631	2					
ANR	8222650	Condition	"pl_set_mt_font ( pgs , plfont , gs_show_in_charpath ( penum ) , & fc ) != 0"	474:8:15234:15298	8222631	0	True				
ANR	8222651	EqualityExpression	"pl_set_mt_font ( pgs , plfont , gs_show_in_charpath ( penum ) , & fc ) != 0"		8222631	0		!=			
ANR	8222652	CallExpression	"pl_set_mt_font ( pgs , plfont , gs_show_in_charpath ( penum ) , & fc )"		8222631	0					
ANR	8222653	Callee	pl_set_mt_font		8222631	0					
ANR	8222654	Identifier	pl_set_mt_font		8222631	0					
ANR	8222655	ArgumentList	pgs		8222631	1					
ANR	8222656	Argument	pgs		8222631	0					
ANR	8222657	Identifier	pgs		8222631	0					
ANR	8222658	Argument	plfont		8222631	1					
ANR	8222659	Identifier	plfont		8222631	0					
ANR	8222660	Argument	gs_show_in_charpath ( penum )		8222631	2					
ANR	8222661	CallExpression	gs_show_in_charpath ( penum )		8222631	0					
ANR	8222662	Callee	gs_show_in_charpath		8222631	0					
ANR	8222663	Identifier	gs_show_in_charpath		8222631	0					
ANR	8222664	ArgumentList	penum		8222631	1					
ANR	8222665	Argument	penum		8222631	0					
ANR	8222666	Identifier	penum		8222631	0					
ANR	8222667	Argument	& fc		8222631	3					
ANR	8222668	UnaryOperationExpression	& fc		8222631	0					
ANR	8222669	UnaryOperator	&		8222631	0					
ANR	8222670	Identifier	fc		8222631	1					
ANR	8222671	PrimaryExpression	0		8222631	1					
ANR	8222672	ReturnStatement	return 0 ;	475:8:15309:15317	8222631	1	True				
ANR	8222673	PrimaryExpression	0		8222631	0					
ANR	8222674	ReturnStatement	"return pl_ufst_make_char ( penum , pgs , pfont , chr , & fc ) ;"	476:4:15323:15376	8222631	3	True				
ANR	8222675	CallExpression	"pl_ufst_make_char ( penum , pgs , pfont , chr , & fc )"		8222631	0					
ANR	8222676	Callee	pl_ufst_make_char		8222631	0					
ANR	8222677	Identifier	pl_ufst_make_char		8222631	0					
ANR	8222678	ArgumentList	penum		8222631	1					
ANR	8222679	Argument	penum		8222631	0					
ANR	8222680	Identifier	penum		8222631	0					
ANR	8222681	Argument	pgs		8222631	1					
ANR	8222682	Identifier	pgs		8222631	0					
ANR	8222683	Argument	pfont		8222631	2					
ANR	8222684	Identifier	pfont		8222631	0					
ANR	8222685	Argument	chr		8222631	3					
ANR	8222686	Identifier	chr		8222631	0					
ANR	8222687	Argument	& fc		8222631	4					
ANR	8222688	UnaryOperationExpression	& fc		8222631	0					
ANR	8222689	UnaryOperator	&		8222631	0					
ANR	8222690	Identifier	fc		8222631	1					
ANR	8222691	ReturnType	static int		8222631	1					
ANR	8222692	Identifier	pl_mt_build_char		8222631	2					
ANR	8222693	ParameterList	"gs_show_enum * penum , gs_gstate * pgs , gs_font * pfont , gs_char chr , gs_glyph glyph"		8222631	3					
ANR	8222694	Parameter	gs_show_enum * penum	468:17:15032:15051	8222631	0	True				
ANR	8222695	ParameterType	gs_show_enum *		8222631	0					
ANR	8222696	Identifier	penum		8222631	1					
ANR	8222697	Parameter	gs_gstate * pgs	469:17:15071:15085	8222631	1	True				
ANR	8222698	ParameterType	gs_gstate *		8222631	0					
ANR	8222699	Identifier	pgs		8222631	1					
ANR	8222700	Parameter	gs_font * pfont	469:34:15088:15102	8222631	2	True				
ANR	8222701	ParameterType	gs_font *		8222631	0					
ANR	8222702	Identifier	pfont		8222631	1					
ANR	8222703	Parameter	gs_char chr	469:51:15105:15115	8222631	3	True				
ANR	8222704	ParameterType	gs_char		8222631	0					
ANR	8222705	Identifier	chr		8222631	1					
ANR	8222706	Parameter	gs_glyph glyph	469:64:15118:15131	8222631	4	True				
ANR	8222707	ParameterType	gs_glyph		8222631	0					
ANR	8222708	Identifier	glyph		8222631	1					
ANR	8222709	CFGEntryNode	ENTRY		8222631		True				
ANR	8222710	CFGExitNode	EXIT		8222631		True				
ANR	8222711	Symbol	gs_show_in_charpath		8222631						
ANR	8222712	Symbol	pl_set_mt_font		8222631						
ANR	8222713	Symbol	pfont		8222631						
ANR	8222714	Symbol	& fc		8222631						
ANR	8222715	Symbol	pl_ufst_make_char		8222631						
ANR	8222716	Symbol	penum		8222631						
ANR	8222717	Symbol	plfont		8222631						
ANR	8222718	Symbol	chr		8222631						
ANR	8222719	Symbol	pfont -> client_data		8222631						
ANR	8222720	Symbol	glyph		8222631						
ANR	8222721	Symbol	* pfont		8222631						
ANR	8222722	Symbol	pgs		8222631						
ANR	8222723	Symbol	fc		8222631						
ANR	8222724	DeclStmt									
ANR	8222725	Decl							int	int	list_size
ANR	8222726	DeclStmt									
ANR	8222727	Decl							struct pl_glyph_width_node_s	struct pl_glyph_width_node_s	pl_glyph_width_node_t
ANR	8222728	ClassDef	pl_glyph_width_node_s	484:0:15488:15610							
ANR	8222729	DeclStmt									
ANR	8222730	Decl							uint	uint	char_code
ANR	8222731	DeclStmt									
ANR	8222732	Decl							uint	uint	font_id
ANR	8222733	DeclStmt									
ANR	8222734	Decl							gs_point	gs_point	width
ANR	8222735	DeclStmt									
ANR	8222736	Decl							pl_glyph_width_node_t	pl_glyph_width_node_t *	next
ANR	8222737	DeclStmt									
ANR	8222738	Decl							pl_glyph_width_node_t	pl_glyph_width_node_t *	head
ANR	8222739	Function	pl_glyph_width_cache_node_add	496:0:15687:16432							
ANR	8222740	FunctionDef	"pl_glyph_width_cache_node_add (gs_memory_t * mem , gs_id font_id , uint char_code , gs_point * pwidth)"		8222739	0					
ANR	8222741	CompoundStatement		499:0:15827:16432	8222739	0					
ANR	8222742	IdentifierDeclStatement	"pl_glyph_width_node_t * node = ( pl_glyph_width_node_t * ) gs_alloc_bytes ( mem , sizeof ( pl_glyph_width_node_t ) , ""pl_glyph_width_cache_node_add"" ) ;"	500:4:15833:16128	8222739	0	True				
ANR	8222743	IdentifierDecl	"* node = ( pl_glyph_width_node_t * ) gs_alloc_bytes ( mem , sizeof ( pl_glyph_width_node_t ) , ""pl_glyph_width_cache_node_add"" )"		8222739	0					
ANR	8222744	IdentifierDeclType	pl_glyph_width_node_t *		8222739	0					
ANR	8222745	Identifier	node		8222739	1					
ANR	8222746	AssignmentExpression	"* node = ( pl_glyph_width_node_t * ) gs_alloc_bytes ( mem , sizeof ( pl_glyph_width_node_t ) , ""pl_glyph_width_cache_node_add"" )"		8222739	2		=			
ANR	8222747	Identifier	node		8222739	0					
ANR	8222748	CastExpression	"( pl_glyph_width_node_t * ) gs_alloc_bytes ( mem , sizeof ( pl_glyph_width_node_t ) , ""pl_glyph_width_cache_node_add"" )"		8222739	1					
ANR	8222749	CastTarget	pl_glyph_width_node_t *		8222739	0					
ANR	8222750	CallExpression	"gs_alloc_bytes ( mem , sizeof ( pl_glyph_width_node_t ) , ""pl_glyph_width_cache_node_add"" )"		8222739	1					
ANR	8222751	Callee	gs_alloc_bytes		8222739	0					
ANR	8222752	Identifier	gs_alloc_bytes		8222739	0					
ANR	8222753	ArgumentList	mem		8222739	1					
ANR	8222754	Argument	mem		8222739	0					
ANR	8222755	Identifier	mem		8222739	0					
ANR	8222756	Argument	sizeof ( pl_glyph_width_node_t )		8222739	1					
ANR	8222757	SizeofExpression	sizeof ( pl_glyph_width_node_t )		8222739	0					
ANR	8222758	Sizeof	sizeof		8222739	0					
ANR	8222759	SizeofOperand	pl_glyph_width_node_t		8222739	1					
ANR	8222760	Argument	"""pl_glyph_width_cache_node_add"""		8222739	2					
ANR	8222761	PrimaryExpression	"""pl_glyph_width_cache_node_add"""		8222739	0					
ANR	8222762	IfStatement	if ( node == NULL )		8222739	1					
ANR	8222763	Condition	node == NULL	506:8:16139:16150	8222739	0	True				
ANR	8222764	EqualityExpression	node == NULL		8222739	0		==			
ANR	8222765	Identifier	node		8222739	0					
ANR	8222766	Identifier	NULL		8222739	1					
ANR	8222767	ReturnStatement	return - 1 ;	507:8:16161:16170	8222739	1	True				
ANR	8222768	UnaryOperationExpression	- 1		8222739	0					
ANR	8222769	UnaryOperator	-		8222739	0					
ANR	8222770	PrimaryExpression	1		8222739	1					
ANR	8222771	IfStatement	if ( head == NULL )		8222739	2					
ANR	8222772	Condition	head == NULL	508:8:16180:16191	8222739	0	True				
ANR	8222773	EqualityExpression	head == NULL		8222739	0		==			
ANR	8222774	Identifier	head		8222739	0					
ANR	8222775	Identifier	NULL		8222739	1					
ANR	8222776	CompoundStatement		10:22:366:366	8222739	1					
ANR	8222777	ExpressionStatement	head = node	509:8:16204:16215	8222739	0	True				
ANR	8222778	AssignmentExpression	head = node		8222739	0		=			
ANR	8222779	Identifier	head		8222739	0					
ANR	8222780	Identifier	node		8222739	1					
ANR	8222781	ExpressionStatement	head -> next = NULL	510:8:16225:16242	8222739	1	True				
ANR	8222782	AssignmentExpression	head -> next = NULL		8222739	0		=			
ANR	8222783	PtrMemberAccess	head -> next		8222739	0					
ANR	8222784	Identifier	head		8222739	0					
ANR	8222785	Identifier	next		8222739	1					
ANR	8222786	Identifier	NULL		8222739	1					
ANR	8222787	ElseStatement	else		8222739	0					
ANR	8222788	CompoundStatement		13:11:427:427	8222739	0					
ANR	8222789	ExpressionStatement	node -> next = head	512:8:16265:16282	8222739	0	True				
ANR	8222790	AssignmentExpression	node -> next = head		8222739	0		=			
ANR	8222791	PtrMemberAccess	node -> next		8222739	0					
ANR	8222792	Identifier	node		8222739	0					
ANR	8222793	Identifier	next		8222739	1					
ANR	8222794	Identifier	head		8222739	1					
ANR	8222795	ExpressionStatement	head = node	513:8:16292:16303	8222739	1	True				
ANR	8222796	AssignmentExpression	head = node		8222739	0		=			
ANR	8222797	Identifier	head		8222739	0					
ANR	8222798	Identifier	node		8222739	1					
ANR	8222799	ExpressionStatement	head -> char_code = char_code	516:4:16316:16343	8222739	3	True				
ANR	8222800	AssignmentExpression	head -> char_code = char_code		8222739	0		=			
ANR	8222801	PtrMemberAccess	head -> char_code		8222739	0					
ANR	8222802	Identifier	head		8222739	0					
ANR	8222803	Identifier	char_code		8222739	1					
ANR	8222804	Identifier	char_code		8222739	1					
ANR	8222805	ExpressionStatement	head -> font_id = font_id	517:4:16349:16372	8222739	4	True				
ANR	8222806	AssignmentExpression	head -> font_id = font_id		8222739	0		=			
ANR	8222807	PtrMemberAccess	head -> font_id		8222739	0					
ANR	8222808	Identifier	head		8222739	0					
ANR	8222809	Identifier	font_id		8222739	1					
ANR	8222810	Identifier	font_id		8222739	1					
ANR	8222811	ExpressionStatement	head -> width = * pwidth	518:4:16378:16399	8222739	5	True				
ANR	8222812	AssignmentExpression	head -> width = * pwidth		8222739	0		=			
ANR	8222813	PtrMemberAccess	head -> width		8222739	0					
ANR	8222814	Identifier	head		8222739	0					
ANR	8222815	Identifier	width		8222739	1					
ANR	8222816	UnaryOperationExpression	* pwidth		8222739	1					
ANR	8222817	UnaryOperator	*		8222739	0					
ANR	8222818	Identifier	pwidth		8222739	1					
ANR	8222819	ExpressionStatement	list_size ++	519:4:16405:16416	8222739	6	True				
ANR	8222820	PostIncDecOperationExpression	list_size ++		8222739	0					
ANR	8222821	Identifier	list_size		8222739	0					
ANR	8222822	IncDec	++		8222739	1					
ANR	8222823	ReturnStatement	return 0 ;	520:4:16422:16430	8222739	7	True				
ANR	8222824	PrimaryExpression	0		8222739	0					
ANR	8222825	ReturnType	static int		8222739	1					
ANR	8222826	Identifier	pl_glyph_width_cache_node_add		8222739	2					
ANR	8222827	ParameterList	"gs_memory_t * mem , gs_id font_id , uint char_code , gs_point * pwidth"		8222739	3					
ANR	8222828	Parameter	gs_memory_t * mem	497:30:15728:15744	8222739	0	True				
ANR	8222829	ParameterType	gs_memory_t *		8222739	0					
ANR	8222830	Identifier	mem		8222739	1					
ANR	8222831	Parameter	gs_id font_id	497:49:15747:15759	8222739	1	True				
ANR	8222832	ParameterType	gs_id		8222739	0					
ANR	8222833	Identifier	font_id		8222739	1					
ANR	8222834	Parameter	uint char_code	498:30:15792:15805	8222739	2	True				
ANR	8222835	ParameterType	uint		8222739	0					
ANR	8222836	Identifier	char_code		8222739	1					
ANR	8222837	Parameter	gs_point * pwidth	498:46:15808:15824	8222739	3	True				
ANR	8222838	ParameterType	gs_point *		8222739	0					
ANR	8222839	Identifier	pwidth		8222739	1					
ANR	8222840	CFGEntryNode	ENTRY		8222739		True				
ANR	8222841	CFGExitNode	EXIT		8222739		True				
ANR	8222842	Symbol	font_id		8222739						
ANR	8222843	Symbol	gs_alloc_bytes		8222739						
ANR	8222844	Symbol	NULL		8222739						
ANR	8222845	Symbol	head -> char_code		8222739						
ANR	8222846	Symbol	char_code		8222739						
ANR	8222847	Symbol	* head		8222739						
ANR	8222848	Symbol	pwidth		8222739						
ANR	8222849	Symbol	node -> next		8222739						
ANR	8222850	Symbol	list_size		8222739						
ANR	8222851	Symbol	head		8222739						
ANR	8222852	Symbol	head -> width		8222739						
ANR	8222853	Symbol	node		8222739						
ANR	8222854	Symbol	head -> font_id		8222739						
ANR	8222855	Symbol	mem		8222739						
ANR	8222856	Symbol	head -> next		8222739						
ANR	8222857	Symbol	* pwidth		8222739						
ANR	8222858	Symbol	* node		8222739						
ANR	8222859	Function	pl_glyph_width_cache_node_search	523:0:16435:16832							
ANR	8222860	FunctionDef	"pl_glyph_width_cache_node_search (gs_id font_id , uint char_code , gs_point * pwidth)"		8222859	0					
ANR	8222861	CompoundStatement		526:0:16562:16832	8222859	0					
ANR	8222862	IdentifierDeclStatement	pl_glyph_width_node_t * current = head ;	527:4:16568:16605	8222859	0	True				
ANR	8222863	IdentifierDecl	* current = head		8222859	0					
ANR	8222864	IdentifierDeclType	pl_glyph_width_node_t *		8222859	0					
ANR	8222865	Identifier	current		8222859	1					
ANR	8222866	AssignmentExpression	* current = head		8222859	2		=			
ANR	8222867	Identifier	head		8222859	0					
ANR	8222868	Identifier	head		8222859	1					
ANR	8222869	WhileStatement	while ( current )		8222859	1					
ANR	8222870	Condition	current	529:11:16619:16625	8222859	0	True				
ANR	8222871	Identifier	current		8222859	0					
ANR	8222872	CompoundStatement		4:20:65:65	8222859	1					
ANR	8222873	IfStatement	if ( char_code == current -> char_code && font_id == current -> font_id )		8222859	0					
ANR	8222874	Condition	char_code == current -> char_code && font_id == current -> font_id	530:12:16642:16703	8222859	0	True				
ANR	8222875	AndExpression	char_code == current -> char_code && font_id == current -> font_id		8222859	0		&&			
ANR	8222876	EqualityExpression	char_code == current -> char_code		8222859	0		==			
ANR	8222877	Identifier	char_code		8222859	0					
ANR	8222878	PtrMemberAccess	current -> char_code		8222859	1					
ANR	8222879	Identifier	current		8222859	0					
ANR	8222880	Identifier	char_code		8222859	1					
ANR	8222881	EqualityExpression	font_id == current -> font_id		8222859	1		==			
ANR	8222882	Identifier	font_id		8222859	0					
ANR	8222883	PtrMemberAccess	current -> font_id		8222859	1					
ANR	8222884	Identifier	current		8222859	0					
ANR	8222885	Identifier	font_id		8222859	1					
ANR	8222886	CompoundStatement		5:76:143:143	8222859	1					
ANR	8222887	ExpressionStatement	* pwidth = current -> width	531:12:16720:16744	8222859	0	True				
ANR	8222888	AssignmentExpression	* pwidth = current -> width		8222859	0		=			
ANR	8222889	UnaryOperationExpression	* pwidth		8222859	0					
ANR	8222890	UnaryOperator	*		8222859	0					
ANR	8222891	Identifier	pwidth		8222859	1					
ANR	8222892	PtrMemberAccess	current -> width		8222859	1					
ANR	8222893	Identifier	current		8222859	0					
ANR	8222894	Identifier	width		8222859	1					
ANR	8222895	ReturnStatement	return 0 ;	532:12:16758:16766	8222859	1	True				
ANR	8222896	PrimaryExpression	0		8222859	0					
ANR	8222897	ExpressionStatement	current = current -> next	534:8:16786:16809	8222859	1	True				
ANR	8222898	AssignmentExpression	current = current -> next		8222859	0		=			
ANR	8222899	Identifier	current		8222859	0					
ANR	8222900	PtrMemberAccess	current -> next		8222859	1					
ANR	8222901	Identifier	current		8222859	0					
ANR	8222902	Identifier	next		8222859	1					
ANR	8222903	ReturnStatement	return - 1 ;	536:4:16821:16830	8222859	2	True				
ANR	8222904	UnaryOperationExpression	- 1		8222859	0					
ANR	8222905	UnaryOperator	-		8222859	0					
ANR	8222906	PrimaryExpression	1		8222859	1					
ANR	8222907	ReturnType	static int		8222859	1					
ANR	8222908	Identifier	pl_glyph_width_cache_node_search		8222859	2					
ANR	8222909	ParameterList	"gs_id font_id , uint char_code , gs_point * pwidth"		8222859	3					
ANR	8222910	Parameter	gs_id font_id	524:33:16479:16491	8222859	0	True				
ANR	8222911	ParameterType	gs_id		8222859	0					
ANR	8222912	Identifier	font_id		8222859	1					
ANR	8222913	Parameter	uint char_code	524:48:16494:16507	8222859	1	True				
ANR	8222914	ParameterType	uint		8222859	0					
ANR	8222915	Identifier	char_code		8222859	1					
ANR	8222916	Parameter	gs_point * pwidth	525:33:16543:16559	8222859	2	True				
ANR	8222917	ParameterType	gs_point *		8222859	0					
ANR	8222918	Identifier	pwidth		8222859	1					
ANR	8222919	CFGEntryNode	ENTRY		8222859		True				
ANR	8222920	CFGExitNode	EXIT		8222859		True				
ANR	8222921	Symbol	head		8222859						
ANR	8222922	Symbol	current -> char_code		8222859						
ANR	8222923	Symbol	font_id		8222859						
ANR	8222924	Symbol	current		8222859						
ANR	8222925	Symbol	current -> width		8222859						
ANR	8222926	Symbol	current -> next		8222859						
ANR	8222927	Symbol	current -> font_id		8222859						
ANR	8222928	Symbol	* current		8222859						
ANR	8222929	Symbol	char_code		8222859						
ANR	8222930	Symbol	* pwidth		8222859						
ANR	8222931	Symbol	pwidth		8222859						
ANR	8222932	Function	pl_glyph_width_list_remove	539:0:16835:17161							
ANR	8222933	FunctionDef	pl_glyph_width_list_remove (gs_memory_t * mem)		8222932	0					
ANR	8222934	CompoundStatement		541:0:16893:17161	8222932	0					
ANR	8222935	IdentifierDeclStatement	pl_glyph_width_node_t * current = head ;	542:4:16899:16936	8222932	0	True				
ANR	8222936	IdentifierDecl	* current = head		8222932	0					
ANR	8222937	IdentifierDeclType	pl_glyph_width_node_t *		8222932	0					
ANR	8222938	Identifier	current		8222932	1					
ANR	8222939	AssignmentExpression	* current = head		8222932	2		=			
ANR	8222940	Identifier	head		8222932	0					
ANR	8222941	Identifier	head		8222932	1					
ANR	8222942	WhileStatement	while ( current )		8222932	1					
ANR	8222943	Condition	current	544:11:16950:16956	8222932	0	True				
ANR	8222944	Identifier	current		8222932	0					
ANR	8222945	CompoundStatement		5:8:75:118	8222932	1					
ANR	8222946	IdentifierDeclStatement	pl_glyph_width_node_t * next = current -> next ;	545:8:16969:17012	8222932	0	True				
ANR	8222947	IdentifierDecl	* next = current -> next		8222932	0					
ANR	8222948	IdentifierDeclType	pl_glyph_width_node_t *		8222932	0					
ANR	8222949	Identifier	next		8222932	1					
ANR	8222950	AssignmentExpression	* next = current -> next		8222932	2		=			
ANR	8222951	Identifier	next		8222932	0					
ANR	8222952	PtrMemberAccess	current -> next		8222932	1					
ANR	8222953	Identifier	current		8222932	0					
ANR	8222954	Identifier	next		8222932	1					
ANR	8222955	ExpressionStatement	"gs_free_object ( mem , current , ""pl_glyph_width_list_remove"" )"	547:8:17023:17081	8222932	1	True				
ANR	8222956	CallExpression	"gs_free_object ( mem , current , ""pl_glyph_width_list_remove"" )"		8222932	0					
ANR	8222957	Callee	gs_free_object		8222932	0					
ANR	8222958	Identifier	gs_free_object		8222932	0					
ANR	8222959	ArgumentList	mem		8222932	1					
ANR	8222960	Argument	mem		8222932	0					
ANR	8222961	Identifier	mem		8222932	0					
ANR	8222962	Argument	current		8222932	1					
ANR	8222963	Identifier	current		8222932	0					
ANR	8222964	Argument	"""pl_glyph_width_list_remove"""		8222932	2					
ANR	8222965	PrimaryExpression	"""pl_glyph_width_list_remove"""		8222932	0					
ANR	8222966	ExpressionStatement	current = next	548:8:17091:17105	8222932	2	True				
ANR	8222967	AssignmentExpression	current = next		8222932	0		=			
ANR	8222968	Identifier	current		8222932	0					
ANR	8222969	Identifier	next		8222932	1					
ANR	8222970	ExpressionStatement	head = NULL	550:4:17117:17128	8222932	2	True				
ANR	8222971	AssignmentExpression	head = NULL		8222932	0		=			
ANR	8222972	Identifier	head		8222932	0					
ANR	8222973	Identifier	NULL		8222932	1					
ANR	8222974	ExpressionStatement	list_size = 0	551:4:17134:17147	8222932	3	True				
ANR	8222975	AssignmentExpression	list_size = 0		8222932	0		=			
ANR	8222976	Identifier	list_size		8222932	0					
ANR	8222977	PrimaryExpression	0		8222932	1					
ANR	8222978	ReturnStatement	return ;	552:4:17153:17159	8222932	4	True				
ANR	8222979	ReturnType	static void		8222932	1					
ANR	8222980	Identifier	pl_glyph_width_list_remove		8222932	2					
ANR	8222981	ParameterList	gs_memory_t * mem		8222932	3					
ANR	8222982	Parameter	gs_memory_t * mem	540:27:16874:16890	8222932	0	True				
ANR	8222983	ParameterType	gs_memory_t *		8222932	0					
ANR	8222984	Identifier	mem		8222932	1					
ANR	8222985	CFGEntryNode	ENTRY		8222932		True				
ANR	8222986	CFGExitNode	EXIT		8222932		True				
ANR	8222987	Symbol	head		8222932						
ANR	8222988	Symbol	next		8222932						
ANR	8222989	Symbol	current		8222932						
ANR	8222990	Symbol	current -> next		8222932						
ANR	8222991	Symbol	NULL		8222932						
ANR	8222992	Symbol	mem		8222932						
ANR	8222993	Symbol	* current		8222932						
ANR	8222994	Symbol	list_size		8222932						
ANR	8222995	Function	pl_mt_char_width	556:0:17232:18165							
ANR	8222996	FunctionDef	"pl_mt_char_width (const pl_font_t * plfont , const void * pgs , uint char_code , gs_point * pwidth)"		8222995	0					
ANR	8222997	CompoundStatement		559:0:17355:18165	8222995	0					
ANR	8222998	IdentifierDeclStatement	FONTCONTEXT fc ;	560:4:17361:17375	8222995	0	True				
ANR	8222999	IdentifierDecl	fc		8222995	0					
ANR	8223000	IdentifierDeclType	FONTCONTEXT		8222995	0					
ANR	8223001	Identifier	fc		8222995	1					
ANR	8223002	IdentifierDeclStatement	int code ;	561:4:17381:17389	8222995	1	True				
ANR	8223003	IdentifierDecl	code		8222995	0					
ANR	8223004	IdentifierDeclType	int		8222995	0					
ANR	8223005	Identifier	code		8222995	1					
ANR	8223006	IfStatement	if ( list_size > MAX_LIST_SIZE )		8222995	2					
ANR	8223007	Condition	list_size > MAX_LIST_SIZE	563:8:17400:17424	8222995	0	True				
ANR	8223008	RelationalExpression	list_size > MAX_LIST_SIZE		8222995	0		>			
ANR	8223009	Identifier	list_size		8222995	0					
ANR	8223010	Identifier	MAX_LIST_SIZE		8222995	1					
ANR	8223011	ExpressionStatement	pl_glyph_width_list_remove ( plfont -> pfont -> memory )	564:8:17435:17484	8222995	1	True				
ANR	8223012	CallExpression	pl_glyph_width_list_remove ( plfont -> pfont -> memory )		8222995	0					
ANR	8223013	Callee	pl_glyph_width_list_remove		8222995	0					
ANR	8223014	Identifier	pl_glyph_width_list_remove		8222995	0					
ANR	8223015	ArgumentList	plfont -> pfont -> memory		8222995	1					
ANR	8223016	Argument	plfont -> pfont -> memory		8222995	0					
ANR	8223017	PtrMemberAccess	plfont -> pfont -> memory		8222995	0					
ANR	8223018	PtrMemberAccess	plfont -> pfont		8222995	0					
ANR	8223019	Identifier	plfont		8222995	0					
ANR	8223020	Identifier	pfont		8222995	1					
ANR	8223021	Identifier	memory		8222995	1					
ANR	8223022	ExpressionStatement	"code = pl_glyph_width_cache_node_search ( plfont -> pfont -> id , char_code , pwidth )"	565:4:17490:17616	8222995	3	True				
ANR	8223023	AssignmentExpression	"code = pl_glyph_width_cache_node_search ( plfont -> pfont -> id , char_code , pwidth )"		8222995	0		=			
ANR	8223024	Identifier	code		8222995	0					
ANR	8223025	CallExpression	"pl_glyph_width_cache_node_search ( plfont -> pfont -> id , char_code , pwidth )"		8222995	1					
ANR	8223026	Callee	pl_glyph_width_cache_node_search		8222995	0					
ANR	8223027	Identifier	pl_glyph_width_cache_node_search		8222995	0					
ANR	8223028	ArgumentList	plfont -> pfont -> id		8222995	1					
ANR	8223029	Argument	plfont -> pfont -> id		8222995	0					
ANR	8223030	PtrMemberAccess	plfont -> pfont -> id		8222995	0					
ANR	8223031	PtrMemberAccess	plfont -> pfont		8222995	0					
ANR	8223032	Identifier	plfont		8222995	0					
ANR	8223033	Identifier	pfont		8222995	1					
ANR	8223034	Identifier	id		8222995	1					
ANR	8223035	Argument	char_code		8222995	1					
ANR	8223036	Identifier	char_code		8222995	0					
ANR	8223037	Argument	pwidth		8222995	2					
ANR	8223038	Identifier	pwidth		8222995	0					
ANR	8223039	IfStatement	if ( code < 0 )		8222995	4					
ANR	8223040	Condition	code < 0	568:8:17626:17633	8222995	0	True				
ANR	8223041	RelationalExpression	code < 0		8222995	0		<			
ANR	8223042	Identifier	code		8222995	0					
ANR	8223043	PrimaryExpression	0		8222995	1					
ANR	8223044	CompoundStatement		10:18:280:280	8222995	1					
ANR	8223045	IfStatement	"if ( pl_set_mt_font ( NULL , plfont , false , & fc ) != 0 )"		8222995	0					
ANR	8223046	Condition	"pl_set_mt_font ( NULL , plfont , false , & fc ) != 0"	570:12:17743:17821	8222995	0	True				
ANR	8223047	EqualityExpression	"pl_set_mt_font ( NULL , plfont , false , & fc ) != 0"		8222995	0		!=			
ANR	8223048	CallExpression	"pl_set_mt_font ( NULL , plfont , false , & fc )"		8222995	0					
ANR	8223049	Callee	pl_set_mt_font		8222995	0					
ANR	8223050	Identifier	pl_set_mt_font		8222995	0					
ANR	8223051	ArgumentList	NULL		8222995	1					
ANR	8223052	Argument	NULL		8222995	0					
ANR	8223053	Identifier	NULL		8222995	0					
ANR	8223054	Argument	plfont		8222995	1					
ANR	8223055	Identifier	plfont		8222995	0					
ANR	8223056	Argument	false		8222995	2					
ANR	8223057	Identifier	false		8222995	0					
ANR	8223058	Argument	& fc		8222995	3					
ANR	8223059	UnaryOperationExpression	& fc		8222995	0					
ANR	8223060	UnaryOperator	&		8222995	0					
ANR	8223061	Identifier	fc		8222995	1					
ANR	8223062	PrimaryExpression	0		8222995	1					
ANR	8223063	ReturnStatement	return 0 ;	572:12:17836:17844	8222995	1	True				
ANR	8223064	PrimaryExpression	0		8222995	0					
ANR	8223065	ExpressionStatement	"code = pl_ufst_char_width ( char_code , pgs , pwidth , & fc )"	573:8:17854:17908	8222995	1	True				
ANR	8223066	AssignmentExpression	"code = pl_ufst_char_width ( char_code , pgs , pwidth , & fc )"		8222995	0		=			
ANR	8223067	Identifier	code		8222995	0					
ANR	8223068	CallExpression	"pl_ufst_char_width ( char_code , pgs , pwidth , & fc )"		8222995	1					
ANR	8223069	Callee	pl_ufst_char_width		8222995	0					
ANR	8223070	Identifier	pl_ufst_char_width		8222995	0					
ANR	8223071	ArgumentList	char_code		8222995	1					
ANR	8223072	Argument	char_code		8222995	0					
ANR	8223073	Identifier	char_code		8222995	0					
ANR	8223074	Argument	pgs		8222995	1					
ANR	8223075	Identifier	pgs		8222995	0					
ANR	8223076	Argument	pwidth		8222995	2					
ANR	8223077	Identifier	pwidth		8222995	0					
ANR	8223078	Argument	& fc		8222995	3					
ANR	8223079	UnaryOperationExpression	& fc		8222995	0					
ANR	8223080	UnaryOperator	&		8222995	0					
ANR	8223081	Identifier	fc		8222995	1					
ANR	8223082	IfStatement	if ( code == 0 )		8222995	2					
ANR	8223083	Condition	code == 0	574:12:17922:17930	8222995	0	True				
ANR	8223084	EqualityExpression	code == 0		8222995	0		==			
ANR	8223085	Identifier	code		8222995	0					
ANR	8223086	PrimaryExpression	0		8222995	1					
ANR	8223087	ExpressionStatement	"code = pl_glyph_width_cache_node_add ( plfont -> pfont -> memory , plfont -> pfont -> id , char_code , pwidth )"	575:12:17945:18140	8222995	1	True				
ANR	8223088	AssignmentExpression	"code = pl_glyph_width_cache_node_add ( plfont -> pfont -> memory , plfont -> pfont -> id , char_code , pwidth )"		8222995	0		=			
ANR	8223089	Identifier	code		8222995	0					
ANR	8223090	CallExpression	"pl_glyph_width_cache_node_add ( plfont -> pfont -> memory , plfont -> pfont -> id , char_code , pwidth )"		8222995	1					
ANR	8223091	Callee	pl_glyph_width_cache_node_add		8222995	0					
ANR	8223092	Identifier	pl_glyph_width_cache_node_add		8222995	0					
ANR	8223093	ArgumentList	plfont -> pfont -> memory		8222995	1					
ANR	8223094	Argument	plfont -> pfont -> memory		8222995	0					
ANR	8223095	PtrMemberAccess	plfont -> pfont -> memory		8222995	0					
ANR	8223096	PtrMemberAccess	plfont -> pfont		8222995	0					
ANR	8223097	Identifier	plfont		8222995	0					
ANR	8223098	Identifier	pfont		8222995	1					
ANR	8223099	Identifier	memory		8222995	1					
ANR	8223100	Argument	plfont -> pfont -> id		8222995	1					
ANR	8223101	PtrMemberAccess	plfont -> pfont -> id		8222995	0					
ANR	8223102	PtrMemberAccess	plfont -> pfont		8222995	0					
ANR	8223103	Identifier	plfont		8222995	0					
ANR	8223104	Identifier	pfont		8222995	1					
ANR	8223105	Identifier	id		8222995	1					
ANR	8223106	Argument	char_code		8222995	2					
ANR	8223107	Identifier	char_code		8222995	0					
ANR	8223108	Argument	pwidth		8222995	3					
ANR	8223109	Identifier	pwidth		8222995	0					
ANR	8223110	ReturnStatement	return code ;	579:4:18152:18163	8222995	5	True				
ANR	8223111	Identifier	code		8222995	0					
ANR	8223112	ReturnType	static int		8222995	1					
ANR	8223113	Identifier	pl_mt_char_width		8222995	2					
ANR	8223114	ParameterList	"const pl_font_t * plfont , const void * pgs , uint char_code , gs_point * pwidth"		8222995	3					
ANR	8223115	Parameter	const pl_font_t * plfont	557:17:17260:17283	8222995	0	True				
ANR	8223116	ParameterType	const pl_font_t *		8222995	0					
ANR	8223117	Identifier	plfont		8222995	1					
ANR	8223118	Parameter	const void * pgs	558:17:17303:17317	8222995	1	True				
ANR	8223119	ParameterType	const void *		8222995	0					
ANR	8223120	Identifier	pgs		8222995	1					
ANR	8223121	Parameter	uint char_code	558:34:17320:17333	8222995	2	True				
ANR	8223122	ParameterType	uint		8222995	0					
ANR	8223123	Identifier	char_code		8222995	1					
ANR	8223124	Parameter	gs_point * pwidth	558:50:17336:17352	8222995	3	True				
ANR	8223125	ParameterType	gs_point *		8222995	0					
ANR	8223126	Identifier	pwidth		8222995	1					
ANR	8223127	CFGEntryNode	ENTRY		8222995		True				
ANR	8223128	CFGExitNode	EXIT		8222995		True				
ANR	8223129	Symbol	pl_set_mt_font		8222995						
ANR	8223130	Symbol	MAX_LIST_SIZE		8222995						
ANR	8223131	Symbol	code		8222995						
ANR	8223132	Symbol	NULL		8222995						
ANR	8223133	Symbol	* plfont -> pfont		8222995						
ANR	8223134	Symbol	* * plfont		8222995						
ANR	8223135	Symbol	pl_ufst_char_width		8222995						
ANR	8223136	Symbol	plfont -> pfont -> memory		8222995						
ANR	8223137	Symbol	plfont -> pfont -> id		8222995						
ANR	8223138	Symbol	& fc		8222995						
ANR	8223139	Symbol	false		8222995						
ANR	8223140	Symbol	char_code		8222995						
ANR	8223141	Symbol	pwidth		8222995						
ANR	8223142	Symbol	plfont		8222995						
ANR	8223143	Symbol	list_size		8222995						
ANR	8223144	Symbol	pl_glyph_width_cache_node_search		8222995						
ANR	8223145	Symbol	plfont -> pfont		8222995						
ANR	8223146	Symbol	* plfont		8222995						
ANR	8223147	Symbol	pl_glyph_width_cache_node_add		8222995						
ANR	8223148	Symbol	pgs		8222995						
ANR	8223149	Symbol	fc		8222995						
ANR	8223150	Function	pl_mt_char_metrics	582:0:18168:18616							
ANR	8223151	FunctionDef	"pl_mt_char_metrics (const pl_font_t * plfont , const void * pgs , uint char_code , float metrics [ 4 ])"		8223150	0					
ANR	8223152	CompoundStatement		585:0:18294:18616	8223150	0					
ANR	8223153	IdentifierDeclStatement	gs_point width ;	586:4:18300:18314	8223150	0	True				
ANR	8223154	IdentifierDecl	width		8223150	0					
ANR	8223155	IdentifierDeclType	gs_point		8223150	0					
ANR	8223156	Identifier	width		8223150	1					
ANR	8223157	ExpressionStatement	metrics [ 0 ] = metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0	587:4:18320:18373	8223150	1	True				
ANR	8223158	AssignmentExpression	metrics [ 0 ] = metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0		8223150	0		=			
ANR	8223159	ArrayIndexing	metrics [ 0 ]		8223150	0					
ANR	8223160	Identifier	metrics		8223150	0					
ANR	8223161	PrimaryExpression	0		8223150	1					
ANR	8223162	AssignmentExpression	metrics [ 1 ] = metrics [ 2 ] = metrics [ 3 ] = 0		8223150	1		=			
ANR	8223163	ArrayIndexing	metrics [ 1 ]		8223150	0					
ANR	8223164	Identifier	metrics		8223150	0					
ANR	8223165	PrimaryExpression	1		8223150	1					
ANR	8223166	AssignmentExpression	metrics [ 2 ] = metrics [ 3 ] = 0		8223150	1		=			
ANR	8223167	ArrayIndexing	metrics [ 2 ]		8223150	0					
ANR	8223168	Identifier	metrics		8223150	0					
ANR	8223169	PrimaryExpression	2		8223150	1					
ANR	8223170	AssignmentExpression	metrics [ 3 ] = 0		8223150	1		=			
ANR	8223171	ArrayIndexing	metrics [ 3 ]		8223150	0					
ANR	8223172	Identifier	metrics		8223150	0					
ANR	8223173	PrimaryExpression	3		8223150	1					
ANR	8223174	PrimaryExpression	0		8223150	1					
ANR	8223175	IfStatement	"if ( 0 == pl_mt_char_width ( plfont , pgs , char_code , & width ) )"		8223150	2					
ANR	8223176	Condition	"0 == pl_mt_char_width ( plfont , pgs , char_code , & width )"	588:8:18383:18435	8223150	0	True				
ANR	8223177	EqualityExpression	"0 == pl_mt_char_width ( plfont , pgs , char_code , & width )"		8223150	0		==			
ANR	8223178	PrimaryExpression	0		8223150	0					
ANR	8223179	CallExpression	"pl_mt_char_width ( plfont , pgs , char_code , & width )"		8223150	1					
ANR	8223180	Callee	pl_mt_char_width		8223150	0					
ANR	8223181	Identifier	pl_mt_char_width		8223150	0					
ANR	8223182	ArgumentList	plfont		8223150	1					
ANR	8223183	Argument	plfont		8223150	0					
ANR	8223184	Identifier	plfont		8223150	0					
ANR	8223185	Argument	pgs		8223150	1					
ANR	8223186	Identifier	pgs		8223150	0					
ANR	8223187	Argument	char_code		8223150	2					
ANR	8223188	Identifier	char_code		8223150	0					
ANR	8223189	Argument	& width		8223150	3					
ANR	8223190	UnaryOperationExpression	& width		8223150	0					
ANR	8223191	UnaryOperator	&		8223150	0					
ANR	8223192	Identifier	width		8223150	1					
ANR	8223193	CompoundStatement		4:63:143:143	8223150	1					
ANR	8223194	ExpressionStatement	metrics [ 2 ] = width . x	591:8:18519:18539	8223150	0	True				
ANR	8223195	AssignmentExpression	metrics [ 2 ] = width . x		8223150	0		=			
ANR	8223196	ArrayIndexing	metrics [ 2 ]		8223150	0					
ANR	8223197	Identifier	metrics		8223150	0					
ANR	8223198	PrimaryExpression	2		8223150	1					
ANR	8223199	MemberAccess	width . x		8223150	1					
ANR	8223200	Identifier	width		8223150	0					
ANR	8223201	Identifier	x		8223150	1					
ANR	8223202	ReturnStatement	return 0 ;	595:4:18606:18614	8223150	3	True				
ANR	8223203	PrimaryExpression	0		8223150	0					
ANR	8223204	ReturnType	static int		8223150	1					
ANR	8223205	Identifier	pl_mt_char_metrics		8223150	2					
ANR	8223206	ParameterList	"const pl_font_t * plfont , const void * pgs , uint char_code , float metrics [ 4 ]"		8223150	3					
ANR	8223207	Parameter	const pl_font_t * plfont	583:19:18198:18221	8223150	0	True				
ANR	8223208	ParameterType	const pl_font_t *		8223150	0					
ANR	8223209	Identifier	plfont		8223150	1					
ANR	8223210	Parameter	const void * pgs	583:45:18224:18238	8223150	1	True				
ANR	8223211	ParameterType	const void *		8223150	0					
ANR	8223212	Identifier	pgs		8223150	1					
ANR	8223213	Parameter	uint char_code	583:62:18241:18254	8223150	2	True				
ANR	8223214	ParameterType	uint		8223150	0					
ANR	8223215	Identifier	char_code		8223150	1					
ANR	8223216	Parameter	float metrics [ 4 ]	584:19:18276:18291	8223150	3	True				
ANR	8223217	ParameterType	float [ 4 ]		8223150	0					
ANR	8223218	Identifier	metrics		8223150	1					
ANR	8223219	CFGEntryNode	ENTRY		8223150		True				
ANR	8223220	CFGExitNode	EXIT		8223150		True				
ANR	8223221	Symbol	* metrics		8223150						
ANR	8223222	Symbol	width		8223150						
ANR	8223223	Symbol	char_code		8223150						
ANR	8223224	Symbol	width . x		8223150						
ANR	8223225	Symbol	& width		8223150						
ANR	8223226	Symbol	plfont		8223150						
ANR	8223227	Symbol	metrics		8223150						
ANR	8223228	Symbol	pgs		8223150						
ANR	8223229	Symbol	pl_mt_char_width		8223150						
ANR	8223230	Function	pl_PCLchId2ptr	605:0:18883:19392							
ANR	8223231	FunctionDef	pl_PCLchId2ptr (FSP UW16 chId)		8223230	0					
ANR	8223232	CompoundStatement		607:0:18926:19392	8223230	0					
ANR	8223233	IdentifierDeclStatement	const pl_font_t * plfont = plfont_last ;	608:4:18932:18969	8223230	0	True				
ANR	8223234	IdentifierDecl	* plfont = plfont_last		8223230	0					
ANR	8223235	IdentifierDeclType	const pl_font_t *		8223230	0					
ANR	8223236	Identifier	plfont		8223230	1					
ANR	8223237	AssignmentExpression	* plfont = plfont_last		8223230	2		=			
ANR	8223238	Identifier	plfont_last		8223230	0					
ANR	8223239	Identifier	plfont_last		8223230	1					
ANR	8223240	IfStatement	if ( plfont_last == NULL )		8223230	1					
ANR	8223241	Condition	plfont_last == NULL	610:8:18980:18998	8223230	0	True				
ANR	8223242	EqualityExpression	plfont_last == NULL		8223230	0		==			
ANR	8223243	Identifier	plfont_last		8223230	0					
ANR	8223244	Identifier	NULL		8223230	1					
ANR	8223245	ReturnStatement	return NULL ;	611:8:19009:19020	8223230	1	True				
ANR	8223246	Identifier	NULL		8223230	0					
ANR	8223247	IfStatement	if ( plfont -> char_glyphs . table != NULL )		8223230	2					
ANR	8223248	Condition	plfont -> char_glyphs . table != NULL	614:8:19100:19132	8223230	0	True				
ANR	8223249	EqualityExpression	plfont -> char_glyphs . table != NULL		8223230	0		!=			
ANR	8223250	MemberAccess	plfont -> char_glyphs . table		8223230	0					
ANR	8223251	PtrMemberAccess	plfont -> char_glyphs		8223230	0					
ANR	8223252	Identifier	plfont		8223230	0					
ANR	8223253	Identifier	char_glyphs		8223230	1					
ANR	8223254	Identifier	table		8223230	1					
ANR	8223255	Identifier	NULL		8223230	1					
ANR	8223256	CompoundStatement		9:8:218:276	8223230	1					
ANR	8223257	IdentifierDeclStatement	"pl_tt_char_glyph_t * ptcg = pl_tt_lookup_char ( plfont , chId ) ;"	615:8:19145:19203	8223230	0	True				
ANR	8223258	IdentifierDecl	"* ptcg = pl_tt_lookup_char ( plfont , chId )"		8223230	0					
ANR	8223259	IdentifierDeclType	pl_tt_char_glyph_t *		8223230	0					
ANR	8223260	Identifier	ptcg		8223230	1					
ANR	8223261	AssignmentExpression	"* ptcg = pl_tt_lookup_char ( plfont , chId )"		8223230	2		=			
ANR	8223262	Identifier	ptcg		8223230	0					
ANR	8223263	CallExpression	"pl_tt_lookup_char ( plfont , chId )"		8223230	1					
ANR	8223264	Callee	pl_tt_lookup_char		8223230	0					
ANR	8223265	Identifier	pl_tt_lookup_char		8223230	0					
ANR	8223266	ArgumentList	plfont		8223230	1					
ANR	8223267	Argument	plfont		8223230	0					
ANR	8223268	Identifier	plfont		8223230	0					
ANR	8223269	Argument	chId		8223230	1					
ANR	8223270	Identifier	chId		8223230	0					
ANR	8223271	IfStatement	if ( ptcg -> chr == gs_no_char )		8223230	1					
ANR	8223272	Condition	ptcg -> chr == gs_no_char	617:12:19218:19240	8223230	0	True				
ANR	8223273	EqualityExpression	ptcg -> chr == gs_no_char		8223230	0		==			
ANR	8223274	PtrMemberAccess	ptcg -> chr		8223230	0					
ANR	8223275	Identifier	ptcg		8223230	0					
ANR	8223276	Identifier	chr		8223230	1					
ANR	8223277	Identifier	gs_no_char		8223230	1					
ANR	8223278	ReturnStatement	return NULL ;	618:12:19255:19266	8223230	1	True				
ANR	8223279	Identifier	NULL		8223230	0					
ANR	8223280	ExpressionStatement	chId = ptcg -> glyph	619:8:19305:19323	8223230	2	True				
ANR	8223281	AssignmentExpression	chId = ptcg -> glyph		8223230	0		=			
ANR	8223282	Identifier	chId		8223230	0					
ANR	8223283	PtrMemberAccess	ptcg -> glyph		8223230	1					
ANR	8223284	Identifier	ptcg		8223230	0					
ANR	8223285	Identifier	glyph		8223230	1					
ANR	8223286	ReturnStatement	"return ( LPUB8 ) pl_font_lookup_glyph ( plfont , chId ) -> data ;"	621:4:19335:19390	8223230	3	True				
ANR	8223287	CastExpression	"( LPUB8 ) pl_font_lookup_glyph ( plfont , chId ) -> data"		8223230	0					
ANR	8223288	CastTarget	LPUB8		8223230	0					
ANR	8223289	PtrMemberAccess	"pl_font_lookup_glyph ( plfont , chId ) -> data"		8223230	1					
ANR	8223290	CallExpression	"pl_font_lookup_glyph ( plfont , chId )"		8223230	0					
ANR	8223291	Callee	pl_font_lookup_glyph		8223230	0					
ANR	8223292	Identifier	pl_font_lookup_glyph		8223230	0					
ANR	8223293	ArgumentList	plfont		8223230	1					
ANR	8223294	Argument	plfont		8223230	0					
ANR	8223295	Identifier	plfont		8223230	0					
ANR	8223296	Argument	chId		8223230	1					
ANR	8223297	Identifier	chId		8223230	0					
ANR	8223298	Identifier	data		8223230	1					
ANR	8223299	ReturnType	static LPUB8		8223230	1					
ANR	8223300	Identifier	pl_PCLchId2ptr		8223230	2					
ANR	8223301	ParameterList	FSP UW16 chId		8223230	3					
ANR	8223302	Parameter	FSP UW16 chId	606:15:18911:18923	8223230	0	True				
ANR	8223303	ParameterType	FSP UW16		8223230	0					
ANR	8223304	Identifier	chId		8223230	1					
ANR	8223305	CFGEntryNode	ENTRY		8223230		True				
ANR	8223306	CFGExitNode	EXIT		8223230		True				
ANR	8223307	Symbol	NULL		8223230						
ANR	8223308	Symbol	pl_font_lookup_glyph		8223230						
ANR	8223309	Symbol	ptcg -> chr		8223230						
ANR	8223310	Symbol	plfont -> char_glyphs		8223230						
ANR	8223311	Symbol	plfont		8223230						
ANR	8223312	Symbol	* pl_font_lookup_glyph		8223230						
ANR	8223313	Symbol	chId		8223230						
ANR	8223314	Symbol	pl_tt_lookup_char		8223230						
ANR	8223315	Symbol	plfont_last		8223230						
ANR	8223316	Symbol	"pl_font_lookup_glyph ( plfont , chId ) -> data"		8223230						
ANR	8223317	Symbol	* plfont		8223230						
ANR	8223318	Symbol	ptcg -> glyph		8223230						
ANR	8223319	Symbol	gs_no_char		8223230						
ANR	8223320	Symbol	ptcg		8223230						
ANR	8223321	Symbol	* ptcg		8223230						
ANR	8223322	Symbol	plfont -> char_glyphs . table		8223230						
ANR	8223323	Function	pl_PCLglyphID2Ptr	627:0:19478:19690							
ANR	8223324	FunctionDef	pl_PCLglyphID2Ptr (FSP UW16 chId)		8223323	0					
ANR	8223325	CompoundStatement		629:0:19524:19690	8223323	0					
ANR	8223326	IfStatement	if ( plfont_last == NULL )		8223323	0					
ANR	8223327	Condition	plfont_last == NULL	630:8:19534:19552	8223323	0	True				
ANR	8223328	EqualityExpression	plfont_last == NULL		8223323	0		==			
ANR	8223329	Identifier	plfont_last		8223323	0					
ANR	8223330	Identifier	NULL		8223323	1					
ANR	8223331	ReturnStatement	return NULL ;	631:8:19563:19574	8223323	1	True				
ANR	8223332	Identifier	NULL		8223323	0					
ANR	8223333	ElseStatement	else		8223323	0					
ANR	8223334	ReturnStatement	"return ( LPUB8 ) ( pl_font_lookup_glyph ( plfont_last , chId ) -> data ) ;"	633:8:19626:19688	8223323	0	True				
ANR	8223335	CastExpression	"( LPUB8 ) ( pl_font_lookup_glyph ( plfont_last , chId ) -> data )"		8223323	0					
ANR	8223336	CastTarget	LPUB8		8223323	0					
ANR	8223337	PtrMemberAccess	"pl_font_lookup_glyph ( plfont_last , chId ) -> data"		8223323	1					
ANR	8223338	CallExpression	"pl_font_lookup_glyph ( plfont_last , chId )"		8223323	0					
ANR	8223339	Callee	pl_font_lookup_glyph		8223323	0					
ANR	8223340	Identifier	pl_font_lookup_glyph		8223323	0					
ANR	8223341	ArgumentList	plfont_last		8223323	1					
ANR	8223342	Argument	plfont_last		8223323	0					
ANR	8223343	Identifier	plfont_last		8223323	0					
ANR	8223344	Argument	chId		8223323	1					
ANR	8223345	Identifier	chId		8223323	0					
ANR	8223346	Identifier	data		8223323	1					
ANR	8223347	ReturnType	static LPUB8		8223323	1					
ANR	8223348	Identifier	pl_PCLglyphID2Ptr		8223323	2					
ANR	8223349	ParameterList	FSP UW16 chId		8223323	3					
ANR	8223350	Parameter	FSP UW16 chId	628:18:19509:19521	8223323	0	True				
ANR	8223351	ParameterType	FSP UW16		8223323	0					
ANR	8223352	Identifier	chId		8223323	1					
ANR	8223353	CFGEntryNode	ENTRY		8223323		True				
ANR	8223354	CFGExitNode	EXIT		8223323		True				
ANR	8223355	Symbol	"pl_font_lookup_glyph ( plfont_last , chId ) -> data"		8223323						
ANR	8223356	Symbol	NULL		8223323						
ANR	8223357	Symbol	pl_font_lookup_glyph		8223323						
ANR	8223358	Symbol	plfont_last		8223323						
ANR	8223359	Symbol	* pl_font_lookup_glyph		8223323						
ANR	8223360	Symbol	chId		8223323						
ANR	8223361	Function	pl_PCLEO_charptr	640:0:19785:20028							
ANR	8223362	FunctionDef	"pl_PCLEO_charptr (LPUB8 pfont_hdr , UW16 char_code)"		8223361	0					
ANR	8223363	CompoundStatement		642:0:19848:20028	8223361	0					
ANR	8223364	IfStatement	if ( plfont_last == NULL || plfont_last -> header != pfont_hdr )		8223361	0					
ANR	8223365	Condition	plfont_last == NULL || plfont_last -> header != pfont_hdr	643:8:19858:19912	8223361	0	True				
ANR	8223366	OrExpression	plfont_last == NULL || plfont_last -> header != pfont_hdr		8223361	0		||			
ANR	8223367	EqualityExpression	plfont_last == NULL		8223361	0		==			
ANR	8223368	Identifier	plfont_last		8223361	0					
ANR	8223369	Identifier	NULL		8223361	1					
ANR	8223370	EqualityExpression	plfont_last -> header != pfont_hdr		8223361	1		!=			
ANR	8223371	PtrMemberAccess	plfont_last -> header		8223361	0					
ANR	8223372	Identifier	plfont_last		8223361	0					
ANR	8223373	Identifier	header		8223361	1					
ANR	8223374	Identifier	pfont_hdr		8223361	1					
ANR	8223375	CompoundStatement		2:65:66:66	8223361	1					
ANR	8223376	ReturnStatement	return NULL ;	644:8:19925:19936	8223361	0	True				
ANR	8223377	Identifier	NULL		8223361	0					
ANR	8223378	ElseStatement	else		8223361	0					
ANR	8223379	Statement	return	646:8:19990:19995	8223361	0	True				
ANR	8223380	Statement	pl_PCLchId2ptr	646:15:19997:20010	8223361	1	True				
ANR	8223381	Statement	(	646:29:20011:20011	8223361	2	True				
ANR	8223382	Statement	FSA	646:30:20012:20014	8223361	3	True				
ANR	8223383	Statement	char_code	646:34:20016:20024	8223361	4	True				
ANR	8223384	Statement	)	646:43:20025:20025	8223361	5	True				
ANR	8223385	ExpressionStatement		646:44:20026:20026	8223361	6	True				
ANR	8223386	ReturnType	static LPUB8		8223361	1					
ANR	8223387	Identifier	pl_PCLEO_charptr		8223361	2					
ANR	8223388	ParameterList	"LPUB8 pfont_hdr , UW16 char_code"		8223361	3					
ANR	8223389	Parameter	LPUB8 pfont_hdr	641:17:19815:19829	8223361	0	True				
ANR	8223390	ParameterType	LPUB8		8223361	0					
ANR	8223391	Identifier	pfont_hdr		8223361	1					
ANR	8223392	Parameter	UW16 char_code	641:34:19832:19845	8223361	1	True				
ANR	8223393	ParameterType	UW16		8223361	0					
ANR	8223394	Identifier	char_code		8223361	1					
ANR	8223395	CFGEntryNode	ENTRY		8223361		True				
ANR	8223396	CFGExitNode	EXIT		8223361		True				
ANR	8223397	Symbol	plfont_last -> header		8223361						
ANR	8223398	Symbol	NULL		8223361						
ANR	8223399	Symbol	* plfont_last		8223361						
ANR	8223400	Symbol	pfont_hdr		8223361						
ANR	8223401	Symbol	plfont_last		8223361						
ANR	8223402	Symbol	char_code		8223361						
ANR	8223403	Function	plu_set_callbacks	649:0:20031:20182							
ANR	8223404	FunctionDef	plu_set_callbacks ()		8223403	0					
ANR	8223405	CompoundStatement		651:0:20056:20182	8223403	0					
ANR	8223406	ExpressionStatement	"gx_set_UFST_Callbacks ( pl_PCLEO_charptr , pl_PCLchId2ptr , pl_PCLglyphID2Ptr )"	652:4:20062:20162	8223403	0	True				
ANR	8223407	CallExpression	"gx_set_UFST_Callbacks ( pl_PCLEO_charptr , pl_PCLchId2ptr , pl_PCLglyphID2Ptr )"		8223403	0					
ANR	8223408	Callee	gx_set_UFST_Callbacks		8223403	0					
ANR	8223409	Identifier	gx_set_UFST_Callbacks		8223403	0					
ANR	8223410	ArgumentList	pl_PCLEO_charptr		8223403	1					
ANR	8223411	Argument	pl_PCLEO_charptr		8223403	0					
ANR	8223412	Identifier	pl_PCLEO_charptr		8223403	0					
ANR	8223413	Argument	pl_PCLchId2ptr		8223403	1					
ANR	8223414	Identifier	pl_PCLchId2ptr		8223403	0					
ANR	8223415	Argument	pl_PCLglyphID2Ptr		8223403	2					
ANR	8223416	Identifier	pl_PCLglyphID2Ptr		8223403	0					
ANR	8223417	ReturnType	void		8223403	1					
ANR	8223418	Identifier	plu_set_callbacks		8223403	2					
ANR	8223419	ParameterList			8223403	3					
ANR	8223420	CFGEntryNode	ENTRY		8223403		True				
ANR	8223421	CFGExitNode	EXIT		8223403		True				
ANR	8223422	Symbol	pl_PCLEO_charptr		8223403						
ANR	8223423	Symbol	pl_PCLglyphID2Ptr		8223403						
ANR	8223424	Symbol	pl_PCLchId2ptr		8223403						
ANR	8223425	Function	pl_mt_init_procs	657:0:20185:20482							
ANR	8223426	FunctionDef	pl_mt_init_procs (gs_font_base * pfont)		8223425	0					
ANR	8223427	CompoundStatement		659:0:20229:20482	8223425	0					
ANR	8223428	ExpressionStatement	pfont -> procs . encode_char = pl_mt_encode_char	660:4:20235:20279	8223425	0	True				
ANR	8223429	AssignmentExpression	pfont -> procs . encode_char = pl_mt_encode_char		8223425	0		=			
ANR	8223430	MemberAccess	pfont -> procs . encode_char		8223425	0					
ANR	8223431	PtrMemberAccess	pfont -> procs		8223425	0					
ANR	8223432	Identifier	pfont		8223425	0					
ANR	8223433	Identifier	procs		8223425	1					
ANR	8223434	Identifier	encode_char		8223425	1					
ANR	8223435	Identifier	pl_mt_encode_char		8223425	1					
ANR	8223436	ExpressionStatement	pfont -> procs . build_char = pl_mt_build_char	661:4:20285:20327	8223425	1	True				
ANR	8223437	AssignmentExpression	pfont -> procs . build_char = pl_mt_build_char		8223425	0		=			
ANR	8223438	MemberAccess	pfont -> procs . build_char		8223425	0					
ANR	8223439	PtrMemberAccess	pfont -> procs		8223425	0					
ANR	8223440	Identifier	pfont		8223425	0					
ANR	8223441	Identifier	procs		8223425	1					
ANR	8223442	Identifier	build_char		8223425	1					
ANR	8223443	Identifier	pl_mt_build_char		8223425	1					
ANR	8223444	Statement	define	662:1:20330:20335	8223425	2	True				
ANR	8223445	Statement	plfont	662:8:20337:20342	8223425	3	True				
ANR	8223446	Statement	(	662:15:20344:20344	8223425	4	True				
ANR	8223447	Statement	(	662:16:20345:20345	8223425	5	True				
ANR	8223448	Statement	pl_font_t	662:17:20346:20354	8223425	6	True				
ANR	8223449	Statement	*	662:27:20356:20356	8223425	7	True				
ANR	8223450	Statement	)	662:28:20357:20357	8223425	8	True				
ANR	8223451	Statement	pfont	662:29:20358:20362	8223425	9	True				
ANR	8223452	Statement	->	662:34:20363:20364	8223425	10	True				
ANR	8223453	Statement	client_data	662:36:20365:20375	8223425	11	True				
ANR	8223454	Statement	)	662:47:20376:20376	8223425	12	True				
ANR	8223455	ExpressionStatement	plfont -> char_width = pl_mt_char_width	663:4:20382:20419	8223425	13	True				
ANR	8223456	AssignmentExpression	plfont -> char_width = pl_mt_char_width		8223425	0		=			
ANR	8223457	PtrMemberAccess	plfont -> char_width		8223425	0					
ANR	8223458	Identifier	plfont		8223425	0					
ANR	8223459	Identifier	char_width		8223425	1					
ANR	8223460	Identifier	pl_mt_char_width		8223425	1					
ANR	8223461	ExpressionStatement	plfont -> char_metrics = pl_mt_char_metrics	664:4:20425:20466	8223425	14	True				
ANR	8223462	AssignmentExpression	plfont -> char_metrics = pl_mt_char_metrics		8223425	0		=			
ANR	8223463	PtrMemberAccess	plfont -> char_metrics		8223425	0					
ANR	8223464	Identifier	plfont		8223425	0					
ANR	8223465	Identifier	char_metrics		8223425	1					
ANR	8223466	Identifier	pl_mt_char_metrics		8223425	1					
ANR	8223467	Statement	undef	665:1:20469:20473	8223425	15	True				
ANR	8223468	Statement	plfont	665:7:20475:20480	8223425	16	True				
ANR	8223469	ReturnType	void		8223425	1					
ANR	8223470	Identifier	pl_mt_init_procs		8223425	2					
ANR	8223471	ParameterList	gs_font_base * pfont		8223425	3					
ANR	8223472	Parameter	gs_font_base * pfont	658:17:20207:20226	8223425	0	True				
ANR	8223473	ParameterType	gs_font_base *		8223425	0					
ANR	8223474	Identifier	pfont		8223425	1					
ANR	8223475	CFGEntryNode	ENTRY		8223425		True				
ANR	8223476	CFGExitNode	EXIT		8223425		True				
ANR	8223477	Symbol	pfont -> procs		8223425						
ANR	8223478	Symbol	plfont -> char_width		8223425						
ANR	8223479	Symbol	pfont		8223425						
ANR	8223480	Symbol	pfont -> procs . encode_char		8223425						
ANR	8223481	Symbol	pfont -> procs . build_char		8223425						
ANR	8223482	Symbol	plfont		8223425						
ANR	8223483	Symbol	pl_mt_char_width		8223425						
ANR	8223484	Symbol	* pfont		8223425						
ANR	8223485	Symbol	pl_mt_char_metrics		8223425						
ANR	8223486	Symbol	plfont -> char_metrics		8223425						
ANR	8223487	Symbol	* plfont		8223425						
ANR	8223488	Symbol	pl_mt_build_char		8223425						
ANR	8223489	Symbol	pl_mt_encode_char		8223425						
