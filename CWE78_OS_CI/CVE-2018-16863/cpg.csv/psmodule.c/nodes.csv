command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9211177	File	data/converged/CVE-2018-16863_ghostpdl/psmodule.c								
ANR	9211178	Function	ps_unicode_value	62:2:2734:5758							
ANR	9211179	FunctionDef	ps_unicode_value (const char * glyph_name)		9211178	0					
ANR	9211180	CompoundStatement		64:2:2799:5758	9211178	0					
ANR	9211181	IfStatement	if ( glyph_name [ 0 ] == 'u' && glyph_name [ 1 ] == 'n' && glyph_name [ 2 ] == 'i' )		9211178	0					
ANR	9211182	Condition	glyph_name [ 0 ] == 'u' && glyph_name [ 1 ] == 'n' && glyph_name [ 2 ] == 'i'	67:9:2950:3035	9211178	0	True				
ANR	9211183	AndExpression	glyph_name [ 0 ] == 'u' && glyph_name [ 1 ] == 'n' && glyph_name [ 2 ] == 'i'		9211178	0		&&			
ANR	9211184	EqualityExpression	glyph_name [ 0 ] == 'u'		9211178	0		==			
ANR	9211185	ArrayIndexing	glyph_name [ 0 ]		9211178	0					
ANR	9211186	Identifier	glyph_name		9211178	0					
ANR	9211187	PrimaryExpression	0		9211178	1					
ANR	9211188	PrimaryExpression	'u'		9211178	1					
ANR	9211189	AndExpression	glyph_name [ 1 ] == 'n' && glyph_name [ 2 ] == 'i'		9211178	1		&&			
ANR	9211190	EqualityExpression	glyph_name [ 1 ] == 'n'		9211178	0		==			
ANR	9211191	ArrayIndexing	glyph_name [ 1 ]		9211178	0					
ANR	9211192	Identifier	glyph_name		9211178	0					
ANR	9211193	PrimaryExpression	1		9211178	1					
ANR	9211194	PrimaryExpression	'n'		9211178	1					
ANR	9211195	EqualityExpression	glyph_name [ 2 ] == 'i'		9211178	1		==			
ANR	9211196	ArrayIndexing	glyph_name [ 2 ]		9211178	0					
ANR	9211197	Identifier	glyph_name		9211178	0					
ANR	9211198	PrimaryExpression	2		9211178	1					
ANR	9211199	PrimaryExpression	'i'		9211178	1					
ANR	9211200	CompoundStatement		16:6:591:626	9211178	1					
ANR	9211201	IdentifierDeclStatement	FT_Int count ;	77:6:3335:3353	9211178	0	True				
ANR	9211202	IdentifierDecl	count		9211178	0					
ANR	9211203	IdentifierDeclType	FT_Int		9211178	0					
ANR	9211204	Identifier	count		9211178	1					
ANR	9211205	IdentifierDeclStatement	FT_UInt32 value = 0 ;	78:6:3361:3383	9211178	1	True				
ANR	9211206	IdentifierDecl	value = 0		9211178	0					
ANR	9211207	IdentifierDeclType	FT_UInt32		9211178	0					
ANR	9211208	Identifier	value		9211178	1					
ANR	9211209	AssignmentExpression	value = 0		9211178	2		=			
ANR	9211210	Identifier	value		9211178	0					
ANR	9211211	PrimaryExpression	0		9211178	1					
ANR	9211212	IdentifierDeclStatement	const char * p = glyph_name + 3 ;	79:6:3391:3426	9211178	2	True				
ANR	9211213	IdentifierDecl	* p = glyph_name + 3		9211178	0					
ANR	9211214	IdentifierDeclType	const char *		9211178	0					
ANR	9211215	Identifier	p		9211178	1					
ANR	9211216	AssignmentExpression	* p = glyph_name + 3		9211178	2		=			
ANR	9211217	Identifier	p		9211178	0					
ANR	9211218	AdditiveExpression	glyph_name + 3		9211178	1		+			
ANR	9211219	Identifier	glyph_name		9211178	0					
ANR	9211220	PrimaryExpression	3		9211178	1					
ANR	9211221	ForStatement	"for ( count = 4 ; count > 0 ; count -- , p ++ )"		9211178	3					
ANR	9211222	ForInit	count = 4 ;	82:12:3442:3451	9211178	0	True				
ANR	9211223	AssignmentExpression	count = 4		9211178	0		=			
ANR	9211224	Identifier	count		9211178	0					
ANR	9211225	PrimaryExpression	4		9211178	1					
ANR	9211226	Condition	count > 0	82:23:3453:3461	9211178	1	True				
ANR	9211227	RelationalExpression	count > 0		9211178	0		>			
ANR	9211228	Identifier	count		9211178	0					
ANR	9211229	PrimaryExpression	0		9211178	1					
ANR	9211230	Expression	"count -- , p ++"	82:34:3464:3475	9211178	2	True				
ANR	9211231	PostIncDecOperationExpression	count --		9211178	0					
ANR	9211232	Identifier	count		9211178	0					
ANR	9211233	IncDec	--		9211178	1					
ANR	9211234	PostIncDecOperationExpression	p ++		9211178	1					
ANR	9211235	Identifier	p		9211178	0					
ANR	9211236	IncDec	++		9211178	1					
ANR	9211237	CompoundStatement		22:8:725:740	9211178	3					
ANR	9211238	IdentifierDeclStatement	char c = * p ;	84:8:3495:3515	9211178	0	True				
ANR	9211239	IdentifierDecl	c = * p		9211178	0					
ANR	9211240	IdentifierDeclType	char		9211178	0					
ANR	9211241	Identifier	c		9211178	1					
ANR	9211242	AssignmentExpression	c = * p		9211178	2		=			
ANR	9211243	Identifier	c		9211178	0					
ANR	9211244	UnaryOperationExpression	* p		9211178	1					
ANR	9211245	UnaryOperator	*		9211178	0					
ANR	9211246	Identifier	p		9211178	1					
ANR	9211247	IdentifierDeclStatement	unsigned int d ;	85:8:3525:3540	9211178	1	True				
ANR	9211248	IdentifierDecl	d		9211178	0					
ANR	9211249	IdentifierDeclType	unsigned int		9211178	0					
ANR	9211250	Identifier	d		9211178	1					
ANR	9211251	ExpressionStatement	d = ( unsigned char ) c - '0'	88:8:3552:3578	9211178	2	True				
ANR	9211252	AssignmentExpression	d = ( unsigned char ) c - '0'		9211178	0		=			
ANR	9211253	Identifier	d		9211178	0					
ANR	9211254	AdditiveExpression	( unsigned char ) c - '0'		9211178	1		-			
ANR	9211255	CastExpression	( unsigned char ) c		9211178	0					
ANR	9211256	CastTarget	unsigned char		9211178	0					
ANR	9211257	Identifier	c		9211178	1					
ANR	9211258	PrimaryExpression	'0'		9211178	1					
ANR	9211259	IfStatement	if ( d >= 10 )		9211178	3					
ANR	9211260	Condition	d >= 10	89:13:3593:3599	9211178	0	True				
ANR	9211261	RelationalExpression	d >= 10		9211178	0		>=			
ANR	9211262	Identifier	d		9211178	0					
ANR	9211263	PrimaryExpression	10		9211178	1					
ANR	9211264	CompoundStatement		27:8:811:811	9211178	1					
ANR	9211265	ExpressionStatement	d = ( unsigned char ) c - 'A'	91:10:3623:3649	9211178	0	True				
ANR	9211266	AssignmentExpression	d = ( unsigned char ) c - 'A'		9211178	0		=			
ANR	9211267	Identifier	d		9211178	0					
ANR	9211268	AdditiveExpression	( unsigned char ) c - 'A'		9211178	1		-			
ANR	9211269	CastExpression	( unsigned char ) c		9211178	0					
ANR	9211270	CastTarget	unsigned char		9211178	0					
ANR	9211271	Identifier	c		9211178	1					
ANR	9211272	PrimaryExpression	'A'		9211178	1					
ANR	9211273	IfStatement	if ( d >= 6 )		9211178	1					
ANR	9211274	Condition	d >= 6	92:15:3666:3671	9211178	0	True				
ANR	9211275	RelationalExpression	d >= 6		9211178	0		>=			
ANR	9211276	Identifier	d		9211178	0					
ANR	9211277	PrimaryExpression	6		9211178	1					
ANR	9211278	ExpressionStatement	d = 16	93:12:3687:3693	9211178	1	True				
ANR	9211279	AssignmentExpression	d = 16		9211178	0		=			
ANR	9211280	Identifier	d		9211178	0					
ANR	9211281	PrimaryExpression	16		9211178	1					
ANR	9211282	ElseStatement	else		9211178	0					
ANR	9211283	ExpressionStatement	d += 10	95:12:3722:3729	9211178	0	True				
ANR	9211284	AssignmentExpression	d += 10		9211178	0		+=			
ANR	9211285	Identifier	d		9211178	0					
ANR	9211286	PrimaryExpression	10		9211178	1					
ANR	9211287	IfStatement	if ( d >= 16 )		9211178	4					
ANR	9211288	Condition	d >= 16	101:13:3971:3977	9211178	0	True				
ANR	9211289	RelationalExpression	d >= 16		9211178	0		>=			
ANR	9211290	Identifier	d		9211178	0					
ANR	9211291	PrimaryExpression	16		9211178	1					
ANR	9211292	BreakStatement	break ;	102:10:3991:3996	9211178	1	True				
ANR	9211293	ExpressionStatement	value = ( value << 4 ) + d	104:8:4007:4033	9211178	5	True				
ANR	9211294	AssignmentExpression	value = ( value << 4 ) + d		9211178	0		=			
ANR	9211295	Identifier	value		9211178	0					
ANR	9211296	AdditiveExpression	( value << 4 ) + d		9211178	1		+			
ANR	9211297	ShiftExpression	value << 4		9211178	0		<<			
ANR	9211298	Identifier	value		9211178	0					
ANR	9211299	PrimaryExpression	4		9211178	1					
ANR	9211300	Identifier	d		9211178	1					
ANR	9211301	IfStatement	if ( count == 0 )		9211178	4					
ANR	9211302	Condition	count == 0	108:11:4105:4114	9211178	0	True				
ANR	9211303	EqualityExpression	count == 0		9211178	0		==			
ANR	9211304	Identifier	count		9211178	0					
ANR	9211305	PrimaryExpression	0		9211178	1					
ANR	9211306	CompoundStatement		46:6:1324:1324	9211178	1					
ANR	9211307	IfStatement	if ( * p == '\\0' )		9211178	0					
ANR	9211308	Condition	* p == '\\0'	110:13:4139:4148	9211178	0	True				
ANR	9211309	EqualityExpression	* p == '\\0'		9211178	0		==			
ANR	9211310	UnaryOperationExpression	* p		9211178	0					
ANR	9211311	UnaryOperator	*		9211178	0					
ANR	9211312	Identifier	p		9211178	1					
ANR	9211313	PrimaryExpression	'\\0'		9211178	1					
ANR	9211314	ReturnStatement	return value ;	111:10:4162:4174	9211178	1	True				
ANR	9211315	Identifier	value		9211178	0					
ANR	9211316	IfStatement	if ( * p == '.' )		9211178	1					
ANR	9211317	Condition	* p == '.'	112:13:4189:4197	9211178	0	True				
ANR	9211318	EqualityExpression	* p == '.'		9211178	0		==			
ANR	9211319	UnaryOperationExpression	* p		9211178	0					
ANR	9211320	UnaryOperator	*		9211178	0					
ANR	9211321	Identifier	p		9211178	1					
ANR	9211322	PrimaryExpression	'.'		9211178	1					
ANR	9211323	ReturnStatement	return ( FT_UInt32 ) ( value | VARIANT_BIT ) ;	113:10:4211:4252	9211178	1	True				
ANR	9211324	CastExpression	( FT_UInt32 ) ( value | VARIANT_BIT )		9211178	0					
ANR	9211325	CastTarget	FT_UInt32		9211178	0					
ANR	9211326	InclusiveOrExpression	value | VARIANT_BIT		9211178	1		|			
ANR	9211327	Identifier	value		9211178	0					
ANR	9211328	Identifier	VARIANT_BIT		9211178	1					
ANR	9211329	IfStatement	if ( glyph_name [ 0 ] == 'u' )		9211178	1					
ANR	9211330	Condition	glyph_name [ 0 ] == 'u'	119:9:4424:4443	9211178	0	True				
ANR	9211331	EqualityExpression	glyph_name [ 0 ] == 'u'		9211178	0		==			
ANR	9211332	ArrayIndexing	glyph_name [ 0 ]		9211178	0					
ANR	9211333	Identifier	glyph_name		9211178	0					
ANR	9211334	PrimaryExpression	0		9211178	1					
ANR	9211335	PrimaryExpression	'u'		9211178	1					
ANR	9211336	CompoundStatement		60:6:1715:1750	9211178	1					
ANR	9211337	IdentifierDeclStatement	FT_Int count ;	121:6:4459:4477	9211178	0	True				
ANR	9211338	IdentifierDecl	count		9211178	0					
ANR	9211339	IdentifierDeclType	FT_Int		9211178	0					
ANR	9211340	Identifier	count		9211178	1					
ANR	9211341	IdentifierDeclStatement	FT_UInt32 value = 0 ;	122:6:4485:4507	9211178	1	True				
ANR	9211342	IdentifierDecl	value = 0		9211178	0					
ANR	9211343	IdentifierDeclType	FT_UInt32		9211178	0					
ANR	9211344	Identifier	value		9211178	1					
ANR	9211345	AssignmentExpression	value = 0		9211178	2		=			
ANR	9211346	Identifier	value		9211178	0					
ANR	9211347	PrimaryExpression	0		9211178	1					
ANR	9211348	IdentifierDeclStatement	const char * p = glyph_name + 1 ;	123:6:4515:4550	9211178	2	True				
ANR	9211349	IdentifierDecl	* p = glyph_name + 1		9211178	0					
ANR	9211350	IdentifierDeclType	const char *		9211178	0					
ANR	9211351	Identifier	p		9211178	1					
ANR	9211352	AssignmentExpression	* p = glyph_name + 1		9211178	2		=			
ANR	9211353	Identifier	p		9211178	0					
ANR	9211354	AdditiveExpression	glyph_name + 1		9211178	1		+			
ANR	9211355	Identifier	glyph_name		9211178	0					
ANR	9211356	PrimaryExpression	1		9211178	1					
ANR	9211357	ForStatement	"for ( count = 6 ; count > 0 ; count -- , p ++ )"		9211178	3					
ANR	9211358	ForInit	count = 6 ;	126:12:4566:4575	9211178	0	True				
ANR	9211359	AssignmentExpression	count = 6		9211178	0		=			
ANR	9211360	Identifier	count		9211178	0					
ANR	9211361	PrimaryExpression	6		9211178	1					
ANR	9211362	Condition	count > 0	126:23:4577:4585	9211178	1	True				
ANR	9211363	RelationalExpression	count > 0		9211178	0		>			
ANR	9211364	Identifier	count		9211178	0					
ANR	9211365	PrimaryExpression	0		9211178	1					
ANR	9211366	Expression	"count -- , p ++"	126:34:4588:4599	9211178	2	True				
ANR	9211367	PostIncDecOperationExpression	count --		9211178	0					
ANR	9211368	Identifier	count		9211178	0					
ANR	9211369	IncDec	--		9211178	1					
ANR	9211370	PostIncDecOperationExpression	p ++		9211178	1					
ANR	9211371	Identifier	p		9211178	0					
ANR	9211372	IncDec	++		9211178	1					
ANR	9211373	CompoundStatement		66:8:1849:1864	9211178	3					
ANR	9211374	IdentifierDeclStatement	char c = * p ;	128:8:4619:4639	9211178	0	True				
ANR	9211375	IdentifierDecl	c = * p		9211178	0					
ANR	9211376	IdentifierDeclType	char		9211178	0					
ANR	9211377	Identifier	c		9211178	1					
ANR	9211378	AssignmentExpression	c = * p		9211178	2		=			
ANR	9211379	Identifier	c		9211178	0					
ANR	9211380	UnaryOperationExpression	* p		9211178	1					
ANR	9211381	UnaryOperator	*		9211178	0					
ANR	9211382	Identifier	p		9211178	1					
ANR	9211383	IdentifierDeclStatement	unsigned int d ;	129:8:4649:4664	9211178	1	True				
ANR	9211384	IdentifierDecl	d		9211178	0					
ANR	9211385	IdentifierDeclType	unsigned int		9211178	0					
ANR	9211386	Identifier	d		9211178	1					
ANR	9211387	ExpressionStatement	d = ( unsigned char ) c - '0'	132:8:4676:4702	9211178	2	True				
ANR	9211388	AssignmentExpression	d = ( unsigned char ) c - '0'		9211178	0		=			
ANR	9211389	Identifier	d		9211178	0					
ANR	9211390	AdditiveExpression	( unsigned char ) c - '0'		9211178	1		-			
ANR	9211391	CastExpression	( unsigned char ) c		9211178	0					
ANR	9211392	CastTarget	unsigned char		9211178	0					
ANR	9211393	Identifier	c		9211178	1					
ANR	9211394	PrimaryExpression	'0'		9211178	1					
ANR	9211395	IfStatement	if ( d >= 10 )		9211178	3					
ANR	9211396	Condition	d >= 10	133:13:4717:4723	9211178	0	True				
ANR	9211397	RelationalExpression	d >= 10		9211178	0		>=			
ANR	9211398	Identifier	d		9211178	0					
ANR	9211399	PrimaryExpression	10		9211178	1					
ANR	9211400	CompoundStatement		71:8:1935:1935	9211178	1					
ANR	9211401	ExpressionStatement	d = ( unsigned char ) c - 'A'	135:10:4747:4773	9211178	0	True				
ANR	9211402	AssignmentExpression	d = ( unsigned char ) c - 'A'		9211178	0		=			
ANR	9211403	Identifier	d		9211178	0					
ANR	9211404	AdditiveExpression	( unsigned char ) c - 'A'		9211178	1		-			
ANR	9211405	CastExpression	( unsigned char ) c		9211178	0					
ANR	9211406	CastTarget	unsigned char		9211178	0					
ANR	9211407	Identifier	c		9211178	1					
ANR	9211408	PrimaryExpression	'A'		9211178	1					
ANR	9211409	IfStatement	if ( d >= 6 )		9211178	1					
ANR	9211410	Condition	d >= 6	136:15:4790:4795	9211178	0	True				
ANR	9211411	RelationalExpression	d >= 6		9211178	0		>=			
ANR	9211412	Identifier	d		9211178	0					
ANR	9211413	PrimaryExpression	6		9211178	1					
ANR	9211414	ExpressionStatement	d = 16	137:12:4811:4817	9211178	1	True				
ANR	9211415	AssignmentExpression	d = 16		9211178	0		=			
ANR	9211416	Identifier	d		9211178	0					
ANR	9211417	PrimaryExpression	16		9211178	1					
ANR	9211418	ElseStatement	else		9211178	0					
ANR	9211419	ExpressionStatement	d += 10	139:12:4846:4853	9211178	0	True				
ANR	9211420	AssignmentExpression	d += 10		9211178	0		+=			
ANR	9211421	Identifier	d		9211178	0					
ANR	9211422	PrimaryExpression	10		9211178	1					
ANR	9211423	IfStatement	if ( d >= 16 )		9211178	4					
ANR	9211424	Condition	d >= 16	142:13:4879:4885	9211178	0	True				
ANR	9211425	RelationalExpression	d >= 16		9211178	0		>=			
ANR	9211426	Identifier	d		9211178	0					
ANR	9211427	PrimaryExpression	16		9211178	1					
ANR	9211428	BreakStatement	break ;	143:10:4899:4904	9211178	1	True				
ANR	9211429	ExpressionStatement	value = ( value << 4 ) + d	145:8:4915:4941	9211178	5	True				
ANR	9211430	AssignmentExpression	value = ( value << 4 ) + d		9211178	0		=			
ANR	9211431	Identifier	value		9211178	0					
ANR	9211432	AdditiveExpression	( value << 4 ) + d		9211178	1		+			
ANR	9211433	ShiftExpression	value << 4		9211178	0		<<			
ANR	9211434	Identifier	value		9211178	0					
ANR	9211435	PrimaryExpression	4		9211178	1					
ANR	9211436	Identifier	d		9211178	1					
ANR	9211437	IfStatement	if ( count <= 2 )		9211178	4					
ANR	9211438	Condition	count <= 2	148:11:4963:4972	9211178	0	True				
ANR	9211439	RelationalExpression	count <= 2		9211178	0		<=			
ANR	9211440	Identifier	count		9211178	0					
ANR	9211441	PrimaryExpression	2		9211178	1					
ANR	9211442	CompoundStatement		86:6:2182:2182	9211178	1					
ANR	9211443	IfStatement	if ( * p == '\\0' )		9211178	0					
ANR	9211444	Condition	* p == '\\0'	150:13:4997:5006	9211178	0	True				
ANR	9211445	EqualityExpression	* p == '\\0'		9211178	0		==			
ANR	9211446	UnaryOperationExpression	* p		9211178	0					
ANR	9211447	UnaryOperator	*		9211178	0					
ANR	9211448	Identifier	p		9211178	1					
ANR	9211449	PrimaryExpression	'\\0'		9211178	1					
ANR	9211450	ReturnStatement	return value ;	151:10:5020:5032	9211178	1	True				
ANR	9211451	Identifier	value		9211178	0					
ANR	9211452	IfStatement	if ( * p == '.' )		9211178	1					
ANR	9211453	Condition	* p == '.'	152:13:5047:5055	9211178	0	True				
ANR	9211454	EqualityExpression	* p == '.'		9211178	0		==			
ANR	9211455	UnaryOperationExpression	* p		9211178	0					
ANR	9211456	UnaryOperator	*		9211178	0					
ANR	9211457	Identifier	p		9211178	1					
ANR	9211458	PrimaryExpression	'.'		9211178	1					
ANR	9211459	ReturnStatement	return ( FT_UInt32 ) ( value | VARIANT_BIT ) ;	153:10:5069:5110	9211178	1	True				
ANR	9211460	CastExpression	( FT_UInt32 ) ( value | VARIANT_BIT )		9211178	0					
ANR	9211461	CastTarget	FT_UInt32		9211178	0					
ANR	9211462	InclusiveOrExpression	value | VARIANT_BIT		9211178	1		|			
ANR	9211463	Identifier	value		9211178	0					
ANR	9211464	Identifier	VARIANT_BIT		9211178	1					
ANR	9211465	CompoundStatement		98:6:2510:2533	9211178	2					
ANR	9211466	IdentifierDeclStatement	const char * p = glyph_name ;	160:6:5273:5302	9211178	0	True				
ANR	9211467	IdentifierDecl	* p = glyph_name		9211178	0					
ANR	9211468	IdentifierDeclType	const char *		9211178	0					
ANR	9211469	Identifier	p		9211178	1					
ANR	9211470	AssignmentExpression	* p = glyph_name		9211178	2		=			
ANR	9211471	Identifier	glyph_name		9211178	0					
ANR	9211472	Identifier	glyph_name		9211178	1					
ANR	9211473	IdentifierDeclStatement	const char * dot = NULL ;	161:6:5310:5333	9211178	1	True				
ANR	9211474	IdentifierDecl	* dot = NULL		9211178	0					
ANR	9211475	IdentifierDeclType	const char *		9211178	0					
ANR	9211476	Identifier	dot		9211178	1					
ANR	9211477	AssignmentExpression	* dot = NULL		9211178	2		=			
ANR	9211478	Identifier	NULL		9211178	0					
ANR	9211479	Identifier	NULL		9211178	1					
ANR	9211480	ForStatement	for ( ; * p ; p ++ )		9211178	2					
ANR	9211481	Condition	* p	164:14:5351:5352	9211178	0	True				
ANR	9211482	UnaryOperationExpression	* p		9211178	0					
ANR	9211483	UnaryOperator	*		9211178	0					
ANR	9211484	Identifier	p		9211178	1					
ANR	9211485	PostIncDecOperationExpression	p ++	164:18:5355:5357	9211178	1	True				
ANR	9211486	Identifier	p		9211178	0					
ANR	9211487	IncDec	++		9211178	1					
ANR	9211488	CompoundStatement		102:6:2567:2567	9211178	2					
ANR	9211489	IfStatement	if ( * p == '.' && p > glyph_name )		9211178	0					
ANR	9211490	Condition	* p == '.' && p > glyph_name	166:13:5382:5408	9211178	0	True				
ANR	9211491	AndExpression	* p == '.' && p > glyph_name		9211178	0		&&			
ANR	9211492	EqualityExpression	* p == '.'		9211178	0		==			
ANR	9211493	UnaryOperationExpression	* p		9211178	0					
ANR	9211494	UnaryOperator	*		9211178	0					
ANR	9211495	Identifier	p		9211178	1					
ANR	9211496	PrimaryExpression	'.'		9211178	1					
ANR	9211497	RelationalExpression	p > glyph_name		9211178	1		>			
ANR	9211498	Identifier	p		9211178	0					
ANR	9211499	Identifier	glyph_name		9211178	1					
ANR	9211500	CompoundStatement		104:8:2620:2620	9211178	1					
ANR	9211501	ExpressionStatement	dot = p	168:10:5432:5439	9211178	0	True				
ANR	9211502	AssignmentExpression	dot = p		9211178	0		=			
ANR	9211503	Identifier	dot		9211178	0					
ANR	9211504	Identifier	p		9211178	1					
ANR	9211505	BreakStatement	break ;	169:10:5451:5456	9211178	1	True				
ANR	9211506	IfStatement	if ( ! dot )		9211178	3					
ANR	9211507	Condition	! dot	174:11:5546:5549	9211178	0	True				
ANR	9211508	UnaryOperationExpression	! dot		9211178	0					
ANR	9211509	UnaryOperator	!		9211178	0					
ANR	9211510	Identifier	dot		9211178	1					
ANR	9211511	ReturnStatement	"return ( FT_UInt32 ) ft_get_adobe_glyph_index ( glyph_name , p ) ;"	175:8:5561:5620	9211178	1	True				
ANR	9211512	CastExpression	"( FT_UInt32 ) ft_get_adobe_glyph_index ( glyph_name , p )"		9211178	0					
ANR	9211513	CastTarget	FT_UInt32		9211178	0					
ANR	9211514	CallExpression	"ft_get_adobe_glyph_index ( glyph_name , p )"		9211178	1					
ANR	9211515	Callee	ft_get_adobe_glyph_index		9211178	0					
ANR	9211516	Identifier	ft_get_adobe_glyph_index		9211178	0					
ANR	9211517	ArgumentList	glyph_name		9211178	1					
ANR	9211518	Argument	glyph_name		9211178	0					
ANR	9211519	Identifier	glyph_name		9211178	0					
ANR	9211520	Argument	p		9211178	1					
ANR	9211521	Identifier	p		9211178	0					
ANR	9211522	ElseStatement	else		9211178	0					
ANR	9211523	ReturnStatement	"return ( FT_UInt32 ) ( ft_get_adobe_glyph_index ( glyph_name , dot ) | VARIANT_BIT ) ;"	177:8:5641:5748	9211178	0	True				
ANR	9211524	CastExpression	"( FT_UInt32 ) ( ft_get_adobe_glyph_index ( glyph_name , dot ) | VARIANT_BIT )"		9211178	0					
ANR	9211525	CastTarget	FT_UInt32		9211178	0					
ANR	9211526	InclusiveOrExpression	"ft_get_adobe_glyph_index ( glyph_name , dot ) | VARIANT_BIT"		9211178	1		|			
ANR	9211527	CallExpression	"ft_get_adobe_glyph_index ( glyph_name , dot )"		9211178	0					
ANR	9211528	Callee	ft_get_adobe_glyph_index		9211178	0					
ANR	9211529	Identifier	ft_get_adobe_glyph_index		9211178	0					
ANR	9211530	ArgumentList	glyph_name		9211178	1					
ANR	9211531	Argument	glyph_name		9211178	0					
ANR	9211532	Identifier	glyph_name		9211178	0					
ANR	9211533	Argument	dot		9211178	1					
ANR	9211534	Identifier	dot		9211178	0					
ANR	9211535	Identifier	VARIANT_BIT		9211178	1					
ANR	9211536	ReturnType	static FT_UInt32		9211178	1					
ANR	9211537	Identifier	ps_unicode_value		9211178	2					
ANR	9211538	ParameterList	const char * glyph_name		9211178	3					
ANR	9211539	Parameter	const char * glyph_name	63:20:2771:2793	9211178	0	True				
ANR	9211540	ParameterType	const char *		9211178	0					
ANR	9211541	Identifier	glyph_name		9211178	1					
ANR	9211542	CFGEntryNode	ENTRY		9211178		True				
ANR	9211543	CFGExitNode	EXIT		9211178		True				
ANR	9211544	Symbol	p		9211178						
ANR	9211545	Symbol	* glyph_name		9211178						
ANR	9211546	Symbol	c		9211178						
ANR	9211547	Symbol	NULL		9211178						
ANR	9211548	Symbol	d		9211178						
ANR	9211549	Symbol	VARIANT_BIT		9211178						
ANR	9211550	Symbol	glyph_name		9211178						
ANR	9211551	Symbol	count		9211178						
ANR	9211552	Symbol	dot		9211178						
ANR	9211553	Symbol	* p		9211178						
ANR	9211554	Symbol	ft_get_adobe_glyph_index		9211178						
ANR	9211555	Symbol	value		9211178						
ANR	9211556	Function	compare_uni_maps	185:2:5839:6514							
ANR	9211557	FunctionDef	"compare_uni_maps (const void * a , const void * b)"		9211556	0					
ANR	9211558	CompoundStatement		187:2:5912:6514	9211556	0					
ANR	9211559	IdentifierDeclStatement	PS_UniMap * map1 = ( PS_UniMap * ) a ;	188:4:5918:5950	9211556	0	True				
ANR	9211560	IdentifierDecl	* map1 = ( PS_UniMap * ) a		9211556	0					
ANR	9211561	IdentifierDeclType	PS_UniMap *		9211556	0					
ANR	9211562	Identifier	map1		9211556	1					
ANR	9211563	AssignmentExpression	* map1 = ( PS_UniMap * ) a		9211556	2		=			
ANR	9211564	Identifier	map1		9211556	0					
ANR	9211565	CastExpression	( PS_UniMap * ) a		9211556	1					
ANR	9211566	CastTarget	PS_UniMap *		9211556	0					
ANR	9211567	Identifier	a		9211556	1					
ANR	9211568	IdentifierDeclStatement	PS_UniMap * map2 = ( PS_UniMap * ) b ;	189:4:5956:5988	9211556	1	True				
ANR	9211569	IdentifierDecl	* map2 = ( PS_UniMap * ) b		9211556	0					
ANR	9211570	IdentifierDeclType	PS_UniMap *		9211556	0					
ANR	9211571	Identifier	map2		9211556	1					
ANR	9211572	AssignmentExpression	* map2 = ( PS_UniMap * ) b		9211556	2		=			
ANR	9211573	Identifier	map2		9211556	0					
ANR	9211574	CastExpression	( PS_UniMap * ) b		9211556	1					
ANR	9211575	CastTarget	PS_UniMap *		9211556	0					
ANR	9211576	Identifier	b		9211556	1					
ANR	9211577	IdentifierDeclStatement	FT_UInt32 unicode1 = BASE_GLYPH ( map1 -> unicode ) ;	190:4:5994:6044	9211556	2	True				
ANR	9211578	IdentifierDecl	unicode1 = BASE_GLYPH ( map1 -> unicode )		9211556	0					
ANR	9211579	IdentifierDeclType	FT_UInt32		9211556	0					
ANR	9211580	Identifier	unicode1		9211556	1					
ANR	9211581	AssignmentExpression	unicode1 = BASE_GLYPH ( map1 -> unicode )		9211556	2		=			
ANR	9211582	Identifier	unicode1		9211556	0					
ANR	9211583	CallExpression	BASE_GLYPH ( map1 -> unicode )		9211556	1					
ANR	9211584	Callee	BASE_GLYPH		9211556	0					
ANR	9211585	Identifier	BASE_GLYPH		9211556	0					
ANR	9211586	ArgumentList	map1 -> unicode		9211556	1					
ANR	9211587	Argument	map1 -> unicode		9211556	0					
ANR	9211588	PtrMemberAccess	map1 -> unicode		9211556	0					
ANR	9211589	Identifier	map1		9211556	0					
ANR	9211590	Identifier	unicode		9211556	1					
ANR	9211591	IdentifierDeclStatement	FT_UInt32 unicode2 = BASE_GLYPH ( map2 -> unicode ) ;	191:4:6050:6100	9211556	3	True				
ANR	9211592	IdentifierDecl	unicode2 = BASE_GLYPH ( map2 -> unicode )		9211556	0					
ANR	9211593	IdentifierDeclType	FT_UInt32		9211556	0					
ANR	9211594	Identifier	unicode2		9211556	1					
ANR	9211595	AssignmentExpression	unicode2 = BASE_GLYPH ( map2 -> unicode )		9211556	2		=			
ANR	9211596	Identifier	unicode2		9211556	0					
ANR	9211597	CallExpression	BASE_GLYPH ( map2 -> unicode )		9211556	1					
ANR	9211598	Callee	BASE_GLYPH		9211556	0					
ANR	9211599	Identifier	BASE_GLYPH		9211556	0					
ANR	9211600	ArgumentList	map2 -> unicode		9211556	1					
ANR	9211601	Argument	map2 -> unicode		9211556	0					
ANR	9211602	PtrMemberAccess	map2 -> unicode		9211556	0					
ANR	9211603	Identifier	map2		9211556	0					
ANR	9211604	Identifier	unicode		9211556	1					
ANR	9211605	IfStatement	if ( unicode1 == unicode2 )		9211556	4					
ANR	9211606	Condition	unicode1 == unicode2	195:9:6162:6181	9211556	0	True				
ANR	9211607	EqualityExpression	unicode1 == unicode2		9211556	0		==			
ANR	9211608	Identifier	unicode1		9211556	0					
ANR	9211609	Identifier	unicode2		9211556	1					
ANR	9211610	CompoundStatement		10:4:276:276	9211556	1					
ANR	9211611	IfStatement	if ( map1 -> unicode > map2 -> unicode )		9211556	0					
ANR	9211612	Condition	map1 -> unicode > map2 -> unicode	197:11:6202:6230	9211556	0	True				
ANR	9211613	RelationalExpression	map1 -> unicode > map2 -> unicode		9211556	0		>			
ANR	9211614	PtrMemberAccess	map1 -> unicode		9211556	0					
ANR	9211615	Identifier	map1		9211556	0					
ANR	9211616	Identifier	unicode		9211556	1					
ANR	9211617	PtrMemberAccess	map2 -> unicode		9211556	1					
ANR	9211618	Identifier	map2		9211556	0					
ANR	9211619	Identifier	unicode		9211556	1					
ANR	9211620	ReturnStatement	return 1 ;	198:8:6242:6250	9211556	1	True				
ANR	9211621	PrimaryExpression	1		9211556	0					
ANR	9211622	ElseStatement	else		9211556	0					
ANR	9211623	IfStatement	if ( map1 -> unicode < map2 -> unicode )		9211556	0					
ANR	9211624	Condition	map1 -> unicode < map2 -> unicode	199:16:6268:6296	9211556	0	True				
ANR	9211625	RelationalExpression	map1 -> unicode < map2 -> unicode		9211556	0		<			
ANR	9211626	PtrMemberAccess	map1 -> unicode		9211556	0					
ANR	9211627	Identifier	map1		9211556	0					
ANR	9211628	Identifier	unicode		9211556	1					
ANR	9211629	PtrMemberAccess	map2 -> unicode		9211556	1					
ANR	9211630	Identifier	map2		9211556	0					
ANR	9211631	Identifier	unicode		9211556	1					
ANR	9211632	ReturnStatement	return - 1 ;	200:8:6308:6317	9211556	1	True				
ANR	9211633	UnaryOperationExpression	- 1		9211556	0					
ANR	9211634	UnaryOperator	-		9211556	0					
ANR	9211635	PrimaryExpression	1		9211556	1					
ANR	9211636	ElseStatement	else		9211556	0					
ANR	9211637	ReturnStatement	return 0 ;	202:8:6338:6346	9211556	0	True				
ANR	9211638	PrimaryExpression	0		9211556	0					
ANR	9211639	ElseStatement	else		9211556	0					
ANR	9211640	CompoundStatement		19:4:454:454	9211556	0					
ANR	9211641	IfStatement	if ( unicode1 > unicode2 )		9211556	0					
ANR	9211642	Condition	unicode1 > unicode2	206:11:6380:6398	9211556	0	True				
ANR	9211643	RelationalExpression	unicode1 > unicode2		9211556	0		>			
ANR	9211644	Identifier	unicode1		9211556	0					
ANR	9211645	Identifier	unicode2		9211556	1					
ANR	9211646	ReturnStatement	return 1 ;	207:8:6410:6418	9211556	1	True				
ANR	9211647	PrimaryExpression	1		9211556	0					
ANR	9211648	ElseStatement	else		9211556	0					
ANR	9211649	IfStatement	if ( unicode1 < unicode2 )		9211556	0					
ANR	9211650	Condition	unicode1 < unicode2	208:16:6436:6454	9211556	0	True				
ANR	9211651	RelationalExpression	unicode1 < unicode2		9211556	0		<			
ANR	9211652	Identifier	unicode1		9211556	0					
ANR	9211653	Identifier	unicode2		9211556	1					
ANR	9211654	ReturnStatement	return - 1 ;	209:8:6466:6475	9211556	1	True				
ANR	9211655	UnaryOperationExpression	- 1		9211556	0					
ANR	9211656	UnaryOperator	-		9211556	0					
ANR	9211657	PrimaryExpression	1		9211556	1					
ANR	9211658	ElseStatement	else		9211556	0					
ANR	9211659	ReturnStatement	return 0 ;	211:8:6496:6504	9211556	0	True				
ANR	9211660	PrimaryExpression	0		9211556	0					
ANR	9211661	Identifier	compare_uni_maps		9211556	1					
ANR	9211662	ParameterList	"const void * a , const void * b"		9211556	2					
ANR	9211663	Parameter	const void * a	185:20:5857:5870	9211556	0	True				
ANR	9211664	ParameterType	const void *		9211556	0					
ANR	9211665	Identifier	a		9211556	1					
ANR	9211666	Parameter	const void * b	186:20:5893:5906	9211556	1	True				
ANR	9211667	ParameterType	const void *		9211556	0					
ANR	9211668	Identifier	b		9211556	1					
ANR	9211669	CFGEntryNode	ENTRY		9211556		True				
ANR	9211670	CFGExitNode	EXIT		9211556		True				
ANR	9211671	Symbol	a		9211556						
ANR	9211672	Symbol	b		9211556						
ANR	9211673	Symbol	map2		9211556						
ANR	9211674	Symbol	map1		9211556						
ANR	9211675	Symbol	BASE_GLYPH		9211556						
ANR	9211676	Symbol	* map1		9211556						
ANR	9211677	Symbol	map1 -> unicode		9211556						
ANR	9211678	Symbol	* map2		9211556						
ANR	9211679	Symbol	unicode1		9211556						
ANR	9211680	Symbol	map2 -> unicode		9211556						
ANR	9211681	Symbol	unicode2		9211556						
ANR	9211682	DeclStmt									
ANR	9211683	Decl							const FT_UInt32	const FT_UInt32 [ EXTRA_GLYPH_LIST_SIZE ]	ft_extra_glyph_unicodes
ANR	9211684	DeclStmt									
ANR	9211685	Decl							const char	const char [ ]	ft_extra_glyph_names
ANR	9211686	DeclStmt									
ANR	9211687	Decl							const FT_Int	const FT_Int [ EXTRA_GLYPH_LIST_SIZE ]	ft_extra_glyph_name_offsets
ANR	9211688	Function	ps_check_extra_glyph_name	267:2:7507:8139							
ANR	9211689	FunctionDef	"ps_check_extra_glyph_name (const char * gname , FT_UInt glyph , FT_UInt * extra_glyphs , FT_UInt * states)"		9211688	0					
ANR	9211690	CompoundStatement		272:2:7726:8139	9211688	0					
ANR	9211691	IdentifierDeclStatement	FT_UInt n ;	273:4:7732:7742	9211688	0	True				
ANR	9211692	IdentifierDecl	n		9211688	0					
ANR	9211693	IdentifierDeclType	FT_UInt		9211688	0					
ANR	9211694	Identifier	n		9211688	1					
ANR	9211695	ForStatement	for ( n = 0 ; n < EXTRA_GLYPH_LIST_SIZE ; n ++ )		9211688	1					
ANR	9211696	ForInit	n = 0 ;	276:10:7756:7761	9211688	0	True				
ANR	9211697	AssignmentExpression	n = 0		9211688	0		=			
ANR	9211698	Identifier	n		9211688	0					
ANR	9211699	PrimaryExpression	0		9211688	1					
ANR	9211700	Condition	n < EXTRA_GLYPH_LIST_SIZE	276:17:7763:7787	9211688	1	True				
ANR	9211701	RelationalExpression	n < EXTRA_GLYPH_LIST_SIZE		9211688	0		<			
ANR	9211702	Identifier	n		9211688	0					
ANR	9211703	Identifier	EXTRA_GLYPH_LIST_SIZE		9211688	1					
ANR	9211704	PostIncDecOperationExpression	n ++	276:44:7790:7792	9211688	2	True				
ANR	9211705	Identifier	n		9211688	0					
ANR	9211706	IncDec	++		9211688	1					
ANR	9211707	CompoundStatement		6:4:73:73	9211688	3					
ANR	9211708	IfStatement	"if ( ft_strcmp ( ft_extra_glyph_names + ft_extra_glyph_name_offsets [ n ] , gname ) == 0 )"		9211688	0					
ANR	9211709	Condition	"ft_strcmp ( ft_extra_glyph_names + ft_extra_glyph_name_offsets [ n ] , gname ) == 0"	278:11:7813:7914	9211688	0	True				
ANR	9211710	EqualityExpression	"ft_strcmp ( ft_extra_glyph_names + ft_extra_glyph_name_offsets [ n ] , gname ) == 0"		9211688	0		==			
ANR	9211711	CallExpression	"ft_strcmp ( ft_extra_glyph_names + ft_extra_glyph_name_offsets [ n ] , gname )"		9211688	0					
ANR	9211712	Callee	ft_strcmp		9211688	0					
ANR	9211713	Identifier	ft_strcmp		9211688	0					
ANR	9211714	ArgumentList	ft_extra_glyph_names + ft_extra_glyph_name_offsets [ n ]		9211688	1					
ANR	9211715	Argument	ft_extra_glyph_names + ft_extra_glyph_name_offsets [ n ]		9211688	0					
ANR	9211716	AdditiveExpression	ft_extra_glyph_names + ft_extra_glyph_name_offsets [ n ]		9211688	0		+			
ANR	9211717	Identifier	ft_extra_glyph_names		9211688	0					
ANR	9211718	ArrayIndexing	ft_extra_glyph_name_offsets [ n ]		9211688	1					
ANR	9211719	Identifier	ft_extra_glyph_name_offsets		9211688	0					
ANR	9211720	Identifier	n		9211688	1					
ANR	9211721	Argument	gname		9211688	1					
ANR	9211722	Identifier	gname		9211688	0					
ANR	9211723	PrimaryExpression	0		9211688	1					
ANR	9211724	CompoundStatement		9:6:197:197	9211688	1					
ANR	9211725	IfStatement	if ( states [ n ] == 0 )		9211688	0					
ANR	9211726	Condition	states [ n ] == 0	281:13:7939:7952	9211688	0	True				
ANR	9211727	EqualityExpression	states [ n ] == 0		9211688	0		==			
ANR	9211728	ArrayIndexing	states [ n ]		9211688	0					
ANR	9211729	Identifier	states		9211688	0					
ANR	9211730	Identifier	n		9211688	1					
ANR	9211731	PrimaryExpression	0		9211688	1					
ANR	9211732	CompoundStatement		11:8:237:237	9211688	1					
ANR	9211733	ExpressionStatement	states [ n ] = 1	284:10:8042:8059	9211688	0	True				
ANR	9211734	AssignmentExpression	states [ n ] = 1		9211688	0		=			
ANR	9211735	ArrayIndexing	states [ n ]		9211688	0					
ANR	9211736	Identifier	states		9211688	0					
ANR	9211737	Identifier	n		9211688	1					
ANR	9211738	PrimaryExpression	1		9211688	1					
ANR	9211739	ExpressionStatement	extra_glyphs [ n ] = glyph	285:10:8071:8094	9211688	1	True				
ANR	9211740	AssignmentExpression	extra_glyphs [ n ] = glyph		9211688	0		=			
ANR	9211741	ArrayIndexing	extra_glyphs [ n ]		9211688	0					
ANR	9211742	Identifier	extra_glyphs		9211688	0					
ANR	9211743	Identifier	n		9211688	1					
ANR	9211744	Identifier	glyph		9211688	1					
ANR	9211745	ReturnStatement	return ;	288:8:8115:8121	9211688	1	True				
ANR	9211746	ReturnType	static void		9211688	1					
ANR	9211747	Identifier	ps_check_extra_glyph_name		9211688	2					
ANR	9211748	ParameterList	"const char * gname , FT_UInt glyph , FT_UInt * extra_glyphs , FT_UInt * states"		9211688	3					
ANR	9211749	Parameter	const char * gname	268:29:7548:7565	9211688	0	True				
ANR	9211750	ParameterType	const char *		9211688	0					
ANR	9211751	Identifier	gname		9211688	1					
ANR	9211752	Parameter	FT_UInt glyph	269:29:7597:7614	9211688	1	True				
ANR	9211753	ParameterType	FT_UInt		9211688	0					
ANR	9211754	Identifier	glyph		9211688	1					
ANR	9211755	Parameter	FT_UInt * extra_glyphs	270:29:7646:7670	9211688	2	True				
ANR	9211756	ParameterType	FT_UInt *		9211688	0					
ANR	9211757	Identifier	extra_glyphs		9211688	1					
ANR	9211758	Parameter	FT_UInt * states	271:29:7702:7720	9211688	3	True				
ANR	9211759	ParameterType	FT_UInt *		9211688	0					
ANR	9211760	Identifier	states		9211688	1					
ANR	9211761	CFGEntryNode	ENTRY		9211688		True				
ANR	9211762	CFGExitNode	EXIT		9211688		True				
ANR	9211763	Symbol	ft_extra_glyph_names		9211688						
ANR	9211764	Symbol	ft_extra_glyph_name_offsets		9211688						
ANR	9211765	Symbol	gname		9211688						
ANR	9211766	Symbol	extra_glyphs		9211688						
ANR	9211767	Symbol	n		9211688						
ANR	9211768	Symbol	states		9211688						
ANR	9211769	Symbol	glyph		9211688						
ANR	9211770	Symbol	* extra_glyphs		9211688						
ANR	9211771	Symbol	* ft_extra_glyph_name_offsets		9211688						
ANR	9211772	Symbol	ft_strcmp		9211688						
ANR	9211773	Symbol	* n		9211688						
ANR	9211774	Symbol	EXTRA_GLYPH_LIST_SIZE		9211688						
ANR	9211775	Symbol	* states		9211688						
ANR	9211776	Function	ps_check_extra_glyph_unicode	294:2:8145:8524							
ANR	9211777	FunctionDef	"ps_check_extra_glyph_unicode (FT_UInt32 uni_char , FT_UInt * states)"		9211776	0					
ANR	9211778	CompoundStatement		297:2:8264:8524	9211776	0					
ANR	9211779	IdentifierDeclStatement	FT_UInt n ;	298:4:8270:8280	9211776	0	True				
ANR	9211780	IdentifierDecl	n		9211776	0					
ANR	9211781	IdentifierDeclType	FT_UInt		9211776	0					
ANR	9211782	Identifier	n		9211776	1					
ANR	9211783	ForStatement	for ( n = 0 ; n < EXTRA_GLYPH_LIST_SIZE ; n ++ )		9211776	1					
ANR	9211784	ForInit	n = 0 ;	301:10:8294:8299	9211776	0	True				
ANR	9211785	AssignmentExpression	n = 0		9211776	0		=			
ANR	9211786	Identifier	n		9211776	0					
ANR	9211787	PrimaryExpression	0		9211776	1					
ANR	9211788	Condition	n < EXTRA_GLYPH_LIST_SIZE	301:17:8301:8325	9211776	1	True				
ANR	9211789	RelationalExpression	n < EXTRA_GLYPH_LIST_SIZE		9211776	0		<			
ANR	9211790	Identifier	n		9211776	0					
ANR	9211791	Identifier	EXTRA_GLYPH_LIST_SIZE		9211776	1					
ANR	9211792	PostIncDecOperationExpression	n ++	301:44:8328:8330	9211776	2	True				
ANR	9211793	Identifier	n		9211776	0					
ANR	9211794	IncDec	++		9211776	1					
ANR	9211795	CompoundStatement		6:4:73:73	9211776	3					
ANR	9211796	IfStatement	if ( uni_char == ft_extra_glyph_unicodes [ n ] )		9211776	0					
ANR	9211797	Condition	uni_char == ft_extra_glyph_unicodes [ n ]	303:11:8351:8388	9211776	0	True				
ANR	9211798	EqualityExpression	uni_char == ft_extra_glyph_unicodes [ n ]		9211776	0		==			
ANR	9211799	Identifier	uni_char		9211776	0					
ANR	9211800	ArrayIndexing	ft_extra_glyph_unicodes [ n ]		9211776	1					
ANR	9211801	Identifier	ft_extra_glyph_unicodes		9211776	0					
ANR	9211802	Identifier	n		9211776	1					
ANR	9211803	CompoundStatement		8:6:133:133	9211776	1					
ANR	9211804	ExpressionStatement	states [ n ] = 2	306:8:8476:8489	9211776	0	True				
ANR	9211805	AssignmentExpression	states [ n ] = 2		9211776	0		=			
ANR	9211806	ArrayIndexing	states [ n ]		9211776	0					
ANR	9211807	Identifier	states		9211776	0					
ANR	9211808	Identifier	n		9211776	1					
ANR	9211809	PrimaryExpression	2		9211776	1					
ANR	9211810	ReturnStatement	return ;	308:8:8500:8506	9211776	1	True				
ANR	9211811	ReturnType	static void		9211776	1					
ANR	9211812	Identifier	ps_check_extra_glyph_unicode		9211776	2					
ANR	9211813	ParameterList	"FT_UInt32 uni_char , FT_UInt * states"		9211776	3					
ANR	9211814	Parameter	FT_UInt32 uni_char	295:32:8189:8207	9211776	0	True				
ANR	9211815	ParameterType	FT_UInt32		9211776	0					
ANR	9211816	Identifier	uni_char		9211776	1					
ANR	9211817	Parameter	FT_UInt * states	296:32:8242:8258	9211776	1	True				
ANR	9211818	ParameterType	FT_UInt *		9211776	0					
ANR	9211819	Identifier	states		9211776	1					
ANR	9211820	CFGEntryNode	ENTRY		9211776		True				
ANR	9211821	CFGExitNode	EXIT		9211776		True				
ANR	9211822	Symbol	* ft_extra_glyph_unicodes		9211776						
ANR	9211823	Symbol	uni_char		9211776						
ANR	9211824	Symbol	* n		9211776						
ANR	9211825	Symbol	EXTRA_GLYPH_LIST_SIZE		9211776						
ANR	9211826	Symbol	ft_extra_glyph_unicodes		9211776						
ANR	9211827	Symbol	n		9211776						
ANR	9211828	Symbol	* states		9211776						
ANR	9211829	Symbol	states		9211776						
ANR	9211830	Function	ps_unicodes_init	315:2:8595:11300							
ANR	9211831	FunctionDef	"ps_unicodes_init (FT_Memory memory , PS_Unicodes table , FT_UInt num_glyphs , PS_GetGlyphNameFunc get_glyph_name , PS_FreeGlyphNameFunc free_glyph_name , FT_Pointer glyph_data)"		9211830	0					
ANR	9211832	CompoundStatement		322:2:8938:11300	9211830	0					
ANR	9211833	IdentifierDeclStatement	FT_Error error ;	323:4:8944:8959	9211830	0	True				
ANR	9211834	IdentifierDecl	error		9211830	0					
ANR	9211835	IdentifierDeclType	FT_Error		9211830	0					
ANR	9211836	Identifier	error		9211830	1					
ANR	9211837	IdentifierDeclStatement	"FT_UInt extra_glyph_list_states [ ] = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } ;"	325:4:8966:9035	9211830	1	True				
ANR	9211838	IdentifierDecl	"extra_glyph_list_states [ ] = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 }"		9211830	0					
ANR	9211839	IdentifierDeclType	FT_UInt [ ]		9211830	0					
ANR	9211840	Identifier	extra_glyph_list_states		9211830	1					
ANR	9211841	AssignmentExpression	"extra_glyph_list_states [ ] = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 }"		9211830	2		=			
ANR	9211842	Identifier	extra_glyph_list_states		9211830	0					
ANR	9211843	InitializerList	0		9211830	1					
ANR	9211844	PrimaryExpression	0		9211830	0					
ANR	9211845	PrimaryExpression	0		9211830	1					
ANR	9211846	PrimaryExpression	0		9211830	2					
ANR	9211847	PrimaryExpression	0		9211830	3					
ANR	9211848	PrimaryExpression	0		9211830	4					
ANR	9211849	PrimaryExpression	0		9211830	5					
ANR	9211850	PrimaryExpression	0		9211830	6					
ANR	9211851	PrimaryExpression	0		9211830	7					
ANR	9211852	PrimaryExpression	0		9211830	8					
ANR	9211853	PrimaryExpression	0		9211830	9					
ANR	9211854	IdentifierDeclStatement	FT_UInt extra_glyphs [ EXTRA_GLYPH_LIST_SIZE ] ;	326:4:9041:9085	9211830	2	True				
ANR	9211855	IdentifierDecl	extra_glyphs [ EXTRA_GLYPH_LIST_SIZE ]		9211830	0					
ANR	9211856	IdentifierDeclType	FT_UInt [ EXTRA_GLYPH_LIST_SIZE ]		9211830	0					
ANR	9211857	Identifier	extra_glyphs		9211830	1					
ANR	9211858	Identifier	EXTRA_GLYPH_LIST_SIZE		9211830	2					
ANR	9211859	ExpressionStatement	table -> num_maps = 0	330:4:9131:9150	9211830	3	True				
ANR	9211860	AssignmentExpression	table -> num_maps = 0		9211830	0		=			
ANR	9211861	PtrMemberAccess	table -> num_maps		9211830	0					
ANR	9211862	Identifier	table		9211830	0					
ANR	9211863	Identifier	num_maps		9211830	1					
ANR	9211864	PrimaryExpression	0		9211830	1					
ANR	9211865	ExpressionStatement	table -> maps = NULL	331:4:9156:9178	9211830	4	True				
ANR	9211866	AssignmentExpression	table -> maps = NULL		9211830	0		=			
ANR	9211867	PtrMemberAccess	table -> maps		9211830	0					
ANR	9211868	Identifier	table		9211830	0					
ANR	9211869	Identifier	maps		9211830	1					
ANR	9211870	Identifier	NULL		9211830	1					
ANR	9211871	IfStatement	"if ( ! FT_NEW_ARRAY ( table -> maps , num_glyphs + EXTRA_GLYPH_LIST_SIZE ) )"		9211830	5					
ANR	9211872	Condition	"! FT_NEW_ARRAY ( table -> maps , num_glyphs + EXTRA_GLYPH_LIST_SIZE )"	333:9:9190:9253	9211830	0	True				
ANR	9211873	UnaryOperationExpression	"! FT_NEW_ARRAY ( table -> maps , num_glyphs + EXTRA_GLYPH_LIST_SIZE )"		9211830	0					
ANR	9211874	UnaryOperator	!		9211830	0					
ANR	9211875	CallExpression	"FT_NEW_ARRAY ( table -> maps , num_glyphs + EXTRA_GLYPH_LIST_SIZE )"		9211830	1					
ANR	9211876	Callee	FT_NEW_ARRAY		9211830	0					
ANR	9211877	Identifier	FT_NEW_ARRAY		9211830	0					
ANR	9211878	ArgumentList	table -> maps		9211830	1					
ANR	9211879	Argument	table -> maps		9211830	0					
ANR	9211880	PtrMemberAccess	table -> maps		9211830	0					
ANR	9211881	Identifier	table		9211830	0					
ANR	9211882	Identifier	maps		9211830	1					
ANR	9211883	Argument	num_glyphs + EXTRA_GLYPH_LIST_SIZE		9211830	1					
ANR	9211884	AdditiveExpression	num_glyphs + EXTRA_GLYPH_LIST_SIZE		9211830	0		+			
ANR	9211885	Identifier	num_glyphs		9211830	0					
ANR	9211886	Identifier	EXTRA_GLYPH_LIST_SIZE		9211830	1					
ANR	9211887	CompoundStatement		17:6:399:419	9211830	1					
ANR	9211888	IdentifierDeclStatement	FT_UInt n ;	335:6:9269:9282	9211830	0	True				
ANR	9211889	IdentifierDecl	n		9211830	0					
ANR	9211890	IdentifierDeclType	FT_UInt		9211830	0					
ANR	9211891	Identifier	n		9211830	1					
ANR	9211892	IdentifierDeclStatement	FT_UInt count ;	336:6:9290:9307	9211830	1	True				
ANR	9211893	IdentifierDecl	count		9211830	0					
ANR	9211894	IdentifierDeclType	FT_UInt		9211830	0					
ANR	9211895	Identifier	count		9211830	1					
ANR	9211896	IdentifierDeclStatement	PS_UniMap * map ;	337:6:9315:9330	9211830	2	True				
ANR	9211897	IdentifierDecl	* map		9211830	0					
ANR	9211898	IdentifierDeclType	PS_UniMap *		9211830	0					
ANR	9211899	Identifier	map		9211830	1					
ANR	9211900	IdentifierDeclStatement	FT_UInt32 uni_char ;	338:6:9338:9358	9211830	3	True				
ANR	9211901	IdentifierDecl	uni_char		9211830	0					
ANR	9211902	IdentifierDeclType	FT_UInt32		9211830	0					
ANR	9211903	Identifier	uni_char		9211830	1					
ANR	9211904	ExpressionStatement	map = table -> maps	341:6:9368:9385	9211830	4	True				
ANR	9211905	AssignmentExpression	map = table -> maps		9211830	0		=			
ANR	9211906	Identifier	map		9211830	0					
ANR	9211907	PtrMemberAccess	table -> maps		9211830	1					
ANR	9211908	Identifier	table		9211830	0					
ANR	9211909	Identifier	maps		9211830	1					
ANR	9211910	ForStatement	for ( n = 0 ; n < num_glyphs ; n ++ )		9211830	5					
ANR	9211911	ForInit	n = 0 ;	343:12:9400:9405	9211830	0	True				
ANR	9211912	AssignmentExpression	n = 0		9211830	0		=			
ANR	9211913	Identifier	n		9211830	0					
ANR	9211914	PrimaryExpression	0		9211830	1					
ANR	9211915	Condition	n < num_glyphs	343:19:9407:9420	9211830	1	True				
ANR	9211916	RelationalExpression	n < num_glyphs		9211830	0		<			
ANR	9211917	Identifier	n		9211830	0					
ANR	9211918	Identifier	num_glyphs		9211830	1					
ANR	9211919	PostIncDecOperationExpression	n ++	343:35:9423:9425	9211830	2	True				
ANR	9211920	Identifier	n		9211830	0					
ANR	9211921	IncDec	++		9211830	1					
ANR	9211922	CompoundStatement		24:8:506:558	9211830	3					
ANR	9211923	IdentifierDeclStatement	"const char * gname = get_glyph_name ( glyph_data , n ) ;"	345:8:9445:9497	9211830	0	True				
ANR	9211924	IdentifierDecl	"* gname = get_glyph_name ( glyph_data , n )"		9211830	0					
ANR	9211925	IdentifierDeclType	const char *		9211830	0					
ANR	9211926	Identifier	gname		9211830	1					
ANR	9211927	AssignmentExpression	"* gname = get_glyph_name ( glyph_data , n )"		9211830	2		=			
ANR	9211928	Identifier	gname		9211830	0					
ANR	9211929	CallExpression	"get_glyph_name ( glyph_data , n )"		9211830	1					
ANR	9211930	Callee	get_glyph_name		9211830	0					
ANR	9211931	Identifier	get_glyph_name		9211830	0					
ANR	9211932	ArgumentList	glyph_data		9211830	1					
ANR	9211933	Argument	glyph_data		9211830	0					
ANR	9211934	Identifier	glyph_data		9211830	0					
ANR	9211935	Argument	n		9211830	1					
ANR	9211936	Identifier	n		9211830	0					
ANR	9211937	IfStatement	if ( gname )		9211830	1					
ANR	9211938	Condition	gname	348:13:9514:9518	9211830	0	True				
ANR	9211939	Identifier	gname		9211830	0					
ANR	9211940	CompoundStatement		28:8:591:591	9211830	1					
ANR	9211941	ExpressionStatement	"ps_check_extra_glyph_name ( gname , n , extra_glyphs , extra_glyph_list_states )"	350:10:9542:9655	9211830	0	True				
ANR	9211942	CallExpression	"ps_check_extra_glyph_name ( gname , n , extra_glyphs , extra_glyph_list_states )"		9211830	0					
ANR	9211943	Callee	ps_check_extra_glyph_name		9211830	0					
ANR	9211944	Identifier	ps_check_extra_glyph_name		9211830	0					
ANR	9211945	ArgumentList	gname		9211830	1					
ANR	9211946	Argument	gname		9211830	0					
ANR	9211947	Identifier	gname		9211830	0					
ANR	9211948	Argument	n		9211830	1					
ANR	9211949	Identifier	n		9211830	0					
ANR	9211950	Argument	extra_glyphs		9211830	2					
ANR	9211951	Identifier	extra_glyphs		9211830	0					
ANR	9211952	Argument	extra_glyph_list_states		9211830	3					
ANR	9211953	Identifier	extra_glyph_list_states		9211830	0					
ANR	9211954	ExpressionStatement	uni_char = ps_unicode_value ( gname )	352:10:9667:9703	9211830	1	True				
ANR	9211955	AssignmentExpression	uni_char = ps_unicode_value ( gname )		9211830	0		=			
ANR	9211956	Identifier	uni_char		9211830	0					
ANR	9211957	CallExpression	ps_unicode_value ( gname )		9211830	1					
ANR	9211958	Callee	ps_unicode_value		9211830	0					
ANR	9211959	Identifier	ps_unicode_value		9211830	0					
ANR	9211960	ArgumentList	gname		9211830	1					
ANR	9211961	Argument	gname		9211830	0					
ANR	9211962	Identifier	gname		9211830	0					
ANR	9211963	IfStatement	if ( BASE_GLYPH ( uni_char ) != 0 )		9211830	2					
ANR	9211964	Condition	BASE_GLYPH ( uni_char ) != 0	354:15:9721:9747	9211830	0	True				
ANR	9211965	EqualityExpression	BASE_GLYPH ( uni_char ) != 0		9211830	0		!=			
ANR	9211966	CallExpression	BASE_GLYPH ( uni_char )		9211830	0					
ANR	9211967	Callee	BASE_GLYPH		9211830	0					
ANR	9211968	Identifier	BASE_GLYPH		9211830	0					
ANR	9211969	ArgumentList	uni_char		9211830	1					
ANR	9211970	Argument	uni_char		9211830	0					
ANR	9211971	Identifier	uni_char		9211830	0					
ANR	9211972	PrimaryExpression	0		9211830	1					
ANR	9211973	CompoundStatement		34:10:822:822	9211830	1					
ANR	9211974	ExpressionStatement	"ps_check_extra_glyph_unicode ( uni_char , extra_glyph_list_states )"	356:12:9775:9882	9211830	0	True				
ANR	9211975	CallExpression	"ps_check_extra_glyph_unicode ( uni_char , extra_glyph_list_states )"		9211830	0					
ANR	9211976	Callee	ps_check_extra_glyph_unicode		9211830	0					
ANR	9211977	Identifier	ps_check_extra_glyph_unicode		9211830	0					
ANR	9211978	ArgumentList	uni_char		9211830	1					
ANR	9211979	Argument	uni_char		9211830	0					
ANR	9211980	Identifier	uni_char		9211830	0					
ANR	9211981	Argument	extra_glyph_list_states		9211830	1					
ANR	9211982	Identifier	extra_glyph_list_states		9211830	0					
ANR	9211983	ExpressionStatement	map -> unicode = uni_char	358:12:9896:9923	9211830	1	True				
ANR	9211984	AssignmentExpression	map -> unicode = uni_char		9211830	0		=			
ANR	9211985	PtrMemberAccess	map -> unicode		9211830	0					
ANR	9211986	Identifier	map		9211830	0					
ANR	9211987	Identifier	unicode		9211830	1					
ANR	9211988	Identifier	uni_char		9211830	1					
ANR	9211989	ExpressionStatement	map -> glyph_index = n	359:12:9937:9957	9211830	2	True				
ANR	9211990	AssignmentExpression	map -> glyph_index = n		9211830	0		=			
ANR	9211991	PtrMemberAccess	map -> glyph_index		9211830	0					
ANR	9211992	Identifier	map		9211830	0					
ANR	9211993	Identifier	glyph_index		9211830	1					
ANR	9211994	Identifier	n		9211830	1					
ANR	9211995	ExpressionStatement	map ++	360:12:9971:9976	9211830	3	True				
ANR	9211996	PostIncDecOperationExpression	map ++		9211830	0					
ANR	9211997	Identifier	map		9211830	0					
ANR	9211998	IncDec	++		9211830	1					
ANR	9211999	IfStatement	if ( free_glyph_name )		9211830	3					
ANR	9212000	Condition	free_glyph_name	363:15:10006:10020	9211830	0	True				
ANR	9212001	Identifier	free_glyph_name		9211830	0					
ANR	9212002	ExpressionStatement	"free_glyph_name ( glyph_data , gname )"	364:12:10036:10072	9211830	1	True				
ANR	9212003	CallExpression	"free_glyph_name ( glyph_data , gname )"		9211830	0					
ANR	9212004	Callee	free_glyph_name		9211830	0					
ANR	9212005	Identifier	free_glyph_name		9211830	0					
ANR	9212006	ArgumentList	glyph_data		9211830	1					
ANR	9212007	Argument	glyph_data		9211830	0					
ANR	9212008	Identifier	glyph_data		9211830	0					
ANR	9212009	Argument	gname		9211830	1					
ANR	9212010	Identifier	gname		9211830	0					
ANR	9212011	ForStatement	for ( n = 0 ; n < EXTRA_GLYPH_LIST_SIZE ; n ++ )		9211830	6					
ANR	9212012	ForInit	n = 0 ;	368:12:10105:10110	9211830	0	True				
ANR	9212013	AssignmentExpression	n = 0		9211830	0		=			
ANR	9212014	Identifier	n		9211830	0					
ANR	9212015	PrimaryExpression	0		9211830	1					
ANR	9212016	Condition	n < EXTRA_GLYPH_LIST_SIZE	368:19:10112:10136	9211830	1	True				
ANR	9212017	RelationalExpression	n < EXTRA_GLYPH_LIST_SIZE		9211830	0		<			
ANR	9212018	Identifier	n		9211830	0					
ANR	9212019	Identifier	EXTRA_GLYPH_LIST_SIZE		9211830	1					
ANR	9212020	PostIncDecOperationExpression	n ++	368:46:10139:10141	9211830	2	True				
ANR	9212021	Identifier	n		9211830	0					
ANR	9212022	IncDec	++		9211830	1					
ANR	9212023	CompoundStatement		48:6:1212:1212	9211830	3					
ANR	9212024	IfStatement	if ( extra_glyph_list_states [ n ] == 1 )		9211830	0					
ANR	9212025	Condition	extra_glyph_list_states [ n ] == 1	370:13:10166:10196	9211830	0	True				
ANR	9212026	EqualityExpression	extra_glyph_list_states [ n ] == 1		9211830	0		==			
ANR	9212027	ArrayIndexing	extra_glyph_list_states [ n ]		9211830	0					
ANR	9212028	Identifier	extra_glyph_list_states		9211830	0					
ANR	9212029	Identifier	n		9211830	1					
ANR	9212030	PrimaryExpression	1		9211830	1					
ANR	9212031	CompoundStatement		50:8:1269:1269	9211830	1					
ANR	9212032	ExpressionStatement	map -> unicode = ft_extra_glyph_unicodes [ n ]	375:10:10353:10398	9211830	0	True				
ANR	9212033	AssignmentExpression	map -> unicode = ft_extra_glyph_unicodes [ n ]		9211830	0		=			
ANR	9212034	PtrMemberAccess	map -> unicode		9211830	0					
ANR	9212035	Identifier	map		9211830	0					
ANR	9212036	Identifier	unicode		9211830	1					
ANR	9212037	ArrayIndexing	ft_extra_glyph_unicodes [ n ]		9211830	1					
ANR	9212038	Identifier	ft_extra_glyph_unicodes		9211830	0					
ANR	9212039	Identifier	n		9211830	1					
ANR	9212040	ExpressionStatement	map -> glyph_index = extra_glyphs [ n ]	376:10:10410:10444	9211830	1	True				
ANR	9212041	AssignmentExpression	map -> glyph_index = extra_glyphs [ n ]		9211830	0		=			
ANR	9212042	PtrMemberAccess	map -> glyph_index		9211830	0					
ANR	9212043	Identifier	map		9211830	0					
ANR	9212044	Identifier	glyph_index		9211830	1					
ANR	9212045	ArrayIndexing	extra_glyphs [ n ]		9211830	1					
ANR	9212046	Identifier	extra_glyphs		9211830	0					
ANR	9212047	Identifier	n		9211830	1					
ANR	9212048	ExpressionStatement	map ++	377:10:10456:10461	9211830	2	True				
ANR	9212049	PostIncDecOperationExpression	map ++		9211830	0					
ANR	9212050	Identifier	map		9211830	0					
ANR	9212051	IncDec	++		9211830	1					
ANR	9212052	ExpressionStatement	count = ( FT_UInt ) ( map - table -> maps )	382:6:10529:10567	9211830	7	True				
ANR	9212053	AssignmentExpression	count = ( FT_UInt ) ( map - table -> maps )		9211830	0		=			
ANR	9212054	Identifier	count		9211830	0					
ANR	9212055	CastExpression	( FT_UInt ) ( map - table -> maps )		9211830	1					
ANR	9212056	CastTarget	FT_UInt		9211830	0					
ANR	9212057	AdditiveExpression	map - table -> maps		9211830	1		-			
ANR	9212058	Identifier	map		9211830	0					
ANR	9212059	PtrMemberAccess	table -> maps		9211830	1					
ANR	9212060	Identifier	table		9211830	0					
ANR	9212061	Identifier	maps		9211830	1					
ANR	9212062	IfStatement	if ( count == 0 )		9211830	8					
ANR	9212063	Condition	count == 0	384:11:10581:10590	9211830	0	True				
ANR	9212064	EqualityExpression	count == 0		9211830	0		==			
ANR	9212065	Identifier	count		9211830	0					
ANR	9212066	PrimaryExpression	0		9211830	1					
ANR	9212067	CompoundStatement		64:6:1661:1661	9211830	1					
ANR	9212068	ExpressionStatement	FT_FREE ( table -> maps )	387:8:10647:10669	9211830	0	True				
ANR	9212069	CallExpression	FT_FREE ( table -> maps )		9211830	0					
ANR	9212070	Callee	FT_FREE		9211830	0					
ANR	9212071	Identifier	FT_FREE		9211830	0					
ANR	9212072	ArgumentList	table -> maps		9211830	1					
ANR	9212073	Argument	table -> maps		9211830	0					
ANR	9212074	PtrMemberAccess	table -> maps		9211830	0					
ANR	9212075	Identifier	table		9211830	0					
ANR	9212076	Identifier	maps		9211830	1					
ANR	9212077	IfStatement	if ( ! error )		9211830	1					
ANR	9212078	Condition	! error	388:13:10684:10689	9211830	0	True				
ANR	9212079	UnaryOperationExpression	! error		9211830	0					
ANR	9212080	UnaryOperator	!		9211830	0					
ANR	9212081	Identifier	error		9211830	1					
ANR	9212082	ExpressionStatement	error = FT_THROW ( No_Unicode_Glyph_Name )	389:10:10703:10744	9211830	1	True				
ANR	9212083	AssignmentExpression	error = FT_THROW ( No_Unicode_Glyph_Name )		9211830	0		=			
ANR	9212084	Identifier	error		9211830	0					
ANR	9212085	CallExpression	FT_THROW ( No_Unicode_Glyph_Name )		9211830	1					
ANR	9212086	Callee	FT_THROW		9211830	0					
ANR	9212087	Identifier	FT_THROW		9211830	0					
ANR	9212088	ArgumentList	No_Unicode_Glyph_Name		9211830	1					
ANR	9212089	Argument	No_Unicode_Glyph_Name		9211830	0					
ANR	9212090	Identifier	No_Unicode_Glyph_Name		9211830	0					
ANR	9212091	ElseStatement	else		9211830	0					
ANR	9212092	CompoundStatement		71:6:1832:1832	9211830	0					
ANR	9212093	IfStatement	if ( count < num_glyphs / 2 )		9211830	0					
ANR	9212094	Condition	count < num_glyphs / 2	394:13:10858:10879	9211830	0	True				
ANR	9212095	RelationalExpression	count < num_glyphs / 2		9211830	0		<			
ANR	9212096	Identifier	count		9211830	0					
ANR	9212097	MultiplicativeExpression	num_glyphs / 2		9211830	1		/			
ANR	9212098	Identifier	num_glyphs		9211830	0					
ANR	9212099	PrimaryExpression	2		9211830	1					
ANR	9212100	CompoundStatement		74:8:1952:1952	9211830	1					
ANR	9212101	ExpressionStatement	"( void ) FT_RENEW_ARRAY ( table -> maps , num_glyphs , count )"	396:10:10903:10957	9211830	0	True				
ANR	9212102	CastExpression	"( void ) FT_RENEW_ARRAY ( table -> maps , num_glyphs , count )"		9211830	0					
ANR	9212103	CastTarget	void		9211830	0					
ANR	9212104	CallExpression	"FT_RENEW_ARRAY ( table -> maps , num_glyphs , count )"		9211830	1					
ANR	9212105	Callee	FT_RENEW_ARRAY		9211830	0					
ANR	9212106	Identifier	FT_RENEW_ARRAY		9211830	0					
ANR	9212107	ArgumentList	table -> maps		9211830	1					
ANR	9212108	Argument	table -> maps		9211830	0					
ANR	9212109	PtrMemberAccess	table -> maps		9211830	0					
ANR	9212110	Identifier	table		9211830	0					
ANR	9212111	Identifier	maps		9211830	1					
ANR	9212112	Argument	num_glyphs		9211830	1					
ANR	9212113	Identifier	num_glyphs		9211830	0					
ANR	9212114	Argument	count		9211830	2					
ANR	9212115	Identifier	count		9211830	0					
ANR	9212116	ExpressionStatement	error = FT_Err_Ok	397:10:10969:10986	9211830	1	True				
ANR	9212117	AssignmentExpression	error = FT_Err_Ok		9211830	0		=			
ANR	9212118	Identifier	error		9211830	0					
ANR	9212119	Identifier	FT_Err_Ok		9211830	1					
ANR	9212120	ExpressionStatement	"ft_qsort ( table -> maps , count , sizeof ( PS_UniMap ) , compare_uni_maps )"	402:8:11143:11231	9211830	1	True				
ANR	9212121	CallExpression	"ft_qsort ( table -> maps , count , sizeof ( PS_UniMap ) , compare_uni_maps )"		9211830	0					
ANR	9212122	Callee	ft_qsort		9211830	0					
ANR	9212123	Identifier	ft_qsort		9211830	0					
ANR	9212124	ArgumentList	table -> maps		9211830	1					
ANR	9212125	Argument	table -> maps		9211830	0					
ANR	9212126	PtrMemberAccess	table -> maps		9211830	0					
ANR	9212127	Identifier	table		9211830	0					
ANR	9212128	Identifier	maps		9211830	1					
ANR	9212129	Argument	count		9211830	1					
ANR	9212130	Identifier	count		9211830	0					
ANR	9212131	Argument	sizeof ( PS_UniMap )		9211830	2					
ANR	9212132	SizeofExpression	sizeof ( PS_UniMap )		9211830	0					
ANR	9212133	Sizeof	sizeof		9211830	0					
ANR	9212134	SizeofOperand	PS_UniMap		9211830	1					
ANR	9212135	Argument	compare_uni_maps		9211830	3					
ANR	9212136	Identifier	compare_uni_maps		9211830	0					
ANR	9212137	ExpressionStatement	table -> num_maps = count	406:6:11248:11271	9211830	9	True				
ANR	9212138	AssignmentExpression	table -> num_maps = count		9211830	0		=			
ANR	9212139	PtrMemberAccess	table -> num_maps		9211830	0					
ANR	9212140	Identifier	table		9211830	0					
ANR	9212141	Identifier	num_maps		9211830	1					
ANR	9212142	Identifier	count		9211830	1					
ANR	9212143	ReturnStatement	return error ;	409:4:11284:11296	9211830	6	True				
ANR	9212144	Identifier	error		9211830	0					
ANR	9212145	ReturnType	static FT_Error		9211830	1					
ANR	9212146	Identifier	ps_unicodes_init		9211830	2					
ANR	9212147	ParameterList	"FT_Memory memory , PS_Unicodes table , FT_UInt num_glyphs , PS_GetGlyphNameFunc get_glyph_name , PS_FreeGlyphNameFunc free_glyph_name , FT_Pointer glyph_data"		9211830	3					
ANR	9212148	Parameter	FT_Memory memory	316:20:8631:8658	9211830	0	True				
ANR	9212149	ParameterType	FT_Memory		9211830	0					
ANR	9212150	Identifier	memory		9211830	1					
ANR	9212151	Parameter	PS_Unicodes table	317:20:8681:8707	9211830	1	True				
ANR	9212152	ParameterType	PS_Unicodes		9211830	0					
ANR	9212153	Identifier	table		9211830	1					
ANR	9212154	Parameter	FT_UInt num_glyphs	318:20:8730:8761	9211830	2	True				
ANR	9212155	ParameterType	FT_UInt		9211830	0					
ANR	9212156	Identifier	num_glyphs		9211830	1					
ANR	9212157	Parameter	PS_GetGlyphNameFunc get_glyph_name	319:20:8784:8819	9211830	3	True				
ANR	9212158	ParameterType	PS_GetGlyphNameFunc		9211830	0					
ANR	9212159	Identifier	get_glyph_name		9211830	1					
ANR	9212160	Parameter	PS_FreeGlyphNameFunc free_glyph_name	320:20:8842:8878	9211830	4	True				
ANR	9212161	ParameterType	PS_FreeGlyphNameFunc		9211830	0					
ANR	9212162	Identifier	free_glyph_name		9211830	1					
ANR	9212163	Parameter	FT_Pointer glyph_data	321:20:8901:8932	9211830	5	True				
ANR	9212164	ParameterType	FT_Pointer		9211830	0					
ANR	9212165	Identifier	glyph_data		9211830	1					
ANR	9212166	CFGEntryNode	ENTRY		9211830		True				
ANR	9212167	CFGExitNode	EXIT		9211830		True				
ANR	9212168	Symbol	* ft_extra_glyph_unicodes		9211830						
ANR	9212169	Symbol	memory		9211830						
ANR	9212170	Symbol	get_glyph_name		9211830						
ANR	9212171	Symbol	table -> maps		9211830						
ANR	9212172	Symbol	FT_Err_Ok		9211830						
ANR	9212173	Symbol	* map		9211830						
ANR	9212174	Symbol	ps_unicode_value		9211830						
ANR	9212175	Symbol	table -> num_maps		9211830						
ANR	9212176	Symbol	error		9211830						
ANR	9212177	Symbol	BASE_GLYPH		9211830						
ANR	9212178	Symbol	map -> unicode		9211830						
ANR	9212179	Symbol	* extra_glyph_list_states		9211830						
ANR	9212180	Symbol	map		9211830						
ANR	9212181	Symbol	table		9211830						
ANR	9212182	Symbol	NULL		9211830						
ANR	9212183	Symbol	compare_uni_maps		9211830						
ANR	9212184	Symbol	glyph_data		9211830						
ANR	9212185	Symbol	count		9211830						
ANR	9212186	Symbol	uni_char		9211830						
ANR	9212187	Symbol	* table		9211830						
ANR	9212188	Symbol	extra_glyphs		9211830						
ANR	9212189	Symbol	gname		9211830						
ANR	9212190	Symbol	n		9211830						
ANR	9212191	Symbol	FT_THROW		9211830						
ANR	9212192	Symbol	* extra_glyphs		9211830						
ANR	9212193	Symbol	num_glyphs		9211830						
ANR	9212194	Symbol	map -> glyph_index		9211830						
ANR	9212195	Symbol	FT_NEW_ARRAY		9211830						
ANR	9212196	Symbol	* n		9211830						
ANR	9212197	Symbol	extra_glyph_list_states		9211830						
ANR	9212198	Symbol	No_Unicode_Glyph_Name		9211830						
ANR	9212199	Symbol	EXTRA_GLYPH_LIST_SIZE		9211830						
ANR	9212200	Symbol	ft_extra_glyph_unicodes		9211830						
ANR	9212201	Symbol	free_glyph_name		9211830						
ANR	9212202	Function	ps_unicodes_char_index	413:2:11306:12156							
ANR	9212203	FunctionDef	"ps_unicodes_char_index (PS_Unicodes table , FT_UInt32 unicode)"		9212202	0					
ANR	9212204	CompoundStatement		416:2:11418:12156	9212202	0					
ANR	9212205	IdentifierDeclStatement	"PS_UniMap * min , * max , * mid , * result = NULL ;"	417:4:11424:11467	9212202	0	True				
ANR	9212206	IdentifierDecl	* min		9212202	0					
ANR	9212207	IdentifierDeclType	PS_UniMap *		9212202	0					
ANR	9212208	Identifier	min		9212202	1					
ANR	9212209	IdentifierDecl	* max		9212202	1					
ANR	9212210	IdentifierDeclType	PS_UniMap *		9212202	0					
ANR	9212211	Identifier	max		9212202	1					
ANR	9212212	IdentifierDecl	* mid		9212202	2					
ANR	9212213	IdentifierDeclType	PS_UniMap *		9212202	0					
ANR	9212214	Identifier	mid		9212202	1					
ANR	9212215	IdentifierDecl	* result = NULL		9212202	3					
ANR	9212216	IdentifierDeclType	PS_UniMap *		9212202	0					
ANR	9212217	Identifier	result		9212202	1					
ANR	9212218	AssignmentExpression	* result = NULL		9212202	2		=			
ANR	9212219	Identifier	NULL		9212202	0					
ANR	9212220	Identifier	NULL		9212202	1					
ANR	9212221	ExpressionStatement	min = table -> maps	422:4:11524:11541	9212202	1	True				
ANR	9212222	AssignmentExpression	min = table -> maps		9212202	0		=			
ANR	9212223	Identifier	min		9212202	0					
ANR	9212224	PtrMemberAccess	table -> maps		9212202	1					
ANR	9212225	Identifier	table		9212202	0					
ANR	9212226	Identifier	maps		9212202	1					
ANR	9212227	ExpressionStatement	max = min + table -> num_maps - 1	423:4:11547:11578	9212202	2	True				
ANR	9212228	AssignmentExpression	max = min + table -> num_maps - 1		9212202	0		=			
ANR	9212229	Identifier	max		9212202	0					
ANR	9212230	AdditiveExpression	min + table -> num_maps - 1		9212202	1		+			
ANR	9212231	Identifier	min		9212202	0					
ANR	9212232	AdditiveExpression	table -> num_maps - 1		9212202	1		-			
ANR	9212233	PtrMemberAccess	table -> num_maps		9212202	0					
ANR	9212234	Identifier	table		9212202	0					
ANR	9212235	Identifier	num_maps		9212202	1					
ANR	9212236	PrimaryExpression	1		9212202	1					
ANR	9212237	WhileStatement	while ( min <= max )		9212202	3					
ANR	9212238	Condition	min <= max	425:12:11593:11602	9212202	0	True				
ANR	9212239	RelationalExpression	min <= max		9212202	0		<=			
ANR	9212240	Identifier	min		9212202	0					
ANR	9212241	Identifier	max		9212202	1					
ANR	9212242	CompoundStatement		12:6:199:220	9212202	1					
ANR	9212243	IdentifierDeclStatement	FT_UInt32 base_glyph ;	427:6:11618:11639	9212202	0	True				
ANR	9212244	IdentifierDecl	base_glyph		9212202	0					
ANR	9212245	IdentifierDeclType	FT_UInt32		9212202	0					
ANR	9212246	Identifier	base_glyph		9212202	1					
ANR	9212247	ExpressionStatement	mid = min + ( ( max - min ) >> 1 )	430:6:11649:11683	9212202	1	True				
ANR	9212248	AssignmentExpression	mid = min + ( ( max - min ) >> 1 )		9212202	0		=			
ANR	9212249	Identifier	mid		9212202	0					
ANR	9212250	AdditiveExpression	min + ( ( max - min ) >> 1 )		9212202	1		+			
ANR	9212251	Identifier	min		9212202	0					
ANR	9212252	ShiftExpression	( max - min ) >> 1		9212202	1		>>			
ANR	9212253	AdditiveExpression	max - min		9212202	0		-			
ANR	9212254	Identifier	max		9212202	0					
ANR	9212255	Identifier	min		9212202	1					
ANR	9212256	PrimaryExpression	1		9212202	1					
ANR	9212257	IfStatement	if ( mid -> unicode == unicode )		9212202	2					
ANR	9212258	Condition	mid -> unicode == unicode	432:11:11697:11719	9212202	0	True				
ANR	9212259	EqualityExpression	mid -> unicode == unicode		9212202	0		==			
ANR	9212260	PtrMemberAccess	mid -> unicode		9212202	0					
ANR	9212261	Identifier	mid		9212202	0					
ANR	9212262	Identifier	unicode		9212202	1					
ANR	9212263	Identifier	unicode		9212202	1					
ANR	9212264	CompoundStatement		18:6:310:310	9212202	1					
ANR	9212265	ExpressionStatement	result = mid	434:8:11739:11751	9212202	0	True				
ANR	9212266	AssignmentExpression	result = mid		9212202	0		=			
ANR	9212267	Identifier	result		9212202	0					
ANR	9212268	Identifier	mid		9212202	1					
ANR	9212269	BreakStatement	break ;	435:8:11761:11766	9212202	1	True				
ANR	9212270	ExpressionStatement	base_glyph = BASE_GLYPH ( mid -> unicode )	438:6:11783:11822	9212202	3	True				
ANR	9212271	AssignmentExpression	base_glyph = BASE_GLYPH ( mid -> unicode )		9212202	0		=			
ANR	9212272	Identifier	base_glyph		9212202	0					
ANR	9212273	CallExpression	BASE_GLYPH ( mid -> unicode )		9212202	1					
ANR	9212274	Callee	BASE_GLYPH		9212202	0					
ANR	9212275	Identifier	BASE_GLYPH		9212202	0					
ANR	9212276	ArgumentList	mid -> unicode		9212202	1					
ANR	9212277	Argument	mid -> unicode		9212202	0					
ANR	9212278	PtrMemberAccess	mid -> unicode		9212202	0					
ANR	9212279	Identifier	mid		9212202	0					
ANR	9212280	Identifier	unicode		9212202	1					
ANR	9212281	IfStatement	if ( base_glyph == unicode )		9212202	4					
ANR	9212282	Condition	base_glyph == unicode	440:11:11836:11856	9212202	0	True				
ANR	9212283	EqualityExpression	base_glyph == unicode		9212202	0		==			
ANR	9212284	Identifier	base_glyph		9212202	0					
ANR	9212285	Identifier	unicode		9212202	1					
ANR	9212286	ExpressionStatement	result = mid	441:8:11868:11880	9212202	1	True				
ANR	9212287	AssignmentExpression	result = mid		9212202	0		=			
ANR	9212288	Identifier	result		9212202	0					
ANR	9212289	Identifier	mid		9212202	1					
ANR	9212290	IfStatement	if ( min == max )		9212202	5					
ANR	9212291	Condition	min == max	443:11:11950:11959	9212202	0	True				
ANR	9212292	EqualityExpression	min == max		9212202	0		==			
ANR	9212293	Identifier	min		9212202	0					
ANR	9212294	Identifier	max		9212202	1					
ANR	9212295	BreakStatement	break ;	444:8:11971:11976	9212202	1	True				
ANR	9212296	IfStatement	if ( base_glyph < unicode )		9212202	6					
ANR	9212297	Condition	base_glyph < unicode	446:11:11990:12009	9212202	0	True				
ANR	9212298	RelationalExpression	base_glyph < unicode		9212202	0		<			
ANR	9212299	Identifier	base_glyph		9212202	0					
ANR	9212300	Identifier	unicode		9212202	1					
ANR	9212301	ExpressionStatement	min = mid + 1	447:8:12021:12034	9212202	1	True				
ANR	9212302	AssignmentExpression	min = mid + 1		9212202	0		=			
ANR	9212303	Identifier	min		9212202	0					
ANR	9212304	AdditiveExpression	mid + 1		9212202	1		+			
ANR	9212305	Identifier	mid		9212202	0					
ANR	9212306	PrimaryExpression	1		9212202	1					
ANR	9212307	ElseStatement	else		9212202	0					
ANR	9212308	ExpressionStatement	max = mid - 1	449:8:12055:12068	9212202	0	True				
ANR	9212309	AssignmentExpression	max = mid - 1		9212202	0		=			
ANR	9212310	Identifier	max		9212202	0					
ANR	9212311	AdditiveExpression	mid - 1		9212202	1		-			
ANR	9212312	Identifier	mid		9212202	0					
ANR	9212313	PrimaryExpression	1		9212202	1					
ANR	9212314	IfStatement	if ( result )		9212202	4					
ANR	9212315	Condition	result	452:9:12086:12091	9212202	0	True				
ANR	9212316	Identifier	result		9212202	0					
ANR	9212317	ReturnStatement	return result -> glyph_index ;	453:6:12101:12127	9212202	1	True				
ANR	9212318	PtrMemberAccess	result -> glyph_index		9212202	0					
ANR	9212319	Identifier	result		9212202	0					
ANR	9212320	Identifier	glyph_index		9212202	1					
ANR	9212321	ElseStatement	else		9212202	0					
ANR	9212322	ReturnStatement	return 0 ;	455:6:12144:12152	9212202	0	True				
ANR	9212323	PrimaryExpression	0		9212202	0					
ANR	9212324	ReturnType	static FT_UInt		9212202	1					
ANR	9212325	Identifier	ps_unicodes_char_index		9212202	2					
ANR	9212326	ParameterList	"PS_Unicodes table , FT_UInt32 unicode"		9212202	3					
ANR	9212327	Parameter	PS_Unicodes table	414:26:11347:11364	9212202	0	True				
ANR	9212328	ParameterType	PS_Unicodes		9212202	0					
ANR	9212329	Identifier	table		9212202	1					
ANR	9212330	Parameter	FT_UInt32 unicode	415:26:11393:11412	9212202	1	True				
ANR	9212331	ParameterType	FT_UInt32		9212202	0					
ANR	9212332	Identifier	unicode		9212202	1					
ANR	9212333	CFGEntryNode	ENTRY		9212202		True				
ANR	9212334	CFGExitNode	EXIT		9212202		True				
ANR	9212335	Symbol	NULL		9212202						
ANR	9212336	Symbol	table -> maps		9212202						
ANR	9212337	Symbol	max		9212202						
ANR	9212338	Symbol	mid		9212202						
ANR	9212339	Symbol	* table		9212202						
ANR	9212340	Symbol	table -> num_maps		9212202						
ANR	9212341	Symbol	mid -> unicode		9212202						
ANR	9212342	Symbol	result		9212202						
ANR	9212343	Symbol	* mid		9212202						
ANR	9212344	Symbol	min		9212202						
ANR	9212345	Symbol	* result		9212202						
ANR	9212346	Symbol	result -> glyph_index		9212202						
ANR	9212347	Symbol	unicode		9212202						
ANR	9212348	Symbol	BASE_GLYPH		9212202						
ANR	9212349	Symbol	base_glyph		9212202						
ANR	9212350	Symbol	table		9212202						
ANR	9212351	Function	ps_unicodes_char_next	459:2:12162:13383							
ANR	9212352	FunctionDef	"ps_unicodes_char_next (PS_Unicodes table , FT_UInt32 * unicode)"		9212351	0					
ANR	9212353	CompoundStatement		462:2:12274:13383	9212351	0					
ANR	9212354	IdentifierDeclStatement	FT_UInt result = 0 ;	463:4:12280:12304	9212351	0	True				
ANR	9212355	IdentifierDecl	result = 0		9212351	0					
ANR	9212356	IdentifierDeclType	FT_UInt		9212351	0					
ANR	9212357	Identifier	result		9212351	1					
ANR	9212358	AssignmentExpression	result = 0		9212351	2		=			
ANR	9212359	Identifier	result		9212351	0					
ANR	9212360	PrimaryExpression	0		9212351	1					
ANR	9212361	IdentifierDeclStatement	FT_UInt32 char_code = * unicode + 1 ;	464:4:12310:12345	9212351	1	True				
ANR	9212362	IdentifierDecl	char_code = * unicode + 1		9212351	0					
ANR	9212363	IdentifierDeclType	FT_UInt32		9212351	0					
ANR	9212364	Identifier	char_code		9212351	1					
ANR	9212365	AssignmentExpression	char_code = * unicode + 1		9212351	2		=			
ANR	9212366	Identifier	char_code		9212351	0					
ANR	9212367	AdditiveExpression	* unicode + 1		9212351	1		+			
ANR	9212368	UnaryOperationExpression	* unicode		9212351	0					
ANR	9212369	UnaryOperator	*		9212351	0					
ANR	9212370	Identifier	unicode		9212351	1					
ANR	9212371	PrimaryExpression	1		9212351	1					
ANR	9212372	CompoundStatement		11:6:200:222	9212351	2					
ANR	9212373	IdentifierDeclStatement	FT_UInt min = 0 ;	468:6:12361:12380	9212351	0	True				
ANR	9212374	IdentifierDecl	min = 0		9212351	0					
ANR	9212375	IdentifierDeclType	FT_UInt		9212351	0					
ANR	9212376	Identifier	min		9212351	1					
ANR	9212377	AssignmentExpression	min = 0		9212351	2		=			
ANR	9212378	Identifier	min		9212351	0					
ANR	9212379	PrimaryExpression	0		9212351	1					
ANR	9212380	IdentifierDeclStatement	FT_UInt max = table -> num_maps ;	469:6:12388:12421	9212351	1	True				
ANR	9212381	IdentifierDecl	max = table -> num_maps		9212351	0					
ANR	9212382	IdentifierDeclType	FT_UInt		9212351	0					
ANR	9212383	Identifier	max		9212351	1					
ANR	9212384	AssignmentExpression	max = table -> num_maps		9212351	2		=			
ANR	9212385	Identifier	max		9212351	0					
ANR	9212386	PtrMemberAccess	table -> num_maps		9212351	1					
ANR	9212387	Identifier	table		9212351	0					
ANR	9212388	Identifier	num_maps		9212351	1					
ANR	9212389	IdentifierDeclStatement	FT_UInt mid ;	470:6:12429:12444	9212351	2	True				
ANR	9212390	IdentifierDecl	mid		9212351	0					
ANR	9212391	IdentifierDeclType	FT_UInt		9212351	0					
ANR	9212392	Identifier	mid		9212351	1					
ANR	9212393	IdentifierDeclStatement	PS_UniMap * map ;	471:6:12452:12467	9212351	3	True				
ANR	9212394	IdentifierDecl	* map		9212351	0					
ANR	9212395	IdentifierDeclType	PS_UniMap *		9212351	0					
ANR	9212396	Identifier	map		9212351	1					
ANR	9212397	IdentifierDeclStatement	FT_UInt32 base_glyph ;	472:6:12475:12497	9212351	4	True				
ANR	9212398	IdentifierDecl	base_glyph		9212351	0					
ANR	9212399	IdentifierDeclType	FT_UInt32		9212351	0					
ANR	9212400	Identifier	base_glyph		9212351	1					
ANR	9212401	WhileStatement	while ( min < max )		9212351	5					
ANR	9212402	Condition	min < max	475:14:12515:12523	9212351	0	True				
ANR	9212403	RelationalExpression	min < max		9212351	0		<			
ANR	9212404	Identifier	min		9212351	0					
ANR	9212405	Identifier	max		9212351	1					
ANR	9212406	CompoundStatement		15:6:258:258	9212351	1					
ANR	9212407	ExpressionStatement	mid = min + ( ( max - min ) >> 1 )	477:8:12543:12577	9212351	0	True				
ANR	9212408	AssignmentExpression	mid = min + ( ( max - min ) >> 1 )		9212351	0		=			
ANR	9212409	Identifier	mid		9212351	0					
ANR	9212410	AdditiveExpression	min + ( ( max - min ) >> 1 )		9212351	1		+			
ANR	9212411	Identifier	min		9212351	0					
ANR	9212412	ShiftExpression	( max - min ) >> 1		9212351	1		>>			
ANR	9212413	AdditiveExpression	max - min		9212351	0		-			
ANR	9212414	Identifier	max		9212351	0					
ANR	9212415	Identifier	min		9212351	1					
ANR	9212416	PrimaryExpression	1		9212351	1					
ANR	9212417	ExpressionStatement	map = table -> maps + mid	478:8:12587:12610	9212351	1	True				
ANR	9212418	AssignmentExpression	map = table -> maps + mid		9212351	0		=			
ANR	9212419	Identifier	map		9212351	0					
ANR	9212420	AdditiveExpression	table -> maps + mid		9212351	1		+			
ANR	9212421	PtrMemberAccess	table -> maps		9212351	0					
ANR	9212422	Identifier	table		9212351	0					
ANR	9212423	Identifier	maps		9212351	1					
ANR	9212424	Identifier	mid		9212351	1					
ANR	9212425	IfStatement	if ( map -> unicode == char_code )		9212351	2					
ANR	9212426	Condition	map -> unicode == char_code	480:13:12626:12650	9212351	0	True				
ANR	9212427	EqualityExpression	map -> unicode == char_code		9212351	0		==			
ANR	9212428	PtrMemberAccess	map -> unicode		9212351	0					
ANR	9212429	Identifier	map		9212351	0					
ANR	9212430	Identifier	unicode		9212351	1					
ANR	9212431	Identifier	char_code		9212351	1					
ANR	9212432	CompoundStatement		20:8:387:387	9212351	1					
ANR	9212433	ExpressionStatement	result = map -> glyph_index	482:10:12674:12699	9212351	0	True				
ANR	9212434	AssignmentExpression	result = map -> glyph_index		9212351	0		=			
ANR	9212435	Identifier	result		9212351	0					
ANR	9212436	PtrMemberAccess	map -> glyph_index		9212351	1					
ANR	9212437	Identifier	map		9212351	0					
ANR	9212438	Identifier	glyph_index		9212351	1					
ANR	9212439	GotoStatement	goto Exit ;	483:10:12711:12720	9212351	1	True				
ANR	9212440	Identifier	Exit		9212351	0					
ANR	9212441	ExpressionStatement	base_glyph = BASE_GLYPH ( map -> unicode )	486:8:12741:12780	9212351	3	True				
ANR	9212442	AssignmentExpression	base_glyph = BASE_GLYPH ( map -> unicode )		9212351	0		=			
ANR	9212443	Identifier	base_glyph		9212351	0					
ANR	9212444	CallExpression	BASE_GLYPH ( map -> unicode )		9212351	1					
ANR	9212445	Callee	BASE_GLYPH		9212351	0					
ANR	9212446	Identifier	BASE_GLYPH		9212351	0					
ANR	9212447	ArgumentList	map -> unicode		9212351	1					
ANR	9212448	Argument	map -> unicode		9212351	0					
ANR	9212449	PtrMemberAccess	map -> unicode		9212351	0					
ANR	9212450	Identifier	map		9212351	0					
ANR	9212451	Identifier	unicode		9212351	1					
ANR	9212452	IfStatement	if ( base_glyph == char_code )		9212351	4					
ANR	9212453	Condition	base_glyph == char_code	488:13:12796:12818	9212351	0	True				
ANR	9212454	EqualityExpression	base_glyph == char_code		9212351	0		==			
ANR	9212455	Identifier	base_glyph		9212351	0					
ANR	9212456	Identifier	char_code		9212351	1					
ANR	9212457	ExpressionStatement	result = map -> glyph_index	489:10:12832:12857	9212351	1	True				
ANR	9212458	AssignmentExpression	result = map -> glyph_index		9212351	0		=			
ANR	9212459	Identifier	result		9212351	0					
ANR	9212460	PtrMemberAccess	map -> glyph_index		9212351	1					
ANR	9212461	Identifier	map		9212351	0					
ANR	9212462	Identifier	glyph_index		9212351	1					
ANR	9212463	IfStatement	if ( base_glyph < char_code )		9212351	5					
ANR	9212464	Condition	base_glyph < char_code	491:13:12873:12894	9212351	0	True				
ANR	9212465	RelationalExpression	base_glyph < char_code		9212351	0		<			
ANR	9212466	Identifier	base_glyph		9212351	0					
ANR	9212467	Identifier	char_code		9212351	1					
ANR	9212468	ExpressionStatement	min = mid + 1	492:10:12908:12921	9212351	1	True				
ANR	9212469	AssignmentExpression	min = mid + 1		9212351	0		=			
ANR	9212470	Identifier	min		9212351	0					
ANR	9212471	AdditiveExpression	mid + 1		9212351	1		+			
ANR	9212472	Identifier	mid		9212351	0					
ANR	9212473	PrimaryExpression	1		9212351	1					
ANR	9212474	ElseStatement	else		9212351	0					
ANR	9212475	ExpressionStatement	max = mid	494:10:12946:12955	9212351	0	True				
ANR	9212476	AssignmentExpression	max = mid		9212351	0		=			
ANR	9212477	Identifier	max		9212351	0					
ANR	9212478	Identifier	mid		9212351	1					
ANR	9212479	IfStatement	if ( result )		9212351	6					
ANR	9212480	Condition	result	497:11:12977:12982	9212351	0	True				
ANR	9212481	Identifier	result		9212351	0					
ANR	9212482	GotoStatement	goto Exit ;	498:8:12994:13003	9212351	1	True				
ANR	9212483	Identifier	Exit		9212351	0					
ANR	9212484	ExpressionStatement	char_code = 0	501:6:13129:13142	9212351	7	True				
ANR	9212485	AssignmentExpression	char_code = 0		9212351	0		=			
ANR	9212486	Identifier	char_code		9212351	0					
ANR	9212487	PrimaryExpression	0		9212351	1					
ANR	9212488	IfStatement	if ( min < table -> num_maps )		9212351	8					
ANR	9212489	Condition	min < table -> num_maps	503:11:13156:13176	9212351	0	True				
ANR	9212490	RelationalExpression	min < table -> num_maps		9212351	0		<			
ANR	9212491	Identifier	min		9212351	0					
ANR	9212492	PtrMemberAccess	table -> num_maps		9212351	1					
ANR	9212493	Identifier	table		9212351	0					
ANR	9212494	Identifier	num_maps		9212351	1					
ANR	9212495	CompoundStatement		43:6:911:911	9212351	1					
ANR	9212496	ExpressionStatement	map = table -> maps + min	505:8:13196:13225	9212351	0	True				
ANR	9212497	AssignmentExpression	map = table -> maps + min		9212351	0		=			
ANR	9212498	Identifier	map		9212351	0					
ANR	9212499	AdditiveExpression	table -> maps + min		9212351	1		+			
ANR	9212500	PtrMemberAccess	table -> maps		9212351	0					
ANR	9212501	Identifier	table		9212351	0					
ANR	9212502	Identifier	maps		9212351	1					
ANR	9212503	Identifier	min		9212351	1					
ANR	9212504	ExpressionStatement	result = map -> glyph_index	506:8:13235:13263	9212351	1	True				
ANR	9212505	AssignmentExpression	result = map -> glyph_index		9212351	0		=			
ANR	9212506	Identifier	result		9212351	0					
ANR	9212507	PtrMemberAccess	map -> glyph_index		9212351	1					
ANR	9212508	Identifier	map		9212351	0					
ANR	9212509	Identifier	glyph_index		9212351	1					
ANR	9212510	ExpressionStatement	char_code = BASE_GLYPH ( map -> unicode )	507:8:13273:13311	9212351	2	True				
ANR	9212511	AssignmentExpression	char_code = BASE_GLYPH ( map -> unicode )		9212351	0		=			
ANR	9212512	Identifier	char_code		9212351	0					
ANR	9212513	CallExpression	BASE_GLYPH ( map -> unicode )		9212351	1					
ANR	9212514	Callee	BASE_GLYPH		9212351	0					
ANR	9212515	Identifier	BASE_GLYPH		9212351	0					
ANR	9212516	ArgumentList	map -> unicode		9212351	1					
ANR	9212517	Argument	map -> unicode		9212351	0					
ANR	9212518	PtrMemberAccess	map -> unicode		9212351	0					
ANR	9212519	Identifier	map		9212351	0					
ANR	9212520	Identifier	unicode		9212351	1					
ANR	9212521	Label	Exit :	511:2:13330:13334	9212351	3	True				
ANR	9212522	Identifier	Exit		9212351	0					
ANR	9212523	ExpressionStatement	* unicode = char_code	512:4:13340:13360	9212351	4	True				
ANR	9212524	AssignmentExpression	* unicode = char_code		9212351	0		=			
ANR	9212525	UnaryOperationExpression	* unicode		9212351	0					
ANR	9212526	UnaryOperator	*		9212351	0					
ANR	9212527	Identifier	unicode		9212351	1					
ANR	9212528	Identifier	char_code		9212351	1					
ANR	9212529	ReturnStatement	return result ;	513:4:13366:13379	9212351	5	True				
ANR	9212530	Identifier	result		9212351	0					
ANR	9212531	ReturnType	static FT_UInt32		9212351	1					
ANR	9212532	Identifier	ps_unicodes_char_next		9212351	2					
ANR	9212533	ParameterList	"PS_Unicodes table , FT_UInt32 * unicode"		9212351	3					
ANR	9212534	Parameter	PS_Unicodes table	460:25:12204:12221	9212351	0	True				
ANR	9212535	ParameterType	PS_Unicodes		9212351	0					
ANR	9212536	Identifier	table		9212351	1					
ANR	9212537	Parameter	FT_UInt32 * unicode	461:25:12249:12268	9212351	1	True				
ANR	9212538	ParameterType	FT_UInt32 *		9212351	0					
ANR	9212539	Identifier	unicode		9212351	1					
ANR	9212540	CFGEntryNode	ENTRY		9212351		True				
ANR	9212541	CFGExitNode	EXIT		9212351		True				
ANR	9212542	Symbol	* unicode		9212351						
ANR	9212543	Symbol	table -> maps		9212351						
ANR	9212544	Symbol	max		9212351						
ANR	9212545	Symbol	* map		9212351						
ANR	9212546	Symbol	char_code		9212351						
ANR	9212547	Symbol	* table		9212351						
ANR	9212548	Symbol	mid		9212351						
ANR	9212549	Symbol	table -> num_maps		9212351						
ANR	9212550	Symbol	result		9212351						
ANR	9212551	Symbol	min		9212351						
ANR	9212552	Symbol	map -> glyph_index		9212351						
ANR	9212553	Symbol	unicode		9212351						
ANR	9212554	Symbol	BASE_GLYPH		9212351						
ANR	9212555	Symbol	map -> unicode		9212351						
ANR	9212556	Symbol	base_glyph		9212351						
ANR	9212557	Symbol	map		9212351						
ANR	9212558	Symbol	table		9212351						
ANR	9212559	Function	ps_get_macintosh_name	520:2:13438:13638							
ANR	9212560	FunctionDef	ps_get_macintosh_name (FT_UInt name_index)		9212559	0					
ANR	9212561	CompoundStatement		522:2:13506:13638	9212559	0					
ANR	9212562	IfStatement	if ( name_index >= FT_NUM_MAC_NAMES )		9212559	0					
ANR	9212563	Condition	name_index >= FT_NUM_MAC_NAMES	523:9:13517:13546	9212559	0	True				
ANR	9212564	RelationalExpression	name_index >= FT_NUM_MAC_NAMES		9212559	0		>=			
ANR	9212565	Identifier	name_index		9212559	0					
ANR	9212566	Identifier	FT_NUM_MAC_NAMES		9212559	1					
ANR	9212567	ExpressionStatement	name_index = 0	524:6:13556:13570	9212559	1	True				
ANR	9212568	AssignmentExpression	name_index = 0		9212559	0		=			
ANR	9212569	Identifier	name_index		9212559	0					
ANR	9212570	PrimaryExpression	0		9212559	1					
ANR	9212571	ReturnStatement	return ft_standard_glyph_names + ft_mac_names [ name_index ] ;	526:4:13577:13634	9212559	1	True				
ANR	9212572	AdditiveExpression	ft_standard_glyph_names + ft_mac_names [ name_index ]		9212559	0		+			
ANR	9212573	Identifier	ft_standard_glyph_names		9212559	0					
ANR	9212574	ArrayIndexing	ft_mac_names [ name_index ]		9212559	1					
ANR	9212575	Identifier	ft_mac_names		9212559	0					
ANR	9212576	Identifier	name_index		9212559	1					
ANR	9212577	ReturnType	static const char *		9212559	1					
ANR	9212578	Identifier	ps_get_macintosh_name		9212559	2					
ANR	9212579	ParameterList	FT_UInt name_index		9212559	3					
ANR	9212580	Parameter	FT_UInt name_index	521:25:13482:13500	9212559	0	True				
ANR	9212581	ParameterType	FT_UInt		9212559	0					
ANR	9212582	Identifier	name_index		9212559	1					
ANR	9212583	CFGEntryNode	ENTRY		9212559		True				
ANR	9212584	CFGExitNode	EXIT		9212559		True				
ANR	9212585	Symbol	* name_index		9212559						
ANR	9212586	Symbol	FT_NUM_MAC_NAMES		9212559						
ANR	9212587	Symbol	name_index		9212559						
ANR	9212588	Symbol	ft_mac_names		9212559						
ANR	9212589	Symbol	ft_standard_glyph_names		9212559						
ANR	9212590	Symbol	* ft_mac_names		9212559						
ANR	9212591	Function	ps_get_standard_strings	530:2:13644:13819							
ANR	9212592	FunctionDef	ps_get_standard_strings (FT_UInt sid)		9212591	0					
ANR	9212593	CompoundStatement		532:2:13707:13819	9212591	0					
ANR	9212594	IfStatement	if ( sid >= FT_NUM_SID_NAMES )		9212591	0					
ANR	9212595	Condition	sid >= FT_NUM_SID_NAMES	533:9:13718:13740	9212591	0	True				
ANR	9212596	RelationalExpression	sid >= FT_NUM_SID_NAMES		9212591	0		>=			
ANR	9212597	Identifier	sid		9212591	0					
ANR	9212598	Identifier	FT_NUM_SID_NAMES		9212591	1					
ANR	9212599	ReturnStatement	return 0 ;	534:6:13750:13758	9212591	1	True				
ANR	9212600	PrimaryExpression	0		9212591	0					
ANR	9212601	ReturnStatement	return ft_standard_glyph_names + ft_sid_names [ sid ] ;	536:4:13765:13815	9212591	1	True				
ANR	9212602	AdditiveExpression	ft_standard_glyph_names + ft_sid_names [ sid ]		9212591	0		+			
ANR	9212603	Identifier	ft_standard_glyph_names		9212591	0					
ANR	9212604	ArrayIndexing	ft_sid_names [ sid ]		9212591	1					
ANR	9212605	Identifier	ft_sid_names		9212591	0					
ANR	9212606	Identifier	sid		9212591	1					
ANR	9212607	ReturnType	static const char *		9212591	1					
ANR	9212608	Identifier	ps_get_standard_strings		9212591	2					
ANR	9212609	ParameterList	FT_UInt sid		9212591	3					
ANR	9212610	Parameter	FT_UInt sid	531:27:13690:13701	9212591	0	True				
ANR	9212611	ParameterType	FT_UInt		9212591	0					
ANR	9212612	Identifier	sid		9212591	1					
ANR	9212613	CFGEntryNode	ENTRY		9212591		True				
ANR	9212614	CFGExitNode	EXIT		9212591		True				
ANR	9212615	Symbol	* ft_sid_names		9212591						
ANR	9212616	Symbol	ft_standard_glyph_names		9212591						
ANR	9212617	Symbol	FT_NUM_SID_NAMES		9212591						
ANR	9212618	Symbol	* sid		9212591						
ANR	9212619	Symbol	ft_sid_names		9212591						
ANR	9212620	Symbol	sid		9212591						
ANR	9212621	Function	psnames_get_service	583:2:15508:15964							
ANR	9212622	FunctionDef	"psnames_get_service (FT_Module module , const char * service_id)"		9212621	0					
ANR	9212623	CompoundStatement		586:2:15621:15964	9212621	0					
ANR	9212624	IdentifierDeclStatement	FT_Library library ;	589:4:15721:15740	9212621	0	True				
ANR	9212625	IdentifierDecl	library		9212621	0					
ANR	9212626	IdentifierDeclType	FT_Library		9212621	0					
ANR	9212627	Identifier	library		9212621	1					
ANR	9212628	IfStatement	if ( ! module )		9212621	1					
ANR	9212629	Condition	! module	592:9:15753:15759	9212621	0	True				
ANR	9212630	UnaryOperationExpression	! module		9212621	0					
ANR	9212631	UnaryOperator	!		9212621	0					
ANR	9212632	Identifier	module		9212621	1					
ANR	9212633	ReturnStatement	return NULL ;	593:6:15769:15780	9212621	1	True				
ANR	9212634	Identifier	NULL		9212621	0					
ANR	9212635	ExpressionStatement	library = module -> library	594:4:15786:15811	9212621	2	True				
ANR	9212636	AssignmentExpression	library = module -> library		9212621	0		=			
ANR	9212637	Identifier	library		9212621	0					
ANR	9212638	PtrMemberAccess	module -> library		9212621	1					
ANR	9212639	Identifier	module		9212621	0					
ANR	9212640	Identifier	library		9212621	1					
ANR	9212641	IfStatement	if ( ! library )		9212621	3					
ANR	9212642	Condition	! library	595:9:15822:15829	9212621	0	True				
ANR	9212643	UnaryOperationExpression	! library		9212621	0					
ANR	9212644	UnaryOperator	!		9212621	0					
ANR	9212645	Identifier	library		9212621	1					
ANR	9212646	ReturnStatement	return NULL ;	596:6:15839:15850	9212621	1	True				
ANR	9212647	Identifier	NULL		9212621	0					
ANR	9212648	ReturnStatement	"return ft_service_list_lookup ( PSCMAPS_SERVICES_GET , service_id ) ;"	601:4:15895:15960	9212621	4	True				
ANR	9212649	CallExpression	"ft_service_list_lookup ( PSCMAPS_SERVICES_GET , service_id )"		9212621	0					
ANR	9212650	Callee	ft_service_list_lookup		9212621	0					
ANR	9212651	Identifier	ft_service_list_lookup		9212621	0					
ANR	9212652	ArgumentList	PSCMAPS_SERVICES_GET		9212621	1					
ANR	9212653	Argument	PSCMAPS_SERVICES_GET		9212621	0					
ANR	9212654	Identifier	PSCMAPS_SERVICES_GET		9212621	0					
ANR	9212655	Argument	service_id		9212621	1					
ANR	9212656	Identifier	service_id		9212621	0					
ANR	9212657	ReturnType	static FT_Pointer		9212621	1					
ANR	9212658	Identifier	psnames_get_service		9212621	2					
ANR	9212659	ParameterList	"FT_Module module , const char * service_id"		9212621	3					
ANR	9212660	Parameter	FT_Module module	584:23:15549:15567	9212621	0	True				
ANR	9212661	ParameterType	FT_Module		9212621	0					
ANR	9212662	Identifier	module		9212621	1					
ANR	9212663	Parameter	const char * service_id	585:23:15593:15615	9212621	1	True				
ANR	9212664	ParameterType	const char *		9212621	0					
ANR	9212665	Identifier	service_id		9212621	1					
ANR	9212666	CFGEntryNode	ENTRY		9212621		True				
ANR	9212667	CFGExitNode	EXIT		9212621		True				
ANR	9212668	Symbol	PSCMAPS_SERVICES_GET		9212621						
ANR	9212669	Symbol	module -> library		9212621						
ANR	9212670	Symbol	library		9212621						
ANR	9212671	Symbol	NULL		9212621						
ANR	9212672	Symbol	* module		9212621						
ANR	9212673	Symbol	module		9212621						
ANR	9212674	Symbol	service_id		9212621						
ANR	9212675	Symbol	ft_service_list_lookup		9212621						
