command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2408024	File	data/converged/CVE-2018-16863_ghostpdl/devices_gdevhl7x.c								
ANR	2408025	ClassDef	<unnamed>	87:8:3375:3542							
ANR	2408026	DeclStmt									
ANR	2408027	Decl							short	short	width
ANR	2408028	DeclStmt									
ANR	2408029	Decl							short	short	height
ANR	2408030	DeclStmt									
ANR	2408031	Decl									PaperFormat
ANR	2408032	DeclStmt									
ANR	2408033	Decl							unsigned char	unsigned char	Byte
ANR	2408034	ClassDef	<unnamed>	97:8:3742:3811							
ANR	2408035	DeclStmt									
ANR	2408036	Decl							Byte	Byte *	data
ANR	2408037	DeclStmt									
ANR	2408038	Decl							short	short	maxSize
ANR	2408039	DeclStmt									
ANR	2408040	Decl							short	short	current
ANR	2408041	DeclStmt									
ANR	2408042	Decl									ByteList
ANR	2408043	ClassDef	<unnamed>	109:8:3890:4135							
ANR	2408044	DeclStmt									
ANR	2408045	Decl							short	short	previousSize
ANR	2408046	DeclStmt									
ANR	2408047	Decl							Byte	Byte [ 1500 ]	previousData
ANR	2408048	DeclStmt									
ANR	2408049	Decl							short	short	nbBlankLines
ANR	2408050	DeclStmt									
ANR	2408051	Decl							short	short	nbLinesSent
ANR	2408052	DeclStmt									
ANR	2408053	Decl							short	short	pageWidth
ANR	2408054	DeclStmt									
ANR	2408055	Decl							short	short	pageHeight
ANR	2408056	DeclStmt									
ANR	2408057	Decl							short	short	horizontalOffset
ANR	2408058	DeclStmt									
ANR	2408059	Decl							short	short	resolution
ANR	2408060	DeclStmt									
ANR	2408061	Decl									Summary
ANR	2408062	DeclStmt									
ANR	2408063	Decl							const int	const int	DumpFinished
ANR	2408064	DeclStmt									
ANR	2408065	Decl							const int	const int	DumpContinue
ANR	2408066	DeclStmt									
ANR	2408067	Decl							const int	const int	HL7X0_LENGTH
ANR	2408068	DeclStmt									
ANR	2408069	Decl							void	"void ( Byte * pSource , short length , ByteList * pCommandList , short offset , Byte * pCommandCount , short rest )"	makeCommandsForSequence
ANR	2408070	DeclStmt									
ANR	2408071	Decl							int	"int ( gx_device_printer * pSource , Byte * pLineTmp , ByteList * pCommandList , Summary * pSummary )"	dumpPage
ANR	2408072	DeclStmt									
ANR	2408073	Decl							void	"void ( Summary * s , short pw , short ph , short resolution )"	initSummary
ANR	2408074	DeclStmt									
ANR	2408075	Decl							void	void ( Summary * s )	resetPreviousData
ANR	2408076	DeclStmt									
ANR	2408077	Decl							void	"void ( Byte * pCurrentLine , Byte * pPreviousLine , short lineWidth , ByteList * commandsList , short horizontalOffset )"	makeFullLine
ANR	2408078	DeclStmt									
ANR	2408079	Decl							void	"void ( ByteList * list , Byte * array , short maxSize , short initCurrent )"	initByteList
ANR	2408080	DeclStmt									
ANR	2408081	Decl							void	"void ( ByteList * list , Byte value )"	addByte
ANR	2408082	DeclStmt									
ANR	2408083	Decl							void	"void ( ByteList * list , Byte * source , short nb )"	addArray
ANR	2408084	DeclStmt									
ANR	2408085	Decl							void	"void ( ByteList * list , Byte value , short nb )"	addNBytes
ANR	2408086	DeclStmt									
ANR	2408087	Decl							Byte	Byte * ( ByteList * list )	currentPosition
ANR	2408088	DeclStmt									
ANR	2408089	Decl							void	"void ( ByteList * list , short number )"	addCodedNumber
ANR	2408090	DeclStmt									
ANR	2408091	Decl							int	"int ( ByteList * list , short biggest )"	isThereEnoughRoom
ANR	2408092	DeclStmt									
ANR	2408093	Decl							short	short ( ByteList * list )	roomLeft
ANR	2408094	DeclStmt									
ANR	2408095	Decl							void	"void ( ByteList * list , FILE * printStream )"	dumpToPrinter
ANR	2408096	DeclStmt									
ANR	2408097	Decl							int	"int ( gx_device_printer * , FILE * , int , int , ByteList * )"	hl7x0_print_page
ANR	2408098	DeclStmt									
ANR	2408099	Decl							const PaperFormat	const PaperFormat [ ]	tableOfFormats
ANR	2408100	Function	MaxLineLength	216:0:7424:7519							
ANR	2408101	FunctionDef	MaxLineLength (short resolution)		2408100	0					
ANR	2408102	CompoundStatement		216:44:7468:7519	2408100	0					
ANR	2408103	ReturnStatement	return ( ( ( 156 * resolution / 150 ) * 5 ) / 4 ) + 8 ;	217:0:7470:7517	2408100	0	True				
ANR	2408104	AdditiveExpression	( ( ( 156 * resolution / 150 ) * 5 ) / 4 ) + 8		2408100	0		+			
ANR	2408105	MultiplicativeExpression	( ( 156 * resolution / 150 ) * 5 ) / 4		2408100	0		/			
ANR	2408106	MultiplicativeExpression	( 156 * resolution / 150 ) * 5		2408100	0		*			
ANR	2408107	MultiplicativeExpression	156 * resolution / 150		2408100	0		*			
ANR	2408108	PrimaryExpression	156		2408100	0					
ANR	2408109	MultiplicativeExpression	resolution / 150		2408100	1		/			
ANR	2408110	Identifier	resolution		2408100	0					
ANR	2408111	PrimaryExpression	150		2408100	1					
ANR	2408112	PrimaryExpression	5		2408100	1					
ANR	2408113	PrimaryExpression	4		2408100	1					
ANR	2408114	PrimaryExpression	8		2408100	1					
ANR	2408115	ReturnType	static short		2408100	1					
ANR	2408116	Identifier	MaxLineLength		2408100	2					
ANR	2408117	ParameterList	short resolution		2408100	3					
ANR	2408118	Parameter	short resolution	216:27:7451:7466	2408100	0	True				
ANR	2408119	ParameterType	short		2408100	0					
ANR	2408120	Identifier	resolution		2408100	1					
ANR	2408121	CFGEntryNode	ENTRY		2408100		True				
ANR	2408122	CFGExitNode	EXIT		2408100		True				
ANR	2408123	Symbol	resolution		2408100						
ANR	2408124	DeclStmt									
ANR	2408125	Decl							const gx_device_procs	const gx_device_procs	prn_hl_procs
ANR	2408126	DeclStmt									
ANR	2408127	Decl							const gx_device_printer far_data	const gx_device_printer far_data	gs_hl7x0_device
ANR	2408128	Function	hl7x0_open	262:0:9162:9550							
ANR	2408129	FunctionDef	hl7x0_open (gx_device * pdev)		2408128	0					
ANR	2408130	CompoundStatement		264:0:9201:9550	2408128	0					
ANR	2408131	Statement	static	265:8:9250:9255	2408128	0	True				
ANR	2408132	IdentifierDeclStatement	const float m_a4 [ 4 ] = { HL7X0_MARGINS_A4 } ;	265:15:9257:9299	2408128	1	True				
ANR	2408133	IdentifierDecl	m_a4 [ 4 ] = { HL7X0_MARGINS_A4 }		2408128	0					
ANR	2408134	IdentifierDeclType	const float [ 4 ]		2408128	0					
ANR	2408135	Identifier	m_a4		2408128	1					
ANR	2408136	PrimaryExpression	4		2408128	2					
ANR	2408137	AssignmentExpression	m_a4 [ 4 ] = { HL7X0_MARGINS_A4 }		2408128	3		=			
ANR	2408138	Identifier	m_a4		2408128	0					
ANR	2408139	InitializerList	HL7X0_MARGINS_A4		2408128	1					
ANR	2408140	Identifier	HL7X0_MARGINS_A4		2408128	0					
ANR	2408141	Statement	static	266:8:9309:9314	2408128	2	True				
ANR	2408142	IdentifierDeclStatement	const float m_letter [ 4 ] = { HL7X0_MARGINS_LETTER } ;	266:15:9316:9366	2408128	3	True				
ANR	2408143	IdentifierDecl	m_letter [ 4 ] = { HL7X0_MARGINS_LETTER }		2408128	0					
ANR	2408144	IdentifierDeclType	const float [ 4 ]		2408128	0					
ANR	2408145	Identifier	m_letter		2408128	1					
ANR	2408146	PrimaryExpression	4		2408128	2					
ANR	2408147	AssignmentExpression	m_letter [ 4 ] = { HL7X0_MARGINS_LETTER }		2408128	3		=			
ANR	2408148	Identifier	m_letter		2408128	0					
ANR	2408149	InitializerList	HL7X0_MARGINS_LETTER		2408128	1					
ANR	2408150	Identifier	HL7X0_MARGINS_LETTER		2408128	0					
ANR	2408151	IdentifierDeclStatement	const float * m = ( gdev_pcl_paper_size ( pdev ) == PAPER_SIZE_A4 ? m_a4 : m_letter ) ;	267:8:9376:9465	2408128	4	True				
ANR	2408152	IdentifierDecl	* m = ( gdev_pcl_paper_size ( pdev ) == PAPER_SIZE_A4 ? m_a4 : m_letter )		2408128	0					
ANR	2408153	IdentifierDeclType	const float *		2408128	0					
ANR	2408154	Identifier	m		2408128	1					
ANR	2408155	AssignmentExpression	* m = ( gdev_pcl_paper_size ( pdev ) == PAPER_SIZE_A4 ? m_a4 : m_letter )		2408128	2		=			
ANR	2408156	Identifier	m		2408128	0					
ANR	2408157	ConditionalExpression	gdev_pcl_paper_size ( pdev ) == PAPER_SIZE_A4 ? m_a4 : m_letter		2408128	1					
ANR	2408158	Condition	gdev_pcl_paper_size ( pdev ) == PAPER_SIZE_A4		2408128	0					
ANR	2408159	EqualityExpression	gdev_pcl_paper_size ( pdev ) == PAPER_SIZE_A4		2408128	0		==			
ANR	2408160	CallExpression	gdev_pcl_paper_size ( pdev )		2408128	0					
ANR	2408161	Callee	gdev_pcl_paper_size		2408128	0					
ANR	2408162	Identifier	gdev_pcl_paper_size		2408128	0					
ANR	2408163	ArgumentList	pdev		2408128	1					
ANR	2408164	Argument	pdev		2408128	0					
ANR	2408165	Identifier	pdev		2408128	0					
ANR	2408166	Identifier	PAPER_SIZE_A4		2408128	1					
ANR	2408167	Identifier	m_a4		2408128	1					
ANR	2408168	Identifier	m_letter		2408128	2					
ANR	2408169	ExpressionStatement	"gx_device_set_margins ( pdev , m , true )"	270:8:9476:9512	2408128	5	True				
ANR	2408170	CallExpression	"gx_device_set_margins ( pdev , m , true )"		2408128	0					
ANR	2408171	Callee	gx_device_set_margins		2408128	0					
ANR	2408172	Identifier	gx_device_set_margins		2408128	0					
ANR	2408173	ArgumentList	pdev		2408128	1					
ANR	2408174	Argument	pdev		2408128	0					
ANR	2408175	Identifier	pdev		2408128	0					
ANR	2408176	Argument	m		2408128	1					
ANR	2408177	Identifier	m		2408128	0					
ANR	2408178	Argument	true		2408128	2					
ANR	2408179	Identifier	true		2408128	0					
ANR	2408180	ReturnStatement	return gdev_prn_open ( pdev ) ;	271:8:9522:9548	2408128	6	True				
ANR	2408181	CallExpression	gdev_prn_open ( pdev )		2408128	0					
ANR	2408182	Callee	gdev_prn_open		2408128	0					
ANR	2408183	Identifier	gdev_prn_open		2408128	0					
ANR	2408184	ArgumentList	pdev		2408128	1					
ANR	2408185	Argument	pdev		2408128	0					
ANR	2408186	Identifier	pdev		2408128	0					
ANR	2408187	ReturnType	static int		2408128	1					
ANR	2408188	Identifier	hl7x0_open		2408128	2					
ANR	2408189	ParameterList	gx_device * pdev		2408128	3					
ANR	2408190	Parameter	gx_device * pdev	263:11:9184:9198	2408128	0	True				
ANR	2408191	ParameterType	gx_device *		2408128	0					
ANR	2408192	Identifier	pdev		2408128	1					
ANR	2408193	CFGEntryNode	ENTRY		2408128		True				
ANR	2408194	CFGExitNode	EXIT		2408128		True				
ANR	2408195	Symbol	pdev		2408128						
ANR	2408196	Symbol	m_a4		2408128						
ANR	2408197	Symbol	gdev_pcl_paper_size		2408128						
ANR	2408198	Symbol	true		2408128						
ANR	2408199	Symbol	m_letter		2408128						
ANR	2408200	Symbol	PAPER_SIZE_A4		2408128						
ANR	2408201	Symbol	gdev_prn_open		2408128						
ANR	2408202	Symbol	HL7X0_MARGINS_A4		2408128						
ANR	2408203	Symbol	m		2408128						
ANR	2408204	Symbol	HL7X0_MARGINS_LETTER		2408128						
ANR	2408205	Function	hl7x0_close	275:0:9621:9894							
ANR	2408206	FunctionDef	hl7x0_close (gx_device * pdev)		2408205	0					
ANR	2408207	CompoundStatement		277:0:9661:9894	2408205	0					
ANR	2408208	Statement	gx_device_printer	278:4:9667:9683	2408205	0	True				
ANR	2408209	Statement	*	278:22:9685:9685	2408205	1	True				
ANR	2408210	Statement	const	278:23:9686:9690	2408205	2	True				
ANR	2408211	ExpressionStatement	ppdev = ( gx_device_printer * ) pdev	278:29:9692:9725	2408205	3	True				
ANR	2408212	AssignmentExpression	ppdev = ( gx_device_printer * ) pdev		2408205	0		=			
ANR	2408213	Identifier	ppdev		2408205	0					
ANR	2408214	CastExpression	( gx_device_printer * ) pdev		2408205	1					
ANR	2408215	CastTarget	gx_device_printer *		2408205	0					
ANR	2408216	Identifier	pdev		2408205	1					
ANR	2408217	IdentifierDeclStatement	"int code = gdev_prn_open_printer ( pdev , 1 ) ;"	279:4:9731:9772	2408205	4	True				
ANR	2408218	IdentifierDecl	"code = gdev_prn_open_printer ( pdev , 1 )"		2408205	0					
ANR	2408219	IdentifierDeclType	int		2408205	0					
ANR	2408220	Identifier	code		2408205	1					
ANR	2408221	AssignmentExpression	"code = gdev_prn_open_printer ( pdev , 1 )"		2408205	2		=			
ANR	2408222	Identifier	code		2408205	0					
ANR	2408223	CallExpression	"gdev_prn_open_printer ( pdev , 1 )"		2408205	1					
ANR	2408224	Callee	gdev_prn_open_printer		2408205	0					
ANR	2408225	Identifier	gdev_prn_open_printer		2408205	0					
ANR	2408226	ArgumentList	pdev		2408205	1					
ANR	2408227	Argument	pdev		2408205	0					
ANR	2408228	Identifier	pdev		2408205	0					
ANR	2408229	Argument	1		2408205	1					
ANR	2408230	PrimaryExpression	1		2408205	0					
ANR	2408231	IfStatement	if ( code < 0 )		2408205	5					
ANR	2408232	Condition	code < 0	281:8:9783:9790	2408205	0	True				
ANR	2408233	RelationalExpression	code < 0		2408205	0		<			
ANR	2408234	Identifier	code		2408205	0					
ANR	2408235	PrimaryExpression	0		2408205	1					
ANR	2408236	ReturnStatement	return code ;	282:8:9801:9812	2408205	1	True				
ANR	2408237	Identifier	code		2408205	0					
ANR	2408238	ExpressionStatement	"fputs ( ""@N@N@N@N@X"" , ppdev -> file )"	283:4:9818:9851	2408205	6	True				
ANR	2408239	CallExpression	"fputs ( ""@N@N@N@N@X"" , ppdev -> file )"		2408205	0					
ANR	2408240	Callee	fputs		2408205	0					
ANR	2408241	Identifier	fputs		2408205	0					
ANR	2408242	ArgumentList	"""@N@N@N@N@X"""		2408205	1					
ANR	2408243	Argument	"""@N@N@N@N@X"""		2408205	0					
ANR	2408244	PrimaryExpression	"""@N@N@N@N@X"""		2408205	0					
ANR	2408245	Argument	ppdev -> file		2408205	1					
ANR	2408246	PtrMemberAccess	ppdev -> file		2408205	0					
ANR	2408247	Identifier	ppdev		2408205	0					
ANR	2408248	Identifier	file		2408205	1					
ANR	2408249	ReturnStatement	return gdev_prn_close_printer ( pdev ) ;	284:4:9857:9892	2408205	7	True				
ANR	2408250	CallExpression	gdev_prn_close_printer ( pdev )		2408205	0					
ANR	2408251	Callee	gdev_prn_close_printer		2408205	0					
ANR	2408252	Identifier	gdev_prn_close_printer		2408205	0					
ANR	2408253	ArgumentList	pdev		2408205	1					
ANR	2408254	Argument	pdev		2408205	0					
ANR	2408255	Identifier	pdev		2408205	0					
ANR	2408256	ReturnType	static int		2408205	1					
ANR	2408257	Identifier	hl7x0_close		2408205	2					
ANR	2408258	ParameterList	gx_device * pdev		2408205	3					
ANR	2408259	Parameter	gx_device * pdev	276:12:9644:9658	2408205	0	True				
ANR	2408260	ParameterType	gx_device *		2408205	0					
ANR	2408261	Identifier	pdev		2408205	1					
ANR	2408262	CFGEntryNode	ENTRY		2408205		True				
ANR	2408263	CFGExitNode	EXIT		2408205		True				
ANR	2408264	Symbol	* ppdev		2408205						
ANR	2408265	Symbol	pdev		2408205						
ANR	2408266	Symbol	gdev_prn_open_printer		2408205						
ANR	2408267	Symbol	code		2408205						
ANR	2408268	Symbol	ppdev -> file		2408205						
ANR	2408269	Symbol	ppdev		2408205						
ANR	2408270	Symbol	gdev_prn_close_printer		2408205						
ANR	2408271	Function	hl720_print_page	290:0:9965:11002							
ANR	2408272	FunctionDef	"hl720_print_page (gx_device_printer * pdev , FILE * prn_stream)"		2408271	0					
ANR	2408273	CompoundStatement		292:0:10036:11002	2408271	0					
ANR	2408274	IdentifierDeclStatement	"Byte prefix [ ] = { 0x1B , '%' , '-' , '1' , '2' , '3' , '4' , '5' , 'X' , '@' , 'P' , 'J' , 'L' , 0x0A , '@' , 'P' , 'J' , 'L' , ' ' , 'E' , 'N' , 'T' , 'E' , 'R' , ' ' , 'L' , 'A' , 'N' , 'G' , 'U' , 'A' , 'G' , 'E' , ' ' , '=' , ' ' , 'H' , 'B' , 'P' , 0x0A , '@' , 'L' , 0x0 } ;"	293:8:10046:10347	2408271	0	True				
ANR	2408275	IdentifierDecl	"prefix [ ] = { 0x1B , '%' , '-' , '1' , '2' , '3' , '4' , '5' , 'X' , '@' , 'P' , 'J' , 'L' , 0x0A , '@' , 'P' , 'J' , 'L' , ' ' , 'E' , 'N' , 'T' , 'E' , 'R' , ' ' , 'L' , 'A' , 'N' , 'G' , 'U' , 'A' , 'G' , 'E' , ' ' , '=' , ' ' , 'H' , 'B' , 'P' , 0x0A , '@' , 'L' , 0x0 }"		2408271	0					
ANR	2408276	IdentifierDeclType	Byte [ ]		2408271	0					
ANR	2408277	Identifier	prefix		2408271	1					
ANR	2408278	AssignmentExpression	"prefix [ ] = { 0x1B , '%' , '-' , '1' , '2' , '3' , '4' , '5' , 'X' , '@' , 'P' , 'J' , 'L' , 0x0A , '@' , 'P' , 'J' , 'L' , ' ' , 'E' , 'N' , 'T' , 'E' , 'R' , ' ' , 'L' , 'A' , 'N' , 'G' , 'U' , 'A' , 'G' , 'E' , ' ' , '=' , ' ' , 'H' , 'B' , 'P' , 0x0A , '@' , 'L' , 0x0 }"		2408271	2		=			
ANR	2408279	Identifier	prefix		2408271	0					
ANR	2408280	InitializerList	0x1B		2408271	1					
ANR	2408281	PrimaryExpression	0x1B		2408271	0					
ANR	2408282	PrimaryExpression	'%'		2408271	1					
ANR	2408283	PrimaryExpression	'-'		2408271	2					
ANR	2408284	PrimaryExpression	'1'		2408271	3					
ANR	2408285	PrimaryExpression	'2'		2408271	4					
ANR	2408286	PrimaryExpression	'3'		2408271	5					
ANR	2408287	PrimaryExpression	'4'		2408271	6					
ANR	2408288	PrimaryExpression	'5'		2408271	7					
ANR	2408289	PrimaryExpression	'X'		2408271	8					
ANR	2408290	PrimaryExpression	'@'		2408271	9					
ANR	2408291	PrimaryExpression	'P'		2408271	10					
ANR	2408292	PrimaryExpression	'J'		2408271	11					
ANR	2408293	PrimaryExpression	'L'		2408271	12					
ANR	2408294	PrimaryExpression	0x0A		2408271	13					
ANR	2408295	PrimaryExpression	'@'		2408271	14					
ANR	2408296	PrimaryExpression	'P'		2408271	15					
ANR	2408297	PrimaryExpression	'J'		2408271	16					
ANR	2408298	PrimaryExpression	'L'		2408271	17					
ANR	2408299	PrimaryExpression	' '		2408271	18					
ANR	2408300	PrimaryExpression	'E'		2408271	19					
ANR	2408301	PrimaryExpression	'N'		2408271	20					
ANR	2408302	PrimaryExpression	'T'		2408271	21					
ANR	2408303	PrimaryExpression	'E'		2408271	22					
ANR	2408304	PrimaryExpression	'R'		2408271	23					
ANR	2408305	PrimaryExpression	' '		2408271	24					
ANR	2408306	PrimaryExpression	'L'		2408271	25					
ANR	2408307	PrimaryExpression	'A'		2408271	26					
ANR	2408308	PrimaryExpression	'N'		2408271	27					
ANR	2408309	PrimaryExpression	'G'		2408271	28					
ANR	2408310	PrimaryExpression	'U'		2408271	29					
ANR	2408311	PrimaryExpression	'A'		2408271	30					
ANR	2408312	PrimaryExpression	'G'		2408271	31					
ANR	2408313	PrimaryExpression	'E'		2408271	32					
ANR	2408314	PrimaryExpression	' '		2408271	33					
ANR	2408315	PrimaryExpression	'='		2408271	34					
ANR	2408316	PrimaryExpression	' '		2408271	35					
ANR	2408317	PrimaryExpression	'H'		2408271	36					
ANR	2408318	PrimaryExpression	'B'		2408271	37					
ANR	2408319	PrimaryExpression	'P'		2408271	38					
ANR	2408320	PrimaryExpression	0x0A		2408271	39					
ANR	2408321	PrimaryExpression	'@'		2408271	40					
ANR	2408322	PrimaryExpression	'L'		2408271	41					
ANR	2408323	PrimaryExpression	0x0		2408271	42					
ANR	2408324	IdentifierDeclStatement	ByteList initCommand ;	301:8:10357:10377	2408271	1	True				
ANR	2408325	IdentifierDecl	initCommand		2408271	0					
ANR	2408326	IdentifierDeclType	ByteList		2408271	0					
ANR	2408327	Identifier	initCommand		2408271	1					
ANR	2408328	IdentifierDeclStatement	int x_dpi = pdev -> x_pixels_per_inch ;	302:8:10387:10422	2408271	2	True				
ANR	2408329	IdentifierDecl	x_dpi = pdev -> x_pixels_per_inch		2408271	0					
ANR	2408330	IdentifierDeclType	int		2408271	0					
ANR	2408331	Identifier	x_dpi		2408271	1					
ANR	2408332	AssignmentExpression	x_dpi = pdev -> x_pixels_per_inch		2408271	2		=			
ANR	2408333	Identifier	x_dpi		2408271	0					
ANR	2408334	PtrMemberAccess	pdev -> x_pixels_per_inch		2408271	1					
ANR	2408335	Identifier	pdev		2408271	0					
ANR	2408336	Identifier	x_pixels_per_inch		2408271	1					
ANR	2408337	ExpressionStatement	"initByteList ( & initCommand , prefix , sizeof ( prefix ) , sizeof ( prefix ) - 1 )"	303:8:10432:10602	2408271	3	True				
ANR	2408338	CallExpression	"initByteList ( & initCommand , prefix , sizeof ( prefix ) , sizeof ( prefix ) - 1 )"		2408271	0					
ANR	2408339	Callee	initByteList		2408271	0					
ANR	2408340	Identifier	initByteList		2408271	0					
ANR	2408341	ArgumentList	& initCommand		2408271	1					
ANR	2408342	Argument	& initCommand		2408271	0					
ANR	2408343	UnaryOperationExpression	& initCommand		2408271	0					
ANR	2408344	UnaryOperator	&		2408271	0					
ANR	2408345	Identifier	initCommand		2408271	1					
ANR	2408346	Argument	prefix		2408271	1					
ANR	2408347	Identifier	prefix		2408271	0					
ANR	2408348	Argument	sizeof ( prefix )		2408271	2					
ANR	2408349	SizeofExpression	sizeof ( prefix )		2408271	0					
ANR	2408350	Sizeof	sizeof		2408271	0					
ANR	2408351	SizeofOperand	prefix		2408271	1					
ANR	2408352	Argument	sizeof ( prefix ) - 1		2408271	3					
ANR	2408353	AdditiveExpression	sizeof ( prefix ) - 1		2408271	0		-			
ANR	2408354	SizeofExpression	sizeof ( prefix )		2408271	0					
ANR	2408355	Sizeof	sizeof		2408271	0					
ANR	2408356	SizeofOperand	prefix		2408271	1					
ANR	2408357	PrimaryExpression	1		2408271	1					
ANR	2408358	ExpressionStatement	"addByte ( & initCommand , ( Byte ) ( ( ( ( 600 / x_dpi ) >> 1 ) | ( ( ( 600 / x_dpi ) >> 1 ) << 2 ) ) ) )"	308:8:10703:10835	2408271	4	True				
ANR	2408359	CallExpression	"addByte ( & initCommand , ( Byte ) ( ( ( ( 600 / x_dpi ) >> 1 ) | ( ( ( 600 / x_dpi ) >> 1 ) << 2 ) ) ) )"		2408271	0					
ANR	2408360	Callee	addByte		2408271	0					
ANR	2408361	Identifier	addByte		2408271	0					
ANR	2408362	ArgumentList	& initCommand		2408271	1					
ANR	2408363	Argument	& initCommand		2408271	0					
ANR	2408364	UnaryOperationExpression	& initCommand		2408271	0					
ANR	2408365	UnaryOperator	&		2408271	0					
ANR	2408366	Identifier	initCommand		2408271	1					
ANR	2408367	Argument	( Byte ) ( ( ( ( 600 / x_dpi ) >> 1 ) | ( ( ( 600 / x_dpi ) >> 1 ) << 2 ) ) )		2408271	1					
ANR	2408368	CastExpression	( Byte ) ( ( ( ( 600 / x_dpi ) >> 1 ) | ( ( ( 600 / x_dpi ) >> 1 ) << 2 ) ) )		2408271	0					
ANR	2408369	CastTarget	Byte		2408271	0					
ANR	2408370	InclusiveOrExpression	( ( 600 / x_dpi ) >> 1 ) | ( ( ( 600 / x_dpi ) >> 1 ) << 2 )		2408271	1		|			
ANR	2408371	ShiftExpression	( 600 / x_dpi ) >> 1		2408271	0		>>			
ANR	2408372	MultiplicativeExpression	600 / x_dpi		2408271	0		/			
ANR	2408373	PrimaryExpression	600		2408271	0					
ANR	2408374	Identifier	x_dpi		2408271	1					
ANR	2408375	PrimaryExpression	1		2408271	1					
ANR	2408376	ShiftExpression	( ( 600 / x_dpi ) >> 1 ) << 2		2408271	1		<<			
ANR	2408377	ShiftExpression	( 600 / x_dpi ) >> 1		2408271	0		>>			
ANR	2408378	MultiplicativeExpression	600 / x_dpi		2408271	0		/			
ANR	2408379	PrimaryExpression	600		2408271	0					
ANR	2408380	Identifier	x_dpi		2408271	1					
ANR	2408381	PrimaryExpression	1		2408271	1					
ANR	2408382	PrimaryExpression	2		2408271	1					
ANR	2408383	ReturnStatement	"return hl7x0_print_page ( pdev , prn_stream , HL720 , 300 , & initCommand ) ;"	312:8:10918:11000	2408271	5	True				
ANR	2408384	CallExpression	"hl7x0_print_page ( pdev , prn_stream , HL720 , 300 , & initCommand )"		2408271	0					
ANR	2408385	Callee	hl7x0_print_page		2408271	0					
ANR	2408386	Identifier	hl7x0_print_page		2408271	0					
ANR	2408387	ArgumentList	pdev		2408271	1					
ANR	2408388	Argument	pdev		2408271	0					
ANR	2408389	Identifier	pdev		2408271	0					
ANR	2408390	Argument	prn_stream		2408271	1					
ANR	2408391	Identifier	prn_stream		2408271	0					
ANR	2408392	Argument	HL720		2408271	2					
ANR	2408393	Identifier	HL720		2408271	0					
ANR	2408394	Argument	300		2408271	3					
ANR	2408395	PrimaryExpression	300		2408271	0					
ANR	2408396	Argument	& initCommand		2408271	4					
ANR	2408397	UnaryOperationExpression	& initCommand		2408271	0					
ANR	2408398	UnaryOperator	&		2408271	0					
ANR	2408399	Identifier	initCommand		2408271	1					
ANR	2408400	ReturnType	static int		2408271	1					
ANR	2408401	Identifier	hl720_print_page		2408271	2					
ANR	2408402	ParameterList	"gx_device_printer * pdev , FILE * prn_stream"		2408271	3					
ANR	2408403	Parameter	gx_device_printer * pdev	291:17:9993:10015	2408271	0	True				
ANR	2408404	ParameterType	gx_device_printer *		2408271	0					
ANR	2408405	Identifier	pdev		2408271	1					
ANR	2408406	Parameter	FILE * prn_stream	291:42:10018:10033	2408271	1	True				
ANR	2408407	ParameterType	FILE *		2408271	0					
ANR	2408408	Identifier	prn_stream		2408271	1					
ANR	2408409	CFGEntryNode	ENTRY		2408271		True				
ANR	2408410	CFGExitNode	EXIT		2408271		True				
ANR	2408411	Symbol	pdev		2408271						
ANR	2408412	Symbol	x_dpi		2408271						
ANR	2408413	Symbol	prn_stream		2408271						
ANR	2408414	Symbol	hl7x0_print_page		2408271						
ANR	2408415	Symbol	prefix		2408271						
ANR	2408416	Symbol	HL720		2408271						
ANR	2408417	Symbol	* pdev		2408271						
ANR	2408418	Symbol	pdev -> x_pixels_per_inch		2408271						
ANR	2408419	Symbol	& initCommand		2408271						
ANR	2408420	Symbol	initCommand		2408271						
ANR	2408421	Function	hl7x0_print_page	318:0:11152:13535							
ANR	2408422	FunctionDef	"hl7x0_print_page (gx_device_printer * pdev , FILE * printStream , int ptype , int dots_per_inch , ByteList * initCommand)"		2408421	0					
ANR	2408423	CompoundStatement		321:0:11279:13535	2408421	0					
ANR	2408424	IdentifierDeclStatement	"Byte FormFeed [ ] = { '@' , 'G' , 0x00 , 0x00 , 0x01 , 0xFF , '@' , 'F' } ;"	324:2:11380:11435	2408421	0	True				
ANR	2408425	IdentifierDecl	"FormFeed [ ] = { '@' , 'G' , 0x00 , 0x00 , 0x01 , 0xFF , '@' , 'F' }"		2408421	0					
ANR	2408426	IdentifierDeclType	Byte [ ]		2408421	0					
ANR	2408427	Identifier	FormFeed		2408421	1					
ANR	2408428	AssignmentExpression	"FormFeed [ ] = { '@' , 'G' , 0x00 , 0x00 , 0x01 , 0xFF , '@' , 'F' }"		2408421	2		=			
ANR	2408429	Identifier	FormFeed		2408421	0					
ANR	2408430	InitializerList	'@'		2408421	1					
ANR	2408431	PrimaryExpression	'@'		2408421	0					
ANR	2408432	PrimaryExpression	'G'		2408421	1					
ANR	2408433	PrimaryExpression	0x00		2408421	2					
ANR	2408434	PrimaryExpression	0x00		2408421	3					
ANR	2408435	PrimaryExpression	0x01		2408421	4					
ANR	2408436	PrimaryExpression	0xFF		2408421	5					
ANR	2408437	PrimaryExpression	'@'		2408421	6					
ANR	2408438	PrimaryExpression	'F'		2408421	7					
ANR	2408439	IdentifierDeclStatement	ByteList formFeedCommand ;	325:2:11439:11463	2408421	1	True				
ANR	2408440	IdentifierDecl	formFeedCommand		2408421	0					
ANR	2408441	IdentifierDeclType	ByteList		2408421	0					
ANR	2408442	Identifier	formFeedCommand		2408421	1					
ANR	2408443	IdentifierDeclStatement	int line_size = gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev ) ;	327:2:11508:11577	2408421	2	True				
ANR	2408444	IdentifierDecl	line_size = gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev )		2408421	0					
ANR	2408445	IdentifierDeclType	int		2408421	0					
ANR	2408446	Identifier	line_size		2408421	1					
ANR	2408447	AssignmentExpression	line_size = gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev )		2408421	2		=			
ANR	2408448	Identifier	line_size		2408421	0					
ANR	2408449	CallExpression	gdev_mem_bytes_per_scan_line ( ( gx_device * ) pdev )		2408421	1					
ANR	2408450	Callee	gdev_mem_bytes_per_scan_line		2408421	0					
ANR	2408451	Identifier	gdev_mem_bytes_per_scan_line		2408421	0					
ANR	2408452	ArgumentList	( gx_device * ) pdev		2408421	1					
ANR	2408453	Argument	( gx_device * ) pdev		2408421	0					
ANR	2408454	CastExpression	( gx_device * ) pdev		2408421	0					
ANR	2408455	CastTarget	gx_device *		2408421	0					
ANR	2408456	Identifier	pdev		2408421	1					
ANR	2408457	IdentifierDeclStatement	int x_dpi = pdev -> x_pixels_per_inch ;	328:2:11581:11616	2408421	3	True				
ANR	2408458	IdentifierDecl	x_dpi = pdev -> x_pixels_per_inch		2408421	0					
ANR	2408459	IdentifierDeclType	int		2408421	0					
ANR	2408460	Identifier	x_dpi		2408421	1					
ANR	2408461	AssignmentExpression	x_dpi = pdev -> x_pixels_per_inch		2408421	2		=			
ANR	2408462	Identifier	x_dpi		2408421	0					
ANR	2408463	PtrMemberAccess	pdev -> x_pixels_per_inch		2408421	1					
ANR	2408464	Identifier	pdev		2408421	0					
ANR	2408465	Identifier	x_pixels_per_inch		2408421	1					
ANR	2408466	IdentifierDeclStatement	int num_rows = dev_print_scan_lines ( pdev ) ;	330:2:11666:11707	2408421	4	True				
ANR	2408467	IdentifierDecl	num_rows = dev_print_scan_lines ( pdev )		2408421	0					
ANR	2408468	IdentifierDeclType	int		2408421	0					
ANR	2408469	Identifier	num_rows		2408421	1					
ANR	2408470	AssignmentExpression	num_rows = dev_print_scan_lines ( pdev )		2408421	2		=			
ANR	2408471	Identifier	num_rows		2408421	0					
ANR	2408472	CallExpression	dev_print_scan_lines ( pdev )		2408421	1					
ANR	2408473	Callee	dev_print_scan_lines		2408421	0					
ANR	2408474	Identifier	dev_print_scan_lines		2408421	0					
ANR	2408475	ArgumentList	pdev		2408421	1					
ANR	2408476	Argument	pdev		2408421	0					
ANR	2408477	Identifier	pdev		2408421	0					
ANR	2408478	IdentifierDeclStatement	int result ;	331:2:11711:11721	2408421	5	True				
ANR	2408479	IdentifierDecl	result		2408421	0					
ANR	2408480	IdentifierDeclType	int		2408421	0					
ANR	2408481	Identifier	result		2408421	1					
ANR	2408482	IdentifierDeclStatement	int sizeOfBuffer = MaxLineLength ( x_dpi ) + 30 ;	332:2:11725:11771	2408421	6	True				
ANR	2408483	IdentifierDecl	sizeOfBuffer = MaxLineLength ( x_dpi ) + 30		2408421	0					
ANR	2408484	IdentifierDeclType	int		2408421	0					
ANR	2408485	Identifier	sizeOfBuffer		2408421	1					
ANR	2408486	AssignmentExpression	sizeOfBuffer = MaxLineLength ( x_dpi ) + 30		2408421	2		=			
ANR	2408487	Identifier	sizeOfBuffer		2408421	0					
ANR	2408488	AdditiveExpression	MaxLineLength ( x_dpi ) + 30		2408421	1		+			
ANR	2408489	CallExpression	MaxLineLength ( x_dpi )		2408421	0					
ANR	2408490	Callee	MaxLineLength		2408421	0					
ANR	2408491	Identifier	MaxLineLength		2408421	0					
ANR	2408492	ArgumentList	x_dpi		2408421	1					
ANR	2408493	Argument	x_dpi		2408421	0					
ANR	2408494	Identifier	x_dpi		2408421	0					
ANR	2408495	PrimaryExpression	30		2408421	1					
ANR	2408496	IdentifierDeclStatement	"Byte * storage = ( Byte * ) gs_malloc ( pdev -> memory , sizeOfBuffer + line_size , 1 , ""hl7x0_print_page"" ) ;"	333:2:11775:12007	2408421	7	True				
ANR	2408497	IdentifierDecl	"* storage = ( Byte * ) gs_malloc ( pdev -> memory , sizeOfBuffer + line_size , 1 , ""hl7x0_print_page"" )"		2408421	0					
ANR	2408498	IdentifierDeclType	Byte *		2408421	0					
ANR	2408499	Identifier	storage		2408421	1					
ANR	2408500	AssignmentExpression	"* storage = ( Byte * ) gs_malloc ( pdev -> memory , sizeOfBuffer + line_size , 1 , ""hl7x0_print_page"" )"		2408421	2		=			
ANR	2408501	Identifier	storage		2408421	0					
ANR	2408502	CastExpression	"( Byte * ) gs_malloc ( pdev -> memory , sizeOfBuffer + line_size , 1 , ""hl7x0_print_page"" )"		2408421	1					
ANR	2408503	CastTarget	Byte *		2408421	0					
ANR	2408504	CallExpression	"gs_malloc ( pdev -> memory , sizeOfBuffer + line_size , 1 , ""hl7x0_print_page"" )"		2408421	1					
ANR	2408505	Callee	gs_malloc		2408421	0					
ANR	2408506	Identifier	gs_malloc		2408421	0					
ANR	2408507	ArgumentList	pdev -> memory		2408421	1					
ANR	2408508	Argument	pdev -> memory		2408421	0					
ANR	2408509	PtrMemberAccess	pdev -> memory		2408421	0					
ANR	2408510	Identifier	pdev		2408421	0					
ANR	2408511	Identifier	memory		2408421	1					
ANR	2408512	Argument	sizeOfBuffer + line_size		2408421	1					
ANR	2408513	AdditiveExpression	sizeOfBuffer + line_size		2408421	0		+			
ANR	2408514	Identifier	sizeOfBuffer		2408421	0					
ANR	2408515	Identifier	line_size		2408421	1					
ANR	2408516	Argument	1		2408421	2					
ANR	2408517	PrimaryExpression	1		2408421	0					
ANR	2408518	Argument	"""hl7x0_print_page"""		2408421	3					
ANR	2408519	PrimaryExpression	"""hl7x0_print_page"""		2408421	0					
ANR	2408520	IdentifierDeclStatement	Summary pageSummary ;	339:8:12107:12126	2408421	8	True				
ANR	2408521	IdentifierDecl	pageSummary		2408421	0					
ANR	2408522	IdentifierDeclType	Summary		2408421	0					
ANR	2408523	Identifier	pageSummary		2408421	1					
ANR	2408524	IdentifierDeclStatement	ByteList commandsBuffer ;	340:8:12136:12159	2408421	9	True				
ANR	2408525	IdentifierDecl	commandsBuffer		2408421	0					
ANR	2408526	IdentifierDeclType	ByteList		2408421	0					
ANR	2408527	Identifier	commandsBuffer		2408421	1					
ANR	2408528	ExpressionStatement	"initSummary ( & pageSummary , line_size , num_rows , x_dpi )"	341:8:12169:12282	2408421	10	True				
ANR	2408529	CallExpression	"initSummary ( & pageSummary , line_size , num_rows , x_dpi )"		2408421	0					
ANR	2408530	Callee	initSummary		2408421	0					
ANR	2408531	Identifier	initSummary		2408421	0					
ANR	2408532	ArgumentList	& pageSummary		2408421	1					
ANR	2408533	Argument	& pageSummary		2408421	0					
ANR	2408534	UnaryOperationExpression	& pageSummary		2408421	0					
ANR	2408535	UnaryOperator	&		2408421	0					
ANR	2408536	Identifier	pageSummary		2408421	1					
ANR	2408537	Argument	line_size		2408421	1					
ANR	2408538	Identifier	line_size		2408421	0					
ANR	2408539	Argument	num_rows		2408421	2					
ANR	2408540	Identifier	num_rows		2408421	0					
ANR	2408541	Argument	x_dpi		2408421	3					
ANR	2408542	Identifier	x_dpi		2408421	0					
ANR	2408543	IfStatement	if ( storage == 0 )		2408421	11					
ANR	2408544	Condition	storage == 0	345:13:12297:12308	2408421	0	True				
ANR	2408545	EqualityExpression	storage == 0		2408421	0		==			
ANR	2408546	Identifier	storage		2408421	0					
ANR	2408547	PrimaryExpression	0		2408421	1					
ANR	2408548	ExpressionStatement	return_error ( gs_error_VMerror )	346:16:12362:12392	2408421	1	True				
ANR	2408549	CallExpression	return_error ( gs_error_VMerror )		2408421	0					
ANR	2408550	Callee	return_error		2408421	0					
ANR	2408551	Identifier	return_error		2408421	0					
ANR	2408552	ArgumentList	gs_error_VMerror		2408421	1					
ANR	2408553	Argument	gs_error_VMerror		2408421	0					
ANR	2408554	Identifier	gs_error_VMerror		2408421	0					
ANR	2408555	ExpressionStatement	"initByteList ( & commandsBuffer , storage , sizeOfBuffer , 0 )"	347:8:12402:12457	2408421	12	True				
ANR	2408556	CallExpression	"initByteList ( & commandsBuffer , storage , sizeOfBuffer , 0 )"		2408421	0					
ANR	2408557	Callee	initByteList		2408421	0					
ANR	2408558	Identifier	initByteList		2408421	0					
ANR	2408559	ArgumentList	& commandsBuffer		2408421	1					
ANR	2408560	Argument	& commandsBuffer		2408421	0					
ANR	2408561	UnaryOperationExpression	& commandsBuffer		2408421	0					
ANR	2408562	UnaryOperator	&		2408421	0					
ANR	2408563	Identifier	commandsBuffer		2408421	1					
ANR	2408564	Argument	storage		2408421	1					
ANR	2408565	Identifier	storage		2408421	0					
ANR	2408566	Argument	sizeOfBuffer		2408421	2					
ANR	2408567	Identifier	sizeOfBuffer		2408421	0					
ANR	2408568	Argument	0		2408421	3					
ANR	2408569	PrimaryExpression	0		2408421	0					
ANR	2408570	IfStatement	if ( pdev -> PageCount == 0 )		2408421	13					
ANR	2408571	Condition	pdev -> PageCount == 0	349:13:12497:12516	2408421	0	True				
ANR	2408572	EqualityExpression	pdev -> PageCount == 0		2408421	0		==			
ANR	2408573	PtrMemberAccess	pdev -> PageCount		2408421	0					
ANR	2408574	Identifier	pdev		2408421	0					
ANR	2408575	Identifier	PageCount		2408421	1					
ANR	2408576	PrimaryExpression	0		2408421	1					
ANR	2408577	CompoundStatement		30:10:1250:1250	2408421	1					
ANR	2408578	ExpressionStatement	"dumpToPrinter ( initCommand , printStream )"	352:12:12601:12640	2408421	0	True				
ANR	2408579	CallExpression	"dumpToPrinter ( initCommand , printStream )"		2408421	0					
ANR	2408580	Callee	dumpToPrinter		2408421	0					
ANR	2408581	Identifier	dumpToPrinter		2408421	0					
ANR	2408582	ArgumentList	initCommand		2408421	1					
ANR	2408583	Argument	initCommand		2408421	0					
ANR	2408584	Identifier	initCommand		2408421	0					
ANR	2408585	Argument	printStream		2408421	1					
ANR	2408586	Identifier	printStream		2408421	0					
ANR	2408587	DoStatement	do		2408421	14					
ANR	2408588	CompoundStatement		36:11:1413:1413	2408421	0					
ANR	2408589	ExpressionStatement	"result = dumpPage ( pdev , storage + sizeOfBuffer , & commandsBuffer , & pageSummary )"	357:10:12705:12914	2408421	0	True				
ANR	2408590	AssignmentExpression	"result = dumpPage ( pdev , storage + sizeOfBuffer , & commandsBuffer , & pageSummary )"		2408421	0		=			
ANR	2408591	Identifier	result		2408421	0					
ANR	2408592	CallExpression	"dumpPage ( pdev , storage + sizeOfBuffer , & commandsBuffer , & pageSummary )"		2408421	1					
ANR	2408593	Callee	dumpPage		2408421	0					
ANR	2408594	Identifier	dumpPage		2408421	0					
ANR	2408595	ArgumentList	pdev		2408421	1					
ANR	2408596	Argument	pdev		2408421	0					
ANR	2408597	Identifier	pdev		2408421	0					
ANR	2408598	Argument	storage + sizeOfBuffer		2408421	1					
ANR	2408599	AdditiveExpression	storage + sizeOfBuffer		2408421	0		+			
ANR	2408600	Identifier	storage		2408421	0					
ANR	2408601	Identifier	sizeOfBuffer		2408421	1					
ANR	2408602	Argument	& commandsBuffer		2408421	2					
ANR	2408603	UnaryOperationExpression	& commandsBuffer		2408421	0					
ANR	2408604	UnaryOperator	&		2408421	0					
ANR	2408605	Identifier	commandsBuffer		2408421	1					
ANR	2408606	Argument	& pageSummary		2408421	3					
ANR	2408607	UnaryOperationExpression	& pageSummary		2408421	0					
ANR	2408608	UnaryOperator	&		2408421	0					
ANR	2408609	Identifier	pageSummary		2408421	1					
ANR	2408610	ExpressionStatement	"dumpToPrinter ( & commandsBuffer , printStream )"	361:10:12926:12968	2408421	1	True				
ANR	2408611	CallExpression	"dumpToPrinter ( & commandsBuffer , printStream )"		2408421	0					
ANR	2408612	Callee	dumpToPrinter		2408421	0					
ANR	2408613	Identifier	dumpToPrinter		2408421	0					
ANR	2408614	ArgumentList	& commandsBuffer		2408421	1					
ANR	2408615	Argument	& commandsBuffer		2408421	0					
ANR	2408616	UnaryOperationExpression	& commandsBuffer		2408421	0					
ANR	2408617	UnaryOperator	&		2408421	0					
ANR	2408618	Identifier	commandsBuffer		2408421	1					
ANR	2408619	Argument	printStream		2408421	1					
ANR	2408620	Identifier	printStream		2408421	0					
ANR	2408621	Condition	result == DumpContinue	363:17:12988:13009	2408421	1	True				
ANR	2408622	EqualityExpression	result == DumpContinue		2408421	0		==			
ANR	2408623	Identifier	result		2408421	0					
ANR	2408624	Identifier	DumpContinue		2408421	1					
ANR	2408625	ExpressionStatement	"initByteList ( & formFeedCommand , FormFeed , sizeof ( FormFeed ) , sizeof ( FormFeed ) )"	366:8:13071:13252	2408421	15	True				
ANR	2408626	CallExpression	"initByteList ( & formFeedCommand , FormFeed , sizeof ( FormFeed ) , sizeof ( FormFeed ) )"		2408421	0					
ANR	2408627	Callee	initByteList		2408421	0					
ANR	2408628	Identifier	initByteList		2408421	0					
ANR	2408629	ArgumentList	& formFeedCommand		2408421	1					
ANR	2408630	Argument	& formFeedCommand		2408421	0					
ANR	2408631	UnaryOperationExpression	& formFeedCommand		2408421	0					
ANR	2408632	UnaryOperator	&		2408421	0					
ANR	2408633	Identifier	formFeedCommand		2408421	1					
ANR	2408634	Argument	FormFeed		2408421	1					
ANR	2408635	Identifier	FormFeed		2408421	0					
ANR	2408636	Argument	sizeof ( FormFeed )		2408421	2					
ANR	2408637	SizeofExpression	sizeof ( FormFeed )		2408421	0					
ANR	2408638	Sizeof	sizeof		2408421	0					
ANR	2408639	SizeofOperand	FormFeed		2408421	1					
ANR	2408640	Argument	sizeof ( FormFeed )		2408421	3					
ANR	2408641	SizeofExpression	sizeof ( FormFeed )		2408421	0					
ANR	2408642	Sizeof	sizeof		2408421	0					
ANR	2408643	SizeofOperand	FormFeed		2408421	1					
ANR	2408644	ExpressionStatement	"dumpToPrinter ( & formFeedCommand , printStream )"	370:8:13284:13328	2408421	16	True				
ANR	2408645	CallExpression	"dumpToPrinter ( & formFeedCommand , printStream )"		2408421	0					
ANR	2408646	Callee	dumpToPrinter		2408421	0					
ANR	2408647	Identifier	dumpToPrinter		2408421	0					
ANR	2408648	ArgumentList	& formFeedCommand		2408421	1					
ANR	2408649	Argument	& formFeedCommand		2408421	0					
ANR	2408650	UnaryOperationExpression	& formFeedCommand		2408421	0					
ANR	2408651	UnaryOperator	&		2408421	0					
ANR	2408652	Identifier	formFeedCommand		2408421	1					
ANR	2408653	Argument	printStream		2408421	1					
ANR	2408654	Identifier	printStream		2408421	0					
ANR	2408655	ExpressionStatement	"gs_free ( pdev -> memory , ( char * ) storage , storage_size_words , 1 , ""hl7X0_print_page"" )"	373:8:13376:13457	2408421	17	True				
ANR	2408656	CallExpression	"gs_free ( pdev -> memory , ( char * ) storage , storage_size_words , 1 , ""hl7X0_print_page"" )"		2408421	0					
ANR	2408657	Callee	gs_free		2408421	0					
ANR	2408658	Identifier	gs_free		2408421	0					
ANR	2408659	ArgumentList	pdev -> memory		2408421	1					
ANR	2408660	Argument	pdev -> memory		2408421	0					
ANR	2408661	PtrMemberAccess	pdev -> memory		2408421	0					
ANR	2408662	Identifier	pdev		2408421	0					
ANR	2408663	Identifier	memory		2408421	1					
ANR	2408664	Argument	( char * ) storage		2408421	1					
ANR	2408665	CastExpression	( char * ) storage		2408421	0					
ANR	2408666	CastTarget	char *		2408421	0					
ANR	2408667	Identifier	storage		2408421	1					
ANR	2408668	Argument	storage_size_words		2408421	2					
ANR	2408669	Identifier	storage_size_words		2408421	0					
ANR	2408670	Argument	1		2408421	3					
ANR	2408671	PrimaryExpression	1		2408421	0					
ANR	2408672	Argument	"""hl7X0_print_page"""		2408421	4					
ANR	2408673	PrimaryExpression	"""hl7X0_print_page"""		2408421	0					
ANR	2408674	ReturnStatement	return 0 ;	375:8:13468:13476	2408421	18	True				
ANR	2408675	PrimaryExpression	0		2408421	0					
ANR	2408676	ReturnType	static int		2408421	1					
ANR	2408677	Identifier	hl7x0_print_page		2408421	2					
ANR	2408678	ParameterList	"gx_device_printer * pdev , FILE * printStream , int ptype , int dots_per_inch , ByteList * initCommand"		2408421	3					
ANR	2408679	Parameter	gx_device_printer * pdev	319:17:11180:11202	2408421	0	True				
ANR	2408680	ParameterType	gx_device_printer *		2408421	0					
ANR	2408681	Identifier	pdev		2408421	1					
ANR	2408682	Parameter	FILE * printStream	319:42:11205:11221	2408421	1	True				
ANR	2408683	ParameterType	FILE *		2408421	0					
ANR	2408684	Identifier	printStream		2408421	1					
ANR	2408685	Parameter	int ptype	319:61:11224:11232	2408421	2	True				
ANR	2408686	ParameterType	int		2408421	0					
ANR	2408687	Identifier	ptype		2408421	1					
ANR	2408688	Parameter	int dots_per_inch	320:2:11237:11253	2408421	3	True				
ANR	2408689	ParameterType	int		2408421	0					
ANR	2408690	Identifier	dots_per_inch		2408421	1					
ANR	2408691	Parameter	ByteList * initCommand	320:21:11256:11276	2408421	4	True				
ANR	2408692	ParameterType	ByteList *		2408421	0					
ANR	2408693	Identifier	initCommand		2408421	1					
ANR	2408694	CFGEntryNode	ENTRY		2408421		True				
ANR	2408695	CFGExitNode	EXIT		2408421		True				
ANR	2408696	Symbol	formFeedCommand		2408421						
ANR	2408697	Symbol	dots_per_inch		2408421						
ANR	2408698	Symbol	gdev_mem_bytes_per_scan_line		2408421						
ANR	2408699	Symbol	ptype		2408421						
ANR	2408700	Symbol	pdev -> x_pixels_per_inch		2408421						
ANR	2408701	Symbol	sizeOfBuffer		2408421						
ANR	2408702	Symbol	MaxLineLength		2408421						
ANR	2408703	Symbol	storage		2408421						
ANR	2408704	Symbol	initCommand		2408421						
ANR	2408705	Symbol	result		2408421						
ANR	2408706	Symbol	pdev		2408421						
ANR	2408707	Symbol	x_dpi		2408421						
ANR	2408708	Symbol	storage_size_words		2408421						
ANR	2408709	Symbol	pdev -> PageCount		2408421						
ANR	2408710	Symbol	pdev -> memory		2408421						
ANR	2408711	Symbol	pageSummary		2408421						
ANR	2408712	Symbol	num_rows		2408421						
ANR	2408713	Symbol	line_size		2408421						
ANR	2408714	Symbol	dumpPage		2408421						
ANR	2408715	Symbol	commandsBuffer		2408421						
ANR	2408716	Symbol	& commandsBuffer		2408421						
ANR	2408717	Symbol	dev_print_scan_lines		2408421						
ANR	2408718	Symbol	FormFeed		2408421						
ANR	2408719	Symbol	DumpContinue		2408421						
ANR	2408720	Symbol	printStream		2408421						
ANR	2408721	Symbol	gs_error_VMerror		2408421						
ANR	2408722	Symbol	gs_malloc		2408421						
ANR	2408723	Symbol	& formFeedCommand		2408421						
ANR	2408724	Symbol	& pageSummary		2408421						
ANR	2408725	Symbol	* pdev		2408421						
ANR	2408726	Function	stripTrailingBlanks	383:0:13582:13852							
ANR	2408727	FunctionDef	"stripTrailingBlanks (Byte * line , short length)"		2408726	0					
ANR	2408728	CompoundStatement		383:59:13641:13852	2408726	0					
ANR	2408729	IdentifierDeclStatement	short positionOfFirstZero = length - 1 ;	384:2:13645:13683	2408726	0	True				
ANR	2408730	IdentifierDecl	positionOfFirstZero = length - 1		2408726	0					
ANR	2408731	IdentifierDeclType	short		2408726	0					
ANR	2408732	Identifier	positionOfFirstZero		2408726	1					
ANR	2408733	AssignmentExpression	positionOfFirstZero = length - 1		2408726	2		=			
ANR	2408734	Identifier	positionOfFirstZero		2408726	0					
ANR	2408735	AdditiveExpression	length - 1		2408726	1		-			
ANR	2408736	Identifier	length		2408726	0					
ANR	2408737	PrimaryExpression	1		2408726	1					
ANR	2408738	WhileStatement	while ( positionOfFirstZero > 0 )		2408726	1					
ANR	2408739	Condition	positionOfFirstZero > 0	385:9:13694:13716	2408726	0	True				
ANR	2408740	RelationalExpression	positionOfFirstZero > 0		2408726	0		>			
ANR	2408741	Identifier	positionOfFirstZero		2408726	0					
ANR	2408742	PrimaryExpression	0		2408726	1					
ANR	2408743	CompoundStatement		3:34:77:77	2408726	1					
ANR	2408744	IfStatement	if ( line [ positionOfFirstZero ] != 0 )		2408726	0					
ANR	2408745	Condition	line [ positionOfFirstZero ] != 0	386:8:13729:13758	2408726	0	True				
ANR	2408746	EqualityExpression	line [ positionOfFirstZero ] != 0		2408726	0		!=			
ANR	2408747	ArrayIndexing	line [ positionOfFirstZero ]		2408726	0					
ANR	2408748	Identifier	line		2408726	0					
ANR	2408749	Identifier	positionOfFirstZero		2408726	1					
ANR	2408750	PrimaryExpression	0		2408726	1					
ANR	2408751	CompoundStatement		4:40:119:119	2408726	1					
ANR	2408752	ReturnStatement	return positionOfFirstZero + 1 ;	387:6:13769:13799	2408726	0	True				
ANR	2408753	AdditiveExpression	positionOfFirstZero + 1		2408726	0		+			
ANR	2408754	Identifier	positionOfFirstZero		2408726	0					
ANR	2408755	PrimaryExpression	1		2408726	1					
ANR	2408756	ExpressionStatement	positionOfFirstZero --	389:4:13811:13834	2408726	1	True				
ANR	2408757	PostIncDecOperationExpression	positionOfFirstZero --		2408726	0					
ANR	2408758	Identifier	positionOfFirstZero		2408726	0					
ANR	2408759	IncDec	--		2408726	1					
ANR	2408760	ReturnStatement	return 0 ;	391:2:13842:13850	2408726	2	True				
ANR	2408761	PrimaryExpression	0		2408726	0					
ANR	2408762	ReturnType	static short		2408726	1					
ANR	2408763	Identifier	stripTrailingBlanks		2408726	2					
ANR	2408764	ParameterList	"Byte * line , short length"		2408726	3					
ANR	2408765	Parameter	Byte * line	383:33:13615:13625	2408726	0	True				
ANR	2408766	ParameterType	Byte *		2408726	0					
ANR	2408767	Identifier	line		2408726	1					
ANR	2408768	Parameter	short length	383:46:13628:13639	2408726	1	True				
ANR	2408769	ParameterType	short		2408726	0					
ANR	2408770	Identifier	length		2408726	1					
ANR	2408771	CFGEntryNode	ENTRY		2408726		True				
ANR	2408772	CFGExitNode	EXIT		2408726		True				
ANR	2408773	Symbol	* positionOfFirstZero		2408726						
ANR	2408774	Symbol	line		2408726						
ANR	2408775	Symbol	length		2408726						
ANR	2408776	Symbol	positionOfFirstZero		2408726						
ANR	2408777	Symbol	* line		2408726						
ANR	2408778	Function	horizontalOffset	406:0:14367:14589							
ANR	2408779	FunctionDef	"horizontalOffset (short pixWidth , short pixOffset , short resolution)"		2408778	0					
ANR	2408780	CompoundStatement		408:47:14507:14589	2408778	0					
ANR	2408781	ReturnStatement	return ( ( ( LETTER_WIDTH * resolution / 600 - pixWidth ) + pixOffset * 2 ) + 7 ) / 8 ;	409:0:14509:14586	2408778	0	True				
ANR	2408782	MultiplicativeExpression	( ( ( LETTER_WIDTH * resolution / 600 - pixWidth ) + pixOffset * 2 ) + 7 ) / 8		2408778	0		/			
ANR	2408783	AdditiveExpression	( ( LETTER_WIDTH * resolution / 600 - pixWidth ) + pixOffset * 2 ) + 7		2408778	0		+			
ANR	2408784	AdditiveExpression	( LETTER_WIDTH * resolution / 600 - pixWidth ) + pixOffset * 2		2408778	0		+			
ANR	2408785	AdditiveExpression	LETTER_WIDTH * resolution / 600 - pixWidth		2408778	0		-			
ANR	2408786	MultiplicativeExpression	LETTER_WIDTH * resolution / 600		2408778	0		*			
ANR	2408787	Identifier	LETTER_WIDTH		2408778	0					
ANR	2408788	MultiplicativeExpression	resolution / 600		2408778	1		/			
ANR	2408789	Identifier	resolution		2408778	0					
ANR	2408790	PrimaryExpression	600		2408778	1					
ANR	2408791	Identifier	pixWidth		2408778	1					
ANR	2408792	MultiplicativeExpression	pixOffset * 2		2408778	1		*			
ANR	2408793	Identifier	pixOffset		2408778	0					
ANR	2408794	PrimaryExpression	2		2408778	1					
ANR	2408795	PrimaryExpression	7		2408778	1					
ANR	2408796	PrimaryExpression	8		2408778	1					
ANR	2408797	ReturnType	static short		2408778	1					
ANR	2408798	Identifier	horizontalOffset		2408778	2					
ANR	2408799	ParameterList	"short pixWidth , short pixOffset , short resolution"		2408778	3					
ANR	2408800	Parameter	short pixWidth	406:30:14397:14410	2408778	0	True				
ANR	2408801	ParameterType	short		2408778	0					
ANR	2408802	Identifier	pixWidth		2408778	1					
ANR	2408803	Parameter	short pixOffset	407:30:14443:14457	2408778	1	True				
ANR	2408804	ParameterType	short		2408778	0					
ANR	2408805	Identifier	pixOffset		2408778	1					
ANR	2408806	Parameter	short resolution	408:30:14490:14505	2408778	2	True				
ANR	2408807	ParameterType	short		2408778	0					
ANR	2408808	Identifier	resolution		2408778	1					
ANR	2408809	CFGEntryNode	ENTRY		2408778		True				
ANR	2408810	CFGExitNode	EXIT		2408778		True				
ANR	2408811	Symbol	pixWidth		2408778						
ANR	2408812	Symbol	pixOffset		2408778						
ANR	2408813	Symbol	LETTER_WIDTH		2408778						
ANR	2408814	Symbol	resolution		2408778						
ANR	2408815	Function	initSummary	416:0:14628:14937							
ANR	2408816	FunctionDef	"initSummary (Summary * s , short pw , short ph , short resolution)"		2408815	0					
ANR	2408817	CompoundStatement		416:73:14701:14937	2408815	0					
ANR	2408818	ExpressionStatement	s -> previousSize = - 1	417:2:14705:14726	2408815	0	True				
ANR	2408819	AssignmentExpression	s -> previousSize = - 1		2408815	0		=			
ANR	2408820	PtrMemberAccess	s -> previousSize		2408815	0					
ANR	2408821	Identifier	s		2408815	0					
ANR	2408822	Identifier	previousSize		2408815	1					
ANR	2408823	UnaryOperationExpression	- 1		2408815	1					
ANR	2408824	UnaryOperator	-		2408815	0					
ANR	2408825	PrimaryExpression	1		2408815	1					
ANR	2408826	ExpressionStatement	s -> nbBlankLines = 1	418:2:14730:14749	2408815	1	True				
ANR	2408827	AssignmentExpression	s -> nbBlankLines = 1		2408815	0		=			
ANR	2408828	PtrMemberAccess	s -> nbBlankLines		2408815	0					
ANR	2408829	Identifier	s		2408815	0					
ANR	2408830	Identifier	nbBlankLines		2408815	1					
ANR	2408831	PrimaryExpression	1		2408815	1					
ANR	2408832	ExpressionStatement	s -> nbLinesSent = 0	419:2:14753:14771	2408815	2	True				
ANR	2408833	AssignmentExpression	s -> nbLinesSent = 0		2408815	0		=			
ANR	2408834	PtrMemberAccess	s -> nbLinesSent		2408815	0					
ANR	2408835	Identifier	s		2408815	0					
ANR	2408836	Identifier	nbLinesSent		2408815	1					
ANR	2408837	PrimaryExpression	0		2408815	1					
ANR	2408838	ExpressionStatement	s -> pageWidth = pw	420:2:14775:14792	2408815	3	True				
ANR	2408839	AssignmentExpression	s -> pageWidth = pw		2408815	0		=			
ANR	2408840	PtrMemberAccess	s -> pageWidth		2408815	0					
ANR	2408841	Identifier	s		2408815	0					
ANR	2408842	Identifier	pageWidth		2408815	1					
ANR	2408843	Identifier	pw		2408815	1					
ANR	2408844	ExpressionStatement	s -> pageHeight = ph	421:2:14811:14829	2408815	4	True				
ANR	2408845	AssignmentExpression	s -> pageHeight = ph		2408815	0		=			
ANR	2408846	PtrMemberAccess	s -> pageHeight		2408815	0					
ANR	2408847	Identifier	s		2408815	0					
ANR	2408848	Identifier	pageHeight		2408815	1					
ANR	2408849	Identifier	ph		2408815	1					
ANR	2408850	ExpressionStatement	"s -> horizontalOffset = horizontalOffset ( pw * 8 , LEFT_MARGIN , resolution )"	422:2:14833:14905	2408815	5	True				
ANR	2408851	AssignmentExpression	"s -> horizontalOffset = horizontalOffset ( pw * 8 , LEFT_MARGIN , resolution )"		2408815	0		=			
ANR	2408852	PtrMemberAccess	s -> horizontalOffset		2408815	0					
ANR	2408853	Identifier	s		2408815	0					
ANR	2408854	Identifier	horizontalOffset		2408815	1					
ANR	2408855	CallExpression	"horizontalOffset ( pw * 8 , LEFT_MARGIN , resolution )"		2408815	1					
ANR	2408856	Callee	horizontalOffset		2408815	0					
ANR	2408857	Identifier	horizontalOffset		2408815	0					
ANR	2408858	ArgumentList	pw * 8		2408815	1					
ANR	2408859	Argument	pw * 8		2408815	0					
ANR	2408860	MultiplicativeExpression	pw * 8		2408815	0		*			
ANR	2408861	Identifier	pw		2408815	0					
ANR	2408862	PrimaryExpression	8		2408815	1					
ANR	2408863	Argument	LEFT_MARGIN		2408815	1					
ANR	2408864	Identifier	LEFT_MARGIN		2408815	0					
ANR	2408865	Argument	resolution		2408815	2					
ANR	2408866	Identifier	resolution		2408815	0					
ANR	2408867	ExpressionStatement	s -> resolution = resolution	423:2:14909:14935	2408815	6	True				
ANR	2408868	AssignmentExpression	s -> resolution = resolution		2408815	0		=			
ANR	2408869	PtrMemberAccess	s -> resolution		2408815	0					
ANR	2408870	Identifier	s		2408815	0					
ANR	2408871	Identifier	resolution		2408815	1					
ANR	2408872	Identifier	resolution		2408815	1					
ANR	2408873	ReturnType	static void		2408815	1					
ANR	2408874	Identifier	initSummary		2408815	2					
ANR	2408875	ParameterList	"Summary * s , short pw , short ph , short resolution"		2408815	3					
ANR	2408876	Parameter	Summary * s	416:24:14652:14662	2408815	0	True				
ANR	2408877	ParameterType	Summary *		2408815	0					
ANR	2408878	Identifier	s		2408815	1					
ANR	2408879	Parameter	short pw	416:36:14664:14671	2408815	1	True				
ANR	2408880	ParameterType	short		2408815	0					
ANR	2408881	Identifier	pw		2408815	1					
ANR	2408882	Parameter	short ph	416:46:14674:14681	2408815	2	True				
ANR	2408883	ParameterType	short		2408815	0					
ANR	2408884	Identifier	ph		2408815	1					
ANR	2408885	Parameter	short resolution	416:56:14684:14699	2408815	3	True				
ANR	2408886	ParameterType	short		2408815	0					
ANR	2408887	Identifier	resolution		2408815	1					
ANR	2408888	CFGEntryNode	ENTRY		2408815		True				
ANR	2408889	CFGExitNode	EXIT		2408815		True				
ANR	2408890	Symbol	s -> previousSize		2408815						
ANR	2408891	Symbol	s -> resolution		2408815						
ANR	2408892	Symbol	pw		2408815						
ANR	2408893	Symbol	resolution		2408815						
ANR	2408894	Symbol	horizontalOffset		2408815						
ANR	2408895	Symbol	s -> nbLinesSent		2408815						
ANR	2408896	Symbol	s -> pageHeight		2408815						
ANR	2408897	Symbol	s		2408815						
ANR	2408898	Symbol	s -> pageWidth		2408815						
ANR	2408899	Symbol	s -> horizontalOffset		2408815						
ANR	2408900	Symbol	ph		2408815						
ANR	2408901	Symbol	s -> nbBlankLines		2408815						
ANR	2408902	Symbol	* s		2408815						
ANR	2408903	Symbol	LEFT_MARGIN		2408815						
ANR	2408904	Function	resetPreviousData	429:0:15023:15108							
ANR	2408905	FunctionDef	resetPreviousData (Summary * s)		2408904	0					
ANR	2408906	CompoundStatement		429:42:15065:15108	2408904	0					
ANR	2408907	ExpressionStatement	"memset ( s -> previousData , 0 , s -> pageWidth )"	430:1:15068:15106	2408904	0	True				
ANR	2408908	CallExpression	"memset ( s -> previousData , 0 , s -> pageWidth )"		2408904	0					
ANR	2408909	Callee	memset		2408904	0					
ANR	2408910	Identifier	memset		2408904	0					
ANR	2408911	ArgumentList	s -> previousData		2408904	1					
ANR	2408912	Argument	s -> previousData		2408904	0					
ANR	2408913	PtrMemberAccess	s -> previousData		2408904	0					
ANR	2408914	Identifier	s		2408904	0					
ANR	2408915	Identifier	previousData		2408904	1					
ANR	2408916	Argument	0		2408904	1					
ANR	2408917	PrimaryExpression	0		2408904	0					
ANR	2408918	Argument	s -> pageWidth		2408904	2					
ANR	2408919	PtrMemberAccess	s -> pageWidth		2408904	0					
ANR	2408920	Identifier	s		2408904	0					
ANR	2408921	Identifier	pageWidth		2408904	1					
ANR	2408922	ReturnType	static void		2408904	1					
ANR	2408923	Identifier	resetPreviousData		2408904	2					
ANR	2408924	ParameterList	Summary * s		2408904	3					
ANR	2408925	Parameter	Summary * s	429:30:15053:15063	2408904	0	True				
ANR	2408926	ParameterType	Summary *		2408904	0					
ANR	2408927	Identifier	s		2408904	1					
ANR	2408928	CFGEntryNode	ENTRY		2408904		True				
ANR	2408929	CFGExitNode	EXIT		2408904		True				
ANR	2408930	Symbol	s -> previousData		2408904						
ANR	2408931	Symbol	s		2408904						
ANR	2408932	Symbol	s -> pageWidth		2408904						
ANR	2408933	Symbol	* s		2408904						
ANR	2408934	Function	dumpPage	437:0:15135:18965							
ANR	2408935	FunctionDef	"dumpPage (gx_device_printer * pSource , Byte * pLineTmp , ByteList * pCommandList , Summary * pSummary)"		2408934	0					
ANR	2408936	CompoundStatement		441:23:15366:18965	2408934	0					
ANR	2408937	IdentifierDeclStatement	Byte * pSaveCommandStart ;	444:2:15392:15416	2408934	0	True				
ANR	2408938	IdentifierDecl	* pSaveCommandStart		2408934	0					
ANR	2408939	IdentifierDeclType	Byte *		2408934	0					
ANR	2408940	Identifier	pSaveCommandStart		2408934	1					
ANR	2408941	IdentifierDeclStatement	short lineNB ;	445:2:15420:15433	2408934	1	True				
ANR	2408942	IdentifierDecl	lineNB		2408934	0					
ANR	2408943	IdentifierDeclType	short		2408934	0					
ANR	2408944	Identifier	lineNB		2408934	1					
ANR	2408945	IdentifierDeclStatement	short usefulLength ;	446:2:15437:15455	2408934	2	True				
ANR	2408946	IdentifierDecl	usefulLength		2408934	0					
ANR	2408947	IdentifierDeclType	short		2408934	0					
ANR	2408948	Identifier	usefulLength		2408934	1					
ANR	2408949	IdentifierDeclStatement	short tmpLength ;	447:2:15459:15474	2408934	3	True				
ANR	2408950	IdentifierDecl	tmpLength		2408934	0					
ANR	2408951	IdentifierDeclType	short		2408934	0					
ANR	2408952	Identifier	tmpLength		2408934	1					
ANR	2408953	ExpressionStatement	pSaveCommandStart = currentPosition ( pCommandList )	450:2:15548:15597	2408934	4	True				
ANR	2408954	AssignmentExpression	pSaveCommandStart = currentPosition ( pCommandList )		2408934	0		=			
ANR	2408955	Identifier	pSaveCommandStart		2408934	0					
ANR	2408956	CallExpression	currentPosition ( pCommandList )		2408934	1					
ANR	2408957	Callee	currentPosition		2408934	0					
ANR	2408958	Identifier	currentPosition		2408934	0					
ANR	2408959	ArgumentList	pCommandList		2408934	1					
ANR	2408960	Argument	pCommandList		2408934	0					
ANR	2408961	Identifier	pCommandList		2408934	0					
ANR	2408962	ExpressionStatement	"addNBytes ( pCommandList , 0 , HL7X0_LENGTH )"	451:2:15601:15639	2408934	5	True				
ANR	2408963	CallExpression	"addNBytes ( pCommandList , 0 , HL7X0_LENGTH )"		2408934	0					
ANR	2408964	Callee	addNBytes		2408934	0					
ANR	2408965	Identifier	addNBytes		2408934	0					
ANR	2408966	ArgumentList	pCommandList		2408934	1					
ANR	2408967	Argument	pCommandList		2408934	0					
ANR	2408968	Identifier	pCommandList		2408934	0					
ANR	2408969	Argument	0		2408934	1					
ANR	2408970	PrimaryExpression	0		2408934	0					
ANR	2408971	Argument	HL7X0_LENGTH		2408934	2					
ANR	2408972	Identifier	HL7X0_LENGTH		2408934	0					
ANR	2408973	ForStatement	for ( lineNB = pSummary -> nbLinesSent ; lineNB < pSummary -> pageHeight ; lineNB ++ )		2408934	6					
ANR	2408974	ForInit	lineNB = pSummary -> nbLinesSent ;	454:7:15746:15804	2408934	0	True				
ANR	2408975	AssignmentExpression	lineNB = pSummary -> nbLinesSent		2408934	0		=			
ANR	2408976	Identifier	lineNB		2408934	0					
ANR	2408977	PtrMemberAccess	pSummary -> nbLinesSent		2408934	1					
ANR	2408978	Identifier	pSummary		2408934	0					
ANR	2408979	Identifier	nbLinesSent		2408934	1					
ANR	2408980	Condition	lineNB < pSummary -> pageHeight	455:7:15813:15841	2408934	1	True				
ANR	2408981	RelationalExpression	lineNB < pSummary -> pageHeight		2408934	0		<			
ANR	2408982	Identifier	lineNB		2408934	0					
ANR	2408983	PtrMemberAccess	pSummary -> pageHeight		2408934	1					
ANR	2408984	Identifier	pSummary		2408934	0					
ANR	2408985	Identifier	pageHeight		2408934	1					
ANR	2408986	PostIncDecOperationExpression	lineNB ++	455:39:15845:15853	2408934	2	True				
ANR	2408987	Identifier	lineNB		2408934	0					
ANR	2408988	IncDec	++		2408934	1					
ANR	2408989	CompoundStatement		15:51:490:490	2408934	3					
ANR	2408990	ExpressionStatement	"gdev_prn_copy_scan_lines ( pSource , lineNB , pLineTmp , pSummary -> pageWidth )"	457:4:15915:16074	2408934	0	True				
ANR	2408991	CallExpression	"gdev_prn_copy_scan_lines ( pSource , lineNB , pLineTmp , pSummary -> pageWidth )"		2408934	0					
ANR	2408992	Callee	gdev_prn_copy_scan_lines		2408934	0					
ANR	2408993	Identifier	gdev_prn_copy_scan_lines		2408934	0					
ANR	2408994	ArgumentList	pSource		2408934	1					
ANR	2408995	Argument	pSource		2408934	0					
ANR	2408996	Identifier	pSource		2408934	0					
ANR	2408997	Argument	lineNB		2408934	1					
ANR	2408998	Identifier	lineNB		2408934	0					
ANR	2408999	Argument	pLineTmp		2408934	2					
ANR	2409000	Identifier	pLineTmp		2408934	0					
ANR	2409001	Argument	pSummary -> pageWidth		2408934	3					
ANR	2409002	PtrMemberAccess	pSummary -> pageWidth		2408934	0					
ANR	2409003	Identifier	pSummary		2408934	0					
ANR	2409004	Identifier	pageWidth		2408934	1					
ANR	2409005	ExpressionStatement	"usefulLength = stripTrailingBlanks ( pLineTmp , pSummary -> pageWidth )"	462:4:16081:16146	2408934	1	True				
ANR	2409006	AssignmentExpression	"usefulLength = stripTrailingBlanks ( pLineTmp , pSummary -> pageWidth )"		2408934	0		=			
ANR	2409007	Identifier	usefulLength		2408934	0					
ANR	2409008	CallExpression	"stripTrailingBlanks ( pLineTmp , pSummary -> pageWidth )"		2408934	1					
ANR	2409009	Callee	stripTrailingBlanks		2408934	0					
ANR	2409010	Identifier	stripTrailingBlanks		2408934	0					
ANR	2409011	ArgumentList	pLineTmp		2408934	1					
ANR	2409012	Argument	pLineTmp		2408934	0					
ANR	2409013	Identifier	pLineTmp		2408934	0					
ANR	2409014	Argument	pSummary -> pageWidth		2408934	1					
ANR	2409015	PtrMemberAccess	pSummary -> pageWidth		2408934	0					
ANR	2409016	Identifier	pSummary		2408934	0					
ANR	2409017	Identifier	pageWidth		2408934	1					
ANR	2409018	IfStatement	if ( usefulLength != 0 )		2408934	2					
ANR	2409019	Condition	usefulLength != 0	463:8:16156:16172	2408934	0	True				
ANR	2409020	EqualityExpression	usefulLength != 0		2408934	0		!=			
ANR	2409021	Identifier	usefulLength		2408934	0					
ANR	2409022	PrimaryExpression	0		2408934	1					
ANR	2409023	CompoundStatement		23:27:808:808	2408934	1					
ANR	2409024	IfStatement	if ( pSummary -> nbBlankLines != 0 )		2408934	0					
ANR	2409025	Condition	pSummary -> nbBlankLines != 0	467:10:16271:16297	2408934	0	True				
ANR	2409026	EqualityExpression	pSummary -> nbBlankLines != 0		2408934	0		!=			
ANR	2409027	PtrMemberAccess	pSummary -> nbBlankLines		2408934	0					
ANR	2409028	Identifier	pSummary		2408934	0					
ANR	2409029	Identifier	nbBlankLines		2408934	1					
ANR	2409030	PrimaryExpression	0		2408934	1					
ANR	2409031	CompoundStatement		27:39:933:933	2408934	1					
ANR	2409032	IfStatement	"if ( isThereEnoughRoom ( pCommandList , pSummary -> nbBlankLines ) )"		2408934	0					
ANR	2409033	Condition	"isThereEnoughRoom ( pCommandList , pSummary -> nbBlankLines )"	468:13:16315:16371	2408934	0	True				
ANR	2409034	CallExpression	"isThereEnoughRoom ( pCommandList , pSummary -> nbBlankLines )"		2408934	0					
ANR	2409035	Callee	isThereEnoughRoom		2408934	0					
ANR	2409036	Identifier	isThereEnoughRoom		2408934	0					
ANR	2409037	ArgumentList	pCommandList		2408934	1					
ANR	2409038	Argument	pCommandList		2408934	0					
ANR	2409039	Identifier	pCommandList		2408934	0					
ANR	2409040	Argument	pSummary -> nbBlankLines		2408934	1					
ANR	2409041	PtrMemberAccess	pSummary -> nbBlankLines		2408934	0					
ANR	2409042	Identifier	pSummary		2408934	0					
ANR	2409043	Identifier	nbBlankLines		2408934	1					
ANR	2409044	CompoundStatement		28:75:1010:1010	2408934	1					
ANR	2409045	ExpressionStatement	"addNBytes ( pCommandList , 0xff , pSummary -> nbBlankLines )"	470:10:16390:16441	2408934	0	True				
ANR	2409046	CallExpression	"addNBytes ( pCommandList , 0xff , pSummary -> nbBlankLines )"		2408934	0					
ANR	2409047	Callee	addNBytes		2408934	0					
ANR	2409048	Identifier	addNBytes		2408934	0					
ANR	2409049	ArgumentList	pCommandList		2408934	1					
ANR	2409050	Argument	pCommandList		2408934	0					
ANR	2409051	Identifier	pCommandList		2408934	0					
ANR	2409052	Argument	0xff		2408934	1					
ANR	2409053	PrimaryExpression	0xff		2408934	0					
ANR	2409054	Argument	pSummary -> nbBlankLines		2408934	2					
ANR	2409055	PtrMemberAccess	pSummary -> nbBlankLines		2408934	0					
ANR	2409056	Identifier	pSummary		2408934	0					
ANR	2409057	Identifier	nbBlankLines		2408934	1					
ANR	2409058	ExpressionStatement	pSummary -> nbBlankLines = 0	471:10:16453:16479	2408934	1	True				
ANR	2409059	AssignmentExpression	pSummary -> nbBlankLines = 0		2408934	0		=			
ANR	2409060	PtrMemberAccess	pSummary -> nbBlankLines		2408934	0					
ANR	2409061	Identifier	pSummary		2408934	0					
ANR	2409062	Identifier	nbBlankLines		2408934	1					
ANR	2409063	PrimaryExpression	0		2408934	1					
ANR	2409064	ElseStatement	else		2408934	0					
ANR	2409065	CompoundStatement		36:10:1151:1195	2408934	0					
ANR	2409066	IdentifierDeclStatement	short availableRoom = roomLeft ( pCommandList ) ;	476:10:16518:16562	2408934	0	True				
ANR	2409067	IdentifierDecl	availableRoom = roomLeft ( pCommandList )		2408934	0					
ANR	2409068	IdentifierDeclType	short		2408934	0					
ANR	2409069	Identifier	availableRoom		2408934	1					
ANR	2409070	AssignmentExpression	availableRoom = roomLeft ( pCommandList )		2408934	2		=			
ANR	2409071	Identifier	availableRoom		2408934	0					
ANR	2409072	CallExpression	roomLeft ( pCommandList )		2408934	1					
ANR	2409073	Callee	roomLeft		2408934	0					
ANR	2409074	Identifier	roomLeft		2408934	0					
ANR	2409075	ArgumentList	pCommandList		2408934	1					
ANR	2409076	Argument	pCommandList		2408934	0					
ANR	2409077	Identifier	pCommandList		2408934	0					
ANR	2409078	ExpressionStatement	"addNBytes ( pCommandList , 0xff , availableRoom )"	477:10:16574:16616	2408934	1	True				
ANR	2409079	CallExpression	"addNBytes ( pCommandList , 0xff , availableRoom )"		2408934	0					
ANR	2409080	Callee	addNBytes		2408934	0					
ANR	2409081	Identifier	addNBytes		2408934	0					
ANR	2409082	ArgumentList	pCommandList		2408934	1					
ANR	2409083	Argument	pCommandList		2408934	0					
ANR	2409084	Identifier	pCommandList		2408934	0					
ANR	2409085	Argument	0xff		2408934	1					
ANR	2409086	PrimaryExpression	0xff		2408934	0					
ANR	2409087	Argument	availableRoom		2408934	2					
ANR	2409088	Identifier	availableRoom		2408934	0					
ANR	2409089	ExpressionStatement	pSummary -> nbBlankLines -= availableRoom	478:10:16628:16667	2408934	2	True				
ANR	2409090	AssignmentExpression	pSummary -> nbBlankLines -= availableRoom		2408934	0		-=			
ANR	2409091	PtrMemberAccess	pSummary -> nbBlankLines		2408934	0					
ANR	2409092	Identifier	pSummary		2408934	0					
ANR	2409093	Identifier	nbBlankLines		2408934	1					
ANR	2409094	Identifier	availableRoom		2408934	1					
ANR	2409095	BreakStatement	break ;	480:10:16680:16686	2408934	3	True				
ANR	2409096	ExpressionStatement	resetPreviousData ( pSummary )	484:8:16735:16762	2408934	1	True				
ANR	2409097	CallExpression	resetPreviousData ( pSummary )		2408934	0					
ANR	2409098	Callee	resetPreviousData		2408934	0					
ANR	2409099	Identifier	resetPreviousData		2408934	0					
ANR	2409100	ArgumentList	pSummary		2408934	1					
ANR	2409101	Argument	pSummary		2408934	0					
ANR	2409102	Identifier	pSummary		2408934	0					
ANR	2409103	ExpressionStatement	pSummary -> previousSize = 0	485:8:16827:16853	2408934	2	True				
ANR	2409104	AssignmentExpression	pSummary -> previousSize = 0		2408934	0		=			
ANR	2409105	PtrMemberAccess	pSummary -> previousSize		2408934	0					
ANR	2409106	Identifier	pSummary		2408934	0					
ANR	2409107	Identifier	previousSize		2408934	1					
ANR	2409108	PrimaryExpression	0		2408934	1					
ANR	2409109	IfStatement	"if ( ! isThereEnoughRoom ( pCommandList , MaxLineLength ( pSummary -> resolution ) ) )"		2408934	1					
ANR	2409110	Condition	"! isThereEnoughRoom ( pCommandList , MaxLineLength ( pSummary -> resolution ) )"	490:10:16948:17015	2408934	0	True				
ANR	2409111	UnaryOperationExpression	"! isThereEnoughRoom ( pCommandList , MaxLineLength ( pSummary -> resolution ) )"		2408934	0					
ANR	2409112	UnaryOperator	!		2408934	0					
ANR	2409113	CallExpression	"isThereEnoughRoom ( pCommandList , MaxLineLength ( pSummary -> resolution ) )"		2408934	1					
ANR	2409114	Callee	isThereEnoughRoom		2408934	0					
ANR	2409115	Identifier	isThereEnoughRoom		2408934	0					
ANR	2409116	ArgumentList	pCommandList		2408934	1					
ANR	2409117	Argument	pCommandList		2408934	0					
ANR	2409118	Identifier	pCommandList		2408934	0					
ANR	2409119	Argument	MaxLineLength ( pSummary -> resolution )		2408934	1					
ANR	2409120	CallExpression	MaxLineLength ( pSummary -> resolution )		2408934	0					
ANR	2409121	Callee	MaxLineLength		2408934	0					
ANR	2409122	Identifier	MaxLineLength		2408934	0					
ANR	2409123	ArgumentList	pSummary -> resolution		2408934	1					
ANR	2409124	Argument	pSummary -> resolution		2408934	0					
ANR	2409125	PtrMemberAccess	pSummary -> resolution		2408934	0					
ANR	2409126	Identifier	pSummary		2408934	0					
ANR	2409127	Identifier	resolution		2408934	1					
ANR	2409128	CompoundStatement		50:79:1650:1650	2408934	1					
ANR	2409129	BreakStatement	break ;	491:8:17027:17032	2408934	0	True				
ANR	2409130	IfStatement	if ( pSummary -> previousSize > usefulLength )		2408934	2					
ANR	2409131	Condition	pSummary -> previousSize > usefulLength	494:10:17084:17120	2408934	0	True				
ANR	2409132	RelationalExpression	pSummary -> previousSize > usefulLength		2408934	0		>			
ANR	2409133	PtrMemberAccess	pSummary -> previousSize		2408934	0					
ANR	2409134	Identifier	pSummary		2408934	0					
ANR	2409135	Identifier	previousSize		2408934	1					
ANR	2409136	Identifier	usefulLength		2408934	1					
ANR	2409137	CompoundStatement		54:48:1755:1755	2408934	1					
ANR	2409138	ExpressionStatement	tmpLength = pSummary -> previousSize	495:8:17132:17166	2408934	0	True				
ANR	2409139	AssignmentExpression	tmpLength = pSummary -> previousSize		2408934	0		=			
ANR	2409140	Identifier	tmpLength		2408934	0					
ANR	2409141	PtrMemberAccess	pSummary -> previousSize		2408934	1					
ANR	2409142	Identifier	pSummary		2408934	0					
ANR	2409143	Identifier	previousSize		2408934	1					
ANR	2409144	ElseStatement	else		2408934	0					
ANR	2409145	CompoundStatement		57:11:1820:1820	2408934	0					
ANR	2409146	ExpressionStatement	tmpLength = usefulLength	498:8:17197:17221	2408934	0	True				
ANR	2409147	AssignmentExpression	tmpLength = usefulLength		2408934	0		=			
ANR	2409148	Identifier	tmpLength		2408934	0					
ANR	2409149	Identifier	usefulLength		2408934	1					
ANR	2409150	IfStatement	if ( pSummary -> previousSize == - 1 )		2408934	3					
ANR	2409151	Condition	pSummary -> previousSize == - 1	501:10:17242:17269	2408934	0	True				
ANR	2409152	EqualityExpression	pSummary -> previousSize == - 1		2408934	0		==			
ANR	2409153	PtrMemberAccess	pSummary -> previousSize		2408934	0					
ANR	2409154	Identifier	pSummary		2408934	0					
ANR	2409155	Identifier	previousSize		2408934	1					
ANR	2409156	UnaryOperationExpression	- 1		2408934	1					
ANR	2409157	UnaryOperator	-		2408934	0					
ANR	2409158	PrimaryExpression	1		2408934	1					
ANR	2409159	CompoundStatement		63:8:1945:1987	2408934	1					
ANR	2409160	IdentifierDeclStatement	Byte * save = currentPosition ( pCommandList ) ;	503:8:17312:17354	2408934	0	True				
ANR	2409161	IdentifierDecl	* save = currentPosition ( pCommandList )		2408934	0					
ANR	2409162	IdentifierDeclType	Byte *		2408934	0					
ANR	2409163	Identifier	save		2408934	1					
ANR	2409164	AssignmentExpression	* save = currentPosition ( pCommandList )		2408934	2		=			
ANR	2409165	Identifier	save		2408934	0					
ANR	2409166	CallExpression	currentPosition ( pCommandList )		2408934	1					
ANR	2409167	Callee	currentPosition		2408934	0					
ANR	2409168	Identifier	currentPosition		2408934	0					
ANR	2409169	ArgumentList	pCommandList		2408934	1					
ANR	2409170	Argument	pCommandList		2408934	0					
ANR	2409171	Identifier	pCommandList		2408934	0					
ANR	2409172	ExpressionStatement	"addByte ( pCommandList , 0 )"	504:8:17364:17387	2408934	1	True				
ANR	2409173	CallExpression	"addByte ( pCommandList , 0 )"		2408934	0					
ANR	2409174	Callee	addByte		2408934	0					
ANR	2409175	Identifier	addByte		2408934	0					
ANR	2409176	ArgumentList	pCommandList		2408934	1					
ANR	2409177	Argument	pCommandList		2408934	0					
ANR	2409178	Identifier	pCommandList		2408934	0					
ANR	2409179	Argument	0		2408934	1					
ANR	2409180	PrimaryExpression	0		2408934	0					
ANR	2409181	ExpressionStatement	"makeCommandsForSequence ( pLineTmp , tmpLength , pCommandList , pSummary -> horizontalOffset , save , 0 )"	506:8:17440:17695	2408934	2	True				
ANR	2409182	CallExpression	"makeCommandsForSequence ( pLineTmp , tmpLength , pCommandList , pSummary -> horizontalOffset , save , 0 )"		2408934	0					
ANR	2409183	Callee	makeCommandsForSequence		2408934	0					
ANR	2409184	Identifier	makeCommandsForSequence		2408934	0					
ANR	2409185	ArgumentList	pLineTmp		2408934	1					
ANR	2409186	Argument	pLineTmp		2408934	0					
ANR	2409187	Identifier	pLineTmp		2408934	0					
ANR	2409188	Argument	tmpLength		2408934	1					
ANR	2409189	Identifier	tmpLength		2408934	0					
ANR	2409190	Argument	pCommandList		2408934	2					
ANR	2409191	Identifier	pCommandList		2408934	0					
ANR	2409192	Argument	pSummary -> horizontalOffset		2408934	3					
ANR	2409193	PtrMemberAccess	pSummary -> horizontalOffset		2408934	0					
ANR	2409194	Identifier	pSummary		2408934	0					
ANR	2409195	Identifier	horizontalOffset		2408934	1					
ANR	2409196	Argument	save		2408934	4					
ANR	2409197	Identifier	save		2408934	0					
ANR	2409198	Argument	0		2408934	5					
ANR	2409199	PrimaryExpression	0		2408934	0					
ANR	2409200	ElseStatement	else		2408934	0					
ANR	2409201	CompoundStatement		73:11:2349:2349	2408934	0					
ANR	2409202	ExpressionStatement	"makeFullLine ( pLineTmp , pSummary -> previousData , tmpLength , pCommandList , pSummary -> horizontalOffset )"	515:8:17757:17940	2408934	0	True				
ANR	2409203	CallExpression	"makeFullLine ( pLineTmp , pSummary -> previousData , tmpLength , pCommandList , pSummary -> horizontalOffset )"		2408934	0					
ANR	2409204	Callee	makeFullLine		2408934	0					
ANR	2409205	Identifier	makeFullLine		2408934	0					
ANR	2409206	ArgumentList	pLineTmp		2408934	1					
ANR	2409207	Argument	pLineTmp		2408934	0					
ANR	2409208	Identifier	pLineTmp		2408934	0					
ANR	2409209	Argument	pSummary -> previousData		2408934	1					
ANR	2409210	PtrMemberAccess	pSummary -> previousData		2408934	0					
ANR	2409211	Identifier	pSummary		2408934	0					
ANR	2409212	Identifier	previousData		2408934	1					
ANR	2409213	Argument	tmpLength		2408934	2					
ANR	2409214	Identifier	tmpLength		2408934	0					
ANR	2409215	Argument	pCommandList		2408934	3					
ANR	2409216	Identifier	pCommandList		2408934	0					
ANR	2409217	Argument	pSummary -> horizontalOffset		2408934	4					
ANR	2409218	PtrMemberAccess	pSummary -> horizontalOffset		2408934	0					
ANR	2409219	Identifier	pSummary		2408934	0					
ANR	2409220	Identifier	horizontalOffset		2408934	1					
ANR	2409221	ExpressionStatement	pSummary -> previousSize = tmpLength	522:6:18023:18057	2408934	4	True				
ANR	2409222	AssignmentExpression	pSummary -> previousSize = tmpLength		2408934	0		=			
ANR	2409223	PtrMemberAccess	pSummary -> previousSize		2408934	0					
ANR	2409224	Identifier	pSummary		2408934	0					
ANR	2409225	Identifier	previousSize		2408934	1					
ANR	2409226	Identifier	tmpLength		2408934	1					
ANR	2409227	ExpressionStatement	"memcpy ( pSummary -> previousData , pLineTmp , tmpLength )"	524:6:18148:18197	2408934	5	True				
ANR	2409228	CallExpression	"memcpy ( pSummary -> previousData , pLineTmp , tmpLength )"		2408934	0					
ANR	2409229	Callee	memcpy		2408934	0					
ANR	2409230	Identifier	memcpy		2408934	0					
ANR	2409231	ArgumentList	pSummary -> previousData		2408934	1					
ANR	2409232	Argument	pSummary -> previousData		2408934	0					
ANR	2409233	PtrMemberAccess	pSummary -> previousData		2408934	0					
ANR	2409234	Identifier	pSummary		2408934	0					
ANR	2409235	Identifier	previousData		2408934	1					
ANR	2409236	Argument	pLineTmp		2408934	1					
ANR	2409237	Identifier	pLineTmp		2408934	0					
ANR	2409238	Argument	tmpLength		2408934	2					
ANR	2409239	Identifier	tmpLength		2408934	0					
ANR	2409240	ElseStatement	else		2408934	0					
ANR	2409241	CompoundStatement		87:9:2848:2848	2408934	0					
ANR	2409242	ExpressionStatement	pSummary -> nbBlankLines ++	528:6:18255:18279	2408934	0	True				
ANR	2409243	PostIncDecOperationExpression	pSummary -> nbBlankLines ++		2408934	0					
ANR	2409244	PtrMemberAccess	pSummary -> nbBlankLines		2408934	0					
ANR	2409245	Identifier	pSummary		2408934	0					
ANR	2409246	Identifier	nbBlankLines		2408934	1					
ANR	2409247	IncDec	++		2408934	1					
ANR	2409248	ExpressionStatement	pSummary -> nbLinesSent ++	532:4:18318:18342	2408934	3	True				
ANR	2409249	PostIncDecOperationExpression	pSummary -> nbLinesSent ++		2408934	0					
ANR	2409250	PtrMemberAccess	pSummary -> nbLinesSent		2408934	0					
ANR	2409251	Identifier	pSummary		2408934	0					
ANR	2409252	Identifier	nbLinesSent		2408934	1					
ANR	2409253	IncDec	++		2408934	1					
ANR	2409254	IfStatement	if ( pCommandList -> current > HL7X0_LENGTH )		2408934	7					
ANR	2409255	Condition	pCommandList -> current > HL7X0_LENGTH	535:6:18355:18390	2408934	0	True				
ANR	2409256	RelationalExpression	pCommandList -> current > HL7X0_LENGTH		2408934	0		>			
ANR	2409257	PtrMemberAccess	pCommandList -> current		2408934	0					
ANR	2409258	Identifier	pCommandList		2408934	0					
ANR	2409259	Identifier	current		2408934	1					
ANR	2409260	Identifier	HL7X0_LENGTH		2408934	1					
ANR	2409261	CompoundStatement		96:4:3031:3080	2408934	1					
ANR	2409262	IdentifierDeclStatement	short size = pCommandList -> current - HL7X0_LENGTH ;	536:4:18398:18447	2408934	0	True				
ANR	2409263	IdentifierDecl	size = pCommandList -> current - HL7X0_LENGTH		2408934	0					
ANR	2409264	IdentifierDeclType	short		2408934	0					
ANR	2409265	Identifier	size		2408934	1					
ANR	2409266	AssignmentExpression	size = pCommandList -> current - HL7X0_LENGTH		2408934	2		=			
ANR	2409267	Identifier	size		2408934	0					
ANR	2409268	AdditiveExpression	pCommandList -> current - HL7X0_LENGTH		2408934	1		-			
ANR	2409269	PtrMemberAccess	pCommandList -> current		2408934	0					
ANR	2409270	Identifier	pCommandList		2408934	0					
ANR	2409271	Identifier	current		2408934	1					
ANR	2409272	Identifier	HL7X0_LENGTH		2408934	1					
ANR	2409273	ExpressionStatement	* ( pSaveCommandStart ++ ) = '@'	537:4:18453:18482	2408934	1	True				
ANR	2409274	AssignmentExpression	* ( pSaveCommandStart ++ ) = '@'		2408934	0		=			
ANR	2409275	UnaryOperationExpression	* ( pSaveCommandStart ++ )		2408934	0					
ANR	2409276	UnaryOperator	*		2408934	0					
ANR	2409277	PostIncDecOperationExpression	pSaveCommandStart ++		2408934	1					
ANR	2409278	Identifier	pSaveCommandStart		2408934	0					
ANR	2409279	IncDec	++		2408934	1					
ANR	2409280	PrimaryExpression	'@'		2408934	1					
ANR	2409281	ExpressionStatement	* ( pSaveCommandStart ++ ) = 'G'	538:4:18488:18517	2408934	2	True				
ANR	2409282	AssignmentExpression	* ( pSaveCommandStart ++ ) = 'G'		2408934	0		=			
ANR	2409283	UnaryOperationExpression	* ( pSaveCommandStart ++ )		2408934	0					
ANR	2409284	UnaryOperator	*		2408934	0					
ANR	2409285	PostIncDecOperationExpression	pSaveCommandStart ++		2408934	1					
ANR	2409286	Identifier	pSaveCommandStart		2408934	0					
ANR	2409287	IncDec	++		2408934	1					
ANR	2409288	PrimaryExpression	'G'		2408934	1					
ANR	2409289	ExpressionStatement	* ( pSaveCommandStart ++ ) = 0	539:4:18523:18550	2408934	3	True				
ANR	2409290	AssignmentExpression	* ( pSaveCommandStart ++ ) = 0		2408934	0		=			
ANR	2409291	UnaryOperationExpression	* ( pSaveCommandStart ++ )		2408934	0					
ANR	2409292	UnaryOperator	*		2408934	0					
ANR	2409293	PostIncDecOperationExpression	pSaveCommandStart ++		2408934	1					
ANR	2409294	Identifier	pSaveCommandStart		2408934	0					
ANR	2409295	IncDec	++		2408934	1					
ANR	2409296	PrimaryExpression	0		2408934	1					
ANR	2409297	ExpressionStatement	* ( pSaveCommandStart ++ ) = ( Byte ) ( size >> 8 )	540:4:18657:18701	2408934	4	True				
ANR	2409298	AssignmentExpression	* ( pSaveCommandStart ++ ) = ( Byte ) ( size >> 8 )		2408934	0		=			
ANR	2409299	UnaryOperationExpression	* ( pSaveCommandStart ++ )		2408934	0					
ANR	2409300	UnaryOperator	*		2408934	0					
ANR	2409301	PostIncDecOperationExpression	pSaveCommandStart ++		2408934	1					
ANR	2409302	Identifier	pSaveCommandStart		2408934	0					
ANR	2409303	IncDec	++		2408934	1					
ANR	2409304	CastExpression	( Byte ) ( size >> 8 )		2408934	1					
ANR	2409305	CastTarget	Byte		2408934	0					
ANR	2409306	ShiftExpression	size >> 8		2408934	1		>>			
ANR	2409307	Identifier	size		2408934	0					
ANR	2409308	PrimaryExpression	8		2408934	1					
ANR	2409309	ExpressionStatement	* ( pSaveCommandStart ++ ) = ( Byte ) ( size )	541:4:18707:18746	2408934	5	True				
ANR	2409310	AssignmentExpression	* ( pSaveCommandStart ++ ) = ( Byte ) ( size )		2408934	0		=			
ANR	2409311	UnaryOperationExpression	* ( pSaveCommandStart ++ )		2408934	0					
ANR	2409312	UnaryOperator	*		2408934	0					
ANR	2409313	PostIncDecOperationExpression	pSaveCommandStart ++		2408934	1					
ANR	2409314	Identifier	pSaveCommandStart		2408934	0					
ANR	2409315	IncDec	++		2408934	1					
ANR	2409316	CastExpression	( Byte ) ( size )		2408934	1					
ANR	2409317	CastTarget	Byte		2408934	0					
ANR	2409318	Identifier	size		2408934	1					
ANR	2409319	ElseStatement	else		2408934	0					
ANR	2409320	CompoundStatement		103:7:3392:3392	2408934	0					
ANR	2409321	ExpressionStatement	pCommandList -> current = 0	544:4:18828:18853	2408934	0	True				
ANR	2409322	AssignmentExpression	pCommandList -> current = 0		2408934	0		=			
ANR	2409323	PtrMemberAccess	pCommandList -> current		2408934	0					
ANR	2409324	Identifier	pCommandList		2408934	0					
ANR	2409325	Identifier	current		2408934	1					
ANR	2409326	PrimaryExpression	0		2408934	1					
ANR	2409327	IfStatement	if ( lineNB == pSummary -> pageHeight )		2408934	8					
ANR	2409328	Condition	lineNB == pSummary -> pageHeight	546:6:18865:18894	2408934	0	True				
ANR	2409329	EqualityExpression	lineNB == pSummary -> pageHeight		2408934	0		==			
ANR	2409330	Identifier	lineNB		2408934	0					
ANR	2409331	PtrMemberAccess	pSummary -> pageHeight		2408934	1					
ANR	2409332	Identifier	pSummary		2408934	0					
ANR	2409333	Identifier	pageHeight		2408934	1					
ANR	2409334	CompoundStatement		106:37:3529:3529	2408934	1					
ANR	2409335	ReturnStatement	return DumpFinished ;	547:4:18902:18921	2408934	0	True				
ANR	2409336	Identifier	DumpFinished		2408934	0					
ANR	2409337	ElseStatement	else		2408934	0					
ANR	2409338	CompoundStatement		109:7:3567:3567	2408934	0					
ANR	2409339	ReturnStatement	return DumpContinue ;	550:4:18940:18959	2408934	0	True				
ANR	2409340	Identifier	DumpContinue		2408934	0					
ANR	2409341	ReturnType	static int		2408934	1					
ANR	2409342	Identifier	dumpPage		2408934	2					
ANR	2409343	ParameterList	"gx_device_printer * pSource , Byte * pLineTmp , ByteList * pCommandList , Summary * pSummary"		2408934	3					
ANR	2409344	Parameter	gx_device_printer * pSource	437:20:15155:15181	2408934	0	True				
ANR	2409345	ParameterType	gx_device_printer *		2408934	0					
ANR	2409346	Identifier	pSource		2408934	1					
ANR	2409347	Parameter	Byte * pLineTmp	438:22:15206:15233	2408934	1	True				
ANR	2409348	ParameterType	Byte *		2408934	0					
ANR	2409349	Identifier	pLineTmp		2408934	1					
ANR	2409350	Parameter	ByteList * pCommandList	439:22:15258:15289	2408934	2	True				
ANR	2409351	ParameterType	ByteList *		2408934	0					
ANR	2409352	Identifier	pCommandList		2408934	1					
ANR	2409353	Parameter	Summary * pSummary	440:22:15314:15341	2408934	3	True				
ANR	2409354	ParameterType	Summary *		2408934	0					
ANR	2409355	Identifier	pSummary		2408934	1					
ANR	2409356	CFGEntryNode	ENTRY		2408934		True				
ANR	2409357	CFGExitNode	EXIT		2408934		True				
ANR	2409358	Symbol	pCommandList -> current		2408934						
ANR	2409359	Symbol	pSource		2408934						
ANR	2409360	Symbol	save		2408934						
ANR	2409361	Symbol	MaxLineLength		2408934						
ANR	2409362	Symbol	* ( pSaveCommandStart ++ )		2408934						
ANR	2409363	Symbol	pSummary -> nbLinesSent		2408934						
ANR	2409364	Symbol	pSummary -> resolution		2408934						
ANR	2409365	Symbol	* pSummary		2408934						
ANR	2409366	Symbol	tmpLength		2408934						
ANR	2409367	Symbol	pSummary		2408934						
ANR	2409368	Symbol	stripTrailingBlanks		2408934						
ANR	2409369	Symbol	pSummary -> previousSize		2408934						
ANR	2409370	Symbol	pSummary -> horizontalOffset		2408934						
ANR	2409371	Symbol	pSummary -> nbBlankLines		2408934						
ANR	2409372	Symbol	isThereEnoughRoom		2408934						
ANR	2409373	Symbol	pSummary -> pageHeight		2408934						
ANR	2409374	Symbol	pSaveCommandStart		2408934						
ANR	2409375	Symbol	roomLeft		2408934						
ANR	2409376	Symbol	currentPosition		2408934						
ANR	2409377	Symbol	* pCommandList		2408934						
ANR	2409378	Symbol	availableRoom		2408934						
ANR	2409379	Symbol	HL7X0_LENGTH		2408934						
ANR	2409380	Symbol	DumpContinue		2408934						
ANR	2409381	Symbol	lineNB		2408934						
ANR	2409382	Symbol	pLineTmp		2408934						
ANR	2409383	Symbol	usefulLength		2408934						
ANR	2409384	Symbol	size		2408934						
ANR	2409385	Symbol	pSummary -> pageWidth		2408934						
ANR	2409386	Symbol	pSummary -> previousData		2408934						
ANR	2409387	Symbol	DumpFinished		2408934						
ANR	2409388	Symbol	pCommandList		2408934						
ANR	2409389	Function	makeFullLine	562:0:19238:23512							
ANR	2409390	FunctionDef	"makeFullLine (Byte * pCurrentLine , Byte * pPreviousLine , short lineWidth , ByteList * commandsList , short horizontalOffset)"		2409389	0					
ANR	2409391	CompoundStatement		567:28:19531:23512	2409389	0					
ANR	2409392	IdentifierDeclStatement	Byte * pPreviousTmp ;	569:2:19556:19574	2409389	0	True				
ANR	2409393	IdentifierDecl	* pPreviousTmp		2409389	0					
ANR	2409394	IdentifierDeclType	Byte *		2409389	0					
ANR	2409395	Identifier	pPreviousTmp		2409389	1					
ANR	2409396	IdentifierDeclStatement	Byte * pCurrentTmp ;	570:2:19578:19595	2409389	1	True				
ANR	2409397	IdentifierDecl	* pCurrentTmp		2409389	0					
ANR	2409398	IdentifierDeclType	Byte *		2409389	0					
ANR	2409399	Identifier	pCurrentTmp		2409389	1					
ANR	2409400	IdentifierDeclStatement	Byte * pNumberOfCommands ;	571:2:19599:19622	2409389	2	True				
ANR	2409401	IdentifierDecl	* pNumberOfCommands		2409389	0					
ANR	2409402	IdentifierDeclType	Byte *		2409389	0					
ANR	2409403	Identifier	pNumberOfCommands		2409389	1					
ANR	2409404	IdentifierDeclStatement	int loopCounter ;	572:2:19626:19641	2409389	3	True				
ANR	2409405	IdentifierDecl	loopCounter		2409389	0					
ANR	2409406	IdentifierDeclType	int		2409389	0					
ANR	2409407	Identifier	loopCounter		2409389	1					
ANR	2409408	IdentifierDeclStatement	short remainingWidth ;	573:2:19645:19665	2409389	4	True				
ANR	2409409	IdentifierDecl	remainingWidth		2409389	0					
ANR	2409410	IdentifierDeclType	short		2409389	0					
ANR	2409411	Identifier	remainingWidth		2409389	1					
ANR	2409412	IdentifierDeclStatement	Byte * pStartOfSequence ;	574:2:19669:19691	2409389	5	True				
ANR	2409413	IdentifierDecl	* pStartOfSequence		2409389	0					
ANR	2409414	IdentifierDeclType	Byte *		2409389	0					
ANR	2409415	Identifier	pStartOfSequence		2409389	1					
ANR	2409416	IfStatement	if ( lineWidth <= 0 )		2409389	6					
ANR	2409417	Condition	lineWidth <= 0	580:6:19816:19829	2409389	0	True				
ANR	2409418	RelationalExpression	lineWidth <= 0		2409389	0		<=			
ANR	2409419	Identifier	lineWidth		2409389	0					
ANR	2409420	PrimaryExpression	0		2409389	1					
ANR	2409421	CompoundStatement		14:22:300:300	2409389	1					
ANR	2409422	ExpressionStatement	"addByte ( commandsList , 0xff )"	581:4:19838:19864	2409389	0	True				
ANR	2409423	CallExpression	"addByte ( commandsList , 0xff )"		2409389	0					
ANR	2409424	Callee	addByte		2409389	0					
ANR	2409425	Identifier	addByte		2409389	0					
ANR	2409426	ArgumentList	commandsList		2409389	1					
ANR	2409427	Argument	commandsList		2409389	0					
ANR	2409428	Identifier	commandsList		2409389	0					
ANR	2409429	Argument	0xff		2409389	1					
ANR	2409430	PrimaryExpression	0xff		2409389	0					
ANR	2409431	ReturnStatement	return ;	582:4:19870:19876	2409389	1	True				
ANR	2409432	ExpressionStatement	pNumberOfCommands = currentPosition ( commandsList )	589:2:19958:20007	2409389	7	True				
ANR	2409433	AssignmentExpression	pNumberOfCommands = currentPosition ( commandsList )		2409389	0		=			
ANR	2409434	Identifier	pNumberOfCommands		2409389	0					
ANR	2409435	CallExpression	currentPosition ( commandsList )		2409389	1					
ANR	2409436	Callee	currentPosition		2409389	0					
ANR	2409437	Identifier	currentPosition		2409389	0					
ANR	2409438	ArgumentList	commandsList		2409389	1					
ANR	2409439	Argument	commandsList		2409389	0					
ANR	2409440	Identifier	commandsList		2409389	0					
ANR	2409441	ExpressionStatement	"addByte ( commandsList , 0 )"	590:2:20058:20081	2409389	8	True				
ANR	2409442	CallExpression	"addByte ( commandsList , 0 )"		2409389	0					
ANR	2409443	Callee	addByte		2409389	0					
ANR	2409444	Identifier	addByte		2409389	0					
ANR	2409445	ArgumentList	commandsList		2409389	1					
ANR	2409446	Argument	commandsList		2409389	0					
ANR	2409447	Identifier	commandsList		2409389	0					
ANR	2409448	Argument	0		2409389	1					
ANR	2409449	PrimaryExpression	0		2409389	0					
ANR	2409450	ExpressionStatement	pPreviousTmp = pPreviousLine	592:2:20127:20155	2409389	9	True				
ANR	2409451	AssignmentExpression	pPreviousTmp = pPreviousLine		2409389	0		=			
ANR	2409452	Identifier	pPreviousTmp		2409389	0					
ANR	2409453	Identifier	pPreviousLine		2409389	1					
ANR	2409454	ExpressionStatement	pCurrentTmp = pCurrentLine	593:2:20159:20185	2409389	10	True				
ANR	2409455	AssignmentExpression	pCurrentTmp = pCurrentLine		2409389	0		=			
ANR	2409456	Identifier	pCurrentTmp		2409389	0					
ANR	2409457	Identifier	pCurrentLine		2409389	1					
ANR	2409458	ForStatement	for ( loopCounter = lineWidth ; 0 < loopCounter ; loopCounter -- )		2409389	11					
ANR	2409459	ForInit	loopCounter = lineWidth ;	597:7:20243:20267	2409389	0	True				
ANR	2409460	AssignmentExpression	loopCounter = lineWidth		2409389	0		=			
ANR	2409461	Identifier	loopCounter		2409389	0					
ANR	2409462	Identifier	lineWidth		2409389	1					
ANR	2409463	Condition	0 < loopCounter	597:34:20270:20284	2409389	1	True				
ANR	2409464	RelationalExpression	0 < loopCounter		2409389	0		<			
ANR	2409465	PrimaryExpression	0		2409389	0					
ANR	2409466	Identifier	loopCounter		2409389	1					
ANR	2409467	PostIncDecOperationExpression	loopCounter --	597:52:20288:20301	2409389	2	True				
ANR	2409468	Identifier	loopCounter		2409389	0					
ANR	2409469	IncDec	--		2409389	1					
ANR	2409470	ExpressionStatement	* pPreviousTmp ++ ^= * pCurrentTmp ++	598:4:20309:20342	2409389	3	True				
ANR	2409471	AssignmentExpression	* pPreviousTmp ++ ^= * pCurrentTmp ++		2409389	0		^=			
ANR	2409472	UnaryOperationExpression	* pPreviousTmp ++		2409389	0					
ANR	2409473	UnaryOperator	*		2409389	0					
ANR	2409474	PostIncDecOperationExpression	pPreviousTmp ++		2409389	1					
ANR	2409475	Identifier	pPreviousTmp		2409389	0					
ANR	2409476	IncDec	++		2409389	1					
ANR	2409477	UnaryOperationExpression	* pCurrentTmp ++		2409389	1					
ANR	2409478	UnaryOperator	*		2409389	0					
ANR	2409479	PostIncDecOperationExpression	pCurrentTmp ++		2409389	1					
ANR	2409480	Identifier	pCurrentTmp		2409389	0					
ANR	2409481	IncDec	++		2409389	1					
ANR	2409482	ExpressionStatement	pStartOfSequence = pPreviousLine	604:2:20497:20529	2409389	12	True				
ANR	2409483	AssignmentExpression	pStartOfSequence = pPreviousLine		2409389	0		=			
ANR	2409484	Identifier	pStartOfSequence		2409389	0					
ANR	2409485	Identifier	pPreviousLine		2409389	1					
ANR	2409486	ExpressionStatement	remainingWidth = lineWidth	605:2:20533:20559	2409389	13	True				
ANR	2409487	AssignmentExpression	remainingWidth = lineWidth		2409389	0		=			
ANR	2409488	Identifier	remainingWidth		2409389	0					
ANR	2409489	Identifier	lineWidth		2409389	1					
ANR	2409490	WhileStatement	while ( true )		2409389	14					
ANR	2409491	Condition	true	607:9:20571:20574	2409389	0	True				
ANR	2409492	Identifier	true		2409389	0					
ANR	2409493	CompoundStatement		41:15:1045:1045	2409389	1					
ANR	2409494	WhileStatement	while ( true )		2409389	0					
ANR	2409495	Condition	true	636:11:22032:22035	2409389	0	True				
ANR	2409496	Identifier	true		2409389	0					
ANR	2409497	CompoundStatement		70:17:2506:2506	2409389	1					
ANR	2409498	IfStatement	if ( remainingWidth == 0 )		2409389	0					
ANR	2409499	Condition	remainingWidth == 0	637:10:22050:22068	2409389	0	True				
ANR	2409500	EqualityExpression	remainingWidth == 0		2409389	0		==			
ANR	2409501	Identifier	remainingWidth		2409389	0					
ANR	2409502	PrimaryExpression	0		2409389	1					
ANR	2409503	CompoundStatement		72:8:2582:2582	2409389	1					
ANR	2409504	ReturnStatement	return ;	639:10:22126:22132	2409389	0	True				
ANR	2409505	IfStatement	if ( * pStartOfSequence != 0 )		2409389	1					
ANR	2409506	Condition	* pStartOfSequence != 0	641:10:22154:22175	2409389	0	True				
ANR	2409507	EqualityExpression	* pStartOfSequence != 0		2409389	0		!=			
ANR	2409508	UnaryOperationExpression	* pStartOfSequence		2409389	0					
ANR	2409509	UnaryOperator	*		2409389	0					
ANR	2409510	Identifier	pStartOfSequence		2409389	1					
ANR	2409511	PrimaryExpression	0		2409389	1					
ANR	2409512	BreakStatement	break ;	642:8:22186:22191	2409389	1	True				
ANR	2409513	ExpressionStatement	pStartOfSequence ++	643:6:22199:22218	2409389	2	True				
ANR	2409514	PostIncDecOperationExpression	pStartOfSequence ++		2409389	0					
ANR	2409515	Identifier	pStartOfSequence		2409389	0					
ANR	2409516	IncDec	++		2409389	1					
ANR	2409517	ExpressionStatement	horizontalOffset ++	644:6:22226:22245	2409389	3	True				
ANR	2409518	PostIncDecOperationExpression	horizontalOffset ++		2409389	0					
ANR	2409519	Identifier	horizontalOffset		2409389	0					
ANR	2409520	IncDec	++		2409389	1					
ANR	2409521	ExpressionStatement	-- remainingWidth	645:6:22314:22330	2409389	4	True				
ANR	2409522	UnaryExpression	-- remainingWidth		2409389	0					
ANR	2409523	IncDec	--		2409389	0					
ANR	2409524	Identifier	remainingWidth		2409389	1					
ANR	2409525	ExpressionStatement	pPreviousTmp = pStartOfSequence + 1	649:4:22350:22385	2409389	1	True				
ANR	2409526	AssignmentExpression	pPreviousTmp = pStartOfSequence + 1		2409389	0		=			
ANR	2409527	Identifier	pPreviousTmp		2409389	0					
ANR	2409528	AdditiveExpression	pStartOfSequence + 1		2409389	1		+			
ANR	2409529	Identifier	pStartOfSequence		2409389	0					
ANR	2409530	PrimaryExpression	1		2409389	1					
ANR	2409531	ExpressionStatement	-- remainingWidth	650:4:22438:22454	2409389	2	True				
ANR	2409532	UnaryExpression	-- remainingWidth		2409389	0					
ANR	2409533	IncDec	--		2409389	0					
ANR	2409534	Identifier	remainingWidth		2409389	1					
ANR	2409535	WhileStatement	while ( remainingWidth != 0 && * pPreviousTmp != 0 )		2409389	3					
ANR	2409536	Condition	remainingWidth != 0 && * pPreviousTmp != 0	655:11:22562:22602	2409389	0	True				
ANR	2409537	AndExpression	remainingWidth != 0 && * pPreviousTmp != 0		2409389	0		&&			
ANR	2409538	EqualityExpression	remainingWidth != 0		2409389	0		!=			
ANR	2409539	Identifier	remainingWidth		2409389	0					
ANR	2409540	PrimaryExpression	0		2409389	1					
ANR	2409541	EqualityExpression	* pPreviousTmp != 0		2409389	1		!=			
ANR	2409542	UnaryOperationExpression	* pPreviousTmp		2409389	0					
ANR	2409543	UnaryOperator	*		2409389	0					
ANR	2409544	Identifier	pPreviousTmp		2409389	1					
ANR	2409545	PrimaryExpression	0		2409389	1					
ANR	2409546	CompoundStatement		89:54:3073:3073	2409389	1					
ANR	2409547	ExpressionStatement	++ pPreviousTmp	656:6:22613:22627	2409389	0	True				
ANR	2409548	UnaryExpression	++ pPreviousTmp		2409389	0					
ANR	2409549	IncDec	++		2409389	0					
ANR	2409550	Identifier	pPreviousTmp		2409389	1					
ANR	2409551	ExpressionStatement	-- remainingWidth	657:6:22675:22691	2409389	1	True				
ANR	2409552	UnaryExpression	-- remainingWidth		2409389	0					
ANR	2409553	IncDec	--		2409389	0					
ANR	2409554	Identifier	remainingWidth		2409389	1					
ANR	2409555	ExpressionStatement	"makeCommandsForSequence ( pCurrentLine + ( pStartOfSequence - pPreviousLine ) , pPreviousTmp - pStartOfSequence , commandsList , horizontalOffset , pNumberOfCommands , remainingWidth )"	664:4:22775:23094	2409389	4	True				
ANR	2409556	CallExpression	"makeCommandsForSequence ( pCurrentLine + ( pStartOfSequence - pPreviousLine ) , pPreviousTmp - pStartOfSequence , commandsList , horizontalOffset , pNumberOfCommands , remainingWidth )"		2409389	0					
ANR	2409557	Callee	makeCommandsForSequence		2409389	0					
ANR	2409558	Identifier	makeCommandsForSequence		2409389	0					
ANR	2409559	ArgumentList	pCurrentLine + ( pStartOfSequence - pPreviousLine )		2409389	1					
ANR	2409560	Argument	pCurrentLine + ( pStartOfSequence - pPreviousLine )		2409389	0					
ANR	2409561	AdditiveExpression	pCurrentLine + ( pStartOfSequence - pPreviousLine )		2409389	0		+			
ANR	2409562	Identifier	pCurrentLine		2409389	0					
ANR	2409563	AdditiveExpression	pStartOfSequence - pPreviousLine		2409389	1		-			
ANR	2409564	Identifier	pStartOfSequence		2409389	0					
ANR	2409565	Identifier	pPreviousLine		2409389	1					
ANR	2409566	Argument	pPreviousTmp - pStartOfSequence		2409389	1					
ANR	2409567	AdditiveExpression	pPreviousTmp - pStartOfSequence		2409389	0		-			
ANR	2409568	Identifier	pPreviousTmp		2409389	0					
ANR	2409569	Identifier	pStartOfSequence		2409389	1					
ANR	2409570	Argument	commandsList		2409389	2					
ANR	2409571	Identifier	commandsList		2409389	0					
ANR	2409572	Argument	horizontalOffset		2409389	3					
ANR	2409573	Identifier	horizontalOffset		2409389	0					
ANR	2409574	Argument	pNumberOfCommands		2409389	4					
ANR	2409575	Identifier	pNumberOfCommands		2409389	0					
ANR	2409576	Argument	remainingWidth		2409389	5					
ANR	2409577	Identifier	remainingWidth		2409389	0					
ANR	2409578	IfStatement	if ( * pNumberOfCommands == 0xfe || remainingWidth == 0 )		2409389	5					
ANR	2409579	Condition	* pNumberOfCommands == 0xfe || remainingWidth == 0	670:8:23104:23267	2409389	0	True				
ANR	2409580	OrExpression	* pNumberOfCommands == 0xfe || remainingWidth == 0		2409389	0		||			
ANR	2409581	EqualityExpression	* pNumberOfCommands == 0xfe		2409389	0		==			
ANR	2409582	UnaryOperationExpression	* pNumberOfCommands		2409389	0					
ANR	2409583	UnaryOperator	*		2409389	0					
ANR	2409584	Identifier	pNumberOfCommands		2409389	1					
ANR	2409585	PrimaryExpression	0xfe		2409389	1					
ANR	2409586	EqualityExpression	remainingWidth == 0		2409389	1		==			
ANR	2409587	Identifier	remainingWidth		2409389	0					
ANR	2409588	PrimaryExpression	0		2409389	1					
ANR	2409589	CompoundStatement		107:4:3789:3789	2409389	1					
ANR	2409590	ReturnStatement	return ;	674:6:23329:23335	2409389	0	True				
ANR	2409591	ExpressionStatement	pStartOfSequence = pPreviousTmp + 1	677:4:23348:23383	2409389	6	True				
ANR	2409592	AssignmentExpression	pStartOfSequence = pPreviousTmp + 1		2409389	0		=			
ANR	2409593	Identifier	pStartOfSequence		2409389	0					
ANR	2409594	AdditiveExpression	pPreviousTmp + 1		2409389	1		+			
ANR	2409595	Identifier	pPreviousTmp		2409389	0					
ANR	2409596	PrimaryExpression	1		2409389	1					
ANR	2409597	ExpressionStatement	horizontalOffset = 1	678:4:23444:23464	2409389	7	True				
ANR	2409598	AssignmentExpression	horizontalOffset = 1		2409389	0		=			
ANR	2409599	Identifier	horizontalOffset		2409389	0					
ANR	2409600	PrimaryExpression	1		2409389	1					
ANR	2409601	ExpressionStatement	-- remainingWidth	679:4:23470:23486	2409389	8	True				
ANR	2409602	UnaryExpression	-- remainingWidth		2409389	0					
ANR	2409603	IncDec	--		2409389	0					
ANR	2409604	Identifier	remainingWidth		2409389	1					
ANR	2409605	ReturnType	static void		2409389	1					
ANR	2409606	Identifier	makeFullLine		2409389	2					
ANR	2409607	ParameterList	"Byte * pCurrentLine , Byte * pPreviousLine , short lineWidth , ByteList * commandsList , short horizontalOffset"		2409389	3					
ANR	2409608	Parameter	Byte * pCurrentLine	562:26:19264:19287	2409389	0	True				
ANR	2409609	ParameterType	Byte *		2409389	0					
ANR	2409610	Identifier	pCurrentLine		2409389	1					
ANR	2409611	Parameter	Byte * pPreviousLine	563:27:19317:19341	2409389	1	True				
ANR	2409612	ParameterType	Byte *		2409389	0					
ANR	2409613	Identifier	pPreviousLine		2409389	1					
ANR	2409614	Parameter	short lineWidth	564:27:19371:19391	2409389	2	True				
ANR	2409615	ParameterType	short		2409389	0					
ANR	2409616	Identifier	lineWidth		2409389	1					
ANR	2409617	Parameter	ByteList * commandsList	565:27:19421:19444	2409389	3	True				
ANR	2409618	ParameterType	ByteList *		2409389	0					
ANR	2409619	Identifier	commandsList		2409389	1					
ANR	2409620	Parameter	short horizontalOffset	566:27:19474:19501	2409389	4	True				
ANR	2409621	ParameterType	short		2409389	0					
ANR	2409622	Identifier	horizontalOffset		2409389	1					
ANR	2409623	CFGEntryNode	ENTRY		2409389		True				
ANR	2409624	CFGExitNode	EXIT		2409389		True				
ANR	2409625	Symbol	* pCurrentTmp ++		2409389						
ANR	2409626	Symbol	pStartOfSequence		2409389						
ANR	2409627	Symbol	currentPosition		2409389						
ANR	2409628	Symbol	commandsList		2409389						
ANR	2409629	Symbol	pCurrentLine		2409389						
ANR	2409630	Symbol	loopCounter		2409389						
ANR	2409631	Symbol	lineWidth		2409389						
ANR	2409632	Symbol	horizontalOffset		2409389						
ANR	2409633	Symbol	pNumberOfCommands		2409389						
ANR	2409634	Symbol	* pPreviousTmp ++		2409389						
ANR	2409635	Symbol	* pPreviousTmp		2409389						
ANR	2409636	Symbol	true		2409389						
ANR	2409637	Symbol	pCurrentTmp		2409389						
ANR	2409638	Symbol	* pStartOfSequence		2409389						
ANR	2409639	Symbol	pPreviousLine		2409389						
ANR	2409640	Symbol	* pNumberOfCommands		2409389						
ANR	2409641	Symbol	pPreviousTmp		2409389						
ANR	2409642	Symbol	remainingWidth		2409389						
ANR	2409643	DeclStmt									
ANR	2409644	Decl							void	"void ( Byte * pSequence , short lengthOfSequence , ByteList * pCommandList , short offset )"	makeSequenceWithoutRepeat
ANR	2409645	DeclStmt									
ANR	2409646	Decl							void	"void ( Byte * pSequence , short lengthOfSequence , ByteList * pCommandList , short offset )"	makeSequenceWithRepeat
ANR	2409647	Function	makeCommandsForSequence	704:0:24304:27845							
ANR	2409648	FunctionDef	"makeCommandsForSequence (Byte * pSource , short length , ByteList * pCommandList , short offset , Byte * pNumberOfCommands , short rest)"		2409647	0					
ANR	2409649	CompoundStatement		709:62:24663:27845	2409647	0					
ANR	2409650	IdentifierDeclStatement	Byte * pStartOfSequence ;	711:2:24688:24711	2409647	0	True				
ANR	2409651	IdentifierDecl	* pStartOfSequence		2409647	0					
ANR	2409652	IdentifierDeclType	Byte *		2409647	0					
ANR	2409653	Identifier	pStartOfSequence		2409647	1					
ANR	2409654	IdentifierDeclStatement	Byte * pEndOfSequence ;	712:2:24715:24736	2409647	1	True				
ANR	2409655	IdentifierDecl	* pEndOfSequence		2409647	0					
ANR	2409656	IdentifierDeclType	Byte *		2409647	0					
ANR	2409657	Identifier	pEndOfSequence		2409647	1					
ANR	2409658	IdentifierDeclStatement	short remainingLength = length - 1 ;	713:2:24740:24775	2409647	2	True				
ANR	2409659	IdentifierDecl	remainingLength = length - 1		2409647	0					
ANR	2409660	IdentifierDeclType	short		2409647	0					
ANR	2409661	Identifier	remainingLength		2409647	1					
ANR	2409662	AssignmentExpression	remainingLength = length - 1		2409647	2		=			
ANR	2409663	Identifier	remainingLength		2409647	0					
ANR	2409664	AdditiveExpression	length - 1		2409647	1		-			
ANR	2409665	Identifier	length		2409647	0					
ANR	2409666	PrimaryExpression	1		2409647	1					
ANR	2409667	ExpressionStatement	pStartOfSequence = pSource	715:2:24780:24806	2409647	3	True				
ANR	2409668	AssignmentExpression	pStartOfSequence = pSource		2409647	0		=			
ANR	2409669	Identifier	pStartOfSequence		2409647	0					
ANR	2409670	Identifier	pSource		2409647	1					
ANR	2409671	ExpressionStatement	pEndOfSequence = pStartOfSequence + 1	716:2:24810:24847	2409647	4	True				
ANR	2409672	AssignmentExpression	pEndOfSequence = pStartOfSequence + 1		2409647	0		=			
ANR	2409673	Identifier	pEndOfSequence		2409647	0					
ANR	2409674	AdditiveExpression	pStartOfSequence + 1		2409647	1		+			
ANR	2409675	Identifier	pStartOfSequence		2409647	0					
ANR	2409676	PrimaryExpression	1		2409647	1					
ANR	2409677	WhileStatement	while ( true )		2409647	5					
ANR	2409678	Condition	true	721:9:24974:24977	2409647	0	True				
ANR	2409679	Identifier	true		2409647	0					
ANR	2409680	CompoundStatement		13:15:316:316	2409647	1					
ANR	2409681	IfStatement	if ( * pNumberOfCommands == 0xfd )		2409647	0					
ANR	2409682	Condition	* pNumberOfCommands == 0xfd	726:8:25133:25158	2409647	0	True				
ANR	2409683	EqualityExpression	* pNumberOfCommands == 0xfd		2409647	0		==			
ANR	2409684	UnaryOperationExpression	* pNumberOfCommands		2409647	0					
ANR	2409685	UnaryOperator	*		2409647	0					
ANR	2409686	Identifier	pNumberOfCommands		2409647	1					
ANR	2409687	PrimaryExpression	0xfd		2409647	1					
ANR	2409688	CompoundStatement		18:36:497:497	2409647	1					
ANR	2409689	ExpressionStatement	"makeSequenceWithoutRepeat ( pStartOfSequence , 1 + remainingLength + rest , pCommandList , offset )"	727:6:25169:25334	2409647	0	True				
ANR	2409690	CallExpression	"makeSequenceWithoutRepeat ( pStartOfSequence , 1 + remainingLength + rest , pCommandList , offset )"		2409647	0					
ANR	2409691	Callee	makeSequenceWithoutRepeat		2409647	0					
ANR	2409692	Identifier	makeSequenceWithoutRepeat		2409647	0					
ANR	2409693	ArgumentList	pStartOfSequence		2409647	1					
ANR	2409694	Argument	pStartOfSequence		2409647	0					
ANR	2409695	Identifier	pStartOfSequence		2409647	0					
ANR	2409696	Argument	1 + remainingLength + rest		2409647	1					
ANR	2409697	AdditiveExpression	1 + remainingLength + rest		2409647	0		+			
ANR	2409698	PrimaryExpression	1		2409647	0					
ANR	2409699	AdditiveExpression	remainingLength + rest		2409647	1		+			
ANR	2409700	Identifier	remainingLength		2409647	0					
ANR	2409701	Identifier	rest		2409647	1					
ANR	2409702	Argument	pCommandList		2409647	2					
ANR	2409703	Identifier	pCommandList		2409647	0					
ANR	2409704	Argument	offset		2409647	3					
ANR	2409705	Identifier	offset		2409647	0					
ANR	2409706	ExpressionStatement	++ * pNumberOfCommands	731:6:25342:25362	2409647	1	True				
ANR	2409707	UnaryExpression	++ * pNumberOfCommands		2409647	0					
ANR	2409708	IncDec	++		2409647	0					
ANR	2409709	UnaryOperationExpression	* pNumberOfCommands		2409647	1					
ANR	2409710	UnaryOperator	*		2409647	0					
ANR	2409711	Identifier	pNumberOfCommands		2409647	1					
ANR	2409712	ReturnStatement	return ;	732:6:25370:25376	2409647	2	True				
ANR	2409713	WhileStatement	while ( true )		2409647	1					
ANR	2409714	Condition	true	736:11:25456:25459	2409647	0	True				
ANR	2409715	Identifier	true		2409647	0					
ANR	2409716	CompoundStatement		28:17:798:798	2409647	1					
ANR	2409717	IfStatement	if ( remainingLength == 0 )		2409647	0					
ANR	2409718	Condition	remainingLength == 0	738:10:25528:25547	2409647	0	True				
ANR	2409719	EqualityExpression	remainingLength == 0		2409647	0		==			
ANR	2409720	Identifier	remainingLength		2409647	0					
ANR	2409721	PrimaryExpression	0		2409647	1					
ANR	2409722	CompoundStatement		30:32:886:886	2409647	1					
ANR	2409723	ExpressionStatement	"makeSequenceWithoutRepeat ( pStartOfSequence , pEndOfSequence - pStartOfSequence , pCommandList , offset )"	739:8:25560:25723	2409647	0	True				
ANR	2409724	CallExpression	"makeSequenceWithoutRepeat ( pStartOfSequence , pEndOfSequence - pStartOfSequence , pCommandList , offset )"		2409647	0					
ANR	2409725	Callee	makeSequenceWithoutRepeat		2409647	0					
ANR	2409726	Identifier	makeSequenceWithoutRepeat		2409647	0					
ANR	2409727	ArgumentList	pStartOfSequence		2409647	1					
ANR	2409728	Argument	pStartOfSequence		2409647	0					
ANR	2409729	Identifier	pStartOfSequence		2409647	0					
ANR	2409730	Argument	pEndOfSequence - pStartOfSequence		2409647	1					
ANR	2409731	AdditiveExpression	pEndOfSequence - pStartOfSequence		2409647	0		-			
ANR	2409732	Identifier	pEndOfSequence		2409647	0					
ANR	2409733	Identifier	pStartOfSequence		2409647	1					
ANR	2409734	Argument	pCommandList		2409647	2					
ANR	2409735	Identifier	pCommandList		2409647	0					
ANR	2409736	Argument	offset		2409647	3					
ANR	2409737	Identifier	offset		2409647	0					
ANR	2409738	ExpressionStatement	++ * pNumberOfCommands	743:8:25733:25753	2409647	1	True				
ANR	2409739	UnaryExpression	++ * pNumberOfCommands		2409647	0					
ANR	2409740	IncDec	++		2409647	0					
ANR	2409741	UnaryOperationExpression	* pNumberOfCommands		2409647	1					
ANR	2409742	UnaryOperator	*		2409647	0					
ANR	2409743	Identifier	pNumberOfCommands		2409647	1					
ANR	2409744	ReturnStatement	return ;	744:8:25763:25769	2409647	2	True				
ANR	2409745	IfStatement	if ( * pEndOfSequence == * ( pEndOfSequence - 1 ) )		2409647	1					
ANR	2409746	Condition	* pEndOfSequence == * ( pEndOfSequence - 1 )	747:10:25836:25875	2409647	0	True				
ANR	2409747	EqualityExpression	* pEndOfSequence == * ( pEndOfSequence - 1 )		2409647	0		==			
ANR	2409748	UnaryOperationExpression	* pEndOfSequence		2409647	0					
ANR	2409749	UnaryOperator	*		2409647	0					
ANR	2409750	Identifier	pEndOfSequence		2409647	1					
ANR	2409751	UnaryOperationExpression	* ( pEndOfSequence - 1 )		2409647	1					
ANR	2409752	UnaryOperator	*		2409647	0					
ANR	2409753	AdditiveExpression	pEndOfSequence - 1		2409647	1		-			
ANR	2409754	Identifier	pEndOfSequence		2409647	0					
ANR	2409755	PrimaryExpression	1		2409647	1					
ANR	2409756	CompoundStatement		39:52:1214:1214	2409647	1					
ANR	2409757	BreakStatement	break ;	748:8:25888:25893	2409647	0	True				
ANR	2409758	ExpressionStatement	++ pEndOfSequence	750:6:25909:25926	2409647	2	True				
ANR	2409759	UnaryExpression	++ pEndOfSequence		2409647	0					
ANR	2409760	IncDec	++		2409647	0					
ANR	2409761	Identifier	pEndOfSequence		2409647	1					
ANR	2409762	ExpressionStatement	-- remainingLength	751:6:25965:25982	2409647	3	True				
ANR	2409763	UnaryExpression	-- remainingLength		2409647	0					
ANR	2409764	IncDec	--		2409647	0					
ANR	2409765	Identifier	remainingLength		2409647	1					
ANR	2409766	IfStatement	if ( pStartOfSequence != pEndOfSequence - 1 )		2409647	2					
ANR	2409767	Condition	pStartOfSequence != pEndOfSequence - 1	754:8:26049:26086	2409647	0	True				
ANR	2409768	EqualityExpression	pStartOfSequence != pEndOfSequence - 1		2409647	0		!=			
ANR	2409769	Identifier	pStartOfSequence		2409647	0					
ANR	2409770	AdditiveExpression	pEndOfSequence - 1		2409647	1		-			
ANR	2409771	Identifier	pEndOfSequence		2409647	0					
ANR	2409772	PrimaryExpression	1		2409647	1					
ANR	2409773	CompoundStatement		46:48:1425:1425	2409647	1					
ANR	2409774	ExpressionStatement	"makeSequenceWithoutRepeat ( pStartOfSequence , ( pEndOfSequence - 1 ) - pStartOfSequence , pCommandList , offset )"	755:6:26097:26299	2409647	0	True				
ANR	2409775	CallExpression	"makeSequenceWithoutRepeat ( pStartOfSequence , ( pEndOfSequence - 1 ) - pStartOfSequence , pCommandList , offset )"		2409647	0					
ANR	2409776	Callee	makeSequenceWithoutRepeat		2409647	0					
ANR	2409777	Identifier	makeSequenceWithoutRepeat		2409647	0					
ANR	2409778	ArgumentList	pStartOfSequence		2409647	1					
ANR	2409779	Argument	pStartOfSequence		2409647	0					
ANR	2409780	Identifier	pStartOfSequence		2409647	0					
ANR	2409781	Argument	( pEndOfSequence - 1 ) - pStartOfSequence		2409647	1					
ANR	2409782	AdditiveExpression	( pEndOfSequence - 1 ) - pStartOfSequence		2409647	0		-			
ANR	2409783	AdditiveExpression	pEndOfSequence - 1		2409647	0		-			
ANR	2409784	Identifier	pEndOfSequence		2409647	0					
ANR	2409785	PrimaryExpression	1		2409647	1					
ANR	2409786	Identifier	pStartOfSequence		2409647	1					
ANR	2409787	Argument	pCommandList		2409647	2					
ANR	2409788	Identifier	pCommandList		2409647	0					
ANR	2409789	Argument	offset		2409647	3					
ANR	2409790	Identifier	offset		2409647	0					
ANR	2409791	ExpressionStatement	++ * pNumberOfCommands	759:6:26307:26327	2409647	1	True				
ANR	2409792	UnaryExpression	++ * pNumberOfCommands		2409647	0					
ANR	2409793	IncDec	++		2409647	0					
ANR	2409794	UnaryOperationExpression	* pNumberOfCommands		2409647	1					
ANR	2409795	UnaryOperator	*		2409647	0					
ANR	2409796	Identifier	pNumberOfCommands		2409647	1					
ANR	2409797	ExpressionStatement	offset = 0	760:6:26335:26345	2409647	2	True				
ANR	2409798	AssignmentExpression	offset = 0		2409647	0		=			
ANR	2409799	Identifier	offset		2409647	0					
ANR	2409800	PrimaryExpression	0		2409647	1					
ANR	2409801	ExpressionStatement	pStartOfSequence = pEndOfSequence - 1	761:6:26353:26390	2409647	3	True				
ANR	2409802	AssignmentExpression	pStartOfSequence = pEndOfSequence - 1		2409647	0		=			
ANR	2409803	Identifier	pStartOfSequence		2409647	0					
ANR	2409804	AdditiveExpression	pEndOfSequence - 1		2409647	1		-			
ANR	2409805	Identifier	pEndOfSequence		2409647	0					
ANR	2409806	PrimaryExpression	1		2409647	1					
ANR	2409807	IfStatement	if ( * pNumberOfCommands == 0xfd )		2409647	4					
ANR	2409808	Condition	* pNumberOfCommands == 0xfd	764:10:26444:26469	2409647	0	True				
ANR	2409809	EqualityExpression	* pNumberOfCommands == 0xfd		2409647	0		==			
ANR	2409810	UnaryOperationExpression	* pNumberOfCommands		2409647	0					
ANR	2409811	UnaryOperator	*		2409647	0					
ANR	2409812	Identifier	pNumberOfCommands		2409647	1					
ANR	2409813	PrimaryExpression	0xfd		2409647	1					
ANR	2409814	CompoundStatement		56:38:1808:1808	2409647	1					
ANR	2409815	ExpressionStatement	"makeSequenceWithoutRepeat ( pStartOfSequence , 1 + remainingLength + rest , pCommandList , offset )"	765:8:26482:26677	2409647	0	True				
ANR	2409816	CallExpression	"makeSequenceWithoutRepeat ( pStartOfSequence , 1 + remainingLength + rest , pCommandList , offset )"		2409647	0					
ANR	2409817	Callee	makeSequenceWithoutRepeat		2409647	0					
ANR	2409818	Identifier	makeSequenceWithoutRepeat		2409647	0					
ANR	2409819	ArgumentList	pStartOfSequence		2409647	1					
ANR	2409820	Argument	pStartOfSequence		2409647	0					
ANR	2409821	Identifier	pStartOfSequence		2409647	0					
ANR	2409822	Argument	1 + remainingLength + rest		2409647	1					
ANR	2409823	AdditiveExpression	1 + remainingLength + rest		2409647	0		+			
ANR	2409824	PrimaryExpression	1		2409647	0					
ANR	2409825	AdditiveExpression	remainingLength + rest		2409647	1		+			
ANR	2409826	Identifier	remainingLength		2409647	0					
ANR	2409827	Identifier	rest		2409647	1					
ANR	2409828	Argument	pCommandList		2409647	2					
ANR	2409829	Identifier	pCommandList		2409647	0					
ANR	2409830	Argument	offset		2409647	3					
ANR	2409831	Identifier	offset		2409647	0					
ANR	2409832	ExpressionStatement	++ * pNumberOfCommands	769:8:26687:26707	2409647	1	True				
ANR	2409833	UnaryExpression	++ * pNumberOfCommands		2409647	0					
ANR	2409834	IncDec	++		2409647	0					
ANR	2409835	UnaryOperationExpression	* pNumberOfCommands		2409647	1					
ANR	2409836	UnaryOperator	*		2409647	0					
ANR	2409837	Identifier	pNumberOfCommands		2409647	1					
ANR	2409838	ReturnStatement	return ;	770:8:26717:26723	2409647	2	True				
ANR	2409839	WhileStatement	while ( true )		2409647	3					
ANR	2409840	Condition	true	777:11:26835:26838	2409647	0	True				
ANR	2409841	Identifier	true		2409647	0					
ANR	2409842	CompoundStatement		69:17:2177:2177	2409647	1					
ANR	2409843	IfStatement	if ( remainingLength == 0 )		2409647	0					
ANR	2409844	Condition	remainingLength == 0	779:10:26901:26920	2409647	0	True				
ANR	2409845	EqualityExpression	remainingLength == 0		2409647	0		==			
ANR	2409846	Identifier	remainingLength		2409647	0					
ANR	2409847	PrimaryExpression	0		2409647	1					
ANR	2409848	CompoundStatement		71:32:2259:2259	2409647	1					
ANR	2409849	ExpressionStatement	"makeSequenceWithRepeat ( pStartOfSequence , pEndOfSequence - pStartOfSequence , pCommandList , offset )"	780:8:26933:27123	2409647	0	True				
ANR	2409850	CallExpression	"makeSequenceWithRepeat ( pStartOfSequence , pEndOfSequence - pStartOfSequence , pCommandList , offset )"		2409647	0					
ANR	2409851	Callee	makeSequenceWithRepeat		2409647	0					
ANR	2409852	Identifier	makeSequenceWithRepeat		2409647	0					
ANR	2409853	ArgumentList	pStartOfSequence		2409647	1					
ANR	2409854	Argument	pStartOfSequence		2409647	0					
ANR	2409855	Identifier	pStartOfSequence		2409647	0					
ANR	2409856	Argument	pEndOfSequence - pStartOfSequence		2409647	1					
ANR	2409857	AdditiveExpression	pEndOfSequence - pStartOfSequence		2409647	0		-			
ANR	2409858	Identifier	pEndOfSequence		2409647	0					
ANR	2409859	Identifier	pStartOfSequence		2409647	1					
ANR	2409860	Argument	pCommandList		2409647	2					
ANR	2409861	Identifier	pCommandList		2409647	0					
ANR	2409862	Argument	offset		2409647	3					
ANR	2409863	Identifier	offset		2409647	0					
ANR	2409864	ExpressionStatement	++ * pNumberOfCommands	784:8:27133:27153	2409647	1	True				
ANR	2409865	UnaryExpression	++ * pNumberOfCommands		2409647	0					
ANR	2409866	IncDec	++		2409647	0					
ANR	2409867	UnaryOperationExpression	* pNumberOfCommands		2409647	1					
ANR	2409868	UnaryOperator	*		2409647	0					
ANR	2409869	Identifier	pNumberOfCommands		2409647	1					
ANR	2409870	ReturnStatement	return ;	785:8:27163:27169	2409647	2	True				
ANR	2409871	IfStatement	if ( * pEndOfSequence != * pStartOfSequence )		2409647	1					
ANR	2409872	Condition	* pEndOfSequence != * pStartOfSequence	788:10:27229:27264	2409647	0	True				
ANR	2409873	EqualityExpression	* pEndOfSequence != * pStartOfSequence		2409647	0		!=			
ANR	2409874	UnaryOperationExpression	* pEndOfSequence		2409647	0					
ANR	2409875	UnaryOperator	*		2409647	0					
ANR	2409876	Identifier	pEndOfSequence		2409647	1					
ANR	2409877	UnaryOperationExpression	* pStartOfSequence		2409647	1					
ANR	2409878	UnaryOperator	*		2409647	0					
ANR	2409879	Identifier	pStartOfSequence		2409647	1					
ANR	2409880	CompoundStatement		80:47:2602:2602	2409647	1					
ANR	2409881	BreakStatement	break ;	789:8:27276:27281	2409647	0	True				
ANR	2409882	ExpressionStatement	++ pEndOfSequence	791:6:27297:27313	2409647	2	True				
ANR	2409883	UnaryExpression	++ pEndOfSequence		2409647	0					
ANR	2409884	IncDec	++		2409647	0					
ANR	2409885	Identifier	pEndOfSequence		2409647	1					
ANR	2409886	ExpressionStatement	-- remainingLength	792:6:27357:27374	2409647	3	True				
ANR	2409887	UnaryExpression	-- remainingLength		2409647	0					
ANR	2409888	IncDec	--		2409647	0					
ANR	2409889	Identifier	remainingLength		2409647	1					
ANR	2409890	ExpressionStatement	"makeSequenceWithRepeat ( pStartOfSequence , pEndOfSequence - pStartOfSequence , pCommandList , offset )"	794:6:27407:27591	2409647	4	True				
ANR	2409891	CallExpression	"makeSequenceWithRepeat ( pStartOfSequence , pEndOfSequence - pStartOfSequence , pCommandList , offset )"		2409647	0					
ANR	2409892	Callee	makeSequenceWithRepeat		2409647	0					
ANR	2409893	Identifier	makeSequenceWithRepeat		2409647	0					
ANR	2409894	ArgumentList	pStartOfSequence		2409647	1					
ANR	2409895	Argument	pStartOfSequence		2409647	0					
ANR	2409896	Identifier	pStartOfSequence		2409647	0					
ANR	2409897	Argument	pEndOfSequence - pStartOfSequence		2409647	1					
ANR	2409898	AdditiveExpression	pEndOfSequence - pStartOfSequence		2409647	0		-			
ANR	2409899	Identifier	pEndOfSequence		2409647	0					
ANR	2409900	Identifier	pStartOfSequence		2409647	1					
ANR	2409901	Argument	pCommandList		2409647	2					
ANR	2409902	Identifier	pCommandList		2409647	0					
ANR	2409903	Argument	offset		2409647	3					
ANR	2409904	Identifier	offset		2409647	0					
ANR	2409905	ExpressionStatement	++ * pNumberOfCommands	798:6:27599:27619	2409647	5	True				
ANR	2409906	UnaryExpression	++ * pNumberOfCommands		2409647	0					
ANR	2409907	IncDec	++		2409647	0					
ANR	2409908	UnaryOperationExpression	* pNumberOfCommands		2409647	1					
ANR	2409909	UnaryOperator	*		2409647	0					
ANR	2409910	Identifier	pNumberOfCommands		2409647	1					
ANR	2409911	ExpressionStatement	offset = 0	799:6:27627:27637	2409647	6	True				
ANR	2409912	AssignmentExpression	offset = 0		2409647	0		=			
ANR	2409913	Identifier	offset		2409647	0					
ANR	2409914	PrimaryExpression	0		2409647	1					
ANR	2409915	ExpressionStatement	pStartOfSequence = pEndOfSequence ++	800:6:27703:27740	2409647	7	True				
ANR	2409916	AssignmentExpression	pStartOfSequence = pEndOfSequence ++		2409647	0		=			
ANR	2409917	Identifier	pStartOfSequence		2409647	0					
ANR	2409918	PostIncDecOperationExpression	pEndOfSequence ++		2409647	1					
ANR	2409919	Identifier	pEndOfSequence		2409647	0					
ANR	2409920	IncDec	++		2409647	1					
ANR	2409921	ExpressionStatement	-- remainingLength	801:6:27801:27818	2409647	8	True				
ANR	2409922	UnaryExpression	-- remainingLength		2409647	0					
ANR	2409923	IncDec	--		2409647	0					
ANR	2409924	Identifier	remainingLength		2409647	1					
ANR	2409925	ReturnType	static void		2409647	1					
ANR	2409926	Identifier	makeCommandsForSequence		2409647	2					
ANR	2409927	ParameterList	"Byte * pSource , short length , ByteList * pCommandList , short offset , Byte * pNumberOfCommands , short rest"		2409647	3					
ANR	2409928	Parameter	Byte * pSource	704:36:24340:24357	2409647	0	True				
ANR	2409929	ParameterType	Byte *		2409647	0					
ANR	2409930	Identifier	pSource		2409647	1					
ANR	2409931	Parameter	short length	705:37:24397:24413	2409647	1	True				
ANR	2409932	ParameterType	short		2409647	0					
ANR	2409933	Identifier	length		2409647	1					
ANR	2409934	Parameter	ByteList * pCommandList	706:37:24453:24475	2409647	2	True				
ANR	2409935	ParameterType	ByteList *		2409647	0					
ANR	2409936	Identifier	pCommandList		2409647	1					
ANR	2409937	Parameter	short offset	707:37:24515:24531	2409647	3	True				
ANR	2409938	ParameterType	short		2409647	0					
ANR	2409939	Identifier	offset		2409647	1					
ANR	2409940	Parameter	Byte * pNumberOfCommands	708:37:24571:24598	2409647	4	True				
ANR	2409941	ParameterType	Byte *		2409647	0					
ANR	2409942	Identifier	pNumberOfCommands		2409647	1					
ANR	2409943	Parameter	short rest	709:37:24638:24652	2409647	5	True				
ANR	2409944	ParameterType	short		2409647	0					
ANR	2409945	Identifier	rest		2409647	1					
ANR	2409946	CFGEntryNode	ENTRY		2409647		True				
ANR	2409947	CFGExitNode	EXIT		2409647		True				
ANR	2409948	Symbol	rest		2409647						
ANR	2409949	Symbol	* pEndOfSequence		2409647						
ANR	2409950	Symbol	pSource		2409647						
ANR	2409951	Symbol	offset		2409647						
ANR	2409952	Symbol	pStartOfSequence		2409647						
ANR	2409953	Symbol	length		2409647						
ANR	2409954	Symbol	remainingLength		2409647						
ANR	2409955	Symbol	pNumberOfCommands		2409647						
ANR	2409956	Symbol	true		2409647						
ANR	2409957	Symbol	* pStartOfSequence		2409647						
ANR	2409958	Symbol	pCommandList		2409647						
ANR	2409959	Symbol	* pNumberOfCommands		2409647						
ANR	2409960	Symbol	* ( pEndOfSequence - 1 )		2409647						
ANR	2409961	Symbol	pEndOfSequence		2409647						
ANR	2409962	Function	makeSequenceWithoutRepeat	810:0:27918:29364							
ANR	2409963	FunctionDef	"makeSequenceWithoutRepeat (Byte * pSequence , short lengthOfSequence , ByteList * pCommandList , short offset)"		2409962	0					
ANR	2409964	CompoundStatement		814:65:28200:29364	2409962	0					
ANR	2409965	Statement	static	818:2:28243:28248	2409962	0	True				
ANR	2409966	IdentifierDeclStatement	const short MAX_OFFSET = 15 ;	818:9:28250:28285	2409962	1	True				
ANR	2409967	IdentifierDecl	MAX_OFFSET = 15		2409962	0					
ANR	2409968	IdentifierDeclType	const short		2409962	0					
ANR	2409969	Identifier	MAX_OFFSET		2409962	1					
ANR	2409970	AssignmentExpression	MAX_OFFSET = 15		2409962	2		=			
ANR	2409971	Identifier	MAX_OFFSET		2409962	0					
ANR	2409972	PrimaryExpression	15		2409962	1					
ANR	2409973	Statement	static	819:2:28289:28294	2409962	2	True				
ANR	2409974	IdentifierDeclStatement	const short POSITION_OF_OFFSET = 3 ;	819:9:28296:28330	2409962	3	True				
ANR	2409975	IdentifierDecl	POSITION_OF_OFFSET = 3		2409962	0					
ANR	2409976	IdentifierDeclType	const short		2409962	0					
ANR	2409977	Identifier	POSITION_OF_OFFSET		2409962	1					
ANR	2409978	AssignmentExpression	POSITION_OF_OFFSET = 3		2409962	2		=			
ANR	2409979	Identifier	POSITION_OF_OFFSET		2409962	0					
ANR	2409980	PrimaryExpression	3		2409962	1					
ANR	2409981	Statement	static	820:2:28334:28339	2409962	4	True				
ANR	2409982	IdentifierDeclStatement	const short MAX_LENGTH = 7 ;	820:9:28341:28376	2409962	5	True				
ANR	2409983	IdentifierDecl	MAX_LENGTH = 7		2409962	0					
ANR	2409984	IdentifierDeclType	const short		2409962	0					
ANR	2409985	Identifier	MAX_LENGTH		2409962	1					
ANR	2409986	AssignmentExpression	MAX_LENGTH = 7		2409962	2		=			
ANR	2409987	Identifier	MAX_LENGTH		2409962	0					
ANR	2409988	PrimaryExpression	7		2409962	1					
ANR	2409989	IdentifierDeclStatement	Byte tmpFirstByte = 0 ;	822:2:28381:28402	2409962	6	True				
ANR	2409990	IdentifierDecl	tmpFirstByte = 0		2409962	0					
ANR	2409991	IdentifierDeclType	Byte		2409962	0					
ANR	2409992	Identifier	tmpFirstByte		2409962	1					
ANR	2409993	AssignmentExpression	tmpFirstByte = 0		2409962	2		=			
ANR	2409994	Identifier	tmpFirstByte		2409962	0					
ANR	2409995	PrimaryExpression	0		2409962	1					
ANR	2409996	IdentifierDeclStatement	Byte * pSaveFirstByte ;	823:2:28406:28427	2409962	7	True				
ANR	2409997	IdentifierDecl	* pSaveFirstByte		2409962	0					
ANR	2409998	IdentifierDeclType	Byte *		2409962	0					
ANR	2409999	Identifier	pSaveFirstByte		2409962	1					
ANR	2410000	IdentifierDeclStatement	short reducedLength = lengthOfSequence - 1 ;	824:2:28431:28473	2409962	8	True				
ANR	2410001	IdentifierDecl	reducedLength = lengthOfSequence - 1		2409962	0					
ANR	2410002	IdentifierDeclType	short		2409962	0					
ANR	2410003	Identifier	reducedLength		2409962	1					
ANR	2410004	AssignmentExpression	reducedLength = lengthOfSequence - 1		2409962	2		=			
ANR	2410005	Identifier	reducedLength		2409962	0					
ANR	2410006	AdditiveExpression	lengthOfSequence - 1		2409962	1		-			
ANR	2410007	Identifier	lengthOfSequence		2409962	0					
ANR	2410008	PrimaryExpression	1		2409962	1					
ANR	2410009	ExpressionStatement	pSaveFirstByte = currentPosition ( pCommandList )	829:2:28671:28717	2409962	9	True				
ANR	2410010	AssignmentExpression	pSaveFirstByte = currentPosition ( pCommandList )		2409962	0		=			
ANR	2410011	Identifier	pSaveFirstByte		2409962	0					
ANR	2410012	CallExpression	currentPosition ( pCommandList )		2409962	1					
ANR	2410013	Callee	currentPosition		2409962	0					
ANR	2410014	Identifier	currentPosition		2409962	0					
ANR	2410015	ArgumentList	pCommandList		2409962	1					
ANR	2410016	Argument	pCommandList		2409962	0					
ANR	2410017	Identifier	pCommandList		2409962	0					
ANR	2410018	ExpressionStatement	"addByte ( pCommandList , 0 )"	830:2:28721:28764	2409962	10	True				
ANR	2410019	CallExpression	"addByte ( pCommandList , 0 )"		2409962	0					
ANR	2410020	Callee	addByte		2409962	0					
ANR	2410021	Identifier	addByte		2409962	0					
ANR	2410022	ArgumentList	pCommandList		2409962	1					
ANR	2410023	Argument	pCommandList		2409962	0					
ANR	2410024	Identifier	pCommandList		2409962	0					
ANR	2410025	Argument	0		2409962	1					
ANR	2410026	PrimaryExpression	0		2409962	0					
ANR	2410027	IfStatement	if ( offset >= MAX_OFFSET )		2409962	11					
ANR	2410028	Condition	offset >= MAX_OFFSET	834:6:28795:28814	2409962	0	True				
ANR	2410029	RelationalExpression	offset >= MAX_OFFSET		2409962	0		>=			
ANR	2410030	Identifier	offset		2409962	0					
ANR	2410031	Identifier	MAX_OFFSET		2409962	1					
ANR	2410032	CompoundStatement		21:28:616:616	2409962	1					
ANR	2410033	ExpressionStatement	"addCodedNumber ( pCommandList , offset - MAX_OFFSET )"	835:4:28823:28871	2409962	0	True				
ANR	2410034	CallExpression	"addCodedNumber ( pCommandList , offset - MAX_OFFSET )"		2409962	0					
ANR	2410035	Callee	addCodedNumber		2409962	0					
ANR	2410036	Identifier	addCodedNumber		2409962	0					
ANR	2410037	ArgumentList	pCommandList		2409962	1					
ANR	2410038	Argument	pCommandList		2409962	0					
ANR	2410039	Identifier	pCommandList		2409962	0					
ANR	2410040	Argument	offset - MAX_OFFSET		2409962	1					
ANR	2410041	AdditiveExpression	offset - MAX_OFFSET		2409962	0		-			
ANR	2410042	Identifier	offset		2409962	0					
ANR	2410043	Identifier	MAX_OFFSET		2409962	1					
ANR	2410044	ExpressionStatement	tmpFirstByte |= MAX_OFFSET << POSITION_OF_OFFSET	836:4:28877:28925	2409962	1	True				
ANR	2410045	AssignmentExpression	tmpFirstByte |= MAX_OFFSET << POSITION_OF_OFFSET		2409962	0		|=			
ANR	2410046	Identifier	tmpFirstByte		2409962	0					
ANR	2410047	ShiftExpression	MAX_OFFSET << POSITION_OF_OFFSET		2409962	1		<<			
ANR	2410048	Identifier	MAX_OFFSET		2409962	0					
ANR	2410049	Identifier	POSITION_OF_OFFSET		2409962	1					
ANR	2410050	ElseStatement	else		2409962	0					
ANR	2410051	ExpressionStatement	tmpFirstByte |= offset << POSITION_OF_OFFSET	839:4:28942:28986	2409962	0	True				
ANR	2410052	AssignmentExpression	tmpFirstByte |= offset << POSITION_OF_OFFSET		2409962	0		|=			
ANR	2410053	Identifier	tmpFirstByte		2409962	0					
ANR	2410054	ShiftExpression	offset << POSITION_OF_OFFSET		2409962	1		<<			
ANR	2410055	Identifier	offset		2409962	0					
ANR	2410056	Identifier	POSITION_OF_OFFSET		2409962	1					
ANR	2410057	IfStatement	if ( reducedLength >= MAX_LENGTH )		2409962	12					
ANR	2410058	Condition	reducedLength >= MAX_LENGTH	841:6:28995:29021	2409962	0	True				
ANR	2410059	RelationalExpression	reducedLength >= MAX_LENGTH		2409962	0		>=			
ANR	2410060	Identifier	reducedLength		2409962	0					
ANR	2410061	Identifier	MAX_LENGTH		2409962	1					
ANR	2410062	CompoundStatement		28:35:823:823	2409962	1					
ANR	2410063	ExpressionStatement	"addCodedNumber ( pCommandList , reducedLength - MAX_LENGTH )"	842:4:29030:29085	2409962	0	True				
ANR	2410064	CallExpression	"addCodedNumber ( pCommandList , reducedLength - MAX_LENGTH )"		2409962	0					
ANR	2410065	Callee	addCodedNumber		2409962	0					
ANR	2410066	Identifier	addCodedNumber		2409962	0					
ANR	2410067	ArgumentList	pCommandList		2409962	1					
ANR	2410068	Argument	pCommandList		2409962	0					
ANR	2410069	Identifier	pCommandList		2409962	0					
ANR	2410070	Argument	reducedLength - MAX_LENGTH		2409962	1					
ANR	2410071	AdditiveExpression	reducedLength - MAX_LENGTH		2409962	0		-			
ANR	2410072	Identifier	reducedLength		2409962	0					
ANR	2410073	Identifier	MAX_LENGTH		2409962	1					
ANR	2410074	ExpressionStatement	tmpFirstByte |= MAX_LENGTH	843:4:29091:29118	2409962	1	True				
ANR	2410075	AssignmentExpression	tmpFirstByte |= MAX_LENGTH		2409962	0		|=			
ANR	2410076	Identifier	tmpFirstByte		2409962	0					
ANR	2410077	Identifier	MAX_LENGTH		2409962	1					
ANR	2410078	ElseStatement	else		2409962	0					
ANR	2410079	ExpressionStatement	tmpFirstByte |= reducedLength	846:4:29135:29165	2409962	0	True				
ANR	2410080	AssignmentExpression	tmpFirstByte |= reducedLength		2409962	0		|=			
ANR	2410081	Identifier	tmpFirstByte		2409962	0					
ANR	2410082	Identifier	reducedLength		2409962	1					
ANR	2410083	ExpressionStatement	"addArray ( pCommandList , pSequence , lengthOfSequence )"	849:2:29212:29263	2409962	13	True				
ANR	2410084	CallExpression	"addArray ( pCommandList , pSequence , lengthOfSequence )"		2409962	0					
ANR	2410085	Callee	addArray		2409962	0					
ANR	2410086	Identifier	addArray		2409962	0					
ANR	2410087	ArgumentList	pCommandList		2409962	1					
ANR	2410088	Argument	pCommandList		2409962	0					
ANR	2410089	Identifier	pCommandList		2409962	0					
ANR	2410090	Argument	pSequence		2409962	1					
ANR	2410091	Identifier	pSequence		2409962	0					
ANR	2410092	Argument	lengthOfSequence		2409962	2					
ANR	2410093	Identifier	lengthOfSequence		2409962	0					
ANR	2410094	ExpressionStatement	* pSaveFirstByte = tmpFirstByte	853:2:29320:29350	2409962	14	True				
ANR	2410095	AssignmentExpression	* pSaveFirstByte = tmpFirstByte		2409962	0		=			
ANR	2410096	UnaryOperationExpression	* pSaveFirstByte		2409962	0					
ANR	2410097	UnaryOperator	*		2409962	0					
ANR	2410098	Identifier	pSaveFirstByte		2409962	1					
ANR	2410099	Identifier	tmpFirstByte		2409962	1					
ANR	2410100	ReturnStatement	return ;	855:2:29355:29362	2409962	15	True				
ANR	2410101	ReturnType	static void		2409962	1					
ANR	2410102	Identifier	makeSequenceWithoutRepeat		2409962	2					
ANR	2410103	ParameterList	"Byte * pSequence , short lengthOfSequence , ByteList * pCommandList , short offset"		2409962	3					
ANR	2410104	Parameter	Byte * pSequence	811:34:27991:28010	2409962	0	True				
ANR	2410105	ParameterType	Byte *		2409962	0					
ANR	2410106	Identifier	pSequence		2409962	1					
ANR	2410107	Parameter	short lengthOfSequence	812:34:28047:28073	2409962	1	True				
ANR	2410108	ParameterType	short		2409962	0					
ANR	2410109	Identifier	lengthOfSequence		2409962	1					
ANR	2410110	Parameter	ByteList * pCommandList	813:34:28110:28132	2409962	2	True				
ANR	2410111	ParameterType	ByteList *		2409962	0					
ANR	2410112	Identifier	pCommandList		2409962	1					
ANR	2410113	Parameter	short offset	814:34:28169:28185	2409962	3	True				
ANR	2410114	ParameterType	short		2409962	0					
ANR	2410115	Identifier	offset		2409962	1					
ANR	2410116	CFGEntryNode	ENTRY		2409962		True				
ANR	2410117	CFGExitNode	EXIT		2409962		True				
ANR	2410118	Symbol	lengthOfSequence		2409962						
ANR	2410119	Symbol	reducedLength		2409962						
ANR	2410120	Symbol	offset		2409962						
ANR	2410121	Symbol	pSaveFirstByte		2409962						
ANR	2410122	Symbol	MAX_OFFSET		2409962						
ANR	2410123	Symbol	currentPosition		2409962						
ANR	2410124	Symbol	POSITION_OF_OFFSET		2409962						
ANR	2410125	Symbol	tmpFirstByte		2409962						
ANR	2410126	Symbol	pSequence		2409962						
ANR	2410127	Symbol	* pSaveFirstByte		2409962						
ANR	2410128	Symbol	pCommandList		2409962						
ANR	2410129	Symbol	MAX_LENGTH		2409962						
ANR	2410130	Function	makeSequenceWithRepeat	861:0:29439:30897							
ANR	2410131	FunctionDef	"makeSequenceWithRepeat (Byte * pSequence , short lengthOfSequence , ByteList * pCommandList , short offset)"		2410130	0					
ANR	2410132	CompoundStatement		865:65:29718:30897	2410130	0					
ANR	2410133	Statement	static	869:2:29761:29766	2410130	0	True				
ANR	2410134	IdentifierDeclStatement	const short MAX_OFFSET = 3 ;	869:9:29768:29802	2410130	1	True				
ANR	2410135	IdentifierDecl	MAX_OFFSET = 3		2410130	0					
ANR	2410136	IdentifierDeclType	const short		2410130	0					
ANR	2410137	Identifier	MAX_OFFSET		2410130	1					
ANR	2410138	AssignmentExpression	MAX_OFFSET = 3		2410130	2		=			
ANR	2410139	Identifier	MAX_OFFSET		2410130	0					
ANR	2410140	PrimaryExpression	3		2410130	1					
ANR	2410141	Statement	static	870:2:29806:29811	2410130	2	True				
ANR	2410142	IdentifierDeclStatement	const short POSITION_OF_OFFSET = 5 ;	870:9:29813:29847	2410130	3	True				
ANR	2410143	IdentifierDecl	POSITION_OF_OFFSET = 5		2410130	0					
ANR	2410144	IdentifierDeclType	const short		2410130	0					
ANR	2410145	Identifier	POSITION_OF_OFFSET		2410130	1					
ANR	2410146	AssignmentExpression	POSITION_OF_OFFSET = 5		2410130	2		=			
ANR	2410147	Identifier	POSITION_OF_OFFSET		2410130	0					
ANR	2410148	PrimaryExpression	5		2410130	1					
ANR	2410149	Statement	static	871:2:29851:29856	2410130	4	True				
ANR	2410150	IdentifierDeclStatement	const short MAX_LENGTH = 31 ;	871:9:29858:29894	2410130	5	True				
ANR	2410151	IdentifierDecl	MAX_LENGTH = 31		2410130	0					
ANR	2410152	IdentifierDeclType	const short		2410130	0					
ANR	2410153	Identifier	MAX_LENGTH		2410130	1					
ANR	2410154	AssignmentExpression	MAX_LENGTH = 31		2410130	2		=			
ANR	2410155	Identifier	MAX_LENGTH		2410130	0					
ANR	2410156	PrimaryExpression	31		2410130	1					
ANR	2410157	IdentifierDeclStatement	Byte tmpFirstByte = 0x80 ;	873:2:29899:29923	2410130	6	True				
ANR	2410158	IdentifierDecl	tmpFirstByte = 0x80		2410130	0					
ANR	2410159	IdentifierDeclType	Byte		2410130	0					
ANR	2410160	Identifier	tmpFirstByte		2410130	1					
ANR	2410161	AssignmentExpression	tmpFirstByte = 0x80		2410130	2		=			
ANR	2410162	Identifier	tmpFirstByte		2410130	0					
ANR	2410163	PrimaryExpression	0x80		2410130	1					
ANR	2410164	IdentifierDeclStatement	Byte * pSaveFirstByte ;	874:2:29927:29948	2410130	7	True				
ANR	2410165	IdentifierDecl	* pSaveFirstByte		2410130	0					
ANR	2410166	IdentifierDeclType	Byte *		2410130	0					
ANR	2410167	Identifier	pSaveFirstByte		2410130	1					
ANR	2410168	IdentifierDeclStatement	short reducedLength = lengthOfSequence - 2 ;	875:2:29952:29994	2410130	8	True				
ANR	2410169	IdentifierDecl	reducedLength = lengthOfSequence - 2		2410130	0					
ANR	2410170	IdentifierDeclType	short		2410130	0					
ANR	2410171	Identifier	reducedLength		2410130	1					
ANR	2410172	AssignmentExpression	reducedLength = lengthOfSequence - 2		2410130	2		=			
ANR	2410173	Identifier	reducedLength		2410130	0					
ANR	2410174	AdditiveExpression	lengthOfSequence - 2		2410130	1		-			
ANR	2410175	Identifier	lengthOfSequence		2410130	0					
ANR	2410176	PrimaryExpression	2		2410130	1					
ANR	2410177	ExpressionStatement	pSaveFirstByte = currentPosition ( pCommandList )	880:2:30193:30239	2410130	9	True				
ANR	2410178	AssignmentExpression	pSaveFirstByte = currentPosition ( pCommandList )		2410130	0		=			
ANR	2410179	Identifier	pSaveFirstByte		2410130	0					
ANR	2410180	CallExpression	currentPosition ( pCommandList )		2410130	1					
ANR	2410181	Callee	currentPosition		2410130	0					
ANR	2410182	Identifier	currentPosition		2410130	0					
ANR	2410183	ArgumentList	pCommandList		2410130	1					
ANR	2410184	Argument	pCommandList		2410130	0					
ANR	2410185	Identifier	pCommandList		2410130	0					
ANR	2410186	ExpressionStatement	"addByte ( pCommandList , 0 )"	881:2:30243:30286	2410130	10	True				
ANR	2410187	CallExpression	"addByte ( pCommandList , 0 )"		2410130	0					
ANR	2410188	Callee	addByte		2410130	0					
ANR	2410189	Identifier	addByte		2410130	0					
ANR	2410190	ArgumentList	pCommandList		2410130	1					
ANR	2410191	Argument	pCommandList		2410130	0					
ANR	2410192	Identifier	pCommandList		2410130	0					
ANR	2410193	Argument	0		2410130	1					
ANR	2410194	PrimaryExpression	0		2410130	0					
ANR	2410195	IfStatement	if ( offset >= MAX_OFFSET )		2410130	11					
ANR	2410196	Condition	offset >= MAX_OFFSET	885:6:30317:30336	2410130	0	True				
ANR	2410197	RelationalExpression	offset >= MAX_OFFSET		2410130	0		>=			
ANR	2410198	Identifier	offset		2410130	0					
ANR	2410199	Identifier	MAX_OFFSET		2410130	1					
ANR	2410200	CompoundStatement		21:28:620:620	2410130	1					
ANR	2410201	ExpressionStatement	"addCodedNumber ( pCommandList , offset - MAX_OFFSET )"	886:4:30345:30394	2410130	0	True				
ANR	2410202	CallExpression	"addCodedNumber ( pCommandList , offset - MAX_OFFSET )"		2410130	0					
ANR	2410203	Callee	addCodedNumber		2410130	0					
ANR	2410204	Identifier	addCodedNumber		2410130	0					
ANR	2410205	ArgumentList	pCommandList		2410130	1					
ANR	2410206	Argument	pCommandList		2410130	0					
ANR	2410207	Identifier	pCommandList		2410130	0					
ANR	2410208	Argument	offset - MAX_OFFSET		2410130	1					
ANR	2410209	AdditiveExpression	offset - MAX_OFFSET		2410130	0		-			
ANR	2410210	Identifier	offset		2410130	0					
ANR	2410211	Identifier	MAX_OFFSET		2410130	1					
ANR	2410212	ExpressionStatement	tmpFirstByte |= MAX_OFFSET << POSITION_OF_OFFSET	887:4:30400:30448	2410130	1	True				
ANR	2410213	AssignmentExpression	tmpFirstByte |= MAX_OFFSET << POSITION_OF_OFFSET		2410130	0		|=			
ANR	2410214	Identifier	tmpFirstByte		2410130	0					
ANR	2410215	ShiftExpression	MAX_OFFSET << POSITION_OF_OFFSET		2410130	1		<<			
ANR	2410216	Identifier	MAX_OFFSET		2410130	0					
ANR	2410217	Identifier	POSITION_OF_OFFSET		2410130	1					
ANR	2410218	ElseStatement	else		2410130	0					
ANR	2410219	ExpressionStatement	tmpFirstByte |= offset << POSITION_OF_OFFSET	890:4:30465:30509	2410130	0	True				
ANR	2410220	AssignmentExpression	tmpFirstByte |= offset << POSITION_OF_OFFSET		2410130	0		|=			
ANR	2410221	Identifier	tmpFirstByte		2410130	0					
ANR	2410222	ShiftExpression	offset << POSITION_OF_OFFSET		2410130	1		<<			
ANR	2410223	Identifier	offset		2410130	0					
ANR	2410224	Identifier	POSITION_OF_OFFSET		2410130	1					
ANR	2410225	IfStatement	if ( reducedLength >= MAX_LENGTH )		2410130	12					
ANR	2410226	Condition	reducedLength >= MAX_LENGTH	892:6:30518:30544	2410130	0	True				
ANR	2410227	RelationalExpression	reducedLength >= MAX_LENGTH		2410130	0		>=			
ANR	2410228	Identifier	reducedLength		2410130	0					
ANR	2410229	Identifier	MAX_LENGTH		2410130	1					
ANR	2410230	CompoundStatement		28:35:828:828	2410130	1					
ANR	2410231	ExpressionStatement	"addCodedNumber ( pCommandList , reducedLength - MAX_LENGTH )"	893:4:30553:30608	2410130	0	True				
ANR	2410232	CallExpression	"addCodedNumber ( pCommandList , reducedLength - MAX_LENGTH )"		2410130	0					
ANR	2410233	Callee	addCodedNumber		2410130	0					
ANR	2410234	Identifier	addCodedNumber		2410130	0					
ANR	2410235	ArgumentList	pCommandList		2410130	1					
ANR	2410236	Argument	pCommandList		2410130	0					
ANR	2410237	Identifier	pCommandList		2410130	0					
ANR	2410238	Argument	reducedLength - MAX_LENGTH		2410130	1					
ANR	2410239	AdditiveExpression	reducedLength - MAX_LENGTH		2410130	0		-			
ANR	2410240	Identifier	reducedLength		2410130	0					
ANR	2410241	Identifier	MAX_LENGTH		2410130	1					
ANR	2410242	ExpressionStatement	tmpFirstByte |= MAX_LENGTH	894:4:30614:30641	2410130	1	True				
ANR	2410243	AssignmentExpression	tmpFirstByte |= MAX_LENGTH		2410130	0		|=			
ANR	2410244	Identifier	tmpFirstByte		2410130	0					
ANR	2410245	Identifier	MAX_LENGTH		2410130	1					
ANR	2410246	ElseStatement	else		2410130	0					
ANR	2410247	ExpressionStatement	tmpFirstByte |= reducedLength	897:4:30658:30688	2410130	0	True				
ANR	2410248	AssignmentExpression	tmpFirstByte |= reducedLength		2410130	0		|=			
ANR	2410249	Identifier	tmpFirstByte		2410130	0					
ANR	2410250	Identifier	reducedLength		2410130	1					
ANR	2410251	ExpressionStatement	"addByte ( pCommandList , * pSequence )"	900:2:30762:30796	2410130	13	True				
ANR	2410252	CallExpression	"addByte ( pCommandList , * pSequence )"		2410130	0					
ANR	2410253	Callee	addByte		2410130	0					
ANR	2410254	Identifier	addByte		2410130	0					
ANR	2410255	ArgumentList	pCommandList		2410130	1					
ANR	2410256	Argument	pCommandList		2410130	0					
ANR	2410257	Identifier	pCommandList		2410130	0					
ANR	2410258	Argument	* pSequence		2410130	1					
ANR	2410259	UnaryOperationExpression	* pSequence		2410130	0					
ANR	2410260	UnaryOperator	*		2410130	0					
ANR	2410261	Identifier	pSequence		2410130	1					
ANR	2410262	ExpressionStatement	* pSaveFirstByte = tmpFirstByte	904:2:30853:30883	2410130	14	True				
ANR	2410263	AssignmentExpression	* pSaveFirstByte = tmpFirstByte		2410130	0		=			
ANR	2410264	UnaryOperationExpression	* pSaveFirstByte		2410130	0					
ANR	2410265	UnaryOperator	*		2410130	0					
ANR	2410266	Identifier	pSaveFirstByte		2410130	1					
ANR	2410267	Identifier	tmpFirstByte		2410130	1					
ANR	2410268	ReturnStatement	return ;	906:2:30888:30895	2410130	15	True				
ANR	2410269	ReturnType	static void		2410130	1					
ANR	2410270	Identifier	makeSequenceWithRepeat		2410130	2					
ANR	2410271	ParameterList	"Byte * pSequence , short lengthOfSequence , ByteList * pCommandList , short offset"		2410130	3					
ANR	2410272	Parameter	Byte * pSequence	862:34:29509:29528	2410130	0	True				
ANR	2410273	ParameterType	Byte *		2410130	0					
ANR	2410274	Identifier	pSequence		2410130	1					
ANR	2410275	Parameter	short lengthOfSequence	863:34:29565:29591	2410130	1	True				
ANR	2410276	ParameterType	short		2410130	0					
ANR	2410277	Identifier	lengthOfSequence		2410130	1					
ANR	2410278	Parameter	ByteList * pCommandList	864:34:29628:29650	2410130	2	True				
ANR	2410279	ParameterType	ByteList *		2410130	0					
ANR	2410280	Identifier	pCommandList		2410130	1					
ANR	2410281	Parameter	short offset	865:34:29687:29703	2410130	3	True				
ANR	2410282	ParameterType	short		2410130	0					
ANR	2410283	Identifier	offset		2410130	1					
ANR	2410284	CFGEntryNode	ENTRY		2410130		True				
ANR	2410285	CFGExitNode	EXIT		2410130		True				
ANR	2410286	Symbol	lengthOfSequence		2410130						
ANR	2410287	Symbol	reducedLength		2410130						
ANR	2410288	Symbol	offset		2410130						
ANR	2410289	Symbol	pSaveFirstByte		2410130						
ANR	2410290	Symbol	currentPosition		2410130						
ANR	2410291	Symbol	POSITION_OF_OFFSET		2410130						
ANR	2410292	Symbol	pSequence		2410130						
ANR	2410293	Symbol	* pSaveFirstByte		2410130						
ANR	2410294	Symbol	MAX_LENGTH		2410130						
ANR	2410295	Symbol	* pSequence		2410130						
ANR	2410296	Symbol	MAX_OFFSET		2410130						
ANR	2410297	Symbol	tmpFirstByte		2410130						
ANR	2410298	Symbol	pCommandList		2410130						
ANR	2410299	Function	initByteList	912:0:30982:31152							
ANR	2410300	FunctionDef	"initByteList (ByteList * list , Byte * array , short maxSize , short initCurrent)"		2410299	0					
ANR	2410301	CompoundStatement		912:88:31070:31152	2410299	0					
ANR	2410302	ExpressionStatement	list -> current = initCurrent	913:2:31074:31101	2410299	0	True				
ANR	2410303	AssignmentExpression	list -> current = initCurrent		2410299	0		=			
ANR	2410304	PtrMemberAccess	list -> current		2410299	0					
ANR	2410305	Identifier	list		2410299	0					
ANR	2410306	Identifier	current		2410299	1					
ANR	2410307	Identifier	initCurrent		2410299	1					
ANR	2410308	ExpressionStatement	list -> maxSize = maxSize	914:2:31105:31128	2410299	1	True				
ANR	2410309	AssignmentExpression	list -> maxSize = maxSize		2410299	0		=			
ANR	2410310	PtrMemberAccess	list -> maxSize		2410299	0					
ANR	2410311	Identifier	list		2410299	0					
ANR	2410312	Identifier	maxSize		2410299	1					
ANR	2410313	Identifier	maxSize		2410299	1					
ANR	2410314	ExpressionStatement	list -> data = array	915:2:31132:31150	2410299	2	True				
ANR	2410315	AssignmentExpression	list -> data = array		2410299	0		=			
ANR	2410316	PtrMemberAccess	list -> data		2410299	0					
ANR	2410317	Identifier	list		2410299	0					
ANR	2410318	Identifier	data		2410299	1					
ANR	2410319	Identifier	array		2410299	1					
ANR	2410320	ReturnType	static void		2410299	1					
ANR	2410321	Identifier	initByteList		2410299	2					
ANR	2410322	ParameterList	"ByteList * list , Byte * array , short maxSize , short initCurrent"		2410299	3					
ANR	2410323	Parameter	ByteList * list	912:25:31007:31020	2410299	0	True				
ANR	2410324	ParameterType	ByteList *		2410299	0					
ANR	2410325	Identifier	list		2410299	1					
ANR	2410326	Parameter	Byte * array	912:41:31023:31033	2410299	1	True				
ANR	2410327	ParameterType	Byte *		2410299	0					
ANR	2410328	Identifier	array		2410299	1					
ANR	2410329	Parameter	short maxSize	912:54:31036:31048	2410299	2	True				
ANR	2410330	ParameterType	short		2410299	0					
ANR	2410331	Identifier	maxSize		2410299	1					
ANR	2410332	Parameter	short initCurrent	912:69:31051:31067	2410299	3	True				
ANR	2410333	ParameterType	short		2410299	0					
ANR	2410334	Identifier	initCurrent		2410299	1					
ANR	2410335	CFGEntryNode	ENTRY		2410299		True				
ANR	2410336	CFGExitNode	EXIT		2410299		True				
ANR	2410337	Symbol	list -> maxSize		2410299						
ANR	2410338	Symbol	initCurrent		2410299						
ANR	2410339	Symbol	array		2410299						
ANR	2410340	Symbol	* list		2410299						
ANR	2410341	Symbol	maxSize		2410299						
ANR	2410342	Symbol	list -> current		2410299						
ANR	2410343	Symbol	list		2410299						
ANR	2410344	Symbol	list -> data		2410299						
ANR	2410345	Function	addByte	921:0:31195:31373							
ANR	2410346	FunctionDef	"addByte (ByteList * list , Byte value)"		2410345	0					
ANR	2410347	CompoundStatement		921:48:31243:31373	2410345	0					
ANR	2410348	IfStatement	if ( list -> current < list -> maxSize )		2410345	0					
ANR	2410349	Condition	list -> current < list -> maxSize	922:5:31250:31278	2410345	0	True				
ANR	2410350	RelationalExpression	list -> current < list -> maxSize		2410345	0		<			
ANR	2410351	PtrMemberAccess	list -> current		2410345	0					
ANR	2410352	Identifier	list		2410345	0					
ANR	2410353	Identifier	current		2410345	1					
ANR	2410354	PtrMemberAccess	list -> maxSize		2410345	1					
ANR	2410355	Identifier	list		2410345	0					
ANR	2410356	Identifier	maxSize		2410345	1					
ANR	2410357	ExpressionStatement	list -> data [ list -> current ++ ] = value	923:2:31283:31318	2410345	1	True				
ANR	2410358	AssignmentExpression	list -> data [ list -> current ++ ] = value		2410345	0		=			
ANR	2410359	ArrayIndexing	list -> data [ list -> current ++ ]		2410345	0					
ANR	2410360	PtrMemberAccess	list -> data		2410345	0					
ANR	2410361	Identifier	list		2410345	0					
ANR	2410362	Identifier	data		2410345	1					
ANR	2410363	PostIncDecOperationExpression	list -> current ++		2410345	1					
ANR	2410364	PtrMemberAccess	list -> current		2410345	0					
ANR	2410365	Identifier	list		2410345	0					
ANR	2410366	Identifier	current		2410345	1					
ANR	2410367	IncDec	++		2410345	1					
ANR	2410368	Identifier	value		2410345	1					
ANR	2410369	ElseStatement	else		2410345	0					
ANR	2410370	ExpressionStatement	"eprintf ( ""Could not add byte to command\\n"" )"	925:3:31329:31371	2410345	0	True				
ANR	2410371	CallExpression	"eprintf ( ""Could not add byte to command\\n"" )"		2410345	0					
ANR	2410372	Callee	eprintf		2410345	0					
ANR	2410373	Identifier	eprintf		2410345	0					
ANR	2410374	ArgumentList	"""Could not add byte to command\\n"""		2410345	1					
ANR	2410375	Argument	"""Could not add byte to command\\n"""		2410345	0					
ANR	2410376	PrimaryExpression	"""Could not add byte to command\\n"""		2410345	0					
ANR	2410377	ReturnType	static void		2410345	1					
ANR	2410378	Identifier	addByte		2410345	2					
ANR	2410379	ParameterList	"ByteList * list , Byte value"		2410345	3					
ANR	2410380	Parameter	ByteList * list	921:20:31215:31228	2410345	0	True				
ANR	2410381	ParameterType	ByteList *		2410345	0					
ANR	2410382	Identifier	list		2410345	1					
ANR	2410383	Parameter	Byte value	921:35:31230:31239	2410345	1	True				
ANR	2410384	ParameterType	Byte		2410345	0					
ANR	2410385	Identifier	value		2410345	1					
ANR	2410386	CFGEntryNode	ENTRY		2410345		True				
ANR	2410387	CFGExitNode	EXIT		2410345		True				
ANR	2410388	Symbol	list -> maxSize		2410345						
ANR	2410389	Symbol	* list -> data		2410345						
ANR	2410390	Symbol	* * list		2410345						
ANR	2410391	Symbol	* list		2410345						
ANR	2410392	Symbol	list -> current		2410345						
ANR	2410393	Symbol	list		2410345						
ANR	2410394	Symbol	list -> data		2410345						
ANR	2410395	Symbol	value		2410345						
ANR	2410396	Function	addArray	932:0:31429:31690							
ANR	2410397	FunctionDef	"addArray (ByteList * list , Byte * source , short nb)"		2410396	0					
ANR	2410398	CompoundStatement		932:60:31489:31690	2410396	0					
ANR	2410399	IfStatement	if ( list -> current <= list -> maxSize - nb )		2410396	0					
ANR	2410400	Condition	list -> current <= list -> maxSize - nb	933:6:31497:31531	2410396	0	True				
ANR	2410401	RelationalExpression	list -> current <= list -> maxSize - nb		2410396	0		<=			
ANR	2410402	PtrMemberAccess	list -> current		2410396	0					
ANR	2410403	Identifier	list		2410396	0					
ANR	2410404	Identifier	current		2410396	1					
ANR	2410405	AdditiveExpression	list -> maxSize - nb		2410396	1		-			
ANR	2410406	PtrMemberAccess	list -> maxSize		2410396	0					
ANR	2410407	Identifier	list		2410396	0					
ANR	2410408	Identifier	maxSize		2410396	1					
ANR	2410409	Identifier	nb		2410396	1					
ANR	2410410	CompoundStatement		3:2:46:46	2410396	1					
ANR	2410411	ExpressionStatement	"memcpy ( list -> data + list -> current , source , ( size_t ) nb )"	935:4:31542:31598	2410396	0	True				
ANR	2410412	CallExpression	"memcpy ( list -> data + list -> current , source , ( size_t ) nb )"		2410396	0					
ANR	2410413	Callee	memcpy		2410396	0					
ANR	2410414	Identifier	memcpy		2410396	0					
ANR	2410415	ArgumentList	list -> data + list -> current		2410396	1					
ANR	2410416	Argument	list -> data + list -> current		2410396	0					
ANR	2410417	AdditiveExpression	list -> data + list -> current		2410396	0		+			
ANR	2410418	PtrMemberAccess	list -> data		2410396	0					
ANR	2410419	Identifier	list		2410396	0					
ANR	2410420	Identifier	data		2410396	1					
ANR	2410421	PtrMemberAccess	list -> current		2410396	1					
ANR	2410422	Identifier	list		2410396	0					
ANR	2410423	Identifier	current		2410396	1					
ANR	2410424	Argument	source		2410396	1					
ANR	2410425	Identifier	source		2410396	0					
ANR	2410426	Argument	( size_t ) nb		2410396	2					
ANR	2410427	CastExpression	( size_t ) nb		2410396	0					
ANR	2410428	CastTarget	size_t		2410396	0					
ANR	2410429	Identifier	nb		2410396	1					
ANR	2410430	ExpressionStatement	list -> current += nb	936:4:31604:31623	2410396	1	True				
ANR	2410431	AssignmentExpression	list -> current += nb		2410396	0		+=			
ANR	2410432	PtrMemberAccess	list -> current		2410396	0					
ANR	2410433	Identifier	list		2410396	0					
ANR	2410434	Identifier	current		2410396	1					
ANR	2410435	Identifier	nb		2410396	1					
ANR	2410436	ElseStatement	else		2410396	0					
ANR	2410437	ExpressionStatement	"eprintf ( ""Could not add byte array to command\\n"" )"	939:4:31640:31688	2410396	0	True				
ANR	2410438	CallExpression	"eprintf ( ""Could not add byte array to command\\n"" )"		2410396	0					
ANR	2410439	Callee	eprintf		2410396	0					
ANR	2410440	Identifier	eprintf		2410396	0					
ANR	2410441	ArgumentList	"""Could not add byte array to command\\n"""		2410396	1					
ANR	2410442	Argument	"""Could not add byte array to command\\n"""		2410396	0					
ANR	2410443	PrimaryExpression	"""Could not add byte array to command\\n"""		2410396	0					
ANR	2410444	ReturnType	static void		2410396	1					
ANR	2410445	Identifier	addArray		2410396	2					
ANR	2410446	ParameterList	"ByteList * list , Byte * source , short nb"		2410396	3					
ANR	2410447	Parameter	ByteList * list	932:21:31450:31463	2410396	0	True				
ANR	2410448	ParameterType	ByteList *		2410396	0					
ANR	2410449	Identifier	list		2410396	1					
ANR	2410450	Parameter	Byte * source	932:37:31466:31477	2410396	1	True				
ANR	2410451	ParameterType	Byte *		2410396	0					
ANR	2410452	Identifier	source		2410396	1					
ANR	2410453	Parameter	short nb	932:51:31480:31487	2410396	2	True				
ANR	2410454	ParameterType	short		2410396	0					
ANR	2410455	Identifier	nb		2410396	1					
ANR	2410456	CFGEntryNode	ENTRY		2410396		True				
ANR	2410457	CFGExitNode	EXIT		2410396		True				
ANR	2410458	Symbol	list -> maxSize		2410396						
ANR	2410459	Symbol	nb		2410396						
ANR	2410460	Symbol	* list		2410396						
ANR	2410461	Symbol	list -> current		2410396						
ANR	2410462	Symbol	source		2410396						
ANR	2410463	Symbol	list		2410396						
ANR	2410464	Symbol	list -> data		2410396						
ANR	2410465	Function	addNBytes	946:0:31735:32053							
ANR	2410466	FunctionDef	"addNBytes (ByteList * list , Byte value , short nb)"		2410465	0					
ANR	2410467	CompoundStatement		946:60:31795:32053	2410465	0					
ANR	2410468	IdentifierDeclStatement	int i ;	947:2:31799:31804	2410465	0	True				
ANR	2410469	IdentifierDecl	i		2410465	0					
ANR	2410470	IdentifierDeclType	int		2410465	0					
ANR	2410471	Identifier	i		2410465	1					
ANR	2410472	IfStatement	if ( list -> current <= list -> maxSize - nb )		2410465	1					
ANR	2410473	Condition	list -> current <= list -> maxSize - nb	948:6:31812:31846	2410465	0	True				
ANR	2410474	RelationalExpression	list -> current <= list -> maxSize - nb		2410465	0		<=			
ANR	2410475	PtrMemberAccess	list -> current		2410465	0					
ANR	2410476	Identifier	list		2410465	0					
ANR	2410477	Identifier	current		2410465	1					
ANR	2410478	AdditiveExpression	list -> maxSize - nb		2410465	1		-			
ANR	2410479	PtrMemberAccess	list -> maxSize		2410465	0					
ANR	2410480	Identifier	list		2410465	0					
ANR	2410481	Identifier	maxSize		2410465	1					
ANR	2410482	Identifier	nb		2410465	1					
ANR	2410483	CompoundStatement		4:2:55:55	2410465	1					
ANR	2410484	ForStatement	for ( i = list -> current ; i < ( list -> current + nb ) ; i ++ )		2410465	0					
ANR	2410485	ForInit	i = list -> current ;	950:9:31862:31880	2410465	0	True				
ANR	2410486	AssignmentExpression	i = list -> current		2410465	0		=			
ANR	2410487	Identifier	i		2410465	0					
ANR	2410488	PtrMemberAccess	list -> current		2410465	1					
ANR	2410489	Identifier	list		2410465	0					
ANR	2410490	Identifier	current		2410465	1					
ANR	2410491	Condition	i < ( list -> current + nb )	950:29:31882:31905	2410465	1	True				
ANR	2410492	RelationalExpression	i < ( list -> current + nb )		2410465	0		<			
ANR	2410493	Identifier	i		2410465	0					
ANR	2410494	AdditiveExpression	list -> current + nb		2410465	1		+			
ANR	2410495	PtrMemberAccess	list -> current		2410465	0					
ANR	2410496	Identifier	list		2410465	0					
ANR	2410497	Identifier	current		2410465	1					
ANR	2410498	Identifier	nb		2410465	1					
ANR	2410499	PostIncDecOperationExpression	i ++	950:56:31909:31911	2410465	2	True				
ANR	2410500	Identifier	i		2410465	0					
ANR	2410501	IncDec	++		2410465	1					
ANR	2410502	CompoundStatement		6:6:124:124	2410465	3					
ANR	2410503	ExpressionStatement	list -> data [ i ] = value	952:8:31930:31951	2410465	0	True				
ANR	2410504	AssignmentExpression	list -> data [ i ] = value		2410465	0		=			
ANR	2410505	ArrayIndexing	list -> data [ i ]		2410465	0					
ANR	2410506	PtrMemberAccess	list -> data		2410465	0					
ANR	2410507	Identifier	list		2410465	0					
ANR	2410508	Identifier	data		2410465	1					
ANR	2410509	Identifier	i		2410465	1					
ANR	2410510	Identifier	value		2410465	1					
ANR	2410511	ExpressionStatement	list -> current += nb	954:4:31965:31984	2410465	1	True				
ANR	2410512	AssignmentExpression	list -> current += nb		2410465	0		+=			
ANR	2410513	PtrMemberAccess	list -> current		2410465	0					
ANR	2410514	Identifier	list		2410465	0					
ANR	2410515	Identifier	current		2410465	1					
ANR	2410516	Identifier	nb		2410465	1					
ANR	2410517	ElseStatement	else		2410465	0					
ANR	2410518	ExpressionStatement	"eprintf1 ( ""Could not add %d bytes to command\\n"" , nb )"	957:4:32001:32051	2410465	0	True				
ANR	2410519	CallExpression	"eprintf1 ( ""Could not add %d bytes to command\\n"" , nb )"		2410465	0					
ANR	2410520	Callee	eprintf1		2410465	0					
ANR	2410521	Identifier	eprintf1		2410465	0					
ANR	2410522	ArgumentList	"""Could not add %d bytes to command\\n"""		2410465	1					
ANR	2410523	Argument	"""Could not add %d bytes to command\\n"""		2410465	0					
ANR	2410524	PrimaryExpression	"""Could not add %d bytes to command\\n"""		2410465	0					
ANR	2410525	Argument	nb		2410465	1					
ANR	2410526	Identifier	nb		2410465	0					
ANR	2410527	ReturnType	static void		2410465	1					
ANR	2410528	Identifier	addNBytes		2410465	2					
ANR	2410529	ParameterList	"ByteList * list , Byte value , short nb"		2410465	3					
ANR	2410530	Parameter	ByteList * list	946:22:31757:31771	2410465	0	True				
ANR	2410531	ParameterType	ByteList *		2410465	0					
ANR	2410532	Identifier	list		2410465	1					
ANR	2410533	Parameter	Byte value	946:39:31774:31783	2410465	1	True				
ANR	2410534	ParameterType	Byte		2410465	0					
ANR	2410535	Identifier	value		2410465	1					
ANR	2410536	Parameter	short nb	946:51:31786:31793	2410465	2	True				
ANR	2410537	ParameterType	short		2410465	0					
ANR	2410538	Identifier	nb		2410465	1					
ANR	2410539	CFGEntryNode	ENTRY		2410465		True				
ANR	2410540	CFGExitNode	EXIT		2410465		True				
ANR	2410541	Symbol	list -> maxSize		2410465						
ANR	2410542	Symbol	* list -> data		2410465						
ANR	2410543	Symbol	* * list		2410465						
ANR	2410544	Symbol	* i		2410465						
ANR	2410545	Symbol	nb		2410465						
ANR	2410546	Symbol	* list		2410465						
ANR	2410547	Symbol	i		2410465						
ANR	2410548	Symbol	list -> current		2410465						
ANR	2410549	Symbol	list		2410465						
ANR	2410550	Symbol	list -> data		2410465						
ANR	2410551	Symbol	value		2410465						
ANR	2410552	Function	currentPosition	963:0:32098:32186							
ANR	2410553	FunctionDef	currentPosition (ByteList * list)		2410552	0					
ANR	2410554	CompoundStatement		963:47:32145:32186	2410552	0					
ANR	2410555	ReturnStatement	return & ( list -> data [ list -> current ] ) ;	964:2:32149:32184	2410552	0	True				
ANR	2410556	UnaryOperationExpression	& ( list -> data [ list -> current ] )		2410552	0					
ANR	2410557	UnaryOperator	&		2410552	0					
ANR	2410558	ArrayIndexing	list -> data [ list -> current ]		2410552	1					
ANR	2410559	PtrMemberAccess	list -> data		2410552	0					
ANR	2410560	Identifier	list		2410552	0					
ANR	2410561	Identifier	data		2410552	1					
ANR	2410562	PtrMemberAccess	list -> current		2410552	1					
ANR	2410563	Identifier	list		2410552	0					
ANR	2410564	Identifier	current		2410552	1					
ANR	2410565	ReturnType	static Byte *		2410552	1					
ANR	2410566	Identifier	currentPosition		2410552	2					
ANR	2410567	ParameterList	ByteList * list		2410552	3					
ANR	2410568	Parameter	ByteList * list	963:30:32128:32142	2410552	0	True				
ANR	2410569	ParameterType	ByteList *		2410552	0					
ANR	2410570	Identifier	list		2410552	1					
ANR	2410571	CFGEntryNode	ENTRY		2410552		True				
ANR	2410572	CFGExitNode	EXIT		2410552		True				
ANR	2410573	Symbol	* list		2410552						
ANR	2410574	Symbol	list -> current		2410552						
ANR	2410575	Symbol	list		2410552						
ANR	2410576	Symbol	list -> data		2410552						
ANR	2410577	Function	addCodedNumber	974:0:32375:32533							
ANR	2410578	FunctionDef	"addCodedNumber (ByteList * list , short number)"		2410577	0					
ANR	2410579	CompoundStatement		974:57:32432:32533	2410577	0					
ANR	2410580	IdentifierDeclStatement	short q = number / 0xff ;	975:1:32435:32458	2410577	0	True				
ANR	2410581	IdentifierDecl	q = number / 0xff		2410577	0					
ANR	2410582	IdentifierDeclType	short		2410577	0					
ANR	2410583	Identifier	q		2410577	1					
ANR	2410584	AssignmentExpression	q = number / 0xff		2410577	2		=			
ANR	2410585	Identifier	q		2410577	0					
ANR	2410586	MultiplicativeExpression	number / 0xff		2410577	1		/			
ANR	2410587	Identifier	number		2410577	0					
ANR	2410588	PrimaryExpression	0xff		2410577	1					
ANR	2410589	IdentifierDeclStatement	short r = number % 0xff ;	976:1:32461:32484	2410577	1	True				
ANR	2410590	IdentifierDecl	r = number % 0xff		2410577	0					
ANR	2410591	IdentifierDeclType	short		2410577	0					
ANR	2410592	Identifier	r		2410577	1					
ANR	2410593	AssignmentExpression	r = number % 0xff		2410577	2		=			
ANR	2410594	Identifier	r		2410577	0					
ANR	2410595	MultiplicativeExpression	number % 0xff		2410577	1		%			
ANR	2410596	Identifier	number		2410577	0					
ANR	2410597	PrimaryExpression	0xff		2410577	1					
ANR	2410598	ExpressionStatement	"addNBytes ( list , 0xff , q )"	978:1:32488:32512	2410577	2	True				
ANR	2410599	CallExpression	"addNBytes ( list , 0xff , q )"		2410577	0					
ANR	2410600	Callee	addNBytes		2410577	0					
ANR	2410601	Identifier	addNBytes		2410577	0					
ANR	2410602	ArgumentList	list		2410577	1					
ANR	2410603	Argument	list		2410577	0					
ANR	2410604	Identifier	list		2410577	0					
ANR	2410605	Argument	0xff		2410577	1					
ANR	2410606	PrimaryExpression	0xff		2410577	0					
ANR	2410607	Argument	q		2410577	2					
ANR	2410608	Identifier	q		2410577	0					
ANR	2410609	ExpressionStatement	"addByte ( list , r )"	979:1:32515:32530	2410577	3	True				
ANR	2410610	CallExpression	"addByte ( list , r )"		2410577	0					
ANR	2410611	Callee	addByte		2410577	0					
ANR	2410612	Identifier	addByte		2410577	0					
ANR	2410613	ArgumentList	list		2410577	1					
ANR	2410614	Argument	list		2410577	0					
ANR	2410615	Identifier	list		2410577	0					
ANR	2410616	Argument	r		2410577	1					
ANR	2410617	Identifier	r		2410577	0					
ANR	2410618	ReturnType	static void		2410577	1					
ANR	2410619	Identifier	addCodedNumber		2410577	2					
ANR	2410620	ParameterList	"ByteList * list , short number"		2410577	3					
ANR	2410621	Parameter	ByteList * list	974:27:32402:32416	2410577	0	True				
ANR	2410622	ParameterType	ByteList *		2410577	0					
ANR	2410623	Identifier	list		2410577	1					
ANR	2410624	Parameter	short number	974:44:32419:32430	2410577	1	True				
ANR	2410625	ParameterType	short		2410577	0					
ANR	2410626	Identifier	number		2410577	1					
ANR	2410627	CFGEntryNode	ENTRY		2410577		True				
ANR	2410628	CFGExitNode	EXIT		2410577		True				
ANR	2410629	Symbol	number		2410577						
ANR	2410630	Symbol	q		2410577						
ANR	2410631	Symbol	r		2410577						
ANR	2410632	Symbol	list		2410577						
ANR	2410633	Function	isThereEnoughRoom	988:0:32616:32731							
ANR	2410634	FunctionDef	"isThereEnoughRoom (ByteList * list , short biggest)"		2410633	0					
ANR	2410635	CompoundStatement		988:60:32676:32731	2410633	0					
ANR	2410636	ReturnStatement	return ( ( list -> maxSize - list -> current ) >= biggest ) ;	989:2:32680:32729	2410633	0	True				
ANR	2410637	RelationalExpression	( list -> maxSize - list -> current ) >= biggest		2410633	0		>=			
ANR	2410638	AdditiveExpression	list -> maxSize - list -> current		2410633	0		-			
ANR	2410639	PtrMemberAccess	list -> maxSize		2410633	0					
ANR	2410640	Identifier	list		2410633	0					
ANR	2410641	Identifier	maxSize		2410633	1					
ANR	2410642	PtrMemberAccess	list -> current		2410633	1					
ANR	2410643	Identifier	list		2410633	0					
ANR	2410644	Identifier	current		2410633	1					
ANR	2410645	Identifier	biggest		2410633	1					
ANR	2410646	ReturnType	static int		2410633	1					
ANR	2410647	Identifier	isThereEnoughRoom		2410633	2					
ANR	2410648	ParameterList	"ByteList * list , short biggest"		2410633	3					
ANR	2410649	Parameter	ByteList * list	988:29:32645:32659	2410633	0	True				
ANR	2410650	ParameterType	ByteList *		2410633	0					
ANR	2410651	Identifier	list		2410633	1					
ANR	2410652	Parameter	short biggest	988:46:32662:32674	2410633	1	True				
ANR	2410653	ParameterType	short		2410633	0					
ANR	2410654	Identifier	biggest		2410633	1					
ANR	2410655	CFGEntryNode	ENTRY		2410633		True				
ANR	2410656	CFGExitNode	EXIT		2410633		True				
ANR	2410657	Symbol	list -> maxSize		2410633						
ANR	2410658	Symbol	biggest		2410633						
ANR	2410659	Symbol	* list		2410633						
ANR	2410660	Symbol	list -> current		2410633						
ANR	2410661	Symbol	list		2410633						
ANR	2410662	Function	roomLeft	994:0:32770:32850							
ANR	2410663	FunctionDef	roomLeft (ByteList * list)		2410662	0					
ANR	2410664	CompoundStatement		994:38:32808:32850	2410662	0					
ANR	2410665	ReturnStatement	return list -> maxSize - list -> current ;	995:2:32812:32848	2410662	0	True				
ANR	2410666	AdditiveExpression	list -> maxSize - list -> current		2410662	0		-			
ANR	2410667	PtrMemberAccess	list -> maxSize		2410662	0					
ANR	2410668	Identifier	list		2410662	0					
ANR	2410669	Identifier	maxSize		2410662	1					
ANR	2410670	PtrMemberAccess	list -> current		2410662	1					
ANR	2410671	Identifier	list		2410662	0					
ANR	2410672	Identifier	current		2410662	1					
ANR	2410673	ReturnType	static short		2410662	1					
ANR	2410674	Identifier	roomLeft		2410662	2					
ANR	2410675	ParameterList	ByteList * list		2410662	3					
ANR	2410676	Parameter	ByteList * list	994:22:32792:32806	2410662	0	True				
ANR	2410677	ParameterType	ByteList *		2410662	0					
ANR	2410678	Identifier	list		2410662	1					
ANR	2410679	CFGEntryNode	ENTRY		2410662		True				
ANR	2410680	CFGExitNode	EXIT		2410662		True				
ANR	2410681	Symbol	list -> maxSize		2410662						
ANR	2410682	Symbol	* list		2410662						
ANR	2410683	Symbol	list -> current		2410662						
ANR	2410684	Symbol	list		2410662						
ANR	2410685	Function	dumpToPrinter	1001:0:32922:33265							
ANR	2410686	FunctionDef	"dumpToPrinter (ByteList * list , FILE * printStream)"		2410685	0					
ANR	2410687	CompoundStatement		1001:61:32983:33265	2410685	0					
ANR	2410688	IdentifierDeclStatement	short loopCounter ;	1002:2:32987:33004	2410685	0	True				
ANR	2410689	IdentifierDecl	loopCounter		2410685	0					
ANR	2410690	IdentifierDeclType	short		2410685	0					
ANR	2410691	Identifier	loopCounter		2410685	1					
ANR	2410692	ForStatement	for ( loopCounter = 0 ; loopCounter < list -> current ; loopCounter ++ )		2410685	1					
ANR	2410693	ForInit	loopCounter = 0 ;	1005:7:33090:33105	2410685	0	True				
ANR	2410694	AssignmentExpression	loopCounter = 0		2410685	0		=			
ANR	2410695	Identifier	loopCounter		2410685	0					
ANR	2410696	PrimaryExpression	0		2410685	1					
ANR	2410697	Condition	loopCounter < list -> current	1005:24:33107:33133	2410685	1	True				
ANR	2410698	RelationalExpression	loopCounter < list -> current		2410685	0		<			
ANR	2410699	Identifier	loopCounter		2410685	0					
ANR	2410700	PtrMemberAccess	list -> current		2410685	1					
ANR	2410701	Identifier	list		2410685	0					
ANR	2410702	Identifier	current		2410685	1					
ANR	2410703	PostIncDecOperationExpression	loopCounter ++	1005:53:33136:33148	2410685	2	True				
ANR	2410704	Identifier	loopCounter		2410685	0					
ANR	2410705	IncDec	++		2410685	1					
ANR	2410706	CompoundStatement		6:4:171:171	2410685	3					
ANR	2410707	ExpressionStatement	"fputc ( list -> data [ loopCounter ] , printStream )"	1007:6:33163:33205	2410685	0	True				
ANR	2410708	CallExpression	"fputc ( list -> data [ loopCounter ] , printStream )"		2410685	0					
ANR	2410709	Callee	fputc		2410685	0					
ANR	2410710	Identifier	fputc		2410685	0					
ANR	2410711	ArgumentList	list -> data [ loopCounter ]		2410685	1					
ANR	2410712	Argument	list -> data [ loopCounter ]		2410685	0					
ANR	2410713	ArrayIndexing	list -> data [ loopCounter ]		2410685	0					
ANR	2410714	PtrMemberAccess	list -> data		2410685	0					
ANR	2410715	Identifier	list		2410685	0					
ANR	2410716	Identifier	data		2410685	1					
ANR	2410717	Identifier	loopCounter		2410685	1					
ANR	2410718	Argument	printStream		2410685	1					
ANR	2410719	Identifier	printStream		2410685	0					
ANR	2410720	ExpressionStatement	list -> current = 0	1011:2:33246:33263	2410685	2	True				
ANR	2410721	AssignmentExpression	list -> current = 0		2410685	0		=			
ANR	2410722	PtrMemberAccess	list -> current		2410685	0					
ANR	2410723	Identifier	list		2410685	0					
ANR	2410724	Identifier	current		2410685	1					
ANR	2410725	PrimaryExpression	0		2410685	1					
ANR	2410726	ReturnType	static void		2410685	1					
ANR	2410727	Identifier	dumpToPrinter		2410685	2					
ANR	2410728	ParameterList	"ByteList * list , FILE * printStream"		2410685	3					
ANR	2410729	Parameter	ByteList * list	1001:26:32948:32962	2410685	0	True				
ANR	2410730	ParameterType	ByteList *		2410685	0					
ANR	2410731	Identifier	list		2410685	1					
ANR	2410732	Parameter	FILE * printStream	1001:42:32964:32981	2410685	1	True				
ANR	2410733	ParameterType	FILE *		2410685	0					
ANR	2410734	Identifier	printStream		2410685	1					
ANR	2410735	CFGEntryNode	ENTRY		2410685		True				
ANR	2410736	CFGExitNode	EXIT		2410685		True				
ANR	2410737	Symbol	* list -> data		2410685						
ANR	2410738	Symbol	* * list		2410685						
ANR	2410739	Symbol	* loopCounter		2410685						
ANR	2410740	Symbol	* list		2410685						
ANR	2410741	Symbol	list -> current		2410685						
ANR	2410742	Symbol	loopCounter		2410685						
ANR	2410743	Symbol	list		2410685						
ANR	2410744	Symbol	list -> data		2410685						
ANR	2410745	Symbol	printStream		2410685						
