command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2461013	File	data/converged/CVE-2018-16863_ghostpdl/devices_gdevpe.c								
ANR	2461014	DeclStmt									
ANR	2461015	Decl							char	char * ( char * name )	getenv
ANR	2461016	ClassDef	gx_device_pe_s	29:8:768:877							
ANR	2461017	DeclStmt									
ANR	2461018	Decl							byte	byte *	fbaddr
ANR	2461019	DeclStmt									
ANR	2461020	Decl							unsigned	unsigned	regs
ANR	2461021	DeclStmt									
ANR	2461022	Decl							gx_device_pe_s	gx_device_pe_s	gx_device_pe
ANR	2461023	ClassDef	<unnamed>	36:8:924:966							
ANR	2461024	DeclStmt									
ANR	2461025	Decl							ushort	ushort	reg
ANR	2461026	Decl							ushort	ushort	val
ANR	2461027	DeclStmt									
ANR	2461028	Decl									regval
ANR	2461029	DeclStmt									
ANR	2461030	Decl							gx_device_procs	gx_device_procs	pe_procs
ANR	2461031	DeclStmt									
ANR	2461032	Decl							gx_device_pe far_data	gx_device_pe far_data	gs_pe_device
ANR	2461033	DeclStmt									
ANR	2461034	Decl							regval	regval [ ]	peinit
ANR	2461035	DeclStmt									
ANR	2461036	Decl							regval	regval [ ]	pedone
ANR	2461037	Function	pe_open	89:0:2558:3404							
ANR	2461038	FunctionDef	pe_open (gx_device * dev)		2461037	0					
ANR	2461039	CompoundStatement		90:0:2586:3404	2461037	0					
ANR	2461040	IdentifierDeclStatement	char * str ;	91:8:2596:2605	2461037	0	True				
ANR	2461041	IdentifierDecl	* str		2461037	0					
ANR	2461042	IdentifierDeclType	char *		2461037	0					
ANR	2461043	Identifier	str		2461037	1					
ANR	2461044	IdentifierDeclStatement	int i ;	92:8:2615:2620	2461037	1	True				
ANR	2461045	IdentifierDecl	i		2461037	0					
ANR	2461046	IdentifierDeclType	int		2461037	0					
ANR	2461047	Identifier	i		2461037	1					
ANR	2461048	IfStatement	"if ( ( str = getenv ( ""PEFBADDR"" ) ) != 0 )"		2461037	2					
ANR	2461049	Condition	"( str = getenv ( ""PEFBADDR"" ) ) != 0"	94:12:2635:2665	2461037	0	True				
ANR	2461050	EqualityExpression	"( str = getenv ( ""PEFBADDR"" ) ) != 0"		2461037	0		!=			
ANR	2461051	AssignmentExpression	"str = getenv ( ""PEFBADDR"" )"		2461037	0		=			
ANR	2461052	Identifier	str		2461037	0					
ANR	2461053	CallExpression	"getenv ( ""PEFBADDR"" )"		2461037	1					
ANR	2461054	Callee	getenv		2461037	0					
ANR	2461055	Identifier	getenv		2461037	0					
ANR	2461056	ArgumentList	"""PEFBADDR"""		2461037	1					
ANR	2461057	Argument	"""PEFBADDR"""		2461037	0					
ANR	2461058	PrimaryExpression	"""PEFBADDR"""		2461037	0					
ANR	2461059	PrimaryExpression	0		2461037	1					
ANR	2461060	CompoundStatement		6:8:89:89	2461037	1					
ANR	2461061	IfStatement	"if ( ! sscanf ( str , ""%lx"" , & ( pedev -> fbaddr ) ) )"		2461037	0					
ANR	2461062	Condition	"! sscanf ( str , ""%lx"" , & ( pedev -> fbaddr ) )"	96:20:2698:2734	2461037	0	True				
ANR	2461063	UnaryOperationExpression	"! sscanf ( str , ""%lx"" , & ( pedev -> fbaddr ) )"		2461037	0					
ANR	2461064	UnaryOperator	!		2461037	0					
ANR	2461065	CallExpression	"sscanf ( str , ""%lx"" , & ( pedev -> fbaddr ) )"		2461037	1					
ANR	2461066	Callee	sscanf		2461037	0					
ANR	2461067	Identifier	sscanf		2461037	0					
ANR	2461068	ArgumentList	str		2461037	1					
ANR	2461069	Argument	str		2461037	0					
ANR	2461070	Identifier	str		2461037	0					
ANR	2461071	Argument	"""%lx"""		2461037	1					
ANR	2461072	PrimaryExpression	"""%lx"""		2461037	0					
ANR	2461073	Argument	& ( pedev -> fbaddr )		2461037	2					
ANR	2461074	UnaryOperationExpression	& ( pedev -> fbaddr )		2461037	0					
ANR	2461075	UnaryOperator	&		2461037	0					
ANR	2461076	PtrMemberAccess	pedev -> fbaddr		2461037	1					
ANR	2461077	Identifier	pedev		2461037	0					
ANR	2461078	Identifier	fbaddr		2461037	1					
ANR	2461079	CompoundStatement		8:16:166:166	2461037	1					
ANR	2461080	ExpressionStatement	"emprintf ( dev -> memory , ""Private Eye: PEFBADDR environment string format error\\n"" )"	98:24:2779:2892	2461037	0	True				
ANR	2461081	CallExpression	"emprintf ( dev -> memory , ""Private Eye: PEFBADDR environment string format error\\n"" )"		2461037	0					
ANR	2461082	Callee	emprintf		2461037	0					
ANR	2461083	Identifier	emprintf		2461037	0					
ANR	2461084	ArgumentList	dev -> memory		2461037	1					
ANR	2461085	Argument	dev -> memory		2461037	0					
ANR	2461086	PtrMemberAccess	dev -> memory		2461037	0					
ANR	2461087	Identifier	dev		2461037	0					
ANR	2461088	Identifier	memory		2461037	1					
ANR	2461089	Argument	"""Private Eye: PEFBADDR environment string format error\\n"""		2461037	1					
ANR	2461090	PrimaryExpression	"""Private Eye: PEFBADDR environment string format error\\n"""		2461037	0					
ANR	2461091	ExpressionStatement	exit ( 1 )	100:24:2918:2925	2461037	1	True				
ANR	2461092	CallExpression	exit ( 1 )		2461037	0					
ANR	2461093	Callee	exit		2461037	0					
ANR	2461094	Identifier	exit		2461037	0					
ANR	2461095	ArgumentList	1		2461037	1					
ANR	2461096	Argument	1		2461037	0					
ANR	2461097	PrimaryExpression	1		2461037	0					
ANR	2461098	IfStatement	"if ( ( str = getenv ( ""PEREGS"" ) ) != 0 )"		2461037	3					
ANR	2461099	Condition	"( str = getenv ( ""PEREGS"" ) ) != 0"	104:12:2968:2996	2461037	0	True				
ANR	2461100	EqualityExpression	"( str = getenv ( ""PEREGS"" ) ) != 0"		2461037	0		!=			
ANR	2461101	AssignmentExpression	"str = getenv ( ""PEREGS"" )"		2461037	0		=			
ANR	2461102	Identifier	str		2461037	0					
ANR	2461103	CallExpression	"getenv ( ""PEREGS"" )"		2461037	1					
ANR	2461104	Callee	getenv		2461037	0					
ANR	2461105	Identifier	getenv		2461037	0					
ANR	2461106	ArgumentList	"""PEREGS"""		2461037	1					
ANR	2461107	Argument	"""PEREGS"""		2461037	0					
ANR	2461108	PrimaryExpression	"""PEREGS"""		2461037	0					
ANR	2461109	PrimaryExpression	0		2461037	1					
ANR	2461110	CompoundStatement		16:8:420:420	2461037	1					
ANR	2461111	IfStatement	"if ( ! sscanf ( str , ""%x"" , & ( pedev -> regs ) ) )"		2461037	0					
ANR	2461112	Condition	"! sscanf ( str , ""%x"" , & ( pedev -> regs ) )"	106:20:3029:3062	2461037	0	True				
ANR	2461113	UnaryOperationExpression	"! sscanf ( str , ""%x"" , & ( pedev -> regs ) )"		2461037	0					
ANR	2461114	UnaryOperator	!		2461037	0					
ANR	2461115	CallExpression	"sscanf ( str , ""%x"" , & ( pedev -> regs ) )"		2461037	1					
ANR	2461116	Callee	sscanf		2461037	0					
ANR	2461117	Identifier	sscanf		2461037	0					
ANR	2461118	ArgumentList	str		2461037	1					
ANR	2461119	Argument	str		2461037	0					
ANR	2461120	Identifier	str		2461037	0					
ANR	2461121	Argument	"""%x"""		2461037	1					
ANR	2461122	PrimaryExpression	"""%x"""		2461037	0					
ANR	2461123	Argument	& ( pedev -> regs )		2461037	2					
ANR	2461124	UnaryOperationExpression	& ( pedev -> regs )		2461037	0					
ANR	2461125	UnaryOperator	&		2461037	0					
ANR	2461126	PtrMemberAccess	pedev -> regs		2461037	1					
ANR	2461127	Identifier	pedev		2461037	0					
ANR	2461128	Identifier	regs		2461037	1					
ANR	2461129	CompoundStatement		18:16:494:494	2461037	1					
ANR	2461130	ExpressionStatement	"emprintf ( dev -> memory , ""Private Eye: PEREGS environment string format error\\n"" )"	108:24:3107:3218	2461037	0	True				
ANR	2461131	CallExpression	"emprintf ( dev -> memory , ""Private Eye: PEREGS environment string format error\\n"" )"		2461037	0					
ANR	2461132	Callee	emprintf		2461037	0					
ANR	2461133	Identifier	emprintf		2461037	0					
ANR	2461134	ArgumentList	dev -> memory		2461037	1					
ANR	2461135	Argument	dev -> memory		2461037	0					
ANR	2461136	PtrMemberAccess	dev -> memory		2461037	0					
ANR	2461137	Identifier	dev		2461037	0					
ANR	2461138	Identifier	memory		2461037	1					
ANR	2461139	Argument	"""Private Eye: PEREGS environment string format error\\n"""		2461037	1					
ANR	2461140	PrimaryExpression	"""Private Eye: PEREGS environment string format error\\n"""		2461037	0					
ANR	2461141	ExpressionStatement	exit ( 1 )	110:24:3244:3251	2461037	1	True				
ANR	2461142	CallExpression	exit ( 1 )		2461037	0					
ANR	2461143	Callee	exit		2461037	0					
ANR	2461144	Identifier	exit		2461037	0					
ANR	2461145	ArgumentList	1		2461037	1					
ANR	2461146	Argument	1		2461037	0					
ANR	2461147	PrimaryExpression	1		2461037	0					
ANR	2461148	ForStatement	for ( i = 0 ; i < 10 ; i ++ )		2461037	4					
ANR	2461149	ForInit	i = 0 ;	114:13:3295:3300	2461037	0	True				
ANR	2461150	AssignmentExpression	i = 0		2461037	0		=			
ANR	2461151	Identifier	i		2461037	0					
ANR	2461152	PrimaryExpression	0		2461037	1					
ANR	2461153	Condition	i < 10	114:20:3302:3307	2461037	1	True				
ANR	2461154	RelationalExpression	i < 10		2461037	0		<			
ANR	2461155	Identifier	i		2461037	0					
ANR	2461156	PrimaryExpression	10		2461037	1					
ANR	2461157	PostIncDecOperationExpression	i ++	114:28:3310:3312	2461037	2	True				
ANR	2461158	Identifier	i		2461037	0					
ANR	2461159	IncDec	++		2461037	1					
ANR	2461160	ExpressionStatement	"outportb ( pedev -> regs + peinit [ i ] . reg , peinit [ i ] . val )"	115:16:3331:3383	2461037	3	True				
ANR	2461161	CallExpression	"outportb ( pedev -> regs + peinit [ i ] . reg , peinit [ i ] . val )"		2461037	0					
ANR	2461162	Callee	outportb		2461037	0					
ANR	2461163	Identifier	outportb		2461037	0					
ANR	2461164	ArgumentList	pedev -> regs + peinit [ i ] . reg		2461037	1					
ANR	2461165	Argument	pedev -> regs + peinit [ i ] . reg		2461037	0					
ANR	2461166	AdditiveExpression	pedev -> regs + peinit [ i ] . reg		2461037	0		+			
ANR	2461167	PtrMemberAccess	pedev -> regs		2461037	0					
ANR	2461168	Identifier	pedev		2461037	0					
ANR	2461169	Identifier	regs		2461037	1					
ANR	2461170	MemberAccess	peinit [ i ] . reg		2461037	1					
ANR	2461171	ArrayIndexing	peinit [ i ]		2461037	0					
ANR	2461172	Identifier	peinit		2461037	0					
ANR	2461173	Identifier	i		2461037	1					
ANR	2461174	Identifier	reg		2461037	1					
ANR	2461175	Argument	peinit [ i ] . val		2461037	1					
ANR	2461176	MemberAccess	peinit [ i ] . val		2461037	0					
ANR	2461177	ArrayIndexing	peinit [ i ]		2461037	0					
ANR	2461178	Identifier	peinit		2461037	0					
ANR	2461179	Identifier	i		2461037	1					
ANR	2461180	Identifier	val		2461037	1					
ANR	2461181	ReturnStatement	return 0 ;	117:8:3394:3402	2461037	5	True				
ANR	2461182	PrimaryExpression	0		2461037	0					
ANR	2461183	ReturnType	int		2461037	1					
ANR	2461184	Identifier	pe_open		2461037	2					
ANR	2461185	ParameterList	gx_device * dev		2461037	3					
ANR	2461186	Parameter	gx_device * dev	89:12:2570:2583	2461037	0	True				
ANR	2461187	ParameterType	gx_device *		2461037	0					
ANR	2461188	Identifier	dev		2461037	1					
ANR	2461189	CFGEntryNode	ENTRY		2461037		True				
ANR	2461190	CFGExitNode	EXIT		2461037		True				
ANR	2461191	Symbol	* dev		2461037						
ANR	2461192	Symbol	* peinit		2461037						
ANR	2461193	Symbol	& pedev -> fbaddr		2461037						
ANR	2461194	Symbol	& pedev -> regs		2461037						
ANR	2461195	Symbol	pedev -> regs		2461037						
ANR	2461196	Symbol	i		2461037						
ANR	2461197	Symbol	peinit [ i ] . reg		2461037						
ANR	2461198	Symbol	str		2461037						
ANR	2461199	Symbol	* pedev		2461037						
ANR	2461200	Symbol	dev -> memory		2461037						
ANR	2461201	Symbol	peinit [ i ] . val		2461037						
ANR	2461202	Symbol	* i		2461037						
ANR	2461203	Symbol	dev		2461037						
ANR	2461204	Symbol	sscanf		2461037						
ANR	2461205	Symbol	pedev		2461037						
ANR	2461206	Symbol	peinit		2461037						
ANR	2461207	Symbol	getenv		2461037						
ANR	2461208	Function	pe_close	120:0:3407:3687							
ANR	2461209	FunctionDef	pe_close (gx_device * dev)		2461208	0					
ANR	2461210	CompoundStatement		121:0:3436:3687	2461208	0					
ANR	2461211	IdentifierDeclStatement	int i ;	122:8:3446:3451	2461208	0	True				
ANR	2461212	IdentifierDecl	i		2461208	0					
ANR	2461213	IdentifierDeclType	int		2461208	0					
ANR	2461214	Identifier	i		2461208	1					
ANR	2461215	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		2461208	1					
ANR	2461216	ForInit	i = 0 ;	125:13:3500:3505	2461208	0	True				
ANR	2461217	AssignmentExpression	i = 0		2461208	0		=			
ANR	2461218	Identifier	i		2461208	0					
ANR	2461219	PrimaryExpression	0		2461208	1					
ANR	2461220	Condition	i < 16	125:20:3507:3512	2461208	1	True				
ANR	2461221	RelationalExpression	i < 16		2461208	0		<			
ANR	2461222	Identifier	i		2461208	0					
ANR	2461223	PrimaryExpression	16		2461208	1					
ANR	2461224	PostIncDecOperationExpression	i ++	125:28:3515:3517	2461208	2	True				
ANR	2461225	Identifier	i		2461208	0					
ANR	2461226	IncDec	++		2461208	1					
ANR	2461227	ExpressionStatement	"outportb ( pedev -> regs + pedone [ i ] . reg , pedone [ i ] . val )"	126:16:3536:3588	2461208	3	True				
ANR	2461228	CallExpression	"outportb ( pedev -> regs + pedone [ i ] . reg , pedone [ i ] . val )"		2461208	0					
ANR	2461229	Callee	outportb		2461208	0					
ANR	2461230	Identifier	outportb		2461208	0					
ANR	2461231	ArgumentList	pedev -> regs + pedone [ i ] . reg		2461208	1					
ANR	2461232	Argument	pedev -> regs + pedone [ i ] . reg		2461208	0					
ANR	2461233	AdditiveExpression	pedev -> regs + pedone [ i ] . reg		2461208	0		+			
ANR	2461234	PtrMemberAccess	pedev -> regs		2461208	0					
ANR	2461235	Identifier	pedev		2461208	0					
ANR	2461236	Identifier	regs		2461208	1					
ANR	2461237	MemberAccess	pedone [ i ] . reg		2461208	1					
ANR	2461238	ArrayIndexing	pedone [ i ]		2461208	0					
ANR	2461239	Identifier	pedone		2461208	0					
ANR	2461240	Identifier	i		2461208	1					
ANR	2461241	Identifier	reg		2461208	1					
ANR	2461242	Argument	pedone [ i ] . val		2461208	1					
ANR	2461243	MemberAccess	pedone [ i ] . val		2461208	0					
ANR	2461244	ArrayIndexing	pedone [ i ]		2461208	0					
ANR	2461245	Identifier	pedone		2461208	0					
ANR	2461246	Identifier	i		2461208	1					
ANR	2461247	Identifier	val		2461208	1					
ANR	2461248	ExpressionStatement	"memset ( pedev -> fbaddr , 0 , 4000 )"	129:8:3636:3666	2461208	2	True				
ANR	2461249	CallExpression	"memset ( pedev -> fbaddr , 0 , 4000 )"		2461208	0					
ANR	2461250	Callee	memset		2461208	0					
ANR	2461251	Identifier	memset		2461208	0					
ANR	2461252	ArgumentList	pedev -> fbaddr		2461208	1					
ANR	2461253	Argument	pedev -> fbaddr		2461208	0					
ANR	2461254	PtrMemberAccess	pedev -> fbaddr		2461208	0					
ANR	2461255	Identifier	pedev		2461208	0					
ANR	2461256	Identifier	fbaddr		2461208	1					
ANR	2461257	Argument	0		2461208	1					
ANR	2461258	PrimaryExpression	0		2461208	0					
ANR	2461259	Argument	4000		2461208	2					
ANR	2461260	PrimaryExpression	4000		2461208	0					
ANR	2461261	ReturnStatement	return 0 ;	131:8:3677:3685	2461208	3	True				
ANR	2461262	PrimaryExpression	0		2461208	0					
ANR	2461263	ReturnType	int		2461208	1					
ANR	2461264	Identifier	pe_close		2461208	2					
ANR	2461265	ParameterList	gx_device * dev		2461208	3					
ANR	2461266	Parameter	gx_device * dev	120:13:3420:3433	2461208	0	True				
ANR	2461267	ParameterType	gx_device *		2461208	0					
ANR	2461268	Identifier	dev		2461208	1					
ANR	2461269	CFGEntryNode	ENTRY		2461208		True				
ANR	2461270	CFGExitNode	EXIT		2461208		True				
ANR	2461271	Symbol	* pedev		2461208						
ANR	2461272	Symbol	* i		2461208						
ANR	2461273	Symbol	dev		2461208						
ANR	2461274	Symbol	pedone [ i ] . val		2461208						
ANR	2461275	Symbol	* pedone		2461208						
ANR	2461276	Symbol	pedev -> regs		2461208						
ANR	2461277	Symbol	i		2461208						
ANR	2461278	Symbol	pedev		2461208						
ANR	2461279	Symbol	pedev -> fbaddr		2461208						
ANR	2461280	Symbol	pedone		2461208						
ANR	2461281	Symbol	pedone [ i ] . reg		2461208						
ANR	2461282	Function	pe_fill_rectangle	134:0:3690:5805							
ANR	2461283	FunctionDef	"pe_fill_rectangle (gx_device * dev , int x1 , int y1 , int w , int h , gx_color_index color)"		2461282	0					
ANR	2461284	CompoundStatement		136:0:3802:5805	2461282	0					
ANR	2461285	IdentifierDeclStatement	"int x2 , y2 , xlen ;"	137:8:3812:3828	2461282	0	True				
ANR	2461286	IdentifierDecl	x2		2461282	0					
ANR	2461287	IdentifierDeclType	int		2461282	0					
ANR	2461288	Identifier	x2		2461282	1					
ANR	2461289	IdentifierDecl	y2		2461282	1					
ANR	2461290	IdentifierDeclType	int		2461282	0					
ANR	2461291	Identifier	y2		2461282	1					
ANR	2461292	IdentifierDecl	xlen		2461282	2					
ANR	2461293	IdentifierDeclType	int		2461282	0					
ANR	2461294	Identifier	xlen		2461282	1					
ANR	2461295	IdentifierDeclStatement	"byte led , red , d ;"	138:8:3838:3854	2461282	1	True				
ANR	2461296	IdentifierDecl	led		2461282	0					
ANR	2461297	IdentifierDeclType	byte		2461282	0					
ANR	2461298	Identifier	led		2461282	1					
ANR	2461299	IdentifierDecl	red		2461282	1					
ANR	2461300	IdentifierDeclType	byte		2461282	0					
ANR	2461301	Identifier	red		2461282	1					
ANR	2461302	IdentifierDecl	d		2461282	2					
ANR	2461303	IdentifierDeclType	byte		2461282	0					
ANR	2461304	Identifier	d		2461282	1					
ANR	2461305	IdentifierDeclStatement	byte * ptr ;	139:8:3864:3873	2461282	2	True				
ANR	2461306	IdentifierDecl	* ptr		2461282	0					
ANR	2461307	IdentifierDeclType	byte *		2461282	0					
ANR	2461308	Identifier	ptr		2461282	1					
ANR	2461309	IfStatement	if ( ( w <= 0 ) || ( h <= 0 ) || ( x1 > XSIZE ) || ( y1 > YSIZE ) )		2461282	3					
ANR	2461310	Condition	( w <= 0 ) || ( h <= 0 ) || ( x1 > XSIZE ) || ( y1 > YSIZE )	143:12:3908:3959	2461282	0	True				
ANR	2461311	OrExpression	( w <= 0 ) || ( h <= 0 ) || ( x1 > XSIZE ) || ( y1 > YSIZE )		2461282	0		||			
ANR	2461312	RelationalExpression	w <= 0		2461282	0		<=			
ANR	2461313	Identifier	w		2461282	0					
ANR	2461314	PrimaryExpression	0		2461282	1					
ANR	2461315	OrExpression	( h <= 0 ) || ( x1 > XSIZE ) || ( y1 > YSIZE )		2461282	1		||			
ANR	2461316	RelationalExpression	h <= 0		2461282	0		<=			
ANR	2461317	Identifier	h		2461282	0					
ANR	2461318	PrimaryExpression	0		2461282	1					
ANR	2461319	OrExpression	( x1 > XSIZE ) || ( y1 > YSIZE )		2461282	1		||			
ANR	2461320	RelationalExpression	x1 > XSIZE		2461282	0		>			
ANR	2461321	Identifier	x1		2461282	0					
ANR	2461322	Identifier	XSIZE		2461282	1					
ANR	2461323	RelationalExpression	y1 > YSIZE		2461282	1		>			
ANR	2461324	Identifier	y1		2461282	0					
ANR	2461325	Identifier	YSIZE		2461282	1					
ANR	2461326	ReturnStatement	return 0 ;	144:16:3978:3986	2461282	1	True				
ANR	2461327	PrimaryExpression	0		2461282	0					
ANR	2461328	ExpressionStatement	x2 = x1 + w - 1	146:8:3997:4012	2461282	4	True				
ANR	2461329	AssignmentExpression	x2 = x1 + w - 1		2461282	0		=			
ANR	2461330	Identifier	x2		2461282	0					
ANR	2461331	AdditiveExpression	x1 + w - 1		2461282	1		+			
ANR	2461332	Identifier	x1		2461282	0					
ANR	2461333	AdditiveExpression	w - 1		2461282	1		-			
ANR	2461334	Identifier	w		2461282	0					
ANR	2461335	PrimaryExpression	1		2461282	1					
ANR	2461336	ExpressionStatement	y2 = y1 + h - 1	147:8:4022:4037	2461282	5	True				
ANR	2461337	AssignmentExpression	y2 = y1 + h - 1		2461282	0		=			
ANR	2461338	Identifier	y2		2461282	0					
ANR	2461339	AdditiveExpression	y1 + h - 1		2461282	1		+			
ANR	2461340	Identifier	y1		2461282	0					
ANR	2461341	AdditiveExpression	h - 1		2461282	1		-			
ANR	2461342	Identifier	h		2461282	0					
ANR	2461343	PrimaryExpression	1		2461282	1					
ANR	2461344	IfStatement	if ( ( x2 < 0 ) || ( y2 < 0 ) )		2461282	6					
ANR	2461345	Condition	( x2 < 0 ) || ( y2 < 0 )	151:12:4082:4101	2461282	0	True				
ANR	2461346	OrExpression	( x2 < 0 ) || ( y2 < 0 )		2461282	0		||			
ANR	2461347	RelationalExpression	x2 < 0		2461282	0		<			
ANR	2461348	Identifier	x2		2461282	0					
ANR	2461349	PrimaryExpression	0		2461282	1					
ANR	2461350	RelationalExpression	y2 < 0		2461282	1		<			
ANR	2461351	Identifier	y2		2461282	0					
ANR	2461352	PrimaryExpression	0		2461282	1					
ANR	2461353	ReturnStatement	return 0 ;	152:16:4120:4128	2461282	1	True				
ANR	2461354	PrimaryExpression	0		2461282	0					
ANR	2461355	IfStatement	if ( x1 < 0 )		2461282	7					
ANR	2461356	Condition	x1 < 0	156:12:4163:4168	2461282	0	True				
ANR	2461357	RelationalExpression	x1 < 0		2461282	0		<			
ANR	2461358	Identifier	x1		2461282	0					
ANR	2461359	PrimaryExpression	0		2461282	1					
ANR	2461360	ExpressionStatement	x1 = 0	156:20:4171:4177	2461282	1	True				
ANR	2461361	AssignmentExpression	x1 = 0		2461282	0		=			
ANR	2461362	Identifier	x1		2461282	0					
ANR	2461363	PrimaryExpression	0		2461282	1					
ANR	2461364	IfStatement	if ( x2 > XSIZE - 1 )		2461282	8					
ANR	2461365	Condition	x2 > XSIZE - 1	157:12:4191:4202	2461282	0	True				
ANR	2461366	RelationalExpression	x2 > XSIZE - 1		2461282	0		>			
ANR	2461367	Identifier	x2		2461282	0					
ANR	2461368	AdditiveExpression	XSIZE - 1		2461282	1		-			
ANR	2461369	Identifier	XSIZE		2461282	0					
ANR	2461370	PrimaryExpression	1		2461282	1					
ANR	2461371	ExpressionStatement	x2 = XSIZE - 1	157:26:4205:4217	2461282	1	True				
ANR	2461372	AssignmentExpression	x2 = XSIZE - 1		2461282	0		=			
ANR	2461373	Identifier	x2		2461282	0					
ANR	2461374	AdditiveExpression	XSIZE - 1		2461282	1		-			
ANR	2461375	Identifier	XSIZE		2461282	0					
ANR	2461376	PrimaryExpression	1		2461282	1					
ANR	2461377	IfStatement	if ( y1 < 0 )		2461282	9					
ANR	2461378	Condition	y1 < 0	158:12:4231:4236	2461282	0	True				
ANR	2461379	RelationalExpression	y1 < 0		2461282	0		<			
ANR	2461380	Identifier	y1		2461282	0					
ANR	2461381	PrimaryExpression	0		2461282	1					
ANR	2461382	ExpressionStatement	y1 = 0	158:20:4239:4245	2461282	1	True				
ANR	2461383	AssignmentExpression	y1 = 0		2461282	0		=			
ANR	2461384	Identifier	y1		2461282	0					
ANR	2461385	PrimaryExpression	0		2461282	1					
ANR	2461386	IfStatement	if ( y2 > YSIZE - 1 )		2461282	10					
ANR	2461387	Condition	y2 > YSIZE - 1	159:12:4259:4270	2461282	0	True				
ANR	2461388	RelationalExpression	y2 > YSIZE - 1		2461282	0		>			
ANR	2461389	Identifier	y2		2461282	0					
ANR	2461390	AdditiveExpression	YSIZE - 1		2461282	1		-			
ANR	2461391	Identifier	YSIZE		2461282	0					
ANR	2461392	PrimaryExpression	1		2461282	1					
ANR	2461393	ExpressionStatement	y2 = YSIZE - 1	159:26:4273:4285	2461282	1	True				
ANR	2461394	AssignmentExpression	y2 = YSIZE - 1		2461282	0		=			
ANR	2461395	Identifier	y2		2461282	0					
ANR	2461396	AdditiveExpression	YSIZE - 1		2461282	1		-			
ANR	2461397	Identifier	YSIZE		2461282	0					
ANR	2461398	PrimaryExpression	1		2461282	1					
ANR	2461399	ExpressionStatement	w = x2 - x1 + 1	161:8:4296:4311	2461282	11	True				
ANR	2461400	AssignmentExpression	w = x2 - x1 + 1		2461282	0		=			
ANR	2461401	Identifier	w		2461282	0					
ANR	2461402	AdditiveExpression	x2 - x1 + 1		2461282	1		-			
ANR	2461403	Identifier	x2		2461282	0					
ANR	2461404	AdditiveExpression	x1 + 1		2461282	1		+			
ANR	2461405	Identifier	x1		2461282	0					
ANR	2461406	PrimaryExpression	1		2461282	1					
ANR	2461407	ExpressionStatement	h = y2 - y1 + 1	162:8:4321:4336	2461282	12	True				
ANR	2461408	AssignmentExpression	h = y2 - y1 + 1		2461282	0		=			
ANR	2461409	Identifier	h		2461282	0					
ANR	2461410	AdditiveExpression	y2 - y1 + 1		2461282	1		-			
ANR	2461411	Identifier	y2		2461282	0					
ANR	2461412	AdditiveExpression	y1 + 1		2461282	1		+			
ANR	2461413	Identifier	y1		2461282	0					
ANR	2461414	PrimaryExpression	1		2461282	1					
ANR	2461415	ExpressionStatement	xlen = ( x2 >> 3 ) - ( x1 >> 3 ) - 1	163:8:4346:4378	2461282	13	True				
ANR	2461416	AssignmentExpression	xlen = ( x2 >> 3 ) - ( x1 >> 3 ) - 1		2461282	0		=			
ANR	2461417	Identifier	xlen		2461282	0					
ANR	2461418	AdditiveExpression	( x2 >> 3 ) - ( x1 >> 3 ) - 1		2461282	1		-			
ANR	2461419	ShiftExpression	x2 >> 3		2461282	0		>>			
ANR	2461420	Identifier	x2		2461282	0					
ANR	2461421	PrimaryExpression	3		2461282	1					
ANR	2461422	AdditiveExpression	( x1 >> 3 ) - 1		2461282	1		-			
ANR	2461423	ShiftExpression	x1 >> 3		2461282	0		>>			
ANR	2461424	Identifier	x1		2461282	0					
ANR	2461425	PrimaryExpression	3		2461282	1					
ANR	2461426	PrimaryExpression	1		2461282	1					
ANR	2461427	ExpressionStatement	led = 0xff >> ( x1 & 7 )	164:8:4388:4410	2461282	14	True				
ANR	2461428	AssignmentExpression	led = 0xff >> ( x1 & 7 )		2461282	0		=			
ANR	2461429	Identifier	led		2461282	0					
ANR	2461430	ShiftExpression	0xff >> ( x1 & 7 )		2461282	1		>>			
ANR	2461431	PrimaryExpression	0xff		2461282	0					
ANR	2461432	BitAndExpression	x1 & 7		2461282	1		&			
ANR	2461433	Identifier	x1		2461282	0					
ANR	2461434	PrimaryExpression	7		2461282	1					
ANR	2461435	ExpressionStatement	red = 0xff << ( 7 - ( x2 & 7 ) )	165:8:4420:4448	2461282	15	True				
ANR	2461436	AssignmentExpression	red = 0xff << ( 7 - ( x2 & 7 ) )		2461282	0		=			
ANR	2461437	Identifier	red		2461282	0					
ANR	2461438	ShiftExpression	0xff << ( 7 - ( x2 & 7 ) )		2461282	1		<<			
ANR	2461439	PrimaryExpression	0xff		2461282	0					
ANR	2461440	AdditiveExpression	7 - ( x2 & 7 )		2461282	1		-			
ANR	2461441	PrimaryExpression	7		2461282	0					
ANR	2461442	BitAndExpression	x2 & 7		2461282	1		&			
ANR	2461443	Identifier	x2		2461282	0					
ANR	2461444	PrimaryExpression	7		2461282	1					
ANR	2461445	ExpressionStatement	ptr = pedev -> fbaddr + ( y1 * BPL ) + ( x1 >> 3 )	167:8:4459:4503	2461282	16	True				
ANR	2461446	AssignmentExpression	ptr = pedev -> fbaddr + ( y1 * BPL ) + ( x1 >> 3 )		2461282	0		=			
ANR	2461447	Identifier	ptr		2461282	0					
ANR	2461448	AdditiveExpression	pedev -> fbaddr + ( y1 * BPL ) + ( x1 >> 3 )		2461282	1		+			
ANR	2461449	PtrMemberAccess	pedev -> fbaddr		2461282	0					
ANR	2461450	Identifier	pedev		2461282	0					
ANR	2461451	Identifier	fbaddr		2461282	1					
ANR	2461452	AdditiveExpression	( y1 * BPL ) + ( x1 >> 3 )		2461282	1		+			
ANR	2461453	MultiplicativeExpression	y1 * BPL		2461282	0		*			
ANR	2461454	Identifier	y1		2461282	0					
ANR	2461455	Identifier	BPL		2461282	1					
ANR	2461456	ShiftExpression	x1 >> 3		2461282	1		>>			
ANR	2461457	Identifier	x1		2461282	0					
ANR	2461458	PrimaryExpression	3		2461282	1					
ANR	2461459	IfStatement	if ( color )		2461282	17					
ANR	2461460	Condition	color	169:12:4518:4522	2461282	0	True				
ANR	2461461	Identifier	color		2461282	0					
ANR	2461462	CompoundStatement		35:8:730:730	2461282	1					
ANR	2461463	IfStatement	if ( xlen == - 1 )		2461282	0					
ANR	2461464	Condition	xlen == - 1	173:20:4597:4606	2461282	0	True				
ANR	2461465	EqualityExpression	xlen == - 1		2461282	0		==			
ANR	2461466	Identifier	xlen		2461282	0					
ANR	2461467	UnaryOperationExpression	- 1		2461282	1					
ANR	2461468	UnaryOperator	-		2461282	0					
ANR	2461469	PrimaryExpression	1		2461282	1					
ANR	2461470	CompoundStatement		39:16:822:822	2461282	1					
ANR	2461471	ExpressionStatement	d = led & red	177:24:4724:4737	2461282	0	True				
ANR	2461472	AssignmentExpression	d = led & red		2461282	0		=			
ANR	2461473	Identifier	d		2461282	0					
ANR	2461474	BitAndExpression	led & red		2461282	1		&			
ANR	2461475	Identifier	led		2461282	0					
ANR	2461476	Identifier	red		2461282	1					
ANR	2461477	ForStatement	"for ( ; h >= 0 ; h -- , ptr += BPL )"		2461282	1					
ANR	2461478	Condition	h >= 0	178:30:4769:4774	2461282	0	True				
ANR	2461479	RelationalExpression	h >= 0		2461282	0		>=			
ANR	2461480	Identifier	h		2461282	0					
ANR	2461481	PrimaryExpression	0		2461282	1					
ANR	2461482	Expression	"h -- , ptr += BPL"	178:38:4777:4791	2461282	1	True				
ANR	2461483	PostIncDecOperationExpression	h --		2461282	0					
ANR	2461484	Identifier	h		2461282	0					
ANR	2461485	IncDec	--		2461282	1					
ANR	2461486	AssignmentExpression	ptr += BPL		2461282	1		+=			
ANR	2461487	Identifier	ptr		2461282	0					
ANR	2461488	Identifier	BPL		2461282	1					
ANR	2461489	ExpressionStatement	* ptr |= d	179:32:4826:4835	2461282	2	True				
ANR	2461490	AssignmentExpression	* ptr |= d		2461282	0		|=			
ANR	2461491	UnaryOperationExpression	* ptr		2461282	0					
ANR	2461492	UnaryOperator	*		2461282	0					
ANR	2461493	Identifier	ptr		2461282	1					
ANR	2461494	Identifier	d		2461282	1					
ANR	2461495	ReturnStatement	return 0 ;	180:24:4861:4869	2461282	2	True				
ANR	2461496	PrimaryExpression	0		2461282	0					
ANR	2461497	ForStatement	"for ( ; h >= 0 ; h -- , ptr += BPL )"		2461282	1					
ANR	2461498	Condition	h >= 0	185:22:4947:4952	2461282	0	True				
ANR	2461499	RelationalExpression	h >= 0		2461282	0		>=			
ANR	2461500	Identifier	h		2461282	0					
ANR	2461501	PrimaryExpression	0		2461282	1					
ANR	2461502	Expression	"h -- , ptr += BPL"	185:30:4955:4969	2461282	1	True				
ANR	2461503	PostIncDecOperationExpression	h --		2461282	0					
ANR	2461504	Identifier	h		2461282	0					
ANR	2461505	IncDec	--		2461282	1					
ANR	2461506	AssignmentExpression	ptr += BPL		2461282	1		+=			
ANR	2461507	Identifier	ptr		2461282	0					
ANR	2461508	Identifier	BPL		2461282	1					
ANR	2461509	CompoundStatement		52:33:1243:1256	2461282	2					
ANR	2461510	Statement	register	186:18:4990:4997	2461282	0	True				
ANR	2461511	IdentifierDeclStatement	int x = xlen ;	186:27:4999:5011	2461282	1	True				
ANR	2461512	IdentifierDecl	x = xlen		2461282	0					
ANR	2461513	IdentifierDeclType	int		2461282	0					
ANR	2461514	Identifier	x		2461282	1					
ANR	2461515	AssignmentExpression	x = xlen		2461282	2		=			
ANR	2461516	Identifier	xlen		2461282	0					
ANR	2461517	Identifier	xlen		2461282	1					
ANR	2461518	Statement	register	187:24:5037:5044	2461282	2	True				
ANR	2461519	IdentifierDeclStatement	byte * p = ptr ;	187:33:5046:5059	2461282	3	True				
ANR	2461520	IdentifierDecl	* p = ptr		2461282	0					
ANR	2461521	IdentifierDeclType	byte *		2461282	0					
ANR	2461522	Identifier	p		2461282	1					
ANR	2461523	AssignmentExpression	* p = ptr		2461282	2		=			
ANR	2461524	Identifier	ptr		2461282	0					
ANR	2461525	Identifier	ptr		2461282	1					
ANR	2461526	ExpressionStatement	* p ++ |= led	188:24:5085:5096	2461282	4	True				
ANR	2461527	AssignmentExpression	* p ++ |= led		2461282	0		|=			
ANR	2461528	UnaryOperationExpression	* p ++		2461282	0					
ANR	2461529	UnaryOperator	*		2461282	0					
ANR	2461530	PostIncDecOperationExpression	p ++		2461282	1					
ANR	2461531	Identifier	p		2461282	0					
ANR	2461532	IncDec	++		2461282	1					
ANR	2461533	Identifier	led		2461282	1					
ANR	2461534	WhileStatement	while ( x -- )		2461282	5					
ANR	2461535	Condition	x --	189:32:5130:5132	2461282	0	True				
ANR	2461536	PostIncDecOperationExpression	x --		2461282	0					
ANR	2461537	Identifier	x		2461282	0					
ANR	2461538	IncDec	--		2461282	1					
ANR	2461539	ExpressionStatement	* p ++ = 0xff	189:38:5136:5147	2461282	1	True				
ANR	2461540	AssignmentExpression	* p ++ = 0xff		2461282	0		=			
ANR	2461541	UnaryOperationExpression	* p ++		2461282	0					
ANR	2461542	UnaryOperator	*		2461282	0					
ANR	2461543	PostIncDecOperationExpression	p ++		2461282	1					
ANR	2461544	Identifier	p		2461282	0					
ANR	2461545	IncDec	++		2461282	1					
ANR	2461546	PrimaryExpression	0xff		2461282	1					
ANR	2461547	ExpressionStatement	* p |= red	190:24:5173:5182	2461282	6	True				
ANR	2461548	AssignmentExpression	* p |= red		2461282	0		|=			
ANR	2461549	UnaryOperationExpression	* p		2461282	0					
ANR	2461550	UnaryOperator	*		2461282	0					
ANR	2461551	Identifier	p		2461282	1					
ANR	2461552	Identifier	red		2461282	1					
ANR	2461553	ExpressionStatement	led = ~led	196:8:5257:5267	2461282	18	True				
ANR	2461554	AssignmentExpression	led = ~led		2461282	0		=			
ANR	2461555	Identifier	led		2461282	0					
ANR	2461556	Identifier	~led		2461282	1					
ANR	2461557	ExpressionStatement	red = ~red	197:8:5277:5287	2461282	19	True				
ANR	2461558	AssignmentExpression	red = ~red		2461282	0		=			
ANR	2461559	Identifier	red		2461282	0					
ANR	2461560	Identifier	~red		2461282	1					
ANR	2461561	IfStatement	if ( xlen == - 1 )		2461282	20					
ANR	2461562	Condition	xlen == - 1	199:12:5302:5311	2461282	0	True				
ANR	2461563	EqualityExpression	xlen == - 1		2461282	0		==			
ANR	2461564	Identifier	xlen		2461282	0					
ANR	2461565	UnaryOperationExpression	- 1		2461282	1					
ANR	2461566	UnaryOperator	-		2461282	0					
ANR	2461567	PrimaryExpression	1		2461282	1					
ANR	2461568	CompoundStatement		65:8:1519:1519	2461282	1					
ANR	2461569	ExpressionStatement	d = led | red	203:16:5405:5418	2461282	0	True				
ANR	2461570	AssignmentExpression	d = led | red		2461282	0		=			
ANR	2461571	Identifier	d		2461282	0					
ANR	2461572	InclusiveOrExpression	led | red		2461282	1		|			
ANR	2461573	Identifier	led		2461282	0					
ANR	2461574	Identifier	red		2461282	1					
ANR	2461575	ForStatement	"for ( ; h >= 0 ; h -- , ptr += BPL )"		2461282	1					
ANR	2461576	Condition	h >= 0	204:22:5442:5447	2461282	0	True				
ANR	2461577	RelationalExpression	h >= 0		2461282	0		>=			
ANR	2461578	Identifier	h		2461282	0					
ANR	2461579	PrimaryExpression	0		2461282	1					
ANR	2461580	Expression	"h -- , ptr += BPL"	204:30:5450:5464	2461282	1	True				
ANR	2461581	PostIncDecOperationExpression	h --		2461282	0					
ANR	2461582	Identifier	h		2461282	0					
ANR	2461583	IncDec	--		2461282	1					
ANR	2461584	AssignmentExpression	ptr += BPL		2461282	1		+=			
ANR	2461585	Identifier	ptr		2461282	0					
ANR	2461586	Identifier	BPL		2461282	1					
ANR	2461587	ExpressionStatement	* ptr &= d	205:24:5491:5500	2461282	2	True				
ANR	2461588	AssignmentExpression	* ptr &= d		2461282	0		&=			
ANR	2461589	UnaryOperationExpression	* ptr		2461282	0					
ANR	2461590	UnaryOperator	*		2461282	0					
ANR	2461591	Identifier	ptr		2461282	1					
ANR	2461592	Identifier	d		2461282	1					
ANR	2461593	ReturnStatement	return 0 ;	206:16:5518:5526	2461282	2	True				
ANR	2461594	PrimaryExpression	0		2461282	0					
ANR	2461595	ForStatement	"for ( ; h >= 0 ; h -- , ptr += BPL )"		2461282	21					
ANR	2461596	Condition	h >= 0	211:14:5580:5585	2461282	0	True				
ANR	2461597	RelationalExpression	h >= 0		2461282	0		>=			
ANR	2461598	Identifier	h		2461282	0					
ANR	2461599	PrimaryExpression	0		2461282	1					
ANR	2461600	Expression	"h -- , ptr += BPL"	211:22:5588:5602	2461282	1	True				
ANR	2461601	PostIncDecOperationExpression	h --		2461282	0					
ANR	2461602	Identifier	h		2461282	0					
ANR	2461603	IncDec	--		2461282	1					
ANR	2461604	AssignmentExpression	ptr += BPL		2461282	1		+=			
ANR	2461605	Identifier	ptr		2461282	0					
ANR	2461606	Identifier	BPL		2461282	1					
ANR	2461607	CompoundStatement		78:25:1860:1873	2461282	2					
ANR	2461608	Statement	register	212:10:5615:5622	2461282	0	True				
ANR	2461609	IdentifierDeclStatement	int x = xlen ;	212:19:5624:5636	2461282	1	True				
ANR	2461610	IdentifierDecl	x = xlen		2461282	0					
ANR	2461611	IdentifierDeclType	int		2461282	0					
ANR	2461612	Identifier	x		2461282	1					
ANR	2461613	AssignmentExpression	x = xlen		2461282	2		=			
ANR	2461614	Identifier	xlen		2461282	0					
ANR	2461615	Identifier	xlen		2461282	1					
ANR	2461616	Statement	register	213:16:5654:5661	2461282	2	True				
ANR	2461617	IdentifierDeclStatement	byte * p = ptr ;	213:25:5663:5676	2461282	3	True				
ANR	2461618	IdentifierDecl	* p = ptr		2461282	0					
ANR	2461619	IdentifierDeclType	byte *		2461282	0					
ANR	2461620	Identifier	p		2461282	1					
ANR	2461621	AssignmentExpression	* p = ptr		2461282	2		=			
ANR	2461622	Identifier	ptr		2461282	0					
ANR	2461623	Identifier	ptr		2461282	1					
ANR	2461624	ExpressionStatement	* p ++ &= led	214:16:5694:5705	2461282	4	True				
ANR	2461625	AssignmentExpression	* p ++ &= led		2461282	0		&=			
ANR	2461626	UnaryOperationExpression	* p ++		2461282	0					
ANR	2461627	UnaryOperator	*		2461282	0					
ANR	2461628	PostIncDecOperationExpression	p ++		2461282	1					
ANR	2461629	Identifier	p		2461282	0					
ANR	2461630	IncDec	++		2461282	1					
ANR	2461631	Identifier	led		2461282	1					
ANR	2461632	WhileStatement	while ( x -- )		2461282	5					
ANR	2461633	Condition	x --	215:24:5731:5733	2461282	0	True				
ANR	2461634	PostIncDecOperationExpression	x --		2461282	0					
ANR	2461635	Identifier	x		2461282	0					
ANR	2461636	IncDec	--		2461282	1					
ANR	2461637	ExpressionStatement	* p ++ = 0x00	215:30:5737:5748	2461282	1	True				
ANR	2461638	AssignmentExpression	* p ++ = 0x00		2461282	0		=			
ANR	2461639	UnaryOperationExpression	* p ++		2461282	0					
ANR	2461640	UnaryOperator	*		2461282	0					
ANR	2461641	PostIncDecOperationExpression	p ++		2461282	1					
ANR	2461642	Identifier	p		2461282	0					
ANR	2461643	IncDec	++		2461282	1					
ANR	2461644	PrimaryExpression	0x00		2461282	1					
ANR	2461645	ExpressionStatement	* p &= red	216:16:5766:5775	2461282	6	True				
ANR	2461646	AssignmentExpression	* p &= red		2461282	0		&=			
ANR	2461647	UnaryOperationExpression	* p		2461282	0					
ANR	2461648	UnaryOperator	*		2461282	0					
ANR	2461649	Identifier	p		2461282	1					
ANR	2461650	Identifier	red		2461282	1					
ANR	2461651	ReturnStatement	return 0 ;	218:8:5795:5803	2461282	22	True				
ANR	2461652	PrimaryExpression	0		2461282	0					
ANR	2461653	ReturnType	int		2461282	1					
ANR	2461654	Identifier	pe_fill_rectangle		2461282	2					
ANR	2461655	ParameterList	"gx_device * dev , int x1 , int y1 , int w , int h , gx_color_index color"		2461282	3					
ANR	2461656	Parameter	gx_device * dev	134:22:3712:3725	2461282	0	True				
ANR	2461657	ParameterType	gx_device *		2461282	0					
ANR	2461658	Identifier	dev		2461282	1					
ANR	2461659	Parameter	int x1	134:38:3728:3733	2461282	1	True				
ANR	2461660	ParameterType	int		2461282	0					
ANR	2461661	Identifier	x1		2461282	1					
ANR	2461662	Parameter	int y1	134:46:3736:3741	2461282	2	True				
ANR	2461663	ParameterType	int		2461282	0					
ANR	2461664	Identifier	y1		2461282	1					
ANR	2461665	Parameter	int w	134:54:3744:3748	2461282	3	True				
ANR	2461666	ParameterType	int		2461282	0					
ANR	2461667	Identifier	w		2461282	1					
ANR	2461668	Parameter	int h	134:61:3751:3755	2461282	4	True				
ANR	2461669	ParameterType	int		2461282	0					
ANR	2461670	Identifier	h		2461282	1					
ANR	2461671	Parameter	gx_color_index color	135:22:3780:3799	2461282	5	True				
ANR	2461672	ParameterType	gx_color_index		2461282	0					
ANR	2461673	Identifier	color		2461282	1					
ANR	2461674	CFGEntryNode	ENTRY		2461282		True				
ANR	2461675	CFGExitNode	EXIT		2461282		True				
ANR	2461676	Symbol	color		2461282						
ANR	2461677	Symbol	pedev -> fbaddr		2461282						
ANR	2461678	Symbol	led		2461282						
ANR	2461679	Symbol	red		2461282						
ANR	2461680	Symbol	dev		2461282						
ANR	2461681	Symbol	YSIZE		2461282						
ANR	2461682	Symbol	y1		2461282						
ANR	2461683	Symbol	* ptr		2461282						
ANR	2461684	Symbol	y2		2461282						
ANR	2461685	Symbol	pedev		2461282						
ANR	2461686	Symbol	d		2461282						
ANR	2461687	Symbol	xlen		2461282						
ANR	2461688	Symbol	XSIZE		2461282						
ANR	2461689	Symbol	* p ++		2461282						
ANR	2461690	Symbol	h		2461282						
ANR	2461691	Symbol	~red		2461282						
ANR	2461692	Symbol	ptr		2461282						
ANR	2461693	Symbol	* pedev		2461282						
ANR	2461694	Symbol	p		2461282						
ANR	2461695	Symbol	w		2461282						
ANR	2461696	Symbol	~led		2461282						
ANR	2461697	Symbol	x		2461282						
ANR	2461698	Symbol	x1		2461282						
ANR	2461699	Symbol	x2		2461282						
ANR	2461700	Symbol	* p		2461282						
ANR	2461701	Symbol	BPL		2461282						
ANR	2461702	Function	pe_copy_mono	221:0:5808:10602							
ANR	2461703	FunctionDef	"pe_copy_mono (gx_device * dev , const byte * base , int sourcex , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index zero , gx_color_index one)"		2461702	0					
ANR	2461704	CompoundStatement		225:0:6021:10602	2461702	0					
ANR	2461705	IdentifierDeclStatement	const byte * line ;	226:8:6031:6047	2461702	0	True				
ANR	2461706	IdentifierDecl	* line		2461702	0					
ANR	2461707	IdentifierDeclType	const byte *		2461702	0					
ANR	2461708	Identifier	line		2461702	1					
ANR	2461709	IdentifierDeclStatement	"int sleft , dleft ;"	227:8:6057:6073	2461702	1	True				
ANR	2461710	IdentifierDecl	sleft		2461702	0					
ANR	2461711	IdentifierDeclType	int		2461702	0					
ANR	2461712	Identifier	sleft		2461702	1					
ANR	2461713	IdentifierDecl	dleft		2461702	1					
ANR	2461714	IdentifierDeclType	int		2461702	0					
ANR	2461715	Identifier	dleft		2461702	1					
ANR	2461716	IdentifierDeclStatement	"int mask , rmask ;"	228:8:6083:6098	2461702	2	True				
ANR	2461717	IdentifierDecl	mask		2461702	0					
ANR	2461718	IdentifierDeclType	int		2461702	0					
ANR	2461719	Identifier	mask		2461702	1					
ANR	2461720	IdentifierDecl	rmask		2461702	1					
ANR	2461721	IdentifierDeclType	int		2461702	0					
ANR	2461722	Identifier	rmask		2461702	1					
ANR	2461723	IdentifierDeclStatement	"int invert , zmask , omask ;"	229:8:6108:6132	2461702	3	True				
ANR	2461724	IdentifierDecl	invert		2461702	0					
ANR	2461725	IdentifierDeclType	int		2461702	0					
ANR	2461726	Identifier	invert		2461702	1					
ANR	2461727	IdentifierDecl	zmask		2461702	1					
ANR	2461728	IdentifierDeclType	int		2461702	0					
ANR	2461729	Identifier	zmask		2461702	1					
ANR	2461730	IdentifierDecl	omask		2461702	2					
ANR	2461731	IdentifierDeclType	int		2461702	0					
ANR	2461732	Identifier	omask		2461702	1					
ANR	2461733	IdentifierDeclStatement	byte * dest ;	230:8:6142:6152	2461702	4	True				
ANR	2461734	IdentifierDecl	* dest		2461702	0					
ANR	2461735	IdentifierDeclType	byte *		2461702	0					
ANR	2461736	Identifier	dest		2461702	1					
ANR	2461737	IdentifierDeclStatement	int offset ;	231:8:6162:6172	2461702	5	True				
ANR	2461738	IdentifierDecl	offset		2461702	0					
ANR	2461739	IdentifierDeclType	int		2461702	0					
ANR	2461740	Identifier	offset		2461702	1					
ANR	2461741	Statement	define	233:1:6176:6181	2461702	6	True				
ANR	2461742	Statement	izero	233:8:6183:6187	2461702	7	True				
ANR	2461743	Statement	(	233:14:6189:6189	2461702	8	True				
ANR	2461744	Statement	int	233:15:6190:6192	2461702	9	True				
ANR	2461745	Statement	)	233:18:6193:6193	2461702	10	True				
ANR	2461746	Statement	zero	233:19:6194:6197	2461702	11	True				
ANR	2461747	Statement	define	234:1:6200:6205	2461702	12	True				
ANR	2461748	Statement	ione	234:8:6207:6210	2461702	13	True				
ANR	2461749	Statement	(	234:13:6212:6212	2461702	14	True				
ANR	2461750	Statement	int	234:14:6213:6215	2461702	15	True				
ANR	2461751	Statement	)	234:17:6216:6216	2461702	16	True				
ANR	2461752	Statement	one	234:18:6217:6219	2461702	17	True				
ANR	2461753	IfStatement	if ( ione == izero )		2461702	18					
ANR	2461754	Condition	ione == izero	236:5:6227:6239	2461702	0	True				
ANR	2461755	EqualityExpression	ione == izero		2461702	0		==			
ANR	2461756	Identifier	ione		2461702	0					
ANR	2461757	Identifier	izero		2461702	1					
ANR	2461758	ReturnStatement	"return pe_fill_rectangle ( dev , x , y , w , h , zero ) ;"	237:16:6279:6326	2461702	1	True				
ANR	2461759	CallExpression	"pe_fill_rectangle ( dev , x , y , w , h , zero )"		2461702	0					
ANR	2461760	Callee	pe_fill_rectangle		2461702	0					
ANR	2461761	Identifier	pe_fill_rectangle		2461702	0					
ANR	2461762	ArgumentList	dev		2461702	1					
ANR	2461763	Argument	dev		2461702	0					
ANR	2461764	Identifier	dev		2461702	0					
ANR	2461765	Argument	x		2461702	1					
ANR	2461766	Identifier	x		2461702	0					
ANR	2461767	Argument	y		2461702	2					
ANR	2461768	Identifier	y		2461702	0					
ANR	2461769	Argument	w		2461702	3					
ANR	2461770	Identifier	w		2461702	0					
ANR	2461771	Argument	h		2461702	4					
ANR	2461772	Identifier	h		2461702	0					
ANR	2461773	Argument	zero		2461702	5					
ANR	2461774	Identifier	zero		2461702	0					
ANR	2461775	IfStatement	if ( ( x > XSIZE ) || ( y > YSIZE ) || ( ( x + w ) < 0 ) || ( ( y + h ) < 0 ) )		2461702	19					
ANR	2461776	Condition	( x > XSIZE ) || ( y > YSIZE ) || ( ( x + w ) < 0 ) || ( ( y + h ) < 0 )	241:12:6361:6420	2461702	0	True				
ANR	2461777	OrExpression	( x > XSIZE ) || ( y > YSIZE ) || ( ( x + w ) < 0 ) || ( ( y + h ) < 0 )		2461702	0		||			
ANR	2461778	RelationalExpression	x > XSIZE		2461702	0		>			
ANR	2461779	Identifier	x		2461702	0					
ANR	2461780	Identifier	XSIZE		2461702	1					
ANR	2461781	OrExpression	( y > YSIZE ) || ( ( x + w ) < 0 ) || ( ( y + h ) < 0 )		2461702	1		||			
ANR	2461782	RelationalExpression	y > YSIZE		2461702	0		>			
ANR	2461783	Identifier	y		2461702	0					
ANR	2461784	Identifier	YSIZE		2461702	1					
ANR	2461785	OrExpression	( ( x + w ) < 0 ) || ( ( y + h ) < 0 )		2461702	1		||			
ANR	2461786	RelationalExpression	( x + w ) < 0		2461702	0		<			
ANR	2461787	AdditiveExpression	x + w		2461702	0		+			
ANR	2461788	Identifier	x		2461702	0					
ANR	2461789	Identifier	w		2461702	1					
ANR	2461790	PrimaryExpression	0		2461702	1					
ANR	2461791	RelationalExpression	( y + h ) < 0		2461702	1		<			
ANR	2461792	AdditiveExpression	y + h		2461702	0		+			
ANR	2461793	Identifier	y		2461702	0					
ANR	2461794	Identifier	h		2461702	1					
ANR	2461795	PrimaryExpression	0		2461702	1					
ANR	2461796	ReturnStatement	return 0 ;	242:16:6439:6447	2461702	1	True				
ANR	2461797	PrimaryExpression	0		2461702	0					
ANR	2461798	ExpressionStatement	offset = x >> 3	244:8:6458:6473	2461702	20	True				
ANR	2461799	AssignmentExpression	offset = x >> 3		2461702	0		=			
ANR	2461800	Identifier	offset		2461702	0					
ANR	2461801	ShiftExpression	x >> 3		2461702	1		>>			
ANR	2461802	Identifier	x		2461702	0					
ANR	2461803	PrimaryExpression	3		2461702	1					
ANR	2461804	ExpressionStatement	dest = pedev -> fbaddr + ( y * BPL ) + offset	245:8:6483:6524	2461702	21	True				
ANR	2461805	AssignmentExpression	dest = pedev -> fbaddr + ( y * BPL ) + offset		2461702	0		=			
ANR	2461806	Identifier	dest		2461702	0					
ANR	2461807	AdditiveExpression	pedev -> fbaddr + ( y * BPL ) + offset		2461702	1		+			
ANR	2461808	PtrMemberAccess	pedev -> fbaddr		2461702	0					
ANR	2461809	Identifier	pedev		2461702	0					
ANR	2461810	Identifier	fbaddr		2461702	1					
ANR	2461811	AdditiveExpression	( y * BPL ) + offset		2461702	1		+			
ANR	2461812	MultiplicativeExpression	y * BPL		2461702	0		*			
ANR	2461813	Identifier	y		2461702	0					
ANR	2461814	Identifier	BPL		2461702	1					
ANR	2461815	Identifier	offset		2461702	1					
ANR	2461816	ExpressionStatement	line = base + ( sourcex >> 3 )	246:8:6534:6562	2461702	22	True				
ANR	2461817	AssignmentExpression	line = base + ( sourcex >> 3 )		2461702	0		=			
ANR	2461818	Identifier	line		2461702	0					
ANR	2461819	AdditiveExpression	base + ( sourcex >> 3 )		2461702	1		+			
ANR	2461820	Identifier	base		2461702	0					
ANR	2461821	ShiftExpression	sourcex >> 3		2461702	1		>>			
ANR	2461822	Identifier	sourcex		2461702	0					
ANR	2461823	PrimaryExpression	3		2461702	1					
ANR	2461824	ExpressionStatement	sleft = 8 - ( sourcex & 7 )	247:8:6572:6597	2461702	23	True				
ANR	2461825	AssignmentExpression	sleft = 8 - ( sourcex & 7 )		2461702	0		=			
ANR	2461826	Identifier	sleft		2461702	0					
ANR	2461827	AdditiveExpression	8 - ( sourcex & 7 )		2461702	1		-			
ANR	2461828	PrimaryExpression	8		2461702	0					
ANR	2461829	BitAndExpression	sourcex & 7		2461702	1		&			
ANR	2461830	Identifier	sourcex		2461702	0					
ANR	2461831	PrimaryExpression	7		2461702	1					
ANR	2461832	ExpressionStatement	dleft = 8 - ( x & 7 )	248:8:6607:6626	2461702	24	True				
ANR	2461833	AssignmentExpression	dleft = 8 - ( x & 7 )		2461702	0		=			
ANR	2461834	Identifier	dleft		2461702	0					
ANR	2461835	AdditiveExpression	8 - ( x & 7 )		2461702	1		-			
ANR	2461836	PrimaryExpression	8		2461702	0					
ANR	2461837	BitAndExpression	x & 7		2461702	1		&			
ANR	2461838	Identifier	x		2461702	0					
ANR	2461839	PrimaryExpression	7		2461702	1					
ANR	2461840	ExpressionStatement	mask = 0xff >> ( 8 - dleft )	249:8:6636:6662	2461702	25	True				
ANR	2461841	AssignmentExpression	mask = 0xff >> ( 8 - dleft )		2461702	0		=			
ANR	2461842	Identifier	mask		2461702	0					
ANR	2461843	ShiftExpression	0xff >> ( 8 - dleft )		2461702	1		>>			
ANR	2461844	PrimaryExpression	0xff		2461702	0					
ANR	2461845	AdditiveExpression	8 - dleft		2461702	1		-			
ANR	2461846	PrimaryExpression	8		2461702	0					
ANR	2461847	Identifier	dleft		2461702	1					
ANR	2461848	IfStatement	if ( w < dleft )		2461702	26					
ANR	2461849	Condition	w < dleft	250:13:6677:6685	2461702	0	True				
ANR	2461850	RelationalExpression	w < dleft		2461702	0		<			
ANR	2461851	Identifier	w		2461702	0					
ANR	2461852	Identifier	dleft		2461702	1					
ANR	2461853	ExpressionStatement	mask -= mask >> w	251:16:6705:6722	2461702	1	True				
ANR	2461854	AssignmentExpression	mask -= mask >> w		2461702	0		-=			
ANR	2461855	Identifier	mask		2461702	0					
ANR	2461856	ShiftExpression	mask >> w		2461702	1		>>			
ANR	2461857	Identifier	mask		2461702	0					
ANR	2461858	Identifier	w		2461702	1					
ANR	2461859	ElseStatement	else		2461702	0					
ANR	2461860	ExpressionStatement	rmask = 0xff00 >> ( ( w - dleft ) & 7 )	253:16:6753:6788	2461702	0	True				
ANR	2461861	AssignmentExpression	rmask = 0xff00 >> ( ( w - dleft ) & 7 )		2461702	0		=			
ANR	2461862	Identifier	rmask		2461702	0					
ANR	2461863	ShiftExpression	0xff00 >> ( ( w - dleft ) & 7 )		2461702	1		>>			
ANR	2461864	PrimaryExpression	0xff00		2461702	0					
ANR	2461865	BitAndExpression	( w - dleft ) & 7		2461702	1		&			
ANR	2461866	AdditiveExpression	w - dleft		2461702	0		-			
ANR	2461867	Identifier	w		2461702	0					
ANR	2461868	Identifier	dleft		2461702	1					
ANR	2461869	PrimaryExpression	7		2461702	1					
ANR	2461870	Statement	define	258:1:6910:6915	2461702	27	True				
ANR	2461871	Statement	write_byte_masked	258:8:6917:6933	2461702	28	True				
ANR	2461872	Statement	(	258:25:6934:6934	2461702	29	True				
ANR	2461873	Statement	ptr	258:26:6935:6937	2461702	30	True				
ANR	2461874	Statement	","	258:29:6938:6938	2461702	31	True				
ANR	2461875	Statement	bits	258:31:6940:6943	2461702	32	True				
ANR	2461876	Statement	","	258:35:6944:6944	2461702	33	True				
ANR	2461877	Statement	mask	258:37:6946:6949	2461702	34	True				
ANR	2461878	Statement	)	258:41:6950:6950	2461702	35	True				
ANR	2461879	Statement	*	259:2:6955:6955	2461702	36	True				
ANR	2461880	Statement	ptr	259:3:6956:6958	2461702	37	True				
ANR	2461881	Statement	=	259:7:6960:6960	2461702	38	True				
ANR	2461882	Statement	(	259:9:6962:6962	2461702	39	True				
ANR	2461883	Statement	(	259:10:6963:6963	2461702	40	True				
ANR	2461884	Statement	bits	259:11:6964:6967	2461702	41	True				
ANR	2461885	Statement	|	259:16:6969:6969	2461702	42	True				
ANR	2461886	Statement	~mask	259:18:6971:6975	2461702	43	True				
ANR	2461887	Statement	|	259:24:6977:6977	2461702	44	True				
ANR	2461888	Statement	zmask	259:26:6979:6983	2461702	45	True				
ANR	2461889	Statement	)	259:31:6984:6984	2461702	46	True				
ANR	2461890	Statement	&	259:33:6986:6986	2461702	47	True				
ANR	2461891	Statement	*	259:35:6988:6988	2461702	48	True				
ANR	2461892	Statement	ptr	259:36:6989:6991	2461702	49	True				
ANR	2461893	Statement	|	259:40:6993:6993	2461702	50	True				
ANR	2461894	Statement	(	259:42:6995:6995	2461702	51	True				
ANR	2461895	Statement	bits	259:43:6996:6999	2461702	52	True				
ANR	2461896	Statement	&	259:48:7001:7001	2461702	53	True				
ANR	2461897	Statement	mask	259:50:7003:7006	2461702	54	True				
ANR	2461898	Statement	&	259:55:7008:7008	2461702	55	True				
ANR	2461899	Statement	omask	259:57:7010:7014	2461702	56	True				
ANR	2461900	Statement	)	259:62:7015:7015	2461702	57	True				
ANR	2461901	Statement	)	259:63:7016:7016	2461702	58	True				
ANR	2461902	Statement	define	261:1:7020:7025	2461702	59	True				
ANR	2461903	Statement	write_byte	261:8:7027:7036	2461702	60	True				
ANR	2461904	Statement	(	261:18:7037:7037	2461702	61	True				
ANR	2461905	Statement	ptr	261:19:7038:7040	2461702	62	True				
ANR	2461906	Statement	","	261:22:7041:7041	2461702	63	True				
ANR	2461907	Statement	bits	261:24:7043:7046	2461702	64	True				
ANR	2461908	Statement	)	261:28:7047:7047	2461702	65	True				
ANR	2461909	Statement	*	262:2:7052:7052	2461702	66	True				
ANR	2461910	Statement	ptr	262:3:7053:7055	2461702	67	True				
ANR	2461911	Statement	=	262:7:7057:7057	2461702	68	True				
ANR	2461912	Statement	(	262:9:7059:7059	2461702	69	True				
ANR	2461913	Statement	(	262:10:7060:7060	2461702	70	True				
ANR	2461914	Statement	bits	262:11:7061:7064	2461702	71	True				
ANR	2461915	Statement	|	262:16:7066:7066	2461702	72	True				
ANR	2461916	Statement	zmask	262:18:7068:7072	2461702	73	True				
ANR	2461917	Statement	)	262:23:7073:7073	2461702	74	True				
ANR	2461918	Statement	&	262:25:7075:7075	2461702	75	True				
ANR	2461919	Statement	*	262:27:7077:7077	2461702	76	True				
ANR	2461920	Statement	ptr	262:28:7078:7080	2461702	77	True				
ANR	2461921	Statement	|	262:32:7082:7082	2461702	78	True				
ANR	2461922	Statement	(	262:34:7084:7084	2461702	79	True				
ANR	2461923	Statement	bits	262:35:7085:7088	2461702	80	True				
ANR	2461924	Statement	&	262:40:7090:7090	2461702	81	True				
ANR	2461925	Statement	omask	262:42:7092:7096	2461702	82	True				
ANR	2461926	Statement	)	262:47:7097:7097	2461702	83	True				
ANR	2461927	Statement	)	262:48:7098:7098	2461702	84	True				
ANR	2461928	ExpressionStatement	invert = ( izero == 1 || ione == 0 ? - 1 : 0 )	269:8:7284:7327	2461702	85	True				
ANR	2461929	AssignmentExpression	invert = ( izero == 1 || ione == 0 ? - 1 : 0 )		2461702	0		=			
ANR	2461930	Identifier	invert		2461702	0					
ANR	2461931	ConditionalExpression	izero == 1 || ione == 0 ? - 1 : 0		2461702	1					
ANR	2461932	Condition	izero == 1 || ione == 0		2461702	0					
ANR	2461933	OrExpression	izero == 1 || ione == 0		2461702	0		||			
ANR	2461934	EqualityExpression	izero == 1		2461702	0		==			
ANR	2461935	Identifier	izero		2461702	0					
ANR	2461936	PrimaryExpression	1		2461702	1					
ANR	2461937	EqualityExpression	ione == 0		2461702	1		==			
ANR	2461938	Identifier	ione		2461702	0					
ANR	2461939	PrimaryExpression	0		2461702	1					
ANR	2461940	UnaryOperationExpression	- 1		2461702	1					
ANR	2461941	UnaryOperator	-		2461702	0					
ANR	2461942	PrimaryExpression	1		2461702	1					
ANR	2461943	PrimaryExpression	0		2461702	2					
ANR	2461944	ExpressionStatement	zmask = ( izero == 0 || ione == 0 ? 0 : - 1 )	270:8:7337:7379	2461702	86	True				
ANR	2461945	AssignmentExpression	zmask = ( izero == 0 || ione == 0 ? 0 : - 1 )		2461702	0		=			
ANR	2461946	Identifier	zmask		2461702	0					
ANR	2461947	ConditionalExpression	izero == 0 || ione == 0 ? 0 : - 1		2461702	1					
ANR	2461948	Condition	izero == 0 || ione == 0		2461702	0					
ANR	2461949	OrExpression	izero == 0 || ione == 0		2461702	0		||			
ANR	2461950	EqualityExpression	izero == 0		2461702	0		==			
ANR	2461951	Identifier	izero		2461702	0					
ANR	2461952	PrimaryExpression	0		2461702	1					
ANR	2461953	EqualityExpression	ione == 0		2461702	1		==			
ANR	2461954	Identifier	ione		2461702	0					
ANR	2461955	PrimaryExpression	0		2461702	1					
ANR	2461956	PrimaryExpression	0		2461702	1					
ANR	2461957	UnaryOperationExpression	- 1		2461702	2					
ANR	2461958	UnaryOperator	-		2461702	0					
ANR	2461959	PrimaryExpression	1		2461702	1					
ANR	2461960	ExpressionStatement	omask = ( izero == 1 || ione == 1 ? - 1 : 0 )	271:8:7389:7431	2461702	87	True				
ANR	2461961	AssignmentExpression	omask = ( izero == 1 || ione == 1 ? - 1 : 0 )		2461702	0		=			
ANR	2461962	Identifier	omask		2461702	0					
ANR	2461963	ConditionalExpression	izero == 1 || ione == 1 ? - 1 : 0		2461702	1					
ANR	2461964	Condition	izero == 1 || ione == 1		2461702	0					
ANR	2461965	OrExpression	izero == 1 || ione == 1		2461702	0		||			
ANR	2461966	EqualityExpression	izero == 1		2461702	0		==			
ANR	2461967	Identifier	izero		2461702	0					
ANR	2461968	PrimaryExpression	1		2461702	1					
ANR	2461969	EqualityExpression	ione == 1		2461702	1		==			
ANR	2461970	Identifier	ione		2461702	0					
ANR	2461971	PrimaryExpression	1		2461702	1					
ANR	2461972	UnaryOperationExpression	- 1		2461702	1					
ANR	2461973	UnaryOperator	-		2461702	0					
ANR	2461974	PrimaryExpression	1		2461702	1					
ANR	2461975	PrimaryExpression	0		2461702	2					
ANR	2461976	Statement	undef	273:1:7435:7439	2461702	88	True				
ANR	2461977	Statement	izero	273:7:7441:7445	2461702	89	True				
ANR	2461978	Statement	undef	274:1:7448:7452	2461702	90	True				
ANR	2461979	Statement	ione	274:7:7454:7457	2461702	91	True				
ANR	2461980	IfStatement	if ( sleft == dleft )		2461702	92					
ANR	2461981	Condition	sleft == dleft	276:12:7472:7485	2461702	0	True				
ANR	2461982	EqualityExpression	sleft == dleft		2461702	0		==			
ANR	2461983	Identifier	sleft		2461702	0					
ANR	2461984	Identifier	dleft		2461702	1					
ANR	2461985	CompoundStatement		53:8:1507:1507	2461702	1					
ANR	2461986	ExpressionStatement	w -= dleft	278:16:7547:7557	2461702	0	True				
ANR	2461987	AssignmentExpression	w -= dleft		2461702	0		-=			
ANR	2461988	Identifier	w		2461702	0					
ANR	2461989	Identifier	dleft		2461702	1					
ANR	2461990	WhileStatement	while ( -- h >= 0 )		2461702	1					
ANR	2461991	Condition	-- h >= 0	279:24:7583:7590	2461702	0	True				
ANR	2461992	RelationalExpression	-- h >= 0		2461702	0		>=			
ANR	2461993	UnaryExpression	-- h		2461702	0					
ANR	2461994	IncDec	--		2461702	0					
ANR	2461995	Identifier	h		2461702	1					
ANR	2461996	PrimaryExpression	0		2461702	1					
ANR	2461997	CompoundStatement		60:33:1772:1797	2461702	1					
ANR	2461998	Statement	register	281:24:7636:7643	2461702	0	True				
ANR	2461999	IdentifierDeclStatement	const byte * bptr = line ;	281:33:7645:7668	2461702	1	True				
ANR	2462000	IdentifierDecl	* bptr = line		2461702	0					
ANR	2462001	IdentifierDeclType	const byte *		2461702	0					
ANR	2462002	Identifier	bptr		2461702	1					
ANR	2462003	AssignmentExpression	* bptr = line		2461702	2		=			
ANR	2462004	Identifier	line		2461702	0					
ANR	2462005	Identifier	line		2461702	1					
ANR	2462006	IdentifierDeclStatement	int count = w ;	282:24:7694:7707	2461702	2	True				
ANR	2462007	IdentifierDecl	count = w		2461702	0					
ANR	2462008	IdentifierDeclType	int		2461702	0					
ANR	2462009	Identifier	count		2461702	1					
ANR	2462010	AssignmentExpression	count = w		2461702	2		=			
ANR	2462011	Identifier	w		2461702	0					
ANR	2462012	Identifier	w		2461702	1					
ANR	2462013	Statement	register	283:24:7733:7740	2461702	3	True				
ANR	2462014	IdentifierDeclStatement	byte * optr = dest ;	283:33:7742:7759	2461702	4	True				
ANR	2462015	IdentifierDecl	* optr = dest		2461702	0					
ANR	2462016	IdentifierDeclType	byte *		2461702	0					
ANR	2462017	Identifier	optr		2461702	1					
ANR	2462018	AssignmentExpression	* optr = dest		2461702	2		=			
ANR	2462019	Identifier	dest		2461702	0					
ANR	2462020	Identifier	dest		2461702	1					
ANR	2462021	Statement	register	284:24:7785:7792	2461702	5	True				
ANR	2462022	IdentifierDeclStatement	int bits = * bptr ^ invert ;	284:33:7794:7819	2461702	6	True				
ANR	2462023	IdentifierDecl	bits = * bptr ^ invert		2461702	0					
ANR	2462024	IdentifierDeclType	int		2461702	0					
ANR	2462025	Identifier	bits		2461702	1					
ANR	2462026	AssignmentExpression	bits = * bptr ^ invert		2461702	2		=			
ANR	2462027	Identifier	bits		2461702	0					
ANR	2462028	ExclusiveOrExpression	* bptr ^ invert		2461702	1		^			
ANR	2462029	UnaryOperationExpression	* bptr		2461702	0					
ANR	2462030	UnaryOperator	*		2461702	0					
ANR	2462031	Identifier	bptr		2461702	1					
ANR	2462032	Identifier	invert		2461702	1					
ANR	2462033	ExpressionStatement	"write_byte_masked ( optr , bits , mask )"	286:24:7871:7906	2461702	7	True				
ANR	2462034	CallExpression	"write_byte_masked ( optr , bits , mask )"		2461702	0					
ANR	2462035	Callee	write_byte_masked		2461702	0					
ANR	2462036	Identifier	write_byte_masked		2461702	0					
ANR	2462037	ArgumentList	optr		2461702	1					
ANR	2462038	Argument	optr		2461702	0					
ANR	2462039	Identifier	optr		2461702	0					
ANR	2462040	Argument	bits		2461702	1					
ANR	2462041	Identifier	bits		2461702	0					
ANR	2462042	Argument	mask		2461702	2					
ANR	2462043	Identifier	mask		2461702	0					
ANR	2462044	WhileStatement	while ( ( count -= 8 ) >= 0 )		2461702	8					
ANR	2462045	Condition	( count -= 8 ) >= 0	290:31:7986:8002	2461702	0	True				
ANR	2462046	RelationalExpression	( count -= 8 ) >= 0		2461702	0		>=			
ANR	2462047	AssignmentExpression	count -= 8		2461702	0		-=			
ANR	2462048	Identifier	count		2461702	0					
ANR	2462049	PrimaryExpression	8		2461702	1					
ANR	2462050	PrimaryExpression	0		2461702	1					
ANR	2462051	CompoundStatement		67:24:2007:2007	2461702	1					
ANR	2462052	ExpressionStatement	bits = * ++ bptr ^ invert	292:32:8063:8086	2461702	0	True				
ANR	2462053	AssignmentExpression	bits = * ++ bptr ^ invert		2461702	0		=			
ANR	2462054	Identifier	bits		2461702	0					
ANR	2462055	ExclusiveOrExpression	* ++ bptr ^ invert		2461702	1		^			
ANR	2462056	UnaryOperationExpression	* ++ bptr		2461702	0					
ANR	2462057	UnaryOperator	*		2461702	0					
ANR	2462058	UnaryExpression	++ bptr		2461702	1					
ANR	2462059	IncDec	++		2461702	0					
ANR	2462060	Identifier	bptr		2461702	1					
ANR	2462061	Identifier	invert		2461702	1					
ANR	2462062	ExpressionStatement	++ optr	293:32:8120:8126	2461702	1	True				
ANR	2462063	UnaryExpression	++ optr		2461702	0					
ANR	2462064	IncDec	++		2461702	0					
ANR	2462065	Identifier	optr		2461702	1					
ANR	2462066	ExpressionStatement	"write_byte ( optr , bits )"	294:32:8160:8182	2461702	2	True				
ANR	2462067	CallExpression	"write_byte ( optr , bits )"		2461702	0					
ANR	2462068	Callee	write_byte		2461702	0					
ANR	2462069	Identifier	write_byte		2461702	0					
ANR	2462070	ArgumentList	optr		2461702	1					
ANR	2462071	Argument	optr		2461702	0					
ANR	2462072	Identifier	optr		2461702	0					
ANR	2462073	Argument	bits		2461702	1					
ANR	2462074	Identifier	bits		2461702	0					
ANR	2462075	IfStatement	if ( count > - 8 )		2461702	9					
ANR	2462076	Condition	count > - 8	299:28:8283:8292	2461702	0	True				
ANR	2462077	RelationalExpression	count > - 8		2461702	0		>			
ANR	2462078	Identifier	count		2461702	0					
ANR	2462079	UnaryOperationExpression	- 8		2461702	1					
ANR	2462080	UnaryOperator	-		2461702	0					
ANR	2462081	PrimaryExpression	8		2461702	1					
ANR	2462082	CompoundStatement		76:24:2297:2297	2461702	1					
ANR	2462083	ExpressionStatement	bits = * ++ bptr ^ invert	301:32:8353:8376	2461702	0	True				
ANR	2462084	AssignmentExpression	bits = * ++ bptr ^ invert		2461702	0		=			
ANR	2462085	Identifier	bits		2461702	0					
ANR	2462086	ExclusiveOrExpression	* ++ bptr ^ invert		2461702	1		^			
ANR	2462087	UnaryOperationExpression	* ++ bptr		2461702	0					
ANR	2462088	UnaryOperator	*		2461702	0					
ANR	2462089	UnaryExpression	++ bptr		2461702	1					
ANR	2462090	IncDec	++		2461702	0					
ANR	2462091	Identifier	bptr		2461702	1					
ANR	2462092	Identifier	invert		2461702	1					
ANR	2462093	ExpressionStatement	++ optr	302:32:8410:8416	2461702	1	True				
ANR	2462094	UnaryExpression	++ optr		2461702	0					
ANR	2462095	IncDec	++		2461702	0					
ANR	2462096	Identifier	optr		2461702	1					
ANR	2462097	ExpressionStatement	"write_byte_masked ( optr , bits , rmask )"	303:32:8450:8486	2461702	2	True				
ANR	2462098	CallExpression	"write_byte_masked ( optr , bits , rmask )"		2461702	0					
ANR	2462099	Callee	write_byte_masked		2461702	0					
ANR	2462100	Identifier	write_byte_masked		2461702	0					
ANR	2462101	ArgumentList	optr		2461702	1					
ANR	2462102	Argument	optr		2461702	0					
ANR	2462103	Identifier	optr		2461702	0					
ANR	2462104	Argument	bits		2461702	1					
ANR	2462105	Identifier	bits		2461702	0					
ANR	2462106	Argument	rmask		2461702	2					
ANR	2462107	Identifier	rmask		2461702	0					
ANR	2462108	ExpressionStatement	dest += BPL	305:24:8538:8549	2461702	10	True				
ANR	2462109	AssignmentExpression	dest += BPL		2461702	0		+=			
ANR	2462110	Identifier	dest		2461702	0					
ANR	2462111	Identifier	BPL		2461702	1					
ANR	2462112	ExpressionStatement	line += raster	306:24:8575:8589	2461702	11	True				
ANR	2462113	AssignmentExpression	line += raster		2461702	0		+=			
ANR	2462114	Identifier	line		2461702	0					
ANR	2462115	Identifier	raster		2461702	1					
ANR	2462116	ElseStatement	else		2461702	0					
ANR	2462117	CompoundStatement		88:16:2684:2704	2461702	0					
ANR	2462118	IdentifierDeclStatement	int skew = ( sleft - dleft ) & 7 ;	311:16:8658:8688	2461702	0	True				
ANR	2462119	IdentifierDecl	skew = ( sleft - dleft ) & 7		2461702	0					
ANR	2462120	IdentifierDeclType	int		2461702	0					
ANR	2462121	Identifier	skew		2461702	1					
ANR	2462122	AssignmentExpression	skew = ( sleft - dleft ) & 7		2461702	2		=			
ANR	2462123	Identifier	skew		2461702	0					
ANR	2462124	BitAndExpression	( sleft - dleft ) & 7		2461702	1		&			
ANR	2462125	AdditiveExpression	sleft - dleft		2461702	0		-			
ANR	2462126	Identifier	sleft		2461702	0					
ANR	2462127	Identifier	dleft		2461702	1					
ANR	2462128	PrimaryExpression	7		2461702	1					
ANR	2462129	IdentifierDeclStatement	int cskew = 8 - skew ;	312:16:8706:8726	2461702	1	True				
ANR	2462130	IdentifierDecl	cskew = 8 - skew		2461702	0					
ANR	2462131	IdentifierDeclType	int		2461702	0					
ANR	2462132	Identifier	cskew		2461702	1					
ANR	2462133	AssignmentExpression	cskew = 8 - skew		2461702	2		=			
ANR	2462134	Identifier	cskew		2461702	0					
ANR	2462135	AdditiveExpression	8 - skew		2461702	1		-			
ANR	2462136	PrimaryExpression	8		2461702	0					
ANR	2462137	Identifier	skew		2461702	1					
ANR	2462138	WhileStatement	while ( -- h >= 0 )		2461702	2					
ANR	2462139	Condition	-- h >= 0	314:23:8752:8759	2461702	0	True				
ANR	2462140	RelationalExpression	-- h >= 0		2461702	0		>=			
ANR	2462141	UnaryExpression	-- h		2461702	0					
ANR	2462142	IncDec	--		2461702	0					
ANR	2462143	Identifier	h		2461702	1					
ANR	2462144	PrimaryExpression	0		2461702	1					
ANR	2462145	CompoundStatement		95:33:2922:2930	2461702	1					
ANR	2462146	IdentifierDeclStatement	const byte * bptr = line ;	316:24:8804:8827	2461702	0	True				
ANR	2462147	IdentifierDecl	* bptr = line		2461702	0					
ANR	2462148	IdentifierDeclType	const byte *		2461702	0					
ANR	2462149	Identifier	bptr		2461702	1					
ANR	2462150	AssignmentExpression	* bptr = line		2461702	2		=			
ANR	2462151	Identifier	line		2461702	0					
ANR	2462152	Identifier	line		2461702	1					
ANR	2462153	IdentifierDeclStatement	int count = w ;	317:24:8853:8866	2461702	1	True				
ANR	2462154	IdentifierDecl	count = w		2461702	0					
ANR	2462155	IdentifierDeclType	int		2461702	0					
ANR	2462156	Identifier	count		2461702	1					
ANR	2462157	AssignmentExpression	count = w		2461702	2		=			
ANR	2462158	Identifier	w		2461702	0					
ANR	2462159	Identifier	w		2461702	1					
ANR	2462160	IdentifierDeclStatement	byte * optr = dest ;	318:24:8892:8909	2461702	2	True				
ANR	2462161	IdentifierDecl	* optr = dest		2461702	0					
ANR	2462162	IdentifierDeclType	byte *		2461702	0					
ANR	2462163	Identifier	optr		2461702	1					
ANR	2462164	AssignmentExpression	* optr = dest		2461702	2		=			
ANR	2462165	Identifier	dest		2461702	0					
ANR	2462166	Identifier	dest		2461702	1					
ANR	2462167	Statement	register	319:24:8935:8942	2461702	3	True				
ANR	2462168	IdentifierDeclStatement	int bits ;	319:33:8944:8952	2461702	4	True				
ANR	2462169	IdentifierDecl	bits		2461702	0					
ANR	2462170	IdentifierDeclType	int		2461702	0					
ANR	2462171	Identifier	bits		2461702	1					
ANR	2462172	IfStatement	if ( sleft >= dleft )		2461702	5					
ANR	2462173	Condition	sleft >= dleft	323:28:9040:9053	2461702	0	True				
ANR	2462174	RelationalExpression	sleft >= dleft		2461702	0		>=			
ANR	2462175	Identifier	sleft		2461702	0					
ANR	2462176	Identifier	dleft		2461702	1					
ANR	2462177	CompoundStatement		100:24:3058:3058	2461702	1					
ANR	2462178	ExpressionStatement	bits = * bptr >> skew	325:32:9114:9134	2461702	0	True				
ANR	2462179	AssignmentExpression	bits = * bptr >> skew		2461702	0		=			
ANR	2462180	Identifier	bits		2461702	0					
ANR	2462181	ShiftExpression	* bptr >> skew		2461702	1		>>			
ANR	2462182	UnaryOperationExpression	* bptr		2461702	0					
ANR	2462183	UnaryOperator	*		2461702	0					
ANR	2462184	Identifier	bptr		2461702	1					
ANR	2462185	Identifier	skew		2461702	1					
ANR	2462186	ElseStatement	else		2461702	0					
ANR	2462187	CompoundStatement		104:24:3217:3217	2461702	0					
ANR	2462188	ExpressionStatement	bits = * bptr ++ << cskew	329:32:9273:9296	2461702	0	True				
ANR	2462189	AssignmentExpression	bits = * bptr ++ << cskew		2461702	0		=			
ANR	2462190	Identifier	bits		2461702	0					
ANR	2462191	ShiftExpression	* bptr ++ << cskew		2461702	1		<<			
ANR	2462192	UnaryOperationExpression	* bptr ++		2461702	0					
ANR	2462193	UnaryOperator	*		2461702	0					
ANR	2462194	PostIncDecOperationExpression	bptr ++		2461702	1					
ANR	2462195	Identifier	bptr		2461702	0					
ANR	2462196	IncDec	++		2461702	1					
ANR	2462197	Identifier	cskew		2461702	1					
ANR	2462198	IfStatement	if ( count > sleft )		2461702	1					
ANR	2462199	Condition	count > sleft	330:36:9334:9346	2461702	0	True				
ANR	2462200	RelationalExpression	count > sleft		2461702	0		>			
ANR	2462201	Identifier	count		2461702	0					
ANR	2462202	Identifier	sleft		2461702	1					
ANR	2462203	ExpressionStatement	bits += * bptr >> skew	331:40:9389:9410	2461702	1	True				
ANR	2462204	AssignmentExpression	bits += * bptr >> skew		2461702	0		+=			
ANR	2462205	Identifier	bits		2461702	0					
ANR	2462206	ShiftExpression	* bptr >> skew		2461702	1		>>			
ANR	2462207	UnaryOperationExpression	* bptr		2461702	0					
ANR	2462208	UnaryOperator	*		2461702	0					
ANR	2462209	Identifier	bptr		2461702	1					
ANR	2462210	Identifier	skew		2461702	1					
ANR	2462211	ExpressionStatement	bits ^= invert	333:24:9462:9476	2461702	6	True				
ANR	2462212	AssignmentExpression	bits ^= invert		2461702	0		^=			
ANR	2462213	Identifier	bits		2461702	0					
ANR	2462214	Identifier	invert		2461702	1					
ANR	2462215	ExpressionStatement	"write_byte_masked ( optr , bits , mask )"	334:24:9502:9537	2461702	7	True				
ANR	2462216	CallExpression	"write_byte_masked ( optr , bits , mask )"		2461702	0					
ANR	2462217	Callee	write_byte_masked		2461702	0					
ANR	2462218	Identifier	write_byte_masked		2461702	0					
ANR	2462219	ArgumentList	optr		2461702	1					
ANR	2462220	Argument	optr		2461702	0					
ANR	2462221	Identifier	optr		2461702	0					
ANR	2462222	Argument	bits		2461702	1					
ANR	2462223	Identifier	bits		2461702	0					
ANR	2462224	Argument	mask		2461702	2					
ANR	2462225	Identifier	mask		2461702	0					
ANR	2462226	ExpressionStatement	count -= dleft	335:24:9563:9577	2461702	8	True				
ANR	2462227	AssignmentExpression	count -= dleft		2461702	0		-=			
ANR	2462228	Identifier	count		2461702	0					
ANR	2462229	Identifier	dleft		2461702	1					
ANR	2462230	ExpressionStatement	optr ++	336:24:9603:9609	2461702	9	True				
ANR	2462231	PostIncDecOperationExpression	optr ++		2461702	0					
ANR	2462232	Identifier	optr		2461702	0					
ANR	2462233	IncDec	++		2461702	1					
ANR	2462234	WhileStatement	while ( count >= 8 )		2461702	10					
ANR	2462235	Condition	count >= 8	340:32:9690:9699	2461702	0	True				
ANR	2462236	RelationalExpression	count >= 8		2461702	0		>=			
ANR	2462237	Identifier	count		2461702	0					
ANR	2462238	PrimaryExpression	8		2461702	1					
ANR	2462239	CompoundStatement		117:24:3705:3705	2461702	1					
ANR	2462240	ExpressionStatement	bits = * bptr ++ << cskew	342:32:9761:9784	2461702	0	True				
ANR	2462241	AssignmentExpression	bits = * bptr ++ << cskew		2461702	0		=			
ANR	2462242	Identifier	bits		2461702	0					
ANR	2462243	ShiftExpression	* bptr ++ << cskew		2461702	1		<<			
ANR	2462244	UnaryOperationExpression	* bptr ++		2461702	0					
ANR	2462245	UnaryOperator	*		2461702	0					
ANR	2462246	PostIncDecOperationExpression	bptr ++		2461702	1					
ANR	2462247	Identifier	bptr		2461702	0					
ANR	2462248	IncDec	++		2461702	1					
ANR	2462249	Identifier	cskew		2461702	1					
ANR	2462250	ExpressionStatement	bits += * bptr >> skew	343:32:9818:9839	2461702	1	True				
ANR	2462251	AssignmentExpression	bits += * bptr >> skew		2461702	0		+=			
ANR	2462252	Identifier	bits		2461702	0					
ANR	2462253	ShiftExpression	* bptr >> skew		2461702	1		>>			
ANR	2462254	UnaryOperationExpression	* bptr		2461702	0					
ANR	2462255	UnaryOperator	*		2461702	0					
ANR	2462256	Identifier	bptr		2461702	1					
ANR	2462257	Identifier	skew		2461702	1					
ANR	2462258	ExpressionStatement	bits ^= invert	344:32:9873:9887	2461702	2	True				
ANR	2462259	AssignmentExpression	bits ^= invert		2461702	0		^=			
ANR	2462260	Identifier	bits		2461702	0					
ANR	2462261	Identifier	invert		2461702	1					
ANR	2462262	ExpressionStatement	"write_byte ( optr , bits )"	345:32:9921:9943	2461702	3	True				
ANR	2462263	CallExpression	"write_byte ( optr , bits )"		2461702	0					
ANR	2462264	Callee	write_byte		2461702	0					
ANR	2462265	Identifier	write_byte		2461702	0					
ANR	2462266	ArgumentList	optr		2461702	1					
ANR	2462267	Argument	optr		2461702	0					
ANR	2462268	Identifier	optr		2461702	0					
ANR	2462269	Argument	bits		2461702	1					
ANR	2462270	Identifier	bits		2461702	0					
ANR	2462271	ExpressionStatement	count -= 8	346:32:9977:9987	2461702	4	True				
ANR	2462272	AssignmentExpression	count -= 8		2461702	0		-=			
ANR	2462273	Identifier	count		2461702	0					
ANR	2462274	PrimaryExpression	8		2461702	1					
ANR	2462275	ExpressionStatement	optr ++	347:32:10021:10027	2461702	5	True				
ANR	2462276	PostIncDecOperationExpression	optr ++		2461702	0					
ANR	2462277	Identifier	optr		2461702	0					
ANR	2462278	IncDec	++		2461702	1					
ANR	2462279	IfStatement	if ( count > 0 )		2461702	11					
ANR	2462280	Condition	count > 0	352:28:10128:10136	2461702	0	True				
ANR	2462281	RelationalExpression	count > 0		2461702	0		>			
ANR	2462282	Identifier	count		2461702	0					
ANR	2462283	PrimaryExpression	0		2461702	1					
ANR	2462284	CompoundStatement		129:24:4141:4141	2461702	1					
ANR	2462285	ExpressionStatement	bits = * bptr ++ << cskew	354:32:10197:10220	2461702	0	True				
ANR	2462286	AssignmentExpression	bits = * bptr ++ << cskew		2461702	0		=			
ANR	2462287	Identifier	bits		2461702	0					
ANR	2462288	ShiftExpression	* bptr ++ << cskew		2461702	1		<<			
ANR	2462289	UnaryOperationExpression	* bptr ++		2461702	0					
ANR	2462290	UnaryOperator	*		2461702	0					
ANR	2462291	PostIncDecOperationExpression	bptr ++		2461702	1					
ANR	2462292	Identifier	bptr		2461702	0					
ANR	2462293	IncDec	++		2461702	1					
ANR	2462294	Identifier	cskew		2461702	1					
ANR	2462295	IfStatement	if ( count > skew )		2461702	1					
ANR	2462296	Condition	count > skew	355:36:10258:10269	2461702	0	True				
ANR	2462297	RelationalExpression	count > skew		2461702	0		>			
ANR	2462298	Identifier	count		2461702	0					
ANR	2462299	Identifier	skew		2461702	1					
ANR	2462300	ExpressionStatement	bits += * bptr >> skew	356:40:10312:10333	2461702	1	True				
ANR	2462301	AssignmentExpression	bits += * bptr >> skew		2461702	0		+=			
ANR	2462302	Identifier	bits		2461702	0					
ANR	2462303	ShiftExpression	* bptr >> skew		2461702	1		>>			
ANR	2462304	UnaryOperationExpression	* bptr		2461702	0					
ANR	2462305	UnaryOperator	*		2461702	0					
ANR	2462306	Identifier	bptr		2461702	1					
ANR	2462307	Identifier	skew		2461702	1					
ANR	2462308	ExpressionStatement	bits ^= invert	357:32:10367:10381	2461702	2	True				
ANR	2462309	AssignmentExpression	bits ^= invert		2461702	0		^=			
ANR	2462310	Identifier	bits		2461702	0					
ANR	2462311	Identifier	invert		2461702	1					
ANR	2462312	ExpressionStatement	"write_byte_masked ( optr , bits , rmask )"	358:32:10415:10451	2461702	3	True				
ANR	2462313	CallExpression	"write_byte_masked ( optr , bits , rmask )"		2461702	0					
ANR	2462314	Callee	write_byte_masked		2461702	0					
ANR	2462315	Identifier	write_byte_masked		2461702	0					
ANR	2462316	ArgumentList	optr		2461702	1					
ANR	2462317	Argument	optr		2461702	0					
ANR	2462318	Identifier	optr		2461702	0					
ANR	2462319	Argument	bits		2461702	1					
ANR	2462320	Identifier	bits		2461702	0					
ANR	2462321	Argument	rmask		2461702	2					
ANR	2462322	Identifier	rmask		2461702	0					
ANR	2462323	ExpressionStatement	dest += BPL	360:24:10503:10514	2461702	12	True				
ANR	2462324	AssignmentExpression	dest += BPL		2461702	0		+=			
ANR	2462325	Identifier	dest		2461702	0					
ANR	2462326	Identifier	BPL		2461702	1					
ANR	2462327	ExpressionStatement	line += raster	361:24:10540:10554	2461702	13	True				
ANR	2462328	AssignmentExpression	line += raster		2461702	0		+=			
ANR	2462329	Identifier	line		2461702	0					
ANR	2462330	Identifier	raster		2461702	1					
ANR	2462331	ReturnStatement	return 0 ;	364:8:10592:10600	2461702	93	True				
ANR	2462332	PrimaryExpression	0		2461702	0					
ANR	2462333	ReturnType	int		2461702	1					
ANR	2462334	Identifier	pe_copy_mono		2461702	2					
ANR	2462335	ParameterList	"gx_device * dev , const byte * base , int sourcex , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index zero , gx_color_index one"		2461702	3					
ANR	2462336	Parameter	gx_device * dev	221:17:5825:5838	2461702	0	True				
ANR	2462337	ParameterType	gx_device *		2461702	0					
ANR	2462338	Identifier	dev		2461702	1					
ANR	2462339	Parameter	const byte * base	222:17:5858:5873	2461702	1	True				
ANR	2462340	ParameterType	const byte *		2461702	0					
ANR	2462341	Identifier	base		2461702	1					
ANR	2462342	Parameter	int sourcex	222:35:5876:5886	2461702	2	True				
ANR	2462343	ParameterType	int		2461702	0					
ANR	2462344	Identifier	sourcex		2461702	1					
ANR	2462345	Parameter	int raster	222:48:5889:5898	2461702	3	True				
ANR	2462346	ParameterType	int		2461702	0					
ANR	2462347	Identifier	raster		2461702	1					
ANR	2462348	Parameter	gx_bitmap_id id	222:60:5901:5915	2461702	4	True				
ANR	2462349	ParameterType	gx_bitmap_id		2461702	0					
ANR	2462350	Identifier	id		2461702	1					
ANR	2462351	Parameter	int x	223:17:5935:5939	2461702	5	True				
ANR	2462352	ParameterType	int		2461702	0					
ANR	2462353	Identifier	x		2461702	1					
ANR	2462354	Parameter	int y	223:24:5942:5946	2461702	6	True				
ANR	2462355	ParameterType	int		2461702	0					
ANR	2462356	Identifier	y		2461702	1					
ANR	2462357	Parameter	int w	223:31:5949:5953	2461702	7	True				
ANR	2462358	ParameterType	int		2461702	0					
ANR	2462359	Identifier	w		2461702	1					
ANR	2462360	Parameter	int h	223:38:5956:5960	2461702	8	True				
ANR	2462361	ParameterType	int		2461702	0					
ANR	2462362	Identifier	h		2461702	1					
ANR	2462363	Parameter	gx_color_index zero	224:17:5980:5998	2461702	9	True				
ANR	2462364	ParameterType	gx_color_index		2461702	0					
ANR	2462365	Identifier	zero		2461702	1					
ANR	2462366	Parameter	gx_color_index one	224:38:6001:6018	2461702	10	True				
ANR	2462367	ParameterType	gx_color_index		2461702	0					
ANR	2462368	Identifier	one		2461702	1					
ANR	2462369	CFGEntryNode	ENTRY		2461702		True				
ANR	2462370	CFGExitNode	EXIT		2461702		True				
ANR	2462371	Symbol	sourcex		2461702						
ANR	2462372	Symbol	cskew		2461702						
ANR	2462373	Symbol	line		2461702						
ANR	2462374	Symbol	* bptr ++		2461702						
ANR	2462375	Symbol	pedev -> fbaddr		2461702						
ANR	2462376	Symbol	* ++ bptr		2461702						
ANR	2462377	Symbol	zmask		2461702						
ANR	2462378	Symbol	dest		2461702						
ANR	2462379	Symbol	zero		2461702						
ANR	2462380	Symbol	izero		2461702						
ANR	2462381	Symbol	dev		2461702						
ANR	2462382	Symbol	omask		2461702						
ANR	2462383	Symbol	pe_fill_rectangle		2461702						
ANR	2462384	Symbol	YSIZE		2461702						
ANR	2462385	Symbol	dleft		2461702						
ANR	2462386	Symbol	pedev		2461702						
ANR	2462387	Symbol	id		2461702						
ANR	2462388	Symbol	* bptr		2461702						
ANR	2462389	Symbol	mask		2461702						
ANR	2462390	Symbol	bptr		2461702						
ANR	2462391	Symbol	invert		2461702						
ANR	2462392	Symbol	offset		2461702						
ANR	2462393	Symbol	one		2461702						
ANR	2462394	Symbol	rmask		2461702						
ANR	2462395	Symbol	XSIZE		2461702						
ANR	2462396	Symbol	raster		2461702						
ANR	2462397	Symbol	h		2461702						
ANR	2462398	Symbol	count		2461702						
ANR	2462399	Symbol	bits		2461702						
ANR	2462400	Symbol	optr		2461702						
ANR	2462401	Symbol	ione		2461702						
ANR	2462402	Symbol	* pedev		2461702						
ANR	2462403	Symbol	w		2461702						
ANR	2462404	Symbol	x		2461702						
ANR	2462405	Symbol	y		2461702						
ANR	2462406	Symbol	sleft		2461702						
ANR	2462407	Symbol	base		2461702						
ANR	2462408	Symbol	BPL		2461702						
ANR	2462409	Symbol	skew		2461702						
