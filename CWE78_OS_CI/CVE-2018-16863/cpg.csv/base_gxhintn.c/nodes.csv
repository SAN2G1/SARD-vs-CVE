command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1059131	File	data/converged/CVE-2018-16863_ghostpdl/base_gxhintn.c								
ANR	1059132	DeclStmt									
ANR	1059133	Decl							const char	const char *	s_pole_array
ANR	1059134	DeclStmt									
ANR	1059135	Decl							const char	const char *	s_zone_array
ANR	1059136	DeclStmt									
ANR	1059137	Decl							const char	const char *	s_hint_array
ANR	1059138	DeclStmt									
ANR	1059139	Decl							const char	const char *	s_contour_array
ANR	1059140	DeclStmt									
ANR	1059141	Decl							const char	const char *	s_subglyph_array
ANR	1059142	DeclStmt									
ANR	1059143	Decl							const char	const char *	s_hint_range_array
ANR	1059144	DeclStmt									
ANR	1059145	Decl							const char	const char *	s_hint_applying_array
ANR	1059146	DeclStmt									
ANR	1059147	Decl							const char	const char *	s_stem_snap_array
ANR	1059148	DeclStmt									
ANR	1059149	Decl							const char	const char *	s_stem_snap_vote_array
ANR	1059150	DeclStmt									
ANR	1059151	Decl							int32_t	int32_t	int24
ANR	1059152	DeclStmt									
ANR	1059153	Decl							const unsigned int	const unsigned int	split_bits
ANR	1059154	DeclStmt									
ANR	1059155	Decl							const unsigned int	const unsigned int	max_coord_bits
ANR	1059156	DeclStmt									
ANR	1059157	Decl							const unsigned int	const unsigned int	matrix_bits
ANR	1059158	DeclStmt									
ANR	1059159	Decl							const unsigned int	const unsigned int	g2o_bitshift
ANR	1059160	DeclStmt									
ANR	1059161	Decl							const int32_t	const int32_t	FFFFF000
ANR	1059162	Function	mul_shift	152:0:5629:5958							
ANR	1059163	FunctionDef	"mul_shift (int24 a , int19 b , unsigned int s)"		1059162	0					
ANR	1059164	CompoundStatement		153:0:5695:5958	1059162	0					
ANR	1059165	ReturnStatement	return ( ( int64_t ) a * ( int64_t ) b ) >> s ;	155:4:5721:5760	1059162	0	True				
ANR	1059166	ShiftExpression	( ( int64_t ) a * ( int64_t ) b ) >> s		1059162	0		>>			
ANR	1059167	MultiplicativeExpression	( int64_t ) a * ( int64_t ) b		1059162	0		*			
ANR	1059168	CastExpression	( int64_t ) a		1059162	0					
ANR	1059169	CastTarget	int64_t		1059162	0					
ANR	1059170	Identifier	a		1059162	1					
ANR	1059171	CastExpression	( int64_t ) b		1059162	1					
ANR	1059172	CastTarget	int64_t		1059162	0					
ANR	1059173	Identifier	b		1059162	1					
ANR	1059174	Identifier	s		1059162	1					
ANR	1059175	ReturnType	static inline int32_t		1059162	1					
ANR	1059176	Identifier	mul_shift		1059162	2					
ANR	1059177	ParameterList	"int24 a , int19 b , unsigned int s"		1059162	3					
ANR	1059178	Parameter	int24 a	152:32:5661:5667	1059162	0	True				
ANR	1059179	ParameterType	int24		1059162	0					
ANR	1059180	Identifier	a		1059162	1					
ANR	1059181	Parameter	int19 b	152:41:5670:5676	1059162	1	True				
ANR	1059182	ParameterType	int19		1059162	0					
ANR	1059183	Identifier	b		1059162	1					
ANR	1059184	Parameter	unsigned int s	152:50:5679:5692	1059162	2	True				
ANR	1059185	ParameterType	unsigned int		1059162	0					
ANR	1059186	Identifier	s		1059162	1					
ANR	1059187	CFGEntryNode	ENTRY		1059162		True				
ANR	1059188	CFGExitNode	EXIT		1059162		True				
ANR	1059189	Symbol	a		1059162						
ANR	1059190	Symbol	b		1059162						
ANR	1059191	Symbol	s		1059162						
ANR	1059192	Function	mul_shift_round	165:0:6009:6357							
ANR	1059193	FunctionDef	"mul_shift_round (int24 a , int19 b , unsigned int s)"		1059192	0					
ANR	1059194	CompoundStatement		166:0:6081:6357	1059192	0					
ANR	1059195	ReturnStatement	return ( ( ( ( int64_t ) a * ( int64_t ) b ) >> ( s - 1 ) ) + 1 ) >> 1 ;	168:4:6107:6166	1059192	0	True				
ANR	1059196	ShiftExpression	( ( ( ( int64_t ) a * ( int64_t ) b ) >> ( s - 1 ) ) + 1 ) >> 1		1059192	0		>>			
ANR	1059197	AdditiveExpression	( ( ( int64_t ) a * ( int64_t ) b ) >> ( s - 1 ) ) + 1		1059192	0		+			
ANR	1059198	ShiftExpression	( ( int64_t ) a * ( int64_t ) b ) >> ( s - 1 )		1059192	0		>>			
ANR	1059199	MultiplicativeExpression	( int64_t ) a * ( int64_t ) b		1059192	0		*			
ANR	1059200	CastExpression	( int64_t ) a		1059192	0					
ANR	1059201	CastTarget	int64_t		1059192	0					
ANR	1059202	Identifier	a		1059192	1					
ANR	1059203	CastExpression	( int64_t ) b		1059192	1					
ANR	1059204	CastTarget	int64_t		1059192	0					
ANR	1059205	Identifier	b		1059192	1					
ANR	1059206	AdditiveExpression	s - 1		1059192	1		-			
ANR	1059207	Identifier	s		1059192	0					
ANR	1059208	PrimaryExpression	1		1059192	1					
ANR	1059209	PrimaryExpression	1		1059192	1					
ANR	1059210	PrimaryExpression	1		1059192	1					
ANR	1059211	ReturnType	static inline int32_t		1059192	1					
ANR	1059212	Identifier	mul_shift_round		1059192	2					
ANR	1059213	ParameterList	"int24 a , int19 b , unsigned int s"		1059192	3					
ANR	1059214	Parameter	int24 a	165:38:6047:6053	1059192	0	True				
ANR	1059215	ParameterType	int24		1059192	0					
ANR	1059216	Identifier	a		1059192	1					
ANR	1059217	Parameter	int19 b	165:47:6056:6062	1059192	1	True				
ANR	1059218	ParameterType	int19		1059192	0					
ANR	1059219	Identifier	b		1059192	1					
ANR	1059220	Parameter	unsigned int s	165:56:6065:6078	1059192	2	True				
ANR	1059221	ParameterType	unsigned int		1059192	0					
ANR	1059222	Identifier	s		1059192	1					
ANR	1059223	CFGEntryNode	ENTRY		1059192		True				
ANR	1059224	CFGExitNode	EXIT		1059192		True				
ANR	1059225	Symbol	a		1059192						
ANR	1059226	Symbol	b		1059192						
ANR	1059227	Symbol	s		1059192						
ANR	1059228	Function	shift_rounded	177:0:6360:6461							
ANR	1059229	FunctionDef	"shift_rounded (int32_t v , unsigned int s)"		1059228	0					
ANR	1059230	CompoundStatement		178:0:6423:6461	1059228	0					
ANR	1059231	ReturnStatement	return ( ( v >> ( s - 1 ) ) + 1 ) >> 1 ;	178:3:6427:6459	1059228	0	True				
ANR	1059232	ShiftExpression	( ( v >> ( s - 1 ) ) + 1 ) >> 1		1059228	0		>>			
ANR	1059233	AdditiveExpression	( v >> ( s - 1 ) ) + 1		1059228	0		+			
ANR	1059234	ShiftExpression	v >> ( s - 1 )		1059228	0		>>			
ANR	1059235	Identifier	v		1059228	0					
ANR	1059236	AdditiveExpression	s - 1		1059228	1		-			
ANR	1059237	Identifier	s		1059228	0					
ANR	1059238	PrimaryExpression	1		1059228	1					
ANR	1059239	PrimaryExpression	1		1059228	1					
ANR	1059240	PrimaryExpression	1		1059228	1					
ANR	1059241	ReturnType	static inline int32_t		1059228	1					
ANR	1059242	Identifier	shift_rounded		1059228	2					
ANR	1059243	ParameterList	"int32_t v , unsigned int s"		1059228	3					
ANR	1059244	Parameter	int32_t v	177:36:6396:6404	1059228	0	True				
ANR	1059245	ParameterType	int32_t		1059228	0					
ANR	1059246	Identifier	v		1059228	1					
ANR	1059247	Parameter	unsigned int s	177:47:6407:6420	1059228	1	True				
ANR	1059248	ParameterType	unsigned int		1059228	0					
ANR	1059249	Identifier	s		1059228	1					
ANR	1059250	CFGEntryNode	ENTRY		1059228		True				
ANR	1059251	CFGExitNode	EXIT		1059228		True				
ANR	1059252	Symbol	s		1059228						
ANR	1059253	Symbol	v		1059228						
ANR	1059254	Function	Max	181:0:6464:6538							
ANR	1059255	FunctionDef	"Max (int32_t a , int32_t b)"		1059254	0					
ANR	1059256	CompoundStatement		182:0:6512:6538	1059254	0					
ANR	1059257	ReturnStatement	return a > b ? a : b ;	182:3:6516:6536	1059254	0	True				
ANR	1059258	ConditionalExpression	a > b ? a : b		1059254	0					
ANR	1059259	Condition	a > b		1059254	0					
ANR	1059260	RelationalExpression	a > b		1059254	0		>			
ANR	1059261	Identifier	a		1059254	0					
ANR	1059262	Identifier	b		1059254	1					
ANR	1059263	Identifier	a		1059254	1					
ANR	1059264	Identifier	b		1059254	2					
ANR	1059265	ReturnType	static inline int32_t		1059254	1					
ANR	1059266	Identifier	Max		1059254	2					
ANR	1059267	ParameterList	"int32_t a , int32_t b"		1059254	3					
ANR	1059268	Parameter	int32_t a	181:26:6490:6498	1059254	0	True				
ANR	1059269	ParameterType	int32_t		1059254	0					
ANR	1059270	Identifier	a		1059254	1					
ANR	1059271	Parameter	int32_t b	181:37:6501:6509	1059254	1	True				
ANR	1059272	ParameterType	int32_t		1059254	0					
ANR	1059273	Identifier	b		1059254	1					
ANR	1059274	CFGEntryNode	ENTRY		1059254		True				
ANR	1059275	CFGExitNode	EXIT		1059254		True				
ANR	1059276	Symbol	a		1059254						
ANR	1059277	Symbol	b		1059254						
ANR	1059278	Function	rshift	185:0:6541:6619							
ANR	1059279	FunctionDef	"rshift (long a , int b)"		1059278	0					
ANR	1059280	CompoundStatement		186:0:6582:6619	1059278	0					
ANR	1059281	ReturnStatement	return b > 0 ? a << b : a >> - b ;	186:3:6586:6617	1059278	0	True				
ANR	1059282	ConditionalExpression	b > 0 ? a << b : a >> - b		1059278	0					
ANR	1059283	Condition	b > 0		1059278	0					
ANR	1059284	RelationalExpression	b > 0		1059278	0		>			
ANR	1059285	Identifier	b		1059278	0					
ANR	1059286	PrimaryExpression	0		1059278	1					
ANR	1059287	ShiftExpression	a << b		1059278	1		<<			
ANR	1059288	Identifier	a		1059278	0					
ANR	1059289	Identifier	b		1059278	1					
ANR	1059290	ShiftExpression	a >> - b		1059278	2		>>			
ANR	1059291	Identifier	a		1059278	0					
ANR	1059292	UnaryOperationExpression	- b		1059278	1					
ANR	1059293	UnaryOperator	-		1059278	0					
ANR	1059294	Identifier	b		1059278	1					
ANR	1059295	ReturnType	static inline long		1059278	1					
ANR	1059296	Identifier	rshift		1059278	2					
ANR	1059297	ParameterList	"long a , int b"		1059278	3					
ANR	1059298	Parameter	long a	185:26:6567:6572	1059278	0	True				
ANR	1059299	ParameterType	long		1059278	0					
ANR	1059300	Identifier	a		1059278	1					
ANR	1059301	Parameter	int b	185:34:6575:6579	1059278	1	True				
ANR	1059302	ParameterType	int		1059278	0					
ANR	1059303	Identifier	b		1059278	1					
ANR	1059304	CFGEntryNode	ENTRY		1059278		True				
ANR	1059305	CFGExitNode	EXIT		1059278		True				
ANR	1059306	Symbol	a		1059278						
ANR	1059307	Symbol	b		1059278						
ANR	1059308	Function	double_matrix__set	190:0:6701:6876							
ANR	1059309	FunctionDef	"double_matrix__set (double_matrix * self , const gs_matrix_fixed * m)"		1059308	0					
ANR	1059310	CompoundStatement		191:0:6788:6876	1059308	0					
ANR	1059311	ExpressionStatement	self -> xx = m -> xx	191:3:6792:6808	1059308	0	True				
ANR	1059312	AssignmentExpression	self -> xx = m -> xx		1059308	0		=			
ANR	1059313	PtrMemberAccess	self -> xx		1059308	0					
ANR	1059314	Identifier	self		1059308	0					
ANR	1059315	Identifier	xx		1059308	1					
ANR	1059316	PtrMemberAccess	m -> xx		1059308	1					
ANR	1059317	Identifier	m		1059308	0					
ANR	1059318	Identifier	xx		1059308	1					
ANR	1059319	ExpressionStatement	self -> xy = m -> xy	192:4:6814:6830	1059308	1	True				
ANR	1059320	AssignmentExpression	self -> xy = m -> xy		1059308	0		=			
ANR	1059321	PtrMemberAccess	self -> xy		1059308	0					
ANR	1059322	Identifier	self		1059308	0					
ANR	1059323	Identifier	xy		1059308	1					
ANR	1059324	PtrMemberAccess	m -> xy		1059308	1					
ANR	1059325	Identifier	m		1059308	0					
ANR	1059326	Identifier	xy		1059308	1					
ANR	1059327	ExpressionStatement	self -> yx = m -> yx	193:4:6836:6852	1059308	2	True				
ANR	1059328	AssignmentExpression	self -> yx = m -> yx		1059308	0		=			
ANR	1059329	PtrMemberAccess	self -> yx		1059308	0					
ANR	1059330	Identifier	self		1059308	0					
ANR	1059331	Identifier	yx		1059308	1					
ANR	1059332	PtrMemberAccess	m -> yx		1059308	1					
ANR	1059333	Identifier	m		1059308	0					
ANR	1059334	Identifier	yx		1059308	1					
ANR	1059335	ExpressionStatement	self -> yy = m -> yy	194:4:6858:6874	1059308	3	True				
ANR	1059336	AssignmentExpression	self -> yy = m -> yy		1059308	0		=			
ANR	1059337	PtrMemberAccess	self -> yy		1059308	0					
ANR	1059338	Identifier	self		1059308	0					
ANR	1059339	Identifier	yy		1059308	1					
ANR	1059340	PtrMemberAccess	m -> yy		1059308	1					
ANR	1059341	Identifier	m		1059308	0					
ANR	1059342	Identifier	yy		1059308	1					
ANR	1059343	ReturnType	static inline void		1059308	1					
ANR	1059344	Identifier	double_matrix__set		1059308	2					
ANR	1059345	ParameterList	"double_matrix * self , const gs_matrix_fixed * m"		1059308	3					
ANR	1059346	Parameter	double_matrix * self	190:38:6739:6758	1059308	0	True				
ANR	1059347	ParameterType	double_matrix *		1059308	0					
ANR	1059348	Identifier	self		1059308	1					
ANR	1059349	Parameter	const gs_matrix_fixed * m	190:60:6761:6785	1059308	1	True				
ANR	1059350	ParameterType	const gs_matrix_fixed *		1059308	0					
ANR	1059351	Identifier	m		1059308	1					
ANR	1059352	CFGEntryNode	ENTRY		1059308		True				
ANR	1059353	CFGExitNode	EXIT		1059308		True				
ANR	1059354	Symbol	self -> yx		1059308						
ANR	1059355	Symbol	self -> xx		1059308						
ANR	1059356	Symbol	self -> yy		1059308						
ANR	1059357	Symbol	m -> yx		1059308						
ANR	1059358	Symbol	m -> xy		1059308						
ANR	1059359	Symbol	m -> xx		1059308						
ANR	1059360	Symbol	m -> yy		1059308						
ANR	1059361	Symbol	* self		1059308						
ANR	1059362	Symbol	self -> xy		1059308						
ANR	1059363	Symbol	* m		1059308						
ANR	1059364	Symbol	self		1059308						
ANR	1059365	Symbol	m		1059308						
ANR	1059366	Function	double_matrix__invert_to	197:0:6879:7301							
ANR	1059367	FunctionDef	"double_matrix__invert_to (const double_matrix * self , double_matrix * m)"		1059366	0					
ANR	1059368	CompoundStatement		198:0:6969:7301	1059366	0					
ANR	1059369	IdentifierDeclStatement	double det = self -> xx * self -> yy - self -> xy * self -> yx ;	198:3:6973:7027	1059366	0	True				
ANR	1059370	IdentifierDecl	det = self -> xx * self -> yy - self -> xy * self -> yx		1059366	0					
ANR	1059371	IdentifierDeclType	double		1059366	0					
ANR	1059372	Identifier	det		1059366	1					
ANR	1059373	AssignmentExpression	det = self -> xx * self -> yy - self -> xy * self -> yx		1059366	2		=			
ANR	1059374	Identifier	det		1059366	0					
ANR	1059375	AdditiveExpression	self -> xx * self -> yy - self -> xy * self -> yx		1059366	1		-			
ANR	1059376	MultiplicativeExpression	self -> xx * self -> yy		1059366	0		*			
ANR	1059377	PtrMemberAccess	self -> xx		1059366	0					
ANR	1059378	Identifier	self		1059366	0					
ANR	1059379	Identifier	xx		1059366	1					
ANR	1059380	PtrMemberAccess	self -> yy		1059366	1					
ANR	1059381	Identifier	self		1059366	0					
ANR	1059382	Identifier	yy		1059366	1					
ANR	1059383	MultiplicativeExpression	self -> xy * self -> yx		1059366	1		*			
ANR	1059384	PtrMemberAccess	self -> xy		1059366	0					
ANR	1059385	Identifier	self		1059366	0					
ANR	1059386	Identifier	xy		1059366	1					
ANR	1059387	PtrMemberAccess	self -> yx		1059366	1					
ANR	1059388	Identifier	self		1059366	0					
ANR	1059389	Identifier	yx		1059366	1					
ANR	1059390	IfStatement	if ( fabs ( det ) * 1000000 <= fabs ( self -> xx ) + fabs ( self -> xy ) + fabs ( self -> yx ) + fabs ( self -> yy ) )		1059366	1					
ANR	1059391	Condition	fabs ( det ) * 1000000 <= fabs ( self -> xx ) + fabs ( self -> xy ) + fabs ( self -> yx ) + fabs ( self -> yy )	200:8:7038:7125	1059366	0	True				
ANR	1059392	RelationalExpression	fabs ( det ) * 1000000 <= fabs ( self -> xx ) + fabs ( self -> xy ) + fabs ( self -> yx ) + fabs ( self -> yy )		1059366	0		<=			
ANR	1059393	MultiplicativeExpression	fabs ( det ) * 1000000		1059366	0		*			
ANR	1059394	CallExpression	fabs ( det )		1059366	0					
ANR	1059395	Callee	fabs		1059366	0					
ANR	1059396	Identifier	fabs		1059366	0					
ANR	1059397	ArgumentList	det		1059366	1					
ANR	1059398	Argument	det		1059366	0					
ANR	1059399	Identifier	det		1059366	0					
ANR	1059400	PrimaryExpression	1000000		1059366	1					
ANR	1059401	AdditiveExpression	fabs ( self -> xx ) + fabs ( self -> xy ) + fabs ( self -> yx ) + fabs ( self -> yy )		1059366	1		+			
ANR	1059402	CallExpression	fabs ( self -> xx )		1059366	0					
ANR	1059403	Callee	fabs		1059366	0					
ANR	1059404	Identifier	fabs		1059366	0					
ANR	1059405	ArgumentList	self -> xx		1059366	1					
ANR	1059406	Argument	self -> xx		1059366	0					
ANR	1059407	PtrMemberAccess	self -> xx		1059366	0					
ANR	1059408	Identifier	self		1059366	0					
ANR	1059409	Identifier	xx		1059366	1					
ANR	1059410	AdditiveExpression	fabs ( self -> xy ) + fabs ( self -> yx ) + fabs ( self -> yy )		1059366	1		+			
ANR	1059411	CallExpression	fabs ( self -> xy )		1059366	0					
ANR	1059412	Callee	fabs		1059366	0					
ANR	1059413	Identifier	fabs		1059366	0					
ANR	1059414	ArgumentList	self -> xy		1059366	1					
ANR	1059415	Argument	self -> xy		1059366	0					
ANR	1059416	PtrMemberAccess	self -> xy		1059366	0					
ANR	1059417	Identifier	self		1059366	0					
ANR	1059418	Identifier	xy		1059366	1					
ANR	1059419	AdditiveExpression	fabs ( self -> yx ) + fabs ( self -> yy )		1059366	1		+			
ANR	1059420	CallExpression	fabs ( self -> yx )		1059366	0					
ANR	1059421	Callee	fabs		1059366	0					
ANR	1059422	Identifier	fabs		1059366	0					
ANR	1059423	ArgumentList	self -> yx		1059366	1					
ANR	1059424	Argument	self -> yx		1059366	0					
ANR	1059425	PtrMemberAccess	self -> yx		1059366	0					
ANR	1059426	Identifier	self		1059366	0					
ANR	1059427	Identifier	yx		1059366	1					
ANR	1059428	CallExpression	fabs ( self -> yy )		1059366	1					
ANR	1059429	Callee	fabs		1059366	0					
ANR	1059430	Identifier	fabs		1059366	0					
ANR	1059431	ArgumentList	self -> yy		1059366	1					
ANR	1059432	Argument	self -> yy		1059366	0					
ANR	1059433	PtrMemberAccess	self -> yy		1059366	0					
ANR	1059434	Identifier	self		1059366	0					
ANR	1059435	Identifier	yy		1059366	1					
ANR	1059436	ExpressionStatement	return_error ( gs_error_rangecheck )	201:8:7136:7169	1059366	1	True				
ANR	1059437	CallExpression	return_error ( gs_error_rangecheck )		1059366	0					
ANR	1059438	Callee	return_error		1059366	0					
ANR	1059439	Identifier	return_error		1059366	0					
ANR	1059440	ArgumentList	gs_error_rangecheck		1059366	1					
ANR	1059441	Argument	gs_error_rangecheck		1059366	0					
ANR	1059442	Identifier	gs_error_rangecheck		1059366	0					
ANR	1059443	ExpressionStatement	m -> xx = self -> yy / det	202:4:7175:7198	1059366	2	True				
ANR	1059444	AssignmentExpression	m -> xx = self -> yy / det		1059366	0		=			
ANR	1059445	PtrMemberAccess	m -> xx		1059366	0					
ANR	1059446	Identifier	m		1059366	0					
ANR	1059447	Identifier	xx		1059366	1					
ANR	1059448	MultiplicativeExpression	self -> yy / det		1059366	1		/			
ANR	1059449	PtrMemberAccess	self -> yy		1059366	0					
ANR	1059450	Identifier	self		1059366	0					
ANR	1059451	Identifier	yy		1059366	1					
ANR	1059452	Identifier	det		1059366	1					
ANR	1059453	ExpressionStatement	m -> xy = - self -> xy / det	203:4:7204:7227	1059366	3	True				
ANR	1059454	AssignmentExpression	m -> xy = - self -> xy / det		1059366	0		=			
ANR	1059455	PtrMemberAccess	m -> xy		1059366	0					
ANR	1059456	Identifier	m		1059366	0					
ANR	1059457	Identifier	xy		1059366	1					
ANR	1059458	MultiplicativeExpression	- self -> xy / det		1059366	1		/			
ANR	1059459	UnaryOperationExpression	- self -> xy		1059366	0					
ANR	1059460	UnaryOperator	-		1059366	0					
ANR	1059461	PtrMemberAccess	self -> xy		1059366	1					
ANR	1059462	Identifier	self		1059366	0					
ANR	1059463	Identifier	xy		1059366	1					
ANR	1059464	Identifier	det		1059366	1					
ANR	1059465	ExpressionStatement	m -> yx = - self -> yx / det	204:4:7233:7256	1059366	4	True				
ANR	1059466	AssignmentExpression	m -> yx = - self -> yx / det		1059366	0		=			
ANR	1059467	PtrMemberAccess	m -> yx		1059366	0					
ANR	1059468	Identifier	m		1059366	0					
ANR	1059469	Identifier	yx		1059366	1					
ANR	1059470	MultiplicativeExpression	- self -> yx / det		1059366	1		/			
ANR	1059471	UnaryOperationExpression	- self -> yx		1059366	0					
ANR	1059472	UnaryOperator	-		1059366	0					
ANR	1059473	PtrMemberAccess	self -> yx		1059366	1					
ANR	1059474	Identifier	self		1059366	0					
ANR	1059475	Identifier	yx		1059366	1					
ANR	1059476	Identifier	det		1059366	1					
ANR	1059477	ExpressionStatement	m -> yy = self -> xx / det	205:4:7262:7285	1059366	5	True				
ANR	1059478	AssignmentExpression	m -> yy = self -> xx / det		1059366	0		=			
ANR	1059479	PtrMemberAccess	m -> yy		1059366	0					
ANR	1059480	Identifier	m		1059366	0					
ANR	1059481	Identifier	yy		1059366	1					
ANR	1059482	MultiplicativeExpression	self -> xx / det		1059366	1		/			
ANR	1059483	PtrMemberAccess	self -> xx		1059366	0					
ANR	1059484	Identifier	self		1059366	0					
ANR	1059485	Identifier	xx		1059366	1					
ANR	1059486	Identifier	det		1059366	1					
ANR	1059487	ReturnStatement	return 0 ;	206:4:7291:7299	1059366	6	True				
ANR	1059488	PrimaryExpression	0		1059366	0					
ANR	1059489	ReturnType	static inline int		1059366	1					
ANR	1059490	Identifier	double_matrix__invert_to		1059366	2					
ANR	1059491	ParameterList	"const double_matrix * self , double_matrix * m"		1059366	3					
ANR	1059492	Parameter	const double_matrix * self	197:43:6922:6947	1059366	0	True				
ANR	1059493	ParameterType	const double_matrix *		1059366	0					
ANR	1059494	Identifier	self		1059366	1					
ANR	1059495	Parameter	double_matrix * m	197:71:6950:6966	1059366	1	True				
ANR	1059496	ParameterType	double_matrix *		1059366	0					
ANR	1059497	Identifier	m		1059366	1					
ANR	1059498	CFGEntryNode	ENTRY		1059366		True				
ANR	1059499	CFGExitNode	EXIT		1059366		True				
ANR	1059500	Symbol	m -> yx		1059366						
ANR	1059501	Symbol	fabs		1059366						
ANR	1059502	Symbol	gs_error_rangecheck		1059366						
ANR	1059503	Symbol	m -> xy		1059366						
ANR	1059504	Symbol	m -> xx		1059366						
ANR	1059505	Symbol	m -> yy		1059366						
ANR	1059506	Symbol	* self		1059366						
ANR	1059507	Symbol	m		1059366						
ANR	1059508	Symbol	self -> yx		1059366						
ANR	1059509	Symbol	self -> xx		1059366						
ANR	1059510	Symbol	self -> yy		1059366						
ANR	1059511	Symbol	det		1059366						
ANR	1059512	Symbol	self -> xy		1059366						
ANR	1059513	Symbol	* m		1059366						
ANR	1059514	Symbol	self		1059366						
ANR	1059515	Function	fraction_matrix__drop_bits	209:0:7304:7630							
ANR	1059516	FunctionDef	"fraction_matrix__drop_bits (fraction_matrix * self , unsigned int bits)"		1059515	0					
ANR	1059517	CompoundStatement		210:0:7386:7630	1059515	0					
ANR	1059518	ExpressionStatement	"self -> xx = shift_rounded ( self -> xx , bits )"	210:3:7390:7430	1059515	0	True				
ANR	1059519	AssignmentExpression	"self -> xx = shift_rounded ( self -> xx , bits )"		1059515	0		=			
ANR	1059520	PtrMemberAccess	self -> xx		1059515	0					
ANR	1059521	Identifier	self		1059515	0					
ANR	1059522	Identifier	xx		1059515	1					
ANR	1059523	CallExpression	"shift_rounded ( self -> xx , bits )"		1059515	1					
ANR	1059524	Callee	shift_rounded		1059515	0					
ANR	1059525	Identifier	shift_rounded		1059515	0					
ANR	1059526	ArgumentList	self -> xx		1059515	1					
ANR	1059527	Argument	self -> xx		1059515	0					
ANR	1059528	PtrMemberAccess	self -> xx		1059515	0					
ANR	1059529	Identifier	self		1059515	0					
ANR	1059530	Identifier	xx		1059515	1					
ANR	1059531	Argument	bits		1059515	1					
ANR	1059532	Identifier	bits		1059515	0					
ANR	1059533	ExpressionStatement	"self -> xy = shift_rounded ( self -> xy , bits )"	211:4:7436:7476	1059515	1	True				
ANR	1059534	AssignmentExpression	"self -> xy = shift_rounded ( self -> xy , bits )"		1059515	0		=			
ANR	1059535	PtrMemberAccess	self -> xy		1059515	0					
ANR	1059536	Identifier	self		1059515	0					
ANR	1059537	Identifier	xy		1059515	1					
ANR	1059538	CallExpression	"shift_rounded ( self -> xy , bits )"		1059515	1					
ANR	1059539	Callee	shift_rounded		1059515	0					
ANR	1059540	Identifier	shift_rounded		1059515	0					
ANR	1059541	ArgumentList	self -> xy		1059515	1					
ANR	1059542	Argument	self -> xy		1059515	0					
ANR	1059543	PtrMemberAccess	self -> xy		1059515	0					
ANR	1059544	Identifier	self		1059515	0					
ANR	1059545	Identifier	xy		1059515	1					
ANR	1059546	Argument	bits		1059515	1					
ANR	1059547	Identifier	bits		1059515	0					
ANR	1059548	ExpressionStatement	"self -> yx = shift_rounded ( self -> yx , bits )"	212:4:7482:7522	1059515	2	True				
ANR	1059549	AssignmentExpression	"self -> yx = shift_rounded ( self -> yx , bits )"		1059515	0		=			
ANR	1059550	PtrMemberAccess	self -> yx		1059515	0					
ANR	1059551	Identifier	self		1059515	0					
ANR	1059552	Identifier	yx		1059515	1					
ANR	1059553	CallExpression	"shift_rounded ( self -> yx , bits )"		1059515	1					
ANR	1059554	Callee	shift_rounded		1059515	0					
ANR	1059555	Identifier	shift_rounded		1059515	0					
ANR	1059556	ArgumentList	self -> yx		1059515	1					
ANR	1059557	Argument	self -> yx		1059515	0					
ANR	1059558	PtrMemberAccess	self -> yx		1059515	0					
ANR	1059559	Identifier	self		1059515	0					
ANR	1059560	Identifier	yx		1059515	1					
ANR	1059561	Argument	bits		1059515	1					
ANR	1059562	Identifier	bits		1059515	0					
ANR	1059563	ExpressionStatement	"self -> yy = shift_rounded ( self -> yy , bits )"	213:4:7528:7568	1059515	3	True				
ANR	1059564	AssignmentExpression	"self -> yy = shift_rounded ( self -> yy , bits )"		1059515	0		=			
ANR	1059565	PtrMemberAccess	self -> yy		1059515	0					
ANR	1059566	Identifier	self		1059515	0					
ANR	1059567	Identifier	yy		1059515	1					
ANR	1059568	CallExpression	"shift_rounded ( self -> yy , bits )"		1059515	1					
ANR	1059569	Callee	shift_rounded		1059515	0					
ANR	1059570	Identifier	shift_rounded		1059515	0					
ANR	1059571	ArgumentList	self -> yy		1059515	1					
ANR	1059572	Argument	self -> yy		1059515	0					
ANR	1059573	PtrMemberAccess	self -> yy		1059515	0					
ANR	1059574	Identifier	self		1059515	0					
ANR	1059575	Identifier	yy		1059515	1					
ANR	1059576	Argument	bits		1059515	1					
ANR	1059577	Identifier	bits		1059515	0					
ANR	1059578	ExpressionStatement	self -> denominator >>= bits	214:4:7574:7600	1059515	4	True				
ANR	1059579	AssignmentExpression	self -> denominator >>= bits		1059515	0		>>=			
ANR	1059580	PtrMemberAccess	self -> denominator		1059515	0					
ANR	1059581	Identifier	self		1059515	0					
ANR	1059582	Identifier	denominator		1059515	1					
ANR	1059583	Identifier	bits		1059515	1					
ANR	1059584	ExpressionStatement	self -> bitshift -= bits	215:4:7606:7628	1059515	5	True				
ANR	1059585	AssignmentExpression	self -> bitshift -= bits		1059515	0		-=			
ANR	1059586	PtrMemberAccess	self -> bitshift		1059515	0					
ANR	1059587	Identifier	self		1059515	0					
ANR	1059588	Identifier	bitshift		1059515	1					
ANR	1059589	Identifier	bits		1059515	1					
ANR	1059590	ReturnType	static void		1059515	1					
ANR	1059591	Identifier	fraction_matrix__drop_bits		1059515	2					
ANR	1059592	ParameterList	"fraction_matrix * self , unsigned int bits"		1059515	3					
ANR	1059593	Parameter	fraction_matrix * self	209:39:7343:7364	1059515	0	True				
ANR	1059594	ParameterType	fraction_matrix *		1059515	0					
ANR	1059595	Identifier	self		1059515	1					
ANR	1059596	Parameter	unsigned int bits	209:63:7367:7383	1059515	1	True				
ANR	1059597	ParameterType	unsigned int		1059515	0					
ANR	1059598	Identifier	bits		1059515	1					
ANR	1059599	CFGEntryNode	ENTRY		1059515		True				
ANR	1059600	CFGExitNode	EXIT		1059515		True				
ANR	1059601	Symbol	self -> yx		1059515						
ANR	1059602	Symbol	self -> xx		1059515						
ANR	1059603	Symbol	self -> yy		1059515						
ANR	1059604	Symbol	self -> bitshift		1059515						
ANR	1059605	Symbol	* self		1059515						
ANR	1059606	Symbol	self -> xy		1059515						
ANR	1059607	Symbol	bits		1059515						
ANR	1059608	Symbol	self -> denominator		1059515						
ANR	1059609	Symbol	self		1059515						
ANR	1059610	Symbol	shift_rounded		1059515						
ANR	1059611	Function	fraction_matrix__set	218:0:7633:8786							
ANR	1059612	FunctionDef	"fraction_matrix__set (fraction_matrix * self , const double_matrix * pmat)"		1059611	0					
ANR	1059613	CompoundStatement		219:0:7718:8786	1059611	0					
ANR	1059614	IdentifierDeclStatement	"double axx = fabs ( pmat -> xx ) , axy = fabs ( pmat -> xy ) ;"	219:3:7722:7771	1059611	0	True				
ANR	1059615	IdentifierDecl	axx = fabs ( pmat -> xx )		1059611	0					
ANR	1059616	IdentifierDeclType	double		1059611	0					
ANR	1059617	Identifier	axx		1059611	1					
ANR	1059618	AssignmentExpression	axx = fabs ( pmat -> xx )		1059611	2		=			
ANR	1059619	Identifier	axx		1059611	0					
ANR	1059620	CallExpression	fabs ( pmat -> xx )		1059611	1					
ANR	1059621	Callee	fabs		1059611	0					
ANR	1059622	Identifier	fabs		1059611	0					
ANR	1059623	ArgumentList	pmat -> xx		1059611	1					
ANR	1059624	Argument	pmat -> xx		1059611	0					
ANR	1059625	PtrMemberAccess	pmat -> xx		1059611	0					
ANR	1059626	Identifier	pmat		1059611	0					
ANR	1059627	Identifier	xx		1059611	1					
ANR	1059628	IdentifierDecl	axy = fabs ( pmat -> xy )		1059611	1					
ANR	1059629	IdentifierDeclType	double		1059611	0					
ANR	1059630	Identifier	axy		1059611	1					
ANR	1059631	AssignmentExpression	axy = fabs ( pmat -> xy )		1059611	2		=			
ANR	1059632	Identifier	axy		1059611	0					
ANR	1059633	CallExpression	fabs ( pmat -> xy )		1059611	1					
ANR	1059634	Callee	fabs		1059611	0					
ANR	1059635	Identifier	fabs		1059611	0					
ANR	1059636	ArgumentList	pmat -> xy		1059611	1					
ANR	1059637	Argument	pmat -> xy		1059611	0					
ANR	1059638	PtrMemberAccess	pmat -> xy		1059611	0					
ANR	1059639	Identifier	pmat		1059611	0					
ANR	1059640	Identifier	xy		1059611	1					
ANR	1059641	IdentifierDeclStatement	"double ayx = fabs ( pmat -> yx ) , ayy = fabs ( pmat -> yy ) ;"	220:4:7777:7826	1059611	1	True				
ANR	1059642	IdentifierDecl	ayx = fabs ( pmat -> yx )		1059611	0					
ANR	1059643	IdentifierDeclType	double		1059611	0					
ANR	1059644	Identifier	ayx		1059611	1					
ANR	1059645	AssignmentExpression	ayx = fabs ( pmat -> yx )		1059611	2		=			
ANR	1059646	Identifier	ayx		1059611	0					
ANR	1059647	CallExpression	fabs ( pmat -> yx )		1059611	1					
ANR	1059648	Callee	fabs		1059611	0					
ANR	1059649	Identifier	fabs		1059611	0					
ANR	1059650	ArgumentList	pmat -> yx		1059611	1					
ANR	1059651	Argument	pmat -> yx		1059611	0					
ANR	1059652	PtrMemberAccess	pmat -> yx		1059611	0					
ANR	1059653	Identifier	pmat		1059611	0					
ANR	1059654	Identifier	yx		1059611	1					
ANR	1059655	IdentifierDecl	ayy = fabs ( pmat -> yy )		1059611	1					
ANR	1059656	IdentifierDeclType	double		1059611	0					
ANR	1059657	Identifier	ayy		1059611	1					
ANR	1059658	AssignmentExpression	ayy = fabs ( pmat -> yy )		1059611	2		=			
ANR	1059659	Identifier	ayy		1059611	0					
ANR	1059660	CallExpression	fabs ( pmat -> yy )		1059611	1					
ANR	1059661	Callee	fabs		1059611	0					
ANR	1059662	Identifier	fabs		1059611	0					
ANR	1059663	ArgumentList	pmat -> yy		1059611	1					
ANR	1059664	Argument	pmat -> yy		1059611	0					
ANR	1059665	PtrMemberAccess	pmat -> yy		1059611	0					
ANR	1059666	Identifier	pmat		1059611	0					
ANR	1059667	Identifier	yy		1059611	1					
ANR	1059668	IdentifierDeclStatement	"double scale = max ( axx + axy , ayx + ayy ) ;"	221:4:7832:7872	1059611	2	True				
ANR	1059669	IdentifierDecl	"scale = max ( axx + axy , ayx + ayy )"		1059611	0					
ANR	1059670	IdentifierDeclType	double		1059611	0					
ANR	1059671	Identifier	scale		1059611	1					
ANR	1059672	AssignmentExpression	"scale = max ( axx + axy , ayx + ayy )"		1059611	2		=			
ANR	1059673	Identifier	scale		1059611	0					
ANR	1059674	CallExpression	"max ( axx + axy , ayx + ayy )"		1059611	1					
ANR	1059675	Callee	max		1059611	0					
ANR	1059676	Identifier	max		1059611	0					
ANR	1059677	ArgumentList	axx + axy		1059611	1					
ANR	1059678	Argument	axx + axy		1059611	0					
ANR	1059679	AdditiveExpression	axx + axy		1059611	0		+			
ANR	1059680	Identifier	axx		1059611	0					
ANR	1059681	Identifier	axy		1059611	1					
ANR	1059682	Argument	ayx + ayy		1059611	1					
ANR	1059683	AdditiveExpression	ayx + ayy		1059611	0		+			
ANR	1059684	Identifier	ayx		1059611	0					
ANR	1059685	Identifier	ayy		1059611	1					
ANR	1059686	IdentifierDeclStatement	"int matrix_exp , m ;"	222:4:7878:7895	1059611	3	True				
ANR	1059687	IdentifierDecl	matrix_exp		1059611	0					
ANR	1059688	IdentifierDeclType	int		1059611	0					
ANR	1059689	Identifier	matrix_exp		1059611	1					
ANR	1059690	IdentifierDecl	m		1059611	1					
ANR	1059691	IdentifierDeclType	int		1059611	0					
ANR	1059692	Identifier	m		1059611	1					
ANR	1059693	ExpressionStatement	"( void ) frexp ( scale , & matrix_exp )"	224:4:7902:7933	1059611	4	True				
ANR	1059694	CastExpression	"( void ) frexp ( scale , & matrix_exp )"		1059611	0					
ANR	1059695	CastTarget	void		1059611	0					
ANR	1059696	CallExpression	"frexp ( scale , & matrix_exp )"		1059611	1					
ANR	1059697	Callee	frexp		1059611	0					
ANR	1059698	Identifier	frexp		1059611	0					
ANR	1059699	ArgumentList	scale		1059611	1					
ANR	1059700	Argument	scale		1059611	0					
ANR	1059701	Identifier	scale		1059611	0					
ANR	1059702	Argument	& matrix_exp		1059611	1					
ANR	1059703	UnaryOperationExpression	& matrix_exp		1059611	0					
ANR	1059704	UnaryOperator	&		1059611	0					
ANR	1059705	Identifier	matrix_exp		1059611	1					
ANR	1059706	ExpressionStatement	self -> bitshift = matrix_bits - matrix_exp	225:4:7939:7980	1059611	5	True				
ANR	1059707	AssignmentExpression	self -> bitshift = matrix_bits - matrix_exp		1059611	0		=			
ANR	1059708	PtrMemberAccess	self -> bitshift		1059611	0					
ANR	1059709	Identifier	self		1059611	0					
ANR	1059710	Identifier	bitshift		1059611	1					
ANR	1059711	AdditiveExpression	matrix_bits - matrix_exp		1059611	1		-			
ANR	1059712	Identifier	matrix_bits		1059611	0					
ANR	1059713	Identifier	matrix_exp		1059611	1					
ANR	1059714	IfStatement	if ( self -> bitshift >= sizeof ( self -> denominator ) * 8 )		1059611	6					
ANR	1059715	Condition	self -> bitshift >= sizeof ( self -> denominator ) * 8	226:8:7990:8037	1059611	0	True				
ANR	1059716	RelationalExpression	self -> bitshift >= sizeof ( self -> denominator ) * 8		1059611	0		>=			
ANR	1059717	PtrMemberAccess	self -> bitshift		1059611	0					
ANR	1059718	Identifier	self		1059611	0					
ANR	1059719	Identifier	bitshift		1059611	1					
ANR	1059720	MultiplicativeExpression	sizeof ( self -> denominator ) * 8		1059611	1		*			
ANR	1059721	SizeofExpression	sizeof ( self -> denominator )		1059611	0					
ANR	1059722	Sizeof	sizeof		1059611	0					
ANR	1059723	PtrMemberAccess	self -> denominator		1059611	1					
ANR	1059724	Identifier	self		1059611	0					
ANR	1059725	Identifier	denominator		1059611	1					
ANR	1059726	PrimaryExpression	8		1059611	1					
ANR	1059727	CompoundStatement		8:58:321:321	1059611	1					
ANR	1059728	ExpressionStatement	self -> denominator = 0	227:8:8050:8071	1059611	0	True				
ANR	1059729	AssignmentExpression	self -> denominator = 0		1059611	0		=			
ANR	1059730	PtrMemberAccess	self -> denominator		1059611	0					
ANR	1059731	Identifier	self		1059611	0					
ANR	1059732	Identifier	denominator		1059611	1					
ANR	1059733	PrimaryExpression	0		1059611	1					
ANR	1059734	ExpressionStatement	self -> xx = self -> xy = self -> yx = self -> yy = 0	228:8:8081:8126	1059611	1	True				
ANR	1059735	AssignmentExpression	self -> xx = self -> xy = self -> yx = self -> yy = 0		1059611	0		=			
ANR	1059736	PtrMemberAccess	self -> xx		1059611	0					
ANR	1059737	Identifier	self		1059611	0					
ANR	1059738	Identifier	xx		1059611	1					
ANR	1059739	AssignmentExpression	self -> xy = self -> yx = self -> yy = 0		1059611	1		=			
ANR	1059740	PtrMemberAccess	self -> xy		1059611	0					
ANR	1059741	Identifier	self		1059611	0					
ANR	1059742	Identifier	xy		1059611	1					
ANR	1059743	AssignmentExpression	self -> yx = self -> yy = 0		1059611	1		=			
ANR	1059744	PtrMemberAccess	self -> yx		1059611	0					
ANR	1059745	Identifier	self		1059611	0					
ANR	1059746	Identifier	yx		1059611	1					
ANR	1059747	AssignmentExpression	self -> yy = 0		1059611	1		=			
ANR	1059748	PtrMemberAccess	self -> yy		1059611	0					
ANR	1059749	Identifier	self		1059611	0					
ANR	1059750	Identifier	yy		1059611	1					
ANR	1059751	PrimaryExpression	0		1059611	1					
ANR	1059752	ElseStatement	else		1059611	0					
ANR	1059753	CompoundStatement		11:11:420:420	1059611	0					
ANR	1059754	ExpressionStatement	self -> denominator = 1 << self -> bitshift	230:8:8149:8188	1059611	0	True				
ANR	1059755	AssignmentExpression	self -> denominator = 1 << self -> bitshift		1059611	0		=			
ANR	1059756	PtrMemberAccess	self -> denominator		1059611	0					
ANR	1059757	Identifier	self		1059611	0					
ANR	1059758	Identifier	denominator		1059611	1					
ANR	1059759	ShiftExpression	1 << self -> bitshift		1059611	1		<<			
ANR	1059760	PrimaryExpression	1		1059611	0					
ANR	1059761	PtrMemberAccess	self -> bitshift		1059611	1					
ANR	1059762	Identifier	self		1059611	0					
ANR	1059763	Identifier	bitshift		1059611	1					
ANR	1059764	ExpressionStatement	self -> xx = ( int32_t ) ( pmat -> xx * self -> denominator + 0.5 )	232:8:8274:8330	1059611	1	True				
ANR	1059765	AssignmentExpression	self -> xx = ( int32_t ) ( pmat -> xx * self -> denominator + 0.5 )		1059611	0		=			
ANR	1059766	PtrMemberAccess	self -> xx		1059611	0					
ANR	1059767	Identifier	self		1059611	0					
ANR	1059768	Identifier	xx		1059611	1					
ANR	1059769	CastExpression	( int32_t ) ( pmat -> xx * self -> denominator + 0.5 )		1059611	1					
ANR	1059770	CastTarget	int32_t		1059611	0					
ANR	1059771	AdditiveExpression	pmat -> xx * self -> denominator + 0.5		1059611	1		+			
ANR	1059772	MultiplicativeExpression	pmat -> xx * self -> denominator		1059611	0		*			
ANR	1059773	PtrMemberAccess	pmat -> xx		1059611	0					
ANR	1059774	Identifier	pmat		1059611	0					
ANR	1059775	Identifier	xx		1059611	1					
ANR	1059776	PtrMemberAccess	self -> denominator		1059611	1					
ANR	1059777	Identifier	self		1059611	0					
ANR	1059778	Identifier	denominator		1059611	1					
ANR	1059779	PrimaryExpression	0.5		1059611	1					
ANR	1059780	ExpressionStatement	self -> xy = ( int32_t ) ( pmat -> xy * self -> denominator + 0.5 )	233:8:8340:8396	1059611	2	True				
ANR	1059781	AssignmentExpression	self -> xy = ( int32_t ) ( pmat -> xy * self -> denominator + 0.5 )		1059611	0		=			
ANR	1059782	PtrMemberAccess	self -> xy		1059611	0					
ANR	1059783	Identifier	self		1059611	0					
ANR	1059784	Identifier	xy		1059611	1					
ANR	1059785	CastExpression	( int32_t ) ( pmat -> xy * self -> denominator + 0.5 )		1059611	1					
ANR	1059786	CastTarget	int32_t		1059611	0					
ANR	1059787	AdditiveExpression	pmat -> xy * self -> denominator + 0.5		1059611	1		+			
ANR	1059788	MultiplicativeExpression	pmat -> xy * self -> denominator		1059611	0		*			
ANR	1059789	PtrMemberAccess	pmat -> xy		1059611	0					
ANR	1059790	Identifier	pmat		1059611	0					
ANR	1059791	Identifier	xy		1059611	1					
ANR	1059792	PtrMemberAccess	self -> denominator		1059611	1					
ANR	1059793	Identifier	self		1059611	0					
ANR	1059794	Identifier	denominator		1059611	1					
ANR	1059795	PrimaryExpression	0.5		1059611	1					
ANR	1059796	ExpressionStatement	self -> yx = ( int32_t ) ( pmat -> yx * self -> denominator + 0.5 )	234:8:8406:8462	1059611	3	True				
ANR	1059797	AssignmentExpression	self -> yx = ( int32_t ) ( pmat -> yx * self -> denominator + 0.5 )		1059611	0		=			
ANR	1059798	PtrMemberAccess	self -> yx		1059611	0					
ANR	1059799	Identifier	self		1059611	0					
ANR	1059800	Identifier	yx		1059611	1					
ANR	1059801	CastExpression	( int32_t ) ( pmat -> yx * self -> denominator + 0.5 )		1059611	1					
ANR	1059802	CastTarget	int32_t		1059611	0					
ANR	1059803	AdditiveExpression	pmat -> yx * self -> denominator + 0.5		1059611	1		+			
ANR	1059804	MultiplicativeExpression	pmat -> yx * self -> denominator		1059611	0		*			
ANR	1059805	PtrMemberAccess	pmat -> yx		1059611	0					
ANR	1059806	Identifier	pmat		1059611	0					
ANR	1059807	Identifier	yx		1059611	1					
ANR	1059808	PtrMemberAccess	self -> denominator		1059611	1					
ANR	1059809	Identifier	self		1059611	0					
ANR	1059810	Identifier	denominator		1059611	1					
ANR	1059811	PrimaryExpression	0.5		1059611	1					
ANR	1059812	ExpressionStatement	self -> yy = ( int32_t ) ( pmat -> yy * self -> denominator + 0.5 )	235:8:8472:8528	1059611	4	True				
ANR	1059813	AssignmentExpression	self -> yy = ( int32_t ) ( pmat -> yy * self -> denominator + 0.5 )		1059611	0		=			
ANR	1059814	PtrMemberAccess	self -> yy		1059611	0					
ANR	1059815	Identifier	self		1059611	0					
ANR	1059816	Identifier	yy		1059611	1					
ANR	1059817	CastExpression	( int32_t ) ( pmat -> yy * self -> denominator + 0.5 )		1059611	1					
ANR	1059818	CastTarget	int32_t		1059611	0					
ANR	1059819	AdditiveExpression	pmat -> yy * self -> denominator + 0.5		1059611	1		+			
ANR	1059820	MultiplicativeExpression	pmat -> yy * self -> denominator		1059611	0		*			
ANR	1059821	PtrMemberAccess	pmat -> yy		1059611	0					
ANR	1059822	Identifier	pmat		1059611	0					
ANR	1059823	Identifier	yy		1059611	1					
ANR	1059824	PtrMemberAccess	self -> denominator		1059611	1					
ANR	1059825	Identifier	self		1059611	0					
ANR	1059826	Identifier	denominator		1059611	1					
ANR	1059827	PrimaryExpression	0.5		1059611	1					
ANR	1059828	ExpressionStatement	"m = Max ( Max ( any_abs ( self -> xx ) , any_abs ( self -> xy ) ) , Max ( any_abs ( self -> yx ) , any_abs ( self -> yy ) ) )"	236:8:8538:8631	1059611	5	True				
ANR	1059829	AssignmentExpression	"m = Max ( Max ( any_abs ( self -> xx ) , any_abs ( self -> xy ) ) , Max ( any_abs ( self -> yx ) , any_abs ( self -> yy ) ) )"		1059611	0		=			
ANR	1059830	Identifier	m		1059611	0					
ANR	1059831	CallExpression	"Max ( Max ( any_abs ( self -> xx ) , any_abs ( self -> xy ) ) , Max ( any_abs ( self -> yx ) , any_abs ( self -> yy ) ) )"		1059611	1					
ANR	1059832	Callee	Max		1059611	0					
ANR	1059833	Identifier	Max		1059611	0					
ANR	1059834	ArgumentList	"Max ( any_abs ( self -> xx ) , any_abs ( self -> xy ) )"		1059611	1					
ANR	1059835	Argument	"Max ( any_abs ( self -> xx ) , any_abs ( self -> xy ) )"		1059611	0					
ANR	1059836	CallExpression	"Max ( any_abs ( self -> xx ) , any_abs ( self -> xy ) )"		1059611	0					
ANR	1059837	Callee	Max		1059611	0					
ANR	1059838	Identifier	Max		1059611	0					
ANR	1059839	ArgumentList	any_abs ( self -> xx )		1059611	1					
ANR	1059840	Argument	any_abs ( self -> xx )		1059611	0					
ANR	1059841	CallExpression	any_abs ( self -> xx )		1059611	0					
ANR	1059842	Callee	any_abs		1059611	0					
ANR	1059843	Identifier	any_abs		1059611	0					
ANR	1059844	ArgumentList	self -> xx		1059611	1					
ANR	1059845	Argument	self -> xx		1059611	0					
ANR	1059846	PtrMemberAccess	self -> xx		1059611	0					
ANR	1059847	Identifier	self		1059611	0					
ANR	1059848	Identifier	xx		1059611	1					
ANR	1059849	Argument	any_abs ( self -> xy )		1059611	1					
ANR	1059850	CallExpression	any_abs ( self -> xy )		1059611	0					
ANR	1059851	Callee	any_abs		1059611	0					
ANR	1059852	Identifier	any_abs		1059611	0					
ANR	1059853	ArgumentList	self -> xy		1059611	1					
ANR	1059854	Argument	self -> xy		1059611	0					
ANR	1059855	PtrMemberAccess	self -> xy		1059611	0					
ANR	1059856	Identifier	self		1059611	0					
ANR	1059857	Identifier	xy		1059611	1					
ANR	1059858	Argument	"Max ( any_abs ( self -> yx ) , any_abs ( self -> yy ) )"		1059611	1					
ANR	1059859	CallExpression	"Max ( any_abs ( self -> yx ) , any_abs ( self -> yy ) )"		1059611	0					
ANR	1059860	Callee	Max		1059611	0					
ANR	1059861	Identifier	Max		1059611	0					
ANR	1059862	ArgumentList	any_abs ( self -> yx )		1059611	1					
ANR	1059863	Argument	any_abs ( self -> yx )		1059611	0					
ANR	1059864	CallExpression	any_abs ( self -> yx )		1059611	0					
ANR	1059865	Callee	any_abs		1059611	0					
ANR	1059866	Identifier	any_abs		1059611	0					
ANR	1059867	ArgumentList	self -> yx		1059611	1					
ANR	1059868	Argument	self -> yx		1059611	0					
ANR	1059869	PtrMemberAccess	self -> yx		1059611	0					
ANR	1059870	Identifier	self		1059611	0					
ANR	1059871	Identifier	yx		1059611	1					
ANR	1059872	Argument	any_abs ( self -> yy )		1059611	1					
ANR	1059873	CallExpression	any_abs ( self -> yy )		1059611	0					
ANR	1059874	Callee	any_abs		1059611	0					
ANR	1059875	Identifier	any_abs		1059611	0					
ANR	1059876	ArgumentList	self -> yy		1059611	1					
ANR	1059877	Argument	self -> yy		1059611	0					
ANR	1059878	PtrMemberAccess	self -> yy		1059611	0					
ANR	1059879	Identifier	self		1059611	0					
ANR	1059880	Identifier	yy		1059611	1					
ANR	1059881	ExpressionStatement	"( void ) frexp ( m , & matrix_exp )"	237:8:8641:8668	1059611	6	True				
ANR	1059882	CastExpression	"( void ) frexp ( m , & matrix_exp )"		1059611	0					
ANR	1059883	CastTarget	void		1059611	0					
ANR	1059884	CallExpression	"frexp ( m , & matrix_exp )"		1059611	1					
ANR	1059885	Callee	frexp		1059611	0					
ANR	1059886	Identifier	frexp		1059611	0					
ANR	1059887	ArgumentList	m		1059611	1					
ANR	1059888	Argument	m		1059611	0					
ANR	1059889	Identifier	m		1059611	0					
ANR	1059890	Argument	& matrix_exp		1059611	1					
ANR	1059891	UnaryOperationExpression	& matrix_exp		1059611	0					
ANR	1059892	UnaryOperator	&		1059611	0					
ANR	1059893	Identifier	matrix_exp		1059611	1					
ANR	1059894	IfStatement	if ( matrix_exp > matrix_bits )		1059611	7					
ANR	1059895	Condition	matrix_exp > matrix_bits	238:12:8682:8705	1059611	0	True				
ANR	1059896	RelationalExpression	matrix_exp > matrix_bits		1059611	0		>			
ANR	1059897	Identifier	matrix_exp		1059611	0					
ANR	1059898	Identifier	matrix_bits		1059611	1					
ANR	1059899	ExpressionStatement	"fraction_matrix__drop_bits ( self , matrix_exp - matrix_bits )"	239:12:8720:8778	1059611	1	True				
ANR	1059900	CallExpression	"fraction_matrix__drop_bits ( self , matrix_exp - matrix_bits )"		1059611	0					
ANR	1059901	Callee	fraction_matrix__drop_bits		1059611	0					
ANR	1059902	Identifier	fraction_matrix__drop_bits		1059611	0					
ANR	1059903	ArgumentList	self		1059611	1					
ANR	1059904	Argument	self		1059611	0					
ANR	1059905	Identifier	self		1059611	0					
ANR	1059906	Argument	matrix_exp - matrix_bits		1059611	1					
ANR	1059907	AdditiveExpression	matrix_exp - matrix_bits		1059611	0		-			
ANR	1059908	Identifier	matrix_exp		1059611	0					
ANR	1059909	Identifier	matrix_bits		1059611	1					
ANR	1059910	ReturnType	static void		1059611	1					
ANR	1059911	Identifier	fraction_matrix__set		1059611	2					
ANR	1059912	ParameterList	"fraction_matrix * self , const double_matrix * pmat"		1059611	3					
ANR	1059913	Parameter	fraction_matrix * self	218:33:7666:7687	1059611	0	True				
ANR	1059914	ParameterType	fraction_matrix *		1059611	0					
ANR	1059915	Identifier	self		1059611	1					
ANR	1059916	Parameter	const double_matrix * pmat	218:57:7690:7715	1059611	1	True				
ANR	1059917	ParameterType	const double_matrix *		1059611	0					
ANR	1059918	Identifier	pmat		1059611	1					
ANR	1059919	CFGEntryNode	ENTRY		1059611		True				
ANR	1059920	CFGExitNode	EXIT		1059611		True				
ANR	1059921	Symbol	ayy		1059611						
ANR	1059922	Symbol	ayx		1059611						
ANR	1059923	Symbol	pmat		1059611						
ANR	1059924	Symbol	pmat -> xx		1059611						
ANR	1059925	Symbol	* pmat		1059611						
ANR	1059926	Symbol	Max		1059611						
ANR	1059927	Symbol	self -> denominator		1059611						
ANR	1059928	Symbol	scale		1059611						
ANR	1059929	Symbol	self -> xx		1059611						
ANR	1059930	Symbol	self -> xy		1059611						
ANR	1059931	Symbol	any_abs		1059611						
ANR	1059932	Symbol	matrix_bits		1059611						
ANR	1059933	Symbol	axx		1059611						
ANR	1059934	Symbol	fabs		1059611						
ANR	1059935	Symbol	axy		1059611						
ANR	1059936	Symbol	pmat -> yy		1059611						
ANR	1059937	Symbol	pmat -> yx		1059611						
ANR	1059938	Symbol	max		1059611						
ANR	1059939	Symbol	self -> bitshift		1059611						
ANR	1059940	Symbol	* self		1059611						
ANR	1059941	Symbol	matrix_exp		1059611						
ANR	1059942	Symbol	m		1059611						
ANR	1059943	Symbol	self -> yx		1059611						
ANR	1059944	Symbol	self -> yy		1059611						
ANR	1059945	Symbol	& matrix_exp		1059611						
ANR	1059946	Symbol	self		1059611						
ANR	1059947	Symbol	pmat -> xy		1059611						
ANR	1059948	Function	fraction_matrix__to_double	243:0:8789:9189							
ANR	1059949	FunctionDef	"fraction_matrix__to_double (const fraction_matrix * self , double_matrix * pmat)"		1059948	0					
ANR	1059950	CompoundStatement		244:0:8886:9189	1059948	0					
ANR	1059951	IfStatement	if ( self -> denominator == 0 )		1059948	0					
ANR	1059952	Condition	self -> denominator == 0	245:8:8896:8917	1059948	0	True				
ANR	1059953	EqualityExpression	self -> denominator == 0		1059948	0		==			
ANR	1059954	PtrMemberAccess	self -> denominator		1059948	0					
ANR	1059955	Identifier	self		1059948	0					
ANR	1059956	Identifier	denominator		1059948	1					
ANR	1059957	PrimaryExpression	0		1059948	1					
ANR	1059958	ExpressionStatement	return_error ( gs_error_rangecheck )	246:8:8928:8961	1059948	1	True				
ANR	1059959	CallExpression	return_error ( gs_error_rangecheck )		1059948	0					
ANR	1059960	Callee	return_error		1059948	0					
ANR	1059961	Identifier	return_error		1059948	0					
ANR	1059962	ArgumentList	gs_error_rangecheck		1059948	1					
ANR	1059963	Argument	gs_error_rangecheck		1059948	0					
ANR	1059964	Identifier	gs_error_rangecheck		1059948	0					
ANR	1059965	ExpressionStatement	pmat -> xx = ( double ) self -> xx / self -> denominator	247:4:8967:9014	1059948	1	True				
ANR	1059966	AssignmentExpression	pmat -> xx = ( double ) self -> xx / self -> denominator		1059948	0		=			
ANR	1059967	PtrMemberAccess	pmat -> xx		1059948	0					
ANR	1059968	Identifier	pmat		1059948	0					
ANR	1059969	Identifier	xx		1059948	1					
ANR	1059970	MultiplicativeExpression	( double ) self -> xx / self -> denominator		1059948	1		/			
ANR	1059971	CastExpression	( double ) self -> xx		1059948	0					
ANR	1059972	CastTarget	double		1059948	0					
ANR	1059973	PtrMemberAccess	self -> xx		1059948	1					
ANR	1059974	Identifier	self		1059948	0					
ANR	1059975	Identifier	xx		1059948	1					
ANR	1059976	PtrMemberAccess	self -> denominator		1059948	1					
ANR	1059977	Identifier	self		1059948	0					
ANR	1059978	Identifier	denominator		1059948	1					
ANR	1059979	ExpressionStatement	pmat -> xy = ( double ) self -> xy / self -> denominator	248:4:9020:9067	1059948	2	True				
ANR	1059980	AssignmentExpression	pmat -> xy = ( double ) self -> xy / self -> denominator		1059948	0		=			
ANR	1059981	PtrMemberAccess	pmat -> xy		1059948	0					
ANR	1059982	Identifier	pmat		1059948	0					
ANR	1059983	Identifier	xy		1059948	1					
ANR	1059984	MultiplicativeExpression	( double ) self -> xy / self -> denominator		1059948	1		/			
ANR	1059985	CastExpression	( double ) self -> xy		1059948	0					
ANR	1059986	CastTarget	double		1059948	0					
ANR	1059987	PtrMemberAccess	self -> xy		1059948	1					
ANR	1059988	Identifier	self		1059948	0					
ANR	1059989	Identifier	xy		1059948	1					
ANR	1059990	PtrMemberAccess	self -> denominator		1059948	1					
ANR	1059991	Identifier	self		1059948	0					
ANR	1059992	Identifier	denominator		1059948	1					
ANR	1059993	ExpressionStatement	pmat -> yx = ( double ) self -> yx / self -> denominator	249:4:9073:9120	1059948	3	True				
ANR	1059994	AssignmentExpression	pmat -> yx = ( double ) self -> yx / self -> denominator		1059948	0		=			
ANR	1059995	PtrMemberAccess	pmat -> yx		1059948	0					
ANR	1059996	Identifier	pmat		1059948	0					
ANR	1059997	Identifier	yx		1059948	1					
ANR	1059998	MultiplicativeExpression	( double ) self -> yx / self -> denominator		1059948	1		/			
ANR	1059999	CastExpression	( double ) self -> yx		1059948	0					
ANR	1060000	CastTarget	double		1059948	0					
ANR	1060001	PtrMemberAccess	self -> yx		1059948	1					
ANR	1060002	Identifier	self		1059948	0					
ANR	1060003	Identifier	yx		1059948	1					
ANR	1060004	PtrMemberAccess	self -> denominator		1059948	1					
ANR	1060005	Identifier	self		1059948	0					
ANR	1060006	Identifier	denominator		1059948	1					
ANR	1060007	ExpressionStatement	pmat -> yy = ( double ) self -> yy / self -> denominator	250:4:9126:9173	1059948	4	True				
ANR	1060008	AssignmentExpression	pmat -> yy = ( double ) self -> yy / self -> denominator		1059948	0		=			
ANR	1060009	PtrMemberAccess	pmat -> yy		1059948	0					
ANR	1060010	Identifier	pmat		1059948	0					
ANR	1060011	Identifier	yy		1059948	1					
ANR	1060012	MultiplicativeExpression	( double ) self -> yy / self -> denominator		1059948	1		/			
ANR	1060013	CastExpression	( double ) self -> yy		1059948	0					
ANR	1060014	CastTarget	double		1059948	0					
ANR	1060015	PtrMemberAccess	self -> yy		1059948	1					
ANR	1060016	Identifier	self		1059948	0					
ANR	1060017	Identifier	yy		1059948	1					
ANR	1060018	PtrMemberAccess	self -> denominator		1059948	1					
ANR	1060019	Identifier	self		1059948	0					
ANR	1060020	Identifier	denominator		1059948	1					
ANR	1060021	ReturnStatement	return 0 ;	251:4:9179:9187	1059948	5	True				
ANR	1060022	PrimaryExpression	0		1059948	0					
ANR	1060023	ReturnType	static inline int		1059948	1					
ANR	1060024	Identifier	fraction_matrix__to_double		1059948	2					
ANR	1060025	ParameterList	"const fraction_matrix * self , double_matrix * pmat"		1059948	3					
ANR	1060026	Parameter	const fraction_matrix * self	243:45:8834:8861	1059948	0	True				
ANR	1060027	ParameterType	const fraction_matrix *		1059948	0					
ANR	1060028	Identifier	self		1059948	1					
ANR	1060029	Parameter	double_matrix * pmat	243:75:8864:8883	1059948	1	True				
ANR	1060030	ParameterType	double_matrix *		1059948	0					
ANR	1060031	Identifier	pmat		1059948	1					
ANR	1060032	CFGEntryNode	ENTRY		1059948		True				
ANR	1060033	CFGExitNode	EXIT		1059948		True				
ANR	1060034	Symbol	pmat		1059948						
ANR	1060035	Symbol	gs_error_rangecheck		1059948						
ANR	1060036	Symbol	pmat -> xx		1059948						
ANR	1060037	Symbol	pmat -> yy		1059948						
ANR	1060038	Symbol	* pmat		1059948						
ANR	1060039	Symbol	pmat -> yx		1059948						
ANR	1060040	Symbol	* self		1059948						
ANR	1060041	Symbol	self -> denominator		1059948						
ANR	1060042	Symbol	self -> yx		1059948						
ANR	1060043	Symbol	self -> xx		1059948						
ANR	1060044	Symbol	self -> yy		1059948						
ANR	1060045	Symbol	self -> xy		1059948						
ANR	1060046	Symbol	self		1059948						
ANR	1060047	Symbol	pmat -> xy		1059948						
ANR	1060048	Function	fraction_matrix__invert_to	254:0:9192:9545							
ANR	1060049	FunctionDef	"fraction_matrix__invert_to (const fraction_matrix * self , fraction_matrix * pmat)"		1060048	0					
ANR	1060050	CompoundStatement		255:0:9284:9545	1060048	0					
ANR	1060051	IdentifierDeclStatement	"double_matrix m , M ;"	255:3:9288:9306	1060048	0	True				
ANR	1060052	IdentifierDecl	m		1060048	0					
ANR	1060053	IdentifierDeclType	double_matrix		1060048	0					
ANR	1060054	Identifier	m		1060048	1					
ANR	1060055	IdentifierDecl	M		1060048	1					
ANR	1060056	IdentifierDeclType	double_matrix		1060048	0					
ANR	1060057	Identifier	M		1060048	1					
ANR	1060058	IdentifierDeclStatement	int code ;	256:4:9312:9320	1060048	1	True				
ANR	1060059	IdentifierDecl	code		1060048	0					
ANR	1060060	IdentifierDeclType	int		1060048	0					
ANR	1060061	Identifier	code		1060048	1					
ANR	1060062	ExpressionStatement	"code = fraction_matrix__to_double ( self , & M )"	258:4:9327:9370	1060048	2	True				
ANR	1060063	AssignmentExpression	"code = fraction_matrix__to_double ( self , & M )"		1060048	0		=			
ANR	1060064	Identifier	code		1060048	0					
ANR	1060065	CallExpression	"fraction_matrix__to_double ( self , & M )"		1060048	1					
ANR	1060066	Callee	fraction_matrix__to_double		1060048	0					
ANR	1060067	Identifier	fraction_matrix__to_double		1060048	0					
ANR	1060068	ArgumentList	self		1060048	1					
ANR	1060069	Argument	self		1060048	0					
ANR	1060070	Identifier	self		1060048	0					
ANR	1060071	Argument	& M		1060048	1					
ANR	1060072	UnaryOperationExpression	& M		1060048	0					
ANR	1060073	UnaryOperator	&		1060048	0					
ANR	1060074	Identifier	M		1060048	1					
ANR	1060075	IfStatement	if ( code < 0 )		1060048	3					
ANR	1060076	Condition	code < 0	259:8:9380:9387	1060048	0	True				
ANR	1060077	RelationalExpression	code < 0		1060048	0		<			
ANR	1060078	Identifier	code		1060048	0					
ANR	1060079	PrimaryExpression	0		1060048	1					
ANR	1060080	ReturnStatement	return code ;	260:8:9398:9409	1060048	1	True				
ANR	1060081	Identifier	code		1060048	0					
ANR	1060082	ExpressionStatement	"code = double_matrix__invert_to ( & M , & m )"	261:4:9415:9454	1060048	4	True				
ANR	1060083	AssignmentExpression	"code = double_matrix__invert_to ( & M , & m )"		1060048	0		=			
ANR	1060084	Identifier	code		1060048	0					
ANR	1060085	CallExpression	"double_matrix__invert_to ( & M , & m )"		1060048	1					
ANR	1060086	Callee	double_matrix__invert_to		1060048	0					
ANR	1060087	Identifier	double_matrix__invert_to		1060048	0					
ANR	1060088	ArgumentList	& M		1060048	1					
ANR	1060089	Argument	& M		1060048	0					
ANR	1060090	UnaryOperationExpression	& M		1060048	0					
ANR	1060091	UnaryOperator	&		1060048	0					
ANR	1060092	Identifier	M		1060048	1					
ANR	1060093	Argument	& m		1060048	1					
ANR	1060094	UnaryOperationExpression	& m		1060048	0					
ANR	1060095	UnaryOperator	&		1060048	0					
ANR	1060096	Identifier	m		1060048	1					
ANR	1060097	IfStatement	if ( code < 0 )		1060048	5					
ANR	1060098	Condition	code < 0	262:8:9464:9471	1060048	0	True				
ANR	1060099	RelationalExpression	code < 0		1060048	0		<			
ANR	1060100	Identifier	code		1060048	0					
ANR	1060101	PrimaryExpression	0		1060048	1					
ANR	1060102	ReturnStatement	return code ;	263:8:9482:9493	1060048	1	True				
ANR	1060103	Identifier	code		1060048	0					
ANR	1060104	ExpressionStatement	"fraction_matrix__set ( pmat , & m )"	264:4:9499:9529	1060048	6	True				
ANR	1060105	CallExpression	"fraction_matrix__set ( pmat , & m )"		1060048	0					
ANR	1060106	Callee	fraction_matrix__set		1060048	0					
ANR	1060107	Identifier	fraction_matrix__set		1060048	0					
ANR	1060108	ArgumentList	pmat		1060048	1					
ANR	1060109	Argument	pmat		1060048	0					
ANR	1060110	Identifier	pmat		1060048	0					
ANR	1060111	Argument	& m		1060048	1					
ANR	1060112	UnaryOperationExpression	& m		1060048	0					
ANR	1060113	UnaryOperator	&		1060048	0					
ANR	1060114	Identifier	m		1060048	1					
ANR	1060115	ReturnStatement	return 0 ;	265:4:9535:9543	1060048	7	True				
ANR	1060116	PrimaryExpression	0		1060048	0					
ANR	1060117	ReturnType	static int		1060048	1					
ANR	1060118	Identifier	fraction_matrix__invert_to		1060048	2					
ANR	1060119	ParameterList	"const fraction_matrix * self , fraction_matrix * pmat"		1060048	3					
ANR	1060120	Parameter	const fraction_matrix * self	254:38:9230:9257	1060048	0	True				
ANR	1060121	ParameterType	const fraction_matrix *		1060048	0					
ANR	1060122	Identifier	self		1060048	1					
ANR	1060123	Parameter	fraction_matrix * pmat	254:68:9260:9281	1060048	1	True				
ANR	1060124	ParameterType	fraction_matrix *		1060048	0					
ANR	1060125	Identifier	pmat		1060048	1					
ANR	1060126	CFGEntryNode	ENTRY		1060048		True				
ANR	1060127	CFGExitNode	EXIT		1060048		True				
ANR	1060128	Symbol	code		1060048						
ANR	1060129	Symbol	& M		1060048						
ANR	1060130	Symbol	& m		1060048						
ANR	1060131	Symbol	pmat		1060048						
ANR	1060132	Symbol	fraction_matrix__to_double		1060048						
ANR	1060133	Symbol	self		1060048						
ANR	1060134	Symbol	double_matrix__invert_to		1060048						
ANR	1060135	Symbol	M		1060048						
ANR	1060136	Symbol	m		1060048						
ANR	1060137	Function	fraction_matrix__transform_x	268:0:9548:9734							
ANR	1060138	FunctionDef	"fraction_matrix__transform_x (fraction_matrix * self , int24 x , int24 y , unsigned int s)"		1060137	0					
ANR	1060139	CompoundStatement		269:0:9656:9734	1060137	0					
ANR	1060140	ReturnStatement	"return mul_shift_round ( x , self -> xx , s ) + mul_shift_round ( y , self -> yx , s ) ;"	269:3:9660:9732	1060137	0	True				
ANR	1060141	AdditiveExpression	"mul_shift_round ( x , self -> xx , s ) + mul_shift_round ( y , self -> yx , s )"		1060137	0		+			
ANR	1060142	CallExpression	"mul_shift_round ( x , self -> xx , s )"		1060137	0					
ANR	1060143	Callee	mul_shift_round		1060137	0					
ANR	1060144	Identifier	mul_shift_round		1060137	0					
ANR	1060145	ArgumentList	x		1060137	1					
ANR	1060146	Argument	x		1060137	0					
ANR	1060147	Identifier	x		1060137	0					
ANR	1060148	Argument	self -> xx		1060137	1					
ANR	1060149	PtrMemberAccess	self -> xx		1060137	0					
ANR	1060150	Identifier	self		1060137	0					
ANR	1060151	Identifier	xx		1060137	1					
ANR	1060152	Argument	s		1060137	2					
ANR	1060153	Identifier	s		1060137	0					
ANR	1060154	CallExpression	"mul_shift_round ( y , self -> yx , s )"		1060137	1					
ANR	1060155	Callee	mul_shift_round		1060137	0					
ANR	1060156	Identifier	mul_shift_round		1060137	0					
ANR	1060157	ArgumentList	y		1060137	1					
ANR	1060158	Argument	y		1060137	0					
ANR	1060159	Identifier	y		1060137	0					
ANR	1060160	Argument	self -> yx		1060137	1					
ANR	1060161	PtrMemberAccess	self -> yx		1060137	0					
ANR	1060162	Identifier	self		1060137	0					
ANR	1060163	Identifier	yx		1060137	1					
ANR	1060164	Argument	s		1060137	2					
ANR	1060165	Identifier	s		1060137	0					
ANR	1060166	ReturnType	static inline int32_t		1060137	1					
ANR	1060167	Identifier	fraction_matrix__transform_x		1060137	2					
ANR	1060168	ParameterList	"fraction_matrix * self , int24 x , int24 y , unsigned int s"		1060137	3					
ANR	1060169	Parameter	fraction_matrix * self	268:51:9599:9619	1060137	0	True				
ANR	1060170	ParameterType	fraction_matrix *		1060137	0					
ANR	1060171	Identifier	self		1060137	1					
ANR	1060172	Parameter	int24 x	268:74:9622:9628	1060137	1	True				
ANR	1060173	ParameterType	int24		1060137	0					
ANR	1060174	Identifier	x		1060137	1					
ANR	1060175	Parameter	int24 y	268:83:9631:9637	1060137	2	True				
ANR	1060176	ParameterType	int24		1060137	0					
ANR	1060177	Identifier	y		1060137	1					
ANR	1060178	Parameter	unsigned int s	268:92:9640:9653	1060137	3	True				
ANR	1060179	ParameterType	unsigned int		1060137	0					
ANR	1060180	Identifier	s		1060137	1					
ANR	1060181	CFGEntryNode	ENTRY		1060137		True				
ANR	1060182	CFGExitNode	EXIT		1060137		True				
ANR	1060183	Symbol	self -> yx		1060137						
ANR	1060184	Symbol	self -> xx		1060137						
ANR	1060185	Symbol	s		1060137						
ANR	1060186	Symbol	mul_shift_round		1060137						
ANR	1060187	Symbol	* self		1060137						
ANR	1060188	Symbol	x		1060137						
ANR	1060189	Symbol	self		1060137						
ANR	1060190	Symbol	y		1060137						
ANR	1060191	Function	fraction_matrix__transform_y	271:0:9736:9922							
ANR	1060192	FunctionDef	"fraction_matrix__transform_y (fraction_matrix * self , int24 x , int24 y , unsigned int s)"		1060191	0					
ANR	1060193	CompoundStatement		272:0:9844:9922	1060191	0					
ANR	1060194	ReturnStatement	"return mul_shift_round ( x , self -> xy , s ) + mul_shift_round ( y , self -> yy , s ) ;"	272:3:9848:9920	1060191	0	True				
ANR	1060195	AdditiveExpression	"mul_shift_round ( x , self -> xy , s ) + mul_shift_round ( y , self -> yy , s )"		1060191	0		+			
ANR	1060196	CallExpression	"mul_shift_round ( x , self -> xy , s )"		1060191	0					
ANR	1060197	Callee	mul_shift_round		1060191	0					
ANR	1060198	Identifier	mul_shift_round		1060191	0					
ANR	1060199	ArgumentList	x		1060191	1					
ANR	1060200	Argument	x		1060191	0					
ANR	1060201	Identifier	x		1060191	0					
ANR	1060202	Argument	self -> xy		1060191	1					
ANR	1060203	PtrMemberAccess	self -> xy		1060191	0					
ANR	1060204	Identifier	self		1060191	0					
ANR	1060205	Identifier	xy		1060191	1					
ANR	1060206	Argument	s		1060191	2					
ANR	1060207	Identifier	s		1060191	0					
ANR	1060208	CallExpression	"mul_shift_round ( y , self -> yy , s )"		1060191	1					
ANR	1060209	Callee	mul_shift_round		1060191	0					
ANR	1060210	Identifier	mul_shift_round		1060191	0					
ANR	1060211	ArgumentList	y		1060191	1					
ANR	1060212	Argument	y		1060191	0					
ANR	1060213	Identifier	y		1060191	0					
ANR	1060214	Argument	self -> yy		1060191	1					
ANR	1060215	PtrMemberAccess	self -> yy		1060191	0					
ANR	1060216	Identifier	self		1060191	0					
ANR	1060217	Identifier	yy		1060191	1					
ANR	1060218	Argument	s		1060191	2					
ANR	1060219	Identifier	s		1060191	0					
ANR	1060220	ReturnType	static inline int32_t		1060191	1					
ANR	1060221	Identifier	fraction_matrix__transform_y		1060191	2					
ANR	1060222	ParameterList	"fraction_matrix * self , int24 x , int24 y , unsigned int s"		1060191	3					
ANR	1060223	Parameter	fraction_matrix * self	271:51:9787:9807	1060191	0	True				
ANR	1060224	ParameterType	fraction_matrix *		1060191	0					
ANR	1060225	Identifier	self		1060191	1					
ANR	1060226	Parameter	int24 x	271:74:9810:9816	1060191	1	True				
ANR	1060227	ParameterType	int24		1060191	0					
ANR	1060228	Identifier	x		1060191	1					
ANR	1060229	Parameter	int24 y	271:83:9819:9825	1060191	2	True				
ANR	1060230	ParameterType	int24		1060191	0					
ANR	1060231	Identifier	y		1060191	1					
ANR	1060232	Parameter	unsigned int s	271:92:9828:9841	1060191	3	True				
ANR	1060233	ParameterType	unsigned int		1060191	0					
ANR	1060234	Identifier	s		1060191	1					
ANR	1060235	CFGEntryNode	ENTRY		1060191		True				
ANR	1060236	CFGExitNode	EXIT		1060191		True				
ANR	1060237	Symbol	self -> yy		1060191						
ANR	1060238	Symbol	s		1060191						
ANR	1060239	Symbol	mul_shift_round		1060191						
ANR	1060240	Symbol	* self		1060191						
ANR	1060241	Symbol	self -> xy		1060191						
ANR	1060242	Symbol	x		1060191						
ANR	1060243	Symbol	self		1060191						
ANR	1060244	Symbol	y		1060191						
ANR	1060245	Function	ranger_step_f	277:0:9997:10091							
ANR	1060246	FunctionDef	"ranger_step_f (int i , int beg , int end)"		1060245	0					
ANR	1060247	CompoundStatement		278:0:10054:10091	1060245	0					
ANR	1060248	ReturnStatement	return ( i == end ? beg : i + 1 ) ;	278:3:10058:10089	1060245	0	True				
ANR	1060249	ConditionalExpression	i == end ? beg : i + 1		1060245	0					
ANR	1060250	Condition	i == end		1060245	0					
ANR	1060251	EqualityExpression	i == end		1060245	0		==			
ANR	1060252	Identifier	i		1060245	0					
ANR	1060253	Identifier	end		1060245	1					
ANR	1060254	Identifier	beg		1060245	1					
ANR	1060255	AdditiveExpression	i + 1		1060245	2		+			
ANR	1060256	Identifier	i		1060245	0					
ANR	1060257	PrimaryExpression	1		1060245	1					
ANR	1060258	ReturnType	static inline int		1060245	1					
ANR	1060259	Identifier	ranger_step_f		1060245	2					
ANR	1060260	ParameterList	"int i , int beg , int end"		1060245	3					
ANR	1060261	Parameter	int i	277:32:10029:10033	1060245	0	True				
ANR	1060262	ParameterType	int		1060245	0					
ANR	1060263	Identifier	i		1060245	1					
ANR	1060264	Parameter	int beg	277:39:10036:10042	1060245	1	True				
ANR	1060265	ParameterType	int		1060245	0					
ANR	1060266	Identifier	beg		1060245	1					
ANR	1060267	Parameter	int end	277:48:10045:10051	1060245	2	True				
ANR	1060268	ParameterType	int		1060245	0					
ANR	1060269	Identifier	end		1060245	1					
ANR	1060270	CFGEntryNode	ENTRY		1060245		True				
ANR	1060271	CFGExitNode	EXIT		1060245		True				
ANR	1060272	Symbol	beg		1060245						
ANR	1060273	Symbol	i		1060245						
ANR	1060274	Symbol	end		1060245						
ANR	1060275	Function	ranger_step_b	281:0:10094:10188							
ANR	1060276	FunctionDef	"ranger_step_b (int i , int beg , int end)"		1060275	0					
ANR	1060277	CompoundStatement		282:0:10151:10188	1060275	0					
ANR	1060278	ReturnStatement	return ( i == beg ? end : i - 1 ) ;	282:3:10155:10186	1060275	0	True				
ANR	1060279	ConditionalExpression	i == beg ? end : i - 1		1060275	0					
ANR	1060280	Condition	i == beg		1060275	0					
ANR	1060281	EqualityExpression	i == beg		1060275	0		==			
ANR	1060282	Identifier	i		1060275	0					
ANR	1060283	Identifier	beg		1060275	1					
ANR	1060284	Identifier	end		1060275	1					
ANR	1060285	AdditiveExpression	i - 1		1060275	2		-			
ANR	1060286	Identifier	i		1060275	0					
ANR	1060287	PrimaryExpression	1		1060275	1					
ANR	1060288	ReturnType	static inline int		1060275	1					
ANR	1060289	Identifier	ranger_step_b		1060275	2					
ANR	1060290	ParameterList	"int i , int beg , int end"		1060275	3					
ANR	1060291	Parameter	int i	281:32:10126:10130	1060275	0	True				
ANR	1060292	ParameterType	int		1060275	0					
ANR	1060293	Identifier	i		1060275	1					
ANR	1060294	Parameter	int beg	281:39:10133:10139	1060275	1	True				
ANR	1060295	ParameterType	int		1060275	0					
ANR	1060296	Identifier	beg		1060275	1					
ANR	1060297	Parameter	int end	281:48:10142:10148	1060275	2	True				
ANR	1060298	ParameterType	int		1060275	0					
ANR	1060299	Identifier	end		1060275	1					
ANR	1060300	CFGEntryNode	ENTRY		1060275		True				
ANR	1060301	CFGExitNode	EXIT		1060275		True				
ANR	1060302	Symbol	beg		1060275						
ANR	1060303	Symbol	i		1060275						
ANR	1060304	Symbol	end		1060275						
ANR	1060305	Function	o2d	285:0:10191:10476							
ANR	1060306	FunctionDef	"o2d (const t1_hinter * h , t1_hinter_space_coord v)"		1060305	0					
ANR	1060307	CompoundStatement		286:0:10260:10476	1060305	0					
ANR	1060308	IdentifierDeclStatement	int s = h -> g2o_fraction_bits - _fixed_shift ;	287:4:10266:10309	1060305	0	True				
ANR	1060309	IdentifierDecl	s = h -> g2o_fraction_bits - _fixed_shift		1060305	0					
ANR	1060310	IdentifierDeclType	int		1060305	0					
ANR	1060311	Identifier	s		1060305	1					
ANR	1060312	AssignmentExpression	s = h -> g2o_fraction_bits - _fixed_shift		1060305	2		=			
ANR	1060313	Identifier	s		1060305	0					
ANR	1060314	AdditiveExpression	h -> g2o_fraction_bits - _fixed_shift		1060305	1		-			
ANR	1060315	PtrMemberAccess	h -> g2o_fraction_bits		1060305	0					
ANR	1060316	Identifier	h		1060305	0					
ANR	1060317	Identifier	g2o_fraction_bits		1060305	1					
ANR	1060318	Identifier	_fixed_shift		1060305	1					
ANR	1060319	IfStatement	if ( s >= 1 )		1060305	1					
ANR	1060320	Condition	s >= 1	289:8:10320:10325	1060305	0	True				
ANR	1060321	RelationalExpression	s >= 1		1060305	0		>=			
ANR	1060322	Identifier	s		1060305	0					
ANR	1060323	PrimaryExpression	1		1060305	1					
ANR	1060324	ReturnStatement	return ( ( v >> ( h -> g2o_fraction_bits - _fixed_shift - 1 ) ) + 1 ) >> 1 ;	290:8:10336:10402	1060305	1	True				
ANR	1060325	ShiftExpression	( ( v >> ( h -> g2o_fraction_bits - _fixed_shift - 1 ) ) + 1 ) >> 1		1060305	0		>>			
ANR	1060326	AdditiveExpression	( v >> ( h -> g2o_fraction_bits - _fixed_shift - 1 ) ) + 1		1060305	0		+			
ANR	1060327	ShiftExpression	v >> ( h -> g2o_fraction_bits - _fixed_shift - 1 )		1060305	0		>>			
ANR	1060328	Identifier	v		1060305	0					
ANR	1060329	AdditiveExpression	h -> g2o_fraction_bits - _fixed_shift - 1		1060305	1		-			
ANR	1060330	PtrMemberAccess	h -> g2o_fraction_bits		1060305	0					
ANR	1060331	Identifier	h		1060305	0					
ANR	1060332	Identifier	g2o_fraction_bits		1060305	1					
ANR	1060333	AdditiveExpression	_fixed_shift - 1		1060305	1		-			
ANR	1060334	Identifier	_fixed_shift		1060305	0					
ANR	1060335	PrimaryExpression	1		1060305	1					
ANR	1060336	PrimaryExpression	1		1060305	1					
ANR	1060337	PrimaryExpression	1		1060305	1					
ANR	1060338	ElseStatement	else		1060305	0					
ANR	1060339	IfStatement	if ( s == 0 )		1060305	0					
ANR	1060340	Condition	s == 0	291:13:10417:10422	1060305	0	True				
ANR	1060341	EqualityExpression	s == 0		1060305	0		==			
ANR	1060342	Identifier	s		1060305	0					
ANR	1060343	PrimaryExpression	0		1060305	1					
ANR	1060344	ReturnStatement	return v ;	292:8:10433:10441	1060305	1	True				
ANR	1060345	Identifier	v		1060305	0					
ANR	1060346	ElseStatement	else		1060305	0					
ANR	1060347	ReturnStatement	return v << - s ;	294:8:10460:10474	1060305	0	True				
ANR	1060348	ShiftExpression	v << - s		1060305	0		<<			
ANR	1060349	Identifier	v		1060305	0					
ANR	1060350	UnaryOperationExpression	- s		1060305	1					
ANR	1060351	UnaryOperator	-		1060305	0					
ANR	1060352	Identifier	s		1060305	1					
ANR	1060353	ReturnType	static inline fixed		1060305	1					
ANR	1060354	Identifier	o2d		1060305	2					
ANR	1060355	ParameterList	"const t1_hinter * h , t1_hinter_space_coord v"		1060305	3					
ANR	1060356	Parameter	const t1_hinter * h	285:24:10215:10232	1060305	0	True				
ANR	1060357	ParameterType	const t1_hinter *		1060305	0					
ANR	1060358	Identifier	h		1060305	1					
ANR	1060359	Parameter	t1_hinter_space_coord v	285:44:10235:10257	1060305	1	True				
ANR	1060360	ParameterType	t1_hinter_space_coord		1060305	0					
ANR	1060361	Identifier	v		1060305	1					
ANR	1060362	CFGEntryNode	ENTRY		1060305		True				
ANR	1060363	CFGExitNode	EXIT		1060305		True				
ANR	1060364	Symbol	* h		1060305						
ANR	1060365	Symbol	s		1060305						
ANR	1060366	Symbol	v		1060305						
ANR	1060367	Symbol	h		1060305						
ANR	1060368	Symbol	h -> g2o_fraction_bits		1060305						
ANR	1060369	Symbol	_fixed_shift		1060305						
ANR	1060370	Function	d2o	297:0:10479:10670							
ANR	1060371	FunctionDef	"d2o (const t1_hinter * h , t1_hinter_space_coord v)"		1060370	0					
ANR	1060372	CompoundStatement		298:0:10548:10670	1060370	0					
ANR	1060373	IdentifierDeclStatement	int s = h -> g2o_fraction_bits - _fixed_shift ;	298:3:10552:10595	1060370	0	True				
ANR	1060374	IdentifierDecl	s = h -> g2o_fraction_bits - _fixed_shift		1060370	0					
ANR	1060375	IdentifierDeclType	int		1060370	0					
ANR	1060376	Identifier	s		1060370	1					
ANR	1060377	AssignmentExpression	s = h -> g2o_fraction_bits - _fixed_shift		1060370	2		=			
ANR	1060378	Identifier	s		1060370	0					
ANR	1060379	AdditiveExpression	h -> g2o_fraction_bits - _fixed_shift		1060370	1		-			
ANR	1060380	PtrMemberAccess	h -> g2o_fraction_bits		1060370	0					
ANR	1060381	Identifier	h		1060370	0					
ANR	1060382	Identifier	g2o_fraction_bits		1060370	1					
ANR	1060383	Identifier	_fixed_shift		1060370	1					
ANR	1060384	IfStatement	if ( s >= 0 )		1060370	1					
ANR	1060385	Condition	s >= 0	300:8:10606:10611	1060370	0	True				
ANR	1060386	RelationalExpression	s >= 0		1060370	0		>=			
ANR	1060387	Identifier	s		1060370	0					
ANR	1060388	PrimaryExpression	0		1060370	1					
ANR	1060389	ReturnStatement	return v << s ;	301:8:10622:10635	1060370	1	True				
ANR	1060390	ShiftExpression	v << s		1060370	0		<<			
ANR	1060391	Identifier	v		1060370	0					
ANR	1060392	Identifier	s		1060370	1					
ANR	1060393	ElseStatement	else		1060370	0					
ANR	1060394	ReturnStatement	return v >> - s ;	303:8:10654:10668	1060370	0	True				
ANR	1060395	ShiftExpression	v >> - s		1060370	0		>>			
ANR	1060396	Identifier	v		1060370	0					
ANR	1060397	UnaryOperationExpression	- s		1060370	1					
ANR	1060398	UnaryOperator	-		1060370	0					
ANR	1060399	Identifier	s		1060370	1					
ANR	1060400	ReturnType	static inline fixed		1060370	1					
ANR	1060401	Identifier	d2o		1060370	2					
ANR	1060402	ParameterList	"const t1_hinter * h , t1_hinter_space_coord v"		1060370	3					
ANR	1060403	Parameter	const t1_hinter * h	297:24:10503:10520	1060370	0	True				
ANR	1060404	ParameterType	const t1_hinter *		1060370	0					
ANR	1060405	Identifier	h		1060370	1					
ANR	1060406	Parameter	t1_hinter_space_coord v	297:44:10523:10545	1060370	1	True				
ANR	1060407	ParameterType	t1_hinter_space_coord		1060370	0					
ANR	1060408	Identifier	v		1060370	1					
ANR	1060409	CFGEntryNode	ENTRY		1060370		True				
ANR	1060410	CFGExitNode	EXIT		1060370		True				
ANR	1060411	Symbol	* h		1060370						
ANR	1060412	Symbol	s		1060370						
ANR	1060413	Symbol	v		1060370						
ANR	1060414	Symbol	h		1060370						
ANR	1060415	Symbol	h -> g2o_fraction_bits		1060370						
ANR	1060416	Symbol	_fixed_shift		1060370						
ANR	1060417	Function	g2o	306:0:10673:10959							
ANR	1060418	FunctionDef	"g2o (t1_hinter * h , t1_glyph_space_coord gx , t1_glyph_space_coord gy , t1_hinter_space_coord * ox , t1_hinter_space_coord * oy)"		1060417	0					
ANR	1060419	CompoundStatement		307:0:10815:10959	1060417	0					
ANR	1060420	ExpressionStatement	"* ox = fraction_matrix__transform_x ( & h -> ctmf , gx , gy , g2o_bitshift )"	307:3:10819:10885	1060417	0	True				
ANR	1060421	AssignmentExpression	"* ox = fraction_matrix__transform_x ( & h -> ctmf , gx , gy , g2o_bitshift )"		1060417	0		=			
ANR	1060422	UnaryOperationExpression	* ox		1060417	0					
ANR	1060423	UnaryOperator	*		1060417	0					
ANR	1060424	Identifier	ox		1060417	1					
ANR	1060425	CallExpression	"fraction_matrix__transform_x ( & h -> ctmf , gx , gy , g2o_bitshift )"		1060417	1					
ANR	1060426	Callee	fraction_matrix__transform_x		1060417	0					
ANR	1060427	Identifier	fraction_matrix__transform_x		1060417	0					
ANR	1060428	ArgumentList	& h -> ctmf		1060417	1					
ANR	1060429	Argument	& h -> ctmf		1060417	0					
ANR	1060430	UnaryOperationExpression	& h -> ctmf		1060417	0					
ANR	1060431	UnaryOperator	&		1060417	0					
ANR	1060432	PtrMemberAccess	h -> ctmf		1060417	1					
ANR	1060433	Identifier	h		1060417	0					
ANR	1060434	Identifier	ctmf		1060417	1					
ANR	1060435	Argument	gx		1060417	1					
ANR	1060436	Identifier	gx		1060417	0					
ANR	1060437	Argument	gy		1060417	2					
ANR	1060438	Identifier	gy		1060417	0					
ANR	1060439	Argument	g2o_bitshift		1060417	3					
ANR	1060440	Identifier	g2o_bitshift		1060417	0					
ANR	1060441	ExpressionStatement	"* oy = fraction_matrix__transform_y ( & h -> ctmf , gx , gy , g2o_bitshift )"	308:4:10891:10957	1060417	1	True				
ANR	1060442	AssignmentExpression	"* oy = fraction_matrix__transform_y ( & h -> ctmf , gx , gy , g2o_bitshift )"		1060417	0		=			
ANR	1060443	UnaryOperationExpression	* oy		1060417	0					
ANR	1060444	UnaryOperator	*		1060417	0					
ANR	1060445	Identifier	oy		1060417	1					
ANR	1060446	CallExpression	"fraction_matrix__transform_y ( & h -> ctmf , gx , gy , g2o_bitshift )"		1060417	1					
ANR	1060447	Callee	fraction_matrix__transform_y		1060417	0					
ANR	1060448	Identifier	fraction_matrix__transform_y		1060417	0					
ANR	1060449	ArgumentList	& h -> ctmf		1060417	1					
ANR	1060450	Argument	& h -> ctmf		1060417	0					
ANR	1060451	UnaryOperationExpression	& h -> ctmf		1060417	0					
ANR	1060452	UnaryOperator	&		1060417	0					
ANR	1060453	PtrMemberAccess	h -> ctmf		1060417	1					
ANR	1060454	Identifier	h		1060417	0					
ANR	1060455	Identifier	ctmf		1060417	1					
ANR	1060456	Argument	gx		1060417	1					
ANR	1060457	Identifier	gx		1060417	0					
ANR	1060458	Argument	gy		1060417	2					
ANR	1060459	Identifier	gy		1060417	0					
ANR	1060460	Argument	g2o_bitshift		1060417	3					
ANR	1060461	Identifier	g2o_bitshift		1060417	0					
ANR	1060462	ReturnType	static inline void		1060417	1					
ANR	1060463	Identifier	g2o		1060417	2					
ANR	1060464	ParameterList	"t1_hinter * h , t1_glyph_space_coord gx , t1_glyph_space_coord gy , t1_hinter_space_coord * ox , t1_hinter_space_coord * oy"		1060417	3					
ANR	1060465	Parameter	t1_hinter * h	306:23:10696:10708	1060417	0	True				
ANR	1060466	ParameterType	t1_hinter *		1060417	0					
ANR	1060467	Identifier	h		1060417	1					
ANR	1060468	Parameter	t1_glyph_space_coord gx	306:38:10711:10733	1060417	1	True				
ANR	1060469	ParameterType	t1_glyph_space_coord		1060417	0					
ANR	1060470	Identifier	gx		1060417	1					
ANR	1060471	Parameter	t1_glyph_space_coord gy	306:63:10736:10758	1060417	2	True				
ANR	1060472	ParameterType	t1_glyph_space_coord		1060417	0					
ANR	1060473	Identifier	gy		1060417	1					
ANR	1060474	Parameter	t1_hinter_space_coord * ox	306:88:10761:10785	1060417	3	True				
ANR	1060475	ParameterType	t1_hinter_space_coord *		1060417	0					
ANR	1060476	Identifier	ox		1060417	1					
ANR	1060477	Parameter	t1_hinter_space_coord * oy	306:115:10788:10812	1060417	4	True				
ANR	1060478	ParameterType	t1_hinter_space_coord *		1060417	0					
ANR	1060479	Identifier	oy		1060417	1					
ANR	1060480	CFGEntryNode	ENTRY		1060417		True				
ANR	1060481	CFGExitNode	EXIT		1060417		True				
ANR	1060482	Symbol	gx		1060417						
ANR	1060483	Symbol	gy		1060417						
ANR	1060484	Symbol	* oy		1060417						
ANR	1060485	Symbol	fraction_matrix__transform_y		1060417						
ANR	1060486	Symbol	h		1060417						
ANR	1060487	Symbol	ox		1060417						
ANR	1060488	Symbol	oy		1060417						
ANR	1060489	Symbol	g2o_bitshift		1060417						
ANR	1060490	Symbol	fraction_matrix__transform_x		1060417						
ANR	1060491	Symbol	* ox		1060417						
ANR	1060492	Symbol	& h -> ctmf		1060417						
ANR	1060493	Function	g2o_dist	311:0:10962:11090							
ANR	1060494	FunctionDef	"g2o_dist (t1_glyph_space_coord gd , int19 coef)"		1060493	0					
ANR	1060495	CompoundStatement		312:0:11044:11090	1060493	0					
ANR	1060496	ReturnStatement	"return mul_shift ( gd , coef , g2o_bitshift ) ;"	312:3:11048:11088	1060493	0	True				
ANR	1060497	CallExpression	"mul_shift ( gd , coef , g2o_bitshift )"		1060493	0					
ANR	1060498	Callee	mul_shift		1060493	0					
ANR	1060499	Identifier	mul_shift		1060493	0					
ANR	1060500	ArgumentList	gd		1060493	1					
ANR	1060501	Argument	gd		1060493	0					
ANR	1060502	Identifier	gd		1060493	0					
ANR	1060503	Argument	coef		1060493	1					
ANR	1060504	Identifier	coef		1060493	0					
ANR	1060505	Argument	g2o_bitshift		1060493	2					
ANR	1060506	Identifier	g2o_bitshift		1060493	0					
ANR	1060507	ReturnType	static inline t1_hinter_space_coord		1060493	1					
ANR	1060508	Identifier	g2o_dist		1060493	2					
ANR	1060509	ParameterList	"t1_glyph_space_coord gd , int19 coef"		1060493	3					
ANR	1060510	Parameter	t1_glyph_space_coord gd	311:45:11007:11029	1060493	0	True				
ANR	1060511	ParameterType	t1_glyph_space_coord		1060493	0					
ANR	1060512	Identifier	gd		1060493	1					
ANR	1060513	Parameter	int19 coef	311:70:11032:11041	1060493	1	True				
ANR	1060514	ParameterType	int19		1060493	0					
ANR	1060515	Identifier	coef		1060493	1					
ANR	1060516	CFGEntryNode	ENTRY		1060493		True				
ANR	1060517	CFGExitNode	EXIT		1060493		True				
ANR	1060518	Symbol	coef		1060493						
ANR	1060519	Symbol	mul_shift		1060493						
ANR	1060520	Symbol	g2o_bitshift		1060493						
ANR	1060521	Symbol	gd		1060493						
ANR	1060522	Function	g2d	315:0:11093:11441							
ANR	1060523	FunctionDef	"g2d (t1_hinter * h , t1_glyph_space_coord gx , t1_glyph_space_coord gy , fixed * dx , fixed * dy)"		1060522	0					
ANR	1060524	CompoundStatement		316:0:11203:11441	1060522	0					
ANR	1060525	ExpressionStatement	"* dx = fraction_matrix__transform_x ( & h -> ctmf , gx , gy , g2o_bitshift )"	317:4:11209:11275	1060522	0	True				
ANR	1060526	AssignmentExpression	"* dx = fraction_matrix__transform_x ( & h -> ctmf , gx , gy , g2o_bitshift )"		1060522	0		=			
ANR	1060527	UnaryOperationExpression	* dx		1060522	0					
ANR	1060528	UnaryOperator	*		1060522	0					
ANR	1060529	Identifier	dx		1060522	1					
ANR	1060530	CallExpression	"fraction_matrix__transform_x ( & h -> ctmf , gx , gy , g2o_bitshift )"		1060522	1					
ANR	1060531	Callee	fraction_matrix__transform_x		1060522	0					
ANR	1060532	Identifier	fraction_matrix__transform_x		1060522	0					
ANR	1060533	ArgumentList	& h -> ctmf		1060522	1					
ANR	1060534	Argument	& h -> ctmf		1060522	0					
ANR	1060535	UnaryOperationExpression	& h -> ctmf		1060522	0					
ANR	1060536	UnaryOperator	&		1060522	0					
ANR	1060537	PtrMemberAccess	h -> ctmf		1060522	1					
ANR	1060538	Identifier	h		1060522	0					
ANR	1060539	Identifier	ctmf		1060522	1					
ANR	1060540	Argument	gx		1060522	1					
ANR	1060541	Identifier	gx		1060522	0					
ANR	1060542	Argument	gy		1060522	2					
ANR	1060543	Identifier	gy		1060522	0					
ANR	1060544	Argument	g2o_bitshift		1060522	3					
ANR	1060545	Identifier	g2o_bitshift		1060522	0					
ANR	1060546	ExpressionStatement	"* dy = fraction_matrix__transform_y ( & h -> ctmf , gx , gy , g2o_bitshift )"	318:4:11281:11347	1060522	1	True				
ANR	1060547	AssignmentExpression	"* dy = fraction_matrix__transform_y ( & h -> ctmf , gx , gy , g2o_bitshift )"		1060522	0		=			
ANR	1060548	UnaryOperationExpression	* dy		1060522	0					
ANR	1060549	UnaryOperator	*		1060522	0					
ANR	1060550	Identifier	dy		1060522	1					
ANR	1060551	CallExpression	"fraction_matrix__transform_y ( & h -> ctmf , gx , gy , g2o_bitshift )"		1060522	1					
ANR	1060552	Callee	fraction_matrix__transform_y		1060522	0					
ANR	1060553	Identifier	fraction_matrix__transform_y		1060522	0					
ANR	1060554	ArgumentList	& h -> ctmf		1060522	1					
ANR	1060555	Argument	& h -> ctmf		1060522	0					
ANR	1060556	UnaryOperationExpression	& h -> ctmf		1060522	0					
ANR	1060557	UnaryOperator	&		1060522	0					
ANR	1060558	PtrMemberAccess	h -> ctmf		1060522	1					
ANR	1060559	Identifier	h		1060522	0					
ANR	1060560	Identifier	ctmf		1060522	1					
ANR	1060561	Argument	gx		1060522	1					
ANR	1060562	Identifier	gx		1060522	0					
ANR	1060563	Argument	gy		1060522	2					
ANR	1060564	Identifier	gy		1060522	0					
ANR	1060565	Argument	g2o_bitshift		1060522	3					
ANR	1060566	Identifier	g2o_bitshift		1060522	0					
ANR	1060567	ExpressionStatement	"* dx = o2d ( h , * dx )"	319:4:11353:11370	1060522	2	True				
ANR	1060568	AssignmentExpression	"* dx = o2d ( h , * dx )"		1060522	0		=			
ANR	1060569	UnaryOperationExpression	* dx		1060522	0					
ANR	1060570	UnaryOperator	*		1060522	0					
ANR	1060571	Identifier	dx		1060522	1					
ANR	1060572	CallExpression	"o2d ( h , * dx )"		1060522	1					
ANR	1060573	Callee	o2d		1060522	0					
ANR	1060574	Identifier	o2d		1060522	0					
ANR	1060575	ArgumentList	h		1060522	1					
ANR	1060576	Argument	h		1060522	0					
ANR	1060577	Identifier	h		1060522	0					
ANR	1060578	Argument	* dx		1060522	1					
ANR	1060579	UnaryOperationExpression	* dx		1060522	0					
ANR	1060580	UnaryOperator	*		1060522	0					
ANR	1060581	Identifier	dx		1060522	1					
ANR	1060582	ExpressionStatement	"* dy = o2d ( h , * dy )"	320:4:11376:11393	1060522	3	True				
ANR	1060583	AssignmentExpression	"* dy = o2d ( h , * dy )"		1060522	0		=			
ANR	1060584	UnaryOperationExpression	* dy		1060522	0					
ANR	1060585	UnaryOperator	*		1060522	0					
ANR	1060586	Identifier	dy		1060522	1					
ANR	1060587	CallExpression	"o2d ( h , * dy )"		1060522	1					
ANR	1060588	Callee	o2d		1060522	0					
ANR	1060589	Identifier	o2d		1060522	0					
ANR	1060590	ArgumentList	h		1060522	1					
ANR	1060591	Argument	h		1060522	0					
ANR	1060592	Identifier	h		1060522	0					
ANR	1060593	Argument	* dy		1060522	1					
ANR	1060594	UnaryOperationExpression	* dy		1060522	0					
ANR	1060595	UnaryOperator	*		1060522	0					
ANR	1060596	Identifier	dy		1060522	1					
ANR	1060597	ExpressionStatement	* dx += h -> orig_dx	321:4:11399:11416	1060522	4	True				
ANR	1060598	AssignmentExpression	* dx += h -> orig_dx		1060522	0		+=			
ANR	1060599	UnaryOperationExpression	* dx		1060522	0					
ANR	1060600	UnaryOperator	*		1060522	0					
ANR	1060601	Identifier	dx		1060522	1					
ANR	1060602	PtrMemberAccess	h -> orig_dx		1060522	1					
ANR	1060603	Identifier	h		1060522	0					
ANR	1060604	Identifier	orig_dx		1060522	1					
ANR	1060605	ExpressionStatement	* dy += h -> orig_dy	322:4:11422:11439	1060522	5	True				
ANR	1060606	AssignmentExpression	* dy += h -> orig_dy		1060522	0		+=			
ANR	1060607	UnaryOperationExpression	* dy		1060522	0					
ANR	1060608	UnaryOperator	*		1060522	0					
ANR	1060609	Identifier	dy		1060522	1					
ANR	1060610	PtrMemberAccess	h -> orig_dy		1060522	1					
ANR	1060611	Identifier	h		1060522	0					
ANR	1060612	Identifier	orig_dy		1060522	1					
ANR	1060613	ReturnType	static inline void		1060522	1					
ANR	1060614	Identifier	g2d		1060522	2					
ANR	1060615	ParameterList	"t1_hinter * h , t1_glyph_space_coord gx , t1_glyph_space_coord gy , fixed * dx , fixed * dy"		1060522	3					
ANR	1060616	Parameter	t1_hinter * h	315:23:11116:11128	1060522	0	True				
ANR	1060617	ParameterType	t1_hinter *		1060522	0					
ANR	1060618	Identifier	h		1060522	1					
ANR	1060619	Parameter	t1_glyph_space_coord gx	315:38:11131:11153	1060522	1	True				
ANR	1060620	ParameterType	t1_glyph_space_coord		1060522	0					
ANR	1060621	Identifier	gx		1060522	1					
ANR	1060622	Parameter	t1_glyph_space_coord gy	315:63:11156:11178	1060522	2	True				
ANR	1060623	ParameterType	t1_glyph_space_coord		1060522	0					
ANR	1060624	Identifier	gy		1060522	1					
ANR	1060625	Parameter	fixed * dx	315:88:11181:11189	1060522	3	True				
ANR	1060626	ParameterType	fixed *		1060522	0					
ANR	1060627	Identifier	dx		1060522	1					
ANR	1060628	Parameter	fixed * dy	315:99:11192:11200	1060522	4	True				
ANR	1060629	ParameterType	fixed *		1060522	0					
ANR	1060630	Identifier	dy		1060522	1					
ANR	1060631	CFGEntryNode	ENTRY		1060522		True				
ANR	1060632	CFGExitNode	EXIT		1060522		True				
ANR	1060633	Symbol	o2d		1060522						
ANR	1060634	Symbol	fraction_matrix__transform_y		1060522						
ANR	1060635	Symbol	h		1060522						
ANR	1060636	Symbol	g2o_bitshift		1060522						
ANR	1060637	Symbol	h -> orig_dy		1060522						
ANR	1060638	Symbol	fraction_matrix__transform_x		1060522						
ANR	1060639	Symbol	h -> orig_dx		1060522						
ANR	1060640	Symbol	& h -> ctmf		1060522						
ANR	1060641	Symbol	gx		1060522						
ANR	1060642	Symbol	gy		1060522						
ANR	1060643	Symbol	* h		1060522						
ANR	1060644	Symbol	dx		1060522						
ANR	1060645	Symbol	dy		1060522						
ANR	1060646	Symbol	* dy		1060522						
ANR	1060647	Symbol	* dx		1060522						
ANR	1060648	Function	o2g	325:0:11444:11924							
ANR	1060649	FunctionDef	"o2g (t1_hinter * h , t1_hinter_space_coord ox , t1_hinter_space_coord oy , t1_glyph_space_coord * gx , t1_glyph_space_coord * gy)"		1060648	0					
ANR	1060650	CompoundStatement		326:0:11586:11924	1060648	0					
ANR	1060651	ExpressionStatement	"* gx = fraction_matrix__transform_x ( & h -> ctmi , ox , oy , split_bits )"	326:3:11590:11654	1060648	0	True				
ANR	1060652	AssignmentExpression	"* gx = fraction_matrix__transform_x ( & h -> ctmi , ox , oy , split_bits )"		1060648	0		=			
ANR	1060653	UnaryOperationExpression	* gx		1060648	0					
ANR	1060654	UnaryOperator	*		1060648	0					
ANR	1060655	Identifier	gx		1060648	1					
ANR	1060656	CallExpression	"fraction_matrix__transform_x ( & h -> ctmi , ox , oy , split_bits )"		1060648	1					
ANR	1060657	Callee	fraction_matrix__transform_x		1060648	0					
ANR	1060658	Identifier	fraction_matrix__transform_x		1060648	0					
ANR	1060659	ArgumentList	& h -> ctmi		1060648	1					
ANR	1060660	Argument	& h -> ctmi		1060648	0					
ANR	1060661	UnaryOperationExpression	& h -> ctmi		1060648	0					
ANR	1060662	UnaryOperator	&		1060648	0					
ANR	1060663	PtrMemberAccess	h -> ctmi		1060648	1					
ANR	1060664	Identifier	h		1060648	0					
ANR	1060665	Identifier	ctmi		1060648	1					
ANR	1060666	Argument	ox		1060648	1					
ANR	1060667	Identifier	ox		1060648	0					
ANR	1060668	Argument	oy		1060648	2					
ANR	1060669	Identifier	oy		1060648	0					
ANR	1060670	Argument	split_bits		1060648	3					
ANR	1060671	Identifier	split_bits		1060648	0					
ANR	1060672	ExpressionStatement	"* gy = fraction_matrix__transform_y ( & h -> ctmi , ox , oy , split_bits )"	327:4:11660:11724	1060648	1	True				
ANR	1060673	AssignmentExpression	"* gy = fraction_matrix__transform_y ( & h -> ctmi , ox , oy , split_bits )"		1060648	0		=			
ANR	1060674	UnaryOperationExpression	* gy		1060648	0					
ANR	1060675	UnaryOperator	*		1060648	0					
ANR	1060676	Identifier	gy		1060648	1					
ANR	1060677	CallExpression	"fraction_matrix__transform_y ( & h -> ctmi , ox , oy , split_bits )"		1060648	1					
ANR	1060678	Callee	fraction_matrix__transform_y		1060648	0					
ANR	1060679	Identifier	fraction_matrix__transform_y		1060648	0					
ANR	1060680	ArgumentList	& h -> ctmi		1060648	1					
ANR	1060681	Argument	& h -> ctmi		1060648	0					
ANR	1060682	UnaryOperationExpression	& h -> ctmi		1060648	0					
ANR	1060683	UnaryOperator	&		1060648	0					
ANR	1060684	PtrMemberAccess	h -> ctmi		1060648	1					
ANR	1060685	Identifier	h		1060648	0					
ANR	1060686	Identifier	ctmi		1060648	1					
ANR	1060687	Argument	ox		1060648	1					
ANR	1060688	Identifier	ox		1060648	0					
ANR	1060689	Argument	oy		1060648	2					
ANR	1060690	Identifier	oy		1060648	0					
ANR	1060691	Argument	split_bits		1060648	3					
ANR	1060692	Identifier	split_bits		1060648	0					
ANR	1060693	ExpressionStatement	"* gx = shift_rounded ( * gx , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits )"	328:4:11730:11823	1060648	2	True				
ANR	1060694	AssignmentExpression	"* gx = shift_rounded ( * gx , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits )"		1060648	0		=			
ANR	1060695	UnaryOperationExpression	* gx		1060648	0					
ANR	1060696	UnaryOperator	*		1060648	0					
ANR	1060697	Identifier	gx		1060648	1					
ANR	1060698	CallExpression	"shift_rounded ( * gx , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits )"		1060648	1					
ANR	1060699	Callee	shift_rounded		1060648	0					
ANR	1060700	Identifier	shift_rounded		1060648	0					
ANR	1060701	ArgumentList	* gx		1060648	1					
ANR	1060702	Argument	* gx		1060648	0					
ANR	1060703	UnaryOperationExpression	* gx		1060648	0					
ANR	1060704	UnaryOperator	*		1060648	0					
ANR	1060705	Identifier	gx		1060648	1					
ANR	1060706	Argument	h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits		1060648	1					
ANR	1060707	AdditiveExpression	h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits		1060648	0		+			
ANR	1060708	PtrMemberAccess	h -> g2o_fraction_bits		1060648	0					
ANR	1060709	Identifier	h		1060648	0					
ANR	1060710	Identifier	g2o_fraction_bits		1060648	1					
ANR	1060711	AdditiveExpression	h -> ctmi . bitshift - _fixed_shift - split_bits		1060648	1		-			
ANR	1060712	MemberAccess	h -> ctmi . bitshift		1060648	0					
ANR	1060713	PtrMemberAccess	h -> ctmi		1060648	0					
ANR	1060714	Identifier	h		1060648	0					
ANR	1060715	Identifier	ctmi		1060648	1					
ANR	1060716	Identifier	bitshift		1060648	1					
ANR	1060717	AdditiveExpression	_fixed_shift - split_bits		1060648	1		-			
ANR	1060718	Identifier	_fixed_shift		1060648	0					
ANR	1060719	Identifier	split_bits		1060648	1					
ANR	1060720	ExpressionStatement	"* gy = shift_rounded ( * gy , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits )"	329:4:11829:11922	1060648	3	True				
ANR	1060721	AssignmentExpression	"* gy = shift_rounded ( * gy , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits )"		1060648	0		=			
ANR	1060722	UnaryOperationExpression	* gy		1060648	0					
ANR	1060723	UnaryOperator	*		1060648	0					
ANR	1060724	Identifier	gy		1060648	1					
ANR	1060725	CallExpression	"shift_rounded ( * gy , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits )"		1060648	1					
ANR	1060726	Callee	shift_rounded		1060648	0					
ANR	1060727	Identifier	shift_rounded		1060648	0					
ANR	1060728	ArgumentList	* gy		1060648	1					
ANR	1060729	Argument	* gy		1060648	0					
ANR	1060730	UnaryOperationExpression	* gy		1060648	0					
ANR	1060731	UnaryOperator	*		1060648	0					
ANR	1060732	Identifier	gy		1060648	1					
ANR	1060733	Argument	h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits		1060648	1					
ANR	1060734	AdditiveExpression	h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits		1060648	0		+			
ANR	1060735	PtrMemberAccess	h -> g2o_fraction_bits		1060648	0					
ANR	1060736	Identifier	h		1060648	0					
ANR	1060737	Identifier	g2o_fraction_bits		1060648	1					
ANR	1060738	AdditiveExpression	h -> ctmi . bitshift - _fixed_shift - split_bits		1060648	1		-			
ANR	1060739	MemberAccess	h -> ctmi . bitshift		1060648	0					
ANR	1060740	PtrMemberAccess	h -> ctmi		1060648	0					
ANR	1060741	Identifier	h		1060648	0					
ANR	1060742	Identifier	ctmi		1060648	1					
ANR	1060743	Identifier	bitshift		1060648	1					
ANR	1060744	AdditiveExpression	_fixed_shift - split_bits		1060648	1		-			
ANR	1060745	Identifier	_fixed_shift		1060648	0					
ANR	1060746	Identifier	split_bits		1060648	1					
ANR	1060747	ReturnType	static inline void		1060648	1					
ANR	1060748	Identifier	o2g		1060648	2					
ANR	1060749	ParameterList	"t1_hinter * h , t1_hinter_space_coord ox , t1_hinter_space_coord oy , t1_glyph_space_coord * gx , t1_glyph_space_coord * gy"		1060648	3					
ANR	1060750	Parameter	t1_hinter * h	325:23:11467:11479	1060648	0	True				
ANR	1060751	ParameterType	t1_hinter *		1060648	0					
ANR	1060752	Identifier	h		1060648	1					
ANR	1060753	Parameter	t1_hinter_space_coord ox	325:38:11482:11505	1060648	1	True				
ANR	1060754	ParameterType	t1_hinter_space_coord		1060648	0					
ANR	1060755	Identifier	ox		1060648	1					
ANR	1060756	Parameter	t1_hinter_space_coord oy	325:64:11508:11531	1060648	2	True				
ANR	1060757	ParameterType	t1_hinter_space_coord		1060648	0					
ANR	1060758	Identifier	oy		1060648	1					
ANR	1060759	Parameter	t1_glyph_space_coord * gx	325:90:11534:11557	1060648	3	True				
ANR	1060760	ParameterType	t1_glyph_space_coord *		1060648	0					
ANR	1060761	Identifier	gx		1060648	1					
ANR	1060762	Parameter	t1_glyph_space_coord * gy	325:116:11560:11583	1060648	4	True				
ANR	1060763	ParameterType	t1_glyph_space_coord *		1060648	0					
ANR	1060764	Identifier	gy		1060648	1					
ANR	1060765	CFGEntryNode	ENTRY		1060648		True				
ANR	1060766	CFGExitNode	EXIT		1060648		True				
ANR	1060767	Symbol	& h -> ctmi		1060648						
ANR	1060768	Symbol	fraction_matrix__transform_y		1060648						
ANR	1060769	Symbol	h		1060648						
ANR	1060770	Symbol	h -> g2o_fraction_bits		1060648						
ANR	1060771	Symbol	ox		1060648						
ANR	1060772	Symbol	oy		1060648						
ANR	1060773	Symbol	fraction_matrix__transform_x		1060648						
ANR	1060774	Symbol	h -> ctmi		1060648						
ANR	1060775	Symbol	shift_rounded		1060648						
ANR	1060776	Symbol	gx		1060648						
ANR	1060777	Symbol	gy		1060648						
ANR	1060778	Symbol	* h		1060648						
ANR	1060779	Symbol	* gx		1060648						
ANR	1060780	Symbol	* gy		1060648						
ANR	1060781	Symbol	h -> ctmi . bitshift		1060648						
ANR	1060782	Symbol	split_bits		1060648						
ANR	1060783	Symbol	_fixed_shift		1060648						
ANR	1060784	Function	o2g_dist	332:0:11927:12152							
ANR	1060785	FunctionDef	"o2g_dist (t1_hinter * h , t1_hinter_space_coord od , int19 coef)"		1060784	0					
ANR	1060786	CompoundStatement		333:0:12024:12152	1060784	0					
ANR	1060787	ReturnStatement	"return shift_rounded ( mul_shift ( od , coef , split_bits ) , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits ) ;"	333:3:12028:12150	1060784	0	True				
ANR	1060788	CallExpression	"shift_rounded ( mul_shift ( od , coef , split_bits ) , h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits )"		1060784	0					
ANR	1060789	Callee	shift_rounded		1060784	0					
ANR	1060790	Identifier	shift_rounded		1060784	0					
ANR	1060791	ArgumentList	"mul_shift ( od , coef , split_bits )"		1060784	1					
ANR	1060792	Argument	"mul_shift ( od , coef , split_bits )"		1060784	0					
ANR	1060793	CallExpression	"mul_shift ( od , coef , split_bits )"		1060784	0					
ANR	1060794	Callee	mul_shift		1060784	0					
ANR	1060795	Identifier	mul_shift		1060784	0					
ANR	1060796	ArgumentList	od		1060784	1					
ANR	1060797	Argument	od		1060784	0					
ANR	1060798	Identifier	od		1060784	0					
ANR	1060799	Argument	coef		1060784	1					
ANR	1060800	Identifier	coef		1060784	0					
ANR	1060801	Argument	split_bits		1060784	2					
ANR	1060802	Identifier	split_bits		1060784	0					
ANR	1060803	Argument	h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits		1060784	1					
ANR	1060804	AdditiveExpression	h -> g2o_fraction_bits + h -> ctmi . bitshift - _fixed_shift - split_bits		1060784	0		+			
ANR	1060805	PtrMemberAccess	h -> g2o_fraction_bits		1060784	0					
ANR	1060806	Identifier	h		1060784	0					
ANR	1060807	Identifier	g2o_fraction_bits		1060784	1					
ANR	1060808	AdditiveExpression	h -> ctmi . bitshift - _fixed_shift - split_bits		1060784	1		-			
ANR	1060809	MemberAccess	h -> ctmi . bitshift		1060784	0					
ANR	1060810	PtrMemberAccess	h -> ctmi		1060784	0					
ANR	1060811	Identifier	h		1060784	0					
ANR	1060812	Identifier	ctmi		1060784	1					
ANR	1060813	Identifier	bitshift		1060784	1					
ANR	1060814	AdditiveExpression	_fixed_shift - split_bits		1060784	1		-			
ANR	1060815	Identifier	_fixed_shift		1060784	0					
ANR	1060816	Identifier	split_bits		1060784	1					
ANR	1060817	ReturnType	static inline t1_glyph_space_coord		1060784	1					
ANR	1060818	Identifier	o2g_dist		1060784	2					
ANR	1060819	ParameterList	"t1_hinter * h , t1_hinter_space_coord od , int19 coef"		1060784	3					
ANR	1060820	Parameter	t1_hinter * h	332:44:11971:11983	1060784	0	True				
ANR	1060821	ParameterType	t1_hinter *		1060784	0					
ANR	1060822	Identifier	h		1060784	1					
ANR	1060823	Parameter	t1_hinter_space_coord od	332:59:11986:12009	1060784	1	True				
ANR	1060824	ParameterType	t1_hinter_space_coord		1060784	0					
ANR	1060825	Identifier	od		1060784	1					
ANR	1060826	Parameter	int19 coef	332:85:12012:12021	1060784	2	True				
ANR	1060827	ParameterType	int19		1060784	0					
ANR	1060828	Identifier	coef		1060784	1					
ANR	1060829	CFGEntryNode	ENTRY		1060784		True				
ANR	1060830	CFGExitNode	EXIT		1060784		True				
ANR	1060831	Symbol	* h		1060784						
ANR	1060832	Symbol	coef		1060784						
ANR	1060833	Symbol	od		1060784						
ANR	1060834	Symbol	h		1060784						
ANR	1060835	Symbol	mul_shift		1060784						
ANR	1060836	Symbol	h -> g2o_fraction_bits		1060784						
ANR	1060837	Symbol	h -> ctmi . bitshift		1060784						
ANR	1060838	Symbol	h -> ctmi		1060784						
ANR	1060839	Symbol	split_bits		1060784						
ANR	1060840	Symbol	shift_rounded		1060784						
ANR	1060841	Symbol	_fixed_shift		1060784						
ANR	1060842	Function	t1_hint__set_aligned_coord	338:0:12227:12775							
ANR	1060843	FunctionDef	"t1_hint__set_aligned_coord (t1_hint * self , t1_glyph_space_coord gc , t1_pole * pole , enum t1_align_type align , int quality)"		1060842	0					
ANR	1060844	CompoundStatement		339:0:12362:12775	1060842	0					
ANR	1060845	IdentifierDeclStatement	t1_glyph_space_coord g = ( self -> type == hstem ? pole -> gy : pole -> gx ) ;	339:3:12366:12434	1060842	0	True				
ANR	1060846	IdentifierDecl	g = ( self -> type == hstem ? pole -> gy : pole -> gx )		1060842	0					
ANR	1060847	IdentifierDeclType	t1_glyph_space_coord		1060842	0					
ANR	1060848	Identifier	g		1060842	1					
ANR	1060849	AssignmentExpression	g = ( self -> type == hstem ? pole -> gy : pole -> gx )		1060842	2		=			
ANR	1060850	Identifier	g		1060842	0					
ANR	1060851	ConditionalExpression	self -> type == hstem ? pole -> gy : pole -> gx		1060842	1					
ANR	1060852	Condition	self -> type == hstem		1060842	0					
ANR	1060853	EqualityExpression	self -> type == hstem		1060842	0		==			
ANR	1060854	PtrMemberAccess	self -> type		1060842	0					
ANR	1060855	Identifier	self		1060842	0					
ANR	1060856	Identifier	type		1060842	1					
ANR	1060857	Identifier	hstem		1060842	1					
ANR	1060858	PtrMemberAccess	pole -> gy		1060842	1					
ANR	1060859	Identifier	pole		1060842	0					
ANR	1060860	Identifier	gy		1060842	1					
ANR	1060861	PtrMemberAccess	pole -> gx		1060842	2					
ANR	1060862	Identifier	pole		1060842	0					
ANR	1060863	Identifier	gx		1060842	1					
ANR	1060864	IfStatement	if ( any_abs ( self -> g0 - g ) < any_abs ( self -> g1 - g ) )		1060842	1					
ANR	1060865	Condition	any_abs ( self -> g0 - g ) < any_abs ( self -> g1 - g )	341:8:12445:12489	1060842	0	True				
ANR	1060866	RelationalExpression	any_abs ( self -> g0 - g ) < any_abs ( self -> g1 - g )		1060842	0		<			
ANR	1060867	CallExpression	any_abs ( self -> g0 - g )		1060842	0					
ANR	1060868	Callee	any_abs		1060842	0					
ANR	1060869	Identifier	any_abs		1060842	0					
ANR	1060870	ArgumentList	self -> g0 - g		1060842	1					
ANR	1060871	Argument	self -> g0 - g		1060842	0					
ANR	1060872	AdditiveExpression	self -> g0 - g		1060842	0		-			
ANR	1060873	PtrMemberAccess	self -> g0		1060842	0					
ANR	1060874	Identifier	self		1060842	0					
ANR	1060875	Identifier	g0		1060842	1					
ANR	1060876	Identifier	g		1060842	1					
ANR	1060877	CallExpression	any_abs ( self -> g1 - g )		1060842	1					
ANR	1060878	Callee	any_abs		1060842	0					
ANR	1060879	Identifier	any_abs		1060842	0					
ANR	1060880	ArgumentList	self -> g1 - g		1060842	1					
ANR	1060881	Argument	self -> g1 - g		1060842	0					
ANR	1060882	AdditiveExpression	self -> g1 - g		1060842	0		-			
ANR	1060883	PtrMemberAccess	self -> g1		1060842	0					
ANR	1060884	Identifier	self		1060842	0					
ANR	1060885	Identifier	g1		1060842	1					
ANR	1060886	Identifier	g		1060842	1					
ANR	1060887	CompoundStatement		3:55:129:129	1060842	1					
ANR	1060888	IfStatement	if ( self -> aligned0 <= align && self -> q0 > quality )		1060842	0					
ANR	1060889	Condition	self -> aligned0 <= align && self -> q0 > quality	342:12:12506:12550	1060842	0	True				
ANR	1060890	AndExpression	self -> aligned0 <= align && self -> q0 > quality		1060842	0		&&			
ANR	1060891	RelationalExpression	self -> aligned0 <= align		1060842	0		<=			
ANR	1060892	PtrMemberAccess	self -> aligned0		1060842	0					
ANR	1060893	Identifier	self		1060842	0					
ANR	1060894	Identifier	aligned0		1060842	1					
ANR	1060895	Identifier	align		1060842	1					
ANR	1060896	RelationalExpression	self -> q0 > quality		1060842	1		>			
ANR	1060897	PtrMemberAccess	self -> q0		1060842	0					
ANR	1060898	Identifier	self		1060842	0					
ANR	1060899	Identifier	q0		1060842	1					
ANR	1060900	Identifier	quality		1060842	1					
ANR	1060901	ExpressionStatement	"self -> ag0 = gc , self -> aligned0 = align , self -> q0 = quality"	343:12:12565:12623	1060842	1	True				
ANR	1060902	Expression	"self -> ag0 = gc , self -> aligned0 = align , self -> q0 = quality"		1060842	0					
ANR	1060903	AssignmentExpression	self -> ag0 = gc		1060842	0		=			
ANR	1060904	PtrMemberAccess	self -> ag0		1060842	0					
ANR	1060905	Identifier	self		1060842	0					
ANR	1060906	Identifier	ag0		1060842	1					
ANR	1060907	Identifier	gc		1060842	1					
ANR	1060908	Expression	"self -> aligned0 = align , self -> q0 = quality"		1060842	1					
ANR	1060909	AssignmentExpression	self -> aligned0 = align		1060842	0		=			
ANR	1060910	PtrMemberAccess	self -> aligned0		1060842	0					
ANR	1060911	Identifier	self		1060842	0					
ANR	1060912	Identifier	aligned0		1060842	1					
ANR	1060913	Identifier	align		1060842	1					
ANR	1060914	AssignmentExpression	self -> q0 = quality		1060842	1		=			
ANR	1060915	PtrMemberAccess	self -> q0		1060842	0					
ANR	1060916	Identifier	self		1060842	0					
ANR	1060917	Identifier	q0		1060842	1					
ANR	1060918	Identifier	quality		1060842	1					
ANR	1060919	ElseStatement	else		1060842	0					
ANR	1060920	CompoundStatement		6:11:273:273	1060842	0					
ANR	1060921	IfStatement	if ( self -> aligned1 <= align && self -> q1 > quality )		1060842	0					
ANR	1060922	Condition	self -> aligned1 <= align && self -> q1 > quality	345:12:12650:12694	1060842	0	True				
ANR	1060923	AndExpression	self -> aligned1 <= align && self -> q1 > quality		1060842	0		&&			
ANR	1060924	RelationalExpression	self -> aligned1 <= align		1060842	0		<=			
ANR	1060925	PtrMemberAccess	self -> aligned1		1060842	0					
ANR	1060926	Identifier	self		1060842	0					
ANR	1060927	Identifier	aligned1		1060842	1					
ANR	1060928	Identifier	align		1060842	1					
ANR	1060929	RelationalExpression	self -> q1 > quality		1060842	1		>			
ANR	1060930	PtrMemberAccess	self -> q1		1060842	0					
ANR	1060931	Identifier	self		1060842	0					
ANR	1060932	Identifier	q1		1060842	1					
ANR	1060933	Identifier	quality		1060842	1					
ANR	1060934	ExpressionStatement	"self -> ag1 = gc , self -> aligned1 = align , self -> q1 = quality"	346:12:12709:12767	1060842	1	True				
ANR	1060935	Expression	"self -> ag1 = gc , self -> aligned1 = align , self -> q1 = quality"		1060842	0					
ANR	1060936	AssignmentExpression	self -> ag1 = gc		1060842	0		=			
ANR	1060937	PtrMemberAccess	self -> ag1		1060842	0					
ANR	1060938	Identifier	self		1060842	0					
ANR	1060939	Identifier	ag1		1060842	1					
ANR	1060940	Identifier	gc		1060842	1					
ANR	1060941	Expression	"self -> aligned1 = align , self -> q1 = quality"		1060842	1					
ANR	1060942	AssignmentExpression	self -> aligned1 = align		1060842	0		=			
ANR	1060943	PtrMemberAccess	self -> aligned1		1060842	0					
ANR	1060944	Identifier	self		1060842	0					
ANR	1060945	Identifier	aligned1		1060842	1					
ANR	1060946	Identifier	align		1060842	1					
ANR	1060947	AssignmentExpression	self -> q1 = quality		1060842	1		=			
ANR	1060948	PtrMemberAccess	self -> q1		1060842	0					
ANR	1060949	Identifier	self		1060842	0					
ANR	1060950	Identifier	q1		1060842	1					
ANR	1060951	Identifier	quality		1060842	1					
ANR	1060952	ReturnType	static void		1060842	1					
ANR	1060953	Identifier	t1_hint__set_aligned_coord		1060842	2					
ANR	1060954	ParameterList	"t1_hint * self , t1_glyph_space_coord gc , t1_pole * pole , enum t1_align_type align , int quality"		1060842	3					
ANR	1060955	Parameter	t1_hint * self	338:39:12266:12279	1060842	0	True				
ANR	1060956	ParameterType	t1_hint *		1060842	0					
ANR	1060957	Identifier	self		1060842	1					
ANR	1060958	Parameter	t1_glyph_space_coord gc	338:55:12282:12304	1060842	1	True				
ANR	1060959	ParameterType	t1_glyph_space_coord		1060842	0					
ANR	1060960	Identifier	gc		1060842	1					
ANR	1060961	Parameter	t1_pole * pole	338:80:12307:12320	1060842	2	True				
ANR	1060962	ParameterType	t1_pole *		1060842	0					
ANR	1060963	Identifier	pole		1060842	1					
ANR	1060964	Parameter	enum t1_align_type align	338:96:12323:12346	1060842	3	True				
ANR	1060965	ParameterType	enum t1_align_type		1060842	0					
ANR	1060966	Identifier	align		1060842	1					
ANR	1060967	Parameter	int quality	338:122:12349:12359	1060842	4	True				
ANR	1060968	ParameterType	int		1060842	0					
ANR	1060969	Identifier	quality		1060842	1					
ANR	1060970	CFGEntryNode	ENTRY		1060842		True				
ANR	1060971	CFGExitNode	EXIT		1060842		True				
ANR	1060972	Symbol	* self		1060842						
ANR	1060973	Symbol	g		1060842						
ANR	1060974	Symbol	self -> ag1		1060842						
ANR	1060975	Symbol	pole -> gy		1060842						
ANR	1060976	Symbol	pole -> gx		1060842						
ANR	1060977	Symbol	pole		1060842						
ANR	1060978	Symbol	align		1060842						
ANR	1060979	Symbol	* pole		1060842						
ANR	1060980	Symbol	self -> g0		1060842						
ANR	1060981	Symbol	quality		1060842						
ANR	1060982	Symbol	self -> g1		1060842						
ANR	1060983	Symbol	self -> q0		1060842						
ANR	1060984	Symbol	self -> q1		1060842						
ANR	1060985	Symbol	self -> aligned1		1060842						
ANR	1060986	Symbol	any_abs		1060842						
ANR	1060987	Symbol	self -> ag0		1060842						
ANR	1060988	Symbol	self		1060842						
ANR	1060989	Symbol	gc		1060842						
ANR	1060990	Symbol	self -> aligned0		1060842						
ANR	1060991	Symbol	self -> type		1060842						
ANR	1060992	Symbol	hstem		1060842						
ANR	1060993	Function	t1_hinter__init	352:0:12860:15364							
ANR	1060994	FunctionDef	"t1_hinter__init (t1_hinter * self , gx_path * output_path)"		1060993	0					
ANR	1060995	CompoundStatement		353:0:12921:15364	1060993	0					
ANR	1060996	ExpressionStatement	self -> max_import_coord = ( 1 << max_coord_bits )	354:4:12927:12973	1060993	0	True				
ANR	1060997	AssignmentExpression	self -> max_import_coord = ( 1 << max_coord_bits )		1060993	0		=			
ANR	1060998	PtrMemberAccess	self -> max_import_coord		1060993	0					
ANR	1060999	Identifier	self		1060993	0					
ANR	1061000	Identifier	max_import_coord		1060993	1					
ANR	1061001	ShiftExpression	1 << max_coord_bits		1060993	1		<<			
ANR	1061002	PrimaryExpression	1		1060993	0					
ANR	1061003	Identifier	max_coord_bits		1060993	1					
ANR	1061004	ExpressionStatement	self -> stem_snap_count [ 0 ] = self -> stem_snap_count [ 1 ] = 0	355:4:12979:13034	1060993	1	True				
ANR	1061005	AssignmentExpression	self -> stem_snap_count [ 0 ] = self -> stem_snap_count [ 1 ] = 0		1060993	0		=			
ANR	1061006	ArrayIndexing	self -> stem_snap_count [ 0 ]		1060993	0					
ANR	1061007	PtrMemberAccess	self -> stem_snap_count		1060993	0					
ANR	1061008	Identifier	self		1060993	0					
ANR	1061009	Identifier	stem_snap_count		1060993	1					
ANR	1061010	PrimaryExpression	0		1060993	1					
ANR	1061011	AssignmentExpression	self -> stem_snap_count [ 1 ] = 0		1060993	1		=			
ANR	1061012	ArrayIndexing	self -> stem_snap_count [ 1 ]		1060993	0					
ANR	1061013	PtrMemberAccess	self -> stem_snap_count		1060993	0					
ANR	1061014	Identifier	self		1060993	0					
ANR	1061015	Identifier	stem_snap_count		1060993	1					
ANR	1061016	PrimaryExpression	1		1060993	1					
ANR	1061017	PrimaryExpression	0		1060993	1					
ANR	1061018	ExpressionStatement	self -> stem_snap_vote_count = 0	356:4:13040:13070	1060993	2	True				
ANR	1061019	AssignmentExpression	self -> stem_snap_vote_count = 0		1060993	0		=			
ANR	1061020	PtrMemberAccess	self -> stem_snap_vote_count		1060993	0					
ANR	1061021	Identifier	self		1060993	0					
ANR	1061022	Identifier	stem_snap_vote_count		1060993	1					
ANR	1061023	PrimaryExpression	0		1060993	1					
ANR	1061024	ExpressionStatement	self -> zone_count = 0	357:4:13076:13096	1060993	3	True				
ANR	1061025	AssignmentExpression	self -> zone_count = 0		1060993	0		=			
ANR	1061026	PtrMemberAccess	self -> zone_count		1060993	0					
ANR	1061027	Identifier	self		1060993	0					
ANR	1061028	Identifier	zone_count		1060993	1					
ANR	1061029	PrimaryExpression	0		1060993	1					
ANR	1061030	ExpressionStatement	self -> pole_count = 0	358:4:13102:13122	1060993	4	True				
ANR	1061031	AssignmentExpression	self -> pole_count = 0		1060993	0		=			
ANR	1061032	PtrMemberAccess	self -> pole_count		1060993	0					
ANR	1061033	Identifier	self		1060993	0					
ANR	1061034	Identifier	pole_count		1060993	1					
ANR	1061035	PrimaryExpression	0		1060993	1					
ANR	1061036	ExpressionStatement	self -> hint_count = 0	359:4:13128:13148	1060993	5	True				
ANR	1061037	AssignmentExpression	self -> hint_count = 0		1060993	0		=			
ANR	1061038	PtrMemberAccess	self -> hint_count		1060993	0					
ANR	1061039	Identifier	self		1060993	0					
ANR	1061040	Identifier	hint_count		1060993	1					
ANR	1061041	PrimaryExpression	0		1060993	1					
ANR	1061042	ExpressionStatement	self -> contour_count = 0	360:4:13154:13177	1060993	6	True				
ANR	1061043	AssignmentExpression	self -> contour_count = 0		1060993	0		=			
ANR	1061044	PtrMemberAccess	self -> contour_count		1060993	0					
ANR	1061045	Identifier	self		1060993	0					
ANR	1061046	Identifier	contour_count		1060993	1					
ANR	1061047	PrimaryExpression	0		1060993	1					
ANR	1061048	ExpressionStatement	self -> subglyph_count = 0	361:4:13183:13207	1060993	7	True				
ANR	1061049	AssignmentExpression	self -> subglyph_count = 0		1060993	0		=			
ANR	1061050	PtrMemberAccess	self -> subglyph_count		1060993	0					
ANR	1061051	Identifier	self		1060993	0					
ANR	1061052	Identifier	subglyph_count		1060993	1					
ANR	1061053	PrimaryExpression	0		1060993	1					
ANR	1061054	ExpressionStatement	self -> hint_range_count = 0	362:4:13213:13239	1060993	8	True				
ANR	1061055	AssignmentExpression	self -> hint_range_count = 0		1060993	0		=			
ANR	1061056	PtrMemberAccess	self -> hint_range_count		1060993	0					
ANR	1061057	Identifier	self		1060993	0					
ANR	1061058	Identifier	hint_range_count		1060993	1					
ANR	1061059	PrimaryExpression	0		1060993	1					
ANR	1061060	ExpressionStatement	self -> flex_count = 0	363:4:13245:13265	1060993	9	True				
ANR	1061061	AssignmentExpression	self -> flex_count = 0		1060993	0		=			
ANR	1061062	PtrMemberAccess	self -> flex_count		1060993	0					
ANR	1061063	Identifier	self		1060993	0					
ANR	1061064	Identifier	flex_count		1060993	1					
ANR	1061065	PrimaryExpression	0		1060993	1					
ANR	1061066	ExpressionStatement	self -> have_flex = false	364:4:13271:13294	1060993	10	True				
ANR	1061067	AssignmentExpression	self -> have_flex = false		1060993	0		=			
ANR	1061068	PtrMemberAccess	self -> have_flex		1060993	0					
ANR	1061069	Identifier	self		1060993	0					
ANR	1061070	Identifier	have_flex		1060993	1					
ANR	1061071	Identifier	false		1060993	1					
ANR	1061072	ExpressionStatement	self -> max_subglyph_count = count_of ( self -> subglyph0 )	366:4:13301:13353	1060993	11	True				
ANR	1061073	AssignmentExpression	self -> max_subglyph_count = count_of ( self -> subglyph0 )		1060993	0		=			
ANR	1061074	PtrMemberAccess	self -> max_subglyph_count		1060993	0					
ANR	1061075	Identifier	self		1060993	0					
ANR	1061076	Identifier	max_subglyph_count		1060993	1					
ANR	1061077	CallExpression	count_of ( self -> subglyph0 )		1060993	1					
ANR	1061078	Callee	count_of		1060993	0					
ANR	1061079	Identifier	count_of		1060993	0					
ANR	1061080	ArgumentList	self -> subglyph0		1060993	1					
ANR	1061081	Argument	self -> subglyph0		1060993	0					
ANR	1061082	PtrMemberAccess	self -> subglyph0		1060993	0					
ANR	1061083	Identifier	self		1060993	0					
ANR	1061084	Identifier	subglyph0		1060993	1					
ANR	1061085	ExpressionStatement	self -> max_contour_count = count_of ( self -> contour0 )	367:4:13359:13409	1060993	12	True				
ANR	1061086	AssignmentExpression	self -> max_contour_count = count_of ( self -> contour0 )		1060993	0		=			
ANR	1061087	PtrMemberAccess	self -> max_contour_count		1060993	0					
ANR	1061088	Identifier	self		1060993	0					
ANR	1061089	Identifier	max_contour_count		1060993	1					
ANR	1061090	CallExpression	count_of ( self -> contour0 )		1060993	1					
ANR	1061091	Callee	count_of		1060993	0					
ANR	1061092	Identifier	count_of		1060993	0					
ANR	1061093	ArgumentList	self -> contour0		1060993	1					
ANR	1061094	Argument	self -> contour0		1060993	0					
ANR	1061095	PtrMemberAccess	self -> contour0		1060993	0					
ANR	1061096	Identifier	self		1060993	0					
ANR	1061097	Identifier	contour0		1060993	1					
ANR	1061098	ExpressionStatement	self -> max_zone_count = count_of ( self -> zone0 )	368:4:13415:13459	1060993	13	True				
ANR	1061099	AssignmentExpression	self -> max_zone_count = count_of ( self -> zone0 )		1060993	0		=			
ANR	1061100	PtrMemberAccess	self -> max_zone_count		1060993	0					
ANR	1061101	Identifier	self		1060993	0					
ANR	1061102	Identifier	max_zone_count		1060993	1					
ANR	1061103	CallExpression	count_of ( self -> zone0 )		1060993	1					
ANR	1061104	Callee	count_of		1060993	0					
ANR	1061105	Identifier	count_of		1060993	0					
ANR	1061106	ArgumentList	self -> zone0		1060993	1					
ANR	1061107	Argument	self -> zone0		1060993	0					
ANR	1061108	PtrMemberAccess	self -> zone0		1060993	0					
ANR	1061109	Identifier	self		1060993	0					
ANR	1061110	Identifier	zone0		1060993	1					
ANR	1061111	ExpressionStatement	self -> max_pole_count = count_of ( self -> pole0 )	369:4:13465:13509	1060993	14	True				
ANR	1061112	AssignmentExpression	self -> max_pole_count = count_of ( self -> pole0 )		1060993	0		=			
ANR	1061113	PtrMemberAccess	self -> max_pole_count		1060993	0					
ANR	1061114	Identifier	self		1060993	0					
ANR	1061115	Identifier	max_pole_count		1060993	1					
ANR	1061116	CallExpression	count_of ( self -> pole0 )		1060993	1					
ANR	1061117	Callee	count_of		1060993	0					
ANR	1061118	Identifier	count_of		1060993	0					
ANR	1061119	ArgumentList	self -> pole0		1060993	1					
ANR	1061120	Argument	self -> pole0		1060993	0					
ANR	1061121	PtrMemberAccess	self -> pole0		1060993	0					
ANR	1061122	Identifier	self		1060993	0					
ANR	1061123	Identifier	pole0		1060993	1					
ANR	1061124	ExpressionStatement	self -> max_hint_count = count_of ( self -> hint0 )	370:4:13515:13559	1060993	15	True				
ANR	1061125	AssignmentExpression	self -> max_hint_count = count_of ( self -> hint0 )		1060993	0		=			
ANR	1061126	PtrMemberAccess	self -> max_hint_count		1060993	0					
ANR	1061127	Identifier	self		1060993	0					
ANR	1061128	Identifier	max_hint_count		1060993	1					
ANR	1061129	CallExpression	count_of ( self -> hint0 )		1060993	1					
ANR	1061130	Callee	count_of		1060993	0					
ANR	1061131	Identifier	count_of		1060993	0					
ANR	1061132	ArgumentList	self -> hint0		1060993	1					
ANR	1061133	Argument	self -> hint0		1060993	0					
ANR	1061134	PtrMemberAccess	self -> hint0		1060993	0					
ANR	1061135	Identifier	self		1060993	0					
ANR	1061136	Identifier	hint0		1060993	1					
ANR	1061137	ExpressionStatement	self -> max_hint_range_count = count_of ( self -> hint_range0 )	371:4:13565:13621	1060993	16	True				
ANR	1061138	AssignmentExpression	self -> max_hint_range_count = count_of ( self -> hint_range0 )		1060993	0		=			
ANR	1061139	PtrMemberAccess	self -> max_hint_range_count		1060993	0					
ANR	1061140	Identifier	self		1060993	0					
ANR	1061141	Identifier	max_hint_range_count		1060993	1					
ANR	1061142	CallExpression	count_of ( self -> hint_range0 )		1060993	1					
ANR	1061143	Callee	count_of		1060993	0					
ANR	1061144	Identifier	count_of		1060993	0					
ANR	1061145	ArgumentList	self -> hint_range0		1060993	1					
ANR	1061146	Argument	self -> hint_range0		1060993	0					
ANR	1061147	PtrMemberAccess	self -> hint_range0		1060993	0					
ANR	1061148	Identifier	self		1060993	0					
ANR	1061149	Identifier	hint_range0		1060993	1					
ANR	1061150	ExpressionStatement	self -> max_hint_applying_count = count_of ( self -> hint_applying0 )	372:4:13627:13689	1060993	17	True				
ANR	1061151	AssignmentExpression	self -> max_hint_applying_count = count_of ( self -> hint_applying0 )		1060993	0		=			
ANR	1061152	PtrMemberAccess	self -> max_hint_applying_count		1060993	0					
ANR	1061153	Identifier	self		1060993	0					
ANR	1061154	Identifier	max_hint_applying_count		1060993	1					
ANR	1061155	CallExpression	count_of ( self -> hint_applying0 )		1060993	1					
ANR	1061156	Callee	count_of		1060993	0					
ANR	1061157	Identifier	count_of		1060993	0					
ANR	1061158	ArgumentList	self -> hint_applying0		1060993	1					
ANR	1061159	Argument	self -> hint_applying0		1060993	0					
ANR	1061160	PtrMemberAccess	self -> hint_applying0		1060993	0					
ANR	1061161	Identifier	self		1060993	0					
ANR	1061162	Identifier	hint_applying0		1060993	1					
ANR	1061163	ExpressionStatement	self -> max_stem_snap_count [ 0 ] = count_of ( self -> stem_snap0 [ 0 ] )	373:4:13695:13755	1060993	18	True				
ANR	1061164	AssignmentExpression	self -> max_stem_snap_count [ 0 ] = count_of ( self -> stem_snap0 [ 0 ] )		1060993	0		=			
ANR	1061165	ArrayIndexing	self -> max_stem_snap_count [ 0 ]		1060993	0					
ANR	1061166	PtrMemberAccess	self -> max_stem_snap_count		1060993	0					
ANR	1061167	Identifier	self		1060993	0					
ANR	1061168	Identifier	max_stem_snap_count		1060993	1					
ANR	1061169	PrimaryExpression	0		1060993	1					
ANR	1061170	CallExpression	count_of ( self -> stem_snap0 [ 0 ] )		1060993	1					
ANR	1061171	Callee	count_of		1060993	0					
ANR	1061172	Identifier	count_of		1060993	0					
ANR	1061173	ArgumentList	self -> stem_snap0 [ 0 ]		1060993	1					
ANR	1061174	Argument	self -> stem_snap0 [ 0 ]		1060993	0					
ANR	1061175	ArrayIndexing	self -> stem_snap0 [ 0 ]		1060993	0					
ANR	1061176	PtrMemberAccess	self -> stem_snap0		1060993	0					
ANR	1061177	Identifier	self		1060993	0					
ANR	1061178	Identifier	stem_snap0		1060993	1					
ANR	1061179	PrimaryExpression	0		1060993	1					
ANR	1061180	ExpressionStatement	self -> max_stem_snap_count [ 1 ] = count_of ( self -> stem_snap0 [ 1 ] )	374:4:13761:13821	1060993	19	True				
ANR	1061181	AssignmentExpression	self -> max_stem_snap_count [ 1 ] = count_of ( self -> stem_snap0 [ 1 ] )		1060993	0		=			
ANR	1061182	ArrayIndexing	self -> max_stem_snap_count [ 1 ]		1060993	0					
ANR	1061183	PtrMemberAccess	self -> max_stem_snap_count		1060993	0					
ANR	1061184	Identifier	self		1060993	0					
ANR	1061185	Identifier	max_stem_snap_count		1060993	1					
ANR	1061186	PrimaryExpression	1		1060993	1					
ANR	1061187	CallExpression	count_of ( self -> stem_snap0 [ 1 ] )		1060993	1					
ANR	1061188	Callee	count_of		1060993	0					
ANR	1061189	Identifier	count_of		1060993	0					
ANR	1061190	ArgumentList	self -> stem_snap0 [ 1 ]		1060993	1					
ANR	1061191	Argument	self -> stem_snap0 [ 1 ]		1060993	0					
ANR	1061192	ArrayIndexing	self -> stem_snap0 [ 1 ]		1060993	0					
ANR	1061193	PtrMemberAccess	self -> stem_snap0		1060993	0					
ANR	1061194	Identifier	self		1060993	0					
ANR	1061195	Identifier	stem_snap0		1060993	1					
ANR	1061196	PrimaryExpression	1		1060993	1					
ANR	1061197	ExpressionStatement	self -> max_stem_snap_vote_count = count_of ( self -> stem_snap_vote0 )	375:4:13827:13891	1060993	20	True				
ANR	1061198	AssignmentExpression	self -> max_stem_snap_vote_count = count_of ( self -> stem_snap_vote0 )		1060993	0		=			
ANR	1061199	PtrMemberAccess	self -> max_stem_snap_vote_count		1060993	0					
ANR	1061200	Identifier	self		1060993	0					
ANR	1061201	Identifier	max_stem_snap_vote_count		1060993	1					
ANR	1061202	CallExpression	count_of ( self -> stem_snap_vote0 )		1060993	1					
ANR	1061203	Callee	count_of		1060993	0					
ANR	1061204	Identifier	count_of		1060993	0					
ANR	1061205	ArgumentList	self -> stem_snap_vote0		1060993	1					
ANR	1061206	Argument	self -> stem_snap_vote0		1060993	0					
ANR	1061207	PtrMemberAccess	self -> stem_snap_vote0		1060993	0					
ANR	1061208	Identifier	self		1060993	0					
ANR	1061209	Identifier	stem_snap_vote0		1060993	1					
ANR	1061210	ExpressionStatement	self -> pole = self -> pole0	377:4:13898:13922	1060993	21	True				
ANR	1061211	AssignmentExpression	self -> pole = self -> pole0		1060993	0		=			
ANR	1061212	PtrMemberAccess	self -> pole		1060993	0					
ANR	1061213	Identifier	self		1060993	0					
ANR	1061214	Identifier	pole		1060993	1					
ANR	1061215	PtrMemberAccess	self -> pole0		1060993	1					
ANR	1061216	Identifier	self		1060993	0					
ANR	1061217	Identifier	pole0		1060993	1					
ANR	1061218	ExpressionStatement	self -> hint = self -> hint0	378:4:13928:13952	1060993	22	True				
ANR	1061219	AssignmentExpression	self -> hint = self -> hint0		1060993	0		=			
ANR	1061220	PtrMemberAccess	self -> hint		1060993	0					
ANR	1061221	Identifier	self		1060993	0					
ANR	1061222	Identifier	hint		1060993	1					
ANR	1061223	PtrMemberAccess	self -> hint0		1060993	1					
ANR	1061224	Identifier	self		1060993	0					
ANR	1061225	Identifier	hint0		1060993	1					
ANR	1061226	ExpressionStatement	self -> zone = self -> zone0	379:4:13958:13982	1060993	23	True				
ANR	1061227	AssignmentExpression	self -> zone = self -> zone0		1060993	0		=			
ANR	1061228	PtrMemberAccess	self -> zone		1060993	0					
ANR	1061229	Identifier	self		1060993	0					
ANR	1061230	Identifier	zone		1060993	1					
ANR	1061231	PtrMemberAccess	self -> zone0		1060993	1					
ANR	1061232	Identifier	self		1060993	0					
ANR	1061233	Identifier	zone0		1060993	1					
ANR	1061234	ExpressionStatement	self -> contour = self -> contour0	380:4:13988:14018	1060993	24	True				
ANR	1061235	AssignmentExpression	self -> contour = self -> contour0		1060993	0		=			
ANR	1061236	PtrMemberAccess	self -> contour		1060993	0					
ANR	1061237	Identifier	self		1060993	0					
ANR	1061238	Identifier	contour		1060993	1					
ANR	1061239	PtrMemberAccess	self -> contour0		1060993	1					
ANR	1061240	Identifier	self		1060993	0					
ANR	1061241	Identifier	contour0		1060993	1					
ANR	1061242	ExpressionStatement	self -> subglyph = self -> subglyph0	381:4:14024:14056	1060993	25	True				
ANR	1061243	AssignmentExpression	self -> subglyph = self -> subglyph0		1060993	0		=			
ANR	1061244	PtrMemberAccess	self -> subglyph		1060993	0					
ANR	1061245	Identifier	self		1060993	0					
ANR	1061246	Identifier	subglyph		1060993	1					
ANR	1061247	PtrMemberAccess	self -> subglyph0		1060993	1					
ANR	1061248	Identifier	self		1060993	0					
ANR	1061249	Identifier	subglyph0		1060993	1					
ANR	1061250	ExpressionStatement	self -> hint_range = self -> hint_range0	382:4:14062:14098	1060993	26	True				
ANR	1061251	AssignmentExpression	self -> hint_range = self -> hint_range0		1060993	0		=			
ANR	1061252	PtrMemberAccess	self -> hint_range		1060993	0					
ANR	1061253	Identifier	self		1060993	0					
ANR	1061254	Identifier	hint_range		1060993	1					
ANR	1061255	PtrMemberAccess	self -> hint_range0		1060993	1					
ANR	1061256	Identifier	self		1060993	0					
ANR	1061257	Identifier	hint_range0		1060993	1					
ANR	1061258	ExpressionStatement	self -> hint_applying = self -> hint_applying0	383:4:14104:14146	1060993	27	True				
ANR	1061259	AssignmentExpression	self -> hint_applying = self -> hint_applying0		1060993	0		=			
ANR	1061260	PtrMemberAccess	self -> hint_applying		1060993	0					
ANR	1061261	Identifier	self		1060993	0					
ANR	1061262	Identifier	hint_applying		1060993	1					
ANR	1061263	PtrMemberAccess	self -> hint_applying0		1060993	1					
ANR	1061264	Identifier	self		1060993	0					
ANR	1061265	Identifier	hint_applying0		1060993	1					
ANR	1061266	ExpressionStatement	self -> stem_snap [ 0 ] = self -> stem_snap0 [ 0 ]	384:4:14152:14192	1060993	28	True				
ANR	1061267	AssignmentExpression	self -> stem_snap [ 0 ] = self -> stem_snap0 [ 0 ]		1060993	0		=			
ANR	1061268	ArrayIndexing	self -> stem_snap [ 0 ]		1060993	0					
ANR	1061269	PtrMemberAccess	self -> stem_snap		1060993	0					
ANR	1061270	Identifier	self		1060993	0					
ANR	1061271	Identifier	stem_snap		1060993	1					
ANR	1061272	PrimaryExpression	0		1060993	1					
ANR	1061273	ArrayIndexing	self -> stem_snap0 [ 0 ]		1060993	1					
ANR	1061274	PtrMemberAccess	self -> stem_snap0		1060993	0					
ANR	1061275	Identifier	self		1060993	0					
ANR	1061276	Identifier	stem_snap0		1060993	1					
ANR	1061277	PrimaryExpression	0		1060993	1					
ANR	1061278	ExpressionStatement	self -> stem_snap [ 1 ] = self -> stem_snap0 [ 1 ]	385:4:14198:14238	1060993	29	True				
ANR	1061279	AssignmentExpression	self -> stem_snap [ 1 ] = self -> stem_snap0 [ 1 ]		1060993	0		=			
ANR	1061280	ArrayIndexing	self -> stem_snap [ 1 ]		1060993	0					
ANR	1061281	PtrMemberAccess	self -> stem_snap		1060993	0					
ANR	1061282	Identifier	self		1060993	0					
ANR	1061283	Identifier	stem_snap		1060993	1					
ANR	1061284	PrimaryExpression	1		1060993	1					
ANR	1061285	ArrayIndexing	self -> stem_snap0 [ 1 ]		1060993	1					
ANR	1061286	PtrMemberAccess	self -> stem_snap0		1060993	0					
ANR	1061287	Identifier	self		1060993	0					
ANR	1061288	Identifier	stem_snap0		1060993	1					
ANR	1061289	PrimaryExpression	1		1060993	1					
ANR	1061290	ExpressionStatement	self -> stem_snap_vote = self -> stem_snap_vote0	386:4:14244:14288	1060993	30	True				
ANR	1061291	AssignmentExpression	self -> stem_snap_vote = self -> stem_snap_vote0		1060993	0		=			
ANR	1061292	PtrMemberAccess	self -> stem_snap_vote		1060993	0					
ANR	1061293	Identifier	self		1060993	0					
ANR	1061294	Identifier	stem_snap_vote		1060993	1					
ANR	1061295	PtrMemberAccess	self -> stem_snap_vote0		1060993	1					
ANR	1061296	Identifier	self		1060993	0					
ANR	1061297	Identifier	stem_snap_vote0		1060993	1					
ANR	1061298	ExpressionStatement	self -> FontType = 1	388:4:14295:14313	1060993	31	True				
ANR	1061299	AssignmentExpression	self -> FontType = 1		1060993	0		=			
ANR	1061300	PtrMemberAccess	self -> FontType		1060993	0					
ANR	1061301	Identifier	self		1060993	0					
ANR	1061302	Identifier	FontType		1060993	1					
ANR	1061303	PrimaryExpression	1		1060993	1					
ANR	1061304	ExpressionStatement	self -> ForceBold = false	389:4:14319:14342	1060993	32	True				
ANR	1061305	AssignmentExpression	self -> ForceBold = false		1060993	0		=			
ANR	1061306	PtrMemberAccess	self -> ForceBold		1060993	0					
ANR	1061307	Identifier	self		1060993	0					
ANR	1061308	Identifier	ForceBold		1060993	1					
ANR	1061309	Identifier	false		1060993	1					
ANR	1061310	ExpressionStatement	self -> base_font_scale = 0	390:4:14348:14373	1060993	33	True				
ANR	1061311	AssignmentExpression	self -> base_font_scale = 0		1060993	0		=			
ANR	1061312	PtrMemberAccess	self -> base_font_scale		1060993	0					
ANR	1061313	Identifier	self		1060993	0					
ANR	1061314	Identifier	base_font_scale		1060993	1					
ANR	1061315	PrimaryExpression	0		1060993	1					
ANR	1061316	ExpressionStatement	self -> resolution = 0	391:4:14379:14399	1060993	34	True				
ANR	1061317	AssignmentExpression	self -> resolution = 0		1060993	0		=			
ANR	1061318	PtrMemberAccess	self -> resolution		1060993	0					
ANR	1061319	Identifier	self		1060993	0					
ANR	1061320	Identifier	resolution		1060993	1					
ANR	1061321	PrimaryExpression	0		1060993	1					
ANR	1061322	ExpressionStatement	self -> heigt_transform_coef = self -> width_transform_coef = 0	392:4:14405:14464	1060993	35	True				
ANR	1061323	AssignmentExpression	self -> heigt_transform_coef = self -> width_transform_coef = 0		1060993	0		=			
ANR	1061324	PtrMemberAccess	self -> heigt_transform_coef		1060993	0					
ANR	1061325	Identifier	self		1060993	0					
ANR	1061326	Identifier	heigt_transform_coef		1060993	1					
ANR	1061327	AssignmentExpression	self -> width_transform_coef = 0		1060993	1		=			
ANR	1061328	PtrMemberAccess	self -> width_transform_coef		1060993	0					
ANR	1061329	Identifier	self		1060993	0					
ANR	1061330	Identifier	width_transform_coef		1060993	1					
ANR	1061331	PrimaryExpression	0		1060993	1					
ANR	1061332	ExpressionStatement	self -> heigt_transform_coef_rat = self -> width_transform_coef_rat = 0	393:4:14470:14537	1060993	36	True				
ANR	1061333	AssignmentExpression	self -> heigt_transform_coef_rat = self -> width_transform_coef_rat = 0		1060993	0		=			
ANR	1061334	PtrMemberAccess	self -> heigt_transform_coef_rat		1060993	0					
ANR	1061335	Identifier	self		1060993	0					
ANR	1061336	Identifier	heigt_transform_coef_rat		1060993	1					
ANR	1061337	AssignmentExpression	self -> width_transform_coef_rat = 0		1060993	1		=			
ANR	1061338	PtrMemberAccess	self -> width_transform_coef_rat		1060993	0					
ANR	1061339	Identifier	self		1060993	0					
ANR	1061340	Identifier	width_transform_coef_rat		1060993	1					
ANR	1061341	PrimaryExpression	0		1060993	1					
ANR	1061342	ExpressionStatement	self -> heigt_transform_coef_inv = self -> width_transform_coef_inv = 0	394:4:14543:14610	1060993	37	True				
ANR	1061343	AssignmentExpression	self -> heigt_transform_coef_inv = self -> width_transform_coef_inv = 0		1060993	0		=			
ANR	1061344	PtrMemberAccess	self -> heigt_transform_coef_inv		1060993	0					
ANR	1061345	Identifier	self		1060993	0					
ANR	1061346	Identifier	heigt_transform_coef_inv		1060993	1					
ANR	1061347	AssignmentExpression	self -> width_transform_coef_inv = 0		1060993	1		=			
ANR	1061348	PtrMemberAccess	self -> width_transform_coef_inv		1060993	0					
ANR	1061349	Identifier	self		1060993	0					
ANR	1061350	Identifier	width_transform_coef_inv		1060993	1					
ANR	1061351	PrimaryExpression	0		1060993	1					
ANR	1061352	ExpressionStatement	self -> cx = self -> cy = 0	395:4:14616:14639	1060993	38	True				
ANR	1061353	AssignmentExpression	self -> cx = self -> cy = 0		1060993	0		=			
ANR	1061354	PtrMemberAccess	self -> cx		1060993	0					
ANR	1061355	Identifier	self		1060993	0					
ANR	1061356	Identifier	cx		1060993	1					
ANR	1061357	AssignmentExpression	self -> cy = 0		1060993	1		=			
ANR	1061358	PtrMemberAccess	self -> cy		1060993	0					
ANR	1061359	Identifier	self		1060993	0					
ANR	1061360	Identifier	cy		1060993	1					
ANR	1061361	PrimaryExpression	0		1060993	1					
ANR	1061362	ExpressionStatement	self -> contour [ 0 ] = 0	396:4:14645:14665	1060993	39	True				
ANR	1061363	AssignmentExpression	self -> contour [ 0 ] = 0		1060993	0		=			
ANR	1061364	ArrayIndexing	self -> contour [ 0 ]		1060993	0					
ANR	1061365	PtrMemberAccess	self -> contour		1060993	0					
ANR	1061366	Identifier	self		1060993	0					
ANR	1061367	Identifier	contour		1060993	1					
ANR	1061368	PrimaryExpression	0		1060993	1					
ANR	1061369	PrimaryExpression	0		1060993	1					
ANR	1061370	ExpressionStatement	self -> subglyph [ 0 ] = 0	397:4:14671:14692	1060993	40	True				
ANR	1061371	AssignmentExpression	self -> subglyph [ 0 ] = 0		1060993	0		=			
ANR	1061372	ArrayIndexing	self -> subglyph [ 0 ]		1060993	0					
ANR	1061373	PtrMemberAccess	self -> subglyph		1060993	0					
ANR	1061374	Identifier	self		1060993	0					
ANR	1061375	Identifier	subglyph		1060993	1					
ANR	1061376	PrimaryExpression	0		1060993	1					
ANR	1061377	PrimaryExpression	0		1060993	1					
ANR	1061378	ExpressionStatement	self -> keep_stem_width = false	398:4:14698:14727	1060993	41	True				
ANR	1061379	AssignmentExpression	self -> keep_stem_width = false		1060993	0		=			
ANR	1061380	PtrMemberAccess	self -> keep_stem_width		1060993	0					
ANR	1061381	Identifier	self		1060993	0					
ANR	1061382	Identifier	keep_stem_width		1060993	1					
ANR	1061383	Identifier	false		1060993	1					
ANR	1061384	ExpressionStatement	self -> charpath_flag = false	399:4:14733:14760	1060993	42	True				
ANR	1061385	AssignmentExpression	self -> charpath_flag = false		1060993	0		=			
ANR	1061386	PtrMemberAccess	self -> charpath_flag		1060993	0					
ANR	1061387	Identifier	self		1060993	0					
ANR	1061388	Identifier	charpath_flag		1060993	1					
ANR	1061389	Identifier	false		1060993	1					
ANR	1061390	ExpressionStatement	self -> grid_fit_x = self -> grid_fit_y = true	400:4:14766:14808	1060993	43	True				
ANR	1061391	AssignmentExpression	self -> grid_fit_x = self -> grid_fit_y = true		1060993	0		=			
ANR	1061392	PtrMemberAccess	self -> grid_fit_x		1060993	0					
ANR	1061393	Identifier	self		1060993	0					
ANR	1061394	Identifier	grid_fit_x		1060993	1					
ANR	1061395	AssignmentExpression	self -> grid_fit_y = true		1060993	1		=			
ANR	1061396	PtrMemberAccess	self -> grid_fit_y		1060993	0					
ANR	1061397	Identifier	self		1060993	0					
ANR	1061398	Identifier	grid_fit_y		1060993	1					
ANR	1061399	Identifier	true		1060993	1					
ANR	1061400	ExpressionStatement	self -> output_path = output_path	401:4:14814:14845	1060993	44	True				
ANR	1061401	AssignmentExpression	self -> output_path = output_path		1060993	0		=			
ANR	1061402	PtrMemberAccess	self -> output_path		1060993	0					
ANR	1061403	Identifier	self		1060993	0					
ANR	1061404	Identifier	output_path		1060993	1					
ANR	1061405	Identifier	output_path		1060993	1					
ANR	1061406	ExpressionStatement	self -> memory = ( output_path == 0 ? 0 : output_path -> memory )	402:4:14851:14910	1060993	45	True				
ANR	1061407	AssignmentExpression	self -> memory = ( output_path == 0 ? 0 : output_path -> memory )		1060993	0		=			
ANR	1061408	PtrMemberAccess	self -> memory		1060993	0					
ANR	1061409	Identifier	self		1060993	0					
ANR	1061410	Identifier	memory		1060993	1					
ANR	1061411	ConditionalExpression	output_path == 0 ? 0 : output_path -> memory		1060993	1					
ANR	1061412	Condition	output_path == 0		1060993	0					
ANR	1061413	EqualityExpression	output_path == 0		1060993	0		==			
ANR	1061414	Identifier	output_path		1060993	0					
ANR	1061415	PrimaryExpression	0		1060993	1					
ANR	1061416	PrimaryExpression	0		1060993	1					
ANR	1061417	PtrMemberAccess	output_path -> memory		1060993	2					
ANR	1061418	Identifier	output_path		1060993	0					
ANR	1061419	Identifier	memory		1060993	1					
ANR	1061420	ExpressionStatement	self -> disable_hinting = ( self -> memory == NULL )	403:4:14916:14962	1060993	46	True				
ANR	1061421	AssignmentExpression	self -> disable_hinting = ( self -> memory == NULL )		1060993	0		=			
ANR	1061422	PtrMemberAccess	self -> disable_hinting		1060993	0					
ANR	1061423	Identifier	self		1060993	0					
ANR	1061424	Identifier	disable_hinting		1060993	1					
ANR	1061425	EqualityExpression	self -> memory == NULL		1060993	1		==			
ANR	1061426	PtrMemberAccess	self -> memory		1060993	0					
ANR	1061427	Identifier	self		1060993	0					
ANR	1061428	Identifier	memory		1060993	1					
ANR	1061429	Identifier	NULL		1060993	1					
ANR	1061430	ExpressionStatement	self -> pass_through = self -> disable_hinting	404:4:14968:15010	1060993	47	True				
ANR	1061431	AssignmentExpression	self -> pass_through = self -> disable_hinting		1060993	0		=			
ANR	1061432	PtrMemberAccess	self -> pass_through		1060993	0					
ANR	1061433	Identifier	self		1060993	0					
ANR	1061434	Identifier	pass_through		1060993	1					
ANR	1061435	PtrMemberAccess	self -> disable_hinting		1060993	1					
ANR	1061436	Identifier	self		1060993	0					
ANR	1061437	Identifier	disable_hinting		1060993	1					
ANR	1061438	ExpressionStatement	self -> autohinting = false	405:4:15016:15041	1060993	48	True				
ANR	1061439	AssignmentExpression	self -> autohinting = false		1060993	0		=			
ANR	1061440	PtrMemberAccess	self -> autohinting		1060993	0					
ANR	1061441	Identifier	self		1060993	0					
ANR	1061442	Identifier	autohinting		1060993	1					
ANR	1061443	Identifier	false		1060993	1					
ANR	1061444	ExpressionStatement	self -> fix_contour_sign = false	406:4:15047:15077	1060993	49	True				
ANR	1061445	AssignmentExpression	self -> fix_contour_sign = false		1060993	0		=			
ANR	1061446	PtrMemberAccess	self -> fix_contour_sign		1060993	0					
ANR	1061447	Identifier	self		1060993	0					
ANR	1061448	Identifier	fix_contour_sign		1060993	1					
ANR	1061449	Identifier	false		1060993	1					
ANR	1061450	ExpressionStatement	self -> path_opened = false	407:4:15083:15108	1060993	50	True				
ANR	1061451	AssignmentExpression	self -> path_opened = false		1060993	0		=			
ANR	1061452	PtrMemberAccess	self -> path_opened		1060993	0					
ANR	1061453	Identifier	self		1060993	0					
ANR	1061454	Identifier	path_opened		1060993	1					
ANR	1061455	Identifier	false		1060993	1					
ANR	1061456	ExpressionStatement	self -> orig_dx = 0	408:4:15114:15131	1060993	51	True				
ANR	1061457	AssignmentExpression	self -> orig_dx = 0		1060993	0		=			
ANR	1061458	PtrMemberAccess	self -> orig_dx		1060993	0					
ANR	1061459	Identifier	self		1060993	0					
ANR	1061460	Identifier	orig_dx		1060993	1					
ANR	1061461	PrimaryExpression	0		1060993	1					
ANR	1061462	ExpressionStatement	self -> orig_dy = 0	409:4:15137:15154	1060993	52	True				
ANR	1061463	AssignmentExpression	self -> orig_dy = 0		1060993	0		=			
ANR	1061464	PtrMemberAccess	self -> orig_dy		1060993	0					
ANR	1061465	Identifier	self		1060993	0					
ANR	1061466	Identifier	orig_dy		1060993	1					
ANR	1061467	PrimaryExpression	0		1060993	1					
ANR	1061468	ExpressionStatement	self -> g2o_fraction_bits = 0	410:4:15160:15187	1060993	53	True				
ANR	1061469	AssignmentExpression	self -> g2o_fraction_bits = 0		1060993	0		=			
ANR	1061470	PtrMemberAccess	self -> g2o_fraction_bits		1060993	0					
ANR	1061471	Identifier	self		1060993	0					
ANR	1061472	Identifier	g2o_fraction_bits		1060993	1					
ANR	1061473	PrimaryExpression	0		1060993	1					
ANR	1061474	ExpressionStatement	self -> stem_snap [ 0 ] [ 0 ] = self -> stem_snap [ 1 ] [ 0 ] = 100	412:4:15194:15245	1060993	54	True				
ANR	1061475	AssignmentExpression	self -> stem_snap [ 0 ] [ 0 ] = self -> stem_snap [ 1 ] [ 0 ] = 100		1060993	0		=			
ANR	1061476	ArrayIndexing	self -> stem_snap [ 0 ] [ 0 ]		1060993	0					
ANR	1061477	ArrayIndexing	self -> stem_snap [ 0 ]		1060993	0					
ANR	1061478	PtrMemberAccess	self -> stem_snap		1060993	0					
ANR	1061479	Identifier	self		1060993	0					
ANR	1061480	Identifier	stem_snap		1060993	1					
ANR	1061481	PrimaryExpression	0		1060993	1					
ANR	1061482	PrimaryExpression	0		1060993	1					
ANR	1061483	AssignmentExpression	self -> stem_snap [ 1 ] [ 0 ] = 100		1060993	1		=			
ANR	1061484	ArrayIndexing	self -> stem_snap [ 1 ] [ 0 ]		1060993	0					
ANR	1061485	ArrayIndexing	self -> stem_snap [ 1 ]		1060993	0					
ANR	1061486	PtrMemberAccess	self -> stem_snap		1060993	0					
ANR	1061487	Identifier	self		1060993	0					
ANR	1061488	Identifier	stem_snap		1060993	1					
ANR	1061489	PrimaryExpression	1		1060993	1					
ANR	1061490	PrimaryExpression	0		1060993	1					
ANR	1061491	PrimaryExpression	100		1060993	1					
ANR	1061492	ExpressionStatement	"memset ( & self -> ctmf , 0x00 , sizeof ( self -> ctmf ) )"	414:4:15266:15311	1060993	55	True				
ANR	1061493	CallExpression	"memset ( & self -> ctmf , 0x00 , sizeof ( self -> ctmf ) )"		1060993	0					
ANR	1061494	Callee	memset		1060993	0					
ANR	1061495	Identifier	memset		1060993	0					
ANR	1061496	ArgumentList	& self -> ctmf		1060993	1					
ANR	1061497	Argument	& self -> ctmf		1060993	0					
ANR	1061498	UnaryOperationExpression	& self -> ctmf		1060993	0					
ANR	1061499	UnaryOperator	&		1060993	0					
ANR	1061500	PtrMemberAccess	self -> ctmf		1060993	1					
ANR	1061501	Identifier	self		1060993	0					
ANR	1061502	Identifier	ctmf		1060993	1					
ANR	1061503	Argument	0x00		1060993	1					
ANR	1061504	PrimaryExpression	0x00		1060993	0					
ANR	1061505	Argument	sizeof ( self -> ctmf )		1060993	2					
ANR	1061506	SizeofExpression	sizeof ( self -> ctmf )		1060993	0					
ANR	1061507	Sizeof	sizeof		1060993	0					
ANR	1061508	PtrMemberAccess	self -> ctmf		1060993	1					
ANR	1061509	Identifier	self		1060993	0					
ANR	1061510	Identifier	ctmf		1060993	1					
ANR	1061511	ExpressionStatement	"memset ( & self -> ctmi , 0x00 , sizeof ( self -> ctmi ) )"	415:4:15317:15362	1060993	56	True				
ANR	1061512	CallExpression	"memset ( & self -> ctmi , 0x00 , sizeof ( self -> ctmi ) )"		1060993	0					
ANR	1061513	Callee	memset		1060993	0					
ANR	1061514	Identifier	memset		1060993	0					
ANR	1061515	ArgumentList	& self -> ctmi		1060993	1					
ANR	1061516	Argument	& self -> ctmi		1060993	0					
ANR	1061517	UnaryOperationExpression	& self -> ctmi		1060993	0					
ANR	1061518	UnaryOperator	&		1060993	0					
ANR	1061519	PtrMemberAccess	self -> ctmi		1060993	1					
ANR	1061520	Identifier	self		1060993	0					
ANR	1061521	Identifier	ctmi		1060993	1					
ANR	1061522	Argument	0x00		1060993	1					
ANR	1061523	PrimaryExpression	0x00		1060993	0					
ANR	1061524	Argument	sizeof ( self -> ctmi )		1060993	2					
ANR	1061525	SizeofExpression	sizeof ( self -> ctmi )		1060993	0					
ANR	1061526	Sizeof	sizeof		1060993	0					
ANR	1061527	PtrMemberAccess	self -> ctmi		1060993	1					
ANR	1061528	Identifier	self		1060993	0					
ANR	1061529	Identifier	ctmi		1060993	1					
ANR	1061530	ReturnType	void		1060993	1					
ANR	1061531	Identifier	t1_hinter__init		1060993	2					
ANR	1061532	ParameterList	"t1_hinter * self , gx_path * output_path"		1060993	3					
ANR	1061533	Parameter	t1_hinter * self	352:21:12881:12896	1060993	0	True				
ANR	1061534	ParameterType	t1_hinter *		1060993	0					
ANR	1061535	Identifier	self		1060993	1					
ANR	1061536	Parameter	gx_path * output_path	352:39:12899:12918	1060993	1	True				
ANR	1061537	ParameterType	gx_path *		1060993	0					
ANR	1061538	Identifier	output_path		1060993	1					
ANR	1061539	CFGEntryNode	ENTRY		1060993		True				
ANR	1061540	CFGExitNode	EXIT		1060993		True				
ANR	1061541	Symbol	self -> max_contour_count		1060993						
ANR	1061542	Symbol	self -> contour0		1060993						
ANR	1061543	Symbol	self -> pole_count		1060993						
ANR	1061544	Symbol	self -> hint_range0		1060993						
ANR	1061545	Symbol	self -> max_hint_applying_count		1060993						
ANR	1061546	Symbol	self -> max_import_coord		1060993						
ANR	1061547	Symbol	* self -> stem_snap_count		1060993						
ANR	1061548	Symbol	self -> width_transform_coef_inv		1060993						
ANR	1061549	Symbol	self -> stem_snap_vote0		1060993						
ANR	1061550	Symbol	self -> grid_fit_x		1060993						
ANR	1061551	Symbol	self -> grid_fit_y		1060993						
ANR	1061552	Symbol	self -> pole0		1060993						
ANR	1061553	Symbol	self -> orig_dy		1060993						
ANR	1061554	Symbol	self -> max_subglyph_count		1060993						
ANR	1061555	Symbol	* * * self		1060993						
ANR	1061556	Symbol	self -> cx		1060993						
ANR	1061557	Symbol	self -> cy		1060993						
ANR	1061558	Symbol	* self -> stem_snap		1060993						
ANR	1061559	Symbol	self -> output_path		1060993						
ANR	1061560	Symbol	self -> orig_dx		1060993						
ANR	1061561	Symbol	* self -> subglyph		1060993						
ANR	1061562	Symbol	self -> max_stem_snap_vote_count		1060993						
ANR	1061563	Symbol	self -> stem_snap_count		1060993						
ANR	1061564	Symbol	* output_path		1060993						
ANR	1061565	Symbol	NULL		1060993						
ANR	1061566	Symbol	self -> resolution		1060993						
ANR	1061567	Symbol	* self		1060993						
ANR	1061568	Symbol	self -> stem_snap		1060993						
ANR	1061569	Symbol	self -> ctmf		1060993						
ANR	1061570	Symbol	self -> pass_through		1060993						
ANR	1061571	Symbol	self -> ctmi		1060993						
ANR	1061572	Symbol	self -> charpath_flag		1060993						
ANR	1061573	Symbol	self -> contour		1060993						
ANR	1061574	Symbol	self -> subglyph		1060993						
ANR	1061575	Symbol	self -> width_transform_coef_rat		1060993						
ANR	1061576	Symbol	& self -> ctmi		1060993						
ANR	1061577	Symbol	self -> stem_snap_vote_count		1060993						
ANR	1061578	Symbol	self -> base_font_scale		1060993						
ANR	1061579	Symbol	self -> zone0		1060993						
ANR	1061580	Symbol	self -> hint0		1060993						
ANR	1061581	Symbol	self -> max_stem_snap_count		1060993						
ANR	1061582	Symbol	self -> stem_snap_vote		1060993						
ANR	1061583	Symbol	self -> max_hint_range_count		1060993						
ANR	1061584	Symbol	true		1060993						
ANR	1061585	Symbol	self -> hint_applying		1060993						
ANR	1061586	Symbol	self -> keep_stem_width		1060993						
ANR	1061587	Symbol	self -> heigt_transform_coef_rat		1060993						
ANR	1061588	Symbol	* * self -> stem_snap		1060993						
ANR	1061589	Symbol	self -> autohinting		1060993						
ANR	1061590	Symbol	self -> FontType		1060993						
ANR	1061591	Symbol	output_path -> memory		1060993						
ANR	1061592	Symbol	self -> subglyph0		1060993						
ANR	1061593	Symbol	self -> stem_snap0		1060993						
ANR	1061594	Symbol	self -> zone		1060993						
ANR	1061595	Symbol	max_coord_bits		1060993						
ANR	1061596	Symbol	self -> flex_count		1060993						
ANR	1061597	Symbol	self -> disable_hinting		1060993						
ANR	1061598	Symbol	* self -> max_stem_snap_count		1060993						
ANR	1061599	Symbol	& self -> ctmf		1060993						
ANR	1061600	Symbol	self -> zone_count		1060993						
ANR	1061601	Symbol	self -> memory		1060993						
ANR	1061602	Symbol	count_of		1060993						
ANR	1061603	Symbol	self -> pole		1060993						
ANR	1061604	Symbol	* self -> stem_snap0		1060993						
ANR	1061605	Symbol	self -> max_zone_count		1060993						
ANR	1061606	Symbol	* self -> contour		1060993						
ANR	1061607	Symbol	self -> ForceBold		1060993						
ANR	1061608	Symbol	self -> contour_count		1060993						
ANR	1061609	Symbol	self -> hint		1060993						
ANR	1061610	Symbol	self -> path_opened		1060993						
ANR	1061611	Symbol	* * self		1060993						
ANR	1061612	Symbol	self -> heigt_transform_coef		1060993						
ANR	1061613	Symbol	self -> g2o_fraction_bits		1060993						
ANR	1061614	Symbol	false		1060993						
ANR	1061615	Symbol	self -> max_hint_count		1060993						
ANR	1061616	Symbol	self -> width_transform_coef		1060993						
ANR	1061617	Symbol	self -> heigt_transform_coef_inv		1060993						
ANR	1061618	Symbol	self -> have_flex		1060993						
ANR	1061619	Symbol	self -> subglyph_count		1060993						
ANR	1061620	Symbol	self -> hint_range_count		1060993						
ANR	1061621	Symbol	self -> hint_range		1060993						
ANR	1061622	Symbol	self -> hint_applying0		1060993						
ANR	1061623	Symbol	self -> hint_count		1060993						
ANR	1061624	Symbol	self -> max_pole_count		1060993						
ANR	1061625	Symbol	self -> fix_contour_sign		1060993						
ANR	1061626	Symbol	self		1060993						
ANR	1061627	Symbol	output_path		1060993						
ANR	1061628	Function	t1_hinter__free_arrays	418:0:15367:16820							
ANR	1061629	FunctionDef	t1_hinter__free_arrays (t1_hinter * self)		1061628	0					
ANR	1061630	CompoundStatement		419:0:15427:16820	1061628	0					
ANR	1061631	IfStatement	if ( self -> pole != self -> pole0 )		1061628	0					
ANR	1061632	Condition	self -> pole != self -> pole0	419:7:15435:15459	1061628	0	True				
ANR	1061633	EqualityExpression	self -> pole != self -> pole0		1061628	0		!=			
ANR	1061634	PtrMemberAccess	self -> pole		1061628	0					
ANR	1061635	Identifier	self		1061628	0					
ANR	1061636	Identifier	pole		1061628	1					
ANR	1061637	PtrMemberAccess	self -> pole0		1061628	1					
ANR	1061638	Identifier	self		1061628	0					
ANR	1061639	Identifier	pole0		1061628	1					
ANR	1061640	ExpressionStatement	"gs_free_object ( self -> memory , self -> pole , s_pole_array )"	420:8:15470:15524	1061628	1	True				
ANR	1061641	CallExpression	"gs_free_object ( self -> memory , self -> pole , s_pole_array )"		1061628	0					
ANR	1061642	Callee	gs_free_object		1061628	0					
ANR	1061643	Identifier	gs_free_object		1061628	0					
ANR	1061644	ArgumentList	self -> memory		1061628	1					
ANR	1061645	Argument	self -> memory		1061628	0					
ANR	1061646	PtrMemberAccess	self -> memory		1061628	0					
ANR	1061647	Identifier	self		1061628	0					
ANR	1061648	Identifier	memory		1061628	1					
ANR	1061649	Argument	self -> pole		1061628	1					
ANR	1061650	PtrMemberAccess	self -> pole		1061628	0					
ANR	1061651	Identifier	self		1061628	0					
ANR	1061652	Identifier	pole		1061628	1					
ANR	1061653	Argument	s_pole_array		1061628	2					
ANR	1061654	Identifier	s_pole_array		1061628	0					
ANR	1061655	IfStatement	if ( self -> hint != self -> hint0 )		1061628	1					
ANR	1061656	Condition	self -> hint != self -> hint0	421:8:15534:15558	1061628	0	True				
ANR	1061657	EqualityExpression	self -> hint != self -> hint0		1061628	0		!=			
ANR	1061658	PtrMemberAccess	self -> hint		1061628	0					
ANR	1061659	Identifier	self		1061628	0					
ANR	1061660	Identifier	hint		1061628	1					
ANR	1061661	PtrMemberAccess	self -> hint0		1061628	1					
ANR	1061662	Identifier	self		1061628	0					
ANR	1061663	Identifier	hint0		1061628	1					
ANR	1061664	ExpressionStatement	"gs_free_object ( self -> memory , self -> hint , s_hint_array )"	422:8:15569:15623	1061628	1	True				
ANR	1061665	CallExpression	"gs_free_object ( self -> memory , self -> hint , s_hint_array )"		1061628	0					
ANR	1061666	Callee	gs_free_object		1061628	0					
ANR	1061667	Identifier	gs_free_object		1061628	0					
ANR	1061668	ArgumentList	self -> memory		1061628	1					
ANR	1061669	Argument	self -> memory		1061628	0					
ANR	1061670	PtrMemberAccess	self -> memory		1061628	0					
ANR	1061671	Identifier	self		1061628	0					
ANR	1061672	Identifier	memory		1061628	1					
ANR	1061673	Argument	self -> hint		1061628	1					
ANR	1061674	PtrMemberAccess	self -> hint		1061628	0					
ANR	1061675	Identifier	self		1061628	0					
ANR	1061676	Identifier	hint		1061628	1					
ANR	1061677	Argument	s_hint_array		1061628	2					
ANR	1061678	Identifier	s_hint_array		1061628	0					
ANR	1061679	IfStatement	if ( self -> zone != self -> zone0 )		1061628	2					
ANR	1061680	Condition	self -> zone != self -> zone0	423:8:15633:15657	1061628	0	True				
ANR	1061681	EqualityExpression	self -> zone != self -> zone0		1061628	0		!=			
ANR	1061682	PtrMemberAccess	self -> zone		1061628	0					
ANR	1061683	Identifier	self		1061628	0					
ANR	1061684	Identifier	zone		1061628	1					
ANR	1061685	PtrMemberAccess	self -> zone0		1061628	1					
ANR	1061686	Identifier	self		1061628	0					
ANR	1061687	Identifier	zone0		1061628	1					
ANR	1061688	ExpressionStatement	"gs_free_object ( self -> memory , self -> zone , s_zone_array )"	424:8:15668:15722	1061628	1	True				
ANR	1061689	CallExpression	"gs_free_object ( self -> memory , self -> zone , s_zone_array )"		1061628	0					
ANR	1061690	Callee	gs_free_object		1061628	0					
ANR	1061691	Identifier	gs_free_object		1061628	0					
ANR	1061692	ArgumentList	self -> memory		1061628	1					
ANR	1061693	Argument	self -> memory		1061628	0					
ANR	1061694	PtrMemberAccess	self -> memory		1061628	0					
ANR	1061695	Identifier	self		1061628	0					
ANR	1061696	Identifier	memory		1061628	1					
ANR	1061697	Argument	self -> zone		1061628	1					
ANR	1061698	PtrMemberAccess	self -> zone		1061628	0					
ANR	1061699	Identifier	self		1061628	0					
ANR	1061700	Identifier	zone		1061628	1					
ANR	1061701	Argument	s_zone_array		1061628	2					
ANR	1061702	Identifier	s_zone_array		1061628	0					
ANR	1061703	IfStatement	if ( self -> contour != self -> contour0 )		1061628	3					
ANR	1061704	Condition	self -> contour != self -> contour0	425:8:15732:15762	1061628	0	True				
ANR	1061705	EqualityExpression	self -> contour != self -> contour0		1061628	0		!=			
ANR	1061706	PtrMemberAccess	self -> contour		1061628	0					
ANR	1061707	Identifier	self		1061628	0					
ANR	1061708	Identifier	contour		1061628	1					
ANR	1061709	PtrMemberAccess	self -> contour0		1061628	1					
ANR	1061710	Identifier	self		1061628	0					
ANR	1061711	Identifier	contour0		1061628	1					
ANR	1061712	ExpressionStatement	"gs_free_object ( self -> memory , self -> contour , s_contour_array )"	426:8:15773:15833	1061628	1	True				
ANR	1061713	CallExpression	"gs_free_object ( self -> memory , self -> contour , s_contour_array )"		1061628	0					
ANR	1061714	Callee	gs_free_object		1061628	0					
ANR	1061715	Identifier	gs_free_object		1061628	0					
ANR	1061716	ArgumentList	self -> memory		1061628	1					
ANR	1061717	Argument	self -> memory		1061628	0					
ANR	1061718	PtrMemberAccess	self -> memory		1061628	0					
ANR	1061719	Identifier	self		1061628	0					
ANR	1061720	Identifier	memory		1061628	1					
ANR	1061721	Argument	self -> contour		1061628	1					
ANR	1061722	PtrMemberAccess	self -> contour		1061628	0					
ANR	1061723	Identifier	self		1061628	0					
ANR	1061724	Identifier	contour		1061628	1					
ANR	1061725	Argument	s_contour_array		1061628	2					
ANR	1061726	Identifier	s_contour_array		1061628	0					
ANR	1061727	IfStatement	if ( self -> subglyph != self -> subglyph0 )		1061628	4					
ANR	1061728	Condition	self -> subglyph != self -> subglyph0	427:8:15843:15875	1061628	0	True				
ANR	1061729	EqualityExpression	self -> subglyph != self -> subglyph0		1061628	0		!=			
ANR	1061730	PtrMemberAccess	self -> subglyph		1061628	0					
ANR	1061731	Identifier	self		1061628	0					
ANR	1061732	Identifier	subglyph		1061628	1					
ANR	1061733	PtrMemberAccess	self -> subglyph0		1061628	1					
ANR	1061734	Identifier	self		1061628	0					
ANR	1061735	Identifier	subglyph0		1061628	1					
ANR	1061736	ExpressionStatement	"gs_free_object ( self -> memory , self -> subglyph , s_subglyph_array )"	428:8:15886:15948	1061628	1	True				
ANR	1061737	CallExpression	"gs_free_object ( self -> memory , self -> subglyph , s_subglyph_array )"		1061628	0					
ANR	1061738	Callee	gs_free_object		1061628	0					
ANR	1061739	Identifier	gs_free_object		1061628	0					
ANR	1061740	ArgumentList	self -> memory		1061628	1					
ANR	1061741	Argument	self -> memory		1061628	0					
ANR	1061742	PtrMemberAccess	self -> memory		1061628	0					
ANR	1061743	Identifier	self		1061628	0					
ANR	1061744	Identifier	memory		1061628	1					
ANR	1061745	Argument	self -> subglyph		1061628	1					
ANR	1061746	PtrMemberAccess	self -> subglyph		1061628	0					
ANR	1061747	Identifier	self		1061628	0					
ANR	1061748	Identifier	subglyph		1061628	1					
ANR	1061749	Argument	s_subglyph_array		1061628	2					
ANR	1061750	Identifier	s_subglyph_array		1061628	0					
ANR	1061751	IfStatement	if ( self -> hint_range != self -> hint_range0 )		1061628	5					
ANR	1061752	Condition	self -> hint_range != self -> hint_range0	429:8:15958:15994	1061628	0	True				
ANR	1061753	EqualityExpression	self -> hint_range != self -> hint_range0		1061628	0		!=			
ANR	1061754	PtrMemberAccess	self -> hint_range		1061628	0					
ANR	1061755	Identifier	self		1061628	0					
ANR	1061756	Identifier	hint_range		1061628	1					
ANR	1061757	PtrMemberAccess	self -> hint_range0		1061628	1					
ANR	1061758	Identifier	self		1061628	0					
ANR	1061759	Identifier	hint_range0		1061628	1					
ANR	1061760	ExpressionStatement	"gs_free_object ( self -> memory , self -> hint_range , s_hint_range_array )"	430:8:16005:16071	1061628	1	True				
ANR	1061761	CallExpression	"gs_free_object ( self -> memory , self -> hint_range , s_hint_range_array )"		1061628	0					
ANR	1061762	Callee	gs_free_object		1061628	0					
ANR	1061763	Identifier	gs_free_object		1061628	0					
ANR	1061764	ArgumentList	self -> memory		1061628	1					
ANR	1061765	Argument	self -> memory		1061628	0					
ANR	1061766	PtrMemberAccess	self -> memory		1061628	0					
ANR	1061767	Identifier	self		1061628	0					
ANR	1061768	Identifier	memory		1061628	1					
ANR	1061769	Argument	self -> hint_range		1061628	1					
ANR	1061770	PtrMemberAccess	self -> hint_range		1061628	0					
ANR	1061771	Identifier	self		1061628	0					
ANR	1061772	Identifier	hint_range		1061628	1					
ANR	1061773	Argument	s_hint_range_array		1061628	2					
ANR	1061774	Identifier	s_hint_range_array		1061628	0					
ANR	1061775	IfStatement	if ( self -> hint_applying != self -> hint_applying0 )		1061628	6					
ANR	1061776	Condition	self -> hint_applying != self -> hint_applying0	431:8:16081:16123	1061628	0	True				
ANR	1061777	EqualityExpression	self -> hint_applying != self -> hint_applying0		1061628	0		!=			
ANR	1061778	PtrMemberAccess	self -> hint_applying		1061628	0					
ANR	1061779	Identifier	self		1061628	0					
ANR	1061780	Identifier	hint_applying		1061628	1					
ANR	1061781	PtrMemberAccess	self -> hint_applying0		1061628	1					
ANR	1061782	Identifier	self		1061628	0					
ANR	1061783	Identifier	hint_applying0		1061628	1					
ANR	1061784	ExpressionStatement	"gs_free_object ( self -> memory , self -> hint_applying , s_hint_applying_array )"	432:8:16134:16206	1061628	1	True				
ANR	1061785	CallExpression	"gs_free_object ( self -> memory , self -> hint_applying , s_hint_applying_array )"		1061628	0					
ANR	1061786	Callee	gs_free_object		1061628	0					
ANR	1061787	Identifier	gs_free_object		1061628	0					
ANR	1061788	ArgumentList	self -> memory		1061628	1					
ANR	1061789	Argument	self -> memory		1061628	0					
ANR	1061790	PtrMemberAccess	self -> memory		1061628	0					
ANR	1061791	Identifier	self		1061628	0					
ANR	1061792	Identifier	memory		1061628	1					
ANR	1061793	Argument	self -> hint_applying		1061628	1					
ANR	1061794	PtrMemberAccess	self -> hint_applying		1061628	0					
ANR	1061795	Identifier	self		1061628	0					
ANR	1061796	Identifier	hint_applying		1061628	1					
ANR	1061797	Argument	s_hint_applying_array		1061628	2					
ANR	1061798	Identifier	s_hint_applying_array		1061628	0					
ANR	1061799	IfStatement	if ( self -> stem_snap [ 0 ] != self -> stem_snap0 [ 0 ] )		1061628	7					
ANR	1061800	Condition	self -> stem_snap [ 0 ] != self -> stem_snap0 [ 0 ]	433:8:16216:16256	1061628	0	True				
ANR	1061801	EqualityExpression	self -> stem_snap [ 0 ] != self -> stem_snap0 [ 0 ]		1061628	0		!=			
ANR	1061802	ArrayIndexing	self -> stem_snap [ 0 ]		1061628	0					
ANR	1061803	PtrMemberAccess	self -> stem_snap		1061628	0					
ANR	1061804	Identifier	self		1061628	0					
ANR	1061805	Identifier	stem_snap		1061628	1					
ANR	1061806	PrimaryExpression	0		1061628	1					
ANR	1061807	ArrayIndexing	self -> stem_snap0 [ 0 ]		1061628	1					
ANR	1061808	PtrMemberAccess	self -> stem_snap0		1061628	0					
ANR	1061809	Identifier	self		1061628	0					
ANR	1061810	Identifier	stem_snap0		1061628	1					
ANR	1061811	PrimaryExpression	0		1061628	1					
ANR	1061812	ExpressionStatement	"gs_free_object ( self -> memory , self -> stem_snap [ 0 ] , s_stem_snap_array )"	434:8:16267:16334	1061628	1	True				
ANR	1061813	CallExpression	"gs_free_object ( self -> memory , self -> stem_snap [ 0 ] , s_stem_snap_array )"		1061628	0					
ANR	1061814	Callee	gs_free_object		1061628	0					
ANR	1061815	Identifier	gs_free_object		1061628	0					
ANR	1061816	ArgumentList	self -> memory		1061628	1					
ANR	1061817	Argument	self -> memory		1061628	0					
ANR	1061818	PtrMemberAccess	self -> memory		1061628	0					
ANR	1061819	Identifier	self		1061628	0					
ANR	1061820	Identifier	memory		1061628	1					
ANR	1061821	Argument	self -> stem_snap [ 0 ]		1061628	1					
ANR	1061822	ArrayIndexing	self -> stem_snap [ 0 ]		1061628	0					
ANR	1061823	PtrMemberAccess	self -> stem_snap		1061628	0					
ANR	1061824	Identifier	self		1061628	0					
ANR	1061825	Identifier	stem_snap		1061628	1					
ANR	1061826	PrimaryExpression	0		1061628	1					
ANR	1061827	Argument	s_stem_snap_array		1061628	2					
ANR	1061828	Identifier	s_stem_snap_array		1061628	0					
ANR	1061829	IfStatement	if ( self -> stem_snap [ 1 ] != self -> stem_snap0 [ 1 ] )		1061628	8					
ANR	1061830	Condition	self -> stem_snap [ 1 ] != self -> stem_snap0 [ 1 ]	435:8:16344:16384	1061628	0	True				
ANR	1061831	EqualityExpression	self -> stem_snap [ 1 ] != self -> stem_snap0 [ 1 ]		1061628	0		!=			
ANR	1061832	ArrayIndexing	self -> stem_snap [ 1 ]		1061628	0					
ANR	1061833	PtrMemberAccess	self -> stem_snap		1061628	0					
ANR	1061834	Identifier	self		1061628	0					
ANR	1061835	Identifier	stem_snap		1061628	1					
ANR	1061836	PrimaryExpression	1		1061628	1					
ANR	1061837	ArrayIndexing	self -> stem_snap0 [ 1 ]		1061628	1					
ANR	1061838	PtrMemberAccess	self -> stem_snap0		1061628	0					
ANR	1061839	Identifier	self		1061628	0					
ANR	1061840	Identifier	stem_snap0		1061628	1					
ANR	1061841	PrimaryExpression	1		1061628	1					
ANR	1061842	ExpressionStatement	"gs_free_object ( self -> memory , self -> stem_snap [ 1 ] , s_stem_snap_array )"	436:8:16395:16462	1061628	1	True				
ANR	1061843	CallExpression	"gs_free_object ( self -> memory , self -> stem_snap [ 1 ] , s_stem_snap_array )"		1061628	0					
ANR	1061844	Callee	gs_free_object		1061628	0					
ANR	1061845	Identifier	gs_free_object		1061628	0					
ANR	1061846	ArgumentList	self -> memory		1061628	1					
ANR	1061847	Argument	self -> memory		1061628	0					
ANR	1061848	PtrMemberAccess	self -> memory		1061628	0					
ANR	1061849	Identifier	self		1061628	0					
ANR	1061850	Identifier	memory		1061628	1					
ANR	1061851	Argument	self -> stem_snap [ 1 ]		1061628	1					
ANR	1061852	ArrayIndexing	self -> stem_snap [ 1 ]		1061628	0					
ANR	1061853	PtrMemberAccess	self -> stem_snap		1061628	0					
ANR	1061854	Identifier	self		1061628	0					
ANR	1061855	Identifier	stem_snap		1061628	1					
ANR	1061856	PrimaryExpression	1		1061628	1					
ANR	1061857	Argument	s_stem_snap_array		1061628	2					
ANR	1061858	Identifier	s_stem_snap_array		1061628	0					
ANR	1061859	IfStatement	if ( self -> stem_snap_vote != self -> stem_snap_vote0 )		1061628	9					
ANR	1061860	Condition	self -> stem_snap_vote != self -> stem_snap_vote0	437:8:16472:16516	1061628	0	True				
ANR	1061861	EqualityExpression	self -> stem_snap_vote != self -> stem_snap_vote0		1061628	0		!=			
ANR	1061862	PtrMemberAccess	self -> stem_snap_vote		1061628	0					
ANR	1061863	Identifier	self		1061628	0					
ANR	1061864	Identifier	stem_snap_vote		1061628	1					
ANR	1061865	PtrMemberAccess	self -> stem_snap_vote0		1061628	1					
ANR	1061866	Identifier	self		1061628	0					
ANR	1061867	Identifier	stem_snap_vote0		1061628	1					
ANR	1061868	ExpressionStatement	"gs_free_object ( self -> memory , self -> stem_snap_vote , s_stem_snap_vote_array )"	438:8:16527:16601	1061628	1	True				
ANR	1061869	CallExpression	"gs_free_object ( self -> memory , self -> stem_snap_vote , s_stem_snap_vote_array )"		1061628	0					
ANR	1061870	Callee	gs_free_object		1061628	0					
ANR	1061871	Identifier	gs_free_object		1061628	0					
ANR	1061872	ArgumentList	self -> memory		1061628	1					
ANR	1061873	Argument	self -> memory		1061628	0					
ANR	1061874	PtrMemberAccess	self -> memory		1061628	0					
ANR	1061875	Identifier	self		1061628	0					
ANR	1061876	Identifier	memory		1061628	1					
ANR	1061877	Argument	self -> stem_snap_vote		1061628	1					
ANR	1061878	PtrMemberAccess	self -> stem_snap_vote		1061628	0					
ANR	1061879	Identifier	self		1061628	0					
ANR	1061880	Identifier	stem_snap_vote		1061628	1					
ANR	1061881	Argument	s_stem_snap_vote_array		1061628	2					
ANR	1061882	Identifier	s_stem_snap_vote_array		1061628	0					
ANR	1061883	ExpressionStatement	self -> pole = 0	439:4:16607:16621	1061628	10	True				
ANR	1061884	AssignmentExpression	self -> pole = 0		1061628	0		=			
ANR	1061885	PtrMemberAccess	self -> pole		1061628	0					
ANR	1061886	Identifier	self		1061628	0					
ANR	1061887	Identifier	pole		1061628	1					
ANR	1061888	PrimaryExpression	0		1061628	1					
ANR	1061889	ExpressionStatement	self -> hint = 0	440:4:16627:16641	1061628	11	True				
ANR	1061890	AssignmentExpression	self -> hint = 0		1061628	0		=			
ANR	1061891	PtrMemberAccess	self -> hint		1061628	0					
ANR	1061892	Identifier	self		1061628	0					
ANR	1061893	Identifier	hint		1061628	1					
ANR	1061894	PrimaryExpression	0		1061628	1					
ANR	1061895	ExpressionStatement	self -> zone = 0	441:4:16647:16661	1061628	12	True				
ANR	1061896	AssignmentExpression	self -> zone = 0		1061628	0		=			
ANR	1061897	PtrMemberAccess	self -> zone		1061628	0					
ANR	1061898	Identifier	self		1061628	0					
ANR	1061899	Identifier	zone		1061628	1					
ANR	1061900	PrimaryExpression	0		1061628	1					
ANR	1061901	ExpressionStatement	self -> contour = 0	442:4:16667:16684	1061628	13	True				
ANR	1061902	AssignmentExpression	self -> contour = 0		1061628	0		=			
ANR	1061903	PtrMemberAccess	self -> contour		1061628	0					
ANR	1061904	Identifier	self		1061628	0					
ANR	1061905	Identifier	contour		1061628	1					
ANR	1061906	PrimaryExpression	0		1061628	1					
ANR	1061907	ExpressionStatement	self -> hint_range = 0	443:4:16690:16710	1061628	14	True				
ANR	1061908	AssignmentExpression	self -> hint_range = 0		1061628	0		=			
ANR	1061909	PtrMemberAccess	self -> hint_range		1061628	0					
ANR	1061910	Identifier	self		1061628	0					
ANR	1061911	Identifier	hint_range		1061628	1					
ANR	1061912	PrimaryExpression	0		1061628	1					
ANR	1061913	ExpressionStatement	self -> hint_applying = 0	444:4:16716:16739	1061628	15	True				
ANR	1061914	AssignmentExpression	self -> hint_applying = 0		1061628	0		=			
ANR	1061915	PtrMemberAccess	self -> hint_applying		1061628	0					
ANR	1061916	Identifier	self		1061628	0					
ANR	1061917	Identifier	hint_applying		1061628	1					
ANR	1061918	PrimaryExpression	0		1061628	1					
ANR	1061919	ExpressionStatement	self -> stem_snap [ 0 ] = self -> stem_snap [ 1 ] = 0	445:4:16745:16788	1061628	16	True				
ANR	1061920	AssignmentExpression	self -> stem_snap [ 0 ] = self -> stem_snap [ 1 ] = 0		1061628	0		=			
ANR	1061921	ArrayIndexing	self -> stem_snap [ 0 ]		1061628	0					
ANR	1061922	PtrMemberAccess	self -> stem_snap		1061628	0					
ANR	1061923	Identifier	self		1061628	0					
ANR	1061924	Identifier	stem_snap		1061628	1					
ANR	1061925	PrimaryExpression	0		1061628	1					
ANR	1061926	AssignmentExpression	self -> stem_snap [ 1 ] = 0		1061628	1		=			
ANR	1061927	ArrayIndexing	self -> stem_snap [ 1 ]		1061628	0					
ANR	1061928	PtrMemberAccess	self -> stem_snap		1061628	0					
ANR	1061929	Identifier	self		1061628	0					
ANR	1061930	Identifier	stem_snap		1061628	1					
ANR	1061931	PrimaryExpression	1		1061628	1					
ANR	1061932	PrimaryExpression	0		1061628	1					
ANR	1061933	ExpressionStatement	self -> stem_snap_vote = 0	446:4:16794:16818	1061628	17	True				
ANR	1061934	AssignmentExpression	self -> stem_snap_vote = 0		1061628	0		=			
ANR	1061935	PtrMemberAccess	self -> stem_snap_vote		1061628	0					
ANR	1061936	Identifier	self		1061628	0					
ANR	1061937	Identifier	stem_snap_vote		1061628	1					
ANR	1061938	PrimaryExpression	0		1061628	1					
ANR	1061939	ReturnType	static inline void		1061628	1					
ANR	1061940	Identifier	t1_hinter__free_arrays		1061628	2					
ANR	1061941	ParameterList	t1_hinter * self		1061628	3					
ANR	1061942	Parameter	t1_hinter * self	418:42:15409:15424	1061628	0	True				
ANR	1061943	ParameterType	t1_hinter *		1061628	0					
ANR	1061944	Identifier	self		1061628	1					
ANR	1061945	CFGEntryNode	ENTRY		1061628		True				
ANR	1061946	CFGExitNode	EXIT		1061628		True				
ANR	1061947	Symbol	self -> contour0		1061628						
ANR	1061948	Symbol	s_hint_applying_array		1061628						
ANR	1061949	Symbol	s_stem_snap_array		1061628						
ANR	1061950	Symbol	s_zone_array		1061628						
ANR	1061951	Symbol	self -> hint_range0		1061628						
ANR	1061952	Symbol	self -> subglyph0		1061628						
ANR	1061953	Symbol	self -> stem_snap0		1061628						
ANR	1061954	Symbol	self -> zone		1061628						
ANR	1061955	Symbol	s_contour_array		1061628						
ANR	1061956	Symbol	s_stem_snap_vote_array		1061628						
ANR	1061957	Symbol	self -> stem_snap_vote0		1061628						
ANR	1061958	Symbol	self -> memory		1061628						
ANR	1061959	Symbol	self -> pole0		1061628						
ANR	1061960	Symbol	s_subglyph_array		1061628						
ANR	1061961	Symbol	self -> pole		1061628						
ANR	1061962	Symbol	* self -> stem_snap		1061628						
ANR	1061963	Symbol	* self -> stem_snap0		1061628						
ANR	1061964	Symbol	self -> hint		1061628						
ANR	1061965	Symbol	* * self		1061628						
ANR	1061966	Symbol	* self		1061628						
ANR	1061967	Symbol	self -> stem_snap		1061628						
ANR	1061968	Symbol	s_pole_array		1061628						
ANR	1061969	Symbol	self -> hint_range		1061628						
ANR	1061970	Symbol	self -> contour		1061628						
ANR	1061971	Symbol	self -> subglyph		1061628						
ANR	1061972	Symbol	self -> hint_applying0		1061628						
ANR	1061973	Symbol	self -> hint0		1061628						
ANR	1061974	Symbol	self -> zone0		1061628						
ANR	1061975	Symbol	self -> stem_snap_vote		1061628						
ANR	1061976	Symbol	self		1061628						
ANR	1061977	Symbol	self -> hint_applying		1061628						
ANR	1061978	Symbol	s_hint_array		1061628						
ANR	1061979	Symbol	s_hint_range_array		1061628						
ANR	1061980	Function	t1_hinter__init_outline	449:0:16823:17098							
ANR	1061981	FunctionDef	t1_hinter__init_outline (t1_hinter * self)		1061980	0					
ANR	1061982	CompoundStatement		450:0:16884:17098	1061980	0					
ANR	1061983	ExpressionStatement	self -> contour_count = 0	451:4:16890:16913	1061980	0	True				
ANR	1061984	AssignmentExpression	self -> contour_count = 0		1061980	0		=			
ANR	1061985	PtrMemberAccess	self -> contour_count		1061980	0					
ANR	1061986	Identifier	self		1061980	0					
ANR	1061987	Identifier	contour_count		1061980	1					
ANR	1061988	PrimaryExpression	0		1061980	1					
ANR	1061989	ExpressionStatement	self -> pole_count = 0	452:4:16919:16939	1061980	1	True				
ANR	1061990	AssignmentExpression	self -> pole_count = 0		1061980	0		=			
ANR	1061991	PtrMemberAccess	self -> pole_count		1061980	0					
ANR	1061992	Identifier	self		1061980	0					
ANR	1061993	Identifier	pole_count		1061980	1					
ANR	1061994	PrimaryExpression	0		1061980	1					
ANR	1061995	ExpressionStatement	self -> contour [ 0 ] = 0	453:4:16945:16965	1061980	2	True				
ANR	1061996	AssignmentExpression	self -> contour [ 0 ] = 0		1061980	0		=			
ANR	1061997	ArrayIndexing	self -> contour [ 0 ]		1061980	0					
ANR	1061998	PtrMemberAccess	self -> contour		1061980	0					
ANR	1061999	Identifier	self		1061980	0					
ANR	1062000	Identifier	contour		1061980	1					
ANR	1062001	PrimaryExpression	0		1061980	1					
ANR	1062002	PrimaryExpression	0		1061980	1					
ANR	1062003	ExpressionStatement	self -> hint_count = 0	454:4:16971:16991	1061980	3	True				
ANR	1062004	AssignmentExpression	self -> hint_count = 0		1061980	0		=			
ANR	1062005	PtrMemberAccess	self -> hint_count		1061980	0					
ANR	1062006	Identifier	self		1061980	0					
ANR	1062007	Identifier	hint_count		1061980	1					
ANR	1062008	PrimaryExpression	0		1061980	1					
ANR	1062009	ExpressionStatement	self -> primary_hint_count = - 1	455:4:16997:17026	1061980	4	True				
ANR	1062010	AssignmentExpression	self -> primary_hint_count = - 1		1061980	0		=			
ANR	1062011	PtrMemberAccess	self -> primary_hint_count		1061980	0					
ANR	1062012	Identifier	self		1061980	0					
ANR	1062013	Identifier	primary_hint_count		1061980	1					
ANR	1062014	UnaryOperationExpression	- 1		1061980	1					
ANR	1062015	UnaryOperator	-		1061980	0					
ANR	1062016	PrimaryExpression	1		1061980	1					
ANR	1062017	ExpressionStatement	self -> suppress_overshoots = false	456:4:17032:17065	1061980	5	True				
ANR	1062018	AssignmentExpression	self -> suppress_overshoots = false		1061980	0		=			
ANR	1062019	PtrMemberAccess	self -> suppress_overshoots		1061980	0					
ANR	1062020	Identifier	self		1061980	0					
ANR	1062021	Identifier	suppress_overshoots		1061980	1					
ANR	1062022	Identifier	false		1061980	1					
ANR	1062023	ExpressionStatement	self -> path_opened = false	457:4:17071:17096	1061980	6	True				
ANR	1062024	AssignmentExpression	self -> path_opened = false		1061980	0		=			
ANR	1062025	PtrMemberAccess	self -> path_opened		1061980	0					
ANR	1062026	Identifier	self		1061980	0					
ANR	1062027	Identifier	path_opened		1061980	1					
ANR	1062028	Identifier	false		1061980	1					
ANR	1062029	ReturnType	static inline void		1061980	1					
ANR	1062030	Identifier	t1_hinter__init_outline		1061980	2					
ANR	1062031	ParameterList	t1_hinter * self		1061980	3					
ANR	1062032	Parameter	t1_hinter * self	449:43:16866:16881	1061980	0	True				
ANR	1062033	ParameterType	t1_hinter *		1061980	0					
ANR	1062034	Identifier	self		1061980	1					
ANR	1062035	CFGEntryNode	ENTRY		1061980		True				
ANR	1062036	CFGExitNode	EXIT		1061980		True				
ANR	1062037	Symbol	* self -> contour		1061980						
ANR	1062038	Symbol	self -> contour		1061980						
ANR	1062039	Symbol	self -> hint_count		1061980						
ANR	1062040	Symbol	self -> suppress_overshoots		1061980						
ANR	1062041	Symbol	self -> contour_count		1061980						
ANR	1062042	Symbol	self -> path_opened		1061980						
ANR	1062043	Symbol	self -> pole_count		1061980						
ANR	1062044	Symbol	* * self		1061980						
ANR	1062045	Symbol	* self		1061980						
ANR	1062046	Symbol	false		1061980						
ANR	1062047	Symbol	self		1061980						
ANR	1062048	Symbol	self -> primary_hint_count		1061980						
ANR	1062049	Function	t1_hinter__compute_rat_transform_coef	460:0:17101:17663							
ANR	1062050	FunctionDef	t1_hinter__compute_rat_transform_coef (t1_hinter * self)		1062049	0					
ANR	1062051	CompoundStatement		461:0:17169:17663	1062049	0					
ANR	1062052	ExpressionStatement	self -> heigt_transform_coef_rat = ( int19 ) ( self -> heigt_transform_coef * self -> ctmf . denominator + 0.5 )	463:4:17247:17346	1062049	0	True				
ANR	1062053	AssignmentExpression	self -> heigt_transform_coef_rat = ( int19 ) ( self -> heigt_transform_coef * self -> ctmf . denominator + 0.5 )		1062049	0		=			
ANR	1062054	PtrMemberAccess	self -> heigt_transform_coef_rat		1062049	0					
ANR	1062055	Identifier	self		1062049	0					
ANR	1062056	Identifier	heigt_transform_coef_rat		1062049	1					
ANR	1062057	CastExpression	( int19 ) ( self -> heigt_transform_coef * self -> ctmf . denominator + 0.5 )		1062049	1					
ANR	1062058	CastTarget	int19		1062049	0					
ANR	1062059	AdditiveExpression	self -> heigt_transform_coef * self -> ctmf . denominator + 0.5		1062049	1		+			
ANR	1062060	MultiplicativeExpression	self -> heigt_transform_coef * self -> ctmf . denominator		1062049	0		*			
ANR	1062061	PtrMemberAccess	self -> heigt_transform_coef		1062049	0					
ANR	1062062	Identifier	self		1062049	0					
ANR	1062063	Identifier	heigt_transform_coef		1062049	1					
ANR	1062064	MemberAccess	self -> ctmf . denominator		1062049	1					
ANR	1062065	PtrMemberAccess	self -> ctmf		1062049	0					
ANR	1062066	Identifier	self		1062049	0					
ANR	1062067	Identifier	ctmf		1062049	1					
ANR	1062068	Identifier	denominator		1062049	1					
ANR	1062069	PrimaryExpression	0.5		1062049	1					
ANR	1062070	ExpressionStatement	self -> width_transform_coef_rat = ( int19 ) ( self -> width_transform_coef * self -> ctmf . denominator + 0.5 )	464:4:17352:17451	1062049	1	True				
ANR	1062071	AssignmentExpression	self -> width_transform_coef_rat = ( int19 ) ( self -> width_transform_coef * self -> ctmf . denominator + 0.5 )		1062049	0		=			
ANR	1062072	PtrMemberAccess	self -> width_transform_coef_rat		1062049	0					
ANR	1062073	Identifier	self		1062049	0					
ANR	1062074	Identifier	width_transform_coef_rat		1062049	1					
ANR	1062075	CastExpression	( int19 ) ( self -> width_transform_coef * self -> ctmf . denominator + 0.5 )		1062049	1					
ANR	1062076	CastTarget	int19		1062049	0					
ANR	1062077	AdditiveExpression	self -> width_transform_coef * self -> ctmf . denominator + 0.5		1062049	1		+			
ANR	1062078	MultiplicativeExpression	self -> width_transform_coef * self -> ctmf . denominator		1062049	0		*			
ANR	1062079	PtrMemberAccess	self -> width_transform_coef		1062049	0					
ANR	1062080	Identifier	self		1062049	0					
ANR	1062081	Identifier	width_transform_coef		1062049	1					
ANR	1062082	MemberAccess	self -> ctmf . denominator		1062049	1					
ANR	1062083	PtrMemberAccess	self -> ctmf		1062049	0					
ANR	1062084	Identifier	self		1062049	0					
ANR	1062085	Identifier	ctmf		1062049	1					
ANR	1062086	Identifier	denominator		1062049	1					
ANR	1062087	PrimaryExpression	0.5		1062049	1					
ANR	1062088	ExpressionStatement	self -> heigt_transform_coef_inv = ( int19 ) ( self -> ctmi . denominator / self -> heigt_transform_coef + 0.5 )	465:4:17457:17556	1062049	2	True				
ANR	1062089	AssignmentExpression	self -> heigt_transform_coef_inv = ( int19 ) ( self -> ctmi . denominator / self -> heigt_transform_coef + 0.5 )		1062049	0		=			
ANR	1062090	PtrMemberAccess	self -> heigt_transform_coef_inv		1062049	0					
ANR	1062091	Identifier	self		1062049	0					
ANR	1062092	Identifier	heigt_transform_coef_inv		1062049	1					
ANR	1062093	CastExpression	( int19 ) ( self -> ctmi . denominator / self -> heigt_transform_coef + 0.5 )		1062049	1					
ANR	1062094	CastTarget	int19		1062049	0					
ANR	1062095	AdditiveExpression	self -> ctmi . denominator / self -> heigt_transform_coef + 0.5		1062049	1		+			
ANR	1062096	MultiplicativeExpression	self -> ctmi . denominator / self -> heigt_transform_coef		1062049	0		/			
ANR	1062097	MemberAccess	self -> ctmi . denominator		1062049	0					
ANR	1062098	PtrMemberAccess	self -> ctmi		1062049	0					
ANR	1062099	Identifier	self		1062049	0					
ANR	1062100	Identifier	ctmi		1062049	1					
ANR	1062101	Identifier	denominator		1062049	1					
ANR	1062102	PtrMemberAccess	self -> heigt_transform_coef		1062049	1					
ANR	1062103	Identifier	self		1062049	0					
ANR	1062104	Identifier	heigt_transform_coef		1062049	1					
ANR	1062105	PrimaryExpression	0.5		1062049	1					
ANR	1062106	ExpressionStatement	self -> width_transform_coef_inv = ( int19 ) ( self -> ctmi . denominator / self -> width_transform_coef + 0.5 )	466:4:17562:17661	1062049	3	True				
ANR	1062107	AssignmentExpression	self -> width_transform_coef_inv = ( int19 ) ( self -> ctmi . denominator / self -> width_transform_coef + 0.5 )		1062049	0		=			
ANR	1062108	PtrMemberAccess	self -> width_transform_coef_inv		1062049	0					
ANR	1062109	Identifier	self		1062049	0					
ANR	1062110	Identifier	width_transform_coef_inv		1062049	1					
ANR	1062111	CastExpression	( int19 ) ( self -> ctmi . denominator / self -> width_transform_coef + 0.5 )		1062049	1					
ANR	1062112	CastTarget	int19		1062049	0					
ANR	1062113	AdditiveExpression	self -> ctmi . denominator / self -> width_transform_coef + 0.5		1062049	1		+			
ANR	1062114	MultiplicativeExpression	self -> ctmi . denominator / self -> width_transform_coef		1062049	0		/			
ANR	1062115	MemberAccess	self -> ctmi . denominator		1062049	0					
ANR	1062116	PtrMemberAccess	self -> ctmi		1062049	0					
ANR	1062117	Identifier	self		1062049	0					
ANR	1062118	Identifier	ctmi		1062049	1					
ANR	1062119	Identifier	denominator		1062049	1					
ANR	1062120	PtrMemberAccess	self -> width_transform_coef		1062049	1					
ANR	1062121	Identifier	self		1062049	0					
ANR	1062122	Identifier	width_transform_coef		1062049	1					
ANR	1062123	PrimaryExpression	0.5		1062049	1					
ANR	1062124	ReturnType	static void		1062049	1					
ANR	1062125	Identifier	t1_hinter__compute_rat_transform_coef		1062049	2					
ANR	1062126	ParameterList	t1_hinter * self		1062049	3					
ANR	1062127	Parameter	t1_hinter * self	460:50:17151:17166	1062049	0	True				
ANR	1062128	ParameterType	t1_hinter *		1062049	0					
ANR	1062129	Identifier	self		1062049	1					
ANR	1062130	CFGEntryNode	ENTRY		1062049		True				
ANR	1062131	CFGExitNode	EXIT		1062049		True				
ANR	1062132	Symbol	self -> width_transform_coef_rat		1062049						
ANR	1062133	Symbol	self -> ctmf		1062049						
ANR	1062134	Symbol	* self		1062049						
ANR	1062135	Symbol	self -> heigt_transform_coef		1062049						
ANR	1062136	Symbol	self -> width_transform_coef		1062049						
ANR	1062137	Symbol	self -> heigt_transform_coef_inv		1062049						
ANR	1062138	Symbol	self		1062049						
ANR	1062139	Symbol	self -> ctmf . denominator		1062049						
ANR	1062140	Symbol	self -> ctmi		1062049						
ANR	1062141	Symbol	self -> heigt_transform_coef_rat		1062049						
ANR	1062142	Symbol	self -> width_transform_coef_inv		1062049						
ANR	1062143	Symbol	self -> ctmi . denominator		1062049						
ANR	1062144	Function	t1_hinter__adjust_matrix_precision	469:0:17666:18354							
ANR	1062145	FunctionDef	"t1_hinter__adjust_matrix_precision (t1_hinter * self , fixed xx , fixed yy)"		1062144	0					
ANR	1062146	CompoundStatement		470:0:17758:18354	1062144	0					
ANR	1062147	IdentifierDeclStatement	"fixed x = any_abs ( xx ) , y = any_abs ( yy ) ;"	470:3:17762:17800	1062144	0	True				
ANR	1062148	IdentifierDecl	x = any_abs ( xx )		1062144	0					
ANR	1062149	IdentifierDeclType	fixed		1062144	0					
ANR	1062150	Identifier	x		1062144	1					
ANR	1062151	AssignmentExpression	x = any_abs ( xx )		1062144	2		=			
ANR	1062152	Identifier	x		1062144	0					
ANR	1062153	CallExpression	any_abs ( xx )		1062144	1					
ANR	1062154	Callee	any_abs		1062144	0					
ANR	1062155	Identifier	any_abs		1062144	0					
ANR	1062156	ArgumentList	xx		1062144	1					
ANR	1062157	Argument	xx		1062144	0					
ANR	1062158	Identifier	xx		1062144	0					
ANR	1062159	IdentifierDecl	y = any_abs ( yy )		1062144	1					
ANR	1062160	IdentifierDeclType	fixed		1062144	0					
ANR	1062161	Identifier	y		1062144	1					
ANR	1062162	AssignmentExpression	y = any_abs ( yy )		1062144	2		=			
ANR	1062163	Identifier	y		1062144	0					
ANR	1062164	CallExpression	any_abs ( yy )		1062144	1					
ANR	1062165	Callee	any_abs		1062144	0					
ANR	1062166	Identifier	any_abs		1062144	0					
ANR	1062167	ArgumentList	yy		1062144	1					
ANR	1062168	Argument	yy		1062144	0					
ANR	1062169	Identifier	yy		1062144	0					
ANR	1062170	IdentifierDeclStatement	fixed c = ( x > y ? x : y ) ;	471:4:17806:17831	1062144	1	True				
ANR	1062171	IdentifierDecl	c = ( x > y ? x : y )		1062144	0					
ANR	1062172	IdentifierDeclType	fixed		1062144	0					
ANR	1062173	Identifier	c		1062144	1					
ANR	1062174	AssignmentExpression	c = ( x > y ? x : y )		1062144	2		=			
ANR	1062175	Identifier	c		1062144	0					
ANR	1062176	ConditionalExpression	x > y ? x : y		1062144	1					
ANR	1062177	Condition	x > y		1062144	0					
ANR	1062178	RelationalExpression	x > y		1062144	0		>			
ANR	1062179	Identifier	x		1062144	0					
ANR	1062180	Identifier	y		1062144	1					
ANR	1062181	Identifier	x		1062144	1					
ANR	1062182	Identifier	y		1062144	2					
ANR	1062183	WhileStatement	while ( c >= self -> max_import_coord )		1062144	2					
ANR	1062184	Condition	c >= self -> max_import_coord	473:11:17845:17871	1062144	0	True				
ANR	1062185	RelationalExpression	c >= self -> max_import_coord		1062144	0		>=			
ANR	1062186	Identifier	c		1062144	0					
ANR	1062187	PtrMemberAccess	self -> max_import_coord		1062144	1					
ANR	1062188	Identifier	self		1062144	0					
ANR	1062189	Identifier	max_import_coord		1062144	1					
ANR	1062190	CompoundStatement		4:40:115:115	1062144	1					
ANR	1062191	ExpressionStatement	self -> max_import_coord <<= 1	475:8:17967:17995	1062144	0	True				
ANR	1062192	AssignmentExpression	self -> max_import_coord <<= 1		1062144	0		<<=			
ANR	1062193	PtrMemberAccess	self -> max_import_coord		1062144	0					
ANR	1062194	Identifier	self		1062144	0					
ANR	1062195	Identifier	max_import_coord		1062144	1					
ANR	1062196	PrimaryExpression	1		1062144	1					
ANR	1062197	ExpressionStatement	"fraction_matrix__drop_bits ( & self -> ctmf , 1 )"	476:8:18005:18047	1062144	1	True				
ANR	1062198	CallExpression	"fraction_matrix__drop_bits ( & self -> ctmf , 1 )"		1062144	0					
ANR	1062199	Callee	fraction_matrix__drop_bits		1062144	0					
ANR	1062200	Identifier	fraction_matrix__drop_bits		1062144	0					
ANR	1062201	ArgumentList	& self -> ctmf		1062144	1					
ANR	1062202	Argument	& self -> ctmf		1062144	0					
ANR	1062203	UnaryOperationExpression	& self -> ctmf		1062144	0					
ANR	1062204	UnaryOperator	&		1062144	0					
ANR	1062205	PtrMemberAccess	self -> ctmf		1062144	1					
ANR	1062206	Identifier	self		1062144	0					
ANR	1062207	Identifier	ctmf		1062144	1					
ANR	1062208	Argument	1		1062144	1					
ANR	1062209	PrimaryExpression	1		1062144	0					
ANR	1062210	ExpressionStatement	"fraction_matrix__drop_bits ( & self -> ctmi , 1 )"	477:8:18057:18099	1062144	2	True				
ANR	1062211	CallExpression	"fraction_matrix__drop_bits ( & self -> ctmi , 1 )"		1062144	0					
ANR	1062212	Callee	fraction_matrix__drop_bits		1062144	0					
ANR	1062213	Identifier	fraction_matrix__drop_bits		1062144	0					
ANR	1062214	ArgumentList	& self -> ctmi		1062144	1					
ANR	1062215	Argument	& self -> ctmi		1062144	0					
ANR	1062216	UnaryOperationExpression	& self -> ctmi		1062144	0					
ANR	1062217	UnaryOperator	&		1062144	0					
ANR	1062218	PtrMemberAccess	self -> ctmi		1062144	1					
ANR	1062219	Identifier	self		1062144	0					
ANR	1062220	Identifier	ctmi		1062144	1					
ANR	1062221	Argument	1		1062144	1					
ANR	1062222	PrimaryExpression	1		1062144	0					
ANR	1062223	ExpressionStatement	self -> g2o_fraction_bits -= 1	478:8:18109:18137	1062144	3	True				
ANR	1062224	AssignmentExpression	self -> g2o_fraction_bits -= 1		1062144	0		-=			
ANR	1062225	PtrMemberAccess	self -> g2o_fraction_bits		1062144	0					
ANR	1062226	Identifier	self		1062144	0					
ANR	1062227	Identifier	g2o_fraction_bits		1062144	1					
ANR	1062228	PrimaryExpression	1		1062144	1					
ANR	1062229	ExpressionStatement	self -> g2o_fraction >>= 1	479:8:18147:18171	1062144	4	True				
ANR	1062230	AssignmentExpression	self -> g2o_fraction >>= 1		1062144	0		>>=			
ANR	1062231	PtrMemberAccess	self -> g2o_fraction		1062144	0					
ANR	1062232	Identifier	self		1062144	0					
ANR	1062233	Identifier	g2o_fraction		1062144	1					
ANR	1062234	PrimaryExpression	1		1062144	1					
ANR	1062235	ExpressionStatement	t1_hinter__compute_rat_transform_coef ( self )	480:8:18181:18224	1062144	5	True				
ANR	1062236	CallExpression	t1_hinter__compute_rat_transform_coef ( self )		1062144	0					
ANR	1062237	Callee	t1_hinter__compute_rat_transform_coef		1062144	0					
ANR	1062238	Identifier	t1_hinter__compute_rat_transform_coef		1062144	0					
ANR	1062239	ArgumentList	self		1062144	1					
ANR	1062240	Argument	self		1062144	0					
ANR	1062241	Identifier	self		1062144	0					
ANR	1062242	IfStatement	if ( self -> ctmf . denominator == 0 )		1062144	3					
ANR	1062243	Condition	self -> ctmf . denominator == 0	482:8:18240:18266	1062144	0	True				
ANR	1062244	EqualityExpression	self -> ctmf . denominator == 0		1062144	0		==			
ANR	1062245	MemberAccess	self -> ctmf . denominator		1062144	0					
ANR	1062246	PtrMemberAccess	self -> ctmf		1062144	0					
ANR	1062247	Identifier	self		1062144	0					
ANR	1062248	Identifier	ctmf		1062144	1					
ANR	1062249	Identifier	denominator		1062144	1					
ANR	1062250	PrimaryExpression	0		1062144	1					
ANR	1062251	CompoundStatement		13:37:510:510	1062144	1					
ANR	1062252	ExpressionStatement	self -> ctmf . denominator = 1	484:8:18320:18346	1062144	0	True				
ANR	1062253	AssignmentExpression	self -> ctmf . denominator = 1		1062144	0		=			
ANR	1062254	MemberAccess	self -> ctmf . denominator		1062144	0					
ANR	1062255	PtrMemberAccess	self -> ctmf		1062144	0					
ANR	1062256	Identifier	self		1062144	0					
ANR	1062257	Identifier	ctmf		1062144	1					
ANR	1062258	Identifier	denominator		1062144	1					
ANR	1062259	PrimaryExpression	1		1062144	1					
ANR	1062260	ReturnType	static inline void		1062144	1					
ANR	1062261	Identifier	t1_hinter__adjust_matrix_precision		1062144	2					
ANR	1062262	ParameterList	"t1_hinter * self , fixed xx , fixed yy"		1062144	3					
ANR	1062263	Parameter	t1_hinter * self	469:54:17720:17735	1062144	0	True				
ANR	1062264	ParameterType	t1_hinter *		1062144	0					
ANR	1062265	Identifier	self		1062144	1					
ANR	1062266	Parameter	fixed xx	469:72:17738:17745	1062144	1	True				
ANR	1062267	ParameterType	fixed		1062144	0					
ANR	1062268	Identifier	xx		1062144	1					
ANR	1062269	Parameter	fixed yy	469:82:17748:17755	1062144	2	True				
ANR	1062270	ParameterType	fixed		1062144	0					
ANR	1062271	Identifier	yy		1062144	1					
ANR	1062272	CFGEntryNode	ENTRY		1062144		True				
ANR	1062273	CFGExitNode	EXIT		1062144		True				
ANR	1062274	Symbol	xx		1062144						
ANR	1062275	Symbol	yy		1062144						
ANR	1062276	Symbol	self -> g2o_fraction		1062144						
ANR	1062277	Symbol	c		1062144						
ANR	1062278	Symbol	* self		1062144						
ANR	1062279	Symbol	self -> ctmf		1062144						
ANR	1062280	Symbol	self -> g2o_fraction_bits		1062144						
ANR	1062281	Symbol	self -> max_import_coord		1062144						
ANR	1062282	Symbol	& self -> ctmf		1062144						
ANR	1062283	Symbol	& self -> ctmi		1062144						
ANR	1062284	Symbol	any_abs		1062144						
ANR	1062285	Symbol	x		1062144						
ANR	1062286	Symbol	self		1062144						
ANR	1062287	Symbol	y		1062144						
ANR	1062288	Symbol	self -> ctmf . denominator		1062144						
ANR	1062289	Function	t1_hinter__set_origin	488:0:18357:19498							
ANR	1062290	FunctionDef	"t1_hinter__set_origin (t1_hinter * self , fixed dx , fixed dy)"		1062289	0					
ANR	1062291	CompoundStatement		489:0:18436:19498	1062289	0					
ANR	1062292	IdentifierDeclStatement	"fixed align_x = rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) ) ;"	490:4:18442:18550	1062289	0	True				
ANR	1062293	IdentifierDecl	"align_x = rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		1062289	0					
ANR	1062294	IdentifierDeclType	fixed		1062289	0					
ANR	1062295	Identifier	align_x		1062289	1					
ANR	1062296	AssignmentExpression	"align_x = rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		1062289	2		=			
ANR	1062297	Identifier	align_x		1062289	0					
ANR	1062298	CallExpression	"rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		1062289	1					
ANR	1062299	Callee	rshift		1062289	0					
ANR	1062300	Identifier	rshift		1062289	0					
ANR	1062301	ArgumentList	fixed_1		1062289	1					
ANR	1062302	Argument	fixed_1		1062289	0					
ANR	1062303	Identifier	fixed_1		1062289	0					
ANR	1062304	Argument	self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x		1062289	1					
ANR	1062305	ConditionalExpression	self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x		1062289	0					
ANR	1062306	Condition	self -> align_to_pixels		1062289	0					
ANR	1062307	PtrMemberAccess	self -> align_to_pixels		1062289	0					
ANR	1062308	Identifier	self		1062289	0					
ANR	1062309	Identifier	align_to_pixels		1062289	1					
ANR	1062310	CastExpression	( int ) self -> log2_pixels_x		1062289	1					
ANR	1062311	CastTarget	int		1062289	0					
ANR	1062312	PtrMemberAccess	self -> log2_pixels_x		1062289	1					
ANR	1062313	Identifier	self		1062289	0					
ANR	1062314	Identifier	log2_pixels_x		1062289	1					
ANR	1062315	PtrMemberAccess	self -> log2_subpixels_x		1062289	2					
ANR	1062316	Identifier	self		1062289	0					
ANR	1062317	Identifier	log2_subpixels_x		1062289	1					
ANR	1062318	IdentifierDeclStatement	"fixed align_y = rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) ) ;"	491:4:18556:18664	1062289	1	True				
ANR	1062319	IdentifierDecl	"align_y = rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		1062289	0					
ANR	1062320	IdentifierDeclType	fixed		1062289	0					
ANR	1062321	Identifier	align_y		1062289	1					
ANR	1062322	AssignmentExpression	"align_y = rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		1062289	2		=			
ANR	1062323	Identifier	align_y		1062289	0					
ANR	1062324	CallExpression	"rshift ( fixed_1 , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		1062289	1					
ANR	1062325	Callee	rshift		1062289	0					
ANR	1062326	Identifier	rshift		1062289	0					
ANR	1062327	ArgumentList	fixed_1		1062289	1					
ANR	1062328	Argument	fixed_1		1062289	0					
ANR	1062329	Identifier	fixed_1		1062289	0					
ANR	1062330	Argument	self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y		1062289	1					
ANR	1062331	ConditionalExpression	self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y		1062289	0					
ANR	1062332	Condition	self -> align_to_pixels		1062289	0					
ANR	1062333	PtrMemberAccess	self -> align_to_pixels		1062289	0					
ANR	1062334	Identifier	self		1062289	0					
ANR	1062335	Identifier	align_to_pixels		1062289	1					
ANR	1062336	CastExpression	( int ) self -> log2_pixels_y		1062289	1					
ANR	1062337	CastTarget	int		1062289	0					
ANR	1062338	PtrMemberAccess	self -> log2_pixels_y		1062289	1					
ANR	1062339	Identifier	self		1062289	0					
ANR	1062340	Identifier	log2_pixels_y		1062289	1					
ANR	1062341	PtrMemberAccess	self -> log2_subpixels_y		1062289	2					
ANR	1062342	Identifier	self		1062289	0					
ANR	1062343	Identifier	log2_subpixels_y		1062289	1					
ANR	1062344	ExpressionStatement	self -> orig_dx = ( dx + align_x / 2 ) & ~ ( align_x - 1 )	493:4:18671:18722	1062289	2	True				
ANR	1062345	AssignmentExpression	self -> orig_dx = ( dx + align_x / 2 ) & ~ ( align_x - 1 )		1062289	0		=			
ANR	1062346	PtrMemberAccess	self -> orig_dx		1062289	0					
ANR	1062347	Identifier	self		1062289	0					
ANR	1062348	Identifier	orig_dx		1062289	1					
ANR	1062349	BitAndExpression	( dx + align_x / 2 ) & ~ ( align_x - 1 )		1062289	1		&			
ANR	1062350	AdditiveExpression	dx + align_x / 2		1062289	0		+			
ANR	1062351	Identifier	dx		1062289	0					
ANR	1062352	MultiplicativeExpression	align_x / 2		1062289	1		/			
ANR	1062353	Identifier	align_x		1062289	0					
ANR	1062354	PrimaryExpression	2		1062289	1					
ANR	1062355	UnaryOperationExpression	~ ( align_x - 1 )		1062289	1					
ANR	1062356	UnaryOperator	~		1062289	0					
ANR	1062357	AdditiveExpression	align_x - 1		1062289	1		-			
ANR	1062358	Identifier	align_x		1062289	0					
ANR	1062359	PrimaryExpression	1		1062289	1					
ANR	1062360	ExpressionStatement	self -> orig_dy = ( dy + align_y / 2 ) & ~ ( align_y - 1 )	494:4:18728:18779	1062289	3	True				
ANR	1062361	AssignmentExpression	self -> orig_dy = ( dy + align_y / 2 ) & ~ ( align_y - 1 )		1062289	0		=			
ANR	1062362	PtrMemberAccess	self -> orig_dy		1062289	0					
ANR	1062363	Identifier	self		1062289	0					
ANR	1062364	Identifier	orig_dy		1062289	1					
ANR	1062365	BitAndExpression	( dy + align_y / 2 ) & ~ ( align_y - 1 )		1062289	1		&			
ANR	1062366	AdditiveExpression	dy + align_y / 2		1062289	0		+			
ANR	1062367	Identifier	dy		1062289	0					
ANR	1062368	MultiplicativeExpression	align_y / 2		1062289	1		/			
ANR	1062369	Identifier	align_y		1062289	0					
ANR	1062370	PrimaryExpression	2		1062289	1					
ANR	1062371	UnaryOperationExpression	~ ( align_y - 1 )		1062289	1					
ANR	1062372	UnaryOperator	~		1062289	0					
ANR	1062373	AdditiveExpression	align_y - 1		1062289	1		-			
ANR	1062374	Identifier	align_y		1062289	0					
ANR	1062375	PrimaryExpression	1		1062289	1					
ANR	1062376	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , self -> orig_dx , self -> orig_dy )"	495:4:18785:18855	1062289	4	True				
ANR	1062377	CallExpression	"t1_hinter__adjust_matrix_precision ( self , self -> orig_dx , self -> orig_dy )"		1062289	0					
ANR	1062378	Callee	t1_hinter__adjust_matrix_precision		1062289	0					
ANR	1062379	Identifier	t1_hinter__adjust_matrix_precision		1062289	0					
ANR	1062380	ArgumentList	self		1062289	1					
ANR	1062381	Argument	self		1062289	0					
ANR	1062382	Identifier	self		1062289	0					
ANR	1062383	Argument	self -> orig_dx		1062289	1					
ANR	1062384	PtrMemberAccess	self -> orig_dx		1062289	0					
ANR	1062385	Identifier	self		1062289	0					
ANR	1062386	Identifier	orig_dx		1062289	1					
ANR	1062387	Argument	self -> orig_dy		1062289	2					
ANR	1062388	PtrMemberAccess	self -> orig_dy		1062289	0					
ANR	1062389	Identifier	self		1062289	0					
ANR	1062390	Identifier	orig_dy		1062289	1					
ANR	1062391	ExpressionStatement	"self -> orig_ox = d2o ( self , self -> orig_dx )"	496:4:18861:18901	1062289	5	True				
ANR	1062392	AssignmentExpression	"self -> orig_ox = d2o ( self , self -> orig_dx )"		1062289	0		=			
ANR	1062393	PtrMemberAccess	self -> orig_ox		1062289	0					
ANR	1062394	Identifier	self		1062289	0					
ANR	1062395	Identifier	orig_ox		1062289	1					
ANR	1062396	CallExpression	"d2o ( self , self -> orig_dx )"		1062289	1					
ANR	1062397	Callee	d2o		1062289	0					
ANR	1062398	Identifier	d2o		1062289	0					
ANR	1062399	ArgumentList	self		1062289	1					
ANR	1062400	Argument	self		1062289	0					
ANR	1062401	Identifier	self		1062289	0					
ANR	1062402	Argument	self -> orig_dx		1062289	1					
ANR	1062403	PtrMemberAccess	self -> orig_dx		1062289	0					
ANR	1062404	Identifier	self		1062289	0					
ANR	1062405	Identifier	orig_dx		1062289	1					
ANR	1062406	ExpressionStatement	"self -> orig_oy = d2o ( self , self -> orig_dy )"	497:4:18907:18947	1062289	6	True				
ANR	1062407	AssignmentExpression	"self -> orig_oy = d2o ( self , self -> orig_dy )"		1062289	0		=			
ANR	1062408	PtrMemberAccess	self -> orig_oy		1062289	0					
ANR	1062409	Identifier	self		1062289	0					
ANR	1062410	Identifier	orig_oy		1062289	1					
ANR	1062411	CallExpression	"d2o ( self , self -> orig_dy )"		1062289	1					
ANR	1062412	Callee	d2o		1062289	0					
ANR	1062413	Identifier	d2o		1062289	0					
ANR	1062414	ArgumentList	self		1062289	1					
ANR	1062415	Argument	self		1062289	0					
ANR	1062416	Identifier	self		1062289	0					
ANR	1062417	Argument	self -> orig_dy		1062289	1					
ANR	1062418	PtrMemberAccess	self -> orig_dy		1062289	0					
ANR	1062419	Identifier	self		1062289	0					
ANR	1062420	Identifier	orig_dy		1062289	1					
ANR	1062421	Statement	if	498:4:18953:18954	1062289	7	True				
ANR	1062422	Statement	ADOBE_SHIFT_CHARPATH	498:7:18956:18975	1062289	8	True				
ANR	1062423	IfStatement	if ( self -> charpath_flag )		1062289	9					
ANR	1062424	Condition	self -> charpath_flag	503:12:19119:19137	1062289	0	True				
ANR	1062425	PtrMemberAccess	self -> charpath_flag		1062289	0					
ANR	1062426	Identifier	self		1062289	0					
ANR	1062427	Identifier	charpath_flag		1062289	1					
ANR	1062428	CompoundStatement		15:33:703:703	1062289	1					
ANR	1062429	ExpressionStatement	self -> orig_dx += fixed_half	504:12:19154:19181	1062289	0	True				
ANR	1062430	AssignmentExpression	self -> orig_dx += fixed_half		1062289	0		+=			
ANR	1062431	PtrMemberAccess	self -> orig_dx		1062289	0					
ANR	1062432	Identifier	self		1062289	0					
ANR	1062433	Identifier	orig_dx		1062289	1					
ANR	1062434	Identifier	fixed_half		1062289	1					
ANR	1062435	ExpressionStatement	self -> orig_dx &= ~ ( fixed_1 - 1 )	505:12:19195:19226	1062289	1	True				
ANR	1062436	AssignmentExpression	self -> orig_dx &= ~ ( fixed_1 - 1 )		1062289	0		&=			
ANR	1062437	PtrMemberAccess	self -> orig_dx		1062289	0					
ANR	1062438	Identifier	self		1062289	0					
ANR	1062439	Identifier	orig_dx		1062289	1					
ANR	1062440	UnaryOperationExpression	~ ( fixed_1 - 1 )		1062289	1					
ANR	1062441	UnaryOperator	~		1062289	0					
ANR	1062442	AdditiveExpression	fixed_1 - 1		1062289	1		-			
ANR	1062443	Identifier	fixed_1		1062289	0					
ANR	1062444	PrimaryExpression	1		1062289	1					
ANR	1062445	ExpressionStatement	self -> orig_dy &= ~ ( fixed_1 - 1 )	506:12:19240:19271	1062289	2	True				
ANR	1062446	AssignmentExpression	self -> orig_dy &= ~ ( fixed_1 - 1 )		1062289	0		&=			
ANR	1062447	PtrMemberAccess	self -> orig_dy		1062289	0					
ANR	1062448	Identifier	self		1062289	0					
ANR	1062449	Identifier	orig_dy		1062289	1					
ANR	1062450	UnaryOperationExpression	~ ( fixed_1 - 1 )		1062289	1					
ANR	1062451	UnaryOperator	~		1062289	0					
ANR	1062452	AdditiveExpression	fixed_1 - 1		1062289	1		-			
ANR	1062453	Identifier	fixed_1		1062289	0					
ANR	1062454	PrimaryExpression	1		1062289	1					
ANR	1062455	ExpressionStatement	self -> orig_dy += fixed_half	507:12:19285:19312	1062289	3	True				
ANR	1062456	AssignmentExpression	self -> orig_dy += fixed_half		1062289	0		+=			
ANR	1062457	PtrMemberAccess	self -> orig_dy		1062289	0					
ANR	1062458	Identifier	self		1062289	0					
ANR	1062459	Identifier	orig_dy		1062289	1					
ANR	1062460	Identifier	fixed_half		1062289	1					
ANR	1062461	ElseStatement	else		1062289	0					
ANR	1062462	CompoundStatement		20:15:892:892	1062289	0					
ANR	1062463	ExpressionStatement	self -> orig_dy += fixed_1	509:12:19343:19367	1062289	0	True				
ANR	1062464	AssignmentExpression	self -> orig_dy += fixed_1		1062289	0		+=			
ANR	1062465	PtrMemberAccess	self -> orig_dy		1062289	0					
ANR	1062466	Identifier	self		1062289	0					
ANR	1062467	Identifier	orig_dy		1062289	1					
ANR	1062468	Identifier	fixed_1		1062289	1					
ANR	1062469	Statement	endif	513:4:19492:19496	1062289	10	True				
ANR	1062470	ReturnType	static inline void		1062289	1					
ANR	1062471	Identifier	t1_hinter__set_origin		1062289	2					
ANR	1062472	ParameterList	"t1_hinter * self , fixed dx , fixed dy"		1062289	3					
ANR	1062473	Parameter	t1_hinter * self	488:41:18398:18413	1062289	0	True				
ANR	1062474	ParameterType	t1_hinter *		1062289	0					
ANR	1062475	Identifier	self		1062289	1					
ANR	1062476	Parameter	fixed dx	488:59:18416:18423	1062289	1	True				
ANR	1062477	ParameterType	fixed		1062289	0					
ANR	1062478	Identifier	dx		1062289	1					
ANR	1062479	Parameter	fixed dy	488:69:18426:18433	1062289	2	True				
ANR	1062480	ParameterType	fixed		1062289	0					
ANR	1062481	Identifier	dy		1062289	1					
ANR	1062482	CFGEntryNode	ENTRY		1062289		True				
ANR	1062483	CFGExitNode	EXIT		1062289		True				
ANR	1062484	Symbol	align_y		1062289						
ANR	1062485	Symbol	d2o		1062289						
ANR	1062486	Symbol	align_x		1062289						
ANR	1062487	Symbol	* self		1062289						
ANR	1062488	Symbol	self -> orig_oy		1062289						
ANR	1062489	Symbol	self -> orig_ox		1062289						
ANR	1062490	Symbol	self -> log2_pixels_x		1062289						
ANR	1062491	Symbol	self -> log2_pixels_y		1062289						
ANR	1062492	Symbol	self -> charpath_flag		1062289						
ANR	1062493	Symbol	self -> orig_dy		1062289						
ANR	1062494	Symbol	dx		1062289						
ANR	1062495	Symbol	fixed_1		1062289						
ANR	1062496	Symbol	self -> log2_subpixels_y		1062289						
ANR	1062497	Symbol	dy		1062289						
ANR	1062498	Symbol	self -> log2_subpixels_x		1062289						
ANR	1062499	Symbol	self		1062289						
ANR	1062500	Symbol	fixed_half		1062289						
ANR	1062501	Symbol	self -> orig_dx		1062289						
ANR	1062502	Symbol	rshift		1062289						
ANR	1062503	Symbol	self -> align_to_pixels		1062289						
ANR	1062504	Function	t1_hinter__set_mapping	516:0:19501:24953							
ANR	1062505	FunctionDef	"t1_hinter__set_mapping (t1_hinter * self , gs_matrix_fixed * ctm , gs_matrix * FontMatrix , gs_matrix * baseFontMatrix , int log2_pixels_x , int log2_pixels_y , int log2_subpixels_x , int log2_subpixels_y , fixed origin_x , fixed origin_y , bool align_to_pixels)"		1062504	0					
ANR	1062506	CompoundStatement		521:0:19837:24953	1062504	0					
ANR	1062507	IdentifierDeclStatement	"float axx = fabs ( ctm -> xx ) , axy = fabs ( ctm -> xy ) ;"	521:3:19841:19887	1062504	0	True				
ANR	1062508	IdentifierDecl	axx = fabs ( ctm -> xx )		1062504	0					
ANR	1062509	IdentifierDeclType	float		1062504	0					
ANR	1062510	Identifier	axx		1062504	1					
ANR	1062511	AssignmentExpression	axx = fabs ( ctm -> xx )		1062504	2		=			
ANR	1062512	Identifier	axx		1062504	0					
ANR	1062513	CallExpression	fabs ( ctm -> xx )		1062504	1					
ANR	1062514	Callee	fabs		1062504	0					
ANR	1062515	Identifier	fabs		1062504	0					
ANR	1062516	ArgumentList	ctm -> xx		1062504	1					
ANR	1062517	Argument	ctm -> xx		1062504	0					
ANR	1062518	PtrMemberAccess	ctm -> xx		1062504	0					
ANR	1062519	Identifier	ctm		1062504	0					
ANR	1062520	Identifier	xx		1062504	1					
ANR	1062521	IdentifierDecl	axy = fabs ( ctm -> xy )		1062504	1					
ANR	1062522	IdentifierDeclType	float		1062504	0					
ANR	1062523	Identifier	axy		1062504	1					
ANR	1062524	AssignmentExpression	axy = fabs ( ctm -> xy )		1062504	2		=			
ANR	1062525	Identifier	axy		1062504	0					
ANR	1062526	CallExpression	fabs ( ctm -> xy )		1062504	1					
ANR	1062527	Callee	fabs		1062504	0					
ANR	1062528	Identifier	fabs		1062504	0					
ANR	1062529	ArgumentList	ctm -> xy		1062504	1					
ANR	1062530	Argument	ctm -> xy		1062504	0					
ANR	1062531	PtrMemberAccess	ctm -> xy		1062504	0					
ANR	1062532	Identifier	ctm		1062504	0					
ANR	1062533	Identifier	xy		1062504	1					
ANR	1062534	IdentifierDeclStatement	"float ayx = fabs ( ctm -> xx ) , ayy = fabs ( ctm -> xy ) ;"	522:4:19893:19939	1062504	1	True				
ANR	1062535	IdentifierDecl	ayx = fabs ( ctm -> xx )		1062504	0					
ANR	1062536	IdentifierDeclType	float		1062504	0					
ANR	1062537	Identifier	ayx		1062504	1					
ANR	1062538	AssignmentExpression	ayx = fabs ( ctm -> xx )		1062504	2		=			
ANR	1062539	Identifier	ayx		1062504	0					
ANR	1062540	CallExpression	fabs ( ctm -> xx )		1062504	1					
ANR	1062541	Callee	fabs		1062504	0					
ANR	1062542	Identifier	fabs		1062504	0					
ANR	1062543	ArgumentList	ctm -> xx		1062504	1					
ANR	1062544	Argument	ctm -> xx		1062504	0					
ANR	1062545	PtrMemberAccess	ctm -> xx		1062504	0					
ANR	1062546	Identifier	ctm		1062504	0					
ANR	1062547	Identifier	xx		1062504	1					
ANR	1062548	IdentifierDecl	ayy = fabs ( ctm -> xy )		1062504	1					
ANR	1062549	IdentifierDeclType	float		1062504	0					
ANR	1062550	Identifier	ayy		1062504	1					
ANR	1062551	AssignmentExpression	ayy = fabs ( ctm -> xy )		1062504	2		=			
ANR	1062552	Identifier	ayy		1062504	0					
ANR	1062553	CallExpression	fabs ( ctm -> xy )		1062504	1					
ANR	1062554	Callee	fabs		1062504	0					
ANR	1062555	Identifier	fabs		1062504	0					
ANR	1062556	ArgumentList	ctm -> xy		1062504	1					
ANR	1062557	Argument	ctm -> xy		1062504	0					
ANR	1062558	PtrMemberAccess	ctm -> xy		1062504	0					
ANR	1062559	Identifier	ctm		1062504	0					
ANR	1062560	Identifier	xy		1062504	1					
ANR	1062561	IdentifierDeclStatement	"float scale = max ( axx + axy , ayx + ayy ) ;"	523:4:19945:19984	1062504	2	True				
ANR	1062562	IdentifierDecl	"scale = max ( axx + axy , ayx + ayy )"		1062504	0					
ANR	1062563	IdentifierDeclType	float		1062504	0					
ANR	1062564	Identifier	scale		1062504	1					
ANR	1062565	AssignmentExpression	"scale = max ( axx + axy , ayx + ayy )"		1062504	2		=			
ANR	1062566	Identifier	scale		1062504	0					
ANR	1062567	CallExpression	"max ( axx + axy , ayx + ayy )"		1062504	1					
ANR	1062568	Callee	max		1062504	0					
ANR	1062569	Identifier	max		1062504	0					
ANR	1062570	ArgumentList	axx + axy		1062504	1					
ANR	1062571	Argument	axx + axy		1062504	0					
ANR	1062572	AdditiveExpression	axx + axy		1062504	0		+			
ANR	1062573	Identifier	axx		1062504	0					
ANR	1062574	Identifier	axy		1062504	1					
ANR	1062575	Argument	ayx + ayy		1062504	1					
ANR	1062576	AdditiveExpression	ayx + ayy		1062504	0		+			
ANR	1062577	Identifier	ayx		1062504	0					
ANR	1062578	Identifier	ayy		1062504	1					
ANR	1062579	IdentifierDeclStatement	double_matrix CTM ;	524:4:19990:20007	1062504	3	True				
ANR	1062580	IdentifierDecl	CTM		1062504	0					
ANR	1062581	IdentifierDeclType	double_matrix		1062504	0					
ANR	1062582	Identifier	CTM		1062504	1					
ANR	1062583	IdentifierDeclStatement	int code ;	525:4:20013:20021	1062504	4	True				
ANR	1062584	IdentifierDecl	code		1062504	0					
ANR	1062585	IdentifierDeclType	int		1062504	0					
ANR	1062586	Identifier	code		1062504	1					
ANR	1062587	ExpressionStatement	self -> disable_hinting |= ( scale < 1 / 1024. || scale > 4 )	527:4:20028:20083	1062504	5	True				
ANR	1062588	AssignmentExpression	self -> disable_hinting |= ( scale < 1 / 1024. || scale > 4 )		1062504	0		|=			
ANR	1062589	PtrMemberAccess	self -> disable_hinting		1062504	0					
ANR	1062590	Identifier	self		1062504	0					
ANR	1062591	Identifier	disable_hinting		1062504	1					
ANR	1062592	OrExpression	scale < 1 / 1024. || scale > 4		1062504	1		||			
ANR	1062593	RelationalExpression	scale < 1 / 1024.		1062504	0		<			
ANR	1062594	Identifier	scale		1062504	0					
ANR	1062595	MultiplicativeExpression	1 / 1024.		1062504	1		/			
ANR	1062596	PrimaryExpression	1		1062504	0					
ANR	1062597	PrimaryExpression	1024.		1062504	1					
ANR	1062598	RelationalExpression	scale > 4		1062504	1		>			
ANR	1062599	Identifier	scale		1062504	0					
ANR	1062600	PrimaryExpression	4		1062504	1					
ANR	1062601	ExpressionStatement	self -> pass_through |= self -> disable_hinting	528:4:20089:20132	1062504	6	True				
ANR	1062602	AssignmentExpression	self -> pass_through |= self -> disable_hinting		1062504	0		|=			
ANR	1062603	PtrMemberAccess	self -> pass_through		1062504	0					
ANR	1062604	Identifier	self		1062504	0					
ANR	1062605	Identifier	pass_through		1062504	1					
ANR	1062606	PtrMemberAccess	self -> disable_hinting		1062504	1					
ANR	1062607	Identifier	self		1062504	0					
ANR	1062608	Identifier	disable_hinting		1062504	1					
ANR	1062609	ExpressionStatement	self -> log2_pixels_x = log2_pixels_x	529:4:20138:20173	1062504	7	True				
ANR	1062610	AssignmentExpression	self -> log2_pixels_x = log2_pixels_x		1062504	0		=			
ANR	1062611	PtrMemberAccess	self -> log2_pixels_x		1062504	0					
ANR	1062612	Identifier	self		1062504	0					
ANR	1062613	Identifier	log2_pixels_x		1062504	1					
ANR	1062614	Identifier	log2_pixels_x		1062504	1					
ANR	1062615	ExpressionStatement	self -> log2_pixels_y = log2_pixels_y	530:4:20179:20214	1062504	8	True				
ANR	1062616	AssignmentExpression	self -> log2_pixels_y = log2_pixels_y		1062504	0		=			
ANR	1062617	PtrMemberAccess	self -> log2_pixels_y		1062504	0					
ANR	1062618	Identifier	self		1062504	0					
ANR	1062619	Identifier	log2_pixels_y		1062504	1					
ANR	1062620	Identifier	log2_pixels_y		1062504	1					
ANR	1062621	ExpressionStatement	self -> log2_subpixels_x = log2_subpixels_x	531:4:20220:20261	1062504	9	True				
ANR	1062622	AssignmentExpression	self -> log2_subpixels_x = log2_subpixels_x		1062504	0		=			
ANR	1062623	PtrMemberAccess	self -> log2_subpixels_x		1062504	0					
ANR	1062624	Identifier	self		1062504	0					
ANR	1062625	Identifier	log2_subpixels_x		1062504	1					
ANR	1062626	Identifier	log2_subpixels_x		1062504	1					
ANR	1062627	ExpressionStatement	self -> log2_subpixels_y = log2_subpixels_y	532:4:20267:20308	1062504	10	True				
ANR	1062628	AssignmentExpression	self -> log2_subpixels_y = log2_subpixels_y		1062504	0		=			
ANR	1062629	PtrMemberAccess	self -> log2_subpixels_y		1062504	0					
ANR	1062630	Identifier	self		1062504	0					
ANR	1062631	Identifier	log2_subpixels_y		1062504	1					
ANR	1062632	Identifier	log2_subpixels_y		1062504	1					
ANR	1062633	ExpressionStatement	"double_matrix__set ( & CTM , ctm )"	533:4:20314:20343	1062504	11	True				
ANR	1062634	CallExpression	"double_matrix__set ( & CTM , ctm )"		1062504	0					
ANR	1062635	Callee	double_matrix__set		1062504	0					
ANR	1062636	Identifier	double_matrix__set		1062504	0					
ANR	1062637	ArgumentList	& CTM		1062504	1					
ANR	1062638	Argument	& CTM		1062504	0					
ANR	1062639	UnaryOperationExpression	& CTM		1062504	0					
ANR	1062640	UnaryOperator	&		1062504	0					
ANR	1062641	Identifier	CTM		1062504	1					
ANR	1062642	Argument	ctm		1062504	1					
ANR	1062643	Identifier	ctm		1062504	0					
ANR	1062644	ExpressionStatement	"fraction_matrix__set ( & self -> ctmf , & CTM )"	534:4:20349:20388	1062504	12	True				
ANR	1062645	CallExpression	"fraction_matrix__set ( & self -> ctmf , & CTM )"		1062504	0					
ANR	1062646	Callee	fraction_matrix__set		1062504	0					
ANR	1062647	Identifier	fraction_matrix__set		1062504	0					
ANR	1062648	ArgumentList	& self -> ctmf		1062504	1					
ANR	1062649	Argument	& self -> ctmf		1062504	0					
ANR	1062650	UnaryOperationExpression	& self -> ctmf		1062504	0					
ANR	1062651	UnaryOperator	&		1062504	0					
ANR	1062652	PtrMemberAccess	self -> ctmf		1062504	1					
ANR	1062653	Identifier	self		1062504	0					
ANR	1062654	Identifier	ctmf		1062504	1					
ANR	1062655	Argument	& CTM		1062504	1					
ANR	1062656	UnaryOperationExpression	& CTM		1062504	0					
ANR	1062657	UnaryOperator	&		1062504	0					
ANR	1062658	Identifier	CTM		1062504	1					
ANR	1062659	ExpressionStatement	self -> g2o_fraction_bits = self -> ctmf . bitshift - g2o_bitshift + _fixed_shift	535:4:20394:20469	1062504	13	True				
ANR	1062660	AssignmentExpression	self -> g2o_fraction_bits = self -> ctmf . bitshift - g2o_bitshift + _fixed_shift		1062504	0		=			
ANR	1062661	PtrMemberAccess	self -> g2o_fraction_bits		1062504	0					
ANR	1062662	Identifier	self		1062504	0					
ANR	1062663	Identifier	g2o_fraction_bits		1062504	1					
ANR	1062664	AdditiveExpression	self -> ctmf . bitshift - g2o_bitshift + _fixed_shift		1062504	1		-			
ANR	1062665	MemberAccess	self -> ctmf . bitshift		1062504	0					
ANR	1062666	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1062667	Identifier	self		1062504	0					
ANR	1062668	Identifier	ctmf		1062504	1					
ANR	1062669	Identifier	bitshift		1062504	1					
ANR	1062670	AdditiveExpression	g2o_bitshift + _fixed_shift		1062504	1		+			
ANR	1062671	Identifier	g2o_bitshift		1062504	0					
ANR	1062672	Identifier	_fixed_shift		1062504	1					
ANR	1062673	IfStatement	if ( self -> g2o_fraction_bits > max_coord_bits )		1062504	14					
ANR	1062674	Condition	self -> g2o_fraction_bits > max_coord_bits	536:8:20479:20518	1062504	0	True				
ANR	1062675	RelationalExpression	self -> g2o_fraction_bits > max_coord_bits		1062504	0		>			
ANR	1062676	PtrMemberAccess	self -> g2o_fraction_bits		1062504	0					
ANR	1062677	Identifier	self		1062504	0					
ANR	1062678	Identifier	g2o_fraction_bits		1062504	1					
ANR	1062679	Identifier	max_coord_bits		1062504	1					
ANR	1062680	CompoundStatement		16:50:683:683	1062504	1					
ANR	1062681	ExpressionStatement	"fraction_matrix__drop_bits ( & self -> ctmf , self -> g2o_fraction_bits - max_coord_bits )"	537:8:20531:20612	1062504	0	True				
ANR	1062682	CallExpression	"fraction_matrix__drop_bits ( & self -> ctmf , self -> g2o_fraction_bits - max_coord_bits )"		1062504	0					
ANR	1062683	Callee	fraction_matrix__drop_bits		1062504	0					
ANR	1062684	Identifier	fraction_matrix__drop_bits		1062504	0					
ANR	1062685	ArgumentList	& self -> ctmf		1062504	1					
ANR	1062686	Argument	& self -> ctmf		1062504	0					
ANR	1062687	UnaryOperationExpression	& self -> ctmf		1062504	0					
ANR	1062688	UnaryOperator	&		1062504	0					
ANR	1062689	PtrMemberAccess	self -> ctmf		1062504	1					
ANR	1062690	Identifier	self		1062504	0					
ANR	1062691	Identifier	ctmf		1062504	1					
ANR	1062692	Argument	self -> g2o_fraction_bits - max_coord_bits		1062504	1					
ANR	1062693	AdditiveExpression	self -> g2o_fraction_bits - max_coord_bits		1062504	0		-			
ANR	1062694	PtrMemberAccess	self -> g2o_fraction_bits		1062504	0					
ANR	1062695	Identifier	self		1062504	0					
ANR	1062696	Identifier	g2o_fraction_bits		1062504	1					
ANR	1062697	Identifier	max_coord_bits		1062504	1					
ANR	1062698	ExpressionStatement	self -> g2o_fraction_bits = max_coord_bits	538:8:20622:20662	1062504	1	True				
ANR	1062699	AssignmentExpression	self -> g2o_fraction_bits = max_coord_bits		1062504	0		=			
ANR	1062700	PtrMemberAccess	self -> g2o_fraction_bits		1062504	0					
ANR	1062701	Identifier	self		1062504	0					
ANR	1062702	Identifier	g2o_fraction_bits		1062504	1					
ANR	1062703	Identifier	max_coord_bits		1062504	1					
ANR	1062704	IfStatement	if ( self -> ctmf . denominator != 0 )		1062504	15					
ANR	1062705	Condition	self -> ctmf . denominator != 0	540:8:20678:20704	1062504	0	True				
ANR	1062706	EqualityExpression	self -> ctmf . denominator != 0		1062504	0		!=			
ANR	1062707	MemberAccess	self -> ctmf . denominator		1062504	0					
ANR	1062708	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1062709	Identifier	self		1062504	0					
ANR	1062710	Identifier	ctmf		1062504	1					
ANR	1062711	Identifier	denominator		1062504	1					
ANR	1062712	PrimaryExpression	0		1062504	1					
ANR	1062713	CompoundStatement		20:37:869:869	1062504	1					
ANR	1062714	ExpressionStatement	"code = fraction_matrix__invert_to ( & self -> ctmf , & self -> ctmi )"	541:8:20717:20776	1062504	0	True				
ANR	1062715	AssignmentExpression	"code = fraction_matrix__invert_to ( & self -> ctmf , & self -> ctmi )"		1062504	0		=			
ANR	1062716	Identifier	code		1062504	0					
ANR	1062717	CallExpression	"fraction_matrix__invert_to ( & self -> ctmf , & self -> ctmi )"		1062504	1					
ANR	1062718	Callee	fraction_matrix__invert_to		1062504	0					
ANR	1062719	Identifier	fraction_matrix__invert_to		1062504	0					
ANR	1062720	ArgumentList	& self -> ctmf		1062504	1					
ANR	1062721	Argument	& self -> ctmf		1062504	0					
ANR	1062722	UnaryOperationExpression	& self -> ctmf		1062504	0					
ANR	1062723	UnaryOperator	&		1062504	0					
ANR	1062724	PtrMemberAccess	self -> ctmf		1062504	1					
ANR	1062725	Identifier	self		1062504	0					
ANR	1062726	Identifier	ctmf		1062504	1					
ANR	1062727	Argument	& self -> ctmi		1062504	1					
ANR	1062728	UnaryOperationExpression	& self -> ctmi		1062504	0					
ANR	1062729	UnaryOperator	&		1062504	0					
ANR	1062730	PtrMemberAccess	self -> ctmi		1062504	1					
ANR	1062731	Identifier	self		1062504	0					
ANR	1062732	Identifier	ctmi		1062504	1					
ANR	1062733	IfStatement	if ( code == gs_error_rangecheck )		1062504	1					
ANR	1062734	Condition	code == gs_error_rangecheck	542:12:20838:20864	1062504	0	True				
ANR	1062735	EqualityExpression	code == gs_error_rangecheck		1062504	0		==			
ANR	1062736	Identifier	code		1062504	0					
ANR	1062737	Identifier	gs_error_rangecheck		1062504	1					
ANR	1062738	ExpressionStatement	self -> ctmf . denominator = 0	543:12:20879:20905	1062504	1	True				
ANR	1062739	AssignmentExpression	self -> ctmf . denominator = 0		1062504	0		=			
ANR	1062740	MemberAccess	self -> ctmf . denominator		1062504	0					
ANR	1062741	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1062742	Identifier	self		1062504	0					
ANR	1062743	Identifier	ctmf		1062504	1					
ANR	1062744	Identifier	denominator		1062504	1					
ANR	1062745	PrimaryExpression	0		1062504	1					
ANR	1062746	ElseStatement	else		1062504	0					
ANR	1062747	IfStatement	if ( code < 0 )		1062504	0					
ANR	1062748	Condition	code < 0	544:17:20924:20931	1062504	0	True				
ANR	1062749	RelationalExpression	code < 0		1062504	0		<			
ANR	1062750	Identifier	code		1062504	0					
ANR	1062751	PrimaryExpression	0		1062504	1					
ANR	1062752	ReturnStatement	return code ;	545:12:20946:20957	1062504	1	True				
ANR	1062753	Identifier	code		1062504	0					
ANR	1062754	IfStatement	if ( self -> ctmf . denominator != 0 )		1062504	16					
ANR	1062755	Condition	self -> ctmf . denominator != 0	547:8:20973:20999	1062504	0	True				
ANR	1062756	EqualityExpression	self -> ctmf . denominator != 0		1062504	0		!=			
ANR	1062757	MemberAccess	self -> ctmf . denominator		1062504	0					
ANR	1062758	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1062759	Identifier	self		1062504	0					
ANR	1062760	Identifier	ctmf		1062504	1					
ANR	1062761	Identifier	denominator		1062504	1					
ANR	1062762	PrimaryExpression	0		1062504	1					
ANR	1062763	CompoundStatement		27:37:1164:1164	1062504	1					
ANR	1062764	ExpressionStatement	self -> g2o_fraction = 1 << self -> g2o_fraction_bits	548:8:21012:21061	1062504	0	True				
ANR	1062765	AssignmentExpression	self -> g2o_fraction = 1 << self -> g2o_fraction_bits		1062504	0		=			
ANR	1062766	PtrMemberAccess	self -> g2o_fraction		1062504	0					
ANR	1062767	Identifier	self		1062504	0					
ANR	1062768	Identifier	g2o_fraction		1062504	1					
ANR	1062769	ShiftExpression	1 << self -> g2o_fraction_bits		1062504	1		<<			
ANR	1062770	PrimaryExpression	1		1062504	0					
ANR	1062771	PtrMemberAccess	self -> g2o_fraction_bits		1062504	1					
ANR	1062772	Identifier	self		1062504	0					
ANR	1062773	Identifier	g2o_fraction_bits		1062504	1					
ANR	1062774	IfStatement	if ( self -> g2o_fraction == 0 )		1062504	1					
ANR	1062775	Condition	self -> g2o_fraction == 0	551:12:21218:21240	1062504	0	True				
ANR	1062776	EqualityExpression	self -> g2o_fraction == 0		1062504	0		==			
ANR	1062777	PtrMemberAccess	self -> g2o_fraction		1062504	0					
ANR	1062778	Identifier	self		1062504	0					
ANR	1062779	Identifier	g2o_fraction		1062504	1					
ANR	1062780	PrimaryExpression	0		1062504	1					
ANR	1062781	ExpressionStatement	return_error ( gs_error_limitcheck )	552:12:21255:21288	1062504	1	True				
ANR	1062782	CallExpression	return_error ( gs_error_limitcheck )		1062504	0					
ANR	1062783	Callee	return_error		1062504	0					
ANR	1062784	Identifier	return_error		1062504	0					
ANR	1062785	ArgumentList	gs_error_limitcheck		1062504	1					
ANR	1062786	Argument	gs_error_limitcheck		1062504	0					
ANR	1062787	Identifier	gs_error_limitcheck		1062504	0					
ANR	1062788	IfStatement	if ( self -> ctmf . denominator == 0 || self -> ctmi . denominator == 0 )		1062504	17					
ANR	1062789	Condition	self -> ctmf . denominator == 0 || self -> ctmi . denominator == 0	554:8:21304:21361	1062504	0	True				
ANR	1062790	OrExpression	self -> ctmf . denominator == 0 || self -> ctmi . denominator == 0		1062504	0		||			
ANR	1062791	EqualityExpression	self -> ctmf . denominator == 0		1062504	0		==			
ANR	1062792	MemberAccess	self -> ctmf . denominator		1062504	0					
ANR	1062793	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1062794	Identifier	self		1062504	0					
ANR	1062795	Identifier	ctmf		1062504	1					
ANR	1062796	Identifier	denominator		1062504	1					
ANR	1062797	PrimaryExpression	0		1062504	1					
ANR	1062798	EqualityExpression	self -> ctmi . denominator == 0		1062504	1		==			
ANR	1062799	MemberAccess	self -> ctmi . denominator		1062504	0					
ANR	1062800	PtrMemberAccess	self -> ctmi		1062504	0					
ANR	1062801	Identifier	self		1062504	0					
ANR	1062802	Identifier	ctmi		1062504	1					
ANR	1062803	Identifier	denominator		1062504	1					
ANR	1062804	PrimaryExpression	0		1062504	1					
ANR	1062805	CompoundStatement		34:68:1526:1526	1062504	1					
ANR	1062806	ExpressionStatement	self -> disable_hinting = true	556:8:21415:21443	1062504	0	True				
ANR	1062807	AssignmentExpression	self -> disable_hinting = true		1062504	0		=			
ANR	1062808	PtrMemberAccess	self -> disable_hinting		1062504	0					
ANR	1062809	Identifier	self		1062504	0					
ANR	1062810	Identifier	disable_hinting		1062504	1					
ANR	1062811	Identifier	true		1062504	1					
ANR	1062812	ExpressionStatement	self -> pass_through = true	557:8:21453:21478	1062504	1	True				
ANR	1062813	AssignmentExpression	self -> pass_through = true		1062504	0		=			
ANR	1062814	PtrMemberAccess	self -> pass_through		1062504	0					
ANR	1062815	Identifier	self		1062504	0					
ANR	1062816	Identifier	pass_through		1062504	1					
ANR	1062817	Identifier	true		1062504	1					
ANR	1062818	ExpressionStatement	self -> ctmf . denominator = 1	558:8:21488:21514	1062504	2	True				
ANR	1062819	AssignmentExpression	self -> ctmf . denominator = 1		1062504	0		=			
ANR	1062820	MemberAccess	self -> ctmf . denominator		1062504	0					
ANR	1062821	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1062822	Identifier	self		1062504	0					
ANR	1062823	Identifier	ctmf		1062504	1					
ANR	1062824	Identifier	denominator		1062504	1					
ANR	1062825	PrimaryExpression	1		1062504	1					
ANR	1062826	ExpressionStatement	self -> transposed = ( any_abs ( self -> ctmf . xy ) * 10 > any_abs ( self -> ctmf . xx ) )	560:4:21526:21599	1062504	18	True				
ANR	1062827	AssignmentExpression	self -> transposed = ( any_abs ( self -> ctmf . xy ) * 10 > any_abs ( self -> ctmf . xx ) )		1062504	0		=			
ANR	1062828	PtrMemberAccess	self -> transposed		1062504	0					
ANR	1062829	Identifier	self		1062504	0					
ANR	1062830	Identifier	transposed		1062504	1					
ANR	1062831	RelationalExpression	any_abs ( self -> ctmf . xy ) * 10 > any_abs ( self -> ctmf . xx )		1062504	1		>			
ANR	1062832	MultiplicativeExpression	any_abs ( self -> ctmf . xy ) * 10		1062504	0		*			
ANR	1062833	CallExpression	any_abs ( self -> ctmf . xy )		1062504	0					
ANR	1062834	Callee	any_abs		1062504	0					
ANR	1062835	Identifier	any_abs		1062504	0					
ANR	1062836	ArgumentList	self -> ctmf . xy		1062504	1					
ANR	1062837	Argument	self -> ctmf . xy		1062504	0					
ANR	1062838	MemberAccess	self -> ctmf . xy		1062504	0					
ANR	1062839	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1062840	Identifier	self		1062504	0					
ANR	1062841	Identifier	ctmf		1062504	1					
ANR	1062842	Identifier	xy		1062504	1					
ANR	1062843	PrimaryExpression	10		1062504	1					
ANR	1062844	CallExpression	any_abs ( self -> ctmf . xx )		1062504	1					
ANR	1062845	Callee	any_abs		1062504	0					
ANR	1062846	Identifier	any_abs		1062504	0					
ANR	1062847	ArgumentList	self -> ctmf . xx		1062504	1					
ANR	1062848	Argument	self -> ctmf . xx		1062504	0					
ANR	1062849	MemberAccess	self -> ctmf . xx		1062504	0					
ANR	1062850	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1062851	Identifier	self		1062504	0					
ANR	1062852	Identifier	ctmf		1062504	1					
ANR	1062853	Identifier	xx		1062504	1					
ANR	1062854	CompoundStatement		46:8:1984:2011	1062504	19					
ANR	1062855	IdentifierDeclStatement	double_matrix m ;	565:8:21797:21812	1062504	0	True				
ANR	1062856	IdentifierDecl	m		1062504	0					
ANR	1062857	IdentifierDeclType	double_matrix		1062504	0					
ANR	1062858	Identifier	m		1062504	1					
ANR	1062859	IdentifierDeclStatement	"double vp , sp , div_x , div_y ;"	566:8:21822:21849	1062504	1	True				
ANR	1062860	IdentifierDecl	vp		1062504	0					
ANR	1062861	IdentifierDeclType	double		1062504	0					
ANR	1062862	Identifier	vp		1062504	1					
ANR	1062863	IdentifierDecl	sp		1062504	1					
ANR	1062864	IdentifierDeclType	double		1062504	0					
ANR	1062865	Identifier	sp		1062504	1					
ANR	1062866	IdentifierDecl	div_x		1062504	2					
ANR	1062867	IdentifierDeclType	double		1062504	0					
ANR	1062868	Identifier	div_x		1062504	1					
ANR	1062869	IdentifierDecl	div_y		1062504	3					
ANR	1062870	IdentifierDeclType	double		1062504	0					
ANR	1062871	Identifier	div_y		1062504	1					
ANR	1062872	ExpressionStatement	"code = fraction_matrix__to_double ( & self -> ctmf , & m )"	568:8:21860:21910	1062504	2	True				
ANR	1062873	AssignmentExpression	"code = fraction_matrix__to_double ( & self -> ctmf , & m )"		1062504	0		=			
ANR	1062874	Identifier	code		1062504	0					
ANR	1062875	CallExpression	"fraction_matrix__to_double ( & self -> ctmf , & m )"		1062504	1					
ANR	1062876	Callee	fraction_matrix__to_double		1062504	0					
ANR	1062877	Identifier	fraction_matrix__to_double		1062504	0					
ANR	1062878	ArgumentList	& self -> ctmf		1062504	1					
ANR	1062879	Argument	& self -> ctmf		1062504	0					
ANR	1062880	UnaryOperationExpression	& self -> ctmf		1062504	0					
ANR	1062881	UnaryOperator	&		1062504	0					
ANR	1062882	PtrMemberAccess	self -> ctmf		1062504	1					
ANR	1062883	Identifier	self		1062504	0					
ANR	1062884	Identifier	ctmf		1062504	1					
ANR	1062885	Argument	& m		1062504	1					
ANR	1062886	UnaryOperationExpression	& m		1062504	0					
ANR	1062887	UnaryOperator	&		1062504	0					
ANR	1062888	Identifier	m		1062504	1					
ANR	1062889	IfStatement	if ( code < 0 )		1062504	3					
ANR	1062890	Condition	code < 0	569:12:21924:21931	1062504	0	True				
ANR	1062891	RelationalExpression	code < 0		1062504	0		<			
ANR	1062892	Identifier	code		1062504	0					
ANR	1062893	PrimaryExpression	0		1062504	1					
ANR	1062894	ReturnStatement	return code ;	570:12:21946:21957	1062504	1	True				
ANR	1062895	Identifier	code		1062504	0					
ANR	1062896	ExpressionStatement	vp = any_abs ( m . xx * m . yy - m . yx * m . xy )	571:8:21967:22006	1062504	4	True				
ANR	1062897	AssignmentExpression	vp = any_abs ( m . xx * m . yy - m . yx * m . xy )		1062504	0		=			
ANR	1062898	Identifier	vp		1062504	0					
ANR	1062899	CallExpression	any_abs ( m . xx * m . yy - m . yx * m . xy )		1062504	1					
ANR	1062900	Callee	any_abs		1062504	0					
ANR	1062901	Identifier	any_abs		1062504	0					
ANR	1062902	ArgumentList	m . xx * m . yy - m . yx * m . xy		1062504	1					
ANR	1062903	Argument	m . xx * m . yy - m . yx * m . xy		1062504	0					
ANR	1062904	AdditiveExpression	m . xx * m . yy - m . yx * m . xy		1062504	0		-			
ANR	1062905	MultiplicativeExpression	m . xx * m . yy		1062504	0		*			
ANR	1062906	MemberAccess	m . xx		1062504	0					
ANR	1062907	Identifier	m		1062504	0					
ANR	1062908	Identifier	xx		1062504	1					
ANR	1062909	MemberAccess	m . yy		1062504	1					
ANR	1062910	Identifier	m		1062504	0					
ANR	1062911	Identifier	yy		1062504	1					
ANR	1062912	MultiplicativeExpression	m . yx * m . xy		1062504	1		*			
ANR	1062913	MemberAccess	m . yx		1062504	0					
ANR	1062914	Identifier	m		1062504	0					
ANR	1062915	Identifier	yx		1062504	1					
ANR	1062916	MemberAccess	m . xy		1062504	1					
ANR	1062917	Identifier	m		1062504	0					
ANR	1062918	Identifier	xy		1062504	1					
ANR	1062919	ExpressionStatement	sp = any_abs ( m . xx * m . yx + m . xy * m . yy )	572:8:22016:22055	1062504	5	True				
ANR	1062920	AssignmentExpression	sp = any_abs ( m . xx * m . yx + m . xy * m . yy )		1062504	0		=			
ANR	1062921	Identifier	sp		1062504	0					
ANR	1062922	CallExpression	any_abs ( m . xx * m . yx + m . xy * m . yy )		1062504	1					
ANR	1062923	Callee	any_abs		1062504	0					
ANR	1062924	Identifier	any_abs		1062504	0					
ANR	1062925	ArgumentList	m . xx * m . yx + m . xy * m . yy		1062504	1					
ANR	1062926	Argument	m . xx * m . yx + m . xy * m . yy		1062504	0					
ANR	1062927	AdditiveExpression	m . xx * m . yx + m . xy * m . yy		1062504	0		+			
ANR	1062928	MultiplicativeExpression	m . xx * m . yx		1062504	0		*			
ANR	1062929	MemberAccess	m . xx		1062504	0					
ANR	1062930	Identifier	m		1062504	0					
ANR	1062931	Identifier	xx		1062504	1					
ANR	1062932	MemberAccess	m . yx		1062504	1					
ANR	1062933	Identifier	m		1062504	0					
ANR	1062934	Identifier	yx		1062504	1					
ANR	1062935	MultiplicativeExpression	m . xy * m . yy		1062504	1		*			
ANR	1062936	MemberAccess	m . xy		1062504	0					
ANR	1062937	Identifier	m		1062504	0					
ANR	1062938	Identifier	xy		1062504	1					
ANR	1062939	MemberAccess	m . yy		1062504	1					
ANR	1062940	Identifier	m		1062504	0					
ANR	1062941	Identifier	yy		1062504	1					
ANR	1062942	ExpressionStatement	"div_x = hypot ( m . xx , m . yx )"	573:8:22065:22090	1062504	6	True				
ANR	1062943	AssignmentExpression	"div_x = hypot ( m . xx , m . yx )"		1062504	0		=			
ANR	1062944	Identifier	div_x		1062504	0					
ANR	1062945	CallExpression	"hypot ( m . xx , m . yx )"		1062504	1					
ANR	1062946	Callee	hypot		1062504	0					
ANR	1062947	Identifier	hypot		1062504	0					
ANR	1062948	ArgumentList	m . xx		1062504	1					
ANR	1062949	Argument	m . xx		1062504	0					
ANR	1062950	MemberAccess	m . xx		1062504	0					
ANR	1062951	Identifier	m		1062504	0					
ANR	1062952	Identifier	xx		1062504	1					
ANR	1062953	Argument	m . yx		1062504	1					
ANR	1062954	MemberAccess	m . yx		1062504	0					
ANR	1062955	Identifier	m		1062504	0					
ANR	1062956	Identifier	yx		1062504	1					
ANR	1062957	ExpressionStatement	"div_y = hypot ( m . xy , m . yy )"	574:8:22100:22125	1062504	7	True				
ANR	1062958	AssignmentExpression	"div_y = hypot ( m . xy , m . yy )"		1062504	0		=			
ANR	1062959	Identifier	div_y		1062504	0					
ANR	1062960	CallExpression	"hypot ( m . xy , m . yy )"		1062504	1					
ANR	1062961	Callee	hypot		1062504	0					
ANR	1062962	Identifier	hypot		1062504	0					
ANR	1062963	ArgumentList	m . xy		1062504	1					
ANR	1062964	Argument	m . xy		1062504	0					
ANR	1062965	MemberAccess	m . xy		1062504	0					
ANR	1062966	Identifier	m		1062504	0					
ANR	1062967	Identifier	xy		1062504	1					
ANR	1062968	Argument	m . yy		1062504	1					
ANR	1062969	MemberAccess	m . yy		1062504	0					
ANR	1062970	Identifier	m		1062504	0					
ANR	1062971	Identifier	yy		1062504	1					
ANR	1062972	IfStatement	if ( vp != 0 && div_x != 0 && div_y != 0 )		1062504	8					
ANR	1062973	Condition	vp != 0 && div_x != 0 && div_y != 0	575:12:22139:22173	1062504	0	True				
ANR	1062974	AndExpression	vp != 0 && div_x != 0 && div_y != 0		1062504	0		&&			
ANR	1062975	EqualityExpression	vp != 0		1062504	0		!=			
ANR	1062976	Identifier	vp		1062504	0					
ANR	1062977	PrimaryExpression	0		1062504	1					
ANR	1062978	AndExpression	div_x != 0 && div_y != 0		1062504	1		&&			
ANR	1062979	EqualityExpression	div_x != 0		1062504	0		!=			
ANR	1062980	Identifier	div_x		1062504	0					
ANR	1062981	PrimaryExpression	0		1062504	1					
ANR	1062982	EqualityExpression	div_y != 0		1062504	1		!=			
ANR	1062983	Identifier	div_y		1062504	0					
ANR	1062984	PrimaryExpression	0		1062504	1					
ANR	1062985	CompoundStatement		55:49:2338:2338	1062504	1					
ANR	1062986	IfStatement	if ( ! self -> transposed )		1062504	0					
ANR	1062987	Condition	! self -> transposed	576:16:22194:22210	1062504	0	True				
ANR	1062988	UnaryOperationExpression	! self -> transposed		1062504	0					
ANR	1062989	UnaryOperator	!		1062504	0					
ANR	1062990	PtrMemberAccess	self -> transposed		1062504	1					
ANR	1062991	Identifier	self		1062504	0					
ANR	1062992	Identifier	transposed		1062504	1					
ANR	1062993	CompoundStatement		56:35:2375:2375	1062504	1					
ANR	1062994	ExpressionStatement	self -> heigt_transform_coef = vp / div_x	577:16:22231:22270	1062504	0	True				
ANR	1062995	AssignmentExpression	self -> heigt_transform_coef = vp / div_x		1062504	0		=			
ANR	1062996	PtrMemberAccess	self -> heigt_transform_coef		1062504	0					
ANR	1062997	Identifier	self		1062504	0					
ANR	1062998	Identifier	heigt_transform_coef		1062504	1					
ANR	1062999	MultiplicativeExpression	vp / div_x		1062504	1		/			
ANR	1063000	Identifier	vp		1062504	0					
ANR	1063001	Identifier	div_x		1062504	1					
ANR	1063002	ExpressionStatement	self -> width_transform_coef = vp / div_y	578:16:22288:22327	1062504	1	True				
ANR	1063003	AssignmentExpression	self -> width_transform_coef = vp / div_y		1062504	0		=			
ANR	1063004	PtrMemberAccess	self -> width_transform_coef		1062504	0					
ANR	1063005	Identifier	self		1062504	0					
ANR	1063006	Identifier	width_transform_coef		1062504	1					
ANR	1063007	MultiplicativeExpression	vp / div_y		1062504	1		/			
ANR	1063008	Identifier	vp		1062504	0					
ANR	1063009	Identifier	div_y		1062504	1					
ANR	1063010	ElseStatement	else		1062504	0					
ANR	1063011	CompoundStatement		59:19:2510:2510	1062504	0					
ANR	1063012	ExpressionStatement	self -> heigt_transform_coef = vp / div_y	580:16:22366:22405	1062504	0	True				
ANR	1063013	AssignmentExpression	self -> heigt_transform_coef = vp / div_y		1062504	0		=			
ANR	1063014	PtrMemberAccess	self -> heigt_transform_coef		1062504	0					
ANR	1063015	Identifier	self		1062504	0					
ANR	1063016	Identifier	heigt_transform_coef		1062504	1					
ANR	1063017	MultiplicativeExpression	vp / div_y		1062504	1		/			
ANR	1063018	Identifier	vp		1062504	0					
ANR	1063019	Identifier	div_y		1062504	1					
ANR	1063020	ExpressionStatement	self -> width_transform_coef = vp / div_x	581:16:22423:22462	1062504	1	True				
ANR	1063021	AssignmentExpression	self -> width_transform_coef = vp / div_x		1062504	0		=			
ANR	1063022	PtrMemberAccess	self -> width_transform_coef		1062504	0					
ANR	1063023	Identifier	self		1062504	0					
ANR	1063024	Identifier	width_transform_coef		1062504	1					
ANR	1063025	MultiplicativeExpression	vp / div_x		1062504	1		/			
ANR	1063026	Identifier	vp		1062504	0					
ANR	1063027	Identifier	div_x		1062504	1					
ANR	1063028	ExpressionStatement	t1_hinter__compute_rat_transform_coef ( self )	583:12:22490:22533	1062504	1	True				
ANR	1063029	CallExpression	t1_hinter__compute_rat_transform_coef ( self )		1062504	0					
ANR	1063030	Callee	t1_hinter__compute_rat_transform_coef		1062504	0					
ANR	1063031	Identifier	t1_hinter__compute_rat_transform_coef		1062504	0					
ANR	1063032	ArgumentList	self		1062504	1					
ANR	1063033	Argument	self		1062504	0					
ANR	1063034	Identifier	self		1062504	0					
ANR	1063035	ExpressionStatement	self -> keep_stem_width = ( sp <= vp / 3 )	584:12:22547:22585	1062504	2	True				
ANR	1063036	AssignmentExpression	self -> keep_stem_width = ( sp <= vp / 3 )		1062504	0		=			
ANR	1063037	PtrMemberAccess	self -> keep_stem_width		1062504	0					
ANR	1063038	Identifier	self		1062504	0					
ANR	1063039	Identifier	keep_stem_width		1062504	1					
ANR	1063040	RelationalExpression	sp <= vp / 3		1062504	1		<=			
ANR	1063041	Identifier	sp		1062504	0					
ANR	1063042	MultiplicativeExpression	vp / 3		1062504	1		/			
ANR	1063043	Identifier	vp		1062504	0					
ANR	1063044	PrimaryExpression	3		1062504	1					
ANR	1063045	CompoundStatement		69:8:2868:2885	1062504	20					
ANR	1063046	IdentifierDeclStatement	"gs_point p0 , p1 , p2 ;"	588:8:22677:22696	1062504	0	True				
ANR	1063047	IdentifierDecl	p0		1062504	0					
ANR	1063048	IdentifierDeclType	gs_point		1062504	0					
ANR	1063049	Identifier	p0		1062504	1					
ANR	1063050	IdentifierDecl	p1		1062504	1					
ANR	1063051	IdentifierDeclType	gs_point		1062504	0					
ANR	1063052	Identifier	p1		1062504	1					
ANR	1063053	IdentifierDecl	p2		1062504	2					
ANR	1063054	IdentifierDeclType	gs_point		1062504	0					
ANR	1063055	Identifier	p2		1062504	1					
ANR	1063056	IdentifierDeclStatement	"double d0 , d1 , d2 ;"	589:8:22706:22723	1062504	1	True				
ANR	1063057	IdentifierDecl	d0		1062504	0					
ANR	1063058	IdentifierDeclType	double		1062504	0					
ANR	1063059	Identifier	d0		1062504	1					
ANR	1063060	IdentifierDecl	d1		1062504	1					
ANR	1063061	IdentifierDeclType	double		1062504	0					
ANR	1063062	Identifier	d1		1062504	1					
ANR	1063063	IdentifierDecl	d2		1062504	2					
ANR	1063064	IdentifierDeclType	double		1062504	0					
ANR	1063065	Identifier	d2		1062504	1					
ANR	1063066	ExpressionStatement	"gs_distance_transform ( 0 , 1 , baseFontMatrix , & p0 )"	591:8:22734:22782	1062504	2	True				
ANR	1063067	CallExpression	"gs_distance_transform ( 0 , 1 , baseFontMatrix , & p0 )"		1062504	0					
ANR	1063068	Callee	gs_distance_transform		1062504	0					
ANR	1063069	Identifier	gs_distance_transform		1062504	0					
ANR	1063070	ArgumentList	0		1062504	1					
ANR	1063071	Argument	0		1062504	0					
ANR	1063072	PrimaryExpression	0		1062504	0					
ANR	1063073	Argument	1		1062504	1					
ANR	1063074	PrimaryExpression	1		1062504	0					
ANR	1063075	Argument	baseFontMatrix		1062504	2					
ANR	1063076	Identifier	baseFontMatrix		1062504	0					
ANR	1063077	Argument	& p0		1062504	3					
ANR	1063078	UnaryOperationExpression	& p0		1062504	0					
ANR	1063079	UnaryOperator	&		1062504	0					
ANR	1063080	Identifier	p0		1062504	1					
ANR	1063081	ExpressionStatement	"gs_distance_transform ( 0 , 1 , FontMatrix , & p1 )"	592:8:22792:22836	1062504	3	True				
ANR	1063082	CallExpression	"gs_distance_transform ( 0 , 1 , FontMatrix , & p1 )"		1062504	0					
ANR	1063083	Callee	gs_distance_transform		1062504	0					
ANR	1063084	Identifier	gs_distance_transform		1062504	0					
ANR	1063085	ArgumentList	0		1062504	1					
ANR	1063086	Argument	0		1062504	0					
ANR	1063087	PrimaryExpression	0		1062504	0					
ANR	1063088	Argument	1		1062504	1					
ANR	1063089	PrimaryExpression	1		1062504	0					
ANR	1063090	Argument	FontMatrix		1062504	2					
ANR	1063091	Identifier	FontMatrix		1062504	0					
ANR	1063092	Argument	& p1		1062504	3					
ANR	1063093	UnaryOperationExpression	& p1		1062504	0					
ANR	1063094	UnaryOperator	&		1062504	0					
ANR	1063095	Identifier	p1		1062504	1					
ANR	1063096	ExpressionStatement	"gs_distance_transform ( 0 , 1 , ( gs_matrix * ) ctm , & p2 )"	593:8:22846:22896	1062504	4	True				
ANR	1063097	CallExpression	"gs_distance_transform ( 0 , 1 , ( gs_matrix * ) ctm , & p2 )"		1062504	0					
ANR	1063098	Callee	gs_distance_transform		1062504	0					
ANR	1063099	Identifier	gs_distance_transform		1062504	0					
ANR	1063100	ArgumentList	0		1062504	1					
ANR	1063101	Argument	0		1062504	0					
ANR	1063102	PrimaryExpression	0		1062504	0					
ANR	1063103	Argument	1		1062504	1					
ANR	1063104	PrimaryExpression	1		1062504	0					
ANR	1063105	Argument	( gs_matrix * ) ctm		1062504	2					
ANR	1063106	CastExpression	( gs_matrix * ) ctm		1062504	0					
ANR	1063107	CastTarget	gs_matrix *		1062504	0					
ANR	1063108	Identifier	ctm		1062504	1					
ANR	1063109	Argument	& p2		1062504	3					
ANR	1063110	UnaryOperationExpression	& p2		1062504	0					
ANR	1063111	UnaryOperator	&		1062504	0					
ANR	1063112	Identifier	p2		1062504	1					
ANR	1063113	ExpressionStatement	"d0 = hypot ( p0 . x , p0 . y )"	594:8:22906:22928	1062504	5	True				
ANR	1063114	AssignmentExpression	"d0 = hypot ( p0 . x , p0 . y )"		1062504	0		=			
ANR	1063115	Identifier	d0		1062504	0					
ANR	1063116	CallExpression	"hypot ( p0 . x , p0 . y )"		1062504	1					
ANR	1063117	Callee	hypot		1062504	0					
ANR	1063118	Identifier	hypot		1062504	0					
ANR	1063119	ArgumentList	p0 . x		1062504	1					
ANR	1063120	Argument	p0 . x		1062504	0					
ANR	1063121	MemberAccess	p0 . x		1062504	0					
ANR	1063122	Identifier	p0		1062504	0					
ANR	1063123	Identifier	x		1062504	1					
ANR	1063124	Argument	p0 . y		1062504	1					
ANR	1063125	MemberAccess	p0 . y		1062504	0					
ANR	1063126	Identifier	p0		1062504	0					
ANR	1063127	Identifier	y		1062504	1					
ANR	1063128	ExpressionStatement	"d1 = hypot ( p1 . x , p1 . y )"	595:8:22938:22960	1062504	6	True				
ANR	1063129	AssignmentExpression	"d1 = hypot ( p1 . x , p1 . y )"		1062504	0		=			
ANR	1063130	Identifier	d1		1062504	0					
ANR	1063131	CallExpression	"hypot ( p1 . x , p1 . y )"		1062504	1					
ANR	1063132	Callee	hypot		1062504	0					
ANR	1063133	Identifier	hypot		1062504	0					
ANR	1063134	ArgumentList	p1 . x		1062504	1					
ANR	1063135	Argument	p1 . x		1062504	0					
ANR	1063136	MemberAccess	p1 . x		1062504	0					
ANR	1063137	Identifier	p1		1062504	0					
ANR	1063138	Identifier	x		1062504	1					
ANR	1063139	Argument	p1 . y		1062504	1					
ANR	1063140	MemberAccess	p1 . y		1062504	0					
ANR	1063141	Identifier	p1		1062504	0					
ANR	1063142	Identifier	y		1062504	1					
ANR	1063143	ExpressionStatement	"d2 = hypot ( p2 . x , p2 . y )"	596:8:22970:22992	1062504	7	True				
ANR	1063144	AssignmentExpression	"d2 = hypot ( p2 . x , p2 . y )"		1062504	0		=			
ANR	1063145	Identifier	d2		1062504	0					
ANR	1063146	CallExpression	"hypot ( p2 . x , p2 . y )"		1062504	1					
ANR	1063147	Callee	hypot		1062504	0					
ANR	1063148	Identifier	hypot		1062504	0					
ANR	1063149	ArgumentList	p2 . x		1062504	1					
ANR	1063150	Argument	p2 . x		1062504	0					
ANR	1063151	MemberAccess	p2 . x		1062504	0					
ANR	1063152	Identifier	p2		1062504	0					
ANR	1063153	Identifier	x		1062504	1					
ANR	1063154	Argument	p2 . y		1062504	1					
ANR	1063155	MemberAccess	p2 . y		1062504	0					
ANR	1063156	Identifier	p2		1062504	0					
ANR	1063157	Identifier	y		1062504	1					
ANR	1063158	ExpressionStatement	self -> base_font_scale = d0	597:8:23002:23028	1062504	8	True				
ANR	1063159	AssignmentExpression	self -> base_font_scale = d0		1062504	0		=			
ANR	1063160	PtrMemberAccess	self -> base_font_scale		1062504	0					
ANR	1063161	Identifier	self		1062504	0					
ANR	1063162	Identifier	base_font_scale		1062504	1					
ANR	1063163	Identifier	d0		1062504	1					
ANR	1063164	ExpressionStatement	self -> font_size = floor ( d1 / d0 * 10000 + 0.5 ) / 10000	598:8:23038:23093	1062504	9	True				
ANR	1063165	AssignmentExpression	self -> font_size = floor ( d1 / d0 * 10000 + 0.5 ) / 10000		1062504	0		=			
ANR	1063166	PtrMemberAccess	self -> font_size		1062504	0					
ANR	1063167	Identifier	self		1062504	0					
ANR	1063168	Identifier	font_size		1062504	1					
ANR	1063169	MultiplicativeExpression	floor ( d1 / d0 * 10000 + 0.5 ) / 10000		1062504	1		/			
ANR	1063170	CallExpression	floor ( d1 / d0 * 10000 + 0.5 )		1062504	0					
ANR	1063171	Callee	floor		1062504	0					
ANR	1063172	Identifier	floor		1062504	0					
ANR	1063173	ArgumentList	d1 / d0 * 10000 + 0.5		1062504	1					
ANR	1063174	Argument	d1 / d0 * 10000 + 0.5		1062504	0					
ANR	1063175	AdditiveExpression	d1 / d0 * 10000 + 0.5		1062504	0		+			
ANR	1063176	MultiplicativeExpression	d1 / d0 * 10000		1062504	0		/			
ANR	1063177	Identifier	d1		1062504	0					
ANR	1063178	MultiplicativeExpression	d0 * 10000		1062504	1		*			
ANR	1063179	Identifier	d0		1062504	0					
ANR	1063180	PrimaryExpression	10000		1062504	1					
ANR	1063181	PrimaryExpression	0.5		1062504	1					
ANR	1063182	PrimaryExpression	10000		1062504	1					
ANR	1063183	ExpressionStatement	self -> resolution = floor ( d2 / d1 * 10000000 + 0.5 ) / 10000000	599:8:23103:23164	1062504	10	True				
ANR	1063184	AssignmentExpression	self -> resolution = floor ( d2 / d1 * 10000000 + 0.5 ) / 10000000		1062504	0		=			
ANR	1063185	PtrMemberAccess	self -> resolution		1062504	0					
ANR	1063186	Identifier	self		1062504	0					
ANR	1063187	Identifier	resolution		1062504	1					
ANR	1063188	MultiplicativeExpression	floor ( d2 / d1 * 10000000 + 0.5 ) / 10000000		1062504	1		/			
ANR	1063189	CallExpression	floor ( d2 / d1 * 10000000 + 0.5 )		1062504	0					
ANR	1063190	Callee	floor		1062504	0					
ANR	1063191	Identifier	floor		1062504	0					
ANR	1063192	ArgumentList	d2 / d1 * 10000000 + 0.5		1062504	1					
ANR	1063193	Argument	d2 / d1 * 10000000 + 0.5		1062504	0					
ANR	1063194	AdditiveExpression	d2 / d1 * 10000000 + 0.5		1062504	0		+			
ANR	1063195	MultiplicativeExpression	d2 / d1 * 10000000		1062504	0		/			
ANR	1063196	Identifier	d2		1062504	0					
ANR	1063197	MultiplicativeExpression	d1 * 10000000		1062504	1		*			
ANR	1063198	Identifier	d1		1062504	0					
ANR	1063199	PrimaryExpression	10000000		1062504	1					
ANR	1063200	PrimaryExpression	0.5		1062504	1					
ANR	1063201	PrimaryExpression	10000000		1062504	1					
ANR	1063202	IfStatement	if ( 1 || self -> resolution * self -> font_size >= 2 )		1062504	21					
ANR	1063203	Condition	1 || self -> resolution * self -> font_size >= 2	614:8:23770:23865	1062504	0	True				
ANR	1063204	OrExpression	1 || self -> resolution * self -> font_size >= 2		1062504	0		||			
ANR	1063205	PrimaryExpression	1		1062504	0					
ANR	1063206	RelationalExpression	self -> resolution * self -> font_size >= 2		1062504	1		>=			
ANR	1063207	MultiplicativeExpression	self -> resolution * self -> font_size		1062504	0		*			
ANR	1063208	PtrMemberAccess	self -> resolution		1062504	0					
ANR	1063209	Identifier	self		1062504	0					
ANR	1063210	Identifier	resolution		1062504	1					
ANR	1063211	PtrMemberAccess	self -> font_size		1062504	1					
ANR	1063212	Identifier	self		1062504	0					
ANR	1063213	Identifier	font_size		1062504	1					
ANR	1063214	PrimaryExpression	2		1062504	1					
ANR	1063215	CompoundStatement		95:53:4030:4030	1062504	1					
ANR	1063216	ExpressionStatement	self -> grid_fit_y = ( any_abs ( self -> ctmf . xy ) * 10 < any_abs ( self -> ctmf . xx ) || any_abs ( self -> ctmf . xx ) * 10 < any_abs ( self -> ctmf . xy ) )	617:8:23938:24095	1062504	0	True				
ANR	1063217	AssignmentExpression	self -> grid_fit_y = ( any_abs ( self -> ctmf . xy ) * 10 < any_abs ( self -> ctmf . xx ) || any_abs ( self -> ctmf . xx ) * 10 < any_abs ( self -> ctmf . xy ) )		1062504	0		=			
ANR	1063218	PtrMemberAccess	self -> grid_fit_y		1062504	0					
ANR	1063219	Identifier	self		1062504	0					
ANR	1063220	Identifier	grid_fit_y		1062504	1					
ANR	1063221	OrExpression	any_abs ( self -> ctmf . xy ) * 10 < any_abs ( self -> ctmf . xx ) || any_abs ( self -> ctmf . xx ) * 10 < any_abs ( self -> ctmf . xy )		1062504	1		||			
ANR	1063222	RelationalExpression	any_abs ( self -> ctmf . xy ) * 10 < any_abs ( self -> ctmf . xx )		1062504	0		<			
ANR	1063223	MultiplicativeExpression	any_abs ( self -> ctmf . xy ) * 10		1062504	0		*			
ANR	1063224	CallExpression	any_abs ( self -> ctmf . xy )		1062504	0					
ANR	1063225	Callee	any_abs		1062504	0					
ANR	1063226	Identifier	any_abs		1062504	0					
ANR	1063227	ArgumentList	self -> ctmf . xy		1062504	1					
ANR	1063228	Argument	self -> ctmf . xy		1062504	0					
ANR	1063229	MemberAccess	self -> ctmf . xy		1062504	0					
ANR	1063230	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1063231	Identifier	self		1062504	0					
ANR	1063232	Identifier	ctmf		1062504	1					
ANR	1063233	Identifier	xy		1062504	1					
ANR	1063234	PrimaryExpression	10		1062504	1					
ANR	1063235	CallExpression	any_abs ( self -> ctmf . xx )		1062504	1					
ANR	1063236	Callee	any_abs		1062504	0					
ANR	1063237	Identifier	any_abs		1062504	0					
ANR	1063238	ArgumentList	self -> ctmf . xx		1062504	1					
ANR	1063239	Argument	self -> ctmf . xx		1062504	0					
ANR	1063240	MemberAccess	self -> ctmf . xx		1062504	0					
ANR	1063241	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1063242	Identifier	self		1062504	0					
ANR	1063243	Identifier	ctmf		1062504	1					
ANR	1063244	Identifier	xx		1062504	1					
ANR	1063245	RelationalExpression	any_abs ( self -> ctmf . xx ) * 10 < any_abs ( self -> ctmf . xy )		1062504	1		<			
ANR	1063246	MultiplicativeExpression	any_abs ( self -> ctmf . xx ) * 10		1062504	0		*			
ANR	1063247	CallExpression	any_abs ( self -> ctmf . xx )		1062504	0					
ANR	1063248	Callee	any_abs		1062504	0					
ANR	1063249	Identifier	any_abs		1062504	0					
ANR	1063250	ArgumentList	self -> ctmf . xx		1062504	1					
ANR	1063251	Argument	self -> ctmf . xx		1062504	0					
ANR	1063252	MemberAccess	self -> ctmf . xx		1062504	0					
ANR	1063253	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1063254	Identifier	self		1062504	0					
ANR	1063255	Identifier	ctmf		1062504	1					
ANR	1063256	Identifier	xx		1062504	1					
ANR	1063257	PrimaryExpression	10		1062504	1					
ANR	1063258	CallExpression	any_abs ( self -> ctmf . xy )		1062504	1					
ANR	1063259	Callee	any_abs		1062504	0					
ANR	1063260	Identifier	any_abs		1062504	0					
ANR	1063261	ArgumentList	self -> ctmf . xy		1062504	1					
ANR	1063262	Argument	self -> ctmf . xy		1062504	0					
ANR	1063263	MemberAccess	self -> ctmf . xy		1062504	0					
ANR	1063264	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1063265	Identifier	self		1062504	0					
ANR	1063266	Identifier	ctmf		1062504	1					
ANR	1063267	Identifier	xy		1062504	1					
ANR	1063268	ExpressionStatement	self -> grid_fit_x = ( any_abs ( self -> ctmf . yx ) * 10 < any_abs ( self -> ctmf . yy ) || any_abs ( self -> ctmf . yy ) * 10 < any_abs ( self -> ctmf . yx ) )	619:8:24105:24262	1062504	1	True				
ANR	1063269	AssignmentExpression	self -> grid_fit_x = ( any_abs ( self -> ctmf . yx ) * 10 < any_abs ( self -> ctmf . yy ) || any_abs ( self -> ctmf . yy ) * 10 < any_abs ( self -> ctmf . yx ) )		1062504	0		=			
ANR	1063270	PtrMemberAccess	self -> grid_fit_x		1062504	0					
ANR	1063271	Identifier	self		1062504	0					
ANR	1063272	Identifier	grid_fit_x		1062504	1					
ANR	1063273	OrExpression	any_abs ( self -> ctmf . yx ) * 10 < any_abs ( self -> ctmf . yy ) || any_abs ( self -> ctmf . yy ) * 10 < any_abs ( self -> ctmf . yx )		1062504	1		||			
ANR	1063274	RelationalExpression	any_abs ( self -> ctmf . yx ) * 10 < any_abs ( self -> ctmf . yy )		1062504	0		<			
ANR	1063275	MultiplicativeExpression	any_abs ( self -> ctmf . yx ) * 10		1062504	0		*			
ANR	1063276	CallExpression	any_abs ( self -> ctmf . yx )		1062504	0					
ANR	1063277	Callee	any_abs		1062504	0					
ANR	1063278	Identifier	any_abs		1062504	0					
ANR	1063279	ArgumentList	self -> ctmf . yx		1062504	1					
ANR	1063280	Argument	self -> ctmf . yx		1062504	0					
ANR	1063281	MemberAccess	self -> ctmf . yx		1062504	0					
ANR	1063282	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1063283	Identifier	self		1062504	0					
ANR	1063284	Identifier	ctmf		1062504	1					
ANR	1063285	Identifier	yx		1062504	1					
ANR	1063286	PrimaryExpression	10		1062504	1					
ANR	1063287	CallExpression	any_abs ( self -> ctmf . yy )		1062504	1					
ANR	1063288	Callee	any_abs		1062504	0					
ANR	1063289	Identifier	any_abs		1062504	0					
ANR	1063290	ArgumentList	self -> ctmf . yy		1062504	1					
ANR	1063291	Argument	self -> ctmf . yy		1062504	0					
ANR	1063292	MemberAccess	self -> ctmf . yy		1062504	0					
ANR	1063293	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1063294	Identifier	self		1062504	0					
ANR	1063295	Identifier	ctmf		1062504	1					
ANR	1063296	Identifier	yy		1062504	1					
ANR	1063297	RelationalExpression	any_abs ( self -> ctmf . yy ) * 10 < any_abs ( self -> ctmf . yx )		1062504	1		<			
ANR	1063298	MultiplicativeExpression	any_abs ( self -> ctmf . yy ) * 10		1062504	0		*			
ANR	1063299	CallExpression	any_abs ( self -> ctmf . yy )		1062504	0					
ANR	1063300	Callee	any_abs		1062504	0					
ANR	1063301	Identifier	any_abs		1062504	0					
ANR	1063302	ArgumentList	self -> ctmf . yy		1062504	1					
ANR	1063303	Argument	self -> ctmf . yy		1062504	0					
ANR	1063304	MemberAccess	self -> ctmf . yy		1062504	0					
ANR	1063305	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1063306	Identifier	self		1062504	0					
ANR	1063307	Identifier	ctmf		1062504	1					
ANR	1063308	Identifier	yy		1062504	1					
ANR	1063309	PrimaryExpression	10		1062504	1					
ANR	1063310	CallExpression	any_abs ( self -> ctmf . yx )		1062504	1					
ANR	1063311	Callee	any_abs		1062504	0					
ANR	1063312	Identifier	any_abs		1062504	0					
ANR	1063313	ArgumentList	self -> ctmf . yx		1062504	1					
ANR	1063314	Argument	self -> ctmf . yx		1062504	0					
ANR	1063315	MemberAccess	self -> ctmf . yx		1062504	0					
ANR	1063316	PtrMemberAccess	self -> ctmf		1062504	0					
ANR	1063317	Identifier	self		1062504	0					
ANR	1063318	Identifier	ctmf		1062504	1					
ANR	1063319	Identifier	yx		1062504	1					
ANR	1063320	ElseStatement	else		1062504	0					
ANR	1063321	CompoundStatement		101:11:4437:4437	1062504	0					
ANR	1063322	ExpressionStatement	self -> grid_fit_x = self -> grid_fit_y = false	623:8:24346:24389	1062504	0	True				
ANR	1063323	AssignmentExpression	self -> grid_fit_x = self -> grid_fit_y = false		1062504	0		=			
ANR	1063324	PtrMemberAccess	self -> grid_fit_x		1062504	0					
ANR	1063325	Identifier	self		1062504	0					
ANR	1063326	Identifier	grid_fit_x		1062504	1					
ANR	1063327	AssignmentExpression	self -> grid_fit_y = false		1062504	1		=			
ANR	1063328	PtrMemberAccess	self -> grid_fit_y		1062504	0					
ANR	1063329	Identifier	self		1062504	0					
ANR	1063330	Identifier	grid_fit_y		1062504	1					
ANR	1063331	Identifier	false		1062504	1					
ANR	1063332	ExpressionStatement	self -> align_to_pixels = align_to_pixels	625:4:24401:24440	1062504	22	True				
ANR	1063333	AssignmentExpression	self -> align_to_pixels = align_to_pixels		1062504	0		=			
ANR	1063334	PtrMemberAccess	self -> align_to_pixels		1062504	0					
ANR	1063335	Identifier	self		1062504	0					
ANR	1063336	Identifier	align_to_pixels		1062504	1					
ANR	1063337	Identifier	align_to_pixels		1062504	1					
ANR	1063338	ExpressionStatement	"t1_hinter__set_origin ( self , origin_x , origin_y )"	626:4:24446:24493	1062504	23	True				
ANR	1063339	CallExpression	"t1_hinter__set_origin ( self , origin_x , origin_y )"		1062504	0					
ANR	1063340	Callee	t1_hinter__set_origin		1062504	0					
ANR	1063341	Identifier	t1_hinter__set_origin		1062504	0					
ANR	1063342	ArgumentList	self		1062504	1					
ANR	1063343	Argument	self		1062504	0					
ANR	1063344	Identifier	self		1062504	0					
ANR	1063345	Argument	origin_x		1062504	1					
ANR	1063346	Identifier	origin_x		1062504	0					
ANR	1063347	Argument	origin_y		1062504	2					
ANR	1063348	Identifier	origin_y		1062504	0					
ANR	1063349	ExpressionStatement	"self -> pixel_o_x = rshift ( self -> g2o_fraction , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"	627:4:24499:24620	1062504	24	True				
ANR	1063350	AssignmentExpression	"self -> pixel_o_x = rshift ( self -> g2o_fraction , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		1062504	0		=			
ANR	1063351	PtrMemberAccess	self -> pixel_o_x		1062504	0					
ANR	1063352	Identifier	self		1062504	0					
ANR	1063353	Identifier	pixel_o_x		1062504	1					
ANR	1063354	CallExpression	"rshift ( self -> g2o_fraction , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		1062504	1					
ANR	1063355	Callee	rshift		1062504	0					
ANR	1063356	Identifier	rshift		1062504	0					
ANR	1063357	ArgumentList	self -> g2o_fraction		1062504	1					
ANR	1063358	Argument	self -> g2o_fraction		1062504	0					
ANR	1063359	PtrMemberAccess	self -> g2o_fraction		1062504	0					
ANR	1063360	Identifier	self		1062504	0					
ANR	1063361	Identifier	g2o_fraction		1062504	1					
ANR	1063362	Argument	self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x		1062504	1					
ANR	1063363	ConditionalExpression	self -> align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x		1062504	0					
ANR	1063364	Condition	self -> align_to_pixels		1062504	0					
ANR	1063365	PtrMemberAccess	self -> align_to_pixels		1062504	0					
ANR	1063366	Identifier	self		1062504	0					
ANR	1063367	Identifier	align_to_pixels		1062504	1					
ANR	1063368	CastExpression	( int ) self -> log2_pixels_x		1062504	1					
ANR	1063369	CastTarget	int		1062504	0					
ANR	1063370	PtrMemberAccess	self -> log2_pixels_x		1062504	1					
ANR	1063371	Identifier	self		1062504	0					
ANR	1063372	Identifier	log2_pixels_x		1062504	1					
ANR	1063373	PtrMemberAccess	self -> log2_subpixels_x		1062504	2					
ANR	1063374	Identifier	self		1062504	0					
ANR	1063375	Identifier	log2_subpixels_x		1062504	1					
ANR	1063376	ExpressionStatement	"self -> pixel_o_y = rshift ( self -> g2o_fraction , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"	628:4:24626:24747	1062504	25	True				
ANR	1063377	AssignmentExpression	"self -> pixel_o_y = rshift ( self -> g2o_fraction , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		1062504	0		=			
ANR	1063378	PtrMemberAccess	self -> pixel_o_y		1062504	0					
ANR	1063379	Identifier	self		1062504	0					
ANR	1063380	Identifier	pixel_o_y		1062504	1					
ANR	1063381	CallExpression	"rshift ( self -> g2o_fraction , ( self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		1062504	1					
ANR	1063382	Callee	rshift		1062504	0					
ANR	1063383	Identifier	rshift		1062504	0					
ANR	1063384	ArgumentList	self -> g2o_fraction		1062504	1					
ANR	1063385	Argument	self -> g2o_fraction		1062504	0					
ANR	1063386	PtrMemberAccess	self -> g2o_fraction		1062504	0					
ANR	1063387	Identifier	self		1062504	0					
ANR	1063388	Identifier	g2o_fraction		1062504	1					
ANR	1063389	Argument	self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y		1062504	1					
ANR	1063390	ConditionalExpression	self -> align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y		1062504	0					
ANR	1063391	Condition	self -> align_to_pixels		1062504	0					
ANR	1063392	PtrMemberAccess	self -> align_to_pixels		1062504	0					
ANR	1063393	Identifier	self		1062504	0					
ANR	1063394	Identifier	align_to_pixels		1062504	1					
ANR	1063395	CastExpression	( int ) self -> log2_pixels_y		1062504	1					
ANR	1063396	CastTarget	int		1062504	0					
ANR	1063397	PtrMemberAccess	self -> log2_pixels_y		1062504	1					
ANR	1063398	Identifier	self		1062504	0					
ANR	1063399	Identifier	log2_pixels_y		1062504	1					
ANR	1063400	PtrMemberAccess	self -> log2_subpixels_y		1062504	2					
ANR	1063401	Identifier	self		1062504	0					
ANR	1063402	Identifier	log2_subpixels_y		1062504	1					
ANR	1063403	ExpressionStatement	"self -> pixel_gh = any_abs ( o2g_dist ( self , self -> pixel_o_x , self -> heigt_transform_coef_inv ) )"	629:4:24753:24842	1062504	26	True				
ANR	1063404	AssignmentExpression	"self -> pixel_gh = any_abs ( o2g_dist ( self , self -> pixel_o_x , self -> heigt_transform_coef_inv ) )"		1062504	0		=			
ANR	1063405	PtrMemberAccess	self -> pixel_gh		1062504	0					
ANR	1063406	Identifier	self		1062504	0					
ANR	1063407	Identifier	pixel_gh		1062504	1					
ANR	1063408	CallExpression	"any_abs ( o2g_dist ( self , self -> pixel_o_x , self -> heigt_transform_coef_inv ) )"		1062504	1					
ANR	1063409	Callee	any_abs		1062504	0					
ANR	1063410	Identifier	any_abs		1062504	0					
ANR	1063411	ArgumentList	"o2g_dist ( self , self -> pixel_o_x , self -> heigt_transform_coef_inv )"		1062504	1					
ANR	1063412	Argument	"o2g_dist ( self , self -> pixel_o_x , self -> heigt_transform_coef_inv )"		1062504	0					
ANR	1063413	CallExpression	"o2g_dist ( self , self -> pixel_o_x , self -> heigt_transform_coef_inv )"		1062504	0					
ANR	1063414	Callee	o2g_dist		1062504	0					
ANR	1063415	Identifier	o2g_dist		1062504	0					
ANR	1063416	ArgumentList	self		1062504	1					
ANR	1063417	Argument	self		1062504	0					
ANR	1063418	Identifier	self		1062504	0					
ANR	1063419	Argument	self -> pixel_o_x		1062504	1					
ANR	1063420	PtrMemberAccess	self -> pixel_o_x		1062504	0					
ANR	1063421	Identifier	self		1062504	0					
ANR	1063422	Identifier	pixel_o_x		1062504	1					
ANR	1063423	Argument	self -> heigt_transform_coef_inv		1062504	2					
ANR	1063424	PtrMemberAccess	self -> heigt_transform_coef_inv		1062504	0					
ANR	1063425	Identifier	self		1062504	0					
ANR	1063426	Identifier	heigt_transform_coef_inv		1062504	1					
ANR	1063427	ExpressionStatement	"self -> pixel_gw = any_abs ( o2g_dist ( self , self -> pixel_o_y , self -> width_transform_coef_inv ) )"	630:4:24848:24937	1062504	27	True				
ANR	1063428	AssignmentExpression	"self -> pixel_gw = any_abs ( o2g_dist ( self , self -> pixel_o_y , self -> width_transform_coef_inv ) )"		1062504	0		=			
ANR	1063429	PtrMemberAccess	self -> pixel_gw		1062504	0					
ANR	1063430	Identifier	self		1062504	0					
ANR	1063431	Identifier	pixel_gw		1062504	1					
ANR	1063432	CallExpression	"any_abs ( o2g_dist ( self , self -> pixel_o_y , self -> width_transform_coef_inv ) )"		1062504	1					
ANR	1063433	Callee	any_abs		1062504	0					
ANR	1063434	Identifier	any_abs		1062504	0					
ANR	1063435	ArgumentList	"o2g_dist ( self , self -> pixel_o_y , self -> width_transform_coef_inv )"		1062504	1					
ANR	1063436	Argument	"o2g_dist ( self , self -> pixel_o_y , self -> width_transform_coef_inv )"		1062504	0					
ANR	1063437	CallExpression	"o2g_dist ( self , self -> pixel_o_y , self -> width_transform_coef_inv )"		1062504	0					
ANR	1063438	Callee	o2g_dist		1062504	0					
ANR	1063439	Identifier	o2g_dist		1062504	0					
ANR	1063440	ArgumentList	self		1062504	1					
ANR	1063441	Argument	self		1062504	0					
ANR	1063442	Identifier	self		1062504	0					
ANR	1063443	Argument	self -> pixel_o_y		1062504	1					
ANR	1063444	PtrMemberAccess	self -> pixel_o_y		1062504	0					
ANR	1063445	Identifier	self		1062504	0					
ANR	1063446	Identifier	pixel_o_y		1062504	1					
ANR	1063447	Argument	self -> width_transform_coef_inv		1062504	2					
ANR	1063448	PtrMemberAccess	self -> width_transform_coef_inv		1062504	0					
ANR	1063449	Identifier	self		1062504	0					
ANR	1063450	Identifier	width_transform_coef_inv		1062504	1					
ANR	1063451	ReturnStatement	return 0 ;	631:4:24943:24951	1062504	28	True				
ANR	1063452	PrimaryExpression	0		1062504	0					
ANR	1063453	ReturnType	int		1062504	1					
ANR	1063454	Identifier	t1_hinter__set_mapping		1062504	2					
ANR	1063455	ParameterList	"t1_hinter * self , gs_matrix_fixed * ctm , gs_matrix * FontMatrix , gs_matrix * baseFontMatrix , int log2_pixels_x , int log2_pixels_y , int log2_subpixels_x , int log2_subpixels_y , fixed origin_x , fixed origin_y , bool align_to_pixels"		1062504	3					
ANR	1063456	Parameter	t1_hinter * self	516:27:19528:19543	1062504	0	True				
ANR	1063457	ParameterType	t1_hinter *		1062504	0					
ANR	1063458	Identifier	self		1062504	1					
ANR	1063459	Parameter	gs_matrix_fixed * ctm	516:45:19546:19566	1062504	1	True				
ANR	1063460	ParameterType	gs_matrix_fixed *		1062504	0					
ANR	1063461	Identifier	ctm		1062504	1					
ANR	1063462	Parameter	gs_matrix * FontMatrix	517:20:19589:19610	1062504	2	True				
ANR	1063463	ParameterType	gs_matrix *		1062504	0					
ANR	1063464	Identifier	FontMatrix		1062504	1					
ANR	1063465	Parameter	gs_matrix * baseFontMatrix	517:44:19613:19638	1062504	3	True				
ANR	1063466	ParameterType	gs_matrix *		1062504	0					
ANR	1063467	Identifier	baseFontMatrix		1062504	1					
ANR	1063468	Parameter	int log2_pixels_x	518:20:19661:19677	1062504	4	True				
ANR	1063469	ParameterType	int		1062504	0					
ANR	1063470	Identifier	log2_pixels_x		1062504	1					
ANR	1063471	Parameter	int log2_pixels_y	518:39:19680:19696	1062504	5	True				
ANR	1063472	ParameterType	int		1062504	0					
ANR	1063473	Identifier	log2_pixels_y		1062504	1					
ANR	1063474	Parameter	int log2_subpixels_x	519:20:19719:19738	1062504	6	True				
ANR	1063475	ParameterType	int		1062504	0					
ANR	1063476	Identifier	log2_subpixels_x		1062504	1					
ANR	1063477	Parameter	int log2_subpixels_y	519:42:19741:19760	1062504	7	True				
ANR	1063478	ParameterType	int		1062504	0					
ANR	1063479	Identifier	log2_subpixels_y		1062504	1					
ANR	1063480	Parameter	fixed origin_x	520:20:19783:19796	1062504	8	True				
ANR	1063481	ParameterType	fixed		1062504	0					
ANR	1063482	Identifier	origin_x		1062504	1					
ANR	1063483	Parameter	fixed origin_y	520:36:19799:19812	1062504	9	True				
ANR	1063484	ParameterType	fixed		1062504	0					
ANR	1063485	Identifier	origin_y		1062504	1					
ANR	1063486	Parameter	bool align_to_pixels	520:52:19815:19834	1062504	10	True				
ANR	1063487	ParameterType	bool		1062504	0					
ANR	1063488	Identifier	align_to_pixels		1062504	1					
ANR	1063489	CFGEntryNode	ENTRY		1062504		True				
ANR	1063490	CFGExitNode	EXIT		1062504		True				
ANR	1063491	Symbol	self -> ctmf . xy		1062504						
ANR	1063492	Symbol	self -> ctmf . xx		1062504						
ANR	1063493	Symbol	self -> pixel_gw		1062504						
ANR	1063494	Symbol	ctm		1062504						
ANR	1063495	Symbol	self -> align_to_pixels		1062504						
ANR	1063496	Symbol	axx		1062504						
ANR	1063497	Symbol	self -> g2o_fraction		1062504						
ANR	1063498	Symbol	axy		1062504						
ANR	1063499	Symbol	& CTM		1062504						
ANR	1063500	Symbol	self -> resolution		1062504						
ANR	1063501	Symbol	* self		1062504						
ANR	1063502	Symbol	o2g_dist		1062504						
ANR	1063503	Symbol	self -> pass_through		1062504						
ANR	1063504	Symbol	g2o_bitshift		1062504						
ANR	1063505	Symbol	fraction_matrix__invert_to		1062504						
ANR	1063506	Symbol	log2_subpixels_x		1062504						
ANR	1063507	Symbol	& self -> ctmi		1062504						
ANR	1063508	Symbol	log2_subpixels_y		1062504						
ANR	1063509	Symbol	self -> transposed		1062504						
ANR	1063510	Symbol	self -> keep_stem_width		1062504						
ANR	1063511	Symbol	ayy		1062504						
ANR	1063512	Symbol	ayx		1062504						
ANR	1063513	Symbol	p2 . x		1062504						
ANR	1063514	Symbol	p2 . y		1062504						
ANR	1063515	Symbol	max_coord_bits		1062504						
ANR	1063516	Symbol	d0		1062504						
ANR	1063517	Symbol	d1		1062504						
ANR	1063518	Symbol	d2		1062504						
ANR	1063519	Symbol	& self -> ctmf		1062504						
ANR	1063520	Symbol	hypot		1062504						
ANR	1063521	Symbol	gs_error_limitcheck		1062504						
ANR	1063522	Symbol	any_abs		1062504						
ANR	1063523	Symbol	sp		1062504						
ANR	1063524	Symbol	rshift		1062504						
ANR	1063525	Symbol	fabs		1062504						
ANR	1063526	Symbol	max		1062504						
ANR	1063527	Symbol	self -> heigt_transform_coef		1062504						
ANR	1063528	Symbol	self -> g2o_fraction_bits		1062504						
ANR	1063529	Symbol	fraction_matrix__to_double		1062504						
ANR	1063530	Symbol	m		1062504						
ANR	1063531	Symbol	ctm -> xx		1062504						
ANR	1063532	Symbol	ctm -> xy		1062504						
ANR	1063533	Symbol	p0 . x		1062504						
ANR	1063534	Symbol	p0 . y		1062504						
ANR	1063535	Symbol	self		1062504						
ANR	1063536	Symbol	* ctm		1062504						
ANR	1063537	Symbol	gs_error_rangecheck		1062504						
ANR	1063538	Symbol	self -> width_transform_coef_inv		1062504						
ANR	1063539	Symbol	log2_pixels_y		1062504						
ANR	1063540	Symbol	self -> grid_fit_x		1062504						
ANR	1063541	Symbol	self -> grid_fit_y		1062504						
ANR	1063542	Symbol	origin_y		1062504						
ANR	1063543	Symbol	align_to_pixels		1062504						
ANR	1063544	Symbol	_fixed_shift		1062504						
ANR	1063545	Symbol	log2_pixels_x		1062504						
ANR	1063546	Symbol	self -> ctmf		1062504						
ANR	1063547	Symbol	self -> ctmi		1062504						
ANR	1063548	Symbol	origin_x		1062504						
ANR	1063549	Symbol	self -> ctmi . denominator		1062504						
ANR	1063550	Symbol	self -> pixel_o_x		1062504						
ANR	1063551	Symbol	self -> pixel_o_y		1062504						
ANR	1063552	Symbol	self -> base_font_scale		1062504						
ANR	1063553	Symbol	true		1062504						
ANR	1063554	Symbol	vp		1062504						
ANR	1063555	Symbol	self -> font_size		1062504						
ANR	1063556	Symbol	p0		1062504						
ANR	1063557	Symbol	p1		1062504						
ANR	1063558	Symbol	p2		1062504						
ANR	1063559	Symbol	code		1062504						
ANR	1063560	Symbol	p1 . x		1062504						
ANR	1063561	Symbol	p1 . y		1062504						
ANR	1063562	Symbol	scale		1062504						
ANR	1063563	Symbol	self -> disable_hinting		1062504						
ANR	1063564	Symbol	self -> log2_subpixels_y		1062504						
ANR	1063565	Symbol	self -> log2_subpixels_x		1062504						
ANR	1063566	Symbol	FontMatrix		1062504						
ANR	1063567	Symbol	floor		1062504						
ANR	1063568	Symbol	m . xx		1062504						
ANR	1063569	Symbol	m . xy		1062504						
ANR	1063570	Symbol	self -> pixel_gh		1062504						
ANR	1063571	Symbol	self -> width_transform_coef		1062504						
ANR	1063572	Symbol	false		1062504						
ANR	1063573	Symbol	self -> heigt_transform_coef_inv		1062504						
ANR	1063574	Symbol	self -> log2_pixels_x		1062504						
ANR	1063575	Symbol	& p1		1062504						
ANR	1063576	Symbol	self -> log2_pixels_y		1062504						
ANR	1063577	Symbol	& p0		1062504						
ANR	1063578	Symbol	& p2		1062504						
ANR	1063579	Symbol	self -> ctmf . yy		1062504						
ANR	1063580	Symbol	self -> ctmf . yx		1062504						
ANR	1063581	Symbol	& m		1062504						
ANR	1063582	Symbol	div_x		1062504						
ANR	1063583	Symbol	self -> ctmf . denominator		1062504						
ANR	1063584	Symbol	div_y		1062504						
ANR	1063585	Symbol	self -> ctmf . bitshift		1062504						
ANR	1063586	Symbol	m . yx		1062504						
ANR	1063587	Symbol	baseFontMatrix		1062504						
ANR	1063588	Symbol	CTM		1062504						
ANR	1063589	Symbol	m . yy		1062504						
ANR	1063590	Function	t1_hinter__make_zone	634:0:24956:25619							
ANR	1063591	FunctionDef	"t1_hinter__make_zone (t1_hinter * self , t1_zone * zone , float * blues , enum t1_zone_type type , t1_glyph_space_coord blue_fuzz)"		1063590	0					
ANR	1063592	CompoundStatement		635:0:25093:25619	1063590	0					
ANR	1063593	IdentifierDeclStatement	t1_glyph_space_coord d = 0 ;	635:3:25097:25123	1063590	0	True				
ANR	1063594	IdentifierDecl	d = 0		1063590	0					
ANR	1063595	IdentifierDeclType	t1_glyph_space_coord		1063590	0					
ANR	1063596	Identifier	d		1063590	1					
ANR	1063597	AssignmentExpression	d = 0		1063590	2		=			
ANR	1063598	Identifier	d		1063590	0					
ANR	1063599	PrimaryExpression	0		1063590	1					
ANR	1063600	ExpressionStatement	zone -> type = type	637:4:25130:25147	1063590	1	True				
ANR	1063601	AssignmentExpression	zone -> type = type		1063590	0		=			
ANR	1063602	PtrMemberAccess	zone -> type		1063590	0					
ANR	1063603	Identifier	zone		1063590	0					
ANR	1063604	Identifier	type		1063590	1					
ANR	1063605	Identifier	type		1063590	1					
ANR	1063606	ExpressionStatement	zone -> y = float2fixed ( blues [ 0 ] + d )	638:4:25153:25198	1063590	2	True				
ANR	1063607	AssignmentExpression	zone -> y = float2fixed ( blues [ 0 ] + d )		1063590	0		=			
ANR	1063608	PtrMemberAccess	zone -> y		1063590	0					
ANR	1063609	Identifier	zone		1063590	0					
ANR	1063610	Identifier	y		1063590	1					
ANR	1063611	CallExpression	float2fixed ( blues [ 0 ] + d )		1063590	1					
ANR	1063612	Callee	float2fixed		1063590	0					
ANR	1063613	Identifier	float2fixed		1063590	0					
ANR	1063614	ArgumentList	blues [ 0 ] + d		1063590	1					
ANR	1063615	Argument	blues [ 0 ] + d		1063590	0					
ANR	1063616	AdditiveExpression	blues [ 0 ] + d		1063590	0		+			
ANR	1063617	ArrayIndexing	blues [ 0 ]		1063590	0					
ANR	1063618	Identifier	blues		1063590	0					
ANR	1063619	PrimaryExpression	0		1063590	1					
ANR	1063620	Identifier	d		1063590	1					
ANR	1063621	ExpressionStatement	zone -> overshoot_y = float2fixed ( blues [ 1 ] + d )	639:4:25204:25249	1063590	3	True				
ANR	1063622	AssignmentExpression	zone -> overshoot_y = float2fixed ( blues [ 1 ] + d )		1063590	0		=			
ANR	1063623	PtrMemberAccess	zone -> overshoot_y		1063590	0					
ANR	1063624	Identifier	zone		1063590	0					
ANR	1063625	Identifier	overshoot_y		1063590	1					
ANR	1063626	CallExpression	float2fixed ( blues [ 1 ] + d )		1063590	1					
ANR	1063627	Callee	float2fixed		1063590	0					
ANR	1063628	Identifier	float2fixed		1063590	0					
ANR	1063629	ArgumentList	blues [ 1 ] + d		1063590	1					
ANR	1063630	Argument	blues [ 1 ] + d		1063590	0					
ANR	1063631	AdditiveExpression	blues [ 1 ] + d		1063590	0		+			
ANR	1063632	ArrayIndexing	blues [ 1 ]		1063590	0					
ANR	1063633	Identifier	blues		1063590	0					
ANR	1063634	PrimaryExpression	1		1063590	1					
ANR	1063635	Identifier	d		1063590	1					
ANR	1063636	ExpressionStatement	"zone -> y_min = min ( zone -> y , zone -> overshoot_y ) - blue_fuzz"	640:4:25255:25312	1063590	4	True				
ANR	1063637	AssignmentExpression	"zone -> y_min = min ( zone -> y , zone -> overshoot_y ) - blue_fuzz"		1063590	0		=			
ANR	1063638	PtrMemberAccess	zone -> y_min		1063590	0					
ANR	1063639	Identifier	zone		1063590	0					
ANR	1063640	Identifier	y_min		1063590	1					
ANR	1063641	AdditiveExpression	"min ( zone -> y , zone -> overshoot_y ) - blue_fuzz"		1063590	1		-			
ANR	1063642	CallExpression	"min ( zone -> y , zone -> overshoot_y )"		1063590	0					
ANR	1063643	Callee	min		1063590	0					
ANR	1063644	Identifier	min		1063590	0					
ANR	1063645	ArgumentList	zone -> y		1063590	1					
ANR	1063646	Argument	zone -> y		1063590	0					
ANR	1063647	PtrMemberAccess	zone -> y		1063590	0					
ANR	1063648	Identifier	zone		1063590	0					
ANR	1063649	Identifier	y		1063590	1					
ANR	1063650	Argument	zone -> overshoot_y		1063590	1					
ANR	1063651	PtrMemberAccess	zone -> overshoot_y		1063590	0					
ANR	1063652	Identifier	zone		1063590	0					
ANR	1063653	Identifier	overshoot_y		1063590	1					
ANR	1063654	Identifier	blue_fuzz		1063590	1					
ANR	1063655	ExpressionStatement	"zone -> y_max = max ( zone -> y , zone -> overshoot_y ) + blue_fuzz"	641:4:25318:25375	1063590	5	True				
ANR	1063656	AssignmentExpression	"zone -> y_max = max ( zone -> y , zone -> overshoot_y ) + blue_fuzz"		1063590	0		=			
ANR	1063657	PtrMemberAccess	zone -> y_max		1063590	0					
ANR	1063658	Identifier	zone		1063590	0					
ANR	1063659	Identifier	y_max		1063590	1					
ANR	1063660	AdditiveExpression	"max ( zone -> y , zone -> overshoot_y ) + blue_fuzz"		1063590	1		+			
ANR	1063661	CallExpression	"max ( zone -> y , zone -> overshoot_y )"		1063590	0					
ANR	1063662	Callee	max		1063590	0					
ANR	1063663	Identifier	max		1063590	0					
ANR	1063664	ArgumentList	zone -> y		1063590	1					
ANR	1063665	Argument	zone -> y		1063590	0					
ANR	1063666	PtrMemberAccess	zone -> y		1063590	0					
ANR	1063667	Identifier	zone		1063590	0					
ANR	1063668	Identifier	y		1063590	1					
ANR	1063669	Argument	zone -> overshoot_y		1063590	1					
ANR	1063670	PtrMemberAccess	zone -> overshoot_y		1063590	0					
ANR	1063671	Identifier	zone		1063590	0					
ANR	1063672	Identifier	overshoot_y		1063590	1					
ANR	1063673	Identifier	blue_fuzz		1063590	1					
ANR	1063674	IfStatement	if ( type == botzone ? zone -> overshoot_y > zone -> y : zone -> overshoot_y < zone -> y )		1063590	6					
ANR	1063675	Condition	type == botzone ? zone -> overshoot_y > zone -> y : zone -> overshoot_y < zone -> y	642:8:25385:25459	1063590	0	True				
ANR	1063676	ConditionalExpression	type == botzone ? zone -> overshoot_y > zone -> y : zone -> overshoot_y < zone -> y		1063590	0					
ANR	1063677	Condition	type == botzone		1063590	0					
ANR	1063678	EqualityExpression	type == botzone		1063590	0		==			
ANR	1063679	Identifier	type		1063590	0					
ANR	1063680	Identifier	botzone		1063590	1					
ANR	1063681	RelationalExpression	zone -> overshoot_y > zone -> y		1063590	1		>			
ANR	1063682	PtrMemberAccess	zone -> overshoot_y		1063590	0					
ANR	1063683	Identifier	zone		1063590	0					
ANR	1063684	Identifier	overshoot_y		1063590	1					
ANR	1063685	PtrMemberAccess	zone -> y		1063590	1					
ANR	1063686	Identifier	zone		1063590	0					
ANR	1063687	Identifier	y		1063590	1					
ANR	1063688	RelationalExpression	zone -> overshoot_y < zone -> y		1063590	2		<			
ANR	1063689	PtrMemberAccess	zone -> overshoot_y		1063590	0					
ANR	1063690	Identifier	zone		1063590	0					
ANR	1063691	Identifier	overshoot_y		1063590	1					
ANR	1063692	PtrMemberAccess	zone -> y		1063590	1					
ANR	1063693	Identifier	zone		1063590	0					
ANR	1063694	Identifier	y		1063590	1					
ANR	1063695	CompoundStatement		9:8:378:403	1063590	1					
ANR	1063696	IdentifierDeclStatement	int v = zone -> overshoot_y ;	643:8:25472:25497	1063590	0	True				
ANR	1063697	IdentifierDecl	v = zone -> overshoot_y		1063590	0					
ANR	1063698	IdentifierDeclType	int		1063590	0					
ANR	1063699	Identifier	v		1063590	1					
ANR	1063700	AssignmentExpression	v = zone -> overshoot_y		1063590	2		=			
ANR	1063701	Identifier	v		1063590	0					
ANR	1063702	PtrMemberAccess	zone -> overshoot_y		1063590	1					
ANR	1063703	Identifier	zone		1063590	0					
ANR	1063704	Identifier	overshoot_y		1063590	1					
ANR	1063705	ExpressionStatement	zone -> overshoot_y = zone -> y	643:35:25499:25526	1063590	1	True				
ANR	1063706	AssignmentExpression	zone -> overshoot_y = zone -> y		1063590	0		=			
ANR	1063707	PtrMemberAccess	zone -> overshoot_y		1063590	0					
ANR	1063708	Identifier	zone		1063590	0					
ANR	1063709	Identifier	overshoot_y		1063590	1					
ANR	1063710	PtrMemberAccess	zone -> y		1063590	1					
ANR	1063711	Identifier	zone		1063590	0					
ANR	1063712	Identifier	y		1063590	1					
ANR	1063713	ExpressionStatement	zone -> y = v	643:64:25528:25539	1063590	2	True				
ANR	1063714	AssignmentExpression	zone -> y = v		1063590	0		=			
ANR	1063715	PtrMemberAccess	zone -> y		1063590	0					
ANR	1063716	Identifier	zone		1063590	0					
ANR	1063717	Identifier	y		1063590	1					
ANR	1063718	Identifier	v		1063590	1					
ANR	1063719	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , zone -> y_min , zone -> y_max )"	645:4:25551:25617	1063590	7	True				
ANR	1063720	CallExpression	"t1_hinter__adjust_matrix_precision ( self , zone -> y_min , zone -> y_max )"		1063590	0					
ANR	1063721	Callee	t1_hinter__adjust_matrix_precision		1063590	0					
ANR	1063722	Identifier	t1_hinter__adjust_matrix_precision		1063590	0					
ANR	1063723	ArgumentList	self		1063590	1					
ANR	1063724	Argument	self		1063590	0					
ANR	1063725	Identifier	self		1063590	0					
ANR	1063726	Argument	zone -> y_min		1063590	1					
ANR	1063727	PtrMemberAccess	zone -> y_min		1063590	0					
ANR	1063728	Identifier	zone		1063590	0					
ANR	1063729	Identifier	y_min		1063590	1					
ANR	1063730	Argument	zone -> y_max		1063590	2					
ANR	1063731	PtrMemberAccess	zone -> y_max		1063590	0					
ANR	1063732	Identifier	zone		1063590	0					
ANR	1063733	Identifier	y_max		1063590	1					
ANR	1063734	ReturnType	static void		1063590	1					
ANR	1063735	Identifier	t1_hinter__make_zone		1063590	2					
ANR	1063736	ParameterList	"t1_hinter * self , t1_zone * zone , float * blues , enum t1_zone_type type , t1_glyph_space_coord blue_fuzz"		1063590	3					
ANR	1063737	Parameter	t1_hinter * self	634:33:24989:25004	1063590	0	True				
ANR	1063738	ParameterType	t1_hinter *		1063590	0					
ANR	1063739	Identifier	self		1063590	1					
ANR	1063740	Parameter	t1_zone * zone	634:51:25007:25019	1063590	1	True				
ANR	1063741	ParameterType	t1_zone *		1063590	0					
ANR	1063742	Identifier	zone		1063590	1					
ANR	1063743	Parameter	float * blues	634:66:25022:25034	1063590	2	True				
ANR	1063744	ParameterType	float *		1063590	0					
ANR	1063745	Identifier	blues		1063590	1					
ANR	1063746	Parameter	enum t1_zone_type type	634:81:25037:25058	1063590	3	True				
ANR	1063747	ParameterType	enum t1_zone_type		1063590	0					
ANR	1063748	Identifier	type		1063590	1					
ANR	1063749	Parameter	t1_glyph_space_coord blue_fuzz	634:105:25061:25090	1063590	4	True				
ANR	1063750	ParameterType	t1_glyph_space_coord		1063590	0					
ANR	1063751	Identifier	blue_fuzz		1063590	1					
ANR	1063752	CFGEntryNode	ENTRY		1063590		True				
ANR	1063753	CFGExitNode	EXIT		1063590		True				
ANR	1063754	Symbol	zone -> y		1063590						
ANR	1063755	Symbol	d		1063590						
ANR	1063756	Symbol	* zone		1063590						
ANR	1063757	Symbol	max		1063590						
ANR	1063758	Symbol	type		1063590						
ANR	1063759	Symbol	blues		1063590						
ANR	1063760	Symbol	zone -> y_max		1063590						
ANR	1063761	Symbol	zone -> type		1063590						
ANR	1063762	Symbol	float2fixed		1063590						
ANR	1063763	Symbol	min		1063590						
ANR	1063764	Symbol	zone		1063590						
ANR	1063765	Symbol	v		1063590						
ANR	1063766	Symbol	self		1063590						
ANR	1063767	Symbol	blue_fuzz		1063590						
ANR	1063768	Symbol	* blues		1063590						
ANR	1063769	Symbol	botzone		1063590						
ANR	1063770	Symbol	zone -> y_min		1063590						
ANR	1063771	Symbol	zone -> overshoot_y		1063590						
ANR	1063772	Function	t1_hinter__realloc_array	648:0:25622:26063							
ANR	1063773	FunctionDef	"t1_hinter__realloc_array (gs_memory_t * mem , void * * a , void * a0 , int * max_count , int elem_size , int enhancement , const char * cname)"		1063772	0					
ANR	1063774	CompoundStatement		649:0:25764:26063	1063772	0					
ANR	1063775	IdentifierDeclStatement	"void * aa = gs_alloc_bytes ( mem , ( * max_count + enhancement * 2 ) * elem_size , cname ) ;"	650:4:25770:25851	1063772	0	True				
ANR	1063776	IdentifierDecl	"* aa = gs_alloc_bytes ( mem , ( * max_count + enhancement * 2 ) * elem_size , cname )"		1063772	0					
ANR	1063777	IdentifierDeclType	void *		1063772	0					
ANR	1063778	Identifier	aa		1063772	1					
ANR	1063779	AssignmentExpression	"* aa = gs_alloc_bytes ( mem , ( * max_count + enhancement * 2 ) * elem_size , cname )"		1063772	2		=			
ANR	1063780	Identifier	aa		1063772	0					
ANR	1063781	CallExpression	"gs_alloc_bytes ( mem , ( * max_count + enhancement * 2 ) * elem_size , cname )"		1063772	1					
ANR	1063782	Callee	gs_alloc_bytes		1063772	0					
ANR	1063783	Identifier	gs_alloc_bytes		1063772	0					
ANR	1063784	ArgumentList	mem		1063772	1					
ANR	1063785	Argument	mem		1063772	0					
ANR	1063786	Identifier	mem		1063772	0					
ANR	1063787	Argument	( * max_count + enhancement * 2 ) * elem_size		1063772	1					
ANR	1063788	MultiplicativeExpression	( * max_count + enhancement * 2 ) * elem_size		1063772	0		*			
ANR	1063789	AdditiveExpression	* max_count + enhancement * 2		1063772	0		+			
ANR	1063790	UnaryOperationExpression	* max_count		1063772	0					
ANR	1063791	UnaryOperator	*		1063772	0					
ANR	1063792	Identifier	max_count		1063772	1					
ANR	1063793	MultiplicativeExpression	enhancement * 2		1063772	1		*			
ANR	1063794	Identifier	enhancement		1063772	0					
ANR	1063795	PrimaryExpression	2		1063772	1					
ANR	1063796	Identifier	elem_size		1063772	1					
ANR	1063797	Argument	cname		1063772	2					
ANR	1063798	Identifier	cname		1063772	0					
ANR	1063799	IfStatement	if ( aa == NULL )		1063772	1					
ANR	1063800	Condition	aa == NULL	652:8:25862:25871	1063772	0	True				
ANR	1063801	EqualityExpression	aa == NULL		1063772	0		==			
ANR	1063802	Identifier	aa		1063772	0					
ANR	1063803	Identifier	NULL		1063772	1					
ANR	1063804	ReturnStatement	return true ;	653:8:25882:25893	1063772	1	True				
ANR	1063805	Identifier	true		1063772	0					
ANR	1063806	ExpressionStatement	"memcpy ( aa , * a , * max_count * elem_size )"	654:4:25899:25937	1063772	2	True				
ANR	1063807	CallExpression	"memcpy ( aa , * a , * max_count * elem_size )"		1063772	0					
ANR	1063808	Callee	memcpy		1063772	0					
ANR	1063809	Identifier	memcpy		1063772	0					
ANR	1063810	ArgumentList	aa		1063772	1					
ANR	1063811	Argument	aa		1063772	0					
ANR	1063812	Identifier	aa		1063772	0					
ANR	1063813	Argument	* a		1063772	1					
ANR	1063814	UnaryOperationExpression	* a		1063772	0					
ANR	1063815	UnaryOperator	*		1063772	0					
ANR	1063816	Identifier	a		1063772	1					
ANR	1063817	Argument	* max_count * elem_size		1063772	2					
ANR	1063818	MultiplicativeExpression	* max_count * elem_size		1063772	0		*			
ANR	1063819	UnaryOperationExpression	* max_count		1063772	0					
ANR	1063820	UnaryOperator	*		1063772	0					
ANR	1063821	Identifier	max_count		1063772	1					
ANR	1063822	Identifier	elem_size		1063772	1					
ANR	1063823	IfStatement	if ( * a != a0 )		1063772	3					
ANR	1063824	Condition	* a != a0	655:8:25947:25954	1063772	0	True				
ANR	1063825	EqualityExpression	* a != a0		1063772	0		!=			
ANR	1063826	UnaryOperationExpression	* a		1063772	0					
ANR	1063827	UnaryOperator	*		1063772	0					
ANR	1063828	Identifier	a		1063772	1					
ANR	1063829	Identifier	a0		1063772	1					
ANR	1063830	ExpressionStatement	"gs_free_object ( mem , * a , cname )"	656:8:25965:25995	1063772	1	True				
ANR	1063831	CallExpression	"gs_free_object ( mem , * a , cname )"		1063772	0					
ANR	1063832	Callee	gs_free_object		1063772	0					
ANR	1063833	Identifier	gs_free_object		1063772	0					
ANR	1063834	ArgumentList	mem		1063772	1					
ANR	1063835	Argument	mem		1063772	0					
ANR	1063836	Identifier	mem		1063772	0					
ANR	1063837	Argument	* a		1063772	1					
ANR	1063838	UnaryOperationExpression	* a		1063772	0					
ANR	1063839	UnaryOperator	*		1063772	0					
ANR	1063840	Identifier	a		1063772	1					
ANR	1063841	Argument	cname		1063772	2					
ANR	1063842	Identifier	cname		1063772	0					
ANR	1063843	ExpressionStatement	* a = aa	657:4:26001:26008	1063772	4	True				
ANR	1063844	AssignmentExpression	* a = aa		1063772	0		=			
ANR	1063845	UnaryOperationExpression	* a		1063772	0					
ANR	1063846	UnaryOperator	*		1063772	0					
ANR	1063847	Identifier	a		1063772	1					
ANR	1063848	Identifier	aa		1063772	1					
ANR	1063849	ExpressionStatement	* max_count += enhancement * 2	658:4:26014:26043	1063772	5	True				
ANR	1063850	AssignmentExpression	* max_count += enhancement * 2		1063772	0		+=			
ANR	1063851	UnaryOperationExpression	* max_count		1063772	0					
ANR	1063852	UnaryOperator	*		1063772	0					
ANR	1063853	Identifier	max_count		1063772	1					
ANR	1063854	MultiplicativeExpression	enhancement * 2		1063772	1		*			
ANR	1063855	Identifier	enhancement		1063772	0					
ANR	1063856	PrimaryExpression	2		1063772	1					
ANR	1063857	ReturnStatement	return false ;	659:4:26049:26061	1063772	6	True				
ANR	1063858	Identifier	false		1063772	0					
ANR	1063859	ReturnType	static bool		1063772	1					
ANR	1063860	Identifier	t1_hinter__realloc_array		1063772	2					
ANR	1063861	ParameterList	"gs_memory_t * mem , void * * a , void * a0 , int * max_count , int elem_size , int enhancement , const char * cname"		1063772	3					
ANR	1063862	Parameter	gs_memory_t * mem	648:37:25659:25674	1063772	0	True				
ANR	1063863	ParameterType	gs_memory_t *		1063772	0					
ANR	1063864	Identifier	mem		1063772	1					
ANR	1063865	Parameter	void * * a	648:55:25677:25684	1063772	1	True				
ANR	1063866	ParameterType	void * *		1063772	0					
ANR	1063867	Identifier	a		1063772	1					
ANR	1063868	Parameter	void * a0	648:65:25687:25694	1063772	2	True				
ANR	1063869	ParameterType	void *		1063772	0					
ANR	1063870	Identifier	a0		1063772	1					
ANR	1063871	Parameter	int * max_count	648:75:25697:25710	1063772	3	True				
ANR	1063872	ParameterType	int *		1063772	0					
ANR	1063873	Identifier	max_count		1063772	1					
ANR	1063874	Parameter	int elem_size	648:91:25713:25725	1063772	4	True				
ANR	1063875	ParameterType	int		1063772	0					
ANR	1063876	Identifier	elem_size		1063772	1					
ANR	1063877	Parameter	int enhancement	648:106:25728:25742	1063772	5	True				
ANR	1063878	ParameterType	int		1063772	0					
ANR	1063879	Identifier	enhancement		1063772	1					
ANR	1063880	Parameter	const char * cname	648:123:25745:25761	1063772	6	True				
ANR	1063881	ParameterType	const char *		1063772	0					
ANR	1063882	Identifier	cname		1063772	1					
ANR	1063883	CFGEntryNode	ENTRY		1063772		True				
ANR	1063884	CFGExitNode	EXIT		1063772		True				
ANR	1063885	Symbol	aa		1063772						
ANR	1063886	Symbol	a		1063772						
ANR	1063887	Symbol	gs_alloc_bytes		1063772						
ANR	1063888	Symbol	NULL		1063772						
ANR	1063889	Symbol	* max_count		1063772						
ANR	1063890	Symbol	cname		1063772						
ANR	1063891	Symbol	false		1063772						
ANR	1063892	Symbol	enhancement		1063772						
ANR	1063893	Symbol	* a		1063772						
ANR	1063894	Symbol	a0		1063772						
ANR	1063895	Symbol	max_count		1063772						
ANR	1063896	Symbol	mem		1063772						
ANR	1063897	Symbol	elem_size		1063772						
ANR	1063898	Symbol	true		1063772						
ANR	1063899	Function	t1_hinter__set_alignment_zones	662:0:26066:27458							
ANR	1063900	FunctionDef	"t1_hinter__set_alignment_zones (gs_memory_t * mem , t1_hinter * self , float * blues , int count , enum t1_zone_type type , bool family)"		1063899	0					
ANR	1063901	CompoundStatement		663:0:26207:27458	1063899	0					
ANR	1063902	IdentifierDeclStatement	"int count2 = count / 2 , i , j ;"	663:3:26211:26239	1063899	0	True				
ANR	1063903	IdentifierDecl	count2 = count / 2		1063899	0					
ANR	1063904	IdentifierDeclType	int		1063899	0					
ANR	1063905	Identifier	count2		1063899	1					
ANR	1063906	AssignmentExpression	count2 = count / 2		1063899	2		=			
ANR	1063907	Identifier	count2		1063899	0					
ANR	1063908	MultiplicativeExpression	count / 2		1063899	1		/			
ANR	1063909	Identifier	count		1063899	0					
ANR	1063910	PrimaryExpression	2		1063899	1					
ANR	1063911	IdentifierDecl	i		1063899	1					
ANR	1063912	IdentifierDeclType	int		1063899	0					
ANR	1063913	Identifier	i		1063899	1					
ANR	1063914	IdentifierDecl	j		1063899	2					
ANR	1063915	IdentifierDeclType	int		1063899	0					
ANR	1063916	Identifier	j		1063899	1					
ANR	1063917	IfStatement	if ( ! family )		1063899	1					
ANR	1063918	Condition	! family	665:8:26250:26256	1063899	0	True				
ANR	1063919	UnaryOperationExpression	! family		1063899	0					
ANR	1063920	UnaryOperator	!		1063899	0					
ANR	1063921	Identifier	family		1063899	1					
ANR	1063922	CompoundStatement		3:17:51:51	1063899	1					
ANR	1063923	IfStatement	if ( count2 + self -> zone_count >= self -> max_zone_count )		1063899	0					
ANR	1063924	Condition	count2 + self -> zone_count >= self -> max_zone_count	667:12:26301:26349	1063899	0	True				
ANR	1063925	RelationalExpression	count2 + self -> zone_count >= self -> max_zone_count		1063899	0		>=			
ANR	1063926	AdditiveExpression	count2 + self -> zone_count		1063899	0		+			
ANR	1063927	Identifier	count2		1063899	0					
ANR	1063928	PtrMemberAccess	self -> zone_count		1063899	1					
ANR	1063929	Identifier	self		1063899	0					
ANR	1063930	Identifier	zone_count		1063899	1					
ANR	1063931	PtrMemberAccess	self -> max_zone_count		1063899	1					
ANR	1063932	Identifier	self		1063899	0					
ANR	1063933	Identifier	max_zone_count		1063899	1					
ANR	1063934	IfStatement	"if ( t1_hinter__realloc_array ( mem , ( void * * ) & self -> zone , self -> zone0 , & self -> max_zone_count , sizeof ( self -> zone0 ) / count_of ( self -> zone0 ) , max ( T1_MAX_ALIGNMENT_ZONES , count ) , s_zone_array ) )"		1063899	1					
ANR	1063935	Condition	"t1_hinter__realloc_array ( mem , ( void * * ) & self -> zone , self -> zone0 , & self -> max_zone_count , sizeof ( self -> zone0 ) / count_of ( self -> zone0 ) , max ( T1_MAX_ALIGNMENT_ZONES , count ) , s_zone_array )"	668:15:26367:26628	1063899	0	True				
ANR	1063936	CallExpression	"t1_hinter__realloc_array ( mem , ( void * * ) & self -> zone , self -> zone0 , & self -> max_zone_count , sizeof ( self -> zone0 ) / count_of ( self -> zone0 ) , max ( T1_MAX_ALIGNMENT_ZONES , count ) , s_zone_array )"		1063899	0					
ANR	1063937	Callee	t1_hinter__realloc_array		1063899	0					
ANR	1063938	Identifier	t1_hinter__realloc_array		1063899	0					
ANR	1063939	ArgumentList	mem		1063899	1					
ANR	1063940	Argument	mem		1063899	0					
ANR	1063941	Identifier	mem		1063899	0					
ANR	1063942	Argument	( void * * ) & self -> zone		1063899	1					
ANR	1063943	CastExpression	( void * * ) & self -> zone		1063899	0					
ANR	1063944	CastTarget	void * *		1063899	0					
ANR	1063945	UnaryOperationExpression	& self -> zone		1063899	1					
ANR	1063946	UnaryOperator	&		1063899	0					
ANR	1063947	PtrMemberAccess	self -> zone		1063899	1					
ANR	1063948	Identifier	self		1063899	0					
ANR	1063949	Identifier	zone		1063899	1					
ANR	1063950	Argument	self -> zone0		1063899	2					
ANR	1063951	PtrMemberAccess	self -> zone0		1063899	0					
ANR	1063952	Identifier	self		1063899	0					
ANR	1063953	Identifier	zone0		1063899	1					
ANR	1063954	Argument	& self -> max_zone_count		1063899	3					
ANR	1063955	UnaryOperationExpression	& self -> max_zone_count		1063899	0					
ANR	1063956	UnaryOperator	&		1063899	0					
ANR	1063957	PtrMemberAccess	self -> max_zone_count		1063899	1					
ANR	1063958	Identifier	self		1063899	0					
ANR	1063959	Identifier	max_zone_count		1063899	1					
ANR	1063960	Argument	sizeof ( self -> zone0 ) / count_of ( self -> zone0 )		1063899	4					
ANR	1063961	MultiplicativeExpression	sizeof ( self -> zone0 ) / count_of ( self -> zone0 )		1063899	0		/			
ANR	1063962	SizeofExpression	sizeof ( self -> zone0 )		1063899	0					
ANR	1063963	Sizeof	sizeof		1063899	0					
ANR	1063964	PtrMemberAccess	self -> zone0		1063899	1					
ANR	1063965	Identifier	self		1063899	0					
ANR	1063966	Identifier	zone0		1063899	1					
ANR	1063967	CallExpression	count_of ( self -> zone0 )		1063899	1					
ANR	1063968	Callee	count_of		1063899	0					
ANR	1063969	Identifier	count_of		1063899	0					
ANR	1063970	ArgumentList	self -> zone0		1063899	1					
ANR	1063971	Argument	self -> zone0		1063899	0					
ANR	1063972	PtrMemberAccess	self -> zone0		1063899	0					
ANR	1063973	Identifier	self		1063899	0					
ANR	1063974	Identifier	zone0		1063899	1					
ANR	1063975	Argument	"max ( T1_MAX_ALIGNMENT_ZONES , count )"		1063899	5					
ANR	1063976	CallExpression	"max ( T1_MAX_ALIGNMENT_ZONES , count )"		1063899	0					
ANR	1063977	Callee	max		1063899	0					
ANR	1063978	Identifier	max		1063899	0					
ANR	1063979	ArgumentList	T1_MAX_ALIGNMENT_ZONES		1063899	1					
ANR	1063980	Argument	T1_MAX_ALIGNMENT_ZONES		1063899	0					
ANR	1063981	Identifier	T1_MAX_ALIGNMENT_ZONES		1063899	0					
ANR	1063982	Argument	count		1063899	1					
ANR	1063983	Identifier	count		1063899	0					
ANR	1063984	Argument	s_zone_array		1063899	6					
ANR	1063985	Identifier	s_zone_array		1063899	0					
ANR	1063986	ExpressionStatement	return_error ( gs_error_VMerror )	671:16:26647:26677	1063899	1	True				
ANR	1063987	CallExpression	return_error ( gs_error_VMerror )		1063899	0					
ANR	1063988	Callee	return_error		1063899	0					
ANR	1063989	Identifier	return_error		1063899	0					
ANR	1063990	ArgumentList	gs_error_VMerror		1063899	1					
ANR	1063991	Argument	gs_error_VMerror		1063899	0					
ANR	1063992	Identifier	gs_error_VMerror		1063899	0					
ANR	1063993	ForStatement	for ( i = 0 ; i < count2 ; i ++ )		1063899	1					
ANR	1063994	ForInit	i = 0 ;	672:13:26692:26697	1063899	0	True				
ANR	1063995	AssignmentExpression	i = 0		1063899	0		=			
ANR	1063996	Identifier	i		1063899	0					
ANR	1063997	PrimaryExpression	0		1063899	1					
ANR	1063998	Condition	i < count2	672:20:26699:26708	1063899	1	True				
ANR	1063999	RelationalExpression	i < count2		1063899	0		<			
ANR	1064000	Identifier	i		1063899	0					
ANR	1064001	Identifier	count2		1063899	1					
ANR	1064002	PostIncDecOperationExpression	i ++	672:32:26711:26713	1063899	2	True				
ANR	1064003	Identifier	i		1063899	0					
ANR	1064004	IncDec	++		1063899	1					
ANR	1064005	ExpressionStatement	"t1_hinter__make_zone ( self , & self -> zone [ self -> zone_count + i ] , blues + i + i , type , self -> blue_fuzz )"	673:12:26728:26827	1063899	3	True				
ANR	1064006	CallExpression	"t1_hinter__make_zone ( self , & self -> zone [ self -> zone_count + i ] , blues + i + i , type , self -> blue_fuzz )"		1063899	0					
ANR	1064007	Callee	t1_hinter__make_zone		1063899	0					
ANR	1064008	Identifier	t1_hinter__make_zone		1063899	0					
ANR	1064009	ArgumentList	self		1063899	1					
ANR	1064010	Argument	self		1063899	0					
ANR	1064011	Identifier	self		1063899	0					
ANR	1064012	Argument	& self -> zone [ self -> zone_count + i ]		1063899	1					
ANR	1064013	UnaryOperationExpression	& self -> zone [ self -> zone_count + i ]		1063899	0					
ANR	1064014	UnaryOperator	&		1063899	0					
ANR	1064015	ArrayIndexing	self -> zone [ self -> zone_count + i ]		1063899	1					
ANR	1064016	PtrMemberAccess	self -> zone		1063899	0					
ANR	1064017	Identifier	self		1063899	0					
ANR	1064018	Identifier	zone		1063899	1					
ANR	1064019	AdditiveExpression	self -> zone_count + i		1063899	1		+			
ANR	1064020	PtrMemberAccess	self -> zone_count		1063899	0					
ANR	1064021	Identifier	self		1063899	0					
ANR	1064022	Identifier	zone_count		1063899	1					
ANR	1064023	Identifier	i		1063899	1					
ANR	1064024	Argument	blues + i + i		1063899	2					
ANR	1064025	AdditiveExpression	blues + i + i		1063899	0		+			
ANR	1064026	Identifier	blues		1063899	0					
ANR	1064027	AdditiveExpression	i + i		1063899	1		+			
ANR	1064028	Identifier	i		1063899	0					
ANR	1064029	Identifier	i		1063899	1					
ANR	1064030	Argument	type		1063899	3					
ANR	1064031	Identifier	type		1063899	0					
ANR	1064032	Argument	self -> blue_fuzz		1063899	4					
ANR	1064033	PtrMemberAccess	self -> blue_fuzz		1063899	0					
ANR	1064034	Identifier	self		1063899	0					
ANR	1064035	Identifier	blue_fuzz		1063899	1					
ANR	1064036	ExpressionStatement	self -> zone_count += count2	674:8:26837:26863	1063899	2	True				
ANR	1064037	AssignmentExpression	self -> zone_count += count2		1063899	0		+=			
ANR	1064038	PtrMemberAccess	self -> zone_count		1063899	0					
ANR	1064039	Identifier	self		1063899	0					
ANR	1064040	Identifier	zone_count		1063899	1					
ANR	1064041	Identifier	count2		1063899	1					
ANR	1064042	ElseStatement	else		1063899	0					
ANR	1064043	CompoundStatement		15:8:731:743	1063899	0					
ANR	1064044	IdentifierDeclStatement	t1_zone zone ;	677:8:26939:26951	1063899	0	True				
ANR	1064045	IdentifierDecl	zone		1063899	0					
ANR	1064046	IdentifierDeclType	t1_zone		1063899	0					
ANR	1064047	Identifier	zone		1063899	1					
ANR	1064048	ForStatement	for ( i = 0 ; i < count2 ; i ++ )		1063899	1					
ANR	1064049	ForInit	i = 0 ;	678:13:26966:26971	1063899	0	True				
ANR	1064050	AssignmentExpression	i = 0		1063899	0		=			
ANR	1064051	Identifier	i		1063899	0					
ANR	1064052	PrimaryExpression	0		1063899	1					
ANR	1064053	Condition	i < count2	678:20:26973:26982	1063899	1	True				
ANR	1064054	RelationalExpression	i < count2		1063899	0		<			
ANR	1064055	Identifier	i		1063899	0					
ANR	1064056	Identifier	count2		1063899	1					
ANR	1064057	PostIncDecOperationExpression	i ++	678:32:26985:26987	1063899	2	True				
ANR	1064058	Identifier	i		1063899	0					
ANR	1064059	IncDec	++		1063899	1					
ANR	1064060	CompoundStatement		16:37:782:782	1063899	3					
ANR	1064061	ExpressionStatement	"t1_hinter__make_zone ( self , & zone , blues + i , type , self -> blue_fuzz )"	679:12:27004:27071	1063899	0	True				
ANR	1064062	CallExpression	"t1_hinter__make_zone ( self , & zone , blues + i , type , self -> blue_fuzz )"		1063899	0					
ANR	1064063	Callee	t1_hinter__make_zone		1063899	0					
ANR	1064064	Identifier	t1_hinter__make_zone		1063899	0					
ANR	1064065	ArgumentList	self		1063899	1					
ANR	1064066	Argument	self		1063899	0					
ANR	1064067	Identifier	self		1063899	0					
ANR	1064068	Argument	& zone		1063899	1					
ANR	1064069	UnaryOperationExpression	& zone		1063899	0					
ANR	1064070	UnaryOperator	&		1063899	0					
ANR	1064071	Identifier	zone		1063899	1					
ANR	1064072	Argument	blues + i		1063899	2					
ANR	1064073	AdditiveExpression	blues + i		1063899	0		+			
ANR	1064074	Identifier	blues		1063899	0					
ANR	1064075	Identifier	i		1063899	1					
ANR	1064076	Argument	type		1063899	3					
ANR	1064077	Identifier	type		1063899	0					
ANR	1064078	Argument	self -> blue_fuzz		1063899	4					
ANR	1064079	PtrMemberAccess	self -> blue_fuzz		1063899	0					
ANR	1064080	Identifier	self		1063899	0					
ANR	1064081	Identifier	blue_fuzz		1063899	1					
ANR	1064082	ForStatement	for ( j = 0 ; j < self -> zone_count ; j ++ )		1063899	1					
ANR	1064083	ForInit	j = 0 ;	680:17:27090:27095	1063899	0	True				
ANR	1064084	AssignmentExpression	j = 0		1063899	0		=			
ANR	1064085	Identifier	j		1063899	0					
ANR	1064086	PrimaryExpression	0		1063899	1					
ANR	1064087	Condition	j < self -> zone_count	680:24:27097:27114	1063899	1	True				
ANR	1064088	RelationalExpression	j < self -> zone_count		1063899	0		<			
ANR	1064089	Identifier	j		1063899	0					
ANR	1064090	PtrMemberAccess	self -> zone_count		1063899	1					
ANR	1064091	Identifier	self		1063899	0					
ANR	1064092	Identifier	zone_count		1063899	1					
ANR	1064093	PostIncDecOperationExpression	j ++	680:44:27117:27119	1063899	2	True				
ANR	1064094	Identifier	j		1063899	0					
ANR	1064095	IncDec	++		1063899	1					
ANR	1064096	CompoundStatement		19:16:932:963	1063899	3					
ANR	1064097	IdentifierDeclStatement	t1_zone * zone1 = & self -> zone [ j ] ;	681:16:27140:27171	1063899	0	True				
ANR	1064098	IdentifierDecl	* zone1 = & self -> zone [ j ]		1063899	0					
ANR	1064099	IdentifierDeclType	t1_zone *		1063899	0					
ANR	1064100	Identifier	zone1		1063899	1					
ANR	1064101	AssignmentExpression	* zone1 = & self -> zone [ j ]		1063899	2		=			
ANR	1064102	Identifier	zone1		1063899	0					
ANR	1064103	UnaryOperationExpression	& self -> zone [ j ]		1063899	1					
ANR	1064104	UnaryOperator	&		1063899	0					
ANR	1064105	ArrayIndexing	self -> zone [ j ]		1063899	1					
ANR	1064106	PtrMemberAccess	self -> zone		1063899	0					
ANR	1064107	Identifier	self		1063899	0					
ANR	1064108	Identifier	zone		1063899	1					
ANR	1064109	Identifier	j		1063899	1					
ANR	1064110	IfStatement	if ( any_abs ( zone . y - zone1 -> y ) * self -> heigt_transform_coef <= 1 && any_abs ( zone . overshoot_y - zone1 -> overshoot_y ) * self -> heigt_transform_coef <= 1 )		1063899	1					
ANR	1064111	Condition	any_abs ( zone . y - zone1 -> y ) * self -> heigt_transform_coef <= 1 && any_abs ( zone . overshoot_y - zone1 -> overshoot_y ) * self -> heigt_transform_coef <= 1	682:20:27193:27376	1063899	0	True				
ANR	1064112	AndExpression	any_abs ( zone . y - zone1 -> y ) * self -> heigt_transform_coef <= 1 && any_abs ( zone . overshoot_y - zone1 -> overshoot_y ) * self -> heigt_transform_coef <= 1		1063899	0		&&			
ANR	1064113	RelationalExpression	any_abs ( zone . y - zone1 -> y ) * self -> heigt_transform_coef <= 1		1063899	0		<=			
ANR	1064114	MultiplicativeExpression	any_abs ( zone . y - zone1 -> y ) * self -> heigt_transform_coef		1063899	0		*			
ANR	1064115	CallExpression	any_abs ( zone . y - zone1 -> y )		1063899	0					
ANR	1064116	Callee	any_abs		1063899	0					
ANR	1064117	Identifier	any_abs		1063899	0					
ANR	1064118	ArgumentList	zone . y - zone1 -> y		1063899	1					
ANR	1064119	Argument	zone . y - zone1 -> y		1063899	0					
ANR	1064120	AdditiveExpression	zone . y - zone1 -> y		1063899	0		-			
ANR	1064121	MemberAccess	zone . y		1063899	0					
ANR	1064122	Identifier	zone		1063899	0					
ANR	1064123	Identifier	y		1063899	1					
ANR	1064124	PtrMemberAccess	zone1 -> y		1063899	1					
ANR	1064125	Identifier	zone1		1063899	0					
ANR	1064126	Identifier	y		1063899	1					
ANR	1064127	PtrMemberAccess	self -> heigt_transform_coef		1063899	1					
ANR	1064128	Identifier	self		1063899	0					
ANR	1064129	Identifier	heigt_transform_coef		1063899	1					
ANR	1064130	PrimaryExpression	1		1063899	1					
ANR	1064131	RelationalExpression	any_abs ( zone . overshoot_y - zone1 -> overshoot_y ) * self -> heigt_transform_coef <= 1		1063899	1		<=			
ANR	1064132	MultiplicativeExpression	any_abs ( zone . overshoot_y - zone1 -> overshoot_y ) * self -> heigt_transform_coef		1063899	0		*			
ANR	1064133	CallExpression	any_abs ( zone . overshoot_y - zone1 -> overshoot_y )		1063899	0					
ANR	1064134	Callee	any_abs		1063899	0					
ANR	1064135	Identifier	any_abs		1063899	0					
ANR	1064136	ArgumentList	zone . overshoot_y - zone1 -> overshoot_y		1063899	1					
ANR	1064137	Argument	zone . overshoot_y - zone1 -> overshoot_y		1063899	0					
ANR	1064138	AdditiveExpression	zone . overshoot_y - zone1 -> overshoot_y		1063899	0		-			
ANR	1064139	MemberAccess	zone . overshoot_y		1063899	0					
ANR	1064140	Identifier	zone		1063899	0					
ANR	1064141	Identifier	overshoot_y		1063899	1					
ANR	1064142	PtrMemberAccess	zone1 -> overshoot_y		1063899	1					
ANR	1064143	Identifier	zone1		1063899	0					
ANR	1064144	Identifier	overshoot_y		1063899	1					
ANR	1064145	PtrMemberAccess	self -> heigt_transform_coef		1063899	1					
ANR	1064146	Identifier	self		1063899	0					
ANR	1064147	Identifier	heigt_transform_coef		1063899	1					
ANR	1064148	PrimaryExpression	1		1063899	1					
ANR	1064149	ExpressionStatement	* zone1 = zone	684:20:27399:27412	1063899	1	True				
ANR	1064150	AssignmentExpression	* zone1 = zone		1063899	0		=			
ANR	1064151	UnaryOperationExpression	* zone1		1063899	0					
ANR	1064152	UnaryOperator	*		1063899	0					
ANR	1064153	Identifier	zone1		1063899	1					
ANR	1064154	Identifier	zone		1063899	1					
ANR	1064155	ReturnStatement	return 0 ;	688:4:27448:27456	1063899	2	True				
ANR	1064156	PrimaryExpression	0		1063899	0					
ANR	1064157	ReturnType	static int		1063899	1					
ANR	1064158	Identifier	t1_hinter__set_alignment_zones		1063899	2					
ANR	1064159	ParameterList	"gs_memory_t * mem , t1_hinter * self , float * blues , int count , enum t1_zone_type type , bool family"		1063899	3					
ANR	1064160	Parameter	gs_memory_t * mem	662:42:26108:26123	1063899	0	True				
ANR	1064161	ParameterType	gs_memory_t *		1063899	0					
ANR	1064162	Identifier	mem		1063899	1					
ANR	1064163	Parameter	t1_hinter * self	662:60:26126:26141	1063899	1	True				
ANR	1064164	ParameterType	t1_hinter *		1063899	0					
ANR	1064165	Identifier	self		1063899	1					
ANR	1064166	Parameter	float * blues	662:78:26144:26156	1063899	2	True				
ANR	1064167	ParameterType	float *		1063899	0					
ANR	1064168	Identifier	blues		1063899	1					
ANR	1064169	Parameter	int count	662:93:26159:26167	1063899	3	True				
ANR	1064170	ParameterType	int		1063899	0					
ANR	1064171	Identifier	count		1063899	1					
ANR	1064172	Parameter	enum t1_zone_type type	662:104:26170:26191	1063899	4	True				
ANR	1064173	ParameterType	enum t1_zone_type		1063899	0					
ANR	1064174	Identifier	type		1063899	1					
ANR	1064175	Parameter	bool family	662:128:26194:26204	1063899	5	True				
ANR	1064176	ParameterType	bool		1063899	0					
ANR	1064177	Identifier	family		1063899	1					
ANR	1064178	CFGEntryNode	ENTRY		1063899		True				
ANR	1064179	CFGExitNode	EXIT		1063899		True				
ANR	1064180	Symbol	count2		1063899						
ANR	1064181	Symbol	* zone1		1063899						
ANR	1064182	Symbol	T1_MAX_ALIGNMENT_ZONES		1063899						
ANR	1064183	Symbol	s_zone_array		1063899						
ANR	1064184	Symbol	t1_hinter__realloc_array		1063899						
ANR	1064185	Symbol	self -> zone		1063899						
ANR	1064186	Symbol	type		1063899						
ANR	1064187	Symbol	blues		1063899						
ANR	1064188	Symbol	self -> zone_count		1063899						
ANR	1064189	Symbol	mem		1063899						
ANR	1064190	Symbol	count_of		1063899						
ANR	1064191	Symbol	zone		1063899						
ANR	1064192	Symbol	any_abs		1063899						
ANR	1064193	Symbol	& self -> zone		1063899						
ANR	1064194	Symbol	self -> blue_fuzz		1063899						
ANR	1064195	Symbol	self -> max_zone_count		1063899						
ANR	1064196	Symbol	max		1063899						
ANR	1064197	Symbol	zone . y		1063899						
ANR	1064198	Symbol	* self		1063899						
ANR	1064199	Symbol	self -> heigt_transform_coef		1063899						
ANR	1064200	Symbol	count		1063899						
ANR	1064201	Symbol	i		1063899						
ANR	1064202	Symbol	zone1 -> overshoot_y		1063899						
ANR	1064203	Symbol	j		1063899						
ANR	1064204	Symbol	zone1		1063899						
ANR	1064205	Symbol	gs_error_VMerror		1063899						
ANR	1064206	Symbol	& zone		1063899						
ANR	1064207	Symbol	self -> zone0		1063899						
ANR	1064208	Symbol	& self -> max_zone_count		1063899						
ANR	1064209	Symbol	self		1063899						
ANR	1064210	Symbol	family		1063899						
ANR	1064211	Symbol	zone1 -> y		1063899						
ANR	1064212	Symbol	zone . overshoot_y		1063899						
ANR	1064213	Function	t1_hinter__set_stem_snap	691:0:27461:30489							
ANR	1064214	FunctionDef	"t1_hinter__set_stem_snap (gs_memory_t * mem , t1_hinter * self , float * value , int count , unsigned short hv)"		1064213	0					
ANR	1064215	CompoundStatement		692:0:27578:30489	1064213	0					
ANR	1064216	IdentifierDeclStatement	"int count0 = self -> stem_snap_count [ hv ] , i , j ;"	692:3:27582:27626	1064213	0	True				
ANR	1064217	IdentifierDecl	count0 = self -> stem_snap_count [ hv ]		1064213	0					
ANR	1064218	IdentifierDeclType	int		1064213	0					
ANR	1064219	Identifier	count0		1064213	1					
ANR	1064220	AssignmentExpression	count0 = self -> stem_snap_count [ hv ]		1064213	2		=			
ANR	1064221	Identifier	count0		1064213	0					
ANR	1064222	ArrayIndexing	self -> stem_snap_count [ hv ]		1064213	1					
ANR	1064223	PtrMemberAccess	self -> stem_snap_count		1064213	0					
ANR	1064224	Identifier	self		1064213	0					
ANR	1064225	Identifier	stem_snap_count		1064213	1					
ANR	1064226	Identifier	hv		1064213	1					
ANR	1064227	IdentifierDecl	i		1064213	1					
ANR	1064228	IdentifierDeclType	int		1064213	0					
ANR	1064229	Identifier	i		1064213	1					
ANR	1064230	IdentifierDecl	j		1064213	2					
ANR	1064231	IdentifierDeclType	int		1064213	0					
ANR	1064232	Identifier	j		1064213	1					
ANR	1064233	IdentifierDeclStatement	t1_glyph_space_coord pixel_g = ( ! hv ? self -> pixel_gh : self -> pixel_gw ) ;	693:4:27632:27702	1064213	1	True				
ANR	1064234	IdentifierDecl	pixel_g = ( ! hv ? self -> pixel_gh : self -> pixel_gw )		1064213	0					
ANR	1064235	IdentifierDeclType	t1_glyph_space_coord		1064213	0					
ANR	1064236	Identifier	pixel_g		1064213	1					
ANR	1064237	AssignmentExpression	pixel_g = ( ! hv ? self -> pixel_gh : self -> pixel_gw )		1064213	2		=			
ANR	1064238	Identifier	pixel_g		1064213	0					
ANR	1064239	ConditionalExpression	! hv ? self -> pixel_gh : self -> pixel_gw		1064213	1					
ANR	1064240	Condition	! hv		1064213	0					
ANR	1064241	UnaryOperationExpression	! hv		1064213	0					
ANR	1064242	UnaryOperator	!		1064213	0					
ANR	1064243	Identifier	hv		1064213	1					
ANR	1064244	PtrMemberAccess	self -> pixel_gh		1064213	1					
ANR	1064245	Identifier	self		1064213	0					
ANR	1064246	Identifier	pixel_gh		1064213	1					
ANR	1064247	PtrMemberAccess	self -> pixel_gw		1064213	2					
ANR	1064248	Identifier	self		1064213	0					
ANR	1064249	Identifier	pixel_gw		1064213	1					
ANR	1064250	IfStatement	if ( pixel_g == 0 )		1064213	2					
ANR	1064251	Condition	pixel_g == 0	695:8:27713:27724	1064213	0	True				
ANR	1064252	EqualityExpression	pixel_g == 0		1064213	0		==			
ANR	1064253	Identifier	pixel_g		1064213	0					
ANR	1064254	PrimaryExpression	0		1064213	1					
ANR	1064255	ReturnStatement	return 0 ;	696:8:27735:27743	1064213	1	True				
ANR	1064256	PrimaryExpression	0		1064213	0					
ANR	1064257	IfStatement	if ( count + count0 >= self -> max_stem_snap_count [ hv ] )		1064213	3					
ANR	1064258	Condition	count + count0 >= self -> max_stem_snap_count [ hv ]	697:8:27753:27799	1064213	0	True				
ANR	1064259	RelationalExpression	count + count0 >= self -> max_stem_snap_count [ hv ]		1064213	0		>=			
ANR	1064260	AdditiveExpression	count + count0		1064213	0		+			
ANR	1064261	Identifier	count		1064213	0					
ANR	1064262	Identifier	count0		1064213	1					
ANR	1064263	ArrayIndexing	self -> max_stem_snap_count [ hv ]		1064213	1					
ANR	1064264	PtrMemberAccess	self -> max_stem_snap_count		1064213	0					
ANR	1064265	Identifier	self		1064213	0					
ANR	1064266	Identifier	max_stem_snap_count		1064213	1					
ANR	1064267	Identifier	hv		1064213	1					
ANR	1064268	IfStatement	"if ( t1_hinter__realloc_array ( mem , ( void * * ) & self -> stem_snap [ hv ] , self -> stem_snap0 [ hv ] , & self -> max_stem_snap_count [ hv ] , sizeof ( self -> stem_snap0 [ 0 ] ) / count_of ( self -> stem_snap0 [ 0 ] ) , max ( T1_MAX_STEM_SNAPS , count ) , s_stem_snap_array ) )"		1064213	1					
ANR	1064269	Condition	"t1_hinter__realloc_array ( mem , ( void * * ) & self -> stem_snap [ hv ] , self -> stem_snap0 [ hv ] , & self -> max_stem_snap_count [ hv ] , sizeof ( self -> stem_snap0 [ 0 ] ) / count_of ( self -> stem_snap0 [ 0 ] ) , max ( T1_MAX_STEM_SNAPS , count ) , s_stem_snap_array )"	698:11:27813:28117	1064213	0	True				
ANR	1064270	CallExpression	"t1_hinter__realloc_array ( mem , ( void * * ) & self -> stem_snap [ hv ] , self -> stem_snap0 [ hv ] , & self -> max_stem_snap_count [ hv ] , sizeof ( self -> stem_snap0 [ 0 ] ) / count_of ( self -> stem_snap0 [ 0 ] ) , max ( T1_MAX_STEM_SNAPS , count ) , s_stem_snap_array )"		1064213	0					
ANR	1064271	Callee	t1_hinter__realloc_array		1064213	0					
ANR	1064272	Identifier	t1_hinter__realloc_array		1064213	0					
ANR	1064273	ArgumentList	mem		1064213	1					
ANR	1064274	Argument	mem		1064213	0					
ANR	1064275	Identifier	mem		1064213	0					
ANR	1064276	Argument	( void * * ) & self -> stem_snap [ hv ]		1064213	1					
ANR	1064277	CastExpression	( void * * ) & self -> stem_snap [ hv ]		1064213	0					
ANR	1064278	CastTarget	void * *		1064213	0					
ANR	1064279	UnaryOperationExpression	& self -> stem_snap [ hv ]		1064213	1					
ANR	1064280	UnaryOperator	&		1064213	0					
ANR	1064281	ArrayIndexing	self -> stem_snap [ hv ]		1064213	1					
ANR	1064282	PtrMemberAccess	self -> stem_snap		1064213	0					
ANR	1064283	Identifier	self		1064213	0					
ANR	1064284	Identifier	stem_snap		1064213	1					
ANR	1064285	Identifier	hv		1064213	1					
ANR	1064286	Argument	self -> stem_snap0 [ hv ]		1064213	2					
ANR	1064287	ArrayIndexing	self -> stem_snap0 [ hv ]		1064213	0					
ANR	1064288	PtrMemberAccess	self -> stem_snap0		1064213	0					
ANR	1064289	Identifier	self		1064213	0					
ANR	1064290	Identifier	stem_snap0		1064213	1					
ANR	1064291	Identifier	hv		1064213	1					
ANR	1064292	Argument	& self -> max_stem_snap_count [ hv ]		1064213	3					
ANR	1064293	UnaryOperationExpression	& self -> max_stem_snap_count [ hv ]		1064213	0					
ANR	1064294	UnaryOperator	&		1064213	0					
ANR	1064295	ArrayIndexing	self -> max_stem_snap_count [ hv ]		1064213	1					
ANR	1064296	PtrMemberAccess	self -> max_stem_snap_count		1064213	0					
ANR	1064297	Identifier	self		1064213	0					
ANR	1064298	Identifier	max_stem_snap_count		1064213	1					
ANR	1064299	Identifier	hv		1064213	1					
ANR	1064300	Argument	sizeof ( self -> stem_snap0 [ 0 ] ) / count_of ( self -> stem_snap0 [ 0 ] )		1064213	4					
ANR	1064301	MultiplicativeExpression	sizeof ( self -> stem_snap0 [ 0 ] ) / count_of ( self -> stem_snap0 [ 0 ] )		1064213	0		/			
ANR	1064302	SizeofExpression	sizeof ( self -> stem_snap0 [ 0 ] )		1064213	0					
ANR	1064303	Sizeof	sizeof		1064213	0					
ANR	1064304	ArrayIndexing	self -> stem_snap0 [ 0 ]		1064213	1					
ANR	1064305	PtrMemberAccess	self -> stem_snap0		1064213	0					
ANR	1064306	Identifier	self		1064213	0					
ANR	1064307	Identifier	stem_snap0		1064213	1					
ANR	1064308	PrimaryExpression	0		1064213	1					
ANR	1064309	CallExpression	count_of ( self -> stem_snap0 [ 0 ] )		1064213	1					
ANR	1064310	Callee	count_of		1064213	0					
ANR	1064311	Identifier	count_of		1064213	0					
ANR	1064312	ArgumentList	self -> stem_snap0 [ 0 ]		1064213	1					
ANR	1064313	Argument	self -> stem_snap0 [ 0 ]		1064213	0					
ANR	1064314	ArrayIndexing	self -> stem_snap0 [ 0 ]		1064213	0					
ANR	1064315	PtrMemberAccess	self -> stem_snap0		1064213	0					
ANR	1064316	Identifier	self		1064213	0					
ANR	1064317	Identifier	stem_snap0		1064213	1					
ANR	1064318	PrimaryExpression	0		1064213	1					
ANR	1064319	Argument	"max ( T1_MAX_STEM_SNAPS , count )"		1064213	5					
ANR	1064320	CallExpression	"max ( T1_MAX_STEM_SNAPS , count )"		1064213	0					
ANR	1064321	Callee	max		1064213	0					
ANR	1064322	Identifier	max		1064213	0					
ANR	1064323	ArgumentList	T1_MAX_STEM_SNAPS		1064213	1					
ANR	1064324	Argument	T1_MAX_STEM_SNAPS		1064213	0					
ANR	1064325	Identifier	T1_MAX_STEM_SNAPS		1064213	0					
ANR	1064326	Argument	count		1064213	1					
ANR	1064327	Identifier	count		1064213	0					
ANR	1064328	Argument	s_stem_snap_array		1064213	6					
ANR	1064329	Identifier	s_stem_snap_array		1064213	0					
ANR	1064330	ExpressionStatement	return_error ( gs_error_VMerror )	701:12:28132:28162	1064213	1	True				
ANR	1064331	CallExpression	return_error ( gs_error_VMerror )		1064213	0					
ANR	1064332	Callee	return_error		1064213	0					
ANR	1064333	Identifier	return_error		1064213	0					
ANR	1064334	ArgumentList	gs_error_VMerror		1064213	1					
ANR	1064335	Argument	gs_error_VMerror		1064213	0					
ANR	1064336	Identifier	gs_error_VMerror		1064213	0					
ANR	1064337	IfStatement	if ( count + count0 >= self -> max_stem_snap_vote_count )		1064213	4					
ANR	1064338	Condition	count + count0 >= self -> max_stem_snap_vote_count	702:8:28172:28219	1064213	0	True				
ANR	1064339	RelationalExpression	count + count0 >= self -> max_stem_snap_vote_count		1064213	0		>=			
ANR	1064340	AdditiveExpression	count + count0		1064213	0		+			
ANR	1064341	Identifier	count		1064213	0					
ANR	1064342	Identifier	count0		1064213	1					
ANR	1064343	PtrMemberAccess	self -> max_stem_snap_vote_count		1064213	1					
ANR	1064344	Identifier	self		1064213	0					
ANR	1064345	Identifier	max_stem_snap_vote_count		1064213	1					
ANR	1064346	IfStatement	"if ( t1_hinter__realloc_array ( mem , ( void * * ) & self -> stem_snap_vote , self -> stem_snap_vote0 , & self -> max_stem_snap_vote_count , sizeof ( self -> stem_snap_vote0 ) / count_of ( self -> stem_snap_vote0 ) , max ( T1_MAX_STEM_SNAPS , count ) , s_stem_snap_vote_array ) )"		1064213	1					
ANR	1064347	Condition	"t1_hinter__realloc_array ( mem , ( void * * ) & self -> stem_snap_vote , self -> stem_snap_vote0 , & self -> max_stem_snap_vote_count , sizeof ( self -> stem_snap_vote0 ) / count_of ( self -> stem_snap_vote0 ) , max ( T1_MAX_STEM_SNAPS , count ) , s_stem_snap_vote_array )"	703:11:28233:28549	1064213	0	True				
ANR	1064348	CallExpression	"t1_hinter__realloc_array ( mem , ( void * * ) & self -> stem_snap_vote , self -> stem_snap_vote0 , & self -> max_stem_snap_vote_count , sizeof ( self -> stem_snap_vote0 ) / count_of ( self -> stem_snap_vote0 ) , max ( T1_MAX_STEM_SNAPS , count ) , s_stem_snap_vote_array )"		1064213	0					
ANR	1064349	Callee	t1_hinter__realloc_array		1064213	0					
ANR	1064350	Identifier	t1_hinter__realloc_array		1064213	0					
ANR	1064351	ArgumentList	mem		1064213	1					
ANR	1064352	Argument	mem		1064213	0					
ANR	1064353	Identifier	mem		1064213	0					
ANR	1064354	Argument	( void * * ) & self -> stem_snap_vote		1064213	1					
ANR	1064355	CastExpression	( void * * ) & self -> stem_snap_vote		1064213	0					
ANR	1064356	CastTarget	void * *		1064213	0					
ANR	1064357	UnaryOperationExpression	& self -> stem_snap_vote		1064213	1					
ANR	1064358	UnaryOperator	&		1064213	0					
ANR	1064359	PtrMemberAccess	self -> stem_snap_vote		1064213	1					
ANR	1064360	Identifier	self		1064213	0					
ANR	1064361	Identifier	stem_snap_vote		1064213	1					
ANR	1064362	Argument	self -> stem_snap_vote0		1064213	2					
ANR	1064363	PtrMemberAccess	self -> stem_snap_vote0		1064213	0					
ANR	1064364	Identifier	self		1064213	0					
ANR	1064365	Identifier	stem_snap_vote0		1064213	1					
ANR	1064366	Argument	& self -> max_stem_snap_vote_count		1064213	3					
ANR	1064367	UnaryOperationExpression	& self -> max_stem_snap_vote_count		1064213	0					
ANR	1064368	UnaryOperator	&		1064213	0					
ANR	1064369	PtrMemberAccess	self -> max_stem_snap_vote_count		1064213	1					
ANR	1064370	Identifier	self		1064213	0					
ANR	1064371	Identifier	max_stem_snap_vote_count		1064213	1					
ANR	1064372	Argument	sizeof ( self -> stem_snap_vote0 ) / count_of ( self -> stem_snap_vote0 )		1064213	4					
ANR	1064373	MultiplicativeExpression	sizeof ( self -> stem_snap_vote0 ) / count_of ( self -> stem_snap_vote0 )		1064213	0		/			
ANR	1064374	SizeofExpression	sizeof ( self -> stem_snap_vote0 )		1064213	0					
ANR	1064375	Sizeof	sizeof		1064213	0					
ANR	1064376	PtrMemberAccess	self -> stem_snap_vote0		1064213	1					
ANR	1064377	Identifier	self		1064213	0					
ANR	1064378	Identifier	stem_snap_vote0		1064213	1					
ANR	1064379	CallExpression	count_of ( self -> stem_snap_vote0 )		1064213	1					
ANR	1064380	Callee	count_of		1064213	0					
ANR	1064381	Identifier	count_of		1064213	0					
ANR	1064382	ArgumentList	self -> stem_snap_vote0		1064213	1					
ANR	1064383	Argument	self -> stem_snap_vote0		1064213	0					
ANR	1064384	PtrMemberAccess	self -> stem_snap_vote0		1064213	0					
ANR	1064385	Identifier	self		1064213	0					
ANR	1064386	Identifier	stem_snap_vote0		1064213	1					
ANR	1064387	Argument	"max ( T1_MAX_STEM_SNAPS , count )"		1064213	5					
ANR	1064388	CallExpression	"max ( T1_MAX_STEM_SNAPS , count )"		1064213	0					
ANR	1064389	Callee	max		1064213	0					
ANR	1064390	Identifier	max		1064213	0					
ANR	1064391	ArgumentList	T1_MAX_STEM_SNAPS		1064213	1					
ANR	1064392	Argument	T1_MAX_STEM_SNAPS		1064213	0					
ANR	1064393	Identifier	T1_MAX_STEM_SNAPS		1064213	0					
ANR	1064394	Argument	count		1064213	1					
ANR	1064395	Identifier	count		1064213	0					
ANR	1064396	Argument	s_stem_snap_vote_array		1064213	6					
ANR	1064397	Identifier	s_stem_snap_vote_array		1064213	0					
ANR	1064398	ExpressionStatement	return_error ( gs_error_VMerror )	706:12:28564:28594	1064213	1	True				
ANR	1064399	CallExpression	return_error ( gs_error_VMerror )		1064213	0					
ANR	1064400	Callee	return_error		1064213	0					
ANR	1064401	Identifier	return_error		1064213	0					
ANR	1064402	ArgumentList	gs_error_VMerror		1064213	1					
ANR	1064403	Argument	gs_error_VMerror		1064213	0					
ANR	1064404	Identifier	gs_error_VMerror		1064213	0					
ANR	1064405	IfStatement	if ( count == 1 || ( count > 0 && float2fixed ( value [ count - 1 ] - value [ 0 ] ) > pixel_g ) )		1064213	5					
ANR	1064406	Condition	count == 1 || ( count > 0 && float2fixed ( value [ count - 1 ] - value [ 0 ] ) > pixel_g )	707:8:28604:28682	1064213	0	True				
ANR	1064407	OrExpression	count == 1 || ( count > 0 && float2fixed ( value [ count - 1 ] - value [ 0 ] ) > pixel_g )		1064213	0		||			
ANR	1064408	EqualityExpression	count == 1		1064213	0		==			
ANR	1064409	Identifier	count		1064213	0					
ANR	1064410	PrimaryExpression	1		1064213	1					
ANR	1064411	AndExpression	count > 0 && float2fixed ( value [ count - 1 ] - value [ 0 ] ) > pixel_g		1064213	1		&&			
ANR	1064412	RelationalExpression	count > 0		1064213	0		>			
ANR	1064413	Identifier	count		1064213	0					
ANR	1064414	PrimaryExpression	0		1064213	1					
ANR	1064415	RelationalExpression	float2fixed ( value [ count - 1 ] - value [ 0 ] ) > pixel_g		1064213	1		>			
ANR	1064416	CallExpression	float2fixed ( value [ count - 1 ] - value [ 0 ] )		1064213	0					
ANR	1064417	Callee	float2fixed		1064213	0					
ANR	1064418	Identifier	float2fixed		1064213	0					
ANR	1064419	ArgumentList	value [ count - 1 ] - value [ 0 ]		1064213	1					
ANR	1064420	Argument	value [ count - 1 ] - value [ 0 ]		1064213	0					
ANR	1064421	AdditiveExpression	value [ count - 1 ] - value [ 0 ]		1064213	0		-			
ANR	1064422	ArrayIndexing	value [ count - 1 ]		1064213	0					
ANR	1064423	Identifier	value		1064213	0					
ANR	1064424	AdditiveExpression	count - 1		1064213	1		-			
ANR	1064425	Identifier	count		1064213	0					
ANR	1064426	PrimaryExpression	1		1064213	1					
ANR	1064427	ArrayIndexing	value [ 0 ]		1064213	1					
ANR	1064428	Identifier	value		1064213	0					
ANR	1064429	PrimaryExpression	0		1064213	1					
ANR	1064430	Identifier	pixel_g		1064213	1					
ANR	1064431	CompoundStatement		16:89:1106:1106	1064213	1					
ANR	1064432	ForStatement	for ( i = 0 ; i < count ; i ++ )		1064213	0					
ANR	1064433	ForInit	i = 0 ;	708:13:28700:28705	1064213	0	True				
ANR	1064434	AssignmentExpression	i = 0		1064213	0		=			
ANR	1064435	Identifier	i		1064213	0					
ANR	1064436	PrimaryExpression	0		1064213	1					
ANR	1064437	Condition	i < count	708:20:28707:28715	1064213	1	True				
ANR	1064438	RelationalExpression	i < count		1064213	0		<			
ANR	1064439	Identifier	i		1064213	0					
ANR	1064440	Identifier	count		1064213	1					
ANR	1064441	PostIncDecOperationExpression	i ++	708:31:28718:28720	1064213	2	True				
ANR	1064442	Identifier	i		1064213	0					
ANR	1064443	IncDec	++		1064213	1					
ANR	1064444	ExpressionStatement	self -> stem_snap [ hv ] [ i ] = float2fixed ( value [ i ] )	709:12:28735:28781	1064213	3	True				
ANR	1064445	AssignmentExpression	self -> stem_snap [ hv ] [ i ] = float2fixed ( value [ i ] )		1064213	0		=			
ANR	1064446	ArrayIndexing	self -> stem_snap [ hv ] [ i ]		1064213	0					
ANR	1064447	ArrayIndexing	self -> stem_snap [ hv ]		1064213	0					
ANR	1064448	PtrMemberAccess	self -> stem_snap		1064213	0					
ANR	1064449	Identifier	self		1064213	0					
ANR	1064450	Identifier	stem_snap		1064213	1					
ANR	1064451	Identifier	hv		1064213	1					
ANR	1064452	Identifier	i		1064213	1					
ANR	1064453	CallExpression	float2fixed ( value [ i ] )		1064213	1					
ANR	1064454	Callee	float2fixed		1064213	0					
ANR	1064455	Identifier	float2fixed		1064213	0					
ANR	1064456	ArgumentList	value [ i ]		1064213	1					
ANR	1064457	Argument	value [ i ]		1064213	0					
ANR	1064458	ArrayIndexing	value [ i ]		1064213	0					
ANR	1064459	Identifier	value		1064213	0					
ANR	1064460	Identifier	i		1064213	1					
ANR	1064461	ExpressionStatement	self -> stem_snap_count [ hv ] = count	710:8:28791:28824	1064213	1	True				
ANR	1064462	AssignmentExpression	self -> stem_snap_count [ hv ] = count		1064213	0		=			
ANR	1064463	ArrayIndexing	self -> stem_snap_count [ hv ]		1064213	0					
ANR	1064464	PtrMemberAccess	self -> stem_snap_count		1064213	0					
ANR	1064465	Identifier	self		1064213	0					
ANR	1064466	Identifier	stem_snap_count		1064213	1					
ANR	1064467	Identifier	hv		1064213	1					
ANR	1064468	Identifier	count		1064213	1					
ANR	1064469	ForStatement	for ( i = 0 ; i < count ; i ++ )		1064213	2					
ANR	1064470	ForInit	i = 0 ;	711:13:28839:28844	1064213	0	True				
ANR	1064471	AssignmentExpression	i = 0		1064213	0		=			
ANR	1064472	Identifier	i		1064213	0					
ANR	1064473	PrimaryExpression	0		1064213	1					
ANR	1064474	Condition	i < count	711:20:28846:28854	1064213	1	True				
ANR	1064475	RelationalExpression	i < count		1064213	0		<			
ANR	1064476	Identifier	i		1064213	0					
ANR	1064477	Identifier	count		1064213	1					
ANR	1064478	PostIncDecOperationExpression	i ++	711:31:28857:28859	1064213	2	True				
ANR	1064479	Identifier	i		1064213	0					
ANR	1064480	IncDec	++		1064213	1					
ANR	1064481	CompoundStatement		20:36:1283:1283	1064213	3					
ANR	1064482	ForStatement	for ( j = i + 1 ; j < count ; j ++ )		1064213	0					
ANR	1064483	ForInit	j = i + 1 ;	712:17:28881:28890	1064213	0	True				
ANR	1064484	AssignmentExpression	j = i + 1		1064213	0		=			
ANR	1064485	Identifier	j		1064213	0					
ANR	1064486	AdditiveExpression	i + 1		1064213	1		+			
ANR	1064487	Identifier	i		1064213	0					
ANR	1064488	PrimaryExpression	1		1064213	1					
ANR	1064489	Condition	j < count	712:28:28892:28900	1064213	1	True				
ANR	1064490	RelationalExpression	j < count		1064213	0		<			
ANR	1064491	Identifier	j		1064213	0					
ANR	1064492	Identifier	count		1064213	1					
ANR	1064493	PostIncDecOperationExpression	j ++	712:39:28903:28905	1064213	2	True				
ANR	1064494	Identifier	j		1064213	0					
ANR	1064495	IncDec	++		1064213	1					
ANR	1064496	IfStatement	if ( self -> stem_snap [ hv ] [ i ] > self -> stem_snap [ hv ] [ j ] )		1064213	3					
ANR	1064497	Condition	self -> stem_snap [ hv ] [ i ] > self -> stem_snap [ hv ] [ j ]	713:20:28928:28974	1064213	0	True				
ANR	1064498	RelationalExpression	self -> stem_snap [ hv ] [ i ] > self -> stem_snap [ hv ] [ j ]		1064213	0		>			
ANR	1064499	ArrayIndexing	self -> stem_snap [ hv ] [ i ]		1064213	0					
ANR	1064500	ArrayIndexing	self -> stem_snap [ hv ]		1064213	0					
ANR	1064501	PtrMemberAccess	self -> stem_snap		1064213	0					
ANR	1064502	Identifier	self		1064213	0					
ANR	1064503	Identifier	stem_snap		1064213	1					
ANR	1064504	Identifier	hv		1064213	1					
ANR	1064505	Identifier	i		1064213	1					
ANR	1064506	ArrayIndexing	self -> stem_snap [ hv ] [ j ]		1064213	1					
ANR	1064507	ArrayIndexing	self -> stem_snap [ hv ]		1064213	0					
ANR	1064508	PtrMemberAccess	self -> stem_snap		1064213	0					
ANR	1064509	Identifier	self		1064213	0					
ANR	1064510	Identifier	stem_snap		1064213	1					
ANR	1064511	Identifier	hv		1064213	1					
ANR	1064512	Identifier	j		1064213	1					
ANR	1064513	CompoundStatement		23:20:1420:1467	1064213	1					
ANR	1064514	IdentifierDeclStatement	t1_glyph_space_coord v = self -> stem_snap [ hv ] [ i ] ;	714:20:28999:29046	1064213	0	True				
ANR	1064515	IdentifierDecl	v = self -> stem_snap [ hv ] [ i ]		1064213	0					
ANR	1064516	IdentifierDeclType	t1_glyph_space_coord		1064213	0					
ANR	1064517	Identifier	v		1064213	1					
ANR	1064518	AssignmentExpression	v = self -> stem_snap [ hv ] [ i ]		1064213	2		=			
ANR	1064519	Identifier	v		1064213	0					
ANR	1064520	ArrayIndexing	self -> stem_snap [ hv ] [ i ]		1064213	1					
ANR	1064521	ArrayIndexing	self -> stem_snap [ hv ]		1064213	0					
ANR	1064522	PtrMemberAccess	self -> stem_snap		1064213	0					
ANR	1064523	Identifier	self		1064213	0					
ANR	1064524	Identifier	stem_snap		1064213	1					
ANR	1064525	Identifier	hv		1064213	1					
ANR	1064526	Identifier	i		1064213	1					
ANR	1064527	ExpressionStatement	self -> stem_snap [ hv ] [ i ] = self -> stem_snap [ hv ] [ j ]	716:20:29069:29116	1064213	1	True				
ANR	1064528	AssignmentExpression	self -> stem_snap [ hv ] [ i ] = self -> stem_snap [ hv ] [ j ]		1064213	0		=			
ANR	1064529	ArrayIndexing	self -> stem_snap [ hv ] [ i ]		1064213	0					
ANR	1064530	ArrayIndexing	self -> stem_snap [ hv ]		1064213	0					
ANR	1064531	PtrMemberAccess	self -> stem_snap		1064213	0					
ANR	1064532	Identifier	self		1064213	0					
ANR	1064533	Identifier	stem_snap		1064213	1					
ANR	1064534	Identifier	hv		1064213	1					
ANR	1064535	Identifier	i		1064213	1					
ANR	1064536	ArrayIndexing	self -> stem_snap [ hv ] [ j ]		1064213	1					
ANR	1064537	ArrayIndexing	self -> stem_snap [ hv ]		1064213	0					
ANR	1064538	PtrMemberAccess	self -> stem_snap		1064213	0					
ANR	1064539	Identifier	self		1064213	0					
ANR	1064540	Identifier	stem_snap		1064213	1					
ANR	1064541	Identifier	hv		1064213	1					
ANR	1064542	Identifier	j		1064213	1					
ANR	1064543	ExpressionStatement	self -> stem_snap [ hv ] [ j ] = v	717:20:29138:29164	1064213	2	True				
ANR	1064544	AssignmentExpression	self -> stem_snap [ hv ] [ j ] = v		1064213	0		=			
ANR	1064545	ArrayIndexing	self -> stem_snap [ hv ] [ j ]		1064213	0					
ANR	1064546	ArrayIndexing	self -> stem_snap [ hv ]		1064213	0					
ANR	1064547	PtrMemberAccess	self -> stem_snap		1064213	0					
ANR	1064548	Identifier	self		1064213	0					
ANR	1064549	Identifier	stem_snap		1064213	1					
ANR	1064550	Identifier	hv		1064213	1					
ANR	1064551	Identifier	j		1064213	1					
ANR	1064552	Identifier	v		1064213	1					
ANR	1064553	ForStatement	"for ( i = 1 , j = 0 ; i < count ; i ++ )"		1064213	3					
ANR	1064554	ForInit	"i = 1 , j = 0 ;"	720:13:29207:29219	1064213	0	True				
ANR	1064555	Expression	"i = 1 , j = 0"		1064213	0					
ANR	1064556	AssignmentExpression	i = 1		1064213	0		=			
ANR	1064557	Identifier	i		1064213	0					
ANR	1064558	PrimaryExpression	1		1064213	1					
ANR	1064559	AssignmentExpression	j = 0		1064213	1		=			
ANR	1064560	Identifier	j		1064213	0					
ANR	1064561	PrimaryExpression	0		1064213	1					
ANR	1064562	Condition	i < count	720:27:29221:29229	1064213	1	True				
ANR	1064563	RelationalExpression	i < count		1064213	0		<			
ANR	1064564	Identifier	i		1064213	0					
ANR	1064565	Identifier	count		1064213	1					
ANR	1064566	PostIncDecOperationExpression	i ++	720:38:29232:29234	1064213	2	True				
ANR	1064567	Identifier	i		1064213	0					
ANR	1064568	IncDec	++		1064213	1					
ANR	1064569	CompoundStatement		29:43:1658:1658	1064213	3					
ANR	1064570	IfStatement	if ( self -> stem_snap [ hv ] [ j ] != self -> stem_snap [ hv ] [ i ] )		1064213	0					
ANR	1064571	Condition	self -> stem_snap [ hv ] [ j ] != self -> stem_snap [ hv ] [ i ]	721:16:29255:29302	1064213	0	True				
ANR	1064572	EqualityExpression	self -> stem_snap [ hv ] [ j ] != self -> stem_snap [ hv ] [ i ]		1064213	0		!=			
ANR	1064573	ArrayIndexing	self -> stem_snap [ hv ] [ j ]		1064213	0					
ANR	1064574	ArrayIndexing	self -> stem_snap [ hv ]		1064213	0					
ANR	1064575	PtrMemberAccess	self -> stem_snap		1064213	0					
ANR	1064576	Identifier	self		1064213	0					
ANR	1064577	Identifier	stem_snap		1064213	1					
ANR	1064578	Identifier	hv		1064213	1					
ANR	1064579	Identifier	j		1064213	1					
ANR	1064580	ArrayIndexing	self -> stem_snap [ hv ] [ i ]		1064213	1					
ANR	1064581	ArrayIndexing	self -> stem_snap [ hv ]		1064213	0					
ANR	1064582	PtrMemberAccess	self -> stem_snap		1064213	0					
ANR	1064583	Identifier	self		1064213	0					
ANR	1064584	Identifier	stem_snap		1064213	1					
ANR	1064585	Identifier	hv		1064213	1					
ANR	1064586	Identifier	i		1064213	1					
ANR	1064587	CompoundStatement		30:66:1726:1726	1064213	1					
ANR	1064588	ExpressionStatement	j ++	722:16:29323:29326	1064213	0	True				
ANR	1064589	PostIncDecOperationExpression	j ++		1064213	0					
ANR	1064590	Identifier	j		1064213	0					
ANR	1064591	IncDec	++		1064213	1					
ANR	1064592	ExpressionStatement	self -> stem_snap [ hv ] [ j ] = self -> stem_snap [ hv ] [ i ]	723:16:29344:29391	1064213	1	True				
ANR	1064593	AssignmentExpression	self -> stem_snap [ hv ] [ j ] = self -> stem_snap [ hv ] [ i ]		1064213	0		=			
ANR	1064594	ArrayIndexing	self -> stem_snap [ hv ] [ j ]		1064213	0					
ANR	1064595	ArrayIndexing	self -> stem_snap [ hv ]		1064213	0					
ANR	1064596	PtrMemberAccess	self -> stem_snap		1064213	0					
ANR	1064597	Identifier	self		1064213	0					
ANR	1064598	Identifier	stem_snap		1064213	1					
ANR	1064599	Identifier	hv		1064213	1					
ANR	1064600	Identifier	j		1064213	1					
ANR	1064601	ArrayIndexing	self -> stem_snap [ hv ] [ i ]		1064213	1					
ANR	1064602	ArrayIndexing	self -> stem_snap [ hv ]		1064213	0					
ANR	1064603	PtrMemberAccess	self -> stem_snap		1064213	0					
ANR	1064604	Identifier	self		1064213	0					
ANR	1064605	Identifier	stem_snap		1064213	1					
ANR	1064606	Identifier	hv		1064213	1					
ANR	1064607	Identifier	i		1064213	1					
ANR	1064608	ExpressionStatement	self -> stem_snap_count [ hv ] = j + 1	726:8:29425:29458	1064213	4	True				
ANR	1064609	AssignmentExpression	self -> stem_snap_count [ hv ] = j + 1		1064213	0		=			
ANR	1064610	ArrayIndexing	self -> stem_snap_count [ hv ]		1064213	0					
ANR	1064611	PtrMemberAccess	self -> stem_snap_count		1064213	0					
ANR	1064612	Identifier	self		1064213	0					
ANR	1064613	Identifier	stem_snap_count		1064213	1					
ANR	1064614	Identifier	hv		1064213	1					
ANR	1064615	AdditiveExpression	j + 1		1064213	1		+			
ANR	1064616	Identifier	j		1064213	0					
ANR	1064617	PrimaryExpression	1		1064213	1					
ANR	1064618	ReturnStatement	return 0 ;	728:4:29470:29478	1064213	6	True				
ANR	1064619	PrimaryExpression	0		1064213	0					
ANR	1064620	ReturnType	static int		1064213	1					
ANR	1064621	Identifier	t1_hinter__set_stem_snap		1064213	2					
ANR	1064622	ParameterList	"gs_memory_t * mem , t1_hinter * self , float * value , int count , unsigned short hv"		1064213	3					
ANR	1064623	Parameter	gs_memory_t * mem	691:36:27497:27512	1064213	0	True				
ANR	1064624	ParameterType	gs_memory_t *		1064213	0					
ANR	1064625	Identifier	mem		1064213	1					
ANR	1064626	Parameter	t1_hinter * self	691:54:27515:27530	1064213	1	True				
ANR	1064627	ParameterType	t1_hinter *		1064213	0					
ANR	1064628	Identifier	self		1064213	1					
ANR	1064629	Parameter	float * value	691:72:27533:27545	1064213	2	True				
ANR	1064630	ParameterType	float *		1064213	0					
ANR	1064631	Identifier	value		1064213	1					
ANR	1064632	Parameter	int count	691:87:27548:27556	1064213	3	True				
ANR	1064633	ParameterType	int		1064213	0					
ANR	1064634	Identifier	count		1064213	1					
ANR	1064635	Parameter	unsigned short hv	691:98:27559:27575	1064213	4	True				
ANR	1064636	ParameterType	unsigned short		1064213	0					
ANR	1064637	Identifier	hv		1064213	1					
ANR	1064638	CFGEntryNode	ENTRY		1064213		True				
ANR	1064639	CFGExitNode	EXIT		1064213		True				
ANR	1064640	Symbol	count0		1064213						
ANR	1064641	Symbol	s_stem_snap_array		1064213						
ANR	1064642	Symbol	t1_hinter__realloc_array		1064213						
ANR	1064643	Symbol	self -> stem_snap0		1064213						
ANR	1064644	Symbol	s_stem_snap_vote_array		1064213						
ANR	1064645	Symbol	* self -> stem_snap_count		1064213						
ANR	1064646	Symbol	hv		1064213						
ANR	1064647	Symbol	self -> stem_snap_vote0		1064213						
ANR	1064648	Symbol	* self -> max_stem_snap_count		1064213						
ANR	1064649	Symbol	self -> pixel_gw		1064213						
ANR	1064650	Symbol	* count		1064213						
ANR	1064651	Symbol	float2fixed		1064213						
ANR	1064652	Symbol	mem		1064213						
ANR	1064653	Symbol	count_of		1064213						
ANR	1064654	Symbol	T1_MAX_STEM_SNAPS		1064213						
ANR	1064655	Symbol	* hv		1064213						
ANR	1064656	Symbol	* * * self		1064213						
ANR	1064657	Symbol	* self -> stem_snap		1064213						
ANR	1064658	Symbol	value		1064213						
ANR	1064659	Symbol	* self -> stem_snap0		1064213						
ANR	1064660	Symbol	self -> max_stem_snap_vote_count		1064213						
ANR	1064661	Symbol	pixel_g		1064213						
ANR	1064662	Symbol	& self -> stem_snap_vote		1064213						
ANR	1064663	Symbol	self -> pixel_gh		1064213						
ANR	1064664	Symbol	self -> stem_snap_count		1064213						
ANR	1064665	Symbol	* * self		1064213						
ANR	1064666	Symbol	max		1064213						
ANR	1064667	Symbol	* self		1064213						
ANR	1064668	Symbol	self -> stem_snap		1064213						
ANR	1064669	Symbol	count		1064213						
ANR	1064670	Symbol	i		1064213						
ANR	1064671	Symbol	j		1064213						
ANR	1064672	Symbol	gs_error_VMerror		1064213						
ANR	1064673	Symbol	* i		1064213						
ANR	1064674	Symbol	* j		1064213						
ANR	1064675	Symbol	self -> max_stem_snap_count		1064213						
ANR	1064676	Symbol	& self -> max_stem_snap_vote_count		1064213						
ANR	1064677	Symbol	* value		1064213						
ANR	1064678	Symbol	v		1064213						
ANR	1064679	Symbol	* * hv		1064213						
ANR	1064680	Symbol	self		1064213						
ANR	1064681	Symbol	* * self -> stem_snap		1064213						
ANR	1064682	Function	t1_hinter__set_font_data	749:0:30492:32883							
ANR	1064683	FunctionDef	"t1_hinter__set_font_data (gs_memory_t * mem , t1_hinter * self , int FontType , gs_type1_data * pdata , bool no_grid_fitting , bool is_resource)"		1064682	0					
ANR	1064684	CompoundStatement		750:0:30633:32883	1064682	0					
ANR	1064685	IdentifierDeclStatement	int code ;	750:3:30637:30645	1064682	0	True				
ANR	1064686	IdentifierDecl	code		1064682	0					
ANR	1064687	IdentifierDeclType	int		1064682	0					
ANR	1064688	Identifier	code		1064682	1					
ANR	1064689	ExpressionStatement	t1_hinter__init_outline ( self )	752:4:30652:30681	1064682	1	True				
ANR	1064690	CallExpression	t1_hinter__init_outline ( self )		1064682	0					
ANR	1064691	Callee	t1_hinter__init_outline		1064682	0					
ANR	1064692	Identifier	t1_hinter__init_outline		1064682	0					
ANR	1064693	ArgumentList	self		1064682	1					
ANR	1064694	Argument	self		1064682	0					
ANR	1064695	Identifier	self		1064682	0					
ANR	1064696	ExpressionStatement	self -> FontType = FontType	753:4:30687:30712	1064682	2	True				
ANR	1064697	AssignmentExpression	self -> FontType = FontType		1064682	0		=			
ANR	1064698	PtrMemberAccess	self -> FontType		1064682	0					
ANR	1064699	Identifier	self		1064682	0					
ANR	1064700	Identifier	FontType		1064682	1					
ANR	1064701	Identifier	FontType		1064682	1					
ANR	1064702	ExpressionStatement	self -> BlueScale = pdata -> BlueScale	754:4:30718:30752	1064682	3	True				
ANR	1064703	AssignmentExpression	self -> BlueScale = pdata -> BlueScale		1064682	0		=			
ANR	1064704	PtrMemberAccess	self -> BlueScale		1064682	0					
ANR	1064705	Identifier	self		1064682	0					
ANR	1064706	Identifier	BlueScale		1064682	1					
ANR	1064707	PtrMemberAccess	pdata -> BlueScale		1064682	1					
ANR	1064708	Identifier	pdata		1064682	0					
ANR	1064709	Identifier	BlueScale		1064682	1					
ANR	1064710	ExpressionStatement	self -> blue_shift = float2fixed ( pdata -> BlueShift )	755:4:30758:30806	1064682	4	True				
ANR	1064711	AssignmentExpression	self -> blue_shift = float2fixed ( pdata -> BlueShift )		1064682	0		=			
ANR	1064712	PtrMemberAccess	self -> blue_shift		1064682	0					
ANR	1064713	Identifier	self		1064682	0					
ANR	1064714	Identifier	blue_shift		1064682	1					
ANR	1064715	CallExpression	float2fixed ( pdata -> BlueShift )		1064682	1					
ANR	1064716	Callee	float2fixed		1064682	0					
ANR	1064717	Identifier	float2fixed		1064682	0					
ANR	1064718	ArgumentList	pdata -> BlueShift		1064682	1					
ANR	1064719	Argument	pdata -> BlueShift		1064682	0					
ANR	1064720	PtrMemberAccess	pdata -> BlueShift		1064682	0					
ANR	1064721	Identifier	pdata		1064682	0					
ANR	1064722	Identifier	BlueShift		1064682	1					
ANR	1064723	ExpressionStatement	self -> blue_fuzz = float2fixed ( pdata -> BlueFuzz )	756:4:30812:30859	1064682	5	True				
ANR	1064724	AssignmentExpression	self -> blue_fuzz = float2fixed ( pdata -> BlueFuzz )		1064682	0		=			
ANR	1064725	PtrMemberAccess	self -> blue_fuzz		1064682	0					
ANR	1064726	Identifier	self		1064682	0					
ANR	1064727	Identifier	blue_fuzz		1064682	1					
ANR	1064728	CallExpression	float2fixed ( pdata -> BlueFuzz )		1064682	1					
ANR	1064729	Callee	float2fixed		1064682	0					
ANR	1064730	Identifier	float2fixed		1064682	0					
ANR	1064731	ArgumentList	pdata -> BlueFuzz		1064682	1					
ANR	1064732	Argument	pdata -> BlueFuzz		1064682	0					
ANR	1064733	PtrMemberAccess	pdata -> BlueFuzz		1064682	0					
ANR	1064734	Identifier	pdata		1064682	0					
ANR	1064735	Identifier	BlueFuzz		1064682	1					
ANR	1064736	ExpressionStatement	self -> suppress_overshoots = ( self -> BlueScale > self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417 )	757:4:30865:30981	1064682	6	True				
ANR	1064737	AssignmentExpression	self -> suppress_overshoots = ( self -> BlueScale > self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417 )		1064682	0		=			
ANR	1064738	PtrMemberAccess	self -> suppress_overshoots		1064682	0					
ANR	1064739	Identifier	self		1064682	0					
ANR	1064740	Identifier	suppress_overshoots		1064682	1					
ANR	1064741	RelationalExpression	self -> BlueScale > self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417		1064682	1		>			
ANR	1064742	PtrMemberAccess	self -> BlueScale		1064682	0					
ANR	1064743	Identifier	self		1064682	0					
ANR	1064744	Identifier	BlueScale		1064682	1					
ANR	1064745	AdditiveExpression	self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417		1064682	1		-			
ANR	1064746	MultiplicativeExpression	self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y )		1064682	0		/			
ANR	1064747	PtrMemberAccess	self -> heigt_transform_coef		1064682	0					
ANR	1064748	Identifier	self		1064682	0					
ANR	1064749	Identifier	heigt_transform_coef		1064682	1					
ANR	1064750	ShiftExpression	1 << self -> log2_pixels_y		1064682	1		<<			
ANR	1064751	PrimaryExpression	1		1064682	0					
ANR	1064752	PtrMemberAccess	self -> log2_pixels_y		1064682	1					
ANR	1064753	Identifier	self		1064682	0					
ANR	1064754	Identifier	log2_pixels_y		1064682	1					
ANR	1064755	PrimaryExpression	0.00020417		1064682	1					
ANR	1064756	ExpressionStatement	self -> overshoot_threshold = ( self -> heigt_transform_coef != 0 ? ( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef ) : 0 )	758:4:30987:31147	1064682	7	True				
ANR	1064757	AssignmentExpression	self -> overshoot_threshold = ( self -> heigt_transform_coef != 0 ? ( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef ) : 0 )		1064682	0		=			
ANR	1064758	PtrMemberAccess	self -> overshoot_threshold		1064682	0					
ANR	1064759	Identifier	self		1064682	0					
ANR	1064760	Identifier	overshoot_threshold		1064682	1					
ANR	1064761	ConditionalExpression	self -> heigt_transform_coef != 0 ? ( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef ) : 0		1064682	1					
ANR	1064762	Condition	self -> heigt_transform_coef != 0		1064682	0					
ANR	1064763	EqualityExpression	self -> heigt_transform_coef != 0		1064682	0		!=			
ANR	1064764	PtrMemberAccess	self -> heigt_transform_coef		1064682	0					
ANR	1064765	Identifier	self		1064682	0					
ANR	1064766	Identifier	heigt_transform_coef		1064682	1					
ANR	1064767	PrimaryExpression	0		1064682	1					
ANR	1064768	CastExpression	( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef )		1064682	1					
ANR	1064769	CastTarget	t1_glyph_space_coord		1064682	0					
ANR	1064770	MultiplicativeExpression	fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef		1064682	1		*			
ANR	1064771	Identifier	fixed_half		1064682	0					
ANR	1064772	MultiplicativeExpression	( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef		1064682	1		/			
ANR	1064773	ShiftExpression	1 << self -> log2_pixels_y		1064682	0		<<			
ANR	1064774	PrimaryExpression	1		1064682	0					
ANR	1064775	PtrMemberAccess	self -> log2_pixels_y		1064682	1					
ANR	1064776	Identifier	self		1064682	0					
ANR	1064777	Identifier	log2_pixels_y		1064682	1					
ANR	1064778	PtrMemberAccess	self -> heigt_transform_coef		1064682	1					
ANR	1064779	Identifier	self		1064682	0					
ANR	1064780	Identifier	heigt_transform_coef		1064682	1					
ANR	1064781	PrimaryExpression	0		1064682	2					
ANR	1064782	ExpressionStatement	self -> ForceBold = pdata -> ForceBold	759:4:31153:31187	1064682	8	True				
ANR	1064783	AssignmentExpression	self -> ForceBold = pdata -> ForceBold		1064682	0		=			
ANR	1064784	PtrMemberAccess	self -> ForceBold		1064682	0					
ANR	1064785	Identifier	self		1064682	0					
ANR	1064786	Identifier	ForceBold		1064682	1					
ANR	1064787	PtrMemberAccess	pdata -> ForceBold		1064682	1					
ANR	1064788	Identifier	pdata		1064682	0					
ANR	1064789	Identifier	ForceBold		1064682	1					
ANR	1064790	ExpressionStatement	self -> disable_hinting |= no_grid_fitting	760:4:31193:31233	1064682	9	True				
ANR	1064791	AssignmentExpression	self -> disable_hinting |= no_grid_fitting		1064682	0		|=			
ANR	1064792	PtrMemberAccess	self -> disable_hinting		1064682	0					
ANR	1064793	Identifier	self		1064682	0					
ANR	1064794	Identifier	disable_hinting		1064682	1					
ANR	1064795	Identifier	no_grid_fitting		1064682	1					
ANR	1064796	ExpressionStatement	self -> pass_through |= no_grid_fitting	761:4:31239:31276	1064682	10	True				
ANR	1064797	AssignmentExpression	self -> pass_through |= no_grid_fitting		1064682	0		|=			
ANR	1064798	PtrMemberAccess	self -> pass_through		1064682	0					
ANR	1064799	Identifier	self		1064682	0					
ANR	1064800	Identifier	pass_through		1064682	1					
ANR	1064801	Identifier	no_grid_fitting		1064682	1					
ANR	1064802	ExpressionStatement	self -> charpath_flag = no_grid_fitting	762:4:31282:31319	1064682	11	True				
ANR	1064803	AssignmentExpression	self -> charpath_flag = no_grid_fitting		1064682	0		=			
ANR	1064804	PtrMemberAccess	self -> charpath_flag		1064682	0					
ANR	1064805	Identifier	self		1064682	0					
ANR	1064806	Identifier	charpath_flag		1064682	1					
ANR	1064807	Identifier	no_grid_fitting		1064682	1					
ANR	1064808	ExpressionStatement	self -> fix_contour_sign = ( ! is_resource && self -> memory != NULL )	763:4:31325:31388	1064682	12	True				
ANR	1064809	AssignmentExpression	self -> fix_contour_sign = ( ! is_resource && self -> memory != NULL )		1064682	0		=			
ANR	1064810	PtrMemberAccess	self -> fix_contour_sign		1064682	0					
ANR	1064811	Identifier	self		1064682	0					
ANR	1064812	Identifier	fix_contour_sign		1064682	1					
ANR	1064813	AndExpression	! is_resource && self -> memory != NULL		1064682	1		&&			
ANR	1064814	UnaryOperationExpression	! is_resource		1064682	0					
ANR	1064815	UnaryOperator	!		1064682	0					
ANR	1064816	Identifier	is_resource		1064682	1					
ANR	1064817	EqualityExpression	self -> memory != NULL		1064682	1		!=			
ANR	1064818	PtrMemberAccess	self -> memory		1064682	0					
ANR	1064819	Identifier	self		1064682	0					
ANR	1064820	Identifier	memory		1064682	1					
ANR	1064821	Identifier	NULL		1064682	1					
ANR	1064822	IfStatement	if ( self -> fix_contour_sign )		1064682	13					
ANR	1064823	Condition	self -> fix_contour_sign	764:8:31398:31419	1064682	0	True				
ANR	1064824	PtrMemberAccess	self -> fix_contour_sign		1064682	0					
ANR	1064825	Identifier	self		1064682	0					
ANR	1064826	Identifier	fix_contour_sign		1064682	1					
ANR	1064827	ExpressionStatement	self -> pass_through = false	765:8:31430:31456	1064682	1	True				
ANR	1064828	AssignmentExpression	self -> pass_through = false		1064682	0		=			
ANR	1064829	PtrMemberAccess	self -> pass_through		1064682	0					
ANR	1064830	Identifier	self		1064682	0					
ANR	1064831	Identifier	pass_through		1064682	1					
ANR	1064832	Identifier	false		1064682	1					
ANR	1064833	IfStatement	if ( self -> pass_through )		1064682	14					
ANR	1064834	Condition	self -> pass_through	766:8:31466:31483	1064682	0	True				
ANR	1064835	PtrMemberAccess	self -> pass_through		1064682	0					
ANR	1064836	Identifier	self		1064682	0					
ANR	1064837	Identifier	pass_through		1064682	1					
ANR	1064838	ReturnStatement	return 0 ;	767:8:31494:31502	1064682	1	True				
ANR	1064839	PrimaryExpression	0		1064682	0					
ANR	1064840	ExpressionStatement	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> OtherBlues . values , pdata -> OtherBlues . count , botzone , false )"	768:4:31508:31623	1064682	15	True				
ANR	1064841	AssignmentExpression	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> OtherBlues . values , pdata -> OtherBlues . count , botzone , false )"		1064682	0		=			
ANR	1064842	Identifier	code		1064682	0					
ANR	1064843	CallExpression	"t1_hinter__set_alignment_zones ( mem , self , pdata -> OtherBlues . values , pdata -> OtherBlues . count , botzone , false )"		1064682	1					
ANR	1064844	Callee	t1_hinter__set_alignment_zones		1064682	0					
ANR	1064845	Identifier	t1_hinter__set_alignment_zones		1064682	0					
ANR	1064846	ArgumentList	mem		1064682	1					
ANR	1064847	Argument	mem		1064682	0					
ANR	1064848	Identifier	mem		1064682	0					
ANR	1064849	Argument	self		1064682	1					
ANR	1064850	Identifier	self		1064682	0					
ANR	1064851	Argument	pdata -> OtherBlues . values		1064682	2					
ANR	1064852	MemberAccess	pdata -> OtherBlues . values		1064682	0					
ANR	1064853	PtrMemberAccess	pdata -> OtherBlues		1064682	0					
ANR	1064854	Identifier	pdata		1064682	0					
ANR	1064855	Identifier	OtherBlues		1064682	1					
ANR	1064856	Identifier	values		1064682	1					
ANR	1064857	Argument	pdata -> OtherBlues . count		1064682	3					
ANR	1064858	MemberAccess	pdata -> OtherBlues . count		1064682	0					
ANR	1064859	PtrMemberAccess	pdata -> OtherBlues		1064682	0					
ANR	1064860	Identifier	pdata		1064682	0					
ANR	1064861	Identifier	OtherBlues		1064682	1					
ANR	1064862	Identifier	count		1064682	1					
ANR	1064863	Argument	botzone		1064682	4					
ANR	1064864	Identifier	botzone		1064682	0					
ANR	1064865	Argument	false		1064682	5					
ANR	1064866	Identifier	false		1064682	0					
ANR	1064867	IfStatement	if ( code >= 0 )		1064682	16					
ANR	1064868	Condition	code >= 0	769:8:31633:31641	1064682	0	True				
ANR	1064869	RelationalExpression	code >= 0		1064682	0		>=			
ANR	1064870	Identifier	code		1064682	0					
ANR	1064871	PrimaryExpression	0		1064682	1					
ANR	1064872	ExpressionStatement	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> BlueValues . values , min ( 2 , pdata -> BlueValues . count ) , botzone , false )"	770:8:31652:31775	1064682	1	True				
ANR	1064873	AssignmentExpression	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> BlueValues . values , min ( 2 , pdata -> BlueValues . count ) , botzone , false )"		1064682	0		=			
ANR	1064874	Identifier	code		1064682	0					
ANR	1064875	CallExpression	"t1_hinter__set_alignment_zones ( mem , self , pdata -> BlueValues . values , min ( 2 , pdata -> BlueValues . count ) , botzone , false )"		1064682	1					
ANR	1064876	Callee	t1_hinter__set_alignment_zones		1064682	0					
ANR	1064877	Identifier	t1_hinter__set_alignment_zones		1064682	0					
ANR	1064878	ArgumentList	mem		1064682	1					
ANR	1064879	Argument	mem		1064682	0					
ANR	1064880	Identifier	mem		1064682	0					
ANR	1064881	Argument	self		1064682	1					
ANR	1064882	Identifier	self		1064682	0					
ANR	1064883	Argument	pdata -> BlueValues . values		1064682	2					
ANR	1064884	MemberAccess	pdata -> BlueValues . values		1064682	0					
ANR	1064885	PtrMemberAccess	pdata -> BlueValues		1064682	0					
ANR	1064886	Identifier	pdata		1064682	0					
ANR	1064887	Identifier	BlueValues		1064682	1					
ANR	1064888	Identifier	values		1064682	1					
ANR	1064889	Argument	"min ( 2 , pdata -> BlueValues . count )"		1064682	3					
ANR	1064890	CallExpression	"min ( 2 , pdata -> BlueValues . count )"		1064682	0					
ANR	1064891	Callee	min		1064682	0					
ANR	1064892	Identifier	min		1064682	0					
ANR	1064893	ArgumentList	2		1064682	1					
ANR	1064894	Argument	2		1064682	0					
ANR	1064895	PrimaryExpression	2		1064682	0					
ANR	1064896	Argument	pdata -> BlueValues . count		1064682	1					
ANR	1064897	MemberAccess	pdata -> BlueValues . count		1064682	0					
ANR	1064898	PtrMemberAccess	pdata -> BlueValues		1064682	0					
ANR	1064899	Identifier	pdata		1064682	0					
ANR	1064900	Identifier	BlueValues		1064682	1					
ANR	1064901	Identifier	count		1064682	1					
ANR	1064902	Argument	botzone		1064682	4					
ANR	1064903	Identifier	botzone		1064682	0					
ANR	1064904	Argument	false		1064682	5					
ANR	1064905	Identifier	false		1064682	0					
ANR	1064906	IfStatement	if ( code >= 0 )		1064682	17					
ANR	1064907	Condition	code >= 0	771:8:31785:31793	1064682	0	True				
ANR	1064908	RelationalExpression	code >= 0		1064682	0		>=			
ANR	1064909	Identifier	code		1064682	0					
ANR	1064910	PrimaryExpression	0		1064682	1					
ANR	1064911	ExpressionStatement	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> BlueValues . values + 2 , pdata -> BlueValues . count - 2 , topzone , false )"	772:8:31804:31927	1064682	1	True				
ANR	1064912	AssignmentExpression	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> BlueValues . values + 2 , pdata -> BlueValues . count - 2 , topzone , false )"		1064682	0		=			
ANR	1064913	Identifier	code		1064682	0					
ANR	1064914	CallExpression	"t1_hinter__set_alignment_zones ( mem , self , pdata -> BlueValues . values + 2 , pdata -> BlueValues . count - 2 , topzone , false )"		1064682	1					
ANR	1064915	Callee	t1_hinter__set_alignment_zones		1064682	0					
ANR	1064916	Identifier	t1_hinter__set_alignment_zones		1064682	0					
ANR	1064917	ArgumentList	mem		1064682	1					
ANR	1064918	Argument	mem		1064682	0					
ANR	1064919	Identifier	mem		1064682	0					
ANR	1064920	Argument	self		1064682	1					
ANR	1064921	Identifier	self		1064682	0					
ANR	1064922	Argument	pdata -> BlueValues . values + 2		1064682	2					
ANR	1064923	AdditiveExpression	pdata -> BlueValues . values + 2		1064682	0		+			
ANR	1064924	MemberAccess	pdata -> BlueValues . values		1064682	0					
ANR	1064925	PtrMemberAccess	pdata -> BlueValues		1064682	0					
ANR	1064926	Identifier	pdata		1064682	0					
ANR	1064927	Identifier	BlueValues		1064682	1					
ANR	1064928	Identifier	values		1064682	1					
ANR	1064929	PrimaryExpression	2		1064682	1					
ANR	1064930	Argument	pdata -> BlueValues . count - 2		1064682	3					
ANR	1064931	AdditiveExpression	pdata -> BlueValues . count - 2		1064682	0		-			
ANR	1064932	MemberAccess	pdata -> BlueValues . count		1064682	0					
ANR	1064933	PtrMemberAccess	pdata -> BlueValues		1064682	0					
ANR	1064934	Identifier	pdata		1064682	0					
ANR	1064935	Identifier	BlueValues		1064682	1					
ANR	1064936	Identifier	count		1064682	1					
ANR	1064937	PrimaryExpression	2		1064682	1					
ANR	1064938	Argument	topzone		1064682	4					
ANR	1064939	Identifier	topzone		1064682	0					
ANR	1064940	Argument	false		1064682	5					
ANR	1064941	Identifier	false		1064682	0					
ANR	1064942	IfStatement	if ( code >= 0 )		1064682	18					
ANR	1064943	Condition	code >= 0	773:8:31937:31945	1064682	0	True				
ANR	1064944	RelationalExpression	code >= 0		1064682	0		>=			
ANR	1064945	Identifier	code		1064682	0					
ANR	1064946	PrimaryExpression	0		1064682	1					
ANR	1064947	ExpressionStatement	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyOtherBlues . values , pdata -> FamilyOtherBlues . count , botzone , true )"	774:8:31956:32082	1064682	1	True				
ANR	1064948	AssignmentExpression	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyOtherBlues . values , pdata -> FamilyOtherBlues . count , botzone , true )"		1064682	0		=			
ANR	1064949	Identifier	code		1064682	0					
ANR	1064950	CallExpression	"t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyOtherBlues . values , pdata -> FamilyOtherBlues . count , botzone , true )"		1064682	1					
ANR	1064951	Callee	t1_hinter__set_alignment_zones		1064682	0					
ANR	1064952	Identifier	t1_hinter__set_alignment_zones		1064682	0					
ANR	1064953	ArgumentList	mem		1064682	1					
ANR	1064954	Argument	mem		1064682	0					
ANR	1064955	Identifier	mem		1064682	0					
ANR	1064956	Argument	self		1064682	1					
ANR	1064957	Identifier	self		1064682	0					
ANR	1064958	Argument	pdata -> FamilyOtherBlues . values		1064682	2					
ANR	1064959	MemberAccess	pdata -> FamilyOtherBlues . values		1064682	0					
ANR	1064960	PtrMemberAccess	pdata -> FamilyOtherBlues		1064682	0					
ANR	1064961	Identifier	pdata		1064682	0					
ANR	1064962	Identifier	FamilyOtherBlues		1064682	1					
ANR	1064963	Identifier	values		1064682	1					
ANR	1064964	Argument	pdata -> FamilyOtherBlues . count		1064682	3					
ANR	1064965	MemberAccess	pdata -> FamilyOtherBlues . count		1064682	0					
ANR	1064966	PtrMemberAccess	pdata -> FamilyOtherBlues		1064682	0					
ANR	1064967	Identifier	pdata		1064682	0					
ANR	1064968	Identifier	FamilyOtherBlues		1064682	1					
ANR	1064969	Identifier	count		1064682	1					
ANR	1064970	Argument	botzone		1064682	4					
ANR	1064971	Identifier	botzone		1064682	0					
ANR	1064972	Argument	true		1064682	5					
ANR	1064973	Identifier	true		1064682	0					
ANR	1064974	IfStatement	if ( code >= 0 )		1064682	19					
ANR	1064975	Condition	code >= 0	775:8:32092:32100	1064682	0	True				
ANR	1064976	RelationalExpression	code >= 0		1064682	0		>=			
ANR	1064977	Identifier	code		1064682	0					
ANR	1064978	PrimaryExpression	0		1064682	1					
ANR	1064979	ExpressionStatement	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyBlues . values , min ( 2 , pdata -> FamilyBlues . count ) , botzone , true )"	776:8:32111:32235	1064682	1	True				
ANR	1064980	AssignmentExpression	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyBlues . values , min ( 2 , pdata -> FamilyBlues . count ) , botzone , true )"		1064682	0		=			
ANR	1064981	Identifier	code		1064682	0					
ANR	1064982	CallExpression	"t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyBlues . values , min ( 2 , pdata -> FamilyBlues . count ) , botzone , true )"		1064682	1					
ANR	1064983	Callee	t1_hinter__set_alignment_zones		1064682	0					
ANR	1064984	Identifier	t1_hinter__set_alignment_zones		1064682	0					
ANR	1064985	ArgumentList	mem		1064682	1					
ANR	1064986	Argument	mem		1064682	0					
ANR	1064987	Identifier	mem		1064682	0					
ANR	1064988	Argument	self		1064682	1					
ANR	1064989	Identifier	self		1064682	0					
ANR	1064990	Argument	pdata -> FamilyBlues . values		1064682	2					
ANR	1064991	MemberAccess	pdata -> FamilyBlues . values		1064682	0					
ANR	1064992	PtrMemberAccess	pdata -> FamilyBlues		1064682	0					
ANR	1064993	Identifier	pdata		1064682	0					
ANR	1064994	Identifier	FamilyBlues		1064682	1					
ANR	1064995	Identifier	values		1064682	1					
ANR	1064996	Argument	"min ( 2 , pdata -> FamilyBlues . count )"		1064682	3					
ANR	1064997	CallExpression	"min ( 2 , pdata -> FamilyBlues . count )"		1064682	0					
ANR	1064998	Callee	min		1064682	0					
ANR	1064999	Identifier	min		1064682	0					
ANR	1065000	ArgumentList	2		1064682	1					
ANR	1065001	Argument	2		1064682	0					
ANR	1065002	PrimaryExpression	2		1064682	0					
ANR	1065003	Argument	pdata -> FamilyBlues . count		1064682	1					
ANR	1065004	MemberAccess	pdata -> FamilyBlues . count		1064682	0					
ANR	1065005	PtrMemberAccess	pdata -> FamilyBlues		1064682	0					
ANR	1065006	Identifier	pdata		1064682	0					
ANR	1065007	Identifier	FamilyBlues		1064682	1					
ANR	1065008	Identifier	count		1064682	1					
ANR	1065009	Argument	botzone		1064682	4					
ANR	1065010	Identifier	botzone		1064682	0					
ANR	1065011	Argument	true		1064682	5					
ANR	1065012	Identifier	true		1064682	0					
ANR	1065013	IfStatement	if ( code >= 0 )		1064682	20					
ANR	1065014	Condition	code >= 0	777:8:32245:32253	1064682	0	True				
ANR	1065015	RelationalExpression	code >= 0		1064682	0		>=			
ANR	1065016	Identifier	code		1064682	0					
ANR	1065017	PrimaryExpression	0		1064682	1					
ANR	1065018	ExpressionStatement	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyBlues . values + 2 , pdata -> FamilyBlues . count - 2 , topzone , true )"	778:8:32264:32388	1064682	1	True				
ANR	1065019	AssignmentExpression	"code = t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyBlues . values + 2 , pdata -> FamilyBlues . count - 2 , topzone , true )"		1064682	0		=			
ANR	1065020	Identifier	code		1064682	0					
ANR	1065021	CallExpression	"t1_hinter__set_alignment_zones ( mem , self , pdata -> FamilyBlues . values + 2 , pdata -> FamilyBlues . count - 2 , topzone , true )"		1064682	1					
ANR	1065022	Callee	t1_hinter__set_alignment_zones		1064682	0					
ANR	1065023	Identifier	t1_hinter__set_alignment_zones		1064682	0					
ANR	1065024	ArgumentList	mem		1064682	1					
ANR	1065025	Argument	mem		1064682	0					
ANR	1065026	Identifier	mem		1064682	0					
ANR	1065027	Argument	self		1064682	1					
ANR	1065028	Identifier	self		1064682	0					
ANR	1065029	Argument	pdata -> FamilyBlues . values + 2		1064682	2					
ANR	1065030	AdditiveExpression	pdata -> FamilyBlues . values + 2		1064682	0		+			
ANR	1065031	MemberAccess	pdata -> FamilyBlues . values		1064682	0					
ANR	1065032	PtrMemberAccess	pdata -> FamilyBlues		1064682	0					
ANR	1065033	Identifier	pdata		1064682	0					
ANR	1065034	Identifier	FamilyBlues		1064682	1					
ANR	1065035	Identifier	values		1064682	1					
ANR	1065036	PrimaryExpression	2		1064682	1					
ANR	1065037	Argument	pdata -> FamilyBlues . count - 2		1064682	3					
ANR	1065038	AdditiveExpression	pdata -> FamilyBlues . count - 2		1064682	0		-			
ANR	1065039	MemberAccess	pdata -> FamilyBlues . count		1064682	0					
ANR	1065040	PtrMemberAccess	pdata -> FamilyBlues		1064682	0					
ANR	1065041	Identifier	pdata		1064682	0					
ANR	1065042	Identifier	FamilyBlues		1064682	1					
ANR	1065043	Identifier	count		1064682	1					
ANR	1065044	PrimaryExpression	2		1064682	1					
ANR	1065045	Argument	topzone		1064682	4					
ANR	1065046	Identifier	topzone		1064682	0					
ANR	1065047	Argument	true		1064682	5					
ANR	1065048	Identifier	true		1064682	0					
ANR	1065049	IfStatement	if ( code >= 0 )		1064682	21					
ANR	1065050	Condition	code >= 0	779:8:32398:32406	1064682	0	True				
ANR	1065051	RelationalExpression	code >= 0		1064682	0		>=			
ANR	1065052	Identifier	code		1064682	0					
ANR	1065053	PrimaryExpression	0		1064682	1					
ANR	1065054	ExpressionStatement	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StdHW . values , pdata -> StdHW . count , 0 )"	780:8:32417:32503	1064682	1	True				
ANR	1065055	AssignmentExpression	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StdHW . values , pdata -> StdHW . count , 0 )"		1064682	0		=			
ANR	1065056	Identifier	code		1064682	0					
ANR	1065057	CallExpression	"t1_hinter__set_stem_snap ( mem , self , pdata -> StdHW . values , pdata -> StdHW . count , 0 )"		1064682	1					
ANR	1065058	Callee	t1_hinter__set_stem_snap		1064682	0					
ANR	1065059	Identifier	t1_hinter__set_stem_snap		1064682	0					
ANR	1065060	ArgumentList	mem		1064682	1					
ANR	1065061	Argument	mem		1064682	0					
ANR	1065062	Identifier	mem		1064682	0					
ANR	1065063	Argument	self		1064682	1					
ANR	1065064	Identifier	self		1064682	0					
ANR	1065065	Argument	pdata -> StdHW . values		1064682	2					
ANR	1065066	MemberAccess	pdata -> StdHW . values		1064682	0					
ANR	1065067	PtrMemberAccess	pdata -> StdHW		1064682	0					
ANR	1065068	Identifier	pdata		1064682	0					
ANR	1065069	Identifier	StdHW		1064682	1					
ANR	1065070	Identifier	values		1064682	1					
ANR	1065071	Argument	pdata -> StdHW . count		1064682	3					
ANR	1065072	MemberAccess	pdata -> StdHW . count		1064682	0					
ANR	1065073	PtrMemberAccess	pdata -> StdHW		1064682	0					
ANR	1065074	Identifier	pdata		1064682	0					
ANR	1065075	Identifier	StdHW		1064682	1					
ANR	1065076	Identifier	count		1064682	1					
ANR	1065077	Argument	0		1064682	4					
ANR	1065078	PrimaryExpression	0		1064682	0					
ANR	1065079	IfStatement	if ( code >= 0 )		1064682	22					
ANR	1065080	Condition	code >= 0	781:8:32513:32521	1064682	0	True				
ANR	1065081	RelationalExpression	code >= 0		1064682	0		>=			
ANR	1065082	Identifier	code		1064682	0					
ANR	1065083	PrimaryExpression	0		1064682	1					
ANR	1065084	ExpressionStatement	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StdVW . values , pdata -> StdVW . count , 1 )"	782:8:32532:32618	1064682	1	True				
ANR	1065085	AssignmentExpression	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StdVW . values , pdata -> StdVW . count , 1 )"		1064682	0		=			
ANR	1065086	Identifier	code		1064682	0					
ANR	1065087	CallExpression	"t1_hinter__set_stem_snap ( mem , self , pdata -> StdVW . values , pdata -> StdVW . count , 1 )"		1064682	1					
ANR	1065088	Callee	t1_hinter__set_stem_snap		1064682	0					
ANR	1065089	Identifier	t1_hinter__set_stem_snap		1064682	0					
ANR	1065090	ArgumentList	mem		1064682	1					
ANR	1065091	Argument	mem		1064682	0					
ANR	1065092	Identifier	mem		1064682	0					
ANR	1065093	Argument	self		1064682	1					
ANR	1065094	Identifier	self		1064682	0					
ANR	1065095	Argument	pdata -> StdVW . values		1064682	2					
ANR	1065096	MemberAccess	pdata -> StdVW . values		1064682	0					
ANR	1065097	PtrMemberAccess	pdata -> StdVW		1064682	0					
ANR	1065098	Identifier	pdata		1064682	0					
ANR	1065099	Identifier	StdVW		1064682	1					
ANR	1065100	Identifier	values		1064682	1					
ANR	1065101	Argument	pdata -> StdVW . count		1064682	3					
ANR	1065102	MemberAccess	pdata -> StdVW . count		1064682	0					
ANR	1065103	PtrMemberAccess	pdata -> StdVW		1064682	0					
ANR	1065104	Identifier	pdata		1064682	0					
ANR	1065105	Identifier	StdVW		1064682	1					
ANR	1065106	Identifier	count		1064682	1					
ANR	1065107	Argument	1		1064682	4					
ANR	1065108	PrimaryExpression	1		1064682	0					
ANR	1065109	IfStatement	if ( code >= 0 )		1064682	23					
ANR	1065110	Condition	code >= 0	783:8:32628:32636	1064682	0	True				
ANR	1065111	RelationalExpression	code >= 0		1064682	0		>=			
ANR	1065112	Identifier	code		1064682	0					
ANR	1065113	PrimaryExpression	0		1064682	1					
ANR	1065114	ExpressionStatement	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StemSnapH . values , pdata -> StemSnapH . count , 0 )"	784:8:32647:32741	1064682	1	True				
ANR	1065115	AssignmentExpression	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StemSnapH . values , pdata -> StemSnapH . count , 0 )"		1064682	0		=			
ANR	1065116	Identifier	code		1064682	0					
ANR	1065117	CallExpression	"t1_hinter__set_stem_snap ( mem , self , pdata -> StemSnapH . values , pdata -> StemSnapH . count , 0 )"		1064682	1					
ANR	1065118	Callee	t1_hinter__set_stem_snap		1064682	0					
ANR	1065119	Identifier	t1_hinter__set_stem_snap		1064682	0					
ANR	1065120	ArgumentList	mem		1064682	1					
ANR	1065121	Argument	mem		1064682	0					
ANR	1065122	Identifier	mem		1064682	0					
ANR	1065123	Argument	self		1064682	1					
ANR	1065124	Identifier	self		1064682	0					
ANR	1065125	Argument	pdata -> StemSnapH . values		1064682	2					
ANR	1065126	MemberAccess	pdata -> StemSnapH . values		1064682	0					
ANR	1065127	PtrMemberAccess	pdata -> StemSnapH		1064682	0					
ANR	1065128	Identifier	pdata		1064682	0					
ANR	1065129	Identifier	StemSnapH		1064682	1					
ANR	1065130	Identifier	values		1064682	1					
ANR	1065131	Argument	pdata -> StemSnapH . count		1064682	3					
ANR	1065132	MemberAccess	pdata -> StemSnapH . count		1064682	0					
ANR	1065133	PtrMemberAccess	pdata -> StemSnapH		1064682	0					
ANR	1065134	Identifier	pdata		1064682	0					
ANR	1065135	Identifier	StemSnapH		1064682	1					
ANR	1065136	Identifier	count		1064682	1					
ANR	1065137	Argument	0		1064682	4					
ANR	1065138	PrimaryExpression	0		1064682	0					
ANR	1065139	IfStatement	if ( code >= 0 )		1064682	24					
ANR	1065140	Condition	code >= 0	785:8:32751:32759	1064682	0	True				
ANR	1065141	RelationalExpression	code >= 0		1064682	0		>=			
ANR	1065142	Identifier	code		1064682	0					
ANR	1065143	PrimaryExpression	0		1064682	1					
ANR	1065144	ExpressionStatement	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StemSnapV . values , pdata -> StemSnapV . count , 1 )"	786:8:32770:32864	1064682	1	True				
ANR	1065145	AssignmentExpression	"code = t1_hinter__set_stem_snap ( mem , self , pdata -> StemSnapV . values , pdata -> StemSnapV . count , 1 )"		1064682	0		=			
ANR	1065146	Identifier	code		1064682	0					
ANR	1065147	CallExpression	"t1_hinter__set_stem_snap ( mem , self , pdata -> StemSnapV . values , pdata -> StemSnapV . count , 1 )"		1064682	1					
ANR	1065148	Callee	t1_hinter__set_stem_snap		1064682	0					
ANR	1065149	Identifier	t1_hinter__set_stem_snap		1064682	0					
ANR	1065150	ArgumentList	mem		1064682	1					
ANR	1065151	Argument	mem		1064682	0					
ANR	1065152	Identifier	mem		1064682	0					
ANR	1065153	Argument	self		1064682	1					
ANR	1065154	Identifier	self		1064682	0					
ANR	1065155	Argument	pdata -> StemSnapV . values		1064682	2					
ANR	1065156	MemberAccess	pdata -> StemSnapV . values		1064682	0					
ANR	1065157	PtrMemberAccess	pdata -> StemSnapV		1064682	0					
ANR	1065158	Identifier	pdata		1064682	0					
ANR	1065159	Identifier	StemSnapV		1064682	1					
ANR	1065160	Identifier	values		1064682	1					
ANR	1065161	Argument	pdata -> StemSnapV . count		1064682	3					
ANR	1065162	MemberAccess	pdata -> StemSnapV . count		1064682	0					
ANR	1065163	PtrMemberAccess	pdata -> StemSnapV		1064682	0					
ANR	1065164	Identifier	pdata		1064682	0					
ANR	1065165	Identifier	StemSnapV		1064682	1					
ANR	1065166	Identifier	count		1064682	1					
ANR	1065167	Argument	1		1064682	4					
ANR	1065168	PrimaryExpression	1		1064682	0					
ANR	1065169	ReturnStatement	return code ;	787:4:32870:32881	1064682	25	True				
ANR	1065170	Identifier	code		1064682	0					
ANR	1065171	ReturnType	int		1064682	1					
ANR	1065172	Identifier	t1_hinter__set_font_data		1064682	2					
ANR	1065173	ParameterList	"gs_memory_t * mem , t1_hinter * self , int FontType , gs_type1_data * pdata , bool no_grid_fitting , bool is_resource"		1064682	3					
ANR	1065174	Parameter	gs_memory_t * mem	749:29:30521:30536	1064682	0	True				
ANR	1065175	ParameterType	gs_memory_t *		1064682	0					
ANR	1065176	Identifier	mem		1064682	1					
ANR	1065177	Parameter	t1_hinter * self	749:47:30539:30554	1064682	1	True				
ANR	1065178	ParameterType	t1_hinter *		1064682	0					
ANR	1065179	Identifier	self		1064682	1					
ANR	1065180	Parameter	int FontType	749:65:30557:30568	1064682	2	True				
ANR	1065181	ParameterType	int		1064682	0					
ANR	1065182	Identifier	FontType		1064682	1					
ANR	1065183	Parameter	gs_type1_data * pdata	749:79:30571:30590	1064682	3	True				
ANR	1065184	ParameterType	gs_type1_data *		1064682	0					
ANR	1065185	Identifier	pdata		1064682	1					
ANR	1065186	Parameter	bool no_grid_fitting	749:101:30593:30612	1064682	4	True				
ANR	1065187	ParameterType	bool		1064682	0					
ANR	1065188	Identifier	no_grid_fitting		1064682	1					
ANR	1065189	Parameter	bool is_resource	749:123:30615:30630	1064682	5	True				
ANR	1065190	ParameterType	bool		1064682	0					
ANR	1065191	Identifier	is_resource		1064682	1					
ANR	1065192	CFGEntryNode	ENTRY		1064682		True				
ANR	1065193	CFGExitNode	EXIT		1064682		True				
ANR	1065194	Symbol	pdata -> FamilyBlues . values		1064682						
ANR	1065195	Symbol	pdata -> FamilyBlues		1064682						
ANR	1065196	Symbol	no_grid_fitting		1064682						
ANR	1065197	Symbol	pdata -> StemSnapH		1064682						
ANR	1065198	Symbol	pdata -> BlueScale		1064682						
ANR	1065199	Symbol	self -> suppress_overshoots		1064682						
ANR	1065200	Symbol	pdata -> ForceBold		1064682						
ANR	1065201	Symbol	pdata -> FamilyBlues . count		1064682						
ANR	1065202	Symbol	self -> blue_fuzz		1064682						
ANR	1065203	Symbol	pdata -> OtherBlues . count		1064682						
ANR	1065204	Symbol	pdata -> StemSnapV		1064682						
ANR	1065205	Symbol	* pdata		1064682						
ANR	1065206	Symbol	topzone		1064682						
ANR	1065207	Symbol	self -> overshoot_threshold		1064682						
ANR	1065208	Symbol	NULL		1064682						
ANR	1065209	Symbol	* self		1064682						
ANR	1065210	Symbol	self -> pass_through		1064682						
ANR	1065211	Symbol	pdata -> StdHW		1064682						
ANR	1065212	Symbol	pdata -> BlueFuzz		1064682						
ANR	1065213	Symbol	self -> charpath_flag		1064682						
ANR	1065214	Symbol	pdata -> StdHW . count		1064682						
ANR	1065215	Symbol	t1_hinter__set_stem_snap		1064682						
ANR	1065216	Symbol	pdata -> BlueShift		1064682						
ANR	1065217	Symbol	true		1064682						
ANR	1065218	Symbol	pdata -> FamilyOtherBlues		1064682						
ANR	1065219	Symbol	pdata -> BlueValues . values		1064682						
ANR	1065220	Symbol	pdata -> StemSnapV . count		1064682						
ANR	1065221	Symbol	pdata		1064682						
ANR	1065222	Symbol	code		1064682						
ANR	1065223	Symbol	pdata -> OtherBlues		1064682						
ANR	1065224	Symbol	self -> FontType		1064682						
ANR	1065225	Symbol	self -> disable_hinting		1064682						
ANR	1065226	Symbol	pdata -> OtherBlues . values		1064682						
ANR	1065227	Symbol	self -> memory		1064682						
ANR	1065228	Symbol	pdata -> BlueValues		1064682						
ANR	1065229	Symbol	float2fixed		1064682						
ANR	1065230	Symbol	min		1064682						
ANR	1065231	Symbol	mem		1064682						
ANR	1065232	Symbol	pdata -> StemSnapV . values		1064682						
ANR	1065233	Symbol	pdata -> FamilyOtherBlues . count		1064682						
ANR	1065234	Symbol	pdata -> StdVW . count		1064682						
ANR	1065235	Symbol	pdata -> StdVW		1064682						
ANR	1065236	Symbol	fixed_half		1064682						
ANR	1065237	Symbol	botzone		1064682						
ANR	1065238	Symbol	pdata -> BlueValues . count		1064682						
ANR	1065239	Symbol	is_resource		1064682						
ANR	1065240	Symbol	self -> ForceBold		1064682						
ANR	1065241	Symbol	pdata -> StemSnapH . values		1064682						
ANR	1065242	Symbol	pdata -> StemSnapH . count		1064682						
ANR	1065243	Symbol	self -> blue_shift		1064682						
ANR	1065244	Symbol	self -> heigt_transform_coef		1064682						
ANR	1065245	Symbol	false		1064682						
ANR	1065246	Symbol	self -> log2_pixels_y		1064682						
ANR	1065247	Symbol	FontType		1064682						
ANR	1065248	Symbol	pdata -> StdHW . values		1064682						
ANR	1065249	Symbol	t1_hinter__set_alignment_zones		1064682						
ANR	1065250	Symbol	pdata -> StdVW . values		1064682						
ANR	1065251	Symbol	self -> fix_contour_sign		1064682						
ANR	1065252	Symbol	pdata -> FamilyOtherBlues . values		1064682						
ANR	1065253	Symbol	self		1064682						
ANR	1065254	Symbol	self -> BlueScale		1064682						
ANR	1065255	Function	t1_hinter__set_font42_data	790:0:32886:33794							
ANR	1065256	FunctionDef	"t1_hinter__set_font42_data (t1_hinter * self , int FontType , gs_type42_data * pdata , bool no_grid_fitting)"		1065255	0					
ANR	1065257	CompoundStatement		791:0:32994:33794	1065255	0					
ANR	1065258	ExpressionStatement	t1_hinter__init_outline ( self )	792:4:33000:33029	1065255	0	True				
ANR	1065259	CallExpression	t1_hinter__init_outline ( self )		1065255	0					
ANR	1065260	Callee	t1_hinter__init_outline		1065255	0					
ANR	1065261	Identifier	t1_hinter__init_outline		1065255	0					
ANR	1065262	ArgumentList	self		1065255	1					
ANR	1065263	Argument	self		1065255	0					
ANR	1065264	Identifier	self		1065255	0					
ANR	1065265	ExpressionStatement	self -> FontType = FontType	793:4:33035:33060	1065255	1	True				
ANR	1065266	AssignmentExpression	self -> FontType = FontType		1065255	0		=			
ANR	1065267	PtrMemberAccess	self -> FontType		1065255	0					
ANR	1065268	Identifier	self		1065255	0					
ANR	1065269	Identifier	FontType		1065255	1					
ANR	1065270	Identifier	FontType		1065255	1					
ANR	1065271	ExpressionStatement	self -> BlueScale = 0.039625	794:4:33066:33092	1065255	2	True				
ANR	1065272	AssignmentExpression	self -> BlueScale = 0.039625		1065255	0		=			
ANR	1065273	PtrMemberAccess	self -> BlueScale		1065255	0					
ANR	1065274	Identifier	self		1065255	0					
ANR	1065275	Identifier	BlueScale		1065255	1					
ANR	1065276	PrimaryExpression	0.039625		1065255	1					
ANR	1065277	ExpressionStatement	self -> blue_shift = 7	795:4:33127:33147	1065255	3	True				
ANR	1065278	AssignmentExpression	self -> blue_shift = 7		1065255	0		=			
ANR	1065279	PtrMemberAccess	self -> blue_shift		1065255	0					
ANR	1065280	Identifier	self		1065255	0					
ANR	1065281	Identifier	blue_shift		1065255	1					
ANR	1065282	PrimaryExpression	7		1065255	1					
ANR	1065283	ExpressionStatement	self -> blue_fuzz = 1	796:4:33182:33202	1065255	4	True				
ANR	1065284	AssignmentExpression	self -> blue_fuzz = 1		1065255	0		=			
ANR	1065285	PtrMemberAccess	self -> blue_fuzz		1065255	0					
ANR	1065286	Identifier	self		1065255	0					
ANR	1065287	Identifier	blue_fuzz		1065255	1					
ANR	1065288	PrimaryExpression	1		1065255	1					
ANR	1065289	ExpressionStatement	self -> suppress_overshoots = ( self -> BlueScale > self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417 )	797:4:33237:33353	1065255	5	True				
ANR	1065290	AssignmentExpression	self -> suppress_overshoots = ( self -> BlueScale > self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417 )		1065255	0		=			
ANR	1065291	PtrMemberAccess	self -> suppress_overshoots		1065255	0					
ANR	1065292	Identifier	self		1065255	0					
ANR	1065293	Identifier	suppress_overshoots		1065255	1					
ANR	1065294	RelationalExpression	self -> BlueScale > self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417		1065255	1		>			
ANR	1065295	PtrMemberAccess	self -> BlueScale		1065255	0					
ANR	1065296	Identifier	self		1065255	0					
ANR	1065297	Identifier	BlueScale		1065255	1					
ANR	1065298	AdditiveExpression	self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y ) - 0.00020417		1065255	1		-			
ANR	1065299	MultiplicativeExpression	self -> heigt_transform_coef / ( 1 << self -> log2_pixels_y )		1065255	0		/			
ANR	1065300	PtrMemberAccess	self -> heigt_transform_coef		1065255	0					
ANR	1065301	Identifier	self		1065255	0					
ANR	1065302	Identifier	heigt_transform_coef		1065255	1					
ANR	1065303	ShiftExpression	1 << self -> log2_pixels_y		1065255	1		<<			
ANR	1065304	PrimaryExpression	1		1065255	0					
ANR	1065305	PtrMemberAccess	self -> log2_pixels_y		1065255	1					
ANR	1065306	Identifier	self		1065255	0					
ANR	1065307	Identifier	log2_pixels_y		1065255	1					
ANR	1065308	PrimaryExpression	0.00020417		1065255	1					
ANR	1065309	ExpressionStatement	self -> overshoot_threshold = ( self -> heigt_transform_coef != 0 ? ( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef ) : 0 )	798:4:33359:33519	1065255	6	True				
ANR	1065310	AssignmentExpression	self -> overshoot_threshold = ( self -> heigt_transform_coef != 0 ? ( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef ) : 0 )		1065255	0		=			
ANR	1065311	PtrMemberAccess	self -> overshoot_threshold		1065255	0					
ANR	1065312	Identifier	self		1065255	0					
ANR	1065313	Identifier	overshoot_threshold		1065255	1					
ANR	1065314	ConditionalExpression	self -> heigt_transform_coef != 0 ? ( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef ) : 0		1065255	1					
ANR	1065315	Condition	self -> heigt_transform_coef != 0		1065255	0					
ANR	1065316	EqualityExpression	self -> heigt_transform_coef != 0		1065255	0		!=			
ANR	1065317	PtrMemberAccess	self -> heigt_transform_coef		1065255	0					
ANR	1065318	Identifier	self		1065255	0					
ANR	1065319	Identifier	heigt_transform_coef		1065255	1					
ANR	1065320	PrimaryExpression	0		1065255	1					
ANR	1065321	CastExpression	( t1_glyph_space_coord ) ( fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef )		1065255	1					
ANR	1065322	CastTarget	t1_glyph_space_coord		1065255	0					
ANR	1065323	MultiplicativeExpression	fixed_half * ( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef		1065255	1		*			
ANR	1065324	Identifier	fixed_half		1065255	0					
ANR	1065325	MultiplicativeExpression	( 1 << self -> log2_pixels_y ) / self -> heigt_transform_coef		1065255	1		/			
ANR	1065326	ShiftExpression	1 << self -> log2_pixels_y		1065255	0		<<			
ANR	1065327	PrimaryExpression	1		1065255	0					
ANR	1065328	PtrMemberAccess	self -> log2_pixels_y		1065255	1					
ANR	1065329	Identifier	self		1065255	0					
ANR	1065330	Identifier	log2_pixels_y		1065255	1					
ANR	1065331	PtrMemberAccess	self -> heigt_transform_coef		1065255	1					
ANR	1065332	Identifier	self		1065255	0					
ANR	1065333	Identifier	heigt_transform_coef		1065255	1					
ANR	1065334	PrimaryExpression	0		1065255	2					
ANR	1065335	ExpressionStatement	self -> ForceBold = false	799:4:33525:33548	1065255	7	True				
ANR	1065336	AssignmentExpression	self -> ForceBold = false		1065255	0		=			
ANR	1065337	PtrMemberAccess	self -> ForceBold		1065255	0					
ANR	1065338	Identifier	self		1065255	0					
ANR	1065339	Identifier	ForceBold		1065255	1					
ANR	1065340	Identifier	false		1065255	1					
ANR	1065341	ExpressionStatement	self -> pass_through |= no_grid_fitting	800:4:33554:33591	1065255	8	True				
ANR	1065342	AssignmentExpression	self -> pass_through |= no_grid_fitting		1065255	0		|=			
ANR	1065343	PtrMemberAccess	self -> pass_through		1065255	0					
ANR	1065344	Identifier	self		1065255	0					
ANR	1065345	Identifier	pass_through		1065255	1					
ANR	1065346	Identifier	no_grid_fitting		1065255	1					
ANR	1065347	ExpressionStatement	self -> charpath_flag = no_grid_fitting	801:4:33597:33634	1065255	9	True				
ANR	1065348	AssignmentExpression	self -> charpath_flag = no_grid_fitting		1065255	0		=			
ANR	1065349	PtrMemberAccess	self -> charpath_flag		1065255	0					
ANR	1065350	Identifier	self		1065255	0					
ANR	1065351	Identifier	charpath_flag		1065255	1					
ANR	1065352	Identifier	no_grid_fitting		1065255	1					
ANR	1065353	ExpressionStatement	self -> autohinting = true	802:4:33640:33664	1065255	10	True				
ANR	1065354	AssignmentExpression	self -> autohinting = true		1065255	0		=			
ANR	1065355	PtrMemberAccess	self -> autohinting		1065255	0					
ANR	1065356	Identifier	self		1065255	0					
ANR	1065357	Identifier	autohinting		1065255	1					
ANR	1065358	Identifier	true		1065255	1					
ANR	1065359	IfStatement	if ( self -> pass_through )		1065255	11					
ANR	1065360	Condition	self -> pass_through	803:8:33674:33691	1065255	0	True				
ANR	1065361	PtrMemberAccess	self -> pass_through		1065255	0					
ANR	1065362	Identifier	self		1065255	0					
ANR	1065363	Identifier	pass_through		1065255	1					
ANR	1065364	ReturnStatement	return 0 ;	804:8:33702:33710	1065255	1	True				
ANR	1065365	PrimaryExpression	0		1065255	0					
ANR	1065366	ReturnStatement	return 0 ;	806:4:33784:33792	1065255	12	True				
ANR	1065367	PrimaryExpression	0		1065255	0					
ANR	1065368	ReturnType	int		1065255	1					
ANR	1065369	Identifier	t1_hinter__set_font42_data		1065255	2					
ANR	1065370	ParameterList	"t1_hinter * self , int FontType , gs_type42_data * pdata , bool no_grid_fitting"		1065255	3					
ANR	1065371	Parameter	t1_hinter * self	790:31:32917:32932	1065255	0	True				
ANR	1065372	ParameterType	t1_hinter *		1065255	0					
ANR	1065373	Identifier	self		1065255	1					
ANR	1065374	Parameter	int FontType	790:49:32935:32946	1065255	1	True				
ANR	1065375	ParameterType	int		1065255	0					
ANR	1065376	Identifier	FontType		1065255	1					
ANR	1065377	Parameter	gs_type42_data * pdata	790:63:32949:32969	1065255	2	True				
ANR	1065378	ParameterType	gs_type42_data *		1065255	0					
ANR	1065379	Identifier	pdata		1065255	1					
ANR	1065380	Parameter	bool no_grid_fitting	790:86:32972:32991	1065255	3	True				
ANR	1065381	ParameterType	bool		1065255	0					
ANR	1065382	Identifier	no_grid_fitting		1065255	1					
ANR	1065383	CFGEntryNode	ENTRY		1065255		True				
ANR	1065384	CFGExitNode	EXIT		1065255		True				
ANR	1065385	Symbol	self -> ForceBold		1065255						
ANR	1065386	Symbol	self -> autohinting		1065255						
ANR	1065387	Symbol	pdata		1065255						
ANR	1065388	Symbol	self -> overshoot_threshold		1065255						
ANR	1065389	Symbol	self -> blue_shift		1065255						
ANR	1065390	Symbol	self -> FontType		1065255						
ANR	1065391	Symbol	* self		1065255						
ANR	1065392	Symbol	self -> heigt_transform_coef		1065255						
ANR	1065393	Symbol	false		1065255						
ANR	1065394	Symbol	self -> pass_through		1065255						
ANR	1065395	Symbol	no_grid_fitting		1065255						
ANR	1065396	Symbol	self -> log2_pixels_y		1065255						
ANR	1065397	Symbol	FontType		1065255						
ANR	1065398	Symbol	self -> charpath_flag		1065255						
ANR	1065399	Symbol	self -> suppress_overshoots		1065255						
ANR	1065400	Symbol	true		1065255						
ANR	1065401	Symbol	self		1065255						
ANR	1065402	Symbol	self -> BlueScale		1065255						
ANR	1065403	Symbol	fixed_half		1065255						
ANR	1065404	Symbol	self -> blue_fuzz		1065255						
ANR	1065405	Function	t1_hinter__can_add_pole	809:0:33797:34242							
ANR	1065406	FunctionDef	"t1_hinter__can_add_pole (t1_hinter * self , t1_pole * * pole)"		1065405	0					
ANR	1065407	CompoundStatement		810:0:33873:34242	1065405	0					
ANR	1065408	IfStatement	if ( self -> pole_count >= self -> max_pole_count )		1065405	0					
ANR	1065409	Condition	self -> pole_count >= self -> max_pole_count	810:7:33881:33920	1065405	0	True				
ANR	1065410	RelationalExpression	self -> pole_count >= self -> max_pole_count		1065405	0		>=			
ANR	1065411	PtrMemberAccess	self -> pole_count		1065405	0					
ANR	1065412	Identifier	self		1065405	0					
ANR	1065413	Identifier	pole_count		1065405	1					
ANR	1065414	PtrMemberAccess	self -> max_pole_count		1065405	1					
ANR	1065415	Identifier	self		1065405	0					
ANR	1065416	Identifier	max_pole_count		1065405	1					
ANR	1065417	IfStatement	"if ( t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> pole , self -> pole0 , & self -> max_pole_count , sizeof ( self -> pole0 ) / count_of ( self -> pole0 ) , T1_MAX_POLES , s_pole_array ) )"		1065405	1					
ANR	1065418	Condition	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> pole , self -> pole0 , & self -> max_pole_count , sizeof ( self -> pole0 ) / count_of ( self -> pole0 ) , T1_MAX_POLES , s_pole_array )"	811:11:33934:34138	1065405	0	True				
ANR	1065419	CallExpression	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> pole , self -> pole0 , & self -> max_pole_count , sizeof ( self -> pole0 ) / count_of ( self -> pole0 ) , T1_MAX_POLES , s_pole_array )"		1065405	0					
ANR	1065420	Callee	t1_hinter__realloc_array		1065405	0					
ANR	1065421	Identifier	t1_hinter__realloc_array		1065405	0					
ANR	1065422	ArgumentList	self -> memory		1065405	1					
ANR	1065423	Argument	self -> memory		1065405	0					
ANR	1065424	PtrMemberAccess	self -> memory		1065405	0					
ANR	1065425	Identifier	self		1065405	0					
ANR	1065426	Identifier	memory		1065405	1					
ANR	1065427	Argument	( void * * ) & self -> pole		1065405	1					
ANR	1065428	CastExpression	( void * * ) & self -> pole		1065405	0					
ANR	1065429	CastTarget	void * *		1065405	0					
ANR	1065430	UnaryOperationExpression	& self -> pole		1065405	1					
ANR	1065431	UnaryOperator	&		1065405	0					
ANR	1065432	PtrMemberAccess	self -> pole		1065405	1					
ANR	1065433	Identifier	self		1065405	0					
ANR	1065434	Identifier	pole		1065405	1					
ANR	1065435	Argument	self -> pole0		1065405	2					
ANR	1065436	PtrMemberAccess	self -> pole0		1065405	0					
ANR	1065437	Identifier	self		1065405	0					
ANR	1065438	Identifier	pole0		1065405	1					
ANR	1065439	Argument	& self -> max_pole_count		1065405	3					
ANR	1065440	UnaryOperationExpression	& self -> max_pole_count		1065405	0					
ANR	1065441	UnaryOperator	&		1065405	0					
ANR	1065442	PtrMemberAccess	self -> max_pole_count		1065405	1					
ANR	1065443	Identifier	self		1065405	0					
ANR	1065444	Identifier	max_pole_count		1065405	1					
ANR	1065445	Argument	sizeof ( self -> pole0 ) / count_of ( self -> pole0 )		1065405	4					
ANR	1065446	MultiplicativeExpression	sizeof ( self -> pole0 ) / count_of ( self -> pole0 )		1065405	0		/			
ANR	1065447	SizeofExpression	sizeof ( self -> pole0 )		1065405	0					
ANR	1065448	Sizeof	sizeof		1065405	0					
ANR	1065449	PtrMemberAccess	self -> pole0		1065405	1					
ANR	1065450	Identifier	self		1065405	0					
ANR	1065451	Identifier	pole0		1065405	1					
ANR	1065452	CallExpression	count_of ( self -> pole0 )		1065405	1					
ANR	1065453	Callee	count_of		1065405	0					
ANR	1065454	Identifier	count_of		1065405	0					
ANR	1065455	ArgumentList	self -> pole0		1065405	1					
ANR	1065456	Argument	self -> pole0		1065405	0					
ANR	1065457	PtrMemberAccess	self -> pole0		1065405	0					
ANR	1065458	Identifier	self		1065405	0					
ANR	1065459	Identifier	pole0		1065405	1					
ANR	1065460	Argument	T1_MAX_POLES		1065405	5					
ANR	1065461	Identifier	T1_MAX_POLES		1065405	0					
ANR	1065462	Argument	s_pole_array		1065405	6					
ANR	1065463	Identifier	s_pole_array		1065405	0					
ANR	1065464	ExpressionStatement	return_error ( gs_error_VMerror )	813:12:34153:34183	1065405	1	True				
ANR	1065465	CallExpression	return_error ( gs_error_VMerror )		1065405	0					
ANR	1065466	Callee	return_error		1065405	0					
ANR	1065467	Identifier	return_error		1065405	0					
ANR	1065468	ArgumentList	gs_error_VMerror		1065405	1					
ANR	1065469	Argument	gs_error_VMerror		1065405	0					
ANR	1065470	Identifier	gs_error_VMerror		1065405	0					
ANR	1065471	ExpressionStatement	* pole = & self -> pole [ self -> pole_count ]	814:4:34189:34226	1065405	1	True				
ANR	1065472	AssignmentExpression	* pole = & self -> pole [ self -> pole_count ]		1065405	0		=			
ANR	1065473	UnaryOperationExpression	* pole		1065405	0					
ANR	1065474	UnaryOperator	*		1065405	0					
ANR	1065475	Identifier	pole		1065405	1					
ANR	1065476	UnaryOperationExpression	& self -> pole [ self -> pole_count ]		1065405	1					
ANR	1065477	UnaryOperator	&		1065405	0					
ANR	1065478	ArrayIndexing	self -> pole [ self -> pole_count ]		1065405	1					
ANR	1065479	PtrMemberAccess	self -> pole		1065405	0					
ANR	1065480	Identifier	self		1065405	0					
ANR	1065481	Identifier	pole		1065405	1					
ANR	1065482	PtrMemberAccess	self -> pole_count		1065405	1					
ANR	1065483	Identifier	self		1065405	0					
ANR	1065484	Identifier	pole_count		1065405	1					
ANR	1065485	ReturnStatement	return 0 ;	815:4:34232:34240	1065405	2	True				
ANR	1065486	PrimaryExpression	0		1065405	0					
ANR	1065487	ReturnType	static inline int		1065405	1					
ANR	1065488	Identifier	t1_hinter__can_add_pole		1065405	2					
ANR	1065489	ParameterList	"t1_hinter * self , t1_pole * * pole"		1065405	3					
ANR	1065490	Parameter	t1_hinter * self	809:42:33839:33854	1065405	0	True				
ANR	1065491	ParameterType	t1_hinter *		1065405	0					
ANR	1065492	Identifier	self		1065405	1					
ANR	1065493	Parameter	t1_pole * * pole	809:60:33857:33870	1065405	1	True				
ANR	1065494	ParameterType	t1_pole * *		1065405	0					
ANR	1065495	Identifier	pole		1065405	1					
ANR	1065496	CFGEntryNode	ENTRY		1065405		True				
ANR	1065497	CFGExitNode	EXIT		1065405		True				
ANR	1065498	Symbol	& self -> max_pole_count		1065405						
ANR	1065499	Symbol	self -> pole_count		1065405						
ANR	1065500	Symbol	* self		1065405						
ANR	1065501	Symbol	t1_hinter__realloc_array		1065405						
ANR	1065502	Symbol	s_pole_array		1065405						
ANR	1065503	Symbol	pole		1065405						
ANR	1065504	Symbol	* pole		1065405						
ANR	1065505	Symbol	self -> memory		1065405						
ANR	1065506	Symbol	gs_error_VMerror		1065405						
ANR	1065507	Symbol	self -> max_pole_count		1065405						
ANR	1065508	Symbol	self -> pole0		1065405						
ANR	1065509	Symbol	count_of		1065405						
ANR	1065510	Symbol	self		1065405						
ANR	1065511	Symbol	self -> pole		1065405						
ANR	1065512	Symbol	& self -> pole		1065405						
ANR	1065513	Symbol	T1_MAX_POLES		1065405						
ANR	1065514	Function	t1_hinter__add_pole	818:0:34245:34818							
ANR	1065515	FunctionDef	"t1_hinter__add_pole (t1_hinter * self , t1_glyph_space_coord xx , t1_glyph_space_coord yy , enum t1_pole_type type)"		1065514	0					
ANR	1065516	CompoundStatement		819:0:34375:34818	1065514	0					
ANR	1065517	IdentifierDeclStatement	t1_pole * pole ;	819:3:34379:34392	1065514	0	True				
ANR	1065518	IdentifierDecl	* pole		1065514	0					
ANR	1065519	IdentifierDeclType	t1_pole *		1065514	0					
ANR	1065520	Identifier	pole		1065514	1					
ANR	1065521	IdentifierDeclStatement	"int code = t1_hinter__can_add_pole ( self , & pole ) ;"	820:4:34398:34445	1065514	1	True				
ANR	1065522	IdentifierDecl	"code = t1_hinter__can_add_pole ( self , & pole )"		1065514	0					
ANR	1065523	IdentifierDeclType	int		1065514	0					
ANR	1065524	Identifier	code		1065514	1					
ANR	1065525	AssignmentExpression	"code = t1_hinter__can_add_pole ( self , & pole )"		1065514	2		=			
ANR	1065526	Identifier	code		1065514	0					
ANR	1065527	CallExpression	"t1_hinter__can_add_pole ( self , & pole )"		1065514	1					
ANR	1065528	Callee	t1_hinter__can_add_pole		1065514	0					
ANR	1065529	Identifier	t1_hinter__can_add_pole		1065514	0					
ANR	1065530	ArgumentList	self		1065514	1					
ANR	1065531	Argument	self		1065514	0					
ANR	1065532	Identifier	self		1065514	0					
ANR	1065533	Argument	& pole		1065514	1					
ANR	1065534	UnaryOperationExpression	& pole		1065514	0					
ANR	1065535	UnaryOperator	&		1065514	0					
ANR	1065536	Identifier	pole		1065514	1					
ANR	1065537	IfStatement	if ( code < 0 )		1065514	2					
ANR	1065538	Condition	code < 0	822:8:34456:34463	1065514	0	True				
ANR	1065539	RelationalExpression	code < 0		1065514	0		<			
ANR	1065540	Identifier	code		1065514	0					
ANR	1065541	PrimaryExpression	0		1065514	1					
ANR	1065542	ReturnStatement	return code ;	823:8:34474:34485	1065514	1	True				
ANR	1065543	Identifier	code		1065514	0					
ANR	1065544	ExpressionStatement	pole -> gx = pole -> ax = self -> cx += xx	824:4:34491:34527	1065514	3	True				
ANR	1065545	AssignmentExpression	pole -> gx = pole -> ax = self -> cx += xx		1065514	0		=			
ANR	1065546	PtrMemberAccess	pole -> gx		1065514	0					
ANR	1065547	Identifier	pole		1065514	0					
ANR	1065548	Identifier	gx		1065514	1					
ANR	1065549	AssignmentExpression	pole -> ax = self -> cx += xx		1065514	1		=			
ANR	1065550	PtrMemberAccess	pole -> ax		1065514	0					
ANR	1065551	Identifier	pole		1065514	0					
ANR	1065552	Identifier	ax		1065514	1					
ANR	1065553	AssignmentExpression	self -> cx += xx		1065514	1		+=			
ANR	1065554	PtrMemberAccess	self -> cx		1065514	0					
ANR	1065555	Identifier	self		1065514	0					
ANR	1065556	Identifier	cx		1065514	1					
ANR	1065557	Identifier	xx		1065514	1					
ANR	1065558	ExpressionStatement	pole -> gy = pole -> ay = self -> cy += yy	825:4:34533:34569	1065514	4	True				
ANR	1065559	AssignmentExpression	pole -> gy = pole -> ay = self -> cy += yy		1065514	0		=			
ANR	1065560	PtrMemberAccess	pole -> gy		1065514	0					
ANR	1065561	Identifier	pole		1065514	0					
ANR	1065562	Identifier	gy		1065514	1					
ANR	1065563	AssignmentExpression	pole -> ay = self -> cy += yy		1065514	1		=			
ANR	1065564	PtrMemberAccess	pole -> ay		1065514	0					
ANR	1065565	Identifier	pole		1065514	0					
ANR	1065566	Identifier	ay		1065514	1					
ANR	1065567	AssignmentExpression	self -> cy += yy		1065514	1		+=			
ANR	1065568	PtrMemberAccess	self -> cy		1065514	0					
ANR	1065569	Identifier	self		1065514	0					
ANR	1065570	Identifier	cy		1065514	1					
ANR	1065571	Identifier	yy		1065514	1					
ANR	1065572	ExpressionStatement	pole -> ox = pole -> oy = 0	826:4:34575:34598	1065514	5	True				
ANR	1065573	AssignmentExpression	pole -> ox = pole -> oy = 0		1065514	0		=			
ANR	1065574	PtrMemberAccess	pole -> ox		1065514	0					
ANR	1065575	Identifier	pole		1065514	0					
ANR	1065576	Identifier	ox		1065514	1					
ANR	1065577	AssignmentExpression	pole -> oy = 0		1065514	1		=			
ANR	1065578	PtrMemberAccess	pole -> oy		1065514	0					
ANR	1065579	Identifier	pole		1065514	0					
ANR	1065580	Identifier	oy		1065514	1					
ANR	1065581	PrimaryExpression	0		1065514	1					
ANR	1065582	ExpressionStatement	pole -> type = type	827:4:34604:34621	1065514	6	True				
ANR	1065583	AssignmentExpression	pole -> type = type		1065514	0		=			
ANR	1065584	PtrMemberAccess	pole -> type		1065514	0					
ANR	1065585	Identifier	pole		1065514	0					
ANR	1065586	Identifier	type		1065514	1					
ANR	1065587	Identifier	type		1065514	1					
ANR	1065588	ExpressionStatement	pole -> contour_index = self -> contour_count	828:4:34627:34668	1065514	7	True				
ANR	1065589	AssignmentExpression	pole -> contour_index = self -> contour_count		1065514	0		=			
ANR	1065590	PtrMemberAccess	pole -> contour_index		1065514	0					
ANR	1065591	Identifier	pole		1065514	0					
ANR	1065592	Identifier	contour_index		1065514	1					
ANR	1065593	PtrMemberAccess	self -> contour_count		1065514	1					
ANR	1065594	Identifier	self		1065514	0					
ANR	1065595	Identifier	contour_count		1065514	1					
ANR	1065596	ExpressionStatement	pole -> aligned_x = pole -> aligned_y = unaligned	829:4:34674:34719	1065514	8	True				
ANR	1065597	AssignmentExpression	pole -> aligned_x = pole -> aligned_y = unaligned		1065514	0		=			
ANR	1065598	PtrMemberAccess	pole -> aligned_x		1065514	0					
ANR	1065599	Identifier	pole		1065514	0					
ANR	1065600	Identifier	aligned_x		1065514	1					
ANR	1065601	AssignmentExpression	pole -> aligned_y = unaligned		1065514	1		=			
ANR	1065602	PtrMemberAccess	pole -> aligned_y		1065514	0					
ANR	1065603	Identifier	pole		1065514	0					
ANR	1065604	Identifier	aligned_y		1065514	1					
ANR	1065605	Identifier	unaligned		1065514	1					
ANR	1065606	ExpressionStatement	pole -> boundary_length_x = pole -> boundary_length_y = 0	830:4:34725:34778	1065514	9	True				
ANR	1065607	AssignmentExpression	pole -> boundary_length_x = pole -> boundary_length_y = 0		1065514	0		=			
ANR	1065608	PtrMemberAccess	pole -> boundary_length_x		1065514	0					
ANR	1065609	Identifier	pole		1065514	0					
ANR	1065610	Identifier	boundary_length_x		1065514	1					
ANR	1065611	AssignmentExpression	pole -> boundary_length_y = 0		1065514	1		=			
ANR	1065612	PtrMemberAccess	pole -> boundary_length_y		1065514	0					
ANR	1065613	Identifier	pole		1065514	0					
ANR	1065614	Identifier	boundary_length_y		1065514	1					
ANR	1065615	PrimaryExpression	0		1065514	1					
ANR	1065616	ExpressionStatement	self -> pole_count ++	831:4:34784:34802	1065514	10	True				
ANR	1065617	PostIncDecOperationExpression	self -> pole_count ++		1065514	0					
ANR	1065618	PtrMemberAccess	self -> pole_count		1065514	0					
ANR	1065619	Identifier	self		1065514	0					
ANR	1065620	Identifier	pole_count		1065514	1					
ANR	1065621	IncDec	++		1065514	1					
ANR	1065622	ReturnStatement	return 0 ;	832:4:34808:34816	1065514	11	True				
ANR	1065623	PrimaryExpression	0		1065514	0					
ANR	1065624	ReturnType	static inline int		1065514	1					
ANR	1065625	Identifier	t1_hinter__add_pole		1065514	2					
ANR	1065626	ParameterList	"t1_hinter * self , t1_glyph_space_coord xx , t1_glyph_space_coord yy , enum t1_pole_type type"		1065514	3					
ANR	1065627	Parameter	t1_hinter * self	818:38:34283:34298	1065514	0	True				
ANR	1065628	ParameterType	t1_hinter *		1065514	0					
ANR	1065629	Identifier	self		1065514	1					
ANR	1065630	Parameter	t1_glyph_space_coord xx	818:56:34301:34323	1065514	1	True				
ANR	1065631	ParameterType	t1_glyph_space_coord		1065514	0					
ANR	1065632	Identifier	xx		1065514	1					
ANR	1065633	Parameter	t1_glyph_space_coord yy	818:81:34326:34348	1065514	2	True				
ANR	1065634	ParameterType	t1_glyph_space_coord		1065514	0					
ANR	1065635	Identifier	yy		1065514	1					
ANR	1065636	Parameter	enum t1_pole_type type	818:106:34351:34372	1065514	3	True				
ANR	1065637	ParameterType	enum t1_pole_type		1065514	0					
ANR	1065638	Identifier	type		1065514	1					
ANR	1065639	CFGEntryNode	ENTRY		1065514		True				
ANR	1065640	CFGExitNode	EXIT		1065514		True				
ANR	1065641	Symbol	xx		1065514						
ANR	1065642	Symbol	pole -> oy		1065514						
ANR	1065643	Symbol	code		1065514						
ANR	1065644	Symbol	pole -> ox		1065514						
ANR	1065645	Symbol	self -> pole_count		1065514						
ANR	1065646	Symbol	pole -> boundary_length_y		1065514						
ANR	1065647	Symbol	pole -> gy		1065514						
ANR	1065648	Symbol	t1_hinter__can_add_pole		1065514						
ANR	1065649	Symbol	pole -> gx		1065514						
ANR	1065650	Symbol	pole -> boundary_length_x		1065514						
ANR	1065651	Symbol	type		1065514						
ANR	1065652	Symbol	pole		1065514						
ANR	1065653	Symbol	pole -> ay		1065514						
ANR	1065654	Symbol	pole -> ax		1065514						
ANR	1065655	Symbol	* pole		1065514						
ANR	1065656	Symbol	pole -> contour_index		1065514						
ANR	1065657	Symbol	self -> cx		1065514						
ANR	1065658	Symbol	self -> cy		1065514						
ANR	1065659	Symbol	yy		1065514						
ANR	1065660	Symbol	pole -> type		1065514						
ANR	1065661	Symbol	self -> contour_count		1065514						
ANR	1065662	Symbol	* self		1065514						
ANR	1065663	Symbol	unaligned		1065514						
ANR	1065664	Symbol	self		1065514						
ANR	1065665	Symbol	& pole		1065514						
ANR	1065666	Symbol	pole -> aligned_y		1065514						
ANR	1065667	Symbol	pole -> aligned_x		1065514						
ANR	1065668	Function	t1_hinter__sbw	835:0:34821:35087							
ANR	1065669	FunctionDef	"t1_hinter__sbw (t1_hinter * self , fixed sbx , fixed sby , fixed wx , fixed wy)"		1065668	0					
ANR	1065670	CompoundStatement		836:0:34901:35087	1065668	0					
ANR	1065671	ExpressionStatement	self -> cx = self -> orig_gx = self -> subglyph_orig_gx = sbx	836:3:34905:34960	1065668	0	True				
ANR	1065672	AssignmentExpression	self -> cx = self -> orig_gx = self -> subglyph_orig_gx = sbx		1065668	0		=			
ANR	1065673	PtrMemberAccess	self -> cx		1065668	0					
ANR	1065674	Identifier	self		1065668	0					
ANR	1065675	Identifier	cx		1065668	1					
ANR	1065676	AssignmentExpression	self -> orig_gx = self -> subglyph_orig_gx = sbx		1065668	1		=			
ANR	1065677	PtrMemberAccess	self -> orig_gx		1065668	0					
ANR	1065678	Identifier	self		1065668	0					
ANR	1065679	Identifier	orig_gx		1065668	1					
ANR	1065680	AssignmentExpression	self -> subglyph_orig_gx = sbx		1065668	1		=			
ANR	1065681	PtrMemberAccess	self -> subglyph_orig_gx		1065668	0					
ANR	1065682	Identifier	self		1065668	0					
ANR	1065683	Identifier	subglyph_orig_gx		1065668	1					
ANR	1065684	Identifier	sbx		1065668	1					
ANR	1065685	ExpressionStatement	self -> cy = self -> orig_gy = self -> subglyph_orig_gy = sby	837:4:34966:35021	1065668	1	True				
ANR	1065686	AssignmentExpression	self -> cy = self -> orig_gy = self -> subglyph_orig_gy = sby		1065668	0		=			
ANR	1065687	PtrMemberAccess	self -> cy		1065668	0					
ANR	1065688	Identifier	self		1065668	0					
ANR	1065689	Identifier	cy		1065668	1					
ANR	1065690	AssignmentExpression	self -> orig_gy = self -> subglyph_orig_gy = sby		1065668	1		=			
ANR	1065691	PtrMemberAccess	self -> orig_gy		1065668	0					
ANR	1065692	Identifier	self		1065668	0					
ANR	1065693	Identifier	orig_gy		1065668	1					
ANR	1065694	AssignmentExpression	self -> subglyph_orig_gy = sby		1065668	1		=			
ANR	1065695	PtrMemberAccess	self -> subglyph_orig_gy		1065668	0					
ANR	1065696	Identifier	self		1065668	0					
ANR	1065697	Identifier	subglyph_orig_gy		1065668	1					
ANR	1065698	Identifier	sby		1065668	1					
ANR	1065699	ExpressionStatement	self -> width_gx = wx	838:4:35027:35046	1065668	2	True				
ANR	1065700	AssignmentExpression	self -> width_gx = wx		1065668	0		=			
ANR	1065701	PtrMemberAccess	self -> width_gx		1065668	0					
ANR	1065702	Identifier	self		1065668	0					
ANR	1065703	Identifier	width_gx		1065668	1					
ANR	1065704	Identifier	wx		1065668	1					
ANR	1065705	ExpressionStatement	self -> width_gy = wy	839:4:35052:35071	1065668	3	True				
ANR	1065706	AssignmentExpression	self -> width_gy = wy		1065668	0		=			
ANR	1065707	PtrMemberAccess	self -> width_gy		1065668	0					
ANR	1065708	Identifier	self		1065668	0					
ANR	1065709	Identifier	width_gy		1065668	1					
ANR	1065710	Identifier	wy		1065668	1					
ANR	1065711	ReturnStatement	return 0 ;	840:4:35077:35085	1065668	4	True				
ANR	1065712	PrimaryExpression	0		1065668	0					
ANR	1065713	ReturnType	int		1065668	1					
ANR	1065714	Identifier	t1_hinter__sbw		1065668	2					
ANR	1065715	ParameterList	"t1_hinter * self , fixed sbx , fixed sby , fixed wx , fixed wy"		1065668	3					
ANR	1065716	Parameter	t1_hinter * self	835:19:34840:34855	1065668	0	True				
ANR	1065717	ParameterType	t1_hinter *		1065668	0					
ANR	1065718	Identifier	self		1065668	1					
ANR	1065719	Parameter	fixed sbx	835:37:34858:34866	1065668	1	True				
ANR	1065720	ParameterType	fixed		1065668	0					
ANR	1065721	Identifier	sbx		1065668	1					
ANR	1065722	Parameter	fixed sby	835:48:34869:34877	1065668	2	True				
ANR	1065723	ParameterType	fixed		1065668	0					
ANR	1065724	Identifier	sby		1065668	1					
ANR	1065725	Parameter	fixed wx	835:59:34880:34887	1065668	3	True				
ANR	1065726	ParameterType	fixed		1065668	0					
ANR	1065727	Identifier	wx		1065668	1					
ANR	1065728	Parameter	fixed wy	835:70:34891:34898	1065668	4	True				
ANR	1065729	ParameterType	fixed		1065668	0					
ANR	1065730	Identifier	wy		1065668	1					
ANR	1065731	CFGEntryNode	ENTRY		1065668		True				
ANR	1065732	CFGExitNode	EXIT		1065668		True				
ANR	1065733	Symbol	wx		1065668						
ANR	1065734	Symbol	wy		1065668						
ANR	1065735	Symbol	* self		1065668						
ANR	1065736	Symbol	sbx		1065668						
ANR	1065737	Symbol	self -> width_gy		1065668						
ANR	1065738	Symbol	sby		1065668						
ANR	1065739	Symbol	self -> width_gx		1065668						
ANR	1065740	Symbol	self -> subglyph_orig_gy		1065668						
ANR	1065741	Symbol	self		1065668						
ANR	1065742	Symbol	self -> cx		1065668						
ANR	1065743	Symbol	self -> cy		1065668						
ANR	1065744	Symbol	self -> subglyph_orig_gx		1065668						
ANR	1065745	Symbol	self -> orig_gy		1065668						
ANR	1065746	Symbol	self -> orig_gx		1065668						
ANR	1065747	Function	t1_hinter__sbw_seac	843:0:35090:35346							
ANR	1065748	FunctionDef	"t1_hinter__sbw_seac (t1_hinter * self , fixed sbx , fixed sby)"		1065747	0					
ANR	1065749	CompoundStatement		844:0:35154:35346	1065747	0					
ANR	1065750	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , sbx , sby )"	844:3:35158:35208	1065747	0	True				
ANR	1065751	CallExpression	"t1_hinter__adjust_matrix_precision ( self , sbx , sby )"		1065747	0					
ANR	1065752	Callee	t1_hinter__adjust_matrix_precision		1065747	0					
ANR	1065753	Identifier	t1_hinter__adjust_matrix_precision		1065747	0					
ANR	1065754	ArgumentList	self		1065747	1					
ANR	1065755	Argument	self		1065747	0					
ANR	1065756	Identifier	self		1065747	0					
ANR	1065757	Argument	sbx		1065747	1					
ANR	1065758	Identifier	sbx		1065747	0					
ANR	1065759	Argument	sby		1065747	2					
ANR	1065760	Identifier	sby		1065747	0					
ANR	1065761	ExpressionStatement	self -> cx = self -> subglyph_orig_gx = self -> orig_gx + sbx	845:4:35214:35269	1065747	1	True				
ANR	1065762	AssignmentExpression	self -> cx = self -> subglyph_orig_gx = self -> orig_gx + sbx		1065747	0		=			
ANR	1065763	PtrMemberAccess	self -> cx		1065747	0					
ANR	1065764	Identifier	self		1065747	0					
ANR	1065765	Identifier	cx		1065747	1					
ANR	1065766	AssignmentExpression	self -> subglyph_orig_gx = self -> orig_gx + sbx		1065747	1		=			
ANR	1065767	PtrMemberAccess	self -> subglyph_orig_gx		1065747	0					
ANR	1065768	Identifier	self		1065747	0					
ANR	1065769	Identifier	subglyph_orig_gx		1065747	1					
ANR	1065770	AdditiveExpression	self -> orig_gx + sbx		1065747	1		+			
ANR	1065771	PtrMemberAccess	self -> orig_gx		1065747	0					
ANR	1065772	Identifier	self		1065747	0					
ANR	1065773	Identifier	orig_gx		1065747	1					
ANR	1065774	Identifier	sbx		1065747	1					
ANR	1065775	ExpressionStatement	self -> cy = self -> subglyph_orig_gy = self -> orig_gy + sby	846:4:35275:35330	1065747	2	True				
ANR	1065776	AssignmentExpression	self -> cy = self -> subglyph_orig_gy = self -> orig_gy + sby		1065747	0		=			
ANR	1065777	PtrMemberAccess	self -> cy		1065747	0					
ANR	1065778	Identifier	self		1065747	0					
ANR	1065779	Identifier	cy		1065747	1					
ANR	1065780	AssignmentExpression	self -> subglyph_orig_gy = self -> orig_gy + sby		1065747	1		=			
ANR	1065781	PtrMemberAccess	self -> subglyph_orig_gy		1065747	0					
ANR	1065782	Identifier	self		1065747	0					
ANR	1065783	Identifier	subglyph_orig_gy		1065747	1					
ANR	1065784	AdditiveExpression	self -> orig_gy + sby		1065747	1		+			
ANR	1065785	PtrMemberAccess	self -> orig_gy		1065747	0					
ANR	1065786	Identifier	self		1065747	0					
ANR	1065787	Identifier	orig_gy		1065747	1					
ANR	1065788	Identifier	sby		1065747	1					
ANR	1065789	ReturnStatement	return 0 ;	847:4:35336:35344	1065747	3	True				
ANR	1065790	PrimaryExpression	0		1065747	0					
ANR	1065791	ReturnType	int		1065747	1					
ANR	1065792	Identifier	t1_hinter__sbw_seac		1065747	2					
ANR	1065793	ParameterList	"t1_hinter * self , fixed sbx , fixed sby"		1065747	3					
ANR	1065794	Parameter	t1_hinter * self	843:24:35114:35129	1065747	0	True				
ANR	1065795	ParameterType	t1_hinter *		1065747	0					
ANR	1065796	Identifier	self		1065747	1					
ANR	1065797	Parameter	fixed sbx	843:42:35132:35140	1065747	1	True				
ANR	1065798	ParameterType	fixed		1065747	0					
ANR	1065799	Identifier	sbx		1065747	1					
ANR	1065800	Parameter	fixed sby	843:53:35143:35151	1065747	2	True				
ANR	1065801	ParameterType	fixed		1065747	0					
ANR	1065802	Identifier	sby		1065747	1					
ANR	1065803	CFGEntryNode	ENTRY		1065747		True				
ANR	1065804	CFGExitNode	EXIT		1065747		True				
ANR	1065805	Symbol	self -> subglyph_orig_gy		1065747						
ANR	1065806	Symbol	* self		1065747						
ANR	1065807	Symbol	sbx		1065747						
ANR	1065808	Symbol	self		1065747						
ANR	1065809	Symbol	self -> cx		1065747						
ANR	1065810	Symbol	sby		1065747						
ANR	1065811	Symbol	self -> cy		1065747						
ANR	1065812	Symbol	self -> subglyph_orig_gx		1065747						
ANR	1065813	Symbol	self -> orig_gy		1065747						
ANR	1065814	Symbol	self -> orig_gx		1065747						
ANR	1065815	Function	t1_hinter__find_flex	850:0:35349:39956							
ANR	1065816	FunctionDef	"t1_hinter__find_flex (t1_hinter * self , int k , int contour_beg , int contour_end , t1_glyph_space_coord pixel_g , t1_glyph_space_coord threshold , int i0 , int i1 , int N , int * j0 , int * j1 , t1_glyph_space_coord * gm)"		1065815	0					
ANR	1065817	CompoundStatement		854:0:35639:39956	1065815	0					
ANR	1065818	IdentifierDeclStatement	"int i , j , n = N - 5 , m , l ;"	855:4:35645:35670	1065815	0	True				
ANR	1065819	IdentifierDecl	i		1065815	0					
ANR	1065820	IdentifierDeclType	int		1065815	0					
ANR	1065821	Identifier	i		1065815	1					
ANR	1065822	IdentifierDecl	j		1065815	1					
ANR	1065823	IdentifierDeclType	int		1065815	0					
ANR	1065824	Identifier	j		1065815	1					
ANR	1065825	IdentifierDecl	n = N - 5		1065815	2					
ANR	1065826	IdentifierDeclType	int		1065815	0					
ANR	1065827	Identifier	n		1065815	1					
ANR	1065828	AssignmentExpression	n = N - 5		1065815	2		=			
ANR	1065829	Identifier	n		1065815	0					
ANR	1065830	AdditiveExpression	N - 5		1065815	1		-			
ANR	1065831	Identifier	N		1065815	0					
ANR	1065832	PrimaryExpression	5		1065815	1					
ANR	1065833	IdentifierDecl	m		1065815	3					
ANR	1065834	IdentifierDeclType	int		1065815	0					
ANR	1065835	Identifier	m		1065815	1					
ANR	1065836	IdentifierDecl	l		1065815	4					
ANR	1065837	IdentifierDeclType	int		1065815	0					
ANR	1065838	Identifier	l		1065815	1					
ANR	1065839	IdentifierDeclStatement	t1_glyph_space_coord * p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy ) ;	856:4:35676:35749	1065815	1	True				
ANR	1065840	IdentifierDecl	* p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy )		1065815	0					
ANR	1065841	IdentifierDeclType	t1_glyph_space_coord *		1065815	0					
ANR	1065842	Identifier	p_gc		1065815	1					
ANR	1065843	AssignmentExpression	* p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy )		1065815	2		=			
ANR	1065844	Identifier	p_gc		1065815	0					
ANR	1065845	ConditionalExpression	! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy		1065815	1					
ANR	1065846	Condition	! k		1065815	0					
ANR	1065847	UnaryOperationExpression	! k		1065815	0					
ANR	1065848	UnaryOperator	!		1065815	0					
ANR	1065849	Identifier	k		1065815	1					
ANR	1065850	UnaryOperationExpression	& self -> pole [ 0 ] . gx		1065815	1					
ANR	1065851	UnaryOperator	&		1065815	0					
ANR	1065852	MemberAccess	self -> pole [ 0 ] . gx		1065815	1					
ANR	1065853	ArrayIndexing	self -> pole [ 0 ]		1065815	0					
ANR	1065854	PtrMemberAccess	self -> pole		1065815	0					
ANR	1065855	Identifier	self		1065815	0					
ANR	1065856	Identifier	pole		1065815	1					
ANR	1065857	PrimaryExpression	0		1065815	1					
ANR	1065858	Identifier	gx		1065815	1					
ANR	1065859	UnaryOperationExpression	& self -> pole [ 0 ] . gy		1065815	2					
ANR	1065860	UnaryOperator	&		1065815	0					
ANR	1065861	MemberAccess	self -> pole [ 0 ] . gy		1065815	1					
ANR	1065862	ArrayIndexing	self -> pole [ 0 ]		1065815	0					
ANR	1065863	PtrMemberAccess	self -> pole		1065815	0					
ANR	1065864	Identifier	self		1065815	0					
ANR	1065865	Identifier	pole		1065815	1					
ANR	1065866	PrimaryExpression	0		1065815	1					
ANR	1065867	Identifier	gy		1065815	1					
ANR	1065868	IdentifierDeclStatement	t1_glyph_space_coord * p_gd = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx ) ;	857:4:35755:35828	1065815	2	True				
ANR	1065869	IdentifierDecl	* p_gd = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx )		1065815	0					
ANR	1065870	IdentifierDeclType	t1_glyph_space_coord *		1065815	0					
ANR	1065871	Identifier	p_gd		1065815	1					
ANR	1065872	AssignmentExpression	* p_gd = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx )		1065815	2		=			
ANR	1065873	Identifier	p_gd		1065815	0					
ANR	1065874	ConditionalExpression	! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx		1065815	1					
ANR	1065875	Condition	! k		1065815	0					
ANR	1065876	UnaryOperationExpression	! k		1065815	0					
ANR	1065877	UnaryOperator	!		1065815	0					
ANR	1065878	Identifier	k		1065815	1					
ANR	1065879	UnaryOperationExpression	& self -> pole [ 0 ] . gy		1065815	1					
ANR	1065880	UnaryOperator	&		1065815	0					
ANR	1065881	MemberAccess	self -> pole [ 0 ] . gy		1065815	1					
ANR	1065882	ArrayIndexing	self -> pole [ 0 ]		1065815	0					
ANR	1065883	PtrMemberAccess	self -> pole		1065815	0					
ANR	1065884	Identifier	self		1065815	0					
ANR	1065885	Identifier	pole		1065815	1					
ANR	1065886	PrimaryExpression	0		1065815	1					
ANR	1065887	Identifier	gy		1065815	1					
ANR	1065888	UnaryOperationExpression	& self -> pole [ 0 ] . gx		1065815	2					
ANR	1065889	UnaryOperator	&		1065815	0					
ANR	1065890	MemberAccess	self -> pole [ 0 ] . gx		1065815	1					
ANR	1065891	ArrayIndexing	self -> pole [ 0 ]		1065815	0					
ANR	1065892	PtrMemberAccess	self -> pole		1065815	0					
ANR	1065893	Identifier	self		1065815	0					
ANR	1065894	Identifier	pole		1065815	1					
ANR	1065895	PrimaryExpression	0		1065815	1					
ANR	1065896	Identifier	gx		1065815	1					
ANR	1065897	IdentifierDeclStatement	int offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ] ;	858:4:35834:35887	1065815	3	True				
ANR	1065898	IdentifierDecl	offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		1065815	0					
ANR	1065899	IdentifierDeclType	int		1065815	0					
ANR	1065900	Identifier	offset_gc		1065815	1					
ANR	1065901	AssignmentExpression	offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		1065815	2		=			
ANR	1065902	Identifier	offset_gc		1065815	0					
ANR	1065903	AdditiveExpression	( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		1065815	1		-			
ANR	1065904	CastExpression	( char * ) p_gc		1065815	0					
ANR	1065905	CastTarget	char *		1065815	0					
ANR	1065906	Identifier	p_gc		1065815	1					
ANR	1065907	CastExpression	( char * ) & self -> pole [ 0 ]		1065815	1					
ANR	1065908	CastTarget	char *		1065815	0					
ANR	1065909	UnaryOperationExpression	& self -> pole [ 0 ]		1065815	1					
ANR	1065910	UnaryOperator	&		1065815	0					
ANR	1065911	ArrayIndexing	self -> pole [ 0 ]		1065815	1					
ANR	1065912	PtrMemberAccess	self -> pole		1065815	0					
ANR	1065913	Identifier	self		1065815	0					
ANR	1065914	Identifier	pole		1065815	1					
ANR	1065915	PrimaryExpression	0		1065815	1					
ANR	1065916	IdentifierDeclStatement	int offset_gd = ( char * ) p_gd - ( char * ) & self -> pole [ 0 ] ;	859:4:35893:35946	1065815	4	True				
ANR	1065917	IdentifierDecl	offset_gd = ( char * ) p_gd - ( char * ) & self -> pole [ 0 ]		1065815	0					
ANR	1065918	IdentifierDeclType	int		1065815	0					
ANR	1065919	Identifier	offset_gd		1065815	1					
ANR	1065920	AssignmentExpression	offset_gd = ( char * ) p_gd - ( char * ) & self -> pole [ 0 ]		1065815	2		=			
ANR	1065921	Identifier	offset_gd		1065815	0					
ANR	1065922	AdditiveExpression	( char * ) p_gd - ( char * ) & self -> pole [ 0 ]		1065815	1		-			
ANR	1065923	CastExpression	( char * ) p_gd		1065815	0					
ANR	1065924	CastTarget	char *		1065815	0					
ANR	1065925	Identifier	p_gd		1065815	1					
ANR	1065926	CastExpression	( char * ) & self -> pole [ 0 ]		1065815	1					
ANR	1065927	CastTarget	char *		1065815	0					
ANR	1065928	UnaryOperationExpression	& self -> pole [ 0 ]		1065815	1					
ANR	1065929	UnaryOperator	&		1065815	0					
ANR	1065930	ArrayIndexing	self -> pole [ 0 ]		1065815	1					
ANR	1065931	PtrMemberAccess	self -> pole		1065815	0					
ANR	1065932	Identifier	self		1065815	0					
ANR	1065933	Identifier	pole		1065815	1					
ANR	1065934	PrimaryExpression	0		1065815	1					
ANR	1065935	IdentifierDeclStatement	"t1_glyph_space_coord gc0 , gc1 , gd0 , gd1 , gcl , gdl , gcp = 0 , gdp = 0 , gcd , gcm = 0 ;"	860:4:35952:36033	1065815	5	True				
ANR	1065936	IdentifierDecl	gc0		1065815	0					
ANR	1065937	IdentifierDeclType	t1_glyph_space_coord		1065815	0					
ANR	1065938	Identifier	gc0		1065815	1					
ANR	1065939	IdentifierDecl	gc1		1065815	1					
ANR	1065940	IdentifierDeclType	t1_glyph_space_coord		1065815	0					
ANR	1065941	Identifier	gc1		1065815	1					
ANR	1065942	IdentifierDecl	gd0		1065815	2					
ANR	1065943	IdentifierDeclType	t1_glyph_space_coord		1065815	0					
ANR	1065944	Identifier	gd0		1065815	1					
ANR	1065945	IdentifierDecl	gd1		1065815	3					
ANR	1065946	IdentifierDeclType	t1_glyph_space_coord		1065815	0					
ANR	1065947	Identifier	gd1		1065815	1					
ANR	1065948	IdentifierDecl	gcl		1065815	4					
ANR	1065949	IdentifierDeclType	t1_glyph_space_coord		1065815	0					
ANR	1065950	Identifier	gcl		1065815	1					
ANR	1065951	IdentifierDecl	gdl		1065815	5					
ANR	1065952	IdentifierDeclType	t1_glyph_space_coord		1065815	0					
ANR	1065953	Identifier	gdl		1065815	1					
ANR	1065954	IdentifierDecl	gcp = 0		1065815	6					
ANR	1065955	IdentifierDeclType	t1_glyph_space_coord		1065815	0					
ANR	1065956	Identifier	gcp		1065815	1					
ANR	1065957	AssignmentExpression	gcp = 0		1065815	2		=			
ANR	1065958	Identifier	gcp		1065815	0					
ANR	1065959	PrimaryExpression	0		1065815	1					
ANR	1065960	IdentifierDecl	gdp = 0		1065815	7					
ANR	1065961	IdentifierDeclType	t1_glyph_space_coord		1065815	0					
ANR	1065962	Identifier	gdp		1065815	1					
ANR	1065963	AssignmentExpression	gdp = 0		1065815	2		=			
ANR	1065964	Identifier	gdp		1065815	0					
ANR	1065965	PrimaryExpression	0		1065815	1					
ANR	1065966	IdentifierDecl	gcd		1065815	8					
ANR	1065967	IdentifierDeclType	t1_glyph_space_coord		1065815	0					
ANR	1065968	Identifier	gcd		1065815	1					
ANR	1065969	IdentifierDecl	gcm = 0		1065815	9					
ANR	1065970	IdentifierDeclType	t1_glyph_space_coord		1065815	0					
ANR	1065971	Identifier	gcm		1065815	1					
ANR	1065972	AssignmentExpression	gcm = 0		1065815	2		=			
ANR	1065973	Identifier	gcm		1065815	0					
ANR	1065974	PrimaryExpression	0		1065815	1					
ANR	1065975	ForStatement	"for ( i = i0 ; n ; n -- , i = i + 1 )"		1065815	6					
ANR	1065976	ForInit	i = i0 ;	862:9:36045:36051	1065815	0	True				
ANR	1065977	AssignmentExpression	i = i0		1065815	0		=			
ANR	1065978	Identifier	i		1065815	0					
ANR	1065979	Identifier	i0		1065815	1					
ANR	1065980	Condition	n	862:17:36053:36053	1065815	1	True				
ANR	1065981	Identifier	n		1065815	0					
ANR	1065982	Expression	"n -- , i = i + 1"	862:20:36056:36069	1065815	2	True				
ANR	1065983	PostIncDecOperationExpression	n --		1065815	0					
ANR	1065984	Identifier	n		1065815	0					
ANR	1065985	IncDec	--		1065815	1					
ANR	1065986	AssignmentExpression	i = i + 1		1065815	1		=			
ANR	1065987	Identifier	i		1065815	0					
ANR	1065988	AdditiveExpression	i + 1		1065815	1		+			
ANR	1065989	Identifier	i		1065815	0					
ANR	1065990	PrimaryExpression	1		1065815	1					
ANR	1065991	CompoundStatement		9:36:432:432	1065815	3					
ANR	1065992	IfStatement	if ( i == contour_end )		1065815	0					
ANR	1065993	Condition	i == contour_end	863:12:36086:36101	1065815	0	True				
ANR	1065994	EqualityExpression	i == contour_end		1065815	0		==			
ANR	1065995	Identifier	i		1065815	0					
ANR	1065996	Identifier	contour_end		1065815	1					
ANR	1065997	ExpressionStatement	i = contour_beg	864:12:36116:36131	1065815	1	True				
ANR	1065998	AssignmentExpression	i = contour_beg		1065815	0		=			
ANR	1065999	Identifier	i		1065815	0					
ANR	1066000	Identifier	contour_beg		1065815	1					
ANR	1066001	IfStatement	if ( self -> pole [ i ] . type == offcurve )		1065815	1					
ANR	1066002	Condition	self -> pole [ i ] . type == offcurve	865:12:36145:36174	1065815	0	True				
ANR	1066003	EqualityExpression	self -> pole [ i ] . type == offcurve		1065815	0		==			
ANR	1066004	MemberAccess	self -> pole [ i ] . type		1065815	0					
ANR	1066005	ArrayIndexing	self -> pole [ i ]		1065815	0					
ANR	1066006	PtrMemberAccess	self -> pole		1065815	0					
ANR	1066007	Identifier	self		1065815	0					
ANR	1066008	Identifier	pole		1065815	1					
ANR	1066009	Identifier	i		1065815	1					
ANR	1066010	Identifier	type		1065815	1					
ANR	1066011	Identifier	offcurve		1065815	1					
ANR	1066012	ContinueStatement	continue ;	866:12:36189:36197	1065815	1	True				
ANR	1066013	ExpressionStatement	"gc0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"	867:8:36207:36273	1065815	2	True				
ANR	1066014	AssignmentExpression	"gc0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		1065815	0		=			
ANR	1066015	Identifier	gc0		1065815	0					
ANR	1066016	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		1065815	1					
ANR	1066017	UnaryOperator	*		1065815	0					
ANR	1066018	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		1065815	1					
ANR	1066019	Callee	member_prt		1065815	0					
ANR	1066020	Identifier	member_prt		1065815	0					
ANR	1066021	ArgumentList	t1_glyph_space_coord		1065815	1					
ANR	1066022	Argument	t1_glyph_space_coord		1065815	0					
ANR	1066023	Identifier	t1_glyph_space_coord		1065815	0					
ANR	1066024	Argument	& self -> pole [ i ]		1065815	1					
ANR	1066025	UnaryOperationExpression	& self -> pole [ i ]		1065815	0					
ANR	1066026	UnaryOperator	&		1065815	0					
ANR	1066027	ArrayIndexing	self -> pole [ i ]		1065815	1					
ANR	1066028	PtrMemberAccess	self -> pole		1065815	0					
ANR	1066029	Identifier	self		1065815	0					
ANR	1066030	Identifier	pole		1065815	1					
ANR	1066031	Identifier	i		1065815	1					
ANR	1066032	Argument	offset_gc		1065815	2					
ANR	1066033	Identifier	offset_gc		1065815	0					
ANR	1066034	ExpressionStatement	"gd0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"	868:8:36283:36349	1065815	3	True				
ANR	1066035	AssignmentExpression	"gd0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		1065815	0		=			
ANR	1066036	Identifier	gd0		1065815	0					
ANR	1066037	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		1065815	1					
ANR	1066038	UnaryOperator	*		1065815	0					
ANR	1066039	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		1065815	1					
ANR	1066040	Callee	member_prt		1065815	0					
ANR	1066041	Identifier	member_prt		1065815	0					
ANR	1066042	ArgumentList	t1_glyph_space_coord		1065815	1					
ANR	1066043	Argument	t1_glyph_space_coord		1065815	0					
ANR	1066044	Identifier	t1_glyph_space_coord		1065815	0					
ANR	1066045	Argument	& self -> pole [ i ]		1065815	1					
ANR	1066046	UnaryOperationExpression	& self -> pole [ i ]		1065815	0					
ANR	1066047	UnaryOperator	&		1065815	0					
ANR	1066048	ArrayIndexing	self -> pole [ i ]		1065815	1					
ANR	1066049	PtrMemberAccess	self -> pole		1065815	0					
ANR	1066050	Identifier	self		1065815	0					
ANR	1066051	Identifier	pole		1065815	1					
ANR	1066052	Identifier	i		1065815	1					
ANR	1066053	Argument	offset_gd		1065815	2					
ANR	1066054	Identifier	offset_gd		1065815	0					
ANR	1066055	ForStatement	"for ( j = i1 , m = n ; m ; m -- , j -- )"		1065815	4					
ANR	1066056	ForInit	"j = i1 , m = n ;"	869:13:36364:36377	1065815	0	True				
ANR	1066057	Expression	"j = i1 , m = n"		1065815	0					
ANR	1066058	AssignmentExpression	j = i1		1065815	0		=			
ANR	1066059	Identifier	j		1065815	0					
ANR	1066060	Identifier	i1		1065815	1					
ANR	1066061	AssignmentExpression	m = n		1065815	1		=			
ANR	1066062	Identifier	m		1065815	0					
ANR	1066063	Identifier	n		1065815	1					
ANR	1066064	Condition	m	869:28:36379:36379	1065815	1	True				
ANR	1066065	Identifier	m		1065815	0					
ANR	1066066	Expression	"m -- , j --"	869:31:36382:36389	1065815	2	True				
ANR	1066067	PostIncDecOperationExpression	m --		1065815	0					
ANR	1066068	Identifier	m		1065815	0					
ANR	1066069	IncDec	--		1065815	1					
ANR	1066070	PostIncDecOperationExpression	j --		1065815	1					
ANR	1066071	Identifier	j		1065815	0					
ANR	1066072	IncDec	--		1065815	1					
ANR	1066073	CompoundStatement		16:41:752:752	1065815	3					
ANR	1066074	IfStatement	if ( j < contour_beg )		1065815	0					
ANR	1066075	Condition	j < contour_beg	870:16:36410:36424	1065815	0	True				
ANR	1066076	RelationalExpression	j < contour_beg		1065815	0		<			
ANR	1066077	Identifier	j		1065815	0					
ANR	1066078	Identifier	contour_beg		1065815	1					
ANR	1066079	ExpressionStatement	j = contour_end - 1	871:16:36443:36462	1065815	1	True				
ANR	1066080	AssignmentExpression	j = contour_end - 1		1065815	0		=			
ANR	1066081	Identifier	j		1065815	0					
ANR	1066082	AdditiveExpression	contour_end - 1		1065815	1		-			
ANR	1066083	Identifier	contour_end		1065815	0					
ANR	1066084	PrimaryExpression	1		1065815	1					
ANR	1066085	IfStatement	if ( self -> pole [ j ] . type == offcurve )		1065815	1					
ANR	1066086	Condition	self -> pole [ j ] . type == offcurve	872:16:36480:36509	1065815	0	True				
ANR	1066087	EqualityExpression	self -> pole [ j ] . type == offcurve		1065815	0		==			
ANR	1066088	MemberAccess	self -> pole [ j ] . type		1065815	0					
ANR	1066089	ArrayIndexing	self -> pole [ j ]		1065815	0					
ANR	1066090	PtrMemberAccess	self -> pole		1065815	0					
ANR	1066091	Identifier	self		1065815	0					
ANR	1066092	Identifier	pole		1065815	1					
ANR	1066093	Identifier	j		1065815	1					
ANR	1066094	Identifier	type		1065815	1					
ANR	1066095	Identifier	offcurve		1065815	1					
ANR	1066096	ContinueStatement	continue ;	873:16:36528:36536	1065815	1	True				
ANR	1066097	ExpressionStatement	"gc1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"	874:12:36550:36616	1065815	2	True				
ANR	1066098	AssignmentExpression	"gc1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1065815	0		=			
ANR	1066099	Identifier	gc1		1065815	0					
ANR	1066100	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1065815	1					
ANR	1066101	UnaryOperator	*		1065815	0					
ANR	1066102	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1065815	1					
ANR	1066103	Callee	member_prt		1065815	0					
ANR	1066104	Identifier	member_prt		1065815	0					
ANR	1066105	ArgumentList	t1_glyph_space_coord		1065815	1					
ANR	1066106	Argument	t1_glyph_space_coord		1065815	0					
ANR	1066107	Identifier	t1_glyph_space_coord		1065815	0					
ANR	1066108	Argument	& self -> pole [ j ]		1065815	1					
ANR	1066109	UnaryOperationExpression	& self -> pole [ j ]		1065815	0					
ANR	1066110	UnaryOperator	&		1065815	0					
ANR	1066111	ArrayIndexing	self -> pole [ j ]		1065815	1					
ANR	1066112	PtrMemberAccess	self -> pole		1065815	0					
ANR	1066113	Identifier	self		1065815	0					
ANR	1066114	Identifier	pole		1065815	1					
ANR	1066115	Identifier	j		1065815	1					
ANR	1066116	Argument	offset_gc		1065815	2					
ANR	1066117	Identifier	offset_gc		1065815	0					
ANR	1066118	ExpressionStatement	"gd1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gd )"	875:12:36630:36696	1065815	3	True				
ANR	1066119	AssignmentExpression	"gd1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gd )"		1065815	0		=			
ANR	1066120	Identifier	gd1		1065815	0					
ANR	1066121	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gd )"		1065815	1					
ANR	1066122	UnaryOperator	*		1065815	0					
ANR	1066123	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gd )"		1065815	1					
ANR	1066124	Callee	member_prt		1065815	0					
ANR	1066125	Identifier	member_prt		1065815	0					
ANR	1066126	ArgumentList	t1_glyph_space_coord		1065815	1					
ANR	1066127	Argument	t1_glyph_space_coord		1065815	0					
ANR	1066128	Identifier	t1_glyph_space_coord		1065815	0					
ANR	1066129	Argument	& self -> pole [ j ]		1065815	1					
ANR	1066130	UnaryOperationExpression	& self -> pole [ j ]		1065815	0					
ANR	1066131	UnaryOperator	&		1065815	0					
ANR	1066132	ArrayIndexing	self -> pole [ j ]		1065815	1					
ANR	1066133	PtrMemberAccess	self -> pole		1065815	0					
ANR	1066134	Identifier	self		1065815	0					
ANR	1066135	Identifier	pole		1065815	1					
ANR	1066136	Identifier	j		1065815	1					
ANR	1066137	Argument	offset_gd		1065815	2					
ANR	1066138	Identifier	offset_gd		1065815	0					
ANR	1066139	IfStatement	if ( any_abs ( gd1 - gd0 ) < pixel_g * 4 )		1065815	4					
ANR	1066140	Condition	any_abs ( gd1 - gd0 ) < pixel_g * 4	876:16:36714:36745	1065815	0	True				
ANR	1066141	RelationalExpression	any_abs ( gd1 - gd0 ) < pixel_g * 4		1065815	0		<			
ANR	1066142	CallExpression	any_abs ( gd1 - gd0 )		1065815	0					
ANR	1066143	Callee	any_abs		1065815	0					
ANR	1066144	Identifier	any_abs		1065815	0					
ANR	1066145	ArgumentList	gd1 - gd0		1065815	1					
ANR	1066146	Argument	gd1 - gd0		1065815	0					
ANR	1066147	AdditiveExpression	gd1 - gd0		1065815	0		-			
ANR	1066148	Identifier	gd1		1065815	0					
ANR	1066149	Identifier	gd0		1065815	1					
ANR	1066150	MultiplicativeExpression	pixel_g * 4		1065815	1		*			
ANR	1066151	Identifier	pixel_g		1065815	0					
ANR	1066152	PrimaryExpression	4		1065815	1					
ANR	1066153	ContinueStatement	continue ;	877:16:36807:36815	1065815	1	True				
ANR	1066154	IfStatement	if ( gc0 == gc1 )		1065815	5					
ANR	1066155	Condition	gc0 == gc1	878:16:36833:36842	1065815	0	True				
ANR	1066156	EqualityExpression	gc0 == gc1		1065815	0		==			
ANR	1066157	Identifier	gc0		1065815	0					
ANR	1066158	Identifier	gc1		1065815	1					
ANR	1066159	CompoundStatement		29:16:1433:1474	1065815	1					
ANR	1066160	IdentifierDeclStatement	"bool gt = false , lt = false ;"	880:16:36988:37015	1065815	0	True				
ANR	1066161	IdentifierDecl	gt = false		1065815	0					
ANR	1066162	IdentifierDeclType	bool		1065815	0					
ANR	1066163	Identifier	gt		1065815	1					
ANR	1066164	AssignmentExpression	gt = false		1065815	2		=			
ANR	1066165	Identifier	false		1065815	0					
ANR	1066166	Identifier	false		1065815	1					
ANR	1066167	IdentifierDecl	lt = false		1065815	1					
ANR	1066168	IdentifierDeclType	bool		1065815	0					
ANR	1066169	Identifier	lt		1065815	1					
ANR	1066170	AssignmentExpression	lt = false		1065815	2		=			
ANR	1066171	Identifier	false		1065815	0					
ANR	1066172	Identifier	false		1065815	1					
ANR	1066173	IdentifierDeclStatement	"double area = 0 , area0 ;"	881:16:37033:37055	1065815	1	True				
ANR	1066174	IdentifierDecl	area = 0		1065815	0					
ANR	1066175	IdentifierDeclType	double		1065815	0					
ANR	1066176	Identifier	area		1065815	1					
ANR	1066177	AssignmentExpression	area = 0		1065815	2		=			
ANR	1066178	Identifier	area		1065815	0					
ANR	1066179	PrimaryExpression	0		1065815	1					
ANR	1066180	IdentifierDecl	area0		1065815	1					
ANR	1066181	IdentifierDeclType	double		1065815	0					
ANR	1066182	Identifier	area0		1065815	1					
ANR	1066183	IdentifierDeclStatement	"int dir = 0 , prev_dir = 0 , dir_change = 0 ;"	882:16:37073:37114	1065815	2	True				
ANR	1066184	IdentifierDecl	dir = 0		1065815	0					
ANR	1066185	IdentifierDeclType	int		1065815	0					
ANR	1066186	Identifier	dir		1065815	1					
ANR	1066187	AssignmentExpression	dir = 0		1065815	2		=			
ANR	1066188	Identifier	dir		1065815	0					
ANR	1066189	PrimaryExpression	0		1065815	1					
ANR	1066190	IdentifierDecl	prev_dir = 0		1065815	1					
ANR	1066191	IdentifierDeclType	int		1065815	0					
ANR	1066192	Identifier	prev_dir		1065815	1					
ANR	1066193	AssignmentExpression	prev_dir = 0		1065815	2		=			
ANR	1066194	Identifier	prev_dir		1065815	0					
ANR	1066195	PrimaryExpression	0		1065815	1					
ANR	1066196	IdentifierDecl	dir_change = 0		1065815	2					
ANR	1066197	IdentifierDeclType	int		1065815	0					
ANR	1066198	Identifier	dir_change		1065815	1					
ANR	1066199	AssignmentExpression	dir_change = 0		1065815	2		=			
ANR	1066200	Identifier	dir_change		1065815	0					
ANR	1066201	PrimaryExpression	0		1065815	1					
ANR	1066202	ExpressionStatement	* gm = gc0	884:16:37133:37142	1065815	3	True				
ANR	1066203	AssignmentExpression	* gm = gc0		1065815	0		=			
ANR	1066204	UnaryOperationExpression	* gm		1065815	0					
ANR	1066205	UnaryOperator	*		1065815	0					
ANR	1066206	Identifier	gm		1065815	1					
ANR	1066207	Identifier	gc0		1065815	1					
ANR	1066208	ForStatement	"for ( l = i ; ; gcp = gcl , gdp = gdl , prev_dir = dir , l ++ )"		1065815	4					
ANR	1066209	ForInit	l = i ;	888:21:37413:37418	1065815	0	True				
ANR	1066210	AssignmentExpression	l = i		1065815	0		=			
ANR	1066211	Identifier	l		1065815	0					
ANR	1066212	Identifier	i		1065815	1					
ANR	1066213	Expression	"gcp = gcl , gdp = gdl , prev_dir = dir , l ++"	888:30:37422:37462	1065815	1	True				
ANR	1066214	AssignmentExpression	gcp = gcl		1065815	0		=			
ANR	1066215	Identifier	gcp		1065815	0					
ANR	1066216	Identifier	gcl		1065815	1					
ANR	1066217	Expression	"gdp = gdl , prev_dir = dir , l ++"		1065815	1					
ANR	1066218	AssignmentExpression	gdp = gdl		1065815	0		=			
ANR	1066219	Identifier	gdp		1065815	0					
ANR	1066220	Identifier	gdl		1065815	1					
ANR	1066221	Expression	"prev_dir = dir , l ++"		1065815	1					
ANR	1066222	AssignmentExpression	prev_dir = dir		1065815	0		=			
ANR	1066223	Identifier	prev_dir		1065815	0					
ANR	1066224	Identifier	dir		1065815	1					
ANR	1066225	PostIncDecOperationExpression	l ++		1065815	1					
ANR	1066226	Identifier	l		1065815	0					
ANR	1066227	IncDec	++		1065815	1					
ANR	1066228	CompoundStatement		35:73:1825:1825	1065815	2					
ANR	1066229	IfStatement	if ( l == contour_end )		1065815	0					
ANR	1066230	Condition	l == contour_end	889:24:37491:37506	1065815	0	True				
ANR	1066231	EqualityExpression	l == contour_end		1065815	0		==			
ANR	1066232	Identifier	l		1065815	0					
ANR	1066233	Identifier	contour_end		1065815	1					
ANR	1066234	ExpressionStatement	l = contour_beg	890:24:37533:37548	1065815	1	True				
ANR	1066235	AssignmentExpression	l = contour_beg		1065815	0		=			
ANR	1066236	Identifier	l		1065815	0					
ANR	1066237	Identifier	contour_beg		1065815	1					
ANR	1066238	ExpressionStatement	"gcl = * member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gc )"	891:20:37570:37636	1065815	1	True				
ANR	1066239	AssignmentExpression	"gcl = * member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gc )"		1065815	0		=			
ANR	1066240	Identifier	gcl		1065815	0					
ANR	1066241	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gc )"		1065815	1					
ANR	1066242	UnaryOperator	*		1065815	0					
ANR	1066243	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gc )"		1065815	1					
ANR	1066244	Callee	member_prt		1065815	0					
ANR	1066245	Identifier	member_prt		1065815	0					
ANR	1066246	ArgumentList	t1_glyph_space_coord		1065815	1					
ANR	1066247	Argument	t1_glyph_space_coord		1065815	0					
ANR	1066248	Identifier	t1_glyph_space_coord		1065815	0					
ANR	1066249	Argument	& self -> pole [ l ]		1065815	1					
ANR	1066250	UnaryOperationExpression	& self -> pole [ l ]		1065815	0					
ANR	1066251	UnaryOperator	&		1065815	0					
ANR	1066252	ArrayIndexing	self -> pole [ l ]		1065815	1					
ANR	1066253	PtrMemberAccess	self -> pole		1065815	0					
ANR	1066254	Identifier	self		1065815	0					
ANR	1066255	Identifier	pole		1065815	1					
ANR	1066256	Identifier	l		1065815	1					
ANR	1066257	Argument	offset_gc		1065815	2					
ANR	1066258	Identifier	offset_gc		1065815	0					
ANR	1066259	ExpressionStatement	"gdl = * member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gd )"	892:20:37658:37724	1065815	2	True				
ANR	1066260	AssignmentExpression	"gdl = * member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gd )"		1065815	0		=			
ANR	1066261	Identifier	gdl		1065815	0					
ANR	1066262	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gd )"		1065815	1					
ANR	1066263	UnaryOperator	*		1065815	0					
ANR	1066264	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gd )"		1065815	1					
ANR	1066265	Callee	member_prt		1065815	0					
ANR	1066266	Identifier	member_prt		1065815	0					
ANR	1066267	ArgumentList	t1_glyph_space_coord		1065815	1					
ANR	1066268	Argument	t1_glyph_space_coord		1065815	0					
ANR	1066269	Identifier	t1_glyph_space_coord		1065815	0					
ANR	1066270	Argument	& self -> pole [ l ]		1065815	1					
ANR	1066271	UnaryOperationExpression	& self -> pole [ l ]		1065815	0					
ANR	1066272	UnaryOperator	&		1065815	0					
ANR	1066273	ArrayIndexing	self -> pole [ l ]		1065815	1					
ANR	1066274	PtrMemberAccess	self -> pole		1065815	0					
ANR	1066275	Identifier	self		1065815	0					
ANR	1066276	Identifier	pole		1065815	1					
ANR	1066277	Identifier	l		1065815	1					
ANR	1066278	Argument	offset_gd		1065815	2					
ANR	1066279	Identifier	offset_gd		1065815	0					
ANR	1066280	IfStatement	if ( l != i )		1065815	3					
ANR	1066281	Condition	l != i	893:24:37750:37755	1065815	0	True				
ANR	1066282	EqualityExpression	l != i		1065815	0		!=			
ANR	1066283	Identifier	l		1065815	0					
ANR	1066284	Identifier	i		1065815	1					
ANR	1066285	CompoundStatement		40:32:2118:2118	1065815	1					
ANR	1066286	ExpressionStatement	area += ( double ) ( gcp - gc0 ) * ( gdl - gdp ) - ( double ) ( gdp - gd0 ) * ( gcl - gcp )	894:24:37784:37861	1065815	0	True				
ANR	1066287	AssignmentExpression	area += ( double ) ( gcp - gc0 ) * ( gdl - gdp ) - ( double ) ( gdp - gd0 ) * ( gcl - gcp )		1065815	0		+=			
ANR	1066288	Identifier	area		1065815	0					
ANR	1066289	AdditiveExpression	( double ) ( gcp - gc0 ) * ( gdl - gdp ) - ( double ) ( gdp - gd0 ) * ( gcl - gcp )		1065815	1		-			
ANR	1066290	MultiplicativeExpression	( double ) ( gcp - gc0 ) * ( gdl - gdp )		1065815	0		*			
ANR	1066291	CastExpression	( double ) ( gcp - gc0 )		1065815	0					
ANR	1066292	CastTarget	double		1065815	0					
ANR	1066293	AdditiveExpression	gcp - gc0		1065815	1		-			
ANR	1066294	Identifier	gcp		1065815	0					
ANR	1066295	Identifier	gc0		1065815	1					
ANR	1066296	AdditiveExpression	gdl - gdp		1065815	1		-			
ANR	1066297	Identifier	gdl		1065815	0					
ANR	1066298	Identifier	gdp		1065815	1					
ANR	1066299	MultiplicativeExpression	( double ) ( gdp - gd0 ) * ( gcl - gcp )		1065815	1		*			
ANR	1066300	CastExpression	( double ) ( gdp - gd0 )		1065815	0					
ANR	1066301	CastTarget	double		1065815	0					
ANR	1066302	AdditiveExpression	gdp - gd0		1065815	1		-			
ANR	1066303	Identifier	gdp		1065815	0					
ANR	1066304	Identifier	gd0		1065815	1					
ANR	1066305	AdditiveExpression	gcl - gcp		1065815	1		-			
ANR	1066306	Identifier	gcl		1065815	0					
ANR	1066307	Identifier	gcp		1065815	1					
ANR	1066308	ExpressionStatement	gcd = gcl - gc0	895:24:37887:37902	1065815	1	True				
ANR	1066309	AssignmentExpression	gcd = gcl - gc0		1065815	0		=			
ANR	1066310	Identifier	gcd		1065815	0					
ANR	1066311	AdditiveExpression	gcl - gc0		1065815	1		-			
ANR	1066312	Identifier	gcl		1065815	0					
ANR	1066313	Identifier	gc0		1065815	1					
ANR	1066314	ExpressionStatement	gcd = any_abs ( gcd )	896:24:37928:37946	1065815	2	True				
ANR	1066315	AssignmentExpression	gcd = any_abs ( gcd )		1065815	0		=			
ANR	1066316	Identifier	gcd		1065815	0					
ANR	1066317	CallExpression	any_abs ( gcd )		1065815	1					
ANR	1066318	Callee	any_abs		1065815	0					
ANR	1066319	Identifier	any_abs		1065815	0					
ANR	1066320	ArgumentList	gcd		1065815	1					
ANR	1066321	Argument	gcd		1065815	0					
ANR	1066322	Identifier	gcd		1065815	0					
ANR	1066323	IfStatement	if ( gcm < gcd )		1065815	3					
ANR	1066324	Condition	gcm < gcd	897:28:37976:37984	1065815	0	True				
ANR	1066325	RelationalExpression	gcm < gcd		1065815	0		<			
ANR	1066326	Identifier	gcm		1065815	0					
ANR	1066327	Identifier	gcd		1065815	1					
ANR	1066328	CompoundStatement		44:39:2347:2347	1065815	1					
ANR	1066329	ExpressionStatement	* gm = gcl	898:28:38017:38026	1065815	0	True				
ANR	1066330	AssignmentExpression	* gm = gcl		1065815	0		=			
ANR	1066331	UnaryOperationExpression	* gm		1065815	0					
ANR	1066332	UnaryOperator	*		1065815	0					
ANR	1066333	Identifier	gm		1065815	1					
ANR	1066334	Identifier	gcl		1065815	1					
ANR	1066335	ExpressionStatement	gcm = gcd	899:28:38056:38065	1065815	1	True				
ANR	1066336	AssignmentExpression	gcm = gcd		1065815	0		=			
ANR	1066337	Identifier	gcm		1065815	0					
ANR	1066338	Identifier	gcd		1065815	1					
ANR	1066339	ExpressionStatement	dir = ( gcp < gcl ? 1 : gcp > gcl ? - 1 : prev_dir )	901:24:38117:38166	1065815	4	True				
ANR	1066340	AssignmentExpression	dir = ( gcp < gcl ? 1 : gcp > gcl ? - 1 : prev_dir )		1065815	0		=			
ANR	1066341	Identifier	dir		1065815	0					
ANR	1066342	ConditionalExpression	gcp < gcl ? 1 : gcp > gcl ? - 1 : prev_dir		1065815	1					
ANR	1066343	Condition	gcp < gcl		1065815	0					
ANR	1066344	RelationalExpression	gcp < gcl		1065815	0		<			
ANR	1066345	Identifier	gcp		1065815	0					
ANR	1066346	Identifier	gcl		1065815	1					
ANR	1066347	PrimaryExpression	1		1065815	1					
ANR	1066348	ConditionalExpression	gcp > gcl ? - 1 : prev_dir		1065815	2					
ANR	1066349	Condition	gcp > gcl		1065815	0					
ANR	1066350	RelationalExpression	gcp > gcl		1065815	0		>			
ANR	1066351	Identifier	gcp		1065815	0					
ANR	1066352	Identifier	gcl		1065815	1					
ANR	1066353	UnaryOperationExpression	- 1		1065815	1					
ANR	1066354	UnaryOperator	-		1065815	0					
ANR	1066355	PrimaryExpression	1		1065815	1					
ANR	1066356	Identifier	prev_dir		1065815	2					
ANR	1066357	IfStatement	if ( dir * prev_dir < 0 )		1065815	5					
ANR	1066358	Condition	dir * prev_dir < 0	902:28:38196:38213	1065815	0	True				
ANR	1066359	RelationalExpression	dir * prev_dir < 0		1065815	0		<			
ANR	1066360	MultiplicativeExpression	dir * prev_dir		1065815	0		*			
ANR	1066361	Identifier	dir		1065815	0					
ANR	1066362	Identifier	prev_dir		1065815	1					
ANR	1066363	PrimaryExpression	0		1065815	1					
ANR	1066364	ExpressionStatement	dir_change ++	903:28:38244:38256	1065815	1	True				
ANR	1066365	PostIncDecOperationExpression	dir_change ++		1065815	0					
ANR	1066366	Identifier	dir_change		1065815	0					
ANR	1066367	IncDec	++		1065815	1					
ANR	1066368	IfStatement	if ( l == j )		1065815	4					
ANR	1066369	Condition	l == j	905:24:38304:38309	1065815	0	True				
ANR	1066370	EqualityExpression	l == j		1065815	0		==			
ANR	1066371	Identifier	l		1065815	0					
ANR	1066372	Identifier	j		1065815	1					
ANR	1066373	BreakStatement	break ;	906:24:38336:38341	1065815	1	True				
ANR	1066374	IfStatement	if ( gcl < gc0 )		1065815	5					
ANR	1066375	Condition	gcl < gc0	907:24:38367:38375	1065815	0	True				
ANR	1066376	RelationalExpression	gcl < gc0		1065815	0		<			
ANR	1066377	Identifier	gcl		1065815	0					
ANR	1066378	Identifier	gc0		1065815	1					
ANR	1066379	ExpressionStatement	lt = true	908:24:38402:38411	1065815	1	True				
ANR	1066380	AssignmentExpression	lt = true		1065815	0		=			
ANR	1066381	Identifier	lt		1065815	0					
ANR	1066382	Identifier	true		1065815	1					
ANR	1066383	IfStatement	if ( gcl > gc0 )		1065815	6					
ANR	1066384	Condition	gcl > gc0	909:24:38437:38445	1065815	0	True				
ANR	1066385	RelationalExpression	gcl > gc0		1065815	0		>			
ANR	1066386	Identifier	gcl		1065815	0					
ANR	1066387	Identifier	gc0		1065815	1					
ANR	1066388	ExpressionStatement	gt = true	910:24:38472:38481	1065815	1	True				
ANR	1066389	AssignmentExpression	gt = true		1065815	0		=			
ANR	1066390	Identifier	gt		1065815	0					
ANR	1066391	Identifier	true		1065815	1					
ANR	1066392	IfStatement	if ( dir_change > 1 )		1065815	5					
ANR	1066393	Condition	dir_change > 1	912:20:38521:38534	1065815	0	True				
ANR	1066394	RelationalExpression	dir_change > 1		1065815	0		>			
ANR	1066395	Identifier	dir_change		1065815	0					
ANR	1066396	PrimaryExpression	1		1065815	1					
ANR	1066397	ContinueStatement	continue ;	913:20:38557:38565	1065815	1	True				
ANR	1066398	IfStatement	if ( gcm > threshold )		1065815	6					
ANR	1066399	Condition	gcm > threshold	914:20:38587:38601	1065815	0	True				
ANR	1066400	RelationalExpression	gcm > threshold		1065815	0		>			
ANR	1066401	Identifier	gcm		1065815	0					
ANR	1066402	Identifier	threshold		1065815	1					
ANR	1066403	ContinueStatement	continue ;	915:20:38624:38632	1065815	1	True				
ANR	1066404	ExpressionStatement	area = any_abs ( area ) / 2	916:16:38650:38674	1065815	7	True				
ANR	1066405	AssignmentExpression	area = any_abs ( area ) / 2		1065815	0		=			
ANR	1066406	Identifier	area		1065815	0					
ANR	1066407	MultiplicativeExpression	any_abs ( area ) / 2		1065815	1		/			
ANR	1066408	CallExpression	any_abs ( area )		1065815	0					
ANR	1066409	Callee	any_abs		1065815	0					
ANR	1066410	Identifier	any_abs		1065815	0					
ANR	1066411	ArgumentList	area		1065815	1					
ANR	1066412	Argument	area		1065815	0					
ANR	1066413	Identifier	area		1065815	0					
ANR	1066414	PrimaryExpression	2		1065815	1					
ANR	1066415	ExpressionStatement	area0 = ( double ) ( gd1 - gd0 ) * gcm	917:16:38709:38742	1065815	8	True				
ANR	1066416	AssignmentExpression	area0 = ( double ) ( gd1 - gd0 ) * gcm		1065815	0		=			
ANR	1066417	Identifier	area0		1065815	0					
ANR	1066418	MultiplicativeExpression	( double ) ( gd1 - gd0 ) * gcm		1065815	1		*			
ANR	1066419	CastExpression	( double ) ( gd1 - gd0 )		1065815	0					
ANR	1066420	CastTarget	double		1065815	0					
ANR	1066421	AdditiveExpression	gd1 - gd0		1065815	1		-			
ANR	1066422	Identifier	gd1		1065815	0					
ANR	1066423	Identifier	gd0		1065815	1					
ANR	1066424	Identifier	gcm		1065815	1					
ANR	1066425	ExpressionStatement	area0 = any_abs ( area0 )	918:16:38789:38811	1065815	9	True				
ANR	1066426	AssignmentExpression	area0 = any_abs ( area0 )		1065815	0		=			
ANR	1066427	Identifier	area0		1065815	0					
ANR	1066428	CallExpression	any_abs ( area0 )		1065815	1					
ANR	1066429	Callee	any_abs		1065815	0					
ANR	1066430	Identifier	any_abs		1065815	0					
ANR	1066431	ArgumentList	area0		1065815	1					
ANR	1066432	Argument	area0		1065815	0					
ANR	1066433	Identifier	area0		1065815	0					
ANR	1066434	IfStatement	if ( area > area0 * 0.75 )		1065815	10					
ANR	1066435	Condition	area > area0 * 0.75	919:20:38833:38851	1065815	0	True				
ANR	1066436	RelationalExpression	area > area0 * 0.75		1065815	0		>			
ANR	1066437	Identifier	area		1065815	0					
ANR	1066438	MultiplicativeExpression	area0 * 0.75		1065815	1		*			
ANR	1066439	Identifier	area0		1065815	0					
ANR	1066440	PrimaryExpression	0.75		1065815	1					
ANR	1066441	ContinueStatement	continue ;	920:20:38874:38882	1065815	1	True				
ANR	1066442	IfStatement	if ( ! lt || ! gt )		1065815	11					
ANR	1066443	Condition	! lt || ! gt	921:20:38940:38949	1065815	0	True				
ANR	1066444	OrExpression	! lt || ! gt		1065815	0		||			
ANR	1066445	UnaryOperationExpression	! lt		1065815	0					
ANR	1066446	UnaryOperator	!		1065815	0					
ANR	1066447	Identifier	lt		1065815	1					
ANR	1066448	UnaryOperationExpression	! gt		1065815	1					
ANR	1066449	UnaryOperator	!		1065815	0					
ANR	1066450	Identifier	gt		1065815	1					
ANR	1066451	CompoundStatement		70:20:3382:3411	1065815	1					
ANR	1066452	IdentifierDeclStatement	"int ii = i - 1 , jj = j + 1 ;"	922:20:38974:39000	1065815	0	True				
ANR	1066453	IdentifierDecl	ii = i - 1		1065815	0					
ANR	1066454	IdentifierDeclType	int		1065815	0					
ANR	1066455	Identifier	ii		1065815	1					
ANR	1066456	AssignmentExpression	ii = i - 1		1065815	2		=			
ANR	1066457	Identifier	ii		1065815	0					
ANR	1066458	AdditiveExpression	i - 1		1065815	1		-			
ANR	1066459	Identifier	i		1065815	0					
ANR	1066460	PrimaryExpression	1		1065815	1					
ANR	1066461	IdentifierDecl	jj = j + 1		1065815	1					
ANR	1066462	IdentifierDeclType	int		1065815	0					
ANR	1066463	Identifier	jj		1065815	1					
ANR	1066464	AssignmentExpression	jj = j + 1		1065815	2		=			
ANR	1066465	Identifier	jj		1065815	0					
ANR	1066466	AdditiveExpression	j + 1		1065815	1		+			
ANR	1066467	Identifier	j		1065815	0					
ANR	1066468	PrimaryExpression	1		1065815	1					
ANR	1066469	IdentifierDeclStatement	"t1_glyph_space_coord gii , gjj ;"	923:20:39022:39051	1065815	1	True				
ANR	1066470	IdentifierDecl	gii		1065815	0					
ANR	1066471	IdentifierDeclType	t1_glyph_space_coord		1065815	0					
ANR	1066472	Identifier	gii		1065815	1					
ANR	1066473	IdentifierDecl	gjj		1065815	1					
ANR	1066474	IdentifierDeclType	t1_glyph_space_coord		1065815	0					
ANR	1066475	Identifier	gjj		1065815	1					
ANR	1066476	IfStatement	if ( ii < contour_beg )		1065815	2					
ANR	1066477	Condition	ii < contour_beg	925:24:39078:39093	1065815	0	True				
ANR	1066478	RelationalExpression	ii < contour_beg		1065815	0		<			
ANR	1066479	Identifier	ii		1065815	0					
ANR	1066480	Identifier	contour_beg		1065815	1					
ANR	1066481	ExpressionStatement	ii = contour_end - 1	926:24:39120:39140	1065815	1	True				
ANR	1066482	AssignmentExpression	ii = contour_end - 1		1065815	0		=			
ANR	1066483	Identifier	ii		1065815	0					
ANR	1066484	AdditiveExpression	contour_end - 1		1065815	1		-			
ANR	1066485	Identifier	contour_end		1065815	0					
ANR	1066486	PrimaryExpression	1		1065815	1					
ANR	1066487	IfStatement	if ( jj == contour_end )		1065815	3					
ANR	1066488	Condition	jj == contour_end	927:24:39166:39182	1065815	0	True				
ANR	1066489	EqualityExpression	jj == contour_end		1065815	0		==			
ANR	1066490	Identifier	jj		1065815	0					
ANR	1066491	Identifier	contour_end		1065815	1					
ANR	1066492	ExpressionStatement	jj = contour_beg	928:24:39209:39225	1065815	1	True				
ANR	1066493	AssignmentExpression	jj = contour_beg		1065815	0		=			
ANR	1066494	Identifier	jj		1065815	0					
ANR	1066495	Identifier	contour_beg		1065815	1					
ANR	1066496	ExpressionStatement	"gii = * member_prt ( t1_glyph_space_coord , & self -> pole [ ii ] , offset_gc )"	929:20:39247:39314	1065815	4	True				
ANR	1066497	AssignmentExpression	"gii = * member_prt ( t1_glyph_space_coord , & self -> pole [ ii ] , offset_gc )"		1065815	0		=			
ANR	1066498	Identifier	gii		1065815	0					
ANR	1066499	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ ii ] , offset_gc )"		1065815	1					
ANR	1066500	UnaryOperator	*		1065815	0					
ANR	1066501	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ ii ] , offset_gc )"		1065815	1					
ANR	1066502	Callee	member_prt		1065815	0					
ANR	1066503	Identifier	member_prt		1065815	0					
ANR	1066504	ArgumentList	t1_glyph_space_coord		1065815	1					
ANR	1066505	Argument	t1_glyph_space_coord		1065815	0					
ANR	1066506	Identifier	t1_glyph_space_coord		1065815	0					
ANR	1066507	Argument	& self -> pole [ ii ]		1065815	1					
ANR	1066508	UnaryOperationExpression	& self -> pole [ ii ]		1065815	0					
ANR	1066509	UnaryOperator	&		1065815	0					
ANR	1066510	ArrayIndexing	self -> pole [ ii ]		1065815	1					
ANR	1066511	PtrMemberAccess	self -> pole		1065815	0					
ANR	1066512	Identifier	self		1065815	0					
ANR	1066513	Identifier	pole		1065815	1					
ANR	1066514	Identifier	ii		1065815	1					
ANR	1066515	Argument	offset_gc		1065815	2					
ANR	1066516	Identifier	offset_gc		1065815	0					
ANR	1066517	ExpressionStatement	"gjj = * member_prt ( t1_glyph_space_coord , & self -> pole [ jj ] , offset_gc )"	930:20:39336:39403	1065815	5	True				
ANR	1066518	AssignmentExpression	"gjj = * member_prt ( t1_glyph_space_coord , & self -> pole [ jj ] , offset_gc )"		1065815	0		=			
ANR	1066519	Identifier	gjj		1065815	0					
ANR	1066520	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ jj ] , offset_gc )"		1065815	1					
ANR	1066521	UnaryOperator	*		1065815	0					
ANR	1066522	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ jj ] , offset_gc )"		1065815	1					
ANR	1066523	Callee	member_prt		1065815	0					
ANR	1066524	Identifier	member_prt		1065815	0					
ANR	1066525	ArgumentList	t1_glyph_space_coord		1065815	1					
ANR	1066526	Argument	t1_glyph_space_coord		1065815	0					
ANR	1066527	Identifier	t1_glyph_space_coord		1065815	0					
ANR	1066528	Argument	& self -> pole [ jj ]		1065815	1					
ANR	1066529	UnaryOperationExpression	& self -> pole [ jj ]		1065815	0					
ANR	1066530	UnaryOperator	&		1065815	0					
ANR	1066531	ArrayIndexing	self -> pole [ jj ]		1065815	1					
ANR	1066532	PtrMemberAccess	self -> pole		1065815	0					
ANR	1066533	Identifier	self		1065815	0					
ANR	1066534	Identifier	pole		1065815	1					
ANR	1066535	Identifier	jj		1065815	1					
ANR	1066536	Argument	offset_gc		1065815	2					
ANR	1066537	Identifier	offset_gc		1065815	0					
ANR	1066538	IfStatement	if ( ( lt && gii <= gc0 && gjj <= gc0 ) || ( gt && gii >= gc0 && gjj >= gc0 ) )		1065815	6					
ANR	1066539	Condition	( lt && gii <= gc0 && gjj <= gc0 ) || ( gt && gii >= gc0 && gjj >= gc0 )	931:24:39429:39520	1065815	0	True				
ANR	1066540	OrExpression	( lt && gii <= gc0 && gjj <= gc0 ) || ( gt && gii >= gc0 && gjj >= gc0 )		1065815	0		||			
ANR	1066541	AndExpression	lt && gii <= gc0 && gjj <= gc0		1065815	0		&&			
ANR	1066542	Identifier	lt		1065815	0					
ANR	1066543	AndExpression	gii <= gc0 && gjj <= gc0		1065815	1		&&			
ANR	1066544	RelationalExpression	gii <= gc0		1065815	0		<=			
ANR	1066545	Identifier	gii		1065815	0					
ANR	1066546	Identifier	gc0		1065815	1					
ANR	1066547	RelationalExpression	gjj <= gc0		1065815	1		<=			
ANR	1066548	Identifier	gjj		1065815	0					
ANR	1066549	Identifier	gc0		1065815	1					
ANR	1066550	AndExpression	gt && gii >= gc0 && gjj >= gc0		1065815	1		&&			
ANR	1066551	Identifier	gt		1065815	0					
ANR	1066552	AndExpression	gii >= gc0 && gjj >= gc0		1065815	1		&&			
ANR	1066553	RelationalExpression	gii >= gc0		1065815	0		>=			
ANR	1066554	Identifier	gii		1065815	0					
ANR	1066555	Identifier	gc0		1065815	1					
ANR	1066556	RelationalExpression	gjj >= gc0		1065815	1		>=			
ANR	1066557	Identifier	gjj		1065815	0					
ANR	1066558	Identifier	gc0		1065815	1					
ANR	1066559	CompoundStatement		79:58:3883:3883	1065815	1					
ANR	1066560	ExpressionStatement	* j0 = i	933:24:39549:39556	1065815	0	True				
ANR	1066561	AssignmentExpression	* j0 = i		1065815	0		=			
ANR	1066562	UnaryOperationExpression	* j0		1065815	0					
ANR	1066563	UnaryOperator	*		1065815	0					
ANR	1066564	Identifier	j0		1065815	1					
ANR	1066565	Identifier	i		1065815	1					
ANR	1066566	ExpressionStatement	* j1 = j	934:24:39582:39589	1065815	1	True				
ANR	1066567	AssignmentExpression	* j1 = j		1065815	0		=			
ANR	1066568	UnaryOperationExpression	* j1		1065815	0					
ANR	1066569	UnaryOperator	*		1065815	0					
ANR	1066570	Identifier	j1		1065815	1					
ANR	1066571	Identifier	j		1065815	1					
ANR	1066572	ReturnStatement	return true ;	935:24:39615:39626	1065815	2	True				
ANR	1066573	Identifier	true		1065815	0					
ANR	1066574	BreakStatement	break ;	944:8:39925:39930	1065815	5	True				
ANR	1066575	ReturnStatement	return false ;	946:4:39942:39954	1065815	7	True				
ANR	1066576	Identifier	false		1065815	0					
ANR	1066577	ReturnType	static bool		1065815	1					
ANR	1066578	Identifier	t1_hinter__find_flex		1065815	2					
ANR	1066579	ParameterList	"t1_hinter * self , int k , int contour_beg , int contour_end , t1_glyph_space_coord pixel_g , t1_glyph_space_coord threshold , int i0 , int i1 , int N , int * j0 , int * j1 , t1_glyph_space_coord * gm"		1065815	3					
ANR	1066580	Parameter	t1_hinter * self	850:33:35382:35397	1065815	0	True				
ANR	1066581	ParameterType	t1_hinter *		1065815	0					
ANR	1066582	Identifier	self		1065815	1					
ANR	1066583	Parameter	int k	850:51:35400:35404	1065815	1	True				
ANR	1066584	ParameterType	int		1065815	0					
ANR	1066585	Identifier	k		1065815	1					
ANR	1066586	Parameter	int contour_beg	850:58:35407:35421	1065815	2	True				
ANR	1066587	ParameterType	int		1065815	0					
ANR	1066588	Identifier	contour_beg		1065815	1					
ANR	1066589	Parameter	int contour_end	850:75:35424:35438	1065815	3	True				
ANR	1066590	ParameterType	int		1065815	0					
ANR	1066591	Identifier	contour_end		1065815	1					
ANR	1066592	Parameter	t1_glyph_space_coord pixel_g	851:23:35464:35491	1065815	4	True				
ANR	1066593	ParameterType	t1_glyph_space_coord		1065815	0					
ANR	1066594	Identifier	pixel_g		1065815	1					
ANR	1066595	Parameter	t1_glyph_space_coord threshold	851:53:35494:35523	1065815	5	True				
ANR	1066596	ParameterType	t1_glyph_space_coord		1065815	0					
ANR	1066597	Identifier	threshold		1065815	1					
ANR	1066598	Parameter	int i0	852:23:35549:35554	1065815	6	True				
ANR	1066599	ParameterType	int		1065815	0					
ANR	1066600	Identifier	i0		1065815	1					
ANR	1066601	Parameter	int i1	852:31:35557:35562	1065815	7	True				
ANR	1066602	ParameterType	int		1065815	0					
ANR	1066603	Identifier	i1		1065815	1					
ANR	1066604	Parameter	int N	852:39:35565:35569	1065815	8	True				
ANR	1066605	ParameterType	int		1065815	0					
ANR	1066606	Identifier	N		1065815	1					
ANR	1066607	Parameter	int * j0	852:46:35572:35578	1065815	9	True				
ANR	1066608	ParameterType	int *		1065815	0					
ANR	1066609	Identifier	j0		1065815	1					
ANR	1066610	Parameter	int * j1	852:55:35581:35587	1065815	10	True				
ANR	1066611	ParameterType	int *		1065815	0					
ANR	1066612	Identifier	j1		1065815	1					
ANR	1066613	Parameter	t1_glyph_space_coord * gm	853:23:35613:35636	1065815	11	True				
ANR	1066614	ParameterType	t1_glyph_space_coord *		1065815	0					
ANR	1066615	Identifier	gm		1065815	1					
ANR	1066616	CFGEntryNode	ENTRY		1065815		True				
ANR	1066617	CFGExitNode	EXIT		1065815		True				
ANR	1066618	InfiniteForNode	true		1065815		True				
ANR	1066619	Symbol	j0		1065815						
ANR	1066620	Symbol	j1		1065815						
ANR	1066621	Symbol	lt		1065815						
ANR	1066622	Symbol	gcd		1065815						
ANR	1066623	Symbol	threshold		1065815						
ANR	1066624	Symbol	dir		1065815						
ANR	1066625	Symbol	prev_dir		1065815						
ANR	1066626	Symbol	* gm		1065815						
ANR	1066627	Symbol	gcm		1065815						
ANR	1066628	Symbol	gcl		1065815						
ANR	1066629	Symbol	* member_prt		1065815						
ANR	1066630	Symbol	gcp		1065815						
ANR	1066631	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gd )"		1065815						
ANR	1066632	Symbol	member_prt		1065815						
ANR	1066633	Symbol	area		1065815						
ANR	1066634	Symbol	ii		1065815						
ANR	1066635	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gd )"		1065815						
ANR	1066636	Symbol	* self		1065815						
ANR	1066637	Symbol	offset_gc		1065815						
ANR	1066638	Symbol	offset_gd		1065815						
ANR	1066639	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		1065815						
ANR	1066640	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ ii ] , offset_gc )"		1065815						
ANR	1066641	Symbol	gdl		1065815						
ANR	1066642	Symbol	* j1		1065815						
ANR	1066643	Symbol	self -> pole [ j ] . type		1065815						
ANR	1066644	Symbol	* j0		1065815						
ANR	1066645	Symbol	gdp		1065815						
ANR	1066646	Symbol	t1_glyph_space_coord		1065815						
ANR	1066647	Symbol	contour_beg		1065815						
ANR	1066648	Symbol	p_gd		1065815						
ANR	1066649	Symbol	true		1065815						
ANR	1066650	Symbol	p_gc		1065815						
ANR	1066651	Symbol	jj		1065815						
ANR	1066652	Symbol	* self -> pole		1065815						
ANR	1066653	Symbol	gii		1065815						
ANR	1066654	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ jj ] , offset_gc )"		1065815						
ANR	1066655	Symbol	N		1065815						
ANR	1066656	Symbol	area0		1065815						
ANR	1066657	Symbol	contour_end		1065815						
ANR	1066658	Symbol	gc1		1065815						
ANR	1066659	Symbol	gc0		1065815						
ANR	1066660	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1065815						
ANR	1066661	Symbol	self -> pole [ i ] . type		1065815						
ANR	1066662	Symbol	any_abs		1065815						
ANR	1066663	Symbol	self -> pole		1065815						
ANR	1066664	Symbol	pixel_g		1065815						
ANR	1066665	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ l ] , offset_gc )"		1065815						
ANR	1066666	Symbol	& self -> pole [ 0 ] . gy		1065815						
ANR	1066667	Symbol	* * self		1065815						
ANR	1066668	Symbol	& self -> pole [ 0 ] . gx		1065815						
ANR	1066669	Symbol	gm		1065815						
ANR	1066670	Symbol	gjj		1065815						
ANR	1066671	Symbol	i0		1065815						
ANR	1066672	Symbol	i1		1065815						
ANR	1066673	Symbol	false		1065815						
ANR	1066674	Symbol	i		1065815						
ANR	1066675	Symbol	j		1065815						
ANR	1066676	Symbol	k		1065815						
ANR	1066677	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		1065815						
ANR	1066678	Symbol	l		1065815						
ANR	1066679	Symbol	dir_change		1065815						
ANR	1066680	Symbol	m		1065815						
ANR	1066681	Symbol	gt		1065815						
ANR	1066682	Symbol	n		1065815						
ANR	1066683	Symbol	gd0		1065815						
ANR	1066684	Symbol	* i		1065815						
ANR	1066685	Symbol	* j		1065815						
ANR	1066686	Symbol	gd1		1065815						
ANR	1066687	Symbol	offcurve		1065815						
ANR	1066688	Symbol	self		1065815						
ANR	1066689	Function	t1_hinter__compact_flex	949:0:39959:41104							
ANR	1066690	FunctionDef	"t1_hinter__compact_flex (t1_hinter * self , int contour_beg , int contour_end , int i0 , int i1 , int * pi)"		1066689	0					
ANR	1066691	CompoundStatement		950:0:40072:41104	1066689	0					
ANR	1066692	IfStatement	if ( i0 > i1 )		1066689	0					
ANR	1066693	Condition	i0 > i1	951:8:40082:40088	1066689	0	True				
ANR	1066694	RelationalExpression	i0 > i1		1066689	0		>			
ANR	1066695	Identifier	i0		1066689	0					
ANR	1066696	Identifier	i1		1066689	1					
ANR	1066697	CompoundStatement		2:17:18:18	1066689	1					
ANR	1066698	ExpressionStatement	"t1_hinter__compact_flex ( self , contour_beg , contour_end , i0 , contour_end , pi )"	952:8:40101:40177	1066689	0	True				
ANR	1066699	CallExpression	"t1_hinter__compact_flex ( self , contour_beg , contour_end , i0 , contour_end , pi )"		1066689	0					
ANR	1066700	Callee	t1_hinter__compact_flex		1066689	0					
ANR	1066701	Identifier	t1_hinter__compact_flex		1066689	0					
ANR	1066702	ArgumentList	self		1066689	1					
ANR	1066703	Argument	self		1066689	0					
ANR	1066704	Identifier	self		1066689	0					
ANR	1066705	Argument	contour_beg		1066689	1					
ANR	1066706	Identifier	contour_beg		1066689	0					
ANR	1066707	Argument	contour_end		1066689	2					
ANR	1066708	Identifier	contour_end		1066689	0					
ANR	1066709	Argument	i0		1066689	3					
ANR	1066710	Identifier	i0		1066689	0					
ANR	1066711	Argument	contour_end		1066689	4					
ANR	1066712	Identifier	contour_end		1066689	0					
ANR	1066713	Argument	pi		1066689	5					
ANR	1066714	Identifier	pi		1066689	0					
ANR	1066715	ExpressionStatement	"t1_hinter__compact_flex ( self , contour_beg , contour_end , contour_beg , i1 , pi )"	953:8:40187:40263	1066689	1	True				
ANR	1066716	CallExpression	"t1_hinter__compact_flex ( self , contour_beg , contour_end , contour_beg , i1 , pi )"		1066689	0					
ANR	1066717	Callee	t1_hinter__compact_flex		1066689	0					
ANR	1066718	Identifier	t1_hinter__compact_flex		1066689	0					
ANR	1066719	ArgumentList	self		1066689	1					
ANR	1066720	Argument	self		1066689	0					
ANR	1066721	Identifier	self		1066689	0					
ANR	1066722	Argument	contour_beg		1066689	1					
ANR	1066723	Identifier	contour_beg		1066689	0					
ANR	1066724	Argument	contour_end		1066689	2					
ANR	1066725	Identifier	contour_end		1066689	0					
ANR	1066726	Argument	contour_beg		1066689	3					
ANR	1066727	Identifier	contour_beg		1066689	0					
ANR	1066728	Argument	i1		1066689	4					
ANR	1066729	Identifier	i1		1066689	0					
ANR	1066730	Argument	pi		1066689	5					
ANR	1066731	Identifier	pi		1066689	0					
ANR	1066732	ElseStatement	else		1066689	0					
ANR	1066733	IfStatement	if ( i0 < i1 )		1066689	0					
ANR	1066734	Condition	i0 < i1	954:15:40280:40286	1066689	0	True				
ANR	1066735	RelationalExpression	i0 < i1		1066689	0		<			
ANR	1066736	Identifier	i0		1066689	0					
ANR	1066737	Identifier	i1		1066689	1					
ANR	1066738	CompoundStatement		7:8:241:260	1066689	1					
ANR	1066739	IdentifierDeclStatement	int j ;	955:8:40299:40304	1066689	0	True				
ANR	1066740	IdentifierDecl	j		1066689	0					
ANR	1066741	IdentifierDeclType	int		1066689	0					
ANR	1066742	Identifier	j		1066689	1					
ANR	1066743	IdentifierDeclStatement	int s = i1 - i0 - 1 ;	956:8:40314:40333	1066689	1	True				
ANR	1066744	IdentifierDecl	s = i1 - i0 - 1		1066689	0					
ANR	1066745	IdentifierDeclType	int		1066689	0					
ANR	1066746	Identifier	s		1066689	1					
ANR	1066747	AssignmentExpression	s = i1 - i0 - 1		1066689	2		=			
ANR	1066748	Identifier	s		1066689	0					
ANR	1066749	AdditiveExpression	i1 - i0 - 1		1066689	1		-			
ANR	1066750	Identifier	i1		1066689	0					
ANR	1066751	AdditiveExpression	i0 - 1		1066689	1		-			
ANR	1066752	Identifier	i0		1066689	0					
ANR	1066753	PrimaryExpression	1		1066689	1					
ANR	1066754	ForStatement	for ( j = 0 ; j < self -> hint_range_count ; j ++ )		1066689	2					
ANR	1066755	ForInit	j = 0 ;	958:13:40349:40354	1066689	0	True				
ANR	1066756	AssignmentExpression	j = 0		1066689	0		=			
ANR	1066757	Identifier	j		1066689	0					
ANR	1066758	PrimaryExpression	0		1066689	1					
ANR	1066759	Condition	j < self -> hint_range_count	958:20:40356:40381	1066689	1	True				
ANR	1066760	RelationalExpression	j < self -> hint_range_count		1066689	0		<			
ANR	1066761	Identifier	j		1066689	0					
ANR	1066762	PtrMemberAccess	self -> hint_range_count		1066689	1					
ANR	1066763	Identifier	self		1066689	0					
ANR	1066764	Identifier	hint_range_count		1066689	1					
ANR	1066765	PostIncDecOperationExpression	j ++	958:48:40384:40386	1066689	2	True				
ANR	1066766	Identifier	j		1066689	0					
ANR	1066767	IncDec	++		1066689	1					
ANR	1066768	CompoundStatement		9:53:316:316	1066689	3					
ANR	1066769	IfStatement	if ( self -> hint_range [ j ] . beg_pole >= i1 )		1066689	0					
ANR	1066770	Condition	self -> hint_range [ j ] . beg_pole >= i1	959:16:40407:40440	1066689	0	True				
ANR	1066771	RelationalExpression	self -> hint_range [ j ] . beg_pole >= i1		1066689	0		>=			
ANR	1066772	MemberAccess	self -> hint_range [ j ] . beg_pole		1066689	0					
ANR	1066773	ArrayIndexing	self -> hint_range [ j ]		1066689	0					
ANR	1066774	PtrMemberAccess	self -> hint_range		1066689	0					
ANR	1066775	Identifier	self		1066689	0					
ANR	1066776	Identifier	hint_range		1066689	1					
ANR	1066777	Identifier	j		1066689	1					
ANR	1066778	Identifier	beg_pole		1066689	1					
ANR	1066779	Identifier	i1		1066689	1					
ANR	1066780	ExpressionStatement	self -> hint_range [ j ] . beg_pole -= s	960:16:40459:40492	1066689	1	True				
ANR	1066781	AssignmentExpression	self -> hint_range [ j ] . beg_pole -= s		1066689	0		-=			
ANR	1066782	MemberAccess	self -> hint_range [ j ] . beg_pole		1066689	0					
ANR	1066783	ArrayIndexing	self -> hint_range [ j ]		1066689	0					
ANR	1066784	PtrMemberAccess	self -> hint_range		1066689	0					
ANR	1066785	Identifier	self		1066689	0					
ANR	1066786	Identifier	hint_range		1066689	1					
ANR	1066787	Identifier	j		1066689	1					
ANR	1066788	Identifier	beg_pole		1066689	1					
ANR	1066789	Identifier	s		1066689	1					
ANR	1066790	ElseStatement	else		1066689	0					
ANR	1066791	IfStatement	if ( self -> hint_range [ j ] . beg_pole > i0 )		1066689	0					
ANR	1066792	Condition	self -> hint_range [ j ] . beg_pole > i0	961:21:40515:40547	1066689	0	True				
ANR	1066793	RelationalExpression	self -> hint_range [ j ] . beg_pole > i0		1066689	0		>			
ANR	1066794	MemberAccess	self -> hint_range [ j ] . beg_pole		1066689	0					
ANR	1066795	ArrayIndexing	self -> hint_range [ j ]		1066689	0					
ANR	1066796	PtrMemberAccess	self -> hint_range		1066689	0					
ANR	1066797	Identifier	self		1066689	0					
ANR	1066798	Identifier	hint_range		1066689	1					
ANR	1066799	Identifier	j		1066689	1					
ANR	1066800	Identifier	beg_pole		1066689	1					
ANR	1066801	Identifier	i0		1066689	1					
ANR	1066802	ExpressionStatement	self -> hint_range [ j ] . beg_pole = i0	962:16:40566:40599	1066689	1	True				
ANR	1066803	AssignmentExpression	self -> hint_range [ j ] . beg_pole = i0		1066689	0		=			
ANR	1066804	MemberAccess	self -> hint_range [ j ] . beg_pole		1066689	0					
ANR	1066805	ArrayIndexing	self -> hint_range [ j ]		1066689	0					
ANR	1066806	PtrMemberAccess	self -> hint_range		1066689	0					
ANR	1066807	Identifier	self		1066689	0					
ANR	1066808	Identifier	hint_range		1066689	1					
ANR	1066809	Identifier	j		1066689	1					
ANR	1066810	Identifier	beg_pole		1066689	1					
ANR	1066811	Identifier	i0		1066689	1					
ANR	1066812	IfStatement	if ( self -> hint_range [ j ] . end_pole >= i1 )		1066689	1					
ANR	1066813	Condition	self -> hint_range [ j ] . end_pole >= i1	963:16:40617:40650	1066689	0	True				
ANR	1066814	RelationalExpression	self -> hint_range [ j ] . end_pole >= i1		1066689	0		>=			
ANR	1066815	MemberAccess	self -> hint_range [ j ] . end_pole		1066689	0					
ANR	1066816	ArrayIndexing	self -> hint_range [ j ]		1066689	0					
ANR	1066817	PtrMemberAccess	self -> hint_range		1066689	0					
ANR	1066818	Identifier	self		1066689	0					
ANR	1066819	Identifier	hint_range		1066689	1					
ANR	1066820	Identifier	j		1066689	1					
ANR	1066821	Identifier	end_pole		1066689	1					
ANR	1066822	Identifier	i1		1066689	1					
ANR	1066823	ExpressionStatement	self -> hint_range [ j ] . end_pole -= s	964:16:40669:40702	1066689	1	True				
ANR	1066824	AssignmentExpression	self -> hint_range [ j ] . end_pole -= s		1066689	0		-=			
ANR	1066825	MemberAccess	self -> hint_range [ j ] . end_pole		1066689	0					
ANR	1066826	ArrayIndexing	self -> hint_range [ j ]		1066689	0					
ANR	1066827	PtrMemberAccess	self -> hint_range		1066689	0					
ANR	1066828	Identifier	self		1066689	0					
ANR	1066829	Identifier	hint_range		1066689	1					
ANR	1066830	Identifier	j		1066689	1					
ANR	1066831	Identifier	end_pole		1066689	1					
ANR	1066832	Identifier	s		1066689	1					
ANR	1066833	ElseStatement	else		1066689	0					
ANR	1066834	IfStatement	if ( self -> hint_range [ j ] . end_pole > i0 )		1066689	0					
ANR	1066835	Condition	self -> hint_range [ j ] . end_pole > i0	965:21:40725:40757	1066689	0	True				
ANR	1066836	RelationalExpression	self -> hint_range [ j ] . end_pole > i0		1066689	0		>			
ANR	1066837	MemberAccess	self -> hint_range [ j ] . end_pole		1066689	0					
ANR	1066838	ArrayIndexing	self -> hint_range [ j ]		1066689	0					
ANR	1066839	PtrMemberAccess	self -> hint_range		1066689	0					
ANR	1066840	Identifier	self		1066689	0					
ANR	1066841	Identifier	hint_range		1066689	1					
ANR	1066842	Identifier	j		1066689	1					
ANR	1066843	Identifier	end_pole		1066689	1					
ANR	1066844	Identifier	i0		1066689	1					
ANR	1066845	ExpressionStatement	self -> hint_range [ j ] . end_pole = i0	966:16:40776:40809	1066689	1	True				
ANR	1066846	AssignmentExpression	self -> hint_range [ j ] . end_pole = i0		1066689	0		=			
ANR	1066847	MemberAccess	self -> hint_range [ j ] . end_pole		1066689	0					
ANR	1066848	ArrayIndexing	self -> hint_range [ j ]		1066689	0					
ANR	1066849	PtrMemberAccess	self -> hint_range		1066689	0					
ANR	1066850	Identifier	self		1066689	0					
ANR	1066851	Identifier	hint_range		1066689	1					
ANR	1066852	Identifier	j		1066689	1					
ANR	1066853	Identifier	end_pole		1066689	1					
ANR	1066854	Identifier	i0		1066689	1					
ANR	1066855	ExpressionStatement	"memmove ( & self -> pole [ i0 + 1 ] , & self -> pole [ i1 ] , sizeof ( * self -> pole ) * ( self -> pole_count - i1 ) )"	968:8:40829:40921	1066689	3	True				
ANR	1066856	CallExpression	"memmove ( & self -> pole [ i0 + 1 ] , & self -> pole [ i1 ] , sizeof ( * self -> pole ) * ( self -> pole_count - i1 ) )"		1066689	0					
ANR	1066857	Callee	memmove		1066689	0					
ANR	1066858	Identifier	memmove		1066689	0					
ANR	1066859	ArgumentList	& self -> pole [ i0 + 1 ]		1066689	1					
ANR	1066860	Argument	& self -> pole [ i0 + 1 ]		1066689	0					
ANR	1066861	UnaryOperationExpression	& self -> pole [ i0 + 1 ]		1066689	0					
ANR	1066862	UnaryOperator	&		1066689	0					
ANR	1066863	ArrayIndexing	self -> pole [ i0 + 1 ]		1066689	1					
ANR	1066864	PtrMemberAccess	self -> pole		1066689	0					
ANR	1066865	Identifier	self		1066689	0					
ANR	1066866	Identifier	pole		1066689	1					
ANR	1066867	AdditiveExpression	i0 + 1		1066689	1		+			
ANR	1066868	Identifier	i0		1066689	0					
ANR	1066869	PrimaryExpression	1		1066689	1					
ANR	1066870	Argument	& self -> pole [ i1 ]		1066689	1					
ANR	1066871	UnaryOperationExpression	& self -> pole [ i1 ]		1066689	0					
ANR	1066872	UnaryOperator	&		1066689	0					
ANR	1066873	ArrayIndexing	self -> pole [ i1 ]		1066689	1					
ANR	1066874	PtrMemberAccess	self -> pole		1066689	0					
ANR	1066875	Identifier	self		1066689	0					
ANR	1066876	Identifier	pole		1066689	1					
ANR	1066877	Identifier	i1		1066689	1					
ANR	1066878	Argument	sizeof ( * self -> pole ) * ( self -> pole_count - i1 )		1066689	2					
ANR	1066879	MultiplicativeExpression	sizeof ( * self -> pole ) * ( self -> pole_count - i1 )		1066689	0		*			
ANR	1066880	SizeofExpression	sizeof ( * self -> pole )		1066689	0					
ANR	1066881	Sizeof	sizeof		1066689	0					
ANR	1066882	UnaryOperationExpression	* self -> pole		1066689	1					
ANR	1066883	UnaryOperator	*		1066689	0					
ANR	1066884	PtrMemberAccess	self -> pole		1066689	1					
ANR	1066885	Identifier	self		1066689	0					
ANR	1066886	Identifier	pole		1066689	1					
ANR	1066887	AdditiveExpression	self -> pole_count - i1		1066689	1		-			
ANR	1066888	PtrMemberAccess	self -> pole_count		1066689	0					
ANR	1066889	Identifier	self		1066689	0					
ANR	1066890	Identifier	pole_count		1066689	1					
ANR	1066891	Identifier	i1		1066689	1					
ANR	1066892	ExpressionStatement	self -> contour [ self -> contour_count ] -= s	969:8:40931:40970	1066689	4	True				
ANR	1066893	AssignmentExpression	self -> contour [ self -> contour_count ] -= s		1066689	0		-=			
ANR	1066894	ArrayIndexing	self -> contour [ self -> contour_count ]		1066689	0					
ANR	1066895	PtrMemberAccess	self -> contour		1066689	0					
ANR	1066896	Identifier	self		1066689	0					
ANR	1066897	Identifier	contour		1066689	1					
ANR	1066898	PtrMemberAccess	self -> contour_count		1066689	1					
ANR	1066899	Identifier	self		1066689	0					
ANR	1066900	Identifier	contour_count		1066689	1					
ANR	1066901	Identifier	s		1066689	1					
ANR	1066902	ExpressionStatement	self -> pole_count -= s	970:8:40980:41001	1066689	5	True				
ANR	1066903	AssignmentExpression	self -> pole_count -= s		1066689	0		-=			
ANR	1066904	PtrMemberAccess	self -> pole_count		1066689	0					
ANR	1066905	Identifier	self		1066689	0					
ANR	1066906	Identifier	pole_count		1066689	1					
ANR	1066907	Identifier	s		1066689	1					
ANR	1066908	IfStatement	if ( * pi >= i1 )		1066689	6					
ANR	1066909	Condition	* pi >= i1	971:12:41015:41023	1066689	0	True				
ANR	1066910	RelationalExpression	* pi >= i1		1066689	0		>=			
ANR	1066911	UnaryOperationExpression	* pi		1066689	0					
ANR	1066912	UnaryOperator	*		1066689	0					
ANR	1066913	Identifier	pi		1066689	1					
ANR	1066914	Identifier	i1		1066689	1					
ANR	1066915	ExpressionStatement	* pi -= s	972:12:41038:41046	1066689	1	True				
ANR	1066916	AssignmentExpression	* pi -= s		1066689	0		-=			
ANR	1066917	UnaryOperationExpression	* pi		1066689	0					
ANR	1066918	UnaryOperator	*		1066689	0					
ANR	1066919	Identifier	pi		1066689	1					
ANR	1066920	Identifier	s		1066689	1					
ANR	1066921	ElseStatement	else		1066689	0					
ANR	1066922	IfStatement	if ( i0 <= * pi )		1066689	0					
ANR	1066923	Condition	i0 <= * pi	973:17:41065:41073	1066689	0	True				
ANR	1066924	RelationalExpression	i0 <= * pi		1066689	0		<=			
ANR	1066925	Identifier	i0		1066689	0					
ANR	1066926	UnaryOperationExpression	* pi		1066689	1					
ANR	1066927	UnaryOperator	*		1066689	0					
ANR	1066928	Identifier	pi		1066689	1					
ANR	1066929	ExpressionStatement	* pi = i0	974:12:41088:41096	1066689	1	True				
ANR	1066930	AssignmentExpression	* pi = i0		1066689	0		=			
ANR	1066931	UnaryOperationExpression	* pi		1066689	0					
ANR	1066932	UnaryOperator	*		1066689	0					
ANR	1066933	Identifier	pi		1066689	1					
ANR	1066934	Identifier	i0		1066689	1					
ANR	1066935	ReturnType	static void		1066689	1					
ANR	1066936	Identifier	t1_hinter__compact_flex		1066689	2					
ANR	1066937	ParameterList	"t1_hinter * self , int contour_beg , int contour_end , int i0 , int i1 , int * pi"		1066689	3					
ANR	1066938	Parameter	t1_hinter * self	949:36:39995:40010	1066689	0	True				
ANR	1066939	ParameterType	t1_hinter *		1066689	0					
ANR	1066940	Identifier	self		1066689	1					
ANR	1066941	Parameter	int contour_beg	949:54:40013:40027	1066689	1	True				
ANR	1066942	ParameterType	int		1066689	0					
ANR	1066943	Identifier	contour_beg		1066689	1					
ANR	1066944	Parameter	int contour_end	949:71:40030:40044	1066689	2	True				
ANR	1066945	ParameterType	int		1066689	0					
ANR	1066946	Identifier	contour_end		1066689	1					
ANR	1066947	Parameter	int i0	949:88:40047:40052	1066689	3	True				
ANR	1066948	ParameterType	int		1066689	0					
ANR	1066949	Identifier	i0		1066689	1					
ANR	1066950	Parameter	int i1	949:96:40055:40060	1066689	4	True				
ANR	1066951	ParameterType	int		1066689	0					
ANR	1066952	Identifier	i1		1066689	1					
ANR	1066953	Parameter	int * pi	949:104:40063:40069	1066689	5	True				
ANR	1066954	ParameterType	int *		1066689	0					
ANR	1066955	Identifier	pi		1066689	1					
ANR	1066956	CFGEntryNode	ENTRY		1066689		True				
ANR	1066957	CFGExitNode	EXIT		1066689		True				
ANR	1066958	Symbol	* self -> contour		1066689						
ANR	1066959	Symbol	* self -> pole		1066689						
ANR	1066960	Symbol	self -> contour_count		1066689						
ANR	1066961	Symbol	* * self		1066689						
ANR	1066962	Symbol	self -> pole_count		1066689						
ANR	1066963	Symbol	* self		1066689						
ANR	1066964	Symbol	i0		1066689						
ANR	1066965	Symbol	i1		1066689						
ANR	1066966	Symbol	j		1066689						
ANR	1066967	Symbol	self -> hint_range_count		1066689						
ANR	1066968	Symbol	self -> hint_range		1066689						
ANR	1066969	Symbol	* self -> hint_range		1066689						
ANR	1066970	Symbol	contour_end		1066689						
ANR	1066971	Symbol	self -> contour		1066689						
ANR	1066972	Symbol	s		1066689						
ANR	1066973	Symbol	* j		1066689						
ANR	1066974	Symbol	self -> hint_range [ j ] . end_pole		1066689						
ANR	1066975	Symbol	contour_beg		1066689						
ANR	1066976	Symbol	self -> hint_range [ j ] . beg_pole		1066689						
ANR	1066977	Symbol	self		1066689						
ANR	1066978	Symbol	pi		1066689						
ANR	1066979	Symbol	self -> pole		1066689						
ANR	1066980	Symbol	* pi		1066689						
ANR	1066981	Symbol	* self -> contour_count		1066689						
ANR	1066982	Function	t1_hinter__adjust_stem_hints_by_missed_flex	978:0:41107:42371							
ANR	1066983	FunctionDef	"t1_hinter__adjust_stem_hints_by_missed_flex (t1_hinter * self , t1_glyph_space_coord g0 , t1_glyph_space_coord gm , int k)"		1066982	0					
ANR	1066984	CompoundStatement		980:0:41295:42371	1066982	0					
ANR	1066985	IdentifierDeclStatement	t1_glyph_space_coord gg = g0 ;	992:4:41920:41948	1066982	0	True				
ANR	1066986	IdentifierDecl	gg = g0		1066982	0					
ANR	1066987	IdentifierDeclType	t1_glyph_space_coord		1066982	0					
ANR	1066988	Identifier	gg		1066982	1					
ANR	1066989	AssignmentExpression	gg = g0		1066982	2		=			
ANR	1066990	Identifier	g0		1066982	0					
ANR	1066991	Identifier	g0		1066982	1					
ANR	1066992	IdentifierDeclStatement	int i ;	993:4:41954:41959	1066982	1	True				
ANR	1066993	IdentifierDecl	i		1066982	0					
ANR	1066994	IdentifierDeclType	int		1066982	0					
ANR	1066995	Identifier	i		1066982	1					
ANR	1066996	ExpressionStatement	k = ! k	995:4:41966:41972	1066982	2	True				
ANR	1066997	AssignmentExpression	k = ! k		1066982	0		=			
ANR	1066998	Identifier	k		1066982	0					
ANR	1066999	UnaryOperationExpression	! k		1066982	1					
ANR	1067000	UnaryOperator	!		1066982	0					
ANR	1067001	Identifier	k		1066982	1					
ANR	1067002	IfStatement	if ( gm < g0 )		1066982	3					
ANR	1067003	Condition	gm < g0	996:8:41982:41988	1066982	0	True				
ANR	1067004	RelationalExpression	gm < g0		1066982	0		<			
ANR	1067005	Identifier	gm		1066982	0					
ANR	1067006	Identifier	g0		1066982	1					
ANR	1067007	CompoundStatement		17:17:695:695	1066982	1					
ANR	1067008	ExpressionStatement	g0 ^= gm	997:8:42001:42009	1066982	0	True				
ANR	1067009	AssignmentExpression	g0 ^= gm		1066982	0		^=			
ANR	1067010	Identifier	g0		1066982	0					
ANR	1067011	Identifier	gm		1066982	1					
ANR	1067012	ExpressionStatement	gm ^= g0	997:18:42011:42019	1066982	1	True				
ANR	1067013	AssignmentExpression	gm ^= g0		1066982	0		^=			
ANR	1067014	Identifier	gm		1066982	0					
ANR	1067015	Identifier	g0		1066982	1					
ANR	1067016	ExpressionStatement	g0 ^= gm	997:28:42021:42029	1066982	2	True				
ANR	1067017	AssignmentExpression	g0 ^= gm		1066982	0		^=			
ANR	1067018	Identifier	g0		1066982	0					
ANR	1067019	Identifier	gm		1066982	1					
ANR	1067020	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		1066982	4					
ANR	1067021	ForInit	i = 0 ;	999:9:42046:42051	1066982	0	True				
ANR	1067022	AssignmentExpression	i = 0		1066982	0		=			
ANR	1067023	Identifier	i		1066982	0					
ANR	1067024	PrimaryExpression	0		1066982	1					
ANR	1067025	Condition	i < self -> hint_count	999:16:42053:42072	1066982	1	True				
ANR	1067026	RelationalExpression	i < self -> hint_count		1066982	0		<			
ANR	1067027	Identifier	i		1066982	0					
ANR	1067028	PtrMemberAccess	self -> hint_count		1066982	1					
ANR	1067029	Identifier	self		1066982	0					
ANR	1067030	Identifier	hint_count		1066982	1					
ANR	1067031	PostIncDecOperationExpression	i ++	999:38:42075:42077	1066982	2	True				
ANR	1067032	Identifier	i		1066982	0					
ANR	1067033	IncDec	++		1066982	1					
ANR	1067034	IfStatement	if ( k == ( self -> hint [ i ] . type != hstem ) )		1066982	3					
ANR	1067035	Condition	k == ( self -> hint [ i ] . type != hstem )	1000:12:42092:42125	1066982	0	True				
ANR	1067036	EqualityExpression	k == ( self -> hint [ i ] . type != hstem )		1066982	0		==			
ANR	1067037	Identifier	k		1066982	0					
ANR	1067038	EqualityExpression	self -> hint [ i ] . type != hstem		1066982	1		!=			
ANR	1067039	MemberAccess	self -> hint [ i ] . type		1066982	0					
ANR	1067040	ArrayIndexing	self -> hint [ i ]		1066982	0					
ANR	1067041	PtrMemberAccess	self -> hint		1066982	0					
ANR	1067042	Identifier	self		1066982	0					
ANR	1067043	Identifier	hint		1066982	1					
ANR	1067044	Identifier	i		1066982	1					
ANR	1067045	Identifier	type		1066982	1					
ANR	1067046	Identifier	hstem		1066982	1					
ANR	1067047	CompoundStatement		22:12:846:876	1066982	1					
ANR	1067048	IdentifierDeclStatement	t1_hint * hint = & self -> hint [ i ] ;	1001:12:42142:42172	1066982	0	True				
ANR	1067049	IdentifierDecl	* hint = & self -> hint [ i ]		1066982	0					
ANR	1067050	IdentifierDeclType	t1_hint *		1066982	0					
ANR	1067051	Identifier	hint		1066982	1					
ANR	1067052	AssignmentExpression	* hint = & self -> hint [ i ]		1066982	2		=			
ANR	1067053	Identifier	hint		1066982	0					
ANR	1067054	UnaryOperationExpression	& self -> hint [ i ]		1066982	1					
ANR	1067055	UnaryOperator	&		1066982	0					
ANR	1067056	ArrayIndexing	self -> hint [ i ]		1066982	1					
ANR	1067057	PtrMemberAccess	self -> hint		1066982	0					
ANR	1067058	Identifier	self		1066982	0					
ANR	1067059	Identifier	hint		1066982	1					
ANR	1067060	Identifier	i		1066982	1					
ANR	1067061	IfStatement	if ( g0 <= hint -> g0 && hint -> g0 <= gm )		1066982	1					
ANR	1067062	Condition	g0 <= hint -> g0 && hint -> g0 <= gm	1003:16:42191:42222	1066982	0	True				
ANR	1067063	AndExpression	g0 <= hint -> g0 && hint -> g0 <= gm		1066982	0		&&			
ANR	1067064	RelationalExpression	g0 <= hint -> g0		1066982	0		<=			
ANR	1067065	Identifier	g0		1066982	0					
ANR	1067066	PtrMemberAccess	hint -> g0		1066982	1					
ANR	1067067	Identifier	hint		1066982	0					
ANR	1067068	Identifier	g0		1066982	1					
ANR	1067069	RelationalExpression	hint -> g0 <= gm		1066982	1		<=			
ANR	1067070	PtrMemberAccess	hint -> g0		1066982	0					
ANR	1067071	Identifier	hint		1066982	0					
ANR	1067072	Identifier	g0		1066982	1					
ANR	1067073	Identifier	gm		1066982	1					
ANR	1067074	ExpressionStatement	hint -> g0 = hint -> ag0 = gg	1004:16:42241:42266	1066982	1	True				
ANR	1067075	AssignmentExpression	hint -> g0 = hint -> ag0 = gg		1066982	0		=			
ANR	1067076	PtrMemberAccess	hint -> g0		1066982	0					
ANR	1067077	Identifier	hint		1066982	0					
ANR	1067078	Identifier	g0		1066982	1					
ANR	1067079	AssignmentExpression	hint -> ag0 = gg		1066982	1		=			
ANR	1067080	PtrMemberAccess	hint -> ag0		1066982	0					
ANR	1067081	Identifier	hint		1066982	0					
ANR	1067082	Identifier	ag0		1066982	1					
ANR	1067083	Identifier	gg		1066982	1					
ANR	1067084	IfStatement	if ( g0 <= hint -> g1 && hint -> g1 <= gm )		1066982	2					
ANR	1067085	Condition	g0 <= hint -> g1 && hint -> g1 <= gm	1005:16:42284:42315	1066982	0	True				
ANR	1067086	AndExpression	g0 <= hint -> g1 && hint -> g1 <= gm		1066982	0		&&			
ANR	1067087	RelationalExpression	g0 <= hint -> g1		1066982	0		<=			
ANR	1067088	Identifier	g0		1066982	0					
ANR	1067089	PtrMemberAccess	hint -> g1		1066982	1					
ANR	1067090	Identifier	hint		1066982	0					
ANR	1067091	Identifier	g1		1066982	1					
ANR	1067092	RelationalExpression	hint -> g1 <= gm		1066982	1		<=			
ANR	1067093	PtrMemberAccess	hint -> g1		1066982	0					
ANR	1067094	Identifier	hint		1066982	0					
ANR	1067095	Identifier	g1		1066982	1					
ANR	1067096	Identifier	gm		1066982	1					
ANR	1067097	ExpressionStatement	hint -> g1 = hint -> ag1 = gg	1006:16:42334:42359	1066982	1	True				
ANR	1067098	AssignmentExpression	hint -> g1 = hint -> ag1 = gg		1066982	0		=			
ANR	1067099	PtrMemberAccess	hint -> g1		1066982	0					
ANR	1067100	Identifier	hint		1066982	0					
ANR	1067101	Identifier	g1		1066982	1					
ANR	1067102	AssignmentExpression	hint -> ag1 = gg		1066982	1		=			
ANR	1067103	PtrMemberAccess	hint -> ag1		1066982	0					
ANR	1067104	Identifier	hint		1066982	0					
ANR	1067105	Identifier	ag1		1066982	1					
ANR	1067106	Identifier	gg		1066982	1					
ANR	1067107	ReturnType	static void		1066982	1					
ANR	1067108	Identifier	t1_hinter__adjust_stem_hints_by_missed_flex		1066982	2					
ANR	1067109	ParameterList	"t1_hinter * self , t1_glyph_space_coord g0 , t1_glyph_space_coord gm , int k"		1066982	3					
ANR	1067110	Parameter	t1_hinter * self	978:56:41163:41178	1066982	0	True				
ANR	1067111	ParameterType	t1_hinter *		1066982	0					
ANR	1067112	Identifier	self		1066982	1					
ANR	1067113	Parameter	t1_glyph_space_coord g0	978:74:41181:41203	1066982	1	True				
ANR	1067114	ParameterType	t1_glyph_space_coord		1066982	0					
ANR	1067115	Identifier	g0		1066982	1					
ANR	1067116	Parameter	t1_glyph_space_coord gm	979:57:41263:41285	1066982	2	True				
ANR	1067117	ParameterType	t1_glyph_space_coord		1066982	0					
ANR	1067118	Identifier	gm		1066982	1					
ANR	1067119	Parameter	int k	979:82:41288:41292	1066982	3	True				
ANR	1067120	ParameterType	int		1066982	0					
ANR	1067121	Identifier	k		1066982	1					
ANR	1067122	CFGEntryNode	ENTRY		1066982		True				
ANR	1067123	CFGExitNode	EXIT		1066982		True				
ANR	1067124	Symbol	gg		1066982						
ANR	1067125	Symbol	* hint		1066982						
ANR	1067126	Symbol	self -> hint [ i ] . type		1066982						
ANR	1067127	Symbol	self -> hint		1066982						
ANR	1067128	Symbol	* * self		1066982						
ANR	1067129	Symbol	gm		1066982						
ANR	1067130	Symbol	* self		1066982						
ANR	1067131	Symbol	g0		1066982						
ANR	1067132	Symbol	i		1066982						
ANR	1067133	Symbol	k		1066982						
ANR	1067134	Symbol	hint -> g1		1066982						
ANR	1067135	Symbol	* self -> hint		1066982						
ANR	1067136	Symbol	self -> hint_count		1066982						
ANR	1067137	Symbol	hint -> g0		1066982						
ANR	1067138	Symbol	* i		1066982						
ANR	1067139	Symbol	hint -> ag1		1066982						
ANR	1067140	Symbol	hint		1066982						
ANR	1067141	Symbol	hint -> ag0		1066982						
ANR	1067142	Symbol	self		1066982						
ANR	1067143	Symbol	hstem		1066982						
ANR	1067144	Function	t1_hinter__fix_missed_flex	1010:0:42374:45551							
ANR	1067145	FunctionDef	t1_hinter__fix_missed_flex (t1_hinter * self)		1067144	0					
ANR	1067146	CompoundStatement		1011:0:42431:45551	1067144	0					
ANR	1067147	IdentifierDeclStatement	"int contour_beg , contour_end ;"	1012:4:42437:42465	1067144	0	True				
ANR	1067148	IdentifierDecl	contour_beg		1067144	0					
ANR	1067149	IdentifierDeclType	int		1067144	0					
ANR	1067150	Identifier	contour_beg		1067144	1					
ANR	1067151	IdentifierDecl	contour_end		1067144	1					
ANR	1067152	IdentifierDeclType	int		1067144	0					
ANR	1067153	Identifier	contour_end		1067144	1					
ANR	1067154	IdentifierDeclStatement	"int i , j , k , pj , n , j0 , j1 ;"	1013:4:42471:42497	1067144	1	True				
ANR	1067155	IdentifierDecl	i		1067144	0					
ANR	1067156	IdentifierDeclType	int		1067144	0					
ANR	1067157	Identifier	i		1067144	1					
ANR	1067158	IdentifierDecl	j		1067144	1					
ANR	1067159	IdentifierDeclType	int		1067144	0					
ANR	1067160	Identifier	j		1067144	1					
ANR	1067161	IdentifierDecl	k		1067144	2					
ANR	1067162	IdentifierDeclType	int		1067144	0					
ANR	1067163	Identifier	k		1067144	1					
ANR	1067164	IdentifierDecl	pj		1067144	3					
ANR	1067165	IdentifierDeclType	int		1067144	0					
ANR	1067166	Identifier	pj		1067144	1					
ANR	1067167	IdentifierDecl	n		1067144	4					
ANR	1067168	IdentifierDeclType	int		1067144	0					
ANR	1067169	Identifier	n		1067144	1					
ANR	1067170	IdentifierDecl	j0		1067144	5					
ANR	1067171	IdentifierDeclType	int		1067144	0					
ANR	1067172	Identifier	j0		1067144	1					
ANR	1067173	IdentifierDecl	j1		1067144	6					
ANR	1067174	IdentifierDeclType	int		1067144	0					
ANR	1067175	Identifier	j1		1067144	1					
ANR	1067176	IfStatement	if ( self -> contour_count == 0 )		1067144	2					
ANR	1067177	Condition	self -> contour_count == 0	1015:8:42508:42531	1067144	0	True				
ANR	1067178	EqualityExpression	self -> contour_count == 0		1067144	0		==			
ANR	1067179	PtrMemberAccess	self -> contour_count		1067144	0					
ANR	1067180	Identifier	self		1067144	0					
ANR	1067181	Identifier	contour_count		1067144	1					
ANR	1067182	PrimaryExpression	0		1067144	1					
ANR	1067183	ReturnStatement	return ;	1016:8:42542:42548	1067144	1	True				
ANR	1067184	ExpressionStatement	contour_beg = self -> contour [ self -> contour_count - 1 ]	1017:4:42554:42605	1067144	3	True				
ANR	1067185	AssignmentExpression	contour_beg = self -> contour [ self -> contour_count - 1 ]		1067144	0		=			
ANR	1067186	Identifier	contour_beg		1067144	0					
ANR	1067187	ArrayIndexing	self -> contour [ self -> contour_count - 1 ]		1067144	1					
ANR	1067188	PtrMemberAccess	self -> contour		1067144	0					
ANR	1067189	Identifier	self		1067144	0					
ANR	1067190	Identifier	contour		1067144	1					
ANR	1067191	AdditiveExpression	self -> contour_count - 1		1067144	1		-			
ANR	1067192	PtrMemberAccess	self -> contour_count		1067144	0					
ANR	1067193	Identifier	self		1067144	0					
ANR	1067194	Identifier	contour_count		1067144	1					
ANR	1067195	PrimaryExpression	1		1067144	1					
ANR	1067196	ExpressionStatement	contour_end = self -> pole_count - 1	1018:4:42611:42645	1067144	4	True				
ANR	1067197	AssignmentExpression	contour_end = self -> pole_count - 1		1067144	0		=			
ANR	1067198	Identifier	contour_end		1067144	0					
ANR	1067199	AdditiveExpression	self -> pole_count - 1		1067144	1		-			
ANR	1067200	PtrMemberAccess	self -> pole_count		1067144	0					
ANR	1067201	Identifier	self		1067144	0					
ANR	1067202	Identifier	pole_count		1067144	1					
ANR	1067203	PrimaryExpression	1		1067144	1					
ANR	1067204	IfStatement	if ( contour_beg + 8 >= contour_end )		1067144	5					
ANR	1067205	Condition	contour_beg + 8 >= contour_end	1019:8:42693:42722	1067144	0	True				
ANR	1067206	RelationalExpression	contour_beg + 8 >= contour_end		1067144	0		>=			
ANR	1067207	AdditiveExpression	contour_beg + 8		1067144	0		+			
ANR	1067208	Identifier	contour_beg		1067144	0					
ANR	1067209	PrimaryExpression	8		1067144	1					
ANR	1067210	Identifier	contour_end		1067144	1					
ANR	1067211	ReturnStatement	return ;	1020:8:42733:42739	1067144	1	True				
ANR	1067212	ForStatement	for ( k = 0 ; k < 2 ; k ++ )		1067144	6					
ANR	1067213	ForInit	k = 0 ;	1021:9:42750:42755	1067144	0	True				
ANR	1067214	AssignmentExpression	k = 0		1067144	0		=			
ANR	1067215	Identifier	k		1067144	0					
ANR	1067216	PrimaryExpression	0		1067144	1					
ANR	1067217	Condition	k < 2	1021:16:42757:42761	1067144	1	True				
ANR	1067218	RelationalExpression	k < 2		1067144	0		<			
ANR	1067219	Identifier	k		1067144	0					
ANR	1067220	PrimaryExpression	2		1067144	1					
ANR	1067221	PostIncDecOperationExpression	k ++	1021:23:42764:42766	1067144	2	True				
ANR	1067222	Identifier	k		1067144	0					
ANR	1067223	IncDec	++		1067144	1					
ANR	1067224	CompoundStatement		20:8:872:892	1067144	3					
ANR	1067225	IdentifierDeclStatement	t1_glyph_space_coord * p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy ) ;	1022:8:42779:42852	1067144	0	True				
ANR	1067226	IdentifierDecl	* p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy )		1067144	0					
ANR	1067227	IdentifierDeclType	t1_glyph_space_coord *		1067144	0					
ANR	1067228	Identifier	p_gc		1067144	1					
ANR	1067229	AssignmentExpression	* p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy )		1067144	2		=			
ANR	1067230	Identifier	p_gc		1067144	0					
ANR	1067231	ConditionalExpression	! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy		1067144	1					
ANR	1067232	Condition	! k		1067144	0					
ANR	1067233	UnaryOperationExpression	! k		1067144	0					
ANR	1067234	UnaryOperator	!		1067144	0					
ANR	1067235	Identifier	k		1067144	1					
ANR	1067236	UnaryOperationExpression	& self -> pole [ 0 ] . gx		1067144	1					
ANR	1067237	UnaryOperator	&		1067144	0					
ANR	1067238	MemberAccess	self -> pole [ 0 ] . gx		1067144	1					
ANR	1067239	ArrayIndexing	self -> pole [ 0 ]		1067144	0					
ANR	1067240	PtrMemberAccess	self -> pole		1067144	0					
ANR	1067241	Identifier	self		1067144	0					
ANR	1067242	Identifier	pole		1067144	1					
ANR	1067243	PrimaryExpression	0		1067144	1					
ANR	1067244	Identifier	gx		1067144	1					
ANR	1067245	UnaryOperationExpression	& self -> pole [ 0 ] . gy		1067144	2					
ANR	1067246	UnaryOperator	&		1067144	0					
ANR	1067247	MemberAccess	self -> pole [ 0 ] . gy		1067144	1					
ANR	1067248	ArrayIndexing	self -> pole [ 0 ]		1067144	0					
ANR	1067249	PtrMemberAccess	self -> pole		1067144	0					
ANR	1067250	Identifier	self		1067144	0					
ANR	1067251	Identifier	pole		1067144	1					
ANR	1067252	PrimaryExpression	0		1067144	1					
ANR	1067253	Identifier	gy		1067144	1					
ANR	1067254	IdentifierDeclStatement	t1_glyph_space_coord * p_gd = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx ) ;	1023:8:42862:42935	1067144	1	True				
ANR	1067255	IdentifierDecl	* p_gd = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx )		1067144	0					
ANR	1067256	IdentifierDeclType	t1_glyph_space_coord *		1067144	0					
ANR	1067257	Identifier	p_gd		1067144	1					
ANR	1067258	AssignmentExpression	* p_gd = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx )		1067144	2		=			
ANR	1067259	Identifier	p_gd		1067144	0					
ANR	1067260	ConditionalExpression	! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx		1067144	1					
ANR	1067261	Condition	! k		1067144	0					
ANR	1067262	UnaryOperationExpression	! k		1067144	0					
ANR	1067263	UnaryOperator	!		1067144	0					
ANR	1067264	Identifier	k		1067144	1					
ANR	1067265	UnaryOperationExpression	& self -> pole [ 0 ] . gy		1067144	1					
ANR	1067266	UnaryOperator	&		1067144	0					
ANR	1067267	MemberAccess	self -> pole [ 0 ] . gy		1067144	1					
ANR	1067268	ArrayIndexing	self -> pole [ 0 ]		1067144	0					
ANR	1067269	PtrMemberAccess	self -> pole		1067144	0					
ANR	1067270	Identifier	self		1067144	0					
ANR	1067271	Identifier	pole		1067144	1					
ANR	1067272	PrimaryExpression	0		1067144	1					
ANR	1067273	Identifier	gy		1067144	1					
ANR	1067274	UnaryOperationExpression	& self -> pole [ 0 ] . gx		1067144	2					
ANR	1067275	UnaryOperator	&		1067144	0					
ANR	1067276	MemberAccess	self -> pole [ 0 ] . gx		1067144	1					
ANR	1067277	ArrayIndexing	self -> pole [ 0 ]		1067144	0					
ANR	1067278	PtrMemberAccess	self -> pole		1067144	0					
ANR	1067279	Identifier	self		1067144	0					
ANR	1067280	Identifier	pole		1067144	1					
ANR	1067281	PrimaryExpression	0		1067144	1					
ANR	1067282	Identifier	gx		1067144	1					
ANR	1067283	IdentifierDeclStatement	int offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ] ;	1024:8:42945:42998	1067144	2	True				
ANR	1067284	IdentifierDecl	offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		1067144	0					
ANR	1067285	IdentifierDeclType	int		1067144	0					
ANR	1067286	Identifier	offset_gc		1067144	1					
ANR	1067287	AssignmentExpression	offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		1067144	2		=			
ANR	1067288	Identifier	offset_gc		1067144	0					
ANR	1067289	AdditiveExpression	( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		1067144	1		-			
ANR	1067290	CastExpression	( char * ) p_gc		1067144	0					
ANR	1067291	CastTarget	char *		1067144	0					
ANR	1067292	Identifier	p_gc		1067144	1					
ANR	1067293	CastExpression	( char * ) & self -> pole [ 0 ]		1067144	1					
ANR	1067294	CastTarget	char *		1067144	0					
ANR	1067295	UnaryOperationExpression	& self -> pole [ 0 ]		1067144	1					
ANR	1067296	UnaryOperator	&		1067144	0					
ANR	1067297	ArrayIndexing	self -> pole [ 0 ]		1067144	1					
ANR	1067298	PtrMemberAccess	self -> pole		1067144	0					
ANR	1067299	Identifier	self		1067144	0					
ANR	1067300	Identifier	pole		1067144	1					
ANR	1067301	PrimaryExpression	0		1067144	1					
ANR	1067302	IdentifierDeclStatement	int offset_gd = ( char * ) p_gd - ( char * ) & self -> pole [ 0 ] ;	1025:8:43008:43061	1067144	3	True				
ANR	1067303	IdentifierDecl	offset_gd = ( char * ) p_gd - ( char * ) & self -> pole [ 0 ]		1067144	0					
ANR	1067304	IdentifierDeclType	int		1067144	0					
ANR	1067305	Identifier	offset_gd		1067144	1					
ANR	1067306	AssignmentExpression	offset_gd = ( char * ) p_gd - ( char * ) & self -> pole [ 0 ]		1067144	2		=			
ANR	1067307	Identifier	offset_gd		1067144	0					
ANR	1067308	AdditiveExpression	( char * ) p_gd - ( char * ) & self -> pole [ 0 ]		1067144	1		-			
ANR	1067309	CastExpression	( char * ) p_gd		1067144	0					
ANR	1067310	CastTarget	char *		1067144	0					
ANR	1067311	Identifier	p_gd		1067144	1					
ANR	1067312	CastExpression	( char * ) & self -> pole [ 0 ]		1067144	1					
ANR	1067313	CastTarget	char *		1067144	0					
ANR	1067314	UnaryOperationExpression	& self -> pole [ 0 ]		1067144	1					
ANR	1067315	UnaryOperator	&		1067144	0					
ANR	1067316	ArrayIndexing	self -> pole [ 0 ]		1067144	1					
ANR	1067317	PtrMemberAccess	self -> pole		1067144	0					
ANR	1067318	Identifier	self		1067144	0					
ANR	1067319	Identifier	pole		1067144	1					
ANR	1067320	PrimaryExpression	0		1067144	1					
ANR	1067321	IdentifierDeclStatement	t1_glyph_space_coord pixel_g = ( ! k ? self -> pixel_gw : self -> pixel_gh ) ;	1026:8:43071:43140	1067144	4	True				
ANR	1067322	IdentifierDecl	pixel_g = ( ! k ? self -> pixel_gw : self -> pixel_gh )		1067144	0					
ANR	1067323	IdentifierDeclType	t1_glyph_space_coord		1067144	0					
ANR	1067324	Identifier	pixel_g		1067144	1					
ANR	1067325	AssignmentExpression	pixel_g = ( ! k ? self -> pixel_gw : self -> pixel_gh )		1067144	2		=			
ANR	1067326	Identifier	pixel_g		1067144	0					
ANR	1067327	ConditionalExpression	! k ? self -> pixel_gw : self -> pixel_gh		1067144	1					
ANR	1067328	Condition	! k		1067144	0					
ANR	1067329	UnaryOperationExpression	! k		1067144	0					
ANR	1067330	UnaryOperator	!		1067144	0					
ANR	1067331	Identifier	k		1067144	1					
ANR	1067332	PtrMemberAccess	self -> pixel_gw		1067144	1					
ANR	1067333	Identifier	self		1067144	0					
ANR	1067334	Identifier	pixel_gw		1067144	1					
ANR	1067335	PtrMemberAccess	self -> pixel_gh		1067144	2					
ANR	1067336	Identifier	self		1067144	0					
ANR	1067337	Identifier	pixel_gh		1067144	1					
ANR	1067338	IdentifierDeclStatement	t1_glyph_space_coord threshold = pixel_g * 5 / 10 ;	1027:8:43150:43199	1067144	5	True				
ANR	1067339	IdentifierDecl	threshold = pixel_g * 5 / 10		1067144	0					
ANR	1067340	IdentifierDeclType	t1_glyph_space_coord		1067144	0					
ANR	1067341	Identifier	threshold		1067144	1					
ANR	1067342	AssignmentExpression	threshold = pixel_g * 5 / 10		1067144	2		=			
ANR	1067343	Identifier	threshold		1067144	0					
ANR	1067344	MultiplicativeExpression	pixel_g * 5 / 10		1067144	1		*			
ANR	1067345	Identifier	pixel_g		1067144	0					
ANR	1067346	MultiplicativeExpression	5 / 10		1067144	1		/			
ANR	1067347	PrimaryExpression	5		1067144	0					
ANR	1067348	PrimaryExpression	10		1067144	1					
ANR	1067349	IdentifierDeclStatement	"t1_glyph_space_coord gc0 , gc1 , gc , gcj , gd = 0 , ge , gm ;"	1028:8:43209:43263	1067144	6	True				
ANR	1067350	IdentifierDecl	gc0		1067144	0					
ANR	1067351	IdentifierDeclType	t1_glyph_space_coord		1067144	0					
ANR	1067352	Identifier	gc0		1067144	1					
ANR	1067353	IdentifierDecl	gc1		1067144	1					
ANR	1067354	IdentifierDeclType	t1_glyph_space_coord		1067144	0					
ANR	1067355	Identifier	gc1		1067144	1					
ANR	1067356	IdentifierDecl	gc		1067144	2					
ANR	1067357	IdentifierDeclType	t1_glyph_space_coord		1067144	0					
ANR	1067358	Identifier	gc		1067144	1					
ANR	1067359	IdentifierDecl	gcj		1067144	3					
ANR	1067360	IdentifierDeclType	t1_glyph_space_coord		1067144	0					
ANR	1067361	Identifier	gcj		1067144	1					
ANR	1067362	IdentifierDecl	gd = 0		1067144	4					
ANR	1067363	IdentifierDeclType	t1_glyph_space_coord		1067144	0					
ANR	1067364	Identifier	gd		1067144	1					
ANR	1067365	AssignmentExpression	gd = 0		1067144	2		=			
ANR	1067366	Identifier	gd		1067144	0					
ANR	1067367	PrimaryExpression	0		1067144	1					
ANR	1067368	IdentifierDecl	ge		1067144	5					
ANR	1067369	IdentifierDeclType	t1_glyph_space_coord		1067144	0					
ANR	1067370	Identifier	ge		1067144	1					
ANR	1067371	IdentifierDecl	gm		1067144	6					
ANR	1067372	IdentifierDeclType	t1_glyph_space_coord		1067144	0					
ANR	1067373	Identifier	gm		1067144	1					
ANR	1067374	IdentifierDeclStatement	"int dir = 0 , prev_dir ;"	1029:8:43273:43294	1067144	7	True				
ANR	1067375	IdentifierDecl	dir = 0		1067144	0					
ANR	1067376	IdentifierDeclType	int		1067144	0					
ANR	1067377	Identifier	dir		1067144	1					
ANR	1067378	AssignmentExpression	dir = 0		1067144	2		=			
ANR	1067379	Identifier	dir		1067144	0					
ANR	1067380	PrimaryExpression	0		1067144	1					
ANR	1067381	IdentifierDecl	prev_dir		1067144	1					
ANR	1067382	IdentifierDeclType	int		1067144	0					
ANR	1067383	Identifier	prev_dir		1067144	1					
ANR	1067384	IdentifierDeclStatement	bool wrapped = false ;	1030:8:43304:43324	1067144	8	True				
ANR	1067385	IdentifierDecl	wrapped = false		1067144	0					
ANR	1067386	IdentifierDeclType	bool		1067144	0					
ANR	1067387	Identifier	wrapped		1067144	1					
ANR	1067388	AssignmentExpression	wrapped = false		1067144	2		=			
ANR	1067389	Identifier	false		1067144	0					
ANR	1067390	Identifier	false		1067144	1					
ANR	1067391	ExpressionStatement	"gc = * member_prt ( t1_glyph_space_coord , & self -> pole [ contour_beg ] , offset_gc )"	1032:8:43335:43410	1067144	9	True				
ANR	1067392	AssignmentExpression	"gc = * member_prt ( t1_glyph_space_coord , & self -> pole [ contour_beg ] , offset_gc )"		1067144	0		=			
ANR	1067393	Identifier	gc		1067144	0					
ANR	1067394	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ contour_beg ] , offset_gc )"		1067144	1					
ANR	1067395	UnaryOperator	*		1067144	0					
ANR	1067396	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ contour_beg ] , offset_gc )"		1067144	1					
ANR	1067397	Callee	member_prt		1067144	0					
ANR	1067398	Identifier	member_prt		1067144	0					
ANR	1067399	ArgumentList	t1_glyph_space_coord		1067144	1					
ANR	1067400	Argument	t1_glyph_space_coord		1067144	0					
ANR	1067401	Identifier	t1_glyph_space_coord		1067144	0					
ANR	1067402	Argument	& self -> pole [ contour_beg ]		1067144	1					
ANR	1067403	UnaryOperationExpression	& self -> pole [ contour_beg ]		1067144	0					
ANR	1067404	UnaryOperator	&		1067144	0					
ANR	1067405	ArrayIndexing	self -> pole [ contour_beg ]		1067144	1					
ANR	1067406	PtrMemberAccess	self -> pole		1067144	0					
ANR	1067407	Identifier	self		1067144	0					
ANR	1067408	Identifier	pole		1067144	1					
ANR	1067409	Identifier	contour_beg		1067144	1					
ANR	1067410	Argument	offset_gc		1067144	2					
ANR	1067411	Identifier	offset_gc		1067144	0					
ANR	1067412	ExpressionStatement	gc0 = gc - threshold	1033:8:43420:43440	1067144	10	True				
ANR	1067413	AssignmentExpression	gc0 = gc - threshold		1067144	0		=			
ANR	1067414	Identifier	gc0		1067144	0					
ANR	1067415	AdditiveExpression	gc - threshold		1067144	1		-			
ANR	1067416	Identifier	gc		1067144	0					
ANR	1067417	Identifier	threshold		1067144	1					
ANR	1067418	ExpressionStatement	gc1 = gc + threshold	1034:8:43450:43470	1067144	11	True				
ANR	1067419	AssignmentExpression	gc1 = gc + threshold		1067144	0		=			
ANR	1067420	Identifier	gc1		1067144	0					
ANR	1067421	AdditiveExpression	gc + threshold		1067144	1		+			
ANR	1067422	Identifier	gc		1067144	0					
ANR	1067423	Identifier	threshold		1067144	1					
ANR	1067424	ForStatement	for ( i = contour_end ; i > contour_beg ; i -- )		1067144	12					
ANR	1067425	ForInit	i = contour_end ;	1036:13:43536:43551	1067144	0	True				
ANR	1067426	AssignmentExpression	i = contour_end		1067144	0		=			
ANR	1067427	Identifier	i		1067144	0					
ANR	1067428	Identifier	contour_end		1067144	1					
ANR	1067429	Condition	i > contour_beg	1036:30:43553:43567	1067144	1	True				
ANR	1067430	RelationalExpression	i > contour_beg		1067144	0		>			
ANR	1067431	Identifier	i		1067144	0					
ANR	1067432	Identifier	contour_beg		1067144	1					
ANR	1067433	PostIncDecOperationExpression	i --	1036:47:43570:43572	1067144	2	True				
ANR	1067434	Identifier	i		1067144	0					
ANR	1067435	IncDec	--		1067144	1					
ANR	1067436	CompoundStatement		26:52:1143:1143	1067144	3					
ANR	1067437	ExpressionStatement	"gcj = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"	1037:12:43589:43655	1067144	0	True				
ANR	1067438	AssignmentExpression	"gcj = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		1067144	0		=			
ANR	1067439	Identifier	gcj		1067144	0					
ANR	1067440	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		1067144	1					
ANR	1067441	UnaryOperator	*		1067144	0					
ANR	1067442	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		1067144	1					
ANR	1067443	Callee	member_prt		1067144	0					
ANR	1067444	Identifier	member_prt		1067144	0					
ANR	1067445	ArgumentList	t1_glyph_space_coord		1067144	1					
ANR	1067446	Argument	t1_glyph_space_coord		1067144	0					
ANR	1067447	Identifier	t1_glyph_space_coord		1067144	0					
ANR	1067448	Argument	& self -> pole [ i ]		1067144	1					
ANR	1067449	UnaryOperationExpression	& self -> pole [ i ]		1067144	0					
ANR	1067450	UnaryOperator	&		1067144	0					
ANR	1067451	ArrayIndexing	self -> pole [ i ]		1067144	1					
ANR	1067452	PtrMemberAccess	self -> pole		1067144	0					
ANR	1067453	Identifier	self		1067144	0					
ANR	1067454	Identifier	pole		1067144	1					
ANR	1067455	Identifier	i		1067144	1					
ANR	1067456	Argument	offset_gc		1067144	2					
ANR	1067457	Identifier	offset_gc		1067144	0					
ANR	1067458	IfStatement	if ( self -> pole [ i ] . type == offcurve )		1067144	1					
ANR	1067459	Condition	self -> pole [ i ] . type == offcurve	1038:16:43673:43702	1067144	0	True				
ANR	1067460	EqualityExpression	self -> pole [ i ] . type == offcurve		1067144	0		==			
ANR	1067461	MemberAccess	self -> pole [ i ] . type		1067144	0					
ANR	1067462	ArrayIndexing	self -> pole [ i ]		1067144	0					
ANR	1067463	PtrMemberAccess	self -> pole		1067144	0					
ANR	1067464	Identifier	self		1067144	0					
ANR	1067465	Identifier	pole		1067144	1					
ANR	1067466	Identifier	i		1067144	1					
ANR	1067467	Identifier	type		1067144	1					
ANR	1067468	Identifier	offcurve		1067144	1					
ANR	1067469	ContinueStatement	continue ;	1039:16:43721:43729	1067144	1	True				
ANR	1067470	IfStatement	if ( gcj < gc0 || gcj > gc1 )		1067144	2					
ANR	1067471	Condition	gcj < gc0 || gcj > gc1	1040:16:43747:43768	1067144	0	True				
ANR	1067472	OrExpression	gcj < gc0 || gcj > gc1		1067144	0		||			
ANR	1067473	RelationalExpression	gcj < gc0		1067144	0		<			
ANR	1067474	Identifier	gcj		1067144	0					
ANR	1067475	Identifier	gc0		1067144	1					
ANR	1067476	RelationalExpression	gcj > gc1		1067144	1		>			
ANR	1067477	Identifier	gcj		1067144	0					
ANR	1067478	Identifier	gc1		1067144	1					
ANR	1067479	BreakStatement	break ;	1041:16:43787:43792	1067144	1	True				
ANR	1067480	IfStatement	if ( i == contour_end )		1067144	13					
ANR	1067481	Condition	i == contour_end	1043:12:43816:43831	1067144	0	True				
ANR	1067482	EqualityExpression	i == contour_end		1067144	0		==			
ANR	1067483	Identifier	i		1067144	0					
ANR	1067484	Identifier	contour_end		1067144	1					
ANR	1067485	CompoundStatement		33:30:1402:1402	1067144	1					
ANR	1067486	ExpressionStatement	i = contour_beg	1044:12:43848:43863	1067144	0	True				
ANR	1067487	AssignmentExpression	i = contour_beg		1067144	0		=			
ANR	1067488	Identifier	i		1067144	0					
ANR	1067489	Identifier	contour_beg		1067144	1					
ANR	1067490	ExpressionStatement	wrapped = true	1045:12:43877:43891	1067144	1	True				
ANR	1067491	AssignmentExpression	wrapped = true		1067144	0		=			
ANR	1067492	Identifier	wrapped		1067144	0					
ANR	1067493	Identifier	true		1067144	1					
ANR	1067494	ElseStatement	else		1067144	0					
ANR	1067495	ExpressionStatement	i ++	1047:12:43920:43923	1067144	0	True				
ANR	1067496	PostIncDecOperationExpression	i ++		1067144	0					
ANR	1067497	Identifier	i		1067144	0					
ANR	1067498	IncDec	++		1067144	1					
ANR	1067499	ForStatement	for ( ; ; i ++ )		1067144	14					
ANR	1067500	PostIncDecOperationExpression	i ++	1049:15:43986:43988	1067144	0	True				
ANR	1067501	Identifier	i		1067144	0					
ANR	1067502	IncDec	++		1067144	1					
ANR	1067503	CompoundStatement		39:20:1559:1559	1067144	1					
ANR	1067504	ExpressionStatement	prev_dir = 0	1050:12:44005:44017	1067144	0	True				
ANR	1067505	AssignmentExpression	prev_dir = 0		1067144	0		=			
ANR	1067506	Identifier	prev_dir		1067144	0					
ANR	1067507	PrimaryExpression	0		1067144	1					
ANR	1067508	IfStatement	if ( i == contour_end )		1067144	1					
ANR	1067509	Condition	i == contour_end	1051:16:44035:44050	1067144	0	True				
ANR	1067510	EqualityExpression	i == contour_end		1067144	0		==			
ANR	1067511	Identifier	i		1067144	0					
ANR	1067512	Identifier	contour_end		1067144	1					
ANR	1067513	CompoundStatement		41:34:1621:1621	1067144	1					
ANR	1067514	IfStatement	if ( wrapped )		1067144	0					
ANR	1067515	Condition	wrapped	1052:20:44075:44081	1067144	0	True				
ANR	1067516	Identifier	wrapped		1067144	0					
ANR	1067517	BreakStatement	break ;	1053:20:44104:44109	1067144	1	True				
ANR	1067518	ExpressionStatement	wrapped = true	1054:16:44127:44141	1067144	1	True				
ANR	1067519	AssignmentExpression	wrapped = true		1067144	0		=			
ANR	1067520	Identifier	wrapped		1067144	0					
ANR	1067521	Identifier	true		1067144	1					
ANR	1067522	ExpressionStatement	i = contour_beg	1055:16:44159:44174	1067144	2	True				
ANR	1067523	AssignmentExpression	i = contour_beg		1067144	0		=			
ANR	1067524	Identifier	i		1067144	0					
ANR	1067525	Identifier	contour_beg		1067144	1					
ANR	1067526	ExpressionStatement	"gc = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"	1057:12:44202:44267	1067144	2	True				
ANR	1067527	AssignmentExpression	"gc = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		1067144	0		=			
ANR	1067528	Identifier	gc		1067144	0					
ANR	1067529	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		1067144	1					
ANR	1067530	UnaryOperator	*		1067144	0					
ANR	1067531	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		1067144	1					
ANR	1067532	Callee	member_prt		1067144	0					
ANR	1067533	Identifier	member_prt		1067144	0					
ANR	1067534	ArgumentList	t1_glyph_space_coord		1067144	1					
ANR	1067535	Argument	t1_glyph_space_coord		1067144	0					
ANR	1067536	Identifier	t1_glyph_space_coord		1067144	0					
ANR	1067537	Argument	& self -> pole [ i ]		1067144	1					
ANR	1067538	UnaryOperationExpression	& self -> pole [ i ]		1067144	0					
ANR	1067539	UnaryOperator	&		1067144	0					
ANR	1067540	ArrayIndexing	self -> pole [ i ]		1067144	1					
ANR	1067541	PtrMemberAccess	self -> pole		1067144	0					
ANR	1067542	Identifier	self		1067144	0					
ANR	1067543	Identifier	pole		1067144	1					
ANR	1067544	Identifier	i		1067144	1					
ANR	1067545	Argument	offset_gc		1067144	2					
ANR	1067546	Identifier	offset_gc		1067144	0					
ANR	1067547	ExpressionStatement	"ge = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"	1058:12:44281:44346	1067144	3	True				
ANR	1067548	AssignmentExpression	"ge = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		1067144	0		=			
ANR	1067549	Identifier	ge		1067144	0					
ANR	1067550	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		1067144	1					
ANR	1067551	UnaryOperator	*		1067144	0					
ANR	1067552	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		1067144	1					
ANR	1067553	Callee	member_prt		1067144	0					
ANR	1067554	Identifier	member_prt		1067144	0					
ANR	1067555	ArgumentList	t1_glyph_space_coord		1067144	1					
ANR	1067556	Argument	t1_glyph_space_coord		1067144	0					
ANR	1067557	Identifier	t1_glyph_space_coord		1067144	0					
ANR	1067558	Argument	& self -> pole [ i ]		1067144	1					
ANR	1067559	UnaryOperationExpression	& self -> pole [ i ]		1067144	0					
ANR	1067560	UnaryOperator	&		1067144	0					
ANR	1067561	ArrayIndexing	self -> pole [ i ]		1067144	1					
ANR	1067562	PtrMemberAccess	self -> pole		1067144	0					
ANR	1067563	Identifier	self		1067144	0					
ANR	1067564	Identifier	pole		1067144	1					
ANR	1067565	Identifier	i		1067144	1					
ANR	1067566	Argument	offset_gd		1067144	2					
ANR	1067567	Identifier	offset_gd		1067144	0					
ANR	1067568	ExpressionStatement	gc0 = gc - threshold	1059:12:44360:44380	1067144	4	True				
ANR	1067569	AssignmentExpression	gc0 = gc - threshold		1067144	0		=			
ANR	1067570	Identifier	gc0		1067144	0					
ANR	1067571	AdditiveExpression	gc - threshold		1067144	1		-			
ANR	1067572	Identifier	gc		1067144	0					
ANR	1067573	Identifier	threshold		1067144	1					
ANR	1067574	ExpressionStatement	gc1 = gc + threshold	1060:12:44394:44414	1067144	5	True				
ANR	1067575	AssignmentExpression	gc1 = gc + threshold		1067144	0		=			
ANR	1067576	Identifier	gc1		1067144	0					
ANR	1067577	AdditiveExpression	gc + threshold		1067144	1		+			
ANR	1067578	Identifier	gc		1067144	0					
ANR	1067579	Identifier	threshold		1067144	1					
ANR	1067580	ForStatement	"for ( pj = i , j = i + 1 , n = 0 ; ; pj = j , j ++ , n ++ )"		1067144	6					
ANR	1067581	ForInit	"pj = i , j = i + 1 , n = 0 ;"	1061:17:44433:44457	1067144	0	True				
ANR	1067582	Expression	"pj = i , j = i + 1 , n = 0"		1067144	0					
ANR	1067583	AssignmentExpression	pj = i		1067144	0		=			
ANR	1067584	Identifier	pj		1067144	0					
ANR	1067585	Identifier	i		1067144	1					
ANR	1067586	Expression	"j = i + 1 , n = 0"		1067144	1					
ANR	1067587	AssignmentExpression	j = i + 1		1067144	0		=			
ANR	1067588	Identifier	j		1067144	0					
ANR	1067589	AdditiveExpression	i + 1		1067144	1		+			
ANR	1067590	Identifier	i		1067144	0					
ANR	1067591	PrimaryExpression	1		1067144	1					
ANR	1067592	AssignmentExpression	n = 0		1067144	1		=			
ANR	1067593	Identifier	n		1067144	0					
ANR	1067594	PrimaryExpression	0		1067144	1					
ANR	1067595	Expression	"pj = j , j ++ , n ++"	1061:45:44461:44476	1067144	1	True				
ANR	1067596	AssignmentExpression	pj = j		1067144	0		=			
ANR	1067597	Identifier	pj		1067144	0					
ANR	1067598	Identifier	j		1067144	1					
ANR	1067599	Expression	"j ++ , n ++"		1067144	1					
ANR	1067600	PostIncDecOperationExpression	j ++		1067144	0					
ANR	1067601	Identifier	j		1067144	0					
ANR	1067602	IncDec	++		1067144	1					
ANR	1067603	PostIncDecOperationExpression	n ++		1067144	1					
ANR	1067604	Identifier	n		1067144	0					
ANR	1067605	IncDec	++		1067144	1					
ANR	1067606	CompoundStatement		51:63:2047:2047	1067144	2					
ANR	1067607	IfStatement	if ( j == contour_end )		1067144	0					
ANR	1067608	Condition	j == contour_end	1062:20:44501:44516	1067144	0	True				
ANR	1067609	EqualityExpression	j == contour_end		1067144	0		==			
ANR	1067610	Identifier	j		1067144	0					
ANR	1067611	Identifier	contour_end		1067144	1					
ANR	1067612	ExpressionStatement	j = contour_beg	1063:20:44539:44554	1067144	1	True				
ANR	1067613	AssignmentExpression	j = contour_beg		1067144	0		=			
ANR	1067614	Identifier	j		1067144	0					
ANR	1067615	Identifier	contour_beg		1067144	1					
ANR	1067616	IfStatement	if ( j == i )		1067144	1					
ANR	1067617	Condition	j == i	1064:20:44576:44581	1067144	0	True				
ANR	1067618	EqualityExpression	j == i		1067144	0		==			
ANR	1067619	Identifier	j		1067144	0					
ANR	1067620	Identifier	i		1067144	1					
ANR	1067621	BreakStatement	break ;	1065:20:44604:44609	1067144	1	True				
ANR	1067622	IfStatement	if ( self -> pole [ j ] . type == offcurve )		1067144	2					
ANR	1067623	Condition	self -> pole [ j ] . type == offcurve	1066:20:44657:44686	1067144	0	True				
ANR	1067624	EqualityExpression	self -> pole [ j ] . type == offcurve		1067144	0		==			
ANR	1067625	MemberAccess	self -> pole [ j ] . type		1067144	0					
ANR	1067626	ArrayIndexing	self -> pole [ j ]		1067144	0					
ANR	1067627	PtrMemberAccess	self -> pole		1067144	0					
ANR	1067628	Identifier	self		1067144	0					
ANR	1067629	Identifier	pole		1067144	1					
ANR	1067630	Identifier	j		1067144	1					
ANR	1067631	Identifier	type		1067144	1					
ANR	1067632	Identifier	offcurve		1067144	1					
ANR	1067633	ContinueStatement	continue ;	1067:20:44709:44717	1067144	1	True				
ANR	1067634	ExpressionStatement	"gcj = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"	1068:16:44735:44801	1067144	3	True				
ANR	1067635	AssignmentExpression	"gcj = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1067144	0		=			
ANR	1067636	Identifier	gcj		1067144	0					
ANR	1067637	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1067144	1					
ANR	1067638	UnaryOperator	*		1067144	0					
ANR	1067639	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1067144	1					
ANR	1067640	Callee	member_prt		1067144	0					
ANR	1067641	Identifier	member_prt		1067144	0					
ANR	1067642	ArgumentList	t1_glyph_space_coord		1067144	1					
ANR	1067643	Argument	t1_glyph_space_coord		1067144	0					
ANR	1067644	Identifier	t1_glyph_space_coord		1067144	0					
ANR	1067645	Argument	& self -> pole [ j ]		1067144	1					
ANR	1067646	UnaryOperationExpression	& self -> pole [ j ]		1067144	0					
ANR	1067647	UnaryOperator	&		1067144	0					
ANR	1067648	ArrayIndexing	self -> pole [ j ]		1067144	1					
ANR	1067649	PtrMemberAccess	self -> pole		1067144	0					
ANR	1067650	Identifier	self		1067144	0					
ANR	1067651	Identifier	pole		1067144	1					
ANR	1067652	Identifier	j		1067144	1					
ANR	1067653	Argument	offset_gc		1067144	2					
ANR	1067654	Identifier	offset_gc		1067144	0					
ANR	1067655	IfStatement	if ( gcj < gc0 || gcj > gc1 )		1067144	4					
ANR	1067656	Condition	gcj < gc0 || gcj > gc1	1069:20:44823:44844	1067144	0	True				
ANR	1067657	OrExpression	gcj < gc0 || gcj > gc1		1067144	0		||			
ANR	1067658	RelationalExpression	gcj < gc0		1067144	0		<			
ANR	1067659	Identifier	gcj		1067144	0					
ANR	1067660	Identifier	gc0		1067144	1					
ANR	1067661	RelationalExpression	gcj > gc1		1067144	1		>			
ANR	1067662	Identifier	gcj		1067144	0					
ANR	1067663	Identifier	gc1		1067144	1					
ANR	1067664	BreakStatement	break ;	1070:20:44867:44872	1067144	1	True				
ANR	1067665	ExpressionStatement	"gd = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"	1071:16:44890:44955	1067144	5	True				
ANR	1067666	AssignmentExpression	"gd = * member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		1067144	0		=			
ANR	1067667	Identifier	gd		1067144	0					
ANR	1067668	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		1067144	1					
ANR	1067669	UnaryOperator	*		1067144	0					
ANR	1067670	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		1067144	1					
ANR	1067671	Callee	member_prt		1067144	0					
ANR	1067672	Identifier	member_prt		1067144	0					
ANR	1067673	ArgumentList	t1_glyph_space_coord		1067144	1					
ANR	1067674	Argument	t1_glyph_space_coord		1067144	0					
ANR	1067675	Identifier	t1_glyph_space_coord		1067144	0					
ANR	1067676	Argument	& self -> pole [ i ]		1067144	1					
ANR	1067677	UnaryOperationExpression	& self -> pole [ i ]		1067144	0					
ANR	1067678	UnaryOperator	&		1067144	0					
ANR	1067679	ArrayIndexing	self -> pole [ i ]		1067144	1					
ANR	1067680	PtrMemberAccess	self -> pole		1067144	0					
ANR	1067681	Identifier	self		1067144	0					
ANR	1067682	Identifier	pole		1067144	1					
ANR	1067683	Identifier	i		1067144	1					
ANR	1067684	Argument	offset_gd		1067144	2					
ANR	1067685	Identifier	offset_gd		1067144	0					
ANR	1067686	ExpressionStatement	dir = ( gd > ge ? 1 : - 1 )	1072:16:44973:44997	1067144	6	True				
ANR	1067687	AssignmentExpression	dir = ( gd > ge ? 1 : - 1 )		1067144	0		=			
ANR	1067688	Identifier	dir		1067144	0					
ANR	1067689	ConditionalExpression	gd > ge ? 1 : - 1		1067144	1					
ANR	1067690	Condition	gd > ge		1067144	0					
ANR	1067691	RelationalExpression	gd > ge		1067144	0		>			
ANR	1067692	Identifier	gd		1067144	0					
ANR	1067693	Identifier	ge		1067144	1					
ANR	1067694	PrimaryExpression	1		1067144	1					
ANR	1067695	UnaryOperationExpression	- 1		1067144	2					
ANR	1067696	UnaryOperator	-		1067144	0					
ANR	1067697	PrimaryExpression	1		1067144	1					
ANR	1067698	IfStatement	if ( dir * prev_dir < 0 )		1067144	7					
ANR	1067699	Condition	dir * prev_dir < 0	1073:20:45019:45036	1067144	0	True				
ANR	1067700	RelationalExpression	dir * prev_dir < 0		1067144	0		<			
ANR	1067701	MultiplicativeExpression	dir * prev_dir		1067144	0		*			
ANR	1067702	Identifier	dir		1067144	0					
ANR	1067703	Identifier	prev_dir		1067144	1					
ANR	1067704	PrimaryExpression	0		1067144	1					
ANR	1067705	BreakStatement	break ;	1074:20:45059:45064	1067144	1	True				
ANR	1067706	ExpressionStatement	ge = gd	1075:16:45082:45089	1067144	8	True				
ANR	1067707	AssignmentExpression	ge = gd		1067144	0		=			
ANR	1067708	Identifier	ge		1067144	0					
ANR	1067709	Identifier	gd		1067144	1					
ANR	1067710	ExpressionStatement	prev_dir = dir	1076:16:45107:45121	1067144	9	True				
ANR	1067711	AssignmentExpression	prev_dir = dir		1067144	0		=			
ANR	1067712	Identifier	prev_dir		1067144	0					
ANR	1067713	Identifier	dir		1067144	1					
ANR	1067714	IfStatement	if ( n < 6 )		1067144	7					
ANR	1067715	Condition	n < 6	1078:16:45153:45157	1067144	0	True				
ANR	1067716	RelationalExpression	n < 6		1067144	0		<			
ANR	1067717	Identifier	n		1067144	0					
ANR	1067718	PrimaryExpression	6		1067144	1					
ANR	1067719	ContinueStatement	continue ;	1079:16:45176:45184	1067144	1	True				
ANR	1067720	IfStatement	"if ( t1_hinter__find_flex ( self , k , contour_beg , contour_end , pixel_g , threshold , i , pj , n , & j0 , & j1 , & gm ) )"		1067144	8					
ANR	1067721	Condition	"t1_hinter__find_flex ( self , k , contour_beg , contour_end , pixel_g , threshold , i , pj , n , & j0 , & j1 , & gm )"	1080:16:45202:45301	1067144	0	True				
ANR	1067722	CallExpression	"t1_hinter__find_flex ( self , k , contour_beg , contour_end , pixel_g , threshold , i , pj , n , & j0 , & j1 , & gm )"		1067144	0					
ANR	1067723	Callee	t1_hinter__find_flex		1067144	0					
ANR	1067724	Identifier	t1_hinter__find_flex		1067144	0					
ANR	1067725	ArgumentList	self		1067144	1					
ANR	1067726	Argument	self		1067144	0					
ANR	1067727	Identifier	self		1067144	0					
ANR	1067728	Argument	k		1067144	1					
ANR	1067729	Identifier	k		1067144	0					
ANR	1067730	Argument	contour_beg		1067144	2					
ANR	1067731	Identifier	contour_beg		1067144	0					
ANR	1067732	Argument	contour_end		1067144	3					
ANR	1067733	Identifier	contour_end		1067144	0					
ANR	1067734	Argument	pixel_g		1067144	4					
ANR	1067735	Identifier	pixel_g		1067144	0					
ANR	1067736	Argument	threshold		1067144	5					
ANR	1067737	Identifier	threshold		1067144	0					
ANR	1067738	Argument	i		1067144	6					
ANR	1067739	Identifier	i		1067144	0					
ANR	1067740	Argument	pj		1067144	7					
ANR	1067741	Identifier	pj		1067144	0					
ANR	1067742	Argument	n		1067144	8					
ANR	1067743	Identifier	n		1067144	0					
ANR	1067744	Argument	& j0		1067144	9					
ANR	1067745	UnaryOperationExpression	& j0		1067144	0					
ANR	1067746	UnaryOperator	&		1067144	0					
ANR	1067747	Identifier	j0		1067144	1					
ANR	1067748	Argument	& j1		1067144	10					
ANR	1067749	UnaryOperationExpression	& j1		1067144	0					
ANR	1067750	UnaryOperator	&		1067144	0					
ANR	1067751	Identifier	j1		1067144	1					
ANR	1067752	Argument	& gm		1067144	11					
ANR	1067753	UnaryOperationExpression	& gm		1067144	0					
ANR	1067754	UnaryOperator	&		1067144	0					
ANR	1067755	Identifier	gm		1067144	1					
ANR	1067756	CompoundStatement		70:118:2872:2872	1067144	1					
ANR	1067757	ExpressionStatement	"t1_hinter__compact_flex ( self , contour_beg , contour_end , j0 , j1 , & i )"	1081:16:45322:45389	1067144	0	True				
ANR	1067758	CallExpression	"t1_hinter__compact_flex ( self , contour_beg , contour_end , j0 , j1 , & i )"		1067144	0					
ANR	1067759	Callee	t1_hinter__compact_flex		1067144	0					
ANR	1067760	Identifier	t1_hinter__compact_flex		1067144	0					
ANR	1067761	ArgumentList	self		1067144	1					
ANR	1067762	Argument	self		1067144	0					
ANR	1067763	Identifier	self		1067144	0					
ANR	1067764	Argument	contour_beg		1067144	1					
ANR	1067765	Identifier	contour_beg		1067144	0					
ANR	1067766	Argument	contour_end		1067144	2					
ANR	1067767	Identifier	contour_end		1067144	0					
ANR	1067768	Argument	j0		1067144	3					
ANR	1067769	Identifier	j0		1067144	0					
ANR	1067770	Argument	j1		1067144	4					
ANR	1067771	Identifier	j1		1067144	0					
ANR	1067772	Argument	& i		1067144	5					
ANR	1067773	UnaryOperationExpression	& i		1067144	0					
ANR	1067774	UnaryOperator	&		1067144	0					
ANR	1067775	Identifier	i		1067144	1					
ANR	1067776	ExpressionStatement	"t1_hinter__adjust_stem_hints_by_missed_flex ( self , gc , gm , k )"	1082:16:45407:45467	1067144	1	True				
ANR	1067777	CallExpression	"t1_hinter__adjust_stem_hints_by_missed_flex ( self , gc , gm , k )"		1067144	0					
ANR	1067778	Callee	t1_hinter__adjust_stem_hints_by_missed_flex		1067144	0					
ANR	1067779	Identifier	t1_hinter__adjust_stem_hints_by_missed_flex		1067144	0					
ANR	1067780	ArgumentList	self		1067144	1					
ANR	1067781	Argument	self		1067144	0					
ANR	1067782	Identifier	self		1067144	0					
ANR	1067783	Argument	gc		1067144	1					
ANR	1067784	Identifier	gc		1067144	0					
ANR	1067785	Argument	gm		1067144	2					
ANR	1067786	Identifier	gm		1067144	0					
ANR	1067787	Argument	k		1067144	3					
ANR	1067788	Identifier	k		1067144	0					
ANR	1067789	ExpressionStatement	contour_end = self -> pole_count - 1	1083:16:45485:45519	1067144	2	True				
ANR	1067790	AssignmentExpression	contour_end = self -> pole_count - 1		1067144	0		=			
ANR	1067791	Identifier	contour_end		1067144	0					
ANR	1067792	AdditiveExpression	self -> pole_count - 1		1067144	1		-			
ANR	1067793	PtrMemberAccess	self -> pole_count		1067144	0					
ANR	1067794	Identifier	self		1067144	0					
ANR	1067795	Identifier	pole_count		1067144	1					
ANR	1067796	PrimaryExpression	1		1067144	1					
ANR	1067797	ReturnType	static void		1067144	1					
ANR	1067798	Identifier	t1_hinter__fix_missed_flex		1067144	2					
ANR	1067799	ParameterList	t1_hinter * self		1067144	3					
ANR	1067800	Parameter	t1_hinter * self	1010:39:42413:42428	1067144	0	True				
ANR	1067801	ParameterType	t1_hinter *		1067144	0					
ANR	1067802	Identifier	self		1067144	1					
ANR	1067803	CFGEntryNode	ENTRY		1067144		True				
ANR	1067804	CFGExitNode	EXIT		1067144		True				
ANR	1067805	InfiniteForNode	true		1067144		True				
ANR	1067806	InfiniteForNode	true		1067144		True				
ANR	1067807	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ contour_beg ] , offset_gc )"		1067144						
ANR	1067808	Symbol	self -> pole_count		1067144						
ANR	1067809	Symbol	j0		1067144						
ANR	1067810	Symbol	j1		1067144						
ANR	1067811	Symbol	threshold		1067144						
ANR	1067812	Symbol	dir		1067144						
ANR	1067813	Symbol	prev_dir		1067144						
ANR	1067814	Symbol	gcj		1067144						
ANR	1067815	Symbol	self -> pixel_gw		1067144						
ANR	1067816	Symbol	* member_prt		1067144						
ANR	1067817	Symbol	member_prt		1067144						
ANR	1067818	Symbol	wrapped		1067144						
ANR	1067819	Symbol	* self		1067144						
ANR	1067820	Symbol	offset_gc		1067144						
ANR	1067821	Symbol	offset_gd		1067144						
ANR	1067822	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gd )"		1067144						
ANR	1067823	Symbol	self -> pole [ j ] . type		1067144						
ANR	1067824	Symbol	self -> contour		1067144						
ANR	1067825	Symbol	& gm		1067144						
ANR	1067826	Symbol	t1_glyph_space_coord		1067144						
ANR	1067827	Symbol	contour_beg		1067144						
ANR	1067828	Symbol	p_gd		1067144						
ANR	1067829	Symbol	true		1067144						
ANR	1067830	Symbol	p_gc		1067144						
ANR	1067831	Symbol	* self -> pole		1067144						
ANR	1067832	Symbol	& j1		1067144						
ANR	1067833	Symbol	contour_end		1067144						
ANR	1067834	Symbol	& j0		1067144						
ANR	1067835	Symbol	t1_hinter__find_flex		1067144						
ANR	1067836	Symbol	gc1		1067144						
ANR	1067837	Symbol	gc0		1067144						
ANR	1067838	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1067144						
ANR	1067839	Symbol	self -> pole [ i ] . type		1067144						
ANR	1067840	Symbol	self -> pole		1067144						
ANR	1067841	Symbol	gc		1067144						
ANR	1067842	Symbol	gd		1067144						
ANR	1067843	Symbol	ge		1067144						
ANR	1067844	Symbol	* self -> contour_count		1067144						
ANR	1067845	Symbol	pixel_g		1067144						
ANR	1067846	Symbol	* self -> contour		1067144						
ANR	1067847	Symbol	self -> pixel_gh		1067144						
ANR	1067848	Symbol	self -> contour_count		1067144						
ANR	1067849	Symbol	& self -> pole [ 0 ] . gy		1067144						
ANR	1067850	Symbol	* * self		1067144						
ANR	1067851	Symbol	& self -> pole [ 0 ] . gx		1067144						
ANR	1067852	Symbol	gm		1067144						
ANR	1067853	Symbol	false		1067144						
ANR	1067854	Symbol	i		1067144						
ANR	1067855	Symbol	j		1067144						
ANR	1067856	Symbol	k		1067144						
ANR	1067857	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ i ] , offset_gc )"		1067144						
ANR	1067858	Symbol	n		1067144						
ANR	1067859	Symbol	& i		1067144						
ANR	1067860	Symbol	* i		1067144						
ANR	1067861	Symbol	* j		1067144						
ANR	1067862	Symbol	offcurve		1067144						
ANR	1067863	Symbol	self		1067144						
ANR	1067864	Symbol	pj		1067144						
ANR	1067865	Function	t1_hinter__rmoveto	1089:0:45554:46947							
ANR	1067866	FunctionDef	"t1_hinter__rmoveto (t1_hinter * self , fixed xx , fixed yy)"		1067865	0					
ANR	1067867	CompoundStatement		1090:0:45615:46947	1067865	0					
ANR	1067868	IdentifierDeclStatement	int code ;	1090:3:45619:45627	1067865	0	True				
ANR	1067869	IdentifierDecl	code		1067865	0					
ANR	1067870	IdentifierDeclType	int		1067865	0					
ANR	1067871	Identifier	code		1067865	1					
ANR	1067872	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , xx , yy )"	1092:4:45634:45682	1067865	1	True				
ANR	1067873	CallExpression	"t1_hinter__adjust_matrix_precision ( self , xx , yy )"		1067865	0					
ANR	1067874	Callee	t1_hinter__adjust_matrix_precision		1067865	0					
ANR	1067875	Identifier	t1_hinter__adjust_matrix_precision		1067865	0					
ANR	1067876	ArgumentList	self		1067865	1					
ANR	1067877	Argument	self		1067865	0					
ANR	1067878	Identifier	self		1067865	0					
ANR	1067879	Argument	xx		1067865	1					
ANR	1067880	Identifier	xx		1067865	0					
ANR	1067881	Argument	yy		1067865	2					
ANR	1067882	Identifier	yy		1067865	0					
ANR	1067883	IfStatement	if ( self -> flex_count == 0 )		1067865	2					
ANR	1067884	Condition	self -> flex_count == 0	1093:8:45692:45712	1067865	0	True				
ANR	1067885	EqualityExpression	self -> flex_count == 0		1067865	0		==			
ANR	1067886	PtrMemberAccess	self -> flex_count		1067865	0					
ANR	1067887	Identifier	self		1067865	0					
ANR	1067888	Identifier	flex_count		1067865	1					
ANR	1067889	PrimaryExpression	0		1067865	1					
ANR	1067890	CompoundStatement		4:31:99:99	1067865	1					
ANR	1067891	IfStatement	if ( self -> pass_through )		1067865	0					
ANR	1067892	Condition	self -> pass_through	1094:12:45729:45746	1067865	0	True				
ANR	1067893	PtrMemberAccess	self -> pass_through		1067865	0					
ANR	1067894	Identifier	self		1067865	0					
ANR	1067895	Identifier	pass_through		1067865	1					
ANR	1067896	CompoundStatement		8:12:255:267	1067865	1					
ANR	1067897	IdentifierDeclStatement	t1_glyph_space_coord gx = self -> cx += xx ;	1095:12:45763:45803	1067865	0	True				
ANR	1067898	IdentifierDecl	gx = self -> cx += xx		1067865	0					
ANR	1067899	IdentifierDeclType	t1_glyph_space_coord		1067865	0					
ANR	1067900	Identifier	gx		1067865	1					
ANR	1067901	AssignmentExpression	gx = self -> cx += xx		1067865	2		=			
ANR	1067902	Identifier	gx		1067865	0					
ANR	1067903	AssignmentExpression	self -> cx += xx		1067865	1		+=			
ANR	1067904	PtrMemberAccess	self -> cx		1067865	0					
ANR	1067905	Identifier	self		1067865	0					
ANR	1067906	Identifier	cx		1067865	1					
ANR	1067907	Identifier	xx		1067865	1					
ANR	1067908	IdentifierDeclStatement	t1_glyph_space_coord gy = self -> cy += yy ;	1096:12:45817:45857	1067865	1	True				
ANR	1067909	IdentifierDecl	gy = self -> cy += yy		1067865	0					
ANR	1067910	IdentifierDeclType	t1_glyph_space_coord		1067865	0					
ANR	1067911	Identifier	gy		1067865	1					
ANR	1067912	AssignmentExpression	gy = self -> cy += yy		1067865	2		=			
ANR	1067913	Identifier	gy		1067865	0					
ANR	1067914	AssignmentExpression	self -> cy += yy		1067865	1		+=			
ANR	1067915	PtrMemberAccess	self -> cy		1067865	0					
ANR	1067916	Identifier	self		1067865	0					
ANR	1067917	Identifier	cy		1067865	1					
ANR	1067918	Identifier	yy		1067865	1					
ANR	1067919	IdentifierDeclStatement	"fixed fx , fy ;"	1097:12:45871:45883	1067865	2	True				
ANR	1067920	IdentifierDecl	fx		1067865	0					
ANR	1067921	IdentifierDeclType	fixed		1067865	0					
ANR	1067922	Identifier	fx		1067865	1					
ANR	1067923	IdentifierDecl	fy		1067865	1					
ANR	1067924	IdentifierDeclType	fixed		1067865	0					
ANR	1067925	Identifier	fy		1067865	1					
ANR	1067926	IfStatement	if ( self -> path_opened )		1067865	3					
ANR	1067927	Condition	self -> path_opened	1099:16:45902:45918	1067865	0	True				
ANR	1067928	PtrMemberAccess	self -> path_opened		1067865	0					
ANR	1067929	Identifier	self		1067865	0					
ANR	1067930	Identifier	path_opened		1067865	1					
ANR	1067931	CompoundStatement		10:35:305:305	1067865	1					
ANR	1067932	ExpressionStatement	code = gx_path_close_subpath ( self -> output_path )	1100:16:45939:45986	1067865	0	True				
ANR	1067933	AssignmentExpression	code = gx_path_close_subpath ( self -> output_path )		1067865	0		=			
ANR	1067934	Identifier	code		1067865	0					
ANR	1067935	CallExpression	gx_path_close_subpath ( self -> output_path )		1067865	1					
ANR	1067936	Callee	gx_path_close_subpath		1067865	0					
ANR	1067937	Identifier	gx_path_close_subpath		1067865	0					
ANR	1067938	ArgumentList	self -> output_path		1067865	1					
ANR	1067939	Argument	self -> output_path		1067865	0					
ANR	1067940	PtrMemberAccess	self -> output_path		1067865	0					
ANR	1067941	Identifier	self		1067865	0					
ANR	1067942	Identifier	output_path		1067865	1					
ANR	1067943	IfStatement	if ( code < 0 )		1067865	1					
ANR	1067944	Condition	code < 0	1101:20:46008:46015	1067865	0	True				
ANR	1067945	RelationalExpression	code < 0		1067865	0		<			
ANR	1067946	Identifier	code		1067865	0					
ANR	1067947	PrimaryExpression	0		1067865	1					
ANR	1067948	ReturnStatement	return code ;	1102:20:46038:46049	1067865	1	True				
ANR	1067949	Identifier	code		1067865	0					
ANR	1067950	ExpressionStatement	self -> path_opened = false	1103:16:46067:46092	1067865	2	True				
ANR	1067951	AssignmentExpression	self -> path_opened = false		1067865	0		=			
ANR	1067952	PtrMemberAccess	self -> path_opened		1067865	0					
ANR	1067953	Identifier	self		1067865	0					
ANR	1067954	Identifier	path_opened		1067865	1					
ANR	1067955	Identifier	false		1067865	1					
ANR	1067956	ExpressionStatement	"g2d ( self , gx , gy , & fx , & fy )"	1105:12:46120:46147	1067865	4	True				
ANR	1067957	CallExpression	"g2d ( self , gx , gy , & fx , & fy )"		1067865	0					
ANR	1067958	Callee	g2d		1067865	0					
ANR	1067959	Identifier	g2d		1067865	0					
ANR	1067960	ArgumentList	self		1067865	1					
ANR	1067961	Argument	self		1067865	0					
ANR	1067962	Identifier	self		1067865	0					
ANR	1067963	Argument	gx		1067865	1					
ANR	1067964	Identifier	gx		1067865	0					
ANR	1067965	Argument	gy		1067865	2					
ANR	1067966	Identifier	gy		1067865	0					
ANR	1067967	Argument	& fx		1067865	3					
ANR	1067968	UnaryOperationExpression	& fx		1067865	0					
ANR	1067969	UnaryOperator	&		1067865	0					
ANR	1067970	Identifier	fx		1067865	1					
ANR	1067971	Argument	& fy		1067865	4					
ANR	1067972	UnaryOperationExpression	& fy		1067865	0					
ANR	1067973	UnaryOperator	&		1067865	0					
ANR	1067974	Identifier	fy		1067865	1					
ANR	1067975	ExpressionStatement	"code = gx_path_add_point ( self -> output_path , fx , fy )"	1106:12:46161:46212	1067865	5	True				
ANR	1067976	AssignmentExpression	"code = gx_path_add_point ( self -> output_path , fx , fy )"		1067865	0		=			
ANR	1067977	Identifier	code		1067865	0					
ANR	1067978	CallExpression	"gx_path_add_point ( self -> output_path , fx , fy )"		1067865	1					
ANR	1067979	Callee	gx_path_add_point		1067865	0					
ANR	1067980	Identifier	gx_path_add_point		1067865	0					
ANR	1067981	ArgumentList	self -> output_path		1067865	1					
ANR	1067982	Argument	self -> output_path		1067865	0					
ANR	1067983	PtrMemberAccess	self -> output_path		1067865	0					
ANR	1067984	Identifier	self		1067865	0					
ANR	1067985	Identifier	output_path		1067865	1					
ANR	1067986	Argument	fx		1067865	1					
ANR	1067987	Identifier	fx		1067865	0					
ANR	1067988	Argument	fy		1067865	2					
ANR	1067989	Identifier	fy		1067865	0					
ANR	1067990	IfStatement	if ( self -> flex_count == 0 )		1067865	6					
ANR	1067991	Condition	self -> flex_count == 0	1107:16:46230:46250	1067865	0	True				
ANR	1067992	EqualityExpression	self -> flex_count == 0		1067865	0		==			
ANR	1067993	PtrMemberAccess	self -> flex_count		1067865	0					
ANR	1067994	Identifier	self		1067865	0					
ANR	1067995	Identifier	flex_count		1067865	1					
ANR	1067996	PrimaryExpression	0		1067865	1					
ANR	1067997	CompoundStatement		18:39:637:637	1067865	1					
ANR	1067998	ExpressionStatement	self -> bx = self -> cx	1108:16:46271:46290	1067865	0	True				
ANR	1067999	AssignmentExpression	self -> bx = self -> cx		1067865	0		=			
ANR	1068000	PtrMemberAccess	self -> bx		1067865	0					
ANR	1068001	Identifier	self		1067865	0					
ANR	1068002	Identifier	bx		1067865	1					
ANR	1068003	PtrMemberAccess	self -> cx		1067865	1					
ANR	1068004	Identifier	self		1067865	0					
ANR	1068005	Identifier	cx		1067865	1					
ANR	1068006	ExpressionStatement	self -> by = self -> cy	1109:16:46308:46327	1067865	1	True				
ANR	1068007	AssignmentExpression	self -> by = self -> cy		1067865	0		=			
ANR	1068008	PtrMemberAccess	self -> by		1067865	0					
ANR	1068009	Identifier	self		1067865	0					
ANR	1068010	Identifier	by		1067865	1					
ANR	1068011	PtrMemberAccess	self -> cy		1067865	1					
ANR	1068012	Identifier	self		1067865	0					
ANR	1068013	Identifier	cy		1067865	1					
ANR	1068014	ReturnStatement	return code ;	1111:12:46355:46366	1067865	7	True				
ANR	1068015	Identifier	code		1067865	0					
ANR	1068016	IfStatement	if ( self -> pole_count > 0 && self -> pole [ self -> pole_count - 1 ] . type == moveto )		1067865	1					
ANR	1068017	Condition	self -> pole_count > 0 && self -> pole [ self -> pole_count - 1 ] . type == moveto	1113:12:46390:46460	1067865	0	True				
ANR	1068018	AndExpression	self -> pole_count > 0 && self -> pole [ self -> pole_count - 1 ] . type == moveto		1067865	0		&&			
ANR	1068019	RelationalExpression	self -> pole_count > 0		1067865	0		>			
ANR	1068020	PtrMemberAccess	self -> pole_count		1067865	0					
ANR	1068021	Identifier	self		1067865	0					
ANR	1068022	Identifier	pole_count		1067865	1					
ANR	1068023	PrimaryExpression	0		1067865	1					
ANR	1068024	EqualityExpression	self -> pole [ self -> pole_count - 1 ] . type == moveto		1067865	1		==			
ANR	1068025	MemberAccess	self -> pole [ self -> pole_count - 1 ] . type		1067865	0					
ANR	1068026	ArrayIndexing	self -> pole [ self -> pole_count - 1 ]		1067865	0					
ANR	1068027	PtrMemberAccess	self -> pole		1067865	0					
ANR	1068028	Identifier	self		1067865	0					
ANR	1068029	Identifier	pole		1067865	1					
ANR	1068030	AdditiveExpression	self -> pole_count - 1		1067865	1		-			
ANR	1068031	PtrMemberAccess	self -> pole_count		1067865	0					
ANR	1068032	Identifier	self		1067865	0					
ANR	1068033	Identifier	pole_count		1067865	1					
ANR	1068034	PrimaryExpression	1		1067865	1					
ANR	1068035	Identifier	type		1067865	1					
ANR	1068036	Identifier	moveto		1067865	1					
ANR	1068037	ExpressionStatement	self -> pole_count --	1114:12:46475:46493	1067865	1	True				
ANR	1068038	PostIncDecOperationExpression	self -> pole_count --		1067865	0					
ANR	1068039	PtrMemberAccess	self -> pole_count		1067865	0					
ANR	1068040	Identifier	self		1067865	0					
ANR	1068041	Identifier	pole_count		1067865	1					
ANR	1068042	IncDec	--		1067865	1					
ANR	1068043	IfStatement	if ( self -> pole_count > 0 && self -> pole [ self -> pole_count - 1 ] . type != closepath )		1067865	2					
ANR	1068044	Condition	self -> pole_count > 0 && self -> pole [ self -> pole_count - 1 ] . type != closepath	1115:12:46507:46580	1067865	0	True				
ANR	1068045	AndExpression	self -> pole_count > 0 && self -> pole [ self -> pole_count - 1 ] . type != closepath		1067865	0		&&			
ANR	1068046	RelationalExpression	self -> pole_count > 0		1067865	0		>			
ANR	1068047	PtrMemberAccess	self -> pole_count		1067865	0					
ANR	1068048	Identifier	self		1067865	0					
ANR	1068049	Identifier	pole_count		1067865	1					
ANR	1068050	PrimaryExpression	0		1067865	1					
ANR	1068051	EqualityExpression	self -> pole [ self -> pole_count - 1 ] . type != closepath		1067865	1		!=			
ANR	1068052	MemberAccess	self -> pole [ self -> pole_count - 1 ] . type		1067865	0					
ANR	1068053	ArrayIndexing	self -> pole [ self -> pole_count - 1 ]		1067865	0					
ANR	1068054	PtrMemberAccess	self -> pole		1067865	0					
ANR	1068055	Identifier	self		1067865	0					
ANR	1068056	Identifier	pole		1067865	1					
ANR	1068057	AdditiveExpression	self -> pole_count - 1		1067865	1		-			
ANR	1068058	PtrMemberAccess	self -> pole_count		1067865	0					
ANR	1068059	Identifier	self		1067865	0					
ANR	1068060	Identifier	pole_count		1067865	1					
ANR	1068061	PrimaryExpression	1		1067865	1					
ANR	1068062	Identifier	type		1067865	1					
ANR	1068063	Identifier	closepath		1067865	1					
ANR	1068064	CompoundStatement		26:88:967:967	1067865	1					
ANR	1068065	ExpressionStatement	code = t1_hinter__closepath ( self )	1116:12:46597:46630	1067865	0	True				
ANR	1068066	AssignmentExpression	code = t1_hinter__closepath ( self )		1067865	0		=			
ANR	1068067	Identifier	code		1067865	0					
ANR	1068068	CallExpression	t1_hinter__closepath ( self )		1067865	1					
ANR	1068069	Callee	t1_hinter__closepath		1067865	0					
ANR	1068070	Identifier	t1_hinter__closepath		1067865	0					
ANR	1068071	ArgumentList	self		1067865	1					
ANR	1068072	Argument	self		1067865	0					
ANR	1068073	Identifier	self		1067865	0					
ANR	1068074	IfStatement	if ( code < 0 )		1067865	1					
ANR	1068075	Condition	code < 0	1117:16:46648:46655	1067865	0	True				
ANR	1068076	RelationalExpression	code < 0		1067865	0		<			
ANR	1068077	Identifier	code		1067865	0					
ANR	1068078	PrimaryExpression	0		1067865	1					
ANR	1068079	ReturnStatement	return code ;	1118:16:46674:46685	1067865	1	True				
ANR	1068080	Identifier	code		1067865	0					
ANR	1068081	IfStatement	if ( ! self -> have_flex )		1067865	3					
ANR	1068082	Condition	! self -> have_flex	1120:12:46709:46724	1067865	0	True				
ANR	1068083	UnaryOperationExpression	! self -> have_flex		1067865	0					
ANR	1068084	UnaryOperator	!		1067865	0					
ANR	1068085	PtrMemberAccess	self -> have_flex		1067865	1					
ANR	1068086	Identifier	self		1067865	0					
ANR	1068087	Identifier	have_flex		1067865	1					
ANR	1068088	ExpressionStatement	t1_hinter__fix_missed_flex ( self )	1121:12:46739:46771	1067865	1	True				
ANR	1068089	CallExpression	t1_hinter__fix_missed_flex ( self )		1067865	0					
ANR	1068090	Callee	t1_hinter__fix_missed_flex		1067865	0					
ANR	1068091	Identifier	t1_hinter__fix_missed_flex		1067865	0					
ANR	1068092	ArgumentList	self		1067865	1					
ANR	1068093	Argument	self		1067865	0					
ANR	1068094	Identifier	self		1067865	0					
ANR	1068095	ExpressionStatement	"code = t1_hinter__add_pole ( self , xx , yy , moveto )"	1123:4:46783:46831	1067865	3	True				
ANR	1068096	AssignmentExpression	"code = t1_hinter__add_pole ( self , xx , yy , moveto )"		1067865	0		=			
ANR	1068097	Identifier	code		1067865	0					
ANR	1068098	CallExpression	"t1_hinter__add_pole ( self , xx , yy , moveto )"		1067865	1					
ANR	1068099	Callee	t1_hinter__add_pole		1067865	0					
ANR	1068100	Identifier	t1_hinter__add_pole		1067865	0					
ANR	1068101	ArgumentList	self		1067865	1					
ANR	1068102	Argument	self		1067865	0					
ANR	1068103	Identifier	self		1067865	0					
ANR	1068104	Argument	xx		1067865	1					
ANR	1068105	Identifier	xx		1067865	0					
ANR	1068106	Argument	yy		1067865	2					
ANR	1068107	Identifier	yy		1067865	0					
ANR	1068108	Argument	moveto		1067865	3					
ANR	1068109	Identifier	moveto		1067865	0					
ANR	1068110	IfStatement	if ( self -> flex_count == 0 )		1067865	4					
ANR	1068111	Condition	self -> flex_count == 0	1124:8:46841:46861	1067865	0	True				
ANR	1068112	EqualityExpression	self -> flex_count == 0		1067865	0		==			
ANR	1068113	PtrMemberAccess	self -> flex_count		1067865	0					
ANR	1068114	Identifier	self		1067865	0					
ANR	1068115	Identifier	flex_count		1067865	1					
ANR	1068116	PrimaryExpression	0		1067865	1					
ANR	1068117	CompoundStatement		35:31:1248:1248	1067865	1					
ANR	1068118	ExpressionStatement	self -> bx = self -> cx	1125:8:46874:46893	1067865	0	True				
ANR	1068119	AssignmentExpression	self -> bx = self -> cx		1067865	0		=			
ANR	1068120	PtrMemberAccess	self -> bx		1067865	0					
ANR	1068121	Identifier	self		1067865	0					
ANR	1068122	Identifier	bx		1067865	1					
ANR	1068123	PtrMemberAccess	self -> cx		1067865	1					
ANR	1068124	Identifier	self		1067865	0					
ANR	1068125	Identifier	cx		1067865	1					
ANR	1068126	ExpressionStatement	self -> by = self -> cy	1126:8:46903:46922	1067865	1	True				
ANR	1068127	AssignmentExpression	self -> by = self -> cy		1067865	0		=			
ANR	1068128	PtrMemberAccess	self -> by		1067865	0					
ANR	1068129	Identifier	self		1067865	0					
ANR	1068130	Identifier	by		1067865	1					
ANR	1068131	PtrMemberAccess	self -> cy		1067865	1					
ANR	1068132	Identifier	self		1067865	0					
ANR	1068133	Identifier	cy		1067865	1					
ANR	1068134	ReturnStatement	return code ;	1128:4:46934:46945	1067865	5	True				
ANR	1068135	Identifier	code		1067865	0					
ANR	1068136	ReturnType	int		1067865	1					
ANR	1068137	Identifier	t1_hinter__rmoveto		1067865	2					
ANR	1068138	ParameterList	"t1_hinter * self , fixed xx , fixed yy"		1067865	3					
ANR	1068139	Parameter	t1_hinter * self	1089:23:45577:45592	1067865	0	True				
ANR	1068140	ParameterType	t1_hinter *		1067865	0					
ANR	1068141	Identifier	self		1067865	1					
ANR	1068142	Parameter	fixed xx	1089:41:45595:45602	1067865	1	True				
ANR	1068143	ParameterType	fixed		1067865	0					
ANR	1068144	Identifier	xx		1067865	1					
ANR	1068145	Parameter	fixed yy	1089:51:45605:45612	1067865	2	True				
ANR	1068146	ParameterType	fixed		1067865	0					
ANR	1068147	Identifier	yy		1067865	1					
ANR	1068148	CFGEntryNode	ENTRY		1067865		True				
ANR	1068149	CFGExitNode	EXIT		1067865		True				
ANR	1068150	Symbol	xx		1067865						
ANR	1068151	Symbol	code		1067865						
ANR	1068152	Symbol	* self -> pole		1067865						
ANR	1068153	Symbol	self -> pole_count		1067865						
ANR	1068154	Symbol	self -> pole [ self -> pole_count - 1 ] . type		1067865						
ANR	1068155	Symbol	self -> flex_count		1067865						
ANR	1068156	Symbol	gx_path_close_subpath		1067865						
ANR	1068157	Symbol	fx		1067865						
ANR	1068158	Symbol	fy		1067865						
ANR	1068159	Symbol	t1_hinter__add_pole		1067865						
ANR	1068160	Symbol	closepath		1067865						
ANR	1068161	Symbol	self -> cx		1067865						
ANR	1068162	Symbol	self -> pole		1067865						
ANR	1068163	Symbol	self -> cy		1067865						
ANR	1068164	Symbol	self -> output_path		1067865						
ANR	1068165	Symbol	& fy		1067865						
ANR	1068166	Symbol	& fx		1067865						
ANR	1068167	Symbol	moveto		1067865						
ANR	1068168	Symbol	yy		1067865						
ANR	1068169	Symbol	self -> path_opened		1067865						
ANR	1068170	Symbol	* * self		1067865						
ANR	1068171	Symbol	* self		1067865						
ANR	1068172	Symbol	* self -> pole_count		1067865						
ANR	1068173	Symbol	false		1067865						
ANR	1068174	Symbol	self -> pass_through		1067865						
ANR	1068175	Symbol	self -> have_flex		1067865						
ANR	1068176	Symbol	gx_path_add_point		1067865						
ANR	1068177	Symbol	t1_hinter__closepath		1067865						
ANR	1068178	Symbol	gx		1067865						
ANR	1068179	Symbol	gy		1067865						
ANR	1068180	Symbol	self -> by		1067865						
ANR	1068181	Symbol	self		1067865						
ANR	1068182	Symbol	self -> bx		1067865						
ANR	1068183	Function	t1_hinter__skip_degenerate_segnment	1131:0:46950:47442							
ANR	1068184	FunctionDef	"t1_hinter__skip_degenerate_segnment (t1_hinter * self , int npoles)"		1068183	0					
ANR	1068185	CompoundStatement		1132:0:47035:47442	1068183	0					
ANR	1068186	IdentifierDeclStatement	"int contour_beg = self -> contour [ self -> contour_count ] , i ;"	1133:4:47117:47172	1068183	0	True				
ANR	1068187	IdentifierDecl	contour_beg = self -> contour [ self -> contour_count ]		1068183	0					
ANR	1068188	IdentifierDeclType	int		1068183	0					
ANR	1068189	Identifier	contour_beg		1068183	1					
ANR	1068190	AssignmentExpression	contour_beg = self -> contour [ self -> contour_count ]		1068183	2		=			
ANR	1068191	Identifier	contour_beg		1068183	0					
ANR	1068192	ArrayIndexing	self -> contour [ self -> contour_count ]		1068183	1					
ANR	1068193	PtrMemberAccess	self -> contour		1068183	0					
ANR	1068194	Identifier	self		1068183	0					
ANR	1068195	Identifier	contour		1068183	1					
ANR	1068196	PtrMemberAccess	self -> contour_count		1068183	1					
ANR	1068197	Identifier	self		1068183	0					
ANR	1068198	Identifier	contour_count		1068183	1					
ANR	1068199	IdentifierDecl	i		1068183	1					
ANR	1068200	IdentifierDeclType	int		1068183	0					
ANR	1068201	Identifier	i		1068183	1					
ANR	1068202	IfStatement	if ( contour_beg >= self -> pole_count - npoles )		1068183	1					
ANR	1068203	Condition	contour_beg >= self -> pole_count - npoles	1135:8:47183:47222	1068183	0	True				
ANR	1068204	RelationalExpression	contour_beg >= self -> pole_count - npoles		1068183	0		>=			
ANR	1068205	Identifier	contour_beg		1068183	0					
ANR	1068206	AdditiveExpression	self -> pole_count - npoles		1068183	1		-			
ANR	1068207	PtrMemberAccess	self -> pole_count		1068183	0					
ANR	1068208	Identifier	self		1068183	0					
ANR	1068209	Identifier	pole_count		1068183	1					
ANR	1068210	Identifier	npoles		1068183	1					
ANR	1068211	ReturnStatement	return ;	1136:8:47233:47239	1068183	1	True				
ANR	1068212	ForStatement	for ( i = self -> pole_count - npoles - 1 ; i < self -> pole_count - 1 ; i ++ )		1068183	2					
ANR	1068213	ForInit	i = self -> pole_count - npoles - 1 ;	1137:9:47250:47283	1068183	0	True				
ANR	1068214	AssignmentExpression	i = self -> pole_count - npoles - 1		1068183	0		=			
ANR	1068215	Identifier	i		1068183	0					
ANR	1068216	AdditiveExpression	self -> pole_count - npoles - 1		1068183	1		-			
ANR	1068217	PtrMemberAccess	self -> pole_count		1068183	0					
ANR	1068218	Identifier	self		1068183	0					
ANR	1068219	Identifier	pole_count		1068183	1					
ANR	1068220	AdditiveExpression	npoles - 1		1068183	1		-			
ANR	1068221	Identifier	npoles		1068183	0					
ANR	1068222	PrimaryExpression	1		1068183	1					
ANR	1068223	Condition	i < self -> pole_count - 1	1137:44:47285:47308	1068183	1	True				
ANR	1068224	RelationalExpression	i < self -> pole_count - 1		1068183	0		<			
ANR	1068225	Identifier	i		1068183	0					
ANR	1068226	AdditiveExpression	self -> pole_count - 1		1068183	1		-			
ANR	1068227	PtrMemberAccess	self -> pole_count		1068183	0					
ANR	1068228	Identifier	self		1068183	0					
ANR	1068229	Identifier	pole_count		1068183	1					
ANR	1068230	PrimaryExpression	1		1068183	1					
ANR	1068231	PostIncDecOperationExpression	i ++	1137:70:47311:47313	1068183	2	True				
ANR	1068232	Identifier	i		1068183	0					
ANR	1068233	IncDec	++		1068183	1					
ANR	1068234	IfStatement	if ( self -> pole [ i ] . ax != self -> cx || self -> pole [ i ] . ay != self -> cy )		1068183	3					
ANR	1068235	Condition	self -> pole [ i ] . ax != self -> cx || self -> pole [ i ] . ay != self -> cy	1138:12:47328:47387	1068183	0	True				
ANR	1068236	OrExpression	self -> pole [ i ] . ax != self -> cx || self -> pole [ i ] . ay != self -> cy		1068183	0		||			
ANR	1068237	EqualityExpression	self -> pole [ i ] . ax != self -> cx		1068183	0		!=			
ANR	1068238	MemberAccess	self -> pole [ i ] . ax		1068183	0					
ANR	1068239	ArrayIndexing	self -> pole [ i ]		1068183	0					
ANR	1068240	PtrMemberAccess	self -> pole		1068183	0					
ANR	1068241	Identifier	self		1068183	0					
ANR	1068242	Identifier	pole		1068183	1					
ANR	1068243	Identifier	i		1068183	1					
ANR	1068244	Identifier	ax		1068183	1					
ANR	1068245	PtrMemberAccess	self -> cx		1068183	1					
ANR	1068246	Identifier	self		1068183	0					
ANR	1068247	Identifier	cx		1068183	1					
ANR	1068248	EqualityExpression	self -> pole [ i ] . ay != self -> cy		1068183	1		!=			
ANR	1068249	MemberAccess	self -> pole [ i ] . ay		1068183	0					
ANR	1068250	ArrayIndexing	self -> pole [ i ]		1068183	0					
ANR	1068251	PtrMemberAccess	self -> pole		1068183	0					
ANR	1068252	Identifier	self		1068183	0					
ANR	1068253	Identifier	pole		1068183	1					
ANR	1068254	Identifier	i		1068183	1					
ANR	1068255	Identifier	ay		1068183	1					
ANR	1068256	PtrMemberAccess	self -> cy		1068183	1					
ANR	1068257	Identifier	self		1068183	0					
ANR	1068258	Identifier	cy		1068183	1					
ANR	1068259	ReturnStatement	return ;	1139:12:47402:47408	1068183	1	True				
ANR	1068260	ExpressionStatement	self -> pole_count -= npoles	1140:4:47414:47440	1068183	3	True				
ANR	1068261	AssignmentExpression	self -> pole_count -= npoles		1068183	0		-=			
ANR	1068262	PtrMemberAccess	self -> pole_count		1068183	0					
ANR	1068263	Identifier	self		1068183	0					
ANR	1068264	Identifier	pole_count		1068183	1					
ANR	1068265	Identifier	npoles		1068183	1					
ANR	1068266	ReturnType	static inline void		1068183	1					
ANR	1068267	Identifier	t1_hinter__skip_degenerate_segnment		1068183	2					
ANR	1068268	ParameterList	"t1_hinter * self , int npoles"		1068183	3					
ANR	1068269	Parameter	t1_hinter * self	1131:55:47005:47020	1068183	0	True				
ANR	1068270	ParameterType	t1_hinter *		1068183	0					
ANR	1068271	Identifier	self		1068183	1					
ANR	1068272	Parameter	int npoles	1131:73:47023:47032	1068183	1	True				
ANR	1068273	ParameterType	int		1068183	0					
ANR	1068274	Identifier	npoles		1068183	1					
ANR	1068275	CFGEntryNode	ENTRY		1068183		True				
ANR	1068276	CFGExitNode	EXIT		1068183		True				
ANR	1068277	Symbol	* self -> contour		1068183						
ANR	1068278	Symbol	self -> contour_count		1068183						
ANR	1068279	Symbol	* self -> pole		1068183						
ANR	1068280	Symbol	self -> pole [ i ] . ax		1068183						
ANR	1068281	Symbol	* * self		1068183						
ANR	1068282	Symbol	self -> pole_count		1068183						
ANR	1068283	Symbol	* self		1068183						
ANR	1068284	Symbol	self -> pole [ i ] . ay		1068183						
ANR	1068285	Symbol	i		1068183						
ANR	1068286	Symbol	self -> contour		1068183						
ANR	1068287	Symbol	* i		1068183						
ANR	1068288	Symbol	contour_beg		1068183						
ANR	1068289	Symbol	self		1068183						
ANR	1068290	Symbol	self -> pole		1068183						
ANR	1068291	Symbol	self -> cx		1068183						
ANR	1068292	Symbol	self -> cy		1068183						
ANR	1068293	Symbol	npoles		1068183						
ANR	1068294	Symbol	* self -> contour_count		1068183						
ANR	1068295	Function	t1_hinter__rlineto	1143:0:47445:48048							
ANR	1068296	FunctionDef	"t1_hinter__rlineto (t1_hinter * self , fixed xx , fixed yy)"		1068295	0					
ANR	1068297	CompoundStatement		1144:0:47506:48048	1068295	0					
ANR	1068298	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , xx , yy )"	1145:4:47512:47560	1068295	0	True				
ANR	1068299	CallExpression	"t1_hinter__adjust_matrix_precision ( self , xx , yy )"		1068295	0					
ANR	1068300	Callee	t1_hinter__adjust_matrix_precision		1068295	0					
ANR	1068301	Identifier	t1_hinter__adjust_matrix_precision		1068295	0					
ANR	1068302	ArgumentList	self		1068295	1					
ANR	1068303	Argument	self		1068295	0					
ANR	1068304	Identifier	self		1068295	0					
ANR	1068305	Argument	xx		1068295	1					
ANR	1068306	Identifier	xx		1068295	0					
ANR	1068307	Argument	yy		1068295	2					
ANR	1068308	Identifier	yy		1068295	0					
ANR	1068309	IfStatement	if ( self -> pass_through )		1068295	1					
ANR	1068310	Condition	self -> pass_through	1146:8:47570:47587	1068295	0	True				
ANR	1068311	PtrMemberAccess	self -> pass_through		1068295	0					
ANR	1068312	Identifier	self		1068295	0					
ANR	1068313	Identifier	pass_through		1068295	1					
ANR	1068314	CompoundStatement		6:8:193:205	1068295	1					
ANR	1068315	IdentifierDeclStatement	t1_glyph_space_coord gx = self -> cx += xx ;	1147:8:47600:47640	1068295	0	True				
ANR	1068316	IdentifierDecl	gx = self -> cx += xx		1068295	0					
ANR	1068317	IdentifierDeclType	t1_glyph_space_coord		1068295	0					
ANR	1068318	Identifier	gx		1068295	1					
ANR	1068319	AssignmentExpression	gx = self -> cx += xx		1068295	2		=			
ANR	1068320	Identifier	gx		1068295	0					
ANR	1068321	AssignmentExpression	self -> cx += xx		1068295	1		+=			
ANR	1068322	PtrMemberAccess	self -> cx		1068295	0					
ANR	1068323	Identifier	self		1068295	0					
ANR	1068324	Identifier	cx		1068295	1					
ANR	1068325	Identifier	xx		1068295	1					
ANR	1068326	IdentifierDeclStatement	t1_glyph_space_coord gy = self -> cy += yy ;	1148:8:47650:47690	1068295	1	True				
ANR	1068327	IdentifierDecl	gy = self -> cy += yy		1068295	0					
ANR	1068328	IdentifierDeclType	t1_glyph_space_coord		1068295	0					
ANR	1068329	Identifier	gy		1068295	1					
ANR	1068330	AssignmentExpression	gy = self -> cy += yy		1068295	2		=			
ANR	1068331	Identifier	gy		1068295	0					
ANR	1068332	AssignmentExpression	self -> cy += yy		1068295	1		+=			
ANR	1068333	PtrMemberAccess	self -> cy		1068295	0					
ANR	1068334	Identifier	self		1068295	0					
ANR	1068335	Identifier	cy		1068295	1					
ANR	1068336	Identifier	yy		1068295	1					
ANR	1068337	IdentifierDeclStatement	"fixed fx , fy ;"	1149:8:47700:47712	1068295	2	True				
ANR	1068338	IdentifierDecl	fx		1068295	0					
ANR	1068339	IdentifierDeclType	fixed		1068295	0					
ANR	1068340	Identifier	fx		1068295	1					
ANR	1068341	IdentifierDecl	fy		1068295	1					
ANR	1068342	IdentifierDeclType	fixed		1068295	0					
ANR	1068343	Identifier	fy		1068295	1					
ANR	1068344	ExpressionStatement	self -> path_opened = true	1151:8:47723:47747	1068295	3	True				
ANR	1068345	AssignmentExpression	self -> path_opened = true		1068295	0		=			
ANR	1068346	PtrMemberAccess	self -> path_opened		1068295	0					
ANR	1068347	Identifier	self		1068295	0					
ANR	1068348	Identifier	path_opened		1068295	1					
ANR	1068349	Identifier	true		1068295	1					
ANR	1068350	ExpressionStatement	"g2d ( self , gx , gy , & fx , & fy )"	1152:8:47757:47784	1068295	4	True				
ANR	1068351	CallExpression	"g2d ( self , gx , gy , & fx , & fy )"		1068295	0					
ANR	1068352	Callee	g2d		1068295	0					
ANR	1068353	Identifier	g2d		1068295	0					
ANR	1068354	ArgumentList	self		1068295	1					
ANR	1068355	Argument	self		1068295	0					
ANR	1068356	Identifier	self		1068295	0					
ANR	1068357	Argument	gx		1068295	1					
ANR	1068358	Identifier	gx		1068295	0					
ANR	1068359	Argument	gy		1068295	2					
ANR	1068360	Identifier	gy		1068295	0					
ANR	1068361	Argument	& fx		1068295	3					
ANR	1068362	UnaryOperationExpression	& fx		1068295	0					
ANR	1068363	UnaryOperator	&		1068295	0					
ANR	1068364	Identifier	fx		1068295	1					
ANR	1068365	Argument	& fy		1068295	4					
ANR	1068366	UnaryOperationExpression	& fy		1068295	0					
ANR	1068367	UnaryOperator	&		1068295	0					
ANR	1068368	Identifier	fy		1068295	1					
ANR	1068369	ReturnStatement	"return gx_path_add_line ( self -> output_path , fx , fy ) ;"	1153:8:47794:47844	1068295	5	True				
ANR	1068370	CallExpression	"gx_path_add_line ( self -> output_path , fx , fy )"		1068295	0					
ANR	1068371	Callee	gx_path_add_line		1068295	0					
ANR	1068372	Identifier	gx_path_add_line		1068295	0					
ANR	1068373	ArgumentList	self -> output_path		1068295	1					
ANR	1068374	Argument	self -> output_path		1068295	0					
ANR	1068375	PtrMemberAccess	self -> output_path		1068295	0					
ANR	1068376	Identifier	self		1068295	0					
ANR	1068377	Identifier	output_path		1068295	1					
ANR	1068378	Argument	fx		1068295	1					
ANR	1068379	Identifier	fx		1068295	0					
ANR	1068380	Argument	fy		1068295	2					
ANR	1068381	Identifier	fy		1068295	0					
ANR	1068382	ElseStatement	else		1068295	0					
ANR	1068383	CompoundStatement		12:8:360:413	1068295	0					
ANR	1068384	IdentifierDeclStatement	"int code = t1_hinter__add_pole ( self , xx , yy , oncurve ) ;"	1155:8:47867:47920	1068295	0	True				
ANR	1068385	IdentifierDecl	"code = t1_hinter__add_pole ( self , xx , yy , oncurve )"		1068295	0					
ANR	1068386	IdentifierDeclType	int		1068295	0					
ANR	1068387	Identifier	code		1068295	1					
ANR	1068388	AssignmentExpression	"code = t1_hinter__add_pole ( self , xx , yy , oncurve )"		1068295	2		=			
ANR	1068389	Identifier	code		1068295	0					
ANR	1068390	CallExpression	"t1_hinter__add_pole ( self , xx , yy , oncurve )"		1068295	1					
ANR	1068391	Callee	t1_hinter__add_pole		1068295	0					
ANR	1068392	Identifier	t1_hinter__add_pole		1068295	0					
ANR	1068393	ArgumentList	self		1068295	1					
ANR	1068394	Argument	self		1068295	0					
ANR	1068395	Identifier	self		1068295	0					
ANR	1068396	Argument	xx		1068295	1					
ANR	1068397	Identifier	xx		1068295	0					
ANR	1068398	Argument	yy		1068295	2					
ANR	1068399	Identifier	yy		1068295	0					
ANR	1068400	Argument	oncurve		1068295	3					
ANR	1068401	Identifier	oncurve		1068295	0					
ANR	1068402	IfStatement	if ( code < 0 )		1068295	1					
ANR	1068403	Condition	code < 0	1157:12:47935:47942	1068295	0	True				
ANR	1068404	RelationalExpression	code < 0		1068295	0		<			
ANR	1068405	Identifier	code		1068295	0					
ANR	1068406	PrimaryExpression	0		1068295	1					
ANR	1068407	ReturnStatement	return code ;	1158:12:47957:47968	1068295	1	True				
ANR	1068408	Identifier	code		1068295	0					
ANR	1068409	ExpressionStatement	"t1_hinter__skip_degenerate_segnment ( self , 1 )"	1159:8:47978:48022	1068295	2	True				
ANR	1068410	CallExpression	"t1_hinter__skip_degenerate_segnment ( self , 1 )"		1068295	0					
ANR	1068411	Callee	t1_hinter__skip_degenerate_segnment		1068295	0					
ANR	1068412	Identifier	t1_hinter__skip_degenerate_segnment		1068295	0					
ANR	1068413	ArgumentList	self		1068295	1					
ANR	1068414	Argument	self		1068295	0					
ANR	1068415	Identifier	self		1068295	0					
ANR	1068416	Argument	1		1068295	1					
ANR	1068417	PrimaryExpression	1		1068295	0					
ANR	1068418	ReturnStatement	return 0 ;	1160:8:48032:48040	1068295	3	True				
ANR	1068419	PrimaryExpression	0		1068295	0					
ANR	1068420	ReturnType	int		1068295	1					
ANR	1068421	Identifier	t1_hinter__rlineto		1068295	2					
ANR	1068422	ParameterList	"t1_hinter * self , fixed xx , fixed yy"		1068295	3					
ANR	1068423	Parameter	t1_hinter * self	1143:23:47468:47483	1068295	0	True				
ANR	1068424	ParameterType	t1_hinter *		1068295	0					
ANR	1068425	Identifier	self		1068295	1					
ANR	1068426	Parameter	fixed xx	1143:41:47486:47493	1068295	1	True				
ANR	1068427	ParameterType	fixed		1068295	0					
ANR	1068428	Identifier	xx		1068295	1					
ANR	1068429	Parameter	fixed yy	1143:51:47496:47503	1068295	2	True				
ANR	1068430	ParameterType	fixed		1068295	0					
ANR	1068431	Identifier	yy		1068295	1					
ANR	1068432	CFGEntryNode	ENTRY		1068295		True				
ANR	1068433	CFGExitNode	EXIT		1068295		True				
ANR	1068434	Symbol	xx		1068295						
ANR	1068435	Symbol	yy		1068295						
ANR	1068436	Symbol	oncurve		1068295						
ANR	1068437	Symbol	code		1068295						
ANR	1068438	Symbol	self -> path_opened		1068295						
ANR	1068439	Symbol	* self		1068295						
ANR	1068440	Symbol	self -> pass_through		1068295						
ANR	1068441	Symbol	gx		1068295						
ANR	1068442	Symbol	gy		1068295						
ANR	1068443	Symbol	fx		1068295						
ANR	1068444	Symbol	fy		1068295						
ANR	1068445	Symbol	t1_hinter__add_pole		1068295						
ANR	1068446	Symbol	gx_path_add_line		1068295						
ANR	1068447	Symbol	true		1068295						
ANR	1068448	Symbol	self		1068295						
ANR	1068449	Symbol	self -> cx		1068295						
ANR	1068450	Symbol	self -> cy		1068295						
ANR	1068451	Symbol	& fy		1068295						
ANR	1068452	Symbol	self -> output_path		1068295						
ANR	1068453	Symbol	& fx		1068295						
ANR	1068454	Function	t1_hinter__rcurveto	1164:0:48051:49392							
ANR	1068455	FunctionDef	"t1_hinter__rcurveto (t1_hinter * self , fixed xx0 , fixed yy0 , fixed xx1 , fixed yy1 , fixed xx2 , fixed yy2)"		1068454	0					
ANR	1068456	CompoundStatement		1165:0:48159:49392	1068454	0					
ANR	1068457	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , xx0 , yy0 )"	1166:4:48165:48215	1068454	0	True				
ANR	1068458	CallExpression	"t1_hinter__adjust_matrix_precision ( self , xx0 , yy0 )"		1068454	0					
ANR	1068459	Callee	t1_hinter__adjust_matrix_precision		1068454	0					
ANR	1068460	Identifier	t1_hinter__adjust_matrix_precision		1068454	0					
ANR	1068461	ArgumentList	self		1068454	1					
ANR	1068462	Argument	self		1068454	0					
ANR	1068463	Identifier	self		1068454	0					
ANR	1068464	Argument	xx0		1068454	1					
ANR	1068465	Identifier	xx0		1068454	0					
ANR	1068466	Argument	yy0		1068454	2					
ANR	1068467	Identifier	yy0		1068454	0					
ANR	1068468	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , xx1 , yy1 )"	1167:4:48221:48271	1068454	1	True				
ANR	1068469	CallExpression	"t1_hinter__adjust_matrix_precision ( self , xx1 , yy1 )"		1068454	0					
ANR	1068470	Callee	t1_hinter__adjust_matrix_precision		1068454	0					
ANR	1068471	Identifier	t1_hinter__adjust_matrix_precision		1068454	0					
ANR	1068472	ArgumentList	self		1068454	1					
ANR	1068473	Argument	self		1068454	0					
ANR	1068474	Identifier	self		1068454	0					
ANR	1068475	Argument	xx1		1068454	1					
ANR	1068476	Identifier	xx1		1068454	0					
ANR	1068477	Argument	yy1		1068454	2					
ANR	1068478	Identifier	yy1		1068454	0					
ANR	1068479	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , xx2 , yy2 )"	1168:4:48277:48327	1068454	2	True				
ANR	1068480	CallExpression	"t1_hinter__adjust_matrix_precision ( self , xx2 , yy2 )"		1068454	0					
ANR	1068481	Callee	t1_hinter__adjust_matrix_precision		1068454	0					
ANR	1068482	Identifier	t1_hinter__adjust_matrix_precision		1068454	0					
ANR	1068483	ArgumentList	self		1068454	1					
ANR	1068484	Argument	self		1068454	0					
ANR	1068485	Identifier	self		1068454	0					
ANR	1068486	Argument	xx2		1068454	1					
ANR	1068487	Identifier	xx2		1068454	0					
ANR	1068488	Argument	yy2		1068454	2					
ANR	1068489	Identifier	yy2		1068454	0					
ANR	1068490	IfStatement	if ( self -> pass_through )		1068454	3					
ANR	1068491	Condition	self -> pass_through	1169:8:48337:48354	1068454	0	True				
ANR	1068492	PtrMemberAccess	self -> pass_through		1068454	0					
ANR	1068493	Identifier	self		1068454	0					
ANR	1068494	Identifier	pass_through		1068454	1					
ANR	1068495	CompoundStatement		12:8:519:553	1068454	1					
ANR	1068496	IdentifierDeclStatement	t1_glyph_space_coord gx0 = self -> cx += xx0 ;	1170:8:48367:48409	1068454	0	True				
ANR	1068497	IdentifierDecl	gx0 = self -> cx += xx0		1068454	0					
ANR	1068498	IdentifierDeclType	t1_glyph_space_coord		1068454	0					
ANR	1068499	Identifier	gx0		1068454	1					
ANR	1068500	AssignmentExpression	gx0 = self -> cx += xx0		1068454	2		=			
ANR	1068501	Identifier	gx0		1068454	0					
ANR	1068502	AssignmentExpression	self -> cx += xx0		1068454	1		+=			
ANR	1068503	PtrMemberAccess	self -> cx		1068454	0					
ANR	1068504	Identifier	self		1068454	0					
ANR	1068505	Identifier	cx		1068454	1					
ANR	1068506	Identifier	xx0		1068454	1					
ANR	1068507	IdentifierDeclStatement	t1_glyph_space_coord gy0 = self -> cy += yy0 ;	1171:8:48419:48461	1068454	1	True				
ANR	1068508	IdentifierDecl	gy0 = self -> cy += yy0		1068454	0					
ANR	1068509	IdentifierDeclType	t1_glyph_space_coord		1068454	0					
ANR	1068510	Identifier	gy0		1068454	1					
ANR	1068511	AssignmentExpression	gy0 = self -> cy += yy0		1068454	2		=			
ANR	1068512	Identifier	gy0		1068454	0					
ANR	1068513	AssignmentExpression	self -> cy += yy0		1068454	1		+=			
ANR	1068514	PtrMemberAccess	self -> cy		1068454	0					
ANR	1068515	Identifier	self		1068454	0					
ANR	1068516	Identifier	cy		1068454	1					
ANR	1068517	Identifier	yy0		1068454	1					
ANR	1068518	IdentifierDeclStatement	t1_glyph_space_coord gx1 = self -> cx += xx1 ;	1172:8:48471:48513	1068454	2	True				
ANR	1068519	IdentifierDecl	gx1 = self -> cx += xx1		1068454	0					
ANR	1068520	IdentifierDeclType	t1_glyph_space_coord		1068454	0					
ANR	1068521	Identifier	gx1		1068454	1					
ANR	1068522	AssignmentExpression	gx1 = self -> cx += xx1		1068454	2		=			
ANR	1068523	Identifier	gx1		1068454	0					
ANR	1068524	AssignmentExpression	self -> cx += xx1		1068454	1		+=			
ANR	1068525	PtrMemberAccess	self -> cx		1068454	0					
ANR	1068526	Identifier	self		1068454	0					
ANR	1068527	Identifier	cx		1068454	1					
ANR	1068528	Identifier	xx1		1068454	1					
ANR	1068529	IdentifierDeclStatement	t1_glyph_space_coord gy1 = self -> cy += yy1 ;	1173:8:48523:48565	1068454	3	True				
ANR	1068530	IdentifierDecl	gy1 = self -> cy += yy1		1068454	0					
ANR	1068531	IdentifierDeclType	t1_glyph_space_coord		1068454	0					
ANR	1068532	Identifier	gy1		1068454	1					
ANR	1068533	AssignmentExpression	gy1 = self -> cy += yy1		1068454	2		=			
ANR	1068534	Identifier	gy1		1068454	0					
ANR	1068535	AssignmentExpression	self -> cy += yy1		1068454	1		+=			
ANR	1068536	PtrMemberAccess	self -> cy		1068454	0					
ANR	1068537	Identifier	self		1068454	0					
ANR	1068538	Identifier	cy		1068454	1					
ANR	1068539	Identifier	yy1		1068454	1					
ANR	1068540	IdentifierDeclStatement	t1_glyph_space_coord gx2 = self -> cx += xx2 ;	1174:8:48575:48617	1068454	4	True				
ANR	1068541	IdentifierDecl	gx2 = self -> cx += xx2		1068454	0					
ANR	1068542	IdentifierDeclType	t1_glyph_space_coord		1068454	0					
ANR	1068543	Identifier	gx2		1068454	1					
ANR	1068544	AssignmentExpression	gx2 = self -> cx += xx2		1068454	2		=			
ANR	1068545	Identifier	gx2		1068454	0					
ANR	1068546	AssignmentExpression	self -> cx += xx2		1068454	1		+=			
ANR	1068547	PtrMemberAccess	self -> cx		1068454	0					
ANR	1068548	Identifier	self		1068454	0					
ANR	1068549	Identifier	cx		1068454	1					
ANR	1068550	Identifier	xx2		1068454	1					
ANR	1068551	IdentifierDeclStatement	t1_glyph_space_coord gy2 = self -> cy += yy2 ;	1175:8:48627:48669	1068454	5	True				
ANR	1068552	IdentifierDecl	gy2 = self -> cy += yy2		1068454	0					
ANR	1068553	IdentifierDeclType	t1_glyph_space_coord		1068454	0					
ANR	1068554	Identifier	gy2		1068454	1					
ANR	1068555	AssignmentExpression	gy2 = self -> cy += yy2		1068454	2		=			
ANR	1068556	Identifier	gy2		1068454	0					
ANR	1068557	AssignmentExpression	self -> cy += yy2		1068454	1		+=			
ANR	1068558	PtrMemberAccess	self -> cy		1068454	0					
ANR	1068559	Identifier	self		1068454	0					
ANR	1068560	Identifier	cy		1068454	1					
ANR	1068561	Identifier	yy2		1068454	1					
ANR	1068562	IdentifierDeclStatement	"fixed fx0 , fy0 , fx1 , fy1 , fx2 , fy2 ;"	1176:8:48679:48713	1068454	6	True				
ANR	1068563	IdentifierDecl	fx0		1068454	0					
ANR	1068564	IdentifierDeclType	fixed		1068454	0					
ANR	1068565	Identifier	fx0		1068454	1					
ANR	1068566	IdentifierDecl	fy0		1068454	1					
ANR	1068567	IdentifierDeclType	fixed		1068454	0					
ANR	1068568	Identifier	fy0		1068454	1					
ANR	1068569	IdentifierDecl	fx1		1068454	2					
ANR	1068570	IdentifierDeclType	fixed		1068454	0					
ANR	1068571	Identifier	fx1		1068454	1					
ANR	1068572	IdentifierDecl	fy1		1068454	3					
ANR	1068573	IdentifierDeclType	fixed		1068454	0					
ANR	1068574	Identifier	fy1		1068454	1					
ANR	1068575	IdentifierDecl	fx2		1068454	4					
ANR	1068576	IdentifierDeclType	fixed		1068454	0					
ANR	1068577	Identifier	fx2		1068454	1					
ANR	1068578	IdentifierDecl	fy2		1068454	5					
ANR	1068579	IdentifierDeclType	fixed		1068454	0					
ANR	1068580	Identifier	fy2		1068454	1					
ANR	1068581	ExpressionStatement	self -> path_opened = true	1178:8:48724:48748	1068454	7	True				
ANR	1068582	AssignmentExpression	self -> path_opened = true		1068454	0		=			
ANR	1068583	PtrMemberAccess	self -> path_opened		1068454	0					
ANR	1068584	Identifier	self		1068454	0					
ANR	1068585	Identifier	path_opened		1068454	1					
ANR	1068586	Identifier	true		1068454	1					
ANR	1068587	ExpressionStatement	"g2d ( self , gx0 , gy0 , & fx0 , & fy0 )"	1179:8:48758:48789	1068454	8	True				
ANR	1068588	CallExpression	"g2d ( self , gx0 , gy0 , & fx0 , & fy0 )"		1068454	0					
ANR	1068589	Callee	g2d		1068454	0					
ANR	1068590	Identifier	g2d		1068454	0					
ANR	1068591	ArgumentList	self		1068454	1					
ANR	1068592	Argument	self		1068454	0					
ANR	1068593	Identifier	self		1068454	0					
ANR	1068594	Argument	gx0		1068454	1					
ANR	1068595	Identifier	gx0		1068454	0					
ANR	1068596	Argument	gy0		1068454	2					
ANR	1068597	Identifier	gy0		1068454	0					
ANR	1068598	Argument	& fx0		1068454	3					
ANR	1068599	UnaryOperationExpression	& fx0		1068454	0					
ANR	1068600	UnaryOperator	&		1068454	0					
ANR	1068601	Identifier	fx0		1068454	1					
ANR	1068602	Argument	& fy0		1068454	4					
ANR	1068603	UnaryOperationExpression	& fy0		1068454	0					
ANR	1068604	UnaryOperator	&		1068454	0					
ANR	1068605	Identifier	fy0		1068454	1					
ANR	1068606	ExpressionStatement	"g2d ( self , gx1 , gy1 , & fx1 , & fy1 )"	1180:8:48799:48830	1068454	9	True				
ANR	1068607	CallExpression	"g2d ( self , gx1 , gy1 , & fx1 , & fy1 )"		1068454	0					
ANR	1068608	Callee	g2d		1068454	0					
ANR	1068609	Identifier	g2d		1068454	0					
ANR	1068610	ArgumentList	self		1068454	1					
ANR	1068611	Argument	self		1068454	0					
ANR	1068612	Identifier	self		1068454	0					
ANR	1068613	Argument	gx1		1068454	1					
ANR	1068614	Identifier	gx1		1068454	0					
ANR	1068615	Argument	gy1		1068454	2					
ANR	1068616	Identifier	gy1		1068454	0					
ANR	1068617	Argument	& fx1		1068454	3					
ANR	1068618	UnaryOperationExpression	& fx1		1068454	0					
ANR	1068619	UnaryOperator	&		1068454	0					
ANR	1068620	Identifier	fx1		1068454	1					
ANR	1068621	Argument	& fy1		1068454	4					
ANR	1068622	UnaryOperationExpression	& fy1		1068454	0					
ANR	1068623	UnaryOperator	&		1068454	0					
ANR	1068624	Identifier	fy1		1068454	1					
ANR	1068625	ExpressionStatement	"g2d ( self , gx2 , gy2 , & fx2 , & fy2 )"	1181:8:48840:48871	1068454	10	True				
ANR	1068626	CallExpression	"g2d ( self , gx2 , gy2 , & fx2 , & fy2 )"		1068454	0					
ANR	1068627	Callee	g2d		1068454	0					
ANR	1068628	Identifier	g2d		1068454	0					
ANR	1068629	ArgumentList	self		1068454	1					
ANR	1068630	Argument	self		1068454	0					
ANR	1068631	Identifier	self		1068454	0					
ANR	1068632	Argument	gx2		1068454	1					
ANR	1068633	Identifier	gx2		1068454	0					
ANR	1068634	Argument	gy2		1068454	2					
ANR	1068635	Identifier	gy2		1068454	0					
ANR	1068636	Argument	& fx2		1068454	3					
ANR	1068637	UnaryOperationExpression	& fx2		1068454	0					
ANR	1068638	UnaryOperator	&		1068454	0					
ANR	1068639	Identifier	fx2		1068454	1					
ANR	1068640	Argument	& fy2		1068454	4					
ANR	1068641	UnaryOperationExpression	& fy2		1068454	0					
ANR	1068642	UnaryOperator	&		1068454	0					
ANR	1068643	Identifier	fy2		1068454	1					
ANR	1068644	ReturnStatement	"return gx_path_add_curve ( self -> output_path , fx0 , fy0 , fx1 , fy1 , fx2 , fy2 ) ;"	1182:8:48881:48954	1068454	11	True				
ANR	1068645	CallExpression	"gx_path_add_curve ( self -> output_path , fx0 , fy0 , fx1 , fy1 , fx2 , fy2 )"		1068454	0					
ANR	1068646	Callee	gx_path_add_curve		1068454	0					
ANR	1068647	Identifier	gx_path_add_curve		1068454	0					
ANR	1068648	ArgumentList	self -> output_path		1068454	1					
ANR	1068649	Argument	self -> output_path		1068454	0					
ANR	1068650	PtrMemberAccess	self -> output_path		1068454	0					
ANR	1068651	Identifier	self		1068454	0					
ANR	1068652	Identifier	output_path		1068454	1					
ANR	1068653	Argument	fx0		1068454	1					
ANR	1068654	Identifier	fx0		1068454	0					
ANR	1068655	Argument	fy0		1068454	2					
ANR	1068656	Identifier	fy0		1068454	0					
ANR	1068657	Argument	fx1		1068454	3					
ANR	1068658	Identifier	fx1		1068454	0					
ANR	1068659	Argument	fy1		1068454	4					
ANR	1068660	Identifier	fy1		1068454	0					
ANR	1068661	Argument	fx2		1068454	5					
ANR	1068662	Identifier	fx2		1068454	0					
ANR	1068663	Argument	fy2		1068454	6					
ANR	1068664	Identifier	fy2		1068454	0					
ANR	1068665	ElseStatement	else		1068454	0					
ANR	1068666	CompoundStatement		20:8:817:825	1068454	0					
ANR	1068667	IdentifierDeclStatement	int code ;	1184:8:48977:48985	1068454	0	True				
ANR	1068668	IdentifierDecl	code		1068454	0					
ANR	1068669	IdentifierDeclType	int		1068454	0					
ANR	1068670	Identifier	code		1068454	1					
ANR	1068671	ExpressionStatement	"code = t1_hinter__add_pole ( self , xx0 , yy0 , offcurve )"	1186:8:48996:49048	1068454	1	True				
ANR	1068672	AssignmentExpression	"code = t1_hinter__add_pole ( self , xx0 , yy0 , offcurve )"		1068454	0		=			
ANR	1068673	Identifier	code		1068454	0					
ANR	1068674	CallExpression	"t1_hinter__add_pole ( self , xx0 , yy0 , offcurve )"		1068454	1					
ANR	1068675	Callee	t1_hinter__add_pole		1068454	0					
ANR	1068676	Identifier	t1_hinter__add_pole		1068454	0					
ANR	1068677	ArgumentList	self		1068454	1					
ANR	1068678	Argument	self		1068454	0					
ANR	1068679	Identifier	self		1068454	0					
ANR	1068680	Argument	xx0		1068454	1					
ANR	1068681	Identifier	xx0		1068454	0					
ANR	1068682	Argument	yy0		1068454	2					
ANR	1068683	Identifier	yy0		1068454	0					
ANR	1068684	Argument	offcurve		1068454	3					
ANR	1068685	Identifier	offcurve		1068454	0					
ANR	1068686	IfStatement	if ( code < 0 )		1068454	2					
ANR	1068687	Condition	code < 0	1187:12:49062:49069	1068454	0	True				
ANR	1068688	RelationalExpression	code < 0		1068454	0		<			
ANR	1068689	Identifier	code		1068454	0					
ANR	1068690	PrimaryExpression	0		1068454	1					
ANR	1068691	ReturnStatement	return code ;	1188:12:49084:49095	1068454	1	True				
ANR	1068692	Identifier	code		1068454	0					
ANR	1068693	ExpressionStatement	"code = t1_hinter__add_pole ( self , xx1 , yy1 , offcurve )"	1189:8:49105:49157	1068454	3	True				
ANR	1068694	AssignmentExpression	"code = t1_hinter__add_pole ( self , xx1 , yy1 , offcurve )"		1068454	0		=			
ANR	1068695	Identifier	code		1068454	0					
ANR	1068696	CallExpression	"t1_hinter__add_pole ( self , xx1 , yy1 , offcurve )"		1068454	1					
ANR	1068697	Callee	t1_hinter__add_pole		1068454	0					
ANR	1068698	Identifier	t1_hinter__add_pole		1068454	0					
ANR	1068699	ArgumentList	self		1068454	1					
ANR	1068700	Argument	self		1068454	0					
ANR	1068701	Identifier	self		1068454	0					
ANR	1068702	Argument	xx1		1068454	1					
ANR	1068703	Identifier	xx1		1068454	0					
ANR	1068704	Argument	yy1		1068454	2					
ANR	1068705	Identifier	yy1		1068454	0					
ANR	1068706	Argument	offcurve		1068454	3					
ANR	1068707	Identifier	offcurve		1068454	0					
ANR	1068708	IfStatement	if ( code < 0 )		1068454	4					
ANR	1068709	Condition	code < 0	1190:12:49171:49178	1068454	0	True				
ANR	1068710	RelationalExpression	code < 0		1068454	0		<			
ANR	1068711	Identifier	code		1068454	0					
ANR	1068712	PrimaryExpression	0		1068454	1					
ANR	1068713	ReturnStatement	return code ;	1191:12:49193:49204	1068454	1	True				
ANR	1068714	Identifier	code		1068454	0					
ANR	1068715	ExpressionStatement	"code = t1_hinter__add_pole ( self , xx2 , yy2 , oncurve )"	1192:8:49214:49265	1068454	5	True				
ANR	1068716	AssignmentExpression	"code = t1_hinter__add_pole ( self , xx2 , yy2 , oncurve )"		1068454	0		=			
ANR	1068717	Identifier	code		1068454	0					
ANR	1068718	CallExpression	"t1_hinter__add_pole ( self , xx2 , yy2 , oncurve )"		1068454	1					
ANR	1068719	Callee	t1_hinter__add_pole		1068454	0					
ANR	1068720	Identifier	t1_hinter__add_pole		1068454	0					
ANR	1068721	ArgumentList	self		1068454	1					
ANR	1068722	Argument	self		1068454	0					
ANR	1068723	Identifier	self		1068454	0					
ANR	1068724	Argument	xx2		1068454	1					
ANR	1068725	Identifier	xx2		1068454	0					
ANR	1068726	Argument	yy2		1068454	2					
ANR	1068727	Identifier	yy2		1068454	0					
ANR	1068728	Argument	oncurve		1068454	3					
ANR	1068729	Identifier	oncurve		1068454	0					
ANR	1068730	IfStatement	if ( code < 0 )		1068454	6					
ANR	1068731	Condition	code < 0	1193:12:49279:49286	1068454	0	True				
ANR	1068732	RelationalExpression	code < 0		1068454	0		<			
ANR	1068733	Identifier	code		1068454	0					
ANR	1068734	PrimaryExpression	0		1068454	1					
ANR	1068735	ReturnStatement	return code ;	1194:12:49301:49312	1068454	1	True				
ANR	1068736	Identifier	code		1068454	0					
ANR	1068737	ExpressionStatement	"t1_hinter__skip_degenerate_segnment ( self , 3 )"	1195:8:49322:49366	1068454	7	True				
ANR	1068738	CallExpression	"t1_hinter__skip_degenerate_segnment ( self , 3 )"		1068454	0					
ANR	1068739	Callee	t1_hinter__skip_degenerate_segnment		1068454	0					
ANR	1068740	Identifier	t1_hinter__skip_degenerate_segnment		1068454	0					
ANR	1068741	ArgumentList	self		1068454	1					
ANR	1068742	Argument	self		1068454	0					
ANR	1068743	Identifier	self		1068454	0					
ANR	1068744	Argument	3		1068454	1					
ANR	1068745	PrimaryExpression	3		1068454	0					
ANR	1068746	ReturnStatement	return 0 ;	1196:8:49376:49384	1068454	8	True				
ANR	1068747	PrimaryExpression	0		1068454	0					
ANR	1068748	ReturnType	int		1068454	1					
ANR	1068749	Identifier	t1_hinter__rcurveto		1068454	2					
ANR	1068750	ParameterList	"t1_hinter * self , fixed xx0 , fixed yy0 , fixed xx1 , fixed yy1 , fixed xx2 , fixed yy2"		1068454	3					
ANR	1068751	Parameter	t1_hinter * self	1164:24:48075:48090	1068454	0	True				
ANR	1068752	ParameterType	t1_hinter *		1068454	0					
ANR	1068753	Identifier	self		1068454	1					
ANR	1068754	Parameter	fixed xx0	1164:42:48093:48101	1068454	1	True				
ANR	1068755	ParameterType	fixed		1068454	0					
ANR	1068756	Identifier	xx0		1068454	1					
ANR	1068757	Parameter	fixed yy0	1164:53:48104:48112	1068454	2	True				
ANR	1068758	ParameterType	fixed		1068454	0					
ANR	1068759	Identifier	yy0		1068454	1					
ANR	1068760	Parameter	fixed xx1	1164:64:48115:48123	1068454	3	True				
ANR	1068761	ParameterType	fixed		1068454	0					
ANR	1068762	Identifier	xx1		1068454	1					
ANR	1068763	Parameter	fixed yy1	1164:75:48126:48134	1068454	4	True				
ANR	1068764	ParameterType	fixed		1068454	0					
ANR	1068765	Identifier	yy1		1068454	1					
ANR	1068766	Parameter	fixed xx2	1164:86:48137:48145	1068454	5	True				
ANR	1068767	ParameterType	fixed		1068454	0					
ANR	1068768	Identifier	xx2		1068454	1					
ANR	1068769	Parameter	fixed yy2	1164:97:48148:48156	1068454	6	True				
ANR	1068770	ParameterType	fixed		1068454	0					
ANR	1068771	Identifier	yy2		1068454	1					
ANR	1068772	CFGEntryNode	ENTRY		1068454		True				
ANR	1068773	CFGExitNode	EXIT		1068454		True				
ANR	1068774	Symbol	gy2		1068454						
ANR	1068775	Symbol	& fx2		1068454						
ANR	1068776	Symbol	& fx1		1068454						
ANR	1068777	Symbol	oncurve		1068454						
ANR	1068778	Symbol	& fx0		1068454						
ANR	1068779	Symbol	code		1068454						
ANR	1068780	Symbol	yy1		1068454						
ANR	1068781	Symbol	yy0		1068454						
ANR	1068782	Symbol	gx_path_add_curve		1068454						
ANR	1068783	Symbol	yy2		1068454						
ANR	1068784	Symbol	t1_hinter__add_pole		1068454						
ANR	1068785	Symbol	self -> cx		1068454						
ANR	1068786	Symbol	self -> cy		1068454						
ANR	1068787	Symbol	self -> output_path		1068454						
ANR	1068788	Symbol	gx0		1068454						
ANR	1068789	Symbol	fx1		1068454						
ANR	1068790	Symbol	fx0		1068454						
ANR	1068791	Symbol	gx2		1068454						
ANR	1068792	Symbol	gx1		1068454						
ANR	1068793	Symbol	fx2		1068454						
ANR	1068794	Symbol	& fy2		1068454						
ANR	1068795	Symbol	& fy1		1068454						
ANR	1068796	Symbol	self -> path_opened		1068454						
ANR	1068797	Symbol	& fy0		1068454						
ANR	1068798	Symbol	* self		1068454						
ANR	1068799	Symbol	self -> pass_through		1068454						
ANR	1068800	Symbol	xx1		1068454						
ANR	1068801	Symbol	xx0		1068454						
ANR	1068802	Symbol	xx2		1068454						
ANR	1068803	Symbol	offcurve		1068454						
ANR	1068804	Symbol	true		1068454						
ANR	1068805	Symbol	self		1068454						
ANR	1068806	Symbol	fy0		1068454						
ANR	1068807	Symbol	gy1		1068454						
ANR	1068808	Symbol	fy2		1068454						
ANR	1068809	Symbol	gy0		1068454						
ANR	1068810	Symbol	fy1		1068454						
ANR	1068811	Function	t1_hinter__setcurrentpoint	1200:0:49395:50313							
ANR	1068812	FunctionDef	"t1_hinter__setcurrentpoint (t1_hinter * self , fixed xx , fixed yy)"		1068811	0					
ANR	1068813	CompoundStatement		1201:0:49465:50313	1068811	0					
ANR	1068814	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , xx , yy )"	1202:4:49471:49519	1068811	0	True				
ANR	1068815	CallExpression	"t1_hinter__adjust_matrix_precision ( self , xx , yy )"		1068811	0					
ANR	1068816	Callee	t1_hinter__adjust_matrix_precision		1068811	0					
ANR	1068817	Identifier	t1_hinter__adjust_matrix_precision		1068811	0					
ANR	1068818	ArgumentList	self		1068811	1					
ANR	1068819	Argument	self		1068811	0					
ANR	1068820	Identifier	self		1068811	0					
ANR	1068821	Argument	xx		1068811	1					
ANR	1068822	Identifier	xx		1068811	0					
ANR	1068823	Argument	yy		1068811	2					
ANR	1068824	Identifier	yy		1068811	0					
ANR	1068825	IfStatement	if ( self -> FontType != 2 )		1068811	1					
ANR	1068826	Condition	self -> FontType != 2	1203:8:49529:49547	1068811	0	True				
ANR	1068827	EqualityExpression	self -> FontType != 2		1068811	0		!=			
ANR	1068828	PtrMemberAccess	self -> FontType		1068811	0					
ANR	1068829	Identifier	self		1068811	0					
ANR	1068830	Identifier	FontType		1068811	1					
ANR	1068831	PrimaryExpression	2		1068811	1					
ANR	1068832	CompoundStatement		3:29:84:84	1068811	1					
ANR	1068833	ExpressionStatement	self -> cx = xx	1207:8:49678:49691	1068811	0	True				
ANR	1068834	AssignmentExpression	self -> cx = xx		1068811	0		=			
ANR	1068835	PtrMemberAccess	self -> cx		1068811	0					
ANR	1068836	Identifier	self		1068811	0					
ANR	1068837	Identifier	cx		1068811	1					
ANR	1068838	Identifier	xx		1068811	1					
ANR	1068839	ExpressionStatement	self -> cy = yy	1208:8:49701:49714	1068811	1	True				
ANR	1068840	AssignmentExpression	self -> cy = yy		1068811	0		=			
ANR	1068841	PtrMemberAccess	self -> cy		1068811	0					
ANR	1068842	Identifier	self		1068811	0					
ANR	1068843	Identifier	cy		1068811	1					
ANR	1068844	Identifier	yy		1068811	1					
ANR	1068845	ElseStatement	else		1068811	0					
ANR	1068846	IfStatement	if ( self -> cx != xx || self -> cy != yy )		1068811	0					
ANR	1068847	Condition	self -> cx != xx || self -> cy != yy	1209:15:49731:49762	1068811	0	True				
ANR	1068848	OrExpression	self -> cx != xx || self -> cy != yy		1068811	0		||			
ANR	1068849	EqualityExpression	self -> cx != xx		1068811	0		!=			
ANR	1068850	PtrMemberAccess	self -> cx		1068811	0					
ANR	1068851	Identifier	self		1068811	0					
ANR	1068852	Identifier	cx		1068811	1					
ANR	1068853	Identifier	xx		1068811	1					
ANR	1068854	EqualityExpression	self -> cy != yy		1068811	1		!=			
ANR	1068855	PtrMemberAccess	self -> cy		1068811	0					
ANR	1068856	Identifier	self		1068811	0					
ANR	1068857	Identifier	cy		1068811	1					
ANR	1068858	Identifier	yy		1068811	1					
ANR	1068859	CompoundStatement		9:49:299:299	1068811	1					
ANR	1068860	ExpressionStatement	self -> cx = xx	1218:8:50269:50282	1068811	0	True				
ANR	1068861	AssignmentExpression	self -> cx = xx		1068811	0		=			
ANR	1068862	PtrMemberAccess	self -> cx		1068811	0					
ANR	1068863	Identifier	self		1068811	0					
ANR	1068864	Identifier	cx		1068811	1					
ANR	1068865	Identifier	xx		1068811	1					
ANR	1068866	ExpressionStatement	self -> cy = yy	1219:8:50292:50305	1068811	1	True				
ANR	1068867	AssignmentExpression	self -> cy = yy		1068811	0		=			
ANR	1068868	PtrMemberAccess	self -> cy		1068811	0					
ANR	1068869	Identifier	self		1068811	0					
ANR	1068870	Identifier	cy		1068811	1					
ANR	1068871	Identifier	yy		1068811	1					
ANR	1068872	ReturnType	void		1068811	1					
ANR	1068873	Identifier	t1_hinter__setcurrentpoint		1068811	2					
ANR	1068874	ParameterList	"t1_hinter * self , fixed xx , fixed yy"		1068811	3					
ANR	1068875	Parameter	t1_hinter * self	1200:32:49427:49442	1068811	0	True				
ANR	1068876	ParameterType	t1_hinter *		1068811	0					
ANR	1068877	Identifier	self		1068811	1					
ANR	1068878	Parameter	fixed xx	1200:50:49445:49452	1068811	1	True				
ANR	1068879	ParameterType	fixed		1068811	0					
ANR	1068880	Identifier	xx		1068811	1					
ANR	1068881	Parameter	fixed yy	1200:60:49455:49462	1068811	2	True				
ANR	1068882	ParameterType	fixed		1068811	0					
ANR	1068883	Identifier	yy		1068811	1					
ANR	1068884	CFGEntryNode	ENTRY		1068811		True				
ANR	1068885	CFGExitNode	EXIT		1068811		True				
ANR	1068886	Symbol	xx		1068811						
ANR	1068887	Symbol	yy		1068811						
ANR	1068888	Symbol	* self		1068811						
ANR	1068889	Symbol	self -> FontType		1068811						
ANR	1068890	Symbol	self		1068811						
ANR	1068891	Symbol	self -> cx		1068811						
ANR	1068892	Symbol	self -> cy		1068811						
ANR	1068893	Function	t1_hinter__closepath	1223:0:50316:51642							
ANR	1068894	FunctionDef	t1_hinter__closepath (t1_hinter * self)		1068893	0					
ANR	1068895	CompoundStatement		1224:0:50359:51642	1068893	0					
ANR	1068896	IfStatement	if ( self -> pass_through )		1068893	0					
ANR	1068897	Condition	self -> pass_through	1224:7:50367:50384	1068893	0	True				
ANR	1068898	PtrMemberAccess	self -> pass_through		1068893	0					
ANR	1068899	Identifier	self		1068893	0					
ANR	1068900	Identifier	pass_through		1068893	1					
ANR	1068901	CompoundStatement		1:27:27:27	1068893	1					
ANR	1068902	ExpressionStatement	self -> path_opened = false	1225:8:50397:50422	1068893	0	True				
ANR	1068903	AssignmentExpression	self -> path_opened = false		1068893	0		=			
ANR	1068904	PtrMemberAccess	self -> path_opened		1068893	0					
ANR	1068905	Identifier	self		1068893	0					
ANR	1068906	Identifier	path_opened		1068893	1					
ANR	1068907	Identifier	false		1068893	1					
ANR	1068908	ReturnStatement	return gx_path_close_subpath ( self -> output_path ) ;	1226:8:50432:50479	1068893	1	True				
ANR	1068909	CallExpression	gx_path_close_subpath ( self -> output_path )		1068893	0					
ANR	1068910	Callee	gx_path_close_subpath		1068893	0					
ANR	1068911	Identifier	gx_path_close_subpath		1068893	0					
ANR	1068912	ArgumentList	self -> output_path		1068893	1					
ANR	1068913	Argument	self -> output_path		1068893	0					
ANR	1068914	PtrMemberAccess	self -> output_path		1068893	0					
ANR	1068915	Identifier	self		1068893	0					
ANR	1068916	Identifier	output_path		1068893	1					
ANR	1068917	ElseStatement	else		1068893	0					
ANR	1068918	CompoundStatement		5:8:142:200	1068893	0					
ANR	1068919	IdentifierDeclStatement	"int contour_beg = self -> contour [ self -> contour_count ] , code ;"	1228:8:50502:50560	1068893	0	True				
ANR	1068920	IdentifierDecl	contour_beg = self -> contour [ self -> contour_count ]		1068893	0					
ANR	1068921	IdentifierDeclType	int		1068893	0					
ANR	1068922	Identifier	contour_beg		1068893	1					
ANR	1068923	AssignmentExpression	contour_beg = self -> contour [ self -> contour_count ]		1068893	2		=			
ANR	1068924	Identifier	contour_beg		1068893	0					
ANR	1068925	ArrayIndexing	self -> contour [ self -> contour_count ]		1068893	1					
ANR	1068926	PtrMemberAccess	self -> contour		1068893	0					
ANR	1068927	Identifier	self		1068893	0					
ANR	1068928	Identifier	contour		1068893	1					
ANR	1068929	PtrMemberAccess	self -> contour_count		1068893	1					
ANR	1068930	Identifier	self		1068893	0					
ANR	1068931	Identifier	contour_count		1068893	1					
ANR	1068932	IdentifierDecl	code		1068893	1					
ANR	1068933	IdentifierDeclType	int		1068893	0					
ANR	1068934	Identifier	code		1068893	1					
ANR	1068935	IfStatement	if ( contour_beg == self -> pole_count )		1068893	1					
ANR	1068936	Condition	contour_beg == self -> pole_count	1230:12:50575:50605	1068893	0	True				
ANR	1068937	EqualityExpression	contour_beg == self -> pole_count		1068893	0		==			
ANR	1068938	Identifier	contour_beg		1068893	0					
ANR	1068939	PtrMemberAccess	self -> pole_count		1068893	1					
ANR	1068940	Identifier	self		1068893	0					
ANR	1068941	Identifier	pole_count		1068893	1					
ANR	1068942	ReturnStatement	return 0 ;	1231:12:50620:50628	1068893	1	True				
ANR	1068943	PrimaryExpression	0		1068893	0					
ANR	1068944	IfStatement	if ( self -> bx == self -> cx && self -> by == self -> cy )		1068893	2					
ANR	1068945	Condition	self -> bx == self -> cx && self -> by == self -> cy	1232:12:50679:50722	1068893	0	True				
ANR	1068946	AndExpression	self -> bx == self -> cx && self -> by == self -> cy		1068893	0		&&			
ANR	1068947	EqualityExpression	self -> bx == self -> cx		1068893	0		==			
ANR	1068948	PtrMemberAccess	self -> bx		1068893	0					
ANR	1068949	Identifier	self		1068893	0					
ANR	1068950	Identifier	bx		1068893	1					
ANR	1068951	PtrMemberAccess	self -> cx		1068893	1					
ANR	1068952	Identifier	self		1068893	0					
ANR	1068953	Identifier	cx		1068893	1					
ANR	1068954	EqualityExpression	self -> by == self -> cy		1068893	1		==			
ANR	1068955	PtrMemberAccess	self -> by		1068893	0					
ANR	1068956	Identifier	self		1068893	0					
ANR	1068957	Identifier	by		1068893	1					
ANR	1068958	PtrMemberAccess	self -> cy		1068893	1					
ANR	1068959	Identifier	self		1068893	0					
ANR	1068960	Identifier	cy		1068893	1					
ANR	1068961	CompoundStatement		9:58:365:365	1068893	1					
ANR	1068962	ExpressionStatement	self -> pole [ self -> pole_count - 1 ] . type = closepath	1234:12:50789:50838	1068893	0	True				
ANR	1068963	AssignmentExpression	self -> pole [ self -> pole_count - 1 ] . type = closepath		1068893	0		=			
ANR	1068964	MemberAccess	self -> pole [ self -> pole_count - 1 ] . type		1068893	0					
ANR	1068965	ArrayIndexing	self -> pole [ self -> pole_count - 1 ]		1068893	0					
ANR	1068966	PtrMemberAccess	self -> pole		1068893	0					
ANR	1068967	Identifier	self		1068893	0					
ANR	1068968	Identifier	pole		1068893	1					
ANR	1068969	AdditiveExpression	self -> pole_count - 1		1068893	1		-			
ANR	1068970	PtrMemberAccess	self -> pole_count		1068893	0					
ANR	1068971	Identifier	self		1068893	0					
ANR	1068972	Identifier	pole_count		1068893	1					
ANR	1068973	PrimaryExpression	1		1068893	1					
ANR	1068974	Identifier	type		1068893	1					
ANR	1068975	Identifier	closepath		1068893	1					
ANR	1068976	ElseStatement	else		1068893	0					
ANR	1068977	CompoundStatement		13:12:509:558	1068893	0					
ANR	1068978	IdentifierDeclStatement	"t1_glyph_space_coord cx = self -> cx , cy = self -> cy ;"	1236:12:50869:50918	1068893	0	True				
ANR	1068979	IdentifierDecl	cx = self -> cx		1068893	0					
ANR	1068980	IdentifierDeclType	t1_glyph_space_coord		1068893	0					
ANR	1068981	Identifier	cx		1068893	1					
ANR	1068982	AssignmentExpression	cx = self -> cx		1068893	2		=			
ANR	1068983	Identifier	cx		1068893	0					
ANR	1068984	PtrMemberAccess	self -> cx		1068893	1					
ANR	1068985	Identifier	self		1068893	0					
ANR	1068986	Identifier	cx		1068893	1					
ANR	1068987	IdentifierDecl	cy = self -> cy		1068893	1					
ANR	1068988	IdentifierDeclType	t1_glyph_space_coord		1068893	0					
ANR	1068989	Identifier	cy		1068893	1					
ANR	1068990	AssignmentExpression	cy = self -> cy		1068893	2		=			
ANR	1068991	Identifier	cy		1068893	0					
ANR	1068992	PtrMemberAccess	self -> cy		1068893	1					
ANR	1068993	Identifier	self		1068893	0					
ANR	1068994	Identifier	cy		1068893	1					
ANR	1068995	ExpressionStatement	self -> cx = self -> bx	1238:12:50933:50952	1068893	1	True				
ANR	1068996	AssignmentExpression	self -> cx = self -> bx		1068893	0		=			
ANR	1068997	PtrMemberAccess	self -> cx		1068893	0					
ANR	1068998	Identifier	self		1068893	0					
ANR	1068999	Identifier	cx		1068893	1					
ANR	1069000	PtrMemberAccess	self -> bx		1068893	1					
ANR	1069001	Identifier	self		1068893	0					
ANR	1069002	Identifier	bx		1068893	1					
ANR	1069003	ExpressionStatement	self -> cy = self -> by	1239:12:50966:50985	1068893	2	True				
ANR	1069004	AssignmentExpression	self -> cy = self -> by		1068893	0		=			
ANR	1069005	PtrMemberAccess	self -> cy		1068893	0					
ANR	1069006	Identifier	self		1068893	0					
ANR	1069007	Identifier	cy		1068893	1					
ANR	1069008	PtrMemberAccess	self -> by		1068893	1					
ANR	1069009	Identifier	self		1068893	0					
ANR	1069010	Identifier	by		1068893	1					
ANR	1069011	ExpressionStatement	"code = t1_hinter__add_pole ( self , 0 , 0 , closepath )"	1240:12:50999:51048	1068893	3	True				
ANR	1069012	AssignmentExpression	"code = t1_hinter__add_pole ( self , 0 , 0 , closepath )"		1068893	0		=			
ANR	1069013	Identifier	code		1068893	0					
ANR	1069014	CallExpression	"t1_hinter__add_pole ( self , 0 , 0 , closepath )"		1068893	1					
ANR	1069015	Callee	t1_hinter__add_pole		1068893	0					
ANR	1069016	Identifier	t1_hinter__add_pole		1068893	0					
ANR	1069017	ArgumentList	self		1068893	1					
ANR	1069018	Argument	self		1068893	0					
ANR	1069019	Identifier	self		1068893	0					
ANR	1069020	Argument	0		1068893	1					
ANR	1069021	PrimaryExpression	0		1068893	0					
ANR	1069022	Argument	0		1068893	2					
ANR	1069023	PrimaryExpression	0		1068893	0					
ANR	1069024	Argument	closepath		1068893	3					
ANR	1069025	Identifier	closepath		1068893	0					
ANR	1069026	IfStatement	if ( code < 0 )		1068893	4					
ANR	1069027	Condition	code < 0	1241:16:51066:51073	1068893	0	True				
ANR	1069028	RelationalExpression	code < 0		1068893	0		<			
ANR	1069029	Identifier	code		1068893	0					
ANR	1069030	PrimaryExpression	0		1068893	1					
ANR	1069031	ReturnStatement	return code ;	1242:16:51092:51103	1068893	1	True				
ANR	1069032	Identifier	code		1068893	0					
ANR	1069033	ExpressionStatement	self -> cx = cx	1243:12:51117:51130	1068893	5	True				
ANR	1069034	AssignmentExpression	self -> cx = cx		1068893	0		=			
ANR	1069035	PtrMemberAccess	self -> cx		1068893	0					
ANR	1069036	Identifier	self		1068893	0					
ANR	1069037	Identifier	cx		1068893	1					
ANR	1069038	Identifier	cx		1068893	1					
ANR	1069039	ExpressionStatement	self -> cy = cy	1244:12:51144:51157	1068893	6	True				
ANR	1069040	AssignmentExpression	self -> cy = cy		1068893	0		=			
ANR	1069041	PtrMemberAccess	self -> cy		1068893	0					
ANR	1069042	Identifier	self		1068893	0					
ANR	1069043	Identifier	cy		1068893	1					
ANR	1069044	Identifier	cy		1068893	1					
ANR	1069045	ExpressionStatement	self -> contour_count ++	1246:8:51177:51198	1068893	3	True				
ANR	1069046	PostIncDecOperationExpression	self -> contour_count ++		1068893	0					
ANR	1069047	PtrMemberAccess	self -> contour_count		1068893	0					
ANR	1069048	Identifier	self		1068893	0					
ANR	1069049	Identifier	contour_count		1068893	1					
ANR	1069050	IncDec	++		1068893	1					
ANR	1069051	IfStatement	if ( self -> contour_count >= self -> max_contour_count )		1068893	4					
ANR	1069052	Condition	self -> contour_count >= self -> max_contour_count	1247:12:51212:51257	1068893	0	True				
ANR	1069053	RelationalExpression	self -> contour_count >= self -> max_contour_count		1068893	0		>=			
ANR	1069054	PtrMemberAccess	self -> contour_count		1068893	0					
ANR	1069055	Identifier	self		1068893	0					
ANR	1069056	Identifier	contour_count		1068893	1					
ANR	1069057	PtrMemberAccess	self -> max_contour_count		1068893	1					
ANR	1069058	Identifier	self		1068893	0					
ANR	1069059	Identifier	max_contour_count		1068893	1					
ANR	1069060	IfStatement	"if ( t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> contour , self -> contour0 , & self -> max_contour_count , sizeof ( self -> contour0 ) / count_of ( self -> contour0 ) , T1_MAX_CONTOURS , s_contour_array ) )"		1068893	1					
ANR	1069061	Condition	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> contour , self -> contour0 , & self -> max_contour_count , sizeof ( self -> contour0 ) / count_of ( self -> contour0 ) , T1_MAX_CONTOURS , s_contour_array )"	1248:15:51275:51504	1068893	0	True				
ANR	1069062	CallExpression	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> contour , self -> contour0 , & self -> max_contour_count , sizeof ( self -> contour0 ) / count_of ( self -> contour0 ) , T1_MAX_CONTOURS , s_contour_array )"		1068893	0					
ANR	1069063	Callee	t1_hinter__realloc_array		1068893	0					
ANR	1069064	Identifier	t1_hinter__realloc_array		1068893	0					
ANR	1069065	ArgumentList	self -> memory		1068893	1					
ANR	1069066	Argument	self -> memory		1068893	0					
ANR	1069067	PtrMemberAccess	self -> memory		1068893	0					
ANR	1069068	Identifier	self		1068893	0					
ANR	1069069	Identifier	memory		1068893	1					
ANR	1069070	Argument	( void * * ) & self -> contour		1068893	1					
ANR	1069071	CastExpression	( void * * ) & self -> contour		1068893	0					
ANR	1069072	CastTarget	void * *		1068893	0					
ANR	1069073	UnaryOperationExpression	& self -> contour		1068893	1					
ANR	1069074	UnaryOperator	&		1068893	0					
ANR	1069075	PtrMemberAccess	self -> contour		1068893	1					
ANR	1069076	Identifier	self		1068893	0					
ANR	1069077	Identifier	contour		1068893	1					
ANR	1069078	Argument	self -> contour0		1068893	2					
ANR	1069079	PtrMemberAccess	self -> contour0		1068893	0					
ANR	1069080	Identifier	self		1068893	0					
ANR	1069081	Identifier	contour0		1068893	1					
ANR	1069082	Argument	& self -> max_contour_count		1068893	3					
ANR	1069083	UnaryOperationExpression	& self -> max_contour_count		1068893	0					
ANR	1069084	UnaryOperator	&		1068893	0					
ANR	1069085	PtrMemberAccess	self -> max_contour_count		1068893	1					
ANR	1069086	Identifier	self		1068893	0					
ANR	1069087	Identifier	max_contour_count		1068893	1					
ANR	1069088	Argument	sizeof ( self -> contour0 ) / count_of ( self -> contour0 )		1068893	4					
ANR	1069089	MultiplicativeExpression	sizeof ( self -> contour0 ) / count_of ( self -> contour0 )		1068893	0		/			
ANR	1069090	SizeofExpression	sizeof ( self -> contour0 )		1068893	0					
ANR	1069091	Sizeof	sizeof		1068893	0					
ANR	1069092	PtrMemberAccess	self -> contour0		1068893	1					
ANR	1069093	Identifier	self		1068893	0					
ANR	1069094	Identifier	contour0		1068893	1					
ANR	1069095	CallExpression	count_of ( self -> contour0 )		1068893	1					
ANR	1069096	Callee	count_of		1068893	0					
ANR	1069097	Identifier	count_of		1068893	0					
ANR	1069098	ArgumentList	self -> contour0		1068893	1					
ANR	1069099	Argument	self -> contour0		1068893	0					
ANR	1069100	PtrMemberAccess	self -> contour0		1068893	0					
ANR	1069101	Identifier	self		1068893	0					
ANR	1069102	Identifier	contour0		1068893	1					
ANR	1069103	Argument	T1_MAX_CONTOURS		1068893	5					
ANR	1069104	Identifier	T1_MAX_CONTOURS		1068893	0					
ANR	1069105	Argument	s_contour_array		1068893	6					
ANR	1069106	Identifier	s_contour_array		1068893	0					
ANR	1069107	ExpressionStatement	return_error ( gs_error_VMerror )	1250:16:51523:51553	1068893	1	True				
ANR	1069108	CallExpression	return_error ( gs_error_VMerror )		1068893	0					
ANR	1069109	Callee	return_error		1068893	0					
ANR	1069110	Identifier	return_error		1068893	0					
ANR	1069111	ArgumentList	gs_error_VMerror		1068893	1					
ANR	1069112	Argument	gs_error_VMerror		1068893	0					
ANR	1069113	Identifier	gs_error_VMerror		1068893	0					
ANR	1069114	ExpressionStatement	self -> contour [ self -> contour_count ] = self -> pole_count	1251:8:51563:51616	1068893	5	True				
ANR	1069115	AssignmentExpression	self -> contour [ self -> contour_count ] = self -> pole_count		1068893	0		=			
ANR	1069116	ArrayIndexing	self -> contour [ self -> contour_count ]		1068893	0					
ANR	1069117	PtrMemberAccess	self -> contour		1068893	0					
ANR	1069118	Identifier	self		1068893	0					
ANR	1069119	Identifier	contour		1068893	1					
ANR	1069120	PtrMemberAccess	self -> contour_count		1068893	1					
ANR	1069121	Identifier	self		1068893	0					
ANR	1069122	Identifier	contour_count		1068893	1					
ANR	1069123	PtrMemberAccess	self -> pole_count		1068893	1					
ANR	1069124	Identifier	self		1068893	0					
ANR	1069125	Identifier	pole_count		1068893	1					
ANR	1069126	ReturnStatement	return 0 ;	1252:8:51626:51634	1068893	6	True				
ANR	1069127	PrimaryExpression	0		1068893	0					
ANR	1069128	ReturnType	int		1068893	1					
ANR	1069129	Identifier	t1_hinter__closepath		1068893	2					
ANR	1069130	ParameterList	t1_hinter * self		1068893	3					
ANR	1069131	Parameter	t1_hinter * self	1223:25:50341:50356	1068893	0	True				
ANR	1069132	ParameterType	t1_hinter *		1068893	0					
ANR	1069133	Identifier	self		1068893	1					
ANR	1069134	CFGEntryNode	ENTRY		1068893		True				
ANR	1069135	CFGExitNode	EXIT		1068893		True				
ANR	1069136	Symbol	self -> max_contour_count		1068893						
ANR	1069137	Symbol	self -> contour0		1068893						
ANR	1069138	Symbol	code		1068893						
ANR	1069139	Symbol	* self -> pole		1068893						
ANR	1069140	Symbol	& self -> contour		1068893						
ANR	1069141	Symbol	self -> pole_count		1068893						
ANR	1069142	Symbol	T1_MAX_CONTOURS		1068893						
ANR	1069143	Symbol	t1_hinter__realloc_array		1068893						
ANR	1069144	Symbol	s_contour_array		1068893						
ANR	1069145	Symbol	self -> pole [ self -> pole_count - 1 ] . type		1068893						
ANR	1069146	Symbol	gx_path_close_subpath		1068893						
ANR	1069147	Symbol	self -> memory		1068893						
ANR	1069148	Symbol	t1_hinter__add_pole		1068893						
ANR	1069149	Symbol	count_of		1068893						
ANR	1069150	Symbol	closepath		1068893						
ANR	1069151	Symbol	self -> cx		1068893						
ANR	1069152	Symbol	self -> pole		1068893						
ANR	1069153	Symbol	self -> cy		1068893						
ANR	1069154	Symbol	self -> output_path		1068893						
ANR	1069155	Symbol	& self -> max_contour_count		1068893						
ANR	1069156	Symbol	* self -> contour_count		1068893						
ANR	1069157	Symbol	* self -> contour		1068893						
ANR	1069158	Symbol	self -> path_opened		1068893						
ANR	1069159	Symbol	self -> contour_count		1068893						
ANR	1069160	Symbol	* * self		1068893						
ANR	1069161	Symbol	* self		1068893						
ANR	1069162	Symbol	* self -> pole_count		1068893						
ANR	1069163	Symbol	false		1068893						
ANR	1069164	Symbol	self -> pass_through		1068893						
ANR	1069165	Symbol	self -> contour		1068893						
ANR	1069166	Symbol	gs_error_VMerror		1068893						
ANR	1069167	Symbol	cx		1068893						
ANR	1069168	Symbol	cy		1068893						
ANR	1069169	Symbol	contour_beg		1068893						
ANR	1069170	Symbol	self -> by		1068893						
ANR	1069171	Symbol	self		1068893						
ANR	1069172	Symbol	self -> bx		1068893						
ANR	1069173	Function	t1_hinter__end_subglyph	1256:0:51645:52193							
ANR	1069174	FunctionDef	t1_hinter__end_subglyph (t1_hinter * self)		1069173	0					
ANR	1069175	CompoundStatement		1257:0:51691:52193	1069173	0					
ANR	1069176	IfStatement	if ( self -> pass_through )		1069173	0					
ANR	1069177	Condition	self -> pass_through	1258:8:51701:51718	1069173	0	True				
ANR	1069178	PtrMemberAccess	self -> pass_through		1069173	0					
ANR	1069179	Identifier	self		1069173	0					
ANR	1069180	Identifier	pass_through		1069173	1					
ANR	1069181	ReturnStatement	return 0 ;	1259:8:51729:51737	1069173	1	True				
ANR	1069182	PrimaryExpression	0		1069173	0					
ANR	1069183	ExpressionStatement	self -> subglyph_count ++	1260:4:51743:51765	1069173	1	True				
ANR	1069184	PostIncDecOperationExpression	self -> subglyph_count ++		1069173	0					
ANR	1069185	PtrMemberAccess	self -> subglyph_count		1069173	0					
ANR	1069186	Identifier	self		1069173	0					
ANR	1069187	Identifier	subglyph_count		1069173	1					
ANR	1069188	IncDec	++		1069173	1					
ANR	1069189	IfStatement	if ( self -> subglyph_count >= self -> max_subglyph_count )		1069173	2					
ANR	1069190	Condition	self -> subglyph_count >= self -> max_subglyph_count	1261:8:51775:51822	1069173	0	True				
ANR	1069191	RelationalExpression	self -> subglyph_count >= self -> max_subglyph_count		1069173	0		>=			
ANR	1069192	PtrMemberAccess	self -> subglyph_count		1069173	0					
ANR	1069193	Identifier	self		1069173	0					
ANR	1069194	Identifier	subglyph_count		1069173	1					
ANR	1069195	PtrMemberAccess	self -> max_subglyph_count		1069173	1					
ANR	1069196	Identifier	self		1069173	0					
ANR	1069197	Identifier	max_subglyph_count		1069173	1					
ANR	1069198	IfStatement	"if ( t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> subglyph , self -> subglyph0 , & self -> max_subglyph_count , sizeof ( self -> subglyph0 ) / count_of ( self -> subglyph0 ) , T1_MAX_SUBGLYPHS , s_subglyph_array ) )"		1069173	1					
ANR	1069199	Condition	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> subglyph , self -> subglyph0 , & self -> max_subglyph_count , sizeof ( self -> subglyph0 ) / count_of ( self -> subglyph0 ) , T1_MAX_SUBGLYPHS , s_subglyph_array )"	1262:11:51836:52068	1069173	0	True				
ANR	1069200	CallExpression	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> subglyph , self -> subglyph0 , & self -> max_subglyph_count , sizeof ( self -> subglyph0 ) / count_of ( self -> subglyph0 ) , T1_MAX_SUBGLYPHS , s_subglyph_array )"		1069173	0					
ANR	1069201	Callee	t1_hinter__realloc_array		1069173	0					
ANR	1069202	Identifier	t1_hinter__realloc_array		1069173	0					
ANR	1069203	ArgumentList	self -> memory		1069173	1					
ANR	1069204	Argument	self -> memory		1069173	0					
ANR	1069205	PtrMemberAccess	self -> memory		1069173	0					
ANR	1069206	Identifier	self		1069173	0					
ANR	1069207	Identifier	memory		1069173	1					
ANR	1069208	Argument	( void * * ) & self -> subglyph		1069173	1					
ANR	1069209	CastExpression	( void * * ) & self -> subglyph		1069173	0					
ANR	1069210	CastTarget	void * *		1069173	0					
ANR	1069211	UnaryOperationExpression	& self -> subglyph		1069173	1					
ANR	1069212	UnaryOperator	&		1069173	0					
ANR	1069213	PtrMemberAccess	self -> subglyph		1069173	1					
ANR	1069214	Identifier	self		1069173	0					
ANR	1069215	Identifier	subglyph		1069173	1					
ANR	1069216	Argument	self -> subglyph0		1069173	2					
ANR	1069217	PtrMemberAccess	self -> subglyph0		1069173	0					
ANR	1069218	Identifier	self		1069173	0					
ANR	1069219	Identifier	subglyph0		1069173	1					
ANR	1069220	Argument	& self -> max_subglyph_count		1069173	3					
ANR	1069221	UnaryOperationExpression	& self -> max_subglyph_count		1069173	0					
ANR	1069222	UnaryOperator	&		1069173	0					
ANR	1069223	PtrMemberAccess	self -> max_subglyph_count		1069173	1					
ANR	1069224	Identifier	self		1069173	0					
ANR	1069225	Identifier	max_subglyph_count		1069173	1					
ANR	1069226	Argument	sizeof ( self -> subglyph0 ) / count_of ( self -> subglyph0 )		1069173	4					
ANR	1069227	MultiplicativeExpression	sizeof ( self -> subglyph0 ) / count_of ( self -> subglyph0 )		1069173	0		/			
ANR	1069228	SizeofExpression	sizeof ( self -> subglyph0 )		1069173	0					
ANR	1069229	Sizeof	sizeof		1069173	0					
ANR	1069230	PtrMemberAccess	self -> subglyph0		1069173	1					
ANR	1069231	Identifier	self		1069173	0					
ANR	1069232	Identifier	subglyph0		1069173	1					
ANR	1069233	CallExpression	count_of ( self -> subglyph0 )		1069173	1					
ANR	1069234	Callee	count_of		1069173	0					
ANR	1069235	Identifier	count_of		1069173	0					
ANR	1069236	ArgumentList	self -> subglyph0		1069173	1					
ANR	1069237	Argument	self -> subglyph0		1069173	0					
ANR	1069238	PtrMemberAccess	self -> subglyph0		1069173	0					
ANR	1069239	Identifier	self		1069173	0					
ANR	1069240	Identifier	subglyph0		1069173	1					
ANR	1069241	Argument	T1_MAX_SUBGLYPHS		1069173	5					
ANR	1069242	Identifier	T1_MAX_SUBGLYPHS		1069173	0					
ANR	1069243	Argument	s_subglyph_array		1069173	6					
ANR	1069244	Identifier	s_subglyph_array		1069173	0					
ANR	1069245	ExpressionStatement	return_error ( gs_error_VMerror )	1264:12:52083:52113	1069173	1	True				
ANR	1069246	CallExpression	return_error ( gs_error_VMerror )		1069173	0					
ANR	1069247	Callee	return_error		1069173	0					
ANR	1069248	Identifier	return_error		1069173	0					
ANR	1069249	ArgumentList	gs_error_VMerror		1069173	1					
ANR	1069250	Argument	gs_error_VMerror		1069173	0					
ANR	1069251	Identifier	gs_error_VMerror		1069173	0					
ANR	1069252	ExpressionStatement	self -> subglyph [ self -> subglyph_count ] = self -> contour_count	1265:4:52119:52177	1069173	3	True				
ANR	1069253	AssignmentExpression	self -> subglyph [ self -> subglyph_count ] = self -> contour_count		1069173	0		=			
ANR	1069254	ArrayIndexing	self -> subglyph [ self -> subglyph_count ]		1069173	0					
ANR	1069255	PtrMemberAccess	self -> subglyph		1069173	0					
ANR	1069256	Identifier	self		1069173	0					
ANR	1069257	Identifier	subglyph		1069173	1					
ANR	1069258	PtrMemberAccess	self -> subglyph_count		1069173	1					
ANR	1069259	Identifier	self		1069173	0					
ANR	1069260	Identifier	subglyph_count		1069173	1					
ANR	1069261	PtrMemberAccess	self -> contour_count		1069173	1					
ANR	1069262	Identifier	self		1069173	0					
ANR	1069263	Identifier	contour_count		1069173	1					
ANR	1069264	ReturnStatement	return 0 ;	1266:4:52183:52191	1069173	4	True				
ANR	1069265	PrimaryExpression	0		1069173	0					
ANR	1069266	ReturnType	int		1069173	1					
ANR	1069267	Identifier	t1_hinter__end_subglyph		1069173	2					
ANR	1069268	ParameterList	t1_hinter * self		1069173	3					
ANR	1069269	Parameter	t1_hinter * self	1256:28:51673:51688	1069173	0	True				
ANR	1069270	ParameterType	t1_hinter *		1069173	0					
ANR	1069271	Identifier	self		1069173	1					
ANR	1069272	CFGEntryNode	ENTRY		1069173		True				
ANR	1069273	CFGExitNode	EXIT		1069173		True				
ANR	1069274	Symbol	* self -> subglyph_count		1069173						
ANR	1069275	Symbol	& self -> max_subglyph_count		1069173						
ANR	1069276	Symbol	self -> contour_count		1069173						
ANR	1069277	Symbol	* * self		1069173						
ANR	1069278	Symbol	* self		1069173						
ANR	1069279	Symbol	t1_hinter__realloc_array		1069173						
ANR	1069280	Symbol	self -> subglyph0		1069173						
ANR	1069281	Symbol	self -> pass_through		1069173						
ANR	1069282	Symbol	self -> subglyph_count		1069173						
ANR	1069283	Symbol	self -> memory		1069173						
ANR	1069284	Symbol	gs_error_VMerror		1069173						
ANR	1069285	Symbol	self -> subglyph		1069173						
ANR	1069286	Symbol	count_of		1069173						
ANR	1069287	Symbol	s_subglyph_array		1069173						
ANR	1069288	Symbol	T1_MAX_SUBGLYPHS		1069173						
ANR	1069289	Symbol	self -> max_subglyph_count		1069173						
ANR	1069290	Symbol	& self -> subglyph		1069173						
ANR	1069291	Symbol	self		1069173						
ANR	1069292	Symbol	* self -> subglyph		1069173						
ANR	1069293	Function	t1_hinter__can_add_hint	1269:0:52196:52641							
ANR	1069294	FunctionDef	"t1_hinter__can_add_hint (t1_hinter * self , t1_hint * * hint)"		1069293	0					
ANR	1069295	CompoundStatement		1270:0:52272:52641	1069293	0					
ANR	1069296	IfStatement	if ( self -> hint_count >= self -> max_hint_count )		1069293	0					
ANR	1069297	Condition	self -> hint_count >= self -> max_hint_count	1270:7:52280:52319	1069293	0	True				
ANR	1069298	RelationalExpression	self -> hint_count >= self -> max_hint_count		1069293	0		>=			
ANR	1069299	PtrMemberAccess	self -> hint_count		1069293	0					
ANR	1069300	Identifier	self		1069293	0					
ANR	1069301	Identifier	hint_count		1069293	1					
ANR	1069302	PtrMemberAccess	self -> max_hint_count		1069293	1					
ANR	1069303	Identifier	self		1069293	0					
ANR	1069304	Identifier	max_hint_count		1069293	1					
ANR	1069305	IfStatement	"if ( t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint , self -> hint0 , & self -> max_hint_count , sizeof ( self -> hint0 ) / count_of ( self -> hint0 ) , T1_MAX_HINTS , s_hint_array ) )"		1069293	1					
ANR	1069306	Condition	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint , self -> hint0 , & self -> max_hint_count , sizeof ( self -> hint0 ) / count_of ( self -> hint0 ) , T1_MAX_HINTS , s_hint_array )"	1271:11:52333:52537	1069293	0	True				
ANR	1069307	CallExpression	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint , self -> hint0 , & self -> max_hint_count , sizeof ( self -> hint0 ) / count_of ( self -> hint0 ) , T1_MAX_HINTS , s_hint_array )"		1069293	0					
ANR	1069308	Callee	t1_hinter__realloc_array		1069293	0					
ANR	1069309	Identifier	t1_hinter__realloc_array		1069293	0					
ANR	1069310	ArgumentList	self -> memory		1069293	1					
ANR	1069311	Argument	self -> memory		1069293	0					
ANR	1069312	PtrMemberAccess	self -> memory		1069293	0					
ANR	1069313	Identifier	self		1069293	0					
ANR	1069314	Identifier	memory		1069293	1					
ANR	1069315	Argument	( void * * ) & self -> hint		1069293	1					
ANR	1069316	CastExpression	( void * * ) & self -> hint		1069293	0					
ANR	1069317	CastTarget	void * *		1069293	0					
ANR	1069318	UnaryOperationExpression	& self -> hint		1069293	1					
ANR	1069319	UnaryOperator	&		1069293	0					
ANR	1069320	PtrMemberAccess	self -> hint		1069293	1					
ANR	1069321	Identifier	self		1069293	0					
ANR	1069322	Identifier	hint		1069293	1					
ANR	1069323	Argument	self -> hint0		1069293	2					
ANR	1069324	PtrMemberAccess	self -> hint0		1069293	0					
ANR	1069325	Identifier	self		1069293	0					
ANR	1069326	Identifier	hint0		1069293	1					
ANR	1069327	Argument	& self -> max_hint_count		1069293	3					
ANR	1069328	UnaryOperationExpression	& self -> max_hint_count		1069293	0					
ANR	1069329	UnaryOperator	&		1069293	0					
ANR	1069330	PtrMemberAccess	self -> max_hint_count		1069293	1					
ANR	1069331	Identifier	self		1069293	0					
ANR	1069332	Identifier	max_hint_count		1069293	1					
ANR	1069333	Argument	sizeof ( self -> hint0 ) / count_of ( self -> hint0 )		1069293	4					
ANR	1069334	MultiplicativeExpression	sizeof ( self -> hint0 ) / count_of ( self -> hint0 )		1069293	0		/			
ANR	1069335	SizeofExpression	sizeof ( self -> hint0 )		1069293	0					
ANR	1069336	Sizeof	sizeof		1069293	0					
ANR	1069337	PtrMemberAccess	self -> hint0		1069293	1					
ANR	1069338	Identifier	self		1069293	0					
ANR	1069339	Identifier	hint0		1069293	1					
ANR	1069340	CallExpression	count_of ( self -> hint0 )		1069293	1					
ANR	1069341	Callee	count_of		1069293	0					
ANR	1069342	Identifier	count_of		1069293	0					
ANR	1069343	ArgumentList	self -> hint0		1069293	1					
ANR	1069344	Argument	self -> hint0		1069293	0					
ANR	1069345	PtrMemberAccess	self -> hint0		1069293	0					
ANR	1069346	Identifier	self		1069293	0					
ANR	1069347	Identifier	hint0		1069293	1					
ANR	1069348	Argument	T1_MAX_HINTS		1069293	5					
ANR	1069349	Identifier	T1_MAX_HINTS		1069293	0					
ANR	1069350	Argument	s_hint_array		1069293	6					
ANR	1069351	Identifier	s_hint_array		1069293	0					
ANR	1069352	ExpressionStatement	return_error ( gs_error_VMerror )	1273:12:52552:52582	1069293	1	True				
ANR	1069353	CallExpression	return_error ( gs_error_VMerror )		1069293	0					
ANR	1069354	Callee	return_error		1069293	0					
ANR	1069355	Identifier	return_error		1069293	0					
ANR	1069356	ArgumentList	gs_error_VMerror		1069293	1					
ANR	1069357	Argument	gs_error_VMerror		1069293	0					
ANR	1069358	Identifier	gs_error_VMerror		1069293	0					
ANR	1069359	ExpressionStatement	* hint = & self -> hint [ self -> hint_count ]	1274:4:52588:52625	1069293	1	True				
ANR	1069360	AssignmentExpression	* hint = & self -> hint [ self -> hint_count ]		1069293	0		=			
ANR	1069361	UnaryOperationExpression	* hint		1069293	0					
ANR	1069362	UnaryOperator	*		1069293	0					
ANR	1069363	Identifier	hint		1069293	1					
ANR	1069364	UnaryOperationExpression	& self -> hint [ self -> hint_count ]		1069293	1					
ANR	1069365	UnaryOperator	&		1069293	0					
ANR	1069366	ArrayIndexing	self -> hint [ self -> hint_count ]		1069293	1					
ANR	1069367	PtrMemberAccess	self -> hint		1069293	0					
ANR	1069368	Identifier	self		1069293	0					
ANR	1069369	Identifier	hint		1069293	1					
ANR	1069370	PtrMemberAccess	self -> hint_count		1069293	1					
ANR	1069371	Identifier	self		1069293	0					
ANR	1069372	Identifier	hint_count		1069293	1					
ANR	1069373	ReturnStatement	return 0 ;	1275:4:52631:52639	1069293	2	True				
ANR	1069374	PrimaryExpression	0		1069293	0					
ANR	1069375	ReturnType	static inline int		1069293	1					
ANR	1069376	Identifier	t1_hinter__can_add_hint		1069293	2					
ANR	1069377	ParameterList	"t1_hinter * self , t1_hint * * hint"		1069293	3					
ANR	1069378	Parameter	t1_hinter * self	1269:42:52238:52253	1069293	0	True				
ANR	1069379	ParameterType	t1_hinter *		1069293	0					
ANR	1069380	Identifier	self		1069293	1					
ANR	1069381	Parameter	t1_hint * * hint	1269:60:52256:52269	1069293	1	True				
ANR	1069382	ParameterType	t1_hint * *		1069293	0					
ANR	1069383	Identifier	hint		1069293	1					
ANR	1069384	CFGEntryNode	ENTRY		1069293		True				
ANR	1069385	CFGExitNode	EXIT		1069293		True				
ANR	1069386	Symbol	* hint		1069293						
ANR	1069387	Symbol	T1_MAX_HINTS		1069293						
ANR	1069388	Symbol	self -> hint		1069293						
ANR	1069389	Symbol	* self		1069293						
ANR	1069390	Symbol	t1_hinter__realloc_array		1069293						
ANR	1069391	Symbol	self -> max_hint_count		1069293						
ANR	1069392	Symbol	& self -> hint		1069293						
ANR	1069393	Symbol	self -> memory		1069293						
ANR	1069394	Symbol	gs_error_VMerror		1069293						
ANR	1069395	Symbol	self -> hint_count		1069293						
ANR	1069396	Symbol	& self -> max_hint_count		1069293						
ANR	1069397	Symbol	count_of		1069293						
ANR	1069398	Symbol	self -> hint0		1069293						
ANR	1069399	Symbol	hint		1069293						
ANR	1069400	Symbol	self		1069293						
ANR	1069401	Symbol	s_hint_array		1069293						
ANR	1069402	Function	t1_hinter__flex_beg	1278:0:52644:52902							
ANR	1069403	FunctionDef	t1_hinter__flex_beg (t1_hinter * self)		1069402	0					
ANR	1069404	CompoundStatement		1279:0:52686:52902	1069402	0					
ANR	1069405	IfStatement	if ( self -> flex_count != 0 )		1069402	0					
ANR	1069406	Condition	self -> flex_count != 0	1279:7:52694:52714	1069402	0	True				
ANR	1069407	EqualityExpression	self -> flex_count != 0		1069402	0		!=			
ANR	1069408	PtrMemberAccess	self -> flex_count		1069402	0					
ANR	1069409	Identifier	self		1069402	0					
ANR	1069410	Identifier	flex_count		1069402	1					
ANR	1069411	PrimaryExpression	0		1069402	1					
ANR	1069412	ExpressionStatement	return_error ( gs_error_invalidfont )	1280:8:52725:52759	1069402	1	True				
ANR	1069413	CallExpression	return_error ( gs_error_invalidfont )		1069402	0					
ANR	1069414	Callee	return_error		1069402	0					
ANR	1069415	Identifier	return_error		1069402	0					
ANR	1069416	ArgumentList	gs_error_invalidfont		1069402	1					
ANR	1069417	Argument	gs_error_invalidfont		1069402	0					
ANR	1069418	Identifier	gs_error_invalidfont		1069402	0					
ANR	1069419	ExpressionStatement	self -> flex_count ++	1281:4:52765:52783	1069402	1	True				
ANR	1069420	PostIncDecOperationExpression	self -> flex_count ++		1069402	0					
ANR	1069421	PtrMemberAccess	self -> flex_count		1069402	0					
ANR	1069422	Identifier	self		1069402	0					
ANR	1069423	Identifier	flex_count		1069402	1					
ANR	1069424	IncDec	++		1069402	1					
ANR	1069425	ExpressionStatement	self -> have_flex = true	1282:4:52789:52811	1069402	2	True				
ANR	1069426	AssignmentExpression	self -> have_flex = true		1069402	0		=			
ANR	1069427	PtrMemberAccess	self -> have_flex		1069402	0					
ANR	1069428	Identifier	self		1069402	0					
ANR	1069429	Identifier	have_flex		1069402	1					
ANR	1069430	Identifier	true		1069402	1					
ANR	1069431	IfStatement	if ( self -> pass_through )		1069402	3					
ANR	1069432	Condition	self -> pass_through	1283:8:52821:52838	1069402	0	True				
ANR	1069433	PtrMemberAccess	self -> pass_through		1069402	0					
ANR	1069434	Identifier	self		1069402	0					
ANR	1069435	Identifier	pass_through		1069402	1					
ANR	1069436	ReturnStatement	"return t1_hinter__rmoveto ( self , 0 , 0 ) ;"	1284:8:52849:52886	1069402	1	True				
ANR	1069437	CallExpression	"t1_hinter__rmoveto ( self , 0 , 0 )"		1069402	0					
ANR	1069438	Callee	t1_hinter__rmoveto		1069402	0					
ANR	1069439	Identifier	t1_hinter__rmoveto		1069402	0					
ANR	1069440	ArgumentList	self		1069402	1					
ANR	1069441	Argument	self		1069402	0					
ANR	1069442	Identifier	self		1069402	0					
ANR	1069443	Argument	0		1069402	1					
ANR	1069444	PrimaryExpression	0		1069402	0					
ANR	1069445	Argument	0		1069402	2					
ANR	1069446	PrimaryExpression	0		1069402	0					
ANR	1069447	ReturnStatement	return 0 ;	1285:4:52892:52900	1069402	4	True				
ANR	1069448	PrimaryExpression	0		1069402	0					
ANR	1069449	ReturnType	int		1069402	1					
ANR	1069450	Identifier	t1_hinter__flex_beg		1069402	2					
ANR	1069451	ParameterList	t1_hinter * self		1069402	3					
ANR	1069452	Parameter	t1_hinter * self	1278:24:52668:52683	1069402	0	True				
ANR	1069453	ParameterType	t1_hinter *		1069402	0					
ANR	1069454	Identifier	self		1069402	1					
ANR	1069455	CFGEntryNode	ENTRY		1069402		True				
ANR	1069456	CFGExitNode	EXIT		1069402		True				
ANR	1069457	Symbol	* self		1069402						
ANR	1069458	Symbol	true		1069402						
ANR	1069459	Symbol	self		1069402						
ANR	1069460	Symbol	self -> pass_through		1069402						
ANR	1069461	Symbol	t1_hinter__rmoveto		1069402						
ANR	1069462	Symbol	self -> flex_count		1069402						
ANR	1069463	Symbol	gs_error_invalidfont		1069402						
ANR	1069464	Symbol	self -> have_flex		1069402						
ANR	1069465	Function	t1_hinter__flex_point	1288:0:52905:53062							
ANR	1069466	FunctionDef	t1_hinter__flex_point (t1_hinter * self)		1069465	0					
ANR	1069467	CompoundStatement		1289:0:52949:53062	1069465	0					
ANR	1069468	IfStatement	if ( self -> flex_count == 0 )		1069465	0					
ANR	1069469	Condition	self -> flex_count == 0	1289:7:52957:52977	1069465	0	True				
ANR	1069470	EqualityExpression	self -> flex_count == 0		1069465	0		==			
ANR	1069471	PtrMemberAccess	self -> flex_count		1069465	0					
ANR	1069472	Identifier	self		1069465	0					
ANR	1069473	Identifier	flex_count		1069465	1					
ANR	1069474	PrimaryExpression	0		1069465	1					
ANR	1069475	ExpressionStatement	return_error ( gs_error_invalidfont )	1290:8:52988:53022	1069465	1	True				
ANR	1069476	CallExpression	return_error ( gs_error_invalidfont )		1069465	0					
ANR	1069477	Callee	return_error		1069465	0					
ANR	1069478	Identifier	return_error		1069465	0					
ANR	1069479	ArgumentList	gs_error_invalidfont		1069465	1					
ANR	1069480	Argument	gs_error_invalidfont		1069465	0					
ANR	1069481	Identifier	gs_error_invalidfont		1069465	0					
ANR	1069482	ExpressionStatement	self -> flex_count ++	1291:4:53028:53046	1069465	1	True				
ANR	1069483	PostIncDecOperationExpression	self -> flex_count ++		1069465	0					
ANR	1069484	PtrMemberAccess	self -> flex_count		1069465	0					
ANR	1069485	Identifier	self		1069465	0					
ANR	1069486	Identifier	flex_count		1069465	1					
ANR	1069487	IncDec	++		1069465	1					
ANR	1069488	ReturnStatement	return 0 ;	1292:4:53052:53060	1069465	2	True				
ANR	1069489	PrimaryExpression	0		1069465	0					
ANR	1069490	ReturnType	int		1069465	1					
ANR	1069491	Identifier	t1_hinter__flex_point		1069465	2					
ANR	1069492	ParameterList	t1_hinter * self		1069465	3					
ANR	1069493	Parameter	t1_hinter * self	1288:26:52931:52946	1069465	0	True				
ANR	1069494	ParameterType	t1_hinter *		1069465	0					
ANR	1069495	Identifier	self		1069465	1					
ANR	1069496	CFGEntryNode	ENTRY		1069465		True				
ANR	1069497	CFGExitNode	EXIT		1069465		True				
ANR	1069498	Symbol	* self		1069465						
ANR	1069499	Symbol	self		1069465						
ANR	1069500	Symbol	self -> flex_count		1069465						
ANR	1069501	Symbol	gs_error_invalidfont		1069465						
ANR	1069502	Function	t1_hinter__flex_end	1295:0:53065:55403							
ANR	1069503	FunctionDef	"t1_hinter__flex_end (t1_hinter * self , fixed flex_height)"		1069502	0					
ANR	1069504	CompoundStatement		1296:0:53126:55403	1069502	0					
ANR	1069505	IdentifierDeclStatement	"t1_pole * pole0 , * pole1 , * pole4 ;"	1296:3:53130:53160	1069502	0	True				
ANR	1069506	IdentifierDecl	* pole0		1069502	0					
ANR	1069507	IdentifierDeclType	t1_pole *		1069502	0					
ANR	1069508	Identifier	pole0		1069502	1					
ANR	1069509	IdentifierDecl	* pole1		1069502	1					
ANR	1069510	IdentifierDeclType	t1_pole *		1069502	0					
ANR	1069511	Identifier	pole1		1069502	1					
ANR	1069512	IdentifierDecl	* pole4		1069502	2					
ANR	1069513	IdentifierDeclType	t1_pole *		1069502	0					
ANR	1069514	Identifier	pole4		1069502	1					
ANR	1069515	IdentifierDeclStatement	"t1_hinter_space_coord ox , oy ;"	1297:4:53166:53194	1069502	1	True				
ANR	1069516	IdentifierDecl	ox		1069502	0					
ANR	1069517	IdentifierDeclType	t1_hinter_space_coord		1069502	0					
ANR	1069518	Identifier	ox		1069502	1					
ANR	1069519	IdentifierDecl	oy		1069502	1					
ANR	1069520	IdentifierDeclType	t1_hinter_space_coord		1069502	0					
ANR	1069521	Identifier	oy		1069502	1					
ANR	1069522	IdentifierDeclStatement	const int32_t div_x = self -> g2o_fraction << self -> log2_pixels_x ;	1298:4:53200:53263	1069502	2	True				
ANR	1069523	IdentifierDecl	div_x = self -> g2o_fraction << self -> log2_pixels_x		1069502	0					
ANR	1069524	IdentifierDeclType	const int32_t		1069502	0					
ANR	1069525	Identifier	div_x		1069502	1					
ANR	1069526	AssignmentExpression	div_x = self -> g2o_fraction << self -> log2_pixels_x		1069502	2		=			
ANR	1069527	Identifier	div_x		1069502	0					
ANR	1069528	ShiftExpression	self -> g2o_fraction << self -> log2_pixels_x		1069502	1		<<			
ANR	1069529	PtrMemberAccess	self -> g2o_fraction		1069502	0					
ANR	1069530	Identifier	self		1069502	0					
ANR	1069531	Identifier	g2o_fraction		1069502	1					
ANR	1069532	PtrMemberAccess	self -> log2_pixels_x		1069502	1					
ANR	1069533	Identifier	self		1069502	0					
ANR	1069534	Identifier	log2_pixels_x		1069502	1					
ANR	1069535	IdentifierDeclStatement	const int32_t div_y = self -> g2o_fraction << self -> log2_pixels_y ;	1299:4:53269:53332	1069502	3	True				
ANR	1069536	IdentifierDecl	div_y = self -> g2o_fraction << self -> log2_pixels_y		1069502	0					
ANR	1069537	IdentifierDeclType	const int32_t		1069502	0					
ANR	1069538	Identifier	div_y		1069502	1					
ANR	1069539	AssignmentExpression	div_y = self -> g2o_fraction << self -> log2_pixels_y		1069502	2		=			
ANR	1069540	Identifier	div_y		1069502	0					
ANR	1069541	ShiftExpression	self -> g2o_fraction << self -> log2_pixels_y		1069502	1		<<			
ANR	1069542	PtrMemberAccess	self -> g2o_fraction		1069502	0					
ANR	1069543	Identifier	self		1069502	0					
ANR	1069544	Identifier	g2o_fraction		1069502	1					
ANR	1069545	PtrMemberAccess	self -> log2_pixels_y		1069502	1					
ANR	1069546	Identifier	self		1069502	0					
ANR	1069547	Identifier	log2_pixels_y		1069502	1					
ANR	1069548	IfStatement	if ( self -> flex_count != 8 )		1069502	4					
ANR	1069549	Condition	self -> flex_count != 8	1301:8:53343:53363	1069502	0	True				
ANR	1069550	EqualityExpression	self -> flex_count != 8		1069502	0		!=			
ANR	1069551	PtrMemberAccess	self -> flex_count		1069502	0					
ANR	1069552	Identifier	self		1069502	0					
ANR	1069553	Identifier	flex_count		1069502	1					
ANR	1069554	PrimaryExpression	8		1069502	1					
ANR	1069555	ExpressionStatement	return_error ( gs_error_invalidfont )	1302:8:53374:53408	1069502	1	True				
ANR	1069556	CallExpression	return_error ( gs_error_invalidfont )		1069502	0					
ANR	1069557	Callee	return_error		1069502	0					
ANR	1069558	Identifier	return_error		1069502	0					
ANR	1069559	ArgumentList	gs_error_invalidfont		1069502	1					
ANR	1069560	Argument	gs_error_invalidfont		1069502	0					
ANR	1069561	Identifier	gs_error_invalidfont		1069502	0					
ANR	1069562	ExpressionStatement	pole0 = & self -> pole [ self -> pole_count - 8 ]	1304:4:53469:53510	1069502	5	True				
ANR	1069563	AssignmentExpression	pole0 = & self -> pole [ self -> pole_count - 8 ]		1069502	0		=			
ANR	1069564	Identifier	pole0		1069502	0					
ANR	1069565	UnaryOperationExpression	& self -> pole [ self -> pole_count - 8 ]		1069502	1					
ANR	1069566	UnaryOperator	&		1069502	0					
ANR	1069567	ArrayIndexing	self -> pole [ self -> pole_count - 8 ]		1069502	1					
ANR	1069568	PtrMemberAccess	self -> pole		1069502	0					
ANR	1069569	Identifier	self		1069502	0					
ANR	1069570	Identifier	pole		1069502	1					
ANR	1069571	AdditiveExpression	self -> pole_count - 8		1069502	1		-			
ANR	1069572	PtrMemberAccess	self -> pole_count		1069502	0					
ANR	1069573	Identifier	self		1069502	0					
ANR	1069574	Identifier	pole_count		1069502	1					
ANR	1069575	PrimaryExpression	8		1069502	1					
ANR	1069576	ExpressionStatement	pole1 = & self -> pole [ self -> pole_count - 7 ]	1305:4:53516:53557	1069502	6	True				
ANR	1069577	AssignmentExpression	pole1 = & self -> pole [ self -> pole_count - 7 ]		1069502	0		=			
ANR	1069578	Identifier	pole1		1069502	0					
ANR	1069579	UnaryOperationExpression	& self -> pole [ self -> pole_count - 7 ]		1069502	1					
ANR	1069580	UnaryOperator	&		1069502	0					
ANR	1069581	ArrayIndexing	self -> pole [ self -> pole_count - 7 ]		1069502	1					
ANR	1069582	PtrMemberAccess	self -> pole		1069502	0					
ANR	1069583	Identifier	self		1069502	0					
ANR	1069584	Identifier	pole		1069502	1					
ANR	1069585	AdditiveExpression	self -> pole_count - 7		1069502	1		-			
ANR	1069586	PtrMemberAccess	self -> pole_count		1069502	0					
ANR	1069587	Identifier	self		1069502	0					
ANR	1069588	Identifier	pole_count		1069502	1					
ANR	1069589	PrimaryExpression	7		1069502	1					
ANR	1069590	ExpressionStatement	pole4 = & self -> pole [ self -> pole_count - 4 ]	1306:4:53563:53604	1069502	7	True				
ANR	1069591	AssignmentExpression	pole4 = & self -> pole [ self -> pole_count - 4 ]		1069502	0		=			
ANR	1069592	Identifier	pole4		1069502	0					
ANR	1069593	UnaryOperationExpression	& self -> pole [ self -> pole_count - 4 ]		1069502	1					
ANR	1069594	UnaryOperator	&		1069502	0					
ANR	1069595	ArrayIndexing	self -> pole [ self -> pole_count - 4 ]		1069502	1					
ANR	1069596	PtrMemberAccess	self -> pole		1069502	0					
ANR	1069597	Identifier	self		1069502	0					
ANR	1069598	Identifier	pole		1069502	1					
ANR	1069599	AdditiveExpression	self -> pole_count - 4		1069502	1		-			
ANR	1069600	PtrMemberAccess	self -> pole_count		1069502	0					
ANR	1069601	Identifier	self		1069502	0					
ANR	1069602	Identifier	pole_count		1069502	1					
ANR	1069603	PrimaryExpression	4		1069502	1					
ANR	1069604	ExpressionStatement	"g2o ( self , pole4 -> gx - pole1 -> gx , pole4 -> gy - pole1 -> gy , & ox , & oy )"	1307:4:53610:53675	1069502	8	True				
ANR	1069605	CallExpression	"g2o ( self , pole4 -> gx - pole1 -> gx , pole4 -> gy - pole1 -> gy , & ox , & oy )"		1069502	0					
ANR	1069606	Callee	g2o		1069502	0					
ANR	1069607	Identifier	g2o		1069502	0					
ANR	1069608	ArgumentList	self		1069502	1					
ANR	1069609	Argument	self		1069502	0					
ANR	1069610	Identifier	self		1069502	0					
ANR	1069611	Argument	pole4 -> gx - pole1 -> gx		1069502	1					
ANR	1069612	AdditiveExpression	pole4 -> gx - pole1 -> gx		1069502	0		-			
ANR	1069613	PtrMemberAccess	pole4 -> gx		1069502	0					
ANR	1069614	Identifier	pole4		1069502	0					
ANR	1069615	Identifier	gx		1069502	1					
ANR	1069616	PtrMemberAccess	pole1 -> gx		1069502	1					
ANR	1069617	Identifier	pole1		1069502	0					
ANR	1069618	Identifier	gx		1069502	1					
ANR	1069619	Argument	pole4 -> gy - pole1 -> gy		1069502	2					
ANR	1069620	AdditiveExpression	pole4 -> gy - pole1 -> gy		1069502	0		-			
ANR	1069621	PtrMemberAccess	pole4 -> gy		1069502	0					
ANR	1069622	Identifier	pole4		1069502	0					
ANR	1069623	Identifier	gy		1069502	1					
ANR	1069624	PtrMemberAccess	pole1 -> gy		1069502	1					
ANR	1069625	Identifier	pole1		1069502	0					
ANR	1069626	Identifier	gy		1069502	1					
ANR	1069627	Argument	& ox		1069502	3					
ANR	1069628	UnaryOperationExpression	& ox		1069502	0					
ANR	1069629	UnaryOperator	&		1069502	0					
ANR	1069630	Identifier	ox		1069502	1					
ANR	1069631	Argument	& oy		1069502	4					
ANR	1069632	UnaryOperationExpression	& oy		1069502	0					
ANR	1069633	UnaryOperator	&		1069502	0					
ANR	1069634	Identifier	oy		1069502	1					
ANR	1069635	IfStatement	if ( any_abs ( ox ) > div_x * fixed2float ( flex_height ) / 100 || any_abs ( oy ) > div_y * fixed2float ( flex_height ) / 100 )		1069502	9					
ANR	1069636	Condition	any_abs ( ox ) > div_x * fixed2float ( flex_height ) / 100 || any_abs ( oy ) > div_y * fixed2float ( flex_height ) / 100	1308:8:53685:53800	1069502	0	True				
ANR	1069637	OrExpression	any_abs ( ox ) > div_x * fixed2float ( flex_height ) / 100 || any_abs ( oy ) > div_y * fixed2float ( flex_height ) / 100		1069502	0		||			
ANR	1069638	RelationalExpression	any_abs ( ox ) > div_x * fixed2float ( flex_height ) / 100		1069502	0		>			
ANR	1069639	CallExpression	any_abs ( ox )		1069502	0					
ANR	1069640	Callee	any_abs		1069502	0					
ANR	1069641	Identifier	any_abs		1069502	0					
ANR	1069642	ArgumentList	ox		1069502	1					
ANR	1069643	Argument	ox		1069502	0					
ANR	1069644	Identifier	ox		1069502	0					
ANR	1069645	MultiplicativeExpression	div_x * fixed2float ( flex_height ) / 100		1069502	1		*			
ANR	1069646	Identifier	div_x		1069502	0					
ANR	1069647	MultiplicativeExpression	fixed2float ( flex_height ) / 100		1069502	1		/			
ANR	1069648	CallExpression	fixed2float ( flex_height )		1069502	0					
ANR	1069649	Callee	fixed2float		1069502	0					
ANR	1069650	Identifier	fixed2float		1069502	0					
ANR	1069651	ArgumentList	flex_height		1069502	1					
ANR	1069652	Argument	flex_height		1069502	0					
ANR	1069653	Identifier	flex_height		1069502	0					
ANR	1069654	PrimaryExpression	100		1069502	1					
ANR	1069655	RelationalExpression	any_abs ( oy ) > div_y * fixed2float ( flex_height ) / 100		1069502	1		>			
ANR	1069656	CallExpression	any_abs ( oy )		1069502	0					
ANR	1069657	Callee	any_abs		1069502	0					
ANR	1069658	Identifier	any_abs		1069502	0					
ANR	1069659	ArgumentList	oy		1069502	1					
ANR	1069660	Argument	oy		1069502	0					
ANR	1069661	Identifier	oy		1069502	0					
ANR	1069662	MultiplicativeExpression	div_y * fixed2float ( flex_height ) / 100		1069502	1		*			
ANR	1069663	Identifier	div_y		1069502	0					
ANR	1069664	MultiplicativeExpression	fixed2float ( flex_height ) / 100		1069502	1		/			
ANR	1069665	CallExpression	fixed2float ( flex_height )		1069502	0					
ANR	1069666	Callee	fixed2float		1069502	0					
ANR	1069667	Identifier	fixed2float		1069502	0					
ANR	1069668	ArgumentList	flex_height		1069502	1					
ANR	1069669	Argument	flex_height		1069502	0					
ANR	1069670	Identifier	flex_height		1069502	0					
ANR	1069671	PrimaryExpression	100		1069502	1					
ANR	1069672	CompoundStatement		14:62:676:676	1069502	1					
ANR	1069673	IfStatement	if ( self -> pass_through )		1069502	0					
ANR	1069674	Condition	self -> pass_through	1311:12:53846:53863	1069502	0	True				
ANR	1069675	PtrMemberAccess	self -> pass_through		1069502	0					
ANR	1069676	Identifier	self		1069502	0					
ANR	1069677	Identifier	pass_through		1069502	1					
ANR	1069678	CompoundStatement		18:12:801:809	1069502	1					
ANR	1069679	IdentifierDeclStatement	"fixed fx0 , fy0 , fx1 , fy1 , fx2 , fy2 ;"	1312:12:53880:53914	1069502	0	True				
ANR	1069680	IdentifierDecl	fx0		1069502	0					
ANR	1069681	IdentifierDeclType	fixed		1069502	0					
ANR	1069682	Identifier	fx0		1069502	1					
ANR	1069683	IdentifierDecl	fy0		1069502	1					
ANR	1069684	IdentifierDeclType	fixed		1069502	0					
ANR	1069685	Identifier	fy0		1069502	1					
ANR	1069686	IdentifierDecl	fx1		1069502	2					
ANR	1069687	IdentifierDeclType	fixed		1069502	0					
ANR	1069688	Identifier	fx1		1069502	1					
ANR	1069689	IdentifierDecl	fy1		1069502	3					
ANR	1069690	IdentifierDeclType	fixed		1069502	0					
ANR	1069691	Identifier	fy1		1069502	1					
ANR	1069692	IdentifierDecl	fx2		1069502	4					
ANR	1069693	IdentifierDeclType	fixed		1069502	0					
ANR	1069694	Identifier	fx2		1069502	1					
ANR	1069695	IdentifierDecl	fy2		1069502	5					
ANR	1069696	IdentifierDeclType	fixed		1069502	0					
ANR	1069697	Identifier	fy2		1069502	1					
ANR	1069698	IdentifierDeclStatement	int code ;	1313:12:53928:53936	1069502	1	True				
ANR	1069699	IdentifierDecl	code		1069502	0					
ANR	1069700	IdentifierDeclType	int		1069502	0					
ANR	1069701	Identifier	code		1069502	1					
ANR	1069702	ExpressionStatement	"g2d ( self , pole0 [ 2 ] . gx , pole0 [ 2 ] . gy , & fx0 , & fy0 )"	1315:12:53951:53998	1069502	2	True				
ANR	1069703	CallExpression	"g2d ( self , pole0 [ 2 ] . gx , pole0 [ 2 ] . gy , & fx0 , & fy0 )"		1069502	0					
ANR	1069704	Callee	g2d		1069502	0					
ANR	1069705	Identifier	g2d		1069502	0					
ANR	1069706	ArgumentList	self		1069502	1					
ANR	1069707	Argument	self		1069502	0					
ANR	1069708	Identifier	self		1069502	0					
ANR	1069709	Argument	pole0 [ 2 ] . gx		1069502	1					
ANR	1069710	MemberAccess	pole0 [ 2 ] . gx		1069502	0					
ANR	1069711	ArrayIndexing	pole0 [ 2 ]		1069502	0					
ANR	1069712	Identifier	pole0		1069502	0					
ANR	1069713	PrimaryExpression	2		1069502	1					
ANR	1069714	Identifier	gx		1069502	1					
ANR	1069715	Argument	pole0 [ 2 ] . gy		1069502	2					
ANR	1069716	MemberAccess	pole0 [ 2 ] . gy		1069502	0					
ANR	1069717	ArrayIndexing	pole0 [ 2 ]		1069502	0					
ANR	1069718	Identifier	pole0		1069502	0					
ANR	1069719	PrimaryExpression	2		1069502	1					
ANR	1069720	Identifier	gy		1069502	1					
ANR	1069721	Argument	& fx0		1069502	3					
ANR	1069722	UnaryOperationExpression	& fx0		1069502	0					
ANR	1069723	UnaryOperator	&		1069502	0					
ANR	1069724	Identifier	fx0		1069502	1					
ANR	1069725	Argument	& fy0		1069502	4					
ANR	1069726	UnaryOperationExpression	& fy0		1069502	0					
ANR	1069727	UnaryOperator	&		1069502	0					
ANR	1069728	Identifier	fy0		1069502	1					
ANR	1069729	ExpressionStatement	"g2d ( self , pole0 [ 3 ] . gx , pole0 [ 3 ] . gy , & fx1 , & fy1 )"	1316:12:54012:54059	1069502	3	True				
ANR	1069730	CallExpression	"g2d ( self , pole0 [ 3 ] . gx , pole0 [ 3 ] . gy , & fx1 , & fy1 )"		1069502	0					
ANR	1069731	Callee	g2d		1069502	0					
ANR	1069732	Identifier	g2d		1069502	0					
ANR	1069733	ArgumentList	self		1069502	1					
ANR	1069734	Argument	self		1069502	0					
ANR	1069735	Identifier	self		1069502	0					
ANR	1069736	Argument	pole0 [ 3 ] . gx		1069502	1					
ANR	1069737	MemberAccess	pole0 [ 3 ] . gx		1069502	0					
ANR	1069738	ArrayIndexing	pole0 [ 3 ]		1069502	0					
ANR	1069739	Identifier	pole0		1069502	0					
ANR	1069740	PrimaryExpression	3		1069502	1					
ANR	1069741	Identifier	gx		1069502	1					
ANR	1069742	Argument	pole0 [ 3 ] . gy		1069502	2					
ANR	1069743	MemberAccess	pole0 [ 3 ] . gy		1069502	0					
ANR	1069744	ArrayIndexing	pole0 [ 3 ]		1069502	0					
ANR	1069745	Identifier	pole0		1069502	0					
ANR	1069746	PrimaryExpression	3		1069502	1					
ANR	1069747	Identifier	gy		1069502	1					
ANR	1069748	Argument	& fx1		1069502	3					
ANR	1069749	UnaryOperationExpression	& fx1		1069502	0					
ANR	1069750	UnaryOperator	&		1069502	0					
ANR	1069751	Identifier	fx1		1069502	1					
ANR	1069752	Argument	& fy1		1069502	4					
ANR	1069753	UnaryOperationExpression	& fy1		1069502	0					
ANR	1069754	UnaryOperator	&		1069502	0					
ANR	1069755	Identifier	fy1		1069502	1					
ANR	1069756	ExpressionStatement	"g2d ( self , pole0 [ 4 ] . gx , pole0 [ 4 ] . gy , & fx2 , & fy2 )"	1317:12:54073:54120	1069502	4	True				
ANR	1069757	CallExpression	"g2d ( self , pole0 [ 4 ] . gx , pole0 [ 4 ] . gy , & fx2 , & fy2 )"		1069502	0					
ANR	1069758	Callee	g2d		1069502	0					
ANR	1069759	Identifier	g2d		1069502	0					
ANR	1069760	ArgumentList	self		1069502	1					
ANR	1069761	Argument	self		1069502	0					
ANR	1069762	Identifier	self		1069502	0					
ANR	1069763	Argument	pole0 [ 4 ] . gx		1069502	1					
ANR	1069764	MemberAccess	pole0 [ 4 ] . gx		1069502	0					
ANR	1069765	ArrayIndexing	pole0 [ 4 ]		1069502	0					
ANR	1069766	Identifier	pole0		1069502	0					
ANR	1069767	PrimaryExpression	4		1069502	1					
ANR	1069768	Identifier	gx		1069502	1					
ANR	1069769	Argument	pole0 [ 4 ] . gy		1069502	2					
ANR	1069770	MemberAccess	pole0 [ 4 ] . gy		1069502	0					
ANR	1069771	ArrayIndexing	pole0 [ 4 ]		1069502	0					
ANR	1069772	Identifier	pole0		1069502	0					
ANR	1069773	PrimaryExpression	4		1069502	1					
ANR	1069774	Identifier	gy		1069502	1					
ANR	1069775	Argument	& fx2		1069502	3					
ANR	1069776	UnaryOperationExpression	& fx2		1069502	0					
ANR	1069777	UnaryOperator	&		1069502	0					
ANR	1069778	Identifier	fx2		1069502	1					
ANR	1069779	Argument	& fy2		1069502	4					
ANR	1069780	UnaryOperationExpression	& fy2		1069502	0					
ANR	1069781	UnaryOperator	&		1069502	0					
ANR	1069782	Identifier	fy2		1069502	1					
ANR	1069783	ExpressionStatement	"code = gx_path_add_curve ( self -> output_path , fx0 , fy0 , fx1 , fy1 , fx2 , fy2 )"	1318:12:54134:54207	1069502	5	True				
ANR	1069784	AssignmentExpression	"code = gx_path_add_curve ( self -> output_path , fx0 , fy0 , fx1 , fy1 , fx2 , fy2 )"		1069502	0		=			
ANR	1069785	Identifier	code		1069502	0					
ANR	1069786	CallExpression	"gx_path_add_curve ( self -> output_path , fx0 , fy0 , fx1 , fy1 , fx2 , fy2 )"		1069502	1					
ANR	1069787	Callee	gx_path_add_curve		1069502	0					
ANR	1069788	Identifier	gx_path_add_curve		1069502	0					
ANR	1069789	ArgumentList	self -> output_path		1069502	1					
ANR	1069790	Argument	self -> output_path		1069502	0					
ANR	1069791	PtrMemberAccess	self -> output_path		1069502	0					
ANR	1069792	Identifier	self		1069502	0					
ANR	1069793	Identifier	output_path		1069502	1					
ANR	1069794	Argument	fx0		1069502	1					
ANR	1069795	Identifier	fx0		1069502	0					
ANR	1069796	Argument	fy0		1069502	2					
ANR	1069797	Identifier	fy0		1069502	0					
ANR	1069798	Argument	fx1		1069502	3					
ANR	1069799	Identifier	fx1		1069502	0					
ANR	1069800	Argument	fy1		1069502	4					
ANR	1069801	Identifier	fy1		1069502	0					
ANR	1069802	Argument	fx2		1069502	5					
ANR	1069803	Identifier	fx2		1069502	0					
ANR	1069804	Argument	fy2		1069502	6					
ANR	1069805	Identifier	fy2		1069502	0					
ANR	1069806	IfStatement	if ( code < 0 )		1069502	6					
ANR	1069807	Condition	code < 0	1319:16:54225:54232	1069502	0	True				
ANR	1069808	RelationalExpression	code < 0		1069502	0		<			
ANR	1069809	Identifier	code		1069502	0					
ANR	1069810	PrimaryExpression	0		1069502	1					
ANR	1069811	ReturnStatement	return code ;	1320:16:54251:54262	1069502	1	True				
ANR	1069812	Identifier	code		1069502	0					
ANR	1069813	ExpressionStatement	"g2d ( self , pole0 [ 5 ] . gx , pole0 [ 5 ] . gy , & fx0 , & fy0 )"	1321:12:54276:54323	1069502	7	True				
ANR	1069814	CallExpression	"g2d ( self , pole0 [ 5 ] . gx , pole0 [ 5 ] . gy , & fx0 , & fy0 )"		1069502	0					
ANR	1069815	Callee	g2d		1069502	0					
ANR	1069816	Identifier	g2d		1069502	0					
ANR	1069817	ArgumentList	self		1069502	1					
ANR	1069818	Argument	self		1069502	0					
ANR	1069819	Identifier	self		1069502	0					
ANR	1069820	Argument	pole0 [ 5 ] . gx		1069502	1					
ANR	1069821	MemberAccess	pole0 [ 5 ] . gx		1069502	0					
ANR	1069822	ArrayIndexing	pole0 [ 5 ]		1069502	0					
ANR	1069823	Identifier	pole0		1069502	0					
ANR	1069824	PrimaryExpression	5		1069502	1					
ANR	1069825	Identifier	gx		1069502	1					
ANR	1069826	Argument	pole0 [ 5 ] . gy		1069502	2					
ANR	1069827	MemberAccess	pole0 [ 5 ] . gy		1069502	0					
ANR	1069828	ArrayIndexing	pole0 [ 5 ]		1069502	0					
ANR	1069829	Identifier	pole0		1069502	0					
ANR	1069830	PrimaryExpression	5		1069502	1					
ANR	1069831	Identifier	gy		1069502	1					
ANR	1069832	Argument	& fx0		1069502	3					
ANR	1069833	UnaryOperationExpression	& fx0		1069502	0					
ANR	1069834	UnaryOperator	&		1069502	0					
ANR	1069835	Identifier	fx0		1069502	1					
ANR	1069836	Argument	& fy0		1069502	4					
ANR	1069837	UnaryOperationExpression	& fy0		1069502	0					
ANR	1069838	UnaryOperator	&		1069502	0					
ANR	1069839	Identifier	fy0		1069502	1					
ANR	1069840	ExpressionStatement	"g2d ( self , pole0 [ 6 ] . gx , pole0 [ 6 ] . gy , & fx1 , & fy1 )"	1322:12:54337:54384	1069502	8	True				
ANR	1069841	CallExpression	"g2d ( self , pole0 [ 6 ] . gx , pole0 [ 6 ] . gy , & fx1 , & fy1 )"		1069502	0					
ANR	1069842	Callee	g2d		1069502	0					
ANR	1069843	Identifier	g2d		1069502	0					
ANR	1069844	ArgumentList	self		1069502	1					
ANR	1069845	Argument	self		1069502	0					
ANR	1069846	Identifier	self		1069502	0					
ANR	1069847	Argument	pole0 [ 6 ] . gx		1069502	1					
ANR	1069848	MemberAccess	pole0 [ 6 ] . gx		1069502	0					
ANR	1069849	ArrayIndexing	pole0 [ 6 ]		1069502	0					
ANR	1069850	Identifier	pole0		1069502	0					
ANR	1069851	PrimaryExpression	6		1069502	1					
ANR	1069852	Identifier	gx		1069502	1					
ANR	1069853	Argument	pole0 [ 6 ] . gy		1069502	2					
ANR	1069854	MemberAccess	pole0 [ 6 ] . gy		1069502	0					
ANR	1069855	ArrayIndexing	pole0 [ 6 ]		1069502	0					
ANR	1069856	Identifier	pole0		1069502	0					
ANR	1069857	PrimaryExpression	6		1069502	1					
ANR	1069858	Identifier	gy		1069502	1					
ANR	1069859	Argument	& fx1		1069502	3					
ANR	1069860	UnaryOperationExpression	& fx1		1069502	0					
ANR	1069861	UnaryOperator	&		1069502	0					
ANR	1069862	Identifier	fx1		1069502	1					
ANR	1069863	Argument	& fy1		1069502	4					
ANR	1069864	UnaryOperationExpression	& fy1		1069502	0					
ANR	1069865	UnaryOperator	&		1069502	0					
ANR	1069866	Identifier	fy1		1069502	1					
ANR	1069867	ExpressionStatement	"g2d ( self , pole0 [ 7 ] . gx , pole0 [ 7 ] . gy , & fx2 , & fy2 )"	1323:12:54398:54445	1069502	9	True				
ANR	1069868	CallExpression	"g2d ( self , pole0 [ 7 ] . gx , pole0 [ 7 ] . gy , & fx2 , & fy2 )"		1069502	0					
ANR	1069869	Callee	g2d		1069502	0					
ANR	1069870	Identifier	g2d		1069502	0					
ANR	1069871	ArgumentList	self		1069502	1					
ANR	1069872	Argument	self		1069502	0					
ANR	1069873	Identifier	self		1069502	0					
ANR	1069874	Argument	pole0 [ 7 ] . gx		1069502	1					
ANR	1069875	MemberAccess	pole0 [ 7 ] . gx		1069502	0					
ANR	1069876	ArrayIndexing	pole0 [ 7 ]		1069502	0					
ANR	1069877	Identifier	pole0		1069502	0					
ANR	1069878	PrimaryExpression	7		1069502	1					
ANR	1069879	Identifier	gx		1069502	1					
ANR	1069880	Argument	pole0 [ 7 ] . gy		1069502	2					
ANR	1069881	MemberAccess	pole0 [ 7 ] . gy		1069502	0					
ANR	1069882	ArrayIndexing	pole0 [ 7 ]		1069502	0					
ANR	1069883	Identifier	pole0		1069502	0					
ANR	1069884	PrimaryExpression	7		1069502	1					
ANR	1069885	Identifier	gy		1069502	1					
ANR	1069886	Argument	& fx2		1069502	3					
ANR	1069887	UnaryOperationExpression	& fx2		1069502	0					
ANR	1069888	UnaryOperator	&		1069502	0					
ANR	1069889	Identifier	fx2		1069502	1					
ANR	1069890	Argument	& fy2		1069502	4					
ANR	1069891	UnaryOperationExpression	& fy2		1069502	0					
ANR	1069892	UnaryOperator	&		1069502	0					
ANR	1069893	Identifier	fy2		1069502	1					
ANR	1069894	ExpressionStatement	self -> flex_count = 0	1324:12:54459:54479	1069502	10	True				
ANR	1069895	AssignmentExpression	self -> flex_count = 0		1069502	0		=			
ANR	1069896	PtrMemberAccess	self -> flex_count		1069502	0					
ANR	1069897	Identifier	self		1069502	0					
ANR	1069898	Identifier	flex_count		1069502	1					
ANR	1069899	PrimaryExpression	0		1069502	1					
ANR	1069900	ExpressionStatement	self -> pole_count = 0	1325:12:54493:54513	1069502	11	True				
ANR	1069901	AssignmentExpression	self -> pole_count = 0		1069502	0		=			
ANR	1069902	PtrMemberAccess	self -> pole_count		1069502	0					
ANR	1069903	Identifier	self		1069502	0					
ANR	1069904	Identifier	pole_count		1069502	1					
ANR	1069905	PrimaryExpression	0		1069502	1					
ANR	1069906	ReturnStatement	"return gx_path_add_curve ( self -> output_path , fx0 , fy0 , fx1 , fy1 , fx2 , fy2 ) ;"	1326:12:54527:54600	1069502	12	True				
ANR	1069907	CallExpression	"gx_path_add_curve ( self -> output_path , fx0 , fy0 , fx1 , fy1 , fx2 , fy2 )"		1069502	0					
ANR	1069908	Callee	gx_path_add_curve		1069502	0					
ANR	1069909	Identifier	gx_path_add_curve		1069502	0					
ANR	1069910	ArgumentList	self -> output_path		1069502	1					
ANR	1069911	Argument	self -> output_path		1069502	0					
ANR	1069912	PtrMemberAccess	self -> output_path		1069502	0					
ANR	1069913	Identifier	self		1069502	0					
ANR	1069914	Identifier	output_path		1069502	1					
ANR	1069915	Argument	fx0		1069502	1					
ANR	1069916	Identifier	fx0		1069502	0					
ANR	1069917	Argument	fy0		1069502	2					
ANR	1069918	Identifier	fy0		1069502	0					
ANR	1069919	Argument	fx1		1069502	3					
ANR	1069920	Identifier	fx1		1069502	0					
ANR	1069921	Argument	fy1		1069502	4					
ANR	1069922	Identifier	fy1		1069502	0					
ANR	1069923	Argument	fx2		1069502	5					
ANR	1069924	Identifier	fx2		1069502	0					
ANR	1069925	Argument	fy2		1069502	6					
ANR	1069926	Identifier	fy2		1069502	0					
ANR	1069927	ElseStatement	else		1069502	0					
ANR	1069928	CompoundStatement		32:15:1490:1490	1069502	0					
ANR	1069929	ExpressionStatement	"memmove ( pole1 , pole1 + 1 , ( sizeof ( self -> pole0 ) / count_of ( self -> pole0 ) ) * 7 )"	1328:12:54631:54707	1069502	0	True				
ANR	1069930	CallExpression	"memmove ( pole1 , pole1 + 1 , ( sizeof ( self -> pole0 ) / count_of ( self -> pole0 ) ) * 7 )"		1069502	0					
ANR	1069931	Callee	memmove		1069502	0					
ANR	1069932	Identifier	memmove		1069502	0					
ANR	1069933	ArgumentList	pole1		1069502	1					
ANR	1069934	Argument	pole1		1069502	0					
ANR	1069935	Identifier	pole1		1069502	0					
ANR	1069936	Argument	pole1 + 1		1069502	1					
ANR	1069937	AdditiveExpression	pole1 + 1		1069502	0		+			
ANR	1069938	Identifier	pole1		1069502	0					
ANR	1069939	PrimaryExpression	1		1069502	1					
ANR	1069940	Argument	( sizeof ( self -> pole0 ) / count_of ( self -> pole0 ) ) * 7		1069502	2					
ANR	1069941	MultiplicativeExpression	( sizeof ( self -> pole0 ) / count_of ( self -> pole0 ) ) * 7		1069502	0		*			
ANR	1069942	MultiplicativeExpression	sizeof ( self -> pole0 ) / count_of ( self -> pole0 )		1069502	0		/			
ANR	1069943	SizeofExpression	sizeof ( self -> pole0 )		1069502	0					
ANR	1069944	Sizeof	sizeof		1069502	0					
ANR	1069945	PtrMemberAccess	self -> pole0		1069502	1					
ANR	1069946	Identifier	self		1069502	0					
ANR	1069947	Identifier	pole0		1069502	1					
ANR	1069948	CallExpression	count_of ( self -> pole0 )		1069502	1					
ANR	1069949	Callee	count_of		1069502	0					
ANR	1069950	Identifier	count_of		1069502	0					
ANR	1069951	ArgumentList	self -> pole0		1069502	1					
ANR	1069952	Argument	self -> pole0		1069502	0					
ANR	1069953	PtrMemberAccess	self -> pole0		1069502	0					
ANR	1069954	Identifier	self		1069502	0					
ANR	1069955	Identifier	pole0		1069502	1					
ANR	1069956	PrimaryExpression	7		1069502	1					
ANR	1069957	ExpressionStatement	pole0 [ 1 ] . type = pole0 [ 2 ] . type = offcurve	1329:12:54721:54761	1069502	1	True				
ANR	1069958	AssignmentExpression	pole0 [ 1 ] . type = pole0 [ 2 ] . type = offcurve		1069502	0		=			
ANR	1069959	MemberAccess	pole0 [ 1 ] . type		1069502	0					
ANR	1069960	ArrayIndexing	pole0 [ 1 ]		1069502	0					
ANR	1069961	Identifier	pole0		1069502	0					
ANR	1069962	PrimaryExpression	1		1069502	1					
ANR	1069963	Identifier	type		1069502	1					
ANR	1069964	AssignmentExpression	pole0 [ 2 ] . type = offcurve		1069502	1		=			
ANR	1069965	MemberAccess	pole0 [ 2 ] . type		1069502	0					
ANR	1069966	ArrayIndexing	pole0 [ 2 ]		1069502	0					
ANR	1069967	Identifier	pole0		1069502	0					
ANR	1069968	PrimaryExpression	2		1069502	1					
ANR	1069969	Identifier	type		1069502	1					
ANR	1069970	Identifier	offcurve		1069502	1					
ANR	1069971	ExpressionStatement	pole0 [ 3 ] . type = oncurve	1330:12:54775:54798	1069502	2	True				
ANR	1069972	AssignmentExpression	pole0 [ 3 ] . type = oncurve		1069502	0		=			
ANR	1069973	MemberAccess	pole0 [ 3 ] . type		1069502	0					
ANR	1069974	ArrayIndexing	pole0 [ 3 ]		1069502	0					
ANR	1069975	Identifier	pole0		1069502	0					
ANR	1069976	PrimaryExpression	3		1069502	1					
ANR	1069977	Identifier	type		1069502	1					
ANR	1069978	Identifier	oncurve		1069502	1					
ANR	1069979	ExpressionStatement	pole0 [ 4 ] . type = pole0 [ 5 ] . type = offcurve	1331:12:54812:54852	1069502	3	True				
ANR	1069980	AssignmentExpression	pole0 [ 4 ] . type = pole0 [ 5 ] . type = offcurve		1069502	0		=			
ANR	1069981	MemberAccess	pole0 [ 4 ] . type		1069502	0					
ANR	1069982	ArrayIndexing	pole0 [ 4 ]		1069502	0					
ANR	1069983	Identifier	pole0		1069502	0					
ANR	1069984	PrimaryExpression	4		1069502	1					
ANR	1069985	Identifier	type		1069502	1					
ANR	1069986	AssignmentExpression	pole0 [ 5 ] . type = offcurve		1069502	1		=			
ANR	1069987	MemberAccess	pole0 [ 5 ] . type		1069502	0					
ANR	1069988	ArrayIndexing	pole0 [ 5 ]		1069502	0					
ANR	1069989	Identifier	pole0		1069502	0					
ANR	1069990	PrimaryExpression	5		1069502	1					
ANR	1069991	Identifier	type		1069502	1					
ANR	1069992	Identifier	offcurve		1069502	1					
ANR	1069993	ExpressionStatement	pole0 [ 6 ] . type = oncurve	1332:12:54866:54889	1069502	4	True				
ANR	1069994	AssignmentExpression	pole0 [ 6 ] . type = oncurve		1069502	0		=			
ANR	1069995	MemberAccess	pole0 [ 6 ] . type		1069502	0					
ANR	1069996	ArrayIndexing	pole0 [ 6 ]		1069502	0					
ANR	1069997	Identifier	pole0		1069502	0					
ANR	1069998	PrimaryExpression	6		1069502	1					
ANR	1069999	Identifier	type		1069502	1					
ANR	1070000	Identifier	oncurve		1069502	1					
ANR	1070001	ExpressionStatement	self -> pole_count --	1333:12:54903:54921	1069502	5	True				
ANR	1070002	PostIncDecOperationExpression	self -> pole_count --		1069502	0					
ANR	1070003	PtrMemberAccess	self -> pole_count		1069502	0					
ANR	1070004	Identifier	self		1069502	0					
ANR	1070005	Identifier	pole_count		1069502	1					
ANR	1070006	IncDec	--		1069502	1					
ANR	1070007	ElseStatement	else		1069502	0					
ANR	1070008	CompoundStatement		40:11:1817:1817	1069502	0					
ANR	1070009	IfStatement	if ( self -> pass_through )		1069502	0					
ANR	1070010	Condition	self -> pass_through	1337:12:54985:55002	1069502	0	True				
ANR	1070011	PtrMemberAccess	self -> pass_through		1069502	0					
ANR	1070012	Identifier	self		1069502	0					
ANR	1070013	Identifier	pass_through		1069502	1					
ANR	1070014	CompoundStatement		43:12:1892:1904	1069502	1					
ANR	1070015	IdentifierDeclStatement	"fixed fx , fy ;"	1338:12:55019:55031	1069502	0	True				
ANR	1070016	IdentifierDecl	fx		1069502	0					
ANR	1070017	IdentifierDeclType	fixed		1069502	0					
ANR	1070018	Identifier	fx		1069502	1					
ANR	1070019	IdentifierDecl	fy		1069502	1					
ANR	1070020	IdentifierDeclType	fixed		1069502	0					
ANR	1070021	Identifier	fy		1069502	1					
ANR	1070022	ExpressionStatement	"g2d ( self , pole0 [ 7 ] . gx , pole0 [ 7 ] . gy , & fx , & fy )"	1340:12:55046:55091	1069502	1	True				
ANR	1070023	CallExpression	"g2d ( self , pole0 [ 7 ] . gx , pole0 [ 7 ] . gy , & fx , & fy )"		1069502	0					
ANR	1070024	Callee	g2d		1069502	0					
ANR	1070025	Identifier	g2d		1069502	0					
ANR	1070026	ArgumentList	self		1069502	1					
ANR	1070027	Argument	self		1069502	0					
ANR	1070028	Identifier	self		1069502	0					
ANR	1070029	Argument	pole0 [ 7 ] . gx		1069502	1					
ANR	1070030	MemberAccess	pole0 [ 7 ] . gx		1069502	0					
ANR	1070031	ArrayIndexing	pole0 [ 7 ]		1069502	0					
ANR	1070032	Identifier	pole0		1069502	0					
ANR	1070033	PrimaryExpression	7		1069502	1					
ANR	1070034	Identifier	gx		1069502	1					
ANR	1070035	Argument	pole0 [ 7 ] . gy		1069502	2					
ANR	1070036	MemberAccess	pole0 [ 7 ] . gy		1069502	0					
ANR	1070037	ArrayIndexing	pole0 [ 7 ]		1069502	0					
ANR	1070038	Identifier	pole0		1069502	0					
ANR	1070039	PrimaryExpression	7		1069502	1					
ANR	1070040	Identifier	gy		1069502	1					
ANR	1070041	Argument	& fx		1069502	3					
ANR	1070042	UnaryOperationExpression	& fx		1069502	0					
ANR	1070043	UnaryOperator	&		1069502	0					
ANR	1070044	Identifier	fx		1069502	1					
ANR	1070045	Argument	& fy		1069502	4					
ANR	1070046	UnaryOperationExpression	& fy		1069502	0					
ANR	1070047	UnaryOperator	&		1069502	0					
ANR	1070048	Identifier	fy		1069502	1					
ANR	1070049	ExpressionStatement	self -> flex_count = 0	1341:12:55105:55125	1069502	2	True				
ANR	1070050	AssignmentExpression	self -> flex_count = 0		1069502	0		=			
ANR	1070051	PtrMemberAccess	self -> flex_count		1069502	0					
ANR	1070052	Identifier	self		1069502	0					
ANR	1070053	Identifier	flex_count		1069502	1					
ANR	1070054	PrimaryExpression	0		1069502	1					
ANR	1070055	ExpressionStatement	self -> pole_count = 0	1342:12:55139:55159	1069502	3	True				
ANR	1070056	AssignmentExpression	self -> pole_count = 0		1069502	0		=			
ANR	1070057	PtrMemberAccess	self -> pole_count		1069502	0					
ANR	1070058	Identifier	self		1069502	0					
ANR	1070059	Identifier	pole_count		1069502	1					
ANR	1070060	PrimaryExpression	0		1069502	1					
ANR	1070061	ReturnStatement	"return gx_path_add_line ( self -> output_path , fx , fy ) ;"	1343:12:55173:55223	1069502	4	True				
ANR	1070062	CallExpression	"gx_path_add_line ( self -> output_path , fx , fy )"		1069502	0					
ANR	1070063	Callee	gx_path_add_line		1069502	0					
ANR	1070064	Identifier	gx_path_add_line		1069502	0					
ANR	1070065	ArgumentList	self -> output_path		1069502	1					
ANR	1070066	Argument	self -> output_path		1069502	0					
ANR	1070067	PtrMemberAccess	self -> output_path		1069502	0					
ANR	1070068	Identifier	self		1069502	0					
ANR	1070069	Identifier	output_path		1069502	1					
ANR	1070070	Argument	fx		1069502	1					
ANR	1070071	Identifier	fx		1069502	0					
ANR	1070072	Argument	fy		1069502	2					
ANR	1070073	Identifier	fy		1069502	0					
ANR	1070074	ElseStatement	else		1069502	0					
ANR	1070075	CompoundStatement		49:15:2113:2113	1069502	0					
ANR	1070076	ExpressionStatement	pole0 [ 1 ] = pole0 [ 7 ]	1345:12:55254:55273	1069502	0	True				
ANR	1070077	AssignmentExpression	pole0 [ 1 ] = pole0 [ 7 ]		1069502	0		=			
ANR	1070078	ArrayIndexing	pole0 [ 1 ]		1069502	0					
ANR	1070079	Identifier	pole0		1069502	0					
ANR	1070080	PrimaryExpression	1		1069502	1					
ANR	1070081	ArrayIndexing	pole0 [ 7 ]		1069502	1					
ANR	1070082	Identifier	pole0		1069502	0					
ANR	1070083	PrimaryExpression	7		1069502	1					
ANR	1070084	ExpressionStatement	pole0 [ 1 ] . type = oncurve	1346:12:55287:55310	1069502	1	True				
ANR	1070085	AssignmentExpression	pole0 [ 1 ] . type = oncurve		1069502	0		=			
ANR	1070086	MemberAccess	pole0 [ 1 ] . type		1069502	0					
ANR	1070087	ArrayIndexing	pole0 [ 1 ]		1069502	0					
ANR	1070088	Identifier	pole0		1069502	0					
ANR	1070089	PrimaryExpression	1		1069502	1					
ANR	1070090	Identifier	type		1069502	1					
ANR	1070091	Identifier	oncurve		1069502	1					
ANR	1070092	ExpressionStatement	self -> pole_count -= 6	1347:12:55324:55345	1069502	2	True				
ANR	1070093	AssignmentExpression	self -> pole_count -= 6		1069502	0		-=			
ANR	1070094	PtrMemberAccess	self -> pole_count		1069502	0					
ANR	1070095	Identifier	self		1069502	0					
ANR	1070096	Identifier	pole_count		1069502	1					
ANR	1070097	PrimaryExpression	6		1069502	1					
ANR	1070098	ExpressionStatement	self -> flex_count = 0	1350:4:55367:55387	1069502	10	True				
ANR	1070099	AssignmentExpression	self -> flex_count = 0		1069502	0		=			
ANR	1070100	PtrMemberAccess	self -> flex_count		1069502	0					
ANR	1070101	Identifier	self		1069502	0					
ANR	1070102	Identifier	flex_count		1069502	1					
ANR	1070103	PrimaryExpression	0		1069502	1					
ANR	1070104	ReturnStatement	return 0 ;	1351:4:55393:55401	1069502	11	True				
ANR	1070105	PrimaryExpression	0		1069502	0					
ANR	1070106	ReturnType	int		1069502	1					
ANR	1070107	Identifier	t1_hinter__flex_end		1069502	2					
ANR	1070108	ParameterList	"t1_hinter * self , fixed flex_height"		1069502	3					
ANR	1070109	Parameter	t1_hinter * self	1295:24:53089:53104	1069502	0	True				
ANR	1070110	ParameterType	t1_hinter *		1069502	0					
ANR	1070111	Identifier	self		1069502	1					
ANR	1070112	Parameter	fixed flex_height	1295:42:53107:53123	1069502	1	True				
ANR	1070113	ParameterType	fixed		1069502	0					
ANR	1070114	Identifier	flex_height		1069502	1					
ANR	1070115	CFGEntryNode	ENTRY		1069502		True				
ANR	1070116	CFGExitNode	EXIT		1069502		True				
ANR	1070117	Symbol	& fx2		1069502						
ANR	1070118	Symbol	& fx1		1069502						
ANR	1070119	Symbol	& fx0		1069502						
ANR	1070120	Symbol	self -> pole_count		1069502						
ANR	1070121	Symbol	pole1 -> gy		1069502						
ANR	1070122	Symbol	pole1 -> gx		1069502						
ANR	1070123	Symbol	pole4 -> gy		1069502						
ANR	1070124	Symbol	pole4 -> gx		1069502						
ANR	1070125	Symbol	pole0 [ 2 ] . gy		1069502						
ANR	1070126	Symbol	pole0 [ 3 ] . gy		1069502						
ANR	1070127	Symbol	self -> pole0		1069502						
ANR	1070128	Symbol	pole0 [ 2 ] . gx		1069502						
ANR	1070129	Symbol	pole0 [ 3 ] . gx		1069502						
ANR	1070130	Symbol	pole0 [ 4 ] . gy		1069502						
ANR	1070131	Symbol	self -> output_path		1069502						
ANR	1070132	Symbol	& fy		1069502						
ANR	1070133	Symbol	& fx		1069502						
ANR	1070134	Symbol	fx1		1069502						
ANR	1070135	Symbol	fx0		1069502						
ANR	1070136	Symbol	fx2		1069502						
ANR	1070137	Symbol	pole4		1069502						
ANR	1070138	Symbol	self -> g2o_fraction		1069502						
ANR	1070139	Symbol	pole0 [ 7 ] . gx		1069502						
ANR	1070140	Symbol	pole0 [ 7 ] . gy		1069502						
ANR	1070141	Symbol	pole0		1069502						
ANR	1070142	Symbol	* self		1069502						
ANR	1070143	Symbol	pole0 [ 6 ] . type		1069502						
ANR	1070144	Symbol	pole1		1069502						
ANR	1070145	Symbol	self -> pass_through		1069502						
ANR	1070146	Symbol	pole0 [ 5 ] . gy		1069502						
ANR	1070147	Symbol	pole0 [ 5 ] . gx		1069502						
ANR	1070148	Symbol	pole0 [ 5 ] . type		1069502						
ANR	1070149	Symbol	& ox		1069502						
ANR	1070150	Symbol	& oy		1069502						
ANR	1070151	Symbol	* pole4		1069502						
ANR	1070152	Symbol	* pole1		1069502						
ANR	1070153	Symbol	fy0		1069502						
ANR	1070154	Symbol	* pole0		1069502						
ANR	1070155	Symbol	fy2		1069502						
ANR	1070156	Symbol	fy1		1069502						
ANR	1070157	Symbol	oncurve		1069502						
ANR	1070158	Symbol	code		1069502						
ANR	1070159	Symbol	pole0 [ 4 ] . type		1069502						
ANR	1070160	Symbol	self -> flex_count		1069502						
ANR	1070161	Symbol	gx_path_add_curve		1069502						
ANR	1070162	Symbol	fx		1069502						
ANR	1070163	Symbol	fy		1069502						
ANR	1070164	Symbol	count_of		1069502						
ANR	1070165	Symbol	any_abs		1069502						
ANR	1070166	Symbol	self -> pole		1069502						
ANR	1070167	Symbol	pole0 [ 1 ] . type		1069502						
ANR	1070168	Symbol	gs_error_invalidfont		1069502						
ANR	1070169	Symbol	& fy2		1069502						
ANR	1070170	Symbol	& fy1		1069502						
ANR	1070171	Symbol	fixed2float		1069502						
ANR	1070172	Symbol	& fy0		1069502						
ANR	1070173	Symbol	ox		1069502						
ANR	1070174	Symbol	pole0 [ 6 ] . gy		1069502						
ANR	1070175	Symbol	oy		1069502						
ANR	1070176	Symbol	self -> log2_pixels_x		1069502						
ANR	1070177	Symbol	pole0 [ 6 ] . gx		1069502						
ANR	1070178	Symbol	pole0 [ 3 ] . type		1069502						
ANR	1070179	Symbol	self -> log2_pixels_y		1069502						
ANR	1070180	Symbol	pole0 [ 4 ] . gx		1069502						
ANR	1070181	Symbol	pole0 [ 2 ] . type		1069502						
ANR	1070182	Symbol	offcurve		1069502						
ANR	1070183	Symbol	gx_path_add_line		1069502						
ANR	1070184	Symbol	div_x		1069502						
ANR	1070185	Symbol	self		1069502						
ANR	1070186	Symbol	div_y		1069502						
ANR	1070187	Symbol	flex_height		1069502						
ANR	1070188	Function	t1_hinter__can_add_hint_range	1354:0:55406:55935							
ANR	1070189	FunctionDef	"t1_hinter__can_add_hint_range (t1_hinter * self , t1_hint_range * * hint_range)"		1070188	0					
ANR	1070190	CompoundStatement		1355:0:55500:55935	1070188	0					
ANR	1070191	IfStatement	if ( self -> hint_range_count >= self -> max_hint_range_count )		1070188	0					
ANR	1070192	Condition	self -> hint_range_count >= self -> max_hint_range_count	1355:7:55508:55559	1070188	0	True				
ANR	1070193	RelationalExpression	self -> hint_range_count >= self -> max_hint_range_count		1070188	0		>=			
ANR	1070194	PtrMemberAccess	self -> hint_range_count		1070188	0					
ANR	1070195	Identifier	self		1070188	0					
ANR	1070196	Identifier	hint_range_count		1070188	1					
ANR	1070197	PtrMemberAccess	self -> max_hint_range_count		1070188	1					
ANR	1070198	Identifier	self		1070188	0					
ANR	1070199	Identifier	max_hint_range_count		1070188	1					
ANR	1070200	IfStatement	"if ( t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint_range , self -> hint_range0 , & self -> max_hint_range_count , sizeof ( self -> hint_range0 ) / count_of ( self -> hint_range0 ) , T1_MAX_HINTS , s_hint_range_array ) )"		1070188	1					
ANR	1070201	Condition	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint_range , self -> hint_range0 , & self -> max_hint_range_count , sizeof ( self -> hint_range0 ) / count_of ( self -> hint_range0 ) , T1_MAX_HINTS , s_hint_range_array )"	1356:11:55573:55813	1070188	0	True				
ANR	1070202	CallExpression	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint_range , self -> hint_range0 , & self -> max_hint_range_count , sizeof ( self -> hint_range0 ) / count_of ( self -> hint_range0 ) , T1_MAX_HINTS , s_hint_range_array )"		1070188	0					
ANR	1070203	Callee	t1_hinter__realloc_array		1070188	0					
ANR	1070204	Identifier	t1_hinter__realloc_array		1070188	0					
ANR	1070205	ArgumentList	self -> memory		1070188	1					
ANR	1070206	Argument	self -> memory		1070188	0					
ANR	1070207	PtrMemberAccess	self -> memory		1070188	0					
ANR	1070208	Identifier	self		1070188	0					
ANR	1070209	Identifier	memory		1070188	1					
ANR	1070210	Argument	( void * * ) & self -> hint_range		1070188	1					
ANR	1070211	CastExpression	( void * * ) & self -> hint_range		1070188	0					
ANR	1070212	CastTarget	void * *		1070188	0					
ANR	1070213	UnaryOperationExpression	& self -> hint_range		1070188	1					
ANR	1070214	UnaryOperator	&		1070188	0					
ANR	1070215	PtrMemberAccess	self -> hint_range		1070188	1					
ANR	1070216	Identifier	self		1070188	0					
ANR	1070217	Identifier	hint_range		1070188	1					
ANR	1070218	Argument	self -> hint_range0		1070188	2					
ANR	1070219	PtrMemberAccess	self -> hint_range0		1070188	0					
ANR	1070220	Identifier	self		1070188	0					
ANR	1070221	Identifier	hint_range0		1070188	1					
ANR	1070222	Argument	& self -> max_hint_range_count		1070188	3					
ANR	1070223	UnaryOperationExpression	& self -> max_hint_range_count		1070188	0					
ANR	1070224	UnaryOperator	&		1070188	0					
ANR	1070225	PtrMemberAccess	self -> max_hint_range_count		1070188	1					
ANR	1070226	Identifier	self		1070188	0					
ANR	1070227	Identifier	max_hint_range_count		1070188	1					
ANR	1070228	Argument	sizeof ( self -> hint_range0 ) / count_of ( self -> hint_range0 )		1070188	4					
ANR	1070229	MultiplicativeExpression	sizeof ( self -> hint_range0 ) / count_of ( self -> hint_range0 )		1070188	0		/			
ANR	1070230	SizeofExpression	sizeof ( self -> hint_range0 )		1070188	0					
ANR	1070231	Sizeof	sizeof		1070188	0					
ANR	1070232	PtrMemberAccess	self -> hint_range0		1070188	1					
ANR	1070233	Identifier	self		1070188	0					
ANR	1070234	Identifier	hint_range0		1070188	1					
ANR	1070235	CallExpression	count_of ( self -> hint_range0 )		1070188	1					
ANR	1070236	Callee	count_of		1070188	0					
ANR	1070237	Identifier	count_of		1070188	0					
ANR	1070238	ArgumentList	self -> hint_range0		1070188	1					
ANR	1070239	Argument	self -> hint_range0		1070188	0					
ANR	1070240	PtrMemberAccess	self -> hint_range0		1070188	0					
ANR	1070241	Identifier	self		1070188	0					
ANR	1070242	Identifier	hint_range0		1070188	1					
ANR	1070243	Argument	T1_MAX_HINTS		1070188	5					
ANR	1070244	Identifier	T1_MAX_HINTS		1070188	0					
ANR	1070245	Argument	s_hint_range_array		1070188	6					
ANR	1070246	Identifier	s_hint_range_array		1070188	0					
ANR	1070247	ExpressionStatement	return_error ( gs_error_VMerror )	1358:12:55828:55858	1070188	1	True				
ANR	1070248	CallExpression	return_error ( gs_error_VMerror )		1070188	0					
ANR	1070249	Callee	return_error		1070188	0					
ANR	1070250	Identifier	return_error		1070188	0					
ANR	1070251	ArgumentList	gs_error_VMerror		1070188	1					
ANR	1070252	Argument	gs_error_VMerror		1070188	0					
ANR	1070253	Identifier	gs_error_VMerror		1070188	0					
ANR	1070254	ExpressionStatement	* hint_range = & self -> hint_range [ self -> hint_range_count ]	1359:4:55864:55919	1070188	1	True				
ANR	1070255	AssignmentExpression	* hint_range = & self -> hint_range [ self -> hint_range_count ]		1070188	0		=			
ANR	1070256	UnaryOperationExpression	* hint_range		1070188	0					
ANR	1070257	UnaryOperator	*		1070188	0					
ANR	1070258	Identifier	hint_range		1070188	1					
ANR	1070259	UnaryOperationExpression	& self -> hint_range [ self -> hint_range_count ]		1070188	1					
ANR	1070260	UnaryOperator	&		1070188	0					
ANR	1070261	ArrayIndexing	self -> hint_range [ self -> hint_range_count ]		1070188	1					
ANR	1070262	PtrMemberAccess	self -> hint_range		1070188	0					
ANR	1070263	Identifier	self		1070188	0					
ANR	1070264	Identifier	hint_range		1070188	1					
ANR	1070265	PtrMemberAccess	self -> hint_range_count		1070188	1					
ANR	1070266	Identifier	self		1070188	0					
ANR	1070267	Identifier	hint_range_count		1070188	1					
ANR	1070268	ReturnStatement	return 0 ;	1360:4:55925:55933	1070188	2	True				
ANR	1070269	PrimaryExpression	0		1070188	0					
ANR	1070270	ReturnType	static inline int		1070188	1					
ANR	1070271	Identifier	t1_hinter__can_add_hint_range		1070188	2					
ANR	1070272	ParameterList	"t1_hinter * self , t1_hint_range * * hint_range"		1070188	3					
ANR	1070273	Parameter	t1_hinter * self	1354:48:55454:55469	1070188	0	True				
ANR	1070274	ParameterType	t1_hinter *		1070188	0					
ANR	1070275	Identifier	self		1070188	1					
ANR	1070276	Parameter	t1_hint_range * * hint_range	1354:66:55472:55497	1070188	1	True				
ANR	1070277	ParameterType	t1_hint_range * *		1070188	0					
ANR	1070278	Identifier	hint_range		1070188	1					
ANR	1070279	CFGEntryNode	ENTRY		1070188		True				
ANR	1070280	CFGExitNode	EXIT		1070188		True				
ANR	1070281	Symbol	T1_MAX_HINTS		1070188						
ANR	1070282	Symbol	self -> hint_range0		1070188						
ANR	1070283	Symbol	& self -> hint_range		1070188						
ANR	1070284	Symbol	* self		1070188						
ANR	1070285	Symbol	t1_hinter__realloc_array		1070188						
ANR	1070286	Symbol	hint_range		1070188						
ANR	1070287	Symbol	self -> hint_range_count		1070188						
ANR	1070288	Symbol	self -> hint_range		1070188						
ANR	1070289	Symbol	self -> memory		1070188						
ANR	1070290	Symbol	gs_error_VMerror		1070188						
ANR	1070291	Symbol	count_of		1070188						
ANR	1070292	Symbol	self -> max_hint_range_count		1070188						
ANR	1070293	Symbol	self		1070188						
ANR	1070294	Symbol	* hint_range		1070188						
ANR	1070295	Symbol	s_hint_range_array		1070188						
ANR	1070296	Symbol	& self -> max_hint_range_count		1070188						
ANR	1070297	Function	t1_hinter__can_add_hint_applying	1363:0:55938:56509							
ANR	1070298	FunctionDef	"t1_hinter__can_add_hint_applying (t1_hinter * self , t1_hint_applying * * hint_applying)"		1070297	0					
ANR	1070299	CompoundStatement		1364:0:56041:56509	1070297	0					
ANR	1070300	IfStatement	if ( self -> hint_applying_count >= self -> max_hint_applying_count )		1070297	0					
ANR	1070301	Condition	self -> hint_applying_count >= self -> max_hint_applying_count	1364:7:56049:56106	1070297	0	True				
ANR	1070302	RelationalExpression	self -> hint_applying_count >= self -> max_hint_applying_count		1070297	0		>=			
ANR	1070303	PtrMemberAccess	self -> hint_applying_count		1070297	0					
ANR	1070304	Identifier	self		1070297	0					
ANR	1070305	Identifier	hint_applying_count		1070297	1					
ANR	1070306	PtrMemberAccess	self -> max_hint_applying_count		1070297	1					
ANR	1070307	Identifier	self		1070297	0					
ANR	1070308	Identifier	max_hint_applying_count		1070297	1					
ANR	1070309	IfStatement	"if ( t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint_applying , self -> hint_applying0 , & self -> max_hint_applying_count , sizeof ( self -> hint_applying0 ) / count_of ( self -> hint_applying0 ) , T1_MAX_HINTS , s_hint_applying_array ) )"		1070297	1					
ANR	1070310	Condition	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint_applying , self -> hint_applying0 , & self -> max_hint_applying_count , sizeof ( self -> hint_applying0 ) / count_of ( self -> hint_applying0 ) , T1_MAX_HINTS , s_hint_applying_array )"	1365:11:56120:56378	1070297	0	True				
ANR	1070311	CallExpression	"t1_hinter__realloc_array ( self -> memory , ( void * * ) & self -> hint_applying , self -> hint_applying0 , & self -> max_hint_applying_count , sizeof ( self -> hint_applying0 ) / count_of ( self -> hint_applying0 ) , T1_MAX_HINTS , s_hint_applying_array )"		1070297	0					
ANR	1070312	Callee	t1_hinter__realloc_array		1070297	0					
ANR	1070313	Identifier	t1_hinter__realloc_array		1070297	0					
ANR	1070314	ArgumentList	self -> memory		1070297	1					
ANR	1070315	Argument	self -> memory		1070297	0					
ANR	1070316	PtrMemberAccess	self -> memory		1070297	0					
ANR	1070317	Identifier	self		1070297	0					
ANR	1070318	Identifier	memory		1070297	1					
ANR	1070319	Argument	( void * * ) & self -> hint_applying		1070297	1					
ANR	1070320	CastExpression	( void * * ) & self -> hint_applying		1070297	0					
ANR	1070321	CastTarget	void * *		1070297	0					
ANR	1070322	UnaryOperationExpression	& self -> hint_applying		1070297	1					
ANR	1070323	UnaryOperator	&		1070297	0					
ANR	1070324	PtrMemberAccess	self -> hint_applying		1070297	1					
ANR	1070325	Identifier	self		1070297	0					
ANR	1070326	Identifier	hint_applying		1070297	1					
ANR	1070327	Argument	self -> hint_applying0		1070297	2					
ANR	1070328	PtrMemberAccess	self -> hint_applying0		1070297	0					
ANR	1070329	Identifier	self		1070297	0					
ANR	1070330	Identifier	hint_applying0		1070297	1					
ANR	1070331	Argument	& self -> max_hint_applying_count		1070297	3					
ANR	1070332	UnaryOperationExpression	& self -> max_hint_applying_count		1070297	0					
ANR	1070333	UnaryOperator	&		1070297	0					
ANR	1070334	PtrMemberAccess	self -> max_hint_applying_count		1070297	1					
ANR	1070335	Identifier	self		1070297	0					
ANR	1070336	Identifier	max_hint_applying_count		1070297	1					
ANR	1070337	Argument	sizeof ( self -> hint_applying0 ) / count_of ( self -> hint_applying0 )		1070297	4					
ANR	1070338	MultiplicativeExpression	sizeof ( self -> hint_applying0 ) / count_of ( self -> hint_applying0 )		1070297	0		/			
ANR	1070339	SizeofExpression	sizeof ( self -> hint_applying0 )		1070297	0					
ANR	1070340	Sizeof	sizeof		1070297	0					
ANR	1070341	PtrMemberAccess	self -> hint_applying0		1070297	1					
ANR	1070342	Identifier	self		1070297	0					
ANR	1070343	Identifier	hint_applying0		1070297	1					
ANR	1070344	CallExpression	count_of ( self -> hint_applying0 )		1070297	1					
ANR	1070345	Callee	count_of		1070297	0					
ANR	1070346	Identifier	count_of		1070297	0					
ANR	1070347	ArgumentList	self -> hint_applying0		1070297	1					
ANR	1070348	Argument	self -> hint_applying0		1070297	0					
ANR	1070349	PtrMemberAccess	self -> hint_applying0		1070297	0					
ANR	1070350	Identifier	self		1070297	0					
ANR	1070351	Identifier	hint_applying0		1070297	1					
ANR	1070352	Argument	T1_MAX_HINTS		1070297	5					
ANR	1070353	Identifier	T1_MAX_HINTS		1070297	0					
ANR	1070354	Argument	s_hint_applying_array		1070297	6					
ANR	1070355	Identifier	s_hint_applying_array		1070297	0					
ANR	1070356	ExpressionStatement	return_error ( gs_error_VMerror )	1367:12:56393:56423	1070297	1	True				
ANR	1070357	CallExpression	return_error ( gs_error_VMerror )		1070297	0					
ANR	1070358	Callee	return_error		1070297	0					
ANR	1070359	Identifier	return_error		1070297	0					
ANR	1070360	ArgumentList	gs_error_VMerror		1070297	1					
ANR	1070361	Argument	gs_error_VMerror		1070297	0					
ANR	1070362	Identifier	gs_error_VMerror		1070297	0					
ANR	1070363	ExpressionStatement	* hint_applying = & self -> hint_applying [ self -> hint_applying_count ]	1368:4:56429:56493	1070297	1	True				
ANR	1070364	AssignmentExpression	* hint_applying = & self -> hint_applying [ self -> hint_applying_count ]		1070297	0		=			
ANR	1070365	UnaryOperationExpression	* hint_applying		1070297	0					
ANR	1070366	UnaryOperator	*		1070297	0					
ANR	1070367	Identifier	hint_applying		1070297	1					
ANR	1070368	UnaryOperationExpression	& self -> hint_applying [ self -> hint_applying_count ]		1070297	1					
ANR	1070369	UnaryOperator	&		1070297	0					
ANR	1070370	ArrayIndexing	self -> hint_applying [ self -> hint_applying_count ]		1070297	1					
ANR	1070371	PtrMemberAccess	self -> hint_applying		1070297	0					
ANR	1070372	Identifier	self		1070297	0					
ANR	1070373	Identifier	hint_applying		1070297	1					
ANR	1070374	PtrMemberAccess	self -> hint_applying_count		1070297	1					
ANR	1070375	Identifier	self		1070297	0					
ANR	1070376	Identifier	hint_applying_count		1070297	1					
ANR	1070377	ReturnStatement	return 0 ;	1369:4:56499:56507	1070297	2	True				
ANR	1070378	PrimaryExpression	0		1070297	0					
ANR	1070379	ReturnType	static inline int		1070297	1					
ANR	1070380	Identifier	t1_hinter__can_add_hint_applying		1070297	2					
ANR	1070381	ParameterList	"t1_hinter * self , t1_hint_applying * * hint_applying"		1070297	3					
ANR	1070382	Parameter	t1_hinter * self	1363:51:55989:56004	1070297	0	True				
ANR	1070383	ParameterType	t1_hinter *		1070297	0					
ANR	1070384	Identifier	self		1070297	1					
ANR	1070385	Parameter	t1_hint_applying * * hint_applying	1363:69:56007:56038	1070297	1	True				
ANR	1070386	ParameterType	t1_hint_applying * *		1070297	0					
ANR	1070387	Identifier	hint_applying		1070297	1					
ANR	1070388	CFGEntryNode	ENTRY		1070297		True				
ANR	1070389	CFGExitNode	EXIT		1070297		True				
ANR	1070390	Symbol	* hint_applying		1070297						
ANR	1070391	Symbol	s_hint_applying_array		1070297						
ANR	1070392	Symbol	T1_MAX_HINTS		1070297						
ANR	1070393	Symbol	self -> max_hint_applying_count		1070297						
ANR	1070394	Symbol	* self		1070297						
ANR	1070395	Symbol	t1_hinter__realloc_array		1070297						
ANR	1070396	Symbol	& self -> hint_applying		1070297						
ANR	1070397	Symbol	self -> hint_applying_count		1070297						
ANR	1070398	Symbol	self -> memory		1070297						
ANR	1070399	Symbol	hint_applying		1070297						
ANR	1070400	Symbol	self -> hint_applying0		1070297						
ANR	1070401	Symbol	gs_error_VMerror		1070297						
ANR	1070402	Symbol	count_of		1070297						
ANR	1070403	Symbol	self		1070297						
ANR	1070404	Symbol	self -> hint_applying		1070297						
ANR	1070405	Symbol	& self -> max_hint_applying_count		1070297						
ANR	1070406	Function	t1_hinter__hint_mask	1372:0:56512:58002							
ANR	1070407	FunctionDef	"t1_hinter__hint_mask (t1_hinter * self , byte * mask)"		1070406	0					
ANR	1070408	CompoundStatement		1373:0:56567:58002	1070406	0					
ANR	1070409	IdentifierDeclStatement	"int hint_count , i ;"	1373:3:56571:56588	1070406	0	True				
ANR	1070410	IdentifierDecl	hint_count		1070406	0					
ANR	1070411	IdentifierDeclType	int		1070406	0					
ANR	1070412	Identifier	hint_count		1070406	1					
ANR	1070413	IdentifierDecl	i		1070406	1					
ANR	1070414	IdentifierDeclType	int		1070406	0					
ANR	1070415	Identifier	i		1070406	1					
ANR	1070416	IfStatement	if ( self -> disable_hinting )		1070406	1					
ANR	1070417	Condition	self -> disable_hinting	1375:8:56599:56619	1070406	0	True				
ANR	1070418	PtrMemberAccess	self -> disable_hinting		1070406	0					
ANR	1070419	Identifier	self		1070406	0					
ANR	1070420	Identifier	disable_hinting		1070406	1					
ANR	1070421	ReturnStatement	return 0 ;	1376:8:56630:56638	1070406	1	True				
ANR	1070422	PrimaryExpression	0		1070406	0					
ANR	1070423	ExpressionStatement	hint_count = self -> hint_count	1377:4:56644:56673	1070406	2	True				
ANR	1070424	AssignmentExpression	hint_count = self -> hint_count		1070406	0		=			
ANR	1070425	Identifier	hint_count		1070406	0					
ANR	1070426	PtrMemberAccess	self -> hint_count		1070406	1					
ANR	1070427	Identifier	self		1070406	0					
ANR	1070428	Identifier	hint_count		1070406	1					
ANR	1070429	ForStatement	for ( i = 0 ; i < hint_count ; i ++ )		1070406	3					
ANR	1070430	ForInit	i = 0 ;	1379:8:56684:56689	1070406	0	True				
ANR	1070431	AssignmentExpression	i = 0		1070406	0		=			
ANR	1070432	Identifier	i		1070406	0					
ANR	1070433	PrimaryExpression	0		1070406	1					
ANR	1070434	Condition	i < hint_count	1379:15:56691:56704	1070406	1	True				
ANR	1070435	RelationalExpression	i < hint_count		1070406	0		<			
ANR	1070436	Identifier	i		1070406	0					
ANR	1070437	Identifier	hint_count		1070406	1					
ANR	1070438	PostIncDecOperationExpression	i ++	1379:31:56707:56709	1070406	2	True				
ANR	1070439	Identifier	i		1070406	0					
ANR	1070440	IncDec	++		1070406	1					
ANR	1070441	CompoundStatement		9:8:237:267	1070406	3					
ANR	1070442	IdentifierDeclStatement	bool activate = ( mask != NULL && ( mask [ i >> 3 ] & ( 0x80 >> ( i & 7 ) ) ) != 0 ) ;	1380:8:56722:56795	1070406	0	True				
ANR	1070443	IdentifierDecl	activate = ( mask != NULL && ( mask [ i >> 3 ] & ( 0x80 >> ( i & 7 ) ) ) != 0 )		1070406	0					
ANR	1070444	IdentifierDeclType	bool		1070406	0					
ANR	1070445	Identifier	activate		1070406	1					
ANR	1070446	AssignmentExpression	activate = ( mask != NULL && ( mask [ i >> 3 ] & ( 0x80 >> ( i & 7 ) ) ) != 0 )		1070406	2		=			
ANR	1070447	Identifier	activate		1070406	0					
ANR	1070448	AndExpression	mask != NULL && ( mask [ i >> 3 ] & ( 0x80 >> ( i & 7 ) ) ) != 0		1070406	1		&&			
ANR	1070449	EqualityExpression	mask != NULL		1070406	0		!=			
ANR	1070450	Identifier	mask		1070406	0					
ANR	1070451	Identifier	NULL		1070406	1					
ANR	1070452	EqualityExpression	( mask [ i >> 3 ] & ( 0x80 >> ( i & 7 ) ) ) != 0		1070406	1		!=			
ANR	1070453	BitAndExpression	mask [ i >> 3 ] & ( 0x80 >> ( i & 7 ) )		1070406	0		&			
ANR	1070454	ArrayIndexing	mask [ i >> 3 ]		1070406	0					
ANR	1070455	Identifier	mask		1070406	0					
ANR	1070456	ShiftExpression	i >> 3		1070406	1		>>			
ANR	1070457	Identifier	i		1070406	0					
ANR	1070458	PrimaryExpression	3		1070406	1					
ANR	1070459	ShiftExpression	0x80 >> ( i & 7 )		1070406	1		>>			
ANR	1070460	PrimaryExpression	0x80		1070406	0					
ANR	1070461	BitAndExpression	i & 7		1070406	1		&			
ANR	1070462	Identifier	i		1070406	0					
ANR	1070463	PrimaryExpression	7		1070406	1					
ANR	1070464	PrimaryExpression	0		1070406	1					
ANR	1070465	IdentifierDeclStatement	t1_hint * hint = & self -> hint [ i ] ;	1381:8:56805:56835	1070406	1	True				
ANR	1070466	IdentifierDecl	* hint = & self -> hint [ i ]		1070406	0					
ANR	1070467	IdentifierDeclType	t1_hint *		1070406	0					
ANR	1070468	Identifier	hint		1070406	1					
ANR	1070469	AssignmentExpression	* hint = & self -> hint [ i ]		1070406	2		=			
ANR	1070470	Identifier	hint		1070406	0					
ANR	1070471	UnaryOperationExpression	& self -> hint [ i ]		1070406	1					
ANR	1070472	UnaryOperator	&		1070406	0					
ANR	1070473	ArrayIndexing	self -> hint [ i ]		1070406	1					
ANR	1070474	PtrMemberAccess	self -> hint		1070406	0					
ANR	1070475	Identifier	self		1070406	0					
ANR	1070476	Identifier	hint		1070406	1					
ANR	1070477	Identifier	i		1070406	1					
ANR	1070478	IfStatement	if ( activate )		1070406	2					
ANR	1070479	Condition	activate	1383:12:56850:56857	1070406	0	True				
ANR	1070480	Identifier	activate		1070406	0					
ANR	1070481	CompoundStatement		11:22:292:292	1070406	1					
ANR	1070482	IfStatement	if ( hint -> range_index != - 1 && ( self -> hint_range [ hint -> range_index ] . end_pole == - 1 || self -> hint_range [ hint -> range_index ] . end_pole == self -> pole_count ) )		1070406	0					
ANR	1070483	Condition	hint -> range_index != - 1 && ( self -> hint_range [ hint -> range_index ] . end_pole == - 1 || self -> hint_range [ hint -> range_index ] . end_pole == self -> pole_count )	1384:16:56878:57057	1070406	0	True				
ANR	1070484	AndExpression	hint -> range_index != - 1 && ( self -> hint_range [ hint -> range_index ] . end_pole == - 1 || self -> hint_range [ hint -> range_index ] . end_pole == self -> pole_count )		1070406	0		&&			
ANR	1070485	EqualityExpression	hint -> range_index != - 1		1070406	0		!=			
ANR	1070486	PtrMemberAccess	hint -> range_index		1070406	0					
ANR	1070487	Identifier	hint		1070406	0					
ANR	1070488	Identifier	range_index		1070406	1					
ANR	1070489	UnaryOperationExpression	- 1		1070406	1					
ANR	1070490	UnaryOperator	-		1070406	0					
ANR	1070491	PrimaryExpression	1		1070406	1					
ANR	1070492	OrExpression	self -> hint_range [ hint -> range_index ] . end_pole == - 1 || self -> hint_range [ hint -> range_index ] . end_pole == self -> pole_count		1070406	1		||			
ANR	1070493	EqualityExpression	self -> hint_range [ hint -> range_index ] . end_pole == - 1		1070406	0		==			
ANR	1070494	MemberAccess	self -> hint_range [ hint -> range_index ] . end_pole		1070406	0					
ANR	1070495	ArrayIndexing	self -> hint_range [ hint -> range_index ]		1070406	0					
ANR	1070496	PtrMemberAccess	self -> hint_range		1070406	0					
ANR	1070497	Identifier	self		1070406	0					
ANR	1070498	Identifier	hint_range		1070406	1					
ANR	1070499	PtrMemberAccess	hint -> range_index		1070406	1					
ANR	1070500	Identifier	hint		1070406	0					
ANR	1070501	Identifier	range_index		1070406	1					
ANR	1070502	Identifier	end_pole		1070406	1					
ANR	1070503	UnaryOperationExpression	- 1		1070406	1					
ANR	1070504	UnaryOperator	-		1070406	0					
ANR	1070505	PrimaryExpression	1		1070406	1					
ANR	1070506	EqualityExpression	self -> hint_range [ hint -> range_index ] . end_pole == self -> pole_count		1070406	1		==			
ANR	1070507	MemberAccess	self -> hint_range [ hint -> range_index ] . end_pole		1070406	0					
ANR	1070508	ArrayIndexing	self -> hint_range [ hint -> range_index ]		1070406	0					
ANR	1070509	PtrMemberAccess	self -> hint_range		1070406	0					
ANR	1070510	Identifier	self		1070406	0					
ANR	1070511	Identifier	hint_range		1070406	1					
ANR	1070512	PtrMemberAccess	hint -> range_index		1070406	1					
ANR	1070513	Identifier	hint		1070406	0					
ANR	1070514	Identifier	range_index		1070406	1					
ANR	1070515	Identifier	end_pole		1070406	1					
ANR	1070516	PtrMemberAccess	self -> pole_count		1070406	1					
ANR	1070517	Identifier	self		1070406	0					
ANR	1070518	Identifier	pole_count		1070406	1					
ANR	1070519	CompoundStatement		14:84:492:492	1070406	1					
ANR	1070520	ExpressionStatement	self -> hint_range [ hint -> range_index ] . end_pole = - 1	1388:16:57120:57169	1070406	0	True				
ANR	1070521	AssignmentExpression	self -> hint_range [ hint -> range_index ] . end_pole = - 1		1070406	0		=			
ANR	1070522	MemberAccess	self -> hint_range [ hint -> range_index ] . end_pole		1070406	0					
ANR	1070523	ArrayIndexing	self -> hint_range [ hint -> range_index ]		1070406	0					
ANR	1070524	PtrMemberAccess	self -> hint_range		1070406	0					
ANR	1070525	Identifier	self		1070406	0					
ANR	1070526	Identifier	hint_range		1070406	1					
ANR	1070527	PtrMemberAccess	hint -> range_index		1070406	1					
ANR	1070528	Identifier	hint		1070406	0					
ANR	1070529	Identifier	range_index		1070406	1					
ANR	1070530	Identifier	end_pole		1070406	1					
ANR	1070531	UnaryOperationExpression	- 1		1070406	1					
ANR	1070532	UnaryOperator	-		1070406	0					
ANR	1070533	PrimaryExpression	1		1070406	1					
ANR	1070534	ElseStatement	else		1070406	0					
ANR	1070535	CompoundStatement		20:16:719:778	1070406	0					
ANR	1070536	IdentifierDeclStatement	t1_hint_range * hint_range ;	1391:16:57244:57269	1070406	0	True				
ANR	1070537	IdentifierDecl	* hint_range		1070406	0					
ANR	1070538	IdentifierDeclType	t1_hint_range *		1070406	0					
ANR	1070539	Identifier	hint_range		1070406	1					
ANR	1070540	IdentifierDeclStatement	"int code = t1_hinter__can_add_hint_range ( self , & hint_range ) ;"	1392:16:57287:57346	1070406	1	True				
ANR	1070541	IdentifierDecl	"code = t1_hinter__can_add_hint_range ( self , & hint_range )"		1070406	0					
ANR	1070542	IdentifierDeclType	int		1070406	0					
ANR	1070543	Identifier	code		1070406	1					
ANR	1070544	AssignmentExpression	"code = t1_hinter__can_add_hint_range ( self , & hint_range )"		1070406	2		=			
ANR	1070545	Identifier	code		1070406	0					
ANR	1070546	CallExpression	"t1_hinter__can_add_hint_range ( self , & hint_range )"		1070406	1					
ANR	1070547	Callee	t1_hinter__can_add_hint_range		1070406	0					
ANR	1070548	Identifier	t1_hinter__can_add_hint_range		1070406	0					
ANR	1070549	ArgumentList	self		1070406	1					
ANR	1070550	Argument	self		1070406	0					
ANR	1070551	Identifier	self		1070406	0					
ANR	1070552	Argument	& hint_range		1070406	1					
ANR	1070553	UnaryOperationExpression	& hint_range		1070406	0					
ANR	1070554	UnaryOperator	&		1070406	0					
ANR	1070555	Identifier	hint_range		1070406	1					
ANR	1070556	IfStatement	if ( code < 0 )		1070406	2					
ANR	1070557	Condition	code < 0	1394:20:57369:57376	1070406	0	True				
ANR	1070558	RelationalExpression	code < 0		1070406	0		<			
ANR	1070559	Identifier	code		1070406	0					
ANR	1070560	PrimaryExpression	0		1070406	1					
ANR	1070561	ReturnStatement	return code ;	1395:19:57398:57409	1070406	1	True				
ANR	1070562	Identifier	code		1070406	0					
ANR	1070563	ExpressionStatement	hint_range -> beg_pole = self -> pole_count	1396:16:57427:57466	1070406	3	True				
ANR	1070564	AssignmentExpression	hint_range -> beg_pole = self -> pole_count		1070406	0		=			
ANR	1070565	PtrMemberAccess	hint_range -> beg_pole		1070406	0					
ANR	1070566	Identifier	hint_range		1070406	0					
ANR	1070567	Identifier	beg_pole		1070406	1					
ANR	1070568	PtrMemberAccess	self -> pole_count		1070406	1					
ANR	1070569	Identifier	self		1070406	0					
ANR	1070570	Identifier	pole_count		1070406	1					
ANR	1070571	ExpressionStatement	hint_range -> end_pole = - 1	1397:16:57484:57509	1070406	4	True				
ANR	1070572	AssignmentExpression	hint_range -> end_pole = - 1		1070406	0		=			
ANR	1070573	PtrMemberAccess	hint_range -> end_pole		1070406	0					
ANR	1070574	Identifier	hint_range		1070406	0					
ANR	1070575	Identifier	end_pole		1070406	1					
ANR	1070576	UnaryOperationExpression	- 1		1070406	1					
ANR	1070577	UnaryOperator	-		1070406	0					
ANR	1070578	PrimaryExpression	1		1070406	1					
ANR	1070579	ExpressionStatement	hint_range -> next = hint -> range_index	1398:16:57527:57563	1070406	5	True				
ANR	1070580	AssignmentExpression	hint_range -> next = hint -> range_index		1070406	0		=			
ANR	1070581	PtrMemberAccess	hint_range -> next		1070406	0					
ANR	1070582	Identifier	hint_range		1070406	0					
ANR	1070583	Identifier	next		1070406	1					
ANR	1070584	PtrMemberAccess	hint -> range_index		1070406	1					
ANR	1070585	Identifier	hint		1070406	0					
ANR	1070586	Identifier	range_index		1070406	1					
ANR	1070587	ExpressionStatement	hint -> range_index = self -> hint_range_count	1399:16:57581:57623	1070406	6	True				
ANR	1070588	AssignmentExpression	hint -> range_index = self -> hint_range_count		1070406	0		=			
ANR	1070589	PtrMemberAccess	hint -> range_index		1070406	0					
ANR	1070590	Identifier	hint		1070406	0					
ANR	1070591	Identifier	range_index		1070406	1					
ANR	1070592	PtrMemberAccess	self -> hint_range_count		1070406	1					
ANR	1070593	Identifier	self		1070406	0					
ANR	1070594	Identifier	hint_range_count		1070406	1					
ANR	1070595	ExpressionStatement	self -> hint_range_count ++	1400:16:57641:57665	1070406	7	True				
ANR	1070596	PostIncDecOperationExpression	self -> hint_range_count ++		1070406	0					
ANR	1070597	PtrMemberAccess	self -> hint_range_count		1070406	0					
ANR	1070598	Identifier	self		1070406	0					
ANR	1070599	Identifier	hint_range_count		1070406	1					
ANR	1070600	IncDec	++		1070406	1					
ANR	1070601	ElseStatement	else		1070406	0					
ANR	1070602	CompoundStatement		30:15:1128:1128	1070406	0					
ANR	1070603	IfStatement	if ( hint -> range_index != - 1 && self -> hint_range [ hint -> range_index ] . end_pole == - 1 )		1070406	0					
ANR	1070604	Condition	hint -> range_index != - 1 && self -> hint_range [ hint -> range_index ] . end_pole == - 1	1403:16:57714:57806	1070406	0	True				
ANR	1070605	AndExpression	hint -> range_index != - 1 && self -> hint_range [ hint -> range_index ] . end_pole == - 1		1070406	0		&&			
ANR	1070606	EqualityExpression	hint -> range_index != - 1		1070406	0		!=			
ANR	1070607	PtrMemberAccess	hint -> range_index		1070406	0					
ANR	1070608	Identifier	hint		1070406	0					
ANR	1070609	Identifier	range_index		1070406	1					
ANR	1070610	UnaryOperationExpression	- 1		1070406	1					
ANR	1070611	UnaryOperator	-		1070406	0					
ANR	1070612	PrimaryExpression	1		1070406	1					
ANR	1070613	EqualityExpression	self -> hint_range [ hint -> range_index ] . end_pole == - 1		1070406	1		==			
ANR	1070614	MemberAccess	self -> hint_range [ hint -> range_index ] . end_pole		1070406	0					
ANR	1070615	ArrayIndexing	self -> hint_range [ hint -> range_index ]		1070406	0					
ANR	1070616	PtrMemberAccess	self -> hint_range		1070406	0					
ANR	1070617	Identifier	self		1070406	0					
ANR	1070618	Identifier	hint_range		1070406	1					
ANR	1070619	PtrMemberAccess	hint -> range_index		1070406	1					
ANR	1070620	Identifier	hint		1070406	0					
ANR	1070621	Identifier	range_index		1070406	1					
ANR	1070622	Identifier	end_pole		1070406	1					
ANR	1070623	UnaryOperationExpression	- 1		1070406	1					
ANR	1070624	UnaryOperator	-		1070406	0					
ANR	1070625	PrimaryExpression	1		1070406	1					
ANR	1070626	CompoundStatement		32:68:1241:1241	1070406	1					
ANR	1070627	ExpressionStatement	self -> hint_range [ hint -> range_index ] . end_pole = self -> pole_count	1406:16:57860:57923	1070406	0	True				
ANR	1070628	AssignmentExpression	self -> hint_range [ hint -> range_index ] . end_pole = self -> pole_count		1070406	0		=			
ANR	1070629	MemberAccess	self -> hint_range [ hint -> range_index ] . end_pole		1070406	0					
ANR	1070630	ArrayIndexing	self -> hint_range [ hint -> range_index ]		1070406	0					
ANR	1070631	PtrMemberAccess	self -> hint_range		1070406	0					
ANR	1070632	Identifier	self		1070406	0					
ANR	1070633	Identifier	hint_range		1070406	1					
ANR	1070634	PtrMemberAccess	hint -> range_index		1070406	1					
ANR	1070635	Identifier	hint		1070406	0					
ANR	1070636	Identifier	range_index		1070406	1					
ANR	1070637	Identifier	end_pole		1070406	1					
ANR	1070638	PtrMemberAccess	self -> pole_count		1070406	1					
ANR	1070639	Identifier	self		1070406	0					
ANR	1070640	Identifier	pole_count		1070406	1					
ANR	1070641	ElseStatement	else		1070406	0					
ANR	1070642	ExpressionStatement	DO_NOTHING	1408:16:57960:57970	1070406	0	True				
ANR	1070643	Identifier	DO_NOTHING		1070406	0					
ANR	1070644	ReturnStatement	return 0 ;	1411:4:57992:58000	1070406	4	True				
ANR	1070645	PrimaryExpression	0		1070406	0					
ANR	1070646	ReturnType	int		1070406	1					
ANR	1070647	Identifier	t1_hinter__hint_mask		1070406	2					
ANR	1070648	ParameterList	"t1_hinter * self , byte * mask"		1070406	3					
ANR	1070649	Parameter	t1_hinter * self	1372:25:56537:56552	1070406	0	True				
ANR	1070650	ParameterType	t1_hinter *		1070406	0					
ANR	1070651	Identifier	self		1070406	1					
ANR	1070652	Parameter	byte * mask	1372:43:56555:56564	1070406	1	True				
ANR	1070653	ParameterType	byte *		1070406	0					
ANR	1070654	Identifier	mask		1070406	1					
ANR	1070655	CFGEntryNode	ENTRY		1070406		True				
ANR	1070656	CFGExitNode	EXIT		1070406		True				
ANR	1070657	Symbol	* mask		1070406						
ANR	1070658	Symbol	code		1070406						
ANR	1070659	Symbol	self -> pole_count		1070406						
ANR	1070660	Symbol	hint_range		1070406						
ANR	1070661	Symbol	hint -> range_index		1070406						
ANR	1070662	Symbol	hint_range -> beg_pole		1070406						
ANR	1070663	Symbol	* hint -> range_index		1070406						
ANR	1070664	Symbol	self -> disable_hinting		1070406						
ANR	1070665	Symbol	self -> hint_range [ hint -> range_index ] . end_pole		1070406						
ANR	1070666	Symbol	t1_hinter__can_add_hint_range		1070406						
ANR	1070667	Symbol	hint_range -> next		1070406						
ANR	1070668	Symbol	mask		1070406						
ANR	1070669	Symbol	* hint		1070406						
ANR	1070670	Symbol	NULL		1070406						
ANR	1070671	Symbol	self -> hint		1070406						
ANR	1070672	Symbol	* * self		1070406						
ANR	1070673	Symbol	* self		1070406						
ANR	1070674	Symbol	hint_count		1070406						
ANR	1070675	Symbol	i		1070406						
ANR	1070676	Symbol	* * hint		1070406						
ANR	1070677	Symbol	self -> hint_range		1070406						
ANR	1070678	Symbol	self -> hint_range_count		1070406						
ANR	1070679	Symbol	* self -> hint_range		1070406						
ANR	1070680	Symbol	self -> hint_count		1070406						
ANR	1070681	Symbol	* i		1070406						
ANR	1070682	Symbol	hint		1070406						
ANR	1070683	Symbol	activate		1070406						
ANR	1070684	Symbol	hint_range -> end_pole		1070406						
ANR	1070685	Symbol	self		1070406						
ANR	1070686	Symbol	* hint_range		1070406						
ANR	1070687	Symbol	& hint_range		1070406						
ANR	1070688	Function	t1_hinter__drop_hints	1414:0:58005:58242							
ANR	1070689	FunctionDef	t1_hinter__drop_hints (t1_hinter * self)		1070688	0					
ANR	1070690	CompoundStatement		1415:0:58049:58242	1070688	0					
ANR	1070691	IfStatement	if ( self -> disable_hinting )		1070688	0					
ANR	1070692	Condition	self -> disable_hinting	1415:7:58057:58077	1070688	0	True				
ANR	1070693	PtrMemberAccess	self -> disable_hinting		1070688	0					
ANR	1070694	Identifier	self		1070688	0					
ANR	1070695	Identifier	disable_hinting		1070688	1					
ANR	1070696	ReturnStatement	return 0 ;	1416:8:58088:58096	1070688	1	True				
ANR	1070697	PrimaryExpression	0		1070688	0					
ANR	1070698	IfStatement	if ( self -> primary_hint_count == - 1 )		1070688	1					
ANR	1070699	Condition	self -> primary_hint_count == - 1	1417:8:58106:58135	1070688	0	True				
ANR	1070700	EqualityExpression	self -> primary_hint_count == - 1		1070688	0		==			
ANR	1070701	PtrMemberAccess	self -> primary_hint_count		1070688	0					
ANR	1070702	Identifier	self		1070688	0					
ANR	1070703	Identifier	primary_hint_count		1070688	1					
ANR	1070704	UnaryOperationExpression	- 1		1070688	1					
ANR	1070705	UnaryOperator	-		1070688	0					
ANR	1070706	PrimaryExpression	1		1070688	1					
ANR	1070707	ExpressionStatement	self -> primary_hint_count = self -> hint_range_count	1418:8:58146:58195	1070688	1	True				
ANR	1070708	AssignmentExpression	self -> primary_hint_count = self -> hint_range_count		1070688	0		=			
ANR	1070709	PtrMemberAccess	self -> primary_hint_count		1070688	0					
ANR	1070710	Identifier	self		1070688	0					
ANR	1070711	Identifier	primary_hint_count		1070688	1					
ANR	1070712	PtrMemberAccess	self -> hint_range_count		1070688	1					
ANR	1070713	Identifier	self		1070688	0					
ANR	1070714	Identifier	hint_range_count		1070688	1					
ANR	1070715	ReturnStatement	"return t1_hinter__hint_mask ( self , NULL ) ;"	1419:4:58201:58240	1070688	2	True				
ANR	1070716	CallExpression	"t1_hinter__hint_mask ( self , NULL )"		1070688	0					
ANR	1070717	Callee	t1_hinter__hint_mask		1070688	0					
ANR	1070718	Identifier	t1_hinter__hint_mask		1070688	0					
ANR	1070719	ArgumentList	self		1070688	1					
ANR	1070720	Argument	self		1070688	0					
ANR	1070721	Identifier	self		1070688	0					
ANR	1070722	Argument	NULL		1070688	1					
ANR	1070723	Identifier	NULL		1070688	0					
ANR	1070724	ReturnType	int		1070688	1					
ANR	1070725	Identifier	t1_hinter__drop_hints		1070688	2					
ANR	1070726	ParameterList	t1_hinter * self		1070688	3					
ANR	1070727	Parameter	t1_hinter * self	1414:26:58031:58046	1070688	0	True				
ANR	1070728	ParameterType	t1_hinter *		1070688	0					
ANR	1070729	Identifier	self		1070688	1					
ANR	1070730	CFGEntryNode	ENTRY		1070688		True				
ANR	1070731	CFGExitNode	EXIT		1070688		True				
ANR	1070732	Symbol	NULL		1070688						
ANR	1070733	Symbol	* self		1070688						
ANR	1070734	Symbol	self		1070688						
ANR	1070735	Symbol	t1_hinter__hint_mask		1070688						
ANR	1070736	Symbol	self -> hint_range_count		1070688						
ANR	1070737	Symbol	self -> disable_hinting		1070688						
ANR	1070738	Symbol	self -> primary_hint_count		1070688						
ANR	1070739	Function	t1_hinter__stem	1422:0:58245:59984							
ANR	1070740	FunctionDef	"t1_hinter__stem (t1_hinter * self , enum t1_hint_type type , unsigned short stem3_index , fixed v0 , fixed v1 , int side_mask)"		1070739	0					
ANR	1070741	CompoundStatement		1424:0:58435:59984	1070739	0					
ANR	1070742	IdentifierDeclStatement	t1_hint * hint ;	1424:3:58439:58452	1070739	0	True				
ANR	1070743	IdentifierDecl	* hint		1070739	0					
ANR	1070744	IdentifierDeclType	t1_hint *		1070739	0					
ANR	1070745	Identifier	hint		1070739	1					
ANR	1070746	IdentifierDeclStatement	t1_glyph_space_coord s = ( type == hstem ? self -> subglyph_orig_gy : self -> subglyph_orig_gx ) ;	1425:4:58458:58548	1070739	1	True				
ANR	1070747	IdentifierDecl	s = ( type == hstem ? self -> subglyph_orig_gy : self -> subglyph_orig_gx )		1070739	0					
ANR	1070748	IdentifierDeclType	t1_glyph_space_coord		1070739	0					
ANR	1070749	Identifier	s		1070739	1					
ANR	1070750	AssignmentExpression	s = ( type == hstem ? self -> subglyph_orig_gy : self -> subglyph_orig_gx )		1070739	2		=			
ANR	1070751	Identifier	s		1070739	0					
ANR	1070752	ConditionalExpression	type == hstem ? self -> subglyph_orig_gy : self -> subglyph_orig_gx		1070739	1					
ANR	1070753	Condition	type == hstem		1070739	0					
ANR	1070754	EqualityExpression	type == hstem		1070739	0		==			
ANR	1070755	Identifier	type		1070739	0					
ANR	1070756	Identifier	hstem		1070739	1					
ANR	1070757	PtrMemberAccess	self -> subglyph_orig_gy		1070739	1					
ANR	1070758	Identifier	self		1070739	0					
ANR	1070759	Identifier	subglyph_orig_gy		1070739	1					
ANR	1070760	PtrMemberAccess	self -> subglyph_orig_gx		1070739	2					
ANR	1070761	Identifier	self		1070739	0					
ANR	1070762	Identifier	subglyph_orig_gx		1070739	1					
ANR	1070763	IdentifierDeclStatement	t1_glyph_space_coord g0 = s + v0 ;	1426:4:58554:58586	1070739	2	True				
ANR	1070764	IdentifierDecl	g0 = s + v0		1070739	0					
ANR	1070765	IdentifierDeclType	t1_glyph_space_coord		1070739	0					
ANR	1070766	Identifier	g0		1070739	1					
ANR	1070767	AssignmentExpression	g0 = s + v0		1070739	2		=			
ANR	1070768	Identifier	g0		1070739	0					
ANR	1070769	AdditiveExpression	s + v0		1070739	1		+			
ANR	1070770	Identifier	s		1070739	0					
ANR	1070771	Identifier	v0		1070739	1					
ANR	1070772	IdentifierDeclStatement	t1_glyph_space_coord g1 = s + v0 + v1 ;	1427:4:58592:58629	1070739	3	True				
ANR	1070773	IdentifierDecl	g1 = s + v0 + v1		1070739	0					
ANR	1070774	IdentifierDeclType	t1_glyph_space_coord		1070739	0					
ANR	1070775	Identifier	g1		1070739	1					
ANR	1070776	AssignmentExpression	g1 = s + v0 + v1		1070739	2		=			
ANR	1070777	Identifier	g1		1070739	0					
ANR	1070778	AdditiveExpression	s + v0 + v1		1070739	1		+			
ANR	1070779	Identifier	s		1070739	0					
ANR	1070780	AdditiveExpression	v0 + v1		1070739	1		+			
ANR	1070781	Identifier	v0		1070739	0					
ANR	1070782	Identifier	v1		1070739	1					
ANR	1070783	IdentifierDeclStatement	t1_hint_range * range ;	1428:4:58635:58655	1070739	4	True				
ANR	1070784	IdentifierDecl	* range		1070739	0					
ANR	1070785	IdentifierDeclType	t1_hint_range *		1070739	0					
ANR	1070786	Identifier	range		1070739	1					
ANR	1070787	IdentifierDeclStatement	"int i , code ;"	1429:0:58657:58668	1070739	5	True				
ANR	1070788	IdentifierDecl	i		1070739	0					
ANR	1070789	IdentifierDeclType	int		1070739	0					
ANR	1070790	Identifier	i		1070739	1					
ANR	1070791	IdentifierDecl	code		1070739	1					
ANR	1070792	IdentifierDeclType	int		1070739	0					
ANR	1070793	Identifier	code		1070739	1					
ANR	1070794	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , ( side_mask & 1 ? g0 : g1 ) , ( side_mask & 2 ? g1 : g0 ) )"	1431:4:58675:58769	1070739	6	True				
ANR	1070795	CallExpression	"t1_hinter__adjust_matrix_precision ( self , ( side_mask & 1 ? g0 : g1 ) , ( side_mask & 2 ? g1 : g0 ) )"		1070739	0					
ANR	1070796	Callee	t1_hinter__adjust_matrix_precision		1070739	0					
ANR	1070797	Identifier	t1_hinter__adjust_matrix_precision		1070739	0					
ANR	1070798	ArgumentList	self		1070739	1					
ANR	1070799	Argument	self		1070739	0					
ANR	1070800	Identifier	self		1070739	0					
ANR	1070801	Argument	side_mask & 1 ? g0 : g1		1070739	1					
ANR	1070802	ConditionalExpression	side_mask & 1 ? g0 : g1		1070739	0					
ANR	1070803	Condition	side_mask & 1		1070739	0					
ANR	1070804	BitAndExpression	side_mask & 1		1070739	0		&			
ANR	1070805	Identifier	side_mask		1070739	0					
ANR	1070806	PrimaryExpression	1		1070739	1					
ANR	1070807	Identifier	g0		1070739	1					
ANR	1070808	Identifier	g1		1070739	2					
ANR	1070809	Argument	side_mask & 2 ? g1 : g0		1070739	2					
ANR	1070810	ConditionalExpression	side_mask & 2 ? g1 : g0		1070739	0					
ANR	1070811	Condition	side_mask & 2		1070739	0					
ANR	1070812	BitAndExpression	side_mask & 2		1070739	0		&			
ANR	1070813	Identifier	side_mask		1070739	0					
ANR	1070814	PrimaryExpression	2		1070739	1					
ANR	1070815	Identifier	g1		1070739	1					
ANR	1070816	Identifier	g0		1070739	2					
ANR	1070817	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		1070739	7					
ANR	1070818	ForInit	i = 0 ;	1432:9:58780:58785	1070739	0	True				
ANR	1070819	AssignmentExpression	i = 0		1070739	0		=			
ANR	1070820	Identifier	i		1070739	0					
ANR	1070821	PrimaryExpression	0		1070739	1					
ANR	1070822	Condition	i < self -> hint_count	1432:16:58787:58806	1070739	1	True				
ANR	1070823	RelationalExpression	i < self -> hint_count		1070739	0		<			
ANR	1070824	Identifier	i		1070739	0					
ANR	1070825	PtrMemberAccess	self -> hint_count		1070739	1					
ANR	1070826	Identifier	self		1070739	0					
ANR	1070827	Identifier	hint_count		1070739	1					
ANR	1070828	PostIncDecOperationExpression	i ++	1432:38:58809:58811	1070739	2	True				
ANR	1070829	Identifier	i		1070739	0					
ANR	1070830	IncDec	++		1070739	1					
ANR	1070831	IfStatement	if ( self -> hint [ i ] . type == type && self -> hint [ i ] . g0 == g0 && self -> hint [ i ] . g1 == g1 && self -> hint [ i ] . side_mask == side_mask )		1070739	3					
ANR	1070832	Condition	self -> hint [ i ] . type == type && self -> hint [ i ] . g0 == g0 && self -> hint [ i ] . g1 == g1 && self -> hint [ i ] . side_mask == side_mask	1433:12:58826:58975	1070739	0	True				
ANR	1070833	AndExpression	self -> hint [ i ] . type == type && self -> hint [ i ] . g0 == g0 && self -> hint [ i ] . g1 == g1 && self -> hint [ i ] . side_mask == side_mask		1070739	0		&&			
ANR	1070834	EqualityExpression	self -> hint [ i ] . type == type		1070739	0		==			
ANR	1070835	MemberAccess	self -> hint [ i ] . type		1070739	0					
ANR	1070836	ArrayIndexing	self -> hint [ i ]		1070739	0					
ANR	1070837	PtrMemberAccess	self -> hint		1070739	0					
ANR	1070838	Identifier	self		1070739	0					
ANR	1070839	Identifier	hint		1070739	1					
ANR	1070840	Identifier	i		1070739	1					
ANR	1070841	Identifier	type		1070739	1					
ANR	1070842	Identifier	type		1070739	1					
ANR	1070843	AndExpression	self -> hint [ i ] . g0 == g0 && self -> hint [ i ] . g1 == g1 && self -> hint [ i ] . side_mask == side_mask		1070739	1		&&			
ANR	1070844	EqualityExpression	self -> hint [ i ] . g0 == g0		1070739	0		==			
ANR	1070845	MemberAccess	self -> hint [ i ] . g0		1070739	0					
ANR	1070846	ArrayIndexing	self -> hint [ i ]		1070739	0					
ANR	1070847	PtrMemberAccess	self -> hint		1070739	0					
ANR	1070848	Identifier	self		1070739	0					
ANR	1070849	Identifier	hint		1070739	1					
ANR	1070850	Identifier	i		1070739	1					
ANR	1070851	Identifier	g0		1070739	1					
ANR	1070852	Identifier	g0		1070739	1					
ANR	1070853	AndExpression	self -> hint [ i ] . g1 == g1 && self -> hint [ i ] . side_mask == side_mask		1070739	1		&&			
ANR	1070854	EqualityExpression	self -> hint [ i ] . g1 == g1		1070739	0		==			
ANR	1070855	MemberAccess	self -> hint [ i ] . g1		1070739	0					
ANR	1070856	ArrayIndexing	self -> hint [ i ]		1070739	0					
ANR	1070857	PtrMemberAccess	self -> hint		1070739	0					
ANR	1070858	Identifier	self		1070739	0					
ANR	1070859	Identifier	hint		1070739	1					
ANR	1070860	Identifier	i		1070739	1					
ANR	1070861	Identifier	g1		1070739	1					
ANR	1070862	Identifier	g1		1070739	1					
ANR	1070863	EqualityExpression	self -> hint [ i ] . side_mask == side_mask		1070739	1		==			
ANR	1070864	MemberAccess	self -> hint [ i ] . side_mask		1070739	0					
ANR	1070865	ArrayIndexing	self -> hint [ i ]		1070739	0					
ANR	1070866	PtrMemberAccess	self -> hint		1070739	0					
ANR	1070867	Identifier	self		1070739	0					
ANR	1070868	Identifier	hint		1070739	1					
ANR	1070869	Identifier	i		1070739	1					
ANR	1070870	Identifier	side_mask		1070739	1					
ANR	1070871	Identifier	side_mask		1070739	1					
ANR	1070872	BreakStatement	break ;	1436:12:58990:58995	1070739	1	True				
ANR	1070873	IfStatement	if ( i < self -> hint_count )		1070739	8					
ANR	1070874	Condition	i < self -> hint_count	1437:8:59005:59024	1070739	0	True				
ANR	1070875	RelationalExpression	i < self -> hint_count		1070739	0		<			
ANR	1070876	Identifier	i		1070739	0					
ANR	1070877	PtrMemberAccess	self -> hint_count		1070739	1					
ANR	1070878	Identifier	self		1070739	0					
ANR	1070879	Identifier	hint_count		1070739	1					
ANR	1070880	ExpressionStatement	hint = & self -> hint [ i ]	1438:8:59035:59056	1070739	1	True				
ANR	1070881	AssignmentExpression	hint = & self -> hint [ i ]		1070739	0		=			
ANR	1070882	Identifier	hint		1070739	0					
ANR	1070883	UnaryOperationExpression	& self -> hint [ i ]		1070739	1					
ANR	1070884	UnaryOperator	&		1070739	0					
ANR	1070885	ArrayIndexing	self -> hint [ i ]		1070739	1					
ANR	1070886	PtrMemberAccess	self -> hint		1070739	0					
ANR	1070887	Identifier	self		1070739	0					
ANR	1070888	Identifier	hint		1070739	1					
ANR	1070889	Identifier	i		1070739	1					
ANR	1070890	ElseStatement	else		1070739	0					
ANR	1070891	CompoundStatement		16:9:631:631	1070739	0					
ANR	1070892	ExpressionStatement	"code = t1_hinter__can_add_hint ( self , & hint )"	1440:8:59077:59120	1070739	0	True				
ANR	1070893	AssignmentExpression	"code = t1_hinter__can_add_hint ( self , & hint )"		1070739	0		=			
ANR	1070894	Identifier	code		1070739	0					
ANR	1070895	CallExpression	"t1_hinter__can_add_hint ( self , & hint )"		1070739	1					
ANR	1070896	Callee	t1_hinter__can_add_hint		1070739	0					
ANR	1070897	Identifier	t1_hinter__can_add_hint		1070739	0					
ANR	1070898	ArgumentList	self		1070739	1					
ANR	1070899	Argument	self		1070739	0					
ANR	1070900	Identifier	self		1070739	0					
ANR	1070901	Argument	& hint		1070739	1					
ANR	1070902	UnaryOperationExpression	& hint		1070739	0					
ANR	1070903	UnaryOperator	&		1070739	0					
ANR	1070904	Identifier	hint		1070739	1					
ANR	1070905	IfStatement	if ( code < 0 )		1070739	1					
ANR	1070906	Condition	code < 0	1441:12:59134:59141	1070739	0	True				
ANR	1070907	RelationalExpression	code < 0		1070739	0		<			
ANR	1070908	Identifier	code		1070739	0					
ANR	1070909	PrimaryExpression	0		1070739	1					
ANR	1070910	ReturnStatement	return code ;	1442:12:59156:59167	1070739	1	True				
ANR	1070911	Identifier	code		1070739	0					
ANR	1070912	ExpressionStatement	hint -> type = type	1443:8:59177:59194	1070739	2	True				
ANR	1070913	AssignmentExpression	hint -> type = type		1070739	0		=			
ANR	1070914	PtrMemberAccess	hint -> type		1070739	0					
ANR	1070915	Identifier	hint		1070739	0					
ANR	1070916	Identifier	type		1070739	1					
ANR	1070917	Identifier	type		1070739	1					
ANR	1070918	ExpressionStatement	hint -> g0 = hint -> ag0 = g0	1444:8:59204:59229	1070739	3	True				
ANR	1070919	AssignmentExpression	hint -> g0 = hint -> ag0 = g0		1070739	0		=			
ANR	1070920	PtrMemberAccess	hint -> g0		1070739	0					
ANR	1070921	Identifier	hint		1070739	0					
ANR	1070922	Identifier	g0		1070739	1					
ANR	1070923	AssignmentExpression	hint -> ag0 = g0		1070739	1		=			
ANR	1070924	PtrMemberAccess	hint -> ag0		1070739	0					
ANR	1070925	Identifier	hint		1070739	0					
ANR	1070926	Identifier	ag0		1070739	1					
ANR	1070927	Identifier	g0		1070739	1					
ANR	1070928	ExpressionStatement	hint -> g1 = hint -> ag1 = g1	1445:8:59239:59264	1070739	4	True				
ANR	1070929	AssignmentExpression	hint -> g1 = hint -> ag1 = g1		1070739	0		=			
ANR	1070930	PtrMemberAccess	hint -> g1		1070739	0					
ANR	1070931	Identifier	hint		1070739	0					
ANR	1070932	Identifier	g1		1070739	1					
ANR	1070933	AssignmentExpression	hint -> ag1 = g1		1070739	1		=			
ANR	1070934	PtrMemberAccess	hint -> ag1		1070739	0					
ANR	1070935	Identifier	hint		1070739	0					
ANR	1070936	Identifier	ag1		1070739	1					
ANR	1070937	Identifier	g1		1070739	1					
ANR	1070938	ExpressionStatement	hint -> aligned0 = hint -> aligned1 = unaligned	1446:8:59274:59317	1070739	5	True				
ANR	1070939	AssignmentExpression	hint -> aligned0 = hint -> aligned1 = unaligned		1070739	0		=			
ANR	1070940	PtrMemberAccess	hint -> aligned0		1070739	0					
ANR	1070941	Identifier	hint		1070739	0					
ANR	1070942	Identifier	aligned0		1070739	1					
ANR	1070943	AssignmentExpression	hint -> aligned1 = unaligned		1070739	1		=			
ANR	1070944	PtrMemberAccess	hint -> aligned1		1070739	0					
ANR	1070945	Identifier	hint		1070739	0					
ANR	1070946	Identifier	aligned1		1070739	1					
ANR	1070947	Identifier	unaligned		1070739	1					
ANR	1070948	ExpressionStatement	hint -> q0 = hint -> q1 = max_int	1447:8:59327:59356	1070739	6	True				
ANR	1070949	AssignmentExpression	hint -> q0 = hint -> q1 = max_int		1070739	0		=			
ANR	1070950	PtrMemberAccess	hint -> q0		1070739	0					
ANR	1070951	Identifier	hint		1070739	0					
ANR	1070952	Identifier	q0		1070739	1					
ANR	1070953	AssignmentExpression	hint -> q1 = max_int		1070739	1		=			
ANR	1070954	PtrMemberAccess	hint -> q1		1070739	0					
ANR	1070955	Identifier	hint		1070739	0					
ANR	1070956	Identifier	q1		1070739	1					
ANR	1070957	Identifier	max_int		1070739	1					
ANR	1070958	ExpressionStatement	hint -> b0 = hint -> b1 = false	1448:8:59366:59393	1070739	7	True				
ANR	1070959	AssignmentExpression	hint -> b0 = hint -> b1 = false		1070739	0		=			
ANR	1070960	PtrMemberAccess	hint -> b0		1070739	0					
ANR	1070961	Identifier	hint		1070739	0					
ANR	1070962	Identifier	b0		1070739	1					
ANR	1070963	AssignmentExpression	hint -> b1 = false		1070739	1		=			
ANR	1070964	PtrMemberAccess	hint -> b1		1070739	0					
ANR	1070965	Identifier	hint		1070739	0					
ANR	1070966	Identifier	b1		1070739	1					
ANR	1070967	Identifier	false		1070739	1					
ANR	1070968	ExpressionStatement	hint -> stem3_index = stem3_index	1449:8:59403:59434	1070739	8	True				
ANR	1070969	AssignmentExpression	hint -> stem3_index = stem3_index		1070739	0		=			
ANR	1070970	PtrMemberAccess	hint -> stem3_index		1070739	0					
ANR	1070971	Identifier	hint		1070739	0					
ANR	1070972	Identifier	stem3_index		1070739	1					
ANR	1070973	Identifier	stem3_index		1070739	1					
ANR	1070974	ExpressionStatement	hint -> range_index = - 1	1450:8:59444:59466	1070739	9	True				
ANR	1070975	AssignmentExpression	hint -> range_index = - 1		1070739	0		=			
ANR	1070976	PtrMemberAccess	hint -> range_index		1070739	0					
ANR	1070977	Identifier	hint		1070739	0					
ANR	1070978	Identifier	range_index		1070739	1					
ANR	1070979	UnaryOperationExpression	- 1		1070739	1					
ANR	1070980	UnaryOperator	-		1070739	0					
ANR	1070981	PrimaryExpression	1		1070739	1					
ANR	1070982	ExpressionStatement	hint -> side_mask = side_mask	1451:8:59476:59503	1070739	10	True				
ANR	1070983	AssignmentExpression	hint -> side_mask = side_mask		1070739	0		=			
ANR	1070984	PtrMemberAccess	hint -> side_mask		1070739	0					
ANR	1070985	Identifier	hint		1070739	0					
ANR	1070986	Identifier	side_mask		1070739	1					
ANR	1070987	Identifier	side_mask		1070739	1					
ANR	1070988	ExpressionStatement	hint -> stem_snap_index0 = hint -> stem_snap_index1 = 0	1452:8:59513:59564	1070739	11	True				
ANR	1070989	AssignmentExpression	hint -> stem_snap_index0 = hint -> stem_snap_index1 = 0		1070739	0		=			
ANR	1070990	PtrMemberAccess	hint -> stem_snap_index0		1070739	0					
ANR	1070991	Identifier	hint		1070739	0					
ANR	1070992	Identifier	stem_snap_index0		1070739	1					
ANR	1070993	AssignmentExpression	hint -> stem_snap_index1 = 0		1070739	1		=			
ANR	1070994	PtrMemberAccess	hint -> stem_snap_index1		1070739	0					
ANR	1070995	Identifier	hint		1070739	0					
ANR	1070996	Identifier	stem_snap_index1		1070739	1					
ANR	1070997	PrimaryExpression	0		1070739	1					
ANR	1070998	ExpressionStatement	hint -> boundary_length0 = hint -> boundary_length1 = 0	1453:8:59574:59625	1070739	12	True				
ANR	1070999	AssignmentExpression	hint -> boundary_length0 = hint -> boundary_length1 = 0		1070739	0		=			
ANR	1071000	PtrMemberAccess	hint -> boundary_length0		1070739	0					
ANR	1071001	Identifier	hint		1070739	0					
ANR	1071002	Identifier	boundary_length0		1070739	1					
ANR	1071003	AssignmentExpression	hint -> boundary_length1 = 0		1070739	1		=			
ANR	1071004	PtrMemberAccess	hint -> boundary_length1		1070739	0					
ANR	1071005	Identifier	hint		1070739	0					
ANR	1071006	Identifier	boundary_length1		1070739	1					
ANR	1071007	PrimaryExpression	0		1070739	1					
ANR	1071008	ExpressionStatement	"code = t1_hinter__can_add_hint_range ( self , & range )"	1455:4:59637:59687	1070739	9	True				
ANR	1071009	AssignmentExpression	"code = t1_hinter__can_add_hint_range ( self , & range )"		1070739	0		=			
ANR	1071010	Identifier	code		1070739	0					
ANR	1071011	CallExpression	"t1_hinter__can_add_hint_range ( self , & range )"		1070739	1					
ANR	1071012	Callee	t1_hinter__can_add_hint_range		1070739	0					
ANR	1071013	Identifier	t1_hinter__can_add_hint_range		1070739	0					
ANR	1071014	ArgumentList	self		1070739	1					
ANR	1071015	Argument	self		1070739	0					
ANR	1071016	Identifier	self		1070739	0					
ANR	1071017	Argument	& range		1070739	1					
ANR	1071018	UnaryOperationExpression	& range		1070739	0					
ANR	1071019	UnaryOperator	&		1070739	0					
ANR	1071020	Identifier	range		1070739	1					
ANR	1071021	IfStatement	if ( code < 0 )		1070739	10					
ANR	1071022	Condition	code < 0	1456:8:59697:59704	1070739	0	True				
ANR	1071023	RelationalExpression	code < 0		1070739	0		<			
ANR	1071024	Identifier	code		1070739	0					
ANR	1071025	PrimaryExpression	0		1070739	1					
ANR	1071026	ReturnStatement	return code ;	1457:8:59715:59726	1070739	1	True				
ANR	1071027	Identifier	code		1070739	0					
ANR	1071028	ExpressionStatement	range -> beg_pole = self -> pole_count	1458:4:59732:59766	1070739	11	True				
ANR	1071029	AssignmentExpression	range -> beg_pole = self -> pole_count		1070739	0		=			
ANR	1071030	PtrMemberAccess	range -> beg_pole		1070739	0					
ANR	1071031	Identifier	range		1070739	0					
ANR	1071032	Identifier	beg_pole		1070739	1					
ANR	1071033	PtrMemberAccess	self -> pole_count		1070739	1					
ANR	1071034	Identifier	self		1070739	0					
ANR	1071035	Identifier	pole_count		1070739	1					
ANR	1071036	ExpressionStatement	range -> end_pole = - 1	1459:4:59772:59792	1070739	12	True				
ANR	1071037	AssignmentExpression	range -> end_pole = - 1		1070739	0		=			
ANR	1071038	PtrMemberAccess	range -> end_pole		1070739	0					
ANR	1071039	Identifier	range		1070739	0					
ANR	1071040	Identifier	end_pole		1070739	1					
ANR	1071041	UnaryOperationExpression	- 1		1070739	1					
ANR	1071042	UnaryOperator	-		1070739	0					
ANR	1071043	PrimaryExpression	1		1070739	1					
ANR	1071044	ExpressionStatement	range -> next = hint -> range_index	1460:4:59798:59829	1070739	13	True				
ANR	1071045	AssignmentExpression	range -> next = hint -> range_index		1070739	0		=			
ANR	1071046	PtrMemberAccess	range -> next		1070739	0					
ANR	1071047	Identifier	range		1070739	0					
ANR	1071048	Identifier	next		1070739	1					
ANR	1071049	PtrMemberAccess	hint -> range_index		1070739	1					
ANR	1071050	Identifier	hint		1070739	0					
ANR	1071051	Identifier	range_index		1070739	1					
ANR	1071052	ExpressionStatement	hint -> range_index = range - self -> hint_range	1461:4:59835:59879	1070739	14	True				
ANR	1071053	AssignmentExpression	hint -> range_index = range - self -> hint_range		1070739	0		=			
ANR	1071054	PtrMemberAccess	hint -> range_index		1070739	0					
ANR	1071055	Identifier	hint		1070739	0					
ANR	1071056	Identifier	range_index		1070739	1					
ANR	1071057	AdditiveExpression	range - self -> hint_range		1070739	1		-			
ANR	1071058	Identifier	range		1070739	0					
ANR	1071059	PtrMemberAccess	self -> hint_range		1070739	1					
ANR	1071060	Identifier	self		1070739	0					
ANR	1071061	Identifier	hint_range		1070739	1					
ANR	1071062	IfStatement	if ( i >= self -> hint_count )		1070739	15					
ANR	1071063	Condition	i >= self -> hint_count	1462:8:59889:59909	1070739	0	True				
ANR	1071064	RelationalExpression	i >= self -> hint_count		1070739	0		>=			
ANR	1071065	Identifier	i		1070739	0					
ANR	1071066	PtrMemberAccess	self -> hint_count		1070739	1					
ANR	1071067	Identifier	self		1070739	0					
ANR	1071068	Identifier	hint_count		1070739	1					
ANR	1071069	ExpressionStatement	self -> hint_count ++	1463:8:59920:59938	1070739	1	True				
ANR	1071070	PostIncDecOperationExpression	self -> hint_count ++		1070739	0					
ANR	1071071	PtrMemberAccess	self -> hint_count		1070739	0					
ANR	1071072	Identifier	self		1070739	0					
ANR	1071073	Identifier	hint_count		1070739	1					
ANR	1071074	IncDec	++		1070739	1					
ANR	1071075	ExpressionStatement	self -> hint_range_count ++	1464:4:59944:59968	1070739	16	True				
ANR	1071076	PostIncDecOperationExpression	self -> hint_range_count ++		1070739	0					
ANR	1071077	PtrMemberAccess	self -> hint_range_count		1070739	0					
ANR	1071078	Identifier	self		1070739	0					
ANR	1071079	Identifier	hint_range_count		1070739	1					
ANR	1071080	IncDec	++		1070739	1					
ANR	1071081	ReturnStatement	return 0 ;	1465:4:59974:59982	1070739	17	True				
ANR	1071082	PrimaryExpression	0		1070739	0					
ANR	1071083	ReturnType	static inline int		1070739	1					
ANR	1071084	Identifier	t1_hinter__stem		1070739	2					
ANR	1071085	ParameterList	"t1_hinter * self , enum t1_hint_type type , unsigned short stem3_index , fixed v0 , fixed v1 , int side_mask"		1070739	3					
ANR	1071086	Parameter	t1_hinter * self	1422:34:58279:58294	1070739	0	True				
ANR	1071087	ParameterType	t1_hinter *		1070739	0					
ANR	1071088	Identifier	self		1070739	1					
ANR	1071089	Parameter	enum t1_hint_type type	1422:52:58297:58318	1070739	1	True				
ANR	1071090	ParameterType	enum t1_hint_type		1070739	0					
ANR	1071091	Identifier	type		1070739	1					
ANR	1071092	Parameter	unsigned short stem3_index	1422:76:58321:58346	1070739	2	True				
ANR	1071093	ParameterType	unsigned short		1070739	0					
ANR	1071094	Identifier	stem3_index		1070739	1					
ANR	1071095	Parameter	fixed v0	1423:52:58400:58407	1070739	3	True				
ANR	1071096	ParameterType	fixed		1070739	0					
ANR	1071097	Identifier	v0		1070739	1					
ANR	1071098	Parameter	fixed v1	1423:62:58410:58417	1070739	4	True				
ANR	1071099	ParameterType	fixed		1070739	0					
ANR	1071100	Identifier	v1		1070739	1					
ANR	1071101	Parameter	int side_mask	1423:72:58420:58432	1070739	5	True				
ANR	1071102	ParameterType	int		1070739	0					
ANR	1071103	Identifier	side_mask		1070739	1					
ANR	1071104	CFGEntryNode	ENTRY		1070739		True				
ANR	1071105	CFGExitNode	EXIT		1070739		True				
ANR	1071106	Symbol	stem3_index		1070739						
ANR	1071107	Symbol	self -> pole_count		1070739						
ANR	1071108	Symbol	hint -> side_mask		1070739						
ANR	1071109	Symbol	hint -> stem_snap_index1		1070739						
ANR	1071110	Symbol	& hint		1070739						
ANR	1071111	Symbol	type		1070739						
ANR	1071112	Symbol	hint -> range_index		1070739						
ANR	1071113	Symbol	hint -> g1		1070739						
ANR	1071114	Symbol	hint -> stem_snap_index0		1070739						
ANR	1071115	Symbol	* self -> hint		1070739						
ANR	1071116	Symbol	* range		1070739						
ANR	1071117	Symbol	hint -> ag1		1070739						
ANR	1071118	Symbol	self -> hint [ i ] . side_mask		1070739						
ANR	1071119	Symbol	hint -> ag0		1070739						
ANR	1071120	Symbol	side_mask		1070739						
ANR	1071121	Symbol	* hint		1070739						
ANR	1071122	Symbol	* self		1070739						
ANR	1071123	Symbol	range -> beg_pole		1070739						
ANR	1071124	Symbol	self -> hint [ i ] . g1		1070739						
ANR	1071125	Symbol	hint -> b1		1070739						
ANR	1071126	Symbol	g0		1070739						
ANR	1071127	Symbol	self -> hint [ i ] . g0		1070739						
ANR	1071128	Symbol	hint -> b0		1070739						
ANR	1071129	Symbol	g1		1070739						
ANR	1071130	Symbol	unaligned		1070739						
ANR	1071131	Symbol	self -> subglyph_orig_gy		1070739						
ANR	1071132	Symbol	hint -> g0		1070739						
ANR	1071133	Symbol	hint		1070739						
ANR	1071134	Symbol	self -> subglyph_orig_gx		1070739						
ANR	1071135	Symbol	max_int		1070739						
ANR	1071136	Symbol	code		1070739						
ANR	1071137	Symbol	range -> next		1070739						
ANR	1071138	Symbol	range		1070739						
ANR	1071139	Symbol	t1_hinter__can_add_hint_range		1070739						
ANR	1071140	Symbol	hint -> type		1070739						
ANR	1071141	Symbol	hstem		1070739						
ANR	1071142	Symbol	self -> hint [ i ] . type		1070739						
ANR	1071143	Symbol	self -> hint		1070739						
ANR	1071144	Symbol	* * self		1070739						
ANR	1071145	Symbol	t1_hinter__can_add_hint		1070739						
ANR	1071146	Symbol	hint -> aligned0		1070739						
ANR	1071147	Symbol	false		1070739						
ANR	1071148	Symbol	hint -> boundary_length0		1070739						
ANR	1071149	Symbol	i		1070739						
ANR	1071150	Symbol	hint -> aligned1		1070739						
ANR	1071151	Symbol	self -> hint_range		1070739						
ANR	1071152	Symbol	self -> hint_range_count		1070739						
ANR	1071153	Symbol	hint -> boundary_length1		1070739						
ANR	1071154	Symbol	hint -> stem3_index		1070739						
ANR	1071155	Symbol	self -> hint_count		1070739						
ANR	1071156	Symbol	s		1070739						
ANR	1071157	Symbol	* i		1070739						
ANR	1071158	Symbol	hint -> q0		1070739						
ANR	1071159	Symbol	self		1070739						
ANR	1071160	Symbol	v0		1070739						
ANR	1071161	Symbol	v1		1070739						
ANR	1071162	Symbol	hint -> q1		1070739						
ANR	1071163	Symbol	range -> end_pole		1070739						
ANR	1071164	Symbol	& range		1070739						
ANR	1071165	Function	t1_hinter__dotsection	1468:0:59987:60279							
ANR	1071166	FunctionDef	t1_hinter__dotsection (t1_hinter * self)		1071165	0					
ANR	1071167	CompoundStatement		1469:0:60031:60279	1071165	0					
ANR	1071168	IfStatement	if ( self -> pole_count == 0 || self -> pole [ self -> pole_count - 1 ] . type != moveto )		1071165	0					
ANR	1071169	Condition	self -> pole_count == 0 || self -> pole [ self -> pole_count - 1 ] . type != moveto	1469:7:60039:60110	1071165	0	True				
ANR	1071170	OrExpression	self -> pole_count == 0 || self -> pole [ self -> pole_count - 1 ] . type != moveto		1071165	0		||			
ANR	1071171	EqualityExpression	self -> pole_count == 0		1071165	0		==			
ANR	1071172	PtrMemberAccess	self -> pole_count		1071165	0					
ANR	1071173	Identifier	self		1071165	0					
ANR	1071174	Identifier	pole_count		1071165	1					
ANR	1071175	PrimaryExpression	0		1071165	1					
ANR	1071176	EqualityExpression	self -> pole [ self -> pole_count - 1 ] . type != moveto		1071165	1		!=			
ANR	1071177	MemberAccess	self -> pole [ self -> pole_count - 1 ] . type		1071165	0					
ANR	1071178	ArrayIndexing	self -> pole [ self -> pole_count - 1 ]		1071165	0					
ANR	1071179	PtrMemberAccess	self -> pole		1071165	0					
ANR	1071180	Identifier	self		1071165	0					
ANR	1071181	Identifier	pole		1071165	1					
ANR	1071182	AdditiveExpression	self -> pole_count - 1		1071165	1		-			
ANR	1071183	PtrMemberAccess	self -> pole_count		1071165	0					
ANR	1071184	Identifier	self		1071165	0					
ANR	1071185	Identifier	pole_count		1071165	1					
ANR	1071186	PrimaryExpression	1		1071165	1					
ANR	1071187	Identifier	type		1071165	1					
ANR	1071188	Identifier	moveto		1071165	1					
ANR	1071189	ReturnStatement	return 0 ;	1470:8:60121:60129	1071165	1	True				
ANR	1071190	PrimaryExpression	0		1071165	0					
ANR	1071191	IfStatement	if ( self -> disable_hinting )		1071165	1					
ANR	1071192	Condition	self -> disable_hinting	1471:8:60187:60207	1071165	0	True				
ANR	1071193	PtrMemberAccess	self -> disable_hinting		1071165	0					
ANR	1071194	Identifier	self		1071165	0					
ANR	1071195	Identifier	disable_hinting		1071165	1					
ANR	1071196	ReturnStatement	return 0 ;	1472:8:60218:60226	1071165	1	True				
ANR	1071197	PrimaryExpression	0		1071165	0					
ANR	1071198	ReturnStatement	"return t1_hinter__stem ( self , dot , 0 , 0 , 0 , 0 ) ;"	1473:4:60232:60277	1071165	2	True				
ANR	1071199	CallExpression	"t1_hinter__stem ( self , dot , 0 , 0 , 0 , 0 )"		1071165	0					
ANR	1071200	Callee	t1_hinter__stem		1071165	0					
ANR	1071201	Identifier	t1_hinter__stem		1071165	0					
ANR	1071202	ArgumentList	self		1071165	1					
ANR	1071203	Argument	self		1071165	0					
ANR	1071204	Identifier	self		1071165	0					
ANR	1071205	Argument	dot		1071165	1					
ANR	1071206	Identifier	dot		1071165	0					
ANR	1071207	Argument	0		1071165	2					
ANR	1071208	PrimaryExpression	0		1071165	0					
ANR	1071209	Argument	0		1071165	3					
ANR	1071210	PrimaryExpression	0		1071165	0					
ANR	1071211	Argument	0		1071165	4					
ANR	1071212	PrimaryExpression	0		1071165	0					
ANR	1071213	Argument	0		1071165	5					
ANR	1071214	PrimaryExpression	0		1071165	0					
ANR	1071215	ReturnType	int		1071165	1					
ANR	1071216	Identifier	t1_hinter__dotsection		1071165	2					
ANR	1071217	ParameterList	t1_hinter * self		1071165	3					
ANR	1071218	Parameter	t1_hinter * self	1468:26:60013:60028	1071165	0	True				
ANR	1071219	ParameterType	t1_hinter *		1071165	0					
ANR	1071220	Identifier	self		1071165	1					
ANR	1071221	CFGEntryNode	ENTRY		1071165		True				
ANR	1071222	CFGExitNode	EXIT		1071165		True				
ANR	1071223	Symbol	* self -> pole		1071165						
ANR	1071224	Symbol	self -> pole_count		1071165						
ANR	1071225	Symbol	* * self		1071165						
ANR	1071226	Symbol	* self		1071165						
ANR	1071227	Symbol	* self -> pole_count		1071165						
ANR	1071228	Symbol	dot		1071165						
ANR	1071229	Symbol	self		1071165						
ANR	1071230	Symbol	self -> pole		1071165						
ANR	1071231	Symbol	self -> pole [ self -> pole_count - 1 ] . type		1071165						
ANR	1071232	Symbol	t1_hinter__stem		1071165						
ANR	1071233	Symbol	self -> disable_hinting		1071165						
ANR	1071234	Symbol	moveto		1071165						
ANR	1071235	Function	t1_hinter__hstem	1476:0:60282:60445							
ANR	1071236	FunctionDef	"t1_hinter__hstem (t1_hinter * self , fixed x0 , fixed x1)"		1071235	0					
ANR	1071237	CompoundStatement		1477:0:60341:60445	1071235	0					
ANR	1071238	IfStatement	if ( self -> disable_hinting )		1071235	0					
ANR	1071239	Condition	self -> disable_hinting	1477:7:60349:60369	1071235	0	True				
ANR	1071240	PtrMemberAccess	self -> disable_hinting		1071235	0					
ANR	1071241	Identifier	self		1071235	0					
ANR	1071242	Identifier	disable_hinting		1071235	1					
ANR	1071243	ReturnStatement	return 0 ;	1478:8:60380:60388	1071235	1	True				
ANR	1071244	PrimaryExpression	0		1071235	0					
ANR	1071245	ReturnStatement	"return t1_hinter__stem ( self , hstem , 0 , x0 , x1 , 3 ) ;"	1479:4:60394:60443	1071235	1	True				
ANR	1071246	CallExpression	"t1_hinter__stem ( self , hstem , 0 , x0 , x1 , 3 )"		1071235	0					
ANR	1071247	Callee	t1_hinter__stem		1071235	0					
ANR	1071248	Identifier	t1_hinter__stem		1071235	0					
ANR	1071249	ArgumentList	self		1071235	1					
ANR	1071250	Argument	self		1071235	0					
ANR	1071251	Identifier	self		1071235	0					
ANR	1071252	Argument	hstem		1071235	1					
ANR	1071253	Identifier	hstem		1071235	0					
ANR	1071254	Argument	0		1071235	2					
ANR	1071255	PrimaryExpression	0		1071235	0					
ANR	1071256	Argument	x0		1071235	3					
ANR	1071257	Identifier	x0		1071235	0					
ANR	1071258	Argument	x1		1071235	4					
ANR	1071259	Identifier	x1		1071235	0					
ANR	1071260	Argument	3		1071235	5					
ANR	1071261	PrimaryExpression	3		1071235	0					
ANR	1071262	ReturnType	int		1071235	1					
ANR	1071263	Identifier	t1_hinter__hstem		1071235	2					
ANR	1071264	ParameterList	"t1_hinter * self , fixed x0 , fixed x1"		1071235	3					
ANR	1071265	Parameter	t1_hinter * self	1476:21:60303:60318	1071235	0	True				
ANR	1071266	ParameterType	t1_hinter *		1071235	0					
ANR	1071267	Identifier	self		1071235	1					
ANR	1071268	Parameter	fixed x0	1476:39:60321:60328	1071235	1	True				
ANR	1071269	ParameterType	fixed		1071235	0					
ANR	1071270	Identifier	x0		1071235	1					
ANR	1071271	Parameter	fixed x1	1476:49:60331:60338	1071235	2	True				
ANR	1071272	ParameterType	fixed		1071235	0					
ANR	1071273	Identifier	x1		1071235	1					
ANR	1071274	CFGEntryNode	ENTRY		1071235		True				
ANR	1071275	CFGExitNode	EXIT		1071235		True				
ANR	1071276	Symbol	* self		1071235						
ANR	1071277	Symbol	x0		1071235						
ANR	1071278	Symbol	self		1071235						
ANR	1071279	Symbol	x1		1071235						
ANR	1071280	Symbol	t1_hinter__stem		1071235						
ANR	1071281	Symbol	self -> disable_hinting		1071235						
ANR	1071282	Symbol	hstem		1071235						
ANR	1071283	Function	t1_hinter__overall_hstem	1482:0:60448:60680							
ANR	1071284	FunctionDef	"t1_hinter__overall_hstem (t1_hinter * self , fixed x0 , fixed x1 , int side_mask)"		1071283	0					
ANR	1071285	CompoundStatement		1483:0:60530:60680	1071283	0					
ANR	1071286	IfStatement	if ( self -> disable_hinting )		1071283	0					
ANR	1071287	Condition	self -> disable_hinting	1484:8:60576:60596	1071283	0	True				
ANR	1071288	PtrMemberAccess	self -> disable_hinting		1071283	0					
ANR	1071289	Identifier	self		1071283	0					
ANR	1071290	Identifier	disable_hinting		1071283	1					
ANR	1071291	ReturnStatement	return 0 ;	1485:8:60607:60615	1071283	1	True				
ANR	1071292	PrimaryExpression	0		1071283	0					
ANR	1071293	ReturnStatement	"return t1_hinter__stem ( self , hstem , 0 , x0 , x1 , side_mask ) ;"	1486:4:60621:60678	1071283	1	True				
ANR	1071294	CallExpression	"t1_hinter__stem ( self , hstem , 0 , x0 , x1 , side_mask )"		1071283	0					
ANR	1071295	Callee	t1_hinter__stem		1071283	0					
ANR	1071296	Identifier	t1_hinter__stem		1071283	0					
ANR	1071297	ArgumentList	self		1071283	1					
ANR	1071298	Argument	self		1071283	0					
ANR	1071299	Identifier	self		1071283	0					
ANR	1071300	Argument	hstem		1071283	1					
ANR	1071301	Identifier	hstem		1071283	0					
ANR	1071302	Argument	0		1071283	2					
ANR	1071303	PrimaryExpression	0		1071283	0					
ANR	1071304	Argument	x0		1071283	3					
ANR	1071305	Identifier	x0		1071283	0					
ANR	1071306	Argument	x1		1071283	4					
ANR	1071307	Identifier	x1		1071283	0					
ANR	1071308	Argument	side_mask		1071283	5					
ANR	1071309	Identifier	side_mask		1071283	0					
ANR	1071310	ReturnType	int		1071283	1					
ANR	1071311	Identifier	t1_hinter__overall_hstem		1071283	2					
ANR	1071312	ParameterList	"t1_hinter * self , fixed x0 , fixed x1 , int side_mask"		1071283	3					
ANR	1071313	Parameter	t1_hinter * self	1482:29:60477:60492	1071283	0	True				
ANR	1071314	ParameterType	t1_hinter *		1071283	0					
ANR	1071315	Identifier	self		1071283	1					
ANR	1071316	Parameter	fixed x0	1482:47:60495:60502	1071283	1	True				
ANR	1071317	ParameterType	fixed		1071283	0					
ANR	1071318	Identifier	x0		1071283	1					
ANR	1071319	Parameter	fixed x1	1482:57:60505:60512	1071283	2	True				
ANR	1071320	ParameterType	fixed		1071283	0					
ANR	1071321	Identifier	x1		1071283	1					
ANR	1071322	Parameter	int side_mask	1482:67:60515:60527	1071283	3	True				
ANR	1071323	ParameterType	int		1071283	0					
ANR	1071324	Identifier	side_mask		1071283	1					
ANR	1071325	CFGEntryNode	ENTRY		1071283		True				
ANR	1071326	CFGExitNode	EXIT		1071283		True				
ANR	1071327	Symbol	* self		1071283						
ANR	1071328	Symbol	x0		1071283						
ANR	1071329	Symbol	self		1071283						
ANR	1071330	Symbol	x1		1071283						
ANR	1071331	Symbol	side_mask		1071283						
ANR	1071332	Symbol	t1_hinter__stem		1071283						
ANR	1071333	Symbol	self -> disable_hinting		1071283						
ANR	1071334	Symbol	hstem		1071283						
ANR	1071335	Function	t1_hinter__vstem	1489:0:60683:60846							
ANR	1071336	FunctionDef	"t1_hinter__vstem (t1_hinter * self , fixed y0 , fixed y1)"		1071335	0					
ANR	1071337	CompoundStatement		1490:0:60742:60846	1071335	0					
ANR	1071338	IfStatement	if ( self -> disable_hinting )		1071335	0					
ANR	1071339	Condition	self -> disable_hinting	1490:7:60750:60770	1071335	0	True				
ANR	1071340	PtrMemberAccess	self -> disable_hinting		1071335	0					
ANR	1071341	Identifier	self		1071335	0					
ANR	1071342	Identifier	disable_hinting		1071335	1					
ANR	1071343	ReturnStatement	return 0 ;	1491:8:60781:60789	1071335	1	True				
ANR	1071344	PrimaryExpression	0		1071335	0					
ANR	1071345	ReturnStatement	"return t1_hinter__stem ( self , vstem , 0 , y0 , y1 , 3 ) ;"	1492:4:60795:60844	1071335	1	True				
ANR	1071346	CallExpression	"t1_hinter__stem ( self , vstem , 0 , y0 , y1 , 3 )"		1071335	0					
ANR	1071347	Callee	t1_hinter__stem		1071335	0					
ANR	1071348	Identifier	t1_hinter__stem		1071335	0					
ANR	1071349	ArgumentList	self		1071335	1					
ANR	1071350	Argument	self		1071335	0					
ANR	1071351	Identifier	self		1071335	0					
ANR	1071352	Argument	vstem		1071335	1					
ANR	1071353	Identifier	vstem		1071335	0					
ANR	1071354	Argument	0		1071335	2					
ANR	1071355	PrimaryExpression	0		1071335	0					
ANR	1071356	Argument	y0		1071335	3					
ANR	1071357	Identifier	y0		1071335	0					
ANR	1071358	Argument	y1		1071335	4					
ANR	1071359	Identifier	y1		1071335	0					
ANR	1071360	Argument	3		1071335	5					
ANR	1071361	PrimaryExpression	3		1071335	0					
ANR	1071362	ReturnType	int		1071335	1					
ANR	1071363	Identifier	t1_hinter__vstem		1071335	2					
ANR	1071364	ParameterList	"t1_hinter * self , fixed y0 , fixed y1"		1071335	3					
ANR	1071365	Parameter	t1_hinter * self	1489:21:60704:60719	1071335	0	True				
ANR	1071366	ParameterType	t1_hinter *		1071335	0					
ANR	1071367	Identifier	self		1071335	1					
ANR	1071368	Parameter	fixed y0	1489:39:60722:60729	1071335	1	True				
ANR	1071369	ParameterType	fixed		1071335	0					
ANR	1071370	Identifier	y0		1071335	1					
ANR	1071371	Parameter	fixed y1	1489:49:60732:60739	1071335	2	True				
ANR	1071372	ParameterType	fixed		1071335	0					
ANR	1071373	Identifier	y1		1071335	1					
ANR	1071374	CFGEntryNode	ENTRY		1071335		True				
ANR	1071375	CFGExitNode	EXIT		1071335		True				
ANR	1071376	Symbol	* self		1071335						
ANR	1071377	Symbol	y0		1071335						
ANR	1071378	Symbol	y1		1071335						
ANR	1071379	Symbol	self		1071335						
ANR	1071380	Symbol	vstem		1071335						
ANR	1071381	Symbol	t1_hinter__stem		1071335						
ANR	1071382	Symbol	self -> disable_hinting		1071335						
ANR	1071383	Function	t1_hinter__hstem3	1495:0:60849:61256							
ANR	1071384	FunctionDef	"t1_hinter__hstem3 (t1_hinter * self , fixed x0 , fixed x1 , fixed x2 , fixed x3 , fixed x4 , fixed x5)"		1071383	0					
ANR	1071385	CompoundStatement		1496:0:60949:61256	1071383	0					
ANR	1071386	IdentifierDeclStatement	int code ;	1496:3:60953:60961	1071383	0	True				
ANR	1071387	IdentifierDecl	code		1071383	0					
ANR	1071388	IdentifierDeclType	int		1071383	0					
ANR	1071389	Identifier	code		1071383	1					
ANR	1071390	IfStatement	if ( self -> disable_hinting )		1071383	1					
ANR	1071391	Condition	self -> disable_hinting	1498:8:60972:60992	1071383	0	True				
ANR	1071392	PtrMemberAccess	self -> disable_hinting		1071383	0					
ANR	1071393	Identifier	self		1071383	0					
ANR	1071394	Identifier	disable_hinting		1071383	1					
ANR	1071395	ReturnStatement	return 0 ;	1499:8:61003:61011	1071383	1	True				
ANR	1071396	PrimaryExpression	0		1071383	0					
ANR	1071397	ExpressionStatement	"code = t1_hinter__stem ( self , hstem , 1 , x0 , x1 , 3 )"	1500:4:61017:61066	1071383	2	True				
ANR	1071398	AssignmentExpression	"code = t1_hinter__stem ( self , hstem , 1 , x0 , x1 , 3 )"		1071383	0		=			
ANR	1071399	Identifier	code		1071383	0					
ANR	1071400	CallExpression	"t1_hinter__stem ( self , hstem , 1 , x0 , x1 , 3 )"		1071383	1					
ANR	1071401	Callee	t1_hinter__stem		1071383	0					
ANR	1071402	Identifier	t1_hinter__stem		1071383	0					
ANR	1071403	ArgumentList	self		1071383	1					
ANR	1071404	Argument	self		1071383	0					
ANR	1071405	Identifier	self		1071383	0					
ANR	1071406	Argument	hstem		1071383	1					
ANR	1071407	Identifier	hstem		1071383	0					
ANR	1071408	Argument	1		1071383	2					
ANR	1071409	PrimaryExpression	1		1071383	0					
ANR	1071410	Argument	x0		1071383	3					
ANR	1071411	Identifier	x0		1071383	0					
ANR	1071412	Argument	x1		1071383	4					
ANR	1071413	Identifier	x1		1071383	0					
ANR	1071414	Argument	3		1071383	5					
ANR	1071415	PrimaryExpression	3		1071383	0					
ANR	1071416	IfStatement	if ( code < 0 )		1071383	3					
ANR	1071417	Condition	code < 0	1501:8:61076:61083	1071383	0	True				
ANR	1071418	RelationalExpression	code < 0		1071383	0		<			
ANR	1071419	Identifier	code		1071383	0					
ANR	1071420	PrimaryExpression	0		1071383	1					
ANR	1071421	ReturnStatement	return code ;	1502:8:61094:61105	1071383	1	True				
ANR	1071422	Identifier	code		1071383	0					
ANR	1071423	ExpressionStatement	"code = t1_hinter__stem ( self , hstem , 2 , x2 , x3 , 3 )"	1503:4:61111:61160	1071383	4	True				
ANR	1071424	AssignmentExpression	"code = t1_hinter__stem ( self , hstem , 2 , x2 , x3 , 3 )"		1071383	0		=			
ANR	1071425	Identifier	code		1071383	0					
ANR	1071426	CallExpression	"t1_hinter__stem ( self , hstem , 2 , x2 , x3 , 3 )"		1071383	1					
ANR	1071427	Callee	t1_hinter__stem		1071383	0					
ANR	1071428	Identifier	t1_hinter__stem		1071383	0					
ANR	1071429	ArgumentList	self		1071383	1					
ANR	1071430	Argument	self		1071383	0					
ANR	1071431	Identifier	self		1071383	0					
ANR	1071432	Argument	hstem		1071383	1					
ANR	1071433	Identifier	hstem		1071383	0					
ANR	1071434	Argument	2		1071383	2					
ANR	1071435	PrimaryExpression	2		1071383	0					
ANR	1071436	Argument	x2		1071383	3					
ANR	1071437	Identifier	x2		1071383	0					
ANR	1071438	Argument	x3		1071383	4					
ANR	1071439	Identifier	x3		1071383	0					
ANR	1071440	Argument	3		1071383	5					
ANR	1071441	PrimaryExpression	3		1071383	0					
ANR	1071442	IfStatement	if ( code < 0 )		1071383	5					
ANR	1071443	Condition	code < 0	1504:8:61170:61177	1071383	0	True				
ANR	1071444	RelationalExpression	code < 0		1071383	0		<			
ANR	1071445	Identifier	code		1071383	0					
ANR	1071446	PrimaryExpression	0		1071383	1					
ANR	1071447	ReturnStatement	return code ;	1505:8:61188:61199	1071383	1	True				
ANR	1071448	Identifier	code		1071383	0					
ANR	1071449	ReturnStatement	"return t1_hinter__stem ( self , hstem , 3 , x4 , x5 , 3 ) ;"	1506:4:61205:61254	1071383	6	True				
ANR	1071450	CallExpression	"t1_hinter__stem ( self , hstem , 3 , x4 , x5 , 3 )"		1071383	0					
ANR	1071451	Callee	t1_hinter__stem		1071383	0					
ANR	1071452	Identifier	t1_hinter__stem		1071383	0					
ANR	1071453	ArgumentList	self		1071383	1					
ANR	1071454	Argument	self		1071383	0					
ANR	1071455	Identifier	self		1071383	0					
ANR	1071456	Argument	hstem		1071383	1					
ANR	1071457	Identifier	hstem		1071383	0					
ANR	1071458	Argument	3		1071383	2					
ANR	1071459	PrimaryExpression	3		1071383	0					
ANR	1071460	Argument	x4		1071383	3					
ANR	1071461	Identifier	x4		1071383	0					
ANR	1071462	Argument	x5		1071383	4					
ANR	1071463	Identifier	x5		1071383	0					
ANR	1071464	Argument	3		1071383	5					
ANR	1071465	PrimaryExpression	3		1071383	0					
ANR	1071466	ReturnType	int		1071383	1					
ANR	1071467	Identifier	t1_hinter__hstem3		1071383	2					
ANR	1071468	ParameterList	"t1_hinter * self , fixed x0 , fixed x1 , fixed x2 , fixed x3 , fixed x4 , fixed x5"		1071383	3					
ANR	1071469	Parameter	t1_hinter * self	1495:22:60871:60886	1071383	0	True				
ANR	1071470	ParameterType	t1_hinter *		1071383	0					
ANR	1071471	Identifier	self		1071383	1					
ANR	1071472	Parameter	fixed x0	1495:40:60889:60896	1071383	1	True				
ANR	1071473	ParameterType	fixed		1071383	0					
ANR	1071474	Identifier	x0		1071383	1					
ANR	1071475	Parameter	fixed x1	1495:50:60899:60906	1071383	2	True				
ANR	1071476	ParameterType	fixed		1071383	0					
ANR	1071477	Identifier	x1		1071383	1					
ANR	1071478	Parameter	fixed x2	1495:60:60909:60916	1071383	3	True				
ANR	1071479	ParameterType	fixed		1071383	0					
ANR	1071480	Identifier	x2		1071383	1					
ANR	1071481	Parameter	fixed x3	1495:70:60919:60926	1071383	4	True				
ANR	1071482	ParameterType	fixed		1071383	0					
ANR	1071483	Identifier	x3		1071383	1					
ANR	1071484	Parameter	fixed x4	1495:80:60929:60936	1071383	5	True				
ANR	1071485	ParameterType	fixed		1071383	0					
ANR	1071486	Identifier	x4		1071383	1					
ANR	1071487	Parameter	fixed x5	1495:90:60939:60946	1071383	6	True				
ANR	1071488	ParameterType	fixed		1071383	0					
ANR	1071489	Identifier	x5		1071383	1					
ANR	1071490	CFGEntryNode	ENTRY		1071383		True				
ANR	1071491	CFGExitNode	EXIT		1071383		True				
ANR	1071492	Symbol	code		1071383						
ANR	1071493	Symbol	* self		1071383						
ANR	1071494	Symbol	x0		1071383						
ANR	1071495	Symbol	self		1071383						
ANR	1071496	Symbol	x1		1071383						
ANR	1071497	Symbol	x2		1071383						
ANR	1071498	Symbol	x3		1071383						
ANR	1071499	Symbol	x4		1071383						
ANR	1071500	Symbol	x5		1071383						
ANR	1071501	Symbol	t1_hinter__stem		1071383						
ANR	1071502	Symbol	self -> disable_hinting		1071383						
ANR	1071503	Symbol	hstem		1071383						
ANR	1071504	Function	t1_hinter__vstem3	1509:0:61259:61666							
ANR	1071505	FunctionDef	"t1_hinter__vstem3 (t1_hinter * self , fixed y0 , fixed y1 , fixed y2 , fixed y3 , fixed y4 , fixed y5)"		1071504	0					
ANR	1071506	CompoundStatement		1510:0:61359:61666	1071504	0					
ANR	1071507	IdentifierDeclStatement	int code ;	1510:3:61363:61371	1071504	0	True				
ANR	1071508	IdentifierDecl	code		1071504	0					
ANR	1071509	IdentifierDeclType	int		1071504	0					
ANR	1071510	Identifier	code		1071504	1					
ANR	1071511	IfStatement	if ( self -> disable_hinting )		1071504	1					
ANR	1071512	Condition	self -> disable_hinting	1512:8:61382:61402	1071504	0	True				
ANR	1071513	PtrMemberAccess	self -> disable_hinting		1071504	0					
ANR	1071514	Identifier	self		1071504	0					
ANR	1071515	Identifier	disable_hinting		1071504	1					
ANR	1071516	ReturnStatement	return 0 ;	1513:8:61413:61421	1071504	1	True				
ANR	1071517	PrimaryExpression	0		1071504	0					
ANR	1071518	ExpressionStatement	"code = t1_hinter__stem ( self , vstem , 1 , y0 , y1 , 3 )"	1514:4:61427:61476	1071504	2	True				
ANR	1071519	AssignmentExpression	"code = t1_hinter__stem ( self , vstem , 1 , y0 , y1 , 3 )"		1071504	0		=			
ANR	1071520	Identifier	code		1071504	0					
ANR	1071521	CallExpression	"t1_hinter__stem ( self , vstem , 1 , y0 , y1 , 3 )"		1071504	1					
ANR	1071522	Callee	t1_hinter__stem		1071504	0					
ANR	1071523	Identifier	t1_hinter__stem		1071504	0					
ANR	1071524	ArgumentList	self		1071504	1					
ANR	1071525	Argument	self		1071504	0					
ANR	1071526	Identifier	self		1071504	0					
ANR	1071527	Argument	vstem		1071504	1					
ANR	1071528	Identifier	vstem		1071504	0					
ANR	1071529	Argument	1		1071504	2					
ANR	1071530	PrimaryExpression	1		1071504	0					
ANR	1071531	Argument	y0		1071504	3					
ANR	1071532	Identifier	y0		1071504	0					
ANR	1071533	Argument	y1		1071504	4					
ANR	1071534	Identifier	y1		1071504	0					
ANR	1071535	Argument	3		1071504	5					
ANR	1071536	PrimaryExpression	3		1071504	0					
ANR	1071537	IfStatement	if ( code < 0 )		1071504	3					
ANR	1071538	Condition	code < 0	1515:8:61486:61493	1071504	0	True				
ANR	1071539	RelationalExpression	code < 0		1071504	0		<			
ANR	1071540	Identifier	code		1071504	0					
ANR	1071541	PrimaryExpression	0		1071504	1					
ANR	1071542	ReturnStatement	return code ;	1516:8:61504:61515	1071504	1	True				
ANR	1071543	Identifier	code		1071504	0					
ANR	1071544	ExpressionStatement	"code = t1_hinter__stem ( self , vstem , 2 , y2 , y3 , 3 )"	1517:4:61521:61570	1071504	4	True				
ANR	1071545	AssignmentExpression	"code = t1_hinter__stem ( self , vstem , 2 , y2 , y3 , 3 )"		1071504	0		=			
ANR	1071546	Identifier	code		1071504	0					
ANR	1071547	CallExpression	"t1_hinter__stem ( self , vstem , 2 , y2 , y3 , 3 )"		1071504	1					
ANR	1071548	Callee	t1_hinter__stem		1071504	0					
ANR	1071549	Identifier	t1_hinter__stem		1071504	0					
ANR	1071550	ArgumentList	self		1071504	1					
ANR	1071551	Argument	self		1071504	0					
ANR	1071552	Identifier	self		1071504	0					
ANR	1071553	Argument	vstem		1071504	1					
ANR	1071554	Identifier	vstem		1071504	0					
ANR	1071555	Argument	2		1071504	2					
ANR	1071556	PrimaryExpression	2		1071504	0					
ANR	1071557	Argument	y2		1071504	3					
ANR	1071558	Identifier	y2		1071504	0					
ANR	1071559	Argument	y3		1071504	4					
ANR	1071560	Identifier	y3		1071504	0					
ANR	1071561	Argument	3		1071504	5					
ANR	1071562	PrimaryExpression	3		1071504	0					
ANR	1071563	IfStatement	if ( code < 0 )		1071504	5					
ANR	1071564	Condition	code < 0	1518:8:61580:61587	1071504	0	True				
ANR	1071565	RelationalExpression	code < 0		1071504	0		<			
ANR	1071566	Identifier	code		1071504	0					
ANR	1071567	PrimaryExpression	0		1071504	1					
ANR	1071568	ReturnStatement	return code ;	1519:8:61598:61609	1071504	1	True				
ANR	1071569	Identifier	code		1071504	0					
ANR	1071570	ReturnStatement	"return t1_hinter__stem ( self , vstem , 3 , y4 , y5 , 3 ) ;"	1520:4:61615:61664	1071504	6	True				
ANR	1071571	CallExpression	"t1_hinter__stem ( self , vstem , 3 , y4 , y5 , 3 )"		1071504	0					
ANR	1071572	Callee	t1_hinter__stem		1071504	0					
ANR	1071573	Identifier	t1_hinter__stem		1071504	0					
ANR	1071574	ArgumentList	self		1071504	1					
ANR	1071575	Argument	self		1071504	0					
ANR	1071576	Identifier	self		1071504	0					
ANR	1071577	Argument	vstem		1071504	1					
ANR	1071578	Identifier	vstem		1071504	0					
ANR	1071579	Argument	3		1071504	2					
ANR	1071580	PrimaryExpression	3		1071504	0					
ANR	1071581	Argument	y4		1071504	3					
ANR	1071582	Identifier	y4		1071504	0					
ANR	1071583	Argument	y5		1071504	4					
ANR	1071584	Identifier	y5		1071504	0					
ANR	1071585	Argument	3		1071504	5					
ANR	1071586	PrimaryExpression	3		1071504	0					
ANR	1071587	ReturnType	int		1071504	1					
ANR	1071588	Identifier	t1_hinter__vstem3		1071504	2					
ANR	1071589	ParameterList	"t1_hinter * self , fixed y0 , fixed y1 , fixed y2 , fixed y3 , fixed y4 , fixed y5"		1071504	3					
ANR	1071590	Parameter	t1_hinter * self	1509:22:61281:61296	1071504	0	True				
ANR	1071591	ParameterType	t1_hinter *		1071504	0					
ANR	1071592	Identifier	self		1071504	1					
ANR	1071593	Parameter	fixed y0	1509:40:61299:61306	1071504	1	True				
ANR	1071594	ParameterType	fixed		1071504	0					
ANR	1071595	Identifier	y0		1071504	1					
ANR	1071596	Parameter	fixed y1	1509:50:61309:61316	1071504	2	True				
ANR	1071597	ParameterType	fixed		1071504	0					
ANR	1071598	Identifier	y1		1071504	1					
ANR	1071599	Parameter	fixed y2	1509:60:61319:61326	1071504	3	True				
ANR	1071600	ParameterType	fixed		1071504	0					
ANR	1071601	Identifier	y2		1071504	1					
ANR	1071602	Parameter	fixed y3	1509:70:61329:61336	1071504	4	True				
ANR	1071603	ParameterType	fixed		1071504	0					
ANR	1071604	Identifier	y3		1071504	1					
ANR	1071605	Parameter	fixed y4	1509:80:61339:61346	1071504	5	True				
ANR	1071606	ParameterType	fixed		1071504	0					
ANR	1071607	Identifier	y4		1071504	1					
ANR	1071608	Parameter	fixed y5	1509:90:61349:61356	1071504	6	True				
ANR	1071609	ParameterType	fixed		1071504	0					
ANR	1071610	Identifier	y5		1071504	1					
ANR	1071611	CFGEntryNode	ENTRY		1071504		True				
ANR	1071612	CFGExitNode	EXIT		1071504		True				
ANR	1071613	Symbol	code		1071504						
ANR	1071614	Symbol	* self		1071504						
ANR	1071615	Symbol	y0		1071504						
ANR	1071616	Symbol	y1		1071504						
ANR	1071617	Symbol	self		1071504						
ANR	1071618	Symbol	y2		1071504						
ANR	1071619	Symbol	y3		1071504						
ANR	1071620	Symbol	y4		1071504						
ANR	1071621	Symbol	vstem		1071504						
ANR	1071622	Symbol	y5		1071504						
ANR	1071623	Symbol	t1_hinter__stem		1071504						
ANR	1071624	Symbol	self -> disable_hinting		1071504						
ANR	1071625	Function	t1_hinter__is_x_fitting	1525:0:61756:61831							
ANR	1071626	FunctionDef	t1_hinter__is_x_fitting (t1_hinter * self)		1071625	0					
ANR	1071627	CompoundStatement		1526:0:61802:61831	1071625	0					
ANR	1071628	ReturnStatement	return self -> grid_fit_x ;	1526:3:61806:61829	1071625	0	True				
ANR	1071629	PtrMemberAccess	self -> grid_fit_x		1071625	0					
ANR	1071630	Identifier	self		1071625	0					
ANR	1071631	Identifier	grid_fit_x		1071625	1					
ANR	1071632	ReturnType	int		1071625	1					
ANR	1071633	Identifier	t1_hinter__is_x_fitting		1071625	2					
ANR	1071634	ParameterList	t1_hinter * self		1071625	3					
ANR	1071635	Parameter	t1_hinter * self	1525:28:61784:61799	1071625	0	True				
ANR	1071636	ParameterType	t1_hinter *		1071625	0					
ANR	1071637	Identifier	self		1071625	1					
ANR	1071638	CFGEntryNode	ENTRY		1071625		True				
ANR	1071639	CFGExitNode	EXIT		1071625		True				
ANR	1071640	Symbol	self -> grid_fit_x		1071625						
ANR	1071641	Symbol	* self		1071625						
ANR	1071642	Symbol	self		1071625						
ANR	1071643	Function	t1_hinter__segment_beg	1531:0:61921:62394							
ANR	1071644	FunctionDef	"t1_hinter__segment_beg (t1_hinter * self , int pole_index)"		1071643	0					
ANR	1071645	CompoundStatement		1532:0:61996:62394	1071643	0					
ANR	1071646	IdentifierDeclStatement	int contour_index = self -> pole [ pole_index ] . contour_index ;	1532:3:62000:62056	1071643	0	True				
ANR	1071647	IdentifierDecl	contour_index = self -> pole [ pole_index ] . contour_index		1071643	0					
ANR	1071648	IdentifierDeclType	int		1071643	0					
ANR	1071649	Identifier	contour_index		1071643	1					
ANR	1071650	AssignmentExpression	contour_index = self -> pole [ pole_index ] . contour_index		1071643	2		=			
ANR	1071651	Identifier	contour_index		1071643	0					
ANR	1071652	MemberAccess	self -> pole [ pole_index ] . contour_index		1071643	1					
ANR	1071653	ArrayIndexing	self -> pole [ pole_index ]		1071643	0					
ANR	1071654	PtrMemberAccess	self -> pole		1071643	0					
ANR	1071655	Identifier	self		1071643	0					
ANR	1071656	Identifier	pole		1071643	1					
ANR	1071657	Identifier	pole_index		1071643	1					
ANR	1071658	Identifier	contour_index		1071643	1					
ANR	1071659	IdentifierDeclStatement	int beg_contour_pole = self -> contour [ contour_index ] ;	1533:4:62062:62113	1071643	1	True				
ANR	1071660	IdentifierDecl	beg_contour_pole = self -> contour [ contour_index ]		1071643	0					
ANR	1071661	IdentifierDeclType	int		1071643	0					
ANR	1071662	Identifier	beg_contour_pole		1071643	1					
ANR	1071663	AssignmentExpression	beg_contour_pole = self -> contour [ contour_index ]		1071643	2		=			
ANR	1071664	Identifier	beg_contour_pole		1071643	0					
ANR	1071665	ArrayIndexing	self -> contour [ contour_index ]		1071643	1					
ANR	1071666	PtrMemberAccess	self -> contour		1071643	0					
ANR	1071667	Identifier	self		1071643	0					
ANR	1071668	Identifier	contour		1071643	1					
ANR	1071669	Identifier	contour_index		1071643	1					
ANR	1071670	IdentifierDeclStatement	int end_contour_pole = self -> contour [ contour_index + 1 ] - 2 ;	1534:4:62119:62178	1071643	2	True				
ANR	1071671	IdentifierDecl	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		1071643	0					
ANR	1071672	IdentifierDeclType	int		1071643	0					
ANR	1071673	Identifier	end_contour_pole		1071643	1					
ANR	1071674	AssignmentExpression	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		1071643	2		=			
ANR	1071675	Identifier	end_contour_pole		1071643	0					
ANR	1071676	AdditiveExpression	self -> contour [ contour_index + 1 ] - 2		1071643	1		-			
ANR	1071677	ArrayIndexing	self -> contour [ contour_index + 1 ]		1071643	0					
ANR	1071678	PtrMemberAccess	self -> contour		1071643	0					
ANR	1071679	Identifier	self		1071643	0					
ANR	1071680	Identifier	contour		1071643	1					
ANR	1071681	AdditiveExpression	contour_index + 1		1071643	1		+			
ANR	1071682	Identifier	contour_index		1071643	0					
ANR	1071683	PrimaryExpression	1		1071643	1					
ANR	1071684	PrimaryExpression	2		1071643	1					
ANR	1071685	IdentifierDeclStatement	"int prev = ranger_step_b ( pole_index , beg_contour_pole , end_contour_pole ) ;"	1535:4:62184:62256	1071643	3	True				
ANR	1071686	IdentifierDecl	"prev = ranger_step_b ( pole_index , beg_contour_pole , end_contour_pole )"		1071643	0					
ANR	1071687	IdentifierDeclType	int		1071643	0					
ANR	1071688	Identifier	prev		1071643	1					
ANR	1071689	AssignmentExpression	"prev = ranger_step_b ( pole_index , beg_contour_pole , end_contour_pole )"		1071643	2		=			
ANR	1071690	Identifier	prev		1071643	0					
ANR	1071691	CallExpression	"ranger_step_b ( pole_index , beg_contour_pole , end_contour_pole )"		1071643	1					
ANR	1071692	Callee	ranger_step_b		1071643	0					
ANR	1071693	Identifier	ranger_step_b		1071643	0					
ANR	1071694	ArgumentList	pole_index		1071643	1					
ANR	1071695	Argument	pole_index		1071643	0					
ANR	1071696	Identifier	pole_index		1071643	0					
ANR	1071697	Argument	beg_contour_pole		1071643	1					
ANR	1071698	Identifier	beg_contour_pole		1071643	0					
ANR	1071699	Argument	end_contour_pole		1071643	2					
ANR	1071700	Identifier	end_contour_pole		1071643	0					
ANR	1071701	WhileStatement	while ( self -> pole [ prev ] . type == offcurve )		1071643	4					
ANR	1071702	Condition	self -> pole [ prev ] . type == offcurve	1537:11:62270:62302	1071643	0	True				
ANR	1071703	EqualityExpression	self -> pole [ prev ] . type == offcurve		1071643	0		==			
ANR	1071704	MemberAccess	self -> pole [ prev ] . type		1071643	0					
ANR	1071705	ArrayIndexing	self -> pole [ prev ]		1071643	0					
ANR	1071706	PtrMemberAccess	self -> pole		1071643	0					
ANR	1071707	Identifier	self		1071643	0					
ANR	1071708	Identifier	pole		1071643	1					
ANR	1071709	Identifier	prev		1071643	1					
ANR	1071710	Identifier	type		1071643	1					
ANR	1071711	Identifier	offcurve		1071643	1					
ANR	1071712	ExpressionStatement	"prev = ranger_step_b ( prev , beg_contour_pole , end_contour_pole )"	1538:8:62313:62375	1071643	1	True				
ANR	1071713	AssignmentExpression	"prev = ranger_step_b ( prev , beg_contour_pole , end_contour_pole )"		1071643	0		=			
ANR	1071714	Identifier	prev		1071643	0					
ANR	1071715	CallExpression	"ranger_step_b ( prev , beg_contour_pole , end_contour_pole )"		1071643	1					
ANR	1071716	Callee	ranger_step_b		1071643	0					
ANR	1071717	Identifier	ranger_step_b		1071643	0					
ANR	1071718	ArgumentList	prev		1071643	1					
ANR	1071719	Argument	prev		1071643	0					
ANR	1071720	Identifier	prev		1071643	0					
ANR	1071721	Argument	beg_contour_pole		1071643	1					
ANR	1071722	Identifier	beg_contour_pole		1071643	0					
ANR	1071723	Argument	end_contour_pole		1071643	2					
ANR	1071724	Identifier	end_contour_pole		1071643	0					
ANR	1071725	ReturnStatement	return prev ;	1539:4:62381:62392	1071643	5	True				
ANR	1071726	Identifier	prev		1071643	0					
ANR	1071727	ReturnType	static inline int		1071643	1					
ANR	1071728	Identifier	t1_hinter__segment_beg		1071643	2					
ANR	1071729	ParameterList	"t1_hinter * self , int pole_index"		1071643	3					
ANR	1071730	Parameter	t1_hinter * self	1531:41:61962:61977	1071643	0	True				
ANR	1071731	ParameterType	t1_hinter *		1071643	0					
ANR	1071732	Identifier	self		1071643	1					
ANR	1071733	Parameter	int pole_index	1531:59:61980:61993	1071643	1	True				
ANR	1071734	ParameterType	int		1071643	0					
ANR	1071735	Identifier	pole_index		1071643	1					
ANR	1071736	CFGEntryNode	ENTRY		1071643		True				
ANR	1071737	CFGExitNode	EXIT		1071643		True				
ANR	1071738	Symbol	* self -> contour		1071643						
ANR	1071739	Symbol	self -> pole [ prev ] . type		1071643						
ANR	1071740	Symbol	self -> pole [ pole_index ] . contour_index		1071643						
ANR	1071741	Symbol	* self -> pole		1071643						
ANR	1071742	Symbol	* * self		1071643						
ANR	1071743	Symbol	* self		1071643						
ANR	1071744	Symbol	ranger_step_b		1071643						
ANR	1071745	Symbol	prev		1071643						
ANR	1071746	Symbol	* prev		1071643						
ANR	1071747	Symbol	self -> contour		1071643						
ANR	1071748	Symbol	pole_index		1071643						
ANR	1071749	Symbol	* pole_index		1071643						
ANR	1071750	Symbol	end_contour_pole		1071643						
ANR	1071751	Symbol	offcurve		1071643						
ANR	1071752	Symbol	self		1071643						
ANR	1071753	Symbol	self -> pole		1071643						
ANR	1071754	Symbol	contour_index		1071643						
ANR	1071755	Symbol	beg_contour_pole		1071643						
ANR	1071756	Symbol	* contour_index		1071643						
ANR	1071757	Function	t1_hinter__segment_end	1542:0:62397:62870							
ANR	1071758	FunctionDef	"t1_hinter__segment_end (t1_hinter * self , int pole_index)"		1071757	0					
ANR	1071759	CompoundStatement		1543:0:62472:62870	1071757	0					
ANR	1071760	IdentifierDeclStatement	int contour_index = self -> pole [ pole_index ] . contour_index ;	1543:3:62476:62532	1071757	0	True				
ANR	1071761	IdentifierDecl	contour_index = self -> pole [ pole_index ] . contour_index		1071757	0					
ANR	1071762	IdentifierDeclType	int		1071757	0					
ANR	1071763	Identifier	contour_index		1071757	1					
ANR	1071764	AssignmentExpression	contour_index = self -> pole [ pole_index ] . contour_index		1071757	2		=			
ANR	1071765	Identifier	contour_index		1071757	0					
ANR	1071766	MemberAccess	self -> pole [ pole_index ] . contour_index		1071757	1					
ANR	1071767	ArrayIndexing	self -> pole [ pole_index ]		1071757	0					
ANR	1071768	PtrMemberAccess	self -> pole		1071757	0					
ANR	1071769	Identifier	self		1071757	0					
ANR	1071770	Identifier	pole		1071757	1					
ANR	1071771	Identifier	pole_index		1071757	1					
ANR	1071772	Identifier	contour_index		1071757	1					
ANR	1071773	IdentifierDeclStatement	int beg_contour_pole = self -> contour [ contour_index ] ;	1544:4:62538:62589	1071757	1	True				
ANR	1071774	IdentifierDecl	beg_contour_pole = self -> contour [ contour_index ]		1071757	0					
ANR	1071775	IdentifierDeclType	int		1071757	0					
ANR	1071776	Identifier	beg_contour_pole		1071757	1					
ANR	1071777	AssignmentExpression	beg_contour_pole = self -> contour [ contour_index ]		1071757	2		=			
ANR	1071778	Identifier	beg_contour_pole		1071757	0					
ANR	1071779	ArrayIndexing	self -> contour [ contour_index ]		1071757	1					
ANR	1071780	PtrMemberAccess	self -> contour		1071757	0					
ANR	1071781	Identifier	self		1071757	0					
ANR	1071782	Identifier	contour		1071757	1					
ANR	1071783	Identifier	contour_index		1071757	1					
ANR	1071784	IdentifierDeclStatement	int end_contour_pole = self -> contour [ contour_index + 1 ] - 2 ;	1545:4:62595:62654	1071757	2	True				
ANR	1071785	IdentifierDecl	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		1071757	0					
ANR	1071786	IdentifierDeclType	int		1071757	0					
ANR	1071787	Identifier	end_contour_pole		1071757	1					
ANR	1071788	AssignmentExpression	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		1071757	2		=			
ANR	1071789	Identifier	end_contour_pole		1071757	0					
ANR	1071790	AdditiveExpression	self -> contour [ contour_index + 1 ] - 2		1071757	1		-			
ANR	1071791	ArrayIndexing	self -> contour [ contour_index + 1 ]		1071757	0					
ANR	1071792	PtrMemberAccess	self -> contour		1071757	0					
ANR	1071793	Identifier	self		1071757	0					
ANR	1071794	Identifier	contour		1071757	1					
ANR	1071795	AdditiveExpression	contour_index + 1		1071757	1		+			
ANR	1071796	Identifier	contour_index		1071757	0					
ANR	1071797	PrimaryExpression	1		1071757	1					
ANR	1071798	PrimaryExpression	2		1071757	1					
ANR	1071799	IdentifierDeclStatement	"int next = ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole ) ;"	1546:4:62660:62732	1071757	3	True				
ANR	1071800	IdentifierDecl	"next = ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole )"		1071757	0					
ANR	1071801	IdentifierDeclType	int		1071757	0					
ANR	1071802	Identifier	next		1071757	1					
ANR	1071803	AssignmentExpression	"next = ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole )"		1071757	2		=			
ANR	1071804	Identifier	next		1071757	0					
ANR	1071805	CallExpression	"ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole )"		1071757	1					
ANR	1071806	Callee	ranger_step_f		1071757	0					
ANR	1071807	Identifier	ranger_step_f		1071757	0					
ANR	1071808	ArgumentList	pole_index		1071757	1					
ANR	1071809	Argument	pole_index		1071757	0					
ANR	1071810	Identifier	pole_index		1071757	0					
ANR	1071811	Argument	beg_contour_pole		1071757	1					
ANR	1071812	Identifier	beg_contour_pole		1071757	0					
ANR	1071813	Argument	end_contour_pole		1071757	2					
ANR	1071814	Identifier	end_contour_pole		1071757	0					
ANR	1071815	WhileStatement	while ( self -> pole [ next ] . type == offcurve )		1071757	4					
ANR	1071816	Condition	self -> pole [ next ] . type == offcurve	1548:11:62746:62778	1071757	0	True				
ANR	1071817	EqualityExpression	self -> pole [ next ] . type == offcurve		1071757	0		==			
ANR	1071818	MemberAccess	self -> pole [ next ] . type		1071757	0					
ANR	1071819	ArrayIndexing	self -> pole [ next ]		1071757	0					
ANR	1071820	PtrMemberAccess	self -> pole		1071757	0					
ANR	1071821	Identifier	self		1071757	0					
ANR	1071822	Identifier	pole		1071757	1					
ANR	1071823	Identifier	next		1071757	1					
ANR	1071824	Identifier	type		1071757	1					
ANR	1071825	Identifier	offcurve		1071757	1					
ANR	1071826	ExpressionStatement	"next = ranger_step_f ( next , beg_contour_pole , end_contour_pole )"	1549:8:62789:62851	1071757	1	True				
ANR	1071827	AssignmentExpression	"next = ranger_step_f ( next , beg_contour_pole , end_contour_pole )"		1071757	0		=			
ANR	1071828	Identifier	next		1071757	0					
ANR	1071829	CallExpression	"ranger_step_f ( next , beg_contour_pole , end_contour_pole )"		1071757	1					
ANR	1071830	Callee	ranger_step_f		1071757	0					
ANR	1071831	Identifier	ranger_step_f		1071757	0					
ANR	1071832	ArgumentList	next		1071757	1					
ANR	1071833	Argument	next		1071757	0					
ANR	1071834	Identifier	next		1071757	0					
ANR	1071835	Argument	beg_contour_pole		1071757	1					
ANR	1071836	Identifier	beg_contour_pole		1071757	0					
ANR	1071837	Argument	end_contour_pole		1071757	2					
ANR	1071838	Identifier	end_contour_pole		1071757	0					
ANR	1071839	ReturnStatement	return next ;	1550:4:62857:62868	1071757	5	True				
ANR	1071840	Identifier	next		1071757	0					
ANR	1071841	ReturnType	static inline int		1071757	1					
ANR	1071842	Identifier	t1_hinter__segment_end		1071757	2					
ANR	1071843	ParameterList	"t1_hinter * self , int pole_index"		1071757	3					
ANR	1071844	Parameter	t1_hinter * self	1542:41:62438:62453	1071757	0	True				
ANR	1071845	ParameterType	t1_hinter *		1071757	0					
ANR	1071846	Identifier	self		1071757	1					
ANR	1071847	Parameter	int pole_index	1542:59:62456:62469	1071757	1	True				
ANR	1071848	ParameterType	int		1071757	0					
ANR	1071849	Identifier	pole_index		1071757	1					
ANR	1071850	CFGEntryNode	ENTRY		1071757		True				
ANR	1071851	CFGExitNode	EXIT		1071757		True				
ANR	1071852	Symbol	* self -> contour		1071757						
ANR	1071853	Symbol	next		1071757						
ANR	1071854	Symbol	ranger_step_f		1071757						
ANR	1071855	Symbol	self -> pole [ pole_index ] . contour_index		1071757						
ANR	1071856	Symbol	* self -> pole		1071757						
ANR	1071857	Symbol	* * self		1071757						
ANR	1071858	Symbol	* self		1071757						
ANR	1071859	Symbol	* next		1071757						
ANR	1071860	Symbol	self -> pole [ next ] . type		1071757						
ANR	1071861	Symbol	self -> contour		1071757						
ANR	1071862	Symbol	pole_index		1071757						
ANR	1071863	Symbol	* pole_index		1071757						
ANR	1071864	Symbol	end_contour_pole		1071757						
ANR	1071865	Symbol	offcurve		1071757						
ANR	1071866	Symbol	self		1071757						
ANR	1071867	Symbol	self -> pole		1071757						
ANR	1071868	Symbol	contour_index		1071757						
ANR	1071869	Symbol	beg_contour_pole		1071757						
ANR	1071870	Symbol	* contour_index		1071757						
ANR	1071871	Function	t1_hinter__compute_y_span	1553:0:62873:63628							
ANR	1071872	FunctionDef	t1_hinter__compute_y_span (t1_hinter * self)		1071871	0					
ANR	1071873	CompoundStatement		1554:0:62929:63628	1071871	0					
ANR	1071874	IdentifierDeclStatement	int n = self -> pole_count - 1 ;	1555:4:62935:62963	1071871	0	True				
ANR	1071875	IdentifierDecl	n = self -> pole_count - 1		1071871	0					
ANR	1071876	IdentifierDeclType	int		1071871	0					
ANR	1071877	Identifier	n		1071871	1					
ANR	1071878	AssignmentExpression	n = self -> pole_count - 1		1071871	2		=			
ANR	1071879	Identifier	n		1071871	0					
ANR	1071880	AdditiveExpression	self -> pole_count - 1		1071871	1		-			
ANR	1071881	PtrMemberAccess	self -> pole_count		1071871	0					
ANR	1071882	Identifier	self		1071871	0					
ANR	1071883	Identifier	pole_count		1071871	1					
ANR	1071884	PrimaryExpression	1		1071871	1					
ANR	1071885	IdentifierDeclStatement	int i ;	1556:4:62969:62974	1071871	1	True				
ANR	1071886	IdentifierDecl	i		1071871	0					
ANR	1071887	IdentifierDeclType	int		1071871	0					
ANR	1071888	Identifier	i		1071871	1					
ANR	1071889	IfStatement	if ( n > 1 )		1071871	2					
ANR	1071890	Condition	n > 1	1558:8:62985:62989	1071871	0	True				
ANR	1071891	RelationalExpression	n > 1		1071871	0		>			
ANR	1071892	Identifier	n		1071871	0					
ANR	1071893	PrimaryExpression	1		1071871	1					
ANR	1071894	CompoundStatement		5:15:62:62	1071871	1					
ANR	1071895	ExpressionStatement	n --	1564:8:63255:63258	1071871	0	True				
ANR	1071896	PostIncDecOperationExpression	n --		1071871	0					
ANR	1071897	Identifier	n		1071871	0					
ANR	1071898	IncDec	--		1071871	1					
ANR	1071899	ElseStatement	else		1071871	0					
ANR	1071900	IfStatement	if ( n < 0 )		1071871	0					
ANR	1071901	Condition	n < 0	1565:15:63275:63279	1071871	0	True				
ANR	1071902	RelationalExpression	n < 0		1071871	0		<			
ANR	1071903	Identifier	n		1071871	0					
ANR	1071904	PrimaryExpression	0		1071871	1					
ANR	1071905	CompoundStatement		12:22:352:352	1071871	1					
ANR	1071906	ReturnStatement	return ;	1566:8:63292:63298	1071871	0	True				
ANR	1071907	ExpressionStatement	self -> ymin = self -> ymax = self -> pole [ 0 ] . gy	1568:4:63328:63370	1071871	3	True				
ANR	1071908	AssignmentExpression	self -> ymin = self -> ymax = self -> pole [ 0 ] . gy		1071871	0		=			
ANR	1071909	PtrMemberAccess	self -> ymin		1071871	0					
ANR	1071910	Identifier	self		1071871	0					
ANR	1071911	Identifier	ymin		1071871	1					
ANR	1071912	AssignmentExpression	self -> ymax = self -> pole [ 0 ] . gy		1071871	1		=			
ANR	1071913	PtrMemberAccess	self -> ymax		1071871	0					
ANR	1071914	Identifier	self		1071871	0					
ANR	1071915	Identifier	ymax		1071871	1					
ANR	1071916	MemberAccess	self -> pole [ 0 ] . gy		1071871	1					
ANR	1071917	ArrayIndexing	self -> pole [ 0 ]		1071871	0					
ANR	1071918	PtrMemberAccess	self -> pole		1071871	0					
ANR	1071919	Identifier	self		1071871	0					
ANR	1071920	Identifier	pole		1071871	1					
ANR	1071921	PrimaryExpression	0		1071871	1					
ANR	1071922	Identifier	gy		1071871	1					
ANR	1071923	ForStatement	for ( i = 1 ; i < n ; i ++ )		1071871	4					
ANR	1071924	ForInit	i = 1 ;	1569:9:63381:63386	1071871	0	True				
ANR	1071925	AssignmentExpression	i = 1		1071871	0		=			
ANR	1071926	Identifier	i		1071871	0					
ANR	1071927	PrimaryExpression	1		1071871	1					
ANR	1071928	Condition	i < n	1569:16:63388:63392	1071871	1	True				
ANR	1071929	RelationalExpression	i < n		1071871	0		<			
ANR	1071930	Identifier	i		1071871	0					
ANR	1071931	Identifier	n		1071871	1					
ANR	1071932	PostIncDecOperationExpression	i ++	1569:23:63395:63397	1071871	2	True				
ANR	1071933	Identifier	i		1071871	0					
ANR	1071934	IncDec	++		1071871	1					
ANR	1071935	CompoundStatement		16:28:470:470	1071871	3					
ANR	1071936	IfStatement	if ( self -> ymin > self -> pole [ i ] . gy )		1071871	0					
ANR	1071937	Condition	self -> ymin > self -> pole [ i ] . gy	1570:12:63414:63442	1071871	0	True				
ANR	1071938	RelationalExpression	self -> ymin > self -> pole [ i ] . gy		1071871	0		>			
ANR	1071939	PtrMemberAccess	self -> ymin		1071871	0					
ANR	1071940	Identifier	self		1071871	0					
ANR	1071941	Identifier	ymin		1071871	1					
ANR	1071942	MemberAccess	self -> pole [ i ] . gy		1071871	1					
ANR	1071943	ArrayIndexing	self -> pole [ i ]		1071871	0					
ANR	1071944	PtrMemberAccess	self -> pole		1071871	0					
ANR	1071945	Identifier	self		1071871	0					
ANR	1071946	Identifier	pole		1071871	1					
ANR	1071947	Identifier	i		1071871	1					
ANR	1071948	Identifier	gy		1071871	1					
ANR	1071949	ExpressionStatement	self -> ymin = self -> pole [ i ] . gy	1571:12:63457:63486	1071871	1	True				
ANR	1071950	AssignmentExpression	self -> ymin = self -> pole [ i ] . gy		1071871	0		=			
ANR	1071951	PtrMemberAccess	self -> ymin		1071871	0					
ANR	1071952	Identifier	self		1071871	0					
ANR	1071953	Identifier	ymin		1071871	1					
ANR	1071954	MemberAccess	self -> pole [ i ] . gy		1071871	1					
ANR	1071955	ArrayIndexing	self -> pole [ i ]		1071871	0					
ANR	1071956	PtrMemberAccess	self -> pole		1071871	0					
ANR	1071957	Identifier	self		1071871	0					
ANR	1071958	Identifier	pole		1071871	1					
ANR	1071959	Identifier	i		1071871	1					
ANR	1071960	Identifier	gy		1071871	1					
ANR	1071961	IfStatement	if ( self -> ymax < self -> pole [ i ] . gy )		1071871	1					
ANR	1071962	Condition	self -> ymax < self -> pole [ i ] . gy	1572:12:63500:63528	1071871	0	True				
ANR	1071963	RelationalExpression	self -> ymax < self -> pole [ i ] . gy		1071871	0		<			
ANR	1071964	PtrMemberAccess	self -> ymax		1071871	0					
ANR	1071965	Identifier	self		1071871	0					
ANR	1071966	Identifier	ymax		1071871	1					
ANR	1071967	MemberAccess	self -> pole [ i ] . gy		1071871	1					
ANR	1071968	ArrayIndexing	self -> pole [ i ]		1071871	0					
ANR	1071969	PtrMemberAccess	self -> pole		1071871	0					
ANR	1071970	Identifier	self		1071871	0					
ANR	1071971	Identifier	pole		1071871	1					
ANR	1071972	Identifier	i		1071871	1					
ANR	1071973	Identifier	gy		1071871	1					
ANR	1071974	ExpressionStatement	self -> ymax = self -> pole [ i ] . gy	1573:12:63543:63572	1071871	1	True				
ANR	1071975	AssignmentExpression	self -> ymax = self -> pole [ i ] . gy		1071871	0		=			
ANR	1071976	PtrMemberAccess	self -> ymax		1071871	0					
ANR	1071977	Identifier	self		1071871	0					
ANR	1071978	Identifier	ymax		1071871	1					
ANR	1071979	MemberAccess	self -> pole [ i ] . gy		1071871	1					
ANR	1071980	ArrayIndexing	self -> pole [ i ]		1071871	0					
ANR	1071981	PtrMemberAccess	self -> pole		1071871	0					
ANR	1071982	Identifier	self		1071871	0					
ANR	1071983	Identifier	pole		1071871	1					
ANR	1071984	Identifier	i		1071871	1					
ANR	1071985	Identifier	gy		1071871	1					
ANR	1071986	ExpressionStatement	self -> ymid = ( self -> ymax + self -> ymin ) / 2	1575:4:63584:63626	1071871	5	True				
ANR	1071987	AssignmentExpression	self -> ymid = ( self -> ymax + self -> ymin ) / 2		1071871	0		=			
ANR	1071988	PtrMemberAccess	self -> ymid		1071871	0					
ANR	1071989	Identifier	self		1071871	0					
ANR	1071990	Identifier	ymid		1071871	1					
ANR	1071991	MultiplicativeExpression	( self -> ymax + self -> ymin ) / 2		1071871	1		/			
ANR	1071992	AdditiveExpression	self -> ymax + self -> ymin		1071871	0		+			
ANR	1071993	PtrMemberAccess	self -> ymax		1071871	0					
ANR	1071994	Identifier	self		1071871	0					
ANR	1071995	Identifier	ymax		1071871	1					
ANR	1071996	PtrMemberAccess	self -> ymin		1071871	1					
ANR	1071997	Identifier	self		1071871	0					
ANR	1071998	Identifier	ymin		1071871	1					
ANR	1071999	PrimaryExpression	2		1071871	1					
ANR	1072000	ReturnType	static void		1071871	1					
ANR	1072001	Identifier	t1_hinter__compute_y_span		1071871	2					
ANR	1072002	ParameterList	t1_hinter * self		1071871	3					
ANR	1072003	Parameter	t1_hinter * self	1553:38:62911:62926	1071871	0	True				
ANR	1072004	ParameterType	t1_hinter *		1071871	0					
ANR	1072005	Identifier	self		1071871	1					
ANR	1072006	CFGEntryNode	ENTRY		1071871		True				
ANR	1072007	CFGExitNode	EXIT		1071871		True				
ANR	1072008	Symbol	self -> pole [ i ] . gy		1071871						
ANR	1072009	Symbol	* self -> pole		1071871						
ANR	1072010	Symbol	self -> pole_count		1071871						
ANR	1072011	Symbol	* * self		1071871						
ANR	1072012	Symbol	* self		1071871						
ANR	1072013	Symbol	self -> pole [ 0 ] . gy		1071871						
ANR	1072014	Symbol	self -> ymid		1071871						
ANR	1072015	Symbol	i		1071871						
ANR	1072016	Symbol	self -> ymax		1071871						
ANR	1072017	Symbol	n		1071871						
ANR	1072018	Symbol	* i		1071871						
ANR	1072019	Symbol	self		1071871						
ANR	1072020	Symbol	self -> ymin		1071871						
ANR	1072021	Symbol	self -> pole		1071871						
ANR	1072022	Function	t1_hinter__simplify_representation	1578:0:63631:66288							
ANR	1072023	FunctionDef	t1_hinter__simplify_representation (t1_hinter * self)		1072022	0					
ANR	1072024	CompoundStatement		1579:0:63696:66288	1072022	0					
ANR	1072025	IdentifierDeclStatement	"int i , j ;"	1579:3:63700:63708	1072022	0	True				
ANR	1072026	IdentifierDecl	i		1072022	0					
ANR	1072027	IdentifierDeclType	int		1072022	0					
ANR	1072028	Identifier	i		1072022	1					
ANR	1072029	IdentifierDecl	j		1072022	1					
ANR	1072030	IdentifierDeclType	int		1072022	0					
ANR	1072031	Identifier	j		1072022	1					
ANR	1072032	IdentifierDeclStatement	int last_pole = self -> pole_count - 1 ;	1580:4:63714:63750	1072022	1	True				
ANR	1072033	IdentifierDecl	last_pole = self -> pole_count - 1		1072022	0					
ANR	1072034	IdentifierDeclType	int		1072022	0					
ANR	1072035	Identifier	last_pole		1072022	1					
ANR	1072036	AssignmentExpression	last_pole = self -> pole_count - 1		1072022	2		=			
ANR	1072037	Identifier	last_pole		1072022	0					
ANR	1072038	AdditiveExpression	self -> pole_count - 1		1072022	1		-			
ANR	1072039	PtrMemberAccess	self -> pole_count		1072022	0					
ANR	1072040	Identifier	self		1072022	0					
ANR	1072041	Identifier	pole_count		1072022	1					
ANR	1072042	PrimaryExpression	1		1072022	1					
ANR	1072043	IdentifierDeclStatement	int primary_hint_count = self -> primary_hint_count ;	1581:4:63756:63805	1072022	2	True				
ANR	1072044	IdentifierDecl	primary_hint_count = self -> primary_hint_count		1072022	0					
ANR	1072045	IdentifierDeclType	int		1072022	0					
ANR	1072046	Identifier	primary_hint_count		1072022	1					
ANR	1072047	AssignmentExpression	primary_hint_count = self -> primary_hint_count		1072022	2		=			
ANR	1072048	Identifier	primary_hint_count		1072022	0					
ANR	1072049	PtrMemberAccess	self -> primary_hint_count		1072022	1					
ANR	1072050	Identifier	self		1072022	0					
ANR	1072051	Identifier	primary_hint_count		1072022	1					
ANR	1072052	IfStatement	if ( last_pole > 1 && self -> pole [ last_pole - 1 ] . type == closepath )		1072022	3					
ANR	1072053	Condition	last_pole > 1 && self -> pole [ last_pole - 1 ] . type == closepath	1583:8:63816:63874	1072022	0	True				
ANR	1072054	AndExpression	last_pole > 1 && self -> pole [ last_pole - 1 ] . type == closepath		1072022	0		&&			
ANR	1072055	RelationalExpression	last_pole > 1		1072022	0		>			
ANR	1072056	Identifier	last_pole		1072022	0					
ANR	1072057	PrimaryExpression	1		1072022	1					
ANR	1072058	EqualityExpression	self -> pole [ last_pole - 1 ] . type == closepath		1072022	1		==			
ANR	1072059	MemberAccess	self -> pole [ last_pole - 1 ] . type		1072022	0					
ANR	1072060	ArrayIndexing	self -> pole [ last_pole - 1 ]		1072022	0					
ANR	1072061	PtrMemberAccess	self -> pole		1072022	0					
ANR	1072062	Identifier	self		1072022	0					
ANR	1072063	Identifier	pole		1072022	1					
ANR	1072064	AdditiveExpression	last_pole - 1		1072022	1		-			
ANR	1072065	Identifier	last_pole		1072022	0					
ANR	1072066	PrimaryExpression	1		1072022	1					
ANR	1072067	Identifier	type		1072022	1					
ANR	1072068	Identifier	closepath		1072022	1					
ANR	1072069	ExpressionStatement	last_pole -= 2	1584:8:63885:63899	1072022	1	True				
ANR	1072070	AssignmentExpression	last_pole -= 2		1072022	0		-=			
ANR	1072071	Identifier	last_pole		1072022	0					
ANR	1072072	PrimaryExpression	2		1072022	1					
ANR	1072073	IfStatement	if ( self -> pole_count <= 1 )		1072022	4					
ANR	1072074	Condition	self -> pole_count <= 1	1585:8:63941:63961	1072022	0	True				
ANR	1072075	RelationalExpression	self -> pole_count <= 1		1072022	0		<=			
ANR	1072076	PtrMemberAccess	self -> pole_count		1072022	0					
ANR	1072077	Identifier	self		1072022	0					
ANR	1072078	Identifier	pole_count		1072022	1					
ANR	1072079	PrimaryExpression	1		1072022	1					
ANR	1072080	ReturnStatement	return ;	1586:8:63972:63978	1072022	1	True				
ANR	1072081	IfStatement	if ( ! self -> grid_fit_x || ! self -> grid_fit_y )		1072022	5					
ANR	1072082	Condition	! self -> grid_fit_x || ! self -> grid_fit_y	1590:8:64186:64223	1072022	0	True				
ANR	1072083	OrExpression	! self -> grid_fit_x || ! self -> grid_fit_y		1072022	0		||			
ANR	1072084	UnaryOperationExpression	! self -> grid_fit_x		1072022	0					
ANR	1072085	UnaryOperator	!		1072022	0					
ANR	1072086	PtrMemberAccess	self -> grid_fit_x		1072022	1					
ANR	1072087	Identifier	self		1072022	0					
ANR	1072088	Identifier	grid_fit_x		1072022	1					
ANR	1072089	UnaryOperationExpression	! self -> grid_fit_y		1072022	1					
ANR	1072090	UnaryOperator	!		1072022	0					
ANR	1072091	PtrMemberAccess	self -> grid_fit_y		1072022	1					
ANR	1072092	Identifier	self		1072022	0					
ANR	1072093	Identifier	grid_fit_y		1072022	1					
ANR	1072094	CompoundStatement		12:48:529:529	1072022	1					
ANR	1072095	ForStatement	for ( i = j = 0 ; i < self -> hint_count ; i ++ )		1072022	0					
ANR	1072096	ForInit	i = j = 0 ;	1591:13:64241:64250	1072022	0	True				
ANR	1072097	AssignmentExpression	i = j = 0		1072022	0		=			
ANR	1072098	Identifier	i		1072022	0					
ANR	1072099	AssignmentExpression	j = 0		1072022	1		=			
ANR	1072100	Identifier	j		1072022	0					
ANR	1072101	PrimaryExpression	0		1072022	1					
ANR	1072102	Condition	i < self -> hint_count	1591:24:64252:64271	1072022	1	True				
ANR	1072103	RelationalExpression	i < self -> hint_count		1072022	0		<			
ANR	1072104	Identifier	i		1072022	0					
ANR	1072105	PtrMemberAccess	self -> hint_count		1072022	1					
ANR	1072106	Identifier	self		1072022	0					
ANR	1072107	Identifier	hint_count		1072022	1					
ANR	1072108	PostIncDecOperationExpression	i ++	1591:46:64274:64276	1072022	2	True				
ANR	1072109	Identifier	i		1072022	0					
ANR	1072110	IncDec	++		1072022	1					
ANR	1072111	IfStatement	if ( ( self -> hint [ i ] . type == vstem && ! self -> grid_fit_x ) || ( self -> hint [ i ] . type == hstem && ! self -> grid_fit_y ) )		1072022	3					
ANR	1072112	Condition	( self -> hint [ i ] . type == vstem && ! self -> grid_fit_x ) || ( self -> hint [ i ] . type == hstem && ! self -> grid_fit_y )	1592:16:64295:64414	1072022	0	True				
ANR	1072113	OrExpression	( self -> hint [ i ] . type == vstem && ! self -> grid_fit_x ) || ( self -> hint [ i ] . type == hstem && ! self -> grid_fit_y )		1072022	0		||			
ANR	1072114	AndExpression	self -> hint [ i ] . type == vstem && ! self -> grid_fit_x		1072022	0		&&			
ANR	1072115	EqualityExpression	self -> hint [ i ] . type == vstem		1072022	0		==			
ANR	1072116	MemberAccess	self -> hint [ i ] . type		1072022	0					
ANR	1072117	ArrayIndexing	self -> hint [ i ]		1072022	0					
ANR	1072118	PtrMemberAccess	self -> hint		1072022	0					
ANR	1072119	Identifier	self		1072022	0					
ANR	1072120	Identifier	hint		1072022	1					
ANR	1072121	Identifier	i		1072022	1					
ANR	1072122	Identifier	type		1072022	1					
ANR	1072123	Identifier	vstem		1072022	1					
ANR	1072124	UnaryOperationExpression	! self -> grid_fit_x		1072022	1					
ANR	1072125	UnaryOperator	!		1072022	0					
ANR	1072126	PtrMemberAccess	self -> grid_fit_x		1072022	1					
ANR	1072127	Identifier	self		1072022	0					
ANR	1072128	Identifier	grid_fit_x		1072022	1					
ANR	1072129	AndExpression	self -> hint [ i ] . type == hstem && ! self -> grid_fit_y		1072022	1		&&			
ANR	1072130	EqualityExpression	self -> hint [ i ] . type == hstem		1072022	0		==			
ANR	1072131	MemberAccess	self -> hint [ i ] . type		1072022	0					
ANR	1072132	ArrayIndexing	self -> hint [ i ]		1072022	0					
ANR	1072133	PtrMemberAccess	self -> hint		1072022	0					
ANR	1072134	Identifier	self		1072022	0					
ANR	1072135	Identifier	hint		1072022	1					
ANR	1072136	Identifier	i		1072022	1					
ANR	1072137	Identifier	type		1072022	1					
ANR	1072138	Identifier	hstem		1072022	1					
ANR	1072139	UnaryOperationExpression	! self -> grid_fit_y		1072022	1					
ANR	1072140	UnaryOperator	!		1072022	0					
ANR	1072141	PtrMemberAccess	self -> grid_fit_y		1072022	1					
ANR	1072142	Identifier	self		1072022	0					
ANR	1072143	Identifier	grid_fit_y		1072022	1					
ANR	1072144	CompoundStatement		15:68:720:720	1072022	1					
ANR	1072145	IfStatement	if ( i < primary_hint_count )		1072022	0					
ANR	1072146	Condition	i < primary_hint_count	1594:20:64439:64460	1072022	0	True				
ANR	1072147	RelationalExpression	i < primary_hint_count		1072022	0		<			
ANR	1072148	Identifier	i		1072022	0					
ANR	1072149	Identifier	primary_hint_count		1072022	1					
ANR	1072150	ExpressionStatement	self -> primary_hint_count --	1595:20:64483:64509	1072022	1	True				
ANR	1072151	PostIncDecOperationExpression	self -> primary_hint_count --		1072022	0					
ANR	1072152	PtrMemberAccess	self -> primary_hint_count		1072022	0					
ANR	1072153	Identifier	self		1072022	0					
ANR	1072154	Identifier	primary_hint_count		1072022	1					
ANR	1072155	IncDec	--		1072022	1					
ANR	1072156	ContinueStatement	continue ;	1596:16:64527:64535	1072022	1	True				
ANR	1072157	ElseStatement	else		1072022	0					
ANR	1072158	CompoundStatement		19:19:874:874	1072022	0					
ANR	1072159	IfStatement	if ( i != j )		1072022	0					
ANR	1072160	Condition	i != j	1598:20:64593:64598	1072022	0	True				
ANR	1072161	EqualityExpression	i != j		1072022	0		!=			
ANR	1072162	Identifier	i		1072022	0					
ANR	1072163	Identifier	j		1072022	1					
ANR	1072164	ExpressionStatement	self -> hint [ j ] = self -> hint [ i ]	1599:20:64641:64670	1072022	1	True				
ANR	1072165	AssignmentExpression	self -> hint [ j ] = self -> hint [ i ]		1072022	0		=			
ANR	1072166	ArrayIndexing	self -> hint [ j ]		1072022	0					
ANR	1072167	PtrMemberAccess	self -> hint		1072022	0					
ANR	1072168	Identifier	self		1072022	0					
ANR	1072169	Identifier	hint		1072022	1					
ANR	1072170	Identifier	j		1072022	1					
ANR	1072171	ArrayIndexing	self -> hint [ i ]		1072022	1					
ANR	1072172	PtrMemberAccess	self -> hint		1072022	0					
ANR	1072173	Identifier	self		1072022	0					
ANR	1072174	Identifier	hint		1072022	1					
ANR	1072175	Identifier	i		1072022	1					
ANR	1072176	ExpressionStatement	j ++	1600:16:64688:64691	1072022	1	True				
ANR	1072177	PostIncDecOperationExpression	j ++		1072022	0					
ANR	1072178	Identifier	j		1072022	0					
ANR	1072179	IncDec	++		1072022	1					
ANR	1072180	ExpressionStatement	self -> hint_count = j	1602:8:64715:64735	1072022	1	True				
ANR	1072181	AssignmentExpression	self -> hint_count = j		1072022	0		=			
ANR	1072182	PtrMemberAccess	self -> hint_count		1072022	0					
ANR	1072183	Identifier	self		1072022	0					
ANR	1072184	Identifier	hint_count		1072022	1					
ANR	1072185	Identifier	j		1072022	1					
ANR	1072186	ForStatement	for ( i = 0 ; i < self -> hint_range_count ; i ++ )		1072022	6					
ANR	1072187	ForInit	i = 0 ;	1604:9:64752:64757	1072022	0	True				
ANR	1072188	AssignmentExpression	i = 0		1072022	0		=			
ANR	1072189	Identifier	i		1072022	0					
ANR	1072190	PrimaryExpression	0		1072022	1					
ANR	1072191	Condition	i < self -> hint_range_count	1604:16:64759:64784	1072022	1	True				
ANR	1072192	RelationalExpression	i < self -> hint_range_count		1072022	0		<			
ANR	1072193	Identifier	i		1072022	0					
ANR	1072194	PtrMemberAccess	self -> hint_range_count		1072022	1					
ANR	1072195	Identifier	self		1072022	0					
ANR	1072196	Identifier	hint_range_count		1072022	1					
ANR	1072197	PostIncDecOperationExpression	i ++	1604:44:64787:64789	1072022	2	True				
ANR	1072198	Identifier	i		1072022	0					
ANR	1072199	IncDec	++		1072022	1					
ANR	1072200	CompoundStatement		27:8:1105:1153	1072022	3					
ANR	1072201	IdentifierDeclStatement	t1_hint_range * hint_range = & self -> hint_range [ i ] ;	1605:8:64802:64850	1072022	0	True				
ANR	1072202	IdentifierDecl	* hint_range = & self -> hint_range [ i ]		1072022	0					
ANR	1072203	IdentifierDeclType	t1_hint_range *		1072022	0					
ANR	1072204	Identifier	hint_range		1072022	1					
ANR	1072205	AssignmentExpression	* hint_range = & self -> hint_range [ i ]		1072022	2		=			
ANR	1072206	Identifier	hint_range		1072022	0					
ANR	1072207	UnaryOperationExpression	& self -> hint_range [ i ]		1072022	1					
ANR	1072208	UnaryOperator	&		1072022	0					
ANR	1072209	ArrayIndexing	self -> hint_range [ i ]		1072022	1					
ANR	1072210	PtrMemberAccess	self -> hint_range		1072022	0					
ANR	1072211	Identifier	self		1072022	0					
ANR	1072212	Identifier	hint_range		1072022	1					
ANR	1072213	Identifier	i		1072022	1					
ANR	1072214	ExpressionStatement	j = hint_range -> beg_pole	1607:8:64861:64885	1072022	1	True				
ANR	1072215	AssignmentExpression	j = hint_range -> beg_pole		1072022	0		=			
ANR	1072216	Identifier	j		1072022	0					
ANR	1072217	PtrMemberAccess	hint_range -> beg_pole		1072022	1					
ANR	1072218	Identifier	hint_range		1072022	0					
ANR	1072219	Identifier	beg_pole		1072022	1					
ANR	1072220	IfStatement	if ( self -> pole [ j ] . type == closepath )		1072022	2					
ANR	1072221	Condition	self -> pole [ j ] . type == closepath	1608:12:64899:64929	1072022	0	True				
ANR	1072222	EqualityExpression	self -> pole [ j ] . type == closepath		1072022	0		==			
ANR	1072223	MemberAccess	self -> pole [ j ] . type		1072022	0					
ANR	1072224	ArrayIndexing	self -> pole [ j ]		1072022	0					
ANR	1072225	PtrMemberAccess	self -> pole		1072022	0					
ANR	1072226	Identifier	self		1072022	0					
ANR	1072227	Identifier	pole		1072022	1					
ANR	1072228	Identifier	j		1072022	1					
ANR	1072229	Identifier	type		1072022	1					
ANR	1072230	Identifier	closepath		1072022	1					
ANR	1072231	ExpressionStatement	hint_range -> beg_pole = ++ j	1609:12:64944:64970	1072022	1	True				
ANR	1072232	AssignmentExpression	hint_range -> beg_pole = ++ j		1072022	0		=			
ANR	1072233	PtrMemberAccess	hint_range -> beg_pole		1072022	0					
ANR	1072234	Identifier	hint_range		1072022	0					
ANR	1072235	Identifier	beg_pole		1072022	1					
ANR	1072236	UnaryExpression	++ j		1072022	1					
ANR	1072237	IncDec	++		1072022	0					
ANR	1072238	Identifier	j		1072022	1					
ANR	1072239	ElseStatement	else		1072022	0					
ANR	1072240	CompoundStatement		32:13:1288:1288	1072022	0					
ANR	1072241	IfStatement	if ( self -> pole [ j ] . type == offcurve )		1072022	0					
ANR	1072242	Condition	self -> pole [ j ] . type == offcurve	1611:16:65003:65032	1072022	0	True				
ANR	1072243	EqualityExpression	self -> pole [ j ] . type == offcurve		1072022	0		==			
ANR	1072244	MemberAccess	self -> pole [ j ] . type		1072022	0					
ANR	1072245	ArrayIndexing	self -> pole [ j ]		1072022	0					
ANR	1072246	PtrMemberAccess	self -> pole		1072022	0					
ANR	1072247	Identifier	self		1072022	0					
ANR	1072248	Identifier	pole		1072022	1					
ANR	1072249	Identifier	j		1072022	1					
ANR	1072250	Identifier	type		1072022	1					
ANR	1072251	Identifier	offcurve		1072022	1					
ANR	1072252	ExpressionStatement	hint_range -> beg_pole = -- j	1612:16:65051:65077	1072022	1	True				
ANR	1072253	AssignmentExpression	hint_range -> beg_pole = -- j		1072022	0		=			
ANR	1072254	PtrMemberAccess	hint_range -> beg_pole		1072022	0					
ANR	1072255	Identifier	hint_range		1072022	0					
ANR	1072256	Identifier	beg_pole		1072022	1					
ANR	1072257	UnaryExpression	-- j		1072022	1					
ANR	1072258	IncDec	--		1072022	0					
ANR	1072259	Identifier	j		1072022	1					
ANR	1072260	IfStatement	if ( self -> pole [ j ] . type == offcurve )		1072022	1					
ANR	1072261	Condition	self -> pole [ j ] . type == offcurve	1613:16:65095:65124	1072022	0	True				
ANR	1072262	EqualityExpression	self -> pole [ j ] . type == offcurve		1072022	0		==			
ANR	1072263	MemberAccess	self -> pole [ j ] . type		1072022	0					
ANR	1072264	ArrayIndexing	self -> pole [ j ]		1072022	0					
ANR	1072265	PtrMemberAccess	self -> pole		1072022	0					
ANR	1072266	Identifier	self		1072022	0					
ANR	1072267	Identifier	pole		1072022	1					
ANR	1072268	Identifier	j		1072022	1					
ANR	1072269	Identifier	type		1072022	1					
ANR	1072270	Identifier	offcurve		1072022	1					
ANR	1072271	ExpressionStatement	hint_range -> beg_pole = -- j	1614:16:65143:65169	1072022	1	True				
ANR	1072272	AssignmentExpression	hint_range -> beg_pole = -- j		1072022	0		=			
ANR	1072273	PtrMemberAccess	hint_range -> beg_pole		1072022	0					
ANR	1072274	Identifier	hint_range		1072022	0					
ANR	1072275	Identifier	beg_pole		1072022	1					
ANR	1072276	UnaryExpression	-- j		1072022	1					
ANR	1072277	IncDec	--		1072022	0					
ANR	1072278	Identifier	j		1072022	1					
ANR	1072279	ExpressionStatement	j = hint_range -> end_pole	1616:8:65189:65213	1072022	3	True				
ANR	1072280	AssignmentExpression	j = hint_range -> end_pole		1072022	0		=			
ANR	1072281	Identifier	j		1072022	0					
ANR	1072282	PtrMemberAccess	hint_range -> end_pole		1072022	1					
ANR	1072283	Identifier	hint_range		1072022	0					
ANR	1072284	Identifier	end_pole		1072022	1					
ANR	1072285	IfStatement	if ( j == - 1 )		1072022	4					
ANR	1072286	Condition	j == - 1	1617:12:65227:65233	1072022	0	True				
ANR	1072287	EqualityExpression	j == - 1		1072022	0		==			
ANR	1072288	Identifier	j		1072022	0					
ANR	1072289	UnaryOperationExpression	- 1		1072022	1					
ANR	1072290	UnaryOperator	-		1072022	0					
ANR	1072291	PrimaryExpression	1		1072022	1					
ANR	1072292	ExpressionStatement	hint_range -> end_pole = j = last_pole	1618:12:65248:65284	1072022	1	True				
ANR	1072293	AssignmentExpression	hint_range -> end_pole = j = last_pole		1072022	0		=			
ANR	1072294	PtrMemberAccess	hint_range -> end_pole		1072022	0					
ANR	1072295	Identifier	hint_range		1072022	0					
ANR	1072296	Identifier	end_pole		1072022	1					
ANR	1072297	AssignmentExpression	j = last_pole		1072022	1		=			
ANR	1072298	Identifier	j		1072022	0					
ANR	1072299	Identifier	last_pole		1072022	1					
ANR	1072300	IfStatement	if ( self -> pole [ j ] . type == offcurve )		1072022	5					
ANR	1072301	Condition	self -> pole [ j ] . type == offcurve	1619:12:65298:65327	1072022	0	True				
ANR	1072302	EqualityExpression	self -> pole [ j ] . type == offcurve		1072022	0		==			
ANR	1072303	MemberAccess	self -> pole [ j ] . type		1072022	0					
ANR	1072304	ArrayIndexing	self -> pole [ j ]		1072022	0					
ANR	1072305	PtrMemberAccess	self -> pole		1072022	0					
ANR	1072306	Identifier	self		1072022	0					
ANR	1072307	Identifier	pole		1072022	1					
ANR	1072308	Identifier	j		1072022	1					
ANR	1072309	Identifier	type		1072022	1					
ANR	1072310	Identifier	offcurve		1072022	1					
ANR	1072311	ExpressionStatement	hint_range -> end_pole = ++ j	1620:12:65342:65368	1072022	1	True				
ANR	1072312	AssignmentExpression	hint_range -> end_pole = ++ j		1072022	0		=			
ANR	1072313	PtrMemberAccess	hint_range -> end_pole		1072022	0					
ANR	1072314	Identifier	hint_range		1072022	0					
ANR	1072315	Identifier	end_pole		1072022	1					
ANR	1072316	UnaryExpression	++ j		1072022	1					
ANR	1072317	IncDec	++		1072022	0					
ANR	1072318	Identifier	j		1072022	1					
ANR	1072319	IfStatement	if ( self -> pole [ j ] . type == offcurve )		1072022	6					
ANR	1072320	Condition	self -> pole [ j ] . type == offcurve	1621:12:65382:65411	1072022	0	True				
ANR	1072321	EqualityExpression	self -> pole [ j ] . type == offcurve		1072022	0		==			
ANR	1072322	MemberAccess	self -> pole [ j ] . type		1072022	0					
ANR	1072323	ArrayIndexing	self -> pole [ j ]		1072022	0					
ANR	1072324	PtrMemberAccess	self -> pole		1072022	0					
ANR	1072325	Identifier	self		1072022	0					
ANR	1072326	Identifier	pole		1072022	1					
ANR	1072327	Identifier	j		1072022	1					
ANR	1072328	Identifier	type		1072022	1					
ANR	1072329	Identifier	offcurve		1072022	1					
ANR	1072330	ExpressionStatement	hint_range -> end_pole = ++ j	1622:12:65426:65452	1072022	1	True				
ANR	1072331	AssignmentExpression	hint_range -> end_pole = ++ j		1072022	0		=			
ANR	1072332	PtrMemberAccess	hint_range -> end_pole		1072022	0					
ANR	1072333	Identifier	hint_range		1072022	0					
ANR	1072334	Identifier	end_pole		1072022	1					
ANR	1072335	UnaryExpression	++ j		1072022	1					
ANR	1072336	IncDec	++		1072022	0					
ANR	1072337	Identifier	j		1072022	1					
ANR	1072338	ForStatement	for ( i = 0 ; i <= self -> contour_count ; i ++ )		1072022	7					
ANR	1072339	ForInit	i = 0 ;	1628:9:65608:65613	1072022	0	True				
ANR	1072340	AssignmentExpression	i = 0		1072022	0		=			
ANR	1072341	Identifier	i		1072022	0					
ANR	1072342	PrimaryExpression	0		1072022	1					
ANR	1072343	Condition	i <= self -> contour_count	1628:16:65615:65638	1072022	1	True				
ANR	1072344	RelationalExpression	i <= self -> contour_count		1072022	0		<=			
ANR	1072345	Identifier	i		1072022	0					
ANR	1072346	PtrMemberAccess	self -> contour_count		1072022	1					
ANR	1072347	Identifier	self		1072022	0					
ANR	1072348	Identifier	contour_count		1072022	1					
ANR	1072349	PostIncDecOperationExpression	i ++	1628:42:65641:65643	1072022	2	True				
ANR	1072350	Identifier	i		1072022	0					
ANR	1072351	IncDec	++		1072022	1					
ANR	1072352	IfStatement	if ( self -> pole [ self -> contour [ i ] ] . type == moveto )		1072022	3					
ANR	1072353	Condition	self -> pole [ self -> contour [ i ] ] . type == moveto	1629:12:65658:65700	1072022	0	True				
ANR	1072354	EqualityExpression	self -> pole [ self -> contour [ i ] ] . type == moveto		1072022	0		==			
ANR	1072355	MemberAccess	self -> pole [ self -> contour [ i ] ] . type		1072022	0					
ANR	1072356	ArrayIndexing	self -> pole [ self -> contour [ i ] ]		1072022	0					
ANR	1072357	PtrMemberAccess	self -> pole		1072022	0					
ANR	1072358	Identifier	self		1072022	0					
ANR	1072359	Identifier	pole		1072022	1					
ANR	1072360	ArrayIndexing	self -> contour [ i ]		1072022	1					
ANR	1072361	PtrMemberAccess	self -> contour		1072022	0					
ANR	1072362	Identifier	self		1072022	0					
ANR	1072363	Identifier	contour		1072022	1					
ANR	1072364	Identifier	i		1072022	1					
ANR	1072365	Identifier	type		1072022	1					
ANR	1072366	Identifier	moveto		1072022	1					
ANR	1072367	ExpressionStatement	self -> pole [ self -> contour [ i ] ] . type = oncurve	1630:12:65715:65758	1072022	1	True				
ANR	1072368	AssignmentExpression	self -> pole [ self -> contour [ i ] ] . type = oncurve		1072022	0		=			
ANR	1072369	MemberAccess	self -> pole [ self -> contour [ i ] ] . type		1072022	0					
ANR	1072370	ArrayIndexing	self -> pole [ self -> contour [ i ] ]		1072022	0					
ANR	1072371	PtrMemberAccess	self -> pole		1072022	0					
ANR	1072372	Identifier	self		1072022	0					
ANR	1072373	Identifier	pole		1072022	1					
ANR	1072374	ArrayIndexing	self -> contour [ i ]		1072022	1					
ANR	1072375	PtrMemberAccess	self -> contour		1072022	0					
ANR	1072376	Identifier	self		1072022	0					
ANR	1072377	Identifier	contour		1072022	1					
ANR	1072378	Identifier	i		1072022	1					
ANR	1072379	Identifier	type		1072022	1					
ANR	1072380	Identifier	oncurve		1072022	1					
ANR	1072381	ForStatement	for ( j = 0 ; j < self -> hint_range_count ; j ++ )		1072022	8					
ANR	1072382	ForInit	j = 0 ;	1634:9:65913:65918	1072022	0	True				
ANR	1072383	AssignmentExpression	j = 0		1072022	0		=			
ANR	1072384	Identifier	j		1072022	0					
ANR	1072385	PrimaryExpression	0		1072022	1					
ANR	1072386	Condition	j < self -> hint_range_count	1634:16:65920:65945	1072022	1	True				
ANR	1072387	RelationalExpression	j < self -> hint_range_count		1072022	0		<			
ANR	1072388	Identifier	j		1072022	0					
ANR	1072389	PtrMemberAccess	self -> hint_range_count		1072022	1					
ANR	1072390	Identifier	self		1072022	0					
ANR	1072391	Identifier	hint_range_count		1072022	1					
ANR	1072392	PostIncDecOperationExpression	j ++	1634:44:65948:65950	1072022	2	True				
ANR	1072393	Identifier	j		1072022	0					
ANR	1072394	IncDec	++		1072022	1					
ANR	1072395	CompoundStatement		59:8:2383:2434	1072022	3					
ANR	1072396	IdentifierDeclStatement	int beg_pole = self -> hint_range [ j ] . beg_pole ;	1635:8:65963:66006	1072022	0	True				
ANR	1072397	IdentifierDecl	beg_pole = self -> hint_range [ j ] . beg_pole		1072022	0					
ANR	1072398	IdentifierDeclType	int		1072022	0					
ANR	1072399	Identifier	beg_pole		1072022	1					
ANR	1072400	AssignmentExpression	beg_pole = self -> hint_range [ j ] . beg_pole		1072022	2		=			
ANR	1072401	Identifier	beg_pole		1072022	0					
ANR	1072402	MemberAccess	self -> hint_range [ j ] . beg_pole		1072022	1					
ANR	1072403	ArrayIndexing	self -> hint_range [ j ]		1072022	0					
ANR	1072404	PtrMemberAccess	self -> hint_range		1072022	0					
ANR	1072405	Identifier	self		1072022	0					
ANR	1072406	Identifier	hint_range		1072022	1					
ANR	1072407	Identifier	j		1072022	1					
ANR	1072408	Identifier	beg_pole		1072022	1					
ANR	1072409	IdentifierDeclStatement	int contour_index = self -> pole [ beg_pole ] . contour_index ;	1636:8:66016:66070	1072022	1	True				
ANR	1072410	IdentifierDecl	contour_index = self -> pole [ beg_pole ] . contour_index		1072022	0					
ANR	1072411	IdentifierDeclType	int		1072022	0					
ANR	1072412	Identifier	contour_index		1072022	1					
ANR	1072413	AssignmentExpression	contour_index = self -> pole [ beg_pole ] . contour_index		1072022	2		=			
ANR	1072414	Identifier	contour_index		1072022	0					
ANR	1072415	MemberAccess	self -> pole [ beg_pole ] . contour_index		1072022	1					
ANR	1072416	ArrayIndexing	self -> pole [ beg_pole ]		1072022	0					
ANR	1072417	PtrMemberAccess	self -> pole		1072022	0					
ANR	1072418	Identifier	self		1072022	0					
ANR	1072419	Identifier	pole		1072022	1					
ANR	1072420	Identifier	beg_pole		1072022	1					
ANR	1072421	Identifier	contour_index		1072022	1					
ANR	1072422	IdentifierDeclStatement	int contour_beg_pole = self -> contour [ contour_index ] ;	1637:8:66080:66131	1072022	2	True				
ANR	1072423	IdentifierDecl	contour_beg_pole = self -> contour [ contour_index ]		1072022	0					
ANR	1072424	IdentifierDeclType	int		1072022	0					
ANR	1072425	Identifier	contour_beg_pole		1072022	1					
ANR	1072426	AssignmentExpression	contour_beg_pole = self -> contour [ contour_index ]		1072022	2		=			
ANR	1072427	Identifier	contour_beg_pole		1072022	0					
ANR	1072428	ArrayIndexing	self -> contour [ contour_index ]		1072022	1					
ANR	1072429	PtrMemberAccess	self -> contour		1072022	0					
ANR	1072430	Identifier	self		1072022	0					
ANR	1072431	Identifier	contour		1072022	1					
ANR	1072432	Identifier	contour_index		1072022	1					
ANR	1072433	IfStatement	if ( beg_pole > contour_beg_pole && beg_pole < last_pole )		1072022	3					
ANR	1072434	Condition	beg_pole > contour_beg_pole && beg_pole < last_pole	1639:12:66146:66196	1072022	0	True				
ANR	1072435	AndExpression	beg_pole > contour_beg_pole && beg_pole < last_pole		1072022	0		&&			
ANR	1072436	RelationalExpression	beg_pole > contour_beg_pole		1072022	0		>			
ANR	1072437	Identifier	beg_pole		1072022	0					
ANR	1072438	Identifier	contour_beg_pole		1072022	1					
ANR	1072439	RelationalExpression	beg_pole < last_pole		1072022	1		<			
ANR	1072440	Identifier	beg_pole		1072022	0					
ANR	1072441	Identifier	last_pole		1072022	1					
ANR	1072442	ExpressionStatement	"self -> hint_range [ j ] . beg_pole = t1_hinter__segment_beg ( self , beg_pole )"	1640:12:66211:66280	1072022	1	True				
ANR	1072443	AssignmentExpression	"self -> hint_range [ j ] . beg_pole = t1_hinter__segment_beg ( self , beg_pole )"		1072022	0		=			
ANR	1072444	MemberAccess	self -> hint_range [ j ] . beg_pole		1072022	0					
ANR	1072445	ArrayIndexing	self -> hint_range [ j ]		1072022	0					
ANR	1072446	PtrMemberAccess	self -> hint_range		1072022	0					
ANR	1072447	Identifier	self		1072022	0					
ANR	1072448	Identifier	hint_range		1072022	1					
ANR	1072449	Identifier	j		1072022	1					
ANR	1072450	Identifier	beg_pole		1072022	1					
ANR	1072451	CallExpression	"t1_hinter__segment_beg ( self , beg_pole )"		1072022	1					
ANR	1072452	Callee	t1_hinter__segment_beg		1072022	0					
ANR	1072453	Identifier	t1_hinter__segment_beg		1072022	0					
ANR	1072454	ArgumentList	self		1072022	1					
ANR	1072455	Argument	self		1072022	0					
ANR	1072456	Identifier	self		1072022	0					
ANR	1072457	Argument	beg_pole		1072022	1					
ANR	1072458	Identifier	beg_pole		1072022	0					
ANR	1072459	ReturnType	static void		1072022	1					
ANR	1072460	Identifier	t1_hinter__simplify_representation		1072022	2					
ANR	1072461	ParameterList	t1_hinter * self		1072022	3					
ANR	1072462	Parameter	t1_hinter * self	1578:47:63678:63693	1072022	0	True				
ANR	1072463	ParameterType	t1_hinter *		1072022	0					
ANR	1072464	Identifier	self		1072022	1					
ANR	1072465	CFGEntryNode	ENTRY		1072022		True				
ANR	1072466	CFGExitNode	EXIT		1072022		True				
ANR	1072467	Symbol	self -> pole_count		1072022						
ANR	1072468	Symbol	t1_hinter__segment_beg		1072022						
ANR	1072469	Symbol	hint_range		1072022						
ANR	1072470	Symbol	self -> pole [ beg_pole ] . contour_index		1072022						
ANR	1072471	Symbol	* * self -> contour		1072022						
ANR	1072472	Symbol	vstem		1072022						
ANR	1072473	Symbol	hint_range -> beg_pole		1072022						
ANR	1072474	Symbol	self -> grid_fit_x		1072022						
ANR	1072475	Symbol	self -> grid_fit_y		1072022						
ANR	1072476	Symbol	* self -> hint		1072022						
ANR	1072477	Symbol	self -> hint_range [ j ] . beg_pole		1072022						
ANR	1072478	Symbol	* * * self		1072022						
ANR	1072479	Symbol	primary_hint_count		1072022						
ANR	1072480	Symbol	* beg_pole		1072022						
ANR	1072481	Symbol	* contour_index		1072022						
ANR	1072482	Symbol	* * i		1072022						
ANR	1072483	Symbol	* self		1072022						
ANR	1072484	Symbol	beg_pole		1072022						
ANR	1072485	Symbol	self -> pole [ j ] . type		1072022						
ANR	1072486	Symbol	self -> contour		1072022						
ANR	1072487	Symbol	hint_range -> end_pole		1072022						
ANR	1072488	Symbol	self -> pole [ self -> contour [ i ] ] . type		1072022						
ANR	1072489	Symbol	last_pole		1072022						
ANR	1072490	Symbol	contour_beg_pole		1072022						
ANR	1072491	Symbol	oncurve		1072022						
ANR	1072492	Symbol	* self -> pole		1072022						
ANR	1072493	Symbol	self -> primary_hint_count		1072022						
ANR	1072494	Symbol	closepath		1072022						
ANR	1072495	Symbol	self -> pole		1072022						
ANR	1072496	Symbol	contour_index		1072022						
ANR	1072497	Symbol	hstem		1072022						
ANR	1072498	Symbol	moveto		1072022						
ANR	1072499	Symbol	* self -> contour		1072022						
ANR	1072500	Symbol	self -> hint [ i ] . type		1072022						
ANR	1072501	Symbol	self -> hint		1072022						
ANR	1072502	Symbol	self -> contour_count		1072022						
ANR	1072503	Symbol	* * self		1072022						
ANR	1072504	Symbol	i		1072022						
ANR	1072505	Symbol	j		1072022						
ANR	1072506	Symbol	self -> pole [ last_pole - 1 ] . type		1072022						
ANR	1072507	Symbol	self -> hint_range_count		1072022						
ANR	1072508	Symbol	self -> hint_range		1072022						
ANR	1072509	Symbol	* self -> hint_range		1072022						
ANR	1072510	Symbol	self -> hint_count		1072022						
ANR	1072511	Symbol	* i		1072022						
ANR	1072512	Symbol	* j		1072022						
ANR	1072513	Symbol	offcurve		1072022						
ANR	1072514	Symbol	self		1072022						
ANR	1072515	Symbol	* last_pole		1072022						
ANR	1072516	Symbol	* hint_range		1072022						
ANR	1072517	Function	t1_hinter__is_small_angle	1644:0:66291:67163							
ANR	1072518	FunctionDef	"t1_hinter__is_small_angle (t1_hinter * self , int pole_index0 , int pole_index1 , long tan_x , long tan_y , int alpha , int alpha_div , int * quality)"		1072517	0					
ANR	1072519	CompoundStatement		1646:0:66460:67163	1072517	0					
ANR	1072520	IdentifierDeclStatement	long gx = self -> pole [ pole_index1 ] . gx - self -> pole [ pole_index0 ] . gx ;	1646:3:66464:66529	1072517	0	True				
ANR	1072521	IdentifierDecl	gx = self -> pole [ pole_index1 ] . gx - self -> pole [ pole_index0 ] . gx		1072517	0					
ANR	1072522	IdentifierDeclType	long		1072517	0					
ANR	1072523	Identifier	gx		1072517	1					
ANR	1072524	AssignmentExpression	gx = self -> pole [ pole_index1 ] . gx - self -> pole [ pole_index0 ] . gx		1072517	2		=			
ANR	1072525	Identifier	gx		1072517	0					
ANR	1072526	AdditiveExpression	self -> pole [ pole_index1 ] . gx - self -> pole [ pole_index0 ] . gx		1072517	1		-			
ANR	1072527	MemberAccess	self -> pole [ pole_index1 ] . gx		1072517	0					
ANR	1072528	ArrayIndexing	self -> pole [ pole_index1 ]		1072517	0					
ANR	1072529	PtrMemberAccess	self -> pole		1072517	0					
ANR	1072530	Identifier	self		1072517	0					
ANR	1072531	Identifier	pole		1072517	1					
ANR	1072532	Identifier	pole_index1		1072517	1					
ANR	1072533	Identifier	gx		1072517	1					
ANR	1072534	MemberAccess	self -> pole [ pole_index0 ] . gx		1072517	1					
ANR	1072535	ArrayIndexing	self -> pole [ pole_index0 ]		1072517	0					
ANR	1072536	PtrMemberAccess	self -> pole		1072517	0					
ANR	1072537	Identifier	self		1072517	0					
ANR	1072538	Identifier	pole		1072517	1					
ANR	1072539	Identifier	pole_index0		1072517	1					
ANR	1072540	Identifier	gx		1072517	1					
ANR	1072541	IdentifierDeclStatement	long gy = self -> pole [ pole_index1 ] . gy - self -> pole [ pole_index0 ] . gy ;	1647:4:66535:66600	1072517	1	True				
ANR	1072542	IdentifierDecl	gy = self -> pole [ pole_index1 ] . gy - self -> pole [ pole_index0 ] . gy		1072517	0					
ANR	1072543	IdentifierDeclType	long		1072517	0					
ANR	1072544	Identifier	gy		1072517	1					
ANR	1072545	AssignmentExpression	gy = self -> pole [ pole_index1 ] . gy - self -> pole [ pole_index0 ] . gy		1072517	2		=			
ANR	1072546	Identifier	gy		1072517	0					
ANR	1072547	AdditiveExpression	self -> pole [ pole_index1 ] . gy - self -> pole [ pole_index0 ] . gy		1072517	1		-			
ANR	1072548	MemberAccess	self -> pole [ pole_index1 ] . gy		1072517	0					
ANR	1072549	ArrayIndexing	self -> pole [ pole_index1 ]		1072517	0					
ANR	1072550	PtrMemberAccess	self -> pole		1072517	0					
ANR	1072551	Identifier	self		1072517	0					
ANR	1072552	Identifier	pole		1072517	1					
ANR	1072553	Identifier	pole_index1		1072517	1					
ANR	1072554	Identifier	gy		1072517	1					
ANR	1072555	MemberAccess	self -> pole [ pole_index0 ] . gy		1072517	1					
ANR	1072556	ArrayIndexing	self -> pole [ pole_index0 ]		1072517	0					
ANR	1072557	PtrMemberAccess	self -> pole		1072517	0					
ANR	1072558	Identifier	self		1072517	0					
ANR	1072559	Identifier	pole		1072517	1					
ANR	1072560	Identifier	pole_index0		1072517	1					
ANR	1072561	Identifier	gy		1072517	1					
ANR	1072562	IdentifierDeclStatement	"long vp = mul_shift ( gx , tan_y , _fixed_shift ) - mul_shift ( gy , tan_x , _fixed_shift ) ;"	1648:4:66606:66687	1072517	2	True				
ANR	1072563	IdentifierDecl	"vp = mul_shift ( gx , tan_y , _fixed_shift ) - mul_shift ( gy , tan_x , _fixed_shift )"		1072517	0					
ANR	1072564	IdentifierDeclType	long		1072517	0					
ANR	1072565	Identifier	vp		1072517	1					
ANR	1072566	AssignmentExpression	"vp = mul_shift ( gx , tan_y , _fixed_shift ) - mul_shift ( gy , tan_x , _fixed_shift )"		1072517	2		=			
ANR	1072567	Identifier	vp		1072517	0					
ANR	1072568	AdditiveExpression	"mul_shift ( gx , tan_y , _fixed_shift ) - mul_shift ( gy , tan_x , _fixed_shift )"		1072517	1		-			
ANR	1072569	CallExpression	"mul_shift ( gx , tan_y , _fixed_shift )"		1072517	0					
ANR	1072570	Callee	mul_shift		1072517	0					
ANR	1072571	Identifier	mul_shift		1072517	0					
ANR	1072572	ArgumentList	gx		1072517	1					
ANR	1072573	Argument	gx		1072517	0					
ANR	1072574	Identifier	gx		1072517	0					
ANR	1072575	Argument	tan_y		1072517	1					
ANR	1072576	Identifier	tan_y		1072517	0					
ANR	1072577	Argument	_fixed_shift		1072517	2					
ANR	1072578	Identifier	_fixed_shift		1072517	0					
ANR	1072579	CallExpression	"mul_shift ( gy , tan_x , _fixed_shift )"		1072517	1					
ANR	1072580	Callee	mul_shift		1072517	0					
ANR	1072581	Identifier	mul_shift		1072517	0					
ANR	1072582	ArgumentList	gy		1072517	1					
ANR	1072583	Argument	gy		1072517	0					
ANR	1072584	Identifier	gy		1072517	0					
ANR	1072585	Argument	tan_x		1072517	1					
ANR	1072586	Identifier	tan_x		1072517	0					
ANR	1072587	Argument	_fixed_shift		1072517	2					
ANR	1072588	Identifier	_fixed_shift		1072517	0					
ANR	1072589	IdentifierDeclStatement	"long sp = mul_shift ( gx , tan_x , _fixed_shift ) + mul_shift ( gy , tan_y , _fixed_shift ) ;"	1649:4:66693:66774	1072517	3	True				
ANR	1072590	IdentifierDecl	"sp = mul_shift ( gx , tan_x , _fixed_shift ) + mul_shift ( gy , tan_y , _fixed_shift )"		1072517	0					
ANR	1072591	IdentifierDeclType	long		1072517	0					
ANR	1072592	Identifier	sp		1072517	1					
ANR	1072593	AssignmentExpression	"sp = mul_shift ( gx , tan_x , _fixed_shift ) + mul_shift ( gy , tan_y , _fixed_shift )"		1072517	2		=			
ANR	1072594	Identifier	sp		1072517	0					
ANR	1072595	AdditiveExpression	"mul_shift ( gx , tan_x , _fixed_shift ) + mul_shift ( gy , tan_y , _fixed_shift )"		1072517	1		+			
ANR	1072596	CallExpression	"mul_shift ( gx , tan_x , _fixed_shift )"		1072517	0					
ANR	1072597	Callee	mul_shift		1072517	0					
ANR	1072598	Identifier	mul_shift		1072517	0					
ANR	1072599	ArgumentList	gx		1072517	1					
ANR	1072600	Argument	gx		1072517	0					
ANR	1072601	Identifier	gx		1072517	0					
ANR	1072602	Argument	tan_x		1072517	1					
ANR	1072603	Identifier	tan_x		1072517	0					
ANR	1072604	Argument	_fixed_shift		1072517	2					
ANR	1072605	Identifier	_fixed_shift		1072517	0					
ANR	1072606	CallExpression	"mul_shift ( gy , tan_y , _fixed_shift )"		1072517	1					
ANR	1072607	Callee	mul_shift		1072517	0					
ANR	1072608	Identifier	mul_shift		1072517	0					
ANR	1072609	ArgumentList	gy		1072517	1					
ANR	1072610	Argument	gy		1072517	0					
ANR	1072611	Identifier	gy		1072517	0					
ANR	1072612	Argument	tan_y		1072517	1					
ANR	1072613	Identifier	tan_y		1072517	0					
ANR	1072614	Argument	_fixed_shift		1072517	2					
ANR	1072615	Identifier	_fixed_shift		1072517	0					
ANR	1072616	IdentifierDeclStatement	"long vp1 = any_abs ( vp ) , sp1 = any_abs ( sp ) ;"	1650:4:66780:66821	1072517	4	True				
ANR	1072617	IdentifierDecl	vp1 = any_abs ( vp )		1072517	0					
ANR	1072618	IdentifierDeclType	long		1072517	0					
ANR	1072619	Identifier	vp1		1072517	1					
ANR	1072620	AssignmentExpression	vp1 = any_abs ( vp )		1072517	2		=			
ANR	1072621	Identifier	vp1		1072517	0					
ANR	1072622	CallExpression	any_abs ( vp )		1072517	1					
ANR	1072623	Callee	any_abs		1072517	0					
ANR	1072624	Identifier	any_abs		1072517	0					
ANR	1072625	ArgumentList	vp		1072517	1					
ANR	1072626	Argument	vp		1072517	0					
ANR	1072627	Identifier	vp		1072517	0					
ANR	1072628	IdentifierDecl	sp1 = any_abs ( sp )		1072517	1					
ANR	1072629	IdentifierDeclType	long		1072517	0					
ANR	1072630	Identifier	sp1		1072517	1					
ANR	1072631	AssignmentExpression	sp1 = any_abs ( sp )		1072517	2		=			
ANR	1072632	Identifier	sp1		1072517	0					
ANR	1072633	CallExpression	any_abs ( sp )		1072517	1					
ANR	1072634	Callee	any_abs		1072517	0					
ANR	1072635	Identifier	any_abs		1072517	0					
ANR	1072636	ArgumentList	sp		1072517	1					
ANR	1072637	Argument	sp		1072517	0					
ANR	1072638	Identifier	sp		1072517	0					
ANR	1072639	IfStatement	if ( gx == 0 && gy == 0 )		1072517	5					
ANR	1072640	Condition	gx == 0 && gy == 0	1652:8:66832:66849	1072517	0	True				
ANR	1072641	AndExpression	gx == 0 && gy == 0		1072517	0		&&			
ANR	1072642	EqualityExpression	gx == 0		1072517	0		==			
ANR	1072643	Identifier	gx		1072517	0					
ANR	1072644	PrimaryExpression	0		1072517	1					
ANR	1072645	EqualityExpression	gy == 0		1072517	1		==			
ANR	1072646	Identifier	gy		1072517	0					
ANR	1072647	PrimaryExpression	0		1072517	1					
ANR	1072648	CompoundStatement		7:28:391:391	1072517	1					
ANR	1072649	ExpressionStatement	* quality = max_int	1653:8:66862:66880	1072517	0	True				
ANR	1072650	AssignmentExpression	* quality = max_int		1072517	0		=			
ANR	1072651	UnaryOperationExpression	* quality		1072517	0					
ANR	1072652	UnaryOperator	*		1072517	0					
ANR	1072653	Identifier	quality		1072517	1					
ANR	1072654	Identifier	max_int		1072517	1					
ANR	1072655	ReturnStatement	return false ;	1654:8:66890:66902	1072517	1	True				
ANR	1072656	Identifier	false		1072517	0					
ANR	1072657	IfStatement	if ( vp1 >= sp1 )		1072517	6					
ANR	1072658	Condition	vp1 >= sp1	1656:8:66918:66927	1072517	0	True				
ANR	1072659	RelationalExpression	vp1 >= sp1		1072517	0		>=			
ANR	1072660	Identifier	vp1		1072517	0					
ANR	1072661	Identifier	sp1		1072517	1					
ANR	1072662	CompoundStatement		11:20:469:469	1072517	1					
ANR	1072663	ExpressionStatement	* quality = max_int	1657:8:66940:66958	1072517	0	True				
ANR	1072664	AssignmentExpression	* quality = max_int		1072517	0		=			
ANR	1072665	UnaryOperationExpression	* quality		1072517	0					
ANR	1072666	UnaryOperator	*		1072517	0					
ANR	1072667	Identifier	quality		1072517	1					
ANR	1072668	Identifier	max_int		1072517	1					
ANR	1072669	ReturnStatement	return false ;	1658:8:66968:66980	1072517	1	True				
ANR	1072670	Identifier	false		1072517	0					
ANR	1072671	IfStatement	if ( vp1 / alpha_div > sp1 / alpha )		1072517	7					
ANR	1072672	Condition	vp1 / alpha_div > sp1 / alpha	1660:8:66996:67024	1072517	0	True				
ANR	1072673	RelationalExpression	vp1 / alpha_div > sp1 / alpha		1072517	0		>			
ANR	1072674	MultiplicativeExpression	vp1 / alpha_div		1072517	0		/			
ANR	1072675	Identifier	vp1		1072517	0					
ANR	1072676	Identifier	alpha_div		1072517	1					
ANR	1072677	MultiplicativeExpression	sp1 / alpha		1072517	1		/			
ANR	1072678	Identifier	sp1		1072517	0					
ANR	1072679	Identifier	alpha		1072517	1					
ANR	1072680	CompoundStatement		15:39:566:566	1072517	1					
ANR	1072681	ExpressionStatement	* quality = max_int	1661:8:67037:67055	1072517	0	True				
ANR	1072682	AssignmentExpression	* quality = max_int		1072517	0		=			
ANR	1072683	UnaryOperationExpression	* quality		1072517	0					
ANR	1072684	UnaryOperator	*		1072517	0					
ANR	1072685	Identifier	quality		1072517	1					
ANR	1072686	Identifier	max_int		1072517	1					
ANR	1072687	ReturnStatement	return false ;	1662:8:67065:67077	1072517	1	True				
ANR	1072688	Identifier	false		1072517	0					
ANR	1072689	ExpressionStatement	* quality = vp1 * 100 / sp1	1664:4:67089:67115	1072517	8	True				
ANR	1072690	AssignmentExpression	* quality = vp1 * 100 / sp1		1072517	0		=			
ANR	1072691	UnaryOperationExpression	* quality		1072517	0					
ANR	1072692	UnaryOperator	*		1072517	0					
ANR	1072693	Identifier	quality		1072517	1					
ANR	1072694	MultiplicativeExpression	vp1 * 100 / sp1		1072517	1		*			
ANR	1072695	Identifier	vp1		1072517	0					
ANR	1072696	MultiplicativeExpression	100 / sp1		1072517	1		/			
ANR	1072697	PrimaryExpression	100		1072517	0					
ANR	1072698	Identifier	sp1		1072517	1					
ANR	1072699	ReturnStatement	return true ;	1665:4:67150:67161	1072517	9	True				
ANR	1072700	Identifier	true		1072517	0					
ANR	1072701	ReturnType	static inline bool		1072517	1					
ANR	1072702	Identifier	t1_hinter__is_small_angle		1072517	2					
ANR	1072703	ParameterList	"t1_hinter * self , int pole_index0 , int pole_index1 , long tan_x , long tan_y , int alpha , int alpha_div , int * quality"		1072517	3					
ANR	1072704	Parameter	t1_hinter * self	1644:45:66336:66351	1072517	0	True				
ANR	1072705	ParameterType	t1_hinter *		1072517	0					
ANR	1072706	Identifier	self		1072517	1					
ANR	1072707	Parameter	int pole_index0	1644:63:66354:66368	1072517	1	True				
ANR	1072708	ParameterType	int		1072517	0					
ANR	1072709	Identifier	pole_index0		1072517	1					
ANR	1072710	Parameter	int pole_index1	1644:80:66371:66385	1072517	2	True				
ANR	1072711	ParameterType	int		1072517	0					
ANR	1072712	Identifier	pole_index1		1072517	1					
ANR	1072713	Parameter	long tan_x	1645:8:66396:66405	1072517	3	True				
ANR	1072714	ParameterType	long		1072517	0					
ANR	1072715	Identifier	tan_x		1072517	1					
ANR	1072716	Parameter	long tan_y	1645:20:66408:66417	1072517	4	True				
ANR	1072717	ParameterType	long		1072517	0					
ANR	1072718	Identifier	tan_y		1072517	1					
ANR	1072719	Parameter	int alpha	1645:32:66420:66428	1072517	5	True				
ANR	1072720	ParameterType	int		1072517	0					
ANR	1072721	Identifier	alpha		1072517	1					
ANR	1072722	Parameter	int alpha_div	1645:43:66431:66443	1072517	6	True				
ANR	1072723	ParameterType	int		1072517	0					
ANR	1072724	Identifier	alpha_div		1072517	1					
ANR	1072725	Parameter	int * quality	1645:58:66446:66457	1072517	7	True				
ANR	1072726	ParameterType	int *		1072517	0					
ANR	1072727	Identifier	quality		1072517	1					
ANR	1072728	CFGEntryNode	ENTRY		1072517		True				
ANR	1072729	CFGExitNode	EXIT		1072517		True				
ANR	1072730	Symbol	max_int		1072517						
ANR	1072731	Symbol	* self -> pole		1072517						
ANR	1072732	Symbol	mul_shift		1072517						
ANR	1072733	Symbol	tan_x		1072517						
ANR	1072734	Symbol	tan_y		1072517						
ANR	1072735	Symbol	alpha_div		1072517						
ANR	1072736	Symbol	alpha		1072517						
ANR	1072737	Symbol	any_abs		1072517						
ANR	1072738	Symbol	self -> pole		1072517						
ANR	1072739	Symbol	sp		1072517						
ANR	1072740	Symbol	_fixed_shift		1072517						
ANR	1072741	Symbol	* * self		1072517						
ANR	1072742	Symbol	* pole_index0		1072517						
ANR	1072743	Symbol	* self		1072517						
ANR	1072744	Symbol	false		1072517						
ANR	1072745	Symbol	quality		1072517						
ANR	1072746	Symbol	pole_index0		1072517						
ANR	1072747	Symbol	gx		1072517						
ANR	1072748	Symbol	gy		1072517						
ANR	1072749	Symbol	pole_index1		1072517						
ANR	1072750	Symbol	sp1		1072517						
ANR	1072751	Symbol	vp1		1072517						
ANR	1072752	Symbol	true		1072517						
ANR	1072753	Symbol	self		1072517						
ANR	1072754	Symbol	* pole_index1		1072517						
ANR	1072755	Symbol	* quality		1072517						
ANR	1072756	Symbol	self -> pole [ pole_index0 ] . gy		1072517						
ANR	1072757	Symbol	vp		1072517						
ANR	1072758	Symbol	self -> pole [ pole_index1 ] . gy		1072517						
ANR	1072759	Symbol	self -> pole [ pole_index0 ] . gx		1072517						
ANR	1072760	Symbol	self -> pole [ pole_index1 ] . gx		1072517						
ANR	1072761	Function	t1_hinter__next_contour_pole	1668:0:67166:67507							
ANR	1072762	FunctionDef	"t1_hinter__next_contour_pole (t1_hinter * self , int pole_index)"		1072761	0					
ANR	1072763	CompoundStatement		1669:0:67248:67507	1072761	0					
ANR	1072764	IdentifierDeclStatement	int contour_index = self -> pole [ pole_index ] . contour_index ;	1669:3:67252:67308	1072761	0	True				
ANR	1072765	IdentifierDecl	contour_index = self -> pole [ pole_index ] . contour_index		1072761	0					
ANR	1072766	IdentifierDeclType	int		1072761	0					
ANR	1072767	Identifier	contour_index		1072761	1					
ANR	1072768	AssignmentExpression	contour_index = self -> pole [ pole_index ] . contour_index		1072761	2		=			
ANR	1072769	Identifier	contour_index		1072761	0					
ANR	1072770	MemberAccess	self -> pole [ pole_index ] . contour_index		1072761	1					
ANR	1072771	ArrayIndexing	self -> pole [ pole_index ]		1072761	0					
ANR	1072772	PtrMemberAccess	self -> pole		1072761	0					
ANR	1072773	Identifier	self		1072761	0					
ANR	1072774	Identifier	pole		1072761	1					
ANR	1072775	Identifier	pole_index		1072761	1					
ANR	1072776	Identifier	contour_index		1072761	1					
ANR	1072777	IdentifierDeclStatement	int beg_contour_pole = self -> contour [ contour_index ] ;	1670:4:67314:67365	1072761	1	True				
ANR	1072778	IdentifierDecl	beg_contour_pole = self -> contour [ contour_index ]		1072761	0					
ANR	1072779	IdentifierDeclType	int		1072761	0					
ANR	1072780	Identifier	beg_contour_pole		1072761	1					
ANR	1072781	AssignmentExpression	beg_contour_pole = self -> contour [ contour_index ]		1072761	2		=			
ANR	1072782	Identifier	beg_contour_pole		1072761	0					
ANR	1072783	ArrayIndexing	self -> contour [ contour_index ]		1072761	1					
ANR	1072784	PtrMemberAccess	self -> contour		1072761	0					
ANR	1072785	Identifier	self		1072761	0					
ANR	1072786	Identifier	contour		1072761	1					
ANR	1072787	Identifier	contour_index		1072761	1					
ANR	1072788	IdentifierDeclStatement	int end_contour_pole = self -> contour [ contour_index + 1 ] - 2 ;	1671:4:67371:67430	1072761	2	True				
ANR	1072789	IdentifierDecl	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		1072761	0					
ANR	1072790	IdentifierDeclType	int		1072761	0					
ANR	1072791	Identifier	end_contour_pole		1072761	1					
ANR	1072792	AssignmentExpression	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		1072761	2		=			
ANR	1072793	Identifier	end_contour_pole		1072761	0					
ANR	1072794	AdditiveExpression	self -> contour [ contour_index + 1 ] - 2		1072761	1		-			
ANR	1072795	ArrayIndexing	self -> contour [ contour_index + 1 ]		1072761	0					
ANR	1072796	PtrMemberAccess	self -> contour		1072761	0					
ANR	1072797	Identifier	self		1072761	0					
ANR	1072798	Identifier	contour		1072761	1					
ANR	1072799	AdditiveExpression	contour_index + 1		1072761	1		+			
ANR	1072800	Identifier	contour_index		1072761	0					
ANR	1072801	PrimaryExpression	1		1072761	1					
ANR	1072802	PrimaryExpression	2		1072761	1					
ANR	1072803	ReturnStatement	"return ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole ) ;"	1673:4:67437:67505	1072761	3	True				
ANR	1072804	CallExpression	"ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole )"		1072761	0					
ANR	1072805	Callee	ranger_step_f		1072761	0					
ANR	1072806	Identifier	ranger_step_f		1072761	0					
ANR	1072807	ArgumentList	pole_index		1072761	1					
ANR	1072808	Argument	pole_index		1072761	0					
ANR	1072809	Identifier	pole_index		1072761	0					
ANR	1072810	Argument	beg_contour_pole		1072761	1					
ANR	1072811	Identifier	beg_contour_pole		1072761	0					
ANR	1072812	Argument	end_contour_pole		1072761	2					
ANR	1072813	Identifier	end_contour_pole		1072761	0					
ANR	1072814	ReturnType	static inline bool		1072761	1					
ANR	1072815	Identifier	t1_hinter__next_contour_pole		1072761	2					
ANR	1072816	ParameterList	"t1_hinter * self , int pole_index"		1072761	3					
ANR	1072817	Parameter	t1_hinter * self	1668:48:67214:67229	1072761	0	True				
ANR	1072818	ParameterType	t1_hinter *		1072761	0					
ANR	1072819	Identifier	self		1072761	1					
ANR	1072820	Parameter	int pole_index	1668:66:67232:67245	1072761	1	True				
ANR	1072821	ParameterType	int		1072761	0					
ANR	1072822	Identifier	pole_index		1072761	1					
ANR	1072823	CFGEntryNode	ENTRY		1072761		True				
ANR	1072824	CFGExitNode	EXIT		1072761		True				
ANR	1072825	Symbol	* self -> contour		1072761						
ANR	1072826	Symbol	ranger_step_f		1072761						
ANR	1072827	Symbol	self -> pole [ pole_index ] . contour_index		1072761						
ANR	1072828	Symbol	* self -> pole		1072761						
ANR	1072829	Symbol	* * self		1072761						
ANR	1072830	Symbol	* self		1072761						
ANR	1072831	Symbol	self -> contour		1072761						
ANR	1072832	Symbol	pole_index		1072761						
ANR	1072833	Symbol	* pole_index		1072761						
ANR	1072834	Symbol	end_contour_pole		1072761						
ANR	1072835	Symbol	self		1072761						
ANR	1072836	Symbol	self -> pole		1072761						
ANR	1072837	Symbol	contour_index		1072761						
ANR	1072838	Symbol	beg_contour_pole		1072761						
ANR	1072839	Symbol	* contour_index		1072761						
ANR	1072840	Function	t1_hinter__is_good_tangent	1676:0:67510:68418							
ANR	1072841	FunctionDef	"t1_hinter__is_good_tangent (t1_hinter * self , int pole_index , long tan_x , long tan_y , int * quality)"		1072840	0					
ANR	1072842	CompoundStatement		1677:0:67628:68418	1072840	0					
ANR	1072843	IdentifierDeclStatement	int contour_index = self -> pole [ pole_index ] . contour_index ;	1677:3:67632:67688	1072840	0	True				
ANR	1072844	IdentifierDecl	contour_index = self -> pole [ pole_index ] . contour_index		1072840	0					
ANR	1072845	IdentifierDeclType	int		1072840	0					
ANR	1072846	Identifier	contour_index		1072840	1					
ANR	1072847	AssignmentExpression	contour_index = self -> pole [ pole_index ] . contour_index		1072840	2		=			
ANR	1072848	Identifier	contour_index		1072840	0					
ANR	1072849	MemberAccess	self -> pole [ pole_index ] . contour_index		1072840	1					
ANR	1072850	ArrayIndexing	self -> pole [ pole_index ]		1072840	0					
ANR	1072851	PtrMemberAccess	self -> pole		1072840	0					
ANR	1072852	Identifier	self		1072840	0					
ANR	1072853	Identifier	pole		1072840	1					
ANR	1072854	Identifier	pole_index		1072840	1					
ANR	1072855	Identifier	contour_index		1072840	1					
ANR	1072856	IdentifierDeclStatement	int beg_contour_pole = self -> contour [ contour_index ] ;	1678:4:67694:67745	1072840	1	True				
ANR	1072857	IdentifierDecl	beg_contour_pole = self -> contour [ contour_index ]		1072840	0					
ANR	1072858	IdentifierDeclType	int		1072840	0					
ANR	1072859	Identifier	beg_contour_pole		1072840	1					
ANR	1072860	AssignmentExpression	beg_contour_pole = self -> contour [ contour_index ]		1072840	2		=			
ANR	1072861	Identifier	beg_contour_pole		1072840	0					
ANR	1072862	ArrayIndexing	self -> contour [ contour_index ]		1072840	1					
ANR	1072863	PtrMemberAccess	self -> contour		1072840	0					
ANR	1072864	Identifier	self		1072840	0					
ANR	1072865	Identifier	contour		1072840	1					
ANR	1072866	Identifier	contour_index		1072840	1					
ANR	1072867	IdentifierDeclStatement	"int end_contour_pole = self -> contour [ contour_index + 1 ] - 2 , prev , next ;"	1679:4:67751:67822	1072840	2	True				
ANR	1072868	IdentifierDecl	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		1072840	0					
ANR	1072869	IdentifierDeclType	int		1072840	0					
ANR	1072870	Identifier	end_contour_pole		1072840	1					
ANR	1072871	AssignmentExpression	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		1072840	2		=			
ANR	1072872	Identifier	end_contour_pole		1072840	0					
ANR	1072873	AdditiveExpression	self -> contour [ contour_index + 1 ] - 2		1072840	1		-			
ANR	1072874	ArrayIndexing	self -> contour [ contour_index + 1 ]		1072840	0					
ANR	1072875	PtrMemberAccess	self -> contour		1072840	0					
ANR	1072876	Identifier	self		1072840	0					
ANR	1072877	Identifier	contour		1072840	1					
ANR	1072878	AdditiveExpression	contour_index + 1		1072840	1		+			
ANR	1072879	Identifier	contour_index		1072840	0					
ANR	1072880	PrimaryExpression	1		1072840	1					
ANR	1072881	PrimaryExpression	2		1072840	1					
ANR	1072882	IdentifierDecl	prev		1072840	1					
ANR	1072883	IdentifierDeclType	int		1072840	0					
ANR	1072884	Identifier	prev		1072840	1					
ANR	1072885	IdentifierDecl	next		1072840	2					
ANR	1072886	IdentifierDeclType	int		1072840	0					
ANR	1072887	Identifier	next		1072840	1					
ANR	1072888	IdentifierDeclStatement	"int const alpha = 9 , alpha_div = 10 ;"	1680:4:67828:67863	1072840	3	True				
ANR	1072889	IdentifierDecl	alpha = 9		1072840	0					
ANR	1072890	IdentifierDeclType	int const		1072840	0					
ANR	1072891	Identifier	alpha		1072840	1					
ANR	1072892	AssignmentExpression	alpha = 9		1072840	2		=			
ANR	1072893	Identifier	alpha		1072840	0					
ANR	1072894	PrimaryExpression	9		1072840	1					
ANR	1072895	IdentifierDecl	alpha_div = 10		1072840	1					
ANR	1072896	IdentifierDeclType	int const		1072840	0					
ANR	1072897	Identifier	alpha_div		1072840	1					
ANR	1072898	AssignmentExpression	alpha_div = 10		1072840	2		=			
ANR	1072899	Identifier	alpha_div		1072840	0					
ANR	1072900	PrimaryExpression	10		1072840	1					
ANR	1072901	IdentifierDeclStatement	"int quality0 , quality1 ;"	1681:4:67869:67891	1072840	4	True				
ANR	1072902	IdentifierDecl	quality0		1072840	0					
ANR	1072903	IdentifierDeclType	int		1072840	0					
ANR	1072904	Identifier	quality0		1072840	1					
ANR	1072905	IdentifierDecl	quality1		1072840	1					
ANR	1072906	IdentifierDeclType	int		1072840	0					
ANR	1072907	Identifier	quality1		1072840	1					
ANR	1072908	IdentifierDeclStatement	"bool good0 , good1 ;"	1682:4:67897:67914	1072840	5	True				
ANR	1072909	IdentifierDecl	good0		1072840	0					
ANR	1072910	IdentifierDeclType	bool		1072840	0					
ANR	1072911	Identifier	good0		1072840	1					
ANR	1072912	IdentifierDecl	good1		1072840	1					
ANR	1072913	IdentifierDeclType	bool		1072840	0					
ANR	1072914	Identifier	good1		1072840	1					
ANR	1072915	ExpressionStatement	"prev = ranger_step_b ( pole_index , beg_contour_pole , end_contour_pole )"	1684:4:67921:67989	1072840	6	True				
ANR	1072916	AssignmentExpression	"prev = ranger_step_b ( pole_index , beg_contour_pole , end_contour_pole )"		1072840	0		=			
ANR	1072917	Identifier	prev		1072840	0					
ANR	1072918	CallExpression	"ranger_step_b ( pole_index , beg_contour_pole , end_contour_pole )"		1072840	1					
ANR	1072919	Callee	ranger_step_b		1072840	0					
ANR	1072920	Identifier	ranger_step_b		1072840	0					
ANR	1072921	ArgumentList	pole_index		1072840	1					
ANR	1072922	Argument	pole_index		1072840	0					
ANR	1072923	Identifier	pole_index		1072840	0					
ANR	1072924	Argument	beg_contour_pole		1072840	1					
ANR	1072925	Identifier	beg_contour_pole		1072840	0					
ANR	1072926	Argument	end_contour_pole		1072840	2					
ANR	1072927	Identifier	end_contour_pole		1072840	0					
ANR	1072928	ExpressionStatement	"good0 = t1_hinter__is_small_angle ( self , prev , pole_index , tan_x , tan_y , alpha , alpha_div , & quality0 )"	1685:4:67995:68095	1072840	7	True				
ANR	1072929	AssignmentExpression	"good0 = t1_hinter__is_small_angle ( self , prev , pole_index , tan_x , tan_y , alpha , alpha_div , & quality0 )"		1072840	0		=			
ANR	1072930	Identifier	good0		1072840	0					
ANR	1072931	CallExpression	"t1_hinter__is_small_angle ( self , prev , pole_index , tan_x , tan_y , alpha , alpha_div , & quality0 )"		1072840	1					
ANR	1072932	Callee	t1_hinter__is_small_angle		1072840	0					
ANR	1072933	Identifier	t1_hinter__is_small_angle		1072840	0					
ANR	1072934	ArgumentList	self		1072840	1					
ANR	1072935	Argument	self		1072840	0					
ANR	1072936	Identifier	self		1072840	0					
ANR	1072937	Argument	prev		1072840	1					
ANR	1072938	Identifier	prev		1072840	0					
ANR	1072939	Argument	pole_index		1072840	2					
ANR	1072940	Identifier	pole_index		1072840	0					
ANR	1072941	Argument	tan_x		1072840	3					
ANR	1072942	Identifier	tan_x		1072840	0					
ANR	1072943	Argument	tan_y		1072840	4					
ANR	1072944	Identifier	tan_y		1072840	0					
ANR	1072945	Argument	alpha		1072840	5					
ANR	1072946	Identifier	alpha		1072840	0					
ANR	1072947	Argument	alpha_div		1072840	6					
ANR	1072948	Identifier	alpha_div		1072840	0					
ANR	1072949	Argument	& quality0		1072840	7					
ANR	1072950	UnaryOperationExpression	& quality0		1072840	0					
ANR	1072951	UnaryOperator	&		1072840	0					
ANR	1072952	Identifier	quality0		1072840	1					
ANR	1072953	IfStatement	if ( quality0 == 0 )		1072840	8					
ANR	1072954	Condition	quality0 == 0	1686:8:68105:68117	1072840	0	True				
ANR	1072955	EqualityExpression	quality0 == 0		1072840	0		==			
ANR	1072956	Identifier	quality0		1072840	0					
ANR	1072957	PrimaryExpression	0		1072840	1					
ANR	1072958	CompoundStatement		10:23:491:491	1072840	1					
ANR	1072959	ExpressionStatement	* quality = 0	1687:8:68130:68142	1072840	0	True				
ANR	1072960	AssignmentExpression	* quality = 0		1072840	0		=			
ANR	1072961	UnaryOperationExpression	* quality		1072840	0					
ANR	1072962	UnaryOperator	*		1072840	0					
ANR	1072963	Identifier	quality		1072840	1					
ANR	1072964	PrimaryExpression	0		1072840	1					
ANR	1072965	ReturnStatement	return true ;	1688:8:68152:68163	1072840	1	True				
ANR	1072966	Identifier	true		1072840	0					
ANR	1072967	ExpressionStatement	"next = ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole )"	1690:4:68175:68243	1072840	9	True				
ANR	1072968	AssignmentExpression	"next = ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole )"		1072840	0		=			
ANR	1072969	Identifier	next		1072840	0					
ANR	1072970	CallExpression	"ranger_step_f ( pole_index , beg_contour_pole , end_contour_pole )"		1072840	1					
ANR	1072971	Callee	ranger_step_f		1072840	0					
ANR	1072972	Identifier	ranger_step_f		1072840	0					
ANR	1072973	ArgumentList	pole_index		1072840	1					
ANR	1072974	Argument	pole_index		1072840	0					
ANR	1072975	Identifier	pole_index		1072840	0					
ANR	1072976	Argument	beg_contour_pole		1072840	1					
ANR	1072977	Identifier	beg_contour_pole		1072840	0					
ANR	1072978	Argument	end_contour_pole		1072840	2					
ANR	1072979	Identifier	end_contour_pole		1072840	0					
ANR	1072980	ExpressionStatement	"good1 = t1_hinter__is_small_angle ( self , next , pole_index , tan_x , tan_y , alpha , alpha_div , & quality1 )"	1691:4:68249:68349	1072840	10	True				
ANR	1072981	AssignmentExpression	"good1 = t1_hinter__is_small_angle ( self , next , pole_index , tan_x , tan_y , alpha , alpha_div , & quality1 )"		1072840	0		=			
ANR	1072982	Identifier	good1		1072840	0					
ANR	1072983	CallExpression	"t1_hinter__is_small_angle ( self , next , pole_index , tan_x , tan_y , alpha , alpha_div , & quality1 )"		1072840	1					
ANR	1072984	Callee	t1_hinter__is_small_angle		1072840	0					
ANR	1072985	Identifier	t1_hinter__is_small_angle		1072840	0					
ANR	1072986	ArgumentList	self		1072840	1					
ANR	1072987	Argument	self		1072840	0					
ANR	1072988	Identifier	self		1072840	0					
ANR	1072989	Argument	next		1072840	1					
ANR	1072990	Identifier	next		1072840	0					
ANR	1072991	Argument	pole_index		1072840	2					
ANR	1072992	Identifier	pole_index		1072840	0					
ANR	1072993	Argument	tan_x		1072840	3					
ANR	1072994	Identifier	tan_x		1072840	0					
ANR	1072995	Argument	tan_y		1072840	4					
ANR	1072996	Identifier	tan_y		1072840	0					
ANR	1072997	Argument	alpha		1072840	5					
ANR	1072998	Identifier	alpha		1072840	0					
ANR	1072999	Argument	alpha_div		1072840	6					
ANR	1073000	Identifier	alpha_div		1072840	0					
ANR	1073001	Argument	& quality1		1072840	7					
ANR	1073002	UnaryOperationExpression	& quality1		1072840	0					
ANR	1073003	UnaryOperator	&		1072840	0					
ANR	1073004	Identifier	quality1		1072840	1					
ANR	1073005	ExpressionStatement	"* quality = min ( quality0 , quality1 )"	1692:4:68355:68389	1072840	11	True				
ANR	1073006	AssignmentExpression	"* quality = min ( quality0 , quality1 )"		1072840	0		=			
ANR	1073007	UnaryOperationExpression	* quality		1072840	0					
ANR	1073008	UnaryOperator	*		1072840	0					
ANR	1073009	Identifier	quality		1072840	1					
ANR	1073010	CallExpression	"min ( quality0 , quality1 )"		1072840	1					
ANR	1073011	Callee	min		1072840	0					
ANR	1073012	Identifier	min		1072840	0					
ANR	1073013	ArgumentList	quality0		1072840	1					
ANR	1073014	Argument	quality0		1072840	0					
ANR	1073015	Identifier	quality0		1072840	0					
ANR	1073016	Argument	quality1		1072840	1					
ANR	1073017	Identifier	quality1		1072840	0					
ANR	1073018	ReturnStatement	return good0 || good1 ;	1693:4:68395:68416	1072840	12	True				
ANR	1073019	OrExpression	good0 || good1		1072840	0		||			
ANR	1073020	Identifier	good0		1072840	0					
ANR	1073021	Identifier	good1		1072840	1					
ANR	1073022	ReturnType	static inline bool		1072840	1					
ANR	1073023	Identifier	t1_hinter__is_good_tangent		1072840	2					
ANR	1073024	ParameterList	"t1_hinter * self , int pole_index , long tan_x , long tan_y , int * quality"		1072840	3					
ANR	1073025	Parameter	t1_hinter * self	1676:46:67556:67571	1072840	0	True				
ANR	1073026	ParameterType	t1_hinter *		1072840	0					
ANR	1073027	Identifier	self		1072840	1					
ANR	1073028	Parameter	int pole_index	1676:64:67574:67587	1072840	1	True				
ANR	1073029	ParameterType	int		1072840	0					
ANR	1073030	Identifier	pole_index		1072840	1					
ANR	1073031	Parameter	long tan_x	1676:80:67590:67599	1072840	2	True				
ANR	1073032	ParameterType	long		1072840	0					
ANR	1073033	Identifier	tan_x		1072840	1					
ANR	1073034	Parameter	long tan_y	1676:92:67602:67611	1072840	3	True				
ANR	1073035	ParameterType	long		1072840	0					
ANR	1073036	Identifier	tan_y		1072840	1					
ANR	1073037	Parameter	int * quality	1676:104:67614:67625	1072840	4	True				
ANR	1073038	ParameterType	int *		1072840	0					
ANR	1073039	Identifier	quality		1072840	1					
ANR	1073040	CFGEntryNode	ENTRY		1072840		True				
ANR	1073041	CFGExitNode	EXIT		1072840		True				
ANR	1073042	Symbol	next		1072840						
ANR	1073043	Symbol	t1_hinter__is_small_angle		1072840						
ANR	1073044	Symbol	self -> pole [ pole_index ] . contour_index		1072840						
ANR	1073045	Symbol	* self -> pole		1072840						
ANR	1073046	Symbol	prev		1072840						
ANR	1073047	Symbol	tan_x		1072840						
ANR	1073048	Symbol	tan_y		1072840						
ANR	1073049	Symbol	good1		1072840						
ANR	1073050	Symbol	good0		1072840						
ANR	1073051	Symbol	alpha_div		1072840						
ANR	1073052	Symbol	min		1072840						
ANR	1073053	Symbol	quality1		1072840						
ANR	1073054	Symbol	quality0		1072840						
ANR	1073055	Symbol	alpha		1072840						
ANR	1073056	Symbol	self -> pole		1072840						
ANR	1073057	Symbol	contour_index		1072840						
ANR	1073058	Symbol	beg_contour_pole		1072840						
ANR	1073059	Symbol	* contour_index		1072840						
ANR	1073060	Symbol	* self -> contour		1072840						
ANR	1073061	Symbol	ranger_step_f		1072840						
ANR	1073062	Symbol	* * self		1072840						
ANR	1073063	Symbol	* self		1072840						
ANR	1073064	Symbol	ranger_step_b		1072840						
ANR	1073065	Symbol	quality		1072840						
ANR	1073066	Symbol	& quality1		1072840						
ANR	1073067	Symbol	self -> contour		1072840						
ANR	1073068	Symbol	pole_index		1072840						
ANR	1073069	Symbol	* pole_index		1072840						
ANR	1073070	Symbol	end_contour_pole		1072840						
ANR	1073071	Symbol	& quality0		1072840						
ANR	1073072	Symbol	true		1072840						
ANR	1073073	Symbol	self		1072840						
ANR	1073074	Symbol	* quality		1072840						
ANR	1073075	Function	t1_hinter__compute_type1_stem_ranges	1696:0:68421:69165							
ANR	1073076	FunctionDef	t1_hinter__compute_type1_stem_ranges (t1_hinter * self)		1073075	0					
ANR	1073077	CompoundStatement		1697:0:68488:69165	1073075	0					
ANR	1073078	IdentifierDeclStatement	int j ;	1697:3:68492:68497	1073075	0	True				
ANR	1073079	IdentifierDecl	j		1073075	0					
ANR	1073080	IdentifierDeclType	int		1073075	0					
ANR	1073081	Identifier	j		1073075	1					
ANR	1073082	IdentifierDeclStatement	int end_range_pole = self -> pole_count - 3 ;	1698:4:68503:68544	1073075	1	True				
ANR	1073083	IdentifierDecl	end_range_pole = self -> pole_count - 3		1073075	0					
ANR	1073084	IdentifierDeclType	int		1073075	0					
ANR	1073085	Identifier	end_range_pole		1073075	1					
ANR	1073086	AssignmentExpression	end_range_pole = self -> pole_count - 3		1073075	2		=			
ANR	1073087	Identifier	end_range_pole		1073075	0					
ANR	1073088	AdditiveExpression	self -> pole_count - 3		1073075	1		-			
ANR	1073089	PtrMemberAccess	self -> pole_count		1073075	0					
ANR	1073090	Identifier	self		1073075	0					
ANR	1073091	Identifier	pole_count		1073075	1					
ANR	1073092	PrimaryExpression	3		1073075	1					
ANR	1073093	IdentifierDeclStatement	int primary_hint_count = self -> primary_hint_count ;	1699:4:68550:68599	1073075	2	True				
ANR	1073094	IdentifierDecl	primary_hint_count = self -> primary_hint_count		1073075	0					
ANR	1073095	IdentifierDeclType	int		1073075	0					
ANR	1073096	Identifier	primary_hint_count		1073075	1					
ANR	1073097	AssignmentExpression	primary_hint_count = self -> primary_hint_count		1073075	2		=			
ANR	1073098	Identifier	primary_hint_count		1073075	0					
ANR	1073099	PtrMemberAccess	self -> primary_hint_count		1073075	1					
ANR	1073100	Identifier	self		1073075	0					
ANR	1073101	Identifier	primary_hint_count		1073075	1					
ANR	1073102	IfStatement	if ( self -> hint_count == 0 )		1073075	3					
ANR	1073103	Condition	self -> hint_count == 0	1701:8:68610:68630	1073075	0	True				
ANR	1073104	EqualityExpression	self -> hint_count == 0		1073075	0		==			
ANR	1073105	PtrMemberAccess	self -> hint_count		1073075	0					
ANR	1073106	Identifier	self		1073075	0					
ANR	1073107	Identifier	hint_count		1073075	1					
ANR	1073108	PrimaryExpression	0		1073075	1					
ANR	1073109	ReturnStatement	return ;	1702:8:68641:68647	1073075	1	True				
ANR	1073110	IfStatement	if ( primary_hint_count == - 1 )		1073075	4					
ANR	1073111	Condition	primary_hint_count == - 1	1703:8:68657:68680	1073075	0	True				
ANR	1073112	EqualityExpression	primary_hint_count == - 1		1073075	0		==			
ANR	1073113	Identifier	primary_hint_count		1073075	0					
ANR	1073114	UnaryOperationExpression	- 1		1073075	1					
ANR	1073115	UnaryOperator	-		1073075	0					
ANR	1073116	PrimaryExpression	1		1073075	1					
ANR	1073117	ExpressionStatement	primary_hint_count = self -> hint_range_count	1704:8:68691:68734	1073075	1	True				
ANR	1073118	AssignmentExpression	primary_hint_count = self -> hint_range_count		1073075	0		=			
ANR	1073119	Identifier	primary_hint_count		1073075	0					
ANR	1073120	PtrMemberAccess	self -> hint_range_count		1073075	1					
ANR	1073121	Identifier	self		1073075	0					
ANR	1073122	Identifier	hint_range_count		1073075	1					
ANR	1073123	ForStatement	for ( j = 0 ; j < primary_hint_count ; j ++ )		1073075	5					
ANR	1073124	ForInit	j = 0 ;	1706:8:68804:68809	1073075	0	True				
ANR	1073125	AssignmentExpression	j = 0		1073075	0		=			
ANR	1073126	Identifier	j		1073075	0					
ANR	1073127	PrimaryExpression	0		1073075	1					
ANR	1073128	Condition	j < primary_hint_count	1706:15:68811:68832	1073075	1	True				
ANR	1073129	RelationalExpression	j < primary_hint_count		1073075	0		<			
ANR	1073130	Identifier	j		1073075	0					
ANR	1073131	Identifier	primary_hint_count		1073075	1					
ANR	1073132	PostIncDecOperationExpression	j ++	1706:39:68835:68837	1073075	2	True				
ANR	1073133	Identifier	j		1073075	0					
ANR	1073134	IncDec	++		1073075	1					
ANR	1073135	CompoundStatement		10:49:356:356	1073075	3					
ANR	1073136	ExpressionStatement	self -> hint_range [ j ] . beg_pole = 0	1707:8:68855:68887	1073075	0	True				
ANR	1073137	AssignmentExpression	self -> hint_range [ j ] . beg_pole = 0		1073075	0		=			
ANR	1073138	MemberAccess	self -> hint_range [ j ] . beg_pole		1073075	0					
ANR	1073139	ArrayIndexing	self -> hint_range [ j ]		1073075	0					
ANR	1073140	PtrMemberAccess	self -> hint_range		1073075	0					
ANR	1073141	Identifier	self		1073075	0					
ANR	1073142	Identifier	hint_range		1073075	1					
ANR	1073143	Identifier	j		1073075	1					
ANR	1073144	Identifier	beg_pole		1073075	1					
ANR	1073145	PrimaryExpression	0		1073075	1					
ANR	1073146	ExpressionStatement	self -> hint_range [ j ] . end_pole = end_range_pole	1708:8:68897:68942	1073075	1	True				
ANR	1073147	AssignmentExpression	self -> hint_range [ j ] . end_pole = end_range_pole		1073075	0		=			
ANR	1073148	MemberAccess	self -> hint_range [ j ] . end_pole		1073075	0					
ANR	1073149	ArrayIndexing	self -> hint_range [ j ]		1073075	0					
ANR	1073150	PtrMemberAccess	self -> hint_range		1073075	0					
ANR	1073151	Identifier	self		1073075	0					
ANR	1073152	Identifier	hint_range		1073075	1					
ANR	1073153	Identifier	j		1073075	1					
ANR	1073154	Identifier	end_pole		1073075	1					
ANR	1073155	Identifier	end_range_pole		1073075	1					
ANR	1073156	ReturnType	static void		1073075	1					
ANR	1073157	Identifier	t1_hinter__compute_type1_stem_ranges		1073075	2					
ANR	1073158	ParameterList	t1_hinter * self		1073075	3					
ANR	1073159	Parameter	t1_hinter * self	1696:49:68470:68485	1073075	0	True				
ANR	1073160	ParameterType	t1_hinter *		1073075	0					
ANR	1073161	Identifier	self		1073075	1					
ANR	1073162	CFGEntryNode	ENTRY		1073075		True				
ANR	1073163	CFGExitNode	EXIT		1073075		True				
ANR	1073164	Symbol	end_range_pole		1073075						
ANR	1073165	Symbol	self -> pole_count		1073075						
ANR	1073166	Symbol	* * self		1073075						
ANR	1073167	Symbol	* self		1073075						
ANR	1073168	Symbol	j		1073075						
ANR	1073169	Symbol	self -> hint_range_count		1073075						
ANR	1073170	Symbol	self -> hint_range		1073075						
ANR	1073171	Symbol	self -> primary_hint_count		1073075						
ANR	1073172	Symbol	* self -> hint_range		1073075						
ANR	1073173	Symbol	self -> hint_count		1073075						
ANR	1073174	Symbol	* j		1073075						
ANR	1073175	Symbol	self -> hint_range [ j ] . end_pole		1073075						
ANR	1073176	Symbol	self -> hint_range [ j ] . beg_pole		1073075						
ANR	1073177	Symbol	self		1073075						
ANR	1073178	Symbol	primary_hint_count		1073075						
ANR	1073179	Function	t1_hinter__compute_type2_stem_ranges	1716:0:69168:69409							
ANR	1073180	FunctionDef	t1_hinter__compute_type2_stem_ranges (t1_hinter * self)		1073179	0					
ANR	1073181	CompoundStatement		1717:0:69235:69409	1073179	0					
ANR	1073182	IdentifierDeclStatement	int i ;	1717:3:69239:69244	1073179	0	True				
ANR	1073183	IdentifierDecl	i		1073179	0					
ANR	1073184	IdentifierDeclType	int		1073179	0					
ANR	1073185	Identifier	i		1073179	1					
ANR	1073186	ForStatement	for ( i = 0 ; i < self -> hint_range_count ; i ++ )		1073179	1					
ANR	1073187	ForInit	i = 0 ;	1719:9:69256:69261	1073179	0	True				
ANR	1073188	AssignmentExpression	i = 0		1073179	0		=			
ANR	1073189	Identifier	i		1073179	0					
ANR	1073190	PrimaryExpression	0		1073179	1					
ANR	1073191	Condition	i < self -> hint_range_count	1719:16:69263:69288	1073179	1	True				
ANR	1073192	RelationalExpression	i < self -> hint_range_count		1073179	0		<			
ANR	1073193	Identifier	i		1073179	0					
ANR	1073194	PtrMemberAccess	self -> hint_range_count		1073179	1					
ANR	1073195	Identifier	self		1073179	0					
ANR	1073196	Identifier	hint_range_count		1073179	1					
ANR	1073197	PostIncDecOperationExpression	i ++	1719:44:69291:69293	1073179	2	True				
ANR	1073198	Identifier	i		1073179	0					
ANR	1073199	IncDec	++		1073179	1					
ANR	1073200	IfStatement	if ( self -> hint_range [ i ] . end_pole == - 1 )		1073179	3					
ANR	1073201	Condition	self -> hint_range [ i ] . end_pole == - 1	1720:12:69308:69341	1073179	0	True				
ANR	1073202	EqualityExpression	self -> hint_range [ i ] . end_pole == - 1		1073179	0		==			
ANR	1073203	MemberAccess	self -> hint_range [ i ] . end_pole		1073179	0					
ANR	1073204	ArrayIndexing	self -> hint_range [ i ]		1073179	0					
ANR	1073205	PtrMemberAccess	self -> hint_range		1073179	0					
ANR	1073206	Identifier	self		1073179	0					
ANR	1073207	Identifier	hint_range		1073179	1					
ANR	1073208	Identifier	i		1073179	1					
ANR	1073209	Identifier	end_pole		1073179	1					
ANR	1073210	UnaryOperationExpression	- 1		1073179	1					
ANR	1073211	UnaryOperator	-		1073179	0					
ANR	1073212	PrimaryExpression	1		1073179	1					
ANR	1073213	ExpressionStatement	self -> hint_range [ i ] . end_pole = self -> pole_count - 2	1721:12:69356:69407	1073179	1	True				
ANR	1073214	AssignmentExpression	self -> hint_range [ i ] . end_pole = self -> pole_count - 2		1073179	0		=			
ANR	1073215	MemberAccess	self -> hint_range [ i ] . end_pole		1073179	0					
ANR	1073216	ArrayIndexing	self -> hint_range [ i ]		1073179	0					
ANR	1073217	PtrMemberAccess	self -> hint_range		1073179	0					
ANR	1073218	Identifier	self		1073179	0					
ANR	1073219	Identifier	hint_range		1073179	1					
ANR	1073220	Identifier	i		1073179	1					
ANR	1073221	Identifier	end_pole		1073179	1					
ANR	1073222	AdditiveExpression	self -> pole_count - 2		1073179	1		-			
ANR	1073223	PtrMemberAccess	self -> pole_count		1073179	0					
ANR	1073224	Identifier	self		1073179	0					
ANR	1073225	Identifier	pole_count		1073179	1					
ANR	1073226	PrimaryExpression	2		1073179	1					
ANR	1073227	ReturnType	static void		1073179	1					
ANR	1073228	Identifier	t1_hinter__compute_type2_stem_ranges		1073179	2					
ANR	1073229	ParameterList	t1_hinter * self		1073179	3					
ANR	1073230	Parameter	t1_hinter * self	1716:49:69217:69232	1073179	0	True				
ANR	1073231	ParameterType	t1_hinter *		1073179	0					
ANR	1073232	Identifier	self		1073179	1					
ANR	1073233	CFGEntryNode	ENTRY		1073179		True				
ANR	1073234	CFGExitNode	EXIT		1073179		True				
ANR	1073235	Symbol	* self -> hint_range		1073179						
ANR	1073236	Symbol	* i		1073179						
ANR	1073237	Symbol	* * self		1073179						
ANR	1073238	Symbol	self -> pole_count		1073179						
ANR	1073239	Symbol	* self		1073179						
ANR	1073240	Symbol	self -> hint_range [ i ] . end_pole		1073179						
ANR	1073241	Symbol	self		1073179						
ANR	1073242	Symbol	i		1073179						
ANR	1073243	Symbol	self -> hint_range_count		1073179						
ANR	1073244	Symbol	self -> hint_range		1073179						
ANR	1073245	Function	t1_hinter__is_stem_boundary_near	1724:0:69412:69701							
ANR	1073246	FunctionDef	"t1_hinter__is_stem_boundary_near (t1_hinter * self , const t1_hint * hint , t1_glyph_space_coord g , int boundary)"		1073245	0					
ANR	1073247	CompoundStatement		1726:0:69550:69701	1073245	0					
ANR	1073248	IdentifierDeclStatement	t1_glyph_space_coord const fuzz = self -> blue_fuzz ;	1727:4:69556:69605	1073245	0	True				
ANR	1073249	IdentifierDecl	fuzz = self -> blue_fuzz		1073245	0					
ANR	1073250	IdentifierDeclType	t1_glyph_space_coord const		1073245	0					
ANR	1073251	Identifier	fuzz		1073245	1					
ANR	1073252	AssignmentExpression	fuzz = self -> blue_fuzz		1073245	2		=			
ANR	1073253	Identifier	fuzz		1073245	0					
ANR	1073254	PtrMemberAccess	self -> blue_fuzz		1073245	1					
ANR	1073255	Identifier	self		1073245	0					
ANR	1073256	Identifier	blue_fuzz		1073245	1					
ANR	1073257	ReturnStatement	return any_abs ( g - ( boundary ? hint -> g1 : hint -> g0 ) ) <= fuzz ;	1729:4:69639:69699	1073245	1	True				
ANR	1073258	RelationalExpression	any_abs ( g - ( boundary ? hint -> g1 : hint -> g0 ) ) <= fuzz		1073245	0		<=			
ANR	1073259	CallExpression	any_abs ( g - ( boundary ? hint -> g1 : hint -> g0 ) )		1073245	0					
ANR	1073260	Callee	any_abs		1073245	0					
ANR	1073261	Identifier	any_abs		1073245	0					
ANR	1073262	ArgumentList	g - ( boundary ? hint -> g1 : hint -> g0 )		1073245	1					
ANR	1073263	Argument	g - ( boundary ? hint -> g1 : hint -> g0 )		1073245	0					
ANR	1073264	AdditiveExpression	g - ( boundary ? hint -> g1 : hint -> g0 )		1073245	0		-			
ANR	1073265	Identifier	g		1073245	0					
ANR	1073266	ConditionalExpression	boundary ? hint -> g1 : hint -> g0		1073245	1					
ANR	1073267	Condition	boundary		1073245	0					
ANR	1073268	Identifier	boundary		1073245	0					
ANR	1073269	PtrMemberAccess	hint -> g1		1073245	1					
ANR	1073270	Identifier	hint		1073245	0					
ANR	1073271	Identifier	g1		1073245	1					
ANR	1073272	PtrMemberAccess	hint -> g0		1073245	2					
ANR	1073273	Identifier	hint		1073245	0					
ANR	1073274	Identifier	g0		1073245	1					
ANR	1073275	Identifier	fuzz		1073245	1					
ANR	1073276	ReturnType	static bool		1073245	1					
ANR	1073277	Identifier	t1_hinter__is_stem_boundary_near		1073245	2					
ANR	1073278	ParameterList	"t1_hinter * self , const t1_hint * hint , t1_glyph_space_coord g , int boundary"		1073245	3					
ANR	1073279	Parameter	t1_hinter * self	1724:45:69457:69472	1073245	0	True				
ANR	1073280	ParameterType	t1_hinter *		1073245	0					
ANR	1073281	Identifier	self		1073245	1					
ANR	1073282	Parameter	const t1_hint * hint	1724:63:69475:69493	1073245	1	True				
ANR	1073283	ParameterType	const t1_hint *		1073245	0					
ANR	1073284	Identifier	hint		1073245	1					
ANR	1073285	Parameter	t1_glyph_space_coord g	1725:16:69512:69533	1073245	2	True				
ANR	1073286	ParameterType	t1_glyph_space_coord		1073245	0					
ANR	1073287	Identifier	g		1073245	1					
ANR	1073288	Parameter	int boundary	1725:40:69536:69547	1073245	3	True				
ANR	1073289	ParameterType	int		1073245	0					
ANR	1073290	Identifier	boundary		1073245	1					
ANR	1073291	CFGEntryNode	ENTRY		1073245		True				
ANR	1073292	CFGExitNode	EXIT		1073245		True				
ANR	1073293	Symbol	boundary		1073245						
ANR	1073294	Symbol	hint -> g0		1073245						
ANR	1073295	Symbol	* hint		1073245						
ANR	1073296	Symbol	* self		1073245						
ANR	1073297	Symbol	hint		1073245						
ANR	1073298	Symbol	g		1073245						
ANR	1073299	Symbol	any_abs		1073245						
ANR	1073300	Symbol	self		1073245						
ANR	1073301	Symbol	self -> blue_fuzz		1073245						
ANR	1073302	Symbol	hint -> g1		1073245						
ANR	1073303	Symbol	fuzz		1073245						
ANR	1073304	Function	t1_hinter__is_stem_hint_applicable	1732:0:69704:70592							
ANR	1073305	FunctionDef	"t1_hinter__is_stem_hint_applicable (t1_hinter * self , t1_hint * hint , int pole_index , int * quality)"		1073304	0					
ANR	1073306	CompoundStatement		1733:0:69813:70592	1073304	0					
ANR	1073307	IdentifierDeclStatement	int k ;	1734:4:69918:69923	1073304	0	True				
ANR	1073308	IdentifierDecl	k		1073304	0					
ANR	1073309	IdentifierDeclType	int		1073304	0					
ANR	1073310	Identifier	k		1073304	1					
ANR	1073311	IfStatement	"if ( hint -> type == hstem && ( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 1 , 0 , quality ) )"		1073304	1					
ANR	1073312	Condition	"hint -> type == hstem && ( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 1 , 0 , quality )"	1736:8:69934:70231	1073304	0	True				
ANR	1073313	AndExpression	"hint -> type == hstem && ( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 1 , 0 , quality )"		1073304	0		&&			
ANR	1073314	EqualityExpression	hint -> type == hstem		1073304	0		==			
ANR	1073315	PtrMemberAccess	hint -> type		1073304	0					
ANR	1073316	Identifier	hint		1073304	0					
ANR	1073317	Identifier	type		1073304	1					
ANR	1073318	Identifier	hstem		1073304	1					
ANR	1073319	AndExpression	"( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 1 , 0 , quality )"		1073304	1		&&			
ANR	1073320	OrExpression	"( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 1 ) )"		1073304	0		||			
ANR	1073321	Expression	"k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 0 )"		1073304	0					
ANR	1073322	AssignmentExpression	k = 1		1073304	0		=			
ANR	1073323	Identifier	k		1073304	0					
ANR	1073324	PrimaryExpression	1		1073304	1					
ANR	1073325	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 0 )"		1073304	1					
ANR	1073326	Callee	t1_hinter__is_stem_boundary_near		1073304	0					
ANR	1073327	Identifier	t1_hinter__is_stem_boundary_near		1073304	0					
ANR	1073328	ArgumentList	self		1073304	1					
ANR	1073329	Argument	self		1073304	0					
ANR	1073330	Identifier	self		1073304	0					
ANR	1073331	Argument	hint		1073304	1					
ANR	1073332	Identifier	hint		1073304	0					
ANR	1073333	Argument	self -> pole [ pole_index ] . gy		1073304	2					
ANR	1073334	MemberAccess	self -> pole [ pole_index ] . gy		1073304	0					
ANR	1073335	ArrayIndexing	self -> pole [ pole_index ]		1073304	0					
ANR	1073336	PtrMemberAccess	self -> pole		1073304	0					
ANR	1073337	Identifier	self		1073304	0					
ANR	1073338	Identifier	pole		1073304	1					
ANR	1073339	Identifier	pole_index		1073304	1					
ANR	1073340	Identifier	gy		1073304	1					
ANR	1073341	Argument	0		1073304	3					
ANR	1073342	PrimaryExpression	0		1073304	0					
ANR	1073343	Expression	"k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 1 )"		1073304	1					
ANR	1073344	AssignmentExpression	k = 2		1073304	0		=			
ANR	1073345	Identifier	k		1073304	0					
ANR	1073346	PrimaryExpression	2		1073304	1					
ANR	1073347	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gy , 1 )"		1073304	1					
ANR	1073348	Callee	t1_hinter__is_stem_boundary_near		1073304	0					
ANR	1073349	Identifier	t1_hinter__is_stem_boundary_near		1073304	0					
ANR	1073350	ArgumentList	self		1073304	1					
ANR	1073351	Argument	self		1073304	0					
ANR	1073352	Identifier	self		1073304	0					
ANR	1073353	Argument	hint		1073304	1					
ANR	1073354	Identifier	hint		1073304	0					
ANR	1073355	Argument	self -> pole [ pole_index ] . gy		1073304	2					
ANR	1073356	MemberAccess	self -> pole [ pole_index ] . gy		1073304	0					
ANR	1073357	ArrayIndexing	self -> pole [ pole_index ]		1073304	0					
ANR	1073358	PtrMemberAccess	self -> pole		1073304	0					
ANR	1073359	Identifier	self		1073304	0					
ANR	1073360	Identifier	pole		1073304	1					
ANR	1073361	Identifier	pole_index		1073304	1					
ANR	1073362	Identifier	gy		1073304	1					
ANR	1073363	Argument	1		1073304	3					
ANR	1073364	PrimaryExpression	1		1073304	0					
ANR	1073365	CallExpression	"t1_hinter__is_good_tangent ( self , pole_index , 1 , 0 , quality )"		1073304	1					
ANR	1073366	Callee	t1_hinter__is_good_tangent		1073304	0					
ANR	1073367	Identifier	t1_hinter__is_good_tangent		1073304	0					
ANR	1073368	ArgumentList	self		1073304	1					
ANR	1073369	Argument	self		1073304	0					
ANR	1073370	Identifier	self		1073304	0					
ANR	1073371	Argument	pole_index		1073304	1					
ANR	1073372	Identifier	pole_index		1073304	0					
ANR	1073373	Argument	1		1073304	2					
ANR	1073374	PrimaryExpression	1		1073304	0					
ANR	1073375	Argument	0		1073304	3					
ANR	1073376	PrimaryExpression	0		1073304	0					
ANR	1073377	Argument	quality		1073304	4					
ANR	1073378	Identifier	quality		1073304	0					
ANR	1073379	ReturnStatement	return k ;	1740:8:70242:70250	1073304	1	True				
ANR	1073380	Identifier	k		1073304	0					
ANR	1073381	IfStatement	"if ( hint -> type == vstem && ( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 0 , 1 , quality ) )"		1073304	2					
ANR	1073382	Condition	"hint -> type == vstem && ( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 0 , 1 , quality )"	1741:8:70260:70557	1073304	0	True				
ANR	1073383	AndExpression	"hint -> type == vstem && ( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 0 , 1 , quality )"		1073304	0		&&			
ANR	1073384	EqualityExpression	hint -> type == vstem		1073304	0		==			
ANR	1073385	PtrMemberAccess	hint -> type		1073304	0					
ANR	1073386	Identifier	hint		1073304	0					
ANR	1073387	Identifier	type		1073304	1					
ANR	1073388	Identifier	vstem		1073304	1					
ANR	1073389	AndExpression	"( ( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 1 ) ) ) && t1_hinter__is_good_tangent ( self , pole_index , 0 , 1 , quality )"		1073304	1		&&			
ANR	1073390	OrExpression	"( k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 0 ) ) || ( k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 1 ) )"		1073304	0		||			
ANR	1073391	Expression	"k = 1 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 0 )"		1073304	0					
ANR	1073392	AssignmentExpression	k = 1		1073304	0		=			
ANR	1073393	Identifier	k		1073304	0					
ANR	1073394	PrimaryExpression	1		1073304	1					
ANR	1073395	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 0 )"		1073304	1					
ANR	1073396	Callee	t1_hinter__is_stem_boundary_near		1073304	0					
ANR	1073397	Identifier	t1_hinter__is_stem_boundary_near		1073304	0					
ANR	1073398	ArgumentList	self		1073304	1					
ANR	1073399	Argument	self		1073304	0					
ANR	1073400	Identifier	self		1073304	0					
ANR	1073401	Argument	hint		1073304	1					
ANR	1073402	Identifier	hint		1073304	0					
ANR	1073403	Argument	self -> pole [ pole_index ] . gx		1073304	2					
ANR	1073404	MemberAccess	self -> pole [ pole_index ] . gx		1073304	0					
ANR	1073405	ArrayIndexing	self -> pole [ pole_index ]		1073304	0					
ANR	1073406	PtrMemberAccess	self -> pole		1073304	0					
ANR	1073407	Identifier	self		1073304	0					
ANR	1073408	Identifier	pole		1073304	1					
ANR	1073409	Identifier	pole_index		1073304	1					
ANR	1073410	Identifier	gx		1073304	1					
ANR	1073411	Argument	0		1073304	3					
ANR	1073412	PrimaryExpression	0		1073304	0					
ANR	1073413	Expression	"k = 2 , t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 1 )"		1073304	1					
ANR	1073414	AssignmentExpression	k = 2		1073304	0		=			
ANR	1073415	Identifier	k		1073304	0					
ANR	1073416	PrimaryExpression	2		1073304	1					
ANR	1073417	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , self -> pole [ pole_index ] . gx , 1 )"		1073304	1					
ANR	1073418	Callee	t1_hinter__is_stem_boundary_near		1073304	0					
ANR	1073419	Identifier	t1_hinter__is_stem_boundary_near		1073304	0					
ANR	1073420	ArgumentList	self		1073304	1					
ANR	1073421	Argument	self		1073304	0					
ANR	1073422	Identifier	self		1073304	0					
ANR	1073423	Argument	hint		1073304	1					
ANR	1073424	Identifier	hint		1073304	0					
ANR	1073425	Argument	self -> pole [ pole_index ] . gx		1073304	2					
ANR	1073426	MemberAccess	self -> pole [ pole_index ] . gx		1073304	0					
ANR	1073427	ArrayIndexing	self -> pole [ pole_index ]		1073304	0					
ANR	1073428	PtrMemberAccess	self -> pole		1073304	0					
ANR	1073429	Identifier	self		1073304	0					
ANR	1073430	Identifier	pole		1073304	1					
ANR	1073431	Identifier	pole_index		1073304	1					
ANR	1073432	Identifier	gx		1073304	1					
ANR	1073433	Argument	1		1073304	3					
ANR	1073434	PrimaryExpression	1		1073304	0					
ANR	1073435	CallExpression	"t1_hinter__is_good_tangent ( self , pole_index , 0 , 1 , quality )"		1073304	1					
ANR	1073436	Callee	t1_hinter__is_good_tangent		1073304	0					
ANR	1073437	Identifier	t1_hinter__is_good_tangent		1073304	0					
ANR	1073438	ArgumentList	self		1073304	1					
ANR	1073439	Argument	self		1073304	0					
ANR	1073440	Identifier	self		1073304	0					
ANR	1073441	Argument	pole_index		1073304	1					
ANR	1073442	Identifier	pole_index		1073304	0					
ANR	1073443	Argument	0		1073304	2					
ANR	1073444	PrimaryExpression	0		1073304	0					
ANR	1073445	Argument	1		1073304	3					
ANR	1073446	PrimaryExpression	1		1073304	0					
ANR	1073447	Argument	quality		1073304	4					
ANR	1073448	Identifier	quality		1073304	0					
ANR	1073449	ReturnStatement	return k ;	1745:8:70568:70576	1073304	1	True				
ANR	1073450	Identifier	k		1073304	0					
ANR	1073451	ReturnStatement	return 0 ;	1746:4:70582:70590	1073304	3	True				
ANR	1073452	PrimaryExpression	0		1073304	0					
ANR	1073453	ReturnType	static int		1073304	1					
ANR	1073454	Identifier	t1_hinter__is_stem_hint_applicable		1073304	2					
ANR	1073455	ParameterList	"t1_hinter * self , t1_hint * hint , int pole_index , int * quality"		1073304	3					
ANR	1073456	Parameter	t1_hinter * self	1732:46:69750:69765	1073304	0	True				
ANR	1073457	ParameterType	t1_hinter *		1073304	0					
ANR	1073458	Identifier	self		1073304	1					
ANR	1073459	Parameter	t1_hint * hint	1732:64:69768:69780	1073304	1	True				
ANR	1073460	ParameterType	t1_hint *		1073304	0					
ANR	1073461	Identifier	hint		1073304	1					
ANR	1073462	Parameter	int pole_index	1732:79:69783:69796	1073304	2	True				
ANR	1073463	ParameterType	int		1073304	0					
ANR	1073464	Identifier	pole_index		1073304	1					
ANR	1073465	Parameter	int * quality	1732:95:69799:69810	1073304	3	True				
ANR	1073466	ParameterType	int *		1073304	0					
ANR	1073467	Identifier	quality		1073304	1					
ANR	1073468	CFGEntryNode	ENTRY		1073304		True				
ANR	1073469	CFGExitNode	EXIT		1073304		True				
ANR	1073470	Symbol	self -> pole [ pole_index ] . gy		1073304						
ANR	1073471	Symbol	* hint		1073304						
ANR	1073472	Symbol	self -> pole [ pole_index ] . gx		1073304						
ANR	1073473	Symbol	* self -> pole		1073304						
ANR	1073474	Symbol	* * self		1073304						
ANR	1073475	Symbol	* self		1073304						
ANR	1073476	Symbol	k		1073304						
ANR	1073477	Symbol	vstem		1073304						
ANR	1073478	Symbol	quality		1073304						
ANR	1073479	Symbol	pole_index		1073304						
ANR	1073480	Symbol	t1_hinter__is_good_tangent		1073304						
ANR	1073481	Symbol	* pole_index		1073304						
ANR	1073482	Symbol	hint		1073304						
ANR	1073483	Symbol	self		1073304						
ANR	1073484	Symbol	self -> pole		1073304						
ANR	1073485	Symbol	hint -> type		1073304						
ANR	1073486	Symbol	t1_hinter__is_stem_boundary_near		1073304						
ANR	1073487	Symbol	hstem		1073304						
ANR	1073488	Function	t1_hinter__find_zone	1749:0:70595:71152							
ANR	1073489	FunctionDef	"t1_hinter__find_zone (t1_hinter * self , t1_glyph_space_coord pole_y , bool curve , bool convex , bool concave)"		1073488	0					
ANR	1073490	CompoundStatement		1750:0:70719:71152	1073488	0					
ANR	1073491	IdentifierDeclStatement	bool maybe_top = ! curve || convex ;	1750:3:70723:70756	1073488	0	True				
ANR	1073492	IdentifierDecl	maybe_top = ! curve || convex		1073488	0					
ANR	1073493	IdentifierDeclType	bool		1073488	0					
ANR	1073494	Identifier	maybe_top		1073488	1					
ANR	1073495	AssignmentExpression	maybe_top = ! curve || convex		1073488	2		=			
ANR	1073496	Identifier	maybe_top		1073488	0					
ANR	1073497	OrExpression	! curve || convex		1073488	1		||			
ANR	1073498	UnaryOperationExpression	! curve		1073488	0					
ANR	1073499	UnaryOperator	!		1073488	0					
ANR	1073500	Identifier	curve		1073488	1					
ANR	1073501	Identifier	convex		1073488	1					
ANR	1073502	IdentifierDeclStatement	bool maybe_bot = ! curve || concave ;	1751:4:70762:70796	1073488	1	True				
ANR	1073503	IdentifierDecl	maybe_bot = ! curve || concave		1073488	0					
ANR	1073504	IdentifierDeclType	bool		1073488	0					
ANR	1073505	Identifier	maybe_bot		1073488	1					
ANR	1073506	AssignmentExpression	maybe_bot = ! curve || concave		1073488	2		=			
ANR	1073507	Identifier	maybe_bot		1073488	0					
ANR	1073508	OrExpression	! curve || concave		1073488	1		||			
ANR	1073509	UnaryOperationExpression	! curve		1073488	0					
ANR	1073510	UnaryOperator	!		1073488	0					
ANR	1073511	Identifier	curve		1073488	1					
ANR	1073512	Identifier	concave		1073488	1					
ANR	1073513	IdentifierDeclStatement	int i ;	1752:4:70802:70807	1073488	2	True				
ANR	1073514	IdentifierDecl	i		1073488	0					
ANR	1073515	IdentifierDeclType	int		1073488	0					
ANR	1073516	Identifier	i		1073488	1					
ANR	1073517	ForStatement	for ( i = 0 ; i < self -> zone_count ; i ++ )		1073488	3					
ANR	1073518	ForInit	i = 0 ;	1754:9:70819:70824	1073488	0	True				
ANR	1073519	AssignmentExpression	i = 0		1073488	0		=			
ANR	1073520	Identifier	i		1073488	0					
ANR	1073521	PrimaryExpression	0		1073488	1					
ANR	1073522	Condition	i < self -> zone_count	1754:16:70826:70845	1073488	1	True				
ANR	1073523	RelationalExpression	i < self -> zone_count		1073488	0		<			
ANR	1073524	Identifier	i		1073488	0					
ANR	1073525	PtrMemberAccess	self -> zone_count		1073488	1					
ANR	1073526	Identifier	self		1073488	0					
ANR	1073527	Identifier	zone_count		1073488	1					
ANR	1073528	PostIncDecOperationExpression	i ++	1754:38:70848:70850	1073488	2	True				
ANR	1073529	Identifier	i		1073488	0					
ANR	1073530	IncDec	++		1073488	1					
ANR	1073531	CompoundStatement		6:8:143:173	1073488	3					
ANR	1073532	IdentifierDeclStatement	t1_zone * zone = & self -> zone [ i ] ;	1755:8:70863:70893	1073488	0	True				
ANR	1073533	IdentifierDecl	* zone = & self -> zone [ i ]		1073488	0					
ANR	1073534	IdentifierDeclType	t1_zone *		1073488	0					
ANR	1073535	Identifier	zone		1073488	1					
ANR	1073536	AssignmentExpression	* zone = & self -> zone [ i ]		1073488	2		=			
ANR	1073537	Identifier	zone		1073488	0					
ANR	1073538	UnaryOperationExpression	& self -> zone [ i ]		1073488	1					
ANR	1073539	UnaryOperator	&		1073488	0					
ANR	1073540	ArrayIndexing	self -> zone [ i ]		1073488	1					
ANR	1073541	PtrMemberAccess	self -> zone		1073488	0					
ANR	1073542	Identifier	self		1073488	0					
ANR	1073543	Identifier	zone		1073488	1					
ANR	1073544	Identifier	i		1073488	1					
ANR	1073545	IfStatement	if ( ( maybe_top && zone -> type == topzone ) || ( maybe_bot && zone -> type == botzone ) )		1073488	1					
ANR	1073546	Condition	( maybe_top && zone -> type == topzone ) || ( maybe_bot && zone -> type == botzone )	1756:12:70907:70982	1073488	0	True				
ANR	1073547	OrExpression	( maybe_top && zone -> type == topzone ) || ( maybe_bot && zone -> type == botzone )		1073488	0		||			
ANR	1073548	AndExpression	maybe_top && zone -> type == topzone		1073488	0		&&			
ANR	1073549	Identifier	maybe_top		1073488	0					
ANR	1073550	EqualityExpression	zone -> type == topzone		1073488	1		==			
ANR	1073551	PtrMemberAccess	zone -> type		1073488	0					
ANR	1073552	Identifier	zone		1073488	0					
ANR	1073553	Identifier	type		1073488	1					
ANR	1073554	Identifier	topzone		1073488	1					
ANR	1073555	AndExpression	maybe_bot && zone -> type == botzone		1073488	1		&&			
ANR	1073556	Identifier	maybe_bot		1073488	0					
ANR	1073557	EqualityExpression	zone -> type == botzone		1073488	1		==			
ANR	1073558	PtrMemberAccess	zone -> type		1073488	0					
ANR	1073559	Identifier	zone		1073488	0					
ANR	1073560	Identifier	type		1073488	1					
ANR	1073561	Identifier	botzone		1073488	1					
ANR	1073562	IfStatement	if ( zone -> y_min <= pole_y && pole_y <= zone -> y_max )		1073488	1					
ANR	1073563	Condition	zone -> y_min <= pole_y && pole_y <= zone -> y_max	1757:16:71001:71046	1073488	0	True				
ANR	1073564	AndExpression	zone -> y_min <= pole_y && pole_y <= zone -> y_max		1073488	0		&&			
ANR	1073565	RelationalExpression	zone -> y_min <= pole_y		1073488	0		<=			
ANR	1073566	PtrMemberAccess	zone -> y_min		1073488	0					
ANR	1073567	Identifier	zone		1073488	0					
ANR	1073568	Identifier	y_min		1073488	1					
ANR	1073569	Identifier	pole_y		1073488	1					
ANR	1073570	RelationalExpression	pole_y <= zone -> y_max		1073488	1		<=			
ANR	1073571	Identifier	pole_y		1073488	0					
ANR	1073572	PtrMemberAccess	zone -> y_max		1073488	1					
ANR	1073573	Identifier	zone		1073488	0					
ANR	1073574	Identifier	y_max		1073488	1					
ANR	1073575	ReturnStatement	return zone ;	1758:16:71065:71076	1073488	1	True				
ANR	1073576	Identifier	zone		1073488	0					
ANR	1073577	ReturnStatement	return NULL ;	1760:4:71088:71099	1073488	4	True				
ANR	1073578	Identifier	NULL		1073488	0					
ANR	1073579	ReturnType	static t1_zone *		1073488	1					
ANR	1073580	Identifier	t1_hinter__find_zone		1073488	2					
ANR	1073581	ParameterList	"t1_hinter * self , t1_glyph_space_coord pole_y , bool curve , bool convex , bool concave"		1073488	3					
ANR	1073582	Parameter	t1_hinter * self	1749:38:70633:70648	1073488	0	True				
ANR	1073583	ParameterType	t1_hinter *		1073488	0					
ANR	1073584	Identifier	self		1073488	1					
ANR	1073585	Parameter	t1_glyph_space_coord pole_y	1749:56:70651:70677	1073488	1	True				
ANR	1073586	ParameterType	t1_glyph_space_coord		1073488	0					
ANR	1073587	Identifier	pole_y		1073488	1					
ANR	1073588	Parameter	bool curve	1749:85:70680:70689	1073488	2	True				
ANR	1073589	ParameterType	bool		1073488	0					
ANR	1073590	Identifier	curve		1073488	1					
ANR	1073591	Parameter	bool convex	1749:97:70692:70702	1073488	3	True				
ANR	1073592	ParameterType	bool		1073488	0					
ANR	1073593	Identifier	convex		1073488	1					
ANR	1073594	Parameter	bool concave	1749:110:70705:70716	1073488	4	True				
ANR	1073595	ParameterType	bool		1073488	0					
ANR	1073596	Identifier	concave		1073488	1					
ANR	1073597	CFGEntryNode	ENTRY		1073488		True				
ANR	1073598	CFGExitNode	EXIT		1073488		True				
ANR	1073599	Symbol	concave		1073488						
ANR	1073600	Symbol	maybe_top		1073488						
ANR	1073601	Symbol	topzone		1073488						
ANR	1073602	Symbol	NULL		1073488						
ANR	1073603	Symbol	curve		1073488						
ANR	1073604	Symbol	* zone		1073488						
ANR	1073605	Symbol	* self		1073488						
ANR	1073606	Symbol	i		1073488						
ANR	1073607	Symbol	self -> zone		1073488						
ANR	1073608	Symbol	maybe_bot		1073488						
ANR	1073609	Symbol	zone -> y_max		1073488						
ANR	1073610	Symbol	self -> zone_count		1073488						
ANR	1073611	Symbol	zone -> type		1073488						
ANR	1073612	Symbol	zone		1073488						
ANR	1073613	Symbol	convex		1073488						
ANR	1073614	Symbol	self		1073488						
ANR	1073615	Symbol	botzone		1073488						
ANR	1073616	Symbol	zone -> y_min		1073488						
ANR	1073617	Symbol	pole_y		1073488						
ANR	1073618	Function	t1_hinter__align_to_grid__general	1764:0:71155:72100							
ANR	1073619	FunctionDef	"t1_hinter__align_to_grid__general (t1_hinter * self , int32_t unit , t1_glyph_space_coord gx , t1_glyph_space_coord gy , t1_hinter_space_coord * pdx , t1_hinter_space_coord * pdy , bool align_to_pixels , bool absolute)"		1073618	0					
ANR	1073620	CompoundStatement		1768:0:71412:72100	1073618	0					
ANR	1073621	IdentifierDeclStatement	"long div_x = rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) ) ;"	1769:4:71418:71514	1073618	0	True				
ANR	1073622	IdentifierDecl	"div_x = rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		1073618	0					
ANR	1073623	IdentifierDeclType	long		1073618	0					
ANR	1073624	Identifier	div_x		1073618	1					
ANR	1073625	AssignmentExpression	"div_x = rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		1073618	2		=			
ANR	1073626	Identifier	div_x		1073618	0					
ANR	1073627	CallExpression	"rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x ) )"		1073618	1					
ANR	1073628	Callee	rshift		1073618	0					
ANR	1073629	Identifier	rshift		1073618	0					
ANR	1073630	ArgumentList	unit		1073618	1					
ANR	1073631	Argument	unit		1073618	0					
ANR	1073632	Identifier	unit		1073618	0					
ANR	1073633	Argument	align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x		1073618	1					
ANR	1073634	ConditionalExpression	align_to_pixels ? ( int ) self -> log2_pixels_x : self -> log2_subpixels_x		1073618	0					
ANR	1073635	Condition	align_to_pixels		1073618	0					
ANR	1073636	Identifier	align_to_pixels		1073618	0					
ANR	1073637	CastExpression	( int ) self -> log2_pixels_x		1073618	1					
ANR	1073638	CastTarget	int		1073618	0					
ANR	1073639	PtrMemberAccess	self -> log2_pixels_x		1073618	1					
ANR	1073640	Identifier	self		1073618	0					
ANR	1073641	Identifier	log2_pixels_x		1073618	1					
ANR	1073642	PtrMemberAccess	self -> log2_subpixels_x		1073618	2					
ANR	1073643	Identifier	self		1073618	0					
ANR	1073644	Identifier	log2_subpixels_x		1073618	1					
ANR	1073645	IdentifierDeclStatement	"long div_y = rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) ) ;"	1770:4:71520:71616	1073618	1	True				
ANR	1073646	IdentifierDecl	"div_y = rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		1073618	0					
ANR	1073647	IdentifierDeclType	long		1073618	0					
ANR	1073648	Identifier	div_y		1073618	1					
ANR	1073649	AssignmentExpression	"div_y = rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		1073618	2		=			
ANR	1073650	Identifier	div_y		1073618	0					
ANR	1073651	CallExpression	"rshift ( unit , ( align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y ) )"		1073618	1					
ANR	1073652	Callee	rshift		1073618	0					
ANR	1073653	Identifier	rshift		1073618	0					
ANR	1073654	ArgumentList	unit		1073618	1					
ANR	1073655	Argument	unit		1073618	0					
ANR	1073656	Identifier	unit		1073618	0					
ANR	1073657	Argument	align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y		1073618	1					
ANR	1073658	ConditionalExpression	align_to_pixels ? ( int ) self -> log2_pixels_y : self -> log2_subpixels_y		1073618	0					
ANR	1073659	Condition	align_to_pixels		1073618	0					
ANR	1073660	Identifier	align_to_pixels		1073618	0					
ANR	1073661	CastExpression	( int ) self -> log2_pixels_y		1073618	1					
ANR	1073662	CastTarget	int		1073618	0					
ANR	1073663	PtrMemberAccess	self -> log2_pixels_y		1073618	1					
ANR	1073664	Identifier	self		1073618	0					
ANR	1073665	Identifier	log2_pixels_y		1073618	1					
ANR	1073666	PtrMemberAccess	self -> log2_subpixels_y		1073618	2					
ANR	1073667	Identifier	self		1073618	0					
ANR	1073668	Identifier	log2_subpixels_y		1073618	1					
ANR	1073669	IdentifierDeclStatement	"t1_hinter_space_coord ox , oy , dx , dy ;"	1771:4:71622:71658	1073618	2	True				
ANR	1073670	IdentifierDecl	ox		1073618	0					
ANR	1073671	IdentifierDeclType	t1_hinter_space_coord		1073618	0					
ANR	1073672	Identifier	ox		1073618	1					
ANR	1073673	IdentifierDecl	oy		1073618	1					
ANR	1073674	IdentifierDeclType	t1_hinter_space_coord		1073618	0					
ANR	1073675	Identifier	oy		1073618	1					
ANR	1073676	IdentifierDecl	dx		1073618	2					
ANR	1073677	IdentifierDeclType	t1_hinter_space_coord		1073618	0					
ANR	1073678	Identifier	dx		1073618	1					
ANR	1073679	IdentifierDecl	dy		1073618	3					
ANR	1073680	IdentifierDeclType	t1_hinter_space_coord		1073618	0					
ANR	1073681	Identifier	dy		1073618	1					
ANR	1073682	ExpressionStatement	"g2o ( self , gx , gy , & ox , & oy )"	1773:4:71665:71692	1073618	3	True				
ANR	1073683	CallExpression	"g2o ( self , gx , gy , & ox , & oy )"		1073618	0					
ANR	1073684	Callee	g2o		1073618	0					
ANR	1073685	Identifier	g2o		1073618	0					
ANR	1073686	ArgumentList	self		1073618	1					
ANR	1073687	Argument	self		1073618	0					
ANR	1073688	Identifier	self		1073618	0					
ANR	1073689	Argument	gx		1073618	1					
ANR	1073690	Identifier	gx		1073618	0					
ANR	1073691	Argument	gy		1073618	2					
ANR	1073692	Identifier	gy		1073618	0					
ANR	1073693	Argument	& ox		1073618	3					
ANR	1073694	UnaryOperationExpression	& ox		1073618	0					
ANR	1073695	UnaryOperator	&		1073618	0					
ANR	1073696	Identifier	ox		1073618	1					
ANR	1073697	Argument	& oy		1073618	4					
ANR	1073698	UnaryOperationExpression	& oy		1073618	0					
ANR	1073699	UnaryOperator	&		1073618	0					
ANR	1073700	Identifier	oy		1073618	1					
ANR	1073701	IfStatement	if ( absolute )		1073618	4					
ANR	1073702	Condition	absolute	1774:8:71702:71709	1073618	0	True				
ANR	1073703	Identifier	absolute		1073618	0					
ANR	1073704	CompoundStatement		7:18:299:299	1073618	1					
ANR	1073705	ExpressionStatement	ox += self -> orig_ox	1775:8:71722:71741	1073618	0	True				
ANR	1073706	AssignmentExpression	ox += self -> orig_ox		1073618	0		+=			
ANR	1073707	Identifier	ox		1073618	0					
ANR	1073708	PtrMemberAccess	self -> orig_ox		1073618	1					
ANR	1073709	Identifier	self		1073618	0					
ANR	1073710	Identifier	orig_ox		1073618	1					
ANR	1073711	ExpressionStatement	oy += self -> orig_oy	1776:8:71751:71770	1073618	1	True				
ANR	1073712	AssignmentExpression	oy += self -> orig_oy		1073618	0		+=			
ANR	1073713	Identifier	oy		1073618	0					
ANR	1073714	PtrMemberAccess	self -> orig_oy		1073618	1					
ANR	1073715	Identifier	self		1073618	0					
ANR	1073716	Identifier	orig_oy		1073618	1					
ANR	1073717	ExpressionStatement	dx = ox % div_x	1778:4:71782:71797	1073618	5	True				
ANR	1073718	AssignmentExpression	dx = ox % div_x		1073618	0		=			
ANR	1073719	Identifier	dx		1073618	0					
ANR	1073720	MultiplicativeExpression	ox % div_x		1073618	1		%			
ANR	1073721	Identifier	ox		1073618	0					
ANR	1073722	Identifier	div_x		1073618	1					
ANR	1073723	ExpressionStatement	dy = oy % div_y	1779:4:71803:71818	1073618	6	True				
ANR	1073724	AssignmentExpression	dy = oy % div_y		1073618	0		=			
ANR	1073725	Identifier	dy		1073618	0					
ANR	1073726	MultiplicativeExpression	oy % div_y		1073618	1		%			
ANR	1073727	Identifier	oy		1073618	0					
ANR	1073728	Identifier	div_y		1073618	1					
ANR	1073729	IfStatement	if ( dx > div_x / 2 )		1073618	7					
ANR	1073730	Condition	dx > div_x / 2	1780:8:71863:71876	1073618	0	True				
ANR	1073731	RelationalExpression	dx > div_x / 2		1073618	0		>			
ANR	1073732	Identifier	dx		1073618	0					
ANR	1073733	MultiplicativeExpression	div_x / 2		1073618	1		/			
ANR	1073734	Identifier	div_x		1073618	0					
ANR	1073735	PrimaryExpression	2		1073618	1					
ANR	1073736	ExpressionStatement	dx = - div_x + dx	1781:8:71888:71905	1073618	1	True				
ANR	1073737	AssignmentExpression	dx = - div_x + dx		1073618	0		=			
ANR	1073738	Identifier	dx		1073618	0					
ANR	1073739	AdditiveExpression	- div_x + dx		1073618	1		+			
ANR	1073740	UnaryOperationExpression	- div_x		1073618	0					
ANR	1073741	UnaryOperator	-		1073618	0					
ANR	1073742	Identifier	div_x		1073618	1					
ANR	1073743	Identifier	dx		1073618	1					
ANR	1073744	ElseStatement	else		1073618	0					
ANR	1073745	IfStatement	if ( dx < - div_x / 2 )		1073618	0					
ANR	1073746	Condition	dx < - div_x / 2	1782:13:71920:71935	1073618	0	True				
ANR	1073747	RelationalExpression	dx < - div_x / 2		1073618	0		<			
ANR	1073748	Identifier	dx		1073618	0					
ANR	1073749	MultiplicativeExpression	- div_x / 2		1073618	1		/			
ANR	1073750	UnaryOperationExpression	- div_x		1073618	0					
ANR	1073751	UnaryOperator	-		1073618	0					
ANR	1073752	Identifier	div_x		1073618	1					
ANR	1073753	PrimaryExpression	2		1073618	1					
ANR	1073754	ExpressionStatement	dx = div_x + dx	1783:8:71946:71961	1073618	1	True				
ANR	1073755	AssignmentExpression	dx = div_x + dx		1073618	0		=			
ANR	1073756	Identifier	dx		1073618	0					
ANR	1073757	AdditiveExpression	div_x + dx		1073618	1		+			
ANR	1073758	Identifier	div_x		1073618	0					
ANR	1073759	Identifier	dx		1073618	1					
ANR	1073760	IfStatement	if ( dy > div_y / 2 )		1073618	8					
ANR	1073761	Condition	dy > div_y / 2	1784:8:71971:71984	1073618	0	True				
ANR	1073762	RelationalExpression	dy > div_y / 2		1073618	0		>			
ANR	1073763	Identifier	dy		1073618	0					
ANR	1073764	MultiplicativeExpression	div_y / 2		1073618	1		/			
ANR	1073765	Identifier	div_y		1073618	0					
ANR	1073766	PrimaryExpression	2		1073618	1					
ANR	1073767	ExpressionStatement	dy = - div_y + dy	1785:8:71995:72012	1073618	1	True				
ANR	1073768	AssignmentExpression	dy = - div_y + dy		1073618	0		=			
ANR	1073769	Identifier	dy		1073618	0					
ANR	1073770	AdditiveExpression	- div_y + dy		1073618	1		+			
ANR	1073771	UnaryOperationExpression	- div_y		1073618	0					
ANR	1073772	UnaryOperator	-		1073618	0					
ANR	1073773	Identifier	div_y		1073618	1					
ANR	1073774	Identifier	dy		1073618	1					
ANR	1073775	ElseStatement	else		1073618	0					
ANR	1073776	IfStatement	if ( dy < - div_y / 2 )		1073618	0					
ANR	1073777	Condition	dy < - div_y / 2	1786:13:72027:72042	1073618	0	True				
ANR	1073778	RelationalExpression	dy < - div_y / 2		1073618	0		<			
ANR	1073779	Identifier	dy		1073618	0					
ANR	1073780	MultiplicativeExpression	- div_y / 2		1073618	1		/			
ANR	1073781	UnaryOperationExpression	- div_y		1073618	0					
ANR	1073782	UnaryOperator	-		1073618	0					
ANR	1073783	Identifier	div_y		1073618	1					
ANR	1073784	PrimaryExpression	2		1073618	1					
ANR	1073785	ExpressionStatement	dy = div_y + dy	1787:8:72053:72068	1073618	1	True				
ANR	1073786	AssignmentExpression	dy = div_y + dy		1073618	0		=			
ANR	1073787	Identifier	dy		1073618	0					
ANR	1073788	AdditiveExpression	div_y + dy		1073618	1		+			
ANR	1073789	Identifier	div_y		1073618	0					
ANR	1073790	Identifier	dy		1073618	1					
ANR	1073791	ExpressionStatement	* pdx = dx	1788:4:72074:72083	1073618	9	True				
ANR	1073792	AssignmentExpression	* pdx = dx		1073618	0		=			
ANR	1073793	UnaryOperationExpression	* pdx		1073618	0					
ANR	1073794	UnaryOperator	*		1073618	0					
ANR	1073795	Identifier	pdx		1073618	1					
ANR	1073796	Identifier	dx		1073618	1					
ANR	1073797	ExpressionStatement	* pdy = dy	1789:4:72089:72098	1073618	10	True				
ANR	1073798	AssignmentExpression	* pdy = dy		1073618	0		=			
ANR	1073799	UnaryOperationExpression	* pdy		1073618	0					
ANR	1073800	UnaryOperator	*		1073618	0					
ANR	1073801	Identifier	pdy		1073618	1					
ANR	1073802	Identifier	dy		1073618	1					
ANR	1073803	ReturnType	static void		1073618	1					
ANR	1073804	Identifier	t1_hinter__align_to_grid__general		1073618	2					
ANR	1073805	ParameterList	"t1_hinter * self , int32_t unit , t1_glyph_space_coord gx , t1_glyph_space_coord gy , t1_hinter_space_coord * pdx , t1_hinter_space_coord * pdy , bool align_to_pixels , bool absolute"		1073618	3					
ANR	1073806	Parameter	t1_hinter * self	1764:46:71201:71216	1073618	0	True				
ANR	1073807	ParameterType	t1_hinter *		1073618	0					
ANR	1073808	Identifier	self		1073618	1					
ANR	1073809	Parameter	int32_t unit	1764:64:71219:71230	1073618	1	True				
ANR	1073810	ParameterType	int32_t		1073618	0					
ANR	1073811	Identifier	unit		1073618	1					
ANR	1073812	Parameter	t1_glyph_space_coord gx	1765:12:71245:71267	1073618	2	True				
ANR	1073813	ParameterType	t1_glyph_space_coord		1073618	0					
ANR	1073814	Identifier	gx		1073618	1					
ANR	1073815	Parameter	t1_glyph_space_coord gy	1765:37:71270:71292	1073618	3	True				
ANR	1073816	ParameterType	t1_glyph_space_coord		1073618	0					
ANR	1073817	Identifier	gy		1073618	1					
ANR	1073818	Parameter	t1_hinter_space_coord * pdx	1766:12:71307:71332	1073618	4	True				
ANR	1073819	ParameterType	t1_hinter_space_coord *		1073618	0					
ANR	1073820	Identifier	pdx		1073618	1					
ANR	1073821	Parameter	t1_hinter_space_coord * pdy	1766:40:71335:71360	1073618	5	True				
ANR	1073822	ParameterType	t1_hinter_space_coord *		1073618	0					
ANR	1073823	Identifier	pdy		1073618	1					
ANR	1073824	Parameter	bool align_to_pixels	1767:12:71375:71394	1073618	6	True				
ANR	1073825	ParameterType	bool		1073618	0					
ANR	1073826	Identifier	align_to_pixels		1073618	1					
ANR	1073827	Parameter	bool absolute	1767:34:71397:71409	1073618	7	True				
ANR	1073828	ParameterType	bool		1073618	0					
ANR	1073829	Identifier	absolute		1073618	1					
ANR	1073830	CFGEntryNode	ENTRY		1073618		True				
ANR	1073831	CFGExitNode	EXIT		1073618		True				
ANR	1073832	Symbol	pdy		1073618						
ANR	1073833	Symbol	pdx		1073618						
ANR	1073834	Symbol	align_to_pixels		1073618						
ANR	1073835	Symbol	self -> log2_subpixels_y		1073618						
ANR	1073836	Symbol	dx		1073618						
ANR	1073837	Symbol	self -> log2_subpixels_x		1073618						
ANR	1073838	Symbol	dy		1073618						
ANR	1073839	Symbol	rshift		1073618						
ANR	1073840	Symbol	* self		1073618						
ANR	1073841	Symbol	self -> orig_oy		1073618						
ANR	1073842	Symbol	self -> orig_ox		1073618						
ANR	1073843	Symbol	ox		1073618						
ANR	1073844	Symbol	self -> log2_pixels_x		1073618						
ANR	1073845	Symbol	oy		1073618						
ANR	1073846	Symbol	self -> log2_pixels_y		1073618						
ANR	1073847	Symbol	* pdx		1073618						
ANR	1073848	Symbol	* pdy		1073618						
ANR	1073849	Symbol	gx		1073618						
ANR	1073850	Symbol	unit		1073618						
ANR	1073851	Symbol	gy		1073618						
ANR	1073852	Symbol	& ox		1073618						
ANR	1073853	Symbol	& oy		1073618						
ANR	1073854	Symbol	absolute		1073618						
ANR	1073855	Symbol	div_x		1073618						
ANR	1073856	Symbol	self		1073618						
ANR	1073857	Symbol	div_y		1073618						
ANR	1073858	Function	t1_hinter__align_to_grid__final	1792:0:72103:72604							
ANR	1073859	FunctionDef	"t1_hinter__align_to_grid__final (t1_hinter * self , t1_glyph_space_coord * x , t1_glyph_space_coord * y , t1_hinter_space_coord dx , t1_hinter_space_coord dy)"		1073858	0					
ANR	1073860	CompoundStatement		1795:0:72291:72604	1073858	0					
ANR	1073861	IdentifierDeclStatement	"t1_glyph_space_coord gxd , gyd ;"	1796:4:72297:72326	1073858	0	True				
ANR	1073862	IdentifierDecl	gxd		1073858	0					
ANR	1073863	IdentifierDeclType	t1_glyph_space_coord		1073858	0					
ANR	1073864	Identifier	gxd		1073858	1					
ANR	1073865	IdentifierDecl	gyd		1073858	1					
ANR	1073866	IdentifierDeclType	t1_glyph_space_coord		1073858	0					
ANR	1073867	Identifier	gyd		1073858	1					
ANR	1073868	ExpressionStatement	"o2g ( self , dx , dy , & gxd , & gyd )"	1798:4:72333:72362	1073858	1	True				
ANR	1073869	CallExpression	"o2g ( self , dx , dy , & gxd , & gyd )"		1073858	0					
ANR	1073870	Callee	o2g		1073858	0					
ANR	1073871	Identifier	o2g		1073858	0					
ANR	1073872	ArgumentList	self		1073858	1					
ANR	1073873	Argument	self		1073858	0					
ANR	1073874	Identifier	self		1073858	0					
ANR	1073875	Argument	dx		1073858	1					
ANR	1073876	Identifier	dx		1073858	0					
ANR	1073877	Argument	dy		1073858	2					
ANR	1073878	Identifier	dy		1073858	0					
ANR	1073879	Argument	& gxd		1073858	3					
ANR	1073880	UnaryOperationExpression	& gxd		1073858	0					
ANR	1073881	UnaryOperator	&		1073858	0					
ANR	1073882	Identifier	gxd		1073858	1					
ANR	1073883	Argument	& gyd		1073858	4					
ANR	1073884	UnaryOperationExpression	& gyd		1073858	0					
ANR	1073885	UnaryOperator	&		1073858	0					
ANR	1073886	Identifier	gyd		1073858	1					
ANR	1073887	IfStatement	if ( self -> grid_fit_x )		1073858	2					
ANR	1073888	Condition	self -> grid_fit_x	1799:8:72372:72387	1073858	0	True				
ANR	1073889	PtrMemberAccess	self -> grid_fit_x		1073858	0					
ANR	1073890	Identifier	self		1073858	0					
ANR	1073891	Identifier	grid_fit_x		1073858	1					
ANR	1073892	CompoundStatement		5:26:98:98	1073858	1					
ANR	1073893	ExpressionStatement	* x -= gxd	1800:8:72400:72409	1073858	0	True				
ANR	1073894	AssignmentExpression	* x -= gxd		1073858	0		-=			
ANR	1073895	UnaryOperationExpression	* x		1073858	0					
ANR	1073896	UnaryOperator	*		1073858	0					
ANR	1073897	Identifier	x		1073858	1					
ANR	1073898	Identifier	gxd		1073858	1					
ANR	1073899	ExpressionStatement	* x = ( * x + 7 ) & ~15	1801:8:72419:72438	1073858	1	True				
ANR	1073900	AssignmentExpression	* x = ( * x + 7 ) & ~15		1073858	0		=			
ANR	1073901	UnaryOperationExpression	* x		1073858	0					
ANR	1073902	UnaryOperator	*		1073858	0					
ANR	1073903	Identifier	x		1073858	1					
ANR	1073904	BitAndExpression	( * x + 7 ) & ~15		1073858	1		&			
ANR	1073905	AdditiveExpression	* x + 7		1073858	0		+			
ANR	1073906	UnaryOperationExpression	* x		1073858	0					
ANR	1073907	UnaryOperator	*		1073858	0					
ANR	1073908	Identifier	x		1073858	1					
ANR	1073909	PrimaryExpression	7		1073858	1					
ANR	1073910	Identifier	~15		1073858	1					
ANR	1073911	IfStatement	if ( self -> grid_fit_y )		1073858	3					
ANR	1073912	Condition	self -> grid_fit_y	1803:8:72492:72507	1073858	0	True				
ANR	1073913	PtrMemberAccess	self -> grid_fit_y		1073858	0					
ANR	1073914	Identifier	self		1073858	0					
ANR	1073915	Identifier	grid_fit_y		1073858	1					
ANR	1073916	CompoundStatement		9:26:218:218	1073858	1					
ANR	1073917	ExpressionStatement	* y -= gyd	1804:8:72520:72529	1073858	0	True				
ANR	1073918	AssignmentExpression	* y -= gyd		1073858	0		-=			
ANR	1073919	UnaryOperationExpression	* y		1073858	0					
ANR	1073920	UnaryOperator	*		1073858	0					
ANR	1073921	Identifier	y		1073858	1					
ANR	1073922	Identifier	gyd		1073858	1					
ANR	1073923	ExpressionStatement	* y = ( * y + 7 ) & ~15	1805:8:72539:72558	1073858	1	True				
ANR	1073924	AssignmentExpression	* y = ( * y + 7 ) & ~15		1073858	0		=			
ANR	1073925	UnaryOperationExpression	* y		1073858	0					
ANR	1073926	UnaryOperator	*		1073858	0					
ANR	1073927	Identifier	y		1073858	1					
ANR	1073928	BitAndExpression	( * y + 7 ) & ~15		1073858	1		&			
ANR	1073929	AdditiveExpression	* y + 7		1073858	0		+			
ANR	1073930	UnaryOperationExpression	* y		1073858	0					
ANR	1073931	UnaryOperator	*		1073858	0					
ANR	1073932	Identifier	y		1073858	1					
ANR	1073933	PrimaryExpression	7		1073858	1					
ANR	1073934	Identifier	~15		1073858	1					
ANR	1073935	ReturnType	static void		1073858	1					
ANR	1073936	Identifier	t1_hinter__align_to_grid__final		1073858	2					
ANR	1073937	ParameterList	"t1_hinter * self , t1_glyph_space_coord * x , t1_glyph_space_coord * y , t1_hinter_space_coord dx , t1_hinter_space_coord dy"		1073858	3					
ANR	1073938	Parameter	t1_hinter * self	1792:44:72147:72162	1073858	0	True				
ANR	1073939	ParameterType	t1_hinter *		1073858	0					
ANR	1073940	Identifier	self		1073858	1					
ANR	1073941	Parameter	t1_glyph_space_coord * x	1793:12:72177:72199	1073858	1	True				
ANR	1073942	ParameterType	t1_glyph_space_coord *		1073858	0					
ANR	1073943	Identifier	x		1073858	1					
ANR	1073944	Parameter	t1_glyph_space_coord * y	1793:37:72202:72224	1073858	2	True				
ANR	1073945	ParameterType	t1_glyph_space_coord *		1073858	0					
ANR	1073946	Identifier	y		1073858	1					
ANR	1073947	Parameter	t1_hinter_space_coord dx	1794:12:72239:72262	1073858	3	True				
ANR	1073948	ParameterType	t1_hinter_space_coord		1073858	0					
ANR	1073949	Identifier	dx		1073858	1					
ANR	1073950	Parameter	t1_hinter_space_coord dy	1794:38:72265:72288	1073858	4	True				
ANR	1073951	ParameterType	t1_hinter_space_coord		1073858	0					
ANR	1073952	Identifier	dy		1073858	1					
ANR	1073953	CFGEntryNode	ENTRY		1073858		True				
ANR	1073954	CFGExitNode	EXIT		1073858		True				
ANR	1073955	Symbol	* x		1073858						
ANR	1073956	Symbol	~15		1073858						
ANR	1073957	Symbol	* y		1073858						
ANR	1073958	Symbol	* self		1073858						
ANR	1073959	Symbol	self -> grid_fit_x		1073858						
ANR	1073960	Symbol	self -> grid_fit_y		1073858						
ANR	1073961	Symbol	gxd		1073858						
ANR	1073962	Symbol	gyd		1073858						
ANR	1073963	Symbol	dx		1073858						
ANR	1073964	Symbol	dy		1073858						
ANR	1073965	Symbol	x		1073858						
ANR	1073966	Symbol	self		1073858						
ANR	1073967	Symbol	y		1073858						
ANR	1073968	Symbol	& gxd		1073858						
ANR	1073969	Symbol	& gyd		1073858						
ANR	1073970	Function	t1_hinter__hint_stem_snap_range	1809:0:72607:73232							
ANR	1073971	FunctionDef	"t1_hinter__hint_stem_snap_range (t1_hinter * self , t1_glyph_space_coord w0 , t1_glyph_space_coord w1 , bool horiz , short * index0 , short * index1)"		1073970	0					
ANR	1073972	CompoundStatement		1812:0:72841:73232	1073970	0					
ANR	1073973	IdentifierDeclStatement	"int k = ( horiz ? 0 : 1 ) , i ;"	1812:3:72845:72871	1073970	0	True				
ANR	1073974	IdentifierDecl	k = ( horiz ? 0 : 1 )		1073970	0					
ANR	1073975	IdentifierDeclType	int		1073970	0					
ANR	1073976	Identifier	k		1073970	1					
ANR	1073977	AssignmentExpression	k = ( horiz ? 0 : 1 )		1073970	2		=			
ANR	1073978	Identifier	k		1073970	0					
ANR	1073979	ConditionalExpression	horiz ? 0 : 1		1073970	1					
ANR	1073980	Condition	horiz		1073970	0					
ANR	1073981	Identifier	horiz		1073970	0					
ANR	1073982	PrimaryExpression	0		1073970	1					
ANR	1073983	PrimaryExpression	1		1073970	2					
ANR	1073984	IdentifierDecl	i		1073970	1					
ANR	1073985	IdentifierDeclType	int		1073970	0					
ANR	1073986	Identifier	i		1073970	1					
ANR	1073987	IdentifierDeclStatement	bool index0_set = false ;	1813:4:72877:72900	1073970	1	True				
ANR	1073988	IdentifierDecl	index0_set = false		1073970	0					
ANR	1073989	IdentifierDeclType	bool		1073970	0					
ANR	1073990	Identifier	index0_set		1073970	1					
ANR	1073991	AssignmentExpression	index0_set = false		1073970	2		=			
ANR	1073992	Identifier	false		1073970	0					
ANR	1073993	Identifier	false		1073970	1					
ANR	1073994	ExpressionStatement	* index0 = 0	1815:4:72907:72918	1073970	2	True				
ANR	1073995	AssignmentExpression	* index0 = 0		1073970	0		=			
ANR	1073996	UnaryOperationExpression	* index0		1073970	0					
ANR	1073997	UnaryOperator	*		1073970	0					
ANR	1073998	Identifier	index0		1073970	1					
ANR	1073999	PrimaryExpression	0		1073970	1					
ANR	1074000	ExpressionStatement	* index1 = - 1	1816:4:72924:72936	1073970	3	True				
ANR	1074001	AssignmentExpression	* index1 = - 1		1073970	0		=			
ANR	1074002	UnaryOperationExpression	* index1		1073970	0					
ANR	1074003	UnaryOperator	*		1073970	0					
ANR	1074004	Identifier	index1		1073970	1					
ANR	1074005	UnaryOperationExpression	- 1		1073970	1					
ANR	1074006	UnaryOperator	-		1073970	0					
ANR	1074007	PrimaryExpression	1		1073970	1					
ANR	1074008	ForStatement	for ( i = 0 ; i < self -> stem_snap_count [ k ] ; i ++ )		1073970	4					
ANR	1074009	ForInit	i = 0 ;	1817:9:72947:72952	1073970	0	True				
ANR	1074010	AssignmentExpression	i = 0		1073970	0		=			
ANR	1074011	Identifier	i		1073970	0					
ANR	1074012	PrimaryExpression	0		1073970	1					
ANR	1074013	Condition	i < self -> stem_snap_count [ k ]	1817:16:72954:72981	1073970	1	True				
ANR	1074014	RelationalExpression	i < self -> stem_snap_count [ k ]		1073970	0		<			
ANR	1074015	Identifier	i		1073970	0					
ANR	1074016	ArrayIndexing	self -> stem_snap_count [ k ]		1073970	1					
ANR	1074017	PtrMemberAccess	self -> stem_snap_count		1073970	0					
ANR	1074018	Identifier	self		1073970	0					
ANR	1074019	Identifier	stem_snap_count		1073970	1					
ANR	1074020	Identifier	k		1073970	1					
ANR	1074021	PostIncDecOperationExpression	i ++	1817:46:72984:72986	1073970	2	True				
ANR	1074022	Identifier	i		1073970	0					
ANR	1074023	IncDec	++		1073970	1					
ANR	1074024	CompoundStatement		6:51:147:147	1073970	3					
ANR	1074025	IfStatement	if ( w0 > self -> stem_snap [ k ] [ i ] )		1073970	0					
ANR	1074026	Condition	w0 > self -> stem_snap [ k ] [ i ]	1818:12:73003:73028	1073970	0	True				
ANR	1074027	RelationalExpression	w0 > self -> stem_snap [ k ] [ i ]		1073970	0		>			
ANR	1074028	Identifier	w0		1073970	0					
ANR	1074029	ArrayIndexing	self -> stem_snap [ k ] [ i ]		1073970	1					
ANR	1074030	ArrayIndexing	self -> stem_snap [ k ]		1073970	0					
ANR	1074031	PtrMemberAccess	self -> stem_snap		1073970	0					
ANR	1074032	Identifier	self		1073970	0					
ANR	1074033	Identifier	stem_snap		1073970	1					
ANR	1074034	Identifier	k		1073970	1					
ANR	1074035	Identifier	i		1073970	1					
ANR	1074036	ContinueStatement	continue ;	1819:12:73043:73051	1073970	1	True				
ANR	1074037	IfStatement	if ( ! index0_set )		1073970	1					
ANR	1074038	Condition	! index0_set	1820:12:73065:73075	1073970	0	True				
ANR	1074039	UnaryOperationExpression	! index0_set		1073970	0					
ANR	1074040	UnaryOperator	!		1073970	0					
ANR	1074041	Identifier	index0_set		1073970	1					
ANR	1074042	CompoundStatement		9:25:236:236	1073970	1					
ANR	1074043	ExpressionStatement	index0_set = true	1821:12:73092:73109	1073970	0	True				
ANR	1074044	AssignmentExpression	index0_set = true		1073970	0		=			
ANR	1074045	Identifier	index0_set		1073970	0					
ANR	1074046	Identifier	true		1073970	1					
ANR	1074047	ExpressionStatement	* index0 = i	1822:12:73123:73134	1073970	1	True				
ANR	1074048	AssignmentExpression	* index0 = i		1073970	0		=			
ANR	1074049	UnaryOperationExpression	* index0		1073970	0					
ANR	1074050	UnaryOperator	*		1073970	0					
ANR	1074051	Identifier	index0		1073970	1					
ANR	1074052	Identifier	i		1073970	1					
ANR	1074053	IfStatement	if ( w1 < self -> stem_snap [ k ] [ i ] )		1073970	2					
ANR	1074054	Condition	w1 < self -> stem_snap [ k ] [ i ]	1824:12:73158:73183	1073970	0	True				
ANR	1074055	RelationalExpression	w1 < self -> stem_snap [ k ] [ i ]		1073970	0		<			
ANR	1074056	Identifier	w1		1073970	0					
ANR	1074057	ArrayIndexing	self -> stem_snap [ k ] [ i ]		1073970	1					
ANR	1074058	ArrayIndexing	self -> stem_snap [ k ]		1073970	0					
ANR	1074059	PtrMemberAccess	self -> stem_snap		1073970	0					
ANR	1074060	Identifier	self		1073970	0					
ANR	1074061	Identifier	stem_snap		1073970	1					
ANR	1074062	Identifier	k		1073970	1					
ANR	1074063	Identifier	i		1073970	1					
ANR	1074064	BreakStatement	break ;	1825:12:73198:73203	1073970	1	True				
ANR	1074065	ExpressionStatement	* index1 = i	1826:8:73213:73224	1073970	3	True				
ANR	1074066	AssignmentExpression	* index1 = i		1073970	0		=			
ANR	1074067	UnaryOperationExpression	* index1		1073970	0					
ANR	1074068	UnaryOperator	*		1073970	0					
ANR	1074069	Identifier	index1		1073970	1					
ANR	1074070	Identifier	i		1073970	1					
ANR	1074071	ReturnType	static void		1073970	1					
ANR	1074072	Identifier	t1_hinter__hint_stem_snap_range		1073970	2					
ANR	1074073	ParameterList	"t1_hinter * self , t1_glyph_space_coord w0 , t1_glyph_space_coord w1 , bool horiz , short * index0 , short * index1"		1073970	3					
ANR	1074074	Parameter	t1_hinter * self	1809:44:72651:72666	1073970	0	True				
ANR	1074075	ParameterType	t1_hinter *		1073970	0					
ANR	1074076	Identifier	self		1073970	1					
ANR	1074077	Parameter	t1_glyph_space_coord w0	1810:40:72709:72731	1073970	1	True				
ANR	1074078	ParameterType	t1_glyph_space_coord		1073970	0					
ANR	1074079	Identifier	w0		1073970	1					
ANR	1074080	Parameter	t1_glyph_space_coord w1	1810:65:72734:72756	1073970	2	True				
ANR	1074081	ParameterType	t1_glyph_space_coord		1073970	0					
ANR	1074082	Identifier	w1		1073970	1					
ANR	1074083	Parameter	bool horiz	1810:90:72759:72768	1073970	3	True				
ANR	1074084	ParameterType	bool		1073970	0					
ANR	1074085	Identifier	horiz		1073970	1					
ANR	1074086	Parameter	short * index0	1811:40:72811:72823	1073970	4	True				
ANR	1074087	ParameterType	short *		1073970	0					
ANR	1074088	Identifier	index0		1073970	1					
ANR	1074089	Parameter	short * index1	1811:55:72826:72838	1073970	5	True				
ANR	1074090	ParameterType	short *		1073970	0					
ANR	1074091	Identifier	index1		1073970	1					
ANR	1074092	CFGEntryNode	ENTRY		1073970		True				
ANR	1074093	CFGExitNode	EXIT		1073970		True				
ANR	1074094	Symbol	* * k		1073970						
ANR	1074095	Symbol	self -> stem_snap_count		1073970						
ANR	1074096	Symbol	* * self		1073970						
ANR	1074097	Symbol	* self		1073970						
ANR	1074098	Symbol	self -> stem_snap		1073970						
ANR	1074099	Symbol	false		1073970						
ANR	1074100	Symbol	i		1073970						
ANR	1074101	Symbol	index0_set		1073970						
ANR	1074102	Symbol	k		1073970						
ANR	1074103	Symbol	* self -> stem_snap_count		1073970						
ANR	1074104	Symbol	horiz		1073970						
ANR	1074105	Symbol	* i		1073970						
ANR	1074106	Symbol	* k		1073970						
ANR	1074107	Symbol	index1		1073970						
ANR	1074108	Symbol	* index0		1073970						
ANR	1074109	Symbol	index0		1073970						
ANR	1074110	Symbol	* index1		1073970						
ANR	1074111	Symbol	true		1073970						
ANR	1074112	Symbol	self		1073970						
ANR	1074113	Symbol	w0		1073970						
ANR	1074114	Symbol	* * * self		1073970						
ANR	1074115	Symbol	w1		1073970						
ANR	1074116	Symbol	* self -> stem_snap		1073970						
ANR	1074117	Symbol	* * self -> stem_snap		1073970						
ANR	1074118	Function	t1_hinter__align_to_grid	1830:0:73235:73621							
ANR	1074119	FunctionDef	"t1_hinter__align_to_grid (t1_hinter * self , int32_t unit , t1_glyph_space_coord * x , t1_glyph_space_coord * y , bool align_to_pixels)"		1074118	0					
ANR	1074120	CompoundStatement		1832:0:73388:73621	1074118	0					
ANR	1074121	IfStatement	if ( unit > 0 )		1074118	0					
ANR	1074122	Condition	unit > 0	1832:7:73396:73403	1074118	0	True				
ANR	1074123	RelationalExpression	unit > 0		1074118	0		>			
ANR	1074124	Identifier	unit		1074118	0					
ANR	1074125	PrimaryExpression	0		1074118	1					
ANR	1074126	CompoundStatement		2:8:27:55	1074118	1					
ANR	1074127	IdentifierDeclStatement	"t1_hinter_space_coord dx , dy ;"	1833:8:73416:73444	1074118	0	True				
ANR	1074128	IdentifierDecl	dx		1074118	0					
ANR	1074129	IdentifierDeclType	t1_hinter_space_coord		1074118	0					
ANR	1074130	Identifier	dx		1074118	1					
ANR	1074131	IdentifierDecl	dy		1074118	1					
ANR	1074132	IdentifierDeclType	t1_hinter_space_coord		1074118	0					
ANR	1074133	Identifier	dy		1074118	1					
ANR	1074134	ExpressionStatement	"t1_hinter__align_to_grid__general ( self , unit , * x , * y , & dx , & dy , align_to_pixels , align_to_pixels )"	1835:8:73455:73552	1074118	1	True				
ANR	1074135	CallExpression	"t1_hinter__align_to_grid__general ( self , unit , * x , * y , & dx , & dy , align_to_pixels , align_to_pixels )"		1074118	0					
ANR	1074136	Callee	t1_hinter__align_to_grid__general		1074118	0					
ANR	1074137	Identifier	t1_hinter__align_to_grid__general		1074118	0					
ANR	1074138	ArgumentList	self		1074118	1					
ANR	1074139	Argument	self		1074118	0					
ANR	1074140	Identifier	self		1074118	0					
ANR	1074141	Argument	unit		1074118	1					
ANR	1074142	Identifier	unit		1074118	0					
ANR	1074143	Argument	* x		1074118	2					
ANR	1074144	UnaryOperationExpression	* x		1074118	0					
ANR	1074145	UnaryOperator	*		1074118	0					
ANR	1074146	Identifier	x		1074118	1					
ANR	1074147	Argument	* y		1074118	3					
ANR	1074148	UnaryOperationExpression	* y		1074118	0					
ANR	1074149	UnaryOperator	*		1074118	0					
ANR	1074150	Identifier	y		1074118	1					
ANR	1074151	Argument	& dx		1074118	4					
ANR	1074152	UnaryOperationExpression	& dx		1074118	0					
ANR	1074153	UnaryOperator	&		1074118	0					
ANR	1074154	Identifier	dx		1074118	1					
ANR	1074155	Argument	& dy		1074118	5					
ANR	1074156	UnaryOperationExpression	& dy		1074118	0					
ANR	1074157	UnaryOperator	&		1074118	0					
ANR	1074158	Identifier	dy		1074118	1					
ANR	1074159	Argument	align_to_pixels		1074118	6					
ANR	1074160	Identifier	align_to_pixels		1074118	0					
ANR	1074161	Argument	align_to_pixels		1074118	7					
ANR	1074162	Identifier	align_to_pixels		1074118	0					
ANR	1074163	ExpressionStatement	"t1_hinter__align_to_grid__final ( self , x , y , dx , dy )"	1836:8:73562:73613	1074118	2	True				
ANR	1074164	CallExpression	"t1_hinter__align_to_grid__final ( self , x , y , dx , dy )"		1074118	0					
ANR	1074165	Callee	t1_hinter__align_to_grid__final		1074118	0					
ANR	1074166	Identifier	t1_hinter__align_to_grid__final		1074118	0					
ANR	1074167	ArgumentList	self		1074118	1					
ANR	1074168	Argument	self		1074118	0					
ANR	1074169	Identifier	self		1074118	0					
ANR	1074170	Argument	x		1074118	1					
ANR	1074171	Identifier	x		1074118	0					
ANR	1074172	Argument	y		1074118	2					
ANR	1074173	Identifier	y		1074118	0					
ANR	1074174	Argument	dx		1074118	3					
ANR	1074175	Identifier	dx		1074118	0					
ANR	1074176	Argument	dy		1074118	4					
ANR	1074177	Identifier	dy		1074118	0					
ANR	1074178	ReturnType	static void		1074118	1					
ANR	1074179	Identifier	t1_hinter__align_to_grid		1074118	2					
ANR	1074180	ParameterList	"t1_hinter * self , int32_t unit , t1_glyph_space_coord * x , t1_glyph_space_coord * y , bool align_to_pixels"		1074118	3					
ANR	1074181	Parameter	t1_hinter * self	1830:37:73272:73287	1074118	0	True				
ANR	1074182	ParameterType	t1_hinter *		1074118	0					
ANR	1074183	Identifier	self		1074118	1					
ANR	1074184	Parameter	int32_t unit	1830:55:73290:73301	1074118	1	True				
ANR	1074185	ParameterType	int32_t		1074118	0					
ANR	1074186	Identifier	unit		1074118	1					
ANR	1074187	Parameter	t1_glyph_space_coord * x	1831:12:73316:73338	1074118	2	True				
ANR	1074188	ParameterType	t1_glyph_space_coord *		1074118	0					
ANR	1074189	Identifier	x		1074118	1					
ANR	1074190	Parameter	t1_glyph_space_coord * y	1831:37:73341:73363	1074118	3	True				
ANR	1074191	ParameterType	t1_glyph_space_coord *		1074118	0					
ANR	1074192	Identifier	y		1074118	1					
ANR	1074193	Parameter	bool align_to_pixels	1831:62:73366:73385	1074118	4	True				
ANR	1074194	ParameterType	bool		1074118	0					
ANR	1074195	Identifier	align_to_pixels		1074118	1					
ANR	1074196	CFGEntryNode	ENTRY		1074118		True				
ANR	1074197	CFGExitNode	EXIT		1074118		True				
ANR	1074198	Symbol	unit		1074118						
ANR	1074199	Symbol	* x		1074118						
ANR	1074200	Symbol	align_to_pixels		1074118						
ANR	1074201	Symbol	* y		1074118						
ANR	1074202	Symbol	dx		1074118						
ANR	1074203	Symbol	dy		1074118						
ANR	1074204	Symbol	x		1074118						
ANR	1074205	Symbol	self		1074118						
ANR	1074206	Symbol	y		1074118						
ANR	1074207	Symbol	& dy		1074118						
ANR	1074208	Symbol	& dx		1074118						
ANR	1074209	Function	t1_hinter_compute_stem_snap_range_hv	1840:0:73624:75391							
ANR	1074210	FunctionDef	"t1_hinter_compute_stem_snap_range_hv (t1_hinter * self , int hv)"		1074209	0					
ANR	1074211	CompoundStatement		1841:0:73699:75391	1074209	0					
ANR	1074212	IdentifierDeclStatement	"const enum t1_hint_type T [ ] = { hstem , vstem } ;"	1842:4:73705:73749	1074209	0	True				
ANR	1074213	IdentifierDecl	"T [ ] = { hstem , vstem }"		1074209	0					
ANR	1074214	IdentifierDeclType	const enum t1_hint_type [ ]		1074209	0					
ANR	1074215	Identifier	T		1074209	1					
ANR	1074216	AssignmentExpression	"T [ ] = { hstem , vstem }"		1074209	2		=			
ANR	1074217	Identifier	T		1074209	0					
ANR	1074218	InitializerList	hstem		1074209	1					
ANR	1074219	Identifier	hstem		1074209	0					
ANR	1074220	Identifier	vstem		1074209	1					
ANR	1074221	IdentifierDeclStatement	"int i , j ;"	1843:4:73755:73763	1074209	1	True				
ANR	1074222	IdentifierDecl	i		1074209	0					
ANR	1074223	IdentifierDeclType	int		1074209	0					
ANR	1074224	Identifier	i		1074209	1					
ANR	1074225	IdentifierDecl	j		1074209	1					
ANR	1074226	IdentifierDeclType	int		1074209	0					
ANR	1074227	Identifier	j		1074209	1					
ANR	1074228	IdentifierDeclStatement	enum t1_hint_type t = T [ hv ] ;	1844:4:73769:73796	1074209	2	True				
ANR	1074229	IdentifierDecl	t = T [ hv ]		1074209	0					
ANR	1074230	IdentifierDeclType	enum t1_hint_type		1074209	0					
ANR	1074231	Identifier	t		1074209	1					
ANR	1074232	AssignmentExpression	t = T [ hv ]		1074209	2		=			
ANR	1074233	Identifier	t		1074209	0					
ANR	1074234	ArrayIndexing	T [ hv ]		1074209	1					
ANR	1074235	Identifier	T		1074209	0					
ANR	1074236	Identifier	hv		1074209	1					
ANR	1074237	IdentifierDeclStatement	bool horiz = ( t == hstem ) ;	1845:4:73802:73827	1074209	3	True				
ANR	1074238	IdentifierDecl	horiz = ( t == hstem )		1074209	0					
ANR	1074239	IdentifierDeclType	bool		1074209	0					
ANR	1074240	Identifier	horiz		1074209	1					
ANR	1074241	AssignmentExpression	horiz = ( t == hstem )		1074209	2		=			
ANR	1074242	Identifier	horiz		1074209	0					
ANR	1074243	EqualityExpression	t == hstem		1074209	1		==			
ANR	1074244	Identifier	t		1074209	0					
ANR	1074245	Identifier	hstem		1074209	1					
ANR	1074246	IdentifierDeclStatement	t1_glyph_space_coord pixel_g = ( horiz ? self -> pixel_gh : self -> pixel_gw ) ;	1846:4:73833:73905	1074209	4	True				
ANR	1074247	IdentifierDecl	pixel_g = ( horiz ? self -> pixel_gh : self -> pixel_gw )		1074209	0					
ANR	1074248	IdentifierDeclType	t1_glyph_space_coord		1074209	0					
ANR	1074249	Identifier	pixel_g		1074209	1					
ANR	1074250	AssignmentExpression	pixel_g = ( horiz ? self -> pixel_gh : self -> pixel_gw )		1074209	2		=			
ANR	1074251	Identifier	pixel_g		1074209	0					
ANR	1074252	ConditionalExpression	horiz ? self -> pixel_gh : self -> pixel_gw		1074209	1					
ANR	1074253	Condition	horiz		1074209	0					
ANR	1074254	Identifier	horiz		1074209	0					
ANR	1074255	PtrMemberAccess	self -> pixel_gh		1074209	1					
ANR	1074256	Identifier	self		1074209	0					
ANR	1074257	Identifier	pixel_gh		1074209	1					
ANR	1074258	PtrMemberAccess	self -> pixel_gw		1074209	2					
ANR	1074259	Identifier	self		1074209	0					
ANR	1074260	Identifier	pixel_gw		1074209	1					
ANR	1074261	IdentifierDeclStatement	int stem_snap_count = self -> stem_snap_count [ hv ] ;	1847:4:73911:73958	1074209	5	True				
ANR	1074262	IdentifierDecl	stem_snap_count = self -> stem_snap_count [ hv ]		1074209	0					
ANR	1074263	IdentifierDeclType	int		1074209	0					
ANR	1074264	Identifier	stem_snap_count		1074209	1					
ANR	1074265	AssignmentExpression	stem_snap_count = self -> stem_snap_count [ hv ]		1074209	2		=			
ANR	1074266	Identifier	stem_snap_count		1074209	0					
ANR	1074267	ArrayIndexing	self -> stem_snap_count [ hv ]		1074209	1					
ANR	1074268	PtrMemberAccess	self -> stem_snap_count		1074209	0					
ANR	1074269	Identifier	self		1074209	0					
ANR	1074270	Identifier	stem_snap_count		1074209	1					
ANR	1074271	Identifier	hv		1074209	1					
ANR	1074272	ExpressionStatement	"memset ( self -> stem_snap_vote , 0 , stem_snap_count * sizeof ( self -> stem_snap_vote [ 0 ] ) )"	1849:4:73965:74047	1074209	6	True				
ANR	1074273	CallExpression	"memset ( self -> stem_snap_vote , 0 , stem_snap_count * sizeof ( self -> stem_snap_vote [ 0 ] ) )"		1074209	0					
ANR	1074274	Callee	memset		1074209	0					
ANR	1074275	Identifier	memset		1074209	0					
ANR	1074276	ArgumentList	self -> stem_snap_vote		1074209	1					
ANR	1074277	Argument	self -> stem_snap_vote		1074209	0					
ANR	1074278	PtrMemberAccess	self -> stem_snap_vote		1074209	0					
ANR	1074279	Identifier	self		1074209	0					
ANR	1074280	Identifier	stem_snap_vote		1074209	1					
ANR	1074281	Argument	0		1074209	1					
ANR	1074282	PrimaryExpression	0		1074209	0					
ANR	1074283	Argument	stem_snap_count * sizeof ( self -> stem_snap_vote [ 0 ] )		1074209	2					
ANR	1074284	MultiplicativeExpression	stem_snap_count * sizeof ( self -> stem_snap_vote [ 0 ] )		1074209	0		*			
ANR	1074285	Identifier	stem_snap_count		1074209	0					
ANR	1074286	SizeofExpression	sizeof ( self -> stem_snap_vote [ 0 ] )		1074209	1					
ANR	1074287	Sizeof	sizeof		1074209	0					
ANR	1074288	ArrayIndexing	self -> stem_snap_vote [ 0 ]		1074209	1					
ANR	1074289	PtrMemberAccess	self -> stem_snap_vote		1074209	0					
ANR	1074290	Identifier	self		1074209	0					
ANR	1074291	Identifier	stem_snap_vote		1074209	1					
ANR	1074292	PrimaryExpression	0		1074209	1					
ANR	1074293	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		1074209	7					
ANR	1074294	ForInit	i = 0 ;	1850:9:74058:74063	1074209	0	True				
ANR	1074295	AssignmentExpression	i = 0		1074209	0		=			
ANR	1074296	Identifier	i		1074209	0					
ANR	1074297	PrimaryExpression	0		1074209	1					
ANR	1074298	Condition	i < self -> hint_count	1850:16:74065:74084	1074209	1	True				
ANR	1074299	RelationalExpression	i < self -> hint_count		1074209	0		<			
ANR	1074300	Identifier	i		1074209	0					
ANR	1074301	PtrMemberAccess	self -> hint_count		1074209	1					
ANR	1074302	Identifier	self		1074209	0					
ANR	1074303	Identifier	hint_count		1074209	1					
ANR	1074304	PostIncDecOperationExpression	i ++	1850:38:74087:74089	1074209	2	True				
ANR	1074305	Identifier	i		1074209	0					
ANR	1074306	IncDec	++		1074209	1					
ANR	1074307	CompoundStatement		10:43:392:392	1074209	3					
ANR	1074308	IfStatement	if ( self -> hint [ i ] . type == t )		1074209	0					
ANR	1074309	Condition	self -> hint [ i ] . type == t	1851:12:74106:74128	1074209	0	True				
ANR	1074310	EqualityExpression	self -> hint [ i ] . type == t		1074209	0		==			
ANR	1074311	MemberAccess	self -> hint [ i ] . type		1074209	0					
ANR	1074312	ArrayIndexing	self -> hint [ i ]		1074209	0					
ANR	1074313	PtrMemberAccess	self -> hint		1074209	0					
ANR	1074314	Identifier	self		1074209	0					
ANR	1074315	Identifier	hint		1074209	1					
ANR	1074316	Identifier	i		1074209	1					
ANR	1074317	Identifier	type		1074209	1					
ANR	1074318	Identifier	t		1074209	1					
ANR	1074319	CompoundStatement		12:12:445:515	1074209	1					
ANR	1074320	IdentifierDeclStatement	t1_glyph_space_coord gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 ) ;	1852:12:74145:74215	1074209	0	True				
ANR	1074321	IdentifierDecl	gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		1074209	0					
ANR	1074322	IdentifierDeclType	t1_glyph_space_coord		1074209	0					
ANR	1074323	Identifier	gw		1074209	1					
ANR	1074324	AssignmentExpression	gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		1074209	2		=			
ANR	1074325	Identifier	gw		1074209	0					
ANR	1074326	CallExpression	any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		1074209	1					
ANR	1074327	Callee	any_abs		1074209	0					
ANR	1074328	Identifier	any_abs		1074209	0					
ANR	1074329	ArgumentList	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		1074209	1					
ANR	1074330	Argument	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		1074209	0					
ANR	1074331	AdditiveExpression	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		1074209	0		-			
ANR	1074332	MemberAccess	self -> hint [ i ] . g1		1074209	0					
ANR	1074333	ArrayIndexing	self -> hint [ i ]		1074209	0					
ANR	1074334	PtrMemberAccess	self -> hint		1074209	0					
ANR	1074335	Identifier	self		1074209	0					
ANR	1074336	Identifier	hint		1074209	1					
ANR	1074337	Identifier	i		1074209	1					
ANR	1074338	Identifier	g1		1074209	1					
ANR	1074339	MemberAccess	self -> hint [ i ] . g0		1074209	1					
ANR	1074340	ArrayIndexing	self -> hint [ i ]		1074209	0					
ANR	1074341	PtrMemberAccess	self -> hint		1074209	0					
ANR	1074342	Identifier	self		1074209	0					
ANR	1074343	Identifier	hint		1074209	1					
ANR	1074344	Identifier	i		1074209	1					
ANR	1074345	Identifier	g0		1074209	1					
ANR	1074346	ExpressionStatement	"t1_hinter__hint_stem_snap_range ( self , gw - pixel_g + 1 , gw + pixel_g - 1 , horiz , & self -> hint [ i ] . stem_snap_index0 , & self -> hint [ i ] . stem_snap_index1 )"	1854:12:74230:74392	1074209	1	True				
ANR	1074347	CallExpression	"t1_hinter__hint_stem_snap_range ( self , gw - pixel_g + 1 , gw + pixel_g - 1 , horiz , & self -> hint [ i ] . stem_snap_index0 , & self -> hint [ i ] . stem_snap_index1 )"		1074209	0					
ANR	1074348	Callee	t1_hinter__hint_stem_snap_range		1074209	0					
ANR	1074349	Identifier	t1_hinter__hint_stem_snap_range		1074209	0					
ANR	1074350	ArgumentList	self		1074209	1					
ANR	1074351	Argument	self		1074209	0					
ANR	1074352	Identifier	self		1074209	0					
ANR	1074353	Argument	gw - pixel_g + 1		1074209	1					
ANR	1074354	AdditiveExpression	gw - pixel_g + 1		1074209	0		-			
ANR	1074355	Identifier	gw		1074209	0					
ANR	1074356	AdditiveExpression	pixel_g + 1		1074209	1		+			
ANR	1074357	Identifier	pixel_g		1074209	0					
ANR	1074358	PrimaryExpression	1		1074209	1					
ANR	1074359	Argument	gw + pixel_g - 1		1074209	2					
ANR	1074360	AdditiveExpression	gw + pixel_g - 1		1074209	0		+			
ANR	1074361	Identifier	gw		1074209	0					
ANR	1074362	AdditiveExpression	pixel_g - 1		1074209	1		-			
ANR	1074363	Identifier	pixel_g		1074209	0					
ANR	1074364	PrimaryExpression	1		1074209	1					
ANR	1074365	Argument	horiz		1074209	3					
ANR	1074366	Identifier	horiz		1074209	0					
ANR	1074367	Argument	& self -> hint [ i ] . stem_snap_index0		1074209	4					
ANR	1074368	UnaryOperationExpression	& self -> hint [ i ] . stem_snap_index0		1074209	0					
ANR	1074369	UnaryOperator	&		1074209	0					
ANR	1074370	MemberAccess	self -> hint [ i ] . stem_snap_index0		1074209	1					
ANR	1074371	ArrayIndexing	self -> hint [ i ]		1074209	0					
ANR	1074372	PtrMemberAccess	self -> hint		1074209	0					
ANR	1074373	Identifier	self		1074209	0					
ANR	1074374	Identifier	hint		1074209	1					
ANR	1074375	Identifier	i		1074209	1					
ANR	1074376	Identifier	stem_snap_index0		1074209	1					
ANR	1074377	Argument	& self -> hint [ i ] . stem_snap_index1		1074209	5					
ANR	1074378	UnaryOperationExpression	& self -> hint [ i ] . stem_snap_index1		1074209	0					
ANR	1074379	UnaryOperator	&		1074209	0					
ANR	1074380	MemberAccess	self -> hint [ i ] . stem_snap_index1		1074209	1					
ANR	1074381	ArrayIndexing	self -> hint [ i ]		1074209	0					
ANR	1074382	PtrMemberAccess	self -> hint		1074209	0					
ANR	1074383	Identifier	self		1074209	0					
ANR	1074384	Identifier	hint		1074209	1					
ANR	1074385	Identifier	i		1074209	1					
ANR	1074386	Identifier	stem_snap_index1		1074209	1					
ANR	1074387	ForStatement	for ( j = self -> hint [ i ] . stem_snap_index0 ; j <= self -> hint [ i ] . stem_snap_index1 ; j ++ )		1074209	2					
ANR	1074388	ForInit	j = self -> hint [ i ] . stem_snap_index0 ;	1856:17:74411:74445	1074209	0	True				
ANR	1074389	AssignmentExpression	j = self -> hint [ i ] . stem_snap_index0		1074209	0		=			
ANR	1074390	Identifier	j		1074209	0					
ANR	1074391	MemberAccess	self -> hint [ i ] . stem_snap_index0		1074209	1					
ANR	1074392	ArrayIndexing	self -> hint [ i ]		1074209	0					
ANR	1074393	PtrMemberAccess	self -> hint		1074209	0					
ANR	1074394	Identifier	self		1074209	0					
ANR	1074395	Identifier	hint		1074209	1					
ANR	1074396	Identifier	i		1074209	1					
ANR	1074397	Identifier	stem_snap_index0		1074209	1					
ANR	1074398	Condition	j <= self -> hint [ i ] . stem_snap_index1	1856:53:74447:74481	1074209	1	True				
ANR	1074399	RelationalExpression	j <= self -> hint [ i ] . stem_snap_index1		1074209	0		<=			
ANR	1074400	Identifier	j		1074209	0					
ANR	1074401	MemberAccess	self -> hint [ i ] . stem_snap_index1		1074209	1					
ANR	1074402	ArrayIndexing	self -> hint [ i ]		1074209	0					
ANR	1074403	PtrMemberAccess	self -> hint		1074209	0					
ANR	1074404	Identifier	self		1074209	0					
ANR	1074405	Identifier	hint		1074209	1					
ANR	1074406	Identifier	i		1074209	1					
ANR	1074407	Identifier	stem_snap_index1		1074209	1					
ANR	1074408	PostIncDecOperationExpression	j ++	1856:90:74484:74486	1074209	2	True				
ANR	1074409	Identifier	j		1074209	0					
ANR	1074410	IncDec	++		1074209	1					
ANR	1074411	ExpressionStatement	self -> stem_snap_vote [ j ] ++	1857:16:74505:74530	1074209	3	True				
ANR	1074412	PostIncDecOperationExpression	self -> stem_snap_vote [ j ] ++		1074209	0					
ANR	1074413	ArrayIndexing	self -> stem_snap_vote [ j ]		1074209	0					
ANR	1074414	PtrMemberAccess	self -> stem_snap_vote		1074209	0					
ANR	1074415	Identifier	self		1074209	0					
ANR	1074416	Identifier	stem_snap_vote		1074209	1					
ANR	1074417	Identifier	j		1074209	1					
ANR	1074418	IncDec	++		1074209	1					
ANR	1074419	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		1074209	8					
ANR	1074420	ForInit	i = 0 ;	1860:9:74557:74562	1074209	0	True				
ANR	1074421	AssignmentExpression	i = 0		1074209	0		=			
ANR	1074422	Identifier	i		1074209	0					
ANR	1074423	PrimaryExpression	0		1074209	1					
ANR	1074424	Condition	i < self -> hint_count	1860:16:74564:74583	1074209	1	True				
ANR	1074425	RelationalExpression	i < self -> hint_count		1074209	0		<			
ANR	1074426	Identifier	i		1074209	0					
ANR	1074427	PtrMemberAccess	self -> hint_count		1074209	1					
ANR	1074428	Identifier	self		1074209	0					
ANR	1074429	Identifier	hint_count		1074209	1					
ANR	1074430	PostIncDecOperationExpression	i ++	1860:38:74586:74588	1074209	2	True				
ANR	1074431	Identifier	i		1074209	0					
ANR	1074432	IncDec	++		1074209	1					
ANR	1074433	CompoundStatement		20:43:891:891	1074209	3					
ANR	1074434	IfStatement	if ( self -> hint [ i ] . type == t )		1074209	0					
ANR	1074435	Condition	self -> hint [ i ] . type == t	1861:12:74605:74627	1074209	0	True				
ANR	1074436	EqualityExpression	self -> hint [ i ] . type == t		1074209	0		==			
ANR	1074437	MemberAccess	self -> hint [ i ] . type		1074209	0					
ANR	1074438	ArrayIndexing	self -> hint [ i ]		1074209	0					
ANR	1074439	PtrMemberAccess	self -> hint		1074209	0					
ANR	1074440	Identifier	self		1074209	0					
ANR	1074441	Identifier	hint		1074209	1					
ANR	1074442	Identifier	i		1074209	1					
ANR	1074443	Identifier	type		1074209	1					
ANR	1074444	Identifier	t		1074209	1					
ANR	1074445	CompoundStatement		23:12:997:1067	1074209	1					
ANR	1074446	IdentifierDeclStatement	"int m = 0 , mj = - 1 , d , md = pixel_g * 2 ;"	1862:12:74644:74683	1074209	0	True				
ANR	1074447	IdentifierDecl	m = 0		1074209	0					
ANR	1074448	IdentifierDeclType	int		1074209	0					
ANR	1074449	Identifier	m		1074209	1					
ANR	1074450	AssignmentExpression	m = 0		1074209	2		=			
ANR	1074451	Identifier	m		1074209	0					
ANR	1074452	PrimaryExpression	0		1074209	1					
ANR	1074453	IdentifierDecl	mj = - 1		1074209	1					
ANR	1074454	IdentifierDeclType	int		1074209	0					
ANR	1074455	Identifier	mj		1074209	1					
ANR	1074456	AssignmentExpression	mj = - 1		1074209	2		=			
ANR	1074457	Identifier	mj		1074209	0					
ANR	1074458	UnaryOperationExpression	- 1		1074209	1					
ANR	1074459	UnaryOperator	-		1074209	0					
ANR	1074460	PrimaryExpression	1		1074209	1					
ANR	1074461	IdentifierDecl	d		1074209	2					
ANR	1074462	IdentifierDeclType	int		1074209	0					
ANR	1074463	Identifier	d		1074209	1					
ANR	1074464	IdentifierDecl	md = pixel_g * 2		1074209	3					
ANR	1074465	IdentifierDeclType	int		1074209	0					
ANR	1074466	Identifier	md		1074209	1					
ANR	1074467	AssignmentExpression	md = pixel_g * 2		1074209	2		=			
ANR	1074468	Identifier	md		1074209	0					
ANR	1074469	MultiplicativeExpression	pixel_g * 2		1074209	1		*			
ANR	1074470	Identifier	pixel_g		1074209	0					
ANR	1074471	PrimaryExpression	2		1074209	1					
ANR	1074472	IdentifierDeclStatement	t1_glyph_space_coord gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 ) ;	1863:12:74697:74767	1074209	1	True				
ANR	1074473	IdentifierDecl	gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		1074209	0					
ANR	1074474	IdentifierDeclType	t1_glyph_space_coord		1074209	0					
ANR	1074475	Identifier	gw		1074209	1					
ANR	1074476	AssignmentExpression	gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		1074209	2		=			
ANR	1074477	Identifier	gw		1074209	0					
ANR	1074478	CallExpression	any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		1074209	1					
ANR	1074479	Callee	any_abs		1074209	0					
ANR	1074480	Identifier	any_abs		1074209	0					
ANR	1074481	ArgumentList	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		1074209	1					
ANR	1074482	Argument	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		1074209	0					
ANR	1074483	AdditiveExpression	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		1074209	0		-			
ANR	1074484	MemberAccess	self -> hint [ i ] . g1		1074209	0					
ANR	1074485	ArrayIndexing	self -> hint [ i ]		1074209	0					
ANR	1074486	PtrMemberAccess	self -> hint		1074209	0					
ANR	1074487	Identifier	self		1074209	0					
ANR	1074488	Identifier	hint		1074209	1					
ANR	1074489	Identifier	i		1074209	1					
ANR	1074490	Identifier	g1		1074209	1					
ANR	1074491	MemberAccess	self -> hint [ i ] . g0		1074209	1					
ANR	1074492	ArrayIndexing	self -> hint [ i ]		1074209	0					
ANR	1074493	PtrMemberAccess	self -> hint		1074209	0					
ANR	1074494	Identifier	self		1074209	0					
ANR	1074495	Identifier	hint		1074209	1					
ANR	1074496	Identifier	i		1074209	1					
ANR	1074497	Identifier	g0		1074209	1					
ANR	1074498	ForStatement	for ( j = self -> hint [ i ] . stem_snap_index0 ; j <= self -> hint [ i ] . stem_snap_index1 ; j ++ )		1074209	2					
ANR	1074499	ForInit	j = self -> hint [ i ] . stem_snap_index0 ;	1865:17:74787:74821	1074209	0	True				
ANR	1074500	AssignmentExpression	j = self -> hint [ i ] . stem_snap_index0		1074209	0		=			
ANR	1074501	Identifier	j		1074209	0					
ANR	1074502	MemberAccess	self -> hint [ i ] . stem_snap_index0		1074209	1					
ANR	1074503	ArrayIndexing	self -> hint [ i ]		1074209	0					
ANR	1074504	PtrMemberAccess	self -> hint		1074209	0					
ANR	1074505	Identifier	self		1074209	0					
ANR	1074506	Identifier	hint		1074209	1					
ANR	1074507	Identifier	i		1074209	1					
ANR	1074508	Identifier	stem_snap_index0		1074209	1					
ANR	1074509	Condition	j <= self -> hint [ i ] . stem_snap_index1	1865:53:74823:74857	1074209	1	True				
ANR	1074510	RelationalExpression	j <= self -> hint [ i ] . stem_snap_index1		1074209	0		<=			
ANR	1074511	Identifier	j		1074209	0					
ANR	1074512	MemberAccess	self -> hint [ i ] . stem_snap_index1		1074209	1					
ANR	1074513	ArrayIndexing	self -> hint [ i ]		1074209	0					
ANR	1074514	PtrMemberAccess	self -> hint		1074209	0					
ANR	1074515	Identifier	self		1074209	0					
ANR	1074516	Identifier	hint		1074209	1					
ANR	1074517	Identifier	i		1074209	1					
ANR	1074518	Identifier	stem_snap_index1		1074209	1					
ANR	1074519	PostIncDecOperationExpression	j ++	1865:90:74860:74862	1074209	2	True				
ANR	1074520	Identifier	j		1074209	0					
ANR	1074521	IncDec	++		1074209	1					
ANR	1074522	CompoundStatement		25:95:1165:1165	1074209	3					
ANR	1074523	IfStatement	if ( m < self -> stem_snap_vote [ j ] )		1074209	0					
ANR	1074524	Condition	m < self -> stem_snap_vote [ j ]	1866:20:74887:74913	1074209	0	True				
ANR	1074525	RelationalExpression	m < self -> stem_snap_vote [ j ]		1074209	0		<			
ANR	1074526	Identifier	m		1074209	0					
ANR	1074527	ArrayIndexing	self -> stem_snap_vote [ j ]		1074209	1					
ANR	1074528	PtrMemberAccess	self -> stem_snap_vote		1074209	0					
ANR	1074529	Identifier	self		1074209	0					
ANR	1074530	Identifier	stem_snap_vote		1074209	1					
ANR	1074531	Identifier	j		1074209	1					
ANR	1074532	CompoundStatement		26:49:1216:1216	1074209	1					
ANR	1074533	ExpressionStatement	m = self -> stem_snap_vote [ j ]	1867:20:74938:74965	1074209	0	True				
ANR	1074534	AssignmentExpression	m = self -> stem_snap_vote [ j ]		1074209	0		=			
ANR	1074535	Identifier	m		1074209	0					
ANR	1074536	ArrayIndexing	self -> stem_snap_vote [ j ]		1074209	1					
ANR	1074537	PtrMemberAccess	self -> stem_snap_vote		1074209	0					
ANR	1074538	Identifier	self		1074209	0					
ANR	1074539	Identifier	stem_snap_vote		1074209	1					
ANR	1074540	Identifier	j		1074209	1					
ANR	1074541	ExpressionStatement	mj = j	1868:20:74987:74993	1074209	1	True				
ANR	1074542	AssignmentExpression	mj = j		1074209	0		=			
ANR	1074543	Identifier	mj		1074209	0					
ANR	1074544	Identifier	j		1074209	1					
ANR	1074545	ExpressionStatement	md = any_abs ( gw - pixel_g / 5 - self -> stem_snap [ hv ] [ mj ] )	1869:20:75015:75071	1074209	2	True				
ANR	1074546	AssignmentExpression	md = any_abs ( gw - pixel_g / 5 - self -> stem_snap [ hv ] [ mj ] )		1074209	0		=			
ANR	1074547	Identifier	md		1074209	0					
ANR	1074548	CallExpression	any_abs ( gw - pixel_g / 5 - self -> stem_snap [ hv ] [ mj ] )		1074209	1					
ANR	1074549	Callee	any_abs		1074209	0					
ANR	1074550	Identifier	any_abs		1074209	0					
ANR	1074551	ArgumentList	gw - pixel_g / 5 - self -> stem_snap [ hv ] [ mj ]		1074209	1					
ANR	1074552	Argument	gw - pixel_g / 5 - self -> stem_snap [ hv ] [ mj ]		1074209	0					
ANR	1074553	AdditiveExpression	gw - pixel_g / 5 - self -> stem_snap [ hv ] [ mj ]		1074209	0		-			
ANR	1074554	Identifier	gw		1074209	0					
ANR	1074555	AdditiveExpression	pixel_g / 5 - self -> stem_snap [ hv ] [ mj ]		1074209	1		-			
ANR	1074556	MultiplicativeExpression	pixel_g / 5		1074209	0		/			
ANR	1074557	Identifier	pixel_g		1074209	0					
ANR	1074558	PrimaryExpression	5		1074209	1					
ANR	1074559	ArrayIndexing	self -> stem_snap [ hv ] [ mj ]		1074209	1					
ANR	1074560	ArrayIndexing	self -> stem_snap [ hv ]		1074209	0					
ANR	1074561	PtrMemberAccess	self -> stem_snap		1074209	0					
ANR	1074562	Identifier	self		1074209	0					
ANR	1074563	Identifier	stem_snap		1074209	1					
ANR	1074564	Identifier	hv		1074209	1					
ANR	1074565	Identifier	mj		1074209	1					
ANR	1074566	ElseStatement	else		1074209	0					
ANR	1074567	CompoundStatement		30:23:1396:1396	1074209	0					
ANR	1074568	ExpressionStatement	d = any_abs ( gw - pixel_g / 5 - self -> stem_snap [ hv ] [ j ] )	1871:20:75118:75172	1074209	0	True				
ANR	1074569	AssignmentExpression	d = any_abs ( gw - pixel_g / 5 - self -> stem_snap [ hv ] [ j ] )		1074209	0		=			
ANR	1074570	Identifier	d		1074209	0					
ANR	1074571	CallExpression	any_abs ( gw - pixel_g / 5 - self -> stem_snap [ hv ] [ j ] )		1074209	1					
ANR	1074572	Callee	any_abs		1074209	0					
ANR	1074573	Identifier	any_abs		1074209	0					
ANR	1074574	ArgumentList	gw - pixel_g / 5 - self -> stem_snap [ hv ] [ j ]		1074209	1					
ANR	1074575	Argument	gw - pixel_g / 5 - self -> stem_snap [ hv ] [ j ]		1074209	0					
ANR	1074576	AdditiveExpression	gw - pixel_g / 5 - self -> stem_snap [ hv ] [ j ]		1074209	0		-			
ANR	1074577	Identifier	gw		1074209	0					
ANR	1074578	AdditiveExpression	pixel_g / 5 - self -> stem_snap [ hv ] [ j ]		1074209	1		-			
ANR	1074579	MultiplicativeExpression	pixel_g / 5		1074209	0		/			
ANR	1074580	Identifier	pixel_g		1074209	0					
ANR	1074581	PrimaryExpression	5		1074209	1					
ANR	1074582	ArrayIndexing	self -> stem_snap [ hv ] [ j ]		1074209	1					
ANR	1074583	ArrayIndexing	self -> stem_snap [ hv ]		1074209	0					
ANR	1074584	PtrMemberAccess	self -> stem_snap		1074209	0					
ANR	1074585	Identifier	self		1074209	0					
ANR	1074586	Identifier	stem_snap		1074209	1					
ANR	1074587	Identifier	hv		1074209	1					
ANR	1074588	Identifier	j		1074209	1					
ANR	1074589	IfStatement	if ( md > d )		1074209	1					
ANR	1074590	Condition	md > d	1872:24:75198:75203	1074209	0	True				
ANR	1074591	RelationalExpression	md > d		1074209	0		>			
ANR	1074592	Identifier	md		1074209	0					
ANR	1074593	Identifier	d		1074209	1					
ANR	1074594	CompoundStatement		32:32:1506:1506	1074209	1					
ANR	1074595	ExpressionStatement	md = d	1873:24:75232:75238	1074209	0	True				
ANR	1074596	AssignmentExpression	md = d		1074209	0		=			
ANR	1074597	Identifier	md		1074209	0					
ANR	1074598	Identifier	d		1074209	1					
ANR	1074599	ExpressionStatement	mj = j	1874:24:75264:75270	1074209	1	True				
ANR	1074600	AssignmentExpression	mj = j		1074209	0		=			
ANR	1074601	Identifier	mj		1074209	0					
ANR	1074602	Identifier	j		1074209	1					
ANR	1074603	ExpressionStatement	self -> hint [ i ] . stem_snap_index0 = mj	1878:12:75338:75373	1074209	3	True				
ANR	1074604	AssignmentExpression	self -> hint [ i ] . stem_snap_index0 = mj		1074209	0		=			
ANR	1074605	MemberAccess	self -> hint [ i ] . stem_snap_index0		1074209	0					
ANR	1074606	ArrayIndexing	self -> hint [ i ]		1074209	0					
ANR	1074607	PtrMemberAccess	self -> hint		1074209	0					
ANR	1074608	Identifier	self		1074209	0					
ANR	1074609	Identifier	hint		1074209	1					
ANR	1074610	Identifier	i		1074209	1					
ANR	1074611	Identifier	stem_snap_index0		1074209	1					
ANR	1074612	Identifier	mj		1074209	1					
ANR	1074613	ReturnType	static void		1074209	1					
ANR	1074614	Identifier	t1_hinter_compute_stem_snap_range_hv		1074209	2					
ANR	1074615	ParameterList	"t1_hinter * self , int hv"		1074209	3					
ANR	1074616	Parameter	t1_hinter * self	1840:49:73673:73688	1074209	0	True				
ANR	1074617	ParameterType	t1_hinter *		1074209	0					
ANR	1074618	Identifier	self		1074209	1					
ANR	1074619	Parameter	int hv	1840:67:73691:73696	1074209	1	True				
ANR	1074620	ParameterType	int		1074209	0					
ANR	1074621	Identifier	hv		1074209	1					
ANR	1074622	CFGEntryNode	ENTRY		1074209		True				
ANR	1074623	CFGExitNode	EXIT		1074209		True				
ANR	1074624	Symbol	* mj		1074209						
ANR	1074625	Symbol	vstem		1074209						
ANR	1074626	Symbol	* self -> stem_snap_count		1074209						
ANR	1074627	Symbol	hv		1074209						
ANR	1074628	Symbol	self -> hint [ i ] . stem_snap_index0		1074209						
ANR	1074629	Symbol	self -> hint [ i ] . stem_snap_index1		1074209						
ANR	1074630	Symbol	horiz		1074209						
ANR	1074631	Symbol	self -> pixel_gw		1074209						
ANR	1074632	Symbol	* self -> hint		1074209						
ANR	1074633	Symbol	T		1074209						
ANR	1074634	Symbol	* hv		1074209						
ANR	1074635	Symbol	md		1074209						
ANR	1074636	Symbol	any_abs		1074209						
ANR	1074637	Symbol	* * * self		1074209						
ANR	1074638	Symbol	* self -> stem_snap		1074209						
ANR	1074639	Symbol	* self -> stem_snap_vote		1074209						
ANR	1074640	Symbol	mj		1074209						
ANR	1074641	Symbol	hstem		1074209						
ANR	1074642	Symbol	* T		1074209						
ANR	1074643	Symbol	pixel_g		1074209						
ANR	1074644	Symbol	self -> pixel_gh		1074209						
ANR	1074645	Symbol	self -> stem_snap_count		1074209						
ANR	1074646	Symbol	self -> hint [ i ] . type		1074209						
ANR	1074647	Symbol	self -> hint		1074209						
ANR	1074648	Symbol	d		1074209						
ANR	1074649	Symbol	* * self		1074209						
ANR	1074650	Symbol	* self		1074209						
ANR	1074651	Symbol	self -> stem_snap		1074209						
ANR	1074652	Symbol	stem_snap_count		1074209						
ANR	1074653	Symbol	self -> hint [ i ] . g1		1074209						
ANR	1074654	Symbol	& self -> hint [ i ] . stem_snap_index1		1074209						
ANR	1074655	Symbol	i		1074209						
ANR	1074656	Symbol	self -> hint [ i ] . g0		1074209						
ANR	1074657	Symbol	& self -> hint [ i ] . stem_snap_index0		1074209						
ANR	1074658	Symbol	j		1074209						
ANR	1074659	Symbol	m		1074209						
ANR	1074660	Symbol	gw		1074209						
ANR	1074661	Symbol	self -> hint_count		1074209						
ANR	1074662	Symbol	* i		1074209						
ANR	1074663	Symbol	t		1074209						
ANR	1074664	Symbol	* j		1074209						
ANR	1074665	Symbol	self -> stem_snap_vote		1074209						
ANR	1074666	Symbol	* * hv		1074209						
ANR	1074667	Symbol	self		1074209						
ANR	1074668	Symbol	* * self -> stem_snap		1074209						
ANR	1074669	Function	t1_hinter_compute_stem_snap_range	1883:0:75394:75646							
ANR	1074670	FunctionDef	t1_hinter_compute_stem_snap_range (t1_hinter * self)		1074669	0					
ANR	1074671	CompoundStatement		1884:0:75458:75646	1074669	0					
ANR	1074672	IfStatement	if ( self -> stem_snap_count [ 0 ] > 1 )		1074669	0					
ANR	1074673	Condition	self -> stem_snap_count [ 0 ] > 1	1885:8:75468:75495	1074669	0	True				
ANR	1074674	RelationalExpression	self -> stem_snap_count [ 0 ] > 1		1074669	0		>			
ANR	1074675	ArrayIndexing	self -> stem_snap_count [ 0 ]		1074669	0					
ANR	1074676	PtrMemberAccess	self -> stem_snap_count		1074669	0					
ANR	1074677	Identifier	self		1074669	0					
ANR	1074678	Identifier	stem_snap_count		1074669	1					
ANR	1074679	PrimaryExpression	0		1074669	1					
ANR	1074680	PrimaryExpression	1		1074669	1					
ANR	1074681	ExpressionStatement	"t1_hinter_compute_stem_snap_range_hv ( self , 0 )"	1886:8:75506:75551	1074669	1	True				
ANR	1074682	CallExpression	"t1_hinter_compute_stem_snap_range_hv ( self , 0 )"		1074669	0					
ANR	1074683	Callee	t1_hinter_compute_stem_snap_range_hv		1074669	0					
ANR	1074684	Identifier	t1_hinter_compute_stem_snap_range_hv		1074669	0					
ANR	1074685	ArgumentList	self		1074669	1					
ANR	1074686	Argument	self		1074669	0					
ANR	1074687	Identifier	self		1074669	0					
ANR	1074688	Argument	0		1074669	1					
ANR	1074689	PrimaryExpression	0		1074669	0					
ANR	1074690	IfStatement	if ( self -> stem_snap_count [ 1 ] > 1 )		1074669	1					
ANR	1074691	Condition	self -> stem_snap_count [ 1 ] > 1	1887:8:75561:75588	1074669	0	True				
ANR	1074692	RelationalExpression	self -> stem_snap_count [ 1 ] > 1		1074669	0		>			
ANR	1074693	ArrayIndexing	self -> stem_snap_count [ 1 ]		1074669	0					
ANR	1074694	PtrMemberAccess	self -> stem_snap_count		1074669	0					
ANR	1074695	Identifier	self		1074669	0					
ANR	1074696	Identifier	stem_snap_count		1074669	1					
ANR	1074697	PrimaryExpression	1		1074669	1					
ANR	1074698	PrimaryExpression	1		1074669	1					
ANR	1074699	ExpressionStatement	"t1_hinter_compute_stem_snap_range_hv ( self , 1 )"	1888:8:75599:75644	1074669	1	True				
ANR	1074700	CallExpression	"t1_hinter_compute_stem_snap_range_hv ( self , 1 )"		1074669	0					
ANR	1074701	Callee	t1_hinter_compute_stem_snap_range_hv		1074669	0					
ANR	1074702	Identifier	t1_hinter_compute_stem_snap_range_hv		1074669	0					
ANR	1074703	ArgumentList	self		1074669	1					
ANR	1074704	Argument	self		1074669	0					
ANR	1074705	Identifier	self		1074669	0					
ANR	1074706	Argument	1		1074669	1					
ANR	1074707	PrimaryExpression	1		1074669	0					
ANR	1074708	ReturnType	static void		1074669	1					
ANR	1074709	Identifier	t1_hinter_compute_stem_snap_range		1074669	2					
ANR	1074710	ParameterList	t1_hinter * self		1074669	3					
ANR	1074711	Parameter	t1_hinter * self	1883:46:75440:75455	1074669	0	True				
ANR	1074712	ParameterType	t1_hinter *		1074669	0					
ANR	1074713	Identifier	self		1074669	1					
ANR	1074714	CFGEntryNode	ENTRY		1074669		True				
ANR	1074715	CFGExitNode	EXIT		1074669		True				
ANR	1074716	Symbol	self -> stem_snap_count		1074669						
ANR	1074717	Symbol	* * self		1074669						
ANR	1074718	Symbol	* self		1074669						
ANR	1074719	Symbol	self		1074669						
ANR	1074720	Symbol	* self -> stem_snap_count		1074669						
ANR	1074721	Function	t1_hinter__align_stem_width	1891:0:75649:76478							
ANR	1074722	FunctionDef	"t1_hinter__align_stem_width (t1_hinter * self , t1_glyph_space_coord * pgw , const t1_hint * hint)"		1074721	0					
ANR	1074723	CompoundStatement		1892:0:75755:76478	1074721	0					
ANR	1074724	IdentifierDeclStatement	bool horiz = ( hint -> type == hstem ) ;	1893:4:75761:75795	1074721	0	True				
ANR	1074725	IdentifierDecl	horiz = ( hint -> type == hstem )		1074721	0					
ANR	1074726	IdentifierDeclType	bool		1074721	0					
ANR	1074727	Identifier	horiz		1074721	1					
ANR	1074728	AssignmentExpression	horiz = ( hint -> type == hstem )		1074721	2		=			
ANR	1074729	Identifier	horiz		1074721	0					
ANR	1074730	EqualityExpression	hint -> type == hstem		1074721	1		==			
ANR	1074731	PtrMemberAccess	hint -> type		1074721	0					
ANR	1074732	Identifier	hint		1074721	0					
ANR	1074733	Identifier	type		1074721	1					
ANR	1074734	Identifier	hstem		1074721	1					
ANR	1074735	IdentifierDeclStatement	t1_glyph_space_coord gw = * pgw ;	1894:4:75801:75831	1074721	1	True				
ANR	1074736	IdentifierDecl	gw = * pgw		1074721	0					
ANR	1074737	IdentifierDeclType	t1_glyph_space_coord		1074721	0					
ANR	1074738	Identifier	gw		1074721	1					
ANR	1074739	AssignmentExpression	gw = * pgw		1074721	2		=			
ANR	1074740	Identifier	gw		1074721	0					
ANR	1074741	UnaryOperationExpression	* pgw		1074721	1					
ANR	1074742	UnaryOperator	*		1074721	0					
ANR	1074743	Identifier	pgw		1074721	1					
ANR	1074744	IdentifierDeclStatement	t1_glyph_space_coord pixel_g = ( horiz ? self -> pixel_gh : self -> pixel_gw ) ;	1895:4:75837:75909	1074721	2	True				
ANR	1074745	IdentifierDecl	pixel_g = ( horiz ? self -> pixel_gh : self -> pixel_gw )		1074721	0					
ANR	1074746	IdentifierDeclType	t1_glyph_space_coord		1074721	0					
ANR	1074747	Identifier	pixel_g		1074721	1					
ANR	1074748	AssignmentExpression	pixel_g = ( horiz ? self -> pixel_gh : self -> pixel_gw )		1074721	2		=			
ANR	1074749	Identifier	pixel_g		1074721	0					
ANR	1074750	ConditionalExpression	horiz ? self -> pixel_gh : self -> pixel_gw		1074721	1					
ANR	1074751	Condition	horiz		1074721	0					
ANR	1074752	Identifier	horiz		1074721	0					
ANR	1074753	PtrMemberAccess	self -> pixel_gh		1074721	1					
ANR	1074754	Identifier	self		1074721	0					
ANR	1074755	Identifier	pixel_gh		1074721	1					
ANR	1074756	PtrMemberAccess	self -> pixel_gw		1074721	2					
ANR	1074757	Identifier	self		1074721	0					
ANR	1074758	Identifier	pixel_gw		1074721	1					
ANR	1074759	IdentifierDeclStatement	t1_glyph_space_coord gwe ;	1896:4:75915:75939	1074721	3	True				
ANR	1074760	IdentifierDecl	gwe		1074721	0					
ANR	1074761	IdentifierDeclType	t1_glyph_space_coord		1074721	0					
ANR	1074762	Identifier	gwe		1074721	1					
ANR	1074763	IfStatement	if ( ! self -> keep_stem_width || pixel_g == 0 )		1074721	4					
ANR	1074764	Condition	! self -> keep_stem_width || pixel_g == 0	1898:8:75950:75987	1074721	0	True				
ANR	1074765	OrExpression	! self -> keep_stem_width || pixel_g == 0		1074721	0		||			
ANR	1074766	UnaryOperationExpression	! self -> keep_stem_width		1074721	0					
ANR	1074767	UnaryOperator	!		1074721	0					
ANR	1074768	PtrMemberAccess	self -> keep_stem_width		1074721	1					
ANR	1074769	Identifier	self		1074721	0					
ANR	1074770	Identifier	keep_stem_width		1074721	1					
ANR	1074771	EqualityExpression	pixel_g == 0		1074721	1		==			
ANR	1074772	Identifier	pixel_g		1074721	0					
ANR	1074773	PrimaryExpression	0		1074721	1					
ANR	1074774	ReturnStatement	return ;	1899:8:75998:76004	1074721	1	True				
ANR	1074775	IfStatement	if ( hint -> stem_snap_index0 >= 0 && self -> stem_snap_count [ horiz ? 0 : 1 ] > 0 )		1074721	5					
ANR	1074776	Condition	hint -> stem_snap_index0 >= 0 && self -> stem_snap_count [ horiz ? 0 : 1 ] > 0	1900:8:76014:76084	1074721	0	True				
ANR	1074777	AndExpression	hint -> stem_snap_index0 >= 0 && self -> stem_snap_count [ horiz ? 0 : 1 ] > 0		1074721	0		&&			
ANR	1074778	RelationalExpression	hint -> stem_snap_index0 >= 0		1074721	0		>=			
ANR	1074779	PtrMemberAccess	hint -> stem_snap_index0		1074721	0					
ANR	1074780	Identifier	hint		1074721	0					
ANR	1074781	Identifier	stem_snap_index0		1074721	1					
ANR	1074782	PrimaryExpression	0		1074721	1					
ANR	1074783	RelationalExpression	self -> stem_snap_count [ horiz ? 0 : 1 ] > 0		1074721	1		>			
ANR	1074784	ArrayIndexing	self -> stem_snap_count [ horiz ? 0 : 1 ]		1074721	0					
ANR	1074785	PtrMemberAccess	self -> stem_snap_count		1074721	0					
ANR	1074786	Identifier	self		1074721	0					
ANR	1074787	Identifier	stem_snap_count		1074721	1					
ANR	1074788	ConditionalExpression	horiz ? 0 : 1		1074721	1					
ANR	1074789	Condition	horiz		1074721	0					
ANR	1074790	Identifier	horiz		1074721	0					
ANR	1074791	PrimaryExpression	0		1074721	1					
ANR	1074792	PrimaryExpression	1		1074721	2					
ANR	1074793	PrimaryExpression	0		1074721	1					
ANR	1074794	CompoundStatement		11:8:431:504	1074721	1					
ANR	1074795	IdentifierDeclStatement	t1_glyph_space_coord w0 = self -> stem_snap [ horiz ? 0 : 1 ] [ hint -> stem_snap_index0 ] ;	1901:8:76097:76177	1074721	0	True				
ANR	1074796	IdentifierDecl	w0 = self -> stem_snap [ horiz ? 0 : 1 ] [ hint -> stem_snap_index0 ]		1074721	0					
ANR	1074797	IdentifierDeclType	t1_glyph_space_coord		1074721	0					
ANR	1074798	Identifier	w0		1074721	1					
ANR	1074799	AssignmentExpression	w0 = self -> stem_snap [ horiz ? 0 : 1 ] [ hint -> stem_snap_index0 ]		1074721	2		=			
ANR	1074800	Identifier	w0		1074721	0					
ANR	1074801	ArrayIndexing	self -> stem_snap [ horiz ? 0 : 1 ] [ hint -> stem_snap_index0 ]		1074721	1					
ANR	1074802	ArrayIndexing	self -> stem_snap [ horiz ? 0 : 1 ]		1074721	0					
ANR	1074803	PtrMemberAccess	self -> stem_snap		1074721	0					
ANR	1074804	Identifier	self		1074721	0					
ANR	1074805	Identifier	stem_snap		1074721	1					
ANR	1074806	ConditionalExpression	horiz ? 0 : 1		1074721	1					
ANR	1074807	Condition	horiz		1074721	0					
ANR	1074808	Identifier	horiz		1074721	0					
ANR	1074809	PrimaryExpression	0		1074721	1					
ANR	1074810	PrimaryExpression	1		1074721	2					
ANR	1074811	PtrMemberAccess	hint -> stem_snap_index0		1074721	1					
ANR	1074812	Identifier	hint		1074721	0					
ANR	1074813	Identifier	stem_snap_index0		1074721	1					
ANR	1074814	IdentifierDeclStatement	"t1_glyph_space_coord thr0 = pixel_g * 70 / 100 , thr1 = pixel_g * 35 / 100 ;"	1902:8:76187:76260	1074721	1	True				
ANR	1074815	IdentifierDecl	thr0 = pixel_g * 70 / 100		1074721	0					
ANR	1074816	IdentifierDeclType	t1_glyph_space_coord		1074721	0					
ANR	1074817	Identifier	thr0		1074721	1					
ANR	1074818	AssignmentExpression	thr0 = pixel_g * 70 / 100		1074721	2		=			
ANR	1074819	Identifier	thr0		1074721	0					
ANR	1074820	MultiplicativeExpression	pixel_g * 70 / 100		1074721	1		*			
ANR	1074821	Identifier	pixel_g		1074721	0					
ANR	1074822	MultiplicativeExpression	70 / 100		1074721	1		/			
ANR	1074823	PrimaryExpression	70		1074721	0					
ANR	1074824	PrimaryExpression	100		1074721	1					
ANR	1074825	IdentifierDecl	thr1 = pixel_g * 35 / 100		1074721	1					
ANR	1074826	IdentifierDeclType	t1_glyph_space_coord		1074721	0					
ANR	1074827	Identifier	thr1		1074721	1					
ANR	1074828	AssignmentExpression	thr1 = pixel_g * 35 / 100		1074721	2		=			
ANR	1074829	Identifier	thr1		1074721	0					
ANR	1074830	MultiplicativeExpression	pixel_g * 35 / 100		1074721	1		*			
ANR	1074831	Identifier	pixel_g		1074721	0					
ANR	1074832	MultiplicativeExpression	35 / 100		1074721	1		/			
ANR	1074833	PrimaryExpression	35		1074721	0					
ANR	1074834	PrimaryExpression	100		1074721	1					
ANR	1074835	IfStatement	if ( gw - thr0 <= w0 && w0 <= gw + thr1 )		1074721	2					
ANR	1074836	Condition	gw - thr0 <= w0 && w0 <= gw + thr1	1904:12:76275:76308	1074721	0	True				
ANR	1074837	AndExpression	gw - thr0 <= w0 && w0 <= gw + thr1		1074721	0		&&			
ANR	1074838	RelationalExpression	gw - thr0 <= w0		1074721	0		<=			
ANR	1074839	AdditiveExpression	gw - thr0		1074721	0		-			
ANR	1074840	Identifier	gw		1074721	0					
ANR	1074841	Identifier	thr0		1074721	1					
ANR	1074842	Identifier	w0		1074721	1					
ANR	1074843	RelationalExpression	w0 <= gw + thr1		1074721	1		<=			
ANR	1074844	Identifier	w0		1074721	0					
ANR	1074845	AdditiveExpression	gw + thr1		1074721	1		+			
ANR	1074846	Identifier	gw		1074721	0					
ANR	1074847	Identifier	thr1		1074721	1					
ANR	1074848	ExpressionStatement	gw = w0	1905:12:76323:76330	1074721	1	True				
ANR	1074849	AssignmentExpression	gw = w0		1074721	0		=			
ANR	1074850	Identifier	gw		1074721	0					
ANR	1074851	Identifier	w0		1074721	1					
ANR	1074852	ExpressionStatement	gwe = gw % pixel_g	1907:4:76342:76360	1074721	6	True				
ANR	1074853	AssignmentExpression	gwe = gw % pixel_g		1074721	0		=			
ANR	1074854	Identifier	gwe		1074721	0					
ANR	1074855	MultiplicativeExpression	gw % pixel_g		1074721	1		%			
ANR	1074856	Identifier	gw		1074721	0					
ANR	1074857	Identifier	pixel_g		1074721	1					
ANR	1074858	IfStatement	if ( gw >= pixel_g && gwe < pixel_g / 2 )		1074721	7					
ANR	1074859	Condition	gw >= pixel_g && gwe < pixel_g / 2	1908:8:76370:76403	1074721	0	True				
ANR	1074860	AndExpression	gw >= pixel_g && gwe < pixel_g / 2		1074721	0		&&			
ANR	1074861	RelationalExpression	gw >= pixel_g		1074721	0		>=			
ANR	1074862	Identifier	gw		1074721	0					
ANR	1074863	Identifier	pixel_g		1074721	1					
ANR	1074864	RelationalExpression	gwe < pixel_g / 2		1074721	1		<			
ANR	1074865	Identifier	gwe		1074721	0					
ANR	1074866	MultiplicativeExpression	pixel_g / 2		1074721	1		/			
ANR	1074867	Identifier	pixel_g		1074721	0					
ANR	1074868	PrimaryExpression	2		1074721	1					
ANR	1074869	ExpressionStatement	gw -= gwe	1909:8:76414:76423	1074721	1	True				
ANR	1074870	AssignmentExpression	gw -= gwe		1074721	0		-=			
ANR	1074871	Identifier	gw		1074721	0					
ANR	1074872	Identifier	gwe		1074721	1					
ANR	1074873	ElseStatement	else		1074721	0					
ANR	1074874	ExpressionStatement	gw += pixel_g - gwe	1911:8:76442:76461	1074721	0	True				
ANR	1074875	AssignmentExpression	gw += pixel_g - gwe		1074721	0		+=			
ANR	1074876	Identifier	gw		1074721	0					
ANR	1074877	AdditiveExpression	pixel_g - gwe		1074721	1		-			
ANR	1074878	Identifier	pixel_g		1074721	0					
ANR	1074879	Identifier	gwe		1074721	1					
ANR	1074880	ExpressionStatement	* pgw = gw	1912:4:76467:76476	1074721	8	True				
ANR	1074881	AssignmentExpression	* pgw = gw		1074721	0		=			
ANR	1074882	UnaryOperationExpression	* pgw		1074721	0					
ANR	1074883	UnaryOperator	*		1074721	0					
ANR	1074884	Identifier	pgw		1074721	1					
ANR	1074885	Identifier	gw		1074721	1					
ANR	1074886	ReturnType	static void		1074721	1					
ANR	1074887	Identifier	t1_hinter__align_stem_width		1074721	2					
ANR	1074888	ParameterList	"t1_hinter * self , t1_glyph_space_coord * pgw , const t1_hint * hint"		1074721	3					
ANR	1074889	Parameter	t1_hinter * self	1891:40:75689:75704	1074721	0	True				
ANR	1074890	ParameterType	t1_hinter *		1074721	0					
ANR	1074891	Identifier	self		1074721	1					
ANR	1074892	Parameter	t1_glyph_space_coord * pgw	1891:58:75707:75731	1074721	1	True				
ANR	1074893	ParameterType	t1_glyph_space_coord *		1074721	0					
ANR	1074894	Identifier	pgw		1074721	1					
ANR	1074895	Parameter	const t1_hint * hint	1891:85:75734:75752	1074721	2	True				
ANR	1074896	ParameterType	const t1_hint *		1074721	0					
ANR	1074897	Identifier	hint		1074721	1					
ANR	1074898	CFGEntryNode	ENTRY		1074721		True				
ANR	1074899	CFGExitNode	EXIT		1074721		True				
ANR	1074900	Symbol	thr0		1074721						
ANR	1074901	Symbol	thr1		1074721						
ANR	1074902	Symbol	* hint -> stem_snap_index0		1074721						
ANR	1074903	Symbol	* horiz		1074721						
ANR	1074904	Symbol	* pgw		1074721						
ANR	1074905	Symbol	* self -> stem_snap_count		1074721						
ANR	1074906	Symbol	hint -> stem_snap_index0		1074721						
ANR	1074907	Symbol	horiz		1074721						
ANR	1074908	Symbol	self -> pixel_gw		1074721						
ANR	1074909	Symbol	w0		1074721						
ANR	1074910	Symbol	* * * self		1074721						
ANR	1074911	Symbol	* self -> stem_snap		1074721						
ANR	1074912	Symbol	hint -> type		1074721						
ANR	1074913	Symbol	hstem		1074721						
ANR	1074914	Symbol	pixel_g		1074721						
ANR	1074915	Symbol	self -> pixel_gh		1074721						
ANR	1074916	Symbol	pgw		1074721						
ANR	1074917	Symbol	* hint		1074721						
ANR	1074918	Symbol	self -> stem_snap_count		1074721						
ANR	1074919	Symbol	* * self		1074721						
ANR	1074920	Symbol	* self		1074721						
ANR	1074921	Symbol	self -> stem_snap		1074721						
ANR	1074922	Symbol	* * hint		1074721						
ANR	1074923	Symbol	gw		1074721						
ANR	1074924	Symbol	gwe		1074721						
ANR	1074925	Symbol	hint		1074721						
ANR	1074926	Symbol	self		1074721						
ANR	1074927	Symbol	self -> keep_stem_width		1074721						
ANR	1074928	Symbol	* * horiz		1074721						
ANR	1074929	Symbol	* * self -> stem_snap		1074721						
ANR	1074930	Function	t1_hinter__align_stem_to_grid	1915:0:76481:78300							
ANR	1074931	FunctionDef	"t1_hinter__align_stem_to_grid (t1_hinter * self , int32_t unit , t1_glyph_space_coord * x0 , t1_glyph_space_coord * y0 , t1_glyph_space_coord x1 , t1_glyph_space_coord y1 , bool align_to_pixels , const t1_hint * hint)"		1074930	0					
ANR	1074932	CompoundStatement		1919:0:76738:78300	1074930	0					
ANR	1074933	IfStatement	if ( unit > 0 )		1074930	0					
ANR	1074934	Condition	unit > 0	1921:8:76843:76850	1074930	0	True				
ANR	1074935	RelationalExpression	unit > 0		1074930	0		>			
ANR	1074936	Identifier	unit		1074930	0					
ANR	1074937	PrimaryExpression	0		1074930	1					
ANR	1074938	CompoundStatement		9:8:419:464	1074930	1					
ANR	1074939	IdentifierDeclStatement	bool horiz = ( hint -> type == hstem ) ;	1922:8:76863:76897	1074930	0	True				
ANR	1074940	IdentifierDecl	horiz = ( hint -> type == hstem )		1074930	0					
ANR	1074941	IdentifierDeclType	bool		1074930	0					
ANR	1074942	Identifier	horiz		1074930	1					
ANR	1074943	AssignmentExpression	horiz = ( hint -> type == hstem )		1074930	2		=			
ANR	1074944	Identifier	horiz		1074930	0					
ANR	1074945	EqualityExpression	hint -> type == hstem		1074930	1		==			
ANR	1074946	PtrMemberAccess	hint -> type		1074930	0					
ANR	1074947	Identifier	hint		1074930	0					
ANR	1074948	Identifier	type		1074930	1					
ANR	1074949	Identifier	hstem		1074930	1					
ANR	1074950	IdentifierDeclStatement	t1_glyph_space_coord gw = ( horiz ? y1 - * y0 : x1 - * x0 ) ;	1923:8:76907:76962	1074930	1	True				
ANR	1074951	IdentifierDecl	gw = ( horiz ? y1 - * y0 : x1 - * x0 )		1074930	0					
ANR	1074952	IdentifierDeclType	t1_glyph_space_coord		1074930	0					
ANR	1074953	Identifier	gw		1074930	1					
ANR	1074954	AssignmentExpression	gw = ( horiz ? y1 - * y0 : x1 - * x0 )		1074930	2		=			
ANR	1074955	Identifier	gw		1074930	0					
ANR	1074956	ConditionalExpression	horiz ? y1 - * y0 : x1 - * x0		1074930	1					
ANR	1074957	Condition	horiz		1074930	0					
ANR	1074958	Identifier	horiz		1074930	0					
ANR	1074959	AdditiveExpression	y1 - * y0		1074930	1		-			
ANR	1074960	Identifier	y1		1074930	0					
ANR	1074961	UnaryOperationExpression	* y0		1074930	1					
ANR	1074962	UnaryOperator	*		1074930	0					
ANR	1074963	Identifier	y0		1074930	1					
ANR	1074964	AdditiveExpression	x1 - * x0		1074930	2		-			
ANR	1074965	Identifier	x1		1074930	0					
ANR	1074966	UnaryOperationExpression	* x0		1074930	1					
ANR	1074967	UnaryOperator	*		1074930	0					
ANR	1074968	Identifier	x0		1074930	1					
ANR	1074969	IdentifierDeclStatement	"t1_glyph_space_coord GW = any_abs ( gw ) , GW0 = GW ;"	1924:8:76972:77019	1074930	2	True				
ANR	1074970	IdentifierDecl	GW = any_abs ( gw )		1074930	0					
ANR	1074971	IdentifierDeclType	t1_glyph_space_coord		1074930	0					
ANR	1074972	Identifier	GW		1074930	1					
ANR	1074973	AssignmentExpression	GW = any_abs ( gw )		1074930	2		=			
ANR	1074974	Identifier	GW		1074930	0					
ANR	1074975	CallExpression	any_abs ( gw )		1074930	1					
ANR	1074976	Callee	any_abs		1074930	0					
ANR	1074977	Identifier	any_abs		1074930	0					
ANR	1074978	ArgumentList	gw		1074930	1					
ANR	1074979	Argument	gw		1074930	0					
ANR	1074980	Identifier	gw		1074930	0					
ANR	1074981	IdentifierDecl	GW0 = GW		1074930	1					
ANR	1074982	IdentifierDeclType	t1_glyph_space_coord		1074930	0					
ANR	1074983	Identifier	GW0		1074930	1					
ANR	1074984	AssignmentExpression	GW0 = GW		1074930	2		=			
ANR	1074985	Identifier	GW		1074930	0					
ANR	1074986	Identifier	GW		1074930	1					
ANR	1074987	IdentifierDeclStatement	bool positive = ( gw >= 0 ) ;	1925:8:77029:77054	1074930	3	True				
ANR	1074988	IdentifierDecl	positive = ( gw >= 0 )		1074930	0					
ANR	1074989	IdentifierDeclType	bool		1074930	0					
ANR	1074990	Identifier	positive		1074930	1					
ANR	1074991	AssignmentExpression	positive = ( gw >= 0 )		1074930	2		=			
ANR	1074992	Identifier	positive		1074930	0					
ANR	1074993	RelationalExpression	gw >= 0		1074930	1		>=			
ANR	1074994	Identifier	gw		1074930	0					
ANR	1074995	PrimaryExpression	0		1074930	1					
ANR	1074996	IdentifierDeclStatement	int19 cf = ( horiz ? self -> heigt_transform_coef_rat : self -> width_transform_coef_rat ) ;	1926:8:77064:77148	1074930	4	True				
ANR	1074997	IdentifierDecl	cf = ( horiz ? self -> heigt_transform_coef_rat : self -> width_transform_coef_rat )		1074930	0					
ANR	1074998	IdentifierDeclType	int19		1074930	0					
ANR	1074999	Identifier	cf		1074930	1					
ANR	1075000	AssignmentExpression	cf = ( horiz ? self -> heigt_transform_coef_rat : self -> width_transform_coef_rat )		1074930	2		=			
ANR	1075001	Identifier	cf		1074930	0					
ANR	1075002	ConditionalExpression	horiz ? self -> heigt_transform_coef_rat : self -> width_transform_coef_rat		1074930	1					
ANR	1075003	Condition	horiz		1074930	0					
ANR	1075004	Identifier	horiz		1074930	0					
ANR	1075005	PtrMemberAccess	self -> heigt_transform_coef_rat		1074930	1					
ANR	1075006	Identifier	self		1074930	0					
ANR	1075007	Identifier	heigt_transform_coef_rat		1074930	1					
ANR	1075008	PtrMemberAccess	self -> width_transform_coef_rat		1074930	2					
ANR	1075009	Identifier	self		1074930	0					
ANR	1075010	Identifier	width_transform_coef_rat		1074930	1					
ANR	1075011	IdentifierDeclStatement	"t1_hinter_space_coord dx0 , dy0 , dx1 , dy1 , dgw ;"	1927:8:77158:77203	1074930	5	True				
ANR	1075012	IdentifierDecl	dx0		1074930	0					
ANR	1075013	IdentifierDeclType	t1_hinter_space_coord		1074930	0					
ANR	1075014	Identifier	dx0		1074930	1					
ANR	1075015	IdentifierDecl	dy0		1074930	1					
ANR	1075016	IdentifierDeclType	t1_hinter_space_coord		1074930	0					
ANR	1075017	Identifier	dy0		1074930	1					
ANR	1075018	IdentifierDecl	dx1		1074930	2					
ANR	1075019	IdentifierDeclType	t1_hinter_space_coord		1074930	0					
ANR	1075020	Identifier	dx1		1074930	1					
ANR	1075021	IdentifierDecl	dy1		1074930	3					
ANR	1075022	IdentifierDeclType	t1_hinter_space_coord		1074930	0					
ANR	1075023	Identifier	dy1		1074930	1					
ANR	1075024	IdentifierDecl	dgw		1074930	4					
ANR	1075025	IdentifierDeclType	t1_hinter_space_coord		1074930	0					
ANR	1075026	Identifier	dgw		1074930	1					
ANR	1075027	ExpressionStatement	"t1_hinter__align_to_grid__general ( self , unit , * x0 , * y0 , & dx0 , & dy0 , align_to_pixels , align_to_pixels )"	1929:8:77214:77315	1074930	6	True				
ANR	1075028	CallExpression	"t1_hinter__align_to_grid__general ( self , unit , * x0 , * y0 , & dx0 , & dy0 , align_to_pixels , align_to_pixels )"		1074930	0					
ANR	1075029	Callee	t1_hinter__align_to_grid__general		1074930	0					
ANR	1075030	Identifier	t1_hinter__align_to_grid__general		1074930	0					
ANR	1075031	ArgumentList	self		1074930	1					
ANR	1075032	Argument	self		1074930	0					
ANR	1075033	Identifier	self		1074930	0					
ANR	1075034	Argument	unit		1074930	1					
ANR	1075035	Identifier	unit		1074930	0					
ANR	1075036	Argument	* x0		1074930	2					
ANR	1075037	UnaryOperationExpression	* x0		1074930	0					
ANR	1075038	UnaryOperator	*		1074930	0					
ANR	1075039	Identifier	x0		1074930	1					
ANR	1075040	Argument	* y0		1074930	3					
ANR	1075041	UnaryOperationExpression	* y0		1074930	0					
ANR	1075042	UnaryOperator	*		1074930	0					
ANR	1075043	Identifier	y0		1074930	1					
ANR	1075044	Argument	& dx0		1074930	4					
ANR	1075045	UnaryOperationExpression	& dx0		1074930	0					
ANR	1075046	UnaryOperator	&		1074930	0					
ANR	1075047	Identifier	dx0		1074930	1					
ANR	1075048	Argument	& dy0		1074930	5					
ANR	1075049	UnaryOperationExpression	& dy0		1074930	0					
ANR	1075050	UnaryOperator	&		1074930	0					
ANR	1075051	Identifier	dy0		1074930	1					
ANR	1075052	Argument	align_to_pixels		1074930	6					
ANR	1075053	Identifier	align_to_pixels		1074930	0					
ANR	1075054	Argument	align_to_pixels		1074930	7					
ANR	1075055	Identifier	align_to_pixels		1074930	0					
ANR	1075056	ExpressionStatement	"t1_hinter__align_to_grid__general ( self , unit , x1 , y1 , & dx1 , & dy1 , align_to_pixels , align_to_pixels )"	1930:8:77325:77426	1074930	7	True				
ANR	1075057	CallExpression	"t1_hinter__align_to_grid__general ( self , unit , x1 , y1 , & dx1 , & dy1 , align_to_pixels , align_to_pixels )"		1074930	0					
ANR	1075058	Callee	t1_hinter__align_to_grid__general		1074930	0					
ANR	1075059	Identifier	t1_hinter__align_to_grid__general		1074930	0					
ANR	1075060	ArgumentList	self		1074930	1					
ANR	1075061	Argument	self		1074930	0					
ANR	1075062	Identifier	self		1074930	0					
ANR	1075063	Argument	unit		1074930	1					
ANR	1075064	Identifier	unit		1074930	0					
ANR	1075065	Argument	x1		1074930	2					
ANR	1075066	Identifier	x1		1074930	0					
ANR	1075067	Argument	y1		1074930	3					
ANR	1075068	Identifier	y1		1074930	0					
ANR	1075069	Argument	& dx1		1074930	4					
ANR	1075070	UnaryOperationExpression	& dx1		1074930	0					
ANR	1075071	UnaryOperator	&		1074930	0					
ANR	1075072	Identifier	dx1		1074930	1					
ANR	1075073	Argument	& dy1		1074930	5					
ANR	1075074	UnaryOperationExpression	& dy1		1074930	0					
ANR	1075075	UnaryOperator	&		1074930	0					
ANR	1075076	Identifier	dy1		1074930	1					
ANR	1075077	Argument	align_to_pixels		1074930	6					
ANR	1075078	Identifier	align_to_pixels		1074930	0					
ANR	1075079	Argument	align_to_pixels		1074930	7					
ANR	1075080	Identifier	align_to_pixels		1074930	0					
ANR	1075081	ExpressionStatement	"t1_hinter__align_stem_width ( self , & GW , hint )"	1931:8:77436:77480	1074930	8	True				
ANR	1075082	CallExpression	"t1_hinter__align_stem_width ( self , & GW , hint )"		1074930	0					
ANR	1075083	Callee	t1_hinter__align_stem_width		1074930	0					
ANR	1075084	Identifier	t1_hinter__align_stem_width		1074930	0					
ANR	1075085	ArgumentList	self		1074930	1					
ANR	1075086	Argument	self		1074930	0					
ANR	1075087	Identifier	self		1074930	0					
ANR	1075088	Argument	& GW		1074930	1					
ANR	1075089	UnaryOperationExpression	& GW		1074930	0					
ANR	1075090	UnaryOperator	&		1074930	0					
ANR	1075091	Identifier	GW		1074930	1					
ANR	1075092	Argument	hint		1074930	2					
ANR	1075093	Identifier	hint		1074930	0					
ANR	1075094	ExpressionStatement	"dgw = g2o_dist ( GW - GW0 , cf )"	1932:8:77490:77518	1074930	9	True				
ANR	1075095	AssignmentExpression	"dgw = g2o_dist ( GW - GW0 , cf )"		1074930	0		=			
ANR	1075096	Identifier	dgw		1074930	0					
ANR	1075097	CallExpression	"g2o_dist ( GW - GW0 , cf )"		1074930	1					
ANR	1075098	Callee	g2o_dist		1074930	0					
ANR	1075099	Identifier	g2o_dist		1074930	0					
ANR	1075100	ArgumentList	GW - GW0		1074930	1					
ANR	1075101	Argument	GW - GW0		1074930	0					
ANR	1075102	AdditiveExpression	GW - GW0		1074930	0		-			
ANR	1075103	Identifier	GW		1074930	0					
ANR	1075104	Identifier	GW0		1074930	1					
ANR	1075105	Argument	cf		1074930	1					
ANR	1075106	Identifier	cf		1074930	0					
ANR	1075107	IfStatement	if ( ( horiz ? ( ! self -> transposed ? self -> ctmf . yy : self -> ctmf . xy ) : ( ! self -> transposed ? self -> ctmf . xx : self -> ctmf . yx ) ) < 0 )		1074930	10					
ANR	1075108	Condition	( horiz ? ( ! self -> transposed ? self -> ctmf . yy : self -> ctmf . xy ) : ( ! self -> transposed ? self -> ctmf . xx : self -> ctmf . yx ) ) < 0	1933:12:77532:77669	1074930	0	True				
ANR	1075109	RelationalExpression	( horiz ? ( ! self -> transposed ? self -> ctmf . yy : self -> ctmf . xy ) : ( ! self -> transposed ? self -> ctmf . xx : self -> ctmf . yx ) ) < 0		1074930	0		<			
ANR	1075110	ConditionalExpression	horiz ? ( ! self -> transposed ? self -> ctmf . yy : self -> ctmf . xy ) : ( ! self -> transposed ? self -> ctmf . xx : self -> ctmf . yx )		1074930	0					
ANR	1075111	Condition	horiz		1074930	0					
ANR	1075112	Identifier	horiz		1074930	0					
ANR	1075113	ConditionalExpression	! self -> transposed ? self -> ctmf . yy : self -> ctmf . xy		1074930	1					
ANR	1075114	Condition	! self -> transposed		1074930	0					
ANR	1075115	UnaryOperationExpression	! self -> transposed		1074930	0					
ANR	1075116	UnaryOperator	!		1074930	0					
ANR	1075117	PtrMemberAccess	self -> transposed		1074930	1					
ANR	1075118	Identifier	self		1074930	0					
ANR	1075119	Identifier	transposed		1074930	1					
ANR	1075120	MemberAccess	self -> ctmf . yy		1074930	1					
ANR	1075121	PtrMemberAccess	self -> ctmf		1074930	0					
ANR	1075122	Identifier	self		1074930	0					
ANR	1075123	Identifier	ctmf		1074930	1					
ANR	1075124	Identifier	yy		1074930	1					
ANR	1075125	MemberAccess	self -> ctmf . xy		1074930	2					
ANR	1075126	PtrMemberAccess	self -> ctmf		1074930	0					
ANR	1075127	Identifier	self		1074930	0					
ANR	1075128	Identifier	ctmf		1074930	1					
ANR	1075129	Identifier	xy		1074930	1					
ANR	1075130	ConditionalExpression	! self -> transposed ? self -> ctmf . xx : self -> ctmf . yx		1074930	2					
ANR	1075131	Condition	! self -> transposed		1074930	0					
ANR	1075132	UnaryOperationExpression	! self -> transposed		1074930	0					
ANR	1075133	UnaryOperator	!		1074930	0					
ANR	1075134	PtrMemberAccess	self -> transposed		1074930	1					
ANR	1075135	Identifier	self		1074930	0					
ANR	1075136	Identifier	transposed		1074930	1					
ANR	1075137	MemberAccess	self -> ctmf . xx		1074930	1					
ANR	1075138	PtrMemberAccess	self -> ctmf		1074930	0					
ANR	1075139	Identifier	self		1074930	0					
ANR	1075140	Identifier	ctmf		1074930	1					
ANR	1075141	Identifier	xx		1074930	1					
ANR	1075142	MemberAccess	self -> ctmf . yx		1074930	2					
ANR	1075143	PtrMemberAccess	self -> ctmf		1074930	0					
ANR	1075144	Identifier	self		1074930	0					
ANR	1075145	Identifier	ctmf		1074930	1					
ANR	1075146	Identifier	yx		1074930	1					
ANR	1075147	PrimaryExpression	0		1074930	1					
ANR	1075148	ExpressionStatement	dgw = - dgw	1935:12:77684:77695	1074930	1	True				
ANR	1075149	AssignmentExpression	dgw = - dgw		1074930	0		=			
ANR	1075150	Identifier	dgw		1074930	0					
ANR	1075151	UnaryOperationExpression	- dgw		1074930	1					
ANR	1075152	UnaryOperator	-		1074930	0					
ANR	1075153	Identifier	dgw		1074930	1					
ANR	1075154	IfStatement	if ( horiz )		1074930	11					
ANR	1075155	Condition	horiz	1936:12:77709:77713	1074930	0	True				
ANR	1075156	Identifier	horiz		1074930	0					
ANR	1075157	CompoundStatement		20:12:1068:1131	1074930	1					
ANR	1075158	IdentifierDeclStatement	t1_hinter_space_coord ddy1 = ( positive ? dy0 - dgw : dy0 + dgw ) ;	1937:12:77730:77793	1074930	0	True				
ANR	1075159	IdentifierDecl	ddy1 = ( positive ? dy0 - dgw : dy0 + dgw )		1074930	0					
ANR	1075160	IdentifierDeclType	t1_hinter_space_coord		1074930	0					
ANR	1075161	Identifier	ddy1		1074930	1					
ANR	1075162	AssignmentExpression	ddy1 = ( positive ? dy0 - dgw : dy0 + dgw )		1074930	2		=			
ANR	1075163	Identifier	ddy1		1074930	0					
ANR	1075164	ConditionalExpression	positive ? dy0 - dgw : dy0 + dgw		1074930	1					
ANR	1075165	Condition	positive		1074930	0					
ANR	1075166	Identifier	positive		1074930	0					
ANR	1075167	AdditiveExpression	dy0 - dgw		1074930	1		-			
ANR	1075168	Identifier	dy0		1074930	0					
ANR	1075169	Identifier	dgw		1074930	1					
ANR	1075170	AdditiveExpression	dy0 + dgw		1074930	2		+			
ANR	1075171	Identifier	dy0		1074930	0					
ANR	1075172	Identifier	dgw		1074930	1					
ANR	1075173	IdentifierDeclStatement	t1_hinter_space_coord ddy0 = ( positive ? dy1 + dgw : dy1 - dgw ) ;	1938:12:77807:77870	1074930	1	True				
ANR	1075174	IdentifierDecl	ddy0 = ( positive ? dy1 + dgw : dy1 - dgw )		1074930	0					
ANR	1075175	IdentifierDeclType	t1_hinter_space_coord		1074930	0					
ANR	1075176	Identifier	ddy0		1074930	1					
ANR	1075177	AssignmentExpression	ddy0 = ( positive ? dy1 + dgw : dy1 - dgw )		1074930	2		=			
ANR	1075178	Identifier	ddy0		1074930	0					
ANR	1075179	ConditionalExpression	positive ? dy1 + dgw : dy1 - dgw		1074930	1					
ANR	1075180	Condition	positive		1074930	0					
ANR	1075181	Identifier	positive		1074930	0					
ANR	1075182	AdditiveExpression	dy1 + dgw		1074930	1		+			
ANR	1075183	Identifier	dy1		1074930	0					
ANR	1075184	Identifier	dgw		1074930	1					
ANR	1075185	AdditiveExpression	dy1 - dgw		1074930	2		-			
ANR	1075186	Identifier	dy1		1074930	0					
ANR	1075187	Identifier	dgw		1074930	1					
ANR	1075188	IfStatement	if ( any_abs ( dy0 + ddy1 ) > any_abs ( dy1 + ddy0 ) )		1074930	2					
ANR	1075189	Condition	any_abs ( dy0 + ddy1 ) > any_abs ( dy1 + ddy0 )	1940:16:77889:77929	1074930	0	True				
ANR	1075190	RelationalExpression	any_abs ( dy0 + ddy1 ) > any_abs ( dy1 + ddy0 )		1074930	0		>			
ANR	1075191	CallExpression	any_abs ( dy0 + ddy1 )		1074930	0					
ANR	1075192	Callee	any_abs		1074930	0					
ANR	1075193	Identifier	any_abs		1074930	0					
ANR	1075194	ArgumentList	dy0 + ddy1		1074930	1					
ANR	1075195	Argument	dy0 + ddy1		1074930	0					
ANR	1075196	AdditiveExpression	dy0 + ddy1		1074930	0		+			
ANR	1075197	Identifier	dy0		1074930	0					
ANR	1075198	Identifier	ddy1		1074930	1					
ANR	1075199	CallExpression	any_abs ( dy1 + ddy0 )		1074930	1					
ANR	1075200	Callee	any_abs		1074930	0					
ANR	1075201	Identifier	any_abs		1074930	0					
ANR	1075202	ArgumentList	dy1 + ddy0		1074930	1					
ANR	1075203	Argument	dy1 + ddy0		1074930	0					
ANR	1075204	AdditiveExpression	dy1 + ddy0		1074930	0		+			
ANR	1075205	Identifier	dy1		1074930	0					
ANR	1075206	Identifier	ddy0		1074930	1					
ANR	1075207	ExpressionStatement	dy0 = ddy0	1941:16:77948:77958	1074930	1	True				
ANR	1075208	AssignmentExpression	dy0 = ddy0		1074930	0		=			
ANR	1075209	Identifier	dy0		1074930	0					
ANR	1075210	Identifier	ddy0		1074930	1					
ANR	1075211	ElseStatement	else		1074930	0					
ANR	1075212	CompoundStatement		26:12:1327:1390	1074930	0					
ANR	1075213	IdentifierDeclStatement	t1_hinter_space_coord ddx1 = ( positive ? dx0 - dgw : dx0 + dgw ) ;	1943:12:77989:78052	1074930	0	True				
ANR	1075214	IdentifierDecl	ddx1 = ( positive ? dx0 - dgw : dx0 + dgw )		1074930	0					
ANR	1075215	IdentifierDeclType	t1_hinter_space_coord		1074930	0					
ANR	1075216	Identifier	ddx1		1074930	1					
ANR	1075217	AssignmentExpression	ddx1 = ( positive ? dx0 - dgw : dx0 + dgw )		1074930	2		=			
ANR	1075218	Identifier	ddx1		1074930	0					
ANR	1075219	ConditionalExpression	positive ? dx0 - dgw : dx0 + dgw		1074930	1					
ANR	1075220	Condition	positive		1074930	0					
ANR	1075221	Identifier	positive		1074930	0					
ANR	1075222	AdditiveExpression	dx0 - dgw		1074930	1		-			
ANR	1075223	Identifier	dx0		1074930	0					
ANR	1075224	Identifier	dgw		1074930	1					
ANR	1075225	AdditiveExpression	dx0 + dgw		1074930	2		+			
ANR	1075226	Identifier	dx0		1074930	0					
ANR	1075227	Identifier	dgw		1074930	1					
ANR	1075228	IdentifierDeclStatement	t1_hinter_space_coord ddx0 = ( positive ? dx1 + dgw : dx1 - dgw ) ;	1944:12:78066:78129	1074930	1	True				
ANR	1075229	IdentifierDecl	ddx0 = ( positive ? dx1 + dgw : dx1 - dgw )		1074930	0					
ANR	1075230	IdentifierDeclType	t1_hinter_space_coord		1074930	0					
ANR	1075231	Identifier	ddx0		1074930	1					
ANR	1075232	AssignmentExpression	ddx0 = ( positive ? dx1 + dgw : dx1 - dgw )		1074930	2		=			
ANR	1075233	Identifier	ddx0		1074930	0					
ANR	1075234	ConditionalExpression	positive ? dx1 + dgw : dx1 - dgw		1074930	1					
ANR	1075235	Condition	positive		1074930	0					
ANR	1075236	Identifier	positive		1074930	0					
ANR	1075237	AdditiveExpression	dx1 + dgw		1074930	1		+			
ANR	1075238	Identifier	dx1		1074930	0					
ANR	1075239	Identifier	dgw		1074930	1					
ANR	1075240	AdditiveExpression	dx1 - dgw		1074930	2		-			
ANR	1075241	Identifier	dx1		1074930	0					
ANR	1075242	Identifier	dgw		1074930	1					
ANR	1075243	IfStatement	if ( any_abs ( dx0 + ddx1 ) > any_abs ( dx1 + ddx0 ) )		1074930	2					
ANR	1075244	Condition	any_abs ( dx0 + ddx1 ) > any_abs ( dx1 + ddx0 )	1946:16:78148:78188	1074930	0	True				
ANR	1075245	RelationalExpression	any_abs ( dx0 + ddx1 ) > any_abs ( dx1 + ddx0 )		1074930	0		>			
ANR	1075246	CallExpression	any_abs ( dx0 + ddx1 )		1074930	0					
ANR	1075247	Callee	any_abs		1074930	0					
ANR	1075248	Identifier	any_abs		1074930	0					
ANR	1075249	ArgumentList	dx0 + ddx1		1074930	1					
ANR	1075250	Argument	dx0 + ddx1		1074930	0					
ANR	1075251	AdditiveExpression	dx0 + ddx1		1074930	0		+			
ANR	1075252	Identifier	dx0		1074930	0					
ANR	1075253	Identifier	ddx1		1074930	1					
ANR	1075254	CallExpression	any_abs ( dx1 + ddx0 )		1074930	1					
ANR	1075255	Callee	any_abs		1074930	0					
ANR	1075256	Identifier	any_abs		1074930	0					
ANR	1075257	ArgumentList	dx1 + ddx0		1074930	1					
ANR	1075258	Argument	dx1 + ddx0		1074930	0					
ANR	1075259	AdditiveExpression	dx1 + ddx0		1074930	0		+			
ANR	1075260	Identifier	dx1		1074930	0					
ANR	1075261	Identifier	ddx0		1074930	1					
ANR	1075262	ExpressionStatement	dx0 = ddx0	1947:16:78207:78217	1074930	1	True				
ANR	1075263	AssignmentExpression	dx0 = ddx0		1074930	0		=			
ANR	1075264	Identifier	dx0		1074930	0					
ANR	1075265	Identifier	ddx0		1074930	1					
ANR	1075266	ExpressionStatement	"t1_hinter__align_to_grid__final ( self , x0 , y0 , dx0 , dy0 )"	1949:8:78237:78292	1074930	12	True				
ANR	1075267	CallExpression	"t1_hinter__align_to_grid__final ( self , x0 , y0 , dx0 , dy0 )"		1074930	0					
ANR	1075268	Callee	t1_hinter__align_to_grid__final		1074930	0					
ANR	1075269	Identifier	t1_hinter__align_to_grid__final		1074930	0					
ANR	1075270	ArgumentList	self		1074930	1					
ANR	1075271	Argument	self		1074930	0					
ANR	1075272	Identifier	self		1074930	0					
ANR	1075273	Argument	x0		1074930	1					
ANR	1075274	Identifier	x0		1074930	0					
ANR	1075275	Argument	y0		1074930	2					
ANR	1075276	Identifier	y0		1074930	0					
ANR	1075277	Argument	dx0		1074930	3					
ANR	1075278	Identifier	dx0		1074930	0					
ANR	1075279	Argument	dy0		1074930	4					
ANR	1075280	Identifier	dy0		1074930	0					
ANR	1075281	ReturnType	static void		1074930	1					
ANR	1075282	Identifier	t1_hinter__align_stem_to_grid		1074930	2					
ANR	1075283	ParameterList	"t1_hinter * self , int32_t unit , t1_glyph_space_coord * x0 , t1_glyph_space_coord * y0 , t1_glyph_space_coord x1 , t1_glyph_space_coord y1 , bool align_to_pixels , const t1_hint * hint"		1074930	3					
ANR	1075284	Parameter	t1_hinter * self	1915:42:76523:76538	1074930	0	True				
ANR	1075285	ParameterType	t1_hinter *		1074930	0					
ANR	1075286	Identifier	self		1074930	1					
ANR	1075287	Parameter	int32_t unit	1915:60:76541:76552	1074930	1	True				
ANR	1075288	ParameterType	int32_t		1074930	0					
ANR	1075289	Identifier	unit		1074930	1					
ANR	1075290	Parameter	t1_glyph_space_coord * x0	1916:12:76567:76590	1074930	2	True				
ANR	1075291	ParameterType	t1_glyph_space_coord *		1074930	0					
ANR	1075292	Identifier	x0		1074930	1					
ANR	1075293	Parameter	t1_glyph_space_coord * y0	1916:38:76593:76616	1074930	3	True				
ANR	1075294	ParameterType	t1_glyph_space_coord *		1074930	0					
ANR	1075295	Identifier	y0		1074930	1					
ANR	1075296	Parameter	t1_glyph_space_coord x1	1917:12:76631:76654	1074930	4	True				
ANR	1075297	ParameterType	t1_glyph_space_coord		1074930	0					
ANR	1075298	Identifier	x1		1074930	1					
ANR	1075299	Parameter	t1_glyph_space_coord y1	1917:38:76657:76680	1074930	5	True				
ANR	1075300	ParameterType	t1_glyph_space_coord		1074930	0					
ANR	1075301	Identifier	y1		1074930	1					
ANR	1075302	Parameter	bool align_to_pixels	1918:12:76695:76714	1074930	6	True				
ANR	1075303	ParameterType	bool		1074930	0					
ANR	1075304	Identifier	align_to_pixels		1074930	1					
ANR	1075305	Parameter	const t1_hint * hint	1918:34:76717:76735	1074930	7	True				
ANR	1075306	ParameterType	const t1_hint *		1074930	0					
ANR	1075307	Identifier	hint		1074930	1					
ANR	1075308	CFGEntryNode	ENTRY		1074930		True				
ANR	1075309	CFGExitNode	EXIT		1074930		True				
ANR	1075310	Symbol	GW0		1074930						
ANR	1075311	Symbol	& dx1		1074930						
ANR	1075312	Symbol	& dx0		1074930						
ANR	1075313	Symbol	g2o_dist		1074930						
ANR	1075314	Symbol	self -> ctmf . xy		1074930						
ANR	1075315	Symbol	self -> ctmf . xx		1074930						
ANR	1075316	Symbol	horiz		1074930						
ANR	1075317	Symbol	align_to_pixels		1074930						
ANR	1075318	Symbol	dgw		1074930						
ANR	1075319	Symbol	ddx0		1074930						
ANR	1075320	Symbol	y0		1074930						
ANR	1075321	Symbol	ddx1		1074930						
ANR	1075322	Symbol	y1		1074930						
ANR	1075323	Symbol	any_abs		1074930						
ANR	1075324	Symbol	dx1		1074930						
ANR	1075325	Symbol	hint -> type		1074930						
ANR	1075326	Symbol	dx0		1074930						
ANR	1075327	Symbol	hstem		1074930						
ANR	1075328	Symbol	* y0		1074930						
ANR	1075329	Symbol	* hint		1074930						
ANR	1075330	Symbol	cf		1074930						
ANR	1075331	Symbol	& dy1		1074930						
ANR	1075332	Symbol	* self		1074930						
ANR	1075333	Symbol	& dy0		1074930						
ANR	1075334	Symbol	self -> ctmf		1074930						
ANR	1075335	Symbol	positive		1074930						
ANR	1075336	Symbol	self -> ctmf . yy		1074930						
ANR	1075337	Symbol	self -> ctmf . yx		1074930						
ANR	1075338	Symbol	gw		1074930						
ANR	1075339	Symbol	GW		1074930						
ANR	1075340	Symbol	self -> width_transform_coef_rat		1074930						
ANR	1075341	Symbol	unit		1074930						
ANR	1075342	Symbol	ddy1		1074930						
ANR	1075343	Symbol	hint		1074930						
ANR	1075344	Symbol	x0		1074930						
ANR	1075345	Symbol	self		1074930						
ANR	1075346	Symbol	x1		1074930						
ANR	1075347	Symbol	ddy0		1074930						
ANR	1075348	Symbol	dy0		1074930						
ANR	1075349	Symbol	self -> transposed		1074930						
ANR	1075350	Symbol	& GW		1074930						
ANR	1075351	Symbol	self -> heigt_transform_coef_rat		1074930						
ANR	1075352	Symbol	* x0		1074930						
ANR	1075353	Symbol	dy1		1074930						
ANR	1075354	Function	g2o_dist_blue	1954:0:78336:78647							
ANR	1075355	FunctionDef	"g2o_dist_blue (t1_hinter * h , t1_glyph_space_coord gw)"		1075354	0					
ANR	1075356	CompoundStatement		1955:0:78426:78647	1075354	0					
ANR	1075357	IdentifierDeclStatement	double W = fixed2float ( gw ) ;	1955:3:78430:78456	1075354	0	True				
ANR	1075358	IdentifierDecl	W = fixed2float ( gw )		1075354	0					
ANR	1075359	IdentifierDeclType	double		1075354	0					
ANR	1075360	Identifier	W		1075354	1					
ANR	1075361	AssignmentExpression	W = fixed2float ( gw )		1075354	2		=			
ANR	1075362	Identifier	W		1075354	0					
ANR	1075363	CallExpression	fixed2float ( gw )		1075354	1					
ANR	1075364	Callee	fixed2float		1075354	0					
ANR	1075365	Identifier	fixed2float		1075354	0					
ANR	1075366	ArgumentList	gw		1075354	1					
ANR	1075367	Argument	gw		1075354	0					
ANR	1075368	Identifier	gw		1075354	0					
ANR	1075369	IdentifierDeclStatement	double w = W * ( h -> resolution * h -> font_size * h -> base_font_scale - h -> BlueScale ) + 1 ;	1956:4:78462:78547	1075354	1	True				
ANR	1075370	IdentifierDecl	w = W * ( h -> resolution * h -> font_size * h -> base_font_scale - h -> BlueScale ) + 1		1075354	0					
ANR	1075371	IdentifierDeclType	double		1075354	0					
ANR	1075372	Identifier	w		1075354	1					
ANR	1075373	AssignmentExpression	w = W * ( h -> resolution * h -> font_size * h -> base_font_scale - h -> BlueScale ) + 1		1075354	2		=			
ANR	1075374	Identifier	w		1075354	0					
ANR	1075375	AdditiveExpression	W * ( h -> resolution * h -> font_size * h -> base_font_scale - h -> BlueScale ) + 1		1075354	1		+			
ANR	1075376	MultiplicativeExpression	W * ( h -> resolution * h -> font_size * h -> base_font_scale - h -> BlueScale )		1075354	0		*			
ANR	1075377	Identifier	W		1075354	0					
ANR	1075378	AdditiveExpression	h -> resolution * h -> font_size * h -> base_font_scale - h -> BlueScale		1075354	1		-			
ANR	1075379	MultiplicativeExpression	h -> resolution * h -> font_size * h -> base_font_scale		1075354	0		*			
ANR	1075380	PtrMemberAccess	h -> resolution		1075354	0					
ANR	1075381	Identifier	h		1075354	0					
ANR	1075382	Identifier	resolution		1075354	1					
ANR	1075383	MultiplicativeExpression	h -> font_size * h -> base_font_scale		1075354	1		*			
ANR	1075384	PtrMemberAccess	h -> font_size		1075354	0					
ANR	1075385	Identifier	h		1075354	0					
ANR	1075386	Identifier	font_size		1075354	1					
ANR	1075387	PtrMemberAccess	h -> base_font_scale		1075354	1					
ANR	1075388	Identifier	h		1075354	0					
ANR	1075389	Identifier	base_font_scale		1075354	1					
ANR	1075390	PtrMemberAccess	h -> BlueScale		1075354	1					
ANR	1075391	Identifier	h		1075354	0					
ANR	1075392	Identifier	BlueScale		1075354	1					
ANR	1075393	PrimaryExpression	1		1075354	1					
ANR	1075394	ReturnStatement	return ( t1_hinter_space_coord ) ( w * h -> g2o_fraction ) ;	1958:4:78554:78605	1075354	2	True				
ANR	1075395	CastExpression	( t1_hinter_space_coord ) ( w * h -> g2o_fraction )		1075354	0					
ANR	1075396	CastTarget	t1_hinter_space_coord		1075354	0					
ANR	1075397	MultiplicativeExpression	w * h -> g2o_fraction		1075354	1		*			
ANR	1075398	Identifier	w		1075354	0					
ANR	1075399	PtrMemberAccess	h -> g2o_fraction		1075354	1					
ANR	1075400	Identifier	h		1075354	0					
ANR	1075401	Identifier	g2o_fraction		1075354	1					
ANR	1075402	ReturnType	static inline t1_hinter_space_coord		1075354	1					
ANR	1075403	Identifier	g2o_dist_blue		1075354	2					
ANR	1075404	ParameterList	"t1_hinter * h , t1_glyph_space_coord gw"		1075354	3					
ANR	1075405	Parameter	t1_hinter * h	1954:50:78386:78398	1075354	0	True				
ANR	1075406	ParameterType	t1_hinter *		1075354	0					
ANR	1075407	Identifier	h		1075354	1					
ANR	1075408	Parameter	t1_glyph_space_coord gw	1954:65:78401:78423	1075354	1	True				
ANR	1075409	ParameterType	t1_glyph_space_coord		1075354	0					
ANR	1075410	Identifier	gw		1075354	1					
ANR	1075411	CFGEntryNode	ENTRY		1075354		True				
ANR	1075412	CFGExitNode	EXIT		1075354		True				
ANR	1075413	Symbol	gw		1075354						
ANR	1075414	Symbol	h -> resolution		1075354						
ANR	1075415	Symbol	* h		1075354						
ANR	1075416	Symbol	h -> g2o_fraction		1075354						
ANR	1075417	Symbol	fixed2float		1075354						
ANR	1075418	Symbol	h -> BlueScale		1075354						
ANR	1075419	Symbol	W		1075354						
ANR	1075420	Symbol	w		1075354						
ANR	1075421	Symbol	h -> font_size		1075354						
ANR	1075422	Symbol	h		1075354						
ANR	1075423	Symbol	h -> base_font_scale		1075354						
ANR	1075424	Function	t1_hinter__add_overshoot	1962:0:78650:79210							
ANR	1075425	FunctionDef	"t1_hinter__add_overshoot (t1_hinter * self , t1_zone * zone , t1_glyph_space_coord * x , t1_glyph_space_coord * y)"		1075424	0					
ANR	1075426	CompoundStatement		1963:0:78773:79210	1075424	0					
ANR	1075427	IdentifierDeclStatement	t1_glyph_space_coord gy = * y ;	1963:3:78777:78805	1075424	0	True				
ANR	1075428	IdentifierDecl	gy = * y		1075424	0					
ANR	1075429	IdentifierDeclType	t1_glyph_space_coord		1075424	0					
ANR	1075430	Identifier	gy		1075424	1					
ANR	1075431	AssignmentExpression	gy = * y		1075424	2		=			
ANR	1075432	Identifier	gy		1075424	0					
ANR	1075433	UnaryOperationExpression	* y		1075424	1					
ANR	1075434	UnaryOperator	*		1075424	0					
ANR	1075435	Identifier	y		1075424	1					
ANR	1075436	IdentifierDeclStatement	t1_glyph_space_coord gw = any_abs ( gy - zone -> y ) ;	1965:4:78885:78932	1075424	1	True				
ANR	1075437	IdentifierDecl	gw = any_abs ( gy - zone -> y )		1075424	0					
ANR	1075438	IdentifierDeclType	t1_glyph_space_coord		1075424	0					
ANR	1075439	Identifier	gw		1075424	1					
ANR	1075440	AssignmentExpression	gw = any_abs ( gy - zone -> y )		1075424	2		=			
ANR	1075441	Identifier	gw		1075424	0					
ANR	1075442	CallExpression	any_abs ( gy - zone -> y )		1075424	1					
ANR	1075443	Callee	any_abs		1075424	0					
ANR	1075444	Identifier	any_abs		1075424	0					
ANR	1075445	ArgumentList	gy - zone -> y		1075424	1					
ANR	1075446	Argument	gy - zone -> y		1075424	0					
ANR	1075447	AdditiveExpression	gy - zone -> y		1075424	0		-			
ANR	1075448	Identifier	gy		1075424	0					
ANR	1075449	PtrMemberAccess	zone -> y		1075424	1					
ANR	1075450	Identifier	zone		1075424	0					
ANR	1075451	Identifier	y		1075424	1					
ANR	1075452	IdentifierDeclStatement	"t1_hinter_space_coord ow = g2o_dist_blue ( self , gw ) ;"	1966:4:78938:78988	1075424	2	True				
ANR	1075453	IdentifierDecl	"ow = g2o_dist_blue ( self , gw )"		1075424	0					
ANR	1075454	IdentifierDeclType	t1_hinter_space_coord		1075424	0					
ANR	1075455	Identifier	ow		1075424	1					
ANR	1075456	AssignmentExpression	"ow = g2o_dist_blue ( self , gw )"		1075424	2		=			
ANR	1075457	Identifier	ow		1075424	0					
ANR	1075458	CallExpression	"g2o_dist_blue ( self , gw )"		1075424	1					
ANR	1075459	Callee	g2o_dist_blue		1075424	0					
ANR	1075460	Identifier	g2o_dist_blue		1075424	0					
ANR	1075461	ArgumentList	self		1075424	1					
ANR	1075462	Argument	self		1075424	0					
ANR	1075463	Identifier	self		1075424	0					
ANR	1075464	Argument	gw		1075424	1					
ANR	1075465	Identifier	gw		1075424	0					
ANR	1075466	IdentifierDeclStatement	t1_hinter_space_coord ow1 = ow / self -> g2o_fraction * self -> g2o_fraction ;	1967:4:78994:79066	1075424	3	True				
ANR	1075467	IdentifierDecl	ow1 = ow / self -> g2o_fraction * self -> g2o_fraction		1075424	0					
ANR	1075468	IdentifierDeclType	t1_hinter_space_coord		1075424	0					
ANR	1075469	Identifier	ow1		1075424	1					
ANR	1075470	AssignmentExpression	ow1 = ow / self -> g2o_fraction * self -> g2o_fraction		1075424	2		=			
ANR	1075471	Identifier	ow1		1075424	0					
ANR	1075472	MultiplicativeExpression	ow / self -> g2o_fraction * self -> g2o_fraction		1075424	1		/			
ANR	1075473	Identifier	ow		1075424	0					
ANR	1075474	MultiplicativeExpression	self -> g2o_fraction * self -> g2o_fraction		1075424	1		*			
ANR	1075475	PtrMemberAccess	self -> g2o_fraction		1075424	0					
ANR	1075476	Identifier	self		1075424	0					
ANR	1075477	Identifier	g2o_fraction		1075424	1					
ANR	1075478	PtrMemberAccess	self -> g2o_fraction		1075424	1					
ANR	1075479	Identifier	self		1075424	0					
ANR	1075480	Identifier	g2o_fraction		1075424	1					
ANR	1075481	IdentifierDeclStatement	"t1_glyph_space_coord gw1 = o2g_dist ( self , ow1 , self -> heigt_transform_coef_inv ) ;"	1968:4:79072:79150	1075424	4	True				
ANR	1075482	IdentifierDecl	"gw1 = o2g_dist ( self , ow1 , self -> heigt_transform_coef_inv )"		1075424	0					
ANR	1075483	IdentifierDeclType	t1_glyph_space_coord		1075424	0					
ANR	1075484	Identifier	gw1		1075424	1					
ANR	1075485	AssignmentExpression	"gw1 = o2g_dist ( self , ow1 , self -> heigt_transform_coef_inv )"		1075424	2		=			
ANR	1075486	Identifier	gw1		1075424	0					
ANR	1075487	CallExpression	"o2g_dist ( self , ow1 , self -> heigt_transform_coef_inv )"		1075424	1					
ANR	1075488	Callee	o2g_dist		1075424	0					
ANR	1075489	Identifier	o2g_dist		1075424	0					
ANR	1075490	ArgumentList	self		1075424	1					
ANR	1075491	Argument	self		1075424	0					
ANR	1075492	Identifier	self		1075424	0					
ANR	1075493	Argument	ow1		1075424	1					
ANR	1075494	Identifier	ow1		1075424	0					
ANR	1075495	Argument	self -> heigt_transform_coef_inv		1075424	2					
ANR	1075496	PtrMemberAccess	self -> heigt_transform_coef_inv		1075424	0					
ANR	1075497	Identifier	self		1075424	0					
ANR	1075498	Identifier	heigt_transform_coef_inv		1075424	1					
ANR	1075499	ExpressionStatement	* y = zone -> y + ( zone -> type == topzone ? gw1 : - gw1 )	1970:4:79157:79208	1075424	5	True				
ANR	1075500	AssignmentExpression	* y = zone -> y + ( zone -> type == topzone ? gw1 : - gw1 )		1075424	0		=			
ANR	1075501	UnaryOperationExpression	* y		1075424	0					
ANR	1075502	UnaryOperator	*		1075424	0					
ANR	1075503	Identifier	y		1075424	1					
ANR	1075504	AdditiveExpression	zone -> y + ( zone -> type == topzone ? gw1 : - gw1 )		1075424	1		+			
ANR	1075505	PtrMemberAccess	zone -> y		1075424	0					
ANR	1075506	Identifier	zone		1075424	0					
ANR	1075507	Identifier	y		1075424	1					
ANR	1075508	ConditionalExpression	zone -> type == topzone ? gw1 : - gw1		1075424	1					
ANR	1075509	Condition	zone -> type == topzone		1075424	0					
ANR	1075510	EqualityExpression	zone -> type == topzone		1075424	0		==			
ANR	1075511	PtrMemberAccess	zone -> type		1075424	0					
ANR	1075512	Identifier	zone		1075424	0					
ANR	1075513	Identifier	type		1075424	1					
ANR	1075514	Identifier	topzone		1075424	1					
ANR	1075515	Identifier	gw1		1075424	1					
ANR	1075516	UnaryOperationExpression	- gw1		1075424	2					
ANR	1075517	UnaryOperator	-		1075424	0					
ANR	1075518	Identifier	gw1		1075424	1					
ANR	1075519	ReturnType	static void		1075424	1					
ANR	1075520	Identifier	t1_hinter__add_overshoot		1075424	2					
ANR	1075521	ParameterList	"t1_hinter * self , t1_zone * zone , t1_glyph_space_coord * x , t1_glyph_space_coord * y"		1075424	3					
ANR	1075522	Parameter	t1_hinter * self	1962:37:78687:78702	1075424	0	True				
ANR	1075523	ParameterType	t1_hinter *		1075424	0					
ANR	1075524	Identifier	self		1075424	1					
ANR	1075525	Parameter	t1_zone * zone	1962:55:78705:78718	1075424	1	True				
ANR	1075526	ParameterType	t1_zone *		1075424	0					
ANR	1075527	Identifier	zone		1075424	1					
ANR	1075528	Parameter	t1_glyph_space_coord * x	1962:71:78721:78744	1075424	2	True				
ANR	1075529	ParameterType	t1_glyph_space_coord *		1075424	0					
ANR	1075530	Identifier	x		1075424	1					
ANR	1075531	Parameter	t1_glyph_space_coord * y	1962:97:78747:78770	1075424	3	True				
ANR	1075532	ParameterType	t1_glyph_space_coord *		1075424	0					
ANR	1075533	Identifier	y		1075424	1					
ANR	1075534	CFGEntryNode	ENTRY		1075424		True				
ANR	1075535	CFGExitNode	EXIT		1075424		True				
ANR	1075536	Symbol	zone -> y		1075424						
ANR	1075537	Symbol	gw1		1075424						
ANR	1075538	Symbol	topzone		1075424						
ANR	1075539	Symbol	self -> g2o_fraction		1075424						
ANR	1075540	Symbol	* y		1075424						
ANR	1075541	Symbol	* zone		1075424						
ANR	1075542	Symbol	* self		1075424						
ANR	1075543	Symbol	o2g_dist		1075424						
ANR	1075544	Symbol	ow		1075424						
ANR	1075545	Symbol	ow1		1075424						
ANR	1075546	Symbol	self -> heigt_transform_coef_inv		1075424						
ANR	1075547	Symbol	g2o_dist_blue		1075424						
ANR	1075548	Symbol	gw		1075424						
ANR	1075549	Symbol	zone -> type		1075424						
ANR	1075550	Symbol	gy		1075424						
ANR	1075551	Symbol	zone		1075424						
ANR	1075552	Symbol	x		1075424						
ANR	1075553	Symbol	any_abs		1075424						
ANR	1075554	Symbol	self		1075424						
ANR	1075555	Symbol	y		1075424						
ANR	1075556	Function	t1_hinter__compute_aligned_coord	1974:0:79220:85436							
ANR	1075557	FunctionDef	"t1_hinter__compute_aligned_coord (t1_hinter * self , t1_glyph_space_coord * gc , int segment_index , fixed t , const t1_hint * hint , enum t1_align_type align0)"		1075556	0					
ANR	1075558	CompoundStatement		1977:0:79424:85436	1075556	0					
ANR	1075559	IdentifierDeclStatement	bool horiz = ( hint -> type == hstem ) ;	1979:4:79538:79572	1075556	0	True				
ANR	1075560	IdentifierDecl	horiz = ( hint -> type == hstem )		1075556	0					
ANR	1075561	IdentifierDeclType	bool		1075556	0					
ANR	1075562	Identifier	horiz		1075556	1					
ANR	1075563	AssignmentExpression	horiz = ( hint -> type == hstem )		1075556	2		=			
ANR	1075564	Identifier	horiz		1075556	0					
ANR	1075565	EqualityExpression	hint -> type == hstem		1075556	1		==			
ANR	1075566	PtrMemberAccess	hint -> type		1075556	0					
ANR	1075567	Identifier	hint		1075556	0					
ANR	1075568	Identifier	type		1075556	1					
ANR	1075569	Identifier	hstem		1075556	1					
ANR	1075570	IdentifierDeclStatement	enum t1_align_type align = align0 ;	1980:4:79578:79611	1075556	1	True				
ANR	1075571	IdentifierDecl	align = align0		1075556	0					
ANR	1075572	IdentifierDeclType	enum t1_align_type		1075556	0					
ANR	1075573	Identifier	align		1075556	1					
ANR	1075574	AssignmentExpression	align = align0		1075556	2		=			
ANR	1075575	Identifier	align0		1075556	0					
ANR	1075576	Identifier	align0		1075556	1					
ANR	1075577	IdentifierDeclStatement	"t1_glyph_space_coord gx = self -> pole [ segment_index ] . gx , gx0 ;"	1981:4:79617:79676	1075556	2	True				
ANR	1075578	IdentifierDecl	gx = self -> pole [ segment_index ] . gx		1075556	0					
ANR	1075579	IdentifierDeclType	t1_glyph_space_coord		1075556	0					
ANR	1075580	Identifier	gx		1075556	1					
ANR	1075581	AssignmentExpression	gx = self -> pole [ segment_index ] . gx		1075556	2		=			
ANR	1075582	Identifier	gx		1075556	0					
ANR	1075583	MemberAccess	self -> pole [ segment_index ] . gx		1075556	1					
ANR	1075584	ArrayIndexing	self -> pole [ segment_index ]		1075556	0					
ANR	1075585	PtrMemberAccess	self -> pole		1075556	0					
ANR	1075586	Identifier	self		1075556	0					
ANR	1075587	Identifier	pole		1075556	1					
ANR	1075588	Identifier	segment_index		1075556	1					
ANR	1075589	Identifier	gx		1075556	1					
ANR	1075590	IdentifierDecl	gx0		1075556	1					
ANR	1075591	IdentifierDeclType	t1_glyph_space_coord		1075556	0					
ANR	1075592	Identifier	gx0		1075556	1					
ANR	1075593	IdentifierDeclStatement	"t1_glyph_space_coord gy = self -> pole [ segment_index ] . gy , gy0 ;"	1982:4:79682:79741	1075556	3	True				
ANR	1075594	IdentifierDecl	gy = self -> pole [ segment_index ] . gy		1075556	0					
ANR	1075595	IdentifierDeclType	t1_glyph_space_coord		1075556	0					
ANR	1075596	Identifier	gy		1075556	1					
ANR	1075597	AssignmentExpression	gy = self -> pole [ segment_index ] . gy		1075556	2		=			
ANR	1075598	Identifier	gy		1075556	0					
ANR	1075599	MemberAccess	self -> pole [ segment_index ] . gy		1075556	1					
ANR	1075600	ArrayIndexing	self -> pole [ segment_index ]		1075556	0					
ANR	1075601	PtrMemberAccess	self -> pole		1075556	0					
ANR	1075602	Identifier	self		1075556	0					
ANR	1075603	Identifier	pole		1075556	1					
ANR	1075604	Identifier	segment_index		1075556	1					
ANR	1075605	Identifier	gy		1075556	1					
ANR	1075606	IdentifierDecl	gy0		1075556	1					
ANR	1075607	IdentifierDeclType	t1_glyph_space_coord		1075556	0					
ANR	1075608	Identifier	gy0		1075556	1					
ANR	1075609	IdentifierDeclStatement	t1_glyph_space_coord gc0 = ( horiz ? gy : gx ) ;	1983:4:79747:79791	1075556	4	True				
ANR	1075610	IdentifierDecl	gc0 = ( horiz ? gy : gx )		1075556	0					
ANR	1075611	IdentifierDeclType	t1_glyph_space_coord		1075556	0					
ANR	1075612	Identifier	gc0		1075556	1					
ANR	1075613	AssignmentExpression	gc0 = ( horiz ? gy : gx )		1075556	2		=			
ANR	1075614	Identifier	gc0		1075556	0					
ANR	1075615	ConditionalExpression	horiz ? gy : gx		1075556	1					
ANR	1075616	Condition	horiz		1075556	0					
ANR	1075617	Identifier	horiz		1075556	0					
ANR	1075618	Identifier	gy		1075556	1					
ANR	1075619	Identifier	gx		1075556	2					
ANR	1075620	IdentifierDeclStatement	bool align_by_stem = align0 == unaligned && hint -> b0 && hint -> b1 ;	1984:4:79797:80003	1075556	5	True				
ANR	1075621	IdentifierDecl	align_by_stem = align0 == unaligned && hint -> b0 && hint -> b1		1075556	0					
ANR	1075622	IdentifierDeclType	bool		1075556	0					
ANR	1075623	Identifier	align_by_stem		1075556	1					
ANR	1075624	AssignmentExpression	align_by_stem = align0 == unaligned && hint -> b0 && hint -> b1		1075556	2		=			
ANR	1075625	Identifier	align_by_stem		1075556	0					
ANR	1075626	AndExpression	align0 == unaligned && hint -> b0 && hint -> b1		1075556	1		&&			
ANR	1075627	EqualityExpression	align0 == unaligned		1075556	0		==			
ANR	1075628	Identifier	align0		1075556	0					
ANR	1075629	Identifier	unaligned		1075556	1					
ANR	1075630	AndExpression	hint -> b0 && hint -> b1		1075556	1		&&			
ANR	1075631	PtrMemberAccess	hint -> b0		1075556	0					
ANR	1075632	Identifier	hint		1075556	0					
ANR	1075633	Identifier	b0		1075556	1					
ANR	1075634	PtrMemberAccess	hint -> b1		1075556	1					
ANR	1075635	Identifier	hint		1075556	0					
ANR	1075636	Identifier	b1		1075556	1					
ANR	1075637	IfStatement	if ( t )		1075556	6					
ANR	1075638	Condition	t	1994:8:80453:80453	1075556	0	True				
ANR	1075639	Identifier	t		1075556	0					
ANR	1075640	CompoundStatement		21:8:1161:1207	1075556	1					
ANR	1075641	IdentifierDeclStatement	"int next = t1_hinter__segment_end ( self , segment_index ) ;"	1995:8:80466:80520	1075556	0	True				
ANR	1075642	IdentifierDecl	"next = t1_hinter__segment_end ( self , segment_index )"		1075556	0					
ANR	1075643	IdentifierDeclType	int		1075556	0					
ANR	1075644	Identifier	next		1075556	1					
ANR	1075645	AssignmentExpression	"next = t1_hinter__segment_end ( self , segment_index )"		1075556	2		=			
ANR	1075646	Identifier	next		1075556	0					
ANR	1075647	CallExpression	"t1_hinter__segment_end ( self , segment_index )"		1075556	1					
ANR	1075648	Callee	t1_hinter__segment_end		1075556	0					
ANR	1075649	Identifier	t1_hinter__segment_end		1075556	0					
ANR	1075650	ArgumentList	self		1075556	1					
ANR	1075651	Argument	self		1075556	0					
ANR	1075652	Identifier	self		1075556	0					
ANR	1075653	Argument	segment_index		1075556	1					
ANR	1075654	Identifier	segment_index		1075556	0					
ANR	1075655	IdentifierDeclStatement	t1_glyph_space_coord gx1 = self -> pole [ next ] . gx ;	1996:8:80530:80576	1075556	1	True				
ANR	1075656	IdentifierDecl	gx1 = self -> pole [ next ] . gx		1075556	0					
ANR	1075657	IdentifierDeclType	t1_glyph_space_coord		1075556	0					
ANR	1075658	Identifier	gx1		1075556	1					
ANR	1075659	AssignmentExpression	gx1 = self -> pole [ next ] . gx		1075556	2		=			
ANR	1075660	Identifier	gx1		1075556	0					
ANR	1075661	MemberAccess	self -> pole [ next ] . gx		1075556	1					
ANR	1075662	ArrayIndexing	self -> pole [ next ]		1075556	0					
ANR	1075663	PtrMemberAccess	self -> pole		1075556	0					
ANR	1075664	Identifier	self		1075556	0					
ANR	1075665	Identifier	pole		1075556	1					
ANR	1075666	Identifier	next		1075556	1					
ANR	1075667	Identifier	gx		1075556	1					
ANR	1075668	IdentifierDeclStatement	t1_glyph_space_coord gy1 = self -> pole [ next ] . gy ;	1997:8:80586:80632	1075556	2	True				
ANR	1075669	IdentifierDecl	gy1 = self -> pole [ next ] . gy		1075556	0					
ANR	1075670	IdentifierDeclType	t1_glyph_space_coord		1075556	0					
ANR	1075671	Identifier	gy1		1075556	1					
ANR	1075672	AssignmentExpression	gy1 = self -> pole [ next ] . gy		1075556	2		=			
ANR	1075673	Identifier	gy1		1075556	0					
ANR	1075674	MemberAccess	self -> pole [ next ] . gy		1075556	1					
ANR	1075675	ArrayIndexing	self -> pole [ next ]		1075556	0					
ANR	1075676	PtrMemberAccess	self -> pole		1075556	0					
ANR	1075677	Identifier	self		1075556	0					
ANR	1075678	Identifier	pole		1075556	1					
ANR	1075679	Identifier	next		1075556	1					
ANR	1075680	Identifier	gy		1075556	1					
ANR	1075681	ExpressionStatement	gx = ( gx + gx1 ) / 2	1999:8:80643:80662	1075556	3	True				
ANR	1075682	AssignmentExpression	gx = ( gx + gx1 ) / 2		1075556	0		=			
ANR	1075683	Identifier	gx		1075556	0					
ANR	1075684	MultiplicativeExpression	( gx + gx1 ) / 2		1075556	1		/			
ANR	1075685	AdditiveExpression	gx + gx1		1075556	0		+			
ANR	1075686	Identifier	gx		1075556	0					
ANR	1075687	Identifier	gx1		1075556	1					
ANR	1075688	PrimaryExpression	2		1075556	1					
ANR	1075689	ExpressionStatement	gy = ( gy + gy1 ) / 2	2000:8:80672:80691	1075556	4	True				
ANR	1075690	AssignmentExpression	gy = ( gy + gy1 ) / 2		1075556	0		=			
ANR	1075691	Identifier	gy		1075556	0					
ANR	1075692	MultiplicativeExpression	( gy + gy1 ) / 2		1075556	1		/			
ANR	1075693	AdditiveExpression	gy + gy1		1075556	0		+			
ANR	1075694	Identifier	gy		1075556	0					
ANR	1075695	Identifier	gy1		1075556	1					
ANR	1075696	PrimaryExpression	2		1075556	1					
ANR	1075697	ExpressionStatement	gx0 = gx	2002:4:80703:80711	1075556	7	True				
ANR	1075698	AssignmentExpression	gx0 = gx		1075556	0		=			
ANR	1075699	Identifier	gx0		1075556	0					
ANR	1075700	Identifier	gx		1075556	1					
ANR	1075701	ExpressionStatement	gy0 = gy	2003:4:80717:80725	1075556	8	True				
ANR	1075702	AssignmentExpression	gy0 = gy		1075556	0		=			
ANR	1075703	Identifier	gy0		1075556	0					
ANR	1075704	Identifier	gy		1075556	1					
ANR	1075705	IfStatement	if ( horiz )		1075556	9					
ANR	1075706	Condition	horiz	2004:8:80735:80739	1075556	0	True				
ANR	1075707	Identifier	horiz		1075556	0					
ANR	1075708	CompoundStatement		43:8:2344:2459	1075556	1					
ANR	1075709	IdentifierDeclStatement	t1_pole * pole = & self -> pole [ segment_index ] ;	2005:8:80752:80795	1075556	0	True				
ANR	1075710	IdentifierDecl	* pole = & self -> pole [ segment_index ]		1075556	0					
ANR	1075711	IdentifierDeclType	t1_pole *		1075556	0					
ANR	1075712	Identifier	pole		1075556	1					
ANR	1075713	AssignmentExpression	* pole = & self -> pole [ segment_index ]		1075556	2		=			
ANR	1075714	Identifier	pole		1075556	0					
ANR	1075715	UnaryOperationExpression	& self -> pole [ segment_index ]		1075556	1					
ANR	1075716	UnaryOperator	&		1075556	0					
ANR	1075717	ArrayIndexing	self -> pole [ segment_index ]		1075556	1					
ANR	1075718	PtrMemberAccess	self -> pole		1075556	0					
ANR	1075719	Identifier	self		1075556	0					
ANR	1075720	Identifier	pole		1075556	1					
ANR	1075721	Identifier	segment_index		1075556	1					
ANR	1075722	IdentifierDeclStatement	int contour_index = pole -> contour_index ;	2006:8:80805:80844	1075556	1	True				
ANR	1075723	IdentifierDecl	contour_index = pole -> contour_index		1075556	0					
ANR	1075724	IdentifierDeclType	int		1075556	0					
ANR	1075725	Identifier	contour_index		1075556	1					
ANR	1075726	AssignmentExpression	contour_index = pole -> contour_index		1075556	2		=			
ANR	1075727	Identifier	contour_index		1075556	0					
ANR	1075728	PtrMemberAccess	pole -> contour_index		1075556	1					
ANR	1075729	Identifier	pole		1075556	0					
ANR	1075730	Identifier	contour_index		1075556	1					
ANR	1075731	IdentifierDeclStatement	int beg_contour_pole = self -> contour [ contour_index ] ;	2007:8:80854:80905	1075556	2	True				
ANR	1075732	IdentifierDecl	beg_contour_pole = self -> contour [ contour_index ]		1075556	0					
ANR	1075733	IdentifierDeclType	int		1075556	0					
ANR	1075734	Identifier	beg_contour_pole		1075556	1					
ANR	1075735	AssignmentExpression	beg_contour_pole = self -> contour [ contour_index ]		1075556	2		=			
ANR	1075736	Identifier	beg_contour_pole		1075556	0					
ANR	1075737	ArrayIndexing	self -> contour [ contour_index ]		1075556	1					
ANR	1075738	PtrMemberAccess	self -> contour		1075556	0					
ANR	1075739	Identifier	self		1075556	0					
ANR	1075740	Identifier	contour		1075556	1					
ANR	1075741	Identifier	contour_index		1075556	1					
ANR	1075742	IdentifierDeclStatement	int end_contour_pole = self -> contour [ contour_index + 1 ] - 2 ;	2008:8:80915:80974	1075556	3	True				
ANR	1075743	IdentifierDecl	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		1075556	0					
ANR	1075744	IdentifierDeclType	int		1075556	0					
ANR	1075745	Identifier	end_contour_pole		1075556	1					
ANR	1075746	AssignmentExpression	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		1075556	2		=			
ANR	1075747	Identifier	end_contour_pole		1075556	0					
ANR	1075748	AdditiveExpression	self -> contour [ contour_index + 1 ] - 2		1075556	1		-			
ANR	1075749	ArrayIndexing	self -> contour [ contour_index + 1 ]		1075556	0					
ANR	1075750	PtrMemberAccess	self -> contour		1075556	0					
ANR	1075751	Identifier	self		1075556	0					
ANR	1075752	Identifier	contour		1075556	1					
ANR	1075753	AdditiveExpression	contour_index + 1		1075556	1		+			
ANR	1075754	Identifier	contour_index		1075556	0					
ANR	1075755	PrimaryExpression	1		1075556	1					
ANR	1075756	PrimaryExpression	2		1075556	1					
ANR	1075757	IdentifierDeclStatement	"int prev1 = ranger_step_b ( segment_index , beg_contour_pole , end_contour_pole ) ;"	2009:8:80984:81060	1075556	4	True				
ANR	1075758	IdentifierDecl	"prev1 = ranger_step_b ( segment_index , beg_contour_pole , end_contour_pole )"		1075556	0					
ANR	1075759	IdentifierDeclType	int		1075556	0					
ANR	1075760	Identifier	prev1		1075556	1					
ANR	1075761	AssignmentExpression	"prev1 = ranger_step_b ( segment_index , beg_contour_pole , end_contour_pole )"		1075556	2		=			
ANR	1075762	Identifier	prev1		1075556	0					
ANR	1075763	CallExpression	"ranger_step_b ( segment_index , beg_contour_pole , end_contour_pole )"		1075556	1					
ANR	1075764	Callee	ranger_step_b		1075556	0					
ANR	1075765	Identifier	ranger_step_b		1075556	0					
ANR	1075766	ArgumentList	segment_index		1075556	1					
ANR	1075767	Argument	segment_index		1075556	0					
ANR	1075768	Identifier	segment_index		1075556	0					
ANR	1075769	Argument	beg_contour_pole		1075556	1					
ANR	1075770	Identifier	beg_contour_pole		1075556	0					
ANR	1075771	Argument	end_contour_pole		1075556	2					
ANR	1075772	Identifier	end_contour_pole		1075556	0					
ANR	1075773	IdentifierDeclStatement	"int prev2 = ranger_step_b ( prev1 , beg_contour_pole , end_contour_pole ) ;"	2010:8:81070:81146	1075556	5	True				
ANR	1075774	IdentifierDecl	"prev2 = ranger_step_b ( prev1 , beg_contour_pole , end_contour_pole )"		1075556	0					
ANR	1075775	IdentifierDeclType	int		1075556	0					
ANR	1075776	Identifier	prev2		1075556	1					
ANR	1075777	AssignmentExpression	"prev2 = ranger_step_b ( prev1 , beg_contour_pole , end_contour_pole )"		1075556	2		=			
ANR	1075778	Identifier	prev2		1075556	0					
ANR	1075779	CallExpression	"ranger_step_b ( prev1 , beg_contour_pole , end_contour_pole )"		1075556	1					
ANR	1075780	Callee	ranger_step_b		1075556	0					
ANR	1075781	Identifier	ranger_step_b		1075556	0					
ANR	1075782	ArgumentList	prev1		1075556	1					
ANR	1075783	Argument	prev1		1075556	0					
ANR	1075784	Identifier	prev1		1075556	0					
ANR	1075785	Argument	beg_contour_pole		1075556	1					
ANR	1075786	Identifier	beg_contour_pole		1075556	0					
ANR	1075787	Argument	end_contour_pole		1075556	2					
ANR	1075788	Identifier	end_contour_pole		1075556	0					
ANR	1075789	IdentifierDeclStatement	"int next1 = ranger_step_f ( segment_index , beg_contour_pole , end_contour_pole ) ;"	2011:8:81156:81232	1075556	6	True				
ANR	1075790	IdentifierDecl	"next1 = ranger_step_f ( segment_index , beg_contour_pole , end_contour_pole )"		1075556	0					
ANR	1075791	IdentifierDeclType	int		1075556	0					
ANR	1075792	Identifier	next1		1075556	1					
ANR	1075793	AssignmentExpression	"next1 = ranger_step_f ( segment_index , beg_contour_pole , end_contour_pole )"		1075556	2		=			
ANR	1075794	Identifier	next1		1075556	0					
ANR	1075795	CallExpression	"ranger_step_f ( segment_index , beg_contour_pole , end_contour_pole )"		1075556	1					
ANR	1075796	Callee	ranger_step_f		1075556	0					
ANR	1075797	Identifier	ranger_step_f		1075556	0					
ANR	1075798	ArgumentList	segment_index		1075556	1					
ANR	1075799	Argument	segment_index		1075556	0					
ANR	1075800	Identifier	segment_index		1075556	0					
ANR	1075801	Argument	beg_contour_pole		1075556	1					
ANR	1075802	Identifier	beg_contour_pole		1075556	0					
ANR	1075803	Argument	end_contour_pole		1075556	2					
ANR	1075804	Identifier	end_contour_pole		1075556	0					
ANR	1075805	IdentifierDeclStatement	"int next2 = ranger_step_f ( next1 , beg_contour_pole , end_contour_pole ) ;"	2012:8:81242:81318	1075556	7	True				
ANR	1075806	IdentifierDecl	"next2 = ranger_step_f ( next1 , beg_contour_pole , end_contour_pole )"		1075556	0					
ANR	1075807	IdentifierDeclType	int		1075556	0					
ANR	1075808	Identifier	next2		1075556	1					
ANR	1075809	AssignmentExpression	"next2 = ranger_step_f ( next1 , beg_contour_pole , end_contour_pole )"		1075556	2		=			
ANR	1075810	Identifier	next2		1075556	0					
ANR	1075811	CallExpression	"ranger_step_f ( next1 , beg_contour_pole , end_contour_pole )"		1075556	1					
ANR	1075812	Callee	ranger_step_f		1075556	0					
ANR	1075813	Identifier	ranger_step_f		1075556	0					
ANR	1075814	ArgumentList	next1		1075556	1					
ANR	1075815	Argument	next1		1075556	0					
ANR	1075816	Identifier	next1		1075556	0					
ANR	1075817	Argument	beg_contour_pole		1075556	1					
ANR	1075818	Identifier	beg_contour_pole		1075556	0					
ANR	1075819	Argument	end_contour_pole		1075556	2					
ANR	1075820	Identifier	end_contour_pole		1075556	0					
ANR	1075821	IdentifierDeclStatement	"bool forwd_horiz = ( any_abs ( self -> pole [ next1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ next1 ] . gx - pole -> gx ) / 10 ) ) ;"	2013:8:81328:81476	1075556	8	True				
ANR	1075822	IdentifierDecl	"forwd_horiz = ( any_abs ( self -> pole [ next1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ next1 ] . gx - pole -> gx ) / 10 ) )"		1075556	0					
ANR	1075823	IdentifierDeclType	bool		1075556	0					
ANR	1075824	Identifier	forwd_horiz		1075556	1					
ANR	1075825	AssignmentExpression	"forwd_horiz = ( any_abs ( self -> pole [ next1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ next1 ] . gx - pole -> gx ) / 10 ) )"		1075556	2		=			
ANR	1075826	Identifier	forwd_horiz		1075556	0					
ANR	1075827	RelationalExpression	"any_abs ( self -> pole [ next1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ next1 ] . gx - pole -> gx ) / 10 )"		1075556	1		<=			
ANR	1075828	CallExpression	any_abs ( self -> pole [ next1 ] . gy - pole -> gy )		1075556	0					
ANR	1075829	Callee	any_abs		1075556	0					
ANR	1075830	Identifier	any_abs		1075556	0					
ANR	1075831	ArgumentList	self -> pole [ next1 ] . gy - pole -> gy		1075556	1					
ANR	1075832	Argument	self -> pole [ next1 ] . gy - pole -> gy		1075556	0					
ANR	1075833	AdditiveExpression	self -> pole [ next1 ] . gy - pole -> gy		1075556	0		-			
ANR	1075834	MemberAccess	self -> pole [ next1 ] . gy		1075556	0					
ANR	1075835	ArrayIndexing	self -> pole [ next1 ]		1075556	0					
ANR	1075836	PtrMemberAccess	self -> pole		1075556	0					
ANR	1075837	Identifier	self		1075556	0					
ANR	1075838	Identifier	pole		1075556	1					
ANR	1075839	Identifier	next1		1075556	1					
ANR	1075840	Identifier	gy		1075556	1					
ANR	1075841	PtrMemberAccess	pole -> gy		1075556	1					
ANR	1075842	Identifier	pole		1075556	0					
ANR	1075843	Identifier	gy		1075556	1					
ANR	1075844	CallExpression	"max ( self -> blue_fuzz , any_abs ( self -> pole [ next1 ] . gx - pole -> gx ) / 10 )"		1075556	1					
ANR	1075845	Callee	max		1075556	0					
ANR	1075846	Identifier	max		1075556	0					
ANR	1075847	ArgumentList	self -> blue_fuzz		1075556	1					
ANR	1075848	Argument	self -> blue_fuzz		1075556	0					
ANR	1075849	PtrMemberAccess	self -> blue_fuzz		1075556	0					
ANR	1075850	Identifier	self		1075556	0					
ANR	1075851	Identifier	blue_fuzz		1075556	1					
ANR	1075852	Argument	any_abs ( self -> pole [ next1 ] . gx - pole -> gx ) / 10		1075556	1					
ANR	1075853	MultiplicativeExpression	any_abs ( self -> pole [ next1 ] . gx - pole -> gx ) / 10		1075556	0		/			
ANR	1075854	CallExpression	any_abs ( self -> pole [ next1 ] . gx - pole -> gx )		1075556	0					
ANR	1075855	Callee	any_abs		1075556	0					
ANR	1075856	Identifier	any_abs		1075556	0					
ANR	1075857	ArgumentList	self -> pole [ next1 ] . gx - pole -> gx		1075556	1					
ANR	1075858	Argument	self -> pole [ next1 ] . gx - pole -> gx		1075556	0					
ANR	1075859	AdditiveExpression	self -> pole [ next1 ] . gx - pole -> gx		1075556	0		-			
ANR	1075860	MemberAccess	self -> pole [ next1 ] . gx		1075556	0					
ANR	1075861	ArrayIndexing	self -> pole [ next1 ]		1075556	0					
ANR	1075862	PtrMemberAccess	self -> pole		1075556	0					
ANR	1075863	Identifier	self		1075556	0					
ANR	1075864	Identifier	pole		1075556	1					
ANR	1075865	Identifier	next1		1075556	1					
ANR	1075866	Identifier	gx		1075556	1					
ANR	1075867	PtrMemberAccess	pole -> gx		1075556	1					
ANR	1075868	Identifier	pole		1075556	0					
ANR	1075869	Identifier	gx		1075556	1					
ANR	1075870	PrimaryExpression	10		1075556	1					
ANR	1075871	IdentifierDeclStatement	"bool bckwd_horiz = ( any_abs ( self -> pole [ prev1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ prev1 ] . gx - pole -> gx ) / 10 ) ) ;"	2015:8:81486:81634	1075556	9	True				
ANR	1075872	IdentifierDecl	"bckwd_horiz = ( any_abs ( self -> pole [ prev1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ prev1 ] . gx - pole -> gx ) / 10 ) )"		1075556	0					
ANR	1075873	IdentifierDeclType	bool		1075556	0					
ANR	1075874	Identifier	bckwd_horiz		1075556	1					
ANR	1075875	AssignmentExpression	"bckwd_horiz = ( any_abs ( self -> pole [ prev1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ prev1 ] . gx - pole -> gx ) / 10 ) )"		1075556	2		=			
ANR	1075876	Identifier	bckwd_horiz		1075556	0					
ANR	1075877	RelationalExpression	"any_abs ( self -> pole [ prev1 ] . gy - pole -> gy ) <= max ( self -> blue_fuzz , any_abs ( self -> pole [ prev1 ] . gx - pole -> gx ) / 10 )"		1075556	1		<=			
ANR	1075878	CallExpression	any_abs ( self -> pole [ prev1 ] . gy - pole -> gy )		1075556	0					
ANR	1075879	Callee	any_abs		1075556	0					
ANR	1075880	Identifier	any_abs		1075556	0					
ANR	1075881	ArgumentList	self -> pole [ prev1 ] . gy - pole -> gy		1075556	1					
ANR	1075882	Argument	self -> pole [ prev1 ] . gy - pole -> gy		1075556	0					
ANR	1075883	AdditiveExpression	self -> pole [ prev1 ] . gy - pole -> gy		1075556	0		-			
ANR	1075884	MemberAccess	self -> pole [ prev1 ] . gy		1075556	0					
ANR	1075885	ArrayIndexing	self -> pole [ prev1 ]		1075556	0					
ANR	1075886	PtrMemberAccess	self -> pole		1075556	0					
ANR	1075887	Identifier	self		1075556	0					
ANR	1075888	Identifier	pole		1075556	1					
ANR	1075889	Identifier	prev1		1075556	1					
ANR	1075890	Identifier	gy		1075556	1					
ANR	1075891	PtrMemberAccess	pole -> gy		1075556	1					
ANR	1075892	Identifier	pole		1075556	0					
ANR	1075893	Identifier	gy		1075556	1					
ANR	1075894	CallExpression	"max ( self -> blue_fuzz , any_abs ( self -> pole [ prev1 ] . gx - pole -> gx ) / 10 )"		1075556	1					
ANR	1075895	Callee	max		1075556	0					
ANR	1075896	Identifier	max		1075556	0					
ANR	1075897	ArgumentList	self -> blue_fuzz		1075556	1					
ANR	1075898	Argument	self -> blue_fuzz		1075556	0					
ANR	1075899	PtrMemberAccess	self -> blue_fuzz		1075556	0					
ANR	1075900	Identifier	self		1075556	0					
ANR	1075901	Identifier	blue_fuzz		1075556	1					
ANR	1075902	Argument	any_abs ( self -> pole [ prev1 ] . gx - pole -> gx ) / 10		1075556	1					
ANR	1075903	MultiplicativeExpression	any_abs ( self -> pole [ prev1 ] . gx - pole -> gx ) / 10		1075556	0		/			
ANR	1075904	CallExpression	any_abs ( self -> pole [ prev1 ] . gx - pole -> gx )		1075556	0					
ANR	1075905	Callee	any_abs		1075556	0					
ANR	1075906	Identifier	any_abs		1075556	0					
ANR	1075907	ArgumentList	self -> pole [ prev1 ] . gx - pole -> gx		1075556	1					
ANR	1075908	Argument	self -> pole [ prev1 ] . gx - pole -> gx		1075556	0					
ANR	1075909	AdditiveExpression	self -> pole [ prev1 ] . gx - pole -> gx		1075556	0		-			
ANR	1075910	MemberAccess	self -> pole [ prev1 ] . gx		1075556	0					
ANR	1075911	ArrayIndexing	self -> pole [ prev1 ]		1075556	0					
ANR	1075912	PtrMemberAccess	self -> pole		1075556	0					
ANR	1075913	Identifier	self		1075556	0					
ANR	1075914	Identifier	pole		1075556	1					
ANR	1075915	Identifier	prev1		1075556	1					
ANR	1075916	Identifier	gx		1075556	1					
ANR	1075917	PtrMemberAccess	pole -> gx		1075556	1					
ANR	1075918	Identifier	pole		1075556	0					
ANR	1075919	Identifier	gx		1075556	1					
ANR	1075920	PrimaryExpression	10		1075556	1					
ANR	1075921	IdentifierDeclStatement	bool maximum = ( self -> pole [ next1 ] . gy - pole -> gy < 0 && self -> pole [ prev1 ] . gy - pole -> gy < 0 ) ;	2017:8:81644:81759	1075556	10	True				
ANR	1075922	IdentifierDecl	maximum = ( self -> pole [ next1 ] . gy - pole -> gy < 0 && self -> pole [ prev1 ] . gy - pole -> gy < 0 )		1075556	0					
ANR	1075923	IdentifierDeclType	bool		1075556	0					
ANR	1075924	Identifier	maximum		1075556	1					
ANR	1075925	AssignmentExpression	maximum = ( self -> pole [ next1 ] . gy - pole -> gy < 0 && self -> pole [ prev1 ] . gy - pole -> gy < 0 )		1075556	2		=			
ANR	1075926	Identifier	maximum		1075556	0					
ANR	1075927	AndExpression	self -> pole [ next1 ] . gy - pole -> gy < 0 && self -> pole [ prev1 ] . gy - pole -> gy < 0		1075556	1		&&			
ANR	1075928	RelationalExpression	self -> pole [ next1 ] . gy - pole -> gy < 0		1075556	0		<			
ANR	1075929	AdditiveExpression	self -> pole [ next1 ] . gy - pole -> gy		1075556	0		-			
ANR	1075930	MemberAccess	self -> pole [ next1 ] . gy		1075556	0					
ANR	1075931	ArrayIndexing	self -> pole [ next1 ]		1075556	0					
ANR	1075932	PtrMemberAccess	self -> pole		1075556	0					
ANR	1075933	Identifier	self		1075556	0					
ANR	1075934	Identifier	pole		1075556	1					
ANR	1075935	Identifier	next1		1075556	1					
ANR	1075936	Identifier	gy		1075556	1					
ANR	1075937	PtrMemberAccess	pole -> gy		1075556	1					
ANR	1075938	Identifier	pole		1075556	0					
ANR	1075939	Identifier	gy		1075556	1					
ANR	1075940	PrimaryExpression	0		1075556	1					
ANR	1075941	RelationalExpression	self -> pole [ prev1 ] . gy - pole -> gy < 0		1075556	1		<			
ANR	1075942	AdditiveExpression	self -> pole [ prev1 ] . gy - pole -> gy		1075556	0		-			
ANR	1075943	MemberAccess	self -> pole [ prev1 ] . gy		1075556	0					
ANR	1075944	ArrayIndexing	self -> pole [ prev1 ]		1075556	0					
ANR	1075945	PtrMemberAccess	self -> pole		1075556	0					
ANR	1075946	Identifier	self		1075556	0					
ANR	1075947	Identifier	pole		1075556	1					
ANR	1075948	Identifier	prev1		1075556	1					
ANR	1075949	Identifier	gy		1075556	1					
ANR	1075950	PtrMemberAccess	pole -> gy		1075556	1					
ANR	1075951	Identifier	pole		1075556	0					
ANR	1075952	Identifier	gy		1075556	1					
ANR	1075953	PrimaryExpression	0		1075556	1					
ANR	1075954	IdentifierDeclStatement	bool minimum = ( self -> pole [ next1 ] . gy - pole -> gy > 0 && self -> pole [ prev1 ] . gy - pole -> gy > 0 ) ;	2019:8:81769:81884	1075556	11	True				
ANR	1075955	IdentifierDecl	minimum = ( self -> pole [ next1 ] . gy - pole -> gy > 0 && self -> pole [ prev1 ] . gy - pole -> gy > 0 )		1075556	0					
ANR	1075956	IdentifierDeclType	bool		1075556	0					
ANR	1075957	Identifier	minimum		1075556	1					
ANR	1075958	AssignmentExpression	minimum = ( self -> pole [ next1 ] . gy - pole -> gy > 0 && self -> pole [ prev1 ] . gy - pole -> gy > 0 )		1075556	2		=			
ANR	1075959	Identifier	minimum		1075556	0					
ANR	1075960	AndExpression	self -> pole [ next1 ] . gy - pole -> gy > 0 && self -> pole [ prev1 ] . gy - pole -> gy > 0		1075556	1		&&			
ANR	1075961	RelationalExpression	self -> pole [ next1 ] . gy - pole -> gy > 0		1075556	0		>			
ANR	1075962	AdditiveExpression	self -> pole [ next1 ] . gy - pole -> gy		1075556	0		-			
ANR	1075963	MemberAccess	self -> pole [ next1 ] . gy		1075556	0					
ANR	1075964	ArrayIndexing	self -> pole [ next1 ]		1075556	0					
ANR	1075965	PtrMemberAccess	self -> pole		1075556	0					
ANR	1075966	Identifier	self		1075556	0					
ANR	1075967	Identifier	pole		1075556	1					
ANR	1075968	Identifier	next1		1075556	1					
ANR	1075969	Identifier	gy		1075556	1					
ANR	1075970	PtrMemberAccess	pole -> gy		1075556	1					
ANR	1075971	Identifier	pole		1075556	0					
ANR	1075972	Identifier	gy		1075556	1					
ANR	1075973	PrimaryExpression	0		1075556	1					
ANR	1075974	RelationalExpression	self -> pole [ prev1 ] . gy - pole -> gy > 0		1075556	1		>			
ANR	1075975	AdditiveExpression	self -> pole [ prev1 ] . gy - pole -> gy		1075556	0		-			
ANR	1075976	MemberAccess	self -> pole [ prev1 ] . gy		1075556	0					
ANR	1075977	ArrayIndexing	self -> pole [ prev1 ]		1075556	0					
ANR	1075978	PtrMemberAccess	self -> pole		1075556	0					
ANR	1075979	Identifier	self		1075556	0					
ANR	1075980	Identifier	pole		1075556	1					
ANR	1075981	Identifier	prev1		1075556	1					
ANR	1075982	Identifier	gy		1075556	1					
ANR	1075983	PtrMemberAccess	pole -> gy		1075556	1					
ANR	1075984	Identifier	pole		1075556	0					
ANR	1075985	Identifier	gy		1075556	1					
ANR	1075986	PrimaryExpression	0		1075556	1					
ANR	1075987	IfStatement	if ( forwd_horiz || bckwd_horiz || maximum || minimum )		1075556	12					
ANR	1075988	Condition	forwd_horiz || bckwd_horiz || maximum || minimum	2022:12:81899:81946	1075556	0	True				
ANR	1075989	OrExpression	forwd_horiz || bckwd_horiz || maximum || minimum		1075556	0		||			
ANR	1075990	Identifier	forwd_horiz		1075556	0					
ANR	1075991	OrExpression	bckwd_horiz || maximum || minimum		1075556	1		||			
ANR	1075992	Identifier	bckwd_horiz		1075556	0					
ANR	1075993	OrExpression	maximum || minimum		1075556	1		||			
ANR	1075994	Identifier	maximum		1075556	0					
ANR	1075995	Identifier	minimum		1075556	1					
ANR	1075996	CompoundStatement		54:12:3021:3189	1075556	1					
ANR	1075997	IdentifierDeclStatement	bool forwd_curve = ( self -> pole [ next1 ] . type == offcurve ) ;	2023:12:81963:82018	1075556	0	True				
ANR	1075998	IdentifierDecl	forwd_curve = ( self -> pole [ next1 ] . type == offcurve )		1075556	0					
ANR	1075999	IdentifierDeclType	bool		1075556	0					
ANR	1076000	Identifier	forwd_curve		1075556	1					
ANR	1076001	AssignmentExpression	forwd_curve = ( self -> pole [ next1 ] . type == offcurve )		1075556	2		=			
ANR	1076002	Identifier	forwd_curve		1075556	0					
ANR	1076003	EqualityExpression	self -> pole [ next1 ] . type == offcurve		1075556	1		==			
ANR	1076004	MemberAccess	self -> pole [ next1 ] . type		1075556	0					
ANR	1076005	ArrayIndexing	self -> pole [ next1 ]		1075556	0					
ANR	1076006	PtrMemberAccess	self -> pole		1075556	0					
ANR	1076007	Identifier	self		1075556	0					
ANR	1076008	Identifier	pole		1075556	1					
ANR	1076009	Identifier	next1		1075556	1					
ANR	1076010	Identifier	type		1075556	1					
ANR	1076011	Identifier	offcurve		1075556	1					
ANR	1076012	IdentifierDeclStatement	bool bckwd_curve = ( self -> pole [ prev1 ] . type == offcurve ) ;	2024:12:82032:82087	1075556	1	True				
ANR	1076013	IdentifierDecl	bckwd_curve = ( self -> pole [ prev1 ] . type == offcurve )		1075556	0					
ANR	1076014	IdentifierDeclType	bool		1075556	0					
ANR	1076015	Identifier	bckwd_curve		1075556	1					
ANR	1076016	AssignmentExpression	bckwd_curve = ( self -> pole [ prev1 ] . type == offcurve )		1075556	2		=			
ANR	1076017	Identifier	bckwd_curve		1075556	0					
ANR	1076018	EqualityExpression	self -> pole [ prev1 ] . type == offcurve		1075556	1		==			
ANR	1076019	MemberAccess	self -> pole [ prev1 ] . type		1075556	0					
ANR	1076020	ArrayIndexing	self -> pole [ prev1 ]		1075556	0					
ANR	1076021	PtrMemberAccess	self -> pole		1075556	0					
ANR	1076022	Identifier	self		1075556	0					
ANR	1076023	Identifier	pole		1075556	1					
ANR	1076024	Identifier	prev1		1075556	1					
ANR	1076025	Identifier	type		1075556	1					
ANR	1076026	Identifier	offcurve		1075556	1					
ANR	1076027	IdentifierDeclStatement	bool curve = ( bckwd_curve && forwd_curve ) ;	2025:12:82101:82142	1075556	2	True				
ANR	1076028	IdentifierDecl	curve = ( bckwd_curve && forwd_curve )		1075556	0					
ANR	1076029	IdentifierDeclType	bool		1075556	0					
ANR	1076030	Identifier	curve		1075556	1					
ANR	1076031	AssignmentExpression	curve = ( bckwd_curve && forwd_curve )		1075556	2		=			
ANR	1076032	Identifier	curve		1075556	0					
ANR	1076033	AndExpression	bckwd_curve && forwd_curve		1075556	1		&&			
ANR	1076034	Identifier	bckwd_curve		1075556	0					
ANR	1076035	Identifier	forwd_curve		1075556	1					
ANR	1076036	IdentifierDeclStatement	bool convex = ( curve && self -> pole [ prev2 ] . gy <= pole -> gy && self -> pole [ next2 ] . gy <= pole -> gy ) ;	2026:12:82156:82287	1075556	3	True				
ANR	1076037	IdentifierDecl	convex = ( curve && self -> pole [ prev2 ] . gy <= pole -> gy && self -> pole [ next2 ] . gy <= pole -> gy )		1075556	0					
ANR	1076038	IdentifierDeclType	bool		1075556	0					
ANR	1076039	Identifier	convex		1075556	1					
ANR	1076040	AssignmentExpression	convex = ( curve && self -> pole [ prev2 ] . gy <= pole -> gy && self -> pole [ next2 ] . gy <= pole -> gy )		1075556	2		=			
ANR	1076041	Identifier	convex		1075556	0					
ANR	1076042	AndExpression	curve && self -> pole [ prev2 ] . gy <= pole -> gy && self -> pole [ next2 ] . gy <= pole -> gy		1075556	1		&&			
ANR	1076043	Identifier	curve		1075556	0					
ANR	1076044	AndExpression	self -> pole [ prev2 ] . gy <= pole -> gy && self -> pole [ next2 ] . gy <= pole -> gy		1075556	1		&&			
ANR	1076045	RelationalExpression	self -> pole [ prev2 ] . gy <= pole -> gy		1075556	0		<=			
ANR	1076046	MemberAccess	self -> pole [ prev2 ] . gy		1075556	0					
ANR	1076047	ArrayIndexing	self -> pole [ prev2 ]		1075556	0					
ANR	1076048	PtrMemberAccess	self -> pole		1075556	0					
ANR	1076049	Identifier	self		1075556	0					
ANR	1076050	Identifier	pole		1075556	1					
ANR	1076051	Identifier	prev2		1075556	1					
ANR	1076052	Identifier	gy		1075556	1					
ANR	1076053	PtrMemberAccess	pole -> gy		1075556	1					
ANR	1076054	Identifier	pole		1075556	0					
ANR	1076055	Identifier	gy		1075556	1					
ANR	1076056	RelationalExpression	self -> pole [ next2 ] . gy <= pole -> gy		1075556	1		<=			
ANR	1076057	MemberAccess	self -> pole [ next2 ] . gy		1075556	0					
ANR	1076058	ArrayIndexing	self -> pole [ next2 ]		1075556	0					
ANR	1076059	PtrMemberAccess	self -> pole		1075556	0					
ANR	1076060	Identifier	self		1075556	0					
ANR	1076061	Identifier	pole		1075556	1					
ANR	1076062	Identifier	next2		1075556	1					
ANR	1076063	Identifier	gy		1075556	1					
ANR	1076064	PtrMemberAccess	pole -> gy		1075556	1					
ANR	1076065	Identifier	pole		1075556	0					
ANR	1076066	Identifier	gy		1075556	1					
ANR	1076067	IdentifierDeclStatement	bool concave = ( curve && self -> pole [ prev2 ] . gy >= pole -> gy && self -> pole [ next2 ] . gy >= pole -> gy ) ;	2028:12:82301:82432	1075556	4	True				
ANR	1076068	IdentifierDecl	concave = ( curve && self -> pole [ prev2 ] . gy >= pole -> gy && self -> pole [ next2 ] . gy >= pole -> gy )		1075556	0					
ANR	1076069	IdentifierDeclType	bool		1075556	0					
ANR	1076070	Identifier	concave		1075556	1					
ANR	1076071	AssignmentExpression	concave = ( curve && self -> pole [ prev2 ] . gy >= pole -> gy && self -> pole [ next2 ] . gy >= pole -> gy )		1075556	2		=			
ANR	1076072	Identifier	concave		1075556	0					
ANR	1076073	AndExpression	curve && self -> pole [ prev2 ] . gy >= pole -> gy && self -> pole [ next2 ] . gy >= pole -> gy		1075556	1		&&			
ANR	1076074	Identifier	curve		1075556	0					
ANR	1076075	AndExpression	self -> pole [ prev2 ] . gy >= pole -> gy && self -> pole [ next2 ] . gy >= pole -> gy		1075556	1		&&			
ANR	1076076	RelationalExpression	self -> pole [ prev2 ] . gy >= pole -> gy		1075556	0		>=			
ANR	1076077	MemberAccess	self -> pole [ prev2 ] . gy		1075556	0					
ANR	1076078	ArrayIndexing	self -> pole [ prev2 ]		1075556	0					
ANR	1076079	PtrMemberAccess	self -> pole		1075556	0					
ANR	1076080	Identifier	self		1075556	0					
ANR	1076081	Identifier	pole		1075556	1					
ANR	1076082	Identifier	prev2		1075556	1					
ANR	1076083	Identifier	gy		1075556	1					
ANR	1076084	PtrMemberAccess	pole -> gy		1075556	1					
ANR	1076085	Identifier	pole		1075556	0					
ANR	1076086	Identifier	gy		1075556	1					
ANR	1076087	RelationalExpression	self -> pole [ next2 ] . gy >= pole -> gy		1075556	1		>=			
ANR	1076088	MemberAccess	self -> pole [ next2 ] . gy		1075556	0					
ANR	1076089	ArrayIndexing	self -> pole [ next2 ]		1075556	0					
ANR	1076090	PtrMemberAccess	self -> pole		1075556	0					
ANR	1076091	Identifier	self		1075556	0					
ANR	1076092	Identifier	pole		1075556	1					
ANR	1076093	Identifier	next2		1075556	1					
ANR	1076094	Identifier	gy		1075556	1					
ANR	1076095	PtrMemberAccess	pole -> gy		1075556	1					
ANR	1076096	Identifier	pole		1075556	0					
ANR	1076097	Identifier	gy		1075556	1					
ANR	1076098	IdentifierDeclStatement	"t1_zone * zone = t1_hinter__find_zone ( self , pole -> gy , curve || maximum || minimum , convex || maximum , concave || minimum ) ;"	2030:12:82446:82614	1075556	5	True				
ANR	1076099	IdentifierDecl	"* zone = t1_hinter__find_zone ( self , pole -> gy , curve || maximum || minimum , convex || maximum , concave || minimum )"		1075556	0					
ANR	1076100	IdentifierDeclType	t1_zone *		1075556	0					
ANR	1076101	Identifier	zone		1075556	1					
ANR	1076102	AssignmentExpression	"* zone = t1_hinter__find_zone ( self , pole -> gy , curve || maximum || minimum , convex || maximum , concave || minimum )"		1075556	2		=			
ANR	1076103	Identifier	zone		1075556	0					
ANR	1076104	CallExpression	"t1_hinter__find_zone ( self , pole -> gy , curve || maximum || minimum , convex || maximum , concave || minimum )"		1075556	1					
ANR	1076105	Callee	t1_hinter__find_zone		1075556	0					
ANR	1076106	Identifier	t1_hinter__find_zone		1075556	0					
ANR	1076107	ArgumentList	self		1075556	1					
ANR	1076108	Argument	self		1075556	0					
ANR	1076109	Identifier	self		1075556	0					
ANR	1076110	Argument	pole -> gy		1075556	1					
ANR	1076111	PtrMemberAccess	pole -> gy		1075556	0					
ANR	1076112	Identifier	pole		1075556	0					
ANR	1076113	Identifier	gy		1075556	1					
ANR	1076114	Argument	curve || maximum || minimum		1075556	2					
ANR	1076115	OrExpression	curve || maximum || minimum		1075556	0		||			
ANR	1076116	Identifier	curve		1075556	0					
ANR	1076117	OrExpression	maximum || minimum		1075556	1		||			
ANR	1076118	Identifier	maximum		1075556	0					
ANR	1076119	Identifier	minimum		1075556	1					
ANR	1076120	Argument	convex || maximum		1075556	3					
ANR	1076121	OrExpression	convex || maximum		1075556	0		||			
ANR	1076122	Identifier	convex		1075556	0					
ANR	1076123	Identifier	maximum		1075556	1					
ANR	1076124	Argument	concave || minimum		1075556	4					
ANR	1076125	OrExpression	concave || minimum		1075556	0		||			
ANR	1076126	Identifier	concave		1075556	0					
ANR	1076127	Identifier	minimum		1075556	1					
ANR	1076128	IfStatement	if ( zone != NULL && ( forwd_horiz || bckwd_horiz || ( maximum && zone -> type == topzone ) || ( minimum && zone -> type == botzone ) ) )		1075556	6					
ANR	1076129	Condition	zone != NULL && ( forwd_horiz || bckwd_horiz || ( maximum && zone -> type == topzone ) || ( minimum && zone -> type == botzone ) )	2033:16:82633:82811	1075556	0	True				
ANR	1076130	AndExpression	zone != NULL && ( forwd_horiz || bckwd_horiz || ( maximum && zone -> type == topzone ) || ( minimum && zone -> type == botzone ) )		1075556	0		&&			
ANR	1076131	EqualityExpression	zone != NULL		1075556	0		!=			
ANR	1076132	Identifier	zone		1075556	0					
ANR	1076133	Identifier	NULL		1075556	1					
ANR	1076134	OrExpression	forwd_horiz || bckwd_horiz || ( maximum && zone -> type == topzone ) || ( minimum && zone -> type == botzone )		1075556	1		||			
ANR	1076135	Identifier	forwd_horiz		1075556	0					
ANR	1076136	OrExpression	bckwd_horiz || ( maximum && zone -> type == topzone ) || ( minimum && zone -> type == botzone )		1075556	1		||			
ANR	1076137	Identifier	bckwd_horiz		1075556	0					
ANR	1076138	OrExpression	( maximum && zone -> type == topzone ) || ( minimum && zone -> type == botzone )		1075556	1		||			
ANR	1076139	AndExpression	maximum && zone -> type == topzone		1075556	0		&&			
ANR	1076140	Identifier	maximum		1075556	0					
ANR	1076141	EqualityExpression	zone -> type == topzone		1075556	1		==			
ANR	1076142	PtrMemberAccess	zone -> type		1075556	0					
ANR	1076143	Identifier	zone		1075556	0					
ANR	1076144	Identifier	type		1075556	1					
ANR	1076145	Identifier	topzone		1075556	1					
ANR	1076146	AndExpression	minimum && zone -> type == botzone		1075556	1		&&			
ANR	1076147	Identifier	minimum		1075556	0					
ANR	1076148	EqualityExpression	zone -> type == botzone		1075556	1		==			
ANR	1076149	PtrMemberAccess	zone -> type		1075556	0					
ANR	1076150	Identifier	zone		1075556	0					
ANR	1076151	Identifier	type		1075556	1					
ANR	1076152	Identifier	botzone		1075556	1					
ANR	1076153	CompoundStatement		62:23:3461:3572	1075556	1					
ANR	1076154	IfStatement	if ( self -> suppress_overshoots )		1075556	0					
ANR	1076155	Condition	self -> suppress_overshoots	2037:20:82836:82860	1075556	0	True				
ANR	1076156	PtrMemberAccess	self -> suppress_overshoots		1075556	0					
ANR	1076157	Identifier	self		1075556	0					
ANR	1076158	Identifier	suppress_overshoots		1075556	1					
ANR	1076159	Statement	if	2038:20:82883:82884	1075556	1	True				
ANR	1076160	ElseStatement	else		1075556	0					
ANR	1076161	ExpressionStatement	gy = zone -> y	2041:24:83048:83060	1075556	0	True				
ANR	1076162	AssignmentExpression	gy = zone -> y		1075556	0		=			
ANR	1076163	Identifier	gy		1075556	0					
ANR	1076164	PtrMemberAccess	zone -> y		1075556	1					
ANR	1076165	Identifier	zone		1075556	0					
ANR	1076166	Identifier	y		1075556	1					
ANR	1076167	IdentifierDeclStatement	ADOBE_OVERSHOOT_COMPATIBILIY gy = ( zone -> type == topzone ? zone -> overshoot_y : zone -> y ) ;	2038:23:82886:82997	1075556	1	True				
ANR	1076168	IdentifierDecl	gy = ( zone -> type == topzone ? zone -> overshoot_y : zone -> y )		1075556	0					
ANR	1076169	IdentifierDeclType	ADOBE_OVERSHOOT_COMPATIBILIY		1075556	0					
ANR	1076170	Identifier	gy		1075556	1					
ANR	1076171	AssignmentExpression	gy = ( zone -> type == topzone ? zone -> overshoot_y : zone -> y )		1075556	2		=			
ANR	1076172	Identifier	gy		1075556	0					
ANR	1076173	ConditionalExpression	zone -> type == topzone ? zone -> overshoot_y : zone -> y		1075556	1					
ANR	1076174	Condition	zone -> type == topzone		1075556	0					
ANR	1076175	EqualityExpression	zone -> type == topzone		1075556	0		==			
ANR	1076176	PtrMemberAccess	zone -> type		1075556	0					
ANR	1076177	Identifier	zone		1075556	0					
ANR	1076178	Identifier	type		1075556	1					
ANR	1076179	Identifier	topzone		1075556	1					
ANR	1076180	PtrMemberAccess	zone -> overshoot_y		1075556	1					
ANR	1076181	Identifier	zone		1075556	0					
ANR	1076182	Identifier	overshoot_y		1075556	1					
ANR	1076183	PtrMemberAccess	zone -> y		1075556	2					
ANR	1076184	Identifier	zone		1075556	0					
ANR	1076185	Identifier	y		1075556	1					
ANR	1076186	Statement	endif	2042:20:83082:83086	1075556	2	True				
ANR	1076187	ExpressionStatement	align = ( zone -> type == topzone ? topzn : botzn )	2061:16:83939:83986	1075556	3	True				
ANR	1076188	AssignmentExpression	align = ( zone -> type == topzone ? topzn : botzn )		1075556	0		=			
ANR	1076189	Identifier	align		1075556	0					
ANR	1076190	ConditionalExpression	zone -> type == topzone ? topzn : botzn		1075556	1					
ANR	1076191	Condition	zone -> type == topzone		1075556	0					
ANR	1076192	EqualityExpression	zone -> type == topzone		1075556	0		==			
ANR	1076193	PtrMemberAccess	zone -> type		1075556	0					
ANR	1076194	Identifier	zone		1075556	0					
ANR	1076195	Identifier	type		1075556	1					
ANR	1076196	Identifier	topzone		1075556	1					
ANR	1076197	Identifier	topzn		1075556	1					
ANR	1076198	Identifier	botzn		1075556	2					
ANR	1076199	ExpressionStatement	align_by_stem = false	2062:16:84004:84025	1075556	4	True				
ANR	1076200	AssignmentExpression	align_by_stem = false		1075556	0		=			
ANR	1076201	Identifier	align_by_stem		1075556	0					
ANR	1076202	Identifier	false		1075556	1					
ANR	1076203	ElseStatement	else		1075556	0					
ANR	1076204	CompoundStatement		68:20:3706:3749	1075556	0					
ANR	1076205	IdentifierDeclStatement	t1_glyph_space_coord s = zone -> y - pole -> gy ;	2044:20:83131:83174	1075556	0	True				
ANR	1076206	IdentifierDecl	s = zone -> y - pole -> gy		1075556	0					
ANR	1076207	IdentifierDeclType	t1_glyph_space_coord		1075556	0					
ANR	1076208	Identifier	s		1075556	1					
ANR	1076209	AssignmentExpression	s = zone -> y - pole -> gy		1075556	2		=			
ANR	1076210	Identifier	s		1075556	0					
ANR	1076211	AdditiveExpression	zone -> y - pole -> gy		1075556	1		-			
ANR	1076212	PtrMemberAccess	zone -> y		1075556	0					
ANR	1076213	Identifier	zone		1075556	0					
ANR	1076214	Identifier	y		1075556	1					
ANR	1076215	PtrMemberAccess	pole -> gy		1075556	1					
ANR	1076216	Identifier	pole		1075556	0					
ANR	1076217	Identifier	gy		1075556	1					
ANR	1076218	IfStatement	if ( zone -> type == topzone )		1075556	1					
ANR	1076219	Condition	zone -> type == topzone	2045:24:83200:83220	1075556	0	True				
ANR	1076220	EqualityExpression	zone -> type == topzone		1075556	0		==			
ANR	1076221	PtrMemberAccess	zone -> type		1075556	0					
ANR	1076222	Identifier	zone		1075556	0					
ANR	1076223	Identifier	type		1075556	1					
ANR	1076224	Identifier	topzone		1075556	1					
ANR	1076225	ExpressionStatement	s = - s	2046:24:83247:83253	1075556	1	True				
ANR	1076226	AssignmentExpression	s = - s		1075556	0		=			
ANR	1076227	Identifier	s		1075556	0					
ANR	1076228	UnaryOperationExpression	- s		1075556	1					
ANR	1076229	UnaryOperator	-		1075556	0					
ANR	1076230	Identifier	s		1075556	1					
ANR	1076231	IfStatement	if ( ! curve && s < self -> overshoot_threshold )		1075556	2					
ANR	1076232	Condition	! curve && s < self -> overshoot_threshold	2047:24:83279:83317	1075556	0	True				
ANR	1076233	AndExpression	! curve && s < self -> overshoot_threshold		1075556	0		&&			
ANR	1076234	UnaryOperationExpression	! curve		1075556	0					
ANR	1076235	UnaryOperator	!		1075556	0					
ANR	1076236	Identifier	curve		1075556	1					
ANR	1076237	RelationalExpression	s < self -> overshoot_threshold		1075556	1		<			
ANR	1076238	Identifier	s		1075556	0					
ANR	1076239	PtrMemberAccess	self -> overshoot_threshold		1075556	1					
ANR	1076240	Identifier	self		1075556	0					
ANR	1076241	Identifier	overshoot_threshold		1075556	1					
ANR	1076242	ExpressionStatement	gy = zone -> y	2048:24:83344:83356	1075556	1	True				
ANR	1076243	AssignmentExpression	gy = zone -> y		1075556	0		=			
ANR	1076244	Identifier	gy		1075556	0					
ANR	1076245	PtrMemberAccess	zone -> y		1075556	1					
ANR	1076246	Identifier	zone		1075556	0					
ANR	1076247	Identifier	y		1075556	1					
ANR	1076248	ElseStatement	else		1075556	0					
ANR	1076249	IfStatement	if ( s > self -> overshoot_threshold )		1075556	0					
ANR	1076250	Condition	s > self -> overshoot_threshold	2049:29:83387:83415	1075556	0	True				
ANR	1076251	RelationalExpression	s > self -> overshoot_threshold		1075556	0		>			
ANR	1076252	Identifier	s		1075556	0					
ANR	1076253	PtrMemberAccess	self -> overshoot_threshold		1075556	1					
ANR	1076254	Identifier	self		1075556	0					
ANR	1076255	Identifier	overshoot_threshold		1075556	1					
ANR	1076256	CompoundStatement		74:24:4019:4074	1075556	1					
ANR	1076257	IdentifierDeclStatement	t1_glyph_space_coord ss = self -> overshoot_threshold * 2 ;	2050:24:83444:83499	1075556	0	True				
ANR	1076258	IdentifierDecl	ss = self -> overshoot_threshold * 2		1075556	0					
ANR	1076259	IdentifierDeclType	t1_glyph_space_coord		1075556	0					
ANR	1076260	Identifier	ss		1075556	1					
ANR	1076261	AssignmentExpression	ss = self -> overshoot_threshold * 2		1075556	2		=			
ANR	1076262	Identifier	ss		1075556	0					
ANR	1076263	MultiplicativeExpression	self -> overshoot_threshold * 2		1075556	1		*			
ANR	1076264	PtrMemberAccess	self -> overshoot_threshold		1075556	0					
ANR	1076265	Identifier	self		1075556	0					
ANR	1076266	Identifier	overshoot_threshold		1075556	1					
ANR	1076267	PrimaryExpression	2		1075556	1					
ANR	1076268	IfStatement	if ( s < ss )		1075556	1					
ANR	1076269	Condition	s < ss	2052:28:83530:83535	1075556	0	True				
ANR	1076270	RelationalExpression	s < ss		1075556	0		<			
ANR	1076271	Identifier	s		1075556	0					
ANR	1076272	Identifier	ss		1075556	1					
ANR	1076273	ExpressionStatement	gy = ( zone -> type == topzone ? zone -> y + ss : zone -> y - ss )	2053:28:83592:83650	1075556	1	True				
ANR	1076274	AssignmentExpression	gy = ( zone -> type == topzone ? zone -> y + ss : zone -> y - ss )		1075556	0		=			
ANR	1076275	Identifier	gy		1075556	0					
ANR	1076276	ConditionalExpression	zone -> type == topzone ? zone -> y + ss : zone -> y - ss		1075556	1					
ANR	1076277	Condition	zone -> type == topzone		1075556	0					
ANR	1076278	EqualityExpression	zone -> type == topzone		1075556	0		==			
ANR	1076279	PtrMemberAccess	zone -> type		1075556	0					
ANR	1076280	Identifier	zone		1075556	0					
ANR	1076281	Identifier	type		1075556	1					
ANR	1076282	Identifier	topzone		1075556	1					
ANR	1076283	AdditiveExpression	zone -> y + ss		1075556	1		+			
ANR	1076284	PtrMemberAccess	zone -> y		1075556	0					
ANR	1076285	Identifier	zone		1075556	0					
ANR	1076286	Identifier	y		1075556	1					
ANR	1076287	Identifier	ss		1075556	1					
ANR	1076288	AdditiveExpression	zone -> y - ss		1075556	2		-			
ANR	1076289	PtrMemberAccess	zone -> y		1075556	0					
ANR	1076290	Identifier	zone		1075556	0					
ANR	1076291	Identifier	y		1075556	1					
ANR	1076292	Identifier	ss		1075556	1					
ANR	1076293	ElseStatement	else		1075556	0					
ANR	1076294	CompoundStatement		79:31:4289:4396	1075556	0					
ANR	1076295	Statement	if	2055:28:83711:83712	1075556	0	True				
ANR	1076296	IdentifierDeclStatement	"ADOBE_OVERSHOOT_COMPATIBILIY t1_hinter__add_overshoot ( self , zone , & gx , & gy ) ;"	2055:31:83714:83821	1075556	1	True				
ANR	1076297	IdentifierDecl	"t1_hinter__add_overshoot ( self , zone , & gx , & gy )"		1075556	0					
ANR	1076298	IdentifierDeclType	ADOBE_OVERSHOOT_COMPATIBILIY		1075556	0					
ANR	1076299	Identifier	t1_hinter__add_overshoot		1075556	1					
ANR	1076300	Expression	"self , zone , & gx , & gy"		1075556	2					
ANR	1076301	Identifier	self		1075556	0					
ANR	1076302	Expression	"zone , & gx , & gy"		1075556	1					
ANR	1076303	Identifier	zone		1075556	0					
ANR	1076304	Expression	"& gx , & gy"		1075556	1					
ANR	1076305	UnaryOperationExpression	& gx		1075556	0					
ANR	1076306	UnaryOperator	&		1075556	0					
ANR	1076307	Identifier	gx		1075556	1					
ANR	1076308	UnaryOperationExpression	& gy		1075556	1					
ANR	1076309	UnaryOperator	&		1075556	0					
ANR	1076310	Identifier	gy		1075556	1					
ANR	1076311	Statement	endif	2057:28:83851:83855	1075556	2	True				
ANR	1076312	IfStatement	if ( align_by_stem )		1075556	10					
ANR	1076313	Condition	align_by_stem	2066:8:84065:84077	1075556	0	True				
ANR	1076314	Identifier	align_by_stem		1075556	0					
ANR	1076315	CompoundStatement		91:8:4665:4694	1075556	1					
ANR	1076316	IdentifierDeclStatement	"t1_glyph_space_coord gx1 , gy1 ;"	2067:8:84090:84119	1075556	0	True				
ANR	1076317	IdentifierDecl	gx1		1075556	0					
ANR	1076318	IdentifierDeclType	t1_glyph_space_coord		1075556	0					
ANR	1076319	Identifier	gx1		1075556	1					
ANR	1076320	IdentifierDecl	gy1		1075556	1					
ANR	1076321	IdentifierDeclType	t1_glyph_space_coord		1075556	0					
ANR	1076322	Identifier	gy1		1075556	1					
ANR	1076323	IfStatement	if ( horiz )		1075556	1					
ANR	1076324	Condition	horiz	2069:12:84134:84138	1075556	0	True				
ANR	1076325	Identifier	horiz		1075556	0					
ANR	1076326	CompoundStatement		95:12:4805:4866	1075556	1					
ANR	1076327	IdentifierDeclStatement	"bool b0 = t1_hinter__is_stem_boundary_near ( self , hint , gy , 0 ) ;"	2070:12:84155:84216	1075556	0	True				
ANR	1076328	IdentifierDecl	"b0 = t1_hinter__is_stem_boundary_near ( self , hint , gy , 0 )"		1075556	0					
ANR	1076329	IdentifierDeclType	bool		1075556	0					
ANR	1076330	Identifier	b0		1075556	1					
ANR	1076331	AssignmentExpression	"b0 = t1_hinter__is_stem_boundary_near ( self , hint , gy , 0 )"		1075556	2		=			
ANR	1076332	Identifier	b0		1075556	0					
ANR	1076333	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , gy , 0 )"		1075556	1					
ANR	1076334	Callee	t1_hinter__is_stem_boundary_near		1075556	0					
ANR	1076335	Identifier	t1_hinter__is_stem_boundary_near		1075556	0					
ANR	1076336	ArgumentList	self		1075556	1					
ANR	1076337	Argument	self		1075556	0					
ANR	1076338	Identifier	self		1075556	0					
ANR	1076339	Argument	hint		1075556	1					
ANR	1076340	Identifier	hint		1075556	0					
ANR	1076341	Argument	gy		1075556	2					
ANR	1076342	Identifier	gy		1075556	0					
ANR	1076343	Argument	0		1075556	3					
ANR	1076344	PrimaryExpression	0		1075556	0					
ANR	1076345	IdentifierDeclStatement	"bool b1 = t1_hinter__is_stem_boundary_near ( self , hint , gy , 1 ) ;"	2071:12:84230:84291	1075556	1	True				
ANR	1076346	IdentifierDecl	"b1 = t1_hinter__is_stem_boundary_near ( self , hint , gy , 1 )"		1075556	0					
ANR	1076347	IdentifierDeclType	bool		1075556	0					
ANR	1076348	Identifier	b1		1075556	1					
ANR	1076349	AssignmentExpression	"b1 = t1_hinter__is_stem_boundary_near ( self , hint , gy , 1 )"		1075556	2		=			
ANR	1076350	Identifier	b1		1075556	0					
ANR	1076351	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , gy , 1 )"		1075556	1					
ANR	1076352	Callee	t1_hinter__is_stem_boundary_near		1075556	0					
ANR	1076353	Identifier	t1_hinter__is_stem_boundary_near		1075556	0					
ANR	1076354	ArgumentList	self		1075556	1					
ANR	1076355	Argument	self		1075556	0					
ANR	1076356	Identifier	self		1075556	0					
ANR	1076357	Argument	hint		1075556	1					
ANR	1076358	Identifier	hint		1075556	0					
ANR	1076359	Argument	gy		1075556	2					
ANR	1076360	Identifier	gy		1075556	0					
ANR	1076361	Argument	1		1075556	3					
ANR	1076362	PrimaryExpression	1		1075556	0					
ANR	1076363	ExpressionStatement	gx1 = gx	2073:12:84306:84314	1075556	2	True				
ANR	1076364	AssignmentExpression	gx1 = gx		1075556	0		=			
ANR	1076365	Identifier	gx1		1075556	0					
ANR	1076366	Identifier	gx		1075556	1					
ANR	1076367	IfStatement	if ( b0 && ! b1 )		1075556	3					
ANR	1076368	Condition	b0 && ! b1	2074:16:84332:84340	1075556	0	True				
ANR	1076369	AndExpression	b0 && ! b1		1075556	0		&&			
ANR	1076370	Identifier	b0		1075556	0					
ANR	1076371	UnaryOperationExpression	! b1		1075556	1					
ANR	1076372	UnaryOperator	!		1075556	0					
ANR	1076373	Identifier	b1		1075556	1					
ANR	1076374	ExpressionStatement	"gy1 = hint -> g1 , align_by_stem = true"	2075:16:84359:84395	1075556	1	True				
ANR	1076375	Expression	"gy1 = hint -> g1 , align_by_stem = true"		1075556	0					
ANR	1076376	AssignmentExpression	gy1 = hint -> g1		1075556	0		=			
ANR	1076377	Identifier	gy1		1075556	0					
ANR	1076378	PtrMemberAccess	hint -> g1		1075556	1					
ANR	1076379	Identifier	hint		1075556	0					
ANR	1076380	Identifier	g1		1075556	1					
ANR	1076381	AssignmentExpression	align_by_stem = true		1075556	1		=			
ANR	1076382	Identifier	align_by_stem		1075556	0					
ANR	1076383	Identifier	true		1075556	1					
ANR	1076384	ElseStatement	else		1075556	0					
ANR	1076385	IfStatement	if ( ! b0 && b1 )		1075556	0					
ANR	1076386	Condition	! b0 && b1	2076:21:84418:84426	1075556	0	True				
ANR	1076387	AndExpression	! b0 && b1		1075556	0		&&			
ANR	1076388	UnaryOperationExpression	! b0		1075556	0					
ANR	1076389	UnaryOperator	!		1075556	0					
ANR	1076390	Identifier	b0		1075556	1					
ANR	1076391	Identifier	b1		1075556	1					
ANR	1076392	ExpressionStatement	"gy1 = hint -> g0 , align_by_stem = true"	2077:16:84445:84481	1075556	1	True				
ANR	1076393	Expression	"gy1 = hint -> g0 , align_by_stem = true"		1075556	0					
ANR	1076394	AssignmentExpression	gy1 = hint -> g0		1075556	0		=			
ANR	1076395	Identifier	gy1		1075556	0					
ANR	1076396	PtrMemberAccess	hint -> g0		1075556	1					
ANR	1076397	Identifier	hint		1075556	0					
ANR	1076398	Identifier	g0		1075556	1					
ANR	1076399	AssignmentExpression	align_by_stem = true		1075556	1		=			
ANR	1076400	Identifier	align_by_stem		1075556	0					
ANR	1076401	Identifier	true		1075556	1					
ANR	1076402	ElseStatement	else		1075556	0					
ANR	1076403	ExpressionStatement	gy1 = 0	2079:16:84516:84523	1075556	0	True				
ANR	1076404	AssignmentExpression	gy1 = 0		1075556	0		=			
ANR	1076405	Identifier	gy1		1075556	0					
ANR	1076406	PrimaryExpression	0		1075556	1					
ANR	1076407	ElseStatement	else		1075556	0					
ANR	1076408	CompoundStatement		106:12:5230:5291	1075556	0					
ANR	1076409	IdentifierDeclStatement	"bool b0 = t1_hinter__is_stem_boundary_near ( self , hint , gx , 0 ) ;"	2081:12:84580:84641	1075556	0	True				
ANR	1076410	IdentifierDecl	"b0 = t1_hinter__is_stem_boundary_near ( self , hint , gx , 0 )"		1075556	0					
ANR	1076411	IdentifierDeclType	bool		1075556	0					
ANR	1076412	Identifier	b0		1075556	1					
ANR	1076413	AssignmentExpression	"b0 = t1_hinter__is_stem_boundary_near ( self , hint , gx , 0 )"		1075556	2		=			
ANR	1076414	Identifier	b0		1075556	0					
ANR	1076415	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , gx , 0 )"		1075556	1					
ANR	1076416	Callee	t1_hinter__is_stem_boundary_near		1075556	0					
ANR	1076417	Identifier	t1_hinter__is_stem_boundary_near		1075556	0					
ANR	1076418	ArgumentList	self		1075556	1					
ANR	1076419	Argument	self		1075556	0					
ANR	1076420	Identifier	self		1075556	0					
ANR	1076421	Argument	hint		1075556	1					
ANR	1076422	Identifier	hint		1075556	0					
ANR	1076423	Argument	gx		1075556	2					
ANR	1076424	Identifier	gx		1075556	0					
ANR	1076425	Argument	0		1075556	3					
ANR	1076426	PrimaryExpression	0		1075556	0					
ANR	1076427	IdentifierDeclStatement	"bool b1 = t1_hinter__is_stem_boundary_near ( self , hint , gx , 1 ) ;"	2082:12:84655:84716	1075556	1	True				
ANR	1076428	IdentifierDecl	"b1 = t1_hinter__is_stem_boundary_near ( self , hint , gx , 1 )"		1075556	0					
ANR	1076429	IdentifierDeclType	bool		1075556	0					
ANR	1076430	Identifier	b1		1075556	1					
ANR	1076431	AssignmentExpression	"b1 = t1_hinter__is_stem_boundary_near ( self , hint , gx , 1 )"		1075556	2		=			
ANR	1076432	Identifier	b1		1075556	0					
ANR	1076433	CallExpression	"t1_hinter__is_stem_boundary_near ( self , hint , gx , 1 )"		1075556	1					
ANR	1076434	Callee	t1_hinter__is_stem_boundary_near		1075556	0					
ANR	1076435	Identifier	t1_hinter__is_stem_boundary_near		1075556	0					
ANR	1076436	ArgumentList	self		1075556	1					
ANR	1076437	Argument	self		1075556	0					
ANR	1076438	Identifier	self		1075556	0					
ANR	1076439	Argument	hint		1075556	1					
ANR	1076440	Identifier	hint		1075556	0					
ANR	1076441	Argument	gx		1075556	2					
ANR	1076442	Identifier	gx		1075556	0					
ANR	1076443	Argument	1		1075556	3					
ANR	1076444	PrimaryExpression	1		1075556	0					
ANR	1076445	ExpressionStatement	gy1 = gy	2084:12:84731:84739	1075556	2	True				
ANR	1076446	AssignmentExpression	gy1 = gy		1075556	0		=			
ANR	1076447	Identifier	gy1		1075556	0					
ANR	1076448	Identifier	gy		1075556	1					
ANR	1076449	IfStatement	if ( b0 && ! b1 )		1075556	3					
ANR	1076450	Condition	b0 && ! b1	2085:16:84757:84765	1075556	0	True				
ANR	1076451	AndExpression	b0 && ! b1		1075556	0		&&			
ANR	1076452	Identifier	b0		1075556	0					
ANR	1076453	UnaryOperationExpression	! b1		1075556	1					
ANR	1076454	UnaryOperator	!		1075556	0					
ANR	1076455	Identifier	b1		1075556	1					
ANR	1076456	ExpressionStatement	"gx1 = hint -> g1 , align_by_stem = true"	2086:16:84784:84820	1075556	1	True				
ANR	1076457	Expression	"gx1 = hint -> g1 , align_by_stem = true"		1075556	0					
ANR	1076458	AssignmentExpression	gx1 = hint -> g1		1075556	0		=			
ANR	1076459	Identifier	gx1		1075556	0					
ANR	1076460	PtrMemberAccess	hint -> g1		1075556	1					
ANR	1076461	Identifier	hint		1075556	0					
ANR	1076462	Identifier	g1		1075556	1					
ANR	1076463	AssignmentExpression	align_by_stem = true		1075556	1		=			
ANR	1076464	Identifier	align_by_stem		1075556	0					
ANR	1076465	Identifier	true		1075556	1					
ANR	1076466	ElseStatement	else		1075556	0					
ANR	1076467	IfStatement	if ( ! b0 && b1 )		1075556	0					
ANR	1076468	Condition	! b0 && b1	2087:21:84843:84851	1075556	0	True				
ANR	1076469	AndExpression	! b0 && b1		1075556	0		&&			
ANR	1076470	UnaryOperationExpression	! b0		1075556	0					
ANR	1076471	UnaryOperator	!		1075556	0					
ANR	1076472	Identifier	b0		1075556	1					
ANR	1076473	Identifier	b1		1075556	1					
ANR	1076474	ExpressionStatement	"gx1 = hint -> g0 , align_by_stem = true"	2088:16:84870:84906	1075556	1	True				
ANR	1076475	Expression	"gx1 = hint -> g0 , align_by_stem = true"		1075556	0					
ANR	1076476	AssignmentExpression	gx1 = hint -> g0		1075556	0		=			
ANR	1076477	Identifier	gx1		1075556	0					
ANR	1076478	PtrMemberAccess	hint -> g0		1075556	1					
ANR	1076479	Identifier	hint		1075556	0					
ANR	1076480	Identifier	g0		1075556	1					
ANR	1076481	AssignmentExpression	align_by_stem = true		1075556	1		=			
ANR	1076482	Identifier	align_by_stem		1075556	0					
ANR	1076483	Identifier	true		1075556	1					
ANR	1076484	ElseStatement	else		1075556	0					
ANR	1076485	ExpressionStatement	gx1 = 0	2090:16:84941:84948	1075556	0	True				
ANR	1076486	AssignmentExpression	gx1 = 0		1075556	0		=			
ANR	1076487	Identifier	gx1		1075556	0					
ANR	1076488	PrimaryExpression	0		1075556	1					
ANR	1076489	IfStatement	if ( align_by_stem )		1075556	2					
ANR	1076490	Condition	align_by_stem	2092:12:84998:85010	1075556	0	True				
ANR	1076491	Identifier	align_by_stem		1075556	0					
ANR	1076492	ExpressionStatement	"t1_hinter__align_stem_to_grid ( self , self -> g2o_fraction , & gx , & gy , gx1 , gy1 , CONTRAST_STEMS || self -> align_to_pixels , hint )"	2093:12:85025:85167	1075556	1	True				
ANR	1076493	CallExpression	"t1_hinter__align_stem_to_grid ( self , self -> g2o_fraction , & gx , & gy , gx1 , gy1 , CONTRAST_STEMS || self -> align_to_pixels , hint )"		1075556	0					
ANR	1076494	Callee	t1_hinter__align_stem_to_grid		1075556	0					
ANR	1076495	Identifier	t1_hinter__align_stem_to_grid		1075556	0					
ANR	1076496	ArgumentList	self		1075556	1					
ANR	1076497	Argument	self		1075556	0					
ANR	1076498	Identifier	self		1075556	0					
ANR	1076499	Argument	self -> g2o_fraction		1075556	1					
ANR	1076500	PtrMemberAccess	self -> g2o_fraction		1075556	0					
ANR	1076501	Identifier	self		1075556	0					
ANR	1076502	Identifier	g2o_fraction		1075556	1					
ANR	1076503	Argument	& gx		1075556	2					
ANR	1076504	UnaryOperationExpression	& gx		1075556	0					
ANR	1076505	UnaryOperator	&		1075556	0					
ANR	1076506	Identifier	gx		1075556	1					
ANR	1076507	Argument	& gy		1075556	3					
ANR	1076508	UnaryOperationExpression	& gy		1075556	0					
ANR	1076509	UnaryOperator	&		1075556	0					
ANR	1076510	Identifier	gy		1075556	1					
ANR	1076511	Argument	gx1		1075556	4					
ANR	1076512	Identifier	gx1		1075556	0					
ANR	1076513	Argument	gy1		1075556	5					
ANR	1076514	Identifier	gy1		1075556	0					
ANR	1076515	Argument	CONTRAST_STEMS || self -> align_to_pixels		1075556	6					
ANR	1076516	OrExpression	CONTRAST_STEMS || self -> align_to_pixels		1075556	0		||			
ANR	1076517	Identifier	CONTRAST_STEMS		1075556	0					
ANR	1076518	PtrMemberAccess	self -> align_to_pixels		1075556	1					
ANR	1076519	Identifier	self		1075556	0					
ANR	1076520	Identifier	align_to_pixels		1075556	1					
ANR	1076521	Argument	hint		1075556	7					
ANR	1076522	Identifier	hint		1075556	0					
ANR	1076523	IfStatement	if ( ! align_by_stem )		1075556	11					
ANR	1076524	Condition	! align_by_stem	2096:8:85183:85196	1075556	0	True				
ANR	1076525	UnaryOperationExpression	! align_by_stem		1075556	0					
ANR	1076526	UnaryOperator	!		1075556	0					
ANR	1076527	Identifier	align_by_stem		1075556	1					
ANR	1076528	ExpressionStatement	"t1_hinter__align_to_grid ( self , self -> g2o_fraction , & gx , & gy , CONTRAST_STEMS || self -> align_to_pixels )"	2097:8:85207:85336	1075556	1	True				
ANR	1076529	CallExpression	"t1_hinter__align_to_grid ( self , self -> g2o_fraction , & gx , & gy , CONTRAST_STEMS || self -> align_to_pixels )"		1075556	0					
ANR	1076530	Callee	t1_hinter__align_to_grid		1075556	0					
ANR	1076531	Identifier	t1_hinter__align_to_grid		1075556	0					
ANR	1076532	ArgumentList	self		1075556	1					
ANR	1076533	Argument	self		1075556	0					
ANR	1076534	Identifier	self		1075556	0					
ANR	1076535	Argument	self -> g2o_fraction		1075556	1					
ANR	1076536	PtrMemberAccess	self -> g2o_fraction		1075556	0					
ANR	1076537	Identifier	self		1075556	0					
ANR	1076538	Identifier	g2o_fraction		1075556	1					
ANR	1076539	Argument	& gx		1075556	2					
ANR	1076540	UnaryOperationExpression	& gx		1075556	0					
ANR	1076541	UnaryOperator	&		1075556	0					
ANR	1076542	Identifier	gx		1075556	1					
ANR	1076543	Argument	& gy		1075556	3					
ANR	1076544	UnaryOperationExpression	& gy		1075556	0					
ANR	1076545	UnaryOperator	&		1075556	0					
ANR	1076546	Identifier	gy		1075556	1					
ANR	1076547	Argument	CONTRAST_STEMS || self -> align_to_pixels		1075556	4					
ANR	1076548	OrExpression	CONTRAST_STEMS || self -> align_to_pixels		1075556	0		||			
ANR	1076549	Identifier	CONTRAST_STEMS		1075556	0					
ANR	1076550	PtrMemberAccess	self -> align_to_pixels		1075556	1					
ANR	1076551	Identifier	self		1075556	0					
ANR	1076552	Identifier	align_to_pixels		1075556	1					
ANR	1076553	ExpressionStatement	* gc = gc0 + ( horiz ? gy - gy0 : gx - gx0 )	2099:4:85342:85383	1075556	12	True				
ANR	1076554	AssignmentExpression	* gc = gc0 + ( horiz ? gy - gy0 : gx - gx0 )		1075556	0		=			
ANR	1076555	UnaryOperationExpression	* gc		1075556	0					
ANR	1076556	UnaryOperator	*		1075556	0					
ANR	1076557	Identifier	gc		1075556	1					
ANR	1076558	AdditiveExpression	gc0 + ( horiz ? gy - gy0 : gx - gx0 )		1075556	1		+			
ANR	1076559	Identifier	gc0		1075556	0					
ANR	1076560	ConditionalExpression	horiz ? gy - gy0 : gx - gx0		1075556	1					
ANR	1076561	Condition	horiz		1075556	0					
ANR	1076562	Identifier	horiz		1075556	0					
ANR	1076563	AdditiveExpression	gy - gy0		1075556	1		-			
ANR	1076564	Identifier	gy		1075556	0					
ANR	1076565	Identifier	gy0		1075556	1					
ANR	1076566	AdditiveExpression	gx - gx0		1075556	2		-			
ANR	1076567	Identifier	gx		1075556	0					
ANR	1076568	Identifier	gx0		1075556	1					
ANR	1076569	ReturnStatement	return ( align == unaligned ? aligned : align ) ;	2100:4:85389:85434	1075556	13	True				
ANR	1076570	ConditionalExpression	align == unaligned ? aligned : align		1075556	0					
ANR	1076571	Condition	align == unaligned		1075556	0					
ANR	1076572	EqualityExpression	align == unaligned		1075556	0		==			
ANR	1076573	Identifier	align		1075556	0					
ANR	1076574	Identifier	unaligned		1075556	1					
ANR	1076575	Identifier	aligned		1075556	1					
ANR	1076576	Identifier	align		1075556	2					
ANR	1076577	ReturnType	static enum t1_align_type		1075556	1					
ANR	1076578	Identifier	t1_hinter__compute_aligned_coord		1075556	2					
ANR	1076579	ParameterList	"t1_hinter * self , t1_glyph_space_coord * gc , int segment_index , fixed t , const t1_hint * hint , enum t1_align_type align0"		1075556	3					
ANR	1076580	Parameter	t1_hinter * self	1974:59:79279:79294	1075556	0	True				
ANR	1076581	ParameterType	t1_hinter *		1075556	0					
ANR	1076582	Identifier	self		1075556	1					
ANR	1076583	Parameter	t1_glyph_space_coord * gc	1975:12:79309:79333	1075556	1	True				
ANR	1076584	ParameterType	t1_glyph_space_coord *		1075556	0					
ANR	1076585	Identifier	gc		1075556	1					
ANR	1076586	Parameter	int segment_index	1975:39:79336:79352	1075556	2	True				
ANR	1076587	ParameterType	int		1075556	0					
ANR	1076588	Identifier	segment_index		1075556	1					
ANR	1076589	Parameter	fixed t	1975:58:79355:79361	1075556	3	True				
ANR	1076590	ParameterType	fixed		1075556	0					
ANR	1076591	Identifier	t		1075556	1					
ANR	1076592	Parameter	const t1_hint * hint	1975:67:79364:79382	1075556	4	True				
ANR	1076593	ParameterType	const t1_hint *		1075556	0					
ANR	1076594	Identifier	hint		1075556	1					
ANR	1076595	Parameter	enum t1_align_type align0	1976:12:79397:79421	1075556	5	True				
ANR	1076596	ParameterType	enum t1_align_type		1075556	0					
ANR	1076597	Identifier	align0		1075556	1					
ANR	1076598	CFGEntryNode	ENTRY		1075556		True				
ANR	1076599	CFGExitNode	EXIT		1075556		True				
ANR	1076600	Symbol	prev2		1075556						
ANR	1076601	Symbol	t1_hinter__add_overshoot		1075556						
ANR	1076602	Symbol	prev1		1075556						
ANR	1076603	Symbol	self -> pole [ next1 ] . gx		1075556						
ANR	1076604	Symbol	b0		1075556						
ANR	1076605	Symbol	self -> pole [ next1 ] . gy		1075556						
ANR	1076606	Symbol	self -> pole [ next2 ] . gy		1075556						
ANR	1076607	Symbol	b1		1075556						
ANR	1076608	Symbol	zone -> type		1075556						
ANR	1076609	Symbol	self -> suppress_overshoots		1075556						
ANR	1076610	Symbol	forwd_curve		1075556						
ANR	1076611	Symbol	aligned		1075556						
ANR	1076612	Symbol	self -> align_to_pixels		1075556						
ANR	1076613	Symbol	* hint		1075556						
ANR	1076614	Symbol	self -> pole [ segment_index ] . gy		1075556						
ANR	1076615	Symbol	self -> g2o_fraction		1075556						
ANR	1076616	Symbol	self -> pole [ segment_index ] . gx		1075556						
ANR	1076617	Symbol	self -> overshoot_threshold		1075556						
ANR	1076618	Symbol	* self		1075556						
ANR	1076619	Symbol	bckwd_horiz		1075556						
ANR	1076620	Symbol	hint -> b1		1075556						
ANR	1076621	Symbol	* prev1		1075556						
ANR	1076622	Symbol	hint -> b0		1075556						
ANR	1076623	Symbol	* prev2		1075556						
ANR	1076624	Symbol	unaligned		1075556						
ANR	1076625	Symbol	self -> pole [ prev1 ] . gx		1075556						
ANR	1076626	Symbol	self -> pole [ prev1 ] . gy		1075556						
ANR	1076627	Symbol	& gx		1075556						
ANR	1076628	Symbol	& gy		1075556						
ANR	1076629	Symbol	* self -> pole		1075556						
ANR	1076630	Symbol	curve		1075556						
ANR	1076631	Symbol	* zone		1075556						
ANR	1076632	Symbol	self -> pole [ prev1 ] . type		1075556						
ANR	1076633	Symbol	* pole		1075556						
ANR	1076634	Symbol	* segment_index		1075556						
ANR	1076635	Symbol	horiz		1075556						
ANR	1076636	Symbol	any_abs		1075556						
ANR	1076637	Symbol	t1_hinter__find_zone		1075556						
ANR	1076638	Symbol	self -> pole		1075556						
ANR	1076639	Symbol	contour_index		1075556						
ANR	1076640	Symbol	beg_contour_pole		1075556						
ANR	1076641	Symbol	hint -> type		1075556						
ANR	1076642	Symbol	gx0		1075556						
ANR	1076643	Symbol	ss		1075556						
ANR	1076644	Symbol	gx1		1075556						
ANR	1076645	Symbol	align0		1075556						
ANR	1076646	Symbol	* * self		1075556						
ANR	1076647	Symbol	max		1075556						
ANR	1076648	Symbol	self -> pole [ prev2 ] . gy		1075556						
ANR	1076649	Symbol	s		1075556						
ANR	1076650	Symbol	t		1075556						
ANR	1076651	Symbol	self		1075556						
ANR	1076652	Symbol	maximum		1075556						
ANR	1076653	Symbol	minimum		1075556						
ANR	1076654	Symbol	gy1		1075556						
ANR	1076655	Symbol	gy0		1075556						
ANR	1076656	Symbol	align_by_stem		1075556						
ANR	1076657	Symbol	* gc		1075556						
ANR	1076658	Symbol	forwd_horiz		1075556						
ANR	1076659	Symbol	pole -> gy		1075556						
ANR	1076660	Symbol	* next		1075556						
ANR	1076661	Symbol	pole -> gx		1075556						
ANR	1076662	Symbol	self -> pole [ next1 ] . type		1075556						
ANR	1076663	Symbol	align		1075556						
ANR	1076664	Symbol	pole		1075556						
ANR	1076665	Symbol	hint -> g1		1075556						
ANR	1076666	Symbol	zone		1075556						
ANR	1076667	Symbol	self -> blue_fuzz		1075556						
ANR	1076668	Symbol	* contour_index		1075556						
ANR	1076669	Symbol	segment_index		1075556						
ANR	1076670	Symbol	concave		1075556						
ANR	1076671	Symbol	topzone		1075556						
ANR	1076672	Symbol	ranger_step_f		1075556						
ANR	1076673	Symbol	next2		1075556						
ANR	1076674	Symbol	botzn		1075556						
ANR	1076675	Symbol	next1		1075556						
ANR	1076676	Symbol	NULL		1075556						
ANR	1076677	Symbol	ranger_step_b		1075556						
ANR	1076678	Symbol	bckwd_curve		1075556						
ANR	1076679	Symbol	self -> contour		1075556						
ANR	1076680	Symbol	hint -> g0		1075556						
ANR	1076681	Symbol	end_contour_pole		1075556						
ANR	1076682	Symbol	* next1		1075556						
ANR	1076683	Symbol	hint		1075556						
ANR	1076684	Symbol	* next2		1075556						
ANR	1076685	Symbol	true		1075556						
ANR	1076686	Symbol	next		1075556						
ANR	1076687	Symbol	CONTRAST_STEMS		1075556						
ANR	1076688	Symbol	t1_hinter__segment_end		1075556						
ANR	1076689	Symbol	pole -> contour_index		1075556						
ANR	1076690	Symbol	self -> pole [ next ] . gx		1075556						
ANR	1076691	Symbol	gc0		1075556						
ANR	1076692	Symbol	self -> pole [ next ] . gy		1075556						
ANR	1076693	Symbol	convex		1075556						
ANR	1076694	Symbol	botzone		1075556						
ANR	1076695	Symbol	gc		1075556						
ANR	1076696	Symbol	hstem		1075556						
ANR	1076697	Symbol	zone -> overshoot_y		1075556						
ANR	1076698	Symbol	topzn		1075556						
ANR	1076699	Symbol	* self -> contour		1075556						
ANR	1076700	Symbol	zone -> y		1075556						
ANR	1076701	Symbol	false		1075556						
ANR	1076702	Symbol	gx		1075556						
ANR	1076703	Symbol	gy		1075556						
ANR	1076704	Symbol	offcurve		1075556						
ANR	1076705	Symbol	t1_hinter__is_stem_boundary_near		1075556						
ANR	1076706	Function	t1_hinter__find_stem_middle	2107:0:85629:86911							
ANR	1076707	FunctionDef	"t1_hinter__find_stem_middle (t1_hinter * self , fixed * t , int pole_index , bool horiz)"		1076706	0					
ANR	1076708	CompoundStatement		2108:0:85724:86911	1076706	0					
ANR	1076709	IfStatement	if ( PRESERVE_STEM_SLANT == 2 )		1076706	0					
ANR	1076710	Condition	PRESERVE_STEM_SLANT == 2	2110:8:85826:85849	1076706	0	True				
ANR	1076711	EqualityExpression	PRESERVE_STEM_SLANT == 2		1076706	0		==			
ANR	1076712	Identifier	PRESERVE_STEM_SLANT		1076706	0					
ANR	1076713	PrimaryExpression	2		1076706	1					
ANR	1076714	CompoundStatement		3:34:127:127	1076706	1					
ANR	1076715	ExpressionStatement	* t = 0	2111:8:85862:85868	1076706	0	True				
ANR	1076716	AssignmentExpression	* t = 0		1076706	0		=			
ANR	1076717	UnaryOperationExpression	* t		1076706	0					
ANR	1076718	UnaryOperator	*		1076706	0					
ANR	1076719	Identifier	t		1076706	1					
ANR	1076720	PrimaryExpression	0		1076706	1					
ANR	1076721	ReturnStatement	return pole_index ;	2112:8:85878:85895	1076706	1	True				
ANR	1076722	Identifier	pole_index		1076706	0					
ANR	1076723	ElseStatement	else		1076706	0					
ANR	1076724	CompoundStatement		18:8:780:1004	1076706	0					
ANR	1076725	IdentifierDeclStatement	"int next = t1_hinter__next_contour_pole ( self , pole_index ) ;"	2121:8:86326:86383	1076706	0	True				
ANR	1076726	IdentifierDecl	"next = t1_hinter__next_contour_pole ( self , pole_index )"		1076706	0					
ANR	1076727	IdentifierDeclType	int		1076706	0					
ANR	1076728	Identifier	next		1076706	1					
ANR	1076729	AssignmentExpression	"next = t1_hinter__next_contour_pole ( self , pole_index )"		1076706	2		=			
ANR	1076730	Identifier	next		1076706	0					
ANR	1076731	CallExpression	"t1_hinter__next_contour_pole ( self , pole_index )"		1076706	1					
ANR	1076732	Callee	t1_hinter__next_contour_pole		1076706	0					
ANR	1076733	Identifier	t1_hinter__next_contour_pole		1076706	0					
ANR	1076734	ArgumentList	self		1076706	1					
ANR	1076735	Argument	self		1076706	0					
ANR	1076736	Identifier	self		1076706	0					
ANR	1076737	Argument	pole_index		1076706	1					
ANR	1076738	Identifier	pole_index		1076706	0					
ANR	1076739	IdentifierDeclStatement	const int alpha = 10 ;	2122:8:86393:86413	1076706	1	True				
ANR	1076740	IdentifierDecl	alpha = 10		1076706	0					
ANR	1076741	IdentifierDeclType	const int		1076706	0					
ANR	1076742	Identifier	alpha		1076706	1					
ANR	1076743	AssignmentExpression	alpha = 10		1076706	2		=			
ANR	1076744	Identifier	alpha		1076706	0					
ANR	1076745	PrimaryExpression	10		1076706	1					
ANR	1076746	IdentifierDeclStatement	int design_slant ;	2123:8:86423:86439	1076706	2	True				
ANR	1076747	IdentifierDecl	design_slant		1076706	0					
ANR	1076748	IdentifierDeclType	int		1076706	0					
ANR	1076749	Identifier	design_slant		1076706	1					
ANR	1076750	IdentifierDeclStatement	bool curve = self -> pole [ next ] . type == offcurve ;	2124:8:86449:86495	1076706	3	True				
ANR	1076751	IdentifierDecl	curve = self -> pole [ next ] . type == offcurve		1076706	0					
ANR	1076752	IdentifierDeclType	bool		1076706	0					
ANR	1076753	Identifier	curve		1076706	1					
ANR	1076754	AssignmentExpression	curve = self -> pole [ next ] . type == offcurve		1076706	2		=			
ANR	1076755	Identifier	curve		1076706	0					
ANR	1076756	EqualityExpression	self -> pole [ next ] . type == offcurve		1076706	1		==			
ANR	1076757	MemberAccess	self -> pole [ next ] . type		1076706	0					
ANR	1076758	ArrayIndexing	self -> pole [ next ]		1076706	0					
ANR	1076759	PtrMemberAccess	self -> pole		1076706	0					
ANR	1076760	Identifier	self		1076706	0					
ANR	1076761	Identifier	pole		1076706	1					
ANR	1076762	Identifier	next		1076706	1					
ANR	1076763	Identifier	type		1076706	1					
ANR	1076764	Identifier	offcurve		1076706	1					
ANR	1076765	IdentifierDeclStatement	"bool continuing = ( horiz ? t1_hinter__is_small_angle ( self , next , pole_index , 1 , 0 , alpha , 1 , & design_slant ) : t1_hinter__is_small_angle ( self , next , pole_index , 0 , 1 , alpha , 1 , & design_slant ) ) ;"	2125:8:86505:86729	1076706	4	True				
ANR	1076766	IdentifierDecl	"continuing = ( horiz ? t1_hinter__is_small_angle ( self , next , pole_index , 1 , 0 , alpha , 1 , & design_slant ) : t1_hinter__is_small_angle ( self , next , pole_index , 0 , 1 , alpha , 1 , & design_slant ) )"		1076706	0					
ANR	1076767	IdentifierDeclType	bool		1076706	0					
ANR	1076768	Identifier	continuing		1076706	1					
ANR	1076769	AssignmentExpression	"continuing = ( horiz ? t1_hinter__is_small_angle ( self , next , pole_index , 1 , 0 , alpha , 1 , & design_slant ) : t1_hinter__is_small_angle ( self , next , pole_index , 0 , 1 , alpha , 1 , & design_slant ) )"		1076706	2		=			
ANR	1076770	Identifier	continuing		1076706	0					
ANR	1076771	ConditionalExpression	"horiz ? t1_hinter__is_small_angle ( self , next , pole_index , 1 , 0 , alpha , 1 , & design_slant ) : t1_hinter__is_small_angle ( self , next , pole_index , 0 , 1 , alpha , 1 , & design_slant )"		1076706	1					
ANR	1076772	Condition	horiz		1076706	0					
ANR	1076773	Identifier	horiz		1076706	0					
ANR	1076774	CallExpression	"t1_hinter__is_small_angle ( self , next , pole_index , 1 , 0 , alpha , 1 , & design_slant )"		1076706	1					
ANR	1076775	Callee	t1_hinter__is_small_angle		1076706	0					
ANR	1076776	Identifier	t1_hinter__is_small_angle		1076706	0					
ANR	1076777	ArgumentList	self		1076706	1					
ANR	1076778	Argument	self		1076706	0					
ANR	1076779	Identifier	self		1076706	0					
ANR	1076780	Argument	next		1076706	1					
ANR	1076781	Identifier	next		1076706	0					
ANR	1076782	Argument	pole_index		1076706	2					
ANR	1076783	Identifier	pole_index		1076706	0					
ANR	1076784	Argument	1		1076706	3					
ANR	1076785	PrimaryExpression	1		1076706	0					
ANR	1076786	Argument	0		1076706	4					
ANR	1076787	PrimaryExpression	0		1076706	0					
ANR	1076788	Argument	alpha		1076706	5					
ANR	1076789	Identifier	alpha		1076706	0					
ANR	1076790	Argument	1		1076706	6					
ANR	1076791	PrimaryExpression	1		1076706	0					
ANR	1076792	Argument	& design_slant		1076706	7					
ANR	1076793	UnaryOperationExpression	& design_slant		1076706	0					
ANR	1076794	UnaryOperator	&		1076706	0					
ANR	1076795	Identifier	design_slant		1076706	1					
ANR	1076796	CallExpression	"t1_hinter__is_small_angle ( self , next , pole_index , 0 , 1 , alpha , 1 , & design_slant )"		1076706	2					
ANR	1076797	Callee	t1_hinter__is_small_angle		1076706	0					
ANR	1076798	Identifier	t1_hinter__is_small_angle		1076706	0					
ANR	1076799	ArgumentList	self		1076706	1					
ANR	1076800	Argument	self		1076706	0					
ANR	1076801	Identifier	self		1076706	0					
ANR	1076802	Argument	next		1076706	1					
ANR	1076803	Identifier	next		1076706	0					
ANR	1076804	Argument	pole_index		1076706	2					
ANR	1076805	Identifier	pole_index		1076706	0					
ANR	1076806	Argument	0		1076706	3					
ANR	1076807	PrimaryExpression	0		1076706	0					
ANR	1076808	Argument	1		1076706	4					
ANR	1076809	PrimaryExpression	1		1076706	0					
ANR	1076810	Argument	alpha		1076706	5					
ANR	1076811	Identifier	alpha		1076706	0					
ANR	1076812	Argument	1		1076706	6					
ANR	1076813	PrimaryExpression	1		1076706	0					
ANR	1076814	Argument	& design_slant		1076706	7					
ANR	1076815	UnaryOperationExpression	& design_slant		1076706	0					
ANR	1076816	UnaryOperator	&		1076706	0					
ANR	1076817	Identifier	design_slant		1076706	1					
ANR	1076818	IfStatement	if ( ! PRESERVE_STEM_SLANT || design_slant == 0 )		1076706	5					
ANR	1076819	Condition	! PRESERVE_STEM_SLANT || design_slant == 0	2128:12:86744:86784	1076706	0	True				
ANR	1076820	OrExpression	! PRESERVE_STEM_SLANT || design_slant == 0		1076706	0		||			
ANR	1076821	UnaryOperationExpression	! PRESERVE_STEM_SLANT		1076706	0					
ANR	1076822	UnaryOperator	!		1076706	0					
ANR	1076823	Identifier	PRESERVE_STEM_SLANT		1076706	1					
ANR	1076824	EqualityExpression	design_slant == 0		1076706	1		==			
ANR	1076825	Identifier	design_slant		1076706	0					
ANR	1076826	PrimaryExpression	0		1076706	1					
ANR	1076827	ExpressionStatement	* t = ( ! curve && continuing ? fixed_half : 0 )	2129:12:86799:86843	1076706	1	True				
ANR	1076828	AssignmentExpression	* t = ( ! curve && continuing ? fixed_half : 0 )		1076706	0		=			
ANR	1076829	UnaryOperationExpression	* t		1076706	0					
ANR	1076830	UnaryOperator	*		1076706	0					
ANR	1076831	Identifier	t		1076706	1					
ANR	1076832	ConditionalExpression	! curve && continuing ? fixed_half : 0		1076706	1					
ANR	1076833	Condition	! curve && continuing		1076706	0					
ANR	1076834	AndExpression	! curve && continuing		1076706	0		&&			
ANR	1076835	UnaryOperationExpression	! curve		1076706	0					
ANR	1076836	UnaryOperator	!		1076706	0					
ANR	1076837	Identifier	curve		1076706	1					
ANR	1076838	Identifier	continuing		1076706	1					
ANR	1076839	Identifier	fixed_half		1076706	1					
ANR	1076840	PrimaryExpression	0		1076706	2					
ANR	1076841	ElseStatement	else		1076706	0					
ANR	1076842	ExpressionStatement	* t = 0	2131:12:86870:86876	1076706	0	True				
ANR	1076843	AssignmentExpression	* t = 0		1076706	0		=			
ANR	1076844	UnaryOperationExpression	* t		1076706	0					
ANR	1076845	UnaryOperator	*		1076706	0					
ANR	1076846	Identifier	t		1076706	1					
ANR	1076847	PrimaryExpression	0		1076706	1					
ANR	1076848	ReturnStatement	return pole_index ;	2132:8:86886:86903	1076706	6	True				
ANR	1076849	Identifier	pole_index		1076706	0					
ANR	1076850	ReturnType	static int		1076706	1					
ANR	1076851	Identifier	t1_hinter__find_stem_middle		1076706	2					
ANR	1076852	ParameterList	"t1_hinter * self , fixed * t , int pole_index , bool horiz"		1076706	3					
ANR	1076853	Parameter	t1_hinter * self	2107:39:85668:85683	1076706	0	True				
ANR	1076854	ParameterType	t1_hinter *		1076706	0					
ANR	1076855	Identifier	self		1076706	1					
ANR	1076856	Parameter	fixed * t	2107:57:85686:85693	1076706	1	True				
ANR	1076857	ParameterType	fixed *		1076706	0					
ANR	1076858	Identifier	t		1076706	1					
ANR	1076859	Parameter	int pole_index	2107:67:85696:85709	1076706	2	True				
ANR	1076860	ParameterType	int		1076706	0					
ANR	1076861	Identifier	pole_index		1076706	1					
ANR	1076862	Parameter	bool horiz	2107:83:85712:85721	1076706	3	True				
ANR	1076863	ParameterType	bool		1076706	0					
ANR	1076864	Identifier	horiz		1076706	1					
ANR	1076865	CFGEntryNode	ENTRY		1076706		True				
ANR	1076866	CFGExitNode	EXIT		1076706		True				
ANR	1076867	Symbol	next		1076706						
ANR	1076868	Symbol	t1_hinter__is_small_angle		1076706						
ANR	1076869	Symbol	& design_slant		1076706						
ANR	1076870	Symbol	t1_hinter__next_contour_pole		1076706						
ANR	1076871	Symbol	* self -> pole		1076706						
ANR	1076872	Symbol	* * self		1076706						
ANR	1076873	Symbol	curve		1076706						
ANR	1076874	Symbol	* self		1076706						
ANR	1076875	Symbol	* next		1076706						
ANR	1076876	Symbol	self -> pole [ next ] . type		1076706						
ANR	1076877	Symbol	PRESERVE_STEM_SLANT		1076706						
ANR	1076878	Symbol	horiz		1076706						
ANR	1076879	Symbol	pole_index		1076706						
ANR	1076880	Symbol	t		1076706						
ANR	1076881	Symbol	design_slant		1076706						
ANR	1076882	Symbol	offcurve		1076706						
ANR	1076883	Symbol	alpha		1076706						
ANR	1076884	Symbol	self		1076706						
ANR	1076885	Symbol	fixed_half		1076706						
ANR	1076886	Symbol	self -> pole		1076706						
ANR	1076887	Symbol	continuing		1076706						
ANR	1076888	Symbol	* t		1076706						
ANR	1076889	Function	t1_hinter__skip_stem	2136:0:86914:87827							
ANR	1076890	FunctionDef	"t1_hinter__skip_stem (t1_hinter * self , int pole_index , bool horiz)"		1076889	0					
ANR	1076891	CompoundStatement		2137:0:86992:87827	1076889	0					
ANR	1076892	IdentifierDeclStatement	int i = pole_index ;	2138:4:87059:87077	1076889	0	True				
ANR	1076893	IdentifierDecl	i = pole_index		1076889	0					
ANR	1076894	IdentifierDeclType	int		1076889	0					
ANR	1076895	Identifier	i		1076889	1					
ANR	1076896	AssignmentExpression	i = pole_index		1076889	2		=			
ANR	1076897	Identifier	pole_index		1076889	0					
ANR	1076898	Identifier	pole_index		1076889	1					
ANR	1076899	IdentifierDeclStatement	"int next_pole = t1_hinter__next_contour_pole ( self , i ) ;"	2139:4:87083:87136	1076889	1	True				
ANR	1076900	IdentifierDecl	"next_pole = t1_hinter__next_contour_pole ( self , i )"		1076889	0					
ANR	1076901	IdentifierDeclType	int		1076889	0					
ANR	1076902	Identifier	next_pole		1076889	1					
ANR	1076903	AssignmentExpression	"next_pole = t1_hinter__next_contour_pole ( self , i )"		1076889	2		=			
ANR	1076904	Identifier	next_pole		1076889	0					
ANR	1076905	CallExpression	"t1_hinter__next_contour_pole ( self , i )"		1076889	1					
ANR	1076906	Callee	t1_hinter__next_contour_pole		1076889	0					
ANR	1076907	Identifier	t1_hinter__next_contour_pole		1076889	0					
ANR	1076908	ArgumentList	self		1076889	1					
ANR	1076909	Argument	self		1076889	0					
ANR	1076910	Identifier	self		1076889	0					
ANR	1076911	Argument	i		1076889	1					
ANR	1076912	Identifier	i		1076889	0					
ANR	1076913	IdentifierDeclStatement	"int next_segm = t1_hinter__segment_end ( self , i ) ;"	2140:4:87142:87189	1076889	2	True				
ANR	1076914	IdentifierDecl	"next_segm = t1_hinter__segment_end ( self , i )"		1076889	0					
ANR	1076915	IdentifierDeclType	int		1076889	0					
ANR	1076916	Identifier	next_segm		1076889	1					
ANR	1076917	AssignmentExpression	"next_segm = t1_hinter__segment_end ( self , i )"		1076889	2		=			
ANR	1076918	Identifier	next_segm		1076889	0					
ANR	1076919	CallExpression	"t1_hinter__segment_end ( self , i )"		1076889	1					
ANR	1076920	Callee	t1_hinter__segment_end		1076889	0					
ANR	1076921	Identifier	t1_hinter__segment_end		1076889	0					
ANR	1076922	ArgumentList	self		1076889	1					
ANR	1076923	Argument	self		1076889	0					
ANR	1076924	Identifier	self		1076889	0					
ANR	1076925	Argument	i		1076889	1					
ANR	1076926	Identifier	i		1076889	0					
ANR	1076927	IdentifierDeclStatement	long tan_x = ( horiz ? 1 : 0 ) ;	2141:4:87195:87223	1076889	3	True				
ANR	1076928	IdentifierDecl	tan_x = ( horiz ? 1 : 0 )		1076889	0					
ANR	1076929	IdentifierDeclType	long		1076889	0					
ANR	1076930	Identifier	tan_x		1076889	1					
ANR	1076931	AssignmentExpression	tan_x = ( horiz ? 1 : 0 )		1076889	2		=			
ANR	1076932	Identifier	tan_x		1076889	0					
ANR	1076933	ConditionalExpression	horiz ? 1 : 0		1076889	1					
ANR	1076934	Condition	horiz		1076889	0					
ANR	1076935	Identifier	horiz		1076889	0					
ANR	1076936	PrimaryExpression	1		1076889	1					
ANR	1076937	PrimaryExpression	0		1076889	2					
ANR	1076938	IdentifierDeclStatement	long tan_y = ( horiz ? 0 : 1 ) ;	2142:4:87229:87257	1076889	4	True				
ANR	1076939	IdentifierDecl	tan_y = ( horiz ? 0 : 1 )		1076889	0					
ANR	1076940	IdentifierDeclType	long		1076889	0					
ANR	1076941	Identifier	tan_y		1076889	1					
ANR	1076942	AssignmentExpression	tan_y = ( horiz ? 0 : 1 )		1076889	2		=			
ANR	1076943	Identifier	tan_y		1076889	0					
ANR	1076944	ConditionalExpression	horiz ? 0 : 1		1076889	1					
ANR	1076945	Condition	horiz		1076889	0					
ANR	1076946	Identifier	horiz		1076889	0					
ANR	1076947	PrimaryExpression	0		1076889	1					
ANR	1076948	PrimaryExpression	1		1076889	2					
ANR	1076949	IdentifierDeclStatement	int quality ;	2143:4:87263:87274	1076889	5	True				
ANR	1076950	IdentifierDecl	quality		1076889	0					
ANR	1076951	IdentifierDeclType	int		1076889	0					
ANR	1076952	Identifier	quality		1076889	1					
ANR	1076953	WhileStatement	"while ( t1_hinter__is_small_angle ( self , i , next_pole , tan_x , tan_y , 1000 , 1 , & quality ) && t1_hinter__is_small_angle ( self , i , next_segm , tan_x , tan_y , 1000 , 1 , & quality ) )"		1076889	6					
ANR	1076954	Condition	"t1_hinter__is_small_angle ( self , i , next_pole , tan_x , tan_y , 1000 , 1 , & quality ) && t1_hinter__is_small_angle ( self , i , next_segm , tan_x , tan_y , 1000 , 1 , & quality )"	2145:11:87288:87501	1076889	0	True				
ANR	1076955	AndExpression	"t1_hinter__is_small_angle ( self , i , next_pole , tan_x , tan_y , 1000 , 1 , & quality ) && t1_hinter__is_small_angle ( self , i , next_segm , tan_x , tan_y , 1000 , 1 , & quality )"		1076889	0		&&			
ANR	1076956	CallExpression	"t1_hinter__is_small_angle ( self , i , next_pole , tan_x , tan_y , 1000 , 1 , & quality )"		1076889	0					
ANR	1076957	Callee	t1_hinter__is_small_angle		1076889	0					
ANR	1076958	Identifier	t1_hinter__is_small_angle		1076889	0					
ANR	1076959	ArgumentList	self		1076889	1					
ANR	1076960	Argument	self		1076889	0					
ANR	1076961	Identifier	self		1076889	0					
ANR	1076962	Argument	i		1076889	1					
ANR	1076963	Identifier	i		1076889	0					
ANR	1076964	Argument	next_pole		1076889	2					
ANR	1076965	Identifier	next_pole		1076889	0					
ANR	1076966	Argument	tan_x		1076889	3					
ANR	1076967	Identifier	tan_x		1076889	0					
ANR	1076968	Argument	tan_y		1076889	4					
ANR	1076969	Identifier	tan_y		1076889	0					
ANR	1076970	Argument	1000		1076889	5					
ANR	1076971	PrimaryExpression	1000		1076889	0					
ANR	1076972	Argument	1		1076889	6					
ANR	1076973	PrimaryExpression	1		1076889	0					
ANR	1076974	Argument	& quality		1076889	7					
ANR	1076975	UnaryOperationExpression	& quality		1076889	0					
ANR	1076976	UnaryOperator	&		1076889	0					
ANR	1076977	Identifier	quality		1076889	1					
ANR	1076978	CallExpression	"t1_hinter__is_small_angle ( self , i , next_segm , tan_x , tan_y , 1000 , 1 , & quality )"		1076889	1					
ANR	1076979	Callee	t1_hinter__is_small_angle		1076889	0					
ANR	1076980	Identifier	t1_hinter__is_small_angle		1076889	0					
ANR	1076981	ArgumentList	self		1076889	1					
ANR	1076982	Argument	self		1076889	0					
ANR	1076983	Identifier	self		1076889	0					
ANR	1076984	Argument	i		1076889	1					
ANR	1076985	Identifier	i		1076889	0					
ANR	1076986	Argument	next_segm		1076889	2					
ANR	1076987	Identifier	next_segm		1076889	0					
ANR	1076988	Argument	tan_x		1076889	3					
ANR	1076989	Identifier	tan_x		1076889	0					
ANR	1076990	Argument	tan_y		1076889	4					
ANR	1076991	Identifier	tan_y		1076889	0					
ANR	1076992	Argument	1000		1076889	5					
ANR	1076993	PrimaryExpression	1000		1076889	0					
ANR	1076994	Argument	1		1076889	6					
ANR	1076995	PrimaryExpression	1		1076889	0					
ANR	1076996	Argument	& quality		1076889	7					
ANR	1076997	UnaryOperationExpression	& quality		1076889	0					
ANR	1076998	UnaryOperator	&		1076889	0					
ANR	1076999	Identifier	quality		1076889	1					
ANR	1077000	CompoundStatement		10:91:511:511	1076889	1					
ANR	1077001	ExpressionStatement	"i = t1_hinter__segment_end ( self , i )"	2147:8:87514:87549	1076889	0	True				
ANR	1077002	AssignmentExpression	"i = t1_hinter__segment_end ( self , i )"		1076889	0		=			
ANR	1077003	Identifier	i		1076889	0					
ANR	1077004	CallExpression	"t1_hinter__segment_end ( self , i )"		1076889	1					
ANR	1077005	Callee	t1_hinter__segment_end		1076889	0					
ANR	1077006	Identifier	t1_hinter__segment_end		1076889	0					
ANR	1077007	ArgumentList	self		1076889	1					
ANR	1077008	Argument	self		1076889	0					
ANR	1077009	Identifier	self		1076889	0					
ANR	1077010	Argument	i		1076889	1					
ANR	1077011	Identifier	i		1076889	0					
ANR	1077012	IfStatement	if ( i == pole_index )		1076889	1					
ANR	1077013	Condition	i == pole_index	2148:12:87563:87577	1076889	0	True				
ANR	1077014	EqualityExpression	i == pole_index		1076889	0		==			
ANR	1077015	Identifier	i		1076889	0					
ANR	1077016	Identifier	pole_index		1076889	1					
ANR	1077017	CompoundStatement		12:29:587:587	1076889	1					
ANR	1077018	BreakStatement	break ;	2150:12:87678:87683	1076889	0	True				
ANR	1077019	ExpressionStatement	"next_pole = t1_hinter__next_contour_pole ( self , i )"	2152:8:87703:87752	1076889	2	True				
ANR	1077020	AssignmentExpression	"next_pole = t1_hinter__next_contour_pole ( self , i )"		1076889	0		=			
ANR	1077021	Identifier	next_pole		1076889	0					
ANR	1077022	CallExpression	"t1_hinter__next_contour_pole ( self , i )"		1076889	1					
ANR	1077023	Callee	t1_hinter__next_contour_pole		1076889	0					
ANR	1077024	Identifier	t1_hinter__next_contour_pole		1076889	0					
ANR	1077025	ArgumentList	self		1076889	1					
ANR	1077026	Argument	self		1076889	0					
ANR	1077027	Identifier	self		1076889	0					
ANR	1077028	Argument	i		1076889	1					
ANR	1077029	Identifier	i		1076889	0					
ANR	1077030	ExpressionStatement	"next_segm = t1_hinter__segment_end ( self , i )"	2153:8:87762:87805	1076889	3	True				
ANR	1077031	AssignmentExpression	"next_segm = t1_hinter__segment_end ( self , i )"		1076889	0		=			
ANR	1077032	Identifier	next_segm		1076889	0					
ANR	1077033	CallExpression	"t1_hinter__segment_end ( self , i )"		1076889	1					
ANR	1077034	Callee	t1_hinter__segment_end		1076889	0					
ANR	1077035	Identifier	t1_hinter__segment_end		1076889	0					
ANR	1077036	ArgumentList	self		1076889	1					
ANR	1077037	Argument	self		1076889	0					
ANR	1077038	Identifier	self		1076889	0					
ANR	1077039	Argument	i		1076889	1					
ANR	1077040	Identifier	i		1076889	0					
ANR	1077041	ReturnStatement	return i ;	2155:4:87817:87825	1076889	7	True				
ANR	1077042	Identifier	i		1076889	0					
ANR	1077043	ReturnType	static int		1076889	1					
ANR	1077044	Identifier	t1_hinter__skip_stem		1076889	2					
ANR	1077045	ParameterList	"t1_hinter * self , int pole_index , bool horiz"		1076889	3					
ANR	1077046	Parameter	t1_hinter * self	2136:32:86946:86961	1076889	0	True				
ANR	1077047	ParameterType	t1_hinter *		1076889	0					
ANR	1077048	Identifier	self		1076889	1					
ANR	1077049	Parameter	int pole_index	2136:50:86964:86977	1076889	1	True				
ANR	1077050	ParameterType	int		1076889	0					
ANR	1077051	Identifier	pole_index		1076889	1					
ANR	1077052	Parameter	bool horiz	2136:66:86980:86989	1076889	2	True				
ANR	1077053	ParameterType	bool		1076889	0					
ANR	1077054	Identifier	horiz		1076889	1					
ANR	1077055	CFGEntryNode	ENTRY		1076889		True				
ANR	1077056	CFGExitNode	EXIT		1076889		True				
ANR	1077057	Symbol	t1_hinter__is_small_angle		1076889						
ANR	1077058	Symbol	t1_hinter__next_contour_pole		1076889						
ANR	1077059	Symbol	next_segm		1076889						
ANR	1077060	Symbol	i		1076889						
ANR	1077061	Symbol	tan_x		1076889						
ANR	1077062	Symbol	tan_y		1076889						
ANR	1077063	Symbol	next_pole		1076889						
ANR	1077064	Symbol	quality		1076889						
ANR	1077065	Symbol	horiz		1076889						
ANR	1077066	Symbol	pole_index		1076889						
ANR	1077067	Symbol	t1_hinter__segment_end		1076889						
ANR	1077068	Symbol	self		1076889						
ANR	1077069	Symbol	& quality		1076889						
ANR	1077070	Function	t1_hinter__mark_existing_stems	2158:0:87830:89434							
ANR	1077071	FunctionDef	t1_hinter__mark_existing_stems (t1_hinter * self)		1077070	0					
ANR	1077072	CompoundStatement		2159:0:87891:89434	1077070	0					
ANR	1077073	IdentifierDeclStatement	"int i , j , jj , k ;"	2160:4:87965:87980	1077070	0	True				
ANR	1077074	IdentifierDecl	i		1077070	0					
ANR	1077075	IdentifierDeclType	int		1077070	0					
ANR	1077076	Identifier	i		1077070	1					
ANR	1077077	IdentifierDecl	j		1077070	1					
ANR	1077078	IdentifierDeclType	int		1077070	0					
ANR	1077079	Identifier	j		1077070	1					
ANR	1077080	IdentifierDecl	jj		1077070	2					
ANR	1077081	IdentifierDeclType	int		1077070	0					
ANR	1077082	Identifier	jj		1077070	1					
ANR	1077083	IdentifierDecl	k		1077070	3					
ANR	1077084	IdentifierDeclType	int		1077070	0					
ANR	1077085	Identifier	k		1077070	1					
ANR	1077086	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		1077070	1					
ANR	1077087	ForInit	i = 0 ;	2162:8:87991:87996	1077070	0	True				
ANR	1077088	AssignmentExpression	i = 0		1077070	0		=			
ANR	1077089	Identifier	i		1077070	0					
ANR	1077090	PrimaryExpression	0		1077070	1					
ANR	1077091	Condition	i < self -> hint_count	2162:15:87998:88017	1077070	1	True				
ANR	1077092	RelationalExpression	i < self -> hint_count		1077070	0		<			
ANR	1077093	Identifier	i		1077070	0					
ANR	1077094	PtrMemberAccess	self -> hint_count		1077070	1					
ANR	1077095	Identifier	self		1077070	0					
ANR	1077096	Identifier	hint_count		1077070	1					
ANR	1077097	PostIncDecOperationExpression	i ++	2162:37:88020:88022	1077070	2	True				
ANR	1077098	Identifier	i		1077070	0					
ANR	1077099	IncDec	++		1077070	1					
ANR	1077100	IfStatement	if ( self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem )		1077070	3					
ANR	1077101	Condition	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem	2163:12:88037:88094	1077070	0	True				
ANR	1077102	OrExpression	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem		1077070	0		||			
ANR	1077103	EqualityExpression	self -> hint [ i ] . type == vstem		1077070	0		==			
ANR	1077104	MemberAccess	self -> hint [ i ] . type		1077070	0					
ANR	1077105	ArrayIndexing	self -> hint [ i ]		1077070	0					
ANR	1077106	PtrMemberAccess	self -> hint		1077070	0					
ANR	1077107	Identifier	self		1077070	0					
ANR	1077108	Identifier	hint		1077070	1					
ANR	1077109	Identifier	i		1077070	1					
ANR	1077110	Identifier	type		1077070	1					
ANR	1077111	Identifier	vstem		1077070	1					
ANR	1077112	EqualityExpression	self -> hint [ i ] . type == hstem		1077070	1		==			
ANR	1077113	MemberAccess	self -> hint [ i ] . type		1077070	0					
ANR	1077114	ArrayIndexing	self -> hint [ i ]		1077070	0					
ANR	1077115	PtrMemberAccess	self -> hint		1077070	0					
ANR	1077116	Identifier	self		1077070	0					
ANR	1077117	Identifier	hint		1077070	1					
ANR	1077118	Identifier	i		1077070	1					
ANR	1077119	Identifier	type		1077070	1					
ANR	1077120	Identifier	hstem		1077070	1					
ANR	1077121	ForStatement	for ( k = self -> hint [ i ] . range_index ; k != - 1 ; k = self -> hint_range [ k ] . next )		1077070	1					
ANR	1077122	ForInit	k = self -> hint [ i ] . range_index ;	2164:17:88114:88143	1077070	0	True				
ANR	1077123	AssignmentExpression	k = self -> hint [ i ] . range_index		1077070	0		=			
ANR	1077124	Identifier	k		1077070	0					
ANR	1077125	MemberAccess	self -> hint [ i ] . range_index		1077070	1					
ANR	1077126	ArrayIndexing	self -> hint [ i ]		1077070	0					
ANR	1077127	PtrMemberAccess	self -> hint		1077070	0					
ANR	1077128	Identifier	self		1077070	0					
ANR	1077129	Identifier	hint		1077070	1					
ANR	1077130	Identifier	i		1077070	1					
ANR	1077131	Identifier	range_index		1077070	1					
ANR	1077132	Condition	k != - 1	2164:48:88145:88151	1077070	1	True				
ANR	1077133	EqualityExpression	k != - 1		1077070	0		!=			
ANR	1077134	Identifier	k		1077070	0					
ANR	1077135	UnaryOperationExpression	- 1		1077070	1					
ANR	1077136	UnaryOperator	-		1077070	0					
ANR	1077137	PrimaryExpression	1		1077070	1					
ANR	1077138	AssignmentExpression	k = self -> hint_range [ k ] . next	2164:57:88154:88181	1077070	2	True	=			
ANR	1077139	Identifier	k		1077070	0					
ANR	1077140	MemberAccess	self -> hint_range [ k ] . next		1077070	1					
ANR	1077141	ArrayIndexing	self -> hint_range [ k ]		1077070	0					
ANR	1077142	PtrMemberAccess	self -> hint_range		1077070	0					
ANR	1077143	Identifier	self		1077070	0					
ANR	1077144	Identifier	hint_range		1077070	1					
ANR	1077145	Identifier	k		1077070	1					
ANR	1077146	Identifier	next		1077070	1					
ANR	1077147	CompoundStatement		9:16:444:455	1077070	3					
ANR	1077148	IdentifierDeclStatement	int beg_range_pole = self -> hint_range [ k ] . beg_pole ;	2165:16:88202:88251	1077070	0	True				
ANR	1077149	IdentifierDecl	beg_range_pole = self -> hint_range [ k ] . beg_pole		1077070	0					
ANR	1077150	IdentifierDeclType	int		1077070	0					
ANR	1077151	Identifier	beg_range_pole		1077070	1					
ANR	1077152	AssignmentExpression	beg_range_pole = self -> hint_range [ k ] . beg_pole		1077070	2		=			
ANR	1077153	Identifier	beg_range_pole		1077070	0					
ANR	1077154	MemberAccess	self -> hint_range [ k ] . beg_pole		1077070	1					
ANR	1077155	ArrayIndexing	self -> hint_range [ k ]		1077070	0					
ANR	1077156	PtrMemberAccess	self -> hint_range		1077070	0					
ANR	1077157	Identifier	self		1077070	0					
ANR	1077158	Identifier	hint_range		1077070	1					
ANR	1077159	Identifier	k		1077070	1					
ANR	1077160	Identifier	beg_pole		1077070	1					
ANR	1077161	IdentifierDeclStatement	int end_range_pole = self -> hint_range [ k ] . end_pole ;	2166:16:88269:88318	1077070	1	True				
ANR	1077162	IdentifierDecl	end_range_pole = self -> hint_range [ k ] . end_pole		1077070	0					
ANR	1077163	IdentifierDeclType	int		1077070	0					
ANR	1077164	Identifier	end_range_pole		1077070	1					
ANR	1077165	AssignmentExpression	end_range_pole = self -> hint_range [ k ] . end_pole		1077070	2		=			
ANR	1077166	Identifier	end_range_pole		1077070	0					
ANR	1077167	MemberAccess	self -> hint_range [ k ] . end_pole		1077070	1					
ANR	1077168	ArrayIndexing	self -> hint_range [ k ]		1077070	0					
ANR	1077169	PtrMemberAccess	self -> hint_range		1077070	0					
ANR	1077170	Identifier	self		1077070	0					
ANR	1077171	Identifier	hint_range		1077070	1					
ANR	1077172	Identifier	k		1077070	1					
ANR	1077173	Identifier	end_pole		1077070	1					
ANR	1077174	IdentifierDeclStatement	int quality ;	2167:16:88336:88347	1077070	2	True				
ANR	1077175	IdentifierDecl	quality		1077070	0					
ANR	1077176	IdentifierDeclType	int		1077070	0					
ANR	1077177	Identifier	quality		1077070	1					
ANR	1077178	IfStatement	if ( self -> pole [ beg_range_pole ] . type == closepath )		1077070	3					
ANR	1077179	Condition	self -> pole [ beg_range_pole ] . type == closepath	2169:20:88370:88413	1077070	0	True				
ANR	1077180	EqualityExpression	self -> pole [ beg_range_pole ] . type == closepath		1077070	0		==			
ANR	1077181	MemberAccess	self -> pole [ beg_range_pole ] . type		1077070	0					
ANR	1077182	ArrayIndexing	self -> pole [ beg_range_pole ]		1077070	0					
ANR	1077183	PtrMemberAccess	self -> pole		1077070	0					
ANR	1077184	Identifier	self		1077070	0					
ANR	1077185	Identifier	pole		1077070	1					
ANR	1077186	Identifier	beg_range_pole		1077070	1					
ANR	1077187	Identifier	type		1077070	1					
ANR	1077188	Identifier	closepath		1077070	1					
ANR	1077189	CompoundStatement		11:66:524:524	1077070	1					
ANR	1077190	ExpressionStatement	beg_range_pole ++	2172:20:88583:88599	1077070	0	True				
ANR	1077191	PostIncDecOperationExpression	beg_range_pole ++		1077070	0					
ANR	1077192	Identifier	beg_range_pole		1077070	0					
ANR	1077193	IncDec	++		1077070	1					
ANR	1077194	IfStatement	if ( beg_range_pole > end_range_pole )		1077070	1					
ANR	1077195	Condition	beg_range_pole > end_range_pole	2173:24:88625:88655	1077070	0	True				
ANR	1077196	RelationalExpression	beg_range_pole > end_range_pole		1077070	0		>			
ANR	1077197	Identifier	beg_range_pole		1077070	0					
ANR	1077198	Identifier	end_range_pole		1077070	1					
ANR	1077199	ContinueStatement	continue ;	2174:24:88682:88690	1077070	1	True				
ANR	1077200	ForStatement	for ( j = beg_range_pole ; j <= end_range_pole ; )		1077070	4					
ANR	1077201	ForInit	j = beg_range_pole ;	2176:21:88731:88749	1077070	0	True				
ANR	1077202	AssignmentExpression	j = beg_range_pole		1077070	0		=			
ANR	1077203	Identifier	j		1077070	0					
ANR	1077204	Identifier	beg_range_pole		1077070	1					
ANR	1077205	Condition	j <= end_range_pole	2176:41:88751:88769	1077070	1	True				
ANR	1077206	RelationalExpression	j <= end_range_pole		1077070	0		<=			
ANR	1077207	Identifier	j		1077070	0					
ANR	1077208	Identifier	end_range_pole		1077070	1					
ANR	1077209	CompoundStatement		19:20:903:980	1077070	2					
ANR	1077210	IdentifierDeclStatement	"int k = t1_hinter__is_stem_hint_applicable ( self , & self -> hint [ i ] , j , & quality ) ;"	2177:20:88795:88872	1077070	0	True				
ANR	1077211	IdentifierDecl	"k = t1_hinter__is_stem_hint_applicable ( self , & self -> hint [ i ] , j , & quality )"		1077070	0					
ANR	1077212	IdentifierDeclType	int		1077070	0					
ANR	1077213	Identifier	k		1077070	1					
ANR	1077214	AssignmentExpression	"k = t1_hinter__is_stem_hint_applicable ( self , & self -> hint [ i ] , j , & quality )"		1077070	2		=			
ANR	1077215	Identifier	k		1077070	0					
ANR	1077216	CallExpression	"t1_hinter__is_stem_hint_applicable ( self , & self -> hint [ i ] , j , & quality )"		1077070	1					
ANR	1077217	Callee	t1_hinter__is_stem_hint_applicable		1077070	0					
ANR	1077218	Identifier	t1_hinter__is_stem_hint_applicable		1077070	0					
ANR	1077219	ArgumentList	self		1077070	1					
ANR	1077220	Argument	self		1077070	0					
ANR	1077221	Identifier	self		1077070	0					
ANR	1077222	Argument	& self -> hint [ i ]		1077070	1					
ANR	1077223	UnaryOperationExpression	& self -> hint [ i ]		1077070	0					
ANR	1077224	UnaryOperator	&		1077070	0					
ANR	1077225	ArrayIndexing	self -> hint [ i ]		1077070	1					
ANR	1077226	PtrMemberAccess	self -> hint		1077070	0					
ANR	1077227	Identifier	self		1077070	0					
ANR	1077228	Identifier	hint		1077070	1					
ANR	1077229	Identifier	i		1077070	1					
ANR	1077230	Argument	j		1077070	2					
ANR	1077231	Identifier	j		1077070	0					
ANR	1077232	Argument	& quality		1077070	3					
ANR	1077233	UnaryOperationExpression	& quality		1077070	0					
ANR	1077234	UnaryOperator	&		1077070	0					
ANR	1077235	Identifier	quality		1077070	1					
ANR	1077236	IfStatement	if ( k == 1 )		1077070	1					
ANR	1077237	Condition	k == 1	2178:24:88898:88903	1077070	0	True				
ANR	1077238	EqualityExpression	k == 1		1077070	0		==			
ANR	1077239	Identifier	k		1077070	0					
ANR	1077240	PrimaryExpression	1		1077070	1					
ANR	1077241	ExpressionStatement	self -> hint [ i ] . b0 = true	2179:24:88930:88953	1077070	1	True				
ANR	1077242	AssignmentExpression	self -> hint [ i ] . b0 = true		1077070	0		=			
ANR	1077243	MemberAccess	self -> hint [ i ] . b0		1077070	0					
ANR	1077244	ArrayIndexing	self -> hint [ i ]		1077070	0					
ANR	1077245	PtrMemberAccess	self -> hint		1077070	0					
ANR	1077246	Identifier	self		1077070	0					
ANR	1077247	Identifier	hint		1077070	1					
ANR	1077248	Identifier	i		1077070	1					
ANR	1077249	Identifier	b0		1077070	1					
ANR	1077250	Identifier	true		1077070	1					
ANR	1077251	ElseStatement	else		1077070	0					
ANR	1077252	IfStatement	if ( k == 2 )		1077070	0					
ANR	1077253	Condition	k == 2	2180:29:88984:88989	1077070	0	True				
ANR	1077254	EqualityExpression	k == 2		1077070	0		==			
ANR	1077255	Identifier	k		1077070	0					
ANR	1077256	PrimaryExpression	2		1077070	1					
ANR	1077257	ExpressionStatement	self -> hint [ i ] . b1 = true	2181:24:89016:89039	1077070	1	True				
ANR	1077258	AssignmentExpression	self -> hint [ i ] . b1 = true		1077070	0		=			
ANR	1077259	MemberAccess	self -> hint [ i ] . b1		1077070	0					
ANR	1077260	ArrayIndexing	self -> hint [ i ]		1077070	0					
ANR	1077261	PtrMemberAccess	self -> hint		1077070	0					
ANR	1077262	Identifier	self		1077070	0					
ANR	1077263	Identifier	hint		1077070	1					
ANR	1077264	Identifier	i		1077070	1					
ANR	1077265	Identifier	b1		1077070	1					
ANR	1077266	Identifier	true		1077070	1					
ANR	1077267	CompoundStatement		24:20:1169:1169	1077070	2					
ANR	1077268	ExpressionStatement	jj = j	2183:24:89132:89138	1077070	0	True				
ANR	1077269	AssignmentExpression	jj = j		1077070	0		=			
ANR	1077270	Identifier	jj		1077070	0					
ANR	1077271	Identifier	j		1077070	1					
ANR	1077272	ExpressionStatement	"j = t1_hinter__segment_end ( self , j )"	2184:24:89164:89199	1077070	1	True				
ANR	1077273	AssignmentExpression	"j = t1_hinter__segment_end ( self , j )"		1077070	0		=			
ANR	1077274	Identifier	j		1077070	0					
ANR	1077275	CallExpression	"t1_hinter__segment_end ( self , j )"		1077070	1					
ANR	1077276	Callee	t1_hinter__segment_end		1077070	0					
ANR	1077277	Identifier	t1_hinter__segment_end		1077070	0					
ANR	1077278	ArgumentList	self		1077070	1					
ANR	1077279	Argument	self		1077070	0					
ANR	1077280	Identifier	self		1077070	0					
ANR	1077281	Argument	j		1077070	1					
ANR	1077282	Identifier	j		1077070	0					
ANR	1077283	IfStatement	if ( j <= jj )		1077070	2					
ANR	1077284	Condition	j <= jj	2185:28:89229:89235	1077070	0	True				
ANR	1077285	RelationalExpression	j <= jj		1077070	0		<=			
ANR	1077286	Identifier	j		1077070	0					
ANR	1077287	Identifier	jj		1077070	1					
ANR	1077288	ExpressionStatement	j = self -> contour [ self -> pole [ j ] . contour_index + 1 ]	2186:28:89298:89348	1077070	1	True				
ANR	1077289	AssignmentExpression	j = self -> contour [ self -> pole [ j ] . contour_index + 1 ]		1077070	0		=			
ANR	1077290	Identifier	j		1077070	0					
ANR	1077291	ArrayIndexing	self -> contour [ self -> pole [ j ] . contour_index + 1 ]		1077070	1					
ANR	1077292	PtrMemberAccess	self -> contour		1077070	0					
ANR	1077293	Identifier	self		1077070	0					
ANR	1077294	Identifier	contour		1077070	1					
ANR	1077295	AdditiveExpression	self -> pole [ j ] . contour_index + 1		1077070	1		+			
ANR	1077296	MemberAccess	self -> pole [ j ] . contour_index		1077070	0					
ANR	1077297	ArrayIndexing	self -> pole [ j ]		1077070	0					
ANR	1077298	PtrMemberAccess	self -> pole		1077070	0					
ANR	1077299	Identifier	self		1077070	0					
ANR	1077300	Identifier	pole		1077070	1					
ANR	1077301	Identifier	j		1077070	1					
ANR	1077302	Identifier	contour_index		1077070	1					
ANR	1077303	PrimaryExpression	1		1077070	1					
ANR	1077304	ReturnType	static void		1077070	1					
ANR	1077305	Identifier	t1_hinter__mark_existing_stems		1077070	2					
ANR	1077306	ParameterList	t1_hinter * self		1077070	3					
ANR	1077307	Parameter	t1_hinter * self	2158:43:87873:87888	1077070	0	True				
ANR	1077308	ParameterType	t1_hinter *		1077070	0					
ANR	1077309	Identifier	self		1077070	1					
ANR	1077310	CFGEntryNode	ENTRY		1077070		True				
ANR	1077311	CFGExitNode	EXIT		1077070		True				
ANR	1077312	Symbol	jj		1077070						
ANR	1077313	Symbol	self -> hint_range [ k ] . next		1077070						
ANR	1077314	Symbol	end_range_pole		1077070						
ANR	1077315	Symbol	* self -> pole		1077070						
ANR	1077316	Symbol	vstem		1077070						
ANR	1077317	Symbol	self -> hint [ i ] . b0		1077070						
ANR	1077318	Symbol	self -> hint [ i ] . b1		1077070						
ANR	1077319	Symbol	* self -> hint		1077070						
ANR	1077320	Symbol	* beg_range_pole		1077070						
ANR	1077321	Symbol	self -> pole [ j ] . contour_index		1077070						
ANR	1077322	Symbol	t1_hinter__segment_end		1077070						
ANR	1077323	Symbol	self -> pole [ beg_range_pole ] . type		1077070						
ANR	1077324	Symbol	* * self -> pole		1077070						
ANR	1077325	Symbol	closepath		1077070						
ANR	1077326	Symbol	* * * self		1077070						
ANR	1077327	Symbol	self -> pole		1077070						
ANR	1077328	Symbol	self -> hint_range [ k ] . beg_pole		1077070						
ANR	1077329	Symbol	& quality		1077070						
ANR	1077330	Symbol	hstem		1077070						
ANR	1077331	Symbol	t1_hinter__is_stem_hint_applicable		1077070						
ANR	1077332	Symbol	* self -> contour		1077070						
ANR	1077333	Symbol	* * j		1077070						
ANR	1077334	Symbol	self -> hint [ i ] . type		1077070						
ANR	1077335	Symbol	self -> hint		1077070						
ANR	1077336	Symbol	* * self		1077070						
ANR	1077337	Symbol	* self		1077070						
ANR	1077338	Symbol	i		1077070						
ANR	1077339	Symbol	j		1077070						
ANR	1077340	Symbol	k		1077070						
ANR	1077341	Symbol	beg_range_pole		1077070						
ANR	1077342	Symbol	self -> hint_range		1077070						
ANR	1077343	Symbol	quality		1077070						
ANR	1077344	Symbol	* self -> hint_range		1077070						
ANR	1077345	Symbol	self -> contour		1077070						
ANR	1077346	Symbol	self -> hint_count		1077070						
ANR	1077347	Symbol	* i		1077070						
ANR	1077348	Symbol	* j		1077070						
ANR	1077349	Symbol	self -> hint [ i ] . range_index		1077070						
ANR	1077350	Symbol	* k		1077070						
ANR	1077351	Symbol	true		1077070						
ANR	1077352	Symbol	self		1077070						
ANR	1077353	Symbol	self -> hint_range [ k ] . end_pole		1077070						
ANR	1077354	Symbol	* self -> pole [ j ] . contour_index		1077070						
ANR	1077355	Function	t1_hinter__add_boundary_length	2192:0:89437:90440							
ANR	1077356	FunctionDef	"t1_hinter__add_boundary_length (t1_hinter * self , t1_hint * hint , int pole_index0 , int pole_index1)"		1077355	0					
ANR	1077357	CompoundStatement		2194:0:89591:90440	1077355	0					
ANR	1077358	IdentifierDeclStatement	const t1_pole * pole = & self -> pole [ pole_index0 ] ;	2194:3:89595:89641	1077355	0	True				
ANR	1077359	IdentifierDecl	* pole = & self -> pole [ pole_index0 ]		1077355	0					
ANR	1077360	IdentifierDeclType	const t1_pole *		1077355	0					
ANR	1077361	Identifier	pole		1077355	1					
ANR	1077362	AssignmentExpression	* pole = & self -> pole [ pole_index0 ]		1077355	2		=			
ANR	1077363	Identifier	pole		1077355	0					
ANR	1077364	UnaryOperationExpression	& self -> pole [ pole_index0 ]		1077355	1					
ANR	1077365	UnaryOperator	&		1077355	0					
ANR	1077366	ArrayIndexing	self -> pole [ pole_index0 ]		1077355	1					
ANR	1077367	PtrMemberAccess	self -> pole		1077355	0					
ANR	1077368	Identifier	self		1077355	0					
ANR	1077369	Identifier	pole		1077355	1					
ANR	1077370	Identifier	pole_index0		1077355	1					
ANR	1077371	IdentifierDeclStatement	int contour_index = pole -> contour_index ;	2195:4:89647:89686	1077355	1	True				
ANR	1077372	IdentifierDecl	contour_index = pole -> contour_index		1077355	0					
ANR	1077373	IdentifierDeclType	int		1077355	0					
ANR	1077374	Identifier	contour_index		1077355	1					
ANR	1077375	AssignmentExpression	contour_index = pole -> contour_index		1077355	2		=			
ANR	1077376	Identifier	contour_index		1077355	0					
ANR	1077377	PtrMemberAccess	pole -> contour_index		1077355	1					
ANR	1077378	Identifier	pole		1077355	0					
ANR	1077379	Identifier	contour_index		1077355	1					
ANR	1077380	IdentifierDeclStatement	int beg_contour_pole = self -> contour [ contour_index ] ;	2196:4:89692:89743	1077355	2	True				
ANR	1077381	IdentifierDecl	beg_contour_pole = self -> contour [ contour_index ]		1077355	0					
ANR	1077382	IdentifierDeclType	int		1077355	0					
ANR	1077383	Identifier	beg_contour_pole		1077355	1					
ANR	1077384	AssignmentExpression	beg_contour_pole = self -> contour [ contour_index ]		1077355	2		=			
ANR	1077385	Identifier	beg_contour_pole		1077355	0					
ANR	1077386	ArrayIndexing	self -> contour [ contour_index ]		1077355	1					
ANR	1077387	PtrMemberAccess	self -> contour		1077355	0					
ANR	1077388	Identifier	self		1077355	0					
ANR	1077389	Identifier	contour		1077355	1					
ANR	1077390	Identifier	contour_index		1077355	1					
ANR	1077391	IdentifierDeclStatement	int end_contour_pole = self -> contour [ contour_index + 1 ] - 2 ;	2197:4:89749:89808	1077355	3	True				
ANR	1077392	IdentifierDecl	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		1077355	0					
ANR	1077393	IdentifierDeclType	int		1077355	0					
ANR	1077394	Identifier	end_contour_pole		1077355	1					
ANR	1077395	AssignmentExpression	end_contour_pole = self -> contour [ contour_index + 1 ] - 2		1077355	2		=			
ANR	1077396	Identifier	end_contour_pole		1077355	0					
ANR	1077397	AdditiveExpression	self -> contour [ contour_index + 1 ] - 2		1077355	1		-			
ANR	1077398	ArrayIndexing	self -> contour [ contour_index + 1 ]		1077355	0					
ANR	1077399	PtrMemberAccess	self -> contour		1077355	0					
ANR	1077400	Identifier	self		1077355	0					
ANR	1077401	Identifier	contour		1077355	1					
ANR	1077402	AdditiveExpression	contour_index + 1		1077355	1		+			
ANR	1077403	Identifier	contour_index		1077355	0					
ANR	1077404	PrimaryExpression	1		1077355	1					
ANR	1077405	PrimaryExpression	2		1077355	1					
ANR	1077406	IdentifierDeclStatement	"int i0 = ranger_step_b ( pole_index0 , beg_contour_pole , end_contour_pole ) ;"	2198:4:89814:89885	1077355	4	True				
ANR	1077407	IdentifierDecl	"i0 = ranger_step_b ( pole_index0 , beg_contour_pole , end_contour_pole )"		1077355	0					
ANR	1077408	IdentifierDeclType	int		1077355	0					
ANR	1077409	Identifier	i0		1077355	1					
ANR	1077410	AssignmentExpression	"i0 = ranger_step_b ( pole_index0 , beg_contour_pole , end_contour_pole )"		1077355	2		=			
ANR	1077411	Identifier	i0		1077355	0					
ANR	1077412	CallExpression	"ranger_step_b ( pole_index0 , beg_contour_pole , end_contour_pole )"		1077355	1					
ANR	1077413	Callee	ranger_step_b		1077355	0					
ANR	1077414	Identifier	ranger_step_b		1077355	0					
ANR	1077415	ArgumentList	pole_index0		1077355	1					
ANR	1077416	Argument	pole_index0		1077355	0					
ANR	1077417	Identifier	pole_index0		1077355	0					
ANR	1077418	Argument	beg_contour_pole		1077355	1					
ANR	1077419	Identifier	beg_contour_pole		1077355	0					
ANR	1077420	Argument	end_contour_pole		1077355	2					
ANR	1077421	Identifier	end_contour_pole		1077355	0					
ANR	1077422	IdentifierDeclStatement	"int i1 = ranger_step_f ( pole_index1 , beg_contour_pole , end_contour_pole ) ;"	2199:4:89891:89962	1077355	5	True				
ANR	1077423	IdentifierDecl	"i1 = ranger_step_f ( pole_index1 , beg_contour_pole , end_contour_pole )"		1077355	0					
ANR	1077424	IdentifierDeclType	int		1077355	0					
ANR	1077425	Identifier	i1		1077355	1					
ANR	1077426	AssignmentExpression	"i1 = ranger_step_f ( pole_index1 , beg_contour_pole , end_contour_pole )"		1077355	2		=			
ANR	1077427	Identifier	i1		1077355	0					
ANR	1077428	CallExpression	"ranger_step_f ( pole_index1 , beg_contour_pole , end_contour_pole )"		1077355	1					
ANR	1077429	Callee	ranger_step_f		1077355	0					
ANR	1077430	Identifier	ranger_step_f		1077355	0					
ANR	1077431	ArgumentList	pole_index1		1077355	1					
ANR	1077432	Argument	pole_index1		1077355	0					
ANR	1077433	Identifier	pole_index1		1077355	0					
ANR	1077434	Argument	beg_contour_pole		1077355	1					
ANR	1077435	Identifier	beg_contour_pole		1077355	0					
ANR	1077436	Argument	end_contour_pole		1077355	2					
ANR	1077437	Identifier	end_contour_pole		1077355	0					
ANR	1077438	IdentifierDeclStatement	t1_glyph_space_coord g = ( hint -> type == hstem ? pole -> gy : pole -> gx ) ;	2200:4:89968:90036	1077355	6	True				
ANR	1077439	IdentifierDecl	g = ( hint -> type == hstem ? pole -> gy : pole -> gx )		1077355	0					
ANR	1077440	IdentifierDeclType	t1_glyph_space_coord		1077355	0					
ANR	1077441	Identifier	g		1077355	1					
ANR	1077442	AssignmentExpression	g = ( hint -> type == hstem ? pole -> gy : pole -> gx )		1077355	2		=			
ANR	1077443	Identifier	g		1077355	0					
ANR	1077444	ConditionalExpression	hint -> type == hstem ? pole -> gy : pole -> gx		1077355	1					
ANR	1077445	Condition	hint -> type == hstem		1077355	0					
ANR	1077446	EqualityExpression	hint -> type == hstem		1077355	0		==			
ANR	1077447	PtrMemberAccess	hint -> type		1077355	0					
ANR	1077448	Identifier	hint		1077355	0					
ANR	1077449	Identifier	type		1077355	1					
ANR	1077450	Identifier	hstem		1077355	1					
ANR	1077451	PtrMemberAccess	pole -> gy		1077355	1					
ANR	1077452	Identifier	pole		1077355	0					
ANR	1077453	Identifier	gy		1077355	1					
ANR	1077454	PtrMemberAccess	pole -> gx		1077355	2					
ANR	1077455	Identifier	pole		1077355	0					
ANR	1077456	Identifier	gx		1077355	1					
ANR	1077457	IfStatement	if ( self -> pole [ i0 ] . type == oncurve )		1077355	7					
ANR	1077458	Condition	self -> pole [ i0 ] . type == oncurve	2202:8:90047:90076	1077355	0	True				
ANR	1077459	EqualityExpression	self -> pole [ i0 ] . type == oncurve		1077355	0		==			
ANR	1077460	MemberAccess	self -> pole [ i0 ] . type		1077355	0					
ANR	1077461	ArrayIndexing	self -> pole [ i0 ]		1077355	0					
ANR	1077462	PtrMemberAccess	self -> pole		1077355	0					
ANR	1077463	Identifier	self		1077355	0					
ANR	1077464	Identifier	pole		1077355	1					
ANR	1077465	Identifier	i0		1077355	1					
ANR	1077466	Identifier	type		1077355	1					
ANR	1077467	Identifier	oncurve		1077355	1					
ANR	1077468	ExpressionStatement	i0 = pole_index0	2203:8:90087:90103	1077355	1	True				
ANR	1077469	AssignmentExpression	i0 = pole_index0		1077355	0		=			
ANR	1077470	Identifier	i0		1077355	0					
ANR	1077471	Identifier	pole_index0		1077355	1					
ANR	1077472	IfStatement	if ( self -> pole [ i1 ] . type == oncurve )		1077355	8					
ANR	1077473	Condition	self -> pole [ i1 ] . type == oncurve	2204:8:90113:90142	1077355	0	True				
ANR	1077474	EqualityExpression	self -> pole [ i1 ] . type == oncurve		1077355	0		==			
ANR	1077475	MemberAccess	self -> pole [ i1 ] . type		1077355	0					
ANR	1077476	ArrayIndexing	self -> pole [ i1 ]		1077355	0					
ANR	1077477	PtrMemberAccess	self -> pole		1077355	0					
ANR	1077478	Identifier	self		1077355	0					
ANR	1077479	Identifier	pole		1077355	1					
ANR	1077480	Identifier	i1		1077355	1					
ANR	1077481	Identifier	type		1077355	1					
ANR	1077482	Identifier	oncurve		1077355	1					
ANR	1077483	ExpressionStatement	i1 = pole_index1	2205:8:90153:90169	1077355	1	True				
ANR	1077484	AssignmentExpression	i1 = pole_index1		1077355	0		=			
ANR	1077485	Identifier	i1		1077355	0					
ANR	1077486	Identifier	pole_index1		1077355	1					
ANR	1077487	ExpressionStatement	* ( any_abs ( hint -> g0 - g ) < any_abs ( hint -> g1 - g ) ? & hint -> boundary_length0 : & hint -> boundary_length1 ) += ( hint -> type == hstem ? any_abs ( self -> pole [ i0 ] . gx - self -> pole [ i1 ] . gx ) : any_abs ( self -> pole [ i0 ] . gy - self -> pole [ i1 ] . gy ) )	2206:4:90175:90438	1077355	9	True				
ANR	1077488	AssignmentExpression	* ( any_abs ( hint -> g0 - g ) < any_abs ( hint -> g1 - g ) ? & hint -> boundary_length0 : & hint -> boundary_length1 ) += ( hint -> type == hstem ? any_abs ( self -> pole [ i0 ] . gx - self -> pole [ i1 ] . gx ) : any_abs ( self -> pole [ i0 ] . gy - self -> pole [ i1 ] . gy ) )		1077355	0		+=			
ANR	1077489	UnaryOperationExpression	* ( any_abs ( hint -> g0 - g ) < any_abs ( hint -> g1 - g ) ? & hint -> boundary_length0 : & hint -> boundary_length1 )		1077355	0					
ANR	1077490	UnaryOperator	*		1077355	0					
ANR	1077491	ConditionalExpression	any_abs ( hint -> g0 - g ) < any_abs ( hint -> g1 - g ) ? & hint -> boundary_length0 : & hint -> boundary_length1		1077355	1					
ANR	1077492	Condition	any_abs ( hint -> g0 - g ) < any_abs ( hint -> g1 - g )		1077355	0					
ANR	1077493	RelationalExpression	any_abs ( hint -> g0 - g ) < any_abs ( hint -> g1 - g )		1077355	0		<			
ANR	1077494	CallExpression	any_abs ( hint -> g0 - g )		1077355	0					
ANR	1077495	Callee	any_abs		1077355	0					
ANR	1077496	Identifier	any_abs		1077355	0					
ANR	1077497	ArgumentList	hint -> g0 - g		1077355	1					
ANR	1077498	Argument	hint -> g0 - g		1077355	0					
ANR	1077499	AdditiveExpression	hint -> g0 - g		1077355	0		-			
ANR	1077500	PtrMemberAccess	hint -> g0		1077355	0					
ANR	1077501	Identifier	hint		1077355	0					
ANR	1077502	Identifier	g0		1077355	1					
ANR	1077503	Identifier	g		1077355	1					
ANR	1077504	CallExpression	any_abs ( hint -> g1 - g )		1077355	1					
ANR	1077505	Callee	any_abs		1077355	0					
ANR	1077506	Identifier	any_abs		1077355	0					
ANR	1077507	ArgumentList	hint -> g1 - g		1077355	1					
ANR	1077508	Argument	hint -> g1 - g		1077355	0					
ANR	1077509	AdditiveExpression	hint -> g1 - g		1077355	0		-			
ANR	1077510	PtrMemberAccess	hint -> g1		1077355	0					
ANR	1077511	Identifier	hint		1077355	0					
ANR	1077512	Identifier	g1		1077355	1					
ANR	1077513	Identifier	g		1077355	1					
ANR	1077514	UnaryOperationExpression	& hint -> boundary_length0		1077355	1					
ANR	1077515	UnaryOperator	&		1077355	0					
ANR	1077516	PtrMemberAccess	hint -> boundary_length0		1077355	1					
ANR	1077517	Identifier	hint		1077355	0					
ANR	1077518	Identifier	boundary_length0		1077355	1					
ANR	1077519	UnaryOperationExpression	& hint -> boundary_length1		1077355	2					
ANR	1077520	UnaryOperator	&		1077355	0					
ANR	1077521	PtrMemberAccess	hint -> boundary_length1		1077355	1					
ANR	1077522	Identifier	hint		1077355	0					
ANR	1077523	Identifier	boundary_length1		1077355	1					
ANR	1077524	ConditionalExpression	hint -> type == hstem ? any_abs ( self -> pole [ i0 ] . gx - self -> pole [ i1 ] . gx ) : any_abs ( self -> pole [ i0 ] . gy - self -> pole [ i1 ] . gy )		1077355	1					
ANR	1077525	Condition	hint -> type == hstem		1077355	0					
ANR	1077526	EqualityExpression	hint -> type == hstem		1077355	0		==			
ANR	1077527	PtrMemberAccess	hint -> type		1077355	0					
ANR	1077528	Identifier	hint		1077355	0					
ANR	1077529	Identifier	type		1077355	1					
ANR	1077530	Identifier	hstem		1077355	1					
ANR	1077531	CallExpression	any_abs ( self -> pole [ i0 ] . gx - self -> pole [ i1 ] . gx )		1077355	1					
ANR	1077532	Callee	any_abs		1077355	0					
ANR	1077533	Identifier	any_abs		1077355	0					
ANR	1077534	ArgumentList	self -> pole [ i0 ] . gx - self -> pole [ i1 ] . gx		1077355	1					
ANR	1077535	Argument	self -> pole [ i0 ] . gx - self -> pole [ i1 ] . gx		1077355	0					
ANR	1077536	AdditiveExpression	self -> pole [ i0 ] . gx - self -> pole [ i1 ] . gx		1077355	0		-			
ANR	1077537	MemberAccess	self -> pole [ i0 ] . gx		1077355	0					
ANR	1077538	ArrayIndexing	self -> pole [ i0 ]		1077355	0					
ANR	1077539	PtrMemberAccess	self -> pole		1077355	0					
ANR	1077540	Identifier	self		1077355	0					
ANR	1077541	Identifier	pole		1077355	1					
ANR	1077542	Identifier	i0		1077355	1					
ANR	1077543	Identifier	gx		1077355	1					
ANR	1077544	MemberAccess	self -> pole [ i1 ] . gx		1077355	1					
ANR	1077545	ArrayIndexing	self -> pole [ i1 ]		1077355	0					
ANR	1077546	PtrMemberAccess	self -> pole		1077355	0					
ANR	1077547	Identifier	self		1077355	0					
ANR	1077548	Identifier	pole		1077355	1					
ANR	1077549	Identifier	i1		1077355	1					
ANR	1077550	Identifier	gx		1077355	1					
ANR	1077551	CallExpression	any_abs ( self -> pole [ i0 ] . gy - self -> pole [ i1 ] . gy )		1077355	2					
ANR	1077552	Callee	any_abs		1077355	0					
ANR	1077553	Identifier	any_abs		1077355	0					
ANR	1077554	ArgumentList	self -> pole [ i0 ] . gy - self -> pole [ i1 ] . gy		1077355	1					
ANR	1077555	Argument	self -> pole [ i0 ] . gy - self -> pole [ i1 ] . gy		1077355	0					
ANR	1077556	AdditiveExpression	self -> pole [ i0 ] . gy - self -> pole [ i1 ] . gy		1077355	0		-			
ANR	1077557	MemberAccess	self -> pole [ i0 ] . gy		1077355	0					
ANR	1077558	ArrayIndexing	self -> pole [ i0 ]		1077355	0					
ANR	1077559	PtrMemberAccess	self -> pole		1077355	0					
ANR	1077560	Identifier	self		1077355	0					
ANR	1077561	Identifier	pole		1077355	1					
ANR	1077562	Identifier	i0		1077355	1					
ANR	1077563	Identifier	gy		1077355	1					
ANR	1077564	MemberAccess	self -> pole [ i1 ] . gy		1077355	1					
ANR	1077565	ArrayIndexing	self -> pole [ i1 ]		1077355	0					
ANR	1077566	PtrMemberAccess	self -> pole		1077355	0					
ANR	1077567	Identifier	self		1077355	0					
ANR	1077568	Identifier	pole		1077355	1					
ANR	1077569	Identifier	i1		1077355	1					
ANR	1077570	Identifier	gy		1077355	1					
ANR	1077571	ReturnType	static void		1077355	1					
ANR	1077572	Identifier	t1_hinter__add_boundary_length		1077355	2					
ANR	1077573	ParameterList	"t1_hinter * self , t1_hint * hint , int pole_index0 , int pole_index1"		1077355	3					
ANR	1077574	Parameter	t1_hinter * self	2192:43:89480:89495	1077355	0	True				
ANR	1077575	ParameterType	t1_hinter *		1077355	0					
ANR	1077576	Identifier	self		1077355	1					
ANR	1077577	Parameter	t1_hint * hint	2192:61:89498:89510	1077355	1	True				
ANR	1077578	ParameterType	t1_hint *		1077355	0					
ANR	1077579	Identifier	hint		1077355	1					
ANR	1077580	Parameter	int pole_index0	2193:44:89557:89571	1077355	2	True				
ANR	1077581	ParameterType	int		1077355	0					
ANR	1077582	Identifier	pole_index0		1077355	1					
ANR	1077583	Parameter	int pole_index1	2193:61:89574:89588	1077355	3	True				
ANR	1077584	ParameterType	int		1077355	0					
ANR	1077585	Identifier	pole_index1		1077355	1					
ANR	1077586	CFGEntryNode	ENTRY		1077355		True				
ANR	1077587	CFGExitNode	EXIT		1077355		True				
ANR	1077588	Symbol	self -> pole [ i0 ] . type		1077355						
ANR	1077589	Symbol	oncurve		1077355						
ANR	1077590	Symbol	* self -> pole		1077355						
ANR	1077591	Symbol	* ( any_abs ( hint -> g0 - g ) < any_abs ( hint -> g1 - g ) ? & hint -> boundary_length0 : & hint -> boundary_length1 )		1077355						
ANR	1077592	Symbol	pole -> gy		1077355						
ANR	1077593	Symbol	pole -> gx		1077355						
ANR	1077594	Symbol	pole		1077355						
ANR	1077595	Symbol	self -> pole [ i0 ] . gx		1077355						
ANR	1077596	Symbol	* pole		1077355						
ANR	1077597	Symbol	* i1		1077355						
ANR	1077598	Symbol	hint -> g1		1077355						
ANR	1077599	Symbol	* i0		1077355						
ANR	1077600	Symbol	* any_abs		1077355						
ANR	1077601	Symbol	self -> pole [ i1 ] . gx		1077355						
ANR	1077602	Symbol	self -> pole [ i0 ] . gy		1077355						
ANR	1077603	Symbol	self -> pole [ i1 ] . gy		1077355						
ANR	1077604	Symbol	pole -> contour_index		1077355						
ANR	1077605	Symbol	any_abs		1077355						
ANR	1077606	Symbol	self -> pole		1077355						
ANR	1077607	Symbol	contour_index		1077355						
ANR	1077608	Symbol	beg_contour_pole		1077355						
ANR	1077609	Symbol	* contour_index		1077355						
ANR	1077610	Symbol	hint -> type		1077355						
ANR	1077611	Symbol	hstem		1077355						
ANR	1077612	Symbol	* self -> contour		1077355						
ANR	1077613	Symbol	ranger_step_f		1077355						
ANR	1077614	Symbol	* hint		1077355						
ANR	1077615	Symbol	* * self		1077355						
ANR	1077616	Symbol	* self		1077355						
ANR	1077617	Symbol	ranger_step_b		1077355						
ANR	1077618	Symbol	i0		1077355						
ANR	1077619	Symbol	g		1077355						
ANR	1077620	Symbol	i1		1077355						
ANR	1077621	Symbol	hint -> boundary_length0		1077355						
ANR	1077622	Symbol	& hint -> boundary_length1		1077355						
ANR	1077623	Symbol	self -> pole [ i1 ] . type		1077355						
ANR	1077624	Symbol	& hint -> boundary_length0		1077355						
ANR	1077625	Symbol	hint -> boundary_length1		1077355						
ANR	1077626	Symbol	pole_index0		1077355						
ANR	1077627	Symbol	self -> contour		1077355						
ANR	1077628	Symbol	hint -> g0		1077355						
ANR	1077629	Symbol	pole_index1		1077355						
ANR	1077630	Symbol	end_contour_pole		1077355						
ANR	1077631	Symbol	hint		1077355						
ANR	1077632	Symbol	self		1077355						
ANR	1077633	Function	t1_hinter__align_stem_commands	2211:0:90443:93724							
ANR	1077634	FunctionDef	t1_hinter__align_stem_commands (t1_hinter * self)		1077633	0					
ANR	1077635	CompoundStatement		2212:0:90504:93724	1077633	0					
ANR	1077636	IdentifierDeclStatement	"int i , j , jj , k ;"	2212:3:90508:90523	1077633	0	True				
ANR	1077637	IdentifierDecl	i		1077633	0					
ANR	1077638	IdentifierDeclType	int		1077633	0					
ANR	1077639	Identifier	i		1077633	1					
ANR	1077640	IdentifierDecl	j		1077633	1					
ANR	1077641	IdentifierDeclType	int		1077633	0					
ANR	1077642	Identifier	j		1077633	1					
ANR	1077643	IdentifierDecl	jj		1077633	2					
ANR	1077644	IdentifierDeclType	int		1077633	0					
ANR	1077645	Identifier	jj		1077633	1					
ANR	1077646	IdentifierDecl	k		1077633	3					
ANR	1077647	IdentifierDeclType	int		1077633	0					
ANR	1077648	Identifier	k		1077633	1					
ANR	1077649	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		1077633	1					
ANR	1077650	ForInit	i = 0 ;	2214:8:90534:90539	1077633	0	True				
ANR	1077651	AssignmentExpression	i = 0		1077633	0		=			
ANR	1077652	Identifier	i		1077633	0					
ANR	1077653	PrimaryExpression	0		1077633	1					
ANR	1077654	Condition	i < self -> hint_count	2214:15:90541:90560	1077633	1	True				
ANR	1077655	RelationalExpression	i < self -> hint_count		1077633	0		<			
ANR	1077656	Identifier	i		1077633	0					
ANR	1077657	PtrMemberAccess	self -> hint_count		1077633	1					
ANR	1077658	Identifier	self		1077633	0					
ANR	1077659	Identifier	hint_count		1077633	1					
ANR	1077660	PostIncDecOperationExpression	i ++	2214:37:90563:90565	1077633	2	True				
ANR	1077661	Identifier	i		1077633	0					
ANR	1077662	IncDec	++		1077633	1					
ANR	1077663	CompoundStatement		3:42:63:63	1077633	3					
ANR	1077664	ExpressionStatement	self -> hint [ i ] . boundary_length0 = self -> hint [ i ] . boundary_length1 = 0	2215:8:90578:90645	1077633	0	True				
ANR	1077665	AssignmentExpression	self -> hint [ i ] . boundary_length0 = self -> hint [ i ] . boundary_length1 = 0		1077633	0		=			
ANR	1077666	MemberAccess	self -> hint [ i ] . boundary_length0		1077633	0					
ANR	1077667	ArrayIndexing	self -> hint [ i ]		1077633	0					
ANR	1077668	PtrMemberAccess	self -> hint		1077633	0					
ANR	1077669	Identifier	self		1077633	0					
ANR	1077670	Identifier	hint		1077633	1					
ANR	1077671	Identifier	i		1077633	1					
ANR	1077672	Identifier	boundary_length0		1077633	1					
ANR	1077673	AssignmentExpression	self -> hint [ i ] . boundary_length1 = 0		1077633	1		=			
ANR	1077674	MemberAccess	self -> hint [ i ] . boundary_length1		1077633	0					
ANR	1077675	ArrayIndexing	self -> hint [ i ]		1077633	0					
ANR	1077676	PtrMemberAccess	self -> hint		1077633	0					
ANR	1077677	Identifier	self		1077633	0					
ANR	1077678	Identifier	hint		1077633	1					
ANR	1077679	Identifier	i		1077633	1					
ANR	1077680	Identifier	boundary_length1		1077633	1					
ANR	1077681	PrimaryExpression	0		1077633	1					
ANR	1077682	IfStatement	if ( self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem )		1077633	1					
ANR	1077683	Condition	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem	2216:12:90659:90716	1077633	0	True				
ANR	1077684	OrExpression	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem		1077633	0		||			
ANR	1077685	EqualityExpression	self -> hint [ i ] . type == vstem		1077633	0		==			
ANR	1077686	MemberAccess	self -> hint [ i ] . type		1077633	0					
ANR	1077687	ArrayIndexing	self -> hint [ i ]		1077633	0					
ANR	1077688	PtrMemberAccess	self -> hint		1077633	0					
ANR	1077689	Identifier	self		1077633	0					
ANR	1077690	Identifier	hint		1077633	1					
ANR	1077691	Identifier	i		1077633	1					
ANR	1077692	Identifier	type		1077633	1					
ANR	1077693	Identifier	vstem		1077633	1					
ANR	1077694	EqualityExpression	self -> hint [ i ] . type == hstem		1077633	1		==			
ANR	1077695	MemberAccess	self -> hint [ i ] . type		1077633	0					
ANR	1077696	ArrayIndexing	self -> hint [ i ]		1077633	0					
ANR	1077697	PtrMemberAccess	self -> hint		1077633	0					
ANR	1077698	Identifier	self		1077633	0					
ANR	1077699	Identifier	hint		1077633	1					
ANR	1077700	Identifier	i		1077633	1					
ANR	1077701	Identifier	type		1077633	1					
ANR	1077702	Identifier	hstem		1077633	1					
ANR	1077703	ForStatement	for ( k = self -> hint [ i ] . range_index ; k != - 1 ; k = self -> hint_range [ k ] . next )		1077633	1					
ANR	1077704	ForInit	k = self -> hint [ i ] . range_index ;	2217:17:90736:90765	1077633	0	True				
ANR	1077705	AssignmentExpression	k = self -> hint [ i ] . range_index		1077633	0		=			
ANR	1077706	Identifier	k		1077633	0					
ANR	1077707	MemberAccess	self -> hint [ i ] . range_index		1077633	1					
ANR	1077708	ArrayIndexing	self -> hint [ i ]		1077633	0					
ANR	1077709	PtrMemberAccess	self -> hint		1077633	0					
ANR	1077710	Identifier	self		1077633	0					
ANR	1077711	Identifier	hint		1077633	1					
ANR	1077712	Identifier	i		1077633	1					
ANR	1077713	Identifier	range_index		1077633	1					
ANR	1077714	Condition	k != - 1	2217:48:90767:90773	1077633	1	True				
ANR	1077715	EqualityExpression	k != - 1		1077633	0		!=			
ANR	1077716	Identifier	k		1077633	0					
ANR	1077717	UnaryOperationExpression	- 1		1077633	1					
ANR	1077718	UnaryOperator	-		1077633	0					
ANR	1077719	PrimaryExpression	1		1077633	1					
ANR	1077720	AssignmentExpression	k = self -> hint_range [ k ] . next	2217:57:90776:90803	1077633	2	True	=			
ANR	1077721	Identifier	k		1077633	0					
ANR	1077722	MemberAccess	self -> hint_range [ k ] . next		1077633	1					
ANR	1077723	ArrayIndexing	self -> hint_range [ k ]		1077633	0					
ANR	1077724	PtrMemberAccess	self -> hint_range		1077633	0					
ANR	1077725	Identifier	self		1077633	0					
ANR	1077726	Identifier	hint_range		1077633	1					
ANR	1077727	Identifier	k		1077633	1					
ANR	1077728	Identifier	next		1077633	1					
ANR	1077729	CompoundStatement		10:16:513:534	1077633	3					
ANR	1077730	IdentifierDeclStatement	int beg_range_pole = self -> hint_range [ k ] . beg_pole ;	2218:16:90824:90873	1077633	0	True				
ANR	1077731	IdentifierDecl	beg_range_pole = self -> hint_range [ k ] . beg_pole		1077633	0					
ANR	1077732	IdentifierDeclType	int		1077633	0					
ANR	1077733	Identifier	beg_range_pole		1077633	1					
ANR	1077734	AssignmentExpression	beg_range_pole = self -> hint_range [ k ] . beg_pole		1077633	2		=			
ANR	1077735	Identifier	beg_range_pole		1077633	0					
ANR	1077736	MemberAccess	self -> hint_range [ k ] . beg_pole		1077633	1					
ANR	1077737	ArrayIndexing	self -> hint_range [ k ]		1077633	0					
ANR	1077738	PtrMemberAccess	self -> hint_range		1077633	0					
ANR	1077739	Identifier	self		1077633	0					
ANR	1077740	Identifier	hint_range		1077633	1					
ANR	1077741	Identifier	k		1077633	1					
ANR	1077742	Identifier	beg_pole		1077633	1					
ANR	1077743	IdentifierDeclStatement	int end_range_pole = self -> hint_range [ k ] . end_pole ;	2219:16:90891:90940	1077633	1	True				
ANR	1077744	IdentifierDecl	end_range_pole = self -> hint_range [ k ] . end_pole		1077633	0					
ANR	1077745	IdentifierDeclType	int		1077633	0					
ANR	1077746	Identifier	end_range_pole		1077633	1					
ANR	1077747	AssignmentExpression	end_range_pole = self -> hint_range [ k ] . end_pole		1077633	2		=			
ANR	1077748	Identifier	end_range_pole		1077633	0					
ANR	1077749	MemberAccess	self -> hint_range [ k ] . end_pole		1077633	1					
ANR	1077750	ArrayIndexing	self -> hint_range [ k ]		1077633	0					
ANR	1077751	PtrMemberAccess	self -> hint_range		1077633	0					
ANR	1077752	Identifier	self		1077633	0					
ANR	1077753	Identifier	hint_range		1077633	1					
ANR	1077754	Identifier	k		1077633	1					
ANR	1077755	Identifier	end_pole		1077633	1					
ANR	1077756	IdentifierDeclStatement	bool horiz = ( self -> hint [ i ] . type == hstem ) ;	2220:16:90958:91000	1077633	2	True				
ANR	1077757	IdentifierDecl	horiz = ( self -> hint [ i ] . type == hstem )		1077633	0					
ANR	1077758	IdentifierDeclType	bool		1077633	0					
ANR	1077759	Identifier	horiz		1077633	1					
ANR	1077760	AssignmentExpression	horiz = ( self -> hint [ i ] . type == hstem )		1077633	2		=			
ANR	1077761	Identifier	horiz		1077633	0					
ANR	1077762	EqualityExpression	self -> hint [ i ] . type == hstem		1077633	1		==			
ANR	1077763	MemberAccess	self -> hint [ i ] . type		1077633	0					
ANR	1077764	ArrayIndexing	self -> hint [ i ]		1077633	0					
ANR	1077765	PtrMemberAccess	self -> hint		1077633	0					
ANR	1077766	Identifier	self		1077633	0					
ANR	1077767	Identifier	hint		1077633	1					
ANR	1077768	Identifier	i		1077633	1					
ANR	1077769	Identifier	type		1077633	1					
ANR	1077770	Identifier	hstem		1077633	1					
ANR	1077771	IdentifierDeclStatement	int quality = max_int ;	2221:16:91018:91039	1077633	3	True				
ANR	1077772	IdentifierDecl	quality = max_int		1077633	0					
ANR	1077773	IdentifierDeclType	int		1077633	0					
ANR	1077774	Identifier	quality		1077633	1					
ANR	1077775	AssignmentExpression	quality = max_int		1077633	2		=			
ANR	1077776	Identifier	max_int		1077633	0					
ANR	1077777	Identifier	max_int		1077633	1					
ANR	1077778	IfStatement	if ( self -> pole [ beg_range_pole ] . type == closepath )		1077633	4					
ANR	1077779	Condition	self -> pole [ beg_range_pole ] . type == closepath	2223:20:91062:91105	1077633	0	True				
ANR	1077780	EqualityExpression	self -> pole [ beg_range_pole ] . type == closepath		1077633	0		==			
ANR	1077781	MemberAccess	self -> pole [ beg_range_pole ] . type		1077633	0					
ANR	1077782	ArrayIndexing	self -> pole [ beg_range_pole ]		1077633	0					
ANR	1077783	PtrMemberAccess	self -> pole		1077633	0					
ANR	1077784	Identifier	self		1077633	0					
ANR	1077785	Identifier	pole		1077633	1					
ANR	1077786	Identifier	beg_range_pole		1077633	1					
ANR	1077787	Identifier	type		1077633	1					
ANR	1077788	Identifier	closepath		1077633	1					
ANR	1077789	CompoundStatement		12:66:603:603	1077633	1					
ANR	1077790	ExpressionStatement	beg_range_pole ++	2226:20:91275:91291	1077633	0	True				
ANR	1077791	PostIncDecOperationExpression	beg_range_pole ++		1077633	0					
ANR	1077792	Identifier	beg_range_pole		1077633	0					
ANR	1077793	IncDec	++		1077633	1					
ANR	1077794	IfStatement	if ( beg_range_pole > end_range_pole )		1077633	1					
ANR	1077795	Condition	beg_range_pole > end_range_pole	2227:24:91317:91347	1077633	0	True				
ANR	1077796	RelationalExpression	beg_range_pole > end_range_pole		1077633	0		>			
ANR	1077797	Identifier	beg_range_pole		1077633	0					
ANR	1077798	Identifier	end_range_pole		1077633	1					
ANR	1077799	ContinueStatement	continue ;	2228:24:91374:91382	1077633	1	True				
ANR	1077800	ForStatement	for ( j = beg_range_pole ; j <= end_range_pole ; )		1077633	5					
ANR	1077801	ForInit	j = beg_range_pole ;	2230:21:91423:91441	1077633	0	True				
ANR	1077802	AssignmentExpression	j = beg_range_pole		1077633	0		=			
ANR	1077803	Identifier	j		1077633	0					
ANR	1077804	Identifier	beg_range_pole		1077633	1					
ANR	1077805	Condition	j <= end_range_pole	2230:41:91443:91461	1077633	1	True				
ANR	1077806	RelationalExpression	j <= end_range_pole		1077633	0		<=			
ANR	1077807	Identifier	j		1077633	0					
ANR	1077808	Identifier	end_range_pole		1077633	1					
ANR	1077809	CompoundStatement		19:63:960:960	1077633	2					
ANR	1077810	IfStatement	if ( self -> pole [ j ] . type == closepath )		1077633	0					
ANR	1077811	Condition	self -> pole [ j ] . type == closepath	2231:24:91491:91521	1077633	0	True				
ANR	1077812	EqualityExpression	self -> pole [ j ] . type == closepath		1077633	0		==			
ANR	1077813	MemberAccess	self -> pole [ j ] . type		1077633	0					
ANR	1077814	ArrayIndexing	self -> pole [ j ]		1077633	0					
ANR	1077815	PtrMemberAccess	self -> pole		1077633	0					
ANR	1077816	Identifier	self		1077633	0					
ANR	1077817	Identifier	pole		1077633	1					
ANR	1077818	Identifier	j		1077633	1					
ANR	1077819	Identifier	type		1077633	1					
ANR	1077820	Identifier	closepath		1077633	1					
ANR	1077821	CompoundStatement		20:57:1019:1019	1077633	1					
ANR	1077822	ExpressionStatement	j ++	2232:24:91550:91553	1077633	0	True				
ANR	1077823	PostIncDecOperationExpression	j ++		1077633	0					
ANR	1077824	Identifier	j		1077633	0					
ANR	1077825	IncDec	++		1077633	1					
ANR	1077826	ContinueStatement	continue ;	2233:24:91579:91587	1077633	1	True				
ANR	1077827	IfStatement	"if ( t1_hinter__is_stem_hint_applicable ( self , & self -> hint [ i ] , j , & quality ) )"		1077633	1					
ANR	1077828	Condition	"t1_hinter__is_stem_hint_applicable ( self , & self -> hint [ i ] , j , & quality )"	2235:24:91635:91703	1077633	0	True				
ANR	1077829	CallExpression	"t1_hinter__is_stem_hint_applicable ( self , & self -> hint [ i ] , j , & quality )"		1077633	0					
ANR	1077830	Callee	t1_hinter__is_stem_hint_applicable		1077633	0					
ANR	1077831	Identifier	t1_hinter__is_stem_hint_applicable		1077633	0					
ANR	1077832	ArgumentList	self		1077633	1					
ANR	1077833	Argument	self		1077633	0					
ANR	1077834	Identifier	self		1077633	0					
ANR	1077835	Argument	& self -> hint [ i ]		1077633	1					
ANR	1077836	UnaryOperationExpression	& self -> hint [ i ]		1077633	0					
ANR	1077837	UnaryOperator	&		1077633	0					
ANR	1077838	ArrayIndexing	self -> hint [ i ]		1077633	1					
ANR	1077839	PtrMemberAccess	self -> hint		1077633	0					
ANR	1077840	Identifier	self		1077633	0					
ANR	1077841	Identifier	hint		1077633	1					
ANR	1077842	Identifier	i		1077633	1					
ANR	1077843	Argument	j		1077633	2					
ANR	1077844	Identifier	j		1077633	0					
ANR	1077845	Argument	& quality		1077633	3					
ANR	1077846	UnaryOperationExpression	& quality		1077633	0					
ANR	1077847	UnaryOperator	&		1077633	0					
ANR	1077848	Identifier	quality		1077633	1					
ANR	1077849	CompoundStatement		28:24:1466:1502	1077633	1					
ANR	1077850	IdentifierDeclStatement	fixed t ;	2236:24:91732:91739	1077633	0	True				
ANR	1077851	IdentifierDecl	t		1077633	0					
ANR	1077852	IdentifierDeclType	fixed		1077633	0					
ANR	1077853	Identifier	t		1077633	1					
ANR	1077854	IdentifierDeclStatement	"int segment_index = t1_hinter__find_stem_middle ( self , & t , j , horiz ) ;"	2237:24:91829:91896	1077633	1	True				
ANR	1077855	IdentifierDecl	"segment_index = t1_hinter__find_stem_middle ( self , & t , j , horiz )"		1077633	0					
ANR	1077856	IdentifierDeclType	int		1077633	0					
ANR	1077857	Identifier	segment_index		1077633	1					
ANR	1077858	AssignmentExpression	"segment_index = t1_hinter__find_stem_middle ( self , & t , j , horiz )"		1077633	2		=			
ANR	1077859	Identifier	segment_index		1077633	0					
ANR	1077860	CallExpression	"t1_hinter__find_stem_middle ( self , & t , j , horiz )"		1077633	1					
ANR	1077861	Callee	t1_hinter__find_stem_middle		1077633	0					
ANR	1077862	Identifier	t1_hinter__find_stem_middle		1077633	0					
ANR	1077863	ArgumentList	self		1077633	1					
ANR	1077864	Argument	self		1077633	0					
ANR	1077865	Identifier	self		1077633	0					
ANR	1077866	Argument	& t		1077633	1					
ANR	1077867	UnaryOperationExpression	& t		1077633	0					
ANR	1077868	UnaryOperator	&		1077633	0					
ANR	1077869	Identifier	t		1077633	1					
ANR	1077870	Argument	j		1077633	2					
ANR	1077871	Identifier	j		1077633	0					
ANR	1077872	Argument	horiz		1077633	3					
ANR	1077873	Identifier	horiz		1077633	0					
ANR	1077874	IdentifierDeclStatement	t1_glyph_space_coord gc ;	2238:24:91922:91945	1077633	2	True				
ANR	1077875	IdentifierDecl	gc		1077633	0					
ANR	1077876	IdentifierDeclType	t1_glyph_space_coord		1077633	0					
ANR	1077877	Identifier	gc		1077633	1					
ANR	1077878	IdentifierDeclStatement	enum t1_align_type align = unaligned ;	2239:24:91971:92007	1077633	3	True				
ANR	1077879	IdentifierDecl	align = unaligned		1077633	0					
ANR	1077880	IdentifierDeclType	enum t1_align_type		1077633	0					
ANR	1077881	Identifier	align		1077633	1					
ANR	1077882	AssignmentExpression	align = unaligned		1077633	2		=			
ANR	1077883	Identifier	unaligned		1077633	0					
ANR	1077884	Identifier	unaligned		1077633	1					
ANR	1077885	IfStatement	if ( self -> hint [ i ] . side_mask != 3 )		1077633	4					
ANR	1077886	Condition	self -> hint [ i ] . side_mask != 3	2241:28:92038:92065	1077633	0	True				
ANR	1077887	EqualityExpression	self -> hint [ i ] . side_mask != 3		1077633	0		!=			
ANR	1077888	MemberAccess	self -> hint [ i ] . side_mask		1077633	0					
ANR	1077889	ArrayIndexing	self -> hint [ i ]		1077633	0					
ANR	1077890	PtrMemberAccess	self -> hint		1077633	0					
ANR	1077891	Identifier	self		1077633	0					
ANR	1077892	Identifier	hint		1077633	1					
ANR	1077893	Identifier	i		1077633	1					
ANR	1077894	Identifier	side_mask		1077633	1					
ANR	1077895	PrimaryExpression	3		1077633	1					
ANR	1077896	CompoundStatement		30:58:1563:1563	1077633	1					
ANR	1077897	ExpressionStatement	align = ( self -> hint [ i ] . side_mask & 2 ? topzn : botzn )	2243:28:92178:92231	1077633	0	True				
ANR	1077898	AssignmentExpression	align = ( self -> hint [ i ] . side_mask & 2 ? topzn : botzn )		1077633	0		=			
ANR	1077899	Identifier	align		1077633	0					
ANR	1077900	ConditionalExpression	self -> hint [ i ] . side_mask & 2 ? topzn : botzn		1077633	1					
ANR	1077901	Condition	self -> hint [ i ] . side_mask & 2		1077633	0					
ANR	1077902	BitAndExpression	self -> hint [ i ] . side_mask & 2		1077633	0		&			
ANR	1077903	MemberAccess	self -> hint [ i ] . side_mask		1077633	0					
ANR	1077904	ArrayIndexing	self -> hint [ i ]		1077633	0					
ANR	1077905	PtrMemberAccess	self -> hint		1077633	0					
ANR	1077906	Identifier	self		1077633	0					
ANR	1077907	Identifier	hint		1077633	1					
ANR	1077908	Identifier	i		1077633	1					
ANR	1077909	Identifier	side_mask		1077633	1					
ANR	1077910	PrimaryExpression	2		1077633	1					
ANR	1077911	Identifier	topzn		1077633	1					
ANR	1077912	Identifier	botzn		1077633	2					
ANR	1077913	ElseStatement	else		1077633	0					
ANR	1077914	IfStatement	if ( self -> autohinting && horiz )		1077633	0					
ANR	1077915	Condition	self -> autohinting && horiz	2244:35:92268:92293	1077633	0	True				
ANR	1077916	AndExpression	self -> autohinting && horiz		1077633	0		&&			
ANR	1077917	PtrMemberAccess	self -> autohinting		1077633	0					
ANR	1077918	Identifier	self		1077633	0					
ANR	1077919	Identifier	autohinting		1077633	1					
ANR	1077920	Identifier	horiz		1077633	1					
ANR	1077921	CompoundStatement		33:63:1791:1791	1077633	1					
ANR	1077922	IfStatement	if ( self -> pole [ segment_index ] . gy == self -> hint [ i ] . g0 )		1077633	0					
ANR	1077923	Condition	self -> pole [ segment_index ] . gy == self -> hint [ i ] . g0	2245:32:92330:92377	1077633	0	True				
ANR	1077924	EqualityExpression	self -> pole [ segment_index ] . gy == self -> hint [ i ] . g0		1077633	0		==			
ANR	1077925	MemberAccess	self -> pole [ segment_index ] . gy		1077633	0					
ANR	1077926	ArrayIndexing	self -> pole [ segment_index ]		1077633	0					
ANR	1077927	PtrMemberAccess	self -> pole		1077633	0					
ANR	1077928	Identifier	self		1077633	0					
ANR	1077929	Identifier	pole		1077633	1					
ANR	1077930	Identifier	segment_index		1077633	1					
ANR	1077931	Identifier	gy		1077633	1					
ANR	1077932	MemberAccess	self -> hint [ i ] . g0		1077633	1					
ANR	1077933	ArrayIndexing	self -> hint [ i ]		1077633	0					
ANR	1077934	PtrMemberAccess	self -> hint		1077633	0					
ANR	1077935	Identifier	self		1077633	0					
ANR	1077936	Identifier	hint		1077633	1					
ANR	1077937	Identifier	i		1077633	1					
ANR	1077938	Identifier	g0		1077633	1					
ANR	1077939	ExpressionStatement	align = ( self -> hint [ i ] . g0 > self -> hint [ i ] . g1 ? topzn : botzn )	2246:32:92412:92473	1077633	1	True				
ANR	1077940	AssignmentExpression	align = ( self -> hint [ i ] . g0 > self -> hint [ i ] . g1 ? topzn : botzn )		1077633	0		=			
ANR	1077941	Identifier	align		1077633	0					
ANR	1077942	ConditionalExpression	self -> hint [ i ] . g0 > self -> hint [ i ] . g1 ? topzn : botzn		1077633	1					
ANR	1077943	Condition	self -> hint [ i ] . g0 > self -> hint [ i ] . g1		1077633	0					
ANR	1077944	RelationalExpression	self -> hint [ i ] . g0 > self -> hint [ i ] . g1		1077633	0		>			
ANR	1077945	MemberAccess	self -> hint [ i ] . g0		1077633	0					
ANR	1077946	ArrayIndexing	self -> hint [ i ]		1077633	0					
ANR	1077947	PtrMemberAccess	self -> hint		1077633	0					
ANR	1077948	Identifier	self		1077633	0					
ANR	1077949	Identifier	hint		1077633	1					
ANR	1077950	Identifier	i		1077633	1					
ANR	1077951	Identifier	g0		1077633	1					
ANR	1077952	MemberAccess	self -> hint [ i ] . g1		1077633	1					
ANR	1077953	ArrayIndexing	self -> hint [ i ]		1077633	0					
ANR	1077954	PtrMemberAccess	self -> hint		1077633	0					
ANR	1077955	Identifier	self		1077633	0					
ANR	1077956	Identifier	hint		1077633	1					
ANR	1077957	Identifier	i		1077633	1					
ANR	1077958	Identifier	g1		1077633	1					
ANR	1077959	Identifier	topzn		1077633	1					
ANR	1077960	Identifier	botzn		1077633	2					
ANR	1077961	ExpressionStatement	"align = t1_hinter__compute_aligned_coord ( self , & gc , segment_index , t , & self -> hint [ i ] , align )"	2248:24:92525:92653	1077633	5	True				
ANR	1077962	AssignmentExpression	"align = t1_hinter__compute_aligned_coord ( self , & gc , segment_index , t , & self -> hint [ i ] , align )"		1077633	0		=			
ANR	1077963	Identifier	align		1077633	0					
ANR	1077964	CallExpression	"t1_hinter__compute_aligned_coord ( self , & gc , segment_index , t , & self -> hint [ i ] , align )"		1077633	1					
ANR	1077965	Callee	t1_hinter__compute_aligned_coord		1077633	0					
ANR	1077966	Identifier	t1_hinter__compute_aligned_coord		1077633	0					
ANR	1077967	ArgumentList	self		1077633	1					
ANR	1077968	Argument	self		1077633	0					
ANR	1077969	Identifier	self		1077633	0					
ANR	1077970	Argument	& gc		1077633	1					
ANR	1077971	UnaryOperationExpression	& gc		1077633	0					
ANR	1077972	UnaryOperator	&		1077633	0					
ANR	1077973	Identifier	gc		1077633	1					
ANR	1077974	Argument	segment_index		1077633	2					
ANR	1077975	Identifier	segment_index		1077633	0					
ANR	1077976	Argument	t		1077633	3					
ANR	1077977	Identifier	t		1077633	0					
ANR	1077978	Argument	& self -> hint [ i ]		1077633	4					
ANR	1077979	UnaryOperationExpression	& self -> hint [ i ]		1077633	0					
ANR	1077980	UnaryOperator	&		1077633	0					
ANR	1077981	ArrayIndexing	self -> hint [ i ]		1077633	1					
ANR	1077982	PtrMemberAccess	self -> hint		1077633	0					
ANR	1077983	Identifier	self		1077633	0					
ANR	1077984	Identifier	hint		1077633	1					
ANR	1077985	Identifier	i		1077633	1					
ANR	1077986	Argument	align		1077633	5					
ANR	1077987	Identifier	align		1077633	0					
ANR	1077988	ExpressionStatement	"t1_hint__set_aligned_coord ( & self -> hint [ i ] , gc , & self -> pole [ j ] , align , quality )"	2251:24:92796:92874	1077633	6	True				
ANR	1077989	CallExpression	"t1_hint__set_aligned_coord ( & self -> hint [ i ] , gc , & self -> pole [ j ] , align , quality )"		1077633	0					
ANR	1077990	Callee	t1_hint__set_aligned_coord		1077633	0					
ANR	1077991	Identifier	t1_hint__set_aligned_coord		1077633	0					
ANR	1077992	ArgumentList	& self -> hint [ i ]		1077633	1					
ANR	1077993	Argument	& self -> hint [ i ]		1077633	0					
ANR	1077994	UnaryOperationExpression	& self -> hint [ i ]		1077633	0					
ANR	1077995	UnaryOperator	&		1077633	0					
ANR	1077996	ArrayIndexing	self -> hint [ i ]		1077633	1					
ANR	1077997	PtrMemberAccess	self -> hint		1077633	0					
ANR	1077998	Identifier	self		1077633	0					
ANR	1077999	Identifier	hint		1077633	1					
ANR	1078000	Identifier	i		1077633	1					
ANR	1078001	Argument	gc		1077633	1					
ANR	1078002	Identifier	gc		1077633	0					
ANR	1078003	Argument	& self -> pole [ j ]		1077633	2					
ANR	1078004	UnaryOperationExpression	& self -> pole [ j ]		1077633	0					
ANR	1078005	UnaryOperator	&		1077633	0					
ANR	1078006	ArrayIndexing	self -> pole [ j ]		1077633	1					
ANR	1078007	PtrMemberAccess	self -> pole		1077633	0					
ANR	1078008	Identifier	self		1077633	0					
ANR	1078009	Identifier	pole		1077633	1					
ANR	1078010	Identifier	j		1077633	1					
ANR	1078011	Argument	align		1077633	3					
ANR	1078012	Identifier	align		1077633	0					
ANR	1078013	Argument	quality		1077633	4					
ANR	1078014	Identifier	quality		1077633	0					
ANR	1078015	ExpressionStatement	jj = j	2252:24:92900:92906	1077633	7	True				
ANR	1078016	AssignmentExpression	jj = j		1077633	0		=			
ANR	1078017	Identifier	jj		1077633	0					
ANR	1078018	Identifier	j		1077633	1					
ANR	1078019	ExpressionStatement	"j = t1_hinter__skip_stem ( self , j , horiz )"	2253:24:92932:92972	1077633	8	True				
ANR	1078020	AssignmentExpression	"j = t1_hinter__skip_stem ( self , j , horiz )"		1077633	0		=			
ANR	1078021	Identifier	j		1077633	0					
ANR	1078022	CallExpression	"t1_hinter__skip_stem ( self , j , horiz )"		1077633	1					
ANR	1078023	Callee	t1_hinter__skip_stem		1077633	0					
ANR	1078024	Identifier	t1_hinter__skip_stem		1077633	0					
ANR	1078025	ArgumentList	self		1077633	1					
ANR	1078026	Argument	self		1077633	0					
ANR	1078027	Identifier	self		1077633	0					
ANR	1078028	Argument	j		1077633	1					
ANR	1078029	Identifier	j		1077633	0					
ANR	1078030	Argument	horiz		1077633	2					
ANR	1078031	Identifier	horiz		1077633	0					
ANR	1078032	ExpressionStatement	"t1_hinter__add_boundary_length ( self , & self -> hint [ i ] , jj , j )"	2254:24:92998:93057	1077633	9	True				
ANR	1078033	CallExpression	"t1_hinter__add_boundary_length ( self , & self -> hint [ i ] , jj , j )"		1077633	0					
ANR	1078034	Callee	t1_hinter__add_boundary_length		1077633	0					
ANR	1078035	Identifier	t1_hinter__add_boundary_length		1077633	0					
ANR	1078036	ArgumentList	self		1077633	1					
ANR	1078037	Argument	self		1077633	0					
ANR	1078038	Identifier	self		1077633	0					
ANR	1078039	Argument	& self -> hint [ i ]		1077633	1					
ANR	1078040	UnaryOperationExpression	& self -> hint [ i ]		1077633	0					
ANR	1078041	UnaryOperator	&		1077633	0					
ANR	1078042	ArrayIndexing	self -> hint [ i ]		1077633	1					
ANR	1078043	PtrMemberAccess	self -> hint		1077633	0					
ANR	1078044	Identifier	self		1077633	0					
ANR	1078045	Identifier	hint		1077633	1					
ANR	1078046	Identifier	i		1077633	1					
ANR	1078047	Argument	jj		1077633	2					
ANR	1078048	Identifier	jj		1077633	0					
ANR	1078049	Argument	j		1077633	3					
ANR	1078050	Identifier	j		1077633	0					
ANR	1078051	IfStatement	if ( j < jj )		1077633	10					
ANR	1078052	Condition	j < jj	2255:28:93087:93092	1077633	0	True				
ANR	1078053	RelationalExpression	j < jj		1077633	0		<			
ANR	1078054	Identifier	j		1077633	0					
ANR	1078055	Identifier	jj		1077633	1					
ANR	1078056	CompoundStatement		44:36:2590:2590	1077633	1					
ANR	1078057	ExpressionStatement	j = self -> contour [ self -> pole [ j ] . contour_index + 1 ]	2256:28:93157:93207	1077633	0	True				
ANR	1078058	AssignmentExpression	j = self -> contour [ self -> pole [ j ] . contour_index + 1 ]		1077633	0		=			
ANR	1078059	Identifier	j		1077633	0					
ANR	1078060	ArrayIndexing	self -> contour [ self -> pole [ j ] . contour_index + 1 ]		1077633	1					
ANR	1078061	PtrMemberAccess	self -> contour		1077633	0					
ANR	1078062	Identifier	self		1077633	0					
ANR	1078063	Identifier	contour		1077633	1					
ANR	1078064	AdditiveExpression	self -> pole [ j ] . contour_index + 1		1077633	1		+			
ANR	1078065	MemberAccess	self -> pole [ j ] . contour_index		1077633	0					
ANR	1078066	ArrayIndexing	self -> pole [ j ]		1077633	0					
ANR	1078067	PtrMemberAccess	self -> pole		1077633	0					
ANR	1078068	Identifier	self		1077633	0					
ANR	1078069	Identifier	pole		1077633	1					
ANR	1078070	Identifier	j		1077633	1					
ANR	1078071	Identifier	contour_index		1077633	1					
ANR	1078072	PrimaryExpression	1		1077633	1					
ANR	1078073	ContinueStatement	continue ;	2257:28:93267:93275	1077633	1	True				
ANR	1078074	CompoundStatement		49:20:2840:2840	1077633	2					
ANR	1078075	ExpressionStatement	jj = j	2261:24:93416:93422	1077633	0	True				
ANR	1078076	AssignmentExpression	jj = j		1077633	0		=			
ANR	1078077	Identifier	jj		1077633	0					
ANR	1078078	Identifier	j		1077633	1					
ANR	1078079	ExpressionStatement	"j = t1_hinter__segment_end ( self , j )"	2262:24:93448:93483	1077633	1	True				
ANR	1078080	AssignmentExpression	"j = t1_hinter__segment_end ( self , j )"		1077633	0		=			
ANR	1078081	Identifier	j		1077633	0					
ANR	1078082	CallExpression	"t1_hinter__segment_end ( self , j )"		1077633	1					
ANR	1078083	Callee	t1_hinter__segment_end		1077633	0					
ANR	1078084	Identifier	t1_hinter__segment_end		1077633	0					
ANR	1078085	ArgumentList	self		1077633	1					
ANR	1078086	Argument	self		1077633	0					
ANR	1078087	Identifier	self		1077633	0					
ANR	1078088	Argument	j		1077633	1					
ANR	1078089	Identifier	j		1077633	0					
ANR	1078090	IfStatement	if ( j <= jj )		1077633	2					
ANR	1078091	Condition	j <= jj	2263:28:93513:93519	1077633	0	True				
ANR	1078092	RelationalExpression	j <= jj		1077633	0		<=			
ANR	1078093	Identifier	j		1077633	0					
ANR	1078094	Identifier	jj		1077633	1					
ANR	1078095	ExpressionStatement	j = self -> contour [ self -> pole [ j ] . contour_index + 1 ]	2264:28:93582:93632	1077633	1	True				
ANR	1078096	AssignmentExpression	j = self -> contour [ self -> pole [ j ] . contour_index + 1 ]		1077633	0		=			
ANR	1078097	Identifier	j		1077633	0					
ANR	1078098	ArrayIndexing	self -> contour [ self -> pole [ j ] . contour_index + 1 ]		1077633	1					
ANR	1078099	PtrMemberAccess	self -> contour		1077633	0					
ANR	1078100	Identifier	self		1077633	0					
ANR	1078101	Identifier	contour		1077633	1					
ANR	1078102	AdditiveExpression	self -> pole [ j ] . contour_index + 1		1077633	1		+			
ANR	1078103	MemberAccess	self -> pole [ j ] . contour_index		1077633	0					
ANR	1078104	ArrayIndexing	self -> pole [ j ]		1077633	0					
ANR	1078105	PtrMemberAccess	self -> pole		1077633	0					
ANR	1078106	Identifier	self		1077633	0					
ANR	1078107	Identifier	pole		1077633	1					
ANR	1078108	Identifier	j		1077633	1					
ANR	1078109	Identifier	contour_index		1077633	1					
ANR	1078110	PrimaryExpression	1		1077633	1					
ANR	1078111	ReturnType	static void		1077633	1					
ANR	1078112	Identifier	t1_hinter__align_stem_commands		1077633	2					
ANR	1078113	ParameterList	t1_hinter * self		1077633	3					
ANR	1078114	Parameter	t1_hinter * self	2211:43:90486:90501	1077633	0	True				
ANR	1078115	ParameterType	t1_hinter *		1077633	0					
ANR	1078116	Identifier	self		1077633	1					
ANR	1078117	CFGEntryNode	ENTRY		1077633		True				
ANR	1078118	CFGExitNode	EXIT		1077633		True				
ANR	1078119	Symbol	self -> hint_range [ k ] . next		1077633						
ANR	1078120	Symbol	end_range_pole		1077633						
ANR	1078121	Symbol	& gc		1077633						
ANR	1078122	Symbol	t1_hinter__compute_aligned_coord		1077633						
ANR	1078123	Symbol	vstem		1077633						
ANR	1078124	Symbol	self -> hint [ i ] . boundary_length0		1077633						
ANR	1078125	Symbol	align		1077633						
ANR	1078126	Symbol	self -> hint [ i ] . boundary_length1		1077633						
ANR	1078127	Symbol	* self -> hint		1077633						
ANR	1078128	Symbol	* * self -> pole		1077633						
ANR	1078129	Symbol	self -> hint [ i ] . side_mask		1077633						
ANR	1078130	Symbol	* * * self		1077633						
ANR	1078131	Symbol	& quality		1077633						
ANR	1078132	Symbol	segment_index		1077633						
ANR	1078133	Symbol	* * j		1077633						
ANR	1078134	Symbol	botzn		1077633						
ANR	1078135	Symbol	self -> pole [ segment_index ] . gy		1077633						
ANR	1078136	Symbol	* self		1077633						
ANR	1078137	Symbol	self -> hint [ i ] . g1		1077633						
ANR	1078138	Symbol	self -> hint [ i ] . g0		1077633						
ANR	1078139	Symbol	beg_range_pole		1077633						
ANR	1078140	Symbol	unaligned		1077633						
ANR	1078141	Symbol	quality		1077633						
ANR	1078142	Symbol	self -> pole [ j ] . type		1077633						
ANR	1078143	Symbol	self -> contour		1077633						
ANR	1078144	Symbol	jj		1077633						
ANR	1078145	Symbol	max_int		1077633						
ANR	1078146	Symbol	self -> autohinting		1077633						
ANR	1078147	Symbol	* self -> pole		1077633						
ANR	1078148	Symbol	t1_hinter__skip_stem		1077633						
ANR	1078149	Symbol	* segment_index		1077633						
ANR	1078150	Symbol	horiz		1077633						
ANR	1078151	Symbol	* beg_range_pole		1077633						
ANR	1078152	Symbol	self -> pole [ j ] . contour_index		1077633						
ANR	1078153	Symbol	t1_hinter__segment_end		1077633						
ANR	1078154	Symbol	self -> pole [ beg_range_pole ] . type		1077633						
ANR	1078155	Symbol	closepath		1077633						
ANR	1078156	Symbol	self -> pole		1077633						
ANR	1078157	Symbol	self -> hint_range [ k ] . beg_pole		1077633						
ANR	1078158	Symbol	gc		1077633						
ANR	1078159	Symbol	hstem		1077633						
ANR	1078160	Symbol	t1_hinter__is_stem_hint_applicable		1077633						
ANR	1078161	Symbol	topzn		1077633						
ANR	1078162	Symbol	* self -> contour		1077633						
ANR	1078163	Symbol	self -> hint [ i ] . type		1077633						
ANR	1078164	Symbol	self -> hint		1077633						
ANR	1078165	Symbol	* * self		1077633						
ANR	1078166	Symbol	i		1077633						
ANR	1078167	Symbol	j		1077633						
ANR	1078168	Symbol	k		1077633						
ANR	1078169	Symbol	self -> hint_range		1077633						
ANR	1078170	Symbol	t1_hinter__find_stem_middle		1077633						
ANR	1078171	Symbol	* self -> hint_range		1077633						
ANR	1078172	Symbol	self -> hint_count		1077633						
ANR	1078173	Symbol	* i		1077633						
ANR	1078174	Symbol	* j		1077633						
ANR	1078175	Symbol	t		1077633						
ANR	1078176	Symbol	self -> hint [ i ] . range_index		1077633						
ANR	1078177	Symbol	* k		1077633						
ANR	1078178	Symbol	self		1077633						
ANR	1078179	Symbol	& t		1077633						
ANR	1078180	Symbol	self -> hint_range [ k ] . end_pole		1077633						
ANR	1078181	Symbol	* self -> pole [ j ] . contour_index		1077633						
ANR	1078182	Function	t1_hinter__unfix_opposite_to_common	2271:0:93727:96632							
ANR	1078183	FunctionDef	t1_hinter__unfix_opposite_to_common (t1_hinter * self)		1078182	0					
ANR	1078184	CompoundStatement		2272:0:93793:96632	1078182	0					
ANR	1078185	IdentifierDeclStatement	"int i , j , k , m , n ;"	2273:4:93868:93885	1078182	0	True				
ANR	1078186	IdentifierDecl	i		1078182	0					
ANR	1078187	IdentifierDeclType	int		1078182	0					
ANR	1078188	Identifier	i		1078182	1					
ANR	1078189	IdentifierDecl	j		1078182	1					
ANR	1078190	IdentifierDeclType	int		1078182	0					
ANR	1078191	Identifier	j		1078182	1					
ANR	1078192	IdentifierDecl	k		1078182	2					
ANR	1078193	IdentifierDeclType	int		1078182	0					
ANR	1078194	Identifier	k		1078182	1					
ANR	1078195	IdentifierDecl	m		1078182	3					
ANR	1078196	IdentifierDeclType	int		1078182	0					
ANR	1078197	Identifier	m		1078182	1					
ANR	1078198	IdentifierDecl	n		1078182	4					
ANR	1078199	IdentifierDeclType	int		1078182	0					
ANR	1078200	Identifier	n		1078182	1					
ANR	1078201	IdentifierDeclStatement	"t1_glyph_space_coord d , md ;"	2274:4:93891:93917	1078182	1	True				
ANR	1078202	IdentifierDecl	d		1078182	0					
ANR	1078203	IdentifierDeclType	t1_glyph_space_coord		1078182	0					
ANR	1078204	Identifier	d		1078182	1					
ANR	1078205	IdentifierDecl	md		1078182	1					
ANR	1078206	IdentifierDeclType	t1_glyph_space_coord		1078182	0					
ANR	1078207	Identifier	md		1078182	1					
ANR	1078208	IdentifierDeclStatement	"t1_glyph_space_coord * p_ci , * p_cj , * p_agj , agm ;"	2275:4:93923:93969	1078182	2	True				
ANR	1078209	IdentifierDecl	* p_ci		1078182	0					
ANR	1078210	IdentifierDeclType	t1_glyph_space_coord *		1078182	0					
ANR	1078211	Identifier	p_ci		1078182	1					
ANR	1078212	IdentifierDecl	* p_cj		1078182	1					
ANR	1078213	IdentifierDeclType	t1_glyph_space_coord *		1078182	0					
ANR	1078214	Identifier	p_cj		1078182	1					
ANR	1078215	IdentifierDecl	* p_agj		1078182	2					
ANR	1078216	IdentifierDeclType	t1_glyph_space_coord *		1078182	0					
ANR	1078217	Identifier	p_agj		1078182	1					
ANR	1078218	IdentifierDecl	agm		1078182	3					
ANR	1078219	IdentifierDeclType	t1_glyph_space_coord		1078182	0					
ANR	1078220	Identifier	agm		1078182	1					
ANR	1078221	IdentifierDeclStatement	"enum t1_align_type * p_aj , * p_ai , * p_oi , * p_oj , am ;"	2276:4:93975:94024	1078182	3	True				
ANR	1078222	IdentifierDecl	* p_aj		1078182	0					
ANR	1078223	IdentifierDeclType	enum t1_align_type *		1078182	0					
ANR	1078224	Identifier	p_aj		1078182	1					
ANR	1078225	IdentifierDecl	* p_ai		1078182	1					
ANR	1078226	IdentifierDeclType	enum t1_align_type *		1078182	0					
ANR	1078227	Identifier	p_ai		1078182	1					
ANR	1078228	IdentifierDecl	* p_oi		1078182	2					
ANR	1078229	IdentifierDeclType	enum t1_align_type *		1078182	0					
ANR	1078230	Identifier	p_oi		1078182	1					
ANR	1078231	IdentifierDecl	* p_oj		1078182	3					
ANR	1078232	IdentifierDeclType	enum t1_align_type *		1078182	0					
ANR	1078233	Identifier	p_oj		1078182	1					
ANR	1078234	IdentifierDecl	am		1078182	4					
ANR	1078235	IdentifierDeclType	enum t1_align_type		1078182	0					
ANR	1078236	Identifier	am		1078182	1					
ANR	1078237	ForStatement	for ( k = 0 ; k < 2 ; k ++ )		1078182	4					
ANR	1078238	ForInit	k = 0 ;	2278:9:94036:94041	1078182	0	True				
ANR	1078239	AssignmentExpression	k = 0		1078182	0		=			
ANR	1078240	Identifier	k		1078182	0					
ANR	1078241	PrimaryExpression	0		1078182	1					
ANR	1078242	Condition	k < 2	2278:16:94043:94047	1078182	1	True				
ANR	1078243	RelationalExpression	k < 2		1078182	0		<			
ANR	1078244	Identifier	k		1078182	0					
ANR	1078245	PrimaryExpression	2		1078182	1					
ANR	1078246	PostIncDecOperationExpression	k ++	2278:23:94050:94052	1078182	2	True				
ANR	1078247	Identifier	k		1078182	0					
ANR	1078248	IncDec	++		1078182	1					
ANR	1078249	CompoundStatement		7:28:261:261	1078182	3					
ANR	1078250	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		1078182	0					
ANR	1078251	ForInit	i = 0 ;	2281:12:94208:94213	1078182	0	True				
ANR	1078252	AssignmentExpression	i = 0		1078182	0		=			
ANR	1078253	Identifier	i		1078182	0					
ANR	1078254	PrimaryExpression	0		1078182	1					
ANR	1078255	Condition	i < self -> hint_count	2281:19:94215:94234	1078182	1	True				
ANR	1078256	RelationalExpression	i < self -> hint_count		1078182	0		<			
ANR	1078257	Identifier	i		1078182	0					
ANR	1078258	PtrMemberAccess	self -> hint_count		1078182	1					
ANR	1078259	Identifier	self		1078182	0					
ANR	1078260	Identifier	hint_count		1078182	1					
ANR	1078261	PostIncDecOperationExpression	i ++	2281:41:94237:94239	1078182	2	True				
ANR	1078262	Identifier	i		1078182	0					
ANR	1078263	IncDec	++		1078182	1					
ANR	1078264	CompoundStatement		10:46:448:448	1078182	3					
ANR	1078265	IfStatement	if ( self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem )		1078182	0					
ANR	1078266	Condition	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem	2282:16:94260:94317	1078182	0	True				
ANR	1078267	OrExpression	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem		1078182	0		||			
ANR	1078268	EqualityExpression	self -> hint [ i ] . type == vstem		1078182	0		==			
ANR	1078269	MemberAccess	self -> hint [ i ] . type		1078182	0					
ANR	1078270	ArrayIndexing	self -> hint [ i ]		1078182	0					
ANR	1078271	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078272	Identifier	self		1078182	0					
ANR	1078273	Identifier	hint		1078182	1					
ANR	1078274	Identifier	i		1078182	1					
ANR	1078275	Identifier	type		1078182	1					
ANR	1078276	Identifier	vstem		1078182	1					
ANR	1078277	EqualityExpression	self -> hint [ i ] . type == hstem		1078182	1		==			
ANR	1078278	MemberAccess	self -> hint [ i ] . type		1078182	0					
ANR	1078279	ArrayIndexing	self -> hint [ i ]		1078182	0					
ANR	1078280	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078281	Identifier	self		1078182	0					
ANR	1078282	Identifier	hint		1078182	1					
ANR	1078283	Identifier	i		1078182	1					
ANR	1078284	Identifier	type		1078182	1					
ANR	1078285	Identifier	hstem		1078182	1					
ANR	1078286	CompoundStatement		11:76:526:526	1078182	1					
ANR	1078287	ExpressionStatement	p_ai = ( ! k ? & self -> hint [ i ] . aligned0 : & self -> hint [ i ] . aligned1 )	2283:16:94338:94401	1078182	0	True				
ANR	1078288	AssignmentExpression	p_ai = ( ! k ? & self -> hint [ i ] . aligned0 : & self -> hint [ i ] . aligned1 )		1078182	0		=			
ANR	1078289	Identifier	p_ai		1078182	0					
ANR	1078290	ConditionalExpression	! k ? & self -> hint [ i ] . aligned0 : & self -> hint [ i ] . aligned1		1078182	1					
ANR	1078291	Condition	! k		1078182	0					
ANR	1078292	UnaryOperationExpression	! k		1078182	0					
ANR	1078293	UnaryOperator	!		1078182	0					
ANR	1078294	Identifier	k		1078182	1					
ANR	1078295	UnaryOperationExpression	& self -> hint [ i ] . aligned0		1078182	1					
ANR	1078296	UnaryOperator	&		1078182	0					
ANR	1078297	MemberAccess	self -> hint [ i ] . aligned0		1078182	1					
ANR	1078298	ArrayIndexing	self -> hint [ i ]		1078182	0					
ANR	1078299	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078300	Identifier	self		1078182	0					
ANR	1078301	Identifier	hint		1078182	1					
ANR	1078302	Identifier	i		1078182	1					
ANR	1078303	Identifier	aligned0		1078182	1					
ANR	1078304	UnaryOperationExpression	& self -> hint [ i ] . aligned1		1078182	2					
ANR	1078305	UnaryOperator	&		1078182	0					
ANR	1078306	MemberAccess	self -> hint [ i ] . aligned1		1078182	1					
ANR	1078307	ArrayIndexing	self -> hint [ i ]		1078182	0					
ANR	1078308	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078309	Identifier	self		1078182	0					
ANR	1078310	Identifier	hint		1078182	1					
ANR	1078311	Identifier	i		1078182	1					
ANR	1078312	Identifier	aligned1		1078182	1					
ANR	1078313	ExpressionStatement	p_oi = ( ! k ? & self -> hint [ i ] . aligned1 : & self -> hint [ i ] . aligned0 )	2284:16:94419:94482	1078182	1	True				
ANR	1078314	AssignmentExpression	p_oi = ( ! k ? & self -> hint [ i ] . aligned1 : & self -> hint [ i ] . aligned0 )		1078182	0		=			
ANR	1078315	Identifier	p_oi		1078182	0					
ANR	1078316	ConditionalExpression	! k ? & self -> hint [ i ] . aligned1 : & self -> hint [ i ] . aligned0		1078182	1					
ANR	1078317	Condition	! k		1078182	0					
ANR	1078318	UnaryOperationExpression	! k		1078182	0					
ANR	1078319	UnaryOperator	!		1078182	0					
ANR	1078320	Identifier	k		1078182	1					
ANR	1078321	UnaryOperationExpression	& self -> hint [ i ] . aligned1		1078182	1					
ANR	1078322	UnaryOperator	&		1078182	0					
ANR	1078323	MemberAccess	self -> hint [ i ] . aligned1		1078182	1					
ANR	1078324	ArrayIndexing	self -> hint [ i ]		1078182	0					
ANR	1078325	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078326	Identifier	self		1078182	0					
ANR	1078327	Identifier	hint		1078182	1					
ANR	1078328	Identifier	i		1078182	1					
ANR	1078329	Identifier	aligned1		1078182	1					
ANR	1078330	UnaryOperationExpression	& self -> hint [ i ] . aligned0		1078182	2					
ANR	1078331	UnaryOperator	&		1078182	0					
ANR	1078332	MemberAccess	self -> hint [ i ] . aligned0		1078182	1					
ANR	1078333	ArrayIndexing	self -> hint [ i ]		1078182	0					
ANR	1078334	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078335	Identifier	self		1078182	0					
ANR	1078336	Identifier	hint		1078182	1					
ANR	1078337	Identifier	i		1078182	1					
ANR	1078338	Identifier	aligned0		1078182	1					
ANR	1078339	IfStatement	if ( * p_ai > weak && * p_ai == * p_oi )		1078182	2					
ANR	1078340	Condition	* p_ai > weak && * p_ai == * p_oi	2285:20:94504:94533	1078182	0	True				
ANR	1078341	AndExpression	* p_ai > weak && * p_ai == * p_oi		1078182	0		&&			
ANR	1078342	RelationalExpression	* p_ai > weak		1078182	0		>			
ANR	1078343	UnaryOperationExpression	* p_ai		1078182	0					
ANR	1078344	UnaryOperator	*		1078182	0					
ANR	1078345	Identifier	p_ai		1078182	1					
ANR	1078346	Identifier	weak		1078182	1					
ANR	1078347	EqualityExpression	* p_ai == * p_oi		1078182	1		==			
ANR	1078348	UnaryOperationExpression	* p_ai		1078182	0					
ANR	1078349	UnaryOperator	*		1078182	0					
ANR	1078350	Identifier	p_ai		1078182	1					
ANR	1078351	UnaryOperationExpression	* p_oi		1078182	1					
ANR	1078352	UnaryOperator	*		1078182	0					
ANR	1078353	Identifier	p_oi		1078182	1					
ANR	1078354	CompoundStatement		14:52:742:742	1078182	1					
ANR	1078355	ExpressionStatement	p_ci = ( ! k ? & self -> hint [ i ] . g0 : & self -> hint [ i ] . g1 )	2286:20:94558:94609	1078182	0	True				
ANR	1078356	AssignmentExpression	p_ci = ( ! k ? & self -> hint [ i ] . g0 : & self -> hint [ i ] . g1 )		1078182	0		=			
ANR	1078357	Identifier	p_ci		1078182	0					
ANR	1078358	ConditionalExpression	! k ? & self -> hint [ i ] . g0 : & self -> hint [ i ] . g1		1078182	1					
ANR	1078359	Condition	! k		1078182	0					
ANR	1078360	UnaryOperationExpression	! k		1078182	0					
ANR	1078361	UnaryOperator	!		1078182	0					
ANR	1078362	Identifier	k		1078182	1					
ANR	1078363	UnaryOperationExpression	& self -> hint [ i ] . g0		1078182	1					
ANR	1078364	UnaryOperator	&		1078182	0					
ANR	1078365	MemberAccess	self -> hint [ i ] . g0		1078182	1					
ANR	1078366	ArrayIndexing	self -> hint [ i ]		1078182	0					
ANR	1078367	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078368	Identifier	self		1078182	0					
ANR	1078369	Identifier	hint		1078182	1					
ANR	1078370	Identifier	i		1078182	1					
ANR	1078371	Identifier	g0		1078182	1					
ANR	1078372	UnaryOperationExpression	& self -> hint [ i ] . g1		1078182	2					
ANR	1078373	UnaryOperator	&		1078182	0					
ANR	1078374	MemberAccess	self -> hint [ i ] . g1		1078182	1					
ANR	1078375	ArrayIndexing	self -> hint [ i ]		1078182	0					
ANR	1078376	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078377	Identifier	self		1078182	0					
ANR	1078378	Identifier	hint		1078182	1					
ANR	1078379	Identifier	i		1078182	1					
ANR	1078380	Identifier	g1		1078182	1					
ANR	1078381	ExpressionStatement	md = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )	2287:20:94631:94680	1078182	1	True				
ANR	1078382	AssignmentExpression	md = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		1078182	0		=			
ANR	1078383	Identifier	md		1078182	0					
ANR	1078384	CallExpression	any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		1078182	1					
ANR	1078385	Callee	any_abs		1078182	0					
ANR	1078386	Identifier	any_abs		1078182	0					
ANR	1078387	ArgumentList	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		1078182	1					
ANR	1078388	Argument	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		1078182	0					
ANR	1078389	AdditiveExpression	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		1078182	0		-			
ANR	1078390	MemberAccess	self -> hint [ i ] . g1		1078182	0					
ANR	1078391	ArrayIndexing	self -> hint [ i ]		1078182	0					
ANR	1078392	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078393	Identifier	self		1078182	0					
ANR	1078394	Identifier	hint		1078182	1					
ANR	1078395	Identifier	i		1078182	1					
ANR	1078396	Identifier	g1		1078182	1					
ANR	1078397	MemberAccess	self -> hint [ i ] . g0		1078182	1					
ANR	1078398	ArrayIndexing	self -> hint [ i ]		1078182	0					
ANR	1078399	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078400	Identifier	self		1078182	0					
ANR	1078401	Identifier	hint		1078182	1					
ANR	1078402	Identifier	i		1078182	1					
ANR	1078403	Identifier	g0		1078182	1					
ANR	1078404	ExpressionStatement	m = i	2288:20:94702:94707	1078182	2	True				
ANR	1078405	AssignmentExpression	m = i		1078182	0		=			
ANR	1078406	Identifier	m		1078182	0					
ANR	1078407	Identifier	i		1078182	1					
ANR	1078408	ExpressionStatement	am = * p_ai	2289:20:94729:94739	1078182	3	True				
ANR	1078409	AssignmentExpression	am = * p_ai		1078182	0		=			
ANR	1078410	Identifier	am		1078182	0					
ANR	1078411	UnaryOperationExpression	* p_ai		1078182	1					
ANR	1078412	UnaryOperator	*		1078182	0					
ANR	1078413	Identifier	p_ai		1078182	1					
ANR	1078414	ExpressionStatement	agm = ( ! k ? self -> hint [ m ] . ag0 : self -> hint [ m ] . ag1 )	2290:20:94761:94811	1078182	4	True				
ANR	1078415	AssignmentExpression	agm = ( ! k ? self -> hint [ m ] . ag0 : self -> hint [ m ] . ag1 )		1078182	0		=			
ANR	1078416	Identifier	agm		1078182	0					
ANR	1078417	ConditionalExpression	! k ? self -> hint [ m ] . ag0 : self -> hint [ m ] . ag1		1078182	1					
ANR	1078418	Condition	! k		1078182	0					
ANR	1078419	UnaryOperationExpression	! k		1078182	0					
ANR	1078420	UnaryOperator	!		1078182	0					
ANR	1078421	Identifier	k		1078182	1					
ANR	1078422	MemberAccess	self -> hint [ m ] . ag0		1078182	1					
ANR	1078423	ArrayIndexing	self -> hint [ m ]		1078182	0					
ANR	1078424	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078425	Identifier	self		1078182	0					
ANR	1078426	Identifier	hint		1078182	1					
ANR	1078427	Identifier	m		1078182	1					
ANR	1078428	Identifier	ag0		1078182	1					
ANR	1078429	MemberAccess	self -> hint [ m ] . ag1		1078182	2					
ANR	1078430	ArrayIndexing	self -> hint [ m ]		1078182	0					
ANR	1078431	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078432	Identifier	self		1078182	0					
ANR	1078433	Identifier	hint		1078182	1					
ANR	1078434	Identifier	m		1078182	1					
ANR	1078435	Identifier	ag1		1078182	1					
ANR	1078436	ExpressionStatement	n = 0	2291:20:94833:94838	1078182	5	True				
ANR	1078437	AssignmentExpression	n = 0		1078182	0		=			
ANR	1078438	Identifier	n		1078182	0					
ANR	1078439	PrimaryExpression	0		1078182	1					
ANR	1078440	ForStatement	for ( j = 0 ; j < self -> hint_count ; j ++ )		1078182	6					
ANR	1078441	ForInit	j = 0 ;	2292:24:94864:94869	1078182	0	True				
ANR	1078442	AssignmentExpression	j = 0		1078182	0		=			
ANR	1078443	Identifier	j		1078182	0					
ANR	1078444	PrimaryExpression	0		1078182	1					
ANR	1078445	Condition	j < self -> hint_count	2292:31:94871:94890	1078182	1	True				
ANR	1078446	RelationalExpression	j < self -> hint_count		1078182	0		<			
ANR	1078447	Identifier	j		1078182	0					
ANR	1078448	PtrMemberAccess	self -> hint_count		1078182	1					
ANR	1078449	Identifier	self		1078182	0					
ANR	1078450	Identifier	hint_count		1078182	1					
ANR	1078451	PostIncDecOperationExpression	j ++	2292:53:94893:94895	1078182	2	True				
ANR	1078452	Identifier	j		1078182	0					
ANR	1078453	IncDec	++		1078182	1					
ANR	1078454	CompoundStatement		21:58:1104:1104	1078182	3					
ANR	1078455	IfStatement	if ( j != i && self -> hint [ i ] . type == self -> hint [ j ] . type )		1078182	0					
ANR	1078456	Condition	j != i && self -> hint [ i ] . type == self -> hint [ j ] . type	2293:28:94928:94977	1078182	0	True				
ANR	1078457	AndExpression	j != i && self -> hint [ i ] . type == self -> hint [ j ] . type		1078182	0		&&			
ANR	1078458	EqualityExpression	j != i		1078182	0		!=			
ANR	1078459	Identifier	j		1078182	0					
ANR	1078460	Identifier	i		1078182	1					
ANR	1078461	EqualityExpression	self -> hint [ i ] . type == self -> hint [ j ] . type		1078182	1		==			
ANR	1078462	MemberAccess	self -> hint [ i ] . type		1078182	0					
ANR	1078463	ArrayIndexing	self -> hint [ i ]		1078182	0					
ANR	1078464	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078465	Identifier	self		1078182	0					
ANR	1078466	Identifier	hint		1078182	1					
ANR	1078467	Identifier	i		1078182	1					
ANR	1078468	Identifier	type		1078182	1					
ANR	1078469	MemberAccess	self -> hint [ j ] . type		1078182	1					
ANR	1078470	ArrayIndexing	self -> hint [ j ]		1078182	0					
ANR	1078471	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078472	Identifier	self		1078182	0					
ANR	1078473	Identifier	hint		1078182	1					
ANR	1078474	Identifier	j		1078182	1					
ANR	1078475	Identifier	type		1078182	1					
ANR	1078476	CompoundStatement		22:80:1186:1186	1078182	1					
ANR	1078477	ExpressionStatement	p_cj = ( ! k ? & self -> hint [ j ] . g0 : & self -> hint [ j ] . g1 )	2294:28:95010:95061	1078182	0	True				
ANR	1078478	AssignmentExpression	p_cj = ( ! k ? & self -> hint [ j ] . g0 : & self -> hint [ j ] . g1 )		1078182	0		=			
ANR	1078479	Identifier	p_cj		1078182	0					
ANR	1078480	ConditionalExpression	! k ? & self -> hint [ j ] . g0 : & self -> hint [ j ] . g1		1078182	1					
ANR	1078481	Condition	! k		1078182	0					
ANR	1078482	UnaryOperationExpression	! k		1078182	0					
ANR	1078483	UnaryOperator	!		1078182	0					
ANR	1078484	Identifier	k		1078182	1					
ANR	1078485	UnaryOperationExpression	& self -> hint [ j ] . g0		1078182	1					
ANR	1078486	UnaryOperator	&		1078182	0					
ANR	1078487	MemberAccess	self -> hint [ j ] . g0		1078182	1					
ANR	1078488	ArrayIndexing	self -> hint [ j ]		1078182	0					
ANR	1078489	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078490	Identifier	self		1078182	0					
ANR	1078491	Identifier	hint		1078182	1					
ANR	1078492	Identifier	j		1078182	1					
ANR	1078493	Identifier	g0		1078182	1					
ANR	1078494	UnaryOperationExpression	& self -> hint [ j ] . g1		1078182	2					
ANR	1078495	UnaryOperator	&		1078182	0					
ANR	1078496	MemberAccess	self -> hint [ j ] . g1		1078182	1					
ANR	1078497	ArrayIndexing	self -> hint [ j ]		1078182	0					
ANR	1078498	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078499	Identifier	self		1078182	0					
ANR	1078500	Identifier	hint		1078182	1					
ANR	1078501	Identifier	j		1078182	1					
ANR	1078502	Identifier	g1		1078182	1					
ANR	1078503	IfStatement	if ( * p_ci == * p_cj )		1078182	1					
ANR	1078504	Condition	* p_ci == * p_cj	2295:32:95095:95108	1078182	0	True				
ANR	1078505	EqualityExpression	* p_ci == * p_cj		1078182	0		==			
ANR	1078506	UnaryOperationExpression	* p_ci		1078182	0					
ANR	1078507	UnaryOperator	*		1078182	0					
ANR	1078508	Identifier	p_ci		1078182	1					
ANR	1078509	UnaryOperationExpression	* p_cj		1078182	1					
ANR	1078510	UnaryOperator	*		1078182	0					
ANR	1078511	Identifier	p_cj		1078182	1					
ANR	1078512	CompoundStatement		24:48:1317:1317	1078182	1					
ANR	1078513	ExpressionStatement	n ++	2296:32:95145:95148	1078182	0	True				
ANR	1078514	PostIncDecOperationExpression	n ++		1078182	0					
ANR	1078515	Identifier	n		1078182	0					
ANR	1078516	IncDec	++		1078182	1					
ANR	1078517	ExpressionStatement	p_aj = ( ! k ? & self -> hint [ j ] . aligned0 : & self -> hint [ j ] . aligned1 )	2297:32:95182:95245	1078182	1	True				
ANR	1078518	AssignmentExpression	p_aj = ( ! k ? & self -> hint [ j ] . aligned0 : & self -> hint [ j ] . aligned1 )		1078182	0		=			
ANR	1078519	Identifier	p_aj		1078182	0					
ANR	1078520	ConditionalExpression	! k ? & self -> hint [ j ] . aligned0 : & self -> hint [ j ] . aligned1		1078182	1					
ANR	1078521	Condition	! k		1078182	0					
ANR	1078522	UnaryOperationExpression	! k		1078182	0					
ANR	1078523	UnaryOperator	!		1078182	0					
ANR	1078524	Identifier	k		1078182	1					
ANR	1078525	UnaryOperationExpression	& self -> hint [ j ] . aligned0		1078182	1					
ANR	1078526	UnaryOperator	&		1078182	0					
ANR	1078527	MemberAccess	self -> hint [ j ] . aligned0		1078182	1					
ANR	1078528	ArrayIndexing	self -> hint [ j ]		1078182	0					
ANR	1078529	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078530	Identifier	self		1078182	0					
ANR	1078531	Identifier	hint		1078182	1					
ANR	1078532	Identifier	j		1078182	1					
ANR	1078533	Identifier	aligned0		1078182	1					
ANR	1078534	UnaryOperationExpression	& self -> hint [ j ] . aligned1		1078182	2					
ANR	1078535	UnaryOperator	&		1078182	0					
ANR	1078536	MemberAccess	self -> hint [ j ] . aligned1		1078182	1					
ANR	1078537	ArrayIndexing	self -> hint [ j ]		1078182	0					
ANR	1078538	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078539	Identifier	self		1078182	0					
ANR	1078540	Identifier	hint		1078182	1					
ANR	1078541	Identifier	j		1078182	1					
ANR	1078542	Identifier	aligned1		1078182	1					
ANR	1078543	ExpressionStatement	d = any_abs ( self -> hint [ j ] . g1 - self -> hint [ j ] . g0 )	2298:32:95279:95327	1078182	2	True				
ANR	1078544	AssignmentExpression	d = any_abs ( self -> hint [ j ] . g1 - self -> hint [ j ] . g0 )		1078182	0		=			
ANR	1078545	Identifier	d		1078182	0					
ANR	1078546	CallExpression	any_abs ( self -> hint [ j ] . g1 - self -> hint [ j ] . g0 )		1078182	1					
ANR	1078547	Callee	any_abs		1078182	0					
ANR	1078548	Identifier	any_abs		1078182	0					
ANR	1078549	ArgumentList	self -> hint [ j ] . g1 - self -> hint [ j ] . g0		1078182	1					
ANR	1078550	Argument	self -> hint [ j ] . g1 - self -> hint [ j ] . g0		1078182	0					
ANR	1078551	AdditiveExpression	self -> hint [ j ] . g1 - self -> hint [ j ] . g0		1078182	0		-			
ANR	1078552	MemberAccess	self -> hint [ j ] . g1		1078182	0					
ANR	1078553	ArrayIndexing	self -> hint [ j ]		1078182	0					
ANR	1078554	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078555	Identifier	self		1078182	0					
ANR	1078556	Identifier	hint		1078182	1					
ANR	1078557	Identifier	j		1078182	1					
ANR	1078558	Identifier	g1		1078182	1					
ANR	1078559	MemberAccess	self -> hint [ j ] . g0		1078182	1					
ANR	1078560	ArrayIndexing	self -> hint [ j ]		1078182	0					
ANR	1078561	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078562	Identifier	self		1078182	0					
ANR	1078563	Identifier	hint		1078182	1					
ANR	1078564	Identifier	j		1078182	1					
ANR	1078565	Identifier	g0		1078182	1					
ANR	1078566	IfStatement	if ( am < * p_aj )		1078182	3					
ANR	1078567	Condition	am < * p_aj	2299:36:95365:95374	1078182	0	True				
ANR	1078568	RelationalExpression	am < * p_aj		1078182	0		<			
ANR	1078569	Identifier	am		1078182	0					
ANR	1078570	UnaryOperationExpression	* p_aj		1078182	1					
ANR	1078571	UnaryOperator	*		1078182	0					
ANR	1078572	Identifier	p_aj		1078182	1					
ANR	1078573	CompoundStatement		28:48:1583:1583	1078182	1					
ANR	1078574	ExpressionStatement	md = d	2300:36:95415:95421	1078182	0	True				
ANR	1078575	AssignmentExpression	md = d		1078182	0		=			
ANR	1078576	Identifier	md		1078182	0					
ANR	1078577	Identifier	d		1078182	1					
ANR	1078578	ExpressionStatement	m = j	2301:36:95459:95464	1078182	1	True				
ANR	1078579	AssignmentExpression	m = j		1078182	0		=			
ANR	1078580	Identifier	m		1078182	0					
ANR	1078581	Identifier	j		1078182	1					
ANR	1078582	ExpressionStatement	am = * p_aj	2302:36:95502:95512	1078182	2	True				
ANR	1078583	AssignmentExpression	am = * p_aj		1078182	0		=			
ANR	1078584	Identifier	am		1078182	0					
ANR	1078585	UnaryOperationExpression	* p_aj		1078182	1					
ANR	1078586	UnaryOperator	*		1078182	0					
ANR	1078587	Identifier	p_aj		1078182	1					
ANR	1078588	ExpressionStatement	agm = ( ! k ? self -> hint [ m ] . ag0 : self -> hint [ m ] . ag1 )	2303:36:95550:95600	1078182	3	True				
ANR	1078589	AssignmentExpression	agm = ( ! k ? self -> hint [ m ] . ag0 : self -> hint [ m ] . ag1 )		1078182	0		=			
ANR	1078590	Identifier	agm		1078182	0					
ANR	1078591	ConditionalExpression	! k ? self -> hint [ m ] . ag0 : self -> hint [ m ] . ag1		1078182	1					
ANR	1078592	Condition	! k		1078182	0					
ANR	1078593	UnaryOperationExpression	! k		1078182	0					
ANR	1078594	UnaryOperator	!		1078182	0					
ANR	1078595	Identifier	k		1078182	1					
ANR	1078596	MemberAccess	self -> hint [ m ] . ag0		1078182	1					
ANR	1078597	ArrayIndexing	self -> hint [ m ]		1078182	0					
ANR	1078598	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078599	Identifier	self		1078182	0					
ANR	1078600	Identifier	hint		1078182	1					
ANR	1078601	Identifier	m		1078182	1					
ANR	1078602	Identifier	ag0		1078182	1					
ANR	1078603	MemberAccess	self -> hint [ m ] . ag1		1078182	2					
ANR	1078604	ArrayIndexing	self -> hint [ m ]		1078182	0					
ANR	1078605	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078606	Identifier	self		1078182	0					
ANR	1078607	Identifier	hint		1078182	1					
ANR	1078608	Identifier	m		1078182	1					
ANR	1078609	Identifier	ag1		1078182	1					
ANR	1078610	IfStatement	if ( md < d )		1078182	4					
ANR	1078611	Condition	md < d	2304:38:95640:95645	1078182	0	True				
ANR	1078612	RelationalExpression	md < d		1078182	0		<			
ANR	1078613	Identifier	md		1078182	0					
ANR	1078614	Identifier	d		1078182	1					
ANR	1078615	CompoundStatement		33:46:1854:1854	1078182	1					
ANR	1078616	ExpressionStatement	md = d	2305:36:95686:95692	1078182	0	True				
ANR	1078617	AssignmentExpression	md = d		1078182	0		=			
ANR	1078618	Identifier	md		1078182	0					
ANR	1078619	Identifier	d		1078182	1					
ANR	1078620	IfStatement	if ( n )		1078182	7					
ANR	1078621	Condition	n	2310:24:95830:95830	1078182	0	True				
ANR	1078622	Identifier	n		1078182	0					
ANR	1078623	CompoundStatement		39:27:2039:2039	1078182	1					
ANR	1078624	ForStatement	for ( j = 0 ; j < self -> hint_count ; j ++ )		1078182	0					
ANR	1078625	ForInit	j = 0 ;	2311:28:95863:95868	1078182	0	True				
ANR	1078626	AssignmentExpression	j = 0		1078182	0		=			
ANR	1078627	Identifier	j		1078182	0					
ANR	1078628	PrimaryExpression	0		1078182	1					
ANR	1078629	Condition	j < self -> hint_count	2311:35:95870:95889	1078182	1	True				
ANR	1078630	RelationalExpression	j < self -> hint_count		1078182	0		<			
ANR	1078631	Identifier	j		1078182	0					
ANR	1078632	PtrMemberAccess	self -> hint_count		1078182	1					
ANR	1078633	Identifier	self		1078182	0					
ANR	1078634	Identifier	hint_count		1078182	1					
ANR	1078635	PostIncDecOperationExpression	j ++	2311:57:95892:95894	1078182	2	True				
ANR	1078636	Identifier	j		1078182	0					
ANR	1078637	IncDec	++		1078182	1					
ANR	1078638	CompoundStatement		40:62:2103:2103	1078182	3					
ANR	1078639	ExpressionStatement	p_cj = ( ! k ? & self -> hint [ j ] . g0 : & self -> hint [ j ] . g1 )	2312:28:95927:95978	1078182	0	True				
ANR	1078640	AssignmentExpression	p_cj = ( ! k ? & self -> hint [ j ] . g0 : & self -> hint [ j ] . g1 )		1078182	0		=			
ANR	1078641	Identifier	p_cj		1078182	0					
ANR	1078642	ConditionalExpression	! k ? & self -> hint [ j ] . g0 : & self -> hint [ j ] . g1		1078182	1					
ANR	1078643	Condition	! k		1078182	0					
ANR	1078644	UnaryOperationExpression	! k		1078182	0					
ANR	1078645	UnaryOperator	!		1078182	0					
ANR	1078646	Identifier	k		1078182	1					
ANR	1078647	UnaryOperationExpression	& self -> hint [ j ] . g0		1078182	1					
ANR	1078648	UnaryOperator	&		1078182	0					
ANR	1078649	MemberAccess	self -> hint [ j ] . g0		1078182	1					
ANR	1078650	ArrayIndexing	self -> hint [ j ]		1078182	0					
ANR	1078651	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078652	Identifier	self		1078182	0					
ANR	1078653	Identifier	hint		1078182	1					
ANR	1078654	Identifier	j		1078182	1					
ANR	1078655	Identifier	g0		1078182	1					
ANR	1078656	UnaryOperationExpression	& self -> hint [ j ] . g1		1078182	2					
ANR	1078657	UnaryOperator	&		1078182	0					
ANR	1078658	MemberAccess	self -> hint [ j ] . g1		1078182	1					
ANR	1078659	ArrayIndexing	self -> hint [ j ]		1078182	0					
ANR	1078660	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078661	Identifier	self		1078182	0					
ANR	1078662	Identifier	hint		1078182	1					
ANR	1078663	Identifier	j		1078182	1					
ANR	1078664	Identifier	g1		1078182	1					
ANR	1078665	IfStatement	if ( * p_ci == * p_cj )		1078182	1					
ANR	1078666	Condition	* p_ci == * p_cj	2313:32:96012:96025	1078182	0	True				
ANR	1078667	EqualityExpression	* p_ci == * p_cj		1078182	0		==			
ANR	1078668	UnaryOperationExpression	* p_ci		1078182	0					
ANR	1078669	UnaryOperator	*		1078182	0					
ANR	1078670	Identifier	p_ci		1078182	1					
ANR	1078671	UnaryOperationExpression	* p_cj		1078182	1					
ANR	1078672	UnaryOperator	*		1078182	0					
ANR	1078673	Identifier	p_cj		1078182	1					
ANR	1078674	CompoundStatement		42:48:2234:2234	1078182	1					
ANR	1078675	ExpressionStatement	p_aj = ( ! k ? & self -> hint [ j ] . aligned0 : & self -> hint [ j ] . aligned1 )	2314:32:96062:96125	1078182	0	True				
ANR	1078676	AssignmentExpression	p_aj = ( ! k ? & self -> hint [ j ] . aligned0 : & self -> hint [ j ] . aligned1 )		1078182	0		=			
ANR	1078677	Identifier	p_aj		1078182	0					
ANR	1078678	ConditionalExpression	! k ? & self -> hint [ j ] . aligned0 : & self -> hint [ j ] . aligned1		1078182	1					
ANR	1078679	Condition	! k		1078182	0					
ANR	1078680	UnaryOperationExpression	! k		1078182	0					
ANR	1078681	UnaryOperator	!		1078182	0					
ANR	1078682	Identifier	k		1078182	1					
ANR	1078683	UnaryOperationExpression	& self -> hint [ j ] . aligned0		1078182	1					
ANR	1078684	UnaryOperator	&		1078182	0					
ANR	1078685	MemberAccess	self -> hint [ j ] . aligned0		1078182	1					
ANR	1078686	ArrayIndexing	self -> hint [ j ]		1078182	0					
ANR	1078687	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078688	Identifier	self		1078182	0					
ANR	1078689	Identifier	hint		1078182	1					
ANR	1078690	Identifier	j		1078182	1					
ANR	1078691	Identifier	aligned0		1078182	1					
ANR	1078692	UnaryOperationExpression	& self -> hint [ j ] . aligned1		1078182	2					
ANR	1078693	UnaryOperator	&		1078182	0					
ANR	1078694	MemberAccess	self -> hint [ j ] . aligned1		1078182	1					
ANR	1078695	ArrayIndexing	self -> hint [ j ]		1078182	0					
ANR	1078696	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078697	Identifier	self		1078182	0					
ANR	1078698	Identifier	hint		1078182	1					
ANR	1078699	Identifier	j		1078182	1					
ANR	1078700	Identifier	aligned1		1078182	1					
ANR	1078701	ExpressionStatement	p_oj = ( ! k ? & self -> hint [ j ] . aligned1 : & self -> hint [ j ] . aligned0 )	2315:32:96159:96222	1078182	1	True				
ANR	1078702	AssignmentExpression	p_oj = ( ! k ? & self -> hint [ j ] . aligned1 : & self -> hint [ j ] . aligned0 )		1078182	0		=			
ANR	1078703	Identifier	p_oj		1078182	0					
ANR	1078704	ConditionalExpression	! k ? & self -> hint [ j ] . aligned1 : & self -> hint [ j ] . aligned0		1078182	1					
ANR	1078705	Condition	! k		1078182	0					
ANR	1078706	UnaryOperationExpression	! k		1078182	0					
ANR	1078707	UnaryOperator	!		1078182	0					
ANR	1078708	Identifier	k		1078182	1					
ANR	1078709	UnaryOperationExpression	& self -> hint [ j ] . aligned1		1078182	1					
ANR	1078710	UnaryOperator	&		1078182	0					
ANR	1078711	MemberAccess	self -> hint [ j ] . aligned1		1078182	1					
ANR	1078712	ArrayIndexing	self -> hint [ j ]		1078182	0					
ANR	1078713	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078714	Identifier	self		1078182	0					
ANR	1078715	Identifier	hint		1078182	1					
ANR	1078716	Identifier	j		1078182	1					
ANR	1078717	Identifier	aligned1		1078182	1					
ANR	1078718	UnaryOperationExpression	& self -> hint [ j ] . aligned0		1078182	2					
ANR	1078719	UnaryOperator	&		1078182	0					
ANR	1078720	MemberAccess	self -> hint [ j ] . aligned0		1078182	1					
ANR	1078721	ArrayIndexing	self -> hint [ j ]		1078182	0					
ANR	1078722	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078723	Identifier	self		1078182	0					
ANR	1078724	Identifier	hint		1078182	1					
ANR	1078725	Identifier	j		1078182	1					
ANR	1078726	Identifier	aligned0		1078182	1					
ANR	1078727	ExpressionStatement	p_agj = ( ! k ? & self -> hint [ j ] . ag0 : & self -> hint [ j ] . ag1 )	2316:32:96256:96310	1078182	2	True				
ANR	1078728	AssignmentExpression	p_agj = ( ! k ? & self -> hint [ j ] . ag0 : & self -> hint [ j ] . ag1 )		1078182	0		=			
ANR	1078729	Identifier	p_agj		1078182	0					
ANR	1078730	ConditionalExpression	! k ? & self -> hint [ j ] . ag0 : & self -> hint [ j ] . ag1		1078182	1					
ANR	1078731	Condition	! k		1078182	0					
ANR	1078732	UnaryOperationExpression	! k		1078182	0					
ANR	1078733	UnaryOperator	!		1078182	0					
ANR	1078734	Identifier	k		1078182	1					
ANR	1078735	UnaryOperationExpression	& self -> hint [ j ] . ag0		1078182	1					
ANR	1078736	UnaryOperator	&		1078182	0					
ANR	1078737	MemberAccess	self -> hint [ j ] . ag0		1078182	1					
ANR	1078738	ArrayIndexing	self -> hint [ j ]		1078182	0					
ANR	1078739	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078740	Identifier	self		1078182	0					
ANR	1078741	Identifier	hint		1078182	1					
ANR	1078742	Identifier	j		1078182	1					
ANR	1078743	Identifier	ag0		1078182	1					
ANR	1078744	UnaryOperationExpression	& self -> hint [ j ] . ag1		1078182	2					
ANR	1078745	UnaryOperator	&		1078182	0					
ANR	1078746	MemberAccess	self -> hint [ j ] . ag1		1078182	1					
ANR	1078747	ArrayIndexing	self -> hint [ j ]		1078182	0					
ANR	1078748	PtrMemberAccess	self -> hint		1078182	0					
ANR	1078749	Identifier	self		1078182	0					
ANR	1078750	Identifier	hint		1078182	1					
ANR	1078751	Identifier	j		1078182	1					
ANR	1078752	Identifier	ag1		1078182	1					
ANR	1078753	ExpressionStatement	* p_aj = am	2317:32:96344:96354	1078182	3	True				
ANR	1078754	AssignmentExpression	* p_aj = am		1078182	0		=			
ANR	1078755	UnaryOperationExpression	* p_aj		1078182	0					
ANR	1078756	UnaryOperator	*		1078182	0					
ANR	1078757	Identifier	p_aj		1078182	1					
ANR	1078758	Identifier	am		1078182	1					
ANR	1078759	IfStatement	if ( * p_oj == aligned )		1078182	4					
ANR	1078760	Condition	* p_oj == aligned	2318:36:96392:96407	1078182	0	True				
ANR	1078761	EqualityExpression	* p_oj == aligned		1078182	0		==			
ANR	1078762	UnaryOperationExpression	* p_oj		1078182	0					
ANR	1078763	UnaryOperator	*		1078182	0					
ANR	1078764	Identifier	p_oj		1078182	1					
ANR	1078765	Identifier	aligned		1078182	1					
ANR	1078766	ExpressionStatement	* p_oj = weak	2319:36:96446:96458	1078182	1	True				
ANR	1078767	AssignmentExpression	* p_oj = weak		1078182	0		=			
ANR	1078768	UnaryOperationExpression	* p_oj		1078182	0					
ANR	1078769	UnaryOperator	*		1078182	0					
ANR	1078770	Identifier	p_oj		1078182	1					
ANR	1078771	Identifier	weak		1078182	1					
ANR	1078772	ExpressionStatement	* p_agj = agm	2320:32:96492:96504	1078182	5	True				
ANR	1078773	AssignmentExpression	* p_agj = agm		1078182	0		=			
ANR	1078774	UnaryOperationExpression	* p_agj		1078182	0					
ANR	1078775	UnaryOperator	*		1078182	0					
ANR	1078776	Identifier	p_agj		1078182	1					
ANR	1078777	Identifier	agm		1078182	1					
ANR	1078778	ReturnType	static void		1078182	1					
ANR	1078779	Identifier	t1_hinter__unfix_opposite_to_common		1078182	2					
ANR	1078780	ParameterList	t1_hinter * self		1078182	3					
ANR	1078781	Parameter	t1_hinter * self	2271:48:93775:93790	1078182	0	True				
ANR	1078782	ParameterType	t1_hinter *		1078182	0					
ANR	1078783	Identifier	self		1078182	1					
ANR	1078784	CFGEntryNode	ENTRY		1078182		True				
ANR	1078785	CFGExitNode	EXIT		1078182		True				
ANR	1078786	Symbol	agm		1078182						
ANR	1078787	Symbol	* p_agj		1078182						
ANR	1078788	Symbol	vstem		1078182						
ANR	1078789	Symbol	& self -> hint [ j ] . g0		1078182						
ANR	1078790	Symbol	& self -> hint [ j ] . g1		1078182						
ANR	1078791	Symbol	& self -> hint [ i ] . g1		1078182						
ANR	1078792	Symbol	* self -> hint		1078182						
ANR	1078793	Symbol	& self -> hint [ i ] . g0		1078182						
ANR	1078794	Symbol	md		1078182						
ANR	1078795	Symbol	aligned		1078182						
ANR	1078796	Symbol	* p_oi		1078182						
ANR	1078797	Symbol	& self -> hint [ j ] . aligned1		1078182						
ANR	1078798	Symbol	& self -> hint [ j ] . aligned0		1078182						
ANR	1078799	Symbol	p_ci		1078182						
ANR	1078800	Symbol	p_cj		1078182						
ANR	1078801	Symbol	self -> hint [ m ] . ag0		1078182						
ANR	1078802	Symbol	* self		1078182						
ANR	1078803	Symbol	self -> hint [ i ] . g1		1078182						
ANR	1078804	Symbol	self -> hint [ i ] . g0		1078182						
ANR	1078805	Symbol	am		1078182						
ANR	1078806	Symbol	* p_aj		1078182						
ANR	1078807	Symbol	* p_ai		1078182						
ANR	1078808	Symbol	p_oi		1078182						
ANR	1078809	Symbol	p_oj		1078182						
ANR	1078810	Symbol	weak		1078182						
ANR	1078811	Symbol	any_abs		1078182						
ANR	1078812	Symbol	self -> hint [ m ] . ag1		1078182						
ANR	1078813	Symbol	self -> hint [ j ] . type		1078182						
ANR	1078814	Symbol	hstem		1078182						
ANR	1078815	Symbol	& self -> hint [ i ] . aligned1		1078182						
ANR	1078816	Symbol	* p_oj		1078182						
ANR	1078817	Symbol	p_agj		1078182						
ANR	1078818	Symbol	p_ai		1078182						
ANR	1078819	Symbol	self -> hint [ i ] . type		1078182						
ANR	1078820	Symbol	& self -> hint [ i ] . aligned0		1078182						
ANR	1078821	Symbol	d		1078182						
ANR	1078822	Symbol	self -> hint		1078182						
ANR	1078823	Symbol	* * self		1078182						
ANR	1078824	Symbol	self -> hint [ j ] . g0		1078182						
ANR	1078825	Symbol	i		1078182						
ANR	1078826	Symbol	* p_ci		1078182						
ANR	1078827	Symbol	j		1078182						
ANR	1078828	Symbol	self -> hint [ j ] . g1		1078182						
ANR	1078829	Symbol	k		1078182						
ANR	1078830	Symbol	p_aj		1078182						
ANR	1078831	Symbol	m		1078182						
ANR	1078832	Symbol	n		1078182						
ANR	1078833	Symbol	* p_cj		1078182						
ANR	1078834	Symbol	& self -> hint [ j ] . ag0		1078182						
ANR	1078835	Symbol	& self -> hint [ j ] . ag1		1078182						
ANR	1078836	Symbol	self -> hint_count		1078182						
ANR	1078837	Symbol	* i		1078182						
ANR	1078838	Symbol	* j		1078182						
ANR	1078839	Symbol	* m		1078182						
ANR	1078840	Symbol	self		1078182						
ANR	1078841	Function	t1_hinter__compute_opposite_stem_coords	2330:0:96635:98735							
ANR	1078842	FunctionDef	t1_hinter__compute_opposite_stem_coords (t1_hinter * self)		1078841	0					
ANR	1078843	CompoundStatement		2331:0:96705:98735	1078841	0					
ANR	1078844	IdentifierDeclStatement	int i ;	2331:3:96709:96714	1078841	0	True				
ANR	1078845	IdentifierDecl	i		1078841	0					
ANR	1078846	IdentifierDeclType	int		1078841	0					
ANR	1078847	Identifier	i		1078841	1					
ANR	1078848	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		1078841	1					
ANR	1078849	ForInit	i = 0 ;	2333:9:96726:96731	1078841	0	True				
ANR	1078850	AssignmentExpression	i = 0		1078841	0		=			
ANR	1078851	Identifier	i		1078841	0					
ANR	1078852	PrimaryExpression	0		1078841	1					
ANR	1078853	Condition	i < self -> hint_count	2333:16:96733:96752	1078841	1	True				
ANR	1078854	RelationalExpression	i < self -> hint_count		1078841	0		<			
ANR	1078855	Identifier	i		1078841	0					
ANR	1078856	PtrMemberAccess	self -> hint_count		1078841	1					
ANR	1078857	Identifier	self		1078841	0					
ANR	1078858	Identifier	hint_count		1078841	1					
ANR	1078859	PostIncDecOperationExpression	i ++	2333:38:96755:96757	1078841	2	True				
ANR	1078860	Identifier	i		1078841	0					
ANR	1078861	IncDec	++		1078841	1					
ANR	1078862	IfStatement	if ( ( self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem ) )		1078841	3					
ANR	1078863	Condition	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem	2334:12:96772:96831	1078841	0	True				
ANR	1078864	OrExpression	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem		1078841	0		||			
ANR	1078865	EqualityExpression	self -> hint [ i ] . type == vstem		1078841	0		==			
ANR	1078866	MemberAccess	self -> hint [ i ] . type		1078841	0					
ANR	1078867	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1078868	PtrMemberAccess	self -> hint		1078841	0					
ANR	1078869	Identifier	self		1078841	0					
ANR	1078870	Identifier	hint		1078841	1					
ANR	1078871	Identifier	i		1078841	1					
ANR	1078872	Identifier	type		1078841	1					
ANR	1078873	Identifier	vstem		1078841	1					
ANR	1078874	EqualityExpression	self -> hint [ i ] . type == hstem		1078841	1		==			
ANR	1078875	MemberAccess	self -> hint [ i ] . type		1078841	0					
ANR	1078876	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1078877	PtrMemberAccess	self -> hint		1078841	0					
ANR	1078878	Identifier	self		1078841	0					
ANR	1078879	Identifier	hint		1078841	1					
ANR	1078880	Identifier	i		1078841	1					
ANR	1078881	Identifier	type		1078841	1					
ANR	1078882	Identifier	hstem		1078841	1					
ANR	1078883	CompoundStatement		9:12:390:413	1078841	1					
ANR	1078884	IdentifierDeclStatement	t1_glyph_space_coord ag0 = self -> hint [ i ] . ag0 ;	2335:12:96848:96892	1078841	0	True				
ANR	1078885	IdentifierDecl	ag0 = self -> hint [ i ] . ag0		1078841	0					
ANR	1078886	IdentifierDeclType	t1_glyph_space_coord		1078841	0					
ANR	1078887	Identifier	ag0		1078841	1					
ANR	1078888	AssignmentExpression	ag0 = self -> hint [ i ] . ag0		1078841	2		=			
ANR	1078889	Identifier	ag0		1078841	0					
ANR	1078890	MemberAccess	self -> hint [ i ] . ag0		1078841	1					
ANR	1078891	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1078892	PtrMemberAccess	self -> hint		1078841	0					
ANR	1078893	Identifier	self		1078841	0					
ANR	1078894	Identifier	hint		1078841	1					
ANR	1078895	Identifier	i		1078841	1					
ANR	1078896	Identifier	ag0		1078841	1					
ANR	1078897	IdentifierDeclStatement	t1_glyph_space_coord ag1 = self -> hint [ i ] . ag1 ;	2336:12:96906:96950	1078841	1	True				
ANR	1078898	IdentifierDecl	ag1 = self -> hint [ i ] . ag1		1078841	0					
ANR	1078899	IdentifierDeclType	t1_glyph_space_coord		1078841	0					
ANR	1078900	Identifier	ag1		1078841	1					
ANR	1078901	AssignmentExpression	ag1 = self -> hint [ i ] . ag1		1078841	2		=			
ANR	1078902	Identifier	ag1		1078841	0					
ANR	1078903	MemberAccess	self -> hint [ i ] . ag1		1078841	1					
ANR	1078904	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1078905	PtrMemberAccess	self -> hint		1078841	0					
ANR	1078906	Identifier	self		1078841	0					
ANR	1078907	Identifier	hint		1078841	1					
ANR	1078908	Identifier	i		1078841	1					
ANR	1078909	Identifier	ag1		1078841	1					
ANR	1078910	IdentifierDeclStatement	enum t1_align_type aligned0 = self -> hint [ i ] . aligned0 ;	2337:12:96964:97016	1078841	2	True				
ANR	1078911	IdentifierDecl	aligned0 = self -> hint [ i ] . aligned0		1078841	0					
ANR	1078912	IdentifierDeclType	enum t1_align_type		1078841	0					
ANR	1078913	Identifier	aligned0		1078841	1					
ANR	1078914	AssignmentExpression	aligned0 = self -> hint [ i ] . aligned0		1078841	2		=			
ANR	1078915	Identifier	aligned0		1078841	0					
ANR	1078916	MemberAccess	self -> hint [ i ] . aligned0		1078841	1					
ANR	1078917	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1078918	PtrMemberAccess	self -> hint		1078841	0					
ANR	1078919	Identifier	self		1078841	0					
ANR	1078920	Identifier	hint		1078841	1					
ANR	1078921	Identifier	i		1078841	1					
ANR	1078922	Identifier	aligned0		1078841	1					
ANR	1078923	IdentifierDeclStatement	enum t1_align_type aligned1 = self -> hint [ i ] . aligned1 ;	2338:12:97030:97082	1078841	3	True				
ANR	1078924	IdentifierDecl	aligned1 = self -> hint [ i ] . aligned1		1078841	0					
ANR	1078925	IdentifierDeclType	enum t1_align_type		1078841	0					
ANR	1078926	Identifier	aligned1		1078841	1					
ANR	1078927	AssignmentExpression	aligned1 = self -> hint [ i ] . aligned1		1078841	2		=			
ANR	1078928	Identifier	aligned1		1078841	0					
ANR	1078929	MemberAccess	self -> hint [ i ] . aligned1		1078841	1					
ANR	1078930	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1078931	PtrMemberAccess	self -> hint		1078841	0					
ANR	1078932	Identifier	self		1078841	0					
ANR	1078933	Identifier	hint		1078841	1					
ANR	1078934	Identifier	i		1078841	1					
ANR	1078935	Identifier	aligned1		1078841	1					
ANR	1078936	IdentifierDeclStatement	t1_glyph_space_coord gw ;	2339:12:97096:97119	1078841	4	True				
ANR	1078937	IdentifierDecl	gw		1078841	0					
ANR	1078938	IdentifierDeclType	t1_glyph_space_coord		1078841	0					
ANR	1078939	Identifier	gw		1078841	1					
ANR	1078940	ExpressionStatement	gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )	2341:12:97134:97183	1078841	5	True				
ANR	1078941	AssignmentExpression	gw = any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		1078841	0		=			
ANR	1078942	Identifier	gw		1078841	0					
ANR	1078943	CallExpression	any_abs ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 )		1078841	1					
ANR	1078944	Callee	any_abs		1078841	0					
ANR	1078945	Identifier	any_abs		1078841	0					
ANR	1078946	ArgumentList	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		1078841	1					
ANR	1078947	Argument	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		1078841	0					
ANR	1078948	AdditiveExpression	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		1078841	0		-			
ANR	1078949	MemberAccess	self -> hint [ i ] . g1		1078841	0					
ANR	1078950	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1078951	PtrMemberAccess	self -> hint		1078841	0					
ANR	1078952	Identifier	self		1078841	0					
ANR	1078953	Identifier	hint		1078841	1					
ANR	1078954	Identifier	i		1078841	1					
ANR	1078955	Identifier	g1		1078841	1					
ANR	1078956	MemberAccess	self -> hint [ i ] . g0		1078841	1					
ANR	1078957	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1078958	PtrMemberAccess	self -> hint		1078841	0					
ANR	1078959	Identifier	self		1078841	0					
ANR	1078960	Identifier	hint		1078841	1					
ANR	1078961	Identifier	i		1078841	1					
ANR	1078962	Identifier	g0		1078841	1					
ANR	1078963	ExpressionStatement	"t1_hinter__align_stem_width ( self , & gw , & self -> hint [ i ] )"	2342:12:97197:97251	1078841	6	True				
ANR	1078964	CallExpression	"t1_hinter__align_stem_width ( self , & gw , & self -> hint [ i ] )"		1078841	0					
ANR	1078965	Callee	t1_hinter__align_stem_width		1078841	0					
ANR	1078966	Identifier	t1_hinter__align_stem_width		1078841	0					
ANR	1078967	ArgumentList	self		1078841	1					
ANR	1078968	Argument	self		1078841	0					
ANR	1078969	Identifier	self		1078841	0					
ANR	1078970	Argument	& gw		1078841	1					
ANR	1078971	UnaryOperationExpression	& gw		1078841	0					
ANR	1078972	UnaryOperator	&		1078841	0					
ANR	1078973	Identifier	gw		1078841	1					
ANR	1078974	Argument	& self -> hint [ i ]		1078841	2					
ANR	1078975	UnaryOperationExpression	& self -> hint [ i ]		1078841	0					
ANR	1078976	UnaryOperator	&		1078841	0					
ANR	1078977	ArrayIndexing	self -> hint [ i ]		1078841	1					
ANR	1078978	PtrMemberAccess	self -> hint		1078841	0					
ANR	1078979	Identifier	self		1078841	0					
ANR	1078980	Identifier	hint		1078841	1					
ANR	1078981	Identifier	i		1078841	1					
ANR	1078982	IfStatement	if ( self -> hint [ i ] . g1 - self -> hint [ i ] . g0 < 0 )		1078841	7					
ANR	1078983	Condition	self -> hint [ i ] . g1 - self -> hint [ i ] . g0 < 0	2343:16:97269:97307	1078841	0	True				
ANR	1078984	RelationalExpression	self -> hint [ i ] . g1 - self -> hint [ i ] . g0 < 0		1078841	0		<			
ANR	1078985	AdditiveExpression	self -> hint [ i ] . g1 - self -> hint [ i ] . g0		1078841	0		-			
ANR	1078986	MemberAccess	self -> hint [ i ] . g1		1078841	0					
ANR	1078987	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1078988	PtrMemberAccess	self -> hint		1078841	0					
ANR	1078989	Identifier	self		1078841	0					
ANR	1078990	Identifier	hint		1078841	1					
ANR	1078991	Identifier	i		1078841	1					
ANR	1078992	Identifier	g1		1078841	1					
ANR	1078993	MemberAccess	self -> hint [ i ] . g0		1078841	1					
ANR	1078994	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1078995	PtrMemberAccess	self -> hint		1078841	0					
ANR	1078996	Identifier	self		1078841	0					
ANR	1078997	Identifier	hint		1078841	1					
ANR	1078998	Identifier	i		1078841	1					
ANR	1078999	Identifier	g0		1078841	1					
ANR	1079000	PrimaryExpression	0		1078841	1					
ANR	1079001	ExpressionStatement	gw = - gw	2344:16:97326:97334	1078841	1	True				
ANR	1079002	AssignmentExpression	gw = - gw		1078841	0		=			
ANR	1079003	Identifier	gw		1078841	0					
ANR	1079004	UnaryOperationExpression	- gw		1078841	1					
ANR	1079005	UnaryOperator	-		1078841	0					
ANR	1079006	Identifier	gw		1078841	1					
ANR	1079007	IfStatement	if ( aligned0 > aligned1 )		1078841	8					
ANR	1079008	Condition	aligned0 > aligned1	2345:16:97352:97370	1078841	0	True				
ANR	1079009	RelationalExpression	aligned0 > aligned1		1078841	0		>			
ANR	1079010	Identifier	aligned0		1078841	0					
ANR	1079011	Identifier	aligned1		1078841	1					
ANR	1079012	ExpressionStatement	ag1 = ag0 + gw	2346:16:97389:97403	1078841	1	True				
ANR	1079013	AssignmentExpression	ag1 = ag0 + gw		1078841	0		=			
ANR	1079014	Identifier	ag1		1078841	0					
ANR	1079015	AdditiveExpression	ag0 + gw		1078841	1		+			
ANR	1079016	Identifier	ag0		1078841	0					
ANR	1079017	Identifier	gw		1078841	1					
ANR	1079018	ElseStatement	else		1078841	0					
ANR	1079019	IfStatement	if ( aligned0 < aligned1 )		1078841	0					
ANR	1079020	Condition	aligned0 < aligned1	2347:21:97426:97444	1078841	0	True				
ANR	1079021	RelationalExpression	aligned0 < aligned1		1078841	0		<			
ANR	1079022	Identifier	aligned0		1078841	0					
ANR	1079023	Identifier	aligned1		1078841	1					
ANR	1079024	ExpressionStatement	ag0 = ag1 - gw	2348:16:97463:97477	1078841	1	True				
ANR	1079025	AssignmentExpression	ag0 = ag1 - gw		1078841	0		=			
ANR	1079026	Identifier	ag0		1078841	0					
ANR	1079027	AdditiveExpression	ag1 - gw		1078841	1		-			
ANR	1079028	Identifier	ag1		1078841	0					
ANR	1079029	Identifier	gw		1078841	1					
ANR	1079030	ElseStatement	else		1078841	0					
ANR	1079031	CompoundStatement		21:16:883:940	1078841	0					
ANR	1079032	IdentifierDeclStatement	t1_glyph_space_coord d0 = any_abs ( ag0 - self -> hint [ i ] . g0 ) ;	2350:16:97514:97571	1078841	0	True				
ANR	1079033	IdentifierDecl	d0 = any_abs ( ag0 - self -> hint [ i ] . g0 )		1078841	0					
ANR	1079034	IdentifierDeclType	t1_glyph_space_coord		1078841	0					
ANR	1079035	Identifier	d0		1078841	1					
ANR	1079036	AssignmentExpression	d0 = any_abs ( ag0 - self -> hint [ i ] . g0 )		1078841	2		=			
ANR	1079037	Identifier	d0		1078841	0					
ANR	1079038	CallExpression	any_abs ( ag0 - self -> hint [ i ] . g0 )		1078841	1					
ANR	1079039	Callee	any_abs		1078841	0					
ANR	1079040	Identifier	any_abs		1078841	0					
ANR	1079041	ArgumentList	ag0 - self -> hint [ i ] . g0		1078841	1					
ANR	1079042	Argument	ag0 - self -> hint [ i ] . g0		1078841	0					
ANR	1079043	AdditiveExpression	ag0 - self -> hint [ i ] . g0		1078841	0		-			
ANR	1079044	Identifier	ag0		1078841	0					
ANR	1079045	MemberAccess	self -> hint [ i ] . g0		1078841	1					
ANR	1079046	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1079047	PtrMemberAccess	self -> hint		1078841	0					
ANR	1079048	Identifier	self		1078841	0					
ANR	1079049	Identifier	hint		1078841	1					
ANR	1079050	Identifier	i		1078841	1					
ANR	1079051	Identifier	g0		1078841	1					
ANR	1079052	IdentifierDeclStatement	t1_glyph_space_coord d1 = any_abs ( ag1 - self -> hint [ i ] . g1 ) ;	2351:16:97589:97646	1078841	1	True				
ANR	1079053	IdentifierDecl	d1 = any_abs ( ag1 - self -> hint [ i ] . g1 )		1078841	0					
ANR	1079054	IdentifierDeclType	t1_glyph_space_coord		1078841	0					
ANR	1079055	Identifier	d1		1078841	1					
ANR	1079056	AssignmentExpression	d1 = any_abs ( ag1 - self -> hint [ i ] . g1 )		1078841	2		=			
ANR	1079057	Identifier	d1		1078841	0					
ANR	1079058	CallExpression	any_abs ( ag1 - self -> hint [ i ] . g1 )		1078841	1					
ANR	1079059	Callee	any_abs		1078841	0					
ANR	1079060	Identifier	any_abs		1078841	0					
ANR	1079061	ArgumentList	ag1 - self -> hint [ i ] . g1		1078841	1					
ANR	1079062	Argument	ag1 - self -> hint [ i ] . g1		1078841	0					
ANR	1079063	AdditiveExpression	ag1 - self -> hint [ i ] . g1		1078841	0		-			
ANR	1079064	Identifier	ag1		1078841	0					
ANR	1079065	MemberAccess	self -> hint [ i ] . g1		1078841	1					
ANR	1079066	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1079067	PtrMemberAccess	self -> hint		1078841	0					
ANR	1079068	Identifier	self		1078841	0					
ANR	1079069	Identifier	hint		1078841	1					
ANR	1079070	Identifier	i		1078841	1					
ANR	1079071	Identifier	g1		1078841	1					
ANR	1079072	IfStatement	if ( aligned0 == topzn || aligned1 == topzn )		1078841	2					
ANR	1079073	Condition	aligned0 == topzn || aligned1 == topzn	2353:20:97669:97706	1078841	0	True				
ANR	1079074	OrExpression	aligned0 == topzn || aligned1 == topzn		1078841	0		||			
ANR	1079075	EqualityExpression	aligned0 == topzn		1078841	0		==			
ANR	1079076	Identifier	aligned0		1078841	0					
ANR	1079077	Identifier	topzn		1078841	1					
ANR	1079078	EqualityExpression	aligned1 == topzn		1078841	1		==			
ANR	1079079	Identifier	aligned1		1078841	0					
ANR	1079080	Identifier	topzn		1078841	1					
ANR	1079081	IfStatement	if ( gw > 0 )		1078841	1					
ANR	1079082	Condition	gw > 0	2354:24:97733:97738	1078841	0	True				
ANR	1079083	RelationalExpression	gw > 0		1078841	0		>			
ANR	1079084	Identifier	gw		1078841	0					
ANR	1079085	PrimaryExpression	0		1078841	1					
ANR	1079086	ExpressionStatement	ag0 = ag1 - gw	2355:24:97765:97779	1078841	1	True				
ANR	1079087	AssignmentExpression	ag0 = ag1 - gw		1078841	0		=			
ANR	1079088	Identifier	ag0		1078841	0					
ANR	1079089	AdditiveExpression	ag1 - gw		1078841	1		-			
ANR	1079090	Identifier	ag1		1078841	0					
ANR	1079091	Identifier	gw		1078841	1					
ANR	1079092	ElseStatement	else		1078841	0					
ANR	1079093	ExpressionStatement	ag1 = ag0 + gw	2357:24:97830:97844	1078841	0	True				
ANR	1079094	AssignmentExpression	ag1 = ag0 + gw		1078841	0		=			
ANR	1079095	Identifier	ag1		1078841	0					
ANR	1079096	AdditiveExpression	ag0 + gw		1078841	1		+			
ANR	1079097	Identifier	ag0		1078841	0					
ANR	1079098	Identifier	gw		1078841	1					
ANR	1079099	ElseStatement	else		1078841	0					
ANR	1079100	IfStatement	"if ( self -> hint [ i ] . type == hstem && min ( any_abs ( self -> hint [ i ] . g0 - self -> ymid ) , any_abs ( self -> hint [ i ] . g1 - self -> ymid ) ) > ( self -> ymax - self -> ymin ) / 5 )"		1078841	0					
ANR	1079101	Condition	"self -> hint [ i ] . type == hstem && min ( any_abs ( self -> hint [ i ] . g0 - self -> ymid ) , any_abs ( self -> hint [ i ] . g1 - self -> ymid ) ) > ( self -> ymax - self -> ymin ) / 5"	2363:25:98073:98266	1078841	0	True				
ANR	1079102	AndExpression	"self -> hint [ i ] . type == hstem && min ( any_abs ( self -> hint [ i ] . g0 - self -> ymid ) , any_abs ( self -> hint [ i ] . g1 - self -> ymid ) ) > ( self -> ymax - self -> ymin ) / 5"		1078841	0		&&			
ANR	1079103	EqualityExpression	self -> hint [ i ] . type == hstem		1078841	0		==			
ANR	1079104	MemberAccess	self -> hint [ i ] . type		1078841	0					
ANR	1079105	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1079106	PtrMemberAccess	self -> hint		1078841	0					
ANR	1079107	Identifier	self		1078841	0					
ANR	1079108	Identifier	hint		1078841	1					
ANR	1079109	Identifier	i		1078841	1					
ANR	1079110	Identifier	type		1078841	1					
ANR	1079111	Identifier	hstem		1078841	1					
ANR	1079112	RelationalExpression	"min ( any_abs ( self -> hint [ i ] . g0 - self -> ymid ) , any_abs ( self -> hint [ i ] . g1 - self -> ymid ) ) > ( self -> ymax - self -> ymin ) / 5"		1078841	1		>			
ANR	1079113	CallExpression	"min ( any_abs ( self -> hint [ i ] . g0 - self -> ymid ) , any_abs ( self -> hint [ i ] . g1 - self -> ymid ) )"		1078841	0					
ANR	1079114	Callee	min		1078841	0					
ANR	1079115	Identifier	min		1078841	0					
ANR	1079116	ArgumentList	any_abs ( self -> hint [ i ] . g0 - self -> ymid )		1078841	1					
ANR	1079117	Argument	any_abs ( self -> hint [ i ] . g0 - self -> ymid )		1078841	0					
ANR	1079118	CallExpression	any_abs ( self -> hint [ i ] . g0 - self -> ymid )		1078841	0					
ANR	1079119	Callee	any_abs		1078841	0					
ANR	1079120	Identifier	any_abs		1078841	0					
ANR	1079121	ArgumentList	self -> hint [ i ] . g0 - self -> ymid		1078841	1					
ANR	1079122	Argument	self -> hint [ i ] . g0 - self -> ymid		1078841	0					
ANR	1079123	AdditiveExpression	self -> hint [ i ] . g0 - self -> ymid		1078841	0		-			
ANR	1079124	MemberAccess	self -> hint [ i ] . g0		1078841	0					
ANR	1079125	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1079126	PtrMemberAccess	self -> hint		1078841	0					
ANR	1079127	Identifier	self		1078841	0					
ANR	1079128	Identifier	hint		1078841	1					
ANR	1079129	Identifier	i		1078841	1					
ANR	1079130	Identifier	g0		1078841	1					
ANR	1079131	PtrMemberAccess	self -> ymid		1078841	1					
ANR	1079132	Identifier	self		1078841	0					
ANR	1079133	Identifier	ymid		1078841	1					
ANR	1079134	Argument	any_abs ( self -> hint [ i ] . g1 - self -> ymid )		1078841	1					
ANR	1079135	CallExpression	any_abs ( self -> hint [ i ] . g1 - self -> ymid )		1078841	0					
ANR	1079136	Callee	any_abs		1078841	0					
ANR	1079137	Identifier	any_abs		1078841	0					
ANR	1079138	ArgumentList	self -> hint [ i ] . g1 - self -> ymid		1078841	1					
ANR	1079139	Argument	self -> hint [ i ] . g1 - self -> ymid		1078841	0					
ANR	1079140	AdditiveExpression	self -> hint [ i ] . g1 - self -> ymid		1078841	0		-			
ANR	1079141	MemberAccess	self -> hint [ i ] . g1		1078841	0					
ANR	1079142	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1079143	PtrMemberAccess	self -> hint		1078841	0					
ANR	1079144	Identifier	self		1078841	0					
ANR	1079145	Identifier	hint		1078841	1					
ANR	1079146	Identifier	i		1078841	1					
ANR	1079147	Identifier	g1		1078841	1					
ANR	1079148	PtrMemberAccess	self -> ymid		1078841	1					
ANR	1079149	Identifier	self		1078841	0					
ANR	1079150	Identifier	ymid		1078841	1					
ANR	1079151	MultiplicativeExpression	( self -> ymax - self -> ymin ) / 5		1078841	1		/			
ANR	1079152	AdditiveExpression	self -> ymax - self -> ymin		1078841	0		-			
ANR	1079153	PtrMemberAccess	self -> ymax		1078841	0					
ANR	1079154	Identifier	self		1078841	0					
ANR	1079155	Identifier	ymax		1078841	1					
ANR	1079156	PtrMemberAccess	self -> ymin		1078841	1					
ANR	1079157	Identifier	self		1078841	0					
ANR	1079158	Identifier	ymin		1078841	1					
ANR	1079159	PrimaryExpression	5		1078841	1					
ANR	1079160	CompoundStatement		35:55:1563:1563	1078841	1					
ANR	1079161	IfStatement	if ( ( self -> hint [ i ] . g1 + self -> hint [ i ] . g0 ) / 2 > self -> ymid )		1078841	0					
ANR	1079162	Condition	( self -> hint [ i ] . g1 + self -> hint [ i ] . g0 ) / 2 > self -> ymid	2366:24:98295:98348	1078841	0	True				
ANR	1079163	RelationalExpression	( self -> hint [ i ] . g1 + self -> hint [ i ] . g0 ) / 2 > self -> ymid		1078841	0		>			
ANR	1079164	MultiplicativeExpression	( self -> hint [ i ] . g1 + self -> hint [ i ] . g0 ) / 2		1078841	0		/			
ANR	1079165	AdditiveExpression	self -> hint [ i ] . g1 + self -> hint [ i ] . g0		1078841	0		+			
ANR	1079166	MemberAccess	self -> hint [ i ] . g1		1078841	0					
ANR	1079167	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1079168	PtrMemberAccess	self -> hint		1078841	0					
ANR	1079169	Identifier	self		1078841	0					
ANR	1079170	Identifier	hint		1078841	1					
ANR	1079171	Identifier	i		1078841	1					
ANR	1079172	Identifier	g1		1078841	1					
ANR	1079173	MemberAccess	self -> hint [ i ] . g0		1078841	1					
ANR	1079174	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1079175	PtrMemberAccess	self -> hint		1078841	0					
ANR	1079176	Identifier	self		1078841	0					
ANR	1079177	Identifier	hint		1078841	1					
ANR	1079178	Identifier	i		1078841	1					
ANR	1079179	Identifier	g0		1078841	1					
ANR	1079180	PrimaryExpression	2		1078841	1					
ANR	1079181	PtrMemberAccess	self -> ymid		1078841	1					
ANR	1079182	Identifier	self		1078841	0					
ANR	1079183	Identifier	ymid		1078841	1					
ANR	1079184	ExpressionStatement	ag0 = ag1 - gw	2367:24:98375:98389	1078841	1	True				
ANR	1079185	AssignmentExpression	ag0 = ag1 - gw		1078841	0		=			
ANR	1079186	Identifier	ag0		1078841	0					
ANR	1079187	AdditiveExpression	ag1 - gw		1078841	1		-			
ANR	1079188	Identifier	ag1		1078841	0					
ANR	1079189	Identifier	gw		1078841	1					
ANR	1079190	ElseStatement	else		1078841	0					
ANR	1079191	ExpressionStatement	ag1 = ag0 + gw	2369:24:98440:98454	1078841	0	True				
ANR	1079192	AssignmentExpression	ag1 = ag0 + gw		1078841	0		=			
ANR	1079193	Identifier	ag1		1078841	0					
ANR	1079194	AdditiveExpression	ag0 + gw		1078841	1		+			
ANR	1079195	Identifier	ag0		1078841	0					
ANR	1079196	Identifier	gw		1078841	1					
ANR	1079197	ElseStatement	else		1078841	0					
ANR	1079198	CompoundStatement		40:23:1773:1773	1078841	0					
ANR	1079199	IfStatement	if ( d0 < d1 )		1078841	0					
ANR	1079200	Condition	d0 < d1	2371:24:98505:98511	1078841	0	True				
ANR	1079201	RelationalExpression	d0 < d1		1078841	0		<			
ANR	1079202	Identifier	d0		1078841	0					
ANR	1079203	Identifier	d1		1078841	1					
ANR	1079204	ExpressionStatement	ag1 = ag0 + gw	2372:24:98538:98552	1078841	1	True				
ANR	1079205	AssignmentExpression	ag1 = ag0 + gw		1078841	0		=			
ANR	1079206	Identifier	ag1		1078841	0					
ANR	1079207	AdditiveExpression	ag0 + gw		1078841	1		+			
ANR	1079208	Identifier	ag0		1078841	0					
ANR	1079209	Identifier	gw		1078841	1					
ANR	1079210	ElseStatement	else		1078841	0					
ANR	1079211	ExpressionStatement	ag0 = ag1 - gw	2374:24:98603:98617	1078841	0	True				
ANR	1079212	AssignmentExpression	ag0 = ag1 - gw		1078841	0		=			
ANR	1079213	Identifier	ag0		1078841	0					
ANR	1079214	AdditiveExpression	ag1 - gw		1078841	1		-			
ANR	1079215	Identifier	ag1		1078841	0					
ANR	1079216	Identifier	gw		1078841	1					
ANR	1079217	ExpressionStatement	self -> hint [ i ] . ag0 = ag0	2377:12:98663:98686	1078841	9	True				
ANR	1079218	AssignmentExpression	self -> hint [ i ] . ag0 = ag0		1078841	0		=			
ANR	1079219	MemberAccess	self -> hint [ i ] . ag0		1078841	0					
ANR	1079220	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1079221	PtrMemberAccess	self -> hint		1078841	0					
ANR	1079222	Identifier	self		1078841	0					
ANR	1079223	Identifier	hint		1078841	1					
ANR	1079224	Identifier	i		1078841	1					
ANR	1079225	Identifier	ag0		1078841	1					
ANR	1079226	Identifier	ag0		1078841	1					
ANR	1079227	ExpressionStatement	self -> hint [ i ] . ag1 = ag1	2378:12:98700:98723	1078841	10	True				
ANR	1079228	AssignmentExpression	self -> hint [ i ] . ag1 = ag1		1078841	0		=			
ANR	1079229	MemberAccess	self -> hint [ i ] . ag1		1078841	0					
ANR	1079230	ArrayIndexing	self -> hint [ i ]		1078841	0					
ANR	1079231	PtrMemberAccess	self -> hint		1078841	0					
ANR	1079232	Identifier	self		1078841	0					
ANR	1079233	Identifier	hint		1078841	1					
ANR	1079234	Identifier	i		1078841	1					
ANR	1079235	Identifier	ag1		1078841	1					
ANR	1079236	Identifier	ag1		1078841	1					
ANR	1079237	ReturnType	static void		1078841	1					
ANR	1079238	Identifier	t1_hinter__compute_opposite_stem_coords		1078841	2					
ANR	1079239	ParameterList	t1_hinter * self		1078841	3					
ANR	1079240	Parameter	t1_hinter * self	2330:52:96687:96702	1078841	0	True				
ANR	1079241	ParameterType	t1_hinter *		1078841	0					
ANR	1079242	Identifier	self		1078841	1					
ANR	1079243	CFGEntryNode	ENTRY		1078841		True				
ANR	1079244	CFGExitNode	EXIT		1078841		True				
ANR	1079245	Symbol	self -> hint [ i ] . aligned1		1078841						
ANR	1079246	Symbol	self -> hint [ i ] . aligned0		1078841						
ANR	1079247	Symbol	self -> ymid		1078841						
ANR	1079248	Symbol	ag1		1078841						
ANR	1079249	Symbol	vstem		1078841						
ANR	1079250	Symbol	ag0		1078841						
ANR	1079251	Symbol	d0		1078841						
ANR	1079252	Symbol	d1		1078841						
ANR	1079253	Symbol	* self -> hint		1078841						
ANR	1079254	Symbol	min		1078841						
ANR	1079255	Symbol	any_abs		1078841						
ANR	1079256	Symbol	self -> ymin		1078841						
ANR	1079257	Symbol	hstem		1078841						
ANR	1079258	Symbol	topzn		1078841						
ANR	1079259	Symbol	self -> hint [ i ] . type		1078841						
ANR	1079260	Symbol	self -> hint		1078841						
ANR	1079261	Symbol	* * self		1078841						
ANR	1079262	Symbol	* self		1078841						
ANR	1079263	Symbol	self -> hint [ i ] . g1		1078841						
ANR	1079264	Symbol	i		1078841						
ANR	1079265	Symbol	self -> hint [ i ] . g0		1078841						
ANR	1079266	Symbol	self -> ymax		1078841						
ANR	1079267	Symbol	gw		1078841						
ANR	1079268	Symbol	self -> hint_count		1078841						
ANR	1079269	Symbol	aligned0		1078841						
ANR	1079270	Symbol	* i		1078841						
ANR	1079271	Symbol	self -> hint [ i ] . ag0		1078841						
ANR	1079272	Symbol	aligned1		1078841						
ANR	1079273	Symbol	self -> hint [ i ] . ag1		1078841						
ANR	1079274	Symbol	self		1078841						
ANR	1079275	Symbol	& gw		1078841						
ANR	1079276	Function	t1_hinter__store_hint_applying	2382:0:98738:99054							
ANR	1079277	FunctionDef	"t1_hinter__store_hint_applying (t1_hinter * self , t1_hint * hint , int pole_index)"		1079276	0					
ANR	1079278	CompoundStatement		2383:0:98829:99054	1079276	0					
ANR	1079279	IdentifierDeclStatement	t1_hint_applying * ha ;	2384:4:98835:98855	1079276	0	True				
ANR	1079280	IdentifierDecl	* ha		1079276	0					
ANR	1079281	IdentifierDeclType	t1_hint_applying *		1079276	0					
ANR	1079282	Identifier	ha		1079276	1					
ANR	1079283	IdentifierDeclStatement	"int code = t1_hinter__can_add_hint_applying ( self , & ha ) ;"	2385:4:98861:98915	1079276	1	True				
ANR	1079284	IdentifierDecl	"code = t1_hinter__can_add_hint_applying ( self , & ha )"		1079276	0					
ANR	1079285	IdentifierDeclType	int		1079276	0					
ANR	1079286	Identifier	code		1079276	1					
ANR	1079287	AssignmentExpression	"code = t1_hinter__can_add_hint_applying ( self , & ha )"		1079276	2		=			
ANR	1079288	Identifier	code		1079276	0					
ANR	1079289	CallExpression	"t1_hinter__can_add_hint_applying ( self , & ha )"		1079276	1					
ANR	1079290	Callee	t1_hinter__can_add_hint_applying		1079276	0					
ANR	1079291	Identifier	t1_hinter__can_add_hint_applying		1079276	0					
ANR	1079292	ArgumentList	self		1079276	1					
ANR	1079293	Argument	self		1079276	0					
ANR	1079294	Identifier	self		1079276	0					
ANR	1079295	Argument	& ha		1079276	1					
ANR	1079296	UnaryOperationExpression	& ha		1079276	0					
ANR	1079297	UnaryOperator	&		1079276	0					
ANR	1079298	Identifier	ha		1079276	1					
ANR	1079299	IfStatement	if ( code < 0 )		1079276	2					
ANR	1079300	Condition	code < 0	2387:8:98926:98933	1079276	0	True				
ANR	1079301	RelationalExpression	code < 0		1079276	0		<			
ANR	1079302	Identifier	code		1079276	0					
ANR	1079303	PrimaryExpression	0		1079276	1					
ANR	1079304	ReturnStatement	return code ;	2388:8:98944:98955	1079276	1	True				
ANR	1079305	Identifier	code		1079276	0					
ANR	1079306	ExpressionStatement	ha -> pole = pole_index	2389:4:98961:98982	1079276	3	True				
ANR	1079307	AssignmentExpression	ha -> pole = pole_index		1079276	0		=			
ANR	1079308	PtrMemberAccess	ha -> pole		1079276	0					
ANR	1079309	Identifier	ha		1079276	0					
ANR	1079310	Identifier	pole		1079276	1					
ANR	1079311	Identifier	pole_index		1079276	1					
ANR	1079312	ExpressionStatement	ha -> opposite = - 1	2390:4:98988:99005	1079276	4	True				
ANR	1079313	AssignmentExpression	ha -> opposite = - 1		1079276	0		=			
ANR	1079314	PtrMemberAccess	ha -> opposite		1079276	0					
ANR	1079315	Identifier	ha		1079276	0					
ANR	1079316	Identifier	opposite		1079276	1					
ANR	1079317	UnaryOperationExpression	- 1		1079276	1					
ANR	1079318	UnaryOperator	-		1079276	0					
ANR	1079319	PrimaryExpression	1		1079276	1					
ANR	1079320	ExpressionStatement	self -> hint_applying_count ++	2391:4:99011:99038	1079276	5	True				
ANR	1079321	PostIncDecOperationExpression	self -> hint_applying_count ++		1079276	0					
ANR	1079322	PtrMemberAccess	self -> hint_applying_count		1079276	0					
ANR	1079323	Identifier	self		1079276	0					
ANR	1079324	Identifier	hint_applying_count		1079276	1					
ANR	1079325	IncDec	++		1079276	1					
ANR	1079326	ReturnStatement	return 0 ;	2392:4:99044:99052	1079276	6	True				
ANR	1079327	PrimaryExpression	0		1079276	0					
ANR	1079328	ReturnType	static int		1079276	1					
ANR	1079329	Identifier	t1_hinter__store_hint_applying		1079276	2					
ANR	1079330	ParameterList	"t1_hinter * self , t1_hint * hint , int pole_index"		1079276	3					
ANR	1079331	Parameter	t1_hinter * self	2382:42:98780:98795	1079276	0	True				
ANR	1079332	ParameterType	t1_hinter *		1079276	0					
ANR	1079333	Identifier	self		1079276	1					
ANR	1079334	Parameter	t1_hint * hint	2382:60:98798:98810	1079276	1	True				
ANR	1079335	ParameterType	t1_hint *		1079276	0					
ANR	1079336	Identifier	hint		1079276	1					
ANR	1079337	Parameter	int pole_index	2382:75:98813:98826	1079276	2	True				
ANR	1079338	ParameterType	int		1079276	0					
ANR	1079339	Identifier	pole_index		1079276	1					
ANR	1079340	CFGEntryNode	ENTRY		1079276		True				
ANR	1079341	CFGExitNode	EXIT		1079276		True				
ANR	1079342	Symbol	self -> hint_applying_count		1079276						
ANR	1079343	Symbol	pole_index		1079276						
ANR	1079344	Symbol	& ha		1079276						
ANR	1079345	Symbol	code		1079276						
ANR	1079346	Symbol	ha -> opposite		1079276						
ANR	1079347	Symbol	ha -> pole		1079276						
ANR	1079348	Symbol	* self		1079276						
ANR	1079349	Symbol	hint		1079276						
ANR	1079350	Symbol	t1_hinter__can_add_hint_applying		1079276						
ANR	1079351	Symbol	self		1079276						
ANR	1079352	Symbol	ha		1079276						
ANR	1079353	Symbol	* ha		1079276						
ANR	1079354	Function	t1_hinter__align_stem_poles	2395:0:99057:103349							
ANR	1079355	FunctionDef	t1_hinter__align_stem_poles (t1_hinter * self)		1079354	0					
ANR	1079356	CompoundStatement		2396:0:99114:103349	1079354	0					
ANR	1079357	IdentifierDeclStatement	"int i , j , k ;"	2396:3:99118:99129	1079354	0	True				
ANR	1079358	IdentifierDecl	i		1079354	0					
ANR	1079359	IdentifierDeclType	int		1079354	0					
ANR	1079360	Identifier	i		1079354	1					
ANR	1079361	IdentifierDecl	j		1079354	1					
ANR	1079362	IdentifierDeclType	int		1079354	0					
ANR	1079363	Identifier	j		1079354	1					
ANR	1079364	IdentifierDecl	k		1079354	2					
ANR	1079365	IdentifierDeclType	int		1079354	0					
ANR	1079366	Identifier	k		1079354	1					
ANR	1079367	IdentifierDeclStatement	t1_glyph_space_coord const fuzz = self -> blue_fuzz ;	2397:4:99135:99184	1079354	1	True				
ANR	1079368	IdentifierDecl	fuzz = self -> blue_fuzz		1079354	0					
ANR	1079369	IdentifierDeclType	t1_glyph_space_coord const		1079354	0					
ANR	1079370	Identifier	fuzz		1079354	1					
ANR	1079371	AssignmentExpression	fuzz = self -> blue_fuzz		1079354	2		=			
ANR	1079372	Identifier	fuzz		1079354	0					
ANR	1079373	PtrMemberAccess	self -> blue_fuzz		1079354	1					
ANR	1079374	Identifier	self		1079354	0					
ANR	1079375	Identifier	blue_fuzz		1079354	1					
ANR	1079376	IdentifierDeclStatement	int code = 0 ;	2398:4:99217:99229	1079354	2	True				
ANR	1079377	IdentifierDecl	code = 0		1079354	0					
ANR	1079378	IdentifierDeclType	int		1079354	0					
ANR	1079379	Identifier	code		1079354	1					
ANR	1079380	AssignmentExpression	code = 0		1079354	2		=			
ANR	1079381	Identifier	code		1079354	0					
ANR	1079382	PrimaryExpression	0		1079354	1					
ANR	1079383	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		1079354	3					
ANR	1079384	ForInit	i = 0 ;	2400:9:99241:99246	1079354	0	True				
ANR	1079385	AssignmentExpression	i = 0		1079354	0		=			
ANR	1079386	Identifier	i		1079354	0					
ANR	1079387	PrimaryExpression	0		1079354	1					
ANR	1079388	Condition	i < self -> hint_count	2400:16:99248:99267	1079354	1	True				
ANR	1079389	RelationalExpression	i < self -> hint_count		1079354	0		<			
ANR	1079390	Identifier	i		1079354	0					
ANR	1079391	PtrMemberAccess	self -> hint_count		1079354	1					
ANR	1079392	Identifier	self		1079354	0					
ANR	1079393	Identifier	hint_count		1079354	1					
ANR	1079394	PostIncDecOperationExpression	i ++	2400:38:99270:99272	1079354	2	True				
ANR	1079395	Identifier	i		1079354	0					
ANR	1079396	IncDec	++		1079354	1					
ANR	1079397	IfStatement	if ( self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem )		1079354	3					
ANR	1079398	Condition	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem	2401:12:99287:99344	1079354	0	True				
ANR	1079399	OrExpression	self -> hint [ i ] . type == vstem || self -> hint [ i ] . type == hstem		1079354	0		||			
ANR	1079400	EqualityExpression	self -> hint [ i ] . type == vstem		1079354	0		==			
ANR	1079401	MemberAccess	self -> hint [ i ] . type		1079354	0					
ANR	1079402	ArrayIndexing	self -> hint [ i ]		1079354	0					
ANR	1079403	PtrMemberAccess	self -> hint		1079354	0					
ANR	1079404	Identifier	self		1079354	0					
ANR	1079405	Identifier	hint		1079354	1					
ANR	1079406	Identifier	i		1079354	1					
ANR	1079407	Identifier	type		1079354	1					
ANR	1079408	Identifier	vstem		1079354	1					
ANR	1079409	EqualityExpression	self -> hint [ i ] . type == hstem		1079354	1		==			
ANR	1079410	MemberAccess	self -> hint [ i ] . type		1079354	0					
ANR	1079411	ArrayIndexing	self -> hint [ i ]		1079354	0					
ANR	1079412	PtrMemberAccess	self -> hint		1079354	0					
ANR	1079413	Identifier	self		1079354	0					
ANR	1079414	Identifier	hint		1079354	1					
ANR	1079415	Identifier	i		1079354	1					
ANR	1079416	Identifier	type		1079354	1					
ANR	1079417	Identifier	hstem		1079354	1					
ANR	1079418	CompoundStatement		9:12:358:392	1079354	1					
ANR	1079419	IdentifierDeclStatement	t1_hint * hint = & self -> hint [ i ] ;	2402:12:99361:99392	1079354	0	True				
ANR	1079420	IdentifierDecl	* hint = & self -> hint [ i ]		1079354	0					
ANR	1079421	IdentifierDeclType	t1_hint *		1079354	0					
ANR	1079422	Identifier	hint		1079354	1					
ANR	1079423	AssignmentExpression	* hint = & self -> hint [ i ]		1079354	2		=			
ANR	1079424	Identifier	hint		1079354	0					
ANR	1079425	UnaryOperationExpression	& self -> hint [ i ]		1079354	1					
ANR	1079426	UnaryOperator	&		1079354	0					
ANR	1079427	ArrayIndexing	self -> hint [ i ]		1079354	1					
ANR	1079428	PtrMemberAccess	self -> hint		1079354	0					
ANR	1079429	Identifier	self		1079354	0					
ANR	1079430	Identifier	hint		1079354	1					
ANR	1079431	Identifier	i		1079354	1					
ANR	1079432	IdentifierDeclStatement	"t1_glyph_space_coord ag0 = hint -> ag0 , ag1 = hint -> ag1 ;"	2403:12:99406:99459	1079354	1	True				
ANR	1079433	IdentifierDecl	ag0 = hint -> ag0		1079354	0					
ANR	1079434	IdentifierDeclType	t1_glyph_space_coord		1079354	0					
ANR	1079435	Identifier	ag0		1079354	1					
ANR	1079436	AssignmentExpression	ag0 = hint -> ag0		1079354	2		=			
ANR	1079437	Identifier	ag0		1079354	0					
ANR	1079438	PtrMemberAccess	hint -> ag0		1079354	1					
ANR	1079439	Identifier	hint		1079354	0					
ANR	1079440	Identifier	ag0		1079354	1					
ANR	1079441	IdentifierDecl	ag1 = hint -> ag1		1079354	1					
ANR	1079442	IdentifierDeclType	t1_glyph_space_coord		1079354	0					
ANR	1079443	Identifier	ag1		1079354	1					
ANR	1079444	AssignmentExpression	ag1 = hint -> ag1		1079354	2		=			
ANR	1079445	Identifier	ag1		1079354	0					
ANR	1079446	PtrMemberAccess	hint -> ag1		1079354	1					
ANR	1079447	Identifier	hint		1079354	0					
ANR	1079448	Identifier	ag1		1079354	1					
ANR	1079449	IdentifierDeclStatement	bool horiz = ( hint -> type == hstem ) ;	2404:12:99473:99507	1079354	2	True				
ANR	1079450	IdentifierDecl	horiz = ( hint -> type == hstem )		1079354	0					
ANR	1079451	IdentifierDeclType	bool		1079354	0					
ANR	1079452	Identifier	horiz		1079354	1					
ANR	1079453	AssignmentExpression	horiz = ( hint -> type == hstem )		1079354	2		=			
ANR	1079454	Identifier	horiz		1079354	0					
ANR	1079455	EqualityExpression	hint -> type == hstem		1079354	1		==			
ANR	1079456	PtrMemberAccess	hint -> type		1079354	0					
ANR	1079457	Identifier	hint		1079354	0					
ANR	1079458	Identifier	type		1079354	1					
ANR	1079459	Identifier	hstem		1079354	1					
ANR	1079460	ExpressionStatement	self -> hint_applying_count = 0	2407:12:99618:99647	1079354	3	True				
ANR	1079461	AssignmentExpression	self -> hint_applying_count = 0		1079354	0		=			
ANR	1079462	PtrMemberAccess	self -> hint_applying_count		1079354	0					
ANR	1079463	Identifier	self		1079354	0					
ANR	1079464	Identifier	hint_applying_count		1079354	1					
ANR	1079465	PrimaryExpression	0		1079354	1					
ANR	1079466	ForStatement	for ( k = self -> hint [ i ] . range_index ; k != - 1 ; k = self -> hint_range [ k ] . next )		1079354	4					
ANR	1079467	ForInit	k = self -> hint [ i ] . range_index ;	2408:17:99666:99695	1079354	0	True				
ANR	1079468	AssignmentExpression	k = self -> hint [ i ] . range_index		1079354	0		=			
ANR	1079469	Identifier	k		1079354	0					
ANR	1079470	MemberAccess	self -> hint [ i ] . range_index		1079354	1					
ANR	1079471	ArrayIndexing	self -> hint [ i ]		1079354	0					
ANR	1079472	PtrMemberAccess	self -> hint		1079354	0					
ANR	1079473	Identifier	self		1079354	0					
ANR	1079474	Identifier	hint		1079354	1					
ANR	1079475	Identifier	i		1079354	1					
ANR	1079476	Identifier	range_index		1079354	1					
ANR	1079477	Condition	k != - 1	2408:48:99697:99703	1079354	1	True				
ANR	1079478	EqualityExpression	k != - 1		1079354	0		!=			
ANR	1079479	Identifier	k		1079354	0					
ANR	1079480	UnaryOperationExpression	- 1		1079354	1					
ANR	1079481	UnaryOperator	-		1079354	0					
ANR	1079482	PrimaryExpression	1		1079354	1					
ANR	1079483	AssignmentExpression	k = self -> hint_range [ k ] . next	2408:57:99706:99733	1079354	2	True	=			
ANR	1079484	Identifier	k		1079354	0					
ANR	1079485	MemberAccess	self -> hint_range [ k ] . next		1079354	1					
ANR	1079486	ArrayIndexing	self -> hint_range [ k ]		1079354	0					
ANR	1079487	PtrMemberAccess	self -> hint_range		1079354	0					
ANR	1079488	Identifier	self		1079354	0					
ANR	1079489	Identifier	hint_range		1079354	1					
ANR	1079490	Identifier	k		1079354	1					
ANR	1079491	Identifier	next		1079354	1					
ANR	1079492	CompoundStatement		15:16:706:755	1079354	3					
ANR	1079493	IdentifierDeclStatement	int beg_range_pole = self -> hint_range [ k ] . beg_pole ;	2409:16:99754:99803	1079354	0	True				
ANR	1079494	IdentifierDecl	beg_range_pole = self -> hint_range [ k ] . beg_pole		1079354	0					
ANR	1079495	IdentifierDeclType	int		1079354	0					
ANR	1079496	Identifier	beg_range_pole		1079354	1					
ANR	1079497	AssignmentExpression	beg_range_pole = self -> hint_range [ k ] . beg_pole		1079354	2		=			
ANR	1079498	Identifier	beg_range_pole		1079354	0					
ANR	1079499	MemberAccess	self -> hint_range [ k ] . beg_pole		1079354	1					
ANR	1079500	ArrayIndexing	self -> hint_range [ k ]		1079354	0					
ANR	1079501	PtrMemberAccess	self -> hint_range		1079354	0					
ANR	1079502	Identifier	self		1079354	0					
ANR	1079503	Identifier	hint_range		1079354	1					
ANR	1079504	Identifier	k		1079354	1					
ANR	1079505	Identifier	beg_pole		1079354	1					
ANR	1079506	IdentifierDeclStatement	int end_range_pole = self -> hint_range [ k ] . end_pole ;	2410:16:99821:99870	1079354	1	True				
ANR	1079507	IdentifierDecl	end_range_pole = self -> hint_range [ k ] . end_pole		1079354	0					
ANR	1079508	IdentifierDeclType	int		1079354	0					
ANR	1079509	Identifier	end_range_pole		1079354	1					
ANR	1079510	AssignmentExpression	end_range_pole = self -> hint_range [ k ] . end_pole		1079354	2		=			
ANR	1079511	Identifier	end_range_pole		1079354	0					
ANR	1079512	MemberAccess	self -> hint_range [ k ] . end_pole		1079354	1					
ANR	1079513	ArrayIndexing	self -> hint_range [ k ]		1079354	0					
ANR	1079514	PtrMemberAccess	self -> hint_range		1079354	0					
ANR	1079515	Identifier	self		1079354	0					
ANR	1079516	Identifier	hint_range		1079354	1					
ANR	1079517	Identifier	k		1079354	1					
ANR	1079518	Identifier	end_pole		1079354	1					
ANR	1079519	ForStatement	for ( j = beg_range_pole ; j <= end_range_pole ; j ++ )		1079354	2					
ANR	1079520	ForInit	j = beg_range_pole ;	2412:21:99894:99912	1079354	0	True				
ANR	1079521	AssignmentExpression	j = beg_range_pole		1079354	0		=			
ANR	1079522	Identifier	j		1079354	0					
ANR	1079523	Identifier	beg_range_pole		1079354	1					
ANR	1079524	Condition	j <= end_range_pole	2412:41:99914:99932	1079354	1	True				
ANR	1079525	RelationalExpression	j <= end_range_pole		1079354	0		<=			
ANR	1079526	Identifier	j		1079354	0					
ANR	1079527	Identifier	end_range_pole		1079354	1					
ANR	1079528	PostIncDecOperationExpression	j ++	2412:62:99935:99937	1079354	2	True				
ANR	1079529	Identifier	j		1079354	0					
ANR	1079530	IncDec	++		1079354	1					
ANR	1079531	CompoundStatement		18:20:847:878	1079354	3					
ANR	1079532	IdentifierDeclStatement	t1_pole * pole = & self -> pole [ j ] ;	2413:20:99962:99993	1079354	0	True				
ANR	1079533	IdentifierDecl	* pole = & self -> pole [ j ]		1079354	0					
ANR	1079534	IdentifierDeclType	t1_pole *		1079354	0					
ANR	1079535	Identifier	pole		1079354	1					
ANR	1079536	AssignmentExpression	* pole = & self -> pole [ j ]		1079354	2		=			
ANR	1079537	Identifier	pole		1079354	0					
ANR	1079538	UnaryOperationExpression	& self -> pole [ j ]		1079354	1					
ANR	1079539	UnaryOperator	&		1079354	0					
ANR	1079540	ArrayIndexing	self -> pole [ j ]		1079354	1					
ANR	1079541	PtrMemberAccess	self -> pole		1079354	0					
ANR	1079542	Identifier	self		1079354	0					
ANR	1079543	Identifier	pole		1079354	1					
ANR	1079544	Identifier	j		1079354	1					
ANR	1079545	IfStatement	if ( pole -> type != oncurve )		1079354	1					
ANR	1079546	Condition	pole -> type != oncurve	2415:24:100020:100040	1079354	0	True				
ANR	1079547	EqualityExpression	pole -> type != oncurve		1079354	0		!=			
ANR	1079548	PtrMemberAccess	pole -> type		1079354	0					
ANR	1079549	Identifier	pole		1079354	0					
ANR	1079550	Identifier	type		1079354	1					
ANR	1079551	Identifier	oncurve		1079354	1					
ANR	1079552	ContinueStatement	continue ;	2416:24:100067:100075	1079354	1	True				
ANR	1079553	IfStatement	if ( ! horiz && any_abs ( pole -> gx - hint -> g0 ) <= fuzz )		1079354	2					
ANR	1079554	Condition	! horiz && any_abs ( pole -> gx - hint -> g0 ) <= fuzz	2417:24:100101:100146	1079354	0	True				
ANR	1079555	AndExpression	! horiz && any_abs ( pole -> gx - hint -> g0 ) <= fuzz		1079354	0		&&			
ANR	1079556	UnaryOperationExpression	! horiz		1079354	0					
ANR	1079557	UnaryOperator	!		1079354	0					
ANR	1079558	Identifier	horiz		1079354	1					
ANR	1079559	RelationalExpression	any_abs ( pole -> gx - hint -> g0 ) <= fuzz		1079354	1		<=			
ANR	1079560	CallExpression	any_abs ( pole -> gx - hint -> g0 )		1079354	0					
ANR	1079561	Callee	any_abs		1079354	0					
ANR	1079562	Identifier	any_abs		1079354	0					
ANR	1079563	ArgumentList	pole -> gx - hint -> g0		1079354	1					
ANR	1079564	Argument	pole -> gx - hint -> g0		1079354	0					
ANR	1079565	AdditiveExpression	pole -> gx - hint -> g0		1079354	0		-			
ANR	1079566	PtrMemberAccess	pole -> gx		1079354	0					
ANR	1079567	Identifier	pole		1079354	0					
ANR	1079568	Identifier	gx		1079354	1					
ANR	1079569	PtrMemberAccess	hint -> g0		1079354	1					
ANR	1079570	Identifier	hint		1079354	0					
ANR	1079571	Identifier	g0		1079354	1					
ANR	1079572	Identifier	fuzz		1079354	1					
ANR	1079573	ExpressionStatement	"code = t1_hinter__store_hint_applying ( self , hint , j )"	2418:24:100173:100225	1079354	1	True				
ANR	1079574	AssignmentExpression	"code = t1_hinter__store_hint_applying ( self , hint , j )"		1079354	0		=			
ANR	1079575	Identifier	code		1079354	0					
ANR	1079576	CallExpression	"t1_hinter__store_hint_applying ( self , hint , j )"		1079354	1					
ANR	1079577	Callee	t1_hinter__store_hint_applying		1079354	0					
ANR	1079578	Identifier	t1_hinter__store_hint_applying		1079354	0					
ANR	1079579	ArgumentList	self		1079354	1					
ANR	1079580	Argument	self		1079354	0					
ANR	1079581	Identifier	self		1079354	0					
ANR	1079582	Argument	hint		1079354	1					
ANR	1079583	Identifier	hint		1079354	0					
ANR	1079584	Argument	j		1079354	2					
ANR	1079585	Identifier	j		1079354	0					
ANR	1079586	ElseStatement	else		1079354	0					
ANR	1079587	IfStatement	if ( ! horiz && any_abs ( pole -> gx - hint -> g1 ) <= fuzz )		1079354	0					
ANR	1079588	Condition	! horiz && any_abs ( pole -> gx - hint -> g1 ) <= fuzz	2419:29:100256:100301	1079354	0	True				
ANR	1079589	AndExpression	! horiz && any_abs ( pole -> gx - hint -> g1 ) <= fuzz		1079354	0		&&			
ANR	1079590	UnaryOperationExpression	! horiz		1079354	0					
ANR	1079591	UnaryOperator	!		1079354	0					
ANR	1079592	Identifier	horiz		1079354	1					
ANR	1079593	RelationalExpression	any_abs ( pole -> gx - hint -> g1 ) <= fuzz		1079354	1		<=			
ANR	1079594	CallExpression	any_abs ( pole -> gx - hint -> g1 )		1079354	0					
ANR	1079595	Callee	any_abs		1079354	0					
ANR	1079596	Identifier	any_abs		1079354	0					
ANR	1079597	ArgumentList	pole -> gx - hint -> g1		1079354	1					
ANR	1079598	Argument	pole -> gx - hint -> g1		1079354	0					
ANR	1079599	AdditiveExpression	pole -> gx - hint -> g1		1079354	0		-			
ANR	1079600	PtrMemberAccess	pole -> gx		1079354	0					
ANR	1079601	Identifier	pole		1079354	0					
ANR	1079602	Identifier	gx		1079354	1					
ANR	1079603	PtrMemberAccess	hint -> g1		1079354	1					
ANR	1079604	Identifier	hint		1079354	0					
ANR	1079605	Identifier	g1		1079354	1					
ANR	1079606	Identifier	fuzz		1079354	1					
ANR	1079607	ExpressionStatement	"code = t1_hinter__store_hint_applying ( self , hint , j )"	2420:24:100328:100380	1079354	1	True				
ANR	1079608	AssignmentExpression	"code = t1_hinter__store_hint_applying ( self , hint , j )"		1079354	0		=			
ANR	1079609	Identifier	code		1079354	0					
ANR	1079610	CallExpression	"t1_hinter__store_hint_applying ( self , hint , j )"		1079354	1					
ANR	1079611	Callee	t1_hinter__store_hint_applying		1079354	0					
ANR	1079612	Identifier	t1_hinter__store_hint_applying		1079354	0					
ANR	1079613	ArgumentList	self		1079354	1					
ANR	1079614	Argument	self		1079354	0					
ANR	1079615	Identifier	self		1079354	0					
ANR	1079616	Argument	hint		1079354	1					
ANR	1079617	Identifier	hint		1079354	0					
ANR	1079618	Argument	j		1079354	2					
ANR	1079619	Identifier	j		1079354	0					
ANR	1079620	ElseStatement	else		1079354	0					
ANR	1079621	IfStatement	if ( horiz && any_abs ( pole -> gy - hint -> g0 ) <= fuzz )		1079354	0					
ANR	1079622	Condition	horiz && any_abs ( pole -> gy - hint -> g0 ) <= fuzz	2421:30:100412:100456	1079354	0	True				
ANR	1079623	AndExpression	horiz && any_abs ( pole -> gy - hint -> g0 ) <= fuzz		1079354	0		&&			
ANR	1079624	Identifier	horiz		1079354	0					
ANR	1079625	RelationalExpression	any_abs ( pole -> gy - hint -> g0 ) <= fuzz		1079354	1		<=			
ANR	1079626	CallExpression	any_abs ( pole -> gy - hint -> g0 )		1079354	0					
ANR	1079627	Callee	any_abs		1079354	0					
ANR	1079628	Identifier	any_abs		1079354	0					
ANR	1079629	ArgumentList	pole -> gy - hint -> g0		1079354	1					
ANR	1079630	Argument	pole -> gy - hint -> g0		1079354	0					
ANR	1079631	AdditiveExpression	pole -> gy - hint -> g0		1079354	0		-			
ANR	1079632	PtrMemberAccess	pole -> gy		1079354	0					
ANR	1079633	Identifier	pole		1079354	0					
ANR	1079634	Identifier	gy		1079354	1					
ANR	1079635	PtrMemberAccess	hint -> g0		1079354	1					
ANR	1079636	Identifier	hint		1079354	0					
ANR	1079637	Identifier	g0		1079354	1					
ANR	1079638	Identifier	fuzz		1079354	1					
ANR	1079639	ExpressionStatement	"code = t1_hinter__store_hint_applying ( self , hint , j )"	2422:24:100483:100535	1079354	1	True				
ANR	1079640	AssignmentExpression	"code = t1_hinter__store_hint_applying ( self , hint , j )"		1079354	0		=			
ANR	1079641	Identifier	code		1079354	0					
ANR	1079642	CallExpression	"t1_hinter__store_hint_applying ( self , hint , j )"		1079354	1					
ANR	1079643	Callee	t1_hinter__store_hint_applying		1079354	0					
ANR	1079644	Identifier	t1_hinter__store_hint_applying		1079354	0					
ANR	1079645	ArgumentList	self		1079354	1					
ANR	1079646	Argument	self		1079354	0					
ANR	1079647	Identifier	self		1079354	0					
ANR	1079648	Argument	hint		1079354	1					
ANR	1079649	Identifier	hint		1079354	0					
ANR	1079650	Argument	j		1079354	2					
ANR	1079651	Identifier	j		1079354	0					
ANR	1079652	ElseStatement	else		1079354	0					
ANR	1079653	IfStatement	if ( horiz && any_abs ( pole -> gy - hint -> g1 ) <= fuzz )		1079354	0					
ANR	1079654	Condition	horiz && any_abs ( pole -> gy - hint -> g1 ) <= fuzz	2423:30:100567:100611	1079354	0	True				
ANR	1079655	AndExpression	horiz && any_abs ( pole -> gy - hint -> g1 ) <= fuzz		1079354	0		&&			
ANR	1079656	Identifier	horiz		1079354	0					
ANR	1079657	RelationalExpression	any_abs ( pole -> gy - hint -> g1 ) <= fuzz		1079354	1		<=			
ANR	1079658	CallExpression	any_abs ( pole -> gy - hint -> g1 )		1079354	0					
ANR	1079659	Callee	any_abs		1079354	0					
ANR	1079660	Identifier	any_abs		1079354	0					
ANR	1079661	ArgumentList	pole -> gy - hint -> g1		1079354	1					
ANR	1079662	Argument	pole -> gy - hint -> g1		1079354	0					
ANR	1079663	AdditiveExpression	pole -> gy - hint -> g1		1079354	0		-			
ANR	1079664	PtrMemberAccess	pole -> gy		1079354	0					
ANR	1079665	Identifier	pole		1079354	0					
ANR	1079666	Identifier	gy		1079354	1					
ANR	1079667	PtrMemberAccess	hint -> g1		1079354	1					
ANR	1079668	Identifier	hint		1079354	0					
ANR	1079669	Identifier	g1		1079354	1					
ANR	1079670	Identifier	fuzz		1079354	1					
ANR	1079671	ExpressionStatement	"code = t1_hinter__store_hint_applying ( self , hint , j )"	2424:24:100638:100690	1079354	1	True				
ANR	1079672	AssignmentExpression	"code = t1_hinter__store_hint_applying ( self , hint , j )"		1079354	0		=			
ANR	1079673	Identifier	code		1079354	0					
ANR	1079674	CallExpression	"t1_hinter__store_hint_applying ( self , hint , j )"		1079354	1					
ANR	1079675	Callee	t1_hinter__store_hint_applying		1079354	0					
ANR	1079676	Identifier	t1_hinter__store_hint_applying		1079354	0					
ANR	1079677	ArgumentList	self		1079354	1					
ANR	1079678	Argument	self		1079354	0					
ANR	1079679	Identifier	self		1079354	0					
ANR	1079680	Argument	hint		1079354	1					
ANR	1079681	Identifier	hint		1079354	0					
ANR	1079682	Argument	j		1079354	2					
ANR	1079683	Identifier	j		1079354	0					
ANR	1079684	IfStatement	if ( code < 0 )		1079354	3					
ANR	1079685	Condition	code < 0	2425:24:100716:100723	1079354	0	True				
ANR	1079686	RelationalExpression	code < 0		1079354	0		<			
ANR	1079687	Identifier	code		1079354	0					
ANR	1079688	PrimaryExpression	0		1079354	1					
ANR	1079689	ReturnStatement	return code ;	2426:24:100750:100761	1079354	1	True				
ANR	1079690	Identifier	code		1079354	0					
ANR	1079691	ForStatement	for ( k = 0 ; k < self -> hint_applying_count ; k ++ )		1079354	5					
ANR	1079692	ForInit	k = 0 ;	2429:17:100812:100817	1079354	0	True				
ANR	1079693	AssignmentExpression	k = 0		1079354	0		=			
ANR	1079694	Identifier	k		1079354	0					
ANR	1079695	PrimaryExpression	0		1079354	1					
ANR	1079696	Condition	k < self -> hint_applying_count	2429:24:100819:100847	1079354	1	True				
ANR	1079697	RelationalExpression	k < self -> hint_applying_count		1079354	0		<			
ANR	1079698	Identifier	k		1079354	0					
ANR	1079699	PtrMemberAccess	self -> hint_applying_count		1079354	1					
ANR	1079700	Identifier	self		1079354	0					
ANR	1079701	Identifier	hint_applying_count		1079354	1					
ANR	1079702	PostIncDecOperationExpression	k ++	2429:55:100850:100852	1079354	2	True				
ANR	1079703	Identifier	k		1079354	0					
ANR	1079704	IncDec	++		1079354	1					
ANR	1079705	CompoundStatement		42:16:2236:2247	1079354	3					
ANR	1079706	IdentifierDeclStatement	t1_hint_applying * ha0 = & self -> hint_applying [ k ] ;	2430:16:100873:100920	1079354	0	True				
ANR	1079707	IdentifierDecl	* ha0 = & self -> hint_applying [ k ]		1079354	0					
ANR	1079708	IdentifierDeclType	t1_hint_applying *		1079354	0					
ANR	1079709	Identifier	ha0		1079354	1					
ANR	1079710	AssignmentExpression	* ha0 = & self -> hint_applying [ k ]		1079354	2		=			
ANR	1079711	Identifier	ha0		1079354	0					
ANR	1079712	UnaryOperationExpression	& self -> hint_applying [ k ]		1079354	1					
ANR	1079713	UnaryOperator	&		1079354	0					
ANR	1079714	ArrayIndexing	self -> hint_applying [ k ]		1079354	1					
ANR	1079715	PtrMemberAccess	self -> hint_applying		1079354	0					
ANR	1079716	Identifier	self		1079354	0					
ANR	1079717	Identifier	hint_applying		1079354	1					
ANR	1079718	Identifier	k		1079354	1					
ANR	1079719	IdentifierDeclStatement	int pole_index0 = ha0 -> pole ;	2431:16:100938:100965	1079354	1	True				
ANR	1079720	IdentifierDecl	pole_index0 = ha0 -> pole		1079354	0					
ANR	1079721	IdentifierDeclType	int		1079354	0					
ANR	1079722	Identifier	pole_index0		1079354	1					
ANR	1079723	AssignmentExpression	pole_index0 = ha0 -> pole		1079354	2		=			
ANR	1079724	Identifier	pole_index0		1079354	0					
ANR	1079725	PtrMemberAccess	ha0 -> pole		1079354	1					
ANR	1079726	Identifier	ha0		1079354	0					
ANR	1079727	Identifier	pole		1079354	1					
ANR	1079728	IdentifierDeclStatement	t1_pole * pole0 = & self -> pole [ pole_index0 ] ;	2432:16:100983:101024	1079354	2	True				
ANR	1079729	IdentifierDecl	* pole0 = & self -> pole [ pole_index0 ]		1079354	0					
ANR	1079730	IdentifierDeclType	t1_pole *		1079354	0					
ANR	1079731	Identifier	pole0		1079354	1					
ANR	1079732	AssignmentExpression	* pole0 = & self -> pole [ pole_index0 ]		1079354	2		=			
ANR	1079733	Identifier	pole0		1079354	0					
ANR	1079734	UnaryOperationExpression	& self -> pole [ pole_index0 ]		1079354	1					
ANR	1079735	UnaryOperator	&		1079354	0					
ANR	1079736	ArrayIndexing	self -> pole [ pole_index0 ]		1079354	1					
ANR	1079737	PtrMemberAccess	self -> pole		1079354	0					
ANR	1079738	Identifier	self		1079354	0					
ANR	1079739	Identifier	pole		1079354	1					
ANR	1079740	Identifier	pole_index0		1079354	1					
ANR	1079741	IdentifierDeclStatement	t1_glyph_space_coord g0 = ( horiz ? pole0 -> gy : pole0 -> gx ) ;	2433:16:101042:101099	1079354	3	True				
ANR	1079742	IdentifierDecl	g0 = ( horiz ? pole0 -> gy : pole0 -> gx )		1079354	0					
ANR	1079743	IdentifierDeclType	t1_glyph_space_coord		1079354	0					
ANR	1079744	Identifier	g0		1079354	1					
ANR	1079745	AssignmentExpression	g0 = ( horiz ? pole0 -> gy : pole0 -> gx )		1079354	2		=			
ANR	1079746	Identifier	g0		1079354	0					
ANR	1079747	ConditionalExpression	horiz ? pole0 -> gy : pole0 -> gx		1079354	1					
ANR	1079748	Condition	horiz		1079354	0					
ANR	1079749	Identifier	horiz		1079354	0					
ANR	1079750	PtrMemberAccess	pole0 -> gy		1079354	1					
ANR	1079751	Identifier	pole0		1079354	0					
ANR	1079752	Identifier	gy		1079354	1					
ANR	1079753	PtrMemberAccess	pole0 -> gx		1079354	2					
ANR	1079754	Identifier	pole0		1079354	0					
ANR	1079755	Identifier	gx		1079354	1					
ANR	1079756	IdentifierDeclStatement	t1_glyph_space_coord t0 = ( horiz ? pole0 -> gx : pole0 -> gy ) ;	2434:16:101117:101174	1079354	4	True				
ANR	1079757	IdentifierDecl	t0 = ( horiz ? pole0 -> gx : pole0 -> gy )		1079354	0					
ANR	1079758	IdentifierDeclType	t1_glyph_space_coord		1079354	0					
ANR	1079759	Identifier	t0		1079354	1					
ANR	1079760	AssignmentExpression	t0 = ( horiz ? pole0 -> gx : pole0 -> gy )		1079354	2		=			
ANR	1079761	Identifier	t0		1079354	0					
ANR	1079762	ConditionalExpression	horiz ? pole0 -> gx : pole0 -> gy		1079354	1					
ANR	1079763	Condition	horiz		1079354	0					
ANR	1079764	Identifier	horiz		1079354	0					
ANR	1079765	PtrMemberAccess	pole0 -> gx		1079354	1					
ANR	1079766	Identifier	pole0		1079354	0					
ANR	1079767	Identifier	gx		1079354	1					
ANR	1079768	PtrMemberAccess	pole0 -> gy		1079354	2					
ANR	1079769	Identifier	pole0		1079354	0					
ANR	1079770	Identifier	gy		1079354	1					
ANR	1079771	IdentifierDeclStatement	bool gt0 = any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 ) ;	2435:16:101192:101250	1079354	5	True				
ANR	1079772	IdentifierDecl	gt0 = any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 )		1079354	0					
ANR	1079773	IdentifierDeclType	bool		1079354	0					
ANR	1079774	Identifier	gt0		1079354	1					
ANR	1079775	AssignmentExpression	gt0 = any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 )		1079354	2		=			
ANR	1079776	Identifier	gt0		1079354	0					
ANR	1079777	RelationalExpression	any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 )		1079354	1		>			
ANR	1079778	CallExpression	any_abs ( hint -> g0 - g0 )		1079354	0					
ANR	1079779	Callee	any_abs		1079354	0					
ANR	1079780	Identifier	any_abs		1079354	0					
ANR	1079781	ArgumentList	hint -> g0 - g0		1079354	1					
ANR	1079782	Argument	hint -> g0 - g0		1079354	0					
ANR	1079783	AdditiveExpression	hint -> g0 - g0		1079354	0		-			
ANR	1079784	PtrMemberAccess	hint -> g0		1079354	0					
ANR	1079785	Identifier	hint		1079354	0					
ANR	1079786	Identifier	g0		1079354	1					
ANR	1079787	Identifier	g0		1079354	1					
ANR	1079788	CallExpression	any_abs ( hint -> g1 - g0 )		1079354	1					
ANR	1079789	Callee	any_abs		1079354	0					
ANR	1079790	Identifier	any_abs		1079354	0					
ANR	1079791	ArgumentList	hint -> g1 - g0		1079354	1					
ANR	1079792	Argument	hint -> g1 - g0		1079354	0					
ANR	1079793	AdditiveExpression	hint -> g1 - g0		1079354	0		-			
ANR	1079794	PtrMemberAccess	hint -> g1		1079354	0					
ANR	1079795	Identifier	hint		1079354	0					
ANR	1079796	Identifier	g1		1079354	1					
ANR	1079797	Identifier	g0		1079354	1					
ANR	1079798	IdentifierDeclStatement	"t1_glyph_space_coord d , md = any_abs ( hint -> g1 - hint -> g0 ) * 5 / 4 ;"	2436:16:101268:101333	1079354	6	True				
ANR	1079799	IdentifierDecl	d		1079354	0					
ANR	1079800	IdentifierDeclType	t1_glyph_space_coord		1079354	0					
ANR	1079801	Identifier	d		1079354	1					
ANR	1079802	IdentifierDecl	md = any_abs ( hint -> g1 - hint -> g0 ) * 5 / 4		1079354	1					
ANR	1079803	IdentifierDeclType	t1_glyph_space_coord		1079354	0					
ANR	1079804	Identifier	md		1079354	1					
ANR	1079805	AssignmentExpression	md = any_abs ( hint -> g1 - hint -> g0 ) * 5 / 4		1079354	2		=			
ANR	1079806	Identifier	md		1079354	0					
ANR	1079807	MultiplicativeExpression	any_abs ( hint -> g1 - hint -> g0 ) * 5 / 4		1079354	1		*			
ANR	1079808	CallExpression	any_abs ( hint -> g1 - hint -> g0 )		1079354	0					
ANR	1079809	Callee	any_abs		1079354	0					
ANR	1079810	Identifier	any_abs		1079354	0					
ANR	1079811	ArgumentList	hint -> g1 - hint -> g0		1079354	1					
ANR	1079812	Argument	hint -> g1 - hint -> g0		1079354	0					
ANR	1079813	AdditiveExpression	hint -> g1 - hint -> g0		1079354	0		-			
ANR	1079814	PtrMemberAccess	hint -> g1		1079354	0					
ANR	1079815	Identifier	hint		1079354	0					
ANR	1079816	Identifier	g1		1079354	1					
ANR	1079817	PtrMemberAccess	hint -> g0		1079354	1					
ANR	1079818	Identifier	hint		1079354	0					
ANR	1079819	Identifier	g0		1079354	1					
ANR	1079820	MultiplicativeExpression	5 / 4		1079354	1		/			
ANR	1079821	PrimaryExpression	5		1079354	0					
ANR	1079822	PrimaryExpression	4		1079354	1					
ANR	1079823	IdentifierDeclStatement	int mj = - 1 ;	2437:16:101351:101362	1079354	7	True				
ANR	1079824	IdentifierDecl	mj = - 1		1079354	0					
ANR	1079825	IdentifierDeclType	int		1079354	0					
ANR	1079826	Identifier	mj		1079354	1					
ANR	1079827	AssignmentExpression	mj = - 1		1079354	2		=			
ANR	1079828	Identifier	mj		1079354	0					
ANR	1079829	UnaryOperationExpression	- 1		1079354	1					
ANR	1079830	UnaryOperator	-		1079354	0					
ANR	1079831	PrimaryExpression	1		1079354	1					
ANR	1079832	ForStatement	for ( j = 0 ; j < self -> hint_applying_count ; j ++ )		1079354	8					
ANR	1079833	ForInit	j = 0 ;	2439:21:101386:101391	1079354	0	True				
ANR	1079834	AssignmentExpression	j = 0		1079354	0		=			
ANR	1079835	Identifier	j		1079354	0					
ANR	1079836	PrimaryExpression	0		1079354	1					
ANR	1079837	Condition	j < self -> hint_applying_count	2439:28:101393:101421	1079354	1	True				
ANR	1079838	RelationalExpression	j < self -> hint_applying_count		1079354	0		<			
ANR	1079839	Identifier	j		1079354	0					
ANR	1079840	PtrMemberAccess	self -> hint_applying_count		1079354	1					
ANR	1079841	Identifier	self		1079354	0					
ANR	1079842	Identifier	hint_applying_count		1079354	1					
ANR	1079843	PostIncDecOperationExpression	j ++	2439:59:101424:101426	1079354	2	True				
ANR	1079844	Identifier	j		1079354	0					
ANR	1079845	IncDec	++		1079354	1					
ANR	1079846	CompoundStatement		50:20:2675:2733	1079354	3					
ANR	1079847	IdentifierDeclStatement	t1_hint_applying * ha1 = & self -> hint_applying [ j ] ;	2440:20:101451:101498	1079354	0	True				
ANR	1079848	IdentifierDecl	* ha1 = & self -> hint_applying [ j ]		1079354	0					
ANR	1079849	IdentifierDeclType	t1_hint_applying *		1079354	0					
ANR	1079850	Identifier	ha1		1079354	1					
ANR	1079851	AssignmentExpression	* ha1 = & self -> hint_applying [ j ]		1079354	2		=			
ANR	1079852	Identifier	ha1		1079354	0					
ANR	1079853	UnaryOperationExpression	& self -> hint_applying [ j ]		1079354	1					
ANR	1079854	UnaryOperator	&		1079354	0					
ANR	1079855	ArrayIndexing	self -> hint_applying [ j ]		1079354	1					
ANR	1079856	PtrMemberAccess	self -> hint_applying		1079354	0					
ANR	1079857	Identifier	self		1079354	0					
ANR	1079858	Identifier	hint_applying		1079354	1					
ANR	1079859	Identifier	j		1079354	1					
ANR	1079860	IdentifierDeclStatement	int pole_index1 = ha1 -> pole ;	2441:20:101520:101547	1079354	1	True				
ANR	1079861	IdentifierDecl	pole_index1 = ha1 -> pole		1079354	0					
ANR	1079862	IdentifierDeclType	int		1079354	0					
ANR	1079863	Identifier	pole_index1		1079354	1					
ANR	1079864	AssignmentExpression	pole_index1 = ha1 -> pole		1079354	2		=			
ANR	1079865	Identifier	pole_index1		1079354	0					
ANR	1079866	PtrMemberAccess	ha1 -> pole		1079354	1					
ANR	1079867	Identifier	ha1		1079354	0					
ANR	1079868	Identifier	pole		1079354	1					
ANR	1079869	IdentifierDeclStatement	t1_pole * pole1 = & self -> pole [ pole_index1 ] ;	2442:20:101569:101610	1079354	2	True				
ANR	1079870	IdentifierDecl	* pole1 = & self -> pole [ pole_index1 ]		1079354	0					
ANR	1079871	IdentifierDeclType	t1_pole *		1079354	0					
ANR	1079872	Identifier	pole1		1079354	1					
ANR	1079873	AssignmentExpression	* pole1 = & self -> pole [ pole_index1 ]		1079354	2		=			
ANR	1079874	Identifier	pole1		1079354	0					
ANR	1079875	UnaryOperationExpression	& self -> pole [ pole_index1 ]		1079354	1					
ANR	1079876	UnaryOperator	&		1079354	0					
ANR	1079877	ArrayIndexing	self -> pole [ pole_index1 ]		1079354	1					
ANR	1079878	PtrMemberAccess	self -> pole		1079354	0					
ANR	1079879	Identifier	self		1079354	0					
ANR	1079880	Identifier	pole		1079354	1					
ANR	1079881	Identifier	pole_index1		1079354	1					
ANR	1079882	IdentifierDeclStatement	t1_glyph_space_coord g1 = ( horiz ? pole1 -> gy : pole1 -> gx ) ;	2443:20:101632:101689	1079354	3	True				
ANR	1079883	IdentifierDecl	g1 = ( horiz ? pole1 -> gy : pole1 -> gx )		1079354	0					
ANR	1079884	IdentifierDeclType	t1_glyph_space_coord		1079354	0					
ANR	1079885	Identifier	g1		1079354	1					
ANR	1079886	AssignmentExpression	g1 = ( horiz ? pole1 -> gy : pole1 -> gx )		1079354	2		=			
ANR	1079887	Identifier	g1		1079354	0					
ANR	1079888	ConditionalExpression	horiz ? pole1 -> gy : pole1 -> gx		1079354	1					
ANR	1079889	Condition	horiz		1079354	0					
ANR	1079890	Identifier	horiz		1079354	0					
ANR	1079891	PtrMemberAccess	pole1 -> gy		1079354	1					
ANR	1079892	Identifier	pole1		1079354	0					
ANR	1079893	Identifier	gy		1079354	1					
ANR	1079894	PtrMemberAccess	pole1 -> gx		1079354	2					
ANR	1079895	Identifier	pole1		1079354	0					
ANR	1079896	Identifier	gx		1079354	1					
ANR	1079897	IdentifierDeclStatement	t1_glyph_space_coord t1 = ( horiz ? pole1 -> gx : pole1 -> gy ) ;	2444:20:101711:101768	1079354	4	True				
ANR	1079898	IdentifierDecl	t1 = ( horiz ? pole1 -> gx : pole1 -> gy )		1079354	0					
ANR	1079899	IdentifierDeclType	t1_glyph_space_coord		1079354	0					
ANR	1079900	Identifier	t1		1079354	1					
ANR	1079901	AssignmentExpression	t1 = ( horiz ? pole1 -> gx : pole1 -> gy )		1079354	2		=			
ANR	1079902	Identifier	t1		1079354	0					
ANR	1079903	ConditionalExpression	horiz ? pole1 -> gx : pole1 -> gy		1079354	1					
ANR	1079904	Condition	horiz		1079354	0					
ANR	1079905	Identifier	horiz		1079354	0					
ANR	1079906	PtrMemberAccess	pole1 -> gx		1079354	1					
ANR	1079907	Identifier	pole1		1079354	0					
ANR	1079908	Identifier	gx		1079354	1					
ANR	1079909	PtrMemberAccess	pole1 -> gy		1079354	2					
ANR	1079910	Identifier	pole1		1079354	0					
ANR	1079911	Identifier	gy		1079354	1					
ANR	1079912	IdentifierDeclStatement	bool gt1 = any_abs ( hint -> g0 - g1 ) > any_abs ( hint -> g1 - g1 ) ;	2445:20:101790:101848	1079354	5	True				
ANR	1079913	IdentifierDecl	gt1 = any_abs ( hint -> g0 - g1 ) > any_abs ( hint -> g1 - g1 )		1079354	0					
ANR	1079914	IdentifierDeclType	bool		1079354	0					
ANR	1079915	Identifier	gt1		1079354	1					
ANR	1079916	AssignmentExpression	gt1 = any_abs ( hint -> g0 - g1 ) > any_abs ( hint -> g1 - g1 )		1079354	2		=			
ANR	1079917	Identifier	gt1		1079354	0					
ANR	1079918	RelationalExpression	any_abs ( hint -> g0 - g1 ) > any_abs ( hint -> g1 - g1 )		1079354	1		>			
ANR	1079919	CallExpression	any_abs ( hint -> g0 - g1 )		1079354	0					
ANR	1079920	Callee	any_abs		1079354	0					
ANR	1079921	Identifier	any_abs		1079354	0					
ANR	1079922	ArgumentList	hint -> g0 - g1		1079354	1					
ANR	1079923	Argument	hint -> g0 - g1		1079354	0					
ANR	1079924	AdditiveExpression	hint -> g0 - g1		1079354	0		-			
ANR	1079925	PtrMemberAccess	hint -> g0		1079354	0					
ANR	1079926	Identifier	hint		1079354	0					
ANR	1079927	Identifier	g0		1079354	1					
ANR	1079928	Identifier	g1		1079354	1					
ANR	1079929	CallExpression	any_abs ( hint -> g1 - g1 )		1079354	1					
ANR	1079930	Callee	any_abs		1079354	0					
ANR	1079931	Identifier	any_abs		1079354	0					
ANR	1079932	ArgumentList	hint -> g1 - g1		1079354	1					
ANR	1079933	Argument	hint -> g1 - g1		1079354	0					
ANR	1079934	AdditiveExpression	hint -> g1 - g1		1079354	0		-			
ANR	1079935	PtrMemberAccess	hint -> g1		1079354	0					
ANR	1079936	Identifier	hint		1079354	0					
ANR	1079937	Identifier	g1		1079354	1					
ANR	1079938	Identifier	g1		1079354	1					
ANR	1079939	IfStatement	if ( gt0 != gt1 )		1079354	6					
ANR	1079940	Condition	gt0 != gt1	2447:24:101875:101884	1079354	0	True				
ANR	1079941	EqualityExpression	gt0 != gt1		1079354	0		!=			
ANR	1079942	Identifier	gt0		1079354	0					
ANR	1079943	Identifier	gt1		1079354	1					
ANR	1079944	CompoundStatement		52:36:2772:2772	1079354	1					
ANR	1079945	ExpressionStatement	d = any_abs ( t1 - t0 )	2448:24:101913:101933	1079354	0	True				
ANR	1079946	AssignmentExpression	d = any_abs ( t1 - t0 )		1079354	0		=			
ANR	1079947	Identifier	d		1079354	0					
ANR	1079948	CallExpression	any_abs ( t1 - t0 )		1079354	1					
ANR	1079949	Callee	any_abs		1079354	0					
ANR	1079950	Identifier	any_abs		1079354	0					
ANR	1079951	ArgumentList	t1 - t0		1079354	1					
ANR	1079952	Argument	t1 - t0		1079354	0					
ANR	1079953	AdditiveExpression	t1 - t0		1079354	0		-			
ANR	1079954	Identifier	t1		1079354	0					
ANR	1079955	Identifier	t0		1079354	1					
ANR	1079956	IfStatement	if ( md > d )		1079354	1					
ANR	1079957	Condition	md > d	2449:28:101963:101968	1079354	0	True				
ANR	1079958	RelationalExpression	md > d		1079354	0		>			
ANR	1079959	Identifier	md		1079354	0					
ANR	1079960	Identifier	d		1079354	1					
ANR	1079961	CompoundStatement		54:36:2856:2856	1079354	1					
ANR	1079962	ExpressionStatement	mj = j	2450:28:102001:102007	1079354	0	True				
ANR	1079963	AssignmentExpression	mj = j		1079354	0		=			
ANR	1079964	Identifier	mj		1079354	0					
ANR	1079965	Identifier	j		1079354	1					
ANR	1079966	IfStatement	if ( mj != - 1 )		1079354	9					
ANR	1079967	Condition	mj != - 1	2454:20:102095:102102	1079354	0	True				
ANR	1079968	EqualityExpression	mj != - 1		1079354	0		!=			
ANR	1079969	Identifier	mj		1079354	0					
ANR	1079970	UnaryOperationExpression	- 1		1079354	1					
ANR	1079971	UnaryOperator	-		1079354	0					
ANR	1079972	PrimaryExpression	1		1079354	1					
ANR	1079973	CompoundStatement		59:33:2993:2993	1079354	1					
ANR	1079974	ExpressionStatement	ha0 -> opposite = mj	2455:20:102130:102148	1079354	0	True				
ANR	1079975	AssignmentExpression	ha0 -> opposite = mj		1079354	0		=			
ANR	1079976	PtrMemberAccess	ha0 -> opposite		1079354	0					
ANR	1079977	Identifier	ha0		1079354	0					
ANR	1079978	Identifier	opposite		1079354	1					
ANR	1079979	Identifier	mj		1079354	1					
ANR	1079980	ExpressionStatement	self -> hint_applying [ mj ] . opposite = j	2456:20:102170:102206	1079354	1	True				
ANR	1079981	AssignmentExpression	self -> hint_applying [ mj ] . opposite = j		1079354	0		=			
ANR	1079982	MemberAccess	self -> hint_applying [ mj ] . opposite		1079354	0					
ANR	1079983	ArrayIndexing	self -> hint_applying [ mj ]		1079354	0					
ANR	1079984	PtrMemberAccess	self -> hint_applying		1079354	0					
ANR	1079985	Identifier	self		1079354	0					
ANR	1079986	Identifier	hint_applying		1079354	1					
ANR	1079987	Identifier	mj		1079354	1					
ANR	1079988	Identifier	opposite		1079354	1					
ANR	1079989	Identifier	j		1079354	1					
ANR	1079990	ForStatement	for ( k = 0 ; k < self -> hint_applying_count ; k ++ )		1079354	6					
ANR	1079991	ForInit	k = 0 ;	2459:17:102257:102262	1079354	0	True				
ANR	1079992	AssignmentExpression	k = 0		1079354	0		=			
ANR	1079993	Identifier	k		1079354	0					
ANR	1079994	PrimaryExpression	0		1079354	1					
ANR	1079995	Condition	k < self -> hint_applying_count	2459:24:102264:102292	1079354	1	True				
ANR	1079996	RelationalExpression	k < self -> hint_applying_count		1079354	0		<			
ANR	1079997	Identifier	k		1079354	0					
ANR	1079998	PtrMemberAccess	self -> hint_applying_count		1079354	1					
ANR	1079999	Identifier	self		1079354	0					
ANR	1080000	Identifier	hint_applying_count		1079354	1					
ANR	1080001	PostIncDecOperationExpression	k ++	2459:55:102295:102297	1079354	2	True				
ANR	1080002	Identifier	k		1079354	0					
ANR	1080003	IncDec	++		1079354	1					
ANR	1080004	CompoundStatement		72:16:3663:3745	1079354	3					
ANR	1080005	IdentifierDeclStatement	t1_hint_applying * ha = & self -> hint_applying [ k ] ;	2460:16:102318:102364	1079354	0	True				
ANR	1080006	IdentifierDecl	* ha = & self -> hint_applying [ k ]		1079354	0					
ANR	1080007	IdentifierDeclType	t1_hint_applying *		1079354	0					
ANR	1080008	Identifier	ha		1079354	1					
ANR	1080009	AssignmentExpression	* ha = & self -> hint_applying [ k ]		1079354	2		=			
ANR	1080010	Identifier	ha		1079354	0					
ANR	1080011	UnaryOperationExpression	& self -> hint_applying [ k ]		1079354	1					
ANR	1080012	UnaryOperator	&		1079354	0					
ANR	1080013	ArrayIndexing	self -> hint_applying [ k ]		1079354	1					
ANR	1080014	PtrMemberAccess	self -> hint_applying		1079354	0					
ANR	1080015	Identifier	self		1079354	0					
ANR	1080016	Identifier	hint_applying		1079354	1					
ANR	1080017	Identifier	k		1079354	1					
ANR	1080018	IdentifierDeclStatement	int pole_index = ha -> pole ;	2461:16:102382:102407	1079354	1	True				
ANR	1080019	IdentifierDecl	pole_index = ha -> pole		1079354	0					
ANR	1080020	IdentifierDeclType	int		1079354	0					
ANR	1080021	Identifier	pole_index		1079354	1					
ANR	1080022	AssignmentExpression	pole_index = ha -> pole		1079354	2		=			
ANR	1080023	Identifier	pole_index		1079354	0					
ANR	1080024	PtrMemberAccess	ha -> pole		1079354	1					
ANR	1080025	Identifier	ha		1079354	0					
ANR	1080026	Identifier	pole		1079354	1					
ANR	1080027	IdentifierDeclStatement	t1_pole * pole = & self -> pole [ pole_index ] ;	2462:16:102425:102464	1079354	2	True				
ANR	1080028	IdentifierDecl	* pole = & self -> pole [ pole_index ]		1079354	0					
ANR	1080029	IdentifierDeclType	t1_pole *		1079354	0					
ANR	1080030	Identifier	pole		1079354	1					
ANR	1080031	AssignmentExpression	* pole = & self -> pole [ pole_index ]		1079354	2		=			
ANR	1080032	Identifier	pole		1079354	0					
ANR	1080033	UnaryOperationExpression	& self -> pole [ pole_index ]		1079354	1					
ANR	1080034	UnaryOperator	&		1079354	0					
ANR	1080035	ArrayIndexing	self -> pole [ pole_index ]		1079354	1					
ANR	1080036	PtrMemberAccess	self -> pole		1079354	0					
ANR	1080037	Identifier	self		1079354	0					
ANR	1080038	Identifier	pole		1079354	1					
ANR	1080039	Identifier	pole_index		1079354	1					
ANR	1080040	IdentifierDeclStatement	t1_glyph_space_coord g0 = ( horiz ? pole -> gy : pole -> gx ) ;	2463:16:102482:102537	1079354	3	True				
ANR	1080041	IdentifierDecl	g0 = ( horiz ? pole -> gy : pole -> gx )		1079354	0					
ANR	1080042	IdentifierDeclType	t1_glyph_space_coord		1079354	0					
ANR	1080043	Identifier	g0		1079354	1					
ANR	1080044	AssignmentExpression	g0 = ( horiz ? pole -> gy : pole -> gx )		1079354	2		=			
ANR	1080045	Identifier	g0		1079354	0					
ANR	1080046	ConditionalExpression	horiz ? pole -> gy : pole -> gx		1079354	1					
ANR	1080047	Condition	horiz		1079354	0					
ANR	1080048	Identifier	horiz		1079354	0					
ANR	1080049	PtrMemberAccess	pole -> gy		1079354	1					
ANR	1080050	Identifier	pole		1079354	0					
ANR	1080051	Identifier	gy		1079354	1					
ANR	1080052	PtrMemberAccess	pole -> gx		1079354	2					
ANR	1080053	Identifier	pole		1079354	0					
ANR	1080054	Identifier	gx		1079354	1					
ANR	1080055	IdentifierDeclStatement	bool gt0 = any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 ) ;	2464:16:102555:102613	1079354	4	True				
ANR	1080056	IdentifierDecl	gt0 = any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 )		1079354	0					
ANR	1080057	IdentifierDeclType	bool		1079354	0					
ANR	1080058	Identifier	gt0		1079354	1					
ANR	1080059	AssignmentExpression	gt0 = any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 )		1079354	2		=			
ANR	1080060	Identifier	gt0		1079354	0					
ANR	1080061	RelationalExpression	any_abs ( hint -> g0 - g0 ) > any_abs ( hint -> g1 - g0 )		1079354	1		>			
ANR	1080062	CallExpression	any_abs ( hint -> g0 - g0 )		1079354	0					
ANR	1080063	Callee	any_abs		1079354	0					
ANR	1080064	Identifier	any_abs		1079354	0					
ANR	1080065	ArgumentList	hint -> g0 - g0		1079354	1					
ANR	1080066	Argument	hint -> g0 - g0		1079354	0					
ANR	1080067	AdditiveExpression	hint -> g0 - g0		1079354	0		-			
ANR	1080068	PtrMemberAccess	hint -> g0		1079354	0					
ANR	1080069	Identifier	hint		1079354	0					
ANR	1080070	Identifier	g0		1079354	1					
ANR	1080071	Identifier	g0		1079354	1					
ANR	1080072	CallExpression	any_abs ( hint -> g1 - g0 )		1079354	1					
ANR	1080073	Callee	any_abs		1079354	0					
ANR	1080074	Identifier	any_abs		1079354	0					
ANR	1080075	ArgumentList	hint -> g1 - g0		1079354	1					
ANR	1080076	Argument	hint -> g1 - g0		1079354	0					
ANR	1080077	AdditiveExpression	hint -> g1 - g0		1079354	0		-			
ANR	1080078	PtrMemberAccess	hint -> g1		1079354	0					
ANR	1080079	Identifier	hint		1079354	0					
ANR	1080080	Identifier	g1		1079354	1					
ANR	1080081	Identifier	g0		1079354	1					
ANR	1080082	IdentifierDeclStatement	enum t1_align_type align = ( ! gt0 ? hint -> aligned0 : hint -> aligned1 ) ;	2465:16:102631:102698	1079354	5	True				
ANR	1080083	IdentifierDecl	align = ( ! gt0 ? hint -> aligned0 : hint -> aligned1 )		1079354	0					
ANR	1080084	IdentifierDeclType	enum t1_align_type		1079354	0					
ANR	1080085	Identifier	align		1079354	1					
ANR	1080086	AssignmentExpression	align = ( ! gt0 ? hint -> aligned0 : hint -> aligned1 )		1079354	2		=			
ANR	1080087	Identifier	align		1079354	0					
ANR	1080088	ConditionalExpression	! gt0 ? hint -> aligned0 : hint -> aligned1		1079354	1					
ANR	1080089	Condition	! gt0		1079354	0					
ANR	1080090	UnaryOperationExpression	! gt0		1079354	0					
ANR	1080091	UnaryOperator	!		1079354	0					
ANR	1080092	Identifier	gt0		1079354	1					
ANR	1080093	PtrMemberAccess	hint -> aligned0		1079354	1					
ANR	1080094	Identifier	hint		1079354	0					
ANR	1080095	Identifier	aligned0		1079354	1					
ANR	1080096	PtrMemberAccess	hint -> aligned1		1079354	2					
ANR	1080097	Identifier	hint		1079354	0					
ANR	1080098	Identifier	aligned1		1079354	1					
ANR	1080099	IdentifierDeclStatement	t1_glyph_space_coord ag = ( ! gt0 ? ag0 : ag1 ) ;	2466:16:102716:102760	1079354	6	True				
ANR	1080100	IdentifierDecl	ag = ( ! gt0 ? ag0 : ag1 )		1079354	0					
ANR	1080101	IdentifierDeclType	t1_glyph_space_coord		1079354	0					
ANR	1080102	Identifier	ag		1079354	1					
ANR	1080103	AssignmentExpression	ag = ( ! gt0 ? ag0 : ag1 )		1079354	2		=			
ANR	1080104	Identifier	ag		1079354	0					
ANR	1080105	ConditionalExpression	! gt0 ? ag0 : ag1		1079354	1					
ANR	1080106	Condition	! gt0		1079354	0					
ANR	1080107	UnaryOperationExpression	! gt0		1079354	0					
ANR	1080108	UnaryOperator	!		1079354	0					
ANR	1080109	Identifier	gt0		1079354	1					
ANR	1080110	Identifier	ag0		1079354	1					
ANR	1080111	Identifier	ag1		1079354	2					
ANR	1080112	IdentifierDeclStatement	t1_glyph_space_coord bl = ( ! gt0 ? hint -> boundary_length1 : hint -> boundary_length0 ) ;	2467:16:102778:102860	1079354	7	True				
ANR	1080113	IdentifierDecl	bl = ( ! gt0 ? hint -> boundary_length1 : hint -> boundary_length0 )		1079354	0					
ANR	1080114	IdentifierDeclType	t1_glyph_space_coord		1079354	0					
ANR	1080115	Identifier	bl		1079354	1					
ANR	1080116	AssignmentExpression	bl = ( ! gt0 ? hint -> boundary_length1 : hint -> boundary_length0 )		1079354	2		=			
ANR	1080117	Identifier	bl		1079354	0					
ANR	1080118	ConditionalExpression	! gt0 ? hint -> boundary_length1 : hint -> boundary_length0		1079354	1					
ANR	1080119	Condition	! gt0		1079354	0					
ANR	1080120	UnaryOperationExpression	! gt0		1079354	0					
ANR	1080121	UnaryOperator	!		1079354	0					
ANR	1080122	Identifier	gt0		1079354	1					
ANR	1080123	PtrMemberAccess	hint -> boundary_length1		1079354	1					
ANR	1080124	Identifier	hint		1079354	0					
ANR	1080125	Identifier	boundary_length1		1079354	1					
ANR	1080126	PtrMemberAccess	hint -> boundary_length0		1079354	2					
ANR	1080127	Identifier	hint		1079354	0					
ANR	1080128	Identifier	boundary_length0		1079354	1					
ANR	1080129	IfStatement	if ( ha -> opposite == - 1 )		1079354	8					
ANR	1080130	Condition	ha -> opposite == - 1	2469:20:102898:102915	1079354	0	True				
ANR	1080131	EqualityExpression	ha -> opposite == - 1		1079354	0		==			
ANR	1080132	PtrMemberAccess	ha -> opposite		1079354	0					
ANR	1080133	Identifier	ha		1079354	0					
ANR	1080134	Identifier	opposite		1079354	1					
ANR	1080135	UnaryOperationExpression	- 1		1079354	1					
ANR	1080136	UnaryOperator	-		1079354	0					
ANR	1080137	PrimaryExpression	1		1079354	1					
ANR	1080138	ExpressionStatement	align = weak	2470:20:102938:102950	1079354	1	True				
ANR	1080139	AssignmentExpression	align = weak		1079354	0		=			
ANR	1080140	Identifier	align		1079354	0					
ANR	1080141	Identifier	weak		1079354	1					
ANR	1080142	IfStatement	if ( ! horiz )		1079354	9					
ANR	1080143	Condition	! horiz	2471:20:102972:102977	1079354	0	True				
ANR	1080144	UnaryOperationExpression	! horiz		1079354	0					
ANR	1080145	UnaryOperator	!		1079354	0					
ANR	1080146	Identifier	horiz		1079354	1					
ANR	1080147	CompoundStatement		76:28:3865:3865	1079354	1					
ANR	1080148	IfStatement	if ( pole -> aligned_x < align )		1079354	0					
ANR	1080149	Condition	pole -> aligned_x < align	2472:24:103006:103028	1079354	0	True				
ANR	1080150	RelationalExpression	pole -> aligned_x < align		1079354	0		<			
ANR	1080151	PtrMemberAccess	pole -> aligned_x		1079354	0					
ANR	1080152	Identifier	pole		1079354	0					
ANR	1080153	Identifier	aligned_x		1079354	1					
ANR	1080154	Identifier	align		1079354	1					
ANR	1080155	ExpressionStatement	"pole -> ax = ag , pole -> aligned_x = align , pole -> boundary_length_x = bl"	2473:24:103055:103123	1079354	1	True				
ANR	1080156	Expression	"pole -> ax = ag , pole -> aligned_x = align , pole -> boundary_length_x = bl"		1079354	0					
ANR	1080157	AssignmentExpression	pole -> ax = ag		1079354	0		=			
ANR	1080158	PtrMemberAccess	pole -> ax		1079354	0					
ANR	1080159	Identifier	pole		1079354	0					
ANR	1080160	Identifier	ax		1079354	1					
ANR	1080161	Identifier	ag		1079354	1					
ANR	1080162	Expression	"pole -> aligned_x = align , pole -> boundary_length_x = bl"		1079354	1					
ANR	1080163	AssignmentExpression	pole -> aligned_x = align		1079354	0		=			
ANR	1080164	PtrMemberAccess	pole -> aligned_x		1079354	0					
ANR	1080165	Identifier	pole		1079354	0					
ANR	1080166	Identifier	aligned_x		1079354	1					
ANR	1080167	Identifier	align		1079354	1					
ANR	1080168	AssignmentExpression	pole -> boundary_length_x = bl		1079354	1		=			
ANR	1080169	PtrMemberAccess	pole -> boundary_length_x		1079354	0					
ANR	1080170	Identifier	pole		1079354	0					
ANR	1080171	Identifier	boundary_length_x		1079354	1					
ANR	1080172	Identifier	bl		1079354	1					
ANR	1080173	ElseStatement	else		1079354	0					
ANR	1080174	CompoundStatement		79:23:4033:4033	1079354	0					
ANR	1080175	IfStatement	if ( pole -> aligned_y < align )		1079354	0					
ANR	1080176	Condition	pole -> aligned_y < align	2475:24:103174:103196	1079354	0	True				
ANR	1080177	RelationalExpression	pole -> aligned_y < align		1079354	0		<			
ANR	1080178	PtrMemberAccess	pole -> aligned_y		1079354	0					
ANR	1080179	Identifier	pole		1079354	0					
ANR	1080180	Identifier	aligned_y		1079354	1					
ANR	1080181	Identifier	align		1079354	1					
ANR	1080182	ExpressionStatement	"pole -> ay = ag , pole -> aligned_y = align , pole -> boundary_length_y = bl"	2476:24:103223:103291	1079354	1	True				
ANR	1080183	Expression	"pole -> ay = ag , pole -> aligned_y = align , pole -> boundary_length_y = bl"		1079354	0					
ANR	1080184	AssignmentExpression	pole -> ay = ag		1079354	0		=			
ANR	1080185	PtrMemberAccess	pole -> ay		1079354	0					
ANR	1080186	Identifier	pole		1079354	0					
ANR	1080187	Identifier	ay		1079354	1					
ANR	1080188	Identifier	ag		1079354	1					
ANR	1080189	Expression	"pole -> aligned_y = align , pole -> boundary_length_y = bl"		1079354	1					
ANR	1080190	AssignmentExpression	pole -> aligned_y = align		1079354	0		=			
ANR	1080191	PtrMemberAccess	pole -> aligned_y		1079354	0					
ANR	1080192	Identifier	pole		1079354	0					
ANR	1080193	Identifier	aligned_y		1079354	1					
ANR	1080194	Identifier	align		1079354	1					
ANR	1080195	AssignmentExpression	pole -> boundary_length_y = bl		1079354	1		=			
ANR	1080196	PtrMemberAccess	pole -> boundary_length_y		1079354	0					
ANR	1080197	Identifier	pole		1079354	0					
ANR	1080198	Identifier	boundary_length_y		1079354	1					
ANR	1080199	Identifier	bl		1079354	1					
ANR	1080200	ReturnStatement	return 0 ;	2480:4:103339:103347	1079354	4	True				
ANR	1080201	PrimaryExpression	0		1079354	0					
ANR	1080202	ReturnType	static int		1079354	1					
ANR	1080203	Identifier	t1_hinter__align_stem_poles		1079354	2					
ANR	1080204	ParameterList	t1_hinter * self		1079354	3					
ANR	1080205	Parameter	t1_hinter * self	2395:39:99096:99111	1079354	0	True				
ANR	1080206	ParameterType	t1_hinter *		1079354	0					
ANR	1080207	Identifier	self		1079354	1					
ANR	1080208	CFGEntryNode	ENTRY		1079354		True				
ANR	1080209	CFGExitNode	EXIT		1079354		True				
ANR	1080210	Symbol	self -> hint_range [ k ] . next		1079354						
ANR	1080211	Symbol	end_range_pole		1079354						
ANR	1080212	Symbol	ha -> opposite		1079354						
ANR	1080213	Symbol	pole1 -> gy		1079354						
ANR	1080214	Symbol	pole1 -> gx		1079354						
ANR	1080215	Symbol	ha -> pole		1079354						
ANR	1080216	Symbol	pole -> gy		1079354						
ANR	1080217	Symbol	vstem		1079354						
ANR	1080218	Symbol	pole -> gx		1079354						
ANR	1080219	Symbol	pole		1079354						
ANR	1080220	Symbol	align		1079354						
ANR	1080221	Symbol	hint -> g1		1079354						
ANR	1080222	Symbol	ha0 -> pole		1079354						
ANR	1080223	Symbol	self -> hint_applying [ mj ] . opposite		1079354						
ANR	1080224	Symbol	* self -> hint		1079354						
ANR	1080225	Symbol	hint -> ag1		1079354						
ANR	1080226	Symbol	hint -> ag0		1079354						
ANR	1080227	Symbol	md		1079354						
ANR	1080228	Symbol	self -> blue_fuzz		1079354						
ANR	1080229	Symbol	mj		1079354						
ANR	1080230	Symbol	* self -> hint_applying		1079354						
ANR	1080231	Symbol	pole -> type		1079354						
ANR	1080232	Symbol	* hint		1079354						
ANR	1080233	Symbol	* self		1079354						
ANR	1080234	Symbol	pole0		1079354						
ANR	1080235	Symbol	ag		1079354						
ANR	1080236	Symbol	pole1		1079354						
ANR	1080237	Symbol	g0		1079354						
ANR	1080238	Symbol	g1		1079354						
ANR	1080239	Symbol	beg_range_pole		1079354						
ANR	1080240	Symbol	hint -> g0		1079354						
ANR	1080241	Symbol	pole_index		1079354						
ANR	1080242	Symbol	hint		1079354						
ANR	1080243	Symbol	t1_hinter__store_hint_applying		1079354						
ANR	1080244	Symbol	self -> hint_applying		1079354						
ANR	1080245	Symbol	t0		1079354						
ANR	1080246	Symbol	* pole1		1079354						
ANR	1080247	Symbol	* ha		1079354						
ANR	1080248	Symbol	* pole0		1079354						
ANR	1080249	Symbol	* ha1		1079354						
ANR	1080250	Symbol	t1		1079354						
ANR	1080251	Symbol	* ha0		1079354						
ANR	1080252	Symbol	pole -> aligned_y		1079354						
ANR	1080253	Symbol	pole -> aligned_x		1079354						
ANR	1080254	Symbol	* mj		1079354						
ANR	1080255	Symbol	oncurve		1079354						
ANR	1080256	Symbol	code		1079354						
ANR	1080257	Symbol	ha1 -> pole		1079354						
ANR	1080258	Symbol	pole -> boundary_length_y		1079354						
ANR	1080259	Symbol	ag1		1079354						
ANR	1080260	Symbol	bl		1079354						
ANR	1080261	Symbol	ag0		1079354						
ANR	1080262	Symbol	pole -> boundary_length_x		1079354						
ANR	1080263	Symbol	pole -> ay		1079354						
ANR	1080264	Symbol	* pole		1079354						
ANR	1080265	Symbol	pole -> ax		1079354						
ANR	1080266	Symbol	weak		1079354						
ANR	1080267	Symbol	self -> hint_applying_count		1079354						
ANR	1080268	Symbol	horiz		1079354						
ANR	1080269	Symbol	ha0		1079354						
ANR	1080270	Symbol	any_abs		1079354						
ANR	1080271	Symbol	ha1		1079354						
ANR	1080272	Symbol	self -> pole		1079354						
ANR	1080273	Symbol	self -> hint_range [ k ] . beg_pole		1079354						
ANR	1080274	Symbol	hint -> type		1079354						
ANR	1080275	Symbol	hstem		1079354						
ANR	1080276	Symbol	pole0 -> gx		1079354						
ANR	1080277	Symbol	pole0 -> gy		1079354						
ANR	1080278	Symbol	gt0		1079354						
ANR	1080279	Symbol	self -> hint [ i ] . type		1079354						
ANR	1080280	Symbol	self -> hint		1079354						
ANR	1080281	Symbol	d		1079354						
ANR	1080282	Symbol	* * self		1079354						
ANR	1080283	Symbol	gt1		1079354						
ANR	1080284	Symbol	ha0 -> opposite		1079354						
ANR	1080285	Symbol	hint -> aligned0		1079354						
ANR	1080286	Symbol	hint -> boundary_length0		1079354						
ANR	1080287	Symbol	i		1079354						
ANR	1080288	Symbol	hint -> aligned1		1079354						
ANR	1080289	Symbol	j		1079354						
ANR	1080290	Symbol	k		1079354						
ANR	1080291	Symbol	self -> hint_range		1079354						
ANR	1080292	Symbol	hint -> boundary_length1		1079354						
ANR	1080293	Symbol	* self -> hint_range		1079354						
ANR	1080294	Symbol	pole_index0		1079354						
ANR	1080295	Symbol	self -> hint_count		1079354						
ANR	1080296	Symbol	* i		1079354						
ANR	1080297	Symbol	pole_index1		1079354						
ANR	1080298	Symbol	self -> hint [ i ] . range_index		1079354						
ANR	1080299	Symbol	* k		1079354						
ANR	1080300	Symbol	self		1079354						
ANR	1080301	Symbol	ha		1079354						
ANR	1080302	Symbol	self -> hint_range [ k ] . end_pole		1079354						
ANR	1080303	Symbol	fuzz		1079354						
ANR	1080304	Function	t1_hinter__find_vstem_by_center	2483:0:103352:103876							
ANR	1080305	FunctionDef	"t1_hinter__find_vstem_by_center (t1_hinter * self , t1_glyph_space_coord gx)"		1080304	0					
ANR	1080306	CompoundStatement		2484:0:103444:103876	1080304	0					
ANR	1080307	IdentifierDeclStatement	int i ;	2485:4:103489:103494	1080304	0	True				
ANR	1080308	IdentifierDecl	i		1080304	0					
ANR	1080309	IdentifierDeclType	int		1080304	0					
ANR	1080310	Identifier	i		1080304	1					
ANR	1080311	IdentifierDeclStatement	t1_hint * hint = NULL ;	2486:4:103500:103521	1080304	1	True				
ANR	1080312	IdentifierDecl	* hint = NULL		1080304	0					
ANR	1080313	IdentifierDeclType	t1_hint *		1080304	0					
ANR	1080314	Identifier	hint		1080304	1					
ANR	1080315	AssignmentExpression	* hint = NULL		1080304	2		=			
ANR	1080316	Identifier	NULL		1080304	0					
ANR	1080317	Identifier	NULL		1080304	1					
ANR	1080318	IdentifierDeclStatement	t1_glyph_space_coord dx = fixed_1 ;	2487:4:103527:103560	1080304	2	True				
ANR	1080319	IdentifierDecl	dx = fixed_1		1080304	0					
ANR	1080320	IdentifierDeclType	t1_glyph_space_coord		1080304	0					
ANR	1080321	Identifier	dx		1080304	1					
ANR	1080322	AssignmentExpression	dx = fixed_1		1080304	2		=			
ANR	1080323	Identifier	fixed_1		1080304	0					
ANR	1080324	Identifier	fixed_1		1080304	1					
ANR	1080325	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		1080304	3					
ANR	1080326	ForInit	i = 0 ;	2489:9:103572:103577	1080304	0	True				
ANR	1080327	AssignmentExpression	i = 0		1080304	0		=			
ANR	1080328	Identifier	i		1080304	0					
ANR	1080329	PrimaryExpression	0		1080304	1					
ANR	1080330	Condition	i < self -> hint_count	2489:16:103579:103598	1080304	1	True				
ANR	1080331	RelationalExpression	i < self -> hint_count		1080304	0		<			
ANR	1080332	Identifier	i		1080304	0					
ANR	1080333	PtrMemberAccess	self -> hint_count		1080304	1					
ANR	1080334	Identifier	self		1080304	0					
ANR	1080335	Identifier	hint_count		1080304	1					
ANR	1080336	PostIncDecOperationExpression	i ++	2489:38:103601:103603	1080304	2	True				
ANR	1080337	Identifier	i		1080304	0					
ANR	1080338	IncDec	++		1080304	1					
ANR	1080339	IfStatement	if ( self -> hint [ i ] . type == vstem )		1080304	3					
ANR	1080340	Condition	self -> hint [ i ] . type == vstem	2490:12:103618:103644	1080304	0	True				
ANR	1080341	EqualityExpression	self -> hint [ i ] . type == vstem		1080304	0		==			
ANR	1080342	MemberAccess	self -> hint [ i ] . type		1080304	0					
ANR	1080343	ArrayIndexing	self -> hint [ i ]		1080304	0					
ANR	1080344	PtrMemberAccess	self -> hint		1080304	0					
ANR	1080345	Identifier	self		1080304	0					
ANR	1080346	Identifier	hint		1080304	1					
ANR	1080347	Identifier	i		1080304	1					
ANR	1080348	Identifier	type		1080304	1					
ANR	1080349	Identifier	vstem		1080304	1					
ANR	1080350	CompoundStatement		8:12:216:298	1080304	1					
ANR	1080351	IdentifierDeclStatement	t1_glyph_space_coord d = any_abs ( gx - ( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2 ) ;	2491:12:103661:103743	1080304	0	True				
ANR	1080352	IdentifierDecl	d = any_abs ( gx - ( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2 )		1080304	0					
ANR	1080353	IdentifierDeclType	t1_glyph_space_coord		1080304	0					
ANR	1080354	Identifier	d		1080304	1					
ANR	1080355	AssignmentExpression	d = any_abs ( gx - ( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2 )		1080304	2		=			
ANR	1080356	Identifier	d		1080304	0					
ANR	1080357	CallExpression	any_abs ( gx - ( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2 )		1080304	1					
ANR	1080358	Callee	any_abs		1080304	0					
ANR	1080359	Identifier	any_abs		1080304	0					
ANR	1080360	ArgumentList	gx - ( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2		1080304	1					
ANR	1080361	Argument	gx - ( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2		1080304	0					
ANR	1080362	AdditiveExpression	gx - ( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2		1080304	0		-			
ANR	1080363	Identifier	gx		1080304	0					
ANR	1080364	MultiplicativeExpression	( self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1 ) / 2		1080304	1		/			
ANR	1080365	AdditiveExpression	self -> hint [ i ] . ag0 + self -> hint [ i ] . ag1		1080304	0		+			
ANR	1080366	MemberAccess	self -> hint [ i ] . ag0		1080304	0					
ANR	1080367	ArrayIndexing	self -> hint [ i ]		1080304	0					
ANR	1080368	PtrMemberAccess	self -> hint		1080304	0					
ANR	1080369	Identifier	self		1080304	0					
ANR	1080370	Identifier	hint		1080304	1					
ANR	1080371	Identifier	i		1080304	1					
ANR	1080372	Identifier	ag0		1080304	1					
ANR	1080373	MemberAccess	self -> hint [ i ] . ag1		1080304	1					
ANR	1080374	ArrayIndexing	self -> hint [ i ]		1080304	0					
ANR	1080375	PtrMemberAccess	self -> hint		1080304	0					
ANR	1080376	Identifier	self		1080304	0					
ANR	1080377	Identifier	hint		1080304	1					
ANR	1080378	Identifier	i		1080304	1					
ANR	1080379	Identifier	ag1		1080304	1					
ANR	1080380	PrimaryExpression	2		1080304	1					
ANR	1080381	IfStatement	if ( dx > d )		1080304	1					
ANR	1080382	Condition	dx > d	2493:16:103762:103767	1080304	0	True				
ANR	1080383	RelationalExpression	dx > d		1080304	0		>			
ANR	1080384	Identifier	dx		1080304	0					
ANR	1080385	Identifier	d		1080304	1					
ANR	1080386	CompoundStatement		10:24:325:325	1080304	1					
ANR	1080387	ExpressionStatement	dx = d	2494:16:103788:103794	1080304	0	True				
ANR	1080388	AssignmentExpression	dx = d		1080304	0		=			
ANR	1080389	Identifier	dx		1080304	0					
ANR	1080390	Identifier	d		1080304	1					
ANR	1080391	ExpressionStatement	hint = & self -> hint [ i ]	2495:16:103812:103833	1080304	1	True				
ANR	1080392	AssignmentExpression	hint = & self -> hint [ i ]		1080304	0		=			
ANR	1080393	Identifier	hint		1080304	0					
ANR	1080394	UnaryOperationExpression	& self -> hint [ i ]		1080304	1					
ANR	1080395	UnaryOperator	&		1080304	0					
ANR	1080396	ArrayIndexing	self -> hint [ i ]		1080304	1					
ANR	1080397	PtrMemberAccess	self -> hint		1080304	0					
ANR	1080398	Identifier	self		1080304	0					
ANR	1080399	Identifier	hint		1080304	1					
ANR	1080400	Identifier	i		1080304	1					
ANR	1080401	ReturnStatement	return hint ;	2498:4:103863:103874	1080304	4	True				
ANR	1080402	Identifier	hint		1080304	0					
ANR	1080403	ReturnType	static t1_hint *		1080304	1					
ANR	1080404	Identifier	t1_hinter__find_vstem_by_center		1080304	2					
ANR	1080405	ParameterList	"t1_hinter * self , t1_glyph_space_coord gx"		1080304	3					
ANR	1080406	Parameter	t1_hinter * self	2483:49:103401:103416	1080304	0	True				
ANR	1080407	ParameterType	t1_hinter *		1080304	0					
ANR	1080408	Identifier	self		1080304	1					
ANR	1080409	Parameter	t1_glyph_space_coord gx	2483:67:103419:103441	1080304	1	True				
ANR	1080410	ParameterType	t1_glyph_space_coord		1080304	0					
ANR	1080411	Identifier	gx		1080304	1					
ANR	1080412	CFGEntryNode	ENTRY		1080304		True				
ANR	1080413	CFGExitNode	EXIT		1080304		True				
ANR	1080414	Symbol	NULL		1080304						
ANR	1080415	Symbol	self -> hint [ i ] . type		1080304						
ANR	1080416	Symbol	self -> hint		1080304						
ANR	1080417	Symbol	d		1080304						
ANR	1080418	Symbol	* * self		1080304						
ANR	1080419	Symbol	* self		1080304						
ANR	1080420	Symbol	i		1080304						
ANR	1080421	Symbol	vstem		1080304						
ANR	1080422	Symbol	gx		1080304						
ANR	1080423	Symbol	* self -> hint		1080304						
ANR	1080424	Symbol	self -> hint_count		1080304						
ANR	1080425	Symbol	* i		1080304						
ANR	1080426	Symbol	self -> hint [ i ] . ag0		1080304						
ANR	1080427	Symbol	dx		1080304						
ANR	1080428	Symbol	fixed_1		1080304						
ANR	1080429	Symbol	self -> hint [ i ] . ag1		1080304						
ANR	1080430	Symbol	hint		1080304						
ANR	1080431	Symbol	any_abs		1080304						
ANR	1080432	Symbol	self		1080304						
ANR	1080433	Function	t1_hinter__process_dotsection	2501:0:103879:106481							
ANR	1080434	FunctionDef	"t1_hinter__process_dotsection (t1_hinter * self , int beg_pole , int end_pole)"		1080433	0					
ANR	1080435	CompoundStatement		2502:0:103967:106481	1080433	0					
ANR	1080436	IdentifierDeclStatement	int i ;	2505:4:104091:104096	1080433	0	True				
ANR	1080437	IdentifierDecl	i		1080433	0					
ANR	1080438	IdentifierDeclType	int		1080433	0					
ANR	1080439	Identifier	i		1080433	1					
ANR	1080440	IdentifierDeclStatement	"t1_glyph_space_coord min_gx = self -> pole [ beg_pole ] . gx , min_gy = self -> pole [ beg_pole ] . gy ;"	2506:4:104102:104189	1080433	1	True				
ANR	1080441	IdentifierDecl	min_gx = self -> pole [ beg_pole ] . gx		1080433	0					
ANR	1080442	IdentifierDeclType	t1_glyph_space_coord		1080433	0					
ANR	1080443	Identifier	min_gx		1080433	1					
ANR	1080444	AssignmentExpression	min_gx = self -> pole [ beg_pole ] . gx		1080433	2		=			
ANR	1080445	Identifier	min_gx		1080433	0					
ANR	1080446	MemberAccess	self -> pole [ beg_pole ] . gx		1080433	1					
ANR	1080447	ArrayIndexing	self -> pole [ beg_pole ]		1080433	0					
ANR	1080448	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080449	Identifier	self		1080433	0					
ANR	1080450	Identifier	pole		1080433	1					
ANR	1080451	Identifier	beg_pole		1080433	1					
ANR	1080452	Identifier	gx		1080433	1					
ANR	1080453	IdentifierDecl	min_gy = self -> pole [ beg_pole ] . gy		1080433	1					
ANR	1080454	IdentifierDeclType	t1_glyph_space_coord		1080433	0					
ANR	1080455	Identifier	min_gy		1080433	1					
ANR	1080456	AssignmentExpression	min_gy = self -> pole [ beg_pole ] . gy		1080433	2		=			
ANR	1080457	Identifier	min_gy		1080433	0					
ANR	1080458	MemberAccess	self -> pole [ beg_pole ] . gy		1080433	1					
ANR	1080459	ArrayIndexing	self -> pole [ beg_pole ]		1080433	0					
ANR	1080460	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080461	Identifier	self		1080433	0					
ANR	1080462	Identifier	pole		1080433	1					
ANR	1080463	Identifier	beg_pole		1080433	1					
ANR	1080464	Identifier	gy		1080433	1					
ANR	1080465	IdentifierDeclStatement	"t1_glyph_space_coord max_gx = min_gx , max_gy = min_gy ;"	2507:4:104195:104248	1080433	2	True				
ANR	1080466	IdentifierDecl	max_gx = min_gx		1080433	0					
ANR	1080467	IdentifierDeclType	t1_glyph_space_coord		1080433	0					
ANR	1080468	Identifier	max_gx		1080433	1					
ANR	1080469	AssignmentExpression	max_gx = min_gx		1080433	2		=			
ANR	1080470	Identifier	min_gx		1080433	0					
ANR	1080471	Identifier	min_gx		1080433	1					
ANR	1080472	IdentifierDecl	max_gy = min_gy		1080433	1					
ANR	1080473	IdentifierDeclType	t1_glyph_space_coord		1080433	0					
ANR	1080474	Identifier	max_gy		1080433	1					
ANR	1080475	AssignmentExpression	max_gy = min_gy		1080433	2		=			
ANR	1080476	Identifier	min_gy		1080433	0					
ANR	1080477	Identifier	min_gy		1080433	1					
ANR	1080478	IdentifierDeclStatement	"t1_glyph_space_coord center_gx , center_gy , center_agx , center_agy ;"	2508:4:104254:104319	1080433	3	True				
ANR	1080479	IdentifierDecl	center_gx		1080433	0					
ANR	1080480	IdentifierDeclType	t1_glyph_space_coord		1080433	0					
ANR	1080481	Identifier	center_gx		1080433	1					
ANR	1080482	IdentifierDecl	center_gy		1080433	1					
ANR	1080483	IdentifierDeclType	t1_glyph_space_coord		1080433	0					
ANR	1080484	Identifier	center_gy		1080433	1					
ANR	1080485	IdentifierDecl	center_agx		1080433	2					
ANR	1080486	IdentifierDeclType	t1_glyph_space_coord		1080433	0					
ANR	1080487	Identifier	center_agx		1080433	1					
ANR	1080488	IdentifierDecl	center_agy		1080433	3					
ANR	1080489	IdentifierDeclType	t1_glyph_space_coord		1080433	0					
ANR	1080490	Identifier	center_agy		1080433	1					
ANR	1080491	IdentifierDeclStatement	"t1_glyph_space_coord sx , sy ;"	2509:4:104325:104352	1080433	4	True				
ANR	1080492	IdentifierDecl	sx		1080433	0					
ANR	1080493	IdentifierDeclType	t1_glyph_space_coord		1080433	0					
ANR	1080494	Identifier	sx		1080433	1					
ANR	1080495	IdentifierDecl	sy		1080433	1					
ANR	1080496	IdentifierDeclType	t1_glyph_space_coord		1080433	0					
ANR	1080497	Identifier	sy		1080433	1					
ANR	1080498	IdentifierDeclStatement	"bool aligned_min_x = false , aligned_min_y = false , aligned_max_x = false , aligned_max_y = false ;"	2510:4:104358:104453	1080433	5	True				
ANR	1080499	IdentifierDecl	aligned_min_x = false		1080433	0					
ANR	1080500	IdentifierDeclType	bool		1080433	0					
ANR	1080501	Identifier	aligned_min_x		1080433	1					
ANR	1080502	AssignmentExpression	aligned_min_x = false		1080433	2		=			
ANR	1080503	Identifier	false		1080433	0					
ANR	1080504	Identifier	false		1080433	1					
ANR	1080505	IdentifierDecl	aligned_min_y = false		1080433	1					
ANR	1080506	IdentifierDeclType	bool		1080433	0					
ANR	1080507	Identifier	aligned_min_y		1080433	1					
ANR	1080508	AssignmentExpression	aligned_min_y = false		1080433	2		=			
ANR	1080509	Identifier	false		1080433	0					
ANR	1080510	Identifier	false		1080433	1					
ANR	1080511	IdentifierDecl	aligned_max_x = false		1080433	2					
ANR	1080512	IdentifierDeclType	bool		1080433	0					
ANR	1080513	Identifier	aligned_max_x		1080433	1					
ANR	1080514	AssignmentExpression	aligned_max_x = false		1080433	2		=			
ANR	1080515	Identifier	false		1080433	0					
ANR	1080516	Identifier	false		1080433	1					
ANR	1080517	IdentifierDecl	aligned_max_y = false		1080433	3					
ANR	1080518	IdentifierDeclType	bool		1080433	0					
ANR	1080519	Identifier	aligned_max_y		1080433	1					
ANR	1080520	AssignmentExpression	aligned_max_y = false		1080433	2		=			
ANR	1080521	Identifier	false		1080433	0					
ANR	1080522	Identifier	false		1080433	1					
ANR	1080523	IdentifierDeclStatement	"bool aligned_x , aligned_y ;"	2511:4:104459:104484	1080433	6	True				
ANR	1080524	IdentifierDecl	aligned_x		1080433	0					
ANR	1080525	IdentifierDeclType	bool		1080433	0					
ANR	1080526	Identifier	aligned_x		1080433	1					
ANR	1080527	IdentifierDecl	aligned_y		1080433	1					
ANR	1080528	IdentifierDeclType	bool		1080433	0					
ANR	1080529	Identifier	aligned_y		1080433	1					
ANR	1080530	ForStatement	for ( i = beg_pole + 1 ; i <= end_pole ; i ++ )		1080433	7					
ANR	1080531	ForInit	i = beg_pole + 1 ;	2513:9:104496:104512	1080433	0	True				
ANR	1080532	AssignmentExpression	i = beg_pole + 1		1080433	0		=			
ANR	1080533	Identifier	i		1080433	0					
ANR	1080534	AdditiveExpression	beg_pole + 1		1080433	1		+			
ANR	1080535	Identifier	beg_pole		1080433	0					
ANR	1080536	PrimaryExpression	1		1080433	1					
ANR	1080537	Condition	i <= end_pole	2513:27:104514:104526	1080433	1	True				
ANR	1080538	RelationalExpression	i <= end_pole		1080433	0		<=			
ANR	1080539	Identifier	i		1080433	0					
ANR	1080540	Identifier	end_pole		1080433	1					
ANR	1080541	PostIncDecOperationExpression	i ++	2513:42:104529:104531	1080433	2	True				
ANR	1080542	Identifier	i		1080433	0					
ANR	1080543	IncDec	++		1080433	1					
ANR	1080544	CompoundStatement		13:8:576:641	1080433	3					
ANR	1080545	IdentifierDeclStatement	"t1_glyph_space_coord gx = self -> pole [ i ] . gx , gy = self -> pole [ i ] . gy ;"	2514:8:104544:104609	1080433	0	True				
ANR	1080546	IdentifierDecl	gx = self -> pole [ i ] . gx		1080433	0					
ANR	1080547	IdentifierDeclType	t1_glyph_space_coord		1080433	0					
ANR	1080548	Identifier	gx		1080433	1					
ANR	1080549	AssignmentExpression	gx = self -> pole [ i ] . gx		1080433	2		=			
ANR	1080550	Identifier	gx		1080433	0					
ANR	1080551	MemberAccess	self -> pole [ i ] . gx		1080433	1					
ANR	1080552	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080553	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080554	Identifier	self		1080433	0					
ANR	1080555	Identifier	pole		1080433	1					
ANR	1080556	Identifier	i		1080433	1					
ANR	1080557	Identifier	gx		1080433	1					
ANR	1080558	IdentifierDecl	gy = self -> pole [ i ] . gy		1080433	1					
ANR	1080559	IdentifierDeclType	t1_glyph_space_coord		1080433	0					
ANR	1080560	Identifier	gy		1080433	1					
ANR	1080561	AssignmentExpression	gy = self -> pole [ i ] . gy		1080433	2		=			
ANR	1080562	Identifier	gy		1080433	0					
ANR	1080563	MemberAccess	self -> pole [ i ] . gy		1080433	1					
ANR	1080564	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080565	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080566	Identifier	self		1080433	0					
ANR	1080567	Identifier	pole		1080433	1					
ANR	1080568	Identifier	i		1080433	1					
ANR	1080569	Identifier	gy		1080433	1					
ANR	1080570	ExpressionStatement	"min_gx = min ( min_gx , gx )"	2516:8:104620:104644	1080433	1	True				
ANR	1080571	AssignmentExpression	"min_gx = min ( min_gx , gx )"		1080433	0		=			
ANR	1080572	Identifier	min_gx		1080433	0					
ANR	1080573	CallExpression	"min ( min_gx , gx )"		1080433	1					
ANR	1080574	Callee	min		1080433	0					
ANR	1080575	Identifier	min		1080433	0					
ANR	1080576	ArgumentList	min_gx		1080433	1					
ANR	1080577	Argument	min_gx		1080433	0					
ANR	1080578	Identifier	min_gx		1080433	0					
ANR	1080579	Argument	gx		1080433	1					
ANR	1080580	Identifier	gx		1080433	0					
ANR	1080581	ExpressionStatement	"min_gy = min ( min_gy , gy )"	2517:8:104654:104678	1080433	2	True				
ANR	1080582	AssignmentExpression	"min_gy = min ( min_gy , gy )"		1080433	0		=			
ANR	1080583	Identifier	min_gy		1080433	0					
ANR	1080584	CallExpression	"min ( min_gy , gy )"		1080433	1					
ANR	1080585	Callee	min		1080433	0					
ANR	1080586	Identifier	min		1080433	0					
ANR	1080587	ArgumentList	min_gy		1080433	1					
ANR	1080588	Argument	min_gy		1080433	0					
ANR	1080589	Identifier	min_gy		1080433	0					
ANR	1080590	Argument	gy		1080433	1					
ANR	1080591	Identifier	gy		1080433	0					
ANR	1080592	ExpressionStatement	"max_gx = max ( max_gx , gx )"	2518:8:104688:104712	1080433	3	True				
ANR	1080593	AssignmentExpression	"max_gx = max ( max_gx , gx )"		1080433	0		=			
ANR	1080594	Identifier	max_gx		1080433	0					
ANR	1080595	CallExpression	"max ( max_gx , gx )"		1080433	1					
ANR	1080596	Callee	max		1080433	0					
ANR	1080597	Identifier	max		1080433	0					
ANR	1080598	ArgumentList	max_gx		1080433	1					
ANR	1080599	Argument	max_gx		1080433	0					
ANR	1080600	Identifier	max_gx		1080433	0					
ANR	1080601	Argument	gx		1080433	1					
ANR	1080602	Identifier	gx		1080433	0					
ANR	1080603	ExpressionStatement	"max_gy = max ( max_gy , gy )"	2519:8:104722:104746	1080433	4	True				
ANR	1080604	AssignmentExpression	"max_gy = max ( max_gy , gy )"		1080433	0		=			
ANR	1080605	Identifier	max_gy		1080433	0					
ANR	1080606	CallExpression	"max ( max_gy , gy )"		1080433	1					
ANR	1080607	Callee	max		1080433	0					
ANR	1080608	Identifier	max		1080433	0					
ANR	1080609	ArgumentList	max_gy		1080433	1					
ANR	1080610	Argument	max_gy		1080433	0					
ANR	1080611	Identifier	max_gy		1080433	0					
ANR	1080612	Argument	gy		1080433	1					
ANR	1080613	Identifier	gy		1080433	0					
ANR	1080614	ForStatement	for ( i = beg_pole ; i <= end_pole ; i ++ )		1080433	8					
ANR	1080615	ForInit	i = beg_pole ;	2521:9:104763:104775	1080433	0	True				
ANR	1080616	AssignmentExpression	i = beg_pole		1080433	0		=			
ANR	1080617	Identifier	i		1080433	0					
ANR	1080618	Identifier	beg_pole		1080433	1					
ANR	1080619	Condition	i <= end_pole	2521:23:104777:104789	1080433	1	True				
ANR	1080620	RelationalExpression	i <= end_pole		1080433	0		<=			
ANR	1080621	Identifier	i		1080433	0					
ANR	1080622	Identifier	end_pole		1080433	1					
ANR	1080623	PostIncDecOperationExpression	i ++	2521:38:104792:104794	1080433	2	True				
ANR	1080624	Identifier	i		1080433	0					
ANR	1080625	IncDec	++		1080433	1					
ANR	1080626	CompoundStatement		20:43:829:829	1080433	3					
ANR	1080627	IfStatement	if ( self -> pole [ i ] . gx == min_gx )		1080433	0					
ANR	1080628	Condition	self -> pole [ i ] . gx == min_gx	2522:12:104811:104836	1080433	0	True				
ANR	1080629	EqualityExpression	self -> pole [ i ] . gx == min_gx		1080433	0		==			
ANR	1080630	MemberAccess	self -> pole [ i ] . gx		1080433	0					
ANR	1080631	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080632	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080633	Identifier	self		1080433	0					
ANR	1080634	Identifier	pole		1080433	1					
ANR	1080635	Identifier	i		1080433	1					
ANR	1080636	Identifier	gx		1080433	1					
ANR	1080637	Identifier	min_gx		1080433	1					
ANR	1080638	ExpressionStatement	aligned_min_x |= self -> pole [ i ] . aligned_x	2523:12:104851:104891	1080433	1	True				
ANR	1080639	AssignmentExpression	aligned_min_x |= self -> pole [ i ] . aligned_x		1080433	0		|=			
ANR	1080640	Identifier	aligned_min_x		1080433	0					
ANR	1080641	MemberAccess	self -> pole [ i ] . aligned_x		1080433	1					
ANR	1080642	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080643	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080644	Identifier	self		1080433	0					
ANR	1080645	Identifier	pole		1080433	1					
ANR	1080646	Identifier	i		1080433	1					
ANR	1080647	Identifier	aligned_x		1080433	1					
ANR	1080648	IfStatement	if ( self -> pole [ i ] . gy == min_gy )		1080433	1					
ANR	1080649	Condition	self -> pole [ i ] . gy == min_gy	2524:12:104905:104930	1080433	0	True				
ANR	1080650	EqualityExpression	self -> pole [ i ] . gy == min_gy		1080433	0		==			
ANR	1080651	MemberAccess	self -> pole [ i ] . gy		1080433	0					
ANR	1080652	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080653	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080654	Identifier	self		1080433	0					
ANR	1080655	Identifier	pole		1080433	1					
ANR	1080656	Identifier	i		1080433	1					
ANR	1080657	Identifier	gy		1080433	1					
ANR	1080658	Identifier	min_gy		1080433	1					
ANR	1080659	ExpressionStatement	aligned_min_y |= self -> pole [ i ] . aligned_y	2525:12:104945:104985	1080433	1	True				
ANR	1080660	AssignmentExpression	aligned_min_y |= self -> pole [ i ] . aligned_y		1080433	0		|=			
ANR	1080661	Identifier	aligned_min_y		1080433	0					
ANR	1080662	MemberAccess	self -> pole [ i ] . aligned_y		1080433	1					
ANR	1080663	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080664	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080665	Identifier	self		1080433	0					
ANR	1080666	Identifier	pole		1080433	1					
ANR	1080667	Identifier	i		1080433	1					
ANR	1080668	Identifier	aligned_y		1080433	1					
ANR	1080669	IfStatement	if ( self -> pole [ i ] . gx == max_gx )		1080433	2					
ANR	1080670	Condition	self -> pole [ i ] . gx == max_gx	2526:12:104999:105024	1080433	0	True				
ANR	1080671	EqualityExpression	self -> pole [ i ] . gx == max_gx		1080433	0		==			
ANR	1080672	MemberAccess	self -> pole [ i ] . gx		1080433	0					
ANR	1080673	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080674	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080675	Identifier	self		1080433	0					
ANR	1080676	Identifier	pole		1080433	1					
ANR	1080677	Identifier	i		1080433	1					
ANR	1080678	Identifier	gx		1080433	1					
ANR	1080679	Identifier	max_gx		1080433	1					
ANR	1080680	ExpressionStatement	aligned_max_x |= self -> pole [ i ] . aligned_x	2527:12:105039:105079	1080433	1	True				
ANR	1080681	AssignmentExpression	aligned_max_x |= self -> pole [ i ] . aligned_x		1080433	0		|=			
ANR	1080682	Identifier	aligned_max_x		1080433	0					
ANR	1080683	MemberAccess	self -> pole [ i ] . aligned_x		1080433	1					
ANR	1080684	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080685	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080686	Identifier	self		1080433	0					
ANR	1080687	Identifier	pole		1080433	1					
ANR	1080688	Identifier	i		1080433	1					
ANR	1080689	Identifier	aligned_x		1080433	1					
ANR	1080690	IfStatement	if ( self -> pole [ i ] . gy == max_gy )		1080433	3					
ANR	1080691	Condition	self -> pole [ i ] . gy == max_gy	2528:12:105093:105118	1080433	0	True				
ANR	1080692	EqualityExpression	self -> pole [ i ] . gy == max_gy		1080433	0		==			
ANR	1080693	MemberAccess	self -> pole [ i ] . gy		1080433	0					
ANR	1080694	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080695	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080696	Identifier	self		1080433	0					
ANR	1080697	Identifier	pole		1080433	1					
ANR	1080698	Identifier	i		1080433	1					
ANR	1080699	Identifier	gy		1080433	1					
ANR	1080700	Identifier	max_gy		1080433	1					
ANR	1080701	ExpressionStatement	aligned_max_y |= self -> pole [ i ] . aligned_y	2529:12:105133:105173	1080433	1	True				
ANR	1080702	AssignmentExpression	aligned_max_y |= self -> pole [ i ] . aligned_y		1080433	0		|=			
ANR	1080703	Identifier	aligned_max_y		1080433	0					
ANR	1080704	MemberAccess	self -> pole [ i ] . aligned_y		1080433	1					
ANR	1080705	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080706	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080707	Identifier	self		1080433	0					
ANR	1080708	Identifier	pole		1080433	1					
ANR	1080709	Identifier	i		1080433	1					
ANR	1080710	Identifier	aligned_y		1080433	1					
ANR	1080711	ExpressionStatement	aligned_x = aligned_min_x && aligned_max_x	2531:4:105185:105227	1080433	9	True				
ANR	1080712	AssignmentExpression	aligned_x = aligned_min_x && aligned_max_x		1080433	0		=			
ANR	1080713	Identifier	aligned_x		1080433	0					
ANR	1080714	AndExpression	aligned_min_x && aligned_max_x		1080433	1		&&			
ANR	1080715	Identifier	aligned_min_x		1080433	0					
ANR	1080716	Identifier	aligned_max_x		1080433	1					
ANR	1080717	ExpressionStatement	aligned_y = aligned_min_y && aligned_max_y	2532:4:105233:105275	1080433	10	True				
ANR	1080718	AssignmentExpression	aligned_y = aligned_min_y && aligned_max_y		1080433	0		=			
ANR	1080719	Identifier	aligned_y		1080433	0					
ANR	1080720	AndExpression	aligned_min_y && aligned_max_y		1080433	1		&&			
ANR	1080721	Identifier	aligned_min_y		1080433	0					
ANR	1080722	Identifier	aligned_max_y		1080433	1					
ANR	1080723	IfStatement	if ( aligned_x && aligned_y )		1080433	11					
ANR	1080724	Condition	aligned_x && aligned_y	2533:8:105285:105306	1080433	0	True				
ANR	1080725	AndExpression	aligned_x && aligned_y		1080433	0		&&			
ANR	1080726	Identifier	aligned_x		1080433	0					
ANR	1080727	Identifier	aligned_y		1080433	1					
ANR	1080728	ReturnStatement	return ;	2534:8:105317:105323	1080433	1	True				
ANR	1080729	ExpressionStatement	center_gx = center_agx = ( min_gx + max_gx ) / 2	2535:4:105395:105441	1080433	12	True				
ANR	1080730	AssignmentExpression	center_gx = center_agx = ( min_gx + max_gx ) / 2		1080433	0		=			
ANR	1080731	Identifier	center_gx		1080433	0					
ANR	1080732	AssignmentExpression	center_agx = ( min_gx + max_gx ) / 2		1080433	1		=			
ANR	1080733	Identifier	center_agx		1080433	0					
ANR	1080734	MultiplicativeExpression	( min_gx + max_gx ) / 2		1080433	1		/			
ANR	1080735	AdditiveExpression	min_gx + max_gx		1080433	0		+			
ANR	1080736	Identifier	min_gx		1080433	0					
ANR	1080737	Identifier	max_gx		1080433	1					
ANR	1080738	PrimaryExpression	2		1080433	1					
ANR	1080739	ExpressionStatement	center_gy = center_agy = ( min_gy + max_gy ) / 2	2536:4:105447:105493	1080433	13	True				
ANR	1080740	AssignmentExpression	center_gy = center_agy = ( min_gy + max_gy ) / 2		1080433	0		=			
ANR	1080741	Identifier	center_gy		1080433	0					
ANR	1080742	AssignmentExpression	center_agy = ( min_gy + max_gy ) / 2		1080433	1		=			
ANR	1080743	Identifier	center_agy		1080433	0					
ANR	1080744	MultiplicativeExpression	( min_gy + max_gy ) / 2		1080433	1		/			
ANR	1080745	AdditiveExpression	min_gy + max_gy		1080433	0		+			
ANR	1080746	Identifier	min_gy		1080433	0					
ANR	1080747	Identifier	max_gy		1080433	1					
ANR	1080748	PrimaryExpression	2		1080433	1					
ANR	1080749	IfStatement	if ( ! aligned_x )		1080433	14					
ANR	1080750	Condition	! aligned_x	2537:8:105503:105512	1080433	0	True				
ANR	1080751	UnaryOperationExpression	! aligned_x		1080433	0					
ANR	1080752	UnaryOperator	!		1080433	0					
ANR	1080753	Identifier	aligned_x		1080433	1					
ANR	1080754	CompoundStatement		38:8:1626:1691	1080433	1					
ANR	1080755	IdentifierDeclStatement	"t1_hint * hint = t1_hinter__find_vstem_by_center ( self , center_gx ) ;"	2539:8:105594:105659	1080433	0	True				
ANR	1080756	IdentifierDecl	"* hint = t1_hinter__find_vstem_by_center ( self , center_gx )"		1080433	0					
ANR	1080757	IdentifierDeclType	t1_hint *		1080433	0					
ANR	1080758	Identifier	hint		1080433	1					
ANR	1080759	AssignmentExpression	"* hint = t1_hinter__find_vstem_by_center ( self , center_gx )"		1080433	2		=			
ANR	1080760	Identifier	hint		1080433	0					
ANR	1080761	CallExpression	"t1_hinter__find_vstem_by_center ( self , center_gx )"		1080433	1					
ANR	1080762	Callee	t1_hinter__find_vstem_by_center		1080433	0					
ANR	1080763	Identifier	t1_hinter__find_vstem_by_center		1080433	0					
ANR	1080764	ArgumentList	self		1080433	1					
ANR	1080765	Argument	self		1080433	0					
ANR	1080766	Identifier	self		1080433	0					
ANR	1080767	Argument	center_gx		1080433	1					
ANR	1080768	Identifier	center_gx		1080433	0					
ANR	1080769	IfStatement	if ( hint != NULL )		1080433	1					
ANR	1080770	Condition	hint != NULL	2540:12:105673:105684	1080433	0	True				
ANR	1080771	EqualityExpression	hint != NULL		1080433	0		!=			
ANR	1080772	Identifier	hint		1080433	0					
ANR	1080773	Identifier	NULL		1080433	1					
ANR	1080774	CompoundStatement		39:26:1719:1719	1080433	1					
ANR	1080775	ExpressionStatement	center_agx = ( hint -> ag0 + hint -> ag1 ) / 2	2541:12:105701:105741	1080433	0	True				
ANR	1080776	AssignmentExpression	center_agx = ( hint -> ag0 + hint -> ag1 ) / 2		1080433	0		=			
ANR	1080777	Identifier	center_agx		1080433	0					
ANR	1080778	MultiplicativeExpression	( hint -> ag0 + hint -> ag1 ) / 2		1080433	1		/			
ANR	1080779	AdditiveExpression	hint -> ag0 + hint -> ag1		1080433	0		+			
ANR	1080780	PtrMemberAccess	hint -> ag0		1080433	0					
ANR	1080781	Identifier	hint		1080433	0					
ANR	1080782	Identifier	ag0		1080433	1					
ANR	1080783	PtrMemberAccess	hint -> ag1		1080433	1					
ANR	1080784	Identifier	hint		1080433	0					
ANR	1080785	Identifier	ag1		1080433	1					
ANR	1080786	PrimaryExpression	2		1080433	1					
ANR	1080787	ExpressionStatement	aligned_x = true	2542:12:105778:105794	1080433	1	True				
ANR	1080788	AssignmentExpression	aligned_x = true		1080433	0		=			
ANR	1080789	Identifier	aligned_x		1080433	0					
ANR	1080790	Identifier	true		1080433	1					
ANR	1080791	ExpressionStatement	"t1_hinter__align_to_grid ( self , self -> g2o_fraction / 2 , & center_agx , & center_agy , CONTRAST_STEMS || self -> align_to_pixels )"	2545:4:105816:105969	1080433	15	True				
ANR	1080792	CallExpression	"t1_hinter__align_to_grid ( self , self -> g2o_fraction / 2 , & center_agx , & center_agy , CONTRAST_STEMS || self -> align_to_pixels )"		1080433	0					
ANR	1080793	Callee	t1_hinter__align_to_grid		1080433	0					
ANR	1080794	Identifier	t1_hinter__align_to_grid		1080433	0					
ANR	1080795	ArgumentList	self		1080433	1					
ANR	1080796	Argument	self		1080433	0					
ANR	1080797	Identifier	self		1080433	0					
ANR	1080798	Argument	self -> g2o_fraction / 2		1080433	1					
ANR	1080799	MultiplicativeExpression	self -> g2o_fraction / 2		1080433	0		/			
ANR	1080800	PtrMemberAccess	self -> g2o_fraction		1080433	0					
ANR	1080801	Identifier	self		1080433	0					
ANR	1080802	Identifier	g2o_fraction		1080433	1					
ANR	1080803	PrimaryExpression	2		1080433	1					
ANR	1080804	Argument	& center_agx		1080433	2					
ANR	1080805	UnaryOperationExpression	& center_agx		1080433	0					
ANR	1080806	UnaryOperator	&		1080433	0					
ANR	1080807	Identifier	center_agx		1080433	1					
ANR	1080808	Argument	& center_agy		1080433	3					
ANR	1080809	UnaryOperationExpression	& center_agy		1080433	0					
ANR	1080810	UnaryOperator	&		1080433	0					
ANR	1080811	Identifier	center_agy		1080433	1					
ANR	1080812	Argument	CONTRAST_STEMS || self -> align_to_pixels		1080433	4					
ANR	1080813	OrExpression	CONTRAST_STEMS || self -> align_to_pixels		1080433	0		||			
ANR	1080814	Identifier	CONTRAST_STEMS		1080433	0					
ANR	1080815	PtrMemberAccess	self -> align_to_pixels		1080433	1					
ANR	1080816	Identifier	self		1080433	0					
ANR	1080817	Identifier	align_to_pixels		1080433	1					
ANR	1080818	ExpressionStatement	sx = center_agx - center_gx	2547:4:105975:106002	1080433	16	True				
ANR	1080819	AssignmentExpression	sx = center_agx - center_gx		1080433	0		=			
ANR	1080820	Identifier	sx		1080433	0					
ANR	1080821	AdditiveExpression	center_agx - center_gx		1080433	1		-			
ANR	1080822	Identifier	center_agx		1080433	0					
ANR	1080823	Identifier	center_gx		1080433	1					
ANR	1080824	ExpressionStatement	sy = center_agy - center_gy	2548:4:106008:106035	1080433	17	True				
ANR	1080825	AssignmentExpression	sy = center_agy - center_gy		1080433	0		=			
ANR	1080826	Identifier	sy		1080433	0					
ANR	1080827	AdditiveExpression	center_agy - center_gy		1080433	1		-			
ANR	1080828	Identifier	center_agy		1080433	0					
ANR	1080829	Identifier	center_gy		1080433	1					
ANR	1080830	IfStatement	if ( aligned_x )		1080433	18					
ANR	1080831	Condition	aligned_x	2549:8:106045:106053	1080433	0	True				
ANR	1080832	Identifier	aligned_x		1080433	0					
ANR	1080833	ExpressionStatement	sx = 0	2550:8:106064:106070	1080433	1	True				
ANR	1080834	AssignmentExpression	sx = 0		1080433	0		=			
ANR	1080835	Identifier	sx		1080433	0					
ANR	1080836	PrimaryExpression	0		1080433	1					
ANR	1080837	IfStatement	if ( aligned_y )		1080433	19					
ANR	1080838	Condition	aligned_y	2551:8:106080:106088	1080433	0	True				
ANR	1080839	Identifier	aligned_y		1080433	0					
ANR	1080840	ExpressionStatement	sy = 0	2552:8:106099:106105	1080433	1	True				
ANR	1080841	AssignmentExpression	sy = 0		1080433	0		=			
ANR	1080842	Identifier	sy		1080433	0					
ANR	1080843	PrimaryExpression	0		1080433	1					
ANR	1080844	ForStatement	for ( i = beg_pole ; i <= end_pole ; i ++ )		1080433	20					
ANR	1080845	ForInit	i = beg_pole ;	2554:9:106194:106206	1080433	0	True				
ANR	1080846	AssignmentExpression	i = beg_pole		1080433	0		=			
ANR	1080847	Identifier	i		1080433	0					
ANR	1080848	Identifier	beg_pole		1080433	1					
ANR	1080849	Condition	i <= end_pole	2554:23:106208:106220	1080433	1	True				
ANR	1080850	RelationalExpression	i <= end_pole		1080433	0		<=			
ANR	1080851	Identifier	i		1080433	0					
ANR	1080852	Identifier	end_pole		1080433	1					
ANR	1080853	PostIncDecOperationExpression	i ++	2554:38:106223:106225	1080433	2	True				
ANR	1080854	Identifier	i		1080433	0					
ANR	1080855	IncDec	++		1080433	1					
ANR	1080856	CompoundStatement		53:43:2260:2260	1080433	3					
ANR	1080857	ExpressionStatement	self -> pole [ i ] . ax = self -> pole [ i ] . gx + sx	2555:8:106238:106278	1080433	0	True				
ANR	1080858	AssignmentExpression	self -> pole [ i ] . ax = self -> pole [ i ] . gx + sx		1080433	0		=			
ANR	1080859	MemberAccess	self -> pole [ i ] . ax		1080433	0					
ANR	1080860	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080861	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080862	Identifier	self		1080433	0					
ANR	1080863	Identifier	pole		1080433	1					
ANR	1080864	Identifier	i		1080433	1					
ANR	1080865	Identifier	ax		1080433	1					
ANR	1080866	AdditiveExpression	self -> pole [ i ] . gx + sx		1080433	1		+			
ANR	1080867	MemberAccess	self -> pole [ i ] . gx		1080433	0					
ANR	1080868	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080869	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080870	Identifier	self		1080433	0					
ANR	1080871	Identifier	pole		1080433	1					
ANR	1080872	Identifier	i		1080433	1					
ANR	1080873	Identifier	gx		1080433	1					
ANR	1080874	Identifier	sx		1080433	1					
ANR	1080875	ExpressionStatement	self -> pole [ i ] . ay = self -> pole [ i ] . gy + sy	2556:8:106288:106328	1080433	1	True				
ANR	1080876	AssignmentExpression	self -> pole [ i ] . ay = self -> pole [ i ] . gy + sy		1080433	0		=			
ANR	1080877	MemberAccess	self -> pole [ i ] . ay		1080433	0					
ANR	1080878	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080879	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080880	Identifier	self		1080433	0					
ANR	1080881	Identifier	pole		1080433	1					
ANR	1080882	Identifier	i		1080433	1					
ANR	1080883	Identifier	ay		1080433	1					
ANR	1080884	AdditiveExpression	self -> pole [ i ] . gy + sy		1080433	1		+			
ANR	1080885	MemberAccess	self -> pole [ i ] . gy		1080433	0					
ANR	1080886	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080887	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080888	Identifier	self		1080433	0					
ANR	1080889	Identifier	pole		1080433	1					
ANR	1080890	Identifier	i		1080433	1					
ANR	1080891	Identifier	gy		1080433	1					
ANR	1080892	Identifier	sy		1080433	1					
ANR	1080893	ExpressionStatement	self -> pole [ i ] . aligned_x |= ! aligned_x	2557:8:106338:106375	1080433	2	True				
ANR	1080894	AssignmentExpression	self -> pole [ i ] . aligned_x |= ! aligned_x		1080433	0		|=			
ANR	1080895	MemberAccess	self -> pole [ i ] . aligned_x		1080433	0					
ANR	1080896	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080897	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080898	Identifier	self		1080433	0					
ANR	1080899	Identifier	pole		1080433	1					
ANR	1080900	Identifier	i		1080433	1					
ANR	1080901	Identifier	aligned_x		1080433	1					
ANR	1080902	UnaryOperationExpression	! aligned_x		1080433	1					
ANR	1080903	UnaryOperator	!		1080433	0					
ANR	1080904	Identifier	aligned_x		1080433	1					
ANR	1080905	ExpressionStatement	self -> pole [ i ] . aligned_y |= ! aligned_y	2558:8:106436:106473	1080433	3	True				
ANR	1080906	AssignmentExpression	self -> pole [ i ] . aligned_y |= ! aligned_y		1080433	0		|=			
ANR	1080907	MemberAccess	self -> pole [ i ] . aligned_y		1080433	0					
ANR	1080908	ArrayIndexing	self -> pole [ i ]		1080433	0					
ANR	1080909	PtrMemberAccess	self -> pole		1080433	0					
ANR	1080910	Identifier	self		1080433	0					
ANR	1080911	Identifier	pole		1080433	1					
ANR	1080912	Identifier	i		1080433	1					
ANR	1080913	Identifier	aligned_y		1080433	1					
ANR	1080914	UnaryOperationExpression	! aligned_y		1080433	1					
ANR	1080915	UnaryOperator	!		1080433	0					
ANR	1080916	Identifier	aligned_y		1080433	1					
ANR	1080917	ReturnType	static void		1080433	1					
ANR	1080918	Identifier	t1_hinter__process_dotsection		1080433	2					
ANR	1080919	ParameterList	"t1_hinter * self , int beg_pole , int end_pole"		1080433	3					
ANR	1080920	Parameter	t1_hinter * self	2501:42:103921:103936	1080433	0	True				
ANR	1080921	ParameterType	t1_hinter *		1080433	0					
ANR	1080922	Identifier	self		1080433	1					
ANR	1080923	Parameter	int beg_pole	2501:60:103939:103950	1080433	1	True				
ANR	1080924	ParameterType	int		1080433	0					
ANR	1080925	Identifier	beg_pole		1080433	1					
ANR	1080926	Parameter	int end_pole	2501:74:103953:103964	1080433	2	True				
ANR	1080927	ParameterType	int		1080433	0					
ANR	1080928	Identifier	end_pole		1080433	1					
ANR	1080929	CFGEntryNode	ENTRY		1080433		True				
ANR	1080930	CFGExitNode	EXIT		1080433		True				
ANR	1080931	Symbol	min_gy		1080433						
ANR	1080932	Symbol	self -> pole [ i ] . ax		1080433						
ANR	1080933	Symbol	min_gx		1080433						
ANR	1080934	Symbol	aligned_y		1080433						
ANR	1080935	Symbol	aligned_x		1080433						
ANR	1080936	Symbol	self -> pole [ i ] . ay		1080433						
ANR	1080937	Symbol	self -> pole [ beg_pole ] . gx		1080433						
ANR	1080938	Symbol	self -> pole [ beg_pole ] . gy		1080433						
ANR	1080939	Symbol	hint -> ag1		1080433						
ANR	1080940	Symbol	t1_hinter__find_vstem_by_center		1080433						
ANR	1080941	Symbol	hint -> ag0		1080433						
ANR	1080942	Symbol	* beg_pole		1080433						
ANR	1080943	Symbol	self -> align_to_pixels		1080433						
ANR	1080944	Symbol	max_gy		1080433						
ANR	1080945	Symbol	self -> pole [ i ] . aligned_y		1080433						
ANR	1080946	Symbol	* hint		1080433						
ANR	1080947	Symbol	self -> g2o_fraction		1080433						
ANR	1080948	Symbol	max_gx		1080433						
ANR	1080949	Symbol	NULL		1080433						
ANR	1080950	Symbol	* self		1080433						
ANR	1080951	Symbol	beg_pole		1080433						
ANR	1080952	Symbol	aligned_max_x		1080433						
ANR	1080953	Symbol	aligned_max_y		1080433						
ANR	1080954	Symbol	hint		1080433						
ANR	1080955	Symbol	true		1080433						
ANR	1080956	Symbol	self -> pole [ i ] . gy		1080433						
ANR	1080957	Symbol	CONTRAST_STEMS		1080433						
ANR	1080958	Symbol	end_pole		1080433						
ANR	1080959	Symbol	* self -> pole		1080433						
ANR	1080960	Symbol	min		1080433						
ANR	1080961	Symbol	self -> pole		1080433						
ANR	1080962	Symbol	aligned_min_x		1080433						
ANR	1080963	Symbol	aligned_min_y		1080433						
ANR	1080964	Symbol	self -> pole [ i ] . aligned_x		1080433						
ANR	1080965	Symbol	self -> pole [ i ] . gx		1080433						
ANR	1080966	Symbol	& center_agx		1080433						
ANR	1080967	Symbol	& center_agy		1080433						
ANR	1080968	Symbol	* * self		1080433						
ANR	1080969	Symbol	sx		1080433						
ANR	1080970	Symbol	max		1080433						
ANR	1080971	Symbol	sy		1080433						
ANR	1080972	Symbol	false		1080433						
ANR	1080973	Symbol	i		1080433						
ANR	1080974	Symbol	center_gx		1080433						
ANR	1080975	Symbol	center_gy		1080433						
ANR	1080976	Symbol	center_agy		1080433						
ANR	1080977	Symbol	center_agx		1080433						
ANR	1080978	Symbol	gx		1080433						
ANR	1080979	Symbol	gy		1080433						
ANR	1080980	Symbol	* i		1080433						
ANR	1080981	Symbol	self		1080433						
ANR	1080982	Function	t1_hinter__process_dotsections	2562:0:106484:106995							
ANR	1080983	FunctionDef	t1_hinter__process_dotsections (t1_hinter * self)		1080982	0					
ANR	1080984	CompoundStatement		2563:0:106545:106995	1080982	0					
ANR	1080985	IdentifierDeclStatement	int i ;	2563:3:106549:106554	1080982	0	True				
ANR	1080986	IdentifierDecl	i		1080982	0					
ANR	1080987	IdentifierDeclType	int		1080982	0					
ANR	1080988	Identifier	i		1080982	1					
ANR	1080989	ForStatement	for ( i = 0 ; i < self -> hint_count ; i ++ )		1080982	1					
ANR	1080990	ForInit	i = 0 ;	2565:8:106565:106570	1080982	0	True				
ANR	1080991	AssignmentExpression	i = 0		1080982	0		=			
ANR	1080992	Identifier	i		1080982	0					
ANR	1080993	PrimaryExpression	0		1080982	1					
ANR	1080994	Condition	i < self -> hint_count	2565:15:106572:106591	1080982	1	True				
ANR	1080995	RelationalExpression	i < self -> hint_count		1080982	0		<			
ANR	1080996	Identifier	i		1080982	0					
ANR	1080997	PtrMemberAccess	self -> hint_count		1080982	1					
ANR	1080998	Identifier	self		1080982	0					
ANR	1080999	Identifier	hint_count		1080982	1					
ANR	1081000	PostIncDecOperationExpression	i ++	2565:37:106594:106596	1080982	2	True				
ANR	1081001	Identifier	i		1080982	0					
ANR	1081002	IncDec	++		1080982	1					
ANR	1081003	IfStatement	if ( self -> hint [ i ] . type == dot )		1080982	3					
ANR	1081004	Condition	self -> hint [ i ] . type == dot	2566:12:106611:106635	1080982	0	True				
ANR	1081005	EqualityExpression	self -> hint [ i ] . type == dot		1080982	0		==			
ANR	1081006	MemberAccess	self -> hint [ i ] . type		1080982	0					
ANR	1081007	ArrayIndexing	self -> hint [ i ]		1080982	0					
ANR	1081008	PtrMemberAccess	self -> hint		1080982	0					
ANR	1081009	Identifier	self		1080982	0					
ANR	1081010	Identifier	hint		1080982	1					
ANR	1081011	Identifier	i		1080982	1					
ANR	1081012	Identifier	type		1080982	1					
ANR	1081013	Identifier	dot		1080982	1					
ANR	1081014	CompoundStatement		8:12:316:367	1080982	1					
ANR	1081015	IdentifierDeclStatement	int pole_index = self -> hint_range [ self -> hint [ i ] . range_index ] . beg_pole ;	2567:12:106652:106721	1080982	0	True				
ANR	1081016	IdentifierDecl	pole_index = self -> hint_range [ self -> hint [ i ] . range_index ] . beg_pole		1080982	0					
ANR	1081017	IdentifierDeclType	int		1080982	0					
ANR	1081018	Identifier	pole_index		1080982	1					
ANR	1081019	AssignmentExpression	pole_index = self -> hint_range [ self -> hint [ i ] . range_index ] . beg_pole		1080982	2		=			
ANR	1081020	Identifier	pole_index		1080982	0					
ANR	1081021	MemberAccess	self -> hint_range [ self -> hint [ i ] . range_index ] . beg_pole		1080982	1					
ANR	1081022	ArrayIndexing	self -> hint_range [ self -> hint [ i ] . range_index ]		1080982	0					
ANR	1081023	PtrMemberAccess	self -> hint_range		1080982	0					
ANR	1081024	Identifier	self		1080982	0					
ANR	1081025	Identifier	hint_range		1080982	1					
ANR	1081026	MemberAccess	self -> hint [ i ] . range_index		1080982	1					
ANR	1081027	ArrayIndexing	self -> hint [ i ]		1080982	0					
ANR	1081028	PtrMemberAccess	self -> hint		1080982	0					
ANR	1081029	Identifier	self		1080982	0					
ANR	1081030	Identifier	hint		1080982	1					
ANR	1081031	Identifier	i		1080982	1					
ANR	1081032	Identifier	range_index		1080982	1					
ANR	1081033	Identifier	beg_pole		1080982	1					
ANR	1081034	IdentifierDeclStatement	int contour_index = self -> pole [ pole_index ] . contour_index ;	2568:12:106735:106791	1080982	1	True				
ANR	1081035	IdentifierDecl	contour_index = self -> pole [ pole_index ] . contour_index		1080982	0					
ANR	1081036	IdentifierDeclType	int		1080982	0					
ANR	1081037	Identifier	contour_index		1080982	1					
ANR	1081038	AssignmentExpression	contour_index = self -> pole [ pole_index ] . contour_index		1080982	2		=			
ANR	1081039	Identifier	contour_index		1080982	0					
ANR	1081040	MemberAccess	self -> pole [ pole_index ] . contour_index		1080982	1					
ANR	1081041	ArrayIndexing	self -> pole [ pole_index ]		1080982	0					
ANR	1081042	PtrMemberAccess	self -> pole		1080982	0					
ANR	1081043	Identifier	self		1080982	0					
ANR	1081044	Identifier	pole		1080982	1					
ANR	1081045	Identifier	pole_index		1080982	1					
ANR	1081046	Identifier	contour_index		1080982	1					
ANR	1081047	IdentifierDeclStatement	int beg_pole = self -> contour [ contour_index ] ;	2569:12:106805:106848	1080982	2	True				
ANR	1081048	IdentifierDecl	beg_pole = self -> contour [ contour_index ]		1080982	0					
ANR	1081049	IdentifierDeclType	int		1080982	0					
ANR	1081050	Identifier	beg_pole		1080982	1					
ANR	1081051	AssignmentExpression	beg_pole = self -> contour [ contour_index ]		1080982	2		=			
ANR	1081052	Identifier	beg_pole		1080982	0					
ANR	1081053	ArrayIndexing	self -> contour [ contour_index ]		1080982	1					
ANR	1081054	PtrMemberAccess	self -> contour		1080982	0					
ANR	1081055	Identifier	self		1080982	0					
ANR	1081056	Identifier	contour		1080982	1					
ANR	1081057	Identifier	contour_index		1080982	1					
ANR	1081058	IdentifierDeclStatement	int end_pole = self -> contour [ contour_index + 1 ] - 2 ;	2570:12:106862:106913	1080982	3	True				
ANR	1081059	IdentifierDecl	end_pole = self -> contour [ contour_index + 1 ] - 2		1080982	0					
ANR	1081060	IdentifierDeclType	int		1080982	0					
ANR	1081061	Identifier	end_pole		1080982	1					
ANR	1081062	AssignmentExpression	end_pole = self -> contour [ contour_index + 1 ] - 2		1080982	2		=			
ANR	1081063	Identifier	end_pole		1080982	0					
ANR	1081064	AdditiveExpression	self -> contour [ contour_index + 1 ] - 2		1080982	1		-			
ANR	1081065	ArrayIndexing	self -> contour [ contour_index + 1 ]		1080982	0					
ANR	1081066	PtrMemberAccess	self -> contour		1080982	0					
ANR	1081067	Identifier	self		1080982	0					
ANR	1081068	Identifier	contour		1080982	1					
ANR	1081069	AdditiveExpression	contour_index + 1		1080982	1		+			
ANR	1081070	Identifier	contour_index		1080982	0					
ANR	1081071	PrimaryExpression	1		1080982	1					
ANR	1081072	PrimaryExpression	2		1080982	1					
ANR	1081073	ExpressionStatement	"t1_hinter__process_dotsection ( self , beg_pole , end_pole )"	2572:12:106928:106983	1080982	4	True				
ANR	1081074	CallExpression	"t1_hinter__process_dotsection ( self , beg_pole , end_pole )"		1080982	0					
ANR	1081075	Callee	t1_hinter__process_dotsection		1080982	0					
ANR	1081076	Identifier	t1_hinter__process_dotsection		1080982	0					
ANR	1081077	ArgumentList	self		1080982	1					
ANR	1081078	Argument	self		1080982	0					
ANR	1081079	Identifier	self		1080982	0					
ANR	1081080	Argument	beg_pole		1080982	1					
ANR	1081081	Identifier	beg_pole		1080982	0					
ANR	1081082	Argument	end_pole		1080982	2					
ANR	1081083	Identifier	end_pole		1080982	0					
ANR	1081084	ReturnType	static void		1080982	1					
ANR	1081085	Identifier	t1_hinter__process_dotsections		1080982	2					
ANR	1081086	ParameterList	t1_hinter * self		1080982	3					
ANR	1081087	Parameter	t1_hinter * self	2562:43:106527:106542	1080982	0	True				
ANR	1081088	ParameterType	t1_hinter *		1080982	0					
ANR	1081089	Identifier	self		1080982	1					
ANR	1081090	CFGEntryNode	ENTRY		1080982		True				
ANR	1081091	CFGExitNode	EXIT		1080982		True				
ANR	1081092	Symbol	self -> pole [ pole_index ] . contour_index		1080982						
ANR	1081093	Symbol	* self -> pole		1080982						
ANR	1081094	Symbol	end_pole		1080982						
ANR	1081095	Symbol	dot		1080982						
ANR	1081096	Symbol	* self -> hint		1080982						
ANR	1081097	Symbol	* self -> hint [ i ] . range_index		1080982						
ANR	1081098	Symbol	* * * self		1080982						
ANR	1081099	Symbol	self -> pole		1080982						
ANR	1081100	Symbol	contour_index		1080982						
ANR	1081101	Symbol	* contour_index		1080982						
ANR	1081102	Symbol	self -> hint_range [ self -> hint [ i ] . range_index ] . beg_pole		1080982						
ANR	1081103	Symbol	* self -> contour		1080982						
ANR	1081104	Symbol	* * i		1080982						
ANR	1081105	Symbol	self -> hint [ i ] . type		1080982						
ANR	1081106	Symbol	self -> hint		1080982						
ANR	1081107	Symbol	* * self		1080982						
ANR	1081108	Symbol	* self		1080982						
ANR	1081109	Symbol	beg_pole		1080982						
ANR	1081110	Symbol	i		1080982						
ANR	1081111	Symbol	* * self -> hint		1080982						
ANR	1081112	Symbol	self -> hint_range		1080982						
ANR	1081113	Symbol	* self -> hint_range		1080982						
ANR	1081114	Symbol	self -> contour		1080982						
ANR	1081115	Symbol	self -> hint_count		1080982						
ANR	1081116	Symbol	pole_index		1080982						
ANR	1081117	Symbol	* i		1080982						
ANR	1081118	Symbol	self -> hint [ i ] . range_index		1080982						
ANR	1081119	Symbol	* pole_index		1080982						
ANR	1081120	Symbol	self		1080982						
ANR	1081121	Function	t1_hinter__interpolate_other_poles	2576:0:106998:115479							
ANR	1081122	FunctionDef	t1_hinter__interpolate_other_poles (t1_hinter * self)		1081121	0					
ANR	1081123	CompoundStatement		2577:0:107063:115479	1081121	0					
ANR	1081124	IdentifierDeclStatement	"int i , j , k ;"	2577:3:107067:107078	1081121	0	True				
ANR	1081125	IdentifierDecl	i		1081121	0					
ANR	1081126	IdentifierDeclType	int		1081121	0					
ANR	1081127	Identifier	i		1081121	1					
ANR	1081128	IdentifierDecl	j		1081121	1					
ANR	1081129	IdentifierDeclType	int		1081121	0					
ANR	1081130	Identifier	j		1081121	1					
ANR	1081131	IdentifierDecl	k		1081121	2					
ANR	1081132	IdentifierDeclType	int		1081121	0					
ANR	1081133	Identifier	k		1081121	1					
ANR	1081134	ForStatement	for ( k = 0 ; k < 2 ; k ++ )		1081121	1					
ANR	1081135	ForInit	k = 0 ;	2579:9:107090:107095	1081121	0	True				
ANR	1081136	AssignmentExpression	k = 0		1081121	0		=			
ANR	1081137	Identifier	k		1081121	0					
ANR	1081138	PrimaryExpression	0		1081121	1					
ANR	1081139	Condition	k < 2	2579:16:107097:107099	1081121	1	True				
ANR	1081140	RelationalExpression	k < 2		1081121	0		<			
ANR	1081141	Identifier	k		1081121	0					
ANR	1081142	PrimaryExpression	2		1081121	1					
ANR	1081143	PostIncDecOperationExpression	k ++	2579:21:107102:107104	1081121	2	True				
ANR	1081144	Identifier	k		1081121	0					
ANR	1081145	IncDec	++		1081121	1					
ANR	1081146	CompoundStatement		13:8:772:825	1081121	3					
ANR	1081147	IdentifierDeclStatement	t1_glyph_space_coord * p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy ) ;	2580:8:107128:107201	1081121	0	True				
ANR	1081148	IdentifierDecl	* p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy )		1081121	0					
ANR	1081149	IdentifierDeclType	t1_glyph_space_coord *		1081121	0					
ANR	1081150	Identifier	p_gc		1081121	1					
ANR	1081151	AssignmentExpression	* p_gc = ( ! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy )		1081121	2		=			
ANR	1081152	Identifier	p_gc		1081121	0					
ANR	1081153	ConditionalExpression	! k ? & self -> pole [ 0 ] . gx : & self -> pole [ 0 ] . gy		1081121	1					
ANR	1081154	Condition	! k		1081121	0					
ANR	1081155	UnaryOperationExpression	! k		1081121	0					
ANR	1081156	UnaryOperator	!		1081121	0					
ANR	1081157	Identifier	k		1081121	1					
ANR	1081158	UnaryOperationExpression	& self -> pole [ 0 ] . gx		1081121	1					
ANR	1081159	UnaryOperator	&		1081121	0					
ANR	1081160	MemberAccess	self -> pole [ 0 ] . gx		1081121	1					
ANR	1081161	ArrayIndexing	self -> pole [ 0 ]		1081121	0					
ANR	1081162	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081163	Identifier	self		1081121	0					
ANR	1081164	Identifier	pole		1081121	1					
ANR	1081165	PrimaryExpression	0		1081121	1					
ANR	1081166	Identifier	gx		1081121	1					
ANR	1081167	UnaryOperationExpression	& self -> pole [ 0 ] . gy		1081121	2					
ANR	1081168	UnaryOperator	&		1081121	0					
ANR	1081169	MemberAccess	self -> pole [ 0 ] . gy		1081121	1					
ANR	1081170	ArrayIndexing	self -> pole [ 0 ]		1081121	0					
ANR	1081171	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081172	Identifier	self		1081121	0					
ANR	1081173	Identifier	pole		1081121	1					
ANR	1081174	PrimaryExpression	0		1081121	1					
ANR	1081175	Identifier	gy		1081121	1					
ANR	1081176	IdentifierDeclStatement	t1_glyph_space_coord * p_wc = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx ) ;	2581:8:107211:107284	1081121	1	True				
ANR	1081177	IdentifierDecl	* p_wc = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx )		1081121	0					
ANR	1081178	IdentifierDeclType	t1_glyph_space_coord *		1081121	0					
ANR	1081179	Identifier	p_wc		1081121	1					
ANR	1081180	AssignmentExpression	* p_wc = ( ! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx )		1081121	2		=			
ANR	1081181	Identifier	p_wc		1081121	0					
ANR	1081182	ConditionalExpression	! k ? & self -> pole [ 0 ] . gy : & self -> pole [ 0 ] . gx		1081121	1					
ANR	1081183	Condition	! k		1081121	0					
ANR	1081184	UnaryOperationExpression	! k		1081121	0					
ANR	1081185	UnaryOperator	!		1081121	0					
ANR	1081186	Identifier	k		1081121	1					
ANR	1081187	UnaryOperationExpression	& self -> pole [ 0 ] . gy		1081121	1					
ANR	1081188	UnaryOperator	&		1081121	0					
ANR	1081189	MemberAccess	self -> pole [ 0 ] . gy		1081121	1					
ANR	1081190	ArrayIndexing	self -> pole [ 0 ]		1081121	0					
ANR	1081191	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081192	Identifier	self		1081121	0					
ANR	1081193	Identifier	pole		1081121	1					
ANR	1081194	PrimaryExpression	0		1081121	1					
ANR	1081195	Identifier	gy		1081121	1					
ANR	1081196	UnaryOperationExpression	& self -> pole [ 0 ] . gx		1081121	2					
ANR	1081197	UnaryOperator	&		1081121	0					
ANR	1081198	MemberAccess	self -> pole [ 0 ] . gx		1081121	1					
ANR	1081199	ArrayIndexing	self -> pole [ 0 ]		1081121	0					
ANR	1081200	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081201	Identifier	self		1081121	0					
ANR	1081202	Identifier	pole		1081121	1					
ANR	1081203	PrimaryExpression	0		1081121	1					
ANR	1081204	Identifier	gx		1081121	1					
ANR	1081205	IdentifierDeclStatement	t1_glyph_space_coord * p_ac = ( ! k ? & self -> pole [ 0 ] . ax : & self -> pole [ 0 ] . ay ) ;	2582:8:107294:107367	1081121	2	True				
ANR	1081206	IdentifierDecl	* p_ac = ( ! k ? & self -> pole [ 0 ] . ax : & self -> pole [ 0 ] . ay )		1081121	0					
ANR	1081207	IdentifierDeclType	t1_glyph_space_coord *		1081121	0					
ANR	1081208	Identifier	p_ac		1081121	1					
ANR	1081209	AssignmentExpression	* p_ac = ( ! k ? & self -> pole [ 0 ] . ax : & self -> pole [ 0 ] . ay )		1081121	2		=			
ANR	1081210	Identifier	p_ac		1081121	0					
ANR	1081211	ConditionalExpression	! k ? & self -> pole [ 0 ] . ax : & self -> pole [ 0 ] . ay		1081121	1					
ANR	1081212	Condition	! k		1081121	0					
ANR	1081213	UnaryOperationExpression	! k		1081121	0					
ANR	1081214	UnaryOperator	!		1081121	0					
ANR	1081215	Identifier	k		1081121	1					
ANR	1081216	UnaryOperationExpression	& self -> pole [ 0 ] . ax		1081121	1					
ANR	1081217	UnaryOperator	&		1081121	0					
ANR	1081218	MemberAccess	self -> pole [ 0 ] . ax		1081121	1					
ANR	1081219	ArrayIndexing	self -> pole [ 0 ]		1081121	0					
ANR	1081220	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081221	Identifier	self		1081121	0					
ANR	1081222	Identifier	pole		1081121	1					
ANR	1081223	PrimaryExpression	0		1081121	1					
ANR	1081224	Identifier	ax		1081121	1					
ANR	1081225	UnaryOperationExpression	& self -> pole [ 0 ] . ay		1081121	2					
ANR	1081226	UnaryOperator	&		1081121	0					
ANR	1081227	MemberAccess	self -> pole [ 0 ] . ay		1081121	1					
ANR	1081228	ArrayIndexing	self -> pole [ 0 ]		1081121	0					
ANR	1081229	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081230	Identifier	self		1081121	0					
ANR	1081231	Identifier	pole		1081121	1					
ANR	1081232	PrimaryExpression	0		1081121	1					
ANR	1081233	Identifier	ay		1081121	1					
ANR	1081234	IdentifierDeclStatement	t1_glyph_space_coord * p_bl = ( ! k ? & self -> pole [ 0 ] . boundary_length_x : & self -> pole [ 0 ] . boundary_length_y ) ;	2583:8:107377:107480	1081121	3	True				
ANR	1081235	IdentifierDecl	* p_bl = ( ! k ? & self -> pole [ 0 ] . boundary_length_x : & self -> pole [ 0 ] . boundary_length_y )		1081121	0					
ANR	1081236	IdentifierDeclType	t1_glyph_space_coord *		1081121	0					
ANR	1081237	Identifier	p_bl		1081121	1					
ANR	1081238	AssignmentExpression	* p_bl = ( ! k ? & self -> pole [ 0 ] . boundary_length_x : & self -> pole [ 0 ] . boundary_length_y )		1081121	2		=			
ANR	1081239	Identifier	p_bl		1081121	0					
ANR	1081240	ConditionalExpression	! k ? & self -> pole [ 0 ] . boundary_length_x : & self -> pole [ 0 ] . boundary_length_y		1081121	1					
ANR	1081241	Condition	! k		1081121	0					
ANR	1081242	UnaryOperationExpression	! k		1081121	0					
ANR	1081243	UnaryOperator	!		1081121	0					
ANR	1081244	Identifier	k		1081121	1					
ANR	1081245	UnaryOperationExpression	& self -> pole [ 0 ] . boundary_length_x		1081121	1					
ANR	1081246	UnaryOperator	&		1081121	0					
ANR	1081247	MemberAccess	self -> pole [ 0 ] . boundary_length_x		1081121	1					
ANR	1081248	ArrayIndexing	self -> pole [ 0 ]		1081121	0					
ANR	1081249	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081250	Identifier	self		1081121	0					
ANR	1081251	Identifier	pole		1081121	1					
ANR	1081252	PrimaryExpression	0		1081121	1					
ANR	1081253	Identifier	boundary_length_x		1081121	1					
ANR	1081254	UnaryOperationExpression	& self -> pole [ 0 ] . boundary_length_y		1081121	2					
ANR	1081255	UnaryOperator	&		1081121	0					
ANR	1081256	MemberAccess	self -> pole [ 0 ] . boundary_length_y		1081121	1					
ANR	1081257	ArrayIndexing	self -> pole [ 0 ]		1081121	0					
ANR	1081258	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081259	Identifier	self		1081121	0					
ANR	1081260	Identifier	pole		1081121	1					
ANR	1081261	PrimaryExpression	0		1081121	1					
ANR	1081262	Identifier	boundary_length_y		1081121	1					
ANR	1081263	IdentifierDeclStatement	enum t1_align_type * p_f = ( ! k ? & self -> pole [ 0 ] . aligned_x : & self -> pole [ 0 ] . aligned_y ) ;	2584:8:107490:107574	1081121	4	True				
ANR	1081264	IdentifierDecl	* p_f = ( ! k ? & self -> pole [ 0 ] . aligned_x : & self -> pole [ 0 ] . aligned_y )		1081121	0					
ANR	1081265	IdentifierDeclType	enum t1_align_type *		1081121	0					
ANR	1081266	Identifier	p_f		1081121	1					
ANR	1081267	AssignmentExpression	* p_f = ( ! k ? & self -> pole [ 0 ] . aligned_x : & self -> pole [ 0 ] . aligned_y )		1081121	2		=			
ANR	1081268	Identifier	p_f		1081121	0					
ANR	1081269	ConditionalExpression	! k ? & self -> pole [ 0 ] . aligned_x : & self -> pole [ 0 ] . aligned_y		1081121	1					
ANR	1081270	Condition	! k		1081121	0					
ANR	1081271	UnaryOperationExpression	! k		1081121	0					
ANR	1081272	UnaryOperator	!		1081121	0					
ANR	1081273	Identifier	k		1081121	1					
ANR	1081274	UnaryOperationExpression	& self -> pole [ 0 ] . aligned_x		1081121	1					
ANR	1081275	UnaryOperator	&		1081121	0					
ANR	1081276	MemberAccess	self -> pole [ 0 ] . aligned_x		1081121	1					
ANR	1081277	ArrayIndexing	self -> pole [ 0 ]		1081121	0					
ANR	1081278	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081279	Identifier	self		1081121	0					
ANR	1081280	Identifier	pole		1081121	1					
ANR	1081281	PrimaryExpression	0		1081121	1					
ANR	1081282	Identifier	aligned_x		1081121	1					
ANR	1081283	UnaryOperationExpression	& self -> pole [ 0 ] . aligned_y		1081121	2					
ANR	1081284	UnaryOperator	&		1081121	0					
ANR	1081285	MemberAccess	self -> pole [ 0 ] . aligned_y		1081121	1					
ANR	1081286	ArrayIndexing	self -> pole [ 0 ]		1081121	0					
ANR	1081287	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081288	Identifier	self		1081121	0					
ANR	1081289	Identifier	pole		1081121	1					
ANR	1081290	PrimaryExpression	0		1081121	1					
ANR	1081291	Identifier	aligned_y		1081121	1					
ANR	1081292	IdentifierDeclStatement	int offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ] ;	2585:8:107584:107637	1081121	5	True				
ANR	1081293	IdentifierDecl	offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		1081121	0					
ANR	1081294	IdentifierDeclType	int		1081121	0					
ANR	1081295	Identifier	offset_gc		1081121	1					
ANR	1081296	AssignmentExpression	offset_gc = ( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		1081121	2		=			
ANR	1081297	Identifier	offset_gc		1081121	0					
ANR	1081298	AdditiveExpression	( char * ) p_gc - ( char * ) & self -> pole [ 0 ]		1081121	1		-			
ANR	1081299	CastExpression	( char * ) p_gc		1081121	0					
ANR	1081300	CastTarget	char *		1081121	0					
ANR	1081301	Identifier	p_gc		1081121	1					
ANR	1081302	CastExpression	( char * ) & self -> pole [ 0 ]		1081121	1					
ANR	1081303	CastTarget	char *		1081121	0					
ANR	1081304	UnaryOperationExpression	& self -> pole [ 0 ]		1081121	1					
ANR	1081305	UnaryOperator	&		1081121	0					
ANR	1081306	ArrayIndexing	self -> pole [ 0 ]		1081121	1					
ANR	1081307	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081308	Identifier	self		1081121	0					
ANR	1081309	Identifier	pole		1081121	1					
ANR	1081310	PrimaryExpression	0		1081121	1					
ANR	1081311	IdentifierDeclStatement	int offset_wc = ( char * ) p_wc - ( char * ) & self -> pole [ 0 ] ;	2586:8:107647:107700	1081121	6	True				
ANR	1081312	IdentifierDecl	offset_wc = ( char * ) p_wc - ( char * ) & self -> pole [ 0 ]		1081121	0					
ANR	1081313	IdentifierDeclType	int		1081121	0					
ANR	1081314	Identifier	offset_wc		1081121	1					
ANR	1081315	AssignmentExpression	offset_wc = ( char * ) p_wc - ( char * ) & self -> pole [ 0 ]		1081121	2		=			
ANR	1081316	Identifier	offset_wc		1081121	0					
ANR	1081317	AdditiveExpression	( char * ) p_wc - ( char * ) & self -> pole [ 0 ]		1081121	1		-			
ANR	1081318	CastExpression	( char * ) p_wc		1081121	0					
ANR	1081319	CastTarget	char *		1081121	0					
ANR	1081320	Identifier	p_wc		1081121	1					
ANR	1081321	CastExpression	( char * ) & self -> pole [ 0 ]		1081121	1					
ANR	1081322	CastTarget	char *		1081121	0					
ANR	1081323	UnaryOperationExpression	& self -> pole [ 0 ]		1081121	1					
ANR	1081324	UnaryOperator	&		1081121	0					
ANR	1081325	ArrayIndexing	self -> pole [ 0 ]		1081121	1					
ANR	1081326	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081327	Identifier	self		1081121	0					
ANR	1081328	Identifier	pole		1081121	1					
ANR	1081329	PrimaryExpression	0		1081121	1					
ANR	1081330	IdentifierDeclStatement	int offset_ac = ( char * ) p_ac - ( char * ) & self -> pole [ 0 ] ;	2587:8:107710:107763	1081121	7	True				
ANR	1081331	IdentifierDecl	offset_ac = ( char * ) p_ac - ( char * ) & self -> pole [ 0 ]		1081121	0					
ANR	1081332	IdentifierDeclType	int		1081121	0					
ANR	1081333	Identifier	offset_ac		1081121	1					
ANR	1081334	AssignmentExpression	offset_ac = ( char * ) p_ac - ( char * ) & self -> pole [ 0 ]		1081121	2		=			
ANR	1081335	Identifier	offset_ac		1081121	0					
ANR	1081336	AdditiveExpression	( char * ) p_ac - ( char * ) & self -> pole [ 0 ]		1081121	1		-			
ANR	1081337	CastExpression	( char * ) p_ac		1081121	0					
ANR	1081338	CastTarget	char *		1081121	0					
ANR	1081339	Identifier	p_ac		1081121	1					
ANR	1081340	CastExpression	( char * ) & self -> pole [ 0 ]		1081121	1					
ANR	1081341	CastTarget	char *		1081121	0					
ANR	1081342	UnaryOperationExpression	& self -> pole [ 0 ]		1081121	1					
ANR	1081343	UnaryOperator	&		1081121	0					
ANR	1081344	ArrayIndexing	self -> pole [ 0 ]		1081121	1					
ANR	1081345	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081346	Identifier	self		1081121	0					
ANR	1081347	Identifier	pole		1081121	1					
ANR	1081348	PrimaryExpression	0		1081121	1					
ANR	1081349	IdentifierDeclStatement	int offset_bl = ( char * ) p_bl - ( char * ) & self -> pole [ 0 ] ;	2588:8:107773:107826	1081121	8	True				
ANR	1081350	IdentifierDecl	offset_bl = ( char * ) p_bl - ( char * ) & self -> pole [ 0 ]		1081121	0					
ANR	1081351	IdentifierDeclType	int		1081121	0					
ANR	1081352	Identifier	offset_bl		1081121	1					
ANR	1081353	AssignmentExpression	offset_bl = ( char * ) p_bl - ( char * ) & self -> pole [ 0 ]		1081121	2		=			
ANR	1081354	Identifier	offset_bl		1081121	0					
ANR	1081355	AdditiveExpression	( char * ) p_bl - ( char * ) & self -> pole [ 0 ]		1081121	1		-			
ANR	1081356	CastExpression	( char * ) p_bl		1081121	0					
ANR	1081357	CastTarget	char *		1081121	0					
ANR	1081358	Identifier	p_bl		1081121	1					
ANR	1081359	CastExpression	( char * ) & self -> pole [ 0 ]		1081121	1					
ANR	1081360	CastTarget	char *		1081121	0					
ANR	1081361	UnaryOperationExpression	& self -> pole [ 0 ]		1081121	1					
ANR	1081362	UnaryOperator	&		1081121	0					
ANR	1081363	ArrayIndexing	self -> pole [ 0 ]		1081121	1					
ANR	1081364	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081365	Identifier	self		1081121	0					
ANR	1081366	Identifier	pole		1081121	1					
ANR	1081367	PrimaryExpression	0		1081121	1					
ANR	1081368	IdentifierDeclStatement	int offset_f = ( char * ) p_f - ( char * ) & self -> pole [ 0 ] ;	2589:8:107836:107889	1081121	9	True				
ANR	1081369	IdentifierDecl	offset_f = ( char * ) p_f - ( char * ) & self -> pole [ 0 ]		1081121	0					
ANR	1081370	IdentifierDeclType	int		1081121	0					
ANR	1081371	Identifier	offset_f		1081121	1					
ANR	1081372	AssignmentExpression	offset_f = ( char * ) p_f - ( char * ) & self -> pole [ 0 ]		1081121	2		=			
ANR	1081373	Identifier	offset_f		1081121	0					
ANR	1081374	AdditiveExpression	( char * ) p_f - ( char * ) & self -> pole [ 0 ]		1081121	1		-			
ANR	1081375	CastExpression	( char * ) p_f		1081121	0					
ANR	1081376	CastTarget	char *		1081121	0					
ANR	1081377	Identifier	p_f		1081121	1					
ANR	1081378	CastExpression	( char * ) & self -> pole [ 0 ]		1081121	1					
ANR	1081379	CastTarget	char *		1081121	0					
ANR	1081380	UnaryOperationExpression	& self -> pole [ 0 ]		1081121	1					
ANR	1081381	UnaryOperator	&		1081121	0					
ANR	1081382	ArrayIndexing	self -> pole [ 0 ]		1081121	1					
ANR	1081383	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081384	Identifier	self		1081121	0					
ANR	1081385	Identifier	pole		1081121	1					
ANR	1081386	PrimaryExpression	0		1081121	1					
ANR	1081387	ForStatement	for ( i = 0 ; i < self -> contour_count ; i ++ )		1081121	10					
ANR	1081388	ForInit	i = 0 ;	2591:13:107905:107910	1081121	0	True				
ANR	1081389	AssignmentExpression	i = 0		1081121	0		=			
ANR	1081390	Identifier	i		1081121	0					
ANR	1081391	PrimaryExpression	0		1081121	1					
ANR	1081392	Condition	i < self -> contour_count	2591:20:107912:107934	1081121	1	True				
ANR	1081393	RelationalExpression	i < self -> contour_count		1081121	0		<			
ANR	1081394	Identifier	i		1081121	0					
ANR	1081395	PtrMemberAccess	self -> contour_count		1081121	1					
ANR	1081396	Identifier	self		1081121	0					
ANR	1081397	Identifier	contour_count		1081121	1					
ANR	1081398	PostIncDecOperationExpression	i ++	2591:45:107937:107939	1081121	2	True				
ANR	1081399	Identifier	i		1081121	0					
ANR	1081400	IncDec	++		1081121	1					
ANR	1081401	CompoundStatement		18:12:1006:1019	1081121	3					
ANR	1081402	IdentifierDeclStatement	int beg_contour_pole = self -> contour [ i ] ;	2592:12:107956:107995	1081121	0	True				
ANR	1081403	IdentifierDecl	beg_contour_pole = self -> contour [ i ]		1081121	0					
ANR	1081404	IdentifierDeclType	int		1081121	0					
ANR	1081405	Identifier	beg_contour_pole		1081121	1					
ANR	1081406	AssignmentExpression	beg_contour_pole = self -> contour [ i ]		1081121	2		=			
ANR	1081407	Identifier	beg_contour_pole		1081121	0					
ANR	1081408	ArrayIndexing	self -> contour [ i ]		1081121	1					
ANR	1081409	PtrMemberAccess	self -> contour		1081121	0					
ANR	1081410	Identifier	self		1081121	0					
ANR	1081411	Identifier	contour		1081121	1					
ANR	1081412	Identifier	i		1081121	1					
ANR	1081413	IdentifierDeclStatement	int end_contour_pole = self -> contour [ i + 1 ] - 2 ;	2593:12:108009:108056	1081121	1	True				
ANR	1081414	IdentifierDecl	end_contour_pole = self -> contour [ i + 1 ] - 2		1081121	0					
ANR	1081415	IdentifierDeclType	int		1081121	0					
ANR	1081416	Identifier	end_contour_pole		1081121	1					
ANR	1081417	AssignmentExpression	end_contour_pole = self -> contour [ i + 1 ] - 2		1081121	2		=			
ANR	1081418	Identifier	end_contour_pole		1081121	0					
ANR	1081419	AdditiveExpression	self -> contour [ i + 1 ] - 2		1081121	1		-			
ANR	1081420	ArrayIndexing	self -> contour [ i + 1 ]		1081121	0					
ANR	1081421	PtrMemberAccess	self -> contour		1081121	0					
ANR	1081422	Identifier	self		1081121	0					
ANR	1081423	Identifier	contour		1081121	1					
ANR	1081424	AdditiveExpression	i + 1		1081121	1		+			
ANR	1081425	Identifier	i		1081121	0					
ANR	1081426	PrimaryExpression	1		1081121	1					
ANR	1081427	PrimaryExpression	2		1081121	1					
ANR	1081428	IdentifierDeclStatement	int range_beg ;	2594:12:108070:108083	1081121	2	True				
ANR	1081429	IdentifierDecl	range_beg		1081121	0					
ANR	1081430	IdentifierDeclType	int		1081121	0					
ANR	1081431	Identifier	range_beg		1081121	1					
ANR	1081432	ForStatement	for ( j = beg_contour_pole ; j <= end_contour_pole ; j ++ )		1081121	3					
ANR	1081433	ForInit	j = beg_contour_pole ;	2596:17:108103:108123	1081121	0	True				
ANR	1081434	AssignmentExpression	j = beg_contour_pole		1081121	0		=			
ANR	1081435	Identifier	j		1081121	0					
ANR	1081436	Identifier	beg_contour_pole		1081121	1					
ANR	1081437	Condition	j <= end_contour_pole	2596:39:108125:108145	1081121	1	True				
ANR	1081438	RelationalExpression	j <= end_contour_pole		1081121	0		<=			
ANR	1081439	Identifier	j		1081121	0					
ANR	1081440	Identifier	end_contour_pole		1081121	1					
ANR	1081441	PostIncDecOperationExpression	j ++	2596:62:108148:108150	1081121	2	True				
ANR	1081442	Identifier	j		1081121	0					
ANR	1081443	IncDec	++		1081121	1					
ANR	1081444	Statement	if	2597:16:108169:108170	1081121	3	True				
ANR	1081445	Statement	(	2597:19:108172:108172	1081121	4	True				
ANR	1081446	Statement	*	2597:20:108173:108173	1081121	5	True				
ANR	1081447	Statement	member_prt	2597:21:108174:108183	1081121	6	True				
ANR	1081448	Statement	(	2597:31:108184:108184	1081121	7	True				
ANR	1081449	Statement	enum	2597:32:108185:108188	1081121	8	True				
ANR	1081450	Statement	t1_align_type	2597:37:108190:108202	1081121	9	True				
ANR	1081451	Statement	","	2597:50:108203:108203	1081121	10	True				
ANR	1081452	Statement	&	2597:52:108205:108205	1081121	11	True				
ANR	1081453	Statement	self	2597:53:108206:108209	1081121	12	True				
ANR	1081454	Statement	->	2597:57:108210:108211	1081121	13	True				
ANR	1081455	Statement	pole	2597:59:108212:108215	1081121	14	True				
ANR	1081456	Statement	[	2597:63:108216:108216	1081121	15	True				
ANR	1081457	Statement	j	2597:64:108217:108217	1081121	16	True				
ANR	1081458	Statement	]	2597:65:108218:108218	1081121	17	True				
ANR	1081459	Statement	","	2597:66:108219:108219	1081121	18	True				
ANR	1081460	Statement	offset_f	2597:68:108221:108228	1081121	19	True				
ANR	1081461	Statement	)	2597:76:108229:108229	1081121	20	True				
ANR	1081462	Statement	)	2597:77:108230:108230	1081121	21	True				
ANR	1081463	BreakStatement	break ;	2598:20:108252:108257	1081121	22	True				
ANR	1081464	IfStatement	if ( j > end_contour_pole )		1081121	23					
ANR	1081465	Condition	j > end_contour_pole	2599:16:108275:108294	1081121	0	True				
ANR	1081466	RelationalExpression	j > end_contour_pole		1081121	0		>			
ANR	1081467	Identifier	j		1081121	0					
ANR	1081468	Identifier	end_contour_pole		1081121	1					
ANR	1081469	ContinueStatement	continue ;	2600:16:108313:108321	1081121	1	True				
ANR	1081470	ExpressionStatement	range_beg = j	2601:12:108335:108348	1081121	24	True				
ANR	1081471	AssignmentExpression	range_beg = j		1081121	0		=			
ANR	1081472	Identifier	range_beg		1081121	0					
ANR	1081473	Identifier	j		1081121	1					
ANR	1081474	DoStatement	do		1081121	25					
ANR	1081475	CompoundStatement		31:16:1559:1577	1081121	0					
ANR	1081476	IdentifierDeclStatement	"int start_pole = j , stop_pole = - 1 ;"	2603:16:108383:108417	1081121	0	True				
ANR	1081477	IdentifierDecl	start_pole = j		1081121	0					
ANR	1081478	IdentifierDeclType	int		1081121	0					
ANR	1081479	Identifier	start_pole		1081121	1					
ANR	1081480	AssignmentExpression	start_pole = j		1081121	2		=			
ANR	1081481	Identifier	j		1081121	0					
ANR	1081482	Identifier	j		1081121	1					
ANR	1081483	IdentifierDecl	stop_pole = - 1		1081121	1					
ANR	1081484	IdentifierDeclType	int		1081121	0					
ANR	1081485	Identifier	stop_pole		1081121	1					
ANR	1081486	AssignmentExpression	stop_pole = - 1		1081121	2		=			
ANR	1081487	Identifier	stop_pole		1081121	0					
ANR	1081488	UnaryOperationExpression	- 1		1081121	1					
ANR	1081489	UnaryOperator	-		1081121	0					
ANR	1081490	PrimaryExpression	1		1081121	1					
ANR	1081491	IdentifierDeclStatement	"t1_glyph_space_coord min_a , max_a ;"	2604:16:108435:108468	1081121	1	True				
ANR	1081492	IdentifierDecl	min_a		1081121	0					
ANR	1081493	IdentifierDeclType	t1_glyph_space_coord		1081121	0					
ANR	1081494	Identifier	min_a		1081121	1					
ANR	1081495	IdentifierDecl	max_a		1081121	1					
ANR	1081496	IdentifierDeclType	t1_glyph_space_coord		1081121	0					
ANR	1081497	Identifier	max_a		1081121	1					
ANR	1081498	IdentifierDeclStatement	"t1_glyph_space_coord min_g , max_g , g0 , g1 , a0 , a1 ;"	2605:16:108486:108535	1081121	2	True				
ANR	1081499	IdentifierDecl	min_g		1081121	0					
ANR	1081500	IdentifierDeclType	t1_glyph_space_coord		1081121	0					
ANR	1081501	Identifier	min_g		1081121	1					
ANR	1081502	IdentifierDecl	max_g		1081121	1					
ANR	1081503	IdentifierDeclType	t1_glyph_space_coord		1081121	0					
ANR	1081504	Identifier	max_g		1081121	1					
ANR	1081505	IdentifierDecl	g0		1081121	2					
ANR	1081506	IdentifierDeclType	t1_glyph_space_coord		1081121	0					
ANR	1081507	Identifier	g0		1081121	1					
ANR	1081508	IdentifierDecl	g1		1081121	3					
ANR	1081509	IdentifierDeclType	t1_glyph_space_coord		1081121	0					
ANR	1081510	Identifier	g1		1081121	1					
ANR	1081511	IdentifierDecl	a0		1081121	4					
ANR	1081512	IdentifierDeclType	t1_glyph_space_coord		1081121	0					
ANR	1081513	Identifier	a0		1081121	1					
ANR	1081514	IdentifierDecl	a1		1081121	5					
ANR	1081515	IdentifierDeclType	t1_glyph_space_coord		1081121	0					
ANR	1081516	Identifier	a1		1081121	1					
ANR	1081517	IdentifierDeclStatement	"int min_i = start_pole , max_i = start_pole , cut_l , l ;"	2606:16:108553:108605	1081121	3	True				
ANR	1081518	IdentifierDecl	min_i = start_pole		1081121	0					
ANR	1081519	IdentifierDeclType	int		1081121	0					
ANR	1081520	Identifier	min_i		1081121	1					
ANR	1081521	AssignmentExpression	min_i = start_pole		1081121	2		=			
ANR	1081522	Identifier	start_pole		1081121	0					
ANR	1081523	Identifier	start_pole		1081121	1					
ANR	1081524	IdentifierDecl	max_i = start_pole		1081121	1					
ANR	1081525	IdentifierDeclType	int		1081121	0					
ANR	1081526	Identifier	max_i		1081121	1					
ANR	1081527	AssignmentExpression	max_i = start_pole		1081121	2		=			
ANR	1081528	Identifier	start_pole		1081121	0					
ANR	1081529	Identifier	start_pole		1081121	1					
ANR	1081530	IdentifierDecl	cut_l		1081121	2					
ANR	1081531	IdentifierDeclType	int		1081121	0					
ANR	1081532	Identifier	cut_l		1081121	1					
ANR	1081533	IdentifierDecl	l		1081121	3					
ANR	1081534	IdentifierDeclType	int		1081121	0					
ANR	1081535	Identifier	l		1081121	1					
ANR	1081536	IdentifierDeclStatement	bool moved = false ;	2607:16:108623:108641	1081121	4	True				
ANR	1081537	IdentifierDecl	moved = false		1081121	0					
ANR	1081538	IdentifierDeclType	bool		1081121	0					
ANR	1081539	Identifier	moved		1081121	1					
ANR	1081540	AssignmentExpression	moved = false		1081121	2		=			
ANR	1081541	Identifier	false		1081121	0					
ANR	1081542	Identifier	false		1081121	1					
ANR	1081543	DoStatement	do		1081121	5					
ANR	1081544	CompoundStatement		35:20:1667:1687	1081121	0					
ANR	1081545	IdentifierDeclStatement	"int min_l = 0 , max_l = 0 ;"	2610:20:108685:108709	1081121	0	True				
ANR	1081546	IdentifierDecl	min_l = 0		1081121	0					
ANR	1081547	IdentifierDeclType	int		1081121	0					
ANR	1081548	Identifier	min_l		1081121	1					
ANR	1081549	AssignmentExpression	min_l = 0		1081121	2		=			
ANR	1081550	Identifier	min_l		1081121	0					
ANR	1081551	PrimaryExpression	0		1081121	1					
ANR	1081552	IdentifierDecl	max_l = 0		1081121	1					
ANR	1081553	IdentifierDeclType	int		1081121	0					
ANR	1081554	Identifier	max_l		1081121	1					
ANR	1081555	AssignmentExpression	max_l = 0		1081121	2		=			
ANR	1081556	Identifier	max_l		1081121	0					
ANR	1081557	PrimaryExpression	0		1081121	1					
ANR	1081558	IdentifierDeclStatement	"int min_w , max_w , w0 ;"	2611:20:108731:108751	1081121	1	True				
ANR	1081559	IdentifierDecl	min_w		1081121	0					
ANR	1081560	IdentifierDeclType	int		1081121	0					
ANR	1081561	Identifier	min_w		1081121	1					
ANR	1081562	IdentifierDecl	max_w		1081121	1					
ANR	1081563	IdentifierDeclType	int		1081121	0					
ANR	1081564	Identifier	max_w		1081121	1					
ANR	1081565	IdentifierDecl	w0		1081121	2					
ANR	1081566	IdentifierDeclType	int		1081121	0					
ANR	1081567	Identifier	w0		1081121	1					
ANR	1081568	ExpressionStatement	"g0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_gc )"	2613:20:108774:108848	1081121	2	True				
ANR	1081569	AssignmentExpression	"g0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_gc )"		1081121	0		=			
ANR	1081570	Identifier	g0		1081121	0					
ANR	1081571	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_gc )"		1081121	1					
ANR	1081572	UnaryOperator	*		1081121	0					
ANR	1081573	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_gc )"		1081121	1					
ANR	1081574	Callee	member_prt		1081121	0					
ANR	1081575	Identifier	member_prt		1081121	0					
ANR	1081576	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1081577	Argument	t1_glyph_space_coord		1081121	0					
ANR	1081578	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1081579	Argument	& self -> pole [ start_pole ]		1081121	1					
ANR	1081580	UnaryOperationExpression	& self -> pole [ start_pole ]		1081121	0					
ANR	1081581	UnaryOperator	&		1081121	0					
ANR	1081582	ArrayIndexing	self -> pole [ start_pole ]		1081121	1					
ANR	1081583	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081584	Identifier	self		1081121	0					
ANR	1081585	Identifier	pole		1081121	1					
ANR	1081586	Identifier	start_pole		1081121	1					
ANR	1081587	Argument	offset_gc		1081121	2					
ANR	1081588	Identifier	offset_gc		1081121	0					
ANR	1081589	ExpressionStatement	"w0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_wc )"	2614:20:108870:108944	1081121	3	True				
ANR	1081590	AssignmentExpression	"w0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_wc )"		1081121	0		=			
ANR	1081591	Identifier	w0		1081121	0					
ANR	1081592	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_wc )"		1081121	1					
ANR	1081593	UnaryOperator	*		1081121	0					
ANR	1081594	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_wc )"		1081121	1					
ANR	1081595	Callee	member_prt		1081121	0					
ANR	1081596	Identifier	member_prt		1081121	0					
ANR	1081597	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1081598	Argument	t1_glyph_space_coord		1081121	0					
ANR	1081599	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1081600	Argument	& self -> pole [ start_pole ]		1081121	1					
ANR	1081601	UnaryOperationExpression	& self -> pole [ start_pole ]		1081121	0					
ANR	1081602	UnaryOperator	&		1081121	0					
ANR	1081603	ArrayIndexing	self -> pole [ start_pole ]		1081121	1					
ANR	1081604	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081605	Identifier	self		1081121	0					
ANR	1081606	Identifier	pole		1081121	1					
ANR	1081607	Identifier	start_pole		1081121	1					
ANR	1081608	Argument	offset_wc		1081121	2					
ANR	1081609	Identifier	offset_wc		1081121	0					
ANR	1081610	ExpressionStatement	"a0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_ac )"	2615:20:108966:109040	1081121	4	True				
ANR	1081611	AssignmentExpression	"a0 = * member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_ac )"		1081121	0		=			
ANR	1081612	Identifier	a0		1081121	0					
ANR	1081613	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_ac )"		1081121	1					
ANR	1081614	UnaryOperator	*		1081121	0					
ANR	1081615	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_ac )"		1081121	1					
ANR	1081616	Callee	member_prt		1081121	0					
ANR	1081617	Identifier	member_prt		1081121	0					
ANR	1081618	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1081619	Argument	t1_glyph_space_coord		1081121	0					
ANR	1081620	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1081621	Argument	& self -> pole [ start_pole ]		1081121	1					
ANR	1081622	UnaryOperationExpression	& self -> pole [ start_pole ]		1081121	0					
ANR	1081623	UnaryOperator	&		1081121	0					
ANR	1081624	ArrayIndexing	self -> pole [ start_pole ]		1081121	1					
ANR	1081625	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081626	Identifier	self		1081121	0					
ANR	1081627	Identifier	pole		1081121	1					
ANR	1081628	Identifier	start_pole		1081121	1					
ANR	1081629	Argument	offset_ac		1081121	2					
ANR	1081630	Identifier	offset_ac		1081121	0					
ANR	1081631	ExpressionStatement	min_g = g0	2616:20:109062:109072	1081121	5	True				
ANR	1081632	AssignmentExpression	min_g = g0		1081121	0		=			
ANR	1081633	Identifier	min_g		1081121	0					
ANR	1081634	Identifier	g0		1081121	1					
ANR	1081635	ExpressionStatement	max_g = g0	2617:20:109094:109104	1081121	6	True				
ANR	1081636	AssignmentExpression	max_g = g0		1081121	0		=			
ANR	1081637	Identifier	max_g		1081121	0					
ANR	1081638	Identifier	g0		1081121	1					
ANR	1081639	ExpressionStatement	min_w = max_w = w0	2618:20:109126:109144	1081121	7	True				
ANR	1081640	AssignmentExpression	min_w = max_w = w0		1081121	0		=			
ANR	1081641	Identifier	min_w		1081121	0					
ANR	1081642	AssignmentExpression	max_w = w0		1081121	1		=			
ANR	1081643	Identifier	max_w		1081121	0					
ANR	1081644	Identifier	w0		1081121	1					
ANR	1081645	ForStatement	"for ( j = ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole ) , l = 1 ; j != start_pole ; j = ranger_step_f ( j , beg_contour_pole , end_contour_pole ) , l ++ )"		1081121	8					
ANR	1081646	ForInit	"j = ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole ) , l = 1 ;"	2619:25:109171:109244	1081121	0	True				
ANR	1081647	Expression	"j = ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole ) , l = 1"		1081121	0					
ANR	1081648	AssignmentExpression	"j = ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole )"		1081121	0		=			
ANR	1081649	Identifier	j		1081121	0					
ANR	1081650	CallExpression	"ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole )"		1081121	1					
ANR	1081651	Callee	ranger_step_f		1081121	0					
ANR	1081652	Identifier	ranger_step_f		1081121	0					
ANR	1081653	ArgumentList	start_pole		1081121	1					
ANR	1081654	Argument	start_pole		1081121	0					
ANR	1081655	Identifier	start_pole		1081121	0					
ANR	1081656	Argument	beg_contour_pole		1081121	1					
ANR	1081657	Identifier	beg_contour_pole		1081121	0					
ANR	1081658	Argument	end_contour_pole		1081121	2					
ANR	1081659	Identifier	end_contour_pole		1081121	0					
ANR	1081660	AssignmentExpression	l = 1		1081121	1		=			
ANR	1081661	Identifier	l		1081121	0					
ANR	1081662	PrimaryExpression	1		1081121	1					
ANR	1081663	Condition	j != start_pole	2620:25:109271:109285	1081121	1	True				
ANR	1081664	EqualityExpression	j != start_pole		1081121	0		!=			
ANR	1081665	Identifier	j		1081121	0					
ANR	1081666	Identifier	start_pole		1081121	1					
ANR	1081667	Expression	"j = ranger_step_f ( j , beg_contour_pole , end_contour_pole ) , l ++"	2621:25:109313:109374	1081121	2	True				
ANR	1081668	AssignmentExpression	"j = ranger_step_f ( j , beg_contour_pole , end_contour_pole )"		1081121	0		=			
ANR	1081669	Identifier	j		1081121	0					
ANR	1081670	CallExpression	"ranger_step_f ( j , beg_contour_pole , end_contour_pole )"		1081121	1					
ANR	1081671	Callee	ranger_step_f		1081121	0					
ANR	1081672	Identifier	ranger_step_f		1081121	0					
ANR	1081673	ArgumentList	j		1081121	1					
ANR	1081674	Argument	j		1081121	0					
ANR	1081675	Identifier	j		1081121	0					
ANR	1081676	Argument	beg_contour_pole		1081121	1					
ANR	1081677	Identifier	beg_contour_pole		1081121	0					
ANR	1081678	Argument	end_contour_pole		1081121	2					
ANR	1081679	Identifier	end_contour_pole		1081121	0					
ANR	1081680	PostIncDecOperationExpression	l ++		1081121	1					
ANR	1081681	Identifier	l		1081121	0					
ANR	1081682	IncDec	++		1081121	1					
ANR	1081683	CompoundStatement		47:24:2451:2537	1081121	3					
ANR	1081684	IdentifierDeclStatement	"t1_glyph_space_coord g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) ;"	2622:24:109403:109489	1081121	0	True				
ANR	1081685	IdentifierDecl	"g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	0					
ANR	1081686	IdentifierDeclType	t1_glyph_space_coord		1081121	0					
ANR	1081687	Identifier	g		1081121	1					
ANR	1081688	AssignmentExpression	"g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	2		=			
ANR	1081689	Identifier	g		1081121	0					
ANR	1081690	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	1					
ANR	1081691	UnaryOperator	*		1081121	0					
ANR	1081692	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	1					
ANR	1081693	Callee	member_prt		1081121	0					
ANR	1081694	Identifier	member_prt		1081121	0					
ANR	1081695	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1081696	Argument	t1_glyph_space_coord		1081121	0					
ANR	1081697	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1081698	Argument	& self -> pole [ j ]		1081121	1					
ANR	1081699	UnaryOperationExpression	& self -> pole [ j ]		1081121	0					
ANR	1081700	UnaryOperator	&		1081121	0					
ANR	1081701	ArrayIndexing	self -> pole [ j ]		1081121	1					
ANR	1081702	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081703	Identifier	self		1081121	0					
ANR	1081704	Identifier	pole		1081121	1					
ANR	1081705	Identifier	j		1081121	1					
ANR	1081706	Argument	offset_gc		1081121	2					
ANR	1081707	Identifier	offset_gc		1081121	0					
ANR	1081708	IdentifierDeclStatement	"t1_glyph_space_coord w = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_wc ) ;"	2623:24:109515:109601	1081121	1	True				
ANR	1081709	IdentifierDecl	"w = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_wc )"		1081121	0					
ANR	1081710	IdentifierDeclType	t1_glyph_space_coord		1081121	0					
ANR	1081711	Identifier	w		1081121	1					
ANR	1081712	AssignmentExpression	"w = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_wc )"		1081121	2		=			
ANR	1081713	Identifier	w		1081121	0					
ANR	1081714	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_wc )"		1081121	1					
ANR	1081715	UnaryOperator	*		1081121	0					
ANR	1081716	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_wc )"		1081121	1					
ANR	1081717	Callee	member_prt		1081121	0					
ANR	1081718	Identifier	member_prt		1081121	0					
ANR	1081719	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1081720	Argument	t1_glyph_space_coord		1081121	0					
ANR	1081721	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1081722	Argument	& self -> pole [ j ]		1081121	1					
ANR	1081723	UnaryOperationExpression	& self -> pole [ j ]		1081121	0					
ANR	1081724	UnaryOperator	&		1081121	0					
ANR	1081725	ArrayIndexing	self -> pole [ j ]		1081121	1					
ANR	1081726	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081727	Identifier	self		1081121	0					
ANR	1081728	Identifier	pole		1081121	1					
ANR	1081729	Identifier	j		1081121	1					
ANR	1081730	Argument	offset_wc		1081121	2					
ANR	1081731	Identifier	offset_wc		1081121	0					
ANR	1081732	IfStatement	if ( min_g > g )		1081121	2					
ANR	1081733	Condition	min_g > g	2625:28:109632:109640	1081121	0	True				
ANR	1081734	RelationalExpression	min_g > g		1081121	0		>			
ANR	1081735	Identifier	min_g		1081121	0					
ANR	1081736	Identifier	g		1081121	1					
ANR	1081737	ExpressionStatement	"min_g = g , min_i = j , min_l = l"	2626:28:109671:109702	1081121	1	True				
ANR	1081738	Expression	"min_g = g , min_i = j , min_l = l"		1081121	0					
ANR	1081739	AssignmentExpression	min_g = g		1081121	0		=			
ANR	1081740	Identifier	min_g		1081121	0					
ANR	1081741	Identifier	g		1081121	1					
ANR	1081742	Expression	"min_i = j , min_l = l"		1081121	1					
ANR	1081743	AssignmentExpression	min_i = j		1081121	0		=			
ANR	1081744	Identifier	min_i		1081121	0					
ANR	1081745	Identifier	j		1081121	1					
ANR	1081746	AssignmentExpression	min_l = l		1081121	1		=			
ANR	1081747	Identifier	min_l		1081121	0					
ANR	1081748	Identifier	l		1081121	1					
ANR	1081749	IfStatement	if ( max_g < g )		1081121	3					
ANR	1081750	Condition	max_g < g	2627:28:109732:109740	1081121	0	True				
ANR	1081751	RelationalExpression	max_g < g		1081121	0		<			
ANR	1081752	Identifier	max_g		1081121	0					
ANR	1081753	Identifier	g		1081121	1					
ANR	1081754	ExpressionStatement	"max_g = g , max_i = j , max_l = l"	2628:28:109771:109802	1081121	1	True				
ANR	1081755	Expression	"max_g = g , max_i = j , max_l = l"		1081121	0					
ANR	1081756	AssignmentExpression	max_g = g		1081121	0		=			
ANR	1081757	Identifier	max_g		1081121	0					
ANR	1081758	Identifier	g		1081121	1					
ANR	1081759	Expression	"max_i = j , max_l = l"		1081121	1					
ANR	1081760	AssignmentExpression	max_i = j		1081121	0		=			
ANR	1081761	Identifier	max_i		1081121	0					
ANR	1081762	Identifier	j		1081121	1					
ANR	1081763	AssignmentExpression	max_l = l		1081121	1		=			
ANR	1081764	Identifier	max_l		1081121	0					
ANR	1081765	Identifier	l		1081121	1					
ANR	1081766	IfStatement	if ( min_w > w )		1081121	4					
ANR	1081767	Condition	min_w > w	2629:28:109832:109840	1081121	0	True				
ANR	1081768	RelationalExpression	min_w > w		1081121	0		>			
ANR	1081769	Identifier	min_w		1081121	0					
ANR	1081770	Identifier	w		1081121	1					
ANR	1081771	ExpressionStatement	min_w = w	2630:28:109871:109880	1081121	1	True				
ANR	1081772	AssignmentExpression	min_w = w		1081121	0		=			
ANR	1081773	Identifier	min_w		1081121	0					
ANR	1081774	Identifier	w		1081121	1					
ANR	1081775	IfStatement	if ( max_w < w )		1081121	5					
ANR	1081776	Condition	max_w < w	2631:28:109910:109918	1081121	0	True				
ANR	1081777	RelationalExpression	max_w < w		1081121	0		<			
ANR	1081778	Identifier	max_w		1081121	0					
ANR	1081779	Identifier	w		1081121	1					
ANR	1081780	ExpressionStatement	max_w = w	2632:28:109949:109958	1081121	1	True				
ANR	1081781	AssignmentExpression	max_w = w		1081121	0		=			
ANR	1081782	Identifier	max_w		1081121	0					
ANR	1081783	Identifier	w		1081121	1					
ANR	1081784	Statement	if	2633:24:109984:109985	1081121	6	True				
ANR	1081785	Statement	(	2633:27:109987:109987	1081121	7	True				
ANR	1081786	Statement	*	2633:28:109988:109988	1081121	8	True				
ANR	1081787	Statement	member_prt	2633:29:109989:109998	1081121	9	True				
ANR	1081788	Statement	(	2633:39:109999:109999	1081121	10	True				
ANR	1081789	Statement	enum	2633:40:110000:110003	1081121	11	True				
ANR	1081790	Statement	t1_align_type	2633:45:110005:110017	1081121	12	True				
ANR	1081791	Statement	","	2633:58:110018:110018	1081121	13	True				
ANR	1081792	Statement	&	2633:60:110020:110020	1081121	14	True				
ANR	1081793	Statement	self	2633:61:110021:110024	1081121	15	True				
ANR	1081794	Statement	->	2633:65:110025:110026	1081121	16	True				
ANR	1081795	Statement	pole	2633:67:110027:110030	1081121	17	True				
ANR	1081796	Statement	[	2633:71:110031:110031	1081121	18	True				
ANR	1081797	Statement	j	2633:72:110032:110032	1081121	19	True				
ANR	1081798	Statement	]	2633:73:110033:110033	1081121	20	True				
ANR	1081799	Statement	","	2633:74:110034:110034	1081121	21	True				
ANR	1081800	Statement	offset_f	2633:76:110036:110043	1081121	22	True				
ANR	1081801	Statement	)	2633:84:110044:110044	1081121	23	True				
ANR	1081802	Statement	)	2633:85:110045:110045	1081121	24	True				
ANR	1081803	BreakStatement	break ;	2634:28:110075:110080	1081121	25	True				
ANR	1081804	IfStatement	if ( j == stop_pole )		1081121	26					
ANR	1081805	Condition	j == stop_pole	2635:28:110110:110123	1081121	0	True				
ANR	1081806	EqualityExpression	j == stop_pole		1081121	0		==			
ANR	1081807	Identifier	j		1081121	0					
ANR	1081808	Identifier	stop_pole		1081121	1					
ANR	1081809	BreakStatement	break ;	2636:28:110154:110159	1081121	1	True				
ANR	1081810	ExpressionStatement	stop_pole = j	2638:20:110203:110216	1081121	9	True				
ANR	1081811	AssignmentExpression	stop_pole = j		1081121	0		=			
ANR	1081812	Identifier	stop_pole		1081121	0					
ANR	1081813	Identifier	j		1081121	1					
ANR	1081814	ExpressionStatement	cut_l = l	2639:20:110238:110247	1081121	10	True				
ANR	1081815	AssignmentExpression	cut_l = l		1081121	0		=			
ANR	1081816	Identifier	cut_l		1081121	0					
ANR	1081817	Identifier	l		1081121	1					
ANR	1081818	ExpressionStatement	"g1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_gc )"	2640:20:110269:110343	1081121	11	True				
ANR	1081819	AssignmentExpression	"g1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_gc )"		1081121	0		=			
ANR	1081820	Identifier	g1		1081121	0					
ANR	1081821	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_gc )"		1081121	1					
ANR	1081822	UnaryOperator	*		1081121	0					
ANR	1081823	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_gc )"		1081121	1					
ANR	1081824	Callee	member_prt		1081121	0					
ANR	1081825	Identifier	member_prt		1081121	0					
ANR	1081826	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1081827	Argument	t1_glyph_space_coord		1081121	0					
ANR	1081828	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1081829	Argument	& self -> pole [ stop_pole ]		1081121	1					
ANR	1081830	UnaryOperationExpression	& self -> pole [ stop_pole ]		1081121	0					
ANR	1081831	UnaryOperator	&		1081121	0					
ANR	1081832	ArrayIndexing	self -> pole [ stop_pole ]		1081121	1					
ANR	1081833	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081834	Identifier	self		1081121	0					
ANR	1081835	Identifier	pole		1081121	1					
ANR	1081836	Identifier	stop_pole		1081121	1					
ANR	1081837	Argument	offset_gc		1081121	2					
ANR	1081838	Identifier	offset_gc		1081121	0					
ANR	1081839	ExpressionStatement	"a1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_ac )"	2641:20:110365:110439	1081121	12	True				
ANR	1081840	AssignmentExpression	"a1 = * member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_ac )"		1081121	0		=			
ANR	1081841	Identifier	a1		1081121	0					
ANR	1081842	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_ac )"		1081121	1					
ANR	1081843	UnaryOperator	*		1081121	0					
ANR	1081844	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_ac )"		1081121	1					
ANR	1081845	Callee	member_prt		1081121	0					
ANR	1081846	Identifier	member_prt		1081121	0					
ANR	1081847	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1081848	Argument	t1_glyph_space_coord		1081121	0					
ANR	1081849	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1081850	Argument	& self -> pole [ stop_pole ]		1081121	1					
ANR	1081851	UnaryOperationExpression	& self -> pole [ stop_pole ]		1081121	0					
ANR	1081852	UnaryOperator	&		1081121	0					
ANR	1081853	ArrayIndexing	self -> pole [ stop_pole ]		1081121	1					
ANR	1081854	PtrMemberAccess	self -> pole		1081121	0					
ANR	1081855	Identifier	self		1081121	0					
ANR	1081856	Identifier	pole		1081121	1					
ANR	1081857	Identifier	stop_pole		1081121	1					
ANR	1081858	Argument	offset_ac		1081121	2					
ANR	1081859	Identifier	offset_ac		1081121	0					
ANR	1081860	IfStatement	if ( start_pole != stop_pole )		1081121	13					
ANR	1081861	Condition	start_pole != stop_pole	2643:24:110466:110488	1081121	0	True				
ANR	1081862	EqualityExpression	start_pole != stop_pole		1081121	0		!=			
ANR	1081863	Identifier	start_pole		1081121	0					
ANR	1081864	Identifier	stop_pole		1081121	1					
ANR	1081865	IfStatement	if ( any_abs ( g0 - g1 ) >= any_abs ( a0 - a1 ) / 10 )		1081121	1					
ANR	1081866	Condition	any_abs ( g0 - g1 ) >= any_abs ( a0 - a1 ) / 10	2644:28:110519:110559	1081121	0	True				
ANR	1081867	RelationalExpression	any_abs ( g0 - g1 ) >= any_abs ( a0 - a1 ) / 10		1081121	0		>=			
ANR	1081868	CallExpression	any_abs ( g0 - g1 )		1081121	0					
ANR	1081869	Callee	any_abs		1081121	0					
ANR	1081870	Identifier	any_abs		1081121	0					
ANR	1081871	ArgumentList	g0 - g1		1081121	1					
ANR	1081872	Argument	g0 - g1		1081121	0					
ANR	1081873	AdditiveExpression	g0 - g1		1081121	0		-			
ANR	1081874	Identifier	g0		1081121	0					
ANR	1081875	Identifier	g1		1081121	1					
ANR	1081876	MultiplicativeExpression	any_abs ( a0 - a1 ) / 10		1081121	1		/			
ANR	1081877	CallExpression	any_abs ( a0 - a1 )		1081121	0					
ANR	1081878	Callee	any_abs		1081121	0					
ANR	1081879	Identifier	any_abs		1081121	0					
ANR	1081880	ArgumentList	a0 - a1		1081121	1					
ANR	1081881	Argument	a0 - a1		1081121	0					
ANR	1081882	AdditiveExpression	a0 - a1		1081121	0		-			
ANR	1081883	Identifier	a0		1081121	0					
ANR	1081884	Identifier	a1		1081121	1					
ANR	1081885	PrimaryExpression	10		1081121	1					
ANR	1081886	IfStatement	if ( any_abs ( max_g - min_g ) <= any_abs ( max_w - min_w ) / 4 )		1081121	1					
ANR	1081887	Condition	any_abs ( max_g - min_g ) <= any_abs ( max_w - min_w ) / 4	2645:32:110594:110645	1081121	0	True				
ANR	1081888	RelationalExpression	any_abs ( max_g - min_g ) <= any_abs ( max_w - min_w ) / 4		1081121	0		<=			
ANR	1081889	CallExpression	any_abs ( max_g - min_g )		1081121	0					
ANR	1081890	Callee	any_abs		1081121	0					
ANR	1081891	Identifier	any_abs		1081121	0					
ANR	1081892	ArgumentList	max_g - min_g		1081121	1					
ANR	1081893	Argument	max_g - min_g		1081121	0					
ANR	1081894	AdditiveExpression	max_g - min_g		1081121	0		-			
ANR	1081895	Identifier	max_g		1081121	0					
ANR	1081896	Identifier	min_g		1081121	1					
ANR	1081897	MultiplicativeExpression	any_abs ( max_w - min_w ) / 4		1081121	1		/			
ANR	1081898	CallExpression	any_abs ( max_w - min_w )		1081121	0					
ANR	1081899	Callee	any_abs		1081121	0					
ANR	1081900	Identifier	any_abs		1081121	0					
ANR	1081901	ArgumentList	max_w - min_w		1081121	1					
ANR	1081902	Argument	max_w - min_w		1081121	0					
ANR	1081903	AdditiveExpression	max_w - min_w		1081121	0		-			
ANR	1081904	Identifier	max_w		1081121	0					
ANR	1081905	Identifier	min_w		1081121	1					
ANR	1081906	PrimaryExpression	4		1081121	1					
ANR	1081907	BreakStatement	break ;	2646:32:110680:110685	1081121	1	True				
ANR	1081908	IfStatement	if ( min_i != start_pole && min_l < cut_l && min_g != g0 && min_g != g1 )		1081121	14					
ANR	1081909	Condition	min_i != start_pole && min_l < cut_l && min_g != g0 && min_g != g1	2648:24:110795:110860	1081121	0	True				
ANR	1081910	AndExpression	min_i != start_pole && min_l < cut_l && min_g != g0 && min_g != g1		1081121	0		&&			
ANR	1081911	EqualityExpression	min_i != start_pole		1081121	0		!=			
ANR	1081912	Identifier	min_i		1081121	0					
ANR	1081913	Identifier	start_pole		1081121	1					
ANR	1081914	AndExpression	min_l < cut_l && min_g != g0 && min_g != g1		1081121	1		&&			
ANR	1081915	RelationalExpression	min_l < cut_l		1081121	0		<			
ANR	1081916	Identifier	min_l		1081121	0					
ANR	1081917	Identifier	cut_l		1081121	1					
ANR	1081918	AndExpression	min_g != g0 && min_g != g1		1081121	1		&&			
ANR	1081919	EqualityExpression	min_g != g0		1081121	0		!=			
ANR	1081920	Identifier	min_g		1081121	0					
ANR	1081921	Identifier	g0		1081121	1					
ANR	1081922	EqualityExpression	min_g != g1		1081121	1		!=			
ANR	1081923	Identifier	min_g		1081121	0					
ANR	1081924	Identifier	g1		1081121	1					
ANR	1081925	ExpressionStatement	"stop_pole = min_i , cut_l = min_l"	2649:24:110887:110919	1081121	1	True				
ANR	1081926	Expression	"stop_pole = min_i , cut_l = min_l"		1081121	0					
ANR	1081927	AssignmentExpression	stop_pole = min_i		1081121	0		=			
ANR	1081928	Identifier	stop_pole		1081121	0					
ANR	1081929	Identifier	min_i		1081121	1					
ANR	1081930	AssignmentExpression	cut_l = min_l		1081121	1		=			
ANR	1081931	Identifier	cut_l		1081121	0					
ANR	1081932	Identifier	min_l		1081121	1					
ANR	1081933	IfStatement	if ( max_i != start_pole && max_l < cut_l && max_g != g0 && max_g != g1 )		1081121	15					
ANR	1081934	Condition	max_i != start_pole && max_l < cut_l && max_g != g0 && max_g != g1	2650:24:110945:111010	1081121	0	True				
ANR	1081935	AndExpression	max_i != start_pole && max_l < cut_l && max_g != g0 && max_g != g1		1081121	0		&&			
ANR	1081936	EqualityExpression	max_i != start_pole		1081121	0		!=			
ANR	1081937	Identifier	max_i		1081121	0					
ANR	1081938	Identifier	start_pole		1081121	1					
ANR	1081939	AndExpression	max_l < cut_l && max_g != g0 && max_g != g1		1081121	1		&&			
ANR	1081940	RelationalExpression	max_l < cut_l		1081121	0		<			
ANR	1081941	Identifier	max_l		1081121	0					
ANR	1081942	Identifier	cut_l		1081121	1					
ANR	1081943	AndExpression	max_g != g0 && max_g != g1		1081121	1		&&			
ANR	1081944	EqualityExpression	max_g != g0		1081121	0		!=			
ANR	1081945	Identifier	max_g		1081121	0					
ANR	1081946	Identifier	g0		1081121	1					
ANR	1081947	EqualityExpression	max_g != g1		1081121	1		!=			
ANR	1081948	Identifier	max_g		1081121	0					
ANR	1081949	Identifier	g1		1081121	1					
ANR	1081950	ExpressionStatement	"stop_pole = max_i , cut_l = max_l"	2651:24:111037:111069	1081121	1	True				
ANR	1081951	Expression	"stop_pole = max_i , cut_l = max_l"		1081121	0					
ANR	1081952	AssignmentExpression	stop_pole = max_i		1081121	0		=			
ANR	1081953	Identifier	stop_pole		1081121	0					
ANR	1081954	Identifier	max_i		1081121	1					
ANR	1081955	AssignmentExpression	cut_l = max_l		1081121	1		=			
ANR	1081956	Identifier	cut_l		1081121	0					
ANR	1081957	Identifier	max_l		1081121	1					
ANR	1081958	Condition	cut_l < l	2652:25:111096:111104	1081121	1	True				
ANR	1081959	RelationalExpression	cut_l < l		1081121	0		<			
ANR	1081960	Identifier	cut_l		1081121	0					
ANR	1081961	Identifier	l		1081121	1					
ANR	1081962	IfStatement	if ( g0 < g1 )		1081121	6					
ANR	1081963	Condition	g0 < g1	2654:20:111228:111234	1081121	0	True				
ANR	1081964	RelationalExpression	g0 < g1		1081121	0		<			
ANR	1081965	Identifier	g0		1081121	0					
ANR	1081966	Identifier	g1		1081121	1					
ANR	1081967	CompoundStatement		78:29:4173:4173	1081121	1					
ANR	1081968	ExpressionStatement	min_g = g0	2655:20:111259:111269	1081121	0	True				
ANR	1081969	AssignmentExpression	min_g = g0		1081121	0		=			
ANR	1081970	Identifier	min_g		1081121	0					
ANR	1081971	Identifier	g0		1081121	1					
ANR	1081972	ExpressionStatement	max_g = g1	2656:20:111291:111301	1081121	1	True				
ANR	1081973	AssignmentExpression	max_g = g1		1081121	0		=			
ANR	1081974	Identifier	max_g		1081121	0					
ANR	1081975	Identifier	g1		1081121	1					
ANR	1081976	ExpressionStatement	min_a = a0	2657:20:111323:111333	1081121	2	True				
ANR	1081977	AssignmentExpression	min_a = a0		1081121	0		=			
ANR	1081978	Identifier	min_a		1081121	0					
ANR	1081979	Identifier	a0		1081121	1					
ANR	1081980	ExpressionStatement	max_a = a1	2658:20:111355:111365	1081121	3	True				
ANR	1081981	AssignmentExpression	max_a = a1		1081121	0		=			
ANR	1081982	Identifier	max_a		1081121	0					
ANR	1081983	Identifier	a1		1081121	1					
ANR	1081984	ElseStatement	else		1081121	0					
ANR	1081985	CompoundStatement		83:23:4326:4326	1081121	0					
ANR	1081986	ExpressionStatement	min_g = g1	2660:20:111412:111422	1081121	0	True				
ANR	1081987	AssignmentExpression	min_g = g1		1081121	0		=			
ANR	1081988	Identifier	min_g		1081121	0					
ANR	1081989	Identifier	g1		1081121	1					
ANR	1081990	ExpressionStatement	max_g = g0	2661:20:111444:111454	1081121	1	True				
ANR	1081991	AssignmentExpression	max_g = g0		1081121	0		=			
ANR	1081992	Identifier	max_g		1081121	0					
ANR	1081993	Identifier	g0		1081121	1					
ANR	1081994	ExpressionStatement	min_a = a1	2662:20:111476:111486	1081121	2	True				
ANR	1081995	AssignmentExpression	min_a = a1		1081121	0		=			
ANR	1081996	Identifier	min_a		1081121	0					
ANR	1081997	Identifier	a1		1081121	1					
ANR	1081998	ExpressionStatement	max_a = a0	2663:20:111508:111518	1081121	3	True				
ANR	1081999	AssignmentExpression	max_a = a0		1081121	0		=			
ANR	1082000	Identifier	max_a		1081121	0					
ANR	1082001	Identifier	a0		1081121	1					
ANR	1082002	IfStatement	if ( min_g == max_g && min_a != max_a )		1081121	7					
ANR	1082003	Condition	min_g == max_g && min_a != max_a	2665:20:111558:111589	1081121	0	True				
ANR	1082004	AndExpression	min_g == max_g && min_a != max_a		1081121	0		&&			
ANR	1082005	EqualityExpression	min_g == max_g		1081121	0		==			
ANR	1082006	Identifier	min_g		1081121	0					
ANR	1082007	Identifier	max_g		1081121	1					
ANR	1082008	EqualityExpression	min_a != max_a		1081121	1		!=			
ANR	1082009	Identifier	min_a		1081121	0					
ANR	1082010	Identifier	max_a		1081121	1					
ANR	1082011	CompoundStatement		89:54:4528:4528	1081121	1					
ANR	1082012	IfStatement	"if ( * member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_bl ) < * member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_bl ) )"		1081121	0					
ANR	1082013	Condition	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_bl ) < * member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_bl )"	2667:24:111691:111856	1081121	0	True				
ANR	1082014	RelationalExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_bl ) < * member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_bl )"		1081121	0		<			
ANR	1082015	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_bl )"		1081121	0					
ANR	1082016	UnaryOperator	*		1081121	0					
ANR	1082017	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_bl )"		1081121	1					
ANR	1082018	Callee	member_prt		1081121	0					
ANR	1082019	Identifier	member_prt		1081121	0					
ANR	1082020	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1082021	Argument	t1_glyph_space_coord		1081121	0					
ANR	1082022	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1082023	Argument	& self -> pole [ start_pole ]		1081121	1					
ANR	1082024	UnaryOperationExpression	& self -> pole [ start_pole ]		1081121	0					
ANR	1082025	UnaryOperator	&		1081121	0					
ANR	1082026	ArrayIndexing	self -> pole [ start_pole ]		1081121	1					
ANR	1082027	PtrMemberAccess	self -> pole		1081121	0					
ANR	1082028	Identifier	self		1081121	0					
ANR	1082029	Identifier	pole		1081121	1					
ANR	1082030	Identifier	start_pole		1081121	1					
ANR	1082031	Argument	offset_bl		1081121	2					
ANR	1082032	Identifier	offset_bl		1081121	0					
ANR	1082033	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_bl )"		1081121	1					
ANR	1082034	UnaryOperator	*		1081121	0					
ANR	1082035	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_bl )"		1081121	1					
ANR	1082036	Callee	member_prt		1081121	0					
ANR	1082037	Identifier	member_prt		1081121	0					
ANR	1082038	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1082039	Argument	t1_glyph_space_coord		1081121	0					
ANR	1082040	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1082041	Argument	& self -> pole [ stop_pole ]		1081121	1					
ANR	1082042	UnaryOperationExpression	& self -> pole [ stop_pole ]		1081121	0					
ANR	1082043	UnaryOperator	&		1081121	0					
ANR	1082044	ArrayIndexing	self -> pole [ stop_pole ]		1081121	1					
ANR	1082045	PtrMemberAccess	self -> pole		1081121	0					
ANR	1082046	Identifier	self		1081121	0					
ANR	1082047	Identifier	pole		1081121	1					
ANR	1082048	Identifier	stop_pole		1081121	1					
ANR	1082049	Argument	offset_bl		1081121	2					
ANR	1082050	Identifier	offset_bl		1081121	0					
ANR	1082051	ExpressionStatement	min_a = max_a = a1	2669:24:111883:111901	1081121	1	True				
ANR	1082052	AssignmentExpression	min_a = max_a = a1		1081121	0		=			
ANR	1082053	Identifier	min_a		1081121	0					
ANR	1082054	AssignmentExpression	max_a = a1		1081121	1		=			
ANR	1082055	Identifier	max_a		1081121	0					
ANR	1082056	Identifier	a1		1081121	1					
ANR	1082057	ElseStatement	else		1081121	0					
ANR	1082058	ExpressionStatement	min_a = max_a = a0	2671:24:111952:111970	1081121	0	True				
ANR	1082059	AssignmentExpression	min_a = max_a = a0		1081121	0		=			
ANR	1082060	Identifier	min_a		1081121	0					
ANR	1082061	AssignmentExpression	max_a = a0		1081121	1		=			
ANR	1082062	Identifier	max_a		1081121	0					
ANR	1082063	Identifier	a0		1081121	1					
ANR	1082064	ForStatement	"for ( j = start_pole ; ; j = ranger_step_f ( j , beg_contour_pole , end_contour_pole ) )"		1081121	8					
ANR	1082065	ForInit	j = start_pole ;	2673:21:112011:112025	1081121	0	True				
ANR	1082066	AssignmentExpression	j = start_pole		1081121	0		=			
ANR	1082067	Identifier	j		1081121	0					
ANR	1082068	Identifier	start_pole		1081121	1					
ANR	1082069	AssignmentExpression	"j = ranger_step_f ( j , beg_contour_pole , end_contour_pole )"	2674:21:112050:112106	1081121	1	True	=			
ANR	1082070	Identifier	j		1081121	0					
ANR	1082071	CallExpression	"ranger_step_f ( j , beg_contour_pole , end_contour_pole )"		1081121	1					
ANR	1082072	Callee	ranger_step_f		1081121	0					
ANR	1082073	Identifier	ranger_step_f		1081121	0					
ANR	1082074	ArgumentList	j		1081121	1					
ANR	1082075	Argument	j		1081121	0					
ANR	1082076	Identifier	j		1081121	0					
ANR	1082077	Argument	beg_contour_pole		1081121	1					
ANR	1082078	Identifier	beg_contour_pole		1081121	0					
ANR	1082079	Argument	end_contour_pole		1081121	2					
ANR	1082080	Identifier	end_contour_pole		1081121	0					
ANR	1082081	CompoundStatement		99:20:5067:5153	1081121	2					
ANR	1082082	IdentifierDeclStatement	"t1_glyph_space_coord g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) ;"	2675:20:112131:112217	1081121	0	True				
ANR	1082083	IdentifierDecl	"g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	0					
ANR	1082084	IdentifierDeclType	t1_glyph_space_coord		1081121	0					
ANR	1082085	Identifier	g		1081121	1					
ANR	1082086	AssignmentExpression	"g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	2		=			
ANR	1082087	Identifier	g		1081121	0					
ANR	1082088	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	1					
ANR	1082089	UnaryOperator	*		1081121	0					
ANR	1082090	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	1					
ANR	1082091	Callee	member_prt		1081121	0					
ANR	1082092	Identifier	member_prt		1081121	0					
ANR	1082093	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1082094	Argument	t1_glyph_space_coord		1081121	0					
ANR	1082095	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1082096	Argument	& self -> pole [ j ]		1081121	1					
ANR	1082097	UnaryOperationExpression	& self -> pole [ j ]		1081121	0					
ANR	1082098	UnaryOperator	&		1081121	0					
ANR	1082099	ArrayIndexing	self -> pole [ j ]		1081121	1					
ANR	1082100	PtrMemberAccess	self -> pole		1081121	0					
ANR	1082101	Identifier	self		1081121	0					
ANR	1082102	Identifier	pole		1081121	1					
ANR	1082103	Identifier	j		1081121	1					
ANR	1082104	Argument	offset_gc		1081121	2					
ANR	1082105	Identifier	offset_gc		1081121	0					
ANR	1082106	IfStatement	if ( g <= min_g )		1081121	1					
ANR	1082107	Condition	g <= min_g	2677:24:112244:112253	1081121	0	True				
ANR	1082108	RelationalExpression	g <= min_g		1081121	0		<=			
ANR	1082109	Identifier	g		1081121	0					
ANR	1082110	Identifier	min_g		1081121	1					
ANR	1082111	ExpressionStatement	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac ) = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) + ( min_a - min_g )"	2678:24:112280:112447	1081121	1	True				
ANR	1082112	AssignmentExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac ) = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) + ( min_a - min_g )"		1081121	0		=			
ANR	1082113	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		1081121	0					
ANR	1082114	UnaryOperator	*		1081121	0					
ANR	1082115	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		1081121	1					
ANR	1082116	Callee	member_prt		1081121	0					
ANR	1082117	Identifier	member_prt		1081121	0					
ANR	1082118	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1082119	Argument	t1_glyph_space_coord		1081121	0					
ANR	1082120	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1082121	Argument	& self -> pole [ j ]		1081121	1					
ANR	1082122	UnaryOperationExpression	& self -> pole [ j ]		1081121	0					
ANR	1082123	UnaryOperator	&		1081121	0					
ANR	1082124	ArrayIndexing	self -> pole [ j ]		1081121	1					
ANR	1082125	PtrMemberAccess	self -> pole		1081121	0					
ANR	1082126	Identifier	self		1081121	0					
ANR	1082127	Identifier	pole		1081121	1					
ANR	1082128	Identifier	j		1081121	1					
ANR	1082129	Argument	offset_ac		1081121	2					
ANR	1082130	Identifier	offset_ac		1081121	0					
ANR	1082131	AdditiveExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) + ( min_a - min_g )"		1081121	1		+			
ANR	1082132	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	0					
ANR	1082133	UnaryOperator	*		1081121	0					
ANR	1082134	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	1					
ANR	1082135	Callee	member_prt		1081121	0					
ANR	1082136	Identifier	member_prt		1081121	0					
ANR	1082137	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1082138	Argument	t1_glyph_space_coord		1081121	0					
ANR	1082139	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1082140	Argument	& self -> pole [ j ]		1081121	1					
ANR	1082141	UnaryOperationExpression	& self -> pole [ j ]		1081121	0					
ANR	1082142	UnaryOperator	&		1081121	0					
ANR	1082143	ArrayIndexing	self -> pole [ j ]		1081121	1					
ANR	1082144	PtrMemberAccess	self -> pole		1081121	0					
ANR	1082145	Identifier	self		1081121	0					
ANR	1082146	Identifier	pole		1081121	1					
ANR	1082147	Identifier	j		1081121	1					
ANR	1082148	Argument	offset_gc		1081121	2					
ANR	1082149	Identifier	offset_gc		1081121	0					
ANR	1082150	AdditiveExpression	min_a - min_g		1081121	1		-			
ANR	1082151	Identifier	min_a		1081121	0					
ANR	1082152	Identifier	min_g		1081121	1					
ANR	1082153	ElseStatement	else		1081121	0					
ANR	1082154	IfStatement	if ( g >= max_g )		1081121	0					
ANR	1082155	Condition	g >= max_g	2680:29:112478:112487	1081121	0	True				
ANR	1082156	RelationalExpression	g >= max_g		1081121	0		>=			
ANR	1082157	Identifier	g		1081121	0					
ANR	1082158	Identifier	max_g		1081121	1					
ANR	1082159	ExpressionStatement	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac ) = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) + ( max_a - max_g )"	2681:24:112514:112681	1081121	1	True				
ANR	1082160	AssignmentExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac ) = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) + ( max_a - max_g )"		1081121	0		=			
ANR	1082161	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		1081121	0					
ANR	1082162	UnaryOperator	*		1081121	0					
ANR	1082163	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		1081121	1					
ANR	1082164	Callee	member_prt		1081121	0					
ANR	1082165	Identifier	member_prt		1081121	0					
ANR	1082166	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1082167	Argument	t1_glyph_space_coord		1081121	0					
ANR	1082168	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1082169	Argument	& self -> pole [ j ]		1081121	1					
ANR	1082170	UnaryOperationExpression	& self -> pole [ j ]		1081121	0					
ANR	1082171	UnaryOperator	&		1081121	0					
ANR	1082172	ArrayIndexing	self -> pole [ j ]		1081121	1					
ANR	1082173	PtrMemberAccess	self -> pole		1081121	0					
ANR	1082174	Identifier	self		1081121	0					
ANR	1082175	Identifier	pole		1081121	1					
ANR	1082176	Identifier	j		1081121	1					
ANR	1082177	Argument	offset_ac		1081121	2					
ANR	1082178	Identifier	offset_ac		1081121	0					
ANR	1082179	AdditiveExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) + ( max_a - max_g )"		1081121	1		+			
ANR	1082180	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	0					
ANR	1082181	UnaryOperator	*		1081121	0					
ANR	1082182	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	1					
ANR	1082183	Callee	member_prt		1081121	0					
ANR	1082184	Identifier	member_prt		1081121	0					
ANR	1082185	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1082186	Argument	t1_glyph_space_coord		1081121	0					
ANR	1082187	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1082188	Argument	& self -> pole [ j ]		1081121	1					
ANR	1082189	UnaryOperationExpression	& self -> pole [ j ]		1081121	0					
ANR	1082190	UnaryOperator	&		1081121	0					
ANR	1082191	ArrayIndexing	self -> pole [ j ]		1081121	1					
ANR	1082192	PtrMemberAccess	self -> pole		1081121	0					
ANR	1082193	Identifier	self		1081121	0					
ANR	1082194	Identifier	pole		1081121	1					
ANR	1082195	Identifier	j		1081121	1					
ANR	1082196	Argument	offset_gc		1081121	2					
ANR	1082197	Identifier	offset_gc		1081121	0					
ANR	1082198	AdditiveExpression	max_a - max_g		1081121	1		-			
ANR	1082199	Identifier	max_a		1081121	0					
ANR	1082200	Identifier	max_g		1081121	1					
ANR	1082201	IfStatement	if ( moved && j == stop_pole )		1081121	2					
ANR	1082202	Condition	moved && j == stop_pole	2683:23:112706:112728	1081121	0	True				
ANR	1082203	AndExpression	moved && j == stop_pole		1081121	0		&&			
ANR	1082204	Identifier	moved		1081121	0					
ANR	1082205	EqualityExpression	j == stop_pole		1081121	1		==			
ANR	1082206	Identifier	j		1081121	0					
ANR	1082207	Identifier	stop_pole		1081121	1					
ANR	1082208	BreakStatement	break ;	2684:24:112755:112760	1081121	1	True				
ANR	1082209	ExpressionStatement	moved = true	2685:20:112782:112794	1081121	3	True				
ANR	1082210	AssignmentExpression	moved = true		1081121	0		=			
ANR	1082211	Identifier	moved		1081121	0					
ANR	1082212	Identifier	true		1081121	1					
ANR	1082213	IfStatement	if ( min_g < max_g )		1081121	9					
ANR	1082214	Condition	min_g < max_g	2687:20:112834:112846	1081121	0	True				
ANR	1082215	RelationalExpression	min_g < max_g		1081121	0		<			
ANR	1082216	Identifier	min_g		1081121	0					
ANR	1082217	Identifier	max_g		1081121	1					
ANR	1082218	CompoundStatement		139:20:7188:7230	1081121	1					
ANR	1082219	IdentifierDeclStatement	int24 div = max_g - min_g ;	2688:20:112871:112896	1081121	0	True				
ANR	1082220	IdentifierDecl	div = max_g - min_g		1081121	0					
ANR	1082221	IdentifierDeclType	int24		1081121	0					
ANR	1082222	Identifier	div		1081121	1					
ANR	1082223	AssignmentExpression	div = max_g - min_g		1081121	2		=			
ANR	1082224	Identifier	div		1081121	0					
ANR	1082225	AdditiveExpression	max_g - min_g		1081121	1		-			
ANR	1082226	Identifier	max_g		1081121	0					
ANR	1082227	Identifier	min_g		1081121	1					
ANR	1082228	IdentifierDeclStatement	int24 mul = max_a - min_a ;	2689:20:112918:112943	1081121	1	True				
ANR	1082229	IdentifierDecl	mul = max_a - min_a		1081121	0					
ANR	1082230	IdentifierDeclType	int24		1081121	0					
ANR	1082231	Identifier	mul		1081121	1					
ANR	1082232	AssignmentExpression	mul = max_a - min_a		1081121	2		=			
ANR	1082233	Identifier	mul		1081121	0					
ANR	1082234	AdditiveExpression	max_a - min_a		1081121	1		-			
ANR	1082235	Identifier	max_a		1081121	0					
ANR	1082236	Identifier	min_a		1081121	1					
ANR	1082237	IdentifierDeclStatement	"int24 m0 = mul , d = div , q1 , q2 , r1 , m1 , u ;"	2715:20:114252:114294	1081121	2	True				
ANR	1082238	IdentifierDecl	m0 = mul		1081121	0					
ANR	1082239	IdentifierDeclType	int24		1081121	0					
ANR	1082240	Identifier	m0		1081121	1					
ANR	1082241	AssignmentExpression	m0 = mul		1081121	2		=			
ANR	1082242	Identifier	mul		1081121	0					
ANR	1082243	Identifier	mul		1081121	1					
ANR	1082244	IdentifierDecl	d = div		1081121	1					
ANR	1082245	IdentifierDeclType	int24		1081121	0					
ANR	1082246	Identifier	d		1081121	1					
ANR	1082247	AssignmentExpression	d = div		1081121	2		=			
ANR	1082248	Identifier	div		1081121	0					
ANR	1082249	Identifier	div		1081121	1					
ANR	1082250	IdentifierDecl	q1		1081121	2					
ANR	1082251	IdentifierDeclType	int24		1081121	0					
ANR	1082252	Identifier	q1		1081121	1					
ANR	1082253	IdentifierDecl	q2		1081121	3					
ANR	1082254	IdentifierDeclType	int24		1081121	0					
ANR	1082255	Identifier	q2		1081121	1					
ANR	1082256	IdentifierDecl	r1		1081121	4					
ANR	1082257	IdentifierDeclType	int24		1081121	0					
ANR	1082258	Identifier	r1		1081121	1					
ANR	1082259	IdentifierDecl	m1		1081121	5					
ANR	1082260	IdentifierDeclType	int24		1081121	0					
ANR	1082261	Identifier	m1		1081121	1					
ANR	1082262	IdentifierDecl	u		1081121	6					
ANR	1082263	IdentifierDeclType	int24		1081121	0					
ANR	1082264	Identifier	u		1081121	1					
ANR	1082265	IfStatement	if ( m0 >= ( 1 << 19 ) || d >= ( 1 << 19 ) )		1081121	3					
ANR	1082266	Condition	m0 >= ( 1 << 19 ) || d >= ( 1 << 19 )	2717:24:114321:114353	1081121	0	True				
ANR	1082267	OrExpression	m0 >= ( 1 << 19 ) || d >= ( 1 << 19 )		1081121	0		||			
ANR	1082268	RelationalExpression	m0 >= ( 1 << 19 )		1081121	0		>=			
ANR	1082269	Identifier	m0		1081121	0					
ANR	1082270	ShiftExpression	1 << 19		1081121	1		<<			
ANR	1082271	PrimaryExpression	1		1081121	0					
ANR	1082272	PrimaryExpression	19		1081121	1					
ANR	1082273	RelationalExpression	d >= ( 1 << 19 )		1081121	1		>=			
ANR	1082274	Identifier	d		1081121	0					
ANR	1082275	ShiftExpression	1 << 19		1081121	1		<<			
ANR	1082276	PrimaryExpression	1		1081121	0					
ANR	1082277	PrimaryExpression	19		1081121	1					
ANR	1082278	ExpressionStatement	"m0 >>= 5 , d >>= 5"	2718:24:114380:114397	1081121	1	True				
ANR	1082279	Expression	"m0 >>= 5 , d >>= 5"		1081121	0					
ANR	1082280	AssignmentExpression	m0 >>= 5		1081121	0		>>=			
ANR	1082281	Identifier	m0		1081121	0					
ANR	1082282	PrimaryExpression	5		1081121	1					
ANR	1082283	AssignmentExpression	d >>= 5		1081121	1		>>=			
ANR	1082284	Identifier	d		1081121	0					
ANR	1082285	PrimaryExpression	5		1081121	1					
ANR	1082286	ExpressionStatement	"q1 = m0 / d , r1 = m0 % d , m1 = r1 << 12"	2719:20:114419:114458	1081121	4	True				
ANR	1082287	Expression	"q1 = m0 / d , r1 = m0 % d , m1 = r1 << 12"		1081121	0					
ANR	1082288	AssignmentExpression	q1 = m0 / d		1081121	0		=			
ANR	1082289	Identifier	q1		1081121	0					
ANR	1082290	MultiplicativeExpression	m0 / d		1081121	1		/			
ANR	1082291	Identifier	m0		1081121	0					
ANR	1082292	Identifier	d		1081121	1					
ANR	1082293	Expression	"r1 = m0 % d , m1 = r1 << 12"		1081121	1					
ANR	1082294	AssignmentExpression	r1 = m0 % d		1081121	0		=			
ANR	1082295	Identifier	r1		1081121	0					
ANR	1082296	MultiplicativeExpression	m0 % d		1081121	1		%			
ANR	1082297	Identifier	m0		1081121	0					
ANR	1082298	Identifier	d		1081121	1					
ANR	1082299	AssignmentExpression	m1 = r1 << 12		1081121	1		=			
ANR	1082300	Identifier	m1		1081121	0					
ANR	1082301	ShiftExpression	r1 << 12		1081121	1		<<			
ANR	1082302	Identifier	r1		1081121	0					
ANR	1082303	PrimaryExpression	12		1081121	1					
ANR	1082304	ExpressionStatement	q2 = m1 / d	2720:20:114480:114491	1081121	5	True				
ANR	1082305	AssignmentExpression	q2 = m1 / d		1081121	0		=			
ANR	1082306	Identifier	q2		1081121	0					
ANR	1082307	MultiplicativeExpression	m1 / d		1081121	1		/			
ANR	1082308	Identifier	m1		1081121	0					
ANR	1082309	Identifier	d		1081121	1					
ANR	1082310	ExpressionStatement	u = ( q1 << 12 ) + q2	2721:20:114513:114532	1081121	6	True				
ANR	1082311	AssignmentExpression	u = ( q1 << 12 ) + q2		1081121	0		=			
ANR	1082312	Identifier	u		1081121	0					
ANR	1082313	AdditiveExpression	( q1 << 12 ) + q2		1081121	1		+			
ANR	1082314	ShiftExpression	q1 << 12		1081121	0		<<			
ANR	1082315	Identifier	q1		1081121	0					
ANR	1082316	PrimaryExpression	12		1081121	1					
ANR	1082317	Identifier	q2		1081121	1					
ANR	1082318	ForStatement	"for ( j = ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole ) ; j != stop_pole ; j = ranger_step_f ( j , beg_contour_pole , end_contour_pole ) )"		1081121	7					
ANR	1082319	ForInit	"j = ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole ) ;"	2722:25:114559:114625	1081121	0	True				
ANR	1082320	AssignmentExpression	"j = ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole )"		1081121	0		=			
ANR	1082321	Identifier	j		1081121	0					
ANR	1082322	CallExpression	"ranger_step_f ( start_pole , beg_contour_pole , end_contour_pole )"		1081121	1					
ANR	1082323	Callee	ranger_step_f		1081121	0					
ANR	1082324	Identifier	ranger_step_f		1081121	0					
ANR	1082325	ArgumentList	start_pole		1081121	1					
ANR	1082326	Argument	start_pole		1081121	0					
ANR	1082327	Identifier	start_pole		1081121	0					
ANR	1082328	Argument	beg_contour_pole		1081121	1					
ANR	1082329	Identifier	beg_contour_pole		1081121	0					
ANR	1082330	Argument	end_contour_pole		1081121	2					
ANR	1082331	Identifier	end_contour_pole		1081121	0					
ANR	1082332	Condition	j != stop_pole	2722:93:114627:114640	1081121	1	True				
ANR	1082333	EqualityExpression	j != stop_pole		1081121	0		!=			
ANR	1082334	Identifier	j		1081121	0					
ANR	1082335	Identifier	stop_pole		1081121	1					
ANR	1082336	AssignmentExpression	"j = ranger_step_f ( j , beg_contour_pole , end_contour_pole )"	2723:25:114668:114724	1081121	2	True	=			
ANR	1082337	Identifier	j		1081121	0					
ANR	1082338	CallExpression	"ranger_step_f ( j , beg_contour_pole , end_contour_pole )"		1081121	1					
ANR	1082339	Callee	ranger_step_f		1081121	0					
ANR	1082340	Identifier	ranger_step_f		1081121	0					
ANR	1082341	ArgumentList	j		1081121	1					
ANR	1082342	Argument	j		1081121	0					
ANR	1082343	Identifier	j		1081121	0					
ANR	1082344	Argument	beg_contour_pole		1081121	1					
ANR	1082345	Identifier	beg_contour_pole		1081121	0					
ANR	1082346	Argument	end_contour_pole		1081121	2					
ANR	1082347	Identifier	end_contour_pole		1081121	0					
ANR	1082348	CompoundStatement		148:24:7689:7774	1081121	3					
ANR	1082349	IdentifierDeclStatement	"t1_glyph_space_coord g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc ) ;"	2724:24:114753:114838	1081121	0	True				
ANR	1082350	IdentifierDecl	"g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	0					
ANR	1082351	IdentifierDeclType	t1_glyph_space_coord		1081121	0					
ANR	1082352	Identifier	g		1081121	1					
ANR	1082353	AssignmentExpression	"g = * member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	2		=			
ANR	1082354	Identifier	g		1081121	0					
ANR	1082355	UnaryOperationExpression	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	1					
ANR	1082356	UnaryOperator	*		1081121	0					
ANR	1082357	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121	1					
ANR	1082358	Callee	member_prt		1081121	0					
ANR	1082359	Identifier	member_prt		1081121	0					
ANR	1082360	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1082361	Argument	t1_glyph_space_coord		1081121	0					
ANR	1082362	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1082363	Argument	& self -> pole [ j ]		1081121	1					
ANR	1082364	UnaryOperationExpression	& self -> pole [ j ]		1081121	0					
ANR	1082365	UnaryOperator	&		1081121	0					
ANR	1082366	ArrayIndexing	self -> pole [ j ]		1081121	1					
ANR	1082367	PtrMemberAccess	self -> pole		1081121	0					
ANR	1082368	Identifier	self		1081121	0					
ANR	1082369	Identifier	pole		1081121	1					
ANR	1082370	Identifier	j		1081121	1					
ANR	1082371	Argument	offset_gc		1081121	2					
ANR	1082372	Identifier	offset_gc		1081121	0					
ANR	1082373	IfStatement	if ( min_g < g && g < max_g )		1081121	1					
ANR	1082374	Condition	min_g < g && g < max_g	2726:28:114869:114890	1081121	0	True				
ANR	1082375	AndExpression	min_g < g && g < max_g		1081121	0		&&			
ANR	1082376	RelationalExpression	min_g < g		1081121	0		<			
ANR	1082377	Identifier	min_g		1081121	0					
ANR	1082378	Identifier	g		1081121	1					
ANR	1082379	RelationalExpression	g < max_g		1081121	1		<			
ANR	1082380	Identifier	g		1081121	0					
ANR	1082381	Identifier	max_g		1081121	1					
ANR	1082382	CompoundStatement		153:28:8038:8082	1081121	1					
ANR	1082383	IdentifierDeclStatement	"t1_glyph_space_coord * a = member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac ) ;"	2727:28:114923:115008	1081121	0	True				
ANR	1082384	IdentifierDecl	"* a = member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		1081121	0					
ANR	1082385	IdentifierDeclType	t1_glyph_space_coord *		1081121	0					
ANR	1082386	Identifier	a		1081121	1					
ANR	1082387	AssignmentExpression	"* a = member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		1081121	2		=			
ANR	1082388	Identifier	a		1081121	0					
ANR	1082389	CallExpression	"member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		1081121	1					
ANR	1082390	Callee	member_prt		1081121	0					
ANR	1082391	Identifier	member_prt		1081121	0					
ANR	1082392	ArgumentList	t1_glyph_space_coord		1081121	1					
ANR	1082393	Argument	t1_glyph_space_coord		1081121	0					
ANR	1082394	Identifier	t1_glyph_space_coord		1081121	0					
ANR	1082395	Argument	& self -> pole [ j ]		1081121	1					
ANR	1082396	UnaryOperationExpression	& self -> pole [ j ]		1081121	0					
ANR	1082397	UnaryOperator	&		1081121	0					
ANR	1082398	ArrayIndexing	self -> pole [ j ]		1081121	1					
ANR	1082399	PtrMemberAccess	self -> pole		1081121	0					
ANR	1082400	Identifier	self		1081121	0					
ANR	1082401	Identifier	pole		1081121	1					
ANR	1082402	Identifier	j		1081121	1					
ANR	1082403	Argument	offset_ac		1081121	2					
ANR	1082404	Identifier	offset_ac		1081121	0					
ANR	1082405	IdentifierDeclStatement	t1_glyph_space_coord x = g - min_g ;	2728:28:115038:115072	1081121	1	True				
ANR	1082406	IdentifierDecl	x = g - min_g		1081121	0					
ANR	1082407	IdentifierDeclType	t1_glyph_space_coord		1081121	0					
ANR	1082408	Identifier	x		1081121	1					
ANR	1082409	AssignmentExpression	x = g - min_g		1081121	2		=			
ANR	1082410	Identifier	x		1081121	0					
ANR	1082411	AdditiveExpression	g - min_g		1081121	1		-			
ANR	1082412	Identifier	g		1081121	0					
ANR	1082413	Identifier	min_g		1081121	1					
ANR	1082414	IdentifierDeclStatement	"t1_glyph_space_coord h = mul_shift ( x , u , 12 ) ;"	2729:28:115102:115146	1081121	2	True				
ANR	1082415	IdentifierDecl	"h = mul_shift ( x , u , 12 )"		1081121	0					
ANR	1082416	IdentifierDeclType	t1_glyph_space_coord		1081121	0					
ANR	1082417	Identifier	h		1081121	1					
ANR	1082418	AssignmentExpression	"h = mul_shift ( x , u , 12 )"		1081121	2		=			
ANR	1082419	Identifier	h		1081121	0					
ANR	1082420	CallExpression	"mul_shift ( x , u , 12 )"		1081121	1					
ANR	1082421	Callee	mul_shift		1081121	0					
ANR	1082422	Identifier	mul_shift		1081121	0					
ANR	1082423	ArgumentList	x		1081121	1					
ANR	1082424	Argument	x		1081121	0					
ANR	1082425	Identifier	x		1081121	0					
ANR	1082426	Argument	u		1081121	1					
ANR	1082427	Identifier	u		1081121	0					
ANR	1082428	Argument	12		1081121	2					
ANR	1082429	PrimaryExpression	12		1081121	0					
ANR	1082430	ExpressionStatement	* a = min_a + h	2732:28:115312:115326	1081121	3	True				
ANR	1082431	AssignmentExpression	* a = min_a + h		1081121	0		=			
ANR	1082432	UnaryOperationExpression	* a		1081121	0					
ANR	1082433	UnaryOperator	*		1081121	0					
ANR	1082434	Identifier	a		1081121	1					
ANR	1082435	AdditiveExpression	min_a + h		1081121	1		+			
ANR	1082436	Identifier	min_a		1081121	0					
ANR	1082437	Identifier	h		1081121	1					
ANR	1082438	ExpressionStatement	j = stop_pole	2736:16:115410:115423	1081121	10	True				
ANR	1082439	AssignmentExpression	j = stop_pole		1081121	0		=			
ANR	1082440	Identifier	j		1081121	0					
ANR	1082441	Identifier	stop_pole		1081121	1					
ANR	1082442	Condition	j != range_beg	2737:21:115446:115459	1081121	1	True				
ANR	1082443	EqualityExpression	j != range_beg		1081121	0		!=			
ANR	1082444	Identifier	j		1081121	0					
ANR	1082445	Identifier	range_beg		1081121	1					
ANR	1082446	ReturnType	static void		1081121	1					
ANR	1082447	Identifier	t1_hinter__interpolate_other_poles		1081121	2					
ANR	1082448	ParameterList	t1_hinter * self		1081121	3					
ANR	1082449	Parameter	t1_hinter * self	2576:47:107045:107060	1081121	0	True				
ANR	1082450	ParameterType	t1_hinter *		1081121	0					
ANR	1082451	Identifier	self		1081121	1					
ANR	1082452	CFGEntryNode	ENTRY		1081121		True				
ANR	1082453	CFGExitNode	EXIT		1081121		True				
ANR	1082454	InfiniteForNode	true		1081121		True				
ANR	1082455	Symbol	min_a		1081121						
ANR	1082456	Symbol	cut_l		1081121						
ANR	1082457	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_ac )"		1081121						
ANR	1082458	Symbol	moved		1081121						
ANR	1082459	Symbol	mul_shift		1081121						
ANR	1082460	Symbol	min_g		1081121						
ANR	1082461	Symbol	min_i		1081121						
ANR	1082462	Symbol	min_l		1081121						
ANR	1082463	Symbol	div		1081121						
ANR	1082464	Symbol	* member_prt		1081121						
ANR	1082465	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_wc )"		1081121						
ANR	1082466	Symbol	w0		1081121						
ANR	1082467	Symbol	member_prt		1081121						
ANR	1082468	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_ac )"		1081121						
ANR	1082469	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_bl )"		1081121						
ANR	1082470	Symbol	ranger_step_f		1081121						
ANR	1082471	Symbol	* self		1081121						
ANR	1082472	Symbol	g0		1081121						
ANR	1082473	Symbol	offset_gc		1081121						
ANR	1082474	Symbol	g1		1081121						
ANR	1082475	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_gc )"		1081121						
ANR	1082476	Symbol	self -> contour		1081121						
ANR	1082477	Symbol	t1_glyph_space_coord		1081121						
ANR	1082478	Symbol	range_beg		1081121						
ANR	1082479	Symbol	end_contour_pole		1081121						
ANR	1082480	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_bl )"		1081121						
ANR	1082481	Symbol	true		1081121						
ANR	1082482	Symbol	& self -> pole [ 0 ] . ay		1081121						
ANR	1082483	Symbol	p_gc		1081121						
ANR	1082484	Symbol	& self -> pole [ 0 ] . ax		1081121						
ANR	1082485	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ stop_pole ] , offset_gc )"		1081121						
ANR	1082486	Symbol	* self -> pole		1081121						
ANR	1082487	Symbol	mul		1081121						
ANR	1082488	Symbol	& self -> pole [ 0 ] . aligned_x		1081121						
ANR	1082489	Symbol	offset_f		1081121						
ANR	1082490	Symbol	& self -> pole [ 0 ] . aligned_y		1081121						
ANR	1082491	Symbol	start_pole		1081121						
ANR	1082492	Symbol	p_bl		1081121						
ANR	1082493	Symbol	p_wc		1081121						
ANR	1082494	Symbol	offset_bl		1081121						
ANR	1082495	Symbol	p_f		1081121						
ANR	1082496	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_gc )"		1081121						
ANR	1082497	Symbol	any_abs		1081121						
ANR	1082498	Symbol	self -> pole		1081121						
ANR	1082499	Symbol	offset_wc		1081121						
ANR	1082500	Symbol	beg_contour_pole		1081121						
ANR	1082501	Symbol	* self -> contour		1081121						
ANR	1082502	Symbol	q1		1081121						
ANR	1082503	Symbol	max_g		1081121						
ANR	1082504	Symbol	q2		1081121						
ANR	1082505	Symbol	a		1081121						
ANR	1082506	Symbol	& self -> pole [ 0 ] . boundary_length_y		1081121						
ANR	1082507	Symbol	max_i		1081121						
ANR	1082508	Symbol	m0		1081121						
ANR	1082509	Symbol	& self -> pole [ 0 ] . gy		1081121						
ANR	1082510	Symbol	self -> contour_count		1081121						
ANR	1082511	Symbol	d		1081121						
ANR	1082512	Symbol	m1		1081121						
ANR	1082513	Symbol	* * self		1081121						
ANR	1082514	Symbol	& self -> pole [ 0 ] . gx		1081121						
ANR	1082515	Symbol	p_ac		1081121						
ANR	1082516	Symbol	g		1081121						
ANR	1082517	Symbol	false		1081121						
ANR	1082518	Symbol	h		1081121						
ANR	1082519	Symbol	i		1081121						
ANR	1082520	Symbol	j		1081121						
ANR	1082521	Symbol	k		1081121						
ANR	1082522	Symbol	max_a		1081121						
ANR	1082523	Symbol	* a		1081121						
ANR	1082524	Symbol	& self -> pole [ 0 ] . boundary_length_x		1081121						
ANR	1082525	Symbol	offset_ac		1081121						
ANR	1082526	Symbol	l		1081121						
ANR	1082527	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ j ] , offset_wc )"		1081121						
ANR	1082528	Symbol	a0		1081121						
ANR	1082529	Symbol	a1		1081121						
ANR	1082530	Symbol	max_w		1081121						
ANR	1082531	Symbol	stop_pole		1081121						
ANR	1082532	Symbol	* i		1081121						
ANR	1082533	Symbol	"* member_prt ( t1_glyph_space_coord , & self -> pole [ start_pole ] , offset_ac )"		1081121						
ANR	1082534	Symbol	u		1081121						
ANR	1082535	Symbol	w		1081121						
ANR	1082536	Symbol	x		1081121						
ANR	1082537	Symbol	self		1081121						
ANR	1082538	Symbol	min_w		1081121						
ANR	1082539	Symbol	max_l		1081121						
ANR	1082540	Symbol	r1		1081121						
ANR	1082541	Function	t1_hinter__export	2742:0:115482:116880							
ANR	1082542	FunctionDef	t1_hinter__export (t1_hinter * self)		1082541	0					
ANR	1082543	CompoundStatement		2743:0:115529:116880	1082541	0					
ANR	1082544	IdentifierDeclStatement	"int i , j , code ;"	2743:3:115533:115547	1082541	0	True				
ANR	1082545	IdentifierDecl	i		1082541	0					
ANR	1082546	IdentifierDeclType	int		1082541	0					
ANR	1082547	Identifier	i		1082541	1					
ANR	1082548	IdentifierDecl	j		1082541	1					
ANR	1082549	IdentifierDeclType	int		1082541	0					
ANR	1082550	Identifier	j		1082541	1					
ANR	1082551	IdentifierDecl	code		1082541	2					
ANR	1082552	IdentifierDeclType	int		1082541	0					
ANR	1082553	Identifier	code		1082541	1					
ANR	1082554	IdentifierDeclStatement	"fixed fx , fy ;"	2744:4:115553:115565	1082541	1	True				
ANR	1082555	IdentifierDecl	fx		1082541	0					
ANR	1082556	IdentifierDeclType	fixed		1082541	0					
ANR	1082557	Identifier	fx		1082541	1					
ANR	1082558	IdentifierDecl	fy		1082541	1					
ANR	1082559	IdentifierDeclType	fixed		1082541	0					
ANR	1082560	Identifier	fy		1082541	1					
ANR	1082561	ForStatement	for ( i = 0 ; ; i ++ )		1082541	2					
ANR	1082562	ForInit	i = 0 ;	2746:8:115576:115581	1082541	0	True				
ANR	1082563	AssignmentExpression	i = 0		1082541	0		=			
ANR	1082564	Identifier	i		1082541	0					
ANR	1082565	PrimaryExpression	0		1082541	1					
ANR	1082566	PostIncDecOperationExpression	i ++	2746:17:115585:115587	1082541	1	True				
ANR	1082567	Identifier	i		1082541	0					
ANR	1082568	IncDec	++		1082541	1					
ANR	1082569	CompoundStatement		6:8:121:159	1082541	2					
ANR	1082570	IdentifierDeclStatement	"int end_pole , beg_pole = self -> contour [ i ] ;"	2747:8:115600:115641	1082541	0	True				
ANR	1082571	IdentifierDecl	end_pole		1082541	0					
ANR	1082572	IdentifierDeclType	int		1082541	0					
ANR	1082573	Identifier	end_pole		1082541	1					
ANR	1082574	IdentifierDecl	beg_pole = self -> contour [ i ]		1082541	1					
ANR	1082575	IdentifierDeclType	int		1082541	0					
ANR	1082576	Identifier	beg_pole		1082541	1					
ANR	1082577	AssignmentExpression	beg_pole = self -> contour [ i ]		1082541	2		=			
ANR	1082578	Identifier	beg_pole		1082541	0					
ANR	1082579	ArrayIndexing	self -> contour [ i ]		1082541	1					
ANR	1082580	PtrMemberAccess	self -> contour		1082541	0					
ANR	1082581	Identifier	self		1082541	0					
ANR	1082582	Identifier	contour		1082541	1					
ANR	1082583	Identifier	i		1082541	1					
ANR	1082584	IdentifierDeclStatement	t1_pole * pole = & self -> pole [ beg_pole ] ;	2748:8:115651:115689	1082541	1	True				
ANR	1082585	IdentifierDecl	* pole = & self -> pole [ beg_pole ]		1082541	0					
ANR	1082586	IdentifierDeclType	t1_pole *		1082541	0					
ANR	1082587	Identifier	pole		1082541	1					
ANR	1082588	AssignmentExpression	* pole = & self -> pole [ beg_pole ]		1082541	2		=			
ANR	1082589	Identifier	pole		1082541	0					
ANR	1082590	UnaryOperationExpression	& self -> pole [ beg_pole ]		1082541	1					
ANR	1082591	UnaryOperator	&		1082541	0					
ANR	1082592	ArrayIndexing	self -> pole [ beg_pole ]		1082541	1					
ANR	1082593	PtrMemberAccess	self -> pole		1082541	0					
ANR	1082594	Identifier	self		1082541	0					
ANR	1082595	Identifier	pole		1082541	1					
ANR	1082596	Identifier	beg_pole		1082541	1					
ANR	1082597	ExpressionStatement	"g2d ( self , pole -> ax , pole -> ay , & fx , & fy )"	2750:8:115700:115739	1082541	2	True				
ANR	1082598	CallExpression	"g2d ( self , pole -> ax , pole -> ay , & fx , & fy )"		1082541	0					
ANR	1082599	Callee	g2d		1082541	0					
ANR	1082600	Identifier	g2d		1082541	0					
ANR	1082601	ArgumentList	self		1082541	1					
ANR	1082602	Argument	self		1082541	0					
ANR	1082603	Identifier	self		1082541	0					
ANR	1082604	Argument	pole -> ax		1082541	1					
ANR	1082605	PtrMemberAccess	pole -> ax		1082541	0					
ANR	1082606	Identifier	pole		1082541	0					
ANR	1082607	Identifier	ax		1082541	1					
ANR	1082608	Argument	pole -> ay		1082541	2					
ANR	1082609	PtrMemberAccess	pole -> ay		1082541	0					
ANR	1082610	Identifier	pole		1082541	0					
ANR	1082611	Identifier	ay		1082541	1					
ANR	1082612	Argument	& fx		1082541	3					
ANR	1082613	UnaryOperationExpression	& fx		1082541	0					
ANR	1082614	UnaryOperator	&		1082541	0					
ANR	1082615	Identifier	fx		1082541	1					
ANR	1082616	Argument	& fy		1082541	4					
ANR	1082617	UnaryOperationExpression	& fy		1082541	0					
ANR	1082618	UnaryOperator	&		1082541	0					
ANR	1082619	Identifier	fy		1082541	1					
ANR	1082620	ExpressionStatement	"code = gx_path_add_point ( self -> output_path , fx , fy )"	2751:8:115749:115800	1082541	3	True				
ANR	1082621	AssignmentExpression	"code = gx_path_add_point ( self -> output_path , fx , fy )"		1082541	0		=			
ANR	1082622	Identifier	code		1082541	0					
ANR	1082623	CallExpression	"gx_path_add_point ( self -> output_path , fx , fy )"		1082541	1					
ANR	1082624	Callee	gx_path_add_point		1082541	0					
ANR	1082625	Identifier	gx_path_add_point		1082541	0					
ANR	1082626	ArgumentList	self -> output_path		1082541	1					
ANR	1082627	Argument	self -> output_path		1082541	0					
ANR	1082628	PtrMemberAccess	self -> output_path		1082541	0					
ANR	1082629	Identifier	self		1082541	0					
ANR	1082630	Identifier	output_path		1082541	1					
ANR	1082631	Argument	fx		1082541	1					
ANR	1082632	Identifier	fx		1082541	0					
ANR	1082633	Argument	fy		1082541	2					
ANR	1082634	Identifier	fy		1082541	0					
ANR	1082635	IfStatement	if ( code < 0 )		1082541	4					
ANR	1082636	Condition	code < 0	2752:12:115814:115821	1082541	0	True				
ANR	1082637	RelationalExpression	code < 0		1082541	0		<			
ANR	1082638	Identifier	code		1082541	0					
ANR	1082639	PrimaryExpression	0		1082541	1					
ANR	1082640	ReturnStatement	return code ;	2753:12:115836:115847	1082541	1	True				
ANR	1082641	Identifier	code		1082541	0					
ANR	1082642	IfStatement	if ( i >= self -> contour_count )		1082541	5					
ANR	1082643	Condition	i >= self -> contour_count	2754:12:115861:115884	1082541	0	True				
ANR	1082644	RelationalExpression	i >= self -> contour_count		1082541	0		>=			
ANR	1082645	Identifier	i		1082541	0					
ANR	1082646	PtrMemberAccess	self -> contour_count		1082541	1					
ANR	1082647	Identifier	self		1082541	0					
ANR	1082648	Identifier	contour_count		1082541	1					
ANR	1082649	BreakStatement	break ;	2755:12:115899:115904	1082541	1	True				
ANR	1082650	ExpressionStatement	end_pole = self -> contour [ i + 1 ] - 2	2756:8:115914:115949	1082541	6	True				
ANR	1082651	AssignmentExpression	end_pole = self -> contour [ i + 1 ] - 2		1082541	0		=			
ANR	1082652	Identifier	end_pole		1082541	0					
ANR	1082653	AdditiveExpression	self -> contour [ i + 1 ] - 2		1082541	1		-			
ANR	1082654	ArrayIndexing	self -> contour [ i + 1 ]		1082541	0					
ANR	1082655	PtrMemberAccess	self -> contour		1082541	0					
ANR	1082656	Identifier	self		1082541	0					
ANR	1082657	Identifier	contour		1082541	1					
ANR	1082658	AdditiveExpression	i + 1		1082541	1		+			
ANR	1082659	Identifier	i		1082541	0					
ANR	1082660	PrimaryExpression	1		1082541	1					
ANR	1082661	PrimaryExpression	2		1082541	1					
ANR	1082662	ForStatement	for ( j = beg_pole + 1 ; j <= end_pole ; j ++ )		1082541	7					
ANR	1082663	ForInit	j = beg_pole + 1 ;	2757:12:115963:115979	1082541	0	True				
ANR	1082664	AssignmentExpression	j = beg_pole + 1		1082541	0		=			
ANR	1082665	Identifier	j		1082541	0					
ANR	1082666	AdditiveExpression	beg_pole + 1		1082541	1		+			
ANR	1082667	Identifier	beg_pole		1082541	0					
ANR	1082668	PrimaryExpression	1		1082541	1					
ANR	1082669	Condition	j <= end_pole	2757:30:115981:115993	1082541	1	True				
ANR	1082670	RelationalExpression	j <= end_pole		1082541	0		<=			
ANR	1082671	Identifier	j		1082541	0					
ANR	1082672	Identifier	end_pole		1082541	1					
ANR	1082673	PostIncDecOperationExpression	j ++	2757:45:115996:115998	1082541	2	True				
ANR	1082674	Identifier	j		1082541	0					
ANR	1082675	IncDec	++		1082541	1					
ANR	1082676	CompoundStatement		15:50:471:471	1082541	3					
ANR	1082677	ExpressionStatement	pole = & self -> pole [ j ]	2758:12:116015:116037	1082541	0	True				
ANR	1082678	AssignmentExpression	pole = & self -> pole [ j ]		1082541	0		=			
ANR	1082679	Identifier	pole		1082541	0					
ANR	1082680	UnaryOperationExpression	& self -> pole [ j ]		1082541	1					
ANR	1082681	UnaryOperator	&		1082541	0					
ANR	1082682	ArrayIndexing	self -> pole [ j ]		1082541	1					
ANR	1082683	PtrMemberAccess	self -> pole		1082541	0					
ANR	1082684	Identifier	self		1082541	0					
ANR	1082685	Identifier	pole		1082541	1					
ANR	1082686	Identifier	j		1082541	1					
ANR	1082687	ExpressionStatement	"g2d ( self , pole -> ax , pole -> ay , & fx , & fy )"	2759:12:116051:116090	1082541	1	True				
ANR	1082688	CallExpression	"g2d ( self , pole -> ax , pole -> ay , & fx , & fy )"		1082541	0					
ANR	1082689	Callee	g2d		1082541	0					
ANR	1082690	Identifier	g2d		1082541	0					
ANR	1082691	ArgumentList	self		1082541	1					
ANR	1082692	Argument	self		1082541	0					
ANR	1082693	Identifier	self		1082541	0					
ANR	1082694	Argument	pole -> ax		1082541	1					
ANR	1082695	PtrMemberAccess	pole -> ax		1082541	0					
ANR	1082696	Identifier	pole		1082541	0					
ANR	1082697	Identifier	ax		1082541	1					
ANR	1082698	Argument	pole -> ay		1082541	2					
ANR	1082699	PtrMemberAccess	pole -> ay		1082541	0					
ANR	1082700	Identifier	pole		1082541	0					
ANR	1082701	Identifier	ay		1082541	1					
ANR	1082702	Argument	& fx		1082541	3					
ANR	1082703	UnaryOperationExpression	& fx		1082541	0					
ANR	1082704	UnaryOperator	&		1082541	0					
ANR	1082705	Identifier	fx		1082541	1					
ANR	1082706	Argument	& fy		1082541	4					
ANR	1082707	UnaryOperationExpression	& fy		1082541	0					
ANR	1082708	UnaryOperator	&		1082541	0					
ANR	1082709	Identifier	fy		1082541	1					
ANR	1082710	IfStatement	if ( pole -> type == oncurve )		1082541	2					
ANR	1082711	Condition	pole -> type == oncurve	2760:16:116108:116128	1082541	0	True				
ANR	1082712	EqualityExpression	pole -> type == oncurve		1082541	0		==			
ANR	1082713	PtrMemberAccess	pole -> type		1082541	0					
ANR	1082714	Identifier	pole		1082541	0					
ANR	1082715	Identifier	type		1082541	1					
ANR	1082716	Identifier	oncurve		1082541	1					
ANR	1082717	CompoundStatement		18:39:601:601	1082541	1					
ANR	1082718	ExpressionStatement	"code = gx_path_add_line ( self -> output_path , fx , fy )"	2761:16:116149:116199	1082541	0	True				
ANR	1082719	AssignmentExpression	"code = gx_path_add_line ( self -> output_path , fx , fy )"		1082541	0		=			
ANR	1082720	Identifier	code		1082541	0					
ANR	1082721	CallExpression	"gx_path_add_line ( self -> output_path , fx , fy )"		1082541	1					
ANR	1082722	Callee	gx_path_add_line		1082541	0					
ANR	1082723	Identifier	gx_path_add_line		1082541	0					
ANR	1082724	ArgumentList	self -> output_path		1082541	1					
ANR	1082725	Argument	self -> output_path		1082541	0					
ANR	1082726	PtrMemberAccess	self -> output_path		1082541	0					
ANR	1082727	Identifier	self		1082541	0					
ANR	1082728	Identifier	output_path		1082541	1					
ANR	1082729	Argument	fx		1082541	1					
ANR	1082730	Identifier	fx		1082541	0					
ANR	1082731	Argument	fy		1082541	2					
ANR	1082732	Identifier	fy		1082541	0					
ANR	1082733	IfStatement	if ( code < 0 )		1082541	1					
ANR	1082734	Condition	code < 0	2762:20:116221:116228	1082541	0	True				
ANR	1082735	RelationalExpression	code < 0		1082541	0		<			
ANR	1082736	Identifier	code		1082541	0					
ANR	1082737	PrimaryExpression	0		1082541	1					
ANR	1082738	ReturnStatement	return code ;	2763:20:116251:116262	1082541	1	True				
ANR	1082739	Identifier	code		1082541	0					
ANR	1082740	ElseStatement	else		1082541	0					
ANR	1082741	CompoundStatement		24:16:847:871	1082541	0					
ANR	1082742	IdentifierDeclStatement	"int j1 = j + 1 , j2 = ( j + 2 > end_pole ? beg_pole : j + 2 ) ;"	2765:16:116301:116359	1082541	0	True				
ANR	1082743	IdentifierDecl	j1 = j + 1		1082541	0					
ANR	1082744	IdentifierDeclType	int		1082541	0					
ANR	1082745	Identifier	j1		1082541	1					
ANR	1082746	AssignmentExpression	j1 = j + 1		1082541	2		=			
ANR	1082747	Identifier	j1		1082541	0					
ANR	1082748	AdditiveExpression	j + 1		1082541	1		+			
ANR	1082749	Identifier	j		1082541	0					
ANR	1082750	PrimaryExpression	1		1082541	1					
ANR	1082751	IdentifierDecl	j2 = ( j + 2 > end_pole ? beg_pole : j + 2 )		1082541	1					
ANR	1082752	IdentifierDeclType	int		1082541	0					
ANR	1082753	Identifier	j2		1082541	1					
ANR	1082754	AssignmentExpression	j2 = ( j + 2 > end_pole ? beg_pole : j + 2 )		1082541	2		=			
ANR	1082755	Identifier	j2		1082541	0					
ANR	1082756	ConditionalExpression	j + 2 > end_pole ? beg_pole : j + 2		1082541	1					
ANR	1082757	Condition	j + 2 > end_pole		1082541	0					
ANR	1082758	RelationalExpression	j + 2 > end_pole		1082541	0		>			
ANR	1082759	AdditiveExpression	j + 2		1082541	0		+			
ANR	1082760	Identifier	j		1082541	0					
ANR	1082761	PrimaryExpression	2		1082541	1					
ANR	1082762	Identifier	end_pole		1082541	1					
ANR	1082763	Identifier	beg_pole		1082541	1					
ANR	1082764	AdditiveExpression	j + 2		1082541	2		+			
ANR	1082765	Identifier	j		1082541	0					
ANR	1082766	PrimaryExpression	2		1082541	1					
ANR	1082767	IdentifierDeclStatement	"fixed fx1 , fy1 , fx2 , fy2 ;"	2766:16:116377:116401	1082541	1	True				
ANR	1082768	IdentifierDecl	fx1		1082541	0					
ANR	1082769	IdentifierDeclType	fixed		1082541	0					
ANR	1082770	Identifier	fx1		1082541	1					
ANR	1082771	IdentifierDecl	fy1		1082541	1					
ANR	1082772	IdentifierDeclType	fixed		1082541	0					
ANR	1082773	Identifier	fy1		1082541	1					
ANR	1082774	IdentifierDecl	fx2		1082541	2					
ANR	1082775	IdentifierDeclType	fixed		1082541	0					
ANR	1082776	Identifier	fx2		1082541	1					
ANR	1082777	IdentifierDecl	fy2		1082541	3					
ANR	1082778	IdentifierDeclType	fixed		1082541	0					
ANR	1082779	Identifier	fy2		1082541	1					
ANR	1082780	ExpressionStatement	"g2d ( self , self -> pole [ j1 ] . ax , self -> pole [ j1 ] . ay , & fx1 , & fy1 )"	2768:16:116420:116479	1082541	2	True				
ANR	1082781	CallExpression	"g2d ( self , self -> pole [ j1 ] . ax , self -> pole [ j1 ] . ay , & fx1 , & fy1 )"		1082541	0					
ANR	1082782	Callee	g2d		1082541	0					
ANR	1082783	Identifier	g2d		1082541	0					
ANR	1082784	ArgumentList	self		1082541	1					
ANR	1082785	Argument	self		1082541	0					
ANR	1082786	Identifier	self		1082541	0					
ANR	1082787	Argument	self -> pole [ j1 ] . ax		1082541	1					
ANR	1082788	MemberAccess	self -> pole [ j1 ] . ax		1082541	0					
ANR	1082789	ArrayIndexing	self -> pole [ j1 ]		1082541	0					
ANR	1082790	PtrMemberAccess	self -> pole		1082541	0					
ANR	1082791	Identifier	self		1082541	0					
ANR	1082792	Identifier	pole		1082541	1					
ANR	1082793	Identifier	j1		1082541	1					
ANR	1082794	Identifier	ax		1082541	1					
ANR	1082795	Argument	self -> pole [ j1 ] . ay		1082541	2					
ANR	1082796	MemberAccess	self -> pole [ j1 ] . ay		1082541	0					
ANR	1082797	ArrayIndexing	self -> pole [ j1 ]		1082541	0					
ANR	1082798	PtrMemberAccess	self -> pole		1082541	0					
ANR	1082799	Identifier	self		1082541	0					
ANR	1082800	Identifier	pole		1082541	1					
ANR	1082801	Identifier	j1		1082541	1					
ANR	1082802	Identifier	ay		1082541	1					
ANR	1082803	Argument	& fx1		1082541	3					
ANR	1082804	UnaryOperationExpression	& fx1		1082541	0					
ANR	1082805	UnaryOperator	&		1082541	0					
ANR	1082806	Identifier	fx1		1082541	1					
ANR	1082807	Argument	& fy1		1082541	4					
ANR	1082808	UnaryOperationExpression	& fy1		1082541	0					
ANR	1082809	UnaryOperator	&		1082541	0					
ANR	1082810	Identifier	fy1		1082541	1					
ANR	1082811	ExpressionStatement	"g2d ( self , self -> pole [ j2 ] . ax , self -> pole [ j2 ] . ay , & fx2 , & fy2 )"	2769:16:116497:116556	1082541	3	True				
ANR	1082812	CallExpression	"g2d ( self , self -> pole [ j2 ] . ax , self -> pole [ j2 ] . ay , & fx2 , & fy2 )"		1082541	0					
ANR	1082813	Callee	g2d		1082541	0					
ANR	1082814	Identifier	g2d		1082541	0					
ANR	1082815	ArgumentList	self		1082541	1					
ANR	1082816	Argument	self		1082541	0					
ANR	1082817	Identifier	self		1082541	0					
ANR	1082818	Argument	self -> pole [ j2 ] . ax		1082541	1					
ANR	1082819	MemberAccess	self -> pole [ j2 ] . ax		1082541	0					
ANR	1082820	ArrayIndexing	self -> pole [ j2 ]		1082541	0					
ANR	1082821	PtrMemberAccess	self -> pole		1082541	0					
ANR	1082822	Identifier	self		1082541	0					
ANR	1082823	Identifier	pole		1082541	1					
ANR	1082824	Identifier	j2		1082541	1					
ANR	1082825	Identifier	ax		1082541	1					
ANR	1082826	Argument	self -> pole [ j2 ] . ay		1082541	2					
ANR	1082827	MemberAccess	self -> pole [ j2 ] . ay		1082541	0					
ANR	1082828	ArrayIndexing	self -> pole [ j2 ]		1082541	0					
ANR	1082829	PtrMemberAccess	self -> pole		1082541	0					
ANR	1082830	Identifier	self		1082541	0					
ANR	1082831	Identifier	pole		1082541	1					
ANR	1082832	Identifier	j2		1082541	1					
ANR	1082833	Identifier	ay		1082541	1					
ANR	1082834	Argument	& fx2		1082541	3					
ANR	1082835	UnaryOperationExpression	& fx2		1082541	0					
ANR	1082836	UnaryOperator	&		1082541	0					
ANR	1082837	Identifier	fx2		1082541	1					
ANR	1082838	Argument	& fy2		1082541	4					
ANR	1082839	UnaryOperationExpression	& fy2		1082541	0					
ANR	1082840	UnaryOperator	&		1082541	0					
ANR	1082841	Identifier	fy2		1082541	1					
ANR	1082842	ExpressionStatement	"code = gx_path_add_curve ( self -> output_path , fx , fy , fx1 , fy1 , fx2 , fy2 )"	2770:16:116574:116645	1082541	4	True				
ANR	1082843	AssignmentExpression	"code = gx_path_add_curve ( self -> output_path , fx , fy , fx1 , fy1 , fx2 , fy2 )"		1082541	0		=			
ANR	1082844	Identifier	code		1082541	0					
ANR	1082845	CallExpression	"gx_path_add_curve ( self -> output_path , fx , fy , fx1 , fy1 , fx2 , fy2 )"		1082541	1					
ANR	1082846	Callee	gx_path_add_curve		1082541	0					
ANR	1082847	Identifier	gx_path_add_curve		1082541	0					
ANR	1082848	ArgumentList	self -> output_path		1082541	1					
ANR	1082849	Argument	self -> output_path		1082541	0					
ANR	1082850	PtrMemberAccess	self -> output_path		1082541	0					
ANR	1082851	Identifier	self		1082541	0					
ANR	1082852	Identifier	output_path		1082541	1					
ANR	1082853	Argument	fx		1082541	1					
ANR	1082854	Identifier	fx		1082541	0					
ANR	1082855	Argument	fy		1082541	2					
ANR	1082856	Identifier	fy		1082541	0					
ANR	1082857	Argument	fx1		1082541	3					
ANR	1082858	Identifier	fx1		1082541	0					
ANR	1082859	Argument	fy1		1082541	4					
ANR	1082860	Identifier	fy1		1082541	0					
ANR	1082861	Argument	fx2		1082541	5					
ANR	1082862	Identifier	fx2		1082541	0					
ANR	1082863	Argument	fy2		1082541	6					
ANR	1082864	Identifier	fy2		1082541	0					
ANR	1082865	IfStatement	if ( code < 0 )		1082541	5					
ANR	1082866	Condition	code < 0	2771:20:116667:116674	1082541	0	True				
ANR	1082867	RelationalExpression	code < 0		1082541	0		<			
ANR	1082868	Identifier	code		1082541	0					
ANR	1082869	PrimaryExpression	0		1082541	1					
ANR	1082870	ReturnStatement	return code ;	2772:20:116697:116708	1082541	1	True				
ANR	1082871	Identifier	code		1082541	0					
ANR	1082872	ExpressionStatement	j += 2	2773:16:116726:116730	1082541	6	True				
ANR	1082873	AssignmentExpression	j += 2		1082541	0		+=			
ANR	1082874	Identifier	j		1082541	0					
ANR	1082875	PrimaryExpression	2		1082541	1					
ANR	1082876	ExpressionStatement	code = gx_path_close_subpath ( self -> output_path )	2776:8:116764:116811	1082541	8	True				
ANR	1082877	AssignmentExpression	code = gx_path_close_subpath ( self -> output_path )		1082541	0		=			
ANR	1082878	Identifier	code		1082541	0					
ANR	1082879	CallExpression	gx_path_close_subpath ( self -> output_path )		1082541	1					
ANR	1082880	Callee	gx_path_close_subpath		1082541	0					
ANR	1082881	Identifier	gx_path_close_subpath		1082541	0					
ANR	1082882	ArgumentList	self -> output_path		1082541	1					
ANR	1082883	Argument	self -> output_path		1082541	0					
ANR	1082884	PtrMemberAccess	self -> output_path		1082541	0					
ANR	1082885	Identifier	self		1082541	0					
ANR	1082886	Identifier	output_path		1082541	1					
ANR	1082887	IfStatement	if ( code < 0 )		1082541	9					
ANR	1082888	Condition	code < 0	2777:12:116825:116832	1082541	0	True				
ANR	1082889	RelationalExpression	code < 0		1082541	0		<			
ANR	1082890	Identifier	code		1082541	0					
ANR	1082891	PrimaryExpression	0		1082541	1					
ANR	1082892	ReturnStatement	return code ;	2778:12:116847:116858	1082541	1	True				
ANR	1082893	Identifier	code		1082541	0					
ANR	1082894	ReturnStatement	return 0 ;	2780:4:116870:116878	1082541	3	True				
ANR	1082895	PrimaryExpression	0		1082541	0					
ANR	1082896	ReturnType	static int		1082541	1					
ANR	1082897	Identifier	t1_hinter__export		1082541	2					
ANR	1082898	ParameterList	t1_hinter * self		1082541	3					
ANR	1082899	Parameter	t1_hinter * self	2742:29:115511:115526	1082541	0	True				
ANR	1082900	ParameterType	t1_hinter *		1082541	0					
ANR	1082901	Identifier	self		1082541	1					
ANR	1082902	CFGEntryNode	ENTRY		1082541		True				
ANR	1082903	CFGExitNode	EXIT		1082541		True				
ANR	1082904	InfiniteForNode	true		1082541		True				
ANR	1082905	Symbol	& fx2		1082541						
ANR	1082906	Symbol	oncurve		1082541						
ANR	1082907	Symbol	& fx1		1082541						
ANR	1082908	Symbol	code		1082541						
ANR	1082909	Symbol	end_pole		1082541						
ANR	1082910	Symbol	* self -> pole		1082541						
ANR	1082911	Symbol	j1		1082541						
ANR	1082912	Symbol	j2		1082541						
ANR	1082913	Symbol	pole		1082541						
ANR	1082914	Symbol	pole -> ay		1082541						
ANR	1082915	Symbol	* pole		1082541						
ANR	1082916	Symbol	pole -> ax		1082541						
ANR	1082917	Symbol	gx_path_close_subpath		1082541						
ANR	1082918	Symbol	gx_path_add_curve		1082541						
ANR	1082919	Symbol	fx		1082541						
ANR	1082920	Symbol	self -> pole [ j1 ] . ay		1082541						
ANR	1082921	Symbol	fy		1082541						
ANR	1082922	Symbol	self -> pole [ j2 ] . ay		1082541						
ANR	1082923	Symbol	self -> pole [ j1 ] . ax		1082541						
ANR	1082924	Symbol	self -> pole [ j2 ] . ax		1082541						
ANR	1082925	Symbol	self -> pole		1082541						
ANR	1082926	Symbol	& fy		1082541						
ANR	1082927	Symbol	self -> output_path		1082541						
ANR	1082928	Symbol	& fx		1082541						
ANR	1082929	Symbol	fx1		1082541						
ANR	1082930	Symbol	* self -> contour		1082541						
ANR	1082931	Symbol	pole -> type		1082541						
ANR	1082932	Symbol	fx2		1082541						
ANR	1082933	Symbol	& fy2		1082541						
ANR	1082934	Symbol	& fy1		1082541						
ANR	1082935	Symbol	self -> contour_count		1082541						
ANR	1082936	Symbol	* * self		1082541						
ANR	1082937	Symbol	* self		1082541						
ANR	1082938	Symbol	beg_pole		1082541						
ANR	1082939	Symbol	i		1082541						
ANR	1082940	Symbol	j		1082541						
ANR	1082941	Symbol	* j2		1082541						
ANR	1082942	Symbol	gx_path_add_point		1082541						
ANR	1082943	Symbol	* j1		1082541						
ANR	1082944	Symbol	self -> contour		1082541						
ANR	1082945	Symbol	* i		1082541						
ANR	1082946	Symbol	gx_path_add_line		1082541						
ANR	1082947	Symbol	self		1082541						
ANR	1082948	Symbol	fy2		1082541						
ANR	1082949	Symbol	fy1		1082541						
ANR	1082950	Function	t1_hinter__add_trailing_moveto	2783:0:116883:117801							
ANR	1082951	FunctionDef	t1_hinter__add_trailing_moveto (t1_hinter * self)		1082950	0					
ANR	1082952	CompoundStatement		2784:0:116943:117801	1082950	0					
ANR	1082953	IdentifierDeclStatement	"t1_glyph_space_coord gx = self -> width_gx , gy = self -> width_gy ;"	2784:3:116947:117008	1082950	0	True				
ANR	1082954	IdentifierDecl	gx = self -> width_gx		1082950	0					
ANR	1082955	IdentifierDeclType	t1_glyph_space_coord		1082950	0					
ANR	1082956	Identifier	gx		1082950	1					
ANR	1082957	AssignmentExpression	gx = self -> width_gx		1082950	2		=			
ANR	1082958	Identifier	gx		1082950	0					
ANR	1082959	PtrMemberAccess	self -> width_gx		1082950	1					
ANR	1082960	Identifier	self		1082950	0					
ANR	1082961	Identifier	width_gx		1082950	1					
ANR	1082962	IdentifierDecl	gy = self -> width_gy		1082950	1					
ANR	1082963	IdentifierDeclType	t1_glyph_space_coord		1082950	0					
ANR	1082964	Identifier	gy		1082950	1					
ANR	1082965	AssignmentExpression	gy = self -> width_gy		1082950	2		=			
ANR	1082966	Identifier	gy		1082950	0					
ANR	1082967	PtrMemberAccess	self -> width_gy		1082950	1					
ANR	1082968	Identifier	self		1082950	0					
ANR	1082969	Identifier	width_gy		1082950	1					
ANR	1082970	Statement	1.	2787:9:117073:117074	1082950	1	True				
ANR	1082971	Statement	With	2787:12:117076:117079	1082950	2	True				
ANR	1082972	Statement	TextAlphaBits	2787:17:117081:117093	1082950	3	True				
ANR	1082973	Statement	=	2787:30:117094:117094	1082950	4	True				
ANR	1082974	Statement	1	2787:31:117095:117095	1082950	5	True				
ANR	1082975	Statement	","	2787:32:117096:117096	1082950	6	True				
ANR	1082976	Statement	AlignToPixels	2787:34:117098:117110	1082950	7	True				
ANR	1082977	Statement	must	2787:48:117112:117115	1082950	8	True				
ANR	1082978	Statement	have	2787:53:117117:117120	1082950	9	True				
ANR	1082979	Statement	no	2787:58:117122:117123	1082950	10	True				
ANR	1082980	Statement	effect	2787:61:117125:117130	1082950	11	True				
ANR	1082981	Statement	.	2787:67:117131:117131	1082950	12	True				
ANR	1082982	Statement	2.	2788:9:117142:117143	1082950	13	True				
ANR	1082983	Statement	ashow	2788:12:117145:117149	1082950	14	True				
ANR	1082984	Statement	","	2788:17:117150:117150	1082950	15	True				
ANR	1082985	Statement	awidthshow	2788:19:117152:117161	1082950	16	True				
ANR	1082986	Statement	must	2788:30:117163:117166	1082950	17	True				
ANR	1082987	Statement	add	2788:35:117168:117170	1082950	18	True				
ANR	1082988	Statement	the	2788:39:117172:117174	1082950	19	True				
ANR	1082989	Statement	width	2788:43:117176:117180	1082950	20	True				
ANR	1082990	Statement	before	2788:49:117182:117187	1082950	21	True				
ANR	1082991	Statement	alignment	2788:56:117189:117197	1082950	22	True				
ANR	1082992	Statement	.	2788:65:117198:117198	1082950	23	True				
ANR	1082993	Statement	4.	2789:9:117209:117210	1082950	24	True				
ANR	1082994	Statement	In	2789:12:117212:117213	1082950	25	True				
ANR	1082995	Statement	the	2789:15:117215:117217	1082950	26	True				
ANR	1082996	Statement	PDF	2789:19:117219:117221	1082950	27	True				
ANR	1082997	Statement	interpreter	2789:23:117223:117233	1082950	28	True				
ANR	1082998	Statement	","	2789:34:117234:117234	1082950	29	True				
ANR	1082999	Statement	Tc	2789:36:117236:117237	1082950	30	True				
ANR	1083000	Statement	must	2789:39:117239:117242	1082950	31	True				
ANR	1083001	Statement	add	2789:44:117244:117246	1082950	32	True				
ANR	1083002	Statement	before	2789:48:117248:117253	1082950	33	True				
ANR	1083003	Statement	alignment	2789:55:117255:117263	1082950	34	True				
ANR	1083004	Statement	.	2789:64:117264:117264	1082950	35	True				
ANR	1083005	Statement	5.	2790:9:117275:117276	1082950	36	True				
ANR	1083006	Statement	Since	2790:12:117278:117282	1082950	37	True				
ANR	1083007	Statement	a	2790:18:117284:117284	1082950	38	True				
ANR	1083008	Statement	character	2790:20:117286:117294	1082950	39	True				
ANR	1083009	Statement	origin	2790:30:117296:117301	1082950	40	True				
ANR	1083010	Statement	is	2790:37:117303:117304	1082950	41	True				
ANR	1083011	Statement	aligned	2790:40:117306:117312	1082950	42	True				
ANR	1083012	Statement	","	2790:47:117313:117313	1082950	43	True				
ANR	1083013	Statement	rounding	2791:12:117327:117334	1082950	44	True				
ANR	1083014	Statement	its	2791:21:117336:117338	1082950	45	True				
ANR	1083015	Statement	width	2791:25:117340:117344	1082950	46	True				
ANR	1083016	Statement	doesn	2791:31:117346:117350	1082950	47	True				
ANR	1083017	Statement	t	2791:37:117352:117352	1082950	48	True				
ANR	1083018	Statement	affect	2791:39:117354:117359	1082950	49	True				
ANR	1083019	Statement	subsequent	2791:46:117361:117370	1082950	50	True				
ANR	1083020	Statement	characters	2791:57:117372:117381	1082950	51	True				
ANR	1083021	Statement	.	2791:67:117382:117382	1082950	52	True				
ANR	1083022	Statement	6.	2792:9:117393:117394	1082950	53	True				
ANR	1083023	Statement	When	2792:12:117396:117399	1082950	54	True				
ANR	1083024	Statement	the	2792:17:117401:117403	1082950	55	True				
ANR	1083025	Statement	character	2792:21:117405:117413	1082950	56	True				
ANR	1083026	Statement	size	2792:31:117415:117418	1082950	57	True				
ANR	1083027	Statement	is	2792:36:117420:117421	1082950	58	True				
ANR	1083028	Statement	smaller	2792:39:117423:117429	1082950	59	True				
ANR	1083029	Statement	than	2792:47:117431:117434	1082950	60	True				
ANR	1083030	Statement	half	2792:52:117436:117439	1082950	61	True				
ANR	1083031	Statement	pixel	2792:57:117441:117445	1082950	62	True				
ANR	1083032	Statement	width	2792:63:117447:117451	1082950	63	True				
ANR	1083033	Statement	","	2792:68:117452:117452	1082950	64	True				
ANR	1083034	Statement	glyph	2793:12:117466:117470	1082950	65	True				
ANR	1083035	Statement	widths	2793:18:117472:117477	1082950	66	True				
ANR	1083036	Statement	rounds	2793:25:117479:117484	1082950	67	True				
ANR	1083037	Statement	to	2793:32:117486:117487	1082950	68	True				
ANR	1083038	Statement	zero	2793:35:117489:117492	1082950	69	True				
ANR	1083039	Statement	","	2793:39:117493:117493	1082950	70	True				
ANR	1083040	Statement	causing	2793:41:117495:117501	1082950	71	True				
ANR	1083041	Statement	overlapped	2793:49:117503:117512	1082950	72	True				
ANR	1083042	Statement	glyphs	2793:60:117514:117519	1082950	73	True				
ANR	1083043	Statement	.	2793:66:117520:117520	1082950	74	True				
ANR	1083044	Statement	(	2794:12:117534:117534	1082950	75	True				
ANR	1083045	Statement	Bug	2794:13:117535:117537	1082950	76	True				
ANR	1083046	Statement	687719	2794:17:117539:117544	1082950	77	True				
ANR	1083047	Statement	"""PDFWRITE corrupts letter spacing/placement"""	2794:24:117546:117589	1082950	78	True				
ANR	1083048	Statement	)	2794:68:117590:117590	1082950	79	True				
ANR	1083049	Statement	.	2794:69:117591:117591	1082950	80	True				
ANR	1083050	Statement	*	2795:7:117600:117600	1082950	81	True				
ANR	1083051	Statement	/	2795:8:117601:117601	1082950	82	True				
ANR	1083052	IfStatement	if ( self -> align_to_pixels )		1082950	83					
ANR	1083053	Condition	self -> align_to_pixels	2796:8:117611:117631	1082950	0	True				
ANR	1083054	PtrMemberAccess	self -> align_to_pixels		1082950	0					
ANR	1083055	Identifier	self		1082950	0					
ANR	1083056	Identifier	align_to_pixels		1082950	1					
ANR	1083057	ExpressionStatement	"t1_hinter__align_to_grid ( self , self -> g2o_fraction , & gx , & gy , self -> align_to_pixels )"	2797:8:117642:117725	1082950	1	True				
ANR	1083058	CallExpression	"t1_hinter__align_to_grid ( self , self -> g2o_fraction , & gx , & gy , self -> align_to_pixels )"		1082950	0					
ANR	1083059	Callee	t1_hinter__align_to_grid		1082950	0					
ANR	1083060	Identifier	t1_hinter__align_to_grid		1082950	0					
ANR	1083061	ArgumentList	self		1082950	1					
ANR	1083062	Argument	self		1082950	0					
ANR	1083063	Identifier	self		1082950	0					
ANR	1083064	Argument	self -> g2o_fraction		1082950	1					
ANR	1083065	PtrMemberAccess	self -> g2o_fraction		1082950	0					
ANR	1083066	Identifier	self		1082950	0					
ANR	1083067	Identifier	g2o_fraction		1082950	1					
ANR	1083068	Argument	& gx		1082950	2					
ANR	1083069	UnaryOperationExpression	& gx		1082950	0					
ANR	1083070	UnaryOperator	&		1082950	0					
ANR	1083071	Identifier	gx		1082950	1					
ANR	1083072	Argument	& gy		1082950	3					
ANR	1083073	UnaryOperationExpression	& gy		1082950	0					
ANR	1083074	UnaryOperator	&		1082950	0					
ANR	1083075	Identifier	gy		1082950	1					
ANR	1083076	Argument	self -> align_to_pixels		1082950	4					
ANR	1083077	PtrMemberAccess	self -> align_to_pixels		1082950	0					
ANR	1083078	Identifier	self		1082950	0					
ANR	1083079	Identifier	align_to_pixels		1082950	1					
ANR	1083080	ReturnStatement	"return t1_hinter__rmoveto ( self , gx - self -> cx , gy - self -> cy ) ;"	2799:4:117738:117799	1082950	84	True				
ANR	1083081	CallExpression	"t1_hinter__rmoveto ( self , gx - self -> cx , gy - self -> cy )"		1082950	0					
ANR	1083082	Callee	t1_hinter__rmoveto		1082950	0					
ANR	1083083	Identifier	t1_hinter__rmoveto		1082950	0					
ANR	1083084	ArgumentList	self		1082950	1					
ANR	1083085	Argument	self		1082950	0					
ANR	1083086	Identifier	self		1082950	0					
ANR	1083087	Argument	gx - self -> cx		1082950	1					
ANR	1083088	AdditiveExpression	gx - self -> cx		1082950	0		-			
ANR	1083089	Identifier	gx		1082950	0					
ANR	1083090	PtrMemberAccess	self -> cx		1082950	1					
ANR	1083091	Identifier	self		1082950	0					
ANR	1083092	Identifier	cx		1082950	1					
ANR	1083093	Argument	gy - self -> cy		1082950	2					
ANR	1083094	AdditiveExpression	gy - self -> cy		1082950	0		-			
ANR	1083095	Identifier	gy		1082950	0					
ANR	1083096	PtrMemberAccess	self -> cy		1082950	1					
ANR	1083097	Identifier	self		1082950	0					
ANR	1083098	Identifier	cy		1082950	1					
ANR	1083099	ReturnType	static int		1082950	1					
ANR	1083100	Identifier	t1_hinter__add_trailing_moveto		1082950	2					
ANR	1083101	ParameterList	t1_hinter * self		1082950	3					
ANR	1083102	Parameter	t1_hinter * self	2783:42:116925:116940	1082950	0	True				
ANR	1083103	ParameterType	t1_hinter *		1082950	0					
ANR	1083104	Identifier	self		1082950	1					
ANR	1083105	CFGEntryNode	ENTRY		1082950		True				
ANR	1083106	CFGExitNode	EXIT		1082950		True				
ANR	1083107	Symbol	self -> g2o_fraction		1082950						
ANR	1083108	Symbol	* self		1082950						
ANR	1083109	Symbol	self -> width_gy		1082950						
ANR	1083110	Symbol	self -> width_gx		1082950						
ANR	1083111	Symbol	t1_hinter__rmoveto		1082950						
ANR	1083112	Symbol	gx		1082950						
ANR	1083113	Symbol	gy		1082950						
ANR	1083114	Symbol	self		1082950						
ANR	1083115	Symbol	& gx		1082950						
ANR	1083116	Symbol	self -> cx		1082950						
ANR	1083117	Symbol	self -> cy		1082950						
ANR	1083118	Symbol	& gy		1082950						
ANR	1083119	Symbol	self -> align_to_pixels		1082950						
ANR	1083120	Function	t1_hinter__endglyph	2802:0:117804:119155							
ANR	1083121	FunctionDef	t1_hinter__endglyph (t1_hinter * self)		1083120	0					
ANR	1083122	CompoundStatement		2803:0:117846:119155	1083120	0					
ANR	1083123	IdentifierDeclStatement	int code = 0 ;	2803:3:117850:117862	1083120	0	True				
ANR	1083124	IdentifierDecl	code = 0		1083120	0					
ANR	1083125	IdentifierDeclType	int		1083120	0					
ANR	1083126	Identifier	code		1083120	1					
ANR	1083127	AssignmentExpression	code = 0		1083120	2		=			
ANR	1083128	Identifier	code		1083120	0					
ANR	1083129	PrimaryExpression	0		1083120	1					
ANR	1083130	ExpressionStatement	code = t1_hinter__add_trailing_moveto ( self )	2805:4:117869:117912	1083120	1	True				
ANR	1083131	AssignmentExpression	code = t1_hinter__add_trailing_moveto ( self )		1083120	0		=			
ANR	1083132	Identifier	code		1083120	0					
ANR	1083133	CallExpression	t1_hinter__add_trailing_moveto ( self )		1083120	1					
ANR	1083134	Callee	t1_hinter__add_trailing_moveto		1083120	0					
ANR	1083135	Identifier	t1_hinter__add_trailing_moveto		1083120	0					
ANR	1083136	ArgumentList	self		1083120	1					
ANR	1083137	Argument	self		1083120	0					
ANR	1083138	Identifier	self		1083120	0					
ANR	1083139	IfStatement	if ( code < 0 )		1083120	2					
ANR	1083140	Condition	code < 0	2806:8:117922:117929	1083120	0	True				
ANR	1083141	RelationalExpression	code < 0		1083120	0		<			
ANR	1083142	Identifier	code		1083120	0					
ANR	1083143	PrimaryExpression	0		1083120	1					
ANR	1083144	GotoStatement	goto exit ;	2807:8:117940:117949	1083120	1	True				
ANR	1083145	Identifier	exit		1083120	0					
ANR	1083146	ExpressionStatement	code = t1_hinter__end_subglyph ( self )	2808:4:117955:117991	1083120	3	True				
ANR	1083147	AssignmentExpression	code = t1_hinter__end_subglyph ( self )		1083120	0		=			
ANR	1083148	Identifier	code		1083120	0					
ANR	1083149	CallExpression	t1_hinter__end_subglyph ( self )		1083120	1					
ANR	1083150	Callee	t1_hinter__end_subglyph		1083120	0					
ANR	1083151	Identifier	t1_hinter__end_subglyph		1083120	0					
ANR	1083152	ArgumentList	self		1083120	1					
ANR	1083153	Argument	self		1083120	0					
ANR	1083154	Identifier	self		1083120	0					
ANR	1083155	IfStatement	if ( code < 0 )		1083120	4					
ANR	1083156	Condition	code < 0	2809:8:118001:118008	1083120	0	True				
ANR	1083157	RelationalExpression	code < 0		1083120	0		<			
ANR	1083158	Identifier	code		1083120	0					
ANR	1083159	PrimaryExpression	0		1083120	1					
ANR	1083160	GotoStatement	goto exit ;	2810:8:118019:118028	1083120	1	True				
ANR	1083161	Identifier	exit		1083120	0					
ANR	1083162	ExpressionStatement	"t1_hinter__adjust_matrix_precision ( self , self -> orig_gx , self -> orig_gy )"	2811:4:118034:118104	1083120	5	True				
ANR	1083163	CallExpression	"t1_hinter__adjust_matrix_precision ( self , self -> orig_gx , self -> orig_gy )"		1083120	0					
ANR	1083164	Callee	t1_hinter__adjust_matrix_precision		1083120	0					
ANR	1083165	Identifier	t1_hinter__adjust_matrix_precision		1083120	0					
ANR	1083166	ArgumentList	self		1083120	1					
ANR	1083167	Argument	self		1083120	0					
ANR	1083168	Identifier	self		1083120	0					
ANR	1083169	Argument	self -> orig_gx		1083120	1					
ANR	1083170	PtrMemberAccess	self -> orig_gx		1083120	0					
ANR	1083171	Identifier	self		1083120	0					
ANR	1083172	Identifier	orig_gx		1083120	1					
ANR	1083173	Argument	self -> orig_gy		1083120	2					
ANR	1083174	PtrMemberAccess	self -> orig_gy		1083120	0					
ANR	1083175	Identifier	self		1083120	0					
ANR	1083176	Identifier	orig_gy		1083120	1					
ANR	1083177	ExpressionStatement	t1_hinter__compute_y_span ( self )	2812:4:118110:118141	1083120	6	True				
ANR	1083178	CallExpression	t1_hinter__compute_y_span ( self )		1083120	0					
ANR	1083179	Callee	t1_hinter__compute_y_span		1083120	0					
ANR	1083180	Identifier	t1_hinter__compute_y_span		1083120	0					
ANR	1083181	ArgumentList	self		1083120	1					
ANR	1083182	Argument	self		1083120	0					
ANR	1083183	Identifier	self		1083120	0					
ANR	1083184	ExpressionStatement	t1_hinter__simplify_representation ( self )	2813:4:118147:118187	1083120	7	True				
ANR	1083185	CallExpression	t1_hinter__simplify_representation ( self )		1083120	0					
ANR	1083186	Callee	t1_hinter__simplify_representation		1083120	0					
ANR	1083187	Identifier	t1_hinter__simplify_representation		1083120	0					
ANR	1083188	ArgumentList	self		1083120	1					
ANR	1083189	Argument	self		1083120	0					
ANR	1083190	Identifier	self		1083120	0					
ANR	1083191	IfStatement	if ( ! self -> disable_hinting && ( self -> grid_fit_x || self -> grid_fit_y ) )		1083120	8					
ANR	1083192	Condition	! self -> disable_hinting && ( self -> grid_fit_x || self -> grid_fit_y )	2814:8:118197:118260	1083120	0	True				
ANR	1083193	AndExpression	! self -> disable_hinting && ( self -> grid_fit_x || self -> grid_fit_y )		1083120	0		&&			
ANR	1083194	UnaryOperationExpression	! self -> disable_hinting		1083120	0					
ANR	1083195	UnaryOperator	!		1083120	0					
ANR	1083196	PtrMemberAccess	self -> disable_hinting		1083120	1					
ANR	1083197	Identifier	self		1083120	0					
ANR	1083198	Identifier	disable_hinting		1083120	1					
ANR	1083199	OrExpression	self -> grid_fit_x || self -> grid_fit_y		1083120	1		||			
ANR	1083200	PtrMemberAccess	self -> grid_fit_x		1083120	0					
ANR	1083201	Identifier	self		1083120	0					
ANR	1083202	Identifier	grid_fit_x		1083120	1					
ANR	1083203	PtrMemberAccess	self -> grid_fit_y		1083120	1					
ANR	1083204	Identifier	self		1083120	0					
ANR	1083205	Identifier	grid_fit_y		1083120	1					
ANR	1083206	CompoundStatement		12:74:416:416	1083120	1					
ANR	1083207	IfStatement	if ( self -> FontType == 1 )		1083120	0					
ANR	1083208	Condition	self -> FontType == 1	2815:12:118277:118295	1083120	0	True				
ANR	1083209	EqualityExpression	self -> FontType == 1		1083120	0		==			
ANR	1083210	PtrMemberAccess	self -> FontType		1083120	0					
ANR	1083211	Identifier	self		1083120	0					
ANR	1083212	Identifier	FontType		1083120	1					
ANR	1083213	PrimaryExpression	1		1083120	1					
ANR	1083214	ExpressionStatement	t1_hinter__compute_type1_stem_ranges ( self )	2816:12:118310:118352	1083120	1	True				
ANR	1083215	CallExpression	t1_hinter__compute_type1_stem_ranges ( self )		1083120	0					
ANR	1083216	Callee	t1_hinter__compute_type1_stem_ranges		1083120	0					
ANR	1083217	Identifier	t1_hinter__compute_type1_stem_ranges		1083120	0					
ANR	1083218	ArgumentList	self		1083120	1					
ANR	1083219	Argument	self		1083120	0					
ANR	1083220	Identifier	self		1083120	0					
ANR	1083221	ElseStatement	else		1083120	0					
ANR	1083222	ExpressionStatement	t1_hinter__compute_type2_stem_ranges ( self )	2818:12:118379:118421	1083120	0	True				
ANR	1083223	CallExpression	t1_hinter__compute_type2_stem_ranges ( self )		1083120	0					
ANR	1083224	Callee	t1_hinter__compute_type2_stem_ranges		1083120	0					
ANR	1083225	Identifier	t1_hinter__compute_type2_stem_ranges		1083120	0					
ANR	1083226	ArgumentList	self		1083120	1					
ANR	1083227	Argument	self		1083120	0					
ANR	1083228	Identifier	self		1083120	0					
ANR	1083229	ExpressionStatement	t1_hinter__mark_existing_stems ( self )	2819:8:118431:118467	1083120	1	True				
ANR	1083230	CallExpression	t1_hinter__mark_existing_stems ( self )		1083120	0					
ANR	1083231	Callee	t1_hinter__mark_existing_stems		1083120	0					
ANR	1083232	Identifier	t1_hinter__mark_existing_stems		1083120	0					
ANR	1083233	ArgumentList	self		1083120	1					
ANR	1083234	Argument	self		1083120	0					
ANR	1083235	Identifier	self		1083120	0					
ANR	1083236	ExpressionStatement	t1_hinter_compute_stem_snap_range ( self )	2820:8:118477:118516	1083120	2	True				
ANR	1083237	CallExpression	t1_hinter_compute_stem_snap_range ( self )		1083120	0					
ANR	1083238	Callee	t1_hinter_compute_stem_snap_range		1083120	0					
ANR	1083239	Identifier	t1_hinter_compute_stem_snap_range		1083120	0					
ANR	1083240	ArgumentList	self		1083120	1					
ANR	1083241	Argument	self		1083120	0					
ANR	1083242	Identifier	self		1083120	0					
ANR	1083243	ExpressionStatement	t1_hinter__align_stem_commands ( self )	2821:8:118526:118562	1083120	3	True				
ANR	1083244	CallExpression	t1_hinter__align_stem_commands ( self )		1083120	0					
ANR	1083245	Callee	t1_hinter__align_stem_commands		1083120	0					
ANR	1083246	Identifier	t1_hinter__align_stem_commands		1083120	0					
ANR	1083247	ArgumentList	self		1083120	1					
ANR	1083248	Argument	self		1083120	0					
ANR	1083249	Identifier	self		1083120	0					
ANR	1083250	ExpressionStatement	t1_hinter__unfix_opposite_to_common ( self )	2822:8:118572:118613	1083120	4	True				
ANR	1083251	CallExpression	t1_hinter__unfix_opposite_to_common ( self )		1083120	0					
ANR	1083252	Callee	t1_hinter__unfix_opposite_to_common		1083120	0					
ANR	1083253	Identifier	t1_hinter__unfix_opposite_to_common		1083120	0					
ANR	1083254	ArgumentList	self		1083120	1					
ANR	1083255	Argument	self		1083120	0					
ANR	1083256	Identifier	self		1083120	0					
ANR	1083257	ExpressionStatement	t1_hinter__compute_opposite_stem_coords ( self )	2823:8:118623:118668	1083120	5	True				
ANR	1083258	CallExpression	t1_hinter__compute_opposite_stem_coords ( self )		1083120	0					
ANR	1083259	Callee	t1_hinter__compute_opposite_stem_coords		1083120	0					
ANR	1083260	Identifier	t1_hinter__compute_opposite_stem_coords		1083120	0					
ANR	1083261	ArgumentList	self		1083120	1					
ANR	1083262	Argument	self		1083120	0					
ANR	1083263	Identifier	self		1083120	0					
ANR	1083264	ExpressionStatement	code = t1_hinter__align_stem_poles ( self )	2825:8:118739:118779	1083120	6	True				
ANR	1083265	AssignmentExpression	code = t1_hinter__align_stem_poles ( self )		1083120	0		=			
ANR	1083266	Identifier	code		1083120	0					
ANR	1083267	CallExpression	t1_hinter__align_stem_poles ( self )		1083120	1					
ANR	1083268	Callee	t1_hinter__align_stem_poles		1083120	0					
ANR	1083269	Identifier	t1_hinter__align_stem_poles		1083120	0					
ANR	1083270	ArgumentList	self		1083120	1					
ANR	1083271	Argument	self		1083120	0					
ANR	1083272	Identifier	self		1083120	0					
ANR	1083273	IfStatement	if ( code < 0 )		1083120	7					
ANR	1083274	Condition	code < 0	2826:12:118793:118800	1083120	0	True				
ANR	1083275	RelationalExpression	code < 0		1083120	0		<			
ANR	1083276	Identifier	code		1083120	0					
ANR	1083277	PrimaryExpression	0		1083120	1					
ANR	1083278	GotoStatement	goto exit ;	2827:12:118815:118824	1083120	1	True				
ANR	1083279	Identifier	exit		1083120	0					
ANR	1083280	ExpressionStatement	t1_hinter__process_dotsections ( self )	2828:8:118834:118870	1083120	8	True				
ANR	1083281	CallExpression	t1_hinter__process_dotsections ( self )		1083120	0					
ANR	1083282	Callee	t1_hinter__process_dotsections		1083120	0					
ANR	1083283	Identifier	t1_hinter__process_dotsections		1083120	0					
ANR	1083284	ArgumentList	self		1083120	1					
ANR	1083285	Argument	self		1083120	0					
ANR	1083286	Identifier	self		1083120	0					
ANR	1083287	ExpressionStatement	t1_hinter__interpolate_other_poles ( self )	2829:8:118880:118920	1083120	9	True				
ANR	1083288	CallExpression	t1_hinter__interpolate_other_poles ( self )		1083120	0					
ANR	1083289	Callee	t1_hinter__interpolate_other_poles		1083120	0					
ANR	1083290	Identifier	t1_hinter__interpolate_other_poles		1083120	0					
ANR	1083291	ArgumentList	self		1083120	1					
ANR	1083292	Argument	self		1083120	0					
ANR	1083293	Identifier	self		1083120	0					
ANR	1083294	IfStatement	if ( self -> pole_count )		1083120	9					
ANR	1083295	Condition	self -> pole_count	2831:8:118936:118951	1083120	0	True				
ANR	1083296	PtrMemberAccess	self -> pole_count		1083120	0					
ANR	1083297	Identifier	self		1083120	0					
ANR	1083298	Identifier	pole_count		1083120	1					
ANR	1083299	CompoundStatement		29:26:1107:1107	1083120	1					
ANR	1083300	IfStatement	if ( self -> fix_contour_sign )		1083120	0					
ANR	1083301	Condition	self -> fix_contour_sign	2832:12:118968:118989	1083120	0	True				
ANR	1083302	PtrMemberAccess	self -> fix_contour_sign		1083120	0					
ANR	1083303	Identifier	self		1083120	0					
ANR	1083304	Identifier	fix_contour_sign		1083120	1					
ANR	1083305	CompoundStatement		30:36:1145:1145	1083120	1					
ANR	1083306	ExpressionStatement	t1_hinter__fix_contour_signs ( self )	2833:12:119006:119040	1083120	0	True				
ANR	1083307	CallExpression	t1_hinter__fix_contour_signs ( self )		1083120	0					
ANR	1083308	Callee	t1_hinter__fix_contour_signs		1083120	0					
ANR	1083309	Identifier	t1_hinter__fix_contour_signs		1083120	0					
ANR	1083310	ArgumentList	self		1083120	1					
ANR	1083311	Argument	self		1083120	0					
ANR	1083312	Identifier	self		1083120	0					
ANR	1083313	ExpressionStatement	code = t1_hinter__export ( self )	2835:8:119060:119090	1083120	1	True				
ANR	1083314	AssignmentExpression	code = t1_hinter__export ( self )		1083120	0		=			
ANR	1083315	Identifier	code		1083120	0					
ANR	1083316	CallExpression	t1_hinter__export ( self )		1083120	1					
ANR	1083317	Callee	t1_hinter__export		1083120	0					
ANR	1083318	Identifier	t1_hinter__export		1083120	0					
ANR	1083319	ArgumentList	self		1083120	1					
ANR	1083320	Argument	self		1083120	0					
ANR	1083321	Identifier	self		1083120	0					
ANR	1083322	Label	exit :	2837:0:119098:119102	1083120	10	True				
ANR	1083323	Identifier	exit		1083120	0					
ANR	1083324	ExpressionStatement	t1_hinter__free_arrays ( self )	2838:4:119108:119136	1083120	11	True				
ANR	1083325	CallExpression	t1_hinter__free_arrays ( self )		1083120	0					
ANR	1083326	Callee	t1_hinter__free_arrays		1083120	0					
ANR	1083327	Identifier	t1_hinter__free_arrays		1083120	0					
ANR	1083328	ArgumentList	self		1083120	1					
ANR	1083329	Argument	self		1083120	0					
ANR	1083330	Identifier	self		1083120	0					
ANR	1083331	ReturnStatement	return code ;	2839:4:119142:119153	1083120	12	True				
ANR	1083332	Identifier	code		1083120	0					
ANR	1083333	ReturnType	int		1083120	1					
ANR	1083334	Identifier	t1_hinter__endglyph		1083120	2					
ANR	1083335	ParameterList	t1_hinter * self		1083120	3					
ANR	1083336	Parameter	t1_hinter * self	2802:24:117828:117843	1083120	0	True				
ANR	1083337	ParameterType	t1_hinter *		1083120	0					
ANR	1083338	Identifier	self		1083120	1					
ANR	1083339	CFGEntryNode	ENTRY		1083120		True				
ANR	1083340	CFGExitNode	EXIT		1083120		True				
ANR	1083341	Symbol	t1_hinter__align_stem_poles		1083120						
ANR	1083342	Symbol	code		1083120						
ANR	1083343	Symbol	self -> pole_count		1083120						
ANR	1083344	Symbol	* self		1083120						
ANR	1083345	Symbol	self -> FontType		1083120						
ANR	1083346	Symbol	self -> disable_hinting		1083120						
ANR	1083347	Symbol	self -> grid_fit_x		1083120						
ANR	1083348	Symbol	t1_hinter__add_trailing_moveto		1083120						
ANR	1083349	Symbol	t1_hinter__end_subglyph		1083120						
ANR	1083350	Symbol	self -> grid_fit_y		1083120						
ANR	1083351	Symbol	self -> fix_contour_sign		1083120						
ANR	1083352	Symbol	t1_hinter__export		1083120						
ANR	1083353	Symbol	self		1083120						
ANR	1083354	Symbol	self -> orig_gy		1083120						
ANR	1083355	Symbol	self -> orig_gx		1083120						
