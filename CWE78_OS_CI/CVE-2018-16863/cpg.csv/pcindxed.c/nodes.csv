command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8022586	File	data/converged/CVE-2018-16863_ghostpdl/pcindxed.c								
ANR	8022587	DeclStmt									
ANR	8022588	Decl							const float	const float	dflt_pen_width
ANR	8022589	DeclStmt									
ANR	8022590	Decl							const pcl_cid_hdr_t	const pcl_cid_hdr_t	dflt_cid_hdr
ANR	8022591	Function	get_pow_2	45:0:1514:1667							
ANR	8022592	FunctionDef	get_pow_2 (int num)		8022591	0					
ANR	8022593	CompoundStatement		47:0:1544:1667	8022591	0					
ANR	8022594	IdentifierDeclStatement	int i ;	48:4:1550:1555	8022591	0	True				
ANR	8022595	IdentifierDecl	i		8022591	0					
ANR	8022596	IdentifierDeclType	int		8022591	0					
ANR	8022597	Identifier	i		8022591	1					
ANR	8022598	IdentifierDeclStatement	unsigned power_2 = 1 ;	49:4:1561:1581	8022591	1	True				
ANR	8022599	IdentifierDecl	power_2 = 1		8022591	0					
ANR	8022600	IdentifierDeclType	unsigned		8022591	0					
ANR	8022601	Identifier	power_2		8022591	1					
ANR	8022602	AssignmentExpression	power_2 = 1		8022591	2		=			
ANR	8022603	Identifier	power_2		8022591	0					
ANR	8022604	PrimaryExpression	1		8022591	1					
ANR	8022605	ForStatement	for ( i = 0 ; ( unsigned ) num > power_2 ; ++ i )		8022591	2					
ANR	8022606	ForInit	i = 0 ;	51:9:1593:1598	8022591	0	True				
ANR	8022607	AssignmentExpression	i = 0		8022591	0		=			
ANR	8022608	Identifier	i		8022591	0					
ANR	8022609	PrimaryExpression	0		8022591	1					
ANR	8022610	Condition	( unsigned ) num > power_2	51:16:1600:1622	8022591	1	True				
ANR	8022611	RelationalExpression	( unsigned ) num > power_2		8022591	0		>			
ANR	8022612	CastExpression	( unsigned ) num		8022591	0					
ANR	8022613	CastTarget	unsigned		8022591	0					
ANR	8022614	Identifier	num		8022591	1					
ANR	8022615	Identifier	power_2		8022591	1					
ANR	8022616	UnaryExpression	++ i	51:41:1625:1627	8022591	2	True				
ANR	8022617	IncDec	++		8022591	0					
ANR	8022618	Identifier	i		8022591	1					
ANR	8022619	ExpressionStatement	power_2 <<= 1	52:8:1638:1651	8022591	3	True				
ANR	8022620	AssignmentExpression	power_2 <<= 1		8022591	0		<<=			
ANR	8022621	Identifier	power_2		8022591	0					
ANR	8022622	PrimaryExpression	1		8022591	1					
ANR	8022623	ReturnStatement	return i ;	53:4:1657:1665	8022591	3	True				
ANR	8022624	Identifier	i		8022591	0					
ANR	8022625	ReturnType	static int		8022591	1					
ANR	8022626	Identifier	get_pow_2		8022591	2					
ANR	8022627	ParameterList	int num		8022591	3					
ANR	8022628	Parameter	int num	46:10:1535:1541	8022591	0	True				
ANR	8022629	ParameterType	int		8022591	0					
ANR	8022630	Identifier	num		8022591	1					
ANR	8022631	CFGEntryNode	ENTRY		8022591		True				
ANR	8022632	CFGExitNode	EXIT		8022591		True				
ANR	8022633	Symbol	num		8022591						
ANR	8022634	Symbol	power_2		8022591						
ANR	8022635	Symbol	i		8022591						
ANR	8022636	Function	free_indexed_cspace	59:0:1722:2026							
ANR	8022637	FunctionDef	"free_indexed_cspace (gs_memory_t * pmem , void * pvindexed , client_name_t cname)"		8022636	0					
ANR	8022638	CompoundStatement		61:0:1812:2026	8022636	0					
ANR	8022639	IdentifierDeclStatement	pcl_cs_indexed_t * pindexed = ( pcl_cs_indexed_t * ) pvindexed ;	62:4:1818:1877	8022636	0	True				
ANR	8022640	IdentifierDecl	* pindexed = ( pcl_cs_indexed_t * ) pvindexed		8022636	0					
ANR	8022641	IdentifierDeclType	pcl_cs_indexed_t *		8022636	0					
ANR	8022642	Identifier	pindexed		8022636	1					
ANR	8022643	AssignmentExpression	* pindexed = ( pcl_cs_indexed_t * ) pvindexed		8022636	2		=			
ANR	8022644	Identifier	pindexed		8022636	0					
ANR	8022645	CastExpression	( pcl_cs_indexed_t * ) pvindexed		8022636	1					
ANR	8022646	CastTarget	pcl_cs_indexed_t *		8022636	0					
ANR	8022647	Identifier	pvindexed		8022636	1					
ANR	8022648	ExpressionStatement	pcl_cs_base_release ( pindexed -> pbase )	64:4:1884:1920	8022636	1	True				
ANR	8022649	CallExpression	pcl_cs_base_release ( pindexed -> pbase )		8022636	0					
ANR	8022650	Callee	pcl_cs_base_release		8022636	0					
ANR	8022651	Identifier	pcl_cs_base_release		8022636	0					
ANR	8022652	ArgumentList	pindexed -> pbase		8022636	1					
ANR	8022653	Argument	pindexed -> pbase		8022636	0					
ANR	8022654	PtrMemberAccess	pindexed -> pbase		8022636	0					
ANR	8022655	Identifier	pindexed		8022636	0					
ANR	8022656	Identifier	pbase		8022636	1					
ANR	8022657	ExpressionStatement	"rc_decrement ( pindexed -> pcspace , ""free_indexed_cspace"" )"	65:4:1926:1980	8022636	2	True				
ANR	8022658	CallExpression	"rc_decrement ( pindexed -> pcspace , ""free_indexed_cspace"" )"		8022636	0					
ANR	8022659	Callee	rc_decrement		8022636	0					
ANR	8022660	Identifier	rc_decrement		8022636	0					
ANR	8022661	ArgumentList	pindexed -> pcspace		8022636	1					
ANR	8022662	Argument	pindexed -> pcspace		8022636	0					
ANR	8022663	PtrMemberAccess	pindexed -> pcspace		8022636	0					
ANR	8022664	Identifier	pindexed		8022636	0					
ANR	8022665	Identifier	pcspace		8022636	1					
ANR	8022666	Argument	"""free_indexed_cspace"""		8022636	1					
ANR	8022667	PrimaryExpression	"""free_indexed_cspace"""		8022636	0					
ANR	8022668	ExpressionStatement	"gs_free_object ( pmem , pvindexed , cname )"	66:4:1986:2024	8022636	3	True				
ANR	8022669	CallExpression	"gs_free_object ( pmem , pvindexed , cname )"		8022636	0					
ANR	8022670	Callee	gs_free_object		8022636	0					
ANR	8022671	Identifier	gs_free_object		8022636	0					
ANR	8022672	ArgumentList	pmem		8022636	1					
ANR	8022673	Argument	pmem		8022636	0					
ANR	8022674	Identifier	pmem		8022636	0					
ANR	8022675	Argument	pvindexed		8022636	1					
ANR	8022676	Identifier	pvindexed		8022636	0					
ANR	8022677	Argument	cname		8022636	2					
ANR	8022678	Identifier	cname		8022636	0					
ANR	8022679	ReturnType	static void		8022636	1					
ANR	8022680	Identifier	free_indexed_cspace		8022636	2					
ANR	8022681	ParameterList	"gs_memory_t * pmem , void * pvindexed , client_name_t cname"		8022636	3					
ANR	8022682	Parameter	gs_memory_t * pmem	60:20:1754:1771	8022636	0	True				
ANR	8022683	ParameterType	gs_memory_t *		8022636	0					
ANR	8022684	Identifier	pmem		8022636	1					
ANR	8022685	Parameter	void * pvindexed	60:40:1774:1788	8022636	1	True				
ANR	8022686	ParameterType	void *		8022636	0					
ANR	8022687	Identifier	pvindexed		8022636	1					
ANR	8022688	Parameter	client_name_t cname	60:57:1791:1809	8022636	2	True				
ANR	8022689	ParameterType	client_name_t		8022636	0					
ANR	8022690	Identifier	cname		8022636	1					
ANR	8022691	CFGEntryNode	ENTRY		8022636		True				
ANR	8022692	CFGExitNode	EXIT		8022636		True				
ANR	8022693	Symbol	pmem		8022636						
ANR	8022694	Symbol	pindexed -> pcspace		8022636						
ANR	8022695	Symbol	pvindexed		8022636						
ANR	8022696	Symbol	* pindexed		8022636						
ANR	8022697	Symbol	pindexed		8022636						
ANR	8022698	Symbol	cname		8022636						
ANR	8022699	Symbol	pindexed -> pbase		8022636						
ANR	8022700	Function	alloc_indexed_cspace	79:0:2385:4244							
ANR	8022701	FunctionDef	"alloc_indexed_cspace (pcl_cs_indexed_t * * ppindexed , pcl_cs_base_t * pbase , uint num_entries , gs_memory_t * pmem)"		8022700	0					
ANR	8022702	CompoundStatement		83:0:2551:4244	8022700	0					
ANR	8022703	IdentifierDeclStatement	pcl_cs_indexed_t * pindexed = 0 ;	84:4:2557:2587	8022700	0	True				
ANR	8022704	IdentifierDecl	* pindexed = 0		8022700	0					
ANR	8022705	IdentifierDeclType	pcl_cs_indexed_t *		8022700	0					
ANR	8022706	Identifier	pindexed		8022700	1					
ANR	8022707	AssignmentExpression	* pindexed = 0		8022700	2		=			
ANR	8022708	Identifier	pindexed		8022700	0					
ANR	8022709	PrimaryExpression	0		8022700	1					
ANR	8022710	IdentifierDeclStatement	int code = 0 ;	85:4:2593:2605	8022700	1	True				
ANR	8022711	IdentifierDecl	code = 0		8022700	0					
ANR	8022712	IdentifierDeclType	int		8022700	0					
ANR	8022713	Identifier	code		8022700	1					
ANR	8022714	AssignmentExpression	code = 0		8022700	2		=			
ANR	8022715	Identifier	code		8022700	0					
ANR	8022716	PrimaryExpression	0		8022700	1					
ANR	8022717	IdentifierDeclStatement	byte * bp = 0 ;	86:4:2611:2623	8022700	2	True				
ANR	8022718	IdentifierDecl	* bp = 0		8022700	0					
ANR	8022719	IdentifierDeclType	byte *		8022700	0					
ANR	8022720	Identifier	bp		8022700	1					
ANR	8022721	AssignmentExpression	* bp = 0		8022700	2		=			
ANR	8022722	Identifier	bp		8022700	0					
ANR	8022723	PrimaryExpression	0		8022700	1					
ANR	8022724	IdentifierDeclStatement	uint palette_size = 3 * num_entries ;	87:4:2629:2664	8022700	3	True				
ANR	8022725	IdentifierDecl	palette_size = 3 * num_entries		8022700	0					
ANR	8022726	IdentifierDeclType	uint		8022700	0					
ANR	8022727	Identifier	palette_size		8022700	1					
ANR	8022728	AssignmentExpression	palette_size = 3 * num_entries		8022700	2		=			
ANR	8022729	Identifier	palette_size		8022700	0					
ANR	8022730	MultiplicativeExpression	3 * num_entries		8022700	1		*			
ANR	8022731	PrimaryExpression	3		8022700	0					
ANR	8022732	Identifier	num_entries		8022700	1					
ANR	8022733	IdentifierDeclStatement	int i ;	88:4:2670:2675	8022700	4	True				
ANR	8022734	IdentifierDecl	i		8022700	0					
ANR	8022735	IdentifierDeclType	int		8022700	0					
ANR	8022736	Identifier	i		8022700	1					
ANR	8022737	ExpressionStatement	"if_debug1m ( 'c' , pmem , ""[c]alloc_indexed_cspace entries:%d\\n"" , num_entries )"	90:4:2682:2771	8022700	5	True				
ANR	8022738	CallExpression	"if_debug1m ( 'c' , pmem , ""[c]alloc_indexed_cspace entries:%d\\n"" , num_entries )"		8022700	0					
ANR	8022739	Callee	if_debug1m		8022700	0					
ANR	8022740	Identifier	if_debug1m		8022700	0					
ANR	8022741	ArgumentList	'c'		8022700	1					
ANR	8022742	Argument	'c'		8022700	0					
ANR	8022743	PrimaryExpression	'c'		8022700	0					
ANR	8022744	Argument	pmem		8022700	1					
ANR	8022745	Identifier	pmem		8022700	0					
ANR	8022746	Argument	"""[c]alloc_indexed_cspace entries:%d\\n"""		8022700	2					
ANR	8022747	PrimaryExpression	"""[c]alloc_indexed_cspace entries:%d\\n"""		8022700	0					
ANR	8022748	Argument	num_entries		8022700	3					
ANR	8022749	Identifier	num_entries		8022700	0					
ANR	8022750	Statement	rc_alloc_struct_1	93:4:2778:2794	8022700	6	True				
ANR	8022751	Statement	(	93:21:2795:2795	8022700	7	True				
ANR	8022752	Statement	pindexed	93:22:2796:2803	8022700	8	True				
ANR	8022753	Statement	","	93:30:2804:2804	8022700	9	True				
ANR	8022754	Statement	pcl_cs_indexed_t	94:22:2828:2843	8022700	10	True				
ANR	8022755	Statement	","	94:38:2844:2844	8022700	11	True				
ANR	8022756	Statement	&	95:22:2868:2868	8022700	12	True				
ANR	8022757	Statement	st_cs_indexed_t	95:23:2869:2883	8022700	13	True				
ANR	8022758	Statement	","	95:38:2884:2884	8022700	14	True				
ANR	8022759	Statement	pmem	96:22:2908:2911	8022700	15	True				
ANR	8022760	Statement	","	96:26:2912:2912	8022700	16	True				
ANR	8022761	Statement	return	97:22:2936:2941	8022700	17	True				
ANR	8022762	Statement	e_Memory	97:29:2943:2950	8022700	18	True				
ANR	8022763	Statement	","	97:37:2951:2951	8022700	19	True				
ANR	8022764	Statement	"""allocate pcl indexed color space"""	97:39:2953:2986	8022700	20	True				
ANR	8022765	Statement	)	97:73:2987:2987	8022700	21	True				
ANR	8022766	ExpressionStatement		97:74:2988:2988	8022700	22	True				
ANR	8022767	ExpressionStatement	pindexed -> rc . free = free_indexed_cspace	99:4:2995:3034	8022700	23	True				
ANR	8022768	AssignmentExpression	pindexed -> rc . free = free_indexed_cspace		8022700	0		=			
ANR	8022769	MemberAccess	pindexed -> rc . free		8022700	0					
ANR	8022770	PtrMemberAccess	pindexed -> rc		8022700	0					
ANR	8022771	Identifier	pindexed		8022700	0					
ANR	8022772	Identifier	rc		8022700	1					
ANR	8022773	Identifier	free		8022700	1					
ANR	8022774	Identifier	free_indexed_cspace		8022700	1					
ANR	8022775	ExpressionStatement	pindexed -> pfixed = false	100:4:3040:3064	8022700	24	True				
ANR	8022776	AssignmentExpression	pindexed -> pfixed = false		8022700	0		=			
ANR	8022777	PtrMemberAccess	pindexed -> pfixed		8022700	0					
ANR	8022778	Identifier	pindexed		8022700	0					
ANR	8022779	Identifier	pfixed		8022700	1					
ANR	8022780	Identifier	false		8022700	1					
ANR	8022781	ExpressionStatement	pindexed -> is_GL = false	101:4:3070:3093	8022700	25	True				
ANR	8022782	AssignmentExpression	pindexed -> is_GL = false		8022700	0		=			
ANR	8022783	PtrMemberAccess	pindexed -> is_GL		8022700	0					
ANR	8022784	Identifier	pindexed		8022700	0					
ANR	8022785	Identifier	is_GL		8022700	1					
ANR	8022786	Identifier	false		8022700	1					
ANR	8022787	ExpressionStatement	"pcl_cs_base_init_from ( pindexed -> pbase , pbase )"	102:4:3099:3144	8022700	26	True				
ANR	8022788	CallExpression	"pcl_cs_base_init_from ( pindexed -> pbase , pbase )"		8022700	0					
ANR	8022789	Callee	pcl_cs_base_init_from		8022700	0					
ANR	8022790	Identifier	pcl_cs_base_init_from		8022700	0					
ANR	8022791	ArgumentList	pindexed -> pbase		8022700	1					
ANR	8022792	Argument	pindexed -> pbase		8022700	0					
ANR	8022793	PtrMemberAccess	pindexed -> pbase		8022700	0					
ANR	8022794	Identifier	pindexed		8022700	0					
ANR	8022795	Identifier	pbase		8022700	1					
ANR	8022796	Argument	pbase		8022700	1					
ANR	8022797	Identifier	pbase		8022700	0					
ANR	8022798	ExpressionStatement	pindexed -> pcspace = 0	103:4:3150:3171	8022700	27	True				
ANR	8022799	AssignmentExpression	pindexed -> pcspace = 0		8022700	0		=			
ANR	8022800	PtrMemberAccess	pindexed -> pcspace		8022700	0					
ANR	8022801	Identifier	pindexed		8022700	0					
ANR	8022802	Identifier	pcspace		8022700	1					
ANR	8022803	PrimaryExpression	0		8022700	1					
ANR	8022804	ExpressionStatement	pindexed -> num_entries = 0	104:4:3177:3202	8022700	28	True				
ANR	8022805	AssignmentExpression	pindexed -> num_entries = 0		8022700	0		=			
ANR	8022806	PtrMemberAccess	pindexed -> num_entries		8022700	0					
ANR	8022807	Identifier	pindexed		8022700	0					
ANR	8022808	Identifier	num_entries		8022700	1					
ANR	8022809	PrimaryExpression	0		8022700	1					
ANR	8022810	ExpressionStatement	pindexed -> palette . data = 0	105:4:3208:3234	8022700	29	True				
ANR	8022811	AssignmentExpression	pindexed -> palette . data = 0		8022700	0		=			
ANR	8022812	MemberAccess	pindexed -> palette . data		8022700	0					
ANR	8022813	PtrMemberAccess	pindexed -> palette		8022700	0					
ANR	8022814	Identifier	pindexed		8022700	0					
ANR	8022815	Identifier	palette		8022700	1					
ANR	8022816	Identifier	data		8022700	1					
ANR	8022817	PrimaryExpression	0		8022700	1					
ANR	8022818	ExpressionStatement	pindexed -> palette . size = 0	106:4:3240:3266	8022700	30	True				
ANR	8022819	AssignmentExpression	pindexed -> palette . size = 0		8022700	0		=			
ANR	8022820	MemberAccess	pindexed -> palette . size		8022700	0					
ANR	8022821	PtrMemberAccess	pindexed -> palette		8022700	0					
ANR	8022822	Identifier	pindexed		8022700	0					
ANR	8022823	Identifier	palette		8022700	1					
ANR	8022824	Identifier	size		8022700	1					
ANR	8022825	PrimaryExpression	0		8022700	1					
ANR	8022826	ExpressionStatement	"bp = gs_alloc_string ( pmem , palette_size , ""allocate pcl indexed color space"" )"	108:4:3273:3374	8022700	31	True				
ANR	8022827	AssignmentExpression	"bp = gs_alloc_string ( pmem , palette_size , ""allocate pcl indexed color space"" )"		8022700	0		=			
ANR	8022828	Identifier	bp		8022700	0					
ANR	8022829	CallExpression	"gs_alloc_string ( pmem , palette_size , ""allocate pcl indexed color space"" )"		8022700	1					
ANR	8022830	Callee	gs_alloc_string		8022700	0					
ANR	8022831	Identifier	gs_alloc_string		8022700	0					
ANR	8022832	ArgumentList	pmem		8022700	1					
ANR	8022833	Argument	pmem		8022700	0					
ANR	8022834	Identifier	pmem		8022700	0					
ANR	8022835	Argument	palette_size		8022700	1					
ANR	8022836	Identifier	palette_size		8022700	0					
ANR	8022837	Argument	"""allocate pcl indexed color space"""		8022700	2					
ANR	8022838	PrimaryExpression	"""allocate pcl indexed color space"""		8022700	0					
ANR	8022839	IfStatement	if ( bp == 0 )		8022700	32					
ANR	8022840	Condition	bp == 0	110:8:3384:3390	8022700	0	True				
ANR	8022841	EqualityExpression	bp == 0		8022700	0		==			
ANR	8022842	Identifier	bp		8022700	0					
ANR	8022843	PrimaryExpression	0		8022700	1					
ANR	8022844	CompoundStatement		28:17:841:841	8022700	1					
ANR	8022845	ExpressionStatement	"free_indexed_cspace ( pmem , pindexed , ""allocate pcl indexed color space"" )"	111:8:3403:3502	8022700	0	True				
ANR	8022846	CallExpression	"free_indexed_cspace ( pmem , pindexed , ""allocate pcl indexed color space"" )"		8022700	0					
ANR	8022847	Callee	free_indexed_cspace		8022700	0					
ANR	8022848	Identifier	free_indexed_cspace		8022700	0					
ANR	8022849	ArgumentList	pmem		8022700	1					
ANR	8022850	Argument	pmem		8022700	0					
ANR	8022851	Identifier	pmem		8022700	0					
ANR	8022852	Argument	pindexed		8022700	1					
ANR	8022853	Identifier	pindexed		8022700	0					
ANR	8022854	Argument	"""allocate pcl indexed color space"""		8022700	2					
ANR	8022855	PrimaryExpression	"""allocate pcl indexed color space"""		8022700	0					
ANR	8022856	ReturnStatement	return e_Memory ;	113:8:3512:3527	8022700	1	True				
ANR	8022857	Identifier	e_Memory		8022700	0					
ANR	8022858	ExpressionStatement	pindexed -> palette . data = bp	115:4:3539:3566	8022700	33	True				
ANR	8022859	AssignmentExpression	pindexed -> palette . data = bp		8022700	0		=			
ANR	8022860	MemberAccess	pindexed -> palette . data		8022700	0					
ANR	8022861	PtrMemberAccess	pindexed -> palette		8022700	0					
ANR	8022862	Identifier	pindexed		8022700	0					
ANR	8022863	Identifier	palette		8022700	1					
ANR	8022864	Identifier	data		8022700	1					
ANR	8022865	Identifier	bp		8022700	1					
ANR	8022866	ExpressionStatement	pindexed -> palette . size = palette_size	116:4:3572:3609	8022700	34	True				
ANR	8022867	AssignmentExpression	pindexed -> palette . size = palette_size		8022700	0		=			
ANR	8022868	MemberAccess	pindexed -> palette . size		8022700	0					
ANR	8022869	PtrMemberAccess	pindexed -> palette		8022700	0					
ANR	8022870	Identifier	pindexed		8022700	0					
ANR	8022871	Identifier	palette		8022700	1					
ANR	8022872	Identifier	size		8022700	1					
ANR	8022873	Identifier	palette_size		8022700	1					
ANR	8022874	ForStatement	for ( i = 0 ; i < num_entries ; i ++ )		8022700	35					
ANR	8022875	ForInit	i = 0 ;	117:9:3620:3625	8022700	0	True				
ANR	8022876	AssignmentExpression	i = 0		8022700	0		=			
ANR	8022877	Identifier	i		8022700	0					
ANR	8022878	PrimaryExpression	0		8022700	1					
ANR	8022879	Condition	i < num_entries	117:16:3627:3641	8022700	1	True				
ANR	8022880	RelationalExpression	i < num_entries		8022700	0		<			
ANR	8022881	Identifier	i		8022700	0					
ANR	8022882	Identifier	num_entries		8022700	1					
ANR	8022883	PostIncDecOperationExpression	i ++	117:33:3644:3646	8022700	2	True				
ANR	8022884	Identifier	i		8022700	0					
ANR	8022885	IncDec	++		8022700	1					
ANR	8022886	ExpressionStatement	pindexed -> pen_widths [ i ] = dflt_pen_width	118:8:3657:3697	8022700	3	True				
ANR	8022887	AssignmentExpression	pindexed -> pen_widths [ i ] = dflt_pen_width		8022700	0		=			
ANR	8022888	ArrayIndexing	pindexed -> pen_widths [ i ]		8022700	0					
ANR	8022889	PtrMemberAccess	pindexed -> pen_widths		8022700	0					
ANR	8022890	Identifier	pindexed		8022700	0					
ANR	8022891	Identifier	pen_widths		8022700	1					
ANR	8022892	Identifier	i		8022700	1					
ANR	8022893	Identifier	dflt_pen_width		8022700	1					
ANR	8022894	ExpressionStatement	"code = gs_cspace_build_Indexed ( & ( pindexed -> pcspace ) , pbase -> pcspace , num_entries , ( gs_const_string * ) & ( pindexed -> palette ) , pmem )"	120:4:3704:3974	8022700	36	True				
ANR	8022895	AssignmentExpression	"code = gs_cspace_build_Indexed ( & ( pindexed -> pcspace ) , pbase -> pcspace , num_entries , ( gs_const_string * ) & ( pindexed -> palette ) , pmem )"		8022700	0		=			
ANR	8022896	Identifier	code		8022700	0					
ANR	8022897	CallExpression	"gs_cspace_build_Indexed ( & ( pindexed -> pcspace ) , pbase -> pcspace , num_entries , ( gs_const_string * ) & ( pindexed -> palette ) , pmem )"		8022700	1					
ANR	8022898	Callee	gs_cspace_build_Indexed		8022700	0					
ANR	8022899	Identifier	gs_cspace_build_Indexed		8022700	0					
ANR	8022900	ArgumentList	& ( pindexed -> pcspace )		8022700	1					
ANR	8022901	Argument	& ( pindexed -> pcspace )		8022700	0					
ANR	8022902	UnaryOperationExpression	& ( pindexed -> pcspace )		8022700	0					
ANR	8022903	UnaryOperator	&		8022700	0					
ANR	8022904	PtrMemberAccess	pindexed -> pcspace		8022700	1					
ANR	8022905	Identifier	pindexed		8022700	0					
ANR	8022906	Identifier	pcspace		8022700	1					
ANR	8022907	Argument	pbase -> pcspace		8022700	1					
ANR	8022908	PtrMemberAccess	pbase -> pcspace		8022700	0					
ANR	8022909	Identifier	pbase		8022700	0					
ANR	8022910	Identifier	pcspace		8022700	1					
ANR	8022911	Argument	num_entries		8022700	2					
ANR	8022912	Identifier	num_entries		8022700	0					
ANR	8022913	Argument	( gs_const_string * ) & ( pindexed -> palette )		8022700	3					
ANR	8022914	CastExpression	( gs_const_string * ) & ( pindexed -> palette )		8022700	0					
ANR	8022915	CastTarget	gs_const_string *		8022700	0					
ANR	8022916	UnaryOperationExpression	& ( pindexed -> palette )		8022700	1					
ANR	8022917	UnaryOperator	&		8022700	0					
ANR	8022918	PtrMemberAccess	pindexed -> palette		8022700	1					
ANR	8022919	Identifier	pindexed		8022700	0					
ANR	8022920	Identifier	palette		8022700	1					
ANR	8022921	Argument	pmem		8022700	4					
ANR	8022922	Identifier	pmem		8022700	0					
ANR	8022923	IfStatement	if ( code < 0 )		8022700	37					
ANR	8022924	Condition	code < 0	125:8:3984:3991	8022700	0	True				
ANR	8022925	RelationalExpression	code < 0		8022700	0		<			
ANR	8022926	Identifier	code		8022700	0					
ANR	8022927	PrimaryExpression	0		8022700	1					
ANR	8022928	CompoundStatement		43:18:1442:1442	8022700	1					
ANR	8022929	ExpressionStatement	"free_indexed_cspace ( pmem , pindexed , ""allocate pcl indexed color space"" )"	126:8:4004:4103	8022700	0	True				
ANR	8022930	CallExpression	"free_indexed_cspace ( pmem , pindexed , ""allocate pcl indexed color space"" )"		8022700	0					
ANR	8022931	Callee	free_indexed_cspace		8022700	0					
ANR	8022932	Identifier	free_indexed_cspace		8022700	0					
ANR	8022933	ArgumentList	pmem		8022700	1					
ANR	8022934	Argument	pmem		8022700	0					
ANR	8022935	Identifier	pmem		8022700	0					
ANR	8022936	Argument	pindexed		8022700	1					
ANR	8022937	Identifier	pindexed		8022700	0					
ANR	8022938	Argument	"""allocate pcl indexed color space"""		8022700	2					
ANR	8022939	PrimaryExpression	"""allocate pcl indexed color space"""		8022700	0					
ANR	8022940	ExpressionStatement	"gs_free_object ( pmem , bp , ""allocate pcl indexed color space"" )"	128:8:4113:4173	8022700	1	True				
ANR	8022941	CallExpression	"gs_free_object ( pmem , bp , ""allocate pcl indexed color space"" )"		8022700	0					
ANR	8022942	Callee	gs_free_object		8022700	0					
ANR	8022943	Identifier	gs_free_object		8022700	0					
ANR	8022944	ArgumentList	pmem		8022700	1					
ANR	8022945	Argument	pmem		8022700	0					
ANR	8022946	Identifier	pmem		8022700	0					
ANR	8022947	Argument	bp		8022700	1					
ANR	8022948	Identifier	bp		8022700	0					
ANR	8022949	Argument	"""allocate pcl indexed color space"""		8022700	2					
ANR	8022950	PrimaryExpression	"""allocate pcl indexed color space"""		8022700	0					
ANR	8022951	ReturnStatement	return code ;	129:8:4183:4194	8022700	2	True				
ANR	8022952	Identifier	code		8022700	0					
ANR	8022953	ExpressionStatement	* ppindexed = pindexed	132:4:4207:4228	8022700	38	True				
ANR	8022954	AssignmentExpression	* ppindexed = pindexed		8022700	0		=			
ANR	8022955	UnaryOperationExpression	* ppindexed		8022700	0					
ANR	8022956	UnaryOperator	*		8022700	0					
ANR	8022957	Identifier	ppindexed		8022700	1					
ANR	8022958	Identifier	pindexed		8022700	1					
ANR	8022959	ReturnStatement	return 0 ;	133:4:4234:4242	8022700	39	True				
ANR	8022960	PrimaryExpression	0		8022700	0					
ANR	8022961	ReturnType	static int		8022700	1					
ANR	8022962	Identifier	alloc_indexed_cspace		8022700	2					
ANR	8022963	ParameterList	"pcl_cs_indexed_t * * ppindexed , pcl_cs_base_t * pbase , uint num_entries , gs_memory_t * pmem"		8022700	3					
ANR	8022964	Parameter	pcl_cs_indexed_t * * ppindexed	80:21:2417:2445	8022700	0	True				
ANR	8022965	ParameterType	pcl_cs_indexed_t * *		8022700	0					
ANR	8022966	Identifier	ppindexed		8022700	1					
ANR	8022967	Parameter	pcl_cs_base_t * pbase	81:21:2469:2489	8022700	1	True				
ANR	8022968	ParameterType	pcl_cs_base_t *		8022700	0					
ANR	8022969	Identifier	pbase		8022700	1					
ANR	8022970	Parameter	uint num_entries	82:21:2513:2528	8022700	2	True				
ANR	8022971	ParameterType	uint		8022700	0					
ANR	8022972	Identifier	num_entries		8022700	1					
ANR	8022973	Parameter	gs_memory_t * pmem	82:39:2531:2548	8022700	3	True				
ANR	8022974	ParameterType	gs_memory_t *		8022700	0					
ANR	8022975	Identifier	pmem		8022700	1					
ANR	8022976	CFGEntryNode	ENTRY		8022700		True				
ANR	8022977	CFGExitNode	EXIT		8022700		True				
ANR	8022978	Symbol	* * pindexed		8022700						
ANR	8022979	Symbol	* ppindexed		8022700						
ANR	8022980	Symbol	free_indexed_cspace		8022700						
ANR	8022981	Symbol	code		8022700						
ANR	8022982	Symbol	pindexed -> is_GL		8022700						
ANR	8022983	Symbol	pindexed -> palette		8022700						
ANR	8022984	Symbol	palette_size		8022700						
ANR	8022985	Symbol	* pindexed		8022700						
ANR	8022986	Symbol	& pindexed -> pcspace		8022700						
ANR	8022987	Symbol	pindexed -> palette . data		8022700						
ANR	8022988	Symbol	* pindexed -> pen_widths		8022700						
ANR	8022989	Symbol	bp		8022700						
ANR	8022990	Symbol	pmem		8022700						
ANR	8022991	Symbol	dflt_pen_width		8022700						
ANR	8022992	Symbol	e_Memory		8022700						
ANR	8022993	Symbol	pindexed		8022700						
ANR	8022994	Symbol	pindexed -> rc		8022700						
ANR	8022995	Symbol	pindexed -> pbase		8022700						
ANR	8022996	Symbol	pbase		8022700						
ANR	8022997	Symbol	pindexed -> pfixed		8022700						
ANR	8022998	Symbol	gs_alloc_string		8022700						
ANR	8022999	Symbol	pindexed -> pcspace		8022700						
ANR	8023000	Symbol	false		8022700						
ANR	8023001	Symbol	i		8022700						
ANR	8023002	Symbol	gs_cspace_build_Indexed		8022700						
ANR	8023003	Symbol	& pindexed -> palette		8022700						
ANR	8023004	Symbol	* pbase		8022700						
ANR	8023005	Symbol	* i		8022700						
ANR	8023006	Symbol	pbase -> pcspace		8022700						
ANR	8023007	Symbol	pindexed -> rc . free		8022700						
ANR	8023008	Symbol	pindexed -> palette . size		8022700						
ANR	8023009	Symbol	ppindexed		8022700						
ANR	8023010	Symbol	pindexed -> num_entries		8022700						
ANR	8023011	Symbol	num_entries		8022700						
ANR	8023012	Symbol	pindexed -> pen_widths		8022700						
ANR	8023013	Function	resize_indexed_cspace	137:0:4298:5503							
ANR	8023014	FunctionDef	"resize_indexed_cspace (pcl_cs_indexed_t * pindexed , uint num_entries)"		8023013	0					
ANR	8023015	CompoundStatement		139:0:4378:5503	8023013	0					
ANR	8023016	IdentifierDeclStatement	byte * pdata ;	140:4:4384:4395	8023013	0	True				
ANR	8023017	IdentifierDecl	* pdata		8023013	0					
ANR	8023018	IdentifierDeclType	byte *		8023013	0					
ANR	8023019	Identifier	pdata		8023013	1					
ANR	8023020	IdentifierDeclStatement	gs_memory_t * pmem = pindexed -> rc . memory ;	141:4:4401:4440	8023013	1	True				
ANR	8023021	IdentifierDecl	* pmem = pindexed -> rc . memory		8023013	0					
ANR	8023022	IdentifierDeclType	gs_memory_t *		8023013	0					
ANR	8023023	Identifier	pmem		8023013	1					
ANR	8023024	AssignmentExpression	* pmem = pindexed -> rc . memory		8023013	2		=			
ANR	8023025	Identifier	pmem		8023013	0					
ANR	8023026	MemberAccess	pindexed -> rc . memory		8023013	1					
ANR	8023027	PtrMemberAccess	pindexed -> rc		8023013	0					
ANR	8023028	Identifier	pindexed		8023013	0					
ANR	8023029	Identifier	rc		8023013	1					
ANR	8023030	Identifier	memory		8023013	1					
ANR	8023031	IdentifierDeclStatement	uint new_size = num_entries * 3 ;	142:4:4446:4477	8023013	2	True				
ANR	8023032	IdentifierDecl	new_size = num_entries * 3		8023013	0					
ANR	8023033	IdentifierDeclType	uint		8023013	0					
ANR	8023034	Identifier	new_size		8023013	1					
ANR	8023035	AssignmentExpression	new_size = num_entries * 3		8023013	2		=			
ANR	8023036	Identifier	new_size		8023013	0					
ANR	8023037	MultiplicativeExpression	num_entries * 3		8023013	1		*			
ANR	8023038	Identifier	num_entries		8023013	0					
ANR	8023039	PrimaryExpression	3		8023013	1					
ANR	8023040	IdentifierDeclStatement	int i ;	143:4:4483:4488	8023013	3	True				
ANR	8023041	IdentifierDecl	i		8023013	0					
ANR	8023042	IdentifierDeclType	int		8023013	0					
ANR	8023043	Identifier	i		8023013	1					
ANR	8023044	IdentifierDeclStatement	uint num_old_entries ;	144:4:4494:4514	8023013	4	True				
ANR	8023045	IdentifierDecl	num_old_entries		8023013	0					
ANR	8023046	IdentifierDeclType	uint		8023013	0					
ANR	8023047	Identifier	num_old_entries		8023013	1					
ANR	8023048	ExpressionStatement	"if_debug2m ( 'c' , pmem , ""[c]resizing_indexed_cspace new:%d old:%d\\n"" , num_entries , pindexed -> num_entries )"	146:4:4521:4639	8023013	5	True				
ANR	8023049	CallExpression	"if_debug2m ( 'c' , pmem , ""[c]resizing_indexed_cspace new:%d old:%d\\n"" , num_entries , pindexed -> num_entries )"		8023013	0					
ANR	8023050	Callee	if_debug2m		8023013	0					
ANR	8023051	Identifier	if_debug2m		8023013	0					
ANR	8023052	ArgumentList	'c'		8023013	1					
ANR	8023053	Argument	'c'		8023013	0					
ANR	8023054	PrimaryExpression	'c'		8023013	0					
ANR	8023055	Argument	pmem		8023013	1					
ANR	8023056	Identifier	pmem		8023013	0					
ANR	8023057	Argument	"""[c]resizing_indexed_cspace new:%d old:%d\\n"""		8023013	2					
ANR	8023058	PrimaryExpression	"""[c]resizing_indexed_cspace new:%d old:%d\\n"""		8023013	0					
ANR	8023059	Argument	num_entries		8023013	3					
ANR	8023060	Identifier	num_entries		8023013	0					
ANR	8023061	Argument	pindexed -> num_entries		8023013	4					
ANR	8023062	PtrMemberAccess	pindexed -> num_entries		8023013	0					
ANR	8023063	Identifier	pindexed		8023013	0					
ANR	8023064	Identifier	num_entries		8023013	1					
ANR	8023065	ExpressionStatement	"pdata = gs_resize_string ( pmem , pindexed -> palette . data , pindexed -> palette . size , new_size , ""resize pcl indexed color space"" )"	149:4:4646:4801	8023013	6	True				
ANR	8023066	AssignmentExpression	"pdata = gs_resize_string ( pmem , pindexed -> palette . data , pindexed -> palette . size , new_size , ""resize pcl indexed color space"" )"		8023013	0		=			
ANR	8023067	Identifier	pdata		8023013	0					
ANR	8023068	CallExpression	"gs_resize_string ( pmem , pindexed -> palette . data , pindexed -> palette . size , new_size , ""resize pcl indexed color space"" )"		8023013	1					
ANR	8023069	Callee	gs_resize_string		8023013	0					
ANR	8023070	Identifier	gs_resize_string		8023013	0					
ANR	8023071	ArgumentList	pmem		8023013	1					
ANR	8023072	Argument	pmem		8023013	0					
ANR	8023073	Identifier	pmem		8023013	0					
ANR	8023074	Argument	pindexed -> palette . data		8023013	1					
ANR	8023075	MemberAccess	pindexed -> palette . data		8023013	0					
ANR	8023076	PtrMemberAccess	pindexed -> palette		8023013	0					
ANR	8023077	Identifier	pindexed		8023013	0					
ANR	8023078	Identifier	palette		8023013	1					
ANR	8023079	Identifier	data		8023013	1					
ANR	8023080	Argument	pindexed -> palette . size		8023013	2					
ANR	8023081	MemberAccess	pindexed -> palette . size		8023013	0					
ANR	8023082	PtrMemberAccess	pindexed -> palette		8023013	0					
ANR	8023083	Identifier	pindexed		8023013	0					
ANR	8023084	Identifier	palette		8023013	1					
ANR	8023085	Identifier	size		8023013	1					
ANR	8023086	Argument	new_size		8023013	3					
ANR	8023087	Identifier	new_size		8023013	0					
ANR	8023088	Argument	"""resize pcl indexed color space"""		8023013	4					
ANR	8023089	PrimaryExpression	"""resize pcl indexed color space"""		8023013	0					
ANR	8023090	IfStatement	if ( pdata == NULL )		8023013	7					
ANR	8023091	Condition	pdata == NULL	152:8:4811:4823	8023013	0	True				
ANR	8023092	EqualityExpression	pdata == NULL		8023013	0		==			
ANR	8023093	Identifier	pdata		8023013	0					
ANR	8023094	Identifier	NULL		8023013	1					
ANR	8023095	ReturnStatement	return gs_error_VMerror ;	153:8:4834:4857	8023013	1	True				
ANR	8023096	Identifier	gs_error_VMerror		8023013	0					
ANR	8023097	ExpressionStatement	num_old_entries = pindexed -> num_entries	154:4:4863:4902	8023013	8	True				
ANR	8023098	AssignmentExpression	num_old_entries = pindexed -> num_entries		8023013	0		=			
ANR	8023099	Identifier	num_old_entries		8023013	0					
ANR	8023100	PtrMemberAccess	pindexed -> num_entries		8023013	1					
ANR	8023101	Identifier	pindexed		8023013	0					
ANR	8023102	Identifier	num_entries		8023013	1					
ANR	8023103	ExpressionStatement	pindexed -> num_entries = num_entries	155:4:4908:4943	8023013	9	True				
ANR	8023104	AssignmentExpression	pindexed -> num_entries = num_entries		8023013	0		=			
ANR	8023105	PtrMemberAccess	pindexed -> num_entries		8023013	0					
ANR	8023106	Identifier	pindexed		8023013	0					
ANR	8023107	Identifier	num_entries		8023013	1					
ANR	8023108	Identifier	num_entries		8023013	1					
ANR	8023109	ExpressionStatement	pindexed -> palette . data = pdata	156:4:4949:4979	8023013	10	True				
ANR	8023110	AssignmentExpression	pindexed -> palette . data = pdata		8023013	0		=			
ANR	8023111	MemberAccess	pindexed -> palette . data		8023013	0					
ANR	8023112	PtrMemberAccess	pindexed -> palette		8023013	0					
ANR	8023113	Identifier	pindexed		8023013	0					
ANR	8023114	Identifier	palette		8023013	1					
ANR	8023115	Identifier	data		8023013	1					
ANR	8023116	Identifier	pdata		8023013	1					
ANR	8023117	ExpressionStatement	pindexed -> palette . size = pindexed -> pcspace -> params . indexed . lookup . table . size = new_size	158:4:5021:5116	8023013	11	True				
ANR	8023118	AssignmentExpression	pindexed -> palette . size = pindexed -> pcspace -> params . indexed . lookup . table . size = new_size		8023013	0		=			
ANR	8023119	MemberAccess	pindexed -> palette . size		8023013	0					
ANR	8023120	PtrMemberAccess	pindexed -> palette		8023013	0					
ANR	8023121	Identifier	pindexed		8023013	0					
ANR	8023122	Identifier	palette		8023013	1					
ANR	8023123	Identifier	size		8023013	1					
ANR	8023124	AssignmentExpression	pindexed -> pcspace -> params . indexed . lookup . table . size = new_size		8023013	1		=			
ANR	8023125	MemberAccess	pindexed -> pcspace -> params . indexed . lookup . table . size		8023013	0					
ANR	8023126	MemberAccess	pindexed -> pcspace -> params . indexed . lookup . table		8023013	0					
ANR	8023127	MemberAccess	pindexed -> pcspace -> params . indexed . lookup		8023013	0					
ANR	8023128	MemberAccess	pindexed -> pcspace -> params . indexed		8023013	0					
ANR	8023129	PtrMemberAccess	pindexed -> pcspace -> params		8023013	0					
ANR	8023130	PtrMemberAccess	pindexed -> pcspace		8023013	0					
ANR	8023131	Identifier	pindexed		8023013	0					
ANR	8023132	Identifier	pcspace		8023013	1					
ANR	8023133	Identifier	params		8023013	1					
ANR	8023134	Identifier	indexed		8023013	1					
ANR	8023135	Identifier	lookup		8023013	1					
ANR	8023136	Identifier	table		8023013	1					
ANR	8023137	Identifier	size		8023013	1					
ANR	8023138	Identifier	new_size		8023013	1					
ANR	8023139	ExpressionStatement	pindexed -> pcspace -> params . indexed . lookup . table . data = ( const byte * ) pdata	160:4:5122:5195	8023013	12	True				
ANR	8023140	AssignmentExpression	pindexed -> pcspace -> params . indexed . lookup . table . data = ( const byte * ) pdata		8023013	0		=			
ANR	8023141	MemberAccess	pindexed -> pcspace -> params . indexed . lookup . table . data		8023013	0					
ANR	8023142	MemberAccess	pindexed -> pcspace -> params . indexed . lookup . table		8023013	0					
ANR	8023143	MemberAccess	pindexed -> pcspace -> params . indexed . lookup		8023013	0					
ANR	8023144	MemberAccess	pindexed -> pcspace -> params . indexed		8023013	0					
ANR	8023145	PtrMemberAccess	pindexed -> pcspace -> params		8023013	0					
ANR	8023146	PtrMemberAccess	pindexed -> pcspace		8023013	0					
ANR	8023147	Identifier	pindexed		8023013	0					
ANR	8023148	Identifier	pcspace		8023013	1					
ANR	8023149	Identifier	params		8023013	1					
ANR	8023150	Identifier	indexed		8023013	1					
ANR	8023151	Identifier	lookup		8023013	1					
ANR	8023152	Identifier	table		8023013	1					
ANR	8023153	Identifier	data		8023013	1					
ANR	8023154	CastExpression	( const byte * ) pdata		8023013	1					
ANR	8023155	CastTarget	const byte *		8023013	0					
ANR	8023156	Identifier	pdata		8023013	1					
ANR	8023157	ExpressionStatement	pindexed -> palette . data = pdata	161:4:5201:5231	8023013	13	True				
ANR	8023158	AssignmentExpression	pindexed -> palette . data = pdata		8023013	0		=			
ANR	8023159	MemberAccess	pindexed -> palette . data		8023013	0					
ANR	8023160	PtrMemberAccess	pindexed -> palette		8023013	0					
ANR	8023161	Identifier	pindexed		8023013	0					
ANR	8023162	Identifier	palette		8023013	1					
ANR	8023163	Identifier	data		8023013	1					
ANR	8023164	Identifier	pdata		8023013	1					
ANR	8023165	ExpressionStatement	pindexed -> pcspace -> params . indexed . hival = num_entries - 1	162:4:5237:5294	8023013	14	True				
ANR	8023166	AssignmentExpression	pindexed -> pcspace -> params . indexed . hival = num_entries - 1		8023013	0		=			
ANR	8023167	MemberAccess	pindexed -> pcspace -> params . indexed . hival		8023013	0					
ANR	8023168	MemberAccess	pindexed -> pcspace -> params . indexed		8023013	0					
ANR	8023169	PtrMemberAccess	pindexed -> pcspace -> params		8023013	0					
ANR	8023170	PtrMemberAccess	pindexed -> pcspace		8023013	0					
ANR	8023171	Identifier	pindexed		8023013	0					
ANR	8023172	Identifier	pcspace		8023013	1					
ANR	8023173	Identifier	params		8023013	1					
ANR	8023174	Identifier	indexed		8023013	1					
ANR	8023175	Identifier	hival		8023013	1					
ANR	8023176	AdditiveExpression	num_entries - 1		8023013	1		-			
ANR	8023177	Identifier	num_entries		8023013	0					
ANR	8023178	PrimaryExpression	1		8023013	1					
ANR	8023179	ForStatement	for ( i = num_old_entries ; i < num_entries ; i ++ )		8023013	15					
ANR	8023180	ForInit	i = num_old_entries ;	165:9:5396:5415	8023013	0	True				
ANR	8023181	AssignmentExpression	i = num_old_entries		8023013	0		=			
ANR	8023182	Identifier	i		8023013	0					
ANR	8023183	Identifier	num_old_entries		8023013	1					
ANR	8023184	Condition	i < num_entries	165:30:5417:5431	8023013	1	True				
ANR	8023185	RelationalExpression	i < num_entries		8023013	0		<			
ANR	8023186	Identifier	i		8023013	0					
ANR	8023187	Identifier	num_entries		8023013	1					
ANR	8023188	PostIncDecOperationExpression	i ++	165:47:5434:5436	8023013	2	True				
ANR	8023189	Identifier	i		8023013	0					
ANR	8023190	IncDec	++		8023013	1					
ANR	8023191	ExpressionStatement	pindexed -> pen_widths [ i ] = dflt_pen_width	166:8:5447:5487	8023013	3	True				
ANR	8023192	AssignmentExpression	pindexed -> pen_widths [ i ] = dflt_pen_width		8023013	0		=			
ANR	8023193	ArrayIndexing	pindexed -> pen_widths [ i ]		8023013	0					
ANR	8023194	PtrMemberAccess	pindexed -> pen_widths		8023013	0					
ANR	8023195	Identifier	pindexed		8023013	0					
ANR	8023196	Identifier	pen_widths		8023013	1					
ANR	8023197	Identifier	i		8023013	1					
ANR	8023198	Identifier	dflt_pen_width		8023013	1					
ANR	8023199	ReturnStatement	return 0 ;	167:4:5493:5501	8023013	16	True				
ANR	8023200	PrimaryExpression	0		8023013	0					
ANR	8023201	ReturnType	static int		8023013	1					
ANR	8023202	Identifier	resize_indexed_cspace		8023013	2					
ANR	8023203	ParameterList	"pcl_cs_indexed_t * pindexed , uint num_entries"		8023013	3					
ANR	8023204	Parameter	pcl_cs_indexed_t * pindexed	138:22:4331:4357	8023013	0	True				
ANR	8023205	ParameterType	pcl_cs_indexed_t *		8023013	0					
ANR	8023206	Identifier	pindexed		8023013	1					
ANR	8023207	Parameter	uint num_entries	138:51:4360:4375	8023013	1	True				
ANR	8023208	ParameterType	uint		8023013	0					
ANR	8023209	Identifier	num_entries		8023013	1					
ANR	8023210	CFGEntryNode	ENTRY		8023013		True				
ANR	8023211	CFGExitNode	EXIT		8023013		True				
ANR	8023212	Symbol	* * pindexed		8023013						
ANR	8023213	Symbol	pindexed -> pcspace -> params . indexed		8023013						
ANR	8023214	Symbol	pdata		8023013						
ANR	8023215	Symbol	pindexed -> palette		8023013						
ANR	8023216	Symbol	* pindexed		8023013						
ANR	8023217	Symbol	pindexed -> palette . data		8023013						
ANR	8023218	Symbol	* pindexed -> pen_widths		8023013						
ANR	8023219	Symbol	pmem		8023013						
ANR	8023220	Symbol	pindexed -> pcspace -> params		8023013						
ANR	8023221	Symbol	dflt_pen_width		8023013						
ANR	8023222	Symbol	num_old_entries		8023013						
ANR	8023223	Symbol	pindexed		8023013						
ANR	8023224	Symbol	pindexed -> rc		8023013						
ANR	8023225	Symbol	new_size		8023013						
ANR	8023226	Symbol	pindexed -> pcspace -> params . indexed . lookup . table . data		8023013						
ANR	8023227	Symbol	pindexed -> pcspace -> params . indexed . hival		8023013						
ANR	8023228	Symbol	NULL		8023013						
ANR	8023229	Symbol	pindexed -> pcspace		8023013						
ANR	8023230	Symbol	i		8023013						
ANR	8023231	Symbol	pindexed -> rc . memory		8023013						
ANR	8023232	Symbol	pindexed -> pcspace -> params . indexed . lookup . table		8023013						
ANR	8023233	Symbol	gs_error_VMerror		8023013						
ANR	8023234	Symbol	* i		8023013						
ANR	8023235	Symbol	pindexed -> pcspace -> params . indexed . lookup . table . size		8023013						
ANR	8023236	Symbol	pindexed -> palette . size		8023013						
ANR	8023237	Symbol	pindexed -> pcspace -> params . indexed . lookup		8023013						
ANR	8023238	Symbol	pindexed -> num_entries		8023013						
ANR	8023239	Symbol	gs_resize_string		8023013						
ANR	8023240	Symbol	num_entries		8023013						
ANR	8023241	Symbol	pindexed -> pen_widths		8023013						
ANR	8023242	Symbol	* pindexed -> pcspace		8023013						
ANR	8023243	Function	unshare_indexed_cspace	180:0:5914:7153							
ANR	8023244	FunctionDef	unshare_indexed_cspace (pcl_cs_indexed_t * * ppindexed)		8023243	0					
ANR	8023245	CompoundStatement		182:0:5979:7153	8023243	0					
ANR	8023246	IdentifierDeclStatement	pcl_cs_indexed_t * pindexed = * ppindexed ;	183:4:5985:6024	8023243	0	True				
ANR	8023247	IdentifierDecl	* pindexed = * ppindexed		8023243	0					
ANR	8023248	IdentifierDeclType	pcl_cs_indexed_t *		8023243	0					
ANR	8023249	Identifier	pindexed		8023243	1					
ANR	8023250	AssignmentExpression	* pindexed = * ppindexed		8023243	2		=			
ANR	8023251	Identifier	pindexed		8023243	0					
ANR	8023252	UnaryOperationExpression	* ppindexed		8023243	1					
ANR	8023253	UnaryOperator	*		8023243	0					
ANR	8023254	Identifier	ppindexed		8023243	1					
ANR	8023255	IdentifierDeclStatement	pcl_cs_indexed_t * pnew = 0 ;	184:4:6030:6056	8023243	1	True				
ANR	8023256	IdentifierDecl	* pnew = 0		8023243	0					
ANR	8023257	IdentifierDeclType	pcl_cs_indexed_t *		8023243	0					
ANR	8023258	Identifier	pnew		8023243	1					
ANR	8023259	AssignmentExpression	* pnew = 0		8023243	2		=			
ANR	8023260	Identifier	pnew		8023243	0					
ANR	8023261	PrimaryExpression	0		8023243	1					
ANR	8023262	IdentifierDeclStatement	int code = 0 ;	185:4:6062:6074	8023243	2	True				
ANR	8023263	IdentifierDecl	code = 0		8023243	0					
ANR	8023264	IdentifierDeclType	int		8023243	0					
ANR	8023265	Identifier	code		8023243	1					
ANR	8023266	AssignmentExpression	code = 0		8023243	2		=			
ANR	8023267	Identifier	code		8023243	0					
ANR	8023268	PrimaryExpression	0		8023243	1					
ANR	8023269	IdentifierDeclStatement	int num_entries = pindexed -> num_entries ;	186:4:6080:6119	8023243	3	True				
ANR	8023270	IdentifierDecl	num_entries = pindexed -> num_entries		8023243	0					
ANR	8023271	IdentifierDeclType	int		8023243	0					
ANR	8023272	Identifier	num_entries		8023243	1					
ANR	8023273	AssignmentExpression	num_entries = pindexed -> num_entries		8023243	2		=			
ANR	8023274	Identifier	num_entries		8023243	0					
ANR	8023275	PtrMemberAccess	pindexed -> num_entries		8023243	1					
ANR	8023276	Identifier	pindexed		8023243	0					
ANR	8023277	Identifier	num_entries		8023243	1					
ANR	8023278	IfStatement	if ( pindexed -> rc . ref_count == 1 )		8023243	4					
ANR	8023279	Condition	pindexed -> rc . ref_count == 1	189:8:6173:6199	8023243	0	True				
ANR	8023280	EqualityExpression	pindexed -> rc . ref_count == 1		8023243	0		==			
ANR	8023281	MemberAccess	pindexed -> rc . ref_count		8023243	0					
ANR	8023282	PtrMemberAccess	pindexed -> rc		8023243	0					
ANR	8023283	Identifier	pindexed		8023243	0					
ANR	8023284	Identifier	rc		8023243	1					
ANR	8023285	Identifier	ref_count		8023243	1					
ANR	8023286	PrimaryExpression	1		8023243	1					
ANR	8023287	ReturnStatement	return 0 ;	190:8:6210:6218	8023243	1	True				
ANR	8023288	PrimaryExpression	0		8023243	0					
ANR	8023289	ExpressionStatement	"rc_decrement ( pindexed , ""unshare PCL indexed color space"" )"	191:4:6224:6281	8023243	5	True				
ANR	8023290	CallExpression	"rc_decrement ( pindexed , ""unshare PCL indexed color space"" )"		8023243	0					
ANR	8023291	Callee	rc_decrement		8023243	0					
ANR	8023292	Identifier	rc_decrement		8023243	0					
ANR	8023293	ArgumentList	pindexed		8023243	1					
ANR	8023294	Argument	pindexed		8023243	0					
ANR	8023295	Identifier	pindexed		8023243	0					
ANR	8023296	Argument	"""unshare PCL indexed color space"""		8023243	1					
ANR	8023297	PrimaryExpression	"""unshare PCL indexed color space"""		8023243	0					
ANR	8023298	ExpressionStatement	"code = alloc_indexed_cspace ( ppindexed , pindexed -> pbase , pindexed -> num_entries , pindexed -> rc . memory )"	194:4:6333:6496	8023243	6	True				
ANR	8023299	AssignmentExpression	"code = alloc_indexed_cspace ( ppindexed , pindexed -> pbase , pindexed -> num_entries , pindexed -> rc . memory )"		8023243	0		=			
ANR	8023300	Identifier	code		8023243	0					
ANR	8023301	CallExpression	"alloc_indexed_cspace ( ppindexed , pindexed -> pbase , pindexed -> num_entries , pindexed -> rc . memory )"		8023243	1					
ANR	8023302	Callee	alloc_indexed_cspace		8023243	0					
ANR	8023303	Identifier	alloc_indexed_cspace		8023243	0					
ANR	8023304	ArgumentList	ppindexed		8023243	1					
ANR	8023305	Argument	ppindexed		8023243	0					
ANR	8023306	Identifier	ppindexed		8023243	0					
ANR	8023307	Argument	pindexed -> pbase		8023243	1					
ANR	8023308	PtrMemberAccess	pindexed -> pbase		8023243	0					
ANR	8023309	Identifier	pindexed		8023243	0					
ANR	8023310	Identifier	pbase		8023243	1					
ANR	8023311	Argument	pindexed -> num_entries		8023243	2					
ANR	8023312	PtrMemberAccess	pindexed -> num_entries		8023243	0					
ANR	8023313	Identifier	pindexed		8023243	0					
ANR	8023314	Identifier	num_entries		8023243	1					
ANR	8023315	Argument	pindexed -> rc . memory		8023243	3					
ANR	8023316	MemberAccess	pindexed -> rc . memory		8023243	0					
ANR	8023317	PtrMemberAccess	pindexed -> rc		8023243	0					
ANR	8023318	Identifier	pindexed		8023243	0					
ANR	8023319	Identifier	rc		8023243	1					
ANR	8023320	Identifier	memory		8023243	1					
ANR	8023321	IfStatement	if ( code < 0 )		8023243	7					
ANR	8023322	Condition	code < 0	197:8:6506:6513	8023243	0	True				
ANR	8023323	RelationalExpression	code < 0		8023243	0		<			
ANR	8023324	Identifier	code		8023243	0					
ANR	8023325	PrimaryExpression	0		8023243	1					
ANR	8023326	ReturnStatement	return code ;	198:8:6524:6535	8023243	1	True				
ANR	8023327	Identifier	code		8023243	0					
ANR	8023328	ExpressionStatement	pnew = * ppindexed	199:4:6541:6558	8023243	8	True				
ANR	8023329	AssignmentExpression	pnew = * ppindexed		8023243	0		=			
ANR	8023330	Identifier	pnew		8023243	0					
ANR	8023331	UnaryOperationExpression	* ppindexed		8023243	1					
ANR	8023332	UnaryOperator	*		8023243	0					
ANR	8023333	Identifier	ppindexed		8023243	1					
ANR	8023334	ExpressionStatement	pnew -> pfixed = pindexed -> pfixed	202:4:6606:6637	8023243	9	True				
ANR	8023335	AssignmentExpression	pnew -> pfixed = pindexed -> pfixed		8023243	0		=			
ANR	8023336	PtrMemberAccess	pnew -> pfixed		8023243	0					
ANR	8023337	Identifier	pnew		8023243	0					
ANR	8023338	Identifier	pfixed		8023243	1					
ANR	8023339	PtrMemberAccess	pindexed -> pfixed		8023243	1					
ANR	8023340	Identifier	pindexed		8023243	0					
ANR	8023341	Identifier	pfixed		8023243	1					
ANR	8023342	ExpressionStatement	pnew -> cid = pindexed -> cid	203:4:6643:6668	8023243	10	True				
ANR	8023343	AssignmentExpression	pnew -> cid = pindexed -> cid		8023243	0		=			
ANR	8023344	PtrMemberAccess	pnew -> cid		8023243	0					
ANR	8023345	Identifier	pnew		8023243	0					
ANR	8023346	Identifier	cid		8023243	1					
ANR	8023347	PtrMemberAccess	pindexed -> cid		8023243	1					
ANR	8023348	Identifier	pindexed		8023243	0					
ANR	8023349	Identifier	cid		8023243	1					
ANR	8023350	ExpressionStatement	pnew -> original_cspace = pindexed -> original_cspace	204:4:6674:6723	8023243	11	True				
ANR	8023351	AssignmentExpression	pnew -> original_cspace = pindexed -> original_cspace		8023243	0		=			
ANR	8023352	PtrMemberAccess	pnew -> original_cspace		8023243	0					
ANR	8023353	Identifier	pnew		8023243	0					
ANR	8023354	Identifier	original_cspace		8023243	1					
ANR	8023355	PtrMemberAccess	pindexed -> original_cspace		8023243	1					
ANR	8023356	Identifier	pindexed		8023243	0					
ANR	8023357	Identifier	original_cspace		8023243	1					
ANR	8023358	ExpressionStatement	pnew -> num_entries = pindexed -> num_entries	205:4:6729:6770	8023243	12	True				
ANR	8023359	AssignmentExpression	pnew -> num_entries = pindexed -> num_entries		8023243	0		=			
ANR	8023360	PtrMemberAccess	pnew -> num_entries		8023243	0					
ANR	8023361	Identifier	pnew		8023243	0					
ANR	8023362	Identifier	num_entries		8023243	1					
ANR	8023363	PtrMemberAccess	pindexed -> num_entries		8023243	1					
ANR	8023364	Identifier	pindexed		8023243	0					
ANR	8023365	Identifier	num_entries		8023243	1					
ANR	8023366	ExpressionStatement	pnew -> palette . size = pindexed -> palette . size	206:4:6776:6819	8023243	13	True				
ANR	8023367	AssignmentExpression	pnew -> palette . size = pindexed -> palette . size		8023243	0		=			
ANR	8023368	MemberAccess	pnew -> palette . size		8023243	0					
ANR	8023369	PtrMemberAccess	pnew -> palette		8023243	0					
ANR	8023370	Identifier	pnew		8023243	0					
ANR	8023371	Identifier	palette		8023243	1					
ANR	8023372	Identifier	size		8023243	1					
ANR	8023373	MemberAccess	pindexed -> palette . size		8023243	1					
ANR	8023374	PtrMemberAccess	pindexed -> palette		8023243	0					
ANR	8023375	Identifier	pindexed		8023243	0					
ANR	8023376	Identifier	palette		8023243	1					
ANR	8023377	Identifier	size		8023243	1					
ANR	8023378	ExpressionStatement	"memcpy ( pnew -> palette . data , pindexed -> palette . data , pindexed -> palette . size )"	207:4:6825:6910	8023243	14	True				
ANR	8023379	CallExpression	"memcpy ( pnew -> palette . data , pindexed -> palette . data , pindexed -> palette . size )"		8023243	0					
ANR	8023380	Callee	memcpy		8023243	0					
ANR	8023381	Identifier	memcpy		8023243	0					
ANR	8023382	ArgumentList	pnew -> palette . data		8023243	1					
ANR	8023383	Argument	pnew -> palette . data		8023243	0					
ANR	8023384	MemberAccess	pnew -> palette . data		8023243	0					
ANR	8023385	PtrMemberAccess	pnew -> palette		8023243	0					
ANR	8023386	Identifier	pnew		8023243	0					
ANR	8023387	Identifier	palette		8023243	1					
ANR	8023388	Identifier	data		8023243	1					
ANR	8023389	Argument	pindexed -> palette . data		8023243	1					
ANR	8023390	MemberAccess	pindexed -> palette . data		8023243	0					
ANR	8023391	PtrMemberAccess	pindexed -> palette		8023243	0					
ANR	8023392	Identifier	pindexed		8023243	0					
ANR	8023393	Identifier	palette		8023243	1					
ANR	8023394	Identifier	data		8023243	1					
ANR	8023395	Argument	pindexed -> palette . size		8023243	2					
ANR	8023396	MemberAccess	pindexed -> palette . size		8023243	0					
ANR	8023397	PtrMemberAccess	pindexed -> palette		8023243	0					
ANR	8023398	Identifier	pindexed		8023243	0					
ANR	8023399	Identifier	palette		8023243	1					
ANR	8023400	Identifier	size		8023243	1					
ANR	8023401	ExpressionStatement	"memcpy ( pnew -> pen_widths , pindexed -> pen_widths , num_entries * sizeof ( float ) )"	209:4:6916:7002	8023243	15	True				
ANR	8023402	CallExpression	"memcpy ( pnew -> pen_widths , pindexed -> pen_widths , num_entries * sizeof ( float ) )"		8023243	0					
ANR	8023403	Callee	memcpy		8023243	0					
ANR	8023404	Identifier	memcpy		8023243	0					
ANR	8023405	ArgumentList	pnew -> pen_widths		8023243	1					
ANR	8023406	Argument	pnew -> pen_widths		8023243	0					
ANR	8023407	PtrMemberAccess	pnew -> pen_widths		8023243	0					
ANR	8023408	Identifier	pnew		8023243	0					
ANR	8023409	Identifier	pen_widths		8023243	1					
ANR	8023410	Argument	pindexed -> pen_widths		8023243	1					
ANR	8023411	PtrMemberAccess	pindexed -> pen_widths		8023243	0					
ANR	8023412	Identifier	pindexed		8023243	0					
ANR	8023413	Identifier	pen_widths		8023243	1					
ANR	8023414	Argument	num_entries * sizeof ( float )		8023243	2					
ANR	8023415	MultiplicativeExpression	num_entries * sizeof ( float )		8023243	0		*			
ANR	8023416	Identifier	num_entries		8023243	0					
ANR	8023417	SizeofExpression	sizeof ( float )		8023243	1					
ANR	8023418	Sizeof	sizeof		8023243	0					
ANR	8023419	SizeofOperand	float		8023243	1					
ANR	8023420	ExpressionStatement	"memcpy ( pnew -> norm , pindexed -> norm , 3 * sizeof ( pindexed -> norm [ 0 ] ) )"	211:4:7008:7073	8023243	16	True				
ANR	8023421	CallExpression	"memcpy ( pnew -> norm , pindexed -> norm , 3 * sizeof ( pindexed -> norm [ 0 ] ) )"		8023243	0					
ANR	8023422	Callee	memcpy		8023243	0					
ANR	8023423	Identifier	memcpy		8023243	0					
ANR	8023424	ArgumentList	pnew -> norm		8023243	1					
ANR	8023425	Argument	pnew -> norm		8023243	0					
ANR	8023426	PtrMemberAccess	pnew -> norm		8023243	0					
ANR	8023427	Identifier	pnew		8023243	0					
ANR	8023428	Identifier	norm		8023243	1					
ANR	8023429	Argument	pindexed -> norm		8023243	1					
ANR	8023430	PtrMemberAccess	pindexed -> norm		8023243	0					
ANR	8023431	Identifier	pindexed		8023243	0					
ANR	8023432	Identifier	norm		8023243	1					
ANR	8023433	Argument	3 * sizeof ( pindexed -> norm [ 0 ] )		8023243	2					
ANR	8023434	MultiplicativeExpression	3 * sizeof ( pindexed -> norm [ 0 ] )		8023243	0		*			
ANR	8023435	PrimaryExpression	3		8023243	0					
ANR	8023436	SizeofExpression	sizeof ( pindexed -> norm [ 0 ] )		8023243	1					
ANR	8023437	Sizeof	sizeof		8023243	0					
ANR	8023438	ArrayIndexing	pindexed -> norm [ 0 ]		8023243	1					
ANR	8023439	PtrMemberAccess	pindexed -> norm		8023243	0					
ANR	8023440	Identifier	pindexed		8023243	0					
ANR	8023441	Identifier	norm		8023243	1					
ANR	8023442	PrimaryExpression	0		8023243	1					
ANR	8023443	ExpressionStatement	"memcpy ( pnew -> Decode , pindexed -> Decode , 6 * sizeof ( float ) )"	212:4:7079:7136	8023243	17	True				
ANR	8023444	CallExpression	"memcpy ( pnew -> Decode , pindexed -> Decode , 6 * sizeof ( float ) )"		8023243	0					
ANR	8023445	Callee	memcpy		8023243	0					
ANR	8023446	Identifier	memcpy		8023243	0					
ANR	8023447	ArgumentList	pnew -> Decode		8023243	1					
ANR	8023448	Argument	pnew -> Decode		8023243	0					
ANR	8023449	PtrMemberAccess	pnew -> Decode		8023243	0					
ANR	8023450	Identifier	pnew		8023243	0					
ANR	8023451	Identifier	Decode		8023243	1					
ANR	8023452	Argument	pindexed -> Decode		8023243	1					
ANR	8023453	PtrMemberAccess	pindexed -> Decode		8023243	0					
ANR	8023454	Identifier	pindexed		8023243	0					
ANR	8023455	Identifier	Decode		8023243	1					
ANR	8023456	Argument	6 * sizeof ( float )		8023243	2					
ANR	8023457	MultiplicativeExpression	6 * sizeof ( float )		8023243	0		*			
ANR	8023458	PrimaryExpression	6		8023243	0					
ANR	8023459	SizeofExpression	sizeof ( float )		8023243	1					
ANR	8023460	Sizeof	sizeof		8023243	0					
ANR	8023461	SizeofOperand	float		8023243	1					
ANR	8023462	ReturnStatement	return 0 ;	214:4:7143:7151	8023243	18	True				
ANR	8023463	PrimaryExpression	0		8023243	0					
ANR	8023464	ReturnType	static int		8023243	1					
ANR	8023465	Identifier	unshare_indexed_cspace		8023243	2					
ANR	8023466	ParameterList	pcl_cs_indexed_t * * ppindexed		8023243	3					
ANR	8023467	Parameter	pcl_cs_indexed_t * * ppindexed	181:23:5948:5976	8023243	0	True				
ANR	8023468	ParameterType	pcl_cs_indexed_t * *		8023243	0					
ANR	8023469	Identifier	ppindexed		8023243	1					
ANR	8023470	CFGEntryNode	ENTRY		8023243		True				
ANR	8023471	CFGExitNode	EXIT		8023243		True				
ANR	8023472	Symbol	* ppindexed		8023243						
ANR	8023473	Symbol	* * pindexed		8023243						
ANR	8023474	Symbol	pindexed -> cid		8023243						
ANR	8023475	Symbol	code		8023243						
ANR	8023476	Symbol	pnew		8023243						
ANR	8023477	Symbol	pindexed -> palette		8023243						
ANR	8023478	Symbol	* pindexed		8023243						
ANR	8023479	Symbol	* pnew		8023243						
ANR	8023480	Symbol	pindexed -> norm		8023243						
ANR	8023481	Symbol	pnew -> num_entries		8023243						
ANR	8023482	Symbol	pindexed -> palette . data		8023243						
ANR	8023483	Symbol	pnew -> palette . size		8023243						
ANR	8023484	Symbol	pnew -> pfixed		8023243						
ANR	8023485	Symbol	pnew -> palette . data		8023243						
ANR	8023486	Symbol	pnew -> palette		8023243						
ANR	8023487	Symbol	pindexed		8023243						
ANR	8023488	Symbol	pindexed -> rc		8023243						
ANR	8023489	Symbol	pindexed -> pbase		8023243						
ANR	8023490	Symbol	pindexed -> pfixed		8023243						
ANR	8023491	Symbol	pnew -> pen_widths		8023243						
ANR	8023492	Symbol	pindexed -> original_cspace		8023243						
ANR	8023493	Symbol	pnew -> Decode		8023243						
ANR	8023494	Symbol	pindexed -> rc . memory		8023243						
ANR	8023495	Symbol	pnew -> cid		8023243						
ANR	8023496	Symbol	pindexed -> rc . ref_count		8023243						
ANR	8023497	Symbol	pnew -> original_cspace		8023243						
ANR	8023498	Symbol	alloc_indexed_cspace		8023243						
ANR	8023499	Symbol	pindexed -> palette . size		8023243						
ANR	8023500	Symbol	* pindexed -> norm		8023243						
ANR	8023501	Symbol	pindexed -> Decode		8023243						
ANR	8023502	Symbol	ppindexed		8023243						
ANR	8023503	Symbol	pindexed -> num_entries		8023243						
ANR	8023504	Symbol	pnew -> norm		8023243						
ANR	8023505	Symbol	num_entries		8023243						
ANR	8023506	Symbol	pindexed -> pen_widths		8023243						
ANR	8023507	Function	convert_comp_val	247:0:8699:8888							
ANR	8023508	FunctionDef	"convert_comp_val (double val , double min_val , double range)"		8023507	0					
ANR	8023509	CompoundStatement		249:0:8769:8888	8023507	0					
ANR	8023510	ExpressionStatement	val = 255.0 * ( val - min_val ) / range	250:4:8775:8812	8023507	0	True				
ANR	8023511	AssignmentExpression	val = 255.0 * ( val - min_val ) / range		8023507	0		=			
ANR	8023512	Identifier	val		8023507	0					
ANR	8023513	MultiplicativeExpression	255.0 * ( val - min_val ) / range		8023507	1		*			
ANR	8023514	PrimaryExpression	255.0		8023507	0					
ANR	8023515	MultiplicativeExpression	( val - min_val ) / range		8023507	1		/			
ANR	8023516	AdditiveExpression	val - min_val		8023507	0		-			
ANR	8023517	Identifier	val		8023507	0					
ANR	8023518	Identifier	min_val		8023507	1					
ANR	8023519	Identifier	range		8023507	1					
ANR	8023520	ReturnStatement	return ( val < 0.0 ? 0 : ( val > 255.0 ? 255 : ( int ) floor ( val + 0.5 ) ) ) ;	251:4:8818:8886	8023507	1	True				
ANR	8023521	ConditionalExpression	val < 0.0 ? 0 : ( val > 255.0 ? 255 : ( int ) floor ( val + 0.5 ) )		8023507	0					
ANR	8023522	Condition	val < 0.0		8023507	0					
ANR	8023523	RelationalExpression	val < 0.0		8023507	0		<			
ANR	8023524	Identifier	val		8023507	0					
ANR	8023525	PrimaryExpression	0.0		8023507	1					
ANR	8023526	PrimaryExpression	0		8023507	1					
ANR	8023527	ConditionalExpression	val > 255.0 ? 255 : ( int ) floor ( val + 0.5 )		8023507	2					
ANR	8023528	Condition	val > 255.0		8023507	0					
ANR	8023529	RelationalExpression	val > 255.0		8023507	0		>			
ANR	8023530	Identifier	val		8023507	0					
ANR	8023531	PrimaryExpression	255.0		8023507	1					
ANR	8023532	PrimaryExpression	255		8023507	1					
ANR	8023533	CastExpression	( int ) floor ( val + 0.5 )		8023507	2					
ANR	8023534	CastTarget	int		8023507	0					
ANR	8023535	CallExpression	floor ( val + 0.5 )		8023507	1					
ANR	8023536	Callee	floor		8023507	0					
ANR	8023537	Identifier	floor		8023507	0					
ANR	8023538	ArgumentList	val + 0.5		8023507	1					
ANR	8023539	Argument	val + 0.5		8023507	0					
ANR	8023540	AdditiveExpression	val + 0.5		8023507	0		+			
ANR	8023541	Identifier	val		8023507	0					
ANR	8023542	PrimaryExpression	0.5		8023507	1					
ANR	8023543	ReturnType	static int		8023507	1					
ANR	8023544	Identifier	convert_comp_val		8023507	2					
ANR	8023545	ParameterList	"double val , double min_val , double range"		8023507	3					
ANR	8023546	Parameter	double val	248:17:8727:8736	8023507	0	True				
ANR	8023547	ParameterType	double		8023507	0					
ANR	8023548	Identifier	val		8023507	1					
ANR	8023549	Parameter	double min_val	248:29:8739:8752	8023507	1	True				
ANR	8023550	ParameterType	double		8023507	0					
ANR	8023551	Identifier	min_val		8023507	1					
ANR	8023552	Parameter	double range	248:45:8755:8766	8023507	2	True				
ANR	8023553	ParameterType	double		8023507	0					
ANR	8023554	Identifier	range		8023507	1					
ANR	8023555	CFGEntryNode	ENTRY		8023507		True				
ANR	8023556	CFGExitNode	EXIT		8023507		True				
ANR	8023557	Symbol	val		8023507						
ANR	8023558	Symbol	range		8023507						
ANR	8023559	Symbol	min_val		8023507						
ANR	8023560	Symbol	floor		8023507						
ANR	8023561	Function	set_dev_specific_default_palette	257:0:8959:9885							
ANR	8023562	FunctionDef	"set_dev_specific_default_palette (pcl_cs_base_t * pbase , byte * palette , const byte * porder , int start , int num)"		8023561	0					
ANR	8023563	CompoundStatement		261:0:9177:9885	8023561	0					
ANR	8023564	IdentifierDeclStatement	int i ;	262:4:9183:9188	8023561	0	True				
ANR	8023565	IdentifierDecl	i		8023561	0					
ANR	8023566	IdentifierDeclType	int		8023561	0					
ANR	8023567	Identifier	i		8023561	1					
ANR	8023568	Statement	static	263:4:9194:9199	8023561	1	True				
ANR	8023569	IdentifierDeclStatement	"const byte cmy_default [ 8 * 3 ] = { 255 , 255 , 255 , 0 , 255 , 255 , 255 , 0 , 255 , 0 , 0 , 255 , 255 , 255 , 0 , 0 , 255 , 0 , 255 , 0 , 0 , 0 , 0 , 0 } ;"	263:11:9201:9591	8023561	2	True				
ANR	8023570	IdentifierDecl	"cmy_default [ 8 * 3 ] = { 255 , 255 , 255 , 0 , 255 , 255 , 255 , 0 , 255 , 0 , 0 , 255 , 255 , 255 , 0 , 0 , 255 , 0 , 255 , 0 , 0 , 0 , 0 , 0 }"		8023561	0					
ANR	8023571	IdentifierDeclType	const byte [ 8 * 3 ]		8023561	0					
ANR	8023572	Identifier	cmy_default		8023561	1					
ANR	8023573	MultiplicativeExpression	8 * 3		8023561	2		*			
ANR	8023574	PrimaryExpression	8		8023561	0					
ANR	8023575	PrimaryExpression	3		8023561	1					
ANR	8023576	AssignmentExpression	"cmy_default [ 8 * 3 ] = { 255 , 255 , 255 , 0 , 255 , 255 , 255 , 0 , 255 , 0 , 0 , 255 , 255 , 255 , 0 , 0 , 255 , 0 , 255 , 0 , 0 , 0 , 0 , 0 }"		8023561	3		=			
ANR	8023577	Identifier	cmy_default		8023561	0					
ANR	8023578	InitializerList	255		8023561	1					
ANR	8023579	PrimaryExpression	255		8023561	0					
ANR	8023580	PrimaryExpression	255		8023561	1					
ANR	8023581	PrimaryExpression	255		8023561	2					
ANR	8023582	PrimaryExpression	0		8023561	3					
ANR	8023583	PrimaryExpression	255		8023561	4					
ANR	8023584	PrimaryExpression	255		8023561	5					
ANR	8023585	PrimaryExpression	255		8023561	6					
ANR	8023586	PrimaryExpression	0		8023561	7					
ANR	8023587	PrimaryExpression	255		8023561	8					
ANR	8023588	PrimaryExpression	0		8023561	9					
ANR	8023589	PrimaryExpression	0		8023561	10					
ANR	8023590	PrimaryExpression	255		8023561	11					
ANR	8023591	PrimaryExpression	255		8023561	12					
ANR	8023592	PrimaryExpression	255		8023561	13					
ANR	8023593	PrimaryExpression	0		8023561	14					
ANR	8023594	PrimaryExpression	0		8023561	15					
ANR	8023595	PrimaryExpression	255		8023561	16					
ANR	8023596	PrimaryExpression	0		8023561	17					
ANR	8023597	PrimaryExpression	255		8023561	18					
ANR	8023598	PrimaryExpression	0		8023561	19					
ANR	8023599	PrimaryExpression	0		8023561	20					
ANR	8023600	PrimaryExpression	0		8023561	21					
ANR	8023601	PrimaryExpression	0		8023561	22					
ANR	8023602	PrimaryExpression	0		8023561	23					
ANR	8023603	ForStatement	for ( i = start ; i < num + start ; i ++ )		8023561	3					
ANR	8023604	ForInit	i = start ;	275:9:9669:9678	8023561	0	True				
ANR	8023605	AssignmentExpression	i = start		8023561	0		=			
ANR	8023606	Identifier	i		8023561	0					
ANR	8023607	Identifier	start		8023561	1					
ANR	8023608	Condition	i < num + start	275:20:9680:9694	8023561	1	True				
ANR	8023609	RelationalExpression	i < num + start		8023561	0		<			
ANR	8023610	Identifier	i		8023561	0					
ANR	8023611	AdditiveExpression	num + start		8023561	1		+			
ANR	8023612	Identifier	num		8023561	0					
ANR	8023613	Identifier	start		8023561	1					
ANR	8023614	PostIncDecOperationExpression	i ++	275:37:9697:9699	8023561	2	True				
ANR	8023615	Identifier	i		8023561	0					
ANR	8023616	IncDec	++		8023561	1					
ANR	8023617	CompoundStatement		15:42:524:524	8023561	3					
ANR	8023618	ExpressionStatement	palette [ 3 * i ] = cmy_default [ 3 * porder [ i ] ]	276:8:9712:9755	8023561	0	True				
ANR	8023619	AssignmentExpression	palette [ 3 * i ] = cmy_default [ 3 * porder [ i ] ]		8023561	0		=			
ANR	8023620	ArrayIndexing	palette [ 3 * i ]		8023561	0					
ANR	8023621	Identifier	palette		8023561	0					
ANR	8023622	MultiplicativeExpression	3 * i		8023561	1		*			
ANR	8023623	PrimaryExpression	3		8023561	0					
ANR	8023624	Identifier	i		8023561	1					
ANR	8023625	ArrayIndexing	cmy_default [ 3 * porder [ i ] ]		8023561	1					
ANR	8023626	Identifier	cmy_default		8023561	0					
ANR	8023627	MultiplicativeExpression	3 * porder [ i ]		8023561	1		*			
ANR	8023628	PrimaryExpression	3		8023561	0					
ANR	8023629	ArrayIndexing	porder [ i ]		8023561	1					
ANR	8023630	Identifier	porder		8023561	0					
ANR	8023631	Identifier	i		8023561	1					
ANR	8023632	ExpressionStatement	palette [ 3 * i + 1 ] = cmy_default [ 3 * porder [ i ] + 1 ]	277:8:9765:9816	8023561	1	True				
ANR	8023633	AssignmentExpression	palette [ 3 * i + 1 ] = cmy_default [ 3 * porder [ i ] + 1 ]		8023561	0		=			
ANR	8023634	ArrayIndexing	palette [ 3 * i + 1 ]		8023561	0					
ANR	8023635	Identifier	palette		8023561	0					
ANR	8023636	AdditiveExpression	3 * i + 1		8023561	1		+			
ANR	8023637	MultiplicativeExpression	3 * i		8023561	0		*			
ANR	8023638	PrimaryExpression	3		8023561	0					
ANR	8023639	Identifier	i		8023561	1					
ANR	8023640	PrimaryExpression	1		8023561	1					
ANR	8023641	ArrayIndexing	cmy_default [ 3 * porder [ i ] + 1 ]		8023561	1					
ANR	8023642	Identifier	cmy_default		8023561	0					
ANR	8023643	AdditiveExpression	3 * porder [ i ] + 1		8023561	1		+			
ANR	8023644	MultiplicativeExpression	3 * porder [ i ]		8023561	0		*			
ANR	8023645	PrimaryExpression	3		8023561	0					
ANR	8023646	ArrayIndexing	porder [ i ]		8023561	1					
ANR	8023647	Identifier	porder		8023561	0					
ANR	8023648	Identifier	i		8023561	1					
ANR	8023649	PrimaryExpression	1		8023561	1					
ANR	8023650	ExpressionStatement	palette [ 3 * i + 2 ] = cmy_default [ 3 * porder [ i ] + 2 ]	278:8:9826:9877	8023561	2	True				
ANR	8023651	AssignmentExpression	palette [ 3 * i + 2 ] = cmy_default [ 3 * porder [ i ] + 2 ]		8023561	0		=			
ANR	8023652	ArrayIndexing	palette [ 3 * i + 2 ]		8023561	0					
ANR	8023653	Identifier	palette		8023561	0					
ANR	8023654	AdditiveExpression	3 * i + 2		8023561	1		+			
ANR	8023655	MultiplicativeExpression	3 * i		8023561	0		*			
ANR	8023656	PrimaryExpression	3		8023561	0					
ANR	8023657	Identifier	i		8023561	1					
ANR	8023658	PrimaryExpression	2		8023561	1					
ANR	8023659	ArrayIndexing	cmy_default [ 3 * porder [ i ] + 2 ]		8023561	1					
ANR	8023660	Identifier	cmy_default		8023561	0					
ANR	8023661	AdditiveExpression	3 * porder [ i ] + 2		8023561	1		+			
ANR	8023662	MultiplicativeExpression	3 * porder [ i ]		8023561	0		*			
ANR	8023663	PrimaryExpression	3		8023561	0					
ANR	8023664	ArrayIndexing	porder [ i ]		8023561	1					
ANR	8023665	Identifier	porder		8023561	0					
ANR	8023666	Identifier	i		8023561	1					
ANR	8023667	PrimaryExpression	2		8023561	1					
ANR	8023668	ReturnType	static void		8023561	1					
ANR	8023669	Identifier	set_dev_specific_default_palette		8023561	2					
ANR	8023670	ParameterList	"pcl_cs_base_t * pbase , byte * palette , const byte * porder , int start , int num"		8023561	3					
ANR	8023671	Parameter	pcl_cs_base_t * pbase	258:33:9004:9024	8023561	0	True				
ANR	8023672	ParameterType	pcl_cs_base_t *		8023561	0					
ANR	8023673	Identifier	pbase		8023561	1					
ANR	8023674	Parameter	byte * palette	259:33:9087:9100	8023561	1	True				
ANR	8023675	ParameterType	byte *		8023561	0					
ANR	8023676	Identifier	palette		8023561	1					
ANR	8023677	Parameter	const byte * porder	260:33:9136:9154	8023561	2	True				
ANR	8023678	ParameterType	const byte *		8023561	0					
ANR	8023679	Identifier	porder		8023561	1					
ANR	8023680	Parameter	int start	260:54:9157:9165	8023561	3	True				
ANR	8023681	ParameterType	int		8023561	0					
ANR	8023682	Identifier	start		8023561	1					
ANR	8023683	Parameter	int num	260:65:9168:9174	8023561	4	True				
ANR	8023684	ParameterType	int		8023561	0					
ANR	8023685	Identifier	num		8023561	1					
ANR	8023686	CFGEntryNode	ENTRY		8023561		True				
ANR	8023687	CFGExitNode	EXIT		8023561		True				
ANR	8023688	Symbol	* * i		8023561						
ANR	8023689	Symbol	cmy_default		8023561						
ANR	8023690	Symbol	* palette		8023561						
ANR	8023691	Symbol	num		8023561						
ANR	8023692	Symbol	start		8023561						
ANR	8023693	Symbol	i		8023561						
ANR	8023694	Symbol	* * porder		8023561						
ANR	8023695	Symbol	porder		8023561						
ANR	8023696	Symbol	* i		8023561						
ANR	8023697	Symbol	pbase		8023561						
ANR	8023698	Symbol	palette		8023561						
ANR	8023699	Symbol	* porder		8023561						
ANR	8023700	Symbol	* cmy_default		8023561						
ANR	8023701	Function	set_colmet_default_palette	293:0:10368:11391							
ANR	8023702	FunctionDef	"set_colmet_default_palette (pcl_cs_base_t * pbase , byte * palette , const byte * porder , int start , int num)"		8023701	0					
ANR	8023703	CompoundStatement		297:0:10541:11391	8023701	0					
ANR	8023704	IdentifierDeclStatement	float * pmin = pbase -> client_data . min_val ;	298:4:10547:10587	8023701	0	True				
ANR	8023705	IdentifierDecl	* pmin = pbase -> client_data . min_val		8023701	0					
ANR	8023706	IdentifierDeclType	float *		8023701	0					
ANR	8023707	Identifier	pmin		8023701	1					
ANR	8023708	AssignmentExpression	* pmin = pbase -> client_data . min_val		8023701	2		=			
ANR	8023709	Identifier	pmin		8023701	0					
ANR	8023710	MemberAccess	pbase -> client_data . min_val		8023701	1					
ANR	8023711	PtrMemberAccess	pbase -> client_data		8023701	0					
ANR	8023712	Identifier	pbase		8023701	0					
ANR	8023713	Identifier	client_data		8023701	1					
ANR	8023714	Identifier	min_val		8023701	1					
ANR	8023715	IdentifierDeclStatement	float * prange = pbase -> client_data . range ;	299:4:10593:10633	8023701	1	True				
ANR	8023716	IdentifierDecl	* prange = pbase -> client_data . range		8023701	0					
ANR	8023717	IdentifierDeclType	float *		8023701	0					
ANR	8023718	Identifier	prange		8023701	1					
ANR	8023719	AssignmentExpression	* prange = pbase -> client_data . range		8023701	2		=			
ANR	8023720	Identifier	prange		8023701	0					
ANR	8023721	MemberAccess	pbase -> client_data . range		8023701	1					
ANR	8023722	PtrMemberAccess	pbase -> client_data		8023701	0					
ANR	8023723	Identifier	pbase		8023701	0					
ANR	8023724	Identifier	client_data		8023701	1					
ANR	8023725	Identifier	range		8023701	1					
ANR	8023726	IdentifierDeclStatement	int i ;	300:4:10639:10644	8023701	2	True				
ANR	8023727	IdentifierDecl	i		8023701	0					
ANR	8023728	IdentifierDeclType	int		8023701	0					
ANR	8023729	Identifier	i		8023701	1					
ANR	8023730	Statement	static	302:4:10651:10656	8023701	3	True				
ANR	8023731	IdentifierDeclStatement	"const float colmet_default [ 8 * 3 ] = { 1.0 , 1.0 , 1.0 , 0.0 , 1.0 , 1.0 , 1.0 , 0.0 , 1.0 , 0.0 , 0.0 , 1.0 , 1.0 , 1.0 , 0.0 , 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 } ;"	302:11:10658:11052	8023701	4	True				
ANR	8023732	IdentifierDecl	"colmet_default [ 8 * 3 ] = { 1.0 , 1.0 , 1.0 , 0.0 , 1.0 , 1.0 , 1.0 , 0.0 , 1.0 , 0.0 , 0.0 , 1.0 , 1.0 , 1.0 , 0.0 , 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 }"		8023701	0					
ANR	8023733	IdentifierDeclType	const float [ 8 * 3 ]		8023701	0					
ANR	8023734	Identifier	colmet_default		8023701	1					
ANR	8023735	MultiplicativeExpression	8 * 3		8023701	2		*			
ANR	8023736	PrimaryExpression	8		8023701	0					
ANR	8023737	PrimaryExpression	3		8023701	1					
ANR	8023738	AssignmentExpression	"colmet_default [ 8 * 3 ] = { 1.0 , 1.0 , 1.0 , 0.0 , 1.0 , 1.0 , 1.0 , 0.0 , 1.0 , 0.0 , 0.0 , 1.0 , 1.0 , 1.0 , 0.0 , 0.0 , 1.0 , 0.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 }"		8023701	3		=			
ANR	8023739	Identifier	colmet_default		8023701	0					
ANR	8023740	InitializerList	1.0		8023701	1					
ANR	8023741	PrimaryExpression	1.0		8023701	0					
ANR	8023742	PrimaryExpression	1.0		8023701	1					
ANR	8023743	PrimaryExpression	1.0		8023701	2					
ANR	8023744	PrimaryExpression	0.0		8023701	3					
ANR	8023745	PrimaryExpression	1.0		8023701	4					
ANR	8023746	PrimaryExpression	1.0		8023701	5					
ANR	8023747	PrimaryExpression	1.0		8023701	6					
ANR	8023748	PrimaryExpression	0.0		8023701	7					
ANR	8023749	PrimaryExpression	1.0		8023701	8					
ANR	8023750	PrimaryExpression	0.0		8023701	9					
ANR	8023751	PrimaryExpression	0.0		8023701	10					
ANR	8023752	PrimaryExpression	1.0		8023701	11					
ANR	8023753	PrimaryExpression	1.0		8023701	12					
ANR	8023754	PrimaryExpression	1.0		8023701	13					
ANR	8023755	PrimaryExpression	0.0		8023701	14					
ANR	8023756	PrimaryExpression	0.0		8023701	15					
ANR	8023757	PrimaryExpression	1.0		8023701	16					
ANR	8023758	PrimaryExpression	0.0		8023701	17					
ANR	8023759	PrimaryExpression	1.0		8023701	18					
ANR	8023760	PrimaryExpression	0.0		8023701	19					
ANR	8023761	PrimaryExpression	0.0		8023701	20					
ANR	8023762	PrimaryExpression	0.0		8023701	21					
ANR	8023763	PrimaryExpression	0.0		8023701	22					
ANR	8023764	PrimaryExpression	0.0		8023701	23					
ANR	8023765	ForStatement	for ( i = start ; i < start + num ; i ++ )		8023701	5					
ANR	8023766	ForInit	i = start ;	314:9:11139:11148	8023701	0	True				
ANR	8023767	AssignmentExpression	i = start		8023701	0		=			
ANR	8023768	Identifier	i		8023701	0					
ANR	8023769	Identifier	start		8023701	1					
ANR	8023770	Condition	i < start + num	314:20:11150:11164	8023701	1	True				
ANR	8023771	RelationalExpression	i < start + num		8023701	0		<			
ANR	8023772	Identifier	i		8023701	0					
ANR	8023773	AdditiveExpression	start + num		8023701	1		+			
ANR	8023774	Identifier	start		8023701	0					
ANR	8023775	Identifier	num		8023701	1					
ANR	8023776	PostIncDecOperationExpression	i ++	314:37:11167:11169	8023701	2	True				
ANR	8023777	Identifier	i		8023701	0					
ANR	8023778	IncDec	++		8023701	1					
ANR	8023779	CompoundStatement		21:8:691:741	8023701	3					
ANR	8023780	IdentifierDeclStatement	int j ;	315:8:11182:11187	8023701	0	True				
ANR	8023781	IdentifierDecl	j		8023701	0					
ANR	8023782	IdentifierDeclType	int		8023701	0					
ANR	8023783	Identifier	j		8023701	1					
ANR	8023784	IdentifierDeclStatement	byte * pb = palette + 3 * i ;	316:8:11197:11223	8023701	1	True				
ANR	8023785	IdentifierDecl	* pb = palette + 3 * i		8023701	0					
ANR	8023786	IdentifierDeclType	byte *		8023701	0					
ANR	8023787	Identifier	pb		8023701	1					
ANR	8023788	AssignmentExpression	* pb = palette + 3 * i		8023701	2		=			
ANR	8023789	Identifier	pb		8023701	0					
ANR	8023790	AdditiveExpression	palette + 3 * i		8023701	1		+			
ANR	8023791	Identifier	palette		8023701	0					
ANR	8023792	MultiplicativeExpression	3 * i		8023701	1		*			
ANR	8023793	PrimaryExpression	3		8023701	0					
ANR	8023794	Identifier	i		8023701	1					
ANR	8023795	IdentifierDeclStatement	const float * pdef = colmet_default + 3 * porder [ i ] ;	317:8:11233:11283	8023701	2	True				
ANR	8023796	IdentifierDecl	* pdef = colmet_default + 3 * porder [ i ]		8023701	0					
ANR	8023797	IdentifierDeclType	const float *		8023701	0					
ANR	8023798	Identifier	pdef		8023701	1					
ANR	8023799	AssignmentExpression	* pdef = colmet_default + 3 * porder [ i ]		8023701	2		=			
ANR	8023800	Identifier	pdef		8023701	0					
ANR	8023801	AdditiveExpression	colmet_default + 3 * porder [ i ]		8023701	1		+			
ANR	8023802	Identifier	colmet_default		8023701	0					
ANR	8023803	MultiplicativeExpression	3 * porder [ i ]		8023701	1		*			
ANR	8023804	PrimaryExpression	3		8023701	0					
ANR	8023805	ArrayIndexing	porder [ i ]		8023701	1					
ANR	8023806	Identifier	porder		8023701	0					
ANR	8023807	Identifier	i		8023701	1					
ANR	8023808	ForStatement	for ( j = 0 ; j < 3 ; j ++ )		8023701	3					
ANR	8023809	ForInit	j = 0 ;	319:13:11299:11304	8023701	0	True				
ANR	8023810	AssignmentExpression	j = 0		8023701	0		=			
ANR	8023811	Identifier	j		8023701	0					
ANR	8023812	PrimaryExpression	0		8023701	1					
ANR	8023813	Condition	j < 3	319:20:11306:11310	8023701	1	True				
ANR	8023814	RelationalExpression	j < 3		8023701	0		<			
ANR	8023815	Identifier	j		8023701	0					
ANR	8023816	PrimaryExpression	3		8023701	1					
ANR	8023817	PostIncDecOperationExpression	j ++	319:27:11313:11315	8023701	2	True				
ANR	8023818	Identifier	j		8023701	0					
ANR	8023819	IncDec	++		8023701	1					
ANR	8023820	ExpressionStatement	"pb [ j ] = convert_comp_val ( pdef [ j ] , pmin [ j ] , prange [ j ] )"	320:12:11330:11383	8023701	3	True				
ANR	8023821	AssignmentExpression	"pb [ j ] = convert_comp_val ( pdef [ j ] , pmin [ j ] , prange [ j ] )"		8023701	0		=			
ANR	8023822	ArrayIndexing	pb [ j ]		8023701	0					
ANR	8023823	Identifier	pb		8023701	0					
ANR	8023824	Identifier	j		8023701	1					
ANR	8023825	CallExpression	"convert_comp_val ( pdef [ j ] , pmin [ j ] , prange [ j ] )"		8023701	1					
ANR	8023826	Callee	convert_comp_val		8023701	0					
ANR	8023827	Identifier	convert_comp_val		8023701	0					
ANR	8023828	ArgumentList	pdef [ j ]		8023701	1					
ANR	8023829	Argument	pdef [ j ]		8023701	0					
ANR	8023830	ArrayIndexing	pdef [ j ]		8023701	0					
ANR	8023831	Identifier	pdef		8023701	0					
ANR	8023832	Identifier	j		8023701	1					
ANR	8023833	Argument	pmin [ j ]		8023701	1					
ANR	8023834	ArrayIndexing	pmin [ j ]		8023701	0					
ANR	8023835	Identifier	pmin		8023701	0					
ANR	8023836	Identifier	j		8023701	1					
ANR	8023837	Argument	prange [ j ]		8023701	2					
ANR	8023838	ArrayIndexing	prange [ j ]		8023701	0					
ANR	8023839	Identifier	prange		8023701	0					
ANR	8023840	Identifier	j		8023701	1					
ANR	8023841	ReturnType	static void		8023701	1					
ANR	8023842	Identifier	set_colmet_default_palette		8023701	2					
ANR	8023843	ParameterList	"pcl_cs_base_t * pbase , byte * palette , const byte * porder , int start , int num"		8023701	3					
ANR	8023844	Parameter	pcl_cs_base_t * pbase	294:27:10407:10427	8023701	0	True				
ANR	8023845	ParameterType	pcl_cs_base_t *		8023701	0					
ANR	8023846	Identifier	pbase		8023701	1					
ANR	8023847	Parameter	byte * palette	295:27:10457:10470	8023701	1	True				
ANR	8023848	ParameterType	byte *		8023701	0					
ANR	8023849	Identifier	palette		8023701	1					
ANR	8023850	Parameter	const byte * porder	296:27:10500:10518	8023701	2	True				
ANR	8023851	ParameterType	const byte *		8023701	0					
ANR	8023852	Identifier	porder		8023701	1					
ANR	8023853	Parameter	int start	296:48:10521:10529	8023701	3	True				
ANR	8023854	ParameterType	int		8023701	0					
ANR	8023855	Identifier	start		8023701	1					
ANR	8023856	Parameter	int num	296:59:10532:10538	8023701	4	True				
ANR	8023857	ParameterType	int		8023701	0					
ANR	8023858	Identifier	num		8023701	1					
ANR	8023859	CFGEntryNode	ENTRY		8023701		True				
ANR	8023860	CFGExitNode	EXIT		8023701		True				
ANR	8023861	Symbol	pdef		8023701						
ANR	8023862	Symbol	num		8023701						
ANR	8023863	Symbol	start		8023701						
ANR	8023864	Symbol	* prange		8023701						
ANR	8023865	Symbol	i		8023701						
ANR	8023866	Symbol	* pdef		8023701						
ANR	8023867	Symbol	j		8023701						
ANR	8023868	Symbol	convert_comp_val		8023701						
ANR	8023869	Symbol	porder		8023701						
ANR	8023870	Symbol	pbase -> client_data		8023701						
ANR	8023871	Symbol	* pbase		8023701						
ANR	8023872	Symbol	pb		8023701						
ANR	8023873	Symbol	* i		8023701						
ANR	8023874	Symbol	pbase -> client_data . min_val		8023701						
ANR	8023875	Symbol	* j		8023701						
ANR	8023876	Symbol	pmin		8023701						
ANR	8023877	Symbol	colmet_default		8023701						
ANR	8023878	Symbol	pbase		8023701						
ANR	8023879	Symbol	palette		8023701						
ANR	8023880	Symbol	pbase -> client_data . range		8023701						
ANR	8023881	Symbol	* pmin		8023701						
ANR	8023882	Symbol	* pb		8023701						
ANR	8023883	Symbol	* porder		8023701						
ANR	8023884	Symbol	prange		8023701						
ANR	8023885	Function	set_CIELab_default_palette	340:0:12248:13190							
ANR	8023886	FunctionDef	"set_CIELab_default_palette (pcl_cs_base_t * pbase , byte * palette , const byte * porder , int start , int num)"		8023885	0					
ANR	8023887	CompoundStatement		344:0:12421:13190	8023885	0					
ANR	8023888	IdentifierDeclStatement	float * pmin = pbase -> client_data . min_val ;	345:4:12427:12467	8023885	0	True				
ANR	8023889	IdentifierDecl	* pmin = pbase -> client_data . min_val		8023885	0					
ANR	8023890	IdentifierDeclType	float *		8023885	0					
ANR	8023891	Identifier	pmin		8023885	1					
ANR	8023892	AssignmentExpression	* pmin = pbase -> client_data . min_val		8023885	2		=			
ANR	8023893	Identifier	pmin		8023885	0					
ANR	8023894	MemberAccess	pbase -> client_data . min_val		8023885	1					
ANR	8023895	PtrMemberAccess	pbase -> client_data		8023885	0					
ANR	8023896	Identifier	pbase		8023885	0					
ANR	8023897	Identifier	client_data		8023885	1					
ANR	8023898	Identifier	min_val		8023885	1					
ANR	8023899	IdentifierDeclStatement	float * prange = pbase -> client_data . range ;	346:4:12473:12513	8023885	1	True				
ANR	8023900	IdentifierDecl	* prange = pbase -> client_data . range		8023885	0					
ANR	8023901	IdentifierDeclType	float *		8023885	0					
ANR	8023902	Identifier	prange		8023885	1					
ANR	8023903	AssignmentExpression	* prange = pbase -> client_data . range		8023885	2		=			
ANR	8023904	Identifier	prange		8023885	0					
ANR	8023905	MemberAccess	pbase -> client_data . range		8023885	1					
ANR	8023906	PtrMemberAccess	pbase -> client_data		8023885	0					
ANR	8023907	Identifier	pbase		8023885	0					
ANR	8023908	Identifier	client_data		8023885	1					
ANR	8023909	Identifier	range		8023885	1					
ANR	8023910	IdentifierDeclStatement	int i ;	347:4:12519:12524	8023885	2	True				
ANR	8023911	IdentifierDecl	i		8023885	0					
ANR	8023912	IdentifierDeclType	int		8023885	0					
ANR	8023913	Identifier	i		8023885	1					
ANR	8023914	Statement	static	349:4:12531:12536	8023885	3	True				
ANR	8023915	IdentifierDeclStatement	"const float lab_default [ 8 * 3 ] = { 100.0f , 0.0f , 0.0f , 91.1f , - 43.4f , - 14.1f , 61.6f , 91.0f , - 59.2f , 35.3f , 72.0f , - 100.0f , 96.6f , - 21.3f , 95.4f , 87.0f , - 80.7f , 84.0f , 53.2f , 74.4f , 67.7f , 0.0f , 0.0f , 0.0f } ;"	349:11:12538:12929	8023885	4	True				
ANR	8023916	IdentifierDecl	"lab_default [ 8 * 3 ] = { 100.0f , 0.0f , 0.0f , 91.1f , - 43.4f , - 14.1f , 61.6f , 91.0f , - 59.2f , 35.3f , 72.0f , - 100.0f , 96.6f , - 21.3f , 95.4f , 87.0f , - 80.7f , 84.0f , 53.2f , 74.4f , 67.7f , 0.0f , 0.0f , 0.0f }"		8023885	0					
ANR	8023917	IdentifierDeclType	const float [ 8 * 3 ]		8023885	0					
ANR	8023918	Identifier	lab_default		8023885	1					
ANR	8023919	MultiplicativeExpression	8 * 3		8023885	2		*			
ANR	8023920	PrimaryExpression	8		8023885	0					
ANR	8023921	PrimaryExpression	3		8023885	1					
ANR	8023922	AssignmentExpression	"lab_default [ 8 * 3 ] = { 100.0f , 0.0f , 0.0f , 91.1f , - 43.4f , - 14.1f , 61.6f , 91.0f , - 59.2f , 35.3f , 72.0f , - 100.0f , 96.6f , - 21.3f , 95.4f , 87.0f , - 80.7f , 84.0f , 53.2f , 74.4f , 67.7f , 0.0f , 0.0f , 0.0f }"		8023885	3		=			
ANR	8023923	Identifier	lab_default		8023885	0					
ANR	8023924	InitializerList	100.0f		8023885	1					
ANR	8023925	PrimaryExpression	100.0f		8023885	0					
ANR	8023926	PrimaryExpression	0.0f		8023885	1					
ANR	8023927	PrimaryExpression	0.0f		8023885	2					
ANR	8023928	PrimaryExpression	91.1f		8023885	3					
ANR	8023929	UnaryOperationExpression	- 43.4f		8023885	4					
ANR	8023930	UnaryOperator	-		8023885	0					
ANR	8023931	PrimaryExpression	43.4f		8023885	1					
ANR	8023932	UnaryOperationExpression	- 14.1f		8023885	5					
ANR	8023933	UnaryOperator	-		8023885	0					
ANR	8023934	PrimaryExpression	14.1f		8023885	1					
ANR	8023935	PrimaryExpression	61.6f		8023885	6					
ANR	8023936	PrimaryExpression	91.0f		8023885	7					
ANR	8023937	UnaryOperationExpression	- 59.2f		8023885	8					
ANR	8023938	UnaryOperator	-		8023885	0					
ANR	8023939	PrimaryExpression	59.2f		8023885	1					
ANR	8023940	PrimaryExpression	35.3f		8023885	9					
ANR	8023941	PrimaryExpression	72.0f		8023885	10					
ANR	8023942	UnaryOperationExpression	- 100.0f		8023885	11					
ANR	8023943	UnaryOperator	-		8023885	0					
ANR	8023944	PrimaryExpression	100.0f		8023885	1					
ANR	8023945	PrimaryExpression	96.6f		8023885	12					
ANR	8023946	UnaryOperationExpression	- 21.3f		8023885	13					
ANR	8023947	UnaryOperator	-		8023885	0					
ANR	8023948	PrimaryExpression	21.3f		8023885	1					
ANR	8023949	PrimaryExpression	95.4f		8023885	14					
ANR	8023950	PrimaryExpression	87.0f		8023885	15					
ANR	8023951	UnaryOperationExpression	- 80.7f		8023885	16					
ANR	8023952	UnaryOperator	-		8023885	0					
ANR	8023953	PrimaryExpression	80.7f		8023885	1					
ANR	8023954	PrimaryExpression	84.0f		8023885	17					
ANR	8023955	PrimaryExpression	53.2f		8023885	18					
ANR	8023956	PrimaryExpression	74.4f		8023885	19					
ANR	8023957	PrimaryExpression	67.7f		8023885	20					
ANR	8023958	PrimaryExpression	0.0f		8023885	21					
ANR	8023959	PrimaryExpression	0.0f		8023885	22					
ANR	8023960	PrimaryExpression	0.0f		8023885	23					
ANR	8023961	ForStatement	for ( i = start ; i < start + num ; i ++ )		8023885	5					
ANR	8023962	ForInit	i = start ;	360:9:12941:12950	8023885	0	True				
ANR	8023963	AssignmentExpression	i = start		8023885	0		=			
ANR	8023964	Identifier	i		8023885	0					
ANR	8023965	Identifier	start		8023885	1					
ANR	8023966	Condition	i < start + num	360:20:12952:12966	8023885	1	True				
ANR	8023967	RelationalExpression	i < start + num		8023885	0		<			
ANR	8023968	Identifier	i		8023885	0					
ANR	8023969	AdditiveExpression	start + num		8023885	1		+			
ANR	8023970	Identifier	start		8023885	0					
ANR	8023971	Identifier	num		8023885	1					
ANR	8023972	PostIncDecOperationExpression	i ++	360:37:12969:12971	8023885	2	True				
ANR	8023973	Identifier	i		8023885	0					
ANR	8023974	IncDec	++		8023885	1					
ANR	8023975	CompoundStatement		20:8:613:660	8023885	3					
ANR	8023976	IdentifierDeclStatement	int j ;	361:8:12984:12989	8023885	0	True				
ANR	8023977	IdentifierDecl	j		8023885	0					
ANR	8023978	IdentifierDeclType	int		8023885	0					
ANR	8023979	Identifier	j		8023885	1					
ANR	8023980	IdentifierDeclStatement	byte * pb = palette + 3 * i ;	362:8:12999:13025	8023885	1	True				
ANR	8023981	IdentifierDecl	* pb = palette + 3 * i		8023885	0					
ANR	8023982	IdentifierDeclType	byte *		8023885	0					
ANR	8023983	Identifier	pb		8023885	1					
ANR	8023984	AssignmentExpression	* pb = palette + 3 * i		8023885	2		=			
ANR	8023985	Identifier	pb		8023885	0					
ANR	8023986	AdditiveExpression	palette + 3 * i		8023885	1		+			
ANR	8023987	Identifier	palette		8023885	0					
ANR	8023988	MultiplicativeExpression	3 * i		8023885	1		*			
ANR	8023989	PrimaryExpression	3		8023885	0					
ANR	8023990	Identifier	i		8023885	1					
ANR	8023991	IdentifierDeclStatement	const float * pdef = lab_default + 3 * porder [ i ] ;	363:8:13035:13082	8023885	2	True				
ANR	8023992	IdentifierDecl	* pdef = lab_default + 3 * porder [ i ]		8023885	0					
ANR	8023993	IdentifierDeclType	const float *		8023885	0					
ANR	8023994	Identifier	pdef		8023885	1					
ANR	8023995	AssignmentExpression	* pdef = lab_default + 3 * porder [ i ]		8023885	2		=			
ANR	8023996	Identifier	pdef		8023885	0					
ANR	8023997	AdditiveExpression	lab_default + 3 * porder [ i ]		8023885	1		+			
ANR	8023998	Identifier	lab_default		8023885	0					
ANR	8023999	MultiplicativeExpression	3 * porder [ i ]		8023885	1		*			
ANR	8024000	PrimaryExpression	3		8023885	0					
ANR	8024001	ArrayIndexing	porder [ i ]		8023885	1					
ANR	8024002	Identifier	porder		8023885	0					
ANR	8024003	Identifier	i		8023885	1					
ANR	8024004	ForStatement	for ( j = 0 ; j < 3 ; j ++ )		8023885	3					
ANR	8024005	ForInit	j = 0 ;	365:13:13098:13103	8023885	0	True				
ANR	8024006	AssignmentExpression	j = 0		8023885	0		=			
ANR	8024007	Identifier	j		8023885	0					
ANR	8024008	PrimaryExpression	0		8023885	1					
ANR	8024009	Condition	j < 3	365:20:13105:13109	8023885	1	True				
ANR	8024010	RelationalExpression	j < 3		8023885	0		<			
ANR	8024011	Identifier	j		8023885	0					
ANR	8024012	PrimaryExpression	3		8023885	1					
ANR	8024013	PostIncDecOperationExpression	j ++	365:27:13112:13114	8023885	2	True				
ANR	8024014	Identifier	j		8023885	0					
ANR	8024015	IncDec	++		8023885	1					
ANR	8024016	ExpressionStatement	"pb [ j ] = convert_comp_val ( pdef [ j ] , pmin [ j ] , prange [ j ] )"	366:12:13129:13182	8023885	3	True				
ANR	8024017	AssignmentExpression	"pb [ j ] = convert_comp_val ( pdef [ j ] , pmin [ j ] , prange [ j ] )"		8023885	0		=			
ANR	8024018	ArrayIndexing	pb [ j ]		8023885	0					
ANR	8024019	Identifier	pb		8023885	0					
ANR	8024020	Identifier	j		8023885	1					
ANR	8024021	CallExpression	"convert_comp_val ( pdef [ j ] , pmin [ j ] , prange [ j ] )"		8023885	1					
ANR	8024022	Callee	convert_comp_val		8023885	0					
ANR	8024023	Identifier	convert_comp_val		8023885	0					
ANR	8024024	ArgumentList	pdef [ j ]		8023885	1					
ANR	8024025	Argument	pdef [ j ]		8023885	0					
ANR	8024026	ArrayIndexing	pdef [ j ]		8023885	0					
ANR	8024027	Identifier	pdef		8023885	0					
ANR	8024028	Identifier	j		8023885	1					
ANR	8024029	Argument	pmin [ j ]		8023885	1					
ANR	8024030	ArrayIndexing	pmin [ j ]		8023885	0					
ANR	8024031	Identifier	pmin		8023885	0					
ANR	8024032	Identifier	j		8023885	1					
ANR	8024033	Argument	prange [ j ]		8023885	2					
ANR	8024034	ArrayIndexing	prange [ j ]		8023885	0					
ANR	8024035	Identifier	prange		8023885	0					
ANR	8024036	Identifier	j		8023885	1					
ANR	8024037	ReturnType	static void		8023885	1					
ANR	8024038	Identifier	set_CIELab_default_palette		8023885	2					
ANR	8024039	ParameterList	"pcl_cs_base_t * pbase , byte * palette , const byte * porder , int start , int num"		8023885	3					
ANR	8024040	Parameter	pcl_cs_base_t * pbase	341:27:12287:12307	8023885	0	True				
ANR	8024041	ParameterType	pcl_cs_base_t *		8023885	0					
ANR	8024042	Identifier	pbase		8023885	1					
ANR	8024043	Parameter	byte * palette	342:27:12337:12350	8023885	1	True				
ANR	8024044	ParameterType	byte *		8023885	0					
ANR	8024045	Identifier	palette		8023885	1					
ANR	8024046	Parameter	const byte * porder	343:27:12380:12398	8023885	2	True				
ANR	8024047	ParameterType	const byte *		8023885	0					
ANR	8024048	Identifier	porder		8023885	1					
ANR	8024049	Parameter	int start	343:48:12401:12409	8023885	3	True				
ANR	8024050	ParameterType	int		8023885	0					
ANR	8024051	Identifier	start		8023885	1					
ANR	8024052	Parameter	int num	343:59:12412:12418	8023885	4	True				
ANR	8024053	ParameterType	int		8023885	0					
ANR	8024054	Identifier	num		8023885	1					
ANR	8024055	CFGEntryNode	ENTRY		8023885		True				
ANR	8024056	CFGExitNode	EXIT		8023885		True				
ANR	8024057	Symbol	pdef		8023885						
ANR	8024058	Symbol	num		8023885						
ANR	8024059	Symbol	start		8023885						
ANR	8024060	Symbol	* prange		8023885						
ANR	8024061	Symbol	i		8023885						
ANR	8024062	Symbol	* pdef		8023885						
ANR	8024063	Symbol	lab_default		8023885						
ANR	8024064	Symbol	j		8023885						
ANR	8024065	Symbol	convert_comp_val		8023885						
ANR	8024066	Symbol	porder		8023885						
ANR	8024067	Symbol	pbase -> client_data		8023885						
ANR	8024068	Symbol	* pbase		8023885						
ANR	8024069	Symbol	pb		8023885						
ANR	8024070	Symbol	* i		8023885						
ANR	8024071	Symbol	pbase -> client_data . min_val		8023885						
ANR	8024072	Symbol	* j		8023885						
ANR	8024073	Symbol	pmin		8023885						
ANR	8024074	Symbol	pbase		8023885						
ANR	8024075	Symbol	palette		8023885						
ANR	8024076	Symbol	pbase -> client_data . range		8023885						
ANR	8024077	Symbol	* pb		8023885						
ANR	8024078	Symbol	* pmin		8023885						
ANR	8024079	Symbol	* porder		8023885						
ANR	8024080	Symbol	prange		8023885						
ANR	8024081	Function	set_lumchrom_default_palette	382:0:13748:14984							
ANR	8024082	FunctionDef	"set_lumchrom_default_palette (pcl_cs_base_t * pbase , byte * palette , const byte * porder , int start , int num)"		8024081	0					
ANR	8024083	CompoundStatement		386:0:13927:14984	8024081	0					
ANR	8024084	IdentifierDeclStatement	gs_matrix3 * pxfm = gs_cie_abc_MatrixABC ( pbase -> pcspace ) ;	387:4:13933:13988	8024081	0	True				
ANR	8024085	IdentifierDecl	* pxfm = gs_cie_abc_MatrixABC ( pbase -> pcspace )		8024081	0					
ANR	8024086	IdentifierDeclType	gs_matrix3 *		8024081	0					
ANR	8024087	Identifier	pxfm		8024081	1					
ANR	8024088	AssignmentExpression	* pxfm = gs_cie_abc_MatrixABC ( pbase -> pcspace )		8024081	2		=			
ANR	8024089	Identifier	pxfm		8024081	0					
ANR	8024090	CallExpression	gs_cie_abc_MatrixABC ( pbase -> pcspace )		8024081	1					
ANR	8024091	Callee	gs_cie_abc_MatrixABC		8024081	0					
ANR	8024092	Identifier	gs_cie_abc_MatrixABC		8024081	0					
ANR	8024093	ArgumentList	pbase -> pcspace		8024081	1					
ANR	8024094	Argument	pbase -> pcspace		8024081	0					
ANR	8024095	PtrMemberAccess	pbase -> pcspace		8024081	0					
ANR	8024096	Identifier	pbase		8024081	0					
ANR	8024097	Identifier	pcspace		8024081	1					
ANR	8024098	IdentifierDeclStatement	float * pmin = pbase -> client_data . min_val ;	388:4:13994:14034	8024081	1	True				
ANR	8024099	IdentifierDecl	* pmin = pbase -> client_data . min_val		8024081	0					
ANR	8024100	IdentifierDeclType	float *		8024081	0					
ANR	8024101	Identifier	pmin		8024081	1					
ANR	8024102	AssignmentExpression	* pmin = pbase -> client_data . min_val		8024081	2		=			
ANR	8024103	Identifier	pmin		8024081	0					
ANR	8024104	MemberAccess	pbase -> client_data . min_val		8024081	1					
ANR	8024105	PtrMemberAccess	pbase -> client_data		8024081	0					
ANR	8024106	Identifier	pbase		8024081	0					
ANR	8024107	Identifier	client_data		8024081	1					
ANR	8024108	Identifier	min_val		8024081	1					
ANR	8024109	IdentifierDeclStatement	float * prange = pbase -> client_data . range ;	389:4:14040:14080	8024081	2	True				
ANR	8024110	IdentifierDecl	* prange = pbase -> client_data . range		8024081	0					
ANR	8024111	IdentifierDeclType	float *		8024081	0					
ANR	8024112	Identifier	prange		8024081	1					
ANR	8024113	AssignmentExpression	* prange = pbase -> client_data . range		8024081	2		=			
ANR	8024114	Identifier	prange		8024081	0					
ANR	8024115	MemberAccess	pbase -> client_data . range		8024081	1					
ANR	8024116	PtrMemberAccess	pbase -> client_data		8024081	0					
ANR	8024117	Identifier	pbase		8024081	0					
ANR	8024118	Identifier	client_data		8024081	1					
ANR	8024119	Identifier	range		8024081	1					
ANR	8024120	IdentifierDeclStatement	pcl_mtx3_t tmp_mtx ;	390:4:14086:14104	8024081	3	True				
ANR	8024121	IdentifierDecl	tmp_mtx		8024081	0					
ANR	8024122	IdentifierDeclType	pcl_mtx3_t		8024081	0					
ANR	8024123	Identifier	tmp_mtx		8024081	1					
ANR	8024124	IdentifierDeclStatement	int i ;	391:4:14110:14115	8024081	4	True				
ANR	8024125	IdentifierDecl	i		8024081	0					
ANR	8024126	IdentifierDeclType	int		8024081	0					
ANR	8024127	Identifier	i		8024081	1					
ANR	8024128	Statement	static	393:4:14122:14127	8024081	5	True				
ANR	8024129	IdentifierDeclStatement	"const pcl_vec3_t lumchrom_default [ 8 ] = { { { 1.0 , 1.0 , 1.0 } } , { { 0.0 , 1.0 , 1.0 } } , { { 1.0 , 0.0 , 1.0 } } , { { 0.0 , 0.0 , 1.0 } } , { { 1.0 , 1.0 , 0.0 } } , { { 0.0 , 1.0 , 0.0 } } , { { 1.0 , 0.0 , 0.0 } } , { { 0.0 , 0.0 , 0.0 } } } ;"	393:11:14129:14526	8024081	6	True				
ANR	8024130	IdentifierDecl	"lumchrom_default [ 8 ] = { { { 1.0 , 1.0 , 1.0 } } , { { 0.0 , 1.0 , 1.0 } } , { { 1.0 , 0.0 , 1.0 } } , { { 0.0 , 0.0 , 1.0 } } , { { 1.0 , 1.0 , 0.0 } } , { { 0.0 , 1.0 , 0.0 } } , { { 1.0 , 0.0 , 0.0 } } , { { 0.0 , 0.0 , 0.0 } } }"		8024081	0					
ANR	8024131	IdentifierDeclType	const pcl_vec3_t [ 8 ]		8024081	0					
ANR	8024132	Identifier	lumchrom_default		8024081	1					
ANR	8024133	PrimaryExpression	8		8024081	2					
ANR	8024134	AssignmentExpression	"lumchrom_default [ 8 ] = { { { 1.0 , 1.0 , 1.0 } } , { { 0.0 , 1.0 , 1.0 } } , { { 1.0 , 0.0 , 1.0 } } , { { 0.0 , 0.0 , 1.0 } } , { { 1.0 , 1.0 , 0.0 } } , { { 0.0 , 1.0 , 0.0 } } , { { 1.0 , 0.0 , 0.0 } } , { { 0.0 , 0.0 , 0.0 } } }"		8024081	3		=			
ANR	8024135	Identifier	lumchrom_default		8024081	0					
ANR	8024136	InitializerList	1.0		8024081	1					
ANR	8024137	InitializerList	1.0		8024081	0					
ANR	8024138	InitializerList	1.0		8024081	0					
ANR	8024139	PrimaryExpression	1.0		8024081	0					
ANR	8024140	PrimaryExpression	1.0		8024081	1					
ANR	8024141	PrimaryExpression	1.0		8024081	2					
ANR	8024142	InitializerList	0.0		8024081	1					
ANR	8024143	InitializerList	0.0		8024081	0					
ANR	8024144	PrimaryExpression	0.0		8024081	0					
ANR	8024145	PrimaryExpression	1.0		8024081	1					
ANR	8024146	PrimaryExpression	1.0		8024081	2					
ANR	8024147	InitializerList	1.0		8024081	2					
ANR	8024148	InitializerList	1.0		8024081	0					
ANR	8024149	PrimaryExpression	1.0		8024081	0					
ANR	8024150	PrimaryExpression	0.0		8024081	1					
ANR	8024151	PrimaryExpression	1.0		8024081	2					
ANR	8024152	InitializerList	0.0		8024081	3					
ANR	8024153	InitializerList	0.0		8024081	0					
ANR	8024154	PrimaryExpression	0.0		8024081	0					
ANR	8024155	PrimaryExpression	0.0		8024081	1					
ANR	8024156	PrimaryExpression	1.0		8024081	2					
ANR	8024157	InitializerList	1.0		8024081	4					
ANR	8024158	InitializerList	1.0		8024081	0					
ANR	8024159	PrimaryExpression	1.0		8024081	0					
ANR	8024160	PrimaryExpression	1.0		8024081	1					
ANR	8024161	PrimaryExpression	0.0		8024081	2					
ANR	8024162	InitializerList	0.0		8024081	5					
ANR	8024163	InitializerList	0.0		8024081	0					
ANR	8024164	PrimaryExpression	0.0		8024081	0					
ANR	8024165	PrimaryExpression	1.0		8024081	1					
ANR	8024166	PrimaryExpression	0.0		8024081	2					
ANR	8024167	InitializerList	1.0		8024081	6					
ANR	8024168	InitializerList	1.0		8024081	0					
ANR	8024169	PrimaryExpression	1.0		8024081	0					
ANR	8024170	PrimaryExpression	0.0		8024081	1					
ANR	8024171	PrimaryExpression	0.0		8024081	2					
ANR	8024172	InitializerList	0.0		8024081	7					
ANR	8024173	InitializerList	0.0		8024081	0					
ANR	8024174	PrimaryExpression	0.0		8024081	0					
ANR	8024175	PrimaryExpression	0.0		8024081	1					
ANR	8024176	PrimaryExpression	0.0		8024081	2					
ANR	8024177	ExpressionStatement	"pcl_mtx3_convert_from_gs ( & tmp_mtx , pxfm )"	405:4:14589:14629	8024081	7	True				
ANR	8024178	CallExpression	"pcl_mtx3_convert_from_gs ( & tmp_mtx , pxfm )"		8024081	0					
ANR	8024179	Callee	pcl_mtx3_convert_from_gs		8024081	0					
ANR	8024180	Identifier	pcl_mtx3_convert_from_gs		8024081	0					
ANR	8024181	ArgumentList	& tmp_mtx		8024081	1					
ANR	8024182	Argument	& tmp_mtx		8024081	0					
ANR	8024183	UnaryOperationExpression	& tmp_mtx		8024081	0					
ANR	8024184	UnaryOperator	&		8024081	0					
ANR	8024185	Identifier	tmp_mtx		8024081	1					
ANR	8024186	Argument	pxfm		8024081	1					
ANR	8024187	Identifier	pxfm		8024081	0					
ANR	8024188	ExpressionStatement	"pcl_mtx3_invert ( & tmp_mtx , & tmp_mtx )"	406:4:14635:14670	8024081	8	True				
ANR	8024189	CallExpression	"pcl_mtx3_invert ( & tmp_mtx , & tmp_mtx )"		8024081	0					
ANR	8024190	Callee	pcl_mtx3_invert		8024081	0					
ANR	8024191	Identifier	pcl_mtx3_invert		8024081	0					
ANR	8024192	ArgumentList	& tmp_mtx		8024081	1					
ANR	8024193	Argument	& tmp_mtx		8024081	0					
ANR	8024194	UnaryOperationExpression	& tmp_mtx		8024081	0					
ANR	8024195	UnaryOperator	&		8024081	0					
ANR	8024196	Identifier	tmp_mtx		8024081	1					
ANR	8024197	Argument	& tmp_mtx		8024081	1					
ANR	8024198	UnaryOperationExpression	& tmp_mtx		8024081	0					
ANR	8024199	UnaryOperator	&		8024081	0					
ANR	8024200	Identifier	tmp_mtx		8024081	1					
ANR	8024201	ForStatement	for ( i = start ; i < start + num ; i ++ )		8024081	9					
ANR	8024202	ForInit	i = start ;	408:9:14682:14691	8024081	0	True				
ANR	8024203	AssignmentExpression	i = start		8024081	0		=			
ANR	8024204	Identifier	i		8024081	0					
ANR	8024205	Identifier	start		8024081	1					
ANR	8024206	Condition	i < start + num	408:20:14693:14707	8024081	1	True				
ANR	8024207	RelationalExpression	i < start + num		8024081	0		<			
ANR	8024208	Identifier	i		8024081	0					
ANR	8024209	AdditiveExpression	start + num		8024081	1		+			
ANR	8024210	Identifier	start		8024081	0					
ANR	8024211	Identifier	num		8024081	1					
ANR	8024212	PostIncDecOperationExpression	i ++	408:37:14710:14712	8024081	2	True				
ANR	8024213	Identifier	i		8024081	0					
ANR	8024214	IncDec	++		8024081	1					
ANR	8024215	CompoundStatement		26:8:861:866	8024081	3					
ANR	8024216	IdentifierDeclStatement	pcl_vec3_t compvec ;	409:8:14725:14743	8024081	0	True				
ANR	8024217	IdentifierDecl	compvec		8024081	0					
ANR	8024218	IdentifierDeclType	pcl_vec3_t		8024081	0					
ANR	8024219	Identifier	compvec		8024081	1					
ANR	8024220	IdentifierDeclStatement	byte * pb = palette + 3 * i ;	410:8:14753:14779	8024081	1	True				
ANR	8024221	IdentifierDecl	* pb = palette + 3 * i		8024081	0					
ANR	8024222	IdentifierDeclType	byte *		8024081	0					
ANR	8024223	Identifier	pb		8024081	1					
ANR	8024224	AssignmentExpression	* pb = palette + 3 * i		8024081	2		=			
ANR	8024225	Identifier	pb		8024081	0					
ANR	8024226	AdditiveExpression	palette + 3 * i		8024081	1		+			
ANR	8024227	Identifier	palette		8024081	0					
ANR	8024228	MultiplicativeExpression	3 * i		8024081	1		*			
ANR	8024229	PrimaryExpression	3		8024081	0					
ANR	8024230	Identifier	i		8024081	1					
ANR	8024231	IdentifierDeclStatement	int j ;	411:8:14789:14794	8024081	2	True				
ANR	8024232	IdentifierDecl	j		8024081	0					
ANR	8024233	IdentifierDeclType	int		8024081	0					
ANR	8024234	Identifier	j		8024081	1					
ANR	8024235	ExpressionStatement	"pcl_vec3_xform ( & ( lumchrom_default [ porder [ i ] ] ) , & compvec , & tmp_mtx )"	413:8:14805:14871	8024081	3	True				
ANR	8024236	CallExpression	"pcl_vec3_xform ( & ( lumchrom_default [ porder [ i ] ] ) , & compvec , & tmp_mtx )"		8024081	0					
ANR	8024237	Callee	pcl_vec3_xform		8024081	0					
ANR	8024238	Identifier	pcl_vec3_xform		8024081	0					
ANR	8024239	ArgumentList	& ( lumchrom_default [ porder [ i ] ] )		8024081	1					
ANR	8024240	Argument	& ( lumchrom_default [ porder [ i ] ] )		8024081	0					
ANR	8024241	UnaryOperationExpression	& ( lumchrom_default [ porder [ i ] ] )		8024081	0					
ANR	8024242	UnaryOperator	&		8024081	0					
ANR	8024243	ArrayIndexing	lumchrom_default [ porder [ i ] ]		8024081	1					
ANR	8024244	Identifier	lumchrom_default		8024081	0					
ANR	8024245	ArrayIndexing	porder [ i ]		8024081	1					
ANR	8024246	Identifier	porder		8024081	0					
ANR	8024247	Identifier	i		8024081	1					
ANR	8024248	Argument	& compvec		8024081	1					
ANR	8024249	UnaryOperationExpression	& compvec		8024081	0					
ANR	8024250	UnaryOperator	&		8024081	0					
ANR	8024251	Identifier	compvec		8024081	1					
ANR	8024252	Argument	& tmp_mtx		8024081	2					
ANR	8024253	UnaryOperationExpression	& tmp_mtx		8024081	0					
ANR	8024254	UnaryOperator	&		8024081	0					
ANR	8024255	Identifier	tmp_mtx		8024081	1					
ANR	8024256	ForStatement	for ( j = 0 ; j < 3 ; j ++ )		8024081	4					
ANR	8024257	ForInit	j = 0 ;	414:13:14886:14891	8024081	0	True				
ANR	8024258	AssignmentExpression	j = 0		8024081	0		=			
ANR	8024259	Identifier	j		8024081	0					
ANR	8024260	PrimaryExpression	0		8024081	1					
ANR	8024261	Condition	j < 3	414:20:14893:14897	8024081	1	True				
ANR	8024262	RelationalExpression	j < 3		8024081	0		<			
ANR	8024263	Identifier	j		8024081	0					
ANR	8024264	PrimaryExpression	3		8024081	1					
ANR	8024265	PostIncDecOperationExpression	j ++	414:27:14900:14902	8024081	2	True				
ANR	8024266	Identifier	j		8024081	0					
ANR	8024267	IncDec	++		8024081	1					
ANR	8024268	ExpressionStatement	"pb [ j ] = convert_comp_val ( compvec . va [ j ] , pmin [ j ] , prange [ j ] )"	415:12:14917:14976	8024081	3	True				
ANR	8024269	AssignmentExpression	"pb [ j ] = convert_comp_val ( compvec . va [ j ] , pmin [ j ] , prange [ j ] )"		8024081	0		=			
ANR	8024270	ArrayIndexing	pb [ j ]		8024081	0					
ANR	8024271	Identifier	pb		8024081	0					
ANR	8024272	Identifier	j		8024081	1					
ANR	8024273	CallExpression	"convert_comp_val ( compvec . va [ j ] , pmin [ j ] , prange [ j ] )"		8024081	1					
ANR	8024274	Callee	convert_comp_val		8024081	0					
ANR	8024275	Identifier	convert_comp_val		8024081	0					
ANR	8024276	ArgumentList	compvec . va [ j ]		8024081	1					
ANR	8024277	Argument	compvec . va [ j ]		8024081	0					
ANR	8024278	ArrayIndexing	compvec . va [ j ]		8024081	0					
ANR	8024279	MemberAccess	compvec . va		8024081	0					
ANR	8024280	Identifier	compvec		8024081	0					
ANR	8024281	Identifier	va		8024081	1					
ANR	8024282	Identifier	j		8024081	1					
ANR	8024283	Argument	pmin [ j ]		8024081	1					
ANR	8024284	ArrayIndexing	pmin [ j ]		8024081	0					
ANR	8024285	Identifier	pmin		8024081	0					
ANR	8024286	Identifier	j		8024081	1					
ANR	8024287	Argument	prange [ j ]		8024081	2					
ANR	8024288	ArrayIndexing	prange [ j ]		8024081	0					
ANR	8024289	Identifier	prange		8024081	0					
ANR	8024290	Identifier	j		8024081	1					
ANR	8024291	ReturnType	static void		8024081	1					
ANR	8024292	Identifier	set_lumchrom_default_palette		8024081	2					
ANR	8024293	ParameterList	"pcl_cs_base_t * pbase , byte * palette , const byte * porder , int start , int num"		8024081	3					
ANR	8024294	Parameter	pcl_cs_base_t * pbase	383:29:13789:13809	8024081	0	True				
ANR	8024295	ParameterType	pcl_cs_base_t *		8024081	0					
ANR	8024296	Identifier	pbase		8024081	1					
ANR	8024297	Parameter	byte * palette	384:29:13841:13854	8024081	1	True				
ANR	8024298	ParameterType	byte *		8024081	0					
ANR	8024299	Identifier	palette		8024081	1					
ANR	8024300	Parameter	const byte * porder	385:29:13886:13904	8024081	2	True				
ANR	8024301	ParameterType	const byte *		8024081	0					
ANR	8024302	Identifier	porder		8024081	1					
ANR	8024303	Parameter	int start	385:50:13907:13915	8024081	3	True				
ANR	8024304	ParameterType	int		8024081	0					
ANR	8024305	Identifier	start		8024081	1					
ANR	8024306	Parameter	int num	385:61:13918:13924	8024081	4	True				
ANR	8024307	ParameterType	int		8024081	0					
ANR	8024308	Identifier	num		8024081	1					
ANR	8024309	CFGEntryNode	ENTRY		8024081		True				
ANR	8024310	CFGExitNode	EXIT		8024081		True				
ANR	8024311	Symbol	compvec		8024081						
ANR	8024312	Symbol	compvec . va		8024081						
ANR	8024313	Symbol	lumchrom_default		8024081						
ANR	8024314	Symbol	num		8024081						
ANR	8024315	Symbol	* prange		8024081						
ANR	8024316	Symbol	pbase -> client_data		8024081						
ANR	8024317	Symbol	* compvec . va		8024081						
ANR	8024318	Symbol	pmin		8024081						
ANR	8024319	Symbol	pbase		8024081						
ANR	8024320	Symbol	gs_cie_abc_MatrixABC		8024081						
ANR	8024321	Symbol	palette		8024081						
ANR	8024322	Symbol	pbase -> client_data . range		8024081						
ANR	8024323	Symbol	& compvec		8024081						
ANR	8024324	Symbol	prange		8024081						
ANR	8024325	Symbol	tmp_mtx		8024081						
ANR	8024326	Symbol	start		8024081						
ANR	8024327	Symbol	* compvec		8024081						
ANR	8024328	Symbol	i		8024081						
ANR	8024329	Symbol	j		8024081						
ANR	8024330	Symbol	convert_comp_val		8024081						
ANR	8024331	Symbol	porder		8024081						
ANR	8024332	Symbol	* pbase		8024081						
ANR	8024333	Symbol	pb		8024081						
ANR	8024334	Symbol	* i		8024081						
ANR	8024335	Symbol	pbase -> client_data . min_val		8024081						
ANR	8024336	Symbol	* j		8024081						
ANR	8024337	Symbol	pbase -> pcspace		8024081						
ANR	8024338	Symbol	& tmp_mtx		8024081						
ANR	8024339	Symbol	pxfm		8024081						
ANR	8024340	Symbol	* pb		8024081						
ANR	8024341	Symbol	* pmin		8024081						
ANR	8024342	Symbol	* porder		8024081						
ANR	8024343	Function	set_default_entries	430:0:15461:18815							
ANR	8024344	FunctionDef	"set_default_entries (pcl_cs_indexed_t * pindexed , int start , int num , bool gl2)"		8024343	0					
ANR	8024345	CompoundStatement		432:0:15551:18815	8024343	0					
ANR	8024346	Statement	static	434:4:15622:15627	8024343	0	True				
ANR	8024347	Statement	void	434:11:15629:15632	8024343	1	True				
ANR	8024348	Statement	(	434:16:15634:15634	8024343	2	True				
ANR	8024349	Statement	*	434:17:15635:15635	8024343	3	True				
ANR	8024350	Statement	const	434:18:15636:15640	8024343	4	True				
ANR	8024351	Statement	set_default_palette	435:17:15659:15677	8024343	5	True				
ANR	8024352	Statement	[	435:36:15678:15678	8024343	6	True				
ANR	8024353	Statement	(	435:37:15679:15679	8024343	7	True				
ANR	8024354	Statement	int	435:38:15680:15682	8024343	8	True				
ANR	8024355	Statement	)	435:41:15683:15683	8024343	9	True				
ANR	8024356	Statement	pcl_cspace_num	435:42:15684:15697	8024343	10	True				
ANR	8024357	Statement	]	435:56:15698:15698	8024343	11	True				
ANR	8024358	Statement	)	435:57:15699:15699	8024343	12	True				
ANR	8024359	Statement	(	435:59:15701:15701	8024343	13	True				
ANR	8024360	Statement	pcl_cs_base_t	435:60:15702:15714	8024343	14	True				
ANR	8024361	Statement	*	435:74:15716:15716	8024343	15	True				
ANR	8024362	Statement	pbase	436:60:15778:15782	8024343	16	True				
ANR	8024363	Statement	","	436:65:15783:15783	8024343	17	True				
ANR	8024364	Statement	byte	437:60:15845:15848	8024343	18	True				
ANR	8024365	Statement	*	437:65:15850:15850	8024343	19	True				
ANR	8024366	Statement	palette	437:67:15852:15858	8024343	20	True				
ANR	8024367	Statement	","	437:74:15859:15859	8024343	21	True				
ANR	8024368	Statement	const	438:60:15921:15925	8024343	22	True				
ANR	8024369	Statement	byte	438:66:15927:15930	8024343	23	True				
ANR	8024370	Statement	*	438:71:15932:15932	8024343	24	True				
ANR	8024371	Statement	porder	439:60:15994:15999	8024343	25	True				
ANR	8024372	Statement	","	439:66:16000:16000	8024343	26	True				
ANR	8024373	Statement	int	439:68:16002:16004	8024343	27	True				
ANR	8024374	Statement	start	439:72:16006:16010	8024343	28	True				
ANR	8024375	Statement	","	439:77:16011:16011	8024343	29	True				
ANR	8024376	Statement	int	440:60:16073:16075	8024343	30	True				
ANR	8024377	Statement	num	440:64:16077:16079	8024343	31	True				
ANR	8024378	Statement	)	440:67:16080:16080	8024343	32	True				
ANR	8024379	Statement	=	440:69:16082:16082	8024343	33	True				
ANR	8024380	CompoundStatement		9:71:532:532	8024343	34					
ANR	8024381	Statement	set_dev_specific_default_palette	441:8:16094:16125	8024343	0	True				
ANR	8024382	Statement	","	441:40:16126:16126	8024343	1	True				
ANR	8024383	Statement	set_dev_specific_default_palette	442:12:16156:16187	8024343	2	True				
ANR	8024384	Statement	","	442:44:16188:16188	8024343	3	True				
ANR	8024385	Statement	set_colmet_default_palette	443:12:16214:16239	8024343	4	True				
ANR	8024386	Statement	","	443:38:16240:16240	8024343	5	True				
ANR	8024387	Statement	set_CIELab_default_palette	444:12:16277:16302	8024343	6	True				
ANR	8024388	Statement	","	444:38:16303:16303	8024343	7	True				
ANR	8024389	Statement	set_lumchrom_default_palette	445:12:16334:16361	8024343	8	True				
ANR	8024390	ExpressionStatement		447:5:16455:16455	8024343	35	True				
ANR	8024391	Statement	static	459:4:17051:17056	8024343	36	True				
ANR	8024392	IdentifierDeclStatement	"const byte order_1 [ ] = { 0 , 7 } ;"	459:11:17058:17089	8024343	37	True				
ANR	8024393	IdentifierDecl	"order_1 [ ] = { 0 , 7 }"		8024343	0					
ANR	8024394	IdentifierDeclType	const byte [ ]		8024343	0					
ANR	8024395	Identifier	order_1		8024343	1					
ANR	8024396	AssignmentExpression	"order_1 [ ] = { 0 , 7 }"		8024343	2		=			
ANR	8024397	Identifier	order_1		8024343	0					
ANR	8024398	InitializerList	0		8024343	1					
ANR	8024399	PrimaryExpression	0		8024343	0					
ANR	8024400	PrimaryExpression	7		8024343	1					
ANR	8024401	Statement	static	460:4:17095:17100	8024343	38	True				
ANR	8024402	IdentifierDeclStatement	"const byte cmy_order_2 [ ] = { 0 , 1 , 2 , 7 } ;"	460:11:17102:17143	8024343	39	True				
ANR	8024403	IdentifierDecl	"cmy_order_2 [ ] = { 0 , 1 , 2 , 7 }"		8024343	0					
ANR	8024404	IdentifierDeclType	const byte [ ]		8024343	0					
ANR	8024405	Identifier	cmy_order_2		8024343	1					
ANR	8024406	AssignmentExpression	"cmy_order_2 [ ] = { 0 , 1 , 2 , 7 }"		8024343	2		=			
ANR	8024407	Identifier	cmy_order_2		8024343	0					
ANR	8024408	InitializerList	0		8024343	1					
ANR	8024409	PrimaryExpression	0		8024343	0					
ANR	8024410	PrimaryExpression	1		8024343	1					
ANR	8024411	PrimaryExpression	2		8024343	2					
ANR	8024412	PrimaryExpression	7		8024343	3					
ANR	8024413	Statement	static	461:4:17149:17154	8024343	40	True				
ANR	8024414	IdentifierDeclStatement	"const byte cmy_order_3 [ ] = { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 } ;"	461:11:17156:17209	8024343	41	True				
ANR	8024415	IdentifierDecl	"cmy_order_3 [ ] = { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 }"		8024343	0					
ANR	8024416	IdentifierDeclType	const byte [ ]		8024343	0					
ANR	8024417	Identifier	cmy_order_3		8024343	1					
ANR	8024418	AssignmentExpression	"cmy_order_3 [ ] = { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 }"		8024343	2		=			
ANR	8024419	Identifier	cmy_order_3		8024343	0					
ANR	8024420	InitializerList	0		8024343	1					
ANR	8024421	PrimaryExpression	0		8024343	0					
ANR	8024422	PrimaryExpression	1		8024343	1					
ANR	8024423	PrimaryExpression	2		8024343	2					
ANR	8024424	PrimaryExpression	3		8024343	3					
ANR	8024425	PrimaryExpression	4		8024343	4					
ANR	8024426	PrimaryExpression	5		8024343	5					
ANR	8024427	PrimaryExpression	6		8024343	6					
ANR	8024428	PrimaryExpression	7		8024343	7					
ANR	8024429	Statement	static	462:4:17215:17220	8024343	42	True				
ANR	8024430	IdentifierDeclStatement	"const byte rgb_order_2 [ ] = { 7 , 6 , 5 , 0 } ;"	462:11:17222:17263	8024343	43	True				
ANR	8024431	IdentifierDecl	"rgb_order_2 [ ] = { 7 , 6 , 5 , 0 }"		8024343	0					
ANR	8024432	IdentifierDeclType	const byte [ ]		8024343	0					
ANR	8024433	Identifier	rgb_order_2		8024343	1					
ANR	8024434	AssignmentExpression	"rgb_order_2 [ ] = { 7 , 6 , 5 , 0 }"		8024343	2		=			
ANR	8024435	Identifier	rgb_order_2		8024343	0					
ANR	8024436	InitializerList	7		8024343	1					
ANR	8024437	PrimaryExpression	7		8024343	0					
ANR	8024438	PrimaryExpression	6		8024343	1					
ANR	8024439	PrimaryExpression	5		8024343	2					
ANR	8024440	PrimaryExpression	0		8024343	3					
ANR	8024441	Statement	static	463:4:17269:17274	8024343	44	True				
ANR	8024442	IdentifierDeclStatement	"const byte rgb_order_3 [ ] = { 7 , 6 , 5 , 4 , 3 , 2 , 1 , 0 } ;"	463:11:17276:17329	8024343	45	True				
ANR	8024443	IdentifierDecl	"rgb_order_3 [ ] = { 7 , 6 , 5 , 4 , 3 , 2 , 1 , 0 }"		8024343	0					
ANR	8024444	IdentifierDeclType	const byte [ ]		8024343	0					
ANR	8024445	Identifier	rgb_order_3		8024343	1					
ANR	8024446	AssignmentExpression	"rgb_order_3 [ ] = { 7 , 6 , 5 , 4 , 3 , 2 , 1 , 0 }"		8024343	2		=			
ANR	8024447	Identifier	rgb_order_3		8024343	0					
ANR	8024448	InitializerList	7		8024343	1					
ANR	8024449	PrimaryExpression	7		8024343	0					
ANR	8024450	PrimaryExpression	6		8024343	1					
ANR	8024451	PrimaryExpression	5		8024343	2					
ANR	8024452	PrimaryExpression	4		8024343	3					
ANR	8024453	PrimaryExpression	3		8024343	4					
ANR	8024454	PrimaryExpression	2		8024343	5					
ANR	8024455	PrimaryExpression	1		8024343	6					
ANR	8024456	PrimaryExpression	0		8024343	7					
ANR	8024457	Statement	static	464:4:17335:17340	8024343	46	True				
ANR	8024458	IdentifierDeclStatement	"const byte gl2_order_2 [ ] = { 0 , 7 , 6 , 5 } ;"	464:11:17342:17383	8024343	47	True				
ANR	8024459	IdentifierDecl	"gl2_order_2 [ ] = { 0 , 7 , 6 , 5 }"		8024343	0					
ANR	8024460	IdentifierDeclType	const byte [ ]		8024343	0					
ANR	8024461	Identifier	gl2_order_2		8024343	1					
ANR	8024462	AssignmentExpression	"gl2_order_2 [ ] = { 0 , 7 , 6 , 5 }"		8024343	2		=			
ANR	8024463	Identifier	gl2_order_2		8024343	0					
ANR	8024464	InitializerList	0		8024343	1					
ANR	8024465	PrimaryExpression	0		8024343	0					
ANR	8024466	PrimaryExpression	7		8024343	1					
ANR	8024467	PrimaryExpression	6		8024343	2					
ANR	8024468	PrimaryExpression	5		8024343	3					
ANR	8024469	Statement	static	465:4:17389:17394	8024343	48	True				
ANR	8024470	IdentifierDeclStatement	"const byte gl2_order_3 [ ] = { 0 , 7 , 6 , 5 , 4 , 3 , 2 , 1 } ;"	465:11:17396:17449	8024343	49	True				
ANR	8024471	IdentifierDecl	"gl2_order_3 [ ] = { 0 , 7 , 6 , 5 , 4 , 3 , 2 , 1 }"		8024343	0					
ANR	8024472	IdentifierDeclType	const byte [ ]		8024343	0					
ANR	8024473	Identifier	gl2_order_3		8024343	1					
ANR	8024474	AssignmentExpression	"gl2_order_3 [ ] = { 0 , 7 , 6 , 5 , 4 , 3 , 2 , 1 }"		8024343	2		=			
ANR	8024475	Identifier	gl2_order_3		8024343	0					
ANR	8024476	InitializerList	0		8024343	1					
ANR	8024477	PrimaryExpression	0		8024343	0					
ANR	8024478	PrimaryExpression	7		8024343	1					
ANR	8024479	PrimaryExpression	6		8024343	2					
ANR	8024480	PrimaryExpression	5		8024343	3					
ANR	8024481	PrimaryExpression	4		8024343	4					
ANR	8024482	PrimaryExpression	3		8024343	5					
ANR	8024483	PrimaryExpression	2		8024343	6					
ANR	8024484	PrimaryExpression	1		8024343	7					
ANR	8024485	Statement	static	466:4:17455:17460	8024343	50	True				
ANR	8024486	IdentifierDeclStatement	"const byte * cmy_order [ 3 ] = { order_1 , cmy_order_2 , cmy_order_3 } ;"	466:11:17462:17526	8024343	51	True				
ANR	8024487	IdentifierDecl	"* cmy_order [ 3 ] = { order_1 , cmy_order_2 , cmy_order_3 }"		8024343	0					
ANR	8024488	IdentifierDeclType	const byte * [ 3 ]		8024343	0					
ANR	8024489	Identifier	cmy_order		8024343	1					
ANR	8024490	PrimaryExpression	3		8024343	2					
ANR	8024491	AssignmentExpression	"* cmy_order [ 3 ] = { order_1 , cmy_order_2 , cmy_order_3 }"		8024343	3		=			
ANR	8024492	Identifier	cmy_order		8024343	0					
ANR	8024493	InitializerList	order_1		8024343	1					
ANR	8024494	Identifier	order_1		8024343	0					
ANR	8024495	Identifier	cmy_order_2		8024343	1					
ANR	8024496	Identifier	cmy_order_3		8024343	2					
ANR	8024497	Statement	static	467:4:17532:17537	8024343	52	True				
ANR	8024498	IdentifierDeclStatement	"const byte * rgb_order [ 3 ] = { order_1 , rgb_order_2 , rgb_order_3 } ;"	467:11:17539:17603	8024343	53	True				
ANR	8024499	IdentifierDecl	"* rgb_order [ 3 ] = { order_1 , rgb_order_2 , rgb_order_3 }"		8024343	0					
ANR	8024500	IdentifierDeclType	const byte * [ 3 ]		8024343	0					
ANR	8024501	Identifier	rgb_order		8024343	1					
ANR	8024502	PrimaryExpression	3		8024343	2					
ANR	8024503	AssignmentExpression	"* rgb_order [ 3 ] = { order_1 , rgb_order_2 , rgb_order_3 }"		8024343	3		=			
ANR	8024504	Identifier	rgb_order		8024343	0					
ANR	8024505	InitializerList	order_1		8024343	1					
ANR	8024506	Identifier	order_1		8024343	0					
ANR	8024507	Identifier	rgb_order_2		8024343	1					
ANR	8024508	Identifier	rgb_order_3		8024343	2					
ANR	8024509	Statement	static	468:4:17609:17614	8024343	54	True				
ANR	8024510	IdentifierDeclStatement	"const byte * gl2_order [ 3 ] = { order_1 , gl2_order_2 , gl2_order_3 } ;"	468:11:17616:17680	8024343	55	True				
ANR	8024511	IdentifierDecl	"* gl2_order [ 3 ] = { order_1 , gl2_order_2 , gl2_order_3 }"		8024343	0					
ANR	8024512	IdentifierDeclType	const byte * [ 3 ]		8024343	0					
ANR	8024513	Identifier	gl2_order		8024343	1					
ANR	8024514	PrimaryExpression	3		8024343	2					
ANR	8024515	AssignmentExpression	"* gl2_order [ 3 ] = { order_1 , gl2_order_2 , gl2_order_3 }"		8024343	3		=			
ANR	8024516	Identifier	gl2_order		8024343	0					
ANR	8024517	InitializerList	order_1		8024343	1					
ANR	8024518	Identifier	order_1		8024343	0					
ANR	8024519	Identifier	gl2_order_2		8024343	1					
ANR	8024520	Identifier	gl2_order_3		8024343	2					
ANR	8024521	IdentifierDeclStatement	int type = pindexed -> cid . cspace ;	469:4:17686:17717	8024343	56	True				
ANR	8024522	IdentifierDecl	type = pindexed -> cid . cspace		8024343	0					
ANR	8024523	IdentifierDeclType	int		8024343	0					
ANR	8024524	Identifier	type		8024343	1					
ANR	8024525	AssignmentExpression	type = pindexed -> cid . cspace		8024343	2		=			
ANR	8024526	Identifier	type		8024343	0					
ANR	8024527	MemberAccess	pindexed -> cid . cspace		8024343	1					
ANR	8024528	PtrMemberAccess	pindexed -> cid		8024343	0					
ANR	8024529	Identifier	pindexed		8024343	0					
ANR	8024530	Identifier	cid		8024343	1					
ANR	8024531	Identifier	cspace		8024343	1					
ANR	8024532	IdentifierDeclStatement	int orig_type = pindexed -> original_cspace ;	470:4:17723:17764	8024343	57	True				
ANR	8024533	IdentifierDecl	orig_type = pindexed -> original_cspace		8024343	0					
ANR	8024534	IdentifierDeclType	int		8024343	0					
ANR	8024535	Identifier	orig_type		8024343	1					
ANR	8024536	AssignmentExpression	orig_type = pindexed -> original_cspace		8024343	2		=			
ANR	8024537	Identifier	orig_type		8024343	0					
ANR	8024538	PtrMemberAccess	pindexed -> original_cspace		8024343	1					
ANR	8024539	Identifier	pindexed		8024343	0					
ANR	8024540	Identifier	original_cspace		8024343	1					
ANR	8024541	IdentifierDeclStatement	int bits = pindexed -> cid . bits_per_index - 1 ;	471:4:17770:17813	8024343	58	True				
ANR	8024542	IdentifierDecl	bits = pindexed -> cid . bits_per_index - 1		8024343	0					
ANR	8024543	IdentifierDeclType	int		8024343	0					
ANR	8024544	Identifier	bits		8024343	1					
ANR	8024545	AssignmentExpression	bits = pindexed -> cid . bits_per_index - 1		8024343	2		=			
ANR	8024546	Identifier	bits		8024343	0					
ANR	8024547	AdditiveExpression	pindexed -> cid . bits_per_index - 1		8024343	1		-			
ANR	8024548	MemberAccess	pindexed -> cid . bits_per_index		8024343	0					
ANR	8024549	PtrMemberAccess	pindexed -> cid		8024343	0					
ANR	8024550	Identifier	pindexed		8024343	0					
ANR	8024551	Identifier	cid		8024343	1					
ANR	8024552	Identifier	bits_per_index		8024343	1					
ANR	8024553	PrimaryExpression	1		8024343	1					
ANR	8024554	IdentifierDeclStatement	const byte * porder ;	472:4:17819:17837	8024343	59	True				
ANR	8024555	IdentifierDecl	* porder		8024343	0					
ANR	8024556	IdentifierDeclType	const byte *		8024343	0					
ANR	8024557	Identifier	porder		8024343	1					
ANR	8024558	IdentifierDeclStatement	int cnt = ( num + start > 8 ? 8 - start : num ) ;	473:4:17843:17888	8024343	60	True				
ANR	8024559	IdentifierDecl	cnt = ( num + start > 8 ? 8 - start : num )		8024343	0					
ANR	8024560	IdentifierDeclType	int		8024343	0					
ANR	8024561	Identifier	cnt		8024343	1					
ANR	8024562	AssignmentExpression	cnt = ( num + start > 8 ? 8 - start : num )		8024343	2		=			
ANR	8024563	Identifier	cnt		8024343	0					
ANR	8024564	ConditionalExpression	num + start > 8 ? 8 - start : num		8024343	1					
ANR	8024565	Condition	num + start > 8		8024343	0					
ANR	8024566	RelationalExpression	num + start > 8		8024343	0		>			
ANR	8024567	AdditiveExpression	num + start		8024343	0		+			
ANR	8024568	Identifier	num		8024343	0					
ANR	8024569	Identifier	start		8024343	1					
ANR	8024570	PrimaryExpression	8		8024343	1					
ANR	8024571	AdditiveExpression	8 - start		8024343	1		-			
ANR	8024572	PrimaryExpression	8		8024343	0					
ANR	8024573	Identifier	start		8024343	1					
ANR	8024574	Identifier	num		8024343	2					
ANR	8024575	IdentifierDeclStatement	int i ;	474:4:17894:17899	8024343	61	True				
ANR	8024576	IdentifierDecl	i		8024343	0					
ANR	8024577	IdentifierDeclType	int		8024343	0					
ANR	8024578	Identifier	i		8024343	1					
ANR	8024579	IfStatement	if ( bits > 2 )		8024343	62					
ANR	8024580	Condition	bits > 2	476:8:17910:17917	8024343	0	True				
ANR	8024581	RelationalExpression	bits > 2		8024343	0		>			
ANR	8024582	Identifier	bits		8024343	0					
ANR	8024583	PrimaryExpression	2		8024343	1					
ANR	8024584	ExpressionStatement	bits = 2	477:8:17928:17936	8024343	1	True				
ANR	8024585	AssignmentExpression	bits = 2		8024343	0		=			
ANR	8024586	Identifier	bits		8024343	0					
ANR	8024587	PrimaryExpression	2		8024343	1					
ANR	8024588	IfStatement	if ( gl2 )		8024343	63					
ANR	8024589	Condition	gl2	478:8:17946:17948	8024343	0	True				
ANR	8024590	Identifier	gl2		8024343	0					
ANR	8024591	ExpressionStatement	porder = gl2_order [ bits ]	479:8:17959:17983	8024343	1	True				
ANR	8024592	AssignmentExpression	porder = gl2_order [ bits ]		8024343	0		=			
ANR	8024593	Identifier	porder		8024343	0					
ANR	8024594	ArrayIndexing	gl2_order [ bits ]		8024343	1					
ANR	8024595	Identifier	gl2_order		8024343	0					
ANR	8024596	Identifier	bits		8024343	1					
ANR	8024597	ElseStatement	else		8024343	0					
ANR	8024598	IfStatement	if ( ( ( type == pcl_cspace_RGB ) || ( type == pcl_cspace_Colorimetric ) ) && ( orig_type != pcl_cspace_CMY ) )		8024343	0					
ANR	8024599	Condition	( ( type == pcl_cspace_RGB ) || ( type == pcl_cspace_Colorimetric ) ) && ( orig_type != pcl_cspace_CMY )	482:13:18123:18231	8024343	0	True				
ANR	8024600	AndExpression	( ( type == pcl_cspace_RGB ) || ( type == pcl_cspace_Colorimetric ) ) && ( orig_type != pcl_cspace_CMY )		8024343	0		&&			
ANR	8024601	OrExpression	( type == pcl_cspace_RGB ) || ( type == pcl_cspace_Colorimetric )		8024343	0		||			
ANR	8024602	EqualityExpression	type == pcl_cspace_RGB		8024343	0		==			
ANR	8024603	Identifier	type		8024343	0					
ANR	8024604	Identifier	pcl_cspace_RGB		8024343	1					
ANR	8024605	EqualityExpression	type == pcl_cspace_Colorimetric		8024343	1		==			
ANR	8024606	Identifier	type		8024343	0					
ANR	8024607	Identifier	pcl_cspace_Colorimetric		8024343	1					
ANR	8024608	EqualityExpression	orig_type != pcl_cspace_CMY		8024343	1		!=			
ANR	8024609	Identifier	orig_type		8024343	0					
ANR	8024610	Identifier	pcl_cspace_CMY		8024343	1					
ANR	8024611	ExpressionStatement	porder = rgb_order [ bits ]	484:8:18242:18266	8024343	1	True				
ANR	8024612	AssignmentExpression	porder = rgb_order [ bits ]		8024343	0		=			
ANR	8024613	Identifier	porder		8024343	0					
ANR	8024614	ArrayIndexing	rgb_order [ bits ]		8024343	1					
ANR	8024615	Identifier	rgb_order		8024343	0					
ANR	8024616	Identifier	bits		8024343	1					
ANR	8024617	ElseStatement	else		8024343	0					
ANR	8024618	ExpressionStatement	porder = cmy_order [ bits ]	486:8:18285:18309	8024343	0	True				
ANR	8024619	AssignmentExpression	porder = cmy_order [ bits ]		8024343	0		=			
ANR	8024620	Identifier	porder		8024343	0					
ANR	8024621	ArrayIndexing	cmy_order [ bits ]		8024343	1					
ANR	8024622	Identifier	cmy_order		8024343	0					
ANR	8024623	Identifier	bits		8024343	1					
ANR	8024624	ExpressionStatement	"set_default_palette [ ( int ) type ] ( pindexed -> pbase , pindexed -> palette . data , porder , start , cnt )"	489:4:18379:18543	8024343	64	True				
ANR	8024625	CallExpression	"set_default_palette [ ( int ) type ] ( pindexed -> pbase , pindexed -> palette . data , porder , start , cnt )"		8024343	0					
ANR	8024626	Callee	set_default_palette [ ( int ) type ]		8024343	0					
ANR	8024627	ArrayIndexing	set_default_palette [ ( int ) type ]		8024343	0					
ANR	8024628	Identifier	set_default_palette		8024343	0					
ANR	8024629	CastExpression	( int ) type		8024343	1					
ANR	8024630	CastTarget	int		8024343	0					
ANR	8024631	Identifier	type		8024343	1					
ANR	8024632	ArgumentList	pindexed -> pbase		8024343	1					
ANR	8024633	Argument	pindexed -> pbase		8024343	0					
ANR	8024634	PtrMemberAccess	pindexed -> pbase		8024343	0					
ANR	8024635	Identifier	pindexed		8024343	0					
ANR	8024636	Identifier	pbase		8024343	1					
ANR	8024637	Argument	pindexed -> palette . data		8024343	1					
ANR	8024638	MemberAccess	pindexed -> palette . data		8024343	0					
ANR	8024639	PtrMemberAccess	pindexed -> palette		8024343	0					
ANR	8024640	Identifier	pindexed		8024343	0					
ANR	8024641	Identifier	palette		8024343	1					
ANR	8024642	Identifier	data		8024343	1					
ANR	8024643	Argument	porder		8024343	2					
ANR	8024644	Identifier	porder		8024343	0					
ANR	8024645	Argument	start		8024343	3					
ANR	8024646	Identifier	start		8024343	0					
ANR	8024647	Argument	cnt		8024343	4					
ANR	8024648	Identifier	cnt		8024343	0					
ANR	8024649	CompoundStatement		65:8:3082:3101	8024343	65					
ANR	8024650	IdentifierDeclStatement	int s = start + cnt ;	495:8:18605:18624	8024343	0	True				
ANR	8024651	IdentifierDecl	s = start + cnt		8024343	0					
ANR	8024652	IdentifierDeclType	int		8024343	0					
ANR	8024653	Identifier	s		8024343	1					
ANR	8024654	AssignmentExpression	s = start + cnt		8024343	2		=			
ANR	8024655	Identifier	s		8024343	0					
ANR	8024656	AdditiveExpression	start + cnt		8024343	1		+			
ANR	8024657	Identifier	start		8024343	0					
ANR	8024658	Identifier	cnt		8024343	1					
ANR	8024659	IdentifierDeclStatement	int e = start + num ;	496:8:18634:18653	8024343	1	True				
ANR	8024660	IdentifierDecl	e = start + num		8024343	0					
ANR	8024661	IdentifierDeclType	int		8024343	0					
ANR	8024662	Identifier	e		8024343	1					
ANR	8024663	AssignmentExpression	e = start + num		8024343	2		=			
ANR	8024664	Identifier	e		8024343	0					
ANR	8024665	AdditiveExpression	start + num		8024343	1		+			
ANR	8024666	Identifier	start		8024343	0					
ANR	8024667	Identifier	num		8024343	1					
ANR	8024668	ForStatement	for ( i = s ; i < e ; i ++ )		8024343	2					
ANR	8024669	ForInit	i = s ;	498:13:18669:18674	8024343	0	True				
ANR	8024670	AssignmentExpression	i = s		8024343	0		=			
ANR	8024671	Identifier	i		8024343	0					
ANR	8024672	Identifier	s		8024343	1					
ANR	8024673	Condition	i < e	498:20:18676:18680	8024343	1	True				
ANR	8024674	RelationalExpression	i < e		8024343	0		<			
ANR	8024675	Identifier	i		8024343	0					
ANR	8024676	Identifier	e		8024343	1					
ANR	8024677	PostIncDecOperationExpression	i ++	498:27:18683:18685	8024343	2	True				
ANR	8024678	Identifier	i		8024343	0					
ANR	8024679	IncDec	++		8024343	1					
ANR	8024680	CompoundStatement		68:12:3150:3191	8024343	3					
ANR	8024681	IdentifierDeclStatement	byte * bp = pindexed -> palette . data + i * 3 ;	499:12:18702:18743	8024343	0	True				
ANR	8024682	IdentifierDecl	* bp = pindexed -> palette . data + i * 3		8024343	0					
ANR	8024683	IdentifierDeclType	byte *		8024343	0					
ANR	8024684	Identifier	bp		8024343	1					
ANR	8024685	AssignmentExpression	* bp = pindexed -> palette . data + i * 3		8024343	2		=			
ANR	8024686	Identifier	bp		8024343	0					
ANR	8024687	AdditiveExpression	pindexed -> palette . data + i * 3		8024343	1		+			
ANR	8024688	MemberAccess	pindexed -> palette . data		8024343	0					
ANR	8024689	PtrMemberAccess	pindexed -> palette		8024343	0					
ANR	8024690	Identifier	pindexed		8024343	0					
ANR	8024691	Identifier	palette		8024343	1					
ANR	8024692	Identifier	data		8024343	1					
ANR	8024693	MultiplicativeExpression	i * 3		8024343	1		*			
ANR	8024694	Identifier	i		8024343	0					
ANR	8024695	PrimaryExpression	3		8024343	1					
ANR	8024696	ExpressionStatement	bp [ 0 ] = bp [ 1 ] = bp [ 2 ] = 0	501:12:18758:18783	8024343	1	True				
ANR	8024697	AssignmentExpression	bp [ 0 ] = bp [ 1 ] = bp [ 2 ] = 0		8024343	0		=			
ANR	8024698	ArrayIndexing	bp [ 0 ]		8024343	0					
ANR	8024699	Identifier	bp		8024343	0					
ANR	8024700	PrimaryExpression	0		8024343	1					
ANR	8024701	AssignmentExpression	bp [ 1 ] = bp [ 2 ] = 0		8024343	1		=			
ANR	8024702	ArrayIndexing	bp [ 1 ]		8024343	0					
ANR	8024703	Identifier	bp		8024343	0					
ANR	8024704	PrimaryExpression	1		8024343	1					
ANR	8024705	AssignmentExpression	bp [ 2 ] = 0		8024343	1		=			
ANR	8024706	ArrayIndexing	bp [ 2 ]		8024343	0					
ANR	8024707	Identifier	bp		8024343	0					
ANR	8024708	PrimaryExpression	2		8024343	1					
ANR	8024709	PrimaryExpression	0		8024343	1					
ANR	8024710	ReturnStatement	return 0 ;	504:4:18805:18813	8024343	66	True				
ANR	8024711	PrimaryExpression	0		8024343	0					
ANR	8024712	ReturnType	static int		8024343	1					
ANR	8024713	Identifier	set_default_entries		8024343	2					
ANR	8024714	ParameterList	"pcl_cs_indexed_t * pindexed , int start , int num , bool gl2"		8024343	3					
ANR	8024715	Parameter	pcl_cs_indexed_t * pindexed	431:20:15492:15518	8024343	0	True				
ANR	8024716	ParameterType	pcl_cs_indexed_t *		8024343	0					
ANR	8024717	Identifier	pindexed		8024343	1					
ANR	8024718	Parameter	int start	431:49:15521:15529	8024343	1	True				
ANR	8024719	ParameterType	int		8024343	0					
ANR	8024720	Identifier	start		8024343	1					
ANR	8024721	Parameter	int num	431:60:15532:15538	8024343	2	True				
ANR	8024722	ParameterType	int		8024343	0					
ANR	8024723	Identifier	num		8024343	1					
ANR	8024724	Parameter	bool gl2	431:69:15541:15548	8024343	3	True				
ANR	8024725	ParameterType	bool		8024343	0					
ANR	8024726	Identifier	gl2		8024343	1					
ANR	8024727	CFGEntryNode	ENTRY		8024343		True				
ANR	8024728	CFGExitNode	EXIT		8024343		True				
ANR	8024729	Symbol	pindexed -> cid		8024343						
ANR	8024730	Symbol	set_default_palette		8024343						
ANR	8024731	Symbol	pcl_cspace_RGB		8024343						
ANR	8024732	Symbol	pindexed -> palette		8024343						
ANR	8024733	Symbol	* pindexed		8024343						
ANR	8024734	Symbol	num		8024343						
ANR	8024735	Symbol	cmy_order		8024343						
ANR	8024736	Symbol	gl2_order_3		8024343						
ANR	8024737	Symbol	pindexed -> palette . data		8024343						
ANR	8024738	Symbol	pcl_cspace_CMY		8024343						
ANR	8024739	Symbol	pcl_cspace_Colorimetric		8024343						
ANR	8024740	Symbol	order_1		8024343						
ANR	8024741	Symbol	type		8024343						
ANR	8024742	Symbol	bp		8024343						
ANR	8024743	Symbol	gl2_order		8024343						
ANR	8024744	Symbol	pindexed		8024343						
ANR	8024745	Symbol	gl2_order_2		8024343						
ANR	8024746	Symbol	* bp		8024343						
ANR	8024747	Symbol	pindexed -> pbase		8024343						
ANR	8024748	Symbol	* bits		8024343						
ANR	8024749	Symbol	* cmy_order		8024343						
ANR	8024750	Symbol	rgb_order_3		8024343						
ANR	8024751	Symbol	e		8024343						
ANR	8024752	Symbol	* gl2_order		8024343						
ANR	8024753	Symbol	start		8024343						
ANR	8024754	Symbol	pindexed -> original_cspace		8024343						
ANR	8024755	Symbol	bits		8024343						
ANR	8024756	Symbol	cnt		8024343						
ANR	8024757	Symbol	i		8024343						
ANR	8024758	Symbol	gl2		8024343						
ANR	8024759	Symbol	orig_type		8024343						
ANR	8024760	Symbol	pindexed -> cid . bits_per_index		8024343						
ANR	8024761	Symbol	porder		8024343						
ANR	8024762	Symbol	* rgb_order		8024343						
ANR	8024763	Symbol	pindexed -> cid . cspace		8024343						
ANR	8024764	Symbol	s		8024343						
ANR	8024765	Symbol	cmy_order_3		8024343						
ANR	8024766	Symbol	cmy_order_2		8024343						
ANR	8024767	Symbol	rgb_order_2		8024343						
ANR	8024768	Symbol	rgb_order		8024343						
ANR	8024769	Function	pcl_cs_indexed_set_norm_and_Decode	561:0:21475:24743							
ANR	8024770	FunctionDef	"pcl_cs_indexed_set_norm_and_Decode (pcl_cs_indexed_t * * ppindexed , double wht0 , double wht1 , double wht2 , double blk0 , double blk1 , double blk2)"		8024769	0					
ANR	8024771	CompoundStatement		567:0:21763:24743	8024769	0					
ANR	8024772	IdentifierDeclStatement	pcl_cs_indexed_t * pindexed = * ppindexed ;	568:4:21769:21808	8024769	0	True				
ANR	8024773	IdentifierDecl	* pindexed = * ppindexed		8024769	0					
ANR	8024774	IdentifierDeclType	pcl_cs_indexed_t *		8024769	0					
ANR	8024775	Identifier	pindexed		8024769	1					
ANR	8024776	AssignmentExpression	* pindexed = * ppindexed		8024769	2		=			
ANR	8024777	Identifier	pindexed		8024769	0					
ANR	8024778	UnaryOperationExpression	* ppindexed		8024769	1					
ANR	8024779	UnaryOperator	*		8024769	0					
ANR	8024780	Identifier	ppindexed		8024769	1					
ANR	8024781	IdentifierDeclStatement	pcl_encoding_type_t enc = ( pcl_encoding_type_t ) pindexed -> cid . encoding ;	569:4:21814:21884	8024769	1	True				
ANR	8024782	IdentifierDecl	enc = ( pcl_encoding_type_t ) pindexed -> cid . encoding		8024769	0					
ANR	8024783	IdentifierDeclType	pcl_encoding_type_t		8024769	0					
ANR	8024784	Identifier	enc		8024769	1					
ANR	8024785	AssignmentExpression	enc = ( pcl_encoding_type_t ) pindexed -> cid . encoding		8024769	2		=			
ANR	8024786	Identifier	enc		8024769	0					
ANR	8024787	CastExpression	( pcl_encoding_type_t ) pindexed -> cid . encoding		8024769	1					
ANR	8024788	CastTarget	pcl_encoding_type_t		8024769	0					
ANR	8024789	MemberAccess	pindexed -> cid . encoding		8024769	1					
ANR	8024790	PtrMemberAccess	pindexed -> cid		8024769	0					
ANR	8024791	Identifier	pindexed		8024769	0					
ANR	8024792	Identifier	cid		8024769	1					
ANR	8024793	Identifier	encoding		8024769	1					
ANR	8024794	IdentifierDeclStatement	pcl_cs_indexed_norm_t * pnorm ;	570:4:21890:21918	8024769	2	True				
ANR	8024795	IdentifierDecl	* pnorm		8024769	0					
ANR	8024796	IdentifierDeclType	pcl_cs_indexed_norm_t *		8024769	0					
ANR	8024797	Identifier	pnorm		8024769	1					
ANR	8024798	IdentifierDeclStatement	int code = 0 ;	571:4:21924:21936	8024769	3	True				
ANR	8024799	IdentifierDecl	code = 0		8024769	0					
ANR	8024800	IdentifierDeclType	int		8024769	0					
ANR	8024801	Identifier	code		8024769	1					
ANR	8024802	AssignmentExpression	code = 0		8024769	2		=			
ANR	8024803	Identifier	code		8024769	0					
ANR	8024804	PrimaryExpression	0		8024769	1					
ANR	8024805	IfStatement	if ( pindexed -> pfixed )		8024769	4					
ANR	8024806	Condition	pindexed -> pfixed	574:8:21992:22007	8024769	0	True				
ANR	8024807	PtrMemberAccess	pindexed -> pfixed		8024769	0					
ANR	8024808	Identifier	pindexed		8024769	0					
ANR	8024809	Identifier	pfixed		8024769	1					
ANR	8024810	ReturnStatement	return 0 ;	575:8:22018:22026	8024769	1	True				
ANR	8024811	PrimaryExpression	0		8024769	0					
ANR	8024812	IfStatement	if ( ( code = unshare_indexed_cspace ( ppindexed ) ) < 0 )		8024769	5					
ANR	8024813	Condition	( code = unshare_indexed_cspace ( ppindexed ) ) < 0	578:8:22084:22129	8024769	0	True				
ANR	8024814	RelationalExpression	( code = unshare_indexed_cspace ( ppindexed ) ) < 0		8024769	0		<			
ANR	8024815	AssignmentExpression	code = unshare_indexed_cspace ( ppindexed )		8024769	0		=			
ANR	8024816	Identifier	code		8024769	0					
ANR	8024817	CallExpression	unshare_indexed_cspace ( ppindexed )		8024769	1					
ANR	8024818	Callee	unshare_indexed_cspace		8024769	0					
ANR	8024819	Identifier	unshare_indexed_cspace		8024769	0					
ANR	8024820	ArgumentList	ppindexed		8024769	1					
ANR	8024821	Argument	ppindexed		8024769	0					
ANR	8024822	Identifier	ppindexed		8024769	0					
ANR	8024823	PrimaryExpression	0		8024769	1					
ANR	8024824	ReturnStatement	return code ;	579:8:22140:22151	8024769	1	True				
ANR	8024825	Identifier	code		8024769	0					
ANR	8024826	ExpressionStatement	pindexed = * ppindexed	580:4:22157:22178	8024769	6	True				
ANR	8024827	AssignmentExpression	pindexed = * ppindexed		8024769	0		=			
ANR	8024828	Identifier	pindexed		8024769	0					
ANR	8024829	UnaryOperationExpression	* ppindexed		8024769	1					
ANR	8024830	UnaryOperator	*		8024769	0					
ANR	8024831	Identifier	ppindexed		8024769	1					
ANR	8024832	ExpressionStatement	pnorm = pindexed -> norm	581:4:22184:22206	8024769	7	True				
ANR	8024833	AssignmentExpression	pnorm = pindexed -> norm		8024769	0		=			
ANR	8024834	Identifier	pnorm		8024769	0					
ANR	8024835	PtrMemberAccess	pindexed -> norm		8024769	1					
ANR	8024836	Identifier	pindexed		8024769	0					
ANR	8024837	Identifier	norm		8024769	1					
ANR	8024838	ExpressionStatement	pnorm [ 0 ] . blkref = blk0	584:4:22253:22275	8024769	8	True				
ANR	8024839	AssignmentExpression	pnorm [ 0 ] . blkref = blk0		8024769	0		=			
ANR	8024840	MemberAccess	pnorm [ 0 ] . blkref		8024769	0					
ANR	8024841	ArrayIndexing	pnorm [ 0 ]		8024769	0					
ANR	8024842	Identifier	pnorm		8024769	0					
ANR	8024843	PrimaryExpression	0		8024769	1					
ANR	8024844	Identifier	blkref		8024769	1					
ANR	8024845	Identifier	blk0		8024769	1					
ANR	8024846	ExpressionStatement	pnorm [ 0 ] . inv_range = ( wht0 == blk0 ? 0.0 : 255.0 / ( wht0 - blk0 ) )	585:4:22281:22346	8024769	9	True				
ANR	8024847	AssignmentExpression	pnorm [ 0 ] . inv_range = ( wht0 == blk0 ? 0.0 : 255.0 / ( wht0 - blk0 ) )		8024769	0		=			
ANR	8024848	MemberAccess	pnorm [ 0 ] . inv_range		8024769	0					
ANR	8024849	ArrayIndexing	pnorm [ 0 ]		8024769	0					
ANR	8024850	Identifier	pnorm		8024769	0					
ANR	8024851	PrimaryExpression	0		8024769	1					
ANR	8024852	Identifier	inv_range		8024769	1					
ANR	8024853	ConditionalExpression	wht0 == blk0 ? 0.0 : 255.0 / ( wht0 - blk0 )		8024769	1					
ANR	8024854	Condition	wht0 == blk0		8024769	0					
ANR	8024855	EqualityExpression	wht0 == blk0		8024769	0		==			
ANR	8024856	Identifier	wht0		8024769	0					
ANR	8024857	Identifier	blk0		8024769	1					
ANR	8024858	PrimaryExpression	0.0		8024769	1					
ANR	8024859	MultiplicativeExpression	255.0 / ( wht0 - blk0 )		8024769	2		/			
ANR	8024860	PrimaryExpression	255.0		8024769	0					
ANR	8024861	AdditiveExpression	wht0 - blk0		8024769	1		-			
ANR	8024862	Identifier	wht0		8024769	0					
ANR	8024863	Identifier	blk0		8024769	1					
ANR	8024864	ExpressionStatement	pnorm [ 1 ] . blkref = blk1	586:4:22352:22374	8024769	10	True				
ANR	8024865	AssignmentExpression	pnorm [ 1 ] . blkref = blk1		8024769	0		=			
ANR	8024866	MemberAccess	pnorm [ 1 ] . blkref		8024769	0					
ANR	8024867	ArrayIndexing	pnorm [ 1 ]		8024769	0					
ANR	8024868	Identifier	pnorm		8024769	0					
ANR	8024869	PrimaryExpression	1		8024769	1					
ANR	8024870	Identifier	blkref		8024769	1					
ANR	8024871	Identifier	blk1		8024769	1					
ANR	8024872	ExpressionStatement	pnorm [ 1 ] . inv_range = ( wht1 == blk1 ? 0.0 : 255.0 / ( wht1 - blk1 ) )	587:4:22380:22445	8024769	11	True				
ANR	8024873	AssignmentExpression	pnorm [ 1 ] . inv_range = ( wht1 == blk1 ? 0.0 : 255.0 / ( wht1 - blk1 ) )		8024769	0		=			
ANR	8024874	MemberAccess	pnorm [ 1 ] . inv_range		8024769	0					
ANR	8024875	ArrayIndexing	pnorm [ 1 ]		8024769	0					
ANR	8024876	Identifier	pnorm		8024769	0					
ANR	8024877	PrimaryExpression	1		8024769	1					
ANR	8024878	Identifier	inv_range		8024769	1					
ANR	8024879	ConditionalExpression	wht1 == blk1 ? 0.0 : 255.0 / ( wht1 - blk1 )		8024769	1					
ANR	8024880	Condition	wht1 == blk1		8024769	0					
ANR	8024881	EqualityExpression	wht1 == blk1		8024769	0		==			
ANR	8024882	Identifier	wht1		8024769	0					
ANR	8024883	Identifier	blk1		8024769	1					
ANR	8024884	PrimaryExpression	0.0		8024769	1					
ANR	8024885	MultiplicativeExpression	255.0 / ( wht1 - blk1 )		8024769	2		/			
ANR	8024886	PrimaryExpression	255.0		8024769	0					
ANR	8024887	AdditiveExpression	wht1 - blk1		8024769	1		-			
ANR	8024888	Identifier	wht1		8024769	0					
ANR	8024889	Identifier	blk1		8024769	1					
ANR	8024890	ExpressionStatement	pnorm [ 2 ] . blkref = blk2	588:4:22451:22473	8024769	12	True				
ANR	8024891	AssignmentExpression	pnorm [ 2 ] . blkref = blk2		8024769	0		=			
ANR	8024892	MemberAccess	pnorm [ 2 ] . blkref		8024769	0					
ANR	8024893	ArrayIndexing	pnorm [ 2 ]		8024769	0					
ANR	8024894	Identifier	pnorm		8024769	0					
ANR	8024895	PrimaryExpression	2		8024769	1					
ANR	8024896	Identifier	blkref		8024769	1					
ANR	8024897	Identifier	blk2		8024769	1					
ANR	8024898	ExpressionStatement	pnorm [ 2 ] . inv_range = ( wht2 == blk2 ? 0.0 : 255.0 / ( wht2 - blk2 ) )	589:4:22479:22544	8024769	13	True				
ANR	8024899	AssignmentExpression	pnorm [ 2 ] . inv_range = ( wht2 == blk2 ? 0.0 : 255.0 / ( wht2 - blk2 ) )		8024769	0		=			
ANR	8024900	MemberAccess	pnorm [ 2 ] . inv_range		8024769	0					
ANR	8024901	ArrayIndexing	pnorm [ 2 ]		8024769	0					
ANR	8024902	Identifier	pnorm		8024769	0					
ANR	8024903	PrimaryExpression	2		8024769	1					
ANR	8024904	Identifier	inv_range		8024769	1					
ANR	8024905	ConditionalExpression	wht2 == blk2 ? 0.0 : 255.0 / ( wht2 - blk2 )		8024769	1					
ANR	8024906	Condition	wht2 == blk2		8024769	0					
ANR	8024907	EqualityExpression	wht2 == blk2		8024769	0		==			
ANR	8024908	Identifier	wht2		8024769	0					
ANR	8024909	Identifier	blk2		8024769	1					
ANR	8024910	PrimaryExpression	0.0		8024769	1					
ANR	8024911	MultiplicativeExpression	255.0 / ( wht2 - blk2 )		8024769	2		/			
ANR	8024912	PrimaryExpression	255.0		8024769	0					
ANR	8024913	AdditiveExpression	wht2 - blk2		8024769	1		-			
ANR	8024914	Identifier	wht2		8024769	0					
ANR	8024915	Identifier	blk2		8024769	1					
ANR	8024916	IfStatement	if ( enc >= pcl_penc_direct_by_plane )		8024769	14					
ANR	8024917	Condition	enc >= pcl_penc_direct_by_plane	629:8:24091:24121	8024769	0	True				
ANR	8024918	RelationalExpression	enc >= pcl_penc_direct_by_plane		8024769	0		>=			
ANR	8024919	Identifier	enc		8024769	0					
ANR	8024920	Identifier	pcl_penc_direct_by_plane		8024769	1					
ANR	8024921	CompoundStatement		65:8:2385:2418	8024769	1					
ANR	8024922	IdentifierDeclStatement	int i ;	630:8:24134:24139	8024769	0	True				
ANR	8024923	IdentifierDecl	i		8024769	0					
ANR	8024924	IdentifierDeclType	int		8024769	0					
ANR	8024925	Identifier	i		8024769	1					
ANR	8024926	IdentifierDeclStatement	float * pdecode = pindexed -> Decode ;	631:8:24149:24182	8024769	1	True				
ANR	8024927	IdentifierDecl	* pdecode = pindexed -> Decode		8024769	0					
ANR	8024928	IdentifierDeclType	float *		8024769	0					
ANR	8024929	Identifier	pdecode		8024769	1					
ANR	8024930	AssignmentExpression	* pdecode = pindexed -> Decode		8024769	2		=			
ANR	8024931	Identifier	pdecode		8024769	0					
ANR	8024932	PtrMemberAccess	pindexed -> Decode		8024769	1					
ANR	8024933	Identifier	pindexed		8024769	0					
ANR	8024934	Identifier	Decode		8024769	1					
ANR	8024935	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8024769	2					
ANR	8024936	ForInit	i = 0 ;	633:13:24198:24203	8024769	0	True				
ANR	8024937	AssignmentExpression	i = 0		8024769	0		=			
ANR	8024938	Identifier	i		8024769	0					
ANR	8024939	PrimaryExpression	0		8024769	1					
ANR	8024940	Condition	i < 3	633:20:24205:24209	8024769	1	True				
ANR	8024941	RelationalExpression	i < 3		8024769	0		<			
ANR	8024942	Identifier	i		8024769	0					
ANR	8024943	PrimaryExpression	3		8024769	1					
ANR	8024944	PostIncDecOperationExpression	i ++	633:27:24212:24214	8024769	2	True				
ANR	8024945	Identifier	i		8024769	0					
ANR	8024946	IncDec	++		8024769	1					
ANR	8024947	CompoundStatement		69:12:2526:2563	8024769	3					
ANR	8024948	IdentifierDeclStatement	int nbits = pindexed -> cid . bits_per_primary [ i ] ;	634:12:24231:24276	8024769	0	True				
ANR	8024949	IdentifierDecl	nbits = pindexed -> cid . bits_per_primary [ i ]		8024769	0					
ANR	8024950	IdentifierDeclType	int		8024769	0					
ANR	8024951	Identifier	nbits		8024769	1					
ANR	8024952	AssignmentExpression	nbits = pindexed -> cid . bits_per_primary [ i ]		8024769	2		=			
ANR	8024953	Identifier	nbits		8024769	0					
ANR	8024954	ArrayIndexing	pindexed -> cid . bits_per_primary [ i ]		8024769	1					
ANR	8024955	MemberAccess	pindexed -> cid . bits_per_primary		8024769	0					
ANR	8024956	PtrMemberAccess	pindexed -> cid		8024769	0					
ANR	8024957	Identifier	pindexed		8024769	0					
ANR	8024958	Identifier	cid		8024769	1					
ANR	8024959	Identifier	bits_per_primary		8024769	1					
ANR	8024960	Identifier	i		8024769	1					
ANR	8024961	IdentifierDeclStatement	double inv_range = pnorm [ i ] . inv_range ;	635:12:24290:24327	8024769	1	True				
ANR	8024962	IdentifierDecl	inv_range = pnorm [ i ] . inv_range		8024769	0					
ANR	8024963	IdentifierDeclType	double		8024769	0					
ANR	8024964	Identifier	inv_range		8024769	1					
ANR	8024965	AssignmentExpression	inv_range = pnorm [ i ] . inv_range		8024769	2		=			
ANR	8024966	Identifier	inv_range		8024769	0					
ANR	8024967	MemberAccess	pnorm [ i ] . inv_range		8024769	1					
ANR	8024968	ArrayIndexing	pnorm [ i ]		8024769	0					
ANR	8024969	Identifier	pnorm		8024769	0					
ANR	8024970	Identifier	i		8024769	1					
ANR	8024971	Identifier	inv_range		8024769	1					
ANR	8024972	IfStatement	if ( inv_range == 0.0 )		8024769	2					
ANR	8024973	Condition	inv_range == 0.0	637:16:24346:24361	8024769	0	True				
ANR	8024974	EqualityExpression	inv_range == 0.0		8024769	0		==			
ANR	8024975	Identifier	inv_range		8024769	0					
ANR	8024976	PrimaryExpression	0.0		8024769	1					
ANR	8024977	ExpressionStatement	inv_range = 254	638:16:24380:24395	8024769	1	True				
ANR	8024978	AssignmentExpression	inv_range = 254		8024769	0		=			
ANR	8024979	Identifier	inv_range		8024769	0					
ANR	8024980	PrimaryExpression	254		8024769	1					
ANR	8024981	ExpressionStatement	pdecode [ 2 * i ] = - pnorm [ i ] . blkref * inv_range / 255.0	639:12:24409:24462	8024769	3	True				
ANR	8024982	AssignmentExpression	pdecode [ 2 * i ] = - pnorm [ i ] . blkref * inv_range / 255.0		8024769	0		=			
ANR	8024983	ArrayIndexing	pdecode [ 2 * i ]		8024769	0					
ANR	8024984	Identifier	pdecode		8024769	0					
ANR	8024985	MultiplicativeExpression	2 * i		8024769	1		*			
ANR	8024986	PrimaryExpression	2		8024769	0					
ANR	8024987	Identifier	i		8024769	1					
ANR	8024988	MultiplicativeExpression	- pnorm [ i ] . blkref * inv_range / 255.0		8024769	1		*			
ANR	8024989	UnaryOperationExpression	- pnorm [ i ] . blkref		8024769	0					
ANR	8024990	UnaryOperator	-		8024769	0					
ANR	8024991	MemberAccess	pnorm [ i ] . blkref		8024769	1					
ANR	8024992	ArrayIndexing	pnorm [ i ]		8024769	0					
ANR	8024993	Identifier	pnorm		8024769	0					
ANR	8024994	Identifier	i		8024769	1					
ANR	8024995	Identifier	blkref		8024769	1					
ANR	8024996	MultiplicativeExpression	inv_range / 255.0		8024769	1		/			
ANR	8024997	Identifier	inv_range		8024769	0					
ANR	8024998	PrimaryExpression	255.0		8024769	1					
ANR	8024999	ExpressionStatement	pdecode [ 2 * i + 1 ] = ( ( float ) ( ( 1L << nbits ) - 1 ) - pnorm [ i ] . blkref ) * inv_range / 255.0	640:12:24476:24595	8024769	4	True				
ANR	8025000	AssignmentExpression	pdecode [ 2 * i + 1 ] = ( ( float ) ( ( 1L << nbits ) - 1 ) - pnorm [ i ] . blkref ) * inv_range / 255.0		8024769	0		=			
ANR	8025001	ArrayIndexing	pdecode [ 2 * i + 1 ]		8024769	0					
ANR	8025002	Identifier	pdecode		8024769	0					
ANR	8025003	AdditiveExpression	2 * i + 1		8024769	1		+			
ANR	8025004	MultiplicativeExpression	2 * i		8024769	0		*			
ANR	8025005	PrimaryExpression	2		8024769	0					
ANR	8025006	Identifier	i		8024769	1					
ANR	8025007	PrimaryExpression	1		8024769	1					
ANR	8025008	MultiplicativeExpression	( ( float ) ( ( 1L << nbits ) - 1 ) - pnorm [ i ] . blkref ) * inv_range / 255.0		8024769	1		*			
ANR	8025009	AdditiveExpression	( float ) ( ( 1L << nbits ) - 1 ) - pnorm [ i ] . blkref		8024769	0		-			
ANR	8025010	CastExpression	( float ) ( ( 1L << nbits ) - 1 )		8024769	0					
ANR	8025011	CastTarget	float		8024769	0					
ANR	8025012	AdditiveExpression	( 1L << nbits ) - 1		8024769	1		-			
ANR	8025013	ShiftExpression	1L << nbits		8024769	0		<<			
ANR	8025014	PrimaryExpression	1L		8024769	0					
ANR	8025015	Identifier	nbits		8024769	1					
ANR	8025016	PrimaryExpression	1		8024769	1					
ANR	8025017	MemberAccess	pnorm [ i ] . blkref		8024769	1					
ANR	8025018	ArrayIndexing	pnorm [ i ]		8024769	0					
ANR	8025019	Identifier	pnorm		8024769	0					
ANR	8025020	Identifier	i		8024769	1					
ANR	8025021	Identifier	blkref		8024769	1					
ANR	8025022	MultiplicativeExpression	inv_range / 255.0		8024769	1		/			
ANR	8025023	Identifier	inv_range		8024769	0					
ANR	8025024	PrimaryExpression	255.0		8024769	1					
ANR	8025025	ElseStatement	else		8024769	0					
ANR	8025026	CompoundStatement		78:11:2854:2854	8024769	0					
ANR	8025027	ExpressionStatement	pindexed -> Decode [ 0 ] = 0.0	645:8:24628:24653	8024769	0	True				
ANR	8025028	AssignmentExpression	pindexed -> Decode [ 0 ] = 0.0		8024769	0		=			
ANR	8025029	ArrayIndexing	pindexed -> Decode [ 0 ]		8024769	0					
ANR	8025030	PtrMemberAccess	pindexed -> Decode		8024769	0					
ANR	8025031	Identifier	pindexed		8024769	0					
ANR	8025032	Identifier	Decode		8024769	1					
ANR	8025033	PrimaryExpression	0		8024769	1					
ANR	8025034	PrimaryExpression	0.0		8024769	1					
ANR	8025035	ExpressionStatement	pindexed -> Decode [ 1 ] = 0.0	646:8:24663:24688	8024769	1	True				
ANR	8025036	AssignmentExpression	pindexed -> Decode [ 1 ] = 0.0		8024769	0		=			
ANR	8025037	ArrayIndexing	pindexed -> Decode [ 1 ]		8024769	0					
ANR	8025038	PtrMemberAccess	pindexed -> Decode		8024769	0					
ANR	8025039	Identifier	pindexed		8024769	0					
ANR	8025040	Identifier	Decode		8024769	1					
ANR	8025041	PrimaryExpression	1		8024769	1					
ANR	8025042	PrimaryExpression	0.0		8024769	1					
ANR	8025043	ReturnStatement	return 0 ;	648:4:24733:24741	8024769	15	True				
ANR	8025044	PrimaryExpression	0		8024769	0					
ANR	8025045	ReturnType	int		8024769	1					
ANR	8025046	Identifier	pcl_cs_indexed_set_norm_and_Decode		8024769	2					
ANR	8025047	ParameterList	"pcl_cs_indexed_t * * ppindexed , double wht0 , double wht1 , double wht2 , double blk0 , double blk1 , double blk2"		8024769	3					
ANR	8025048	Parameter	pcl_cs_indexed_t * * ppindexed	562:35:21514:21542	8024769	0	True				
ANR	8025049	ParameterType	pcl_cs_indexed_t * *		8024769	0					
ANR	8025050	Identifier	ppindexed		8024769	1					
ANR	8025051	Parameter	double wht0	563:35:21580:21590	8024769	1	True				
ANR	8025052	ParameterType	double		8024769	0					
ANR	8025053	Identifier	wht0		8024769	1					
ANR	8025054	Parameter	double wht1	564:35:21628:21638	8024769	2	True				
ANR	8025055	ParameterType	double		8024769	0					
ANR	8025056	Identifier	wht1		8024769	1					
ANR	8025057	Parameter	double wht2	565:35:21676:21686	8024769	3	True				
ANR	8025058	ParameterType	double		8024769	0					
ANR	8025059	Identifier	wht2		8024769	1					
ANR	8025060	Parameter	double blk0	566:35:21724:21734	8024769	4	True				
ANR	8025061	ParameterType	double		8024769	0					
ANR	8025062	Identifier	blk0		8024769	1					
ANR	8025063	Parameter	double blk1	566:48:21737:21747	8024769	5	True				
ANR	8025064	ParameterType	double		8024769	0					
ANR	8025065	Identifier	blk1		8024769	1					
ANR	8025066	Parameter	double blk2	566:61:21750:21760	8024769	6	True				
ANR	8025067	ParameterType	double		8024769	0					
ANR	8025068	Identifier	blk2		8024769	1					
ANR	8025069	CFGEntryNode	ENTRY		8024769		True				
ANR	8025070	CFGExitNode	EXIT		8024769		True				
ANR	8025071	Symbol	* ppindexed		8024769						
ANR	8025072	Symbol	* * pindexed		8024769						
ANR	8025073	Symbol	blk0		8024769						
ANR	8025074	Symbol	pindexed -> cid		8024769						
ANR	8025075	Symbol	pdecode		8024769						
ANR	8025076	Symbol	code		8024769						
ANR	8025077	Symbol	* pindexed		8024769						
ANR	8025078	Symbol	pindexed -> norm		8024769						
ANR	8025079	Symbol	* pnorm		8024769						
ANR	8025080	Symbol	nbits		8024769						
ANR	8025081	Symbol	pnorm [ i ] . inv_range		8024769						
ANR	8025082	Symbol	pnorm [ 2 ] . inv_range		8024769						
ANR	8025083	Symbol	pnorm [ 1 ] . inv_range		8024769						
ANR	8025084	Symbol	pcl_penc_direct_by_plane		8024769						
ANR	8025085	Symbol	* pdecode		8024769						
ANR	8025086	Symbol	* pindexed -> Decode		8024769						
ANR	8025087	Symbol	pindexed		8024769						
ANR	8025088	Symbol	pnorm [ 1 ] . blkref		8024769						
ANR	8025089	Symbol	pnorm [ 0 ] . blkref		8024769						
ANR	8025090	Symbol	pindexed -> pfixed		8024769						
ANR	8025091	Symbol	enc		8024769						
ANR	8025092	Symbol	blk1		8024769						
ANR	8025093	Symbol	blk2		8024769						
ANR	8025094	Symbol	unshare_indexed_cspace		8024769						
ANR	8025095	Symbol	pnorm [ i ] . blkref		8024769						
ANR	8025096	Symbol	pnorm [ 2 ] . blkref		8024769						
ANR	8025097	Symbol	* pindexed -> cid . bits_per_primary		8024769						
ANR	8025098	Symbol	i		8024769						
ANR	8025099	Symbol	inv_range		8024769						
ANR	8025100	Symbol	pnorm		8024769						
ANR	8025101	Symbol	* pindexed -> cid		8024769						
ANR	8025102	Symbol	* i		8024769						
ANR	8025103	Symbol	pindexed -> cid . encoding		8024769						
ANR	8025104	Symbol	pnorm [ 0 ] . inv_range		8024769						
ANR	8025105	Symbol	wht2		8024769						
ANR	8025106	Symbol	pindexed -> Decode		8024769						
ANR	8025107	Symbol	ppindexed		8024769						
ANR	8025108	Symbol	wht1		8024769						
ANR	8025109	Symbol	wht0		8024769						
ANR	8025110	Symbol	pindexed -> cid . bits_per_primary		8024769						
ANR	8025111	Function	pcl_cs_indexed_set_num_entries	663:0:25282:26822							
ANR	8025112	FunctionDef	"pcl_cs_indexed_set_num_entries (pcl_cs_indexed_t * * ppindexed , int new_num , bool gl2)"		8025111	0					
ANR	8025113	CompoundStatement		666:0:25402:26822	8025111	0					
ANR	8025114	IdentifierDeclStatement	pcl_cs_indexed_t * pindexed = * ppindexed ;	667:4:25408:25447	8025111	0	True				
ANR	8025115	IdentifierDecl	* pindexed = * ppindexed		8025111	0					
ANR	8025116	IdentifierDeclType	pcl_cs_indexed_t *		8025111	0					
ANR	8025117	Identifier	pindexed		8025111	1					
ANR	8025118	AssignmentExpression	* pindexed = * ppindexed		8025111	2		=			
ANR	8025119	Identifier	pindexed		8025111	0					
ANR	8025120	UnaryOperationExpression	* ppindexed		8025111	1					
ANR	8025121	UnaryOperator	*		8025111	0					
ANR	8025122	Identifier	ppindexed		8025111	1					
ANR	8025123	IdentifierDeclStatement	int bits = get_pow_2 ( new_num ) ;	668:4:25453:25482	8025111	1	True				
ANR	8025124	IdentifierDecl	bits = get_pow_2 ( new_num )		8025111	0					
ANR	8025125	IdentifierDeclType	int		8025111	0					
ANR	8025126	Identifier	bits		8025111	1					
ANR	8025127	AssignmentExpression	bits = get_pow_2 ( new_num )		8025111	2		=			
ANR	8025128	Identifier	bits		8025111	0					
ANR	8025129	CallExpression	get_pow_2 ( new_num )		8025111	1					
ANR	8025130	Callee	get_pow_2		8025111	0					
ANR	8025131	Identifier	get_pow_2		8025111	0					
ANR	8025132	ArgumentList	new_num		8025111	1					
ANR	8025133	Argument	new_num		8025111	0					
ANR	8025134	Identifier	new_num		8025111	0					
ANR	8025135	IdentifierDeclStatement	int old_num = pindexed -> num_entries ;	669:4:25488:25523	8025111	2	True				
ANR	8025136	IdentifierDecl	old_num = pindexed -> num_entries		8025111	0					
ANR	8025137	IdentifierDeclType	int		8025111	0					
ANR	8025138	Identifier	old_num		8025111	1					
ANR	8025139	AssignmentExpression	old_num = pindexed -> num_entries		8025111	2		=			
ANR	8025140	Identifier	old_num		8025111	0					
ANR	8025141	PtrMemberAccess	pindexed -> num_entries		8025111	1					
ANR	8025142	Identifier	pindexed		8025111	0					
ANR	8025143	Identifier	num_entries		8025111	1					
ANR	8025144	IdentifierDeclStatement	int code = 0 ;	670:4:25529:25541	8025111	3	True				
ANR	8025145	IdentifierDecl	code = 0		8025111	0					
ANR	8025146	IdentifierDeclType	int		8025111	0					
ANR	8025147	Identifier	code		8025111	1					
ANR	8025148	AssignmentExpression	code = 0		8025111	2		=			
ANR	8025149	Identifier	code		8025111	0					
ANR	8025150	PrimaryExpression	0		8025111	1					
ANR	8025151	IfStatement	if ( pindexed -> pfixed )		8025111	4					
ANR	8025152	Condition	pindexed -> pfixed	673:8:25597:25612	8025111	0	True				
ANR	8025153	PtrMemberAccess	pindexed -> pfixed		8025111	0					
ANR	8025154	Identifier	pindexed		8025111	0					
ANR	8025155	Identifier	pfixed		8025111	1					
ANR	8025156	ReturnStatement	return 0 ;	674:8:25623:25631	8025111	1	True				
ANR	8025157	PrimaryExpression	0		8025111	0					
ANR	8025158	ExpressionStatement	pindexed -> is_GL = gl2	676:4:25638:25659	8025111	5	True				
ANR	8025159	AssignmentExpression	pindexed -> is_GL = gl2		8025111	0		=			
ANR	8025160	PtrMemberAccess	pindexed -> is_GL		8025111	0					
ANR	8025161	Identifier	pindexed		8025111	0					
ANR	8025162	Identifier	is_GL		8025111	1					
ANR	8025163	Identifier	gl2		8025111	1					
ANR	8025164	ExpressionStatement	"if_debug3m ( 'c' , pindexed -> rc . memory , ""pcl_cs_indexed_set_num_entries, is gl2:%d, entries old:%d, new:%d\\n"" , gl2 , old_num , new_num )"	678:4:25666:25826	8025111	6	True				
ANR	8025165	CallExpression	"if_debug3m ( 'c' , pindexed -> rc . memory , ""pcl_cs_indexed_set_num_entries, is gl2:%d, entries old:%d, new:%d\\n"" , gl2 , old_num , new_num )"		8025111	0					
ANR	8025166	Callee	if_debug3m		8025111	0					
ANR	8025167	Identifier	if_debug3m		8025111	0					
ANR	8025168	ArgumentList	'c'		8025111	1					
ANR	8025169	Argument	'c'		8025111	0					
ANR	8025170	PrimaryExpression	'c'		8025111	0					
ANR	8025171	Argument	pindexed -> rc . memory		8025111	1					
ANR	8025172	MemberAccess	pindexed -> rc . memory		8025111	0					
ANR	8025173	PtrMemberAccess	pindexed -> rc		8025111	0					
ANR	8025174	Identifier	pindexed		8025111	0					
ANR	8025175	Identifier	rc		8025111	1					
ANR	8025176	Identifier	memory		8025111	1					
ANR	8025177	Argument	"""pcl_cs_indexed_set_num_entries, is gl2:%d, entries old:%d, new:%d\\n"""		8025111	2					
ANR	8025178	PrimaryExpression	"""pcl_cs_indexed_set_num_entries, is gl2:%d, entries old:%d, new:%d\\n"""		8025111	0					
ANR	8025179	Argument	gl2		8025111	3					
ANR	8025180	Identifier	gl2		8025111	0					
ANR	8025181	Argument	old_num		8025111	4					
ANR	8025182	Identifier	old_num		8025111	0					
ANR	8025183	Argument	new_num		8025111	5					
ANR	8025184	Identifier	new_num		8025111	0					
ANR	8025185	ExpressionStatement	bits = ( bits > pcl_cs_indexed_palette_size_log ? pcl_cs_indexed_palette_size_log : bits )	686:4:25947:26047	8025111	7	True				
ANR	8025186	AssignmentExpression	bits = ( bits > pcl_cs_indexed_palette_size_log ? pcl_cs_indexed_palette_size_log : bits )		8025111	0		=			
ANR	8025187	Identifier	bits		8025111	0					
ANR	8025188	ConditionalExpression	bits > pcl_cs_indexed_palette_size_log ? pcl_cs_indexed_palette_size_log : bits		8025111	1					
ANR	8025189	Condition	bits > pcl_cs_indexed_palette_size_log		8025111	0					
ANR	8025190	RelationalExpression	bits > pcl_cs_indexed_palette_size_log		8025111	0		>			
ANR	8025191	Identifier	bits		8025111	0					
ANR	8025192	Identifier	pcl_cs_indexed_palette_size_log		8025111	1					
ANR	8025193	Identifier	pcl_cs_indexed_palette_size_log		8025111	1					
ANR	8025194	Identifier	bits		8025111	2					
ANR	8025195	ExpressionStatement	new_num = 1L << bits	688:4:26053:26073	8025111	8	True				
ANR	8025196	AssignmentExpression	new_num = 1L << bits		8025111	0		=			
ANR	8025197	Identifier	new_num		8025111	0					
ANR	8025198	ShiftExpression	1L << bits		8025111	1		<<			
ANR	8025199	PrimaryExpression	1L		8025111	0					
ANR	8025200	Identifier	bits		8025111	1					
ANR	8025201	IfStatement	if ( ( code = unshare_indexed_cspace ( ppindexed ) ) < 0 )		8025111	9					
ANR	8025202	Condition	( code = unshare_indexed_cspace ( ppindexed ) ) < 0	691:8:26126:26171	8025111	0	True				
ANR	8025203	RelationalExpression	( code = unshare_indexed_cspace ( ppindexed ) ) < 0		8025111	0		<			
ANR	8025204	AssignmentExpression	code = unshare_indexed_cspace ( ppindexed )		8025111	0		=			
ANR	8025205	Identifier	code		8025111	0					
ANR	8025206	CallExpression	unshare_indexed_cspace ( ppindexed )		8025111	1					
ANR	8025207	Callee	unshare_indexed_cspace		8025111	0					
ANR	8025208	Identifier	unshare_indexed_cspace		8025111	0					
ANR	8025209	ArgumentList	ppindexed		8025111	1					
ANR	8025210	Argument	ppindexed		8025111	0					
ANR	8025211	Identifier	ppindexed		8025111	0					
ANR	8025212	PrimaryExpression	0		8025111	1					
ANR	8025213	ReturnStatement	return code ;	692:8:26182:26193	8025111	1	True				
ANR	8025214	Identifier	code		8025111	0					
ANR	8025215	ExpressionStatement	pindexed = * ppindexed	693:4:26199:26220	8025111	10	True				
ANR	8025216	AssignmentExpression	pindexed = * ppindexed		8025111	0		=			
ANR	8025217	Identifier	pindexed		8025111	0					
ANR	8025218	UnaryOperationExpression	* ppindexed		8025111	1					
ANR	8025219	UnaryOperator	*		8025111	0					
ANR	8025220	Identifier	ppindexed		8025111	1					
ANR	8025221	ExpressionStatement	pindexed -> cid . bits_per_index = bits	694:4:26226:26261	8025111	11	True				
ANR	8025222	AssignmentExpression	pindexed -> cid . bits_per_index = bits		8025111	0		=			
ANR	8025223	MemberAccess	pindexed -> cid . bits_per_index		8025111	0					
ANR	8025224	PtrMemberAccess	pindexed -> cid		8025111	0					
ANR	8025225	Identifier	pindexed		8025111	0					
ANR	8025226	Identifier	cid		8025111	1					
ANR	8025227	Identifier	bits_per_index		8025111	1					
ANR	8025228	Identifier	bits		8025111	1					
ANR	8025229	IfStatement	if ( pindexed -> cid . encoding < pcl_penc_direct_by_plane )		8025111	12					
ANR	8025230	Condition	pindexed -> cid . encoding < pcl_penc_direct_by_plane	697:8:26324:26372	8025111	0	True				
ANR	8025231	RelationalExpression	pindexed -> cid . encoding < pcl_penc_direct_by_plane		8025111	0		<			
ANR	8025232	MemberAccess	pindexed -> cid . encoding		8025111	0					
ANR	8025233	PtrMemberAccess	pindexed -> cid		8025111	0					
ANR	8025234	Identifier	pindexed		8025111	0					
ANR	8025235	Identifier	cid		8025111	1					
ANR	8025236	Identifier	encoding		8025111	1					
ANR	8025237	Identifier	pcl_penc_direct_by_plane		8025111	1					
ANR	8025238	ExpressionStatement	pindexed -> Decode [ 1 ] = ( float ) ( new_num - 1 )	698:8:26383:26425	8025111	1	True				
ANR	8025239	AssignmentExpression	pindexed -> Decode [ 1 ] = ( float ) ( new_num - 1 )		8025111	0		=			
ANR	8025240	ArrayIndexing	pindexed -> Decode [ 1 ]		8025111	0					
ANR	8025241	PtrMemberAccess	pindexed -> Decode		8025111	0					
ANR	8025242	Identifier	pindexed		8025111	0					
ANR	8025243	Identifier	Decode		8025111	1					
ANR	8025244	PrimaryExpression	1		8025111	1					
ANR	8025245	CastExpression	( float ) ( new_num - 1 )		8025111	1					
ANR	8025246	CastTarget	float		8025111	0					
ANR	8025247	AdditiveExpression	new_num - 1		8025111	1		-			
ANR	8025248	Identifier	new_num		8025111	0					
ANR	8025249	PrimaryExpression	1		8025111	1					
ANR	8025250	IfStatement	if ( old_num != new_num )		8025111	13					
ANR	8025251	Condition	old_num != new_num	702:8:26479:26496	8025111	0	True				
ANR	8025252	EqualityExpression	old_num != new_num		8025111	0		!=			
ANR	8025253	Identifier	old_num		8025111	0					
ANR	8025254	Identifier	new_num		8025111	1					
ANR	8025255	ExpressionStatement	"resize_indexed_cspace ( pindexed , new_num )"	703:8:26507:26547	8025111	1	True				
ANR	8025256	CallExpression	"resize_indexed_cspace ( pindexed , new_num )"		8025111	0					
ANR	8025257	Callee	resize_indexed_cspace		8025111	0					
ANR	8025258	Identifier	resize_indexed_cspace		8025111	0					
ANR	8025259	ArgumentList	pindexed		8025111	1					
ANR	8025260	Argument	pindexed		8025111	0					
ANR	8025261	Identifier	pindexed		8025111	0					
ANR	8025262	Argument	new_num		8025111	1					
ANR	8025263	Identifier	new_num		8025111	0					
ANR	8025264	ExpressionStatement	pindexed -> num_entries = new_num	706:4:26608:26639	8025111	14	True				
ANR	8025265	AssignmentExpression	pindexed -> num_entries = new_num		8025111	0		=			
ANR	8025266	PtrMemberAccess	pindexed -> num_entries		8025111	0					
ANR	8025267	Identifier	pindexed		8025111	0					
ANR	8025268	Identifier	num_entries		8025111	1					
ANR	8025269	Identifier	new_num		8025111	1					
ANR	8025270	IfStatement	if ( new_num > old_num )		8025111	15					
ANR	8025271	Condition	new_num > old_num	709:8:26716:26732	8025111	0	True				
ANR	8025272	RelationalExpression	new_num > old_num		8025111	0		>			
ANR	8025273	Identifier	new_num		8025111	0					
ANR	8025274	Identifier	old_num		8025111	1					
ANR	8025275	ExpressionStatement	"set_default_entries ( pindexed , old_num , new_num - old_num , gl2 )"	710:8:26743:26805	8025111	1	True				
ANR	8025276	CallExpression	"set_default_entries ( pindexed , old_num , new_num - old_num , gl2 )"		8025111	0					
ANR	8025277	Callee	set_default_entries		8025111	0					
ANR	8025278	Identifier	set_default_entries		8025111	0					
ANR	8025279	ArgumentList	pindexed		8025111	1					
ANR	8025280	Argument	pindexed		8025111	0					
ANR	8025281	Identifier	pindexed		8025111	0					
ANR	8025282	Argument	old_num		8025111	1					
ANR	8025283	Identifier	old_num		8025111	0					
ANR	8025284	Argument	new_num - old_num		8025111	2					
ANR	8025285	AdditiveExpression	new_num - old_num		8025111	0		-			
ANR	8025286	Identifier	new_num		8025111	0					
ANR	8025287	Identifier	old_num		8025111	1					
ANR	8025288	Argument	gl2		8025111	3					
ANR	8025289	Identifier	gl2		8025111	0					
ANR	8025290	ReturnStatement	return 0 ;	712:4:26812:26820	8025111	16	True				
ANR	8025291	PrimaryExpression	0		8025111	0					
ANR	8025292	ReturnType	int		8025111	1					
ANR	8025293	Identifier	pcl_cs_indexed_set_num_entries		8025111	2					
ANR	8025294	ParameterList	"pcl_cs_indexed_t * * ppindexed , int new_num , bool gl2"		8025111	3					
ANR	8025295	Parameter	pcl_cs_indexed_t * * ppindexed	664:31:25317:25345	8025111	0	True				
ANR	8025296	ParameterType	pcl_cs_indexed_t * *		8025111	0					
ANR	8025297	Identifier	ppindexed		8025111	1					
ANR	8025298	Parameter	int new_num	665:31:25379:25389	8025111	1	True				
ANR	8025299	ParameterType	int		8025111	0					
ANR	8025300	Identifier	new_num		8025111	1					
ANR	8025301	Parameter	bool gl2	665:44:25392:25399	8025111	2	True				
ANR	8025302	ParameterType	bool		8025111	0					
ANR	8025303	Identifier	gl2		8025111	1					
ANR	8025304	CFGEntryNode	ENTRY		8025111		True				
ANR	8025305	CFGExitNode	EXIT		8025111		True				
ANR	8025306	Symbol	* ppindexed		8025111						
ANR	8025307	Symbol	* * pindexed		8025111						
ANR	8025308	Symbol	pindexed -> cid		8025111						
ANR	8025309	Symbol	old_num		8025111						
ANR	8025310	Symbol	code		8025111						
ANR	8025311	Symbol	pindexed -> is_GL		8025111						
ANR	8025312	Symbol	* pindexed		8025111						
ANR	8025313	Symbol	pcl_cs_indexed_palette_size_log		8025111						
ANR	8025314	Symbol	new_num		8025111						
ANR	8025315	Symbol	bits		8025111						
ANR	8025316	Symbol	gl2		8025111						
ANR	8025317	Symbol	pindexed -> rc . memory		8025111						
ANR	8025318	Symbol	pindexed -> cid . bits_per_index		8025111						
ANR	8025319	Symbol	get_pow_2		8025111						
ANR	8025320	Symbol	pcl_penc_direct_by_plane		8025111						
ANR	8025321	Symbol	* pindexed -> Decode		8025111						
ANR	8025322	Symbol	pindexed -> cid . encoding		8025111						
ANR	8025323	Symbol	pindexed		8025111						
ANR	8025324	Symbol	pindexed -> rc		8025111						
ANR	8025325	Symbol	pindexed -> Decode		8025111						
ANR	8025326	Symbol	ppindexed		8025111						
ANR	8025327	Symbol	pindexed -> pfixed		8025111						
ANR	8025328	Symbol	pindexed -> num_entries		8025111						
ANR	8025329	Symbol	unshare_indexed_cspace		8025111						
ANR	8025330	Function	pcl_cs_indexed_update_lookup_tbl	728:0:27340:29173							
ANR	8025331	FunctionDef	"pcl_cs_indexed_update_lookup_tbl (pcl_cs_indexed_t * * ppindexed , pcl_lookup_tbl_t * plktbl)"		8025330	0					
ANR	8025332	CompoundStatement		731:0:27468:29173	8025330	0					
ANR	8025333	IdentifierDeclStatement	pcl_cs_indexed_t * pindexed = * ppindexed ;	732:4:27474:27513	8025330	0	True				
ANR	8025334	IdentifierDecl	* pindexed = * ppindexed		8025330	0					
ANR	8025335	IdentifierDeclType	pcl_cs_indexed_t *		8025330	0					
ANR	8025336	Identifier	pindexed		8025330	1					
ANR	8025337	AssignmentExpression	* pindexed = * ppindexed		8025330	2		=			
ANR	8025338	Identifier	pindexed		8025330	0					
ANR	8025339	UnaryOperationExpression	* ppindexed		8025330	1					
ANR	8025340	UnaryOperator	*		8025330	0					
ANR	8025341	Identifier	ppindexed		8025330	1					
ANR	8025342	IdentifierDeclStatement	pcl_cspace_type_t cstype = ( pcl_cspace_type_t ) pindexed -> cid . cspace ;	733:4:27519:27586	8025330	1	True				
ANR	8025343	IdentifierDecl	cstype = ( pcl_cspace_type_t ) pindexed -> cid . cspace		8025330	0					
ANR	8025344	IdentifierDeclType	pcl_cspace_type_t		8025330	0					
ANR	8025345	Identifier	cstype		8025330	1					
ANR	8025346	AssignmentExpression	cstype = ( pcl_cspace_type_t ) pindexed -> cid . cspace		8025330	2		=			
ANR	8025347	Identifier	cstype		8025330	0					
ANR	8025348	CastExpression	( pcl_cspace_type_t ) pindexed -> cid . cspace		8025330	1					
ANR	8025349	CastTarget	pcl_cspace_type_t		8025330	0					
ANR	8025350	MemberAccess	pindexed -> cid . cspace		8025330	1					
ANR	8025351	PtrMemberAccess	pindexed -> cid		8025330	0					
ANR	8025352	Identifier	pindexed		8025330	0					
ANR	8025353	Identifier	cid		8025330	1					
ANR	8025354	Identifier	cspace		8025330	1					
ANR	8025355	IdentifierDeclStatement	pcl_cspace_type_t lktype ;	734:4:27592:27616	8025330	2	True				
ANR	8025356	IdentifierDecl	lktype		8025330	0					
ANR	8025357	IdentifierDeclType	pcl_cspace_type_t		8025330	0					
ANR	8025358	Identifier	lktype		8025330	1					
ANR	8025359	IdentifierDeclStatement	int code = 0 ;	735:4:27622:27634	8025330	3	True				
ANR	8025360	IdentifierDecl	code = 0		8025330	0					
ANR	8025361	IdentifierDeclType	int		8025330	0					
ANR	8025362	Identifier	code		8025330	1					
ANR	8025363	AssignmentExpression	code = 0		8025330	2		=			
ANR	8025364	Identifier	code		8025330	0					
ANR	8025365	PrimaryExpression	0		8025330	1					
ANR	8025366	IfStatement	if ( plktbl != 0 )		8025330	4					
ANR	8025367	Condition	plktbl != 0	738:8:27712:27722	8025330	0	True				
ANR	8025368	EqualityExpression	plktbl != 0		8025330	0		!=			
ANR	8025369	Identifier	plktbl		8025330	0					
ANR	8025370	PrimaryExpression	0		8025330	1					
ANR	8025371	ExpressionStatement	lktype = pcl_lookup_tbl_get_cspace ( plktbl )	739:8:27733:27775	8025330	1	True				
ANR	8025372	AssignmentExpression	lktype = pcl_lookup_tbl_get_cspace ( plktbl )		8025330	0		=			
ANR	8025373	Identifier	lktype		8025330	0					
ANR	8025374	CallExpression	pcl_lookup_tbl_get_cspace ( plktbl )		8025330	1					
ANR	8025375	Callee	pcl_lookup_tbl_get_cspace		8025330	0					
ANR	8025376	Identifier	pcl_lookup_tbl_get_cspace		8025330	0					
ANR	8025377	ArgumentList	plktbl		8025330	1					
ANR	8025378	Argument	plktbl		8025330	0					
ANR	8025379	Identifier	plktbl		8025330	0					
ANR	8025380	IfStatement	if ( ( plktbl != 0 ) && ( ( cstype < lktype ) || ( lktype < pcl_cspace_Colorimetric ) ) )		8025330	5					
ANR	8025381	Condition	( plktbl != 0 ) && ( ( cstype < lktype ) || ( lktype < pcl_cspace_Colorimetric ) )	740:8:27785:27866	8025330	0	True				
ANR	8025382	AndExpression	( plktbl != 0 ) && ( ( cstype < lktype ) || ( lktype < pcl_cspace_Colorimetric ) )		8025330	0		&&			
ANR	8025383	EqualityExpression	plktbl != 0		8025330	0		!=			
ANR	8025384	Identifier	plktbl		8025330	0					
ANR	8025385	PrimaryExpression	0		8025330	1					
ANR	8025386	OrExpression	( cstype < lktype ) || ( lktype < pcl_cspace_Colorimetric )		8025330	1		||			
ANR	8025387	RelationalExpression	cstype < lktype		8025330	0		<			
ANR	8025388	Identifier	cstype		8025330	0					
ANR	8025389	Identifier	lktype		8025330	1					
ANR	8025390	RelationalExpression	lktype < pcl_cspace_Colorimetric		8025330	1		<			
ANR	8025391	Identifier	lktype		8025330	0					
ANR	8025392	Identifier	pcl_cspace_Colorimetric		8025330	1					
ANR	8025393	ReturnStatement	return 0 ;	742:8:27877:27885	8025330	1	True				
ANR	8025394	PrimaryExpression	0		8025330	0					
ANR	8025395	IfStatement	if ( ( code = unshare_indexed_cspace ( ppindexed ) ) < 0 )		8025330	6					
ANR	8025396	Condition	( code = unshare_indexed_cspace ( ppindexed ) ) < 0	745:8:27952:27997	8025330	0	True				
ANR	8025397	RelationalExpression	( code = unshare_indexed_cspace ( ppindexed ) ) < 0		8025330	0		<			
ANR	8025398	AssignmentExpression	code = unshare_indexed_cspace ( ppindexed )		8025330	0		=			
ANR	8025399	Identifier	code		8025330	0					
ANR	8025400	CallExpression	unshare_indexed_cspace ( ppindexed )		8025330	1					
ANR	8025401	Callee	unshare_indexed_cspace		8025330	0					
ANR	8025402	Identifier	unshare_indexed_cspace		8025330	0					
ANR	8025403	ArgumentList	ppindexed		8025330	1					
ANR	8025404	Argument	ppindexed		8025330	0					
ANR	8025405	Identifier	ppindexed		8025330	0					
ANR	8025406	PrimaryExpression	0		8025330	1					
ANR	8025407	ReturnStatement	return code ;	746:8:28008:28019	8025330	1	True				
ANR	8025408	Identifier	code		8025330	0					
ANR	8025409	ExpressionStatement	pindexed = * ppindexed	747:4:28025:28046	8025330	7	True				
ANR	8025410	AssignmentExpression	pindexed = * ppindexed		8025330	0		=			
ANR	8025411	Identifier	pindexed		8025330	0					
ANR	8025412	UnaryOperationExpression	* ppindexed		8025330	1					
ANR	8025413	UnaryOperator	*		8025330	0					
ANR	8025414	Identifier	ppindexed		8025330	1					
ANR	8025415	ExpressionStatement	"code = pcl_cs_base_update_lookup_tbl ( & ( pindexed -> pbase ) , plktbl )"	750:4:28107:28171	8025330	8	True				
ANR	8025416	AssignmentExpression	"code = pcl_cs_base_update_lookup_tbl ( & ( pindexed -> pbase ) , plktbl )"		8025330	0		=			
ANR	8025417	Identifier	code		8025330	0					
ANR	8025418	CallExpression	"pcl_cs_base_update_lookup_tbl ( & ( pindexed -> pbase ) , plktbl )"		8025330	1					
ANR	8025419	Callee	pcl_cs_base_update_lookup_tbl		8025330	0					
ANR	8025420	Identifier	pcl_cs_base_update_lookup_tbl		8025330	0					
ANR	8025421	ArgumentList	& ( pindexed -> pbase )		8025330	1					
ANR	8025422	Argument	& ( pindexed -> pbase )		8025330	0					
ANR	8025423	UnaryOperationExpression	& ( pindexed -> pbase )		8025330	0					
ANR	8025424	UnaryOperator	&		8025330	0					
ANR	8025425	PtrMemberAccess	pindexed -> pbase		8025330	1					
ANR	8025426	Identifier	pindexed		8025330	0					
ANR	8025427	Identifier	pbase		8025330	1					
ANR	8025428	Argument	plktbl		8025330	1					
ANR	8025429	Identifier	plktbl		8025330	0					
ANR	8025430	IfStatement	if ( code <= 0 )		8025330	9					
ANR	8025431	Condition	code <= 0	751:8:28181:28189	8025330	0	True				
ANR	8025432	RelationalExpression	code <= 0		8025330	0		<=			
ANR	8025433	Identifier	code		8025330	0					
ANR	8025434	PrimaryExpression	0		8025330	1					
ANR	8025435	ReturnStatement	return code ;	752:8:28200:28211	8025330	1	True				
ANR	8025436	Identifier	code		8025330	0					
ANR	8025437	CompoundStatement		29:8:983:1107	8025330	10					
ANR	8025438	IdentifierDeclStatement	uint size = 3 * pcl_cs_indexed_palette_size ;	758:8:28399:28442	8025330	0	True				
ANR	8025439	IdentifierDecl	size = 3 * pcl_cs_indexed_palette_size		8025330	0					
ANR	8025440	IdentifierDeclType	uint		8025330	0					
ANR	8025441	Identifier	size		8025330	1					
ANR	8025442	AssignmentExpression	size = 3 * pcl_cs_indexed_palette_size		8025330	2		=			
ANR	8025443	Identifier	size		8025330	0					
ANR	8025444	MultiplicativeExpression	3 * pcl_cs_indexed_palette_size		8025330	1		*			
ANR	8025445	PrimaryExpression	3		8025330	0					
ANR	8025446	Identifier	pcl_cs_indexed_palette_size		8025330	1					
ANR	8025447	IdentifierDeclStatement	"byte * bp = gs_alloc_string ( pindexed -> rc . memory , size , ""pcl_cs_indexed_update_lookup_tbl"" ) ;"	759:8:28452:28576	8025330	1	True				
ANR	8025448	IdentifierDecl	"* bp = gs_alloc_string ( pindexed -> rc . memory , size , ""pcl_cs_indexed_update_lookup_tbl"" )"		8025330	0					
ANR	8025449	IdentifierDeclType	byte *		8025330	0					
ANR	8025450	Identifier	bp		8025330	1					
ANR	8025451	AssignmentExpression	"* bp = gs_alloc_string ( pindexed -> rc . memory , size , ""pcl_cs_indexed_update_lookup_tbl"" )"		8025330	2		=			
ANR	8025452	Identifier	bp		8025330	0					
ANR	8025453	CallExpression	"gs_alloc_string ( pindexed -> rc . memory , size , ""pcl_cs_indexed_update_lookup_tbl"" )"		8025330	1					
ANR	8025454	Callee	gs_alloc_string		8025330	0					
ANR	8025455	Identifier	gs_alloc_string		8025330	0					
ANR	8025456	ArgumentList	pindexed -> rc . memory		8025330	1					
ANR	8025457	Argument	pindexed -> rc . memory		8025330	0					
ANR	8025458	MemberAccess	pindexed -> rc . memory		8025330	0					
ANR	8025459	PtrMemberAccess	pindexed -> rc		8025330	0					
ANR	8025460	Identifier	pindexed		8025330	0					
ANR	8025461	Identifier	rc		8025330	1					
ANR	8025462	Identifier	memory		8025330	1					
ANR	8025463	Argument	size		8025330	1					
ANR	8025464	Identifier	size		8025330	0					
ANR	8025465	Argument	"""pcl_cs_indexed_update_lookup_tbl"""		8025330	2					
ANR	8025466	PrimaryExpression	"""pcl_cs_indexed_update_lookup_tbl"""		8025330	0					
ANR	8025467	IfStatement	if ( bp == NULL )		8025330	2					
ANR	8025468	Condition	bp == NULL	762:12:28591:28600	8025330	0	True				
ANR	8025469	EqualityExpression	bp == NULL		8025330	0		==			
ANR	8025470	Identifier	bp		8025330	0					
ANR	8025471	Identifier	NULL		8025330	1					
ANR	8025472	ReturnStatement	return e_Memory ;	763:12:28615:28630	8025330	1	True				
ANR	8025473	Identifier	e_Memory		8025330	0					
ANR	8025474	ExpressionStatement	"memcpy ( bp , pindexed -> palette . data , 3 * pcl_cs_indexed_palette_size )"	764:8:28640:28707	8025330	3	True				
ANR	8025475	CallExpression	"memcpy ( bp , pindexed -> palette . data , 3 * pcl_cs_indexed_palette_size )"		8025330	0					
ANR	8025476	Callee	memcpy		8025330	0					
ANR	8025477	Identifier	memcpy		8025330	0					
ANR	8025478	ArgumentList	bp		8025330	1					
ANR	8025479	Argument	bp		8025330	0					
ANR	8025480	Identifier	bp		8025330	0					
ANR	8025481	Argument	pindexed -> palette . data		8025330	1					
ANR	8025482	MemberAccess	pindexed -> palette . data		8025330	0					
ANR	8025483	PtrMemberAccess	pindexed -> palette		8025330	0					
ANR	8025484	Identifier	pindexed		8025330	0					
ANR	8025485	Identifier	palette		8025330	1					
ANR	8025486	Identifier	data		8025330	1					
ANR	8025487	Argument	3 * pcl_cs_indexed_palette_size		8025330	2					
ANR	8025488	MultiplicativeExpression	3 * pcl_cs_indexed_palette_size		8025330	0		*			
ANR	8025489	PrimaryExpression	3		8025330	0					
ANR	8025490	Identifier	pcl_cs_indexed_palette_size		8025330	1					
ANR	8025491	ExpressionStatement	"rc_decrement ( pindexed -> pcspace , ""pcl_cs_indexed_update_lookup_tbl"" )"	765:8:28717:28784	8025330	4	True				
ANR	8025492	CallExpression	"rc_decrement ( pindexed -> pcspace , ""pcl_cs_indexed_update_lookup_tbl"" )"		8025330	0					
ANR	8025493	Callee	rc_decrement		8025330	0					
ANR	8025494	Identifier	rc_decrement		8025330	0					
ANR	8025495	ArgumentList	pindexed -> pcspace		8025330	1					
ANR	8025496	Argument	pindexed -> pcspace		8025330	0					
ANR	8025497	PtrMemberAccess	pindexed -> pcspace		8025330	0					
ANR	8025498	Identifier	pindexed		8025330	0					
ANR	8025499	Identifier	pcspace		8025330	1					
ANR	8025500	Argument	"""pcl_cs_indexed_update_lookup_tbl"""		8025330	1					
ANR	8025501	PrimaryExpression	"""pcl_cs_indexed_update_lookup_tbl"""		8025330	0					
ANR	8025502	ExpressionStatement	pindexed -> palette . data = bp	766:8:28794:28821	8025330	5	True				
ANR	8025503	AssignmentExpression	pindexed -> palette . data = bp		8025330	0		=			
ANR	8025504	MemberAccess	pindexed -> palette . data		8025330	0					
ANR	8025505	PtrMemberAccess	pindexed -> palette		8025330	0					
ANR	8025506	Identifier	pindexed		8025330	0					
ANR	8025507	Identifier	palette		8025330	1					
ANR	8025508	Identifier	data		8025330	1					
ANR	8025509	Identifier	bp		8025330	1					
ANR	8025510	ReturnStatement	"return gs_cspace_build_Indexed ( & ( pindexed -> pcspace ) , pindexed -> pbase -> pcspace , pcl_cs_indexed_palette_size , ( gs_const_string * ) & ( pindexed -> palette ) , pindexed -> rc . memory ) ;"	770:4:28859:29170	8025330	11	True				
ANR	8025511	CallExpression	"gs_cspace_build_Indexed ( & ( pindexed -> pcspace ) , pindexed -> pbase -> pcspace , pcl_cs_indexed_palette_size , ( gs_const_string * ) & ( pindexed -> palette ) , pindexed -> rc . memory )"		8025330	0					
ANR	8025512	Callee	gs_cspace_build_Indexed		8025330	0					
ANR	8025513	Identifier	gs_cspace_build_Indexed		8025330	0					
ANR	8025514	ArgumentList	& ( pindexed -> pcspace )		8025330	1					
ANR	8025515	Argument	& ( pindexed -> pcspace )		8025330	0					
ANR	8025516	UnaryOperationExpression	& ( pindexed -> pcspace )		8025330	0					
ANR	8025517	UnaryOperator	&		8025330	0					
ANR	8025518	PtrMemberAccess	pindexed -> pcspace		8025330	1					
ANR	8025519	Identifier	pindexed		8025330	0					
ANR	8025520	Identifier	pcspace		8025330	1					
ANR	8025521	Argument	pindexed -> pbase -> pcspace		8025330	1					
ANR	8025522	PtrMemberAccess	pindexed -> pbase -> pcspace		8025330	0					
ANR	8025523	PtrMemberAccess	pindexed -> pbase		8025330	0					
ANR	8025524	Identifier	pindexed		8025330	0					
ANR	8025525	Identifier	pbase		8025330	1					
ANR	8025526	Identifier	pcspace		8025330	1					
ANR	8025527	Argument	pcl_cs_indexed_palette_size		8025330	2					
ANR	8025528	Identifier	pcl_cs_indexed_palette_size		8025330	0					
ANR	8025529	Argument	( gs_const_string * ) & ( pindexed -> palette )		8025330	3					
ANR	8025530	CastExpression	( gs_const_string * ) & ( pindexed -> palette )		8025330	0					
ANR	8025531	CastTarget	gs_const_string *		8025330	0					
ANR	8025532	UnaryOperationExpression	& ( pindexed -> palette )		8025330	1					
ANR	8025533	UnaryOperator	&		8025330	0					
ANR	8025534	PtrMemberAccess	pindexed -> palette		8025330	1					
ANR	8025535	Identifier	pindexed		8025330	0					
ANR	8025536	Identifier	palette		8025330	1					
ANR	8025537	Argument	pindexed -> rc . memory		8025330	4					
ANR	8025538	MemberAccess	pindexed -> rc . memory		8025330	0					
ANR	8025539	PtrMemberAccess	pindexed -> rc		8025330	0					
ANR	8025540	Identifier	pindexed		8025330	0					
ANR	8025541	Identifier	rc		8025330	1					
ANR	8025542	Identifier	memory		8025330	1					
ANR	8025543	ReturnType	int		8025330	1					
ANR	8025544	Identifier	pcl_cs_indexed_update_lookup_tbl		8025330	2					
ANR	8025545	ParameterList	"pcl_cs_indexed_t * * ppindexed , pcl_lookup_tbl_t * plktbl"		8025330	3					
ANR	8025546	Parameter	pcl_cs_indexed_t * * ppindexed	729:33:27377:27405	8025330	0	True				
ANR	8025547	ParameterType	pcl_cs_indexed_t * *		8025330	0					
ANR	8025548	Identifier	ppindexed		8025330	1					
ANR	8025549	Parameter	pcl_lookup_tbl_t * plktbl	730:33:27441:27465	8025330	1	True				
ANR	8025550	ParameterType	pcl_lookup_tbl_t *		8025330	0					
ANR	8025551	Identifier	plktbl		8025330	1					
ANR	8025552	CFGEntryNode	ENTRY		8025330		True				
ANR	8025553	CFGExitNode	EXIT		8025330		True				
ANR	8025554	Symbol	* ppindexed		8025330						
ANR	8025555	Symbol	* * pindexed		8025330						
ANR	8025556	Symbol	pindexed -> cid		8025330						
ANR	8025557	Symbol	code		8025330						
ANR	8025558	Symbol	pindexed -> palette		8025330						
ANR	8025559	Symbol	* pindexed		8025330						
ANR	8025560	Symbol	& pindexed -> pcspace		8025330						
ANR	8025561	Symbol	pcl_lookup_tbl_get_cspace		8025330						
ANR	8025562	Symbol	& pindexed -> pbase		8025330						
ANR	8025563	Symbol	pindexed -> palette . data		8025330						
ANR	8025564	Symbol	pcl_cspace_Colorimetric		8025330						
ANR	8025565	Symbol	bp		8025330						
ANR	8025566	Symbol	cstype		8025330						
ANR	8025567	Symbol	e_Memory		8025330						
ANR	8025568	Symbol	pindexed		8025330						
ANR	8025569	Symbol	pindexed -> rc		8025330						
ANR	8025570	Symbol	pindexed -> pbase		8025330						
ANR	8025571	Symbol	pcl_cs_indexed_palette_size		8025330						
ANR	8025572	Symbol	gs_alloc_string		8025330						
ANR	8025573	Symbol	lktype		8025330						
ANR	8025574	Symbol	unshare_indexed_cspace		8025330						
ANR	8025575	Symbol	pcl_cs_base_update_lookup_tbl		8025330						
ANR	8025576	Symbol	* pindexed -> pbase		8025330						
ANR	8025577	Symbol	NULL		8025330						
ANR	8025578	Symbol	pindexed -> pcspace		8025330						
ANR	8025579	Symbol	gs_cspace_build_Indexed		8025330						
ANR	8025580	Symbol	plktbl		8025330						
ANR	8025581	Symbol	pindexed -> rc . memory		8025330						
ANR	8025582	Symbol	& pindexed -> palette		8025330						
ANR	8025583	Symbol	pindexed -> cid . cspace		8025330						
ANR	8025584	Symbol	size		8025330						
ANR	8025585	Symbol	pindexed -> pbase -> pcspace		8025330						
ANR	8025586	Symbol	ppindexed		8025330						
ANR	8025587	Function	pcl_cs_indexed_set_palette_entry	783:0:29305:30587							
ANR	8025588	FunctionDef	"pcl_cs_indexed_set_palette_entry (pcl_cs_indexed_t * * ppindexed , int indx , const float comps [ 3 ])"		8025587	0					
ANR	8025589	CompoundStatement		787:0:29443:30587	8025587	0					
ANR	8025590	IdentifierDeclStatement	pcl_cs_indexed_t * pindexed = * ppindexed ;	788:4:29449:29488	8025587	0	True				
ANR	8025591	IdentifierDecl	* pindexed = * ppindexed		8025587	0					
ANR	8025592	IdentifierDeclType	pcl_cs_indexed_t *		8025587	0					
ANR	8025593	Identifier	pindexed		8025587	1					
ANR	8025594	AssignmentExpression	* pindexed = * ppindexed		8025587	2		=			
ANR	8025595	Identifier	pindexed		8025587	0					
ANR	8025596	UnaryOperationExpression	* ppindexed		8025587	1					
ANR	8025597	UnaryOperator	*		8025587	0					
ANR	8025598	Identifier	ppindexed		8025587	1					
ANR	8025599	IdentifierDeclStatement	int code ;	789:4:29494:29502	8025587	1	True				
ANR	8025600	IdentifierDecl	code		8025587	0					
ANR	8025601	IdentifierDeclType	int		8025587	0					
ANR	8025602	Identifier	code		8025587	1					
ANR	8025603	IdentifierDeclStatement	int i ;	790:4:29508:29513	8025587	2	True				
ANR	8025604	IdentifierDecl	i		8025587	0					
ANR	8025605	IdentifierDeclType	int		8025587	0					
ANR	8025606	Identifier	i		8025587	1					
ANR	8025607	IfStatement	if ( pindexed -> pfixed )		8025587	3					
ANR	8025608	Condition	pindexed -> pfixed	793:8:29569:29584	8025587	0	True				
ANR	8025609	PtrMemberAccess	pindexed -> pfixed		8025587	0					
ANR	8025610	Identifier	pindexed		8025587	0					
ANR	8025611	Identifier	pfixed		8025587	1					
ANR	8025612	ReturnStatement	return 0 ;	794:8:29595:29603	8025587	1	True				
ANR	8025613	PrimaryExpression	0		8025587	0					
ANR	8025614	IfStatement	if ( ( indx < 0 ) || ( indx >= pindexed -> num_entries ) )		8025587	4					
ANR	8025615	Condition	( indx < 0 ) || ( indx >= pindexed -> num_entries )	802:8:29874:29918	8025587	0	True				
ANR	8025616	OrExpression	( indx < 0 ) || ( indx >= pindexed -> num_entries )		8025587	0		||			
ANR	8025617	RelationalExpression	indx < 0		8025587	0		<			
ANR	8025618	Identifier	indx		8025587	0					
ANR	8025619	PrimaryExpression	0		8025587	1					
ANR	8025620	RelationalExpression	indx >= pindexed -> num_entries		8025587	1		>=			
ANR	8025621	Identifier	indx		8025587	0					
ANR	8025622	PtrMemberAccess	pindexed -> num_entries		8025587	1					
ANR	8025623	Identifier	pindexed		8025587	0					
ANR	8025624	Identifier	num_entries		8025587	1					
ANR	8025625	ReturnStatement	return e_Range ;	803:8:29929:29943	8025587	1	True				
ANR	8025626	Identifier	e_Range		8025587	0					
ANR	8025627	IfStatement	if ( ( code = unshare_indexed_cspace ( ppindexed ) ) < 0 )		8025587	5					
ANR	8025628	Condition	( code = unshare_indexed_cspace ( ppindexed ) ) < 0	806:8:30009:30054	8025587	0	True				
ANR	8025629	RelationalExpression	( code = unshare_indexed_cspace ( ppindexed ) ) < 0		8025587	0		<			
ANR	8025630	AssignmentExpression	code = unshare_indexed_cspace ( ppindexed )		8025587	0		=			
ANR	8025631	Identifier	code		8025587	0					
ANR	8025632	CallExpression	unshare_indexed_cspace ( ppindexed )		8025587	1					
ANR	8025633	Callee	unshare_indexed_cspace		8025587	0					
ANR	8025634	Identifier	unshare_indexed_cspace		8025587	0					
ANR	8025635	ArgumentList	ppindexed		8025587	1					
ANR	8025636	Argument	ppindexed		8025587	0					
ANR	8025637	Identifier	ppindexed		8025587	0					
ANR	8025638	PrimaryExpression	0		8025587	1					
ANR	8025639	ReturnStatement	return code ;	807:8:30065:30076	8025587	1	True				
ANR	8025640	Identifier	code		8025587	0					
ANR	8025641	ExpressionStatement	pindexed = * ppindexed	808:4:30082:30103	8025587	6	True				
ANR	8025642	AssignmentExpression	pindexed = * ppindexed		8025587	0		=			
ANR	8025643	Identifier	pindexed		8025587	0					
ANR	8025644	UnaryOperationExpression	* ppindexed		8025587	1					
ANR	8025645	UnaryOperator	*		8025587	0					
ANR	8025646	Identifier	ppindexed		8025587	1					
ANR	8025647	ExpressionStatement	indx *= 3	811:4:30150:30159	8025587	7	True				
ANR	8025648	AssignmentExpression	indx *= 3		8025587	0		*=			
ANR	8025649	Identifier	indx		8025587	0					
ANR	8025650	PrimaryExpression	3		8025587	1					
ANR	8025651	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8025587	8					
ANR	8025652	ForInit	i = 0 ;	812:9:30170:30175	8025587	0	True				
ANR	8025653	AssignmentExpression	i = 0		8025587	0		=			
ANR	8025654	Identifier	i		8025587	0					
ANR	8025655	PrimaryExpression	0		8025587	1					
ANR	8025656	Condition	i < 3	812:16:30177:30181	8025587	1	True				
ANR	8025657	RelationalExpression	i < 3		8025587	0		<			
ANR	8025658	Identifier	i		8025587	0					
ANR	8025659	PrimaryExpression	3		8025587	1					
ANR	8025660	PostIncDecOperationExpression	i ++	812:23:30184:30186	8025587	2	True				
ANR	8025661	Identifier	i		8025587	0					
ANR	8025662	IncDec	++		8025587	1					
ANR	8025663	CompoundStatement		28:8:813:834	8025587	3					
ANR	8025664	IdentifierDeclStatement	pcl_cs_indexed_norm_t * pn = & ( pindexed -> norm [ i ] ) ;	813:8:30199:30247	8025587	0	True				
ANR	8025665	IdentifierDecl	* pn = & ( pindexed -> norm [ i ] )		8025587	0					
ANR	8025666	IdentifierDeclType	pcl_cs_indexed_norm_t *		8025587	0					
ANR	8025667	Identifier	pn		8025587	1					
ANR	8025668	AssignmentExpression	* pn = & ( pindexed -> norm [ i ] )		8025587	2		=			
ANR	8025669	Identifier	pn		8025587	0					
ANR	8025670	UnaryOperationExpression	& ( pindexed -> norm [ i ] )		8025587	1					
ANR	8025671	UnaryOperator	&		8025587	0					
ANR	8025672	ArrayIndexing	pindexed -> norm [ i ]		8025587	1					
ANR	8025673	PtrMemberAccess	pindexed -> norm		8025587	0					
ANR	8025674	Identifier	pindexed		8025587	0					
ANR	8025675	Identifier	norm		8025587	1					
ANR	8025676	Identifier	i		8025587	1					
ANR	8025677	IdentifierDeclStatement	double val = comps [ i ] ;	814:8:30257:30278	8025587	1	True				
ANR	8025678	IdentifierDecl	val = comps [ i ]		8025587	0					
ANR	8025679	IdentifierDeclType	double		8025587	0					
ANR	8025680	Identifier	val		8025587	1					
ANR	8025681	AssignmentExpression	val = comps [ i ]		8025587	2		=			
ANR	8025682	Identifier	val		8025587	0					
ANR	8025683	ArrayIndexing	comps [ i ]		8025587	1					
ANR	8025684	Identifier	comps		8025587	0					
ANR	8025685	Identifier	i		8025587	1					
ANR	8025686	IfStatement	if ( pn -> inv_range == 0 )		8025587	2					
ANR	8025687	Condition	pn -> inv_range == 0	816:12:30293:30310	8025587	0	True				
ANR	8025688	EqualityExpression	pn -> inv_range == 0		8025587	0		==			
ANR	8025689	PtrMemberAccess	pn -> inv_range		8025587	0					
ANR	8025690	Identifier	pn		8025587	0					
ANR	8025691	Identifier	inv_range		8025587	1					
ANR	8025692	PrimaryExpression	0		8025587	1					
ANR	8025693	ExpressionStatement	val = ( val >= pn -> blkref ? 255.0 : 0.0 )	817:12:30325:30364	8025587	1	True				
ANR	8025694	AssignmentExpression	val = ( val >= pn -> blkref ? 255.0 : 0.0 )		8025587	0		=			
ANR	8025695	Identifier	val		8025587	0					
ANR	8025696	ConditionalExpression	val >= pn -> blkref ? 255.0 : 0.0		8025587	1					
ANR	8025697	Condition	val >= pn -> blkref		8025587	0					
ANR	8025698	RelationalExpression	val >= pn -> blkref		8025587	0		>=			
ANR	8025699	Identifier	val		8025587	0					
ANR	8025700	PtrMemberAccess	pn -> blkref		8025587	1					
ANR	8025701	Identifier	pn		8025587	0					
ANR	8025702	Identifier	blkref		8025587	1					
ANR	8025703	PrimaryExpression	255.0		8025587	1					
ANR	8025704	PrimaryExpression	0.0		8025587	2					
ANR	8025705	ElseStatement	else		8025587	0					
ANR	8025706	CompoundStatement		32:13:935:935	8025587	0					
ANR	8025707	ExpressionStatement	val = ( val - pn -> blkref ) * pn -> inv_range	819:12:30393:30433	8025587	0	True				
ANR	8025708	AssignmentExpression	val = ( val - pn -> blkref ) * pn -> inv_range		8025587	0		=			
ANR	8025709	Identifier	val		8025587	0					
ANR	8025710	MultiplicativeExpression	( val - pn -> blkref ) * pn -> inv_range		8025587	1		*			
ANR	8025711	AdditiveExpression	val - pn -> blkref		8025587	0		-			
ANR	8025712	Identifier	val		8025587	0					
ANR	8025713	PtrMemberAccess	pn -> blkref		8025587	1					
ANR	8025714	Identifier	pn		8025587	0					
ANR	8025715	Identifier	blkref		8025587	1					
ANR	8025716	PtrMemberAccess	pn -> inv_range		8025587	1					
ANR	8025717	Identifier	pn		8025587	0					
ANR	8025718	Identifier	inv_range		8025587	1					
ANR	8025719	ExpressionStatement	val = ( val < 0.0 ? 0.0 : ( val > 255.0 ? 255.0 : val ) )	820:12:30447:30500	8025587	1	True				
ANR	8025720	AssignmentExpression	val = ( val < 0.0 ? 0.0 : ( val > 255.0 ? 255.0 : val ) )		8025587	0		=			
ANR	8025721	Identifier	val		8025587	0					
ANR	8025722	ConditionalExpression	val < 0.0 ? 0.0 : ( val > 255.0 ? 255.0 : val )		8025587	1					
ANR	8025723	Condition	val < 0.0		8025587	0					
ANR	8025724	RelationalExpression	val < 0.0		8025587	0		<			
ANR	8025725	Identifier	val		8025587	0					
ANR	8025726	PrimaryExpression	0.0		8025587	1					
ANR	8025727	PrimaryExpression	0.0		8025587	1					
ANR	8025728	ConditionalExpression	val > 255.0 ? 255.0 : val		8025587	2					
ANR	8025729	Condition	val > 255.0		8025587	0					
ANR	8025730	RelationalExpression	val > 255.0		8025587	0		>			
ANR	8025731	Identifier	val		8025587	0					
ANR	8025732	PrimaryExpression	255.0		8025587	1					
ANR	8025733	PrimaryExpression	255.0		8025587	1					
ANR	8025734	Identifier	val		8025587	2					
ANR	8025735	ExpressionStatement	pindexed -> palette . data [ indx + i ] = ( byte ) val	822:8:30520:30565	8025587	3	True				
ANR	8025736	AssignmentExpression	pindexed -> palette . data [ indx + i ] = ( byte ) val		8025587	0		=			
ANR	8025737	ArrayIndexing	pindexed -> palette . data [ indx + i ]		8025587	0					
ANR	8025738	MemberAccess	pindexed -> palette . data		8025587	0					
ANR	8025739	PtrMemberAccess	pindexed -> palette		8025587	0					
ANR	8025740	Identifier	pindexed		8025587	0					
ANR	8025741	Identifier	palette		8025587	1					
ANR	8025742	Identifier	data		8025587	1					
ANR	8025743	AdditiveExpression	indx + i		8025587	1		+			
ANR	8025744	Identifier	indx		8025587	0					
ANR	8025745	Identifier	i		8025587	1					
ANR	8025746	CastExpression	( byte ) val		8025587	1					
ANR	8025747	CastTarget	byte		8025587	0					
ANR	8025748	Identifier	val		8025587	1					
ANR	8025749	ReturnStatement	return 0 ;	824:4:30577:30585	8025587	9	True				
ANR	8025750	PrimaryExpression	0		8025587	0					
ANR	8025751	ReturnType	int		8025587	1					
ANR	8025752	Identifier	pcl_cs_indexed_set_palette_entry		8025587	2					
ANR	8025753	ParameterList	"pcl_cs_indexed_t * * ppindexed , int indx , const float comps [ 3 ]"		8025587	3					
ANR	8025754	Parameter	pcl_cs_indexed_t * * ppindexed	784:33:29342:29370	8025587	0	True				
ANR	8025755	ParameterType	pcl_cs_indexed_t * *		8025587	0					
ANR	8025756	Identifier	ppindexed		8025587	1					
ANR	8025757	Parameter	int indx	785:33:29406:29413	8025587	1	True				
ANR	8025758	ParameterType	int		8025587	0					
ANR	8025759	Identifier	indx		8025587	1					
ANR	8025760	Parameter	const float comps [ 3 ]	785:43:29416:29435	8025587	2	True				
ANR	8025761	ParameterType	const float [ 3 ]		8025587	0					
ANR	8025762	Identifier	comps		8025587	1					
ANR	8025763	CFGEntryNode	ENTRY		8025587		True				
ANR	8025764	CFGExitNode	EXIT		8025587		True				
ANR	8025765	Symbol	* ppindexed		8025587						
ANR	8025766	Symbol	* * pindexed		8025587						
ANR	8025767	Symbol	* pindexed -> palette . data		8025587						
ANR	8025768	Symbol	code		8025587						
ANR	8025769	Symbol	pindexed -> palette		8025587						
ANR	8025770	Symbol	* pindexed		8025587						
ANR	8025771	Symbol	pindexed -> norm		8025587						
ANR	8025772	Symbol	indx		8025587						
ANR	8025773	Symbol	* comps		8025587						
ANR	8025774	Symbol	pindexed -> palette . data		8025587						
ANR	8025775	Symbol	pindexed		8025587						
ANR	8025776	Symbol	pn -> inv_range		8025587						
ANR	8025777	Symbol	pindexed -> pfixed		8025587						
ANR	8025778	Symbol	pn -> blkref		8025587						
ANR	8025779	Symbol	unshare_indexed_cspace		8025587						
ANR	8025780	Symbol	e_Range		8025587						
ANR	8025781	Symbol	val		8025587						
ANR	8025782	Symbol	comps		8025587						
ANR	8025783	Symbol	* pn		8025587						
ANR	8025784	Symbol	i		8025587						
ANR	8025785	Symbol	* indx		8025587						
ANR	8025786	Symbol	* i		8025587						
ANR	8025787	Symbol	* pindexed -> palette		8025587						
ANR	8025788	Symbol	ppindexed		8025587						
ANR	8025789	Symbol	pindexed -> num_entries		8025587						
ANR	8025790	Symbol	pn		8025587						
ANR	8025791	Function	pcl_cs_indexed_set_default_palette_entry	834:0:30774:31495							
ANR	8025792	FunctionDef	"pcl_cs_indexed_set_default_palette_entry (pcl_cs_indexed_t * * ppindexed , int indx)"		8025791	0					
ANR	8025793	CompoundStatement		837:0:30901:31495	8025791	0					
ANR	8025794	IdentifierDeclStatement	pcl_cs_indexed_t * pindexed = * ppindexed ;	838:4:30907:30946	8025791	0	True				
ANR	8025795	IdentifierDecl	* pindexed = * ppindexed		8025791	0					
ANR	8025796	IdentifierDeclType	pcl_cs_indexed_t *		8025791	0					
ANR	8025797	Identifier	pindexed		8025791	1					
ANR	8025798	AssignmentExpression	* pindexed = * ppindexed		8025791	2		=			
ANR	8025799	Identifier	pindexed		8025791	0					
ANR	8025800	UnaryOperationExpression	* ppindexed		8025791	1					
ANR	8025801	UnaryOperator	*		8025791	0					
ANR	8025802	Identifier	ppindexed		8025791	1					
ANR	8025803	IdentifierDeclStatement	int code ;	839:4:30952:30960	8025791	1	True				
ANR	8025804	IdentifierDecl	code		8025791	0					
ANR	8025805	IdentifierDeclType	int		8025791	0					
ANR	8025806	Identifier	code		8025791	1					
ANR	8025807	IfStatement	if ( ( indx < 0 ) || ( indx >= pindexed -> num_entries ) )		8025791	2					
ANR	8025808	Condition	( indx < 0 ) || ( indx >= pindexed -> num_entries )	847:8:31231:31275	8025791	0	True				
ANR	8025809	OrExpression	( indx < 0 ) || ( indx >= pindexed -> num_entries )		8025791	0		||			
ANR	8025810	RelationalExpression	indx < 0		8025791	0		<			
ANR	8025811	Identifier	indx		8025791	0					
ANR	8025812	PrimaryExpression	0		8025791	1					
ANR	8025813	RelationalExpression	indx >= pindexed -> num_entries		8025791	1		>=			
ANR	8025814	Identifier	indx		8025791	0					
ANR	8025815	PtrMemberAccess	pindexed -> num_entries		8025791	1					
ANR	8025816	Identifier	pindexed		8025791	0					
ANR	8025817	Identifier	num_entries		8025791	1					
ANR	8025818	ReturnStatement	return e_Range ;	848:8:31286:31300	8025791	1	True				
ANR	8025819	Identifier	e_Range		8025791	0					
ANR	8025820	IfStatement	if ( ( code = unshare_indexed_cspace ( ppindexed ) ) < 0 )		8025791	3					
ANR	8025821	Condition	( code = unshare_indexed_cspace ( ppindexed ) ) < 0	851:8:31366:31411	8025791	0	True				
ANR	8025822	RelationalExpression	( code = unshare_indexed_cspace ( ppindexed ) ) < 0		8025791	0		<			
ANR	8025823	AssignmentExpression	code = unshare_indexed_cspace ( ppindexed )		8025791	0		=			
ANR	8025824	Identifier	code		8025791	0					
ANR	8025825	CallExpression	unshare_indexed_cspace ( ppindexed )		8025791	1					
ANR	8025826	Callee	unshare_indexed_cspace		8025791	0					
ANR	8025827	Identifier	unshare_indexed_cspace		8025791	0					
ANR	8025828	ArgumentList	ppindexed		8025791	1					
ANR	8025829	Argument	ppindexed		8025791	0					
ANR	8025830	Identifier	ppindexed		8025791	0					
ANR	8025831	PrimaryExpression	0		8025791	1					
ANR	8025832	ReturnStatement	return code ;	852:8:31422:31433	8025791	1	True				
ANR	8025833	Identifier	code		8025791	0					
ANR	8025834	ReturnStatement	"return set_default_entries ( * ppindexed , indx , 1 , true ) ;"	854:4:31440:31493	8025791	4	True				
ANR	8025835	CallExpression	"set_default_entries ( * ppindexed , indx , 1 , true )"		8025791	0					
ANR	8025836	Callee	set_default_entries		8025791	0					
ANR	8025837	Identifier	set_default_entries		8025791	0					
ANR	8025838	ArgumentList	* ppindexed		8025791	1					
ANR	8025839	Argument	* ppindexed		8025791	0					
ANR	8025840	UnaryOperationExpression	* ppindexed		8025791	0					
ANR	8025841	UnaryOperator	*		8025791	0					
ANR	8025842	Identifier	ppindexed		8025791	1					
ANR	8025843	Argument	indx		8025791	1					
ANR	8025844	Identifier	indx		8025791	0					
ANR	8025845	Argument	1		8025791	2					
ANR	8025846	PrimaryExpression	1		8025791	0					
ANR	8025847	Argument	true		8025791	3					
ANR	8025848	Identifier	true		8025791	0					
ANR	8025849	ReturnType	int		8025791	1					
ANR	8025850	Identifier	pcl_cs_indexed_set_default_palette_entry		8025791	2					
ANR	8025851	ParameterList	"pcl_cs_indexed_t * * ppindexed , int indx"		8025791	3					
ANR	8025852	Parameter	pcl_cs_indexed_t * * ppindexed	835:41:30819:30847	8025791	0	True				
ANR	8025853	ParameterType	pcl_cs_indexed_t * *		8025791	0					
ANR	8025854	Identifier	ppindexed		8025791	1					
ANR	8025855	Parameter	int indx	836:41:30891:30898	8025791	1	True				
ANR	8025856	ParameterType	int		8025791	0					
ANR	8025857	Identifier	indx		8025791	1					
ANR	8025858	CFGEntryNode	ENTRY		8025791		True				
ANR	8025859	CFGExitNode	EXIT		8025791		True				
ANR	8025860	Symbol	* ppindexed		8025791						
ANR	8025861	Symbol	e_Range		8025791						
ANR	8025862	Symbol	code		8025791						
ANR	8025863	Symbol	* pindexed		8025791						
ANR	8025864	Symbol	pindexed		8025791						
ANR	8025865	Symbol	set_default_entries		8025791						
ANR	8025866	Symbol	indx		8025791						
ANR	8025867	Symbol	true		8025791						
ANR	8025868	Symbol	ppindexed		8025791						
ANR	8025869	Symbol	pindexed -> num_entries		8025791						
ANR	8025870	Symbol	unshare_indexed_cspace		8025791						
ANR	8025871	Function	pcl_cs_indexed_set_pen_width	862:0:31617:32118							
ANR	8025872	FunctionDef	"pcl_cs_indexed_set_pen_width (pcl_cs_indexed_t * * ppindexed , int pen , double width)"		8025871	0					
ANR	8025873	CompoundStatement		865:0:31733:32118	8025871	0					
ANR	8025874	IdentifierDeclStatement	pcl_cs_indexed_t * pindexed = * ppindexed ;	866:4:31739:31778	8025871	0	True				
ANR	8025875	IdentifierDecl	* pindexed = * ppindexed		8025871	0					
ANR	8025876	IdentifierDeclType	pcl_cs_indexed_t *		8025871	0					
ANR	8025877	Identifier	pindexed		8025871	1					
ANR	8025878	AssignmentExpression	* pindexed = * ppindexed		8025871	2		=			
ANR	8025879	Identifier	pindexed		8025871	0					
ANR	8025880	UnaryOperationExpression	* ppindexed		8025871	1					
ANR	8025881	UnaryOperator	*		8025871	0					
ANR	8025882	Identifier	ppindexed		8025871	1					
ANR	8025883	IdentifierDeclStatement	int code ;	867:4:31784:31792	8025871	1	True				
ANR	8025884	IdentifierDecl	code		8025871	0					
ANR	8025885	IdentifierDeclType	int		8025871	0					
ANR	8025886	Identifier	code		8025871	1					
ANR	8025887	IfStatement	if ( ( pen < 0 ) || ( pen > pindexed -> num_entries ) )		8025871	2					
ANR	8025888	Condition	( pen < 0 ) || ( pen > pindexed -> num_entries )	870:8:31840:31881	8025871	0	True				
ANR	8025889	OrExpression	( pen < 0 ) || ( pen > pindexed -> num_entries )		8025871	0		||			
ANR	8025890	RelationalExpression	pen < 0		8025871	0		<			
ANR	8025891	Identifier	pen		8025871	0					
ANR	8025892	PrimaryExpression	0		8025871	1					
ANR	8025893	RelationalExpression	pen > pindexed -> num_entries		8025871	1		>			
ANR	8025894	Identifier	pen		8025871	0					
ANR	8025895	PtrMemberAccess	pindexed -> num_entries		8025871	1					
ANR	8025896	Identifier	pindexed		8025871	0					
ANR	8025897	Identifier	num_entries		8025871	1					
ANR	8025898	ReturnStatement	return e_Range ;	871:8:31892:31906	8025871	1	True				
ANR	8025899	Identifier	e_Range		8025871	0					
ANR	8025900	IfStatement	if ( ( code = unshare_indexed_cspace ( ppindexed ) ) < 0 )		8025871	3					
ANR	8025901	Condition	( code = unshare_indexed_cspace ( ppindexed ) ) < 0	873:8:31968:32013	8025871	0	True				
ANR	8025902	RelationalExpression	( code = unshare_indexed_cspace ( ppindexed ) ) < 0		8025871	0		<			
ANR	8025903	AssignmentExpression	code = unshare_indexed_cspace ( ppindexed )		8025871	0		=			
ANR	8025904	Identifier	code		8025871	0					
ANR	8025905	CallExpression	unshare_indexed_cspace ( ppindexed )		8025871	1					
ANR	8025906	Callee	unshare_indexed_cspace		8025871	0					
ANR	8025907	Identifier	unshare_indexed_cspace		8025871	0					
ANR	8025908	ArgumentList	ppindexed		8025871	1					
ANR	8025909	Argument	ppindexed		8025871	0					
ANR	8025910	Identifier	ppindexed		8025871	0					
ANR	8025911	PrimaryExpression	0		8025871	1					
ANR	8025912	ReturnStatement	return code ;	874:8:32024:32035	8025871	1	True				
ANR	8025913	Identifier	code		8025871	0					
ANR	8025914	ExpressionStatement	pindexed = * ppindexed	875:4:32041:32062	8025871	4	True				
ANR	8025915	AssignmentExpression	pindexed = * ppindexed		8025871	0		=			
ANR	8025916	Identifier	pindexed		8025871	0					
ANR	8025917	UnaryOperationExpression	* ppindexed		8025871	1					
ANR	8025918	UnaryOperator	*		8025871	0					
ANR	8025919	Identifier	ppindexed		8025871	1					
ANR	8025920	ExpressionStatement	pindexed -> pen_widths [ pen ] = width	877:4:32069:32102	8025871	5	True				
ANR	8025921	AssignmentExpression	pindexed -> pen_widths [ pen ] = width		8025871	0		=			
ANR	8025922	ArrayIndexing	pindexed -> pen_widths [ pen ]		8025871	0					
ANR	8025923	PtrMemberAccess	pindexed -> pen_widths		8025871	0					
ANR	8025924	Identifier	pindexed		8025871	0					
ANR	8025925	Identifier	pen_widths		8025871	1					
ANR	8025926	Identifier	pen		8025871	1					
ANR	8025927	Identifier	width		8025871	1					
ANR	8025928	ReturnStatement	return 0 ;	878:4:32108:32116	8025871	6	True				
ANR	8025929	PrimaryExpression	0		8025871	0					
ANR	8025930	ReturnType	int		8025871	1					
ANR	8025931	Identifier	pcl_cs_indexed_set_pen_width		8025871	2					
ANR	8025932	ParameterList	"pcl_cs_indexed_t * * ppindexed , int pen , double width"		8025871	3					
ANR	8025933	Parameter	pcl_cs_indexed_t * * ppindexed	863:29:31650:31678	8025871	0	True				
ANR	8025934	ParameterType	pcl_cs_indexed_t * *		8025871	0					
ANR	8025935	Identifier	ppindexed		8025871	1					
ANR	8025936	Parameter	int pen	864:29:31710:31716	8025871	1	True				
ANR	8025937	ParameterType	int		8025871	0					
ANR	8025938	Identifier	pen		8025871	1					
ANR	8025939	Parameter	double width	864:38:31719:31730	8025871	2	True				
ANR	8025940	ParameterType	double		8025871	0					
ANR	8025941	Identifier	width		8025871	1					
ANR	8025942	CFGEntryNode	ENTRY		8025871		True				
ANR	8025943	CFGExitNode	EXIT		8025871		True				
ANR	8025944	Symbol	* ppindexed		8025871						
ANR	8025945	Symbol	e_Range		8025871						
ANR	8025946	Symbol	* * pindexed		8025871						
ANR	8025947	Symbol	code		8025871						
ANR	8025948	Symbol	* pen		8025871						
ANR	8025949	Symbol	* pindexed		8025871						
ANR	8025950	Symbol	* pindexed -> pen_widths		8025871						
ANR	8025951	Symbol	pindexed		8025871						
ANR	8025952	Symbol	pen		8025871						
ANR	8025953	Symbol	width		8025871						
ANR	8025954	Symbol	ppindexed		8025871						
ANR	8025955	Symbol	pindexed -> num_entries		8025871						
ANR	8025956	Symbol	pindexed -> pen_widths		8025871						
ANR	8025957	Symbol	unshare_indexed_cspace		8025871						
ANR	8025958	Function	pcl_cs_indexed_build_cspace	895:0:32688:36582							
ANR	8025959	FunctionDef	"pcl_cs_indexed_build_cspace (pcl_state_t * pcs , pcl_cs_indexed_t * * ppindexed , const pcl_cid_data_t * pcid , bool pfixed , bool gl2 , gs_memory_t * pmem)"		8025958	0					
ANR	8025960	CompoundStatement		900:0:32926:36582	8025958	0					
ANR	8025961	IdentifierDeclStatement	pcl_cs_indexed_t * pindexed = * ppindexed ;	901:4:32932:32971	8025958	0	True				
ANR	8025962	IdentifierDecl	* pindexed = * ppindexed		8025958	0					
ANR	8025963	IdentifierDeclType	pcl_cs_indexed_t *		8025958	0					
ANR	8025964	Identifier	pindexed		8025958	1					
ANR	8025965	AssignmentExpression	* pindexed = * ppindexed		8025958	2		=			
ANR	8025966	Identifier	pindexed		8025958	0					
ANR	8025967	UnaryOperationExpression	* ppindexed		8025958	1					
ANR	8025968	UnaryOperator	*		8025958	0					
ANR	8025969	Identifier	ppindexed		8025958	1					
ANR	8025970	IdentifierDeclStatement	pcl_cspace_type_t type = pcl_cid_get_cspace ( pcid ) ;	902:4:32977:33026	8025958	1	True				
ANR	8025971	IdentifierDecl	type = pcl_cid_get_cspace ( pcid )		8025958	0					
ANR	8025972	IdentifierDeclType	pcl_cspace_type_t		8025958	0					
ANR	8025973	Identifier	type		8025958	1					
ANR	8025974	AssignmentExpression	type = pcl_cid_get_cspace ( pcid )		8025958	2		=			
ANR	8025975	Identifier	type		8025958	0					
ANR	8025976	CallExpression	pcl_cid_get_cspace ( pcid )		8025958	1					
ANR	8025977	Callee	pcl_cid_get_cspace		8025958	0					
ANR	8025978	Identifier	pcl_cid_get_cspace		8025958	0					
ANR	8025979	ArgumentList	pcid		8025958	1					
ANR	8025980	Argument	pcid		8025958	0					
ANR	8025981	Identifier	pcid		8025958	0					
ANR	8025982	IdentifierDeclStatement	int bits = pcl_cid_get_bits_per_index ( pcid ) ;	903:4:33032:33075	8025958	2	True				
ANR	8025983	IdentifierDecl	bits = pcl_cid_get_bits_per_index ( pcid )		8025958	0					
ANR	8025984	IdentifierDeclType	int		8025958	0					
ANR	8025985	Identifier	bits		8025958	1					
ANR	8025986	AssignmentExpression	bits = pcl_cid_get_bits_per_index ( pcid )		8025958	2		=			
ANR	8025987	Identifier	bits		8025958	0					
ANR	8025988	CallExpression	pcl_cid_get_bits_per_index ( pcid )		8025958	1					
ANR	8025989	Callee	pcl_cid_get_bits_per_index		8025958	0					
ANR	8025990	Identifier	pcl_cid_get_bits_per_index		8025958	0					
ANR	8025991	ArgumentList	pcid		8025958	1					
ANR	8025992	Argument	pcid		8025958	0					
ANR	8025993	Identifier	pcid		8025958	0					
ANR	8025994	IdentifierDeclStatement	double wht_ref [ 3 ] ;	904:4:33081:33098	8025958	3	True				
ANR	8025995	IdentifierDecl	wht_ref [ 3 ]		8025958	0					
ANR	8025996	IdentifierDeclType	double [ 3 ]		8025958	0					
ANR	8025997	Identifier	wht_ref		8025958	1					
ANR	8025998	PrimaryExpression	3		8025958	2					
ANR	8025999	IdentifierDeclStatement	double blk_ref [ 3 ] ;	905:4:33104:33121	8025958	4	True				
ANR	8026000	IdentifierDecl	blk_ref [ 3 ]		8025958	0					
ANR	8026001	IdentifierDeclType	double [ 3 ]		8025958	0					
ANR	8026002	Identifier	blk_ref		8025958	1					
ANR	8026003	PrimaryExpression	3		8025958	2					
ANR	8026004	IdentifierDeclStatement	pcl_cs_base_t * pbase = 0 ;	906:4:33127:33151	8025958	5	True				
ANR	8026005	IdentifierDecl	* pbase = 0		8025958	0					
ANR	8026006	IdentifierDeclType	pcl_cs_base_t *		8025958	0					
ANR	8026007	Identifier	pbase		8025958	1					
ANR	8026008	AssignmentExpression	* pbase = 0		8025958	2		=			
ANR	8026009	Identifier	pbase		8025958	0					
ANR	8026010	PrimaryExpression	0		8025958	1					
ANR	8026011	IdentifierDeclStatement	bool is_default = false ;	907:4:33157:33180	8025958	6	True				
ANR	8026012	IdentifierDecl	is_default = false		8025958	0					
ANR	8026013	IdentifierDeclType	bool		8025958	0					
ANR	8026014	Identifier	is_default		8025958	1					
ANR	8026015	AssignmentExpression	is_default = false		8025958	2		=			
ANR	8026016	Identifier	false		8025958	0					
ANR	8026017	Identifier	false		8025958	1					
ANR	8026018	IdentifierDeclStatement	int code = 0 ;	908:4:33186:33198	8025958	7	True				
ANR	8026019	IdentifierDecl	code = 0		8025958	0					
ANR	8026020	IdentifierDeclType	int		8025958	0					
ANR	8026021	Identifier	code		8025958	1					
ANR	8026022	AssignmentExpression	code = 0		8025958	2		=			
ANR	8026023	Identifier	code		8025958	0					
ANR	8026024	PrimaryExpression	0		8025958	1					
ANR	8026025	IfStatement	if ( pfixed && ( pcid -> u . hdr . bits_per_index == dflt_cid_hdr . bits_per_index ) )		8025958	8					
ANR	8026026	Condition	pfixed && ( pcid -> u . hdr . bits_per_index == dflt_cid_hdr . bits_per_index )	915:8:33412:33480	8025958	0	True				
ANR	8026027	AndExpression	pfixed && ( pcid -> u . hdr . bits_per_index == dflt_cid_hdr . bits_per_index )		8025958	0		&&			
ANR	8026028	Identifier	pfixed		8025958	0					
ANR	8026029	EqualityExpression	pcid -> u . hdr . bits_per_index == dflt_cid_hdr . bits_per_index		8025958	1		==			
ANR	8026030	MemberAccess	pcid -> u . hdr . bits_per_index		8025958	0					
ANR	8026031	MemberAccess	pcid -> u . hdr		8025958	0					
ANR	8026032	PtrMemberAccess	pcid -> u		8025958	0					
ANR	8026033	Identifier	pcid		8025958	0					
ANR	8026034	Identifier	u		8025958	1					
ANR	8026035	Identifier	hdr		8025958	1					
ANR	8026036	Identifier	bits_per_index		8025958	1					
ANR	8026037	MemberAccess	dflt_cid_hdr . bits_per_index		8025958	1					
ANR	8026038	Identifier	dflt_cid_hdr		8025958	0					
ANR	8026039	Identifier	bits_per_index		8025958	1					
ANR	8026040	CompoundStatement		16:79:556:556	8025958	1					
ANR	8026041	ExpressionStatement	is_default = true	916:8:33493:33510	8025958	0	True				
ANR	8026042	AssignmentExpression	is_default = true		8025958	0		=			
ANR	8026043	Identifier	is_default		8025958	0					
ANR	8026044	Identifier	true		8025958	1					
ANR	8026045	IfStatement	if ( pcs -> pdflt_cs_indexed != 0 )		8025958	1					
ANR	8026046	Condition	pcs -> pdflt_cs_indexed != 0	917:12:33524:33549	8025958	0	True				
ANR	8026047	EqualityExpression	pcs -> pdflt_cs_indexed != 0		8025958	0		!=			
ANR	8026048	PtrMemberAccess	pcs -> pdflt_cs_indexed		8025958	0					
ANR	8026049	Identifier	pcs		8025958	0					
ANR	8026050	Identifier	pdflt_cs_indexed		8025958	1					
ANR	8026051	PrimaryExpression	0		8025958	1					
ANR	8026052	CompoundStatement		18:40:625:625	8025958	1					
ANR	8026053	ExpressionStatement	"if_debug0m ( 'c' , pmem , ""[c]build request for default color space\\n"" )"	918:12:33566:33656	8025958	0	True				
ANR	8026054	CallExpression	"if_debug0m ( 'c' , pmem , ""[c]build request for default color space\\n"" )"		8025958	0					
ANR	8026055	Callee	if_debug0m		8025958	0					
ANR	8026056	Identifier	if_debug0m		8025958	0					
ANR	8026057	ArgumentList	'c'		8025958	1					
ANR	8026058	Argument	'c'		8025958	0					
ANR	8026059	PrimaryExpression	'c'		8025958	0					
ANR	8026060	Argument	pmem		8025958	1					
ANR	8026061	Identifier	pmem		8025958	0					
ANR	8026062	Argument	"""[c]build request for default color space\\n"""		8025958	2					
ANR	8026063	PrimaryExpression	"""[c]build request for default color space\\n"""		8025958	0					
ANR	8026064	ExpressionStatement	"pcl_cs_indexed_copy_from ( * ppindexed , pcs -> pdflt_cs_indexed )"	920:12:33670:33729	8025958	1	True				
ANR	8026065	CallExpression	"pcl_cs_indexed_copy_from ( * ppindexed , pcs -> pdflt_cs_indexed )"		8025958	0					
ANR	8026066	Callee	pcl_cs_indexed_copy_from		8025958	0					
ANR	8026067	Identifier	pcl_cs_indexed_copy_from		8025958	0					
ANR	8026068	ArgumentList	* ppindexed		8025958	1					
ANR	8026069	Argument	* ppindexed		8025958	0					
ANR	8026070	UnaryOperationExpression	* ppindexed		8025958	0					
ANR	8026071	UnaryOperator	*		8025958	0					
ANR	8026072	Identifier	ppindexed		8025958	1					
ANR	8026073	Argument	pcs -> pdflt_cs_indexed		8025958	1					
ANR	8026074	PtrMemberAccess	pcs -> pdflt_cs_indexed		8025958	0					
ANR	8026075	Identifier	pcs		8025958	0					
ANR	8026076	Identifier	pdflt_cs_indexed		8025958	1					
ANR	8026077	ReturnStatement	return 0 ;	921:12:33743:33751	8025958	2	True				
ANR	8026078	PrimaryExpression	0		8025958	0					
ANR	8026079	IfStatement	if ( pindexed != 0 )		8025958	9					
ANR	8026080	Condition	pindexed != 0	926:8:33833:33845	8025958	0	True				
ANR	8026081	EqualityExpression	pindexed != 0		8025958	0		!=			
ANR	8026082	Identifier	pindexed		8025958	0					
ANR	8026083	PrimaryExpression	0		8025958	1					
ANR	8026084	CompoundStatement		27:23:921:921	8025958	1					
ANR	8026085	ExpressionStatement	"if_debug1m ( 'c' , pmem , ""[c]releasing index for underlying color space:%s\\n"" , pcl_cid_cspace_get_debug_name ( pmem , pindexed -> pbase -> type ) )"	927:8:33858:34080	8025958	0	True				
ANR	8026086	CallExpression	"if_debug1m ( 'c' , pmem , ""[c]releasing index for underlying color space:%s\\n"" , pcl_cid_cspace_get_debug_name ( pmem , pindexed -> pbase -> type ) )"		8025958	0					
ANR	8026087	Callee	if_debug1m		8025958	0					
ANR	8026088	Identifier	if_debug1m		8025958	0					
ANR	8026089	ArgumentList	'c'		8025958	1					
ANR	8026090	Argument	'c'		8025958	0					
ANR	8026091	PrimaryExpression	'c'		8025958	0					
ANR	8026092	Argument	pmem		8025958	1					
ANR	8026093	Identifier	pmem		8025958	0					
ANR	8026094	Argument	"""[c]releasing index for underlying color space:%s\\n"""		8025958	2					
ANR	8026095	PrimaryExpression	"""[c]releasing index for underlying color space:%s\\n"""		8025958	0					
ANR	8026096	Argument	"pcl_cid_cspace_get_debug_name ( pmem , pindexed -> pbase -> type )"		8025958	3					
ANR	8026097	CallExpression	"pcl_cid_cspace_get_debug_name ( pmem , pindexed -> pbase -> type )"		8025958	0					
ANR	8026098	Callee	pcl_cid_cspace_get_debug_name		8025958	0					
ANR	8026099	Identifier	pcl_cid_cspace_get_debug_name		8025958	0					
ANR	8026100	ArgumentList	pmem		8025958	1					
ANR	8026101	Argument	pmem		8025958	0					
ANR	8026102	Identifier	pmem		8025958	0					
ANR	8026103	Argument	pindexed -> pbase -> type		8025958	1					
ANR	8026104	PtrMemberAccess	pindexed -> pbase -> type		8025958	0					
ANR	8026105	PtrMemberAccess	pindexed -> pbase		8025958	0					
ANR	8026106	Identifier	pindexed		8025958	0					
ANR	8026107	Identifier	pbase		8025958	1					
ANR	8026108	Identifier	type		8025958	1					
ANR	8026109	ExpressionStatement	"rc_decrement ( pindexed , ""build indexed color space"" )"	931:8:34090:34141	8025958	1	True				
ANR	8026110	CallExpression	"rc_decrement ( pindexed , ""build indexed color space"" )"		8025958	0					
ANR	8026111	Callee	rc_decrement		8025958	0					
ANR	8026112	Identifier	rc_decrement		8025958	0					
ANR	8026113	ArgumentList	pindexed		8025958	1					
ANR	8026114	Argument	pindexed		8025958	0					
ANR	8026115	Identifier	pindexed		8025958	0					
ANR	8026116	Argument	"""build indexed color space"""		8025958	1					
ANR	8026117	PrimaryExpression	"""build indexed color space"""		8025958	0					
ANR	8026118	IfStatement	"if ( ( code = pcl_cs_base_build_cspace ( & pbase , pcid , pmem ) ) < 0 )"		8025958	10					
ANR	8026119	Condition	"( code = pcl_cs_base_build_cspace ( & pbase , pcid , pmem ) ) < 0"	935:8:34195:34251	8025958	0	True				
ANR	8026120	RelationalExpression	"( code = pcl_cs_base_build_cspace ( & pbase , pcid , pmem ) ) < 0"		8025958	0		<			
ANR	8026121	AssignmentExpression	"code = pcl_cs_base_build_cspace ( & pbase , pcid , pmem )"		8025958	0		=			
ANR	8026122	Identifier	code		8025958	0					
ANR	8026123	CallExpression	"pcl_cs_base_build_cspace ( & pbase , pcid , pmem )"		8025958	1					
ANR	8026124	Callee	pcl_cs_base_build_cspace		8025958	0					
ANR	8026125	Identifier	pcl_cs_base_build_cspace		8025958	0					
ANR	8026126	ArgumentList	& pbase		8025958	1					
ANR	8026127	Argument	& pbase		8025958	0					
ANR	8026128	UnaryOperationExpression	& pbase		8025958	0					
ANR	8026129	UnaryOperator	&		8025958	0					
ANR	8026130	Identifier	pbase		8025958	1					
ANR	8026131	Argument	pcid		8025958	1					
ANR	8026132	Identifier	pcid		8025958	0					
ANR	8026133	Argument	pmem		8025958	2					
ANR	8026134	Identifier	pmem		8025958	0					
ANR	8026135	PrimaryExpression	0		8025958	1					
ANR	8026136	ReturnStatement	return code ;	936:8:34262:34273	8025958	1	True				
ANR	8026137	Identifier	code		8025958	0					
ANR	8026138	IfStatement	"if ( ( code = alloc_indexed_cspace ( ppindexed , pbase , 1L << bits , pmem ) ) < 0 )"		8025958	11					
ANR	8026139	Condition	"( code = alloc_indexed_cspace ( ppindexed , pbase , 1L << bits , pmem ) ) < 0"	939:8:34324:34392	8025958	0	True				
ANR	8026140	RelationalExpression	"( code = alloc_indexed_cspace ( ppindexed , pbase , 1L << bits , pmem ) ) < 0"		8025958	0		<			
ANR	8026141	AssignmentExpression	"code = alloc_indexed_cspace ( ppindexed , pbase , 1L << bits , pmem )"		8025958	0		=			
ANR	8026142	Identifier	code		8025958	0					
ANR	8026143	CallExpression	"alloc_indexed_cspace ( ppindexed , pbase , 1L << bits , pmem )"		8025958	1					
ANR	8026144	Callee	alloc_indexed_cspace		8025958	0					
ANR	8026145	Identifier	alloc_indexed_cspace		8025958	0					
ANR	8026146	ArgumentList	ppindexed		8025958	1					
ANR	8026147	Argument	ppindexed		8025958	0					
ANR	8026148	Identifier	ppindexed		8025958	0					
ANR	8026149	Argument	pbase		8025958	1					
ANR	8026150	Identifier	pbase		8025958	0					
ANR	8026151	Argument	1L << bits		8025958	2					
ANR	8026152	ShiftExpression	1L << bits		8025958	0		<<			
ANR	8026153	PrimaryExpression	1L		8025958	0					
ANR	8026154	Identifier	bits		8025958	1					
ANR	8026155	Argument	pmem		8025958	3					
ANR	8026156	Identifier	pmem		8025958	0					
ANR	8026157	PrimaryExpression	0		8025958	1					
ANR	8026158	CompoundStatement		40:79:1468:1468	8025958	1					
ANR	8026159	ExpressionStatement	pcl_cs_base_release ( pbase )	940:8:34405:34431	8025958	0	True				
ANR	8026160	CallExpression	pcl_cs_base_release ( pbase )		8025958	0					
ANR	8026161	Callee	pcl_cs_base_release		8025958	0					
ANR	8026162	Identifier	pcl_cs_base_release		8025958	0					
ANR	8026163	ArgumentList	pbase		8025958	1					
ANR	8026164	Argument	pbase		8025958	0					
ANR	8026165	Identifier	pbase		8025958	0					
ANR	8026166	ReturnStatement	return code ;	941:8:34441:34452	8025958	1	True				
ANR	8026167	Identifier	code		8025958	0					
ANR	8026168	ExpressionStatement	pindexed = * ppindexed	943:4:34464:34485	8025958	12	True				
ANR	8026169	AssignmentExpression	pindexed = * ppindexed		8025958	0		=			
ANR	8026170	Identifier	pindexed		8025958	0					
ANR	8026171	UnaryOperationExpression	* ppindexed		8025958	1					
ANR	8026172	UnaryOperator	*		8025958	0					
ANR	8026173	Identifier	ppindexed		8025958	1					
ANR	8026174	ExpressionStatement	"if_debug1m ( 'c' , pmem , ""[c]built base and index for color space:%s\\n"" , pcl_cid_cspace_get_debug_name ( pmem , pindexed -> pbase -> type ) )"	945:4:34492:34636	8025958	13	True				
ANR	8026175	CallExpression	"if_debug1m ( 'c' , pmem , ""[c]built base and index for color space:%s\\n"" , pcl_cid_cspace_get_debug_name ( pmem , pindexed -> pbase -> type ) )"		8025958	0					
ANR	8026176	Callee	if_debug1m		8025958	0					
ANR	8026177	Identifier	if_debug1m		8025958	0					
ANR	8026178	ArgumentList	'c'		8025958	1					
ANR	8026179	Argument	'c'		8025958	0					
ANR	8026180	PrimaryExpression	'c'		8025958	0					
ANR	8026181	Argument	pmem		8025958	1					
ANR	8026182	Identifier	pmem		8025958	0					
ANR	8026183	Argument	"""[c]built base and index for color space:%s\\n"""		8025958	2					
ANR	8026184	PrimaryExpression	"""[c]built base and index for color space:%s\\n"""		8025958	0					
ANR	8026185	Argument	"pcl_cid_cspace_get_debug_name ( pmem , pindexed -> pbase -> type )"		8025958	3					
ANR	8026186	CallExpression	"pcl_cid_cspace_get_debug_name ( pmem , pindexed -> pbase -> type )"		8025958	0					
ANR	8026187	Callee	pcl_cid_cspace_get_debug_name		8025958	0					
ANR	8026188	Identifier	pcl_cid_cspace_get_debug_name		8025958	0					
ANR	8026189	ArgumentList	pmem		8025958	1					
ANR	8026190	Argument	pmem		8025958	0					
ANR	8026191	Identifier	pmem		8025958	0					
ANR	8026192	Argument	pindexed -> pbase -> type		8025958	1					
ANR	8026193	PtrMemberAccess	pindexed -> pbase -> type		8025958	0					
ANR	8026194	PtrMemberAccess	pindexed -> pbase		8025958	0					
ANR	8026195	Identifier	pindexed		8025958	0					
ANR	8026196	Identifier	pbase		8025958	1					
ANR	8026197	Identifier	type		8025958	1					
ANR	8026198	ExpressionStatement	pcl_cs_base_release ( pbase )	949:4:34705:34731	8025958	14	True				
ANR	8026199	CallExpression	pcl_cs_base_release ( pbase )		8025958	0					
ANR	8026200	Callee	pcl_cs_base_release		8025958	0					
ANR	8026201	Identifier	pcl_cs_base_release		8025958	0					
ANR	8026202	ArgumentList	pbase		8025958	1					
ANR	8026203	Argument	pbase		8025958	0					
ANR	8026204	Identifier	pbase		8025958	0					
ANR	8026205	ExpressionStatement	pbase = 0	950:4:34737:34746	8025958	15	True				
ANR	8026206	AssignmentExpression	pbase = 0		8025958	0		=			
ANR	8026207	Identifier	pbase		8025958	0					
ANR	8026208	PrimaryExpression	0		8025958	1					
ANR	8026209	ExpressionStatement	pindexed -> cid = pcid -> u . hdr	953:4:34817:34844	8025958	16	True				
ANR	8026210	AssignmentExpression	pindexed -> cid = pcid -> u . hdr		8025958	0		=			
ANR	8026211	PtrMemberAccess	pindexed -> cid		8025958	0					
ANR	8026212	Identifier	pindexed		8025958	0					
ANR	8026213	Identifier	cid		8025958	1					
ANR	8026214	MemberAccess	pcid -> u . hdr		8025958	1					
ANR	8026215	PtrMemberAccess	pcid -> u		8025958	0					
ANR	8026216	Identifier	pcid		8025958	0					
ANR	8026217	Identifier	u		8025958	1					
ANR	8026218	Identifier	hdr		8025958	1					
ANR	8026219	ExpressionStatement	pindexed -> original_cspace = pcid -> original_cspace	958:4:35026:35075	8025958	17	True				
ANR	8026220	AssignmentExpression	pindexed -> original_cspace = pcid -> original_cspace		8025958	0		=			
ANR	8026221	PtrMemberAccess	pindexed -> original_cspace		8025958	0					
ANR	8026222	Identifier	pindexed		8025958	0					
ANR	8026223	Identifier	original_cspace		8025958	1					
ANR	8026224	PtrMemberAccess	pcid -> original_cspace		8025958	1					
ANR	8026225	Identifier	pcid		8025958	0					
ANR	8026226	Identifier	original_cspace		8025958	1					
ANR	8026227	IfStatement	if ( ( pcid -> len > 6 ) && ( type < pcl_cspace_Colorimetric ) )		8025958	18					
ANR	8026228	Condition	( pcid -> len > 6 ) && ( type < pcl_cspace_Colorimetric )	961:8:35133:35183	8025958	0	True				
ANR	8026229	AndExpression	( pcid -> len > 6 ) && ( type < pcl_cspace_Colorimetric )		8025958	0		&&			
ANR	8026230	RelationalExpression	pcid -> len > 6		8025958	0		>			
ANR	8026231	PtrMemberAccess	pcid -> len		8025958	0					
ANR	8026232	Identifier	pcid		8025958	0					
ANR	8026233	Identifier	len		8025958	1					
ANR	8026234	PrimaryExpression	6		8025958	1					
ANR	8026235	RelationalExpression	type < pcl_cspace_Colorimetric		8025958	1		<			
ANR	8026236	Identifier	type		8025958	0					
ANR	8026237	Identifier	pcl_cspace_Colorimetric		8025958	1					
ANR	8026238	CompoundStatement		64:8:2326:2331	8025958	1					
ANR	8026239	IdentifierDeclStatement	const pcl_cid_dev_long_t * pdev = & ( pcid -> u . dev ) ;	962:8:35196:35243	8025958	0	True				
ANR	8026240	IdentifierDecl	* pdev = & ( pcid -> u . dev )		8025958	0					
ANR	8026241	IdentifierDeclType	const pcl_cid_dev_long_t *		8025958	0					
ANR	8026242	Identifier	pdev		8025958	1					
ANR	8026243	AssignmentExpression	* pdev = & ( pcid -> u . dev )		8025958	2		=			
ANR	8026244	Identifier	pdev		8025958	0					
ANR	8026245	UnaryOperationExpression	& ( pcid -> u . dev )		8025958	1					
ANR	8026246	UnaryOperator	&		8025958	0					
ANR	8026247	MemberAccess	pcid -> u . dev		8025958	1					
ANR	8026248	PtrMemberAccess	pcid -> u		8025958	0					
ANR	8026249	Identifier	pcid		8025958	0					
ANR	8026250	Identifier	u		8025958	1					
ANR	8026251	Identifier	dev		8025958	1					
ANR	8026252	IdentifierDeclStatement	int i ;	963:8:35253:35258	8025958	1	True				
ANR	8026253	IdentifierDecl	i		8025958	0					
ANR	8026254	IdentifierDeclType	int		8025958	0					
ANR	8026255	Identifier	i		8025958	1					
ANR	8026256	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8025958	2					
ANR	8026257	ForInit	i = 0 ;	965:13:35274:35279	8025958	0	True				
ANR	8026258	AssignmentExpression	i = 0		8025958	0		=			
ANR	8026259	Identifier	i		8025958	0					
ANR	8026260	PrimaryExpression	0		8025958	1					
ANR	8026261	Condition	i < 3	965:20:35281:35285	8025958	1	True				
ANR	8026262	RelationalExpression	i < 3		8025958	0		<			
ANR	8026263	Identifier	i		8025958	0					
ANR	8026264	PrimaryExpression	3		8025958	1					
ANR	8026265	PostIncDecOperationExpression	i ++	965:27:35288:35290	8025958	2	True				
ANR	8026266	Identifier	i		8025958	0					
ANR	8026267	IncDec	++		8025958	1					
ANR	8026268	CompoundStatement		66:32:2366:2366	8025958	3					
ANR	8026269	ExpressionStatement	wht_ref [ i ] = pdev -> white_ref [ i ]	966:12:35307:35338	8025958	0	True				
ANR	8026270	AssignmentExpression	wht_ref [ i ] = pdev -> white_ref [ i ]		8025958	0		=			
ANR	8026271	ArrayIndexing	wht_ref [ i ]		8025958	0					
ANR	8026272	Identifier	wht_ref		8025958	0					
ANR	8026273	Identifier	i		8025958	1					
ANR	8026274	ArrayIndexing	pdev -> white_ref [ i ]		8025958	1					
ANR	8026275	PtrMemberAccess	pdev -> white_ref		8025958	0					
ANR	8026276	Identifier	pdev		8025958	0					
ANR	8026277	Identifier	white_ref		8025958	1					
ANR	8026278	Identifier	i		8025958	1					
ANR	8026279	ExpressionStatement	blk_ref [ i ] = pdev -> black_ref [ i ]	967:12:35352:35383	8025958	1	True				
ANR	8026280	AssignmentExpression	blk_ref [ i ] = pdev -> black_ref [ i ]		8025958	0		=			
ANR	8026281	ArrayIndexing	blk_ref [ i ]		8025958	0					
ANR	8026282	Identifier	blk_ref		8025958	0					
ANR	8026283	Identifier	i		8025958	1					
ANR	8026284	ArrayIndexing	pdev -> black_ref [ i ]		8025958	1					
ANR	8026285	PtrMemberAccess	pdev -> black_ref		8025958	0					
ANR	8026286	Identifier	pdev		8025958	0					
ANR	8026287	Identifier	black_ref		8025958	1					
ANR	8026288	Identifier	i		8025958	1					
ANR	8026289	ElseStatement	else		8025958	0					
ANR	8026290	CompoundStatement		71:8:2489:2494	8025958	0					
ANR	8026291	IdentifierDeclStatement	int i ;	970:8:35416:35421	8025958	0	True				
ANR	8026292	IdentifierDecl	i		8025958	0					
ANR	8026293	IdentifierDeclType	int		8025958	0					
ANR	8026294	Identifier	i		8025958	1					
ANR	8026295	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8025958	1					
ANR	8026296	ForInit	i = 0 ;	972:13:35437:35442	8025958	0	True				
ANR	8026297	AssignmentExpression	i = 0		8025958	0		=			
ANR	8026298	Identifier	i		8025958	0					
ANR	8026299	PrimaryExpression	0		8025958	1					
ANR	8026300	Condition	i < 3	972:20:35444:35448	8025958	1	True				
ANR	8026301	RelationalExpression	i < 3		8025958	0		<			
ANR	8026302	Identifier	i		8025958	0					
ANR	8026303	PrimaryExpression	3		8025958	1					
ANR	8026304	PostIncDecOperationExpression	i ++	972:27:35451:35453	8025958	2	True				
ANR	8026305	Identifier	i		8025958	0					
ANR	8026306	IncDec	++		8025958	1					
ANR	8026307	CompoundStatement		73:32:2529:2529	8025958	3					
ANR	8026308	ExpressionStatement	"wht_ref [ i ] = ( 1L << pcl_cid_get_bits_per_primary ( pcid , i ) ) - 1"	973:12:35470:35532	8025958	0	True				
ANR	8026309	AssignmentExpression	"wht_ref [ i ] = ( 1L << pcl_cid_get_bits_per_primary ( pcid , i ) ) - 1"		8025958	0		=			
ANR	8026310	ArrayIndexing	wht_ref [ i ]		8025958	0					
ANR	8026311	Identifier	wht_ref		8025958	0					
ANR	8026312	Identifier	i		8025958	1					
ANR	8026313	AdditiveExpression	"( 1L << pcl_cid_get_bits_per_primary ( pcid , i ) ) - 1"		8025958	1		-			
ANR	8026314	ShiftExpression	"1L << pcl_cid_get_bits_per_primary ( pcid , i )"		8025958	0		<<			
ANR	8026315	PrimaryExpression	1L		8025958	0					
ANR	8026316	CallExpression	"pcl_cid_get_bits_per_primary ( pcid , i )"		8025958	1					
ANR	8026317	Callee	pcl_cid_get_bits_per_primary		8025958	0					
ANR	8026318	Identifier	pcl_cid_get_bits_per_primary		8025958	0					
ANR	8026319	ArgumentList	pcid		8025958	1					
ANR	8026320	Argument	pcid		8025958	0					
ANR	8026321	Identifier	pcid		8025958	0					
ANR	8026322	Argument	i		8025958	1					
ANR	8026323	Identifier	i		8025958	0					
ANR	8026324	PrimaryExpression	1		8025958	1					
ANR	8026325	ExpressionStatement	blk_ref [ i ] = 0.0	974:12:35546:35562	8025958	1	True				
ANR	8026326	AssignmentExpression	blk_ref [ i ] = 0.0		8025958	0		=			
ANR	8026327	ArrayIndexing	blk_ref [ i ]		8025958	0					
ANR	8026328	Identifier	blk_ref		8025958	0					
ANR	8026329	Identifier	i		8025958	1					
ANR	8026330	PrimaryExpression	0.0		8025958	1					
ANR	8026331	IfStatement	if ( ( type == pcl_cspace_CMY ) || ( pcid -> original_cspace == pcl_cspace_CMY ) )		8025958	2					
ANR	8026332	Condition	( type == pcl_cspace_CMY ) || ( pcid -> original_cspace == pcl_cspace_CMY )	978:12:35633:35713	8025958	0	True				
ANR	8026333	OrExpression	( type == pcl_cspace_CMY ) || ( pcid -> original_cspace == pcl_cspace_CMY )		8025958	0		||			
ANR	8026334	EqualityExpression	type == pcl_cspace_CMY		8025958	0		==			
ANR	8026335	Identifier	type		8025958	0					
ANR	8026336	Identifier	pcl_cspace_CMY		8025958	1					
ANR	8026337	EqualityExpression	pcid -> original_cspace == pcl_cspace_CMY		8025958	1		==			
ANR	8026338	PtrMemberAccess	pcid -> original_cspace		8025958	0					
ANR	8026339	Identifier	pcid		8025958	0					
ANR	8026340	Identifier	original_cspace		8025958	1					
ANR	8026341	Identifier	pcl_cspace_CMY		8025958	1					
ANR	8026342	CompoundStatement		81:12:2803:2808	8025958	1					
ANR	8026343	IdentifierDeclStatement	int i ;	980:12:35730:35735	8025958	0	True				
ANR	8026344	IdentifierDecl	i		8025958	0					
ANR	8026345	IdentifierDeclType	int		8025958	0					
ANR	8026346	Identifier	i		8025958	1					
ANR	8026347	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8025958	1					
ANR	8026348	ForInit	i = 0 ;	982:17:35755:35760	8025958	0	True				
ANR	8026349	AssignmentExpression	i = 0		8025958	0		=			
ANR	8026350	Identifier	i		8025958	0					
ANR	8026351	PrimaryExpression	0		8025958	1					
ANR	8026352	Condition	i < 3	982:24:35762:35766	8025958	1	True				
ANR	8026353	RelationalExpression	i < 3		8025958	0		<			
ANR	8026354	Identifier	i		8025958	0					
ANR	8026355	PrimaryExpression	3		8025958	1					
ANR	8026356	PostIncDecOperationExpression	i ++	982:31:35769:35771	8025958	2	True				
ANR	8026357	Identifier	i		8025958	0					
ANR	8026358	IncDec	++		8025958	1					
ANR	8026359	CompoundStatement		84:16:2865:2889	8025958	3					
ANR	8026360	IdentifierDeclStatement	double ftmp = wht_ref [ i ] ;	983:16:35792:35816	8025958	0	True				
ANR	8026361	IdentifierDecl	ftmp = wht_ref [ i ]		8025958	0					
ANR	8026362	IdentifierDeclType	double		8025958	0					
ANR	8026363	Identifier	ftmp		8025958	1					
ANR	8026364	AssignmentExpression	ftmp = wht_ref [ i ]		8025958	2		=			
ANR	8026365	Identifier	ftmp		8025958	0					
ANR	8026366	ArrayIndexing	wht_ref [ i ]		8025958	1					
ANR	8026367	Identifier	wht_ref		8025958	0					
ANR	8026368	Identifier	i		8025958	1					
ANR	8026369	ExpressionStatement	wht_ref [ i ] = blk_ref [ i ]	985:16:35835:35858	8025958	1	True				
ANR	8026370	AssignmentExpression	wht_ref [ i ] = blk_ref [ i ]		8025958	0		=			
ANR	8026371	ArrayIndexing	wht_ref [ i ]		8025958	0					
ANR	8026372	Identifier	wht_ref		8025958	0					
ANR	8026373	Identifier	i		8025958	1					
ANR	8026374	ArrayIndexing	blk_ref [ i ]		8025958	1					
ANR	8026375	Identifier	blk_ref		8025958	0					
ANR	8026376	Identifier	i		8025958	1					
ANR	8026377	ExpressionStatement	blk_ref [ i ] = ftmp	986:16:35876:35893	8025958	2	True				
ANR	8026378	AssignmentExpression	blk_ref [ i ] = ftmp		8025958	0		=			
ANR	8026379	ArrayIndexing	blk_ref [ i ]		8025958	0					
ANR	8026380	Identifier	blk_ref		8025958	0					
ANR	8026381	Identifier	i		8025958	1					
ANR	8026382	Identifier	ftmp		8025958	1					
ANR	8026383	ExpressionStatement	"code = pcl_cs_indexed_set_norm_and_Decode ( ppindexed , wht_ref [ 0 ] , wht_ref [ 1 ] , wht_ref [ 2 ] , blk_ref [ 0 ] , blk_ref [ 1 ] , blk_ref [ 2 ] )"	990:4:35929:36140	8025958	19	True				
ANR	8026384	AssignmentExpression	"code = pcl_cs_indexed_set_norm_and_Decode ( ppindexed , wht_ref [ 0 ] , wht_ref [ 1 ] , wht_ref [ 2 ] , blk_ref [ 0 ] , blk_ref [ 1 ] , blk_ref [ 2 ] )"		8025958	0		=			
ANR	8026385	Identifier	code		8025958	0					
ANR	8026386	CallExpression	"pcl_cs_indexed_set_norm_and_Decode ( ppindexed , wht_ref [ 0 ] , wht_ref [ 1 ] , wht_ref [ 2 ] , blk_ref [ 0 ] , blk_ref [ 1 ] , blk_ref [ 2 ] )"		8025958	1					
ANR	8026387	Callee	pcl_cs_indexed_set_norm_and_Decode		8025958	0					
ANR	8026388	Identifier	pcl_cs_indexed_set_norm_and_Decode		8025958	0					
ANR	8026389	ArgumentList	ppindexed		8025958	1					
ANR	8026390	Argument	ppindexed		8025958	0					
ANR	8026391	Identifier	ppindexed		8025958	0					
ANR	8026392	Argument	wht_ref [ 0 ]		8025958	1					
ANR	8026393	ArrayIndexing	wht_ref [ 0 ]		8025958	0					
ANR	8026394	Identifier	wht_ref		8025958	0					
ANR	8026395	PrimaryExpression	0		8025958	1					
ANR	8026396	Argument	wht_ref [ 1 ]		8025958	2					
ANR	8026397	ArrayIndexing	wht_ref [ 1 ]		8025958	0					
ANR	8026398	Identifier	wht_ref		8025958	0					
ANR	8026399	PrimaryExpression	1		8025958	1					
ANR	8026400	Argument	wht_ref [ 2 ]		8025958	3					
ANR	8026401	ArrayIndexing	wht_ref [ 2 ]		8025958	0					
ANR	8026402	Identifier	wht_ref		8025958	0					
ANR	8026403	PrimaryExpression	2		8025958	1					
ANR	8026404	Argument	blk_ref [ 0 ]		8025958	4					
ANR	8026405	ArrayIndexing	blk_ref [ 0 ]		8025958	0					
ANR	8026406	Identifier	blk_ref		8025958	0					
ANR	8026407	PrimaryExpression	0		8025958	1					
ANR	8026408	Argument	blk_ref [ 1 ]		8025958	5					
ANR	8026409	ArrayIndexing	blk_ref [ 1 ]		8025958	0					
ANR	8026410	Identifier	blk_ref		8025958	0					
ANR	8026411	PrimaryExpression	1		8025958	1					
ANR	8026412	Argument	blk_ref [ 2 ]		8025958	6					
ANR	8026413	ArrayIndexing	blk_ref [ 2 ]		8025958	0					
ANR	8026414	Identifier	blk_ref		8025958	0					
ANR	8026415	PrimaryExpression	2		8025958	1					
ANR	8026416	IfStatement	if ( code < 0 )		8025958	20					
ANR	8026417	Condition	code < 0	994:8:36150:36157	8025958	0	True				
ANR	8026418	RelationalExpression	code < 0		8025958	0		<			
ANR	8026419	Identifier	code		8025958	0					
ANR	8026420	PrimaryExpression	0		8025958	1					
ANR	8026421	ReturnStatement	return code ;	995:8:36168:36179	8025958	1	True				
ANR	8026422	Identifier	code		8025958	0					
ANR	8026423	ExpressionStatement	"code = pcl_cs_indexed_set_num_entries ( ppindexed , 1L << bits , gl2 )"	998:4:36249:36314	8025958	21	True				
ANR	8026424	AssignmentExpression	"code = pcl_cs_indexed_set_num_entries ( ppindexed , 1L << bits , gl2 )"		8025958	0		=			
ANR	8026425	Identifier	code		8025958	0					
ANR	8026426	CallExpression	"pcl_cs_indexed_set_num_entries ( ppindexed , 1L << bits , gl2 )"		8025958	1					
ANR	8026427	Callee	pcl_cs_indexed_set_num_entries		8025958	0					
ANR	8026428	Identifier	pcl_cs_indexed_set_num_entries		8025958	0					
ANR	8026429	ArgumentList	ppindexed		8025958	1					
ANR	8026430	Argument	ppindexed		8025958	0					
ANR	8026431	Identifier	ppindexed		8025958	0					
ANR	8026432	Argument	1L << bits		8025958	1					
ANR	8026433	ShiftExpression	1L << bits		8025958	0		<<			
ANR	8026434	PrimaryExpression	1L		8025958	0					
ANR	8026435	Identifier	bits		8025958	1					
ANR	8026436	Argument	gl2		8025958	2					
ANR	8026437	Identifier	gl2		8025958	0					
ANR	8026438	IfStatement	if ( code < 0 )		8025958	22					
ANR	8026439	Condition	code < 0	999:8:36324:36331	8025958	0	True				
ANR	8026440	RelationalExpression	code < 0		8025958	0		<			
ANR	8026441	Identifier	code		8025958	0					
ANR	8026442	PrimaryExpression	0		8025958	1					
ANR	8026443	ReturnStatement	return code ;	1000:8:36342:36353	8025958	1	True				
ANR	8026444	Identifier	code		8025958	0					
ANR	8026445	ExpressionStatement	pindexed -> pfixed = pfixed	1003:4:36411:36436	8025958	23	True				
ANR	8026446	AssignmentExpression	pindexed -> pfixed = pfixed		8025958	0		=			
ANR	8026447	PtrMemberAccess	pindexed -> pfixed		8025958	0					
ANR	8026448	Identifier	pindexed		8025958	0					
ANR	8026449	Identifier	pfixed		8025958	1					
ANR	8026450	Identifier	pfixed		8025958	1					
ANR	8026451	IfStatement	if ( is_default )		8025958	24					
ANR	8026452	Condition	is_default	1006:8:36488:36497	8025958	0	True				
ANR	8026453	Identifier	is_default		8025958	0					
ANR	8026454	ExpressionStatement	"pcl_cs_indexed_init_from ( pcs -> pdflt_cs_indexed , pindexed )"	1007:8:36508:36565	8025958	1	True				
ANR	8026455	CallExpression	"pcl_cs_indexed_init_from ( pcs -> pdflt_cs_indexed , pindexed )"		8025958	0					
ANR	8026456	Callee	pcl_cs_indexed_init_from		8025958	0					
ANR	8026457	Identifier	pcl_cs_indexed_init_from		8025958	0					
ANR	8026458	ArgumentList	pcs -> pdflt_cs_indexed		8025958	1					
ANR	8026459	Argument	pcs -> pdflt_cs_indexed		8025958	0					
ANR	8026460	PtrMemberAccess	pcs -> pdflt_cs_indexed		8025958	0					
ANR	8026461	Identifier	pcs		8025958	0					
ANR	8026462	Identifier	pdflt_cs_indexed		8025958	1					
ANR	8026463	Argument	pindexed		8025958	1					
ANR	8026464	Identifier	pindexed		8025958	0					
ANR	8026465	ReturnStatement	return 0 ;	1009:4:36572:36580	8025958	25	True				
ANR	8026466	PrimaryExpression	0		8025958	0					
ANR	8026467	ReturnType	int		8025958	1					
ANR	8026468	Identifier	pcl_cs_indexed_build_cspace		8025958	2					
ANR	8026469	ParameterList	"pcl_state_t * pcs , pcl_cs_indexed_t * * ppindexed , const pcl_cid_data_t * pcid , bool pfixed , bool gl2 , gs_memory_t * pmem"		8025958	3					
ANR	8026470	Parameter	pcl_state_t * pcs	896:28:32720:32736	8025958	0	True				
ANR	8026471	ParameterType	pcl_state_t *		8025958	0					
ANR	8026472	Identifier	pcs		8025958	1					
ANR	8026473	Parameter	pcl_cs_indexed_t * * ppindexed	897:28:32767:32795	8025958	1	True				
ANR	8026474	ParameterType	pcl_cs_indexed_t * *		8025958	0					
ANR	8026475	Identifier	ppindexed		8025958	1					
ANR	8026476	Parameter	const pcl_cid_data_t * pcid	898:28:32826:32852	8025958	2	True				
ANR	8026477	ParameterType	const pcl_cid_data_t *		8025958	0					
ANR	8026478	Identifier	pcid		8025958	1					
ANR	8026479	Parameter	bool pfixed	899:28:32883:32893	8025958	3	True				
ANR	8026480	ParameterType	bool		8025958	0					
ANR	8026481	Identifier	pfixed		8025958	1					
ANR	8026482	Parameter	bool gl2	899:41:32896:32903	8025958	4	True				
ANR	8026483	ParameterType	bool		8025958	0					
ANR	8026484	Identifier	gl2		8025958	1					
ANR	8026485	Parameter	gs_memory_t * pmem	899:51:32906:32923	8025958	5	True				
ANR	8026486	ParameterType	gs_memory_t *		8025958	0					
ANR	8026487	Identifier	pmem		8025958	1					
ANR	8026488	CFGEntryNode	ENTRY		8025958		True				
ANR	8026489	CFGExitNode	EXIT		8025958		True				
ANR	8026490	Symbol	* ppindexed		8025958						
ANR	8026491	Symbol	pindexed -> cid		8025958						
ANR	8026492	Symbol	* pcs		8025958						
ANR	8026493	Symbol	pcl_cspace_CMY		8025958						
ANR	8026494	Symbol	type		8025958						
ANR	8026495	Symbol	pdev -> black_ref		8025958						
ANR	8026496	Symbol	pdev		8025958						
ANR	8026497	Symbol	pcl_cs_base_build_cspace		8025958						
ANR	8026498	Symbol	pindexed -> pbase		8025958						
ANR	8026499	Symbol	pbase		8025958						
ANR	8026500	Symbol	wht_ref		8025958						
ANR	8026501	Symbol	& pcid -> u . dev		8025958						
ANR	8026502	Symbol	* pindexed -> pbase		8025958						
ANR	8026503	Symbol	pcid -> u . hdr . bits_per_index		8025958						
ANR	8026504	Symbol	pcl_cs_indexed_set_norm_and_Decode		8025958						
ANR	8026505	Symbol	* pcid		8025958						
ANR	8026506	Symbol	pcs -> pdflt_cs_indexed		8025958						
ANR	8026507	Symbol	bits		8025958						
ANR	8026508	Symbol	pcid -> u		8025958						
ANR	8026509	Symbol	pindexed -> original_cspace		8025958						
ANR	8026510	Symbol	* pdev -> white_ref		8025958						
ANR	8026511	Symbol	pcid -> original_cspace		8025958						
ANR	8026512	Symbol	* pdev -> black_ref		8025958						
ANR	8026513	Symbol	is_default		8025958						
ANR	8026514	Symbol	pindexed -> pbase -> type		8025958						
ANR	8026515	Symbol	alloc_indexed_cspace		8025958						
ANR	8026516	Symbol	pcid -> u . hdr		8025958						
ANR	8026517	Symbol	dflt_cid_hdr		8025958						
ANR	8026518	Symbol	true		8025958						
ANR	8026519	Symbol	ppindexed		8025958						
ANR	8026520	Symbol	pcid -> len		8025958						
ANR	8026521	Symbol	* * pindexed		8025958						
ANR	8026522	Symbol	ftmp		8025958						
ANR	8026523	Symbol	code		8025958						
ANR	8026524	Symbol	pdev -> white_ref		8025958						
ANR	8026525	Symbol	* pindexed		8025958						
ANR	8026526	Symbol	pcl_cid_get_bits_per_primary		8025958						
ANR	8026527	Symbol	pcl_cspace_Colorimetric		8025958						
ANR	8026528	Symbol	* * pdev		8025958						
ANR	8026529	Symbol	blk_ref		8025958						
ANR	8026530	Symbol	* wht_ref		8025958						
ANR	8026531	Symbol	& pcid -> u		8025958						
ANR	8026532	Symbol	pmem		8025958						
ANR	8026533	Symbol	pindexed		8025958						
ANR	8026534	Symbol	pindexed -> pfixed		8025958						
ANR	8026535	Symbol	pcl_cs_indexed_set_num_entries		8025958						
ANR	8026536	Symbol	pcs		8025958						
ANR	8026537	Symbol	* blk_ref		8025958						
ANR	8026538	Symbol	& pbase		8025958						
ANR	8026539	Symbol	false		8025958						
ANR	8026540	Symbol	pfixed		8025958						
ANR	8026541	Symbol	i		8025958						
ANR	8026542	Symbol	gl2		8025958						
ANR	8026543	Symbol	pcl_cid_get_cspace		8025958						
ANR	8026544	Symbol	* i		8025958						
ANR	8026545	Symbol	pcl_cid_cspace_get_debug_name		8025958						
ANR	8026546	Symbol	* pdev		8025958						
ANR	8026547	Symbol	pcid		8025958						
ANR	8026548	Symbol	dflt_cid_hdr . bits_per_index		8025958						
ANR	8026549	Symbol	pcl_cid_get_bits_per_index		8025958						
ANR	8026550	Function	pcl_cs_indexed_build_default_cspace	1018:0:36736:37439							
ANR	8026551	FunctionDef	"pcl_cs_indexed_build_default_cspace (pcl_state_t * pcs , pcl_cs_indexed_t * * ppindexed , gs_memory_t * pmem)"		8026550	0					
ANR	8026552	CompoundStatement		1022:0:36918:37439	8026550	0					
ANR	8026553	IfStatement	if ( pcs -> pdflt_cs_indexed == 0 )		8026550	0					
ANR	8026554	Condition	pcs -> pdflt_cs_indexed == 0	1023:8:36928:36953	8026550	0	True				
ANR	8026555	EqualityExpression	pcs -> pdflt_cs_indexed == 0		8026550	0		==			
ANR	8026556	PtrMemberAccess	pcs -> pdflt_cs_indexed		8026550	0					
ANR	8026557	Identifier	pcs		8026550	0					
ANR	8026558	Identifier	pdflt_cs_indexed		8026550	1					
ANR	8026559	PrimaryExpression	0		8026550	1					
ANR	8026560	CompoundStatement		2:36:37:37	8026550	1					
ANR	8026561	ExpressionStatement	pcs -> dflt_cid_data . len = 6	1024:8:36966:36992	8026550	0	True				
ANR	8026562	AssignmentExpression	pcs -> dflt_cid_data . len = 6		8026550	0		=			
ANR	8026563	MemberAccess	pcs -> dflt_cid_data . len		8026550	0					
ANR	8026564	PtrMemberAccess	pcs -> dflt_cid_data		8026550	0					
ANR	8026565	Identifier	pcs		8026550	0					
ANR	8026566	Identifier	dflt_cid_data		8026550	1					
ANR	8026567	Identifier	len		8026550	1					
ANR	8026568	PrimaryExpression	6		8026550	1					
ANR	8026569	ExpressionStatement	pcs -> dflt_cid_data . u . hdr = dflt_cid_hdr	1025:8:37002:37041	8026550	1	True				
ANR	8026570	AssignmentExpression	pcs -> dflt_cid_data . u . hdr = dflt_cid_hdr		8026550	0		=			
ANR	8026571	MemberAccess	pcs -> dflt_cid_data . u . hdr		8026550	0					
ANR	8026572	MemberAccess	pcs -> dflt_cid_data . u		8026550	0					
ANR	8026573	PtrMemberAccess	pcs -> dflt_cid_data		8026550	0					
ANR	8026574	Identifier	pcs		8026550	0					
ANR	8026575	Identifier	dflt_cid_data		8026550	1					
ANR	8026576	Identifier	u		8026550	1					
ANR	8026577	Identifier	hdr		8026550	1					
ANR	8026578	Identifier	dflt_cid_hdr		8026550	1					
ANR	8026579	ExpressionStatement	pcs -> dflt_cid_data . original_cspace = pcl_cspace_num	1026:8:37051:37102	8026550	2	True				
ANR	8026580	AssignmentExpression	pcs -> dflt_cid_data . original_cspace = pcl_cspace_num		8026550	0		=			
ANR	8026581	MemberAccess	pcs -> dflt_cid_data . original_cspace		8026550	0					
ANR	8026582	PtrMemberAccess	pcs -> dflt_cid_data		8026550	0					
ANR	8026583	Identifier	pcs		8026550	0					
ANR	8026584	Identifier	dflt_cid_data		8026550	1					
ANR	8026585	Identifier	original_cspace		8026550	1					
ANR	8026586	Identifier	pcl_cspace_num		8026550	1					
ANR	8026587	ReturnStatement	"return pcl_cs_indexed_build_cspace ( pcs , ppindexed , & pcs -> dflt_cid_data , true , false , pmem ) ;"	1027:8:37112:37331	8026550	3	True				
ANR	8026588	CallExpression	"pcl_cs_indexed_build_cspace ( pcs , ppindexed , & pcs -> dflt_cid_data , true , false , pmem )"		8026550	0					
ANR	8026589	Callee	pcl_cs_indexed_build_cspace		8026550	0					
ANR	8026590	Identifier	pcl_cs_indexed_build_cspace		8026550	0					
ANR	8026591	ArgumentList	pcs		8026550	1					
ANR	8026592	Argument	pcs		8026550	0					
ANR	8026593	Identifier	pcs		8026550	0					
ANR	8026594	Argument	ppindexed		8026550	1					
ANR	8026595	Identifier	ppindexed		8026550	0					
ANR	8026596	Argument	& pcs -> dflt_cid_data		8026550	2					
ANR	8026597	UnaryOperationExpression	& pcs -> dflt_cid_data		8026550	0					
ANR	8026598	UnaryOperator	&		8026550	0					
ANR	8026599	PtrMemberAccess	pcs -> dflt_cid_data		8026550	1					
ANR	8026600	Identifier	pcs		8026550	0					
ANR	8026601	Identifier	dflt_cid_data		8026550	1					
ANR	8026602	Argument	true		8026550	3					
ANR	8026603	Identifier	true		8026550	0					
ANR	8026604	Argument	false		8026550	4					
ANR	8026605	Identifier	false		8026550	0					
ANR	8026606	Argument	pmem		8026550	5					
ANR	8026607	Identifier	pmem		8026550	0					
ANR	8026608	ElseStatement	else		8026550	0					
ANR	8026609	CompoundStatement		10:11:425:425	8026550	0					
ANR	8026610	ExpressionStatement	"pcl_cs_indexed_copy_from ( * ppindexed , pcs -> pdflt_cs_indexed )"	1032:8:37354:37413	8026550	0	True				
ANR	8026611	CallExpression	"pcl_cs_indexed_copy_from ( * ppindexed , pcs -> pdflt_cs_indexed )"		8026550	0					
ANR	8026612	Callee	pcl_cs_indexed_copy_from		8026550	0					
ANR	8026613	Identifier	pcl_cs_indexed_copy_from		8026550	0					
ANR	8026614	ArgumentList	* ppindexed		8026550	1					
ANR	8026615	Argument	* ppindexed		8026550	0					
ANR	8026616	UnaryOperationExpression	* ppindexed		8026550	0					
ANR	8026617	UnaryOperator	*		8026550	0					
ANR	8026618	Identifier	ppindexed		8026550	1					
ANR	8026619	Argument	pcs -> pdflt_cs_indexed		8026550	1					
ANR	8026620	PtrMemberAccess	pcs -> pdflt_cs_indexed		8026550	0					
ANR	8026621	Identifier	pcs		8026550	0					
ANR	8026622	Identifier	pdflt_cs_indexed		8026550	1					
ANR	8026623	ReturnStatement	return 0 ;	1033:8:37423:37431	8026550	1	True				
ANR	8026624	PrimaryExpression	0		8026550	0					
ANR	8026625	ReturnType	int		8026550	1					
ANR	8026626	Identifier	pcl_cs_indexed_build_default_cspace		8026550	2					
ANR	8026627	ParameterList	"pcl_state_t * pcs , pcl_cs_indexed_t * * ppindexed , gs_memory_t * pmem"		8026550	3					
ANR	8026628	Parameter	pcl_state_t * pcs	1019:36:36776:36792	8026550	0	True				
ANR	8026629	ParameterType	pcl_state_t *		8026550	0					
ANR	8026630	Identifier	pcs		8026550	1					
ANR	8026631	Parameter	pcl_cs_indexed_t * * ppindexed	1020:36:36831:36859	8026550	1	True				
ANR	8026632	ParameterType	pcl_cs_indexed_t * *		8026550	0					
ANR	8026633	Identifier	ppindexed		8026550	1					
ANR	8026634	Parameter	gs_memory_t * pmem	1021:36:36898:36915	8026550	2	True				
ANR	8026635	ParameterType	gs_memory_t *		8026550	0					
ANR	8026636	Identifier	pmem		8026550	1					
ANR	8026637	CFGEntryNode	ENTRY		8026550		True				
ANR	8026638	CFGExitNode	EXIT		8026550		True				
ANR	8026639	Symbol	* ppindexed		8026550						
ANR	8026640	Symbol	pcs		8026550						
ANR	8026641	Symbol	pcl_cs_indexed_build_cspace		8026550						
ANR	8026642	Symbol	pcl_cspace_num		8026550						
ANR	8026643	Symbol	pcs -> pdflt_cs_indexed		8026550						
ANR	8026644	Symbol	false		8026550						
ANR	8026645	Symbol	* pcs		8026550						
ANR	8026646	Symbol	pcs -> dflt_cid_data . u . hdr		8026550						
ANR	8026647	Symbol	pmem		8026550						
ANR	8026648	Symbol	pcs -> dflt_cid_data . original_cspace		8026550						
ANR	8026649	Symbol	dflt_cid_hdr		8026550						
ANR	8026650	Symbol	& pcs -> dflt_cid_data		8026550						
ANR	8026651	Symbol	pcs -> dflt_cid_data		8026550						
ANR	8026652	Symbol	true		8026550						
ANR	8026653	Symbol	ppindexed		8026550						
ANR	8026654	Symbol	pcs -> dflt_cid_data . len		8026550						
ANR	8026655	Symbol	pcs -> dflt_cid_data . u		8026550						
ANR	8026656	Function	pcl_cs_indexed_build_special	1045:0:37808:39220							
ANR	8026657	FunctionDef	"pcl_cs_indexed_build_special (pcl_cs_indexed_t * * ppindexed , pcl_cs_base_t * pbase , const byte * pcolor1 , gs_memory_t * pmem)"		8026656	0					
ANR	8026658	CompoundStatement		1049:0:37995:39220	8026656	0					
ANR	8026659	Statement	static	1050:4:38001:38006	8026656	0	True				
ANR	8026660	IdentifierDeclStatement	"const pcl_cid_hdr_t cid = { pcl_cspace_White , pcl_penc_indexed_by_pixel , 1 , { 8 , 8 , 8 } } ;"	1050:11:38008:38158	8026656	1	True				
ANR	8026661	IdentifierDecl	"cid = { pcl_cspace_White , pcl_penc_indexed_by_pixel , 1 , { 8 , 8 , 8 } }"		8026656	0					
ANR	8026662	IdentifierDeclType	const pcl_cid_hdr_t		8026656	0					
ANR	8026663	Identifier	cid		8026656	1					
ANR	8026664	AssignmentExpression	"cid = { pcl_cspace_White , pcl_penc_indexed_by_pixel , 1 , { 8 , 8 , 8 } }"		8026656	2		=			
ANR	8026665	Identifier	cid		8026656	0					
ANR	8026666	InitializerList	pcl_cspace_White		8026656	1					
ANR	8026667	Identifier	pcl_cspace_White		8026656	0					
ANR	8026668	Identifier	pcl_penc_indexed_by_pixel		8026656	1					
ANR	8026669	PrimaryExpression	1		8026656	2					
ANR	8026670	InitializerList	8		8026656	3					
ANR	8026671	PrimaryExpression	8		8026656	0					
ANR	8026672	PrimaryExpression	8		8026656	1					
ANR	8026673	PrimaryExpression	8		8026656	2					
ANR	8026674	Statement	static	1055:4:38164:38169	8026656	2	True				
ANR	8026675	IdentifierDeclStatement	"const double wht_ref [ 3 ] = { 255.0 , 255.0 , 255.0 } ;"	1055:11:38171:38220	8026656	3	True				
ANR	8026676	IdentifierDecl	"wht_ref [ 3 ] = { 255.0 , 255.0 , 255.0 }"		8026656	0					
ANR	8026677	IdentifierDeclType	const double [ 3 ]		8026656	0					
ANR	8026678	Identifier	wht_ref		8026656	1					
ANR	8026679	PrimaryExpression	3		8026656	2					
ANR	8026680	AssignmentExpression	"wht_ref [ 3 ] = { 255.0 , 255.0 , 255.0 }"		8026656	3		=			
ANR	8026681	Identifier	wht_ref		8026656	0					
ANR	8026682	InitializerList	255.0		8026656	1					
ANR	8026683	PrimaryExpression	255.0		8026656	0					
ANR	8026684	PrimaryExpression	255.0		8026656	1					
ANR	8026685	PrimaryExpression	255.0		8026656	2					
ANR	8026686	Statement	static	1056:4:38226:38231	8026656	4	True				
ANR	8026687	IdentifierDeclStatement	"const double blk_ref [ 3 ] = { 0.0 , 0.0 , 0.0 } ;"	1056:11:38233:38276	8026656	5	True				
ANR	8026688	IdentifierDecl	"blk_ref [ 3 ] = { 0.0 , 0.0 , 0.0 }"		8026656	0					
ANR	8026689	IdentifierDeclType	const double [ 3 ]		8026656	0					
ANR	8026690	Identifier	blk_ref		8026656	1					
ANR	8026691	PrimaryExpression	3		8026656	2					
ANR	8026692	AssignmentExpression	"blk_ref [ 3 ] = { 0.0 , 0.0 , 0.0 }"		8026656	3		=			
ANR	8026693	Identifier	blk_ref		8026656	0					
ANR	8026694	InitializerList	0.0		8026656	1					
ANR	8026695	PrimaryExpression	0.0		8026656	0					
ANR	8026696	PrimaryExpression	0.0		8026656	1					
ANR	8026697	PrimaryExpression	0.0		8026656	2					
ANR	8026698	IdentifierDeclStatement	pcl_cs_indexed_t * pindexed ;	1057:4:38282:38308	8026656	6	True				
ANR	8026699	IdentifierDecl	* pindexed		8026656	0					
ANR	8026700	IdentifierDeclType	pcl_cs_indexed_t *		8026656	0					
ANR	8026701	Identifier	pindexed		8026656	1					
ANR	8026702	IdentifierDeclStatement	"int i , code = 0 ;"	1058:4:38314:38329	8026656	7	True				
ANR	8026703	IdentifierDecl	i		8026656	0					
ANR	8026704	IdentifierDeclType	int		8026656	0					
ANR	8026705	Identifier	i		8026656	1					
ANR	8026706	IdentifierDecl	code = 0		8026656	1					
ANR	8026707	IdentifierDeclType	int		8026656	0					
ANR	8026708	Identifier	code		8026656	1					
ANR	8026709	AssignmentExpression	code = 0		8026656	2		=			
ANR	8026710	Identifier	code		8026656	0					
ANR	8026711	PrimaryExpression	0		8026656	1					
ANR	8026712	IfStatement	"if ( ( code = alloc_indexed_cspace ( ppindexed , pbase , 2 , pmem ) ) < 0 )"		8026656	8					
ANR	8026713	Condition	"( code = alloc_indexed_cspace ( ppindexed , pbase , 2 , pmem ) ) < 0"	1061:8:38380:38439	8026656	0	True				
ANR	8026714	RelationalExpression	"( code = alloc_indexed_cspace ( ppindexed , pbase , 2 , pmem ) ) < 0"		8026656	0		<			
ANR	8026715	AssignmentExpression	"code = alloc_indexed_cspace ( ppindexed , pbase , 2 , pmem )"		8026656	0		=			
ANR	8026716	Identifier	code		8026656	0					
ANR	8026717	CallExpression	"alloc_indexed_cspace ( ppindexed , pbase , 2 , pmem )"		8026656	1					
ANR	8026718	Callee	alloc_indexed_cspace		8026656	0					
ANR	8026719	Identifier	alloc_indexed_cspace		8026656	0					
ANR	8026720	ArgumentList	ppindexed		8026656	1					
ANR	8026721	Argument	ppindexed		8026656	0					
ANR	8026722	Identifier	ppindexed		8026656	0					
ANR	8026723	Argument	pbase		8026656	1					
ANR	8026724	Identifier	pbase		8026656	0					
ANR	8026725	Argument	2		8026656	2					
ANR	8026726	PrimaryExpression	2		8026656	0					
ANR	8026727	Argument	pmem		8026656	3					
ANR	8026728	Identifier	pmem		8026656	0					
ANR	8026729	PrimaryExpression	0		8026656	1					
ANR	8026730	ReturnStatement	return code ;	1062:8:38450:38461	8026656	1	True				
ANR	8026731	Identifier	code		8026656	0					
ANR	8026732	ExpressionStatement	pindexed = * ppindexed	1063:4:38467:38488	8026656	9	True				
ANR	8026733	AssignmentExpression	pindexed = * ppindexed		8026656	0		=			
ANR	8026734	Identifier	pindexed		8026656	0					
ANR	8026735	UnaryOperationExpression	* ppindexed		8026656	1					
ANR	8026736	UnaryOperator	*		8026656	0					
ANR	8026737	Identifier	ppindexed		8026656	1					
ANR	8026738	ExpressionStatement	pindexed -> pfixed = false	1064:4:38494:38518	8026656	10	True				
ANR	8026739	AssignmentExpression	pindexed -> pfixed = false		8026656	0		=			
ANR	8026740	PtrMemberAccess	pindexed -> pfixed		8026656	0					
ANR	8026741	Identifier	pindexed		8026656	0					
ANR	8026742	Identifier	pfixed		8026656	1					
ANR	8026743	Identifier	false		8026656	1					
ANR	8026744	ExpressionStatement	pindexed -> cid = cid	1065:4:38524:38543	8026656	11	True				
ANR	8026745	AssignmentExpression	pindexed -> cid = cid		8026656	0		=			
ANR	8026746	PtrMemberAccess	pindexed -> cid		8026656	0					
ANR	8026747	Identifier	pindexed		8026656	0					
ANR	8026748	Identifier	cid		8026656	1					
ANR	8026749	Identifier	cid		8026656	1					
ANR	8026750	ExpressionStatement	pindexed -> num_entries = 2	1066:4:38549:38574	8026656	12	True				
ANR	8026751	AssignmentExpression	pindexed -> num_entries = 2		8026656	0		=			
ANR	8026752	PtrMemberAccess	pindexed -> num_entries		8026656	0					
ANR	8026753	Identifier	pindexed		8026656	0					
ANR	8026754	Identifier	num_entries		8026656	1					
ANR	8026755	PrimaryExpression	2		8026656	1					
ANR	8026756	ExpressionStatement	"code = pcl_cs_indexed_set_norm_and_Decode ( ppindexed , wht_ref [ 0 ] , wht_ref [ 1 ] , wht_ref [ 2 ] , blk_ref [ 0 ] , blk_ref [ 1 ] , blk_ref [ 2 ] )"	1068:4:38652:38863	8026656	13	True				
ANR	8026757	AssignmentExpression	"code = pcl_cs_indexed_set_norm_and_Decode ( ppindexed , wht_ref [ 0 ] , wht_ref [ 1 ] , wht_ref [ 2 ] , blk_ref [ 0 ] , blk_ref [ 1 ] , blk_ref [ 2 ] )"		8026656	0		=			
ANR	8026758	Identifier	code		8026656	0					
ANR	8026759	CallExpression	"pcl_cs_indexed_set_norm_and_Decode ( ppindexed , wht_ref [ 0 ] , wht_ref [ 1 ] , wht_ref [ 2 ] , blk_ref [ 0 ] , blk_ref [ 1 ] , blk_ref [ 2 ] )"		8026656	1					
ANR	8026760	Callee	pcl_cs_indexed_set_norm_and_Decode		8026656	0					
ANR	8026761	Identifier	pcl_cs_indexed_set_norm_and_Decode		8026656	0					
ANR	8026762	ArgumentList	ppindexed		8026656	1					
ANR	8026763	Argument	ppindexed		8026656	0					
ANR	8026764	Identifier	ppindexed		8026656	0					
ANR	8026765	Argument	wht_ref [ 0 ]		8026656	1					
ANR	8026766	ArrayIndexing	wht_ref [ 0 ]		8026656	0					
ANR	8026767	Identifier	wht_ref		8026656	0					
ANR	8026768	PrimaryExpression	0		8026656	1					
ANR	8026769	Argument	wht_ref [ 1 ]		8026656	2					
ANR	8026770	ArrayIndexing	wht_ref [ 1 ]		8026656	0					
ANR	8026771	Identifier	wht_ref		8026656	0					
ANR	8026772	PrimaryExpression	1		8026656	1					
ANR	8026773	Argument	wht_ref [ 2 ]		8026656	3					
ANR	8026774	ArrayIndexing	wht_ref [ 2 ]		8026656	0					
ANR	8026775	Identifier	wht_ref		8026656	0					
ANR	8026776	PrimaryExpression	2		8026656	1					
ANR	8026777	Argument	blk_ref [ 0 ]		8026656	4					
ANR	8026778	ArrayIndexing	blk_ref [ 0 ]		8026656	0					
ANR	8026779	Identifier	blk_ref		8026656	0					
ANR	8026780	PrimaryExpression	0		8026656	1					
ANR	8026781	Argument	blk_ref [ 1 ]		8026656	5					
ANR	8026782	ArrayIndexing	blk_ref [ 1 ]		8026656	0					
ANR	8026783	Identifier	blk_ref		8026656	0					
ANR	8026784	PrimaryExpression	1		8026656	1					
ANR	8026785	Argument	blk_ref [ 2 ]		8026656	6					
ANR	8026786	ArrayIndexing	blk_ref [ 2 ]		8026656	0					
ANR	8026787	Identifier	blk_ref		8026656	0					
ANR	8026788	PrimaryExpression	2		8026656	1					
ANR	8026789	IfStatement	if ( code < 0 )		8026656	14					
ANR	8026790	Condition	code < 0	1072:8:38873:38880	8026656	0	True				
ANR	8026791	RelationalExpression	code < 0		8026656	0		<			
ANR	8026792	Identifier	code		8026656	0					
ANR	8026793	PrimaryExpression	0		8026656	1					
ANR	8026794	ReturnStatement	return code ;	1073:8:38891:38902	8026656	1	True				
ANR	8026795	Identifier	code		8026656	0					
ANR	8026796	ExpressionStatement	pindexed -> Decode [ 1 ] = 1	1075:4:38909:38932	8026656	15	True				
ANR	8026797	AssignmentExpression	pindexed -> Decode [ 1 ] = 1		8026656	0		=			
ANR	8026798	ArrayIndexing	pindexed -> Decode [ 1 ]		8026656	0					
ANR	8026799	PtrMemberAccess	pindexed -> Decode		8026656	0					
ANR	8026800	Identifier	pindexed		8026656	0					
ANR	8026801	Identifier	Decode		8026656	1					
ANR	8026802	PrimaryExpression	1		8026656	1					
ANR	8026803	PrimaryExpression	1		8026656	1					
ANR	8026804	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		8026656	16					
ANR	8026805	ForInit	i = 0 ;	1077:9:38944:38949	8026656	0	True				
ANR	8026806	AssignmentExpression	i = 0		8026656	0		=			
ANR	8026807	Identifier	i		8026656	0					
ANR	8026808	PrimaryExpression	0		8026656	1					
ANR	8026809	Condition	i < 3	1077:16:38951:38955	8026656	1	True				
ANR	8026810	RelationalExpression	i < 3		8026656	0		<			
ANR	8026811	Identifier	i		8026656	0					
ANR	8026812	PrimaryExpression	3		8026656	1					
ANR	8026813	PostIncDecOperationExpression	i ++	1077:23:38958:38960	8026656	2	True				
ANR	8026814	Identifier	i		8026656	0					
ANR	8026815	IncDec	++		8026656	1					
ANR	8026816	CompoundStatement		29:28:967:967	8026656	3					
ANR	8026817	ExpressionStatement	pindexed -> palette . data [ i ] = 255	1078:8:38973:39004	8026656	0	True				
ANR	8026818	AssignmentExpression	pindexed -> palette . data [ i ] = 255		8026656	0		=			
ANR	8026819	ArrayIndexing	pindexed -> palette . data [ i ]		8026656	0					
ANR	8026820	MemberAccess	pindexed -> palette . data		8026656	0					
ANR	8026821	PtrMemberAccess	pindexed -> palette		8026656	0					
ANR	8026822	Identifier	pindexed		8026656	0					
ANR	8026823	Identifier	palette		8026656	1					
ANR	8026824	Identifier	data		8026656	1					
ANR	8026825	Identifier	i		8026656	1					
ANR	8026826	PrimaryExpression	255		8026656	1					
ANR	8026827	ExpressionStatement	pindexed -> palette . data [ i + 3 ] = pcolor1 [ i ]	1079:8:39014:39056	8026656	1	True				
ANR	8026828	AssignmentExpression	pindexed -> palette . data [ i + 3 ] = pcolor1 [ i ]		8026656	0		=			
ANR	8026829	ArrayIndexing	pindexed -> palette . data [ i + 3 ]		8026656	0					
ANR	8026830	MemberAccess	pindexed -> palette . data		8026656	0					
ANR	8026831	PtrMemberAccess	pindexed -> palette		8026656	0					
ANR	8026832	Identifier	pindexed		8026656	0					
ANR	8026833	Identifier	palette		8026656	1					
ANR	8026834	Identifier	data		8026656	1					
ANR	8026835	AdditiveExpression	i + 3		8026656	1		+			
ANR	8026836	Identifier	i		8026656	0					
ANR	8026837	PrimaryExpression	3		8026656	1					
ANR	8026838	ArrayIndexing	pcolor1 [ i ]		8026656	1					
ANR	8026839	Identifier	pcolor1		8026656	0					
ANR	8026840	Identifier	i		8026656	1					
ANR	8026841	ExpressionStatement	pindexed -> pen_widths [ 0 ] = dflt_pen_width	1083:4:39117:39157	8026656	17	True				
ANR	8026842	AssignmentExpression	pindexed -> pen_widths [ 0 ] = dflt_pen_width		8026656	0		=			
ANR	8026843	ArrayIndexing	pindexed -> pen_widths [ 0 ]		8026656	0					
ANR	8026844	PtrMemberAccess	pindexed -> pen_widths		8026656	0					
ANR	8026845	Identifier	pindexed		8026656	0					
ANR	8026846	Identifier	pen_widths		8026656	1					
ANR	8026847	PrimaryExpression	0		8026656	1					
ANR	8026848	Identifier	dflt_pen_width		8026656	1					
ANR	8026849	ExpressionStatement	pindexed -> pen_widths [ 1 ] = dflt_pen_width	1084:4:39163:39203	8026656	18	True				
ANR	8026850	AssignmentExpression	pindexed -> pen_widths [ 1 ] = dflt_pen_width		8026656	0		=			
ANR	8026851	ArrayIndexing	pindexed -> pen_widths [ 1 ]		8026656	0					
ANR	8026852	PtrMemberAccess	pindexed -> pen_widths		8026656	0					
ANR	8026853	Identifier	pindexed		8026656	0					
ANR	8026854	Identifier	pen_widths		8026656	1					
ANR	8026855	PrimaryExpression	1		8026656	1					
ANR	8026856	Identifier	dflt_pen_width		8026656	1					
ANR	8026857	ReturnStatement	return 0 ;	1086:4:39210:39218	8026656	19	True				
ANR	8026858	PrimaryExpression	0		8026656	0					
ANR	8026859	ReturnType	int		8026656	1					
ANR	8026860	Identifier	pcl_cs_indexed_build_special		8026656	2					
ANR	8026861	ParameterList	"pcl_cs_indexed_t * * ppindexed , pcl_cs_base_t * pbase , const byte * pcolor1 , gs_memory_t * pmem"		8026656	3					
ANR	8026862	Parameter	pcl_cs_indexed_t * * ppindexed	1046:29:37841:37869	8026656	0	True				
ANR	8026863	ParameterType	pcl_cs_indexed_t * *		8026656	0					
ANR	8026864	Identifier	ppindexed		8026656	1					
ANR	8026865	Parameter	pcl_cs_base_t * pbase	1047:29:37901:37921	8026656	1	True				
ANR	8026866	ParameterType	pcl_cs_base_t *		8026656	0					
ANR	8026867	Identifier	pbase		8026656	1					
ANR	8026868	Parameter	const byte * pcolor1	1048:29:37953:37972	8026656	2	True				
ANR	8026869	ParameterType	const byte *		8026656	0					
ANR	8026870	Identifier	pcolor1		8026656	1					
ANR	8026871	Parameter	gs_memory_t * pmem	1048:51:37975:37992	8026656	3	True				
ANR	8026872	ParameterType	gs_memory_t *		8026656	0					
ANR	8026873	Identifier	pmem		8026656	1					
ANR	8026874	CFGEntryNode	ENTRY		8026656		True				
ANR	8026875	CFGExitNode	EXIT		8026656		True				
ANR	8026876	Symbol	* ppindexed		8026656						
ANR	8026877	Symbol	* * pindexed		8026656						
ANR	8026878	Symbol	pcl_penc_indexed_by_pixel		8026656						
ANR	8026879	Symbol	pindexed -> cid		8026656						
ANR	8026880	Symbol	* pindexed -> palette . data		8026656						
ANR	8026881	Symbol	code		8026656						
ANR	8026882	Symbol	pindexed -> palette		8026656						
ANR	8026883	Symbol	* pindexed		8026656						
ANR	8026884	Symbol	pindexed -> palette . data		8026656						
ANR	8026885	Symbol	* pindexed -> pen_widths		8026656						
ANR	8026886	Symbol	blk_ref		8026656						
ANR	8026887	Symbol	* wht_ref		8026656						
ANR	8026888	Symbol	pmem		8026656						
ANR	8026889	Symbol	dflt_pen_width		8026656						
ANR	8026890	Symbol	* pindexed -> Decode		8026656						
ANR	8026891	Symbol	pindexed		8026656						
ANR	8026892	Symbol	pbase		8026656						
ANR	8026893	Symbol	pindexed -> pfixed		8026656						
ANR	8026894	Symbol	wht_ref		8026656						
ANR	8026895	Symbol	* blk_ref		8026656						
ANR	8026896	Symbol	pcl_cs_indexed_set_norm_and_Decode		8026656						
ANR	8026897	Symbol	pcolor1		8026656						
ANR	8026898	Symbol	pcl_cspace_White		8026656						
ANR	8026899	Symbol	false		8026656						
ANR	8026900	Symbol	i		8026656						
ANR	8026901	Symbol	* pcolor1		8026656						
ANR	8026902	Symbol	alloc_indexed_cspace		8026656						
ANR	8026903	Symbol	* i		8026656						
ANR	8026904	Symbol	* pindexed -> palette		8026656						
ANR	8026905	Symbol	pindexed -> Decode		8026656						
ANR	8026906	Symbol	ppindexed		8026656						
ANR	8026907	Symbol	pindexed -> num_entries		8026656						
ANR	8026908	Symbol	pindexed -> pen_widths		8026656						
ANR	8026909	Symbol	cid		8026656						
ANR	8026910	Function	pcl_cs_indexed_install	1095:0:39416:39820							
ANR	8026911	FunctionDef	"pcl_cs_indexed_install (pcl_cs_indexed_t * * ppindexed , pcl_state_t * pcs)"		8026910	0					
ANR	8026912	CompoundStatement		1097:0:39493:39820	8026910	0					
ANR	8026913	IdentifierDeclStatement	pcl_cs_indexed_t * pindexed = * ppindexed ;	1098:4:39499:39538	8026910	0	True				
ANR	8026914	IdentifierDecl	* pindexed = * ppindexed		8026910	0					
ANR	8026915	IdentifierDeclType	pcl_cs_indexed_t *		8026910	0					
ANR	8026916	Identifier	pindexed		8026910	1					
ANR	8026917	AssignmentExpression	* pindexed = * ppindexed		8026910	2		=			
ANR	8026918	Identifier	pindexed		8026910	0					
ANR	8026919	UnaryOperationExpression	* ppindexed		8026910	1					
ANR	8026920	UnaryOperator	*		8026910	0					
ANR	8026921	Identifier	ppindexed		8026910	1					
ANR	8026922	IdentifierDeclStatement	int code = 0 ;	1099:4:39544:39556	8026910	1	True				
ANR	8026923	IdentifierDecl	code = 0		8026910	0					
ANR	8026924	IdentifierDeclType	int		8026910	0					
ANR	8026925	Identifier	code		8026910	1					
ANR	8026926	AssignmentExpression	code = 0		8026910	2		=			
ANR	8026927	Identifier	code		8026910	0					
ANR	8026928	PrimaryExpression	0		8026910	1					
ANR	8026929	IfStatement	if ( pindexed == 0 )		8026910	2					
ANR	8026930	Condition	pindexed == 0	1101:8:39567:39579	8026910	0	True				
ANR	8026931	EqualityExpression	pindexed == 0		8026910	0		==			
ANR	8026932	Identifier	pindexed		8026910	0					
ANR	8026933	PrimaryExpression	0		8026910	1					
ANR	8026934	CompoundStatement		5:23:88:88	8026910	1					
ANR	8026935	ExpressionStatement	"code = pcl_cs_indexed_build_default_cspace ( pcs , ppindexed , pcs -> memory )"	1102:8:39592:39675	8026910	0	True				
ANR	8026936	AssignmentExpression	"code = pcl_cs_indexed_build_default_cspace ( pcs , ppindexed , pcs -> memory )"		8026910	0		=			
ANR	8026937	Identifier	code		8026910	0					
ANR	8026938	CallExpression	"pcl_cs_indexed_build_default_cspace ( pcs , ppindexed , pcs -> memory )"		8026910	1					
ANR	8026939	Callee	pcl_cs_indexed_build_default_cspace		8026910	0					
ANR	8026940	Identifier	pcl_cs_indexed_build_default_cspace		8026910	0					
ANR	8026941	ArgumentList	pcs		8026910	1					
ANR	8026942	Argument	pcs		8026910	0					
ANR	8026943	Identifier	pcs		8026910	0					
ANR	8026944	Argument	ppindexed		8026910	1					
ANR	8026945	Identifier	ppindexed		8026910	0					
ANR	8026946	Argument	pcs -> memory		8026910	2					
ANR	8026947	PtrMemberAccess	pcs -> memory		8026910	0					
ANR	8026948	Identifier	pcs		8026910	0					
ANR	8026949	Identifier	memory		8026910	1					
ANR	8026950	IfStatement	if ( code < 0 )		8026910	1					
ANR	8026951	Condition	code < 0	1104:12:39689:39696	8026910	0	True				
ANR	8026952	RelationalExpression	code < 0		8026910	0		<			
ANR	8026953	Identifier	code		8026910	0					
ANR	8026954	PrimaryExpression	0		8026910	1					
ANR	8026955	ReturnStatement	return code ;	1105:12:39711:39722	8026910	1	True				
ANR	8026956	Identifier	code		8026910	0					
ANR	8026957	ExpressionStatement	pindexed = * ppindexed	1106:8:39732:39753	8026910	2	True				
ANR	8026958	AssignmentExpression	pindexed = * ppindexed		8026910	0		=			
ANR	8026959	Identifier	pindexed		8026910	0					
ANR	8026960	UnaryOperationExpression	* ppindexed		8026910	1					
ANR	8026961	UnaryOperator	*		8026910	0					
ANR	8026962	Identifier	ppindexed		8026910	1					
ANR	8026963	ReturnStatement	"return gs_setcolorspace ( pcs -> pgs , pindexed -> pcspace ) ;"	1109:4:39766:39818	8026910	3	True				
ANR	8026964	CallExpression	"gs_setcolorspace ( pcs -> pgs , pindexed -> pcspace )"		8026910	0					
ANR	8026965	Callee	gs_setcolorspace		8026910	0					
ANR	8026966	Identifier	gs_setcolorspace		8026910	0					
ANR	8026967	ArgumentList	pcs -> pgs		8026910	1					
ANR	8026968	Argument	pcs -> pgs		8026910	0					
ANR	8026969	PtrMemberAccess	pcs -> pgs		8026910	0					
ANR	8026970	Identifier	pcs		8026910	0					
ANR	8026971	Identifier	pgs		8026910	1					
ANR	8026972	Argument	pindexed -> pcspace		8026910	1					
ANR	8026973	PtrMemberAccess	pindexed -> pcspace		8026910	0					
ANR	8026974	Identifier	pindexed		8026910	0					
ANR	8026975	Identifier	pcspace		8026910	1					
ANR	8026976	ReturnType	int		8026910	1					
ANR	8026977	Identifier	pcl_cs_indexed_install		8026910	2					
ANR	8026978	ParameterList	"pcl_cs_indexed_t * * ppindexed , pcl_state_t * pcs"		8026910	3					
ANR	8026979	Parameter	pcl_cs_indexed_t * * ppindexed	1096:23:39443:39471	8026910	0	True				
ANR	8026980	ParameterType	pcl_cs_indexed_t * *		8026910	0					
ANR	8026981	Identifier	ppindexed		8026910	1					
ANR	8026982	Parameter	pcl_state_t * pcs	1096:54:39474:39490	8026910	1	True				
ANR	8026983	ParameterType	pcl_state_t *		8026910	0					
ANR	8026984	Identifier	pcs		8026910	1					
ANR	8026985	CFGEntryNode	ENTRY		8026910		True				
ANR	8026986	CFGExitNode	EXIT		8026910		True				
ANR	8026987	Symbol	* ppindexed		8026910						
ANR	8026988	Symbol	pcs		8026910						
ANR	8026989	Symbol	code		8026910						
ANR	8026990	Symbol	pindexed -> pcspace		8026910						
ANR	8026991	Symbol	* pindexed		8026910						
ANR	8026992	Symbol	pindexed		8026910						
ANR	8026993	Symbol	pcs -> pgs		8026910						
ANR	8026994	Symbol	ppindexed		8026910						
ANR	8026995	Symbol	pcs -> memory		8026910						
ANR	8026996	Symbol	* pcs		8026910						
ANR	8026997	Symbol	gs_setcolorspace		8026910						
ANR	8026998	Symbol	pcl_cs_indexed_build_default_cspace		8026910						
ANR	8026999	Function	pcl_cs_indexed_is_white	1123:0:40328:40660							
ANR	8027000	FunctionDef	"pcl_cs_indexed_is_white (const pcl_cs_indexed_t * pindexed , int indx)"		8026999	0					
ANR	8027001	CompoundStatement		1125:0:40402:40660	8026999	0					
ANR	8027002	IdentifierDeclStatement	const byte * pb = 0 ;	1126:4:40408:40426	8026999	0	True				
ANR	8027003	IdentifierDecl	* pb = 0		8026999	0					
ANR	8027004	IdentifierDeclType	const byte *		8026999	0					
ANR	8027005	Identifier	pb		8026999	1					
ANR	8027006	AssignmentExpression	* pb = 0		8026999	2		=			
ANR	8027007	Identifier	pb		8026999	0					
ANR	8027008	PrimaryExpression	0		8026999	1					
ANR	8027009	IfStatement	if ( pindexed == 0 )		8026999	1					
ANR	8027010	Condition	pindexed == 0	1128:8:40437:40449	8026999	0	True				
ANR	8027011	EqualityExpression	pindexed == 0		8026999	0		==			
ANR	8027012	Identifier	pindexed		8026999	0					
ANR	8027013	PrimaryExpression	0		8026999	1					
ANR	8027014	ReturnStatement	return true ;	1129:8:40460:40471	8026999	1	True				
ANR	8027015	Identifier	true		8026999	0					
ANR	8027016	IfStatement	if ( ( indx < 0 ) || ( indx >= pindexed -> num_entries ) )		8026999	2					
ANR	8027017	Condition	( indx < 0 ) || ( indx >= pindexed -> num_entries )	1130:8:40481:40525	8026999	0	True				
ANR	8027018	OrExpression	( indx < 0 ) || ( indx >= pindexed -> num_entries )		8026999	0		||			
ANR	8027019	RelationalExpression	indx < 0		8026999	0		<			
ANR	8027020	Identifier	indx		8026999	0					
ANR	8027021	PrimaryExpression	0		8026999	1					
ANR	8027022	RelationalExpression	indx >= pindexed -> num_entries		8026999	1		>=			
ANR	8027023	Identifier	indx		8026999	0					
ANR	8027024	PtrMemberAccess	pindexed -> num_entries		8026999	1					
ANR	8027025	Identifier	pindexed		8026999	0					
ANR	8027026	Identifier	num_entries		8026999	1					
ANR	8027027	ReturnStatement	return false ;	1131:8:40536:40548	8026999	1	True				
ANR	8027028	Identifier	false		8026999	0					
ANR	8027029	ExpressionStatement	pb = pindexed -> palette . data + 3 * indx	1132:4:40554:40592	8026999	3	True				
ANR	8027030	AssignmentExpression	pb = pindexed -> palette . data + 3 * indx		8026999	0		=			
ANR	8027031	Identifier	pb		8026999	0					
ANR	8027032	AdditiveExpression	pindexed -> palette . data + 3 * indx		8026999	1		+			
ANR	8027033	MemberAccess	pindexed -> palette . data		8026999	0					
ANR	8027034	PtrMemberAccess	pindexed -> palette		8026999	0					
ANR	8027035	Identifier	pindexed		8026999	0					
ANR	8027036	Identifier	palette		8026999	1					
ANR	8027037	Identifier	data		8026999	1					
ANR	8027038	MultiplicativeExpression	3 * indx		8026999	1		*			
ANR	8027039	PrimaryExpression	3		8026999	0					
ANR	8027040	Identifier	indx		8026999	1					
ANR	8027041	ReturnStatement	return ( pb [ 0 ] == 0xff ) && ( pb [ 1 ] == 0xff ) && ( pb [ 2 ] == 0xff ) ;	1133:4:40598:40658	8026999	4	True				
ANR	8027042	AndExpression	( pb [ 0 ] == 0xff ) && ( pb [ 1 ] == 0xff ) && ( pb [ 2 ] == 0xff )		8026999	0		&&			
ANR	8027043	EqualityExpression	pb [ 0 ] == 0xff		8026999	0		==			
ANR	8027044	ArrayIndexing	pb [ 0 ]		8026999	0					
ANR	8027045	Identifier	pb		8026999	0					
ANR	8027046	PrimaryExpression	0		8026999	1					
ANR	8027047	PrimaryExpression	0xff		8026999	1					
ANR	8027048	AndExpression	( pb [ 1 ] == 0xff ) && ( pb [ 2 ] == 0xff )		8026999	1		&&			
ANR	8027049	EqualityExpression	pb [ 1 ] == 0xff		8026999	0		==			
ANR	8027050	ArrayIndexing	pb [ 1 ]		8026999	0					
ANR	8027051	Identifier	pb		8026999	0					
ANR	8027052	PrimaryExpression	1		8026999	1					
ANR	8027053	PrimaryExpression	0xff		8026999	1					
ANR	8027054	EqualityExpression	pb [ 2 ] == 0xff		8026999	1		==			
ANR	8027055	ArrayIndexing	pb [ 2 ]		8026999	0					
ANR	8027056	Identifier	pb		8026999	0					
ANR	8027057	PrimaryExpression	2		8026999	1					
ANR	8027058	PrimaryExpression	0xff		8026999	1					
ANR	8027059	ReturnType	bool		8026999	1					
ANR	8027060	Identifier	pcl_cs_indexed_is_white		8026999	2					
ANR	8027061	ParameterList	"const pcl_cs_indexed_t * pindexed , int indx"		8026999	3					
ANR	8027062	Parameter	const pcl_cs_indexed_t * pindexed	1124:24:40357:40389	8026999	0	True				
ANR	8027063	ParameterType	const pcl_cs_indexed_t *		8026999	0					
ANR	8027064	Identifier	pindexed		8026999	1					
ANR	8027065	Parameter	int indx	1124:59:40392:40399	8026999	1	True				
ANR	8027066	ParameterType	int		8026999	0					
ANR	8027067	Identifier	indx		8026999	1					
ANR	8027068	CFGEntryNode	ENTRY		8026999		True				
ANR	8027069	CFGExitNode	EXIT		8026999		True				
ANR	8027070	Symbol	pb		8026999						
ANR	8027071	Symbol	pindexed -> palette		8026999						
ANR	8027072	Symbol	* pindexed		8026999						
ANR	8027073	Symbol	pindexed		8026999						
ANR	8027074	Symbol	indx		8026999						
ANR	8027075	Symbol	true		8026999						
ANR	8027076	Symbol	false		8026999						
ANR	8027077	Symbol	pindexed -> palette . data		8026999						
ANR	8027078	Symbol	pindexed -> num_entries		8026999						
ANR	8027079	Symbol	* pb		8026999						
ANR	8027080	Function	pcl_cs_indexed_is_black	1145:0:41023:41321							
ANR	8027081	FunctionDef	"pcl_cs_indexed_is_black (const pcl_cs_indexed_t * pindexed , int indx)"		8027080	0					
ANR	8027082	CompoundStatement		1147:0:41097:41321	8027080	0					
ANR	8027083	IdentifierDeclStatement	const byte * pb = 0 ;	1148:4:41103:41121	8027080	0	True				
ANR	8027084	IdentifierDecl	* pb = 0		8027080	0					
ANR	8027085	IdentifierDeclType	const byte *		8027080	0					
ANR	8027086	Identifier	pb		8027080	1					
ANR	8027087	AssignmentExpression	* pb = 0		8027080	2		=			
ANR	8027088	Identifier	pb		8027080	0					
ANR	8027089	PrimaryExpression	0		8027080	1					
ANR	8027090	IfStatement	if ( ( pindexed == 0 ) || ( indx < 0 ) || ( indx >= pindexed -> num_entries ) )		8027080	1					
ANR	8027091	Condition	( pindexed == 0 ) || ( indx < 0 ) || ( indx >= pindexed -> num_entries )	1150:8:41132:41195	8027080	0	True				
ANR	8027092	OrExpression	( pindexed == 0 ) || ( indx < 0 ) || ( indx >= pindexed -> num_entries )		8027080	0		||			
ANR	8027093	EqualityExpression	pindexed == 0		8027080	0		==			
ANR	8027094	Identifier	pindexed		8027080	0					
ANR	8027095	PrimaryExpression	0		8027080	1					
ANR	8027096	OrExpression	( indx < 0 ) || ( indx >= pindexed -> num_entries )		8027080	1		||			
ANR	8027097	RelationalExpression	indx < 0		8027080	0		<			
ANR	8027098	Identifier	indx		8027080	0					
ANR	8027099	PrimaryExpression	0		8027080	1					
ANR	8027100	RelationalExpression	indx >= pindexed -> num_entries		8027080	1		>=			
ANR	8027101	Identifier	indx		8027080	0					
ANR	8027102	PtrMemberAccess	pindexed -> num_entries		8027080	1					
ANR	8027103	Identifier	pindexed		8027080	0					
ANR	8027104	Identifier	num_entries		8027080	1					
ANR	8027105	ReturnStatement	return false ;	1151:8:41206:41218	8027080	1	True				
ANR	8027106	Identifier	false		8027080	0					
ANR	8027107	ExpressionStatement	pb = pindexed -> palette . data + 3 * indx	1152:4:41224:41262	8027080	2	True				
ANR	8027108	AssignmentExpression	pb = pindexed -> palette . data + 3 * indx		8027080	0		=			
ANR	8027109	Identifier	pb		8027080	0					
ANR	8027110	AdditiveExpression	pindexed -> palette . data + 3 * indx		8027080	1		+			
ANR	8027111	MemberAccess	pindexed -> palette . data		8027080	0					
ANR	8027112	PtrMemberAccess	pindexed -> palette		8027080	0					
ANR	8027113	Identifier	pindexed		8027080	0					
ANR	8027114	Identifier	palette		8027080	1					
ANR	8027115	Identifier	data		8027080	1					
ANR	8027116	MultiplicativeExpression	3 * indx		8027080	1		*			
ANR	8027117	PrimaryExpression	3		8027080	0					
ANR	8027118	Identifier	indx		8027080	1					
ANR	8027119	ReturnStatement	return ( pb [ 0 ] == 0 ) && ( pb [ 1 ] == 0 ) && ( pb [ 2 ] == 0 ) ;	1153:4:41268:41319	8027080	3	True				
ANR	8027120	AndExpression	( pb [ 0 ] == 0 ) && ( pb [ 1 ] == 0 ) && ( pb [ 2 ] == 0 )		8027080	0		&&			
ANR	8027121	EqualityExpression	pb [ 0 ] == 0		8027080	0		==			
ANR	8027122	ArrayIndexing	pb [ 0 ]		8027080	0					
ANR	8027123	Identifier	pb		8027080	0					
ANR	8027124	PrimaryExpression	0		8027080	1					
ANR	8027125	PrimaryExpression	0		8027080	1					
ANR	8027126	AndExpression	( pb [ 1 ] == 0 ) && ( pb [ 2 ] == 0 )		8027080	1		&&			
ANR	8027127	EqualityExpression	pb [ 1 ] == 0		8027080	0		==			
ANR	8027128	ArrayIndexing	pb [ 1 ]		8027080	0					
ANR	8027129	Identifier	pb		8027080	0					
ANR	8027130	PrimaryExpression	1		8027080	1					
ANR	8027131	PrimaryExpression	0		8027080	1					
ANR	8027132	EqualityExpression	pb [ 2 ] == 0		8027080	1		==			
ANR	8027133	ArrayIndexing	pb [ 2 ]		8027080	0					
ANR	8027134	Identifier	pb		8027080	0					
ANR	8027135	PrimaryExpression	2		8027080	1					
ANR	8027136	PrimaryExpression	0		8027080	1					
ANR	8027137	ReturnType	bool		8027080	1					
ANR	8027138	Identifier	pcl_cs_indexed_is_black		8027080	2					
ANR	8027139	ParameterList	"const pcl_cs_indexed_t * pindexed , int indx"		8027080	3					
ANR	8027140	Parameter	const pcl_cs_indexed_t * pindexed	1146:24:41052:41084	8027080	0	True				
ANR	8027141	ParameterType	const pcl_cs_indexed_t *		8027080	0					
ANR	8027142	Identifier	pindexed		8027080	1					
ANR	8027143	Parameter	int indx	1146:59:41087:41094	8027080	1	True				
ANR	8027144	ParameterType	int		8027080	0					
ANR	8027145	Identifier	indx		8027080	1					
ANR	8027146	CFGEntryNode	ENTRY		8027080		True				
ANR	8027147	CFGExitNode	EXIT		8027080		True				
ANR	8027148	Symbol	pb		8027080						
ANR	8027149	Symbol	pindexed -> palette		8027080						
ANR	8027150	Symbol	* pindexed		8027080						
ANR	8027151	Symbol	pindexed		8027080						
ANR	8027152	Symbol	indx		8027080						
ANR	8027153	Symbol	false		8027080						
ANR	8027154	Symbol	pindexed -> palette . data		8027080						
ANR	8027155	Symbol	pindexed -> num_entries		8027080						
ANR	8027156	Symbol	* pb		8027080						
ANR	8027157	Function	pcl_cs_indexed_init	1160:0:41439:41516							
ANR	8027158	FunctionDef	pcl_cs_indexed_init (pcl_state_t * pcs)		8027157	0					
ANR	8027159	CompoundStatement		1162:0:41483:41516	8027157	0					
ANR	8027160	ExpressionStatement	pcs -> pdflt_cs_indexed = 0	1163:4:41489:41514	8027157	0	True				
ANR	8027161	AssignmentExpression	pcs -> pdflt_cs_indexed = 0		8027157	0		=			
ANR	8027162	PtrMemberAccess	pcs -> pdflt_cs_indexed		8027157	0					
ANR	8027163	Identifier	pcs		8027157	0					
ANR	8027164	Identifier	pdflt_cs_indexed		8027157	1					
ANR	8027165	PrimaryExpression	0		8027157	1					
ANR	8027166	ReturnType	void		8027157	1					
ANR	8027167	Identifier	pcl_cs_indexed_init		8027157	2					
ANR	8027168	ParameterList	pcl_state_t * pcs		8027157	3					
ANR	8027169	Parameter	pcl_state_t * pcs	1161:20:41464:41480	8027157	0	True				
ANR	8027170	ParameterType	pcl_state_t *		8027157	0					
ANR	8027171	Identifier	pcs		8027157	1					
ANR	8027172	CFGEntryNode	ENTRY		8027157		True				
ANR	8027173	CFGExitNode	EXIT		8027157		True				
ANR	8027174	Symbol	pcs		8027157						
ANR	8027175	Symbol	pcs -> pdflt_cs_indexed		8027157						
ANR	8027176	Symbol	* pcs		8027157						
