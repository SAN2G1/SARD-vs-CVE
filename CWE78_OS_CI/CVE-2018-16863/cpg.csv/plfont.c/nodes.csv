command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8449616	File	data/converged/CVE-2018-16863_ghostpdl/plfont.c								
ANR	8449617	Function	pl_free_font	55:0:1523:2759							
ANR	8449618	FunctionDef	"pl_free_font (gs_memory_t * mem , void * plf , client_name_t cname)"		8449617	0					
ANR	8449619	CompoundStatement		57:0:1592:2759	8449617	0					
ANR	8449620	IdentifierDeclStatement	pl_font_t * plfont = plf ;	58:4:1598:1621	8449617	0	True				
ANR	8449621	IdentifierDecl	* plfont = plf		8449617	0					
ANR	8449622	IdentifierDeclType	pl_font_t *		8449617	0					
ANR	8449623	Identifier	plfont		8449617	1					
ANR	8449624	AssignmentExpression	* plfont = plf		8449617	2		=			
ANR	8449625	Identifier	plf		8449617	0					
ANR	8449626	Identifier	plf		8449617	1					
ANR	8449627	IfStatement	if ( ! plfont -> data_are_permanent )		8449617	1					
ANR	8449628	Condition	! plfont -> data_are_permanent	61:8:1663:1689	8449617	0	True				
ANR	8449629	UnaryOperationExpression	! plfont -> data_are_permanent		8449617	0					
ANR	8449630	UnaryOperator	!		8449617	0					
ANR	8449631	PtrMemberAccess	plfont -> data_are_permanent		8449617	1					
ANR	8449632	Identifier	plfont		8449617	0					
ANR	8449633	Identifier	data_are_permanent		8449617	1					
ANR	8449634	CompoundStatement		5:37:99:99	8449617	1					
ANR	8449635	IfStatement	if ( plfont -> glyphs . table )		8449617	0					
ANR	8449636	Condition	plfont -> glyphs . table	62:12:1706:1725	8449617	0	True				
ANR	8449637	MemberAccess	plfont -> glyphs . table		8449617	0					
ANR	8449638	PtrMemberAccess	plfont -> glyphs		8449617	0					
ANR	8449639	Identifier	plfont		8449617	0					
ANR	8449640	Identifier	glyphs		8449617	1					
ANR	8449641	Identifier	table		8449617	1					
ANR	8449642	CompoundStatement		7:12:149:155	8449617	1					
ANR	8449643	IdentifierDeclStatement	uint i ;	63:12:1742:1748	8449617	0	True				
ANR	8449644	IdentifierDecl	i		8449617	0					
ANR	8449645	IdentifierDeclType	uint		8449617	0					
ANR	8449646	Identifier	i		8449617	1					
ANR	8449647	ForStatement	for ( i = plfont -> glyphs . size ; i > 0 ; )		8449617	1					
ANR	8449648	ForInit	i = plfont -> glyphs . size ;	65:17:1768:1791	8449617	0	True				
ANR	8449649	AssignmentExpression	i = plfont -> glyphs . size		8449617	0		=			
ANR	8449650	Identifier	i		8449617	0					
ANR	8449651	MemberAccess	plfont -> glyphs . size		8449617	1					
ANR	8449652	PtrMemberAccess	plfont -> glyphs		8449617	0					
ANR	8449653	Identifier	plfont		8449617	0					
ANR	8449654	Identifier	glyphs		8449617	1					
ANR	8449655	Identifier	size		8449617	1					
ANR	8449656	Condition	i > 0	65:42:1793:1797	8449617	1	True				
ANR	8449657	RelationalExpression	i > 0		8449617	0		>			
ANR	8449658	Identifier	i		8449617	0					
ANR	8449659	PrimaryExpression	0		8449617	1					
ANR	8449660	CompoundStatement		10:16:226:277	8449617	2					
ANR	8449661	IdentifierDeclStatement	void * data = ( void * ) plfont -> glyphs . table [ -- i ] . data ;	66:16:1819:1870	8449617	0	True				
ANR	8449662	IdentifierDecl	* data = ( void * ) plfont -> glyphs . table [ -- i ] . data		8449617	0					
ANR	8449663	IdentifierDeclType	void *		8449617	0					
ANR	8449664	Identifier	data		8449617	1					
ANR	8449665	AssignmentExpression	* data = ( void * ) plfont -> glyphs . table [ -- i ] . data		8449617	2		=			
ANR	8449666	Identifier	data		8449617	0					
ANR	8449667	CastExpression	( void * ) plfont -> glyphs . table [ -- i ] . data		8449617	1					
ANR	8449668	CastTarget	void *		8449617	0					
ANR	8449669	MemberAccess	plfont -> glyphs . table [ -- i ] . data		8449617	1					
ANR	8449670	ArrayIndexing	plfont -> glyphs . table [ -- i ]		8449617	0					
ANR	8449671	MemberAccess	plfont -> glyphs . table		8449617	0					
ANR	8449672	PtrMemberAccess	plfont -> glyphs		8449617	0					
ANR	8449673	Identifier	plfont		8449617	0					
ANR	8449674	Identifier	glyphs		8449617	1					
ANR	8449675	Identifier	table		8449617	1					
ANR	8449676	UnaryExpression	-- i		8449617	1					
ANR	8449677	IncDec	--		8449617	0					
ANR	8449678	Identifier	i		8449617	1					
ANR	8449679	Identifier	data		8449617	1					
ANR	8449680	IfStatement	if ( data )		8449617	1					
ANR	8449681	Condition	data	68:20:1893:1896	8449617	0	True				
ANR	8449682	Identifier	data		8449617	0					
ANR	8449683	ExpressionStatement	"gs_free_object ( mem , data , cname )"	69:20:1919:1951	8449617	1	True				
ANR	8449684	CallExpression	"gs_free_object ( mem , data , cname )"		8449617	0					
ANR	8449685	Callee	gs_free_object		8449617	0					
ANR	8449686	Identifier	gs_free_object		8449617	0					
ANR	8449687	ArgumentList	mem		8449617	1					
ANR	8449688	Argument	mem		8449617	0					
ANR	8449689	Identifier	mem		8449617	0					
ANR	8449690	Argument	data		8449617	1					
ANR	8449691	Identifier	data		8449617	0					
ANR	8449692	Argument	cname		8449617	2					
ANR	8449693	Identifier	cname		8449617	0					
ANR	8449694	ExpressionStatement	"gs_free_object ( mem , ( void * ) plfont -> header , cname )"	72:8:1985:2035	8449617	1	True				
ANR	8449695	CallExpression	"gs_free_object ( mem , ( void * ) plfont -> header , cname )"		8449617	0					
ANR	8449696	Callee	gs_free_object		8449617	0					
ANR	8449697	Identifier	gs_free_object		8449617	0					
ANR	8449698	ArgumentList	mem		8449617	1					
ANR	8449699	Argument	mem		8449617	0					
ANR	8449700	Identifier	mem		8449617	0					
ANR	8449701	Argument	( void * ) plfont -> header		8449617	1					
ANR	8449702	CastExpression	( void * ) plfont -> header		8449617	0					
ANR	8449703	CastTarget	void *		8449617	0					
ANR	8449704	PtrMemberAccess	plfont -> header		8449617	1					
ANR	8449705	Identifier	plfont		8449617	0					
ANR	8449706	Identifier	header		8449617	1					
ANR	8449707	Argument	cname		8449617	2					
ANR	8449708	Identifier	cname		8449617	0					
ANR	8449709	ExpressionStatement	plfont -> header = 0	73:8:2045:2063	8449617	2	True				
ANR	8449710	AssignmentExpression	plfont -> header = 0		8449617	0		=			
ANR	8449711	PtrMemberAccess	plfont -> header		8449617	0					
ANR	8449712	Identifier	plfont		8449617	0					
ANR	8449713	Identifier	header		8449617	1					
ANR	8449714	PrimaryExpression	0		8449617	1					
ANR	8449715	ExpressionStatement	pl_font_glyph_width_cache_remove_nodes ( plfont )	77:4:2151:2197	8449617	2	True				
ANR	8449716	CallExpression	pl_font_glyph_width_cache_remove_nodes ( plfont )		8449617	0					
ANR	8449717	Callee	pl_font_glyph_width_cache_remove_nodes		8449617	0					
ANR	8449718	Identifier	pl_font_glyph_width_cache_remove_nodes		8449617	0					
ANR	8449719	ArgumentList	plfont		8449617	1					
ANR	8449720	Argument	plfont		8449617	0					
ANR	8449721	Identifier	plfont		8449617	0					
ANR	8449722	ExpressionStatement	"gs_free_object ( mem , ( void * ) plfont -> char_glyphs . table , cname )"	80:4:2241:2302	8449617	3	True				
ANR	8449723	CallExpression	"gs_free_object ( mem , ( void * ) plfont -> char_glyphs . table , cname )"		8449617	0					
ANR	8449724	Callee	gs_free_object		8449617	0					
ANR	8449725	Identifier	gs_free_object		8449617	0					
ANR	8449726	ArgumentList	mem		8449617	1					
ANR	8449727	Argument	mem		8449617	0					
ANR	8449728	Identifier	mem		8449617	0					
ANR	8449729	Argument	( void * ) plfont -> char_glyphs . table		8449617	1					
ANR	8449730	CastExpression	( void * ) plfont -> char_glyphs . table		8449617	0					
ANR	8449731	CastTarget	void *		8449617	0					
ANR	8449732	MemberAccess	plfont -> char_glyphs . table		8449617	1					
ANR	8449733	PtrMemberAccess	plfont -> char_glyphs		8449617	0					
ANR	8449734	Identifier	plfont		8449617	0					
ANR	8449735	Identifier	char_glyphs		8449617	1					
ANR	8449736	Identifier	table		8449617	1					
ANR	8449737	Argument	cname		8449617	2					
ANR	8449738	Identifier	cname		8449617	0					
ANR	8449739	ExpressionStatement	"gs_free_object ( mem , ( void * ) plfont -> glyphs . table , cname )"	81:4:2308:2364	8449617	4	True				
ANR	8449740	CallExpression	"gs_free_object ( mem , ( void * ) plfont -> glyphs . table , cname )"		8449617	0					
ANR	8449741	Callee	gs_free_object		8449617	0					
ANR	8449742	Identifier	gs_free_object		8449617	0					
ANR	8449743	ArgumentList	mem		8449617	1					
ANR	8449744	Argument	mem		8449617	0					
ANR	8449745	Identifier	mem		8449617	0					
ANR	8449746	Argument	( void * ) plfont -> glyphs . table		8449617	1					
ANR	8449747	CastExpression	( void * ) plfont -> glyphs . table		8449617	0					
ANR	8449748	CastTarget	void *		8449617	0					
ANR	8449749	MemberAccess	plfont -> glyphs . table		8449617	1					
ANR	8449750	PtrMemberAccess	plfont -> glyphs		8449617	0					
ANR	8449751	Identifier	plfont		8449617	0					
ANR	8449752	Identifier	glyphs		8449617	1					
ANR	8449753	Identifier	table		8449617	1					
ANR	8449754	Argument	cname		8449617	2					
ANR	8449755	Identifier	cname		8449617	0					
ANR	8449756	IfStatement	if ( plfont -> pfont )		8449617	5					
ANR	8449757	Condition	plfont -> pfont	82:8:2374:2386	8449617	0	True				
ANR	8449758	PtrMemberAccess	plfont -> pfont		8449617	0					
ANR	8449759	Identifier	plfont		8449617	0					
ANR	8449760	Identifier	pfont		8449617	1					
ANR	8449761	CompoundStatement		26:23:796:796	8449617	1					
ANR	8449762	ExpressionStatement	gs_purge_font_from_char_caches_completely ( plfont -> pfont )	83:8:2448:2504	8449617	0	True				
ANR	8449763	CallExpression	gs_purge_font_from_char_caches_completely ( plfont -> pfont )		8449617	0					
ANR	8449764	Callee	gs_purge_font_from_char_caches_completely		8449617	0					
ANR	8449765	Identifier	gs_purge_font_from_char_caches_completely		8449617	0					
ANR	8449766	ArgumentList	plfont -> pfont		8449617	1					
ANR	8449767	Argument	plfont -> pfont		8449617	0					
ANR	8449768	PtrMemberAccess	plfont -> pfont		8449617	0					
ANR	8449769	Identifier	plfont		8449617	0					
ANR	8449770	Identifier	pfont		8449617	1					
ANR	8449771	ExpressionStatement	gs_purge_font ( plfont -> pfont )	84:8:2514:2542	8449617	1	True				
ANR	8449772	CallExpression	gs_purge_font ( plfont -> pfont )		8449617	0					
ANR	8449773	Callee	gs_purge_font		8449617	0					
ANR	8449774	Identifier	gs_purge_font		8449617	0					
ANR	8449775	ArgumentList	plfont -> pfont		8449617	1					
ANR	8449776	Argument	plfont -> pfont		8449617	0					
ANR	8449777	PtrMemberAccess	plfont -> pfont		8449617	0					
ANR	8449778	Identifier	plfont		8449617	0					
ANR	8449779	Identifier	pfont		8449617	1					
ANR	8449780	ExpressionStatement	"gs_free_object ( mem , plfont -> pfont , cname )"	85:8:2552:2593	8449617	2	True				
ANR	8449781	CallExpression	"gs_free_object ( mem , plfont -> pfont , cname )"		8449617	0					
ANR	8449782	Callee	gs_free_object		8449617	0					
ANR	8449783	Identifier	gs_free_object		8449617	0					
ANR	8449784	ArgumentList	mem		8449617	1					
ANR	8449785	Argument	mem		8449617	0					
ANR	8449786	Identifier	mem		8449617	0					
ANR	8449787	Argument	plfont -> pfont		8449617	1					
ANR	8449788	PtrMemberAccess	plfont -> pfont		8449617	0					
ANR	8449789	Identifier	plfont		8449617	0					
ANR	8449790	Identifier	pfont		8449617	1					
ANR	8449791	Argument	cname		8449617	2					
ANR	8449792	Identifier	cname		8449617	0					
ANR	8449793	IfStatement	if ( plfont -> font_file )		8449617	6					
ANR	8449794	Condition	plfont -> font_file	87:8:2609:2625	8449617	0	True				
ANR	8449795	PtrMemberAccess	plfont -> font_file		8449617	0					
ANR	8449796	Identifier	plfont		8449617	0					
ANR	8449797	Identifier	font_file		8449617	1					
ANR	8449798	CompoundStatement		31:27:1035:1035	8449617	1					
ANR	8449799	ExpressionStatement	"gs_free_object ( mem , plfont -> font_file , cname )"	88:8:2638:2683	8449617	0	True				
ANR	8449800	CallExpression	"gs_free_object ( mem , plfont -> font_file , cname )"		8449617	0					
ANR	8449801	Callee	gs_free_object		8449617	0					
ANR	8449802	Identifier	gs_free_object		8449617	0					
ANR	8449803	ArgumentList	mem		8449617	1					
ANR	8449804	Argument	mem		8449617	0					
ANR	8449805	Identifier	mem		8449617	0					
ANR	8449806	Argument	plfont -> font_file		8449617	1					
ANR	8449807	PtrMemberAccess	plfont -> font_file		8449617	0					
ANR	8449808	Identifier	plfont		8449617	0					
ANR	8449809	Identifier	font_file		8449617	1					
ANR	8449810	Argument	cname		8449617	2					
ANR	8449811	Identifier	cname		8449617	0					
ANR	8449812	ExpressionStatement	plfont -> font_file = 0	89:8:2693:2714	8449617	1	True				
ANR	8449813	AssignmentExpression	plfont -> font_file = 0		8449617	0		=			
ANR	8449814	PtrMemberAccess	plfont -> font_file		8449617	0					
ANR	8449815	Identifier	plfont		8449617	0					
ANR	8449816	Identifier	font_file		8449617	1					
ANR	8449817	PrimaryExpression	0		8449617	1					
ANR	8449818	ExpressionStatement	"gs_free_object ( mem , plf , cname )"	91:4:2726:2757	8449617	7	True				
ANR	8449819	CallExpression	"gs_free_object ( mem , plf , cname )"		8449617	0					
ANR	8449820	Callee	gs_free_object		8449617	0					
ANR	8449821	Identifier	gs_free_object		8449617	0					
ANR	8449822	ArgumentList	mem		8449617	1					
ANR	8449823	Argument	mem		8449617	0					
ANR	8449824	Identifier	mem		8449617	0					
ANR	8449825	Argument	plf		8449617	1					
ANR	8449826	Identifier	plf		8449617	0					
ANR	8449827	Argument	cname		8449617	2					
ANR	8449828	Identifier	cname		8449617	0					
ANR	8449829	ReturnType	void		8449617	1					
ANR	8449830	Identifier	pl_free_font		8449617	2					
ANR	8449831	ParameterList	"gs_memory_t * mem , void * plf , client_name_t cname"		8449617	3					
ANR	8449832	Parameter	gs_memory_t * mem	56:13:1541:1557	8449617	0	True				
ANR	8449833	ParameterType	gs_memory_t *		8449617	0					
ANR	8449834	Identifier	mem		8449617	1					
ANR	8449835	Parameter	void * plf	56:32:1560:1568	8449617	1	True				
ANR	8449836	ParameterType	void *		8449617	0					
ANR	8449837	Identifier	plf		8449617	1					
ANR	8449838	Parameter	client_name_t cname	56:43:1571:1589	8449617	2	True				
ANR	8449839	ParameterType	client_name_t		8449617	0					
ANR	8449840	Identifier	cname		8449617	1					
ANR	8449841	CFGEntryNode	ENTRY		8449617		True				
ANR	8449842	CFGExitNode	EXIT		8449617		True				
ANR	8449843	Symbol	plfont -> glyphs . table		8449617						
ANR	8449844	Symbol	* * plfont		8449617						
ANR	8449845	Symbol	data		8449617						
ANR	8449846	Symbol	plfont -> glyphs . table [ -- i ] . data		8449617						
ANR	8449847	Symbol	plfont -> header		8449617						
ANR	8449848	Symbol	cname		8449617						
ANR	8449849	Symbol	plfont -> char_glyphs		8449617						
ANR	8449850	Symbol	i		8449617						
ANR	8449851	Symbol	plf		8449617						
ANR	8449852	Symbol	plfont		8449617						
ANR	8449853	Symbol	plfont -> data_are_permanent		8449617						
ANR	8449854	Symbol	plfont -> glyphs . size		8449617						
ANR	8449855	Symbol	* plfont -> glyphs		8449617						
ANR	8449856	Symbol	* i		8449617						
ANR	8449857	Symbol	mem		8449617						
ANR	8449858	Symbol	plfont -> pfont		8449617						
ANR	8449859	Symbol	* plfont		8449617						
ANR	8449860	Symbol	plfont -> glyphs		8449617						
ANR	8449861	Symbol	* plfont -> glyphs . table		8449617						
ANR	8449862	Symbol	plfont -> font_file		8449617						
ANR	8449863	Symbol	plfont -> char_glyphs . table		8449617						
ANR	8449864	DeclStmt									
ANR	8449865	Decl							const char	const char * [ 258 ]	pl_mac_names
ANR	8449866	Function	pl_glyph_name	357:0:6514:10401							
ANR	8449867	FunctionDef	"pl_glyph_name (gs_font * pfont , gs_glyph glyph , gs_const_string * pstr)"		8449866	0					
ANR	8449868	CompoundStatement		359:0:6596:10401	8449866	0					
ANR	8449869	IdentifierDeclStatement	uint table_length ;	360:4:6602:6619	8449866	0	True				
ANR	8449870	IdentifierDecl	table_length		8449866	0					
ANR	8449871	IdentifierDeclType	uint		8449866	0					
ANR	8449872	Identifier	table_length		8449866	1					
ANR	8449873	IdentifierDeclStatement	ulong table_offset ;	361:4:6625:6643	8449866	1	True				
ANR	8449874	IdentifierDecl	table_offset		8449866	0					
ANR	8449875	IdentifierDeclType	ulong		8449866	0					
ANR	8449876	Identifier	table_offset		8449866	1					
ANR	8449877	IfStatement	if ( glyph >= GS_MIN_GLYPH_INDEX )		8449866	2					
ANR	8449878	Condition	glyph >= GS_MIN_GLYPH_INDEX	363:8:6654:6680	8449866	0	True				
ANR	8449879	RelationalExpression	glyph >= GS_MIN_GLYPH_INDEX		8449866	0		>=			
ANR	8449880	Identifier	glyph		8449866	0					
ANR	8449881	Identifier	GS_MIN_GLYPH_INDEX		8449866	1					
ANR	8449882	ExpressionStatement	glyph -= GS_MIN_GLYPH_INDEX	364:8:6691:6718	8449866	1	True				
ANR	8449883	AssignmentExpression	glyph -= GS_MIN_GLYPH_INDEX		8449866	0		-=			
ANR	8449884	Identifier	glyph		8449866	0					
ANR	8449885	Identifier	GS_MIN_GLYPH_INDEX		8449866	1					
ANR	8449886	IfStatement	if ( pfont -> FontType != ft_TrueType )		8449866	3					
ANR	8449887	Condition	pfont -> FontType != ft_TrueType	367:8:6778:6807	8449866	0	True				
ANR	8449888	EqualityExpression	pfont -> FontType != ft_TrueType		8449866	0		!=			
ANR	8449889	PtrMemberAccess	pfont -> FontType		8449866	0					
ANR	8449890	Identifier	pfont		8449866	0					
ANR	8449891	Identifier	FontType		8449866	1					
ANR	8449892	Identifier	ft_TrueType		8449866	1					
ANR	8449893	CompoundStatement		9:40:213:213	8449866	1					
ANR	8449894	ExpressionStatement	glyph -= 29	368:8:6820:6831	8449866	0	True				
ANR	8449895	AssignmentExpression	glyph -= 29		8449866	0		-=			
ANR	8449896	Identifier	glyph		8449866	0					
ANR	8449897	PrimaryExpression	29		8449866	1					
ANR	8449898	IfStatement	if ( glyph < 258 )		8449866	1					
ANR	8449899	Condition	glyph < 258	369:12:6845:6855	8449866	0	True				
ANR	8449900	RelationalExpression	glyph < 258		8449866	0		<			
ANR	8449901	Identifier	glyph		8449866	0					
ANR	8449902	PrimaryExpression	258		8449866	1					
ANR	8449903	CompoundStatement		11:25:261:261	8449866	1					
ANR	8449904	ExpressionStatement	pstr -> data = ( const byte * ) pl_mac_names [ glyph ]	370:12:6872:6918	8449866	0	True				
ANR	8449905	AssignmentExpression	pstr -> data = ( const byte * ) pl_mac_names [ glyph ]		8449866	0		=			
ANR	8449906	PtrMemberAccess	pstr -> data		8449866	0					
ANR	8449907	Identifier	pstr		8449866	0					
ANR	8449908	Identifier	data		8449866	1					
ANR	8449909	CastExpression	( const byte * ) pl_mac_names [ glyph ]		8449866	1					
ANR	8449910	CastTarget	const byte *		8449866	0					
ANR	8449911	ArrayIndexing	pl_mac_names [ glyph ]		8449866	1					
ANR	8449912	Identifier	pl_mac_names		8449866	0					
ANR	8449913	Identifier	glyph		8449866	1					
ANR	8449914	ExpressionStatement	pstr -> size = strlen ( ( const char * ) pstr -> data )	371:12:6932:6977	8449866	1	True				
ANR	8449915	AssignmentExpression	pstr -> size = strlen ( ( const char * ) pstr -> data )		8449866	0		=			
ANR	8449916	PtrMemberAccess	pstr -> size		8449866	0					
ANR	8449917	Identifier	pstr		8449866	0					
ANR	8449918	Identifier	size		8449866	1					
ANR	8449919	CallExpression	strlen ( ( const char * ) pstr -> data )		8449866	1					
ANR	8449920	Callee	strlen		8449866	0					
ANR	8449921	Identifier	strlen		8449866	0					
ANR	8449922	ArgumentList	( const char * ) pstr -> data		8449866	1					
ANR	8449923	Argument	( const char * ) pstr -> data		8449866	0					
ANR	8449924	CastExpression	( const char * ) pstr -> data		8449866	0					
ANR	8449925	CastTarget	const char *		8449866	0					
ANR	8449926	PtrMemberAccess	pstr -> data		8449866	1					
ANR	8449927	Identifier	pstr		8449866	0					
ANR	8449928	Identifier	data		8449866	1					
ANR	8449929	ReturnStatement	return 0 ;	372:12:6991:6999	8449866	2	True				
ANR	8449930	PrimaryExpression	0		8449866	0					
ANR	8449931	ElseStatement	else		8449866	0					
ANR	8449932	CompoundStatement		15:15:419:419	8449866	0					
ANR	8449933	ExpressionStatement	"if_debug1m ( '=' , pfont -> memory , ""[=]glyph index %lx out of range\\n"" , ( ulong ) glyph )"	374:12:7030:7135	8449866	0	True				
ANR	8449934	CallExpression	"if_debug1m ( '=' , pfont -> memory , ""[=]glyph index %lx out of range\\n"" , ( ulong ) glyph )"		8449866	0					
ANR	8449935	Callee	if_debug1m		8449866	0					
ANR	8449936	Identifier	if_debug1m		8449866	0					
ANR	8449937	ArgumentList	'='		8449866	1					
ANR	8449938	Argument	'='		8449866	0					
ANR	8449939	PrimaryExpression	'='		8449866	0					
ANR	8449940	Argument	pfont -> memory		8449866	1					
ANR	8449941	PtrMemberAccess	pfont -> memory		8449866	0					
ANR	8449942	Identifier	pfont		8449866	0					
ANR	8449943	Identifier	memory		8449866	1					
ANR	8449944	Argument	"""[=]glyph index %lx out of range\\n"""		8449866	2					
ANR	8449945	PrimaryExpression	"""[=]glyph index %lx out of range\\n"""		8449866	0					
ANR	8449946	Argument	( ulong ) glyph		8449866	3					
ANR	8449947	CastExpression	( ulong ) glyph		8449866	0					
ANR	8449948	CastTarget	ulong		8449866	0					
ANR	8449949	Identifier	glyph		8449866	1					
ANR	8449950	ReturnStatement	return - 1 ;	376:12:7149:7158	8449866	1	True				
ANR	8449951	UnaryOperationExpression	- 1		8449866	0					
ANR	8449952	UnaryOperator	-		8449866	0					
ANR	8449953	PrimaryExpression	1		8449866	1					
ANR	8449954	ExpressionStatement	"table_offset = tt_find_table ( ( gs_font_type42 * ) pfont , ""post"" , & table_length )"	380:4:7181:7266	8449866	4	True				
ANR	8449955	AssignmentExpression	"table_offset = tt_find_table ( ( gs_font_type42 * ) pfont , ""post"" , & table_length )"		8449866	0		=			
ANR	8449956	Identifier	table_offset		8449866	0					
ANR	8449957	CallExpression	"tt_find_table ( ( gs_font_type42 * ) pfont , ""post"" , & table_length )"		8449866	1					
ANR	8449958	Callee	tt_find_table		8449866	0					
ANR	8449959	Identifier	tt_find_table		8449866	0					
ANR	8449960	ArgumentList	( gs_font_type42 * ) pfont		8449866	1					
ANR	8449961	Argument	( gs_font_type42 * ) pfont		8449866	0					
ANR	8449962	CastExpression	( gs_font_type42 * ) pfont		8449866	0					
ANR	8449963	CastTarget	gs_font_type42 *		8449866	0					
ANR	8449964	Identifier	pfont		8449866	1					
ANR	8449965	Argument	"""post"""		8449866	1					
ANR	8449966	PrimaryExpression	"""post"""		8449866	0					
ANR	8449967	Argument	& table_length		8449866	2					
ANR	8449968	UnaryOperationExpression	& table_length		8449866	0					
ANR	8449969	UnaryOperator	&		8449866	0					
ANR	8449970	Identifier	table_length		8449866	1					
ANR	8449971	IfStatement	if ( table_offset == 0 )		8449866	5					
ANR	8449972	Condition	table_offset == 0	383:8:7300:7316	8449866	0	True				
ANR	8449973	EqualityExpression	table_offset == 0		8449866	0		==			
ANR	8449974	Identifier	table_offset		8449866	0					
ANR	8449975	PrimaryExpression	0		8449866	1					
ANR	8449976	ReturnStatement	return - 1 ;	384:8:7327:7336	8449866	1	True				
ANR	8449977	UnaryOperationExpression	- 1		8449866	0					
ANR	8449978	UnaryOperator	-		8449866	0					
ANR	8449979	PrimaryExpression	1		8449866	1					
ANR	8449980	IfStatement	if ( table_length == 0 )		8449866	6					
ANR	8449981	Condition	table_length == 0	386:8:7384:7400	8449866	0	True				
ANR	8449982	EqualityExpression	table_length == 0		8449866	0		==			
ANR	8449983	Identifier	table_length		8449866	0					
ANR	8449984	PrimaryExpression	0		8449866	1					
ANR	8449985	ReturnStatement	return - 1 ;	387:8:7411:7420	8449866	1	True				
ANR	8449986	UnaryOperationExpression	- 1		8449866	0					
ANR	8449987	UnaryOperator	-		8449866	0					
ANR	8449988	PrimaryExpression	1		8449866	1					
ANR	8449989	CompoundStatement		35:8:917:934	8449866	7					
ANR	8449990	IdentifierDeclStatement	ulong format ;	390:8:7437:7449	8449866	0	True				
ANR	8449991	IdentifierDecl	format		8449866	0					
ANR	8449992	IdentifierDeclType	ulong		8449866	0					
ANR	8449993	Identifier	format		8449866	1					
ANR	8449994	IdentifierDeclStatement	uint numGlyphs ;	391:8:7459:7473	8449866	1	True				
ANR	8449995	IdentifierDecl	numGlyphs		8449866	0					
ANR	8449996	IdentifierDeclType	uint		8449866	0					
ANR	8449997	Identifier	numGlyphs		8449866	1					
ANR	8449998	IdentifierDeclStatement	uint glyph_name_index ;	392:8:7483:7504	8449866	2	True				
ANR	8449999	IdentifierDecl	glyph_name_index		8449866	0					
ANR	8450000	IdentifierDeclType	uint		8449866	0					
ANR	8450001	Identifier	glyph_name_index		8449866	1					
ANR	8450002	IdentifierDeclStatement	const byte * postp ;	393:8:7514:7531	8449866	3	True				
ANR	8450003	IdentifierDecl	* postp		8449866	0					
ANR	8450004	IdentifierDeclType	const byte *		8449866	0					
ANR	8450005	Identifier	postp		8449866	1					
ANR	8450006	ExpressionStatement	"( ( gs_font_type42 * ) pfont ) -> data . string_proc ( ( gs_font_type42 * ) pfont , table_offset , table_length , & postp )"	395:8:7572:7784	8449866	4	True				
ANR	8450007	CallExpression	"( ( gs_font_type42 * ) pfont ) -> data . string_proc ( ( gs_font_type42 * ) pfont , table_offset , table_length , & postp )"		8449866	0					
ANR	8450008	Callee	( ( gs_font_type42 * ) pfont ) -> data . string_proc		8449866	0					
ANR	8450009	MemberAccess	( ( gs_font_type42 * ) pfont ) -> data . string_proc		8449866	0					
ANR	8450010	PtrMemberAccess	( ( gs_font_type42 * ) pfont ) -> data		8449866	0					
ANR	8450011	CastExpression	( gs_font_type42 * ) pfont		8449866	0					
ANR	8450012	CastTarget	gs_font_type42 *		8449866	0					
ANR	8450013	Identifier	pfont		8449866	1					
ANR	8450014	Identifier	data		8449866	1					
ANR	8450015	Identifier	string_proc		8449866	1					
ANR	8450016	ArgumentList	( gs_font_type42 * ) pfont		8449866	1					
ANR	8450017	Argument	( gs_font_type42 * ) pfont		8449866	0					
ANR	8450018	CastExpression	( gs_font_type42 * ) pfont		8449866	0					
ANR	8450019	CastTarget	gs_font_type42 *		8449866	0					
ANR	8450020	Identifier	pfont		8449866	1					
ANR	8450021	Argument	table_offset		8449866	1					
ANR	8450022	Identifier	table_offset		8449866	0					
ANR	8450023	Argument	table_length		8449866	2					
ANR	8450024	Identifier	table_length		8449866	0					
ANR	8450025	Argument	& postp		8449866	3					
ANR	8450026	UnaryOperationExpression	& postp		8449866	0					
ANR	8450027	UnaryOperator	&		8449866	0					
ANR	8450028	Identifier	postp		8449866	1					
ANR	8450029	ExpressionStatement	format = u32 ( postp )	398:8:7794:7813	8449866	5	True				
ANR	8450030	AssignmentExpression	format = u32 ( postp )		8449866	0		=			
ANR	8450031	Identifier	format		8449866	0					
ANR	8450032	CallExpression	u32 ( postp )		8449866	1					
ANR	8450033	Callee	u32		8449866	0					
ANR	8450034	Identifier	u32		8449866	0					
ANR	8450035	ArgumentList	postp		8449866	1					
ANR	8450036	Argument	postp		8449866	0					
ANR	8450037	Identifier	postp		8449866	0					
ANR	8450038	IfStatement	if ( format != 0x20000 )		8449866	6					
ANR	8450039	Condition	format != 0x20000	399:12:7827:7843	8449866	0	True				
ANR	8450040	EqualityExpression	format != 0x20000		8449866	0		!=			
ANR	8450041	Identifier	format		8449866	0					
ANR	8450042	PrimaryExpression	0x20000		8449866	1					
ANR	8450043	CompoundStatement		41:31:1249:1249	8449866	1					
ANR	8450044	ExpressionStatement	"dmprintf1 ( pfont -> memory , ""unknown post table format %lX\\n"" , format )"	403:12:8030:8119	8449866	0	True				
ANR	8450045	CallExpression	"dmprintf1 ( pfont -> memory , ""unknown post table format %lX\\n"" , format )"		8449866	0					
ANR	8450046	Callee	dmprintf1		8449866	0					
ANR	8450047	Identifier	dmprintf1		8449866	0					
ANR	8450048	ArgumentList	pfont -> memory		8449866	1					
ANR	8450049	Argument	pfont -> memory		8449866	0					
ANR	8450050	PtrMemberAccess	pfont -> memory		8449866	0					
ANR	8450051	Identifier	pfont		8449866	0					
ANR	8450052	Identifier	memory		8449866	1					
ANR	8450053	Argument	"""unknown post table format %lX\\n"""		8449866	1					
ANR	8450054	PrimaryExpression	"""unknown post table format %lX\\n"""		8449866	0					
ANR	8450055	Argument	format		8449866	2					
ANR	8450056	Identifier	format		8449866	0					
ANR	8450057	ReturnStatement	return - 1 ;	405:12:8133:8142	8449866	1	True				
ANR	8450058	UnaryOperationExpression	- 1		8449866	0					
ANR	8450059	UnaryOperator	-		8449866	0					
ANR	8450060	PrimaryExpression	1		8449866	1					
ANR	8450061	ExpressionStatement	numGlyphs = u16 ( postp + 32 )	408:8:8202:8229	8449866	7	True				
ANR	8450062	AssignmentExpression	numGlyphs = u16 ( postp + 32 )		8449866	0		=			
ANR	8450063	Identifier	numGlyphs		8449866	0					
ANR	8450064	CallExpression	u16 ( postp + 32 )		8449866	1					
ANR	8450065	Callee	u16		8449866	0					
ANR	8450066	Identifier	u16		8449866	0					
ANR	8450067	ArgumentList	postp + 32		8449866	1					
ANR	8450068	Argument	postp + 32		8449866	0					
ANR	8450069	AdditiveExpression	postp + 32		8449866	0		+			
ANR	8450070	Identifier	postp		8449866	0					
ANR	8450071	PrimaryExpression	32		8449866	1					
ANR	8450072	IfStatement	if ( glyph < 0 || glyph > numGlyphs - 1 )		8449866	8					
ANR	8450073	Condition	glyph < 0 || glyph > numGlyphs - 1	409:12:8243:8276	8449866	0	True				
ANR	8450074	OrExpression	glyph < 0 || glyph > numGlyphs - 1		8449866	0		||			
ANR	8450075	RelationalExpression	glyph < 0		8449866	0		<			
ANR	8450076	Identifier	glyph		8449866	0					
ANR	8450077	PrimaryExpression	0		8449866	1					
ANR	8450078	RelationalExpression	glyph > numGlyphs - 1		8449866	1		>			
ANR	8450079	Identifier	glyph		8449866	0					
ANR	8450080	AdditiveExpression	numGlyphs - 1		8449866	1		-			
ANR	8450081	Identifier	numGlyphs		8449866	0					
ANR	8450082	PrimaryExpression	1		8449866	1					
ANR	8450083	CompoundStatement		51:48:1682:1682	8449866	1					
ANR	8450084	ExpressionStatement	"if_debug1m ( '=' , pfont -> memory , ""[=]glyph index %lx out of range\\n"" , glyph )"	410:12:8293:8390	8449866	0	True				
ANR	8450085	CallExpression	"if_debug1m ( '=' , pfont -> memory , ""[=]glyph index %lx out of range\\n"" , glyph )"		8449866	0					
ANR	8450086	Callee	if_debug1m		8449866	0					
ANR	8450087	Identifier	if_debug1m		8449866	0					
ANR	8450088	ArgumentList	'='		8449866	1					
ANR	8450089	Argument	'='		8449866	0					
ANR	8450090	PrimaryExpression	'='		8449866	0					
ANR	8450091	Argument	pfont -> memory		8449866	1					
ANR	8450092	PtrMemberAccess	pfont -> memory		8449866	0					
ANR	8450093	Identifier	pfont		8449866	0					
ANR	8450094	Identifier	memory		8449866	1					
ANR	8450095	Argument	"""[=]glyph index %lx out of range\\n"""		8449866	2					
ANR	8450096	PrimaryExpression	"""[=]glyph index %lx out of range\\n"""		8449866	0					
ANR	8450097	Argument	glyph		8449866	3					
ANR	8450098	Identifier	glyph		8449866	0					
ANR	8450099	ReturnStatement	return - 1 ;	412:12:8404:8413	8449866	1	True				
ANR	8450100	UnaryOperationExpression	- 1		8449866	0					
ANR	8450101	UnaryOperator	-		8449866	0					
ANR	8450102	PrimaryExpression	1		8449866	1					
ANR	8450103	ExpressionStatement	glyph_name_index = u16 ( postp + 34 + ( glyph * 2 ) )	415:8:8506:8554	8449866	9	True				
ANR	8450104	AssignmentExpression	glyph_name_index = u16 ( postp + 34 + ( glyph * 2 ) )		8449866	0		=			
ANR	8450105	Identifier	glyph_name_index		8449866	0					
ANR	8450106	CallExpression	u16 ( postp + 34 + ( glyph * 2 ) )		8449866	1					
ANR	8450107	Callee	u16		8449866	0					
ANR	8450108	Identifier	u16		8449866	0					
ANR	8450109	ArgumentList	postp + 34 + ( glyph * 2 )		8449866	1					
ANR	8450110	Argument	postp + 34 + ( glyph * 2 )		8449866	0					
ANR	8450111	AdditiveExpression	postp + 34 + ( glyph * 2 )		8449866	0		+			
ANR	8450112	Identifier	postp		8449866	0					
ANR	8450113	AdditiveExpression	34 + ( glyph * 2 )		8449866	1		+			
ANR	8450114	PrimaryExpression	34		8449866	0					
ANR	8450115	MultiplicativeExpression	glyph * 2		8449866	1		*			
ANR	8450116	Identifier	glyph		8449866	0					
ANR	8450117	PrimaryExpression	2		8449866	1					
ANR	8450118	IfStatement	if ( glyph_name_index < 0 && glyph_name_index > 0x7fff )		8449866	10					
ANR	8450119	Condition	glyph_name_index < 0 && glyph_name_index > 0x7fff	417:12:8604:8652	8449866	0	True				
ANR	8450120	AndExpression	glyph_name_index < 0 && glyph_name_index > 0x7fff		8449866	0		&&			
ANR	8450121	RelationalExpression	glyph_name_index < 0		8449866	0		<			
ANR	8450122	Identifier	glyph_name_index		8449866	0					
ANR	8450123	PrimaryExpression	0		8449866	1					
ANR	8450124	RelationalExpression	glyph_name_index > 0x7fff		8449866	1		>			
ANR	8450125	Identifier	glyph_name_index		8449866	0					
ANR	8450126	PrimaryExpression	0x7fff		8449866	1					
ANR	8450127	ReturnStatement	return - 1 ;	418:12:8667:8676	8449866	1	True				
ANR	8450128	UnaryOperationExpression	- 1		8449866	0					
ANR	8450129	UnaryOperator	-		8449866	0					
ANR	8450130	PrimaryExpression	1		8449866	1					
ANR	8450131	IfStatement	if ( glyph_name_index < 258 )		8449866	11					
ANR	8450132	Condition	glyph_name_index < 258	420:12:8713:8734	8449866	0	True				
ANR	8450133	RelationalExpression	glyph_name_index < 258		8449866	0		<			
ANR	8450134	Identifier	glyph_name_index		8449866	0					
ANR	8450135	PrimaryExpression	258		8449866	1					
ANR	8450136	CompoundStatement		62:36:2140:2140	8449866	1					
ANR	8450137	ExpressionStatement	pstr -> data = ( const byte * ) pl_mac_names [ glyph_name_index ]	422:12:8752:8809	8449866	0	True				
ANR	8450138	AssignmentExpression	pstr -> data = ( const byte * ) pl_mac_names [ glyph_name_index ]		8449866	0		=			
ANR	8450139	PtrMemberAccess	pstr -> data		8449866	0					
ANR	8450140	Identifier	pstr		8449866	0					
ANR	8450141	Identifier	data		8449866	1					
ANR	8450142	CastExpression	( const byte * ) pl_mac_names [ glyph_name_index ]		8449866	1					
ANR	8450143	CastTarget	const byte *		8449866	0					
ANR	8450144	ArrayIndexing	pl_mac_names [ glyph_name_index ]		8449866	1					
ANR	8450145	Identifier	pl_mac_names		8449866	0					
ANR	8450146	Identifier	glyph_name_index		8449866	1					
ANR	8450147	ExpressionStatement	pstr -> size = strlen ( ( const char * ) pstr -> data )	423:12:8823:8868	8449866	1	True				
ANR	8450148	AssignmentExpression	pstr -> size = strlen ( ( const char * ) pstr -> data )		8449866	0		=			
ANR	8450149	PtrMemberAccess	pstr -> size		8449866	0					
ANR	8450150	Identifier	pstr		8449866	0					
ANR	8450151	Identifier	size		8449866	1					
ANR	8450152	CallExpression	strlen ( ( const char * ) pstr -> data )		8449866	1					
ANR	8450153	Callee	strlen		8449866	0					
ANR	8450154	Identifier	strlen		8449866	0					
ANR	8450155	ArgumentList	( const char * ) pstr -> data		8449866	1					
ANR	8450156	Argument	( const char * ) pstr -> data		8449866	0					
ANR	8450157	CastExpression	( const char * ) pstr -> data		8449866	0					
ANR	8450158	CastTarget	const char *		8449866	0					
ANR	8450159	PtrMemberAccess	pstr -> data		8449866	1					
ANR	8450160	Identifier	pstr		8449866	0					
ANR	8450161	Identifier	data		8449866	1					
ANR	8450162	ReturnStatement	return 0 ;	424:12:8882:8890	8449866	2	True				
ANR	8450163	PrimaryExpression	0		8449866	0					
ANR	8450164	ElseStatement	else		8449866	0					
ANR	8450165	CompoundStatement		71:12:2421:2478	8449866	0					
ANR	8450166	IdentifierDeclStatement	byte * mydata ;	427:12:8947:8959	8449866	0	True				
ANR	8450167	IdentifierDecl	* mydata		8449866	0					
ANR	8450168	IdentifierDeclType	byte *		8449866	0					
ANR	8450169	Identifier	mydata		8449866	1					
ANR	8450170	IdentifierDeclStatement	const byte * pascal_stringp = postp + 34 + ( numGlyphs * 2 ) ;	429:12:9018:9075	8449866	1	True				
ANR	8450171	IdentifierDecl	* pascal_stringp = postp + 34 + ( numGlyphs * 2 )		8449866	0					
ANR	8450172	IdentifierDeclType	const byte *		8449866	0					
ANR	8450173	Identifier	pascal_stringp		8449866	1					
ANR	8450174	AssignmentExpression	* pascal_stringp = postp + 34 + ( numGlyphs * 2 )		8449866	2		=			
ANR	8450175	Identifier	pascal_stringp		8449866	0					
ANR	8450176	AdditiveExpression	postp + 34 + ( numGlyphs * 2 )		8449866	1		+			
ANR	8450177	Identifier	postp		8449866	0					
ANR	8450178	AdditiveExpression	34 + ( numGlyphs * 2 )		8449866	1		+			
ANR	8450179	PrimaryExpression	34		8449866	0					
ANR	8450180	MultiplicativeExpression	numGlyphs * 2		8449866	1		*			
ANR	8450181	Identifier	numGlyphs		8449866	0					
ANR	8450182	PrimaryExpression	2		8449866	1					
ANR	8450183	ExpressionStatement	glyph_name_index -= 258	431:12:9144:9167	8449866	2	True				
ANR	8450184	AssignmentExpression	glyph_name_index -= 258		8449866	0		-=			
ANR	8450185	Identifier	glyph_name_index		8449866	0					
ANR	8450186	PrimaryExpression	258		8449866	1					
ANR	8450187	WhileStatement	while ( glyph_name_index > 0 )		8449866	3					
ANR	8450188	Condition	glyph_name_index > 0	434:19:9318:9337	8449866	0	True				
ANR	8450189	RelationalExpression	glyph_name_index > 0		8449866	0		>			
ANR	8450190	Identifier	glyph_name_index		8449866	0					
ANR	8450191	PrimaryExpression	0		8449866	1					
ANR	8450192	CompoundStatement		76:41:2743:2743	8449866	1					
ANR	8450193	ExpressionStatement	pascal_stringp += ( ( int ) ( * pascal_stringp ) + 1 )	435:16:9358:9404	8449866	0	True				
ANR	8450194	AssignmentExpression	pascal_stringp += ( ( int ) ( * pascal_stringp ) + 1 )		8449866	0		+=			
ANR	8450195	Identifier	pascal_stringp		8449866	0					
ANR	8450196	AdditiveExpression	( int ) ( * pascal_stringp ) + 1		8449866	1		+			
ANR	8450197	CastExpression	( int ) ( * pascal_stringp )		8449866	0					
ANR	8450198	CastTarget	int		8449866	0					
ANR	8450199	UnaryOperationExpression	* pascal_stringp		8449866	1					
ANR	8450200	UnaryOperator	*		8449866	0					
ANR	8450201	Identifier	pascal_stringp		8449866	1					
ANR	8450202	PrimaryExpression	1		8449866	1					
ANR	8450203	ExpressionStatement	glyph_name_index --	436:16:9422:9440	8449866	1	True				
ANR	8450204	PostIncDecOperationExpression	glyph_name_index --		8449866	0					
ANR	8450205	Identifier	glyph_name_index		8449866	0					
ANR	8450206	IncDec	--		8449866	1					
ANR	8450207	ExpressionStatement	pstr -> size = ( int ) ( * pascal_stringp )	439:12:9498:9533	8449866	4	True				
ANR	8450208	AssignmentExpression	pstr -> size = ( int ) ( * pascal_stringp )		8449866	0		=			
ANR	8450209	PtrMemberAccess	pstr -> size		8449866	0					
ANR	8450210	Identifier	pstr		8449866	0					
ANR	8450211	Identifier	size		8449866	1					
ANR	8450212	CastExpression	( int ) ( * pascal_stringp )		8449866	1					
ANR	8450213	CastTarget	int		8449866	0					
ANR	8450214	UnaryOperationExpression	* pascal_stringp		8449866	1					
ANR	8450215	UnaryOperator	*		8449866	0					
ANR	8450216	Identifier	pascal_stringp		8449866	1					
ANR	8450217	ExpressionStatement	pstr -> data = pascal_stringp + 1	441:12:9592:9623	8449866	5	True				
ANR	8450218	AssignmentExpression	pstr -> data = pascal_stringp + 1		8449866	0		=			
ANR	8450219	PtrMemberAccess	pstr -> data		8449866	0					
ANR	8450220	Identifier	pstr		8449866	0					
ANR	8450221	Identifier	data		8449866	1					
ANR	8450222	AdditiveExpression	pascal_stringp + 1		8449866	1		+			
ANR	8450223	Identifier	pascal_stringp		8449866	0					
ANR	8450224	PrimaryExpression	1		8449866	1					
ANR	8450225	IfStatement	if ( pstr -> data + pstr -> size > postp + table_length || pstr -> data - 1 < postp )		8449866	6					
ANR	8450226	Condition	pstr -> data + pstr -> size > postp + table_length || pstr -> data - 1 < postp	443:16:9672:9759	8449866	0	True				
ANR	8450227	OrExpression	pstr -> data + pstr -> size > postp + table_length || pstr -> data - 1 < postp		8449866	0		||			
ANR	8450228	RelationalExpression	pstr -> data + pstr -> size > postp + table_length		8449866	0		>			
ANR	8450229	AdditiveExpression	pstr -> data + pstr -> size		8449866	0		+			
ANR	8450230	PtrMemberAccess	pstr -> data		8449866	0					
ANR	8450231	Identifier	pstr		8449866	0					
ANR	8450232	Identifier	data		8449866	1					
ANR	8450233	PtrMemberAccess	pstr -> size		8449866	1					
ANR	8450234	Identifier	pstr		8449866	0					
ANR	8450235	Identifier	size		8449866	1					
ANR	8450236	AdditiveExpression	postp + table_length		8449866	1		+			
ANR	8450237	Identifier	postp		8449866	0					
ANR	8450238	Identifier	table_length		8449866	1					
ANR	8450239	RelationalExpression	pstr -> data - 1 < postp		8449866	1		<			
ANR	8450240	AdditiveExpression	pstr -> data - 1		8449866	0		-			
ANR	8450241	PtrMemberAccess	pstr -> data		8449866	0					
ANR	8450242	Identifier	pstr		8449866	0					
ANR	8450243	Identifier	data		8449866	1					
ANR	8450244	PrimaryExpression	1		8449866	1					
ANR	8450245	Identifier	postp		8449866	1					
ANR	8450246	CompoundStatement		86:40:3165:3165	8449866	1					
ANR	8450247	ExpressionStatement	"dmprintf ( pfont -> memory , ""data out of range\\n"" )"	445:16:9780:9826	8449866	0	True				
ANR	8450248	CallExpression	"dmprintf ( pfont -> memory , ""data out of range\\n"" )"		8449866	0					
ANR	8450249	Callee	dmprintf		8449866	0					
ANR	8450250	Identifier	dmprintf		8449866	0					
ANR	8450251	ArgumentList	pfont -> memory		8449866	1					
ANR	8450252	Argument	pfont -> memory		8449866	0					
ANR	8450253	PtrMemberAccess	pfont -> memory		8449866	0					
ANR	8450254	Identifier	pfont		8449866	0					
ANR	8450255	Identifier	memory		8449866	1					
ANR	8450256	Argument	"""data out of range\\n"""		8449866	1					
ANR	8450257	PrimaryExpression	"""data out of range\\n"""		8449866	0					
ANR	8450258	ReturnStatement	return - 1 ;	446:16:9844:9853	8449866	1	True				
ANR	8450259	UnaryOperationExpression	- 1		8449866	0					
ANR	8450260	UnaryOperator	-		8449866	0					
ANR	8450261	PrimaryExpression	1		8449866	1					
ANR	8450262	ExpressionStatement	"mydata = gs_alloc_bytes ( pfont -> memory , pstr -> size + 1 , ""glyph to name"" )"	451:12:10080:10198	8449866	7	True				
ANR	8450263	AssignmentExpression	"mydata = gs_alloc_bytes ( pfont -> memory , pstr -> size + 1 , ""glyph to name"" )"		8449866	0		=			
ANR	8450264	Identifier	mydata		8449866	0					
ANR	8450265	CallExpression	"gs_alloc_bytes ( pfont -> memory , pstr -> size + 1 , ""glyph to name"" )"		8449866	1					
ANR	8450266	Callee	gs_alloc_bytes		8449866	0					
ANR	8450267	Identifier	gs_alloc_bytes		8449866	0					
ANR	8450268	ArgumentList	pfont -> memory		8449866	1					
ANR	8450269	Argument	pfont -> memory		8449866	0					
ANR	8450270	PtrMemberAccess	pfont -> memory		8449866	0					
ANR	8450271	Identifier	pfont		8449866	0					
ANR	8450272	Identifier	memory		8449866	1					
ANR	8450273	Argument	pstr -> size + 1		8449866	1					
ANR	8450274	AdditiveExpression	pstr -> size + 1		8449866	0		+			
ANR	8450275	PtrMemberAccess	pstr -> size		8449866	0					
ANR	8450276	Identifier	pstr		8449866	0					
ANR	8450277	Identifier	size		8449866	1					
ANR	8450278	PrimaryExpression	1		8449866	1					
ANR	8450279	Argument	"""glyph to name"""		8449866	2					
ANR	8450280	PrimaryExpression	"""glyph to name"""		8449866	0					
ANR	8450281	IfStatement	if ( mydata == 0 )		8449866	8					
ANR	8450282	Condition	mydata == 0	454:16:10216:10226	8449866	0	True				
ANR	8450283	EqualityExpression	mydata == 0		8449866	0		==			
ANR	8450284	Identifier	mydata		8449866	0					
ANR	8450285	PrimaryExpression	0		8449866	1					
ANR	8450286	ReturnStatement	return - 1 ;	455:16:10245:10254	8449866	1	True				
ANR	8450287	UnaryOperationExpression	- 1		8449866	0					
ANR	8450288	UnaryOperator	-		8449866	0					
ANR	8450289	PrimaryExpression	1		8449866	1					
ANR	8450290	ExpressionStatement	"memcpy ( mydata , pascal_stringp + 1 , pstr -> size )"	456:12:10268:10314	8449866	9	True				
ANR	8450291	CallExpression	"memcpy ( mydata , pascal_stringp + 1 , pstr -> size )"		8449866	0					
ANR	8450292	Callee	memcpy		8449866	0					
ANR	8450293	Identifier	memcpy		8449866	0					
ANR	8450294	ArgumentList	mydata		8449866	1					
ANR	8450295	Argument	mydata		8449866	0					
ANR	8450296	Identifier	mydata		8449866	0					
ANR	8450297	Argument	pascal_stringp + 1		8449866	1					
ANR	8450298	AdditiveExpression	pascal_stringp + 1		8449866	0		+			
ANR	8450299	Identifier	pascal_stringp		8449866	0					
ANR	8450300	PrimaryExpression	1		8449866	1					
ANR	8450301	Argument	pstr -> size		8449866	2					
ANR	8450302	PtrMemberAccess	pstr -> size		8449866	0					
ANR	8450303	Identifier	pstr		8449866	0					
ANR	8450304	Identifier	size		8449866	1					
ANR	8450305	ExpressionStatement	pstr -> data = mydata	457:12:10328:10347	8449866	10	True				
ANR	8450306	AssignmentExpression	pstr -> data = mydata		8449866	0		=			
ANR	8450307	PtrMemberAccess	pstr -> data		8449866	0					
ANR	8450308	Identifier	pstr		8449866	0					
ANR	8450309	Identifier	data		8449866	1					
ANR	8450310	Identifier	mydata		8449866	1					
ANR	8450311	ReturnStatement	return 0 ;	458:12:10361:10369	8449866	11	True				
ANR	8450312	PrimaryExpression	0		8449866	0					
ANR	8450313	ReturnStatement	return 0 ;	461:4:10391:10399	8449866	8	True				
ANR	8450314	PrimaryExpression	0		8449866	0					
ANR	8450315	ReturnType	static int		8449866	1					
ANR	8450316	Identifier	pl_glyph_name		8449866	2					
ANR	8450317	ParameterList	"gs_font * pfont , gs_glyph glyph , gs_const_string * pstr"		8449866	3					
ANR	8450318	Parameter	gs_font * pfont	358:14:6539:6553	8449866	0	True				
ANR	8450319	ParameterType	gs_font *		8449866	0					
ANR	8450320	Identifier	pfont		8449866	1					
ANR	8450321	Parameter	gs_glyph glyph	358:31:6556:6569	8449866	1	True				
ANR	8450322	ParameterType	gs_glyph		8449866	0					
ANR	8450323	Identifier	glyph		8449866	1					
ANR	8450324	Parameter	gs_const_string * pstr	358:47:6572:6593	8449866	2	True				
ANR	8450325	ParameterType	gs_const_string *		8449866	0					
ANR	8450326	Identifier	pstr		8449866	1					
ANR	8450327	CFGEntryNode	ENTRY		8449866		True				
ANR	8450328	CFGExitNode	EXIT		8449866		True				
ANR	8450329	Symbol	table_length		8449866						
ANR	8450330	Symbol	* pascal_stringp		8449866						
ANR	8450331	Symbol	table_offset		8449866						
ANR	8450332	Symbol	* pl_mac_names		8449866						
ANR	8450333	Symbol	pfont -> memory		8449866						
ANR	8450334	Symbol	numGlyphs		8449866						
ANR	8450335	Symbol	* glyph		8449866						
ANR	8450336	Symbol	ft_TrueType		8449866						
ANR	8450337	Symbol	tt_find_table		8449866						
ANR	8450338	Symbol	pstr -> data		8449866						
ANR	8450339	Symbol	postp		8449866						
ANR	8450340	Symbol	mydata		8449866						
ANR	8450341	Symbol	( ( gs_font_type42 * ) pfont ) -> data		8449866						
ANR	8450342	Symbol	strlen		8449866						
ANR	8450343	Symbol	pfont -> FontType		8449866						
ANR	8450344	Symbol	* pstr		8449866						
ANR	8450345	Symbol	u32		8449866						
ANR	8450346	Symbol	u16		8449866						
ANR	8450347	Symbol	pl_mac_names		8449866						
ANR	8450348	Symbol	* glyph_name_index		8449866						
ANR	8450349	Symbol	gs_alloc_bytes		8449866						
ANR	8450350	Symbol	pfont		8449866						
ANR	8450351	Symbol	format		8449866						
ANR	8450352	Symbol	pstr -> size		8449866						
ANR	8450353	Symbol	pascal_stringp		8449866						
ANR	8450354	Symbol	glyph_name_index		8449866						
ANR	8450355	Symbol	& postp		8449866						
ANR	8450356	Symbol	glyph		8449866						
ANR	8450357	Symbol	* pfont		8449866						
ANR	8450358	Symbol	pstr		8449866						
ANR	8450359	Symbol	& table_length		8449866						
ANR	8450360	Symbol	GS_MIN_GLYPH_INDEX		8449866						
ANR	8450361	Function	pl_decode_glyph	465:0:10445:10711							
ANR	8450362	FunctionDef	"pl_decode_glyph (gs_font * font , gs_glyph glyph , int ch , ushort * unicode_return , unsigned int length)"		8450361	0					
ANR	8450363	CompoundStatement		467:0:10557:10711	8450361	0					
ANR	8450364	IdentifierDeclStatement	pl_font_t * plfont = ( pl_font_t * ) font -> client_data ;	468:4:10563:10614	8450361	0	True				
ANR	8450365	IdentifierDecl	* plfont = ( pl_font_t * ) font -> client_data		8450361	0					
ANR	8450366	IdentifierDeclType	pl_font_t *		8450361	0					
ANR	8450367	Identifier	plfont		8450361	1					
ANR	8450368	AssignmentExpression	* plfont = ( pl_font_t * ) font -> client_data		8450361	2		=			
ANR	8450369	Identifier	plfont		8450361	0					
ANR	8450370	CastExpression	( pl_font_t * ) font -> client_data		8450361	1					
ANR	8450371	CastTarget	pl_font_t *		8450361	0					
ANR	8450372	PtrMemberAccess	font -> client_data		8450361	1					
ANR	8450373	Identifier	font		8450361	0					
ANR	8450374	Identifier	client_data		8450361	1					
ANR	8450375	IfStatement	if ( length == 0 )		8450361	1					
ANR	8450376	Condition	length == 0	470:8:10625:10635	8450361	0	True				
ANR	8450377	EqualityExpression	length == 0		8450361	0		==			
ANR	8450378	Identifier	length		8450361	0					
ANR	8450379	PrimaryExpression	0		8450361	1					
ANR	8450380	ReturnStatement	return 1 ;	471:8:10646:10654	8450361	1	True				
ANR	8450381	PrimaryExpression	1		8450361	0					
ANR	8450382	ExpressionStatement	* unicode_return = plfont -> last_char	472:4:10660:10695	8450361	2	True				
ANR	8450383	AssignmentExpression	* unicode_return = plfont -> last_char		8450361	0		=			
ANR	8450384	UnaryOperationExpression	* unicode_return		8450361	0					
ANR	8450385	UnaryOperator	*		8450361	0					
ANR	8450386	Identifier	unicode_return		8450361	1					
ANR	8450387	PtrMemberAccess	plfont -> last_char		8450361	1					
ANR	8450388	Identifier	plfont		8450361	0					
ANR	8450389	Identifier	last_char		8450361	1					
ANR	8450390	ReturnStatement	return 1 ;	473:4:10701:10709	8450361	3	True				
ANR	8450391	PrimaryExpression	1		8450361	0					
ANR	8450392	ReturnType	static int		8450361	1					
ANR	8450393	Identifier	pl_decode_glyph		8450361	2					
ANR	8450394	ParameterList	"gs_font * font , gs_glyph glyph , int ch , ushort * unicode_return , unsigned int length"		8450361	3					
ANR	8450395	Parameter	gs_font * font	466:16:10472:10485	8450361	0	True				
ANR	8450396	ParameterType	gs_font *		8450361	0					
ANR	8450397	Identifier	font		8450361	1					
ANR	8450398	Parameter	gs_glyph glyph	466:32:10488:10501	8450361	1	True				
ANR	8450399	ParameterType	gs_glyph		8450361	0					
ANR	8450400	Identifier	glyph		8450361	1					
ANR	8450401	Parameter	int ch	466:48:10504:10509	8450361	2	True				
ANR	8450402	ParameterType	int		8450361	0					
ANR	8450403	Identifier	ch		8450361	1					
ANR	8450404	Parameter	ushort * unicode_return	466:56:10512:10533	8450361	3	True				
ANR	8450405	ParameterType	ushort *		8450361	0					
ANR	8450406	Identifier	unicode_return		8450361	1					
ANR	8450407	Parameter	unsigned int length	466:80:10536:10554	8450361	4	True				
ANR	8450408	ParameterType	unsigned int		8450361	0					
ANR	8450409	Identifier	length		8450361	1					
ANR	8450410	CFGEntryNode	ENTRY		8450361		True				
ANR	8450411	CFGExitNode	EXIT		8450361		True				
ANR	8450412	Symbol	glyph		8450361						
ANR	8450413	Symbol	unicode_return		8450361						
ANR	8450414	Symbol	font -> client_data		8450361						
ANR	8450415	Symbol	* unicode_return		8450361						
ANR	8450416	Symbol	ch		8450361						
ANR	8450417	Symbol	plfont -> last_char		8450361						
ANR	8450418	Symbol	length		8450361						
ANR	8450419	Symbol	* plfont		8450361						
ANR	8450420	Symbol	plfont		8450361						
ANR	8450421	Symbol	* font		8450361						
ANR	8450422	Symbol	font		8450361						
ANR	8450423	Function	pl_font_glyph_width_cache_node_add	477:0:10766:11948							
ANR	8450424	FunctionDef	"pl_font_glyph_width_cache_node_add (pl_font_t * plfont , uint char_code , gs_point * pwidth)"		8450423	0					
ANR	8450425	CompoundStatement		480:0:10896:11948	8450423	0					
ANR	8450426	IdentifierDeclStatement	pl_glyph_width_node_t * node ;	481:4:10902:10929	8450423	0	True				
ANR	8450427	IdentifierDecl	* node		8450423	0					
ANR	8450428	IdentifierDeclType	pl_glyph_width_node_t *		8450423	0					
ANR	8450429	Identifier	node		8450423	1					
ANR	8450430	IfStatement	if ( plfont -> scaling_technology == plfst_bitmap )		8450423	1					
ANR	8450431	Condition	plfont -> scaling_technology == plfst_bitmap	484:8:10996:11037	8450423	0	True				
ANR	8450432	EqualityExpression	plfont -> scaling_technology == plfst_bitmap		8450423	0		==			
ANR	8450433	PtrMemberAccess	plfont -> scaling_technology		8450423	0					
ANR	8450434	Identifier	plfont		8450423	0					
ANR	8450435	Identifier	scaling_technology		8450423	1					
ANR	8450436	Identifier	plfst_bitmap		8450423	1					
ANR	8450437	CompoundStatement		5:52:143:143	8450423	1					
ANR	8450438	ReturnStatement	return ( 0 ) ;	485:8:11050:11059	8450423	0	True				
ANR	8450439	PrimaryExpression	0		8450423	0					
ANR	8450440	IfStatement	if ( plfont -> widths_cache_nitems > PL_MAX_WIDTHS_CACHE_NITEMS )		8450423	2					
ANR	8450441	Condition	plfont -> widths_cache_nitems > PL_MAX_WIDTHS_CACHE_NITEMS	488:8:11076:11131	8450423	0	True				
ANR	8450442	RelationalExpression	plfont -> widths_cache_nitems > PL_MAX_WIDTHS_CACHE_NITEMS		8450423	0		>			
ANR	8450443	PtrMemberAccess	plfont -> widths_cache_nitems		8450423	0					
ANR	8450444	Identifier	plfont		8450423	0					
ANR	8450445	Identifier	widths_cache_nitems		8450423	1					
ANR	8450446	Identifier	PL_MAX_WIDTHS_CACHE_NITEMS		8450423	1					
ANR	8450447	CompoundStatement		9:66:237:237	8450423	1					
ANR	8450448	ExpressionStatement	pl_font_glyph_width_cache_remove_nodes ( plfont )	489:8:11144:11190	8450423	0	True				
ANR	8450449	CallExpression	pl_font_glyph_width_cache_remove_nodes ( plfont )		8450423	0					
ANR	8450450	Callee	pl_font_glyph_width_cache_remove_nodes		8450423	0					
ANR	8450451	Identifier	pl_font_glyph_width_cache_remove_nodes		8450423	0					
ANR	8450452	ArgumentList	plfont		8450423	1					
ANR	8450453	Argument	plfont		8450423	0					
ANR	8450454	Identifier	plfont		8450423	0					
ANR	8450455	ExpressionStatement	"node = ( pl_glyph_width_node_t * ) gs_alloc_bytes ( plfont -> pfont -> memory , sizeof ( pl_glyph_width_node_t ) , ""pl_glyph_width_cache_node_add"" )"	492:4:11207:11489	8450423	3	True				
ANR	8450456	AssignmentExpression	"node = ( pl_glyph_width_node_t * ) gs_alloc_bytes ( plfont -> pfont -> memory , sizeof ( pl_glyph_width_node_t ) , ""pl_glyph_width_cache_node_add"" )"		8450423	0		=			
ANR	8450457	Identifier	node		8450423	0					
ANR	8450458	CastExpression	"( pl_glyph_width_node_t * ) gs_alloc_bytes ( plfont -> pfont -> memory , sizeof ( pl_glyph_width_node_t ) , ""pl_glyph_width_cache_node_add"" )"		8450423	1					
ANR	8450459	CastTarget	pl_glyph_width_node_t *		8450423	0					
ANR	8450460	CallExpression	"gs_alloc_bytes ( plfont -> pfont -> memory , sizeof ( pl_glyph_width_node_t ) , ""pl_glyph_width_cache_node_add"" )"		8450423	1					
ANR	8450461	Callee	gs_alloc_bytes		8450423	0					
ANR	8450462	Identifier	gs_alloc_bytes		8450423	0					
ANR	8450463	ArgumentList	plfont -> pfont -> memory		8450423	1					
ANR	8450464	Argument	plfont -> pfont -> memory		8450423	0					
ANR	8450465	PtrMemberAccess	plfont -> pfont -> memory		8450423	0					
ANR	8450466	PtrMemberAccess	plfont -> pfont		8450423	0					
ANR	8450467	Identifier	plfont		8450423	0					
ANR	8450468	Identifier	pfont		8450423	1					
ANR	8450469	Identifier	memory		8450423	1					
ANR	8450470	Argument	sizeof ( pl_glyph_width_node_t )		8450423	1					
ANR	8450471	SizeofExpression	sizeof ( pl_glyph_width_node_t )		8450423	0					
ANR	8450472	Sizeof	sizeof		8450423	0					
ANR	8450473	SizeofOperand	pl_glyph_width_node_t		8450423	1					
ANR	8450474	Argument	"""pl_glyph_width_cache_node_add"""		8450423	2					
ANR	8450475	PrimaryExpression	"""pl_glyph_width_cache_node_add"""		8450423	0					
ANR	8450476	IfStatement	if ( node == NULL )		8450423	4					
ANR	8450477	Condition	node == NULL	497:8:11500:11511	8450423	0	True				
ANR	8450478	EqualityExpression	node == NULL		8450423	0		==			
ANR	8450479	Identifier	node		8450423	0					
ANR	8450480	Identifier	NULL		8450423	1					
ANR	8450481	CompoundStatement		18:22:617:617	8450423	1					
ANR	8450482	ExpressionStatement	pl_font_glyph_width_cache_remove_nodes ( plfont )	501:8:11652:11698	8450423	0	True				
ANR	8450483	CallExpression	pl_font_glyph_width_cache_remove_nodes ( plfont )		8450423	0					
ANR	8450484	Callee	pl_font_glyph_width_cache_remove_nodes		8450423	0					
ANR	8450485	Identifier	pl_font_glyph_width_cache_remove_nodes		8450423	0					
ANR	8450486	ArgumentList	plfont		8450423	1					
ANR	8450487	Argument	plfont		8450423	0					
ANR	8450488	Identifier	plfont		8450423	0					
ANR	8450489	ReturnStatement	return - 1 ;	502:8:11708:11717	8450423	1	True				
ANR	8450490	UnaryOperationExpression	- 1		8450423	0					
ANR	8450491	UnaryOperator	-		8450423	0					
ANR	8450492	PrimaryExpression	1		8450423	1					
ANR	8450493	ExpressionStatement	node -> next = plfont -> widths_cache	505:4:11730:11763	8450423	5	True				
ANR	8450494	AssignmentExpression	node -> next = plfont -> widths_cache		8450423	0		=			
ANR	8450495	PtrMemberAccess	node -> next		8450423	0					
ANR	8450496	Identifier	node		8450423	0					
ANR	8450497	Identifier	next		8450423	1					
ANR	8450498	PtrMemberAccess	plfont -> widths_cache		8450423	1					
ANR	8450499	Identifier	plfont		8450423	0					
ANR	8450500	Identifier	widths_cache		8450423	1					
ANR	8450501	ExpressionStatement	plfont -> widths_cache = node	506:4:11769:11796	8450423	6	True				
ANR	8450502	AssignmentExpression	plfont -> widths_cache = node		8450423	0		=			
ANR	8450503	PtrMemberAccess	plfont -> widths_cache		8450423	0					
ANR	8450504	Identifier	plfont		8450423	0					
ANR	8450505	Identifier	widths_cache		8450423	1					
ANR	8450506	Identifier	node		8450423	1					
ANR	8450507	ExpressionStatement	plfont -> widths_cache_nitems ++	507:4:11802:11831	8450423	7	True				
ANR	8450508	PostIncDecOperationExpression	plfont -> widths_cache_nitems ++		8450423	0					
ANR	8450509	PtrMemberAccess	plfont -> widths_cache_nitems		8450423	0					
ANR	8450510	Identifier	plfont		8450423	0					
ANR	8450511	Identifier	widths_cache_nitems		8450423	1					
ANR	8450512	IncDec	++		8450423	1					
ANR	8450513	ExpressionStatement	node -> char_code = char_code	509:4:11838:11865	8450423	8	True				
ANR	8450514	AssignmentExpression	node -> char_code = char_code		8450423	0		=			
ANR	8450515	PtrMemberAccess	node -> char_code		8450423	0					
ANR	8450516	Identifier	node		8450423	0					
ANR	8450517	Identifier	char_code		8450423	1					
ANR	8450518	Identifier	char_code		8450423	1					
ANR	8450519	ExpressionStatement	node -> font_id = plfont -> pfont -> id	510:4:11871:11904	8450423	9	True				
ANR	8450520	AssignmentExpression	node -> font_id = plfont -> pfont -> id		8450423	0		=			
ANR	8450521	PtrMemberAccess	node -> font_id		8450423	0					
ANR	8450522	Identifier	node		8450423	0					
ANR	8450523	Identifier	font_id		8450423	1					
ANR	8450524	PtrMemberAccess	plfont -> pfont -> id		8450423	1					
ANR	8450525	PtrMemberAccess	plfont -> pfont		8450423	0					
ANR	8450526	Identifier	plfont		8450423	0					
ANR	8450527	Identifier	pfont		8450423	1					
ANR	8450528	Identifier	id		8450423	1					
ANR	8450529	ExpressionStatement	node -> width = * pwidth	511:4:11910:11931	8450423	10	True				
ANR	8450530	AssignmentExpression	node -> width = * pwidth		8450423	0		=			
ANR	8450531	PtrMemberAccess	node -> width		8450423	0					
ANR	8450532	Identifier	node		8450423	0					
ANR	8450533	Identifier	width		8450423	1					
ANR	8450534	UnaryOperationExpression	* pwidth		8450423	1					
ANR	8450535	UnaryOperator	*		8450423	0					
ANR	8450536	Identifier	pwidth		8450423	1					
ANR	8450537	ReturnStatement	return 0 ;	513:4:11938:11946	8450423	11	True				
ANR	8450538	PrimaryExpression	0		8450423	0					
ANR	8450539	ReturnType	static int		8450423	1					
ANR	8450540	Identifier	pl_font_glyph_width_cache_node_add		8450423	2					
ANR	8450541	ParameterList	"pl_font_t * plfont , uint char_code , gs_point * pwidth"		8450423	3					
ANR	8450542	Parameter	pl_font_t * plfont	478:35:10812:10828	8450423	0	True				
ANR	8450543	ParameterType	pl_font_t *		8450423	0					
ANR	8450544	Identifier	plfont		8450423	1					
ANR	8450545	Parameter	uint char_code	479:30:10861:10874	8450423	1	True				
ANR	8450546	ParameterType	uint		8450423	0					
ANR	8450547	Identifier	char_code		8450423	1					
ANR	8450548	Parameter	gs_point * pwidth	479:46:10877:10893	8450423	2	True				
ANR	8450549	ParameterType	gs_point *		8450423	0					
ANR	8450550	Identifier	pwidth		8450423	1					
ANR	8450551	CFGEntryNode	ENTRY		8450423		True				
ANR	8450552	CFGExitNode	EXIT		8450423		True				
ANR	8450553	Symbol	plfont -> scaling_technology		8450423						
ANR	8450554	Symbol	gs_alloc_bytes		8450423						
ANR	8450555	Symbol	node -> font_id		8450423						
ANR	8450556	Symbol	plfont -> widths_cache_nitems		8450423						
ANR	8450557	Symbol	NULL		8450423						
ANR	8450558	Symbol	plfont -> widths_cache		8450423						
ANR	8450559	Symbol	* plfont -> pfont		8450423						
ANR	8450560	Symbol	* * plfont		8450423						
ANR	8450561	Symbol	plfst_bitmap		8450423						
ANR	8450562	Symbol	plfont -> pfont -> memory		8450423						
ANR	8450563	Symbol	plfont -> pfont -> id		8450423						
ANR	8450564	Symbol	char_code		8450423						
ANR	8450565	Symbol	pwidth		8450423						
ANR	8450566	Symbol	plfont		8450423						
ANR	8450567	Symbol	node -> next		8450423						
ANR	8450568	Symbol	node		8450423						
ANR	8450569	Symbol	plfont -> pfont		8450423						
ANR	8450570	Symbol	node -> width		8450423						
ANR	8450571	Symbol	* plfont		8450423						
ANR	8450572	Symbol	* pwidth		8450423						
ANR	8450573	Symbol	* node		8450423						
ANR	8450574	Symbol	node -> char_code		8450423						
ANR	8450575	Symbol	PL_MAX_WIDTHS_CACHE_NITEMS		8450423						
ANR	8450576	Function	pl_font_glyph_width_cache_node_search	517:0:11952:12349							
ANR	8450577	FunctionDef	"pl_font_glyph_width_cache_node_search (const pl_font_t * plfont , uint char_code , gs_point * pwidth)"		8450576	0					
ANR	8450578	CompoundStatement		520:0:12094:12349	8450576	0					
ANR	8450579	IdentifierDeclStatement	pl_glyph_width_node_t * current = plfont -> widths_cache ;	521:4:12100:12153	8450576	0	True				
ANR	8450580	IdentifierDecl	* current = plfont -> widths_cache		8450576	0					
ANR	8450581	IdentifierDeclType	pl_glyph_width_node_t *		8450576	0					
ANR	8450582	Identifier	current		8450576	1					
ANR	8450583	AssignmentExpression	* current = plfont -> widths_cache		8450576	2		=			
ANR	8450584	Identifier	current		8450576	0					
ANR	8450585	PtrMemberAccess	plfont -> widths_cache		8450576	1					
ANR	8450586	Identifier	plfont		8450576	0					
ANR	8450587	Identifier	widths_cache		8450576	1					
ANR	8450588	WhileStatement	while ( current )		8450576	1					
ANR	8450589	Condition	current	523:11:12167:12173	8450576	0	True				
ANR	8450590	Identifier	current		8450576	0					
ANR	8450591	CompoundStatement		4:20:81:81	8450576	1					
ANR	8450592	IfStatement	if ( char_code == current -> char_code )		8450576	0					
ANR	8450593	Condition	char_code == current -> char_code	524:12:12190:12220	8450576	0	True				
ANR	8450594	EqualityExpression	char_code == current -> char_code		8450576	0		==			
ANR	8450595	Identifier	char_code		8450576	0					
ANR	8450596	PtrMemberAccess	current -> char_code		8450576	1					
ANR	8450597	Identifier	current		8450576	0					
ANR	8450598	Identifier	char_code		8450576	1					
ANR	8450599	CompoundStatement		5:45:128:128	8450576	1					
ANR	8450600	ExpressionStatement	* pwidth = current -> width	525:12:12237:12261	8450576	0	True				
ANR	8450601	AssignmentExpression	* pwidth = current -> width		8450576	0		=			
ANR	8450602	UnaryOperationExpression	* pwidth		8450576	0					
ANR	8450603	UnaryOperator	*		8450576	0					
ANR	8450604	Identifier	pwidth		8450576	1					
ANR	8450605	PtrMemberAccess	current -> width		8450576	1					
ANR	8450606	Identifier	current		8450576	0					
ANR	8450607	Identifier	width		8450576	1					
ANR	8450608	ReturnStatement	return 0 ;	526:12:12275:12283	8450576	1	True				
ANR	8450609	PrimaryExpression	0		8450576	0					
ANR	8450610	ExpressionStatement	current = current -> next	528:8:12303:12326	8450576	1	True				
ANR	8450611	AssignmentExpression	current = current -> next		8450576	0		=			
ANR	8450612	Identifier	current		8450576	0					
ANR	8450613	PtrMemberAccess	current -> next		8450576	1					
ANR	8450614	Identifier	current		8450576	0					
ANR	8450615	Identifier	next		8450576	1					
ANR	8450616	ReturnStatement	return - 1 ;	530:4:12338:12347	8450576	2	True				
ANR	8450617	UnaryOperationExpression	- 1		8450576	0					
ANR	8450618	UnaryOperator	-		8450576	0					
ANR	8450619	PrimaryExpression	1		8450576	1					
ANR	8450620	ReturnType	static int		8450576	1					
ANR	8450621	Identifier	pl_font_glyph_width_cache_node_search		8450576	2					
ANR	8450622	ParameterList	"const pl_font_t * plfont , uint char_code , gs_point * pwidth"		8450576	3					
ANR	8450623	Parameter	const pl_font_t * plfont	518:38:12001:12023	8450576	0	True				
ANR	8450624	ParameterType	const pl_font_t *		8450576	0					
ANR	8450625	Identifier	plfont		8450576	1					
ANR	8450626	Parameter	uint char_code	518:63:12026:12039	8450576	1	True				
ANR	8450627	ParameterType	uint		8450576	0					
ANR	8450628	Identifier	char_code		8450576	1					
ANR	8450629	Parameter	gs_point * pwidth	519:33:12075:12091	8450576	2	True				
ANR	8450630	ParameterType	gs_point *		8450576	0					
ANR	8450631	Identifier	pwidth		8450576	1					
ANR	8450632	CFGEntryNode	ENTRY		8450576		True				
ANR	8450633	CFGExitNode	EXIT		8450576		True				
ANR	8450634	Symbol	current -> char_code		8450576						
ANR	8450635	Symbol	current		8450576						
ANR	8450636	Symbol	plfont -> widths_cache		8450576						
ANR	8450637	Symbol	current -> width		8450576						
ANR	8450638	Symbol	current -> next		8450576						
ANR	8450639	Symbol	* plfont		8450576						
ANR	8450640	Symbol	* current		8450576						
ANR	8450641	Symbol	char_code		8450576						
ANR	8450642	Symbol	* pwidth		8450576						
ANR	8450643	Symbol	pwidth		8450576						
ANR	8450644	Symbol	plfont		8450576						
ANR	8450645	Function	pl_font_glyph_width_cache_remove_nodes	537:0:12434:12833							
ANR	8450646	FunctionDef	pl_font_glyph_width_cache_remove_nodes (pl_font_t * plfont)		8450645	0					
ANR	8450647	CompoundStatement		539:0:12497:12833	8450645	0					
ANR	8450648	IdentifierDeclStatement	pl_glyph_width_node_t * current = plfont -> widths_cache ;	540:4:12503:12556	8450645	0	True				
ANR	8450649	IdentifierDecl	* current = plfont -> widths_cache		8450645	0					
ANR	8450650	IdentifierDeclType	pl_glyph_width_node_t *		8450645	0					
ANR	8450651	Identifier	current		8450645	1					
ANR	8450652	AssignmentExpression	* current = plfont -> widths_cache		8450645	2		=			
ANR	8450653	Identifier	current		8450645	0					
ANR	8450654	PtrMemberAccess	plfont -> widths_cache		8450645	1					
ANR	8450655	Identifier	plfont		8450645	0					
ANR	8450656	Identifier	widths_cache		8450645	1					
ANR	8450657	WhileStatement	while ( current )		8450645	1					
ANR	8450658	Condition	current	542:11:12570:12576	8450645	0	True				
ANR	8450659	Identifier	current		8450645	0					
ANR	8450660	CompoundStatement		5:8:91:134	8450645	1					
ANR	8450661	IdentifierDeclStatement	pl_glyph_width_node_t * next = current -> next ;	543:8:12589:12632	8450645	0	True				
ANR	8450662	IdentifierDecl	* next = current -> next		8450645	0					
ANR	8450663	IdentifierDeclType	pl_glyph_width_node_t *		8450645	0					
ANR	8450664	Identifier	next		8450645	1					
ANR	8450665	AssignmentExpression	* next = current -> next		8450645	2		=			
ANR	8450666	Identifier	next		8450645	0					
ANR	8450667	PtrMemberAccess	current -> next		8450645	1					
ANR	8450668	Identifier	current		8450645	0					
ANR	8450669	Identifier	next		8450645	1					
ANR	8450670	ExpressionStatement	"gs_free_object ( plfont -> pfont -> memory , current , ""pl_glyph_width_list_remove"" )"	545:8:12643:12719	8450645	1	True				
ANR	8450671	CallExpression	"gs_free_object ( plfont -> pfont -> memory , current , ""pl_glyph_width_list_remove"" )"		8450645	0					
ANR	8450672	Callee	gs_free_object		8450645	0					
ANR	8450673	Identifier	gs_free_object		8450645	0					
ANR	8450674	ArgumentList	plfont -> pfont -> memory		8450645	1					
ANR	8450675	Argument	plfont -> pfont -> memory		8450645	0					
ANR	8450676	PtrMemberAccess	plfont -> pfont -> memory		8450645	0					
ANR	8450677	PtrMemberAccess	plfont -> pfont		8450645	0					
ANR	8450678	Identifier	plfont		8450645	0					
ANR	8450679	Identifier	pfont		8450645	1					
ANR	8450680	Identifier	memory		8450645	1					
ANR	8450681	Argument	current		8450645	1					
ANR	8450682	Identifier	current		8450645	0					
ANR	8450683	Argument	"""pl_glyph_width_list_remove"""		8450645	2					
ANR	8450684	PrimaryExpression	"""pl_glyph_width_list_remove"""		8450645	0					
ANR	8450685	ExpressionStatement	current = next	546:8:12729:12743	8450645	2	True				
ANR	8450686	AssignmentExpression	current = next		8450645	0		=			
ANR	8450687	Identifier	current		8450645	0					
ANR	8450688	Identifier	next		8450645	1					
ANR	8450689	ExpressionStatement	plfont -> widths_cache = NULL	548:4:12755:12782	8450645	2	True				
ANR	8450690	AssignmentExpression	plfont -> widths_cache = NULL		8450645	0		=			
ANR	8450691	PtrMemberAccess	plfont -> widths_cache		8450645	0					
ANR	8450692	Identifier	plfont		8450645	0					
ANR	8450693	Identifier	widths_cache		8450645	1					
ANR	8450694	Identifier	NULL		8450645	1					
ANR	8450695	ExpressionStatement	plfont -> widths_cache_nitems = 0	549:4:12788:12819	8450645	3	True				
ANR	8450696	AssignmentExpression	plfont -> widths_cache_nitems = 0		8450645	0		=			
ANR	8450697	PtrMemberAccess	plfont -> widths_cache_nitems		8450645	0					
ANR	8450698	Identifier	plfont		8450645	0					
ANR	8450699	Identifier	widths_cache_nitems		8450645	1					
ANR	8450700	PrimaryExpression	0		8450645	1					
ANR	8450701	ReturnStatement	return ;	550:4:12825:12831	8450645	4	True				
ANR	8450702	ReturnType	void		8450645	1					
ANR	8450703	Identifier	pl_font_glyph_width_cache_remove_nodes		8450645	2					
ANR	8450704	ParameterList	pl_font_t * plfont		8450645	3					
ANR	8450705	Parameter	pl_font_t * plfont	538:39:12478:12494	8450645	0	True				
ANR	8450706	ParameterType	pl_font_t *		8450645	0					
ANR	8450707	Identifier	plfont		8450645	1					
ANR	8450708	CFGEntryNode	ENTRY		8450645		True				
ANR	8450709	CFGExitNode	EXIT		8450645		True				
ANR	8450710	Symbol	next		8450645						
ANR	8450711	Symbol	plfont -> widths_cache		8450645						
ANR	8450712	Symbol	current -> next		8450645						
ANR	8450713	Symbol	NULL		8450645						
ANR	8450714	Symbol	plfont -> widths_cache_nitems		8450645						
ANR	8450715	Symbol	* * plfont		8450645						
ANR	8450716	Symbol	* plfont -> pfont		8450645						
ANR	8450717	Symbol	plfont -> pfont -> memory		8450645						
ANR	8450718	Symbol	* current		8450645						
ANR	8450719	Symbol	plfont		8450645						
ANR	8450720	Symbol	current		8450645						
ANR	8450721	Symbol	plfont -> pfont		8450645						
ANR	8450722	Symbol	* plfont		8450645						
ANR	8450723	Function	pl_font_char_width	553:0:12836:13453							
ANR	8450724	FunctionDef	"pl_font_char_width (const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth)"		8450723	0					
ANR	8450725	CompoundStatement		556:0:12959:13453	8450723	0					
ANR	8450726	IdentifierDeclStatement	int code = 0 ;	557:4:12965:12977	8450723	0	True				
ANR	8450727	IdentifierDecl	code = 0		8450723	0					
ANR	8450728	IdentifierDeclType	int		8450723	0					
ANR	8450729	Identifier	code		8450723	1					
ANR	8450730	AssignmentExpression	code = 0		8450723	2		=			
ANR	8450731	Identifier	code		8450723	0					
ANR	8450732	PrimaryExpression	0		8450723	1					
ANR	8450733	IfStatement	"if ( pl_font_glyph_width_cache_node_search ( plfont , char_code , pwidth ) >= 0 )"		8450723	1					
ANR	8450734	Condition	"pl_font_glyph_width_cache_node_search ( plfont , char_code , pwidth ) >= 0"	559:8:12988:13056	8450723	0	True				
ANR	8450735	RelationalExpression	"pl_font_glyph_width_cache_node_search ( plfont , char_code , pwidth ) >= 0"		8450723	0		>=			
ANR	8450736	CallExpression	"pl_font_glyph_width_cache_node_search ( plfont , char_code , pwidth )"		8450723	0					
ANR	8450737	Callee	pl_font_glyph_width_cache_node_search		8450723	0					
ANR	8450738	Identifier	pl_font_glyph_width_cache_node_search		8450723	0					
ANR	8450739	ArgumentList	plfont		8450723	1					
ANR	8450740	Argument	plfont		8450723	0					
ANR	8450741	Identifier	plfont		8450723	0					
ANR	8450742	Argument	char_code		8450723	1					
ANR	8450743	Identifier	char_code		8450723	0					
ANR	8450744	Argument	pwidth		8450723	2					
ANR	8450745	Identifier	pwidth		8450723	0					
ANR	8450746	PrimaryExpression	0		8450723	1					
ANR	8450747	CompoundStatement		4:79:99:99	8450723	1					
ANR	8450748	ReturnStatement	return ( code ) ;	560:8:13069:13081	8450723	0	True				
ANR	8450749	Identifier	code		8450723	0					
ANR	8450750	IfStatement	"if ( ( code = ( * ( plfont ) -> char_width ) ( plfont , pgs , char_code , pwidth ) ) == 0 )"		8450723	2					
ANR	8450751	Condition	"( code = ( * ( plfont ) -> char_width ) ( plfont , pgs , char_code , pwidth ) ) == 0"	563:8:13102:13171	8450723	0	True				
ANR	8450752	EqualityExpression	"( code = ( * ( plfont ) -> char_width ) ( plfont , pgs , char_code , pwidth ) ) == 0"		8450723	0		==			
ANR	8450753	AssignmentExpression	"code = ( * ( plfont ) -> char_width ) ( plfont , pgs , char_code , pwidth )"		8450723	0		=			
ANR	8450754	Identifier	code		8450723	0					
ANR	8450755	CallExpression	"( * ( plfont ) -> char_width ) ( plfont , pgs , char_code , pwidth )"		8450723	1					
ANR	8450756	Callee	* ( plfont ) -> char_width		8450723	0					
ANR	8450757	UnaryOperationExpression	* ( plfont ) -> char_width		8450723	0					
ANR	8450758	UnaryOperator	*		8450723	0					
ANR	8450759	PtrMemberAccess	( plfont ) -> char_width		8450723	1					
ANR	8450760	Identifier	plfont		8450723	0					
ANR	8450761	Identifier	char_width		8450723	1					
ANR	8450762	ArgumentList	plfont		8450723	1					
ANR	8450763	Argument	plfont		8450723	0					
ANR	8450764	Identifier	plfont		8450723	0					
ANR	8450765	Argument	pgs		8450723	1					
ANR	8450766	Identifier	pgs		8450723	0					
ANR	8450767	Argument	char_code		8450723	2					
ANR	8450768	Identifier	char_code		8450723	0					
ANR	8450769	Argument	pwidth		8450723	3					
ANR	8450770	Identifier	pwidth		8450723	0					
ANR	8450771	PrimaryExpression	0		8450723	1					
ANR	8450772	CompoundStatement		8:80:214:214	8450723	1					
ANR	8450773	ExpressionStatement	"( void ) pl_font_glyph_width_cache_node_add ( ( pl_font_t * ) plfont , char_code , pwidth )"	568:8:13348:13428	8450723	0	True				
ANR	8450774	CastExpression	"( void ) pl_font_glyph_width_cache_node_add ( ( pl_font_t * ) plfont , char_code , pwidth )"		8450723	0					
ANR	8450775	CastTarget	void		8450723	0					
ANR	8450776	CallExpression	"pl_font_glyph_width_cache_node_add ( ( pl_font_t * ) plfont , char_code , pwidth )"		8450723	1					
ANR	8450777	Callee	pl_font_glyph_width_cache_node_add		8450723	0					
ANR	8450778	Identifier	pl_font_glyph_width_cache_node_add		8450723	0					
ANR	8450779	ArgumentList	( pl_font_t * ) plfont		8450723	1					
ANR	8450780	Argument	( pl_font_t * ) plfont		8450723	0					
ANR	8450781	CastExpression	( pl_font_t * ) plfont		8450723	0					
ANR	8450782	CastTarget	pl_font_t *		8450723	0					
ANR	8450783	Identifier	plfont		8450723	1					
ANR	8450784	Argument	char_code		8450723	1					
ANR	8450785	Identifier	char_code		8450723	0					
ANR	8450786	Argument	pwidth		8450723	2					
ANR	8450787	Identifier	pwidth		8450723	0					
ANR	8450788	ReturnStatement	return code ;	570:4:13440:13451	8450723	3	True				
ANR	8450789	Identifier	code		8450723	0					
ANR	8450790	ReturnType	int		8450723	1					
ANR	8450791	Identifier	pl_font_char_width		8450723	2					
ANR	8450792	ParameterList	"const pl_font_t * plfont , const void * pgs , gs_char char_code , gs_point * pwidth"		8450723	3					
ANR	8450793	Parameter	const pl_font_t * plfont	554:19:12859:12882	8450723	0	True				
ANR	8450794	ParameterType	const pl_font_t *		8450723	0					
ANR	8450795	Identifier	plfont		8450723	1					
ANR	8450796	Parameter	const void * pgs	554:45:12885:12899	8450723	1	True				
ANR	8450797	ParameterType	const void *		8450723	0					
ANR	8450798	Identifier	pgs		8450723	1					
ANR	8450799	Parameter	gs_char char_code	555:19:12921:12937	8450723	2	True				
ANR	8450800	ParameterType	gs_char		8450723	0					
ANR	8450801	Identifier	char_code		8450723	1					
ANR	8450802	Parameter	gs_point * pwidth	555:38:12940:12956	8450723	3	True				
ANR	8450803	ParameterType	gs_point *		8450723	0					
ANR	8450804	Identifier	pwidth		8450723	1					
ANR	8450805	CFGEntryNode	ENTRY		8450723		True				
ANR	8450806	CFGExitNode	EXIT		8450723		True				
ANR	8450807	Symbol	code		8450723						
ANR	8450808	Symbol	* * plfont		8450723						
ANR	8450809	Symbol	pl_font_glyph_width_cache_node_search		8450723						
ANR	8450810	Symbol	* plfont		8450723						
ANR	8450811	Symbol	char_code		8450723						
ANR	8450812	Symbol	pwidth		8450723						
ANR	8450813	Symbol	( plfont ) -> char_width		8450723						
ANR	8450814	Symbol	plfont		8450723						
ANR	8450815	Symbol	pgs		8450723						
ANR	8450816	Symbol	* ( plfont ) -> char_width		8450723						
ANR	8450817	Function	pl_font_char_metrics	574:0:13478:13678							
ANR	8450818	FunctionDef	"pl_font_char_metrics (const pl_font_t * plfont , const void * pgs , gs_char char_code , float metrics [ 4 ])"		8450817	0					
ANR	8450819	CompoundStatement		577:0:13604:13678	8450817	0					
ANR	8450820	ReturnStatement	"return ( * ( plfont ) -> char_metrics ) ( plfont , pgs , char_code , metrics ) ;"	578:4:13610:13676	8450817	0	True				
ANR	8450821	CallExpression	"( * ( plfont ) -> char_metrics ) ( plfont , pgs , char_code , metrics )"		8450817	0					
ANR	8450822	Callee	* ( plfont ) -> char_metrics		8450817	0					
ANR	8450823	UnaryOperationExpression	* ( plfont ) -> char_metrics		8450817	0					
ANR	8450824	UnaryOperator	*		8450817	0					
ANR	8450825	PtrMemberAccess	( plfont ) -> char_metrics		8450817	1					
ANR	8450826	Identifier	plfont		8450817	0					
ANR	8450827	Identifier	char_metrics		8450817	1					
ANR	8450828	ArgumentList	plfont		8450817	1					
ANR	8450829	Argument	plfont		8450817	0					
ANR	8450830	Identifier	plfont		8450817	0					
ANR	8450831	Argument	pgs		8450817	1					
ANR	8450832	Identifier	pgs		8450817	0					
ANR	8450833	Argument	char_code		8450817	2					
ANR	8450834	Identifier	char_code		8450817	0					
ANR	8450835	Argument	metrics		8450817	3					
ANR	8450836	Identifier	metrics		8450817	0					
ANR	8450837	ReturnType	int		8450817	1					
ANR	8450838	Identifier	pl_font_char_metrics		8450817	2					
ANR	8450839	ParameterList	"const pl_font_t * plfont , const void * pgs , gs_char char_code , float metrics [ 4 ]"		8450817	3					
ANR	8450840	Parameter	const pl_font_t * plfont	575:21:13503:13526	8450817	0	True				
ANR	8450841	ParameterType	const pl_font_t *		8450817	0					
ANR	8450842	Identifier	plfont		8450817	1					
ANR	8450843	Parameter	const void * pgs	575:47:13529:13543	8450817	1	True				
ANR	8450844	ParameterType	const void *		8450817	0					
ANR	8450845	Identifier	pgs		8450817	1					
ANR	8450846	Parameter	gs_char char_code	576:21:13567:13583	8450817	2	True				
ANR	8450847	ParameterType	gs_char		8450817	0					
ANR	8450848	Identifier	char_code		8450817	1					
ANR	8450849	Parameter	float metrics [ 4 ]	576:40:13586:13601	8450817	3	True				
ANR	8450850	ParameterType	float [ 4 ]		8450817	0					
ANR	8450851	Identifier	metrics		8450817	1					
ANR	8450852	CFGEntryNode	ENTRY		8450817		True				
ANR	8450853	CFGExitNode	EXIT		8450817		True				
ANR	8450854	Symbol	* * plfont		8450817						
ANR	8450855	Symbol	* plfont		8450817						
ANR	8450856	Symbol	char_code		8450817						
ANR	8450857	Symbol	plfont		8450817						
ANR	8450858	Symbol	metrics		8450817						
ANR	8450859	Symbol	* ( plfont ) -> char_metrics		8450817						
ANR	8450860	Symbol	pgs		8450817						
ANR	8450861	Symbol	( plfont ) -> char_metrics		8450817						
ANR	8450862	Function	pl_alloc_font	582:0:13704:14625							
ANR	8450863	FunctionDef	"pl_alloc_font (gs_memory_t * mem , client_name_t cname)"		8450862	0					
ANR	8450864	CompoundStatement		584:0:13770:14625	8450862	0					
ANR	8450865	IdentifierDeclStatement	"pl_font_t * plfont = gs_alloc_struct ( mem , pl_font_t , & st_pl_font , cname ) ;"	585:4:13776:13847	8450862	0	True				
ANR	8450866	IdentifierDecl	"* plfont = gs_alloc_struct ( mem , pl_font_t , & st_pl_font , cname )"		8450862	0					
ANR	8450867	IdentifierDeclType	pl_font_t *		8450862	0					
ANR	8450868	Identifier	plfont		8450862	1					
ANR	8450869	AssignmentExpression	"* plfont = gs_alloc_struct ( mem , pl_font_t , & st_pl_font , cname )"		8450862	2		=			
ANR	8450870	Identifier	plfont		8450862	0					
ANR	8450871	CallExpression	"gs_alloc_struct ( mem , pl_font_t , & st_pl_font , cname )"		8450862	1					
ANR	8450872	Callee	gs_alloc_struct		8450862	0					
ANR	8450873	Identifier	gs_alloc_struct		8450862	0					
ANR	8450874	ArgumentList	mem		8450862	1					
ANR	8450875	Argument	mem		8450862	0					
ANR	8450876	Identifier	mem		8450862	0					
ANR	8450877	Argument	pl_font_t		8450862	1					
ANR	8450878	Identifier	pl_font_t		8450862	0					
ANR	8450879	Argument	& st_pl_font		8450862	2					
ANR	8450880	UnaryOperationExpression	& st_pl_font		8450862	0					
ANR	8450881	UnaryOperator	&		8450862	0					
ANR	8450882	Identifier	st_pl_font		8450862	1					
ANR	8450883	Argument	cname		8450862	3					
ANR	8450884	Identifier	cname		8450862	0					
ANR	8450885	IfStatement	if ( plfont )		8450862	1					
ANR	8450886	Condition	plfont	587:8:13858:13863	8450862	0	True				
ANR	8450887	Identifier	plfont		8450862	0					
ANR	8450888	CompoundStatement		4:16:95:95	8450862	1					
ANR	8450889	ExpressionStatement	plfont -> pfont = 0	588:8:13917:13934	8450862	0	True				
ANR	8450890	AssignmentExpression	plfont -> pfont = 0		8450862	0		=			
ANR	8450891	PtrMemberAccess	plfont -> pfont		8450862	0					
ANR	8450892	Identifier	plfont		8450862	0					
ANR	8450893	Identifier	pfont		8450862	1					
ANR	8450894	PrimaryExpression	0		8450862	1					
ANR	8450895	ExpressionStatement	plfont -> header = 0	589:8:13944:13962	8450862	1	True				
ANR	8450896	AssignmentExpression	plfont -> header = 0		8450862	0		=			
ANR	8450897	PtrMemberAccess	plfont -> header		8450862	0					
ANR	8450898	Identifier	plfont		8450862	0					
ANR	8450899	Identifier	header		8450862	1					
ANR	8450900	PrimaryExpression	0		8450862	1					
ANR	8450901	ExpressionStatement	plfont -> glyphs . table = 0	590:8:13972:13996	8450862	2	True				
ANR	8450902	AssignmentExpression	plfont -> glyphs . table = 0		8450862	0		=			
ANR	8450903	MemberAccess	plfont -> glyphs . table		8450862	0					
ANR	8450904	PtrMemberAccess	plfont -> glyphs		8450862	0					
ANR	8450905	Identifier	plfont		8450862	0					
ANR	8450906	Identifier	glyphs		8450862	1					
ANR	8450907	Identifier	table		8450862	1					
ANR	8450908	PrimaryExpression	0		8450862	1					
ANR	8450909	ExpressionStatement	plfont -> char_glyphs . table = 0	591:8:14006:14035	8450862	3	True				
ANR	8450910	AssignmentExpression	plfont -> char_glyphs . table = 0		8450862	0		=			
ANR	8450911	MemberAccess	plfont -> char_glyphs . table		8450862	0					
ANR	8450912	PtrMemberAccess	plfont -> char_glyphs		8450862	0					
ANR	8450913	Identifier	plfont		8450862	0					
ANR	8450914	Identifier	char_glyphs		8450862	1					
ANR	8450915	Identifier	table		8450862	1					
ANR	8450916	PrimaryExpression	0		8450862	1					
ANR	8450917	ExpressionStatement	plfont -> orient = 0	593:8:14086:14104	8450862	4	True				
ANR	8450918	AssignmentExpression	plfont -> orient = 0		8450862	0		=			
ANR	8450919	PtrMemberAccess	plfont -> orient		8450862	0					
ANR	8450920	Identifier	plfont		8450862	0					
ANR	8450921	Identifier	orient		8450862	1					
ANR	8450922	PrimaryExpression	0		8450862	1					
ANR	8450923	ExpressionStatement	plfont -> allow_vertical_substitutes = false	594:8:14114:14156	8450862	5	True				
ANR	8450924	AssignmentExpression	plfont -> allow_vertical_substitutes = false		8450862	0		=			
ANR	8450925	PtrMemberAccess	plfont -> allow_vertical_substitutes		8450862	0					
ANR	8450926	Identifier	plfont		8450862	0					
ANR	8450927	Identifier	allow_vertical_substitutes		8450862	1					
ANR	8450928	Identifier	false		8450862	1					
ANR	8450929	ExpressionStatement	plfont -> bold_fraction = 0	595:8:14166:14191	8450862	6	True				
ANR	8450930	AssignmentExpression	plfont -> bold_fraction = 0		8450862	0		=			
ANR	8450931	PtrMemberAccess	plfont -> bold_fraction		8450862	0					
ANR	8450932	Identifier	plfont		8450862	0					
ANR	8450933	Identifier	bold_fraction		8450862	1					
ANR	8450934	PrimaryExpression	0		8450862	1					
ANR	8450935	ExpressionStatement	plfont -> font_file = 0	596:8:14201:14222	8450862	7	True				
ANR	8450936	AssignmentExpression	plfont -> font_file = 0		8450862	0		=			
ANR	8450937	PtrMemberAccess	plfont -> font_file		8450862	0					
ANR	8450938	Identifier	plfont		8450862	0					
ANR	8450939	Identifier	font_file		8450862	1					
ANR	8450940	PrimaryExpression	0		8450862	1					
ANR	8450941	ExpressionStatement	plfont -> resolution . x = plfont -> resolution . y = 0	597:8:14232:14279	8450862	8	True				
ANR	8450942	AssignmentExpression	plfont -> resolution . x = plfont -> resolution . y = 0		8450862	0		=			
ANR	8450943	MemberAccess	plfont -> resolution . x		8450862	0					
ANR	8450944	PtrMemberAccess	plfont -> resolution		8450862	0					
ANR	8450945	Identifier	plfont		8450862	0					
ANR	8450946	Identifier	resolution		8450862	1					
ANR	8450947	Identifier	x		8450862	1					
ANR	8450948	AssignmentExpression	plfont -> resolution . y = 0		8450862	1		=			
ANR	8450949	MemberAccess	plfont -> resolution . y		8450862	0					
ANR	8450950	PtrMemberAccess	plfont -> resolution		8450862	0					
ANR	8450951	Identifier	plfont		8450862	0					
ANR	8450952	Identifier	resolution		8450862	1					
ANR	8450953	Identifier	y		8450862	1					
ANR	8450954	PrimaryExpression	0		8450862	1					
ANR	8450955	ExpressionStatement	plfont -> params . proportional_spacing = true	598:8:14289:14331	8450862	9	True				
ANR	8450956	AssignmentExpression	plfont -> params . proportional_spacing = true		8450862	0		=			
ANR	8450957	MemberAccess	plfont -> params . proportional_spacing		8450862	0					
ANR	8450958	PtrMemberAccess	plfont -> params		8450862	0					
ANR	8450959	Identifier	plfont		8450862	0					
ANR	8450960	Identifier	params		8450862	1					
ANR	8450961	Identifier	proportional_spacing		8450862	1					
ANR	8450962	Identifier	true		8450862	1					
ANR	8450963	ExpressionStatement	"memset ( plfont -> character_complement , 0xff , 8 )"	599:8:14341:14386	8450862	10	True				
ANR	8450964	CallExpression	"memset ( plfont -> character_complement , 0xff , 8 )"		8450862	0					
ANR	8450965	Callee	memset		8450862	0					
ANR	8450966	Identifier	memset		8450862	0					
ANR	8450967	ArgumentList	plfont -> character_complement		8450862	1					
ANR	8450968	Argument	plfont -> character_complement		8450862	0					
ANR	8450969	PtrMemberAccess	plfont -> character_complement		8450862	0					
ANR	8450970	Identifier	plfont		8450862	0					
ANR	8450971	Identifier	character_complement		8450862	1					
ANR	8450972	Argument	0xff		8450862	1					
ANR	8450973	PrimaryExpression	0xff		8450862	0					
ANR	8450974	Argument	8		8450862	2					
ANR	8450975	PrimaryExpression	8		8450862	0					
ANR	8450976	ExpressionStatement	plfont -> offsets . GC = plfont -> offsets . GT = plfont -> offsets . VT = - 1	600:8:14396:14461	8450862	11	True				
ANR	8450977	AssignmentExpression	plfont -> offsets . GC = plfont -> offsets . GT = plfont -> offsets . VT = - 1		8450862	0		=			
ANR	8450978	MemberAccess	plfont -> offsets . GC		8450862	0					
ANR	8450979	PtrMemberAccess	plfont -> offsets		8450862	0					
ANR	8450980	Identifier	plfont		8450862	0					
ANR	8450981	Identifier	offsets		8450862	1					
ANR	8450982	Identifier	GC		8450862	1					
ANR	8450983	AssignmentExpression	plfont -> offsets . GT = plfont -> offsets . VT = - 1		8450862	1		=			
ANR	8450984	MemberAccess	plfont -> offsets . GT		8450862	0					
ANR	8450985	PtrMemberAccess	plfont -> offsets		8450862	0					
ANR	8450986	Identifier	plfont		8450862	0					
ANR	8450987	Identifier	offsets		8450862	1					
ANR	8450988	Identifier	GT		8450862	1					
ANR	8450989	AssignmentExpression	plfont -> offsets . VT = - 1		8450862	1		=			
ANR	8450990	MemberAccess	plfont -> offsets . VT		8450862	0					
ANR	8450991	PtrMemberAccess	plfont -> offsets		8450862	0					
ANR	8450992	Identifier	plfont		8450862	0					
ANR	8450993	Identifier	offsets		8450862	1					
ANR	8450994	Identifier	VT		8450862	1					
ANR	8450995	UnaryOperationExpression	- 1		8450862	1					
ANR	8450996	UnaryOperator	-		8450862	0					
ANR	8450997	PrimaryExpression	1		8450862	1					
ANR	8450998	ExpressionStatement	plfont -> pts_per_inch = 72.0	601:8:14471:14498	8450862	12	True				
ANR	8450999	AssignmentExpression	plfont -> pts_per_inch = 72.0		8450862	0		=			
ANR	8451000	PtrMemberAccess	plfont -> pts_per_inch		8450862	0					
ANR	8451001	Identifier	plfont		8450862	0					
ANR	8451002	Identifier	pts_per_inch		8450862	1					
ANR	8451003	PrimaryExpression	72.0		8450862	1					
ANR	8451004	ExpressionStatement	plfont -> widths_cache = NULL	602:8:14530:14557	8450862	13	True				
ANR	8451005	AssignmentExpression	plfont -> widths_cache = NULL		8450862	0		=			
ANR	8451006	PtrMemberAccess	plfont -> widths_cache		8450862	0					
ANR	8451007	Identifier	plfont		8450862	0					
ANR	8451008	Identifier	widths_cache		8450862	1					
ANR	8451009	Identifier	NULL		8450862	1					
ANR	8451010	ExpressionStatement	plfont -> widths_cache_nitems = 0	603:8:14567:14598	8450862	14	True				
ANR	8451011	AssignmentExpression	plfont -> widths_cache_nitems = 0		8450862	0		=			
ANR	8451012	PtrMemberAccess	plfont -> widths_cache_nitems		8450862	0					
ANR	8451013	Identifier	plfont		8450862	0					
ANR	8451014	Identifier	widths_cache_nitems		8450862	1					
ANR	8451015	PrimaryExpression	0		8450862	1					
ANR	8451016	ReturnStatement	return plfont ;	605:4:14610:14623	8450862	2	True				
ANR	8451017	Identifier	plfont		8450862	0					
ANR	8451018	ReturnType	pl_font_t *		8450862	1					
ANR	8451019	Identifier	pl_alloc_font		8450862	2					
ANR	8451020	ParameterList	"gs_memory_t * mem , client_name_t cname"		8450862	3					
ANR	8451021	Parameter	gs_memory_t * mem	583:14:13730:13746	8450862	0	True				
ANR	8451022	ParameterType	gs_memory_t *		8450862	0					
ANR	8451023	Identifier	mem		8450862	1					
ANR	8451024	Parameter	client_name_t cname	583:33:13749:13767	8450862	1	True				
ANR	8451025	ParameterType	client_name_t		8450862	0					
ANR	8451026	Identifier	cname		8450862	1					
ANR	8451027	CFGEntryNode	ENTRY		8450862		True				
ANR	8451028	CFGExitNode	EXIT		8450862		True				
ANR	8451029	Symbol	plfont -> widths_cache		8450862						
ANR	8451030	Symbol	plfont -> widths_cache_nitems		8450862						
ANR	8451031	Symbol	gs_alloc_struct		8450862						
ANR	8451032	Symbol	plfont -> header		8450862						
ANR	8451033	Symbol	cname		8450862						
ANR	8451034	Symbol	plfont -> char_glyphs		8450862						
ANR	8451035	Symbol	plfont		8450862						
ANR	8451036	Symbol	plfont -> pts_per_inch		8450862						
ANR	8451037	Symbol	plfont -> orient		8450862						
ANR	8451038	Symbol	mem		8450862						
ANR	8451039	Symbol	pl_font_t		8450862						
ANR	8451040	Symbol	plfont -> font_file		8450862						
ANR	8451041	Symbol	plfont -> offsets . VT		8450862						
ANR	8451042	Symbol	plfont -> char_glyphs . table		8450862						
ANR	8451043	Symbol	plfont -> allow_vertical_substitutes		8450862						
ANR	8451044	Symbol	plfont -> params . proportional_spacing		8450862						
ANR	8451045	Symbol	NULL		8450862						
ANR	8451046	Symbol	plfont -> glyphs . table		8450862						
ANR	8451047	Symbol	false		8450862						
ANR	8451048	Symbol	plfont -> resolution		8450862						
ANR	8451049	Symbol	plfont -> character_complement		8450862						
ANR	8451050	Symbol	plfont -> offsets		8450862						
ANR	8451051	Symbol	plfont -> offsets . GT		8450862						
ANR	8451052	Symbol	plfont -> pfont		8450862						
ANR	8451053	Symbol	plfont -> bold_fraction		8450862						
ANR	8451054	Symbol	plfont -> resolution . x		8450862						
ANR	8451055	Symbol	plfont -> resolution . y		8450862						
ANR	8451056	Symbol	plfont -> params		8450862						
ANR	8451057	Symbol	* plfont		8450862						
ANR	8451058	Symbol	plfont -> glyphs		8450862						
ANR	8451059	Symbol	true		8450862						
ANR	8451060	Symbol	& st_pl_font		8450862						
ANR	8451061	Symbol	plfont -> offsets . GC		8450862						
ANR	8451062	Function	pl_clone_font	616:0:15069:21112							
ANR	8451063	FunctionDef	"pl_clone_font (const pl_font_t * src , gs_memory_t * mem , client_name_t cname)"		8451062	0					
ANR	8451064	CompoundStatement		618:0:15158:21112	8451062	0					
ANR	8451065	IdentifierDeclStatement	"pl_font_t * plfont = gs_alloc_struct ( mem , pl_font_t , & st_pl_font , cname ) ;"	619:4:15164:15235	8451062	0	True				
ANR	8451066	IdentifierDecl	"* plfont = gs_alloc_struct ( mem , pl_font_t , & st_pl_font , cname )"		8451062	0					
ANR	8451067	IdentifierDeclType	pl_font_t *		8451062	0					
ANR	8451068	Identifier	plfont		8451062	1					
ANR	8451069	AssignmentExpression	"* plfont = gs_alloc_struct ( mem , pl_font_t , & st_pl_font , cname )"		8451062	2		=			
ANR	8451070	Identifier	plfont		8451062	0					
ANR	8451071	CallExpression	"gs_alloc_struct ( mem , pl_font_t , & st_pl_font , cname )"		8451062	1					
ANR	8451072	Callee	gs_alloc_struct		8451062	0					
ANR	8451073	Identifier	gs_alloc_struct		8451062	0					
ANR	8451074	ArgumentList	mem		8451062	1					
ANR	8451075	Argument	mem		8451062	0					
ANR	8451076	Identifier	mem		8451062	0					
ANR	8451077	Argument	pl_font_t		8451062	1					
ANR	8451078	Identifier	pl_font_t		8451062	0					
ANR	8451079	Argument	& st_pl_font		8451062	2					
ANR	8451080	UnaryOperationExpression	& st_pl_font		8451062	0					
ANR	8451081	UnaryOperator	&		8451062	0					
ANR	8451082	Identifier	st_pl_font		8451062	1					
ANR	8451083	Argument	cname		8451062	3					
ANR	8451084	Identifier	cname		8451062	0					
ANR	8451085	IfStatement	if ( plfont == 0 )		8451062	1					
ANR	8451086	Condition	plfont == 0	621:8:15246:15256	8451062	0	True				
ANR	8451087	EqualityExpression	plfont == 0		8451062	0		==			
ANR	8451088	Identifier	plfont		8451062	0					
ANR	8451089	PrimaryExpression	0		8451062	1					
ANR	8451090	ReturnStatement	return 0 ;	622:8:15267:15275	8451062	1	True				
ANR	8451091	PrimaryExpression	0		8451062	0					
ANR	8451092	ExpressionStatement	plfont -> storage = src -> storage	624:4:15320:15350	8451062	2	True				
ANR	8451093	AssignmentExpression	plfont -> storage = src -> storage		8451062	0		=			
ANR	8451094	PtrMemberAccess	plfont -> storage		8451062	0					
ANR	8451095	Identifier	plfont		8451062	0					
ANR	8451096	Identifier	storage		8451062	1					
ANR	8451097	PtrMemberAccess	src -> storage		8451062	1					
ANR	8451098	Identifier	src		8451062	0					
ANR	8451099	Identifier	storage		8451062	1					
ANR	8451100	ExpressionStatement	plfont -> header_size = src -> header_size	625:4:15356:15394	8451062	3	True				
ANR	8451101	AssignmentExpression	plfont -> header_size = src -> header_size		8451062	0		=			
ANR	8451102	PtrMemberAccess	plfont -> header_size		8451062	0					
ANR	8451103	Identifier	plfont		8451062	0					
ANR	8451104	Identifier	header_size		8451062	1					
ANR	8451105	PtrMemberAccess	src -> header_size		8451062	1					
ANR	8451106	Identifier	src		8451062	0					
ANR	8451107	Identifier	header_size		8451062	1					
ANR	8451108	ExpressionStatement	plfont -> scaling_technology = src -> scaling_technology	626:4:15400:15452	8451062	4	True				
ANR	8451109	AssignmentExpression	plfont -> scaling_technology = src -> scaling_technology		8451062	0		=			
ANR	8451110	PtrMemberAccess	plfont -> scaling_technology		8451062	0					
ANR	8451111	Identifier	plfont		8451062	0					
ANR	8451112	Identifier	scaling_technology		8451062	1					
ANR	8451113	PtrMemberAccess	src -> scaling_technology		8451062	1					
ANR	8451114	Identifier	src		8451062	0					
ANR	8451115	Identifier	scaling_technology		8451062	1					
ANR	8451116	ExpressionStatement	plfont -> is_xl_format = src -> is_xl_format	627:4:15458:15498	8451062	5	True				
ANR	8451117	AssignmentExpression	plfont -> is_xl_format = src -> is_xl_format		8451062	0		=			
ANR	8451118	PtrMemberAccess	plfont -> is_xl_format		8451062	0					
ANR	8451119	Identifier	plfont		8451062	0					
ANR	8451120	Identifier	is_xl_format		8451062	1					
ANR	8451121	PtrMemberAccess	src -> is_xl_format		8451062	1					
ANR	8451122	Identifier	src		8451062	0					
ANR	8451123	Identifier	is_xl_format		8451062	1					
ANR	8451124	ExpressionStatement	plfont -> allow_vertical_substitutes = src -> allow_vertical_substitutes	628:4:15504:15572	8451062	6	True				
ANR	8451125	AssignmentExpression	plfont -> allow_vertical_substitutes = src -> allow_vertical_substitutes		8451062	0		=			
ANR	8451126	PtrMemberAccess	plfont -> allow_vertical_substitutes		8451062	0					
ANR	8451127	Identifier	plfont		8451062	0					
ANR	8451128	Identifier	allow_vertical_substitutes		8451062	1					
ANR	8451129	PtrMemberAccess	src -> allow_vertical_substitutes		8451062	1					
ANR	8451130	Identifier	src		8451062	0					
ANR	8451131	Identifier	allow_vertical_substitutes		8451062	1					
ANR	8451132	ExpressionStatement	plfont -> font_type = src -> font_type	629:4:15578:15612	8451062	7	True				
ANR	8451133	AssignmentExpression	plfont -> font_type = src -> font_type		8451062	0		=			
ANR	8451134	PtrMemberAccess	plfont -> font_type		8451062	0					
ANR	8451135	Identifier	plfont		8451062	0					
ANR	8451136	Identifier	font_type		8451062	1					
ANR	8451137	PtrMemberAccess	src -> font_type		8451062	1					
ANR	8451138	Identifier	src		8451062	0					
ANR	8451139	Identifier	font_type		8451062	1					
ANR	8451140	ExpressionStatement	plfont -> char_width = src -> char_width	630:4:15618:15654	8451062	8	True				
ANR	8451141	AssignmentExpression	plfont -> char_width = src -> char_width		8451062	0		=			
ANR	8451142	PtrMemberAccess	plfont -> char_width		8451062	0					
ANR	8451143	Identifier	plfont		8451062	0					
ANR	8451144	Identifier	char_width		8451062	1					
ANR	8451145	PtrMemberAccess	src -> char_width		8451062	1					
ANR	8451146	Identifier	src		8451062	0					
ANR	8451147	Identifier	char_width		8451062	1					
ANR	8451148	ExpressionStatement	plfont -> char_metrics = src -> char_metrics	631:4:15660:15700	8451062	9	True				
ANR	8451149	AssignmentExpression	plfont -> char_metrics = src -> char_metrics		8451062	0		=			
ANR	8451150	PtrMemberAccess	plfont -> char_metrics		8451062	0					
ANR	8451151	Identifier	plfont		8451062	0					
ANR	8451152	Identifier	char_metrics		8451062	1					
ANR	8451153	PtrMemberAccess	src -> char_metrics		8451062	1					
ANR	8451154	Identifier	src		8451062	0					
ANR	8451155	Identifier	char_metrics		8451062	1					
ANR	8451156	ExpressionStatement	plfont -> large_sizes = src -> large_sizes	632:4:15706:15744	8451062	10	True				
ANR	8451157	AssignmentExpression	plfont -> large_sizes = src -> large_sizes		8451062	0		=			
ANR	8451158	PtrMemberAccess	plfont -> large_sizes		8451062	0					
ANR	8451159	Identifier	plfont		8451062	0					
ANR	8451160	Identifier	large_sizes		8451062	1					
ANR	8451161	PtrMemberAccess	src -> large_sizes		8451062	1					
ANR	8451162	Identifier	src		8451062	0					
ANR	8451163	Identifier	large_sizes		8451062	1					
ANR	8451164	ExpressionStatement	plfont -> resolution = src -> resolution	633:4:15750:15786	8451062	11	True				
ANR	8451165	AssignmentExpression	plfont -> resolution = src -> resolution		8451062	0		=			
ANR	8451166	PtrMemberAccess	plfont -> resolution		8451062	0					
ANR	8451167	Identifier	plfont		8451062	0					
ANR	8451168	Identifier	resolution		8451062	1					
ANR	8451169	PtrMemberAccess	src -> resolution		8451062	1					
ANR	8451170	Identifier	src		8451062	0					
ANR	8451171	Identifier	resolution		8451062	1					
ANR	8451172	ExpressionStatement	plfont -> params = src -> params	634:4:15792:15820	8451062	12	True				
ANR	8451173	AssignmentExpression	plfont -> params = src -> params		8451062	0		=			
ANR	8451174	PtrMemberAccess	plfont -> params		8451062	0					
ANR	8451175	Identifier	plfont		8451062	0					
ANR	8451176	Identifier	params		8451062	1					
ANR	8451177	PtrMemberAccess	src -> params		8451062	1					
ANR	8451178	Identifier	src		8451062	0					
ANR	8451179	Identifier	params		8451062	1					
ANR	8451180	ExpressionStatement	plfont -> pts_per_inch = src -> pts_per_inch	635:4:15826:15866	8451062	13	True				
ANR	8451181	AssignmentExpression	plfont -> pts_per_inch = src -> pts_per_inch		8451062	0		=			
ANR	8451182	PtrMemberAccess	plfont -> pts_per_inch		8451062	0					
ANR	8451183	Identifier	plfont		8451062	0					
ANR	8451184	Identifier	pts_per_inch		8451062	1					
ANR	8451185	PtrMemberAccess	src -> pts_per_inch		8451062	1					
ANR	8451186	Identifier	src		8451062	0					
ANR	8451187	Identifier	pts_per_inch		8451062	1					
ANR	8451188	ExpressionStatement	plfont -> font_file_loaded = src -> font_file_loaded	636:4:15872:15920	8451062	14	True				
ANR	8451189	AssignmentExpression	plfont -> font_file_loaded = src -> font_file_loaded		8451062	0		=			
ANR	8451190	PtrMemberAccess	plfont -> font_file_loaded		8451062	0					
ANR	8451191	Identifier	plfont		8451062	0					
ANR	8451192	Identifier	font_file_loaded		8451062	1					
ANR	8451193	PtrMemberAccess	src -> font_file_loaded		8451062	1					
ANR	8451194	Identifier	src		8451062	0					
ANR	8451195	Identifier	font_file_loaded		8451062	1					
ANR	8451196	ExpressionStatement	plfont -> orient = src -> orient	637:4:15926:15954	8451062	15	True				
ANR	8451197	AssignmentExpression	plfont -> orient = src -> orient		8451062	0		=			
ANR	8451198	PtrMemberAccess	plfont -> orient		8451062	0					
ANR	8451199	Identifier	plfont		8451062	0					
ANR	8451200	Identifier	orient		8451062	1					
ANR	8451201	PtrMemberAccess	src -> orient		8451062	1					
ANR	8451202	Identifier	src		8451062	0					
ANR	8451203	Identifier	orient		8451062	1					
ANR	8451204	ExpressionStatement	plfont -> bold_fraction = src -> bold_fraction	638:4:15960:16002	8451062	16	True				
ANR	8451205	AssignmentExpression	plfont -> bold_fraction = src -> bold_fraction		8451062	0		=			
ANR	8451206	PtrMemberAccess	plfont -> bold_fraction		8451062	0					
ANR	8451207	Identifier	plfont		8451062	0					
ANR	8451208	Identifier	bold_fraction		8451062	1					
ANR	8451209	PtrMemberAccess	src -> bold_fraction		8451062	1					
ANR	8451210	Identifier	src		8451062	0					
ANR	8451211	Identifier	bold_fraction		8451062	1					
ANR	8451212	ExpressionStatement	plfont -> widths_cache = NULL	639:4:16008:16035	8451062	17	True				
ANR	8451213	AssignmentExpression	plfont -> widths_cache = NULL		8451062	0		=			
ANR	8451214	PtrMemberAccess	plfont -> widths_cache		8451062	0					
ANR	8451215	Identifier	plfont		8451062	0					
ANR	8451216	Identifier	widths_cache		8451062	1					
ANR	8451217	Identifier	NULL		8451062	1					
ANR	8451218	ExpressionStatement	plfont -> widths_cache_nitems = 0	640:4:16041:16072	8451062	18	True				
ANR	8451219	AssignmentExpression	plfont -> widths_cache_nitems = 0		8451062	0		=			
ANR	8451220	PtrMemberAccess	plfont -> widths_cache_nitems		8451062	0					
ANR	8451221	Identifier	plfont		8451062	0					
ANR	8451222	Identifier	widths_cache_nitems		8451062	1					
ANR	8451223	PrimaryExpression	0		8451062	1					
ANR	8451224	CompoundStatement		25:8:929:934	8451062	19					
ANR	8451225	IdentifierDeclStatement	int i ;	642:8:16088:16093	8451062	0	True				
ANR	8451226	IdentifierDecl	i		8451062	0					
ANR	8451227	IdentifierDeclType	int		8451062	0					
ANR	8451228	Identifier	i		8451062	1					
ANR	8451229	ForStatement	for ( i = 0 ; i < sizeof ( src -> character_complement ) ; i ++ )		8451062	1					
ANR	8451230	ForInit	i = 0 ;	644:13:16109:16114	8451062	0	True				
ANR	8451231	AssignmentExpression	i = 0		8451062	0		=			
ANR	8451232	Identifier	i		8451062	0					
ANR	8451233	PrimaryExpression	0		8451062	1					
ANR	8451234	Condition	i < sizeof ( src -> character_complement )	644:20:16116:16152	8451062	1	True				
ANR	8451235	RelationalExpression	i < sizeof ( src -> character_complement )		8451062	0		<			
ANR	8451236	Identifier	i		8451062	0					
ANR	8451237	SizeofExpression	sizeof ( src -> character_complement )		8451062	1					
ANR	8451238	Sizeof	sizeof		8451062	0					
ANR	8451239	PtrMemberAccess	src -> character_complement		8451062	1					
ANR	8451240	Identifier	src		8451062	0					
ANR	8451241	Identifier	character_complement		8451062	1					
ANR	8451242	PostIncDecOperationExpression	i ++	644:59:16155:16157	8451062	2	True				
ANR	8451243	Identifier	i		8451062	0					
ANR	8451244	IncDec	++		8451062	1					
ANR	8451245	ExpressionStatement	plfont -> character_complement [ i ] = src -> character_complement [ i ]	645:12:16172:16234	8451062	3	True				
ANR	8451246	AssignmentExpression	plfont -> character_complement [ i ] = src -> character_complement [ i ]		8451062	0		=			
ANR	8451247	ArrayIndexing	plfont -> character_complement [ i ]		8451062	0					
ANR	8451248	PtrMemberAccess	plfont -> character_complement		8451062	0					
ANR	8451249	Identifier	plfont		8451062	0					
ANR	8451250	Identifier	character_complement		8451062	1					
ANR	8451251	Identifier	i		8451062	1					
ANR	8451252	ArrayIndexing	src -> character_complement [ i ]		8451062	1					
ANR	8451253	PtrMemberAccess	src -> character_complement		8451062	0					
ANR	8451254	Identifier	src		8451062	0					
ANR	8451255	Identifier	character_complement		8451062	1					
ANR	8451256	Identifier	i		8451062	1					
ANR	8451257	ExpressionStatement	plfont -> offsets = src -> offsets	647:4:16246:16276	8451062	20	True				
ANR	8451258	AssignmentExpression	plfont -> offsets = src -> offsets		8451062	0		=			
ANR	8451259	PtrMemberAccess	plfont -> offsets		8451062	0					
ANR	8451260	Identifier	plfont		8451062	0					
ANR	8451261	Identifier	offsets		8451062	1					
ANR	8451262	PtrMemberAccess	src -> offsets		8451062	1					
ANR	8451263	Identifier	src		8451062	0					
ANR	8451264	Identifier	offsets		8451062	1					
ANR	8451265	ExpressionStatement	"plfont -> header = gs_alloc_bytes ( mem , src -> header_size , cname )"	648:4:16282:16343	8451062	21	True				
ANR	8451266	AssignmentExpression	"plfont -> header = gs_alloc_bytes ( mem , src -> header_size , cname )"		8451062	0		=			
ANR	8451267	PtrMemberAccess	plfont -> header		8451062	0					
ANR	8451268	Identifier	plfont		8451062	0					
ANR	8451269	Identifier	header		8451062	1					
ANR	8451270	CallExpression	"gs_alloc_bytes ( mem , src -> header_size , cname )"		8451062	1					
ANR	8451271	Callee	gs_alloc_bytes		8451062	0					
ANR	8451272	Identifier	gs_alloc_bytes		8451062	0					
ANR	8451273	ArgumentList	mem		8451062	1					
ANR	8451274	Argument	mem		8451062	0					
ANR	8451275	Identifier	mem		8451062	0					
ANR	8451276	Argument	src -> header_size		8451062	1					
ANR	8451277	PtrMemberAccess	src -> header_size		8451062	0					
ANR	8451278	Identifier	src		8451062	0					
ANR	8451279	Identifier	header_size		8451062	1					
ANR	8451280	Argument	cname		8451062	2					
ANR	8451281	Identifier	cname		8451062	0					
ANR	8451282	IfStatement	if ( plfont -> header == 0 )		8451062	22					
ANR	8451283	Condition	plfont -> header == 0	649:8:16353:16371	8451062	0	True				
ANR	8451284	EqualityExpression	plfont -> header == 0		8451062	0		==			
ANR	8451285	PtrMemberAccess	plfont -> header		8451062	0					
ANR	8451286	Identifier	plfont		8451062	0					
ANR	8451287	Identifier	header		8451062	1					
ANR	8451288	PrimaryExpression	0		8451062	1					
ANR	8451289	ReturnStatement	return 0 ;	650:8:16382:16390	8451062	1	True				
ANR	8451290	PrimaryExpression	0		8451062	0					
ANR	8451291	ExpressionStatement	"memcpy ( plfont -> header , src -> header , src -> header_size )"	651:4:16396:16449	8451062	23	True				
ANR	8451292	CallExpression	"memcpy ( plfont -> header , src -> header , src -> header_size )"		8451062	0					
ANR	8451293	Callee	memcpy		8451062	0					
ANR	8451294	Identifier	memcpy		8451062	0					
ANR	8451295	ArgumentList	plfont -> header		8451062	1					
ANR	8451296	Argument	plfont -> header		8451062	0					
ANR	8451297	PtrMemberAccess	plfont -> header		8451062	0					
ANR	8451298	Identifier	plfont		8451062	0					
ANR	8451299	Identifier	header		8451062	1					
ANR	8451300	Argument	src -> header		8451062	1					
ANR	8451301	PtrMemberAccess	src -> header		8451062	0					
ANR	8451302	Identifier	src		8451062	0					
ANR	8451303	Identifier	header		8451062	1					
ANR	8451304	Argument	src -> header_size		8451062	2					
ANR	8451305	PtrMemberAccess	src -> header_size		8451062	0					
ANR	8451306	Identifier	src		8451062	0					
ANR	8451307	Identifier	header_size		8451062	1					
ANR	8451308	IfStatement	if ( src -> font_file )		8451062	24					
ANR	8451309	Condition	src -> font_file	653:8:16460:16473	8451062	0	True				
ANR	8451310	PtrMemberAccess	src -> font_file		8451062	0					
ANR	8451311	Identifier	src		8451062	0					
ANR	8451312	Identifier	font_file		8451062	1					
ANR	8451313	CompoundStatement		36:24:1317:1317	8451062	1					
ANR	8451314	ExpressionStatement	"plfont -> font_file = ( char * ) gs_alloc_bytes ( mem , strlen ( src -> font_file ) + 1 , ""pl_clone_font"" )"	654:8:16486:16625	8451062	0	True				
ANR	8451315	AssignmentExpression	"plfont -> font_file = ( char * ) gs_alloc_bytes ( mem , strlen ( src -> font_file ) + 1 , ""pl_clone_font"" )"		8451062	0		=			
ANR	8451316	PtrMemberAccess	plfont -> font_file		8451062	0					
ANR	8451317	Identifier	plfont		8451062	0					
ANR	8451318	Identifier	font_file		8451062	1					
ANR	8451319	CastExpression	"( char * ) gs_alloc_bytes ( mem , strlen ( src -> font_file ) + 1 , ""pl_clone_font"" )"		8451062	1					
ANR	8451320	CastTarget	char *		8451062	0					
ANR	8451321	CallExpression	"gs_alloc_bytes ( mem , strlen ( src -> font_file ) + 1 , ""pl_clone_font"" )"		8451062	1					
ANR	8451322	Callee	gs_alloc_bytes		8451062	0					
ANR	8451323	Identifier	gs_alloc_bytes		8451062	0					
ANR	8451324	ArgumentList	mem		8451062	1					
ANR	8451325	Argument	mem		8451062	0					
ANR	8451326	Identifier	mem		8451062	0					
ANR	8451327	Argument	strlen ( src -> font_file ) + 1		8451062	1					
ANR	8451328	AdditiveExpression	strlen ( src -> font_file ) + 1		8451062	0		+			
ANR	8451329	CallExpression	strlen ( src -> font_file )		8451062	0					
ANR	8451330	Callee	strlen		8451062	0					
ANR	8451331	Identifier	strlen		8451062	0					
ANR	8451332	ArgumentList	src -> font_file		8451062	1					
ANR	8451333	Argument	src -> font_file		8451062	0					
ANR	8451334	PtrMemberAccess	src -> font_file		8451062	0					
ANR	8451335	Identifier	src		8451062	0					
ANR	8451336	Identifier	font_file		8451062	1					
ANR	8451337	PrimaryExpression	1		8451062	1					
ANR	8451338	Argument	"""pl_clone_font"""		8451062	2					
ANR	8451339	PrimaryExpression	"""pl_clone_font"""		8451062	0					
ANR	8451340	IfStatement	if ( plfont -> font_file == 0 )		8451062	1					
ANR	8451341	Condition	plfont -> font_file == 0	657:12:16639:16660	8451062	0	True				
ANR	8451342	EqualityExpression	plfont -> font_file == 0		8451062	0		==			
ANR	8451343	PtrMemberAccess	plfont -> font_file		8451062	0					
ANR	8451344	Identifier	plfont		8451062	0					
ANR	8451345	Identifier	font_file		8451062	1					
ANR	8451346	PrimaryExpression	0		8451062	1					
ANR	8451347	ReturnStatement	return 0 ;	658:12:16675:16683	8451062	1	True				
ANR	8451348	PrimaryExpression	0		8451062	0					
ANR	8451349	ExpressionStatement	"strcpy ( plfont -> font_file , src -> font_file )"	659:8:16723:16764	8451062	2	True				
ANR	8451350	CallExpression	"strcpy ( plfont -> font_file , src -> font_file )"		8451062	0					
ANR	8451351	Callee	strcpy		8451062	0					
ANR	8451352	Identifier	strcpy		8451062	0					
ANR	8451353	ArgumentList	plfont -> font_file		8451062	1					
ANR	8451354	Argument	plfont -> font_file		8451062	0					
ANR	8451355	PtrMemberAccess	plfont -> font_file		8451062	0					
ANR	8451356	Identifier	plfont		8451062	0					
ANR	8451357	Identifier	font_file		8451062	1					
ANR	8451358	Argument	src -> font_file		8451062	1					
ANR	8451359	PtrMemberAccess	src -> font_file		8451062	0					
ANR	8451360	Identifier	src		8451062	0					
ANR	8451361	Identifier	font_file		8451062	1					
ANR	8451362	ElseStatement	else		8451062	0					
ANR	8451363	ExpressionStatement	plfont -> font_file = 0	661:8:16785:16806	8451062	0	True				
ANR	8451364	AssignmentExpression	plfont -> font_file = 0		8451062	0		=			
ANR	8451365	PtrMemberAccess	plfont -> font_file		8451062	0					
ANR	8451366	Identifier	plfont		8451062	0					
ANR	8451367	Identifier	font_file		8451062	1					
ANR	8451368	PrimaryExpression	0		8451062	1					
ANR	8451369	SwitchStatement	switch ( plfont -> scaling_technology )		8451062	25					
ANR	8451370	Condition	plfont -> scaling_technology	663:12:16856:16881	8451062	0	True				
ANR	8451371	PtrMemberAccess	plfont -> scaling_technology		8451062	0					
ANR	8451372	Identifier	plfont		8451062	0					
ANR	8451373	Identifier	scaling_technology		8451062	1					
ANR	8451374	CompoundStatement		46:40:1725:1725	8451062	1					
ANR	8451375	Label	case plfst_bitmap :	664:8:16894:16911	8451062	0	True				
ANR	8451376	Identifier	plfst_bitmap		8451062	0					
ANR	8451377	CompoundStatement		49:16:1784:1921	8451062	1					
ANR	8451378	IdentifierDeclStatement	"gs_font_base * pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , cname ) ;"	666:16:16943:17080	8451062	0	True				
ANR	8451379	IdentifierDecl	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , cname )"		8451062	0					
ANR	8451380	IdentifierDeclType	gs_font_base *		8451062	0					
ANR	8451381	Identifier	pfont		8451062	1					
ANR	8451382	AssignmentExpression	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , cname )"		8451062	2		=			
ANR	8451383	Identifier	pfont		8451062	0					
ANR	8451384	CallExpression	"gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , cname )"		8451062	1					
ANR	8451385	Callee	gs_alloc_struct		8451062	0					
ANR	8451386	Identifier	gs_alloc_struct		8451062	0					
ANR	8451387	ArgumentList	mem		8451062	1					
ANR	8451388	Argument	mem		8451062	0					
ANR	8451389	Identifier	mem		8451062	0					
ANR	8451390	Argument	gs_font_base		8451062	1					
ANR	8451391	Identifier	gs_font_base		8451062	0					
ANR	8451392	Argument	& st_gs_font_base		8451062	2					
ANR	8451393	UnaryOperationExpression	& st_gs_font_base		8451062	0					
ANR	8451394	UnaryOperator	&		8451062	0					
ANR	8451395	Identifier	st_gs_font_base		8451062	1					
ANR	8451396	Argument	cname		8451062	3					
ANR	8451397	Identifier	cname		8451062	0					
ANR	8451398	IfStatement	if ( pfont == 0 )		8451062	1					
ANR	8451399	Condition	pfont == 0	669:20:17102:17111	8451062	0	True				
ANR	8451400	EqualityExpression	pfont == 0		8451062	0		==			
ANR	8451401	Identifier	pfont		8451062	0					
ANR	8451402	PrimaryExpression	0		8451062	1					
ANR	8451403	ReturnStatement	return 0 ;	670:20:17134:17142	8451062	1	True				
ANR	8451404	PrimaryExpression	0		8451062	0					
ANR	8451405	ExpressionStatement	"pl_fill_in_font ( ( gs_font * ) pfont , plfont , src -> pfont -> dir , mem , ""nameless_font"" )"	671:16:17160:17273	8451062	2	True				
ANR	8451406	CallExpression	"pl_fill_in_font ( ( gs_font * ) pfont , plfont , src -> pfont -> dir , mem , ""nameless_font"" )"		8451062	0					
ANR	8451407	Callee	pl_fill_in_font		8451062	0					
ANR	8451408	Identifier	pl_fill_in_font		8451062	0					
ANR	8451409	ArgumentList	( gs_font * ) pfont		8451062	1					
ANR	8451410	Argument	( gs_font * ) pfont		8451062	0					
ANR	8451411	CastExpression	( gs_font * ) pfont		8451062	0					
ANR	8451412	CastTarget	gs_font *		8451062	0					
ANR	8451413	Identifier	pfont		8451062	1					
ANR	8451414	Argument	plfont		8451062	1					
ANR	8451415	Identifier	plfont		8451062	0					
ANR	8451416	Argument	src -> pfont -> dir		8451062	2					
ANR	8451417	PtrMemberAccess	src -> pfont -> dir		8451062	0					
ANR	8451418	PtrMemberAccess	src -> pfont		8451062	0					
ANR	8451419	Identifier	src		8451062	0					
ANR	8451420	Identifier	pfont		8451062	1					
ANR	8451421	Identifier	dir		8451062	1					
ANR	8451422	Argument	mem		8451062	3					
ANR	8451423	Identifier	mem		8451062	0					
ANR	8451424	Argument	"""nameless_font"""		8451062	4					
ANR	8451425	PrimaryExpression	"""nameless_font"""		8451062	0					
ANR	8451426	ExpressionStatement	"pl_fill_in_bitmap_font ( pfont , gs_next_ids ( mem , 1 ) )"	673:16:17291:17341	8451062	3	True				
ANR	8451427	CallExpression	"pl_fill_in_bitmap_font ( pfont , gs_next_ids ( mem , 1 ) )"		8451062	0					
ANR	8451428	Callee	pl_fill_in_bitmap_font		8451062	0					
ANR	8451429	Identifier	pl_fill_in_bitmap_font		8451062	0					
ANR	8451430	ArgumentList	pfont		8451062	1					
ANR	8451431	Argument	pfont		8451062	0					
ANR	8451432	Identifier	pfont		8451062	0					
ANR	8451433	Argument	"gs_next_ids ( mem , 1 )"		8451062	1					
ANR	8451434	CallExpression	"gs_next_ids ( mem , 1 )"		8451062	0					
ANR	8451435	Callee	gs_next_ids		8451062	0					
ANR	8451436	Identifier	gs_next_ids		8451062	0					
ANR	8451437	ArgumentList	mem		8451062	1					
ANR	8451438	Argument	mem		8451062	0					
ANR	8451439	Identifier	mem		8451062	0					
ANR	8451440	Argument	1		8451062	1					
ANR	8451441	PrimaryExpression	1		8451062	0					
ANR	8451442	BreakStatement	break ;	674:16:17359:17364	8451062	4	True				
ANR	8451443	Label	case plfst_Intellifont :	676:8:17388:17410	8451062	2	True				
ANR	8451444	Identifier	plfst_Intellifont		8451062	0					
ANR	8451445	CompoundStatement		61:16:2283:2420	8451062	3					
ANR	8451446	IdentifierDeclStatement	"gs_font_base * pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , cname ) ;"	678:16:17442:17579	8451062	0	True				
ANR	8451447	IdentifierDecl	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , cname )"		8451062	0					
ANR	8451448	IdentifierDeclType	gs_font_base *		8451062	0					
ANR	8451449	Identifier	pfont		8451062	1					
ANR	8451450	AssignmentExpression	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , cname )"		8451062	2		=			
ANR	8451451	Identifier	pfont		8451062	0					
ANR	8451452	CallExpression	"gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , cname )"		8451062	1					
ANR	8451453	Callee	gs_alloc_struct		8451062	0					
ANR	8451454	Identifier	gs_alloc_struct		8451062	0					
ANR	8451455	ArgumentList	mem		8451062	1					
ANR	8451456	Argument	mem		8451062	0					
ANR	8451457	Identifier	mem		8451062	0					
ANR	8451458	Argument	gs_font_base		8451062	1					
ANR	8451459	Identifier	gs_font_base		8451062	0					
ANR	8451460	Argument	& st_gs_font_base		8451062	2					
ANR	8451461	UnaryOperationExpression	& st_gs_font_base		8451062	0					
ANR	8451462	UnaryOperator	&		8451062	0					
ANR	8451463	Identifier	st_gs_font_base		8451062	1					
ANR	8451464	Argument	cname		8451062	3					
ANR	8451465	Identifier	cname		8451062	0					
ANR	8451466	IfStatement	if ( pfont == 0 )		8451062	1					
ANR	8451467	Condition	pfont == 0	681:20:17601:17610	8451062	0	True				
ANR	8451468	EqualityExpression	pfont == 0		8451062	0		==			
ANR	8451469	Identifier	pfont		8451062	0					
ANR	8451470	PrimaryExpression	0		8451062	1					
ANR	8451471	ReturnStatement	return 0 ;	682:20:17633:17641	8451062	1	True				
ANR	8451472	PrimaryExpression	0		8451062	0					
ANR	8451473	ExpressionStatement	"pl_fill_in_font ( ( gs_font * ) pfont , plfont , src -> pfont -> dir , mem , ""nameless_font"" )"	683:16:17659:17772	8451062	2	True				
ANR	8451474	CallExpression	"pl_fill_in_font ( ( gs_font * ) pfont , plfont , src -> pfont -> dir , mem , ""nameless_font"" )"		8451062	0					
ANR	8451475	Callee	pl_fill_in_font		8451062	0					
ANR	8451476	Identifier	pl_fill_in_font		8451062	0					
ANR	8451477	ArgumentList	( gs_font * ) pfont		8451062	1					
ANR	8451478	Argument	( gs_font * ) pfont		8451062	0					
ANR	8451479	CastExpression	( gs_font * ) pfont		8451062	0					
ANR	8451480	CastTarget	gs_font *		8451062	0					
ANR	8451481	Identifier	pfont		8451062	1					
ANR	8451482	Argument	plfont		8451062	1					
ANR	8451483	Identifier	plfont		8451062	0					
ANR	8451484	Argument	src -> pfont -> dir		8451062	2					
ANR	8451485	PtrMemberAccess	src -> pfont -> dir		8451062	0					
ANR	8451486	PtrMemberAccess	src -> pfont		8451062	0					
ANR	8451487	Identifier	src		8451062	0					
ANR	8451488	Identifier	pfont		8451062	1					
ANR	8451489	Identifier	dir		8451062	1					
ANR	8451490	Argument	mem		8451062	3					
ANR	8451491	Identifier	mem		8451062	0					
ANR	8451492	Argument	"""nameless_font"""		8451062	4					
ANR	8451493	PrimaryExpression	"""nameless_font"""		8451062	0					
ANR	8451494	ExpressionStatement	"pl_fill_in_intelli_font ( pfont , gs_next_ids ( mem , 1 ) )"	685:16:17790:17841	8451062	3	True				
ANR	8451495	CallExpression	"pl_fill_in_intelli_font ( pfont , gs_next_ids ( mem , 1 ) )"		8451062	0					
ANR	8451496	Callee	pl_fill_in_intelli_font		8451062	0					
ANR	8451497	Identifier	pl_fill_in_intelli_font		8451062	0					
ANR	8451498	ArgumentList	pfont		8451062	1					
ANR	8451499	Argument	pfont		8451062	0					
ANR	8451500	Identifier	pfont		8451062	0					
ANR	8451501	Argument	"gs_next_ids ( mem , 1 )"		8451062	1					
ANR	8451502	CallExpression	"gs_next_ids ( mem , 1 )"		8451062	0					
ANR	8451503	Callee	gs_next_ids		8451062	0					
ANR	8451504	Identifier	gs_next_ids		8451062	0					
ANR	8451505	ArgumentList	mem		8451062	1					
ANR	8451506	Argument	mem		8451062	0					
ANR	8451507	Identifier	mem		8451062	0					
ANR	8451508	Argument	1		8451062	1					
ANR	8451509	PrimaryExpression	1		8451062	0					
ANR	8451510	BreakStatement	break ;	686:16:17859:17864	8451062	4	True				
ANR	8451511	Label	case plfst_TrueType :	688:8:17888:17907	8451062	4	True				
ANR	8451512	Identifier	plfst_TrueType		8451062	0					
ANR	8451513	CompoundStatement		72:12:2762:2762	8451062	5					
ANR	8451514	CompoundStatement		80:20:3187:3279	8451062	0					
ANR	8451515	IdentifierDeclStatement	"gs_font_type42 * pfont = gs_alloc_struct ( mem , gs_font_type42 , & st_gs_font_type42 , cname ) ;"	691:20:17961:18112	8451062	0	True				
ANR	8451516	IdentifierDecl	"* pfont = gs_alloc_struct ( mem , gs_font_type42 , & st_gs_font_type42 , cname )"		8451062	0					
ANR	8451517	IdentifierDeclType	gs_font_type42 *		8451062	0					
ANR	8451518	Identifier	pfont		8451062	1					
ANR	8451519	AssignmentExpression	"* pfont = gs_alloc_struct ( mem , gs_font_type42 , & st_gs_font_type42 , cname )"		8451062	2		=			
ANR	8451520	Identifier	pfont		8451062	0					
ANR	8451521	CallExpression	"gs_alloc_struct ( mem , gs_font_type42 , & st_gs_font_type42 , cname )"		8451062	1					
ANR	8451522	Callee	gs_alloc_struct		8451062	0					
ANR	8451523	Identifier	gs_alloc_struct		8451062	0					
ANR	8451524	ArgumentList	mem		8451062	1					
ANR	8451525	Argument	mem		8451062	0					
ANR	8451526	Identifier	mem		8451062	0					
ANR	8451527	Argument	gs_font_type42		8451062	1					
ANR	8451528	Identifier	gs_font_type42		8451062	0					
ANR	8451529	Argument	& st_gs_font_type42		8451062	2					
ANR	8451530	UnaryOperationExpression	& st_gs_font_type42		8451062	0					
ANR	8451531	UnaryOperator	&		8451062	0					
ANR	8451532	Identifier	st_gs_font_type42		8451062	1					
ANR	8451533	Argument	cname		8451062	3					
ANR	8451534	Identifier	cname		8451062	0					
ANR	8451535	IdentifierDeclStatement	gs_font_type42 * pfont_src = ( gs_font_type42 * ) src -> pfont ;	696:20:18267:18324	8451062	1	True				
ANR	8451536	IdentifierDecl	* pfont_src = ( gs_font_type42 * ) src -> pfont		8451062	0					
ANR	8451537	IdentifierDeclType	gs_font_type42 *		8451062	0					
ANR	8451538	Identifier	pfont_src		8451062	1					
ANR	8451539	AssignmentExpression	* pfont_src = ( gs_font_type42 * ) src -> pfont		8451062	2		=			
ANR	8451540	Identifier	pfont_src		8451062	0					
ANR	8451541	CastExpression	( gs_font_type42 * ) src -> pfont		8451062	1					
ANR	8451542	CastTarget	gs_font_type42 *		8451062	0					
ANR	8451543	PtrMemberAccess	src -> pfont		8451062	1					
ANR	8451544	Identifier	src		8451062	0					
ANR	8451545	Identifier	pfont		8451062	1					
ANR	8451546	IdentifierDeclStatement	bool downloaded = ( pfont_src -> data . get_outline == pl_tt_get_outline ) ;	697:20:18346:18438	8451062	2	True				
ANR	8451547	IdentifierDecl	downloaded = ( pfont_src -> data . get_outline == pl_tt_get_outline )		8451062	0					
ANR	8451548	IdentifierDeclType	bool		8451062	0					
ANR	8451549	Identifier	downloaded		8451062	1					
ANR	8451550	AssignmentExpression	downloaded = ( pfont_src -> data . get_outline == pl_tt_get_outline )		8451062	2		=			
ANR	8451551	Identifier	downloaded		8451062	0					
ANR	8451552	EqualityExpression	pfont_src -> data . get_outline == pl_tt_get_outline		8451062	1		==			
ANR	8451553	MemberAccess	pfont_src -> data . get_outline		8451062	0					
ANR	8451554	PtrMemberAccess	pfont_src -> data		8451062	0					
ANR	8451555	Identifier	pfont_src		8451062	0					
ANR	8451556	Identifier	data		8451062	1					
ANR	8451557	Identifier	get_outline		8451062	1					
ANR	8451558	Identifier	pl_tt_get_outline		8451062	1					
ANR	8451559	IfStatement	if ( pfont == 0 )		8451062	3					
ANR	8451560	Condition	pfont == 0	699:24:18464:18473	8451062	0	True				
ANR	8451561	EqualityExpression	pfont == 0		8451062	0		==			
ANR	8451562	Identifier	pfont		8451062	0					
ANR	8451563	PrimaryExpression	0		8451062	1					
ANR	8451564	ReturnStatement	return 0 ;	700:24:18500:18508	8451062	1	True				
ANR	8451565	PrimaryExpression	0		8451062	0					
ANR	8451566	ExpressionStatement	"pl_fill_in_font ( ( gs_font * ) pfont , plfont , src -> pfont -> dir , mem , ""nameless_font"" )"	701:20:18530:18647	8451062	4	True				
ANR	8451567	CallExpression	"pl_fill_in_font ( ( gs_font * ) pfont , plfont , src -> pfont -> dir , mem , ""nameless_font"" )"		8451062	0					
ANR	8451568	Callee	pl_fill_in_font		8451062	0					
ANR	8451569	Identifier	pl_fill_in_font		8451062	0					
ANR	8451570	ArgumentList	( gs_font * ) pfont		8451062	1					
ANR	8451571	Argument	( gs_font * ) pfont		8451062	0					
ANR	8451572	CastExpression	( gs_font * ) pfont		8451062	0					
ANR	8451573	CastTarget	gs_font *		8451062	0					
ANR	8451574	Identifier	pfont		8451062	1					
ANR	8451575	Argument	plfont		8451062	1					
ANR	8451576	Identifier	plfont		8451062	0					
ANR	8451577	Argument	src -> pfont -> dir		8451062	2					
ANR	8451578	PtrMemberAccess	src -> pfont -> dir		8451062	0					
ANR	8451579	PtrMemberAccess	src -> pfont		8451062	0					
ANR	8451580	Identifier	src		8451062	0					
ANR	8451581	Identifier	pfont		8451062	1					
ANR	8451582	Identifier	dir		8451062	1					
ANR	8451583	Argument	mem		8451062	3					
ANR	8451584	Identifier	mem		8451062	0					
ANR	8451585	Argument	"""nameless_font"""		8451062	4					
ANR	8451586	PrimaryExpression	"""nameless_font"""		8451062	0					
ANR	8451587	ExpressionStatement	"pl_fill_in_tt_font ( pfont , downloaded ? NULL : src -> header , gs_next_ids ( mem , 1 ) )"	703:20:18669:18787	8451062	5	True				
ANR	8451588	CallExpression	"pl_fill_in_tt_font ( pfont , downloaded ? NULL : src -> header , gs_next_ids ( mem , 1 ) )"		8451062	0					
ANR	8451589	Callee	pl_fill_in_tt_font		8451062	0					
ANR	8451590	Identifier	pl_fill_in_tt_font		8451062	0					
ANR	8451591	ArgumentList	pfont		8451062	1					
ANR	8451592	Argument	pfont		8451062	0					
ANR	8451593	Identifier	pfont		8451062	0					
ANR	8451594	Argument	downloaded ? NULL : src -> header		8451062	1					
ANR	8451595	ConditionalExpression	downloaded ? NULL : src -> header		8451062	0					
ANR	8451596	Condition	downloaded		8451062	0					
ANR	8451597	Identifier	downloaded		8451062	0					
ANR	8451598	Identifier	NULL		8451062	1					
ANR	8451599	PtrMemberAccess	src -> header		8451062	2					
ANR	8451600	Identifier	src		8451062	0					
ANR	8451601	Identifier	header		8451062	1					
ANR	8451602	Argument	"gs_next_ids ( mem , 1 )"		8451062	2					
ANR	8451603	CallExpression	"gs_next_ids ( mem , 1 )"		8451062	0					
ANR	8451604	Callee	gs_next_ids		8451062	0					
ANR	8451605	Identifier	gs_next_ids		8451062	0					
ANR	8451606	ArgumentList	mem		8451062	1					
ANR	8451607	Argument	mem		8451062	0					
ANR	8451608	Identifier	mem		8451062	0					
ANR	8451609	Argument	1		8451062	1					
ANR	8451610	PrimaryExpression	1		8451062	0					
ANR	8451611	BreakStatement	break ;	706:16:18823:18828	8451062	1	True				
ANR	8451612	Label	default :	708:8:18852:18859	8451062	6	True				
ANR	8451613	Identifier	default		8451062	0					
ANR	8451614	ReturnStatement	return 0 ;	709:12:18873:18881	8451062	7	True				
ANR	8451615	PrimaryExpression	0		8451062	0					
ANR	8451616	IfStatement	if ( src -> char_glyphs . table != 0 )		8451062	26					
ANR	8451617	Condition	src -> char_glyphs . table != 0	711:8:18897:18923	8451062	0	True				
ANR	8451618	EqualityExpression	src -> char_glyphs . table != 0		8451062	0		!=			
ANR	8451619	MemberAccess	src -> char_glyphs . table		8451062	0					
ANR	8451620	PtrMemberAccess	src -> char_glyphs		8451062	0					
ANR	8451621	Identifier	src		8451062	0					
ANR	8451622	Identifier	char_glyphs		8451062	1					
ANR	8451623	Identifier	table		8451062	1					
ANR	8451624	PrimaryExpression	0		8451062	1					
ANR	8451625	CompoundStatement		103:8:4275:4280	8451062	1					
ANR	8451626	IdentifierDeclStatement	"pl_tt_char_glyph_t * char_glyphs = ( pl_tt_char_glyph_t * ) gs_alloc_byte_array ( mem , src -> char_glyphs . size , sizeof ( pl_tt_char_glyph_t ) , cname ) ;"	714:8:19052:19424	8451062	0	True				
ANR	8451627	IdentifierDecl	"* char_glyphs = ( pl_tt_char_glyph_t * ) gs_alloc_byte_array ( mem , src -> char_glyphs . size , sizeof ( pl_tt_char_glyph_t ) , cname )"		8451062	0					
ANR	8451628	IdentifierDeclType	pl_tt_char_glyph_t *		8451062	0					
ANR	8451629	Identifier	char_glyphs		8451062	1					
ANR	8451630	AssignmentExpression	"* char_glyphs = ( pl_tt_char_glyph_t * ) gs_alloc_byte_array ( mem , src -> char_glyphs . size , sizeof ( pl_tt_char_glyph_t ) , cname )"		8451062	2		=			
ANR	8451631	Identifier	char_glyphs		8451062	0					
ANR	8451632	CastExpression	"( pl_tt_char_glyph_t * ) gs_alloc_byte_array ( mem , src -> char_glyphs . size , sizeof ( pl_tt_char_glyph_t ) , cname )"		8451062	1					
ANR	8451633	CastTarget	pl_tt_char_glyph_t *		8451062	0					
ANR	8451634	CallExpression	"gs_alloc_byte_array ( mem , src -> char_glyphs . size , sizeof ( pl_tt_char_glyph_t ) , cname )"		8451062	1					
ANR	8451635	Callee	gs_alloc_byte_array		8451062	0					
ANR	8451636	Identifier	gs_alloc_byte_array		8451062	0					
ANR	8451637	ArgumentList	mem		8451062	1					
ANR	8451638	Argument	mem		8451062	0					
ANR	8451639	Identifier	mem		8451062	0					
ANR	8451640	Argument	src -> char_glyphs . size		8451062	1					
ANR	8451641	MemberAccess	src -> char_glyphs . size		8451062	0					
ANR	8451642	PtrMemberAccess	src -> char_glyphs		8451062	0					
ANR	8451643	Identifier	src		8451062	0					
ANR	8451644	Identifier	char_glyphs		8451062	1					
ANR	8451645	Identifier	size		8451062	1					
ANR	8451646	Argument	sizeof ( pl_tt_char_glyph_t )		8451062	2					
ANR	8451647	SizeofExpression	sizeof ( pl_tt_char_glyph_t )		8451062	0					
ANR	8451648	Sizeof	sizeof		8451062	0					
ANR	8451649	SizeofOperand	pl_tt_char_glyph_t		8451062	1					
ANR	8451650	Argument	cname		8451062	3					
ANR	8451651	Identifier	cname		8451062	0					
ANR	8451652	IdentifierDeclStatement	int i ;	720:8:19434:19439	8451062	1	True				
ANR	8451653	IdentifierDecl	i		8451062	0					
ANR	8451654	IdentifierDeclType	int		8451062	0					
ANR	8451655	Identifier	i		8451062	1					
ANR	8451656	IfStatement	if ( char_glyphs == 0 )		8451062	2					
ANR	8451657	Condition	char_glyphs == 0	722:12:19454:19469	8451062	0	True				
ANR	8451658	EqualityExpression	char_glyphs == 0		8451062	0		==			
ANR	8451659	Identifier	char_glyphs		8451062	0					
ANR	8451660	PrimaryExpression	0		8451062	1					
ANR	8451661	ReturnStatement	return 0 ;	723:12:19484:19492	8451062	1	True				
ANR	8451662	PrimaryExpression	0		8451062	0					
ANR	8451663	ForStatement	for ( i = 0 ; i < src -> char_glyphs . size ; i ++ )		8451062	3					
ANR	8451664	ForInit	i = 0 ;	724:13:19507:19512	8451062	0	True				
ANR	8451665	AssignmentExpression	i = 0		8451062	0		=			
ANR	8451666	Identifier	i		8451062	0					
ANR	8451667	PrimaryExpression	0		8451062	1					
ANR	8451668	Condition	i < src -> char_glyphs . size	724:20:19514:19538	8451062	1	True				
ANR	8451669	RelationalExpression	i < src -> char_glyphs . size		8451062	0		<			
ANR	8451670	Identifier	i		8451062	0					
ANR	8451671	MemberAccess	src -> char_glyphs . size		8451062	1					
ANR	8451672	PtrMemberAccess	src -> char_glyphs		8451062	0					
ANR	8451673	Identifier	src		8451062	0					
ANR	8451674	Identifier	char_glyphs		8451062	1					
ANR	8451675	Identifier	size		8451062	1					
ANR	8451676	PostIncDecOperationExpression	i ++	724:47:19541:19543	8451062	2	True				
ANR	8451677	Identifier	i		8451062	0					
ANR	8451678	IncDec	++		8451062	1					
ANR	8451679	ExpressionStatement	char_glyphs [ i ] = src -> char_glyphs . table [ i ]	725:12:19558:19600	8451062	3	True				
ANR	8451680	AssignmentExpression	char_glyphs [ i ] = src -> char_glyphs . table [ i ]		8451062	0		=			
ANR	8451681	ArrayIndexing	char_glyphs [ i ]		8451062	0					
ANR	8451682	Identifier	char_glyphs		8451062	0					
ANR	8451683	Identifier	i		8451062	1					
ANR	8451684	ArrayIndexing	src -> char_glyphs . table [ i ]		8451062	1					
ANR	8451685	MemberAccess	src -> char_glyphs . table		8451062	0					
ANR	8451686	PtrMemberAccess	src -> char_glyphs		8451062	0					
ANR	8451687	Identifier	src		8451062	0					
ANR	8451688	Identifier	char_glyphs		8451062	1					
ANR	8451689	Identifier	table		8451062	1					
ANR	8451690	Identifier	i		8451062	1					
ANR	8451691	ExpressionStatement	plfont -> char_glyphs = src -> char_glyphs	728:8:19723:19761	8451062	4	True				
ANR	8451692	AssignmentExpression	plfont -> char_glyphs = src -> char_glyphs		8451062	0		=			
ANR	8451693	PtrMemberAccess	plfont -> char_glyphs		8451062	0					
ANR	8451694	Identifier	plfont		8451062	0					
ANR	8451695	Identifier	char_glyphs		8451062	1					
ANR	8451696	PtrMemberAccess	src -> char_glyphs		8451062	1					
ANR	8451697	Identifier	src		8451062	0					
ANR	8451698	Identifier	char_glyphs		8451062	1					
ANR	8451699	ExpressionStatement	plfont -> char_glyphs . table = char_glyphs	729:8:19771:19810	8451062	5	True				
ANR	8451700	AssignmentExpression	plfont -> char_glyphs . table = char_glyphs		8451062	0		=			
ANR	8451701	MemberAccess	plfont -> char_glyphs . table		8451062	0					
ANR	8451702	PtrMemberAccess	plfont -> char_glyphs		8451062	0					
ANR	8451703	Identifier	plfont		8451062	0					
ANR	8451704	Identifier	char_glyphs		8451062	1					
ANR	8451705	Identifier	table		8451062	1					
ANR	8451706	Identifier	char_glyphs		8451062	1					
ANR	8451707	ElseStatement	else		8451062	0					
ANR	8451708	ExpressionStatement	plfont -> char_glyphs = src -> char_glyphs	731:8:19888:19926	8451062	0	True				
ANR	8451709	AssignmentExpression	plfont -> char_glyphs = src -> char_glyphs		8451062	0		=			
ANR	8451710	PtrMemberAccess	plfont -> char_glyphs		8451062	0					
ANR	8451711	Identifier	plfont		8451062	0					
ANR	8451712	Identifier	char_glyphs		8451062	1					
ANR	8451713	PtrMemberAccess	src -> char_glyphs		8451062	1					
ANR	8451714	Identifier	src		8451062	0					
ANR	8451715	Identifier	char_glyphs		8451062	1					
ANR	8451716	IfStatement	if ( src -> glyphs . table != 0 )		8451062	27					
ANR	8451717	Condition	src -> glyphs . table != 0	733:8:19937:19958	8451062	0	True				
ANR	8451718	EqualityExpression	src -> glyphs . table != 0		8451062	0		!=			
ANR	8451719	MemberAccess	src -> glyphs . table		8451062	0					
ANR	8451720	PtrMemberAccess	src -> glyphs		8451062	0					
ANR	8451721	Identifier	src		8451062	0					
ANR	8451722	Identifier	glyphs		8451062	1					
ANR	8451723	Identifier	table		8451062	1					
ANR	8451724	PrimaryExpression	0		8451062	1					
ANR	8451725	CompoundStatement		117:8:4812:4817	8451062	1					
ANR	8451726	IdentifierDeclStatement	int i ;	734:8:19971:19976	8451062	0	True				
ANR	8451727	IdentifierDecl	i		8451062	0					
ANR	8451728	IdentifierDeclType	int		8451062	0					
ANR	8451729	Identifier	i		8451062	1					
ANR	8451730	ExpressionStatement	"plfont -> glyphs . table = gs_alloc_struct_array ( mem , src -> glyphs . size , pl_font_glyph_t , & st_pl_font_glyph_element_f , cname )"	736:8:19987:20153	8451062	1	True				
ANR	8451731	AssignmentExpression	"plfont -> glyphs . table = gs_alloc_struct_array ( mem , src -> glyphs . size , pl_font_glyph_t , & st_pl_font_glyph_element_f , cname )"		8451062	0		=			
ANR	8451732	MemberAccess	plfont -> glyphs . table		8451062	0					
ANR	8451733	PtrMemberAccess	plfont -> glyphs		8451062	0					
ANR	8451734	Identifier	plfont		8451062	0					
ANR	8451735	Identifier	glyphs		8451062	1					
ANR	8451736	Identifier	table		8451062	1					
ANR	8451737	CallExpression	"gs_alloc_struct_array ( mem , src -> glyphs . size , pl_font_glyph_t , & st_pl_font_glyph_element_f , cname )"		8451062	1					
ANR	8451738	Callee	gs_alloc_struct_array		8451062	0					
ANR	8451739	Identifier	gs_alloc_struct_array		8451062	0					
ANR	8451740	ArgumentList	mem		8451062	1					
ANR	8451741	Argument	mem		8451062	0					
ANR	8451742	Identifier	mem		8451062	0					
ANR	8451743	Argument	src -> glyphs . size		8451062	1					
ANR	8451744	MemberAccess	src -> glyphs . size		8451062	0					
ANR	8451745	PtrMemberAccess	src -> glyphs		8451062	0					
ANR	8451746	Identifier	src		8451062	0					
ANR	8451747	Identifier	glyphs		8451062	1					
ANR	8451748	Identifier	size		8451062	1					
ANR	8451749	Argument	pl_font_glyph_t		8451062	2					
ANR	8451750	Identifier	pl_font_glyph_t		8451062	0					
ANR	8451751	Argument	& st_pl_font_glyph_element_f		8451062	3					
ANR	8451752	UnaryOperationExpression	& st_pl_font_glyph_element_f		8451062	0					
ANR	8451753	UnaryOperator	&		8451062	0					
ANR	8451754	Identifier	st_pl_font_glyph_element_f		8451062	1					
ANR	8451755	Argument	cname		8451062	4					
ANR	8451756	Identifier	cname		8451062	0					
ANR	8451757	ExpressionStatement	plfont -> glyphs . used = src -> glyphs . used	739:8:20163:20201	8451062	2	True				
ANR	8451758	AssignmentExpression	plfont -> glyphs . used = src -> glyphs . used		8451062	0		=			
ANR	8451759	MemberAccess	plfont -> glyphs . used		8451062	0					
ANR	8451760	PtrMemberAccess	plfont -> glyphs		8451062	0					
ANR	8451761	Identifier	plfont		8451062	0					
ANR	8451762	Identifier	glyphs		8451062	1					
ANR	8451763	Identifier	used		8451062	1					
ANR	8451764	MemberAccess	src -> glyphs . used		8451062	1					
ANR	8451765	PtrMemberAccess	src -> glyphs		8451062	0					
ANR	8451766	Identifier	src		8451062	0					
ANR	8451767	Identifier	glyphs		8451062	1					
ANR	8451768	Identifier	used		8451062	1					
ANR	8451769	ExpressionStatement	plfont -> glyphs . limit = src -> glyphs . limit	740:8:20211:20251	8451062	3	True				
ANR	8451770	AssignmentExpression	plfont -> glyphs . limit = src -> glyphs . limit		8451062	0		=			
ANR	8451771	MemberAccess	plfont -> glyphs . limit		8451062	0					
ANR	8451772	PtrMemberAccess	plfont -> glyphs		8451062	0					
ANR	8451773	Identifier	plfont		8451062	0					
ANR	8451774	Identifier	glyphs		8451062	1					
ANR	8451775	Identifier	limit		8451062	1					
ANR	8451776	MemberAccess	src -> glyphs . limit		8451062	1					
ANR	8451777	PtrMemberAccess	src -> glyphs		8451062	0					
ANR	8451778	Identifier	src		8451062	0					
ANR	8451779	Identifier	glyphs		8451062	1					
ANR	8451780	Identifier	limit		8451062	1					
ANR	8451781	ExpressionStatement	plfont -> glyphs . size = src -> glyphs . size	741:8:20261:20299	8451062	4	True				
ANR	8451782	AssignmentExpression	plfont -> glyphs . size = src -> glyphs . size		8451062	0		=			
ANR	8451783	MemberAccess	plfont -> glyphs . size		8451062	0					
ANR	8451784	PtrMemberAccess	plfont -> glyphs		8451062	0					
ANR	8451785	Identifier	plfont		8451062	0					
ANR	8451786	Identifier	glyphs		8451062	1					
ANR	8451787	Identifier	size		8451062	1					
ANR	8451788	MemberAccess	src -> glyphs . size		8451062	1					
ANR	8451789	PtrMemberAccess	src -> glyphs		8451062	0					
ANR	8451790	Identifier	src		8451062	0					
ANR	8451791	Identifier	glyphs		8451062	1					
ANR	8451792	Identifier	size		8451062	1					
ANR	8451793	ExpressionStatement	plfont -> glyphs . skip = src -> glyphs . skip	742:8:20309:20347	8451062	5	True				
ANR	8451794	AssignmentExpression	plfont -> glyphs . skip = src -> glyphs . skip		8451062	0		=			
ANR	8451795	MemberAccess	plfont -> glyphs . skip		8451062	0					
ANR	8451796	PtrMemberAccess	plfont -> glyphs		8451062	0					
ANR	8451797	Identifier	plfont		8451062	0					
ANR	8451798	Identifier	glyphs		8451062	1					
ANR	8451799	Identifier	skip		8451062	1					
ANR	8451800	MemberAccess	src -> glyphs . skip		8451062	1					
ANR	8451801	PtrMemberAccess	src -> glyphs		8451062	0					
ANR	8451802	Identifier	src		8451062	0					
ANR	8451803	Identifier	glyphs		8451062	1					
ANR	8451804	Identifier	skip		8451062	1					
ANR	8451805	ForStatement	for ( i = 0 ; i < src -> glyphs . size ; i ++ )		8451062	6					
ANR	8451806	ForInit	i = 0 ;	743:13:20362:20367	8451062	0	True				
ANR	8451807	AssignmentExpression	i = 0		8451062	0		=			
ANR	8451808	Identifier	i		8451062	0					
ANR	8451809	PrimaryExpression	0		8451062	1					
ANR	8451810	Condition	i < src -> glyphs . size	743:20:20369:20388	8451062	1	True				
ANR	8451811	RelationalExpression	i < src -> glyphs . size		8451062	0		<			
ANR	8451812	Identifier	i		8451062	0					
ANR	8451813	MemberAccess	src -> glyphs . size		8451062	1					
ANR	8451814	PtrMemberAccess	src -> glyphs		8451062	0					
ANR	8451815	Identifier	src		8451062	0					
ANR	8451816	Identifier	glyphs		8451062	1					
ANR	8451817	Identifier	size		8451062	1					
ANR	8451818	PostIncDecOperationExpression	i ++	743:42:20391:20393	8451062	2	True				
ANR	8451819	Identifier	i		8451062	0					
ANR	8451820	IncDec	++		8451062	1					
ANR	8451821	CompoundStatement		128:12:5309:5324	8451062	3					
ANR	8451822	IdentifierDeclStatement	const byte * data = src -> glyphs . table [ i ] . data ;	744:12:20410:20454	8451062	0	True				
ANR	8451823	IdentifierDecl	* data = src -> glyphs . table [ i ] . data		8451062	0					
ANR	8451824	IdentifierDeclType	const byte *		8451062	0					
ANR	8451825	Identifier	data		8451062	1					
ANR	8451826	AssignmentExpression	* data = src -> glyphs . table [ i ] . data		8451062	2		=			
ANR	8451827	Identifier	data		8451062	0					
ANR	8451828	MemberAccess	src -> glyphs . table [ i ] . data		8451062	1					
ANR	8451829	ArrayIndexing	src -> glyphs . table [ i ]		8451062	0					
ANR	8451830	MemberAccess	src -> glyphs . table		8451062	0					
ANR	8451831	PtrMemberAccess	src -> glyphs		8451062	0					
ANR	8451832	Identifier	src		8451062	0					
ANR	8451833	Identifier	glyphs		8451062	1					
ANR	8451834	Identifier	table		8451062	1					
ANR	8451835	Identifier	i		8451062	1					
ANR	8451836	Identifier	data		8451062	1					
ANR	8451837	IdentifierDeclStatement	byte * char_data ;	745:12:20468:20483	8451062	1	True				
ANR	8451838	IdentifierDecl	* char_data		8451062	0					
ANR	8451839	IdentifierDeclType	byte *		8451062	0					
ANR	8451840	Identifier	char_data		8451062	1					
ANR	8451841	ExpressionStatement	plfont -> glyphs . table [ i ] . glyph = src -> glyphs . table [ i ] . glyph	747:12:20498:20556	8451062	2	True				
ANR	8451842	AssignmentExpression	plfont -> glyphs . table [ i ] . glyph = src -> glyphs . table [ i ] . glyph		8451062	0		=			
ANR	8451843	MemberAccess	plfont -> glyphs . table [ i ] . glyph		8451062	0					
ANR	8451844	ArrayIndexing	plfont -> glyphs . table [ i ]		8451062	0					
ANR	8451845	MemberAccess	plfont -> glyphs . table		8451062	0					
ANR	8451846	PtrMemberAccess	plfont -> glyphs		8451062	0					
ANR	8451847	Identifier	plfont		8451062	0					
ANR	8451848	Identifier	glyphs		8451062	1					
ANR	8451849	Identifier	table		8451062	1					
ANR	8451850	Identifier	i		8451062	1					
ANR	8451851	Identifier	glyph		8451062	1					
ANR	8451852	MemberAccess	src -> glyphs . table [ i ] . glyph		8451062	1					
ANR	8451853	ArrayIndexing	src -> glyphs . table [ i ]		8451062	0					
ANR	8451854	MemberAccess	src -> glyphs . table		8451062	0					
ANR	8451855	PtrMemberAccess	src -> glyphs		8451062	0					
ANR	8451856	Identifier	src		8451062	0					
ANR	8451857	Identifier	glyphs		8451062	1					
ANR	8451858	Identifier	table		8451062	1					
ANR	8451859	Identifier	i		8451062	1					
ANR	8451860	Identifier	glyph		8451062	1					
ANR	8451861	ExpressionStatement	plfont -> glyphs . table [ i ] . data = 0	748:12:20570:20602	8451062	3	True				
ANR	8451862	AssignmentExpression	plfont -> glyphs . table [ i ] . data = 0		8451062	0		=			
ANR	8451863	MemberAccess	plfont -> glyphs . table [ i ] . data		8451062	0					
ANR	8451864	ArrayIndexing	plfont -> glyphs . table [ i ]		8451062	0					
ANR	8451865	MemberAccess	plfont -> glyphs . table		8451062	0					
ANR	8451866	PtrMemberAccess	plfont -> glyphs		8451062	0					
ANR	8451867	Identifier	plfont		8451062	0					
ANR	8451868	Identifier	glyphs		8451062	1					
ANR	8451869	Identifier	table		8451062	1					
ANR	8451870	Identifier	i		8451062	1					
ANR	8451871	Identifier	data		8451062	1					
ANR	8451872	PrimaryExpression	0		8451062	1					
ANR	8451873	IfStatement	if ( data )		8451062	4					
ANR	8451874	Condition	data	749:16:20620:20623	8451062	0	True				
ANR	8451875	Identifier	data		8451062	0					
ANR	8451876	CompoundStatement		133:16:5485:5526	8451062	1					
ANR	8451877	IdentifierDeclStatement	uint size = src -> glyphs . table [ i ] . data_len ;	750:16:20644:20685	8451062	0	True				
ANR	8451878	IdentifierDecl	size = src -> glyphs . table [ i ] . data_len		8451062	0					
ANR	8451879	IdentifierDeclType	uint		8451062	0					
ANR	8451880	Identifier	size		8451062	1					
ANR	8451881	AssignmentExpression	size = src -> glyphs . table [ i ] . data_len		8451062	2		=			
ANR	8451882	Identifier	size		8451062	0					
ANR	8451883	MemberAccess	src -> glyphs . table [ i ] . data_len		8451062	1					
ANR	8451884	ArrayIndexing	src -> glyphs . table [ i ]		8451062	0					
ANR	8451885	MemberAccess	src -> glyphs . table		8451062	0					
ANR	8451886	PtrMemberAccess	src -> glyphs		8451062	0					
ANR	8451887	Identifier	src		8451062	0					
ANR	8451888	Identifier	glyphs		8451062	1					
ANR	8451889	Identifier	table		8451062	1					
ANR	8451890	Identifier	i		8451062	1					
ANR	8451891	Identifier	data_len		8451062	1					
ANR	8451892	ExpressionStatement	"char_data = gs_alloc_bytes ( mem , size , cname )"	751:16:20703:20747	8451062	1	True				
ANR	8451893	AssignmentExpression	"char_data = gs_alloc_bytes ( mem , size , cname )"		8451062	0		=			
ANR	8451894	Identifier	char_data		8451062	0					
ANR	8451895	CallExpression	"gs_alloc_bytes ( mem , size , cname )"		8451062	1					
ANR	8451896	Callee	gs_alloc_bytes		8451062	0					
ANR	8451897	Identifier	gs_alloc_bytes		8451062	0					
ANR	8451898	ArgumentList	mem		8451062	1					
ANR	8451899	Argument	mem		8451062	0					
ANR	8451900	Identifier	mem		8451062	0					
ANR	8451901	Argument	size		8451062	1					
ANR	8451902	Identifier	size		8451062	0					
ANR	8451903	Argument	cname		8451062	2					
ANR	8451904	Identifier	cname		8451062	0					
ANR	8451905	IfStatement	if ( char_data == 0 )		8451062	2					
ANR	8451906	Condition	char_data == 0	752:20:20769:20782	8451062	0	True				
ANR	8451907	EqualityExpression	char_data == 0		8451062	0		==			
ANR	8451908	Identifier	char_data		8451062	0					
ANR	8451909	PrimaryExpression	0		8451062	1					
ANR	8451910	ReturnStatement	return 0 ;	753:20:20805:20813	8451062	1	True				
ANR	8451911	PrimaryExpression	0		8451062	0					
ANR	8451912	ExpressionStatement	"memcpy ( char_data , data , size )"	754:16:20831:20860	8451062	3	True				
ANR	8451913	CallExpression	"memcpy ( char_data , data , size )"		8451062	0					
ANR	8451914	Callee	memcpy		8451062	0					
ANR	8451915	Identifier	memcpy		8451062	0					
ANR	8451916	ArgumentList	char_data		8451062	1					
ANR	8451917	Argument	char_data		8451062	0					
ANR	8451918	Identifier	char_data		8451062	0					
ANR	8451919	Argument	data		8451062	1					
ANR	8451920	Identifier	data		8451062	0					
ANR	8451921	Argument	size		8451062	2					
ANR	8451922	Identifier	size		8451062	0					
ANR	8451923	ExpressionStatement	plfont -> glyphs . table [ i ] . data = char_data	755:16:20878:20918	8451062	4	True				
ANR	8451924	AssignmentExpression	plfont -> glyphs . table [ i ] . data = char_data		8451062	0		=			
ANR	8451925	MemberAccess	plfont -> glyphs . table [ i ] . data		8451062	0					
ANR	8451926	ArrayIndexing	plfont -> glyphs . table [ i ]		8451062	0					
ANR	8451927	MemberAccess	plfont -> glyphs . table		8451062	0					
ANR	8451928	PtrMemberAccess	plfont -> glyphs		8451062	0					
ANR	8451929	Identifier	plfont		8451062	0					
ANR	8451930	Identifier	glyphs		8451062	1					
ANR	8451931	Identifier	table		8451062	1					
ANR	8451932	Identifier	i		8451062	1					
ANR	8451933	Identifier	data		8451062	1					
ANR	8451934	Identifier	char_data		8451062	1					
ANR	8451935	ExpressionStatement	plfont -> glyphs . table [ i ] . data_len = size	756:16:20936:20975	8451062	5	True				
ANR	8451936	AssignmentExpression	plfont -> glyphs . table [ i ] . data_len = size		8451062	0		=			
ANR	8451937	MemberAccess	plfont -> glyphs . table [ i ] . data_len		8451062	0					
ANR	8451938	ArrayIndexing	plfont -> glyphs . table [ i ]		8451062	0					
ANR	8451939	MemberAccess	plfont -> glyphs . table		8451062	0					
ANR	8451940	PtrMemberAccess	plfont -> glyphs		8451062	0					
ANR	8451941	Identifier	plfont		8451062	0					
ANR	8451942	Identifier	glyphs		8451062	1					
ANR	8451943	Identifier	table		8451062	1					
ANR	8451944	Identifier	i		8451062	1					
ANR	8451945	Identifier	data_len		8451062	1					
ANR	8451946	Identifier	size		8451062	1					
ANR	8451947	ElseStatement	else		8451062	0					
ANR	8451948	ExpressionStatement	plfont -> glyphs = src -> glyphs	761:8:21063:21091	8451062	0	True				
ANR	8451949	AssignmentExpression	plfont -> glyphs = src -> glyphs		8451062	0		=			
ANR	8451950	PtrMemberAccess	plfont -> glyphs		8451062	0					
ANR	8451951	Identifier	plfont		8451062	0					
ANR	8451952	Identifier	glyphs		8451062	1					
ANR	8451953	PtrMemberAccess	src -> glyphs		8451062	1					
ANR	8451954	Identifier	src		8451062	0					
ANR	8451955	Identifier	glyphs		8451062	1					
ANR	8451956	ReturnStatement	return plfont ;	762:4:21097:21110	8451062	28	True				
ANR	8451957	Identifier	plfont		8451062	0					
ANR	8451958	ReturnType	pl_font_t *		8451062	1					
ANR	8451959	Identifier	pl_clone_font		8451062	2					
ANR	8451960	ParameterList	"const pl_font_t * src , gs_memory_t * mem , client_name_t cname"		8451062	3					
ANR	8451961	Parameter	const pl_font_t * src	617:14:15095:15115	8451062	0	True				
ANR	8451962	ParameterType	const pl_font_t *		8451062	0					
ANR	8451963	Identifier	src		8451062	1					
ANR	8451964	Parameter	gs_memory_t * mem	617:37:15118:15134	8451062	1	True				
ANR	8451965	ParameterType	gs_memory_t *		8451062	0					
ANR	8451966	Identifier	mem		8451062	1					
ANR	8451967	Parameter	client_name_t cname	617:56:15137:15155	8451062	2	True				
ANR	8451968	ParameterType	client_name_t		8451062	0					
ANR	8451969	Identifier	cname		8451062	1					
ANR	8451970	CFGEntryNode	ENTRY		8451062		True				
ANR	8451971	CFGExitNode	EXIT		8451062		True				
ANR	8451972	Symbol	src -> params		8451062						
ANR	8451973	Symbol	plfont -> widths_cache_nitems		8451062						
ANR	8451974	Symbol	src -> font_file_loaded		8451062						
ANR	8451975	Symbol	src -> glyphs		8451062						
ANR	8451976	Symbol	plfont -> header		8451062						
ANR	8451977	Symbol	char_glyphs		8451062						
ANR	8451978	Symbol	plfont		8451062						
ANR	8451979	Symbol	pl_tt_get_outline		8451062						
ANR	8451980	Symbol	gs_next_ids		8451062						
ANR	8451981	Symbol	plfont -> orient		8451062						
ANR	8451982	Symbol	src -> glyphs . table [ i ] . glyph		8451062						
ANR	8451983	Symbol	src -> offsets		8451062						
ANR	8451984	Symbol	plfont -> font_type		8451062						
ANR	8451985	Symbol	plfont -> glyphs . table [ i ] . glyph		8451062						
ANR	8451986	Symbol	src -> resolution		8451062						
ANR	8451987	Symbol	plfont -> storage		8451062						
ANR	8451988	Symbol	plfont -> glyphs . table		8451062						
ANR	8451989	Symbol	src -> font_file		8451062						
ANR	8451990	Symbol	* src -> pfont		8451062						
ANR	8451991	Symbol	src -> char_metrics		8451062						
ANR	8451992	Symbol	plfont -> character_complement		8451062						
ANR	8451993	Symbol	size		8451062						
ANR	8451994	Symbol	src -> glyphs . table		8451062						
ANR	8451995	Symbol	plfont -> pts_per_inch		8451062						
ANR	8451996	Symbol	src -> char_width		8451062						
ANR	8451997	Symbol	src -> font_type		8451062						
ANR	8451998	Symbol	src -> char_glyphs		8451062						
ANR	8451999	Symbol	* char_glyphs		8451062						
ANR	8452000	Symbol	pfont_src -> data . get_outline		8451062						
ANR	8452001	Symbol	* src -> char_glyphs . table		8451062						
ANR	8452002	Symbol	plfont -> font_file		8451062						
ANR	8452003	Symbol	src -> storage		8451062						
ANR	8452004	Symbol	plfont -> char_glyphs . table		8451062						
ANR	8452005	Symbol	src -> scaling_technology		8451062						
ANR	8452006	Symbol	i		8451062						
ANR	8452007	Symbol	src -> glyphs . size		8451062						
ANR	8452008	Symbol	plfont -> glyphs . size		8451062						
ANR	8452009	Symbol	src -> pts_per_inch		8451062						
ANR	8452010	Symbol	src -> is_xl_format		8451062						
ANR	8452011	Symbol	plfont -> char_metrics		8451062						
ANR	8452012	Symbol	plfont -> glyphs		8451062						
ANR	8452013	Symbol	& st_gs_font_type42		8451062						
ANR	8452014	Symbol	gs_alloc_byte_array		8451062						
ANR	8452015	Symbol	plfont -> scaling_technology		8451062						
ANR	8452016	Symbol	plfont -> char_width		8451062						
ANR	8452017	Symbol	src -> header		8451062						
ANR	8452018	Symbol	data		8451062						
ANR	8452019	Symbol	src -> glyphs . table [ i ] . data_len		8451062						
ANR	8452020	Symbol	plfont -> glyphs . limit		8451062						
ANR	8452021	Symbol	src -> orient		8451062						
ANR	8452022	Symbol	* src -> glyphs . table		8451062						
ANR	8452023	Symbol	plfont -> large_sizes		8451062						
ANR	8452024	Symbol	gs_font_base		8451062						
ANR	8452025	Symbol	* src		8451062						
ANR	8452026	Symbol	plfont -> glyphs . used		8451062						
ANR	8452027	Symbol	src -> allow_vertical_substitutes		8451062						
ANR	8452028	Symbol	strlen		8451062						
ANR	8452029	Symbol	src -> large_sizes		8451062						
ANR	8452030	Symbol	pfont_src -> data		8451062						
ANR	8452031	Symbol	* plfont -> glyphs		8451062						
ANR	8452032	Symbol	plfont -> font_file_loaded		8451062						
ANR	8452033	Symbol	pl_font_t		8451062						
ANR	8452034	Symbol	& st_gs_font_base		8451062						
ANR	8452035	Symbol	* pfont_src		8451062						
ANR	8452036	Symbol	* src -> character_complement		8451062						
ANR	8452037	Symbol	gs_alloc_struct_array		8451062						
ANR	8452038	Symbol	pl_font_glyph_t		8451062						
ANR	8452039	Symbol	src -> glyphs . table [ i ] . data		8451062						
ANR	8452040	Symbol	plfont -> header_size		8451062						
ANR	8452041	Symbol	NULL		8451062						
ANR	8452042	Symbol	* * plfont		8451062						
ANR	8452043	Symbol	pfont_src		8451062						
ANR	8452044	Symbol	src -> glyphs . used		8451062						
ANR	8452045	Symbol	plfont -> is_xl_format		8451062						
ANR	8452046	Symbol	src -> pfont		8451062						
ANR	8452047	Symbol	plfont -> glyphs . table [ i ] . data_len		8451062						
ANR	8452048	Symbol	downloaded		8451062						
ANR	8452049	Symbol	src -> char_glyphs . table		8451062						
ANR	8452050	Symbol	src -> pfont -> dir		8451062						
ANR	8452051	Symbol	* * src		8451062						
ANR	8452052	Symbol	* plfont -> glyphs . table		8451062						
ANR	8452053	Symbol	plfont -> widths_cache		8451062						
ANR	8452054	Symbol	src -> header_size		8451062						
ANR	8452055	Symbol	gs_alloc_struct		8451062						
ANR	8452056	Symbol	src -> character_complement		8451062						
ANR	8452057	Symbol	cname		8451062						
ANR	8452058	Symbol	plfont -> char_glyphs		8451062						
ANR	8452059	Symbol	* plfont -> character_complement		8451062						
ANR	8452060	Symbol	plfont -> glyphs . table [ i ] . data		8451062						
ANR	8452061	Symbol	mem		8451062						
ANR	8452062	Symbol	& st_pl_font_glyph_element_f		8451062						
ANR	8452063	Symbol	plfont -> allow_vertical_substitutes		8451062						
ANR	8452064	Symbol	src -> char_glyphs . size		8451062						
ANR	8452065	Symbol	src -> glyphs . limit		8451062						
ANR	8452066	Symbol	gs_alloc_bytes		8451062						
ANR	8452067	Symbol	src		8451062						
ANR	8452068	Symbol	pfont		8451062						
ANR	8452069	Symbol	src -> glyphs . skip		8451062						
ANR	8452070	Symbol	plfont -> resolution		8451062						
ANR	8452071	Symbol	plfont -> offsets		8451062						
ANR	8452072	Symbol	char_data		8451062						
ANR	8452073	Symbol	src -> bold_fraction		8451062						
ANR	8452074	Symbol	plfont -> glyphs . skip		8451062						
ANR	8452075	Symbol	* src -> char_glyphs		8451062						
ANR	8452076	Symbol	* src -> glyphs		8451062						
ANR	8452077	Symbol	* i		8451062						
ANR	8452078	Symbol	plfont -> bold_fraction		8451062						
ANR	8452079	Symbol	plfont -> params		8451062						
ANR	8452080	Symbol	* plfont		8451062						
ANR	8452081	Symbol	& st_pl_font		8451062						
ANR	8452082	Symbol	gs_font_type42		8451062						
ANR	8452083	Function	pl_fill_in_font	769:0:21368:23133							
ANR	8452084	FunctionDef	"pl_fill_in_font (gs_font * pfont , pl_font_t * plfont , gs_font_dir * pdir , gs_memory_t * mem , const char * font_name)"		8452083	0					
ANR	8452085	CompoundStatement		772:0:21503:23133	8452083	0					
ANR	8452086	IdentifierDeclStatement	gs_font_base * pbfont = ( gs_font_base * ) pfont ;	773:4:21509:21554	8452083	0	True				
ANR	8452087	IdentifierDecl	* pbfont = ( gs_font_base * ) pfont		8452083	0					
ANR	8452088	IdentifierDeclType	gs_font_base *		8452083	0					
ANR	8452089	Identifier	pbfont		8452083	1					
ANR	8452090	AssignmentExpression	* pbfont = ( gs_font_base * ) pfont		8452083	2		=			
ANR	8452091	Identifier	pbfont		8452083	0					
ANR	8452092	CastExpression	( gs_font_base * ) pfont		8452083	1					
ANR	8452093	CastTarget	gs_font_base *		8452083	0					
ANR	8452094	Identifier	pfont		8452083	1					
ANR	8452095	ExpressionStatement	plfont -> pfont = pfont	775:4:21561:21582	8452083	1	True				
ANR	8452096	AssignmentExpression	plfont -> pfont = pfont		8452083	0		=			
ANR	8452097	PtrMemberAccess	plfont -> pfont		8452083	0					
ANR	8452098	Identifier	plfont		8452083	0					
ANR	8452099	Identifier	pfont		8452083	1					
ANR	8452100	Identifier	pfont		8452083	1					
ANR	8452101	ExpressionStatement	gs_make_identity ( & pbfont -> orig_FontMatrix )	777:4:21628:21670	8452083	2	True				
ANR	8452102	CallExpression	gs_make_identity ( & pbfont -> orig_FontMatrix )		8452083	0					
ANR	8452103	Callee	gs_make_identity		8452083	0					
ANR	8452104	Identifier	gs_make_identity		8452083	0					
ANR	8452105	ArgumentList	& pbfont -> orig_FontMatrix		8452083	1					
ANR	8452106	Argument	& pbfont -> orig_FontMatrix		8452083	0					
ANR	8452107	UnaryOperationExpression	& pbfont -> orig_FontMatrix		8452083	0					
ANR	8452108	UnaryOperator	&		8452083	0					
ANR	8452109	PtrMemberAccess	pbfont -> orig_FontMatrix		8452083	1					
ANR	8452110	Identifier	pbfont		8452083	0					
ANR	8452111	Identifier	orig_FontMatrix		8452083	1					
ANR	8452112	ExpressionStatement	gs_make_identity ( & pbfont -> FontMatrix )	778:4:21676:21713	8452083	3	True				
ANR	8452113	CallExpression	gs_make_identity ( & pbfont -> FontMatrix )		8452083	0					
ANR	8452114	Callee	gs_make_identity		8452083	0					
ANR	8452115	Identifier	gs_make_identity		8452083	0					
ANR	8452116	ArgumentList	& pbfont -> FontMatrix		8452083	1					
ANR	8452117	Argument	& pbfont -> FontMatrix		8452083	0					
ANR	8452118	UnaryOperationExpression	& pbfont -> FontMatrix		8452083	0					
ANR	8452119	UnaryOperator	&		8452083	0					
ANR	8452120	PtrMemberAccess	pbfont -> FontMatrix		8452083	1					
ANR	8452121	Identifier	pbfont		8452083	0					
ANR	8452122	Identifier	FontMatrix		8452083	1					
ANR	8452123	ExpressionStatement	pbfont -> next = pbfont -> prev = 0	779:4:21719:21750	8452083	4	True				
ANR	8452124	AssignmentExpression	pbfont -> next = pbfont -> prev = 0		8452083	0		=			
ANR	8452125	PtrMemberAccess	pbfont -> next		8452083	0					
ANR	8452126	Identifier	pbfont		8452083	0					
ANR	8452127	Identifier	next		8452083	1					
ANR	8452128	AssignmentExpression	pbfont -> prev = 0		8452083	1		=			
ANR	8452129	PtrMemberAccess	pbfont -> prev		8452083	0					
ANR	8452130	Identifier	pbfont		8452083	0					
ANR	8452131	Identifier	prev		8452083	1					
ANR	8452132	PrimaryExpression	0		8452083	1					
ANR	8452133	ExpressionStatement	pbfont -> memory = mem	780:4:21756:21776	8452083	5	True				
ANR	8452134	AssignmentExpression	pbfont -> memory = mem		8452083	0		=			
ANR	8452135	PtrMemberAccess	pbfont -> memory		8452083	0					
ANR	8452136	Identifier	pbfont		8452083	0					
ANR	8452137	Identifier	memory		8452083	1					
ANR	8452138	Identifier	mem		8452083	1					
ANR	8452139	ExpressionStatement	pbfont -> dir = pdir	781:4:21782:21800	8452083	6	True				
ANR	8452140	AssignmentExpression	pbfont -> dir = pdir		8452083	0		=			
ANR	8452141	PtrMemberAccess	pbfont -> dir		8452083	0					
ANR	8452142	Identifier	pbfont		8452083	0					
ANR	8452143	Identifier	dir		8452083	1					
ANR	8452144	Identifier	pdir		8452083	1					
ANR	8452145	ExpressionStatement	pbfont -> is_resource = false	782:4:21806:21833	8452083	7	True				
ANR	8452146	AssignmentExpression	pbfont -> is_resource = false		8452083	0		=			
ANR	8452147	PtrMemberAccess	pbfont -> is_resource		8452083	0					
ANR	8452148	Identifier	pbfont		8452083	0					
ANR	8452149	Identifier	is_resource		8452083	1					
ANR	8452150	Identifier	false		8452083	1					
ANR	8452151	ExpressionStatement	"gs_notify_init ( & pbfont -> notify_list , gs_memory_stable ( mem ) )"	783:4:21839:21898	8452083	8	True				
ANR	8452152	CallExpression	"gs_notify_init ( & pbfont -> notify_list , gs_memory_stable ( mem ) )"		8452083	0					
ANR	8452153	Callee	gs_notify_init		8452083	0					
ANR	8452154	Identifier	gs_notify_init		8452083	0					
ANR	8452155	ArgumentList	& pbfont -> notify_list		8452083	1					
ANR	8452156	Argument	& pbfont -> notify_list		8452083	0					
ANR	8452157	UnaryOperationExpression	& pbfont -> notify_list		8452083	0					
ANR	8452158	UnaryOperator	&		8452083	0					
ANR	8452159	PtrMemberAccess	pbfont -> notify_list		8452083	1					
ANR	8452160	Identifier	pbfont		8452083	0					
ANR	8452161	Identifier	notify_list		8452083	1					
ANR	8452162	Argument	gs_memory_stable ( mem )		8452083	1					
ANR	8452163	CallExpression	gs_memory_stable ( mem )		8452083	0					
ANR	8452164	Callee	gs_memory_stable		8452083	0					
ANR	8452165	Identifier	gs_memory_stable		8452083	0					
ANR	8452166	ArgumentList	mem		8452083	1					
ANR	8452167	Argument	mem		8452083	0					
ANR	8452168	Identifier	mem		8452083	0					
ANR	8452169	ExpressionStatement	pbfont -> base = ( gs_font * ) pbfont	784:4:21904:21937	8452083	9	True				
ANR	8452170	AssignmentExpression	pbfont -> base = ( gs_font * ) pbfont		8452083	0		=			
ANR	8452171	PtrMemberAccess	pbfont -> base		8452083	0					
ANR	8452172	Identifier	pbfont		8452083	0					
ANR	8452173	Identifier	base		8452083	1					
ANR	8452174	CastExpression	( gs_font * ) pbfont		8452083	1					
ANR	8452175	CastTarget	gs_font *		8452083	0					
ANR	8452176	Identifier	pbfont		8452083	1					
ANR	8452177	ExpressionStatement	pbfont -> client_data = plfont	785:4:21943:21971	8452083	10	True				
ANR	8452178	AssignmentExpression	pbfont -> client_data = plfont		8452083	0		=			
ANR	8452179	PtrMemberAccess	pbfont -> client_data		8452083	0					
ANR	8452180	Identifier	pbfont		8452083	0					
ANR	8452181	Identifier	client_data		8452083	1					
ANR	8452182	Identifier	plfont		8452083	1					
ANR	8452183	ExpressionStatement	pbfont -> WMode = 0	786:4:21977:21994	8452083	11	True				
ANR	8452184	AssignmentExpression	pbfont -> WMode = 0		8452083	0		=			
ANR	8452185	PtrMemberAccess	pbfont -> WMode		8452083	0					
ANR	8452186	Identifier	pbfont		8452083	0					
ANR	8452187	Identifier	WMode		8452083	1					
ANR	8452188	PrimaryExpression	0		8452083	1					
ANR	8452189	ExpressionStatement	pbfont -> PaintType = 0	787:4:22000:22021	8452083	12	True				
ANR	8452190	AssignmentExpression	pbfont -> PaintType = 0		8452083	0		=			
ANR	8452191	PtrMemberAccess	pbfont -> PaintType		8452083	0					
ANR	8452192	Identifier	pbfont		8452083	0					
ANR	8452193	Identifier	PaintType		8452083	1					
ANR	8452194	PrimaryExpression	0		8452083	1					
ANR	8452195	ExpressionStatement	pbfont -> StrokeWidth = 0	788:4:22027:22050	8452083	13	True				
ANR	8452196	AssignmentExpression	pbfont -> StrokeWidth = 0		8452083	0		=			
ANR	8452197	PtrMemberAccess	pbfont -> StrokeWidth		8452083	0					
ANR	8452198	Identifier	pbfont		8452083	0					
ANR	8452199	Identifier	StrokeWidth		8452083	1					
ANR	8452200	PrimaryExpression	0		8452083	1					
ANR	8452201	ExpressionStatement	pbfont -> is_cached = 0	789:4:22056:22077	8452083	14	True				
ANR	8452202	AssignmentExpression	pbfont -> is_cached = 0		8452083	0		=			
ANR	8452203	PtrMemberAccess	pbfont -> is_cached		8452083	0					
ANR	8452204	Identifier	pbfont		8452083	0					
ANR	8452205	Identifier	is_cached		8452083	1					
ANR	8452206	PrimaryExpression	0		8452083	1					
ANR	8452207	ExpressionStatement	pbfont -> procs . init_fstack = gs_default_init_fstack	790:4:22083:22133	8452083	15	True				
ANR	8452208	AssignmentExpression	pbfont -> procs . init_fstack = gs_default_init_fstack		8452083	0		=			
ANR	8452209	MemberAccess	pbfont -> procs . init_fstack		8452083	0					
ANR	8452210	PtrMemberAccess	pbfont -> procs		8452083	0					
ANR	8452211	Identifier	pbfont		8452083	0					
ANR	8452212	Identifier	procs		8452083	1					
ANR	8452213	Identifier	init_fstack		8452083	1					
ANR	8452214	Identifier	gs_default_init_fstack		8452083	1					
ANR	8452215	ExpressionStatement	pbfont -> procs . next_char_glyph = gs_default_next_char_glyph	791:4:22139:22197	8452083	16	True				
ANR	8452216	AssignmentExpression	pbfont -> procs . next_char_glyph = gs_default_next_char_glyph		8452083	0		=			
ANR	8452217	MemberAccess	pbfont -> procs . next_char_glyph		8452083	0					
ANR	8452218	PtrMemberAccess	pbfont -> procs		8452083	0					
ANR	8452219	Identifier	pbfont		8452083	0					
ANR	8452220	Identifier	procs		8452083	1					
ANR	8452221	Identifier	next_char_glyph		8452083	1					
ANR	8452222	Identifier	gs_default_next_char_glyph		8452083	1					
ANR	8452223	ExpressionStatement	pbfont -> FAPI = NULL	792:4:22203:22222	8452083	17	True				
ANR	8452224	AssignmentExpression	pbfont -> FAPI = NULL		8452083	0		=			
ANR	8452225	PtrMemberAccess	pbfont -> FAPI		8452083	0					
ANR	8452226	Identifier	pbfont		8452083	0					
ANR	8452227	Identifier	FAPI		8452083	1					
ANR	8452228	Identifier	NULL		8452083	1					
ANR	8452229	ExpressionStatement	pbfont -> FAPI_font_data = NULL	793:4:22228:22257	8452083	18	True				
ANR	8452230	AssignmentExpression	pbfont -> FAPI_font_data = NULL		8452083	0		=			
ANR	8452231	PtrMemberAccess	pbfont -> FAPI_font_data		8452083	0					
ANR	8452232	Identifier	pbfont		8452083	0					
ANR	8452233	Identifier	FAPI_font_data		8452083	1					
ANR	8452234	Identifier	NULL		8452083	1					
ANR	8452235	ExpressionStatement	pbfont -> procs . glyph_name = pl_glyph_name	795:4:22264:22304	8452083	19	True				
ANR	8452236	AssignmentExpression	pbfont -> procs . glyph_name = pl_glyph_name		8452083	0		=			
ANR	8452237	MemberAccess	pbfont -> procs . glyph_name		8452083	0					
ANR	8452238	PtrMemberAccess	pbfont -> procs		8452083	0					
ANR	8452239	Identifier	pbfont		8452083	0					
ANR	8452240	Identifier	procs		8452083	1					
ANR	8452241	Identifier	glyph_name		8452083	1					
ANR	8452242	Identifier	pl_glyph_name		8452083	1					
ANR	8452243	ExpressionStatement	pbfont -> procs . decode_glyph = pl_decode_glyph	796:4:22310:22354	8452083	20	True				
ANR	8452244	AssignmentExpression	pbfont -> procs . decode_glyph = pl_decode_glyph		8452083	0		=			
ANR	8452245	MemberAccess	pbfont -> procs . decode_glyph		8452083	0					
ANR	8452246	PtrMemberAccess	pbfont -> procs		8452083	0					
ANR	8452247	Identifier	pbfont		8452083	0					
ANR	8452248	Identifier	procs		8452083	1					
ANR	8452249	Identifier	decode_glyph		8452083	1					
ANR	8452250	Identifier	pl_decode_glyph		8452083	1					
ANR	8452251	ExpressionStatement	pbfont -> procs . define_font = gs_no_define_font	798:4:22429:22474	8452083	21	True				
ANR	8452252	AssignmentExpression	pbfont -> procs . define_font = gs_no_define_font		8452083	0		=			
ANR	8452253	MemberAccess	pbfont -> procs . define_font		8452083	0					
ANR	8452254	PtrMemberAccess	pbfont -> procs		8452083	0					
ANR	8452255	Identifier	pbfont		8452083	0					
ANR	8452256	Identifier	procs		8452083	1					
ANR	8452257	Identifier	define_font		8452083	1					
ANR	8452258	Identifier	gs_no_define_font		8452083	1					
ANR	8452259	ExpressionStatement	pbfont -> procs . make_font = gs_no_make_font	799:4:22480:22521	8452083	22	True				
ANR	8452260	AssignmentExpression	pbfont -> procs . make_font = gs_no_make_font		8452083	0		=			
ANR	8452261	MemberAccess	pbfont -> procs . make_font		8452083	0					
ANR	8452262	PtrMemberAccess	pbfont -> procs		8452083	0					
ANR	8452263	Identifier	pbfont		8452083	0					
ANR	8452264	Identifier	procs		8452083	1					
ANR	8452265	Identifier	make_font		8452083	1					
ANR	8452266	Identifier	gs_no_make_font		8452083	1					
ANR	8452267	ExpressionStatement	pbfont -> procs . font_info = gs_default_font_info	800:4:22527:22573	8452083	23	True				
ANR	8452268	AssignmentExpression	pbfont -> procs . font_info = gs_default_font_info		8452083	0		=			
ANR	8452269	MemberAccess	pbfont -> procs . font_info		8452083	0					
ANR	8452270	PtrMemberAccess	pbfont -> procs		8452083	0					
ANR	8452271	Identifier	pbfont		8452083	0					
ANR	8452272	Identifier	procs		8452083	1					
ANR	8452273	Identifier	font_info		8452083	1					
ANR	8452274	Identifier	gs_default_font_info		8452083	1					
ANR	8452275	ExpressionStatement	pbfont -> procs . glyph_info = gs_default_glyph_info	801:4:22579:22627	8452083	24	True				
ANR	8452276	AssignmentExpression	pbfont -> procs . glyph_info = gs_default_glyph_info		8452083	0		=			
ANR	8452277	MemberAccess	pbfont -> procs . glyph_info		8452083	0					
ANR	8452278	PtrMemberAccess	pbfont -> procs		8452083	0					
ANR	8452279	Identifier	pbfont		8452083	0					
ANR	8452280	Identifier	procs		8452083	1					
ANR	8452281	Identifier	glyph_info		8452083	1					
ANR	8452282	Identifier	gs_default_glyph_info		8452083	1					
ANR	8452283	ExpressionStatement	pbfont -> procs . glyph_outline = gs_no_glyph_outline	802:4:22633:22682	8452083	25	True				
ANR	8452284	AssignmentExpression	pbfont -> procs . glyph_outline = gs_no_glyph_outline		8452083	0		=			
ANR	8452285	MemberAccess	pbfont -> procs . glyph_outline		8452083	0					
ANR	8452286	PtrMemberAccess	pbfont -> procs		8452083	0					
ANR	8452287	Identifier	pbfont		8452083	0					
ANR	8452288	Identifier	procs		8452083	1					
ANR	8452289	Identifier	glyph_outline		8452083	1					
ANR	8452290	Identifier	gs_no_glyph_outline		8452083	1					
ANR	8452291	ExpressionStatement	"pbfont -> id = gs_next_ids ( mem , 1 )"	803:4:22688:22720	8452083	26	True				
ANR	8452292	AssignmentExpression	"pbfont -> id = gs_next_ids ( mem , 1 )"		8452083	0		=			
ANR	8452293	PtrMemberAccess	pbfont -> id		8452083	0					
ANR	8452294	Identifier	pbfont		8452083	0					
ANR	8452295	Identifier	id		8452083	1					
ANR	8452296	CallExpression	"gs_next_ids ( mem , 1 )"		8452083	1					
ANR	8452297	Callee	gs_next_ids		8452083	0					
ANR	8452298	Identifier	gs_next_ids		8452083	0					
ANR	8452299	ArgumentList	mem		8452083	1					
ANR	8452300	Argument	mem		8452083	0					
ANR	8452301	Identifier	mem		8452083	0					
ANR	8452302	Argument	1		8452083	1					
ANR	8452303	PrimaryExpression	1		8452083	0					
ANR	8452304	CompoundStatement		36:8:1319:1356	8452083	27					
ANR	8452305	IdentifierDeclStatement	size_t sz = strlen ( font_name ) ;	805:8:22736:22765	8452083	0	True				
ANR	8452306	IdentifierDecl	sz = strlen ( font_name )		8452083	0					
ANR	8452307	IdentifierDeclType	size_t		8452083	0					
ANR	8452308	Identifier	sz		8452083	1					
ANR	8452309	AssignmentExpression	sz = strlen ( font_name )		8452083	2		=			
ANR	8452310	Identifier	sz		8452083	0					
ANR	8452311	CallExpression	strlen ( font_name )		8452083	1					
ANR	8452312	Callee	strlen		8452083	0					
ANR	8452313	Identifier	strlen		8452083	0					
ANR	8452314	ArgumentList	font_name		8452083	1					
ANR	8452315	Argument	font_name		8452083	0					
ANR	8452316	Identifier	font_name		8452083	0					
ANR	8452317	IdentifierDeclStatement	gs_font_name * fnm = & pbfont -> font_name ;	806:8:22775:22813	8452083	1	True				
ANR	8452318	IdentifierDecl	* fnm = & pbfont -> font_name		8452083	0					
ANR	8452319	IdentifierDeclType	gs_font_name *		8452083	0					
ANR	8452320	Identifier	fnm		8452083	1					
ANR	8452321	AssignmentExpression	* fnm = & pbfont -> font_name		8452083	2		=			
ANR	8452322	Identifier	fnm		8452083	0					
ANR	8452323	UnaryOperationExpression	& pbfont -> font_name		8452083	1					
ANR	8452324	UnaryOperator	&		8452083	0					
ANR	8452325	PtrMemberAccess	pbfont -> font_name		8452083	1					
ANR	8452326	Identifier	pbfont		8452083	0					
ANR	8452327	Identifier	font_name		8452083	1					
ANR	8452328	IdentifierDeclStatement	gs_font_name * knm = & pbfont -> key_name ;	807:8:22823:22860	8452083	2	True				
ANR	8452329	IdentifierDecl	* knm = & pbfont -> key_name		8452083	0					
ANR	8452330	IdentifierDeclType	gs_font_name *		8452083	0					
ANR	8452331	Identifier	knm		8452083	1					
ANR	8452332	AssignmentExpression	* knm = & pbfont -> key_name		8452083	2		=			
ANR	8452333	Identifier	knm		8452083	0					
ANR	8452334	UnaryOperationExpression	& pbfont -> key_name		8452083	1					
ANR	8452335	UnaryOperator	&		8452083	0					
ANR	8452336	PtrMemberAccess	pbfont -> key_name		8452083	1					
ANR	8452337	Identifier	pbfont		8452083	0					
ANR	8452338	Identifier	key_name		8452083	1					
ANR	8452339	IfStatement	if ( sz > gs_font_name_max )		8452083	3					
ANR	8452340	Condition	sz > gs_font_name_max	809:12:22875:22895	8452083	0	True				
ANR	8452341	RelationalExpression	sz > gs_font_name_max		8452083	0		>			
ANR	8452342	Identifier	sz		8452083	0					
ANR	8452343	Identifier	gs_font_name_max		8452083	1					
ANR	8452344	ExpressionStatement	sz = gs_font_name_max	810:12:22910:22931	8452083	1	True				
ANR	8452345	AssignmentExpression	sz = gs_font_name_max		8452083	0		=			
ANR	8452346	Identifier	sz		8452083	0					
ANR	8452347	Identifier	gs_font_name_max		8452083	1					
ANR	8452348	ExpressionStatement	fnm -> size = knm -> size = sz	811:8:22941:22967	8452083	4	True				
ANR	8452349	AssignmentExpression	fnm -> size = knm -> size = sz		8452083	0		=			
ANR	8452350	PtrMemberAccess	fnm -> size		8452083	0					
ANR	8452351	Identifier	fnm		8452083	0					
ANR	8452352	Identifier	size		8452083	1					
ANR	8452353	AssignmentExpression	knm -> size = sz		8452083	1		=			
ANR	8452354	PtrMemberAccess	knm -> size		8452083	0					
ANR	8452355	Identifier	knm		8452083	0					
ANR	8452356	Identifier	size		8452083	1					
ANR	8452357	Identifier	sz		8452083	1					
ANR	8452358	ExpressionStatement	"memcpy ( fnm -> chars , font_name , sz )"	813:8:22978:23011	8452083	5	True				
ANR	8452359	CallExpression	"memcpy ( fnm -> chars , font_name , sz )"		8452083	0					
ANR	8452360	Callee	memcpy		8452083	0					
ANR	8452361	Identifier	memcpy		8452083	0					
ANR	8452362	ArgumentList	fnm -> chars		8452083	1					
ANR	8452363	Argument	fnm -> chars		8452083	0					
ANR	8452364	PtrMemberAccess	fnm -> chars		8452083	0					
ANR	8452365	Identifier	fnm		8452083	0					
ANR	8452366	Identifier	chars		8452083	1					
ANR	8452367	Argument	font_name		8452083	1					
ANR	8452368	Identifier	font_name		8452083	0					
ANR	8452369	Argument	sz		8452083	2					
ANR	8452370	Identifier	sz		8452083	0					
ANR	8452371	ExpressionStatement	fnm -> chars [ sz ] = 0	814:8:23021:23039	8452083	6	True				
ANR	8452372	AssignmentExpression	fnm -> chars [ sz ] = 0		8452083	0		=			
ANR	8452373	ArrayIndexing	fnm -> chars [ sz ]		8452083	0					
ANR	8452374	PtrMemberAccess	fnm -> chars		8452083	0					
ANR	8452375	Identifier	fnm		8452083	0					
ANR	8452376	Identifier	chars		8452083	1					
ANR	8452377	Identifier	sz		8452083	1					
ANR	8452378	PrimaryExpression	0		8452083	1					
ANR	8452379	ExpressionStatement	"memcpy ( knm -> chars , font_name , sz )"	816:8:23050:23083	8452083	7	True				
ANR	8452380	CallExpression	"memcpy ( knm -> chars , font_name , sz )"		8452083	0					
ANR	8452381	Callee	memcpy		8452083	0					
ANR	8452382	Identifier	memcpy		8452083	0					
ANR	8452383	ArgumentList	knm -> chars		8452083	1					
ANR	8452384	Argument	knm -> chars		8452083	0					
ANR	8452385	PtrMemberAccess	knm -> chars		8452083	0					
ANR	8452386	Identifier	knm		8452083	0					
ANR	8452387	Identifier	chars		8452083	1					
ANR	8452388	Argument	font_name		8452083	1					
ANR	8452389	Identifier	font_name		8452083	0					
ANR	8452390	Argument	sz		8452083	2					
ANR	8452391	Identifier	sz		8452083	0					
ANR	8452392	ExpressionStatement	knm -> chars [ sz ] = 0	817:8:23093:23111	8452083	8	True				
ANR	8452393	AssignmentExpression	knm -> chars [ sz ] = 0		8452083	0		=			
ANR	8452394	ArrayIndexing	knm -> chars [ sz ]		8452083	0					
ANR	8452395	PtrMemberAccess	knm -> chars		8452083	0					
ANR	8452396	Identifier	knm		8452083	0					
ANR	8452397	Identifier	chars		8452083	1					
ANR	8452398	Identifier	sz		8452083	1					
ANR	8452399	PrimaryExpression	0		8452083	1					
ANR	8452400	ReturnStatement	return 0 ;	819:4:23123:23131	8452083	28	True				
ANR	8452401	PrimaryExpression	0		8452083	0					
ANR	8452402	ReturnType	int		8452083	1					
ANR	8452403	Identifier	pl_fill_in_font		8452083	2					
ANR	8452404	ParameterList	"gs_font * pfont , pl_font_t * plfont , gs_font_dir * pdir , gs_memory_t * mem , const char * font_name"		8452083	3					
ANR	8452405	Parameter	gs_font * pfont	770:16:21388:21402	8452083	0	True				
ANR	8452406	ParameterType	gs_font *		8452083	0					
ANR	8452407	Identifier	pfont		8452083	1					
ANR	8452408	Parameter	pl_font_t * plfont	770:33:21405:21422	8452083	1	True				
ANR	8452409	ParameterType	pl_font_t *		8452083	0					
ANR	8452410	Identifier	plfont		8452083	1					
ANR	8452411	Parameter	gs_font_dir * pdir	770:53:21425:21442	8452083	2	True				
ANR	8452412	ParameterType	gs_font_dir *		8452083	0					
ANR	8452413	Identifier	pdir		8452083	1					
ANR	8452414	Parameter	gs_memory_t * mem	771:16:21461:21477	8452083	3	True				
ANR	8452415	ParameterType	gs_memory_t *		8452083	0					
ANR	8452416	Identifier	mem		8452083	1					
ANR	8452417	Parameter	const char * font_name	771:35:21480:21500	8452083	4	True				
ANR	8452418	ParameterType	const char *		8452083	0					
ANR	8452419	Identifier	font_name		8452083	1					
ANR	8452420	CFGEntryNode	ENTRY		8452083		True				
ANR	8452421	CFGExitNode	EXIT		8452083		True				
ANR	8452422	Symbol	gs_default_font_info		8452083						
ANR	8452423	Symbol	pbfont -> procs . define_font		8452083						
ANR	8452424	Symbol	plfont		8452083						
ANR	8452425	Symbol	pbfont -> memory		8452083						
ANR	8452426	Symbol	gs_next_ids		8452083						
ANR	8452427	Symbol	* sz		8452083						
ANR	8452428	Symbol	& pbfont -> notify_list		8452083						
ANR	8452429	Symbol	pbfont -> base		8452083						
ANR	8452430	Symbol	strlen		8452083						
ANR	8452431	Symbol	* knm		8452083						
ANR	8452432	Symbol	pbfont -> StrokeWidth		8452083						
ANR	8452433	Symbol	* pbfont		8452083						
ANR	8452434	Symbol	pbfont -> dir		8452083						
ANR	8452435	Symbol	pbfont -> is_resource		8452083						
ANR	8452436	Symbol	pbfont -> procs . make_font		8452083						
ANR	8452437	Symbol	pbfont -> procs		8452083						
ANR	8452438	Symbol	fnm -> size		8452083						
ANR	8452439	Symbol	NULL		8452083						
ANR	8452440	Symbol	fnm		8452083						
ANR	8452441	Symbol	pbfont -> FAPI		8452083						
ANR	8452442	Symbol	pbfont -> procs . decode_glyph		8452083						
ANR	8452443	Symbol	pdir		8452083						
ANR	8452444	Symbol	gs_no_glyph_outline		8452083						
ANR	8452445	Symbol	pbfont -> procs . next_char_glyph		8452083						
ANR	8452446	Symbol	pbfont -> next		8452083						
ANR	8452447	Symbol	pbfont -> id		8452083						
ANR	8452448	Symbol	& pbfont -> font_name		8452083						
ANR	8452449	Symbol	fnm -> chars		8452083						
ANR	8452450	Symbol	* * knm		8452083						
ANR	8452451	Symbol	pbfont -> procs . glyph_outline		8452083						
ANR	8452452	Symbol	pbfont -> is_cached		8452083						
ANR	8452453	Symbol	* fnm -> chars		8452083						
ANR	8452454	Symbol	pbfont -> procs . init_fstack		8452083						
ANR	8452455	Symbol	gs_default_next_char_glyph		8452083						
ANR	8452456	Symbol	gs_no_make_font		8452083						
ANR	8452457	Symbol	knm -> chars		8452083						
ANR	8452458	Symbol	pbfont -> FAPI_font_data		8452083						
ANR	8452459	Symbol	font_name		8452083						
ANR	8452460	Symbol	pbfont -> PaintType		8452083						
ANR	8452461	Symbol	pbfont -> procs . glyph_name		8452083						
ANR	8452462	Symbol	mem		8452083						
ANR	8452463	Symbol	pl_decode_glyph		8452083						
ANR	8452464	Symbol	gs_default_glyph_info		8452083						
ANR	8452465	Symbol	& pbfont -> key_name		8452083						
ANR	8452466	Symbol	pfont		8452083						
ANR	8452467	Symbol	gs_default_init_fstack		8452083						
ANR	8452468	Symbol	sz		8452083						
ANR	8452469	Symbol	false		8452083						
ANR	8452470	Symbol	pbfont -> procs . glyph_info		8452083						
ANR	8452471	Symbol	* knm -> chars		8452083						
ANR	8452472	Symbol	gs_memory_stable		8452083						
ANR	8452473	Symbol	& pbfont -> orig_FontMatrix		8452083						
ANR	8452474	Symbol	knm		8452083						
ANR	8452475	Symbol	* fnm		8452083						
ANR	8452476	Symbol	pbfont -> WMode		8452083						
ANR	8452477	Symbol	knm -> size		8452083						
ANR	8452478	Symbol	pbfont		8452083						
ANR	8452479	Symbol	plfont -> pfont		8452083						
ANR	8452480	Symbol	pbfont -> prev		8452083						
ANR	8452481	Symbol	* plfont		8452083						
ANR	8452482	Symbol	gs_font_name_max		8452083						
ANR	8452483	Symbol	* * fnm		8452083						
ANR	8452484	Symbol	pbfont -> procs . font_info		8452083						
ANR	8452485	Symbol	pl_glyph_name		8452083						
ANR	8452486	Symbol	gs_no_define_font		8452083						
ANR	8452487	Symbol	& pbfont -> FontMatrix		8452083						
ANR	8452488	Symbol	pbfont -> client_data		8452083						
ANR	8452489	Function	pl_fill_in_bitmap_font	823:0:23175:23826							
ANR	8452490	FunctionDef	"pl_fill_in_bitmap_font (gs_font_base * pfont , long unique_id)"		8452489	0					
ANR	8452491	CompoundStatement		825:0:23241:23826	8452489	0					
ANR	8452492	ExpressionStatement	pfont -> FontType = ft_PCL_user_defined	826:4:23247:23284	8452489	0	True				
ANR	8452493	AssignmentExpression	pfont -> FontType = ft_PCL_user_defined		8452489	0		=			
ANR	8452494	PtrMemberAccess	pfont -> FontType		8452489	0					
ANR	8452495	Identifier	pfont		8452489	0					
ANR	8452496	Identifier	FontType		8452489	1					
ANR	8452497	Identifier	ft_PCL_user_defined		8452489	1					
ANR	8452498	ExpressionStatement	pfont -> BitmapWidths = true	827:4:23290:23316	8452489	1	True				
ANR	8452499	AssignmentExpression	pfont -> BitmapWidths = true		8452489	0		=			
ANR	8452500	PtrMemberAccess	pfont -> BitmapWidths		8452489	0					
ANR	8452501	Identifier	pfont		8452489	0					
ANR	8452502	Identifier	BitmapWidths		8452489	1					
ANR	8452503	Identifier	true		8452489	1					
ANR	8452504	ExpressionStatement	pfont -> ExactSize = fbit_use_bitmaps	828:4:23322:23357	8452489	2	True				
ANR	8452505	AssignmentExpression	pfont -> ExactSize = fbit_use_bitmaps		8452489	0		=			
ANR	8452506	PtrMemberAccess	pfont -> ExactSize		8452489	0					
ANR	8452507	Identifier	pfont		8452489	0					
ANR	8452508	Identifier	ExactSize		8452489	1					
ANR	8452509	Identifier	fbit_use_bitmaps		8452489	1					
ANR	8452510	ExpressionStatement	pfont -> InBetweenSize = fbit_use_bitmaps	829:4:23363:23402	8452489	3	True				
ANR	8452511	AssignmentExpression	pfont -> InBetweenSize = fbit_use_bitmaps		8452489	0		=			
ANR	8452512	PtrMemberAccess	pfont -> InBetweenSize		8452489	0					
ANR	8452513	Identifier	pfont		8452489	0					
ANR	8452514	Identifier	InBetweenSize		8452489	1					
ANR	8452515	Identifier	fbit_use_bitmaps		8452489	1					
ANR	8452516	ExpressionStatement	pfont -> TransformedChar = fbit_transform_bitmaps	830:4:23408:23455	8452489	4	True				
ANR	8452517	AssignmentExpression	pfont -> TransformedChar = fbit_transform_bitmaps		8452489	0		=			
ANR	8452518	PtrMemberAccess	pfont -> TransformedChar		8452489	0					
ANR	8452519	Identifier	pfont		8452489	0					
ANR	8452520	Identifier	TransformedChar		8452489	1					
ANR	8452521	Identifier	fbit_transform_bitmaps		8452489	1					
ANR	8452522	ExpressionStatement	pl_bitmap_init_procs ( pfont )	831:4:23461:23488	8452489	5	True				
ANR	8452523	CallExpression	pl_bitmap_init_procs ( pfont )		8452489	0					
ANR	8452524	Callee	pl_bitmap_init_procs		8452489	0					
ANR	8452525	Identifier	pl_bitmap_init_procs		8452489	0					
ANR	8452526	ArgumentList	pfont		8452489	1					
ANR	8452527	Argument	pfont		8452489	0					
ANR	8452528	Identifier	pfont		8452489	0					
ANR	8452529	ExpressionStatement	pfont -> FontBBox . p . x = pfont -> FontBBox . p . y = pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0	833:4:23549:23646	8452489	6	True				
ANR	8452530	AssignmentExpression	pfont -> FontBBox . p . x = pfont -> FontBBox . p . y = pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0		8452489	0		=			
ANR	8452531	MemberAccess	pfont -> FontBBox . p . x		8452489	0					
ANR	8452532	MemberAccess	pfont -> FontBBox . p		8452489	0					
ANR	8452533	PtrMemberAccess	pfont -> FontBBox		8452489	0					
ANR	8452534	Identifier	pfont		8452489	0					
ANR	8452535	Identifier	FontBBox		8452489	1					
ANR	8452536	Identifier	p		8452489	1					
ANR	8452537	Identifier	x		8452489	1					
ANR	8452538	AssignmentExpression	pfont -> FontBBox . p . y = pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0		8452489	1		=			
ANR	8452539	MemberAccess	pfont -> FontBBox . p . y		8452489	0					
ANR	8452540	MemberAccess	pfont -> FontBBox . p		8452489	0					
ANR	8452541	PtrMemberAccess	pfont -> FontBBox		8452489	0					
ANR	8452542	Identifier	pfont		8452489	0					
ANR	8452543	Identifier	FontBBox		8452489	1					
ANR	8452544	Identifier	p		8452489	1					
ANR	8452545	Identifier	y		8452489	1					
ANR	8452546	AssignmentExpression	pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0		8452489	1		=			
ANR	8452547	MemberAccess	pfont -> FontBBox . q . x		8452489	0					
ANR	8452548	MemberAccess	pfont -> FontBBox . q		8452489	0					
ANR	8452549	PtrMemberAccess	pfont -> FontBBox		8452489	0					
ANR	8452550	Identifier	pfont		8452489	0					
ANR	8452551	Identifier	FontBBox		8452489	1					
ANR	8452552	Identifier	q		8452489	1					
ANR	8452553	Identifier	x		8452489	1					
ANR	8452554	AssignmentExpression	pfont -> FontBBox . q . y = 0		8452489	1		=			
ANR	8452555	MemberAccess	pfont -> FontBBox . q . y		8452489	0					
ANR	8452556	MemberAccess	pfont -> FontBBox . q		8452489	0					
ANR	8452557	PtrMemberAccess	pfont -> FontBBox		8452489	0					
ANR	8452558	Identifier	pfont		8452489	0					
ANR	8452559	Identifier	FontBBox		8452489	1					
ANR	8452560	Identifier	q		8452489	1					
ANR	8452561	Identifier	y		8452489	1					
ANR	8452562	PrimaryExpression	0		8452489	1					
ANR	8452563	ExpressionStatement	"uid_set_UniqueID ( & pfont -> UID , unique_id )"	835:4:23652:23692	8452489	7	True				
ANR	8452564	CallExpression	"uid_set_UniqueID ( & pfont -> UID , unique_id )"		8452489	0					
ANR	8452565	Callee	uid_set_UniqueID		8452489	0					
ANR	8452566	Identifier	uid_set_UniqueID		8452489	0					
ANR	8452567	ArgumentList	& pfont -> UID		8452489	1					
ANR	8452568	Argument	& pfont -> UID		8452489	0					
ANR	8452569	UnaryOperationExpression	& pfont -> UID		8452489	0					
ANR	8452570	UnaryOperator	&		8452489	0					
ANR	8452571	PtrMemberAccess	pfont -> UID		8452489	1					
ANR	8452572	Identifier	pfont		8452489	0					
ANR	8452573	Identifier	UID		8452489	1					
ANR	8452574	Argument	unique_id		8452489	1					
ANR	8452575	Identifier	unique_id		8452489	0					
ANR	8452576	ExpressionStatement	pfont -> encoding_index = 1	836:4:23698:23723	8452489	8	True				
ANR	8452577	AssignmentExpression	pfont -> encoding_index = 1		8452489	0		=			
ANR	8452578	PtrMemberAccess	pfont -> encoding_index		8452489	0					
ANR	8452579	Identifier	pfont		8452489	0					
ANR	8452580	Identifier	encoding_index		8452489	1					
ANR	8452581	PrimaryExpression	1		8452489	1					
ANR	8452582	ExpressionStatement	pfont -> nearest_encoding_index = 1	837:4:23760:23793	8452489	9	True				
ANR	8452583	AssignmentExpression	pfont -> nearest_encoding_index = 1		8452489	0		=			
ANR	8452584	PtrMemberAccess	pfont -> nearest_encoding_index		8452489	0					
ANR	8452585	Identifier	pfont		8452489	0					
ANR	8452586	Identifier	nearest_encoding_index		8452489	1					
ANR	8452587	PrimaryExpression	1		8452489	1					
ANR	8452588	ReturnType	void		8452489	1					
ANR	8452589	Identifier	pl_fill_in_bitmap_font		8452489	2					
ANR	8452590	ParameterList	"gs_font_base * pfont , long unique_id"		8452489	3					
ANR	8452591	Parameter	gs_font_base * pfont	824:23:23203:23222	8452489	0	True				
ANR	8452592	ParameterType	gs_font_base *		8452489	0					
ANR	8452593	Identifier	pfont		8452489	1					
ANR	8452594	Parameter	long unique_id	824:45:23225:23238	8452489	1	True				
ANR	8452595	ParameterType	long		8452489	0					
ANR	8452596	Identifier	unique_id		8452489	1					
ANR	8452597	CFGEntryNode	ENTRY		8452489		True				
ANR	8452598	CFGExitNode	EXIT		8452489		True				
ANR	8452599	Symbol	pfont -> FontBBox . q . y		8452489						
ANR	8452600	Symbol	unique_id		8452489						
ANR	8452601	Symbol	pfont		8452489						
ANR	8452602	Symbol	pfont -> FontBBox . q . x		8452489						
ANR	8452603	Symbol	ft_PCL_user_defined		8452489						
ANR	8452604	Symbol	& pfont -> UID		8452489						
ANR	8452605	Symbol	fbit_use_bitmaps		8452489						
ANR	8452606	Symbol	pfont -> nearest_encoding_index		8452489						
ANR	8452607	Symbol	pfont -> TransformedChar		8452489						
ANR	8452608	Symbol	* pfont		8452489						
ANR	8452609	Symbol	pfont -> FontType		8452489						
ANR	8452610	Symbol	pfont -> FontBBox . p . x		8452489						
ANR	8452611	Symbol	pfont -> FontBBox . p . y		8452489						
ANR	8452612	Symbol	pfont -> InBetweenSize		8452489						
ANR	8452613	Symbol	true		8452489						
ANR	8452614	Symbol	pfont -> BitmapWidths		8452489						
ANR	8452615	Symbol	pfont -> FontBBox . p		8452489						
ANR	8452616	Symbol	pfont -> ExactSize		8452489						
ANR	8452617	Symbol	pfont -> FontBBox . q		8452489						
ANR	8452618	Symbol	fbit_transform_bitmaps		8452489						
ANR	8452619	Symbol	pfont -> FontBBox		8452489						
ANR	8452620	Symbol	pfont -> encoding_index		8452489						
ANR	8452621	Function	pl_fill_in_tt_font	841:0:23870:25020							
ANR	8452622	FunctionDef	"pl_fill_in_tt_font (gs_font_type42 * pfont , void * data , long unique_id)"		8452621	0					
ANR	8452623	CompoundStatement		843:0:23945:25020	8452621	0					
ANR	8452624	ExpressionStatement	pfont -> FontType = ft_TrueType	844:4:23951:23980	8452621	0	True				
ANR	8452625	AssignmentExpression	pfont -> FontType = ft_TrueType		8452621	0		=			
ANR	8452626	PtrMemberAccess	pfont -> FontType		8452621	0					
ANR	8452627	Identifier	pfont		8452621	0					
ANR	8452628	Identifier	FontType		8452621	1					
ANR	8452629	Identifier	ft_TrueType		8452621	1					
ANR	8452630	ExpressionStatement	pfont -> BitmapWidths = true	845:4:23986:24012	8452621	1	True				
ANR	8452631	AssignmentExpression	pfont -> BitmapWidths = true		8452621	0		=			
ANR	8452632	PtrMemberAccess	pfont -> BitmapWidths		8452621	0					
ANR	8452633	Identifier	pfont		8452621	0					
ANR	8452634	Identifier	BitmapWidths		8452621	1					
ANR	8452635	Identifier	true		8452621	1					
ANR	8452636	ExpressionStatement	pfont -> ExactSize = fbit_use_outlines	846:4:24018:24054	8452621	2	True				
ANR	8452637	AssignmentExpression	pfont -> ExactSize = fbit_use_outlines		8452621	0		=			
ANR	8452638	PtrMemberAccess	pfont -> ExactSize		8452621	0					
ANR	8452639	Identifier	pfont		8452621	0					
ANR	8452640	Identifier	ExactSize		8452621	1					
ANR	8452641	Identifier	fbit_use_outlines		8452621	1					
ANR	8452642	ExpressionStatement	pfont -> InBetweenSize = fbit_use_outlines	847:4:24060:24100	8452621	3	True				
ANR	8452643	AssignmentExpression	pfont -> InBetweenSize = fbit_use_outlines		8452621	0		=			
ANR	8452644	PtrMemberAccess	pfont -> InBetweenSize		8452621	0					
ANR	8452645	Identifier	pfont		8452621	0					
ANR	8452646	Identifier	InBetweenSize		8452621	1					
ANR	8452647	Identifier	fbit_use_outlines		8452621	1					
ANR	8452648	ExpressionStatement	pfont -> TransformedChar = fbit_use_outlines	848:4:24106:24148	8452621	4	True				
ANR	8452649	AssignmentExpression	pfont -> TransformedChar = fbit_use_outlines		8452621	0		=			
ANR	8452650	PtrMemberAccess	pfont -> TransformedChar		8452621	0					
ANR	8452651	Identifier	pfont		8452621	0					
ANR	8452652	Identifier	TransformedChar		8452621	1					
ANR	8452653	Identifier	fbit_use_outlines		8452621	1					
ANR	8452654	ExpressionStatement	pfont -> FontBBox . p . x = pfont -> FontBBox . p . y = pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0	855:4:24393:24490	8452621	5	True				
ANR	8452655	AssignmentExpression	pfont -> FontBBox . p . x = pfont -> FontBBox . p . y = pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0		8452621	0		=			
ANR	8452656	MemberAccess	pfont -> FontBBox . p . x		8452621	0					
ANR	8452657	MemberAccess	pfont -> FontBBox . p		8452621	0					
ANR	8452658	PtrMemberAccess	pfont -> FontBBox		8452621	0					
ANR	8452659	Identifier	pfont		8452621	0					
ANR	8452660	Identifier	FontBBox		8452621	1					
ANR	8452661	Identifier	p		8452621	1					
ANR	8452662	Identifier	x		8452621	1					
ANR	8452663	AssignmentExpression	pfont -> FontBBox . p . y = pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0		8452621	1		=			
ANR	8452664	MemberAccess	pfont -> FontBBox . p . y		8452621	0					
ANR	8452665	MemberAccess	pfont -> FontBBox . p		8452621	0					
ANR	8452666	PtrMemberAccess	pfont -> FontBBox		8452621	0					
ANR	8452667	Identifier	pfont		8452621	0					
ANR	8452668	Identifier	FontBBox		8452621	1					
ANR	8452669	Identifier	p		8452621	1					
ANR	8452670	Identifier	y		8452621	1					
ANR	8452671	AssignmentExpression	pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0		8452621	1		=			
ANR	8452672	MemberAccess	pfont -> FontBBox . q . x		8452621	0					
ANR	8452673	MemberAccess	pfont -> FontBBox . q		8452621	0					
ANR	8452674	PtrMemberAccess	pfont -> FontBBox		8452621	0					
ANR	8452675	Identifier	pfont		8452621	0					
ANR	8452676	Identifier	FontBBox		8452621	1					
ANR	8452677	Identifier	q		8452621	1					
ANR	8452678	Identifier	x		8452621	1					
ANR	8452679	AssignmentExpression	pfont -> FontBBox . q . y = 0		8452621	1		=			
ANR	8452680	MemberAccess	pfont -> FontBBox . q . y		8452621	0					
ANR	8452681	MemberAccess	pfont -> FontBBox . q		8452621	0					
ANR	8452682	PtrMemberAccess	pfont -> FontBBox		8452621	0					
ANR	8452683	Identifier	pfont		8452621	0					
ANR	8452684	Identifier	FontBBox		8452621	1					
ANR	8452685	Identifier	q		8452621	1					
ANR	8452686	Identifier	y		8452621	1					
ANR	8452687	PrimaryExpression	0		8452621	1					
ANR	8452688	ExpressionStatement	"uid_set_UniqueID ( & pfont -> UID , unique_id )"	857:4:24496:24536	8452621	6	True				
ANR	8452689	CallExpression	"uid_set_UniqueID ( & pfont -> UID , unique_id )"		8452621	0					
ANR	8452690	Callee	uid_set_UniqueID		8452621	0					
ANR	8452691	Identifier	uid_set_UniqueID		8452621	0					
ANR	8452692	ArgumentList	& pfont -> UID		8452621	1					
ANR	8452693	Argument	& pfont -> UID		8452621	0					
ANR	8452694	UnaryOperationExpression	& pfont -> UID		8452621	0					
ANR	8452695	UnaryOperator	&		8452621	0					
ANR	8452696	PtrMemberAccess	pfont -> UID		8452621	1					
ANR	8452697	Identifier	pfont		8452621	0					
ANR	8452698	Identifier	UID		8452621	1					
ANR	8452699	Argument	unique_id		8452621	1					
ANR	8452700	Identifier	unique_id		8452621	0					
ANR	8452701	ExpressionStatement	pfont -> encoding_index = 1	858:4:24542:24567	8452621	7	True				
ANR	8452702	AssignmentExpression	pfont -> encoding_index = 1		8452621	0		=			
ANR	8452703	PtrMemberAccess	pfont -> encoding_index		8452621	0					
ANR	8452704	Identifier	pfont		8452621	0					
ANR	8452705	Identifier	encoding_index		8452621	1					
ANR	8452706	PrimaryExpression	1		8452621	1					
ANR	8452707	ExpressionStatement	pfont -> nearest_encoding_index = 1	859:4:24604:24637	8452621	8	True				
ANR	8452708	AssignmentExpression	pfont -> nearest_encoding_index = 1		8452621	0		=			
ANR	8452709	PtrMemberAccess	pfont -> nearest_encoding_index		8452621	0					
ANR	8452710	Identifier	pfont		8452621	0					
ANR	8452711	Identifier	nearest_encoding_index		8452621	1					
ANR	8452712	PrimaryExpression	1		8452621	1					
ANR	8452713	ExpressionStatement	pfont -> data . proc_data = data	861:4:24718:24746	8452621	9	True				
ANR	8452714	AssignmentExpression	pfont -> data . proc_data = data		8452621	0		=			
ANR	8452715	MemberAccess	pfont -> data . proc_data		8452621	0					
ANR	8452716	PtrMemberAccess	pfont -> data		8452621	0					
ANR	8452717	Identifier	pfont		8452621	0					
ANR	8452718	Identifier	data		8452621	1					
ANR	8452719	Identifier	proc_data		8452621	1					
ANR	8452720	Identifier	data		8452621	1					
ANR	8452721	ExpressionStatement	pl_tt_init_procs ( pfont )	862:4:24752:24775	8452621	10	True				
ANR	8452722	CallExpression	pl_tt_init_procs ( pfont )		8452621	0					
ANR	8452723	Callee	pl_tt_init_procs		8452621	0					
ANR	8452724	Identifier	pl_tt_init_procs		8452621	0					
ANR	8452725	ArgumentList	pfont		8452621	1					
ANR	8452726	Argument	pfont		8452621	0					
ANR	8452727	Identifier	pfont		8452621	0					
ANR	8452728	CompoundStatement		22:8:845:885	8452621	11					
ANR	8452729	IdentifierDeclStatement	"int code = gs_type42_font_init ( pfont , 0 ) ;"	864:8:24791:24831	8452621	0	True				
ANR	8452730	IdentifierDecl	"code = gs_type42_font_init ( pfont , 0 )"		8452621	0					
ANR	8452731	IdentifierDeclType	int		8452621	0					
ANR	8452732	Identifier	code		8452621	1					
ANR	8452733	AssignmentExpression	"code = gs_type42_font_init ( pfont , 0 )"		8452621	2		=			
ANR	8452734	Identifier	code		8452621	0					
ANR	8452735	CallExpression	"gs_type42_font_init ( pfont , 0 )"		8452621	1					
ANR	8452736	Callee	gs_type42_font_init		8452621	0					
ANR	8452737	Identifier	gs_type42_font_init		8452621	0					
ANR	8452738	ArgumentList	pfont		8452621	1					
ANR	8452739	Argument	pfont		8452621	0					
ANR	8452740	Identifier	pfont		8452621	0					
ANR	8452741	Argument	0		8452621	1					
ANR	8452742	PrimaryExpression	0		8452621	0					
ANR	8452743	IfStatement	if ( code < 0 )		8452621	1					
ANR	8452744	Condition	code < 0	866:12:24846:24853	8452621	0	True				
ANR	8452745	RelationalExpression	code < 0		8452621	0		<			
ANR	8452746	Identifier	code		8452621	0					
ANR	8452747	PrimaryExpression	0		8452621	1					
ANR	8452748	ReturnStatement	return code ;	867:12:24868:24879	8452621	1	True				
ANR	8452749	Identifier	code		8452621	0					
ANR	8452750	ExpressionStatement	pfont -> FAPI = 0	870:4:24921:24936	8452621	12	True				
ANR	8452751	AssignmentExpression	pfont -> FAPI = 0		8452621	0		=			
ANR	8452752	PtrMemberAccess	pfont -> FAPI		8452621	0					
ANR	8452753	Identifier	pfont		8452621	0					
ANR	8452754	Identifier	FAPI		8452621	1					
ANR	8452755	PrimaryExpression	0		8452621	1					
ANR	8452756	ExpressionStatement	pfont -> FAPI_font_data = 0	871:4:24942:24967	8452621	13	True				
ANR	8452757	AssignmentExpression	pfont -> FAPI_font_data = 0		8452621	0		=			
ANR	8452758	PtrMemberAccess	pfont -> FAPI_font_data		8452621	0					
ANR	8452759	Identifier	pfont		8452621	0					
ANR	8452760	Identifier	FAPI_font_data		8452621	1					
ANR	8452761	PrimaryExpression	0		8452621	1					
ANR	8452762	ExpressionStatement	"pl_tt_finish_init ( pfont , ! data )"	872:4:24973:25004	8452621	14	True				
ANR	8452763	CallExpression	"pl_tt_finish_init ( pfont , ! data )"		8452621	0					
ANR	8452764	Callee	pl_tt_finish_init		8452621	0					
ANR	8452765	Identifier	pl_tt_finish_init		8452621	0					
ANR	8452766	ArgumentList	pfont		8452621	1					
ANR	8452767	Argument	pfont		8452621	0					
ANR	8452768	Identifier	pfont		8452621	0					
ANR	8452769	Argument	! data		8452621	1					
ANR	8452770	UnaryOperationExpression	! data		8452621	0					
ANR	8452771	UnaryOperator	!		8452621	0					
ANR	8452772	Identifier	data		8452621	1					
ANR	8452773	ReturnStatement	return 0 ;	873:4:25010:25018	8452621	15	True				
ANR	8452774	PrimaryExpression	0		8452621	0					
ANR	8452775	ReturnType	int		8452621	1					
ANR	8452776	Identifier	pl_fill_in_tt_font		8452621	2					
ANR	8452777	ParameterList	"gs_font_type42 * pfont , void * data , long unique_id"		8452621	3					
ANR	8452778	Parameter	gs_font_type42 * pfont	842:19:23893:23914	8452621	0	True				
ANR	8452779	ParameterType	gs_font_type42 *		8452621	0					
ANR	8452780	Identifier	pfont		8452621	1					
ANR	8452781	Parameter	void * data	842:43:23917:23926	8452621	1	True				
ANR	8452782	ParameterType	void *		8452621	0					
ANR	8452783	Identifier	data		8452621	1					
ANR	8452784	Parameter	long unique_id	842:55:23929:23942	8452621	2	True				
ANR	8452785	ParameterType	long		8452621	0					
ANR	8452786	Identifier	unique_id		8452621	1					
ANR	8452787	CFGEntryNode	ENTRY		8452621		True				
ANR	8452788	CFGExitNode	EXIT		8452621		True				
ANR	8452789	Symbol	pfont -> FontBBox . q . y		8452621						
ANR	8452790	Symbol	pfont -> FAPI		8452621						
ANR	8452791	Symbol	code		8452621						
ANR	8452792	Symbol	data		8452621						
ANR	8452793	Symbol	pfont -> FontBBox . q . x		8452621						
ANR	8452794	Symbol	pfont -> FAPI_font_data		8452621						
ANR	8452795	Symbol	ft_TrueType		8452621						
ANR	8452796	Symbol	& pfont -> UID		8452621						
ANR	8452797	Symbol	pfont -> nearest_encoding_index		8452621						
ANR	8452798	Symbol	pfont -> TransformedChar		8452621						
ANR	8452799	Symbol	pfont -> FontType		8452621						
ANR	8452800	Symbol	pfont -> InBetweenSize		8452621						
ANR	8452801	Symbol	pfont -> BitmapWidths		8452621						
ANR	8452802	Symbol	pfont -> FontBBox		8452621						
ANR	8452803	Symbol	fbit_use_outlines		8452621						
ANR	8452804	Symbol	pfont -> data . proc_data		8452621						
ANR	8452805	Symbol	pfont -> encoding_index		8452621						
ANR	8452806	Symbol	unique_id		8452621						
ANR	8452807	Symbol	pfont		8452621						
ANR	8452808	Symbol	pfont -> data		8452621						
ANR	8452809	Symbol	* pfont		8452621						
ANR	8452810	Symbol	pfont -> FontBBox . p . x		8452621						
ANR	8452811	Symbol	pfont -> FontBBox . p . y		8452621						
ANR	8452812	Symbol	gs_type42_font_init		8452621						
ANR	8452813	Symbol	true		8452621						
ANR	8452814	Symbol	pfont -> FontBBox . p		8452621						
ANR	8452815	Symbol	pfont -> ExactSize		8452621						
ANR	8452816	Symbol	pfont -> FontBBox . q		8452621						
ANR	8452817	Function	pl_fill_in_intelli_font	877:0:25062:25955							
ANR	8452818	FunctionDef	"pl_fill_in_intelli_font (gs_font_base * pfont , long unique_id)"		8452817	0					
ANR	8452819	CompoundStatement		879:0:25129:25955	8452817	0					
ANR	8452820	CompoundStatement		3:8:96:109	8452817	0					
ANR	8452821	IdentifierDeclStatement	gs_matrix mat ;	881:8:25226:25239	8452817	0	True				
ANR	8452822	IdentifierDecl	mat		8452817	0					
ANR	8452823	IdentifierDeclType	gs_matrix		8452817	0					
ANR	8452824	Identifier	mat		8452817	1					
ANR	8452825	ExpressionStatement	"gs_make_scaling ( 1.0 / 8782 , 1.0 / 8782 , & mat )"	883:8:25250:25295	8452817	1	True				
ANR	8452826	CallExpression	"gs_make_scaling ( 1.0 / 8782 , 1.0 / 8782 , & mat )"		8452817	0					
ANR	8452827	Callee	gs_make_scaling		8452817	0					
ANR	8452828	Identifier	gs_make_scaling		8452817	0					
ANR	8452829	ArgumentList	1.0 / 8782		8452817	1					
ANR	8452830	Argument	1.0 / 8782		8452817	0					
ANR	8452831	MultiplicativeExpression	1.0 / 8782		8452817	0		/			
ANR	8452832	PrimaryExpression	1.0		8452817	0					
ANR	8452833	PrimaryExpression	8782		8452817	1					
ANR	8452834	Argument	1.0 / 8782		8452817	1					
ANR	8452835	MultiplicativeExpression	1.0 / 8782		8452817	0		/			
ANR	8452836	PrimaryExpression	1.0		8452817	0					
ANR	8452837	PrimaryExpression	8782		8452817	1					
ANR	8452838	Argument	& mat		8452817	2					
ANR	8452839	UnaryOperationExpression	& mat		8452817	0					
ANR	8452840	UnaryOperator	&		8452817	0					
ANR	8452841	Identifier	mat		8452817	1					
ANR	8452842	ExpressionStatement	"gs_matrix_translate ( & mat , - 2980.0 , - 5380.0 , & pfont -> orig_FontMatrix )"	884:8:25305:25373	8452817	2	True				
ANR	8452843	CallExpression	"gs_matrix_translate ( & mat , - 2980.0 , - 5380.0 , & pfont -> orig_FontMatrix )"		8452817	0					
ANR	8452844	Callee	gs_matrix_translate		8452817	0					
ANR	8452845	Identifier	gs_matrix_translate		8452817	0					
ANR	8452846	ArgumentList	& mat		8452817	1					
ANR	8452847	Argument	& mat		8452817	0					
ANR	8452848	UnaryOperationExpression	& mat		8452817	0					
ANR	8452849	UnaryOperator	&		8452817	0					
ANR	8452850	Identifier	mat		8452817	1					
ANR	8452851	Argument	- 2980.0		8452817	1					
ANR	8452852	UnaryOperationExpression	- 2980.0		8452817	0					
ANR	8452853	UnaryOperator	-		8452817	0					
ANR	8452854	PrimaryExpression	2980.0		8452817	1					
ANR	8452855	Argument	- 5380.0		8452817	2					
ANR	8452856	UnaryOperationExpression	- 5380.0		8452817	0					
ANR	8452857	UnaryOperator	-		8452817	0					
ANR	8452858	PrimaryExpression	5380.0		8452817	1					
ANR	8452859	Argument	& pfont -> orig_FontMatrix		8452817	3					
ANR	8452860	UnaryOperationExpression	& pfont -> orig_FontMatrix		8452817	0					
ANR	8452861	UnaryOperator	&		8452817	0					
ANR	8452862	PtrMemberAccess	pfont -> orig_FontMatrix		8452817	1					
ANR	8452863	Identifier	pfont		8452817	0					
ANR	8452864	Identifier	orig_FontMatrix		8452817	1					
ANR	8452865	ExpressionStatement	pfont -> FontType = ft_MicroType	886:4:25385:25415	8452817	1	True				
ANR	8452866	AssignmentExpression	pfont -> FontType = ft_MicroType		8452817	0		=			
ANR	8452867	PtrMemberAccess	pfont -> FontType		8452817	0					
ANR	8452868	Identifier	pfont		8452817	0					
ANR	8452869	Identifier	FontType		8452817	1					
ANR	8452870	Identifier	ft_MicroType		8452817	1					
ANR	8452871	ExpressionStatement	pfont -> BitmapWidths = true	887:4:25421:25447	8452817	2	True				
ANR	8452872	AssignmentExpression	pfont -> BitmapWidths = true		8452817	0		=			
ANR	8452873	PtrMemberAccess	pfont -> BitmapWidths		8452817	0					
ANR	8452874	Identifier	pfont		8452817	0					
ANR	8452875	Identifier	BitmapWidths		8452817	1					
ANR	8452876	Identifier	true		8452817	1					
ANR	8452877	ExpressionStatement	pfont -> ExactSize = fbit_use_outlines	888:4:25453:25489	8452817	3	True				
ANR	8452878	AssignmentExpression	pfont -> ExactSize = fbit_use_outlines		8452817	0		=			
ANR	8452879	PtrMemberAccess	pfont -> ExactSize		8452817	0					
ANR	8452880	Identifier	pfont		8452817	0					
ANR	8452881	Identifier	ExactSize		8452817	1					
ANR	8452882	Identifier	fbit_use_outlines		8452817	1					
ANR	8452883	ExpressionStatement	pfont -> InBetweenSize = fbit_use_outlines	889:4:25495:25535	8452817	4	True				
ANR	8452884	AssignmentExpression	pfont -> InBetweenSize = fbit_use_outlines		8452817	0		=			
ANR	8452885	PtrMemberAccess	pfont -> InBetweenSize		8452817	0					
ANR	8452886	Identifier	pfont		8452817	0					
ANR	8452887	Identifier	InBetweenSize		8452817	1					
ANR	8452888	Identifier	fbit_use_outlines		8452817	1					
ANR	8452889	ExpressionStatement	pfont -> TransformedChar = fbit_use_outlines	890:4:25541:25583	8452817	5	True				
ANR	8452890	AssignmentExpression	pfont -> TransformedChar = fbit_use_outlines		8452817	0		=			
ANR	8452891	PtrMemberAccess	pfont -> TransformedChar		8452817	0					
ANR	8452892	Identifier	pfont		8452817	0					
ANR	8452893	Identifier	TransformedChar		8452817	1					
ANR	8452894	Identifier	fbit_use_outlines		8452817	1					
ANR	8452895	ExpressionStatement	pfont -> FontBBox . p . x = pfont -> FontBBox . p . y = pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0	892:4:25644:25741	8452817	6	True				
ANR	8452896	AssignmentExpression	pfont -> FontBBox . p . x = pfont -> FontBBox . p . y = pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0		8452817	0		=			
ANR	8452897	MemberAccess	pfont -> FontBBox . p . x		8452817	0					
ANR	8452898	MemberAccess	pfont -> FontBBox . p		8452817	0					
ANR	8452899	PtrMemberAccess	pfont -> FontBBox		8452817	0					
ANR	8452900	Identifier	pfont		8452817	0					
ANR	8452901	Identifier	FontBBox		8452817	1					
ANR	8452902	Identifier	p		8452817	1					
ANR	8452903	Identifier	x		8452817	1					
ANR	8452904	AssignmentExpression	pfont -> FontBBox . p . y = pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0		8452817	1		=			
ANR	8452905	MemberAccess	pfont -> FontBBox . p . y		8452817	0					
ANR	8452906	MemberAccess	pfont -> FontBBox . p		8452817	0					
ANR	8452907	PtrMemberAccess	pfont -> FontBBox		8452817	0					
ANR	8452908	Identifier	pfont		8452817	0					
ANR	8452909	Identifier	FontBBox		8452817	1					
ANR	8452910	Identifier	p		8452817	1					
ANR	8452911	Identifier	y		8452817	1					
ANR	8452912	AssignmentExpression	pfont -> FontBBox . q . x = pfont -> FontBBox . q . y = 0		8452817	1		=			
ANR	8452913	MemberAccess	pfont -> FontBBox . q . x		8452817	0					
ANR	8452914	MemberAccess	pfont -> FontBBox . q		8452817	0					
ANR	8452915	PtrMemberAccess	pfont -> FontBBox		8452817	0					
ANR	8452916	Identifier	pfont		8452817	0					
ANR	8452917	Identifier	FontBBox		8452817	1					
ANR	8452918	Identifier	q		8452817	1					
ANR	8452919	Identifier	x		8452817	1					
ANR	8452920	AssignmentExpression	pfont -> FontBBox . q . y = 0		8452817	1		=			
ANR	8452921	MemberAccess	pfont -> FontBBox . q . y		8452817	0					
ANR	8452922	MemberAccess	pfont -> FontBBox . q		8452817	0					
ANR	8452923	PtrMemberAccess	pfont -> FontBBox		8452817	0					
ANR	8452924	Identifier	pfont		8452817	0					
ANR	8452925	Identifier	FontBBox		8452817	1					
ANR	8452926	Identifier	q		8452817	1					
ANR	8452927	Identifier	y		8452817	1					
ANR	8452928	PrimaryExpression	0		8452817	1					
ANR	8452929	ExpressionStatement	"uid_set_UniqueID ( & pfont -> UID , unique_id )"	894:4:25747:25787	8452817	7	True				
ANR	8452930	CallExpression	"uid_set_UniqueID ( & pfont -> UID , unique_id )"		8452817	0					
ANR	8452931	Callee	uid_set_UniqueID		8452817	0					
ANR	8452932	Identifier	uid_set_UniqueID		8452817	0					
ANR	8452933	ArgumentList	& pfont -> UID		8452817	1					
ANR	8452934	Argument	& pfont -> UID		8452817	0					
ANR	8452935	UnaryOperationExpression	& pfont -> UID		8452817	0					
ANR	8452936	UnaryOperator	&		8452817	0					
ANR	8452937	PtrMemberAccess	pfont -> UID		8452817	1					
ANR	8452938	Identifier	pfont		8452817	0					
ANR	8452939	Identifier	UID		8452817	1					
ANR	8452940	Argument	unique_id		8452817	1					
ANR	8452941	Identifier	unique_id		8452817	0					
ANR	8452942	ExpressionStatement	pfont -> encoding_index = 1	895:4:25793:25818	8452817	8	True				
ANR	8452943	AssignmentExpression	pfont -> encoding_index = 1		8452817	0		=			
ANR	8452944	PtrMemberAccess	pfont -> encoding_index		8452817	0					
ANR	8452945	Identifier	pfont		8452817	0					
ANR	8452946	Identifier	encoding_index		8452817	1					
ANR	8452947	PrimaryExpression	1		8452817	1					
ANR	8452948	ExpressionStatement	pfont -> nearest_encoding_index = 1	896:4:25855:25888	8452817	9	True				
ANR	8452949	AssignmentExpression	pfont -> nearest_encoding_index = 1		8452817	0		=			
ANR	8452950	PtrMemberAccess	pfont -> nearest_encoding_index		8452817	0					
ANR	8452951	Identifier	pfont		8452817	0					
ANR	8452952	Identifier	nearest_encoding_index		8452817	1					
ANR	8452953	PrimaryExpression	1		8452817	1					
ANR	8452954	ExpressionStatement	pl_intelli_init_procs ( pfont )	897:4:25925:25953	8452817	10	True				
ANR	8452955	CallExpression	pl_intelli_init_procs ( pfont )		8452817	0					
ANR	8452956	Callee	pl_intelli_init_procs		8452817	0					
ANR	8452957	Identifier	pl_intelli_init_procs		8452817	0					
ANR	8452958	ArgumentList	pfont		8452817	1					
ANR	8452959	Argument	pfont		8452817	0					
ANR	8452960	Identifier	pfont		8452817	0					
ANR	8452961	ReturnType	void		8452817	1					
ANR	8452962	Identifier	pl_fill_in_intelli_font		8452817	2					
ANR	8452963	ParameterList	"gs_font_base * pfont , long unique_id"		8452817	3					
ANR	8452964	Parameter	gs_font_base * pfont	878:24:25091:25110	8452817	0	True				
ANR	8452965	ParameterType	gs_font_base *		8452817	0					
ANR	8452966	Identifier	pfont		8452817	1					
ANR	8452967	Parameter	long unique_id	878:46:25113:25126	8452817	1	True				
ANR	8452968	ParameterType	long		8452817	0					
ANR	8452969	Identifier	unique_id		8452817	1					
ANR	8452970	CFGEntryNode	ENTRY		8452817		True				
ANR	8452971	CFGExitNode	EXIT		8452817		True				
ANR	8452972	Symbol	mat		8452817						
ANR	8452973	Symbol	& mat		8452817						
ANR	8452974	Symbol	pfont -> FontBBox . q . y		8452817						
ANR	8452975	Symbol	unique_id		8452817						
ANR	8452976	Symbol	pfont		8452817						
ANR	8452977	Symbol	& pfont -> orig_FontMatrix		8452817						
ANR	8452978	Symbol	pfont -> FontBBox . q . x		8452817						
ANR	8452979	Symbol	& pfont -> UID		8452817						
ANR	8452980	Symbol	pfont -> nearest_encoding_index		8452817						
ANR	8452981	Symbol	pfont -> TransformedChar		8452817						
ANR	8452982	Symbol	* pfont		8452817						
ANR	8452983	Symbol	pfont -> FontType		8452817						
ANR	8452984	Symbol	pfont -> FontBBox . p . x		8452817						
ANR	8452985	Symbol	pfont -> FontBBox . p . y		8452817						
ANR	8452986	Symbol	pfont -> InBetweenSize		8452817						
ANR	8452987	Symbol	true		8452817						
ANR	8452988	Symbol	pfont -> BitmapWidths		8452817						
ANR	8452989	Symbol	pfont -> FontBBox . p		8452817						
ANR	8452990	Symbol	pfont -> ExactSize		8452817						
ANR	8452991	Symbol	pfont -> FontBBox . q		8452817						
ANR	8452992	Symbol	pfont -> FontBBox		8452817						
ANR	8452993	Symbol	ft_MicroType		8452817						
ANR	8452994	Symbol	fbit_use_outlines		8452817						
ANR	8452995	Symbol	pfont -> encoding_index		8452817						
ANR	8452996	Function	pl_font_scan_segments	909:0:26441:32113							
ANR	8452997	FunctionDef	"pl_font_scan_segments (const gs_memory_t * mem , pl_font_t * plfont , int fst_offset , int start_offset , long end_offset , bool large_sizes , const pl_font_offset_errors_t * pfoe)"		8452996	0					
ANR	8452998	CompoundStatement		914:0:26685:32113	8452996	0					
ANR	8452999	IdentifierDeclStatement	const byte * header = plfont -> header ;	915:4:26691:26726	8452996	0	True				
ANR	8453000	IdentifierDecl	* header = plfont -> header		8452996	0					
ANR	8453001	IdentifierDeclType	const byte *		8452996	0					
ANR	8453002	Identifier	header		8452996	1					
ANR	8453003	AssignmentExpression	* header = plfont -> header		8452996	2		=			
ANR	8453004	Identifier	header		8452996	0					
ANR	8453005	PtrMemberAccess	plfont -> header		8452996	1					
ANR	8453006	Identifier	plfont		8452996	0					
ANR	8453007	Identifier	header		8452996	1					
ANR	8453008	IdentifierDeclStatement	pl_font_scaling_technology_t fst = header [ fst_offset ] ;	916:4:26732:26785	8452996	1	True				
ANR	8453009	IdentifierDecl	fst = header [ fst_offset ]		8452996	0					
ANR	8453010	IdentifierDeclType	pl_font_scaling_technology_t		8452996	0					
ANR	8453011	Identifier	fst		8452996	1					
ANR	8453012	AssignmentExpression	fst = header [ fst_offset ]		8452996	2		=			
ANR	8453013	Identifier	fst		8452996	0					
ANR	8453014	ArrayIndexing	header [ fst_offset ]		8452996	1					
ANR	8453015	Identifier	header		8452996	0					
ANR	8453016	Identifier	fst_offset		8452996	1					
ANR	8453017	IdentifierDeclStatement	int wsize = ( large_sizes ? 4 : 2 ) ;	917:4:26791:26824	8452996	2	True				
ANR	8453018	IdentifierDecl	wsize = ( large_sizes ? 4 : 2 )		8452996	0					
ANR	8453019	IdentifierDeclType	int		8452996	0					
ANR	8453020	Identifier	wsize		8452996	1					
ANR	8453021	AssignmentExpression	wsize = ( large_sizes ? 4 : 2 )		8452996	2		=			
ANR	8453022	Identifier	wsize		8452996	0					
ANR	8453023	ConditionalExpression	large_sizes ? 4 : 2		8452996	1					
ANR	8453024	Condition	large_sizes		8452996	0					
ANR	8453025	Identifier	large_sizes		8452996	0					
ANR	8453026	PrimaryExpression	4		8452996	1					
ANR	8453027	PrimaryExpression	2		8452996	2					
ANR	8453028	IdentifierDeclStatement	const byte * segment = header + start_offset ;	918:4:26830:26873	8452996	3	True				
ANR	8453029	IdentifierDecl	* segment = header + start_offset		8452996	0					
ANR	8453030	IdentifierDeclType	const byte *		8452996	0					
ANR	8453031	Identifier	segment		8452996	1					
ANR	8453032	AssignmentExpression	* segment = header + start_offset		8452996	2		=			
ANR	8453033	Identifier	segment		8452996	0					
ANR	8453034	AdditiveExpression	header + start_offset		8452996	1		+			
ANR	8453035	Identifier	header		8452996	0					
ANR	8453036	Identifier	start_offset		8452996	1					
ANR	8453037	IdentifierDeclStatement	const byte * end = header + end_offset ;	919:4:26879:26916	8452996	4	True				
ANR	8453038	IdentifierDecl	* end = header + end_offset		8452996	0					
ANR	8453039	IdentifierDeclType	const byte *		8452996	0					
ANR	8453040	Identifier	end		8452996	1					
ANR	8453041	AssignmentExpression	* end = header + end_offset		8452996	2		=			
ANR	8453042	Identifier	end		8452996	0					
ANR	8453043	AdditiveExpression	header + end_offset		8452996	1		+			
ANR	8453044	Identifier	header		8452996	0					
ANR	8453045	Identifier	end_offset		8452996	1					
ANR	8453046	IdentifierDeclStatement	const byte * null_segment = end - ( 2 + wsize ) ;	920:4:26922:26966	8452996	5	True				
ANR	8453047	IdentifierDecl	* null_segment = end - ( 2 + wsize )		8452996	0					
ANR	8453048	IdentifierDeclType	const byte *		8452996	0					
ANR	8453049	Identifier	null_segment		8452996	1					
ANR	8453050	AssignmentExpression	* null_segment = end - ( 2 + wsize )		8452996	2		=			
ANR	8453051	Identifier	null_segment		8452996	0					
ANR	8453052	AdditiveExpression	end - ( 2 + wsize )		8452996	1		-			
ANR	8453053	Identifier	end		8452996	0					
ANR	8453054	AdditiveExpression	2 + wsize		8452996	1		+			
ANR	8453055	PrimaryExpression	2		8452996	0					
ANR	8453056	Identifier	wsize		8452996	1					
ANR	8453057	IdentifierDeclStatement	bool found = false ;	921:4:26972:26990	8452996	6	True				
ANR	8453058	IdentifierDecl	found = false		8452996	0					
ANR	8453059	IdentifierDeclType	bool		8452996	0					
ANR	8453060	Identifier	found		8452996	1					
ANR	8453061	AssignmentExpression	found = false		8452996	2		=			
ANR	8453062	Identifier	false		8452996	0					
ANR	8453063	Identifier	false		8452996	1					
ANR	8453064	IdentifierDeclStatement	ulong seg_size ;	922:4:26996:27010	8452996	7	True				
ANR	8453065	IdentifierDecl	seg_size		8452996	0					
ANR	8453066	IdentifierDeclType	ulong		8452996	0					
ANR	8453067	Identifier	seg_size		8452996	1					
ANR	8453068	IdentifierDeclStatement	int illegal_font_data = pfoe -> illegal_font_data ;	923:4:27016:27063	8452996	8	True				
ANR	8453069	IdentifierDecl	illegal_font_data = pfoe -> illegal_font_data		8452996	0					
ANR	8453070	IdentifierDeclType	int		8452996	0					
ANR	8453071	Identifier	illegal_font_data		8452996	1					
ANR	8453072	AssignmentExpression	illegal_font_data = pfoe -> illegal_font_data		8452996	2		=			
ANR	8453073	Identifier	illegal_font_data		8452996	0					
ANR	8453074	PtrMemberAccess	pfoe -> illegal_font_data		8452996	1					
ANR	8453075	Identifier	pfoe		8452996	0					
ANR	8453076	Identifier	illegal_font_data		8452996	1					
ANR	8453077	Statement	define	925:1:27067:27072	8452996	9	True				
ANR	8453078	Statement	return_scan_error	925:8:27074:27090	8452996	10	True				
ANR	8453079	ExpressionStatement	( err ) return_error ( ( err ) ? ( err ) : illegal_font_data )	925:25:27091:27147	8452996	11	True				
ANR	8453080	CastExpression	( err ) return_error ( ( err ) ? ( err ) : illegal_font_data )		8452996	0					
ANR	8453081	CastTarget	err		8452996	0					
ANR	8453082	CallExpression	return_error ( ( err ) ? ( err ) : illegal_font_data )		8452996	1					
ANR	8453083	Callee	return_error		8452996	0					
ANR	8453084	Identifier	return_error		8452996	0					
ANR	8453085	ArgumentList	( err ) ? ( err ) : illegal_font_data		8452996	1					
ANR	8453086	Argument	( err ) ? ( err ) : illegal_font_data		8452996	0					
ANR	8453087	ConditionalExpression	( err ) ? ( err ) : illegal_font_data		8452996	0					
ANR	8453088	Condition	err		8452996	0					
ANR	8453089	Identifier	err		8452996	0					
ANR	8453090	Identifier	err		8452996	1					
ANR	8453091	Identifier	illegal_font_data		8452996	2					
ANR	8453092	IfStatement	"if ( memcmp ( null_segment , ""\\377\\377"" , 2 ) )"		8452996	12					
ANR	8453093	Condition	"memcmp ( null_segment , ""\\377\\377"" , 2 )"	928:8:27158:27192	8452996	0	True				
ANR	8453094	CallExpression	"memcmp ( null_segment , ""\\377\\377"" , 2 )"		8452996	0					
ANR	8453095	Callee	memcmp		8452996	0					
ANR	8453096	Identifier	memcmp		8452996	0					
ANR	8453097	ArgumentList	null_segment		8452996	1					
ANR	8453098	Argument	null_segment		8452996	0					
ANR	8453099	Identifier	null_segment		8452996	0					
ANR	8453100	Argument	"""\\377\\377"""		8452996	1					
ANR	8453101	PrimaryExpression	"""\\377\\377"""		8452996	0					
ANR	8453102	Argument	2		8452996	2					
ANR	8453103	PrimaryExpression	2		8452996	0					
ANR	8453104	ExpressionStatement	return_scan_error ( pfoe -> missing_required_segment )	929:8:27230:27279	8452996	1	True				
ANR	8453105	CallExpression	return_scan_error ( pfoe -> missing_required_segment )		8452996	0					
ANR	8453106	Callee	return_scan_error		8452996	0					
ANR	8453107	Identifier	return_scan_error		8452996	0					
ANR	8453108	ArgumentList	pfoe -> missing_required_segment		8452996	1					
ANR	8453109	Argument	pfoe -> missing_required_segment		8452996	0					
ANR	8453110	PtrMemberAccess	pfoe -> missing_required_segment		8452996	0					
ANR	8453111	Identifier	pfoe		8452996	0					
ANR	8453112	Identifier	missing_required_segment		8452996	1					
ANR	8453113	IfStatement	"if ( memcmp ( null_segment + 2 , ""\\0\\0\\0\\0"" , wsize ) )"		8452996	13					
ANR	8453114	Condition	"memcmp ( null_segment + 2 , ""\\0\\0\\0\\0"" , wsize )"	930:8:27289:27331	8452996	0	True				
ANR	8453115	CallExpression	"memcmp ( null_segment + 2 , ""\\0\\0\\0\\0"" , wsize )"		8452996	0					
ANR	8453116	Callee	memcmp		8452996	0					
ANR	8453117	Identifier	memcmp		8452996	0					
ANR	8453118	ArgumentList	null_segment + 2		8452996	1					
ANR	8453119	Argument	null_segment + 2		8452996	0					
ANR	8453120	AdditiveExpression	null_segment + 2		8452996	0		+			
ANR	8453121	Identifier	null_segment		8452996	0					
ANR	8453122	PrimaryExpression	2		8452996	1					
ANR	8453123	Argument	"""\\0\\0\\0\\0"""		8452996	1					
ANR	8453124	PrimaryExpression	"""\\0\\0\\0\\0"""		8452996	0					
ANR	8453125	Argument	wsize		8452996	2					
ANR	8453126	Identifier	wsize		8452996	0					
ANR	8453127	ExpressionStatement	return_scan_error ( pfoe -> illegal_null_segment_size )	931:8:27367:27417	8452996	1	True				
ANR	8453128	CallExpression	return_scan_error ( pfoe -> illegal_null_segment_size )		8452996	0					
ANR	8453129	Callee	return_scan_error		8452996	0					
ANR	8453130	Identifier	return_scan_error		8452996	0					
ANR	8453131	ArgumentList	pfoe -> illegal_null_segment_size		8452996	1					
ANR	8453132	Argument	pfoe -> illegal_null_segment_size		8452996	0					
ANR	8453133	PtrMemberAccess	pfoe -> illegal_null_segment_size		8452996	0					
ANR	8453134	Identifier	pfoe		8452996	0					
ANR	8453135	Identifier	illegal_null_segment_size		8452996	1					
ANR	8453136	SwitchStatement	switch ( fst )		8452996	14					
ANR	8453137	Condition	fst	932:12:27431:27433	8452996	0	True				
ANR	8453138	Identifier	fst		8452996	0					
ANR	8453139	CompoundStatement		19:17:750:750	8452996	1					
ANR	8453140	Label	case plfst_bitmap :	933:8:27446:27463	8452996	0	True				
ANR	8453141	Identifier	plfst_bitmap		8452996	0					
ANR	8453142	Label	case plfst_TrueType :	934:8:27473:27492	8452996	1	True				
ANR	8453143	Identifier	plfst_TrueType		8452996	0					
ANR	8453144	BreakStatement	break ;	935:12:27506:27511	8452996	2	True				
ANR	8453145	Label	default :	936:8:27521:27528	8452996	3	True				
ANR	8453146	Identifier	default		8452996	0					
ANR	8453147	ExpressionStatement	return_scan_error ( pfoe -> illegal_font_header_fields )	937:12:27542:27593	8452996	4	True				
ANR	8453148	CallExpression	return_scan_error ( pfoe -> illegal_font_header_fields )		8452996	0					
ANR	8453149	Callee	return_scan_error		8452996	0					
ANR	8453150	Identifier	return_scan_error		8452996	0					
ANR	8453151	ArgumentList	pfoe -> illegal_font_header_fields		8452996	1					
ANR	8453152	Argument	pfoe -> illegal_font_header_fields		8452996	0					
ANR	8453153	PtrMemberAccess	pfoe -> illegal_font_header_fields		8452996	0					
ANR	8453154	Identifier	pfoe		8452996	0					
ANR	8453155	Identifier	illegal_font_header_fields		8452996	1					
ANR	8453156	IfStatement	if ( header [ fst_offset + 1 ] )		8452996	15					
ANR	8453157	Condition	header [ fst_offset + 1 ]	939:8:27609:27630	8452996	0	True				
ANR	8453158	ArrayIndexing	header [ fst_offset + 1 ]		8452996	0					
ANR	8453159	Identifier	header		8452996	0					
ANR	8453160	AdditiveExpression	fst_offset + 1		8452996	1		+			
ANR	8453161	Identifier	fst_offset		8452996	0					
ANR	8453162	PrimaryExpression	1		8452996	1					
ANR	8453163	ExpressionStatement	return_scan_error ( pfoe -> illegal_font_header_fields )	940:8:27666:27717	8452996	1	True				
ANR	8453164	CallExpression	return_scan_error ( pfoe -> illegal_font_header_fields )		8452996	0					
ANR	8453165	Callee	return_scan_error		8452996	0					
ANR	8453166	Identifier	return_scan_error		8452996	0					
ANR	8453167	ArgumentList	pfoe -> illegal_font_header_fields		8452996	1					
ANR	8453168	Argument	pfoe -> illegal_font_header_fields		8452996	0					
ANR	8453169	PtrMemberAccess	pfoe -> illegal_font_header_fields		8452996	0					
ANR	8453170	Identifier	pfoe		8452996	0					
ANR	8453171	Identifier	illegal_font_header_fields		8452996	1					
ANR	8453172	ForStatement	for ( ; end - segment >= 2 + wsize ; segment += 2 + wsize + seg_size )		8452996	16					
ANR	8453173	Condition	end - segment >= 2 + wsize	942:11:27759:27784	8452996	0	True				
ANR	8453174	RelationalExpression	end - segment >= 2 + wsize		8452996	0		>=			
ANR	8453175	AdditiveExpression	end - segment		8452996	0		-			
ANR	8453176	Identifier	end		8452996	0					
ANR	8453177	Identifier	segment		8452996	1					
ANR	8453178	AdditiveExpression	2 + wsize		8452996	1		+			
ANR	8453179	PrimaryExpression	2		8452996	0					
ANR	8453180	Identifier	wsize		8452996	1					
ANR	8453181	AssignmentExpression	segment += 2 + wsize + seg_size	942:39:27787:27817	8452996	1	True	+=			
ANR	8453182	Identifier	segment		8452996	0					
ANR	8453183	AdditiveExpression	2 + wsize + seg_size		8452996	1		+			
ANR	8453184	PrimaryExpression	2		8452996	0					
ANR	8453185	AdditiveExpression	wsize + seg_size		8452996	1		+			
ANR	8453186	Identifier	wsize		8452996	0					
ANR	8453187	Identifier	seg_size		8452996	1					
ANR	8453188	CompoundStatement		31:8:1180:1219	8452996	2					
ANR	8453189	IdentifierDeclStatement	uint seg_id = u16 ( segment ) ;	943:8:27830:27856	8452996	0	True				
ANR	8453190	IdentifierDecl	seg_id = u16 ( segment )		8452996	0					
ANR	8453191	IdentifierDeclType	uint		8452996	0					
ANR	8453192	Identifier	seg_id		8452996	1					
ANR	8453193	AssignmentExpression	seg_id = u16 ( segment )		8452996	2		=			
ANR	8453194	Identifier	seg_id		8452996	0					
ANR	8453195	CallExpression	u16 ( segment )		8452996	1					
ANR	8453196	Callee	u16		8452996	0					
ANR	8453197	Identifier	u16		8452996	0					
ANR	8453198	ArgumentList	segment		8452996	1					
ANR	8453199	Argument	segment		8452996	0					
ANR	8453200	Identifier	segment		8452996	0					
ANR	8453201	IdentifierDeclStatement	const byte * sdata = segment + 2 + wsize ;	944:8:27866:27905	8452996	1	True				
ANR	8453202	IdentifierDecl	* sdata = segment + 2 + wsize		8452996	0					
ANR	8453203	IdentifierDeclType	const byte *		8452996	0					
ANR	8453204	Identifier	sdata		8452996	1					
ANR	8453205	AssignmentExpression	* sdata = segment + 2 + wsize		8452996	2		=			
ANR	8453206	Identifier	sdata		8452996	0					
ANR	8453207	AdditiveExpression	segment + 2 + wsize		8452996	1		+			
ANR	8453208	Identifier	segment		8452996	0					
ANR	8453209	AdditiveExpression	2 + wsize		8452996	1		+			
ANR	8453210	PrimaryExpression	2		8452996	0					
ANR	8453211	Identifier	wsize		8452996	1					
ANR	8453212	Statement	define	946:1:27909:27914	8452996	2	True				
ANR	8453213	Statement	id2	946:8:27916:27918	8452996	3	True				
ANR	8453214	Statement	(	946:11:27919:27919	8452996	4	True				
ANR	8453215	Statement	c1	946:12:27920:27921	8452996	5	True				
ANR	8453216	Statement	","	946:14:27922:27922	8452996	6	True				
ANR	8453217	Statement	c2	946:15:27923:27924	8452996	7	True				
ANR	8453218	Statement	)	946:17:27925:27925	8452996	8	True				
ANR	8453219	Statement	(	946:19:27927:27927	8452996	9	True				
ANR	8453220	Statement	(	946:20:27928:27928	8452996	10	True				
ANR	8453221	Statement	(	946:21:27929:27929	8452996	11	True				
ANR	8453222	Statement	uint	946:22:27930:27933	8452996	12	True				
ANR	8453223	Statement	)	946:26:27934:27934	8452996	13	True				
ANR	8453224	Statement	(	946:27:27935:27935	8452996	14	True				
ANR	8453225	Statement	c1	946:28:27936:27937	8452996	15	True				
ANR	8453226	Statement	)	946:30:27938:27938	8452996	16	True				
ANR	8453227	Statement	<<	946:32:27940:27941	8452996	17	True				
ANR	8453228	Statement	8	946:35:27943:27943	8452996	18	True				
ANR	8453229	Statement	)	946:36:27944:27944	8452996	19	True				
ANR	8453230	Statement	+	946:38:27946:27946	8452996	20	True				
ANR	8453231	Statement	(	946:40:27948:27948	8452996	21	True				
ANR	8453232	Statement	c2	946:41:27949:27950	8452996	22	True				
ANR	8453233	Statement	)	946:43:27951:27951	8452996	23	True				
ANR	8453234	Statement	)	946:44:27952:27952	8452996	24	True				
ANR	8453235	ExpressionStatement	seg_size = ( large_sizes ? u32 ( segment + 2 ) : u16 ( segment + 2 ) )	948:8:27963:28025	8452996	25	True				
ANR	8453236	AssignmentExpression	seg_size = ( large_sizes ? u32 ( segment + 2 ) : u16 ( segment + 2 ) )		8452996	0		=			
ANR	8453237	Identifier	seg_size		8452996	0					
ANR	8453238	ConditionalExpression	large_sizes ? u32 ( segment + 2 ) : u16 ( segment + 2 )		8452996	1					
ANR	8453239	Condition	large_sizes		8452996	0					
ANR	8453240	Identifier	large_sizes		8452996	0					
ANR	8453241	CallExpression	u32 ( segment + 2 )		8452996	1					
ANR	8453242	Callee	u32		8452996	0					
ANR	8453243	Identifier	u32		8452996	0					
ANR	8453244	ArgumentList	segment + 2		8452996	1					
ANR	8453245	Argument	segment + 2		8452996	0					
ANR	8453246	AdditiveExpression	segment + 2		8452996	0		+			
ANR	8453247	Identifier	segment		8452996	0					
ANR	8453248	PrimaryExpression	2		8452996	1					
ANR	8453249	CallExpression	u16 ( segment + 2 )		8452996	2					
ANR	8453250	Callee	u16		8452996	0					
ANR	8453251	Identifier	u16		8452996	0					
ANR	8453252	ArgumentList	segment + 2		8452996	1					
ANR	8453253	Argument	segment + 2		8452996	0					
ANR	8453254	AdditiveExpression	segment + 2		8452996	0		+			
ANR	8453255	Identifier	segment		8452996	0					
ANR	8453256	PrimaryExpression	2		8452996	1					
ANR	8453257	IfStatement	if ( seg_size + 2 + wsize > end - segment )		8452996	26					
ANR	8453258	Condition	seg_size + 2 + wsize > end - segment	949:12:28039:28074	8452996	0	True				
ANR	8453259	RelationalExpression	seg_size + 2 + wsize > end - segment		8452996	0		>			
ANR	8453260	AdditiveExpression	seg_size + 2 + wsize		8452996	0		+			
ANR	8453261	Identifier	seg_size		8452996	0					
ANR	8453262	AdditiveExpression	2 + wsize		8452996	1		+			
ANR	8453263	PrimaryExpression	2		8452996	0					
ANR	8453264	Identifier	wsize		8452996	1					
ANR	8453265	AdditiveExpression	end - segment		8452996	1		-			
ANR	8453266	Identifier	end		8452996	0					
ANR	8453267	Identifier	segment		8452996	1					
ANR	8453268	ExpressionStatement	return_error ( illegal_font_data )	950:12:28089:28120	8452996	1	True				
ANR	8453269	CallExpression	return_error ( illegal_font_data )		8452996	0					
ANR	8453270	Callee	return_error		8452996	0					
ANR	8453271	Identifier	return_error		8452996	0					
ANR	8453272	ArgumentList	illegal_font_data		8452996	1					
ANR	8453273	Argument	illegal_font_data		8452996	0					
ANR	8453274	Identifier	illegal_font_data		8452996	0					
ANR	8453275	SwitchStatement	switch ( seg_id )		8452996	27					
ANR	8453276	Condition	seg_id	952:16:28189:28194	8452996	0	True				
ANR	8453277	Identifier	seg_id		8452996	0					
ANR	8453278	CompoundStatement		39:24:1511:1511	8452996	1					
ANR	8453279	Label	case 0xffff :	953:12:28211:28222	8452996	0	True				
ANR	8453280	IfStatement	if ( segment != null_segment )		8452996	1					
ANR	8453281	Condition	segment != null_segment	954:20:28272:28294	8452996	0	True				
ANR	8453282	EqualityExpression	segment != null_segment		8452996	0		!=			
ANR	8453283	Identifier	segment		8452996	0					
ANR	8453284	Identifier	null_segment		8452996	1					
ANR	8453285	ExpressionStatement	return_error ( illegal_font_data )	955:20:28317:28348	8452996	1	True				
ANR	8453286	CallExpression	return_error ( illegal_font_data )		8452996	0					
ANR	8453287	Callee	return_error		8452996	0					
ANR	8453288	Identifier	return_error		8452996	0					
ANR	8453289	ArgumentList	illegal_font_data		8452996	1					
ANR	8453290	Argument	illegal_font_data		8452996	0					
ANR	8453291	Identifier	illegal_font_data		8452996	0					
ANR	8453292	ContinueStatement	continue ;	956:16:28366:28374	8452996	2	True				
ANR	8453293	Statement	case	957:12:28388:28391	8452996	3	True				
ANR	8453294	Statement	id2	957:17:28393:28395	8452996	4	True				
ANR	8453295	Statement	(	957:20:28396:28396	8452996	5	True				
ANR	8453296	Statement	'V'	957:21:28397:28399	8452996	6	True				
ANR	8453297	Statement	","	957:24:28400:28400	8452996	7	True				
ANR	8453298	Statement	'I'	957:26:28402:28404	8452996	8	True				
ANR	8453299	Statement	)	957:29:28405:28405	8452996	9	True				
ANR	8453300	Statement	:	957:30:28406:28406	8452996	10	True				
ANR	8453301	ContinueStatement	continue ;	958:16:28424:28432	8452996	11	True				
ANR	8453302	Statement	case	959:12:28446:28449	8452996	12	True				
ANR	8453303	Statement	id2	959:17:28451:28453	8452996	13	True				
ANR	8453304	Statement	(	959:20:28454:28454	8452996	14	True				
ANR	8453305	Statement	'C'	959:21:28455:28457	8452996	15	True				
ANR	8453306	Statement	","	959:24:28458:28458	8452996	16	True				
ANR	8453307	Statement	'C'	959:26:28460:28462	8452996	17	True				
ANR	8453308	Statement	)	959:29:28463:28463	8452996	18	True				
ANR	8453309	Statement	:	959:30:28464:28464	8452996	19	True				
ANR	8453310	IfStatement	if ( seg_size != 8 )		8452996	20					
ANR	8453311	Condition	seg_size != 8	960:20:28486:28498	8452996	0	True				
ANR	8453312	EqualityExpression	seg_size != 8		8452996	0		!=			
ANR	8453313	Identifier	seg_size		8452996	0					
ANR	8453314	PrimaryExpression	8		8452996	1					
ANR	8453315	ExpressionStatement	return_error ( illegal_font_data )	961:20:28521:28552	8452996	1	True				
ANR	8453316	CallExpression	return_error ( illegal_font_data )		8452996	0					
ANR	8453317	Callee	return_error		8452996	0					
ANR	8453318	Identifier	return_error		8452996	0					
ANR	8453319	ArgumentList	illegal_font_data		8452996	1					
ANR	8453320	Argument	illegal_font_data		8452996	0					
ANR	8453321	Identifier	illegal_font_data		8452996	0					
ANR	8453322	ExpressionStatement	"memcpy ( plfont -> character_complement , sdata , 8 )"	962:16:28570:28616	8452996	21	True				
ANR	8453323	CallExpression	"memcpy ( plfont -> character_complement , sdata , 8 )"		8452996	0					
ANR	8453324	Callee	memcpy		8452996	0					
ANR	8453325	Identifier	memcpy		8452996	0					
ANR	8453326	ArgumentList	plfont -> character_complement		8452996	1					
ANR	8453327	Argument	plfont -> character_complement		8452996	0					
ANR	8453328	PtrMemberAccess	plfont -> character_complement		8452996	0					
ANR	8453329	Identifier	plfont		8452996	0					
ANR	8453330	Identifier	character_complement		8452996	1					
ANR	8453331	Argument	sdata		8452996	1					
ANR	8453332	Identifier	sdata		8452996	0					
ANR	8453333	Argument	8		8452996	2					
ANR	8453334	PrimaryExpression	8		8452996	0					
ANR	8453335	ContinueStatement	continue ;	963:16:28634:28642	8452996	22	True				
ANR	8453336	Label	default :	964:12:28656:28663	8452996	23	True				
ANR	8453337	Identifier	default		8452996	0					
ANR	8453338	ExpressionStatement		965:16:28681:28681	8452996	24	True				
ANR	8453339	IfStatement	if ( fst == plfst_bitmap )		8452996	28					
ANR	8453340	Condition	fst == plfst_bitmap	968:12:28771:28789	8452996	0	True				
ANR	8453341	EqualityExpression	fst == plfst_bitmap		8452996	0		==			
ANR	8453342	Identifier	fst		8452996	0					
ANR	8453343	Identifier	plfst_bitmap		8452996	1					
ANR	8453344	SwitchStatement	switch ( seg_id )		8452996	1					
ANR	8453345	Condition	seg_id	969:20:28812:28817	8452996	0	True				
ANR	8453346	Identifier	seg_id		8452996	0					
ANR	8453347	CompoundStatement		56:28:2134:2134	8452996	1					
ANR	8453348	Statement	case	970:16:28838:28841	8452996	0	True				
ANR	8453349	Statement	id2	970:21:28843:28845	8452996	1	True				
ANR	8453350	Statement	(	970:24:28846:28846	8452996	2	True				
ANR	8453351	Statement	'B'	970:25:28847:28849	8452996	3	True				
ANR	8453352	Statement	","	970:28:28850:28850	8452996	4	True				
ANR	8453353	Statement	'R'	970:30:28852:28854	8452996	5	True				
ANR	8453354	Statement	)	970:33:28855:28855	8452996	6	True				
ANR	8453355	Statement	:	970:34:28856:28856	8452996	7	True				
ANR	8453356	IfStatement	if ( seg_size != 4 )		8452996	8					
ANR	8453357	Condition	seg_size != 4	971:24:28882:28894	8452996	0	True				
ANR	8453358	EqualityExpression	seg_size != 4		8452996	0		!=			
ANR	8453359	Identifier	seg_size		8452996	0					
ANR	8453360	PrimaryExpression	4		8452996	1					
ANR	8453361	ExpressionStatement	return_scan_error ( pfoe -> illegal_BR_segment )	972:24:28921:28964	8452996	1	True				
ANR	8453362	CallExpression	return_scan_error ( pfoe -> illegal_BR_segment )		8452996	0					
ANR	8453363	Callee	return_scan_error		8452996	0					
ANR	8453364	Identifier	return_scan_error		8452996	0					
ANR	8453365	ArgumentList	pfoe -> illegal_BR_segment		8452996	1					
ANR	8453366	Argument	pfoe -> illegal_BR_segment		8452996	0					
ANR	8453367	PtrMemberAccess	pfoe -> illegal_BR_segment		8452996	0					
ANR	8453368	Identifier	pfoe		8452996	0					
ANR	8453369	Identifier	illegal_BR_segment		8452996	1					
ANR	8453370	CompoundStatement		62:24:2384:2420	8452996	9					
ANR	8453371	IdentifierDeclStatement	uint xres = pl_get_uint16 ( sdata ) ;	974:24:29012:29044	8452996	0	True				
ANR	8453372	IdentifierDecl	xres = pl_get_uint16 ( sdata )		8452996	0					
ANR	8453373	IdentifierDeclType	uint		8452996	0					
ANR	8453374	Identifier	xres		8452996	1					
ANR	8453375	AssignmentExpression	xres = pl_get_uint16 ( sdata )		8452996	2		=			
ANR	8453376	Identifier	xres		8452996	0					
ANR	8453377	CallExpression	pl_get_uint16 ( sdata )		8452996	1					
ANR	8453378	Callee	pl_get_uint16		8452996	0					
ANR	8453379	Identifier	pl_get_uint16		8452996	0					
ANR	8453380	ArgumentList	sdata		8452996	1					
ANR	8453381	Argument	sdata		8452996	0					
ANR	8453382	Identifier	sdata		8452996	0					
ANR	8453383	IdentifierDeclStatement	uint yres = pl_get_uint16 ( sdata + 2 ) ;	975:24:29070:29106	8452996	1	True				
ANR	8453384	IdentifierDecl	yres = pl_get_uint16 ( sdata + 2 )		8452996	0					
ANR	8453385	IdentifierDeclType	uint		8452996	0					
ANR	8453386	Identifier	yres		8452996	1					
ANR	8453387	AssignmentExpression	yres = pl_get_uint16 ( sdata + 2 )		8452996	2		=			
ANR	8453388	Identifier	yres		8452996	0					
ANR	8453389	CallExpression	pl_get_uint16 ( sdata + 2 )		8452996	1					
ANR	8453390	Callee	pl_get_uint16		8452996	0					
ANR	8453391	Identifier	pl_get_uint16		8452996	0					
ANR	8453392	ArgumentList	sdata + 2		8452996	1					
ANR	8453393	Argument	sdata + 2		8452996	0					
ANR	8453394	AdditiveExpression	sdata + 2		8452996	0		+			
ANR	8453395	Identifier	sdata		8452996	0					
ANR	8453396	PrimaryExpression	2		8452996	1					
ANR	8453397	IfStatement	if ( xres == 0 || yres == 0 )		8452996	2					
ANR	8453398	Condition	xres == 0 || yres == 0	977:28:29137:29158	8452996	0	True				
ANR	8453399	OrExpression	xres == 0 || yres == 0		8452996	0		||			
ANR	8453400	EqualityExpression	xres == 0		8452996	0		==			
ANR	8453401	Identifier	xres		8452996	0					
ANR	8453402	PrimaryExpression	0		8452996	1					
ANR	8453403	EqualityExpression	yres == 0		8452996	1		==			
ANR	8453404	Identifier	yres		8452996	0					
ANR	8453405	PrimaryExpression	0		8452996	1					
ANR	8453406	ExpressionStatement	return_scan_error ( pfoe -> illegal_BR_segment )	978:28:29189:29232	8452996	1	True				
ANR	8453407	CallExpression	return_scan_error ( pfoe -> illegal_BR_segment )		8452996	0					
ANR	8453408	Callee	return_scan_error		8452996	0					
ANR	8453409	Identifier	return_scan_error		8452996	0					
ANR	8453410	ArgumentList	pfoe -> illegal_BR_segment		8452996	1					
ANR	8453411	Argument	pfoe -> illegal_BR_segment		8452996	0					
ANR	8453412	PtrMemberAccess	pfoe -> illegal_BR_segment		8452996	0					
ANR	8453413	Identifier	pfoe		8452996	0					
ANR	8453414	Identifier	illegal_BR_segment		8452996	1					
ANR	8453415	ExpressionStatement	plfont -> resolution . x = xres	979:24:29258:29285	8452996	3	True				
ANR	8453416	AssignmentExpression	plfont -> resolution . x = xres		8452996	0		=			
ANR	8453417	MemberAccess	plfont -> resolution . x		8452996	0					
ANR	8453418	PtrMemberAccess	plfont -> resolution		8452996	0					
ANR	8453419	Identifier	plfont		8452996	0					
ANR	8453420	Identifier	resolution		8452996	1					
ANR	8453421	Identifier	x		8452996	1					
ANR	8453422	Identifier	xres		8452996	1					
ANR	8453423	ExpressionStatement	plfont -> resolution . y = yres	980:24:29311:29338	8452996	4	True				
ANR	8453424	AssignmentExpression	plfont -> resolution . y = yres		8452996	0		=			
ANR	8453425	MemberAccess	plfont -> resolution . y		8452996	0					
ANR	8453426	PtrMemberAccess	plfont -> resolution		8452996	0					
ANR	8453427	Identifier	plfont		8452996	0					
ANR	8453428	Identifier	resolution		8452996	1					
ANR	8453429	Identifier	y		8452996	1					
ANR	8453430	Identifier	yres		8452996	1					
ANR	8453431	ExpressionStatement	found = true	982:20:29382:29394	8452996	10	True				
ANR	8453432	AssignmentExpression	found = true		8452996	0		=			
ANR	8453433	Identifier	found		8452996	0					
ANR	8453434	Identifier	true		8452996	1					
ANR	8453435	BreakStatement	break ;	983:20:29416:29421	8452996	11	True				
ANR	8453436	Label	default :	984:16:29439:29446	8452996	12	True				
ANR	8453437	Identifier	default		8452996	0					
ANR	8453438	IfStatement	if ( pfoe -> illegal_font_segment < 0 )		8452996	13					
ANR	8453439	Condition	pfoe -> illegal_font_segment < 0	985:24:29472:29501	8452996	0	True				
ANR	8453440	RelationalExpression	pfoe -> illegal_font_segment < 0		8452996	0		<			
ANR	8453441	PtrMemberAccess	pfoe -> illegal_font_segment		8452996	0					
ANR	8453442	Identifier	pfoe		8452996	0					
ANR	8453443	Identifier	illegal_font_segment		8452996	1					
ANR	8453444	PrimaryExpression	0		8452996	1					
ANR	8453445	ExpressionStatement	return_error ( pfoe -> illegal_font_segment )	986:24:29528:29568	8452996	1	True				
ANR	8453446	CallExpression	return_error ( pfoe -> illegal_font_segment )		8452996	0					
ANR	8453447	Callee	return_error		8452996	0					
ANR	8453448	Identifier	return_error		8452996	0					
ANR	8453449	ArgumentList	pfoe -> illegal_font_segment		8452996	1					
ANR	8453450	Argument	pfoe -> illegal_font_segment		8452996	0					
ANR	8453451	PtrMemberAccess	pfoe -> illegal_font_segment		8452996	0					
ANR	8453452	Identifier	pfoe		8452996	0					
ANR	8453453	Identifier	illegal_font_segment		8452996	1					
ANR	8453454	ElseStatement	else		8452996	0					
ANR	8453455	SwitchStatement	switch ( seg_id )		8452996	0					
ANR	8453456	Condition	seg_id	988:20:29650:29655	8452996	0	True				
ANR	8453457	Identifier	seg_id		8452996	0					
ANR	8453458	CompoundStatement		75:28:2972:2972	8452996	1					
ANR	8453459	Statement	case	989:16:29676:29679	8452996	0	True				
ANR	8453460	Statement	id2	989:21:29681:29683	8452996	1	True				
ANR	8453461	Statement	(	989:24:29684:29684	8452996	2	True				
ANR	8453462	Statement	'G'	989:25:29685:29687	8452996	3	True				
ANR	8453463	Statement	","	989:28:29688:29688	8452996	4	True				
ANR	8453464	Statement	'T'	989:30:29690:29692	8452996	5	True				
ANR	8453465	Statement	)	989:33:29693:29693	8452996	6	True				
ANR	8453466	Statement	:	989:34:29694:29694	8452996	7	True				
ANR	8453467	IfStatement	if ( seg_size < 12 + 5 * 16 || u16 ( sdata + 4 ) < 3 )		8452996	8					
ANR	8453468	Condition	seg_size < 12 + 5 * 16 || u16 ( sdata + 4 ) < 3	996:24:30047:30184	8452996	0	True				
ANR	8453469	OrExpression	seg_size < 12 + 5 * 16 || u16 ( sdata + 4 ) < 3		8452996	0		||			
ANR	8453470	RelationalExpression	seg_size < 12 + 5 * 16		8452996	0		<			
ANR	8453471	Identifier	seg_size		8452996	0					
ANR	8453472	AdditiveExpression	12 + 5 * 16		8452996	1		+			
ANR	8453473	PrimaryExpression	12		8452996	0					
ANR	8453474	MultiplicativeExpression	5 * 16		8452996	1		*			
ANR	8453475	PrimaryExpression	5		8452996	0					
ANR	8453476	PrimaryExpression	16		8452996	1					
ANR	8453477	RelationalExpression	u16 ( sdata + 4 ) < 3		8452996	1		<			
ANR	8453478	CallExpression	u16 ( sdata + 4 )		8452996	0					
ANR	8453479	Callee	u16		8452996	0					
ANR	8453480	Identifier	u16		8452996	0					
ANR	8453481	ArgumentList	sdata + 4		8452996	1					
ANR	8453482	Argument	sdata + 4		8452996	0					
ANR	8453483	AdditiveExpression	sdata + 4		8452996	0		+			
ANR	8453484	Identifier	sdata		8452996	0					
ANR	8453485	PrimaryExpression	4		8452996	1					
ANR	8453486	PrimaryExpression	3		8452996	1					
ANR	8453487	ExpressionStatement	return_scan_error ( pfoe -> illegal_GT_segment )	999:24:30211:30254	8452996	1	True				
ANR	8453488	CallExpression	return_scan_error ( pfoe -> illegal_GT_segment )		8452996	0					
ANR	8453489	Callee	return_scan_error		8452996	0					
ANR	8453490	Identifier	return_scan_error		8452996	0					
ANR	8453491	ArgumentList	pfoe -> illegal_GT_segment		8452996	1					
ANR	8453492	Argument	pfoe -> illegal_GT_segment		8452996	0					
ANR	8453493	PtrMemberAccess	pfoe -> illegal_GT_segment		8452996	0					
ANR	8453494	Identifier	pfoe		8452996	0					
ANR	8453495	Identifier	illegal_GT_segment		8452996	1					
ANR	8453496	ExpressionStatement	plfont -> offsets . GT = segment - header	1000:20:30276:30313	8452996	9	True				
ANR	8453497	AssignmentExpression	plfont -> offsets . GT = segment - header		8452996	0		=			
ANR	8453498	MemberAccess	plfont -> offsets . GT		8452996	0					
ANR	8453499	PtrMemberAccess	plfont -> offsets		8452996	0					
ANR	8453500	Identifier	plfont		8452996	0					
ANR	8453501	Identifier	offsets		8452996	1					
ANR	8453502	Identifier	GT		8452996	1					
ANR	8453503	AdditiveExpression	segment - header		8452996	1		-			
ANR	8453504	Identifier	segment		8452996	0					
ANR	8453505	Identifier	header		8452996	1					
ANR	8453506	ExpressionStatement	found = true	1001:20:30335:30347	8452996	10	True				
ANR	8453507	AssignmentExpression	found = true		8452996	0		=			
ANR	8453508	Identifier	found		8452996	0					
ANR	8453509	Identifier	true		8452996	1					
ANR	8453510	BreakStatement	break ;	1002:20:30369:30374	8452996	11	True				
ANR	8453511	Statement	case	1003:16:30392:30395	8452996	12	True				
ANR	8453512	Statement	id2	1003:21:30397:30399	8452996	13	True				
ANR	8453513	Statement	(	1003:24:30400:30400	8452996	14	True				
ANR	8453514	Statement	'G'	1003:25:30401:30403	8452996	15	True				
ANR	8453515	Statement	","	1003:28:30404:30404	8452996	16	True				
ANR	8453516	Statement	'C'	1003:30:30406:30408	8452996	17	True				
ANR	8453517	Statement	)	1003:33:30409:30409	8452996	18	True				
ANR	8453518	Statement	:	1003:34:30410:30410	8452996	19	True				
ANR	8453519	IfStatement	if ( seg_size < 6 || u16 ( sdata ) != 0 || seg_size != u16 ( sdata + 4 ) * 6 + 6 )		8452996	20					
ANR	8453520	Condition	seg_size < 6 || u16 ( sdata ) != 0 || seg_size != u16 ( sdata + 4 ) * 6 + 6	1004:24:30436:30528	8452996	0	True				
ANR	8453521	OrExpression	seg_size < 6 || u16 ( sdata ) != 0 || seg_size != u16 ( sdata + 4 ) * 6 + 6		8452996	0		||			
ANR	8453522	RelationalExpression	seg_size < 6		8452996	0		<			
ANR	8453523	Identifier	seg_size		8452996	0					
ANR	8453524	PrimaryExpression	6		8452996	1					
ANR	8453525	OrExpression	u16 ( sdata ) != 0 || seg_size != u16 ( sdata + 4 ) * 6 + 6		8452996	1		||			
ANR	8453526	EqualityExpression	u16 ( sdata ) != 0		8452996	0		!=			
ANR	8453527	CallExpression	u16 ( sdata )		8452996	0					
ANR	8453528	Callee	u16		8452996	0					
ANR	8453529	Identifier	u16		8452996	0					
ANR	8453530	ArgumentList	sdata		8452996	1					
ANR	8453531	Argument	sdata		8452996	0					
ANR	8453532	Identifier	sdata		8452996	0					
ANR	8453533	PrimaryExpression	0		8452996	1					
ANR	8453534	EqualityExpression	seg_size != u16 ( sdata + 4 ) * 6 + 6		8452996	1		!=			
ANR	8453535	Identifier	seg_size		8452996	0					
ANR	8453536	AdditiveExpression	u16 ( sdata + 4 ) * 6 + 6		8452996	1		+			
ANR	8453537	MultiplicativeExpression	u16 ( sdata + 4 ) * 6		8452996	0		*			
ANR	8453538	CallExpression	u16 ( sdata + 4 )		8452996	0					
ANR	8453539	Callee	u16		8452996	0					
ANR	8453540	Identifier	u16		8452996	0					
ANR	8453541	ArgumentList	sdata + 4		8452996	1					
ANR	8453542	Argument	sdata + 4		8452996	0					
ANR	8453543	AdditiveExpression	sdata + 4		8452996	0		+			
ANR	8453544	Identifier	sdata		8452996	0					
ANR	8453545	PrimaryExpression	4		8452996	1					
ANR	8453546	PrimaryExpression	6		8452996	1					
ANR	8453547	PrimaryExpression	6		8452996	1					
ANR	8453548	ExpressionStatement	return_scan_error ( pfoe -> illegal_GC_segment )	1006:24:30555:30598	8452996	1	True				
ANR	8453549	CallExpression	return_scan_error ( pfoe -> illegal_GC_segment )		8452996	0					
ANR	8453550	Callee	return_scan_error		8452996	0					
ANR	8453551	Identifier	return_scan_error		8452996	0					
ANR	8453552	ArgumentList	pfoe -> illegal_GC_segment		8452996	1					
ANR	8453553	Argument	pfoe -> illegal_GC_segment		8452996	0					
ANR	8453554	PtrMemberAccess	pfoe -> illegal_GC_segment		8452996	0					
ANR	8453555	Identifier	pfoe		8452996	0					
ANR	8453556	Identifier	illegal_GC_segment		8452996	1					
ANR	8453557	ExpressionStatement	plfont -> offsets . GC = segment - header	1007:20:30620:30657	8452996	21	True				
ANR	8453558	AssignmentExpression	plfont -> offsets . GC = segment - header		8452996	0		=			
ANR	8453559	MemberAccess	plfont -> offsets . GC		8452996	0					
ANR	8453560	PtrMemberAccess	plfont -> offsets		8452996	0					
ANR	8453561	Identifier	plfont		8452996	0					
ANR	8453562	Identifier	offsets		8452996	1					
ANR	8453563	Identifier	GC		8452996	1					
ANR	8453564	AdditiveExpression	segment - header		8452996	1		-			
ANR	8453565	Identifier	segment		8452996	0					
ANR	8453566	Identifier	header		8452996	1					
ANR	8453567	BreakStatement	break ;	1008:20:30679:30684	8452996	22	True				
ANR	8453568	Statement	case	1009:16:30702:30705	8452996	23	True				
ANR	8453569	Statement	id2	1009:21:30707:30709	8452996	24	True				
ANR	8453570	Statement	(	1009:24:30710:30710	8452996	25	True				
ANR	8453571	Statement	'V'	1009:25:30711:30713	8452996	26	True				
ANR	8453572	Statement	","	1009:28:30714:30714	8452996	27	True				
ANR	8453573	Statement	'T'	1009:30:30716:30718	8452996	28	True				
ANR	8453574	Statement	)	1009:33:30719:30719	8452996	29	True				
ANR	8453575	Statement	:	1009:34:30720:30720	8452996	30	True				
ANR	8453576	IfStatement	if ( ( seg_size & 3 ) != 0 || seg_size < 4 || u16 ( sdata + seg_size - 4 ) != 0xffff )		8452996	31					
ANR	8453577	Condition	( seg_size & 3 ) != 0 || seg_size < 4 || u16 ( sdata + seg_size - 4 ) != 0xffff	1011:24:30800:30897	8452996	0	True				
ANR	8453578	OrExpression	( seg_size & 3 ) != 0 || seg_size < 4 || u16 ( sdata + seg_size - 4 ) != 0xffff		8452996	0		||			
ANR	8453579	EqualityExpression	( seg_size & 3 ) != 0		8452996	0		!=			
ANR	8453580	BitAndExpression	seg_size & 3		8452996	0		&			
ANR	8453581	Identifier	seg_size		8452996	0					
ANR	8453582	PrimaryExpression	3		8452996	1					
ANR	8453583	PrimaryExpression	0		8452996	1					
ANR	8453584	OrExpression	seg_size < 4 || u16 ( sdata + seg_size - 4 ) != 0xffff		8452996	1		||			
ANR	8453585	RelationalExpression	seg_size < 4		8452996	0		<			
ANR	8453586	Identifier	seg_size		8452996	0					
ANR	8453587	PrimaryExpression	4		8452996	1					
ANR	8453588	EqualityExpression	u16 ( sdata + seg_size - 4 ) != 0xffff		8452996	1		!=			
ANR	8453589	CallExpression	u16 ( sdata + seg_size - 4 )		8452996	0					
ANR	8453590	Callee	u16		8452996	0					
ANR	8453591	Identifier	u16		8452996	0					
ANR	8453592	ArgumentList	sdata + seg_size - 4		8452996	1					
ANR	8453593	Argument	sdata + seg_size - 4		8452996	0					
ANR	8453594	AdditiveExpression	sdata + seg_size - 4		8452996	0		+			
ANR	8453595	Identifier	sdata		8452996	0					
ANR	8453596	AdditiveExpression	seg_size - 4		8452996	1		-			
ANR	8453597	Identifier	seg_size		8452996	0					
ANR	8453598	PrimaryExpression	4		8452996	1					
ANR	8453599	PrimaryExpression	0xffff		8452996	1					
ANR	8453600	ExpressionStatement	return_scan_error ( pfoe -> illegal_VT_segment )	1013:24:30924:30967	8452996	1	True				
ANR	8453601	CallExpression	return_scan_error ( pfoe -> illegal_VT_segment )		8452996	0					
ANR	8453602	Callee	return_scan_error		8452996	0					
ANR	8453603	Identifier	return_scan_error		8452996	0					
ANR	8453604	ArgumentList	pfoe -> illegal_VT_segment		8452996	1					
ANR	8453605	Argument	pfoe -> illegal_VT_segment		8452996	0					
ANR	8453606	PtrMemberAccess	pfoe -> illegal_VT_segment		8452996	0					
ANR	8453607	Identifier	pfoe		8452996	0					
ANR	8453608	Identifier	illegal_VT_segment		8452996	1					
ANR	8453609	CompoundStatement		103:24:4401:4407	8452996	32					
ANR	8453610	IdentifierDeclStatement	uint i ;	1016:24:31087:31093	8452996	0	True				
ANR	8453611	IdentifierDecl	i		8452996	0					
ANR	8453612	IdentifierDeclType	uint		8452996	0					
ANR	8453613	Identifier	i		8452996	1					
ANR	8453614	ForStatement	for ( i = 0 ; i < seg_size - 4 ; i += 4 )		8452996	1					
ANR	8453615	ForInit	i = 0 ;	1018:29:31125:31130	8452996	0	True				
ANR	8453616	AssignmentExpression	i = 0		8452996	0		=			
ANR	8453617	Identifier	i		8452996	0					
ANR	8453618	PrimaryExpression	0		8452996	1					
ANR	8453619	Condition	i < seg_size - 4	1018:36:31132:31147	8452996	1	True				
ANR	8453620	RelationalExpression	i < seg_size - 4		8452996	0		<			
ANR	8453621	Identifier	i		8452996	0					
ANR	8453622	AdditiveExpression	seg_size - 4		8452996	1		-			
ANR	8453623	Identifier	seg_size		8452996	0					
ANR	8453624	PrimaryExpression	4		8452996	1					
ANR	8453625	AssignmentExpression	i += 4	1018:54:31150:31155	8452996	2	True	+=			
ANR	8453626	Identifier	i		8452996	0					
ANR	8453627	PrimaryExpression	4		8452996	1					
ANR	8453628	IfStatement	if ( u16 ( sdata + i ) > u16 ( sdata + i + 4 ) )		8452996	3					
ANR	8453629	Condition	u16 ( sdata + i ) > u16 ( sdata + i + 4 )	1019:32:31190:31224	8452996	0	True				
ANR	8453630	RelationalExpression	u16 ( sdata + i ) > u16 ( sdata + i + 4 )		8452996	0		>			
ANR	8453631	CallExpression	u16 ( sdata + i )		8452996	0					
ANR	8453632	Callee	u16		8452996	0					
ANR	8453633	Identifier	u16		8452996	0					
ANR	8453634	ArgumentList	sdata + i		8452996	1					
ANR	8453635	Argument	sdata + i		8452996	0					
ANR	8453636	AdditiveExpression	sdata + i		8452996	0		+			
ANR	8453637	Identifier	sdata		8452996	0					
ANR	8453638	Identifier	i		8452996	1					
ANR	8453639	CallExpression	u16 ( sdata + i + 4 )		8452996	1					
ANR	8453640	Callee	u16		8452996	0					
ANR	8453641	Identifier	u16		8452996	0					
ANR	8453642	ArgumentList	sdata + i + 4		8452996	1					
ANR	8453643	Argument	sdata + i + 4		8452996	0					
ANR	8453644	AdditiveExpression	sdata + i + 4		8452996	0		+			
ANR	8453645	Identifier	sdata		8452996	0					
ANR	8453646	AdditiveExpression	i + 4		8452996	1		+			
ANR	8453647	Identifier	i		8452996	0					
ANR	8453648	PrimaryExpression	4		8452996	1					
ANR	8453649	ExpressionStatement	return_scan_error ( pfoe -> illegal_VT_segment )	1020:32:31259:31302	8452996	1	True				
ANR	8453650	CallExpression	return_scan_error ( pfoe -> illegal_VT_segment )		8452996	0					
ANR	8453651	Callee	return_scan_error		8452996	0					
ANR	8453652	Identifier	return_scan_error		8452996	0					
ANR	8453653	ArgumentList	pfoe -> illegal_VT_segment		8452996	1					
ANR	8453654	Argument	pfoe -> illegal_VT_segment		8452996	0					
ANR	8453655	PtrMemberAccess	pfoe -> illegal_VT_segment		8452996	0					
ANR	8453656	Identifier	pfoe		8452996	0					
ANR	8453657	Identifier	illegal_VT_segment		8452996	1					
ANR	8453658	ExpressionStatement	plfont -> offsets . VT = segment - header	1022:20:31346:31383	8452996	33	True				
ANR	8453659	AssignmentExpression	plfont -> offsets . VT = segment - header		8452996	0		=			
ANR	8453660	MemberAccess	plfont -> offsets . VT		8452996	0					
ANR	8453661	PtrMemberAccess	plfont -> offsets		8452996	0					
ANR	8453662	Identifier	plfont		8452996	0					
ANR	8453663	Identifier	offsets		8452996	1					
ANR	8453664	Identifier	VT		8452996	1					
ANR	8453665	AdditiveExpression	segment - header		8452996	1		-			
ANR	8453666	Identifier	segment		8452996	0					
ANR	8453667	Identifier	header		8452996	1					
ANR	8453668	BreakStatement	break ;	1023:20:31405:31410	8452996	34	True				
ANR	8453669	Statement	case	1024:16:31428:31431	8452996	35	True				
ANR	8453670	Statement	id2	1024:21:31433:31435	8452996	36	True				
ANR	8453671	Statement	(	1024:24:31436:31436	8452996	37	True				
ANR	8453672	Statement	'V'	1024:25:31437:31439	8452996	38	True				
ANR	8453673	Statement	","	1024:28:31440:31440	8452996	39	True				
ANR	8453674	Statement	'E'	1024:30:31442:31444	8452996	40	True				
ANR	8453675	Statement	)	1024:33:31445:31445	8452996	41	True				
ANR	8453676	Statement	:	1024:34:31446:31446	8452996	42	True				
ANR	8453677	BreakStatement	break ;	1025:20:31494:31499	8452996	43	True				
ANR	8453678	Statement	case	1026:16:31517:31520	8452996	44	True				
ANR	8453679	Statement	id2	1026:21:31522:31524	8452996	45	True				
ANR	8453680	Statement	(	1026:24:31525:31525	8452996	46	True				
ANR	8453681	Statement	'V'	1026:25:31526:31528	8452996	47	True				
ANR	8453682	Statement	","	1026:28:31529:31529	8452996	48	True				
ANR	8453683	Statement	'R'	1026:30:31531:31533	8452996	49	True				
ANR	8453684	Statement	)	1026:33:31534:31534	8452996	50	True				
ANR	8453685	Statement	:	1026:34:31535:31535	8452996	51	True				
ANR	8453686	BreakStatement	break ;	1027:20:31583:31588	8452996	52	True				
ANR	8453687	Statement	case	1028:16:31606:31609	8452996	53	True				
ANR	8453688	Statement	id2	1028:21:31611:31613	8452996	54	True				
ANR	8453689	Statement	(	1028:24:31614:31614	8452996	55	True				
ANR	8453690	Statement	'C'	1028:25:31615:31617	8452996	56	True				
ANR	8453691	Statement	","	1028:28:31618:31618	8452996	57	True				
ANR	8453692	Statement	'E'	1028:30:31620:31622	8452996	58	True				
ANR	8453693	Statement	)	1028:33:31623:31623	8452996	59	True				
ANR	8453694	Statement	:	1028:34:31624:31624	8452996	60	True				
ANR	8453695	BreakStatement	break ;	1029:20:31672:31677	8452996	61	True				
ANR	8453696	Label	default :	1030:16:31695:31702	8452996	62	True				
ANR	8453697	Identifier	default		8452996	0					
ANR	8453698	IfStatement	if ( pfoe -> illegal_font_segment < 0 )		8452996	63					
ANR	8453699	Condition	pfoe -> illegal_font_segment < 0	1031:24:31728:31757	8452996	0	True				
ANR	8453700	RelationalExpression	pfoe -> illegal_font_segment < 0		8452996	0		<			
ANR	8453701	PtrMemberAccess	pfoe -> illegal_font_segment		8452996	0					
ANR	8453702	Identifier	pfoe		8452996	0					
ANR	8453703	Identifier	illegal_font_segment		8452996	1					
ANR	8453704	PrimaryExpression	0		8452996	1					
ANR	8453705	ExpressionStatement	return_error ( pfoe -> illegal_font_segment )	1032:24:31784:31824	8452996	1	True				
ANR	8453706	CallExpression	return_error ( pfoe -> illegal_font_segment )		8452996	0					
ANR	8453707	Callee	return_error		8452996	0					
ANR	8453708	Identifier	return_error		8452996	0					
ANR	8453709	ArgumentList	pfoe -> illegal_font_segment		8452996	1					
ANR	8453710	Argument	pfoe -> illegal_font_segment		8452996	0					
ANR	8453711	PtrMemberAccess	pfoe -> illegal_font_segment		8452996	0					
ANR	8453712	Identifier	pfoe		8452996	0					
ANR	8453713	Identifier	illegal_font_segment		8452996	1					
ANR	8453714	Statement	undef	1034:1:31841:31845	8452996	29	True				
ANR	8453715	Statement	id2	1034:7:31847:31849	8452996	30	True				
ANR	8453716	IfStatement	if ( ! found )		8452996	17					
ANR	8453717	Condition	! found	1036:8:31865:31870	8452996	0	True				
ANR	8453718	UnaryOperationExpression	! found		8452996	0					
ANR	8453719	UnaryOperator	!		8452996	0					
ANR	8453720	Identifier	found		8452996	1					
ANR	8453721	ExpressionStatement	return_scan_error ( pfoe -> missing_required_segment )	1037:8:31881:31930	8452996	1	True				
ANR	8453722	CallExpression	return_scan_error ( pfoe -> missing_required_segment )		8452996	0					
ANR	8453723	Callee	return_scan_error		8452996	0					
ANR	8453724	Identifier	return_scan_error		8452996	0					
ANR	8453725	ArgumentList	pfoe -> missing_required_segment		8452996	1					
ANR	8453726	Argument	pfoe -> missing_required_segment		8452996	0					
ANR	8453727	PtrMemberAccess	pfoe -> missing_required_segment		8452996	0					
ANR	8453728	Identifier	pfoe		8452996	0					
ANR	8453729	Identifier	missing_required_segment		8452996	1					
ANR	8453730	IfStatement	if ( segment != end )		8452996	18					
ANR	8453731	Condition	segment != end	1038:8:31940:31953	8452996	0	True				
ANR	8453732	EqualityExpression	segment != end		8452996	0		!=			
ANR	8453733	Identifier	segment		8452996	0					
ANR	8453734	Identifier	end		8452996	1					
ANR	8453735	ExpressionStatement	return_error ( illegal_font_data )	1039:8:31964:31995	8452996	1	True				
ANR	8453736	CallExpression	return_error ( illegal_font_data )		8452996	0					
ANR	8453737	Callee	return_error		8452996	0					
ANR	8453738	Identifier	return_error		8452996	0					
ANR	8453739	ArgumentList	illegal_font_data		8452996	1					
ANR	8453740	Argument	illegal_font_data		8452996	0					
ANR	8453741	Identifier	illegal_font_data		8452996	0					
ANR	8453742	ExpressionStatement	plfont -> large_sizes = large_sizes	1040:4:32001:32034	8452996	19	True				
ANR	8453743	AssignmentExpression	plfont -> large_sizes = large_sizes		8452996	0		=			
ANR	8453744	PtrMemberAccess	plfont -> large_sizes		8452996	0					
ANR	8453745	Identifier	plfont		8452996	0					
ANR	8453746	Identifier	large_sizes		8452996	1					
ANR	8453747	Identifier	large_sizes		8452996	1					
ANR	8453748	ExpressionStatement	plfont -> scaling_technology = fst	1041:4:32040:32072	8452996	20	True				
ANR	8453749	AssignmentExpression	plfont -> scaling_technology = fst		8452996	0		=			
ANR	8453750	PtrMemberAccess	plfont -> scaling_technology		8452996	0					
ANR	8453751	Identifier	plfont		8452996	0					
ANR	8453752	Identifier	scaling_technology		8452996	1					
ANR	8453753	Identifier	fst		8452996	1					
ANR	8453754	ReturnStatement	return 0 ;	1042:4:32078:32086	8452996	21	True				
ANR	8453755	PrimaryExpression	0		8452996	0					
ANR	8453756	Statement	undef	1043:1:32089:32093	8452996	22	True				
ANR	8453757	Statement	return_scan_error	1043:7:32095:32111	8452996	23	True				
ANR	8453758	ReturnType	int		8452996	1					
ANR	8453759	Identifier	pl_font_scan_segments		8452996	2					
ANR	8453760	ParameterList	"const gs_memory_t * mem , pl_font_t * plfont , int fst_offset , int start_offset , long end_offset , bool large_sizes , const pl_font_offset_errors_t * pfoe"		8452996	3					
ANR	8453761	Parameter	const gs_memory_t * mem	910:22:26467:26489	8452996	0	True				
ANR	8453762	ParameterType	const gs_memory_t *		8452996	0					
ANR	8453763	Identifier	mem		8452996	1					
ANR	8453764	Parameter	pl_font_t * plfont	911:22:26514:26531	8452996	1	True				
ANR	8453765	ParameterType	pl_font_t *		8452996	0					
ANR	8453766	Identifier	plfont		8452996	1					
ANR	8453767	Parameter	int fst_offset	911:42:26534:26547	8452996	2	True				
ANR	8453768	ParameterType	int		8452996	0					
ANR	8453769	Identifier	fst_offset		8452996	1					
ANR	8453770	Parameter	int start_offset	911:58:26550:26565	8452996	3	True				
ANR	8453771	ParameterType	int		8452996	0					
ANR	8453772	Identifier	start_offset		8452996	1					
ANR	8453773	Parameter	long end_offset	912:22:26590:26604	8452996	4	True				
ANR	8453774	ParameterType	long		8452996	0					
ANR	8453775	Identifier	end_offset		8452996	1					
ANR	8453776	Parameter	bool large_sizes	912:39:26607:26622	8452996	5	True				
ANR	8453777	ParameterType	bool		8452996	0					
ANR	8453778	Identifier	large_sizes		8452996	1					
ANR	8453779	Parameter	const pl_font_offset_errors_t * pfoe	913:22:26647:26682	8452996	6	True				
ANR	8453780	ParameterType	const pl_font_offset_errors_t *		8452996	0					
ANR	8453781	Identifier	pfoe		8452996	1					
ANR	8453782	CFGEntryNode	ENTRY		8452996		True				
ANR	8453783	CFGExitNode	EXIT		8452996		True				
ANR	8453784	Symbol	plfont -> scaling_technology		8452996						
ANR	8453785	Symbol	plfont -> header		8452996						
ANR	8453786	Symbol	end_offset		8452996						
ANR	8453787	Symbol	plfont		8452996						
ANR	8453788	Symbol	plfont -> large_sizes		8452996						
ANR	8453789	Symbol	pfoe -> illegal_font_header_fields		8452996						
ANR	8453790	Symbol	xres		8452996						
ANR	8453791	Symbol	null_segment		8452996						
ANR	8453792	Symbol	memcmp		8452996						
ANR	8453793	Symbol	u32		8452996						
ANR	8453794	Symbol	segment		8452996						
ANR	8453795	Symbol	seg_size		8452996						
ANR	8453796	Symbol	sdata		8452996						
ANR	8453797	Symbol	* pfoe		8452996						
ANR	8453798	Symbol	pfoe -> illegal_font_segment		8452996						
ANR	8453799	Symbol	plfont -> character_complement		8452996						
ANR	8453800	Symbol	illegal_font_data		8452996						
ANR	8453801	Symbol	pfoe -> illegal_BR_segment		8452996						
ANR	8453802	Symbol	* fst_offset		8452996						
ANR	8453803	Symbol	* header		8452996						
ANR	8453804	Symbol	plfont -> resolution . x		8452996						
ANR	8453805	Symbol	plfont -> resolution . y		8452996						
ANR	8453806	Symbol	true		8452996						
ANR	8453807	Symbol	header		8452996						
ANR	8453808	Symbol	seg_id		8452996						
ANR	8453809	Symbol	pfoe -> illegal_GT_segment		8452996						
ANR	8453810	Symbol	wsize		8452996						
ANR	8453811	Symbol	fst_offset		8452996						
ANR	8453812	Symbol	yres		8452996						
ANR	8453813	Symbol	pfoe -> illegal_GC_segment		8452996						
ANR	8453814	Symbol	fst		8452996						
ANR	8453815	Symbol	plfst_bitmap		8452996						
ANR	8453816	Symbol	found		8452996						
ANR	8453817	Symbol	pfoe -> missing_required_segment		8452996						
ANR	8453818	Symbol	mem		8452996						
ANR	8453819	Symbol	large_sizes		8452996						
ANR	8453820	Symbol	end		8452996						
ANR	8453821	Symbol	u16		8452996						
ANR	8453822	Symbol	pfoe -> illegal_VT_segment		8452996						
ANR	8453823	Symbol	plfont -> offsets . VT		8452996						
ANR	8453824	Symbol	pfoe -> illegal_null_segment_size		8452996						
ANR	8453825	Symbol	pl_get_uint16		8452996						
ANR	8453826	Symbol	err		8452996						
ANR	8453827	Symbol	pfoe -> illegal_font_data		8452996						
ANR	8453828	Symbol	false		8452996						
ANR	8453829	Symbol	plfont -> resolution		8452996						
ANR	8453830	Symbol	i		8452996						
ANR	8453831	Symbol	plfont -> offsets		8452996						
ANR	8453832	Symbol	plfont -> offsets . GT		8452996						
ANR	8453833	Symbol	pfoe		8452996						
ANR	8453834	Symbol	* plfont		8452996						
ANR	8453835	Symbol	start_offset		8452996						
ANR	8453836	Symbol	plfont -> offsets . GC		8452996						
ANR	8453837	Function	pl_free_tt_fontfile_buffer	1046:0:32116:32268							
ANR	8453838	FunctionDef	"pl_free_tt_fontfile_buffer (gs_memory_t * mem , byte * ptt_font_data)"		8453837	0					
ANR	8453839	CompoundStatement		1048:0:32188:32268	8453837	0					
ANR	8453840	ExpressionStatement	"gs_free_object ( mem , ptt_font_data , ""pl_tt_load_font data"" )"	1049:4:32194:32252	8453837	0	True				
ANR	8453841	CallExpression	"gs_free_object ( mem , ptt_font_data , ""pl_tt_load_font data"" )"		8453837	0					
ANR	8453842	Callee	gs_free_object		8453837	0					
ANR	8453843	Identifier	gs_free_object		8453837	0					
ANR	8453844	ArgumentList	mem		8453837	1					
ANR	8453845	Argument	mem		8453837	0					
ANR	8453846	Identifier	mem		8453837	0					
ANR	8453847	Argument	ptt_font_data		8453837	1					
ANR	8453848	Identifier	ptt_font_data		8453837	0					
ANR	8453849	Argument	"""pl_tt_load_font data"""		8453837	2					
ANR	8453850	PrimaryExpression	"""pl_tt_load_font data"""		8453837	0					
ANR	8453851	ReturnStatement	return 0 ;	1050:4:32258:32266	8453837	1	True				
ANR	8453852	PrimaryExpression	0		8453837	0					
ANR	8453853	ReturnType	int		8453837	1					
ANR	8453854	Identifier	pl_free_tt_fontfile_buffer		8453837	2					
ANR	8453855	ParameterList	"gs_memory_t * mem , byte * ptt_font_data"		8453837	3					
ANR	8453856	Parameter	gs_memory_t * mem	1047:27:32147:32163	8453837	0	True				
ANR	8453857	ParameterType	gs_memory_t *		8453837	0					
ANR	8453858	Identifier	mem		8453837	1					
ANR	8453859	Parameter	byte * ptt_font_data	1047:46:32166:32185	8453837	1	True				
ANR	8453860	ParameterType	byte *		8453837	0					
ANR	8453861	Identifier	ptt_font_data		8453837	1					
ANR	8453862	CFGEntryNode	ENTRY		8453837		True				
ANR	8453863	CFGExitNode	EXIT		8453837		True				
ANR	8453864	Symbol	mem		8453837						
ANR	8453865	Symbol	ptt_font_data		8453837						
ANR	8453866	Function	pl_alloc_tt_fontfile_buffer	1053:0:32271:33077							
ANR	8453867	FunctionDef	"pl_alloc_tt_fontfile_buffer (stream * in , gs_memory_t * mem , byte * * pptt_font_data , ulong * size)"		8453866	0					
ANR	8453868	CompoundStatement		1056:0:32401:33077	8453866	0					
ANR	8453869	IdentifierDeclStatement	"ulong len = ( sfseek ( in , 0L , SEEK_END ) , sftell ( in ) ) ;"	1057:4:32407:32457	8453866	0	True				
ANR	8453870	IdentifierDecl	"len = ( sfseek ( in , 0L , SEEK_END ) , sftell ( in ) )"		8453866	0					
ANR	8453871	IdentifierDeclType	ulong		8453866	0					
ANR	8453872	Identifier	len		8453866	1					
ANR	8453873	AssignmentExpression	"len = ( sfseek ( in , 0L , SEEK_END ) , sftell ( in ) )"		8453866	2		=			
ANR	8453874	Identifier	len		8453866	0					
ANR	8453875	Expression	"sfseek ( in , 0L , SEEK_END ) , sftell ( in )"		8453866	1					
ANR	8453876	CallExpression	"sfseek ( in , 0L , SEEK_END )"		8453866	0					
ANR	8453877	Callee	sfseek		8453866	0					
ANR	8453878	Identifier	sfseek		8453866	0					
ANR	8453879	ArgumentList	in		8453866	1					
ANR	8453880	Argument	in		8453866	0					
ANR	8453881	Identifier	in		8453866	0					
ANR	8453882	Argument	0L		8453866	1					
ANR	8453883	PrimaryExpression	0L		8453866	0					
ANR	8453884	Argument	SEEK_END		8453866	2					
ANR	8453885	Identifier	SEEK_END		8453866	0					
ANR	8453886	CallExpression	sftell ( in )		8453866	1					
ANR	8453887	Callee	sftell		8453866	0					
ANR	8453888	Identifier	sftell		8453866	0					
ANR	8453889	ArgumentList	in		8453866	1					
ANR	8453890	Argument	in		8453866	0					
ANR	8453891	Identifier	in		8453866	0					
ANR	8453892	ExpressionStatement	* size = 6 + len	1059:4:32464:32479	8453866	1	True				
ANR	8453893	AssignmentExpression	* size = 6 + len		8453866	0		=			
ANR	8453894	UnaryOperationExpression	* size		8453866	0					
ANR	8453895	UnaryOperator	*		8453866	0					
ANR	8453896	Identifier	size		8453866	1					
ANR	8453897	AdditiveExpression	6 + len		8453866	1		+			
ANR	8453898	PrimaryExpression	6		8453866	0					
ANR	8453899	Identifier	len		8453866	1					
ANR	8453900	IfStatement	if ( * size != ( uint ) ( * size ) )		8453866	2					
ANR	8453901	Condition	* size != ( uint ) ( * size )	1060:8:32536:32558	8453866	0	True				
ANR	8453902	EqualityExpression	* size != ( uint ) ( * size )		8453866	0		!=			
ANR	8453903	UnaryOperationExpression	* size		8453866	0					
ANR	8453904	UnaryOperator	*		8453866	0					
ANR	8453905	Identifier	size		8453866	1					
ANR	8453906	CastExpression	( uint ) ( * size )		8453866	1					
ANR	8453907	CastTarget	uint		8453866	0					
ANR	8453908	UnaryOperationExpression	* size		8453866	1					
ANR	8453909	UnaryOperator	*		8453866	0					
ANR	8453910	Identifier	size		8453866	1					
ANR	8453911	CompoundStatement		5:33:159:159	8453866	1					
ANR	8453912	ExpressionStatement	sfclose ( in )	1066:8:32752:32763	8453866	0	True				
ANR	8453913	CallExpression	sfclose ( in )		8453866	0					
ANR	8453914	Callee	sfclose		8453866	0					
ANR	8453915	Identifier	sfclose		8453866	0					
ANR	8453916	ArgumentList	in		8453866	1					
ANR	8453917	Argument	in		8453866	0					
ANR	8453918	Identifier	in		8453866	0					
ANR	8453919	ExpressionStatement	return_error ( gs_error_VMerror )	1067:8:32773:32803	8453866	1	True				
ANR	8453920	CallExpression	return_error ( gs_error_VMerror )		8453866	0					
ANR	8453921	Callee	return_error		8453866	0					
ANR	8453922	Identifier	return_error		8453866	0					
ANR	8453923	ArgumentList	gs_error_VMerror		8453866	1					
ANR	8453924	Argument	gs_error_VMerror		8453866	0					
ANR	8453925	Identifier	gs_error_VMerror		8453866	0					
ANR	8453926	ExpressionStatement	srewind ( in )	1069:4:32815:32826	8453866	3	True				
ANR	8453927	CallExpression	srewind ( in )		8453866	0					
ANR	8453928	Callee	srewind		8453866	0					
ANR	8453929	Identifier	srewind		8453866	0					
ANR	8453930	ArgumentList	in		8453866	1					
ANR	8453931	Argument	in		8453866	0					
ANR	8453932	Identifier	in		8453866	0					
ANR	8453933	ExpressionStatement	"* pptt_font_data = gs_alloc_bytes ( mem , * size , ""pl_tt_load_font data"" )"	1070:4:32832:32900	8453866	4	True				
ANR	8453934	AssignmentExpression	"* pptt_font_data = gs_alloc_bytes ( mem , * size , ""pl_tt_load_font data"" )"		8453866	0		=			
ANR	8453935	UnaryOperationExpression	* pptt_font_data		8453866	0					
ANR	8453936	UnaryOperator	*		8453866	0					
ANR	8453937	Identifier	pptt_font_data		8453866	1					
ANR	8453938	CallExpression	"gs_alloc_bytes ( mem , * size , ""pl_tt_load_font data"" )"		8453866	1					
ANR	8453939	Callee	gs_alloc_bytes		8453866	0					
ANR	8453940	Identifier	gs_alloc_bytes		8453866	0					
ANR	8453941	ArgumentList	mem		8453866	1					
ANR	8453942	Argument	mem		8453866	0					
ANR	8453943	Identifier	mem		8453866	0					
ANR	8453944	Argument	* size		8453866	1					
ANR	8453945	UnaryOperationExpression	* size		8453866	0					
ANR	8453946	UnaryOperator	*		8453866	0					
ANR	8453947	Identifier	size		8453866	1					
ANR	8453948	Argument	"""pl_tt_load_font data"""		8453866	2					
ANR	8453949	PrimaryExpression	"""pl_tt_load_font data"""		8453866	0					
ANR	8453950	IfStatement	if ( * pptt_font_data == 0 )		8453866	5					
ANR	8453951	Condition	* pptt_font_data == 0	1071:8:32910:32929	8453866	0	True				
ANR	8453952	EqualityExpression	* pptt_font_data == 0		8453866	0		==			
ANR	8453953	UnaryOperationExpression	* pptt_font_data		8453866	0					
ANR	8453954	UnaryOperator	*		8453866	0					
ANR	8453955	Identifier	pptt_font_data		8453866	1					
ANR	8453956	PrimaryExpression	0		8453866	1					
ANR	8453957	CompoundStatement		16:30:530:530	8453866	1					
ANR	8453958	ExpressionStatement	sfclose ( in )	1072:8:32942:32953	8453866	0	True				
ANR	8453959	CallExpression	sfclose ( in )		8453866	0					
ANR	8453960	Callee	sfclose		8453866	0					
ANR	8453961	Identifier	sfclose		8453866	0					
ANR	8453962	ArgumentList	in		8453866	1					
ANR	8453963	Argument	in		8453866	0					
ANR	8453964	Identifier	in		8453866	0					
ANR	8453965	ExpressionStatement	return_error ( gs_error_VMerror )	1073:8:32963:32993	8453866	1	True				
ANR	8453966	CallExpression	return_error ( gs_error_VMerror )		8453866	0					
ANR	8453967	Callee	return_error		8453866	0					
ANR	8453968	Identifier	return_error		8453866	0					
ANR	8453969	ArgumentList	gs_error_VMerror		8453866	1					
ANR	8453970	Argument	gs_error_VMerror		8453866	0					
ANR	8453971	Identifier	gs_error_VMerror		8453866	0					
ANR	8453972	ExpressionStatement	"sfread ( * pptt_font_data + 6 , 1 , len , in )"	1075:4:33005:33044	8453866	6	True				
ANR	8453973	CallExpression	"sfread ( * pptt_font_data + 6 , 1 , len , in )"		8453866	0					
ANR	8453974	Callee	sfread		8453866	0					
ANR	8453975	Identifier	sfread		8453866	0					
ANR	8453976	ArgumentList	* pptt_font_data + 6		8453866	1					
ANR	8453977	Argument	* pptt_font_data + 6		8453866	0					
ANR	8453978	AdditiveExpression	* pptt_font_data + 6		8453866	0		+			
ANR	8453979	UnaryOperationExpression	* pptt_font_data		8453866	0					
ANR	8453980	UnaryOperator	*		8453866	0					
ANR	8453981	Identifier	pptt_font_data		8453866	1					
ANR	8453982	PrimaryExpression	6		8453866	1					
ANR	8453983	Argument	1		8453866	1					
ANR	8453984	PrimaryExpression	1		8453866	0					
ANR	8453985	Argument	len		8453866	2					
ANR	8453986	Identifier	len		8453866	0					
ANR	8453987	Argument	in		8453866	3					
ANR	8453988	Identifier	in		8453866	0					
ANR	8453989	ExpressionStatement	sfclose ( in )	1076:4:33050:33061	8453866	7	True				
ANR	8453990	CallExpression	sfclose ( in )		8453866	0					
ANR	8453991	Callee	sfclose		8453866	0					
ANR	8453992	Identifier	sfclose		8453866	0					
ANR	8453993	ArgumentList	in		8453866	1					
ANR	8453994	Argument	in		8453866	0					
ANR	8453995	Identifier	in		8453866	0					
ANR	8453996	ReturnStatement	return 0 ;	1077:4:33067:33075	8453866	8	True				
ANR	8453997	PrimaryExpression	0		8453866	0					
ANR	8453998	ReturnType	int		8453866	1					
ANR	8453999	Identifier	pl_alloc_tt_fontfile_buffer		8453866	2					
ANR	8454000	ParameterList	"stream * in , gs_memory_t * mem , byte * * pptt_font_data , ulong * size"		8453866	3					
ANR	8454001	Parameter	stream * in	1054:28:32303:32313	8453866	0	True				
ANR	8454002	ParameterType	stream *		8453866	0					
ANR	8454003	Identifier	in		8453866	1					
ANR	8454004	Parameter	gs_memory_t * mem	1054:41:32316:32332	8453866	1	True				
ANR	8454005	ParameterType	gs_memory_t *		8453866	0					
ANR	8454006	Identifier	mem		8453866	1					
ANR	8454007	Parameter	byte * * pptt_font_data	1055:28:32363:32384	8453866	2	True				
ANR	8454008	ParameterType	byte * *		8453866	0					
ANR	8454009	Identifier	pptt_font_data		8453866	1					
ANR	8454010	Parameter	ulong * size	1055:52:32387:32398	8453866	3	True				
ANR	8454011	ParameterType	ulong *		8453866	0					
ANR	8454012	Identifier	size		8453866	1					
ANR	8454013	CFGEntryNode	ENTRY		8453866		True				
ANR	8454014	CFGExitNode	EXIT		8453866		True				
ANR	8454015	Symbol	pptt_font_data		8453866						
ANR	8454016	Symbol	gs_error_VMerror		8453866						
ANR	8454017	Symbol	gs_alloc_bytes		8453866						
ANR	8454018	Symbol	* size		8453866						
ANR	8454019	Symbol	mem		8453866						
ANR	8454020	Symbol	size		8453866						
ANR	8454021	Symbol	len		8453866						
ANR	8454022	Symbol	sftell		8453866						
ANR	8454023	Symbol	in		8453866						
ANR	8454024	Symbol	* pptt_font_data		8453866						
ANR	8454025	Symbol	sfseek		8453866						
ANR	8454026	Symbol	SEEK_END		8453866						
ANR	8454027	Function	pl_load_tt_font	1081:0:33141:35679							
ANR	8454028	FunctionDef	"pl_load_tt_font (stream * in , gs_font_dir * pdir , gs_memory_t * mem , long unique_id , pl_font_t * * pplfont , char * font_name)"		8454027	0					
ANR	8454029	CompoundStatement		1084:0:33284:35679	8454027	0					
ANR	8454030	IdentifierDeclStatement	byte * tt_font_datap = NULL ;	1085:4:33290:33316	8454027	0	True				
ANR	8454031	IdentifierDecl	* tt_font_datap = NULL		8454027	0					
ANR	8454032	IdentifierDeclType	byte *		8454027	0					
ANR	8454033	Identifier	tt_font_datap		8454027	1					
ANR	8454034	AssignmentExpression	* tt_font_datap = NULL		8454027	2		=			
ANR	8454035	Identifier	NULL		8454027	0					
ANR	8454036	Identifier	NULL		8454027	1					
ANR	8454037	IdentifierDeclStatement	ulong size ;	1086:4:33322:33332	8454027	1	True				
ANR	8454038	IdentifierDecl	size		8454027	0					
ANR	8454039	IdentifierDeclType	ulong		8454027	0					
ANR	8454040	Identifier	size		8454027	1					
ANR	8454041	IdentifierDeclStatement	int code ;	1087:4:33338:33346	8454027	2	True				
ANR	8454042	IdentifierDecl	code		8454027	0					
ANR	8454043	IdentifierDeclType	int		8454027	0					
ANR	8454044	Identifier	code		8454027	1					
ANR	8454045	IdentifierDeclStatement	gs_font_type42 * pfont = NULL ;	1088:4:33352:33380	8454027	3	True				
ANR	8454046	IdentifierDecl	* pfont = NULL		8454027	0					
ANR	8454047	IdentifierDeclType	gs_font_type42 *		8454027	0					
ANR	8454048	Identifier	pfont		8454027	1					
ANR	8454049	AssignmentExpression	* pfont = NULL		8454027	2		=			
ANR	8454050	Identifier	NULL		8454027	0					
ANR	8454051	Identifier	NULL		8454027	1					
ANR	8454052	IdentifierDeclStatement	pl_font_t * plfont = NULL ;	1089:4:33386:33410	8454027	4	True				
ANR	8454053	IdentifierDecl	* plfont = NULL		8454027	0					
ANR	8454054	IdentifierDeclType	pl_font_t *		8454027	0					
ANR	8454055	Identifier	plfont		8454027	1					
ANR	8454056	AssignmentExpression	* plfont = NULL		8454027	2		=			
ANR	8454057	Identifier	NULL		8454027	0					
ANR	8454058	Identifier	NULL		8454027	1					
ANR	8454059	IdentifierDeclStatement	byte * file_name = NULL ;	1090:4:33416:33438	8454027	5	True				
ANR	8454060	IdentifierDecl	* file_name = NULL		8454027	0					
ANR	8454061	IdentifierDeclType	byte *		8454027	0					
ANR	8454062	Identifier	file_name		8454027	1					
ANR	8454063	AssignmentExpression	* file_name = NULL		8454027	2		=			
ANR	8454064	Identifier	NULL		8454027	0					
ANR	8454065	Identifier	NULL		8454027	1					
ANR	8454066	IdentifierDeclStatement	gs_const_string pfname ;	1091:4:33444:33466	8454027	6	True				
ANR	8454067	IdentifierDecl	pfname		8454027	0					
ANR	8454068	IdentifierDeclType	gs_const_string		8454027	0					
ANR	8454069	Identifier	pfname		8454027	1					
ANR	8454070	IfStatement	"if ( sfilename ( in , & pfname ) == 0 )"		8454027	7					
ANR	8454071	Condition	"sfilename ( in , & pfname ) == 0"	1093:8:33477:33503	8454027	0	True				
ANR	8454072	EqualityExpression	"sfilename ( in , & pfname ) == 0"		8454027	0		==			
ANR	8454073	CallExpression	"sfilename ( in , & pfname )"		8454027	0					
ANR	8454074	Callee	sfilename		8454027	0					
ANR	8454075	Identifier	sfilename		8454027	0					
ANR	8454076	ArgumentList	in		8454027	1					
ANR	8454077	Argument	in		8454027	0					
ANR	8454078	Identifier	in		8454027	0					
ANR	8454079	Argument	& pfname		8454027	1					
ANR	8454080	UnaryOperationExpression	& pfname		8454027	0					
ANR	8454081	UnaryOperator	&		8454027	0					
ANR	8454082	Identifier	pfname		8454027	1					
ANR	8454083	PrimaryExpression	0		8454027	1					
ANR	8454084	CompoundStatement		10:37:221:221	8454027	1					
ANR	8454085	ExpressionStatement	"file_name = gs_alloc_bytes ( mem , pfname . size + 1 , ""pl_load_tt_font file_name"" )"	1094:8:33516:33605	8454027	0	True				
ANR	8454086	AssignmentExpression	"file_name = gs_alloc_bytes ( mem , pfname . size + 1 , ""pl_load_tt_font file_name"" )"		8454027	0		=			
ANR	8454087	Identifier	file_name		8454027	0					
ANR	8454088	CallExpression	"gs_alloc_bytes ( mem , pfname . size + 1 , ""pl_load_tt_font file_name"" )"		8454027	1					
ANR	8454089	Callee	gs_alloc_bytes		8454027	0					
ANR	8454090	Identifier	gs_alloc_bytes		8454027	0					
ANR	8454091	ArgumentList	mem		8454027	1					
ANR	8454092	Argument	mem		8454027	0					
ANR	8454093	Identifier	mem		8454027	0					
ANR	8454094	Argument	pfname . size + 1		8454027	1					
ANR	8454095	AdditiveExpression	pfname . size + 1		8454027	0		+			
ANR	8454096	MemberAccess	pfname . size		8454027	0					
ANR	8454097	Identifier	pfname		8454027	0					
ANR	8454098	Identifier	size		8454027	1					
ANR	8454099	PrimaryExpression	1		8454027	1					
ANR	8454100	Argument	"""pl_load_tt_font file_name"""		8454027	2					
ANR	8454101	PrimaryExpression	"""pl_load_tt_font file_name"""		8454027	0					
ANR	8454102	IfStatement	if ( ! file_name )		8454027	1					
ANR	8454103	Condition	! file_name	1096:12:33619:33628	8454027	0	True				
ANR	8454104	UnaryOperationExpression	! file_name		8454027	0					
ANR	8454105	UnaryOperator	!		8454027	0					
ANR	8454106	Identifier	file_name		8454027	1					
ANR	8454107	CompoundStatement		13:24:346:346	8454027	1					
ANR	8454108	ExpressionStatement	sfclose ( in )	1097:12:33645:33656	8454027	0	True				
ANR	8454109	CallExpression	sfclose ( in )		8454027	0					
ANR	8454110	Callee	sfclose		8454027	0					
ANR	8454111	Identifier	sfclose		8454027	0					
ANR	8454112	ArgumentList	in		8454027	1					
ANR	8454113	Argument	in		8454027	0					
ANR	8454114	Identifier	in		8454027	0					
ANR	8454115	ExpressionStatement	return_error ( gs_error_VMerror )	1098:12:33670:33700	8454027	1	True				
ANR	8454116	CallExpression	return_error ( gs_error_VMerror )		8454027	0					
ANR	8454117	Callee	return_error		8454027	0					
ANR	8454118	Identifier	return_error		8454027	0					
ANR	8454119	ArgumentList	gs_error_VMerror		8454027	1					
ANR	8454120	Argument	gs_error_VMerror		8454027	0					
ANR	8454121	Identifier	gs_error_VMerror		8454027	0					
ANR	8454122	ExpressionStatement	"memcpy ( file_name , pfname . data , pfname . size + 1 )"	1101:8:33791:33838	8454027	2	True				
ANR	8454123	CallExpression	"memcpy ( file_name , pfname . data , pfname . size + 1 )"		8454027	0					
ANR	8454124	Callee	memcpy		8454027	0					
ANR	8454125	Identifier	memcpy		8454027	0					
ANR	8454126	ArgumentList	file_name		8454027	1					
ANR	8454127	Argument	file_name		8454027	0					
ANR	8454128	Identifier	file_name		8454027	0					
ANR	8454129	Argument	pfname . data		8454027	1					
ANR	8454130	MemberAccess	pfname . data		8454027	0					
ANR	8454131	Identifier	pfname		8454027	0					
ANR	8454132	Identifier	data		8454027	1					
ANR	8454133	Argument	pfname . size + 1		8454027	2					
ANR	8454134	AdditiveExpression	pfname . size + 1		8454027	0		+			
ANR	8454135	MemberAccess	pfname . size		8454027	0					
ANR	8454136	Identifier	pfname		8454027	0					
ANR	8454137	Identifier	size		8454027	1					
ANR	8454138	PrimaryExpression	1		8454027	1					
ANR	8454139	ExpressionStatement	"code = pl_alloc_tt_fontfile_buffer ( in , mem , & tt_font_datap , & size )"	1105:4:33888:33954	8454027	8	True				
ANR	8454140	AssignmentExpression	"code = pl_alloc_tt_fontfile_buffer ( in , mem , & tt_font_datap , & size )"		8454027	0		=			
ANR	8454141	Identifier	code		8454027	0					
ANR	8454142	CallExpression	"pl_alloc_tt_fontfile_buffer ( in , mem , & tt_font_datap , & size )"		8454027	1					
ANR	8454143	Callee	pl_alloc_tt_fontfile_buffer		8454027	0					
ANR	8454144	Identifier	pl_alloc_tt_fontfile_buffer		8454027	0					
ANR	8454145	ArgumentList	in		8454027	1					
ANR	8454146	Argument	in		8454027	0					
ANR	8454147	Identifier	in		8454027	0					
ANR	8454148	Argument	mem		8454027	1					
ANR	8454149	Identifier	mem		8454027	0					
ANR	8454150	Argument	& tt_font_datap		8454027	2					
ANR	8454151	UnaryOperationExpression	& tt_font_datap		8454027	0					
ANR	8454152	UnaryOperator	&		8454027	0					
ANR	8454153	Identifier	tt_font_datap		8454027	1					
ANR	8454154	Argument	& size		8454027	3					
ANR	8454155	UnaryOperationExpression	& size		8454027	0					
ANR	8454156	UnaryOperator	&		8454027	0					
ANR	8454157	Identifier	size		8454027	1					
ANR	8454158	IfStatement	if ( code < 0 )		8454027	9					
ANR	8454159	Condition	code < 0	1106:8:33964:33971	8454027	0	True				
ANR	8454160	RelationalExpression	code < 0		8454027	0		<			
ANR	8454161	Identifier	code		8454027	0					
ANR	8454162	PrimaryExpression	0		8454027	1					
ANR	8454163	GotoStatement	goto error ;	1107:8:33982:33992	8454027	1	True				
ANR	8454164	Identifier	error		8454027	0					
ANR	8454165	ExpressionStatement	"pfont = gs_alloc_struct ( mem , gs_font_type42 , & st_gs_font_type42 , ""pl_tt_load_font(gs_font_type42)"" )"	1109:4:34054:34181	8454027	10	True				
ANR	8454166	AssignmentExpression	"pfont = gs_alloc_struct ( mem , gs_font_type42 , & st_gs_font_type42 , ""pl_tt_load_font(gs_font_type42)"" )"		8454027	0		=			
ANR	8454167	Identifier	pfont		8454027	0					
ANR	8454168	CallExpression	"gs_alloc_struct ( mem , gs_font_type42 , & st_gs_font_type42 , ""pl_tt_load_font(gs_font_type42)"" )"		8454027	1					
ANR	8454169	Callee	gs_alloc_struct		8454027	0					
ANR	8454170	Identifier	gs_alloc_struct		8454027	0					
ANR	8454171	ArgumentList	mem		8454027	1					
ANR	8454172	Argument	mem		8454027	0					
ANR	8454173	Identifier	mem		8454027	0					
ANR	8454174	Argument	gs_font_type42		8454027	1					
ANR	8454175	Identifier	gs_font_type42		8454027	0					
ANR	8454176	Argument	& st_gs_font_type42		8454027	2					
ANR	8454177	UnaryOperationExpression	& st_gs_font_type42		8454027	0					
ANR	8454178	UnaryOperator	&		8454027	0					
ANR	8454179	Identifier	st_gs_font_type42		8454027	1					
ANR	8454180	Argument	"""pl_tt_load_font(gs_font_type42)"""		8454027	3					
ANR	8454181	PrimaryExpression	"""pl_tt_load_font(gs_font_type42)"""		8454027	0					
ANR	8454182	IfStatement	if ( pfont == NULL )		8454027	11					
ANR	8454183	Condition	pfont == NULL	1111:8:34191:34203	8454027	0	True				
ANR	8454184	EqualityExpression	pfont == NULL		8454027	0		==			
ANR	8454185	Identifier	pfont		8454027	0					
ANR	8454186	Identifier	NULL		8454027	1					
ANR	8454187	CompoundStatement		28:23:921:921	8454027	1					
ANR	8454188	ExpressionStatement	code = gs_error_VMerror	1112:8:34216:34239	8454027	0	True				
ANR	8454189	AssignmentExpression	code = gs_error_VMerror		8454027	0		=			
ANR	8454190	Identifier	code		8454027	0					
ANR	8454191	Identifier	gs_error_VMerror		8454027	1					
ANR	8454192	GotoStatement	goto error ;	1113:8:34249:34259	8454027	1	True				
ANR	8454193	Identifier	error		8454027	0					
ANR	8454194	ExpressionStatement	"memset ( pfont , 0 , sizeof ( * pfont ) )"	1115:4:34271:34303	8454027	12	True				
ANR	8454195	CallExpression	"memset ( pfont , 0 , sizeof ( * pfont ) )"		8454027	0					
ANR	8454196	Callee	memset		8454027	0					
ANR	8454197	Identifier	memset		8454027	0					
ANR	8454198	ArgumentList	pfont		8454027	1					
ANR	8454199	Argument	pfont		8454027	0					
ANR	8454200	Identifier	pfont		8454027	0					
ANR	8454201	Argument	0		8454027	1					
ANR	8454202	PrimaryExpression	0		8454027	0					
ANR	8454203	Argument	sizeof ( * pfont )		8454027	2					
ANR	8454204	SizeofExpression	sizeof ( * pfont )		8454027	0					
ANR	8454205	Sizeof	sizeof		8454027	0					
ANR	8454206	UnaryOperationExpression	* pfont		8454027	1					
ANR	8454207	UnaryOperator	*		8454027	0					
ANR	8454208	Identifier	pfont		8454027	1					
ANR	8454209	ExpressionStatement	"plfont = pl_alloc_font ( mem , ""pl_tt_load_font(pl_font_t)"" )"	1116:4:34309:34366	8454027	13	True				
ANR	8454210	AssignmentExpression	"plfont = pl_alloc_font ( mem , ""pl_tt_load_font(pl_font_t)"" )"		8454027	0		=			
ANR	8454211	Identifier	plfont		8454027	0					
ANR	8454212	CallExpression	"pl_alloc_font ( mem , ""pl_tt_load_font(pl_font_t)"" )"		8454027	1					
ANR	8454213	Callee	pl_alloc_font		8454027	0					
ANR	8454214	Identifier	pl_alloc_font		8454027	0					
ANR	8454215	ArgumentList	mem		8454027	1					
ANR	8454216	Argument	mem		8454027	0					
ANR	8454217	Identifier	mem		8454027	0					
ANR	8454218	Argument	"""pl_tt_load_font(pl_font_t)"""		8454027	1					
ANR	8454219	PrimaryExpression	"""pl_tt_load_font(pl_font_t)"""		8454027	0					
ANR	8454220	IfStatement	if ( plfont == NULL )		8454027	14					
ANR	8454221	Condition	plfont == NULL	1117:8:34376:34389	8454027	0	True				
ANR	8454222	EqualityExpression	plfont == NULL		8454027	0		==			
ANR	8454223	Identifier	plfont		8454027	0					
ANR	8454224	Identifier	NULL		8454027	1					
ANR	8454225	CompoundStatement		34:24:1107:1107	8454027	1					
ANR	8454226	ExpressionStatement	code = gs_error_VMerror	1118:8:34402:34425	8454027	0	True				
ANR	8454227	AssignmentExpression	code = gs_error_VMerror		8454027	0		=			
ANR	8454228	Identifier	code		8454027	0					
ANR	8454229	Identifier	gs_error_VMerror		8454027	1					
ANR	8454230	GotoStatement	goto error ;	1119:8:34435:34445	8454027	1	True				
ANR	8454231	Identifier	error		8454027	0					
ANR	8454232	ExpressionStatement	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pdir , mem , font_name )"	1123:4:34505:34576	8454027	15	True				
ANR	8454233	AssignmentExpression	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pdir , mem , font_name )"		8454027	0		=			
ANR	8454234	Identifier	code		8454027	0					
ANR	8454235	CallExpression	"pl_fill_in_font ( ( gs_font * ) pfont , plfont , pdir , mem , font_name )"		8454027	1					
ANR	8454236	Callee	pl_fill_in_font		8454027	0					
ANR	8454237	Identifier	pl_fill_in_font		8454027	0					
ANR	8454238	ArgumentList	( gs_font * ) pfont		8454027	1					
ANR	8454239	Argument	( gs_font * ) pfont		8454027	0					
ANR	8454240	CastExpression	( gs_font * ) pfont		8454027	0					
ANR	8454241	CastTarget	gs_font *		8454027	0					
ANR	8454242	Identifier	pfont		8454027	1					
ANR	8454243	Argument	plfont		8454027	1					
ANR	8454244	Identifier	plfont		8454027	0					
ANR	8454245	Argument	pdir		8454027	2					
ANR	8454246	Identifier	pdir		8454027	0					
ANR	8454247	Argument	mem		8454027	3					
ANR	8454248	Identifier	mem		8454027	0					
ANR	8454249	Argument	font_name		8454027	4					
ANR	8454250	Identifier	font_name		8454027	0					
ANR	8454251	IfStatement	if ( code < 0 )		8454027	16					
ANR	8454252	Condition	code < 0	1124:8:34586:34593	8454027	0	True				
ANR	8454253	RelationalExpression	code < 0		8454027	0		<			
ANR	8454254	Identifier	code		8454027	0					
ANR	8454255	PrimaryExpression	0		8454027	1					
ANR	8454256	GotoStatement	goto error ;	1125:8:34604:34614	8454027	1	True				
ANR	8454257	Identifier	error		8454027	0					
ANR	8454258	ExpressionStatement	plfont -> header = tt_font_datap	1128:4:34669:34699	8454027	17	True				
ANR	8454259	AssignmentExpression	plfont -> header = tt_font_datap		8454027	0		=			
ANR	8454260	PtrMemberAccess	plfont -> header		8454027	0					
ANR	8454261	Identifier	plfont		8454027	0					
ANR	8454262	Identifier	header		8454027	1					
ANR	8454263	Identifier	tt_font_datap		8454027	1					
ANR	8454264	ExpressionStatement	plfont -> header_size = size	1129:4:34705:34731	8454027	18	True				
ANR	8454265	AssignmentExpression	plfont -> header_size = size		8454027	0		=			
ANR	8454266	PtrMemberAccess	plfont -> header_size		8454027	0					
ANR	8454267	Identifier	plfont		8454027	0					
ANR	8454268	Identifier	header_size		8454027	1					
ANR	8454269	Identifier	size		8454027	1					
ANR	8454270	ExpressionStatement	plfont -> scaling_technology = plfst_TrueType	1130:4:34737:34780	8454027	19	True				
ANR	8454271	AssignmentExpression	plfont -> scaling_technology = plfst_TrueType		8454027	0		=			
ANR	8454272	PtrMemberAccess	plfont -> scaling_technology		8454027	0					
ANR	8454273	Identifier	plfont		8454027	0					
ANR	8454274	Identifier	scaling_technology		8454027	1					
ANR	8454275	Identifier	plfst_TrueType		8454027	1					
ANR	8454276	ExpressionStatement	plfont -> font_type = plft_Unicode	1131:4:34786:34818	8454027	20	True				
ANR	8454277	AssignmentExpression	plfont -> font_type = plft_Unicode		8454027	0		=			
ANR	8454278	PtrMemberAccess	plfont -> font_type		8454027	0					
ANR	8454279	Identifier	plfont		8454027	0					
ANR	8454280	Identifier	font_type		8454027	1					
ANR	8454281	Identifier	plft_Unicode		8454027	1					
ANR	8454282	ExpressionStatement	plfont -> large_sizes = true	1132:4:34824:34850	8454027	21	True				
ANR	8454283	AssignmentExpression	plfont -> large_sizes = true		8454027	0		=			
ANR	8454284	PtrMemberAccess	plfont -> large_sizes		8454027	0					
ANR	8454285	Identifier	plfont		8454027	0					
ANR	8454286	Identifier	large_sizes		8454027	1					
ANR	8454287	Identifier	true		8454027	1					
ANR	8454288	ExpressionStatement	plfont -> offsets . GT = 0	1133:4:34856:34878	8454027	22	True				
ANR	8454289	AssignmentExpression	plfont -> offsets . GT = 0		8454027	0		=			
ANR	8454290	MemberAccess	plfont -> offsets . GT		8454027	0					
ANR	8454291	PtrMemberAccess	plfont -> offsets		8454027	0					
ANR	8454292	Identifier	plfont		8454027	0					
ANR	8454293	Identifier	offsets		8454027	1					
ANR	8454294	Identifier	GT		8454027	1					
ANR	8454295	PrimaryExpression	0		8454027	1					
ANR	8454296	ExpressionStatement	plfont -> is_xl_format = false	1134:4:34884:34912	8454027	23	True				
ANR	8454297	AssignmentExpression	plfont -> is_xl_format = false		8454027	0		=			
ANR	8454298	PtrMemberAccess	plfont -> is_xl_format		8454027	0					
ANR	8454299	Identifier	plfont		8454027	0					
ANR	8454300	Identifier	is_xl_format		8454027	1					
ANR	8454301	Identifier	false		8454027	1					
ANR	8454302	ExpressionStatement	"code = pl_fill_in_tt_font ( pfont , tt_font_datap , unique_id )"	1135:4:34918:34976	8454027	24	True				
ANR	8454303	AssignmentExpression	"code = pl_fill_in_tt_font ( pfont , tt_font_datap , unique_id )"		8454027	0		=			
ANR	8454304	Identifier	code		8454027	0					
ANR	8454305	CallExpression	"pl_fill_in_tt_font ( pfont , tt_font_datap , unique_id )"		8454027	1					
ANR	8454306	Callee	pl_fill_in_tt_font		8454027	0					
ANR	8454307	Identifier	pl_fill_in_tt_font		8454027	0					
ANR	8454308	ArgumentList	pfont		8454027	1					
ANR	8454309	Argument	pfont		8454027	0					
ANR	8454310	Identifier	pfont		8454027	0					
ANR	8454311	Argument	tt_font_datap		8454027	1					
ANR	8454312	Identifier	tt_font_datap		8454027	0					
ANR	8454313	Argument	unique_id		8454027	2					
ANR	8454314	Identifier	unique_id		8454027	0					
ANR	8454315	IfStatement	if ( code < 0 )		8454027	25					
ANR	8454316	Condition	code < 0	1136:8:34986:34993	8454027	0	True				
ANR	8454317	RelationalExpression	code < 0		8454027	0		<			
ANR	8454318	Identifier	code		8454027	0					
ANR	8454319	PrimaryExpression	0		8454027	1					
ANR	8454320	GotoStatement	goto error ;	1137:8:35004:35014	8454027	1	True				
ANR	8454321	Identifier	error		8454027	0					
ANR	8454322	ExpressionStatement	"code = gs_definefont ( pdir , ( gs_font * ) pfont )"	1138:4:35020:35065	8454027	26	True				
ANR	8454323	AssignmentExpression	"code = gs_definefont ( pdir , ( gs_font * ) pfont )"		8454027	0		=			
ANR	8454324	Identifier	code		8454027	0					
ANR	8454325	CallExpression	"gs_definefont ( pdir , ( gs_font * ) pfont )"		8454027	1					
ANR	8454326	Callee	gs_definefont		8454027	0					
ANR	8454327	Identifier	gs_definefont		8454027	0					
ANR	8454328	ArgumentList	pdir		8454027	1					
ANR	8454329	Argument	pdir		8454027	0					
ANR	8454330	Identifier	pdir		8454027	0					
ANR	8454331	Argument	( gs_font * ) pfont		8454027	1					
ANR	8454332	CastExpression	( gs_font * ) pfont		8454027	0					
ANR	8454333	CastTarget	gs_font *		8454027	0					
ANR	8454334	Identifier	pfont		8454027	1					
ANR	8454335	IfStatement	if ( code < 0 )		8454027	27					
ANR	8454336	Condition	code < 0	1139:8:35075:35082	8454027	0	True				
ANR	8454337	RelationalExpression	code < 0		8454027	0		<			
ANR	8454338	Identifier	code		8454027	0					
ANR	8454339	PrimaryExpression	0		8454027	1					
ANR	8454340	GotoStatement	goto error ;	1140:8:35093:35103	8454027	1	True				
ANR	8454341	Identifier	error		8454027	0					
ANR	8454342	ExpressionStatement	"code = pl_fapi_passfont ( plfont , 0 , NULL , NULL , plfont -> header + 6 , plfont -> header_size - 6 )"	1142:4:35110:35234	8454027	28	True				
ANR	8454343	AssignmentExpression	"code = pl_fapi_passfont ( plfont , 0 , NULL , NULL , plfont -> header + 6 , plfont -> header_size - 6 )"		8454027	0		=			
ANR	8454344	Identifier	code		8454027	0					
ANR	8454345	CallExpression	"pl_fapi_passfont ( plfont , 0 , NULL , NULL , plfont -> header + 6 , plfont -> header_size - 6 )"		8454027	1					
ANR	8454346	Callee	pl_fapi_passfont		8454027	0					
ANR	8454347	Identifier	pl_fapi_passfont		8454027	0					
ANR	8454348	ArgumentList	plfont		8454027	1					
ANR	8454349	Argument	plfont		8454027	0					
ANR	8454350	Identifier	plfont		8454027	0					
ANR	8454351	Argument	0		8454027	1					
ANR	8454352	PrimaryExpression	0		8454027	0					
ANR	8454353	Argument	NULL		8454027	2					
ANR	8454354	Identifier	NULL		8454027	0					
ANR	8454355	Argument	NULL		8454027	3					
ANR	8454356	Identifier	NULL		8454027	0					
ANR	8454357	Argument	plfont -> header + 6		8454027	4					
ANR	8454358	AdditiveExpression	plfont -> header + 6		8454027	0		+			
ANR	8454359	PtrMemberAccess	plfont -> header		8454027	0					
ANR	8454360	Identifier	plfont		8454027	0					
ANR	8454361	Identifier	header		8454027	1					
ANR	8454362	PrimaryExpression	6		8454027	1					
ANR	8454363	Argument	plfont -> header_size - 6		8454027	5					
ANR	8454364	AdditiveExpression	plfont -> header_size - 6		8454027	0		-			
ANR	8454365	PtrMemberAccess	plfont -> header_size		8454027	0					
ANR	8454366	Identifier	plfont		8454027	0					
ANR	8454367	Identifier	header_size		8454027	1					
ANR	8454368	PrimaryExpression	6		8454027	1					
ANR	8454369	IfStatement	if ( code < 0 )		8454027	29					
ANR	8454370	Condition	code < 0	1145:8:35244:35251	8454027	0	True				
ANR	8454371	RelationalExpression	code < 0		8454027	0		<			
ANR	8454372	Identifier	code		8454027	0					
ANR	8454373	PrimaryExpression	0		8454027	1					
ANR	8454374	GotoStatement	goto error ;	1146:8:35262:35272	8454027	1	True				
ANR	8454375	Identifier	error		8454027	0					
ANR	8454376	IfStatement	if ( file_name )		8454027	30					
ANR	8454377	Condition	file_name	1147:8:35282:35290	8454027	0	True				
ANR	8454378	Identifier	file_name		8454027	0					
ANR	8454379	ExpressionStatement	"gs_free_object ( mem , file_name , ""pl_load_tt_font file_name"" )"	1148:8:35301:35360	8454027	1	True				
ANR	8454380	CallExpression	"gs_free_object ( mem , file_name , ""pl_load_tt_font file_name"" )"		8454027	0					
ANR	8454381	Callee	gs_free_object		8454027	0					
ANR	8454382	Identifier	gs_free_object		8454027	0					
ANR	8454383	ArgumentList	mem		8454027	1					
ANR	8454384	Argument	mem		8454027	0					
ANR	8454385	Identifier	mem		8454027	0					
ANR	8454386	Argument	file_name		8454027	1					
ANR	8454387	Identifier	file_name		8454027	0					
ANR	8454388	Argument	"""pl_load_tt_font file_name"""		8454027	2					
ANR	8454389	PrimaryExpression	"""pl_load_tt_font file_name"""		8454027	0					
ANR	8454390	ExpressionStatement	* pplfont = plfont	1150:4:35367:35384	8454027	31	True				
ANR	8454391	AssignmentExpression	* pplfont = plfont		8454027	0		=			
ANR	8454392	UnaryOperationExpression	* pplfont		8454027	0					
ANR	8454393	UnaryOperator	*		8454027	0					
ANR	8454394	Identifier	pplfont		8454027	1					
ANR	8454395	Identifier	plfont		8454027	1					
ANR	8454396	ReturnStatement	return 0 ;	1151:4:35390:35398	8454027	32	True				
ANR	8454397	PrimaryExpression	0		8454027	0					
ANR	8454398	Label	error :	1153:0:35401:35406	8454027	33	True				
ANR	8454399	Identifier	error		8454027	0					
ANR	8454400	ExpressionStatement	"gs_free_object ( mem , plfont , ""pl_tt_load_font(pl_font_t)"" )"	1154:4:35412:35469	8454027	34	True				
ANR	8454401	CallExpression	"gs_free_object ( mem , plfont , ""pl_tt_load_font(pl_font_t)"" )"		8454027	0					
ANR	8454402	Callee	gs_free_object		8454027	0					
ANR	8454403	Identifier	gs_free_object		8454027	0					
ANR	8454404	ArgumentList	mem		8454027	1					
ANR	8454405	Argument	mem		8454027	0					
ANR	8454406	Identifier	mem		8454027	0					
ANR	8454407	Argument	plfont		8454027	1					
ANR	8454408	Identifier	plfont		8454027	0					
ANR	8454409	Argument	"""pl_tt_load_font(pl_font_t)"""		8454027	2					
ANR	8454410	PrimaryExpression	"""pl_tt_load_font(pl_font_t)"""		8454027	0					
ANR	8454411	ExpressionStatement	"gs_free_object ( mem , pfont , ""pl_tt_load_font(gs_font_type42)"" )"	1155:4:35475:35536	8454027	35	True				
ANR	8454412	CallExpression	"gs_free_object ( mem , pfont , ""pl_tt_load_font(gs_font_type42)"" )"		8454027	0					
ANR	8454413	Callee	gs_free_object		8454027	0					
ANR	8454414	Identifier	gs_free_object		8454027	0					
ANR	8454415	ArgumentList	mem		8454027	1					
ANR	8454416	Argument	mem		8454027	0					
ANR	8454417	Identifier	mem		8454027	0					
ANR	8454418	Argument	pfont		8454027	1					
ANR	8454419	Identifier	pfont		8454027	0					
ANR	8454420	Argument	"""pl_tt_load_font(gs_font_type42)"""		8454027	2					
ANR	8454421	PrimaryExpression	"""pl_tt_load_font(gs_font_type42)"""		8454027	0					
ANR	8454422	ExpressionStatement	"pl_free_tt_fontfile_buffer ( mem , tt_font_datap )"	1156:4:35542:35588	8454027	36	True				
ANR	8454423	CallExpression	"pl_free_tt_fontfile_buffer ( mem , tt_font_datap )"		8454027	0					
ANR	8454424	Callee	pl_free_tt_fontfile_buffer		8454027	0					
ANR	8454425	Identifier	pl_free_tt_fontfile_buffer		8454027	0					
ANR	8454426	ArgumentList	mem		8454027	1					
ANR	8454427	Argument	mem		8454027	0					
ANR	8454428	Identifier	mem		8454027	0					
ANR	8454429	Argument	tt_font_datap		8454027	1					
ANR	8454430	Identifier	tt_font_datap		8454027	0					
ANR	8454431	ExpressionStatement	"gs_free_object ( mem , file_name , ""pl_load_tt_font file_name"" )"	1157:4:35594:35653	8454027	37	True				
ANR	8454432	CallExpression	"gs_free_object ( mem , file_name , ""pl_load_tt_font file_name"" )"		8454027	0					
ANR	8454433	Callee	gs_free_object		8454027	0					
ANR	8454434	Identifier	gs_free_object		8454027	0					
ANR	8454435	ArgumentList	mem		8454027	1					
ANR	8454436	Argument	mem		8454027	0					
ANR	8454437	Identifier	mem		8454027	0					
ANR	8454438	Argument	file_name		8454027	1					
ANR	8454439	Identifier	file_name		8454027	0					
ANR	8454440	Argument	"""pl_load_tt_font file_name"""		8454027	2					
ANR	8454441	PrimaryExpression	"""pl_load_tt_font file_name"""		8454027	0					
ANR	8454442	ExpressionStatement	return_error ( code )	1158:4:35659:35677	8454027	38	True				
ANR	8454443	CallExpression	return_error ( code )		8454027	0					
ANR	8454444	Callee	return_error		8454027	0					
ANR	8454445	Identifier	return_error		8454027	0					
ANR	8454446	ArgumentList	code		8454027	1					
ANR	8454447	Argument	code		8454027	0					
ANR	8454448	Identifier	code		8454027	0					
ANR	8454449	ReturnType	int		8454027	1					
ANR	8454450	Identifier	pl_load_tt_font		8454027	2					
ANR	8454451	ParameterList	"stream * in , gs_font_dir * pdir , gs_memory_t * mem , long unique_id , pl_font_t * * pplfont , char * font_name"		8454027	3					
ANR	8454452	Parameter	stream * in	1082:16:33161:33171	8454027	0	True				
ANR	8454453	ParameterType	stream *		8454027	0					
ANR	8454454	Identifier	in		8454027	1					
ANR	8454455	Parameter	gs_font_dir * pdir	1082:29:33174:33191	8454027	1	True				
ANR	8454456	ParameterType	gs_font_dir *		8454027	0					
ANR	8454457	Identifier	pdir		8454027	1					
ANR	8454458	Parameter	gs_memory_t * mem	1082:49:33194:33210	8454027	2	True				
ANR	8454459	ParameterType	gs_memory_t *		8454027	0					
ANR	8454460	Identifier	mem		8454027	1					
ANR	8454461	Parameter	long unique_id	1083:16:33229:33242	8454027	3	True				
ANR	8454462	ParameterType	long		8454027	0					
ANR	8454463	Identifier	unique_id		8454027	1					
ANR	8454464	Parameter	pl_font_t * * pplfont	1083:32:33245:33264	8454027	4	True				
ANR	8454465	ParameterType	pl_font_t * *		8454027	0					
ANR	8454466	Identifier	pplfont		8454027	1					
ANR	8454467	Parameter	char * font_name	1083:54:33267:33281	8454027	5	True				
ANR	8454468	ParameterType	char *		8454027	0					
ANR	8454469	Identifier	font_name		8454027	1					
ANR	8454470	CFGEntryNode	ENTRY		8454027		True				
ANR	8454471	CFGExitNode	EXIT		8454027		True				
ANR	8454472	Symbol	pl_fapi_passfont		8454027						
ANR	8454473	Symbol	pplfont		8454027						
ANR	8454474	Symbol	plfont -> scaling_technology		8454027						
ANR	8454475	Symbol	code		8454027						
ANR	8454476	Symbol	gs_alloc_struct		8454027						
ANR	8454477	Symbol	plfont -> header		8454027						
ANR	8454478	Symbol	sfilename		8454027						
ANR	8454479	Symbol	plfont		8454027						
ANR	8454480	Symbol	plfont -> large_sizes		8454027						
ANR	8454481	Symbol	font_name		8454027						
ANR	8454482	Symbol	gs_definefont		8454027						
ANR	8454483	Symbol	pl_fill_in_tt_font		8454027						
ANR	8454484	Symbol	mem		8454027						
ANR	8454485	Symbol	& pfname		8454027						
ANR	8454486	Symbol	pl_alloc_tt_fontfile_buffer		8454027						
ANR	8454487	Symbol	pfname . size		8454027						
ANR	8454488	Symbol	plfont -> font_type		8454027						
ANR	8454489	Symbol	* pplfont		8454027						
ANR	8454490	Symbol	gs_alloc_bytes		8454027						
ANR	8454491	Symbol	unique_id		8454027						
ANR	8454492	Symbol	NULL		8454027						
ANR	8454493	Symbol	plfont -> header_size		8454027						
ANR	8454494	Symbol	in		8454027						
ANR	8454495	Symbol	pfont		8454027						
ANR	8454496	Symbol	file_name		8454027						
ANR	8454497	Symbol	false		8454027						
ANR	8454498	Symbol	pdir		8454027						
ANR	8454499	Symbol	plfont -> is_xl_format		8454027						
ANR	8454500	Symbol	& size		8454027						
ANR	8454501	Symbol	pl_fill_in_font		8454027						
ANR	8454502	Symbol	plfont -> offsets		8454027						
ANR	8454503	Symbol	plft_Unicode		8454027						
ANR	8454504	Symbol	pfname		8454027						
ANR	8454505	Symbol	& tt_font_datap		8454027						
ANR	8454506	Symbol	plfont -> offsets . GT		8454027						
ANR	8454507	Symbol	gs_error_VMerror		8454027						
ANR	8454508	Symbol	* pfont		8454027						
ANR	8454509	Symbol	size		8454027						
ANR	8454510	Symbol	* plfont		8454027						
ANR	8454511	Symbol	true		8454027						
ANR	8454512	Symbol	plfst_TrueType		8454027						
ANR	8454513	Symbol	& st_gs_font_type42		8454027						
ANR	8454514	Symbol	pfname . data		8454027						
ANR	8454515	Symbol	gs_font_type42		8454027						
ANR	8454516	Symbol	pl_alloc_font		8454027						
ANR	8454517	Symbol	tt_font_datap		8454027						
ANR	8454518	Function	pl_load_resident_font_data_from_file	1162:0:35719:36903							
ANR	8454519	FunctionDef	"pl_load_resident_font_data_from_file (gs_memory_t * mem , pl_font_t * plfont)"		8454518	0					
ANR	8454520	CompoundStatement		1164:0:35799:36903	8454518	0					
ANR	8454521	IdentifierDeclStatement	"ulong len , size ;"	1166:4:35806:35821	8454518	0	True				
ANR	8454522	IdentifierDecl	len		8454518	0					
ANR	8454523	IdentifierDeclType	ulong		8454518	0					
ANR	8454524	Identifier	len		8454518	1					
ANR	8454525	IdentifierDecl	size		8454518	1					
ANR	8454526	IdentifierDeclType	ulong		8454518	0					
ANR	8454527	Identifier	size		8454518	1					
ANR	8454528	IdentifierDeclStatement	byte * data ;	1167:4:35827:35837	8454518	1	True				
ANR	8454529	IdentifierDecl	* data		8454518	0					
ANR	8454530	IdentifierDeclType	byte *		8454518	0					
ANR	8454531	Identifier	data		8454518	1					
ANR	8454532	IfStatement	if ( plfont -> font_file && ! plfont -> font_file_loaded )		8454518	2					
ANR	8454533	Condition	plfont -> font_file && ! plfont -> font_file_loaded	1169:8:35848:35893	8454518	0	True				
ANR	8454534	AndExpression	plfont -> font_file && ! plfont -> font_file_loaded		8454518	0		&&			
ANR	8454535	PtrMemberAccess	plfont -> font_file		8454518	0					
ANR	8454536	Identifier	plfont		8454518	0					
ANR	8454537	Identifier	font_file		8454518	1					
ANR	8454538	UnaryOperationExpression	! plfont -> font_file_loaded		8454518	1					
ANR	8454539	UnaryOperator	!		8454518	0					
ANR	8454540	PtrMemberAccess	plfont -> font_file_loaded		8454518	1					
ANR	8454541	Identifier	plfont		8454518	0					
ANR	8454542	Identifier	font_file_loaded		8454518	1					
ANR	8454543	CompoundStatement		7:8:106:162	8454518	1					
ANR	8454544	IdentifierDeclStatement	"stream * in = sfopen ( plfont -> font_file , gp_fmode_rb , mem ) ;"	1170:8:35906:35962	8454518	0	True				
ANR	8454545	IdentifierDecl	"* in = sfopen ( plfont -> font_file , gp_fmode_rb , mem )"		8454518	0					
ANR	8454546	IdentifierDeclType	stream *		8454518	0					
ANR	8454547	Identifier	in		8454518	1					
ANR	8454548	AssignmentExpression	"* in = sfopen ( plfont -> font_file , gp_fmode_rb , mem )"		8454518	2		=			
ANR	8454549	Identifier	in		8454518	0					
ANR	8454550	CallExpression	"sfopen ( plfont -> font_file , gp_fmode_rb , mem )"		8454518	1					
ANR	8454551	Callee	sfopen		8454518	0					
ANR	8454552	Identifier	sfopen		8454518	0					
ANR	8454553	ArgumentList	plfont -> font_file		8454518	1					
ANR	8454554	Argument	plfont -> font_file		8454518	0					
ANR	8454555	PtrMemberAccess	plfont -> font_file		8454518	0					
ANR	8454556	Identifier	plfont		8454518	0					
ANR	8454557	Identifier	font_file		8454518	1					
ANR	8454558	Argument	gp_fmode_rb		8454518	1					
ANR	8454559	Identifier	gp_fmode_rb		8454518	0					
ANR	8454560	Argument	mem		8454518	2					
ANR	8454561	Identifier	mem		8454518	0					
ANR	8454562	IfStatement	if ( in == NULL )		8454518	1					
ANR	8454563	Condition	in == NULL	1172:12:35977:35986	8454518	0	True				
ANR	8454564	EqualityExpression	in == NULL		8454518	0		==			
ANR	8454565	Identifier	in		8454518	0					
ANR	8454566	Identifier	NULL		8454518	1					
ANR	8454567	ReturnStatement	return - 1 ;	1173:12:36001:36010	8454518	1	True				
ANR	8454568	UnaryOperationExpression	- 1		8454518	0					
ANR	8454569	UnaryOperator	-		8454518	0					
ANR	8454570	PrimaryExpression	1		8454518	1					
ANR	8454571	ExpressionStatement	"len = ( sfseek ( in , 0L , SEEK_END ) , sftell ( in ) )"	1175:8:36095:36139	8454518	2	True				
ANR	8454572	AssignmentExpression	"len = ( sfseek ( in , 0L , SEEK_END ) , sftell ( in ) )"		8454518	0		=			
ANR	8454573	Identifier	len		8454518	0					
ANR	8454574	Expression	"sfseek ( in , 0L , SEEK_END ) , sftell ( in )"		8454518	1					
ANR	8454575	CallExpression	"sfseek ( in , 0L , SEEK_END )"		8454518	0					
ANR	8454576	Callee	sfseek		8454518	0					
ANR	8454577	Identifier	sfseek		8454518	0					
ANR	8454578	ArgumentList	in		8454518	1					
ANR	8454579	Argument	in		8454518	0					
ANR	8454580	Identifier	in		8454518	0					
ANR	8454581	Argument	0L		8454518	1					
ANR	8454582	PrimaryExpression	0L		8454518	0					
ANR	8454583	Argument	SEEK_END		8454518	2					
ANR	8454584	Identifier	SEEK_END		8454518	0					
ANR	8454585	CallExpression	sftell ( in )		8454518	1					
ANR	8454586	Callee	sftell		8454518	0					
ANR	8454587	Identifier	sftell		8454518	0					
ANR	8454588	ArgumentList	in		8454518	1					
ANR	8454589	Argument	in		8454518	0					
ANR	8454590	Identifier	in		8454518	0					
ANR	8454591	ExpressionStatement	size = 6 + len	1176:8:36149:36163	8454518	3	True				
ANR	8454592	AssignmentExpression	size = 6 + len		8454518	0		=			
ANR	8454593	Identifier	size		8454518	0					
ANR	8454594	AdditiveExpression	6 + len		8454518	1		+			
ANR	8454595	PrimaryExpression	6		8454518	0					
ANR	8454596	Identifier	len		8454518	1					
ANR	8454597	IfStatement	if ( size != ( uint ) size )		8454518	4					
ANR	8454598	Condition	size != ( uint ) size	1178:12:36222:36240	8454518	0	True				
ANR	8454599	EqualityExpression	size != ( uint ) size		8454518	0		!=			
ANR	8454600	Identifier	size		8454518	0					
ANR	8454601	CastExpression	( uint ) size		8454518	1					
ANR	8454602	CastTarget	uint		8454518	0					
ANR	8454603	Identifier	size		8454518	1					
ANR	8454604	CompoundStatement		15:33:443:443	8454518	1					
ANR	8454605	ExpressionStatement	sfclose ( in )	1184:12:36458:36469	8454518	0	True				
ANR	8454606	CallExpression	sfclose ( in )		8454518	0					
ANR	8454607	Callee	sfclose		8454518	0					
ANR	8454608	Identifier	sfclose		8454518	0					
ANR	8454609	ArgumentList	in		8454518	1					
ANR	8454610	Argument	in		8454518	0					
ANR	8454611	Identifier	in		8454518	0					
ANR	8454612	ExpressionStatement	return_error ( gs_error_VMerror )	1185:12:36483:36513	8454518	1	True				
ANR	8454613	CallExpression	return_error ( gs_error_VMerror )		8454518	0					
ANR	8454614	Callee	return_error		8454518	0					
ANR	8454615	Identifier	return_error		8454518	0					
ANR	8454616	ArgumentList	gs_error_VMerror		8454518	1					
ANR	8454617	Argument	gs_error_VMerror		8454518	0					
ANR	8454618	Identifier	gs_error_VMerror		8454518	0					
ANR	8454619	ExpressionStatement	srewind ( in )	1187:8:36533:36544	8454518	5	True				
ANR	8454620	CallExpression	srewind ( in )		8454518	0					
ANR	8454621	Callee	srewind		8454518	0					
ANR	8454622	Identifier	srewind		8454518	0					
ANR	8454623	ArgumentList	in		8454518	1					
ANR	8454624	Argument	in		8454518	0					
ANR	8454625	Identifier	in		8454518	0					
ANR	8454626	ExpressionStatement	"data = gs_alloc_bytes ( mem , size , ""pl_tt_load_font data"" )"	1188:8:36554:36610	8454518	6	True				
ANR	8454627	AssignmentExpression	"data = gs_alloc_bytes ( mem , size , ""pl_tt_load_font data"" )"		8454518	0		=			
ANR	8454628	Identifier	data		8454518	0					
ANR	8454629	CallExpression	"gs_alloc_bytes ( mem , size , ""pl_tt_load_font data"" )"		8454518	1					
ANR	8454630	Callee	gs_alloc_bytes		8454518	0					
ANR	8454631	Identifier	gs_alloc_bytes		8454518	0					
ANR	8454632	ArgumentList	mem		8454518	1					
ANR	8454633	Argument	mem		8454518	0					
ANR	8454634	Identifier	mem		8454518	0					
ANR	8454635	Argument	size		8454518	1					
ANR	8454636	Identifier	size		8454518	0					
ANR	8454637	Argument	"""pl_tt_load_font data"""		8454518	2					
ANR	8454638	PrimaryExpression	"""pl_tt_load_font data"""		8454518	0					
ANR	8454639	IfStatement	if ( data == 0 )		8454518	7					
ANR	8454640	Condition	data == 0	1189:12:36624:36632	8454518	0	True				
ANR	8454641	EqualityExpression	data == 0		8454518	0		==			
ANR	8454642	Identifier	data		8454518	0					
ANR	8454643	PrimaryExpression	0		8454518	1					
ANR	8454644	CompoundStatement		26:23:835:835	8454518	1					
ANR	8454645	ExpressionStatement	sfclose ( in )	1190:12:36649:36660	8454518	0	True				
ANR	8454646	CallExpression	sfclose ( in )		8454518	0					
ANR	8454647	Callee	sfclose		8454518	0					
ANR	8454648	Identifier	sfclose		8454518	0					
ANR	8454649	ArgumentList	in		8454518	1					
ANR	8454650	Argument	in		8454518	0					
ANR	8454651	Identifier	in		8454518	0					
ANR	8454652	ExpressionStatement	return_error ( gs_error_VMerror )	1191:12:36674:36704	8454518	1	True				
ANR	8454653	CallExpression	return_error ( gs_error_VMerror )		8454518	0					
ANR	8454654	Callee	return_error		8454518	0					
ANR	8454655	Identifier	return_error		8454518	0					
ANR	8454656	ArgumentList	gs_error_VMerror		8454518	1					
ANR	8454657	Argument	gs_error_VMerror		8454518	0					
ANR	8454658	Identifier	gs_error_VMerror		8454518	0					
ANR	8454659	ExpressionStatement	"sfread ( data + 6 , 1 , len , in )"	1193:8:36724:36752	8454518	8	True				
ANR	8454660	CallExpression	"sfread ( data + 6 , 1 , len , in )"		8454518	0					
ANR	8454661	Callee	sfread		8454518	0					
ANR	8454662	Identifier	sfread		8454518	0					
ANR	8454663	ArgumentList	data + 6		8454518	1					
ANR	8454664	Argument	data + 6		8454518	0					
ANR	8454665	AdditiveExpression	data + 6		8454518	0		+			
ANR	8454666	Identifier	data		8454518	0					
ANR	8454667	PrimaryExpression	6		8454518	1					
ANR	8454668	Argument	1		8454518	1					
ANR	8454669	PrimaryExpression	1		8454518	0					
ANR	8454670	Argument	len		8454518	2					
ANR	8454671	Identifier	len		8454518	0					
ANR	8454672	Argument	in		8454518	3					
ANR	8454673	Identifier	in		8454518	0					
ANR	8454674	ExpressionStatement	sfclose ( in )	1194:8:36762:36773	8454518	9	True				
ANR	8454675	CallExpression	sfclose ( in )		8454518	0					
ANR	8454676	Callee	sfclose		8454518	0					
ANR	8454677	Identifier	sfclose		8454518	0					
ANR	8454678	ArgumentList	in		8454518	1					
ANR	8454679	Argument	in		8454518	0					
ANR	8454680	Identifier	in		8454518	0					
ANR	8454681	ExpressionStatement	plfont -> header = data	1195:8:36783:36804	8454518	10	True				
ANR	8454682	AssignmentExpression	plfont -> header = data		8454518	0		=			
ANR	8454683	PtrMemberAccess	plfont -> header		8454518	0					
ANR	8454684	Identifier	plfont		8454518	0					
ANR	8454685	Identifier	header		8454518	1					
ANR	8454686	Identifier	data		8454518	1					
ANR	8454687	ExpressionStatement	plfont -> header_size = size	1196:8:36814:36840	8454518	11	True				
ANR	8454688	AssignmentExpression	plfont -> header_size = size		8454518	0		=			
ANR	8454689	PtrMemberAccess	plfont -> header_size		8454518	0					
ANR	8454690	Identifier	plfont		8454518	0					
ANR	8454691	Identifier	header_size		8454518	1					
ANR	8454692	Identifier	size		8454518	1					
ANR	8454693	ExpressionStatement	plfont -> font_file_loaded = true	1197:8:36850:36881	8454518	12	True				
ANR	8454694	AssignmentExpression	plfont -> font_file_loaded = true		8454518	0		=			
ANR	8454695	PtrMemberAccess	plfont -> font_file_loaded		8454518	0					
ANR	8454696	Identifier	plfont		8454518	0					
ANR	8454697	Identifier	font_file_loaded		8454518	1					
ANR	8454698	Identifier	true		8454518	1					
ANR	8454699	ReturnStatement	return 0 ;	1199:4:36893:36901	8454518	3	True				
ANR	8454700	PrimaryExpression	0		8454518	0					
ANR	8454701	ReturnType	int		8454518	1					
ANR	8454702	Identifier	pl_load_resident_font_data_from_file		8454518	2					
ANR	8454703	ParameterList	"gs_memory_t * mem , pl_font_t * plfont"		8454518	3					
ANR	8454704	Parameter	gs_memory_t * mem	1163:37:35760:35776	8454518	0	True				
ANR	8454705	ParameterType	gs_memory_t *		8454518	0					
ANR	8454706	Identifier	mem		8454518	1					
ANR	8454707	Parameter	pl_font_t * plfont	1163:56:35779:35796	8454518	1	True				
ANR	8454708	ParameterType	pl_font_t *		8454518	0					
ANR	8454709	Identifier	plfont		8454518	1					
ANR	8454710	CFGEntryNode	ENTRY		8454518		True				
ANR	8454711	CFGExitNode	EXIT		8454518		True				
ANR	8454712	Symbol	gs_alloc_bytes		8454518						
ANR	8454713	Symbol	NULL		8454518						
ANR	8454714	Symbol	plfont -> header_size		8454518						
ANR	8454715	Symbol	data		8454518						
ANR	8454716	Symbol	in		8454518						
ANR	8454717	Symbol	plfont -> header		8454518						
ANR	8454718	Symbol	plfont		8454518						
ANR	8454719	Symbol	SEEK_END		8454518						
ANR	8454720	Symbol	gs_error_VMerror		8454518						
ANR	8454721	Symbol	sfopen		8454518						
ANR	8454722	Symbol	mem		8454518						
ANR	8454723	Symbol	size		8454518						
ANR	8454724	Symbol	len		8454518						
ANR	8454725	Symbol	sftell		8454518						
ANR	8454726	Symbol	* plfont		8454518						
ANR	8454727	Symbol	gp_fmode_rb		8454518						
ANR	8454728	Symbol	true		8454518						
ANR	8454729	Symbol	plfont -> font_file_loaded		8454518						
ANR	8454730	Symbol	plfont -> font_file		8454518						
ANR	8454731	Symbol	sfseek		8454518						
ANR	8454732	Function	pl_store_resident_font_data_in_file	1203:0:36974:37915							
ANR	8454733	FunctionDef	"pl_store_resident_font_data_in_file (char * font_file , gs_memory_t * mem , pl_font_t * plfont)"		8454732	0					
ANR	8454734	CompoundStatement		1206:0:37106:37915	8454732	0					
ANR	8454735	IfStatement	if ( plfont -> header )		8454732	0					
ANR	8454736	Condition	plfont -> header	1208:8:37147:37160	8454732	0	True				
ANR	8454737	PtrMemberAccess	plfont -> header		8454732	0					
ANR	8454738	Identifier	plfont		8454732	0					
ANR	8454739	Identifier	header		8454732	1					
ANR	8454740	CompoundStatement		3:24:56:56	8454732	1					
ANR	8454741	ExpressionStatement	"gs_free_object ( mem , plfont -> header , ""pl_store_resident_font_data_in_file"" )"	1209:8:37173:37270	8454732	0	True				
ANR	8454742	CallExpression	"gs_free_object ( mem , plfont -> header , ""pl_store_resident_font_data_in_file"" )"		8454732	0					
ANR	8454743	Callee	gs_free_object		8454732	0					
ANR	8454744	Identifier	gs_free_object		8454732	0					
ANR	8454745	ArgumentList	mem		8454732	1					
ANR	8454746	Argument	mem		8454732	0					
ANR	8454747	Identifier	mem		8454732	0					
ANR	8454748	Argument	plfont -> header		8454732	1					
ANR	8454749	PtrMemberAccess	plfont -> header		8454732	0					
ANR	8454750	Identifier	plfont		8454732	0					
ANR	8454751	Identifier	header		8454732	1					
ANR	8454752	Argument	"""pl_store_resident_font_data_in_file"""		8454732	2					
ANR	8454753	PrimaryExpression	"""pl_store_resident_font_data_in_file"""		8454732	0					
ANR	8454754	ExpressionStatement	plfont -> header = 0	1211:8:37280:37298	8454732	1	True				
ANR	8454755	AssignmentExpression	plfont -> header = 0		8454732	0		=			
ANR	8454756	PtrMemberAccess	plfont -> header		8454732	0					
ANR	8454757	Identifier	plfont		8454732	0					
ANR	8454758	Identifier	header		8454732	1					
ANR	8454759	PrimaryExpression	0		8454732	1					
ANR	8454760	ExpressionStatement	plfont -> header_size = 0	1212:8:37308:37331	8454732	2	True				
ANR	8454761	AssignmentExpression	plfont -> header_size = 0		8454732	0		=			
ANR	8454762	PtrMemberAccess	plfont -> header_size		8454732	0					
ANR	8454763	Identifier	plfont		8454732	0					
ANR	8454764	Identifier	header_size		8454732	1					
ANR	8454765	PrimaryExpression	0		8454732	1					
ANR	8454766	ElseStatement	else		8454732	0					
ANR	8454767	CompoundStatement		8:11:237:237	8454732	0					
ANR	8454768	ReturnStatement	return 0 ;	1215:8:37382:37390	8454732	0	True				
ANR	8454769	PrimaryExpression	0		8454732	0					
ANR	8454770	IfStatement	if ( ! plfont -> font_file )		8454732	1					
ANR	8454771	Condition	! plfont -> font_file	1219:8:37511:37528	8454732	0	True				
ANR	8454772	UnaryOperationExpression	! plfont -> font_file		8454732	0					
ANR	8454773	UnaryOperator	!		8454732	0					
ANR	8454774	PtrMemberAccess	plfont -> font_file		8454732	1					
ANR	8454775	Identifier	plfont		8454732	0					
ANR	8454776	Identifier	font_file		8454732	1					
ANR	8454777	CompoundStatement		14:28:424:424	8454732	1					
ANR	8454778	ExpressionStatement	"plfont -> font_file = ( char * ) gs_alloc_bytes ( mem , strlen ( font_file ) + 1 , ""pl_store_resident_font_data_in_file"" )"	1220:8:37541:37697	8454732	0	True				
ANR	8454779	AssignmentExpression	"plfont -> font_file = ( char * ) gs_alloc_bytes ( mem , strlen ( font_file ) + 1 , ""pl_store_resident_font_data_in_file"" )"		8454732	0		=			
ANR	8454780	PtrMemberAccess	plfont -> font_file		8454732	0					
ANR	8454781	Identifier	plfont		8454732	0					
ANR	8454782	Identifier	font_file		8454732	1					
ANR	8454783	CastExpression	"( char * ) gs_alloc_bytes ( mem , strlen ( font_file ) + 1 , ""pl_store_resident_font_data_in_file"" )"		8454732	1					
ANR	8454784	CastTarget	char *		8454732	0					
ANR	8454785	CallExpression	"gs_alloc_bytes ( mem , strlen ( font_file ) + 1 , ""pl_store_resident_font_data_in_file"" )"		8454732	1					
ANR	8454786	Callee	gs_alloc_bytes		8454732	0					
ANR	8454787	Identifier	gs_alloc_bytes		8454732	0					
ANR	8454788	ArgumentList	mem		8454732	1					
ANR	8454789	Argument	mem		8454732	0					
ANR	8454790	Identifier	mem		8454732	0					
ANR	8454791	Argument	strlen ( font_file ) + 1		8454732	1					
ANR	8454792	AdditiveExpression	strlen ( font_file ) + 1		8454732	0		+			
ANR	8454793	CallExpression	strlen ( font_file )		8454732	0					
ANR	8454794	Callee	strlen		8454732	0					
ANR	8454795	Identifier	strlen		8454732	0					
ANR	8454796	ArgumentList	font_file		8454732	1					
ANR	8454797	Argument	font_file		8454732	0					
ANR	8454798	Identifier	font_file		8454732	0					
ANR	8454799	PrimaryExpression	1		8454732	1					
ANR	8454800	Argument	"""pl_store_resident_font_data_in_file"""		8454732	2					
ANR	8454801	PrimaryExpression	"""pl_store_resident_font_data_in_file"""		8454732	0					
ANR	8454802	IfStatement	if ( plfont -> font_file == 0 )		8454732	1					
ANR	8454803	Condition	plfont -> font_file == 0	1223:12:37711:37732	8454732	0	True				
ANR	8454804	EqualityExpression	plfont -> font_file == 0		8454732	0		==			
ANR	8454805	PtrMemberAccess	plfont -> font_file		8454732	0					
ANR	8454806	Identifier	plfont		8454732	0					
ANR	8454807	Identifier	font_file		8454732	1					
ANR	8454808	PrimaryExpression	0		8454732	1					
ANR	8454809	ReturnStatement	return - 1 ;	1224:12:37747:37756	8454732	1	True				
ANR	8454810	UnaryOperationExpression	- 1		8454732	0					
ANR	8454811	UnaryOperator	-		8454732	0					
ANR	8454812	PrimaryExpression	1		8454732	1					
ANR	8454813	ExpressionStatement	"strcpy ( plfont -> font_file , font_file )"	1225:8:37766:37802	8454732	2	True				
ANR	8454814	CallExpression	"strcpy ( plfont -> font_file , font_file )"		8454732	0					
ANR	8454815	Callee	strcpy		8454732	0					
ANR	8454816	Identifier	strcpy		8454732	0					
ANR	8454817	ArgumentList	plfont -> font_file		8454732	1					
ANR	8454818	Argument	plfont -> font_file		8454732	0					
ANR	8454819	PtrMemberAccess	plfont -> font_file		8454732	0					
ANR	8454820	Identifier	plfont		8454732	0					
ANR	8454821	Identifier	font_file		8454732	1					
ANR	8454822	Argument	font_file		8454732	1					
ANR	8454823	Identifier	font_file		8454732	0					
ANR	8454824	ExpressionStatement	plfont -> font_file_loaded = false	1228:4:37867:37899	8454732	2	True				
ANR	8454825	AssignmentExpression	plfont -> font_file_loaded = false		8454732	0		=			
ANR	8454826	PtrMemberAccess	plfont -> font_file_loaded		8454732	0					
ANR	8454827	Identifier	plfont		8454732	0					
ANR	8454828	Identifier	font_file_loaded		8454732	1					
ANR	8454829	Identifier	false		8454732	1					
ANR	8454830	ReturnStatement	return 0 ;	1229:4:37905:37913	8454732	3	True				
ANR	8454831	PrimaryExpression	0		8454732	0					
ANR	8454832	ReturnType	int		8454732	1					
ANR	8454833	Identifier	pl_store_resident_font_data_in_file		8454732	2					
ANR	8454834	ParameterList	"char * font_file , gs_memory_t * mem , pl_font_t * plfont"		8454732	3					
ANR	8454835	Parameter	char * font_file	1204:36:37014:37028	8454732	0	True				
ANR	8454836	ParameterType	char *		8454732	0					
ANR	8454837	Identifier	font_file		8454732	1					
ANR	8454838	Parameter	gs_memory_t * mem	1204:53:37031:37047	8454732	1	True				
ANR	8454839	ParameterType	gs_memory_t *		8454732	0					
ANR	8454840	Identifier	mem		8454732	1					
ANR	8454841	Parameter	pl_font_t * plfont	1205:36:37086:37103	8454732	2	True				
ANR	8454842	ParameterType	pl_font_t *		8454732	0					
ANR	8454843	Identifier	plfont		8454732	1					
ANR	8454844	CFGEntryNode	ENTRY		8454732		True				
ANR	8454845	CFGExitNode	EXIT		8454732		True				
ANR	8454846	Symbol	strlen		8454732						
ANR	8454847	Symbol	gs_alloc_bytes		8454732						
ANR	8454848	Symbol	plfont -> header_size		8454732						
ANR	8454849	Symbol	mem		8454732						
ANR	8454850	Symbol	plfont -> header		8454732						
ANR	8454851	Symbol	* plfont		8454732						
ANR	8454852	Symbol	false		8454732						
ANR	8454853	Symbol	plfont -> font_file_loaded		8454732						
ANR	8454854	Symbol	plfont -> font_file		8454732						
ANR	8454855	Symbol	plfont		8454732						
ANR	8454856	Symbol	font_file		8454732						
ANR	8454857	Function	pl_lookup_font_by_pjl_number	1232:0:37918:38333							
ANR	8454858	FunctionDef	"pl_lookup_font_by_pjl_number (pl_dict_t * pfontdict , int pjl_font_number)"		8454857	0					
ANR	8454859	CompoundStatement		1234:0:38003:38333	8454857	0					
ANR	8454860	IdentifierDeclStatement	pl_dict_enum_t dictp ;	1235:4:38009:38029	8454857	0	True				
ANR	8454861	IdentifierDecl	dictp		8454857	0					
ANR	8454862	IdentifierDeclType	pl_dict_enum_t		8454857	0					
ANR	8454863	Identifier	dictp		8454857	1					
ANR	8454864	IdentifierDeclStatement	gs_const_string key ;	1236:4:38035:38054	8454857	1	True				
ANR	8454865	IdentifierDecl	key		8454857	0					
ANR	8454866	IdentifierDeclType	gs_const_string		8454857	0					
ANR	8454867	Identifier	key		8454857	1					
ANR	8454868	IdentifierDeclStatement	void * value ;	1237:4:38060:38071	8454857	2	True				
ANR	8454869	IdentifierDecl	* value		8454857	0					
ANR	8454870	IdentifierDeclType	void *		8454857	0					
ANR	8454871	Identifier	value		8454857	1					
ANR	8454872	ExpressionStatement	"pl_dict_enum_begin ( pfontdict , & dictp )"	1239:4:38078:38115	8454857	3	True				
ANR	8454873	CallExpression	"pl_dict_enum_begin ( pfontdict , & dictp )"		8454857	0					
ANR	8454874	Callee	pl_dict_enum_begin		8454857	0					
ANR	8454875	Identifier	pl_dict_enum_begin		8454857	0					
ANR	8454876	ArgumentList	pfontdict		8454857	1					
ANR	8454877	Argument	pfontdict		8454857	0					
ANR	8454878	Identifier	pfontdict		8454857	0					
ANR	8454879	Argument	& dictp		8454857	1					
ANR	8454880	UnaryOperationExpression	& dictp		8454857	0					
ANR	8454881	UnaryOperator	&		8454857	0					
ANR	8454882	Identifier	dictp		8454857	1					
ANR	8454883	WhileStatement	"while ( pl_dict_enum_next ( & dictp , & key , & value ) )"		8454857	4					
ANR	8454884	Condition	"pl_dict_enum_next ( & dictp , & key , & value )"	1240:11:38128:38166	8454857	0	True				
ANR	8454885	CallExpression	"pl_dict_enum_next ( & dictp , & key , & value )"		8454857	0					
ANR	8454886	Callee	pl_dict_enum_next		8454857	0					
ANR	8454887	Identifier	pl_dict_enum_next		8454857	0					
ANR	8454888	ArgumentList	& dictp		8454857	1					
ANR	8454889	Argument	& dictp		8454857	0					
ANR	8454890	UnaryOperationExpression	& dictp		8454857	0					
ANR	8454891	UnaryOperator	&		8454857	0					
ANR	8454892	Identifier	dictp		8454857	1					
ANR	8454893	Argument	& key		8454857	1					
ANR	8454894	UnaryOperationExpression	& key		8454857	0					
ANR	8454895	UnaryOperator	&		8454857	0					
ANR	8454896	Identifier	key		8454857	1					
ANR	8454897	Argument	& value		8454857	2					
ANR	8454898	UnaryOperationExpression	& value		8454857	0					
ANR	8454899	UnaryOperator	&		8454857	0					
ANR	8454900	Identifier	value		8454857	1					
ANR	8454901	CompoundStatement		8:8:175:200	8454857	1					
ANR	8454902	IdentifierDeclStatement	pl_font_t * plfont = value ;	1241:8:38179:38204	8454857	0	True				
ANR	8454903	IdentifierDecl	* plfont = value		8454857	0					
ANR	8454904	IdentifierDeclType	pl_font_t *		8454857	0					
ANR	8454905	Identifier	plfont		8454857	1					
ANR	8454906	AssignmentExpression	* plfont = value		8454857	2		=			
ANR	8454907	Identifier	value		8454857	0					
ANR	8454908	Identifier	value		8454857	1					
ANR	8454909	IfStatement	if ( plfont -> params . pjl_font_number == pjl_font_number )		8454857	1					
ANR	8454910	Condition	plfont -> params . pjl_font_number == pjl_font_number	1243:12:38219:38267	8454857	0	True				
ANR	8454911	EqualityExpression	plfont -> params . pjl_font_number == pjl_font_number		8454857	0		==			
ANR	8454912	MemberAccess	plfont -> params . pjl_font_number		8454857	0					
ANR	8454913	PtrMemberAccess	plfont -> params		8454857	0					
ANR	8454914	Identifier	plfont		8454857	0					
ANR	8454915	Identifier	params		8454857	1					
ANR	8454916	Identifier	pjl_font_number		8454857	1					
ANR	8454917	Identifier	pjl_font_number		8454857	1					
ANR	8454918	ReturnStatement	return value ;	1244:12:38282:38294	8454857	1	True				
ANR	8454919	Identifier	value		8454857	0					
ANR	8454920	ReturnStatement	return ( pl_font_t * ) NULL ;	1246:4:38306:38331	8454857	5	True				
ANR	8454921	CastExpression	( pl_font_t * ) NULL		8454857	0					
ANR	8454922	CastTarget	pl_font_t *		8454857	0					
ANR	8454923	Identifier	NULL		8454857	1					
ANR	8454924	ReturnType	pl_font_t *		8454857	1					
ANR	8454925	Identifier	pl_lookup_font_by_pjl_number		8454857	2					
ANR	8454926	ParameterList	"pl_dict_t * pfontdict , int pjl_font_number"		8454857	3					
ANR	8454927	Parameter	pl_dict_t * pfontdict	1233:29:37959:37979	8454857	0	True				
ANR	8454928	ParameterType	pl_dict_t *		8454857	0					
ANR	8454929	Identifier	pfontdict		8454857	1					
ANR	8454930	Parameter	int pjl_font_number	1233:52:37982:38000	8454857	1	True				
ANR	8454931	ParameterType	int		8454857	0					
ANR	8454932	Identifier	pjl_font_number		8454857	1					
ANR	8454933	CFGEntryNode	ENTRY		8454857		True				
ANR	8454934	CFGExitNode	EXIT		8454857		True				
ANR	8454935	Symbol	& key		8454857						
ANR	8454936	Symbol	& value		8454857						
ANR	8454937	Symbol	NULL		8454857						
ANR	8454938	Symbol	dictp		8454857						
ANR	8454939	Symbol	plfont		8454857						
ANR	8454940	Symbol	pl_dict_enum_next		8454857						
ANR	8454941	Symbol	pfontdict		8454857						
ANR	8454942	Symbol	plfont -> params		8454857						
ANR	8454943	Symbol	* plfont		8454857						
ANR	8454944	Symbol	& dictp		8454857						
ANR	8454945	Symbol	pjl_font_number		8454857						
ANR	8454946	Symbol	plfont -> params . pjl_font_number		8454857						
ANR	8454947	Symbol	value		8454857						
ANR	8454948	Symbol	key		8454857						
