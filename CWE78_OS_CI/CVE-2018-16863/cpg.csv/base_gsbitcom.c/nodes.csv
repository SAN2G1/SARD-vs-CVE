command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	438487	File	data/converged/CVE-2018-16863_ghostpdl/base_gsbitcom.c								
ANR	438488	DeclStmt									
ANR	438489	Decl							const byte	const byte [ 16 ]	half_byte_1s
ANR	438490	DeclStmt									
ANR	438491	Decl							const byte	const byte [ 32 ]	bits5_trailing_1s
ANR	438492	DeclStmt									
ANR	438493	Decl							const byte	const byte [ 32 ]	bits5_leading_1s
ANR	438494	DeclStmt									
ANR	438495	Decl							const byte	const byte [ 3 ]	compress_1_1
ANR	438496	DeclStmt									
ANR	438497	Decl							const byte	const byte [ 5 ]	compress_2_1
ANR	438498	DeclStmt									
ANR	438499	Decl							const byte	const byte [ 5 ]	compress_2_2
ANR	438500	DeclStmt									
ANR	438501	Decl							const byte	const byte [ 9 ]	compress_3_1
ANR	438502	DeclStmt									
ANR	438503	Decl							const byte	const byte [ 9 ]	compress_3_2
ANR	438504	DeclStmt									
ANR	438505	Decl							const byte	const byte [ 17 ]	compress_4_1
ANR	438506	DeclStmt									
ANR	438507	Decl							const byte	const byte [ 17 ]	compress_4_2
ANR	438508	DeclStmt									
ANR	438509	Decl							const byte	const byte [ 17 ]	compress_4_4
ANR	438510	Function	bits_compress_scaled	97:0:3188:11695							
ANR	438511	FunctionDef	"bits_compress_scaled (const byte * src , int srcx , uint width , uint height , uint sraster , byte * dest , uint draster , const gs_log2_scale_point * plog2_scale , int log2_out_bits)"		438510	0					
ANR	438512	CompoundStatement		101:0:3409:11695	438510	0					
ANR	438513	IdentifierDeclStatement	"int log2_x = plog2_scale -> x , log2_y = plog2_scale -> y ;"	102:4:3415:3467	438510	0	True				
ANR	438514	IdentifierDecl	log2_x = plog2_scale -> x		438510	0					
ANR	438515	IdentifierDeclType	int		438510	0					
ANR	438516	Identifier	log2_x		438510	1					
ANR	438517	AssignmentExpression	log2_x = plog2_scale -> x		438510	2		=			
ANR	438518	Identifier	log2_x		438510	0					
ANR	438519	PtrMemberAccess	plog2_scale -> x		438510	1					
ANR	438520	Identifier	plog2_scale		438510	0					
ANR	438521	Identifier	x		438510	1					
ANR	438522	IdentifierDecl	log2_y = plog2_scale -> y		438510	1					
ANR	438523	IdentifierDeclType	int		438510	0					
ANR	438524	Identifier	log2_y		438510	1					
ANR	438525	AssignmentExpression	log2_y = plog2_scale -> y		438510	2		=			
ANR	438526	Identifier	log2_y		438510	0					
ANR	438527	PtrMemberAccess	plog2_scale -> y		438510	1					
ANR	438528	Identifier	plog2_scale		438510	0					
ANR	438529	Identifier	y		438510	1					
ANR	438530	IdentifierDeclStatement	int xscale = 1 << log2_x ;	103:4:3473:3497	438510	1	True				
ANR	438531	IdentifierDecl	xscale = 1 << log2_x		438510	0					
ANR	438532	IdentifierDeclType	int		438510	0					
ANR	438533	Identifier	xscale		438510	1					
ANR	438534	AssignmentExpression	xscale = 1 << log2_x		438510	2		=			
ANR	438535	Identifier	xscale		438510	0					
ANR	438536	ShiftExpression	1 << log2_x		438510	1		<<			
ANR	438537	PrimaryExpression	1		438510	0					
ANR	438538	Identifier	log2_x		438510	1					
ANR	438539	IdentifierDeclStatement	int yscale = 1 << log2_y ;	104:4:3503:3527	438510	2	True				
ANR	438540	IdentifierDecl	yscale = 1 << log2_y		438510	0					
ANR	438541	IdentifierDeclType	int		438510	0					
ANR	438542	Identifier	yscale		438510	1					
ANR	438543	AssignmentExpression	yscale = 1 << log2_y		438510	2		=			
ANR	438544	Identifier	yscale		438510	0					
ANR	438545	ShiftExpression	1 << log2_y		438510	1		<<			
ANR	438546	PrimaryExpression	1		438510	0					
ANR	438547	Identifier	log2_y		438510	1					
ANR	438548	IdentifierDeclStatement	int out_bits = 1 << log2_out_bits ;	105:4:3533:3566	438510	3	True				
ANR	438549	IdentifierDecl	out_bits = 1 << log2_out_bits		438510	0					
ANR	438550	IdentifierDeclType	int		438510	0					
ANR	438551	Identifier	out_bits		438510	1					
ANR	438552	AssignmentExpression	out_bits = 1 << log2_out_bits		438510	2		=			
ANR	438553	Identifier	out_bits		438510	0					
ANR	438554	ShiftExpression	1 << log2_out_bits		438510	1		<<			
ANR	438555	PrimaryExpression	1		438510	0					
ANR	438556	Identifier	log2_out_bits		438510	1					
ANR	438557	IdentifierDeclStatement	int input_byte_out_bits = out_bits << ( 3 - log2_x ) ;	112:4:3837:3887	438510	4	True				
ANR	438558	IdentifierDecl	input_byte_out_bits = out_bits << ( 3 - log2_x )		438510	0					
ANR	438559	IdentifierDeclType	int		438510	0					
ANR	438560	Identifier	input_byte_out_bits		438510	1					
ANR	438561	AssignmentExpression	input_byte_out_bits = out_bits << ( 3 - log2_x )		438510	2		=			
ANR	438562	Identifier	input_byte_out_bits		438510	0					
ANR	438563	ShiftExpression	out_bits << ( 3 - log2_x )		438510	1		<<			
ANR	438564	Identifier	out_bits		438510	0					
ANR	438565	AdditiveExpression	3 - log2_x		438510	1		-			
ANR	438566	PrimaryExpression	3		438510	0					
ANR	438567	Identifier	log2_x		438510	1					
ANR	438568	IdentifierDeclStatement	byte input_byte_out_mask = ( 1 << input_byte_out_bits ) - 1 ;	113:4:3893:3950	438510	5	True				
ANR	438569	IdentifierDecl	input_byte_out_mask = ( 1 << input_byte_out_bits ) - 1		438510	0					
ANR	438570	IdentifierDeclType	byte		438510	0					
ANR	438571	Identifier	input_byte_out_mask		438510	1					
ANR	438572	AssignmentExpression	input_byte_out_mask = ( 1 << input_byte_out_bits ) - 1		438510	2		=			
ANR	438573	Identifier	input_byte_out_mask		438510	0					
ANR	438574	AdditiveExpression	( 1 << input_byte_out_bits ) - 1		438510	1		-			
ANR	438575	ShiftExpression	1 << input_byte_out_bits		438510	0		<<			
ANR	438576	PrimaryExpression	1		438510	0					
ANR	438577	Identifier	input_byte_out_bits		438510	1					
ANR	438578	PrimaryExpression	1		438510	1					
ANR	438579	IdentifierDeclStatement	const byte * table = compress_tables [ log2_out_bits ] [ log2_x + log2_y - 1 ] ;	114:4:3956:4035	438510	6	True				
ANR	438580	IdentifierDecl	* table = compress_tables [ log2_out_bits ] [ log2_x + log2_y - 1 ]		438510	0					
ANR	438581	IdentifierDeclType	const byte *		438510	0					
ANR	438582	Identifier	table		438510	1					
ANR	438583	AssignmentExpression	* table = compress_tables [ log2_out_bits ] [ log2_x + log2_y - 1 ]		438510	2		=			
ANR	438584	Identifier	table		438510	0					
ANR	438585	ArrayIndexing	compress_tables [ log2_out_bits ] [ log2_x + log2_y - 1 ]		438510	1					
ANR	438586	ArrayIndexing	compress_tables [ log2_out_bits ]		438510	0					
ANR	438587	Identifier	compress_tables		438510	0					
ANR	438588	Identifier	log2_out_bits		438510	1					
ANR	438589	AdditiveExpression	log2_x + log2_y - 1		438510	1		+			
ANR	438590	Identifier	log2_x		438510	0					
ANR	438591	AdditiveExpression	log2_y - 1		438510	1		-			
ANR	438592	Identifier	log2_y		438510	0					
ANR	438593	PrimaryExpression	1		438510	1					
ANR	438594	IdentifierDeclStatement	uint sskip = sraster << log2_y ;	116:4:4041:4071	438510	7	True				
ANR	438595	IdentifierDecl	sskip = sraster << log2_y		438510	0					
ANR	438596	IdentifierDeclType	uint		438510	0					
ANR	438597	Identifier	sskip		438510	1					
ANR	438598	AssignmentExpression	sskip = sraster << log2_y		438510	2		=			
ANR	438599	Identifier	sskip		438510	0					
ANR	438600	ShiftExpression	sraster << log2_y		438510	1		<<			
ANR	438601	Identifier	sraster		438510	0					
ANR	438602	Identifier	log2_y		438510	1					
ANR	438603	IdentifierDeclStatement	uint dwidth = ( width >> log2_x ) << log2_out_bits ;	117:4:4077:4125	438510	8	True				
ANR	438604	IdentifierDecl	dwidth = ( width >> log2_x ) << log2_out_bits		438510	0					
ANR	438605	IdentifierDeclType	uint		438510	0					
ANR	438606	Identifier	dwidth		438510	1					
ANR	438607	AssignmentExpression	dwidth = ( width >> log2_x ) << log2_out_bits		438510	2		=			
ANR	438608	Identifier	dwidth		438510	0					
ANR	438609	ShiftExpression	( width >> log2_x ) << log2_out_bits		438510	1		<<			
ANR	438610	ShiftExpression	width >> log2_x		438510	0		>>			
ANR	438611	Identifier	width		438510	0					
ANR	438612	Identifier	log2_x		438510	1					
ANR	438613	Identifier	log2_out_bits		438510	1					
ANR	438614	IdentifierDeclStatement	uint dskip = draster - ( ( dwidth + 7 ) >> 3 ) ;	118:4:4131:4173	438510	9	True				
ANR	438615	IdentifierDecl	dskip = draster - ( ( dwidth + 7 ) >> 3 )		438510	0					
ANR	438616	IdentifierDeclType	uint		438510	0					
ANR	438617	Identifier	dskip		438510	1					
ANR	438618	AssignmentExpression	dskip = draster - ( ( dwidth + 7 ) >> 3 )		438510	2		=			
ANR	438619	Identifier	dskip		438510	0					
ANR	438620	AdditiveExpression	draster - ( ( dwidth + 7 ) >> 3 )		438510	1		-			
ANR	438621	Identifier	draster		438510	0					
ANR	438622	ShiftExpression	( dwidth + 7 ) >> 3		438510	1		>>			
ANR	438623	AdditiveExpression	dwidth + 7		438510	0		+			
ANR	438624	Identifier	dwidth		438510	0					
ANR	438625	PrimaryExpression	7		438510	1					
ANR	438626	PrimaryExpression	3		438510	1					
ANR	438627	IdentifierDeclStatement	uint mask = ( 1 << xscale ) - 1 ;	119:4:4179:4208	438510	10	True				
ANR	438628	IdentifierDecl	mask = ( 1 << xscale ) - 1		438510	0					
ANR	438629	IdentifierDeclType	uint		438510	0					
ANR	438630	Identifier	mask		438510	1					
ANR	438631	AssignmentExpression	mask = ( 1 << xscale ) - 1		438510	2		=			
ANR	438632	Identifier	mask		438510	0					
ANR	438633	AdditiveExpression	( 1 << xscale ) - 1		438510	1		-			
ANR	438634	ShiftExpression	1 << xscale		438510	0		<<			
ANR	438635	PrimaryExpression	1		438510	0					
ANR	438636	Identifier	xscale		438510	1					
ANR	438637	PrimaryExpression	1		438510	1					
ANR	438638	IdentifierDeclStatement	uint count_max = 1 << ( log2_x + log2_y ) ;	120:4:4214:4253	438510	11	True				
ANR	438639	IdentifierDecl	count_max = 1 << ( log2_x + log2_y )		438510	0					
ANR	438640	IdentifierDeclType	uint		438510	0					
ANR	438641	Identifier	count_max		438510	1					
ANR	438642	AssignmentExpression	count_max = 1 << ( log2_x + log2_y )		438510	2		=			
ANR	438643	Identifier	count_max		438510	0					
ANR	438644	ShiftExpression	1 << ( log2_x + log2_y )		438510	1		<<			
ANR	438645	PrimaryExpression	1		438510	0					
ANR	438646	AdditiveExpression	log2_x + log2_y		438510	1		+			
ANR	438647	Identifier	log2_x		438510	0					
ANR	438648	Identifier	log2_y		438510	1					
ANR	438649	IdentifierDeclStatement	const byte * srow = src + ( srcx >> 3 ) ;	125:4:4378:4414	438510	12	True				
ANR	438650	IdentifierDecl	* srow = src + ( srcx >> 3 )		438510	0					
ANR	438651	IdentifierDeclType	const byte *		438510	0					
ANR	438652	Identifier	srow		438510	1					
ANR	438653	AssignmentExpression	* srow = src + ( srcx >> 3 )		438510	2		=			
ANR	438654	Identifier	srow		438510	0					
ANR	438655	AdditiveExpression	src + ( srcx >> 3 )		438510	1		+			
ANR	438656	Identifier	src		438510	0					
ANR	438657	ShiftExpression	srcx >> 3		438510	1		>>			
ANR	438658	Identifier	srcx		438510	0					
ANR	438659	PrimaryExpression	3		438510	1					
ANR	438660	IdentifierDeclStatement	int in_shift_initial = 8 - xscale - ( srcx & 7 ) ;	126:4:4420:4466	438510	13	True				
ANR	438661	IdentifierDecl	in_shift_initial = 8 - xscale - ( srcx & 7 )		438510	0					
ANR	438662	IdentifierDeclType	int		438510	0					
ANR	438663	Identifier	in_shift_initial		438510	1					
ANR	438664	AssignmentExpression	in_shift_initial = 8 - xscale - ( srcx & 7 )		438510	2		=			
ANR	438665	Identifier	in_shift_initial		438510	0					
ANR	438666	AdditiveExpression	8 - xscale - ( srcx & 7 )		438510	1		-			
ANR	438667	PrimaryExpression	8		438510	0					
ANR	438668	AdditiveExpression	xscale - ( srcx & 7 )		438510	1		-			
ANR	438669	Identifier	xscale		438510	0					
ANR	438670	BitAndExpression	srcx & 7		438510	1		&			
ANR	438671	Identifier	srcx		438510	0					
ANR	438672	PrimaryExpression	7		438510	1					
ANR	438673	IdentifierDeclStatement	int in_shift_check = ( out_bits <= xscale ? 8 - xscale : - 1 ) ;	127:4:4472:4531	438510	14	True				
ANR	438674	IdentifierDecl	in_shift_check = ( out_bits <= xscale ? 8 - xscale : - 1 )		438510	0					
ANR	438675	IdentifierDeclType	int		438510	0					
ANR	438676	Identifier	in_shift_check		438510	1					
ANR	438677	AssignmentExpression	in_shift_check = ( out_bits <= xscale ? 8 - xscale : - 1 )		438510	2		=			
ANR	438678	Identifier	in_shift_check		438510	0					
ANR	438679	ConditionalExpression	out_bits <= xscale ? 8 - xscale : - 1		438510	1					
ANR	438680	Condition	out_bits <= xscale		438510	0					
ANR	438681	RelationalExpression	out_bits <= xscale		438510	0		<=			
ANR	438682	Identifier	out_bits		438510	0					
ANR	438683	Identifier	xscale		438510	1					
ANR	438684	AdditiveExpression	8 - xscale		438510	1		-			
ANR	438685	PrimaryExpression	8		438510	0					
ANR	438686	Identifier	xscale		438510	1					
ANR	438687	UnaryOperationExpression	- 1		438510	2					
ANR	438688	UnaryOperator	-		438510	0					
ANR	438689	PrimaryExpression	1		438510	1					
ANR	438690	IdentifierDeclStatement	byte * d = dest ;	128:4:4537:4551	438510	15	True				
ANR	438691	IdentifierDecl	* d = dest		438510	0					
ANR	438692	IdentifierDeclType	byte *		438510	0					
ANR	438693	Identifier	d		438510	1					
ANR	438694	AssignmentExpression	* d = dest		438510	2		=			
ANR	438695	Identifier	dest		438510	0					
ANR	438696	Identifier	dest		438510	1					
ANR	438697	IdentifierDeclStatement	uint h ;	129:4:4557:4563	438510	16	True				
ANR	438698	IdentifierDecl	h		438510	0					
ANR	438699	IdentifierDeclType	uint		438510	0					
ANR	438700	Identifier	h		438510	1					
ANR	438701	ForStatement	"for ( h = height ; h ; srow += sskip , h -= yscale )"		438510	17					
ANR	438702	ForInit	h = height ;	131:9:4575:4585	438510	0	True				
ANR	438703	AssignmentExpression	h = height		438510	0		=			
ANR	438704	Identifier	h		438510	0					
ANR	438705	Identifier	height		438510	1					
ANR	438706	Condition	h	131:21:4587:4587	438510	1	True				
ANR	438707	Identifier	h		438510	0					
ANR	438708	Expression	"srow += sskip , h -= yscale"	131:24:4590:4615	438510	2	True				
ANR	438709	AssignmentExpression	srow += sskip		438510	0		+=			
ANR	438710	Identifier	srow		438510	0					
ANR	438711	Identifier	sskip		438510	1					
ANR	438712	AssignmentExpression	h -= yscale		438510	1		-=			
ANR	438713	Identifier	h		438510	0					
ANR	438714	Identifier	yscale		438510	1					
ANR	438715	CompoundStatement		45:8:1643:1648	438510	3					
ANR	438716	IdentifierDeclStatement	const byte * s = srow ;	132:8:4628:4648	438510	0	True				
ANR	438717	IdentifierDecl	* s = srow		438510	0					
ANR	438718	IdentifierDeclType	const byte *		438510	0					
ANR	438719	Identifier	s		438510	1					
ANR	438720	AssignmentExpression	* s = srow		438510	2		=			
ANR	438721	Identifier	srow		438510	0					
ANR	438722	Identifier	srow		438510	1					
ANR	438723	Statement	define	135:3:4674:4679	438510	1	True				
ANR	438724	Statement	out_shift_initial	135:10:4681:4697	438510	2	True				
ANR	438725	Statement	0	135:28:4699:4699	438510	3	True				
ANR	438726	Statement	define	136:3:4704:4709	438510	4	True				
ANR	438727	Statement	out_shift_update	136:10:4711:4726	438510	5	True				
ANR	438728	Statement	(	136:26:4727:4727	438510	6	True				
ANR	438729	Statement	out_shift	136:27:4728:4736	438510	7	True				
ANR	438730	Statement	","	136:36:4737:4737	438510	8	True				
ANR	438731	Statement	nbits	136:38:4739:4743	438510	9	True				
ANR	438732	Statement	)	136:43:4744:4744	438510	10	True				
ANR	438733	Statement	(	136:45:4746:4746	438510	11	True				
ANR	438734	Statement	(	136:46:4747:4747	438510	12	True				
ANR	438735	Statement	out_shift	136:47:4748:4756	438510	13	True				
ANR	438736	Statement	+=	136:57:4758:4759	438510	14	True				
ANR	438737	Statement	(	136:60:4761:4761	438510	15	True				
ANR	438738	Statement	nbits	136:61:4762:4766	438510	16	True				
ANR	438739	Statement	)	136:66:4767:4767	438510	17	True				
ANR	438740	Statement	)	136:67:4768:4768	438510	18	True				
ANR	438741	Statement	>=	136:69:4770:4771	438510	19	True				
ANR	438742	Statement	8	136:72:4773:4773	438510	20	True				
ANR	438743	Statement	)	136:73:4774:4774	438510	21	True				
ANR	438744	IdentifierDeclStatement	int out_shift = out_shift_initial ;	141:8:4914:4947	438510	22	True				
ANR	438745	IdentifierDecl	out_shift = out_shift_initial		438510	0					
ANR	438746	IdentifierDeclType	int		438510	0					
ANR	438747	Identifier	out_shift		438510	1					
ANR	438748	AssignmentExpression	out_shift = out_shift_initial		438510	2		=			
ANR	438749	Identifier	out_shift_initial		438510	0					
ANR	438750	Identifier	out_shift_initial		438510	1					
ANR	438751	IdentifierDeclStatement	byte out = 0 ;	142:8:4957:4969	438510	23	True				
ANR	438752	IdentifierDecl	out = 0		438510	0					
ANR	438753	IdentifierDeclType	byte		438510	0					
ANR	438754	Identifier	out		438510	1					
ANR	438755	AssignmentExpression	out = 0		438510	2		=			
ANR	438756	Identifier	out		438510	0					
ANR	438757	PrimaryExpression	0		438510	1					
ANR	438758	IdentifierDeclStatement	int in_shift = in_shift_initial ;	143:8:4979:5010	438510	24	True				
ANR	438759	IdentifierDecl	in_shift = in_shift_initial		438510	0					
ANR	438760	IdentifierDeclType	int		438510	0					
ANR	438761	Identifier	in_shift		438510	1					
ANR	438762	AssignmentExpression	in_shift = in_shift_initial		438510	2		=			
ANR	438763	Identifier	in_shift_initial		438510	0					
ANR	438764	Identifier	in_shift_initial		438510	1					
ANR	438765	IdentifierDeclStatement	int dw = 8 - ( srcx & 7 ) ;	144:8:5020:5043	438510	25	True				
ANR	438766	IdentifierDecl	dw = 8 - ( srcx & 7 )		438510	0					
ANR	438767	IdentifierDeclType	int		438510	0					
ANR	438768	Identifier	dw		438510	1					
ANR	438769	AssignmentExpression	dw = 8 - ( srcx & 7 )		438510	2		=			
ANR	438770	Identifier	dw		438510	0					
ANR	438771	AdditiveExpression	8 - ( srcx & 7 )		438510	1		-			
ANR	438772	PrimaryExpression	8		438510	0					
ANR	438773	BitAndExpression	srcx & 7		438510	1		&			
ANR	438774	Identifier	srcx		438510	0					
ANR	438775	PrimaryExpression	7		438510	1					
ANR	438776	IdentifierDeclStatement	int w ;	145:8:5053:5058	438510	26	True				
ANR	438777	IdentifierDecl	w		438510	0					
ANR	438778	IdentifierDeclType	int		438510	0					
ANR	438779	Identifier	w		438510	1					
ANR	438780	ForStatement	"for ( w = width ; w > 0 ; w -= dw , dw = 8 )"		438510	27					
ANR	438781	ForInit	w = width ;	148:13:5112:5121	438510	0	True				
ANR	438782	AssignmentExpression	w = width		438510	0		=			
ANR	438783	Identifier	w		438510	0					
ANR	438784	Identifier	width		438510	1					
ANR	438785	Condition	w > 0	148:24:5123:5127	438510	1	True				
ANR	438786	RelationalExpression	w > 0		438510	0		>			
ANR	438787	Identifier	w		438510	0					
ANR	438788	PrimaryExpression	0		438510	1					
ANR	438789	Expression	"w -= dw , dw = 8"	148:31:5130:5144	438510	2	True				
ANR	438790	AssignmentExpression	w -= dw		438510	0		-=			
ANR	438791	Identifier	w		438510	0					
ANR	438792	Identifier	dw		438510	1					
ANR	438793	AssignmentExpression	dw = 8		438510	1		=			
ANR	438794	Identifier	dw		438510	0					
ANR	438795	PrimaryExpression	8		438510	1					
ANR	438796	CompoundStatement		50:12:1774:1817	438510	3					
ANR	438797	IdentifierDeclStatement	int index ;	149:12:5161:5170	438510	0	True				
ANR	438798	IdentifierDecl	index		438510	0					
ANR	438799	IdentifierDeclType	int		438510	0					
ANR	438800	Identifier	index		438510	1					
ANR	438801	IdentifierDeclStatement	int in_shift_final = ( w >= dw ? 0 : dw - w ) ;	150:12:5184:5227	438510	1	True				
ANR	438802	IdentifierDecl	in_shift_final = ( w >= dw ? 0 : dw - w )		438510	0					
ANR	438803	IdentifierDeclType	int		438510	0					
ANR	438804	Identifier	in_shift_final		438510	1					
ANR	438805	AssignmentExpression	in_shift_final = ( w >= dw ? 0 : dw - w )		438510	2		=			
ANR	438806	Identifier	in_shift_final		438510	0					
ANR	438807	ConditionalExpression	w >= dw ? 0 : dw - w		438510	1					
ANR	438808	Condition	w >= dw		438510	0					
ANR	438809	RelationalExpression	w >= dw		438510	0		>=			
ANR	438810	Identifier	w		438510	0					
ANR	438811	Identifier	dw		438510	1					
ANR	438812	PrimaryExpression	0		438510	1					
ANR	438813	AdditiveExpression	dw - w		438510	2		-			
ANR	438814	Identifier	dw		438510	0					
ANR	438815	Identifier	w		438510	1					
ANR	438816	IfStatement	if ( in_shift == in_shift_check && in_shift_final == 0 )		438510	2					
ANR	438817	Condition	in_shift == in_shift_check && in_shift_final == 0	159:16:5572:5620	438510	0	True				
ANR	438818	AndExpression	in_shift == in_shift_check && in_shift_final == 0		438510	0		&&			
ANR	438819	EqualityExpression	in_shift == in_shift_check		438510	0		==			
ANR	438820	Identifier	in_shift		438510	0					
ANR	438821	Identifier	in_shift_check		438510	1					
ANR	438822	EqualityExpression	in_shift_final == 0		438510	1		==			
ANR	438823	Identifier	in_shift_final		438510	0					
ANR	438824	PrimaryExpression	0		438510	1					
ANR	438825	SwitchStatement	switch ( * s )		438510	1					
ANR	438826	Condition	* s	160:24:5647:5648	438510	0	True				
ANR	438827	UnaryOperationExpression	* s		438510	0					
ANR	438828	UnaryOperator	*		438510	0					
ANR	438829	Identifier	s		438510	1					
ANR	438830	CompoundStatement		60:28:2241:2241	438510	1					
ANR	438831	Label	case 0 :	161:20:5673:5679	438510	0	True				
ANR	438832	ForStatement	for ( index = sraster ; index != sskip ; index += sraster )		438510	1					
ANR	438833	ForInit	index = sraster ;	162:29:5710:5725	438510	0	True				
ANR	438834	AssignmentExpression	index = sraster		438510	0		=			
ANR	438835	Identifier	index		438510	0					
ANR	438836	Identifier	sraster		438510	1					
ANR	438837	Condition	index != sskip	162:46:5727:5740	438510	1	True				
ANR	438838	EqualityExpression	index != sskip		438510	0		!=			
ANR	438839	Identifier	index		438510	0					
ANR	438840	Identifier	sskip		438510	1					
ANR	438841	AssignmentExpression	index += sraster	162:62:5743:5758	438510	2	True	+=			
ANR	438842	Identifier	index		438510	0					
ANR	438843	Identifier	sraster		438510	1					
ANR	438844	IfStatement	if ( s [ index ] != 0 )		438510	3					
ANR	438845	Condition	s [ index ] != 0	163:32:5793:5805	438510	0	True				
ANR	438846	EqualityExpression	s [ index ] != 0		438510	0		!=			
ANR	438847	ArrayIndexing	s [ index ]		438510	0					
ANR	438848	Identifier	s		438510	0					
ANR	438849	Identifier	index		438510	1					
ANR	438850	PrimaryExpression	0		438510	1					
ANR	438851	GotoStatement	goto p ;	164:32:5840:5846	438510	1	True				
ANR	438852	Identifier	p		438510	0					
ANR	438853	IfStatement	"if ( out_shift_update ( out_shift , input_byte_out_bits ) )"		438510	2					
ANR	438854	Condition	"out_shift_update ( out_shift , input_byte_out_bits )"	165:28:5876:5923	438510	0	True				
ANR	438855	CallExpression	"out_shift_update ( out_shift , input_byte_out_bits )"		438510	0					
ANR	438856	Callee	out_shift_update		438510	0					
ANR	438857	Identifier	out_shift_update		438510	0					
ANR	438858	ArgumentList	out_shift		438510	1					
ANR	438859	Argument	out_shift		438510	0					
ANR	438860	Identifier	out_shift		438510	0					
ANR	438861	Argument	input_byte_out_bits		438510	1					
ANR	438862	Identifier	input_byte_out_bits		438510	0					
ANR	438863	ExpressionStatement	"* d ++ = out , out_shift &= 7 , out = 0"	166:28:5954:5989	438510	1	True				
ANR	438864	Expression	"* d ++ = out , out_shift &= 7 , out = 0"		438510	0					
ANR	438865	AssignmentExpression	* d ++ = out		438510	0		=			
ANR	438866	UnaryOperationExpression	* d ++		438510	0					
ANR	438867	UnaryOperator	*		438510	0					
ANR	438868	PostIncDecOperationExpression	d ++		438510	1					
ANR	438869	Identifier	d		438510	0					
ANR	438870	IncDec	++		438510	1					
ANR	438871	Identifier	out		438510	1					
ANR	438872	Expression	"out_shift &= 7 , out = 0"		438510	1					
ANR	438873	AssignmentExpression	out_shift &= 7		438510	0		&=			
ANR	438874	Identifier	out_shift		438510	0					
ANR	438875	PrimaryExpression	7		438510	1					
ANR	438876	AssignmentExpression	out = 0		438510	1		=			
ANR	438877	Identifier	out		438510	0					
ANR	438878	PrimaryExpression	0		438510	1					
ANR	438879	ExpressionStatement	s ++	167:24:6015:6018	438510	3	True				
ANR	438880	PostIncDecOperationExpression	s ++		438510	0					
ANR	438881	Identifier	s		438510	0					
ANR	438882	IncDec	++		438510	1					
ANR	438883	ContinueStatement	continue ;	168:24:6044:6052	438510	4	True				
ANR	438884	Label	case 0xff :	170:20:6128:6137	438510	5	True				
ANR	438885	ForStatement	for ( index = sraster ; index != sskip ; index += sraster )		438510	6					
ANR	438886	ForInit	index = sraster ;	171:29:6168:6183	438510	0	True				
ANR	438887	AssignmentExpression	index = sraster		438510	0		=			
ANR	438888	Identifier	index		438510	0					
ANR	438889	Identifier	sraster		438510	1					
ANR	438890	Condition	index != sskip	171:46:6185:6198	438510	1	True				
ANR	438891	EqualityExpression	index != sskip		438510	0		!=			
ANR	438892	Identifier	index		438510	0					
ANR	438893	Identifier	sskip		438510	1					
ANR	438894	AssignmentExpression	index += sraster	171:62:6201:6216	438510	2	True	+=			
ANR	438895	Identifier	index		438510	0					
ANR	438896	Identifier	sraster		438510	1					
ANR	438897	IfStatement	if ( s [ index ] != 0xff )		438510	3					
ANR	438898	Condition	s [ index ] != 0xff	172:32:6251:6266	438510	0	True				
ANR	438899	EqualityExpression	s [ index ] != 0xff		438510	0		!=			
ANR	438900	ArrayIndexing	s [ index ]		438510	0					
ANR	438901	Identifier	s		438510	0					
ANR	438902	Identifier	index		438510	1					
ANR	438903	PrimaryExpression	0xff		438510	1					
ANR	438904	GotoStatement	goto p ;	173:32:6301:6307	438510	1	True				
ANR	438905	Identifier	p		438510	0					
ANR	438906	CompoundStatement		75:28:2953:3042	438510	7					
ANR	438907	IdentifierDeclStatement	int shift = ( out_shift -= input_byte_out_bits ) + out_bits ;	175:28:6363:6452	438510	0	True				
ANR	438908	IdentifierDecl	shift = ( out_shift -= input_byte_out_bits ) + out_bits		438510	0					
ANR	438909	IdentifierDeclType	int		438510	0					
ANR	438910	Identifier	shift		438510	1					
ANR	438911	AssignmentExpression	shift = ( out_shift -= input_byte_out_bits ) + out_bits		438510	2		=			
ANR	438912	Identifier	shift		438510	0					
ANR	438913	AdditiveExpression	( out_shift -= input_byte_out_bits ) + out_bits		438510	1		+			
ANR	438914	AssignmentExpression	out_shift -= input_byte_out_bits		438510	0		-=			
ANR	438915	Identifier	out_shift		438510	0					
ANR	438916	Identifier	input_byte_out_bits		438510	1					
ANR	438917	Identifier	out_bits		438510	1					
ANR	438918	IfStatement	if ( shift > 0 )		438510	1					
ANR	438919	Condition	shift > 0	178:32:6487:6495	438510	0	True				
ANR	438920	RelationalExpression	shift > 0		438510	0		>			
ANR	438921	Identifier	shift		438510	0					
ANR	438922	PrimaryExpression	0		438510	1					
ANR	438923	ExpressionStatement	out |= input_byte_out_mask << shift	179:32:6530:6565	438510	1	True				
ANR	438924	AssignmentExpression	out |= input_byte_out_mask << shift		438510	0		|=			
ANR	438925	Identifier	out		438510	0					
ANR	438926	ShiftExpression	input_byte_out_mask << shift		438510	1		<<			
ANR	438927	Identifier	input_byte_out_mask		438510	0					
ANR	438928	Identifier	shift		438510	1					
ANR	438929	ElseStatement	else		438510	0					
ANR	438930	CompoundStatement		80:33:3190:3190	438510	0					
ANR	438931	ExpressionStatement	out |= input_byte_out_mask >> - shift	181:32:6634:6670	438510	0	True				
ANR	438932	AssignmentExpression	out |= input_byte_out_mask >> - shift		438510	0		|=			
ANR	438933	Identifier	out		438510	0					
ANR	438934	ShiftExpression	input_byte_out_mask >> - shift		438510	1		>>			
ANR	438935	Identifier	input_byte_out_mask		438510	0					
ANR	438936	UnaryOperationExpression	- shift		438510	1					
ANR	438937	UnaryOperator	-		438510	0					
ANR	438938	Identifier	shift		438510	1					
ANR	438939	ExpressionStatement	* d ++ = out	182:32:6704:6714	438510	1	True				
ANR	438940	AssignmentExpression	* d ++ = out		438510	0		=			
ANR	438941	UnaryOperationExpression	* d ++		438510	0					
ANR	438942	UnaryOperator	*		438510	0					
ANR	438943	PostIncDecOperationExpression	d ++		438510	1					
ANR	438944	Identifier	d		438510	0					
ANR	438945	IncDec	++		438510	1					
ANR	438946	Identifier	out		438510	1					
ANR	438947	ExpressionStatement	out_shift += 8	183:32:6748:6762	438510	2	True				
ANR	438948	AssignmentExpression	out_shift += 8		438510	0		+=			
ANR	438949	Identifier	out_shift		438510	0					
ANR	438950	PrimaryExpression	8		438510	1					
ANR	438951	ExpressionStatement	out = input_byte_out_mask << ( 8 + shift )	184:32:6796:6836	438510	3	True				
ANR	438952	AssignmentExpression	out = input_byte_out_mask << ( 8 + shift )		438510	0		=			
ANR	438953	Identifier	out		438510	0					
ANR	438954	ShiftExpression	input_byte_out_mask << ( 8 + shift )		438510	1		<<			
ANR	438955	Identifier	input_byte_out_mask		438510	0					
ANR	438956	AdditiveExpression	8 + shift		438510	1		+			
ANR	438957	PrimaryExpression	8		438510	0					
ANR	438958	Identifier	shift		438510	1					
ANR	438959	ExpressionStatement	s ++	187:24:6918:6921	438510	8	True				
ANR	438960	PostIncDecOperationExpression	s ++		438510	0					
ANR	438961	Identifier	s		438510	0					
ANR	438962	IncDec	++		438510	1					
ANR	438963	ContinueStatement	continue ;	188:24:6947:6955	438510	9	True				
ANR	438964	Label	default :	190:20:6984:6991	438510	10	True				
ANR	438965	Identifier	default		438510	0					
ANR	438966	ExpressionStatement		191:24:7017:7017	438510	11	True				
ANR	438967	Label	p :	193:10:7047:7048	438510	3	True				
ANR	438968	Identifier	p		438510	0					
ANR	438969	DoStatement	do		438510	4					
ANR	438970	CompoundStatement		95:16:3720:3730	438510	0					
ANR	438971	IdentifierDeclStatement	uint count ;	195:16:7130:7140	438510	0	True				
ANR	438972	IdentifierDecl	count		438510	0					
ANR	438973	IdentifierDeclType	uint		438510	0					
ANR	438974	Identifier	count		438510	1					
ANR	438975	ForStatement	"for ( index = 0 , count = 0 ; index != sskip ; index += sraster )"		438510	1					
ANR	438976	ForInit	"index = 0 , count = 0 ;"	197:21:7164:7184	438510	0	True				
ANR	438977	Expression	"index = 0 , count = 0"		438510	0					
ANR	438978	AssignmentExpression	index = 0		438510	0		=			
ANR	438979	Identifier	index		438510	0					
ANR	438980	PrimaryExpression	0		438510	1					
ANR	438981	AssignmentExpression	count = 0		438510	1		=			
ANR	438982	Identifier	count		438510	0					
ANR	438983	PrimaryExpression	0		438510	1					
ANR	438984	Condition	index != sskip	197:43:7186:7199	438510	1	True				
ANR	438985	EqualityExpression	index != sskip		438510	0		!=			
ANR	438986	Identifier	index		438510	0					
ANR	438987	Identifier	sskip		438510	1					
ANR	438988	AssignmentExpression	index += sraster	198:21:7223:7238	438510	2	True	+=			
ANR	438989	Identifier	index		438510	0					
ANR	438990	Identifier	sraster		438510	1					
ANR	438991	ExpressionStatement	count += half_byte_1s [ ( s [ index ] >> in_shift ) & mask ]	200:20:7282:7334	438510	3	True				
ANR	438992	AssignmentExpression	count += half_byte_1s [ ( s [ index ] >> in_shift ) & mask ]		438510	0		+=			
ANR	438993	Identifier	count		438510	0					
ANR	438994	ArrayIndexing	half_byte_1s [ ( s [ index ] >> in_shift ) & mask ]		438510	1					
ANR	438995	Identifier	half_byte_1s		438510	0					
ANR	438996	BitAndExpression	( s [ index ] >> in_shift ) & mask		438510	1		&			
ANR	438997	ShiftExpression	s [ index ] >> in_shift		438510	0		>>			
ANR	438998	ArrayIndexing	s [ index ]		438510	0					
ANR	438999	Identifier	s		438510	0					
ANR	439000	Identifier	index		438510	1					
ANR	439001	Identifier	in_shift		438510	1					
ANR	439002	Identifier	mask		438510	1					
ANR	439003	IfStatement	if ( count != 0 && table [ count ] == 0 )		438510	2					
ANR	439004	Condition	count != 0 && table [ count ] == 0	201:20:7356:7386	438510	0	True				
ANR	439005	AndExpression	count != 0 && table [ count ] == 0		438510	0		&&			
ANR	439006	EqualityExpression	count != 0		438510	0		!=			
ANR	439007	Identifier	count		438510	0					
ANR	439008	PrimaryExpression	0		438510	1					
ANR	439009	EqualityExpression	table [ count ] == 0		438510	1		==			
ANR	439010	ArrayIndexing	table [ count ]		438510	0					
ANR	439011	Identifier	table		438510	0					
ANR	439012	Identifier	count		438510	1					
ANR	439013	PrimaryExpression	0		438510	1					
ANR	439014	CompoundStatement		105:20:4185:4192	438510	1					
ANR	439015	IdentifierDeclStatement	uint orig_count = count ;	203:20:7492:7515	438510	0	True				
ANR	439016	IdentifierDecl	orig_count = count		438510	0					
ANR	439017	IdentifierDeclType	uint		438510	0					
ANR	439018	Identifier	orig_count		438510	1					
ANR	439019	AssignmentExpression	orig_count = count		438510	2		=			
ANR	439020	Identifier	count		438510	0					
ANR	439021	Identifier	count		438510	1					
ANR	439022	IdentifierDeclStatement	uint shifted_mask = mask << in_shift ;	204:20:7537:7573	438510	1	True				
ANR	439023	IdentifierDecl	shifted_mask = mask << in_shift		438510	0					
ANR	439024	IdentifierDeclType	uint		438510	0					
ANR	439025	Identifier	shifted_mask		438510	1					
ANR	439026	AssignmentExpression	shifted_mask = mask << in_shift		438510	2		=			
ANR	439027	Identifier	shifted_mask		438510	0					
ANR	439028	ShiftExpression	mask << in_shift		438510	1		<<			
ANR	439029	Identifier	mask		438510	0					
ANR	439030	Identifier	in_shift		438510	1					
ANR	439031	IdentifierDeclStatement	byte in ;	205:20:7595:7602	438510	2	True				
ANR	439032	IdentifierDecl	in		438510	0					
ANR	439033	IdentifierDeclType	byte		438510	0					
ANR	439034	Identifier	in		438510	1					
ANR	439035	ExpressionStatement	"if_debug3 ( 'B' , ""[B]count(%d,%d)=%d\\n"" , ( width - w ) / xscale , ( height - h ) / yscale , count )"	207:20:7625:7775	438510	3	True				
ANR	439036	CallExpression	"if_debug3 ( 'B' , ""[B]count(%d,%d)=%d\\n"" , ( width - w ) / xscale , ( height - h ) / yscale , count )"		438510	0					
ANR	439037	Callee	if_debug3		438510	0					
ANR	439038	Identifier	if_debug3		438510	0					
ANR	439039	ArgumentList	'B'		438510	1					
ANR	439040	Argument	'B'		438510	0					
ANR	439041	PrimaryExpression	'B'		438510	0					
ANR	439042	Argument	"""[B]count(%d,%d)=%d\\n"""		438510	1					
ANR	439043	PrimaryExpression	"""[B]count(%d,%d)=%d\\n"""		438510	0					
ANR	439044	Argument	( width - w ) / xscale		438510	2					
ANR	439045	MultiplicativeExpression	( width - w ) / xscale		438510	0		/			
ANR	439046	AdditiveExpression	width - w		438510	0		-			
ANR	439047	Identifier	width		438510	0					
ANR	439048	Identifier	w		438510	1					
ANR	439049	Identifier	xscale		438510	1					
ANR	439050	Argument	( height - h ) / yscale		438510	3					
ANR	439051	MultiplicativeExpression	( height - h ) / yscale		438510	0		/			
ANR	439052	AdditiveExpression	height - h		438510	0		-			
ANR	439053	Identifier	height		438510	0					
ANR	439054	Identifier	h		438510	1					
ANR	439055	Identifier	yscale		438510	1					
ANR	439056	Argument	count		438510	4					
ANR	439057	Identifier	count		438510	0					
ANR	439058	IfStatement	if ( yscale > 1 )		438510	4					
ANR	439059	Condition	yscale > 1	210:24:7801:7810	438510	0	True				
ANR	439060	RelationalExpression	yscale > 1		438510	0		>			
ANR	439061	Identifier	yscale		438510	0					
ANR	439062	PrimaryExpression	1		438510	1					
ANR	439063	CompoundStatement		110:36:4403:4403	438510	1					
ANR	439064	IfStatement	if ( h < height && ( in = s [ 0 ] & shifted_mask ) != 0 )		438510	0					
ANR	439065	Condition	h < height && ( in = s [ 0 ] & shifted_mask ) != 0	211:28:7880:7924	438510	0	True				
ANR	439066	AndExpression	h < height && ( in = s [ 0 ] & shifted_mask ) != 0		438510	0		&&			
ANR	439067	RelationalExpression	h < height		438510	0		<			
ANR	439068	Identifier	h		438510	0					
ANR	439069	Identifier	height		438510	1					
ANR	439070	EqualityExpression	( in = s [ 0 ] & shifted_mask ) != 0		438510	1		!=			
ANR	439071	AssignmentExpression	in = s [ 0 ] & shifted_mask		438510	0		=			
ANR	439072	Identifier	in		438510	0					
ANR	439073	BitAndExpression	s [ 0 ] & shifted_mask		438510	1		&			
ANR	439074	ArrayIndexing	s [ 0 ]		438510	0					
ANR	439075	Identifier	s		438510	0					
ANR	439076	PrimaryExpression	0		438510	1					
ANR	439077	Identifier	shifted_mask		438510	1					
ANR	439078	PrimaryExpression	0		438510	1					
ANR	439079	CompoundStatement		112:28:4547:4557	438510	1					
ANR	439080	IdentifierDeclStatement	uint lower ;	212:28:7957:7967	438510	0	True				
ANR	439081	IdentifierDecl	lower		438510	0					
ANR	439082	IdentifierDeclType	uint		438510	0					
ANR	439083	Identifier	lower		438510	1					
ANR	439084	ForStatement	"for ( index = 0 , lower = 0 ; - ( index -= sraster ) <= sskip && ( in &= s [ index ] ) != 0 ; )"		438510	1					
ANR	439085	ForInit	"index = 0 , lower = 0 ;"	214:33:8003:8023	438510	0	True				
ANR	439086	Expression	"index = 0 , lower = 0"		438510	0					
ANR	439087	AssignmentExpression	index = 0		438510	0		=			
ANR	439088	Identifier	index		438510	0					
ANR	439089	PrimaryExpression	0		438510	1					
ANR	439090	AssignmentExpression	lower = 0		438510	1		=			
ANR	439091	Identifier	lower		438510	0					
ANR	439092	PrimaryExpression	0		438510	1					
ANR	439093	Condition	- ( index -= sraster ) <= sskip && ( in &= s [ index ] ) != 0	215:33:8058:8143	438510	1	True				
ANR	439094	AndExpression	- ( index -= sraster ) <= sskip && ( in &= s [ index ] ) != 0		438510	0		&&			
ANR	439095	RelationalExpression	- ( index -= sraster ) <= sskip		438510	0		<=			
ANR	439096	UnaryOperationExpression	- ( index -= sraster )		438510	0					
ANR	439097	UnaryOperator	-		438510	0					
ANR	439098	AssignmentExpression	index -= sraster		438510	1		-=			
ANR	439099	Identifier	index		438510	0					
ANR	439100	Identifier	sraster		438510	1					
ANR	439101	Identifier	sskip		438510	1					
ANR	439102	EqualityExpression	( in &= s [ index ] ) != 0		438510	1		!=			
ANR	439103	AssignmentExpression	in &= s [ index ]		438510	0		&=			
ANR	439104	Identifier	in		438510	0					
ANR	439105	ArrayIndexing	s [ index ]		438510	1					
ANR	439106	Identifier	s		438510	0					
ANR	439107	Identifier	index		438510	1					
ANR	439108	PrimaryExpression	0		438510	1					
ANR	439109	ExpressionStatement	lower += half_byte_1s [ in >> in_shift ]	218:32:8212:8249	438510	2	True				
ANR	439110	AssignmentExpression	lower += half_byte_1s [ in >> in_shift ]		438510	0		+=			
ANR	439111	Identifier	lower		438510	0					
ANR	439112	ArrayIndexing	half_byte_1s [ in >> in_shift ]		438510	1					
ANR	439113	Identifier	half_byte_1s		438510	0					
ANR	439114	ShiftExpression	in >> in_shift		438510	1		>>			
ANR	439115	Identifier	in		438510	0					
ANR	439116	Identifier	in_shift		438510	1					
ANR	439117	ExpressionStatement	"if_debug1 ( 'B' , ""[B]  lower adds %d\\n"" , lower )"	219:28:8279:8362	438510	2	True				
ANR	439118	CallExpression	"if_debug1 ( 'B' , ""[B]  lower adds %d\\n"" , lower )"		438510	0					
ANR	439119	Callee	if_debug1		438510	0					
ANR	439120	Identifier	if_debug1		438510	0					
ANR	439121	ArgumentList	'B'		438510	1					
ANR	439122	Argument	'B'		438510	0					
ANR	439123	PrimaryExpression	'B'		438510	0					
ANR	439124	Argument	"""[B]  lower adds %d\\n"""		438510	1					
ANR	439125	PrimaryExpression	"""[B]  lower adds %d\\n"""		438510	0					
ANR	439126	Argument	lower		438510	2					
ANR	439127	Identifier	lower		438510	0					
ANR	439128	IfStatement	if ( lower <= orig_count )		438510	3					
ANR	439129	Condition	lower <= orig_count	221:32:8396:8414	438510	0	True				
ANR	439130	RelationalExpression	lower <= orig_count		438510	0		<=			
ANR	439131	Identifier	lower		438510	0					
ANR	439132	Identifier	orig_count		438510	1					
ANR	439133	ExpressionStatement	count += lower	222:32:8449:8463	438510	1	True				
ANR	439134	AssignmentExpression	count += lower		438510	0		+=			
ANR	439135	Identifier	count		438510	0					
ANR	439136	Identifier	lower		438510	1					
ANR	439137	IfStatement	if ( h > yscale && ( in = s [ sskip - sraster ] & shifted_mask ) != 0 )		438510	1					
ANR	439138	Condition	h > yscale && ( in = s [ sskip - sraster ] & shifted_mask ) != 0	225:28:8581:8639	438510	0	True				
ANR	439139	AndExpression	h > yscale && ( in = s [ sskip - sraster ] & shifted_mask ) != 0		438510	0		&&			
ANR	439140	RelationalExpression	h > yscale		438510	0		>			
ANR	439141	Identifier	h		438510	0					
ANR	439142	Identifier	yscale		438510	1					
ANR	439143	EqualityExpression	( in = s [ sskip - sraster ] & shifted_mask ) != 0		438510	1		!=			
ANR	439144	AssignmentExpression	in = s [ sskip - sraster ] & shifted_mask		438510	0		=			
ANR	439145	Identifier	in		438510	0					
ANR	439146	BitAndExpression	s [ sskip - sraster ] & shifted_mask		438510	1		&			
ANR	439147	ArrayIndexing	s [ sskip - sraster ]		438510	0					
ANR	439148	Identifier	s		438510	0					
ANR	439149	AdditiveExpression	sskip - sraster		438510	1		-			
ANR	439150	Identifier	sskip		438510	0					
ANR	439151	Identifier	sraster		438510	1					
ANR	439152	Identifier	shifted_mask		438510	1					
ANR	439153	PrimaryExpression	0		438510	1					
ANR	439154	CompoundStatement		126:28:5262:5272	438510	1					
ANR	439155	IdentifierDeclStatement	uint upper ;	226:28:8672:8682	438510	0	True				
ANR	439156	IdentifierDecl	upper		438510	0					
ANR	439157	IdentifierDeclType	uint		438510	0					
ANR	439158	Identifier	upper		438510	1					
ANR	439159	ForStatement	"for ( index = sskip , upper = 0 ; index < sskip << 1 && ( in &= s [ index ] ) != 0 ; index += sraster )"		438510	1					
ANR	439160	ForInit	"index = sskip , upper = 0 ;"	228:33:8718:8742	438510	0	True				
ANR	439161	Expression	"index = sskip , upper = 0"		438510	0					
ANR	439162	AssignmentExpression	index = sskip		438510	0		=			
ANR	439163	Identifier	index		438510	0					
ANR	439164	Identifier	sskip		438510	1					
ANR	439165	AssignmentExpression	upper = 0		438510	1		=			
ANR	439166	Identifier	upper		438510	0					
ANR	439167	PrimaryExpression	0		438510	1					
ANR	439168	Condition	index < sskip << 1 && ( in &= s [ index ] ) != 0	229:33:8777:8852	438510	1	True				
ANR	439169	AndExpression	index < sskip << 1 && ( in &= s [ index ] ) != 0		438510	0		&&			
ANR	439170	RelationalExpression	index < sskip << 1		438510	0		<			
ANR	439171	Identifier	index		438510	0					
ANR	439172	ShiftExpression	sskip << 1		438510	1		<<			
ANR	439173	Identifier	sskip		438510	0					
ANR	439174	PrimaryExpression	1		438510	1					
ANR	439175	EqualityExpression	( in &= s [ index ] ) != 0		438510	1		!=			
ANR	439176	AssignmentExpression	in &= s [ index ]		438510	0		&=			
ANR	439177	Identifier	in		438510	0					
ANR	439178	ArrayIndexing	s [ index ]		438510	1					
ANR	439179	Identifier	s		438510	0					
ANR	439180	Identifier	index		438510	1					
ANR	439181	PrimaryExpression	0		438510	1					
ANR	439182	AssignmentExpression	index += sraster	231:33:8888:8903	438510	2	True	+=			
ANR	439183	Identifier	index		438510	0					
ANR	439184	Identifier	sraster		438510	1					
ANR	439185	ExpressionStatement	upper += half_byte_1s [ in >> in_shift ]	233:32:8971:9008	438510	3	True				
ANR	439186	AssignmentExpression	upper += half_byte_1s [ in >> in_shift ]		438510	0		+=			
ANR	439187	Identifier	upper		438510	0					
ANR	439188	ArrayIndexing	half_byte_1s [ in >> in_shift ]		438510	1					
ANR	439189	Identifier	half_byte_1s		438510	0					
ANR	439190	ShiftExpression	in >> in_shift		438510	1		>>			
ANR	439191	Identifier	in		438510	0					
ANR	439192	Identifier	in_shift		438510	1					
ANR	439193	ExpressionStatement	"if_debug1 ( 'B' , ""[B]  upper adds %d\\n"" , upper )"	234:28:9038:9121	438510	2	True				
ANR	439194	CallExpression	"if_debug1 ( 'B' , ""[B]  upper adds %d\\n"" , upper )"		438510	0					
ANR	439195	Callee	if_debug1		438510	0					
ANR	439196	Identifier	if_debug1		438510	0					
ANR	439197	ArgumentList	'B'		438510	1					
ANR	439198	Argument	'B'		438510	0					
ANR	439199	PrimaryExpression	'B'		438510	0					
ANR	439200	Argument	"""[B]  upper adds %d\\n"""		438510	1					
ANR	439201	PrimaryExpression	"""[B]  upper adds %d\\n"""		438510	0					
ANR	439202	Argument	upper		438510	2					
ANR	439203	Identifier	upper		438510	0					
ANR	439204	IfStatement	if ( upper < orig_count )		438510	3					
ANR	439205	Condition	upper < orig_count	236:32:9155:9172	438510	0	True				
ANR	439206	RelationalExpression	upper < orig_count		438510	0		<			
ANR	439207	Identifier	upper		438510	0					
ANR	439208	Identifier	orig_count		438510	1					
ANR	439209	ExpressionStatement	count += upper	237:32:9207:9221	438510	1	True				
ANR	439210	AssignmentExpression	count += upper		438510	0		+=			
ANR	439211	Identifier	count		438510	0					
ANR	439212	Identifier	upper		438510	1					
ANR	439213	IfStatement	if ( xscale > 1 )		438510	5					
ANR	439214	Condition	xscale > 1	240:24:9295:9304	438510	0	True				
ANR	439215	RelationalExpression	xscale > 1		438510	0		>			
ANR	439216	Identifier	xscale		438510	0					
ANR	439217	PrimaryExpression	1		438510	1					
ANR	439218	CompoundStatement		141:24:5923:5951	438510	1					
ANR	439219	IdentifierDeclStatement	uint mask1 = ( mask << 1 ) + 1 ;	241:24:9333:9361	438510	0	True				
ANR	439220	IdentifierDecl	mask1 = ( mask << 1 ) + 1		438510	0					
ANR	439221	IdentifierDeclType	uint		438510	0					
ANR	439222	Identifier	mask1		438510	1					
ANR	439223	AssignmentExpression	mask1 = ( mask << 1 ) + 1		438510	2		=			
ANR	439224	Identifier	mask1		438510	0					
ANR	439225	AdditiveExpression	( mask << 1 ) + 1		438510	1		+			
ANR	439226	ShiftExpression	mask << 1		438510	0		<<			
ANR	439227	Identifier	mask		438510	0					
ANR	439228	PrimaryExpression	1		438510	1					
ANR	439229	PrimaryExpression	1		438510	1					
ANR	439230	IfStatement	if ( w < width )		438510	1					
ANR	439231	Condition	w < width	244:28:9457:9465	438510	0	True				
ANR	439232	RelationalExpression	w < width		438510	0		<			
ANR	439233	Identifier	w		438510	0					
ANR	439234	Identifier	width		438510	1					
ANR	439235	CompoundStatement		146:28:6152:6161	438510	1					
ANR	439236	IdentifierDeclStatement	int lshift = in_shift + xscale - 1 ;	245:28:9498:9532	438510	0	True				
ANR	439237	IdentifierDecl	lshift = in_shift + xscale - 1		438510	0					
ANR	439238	IdentifierDeclType	int		438510	0					
ANR	439239	Identifier	lshift		438510	1					
ANR	439240	AssignmentExpression	lshift = in_shift + xscale - 1		438510	2		=			
ANR	439241	Identifier	lshift		438510	0					
ANR	439242	AdditiveExpression	in_shift + xscale - 1		438510	1		+			
ANR	439243	Identifier	in_shift		438510	0					
ANR	439244	AdditiveExpression	xscale - 1		438510	1		-			
ANR	439245	Identifier	xscale		438510	0					
ANR	439246	PrimaryExpression	1		438510	1					
ANR	439247	IdentifierDeclStatement	uint left ;	246:28:9562:9571	438510	1	True				
ANR	439248	IdentifierDecl	left		438510	0					
ANR	439249	IdentifierDeclType	uint		438510	0					
ANR	439250	Identifier	left		438510	1					
ANR	439251	ForStatement	"for ( index = 0 , left = 0 ; index < sskip ; index += sraster )"		438510	2					
ANR	439252	ForInit	"index = 0 , left = 0 ;"	248:33:9607:9626	438510	0	True				
ANR	439253	Expression	"index = 0 , left = 0"		438510	0					
ANR	439254	AssignmentExpression	index = 0		438510	0		=			
ANR	439255	Identifier	index		438510	0					
ANR	439256	PrimaryExpression	0		438510	1					
ANR	439257	AssignmentExpression	left = 0		438510	1		=			
ANR	439258	Identifier	left		438510	0					
ANR	439259	PrimaryExpression	0		438510	1					
ANR	439260	Condition	index < sskip	249:33:9661:9673	438510	1	True				
ANR	439261	RelationalExpression	index < sskip		438510	0		<			
ANR	439262	Identifier	index		438510	0					
ANR	439263	Identifier	sskip		438510	1					
ANR	439264	AssignmentExpression	index += sraster	249:48:9676:9691	438510	2	True	+=			
ANR	439265	Identifier	index		438510	0					
ANR	439266	Identifier	sraster		438510	1					
ANR	439267	CompoundStatement		151:32:6351:6470	438510	3					
ANR	439268	IdentifierDeclStatement	uint bits = ( ( s [ index - 1 ] << 8 ) + s [ index ] ) >> lshift ;	251:32:9761:9880	438510	0	True				
ANR	439269	IdentifierDecl	bits = ( ( s [ index - 1 ] << 8 ) + s [ index ] ) >> lshift		438510	0					
ANR	439270	IdentifierDeclType	uint		438510	0					
ANR	439271	Identifier	bits		438510	1					
ANR	439272	AssignmentExpression	bits = ( ( s [ index - 1 ] << 8 ) + s [ index ] ) >> lshift		438510	2		=			
ANR	439273	Identifier	bits		438510	0					
ANR	439274	ShiftExpression	( ( s [ index - 1 ] << 8 ) + s [ index ] ) >> lshift		438510	1		>>			
ANR	439275	AdditiveExpression	( s [ index - 1 ] << 8 ) + s [ index ]		438510	0		+			
ANR	439276	ShiftExpression	s [ index - 1 ] << 8		438510	0		<<			
ANR	439277	ArrayIndexing	s [ index - 1 ]		438510	0					
ANR	439278	Identifier	s		438510	0					
ANR	439279	AdditiveExpression	index - 1		438510	1		-			
ANR	439280	Identifier	index		438510	0					
ANR	439281	PrimaryExpression	1		438510	1					
ANR	439282	PrimaryExpression	8		438510	1					
ANR	439283	ArrayIndexing	s [ index ]		438510	1					
ANR	439284	Identifier	s		438510	0					
ANR	439285	Identifier	index		438510	1					
ANR	439286	Identifier	lshift		438510	1					
ANR	439287	ExpressionStatement	left += bits5_trailing_1s [ bits & mask1 ]	255:32:9915:9954	438510	1	True				
ANR	439288	AssignmentExpression	left += bits5_trailing_1s [ bits & mask1 ]		438510	0		+=			
ANR	439289	Identifier	left		438510	0					
ANR	439290	ArrayIndexing	bits5_trailing_1s [ bits & mask1 ]		438510	1					
ANR	439291	Identifier	bits5_trailing_1s		438510	0					
ANR	439292	BitAndExpression	bits & mask1		438510	1		&			
ANR	439293	Identifier	bits		438510	0					
ANR	439294	Identifier	mask1		438510	1					
ANR	439295	ExpressionStatement	"if_debug1 ( 'B' , ""[B]  left adds %d\\n"" , left )"	257:28:10014:10095	438510	3	True				
ANR	439296	CallExpression	"if_debug1 ( 'B' , ""[B]  left adds %d\\n"" , left )"		438510	0					
ANR	439297	Callee	if_debug1		438510	0					
ANR	439298	Identifier	if_debug1		438510	0					
ANR	439299	ArgumentList	'B'		438510	1					
ANR	439300	Argument	'B'		438510	0					
ANR	439301	PrimaryExpression	'B'		438510	0					
ANR	439302	Argument	"""[B]  left adds %d\\n"""		438510	1					
ANR	439303	PrimaryExpression	"""[B]  left adds %d\\n"""		438510	0					
ANR	439304	Argument	left		438510	2					
ANR	439305	Identifier	left		438510	0					
ANR	439306	IfStatement	if ( left < orig_count )		438510	4					
ANR	439307	Condition	left < orig_count	259:32:10129:10145	438510	0	True				
ANR	439308	RelationalExpression	left < orig_count		438510	0		<			
ANR	439309	Identifier	left		438510	0					
ANR	439310	Identifier	orig_count		438510	1					
ANR	439311	ExpressionStatement	count += left	260:32:10180:10193	438510	1	True				
ANR	439312	AssignmentExpression	count += left		438510	0		+=			
ANR	439313	Identifier	count		438510	0					
ANR	439314	Identifier	left		438510	1					
ANR	439315	IfStatement	if ( w > xscale )		438510	2					
ANR	439316	Condition	w > xscale	263:28:10315:10324	438510	0	True				
ANR	439317	RelationalExpression	w > xscale		438510	0		>			
ANR	439318	Identifier	w		438510	0					
ANR	439319	Identifier	xscale		438510	1					
ANR	439320	CompoundStatement		165:28:7011:7021	438510	1					
ANR	439321	IdentifierDeclStatement	int rshift = in_shift - xscale + 8 ;	264:28:10357:10391	438510	0	True				
ANR	439322	IdentifierDecl	rshift = in_shift - xscale + 8		438510	0					
ANR	439323	IdentifierDeclType	int		438510	0					
ANR	439324	Identifier	rshift		438510	1					
ANR	439325	AssignmentExpression	rshift = in_shift - xscale + 8		438510	2		=			
ANR	439326	Identifier	rshift		438510	0					
ANR	439327	AdditiveExpression	in_shift - xscale + 8		438510	1		-			
ANR	439328	Identifier	in_shift		438510	0					
ANR	439329	AdditiveExpression	xscale + 8		438510	1		+			
ANR	439330	Identifier	xscale		438510	0					
ANR	439331	PrimaryExpression	8		438510	1					
ANR	439332	IdentifierDeclStatement	uint right ;	265:28:10421:10431	438510	1	True				
ANR	439333	IdentifierDecl	right		438510	0					
ANR	439334	IdentifierDeclType	uint		438510	0					
ANR	439335	Identifier	right		438510	1					
ANR	439336	ForStatement	"for ( index = 0 , right = 0 ; index < sskip ; index += sraster )"		438510	2					
ANR	439337	ForInit	"index = 0 , right = 0 ;"	267:33:10467:10487	438510	0	True				
ANR	439338	Expression	"index = 0 , right = 0"		438510	0					
ANR	439339	AssignmentExpression	index = 0		438510	0		=			
ANR	439340	Identifier	index		438510	0					
ANR	439341	PrimaryExpression	0		438510	1					
ANR	439342	AssignmentExpression	right = 0		438510	1		=			
ANR	439343	Identifier	right		438510	0					
ANR	439344	PrimaryExpression	0		438510	1					
ANR	439345	Condition	index < sskip	268:33:10522:10534	438510	1	True				
ANR	439346	RelationalExpression	index < sskip		438510	0		<			
ANR	439347	Identifier	index		438510	0					
ANR	439348	Identifier	sskip		438510	1					
ANR	439349	AssignmentExpression	index += sraster	268:48:10537:10552	438510	2	True	+=			
ANR	439350	Identifier	index		438510	0					
ANR	439351	Identifier	sraster		438510	1					
ANR	439352	CompoundStatement		170:32:7212:7331	438510	3					
ANR	439353	IdentifierDeclStatement	uint bits = ( ( s [ index ] << 8 ) + s [ index + 1 ] ) >> rshift ;	270:32:10622:10741	438510	0	True				
ANR	439354	IdentifierDecl	bits = ( ( s [ index ] << 8 ) + s [ index + 1 ] ) >> rshift		438510	0					
ANR	439355	IdentifierDeclType	uint		438510	0					
ANR	439356	Identifier	bits		438510	1					
ANR	439357	AssignmentExpression	bits = ( ( s [ index ] << 8 ) + s [ index + 1 ] ) >> rshift		438510	2		=			
ANR	439358	Identifier	bits		438510	0					
ANR	439359	ShiftExpression	( ( s [ index ] << 8 ) + s [ index + 1 ] ) >> rshift		438510	1		>>			
ANR	439360	AdditiveExpression	( s [ index ] << 8 ) + s [ index + 1 ]		438510	0		+			
ANR	439361	ShiftExpression	s [ index ] << 8		438510	0		<<			
ANR	439362	ArrayIndexing	s [ index ]		438510	0					
ANR	439363	Identifier	s		438510	0					
ANR	439364	Identifier	index		438510	1					
ANR	439365	PrimaryExpression	8		438510	1					
ANR	439366	ArrayIndexing	s [ index + 1 ]		438510	1					
ANR	439367	Identifier	s		438510	0					
ANR	439368	AdditiveExpression	index + 1		438510	1		+			
ANR	439369	Identifier	index		438510	0					
ANR	439370	PrimaryExpression	1		438510	1					
ANR	439371	Identifier	rshift		438510	1					
ANR	439372	ExpressionStatement	right += bits5_leading_1s [ ( bits & mask1 ) << ( 4 - xscale ) ]	274:32:10776:10833	438510	1	True				
ANR	439373	AssignmentExpression	right += bits5_leading_1s [ ( bits & mask1 ) << ( 4 - xscale ) ]		438510	0		+=			
ANR	439374	Identifier	right		438510	0					
ANR	439375	ArrayIndexing	bits5_leading_1s [ ( bits & mask1 ) << ( 4 - xscale ) ]		438510	1					
ANR	439376	Identifier	bits5_leading_1s		438510	0					
ANR	439377	ShiftExpression	( bits & mask1 ) << ( 4 - xscale )		438510	1		<<			
ANR	439378	BitAndExpression	bits & mask1		438510	0		&			
ANR	439379	Identifier	bits		438510	0					
ANR	439380	Identifier	mask1		438510	1					
ANR	439381	AdditiveExpression	4 - xscale		438510	1		-			
ANR	439382	PrimaryExpression	4		438510	0					
ANR	439383	Identifier	xscale		438510	1					
ANR	439384	ExpressionStatement	"if_debug1 ( 'B' , ""[B]  right adds %d\\n"" , right )"	276:28:10893:10976	438510	3	True				
ANR	439385	CallExpression	"if_debug1 ( 'B' , ""[B]  right adds %d\\n"" , right )"		438510	0					
ANR	439386	Callee	if_debug1		438510	0					
ANR	439387	Identifier	if_debug1		438510	0					
ANR	439388	ArgumentList	'B'		438510	1					
ANR	439389	Argument	'B'		438510	0					
ANR	439390	PrimaryExpression	'B'		438510	0					
ANR	439391	Argument	"""[B]  right adds %d\\n"""		438510	1					
ANR	439392	PrimaryExpression	"""[B]  right adds %d\\n"""		438510	0					
ANR	439393	Argument	right		438510	2					
ANR	439394	Identifier	right		438510	0					
ANR	439395	IfStatement	if ( right <= orig_count )		438510	4					
ANR	439396	Condition	right <= orig_count	278:32:11010:11028	438510	0	True				
ANR	439397	RelationalExpression	right <= orig_count		438510	0		<=			
ANR	439398	Identifier	right		438510	0					
ANR	439399	Identifier	orig_count		438510	1					
ANR	439400	ExpressionStatement	count += right	279:32:11063:11077	438510	1	True				
ANR	439401	AssignmentExpression	count += right		438510	0		+=			
ANR	439402	Identifier	count		438510	0					
ANR	439403	Identifier	right		438510	1					
ANR	439404	IfStatement	if ( count > count_max )		438510	6					
ANR	439405	Condition	count > count_max	282:24:11151:11167	438510	0	True				
ANR	439406	RelationalExpression	count > count_max		438510	0		>			
ANR	439407	Identifier	count		438510	0					
ANR	439408	Identifier	count_max		438510	1					
ANR	439409	ExpressionStatement	count = count_max	283:24:11194:11211	438510	1	True				
ANR	439410	AssignmentExpression	count = count_max		438510	0		=			
ANR	439411	Identifier	count		438510	0					
ANR	439412	Identifier	count_max		438510	1					
ANR	439413	ExpressionStatement	out += table [ count ] << out_shift	285:16:11247:11279	438510	3	True				
ANR	439414	AssignmentExpression	out += table [ count ] << out_shift		438510	0		+=			
ANR	439415	Identifier	out		438510	0					
ANR	439416	ShiftExpression	table [ count ] << out_shift		438510	1		<<			
ANR	439417	ArrayIndexing	table [ count ]		438510	0					
ANR	439418	Identifier	table		438510	0					
ANR	439419	Identifier	count		438510	1					
ANR	439420	Identifier	out_shift		438510	1					
ANR	439421	IfStatement	"if ( out_shift_update ( out_shift , out_bits ) )"		438510	4					
ANR	439422	Condition	"out_shift_update ( out_shift , out_bits )"	286:20:11301:11337	438510	0	True				
ANR	439423	CallExpression	"out_shift_update ( out_shift , out_bits )"		438510	0					
ANR	439424	Callee	out_shift_update		438510	0					
ANR	439425	Identifier	out_shift_update		438510	0					
ANR	439426	ArgumentList	out_shift		438510	1					
ANR	439427	Argument	out_shift		438510	0					
ANR	439428	Identifier	out_shift		438510	0					
ANR	439429	Argument	out_bits		438510	1					
ANR	439430	Identifier	out_bits		438510	0					
ANR	439431	ExpressionStatement	"* d ++ = out , out_shift &= 7 , out = 0"	287:20:11360:11395	438510	1	True				
ANR	439432	Expression	"* d ++ = out , out_shift &= 7 , out = 0"		438510	0					
ANR	439433	AssignmentExpression	* d ++ = out		438510	0		=			
ANR	439434	UnaryOperationExpression	* d ++		438510	0					
ANR	439435	UnaryOperator	*		438510	0					
ANR	439436	PostIncDecOperationExpression	d ++		438510	1					
ANR	439437	Identifier	d		438510	0					
ANR	439438	IncDec	++		438510	1					
ANR	439439	Identifier	out		438510	1					
ANR	439440	Expression	"out_shift &= 7 , out = 0"		438510	1					
ANR	439441	AssignmentExpression	out_shift &= 7		438510	0		&=			
ANR	439442	Identifier	out_shift		438510	0					
ANR	439443	PrimaryExpression	7		438510	1					
ANR	439444	AssignmentExpression	out = 0		438510	1		=			
ANR	439445	Identifier	out		438510	0					
ANR	439446	PrimaryExpression	0		438510	1					
ANR	439447	Condition	( in_shift -= xscale ) >= in_shift_final	289:19:11430:11467	438510	1	True				
ANR	439448	RelationalExpression	( in_shift -= xscale ) >= in_shift_final		438510	0		>=			
ANR	439449	AssignmentExpression	in_shift -= xscale		438510	0		-=			
ANR	439450	Identifier	in_shift		438510	0					
ANR	439451	Identifier	xscale		438510	1					
ANR	439452	Identifier	in_shift_final		438510	1					
ANR	439453	ExpressionStatement	"s ++ , in_shift += 8"	290:12:11483:11501	438510	5	True				
ANR	439454	Expression	"s ++ , in_shift += 8"		438510	0					
ANR	439455	PostIncDecOperationExpression	s ++		438510	0					
ANR	439456	Identifier	s		438510	0					
ANR	439457	IncDec	++		438510	1					
ANR	439458	AssignmentExpression	in_shift += 8		438510	1		+=			
ANR	439459	Identifier	in_shift		438510	0					
ANR	439460	PrimaryExpression	8		438510	1					
ANR	439461	IfStatement	if ( out_shift != out_shift_initial )		438510	28					
ANR	439462	Condition	out_shift != out_shift_initial	292:12:11525:11554	438510	0	True				
ANR	439463	EqualityExpression	out_shift != out_shift_initial		438510	0		!=			
ANR	439464	Identifier	out_shift		438510	0					
ANR	439465	Identifier	out_shift_initial		438510	1					
ANR	439466	ExpressionStatement	* d ++ = out	293:12:11569:11579	438510	1	True				
ANR	439467	AssignmentExpression	* d ++ = out		438510	0		=			
ANR	439468	UnaryOperationExpression	* d ++		438510	0					
ANR	439469	UnaryOperator	*		438510	0					
ANR	439470	PostIncDecOperationExpression	d ++		438510	1					
ANR	439471	Identifier	d		438510	0					
ANR	439472	IncDec	++		438510	1					
ANR	439473	Identifier	out		438510	1					
ANR	439474	ForStatement	for ( w = dskip ; w != 0 ; w -- )		438510	29					
ANR	439475	ForInit	w = dskip ;	294:13:11594:11603	438510	0	True				
ANR	439476	AssignmentExpression	w = dskip		438510	0		=			
ANR	439477	Identifier	w		438510	0					
ANR	439478	Identifier	dskip		438510	1					
ANR	439479	Condition	w != 0	294:24:11605:11610	438510	1	True				
ANR	439480	EqualityExpression	w != 0		438510	0		!=			
ANR	439481	Identifier	w		438510	0					
ANR	439482	PrimaryExpression	0		438510	1					
ANR	439483	PostIncDecOperationExpression	w --	294:32:11613:11615	438510	2	True				
ANR	439484	Identifier	w		438510	0					
ANR	439485	IncDec	--		438510	1					
ANR	439486	ExpressionStatement	* d ++ = 0	295:12:11630:11638	438510	3	True				
ANR	439487	AssignmentExpression	* d ++ = 0		438510	0		=			
ANR	439488	UnaryOperationExpression	* d ++		438510	0					
ANR	439489	UnaryOperator	*		438510	0					
ANR	439490	PostIncDecOperationExpression	d ++		438510	1					
ANR	439491	Identifier	d		438510	0					
ANR	439492	IncDec	++		438510	1					
ANR	439493	PrimaryExpression	0		438510	1					
ANR	439494	Statement	undef	296:1:11641:11645	438510	30	True				
ANR	439495	Statement	out_shift_initial	296:7:11647:11663	438510	31	True				
ANR	439496	Statement	undef	297:1:11666:11670	438510	32	True				
ANR	439497	Statement	out_shift_update	297:7:11672:11687	438510	33	True				
ANR	439498	ReturnType	void		438510	1					
ANR	439499	Identifier	bits_compress_scaled		438510	2					
ANR	439500	ParameterList	"const byte * src , int srcx , uint width , uint height , uint sraster , byte * dest , uint draster , const gs_log2_scale_point * plog2_scale , int log2_out_bits"		438510	3					
ANR	439501	Parameter	const byte * src	98:21:3214:3229	438510	0	True				
ANR	439502	ParameterType	const byte *		438510	0					
ANR	439503	Identifier	src		438510	1					
ANR	439504	Parameter	int srcx	98:39:3232:3239	438510	1	True				
ANR	439505	ParameterType	int		438510	0					
ANR	439506	Identifier	srcx		438510	1					
ANR	439507	Parameter	uint width	98:49:3242:3251	438510	2	True				
ANR	439508	ParameterType	uint		438510	0					
ANR	439509	Identifier	width		438510	1					
ANR	439510	Parameter	uint height	98:61:3254:3264	438510	3	True				
ANR	439511	ParameterType	uint		438510	0					
ANR	439512	Identifier	height		438510	1					
ANR	439513	Parameter	uint sraster	99:21:3288:3299	438510	4	True				
ANR	439514	ParameterType	uint		438510	0					
ANR	439515	Identifier	sraster		438510	1					
ANR	439516	Parameter	byte * dest	99:35:3302:3312	438510	5	True				
ANR	439517	ParameterType	byte *		438510	0					
ANR	439518	Identifier	dest		438510	1					
ANR	439519	Parameter	uint draster	99:48:3315:3326	438510	6	True				
ANR	439520	ParameterType	uint		438510	0					
ANR	439521	Identifier	draster		438510	1					
ANR	439522	Parameter	const gs_log2_scale_point * plog2_scale	100:21:3350:3387	438510	7	True				
ANR	439523	ParameterType	const gs_log2_scale_point *		438510	0					
ANR	439524	Identifier	plog2_scale		438510	1					
ANR	439525	Parameter	int log2_out_bits	100:61:3390:3406	438510	8	True				
ANR	439526	ParameterType	int		438510	0					
ANR	439527	Identifier	log2_out_bits		438510	1					
ANR	439528	CFGEntryNode	ENTRY		438510		True				
ANR	439529	CFGExitNode	EXIT		438510		True				
ANR	439530	Symbol	dwidth		438510						
ANR	439531	Symbol	out_shift_initial		438510						
ANR	439532	Symbol	in_shift		438510						
ANR	439533	Symbol	* mask		438510						
ANR	439534	Symbol	orig_count		438510						
ANR	439535	Symbol	* * log2_out_bits		438510						
ANR	439536	Symbol	* index		438510						
ANR	439537	Symbol	shift		438510						
ANR	439538	Symbol	upper		438510						
ANR	439539	Symbol	* xscale		438510						
ANR	439540	Symbol	dest		438510						
ANR	439541	Symbol	yscale		438510						
ANR	439542	Symbol	plog2_scale -> x		438510						
ANR	439543	Symbol	plog2_scale -> y		438510						
ANR	439544	Symbol	* count		438510						
ANR	439545	Symbol	dw		438510						
ANR	439546	Symbol	in_shift_final		438510						
ANR	439547	Symbol	* sskip		438510						
ANR	439548	Symbol	* * compress_tables		438510						
ANR	439549	Symbol	xscale		438510						
ANR	439550	Symbol	* in_shift		438510						
ANR	439551	Symbol	height		438510						
ANR	439552	Symbol	* bits		438510						
ANR	439553	Symbol	srcx		438510						
ANR	439554	Symbol	count_max		438510						
ANR	439555	Symbol	in		438510						
ANR	439556	Symbol	lower		438510						
ANR	439557	Symbol	count		438510						
ANR	439558	Symbol	bits		438510						
ANR	439559	Symbol	index		438510						
ANR	439560	Symbol	* table		438510						
ANR	439561	Symbol	* plog2_scale		438510						
ANR	439562	Symbol	srow		438510						
ANR	439563	Symbol	sraster		438510						
ANR	439564	Symbol	left		438510						
ANR	439565	Symbol	bits5_trailing_1s		438510						
ANR	439566	Symbol	* half_byte_1s		438510						
ANR	439567	Symbol	half_byte_1s		438510						
ANR	439568	Symbol	out_shift_update		438510						
ANR	439569	Symbol	* mask1		438510						
ANR	439570	Symbol	shifted_mask		438510						
ANR	439571	Symbol	compress_tables		438510						
ANR	439572	Symbol	lshift		438510						
ANR	439573	Symbol	* in		438510						
ANR	439574	Symbol	log2_out_bits		438510						
ANR	439575	Symbol	* d ++		438510						
ANR	439576	Symbol	plog2_scale		438510						
ANR	439577	Symbol	out		438510						
ANR	439578	Symbol	* bits5_trailing_1s		438510						
ANR	439579	Symbol	* log2_y		438510						
ANR	439580	Symbol	* log2_x		438510						
ANR	439581	Symbol	* compress_tables		438510						
ANR	439582	Symbol	dskip		438510						
ANR	439583	Symbol	* * s		438510						
ANR	439584	Symbol	in_shift_initial		438510						
ANR	439585	Symbol	out_shift		438510						
ANR	439586	Symbol	* sraster		438510						
ANR	439587	Symbol	* * index		438510						
ANR	439588	Symbol	rshift		438510						
ANR	439589	Symbol	table		438510						
ANR	439590	Symbol	mask		438510						
ANR	439591	Symbol	out_bits		438510						
ANR	439592	Symbol	d		438510						
ANR	439593	Symbol	src		438510						
ANR	439594	Symbol	draster		438510						
ANR	439595	Symbol	input_byte_out_bits		438510						
ANR	439596	Symbol	h		438510						
ANR	439597	Symbol	mask1		438510						
ANR	439598	Symbol	* bits5_leading_1s		438510						
ANR	439599	Symbol	right		438510						
ANR	439600	Symbol	in_shift_check		438510						
ANR	439601	Symbol	* log2_out_bits		438510						
ANR	439602	Symbol	log2_x		438510						
ANR	439603	Symbol	s		438510						
ANR	439604	Symbol	bits5_leading_1s		438510						
ANR	439605	Symbol	w		438510						
ANR	439606	Symbol	width		438510						
ANR	439607	Symbol	sskip		438510						
ANR	439608	Symbol	* s		438510						
ANR	439609	Symbol	input_byte_out_mask		438510						
ANR	439610	Symbol	log2_y		438510						
