command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1095359	File	data/converged/CVE-2018-16863_ghostpdl/base_gxht_thresh.c								
ANR	1095360	DeclStmt									
ANR	1095361	Decl							const byte	const byte [ ]	bitreverse
ANR	1095362	Function	gx_ht_threshold_row_byte	78:0:3127:3910							
ANR	1095363	FunctionDef	"gx_ht_threshold_row_byte (byte * contone , byte * threshold_strip , int contone_stride , byte * halftone , int dithered_stride , int width , int num_rows)"		1095362	0					
ANR	1095364	CompoundStatement		82:0:3337:3910	1095362	0					
ANR	1095365	IdentifierDeclStatement	"int k , j ;"	83:4:3343:3351	1095362	0	True				
ANR	1095366	IdentifierDecl	k		1095362	0					
ANR	1095367	IdentifierDeclType	int		1095362	0					
ANR	1095368	Identifier	k		1095362	1					
ANR	1095369	IdentifierDecl	j		1095362	1					
ANR	1095370	IdentifierDeclType	int		1095362	0					
ANR	1095371	Identifier	j		1095362	1					
ANR	1095372	IdentifierDeclStatement	byte * contone_ptr ;	84:4:3357:3374	1095362	1	True				
ANR	1095373	IdentifierDecl	* contone_ptr		1095362	0					
ANR	1095374	IdentifierDeclType	byte *		1095362	0					
ANR	1095375	Identifier	contone_ptr		1095362	1					
ANR	1095376	IdentifierDeclStatement	byte * thresh_ptr ;	85:4:3380:3396	1095362	2	True				
ANR	1095377	IdentifierDecl	* thresh_ptr		1095362	0					
ANR	1095378	IdentifierDeclType	byte *		1095362	0					
ANR	1095379	Identifier	thresh_ptr		1095362	1					
ANR	1095380	IdentifierDeclStatement	byte * halftone_ptr ;	86:4:3402:3420	1095362	3	True				
ANR	1095381	IdentifierDecl	* halftone_ptr		1095362	0					
ANR	1095382	IdentifierDeclType	byte *		1095362	0					
ANR	1095383	Identifier	halftone_ptr		1095362	1					
ANR	1095384	ForStatement	for ( j = 0 ; j < num_rows ; j ++ )		1095362	4					
ANR	1095385	ForInit	j = 0 ;	90:9:3522:3527	1095362	0	True				
ANR	1095386	AssignmentExpression	j = 0		1095362	0		=			
ANR	1095387	Identifier	j		1095362	0					
ANR	1095388	PrimaryExpression	0		1095362	1					
ANR	1095389	Condition	j < num_rows	90:16:3529:3540	1095362	1	True				
ANR	1095390	RelationalExpression	j < num_rows		1095362	0		<			
ANR	1095391	Identifier	j		1095362	0					
ANR	1095392	Identifier	num_rows		1095362	1					
ANR	1095393	PostIncDecOperationExpression	j ++	90:30:3543:3545	1095362	2	True				
ANR	1095394	Identifier	j		1095362	0					
ANR	1095395	IncDec	++		1095362	1					
ANR	1095396	CompoundStatement		9:35:210:210	1095362	3					
ANR	1095397	ExpressionStatement	contone_ptr = contone	91:8:3558:3579	1095362	0	True				
ANR	1095398	AssignmentExpression	contone_ptr = contone		1095362	0		=			
ANR	1095399	Identifier	contone_ptr		1095362	0					
ANR	1095400	Identifier	contone		1095362	1					
ANR	1095401	ExpressionStatement	thresh_ptr = threshold_strip + contone_stride * j	92:8:3589:3638	1095362	1	True				
ANR	1095402	AssignmentExpression	thresh_ptr = threshold_strip + contone_stride * j		1095362	0		=			
ANR	1095403	Identifier	thresh_ptr		1095362	0					
ANR	1095404	AdditiveExpression	threshold_strip + contone_stride * j		1095362	1		+			
ANR	1095405	Identifier	threshold_strip		1095362	0					
ANR	1095406	MultiplicativeExpression	contone_stride * j		1095362	1		*			
ANR	1095407	Identifier	contone_stride		1095362	0					
ANR	1095408	Identifier	j		1095362	1					
ANR	1095409	ExpressionStatement	halftone_ptr = halftone + dithered_stride * j	93:8:3648:3693	1095362	2	True				
ANR	1095410	AssignmentExpression	halftone_ptr = halftone + dithered_stride * j		1095362	0		=			
ANR	1095411	Identifier	halftone_ptr		1095362	0					
ANR	1095412	AdditiveExpression	halftone + dithered_stride * j		1095362	1		+			
ANR	1095413	Identifier	halftone		1095362	0					
ANR	1095414	MultiplicativeExpression	dithered_stride * j		1095362	1		*			
ANR	1095415	Identifier	dithered_stride		1095362	0					
ANR	1095416	Identifier	j		1095362	1					
ANR	1095417	ForStatement	for ( k = 0 ; k < width ; k ++ )		1095362	3					
ANR	1095418	ForInit	k = 0 ;	94:13:3708:3713	1095362	0	True				
ANR	1095419	AssignmentExpression	k = 0		1095362	0		=			
ANR	1095420	Identifier	k		1095362	0					
ANR	1095421	PrimaryExpression	0		1095362	1					
ANR	1095422	Condition	k < width	94:20:3715:3723	1095362	1	True				
ANR	1095423	RelationalExpression	k < width		1095362	0		<			
ANR	1095424	Identifier	k		1095362	0					
ANR	1095425	Identifier	width		1095362	1					
ANR	1095426	PostIncDecOperationExpression	k ++	94:31:3726:3728	1095362	2	True				
ANR	1095427	Identifier	k		1095362	0					
ANR	1095428	IncDec	++		1095362	1					
ANR	1095429	CompoundStatement		13:36:393:393	1095362	3					
ANR	1095430	IfStatement	if ( contone_ptr [ k ] < thresh_ptr [ k ] )		1095362	0					
ANR	1095431	Condition	contone_ptr [ k ] < thresh_ptr [ k ]	95:16:3749:3778	1095362	0	True				
ANR	1095432	RelationalExpression	contone_ptr [ k ] < thresh_ptr [ k ]		1095362	0		<			
ANR	1095433	ArrayIndexing	contone_ptr [ k ]		1095362	0					
ANR	1095434	Identifier	contone_ptr		1095362	0					
ANR	1095435	Identifier	k		1095362	1					
ANR	1095436	ArrayIndexing	thresh_ptr [ k ]		1095362	1					
ANR	1095437	Identifier	thresh_ptr		1095362	0					
ANR	1095438	Identifier	k		1095362	1					
ANR	1095439	CompoundStatement		14:48:443:443	1095362	1					
ANR	1095440	ExpressionStatement	halftone_ptr [ k ] = 0	96:16:3799:3818	1095362	0	True				
ANR	1095441	AssignmentExpression	halftone_ptr [ k ] = 0		1095362	0		=			
ANR	1095442	ArrayIndexing	halftone_ptr [ k ]		1095362	0					
ANR	1095443	Identifier	halftone_ptr		1095362	0					
ANR	1095444	Identifier	k		1095362	1					
ANR	1095445	PrimaryExpression	0		1095362	1					
ANR	1095446	ElseStatement	else		1095362	0					
ANR	1095447	CompoundStatement		16:19:501:501	1095362	0					
ANR	1095448	ExpressionStatement	halftone_ptr [ k ] = 255	98:16:3857:3878	1095362	0	True				
ANR	1095449	AssignmentExpression	halftone_ptr [ k ] = 255		1095362	0		=			
ANR	1095450	ArrayIndexing	halftone_ptr [ k ]		1095362	0					
ANR	1095451	Identifier	halftone_ptr		1095362	0					
ANR	1095452	Identifier	k		1095362	1					
ANR	1095453	PrimaryExpression	255		1095362	1					
ANR	1095454	ReturnType	void		1095362	1					
ANR	1095455	Identifier	gx_ht_threshold_row_byte		1095362	2					
ANR	1095456	ParameterList	"byte * contone , byte * threshold_strip , int contone_stride , byte * halftone , int dithered_stride , int width , int num_rows"		1095362	3					
ANR	1095457	Parameter	byte * contone	79:25:3157:3169	1095362	0	True				
ANR	1095458	ParameterType	byte *		1095362	0					
ANR	1095459	Identifier	contone		1095362	1					
ANR	1095460	Parameter	byte * threshold_strip	79:40:3172:3192	1095362	1	True				
ANR	1095461	ParameterType	byte *		1095362	0					
ANR	1095462	Identifier	threshold_strip		1095362	1					
ANR	1095463	Parameter	int contone_stride	79:63:3195:3212	1095362	2	True				
ANR	1095464	ParameterType	int		1095362	0					
ANR	1095465	Identifier	contone_stride		1095362	1					
ANR	1095466	Parameter	byte * halftone	80:30:3245:3258	1095362	3	True				
ANR	1095467	ParameterType	byte *		1095362	0					
ANR	1095468	Identifier	halftone		1095362	1					
ANR	1095469	Parameter	int dithered_stride	80:46:3261:3279	1095362	4	True				
ANR	1095470	ParameterType	int		1095362	0					
ANR	1095471	Identifier	dithered_stride		1095362	1					
ANR	1095472	Parameter	int width	80:67:3282:3290	1095362	5	True				
ANR	1095473	ParameterType	int		1095362	0					
ANR	1095474	Identifier	width		1095362	1					
ANR	1095475	Parameter	int num_rows	81:30:3323:3334	1095362	6	True				
ANR	1095476	ParameterType	int		1095362	0					
ANR	1095477	Identifier	num_rows		1095362	1					
ANR	1095478	CFGEntryNode	ENTRY		1095362		True				
ANR	1095479	CFGExitNode	EXIT		1095362		True				
ANR	1095480	Symbol	contone_stride		1095362						
ANR	1095481	Symbol	contone		1095362						
ANR	1095482	Symbol	j		1095362						
ANR	1095483	Symbol	k		1095362						
ANR	1095484	Symbol	threshold_strip		1095362						
ANR	1095485	Symbol	* halftone_ptr		1095362						
ANR	1095486	Symbol	* thresh_ptr		1095362						
ANR	1095487	Symbol	halftone		1095362						
ANR	1095488	Symbol	dithered_stride		1095362						
ANR	1095489	Symbol	halftone_ptr		1095362						
ANR	1095490	Symbol	* k		1095362						
ANR	1095491	Symbol	width		1095362						
ANR	1095492	Symbol	num_rows		1095362						
ANR	1095493	Symbol	thresh_ptr		1095362						
ANR	1095494	Symbol	* contone_ptr		1095362						
ANR	1095495	Symbol	contone_ptr		1095362						
ANR	1095496	Function	threshold_16_bit	108:0:4026:4401							
ANR	1095497	FunctionDef	"threshold_16_bit (byte * contone_ptr , byte * thresh_ptr , byte * ht_data)"		1095496	0					
ANR	1095498	CompoundStatement		110:0:4107:4401	1095496	0					
ANR	1095499	IdentifierDeclStatement	int j ;	111:4:4113:4118	1095496	0	True				
ANR	1095500	IdentifierDecl	j		1095496	0					
ANR	1095501	IdentifierDeclType	int		1095496	0					
ANR	1095502	Identifier	j		1095496	1					
ANR	1095503	ForStatement	for ( j = 2 ; j > 0 ; j -- )		1095496	1					
ANR	1095504	ForInit	j = 2 ;	113:9:4130:4135	1095496	0	True				
ANR	1095505	AssignmentExpression	j = 2		1095496	0		=			
ANR	1095506	Identifier	j		1095496	0					
ANR	1095507	PrimaryExpression	2		1095496	1					
ANR	1095508	Condition	j > 0	113:16:4137:4141	1095496	1	True				
ANR	1095509	RelationalExpression	j > 0		1095496	0		>			
ANR	1095510	Identifier	j		1095496	0					
ANR	1095511	PrimaryExpression	0		1095496	1					
ANR	1095512	PostIncDecOperationExpression	j --	113:23:4144:4146	1095496	2	True				
ANR	1095513	Identifier	j		1095496	0					
ANR	1095514	IncDec	--		1095496	1					
ANR	1095515	CompoundStatement		6:8:71:91	1095496	3					
ANR	1095516	IdentifierDeclStatement	byte h = 0 ;	114:8:4159:4169	1095496	0	True				
ANR	1095517	IdentifierDecl	h = 0		1095496	0					
ANR	1095518	IdentifierDeclType	byte		1095496	0					
ANR	1095519	Identifier	h		1095496	1					
ANR	1095520	AssignmentExpression	h = 0		1095496	2		=			
ANR	1095521	Identifier	h		1095496	0					
ANR	1095522	PrimaryExpression	0		1095496	1					
ANR	1095523	IdentifierDeclStatement	byte bit_init = 0x80 ;	115:8:4179:4199	1095496	1	True				
ANR	1095524	IdentifierDecl	bit_init = 0x80		1095496	0					
ANR	1095525	IdentifierDeclType	byte		1095496	0					
ANR	1095526	Identifier	bit_init		1095496	1					
ANR	1095527	AssignmentExpression	bit_init = 0x80		1095496	2		=			
ANR	1095528	Identifier	bit_init		1095496	0					
ANR	1095529	PrimaryExpression	0x80		1095496	1					
ANR	1095530	DoStatement	do		1095496	2					
ANR	1095531	CompoundStatement		7:11:104:104	1095496	0					
ANR	1095532	IfStatement	if ( * contone_ptr ++ < * thresh_ptr ++ )		1095496	0					
ANR	1095533	Condition	* contone_ptr ++ < * thresh_ptr ++	117:16:4230:4259	1095496	0	True				
ANR	1095534	RelationalExpression	* contone_ptr ++ < * thresh_ptr ++		1095496	0		<			
ANR	1095535	UnaryOperationExpression	* contone_ptr ++		1095496	0					
ANR	1095536	UnaryOperator	*		1095496	0					
ANR	1095537	PostIncDecOperationExpression	contone_ptr ++		1095496	1					
ANR	1095538	Identifier	contone_ptr		1095496	0					
ANR	1095539	IncDec	++		1095496	1					
ANR	1095540	UnaryOperationExpression	* thresh_ptr ++		1095496	1					
ANR	1095541	UnaryOperator	*		1095496	0					
ANR	1095542	PostIncDecOperationExpression	thresh_ptr ++		1095496	1					
ANR	1095543	Identifier	thresh_ptr		1095496	0					
ANR	1095544	IncDec	++		1095496	1					
ANR	1095545	CompoundStatement		8:48:154:154	1095496	1					
ANR	1095546	ExpressionStatement	h |= bit_init	118:16:4280:4294	1095496	0	True				
ANR	1095547	AssignmentExpression	h |= bit_init		1095496	0		|=			
ANR	1095548	Identifier	h		1095496	0					
ANR	1095549	Identifier	bit_init		1095496	1					
ANR	1095550	ExpressionStatement	bit_init >>= 1	120:12:4322:4336	1095496	1	True				
ANR	1095551	AssignmentExpression	bit_init >>= 1		1095496	0		>>=			
ANR	1095552	Identifier	bit_init		1095496	0					
ANR	1095553	PrimaryExpression	1		1095496	1					
ANR	1095554	Condition	bit_init != 0	121:17:4355:4367	1095496	1	True				
ANR	1095555	EqualityExpression	bit_init != 0		1095496	0		!=			
ANR	1095556	Identifier	bit_init		1095496	0					
ANR	1095557	PrimaryExpression	0		1095496	1					
ANR	1095558	ExpressionStatement	* ht_data ++ = h	122:8:4379:4393	1095496	3	True				
ANR	1095559	AssignmentExpression	* ht_data ++ = h		1095496	0		=			
ANR	1095560	UnaryOperationExpression	* ht_data ++		1095496	0					
ANR	1095561	UnaryOperator	*		1095496	0					
ANR	1095562	PostIncDecOperationExpression	ht_data ++		1095496	1					
ANR	1095563	Identifier	ht_data		1095496	0					
ANR	1095564	IncDec	++		1095496	1					
ANR	1095565	Identifier	h		1095496	1					
ANR	1095566	ReturnType	static void		1095496	1					
ANR	1095567	Identifier	threshold_16_bit		1095496	2					
ANR	1095568	ParameterList	"byte * contone_ptr , byte * thresh_ptr , byte * ht_data"		1095496	3					
ANR	1095569	Parameter	byte * contone_ptr	109:17:4055:4071	1095496	0	True				
ANR	1095570	ParameterType	byte *		1095496	0					
ANR	1095571	Identifier	contone_ptr		1095496	1					
ANR	1095572	Parameter	byte * thresh_ptr	109:36:4074:4089	1095496	1	True				
ANR	1095573	ParameterType	byte *		1095496	0					
ANR	1095574	Identifier	thresh_ptr		1095496	1					
ANR	1095575	Parameter	byte * ht_data	109:54:4092:4104	1095496	2	True				
ANR	1095576	ParameterType	byte *		1095496	0					
ANR	1095577	Identifier	ht_data		1095496	1					
ANR	1095578	CFGEntryNode	ENTRY		1095496		True				
ANR	1095579	CFGExitNode	EXIT		1095496		True				
ANR	1095580	Symbol	* contone_ptr ++		1095496						
ANR	1095581	Symbol	thresh_ptr		1095496						
ANR	1095582	Symbol	h		1095496						
ANR	1095583	Symbol	j		1095496						
ANR	1095584	Symbol	contone_ptr		1095496						
ANR	1095585	Symbol	bit_init		1095496						
ANR	1095586	Symbol	ht_data		1095496						
ANR	1095587	Symbol	* thresh_ptr ++		1095496						
ANR	1095588	Symbol	* ht_data ++		1095496						
ANR	1095589	Function	threshold_16_SSE	127:0:4466:5349							
ANR	1095590	FunctionDef	"threshold_16_SSE (byte * contone_ptr , byte * thresh_ptr , byte * ht_data)"		1095589	0					
ANR	1095591	CompoundStatement		129:0:4547:5349	1095589	0					
ANR	1095592	IdentifierDeclStatement	__m128i input1 ;	130:4:4553:4567	1095589	0	True				
ANR	1095593	IdentifierDecl	input1		1095589	0					
ANR	1095594	IdentifierDeclType	__m128i		1095589	0					
ANR	1095595	Identifier	input1		1095589	1					
ANR	1095596	IdentifierDeclStatement	__m128i input2 ;	131:4:4573:4587	1095589	1	True				
ANR	1095597	IdentifierDecl	input2		1095589	0					
ANR	1095598	IdentifierDeclType	__m128i		1095589	0					
ANR	1095599	Identifier	input2		1095589	1					
ANR	1095600	Statement	register	132:4:4593:4600	1095589	2	True				
ANR	1095601	IdentifierDeclStatement	int result_int ;	132:13:4602:4616	1095589	3	True				
ANR	1095602	IdentifierDecl	result_int		1095589	0					
ANR	1095603	IdentifierDeclType	int		1095589	0					
ANR	1095604	Identifier	result_int		1095589	1					
ANR	1095605	IdentifierDeclStatement	const unsigned int mask1 = 0x80808080 ;	133:4:4622:4659	1095589	4	True				
ANR	1095606	IdentifierDecl	mask1 = 0x80808080		1095589	0					
ANR	1095607	IdentifierDeclType	const unsigned int		1095589	0					
ANR	1095608	Identifier	mask1		1095589	1					
ANR	1095609	AssignmentExpression	mask1 = 0x80808080		1095589	2		=			
ANR	1095610	Identifier	mask1		1095589	0					
ANR	1095611	PrimaryExpression	0x80808080		1095589	1					
ANR	1095612	IdentifierDeclStatement	"__m128i sign_fix = _mm_set_epi32 ( mask1 , mask1 , mask1 , mask1 ) ;"	134:4:4665:4725	1095589	5	True				
ANR	1095613	IdentifierDecl	"sign_fix = _mm_set_epi32 ( mask1 , mask1 , mask1 , mask1 )"		1095589	0					
ANR	1095614	IdentifierDeclType	__m128i		1095589	0					
ANR	1095615	Identifier	sign_fix		1095589	1					
ANR	1095616	AssignmentExpression	"sign_fix = _mm_set_epi32 ( mask1 , mask1 , mask1 , mask1 )"		1095589	2		=			
ANR	1095617	Identifier	sign_fix		1095589	0					
ANR	1095618	CallExpression	"_mm_set_epi32 ( mask1 , mask1 , mask1 , mask1 )"		1095589	1					
ANR	1095619	Callee	_mm_set_epi32		1095589	0					
ANR	1095620	Identifier	_mm_set_epi32		1095589	0					
ANR	1095621	ArgumentList	mask1		1095589	1					
ANR	1095622	Argument	mask1		1095589	0					
ANR	1095623	Identifier	mask1		1095589	0					
ANR	1095624	Argument	mask1		1095589	1					
ANR	1095625	Identifier	mask1		1095589	0					
ANR	1095626	Argument	mask1		1095589	2					
ANR	1095627	Identifier	mask1		1095589	0					
ANR	1095628	Argument	mask1		1095589	3					
ANR	1095629	Identifier	mask1		1095589	0					
ANR	1095630	ExpressionStatement	input1 = _mm_load_si128 ( ( const __m128i * ) contone_ptr )	137:4:4747:4800	1095589	6	True				
ANR	1095631	AssignmentExpression	input1 = _mm_load_si128 ( ( const __m128i * ) contone_ptr )		1095589	0		=			
ANR	1095632	Identifier	input1		1095589	0					
ANR	1095633	CallExpression	_mm_load_si128 ( ( const __m128i * ) contone_ptr )		1095589	1					
ANR	1095634	Callee	_mm_load_si128		1095589	0					
ANR	1095635	Identifier	_mm_load_si128		1095589	0					
ANR	1095636	ArgumentList	( const __m128i * ) contone_ptr		1095589	1					
ANR	1095637	Argument	( const __m128i * ) contone_ptr		1095589	0					
ANR	1095638	CastExpression	( const __m128i * ) contone_ptr		1095589	0					
ANR	1095639	CastTarget	const __m128i *		1095589	0					
ANR	1095640	Identifier	contone_ptr		1095589	1					
ANR	1095641	ExpressionStatement	input2 = _mm_load_si128 ( ( const __m128i * ) thresh_ptr )	138:4:4806:4859	1095589	7	True				
ANR	1095642	AssignmentExpression	input2 = _mm_load_si128 ( ( const __m128i * ) thresh_ptr )		1095589	0		=			
ANR	1095643	Identifier	input2		1095589	0					
ANR	1095644	CallExpression	_mm_load_si128 ( ( const __m128i * ) thresh_ptr )		1095589	1					
ANR	1095645	Callee	_mm_load_si128		1095589	0					
ANR	1095646	Identifier	_mm_load_si128		1095589	0					
ANR	1095647	ArgumentList	( const __m128i * ) thresh_ptr		1095589	1					
ANR	1095648	Argument	( const __m128i * ) thresh_ptr		1095589	0					
ANR	1095649	CastExpression	( const __m128i * ) thresh_ptr		1095589	0					
ANR	1095650	CastTarget	const __m128i *		1095589	0					
ANR	1095651	Identifier	thresh_ptr		1095589	1					
ANR	1095652	ExpressionStatement	"input1 = _mm_xor_si128 ( input1 , sign_fix )"	141:4:4967:5007	1095589	8	True				
ANR	1095653	AssignmentExpression	"input1 = _mm_xor_si128 ( input1 , sign_fix )"		1095589	0		=			
ANR	1095654	Identifier	input1		1095589	0					
ANR	1095655	CallExpression	"_mm_xor_si128 ( input1 , sign_fix )"		1095589	1					
ANR	1095656	Callee	_mm_xor_si128		1095589	0					
ANR	1095657	Identifier	_mm_xor_si128		1095589	0					
ANR	1095658	ArgumentList	input1		1095589	1					
ANR	1095659	Argument	input1		1095589	0					
ANR	1095660	Identifier	input1		1095589	0					
ANR	1095661	Argument	sign_fix		1095589	1					
ANR	1095662	Identifier	sign_fix		1095589	0					
ANR	1095663	ExpressionStatement	"input2 = _mm_xor_si128 ( input2 , sign_fix )"	142:4:5013:5053	1095589	9	True				
ANR	1095664	AssignmentExpression	"input2 = _mm_xor_si128 ( input2 , sign_fix )"		1095589	0		=			
ANR	1095665	Identifier	input2		1095589	0					
ANR	1095666	CallExpression	"_mm_xor_si128 ( input2 , sign_fix )"		1095589	1					
ANR	1095667	Callee	_mm_xor_si128		1095589	0					
ANR	1095668	Identifier	_mm_xor_si128		1095589	0					
ANR	1095669	ArgumentList	input2		1095589	1					
ANR	1095670	Argument	input2		1095589	0					
ANR	1095671	Identifier	input2		1095589	0					
ANR	1095672	Argument	sign_fix		1095589	1					
ANR	1095673	Identifier	sign_fix		1095589	0					
ANR	1095674	ExpressionStatement	"input2 = _mm_subs_epi8 ( input1 , input2 )"	144:4:5086:5124	1095589	10	True				
ANR	1095675	AssignmentExpression	"input2 = _mm_subs_epi8 ( input1 , input2 )"		1095589	0		=			
ANR	1095676	Identifier	input2		1095589	0					
ANR	1095677	CallExpression	"_mm_subs_epi8 ( input1 , input2 )"		1095589	1					
ANR	1095678	Callee	_mm_subs_epi8		1095589	0					
ANR	1095679	Identifier	_mm_subs_epi8		1095589	0					
ANR	1095680	ArgumentList	input1		1095589	1					
ANR	1095681	Argument	input1		1095589	0					
ANR	1095682	Identifier	input1		1095589	0					
ANR	1095683	Argument	input2		1095589	1					
ANR	1095684	Identifier	input2		1095589	0					
ANR	1095685	ExpressionStatement	result_int = _mm_movemask_epi8 ( input2 )	146:4:5159:5197	1095589	11	True				
ANR	1095686	AssignmentExpression	result_int = _mm_movemask_epi8 ( input2 )		1095589	0		=			
ANR	1095687	Identifier	result_int		1095589	0					
ANR	1095688	CallExpression	_mm_movemask_epi8 ( input2 )		1095589	1					
ANR	1095689	Callee	_mm_movemask_epi8		1095589	0					
ANR	1095690	Identifier	_mm_movemask_epi8		1095589	0					
ANR	1095691	ArgumentList	input2		1095589	1					
ANR	1095692	Argument	input2		1095589	0					
ANR	1095693	Identifier	input2		1095589	0					
ANR	1095694	ExpressionStatement	ht_data [ 0 ] = bitreverse [ ( result_int & 0xff ) ]	148:4:5246:5290	1095589	12	True				
ANR	1095695	AssignmentExpression	ht_data [ 0 ] = bitreverse [ ( result_int & 0xff ) ]		1095589	0		=			
ANR	1095696	ArrayIndexing	ht_data [ 0 ]		1095589	0					
ANR	1095697	Identifier	ht_data		1095589	0					
ANR	1095698	PrimaryExpression	0		1095589	1					
ANR	1095699	ArrayIndexing	bitreverse [ ( result_int & 0xff ) ]		1095589	1					
ANR	1095700	Identifier	bitreverse		1095589	0					
ANR	1095701	BitAndExpression	result_int & 0xff		1095589	1		&			
ANR	1095702	Identifier	result_int		1095589	0					
ANR	1095703	PrimaryExpression	0xff		1095589	1					
ANR	1095704	ExpressionStatement	ht_data [ 1 ] = bitreverse [ ( ( result_int >> 8 ) & 0xff ) ]	149:4:5296:5347	1095589	13	True				
ANR	1095705	AssignmentExpression	ht_data [ 1 ] = bitreverse [ ( ( result_int >> 8 ) & 0xff ) ]		1095589	0		=			
ANR	1095706	ArrayIndexing	ht_data [ 1 ]		1095589	0					
ANR	1095707	Identifier	ht_data		1095589	0					
ANR	1095708	PrimaryExpression	1		1095589	1					
ANR	1095709	ArrayIndexing	bitreverse [ ( ( result_int >> 8 ) & 0xff ) ]		1095589	1					
ANR	1095710	Identifier	bitreverse		1095589	0					
ANR	1095711	BitAndExpression	( result_int >> 8 ) & 0xff		1095589	1		&			
ANR	1095712	ShiftExpression	result_int >> 8		1095589	0		>>			
ANR	1095713	Identifier	result_int		1095589	0					
ANR	1095714	PrimaryExpression	8		1095589	1					
ANR	1095715	PrimaryExpression	0xff		1095589	1					
ANR	1095716	ReturnType	static void		1095589	1					
ANR	1095717	Identifier	threshold_16_SSE		1095589	2					
ANR	1095718	ParameterList	"byte * contone_ptr , byte * thresh_ptr , byte * ht_data"		1095589	3					
ANR	1095719	Parameter	byte * contone_ptr	128:17:4495:4511	1095589	0	True				
ANR	1095720	ParameterType	byte *		1095589	0					
ANR	1095721	Identifier	contone_ptr		1095589	1					
ANR	1095722	Parameter	byte * thresh_ptr	128:36:4514:4529	1095589	1	True				
ANR	1095723	ParameterType	byte *		1095589	0					
ANR	1095724	Identifier	thresh_ptr		1095589	1					
ANR	1095725	Parameter	byte * ht_data	128:54:4532:4544	1095589	2	True				
ANR	1095726	ParameterType	byte *		1095589	0					
ANR	1095727	Identifier	ht_data		1095589	1					
ANR	1095728	CFGEntryNode	ENTRY		1095589		True				
ANR	1095729	CFGExitNode	EXIT		1095589		True				
ANR	1095730	Symbol	sign_fix		1095589						
ANR	1095731	Symbol	result_int		1095589						
ANR	1095732	Symbol	* ht_data		1095589						
ANR	1095733	Symbol	input2		1095589						
ANR	1095734	Symbol	input1		1095589						
ANR	1095735	Symbol	mask1		1095589						
ANR	1095736	Symbol	* result_int		1095589						
ANR	1095737	Symbol	_mm_movemask_epi8		1095589						
ANR	1095738	Symbol	_mm_set_epi32		1095589						
ANR	1095739	Symbol	_mm_load_si128		1095589						
ANR	1095740	Symbol	* bitreverse		1095589						
ANR	1095741	Symbol	bitreverse		1095589						
ANR	1095742	Symbol	_mm_subs_epi8		1095589						
ANR	1095743	Symbol	thresh_ptr		1095589						
ANR	1095744	Symbol	contone_ptr		1095589						
ANR	1095745	Symbol	ht_data		1095589						
ANR	1095746	Symbol	_mm_xor_si128		1095589						
ANR	1095747	Function	threshold_16_SSE_unaligned	153:0:5388:6309							
ANR	1095748	FunctionDef	"threshold_16_SSE_unaligned (byte * contone_ptr , byte * thresh_ptr , byte * ht_data)"		1095747	0					
ANR	1095749	CompoundStatement		155:0:5479:6309	1095747	0					
ANR	1095750	IdentifierDeclStatement	__m128i input1 ;	156:4:5485:5499	1095747	0	True				
ANR	1095751	IdentifierDecl	input1		1095747	0					
ANR	1095752	IdentifierDeclType	__m128i		1095747	0					
ANR	1095753	Identifier	input1		1095747	1					
ANR	1095754	IdentifierDeclStatement	__m128i input2 ;	157:4:5505:5519	1095747	1	True				
ANR	1095755	IdentifierDecl	input2		1095747	0					
ANR	1095756	IdentifierDeclType	__m128i		1095747	0					
ANR	1095757	Identifier	input2		1095747	1					
ANR	1095758	IdentifierDeclStatement	int result_int ;	158:4:5525:5539	1095747	2	True				
ANR	1095759	IdentifierDecl	result_int		1095747	0					
ANR	1095760	IdentifierDeclType	int		1095747	0					
ANR	1095761	Identifier	result_int		1095747	1					
ANR	1095762	IdentifierDeclStatement	byte * sse_data ;	159:4:5545:5559	1095747	3	True				
ANR	1095763	IdentifierDecl	* sse_data		1095747	0					
ANR	1095764	IdentifierDeclType	byte *		1095747	0					
ANR	1095765	Identifier	sse_data		1095747	1					
ANR	1095766	IdentifierDeclStatement	const unsigned int mask1 = 0x80808080 ;	160:4:5565:5602	1095747	4	True				
ANR	1095767	IdentifierDecl	mask1 = 0x80808080		1095747	0					
ANR	1095768	IdentifierDeclType	const unsigned int		1095747	0					
ANR	1095769	Identifier	mask1		1095747	1					
ANR	1095770	AssignmentExpression	mask1 = 0x80808080		1095747	2		=			
ANR	1095771	Identifier	mask1		1095747	0					
ANR	1095772	PrimaryExpression	0x80808080		1095747	1					
ANR	1095773	IdentifierDeclStatement	"__m128i sign_fix = _mm_set_epi32 ( mask1 , mask1 , mask1 , mask1 ) ;"	161:4:5608:5668	1095747	5	True				
ANR	1095774	IdentifierDecl	"sign_fix = _mm_set_epi32 ( mask1 , mask1 , mask1 , mask1 )"		1095747	0					
ANR	1095775	IdentifierDeclType	__m128i		1095747	0					
ANR	1095776	Identifier	sign_fix		1095747	1					
ANR	1095777	AssignmentExpression	"sign_fix = _mm_set_epi32 ( mask1 , mask1 , mask1 , mask1 )"		1095747	2		=			
ANR	1095778	Identifier	sign_fix		1095747	0					
ANR	1095779	CallExpression	"_mm_set_epi32 ( mask1 , mask1 , mask1 , mask1 )"		1095747	1					
ANR	1095780	Callee	_mm_set_epi32		1095747	0					
ANR	1095781	Identifier	_mm_set_epi32		1095747	0					
ANR	1095782	ArgumentList	mask1		1095747	1					
ANR	1095783	Argument	mask1		1095747	0					
ANR	1095784	Identifier	mask1		1095747	0					
ANR	1095785	Argument	mask1		1095747	1					
ANR	1095786	Identifier	mask1		1095747	0					
ANR	1095787	Argument	mask1		1095747	2					
ANR	1095788	Identifier	mask1		1095747	0					
ANR	1095789	Argument	mask1		1095747	3					
ANR	1095790	Identifier	mask1		1095747	0					
ANR	1095791	ExpressionStatement	sse_data = ( byte * ) & ( result_int )	163:4:5675:5707	1095747	6	True				
ANR	1095792	AssignmentExpression	sse_data = ( byte * ) & ( result_int )		1095747	0		=			
ANR	1095793	Identifier	sse_data		1095747	0					
ANR	1095794	CastExpression	( byte * ) & ( result_int )		1095747	1					
ANR	1095795	CastTarget	byte *		1095747	0					
ANR	1095796	UnaryOperationExpression	& ( result_int )		1095747	1					
ANR	1095797	UnaryOperator	&		1095747	0					
ANR	1095798	Identifier	result_int		1095747	1					
ANR	1095799	ExpressionStatement	input1 = _mm_loadu_si128 ( ( const __m128i * ) contone_ptr )	165:4:5728:5782	1095747	7	True				
ANR	1095800	AssignmentExpression	input1 = _mm_loadu_si128 ( ( const __m128i * ) contone_ptr )		1095747	0		=			
ANR	1095801	Identifier	input1		1095747	0					
ANR	1095802	CallExpression	_mm_loadu_si128 ( ( const __m128i * ) contone_ptr )		1095747	1					
ANR	1095803	Callee	_mm_loadu_si128		1095747	0					
ANR	1095804	Identifier	_mm_loadu_si128		1095747	0					
ANR	1095805	ArgumentList	( const __m128i * ) contone_ptr		1095747	1					
ANR	1095806	Argument	( const __m128i * ) contone_ptr		1095747	0					
ANR	1095807	CastExpression	( const __m128i * ) contone_ptr		1095747	0					
ANR	1095808	CastTarget	const __m128i *		1095747	0					
ANR	1095809	Identifier	contone_ptr		1095747	1					
ANR	1095810	ExpressionStatement	input2 = _mm_loadu_si128 ( ( const __m128i * ) thresh_ptr )	166:4:5788:5842	1095747	8	True				
ANR	1095811	AssignmentExpression	input2 = _mm_loadu_si128 ( ( const __m128i * ) thresh_ptr )		1095747	0		=			
ANR	1095812	Identifier	input2		1095747	0					
ANR	1095813	CallExpression	_mm_loadu_si128 ( ( const __m128i * ) thresh_ptr )		1095747	1					
ANR	1095814	Callee	_mm_loadu_si128		1095747	0					
ANR	1095815	Identifier	_mm_loadu_si128		1095747	0					
ANR	1095816	ArgumentList	( const __m128i * ) thresh_ptr		1095747	1					
ANR	1095817	Argument	( const __m128i * ) thresh_ptr		1095747	0					
ANR	1095818	CastExpression	( const __m128i * ) thresh_ptr		1095747	0					
ANR	1095819	CastTarget	const __m128i *		1095747	0					
ANR	1095820	Identifier	thresh_ptr		1095747	1					
ANR	1095821	ExpressionStatement	"input1 = _mm_xor_si128 ( input1 , sign_fix )"	169:4:5950:5990	1095747	9	True				
ANR	1095822	AssignmentExpression	"input1 = _mm_xor_si128 ( input1 , sign_fix )"		1095747	0		=			
ANR	1095823	Identifier	input1		1095747	0					
ANR	1095824	CallExpression	"_mm_xor_si128 ( input1 , sign_fix )"		1095747	1					
ANR	1095825	Callee	_mm_xor_si128		1095747	0					
ANR	1095826	Identifier	_mm_xor_si128		1095747	0					
ANR	1095827	ArgumentList	input1		1095747	1					
ANR	1095828	Argument	input1		1095747	0					
ANR	1095829	Identifier	input1		1095747	0					
ANR	1095830	Argument	sign_fix		1095747	1					
ANR	1095831	Identifier	sign_fix		1095747	0					
ANR	1095832	ExpressionStatement	"input2 = _mm_xor_si128 ( input2 , sign_fix )"	170:4:5996:6036	1095747	10	True				
ANR	1095833	AssignmentExpression	"input2 = _mm_xor_si128 ( input2 , sign_fix )"		1095747	0		=			
ANR	1095834	Identifier	input2		1095747	0					
ANR	1095835	CallExpression	"_mm_xor_si128 ( input2 , sign_fix )"		1095747	1					
ANR	1095836	Callee	_mm_xor_si128		1095747	0					
ANR	1095837	Identifier	_mm_xor_si128		1095747	0					
ANR	1095838	ArgumentList	input2		1095747	1					
ANR	1095839	Argument	input2		1095747	0					
ANR	1095840	Identifier	input2		1095747	0					
ANR	1095841	Argument	sign_fix		1095747	1					
ANR	1095842	Identifier	sign_fix		1095747	0					
ANR	1095843	ExpressionStatement	"input2 = _mm_subs_epi8 ( input1 , input2 )"	172:4:6069:6107	1095747	11	True				
ANR	1095844	AssignmentExpression	"input2 = _mm_subs_epi8 ( input1 , input2 )"		1095747	0		=			
ANR	1095845	Identifier	input2		1095747	0					
ANR	1095846	CallExpression	"_mm_subs_epi8 ( input1 , input2 )"		1095747	1					
ANR	1095847	Callee	_mm_subs_epi8		1095747	0					
ANR	1095848	Identifier	_mm_subs_epi8		1095747	0					
ANR	1095849	ArgumentList	input1		1095747	1					
ANR	1095850	Argument	input1		1095747	0					
ANR	1095851	Identifier	input1		1095747	0					
ANR	1095852	Argument	input2		1095747	1					
ANR	1095853	Identifier	input2		1095747	0					
ANR	1095854	ExpressionStatement	result_int = _mm_movemask_epi8 ( input2 )	174:4:6142:6180	1095747	12	True				
ANR	1095855	AssignmentExpression	result_int = _mm_movemask_epi8 ( input2 )		1095747	0		=			
ANR	1095856	Identifier	result_int		1095747	0					
ANR	1095857	CallExpression	_mm_movemask_epi8 ( input2 )		1095747	1					
ANR	1095858	Callee	_mm_movemask_epi8		1095747	0					
ANR	1095859	Identifier	_mm_movemask_epi8		1095747	0					
ANR	1095860	ArgumentList	input2		1095747	1					
ANR	1095861	Argument	input2		1095747	0					
ANR	1095862	Identifier	input2		1095747	0					
ANR	1095863	ExpressionStatement	ht_data [ 0 ] = bitreverse [ sse_data [ 0 ] ]	176:4:6229:6265	1095747	13	True				
ANR	1095864	AssignmentExpression	ht_data [ 0 ] = bitreverse [ sse_data [ 0 ] ]		1095747	0		=			
ANR	1095865	ArrayIndexing	ht_data [ 0 ]		1095747	0					
ANR	1095866	Identifier	ht_data		1095747	0					
ANR	1095867	PrimaryExpression	0		1095747	1					
ANR	1095868	ArrayIndexing	bitreverse [ sse_data [ 0 ] ]		1095747	1					
ANR	1095869	Identifier	bitreverse		1095747	0					
ANR	1095870	ArrayIndexing	sse_data [ 0 ]		1095747	1					
ANR	1095871	Identifier	sse_data		1095747	0					
ANR	1095872	PrimaryExpression	0		1095747	1					
ANR	1095873	ExpressionStatement	ht_data [ 1 ] = bitreverse [ sse_data [ 1 ] ]	177:4:6271:6307	1095747	14	True				
ANR	1095874	AssignmentExpression	ht_data [ 1 ] = bitreverse [ sse_data [ 1 ] ]		1095747	0		=			
ANR	1095875	ArrayIndexing	ht_data [ 1 ]		1095747	0					
ANR	1095876	Identifier	ht_data		1095747	0					
ANR	1095877	PrimaryExpression	1		1095747	1					
ANR	1095878	ArrayIndexing	bitreverse [ sse_data [ 1 ] ]		1095747	1					
ANR	1095879	Identifier	bitreverse		1095747	0					
ANR	1095880	ArrayIndexing	sse_data [ 1 ]		1095747	1					
ANR	1095881	Identifier	sse_data		1095747	0					
ANR	1095882	PrimaryExpression	1		1095747	1					
ANR	1095883	ReturnType	static void		1095747	1					
ANR	1095884	Identifier	threshold_16_SSE_unaligned		1095747	2					
ANR	1095885	ParameterList	"byte * contone_ptr , byte * thresh_ptr , byte * ht_data"		1095747	3					
ANR	1095886	Parameter	byte * contone_ptr	154:27:5427:5443	1095747	0	True				
ANR	1095887	ParameterType	byte *		1095747	0					
ANR	1095888	Identifier	contone_ptr		1095747	1					
ANR	1095889	Parameter	byte * thresh_ptr	154:46:5446:5461	1095747	1	True				
ANR	1095890	ParameterType	byte *		1095747	0					
ANR	1095891	Identifier	thresh_ptr		1095747	1					
ANR	1095892	Parameter	byte * ht_data	154:64:5464:5476	1095747	2	True				
ANR	1095893	ParameterType	byte *		1095747	0					
ANR	1095894	Identifier	ht_data		1095747	1					
ANR	1095895	CFGEntryNode	ENTRY		1095747		True				
ANR	1095896	CFGExitNode	EXIT		1095747		True				
ANR	1095897	Symbol	sign_fix		1095747						
ANR	1095898	Symbol	result_int		1095747						
ANR	1095899	Symbol	& result_int		1095747						
ANR	1095900	Symbol	* ht_data		1095747						
ANR	1095901	Symbol	input2		1095747						
ANR	1095902	Symbol	input1		1095747						
ANR	1095903	Symbol	mask1		1095747						
ANR	1095904	Symbol	_mm_movemask_epi8		1095747						
ANR	1095905	Symbol	_mm_set_epi32		1095747						
ANR	1095906	Symbol	* sse_data		1095747						
ANR	1095907	Symbol	* bitreverse		1095747						
ANR	1095908	Symbol	bitreverse		1095747						
ANR	1095909	Symbol	sse_data		1095747						
ANR	1095910	Symbol	_mm_loadu_si128		1095747						
ANR	1095911	Symbol	_mm_subs_epi8		1095747						
ANR	1095912	Symbol	thresh_ptr		1095747						
ANR	1095913	Symbol	* * sse_data		1095747						
ANR	1095914	Symbol	contone_ptr		1095747						
ANR	1095915	Symbol	ht_data		1095747						
ANR	1095916	Symbol	_mm_xor_si128		1095747						
ANR	1095917	Function	gx_ht_threshold_row_bit_sub	185:0:6582:10177							
ANR	1095918	FunctionDef	"gx_ht_threshold_row_bit_sub (byte * contone , byte * threshold_strip , int contone_stride , byte * halftone , int dithered_stride , int width , int num_rows , int offset_bits)"		1095917	0					
ANR	1095919	CompoundStatement		189:0:6790:10177	1095917	0					
ANR	1095920	IdentifierDeclStatement	"int k , j ;"	191:4:6814:6822	1095917	0	True				
ANR	1095921	IdentifierDecl	k		1095917	0					
ANR	1095922	IdentifierDeclType	int		1095917	0					
ANR	1095923	Identifier	k		1095917	1					
ANR	1095924	IdentifierDecl	j		1095917	1					
ANR	1095925	IdentifierDeclType	int		1095917	0					
ANR	1095926	Identifier	j		1095917	1					
ANR	1095927	IdentifierDeclStatement	byte * contone_ptr ;	192:4:6828:6845	1095917	1	True				
ANR	1095928	IdentifierDecl	* contone_ptr		1095917	0					
ANR	1095929	IdentifierDeclType	byte *		1095917	0					
ANR	1095930	Identifier	contone_ptr		1095917	1					
ANR	1095931	IdentifierDeclStatement	byte * thresh_ptr ;	193:4:6851:6867	1095917	2	True				
ANR	1095932	IdentifierDecl	* thresh_ptr		1095917	0					
ANR	1095933	IdentifierDeclType	byte *		1095917	0					
ANR	1095934	Identifier	thresh_ptr		1095917	1					
ANR	1095935	IdentifierDeclStatement	byte * halftone_ptr ;	194:4:6873:6891	1095917	3	True				
ANR	1095936	IdentifierDecl	* halftone_ptr		1095917	0					
ANR	1095937	IdentifierDeclType	byte *		1095917	0					
ANR	1095938	Identifier	halftone_ptr		1095917	1					
ANR	1095939	IdentifierDeclStatement	byte bit_init ;	195:4:6897:6910	1095917	4	True				
ANR	1095940	IdentifierDecl	bit_init		1095917	0					
ANR	1095941	IdentifierDeclType	byte		1095917	0					
ANR	1095942	Identifier	bit_init		1095917	1					
ANR	1095943	ExpressionStatement	width -= offset_bits	199:4:7050:7070	1095917	5	True				
ANR	1095944	AssignmentExpression	width -= offset_bits		1095917	0		-=			
ANR	1095945	Identifier	width		1095917	0					
ANR	1095946	Identifier	offset_bits		1095917	1					
ANR	1095947	ForStatement	for ( j = 0 ; j < num_rows ; j ++ )		1095917	6					
ANR	1095948	ForInit	j = 0 ;	200:9:7081:7086	1095917	0	True				
ANR	1095949	AssignmentExpression	j = 0		1095917	0		=			
ANR	1095950	Identifier	j		1095917	0					
ANR	1095951	PrimaryExpression	0		1095917	1					
ANR	1095952	Condition	j < num_rows	200:16:7088:7099	1095917	1	True				
ANR	1095953	RelationalExpression	j < num_rows		1095917	0		<			
ANR	1095954	Identifier	j		1095917	0					
ANR	1095955	Identifier	num_rows		1095917	1					
ANR	1095956	PostIncDecOperationExpression	j ++	200:30:7102:7104	1095917	2	True				
ANR	1095957	Identifier	j		1095917	0					
ANR	1095958	IncDec	++		1095917	1					
ANR	1095959	CompoundStatement		13:8:326:332	1095917	3					
ANR	1095960	IdentifierDeclStatement	byte h ;	201:8:7117:7123	1095917	0	True				
ANR	1095961	IdentifierDecl	h		1095917	0					
ANR	1095962	IdentifierDeclType	byte		1095917	0					
ANR	1095963	Identifier	h		1095917	1					
ANR	1095964	ExpressionStatement	contone_ptr = contone	202:8:7133:7154	1095917	1	True				
ANR	1095965	AssignmentExpression	contone_ptr = contone		1095917	0		=			
ANR	1095966	Identifier	contone_ptr		1095917	0					
ANR	1095967	Identifier	contone		1095917	1					
ANR	1095968	ExpressionStatement	thresh_ptr = threshold_strip + contone_stride * j	203:8:7164:7213	1095917	2	True				
ANR	1095969	AssignmentExpression	thresh_ptr = threshold_strip + contone_stride * j		1095917	0		=			
ANR	1095970	Identifier	thresh_ptr		1095917	0					
ANR	1095971	AdditiveExpression	threshold_strip + contone_stride * j		1095917	1		+			
ANR	1095972	Identifier	threshold_strip		1095917	0					
ANR	1095973	MultiplicativeExpression	contone_stride * j		1095917	1		*			
ANR	1095974	Identifier	contone_stride		1095917	0					
ANR	1095975	Identifier	j		1095917	1					
ANR	1095976	ExpressionStatement	halftone_ptr = halftone + dithered_stride * j	204:8:7223:7268	1095917	3	True				
ANR	1095977	AssignmentExpression	halftone_ptr = halftone + dithered_stride * j		1095917	0		=			
ANR	1095978	Identifier	halftone_ptr		1095917	0					
ANR	1095979	AdditiveExpression	halftone + dithered_stride * j		1095917	1		+			
ANR	1095980	Identifier	halftone		1095917	0					
ANR	1095981	MultiplicativeExpression	dithered_stride * j		1095917	1		*			
ANR	1095982	Identifier	dithered_stride		1095917	0					
ANR	1095983	Identifier	j		1095917	1					
ANR	1095984	ExpressionStatement	bit_init = 0x80	206:8:7359:7374	1095917	4	True				
ANR	1095985	AssignmentExpression	bit_init = 0x80		1095917	0		=			
ANR	1095986	Identifier	bit_init		1095917	0					
ANR	1095987	PrimaryExpression	0x80		1095917	1					
ANR	1095988	ExpressionStatement	h = 0	207:8:7384:7389	1095917	5	True				
ANR	1095989	AssignmentExpression	h = 0		1095917	0		=			
ANR	1095990	Identifier	h		1095917	0					
ANR	1095991	PrimaryExpression	0		1095917	1					
ANR	1095992	ExpressionStatement	k = offset_bits	208:8:7399:7414	1095917	6	True				
ANR	1095993	AssignmentExpression	k = offset_bits		1095917	0		=			
ANR	1095994	Identifier	k		1095917	0					
ANR	1095995	Identifier	offset_bits		1095917	1					
ANR	1095996	IfStatement	if ( k > 0 )		1095917	7					
ANR	1095997	Condition	k > 0	209:12:7428:7432	1095917	0	True				
ANR	1095998	RelationalExpression	k > 0		1095917	0		>			
ANR	1095999	Identifier	k		1095917	0					
ANR	1096000	PrimaryExpression	0		1095917	1					
ANR	1096001	CompoundStatement		21:19:644:644	1095917	1					
ANR	1096002	DoStatement	do		1095917	0					
ANR	1096003	CompoundStatement		22:15:661:661	1095917	0					
ANR	1096004	IfStatement	if ( * contone_ptr ++ > * thresh_ptr ++ )		1095917	0					
ANR	1096005	Condition	* contone_ptr ++ > * thresh_ptr ++	211:20:7474:7503	1095917	0	True				
ANR	1096006	RelationalExpression	* contone_ptr ++ > * thresh_ptr ++		1095917	0		>			
ANR	1096007	UnaryOperationExpression	* contone_ptr ++		1095917	0					
ANR	1096008	UnaryOperator	*		1095917	0					
ANR	1096009	PostIncDecOperationExpression	contone_ptr ++		1095917	1					
ANR	1096010	Identifier	contone_ptr		1095917	0					
ANR	1096011	IncDec	++		1095917	1					
ANR	1096012	UnaryOperationExpression	* thresh_ptr ++		1095917	1					
ANR	1096013	UnaryOperator	*		1095917	0					
ANR	1096014	PostIncDecOperationExpression	thresh_ptr ++		1095917	1					
ANR	1096015	Identifier	thresh_ptr		1095917	0					
ANR	1096016	IncDec	++		1095917	1					
ANR	1096017	CompoundStatement		23:52:715:715	1095917	1					
ANR	1096018	ExpressionStatement	h |= bit_init	212:20:7528:7542	1095917	0	True				
ANR	1096019	AssignmentExpression	h |= bit_init		1095917	0		|=			
ANR	1096020	Identifier	h		1095917	0					
ANR	1096021	Identifier	bit_init		1095917	1					
ANR	1096022	ExpressionStatement	bit_init >>= 1	214:16:7578:7592	1095917	1	True				
ANR	1096023	AssignmentExpression	bit_init >>= 1		1095917	0		>>=			
ANR	1096024	Identifier	bit_init		1095917	0					
ANR	1096025	PrimaryExpression	1		1095917	1					
ANR	1096026	IfStatement	if ( bit_init == 0 )		1095917	2					
ANR	1096027	Condition	bit_init == 0	215:20:7614:7626	1095917	0	True				
ANR	1096028	EqualityExpression	bit_init == 0		1095917	0		==			
ANR	1096029	Identifier	bit_init		1095917	0					
ANR	1096030	PrimaryExpression	0		1095917	1					
ANR	1096031	CompoundStatement		27:35:838:838	1095917	1					
ANR	1096032	ExpressionStatement	bit_init = 0x80	216:20:7651:7666	1095917	0	True				
ANR	1096033	AssignmentExpression	bit_init = 0x80		1095917	0		=			
ANR	1096034	Identifier	bit_init		1095917	0					
ANR	1096035	PrimaryExpression	0x80		1095917	1					
ANR	1096036	ExpressionStatement	* halftone_ptr ++ = h	217:20:7688:7707	1095917	1	True				
ANR	1096037	AssignmentExpression	* halftone_ptr ++ = h		1095917	0		=			
ANR	1096038	UnaryOperationExpression	* halftone_ptr ++		1095917	0					
ANR	1096039	UnaryOperator	*		1095917	0					
ANR	1096040	PostIncDecOperationExpression	halftone_ptr ++		1095917	1					
ANR	1096041	Identifier	halftone_ptr		1095917	0					
ANR	1096042	IncDec	++		1095917	1					
ANR	1096043	Identifier	h		1095917	1					
ANR	1096044	ExpressionStatement	h = 0	218:20:7729:7734	1095917	2	True				
ANR	1096045	AssignmentExpression	h = 0		1095917	0		=			
ANR	1096046	Identifier	h		1095917	0					
ANR	1096047	PrimaryExpression	0		1095917	1					
ANR	1096048	ExpressionStatement	k --	220:16:7770:7773	1095917	3	True				
ANR	1096049	PostIncDecOperationExpression	k --		1095917	0					
ANR	1096050	Identifier	k		1095917	0					
ANR	1096051	IncDec	--		1095917	1					
ANR	1096052	Condition	k > 0	221:21:7796:7800	1095917	1	True				
ANR	1096053	RelationalExpression	k > 0		1095917	0		>			
ANR	1096054	Identifier	k		1095917	0					
ANR	1096055	PrimaryExpression	0		1095917	1					
ANR	1096056	ExpressionStatement	bit_init = 0x80	222:12:7816:7831	1095917	1	True				
ANR	1096057	AssignmentExpression	bit_init = 0x80		1095917	0		=			
ANR	1096058	Identifier	bit_init		1095917	0					
ANR	1096059	PrimaryExpression	0x80		1095917	1					
ANR	1096060	ExpressionStatement	* halftone_ptr ++ = h	223:12:7845:7864	1095917	2	True				
ANR	1096061	AssignmentExpression	* halftone_ptr ++ = h		1095917	0		=			
ANR	1096062	UnaryOperationExpression	* halftone_ptr ++		1095917	0					
ANR	1096063	UnaryOperator	*		1095917	0					
ANR	1096064	PostIncDecOperationExpression	halftone_ptr ++		1095917	1					
ANR	1096065	Identifier	halftone_ptr		1095917	0					
ANR	1096066	IncDec	++		1095917	1					
ANR	1096067	Identifier	h		1095917	1					
ANR	1096068	ExpressionStatement	h = 0	224:12:7878:7883	1095917	3	True				
ANR	1096069	AssignmentExpression	h = 0		1095917	0		=			
ANR	1096070	Identifier	h		1095917	0					
ANR	1096071	PrimaryExpression	0		1095917	1					
ANR	1096072	IfStatement	if ( offset_bits < 8 )		1095917	4					
ANR	1096073	Condition	offset_bits < 8	225:16:7901:7915	1095917	0	True				
ANR	1096074	RelationalExpression	offset_bits < 8		1095917	0		<			
ANR	1096075	Identifier	offset_bits		1095917	0					
ANR	1096076	PrimaryExpression	8		1095917	1					
ANR	1096077	ExpressionStatement	* halftone_ptr ++ = 0	226:16:7934:7953	1095917	1	True				
ANR	1096078	AssignmentExpression	* halftone_ptr ++ = 0		1095917	0		=			
ANR	1096079	UnaryOperationExpression	* halftone_ptr ++		1095917	0					
ANR	1096080	UnaryOperator	*		1095917	0					
ANR	1096081	PostIncDecOperationExpression	halftone_ptr ++		1095917	1					
ANR	1096082	Identifier	halftone_ptr		1095917	0					
ANR	1096083	IncDec	++		1095917	1					
ANR	1096084	PrimaryExpression	0		1095917	1					
ANR	1096085	ExpressionStatement	k = width	229:8:8035:8044	1095917	8	True				
ANR	1096086	AssignmentExpression	k = width		1095917	0		=			
ANR	1096087	Identifier	k		1095917	0					
ANR	1096088	Identifier	width		1095917	1					
ANR	1096089	IfStatement	if ( k > 0 )		1095917	9					
ANR	1096090	Condition	k > 0	230:12:8058:8062	1095917	0	True				
ANR	1096091	RelationalExpression	k > 0		1095917	0		>			
ANR	1096092	Identifier	k		1095917	0					
ANR	1096093	PrimaryExpression	0		1095917	1					
ANR	1096094	CompoundStatement		42:19:1274:1274	1095917	1					
ANR	1096095	DoStatement	do		1095917	0					
ANR	1096096	CompoundStatement		43:15:1291:1291	1095917	0					
ANR	1096097	IfStatement	if ( * contone_ptr ++ > * thresh_ptr ++ )		1095917	0					
ANR	1096098	Condition	* contone_ptr ++ > * thresh_ptr ++	232:20:8104:8133	1095917	0	True				
ANR	1096099	RelationalExpression	* contone_ptr ++ > * thresh_ptr ++		1095917	0		>			
ANR	1096100	UnaryOperationExpression	* contone_ptr ++		1095917	0					
ANR	1096101	UnaryOperator	*		1095917	0					
ANR	1096102	PostIncDecOperationExpression	contone_ptr ++		1095917	1					
ANR	1096103	Identifier	contone_ptr		1095917	0					
ANR	1096104	IncDec	++		1095917	1					
ANR	1096105	UnaryOperationExpression	* thresh_ptr ++		1095917	1					
ANR	1096106	UnaryOperator	*		1095917	0					
ANR	1096107	PostIncDecOperationExpression	thresh_ptr ++		1095917	1					
ANR	1096108	Identifier	thresh_ptr		1095917	0					
ANR	1096109	IncDec	++		1095917	1					
ANR	1096110	CompoundStatement		44:52:1345:1345	1095917	1					
ANR	1096111	ExpressionStatement	h |= bit_init	233:20:8158:8172	1095917	0	True				
ANR	1096112	AssignmentExpression	h |= bit_init		1095917	0		|=			
ANR	1096113	Identifier	h		1095917	0					
ANR	1096114	Identifier	bit_init		1095917	1					
ANR	1096115	ExpressionStatement	bit_init >>= 1	235:16:8208:8222	1095917	1	True				
ANR	1096116	AssignmentExpression	bit_init >>= 1		1095917	0		>>=			
ANR	1096117	Identifier	bit_init		1095917	0					
ANR	1096118	PrimaryExpression	1		1095917	1					
ANR	1096119	IfStatement	if ( bit_init == 0 )		1095917	2					
ANR	1096120	Condition	bit_init == 0	236:20:8244:8256	1095917	0	True				
ANR	1096121	EqualityExpression	bit_init == 0		1095917	0		==			
ANR	1096122	Identifier	bit_init		1095917	0					
ANR	1096123	PrimaryExpression	0		1095917	1					
ANR	1096124	CompoundStatement		48:35:1468:1468	1095917	1					
ANR	1096125	ExpressionStatement	bit_init = 0x80	237:20:8281:8296	1095917	0	True				
ANR	1096126	AssignmentExpression	bit_init = 0x80		1095917	0		=			
ANR	1096127	Identifier	bit_init		1095917	0					
ANR	1096128	PrimaryExpression	0x80		1095917	1					
ANR	1096129	ExpressionStatement	* halftone_ptr ++ = h	238:20:8318:8337	1095917	1	True				
ANR	1096130	AssignmentExpression	* halftone_ptr ++ = h		1095917	0		=			
ANR	1096131	UnaryOperationExpression	* halftone_ptr ++		1095917	0					
ANR	1096132	UnaryOperator	*		1095917	0					
ANR	1096133	PostIncDecOperationExpression	halftone_ptr ++		1095917	1					
ANR	1096134	Identifier	halftone_ptr		1095917	0					
ANR	1096135	IncDec	++		1095917	1					
ANR	1096136	Identifier	h		1095917	1					
ANR	1096137	ExpressionStatement	h = 0	239:20:8359:8364	1095917	2	True				
ANR	1096138	AssignmentExpression	h = 0		1095917	0		=			
ANR	1096139	Identifier	h		1095917	0					
ANR	1096140	PrimaryExpression	0		1095917	1					
ANR	1096141	ExpressionStatement	k --	241:16:8400:8403	1095917	3	True				
ANR	1096142	PostIncDecOperationExpression	k --		1095917	0					
ANR	1096143	Identifier	k		1095917	0					
ANR	1096144	IncDec	--		1095917	1					
ANR	1096145	Condition	k > 0	242:21:8426:8430	1095917	1	True				
ANR	1096146	RelationalExpression	k > 0		1095917	0		>			
ANR	1096147	Identifier	k		1095917	0					
ANR	1096148	PrimaryExpression	0		1095917	1					
ANR	1096149	IfStatement	if ( bit_init != 0x80 )		1095917	1					
ANR	1096150	Condition	bit_init != 0x80	243:16:8450:8465	1095917	0	True				
ANR	1096151	EqualityExpression	bit_init != 0x80		1095917	0		!=			
ANR	1096152	Identifier	bit_init		1095917	0					
ANR	1096153	PrimaryExpression	0x80		1095917	1					
ANR	1096154	CompoundStatement		55:34:1677:1677	1095917	1					
ANR	1096155	ExpressionStatement	* halftone_ptr ++ = h	244:16:8486:8505	1095917	0	True				
ANR	1096156	AssignmentExpression	* halftone_ptr ++ = h		1095917	0		=			
ANR	1096157	UnaryOperationExpression	* halftone_ptr ++		1095917	0					
ANR	1096158	UnaryOperator	*		1095917	0					
ANR	1096159	PostIncDecOperationExpression	halftone_ptr ++		1095917	1					
ANR	1096160	Identifier	halftone_ptr		1095917	0					
ANR	1096161	IncDec	++		1095917	1					
ANR	1096162	Identifier	h		1095917	1					
ANR	1096163	IfStatement	if ( ( width & 15 ) < 8 )		1095917	2					
ANR	1096164	Condition	( width & 15 ) < 8	246:16:8537:8552	1095917	0	True				
ANR	1096165	RelationalExpression	( width & 15 ) < 8		1095917	0		<			
ANR	1096166	BitAndExpression	width & 15		1095917	0		&			
ANR	1096167	Identifier	width		1095917	0					
ANR	1096168	PrimaryExpression	15		1095917	1					
ANR	1096169	PrimaryExpression	8		1095917	1					
ANR	1096170	ExpressionStatement	* halftone_ptr ++ = 0	247:16:8571:8590	1095917	1	True				
ANR	1096171	AssignmentExpression	* halftone_ptr ++ = 0		1095917	0		=			
ANR	1096172	UnaryOperationExpression	* halftone_ptr ++		1095917	0					
ANR	1096173	UnaryOperator	*		1095917	0					
ANR	1096174	PostIncDecOperationExpression	halftone_ptr ++		1095917	1					
ANR	1096175	Identifier	halftone_ptr		1095917	0					
ANR	1096176	IncDec	++		1095917	1					
ANR	1096177	PrimaryExpression	0		1095917	1					
ANR	1096178	ReturnType	void		1095917	1					
ANR	1096179	Identifier	gx_ht_threshold_row_bit_sub		1095917	2					
ANR	1096180	ParameterList	"byte * contone , byte * threshold_strip , int contone_stride , byte * halftone , int dithered_stride , int width , int num_rows , int offset_bits"		1095917	3					
ANR	1096181	Parameter	byte * contone	186:28:6615:6627	1095917	0	True				
ANR	1096182	ParameterType	byte *		1095917	0					
ANR	1096183	Identifier	contone		1095917	1					
ANR	1096184	Parameter	byte * threshold_strip	186:44:6631:6651	1095917	1	True				
ANR	1096185	ParameterType	byte *		1095917	0					
ANR	1096186	Identifier	threshold_strip		1095917	1					
ANR	1096187	Parameter	int contone_stride	186:68:6655:6672	1095917	2	True				
ANR	1096188	ParameterType	int		1095917	0					
ANR	1096189	Identifier	contone_stride		1095917	1					
ANR	1096190	Parameter	byte * halftone	187:18:6693:6706	1095917	3	True				
ANR	1096191	ParameterType	byte *		1095917	0					
ANR	1096192	Identifier	halftone		1095917	1					
ANR	1096193	Parameter	int dithered_stride	187:34:6709:6727	1095917	4	True				
ANR	1096194	ParameterType	int		1095917	0					
ANR	1096195	Identifier	dithered_stride		1095917	1					
ANR	1096196	Parameter	int width	187:55:6730:6738	1095917	5	True				
ANR	1096197	ParameterType	int		1095917	0					
ANR	1096198	Identifier	width		1095917	1					
ANR	1096199	Parameter	int num_rows	188:18:6759:6770	1095917	6	True				
ANR	1096200	ParameterType	int		1095917	0					
ANR	1096201	Identifier	num_rows		1095917	1					
ANR	1096202	Parameter	int offset_bits	188:32:6773:6787	1095917	7	True				
ANR	1096203	ParameterType	int		1095917	0					
ANR	1096204	Identifier	offset_bits		1095917	1					
ANR	1096205	CFGEntryNode	ENTRY		1095917		True				
ANR	1096206	CFGExitNode	EXIT		1095917		True				
ANR	1096207	Symbol	contone_stride		1095917						
ANR	1096208	Symbol	contone		1095917						
ANR	1096209	Symbol	* halftone_ptr ++		1095917						
ANR	1096210	Symbol	h		1095917						
ANR	1096211	Symbol	j		1095917						
ANR	1096212	Symbol	k		1095917						
ANR	1096213	Symbol	threshold_strip		1095917						
ANR	1096214	Symbol	* thresh_ptr ++		1095917						
ANR	1096215	Symbol	halftone		1095917						
ANR	1096216	Symbol	* contone_ptr ++		1095917						
ANR	1096217	Symbol	dithered_stride		1095917						
ANR	1096218	Symbol	halftone_ptr		1095917						
ANR	1096219	Symbol	width		1095917						
ANR	1096220	Symbol	num_rows		1095917						
ANR	1096221	Symbol	thresh_ptr		1095917						
ANR	1096222	Symbol	offset_bits		1095917						
ANR	1096223	Symbol	contone_ptr		1095917						
ANR	1096224	Symbol	bit_init		1095917						
ANR	1096225	Function	gx_ht_threshold_row_bit	290:0:10258:13849							
ANR	1096226	FunctionDef	"gx_ht_threshold_row_bit (byte * contone , byte * threshold_strip , int contone_stride , byte * halftone , int dithered_stride , int width , int num_rows , int offset_bits)"		1096225	0					
ANR	1096227	CompoundStatement		294:0:10462:13849	1096225	0					
ANR	1096228	IdentifierDeclStatement	"int k , j ;"	296:4:10486:10494	1096225	0	True				
ANR	1096229	IdentifierDecl	k		1096225	0					
ANR	1096230	IdentifierDeclType	int		1096225	0					
ANR	1096231	Identifier	k		1096225	1					
ANR	1096232	IdentifierDecl	j		1096225	1					
ANR	1096233	IdentifierDeclType	int		1096225	0					
ANR	1096234	Identifier	j		1096225	1					
ANR	1096235	IdentifierDeclStatement	byte * contone_ptr ;	297:4:10500:10517	1096225	1	True				
ANR	1096236	IdentifierDecl	* contone_ptr		1096225	0					
ANR	1096237	IdentifierDeclType	byte *		1096225	0					
ANR	1096238	Identifier	contone_ptr		1096225	1					
ANR	1096239	IdentifierDeclStatement	byte * thresh_ptr ;	298:4:10523:10539	1096225	2	True				
ANR	1096240	IdentifierDecl	* thresh_ptr		1096225	0					
ANR	1096241	IdentifierDeclType	byte *		1096225	0					
ANR	1096242	Identifier	thresh_ptr		1096225	1					
ANR	1096243	IdentifierDeclStatement	byte * halftone_ptr ;	299:4:10545:10563	1096225	3	True				
ANR	1096244	IdentifierDecl	* halftone_ptr		1096225	0					
ANR	1096245	IdentifierDeclType	byte *		1096225	0					
ANR	1096246	Identifier	halftone_ptr		1096225	1					
ANR	1096247	IdentifierDeclStatement	byte bit_init ;	300:4:10569:10582	1096225	4	True				
ANR	1096248	IdentifierDecl	bit_init		1096225	0					
ANR	1096249	IdentifierDeclType	byte		1096225	0					
ANR	1096250	Identifier	bit_init		1096225	1					
ANR	1096251	ExpressionStatement	width -= offset_bits	304:4:10722:10742	1096225	5	True				
ANR	1096252	AssignmentExpression	width -= offset_bits		1096225	0		-=			
ANR	1096253	Identifier	width		1096225	0					
ANR	1096254	Identifier	offset_bits		1096225	1					
ANR	1096255	ForStatement	for ( j = 0 ; j < num_rows ; j ++ )		1096225	6					
ANR	1096256	ForInit	j = 0 ;	305:9:10753:10758	1096225	0	True				
ANR	1096257	AssignmentExpression	j = 0		1096225	0		=			
ANR	1096258	Identifier	j		1096225	0					
ANR	1096259	PrimaryExpression	0		1096225	1					
ANR	1096260	Condition	j < num_rows	305:16:10760:10771	1096225	1	True				
ANR	1096261	RelationalExpression	j < num_rows		1096225	0		<			
ANR	1096262	Identifier	j		1096225	0					
ANR	1096263	Identifier	num_rows		1096225	1					
ANR	1096264	PostIncDecOperationExpression	j ++	305:30:10774:10776	1096225	2	True				
ANR	1096265	Identifier	j		1096225	0					
ANR	1096266	IncDec	++		1096225	1					
ANR	1096267	CompoundStatement		13:8:326:332	1096225	3					
ANR	1096268	IdentifierDeclStatement	byte h ;	306:8:10789:10795	1096225	0	True				
ANR	1096269	IdentifierDecl	h		1096225	0					
ANR	1096270	IdentifierDeclType	byte		1096225	0					
ANR	1096271	Identifier	h		1096225	1					
ANR	1096272	ExpressionStatement	contone_ptr = contone	307:8:10805:10826	1096225	1	True				
ANR	1096273	AssignmentExpression	contone_ptr = contone		1096225	0		=			
ANR	1096274	Identifier	contone_ptr		1096225	0					
ANR	1096275	Identifier	contone		1096225	1					
ANR	1096276	ExpressionStatement	thresh_ptr = threshold_strip + contone_stride * j	308:8:10836:10885	1096225	2	True				
ANR	1096277	AssignmentExpression	thresh_ptr = threshold_strip + contone_stride * j		1096225	0		=			
ANR	1096278	Identifier	thresh_ptr		1096225	0					
ANR	1096279	AdditiveExpression	threshold_strip + contone_stride * j		1096225	1		+			
ANR	1096280	Identifier	threshold_strip		1096225	0					
ANR	1096281	MultiplicativeExpression	contone_stride * j		1096225	1		*			
ANR	1096282	Identifier	contone_stride		1096225	0					
ANR	1096283	Identifier	j		1096225	1					
ANR	1096284	ExpressionStatement	halftone_ptr = halftone + dithered_stride * j	309:8:10895:10940	1096225	3	True				
ANR	1096285	AssignmentExpression	halftone_ptr = halftone + dithered_stride * j		1096225	0		=			
ANR	1096286	Identifier	halftone_ptr		1096225	0					
ANR	1096287	AdditiveExpression	halftone + dithered_stride * j		1096225	1		+			
ANR	1096288	Identifier	halftone		1096225	0					
ANR	1096289	MultiplicativeExpression	dithered_stride * j		1096225	1		*			
ANR	1096290	Identifier	dithered_stride		1096225	0					
ANR	1096291	Identifier	j		1096225	1					
ANR	1096292	ExpressionStatement	bit_init = 0x80	311:8:11031:11046	1096225	4	True				
ANR	1096293	AssignmentExpression	bit_init = 0x80		1096225	0		=			
ANR	1096294	Identifier	bit_init		1096225	0					
ANR	1096295	PrimaryExpression	0x80		1096225	1					
ANR	1096296	ExpressionStatement	h = 0	312:8:11056:11061	1096225	5	True				
ANR	1096297	AssignmentExpression	h = 0		1096225	0		=			
ANR	1096298	Identifier	h		1096225	0					
ANR	1096299	PrimaryExpression	0		1096225	1					
ANR	1096300	ExpressionStatement	k = offset_bits	313:8:11071:11086	1096225	6	True				
ANR	1096301	AssignmentExpression	k = offset_bits		1096225	0		=			
ANR	1096302	Identifier	k		1096225	0					
ANR	1096303	Identifier	offset_bits		1096225	1					
ANR	1096304	IfStatement	if ( k > 0 )		1096225	7					
ANR	1096305	Condition	k > 0	314:12:11100:11104	1096225	0	True				
ANR	1096306	RelationalExpression	k > 0		1096225	0		>			
ANR	1096307	Identifier	k		1096225	0					
ANR	1096308	PrimaryExpression	0		1096225	1					
ANR	1096309	CompoundStatement		21:19:644:644	1096225	1					
ANR	1096310	DoStatement	do		1096225	0					
ANR	1096311	CompoundStatement		22:15:661:661	1096225	0					
ANR	1096312	IfStatement	if ( * contone_ptr ++ < * thresh_ptr ++ )		1096225	0					
ANR	1096313	Condition	* contone_ptr ++ < * thresh_ptr ++	316:20:11146:11175	1096225	0	True				
ANR	1096314	RelationalExpression	* contone_ptr ++ < * thresh_ptr ++		1096225	0		<			
ANR	1096315	UnaryOperationExpression	* contone_ptr ++		1096225	0					
ANR	1096316	UnaryOperator	*		1096225	0					
ANR	1096317	PostIncDecOperationExpression	contone_ptr ++		1096225	1					
ANR	1096318	Identifier	contone_ptr		1096225	0					
ANR	1096319	IncDec	++		1096225	1					
ANR	1096320	UnaryOperationExpression	* thresh_ptr ++		1096225	1					
ANR	1096321	UnaryOperator	*		1096225	0					
ANR	1096322	PostIncDecOperationExpression	thresh_ptr ++		1096225	1					
ANR	1096323	Identifier	thresh_ptr		1096225	0					
ANR	1096324	IncDec	++		1096225	1					
ANR	1096325	CompoundStatement		23:52:715:715	1096225	1					
ANR	1096326	ExpressionStatement	h |= bit_init	317:20:11200:11214	1096225	0	True				
ANR	1096327	AssignmentExpression	h |= bit_init		1096225	0		|=			
ANR	1096328	Identifier	h		1096225	0					
ANR	1096329	Identifier	bit_init		1096225	1					
ANR	1096330	ExpressionStatement	bit_init >>= 1	319:16:11250:11264	1096225	1	True				
ANR	1096331	AssignmentExpression	bit_init >>= 1		1096225	0		>>=			
ANR	1096332	Identifier	bit_init		1096225	0					
ANR	1096333	PrimaryExpression	1		1096225	1					
ANR	1096334	IfStatement	if ( bit_init == 0 )		1096225	2					
ANR	1096335	Condition	bit_init == 0	320:20:11286:11298	1096225	0	True				
ANR	1096336	EqualityExpression	bit_init == 0		1096225	0		==			
ANR	1096337	Identifier	bit_init		1096225	0					
ANR	1096338	PrimaryExpression	0		1096225	1					
ANR	1096339	CompoundStatement		27:35:838:838	1096225	1					
ANR	1096340	ExpressionStatement	bit_init = 0x80	321:20:11323:11338	1096225	0	True				
ANR	1096341	AssignmentExpression	bit_init = 0x80		1096225	0		=			
ANR	1096342	Identifier	bit_init		1096225	0					
ANR	1096343	PrimaryExpression	0x80		1096225	1					
ANR	1096344	ExpressionStatement	* halftone_ptr ++ = h	322:20:11360:11379	1096225	1	True				
ANR	1096345	AssignmentExpression	* halftone_ptr ++ = h		1096225	0		=			
ANR	1096346	UnaryOperationExpression	* halftone_ptr ++		1096225	0					
ANR	1096347	UnaryOperator	*		1096225	0					
ANR	1096348	PostIncDecOperationExpression	halftone_ptr ++		1096225	1					
ANR	1096349	Identifier	halftone_ptr		1096225	0					
ANR	1096350	IncDec	++		1096225	1					
ANR	1096351	Identifier	h		1096225	1					
ANR	1096352	ExpressionStatement	h = 0	323:20:11401:11406	1096225	2	True				
ANR	1096353	AssignmentExpression	h = 0		1096225	0		=			
ANR	1096354	Identifier	h		1096225	0					
ANR	1096355	PrimaryExpression	0		1096225	1					
ANR	1096356	ExpressionStatement	k --	325:16:11442:11445	1096225	3	True				
ANR	1096357	PostIncDecOperationExpression	k --		1096225	0					
ANR	1096358	Identifier	k		1096225	0					
ANR	1096359	IncDec	--		1096225	1					
ANR	1096360	Condition	k > 0	326:21:11468:11472	1096225	1	True				
ANR	1096361	RelationalExpression	k > 0		1096225	0		>			
ANR	1096362	Identifier	k		1096225	0					
ANR	1096363	PrimaryExpression	0		1096225	1					
ANR	1096364	ExpressionStatement	bit_init = 0x80	327:12:11488:11503	1096225	1	True				
ANR	1096365	AssignmentExpression	bit_init = 0x80		1096225	0		=			
ANR	1096366	Identifier	bit_init		1096225	0					
ANR	1096367	PrimaryExpression	0x80		1096225	1					
ANR	1096368	ExpressionStatement	* halftone_ptr ++ = h	328:12:11517:11536	1096225	2	True				
ANR	1096369	AssignmentExpression	* halftone_ptr ++ = h		1096225	0		=			
ANR	1096370	UnaryOperationExpression	* halftone_ptr ++		1096225	0					
ANR	1096371	UnaryOperator	*		1096225	0					
ANR	1096372	PostIncDecOperationExpression	halftone_ptr ++		1096225	1					
ANR	1096373	Identifier	halftone_ptr		1096225	0					
ANR	1096374	IncDec	++		1096225	1					
ANR	1096375	Identifier	h		1096225	1					
ANR	1096376	ExpressionStatement	h = 0	329:12:11550:11555	1096225	3	True				
ANR	1096377	AssignmentExpression	h = 0		1096225	0		=			
ANR	1096378	Identifier	h		1096225	0					
ANR	1096379	PrimaryExpression	0		1096225	1					
ANR	1096380	IfStatement	if ( offset_bits < 8 )		1096225	4					
ANR	1096381	Condition	offset_bits < 8	330:16:11573:11587	1096225	0	True				
ANR	1096382	RelationalExpression	offset_bits < 8		1096225	0		<			
ANR	1096383	Identifier	offset_bits		1096225	0					
ANR	1096384	PrimaryExpression	8		1096225	1					
ANR	1096385	ExpressionStatement	* halftone_ptr ++ = 0	331:16:11606:11625	1096225	1	True				
ANR	1096386	AssignmentExpression	* halftone_ptr ++ = 0		1096225	0		=			
ANR	1096387	UnaryOperationExpression	* halftone_ptr ++		1096225	0					
ANR	1096388	UnaryOperator	*		1096225	0					
ANR	1096389	PostIncDecOperationExpression	halftone_ptr ++		1096225	1					
ANR	1096390	Identifier	halftone_ptr		1096225	0					
ANR	1096391	IncDec	++		1096225	1					
ANR	1096392	PrimaryExpression	0		1096225	1					
ANR	1096393	ExpressionStatement	k = width	334:8:11707:11716	1096225	8	True				
ANR	1096394	AssignmentExpression	k = width		1096225	0		=			
ANR	1096395	Identifier	k		1096225	0					
ANR	1096396	Identifier	width		1096225	1					
ANR	1096397	IfStatement	if ( k > 0 )		1096225	9					
ANR	1096398	Condition	k > 0	335:12:11730:11734	1096225	0	True				
ANR	1096399	RelationalExpression	k > 0		1096225	0		>			
ANR	1096400	Identifier	k		1096225	0					
ANR	1096401	PrimaryExpression	0		1096225	1					
ANR	1096402	CompoundStatement		42:19:1274:1274	1096225	1					
ANR	1096403	DoStatement	do		1096225	0					
ANR	1096404	CompoundStatement		43:15:1291:1291	1096225	0					
ANR	1096405	IfStatement	if ( * contone_ptr ++ < * thresh_ptr ++ )		1096225	0					
ANR	1096406	Condition	* contone_ptr ++ < * thresh_ptr ++	337:20:11776:11805	1096225	0	True				
ANR	1096407	RelationalExpression	* contone_ptr ++ < * thresh_ptr ++		1096225	0		<			
ANR	1096408	UnaryOperationExpression	* contone_ptr ++		1096225	0					
ANR	1096409	UnaryOperator	*		1096225	0					
ANR	1096410	PostIncDecOperationExpression	contone_ptr ++		1096225	1					
ANR	1096411	Identifier	contone_ptr		1096225	0					
ANR	1096412	IncDec	++		1096225	1					
ANR	1096413	UnaryOperationExpression	* thresh_ptr ++		1096225	1					
ANR	1096414	UnaryOperator	*		1096225	0					
ANR	1096415	PostIncDecOperationExpression	thresh_ptr ++		1096225	1					
ANR	1096416	Identifier	thresh_ptr		1096225	0					
ANR	1096417	IncDec	++		1096225	1					
ANR	1096418	CompoundStatement		44:52:1345:1345	1096225	1					
ANR	1096419	ExpressionStatement	h |= bit_init	338:20:11830:11844	1096225	0	True				
ANR	1096420	AssignmentExpression	h |= bit_init		1096225	0		|=			
ANR	1096421	Identifier	h		1096225	0					
ANR	1096422	Identifier	bit_init		1096225	1					
ANR	1096423	ExpressionStatement	bit_init >>= 1	340:16:11880:11894	1096225	1	True				
ANR	1096424	AssignmentExpression	bit_init >>= 1		1096225	0		>>=			
ANR	1096425	Identifier	bit_init		1096225	0					
ANR	1096426	PrimaryExpression	1		1096225	1					
ANR	1096427	IfStatement	if ( bit_init == 0 )		1096225	2					
ANR	1096428	Condition	bit_init == 0	341:20:11916:11928	1096225	0	True				
ANR	1096429	EqualityExpression	bit_init == 0		1096225	0		==			
ANR	1096430	Identifier	bit_init		1096225	0					
ANR	1096431	PrimaryExpression	0		1096225	1					
ANR	1096432	CompoundStatement		48:35:1468:1468	1096225	1					
ANR	1096433	ExpressionStatement	bit_init = 0x80	342:20:11953:11968	1096225	0	True				
ANR	1096434	AssignmentExpression	bit_init = 0x80		1096225	0		=			
ANR	1096435	Identifier	bit_init		1096225	0					
ANR	1096436	PrimaryExpression	0x80		1096225	1					
ANR	1096437	ExpressionStatement	* halftone_ptr ++ = h	343:20:11990:12009	1096225	1	True				
ANR	1096438	AssignmentExpression	* halftone_ptr ++ = h		1096225	0		=			
ANR	1096439	UnaryOperationExpression	* halftone_ptr ++		1096225	0					
ANR	1096440	UnaryOperator	*		1096225	0					
ANR	1096441	PostIncDecOperationExpression	halftone_ptr ++		1096225	1					
ANR	1096442	Identifier	halftone_ptr		1096225	0					
ANR	1096443	IncDec	++		1096225	1					
ANR	1096444	Identifier	h		1096225	1					
ANR	1096445	ExpressionStatement	h = 0	344:20:12031:12036	1096225	2	True				
ANR	1096446	AssignmentExpression	h = 0		1096225	0		=			
ANR	1096447	Identifier	h		1096225	0					
ANR	1096448	PrimaryExpression	0		1096225	1					
ANR	1096449	ExpressionStatement	k --	346:16:12072:12075	1096225	3	True				
ANR	1096450	PostIncDecOperationExpression	k --		1096225	0					
ANR	1096451	Identifier	k		1096225	0					
ANR	1096452	IncDec	--		1096225	1					
ANR	1096453	Condition	k > 0	347:21:12098:12102	1096225	1	True				
ANR	1096454	RelationalExpression	k > 0		1096225	0		>			
ANR	1096455	Identifier	k		1096225	0					
ANR	1096456	PrimaryExpression	0		1096225	1					
ANR	1096457	IfStatement	if ( bit_init != 0x80 )		1096225	1					
ANR	1096458	Condition	bit_init != 0x80	348:16:12122:12137	1096225	0	True				
ANR	1096459	EqualityExpression	bit_init != 0x80		1096225	0		!=			
ANR	1096460	Identifier	bit_init		1096225	0					
ANR	1096461	PrimaryExpression	0x80		1096225	1					
ANR	1096462	CompoundStatement		55:34:1677:1677	1096225	1					
ANR	1096463	ExpressionStatement	* halftone_ptr ++ = h	349:16:12158:12177	1096225	0	True				
ANR	1096464	AssignmentExpression	* halftone_ptr ++ = h		1096225	0		=			
ANR	1096465	UnaryOperationExpression	* halftone_ptr ++		1096225	0					
ANR	1096466	UnaryOperator	*		1096225	0					
ANR	1096467	PostIncDecOperationExpression	halftone_ptr ++		1096225	1					
ANR	1096468	Identifier	halftone_ptr		1096225	0					
ANR	1096469	IncDec	++		1096225	1					
ANR	1096470	Identifier	h		1096225	1					
ANR	1096471	IfStatement	if ( ( width & 15 ) < 8 )		1096225	2					
ANR	1096472	Condition	( width & 15 ) < 8	351:16:12209:12224	1096225	0	True				
ANR	1096473	RelationalExpression	( width & 15 ) < 8		1096225	0		<			
ANR	1096474	BitAndExpression	width & 15		1096225	0		&			
ANR	1096475	Identifier	width		1096225	0					
ANR	1096476	PrimaryExpression	15		1096225	1					
ANR	1096477	PrimaryExpression	8		1096225	1					
ANR	1096478	ExpressionStatement	* halftone_ptr ++ = 0	352:16:12243:12262	1096225	1	True				
ANR	1096479	AssignmentExpression	* halftone_ptr ++ = 0		1096225	0		=			
ANR	1096480	UnaryOperationExpression	* halftone_ptr ++		1096225	0					
ANR	1096481	UnaryOperator	*		1096225	0					
ANR	1096482	PostIncDecOperationExpression	halftone_ptr ++		1096225	1					
ANR	1096483	Identifier	halftone_ptr		1096225	0					
ANR	1096484	IncDec	++		1096225	1					
ANR	1096485	PrimaryExpression	0		1096225	1					
ANR	1096486	ReturnType	void		1096225	1					
ANR	1096487	Identifier	gx_ht_threshold_row_bit		1096225	2					
ANR	1096488	ParameterList	"byte * contone , byte * threshold_strip , int contone_stride , byte * halftone , int dithered_stride , int width , int num_rows , int offset_bits"		1096225	3					
ANR	1096489	Parameter	byte * contone	291:24:10287:10299	1096225	0	True				
ANR	1096490	ParameterType	byte *		1096225	0					
ANR	1096491	Identifier	contone		1096225	1					
ANR	1096492	Parameter	byte * threshold_strip	291:40:10303:10323	1096225	1	True				
ANR	1096493	ParameterType	byte *		1096225	0					
ANR	1096494	Identifier	threshold_strip		1096225	1					
ANR	1096495	Parameter	int contone_stride	291:64:10327:10344	1096225	2	True				
ANR	1096496	ParameterType	int		1096225	0					
ANR	1096497	Identifier	contone_stride		1096225	1					
ANR	1096498	Parameter	byte * halftone	292:18:10365:10378	1096225	3	True				
ANR	1096499	ParameterType	byte *		1096225	0					
ANR	1096500	Identifier	halftone		1096225	1					
ANR	1096501	Parameter	int dithered_stride	292:34:10381:10399	1096225	4	True				
ANR	1096502	ParameterType	int		1096225	0					
ANR	1096503	Identifier	dithered_stride		1096225	1					
ANR	1096504	Parameter	int width	292:55:10402:10410	1096225	5	True				
ANR	1096505	ParameterType	int		1096225	0					
ANR	1096506	Identifier	width		1096225	1					
ANR	1096507	Parameter	int num_rows	293:18:10431:10442	1096225	6	True				
ANR	1096508	ParameterType	int		1096225	0					
ANR	1096509	Identifier	num_rows		1096225	1					
ANR	1096510	Parameter	int offset_bits	293:32:10445:10459	1096225	7	True				
ANR	1096511	ParameterType	int		1096225	0					
ANR	1096512	Identifier	offset_bits		1096225	1					
ANR	1096513	CFGEntryNode	ENTRY		1096225		True				
ANR	1096514	CFGExitNode	EXIT		1096225		True				
ANR	1096515	Symbol	contone_stride		1096225						
ANR	1096516	Symbol	contone		1096225						
ANR	1096517	Symbol	* halftone_ptr ++		1096225						
ANR	1096518	Symbol	h		1096225						
ANR	1096519	Symbol	j		1096225						
ANR	1096520	Symbol	k		1096225						
ANR	1096521	Symbol	threshold_strip		1096225						
ANR	1096522	Symbol	* thresh_ptr ++		1096225						
ANR	1096523	Symbol	halftone		1096225						
ANR	1096524	Symbol	* contone_ptr ++		1096225						
ANR	1096525	Symbol	dithered_stride		1096225						
ANR	1096526	Symbol	halftone_ptr		1096225						
ANR	1096527	Symbol	width		1096225						
ANR	1096528	Symbol	num_rows		1096225						
ANR	1096529	Symbol	thresh_ptr		1096225						
ANR	1096530	Symbol	offset_bits		1096225						
ANR	1096531	Symbol	contone_ptr		1096225						
ANR	1096532	Symbol	bit_init		1096225						
ANR	1096533	Function	gx_ht_threshold_landscape_sub	396:0:13947:17146							
ANR	1096534	FunctionDef	"gx_ht_threshold_landscape_sub (byte * contone_align , byte * thresh_align , ht_landscape_info_t * ht_landscape , byte * halftone , int data_length)"		1096533	0					
ANR	1096535	CompoundStatement		400:0:14131:17146	1096533	0					
ANR	1096536	IdentifierDeclStatement	__align16 byte contone [ LAND_BITS ] ;	401:4:14137:14170	1096533	0	True				
ANR	1096537	IdentifierDecl	contone [ LAND_BITS ]		1096533	0					
ANR	1096538	IdentifierDeclType	__align16 byte [ LAND_BITS ]		1096533	0					
ANR	1096539	Identifier	contone		1096533	1					
ANR	1096540	Identifier	LAND_BITS		1096533	2					
ANR	1096541	IdentifierDeclStatement	"int position_start , position , curr_position ;"	402:4:14176:14219	1096533	1	True				
ANR	1096542	IdentifierDecl	position_start		1096533	0					
ANR	1096543	IdentifierDeclType	int		1096533	0					
ANR	1096544	Identifier	position_start		1096533	1					
ANR	1096545	IdentifierDecl	position		1096533	1					
ANR	1096546	IdentifierDeclType	int		1096533	0					
ANR	1096547	Identifier	position		1096533	1					
ANR	1096548	IdentifierDecl	curr_position		1096533	2					
ANR	1096549	IdentifierDeclType	int		1096533	0					
ANR	1096550	Identifier	curr_position		1096533	1					
ANR	1096551	IdentifierDeclStatement	int * widths = & ( ht_landscape -> widths [ 0 ] ) ;	403:4:14225:14265	1096533	2	True				
ANR	1096552	IdentifierDecl	* widths = & ( ht_landscape -> widths [ 0 ] )		1096533	0					
ANR	1096553	IdentifierDeclType	int *		1096533	0					
ANR	1096554	Identifier	widths		1096533	1					
ANR	1096555	AssignmentExpression	* widths = & ( ht_landscape -> widths [ 0 ] )		1096533	2		=			
ANR	1096556	Identifier	widths		1096533	0					
ANR	1096557	UnaryOperationExpression	& ( ht_landscape -> widths [ 0 ] )		1096533	1					
ANR	1096558	UnaryOperator	&		1096533	0					
ANR	1096559	ArrayIndexing	ht_landscape -> widths [ 0 ]		1096533	1					
ANR	1096560	PtrMemberAccess	ht_landscape -> widths		1096533	0					
ANR	1096561	Identifier	ht_landscape		1096533	0					
ANR	1096562	Identifier	widths		1096533	1					
ANR	1096563	PrimaryExpression	0		1096533	1					
ANR	1096564	IdentifierDeclStatement	int local_widths [ LAND_BITS ] ;	404:4:14271:14298	1096533	3	True				
ANR	1096565	IdentifierDecl	local_widths [ LAND_BITS ]		1096533	0					
ANR	1096566	IdentifierDeclType	int [ LAND_BITS ]		1096533	0					
ANR	1096567	Identifier	local_widths		1096533	1					
ANR	1096568	Identifier	LAND_BITS		1096533	2					
ANR	1096569	IdentifierDeclStatement	int num_contone = ht_landscape -> num_contones ;	405:4:14304:14348	1096533	4	True				
ANR	1096570	IdentifierDecl	num_contone = ht_landscape -> num_contones		1096533	0					
ANR	1096571	IdentifierDeclType	int		1096533	0					
ANR	1096572	Identifier	num_contone		1096533	1					
ANR	1096573	AssignmentExpression	num_contone = ht_landscape -> num_contones		1096533	2		=			
ANR	1096574	Identifier	num_contone		1096533	0					
ANR	1096575	PtrMemberAccess	ht_landscape -> num_contones		1096533	1					
ANR	1096576	Identifier	ht_landscape		1096533	0					
ANR	1096577	Identifier	num_contones		1096533	1					
ANR	1096578	IdentifierDeclStatement	"int k , j , w , contone_out_posit ;"	406:4:14354:14384	1096533	5	True				
ANR	1096579	IdentifierDecl	k		1096533	0					
ANR	1096580	IdentifierDeclType	int		1096533	0					
ANR	1096581	Identifier	k		1096533	1					
ANR	1096582	IdentifierDecl	j		1096533	1					
ANR	1096583	IdentifierDeclType	int		1096533	0					
ANR	1096584	Identifier	j		1096533	1					
ANR	1096585	IdentifierDecl	w		1096533	2					
ANR	1096586	IdentifierDeclType	int		1096533	0					
ANR	1096587	Identifier	w		1096533	1					
ANR	1096588	IdentifierDecl	contone_out_posit		1096533	3					
ANR	1096589	IdentifierDeclType	int		1096533	0					
ANR	1096590	Identifier	contone_out_posit		1096533	1					
ANR	1096591	IdentifierDeclStatement	"byte * contone_ptr , * thresh_ptr , * halftone_ptr ;"	407:4:14390:14435	1096533	6	True				
ANR	1096592	IdentifierDecl	* contone_ptr		1096533	0					
ANR	1096593	IdentifierDeclType	byte *		1096533	0					
ANR	1096594	Identifier	contone_ptr		1096533	1					
ANR	1096595	IdentifierDecl	* thresh_ptr		1096533	1					
ANR	1096596	IdentifierDeclType	byte *		1096533	0					
ANR	1096597	Identifier	thresh_ptr		1096533	1					
ANR	1096598	IdentifierDecl	* halftone_ptr		1096533	2					
ANR	1096599	IdentifierDeclType	byte *		1096533	0					
ANR	1096600	Identifier	halftone_ptr		1096533	1					
ANR	1096601	IdentifierDeclStatement	int extra = 0 ;	409:4:14464:14477	1096533	7	True				
ANR	1096602	IdentifierDecl	extra = 0		1096533	0					
ANR	1096603	IdentifierDeclType	int		1096533	0					
ANR	1096604	Identifier	extra		1096533	1					
ANR	1096605	AssignmentExpression	extra = 0		1096533	2		=			
ANR	1096606	Identifier	extra		1096533	0					
ANR	1096607	PrimaryExpression	0		1096533	1					
ANR	1096608	IfStatement	if ( ht_landscape -> index > 0 )		1096533	8					
ANR	1096609	Condition	ht_landscape -> index > 0	414:8:14597:14619	1096533	0	True				
ANR	1096610	RelationalExpression	ht_landscape -> index > 0		1096533	0		>			
ANR	1096611	PtrMemberAccess	ht_landscape -> index		1096533	0					
ANR	1096612	Identifier	ht_landscape		1096533	0					
ANR	1096613	Identifier	index		1096533	1					
ANR	1096614	PrimaryExpression	0		1096533	1					
ANR	1096615	CompoundStatement		15:33:490:490	1096533	1					
ANR	1096616	ExpressionStatement	position = position_start = 0	415:8:14632:14661	1096533	0	True				
ANR	1096617	AssignmentExpression	position = position_start = 0		1096533	0		=			
ANR	1096618	Identifier	position		1096533	0					
ANR	1096619	AssignmentExpression	position_start = 0		1096533	1		=			
ANR	1096620	Identifier	position_start		1096533	0					
ANR	1096621	PrimaryExpression	0		1096533	1					
ANR	1096622	ElseStatement	else		1096533	0					
ANR	1096623	CompoundStatement		17:11:542:542	1096533	0					
ANR	1096624	ExpressionStatement	position = position_start = ht_landscape -> curr_pos + 1	417:8:14684:14738	1096533	0	True				
ANR	1096625	AssignmentExpression	position = position_start = ht_landscape -> curr_pos + 1		1096533	0		=			
ANR	1096626	Identifier	position		1096533	0					
ANR	1096627	AssignmentExpression	position_start = ht_landscape -> curr_pos + 1		1096533	1		=			
ANR	1096628	Identifier	position_start		1096533	0					
ANR	1096629	AdditiveExpression	ht_landscape -> curr_pos + 1		1096533	1		+			
ANR	1096630	PtrMemberAccess	ht_landscape -> curr_pos		1096533	0					
ANR	1096631	Identifier	ht_landscape		1096533	0					
ANR	1096632	Identifier	curr_pos		1096533	1					
ANR	1096633	PrimaryExpression	1		1096533	1					
ANR	1096634	ExpressionStatement	thresh_ptr = thresh_align	419:4:14750:14775	1096533	9	True				
ANR	1096635	AssignmentExpression	thresh_ptr = thresh_align		1096533	0		=			
ANR	1096636	Identifier	thresh_ptr		1096533	0					
ANR	1096637	Identifier	thresh_align		1096533	1					
ANR	1096638	ExpressionStatement	halftone_ptr = halftone	420:4:14781:14804	1096533	10	True				
ANR	1096639	AssignmentExpression	halftone_ptr = halftone		1096533	0		=			
ANR	1096640	Identifier	halftone_ptr		1096533	0					
ANR	1096641	Identifier	halftone		1096533	1					
ANR	1096642	ExpressionStatement	k = 0	423:4:14930:14935	1096533	11	True				
ANR	1096643	AssignmentExpression	k = 0		1096533	0		=			
ANR	1096644	Identifier	k		1096533	0					
ANR	1096645	PrimaryExpression	0		1096533	1					
ANR	1096646	ForStatement	for ( j = 0 ; j < num_contone ; j ++ )		1096533	12					
ANR	1096647	ForInit	j = 0 ;	424:9:14946:14951	1096533	0	True				
ANR	1096648	AssignmentExpression	j = 0		1096533	0		=			
ANR	1096649	Identifier	j		1096533	0					
ANR	1096650	PrimaryExpression	0		1096533	1					
ANR	1096651	Condition	j < num_contone	424:16:14953:14967	1096533	1	True				
ANR	1096652	RelationalExpression	j < num_contone		1096533	0		<			
ANR	1096653	Identifier	j		1096533	0					
ANR	1096654	Identifier	num_contone		1096533	1					
ANR	1096655	PostIncDecOperationExpression	j ++	424:33:14970:14972	1096533	2	True				
ANR	1096656	Identifier	j		1096533	0					
ANR	1096657	IncDec	++		1096533	1					
ANR	1096658	ExpressionStatement	k += ( local_widths [ j ] = widths [ position_start + j ] )	425:8:14983:15032	1096533	3	True				
ANR	1096659	AssignmentExpression	k += ( local_widths [ j ] = widths [ position_start + j ] )		1096533	0		+=			
ANR	1096660	Identifier	k		1096533	0					
ANR	1096661	AssignmentExpression	local_widths [ j ] = widths [ position_start + j ]		1096533	1		=			
ANR	1096662	ArrayIndexing	local_widths [ j ]		1096533	0					
ANR	1096663	Identifier	local_widths		1096533	0					
ANR	1096664	Identifier	j		1096533	1					
ANR	1096665	ArrayIndexing	widths [ position_start + j ]		1096533	1					
ANR	1096666	Identifier	widths		1096533	0					
ANR	1096667	AdditiveExpression	position_start + j		1096533	1		+			
ANR	1096668	Identifier	position_start		1096533	0					
ANR	1096669	Identifier	j		1096533	1					
ANR	1096670	IfStatement	if ( k > LAND_BITS )		1096533	13					
ANR	1096671	Condition	k > LAND_BITS	426:8:15042:15054	1096533	0	True				
ANR	1096672	RelationalExpression	k > LAND_BITS		1096533	0		>			
ANR	1096673	Identifier	k		1096533	0					
ANR	1096674	Identifier	LAND_BITS		1096533	1					
ANR	1096675	CompoundStatement		27:23:925:925	1096533	1					
ANR	1096676	IfStatement	if ( ht_landscape -> index > 0 )		1096533	0					
ANR	1096677	Condition	ht_landscape -> index > 0	427:12:15071:15093	1096533	0	True				
ANR	1096678	RelationalExpression	ht_landscape -> index > 0		1096533	0		>			
ANR	1096679	PtrMemberAccess	ht_landscape -> index		1096533	0					
ANR	1096680	Identifier	ht_landscape		1096533	0					
ANR	1096681	Identifier	index		1096533	1					
ANR	1096682	PrimaryExpression	0		1096533	1					
ANR	1096683	CompoundStatement		28:37:964:964	1096533	1					
ANR	1096684	ExpressionStatement	local_widths [ num_contone - 1 ] -= k - LAND_BITS	428:12:15110:15152	1096533	0	True				
ANR	1096685	AssignmentExpression	local_widths [ num_contone - 1 ] -= k - LAND_BITS		1096533	0		-=			
ANR	1096686	ArrayIndexing	local_widths [ num_contone - 1 ]		1096533	0					
ANR	1096687	Identifier	local_widths		1096533	0					
ANR	1096688	AdditiveExpression	num_contone - 1		1096533	1		-			
ANR	1096689	Identifier	num_contone		1096533	0					
ANR	1096690	PrimaryExpression	1		1096533	1					
ANR	1096691	AdditiveExpression	k - LAND_BITS		1096533	1		-			
ANR	1096692	Identifier	k		1096533	0					
ANR	1096693	Identifier	LAND_BITS		1096533	1					
ANR	1096694	ElseStatement	else		1096533	0					
ANR	1096695	CompoundStatement		30:15:1037:1037	1096533	0					
ANR	1096696	ExpressionStatement	local_widths [ 0 ] -= k - LAND_BITS	430:12:15183:15213	1096533	0	True				
ANR	1096697	AssignmentExpression	local_widths [ 0 ] -= k - LAND_BITS		1096533	0		-=			
ANR	1096698	ArrayIndexing	local_widths [ 0 ]		1096533	0					
ANR	1096699	Identifier	local_widths		1096533	0					
ANR	1096700	PrimaryExpression	0		1096533	1					
ANR	1096701	AdditiveExpression	k - LAND_BITS		1096533	1		-			
ANR	1096702	Identifier	k		1096533	0					
ANR	1096703	Identifier	LAND_BITS		1096533	1					
ANR	1096704	IfStatement	if ( k < LAND_BITS )		1096533	14					
ANR	1096705	Condition	k < LAND_BITS	434:8:15262:15274	1096533	0	True				
ANR	1096706	RelationalExpression	k < LAND_BITS		1096533	0		<			
ANR	1096707	Identifier	k		1096533	0					
ANR	1096708	Identifier	LAND_BITS		1096533	1					
ANR	1096709	CompoundStatement		35:23:1145:1145	1096533	1					
ANR	1096710	ExpressionStatement	extra = LAND_BITS - k	435:8:15287:15308	1096533	0	True				
ANR	1096711	AssignmentExpression	extra = LAND_BITS - k		1096533	0		=			
ANR	1096712	Identifier	extra		1096533	0					
ANR	1096713	AdditiveExpression	LAND_BITS - k		1096533	1		-			
ANR	1096714	Identifier	LAND_BITS		1096533	0					
ANR	1096715	Identifier	k		1096533	1					
ANR	1096716	ForStatement	for ( k = data_length ; k > 0 ; k -- )		1096533	15					
ANR	1096717	ForInit	k = data_length ;	438:9:15332:15347	1096533	0	True				
ANR	1096718	AssignmentExpression	k = data_length		1096533	0		=			
ANR	1096719	Identifier	k		1096533	0					
ANR	1096720	Identifier	data_length		1096533	1					
ANR	1096721	Condition	k > 0	438:26:15349:15353	1096533	1	True				
ANR	1096722	RelationalExpression	k > 0		1096533	0		>			
ANR	1096723	Identifier	k		1096533	0					
ANR	1096724	PrimaryExpression	0		1096533	1					
ANR	1096725	PostIncDecOperationExpression	k --	438:33:15356:15358	1096533	2	True				
ANR	1096726	Identifier	k		1096533	0					
ANR	1096727	IncDec	--		1096533	1					
ANR	1096728	CompoundStatement		39:38:1229:1229	1096533	3					
ANR	1096729	ExpressionStatement	contone_ptr = & ( contone_align [ position ] )	439:8:15390:15430	1096533	0	True				
ANR	1096730	AssignmentExpression	contone_ptr = & ( contone_align [ position ] )		1096533	0		=			
ANR	1096731	Identifier	contone_ptr		1096533	0					
ANR	1096732	UnaryOperationExpression	& ( contone_align [ position ] )		1096533	1					
ANR	1096733	UnaryOperator	&		1096533	0					
ANR	1096734	ArrayIndexing	contone_align [ position ]		1096533	1					
ANR	1096735	Identifier	contone_align		1096533	0					
ANR	1096736	Identifier	position		1096533	1					
ANR	1096737	ExpressionStatement	curr_position = 0	440:8:15472:15489	1096533	1	True				
ANR	1096738	AssignmentExpression	curr_position = 0		1096533	0		=			
ANR	1096739	Identifier	curr_position		1096533	0					
ANR	1096740	PrimaryExpression	0		1096533	1					
ANR	1096741	ExpressionStatement	contone_out_posit = 0	441:8:15544:15565	1096533	2	True				
ANR	1096742	AssignmentExpression	contone_out_posit = 0		1096533	0		=			
ANR	1096743	Identifier	contone_out_posit		1096533	0					
ANR	1096744	PrimaryExpression	0		1096533	1					
ANR	1096745	ForStatement	for ( j = num_contone ; j > 0 ; j -- )		1096533	3					
ANR	1096746	ForInit	j = num_contone ;	442:13:15600:15615	1096533	0	True				
ANR	1096747	AssignmentExpression	j = num_contone		1096533	0		=			
ANR	1096748	Identifier	j		1096533	0					
ANR	1096749	Identifier	num_contone		1096533	1					
ANR	1096750	Condition	j > 0	442:30:15617:15621	1096533	1	True				
ANR	1096751	RelationalExpression	j > 0		1096533	0		>			
ANR	1096752	Identifier	j		1096533	0					
ANR	1096753	PrimaryExpression	0		1096533	1					
ANR	1096754	PostIncDecOperationExpression	j --	442:37:15624:15626	1096533	2	True				
ANR	1096755	Identifier	j		1096533	0					
ANR	1096756	IncDec	--		1096533	1					
ANR	1096757	CompoundStatement		44:12:1511:1532	1096533	3					
ANR	1096758	IdentifierDeclStatement	byte c = * contone_ptr ;	443:12:15643:15664	1096533	0	True				
ANR	1096759	IdentifierDecl	c = * contone_ptr		1096533	0					
ANR	1096760	IdentifierDeclType	byte		1096533	0					
ANR	1096761	Identifier	c		1096533	1					
ANR	1096762	AssignmentExpression	c = * contone_ptr		1096533	2		=			
ANR	1096763	Identifier	c		1096533	0					
ANR	1096764	UnaryOperationExpression	* contone_ptr		1096533	1					
ANR	1096765	UnaryOperator	*		1096533	0					
ANR	1096766	Identifier	contone_ptr		1096533	1					
ANR	1096767	ExpressionStatement	w = local_widths [ curr_position ]	449:12:16066:16097	1096533	1	True				
ANR	1096768	AssignmentExpression	w = local_widths [ curr_position ]		1096533	0		=			
ANR	1096769	Identifier	w		1096533	0					
ANR	1096770	ArrayIndexing	local_widths [ curr_position ]		1096533	1					
ANR	1096771	Identifier	local_widths		1096533	0					
ANR	1096772	Identifier	curr_position		1096533	1					
ANR	1096773	DoStatement	do		1096533	2					
ANR	1096774	CompoundStatement		51:15:1982:1982	1096533	0					
ANR	1096775	ExpressionStatement	( ( volatile byte * ) contone ) [ contone_out_posit ] = c	451:16:16132:16181	1096533	0	True				
ANR	1096776	AssignmentExpression	( ( volatile byte * ) contone ) [ contone_out_posit ] = c		1096533	0		=			
ANR	1096777	ArrayIndexing	( ( volatile byte * ) contone ) [ contone_out_posit ]		1096533	0					
ANR	1096778	CastExpression	( volatile byte * ) contone		1096533	0					
ANR	1096779	CastTarget	volatile byte *		1096533	0					
ANR	1096780	Identifier	contone		1096533	1					
ANR	1096781	Identifier	contone_out_posit		1096533	1					
ANR	1096782	Identifier	c		1096533	1					
ANR	1096783	ExpressionStatement	contone_out_posit ++	452:16:16199:16218	1096533	1	True				
ANR	1096784	PostIncDecOperationExpression	contone_out_posit ++		1096533	0					
ANR	1096785	Identifier	contone_out_posit		1096533	0					
ANR	1096786	IncDec	++		1096533	1					
ANR	1096787	Condition	-- w	453:21:16241:16243	1096533	1	True				
ANR	1096788	UnaryExpression	-- w		1096533	0					
ANR	1096789	IncDec	--		1096533	0					
ANR	1096790	Identifier	w		1096533	1					
ANR	1096791	IfStatement	if ( extra )		1096533	3					
ANR	1096792	Condition	extra	455:16:16286:16290	1096533	0	True				
ANR	1096793	Identifier	extra		1096533	0					
ANR	1096794	ExpressionStatement	"memset ( contone + contone_out_posit , 0 , extra )"	456:16:16309:16352	1096533	1	True				
ANR	1096795	CallExpression	"memset ( contone + contone_out_posit , 0 , extra )"		1096533	0					
ANR	1096796	Callee	memset		1096533	0					
ANR	1096797	Identifier	memset		1096533	0					
ANR	1096798	ArgumentList	contone + contone_out_posit		1096533	1					
ANR	1096799	Argument	contone + contone_out_posit		1096533	0					
ANR	1096800	AdditiveExpression	contone + contone_out_posit		1096533	0		+			
ANR	1096801	Identifier	contone		1096533	0					
ANR	1096802	Identifier	contone_out_posit		1096533	1					
ANR	1096803	Argument	0		1096533	1					
ANR	1096804	PrimaryExpression	0		1096533	0					
ANR	1096805	Argument	extra		1096533	2					
ANR	1096806	Identifier	extra		1096533	0					
ANR	1096807	ExpressionStatement	curr_position ++	458:12:16373:16388	1096533	4	True				
ANR	1096808	PostIncDecOperationExpression	curr_position ++		1096533	0					
ANR	1096809	Identifier	curr_position		1096533	0					
ANR	1096810	IncDec	++		1096533	1					
ANR	1096811	ExpressionStatement	contone_ptr ++	459:12:16456:16469	1096533	5	True				
ANR	1096812	PostIncDecOperationExpression	contone_ptr ++		1096533	0					
ANR	1096813	Identifier	contone_ptr		1096533	0					
ANR	1096814	IncDec	++		1096533	1					
ANR	1096815	ExpressionStatement	contone_ptr = & contone [ 0 ]	463:8:16691:16716	1096533	4	True				
ANR	1096816	AssignmentExpression	contone_ptr = & contone [ 0 ]		1096533	0		=			
ANR	1096817	Identifier	contone_ptr		1096533	0					
ANR	1096818	UnaryOperationExpression	& contone [ 0 ]		1096533	1					
ANR	1096819	UnaryOperator	&		1096533	0					
ANR	1096820	ArrayIndexing	contone [ 0 ]		1096533	1					
ANR	1096821	Identifier	contone		1096533	0					
ANR	1096822	PrimaryExpression	0		1096533	1					
ANR	1096823	ExpressionStatement	j = LAND_BITS	465:8:16745:16758	1096533	5	True				
ANR	1096824	AssignmentExpression	j = LAND_BITS		1096533	0		=			
ANR	1096825	Identifier	j		1096533	0					
ANR	1096826	Identifier	LAND_BITS		1096533	1					
ANR	1096827	DoStatement	do		1096533	6					
ANR	1096828	CompoundStatement		67:11:2639:2639	1096533	0					
ANR	1096829	ExpressionStatement	"threshold_16_SSE ( thresh_ptr , contone_ptr , halftone_ptr )"	469:12:16809:16864	1096533	0	True				
ANR	1096830	CallExpression	"threshold_16_SSE ( thresh_ptr , contone_ptr , halftone_ptr )"		1096533	0					
ANR	1096831	Callee	threshold_16_SSE		1096533	0					
ANR	1096832	Identifier	threshold_16_SSE		1096533	0					
ANR	1096833	ArgumentList	thresh_ptr		1096533	1					
ANR	1096834	Argument	thresh_ptr		1096533	0					
ANR	1096835	Identifier	thresh_ptr		1096533	0					
ANR	1096836	Argument	contone_ptr		1096533	1					
ANR	1096837	Identifier	contone_ptr		1096533	0					
ANR	1096838	Argument	halftone_ptr		1096533	2					
ANR	1096839	Identifier	halftone_ptr		1096533	0					
ANR	1096840	ExpressionStatement	thresh_ptr += 16	473:12:16960:16976	1096533	1	True				
ANR	1096841	AssignmentExpression	thresh_ptr += 16		1096533	0		+=			
ANR	1096842	Identifier	thresh_ptr		1096533	0					
ANR	1096843	PrimaryExpression	16		1096533	1					
ANR	1096844	ExpressionStatement	position += 16	474:12:16990:17004	1096533	2	True				
ANR	1096845	AssignmentExpression	position += 16		1096533	0		+=			
ANR	1096846	Identifier	position		1096533	0					
ANR	1096847	PrimaryExpression	16		1096533	1					
ANR	1096848	ExpressionStatement	halftone_ptr += 2	475:12:17018:17035	1096533	3	True				
ANR	1096849	AssignmentExpression	halftone_ptr += 2		1096533	0		+=			
ANR	1096850	Identifier	halftone_ptr		1096533	0					
ANR	1096851	PrimaryExpression	2		1096533	1					
ANR	1096852	ExpressionStatement	contone_ptr += 16	476:12:17049:17066	1096533	4	True				
ANR	1096853	AssignmentExpression	contone_ptr += 16		1096533	0		+=			
ANR	1096854	Identifier	contone_ptr		1096533	0					
ANR	1096855	PrimaryExpression	16		1096533	1					
ANR	1096856	ExpressionStatement	j -= 16	478:12:17099:17106	1096533	5	True				
ANR	1096857	AssignmentExpression	j -= 16		1096533	0		-=			
ANR	1096858	Identifier	j		1096533	0					
ANR	1096859	PrimaryExpression	16		1096533	1					
ANR	1096860	Condition	j > 0	479:17:17125:17129	1096533	1	True				
ANR	1096861	RelationalExpression	j > 0		1096533	0		>			
ANR	1096862	Identifier	j		1096533	0					
ANR	1096863	PrimaryExpression	0		1096533	1					
ANR	1096864	ReturnType	void		1096533	1					
ANR	1096865	Identifier	gx_ht_threshold_landscape_sub		1096533	2					
ANR	1096866	ParameterList	"byte * contone_align , byte * thresh_align , ht_landscape_info_t * ht_landscape , byte * halftone , int data_length"		1096533	3					
ANR	1096867	Parameter	byte * contone_align	397:30:13982:14000	1096533	0	True				
ANR	1096868	ParameterType	byte *		1096533	0					
ANR	1096869	Identifier	contone_align		1096533	1					
ANR	1096870	Parameter	byte * thresh_align	397:51:14003:14020	1096533	1	True				
ANR	1096871	ParameterType	byte *		1096533	0					
ANR	1096872	Identifier	thresh_align		1096533	1					
ANR	1096873	Parameter	ht_landscape_info_t * ht_landscape	398:20:14043:14075	1096533	2	True				
ANR	1096874	ParameterType	ht_landscape_info_t *		1096533	0					
ANR	1096875	Identifier	ht_landscape		1096533	1					
ANR	1096876	Parameter	byte * halftone	398:55:14078:14091	1096533	3	True				
ANR	1096877	ParameterType	byte *		1096533	0					
ANR	1096878	Identifier	halftone		1096533	1					
ANR	1096879	Parameter	int data_length	399:20:14114:14128	1096533	4	True				
ANR	1096880	ParameterType	int		1096533	0					
ANR	1096881	Identifier	data_length		1096533	1					
ANR	1096882	CFGEntryNode	ENTRY		1096533		True				
ANR	1096883	CFGExitNode	EXIT		1096533		True				
ANR	1096884	Symbol	contone		1096533						
ANR	1096885	Symbol	num_contone		1096533						
ANR	1096886	Symbol	curr_position		1096533						
ANR	1096887	Symbol	position_start		1096533						
ANR	1096888	Symbol	extra		1096533						
ANR	1096889	Symbol	ht_landscape		1096533						
ANR	1096890	Symbol	ht_landscape -> curr_pos		1096533						
ANR	1096891	Symbol	* position_start		1096533						
ANR	1096892	Symbol	LAND_BITS		1096533						
ANR	1096893	Symbol	* contone_ptr		1096533						
ANR	1096894	Symbol	contone_align		1096533						
ANR	1096895	Symbol	contone_ptr		1096533						
ANR	1096896	Symbol	* local_widths		1096533						
ANR	1096897	Symbol	* widths		1096533						
ANR	1096898	Symbol	c		1096533						
ANR	1096899	Symbol	ht_landscape -> index		1096533						
ANR	1096900	Symbol	* contone_out_posit		1096533						
ANR	1096901	Symbol	data_length		1096533						
ANR	1096902	Symbol	local_widths		1096533						
ANR	1096903	Symbol	* ht_landscape		1096533						
ANR	1096904	Symbol	ht_landscape -> widths		1096533						
ANR	1096905	Symbol	* contone		1096533						
ANR	1096906	Symbol	widths		1096533						
ANR	1096907	Symbol	j		1096533						
ANR	1096908	Symbol	k		1096533						
ANR	1096909	Symbol	ht_landscape -> num_contones		1096533						
ANR	1096910	Symbol	halftone		1096533						
ANR	1096911	Symbol	thresh_align		1096533						
ANR	1096912	Symbol	halftone_ptr		1096533						
ANR	1096913	Symbol	* j		1096533						
ANR	1096914	Symbol	* num_contone		1096533						
ANR	1096915	Symbol	w		1096533						
ANR	1096916	Symbol	thresh_ptr		1096533						
ANR	1096917	Symbol	* curr_position		1096533						
ANR	1096918	Symbol	contone_out_posit		1096533						
ANR	1096919	Symbol	position		1096533						
ANR	1096920	Function	gx_ht_threshold_landscape	487:0:17332:20527							
ANR	1096921	FunctionDef	"gx_ht_threshold_landscape (byte * contone_align , byte * thresh_align , ht_landscape_info_t * ht_landscape , byte * halftone , int data_length)"		1096920	0					
ANR	1096922	CompoundStatement		491:0:17512:20527	1096920	0					
ANR	1096923	IdentifierDeclStatement	__align16 byte contone [ LAND_BITS ] ;	492:4:17518:17551	1096920	0	True				
ANR	1096924	IdentifierDecl	contone [ LAND_BITS ]		1096920	0					
ANR	1096925	IdentifierDeclType	__align16 byte [ LAND_BITS ]		1096920	0					
ANR	1096926	Identifier	contone		1096920	1					
ANR	1096927	Identifier	LAND_BITS		1096920	2					
ANR	1096928	IdentifierDeclStatement	"int position_start , position , curr_position ;"	493:4:17557:17600	1096920	1	True				
ANR	1096929	IdentifierDecl	position_start		1096920	0					
ANR	1096930	IdentifierDeclType	int		1096920	0					
ANR	1096931	Identifier	position_start		1096920	1					
ANR	1096932	IdentifierDecl	position		1096920	1					
ANR	1096933	IdentifierDeclType	int		1096920	0					
ANR	1096934	Identifier	position		1096920	1					
ANR	1096935	IdentifierDecl	curr_position		1096920	2					
ANR	1096936	IdentifierDeclType	int		1096920	0					
ANR	1096937	Identifier	curr_position		1096920	1					
ANR	1096938	IdentifierDeclStatement	int * widths = & ( ht_landscape -> widths [ 0 ] ) ;	494:4:17606:17646	1096920	2	True				
ANR	1096939	IdentifierDecl	* widths = & ( ht_landscape -> widths [ 0 ] )		1096920	0					
ANR	1096940	IdentifierDeclType	int *		1096920	0					
ANR	1096941	Identifier	widths		1096920	1					
ANR	1096942	AssignmentExpression	* widths = & ( ht_landscape -> widths [ 0 ] )		1096920	2		=			
ANR	1096943	Identifier	widths		1096920	0					
ANR	1096944	UnaryOperationExpression	& ( ht_landscape -> widths [ 0 ] )		1096920	1					
ANR	1096945	UnaryOperator	&		1096920	0					
ANR	1096946	ArrayIndexing	ht_landscape -> widths [ 0 ]		1096920	1					
ANR	1096947	PtrMemberAccess	ht_landscape -> widths		1096920	0					
ANR	1096948	Identifier	ht_landscape		1096920	0					
ANR	1096949	Identifier	widths		1096920	1					
ANR	1096950	PrimaryExpression	0		1096920	1					
ANR	1096951	IdentifierDeclStatement	int local_widths [ LAND_BITS ] ;	495:4:17652:17679	1096920	3	True				
ANR	1096952	IdentifierDecl	local_widths [ LAND_BITS ]		1096920	0					
ANR	1096953	IdentifierDeclType	int [ LAND_BITS ]		1096920	0					
ANR	1096954	Identifier	local_widths		1096920	1					
ANR	1096955	Identifier	LAND_BITS		1096920	2					
ANR	1096956	IdentifierDeclStatement	int num_contone = ht_landscape -> num_contones ;	496:4:17685:17729	1096920	4	True				
ANR	1096957	IdentifierDecl	num_contone = ht_landscape -> num_contones		1096920	0					
ANR	1096958	IdentifierDeclType	int		1096920	0					
ANR	1096959	Identifier	num_contone		1096920	1					
ANR	1096960	AssignmentExpression	num_contone = ht_landscape -> num_contones		1096920	2		=			
ANR	1096961	Identifier	num_contone		1096920	0					
ANR	1096962	PtrMemberAccess	ht_landscape -> num_contones		1096920	1					
ANR	1096963	Identifier	ht_landscape		1096920	0					
ANR	1096964	Identifier	num_contones		1096920	1					
ANR	1096965	IdentifierDeclStatement	"int k , j , w , contone_out_posit ;"	497:4:17735:17765	1096920	5	True				
ANR	1096966	IdentifierDecl	k		1096920	0					
ANR	1096967	IdentifierDeclType	int		1096920	0					
ANR	1096968	Identifier	k		1096920	1					
ANR	1096969	IdentifierDecl	j		1096920	1					
ANR	1096970	IdentifierDeclType	int		1096920	0					
ANR	1096971	Identifier	j		1096920	1					
ANR	1096972	IdentifierDecl	w		1096920	2					
ANR	1096973	IdentifierDeclType	int		1096920	0					
ANR	1096974	Identifier	w		1096920	1					
ANR	1096975	IdentifierDecl	contone_out_posit		1096920	3					
ANR	1096976	IdentifierDeclType	int		1096920	0					
ANR	1096977	Identifier	contone_out_posit		1096920	1					
ANR	1096978	IdentifierDeclStatement	"byte * contone_ptr , * thresh_ptr , * halftone_ptr ;"	498:4:17771:17816	1096920	6	True				
ANR	1096979	IdentifierDecl	* contone_ptr		1096920	0					
ANR	1096980	IdentifierDeclType	byte *		1096920	0					
ANR	1096981	Identifier	contone_ptr		1096920	1					
ANR	1096982	IdentifierDecl	* thresh_ptr		1096920	1					
ANR	1096983	IdentifierDeclType	byte *		1096920	0					
ANR	1096984	Identifier	thresh_ptr		1096920	1					
ANR	1096985	IdentifierDecl	* halftone_ptr		1096920	2					
ANR	1096986	IdentifierDeclType	byte *		1096920	0					
ANR	1096987	Identifier	halftone_ptr		1096920	1					
ANR	1096988	IdentifierDeclStatement	int extra = 0 ;	500:4:17845:17858	1096920	7	True				
ANR	1096989	IdentifierDecl	extra = 0		1096920	0					
ANR	1096990	IdentifierDeclType	int		1096920	0					
ANR	1096991	Identifier	extra		1096920	1					
ANR	1096992	AssignmentExpression	extra = 0		1096920	2		=			
ANR	1096993	Identifier	extra		1096920	0					
ANR	1096994	PrimaryExpression	0		1096920	1					
ANR	1096995	IfStatement	if ( ht_landscape -> index > 0 )		1096920	8					
ANR	1096996	Condition	ht_landscape -> index > 0	505:8:17978:18000	1096920	0	True				
ANR	1096997	RelationalExpression	ht_landscape -> index > 0		1096920	0		>			
ANR	1096998	PtrMemberAccess	ht_landscape -> index		1096920	0					
ANR	1096999	Identifier	ht_landscape		1096920	0					
ANR	1097000	Identifier	index		1096920	1					
ANR	1097001	PrimaryExpression	0		1096920	1					
ANR	1097002	CompoundStatement		15:33:490:490	1096920	1					
ANR	1097003	ExpressionStatement	position = position_start = 0	506:8:18013:18042	1096920	0	True				
ANR	1097004	AssignmentExpression	position = position_start = 0		1096920	0		=			
ANR	1097005	Identifier	position		1096920	0					
ANR	1097006	AssignmentExpression	position_start = 0		1096920	1		=			
ANR	1097007	Identifier	position_start		1096920	0					
ANR	1097008	PrimaryExpression	0		1096920	1					
ANR	1097009	ElseStatement	else		1096920	0					
ANR	1097010	CompoundStatement		17:11:542:542	1096920	0					
ANR	1097011	ExpressionStatement	position = position_start = ht_landscape -> curr_pos + 1	508:8:18065:18119	1096920	0	True				
ANR	1097012	AssignmentExpression	position = position_start = ht_landscape -> curr_pos + 1		1096920	0		=			
ANR	1097013	Identifier	position		1096920	0					
ANR	1097014	AssignmentExpression	position_start = ht_landscape -> curr_pos + 1		1096920	1		=			
ANR	1097015	Identifier	position_start		1096920	0					
ANR	1097016	AdditiveExpression	ht_landscape -> curr_pos + 1		1096920	1		+			
ANR	1097017	PtrMemberAccess	ht_landscape -> curr_pos		1096920	0					
ANR	1097018	Identifier	ht_landscape		1096920	0					
ANR	1097019	Identifier	curr_pos		1096920	1					
ANR	1097020	PrimaryExpression	1		1096920	1					
ANR	1097021	ExpressionStatement	thresh_ptr = thresh_align	510:4:18131:18156	1096920	9	True				
ANR	1097022	AssignmentExpression	thresh_ptr = thresh_align		1096920	0		=			
ANR	1097023	Identifier	thresh_ptr		1096920	0					
ANR	1097024	Identifier	thresh_align		1096920	1					
ANR	1097025	ExpressionStatement	halftone_ptr = halftone	511:4:18162:18185	1096920	10	True				
ANR	1097026	AssignmentExpression	halftone_ptr = halftone		1096920	0		=			
ANR	1097027	Identifier	halftone_ptr		1096920	0					
ANR	1097028	Identifier	halftone		1096920	1					
ANR	1097029	ExpressionStatement	k = 0	514:4:18311:18316	1096920	11	True				
ANR	1097030	AssignmentExpression	k = 0		1096920	0		=			
ANR	1097031	Identifier	k		1096920	0					
ANR	1097032	PrimaryExpression	0		1096920	1					
ANR	1097033	ForStatement	for ( j = 0 ; j < num_contone ; j ++ )		1096920	12					
ANR	1097034	ForInit	j = 0 ;	515:9:18327:18332	1096920	0	True				
ANR	1097035	AssignmentExpression	j = 0		1096920	0		=			
ANR	1097036	Identifier	j		1096920	0					
ANR	1097037	PrimaryExpression	0		1096920	1					
ANR	1097038	Condition	j < num_contone	515:16:18334:18348	1096920	1	True				
ANR	1097039	RelationalExpression	j < num_contone		1096920	0		<			
ANR	1097040	Identifier	j		1096920	0					
ANR	1097041	Identifier	num_contone		1096920	1					
ANR	1097042	PostIncDecOperationExpression	j ++	515:33:18351:18353	1096920	2	True				
ANR	1097043	Identifier	j		1096920	0					
ANR	1097044	IncDec	++		1096920	1					
ANR	1097045	ExpressionStatement	k += ( local_widths [ j ] = widths [ position_start + j ] )	516:8:18364:18413	1096920	3	True				
ANR	1097046	AssignmentExpression	k += ( local_widths [ j ] = widths [ position_start + j ] )		1096920	0		+=			
ANR	1097047	Identifier	k		1096920	0					
ANR	1097048	AssignmentExpression	local_widths [ j ] = widths [ position_start + j ]		1096920	1		=			
ANR	1097049	ArrayIndexing	local_widths [ j ]		1096920	0					
ANR	1097050	Identifier	local_widths		1096920	0					
ANR	1097051	Identifier	j		1096920	1					
ANR	1097052	ArrayIndexing	widths [ position_start + j ]		1096920	1					
ANR	1097053	Identifier	widths		1096920	0					
ANR	1097054	AdditiveExpression	position_start + j		1096920	1		+			
ANR	1097055	Identifier	position_start		1096920	0					
ANR	1097056	Identifier	j		1096920	1					
ANR	1097057	IfStatement	if ( k > LAND_BITS )		1096920	13					
ANR	1097058	Condition	k > LAND_BITS	517:8:18423:18435	1096920	0	True				
ANR	1097059	RelationalExpression	k > LAND_BITS		1096920	0		>			
ANR	1097060	Identifier	k		1096920	0					
ANR	1097061	Identifier	LAND_BITS		1096920	1					
ANR	1097062	CompoundStatement		27:23:925:925	1096920	1					
ANR	1097063	IfStatement	if ( ht_landscape -> index > 0 )		1096920	0					
ANR	1097064	Condition	ht_landscape -> index > 0	518:12:18452:18474	1096920	0	True				
ANR	1097065	RelationalExpression	ht_landscape -> index > 0		1096920	0		>			
ANR	1097066	PtrMemberAccess	ht_landscape -> index		1096920	0					
ANR	1097067	Identifier	ht_landscape		1096920	0					
ANR	1097068	Identifier	index		1096920	1					
ANR	1097069	PrimaryExpression	0		1096920	1					
ANR	1097070	CompoundStatement		28:37:964:964	1096920	1					
ANR	1097071	ExpressionStatement	local_widths [ num_contone - 1 ] -= k - LAND_BITS	519:12:18491:18533	1096920	0	True				
ANR	1097072	AssignmentExpression	local_widths [ num_contone - 1 ] -= k - LAND_BITS		1096920	0		-=			
ANR	1097073	ArrayIndexing	local_widths [ num_contone - 1 ]		1096920	0					
ANR	1097074	Identifier	local_widths		1096920	0					
ANR	1097075	AdditiveExpression	num_contone - 1		1096920	1		-			
ANR	1097076	Identifier	num_contone		1096920	0					
ANR	1097077	PrimaryExpression	1		1096920	1					
ANR	1097078	AdditiveExpression	k - LAND_BITS		1096920	1		-			
ANR	1097079	Identifier	k		1096920	0					
ANR	1097080	Identifier	LAND_BITS		1096920	1					
ANR	1097081	ElseStatement	else		1096920	0					
ANR	1097082	CompoundStatement		30:15:1037:1037	1096920	0					
ANR	1097083	ExpressionStatement	local_widths [ 0 ] -= k - LAND_BITS	521:12:18564:18594	1096920	0	True				
ANR	1097084	AssignmentExpression	local_widths [ 0 ] -= k - LAND_BITS		1096920	0		-=			
ANR	1097085	ArrayIndexing	local_widths [ 0 ]		1096920	0					
ANR	1097086	Identifier	local_widths		1096920	0					
ANR	1097087	PrimaryExpression	0		1096920	1					
ANR	1097088	AdditiveExpression	k - LAND_BITS		1096920	1		-			
ANR	1097089	Identifier	k		1096920	0					
ANR	1097090	Identifier	LAND_BITS		1096920	1					
ANR	1097091	IfStatement	if ( k < LAND_BITS )		1096920	14					
ANR	1097092	Condition	k < LAND_BITS	525:8:18643:18655	1096920	0	True				
ANR	1097093	RelationalExpression	k < LAND_BITS		1096920	0		<			
ANR	1097094	Identifier	k		1096920	0					
ANR	1097095	Identifier	LAND_BITS		1096920	1					
ANR	1097096	CompoundStatement		35:23:1145:1145	1096920	1					
ANR	1097097	ExpressionStatement	extra = LAND_BITS - k	526:8:18668:18689	1096920	0	True				
ANR	1097098	AssignmentExpression	extra = LAND_BITS - k		1096920	0		=			
ANR	1097099	Identifier	extra		1096920	0					
ANR	1097100	AdditiveExpression	LAND_BITS - k		1096920	1		-			
ANR	1097101	Identifier	LAND_BITS		1096920	0					
ANR	1097102	Identifier	k		1096920	1					
ANR	1097103	ForStatement	for ( k = data_length ; k > 0 ; k -- )		1096920	15					
ANR	1097104	ForInit	k = data_length ;	529:9:18713:18728	1096920	0	True				
ANR	1097105	AssignmentExpression	k = data_length		1096920	0		=			
ANR	1097106	Identifier	k		1096920	0					
ANR	1097107	Identifier	data_length		1096920	1					
ANR	1097108	Condition	k > 0	529:26:18730:18734	1096920	1	True				
ANR	1097109	RelationalExpression	k > 0		1096920	0		>			
ANR	1097110	Identifier	k		1096920	0					
ANR	1097111	PrimaryExpression	0		1096920	1					
ANR	1097112	PostIncDecOperationExpression	k --	529:33:18737:18739	1096920	2	True				
ANR	1097113	Identifier	k		1096920	0					
ANR	1097114	IncDec	--		1096920	1					
ANR	1097115	CompoundStatement		39:38:1229:1229	1096920	3					
ANR	1097116	ExpressionStatement	contone_ptr = & ( contone_align [ position ] )	530:8:18771:18811	1096920	0	True				
ANR	1097117	AssignmentExpression	contone_ptr = & ( contone_align [ position ] )		1096920	0		=			
ANR	1097118	Identifier	contone_ptr		1096920	0					
ANR	1097119	UnaryOperationExpression	& ( contone_align [ position ] )		1096920	1					
ANR	1097120	UnaryOperator	&		1096920	0					
ANR	1097121	ArrayIndexing	contone_align [ position ]		1096920	1					
ANR	1097122	Identifier	contone_align		1096920	0					
ANR	1097123	Identifier	position		1096920	1					
ANR	1097124	ExpressionStatement	curr_position = 0	531:8:18853:18870	1096920	1	True				
ANR	1097125	AssignmentExpression	curr_position = 0		1096920	0		=			
ANR	1097126	Identifier	curr_position		1096920	0					
ANR	1097127	PrimaryExpression	0		1096920	1					
ANR	1097128	ExpressionStatement	contone_out_posit = 0	532:8:18925:18946	1096920	2	True				
ANR	1097129	AssignmentExpression	contone_out_posit = 0		1096920	0		=			
ANR	1097130	Identifier	contone_out_posit		1096920	0					
ANR	1097131	PrimaryExpression	0		1096920	1					
ANR	1097132	ForStatement	for ( j = num_contone ; j > 0 ; j -- )		1096920	3					
ANR	1097133	ForInit	j = num_contone ;	533:13:18981:18996	1096920	0	True				
ANR	1097134	AssignmentExpression	j = num_contone		1096920	0		=			
ANR	1097135	Identifier	j		1096920	0					
ANR	1097136	Identifier	num_contone		1096920	1					
ANR	1097137	Condition	j > 0	533:30:18998:19002	1096920	1	True				
ANR	1097138	RelationalExpression	j > 0		1096920	0		>			
ANR	1097139	Identifier	j		1096920	0					
ANR	1097140	PrimaryExpression	0		1096920	1					
ANR	1097141	PostIncDecOperationExpression	j --	533:37:19005:19007	1096920	2	True				
ANR	1097142	Identifier	j		1096920	0					
ANR	1097143	IncDec	--		1096920	1					
ANR	1097144	CompoundStatement		44:12:1511:1532	1096920	3					
ANR	1097145	IdentifierDeclStatement	byte c = * contone_ptr ;	534:12:19024:19045	1096920	0	True				
ANR	1097146	IdentifierDecl	c = * contone_ptr		1096920	0					
ANR	1097147	IdentifierDeclType	byte		1096920	0					
ANR	1097148	Identifier	c		1096920	1					
ANR	1097149	AssignmentExpression	c = * contone_ptr		1096920	2		=			
ANR	1097150	Identifier	c		1096920	0					
ANR	1097151	UnaryOperationExpression	* contone_ptr		1096920	1					
ANR	1097152	UnaryOperator	*		1096920	0					
ANR	1097153	Identifier	contone_ptr		1096920	1					
ANR	1097154	ExpressionStatement	w = local_widths [ curr_position ]	540:12:19447:19478	1096920	1	True				
ANR	1097155	AssignmentExpression	w = local_widths [ curr_position ]		1096920	0		=			
ANR	1097156	Identifier	w		1096920	0					
ANR	1097157	ArrayIndexing	local_widths [ curr_position ]		1096920	1					
ANR	1097158	Identifier	local_widths		1096920	0					
ANR	1097159	Identifier	curr_position		1096920	1					
ANR	1097160	DoStatement	do		1096920	2					
ANR	1097161	CompoundStatement		51:15:1982:1982	1096920	0					
ANR	1097162	ExpressionStatement	( ( volatile byte * ) contone ) [ contone_out_posit ] = c	542:16:19513:19562	1096920	0	True				
ANR	1097163	AssignmentExpression	( ( volatile byte * ) contone ) [ contone_out_posit ] = c		1096920	0		=			
ANR	1097164	ArrayIndexing	( ( volatile byte * ) contone ) [ contone_out_posit ]		1096920	0					
ANR	1097165	CastExpression	( volatile byte * ) contone		1096920	0					
ANR	1097166	CastTarget	volatile byte *		1096920	0					
ANR	1097167	Identifier	contone		1096920	1					
ANR	1097168	Identifier	contone_out_posit		1096920	1					
ANR	1097169	Identifier	c		1096920	1					
ANR	1097170	ExpressionStatement	contone_out_posit ++	543:16:19580:19599	1096920	1	True				
ANR	1097171	PostIncDecOperationExpression	contone_out_posit ++		1096920	0					
ANR	1097172	Identifier	contone_out_posit		1096920	0					
ANR	1097173	IncDec	++		1096920	1					
ANR	1097174	Condition	-- w	544:21:19622:19624	1096920	1	True				
ANR	1097175	UnaryExpression	-- w		1096920	0					
ANR	1097176	IncDec	--		1096920	0					
ANR	1097177	Identifier	w		1096920	1					
ANR	1097178	IfStatement	if ( extra )		1096920	3					
ANR	1097179	Condition	extra	546:16:19667:19671	1096920	0	True				
ANR	1097180	Identifier	extra		1096920	0					
ANR	1097181	ExpressionStatement	"memset ( contone + contone_out_posit , 0 , extra )"	547:16:19690:19733	1096920	1	True				
ANR	1097182	CallExpression	"memset ( contone + contone_out_posit , 0 , extra )"		1096920	0					
ANR	1097183	Callee	memset		1096920	0					
ANR	1097184	Identifier	memset		1096920	0					
ANR	1097185	ArgumentList	contone + contone_out_posit		1096920	1					
ANR	1097186	Argument	contone + contone_out_posit		1096920	0					
ANR	1097187	AdditiveExpression	contone + contone_out_posit		1096920	0		+			
ANR	1097188	Identifier	contone		1096920	0					
ANR	1097189	Identifier	contone_out_posit		1096920	1					
ANR	1097190	Argument	0		1096920	1					
ANR	1097191	PrimaryExpression	0		1096920	0					
ANR	1097192	Argument	extra		1096920	2					
ANR	1097193	Identifier	extra		1096920	0					
ANR	1097194	ExpressionStatement	curr_position ++	549:12:19754:19769	1096920	4	True				
ANR	1097195	PostIncDecOperationExpression	curr_position ++		1096920	0					
ANR	1097196	Identifier	curr_position		1096920	0					
ANR	1097197	IncDec	++		1096920	1					
ANR	1097198	ExpressionStatement	contone_ptr ++	550:12:19837:19850	1096920	5	True				
ANR	1097199	PostIncDecOperationExpression	contone_ptr ++		1096920	0					
ANR	1097200	Identifier	contone_ptr		1096920	0					
ANR	1097201	IncDec	++		1096920	1					
ANR	1097202	ExpressionStatement	contone_ptr = & contone [ 0 ]	554:8:20072:20097	1096920	4	True				
ANR	1097203	AssignmentExpression	contone_ptr = & contone [ 0 ]		1096920	0		=			
ANR	1097204	Identifier	contone_ptr		1096920	0					
ANR	1097205	UnaryOperationExpression	& contone [ 0 ]		1096920	1					
ANR	1097206	UnaryOperator	&		1096920	0					
ANR	1097207	ArrayIndexing	contone [ 0 ]		1096920	1					
ANR	1097208	Identifier	contone		1096920	0					
ANR	1097209	PrimaryExpression	0		1096920	1					
ANR	1097210	ExpressionStatement	j = LAND_BITS	556:8:20126:20139	1096920	5	True				
ANR	1097211	AssignmentExpression	j = LAND_BITS		1096920	0		=			
ANR	1097212	Identifier	j		1096920	0					
ANR	1097213	Identifier	LAND_BITS		1096920	1					
ANR	1097214	DoStatement	do		1096920	6					
ANR	1097215	CompoundStatement		67:11:2639:2639	1096920	0					
ANR	1097216	ExpressionStatement	"threshold_16_SSE ( contone_ptr , thresh_ptr , halftone_ptr )"	560:12:20190:20245	1096920	0	True				
ANR	1097217	CallExpression	"threshold_16_SSE ( contone_ptr , thresh_ptr , halftone_ptr )"		1096920	0					
ANR	1097218	Callee	threshold_16_SSE		1096920	0					
ANR	1097219	Identifier	threshold_16_SSE		1096920	0					
ANR	1097220	ArgumentList	contone_ptr		1096920	1					
ANR	1097221	Argument	contone_ptr		1096920	0					
ANR	1097222	Identifier	contone_ptr		1096920	0					
ANR	1097223	Argument	thresh_ptr		1096920	1					
ANR	1097224	Identifier	thresh_ptr		1096920	0					
ANR	1097225	Argument	halftone_ptr		1096920	2					
ANR	1097226	Identifier	halftone_ptr		1096920	0					
ANR	1097227	ExpressionStatement	thresh_ptr += 16	564:12:20341:20357	1096920	1	True				
ANR	1097228	AssignmentExpression	thresh_ptr += 16		1096920	0		+=			
ANR	1097229	Identifier	thresh_ptr		1096920	0					
ANR	1097230	PrimaryExpression	16		1096920	1					
ANR	1097231	ExpressionStatement	position += 16	565:12:20371:20385	1096920	2	True				
ANR	1097232	AssignmentExpression	position += 16		1096920	0		+=			
ANR	1097233	Identifier	position		1096920	0					
ANR	1097234	PrimaryExpression	16		1096920	1					
ANR	1097235	ExpressionStatement	halftone_ptr += 2	566:12:20399:20416	1096920	3	True				
ANR	1097236	AssignmentExpression	halftone_ptr += 2		1096920	0		+=			
ANR	1097237	Identifier	halftone_ptr		1096920	0					
ANR	1097238	PrimaryExpression	2		1096920	1					
ANR	1097239	ExpressionStatement	contone_ptr += 16	567:12:20430:20447	1096920	4	True				
ANR	1097240	AssignmentExpression	contone_ptr += 16		1096920	0		+=			
ANR	1097241	Identifier	contone_ptr		1096920	0					
ANR	1097242	PrimaryExpression	16		1096920	1					
ANR	1097243	ExpressionStatement	j -= 16	569:12:20480:20487	1096920	5	True				
ANR	1097244	AssignmentExpression	j -= 16		1096920	0		-=			
ANR	1097245	Identifier	j		1096920	0					
ANR	1097246	PrimaryExpression	16		1096920	1					
ANR	1097247	Condition	j > 0	570:17:20506:20510	1096920	1	True				
ANR	1097248	RelationalExpression	j > 0		1096920	0		>			
ANR	1097249	Identifier	j		1096920	0					
ANR	1097250	PrimaryExpression	0		1096920	1					
ANR	1097251	ReturnType	void		1096920	1					
ANR	1097252	Identifier	gx_ht_threshold_landscape		1096920	2					
ANR	1097253	ParameterList	"byte * contone_align , byte * thresh_align , ht_landscape_info_t * ht_landscape , byte * halftone , int data_length"		1096920	3					
ANR	1097254	Parameter	byte * contone_align	488:26:17363:17381	1096920	0	True				
ANR	1097255	ParameterType	byte *		1096920	0					
ANR	1097256	Identifier	contone_align		1096920	1					
ANR	1097257	Parameter	byte * thresh_align	488:47:17384:17401	1096920	1	True				
ANR	1097258	ParameterType	byte *		1096920	0					
ANR	1097259	Identifier	thresh_align		1096920	1					
ANR	1097260	Parameter	ht_landscape_info_t * ht_landscape	489:20:17424:17456	1096920	2	True				
ANR	1097261	ParameterType	ht_landscape_info_t *		1096920	0					
ANR	1097262	Identifier	ht_landscape		1096920	1					
ANR	1097263	Parameter	byte * halftone	489:55:17459:17472	1096920	3	True				
ANR	1097264	ParameterType	byte *		1096920	0					
ANR	1097265	Identifier	halftone		1096920	1					
ANR	1097266	Parameter	int data_length	490:20:17495:17509	1096920	4	True				
ANR	1097267	ParameterType	int		1096920	0					
ANR	1097268	Identifier	data_length		1096920	1					
ANR	1097269	CFGEntryNode	ENTRY		1096920		True				
ANR	1097270	CFGExitNode	EXIT		1096920		True				
ANR	1097271	Symbol	contone		1096920						
ANR	1097272	Symbol	num_contone		1096920						
ANR	1097273	Symbol	curr_position		1096920						
ANR	1097274	Symbol	position_start		1096920						
ANR	1097275	Symbol	extra		1096920						
ANR	1097276	Symbol	ht_landscape		1096920						
ANR	1097277	Symbol	ht_landscape -> curr_pos		1096920						
ANR	1097278	Symbol	* position_start		1096920						
ANR	1097279	Symbol	LAND_BITS		1096920						
ANR	1097280	Symbol	* contone_ptr		1096920						
ANR	1097281	Symbol	contone_align		1096920						
ANR	1097282	Symbol	contone_ptr		1096920						
ANR	1097283	Symbol	* local_widths		1096920						
ANR	1097284	Symbol	* widths		1096920						
ANR	1097285	Symbol	c		1096920						
ANR	1097286	Symbol	ht_landscape -> index		1096920						
ANR	1097287	Symbol	* contone_out_posit		1096920						
ANR	1097288	Symbol	data_length		1096920						
ANR	1097289	Symbol	local_widths		1096920						
ANR	1097290	Symbol	* ht_landscape		1096920						
ANR	1097291	Symbol	ht_landscape -> widths		1096920						
ANR	1097292	Symbol	* contone		1096920						
ANR	1097293	Symbol	widths		1096920						
ANR	1097294	Symbol	j		1096920						
ANR	1097295	Symbol	k		1096920						
ANR	1097296	Symbol	ht_landscape -> num_contones		1096920						
ANR	1097297	Symbol	halftone		1096920						
ANR	1097298	Symbol	thresh_align		1096920						
ANR	1097299	Symbol	halftone_ptr		1096920						
ANR	1097300	Symbol	* j		1096920						
ANR	1097301	Symbol	* num_contone		1096920						
ANR	1097302	Symbol	w		1096920						
ANR	1097303	Symbol	thresh_ptr		1096920						
ANR	1097304	Symbol	* curr_position		1096920						
ANR	1097305	Symbol	contone_out_posit		1096920						
ANR	1097306	Symbol	position		1096920						
ANR	1097307	Function	gxht_thresh_image_init	575:0:20530:30088							
ANR	1097308	FunctionDef	gxht_thresh_image_init (gx_image_enum * penum)		1097307	0					
ANR	1097309	CompoundStatement		577:0:20579:30088	1097307	0					
ANR	1097310	IdentifierDeclStatement	int code = 0 ;	578:4:20585:20597	1097307	0	True				
ANR	1097311	IdentifierDecl	code = 0		1097307	0					
ANR	1097312	IdentifierDeclType	int		1097307	0					
ANR	1097313	Identifier	code		1097307	1					
ANR	1097314	AssignmentExpression	code = 0		1097307	2		=			
ANR	1097315	Identifier	code		1097307	0					
ANR	1097316	PrimaryExpression	0		1097307	1					
ANR	1097317	IdentifierDeclStatement	fixed ox ;	579:4:20603:20611	1097307	1	True				
ANR	1097318	IdentifierDecl	ox		1097307	0					
ANR	1097319	IdentifierDeclType	fixed		1097307	0					
ANR	1097320	Identifier	ox		1097307	1					
ANR	1097321	IdentifierDeclStatement	int temp ;	580:4:20617:20625	1097307	2	True				
ANR	1097322	IdentifierDecl	temp		1097307	0					
ANR	1097323	IdentifierDeclType	int		1097307	0					
ANR	1097324	Identifier	temp		1097307	1					
ANR	1097325	IdentifierDeclStatement	"int dev_width , max_height ;"	581:4:20631:20656	1097307	3	True				
ANR	1097326	IdentifierDecl	dev_width		1097307	0					
ANR	1097327	IdentifierDeclType	int		1097307	0					
ANR	1097328	Identifier	dev_width		1097307	1					
ANR	1097329	IdentifierDecl	max_height		1097307	1					
ANR	1097330	IdentifierDeclType	int		1097307	0					
ANR	1097331	Identifier	max_height		1097307	1					
ANR	1097332	IdentifierDeclStatement	int spp_out ;	582:4:20662:20673	1097307	4	True				
ANR	1097333	IdentifierDecl	spp_out		1097307	0					
ANR	1097334	IdentifierDeclType	int		1097307	0					
ANR	1097335	Identifier	spp_out		1097307	1					
ANR	1097336	IdentifierDeclStatement	int k ;	583:4:20679:20684	1097307	5	True				
ANR	1097337	IdentifierDecl	k		1097307	0					
ANR	1097338	IdentifierDeclType	int		1097307	0					
ANR	1097339	Identifier	k		1097307	1					
ANR	1097340	IdentifierDeclStatement	gx_ht_order * d_order ;	584:4:20690:20710	1097307	6	True				
ANR	1097341	IdentifierDecl	* d_order		1097307	0					
ANR	1097342	IdentifierDeclType	gx_ht_order *		1097307	0					
ANR	1097343	Identifier	d_order		1097307	1					
ANR	1097344	IdentifierDeclStatement	gx_dda_fixed dda_ht ;	585:4:20716:20735	1097307	7	True				
ANR	1097345	IdentifierDecl	dda_ht		1097307	0					
ANR	1097346	IdentifierDeclType	gx_dda_fixed		1097307	0					
ANR	1097347	Identifier	dda_ht		1097307	1					
ANR	1097348	IfStatement	if ( gx_device_must_halftone ( penum -> dev ) )		1097307	8					
ANR	1097349	Condition	gx_device_must_halftone ( penum -> dev )	587:8:20746:20780	1097307	0	True				
ANR	1097350	CallExpression	gx_device_must_halftone ( penum -> dev )		1097307	0					
ANR	1097351	Callee	gx_device_must_halftone		1097307	0					
ANR	1097352	Identifier	gx_device_must_halftone		1097307	0					
ANR	1097353	ArgumentList	penum -> dev		1097307	1					
ANR	1097354	Argument	penum -> dev		1097307	0					
ANR	1097355	PtrMemberAccess	penum -> dev		1097307	0					
ANR	1097356	Identifier	penum		1097307	0					
ANR	1097357	Identifier	dev		1097307	1					
ANR	1097358	CompoundStatement		11:45:203:203	1097307	1					
ANR	1097359	IfStatement	if ( penum -> pgs != NULL && penum -> pgs -> dev_ht != NULL )		1097307	0					
ANR	1097360	Condition	penum -> pgs != NULL && penum -> pgs -> dev_ht != NULL	588:12:20797:20844	1097307	0	True				
ANR	1097361	AndExpression	penum -> pgs != NULL && penum -> pgs -> dev_ht != NULL		1097307	0		&&			
ANR	1097362	EqualityExpression	penum -> pgs != NULL		1097307	0		!=			
ANR	1097363	PtrMemberAccess	penum -> pgs		1097307	0					
ANR	1097364	Identifier	penum		1097307	0					
ANR	1097365	Identifier	pgs		1097307	1					
ANR	1097366	Identifier	NULL		1097307	1					
ANR	1097367	EqualityExpression	penum -> pgs -> dev_ht != NULL		1097307	1		!=			
ANR	1097368	PtrMemberAccess	penum -> pgs -> dev_ht		1097307	0					
ANR	1097369	PtrMemberAccess	penum -> pgs		1097307	0					
ANR	1097370	Identifier	penum		1097307	0					
ANR	1097371	Identifier	pgs		1097307	1					
ANR	1097372	Identifier	dev_ht		1097307	1					
ANR	1097373	Identifier	NULL		1097307	1					
ANR	1097374	CompoundStatement		12:62:267:267	1097307	1					
ANR	1097375	ForStatement	for ( k = 0 ; k < penum -> pgs -> dev_ht -> num_comp ; k ++ )		1097307	0					
ANR	1097376	ForInit	k = 0 ;	589:17:20866:20871	1097307	0	True				
ANR	1097377	AssignmentExpression	k = 0		1097307	0		=			
ANR	1097378	Identifier	k		1097307	0					
ANR	1097379	PrimaryExpression	0		1097307	1					
ANR	1097380	Condition	k < penum -> pgs -> dev_ht -> num_comp	589:24:20873:20904	1097307	1	True				
ANR	1097381	RelationalExpression	k < penum -> pgs -> dev_ht -> num_comp		1097307	0		<			
ANR	1097382	Identifier	k		1097307	0					
ANR	1097383	PtrMemberAccess	penum -> pgs -> dev_ht -> num_comp		1097307	1					
ANR	1097384	PtrMemberAccess	penum -> pgs -> dev_ht		1097307	0					
ANR	1097385	PtrMemberAccess	penum -> pgs		1097307	0					
ANR	1097386	Identifier	penum		1097307	0					
ANR	1097387	Identifier	pgs		1097307	1					
ANR	1097388	Identifier	dev_ht		1097307	1					
ANR	1097389	Identifier	num_comp		1097307	1					
ANR	1097390	PostIncDecOperationExpression	k ++	589:58:20907:20909	1097307	2	True				
ANR	1097391	Identifier	k		1097307	0					
ANR	1097392	IncDec	++		1097307	1					
ANR	1097393	CompoundStatement		13:63:332:332	1097307	3					
ANR	1097394	ExpressionStatement	d_order = & ( penum -> pgs -> dev_ht -> components [ k ] . corder )	590:16:20930:20983	1097307	0	True				
ANR	1097395	AssignmentExpression	d_order = & ( penum -> pgs -> dev_ht -> components [ k ] . corder )		1097307	0		=			
ANR	1097396	Identifier	d_order		1097307	0					
ANR	1097397	UnaryOperationExpression	& ( penum -> pgs -> dev_ht -> components [ k ] . corder )		1097307	1					
ANR	1097398	UnaryOperator	&		1097307	0					
ANR	1097399	MemberAccess	penum -> pgs -> dev_ht -> components [ k ] . corder		1097307	1					
ANR	1097400	ArrayIndexing	penum -> pgs -> dev_ht -> components [ k ]		1097307	0					
ANR	1097401	PtrMemberAccess	penum -> pgs -> dev_ht -> components		1097307	0					
ANR	1097402	PtrMemberAccess	penum -> pgs -> dev_ht		1097307	0					
ANR	1097403	PtrMemberAccess	penum -> pgs		1097307	0					
ANR	1097404	Identifier	penum		1097307	0					
ANR	1097405	Identifier	pgs		1097307	1					
ANR	1097406	Identifier	dev_ht		1097307	1					
ANR	1097407	Identifier	components		1097307	1					
ANR	1097408	Identifier	k		1097307	1					
ANR	1097409	Identifier	corder		1097307	1					
ANR	1097410	ExpressionStatement	"code = gx_ht_construct_threshold ( d_order , penum -> dev , penum -> pgs , k )"	591:16:21001:21118	1097307	1	True				
ANR	1097411	AssignmentExpression	"code = gx_ht_construct_threshold ( d_order , penum -> dev , penum -> pgs , k )"		1097307	0		=			
ANR	1097412	Identifier	code		1097307	0					
ANR	1097413	CallExpression	"gx_ht_construct_threshold ( d_order , penum -> dev , penum -> pgs , k )"		1097307	1					
ANR	1097414	Callee	gx_ht_construct_threshold		1097307	0					
ANR	1097415	Identifier	gx_ht_construct_threshold		1097307	0					
ANR	1097416	ArgumentList	d_order		1097307	1					
ANR	1097417	Argument	d_order		1097307	0					
ANR	1097418	Identifier	d_order		1097307	0					
ANR	1097419	Argument	penum -> dev		1097307	1					
ANR	1097420	PtrMemberAccess	penum -> dev		1097307	0					
ANR	1097421	Identifier	penum		1097307	0					
ANR	1097422	Identifier	dev		1097307	1					
ANR	1097423	Argument	penum -> pgs		1097307	2					
ANR	1097424	PtrMemberAccess	penum -> pgs		1097307	0					
ANR	1097425	Identifier	penum		1097307	0					
ANR	1097426	Identifier	pgs		1097307	1					
ANR	1097427	Argument	k		1097307	3					
ANR	1097428	Identifier	k		1097307	0					
ANR	1097429	IfStatement	if ( code < 0 )		1097307	2					
ANR	1097430	Condition	code < 0	593:20:21140:21147	1097307	0	True				
ANR	1097431	RelationalExpression	code < 0		1097307	0		<			
ANR	1097432	Identifier	code		1097307	0					
ANR	1097433	PrimaryExpression	0		1097307	1					
ANR	1097434	CompoundStatement		17:31:571:571	1097307	1					
ANR	1097435	ReturnStatement	"return gs_rethrow ( code , ""threshold creation failed"" ) ;"	594:20:21173:21225	1097307	0	True				
ANR	1097436	CallExpression	"gs_rethrow ( code , ""threshold creation failed"" )"		1097307	0					
ANR	1097437	Callee	gs_rethrow		1097307	0					
ANR	1097438	Identifier	gs_rethrow		1097307	0					
ANR	1097439	ArgumentList	code		1097307	1					
ANR	1097440	Argument	code		1097307	0					
ANR	1097441	Identifier	code		1097307	0					
ANR	1097442	Argument	"""threshold creation failed"""		1097307	1					
ANR	1097443	PrimaryExpression	"""threshold creation failed"""		1097307	0					
ANR	1097444	ElseStatement	else		1097307	0					
ANR	1097445	CompoundStatement		21:15:694:694	1097307	0					
ANR	1097446	ReturnStatement	return - 1 ;	598:12:21288:21297	1097307	0	True				
ANR	1097447	UnaryOperationExpression	- 1		1097307	0					
ANR	1097448	UnaryOperator	-		1097307	0					
ANR	1097449	PrimaryExpression	1		1097307	1					
ANR	1097450	ExpressionStatement	spp_out = penum -> dev -> color_info . num_components	601:4:21319:21366	1097307	9	True				
ANR	1097451	AssignmentExpression	spp_out = penum -> dev -> color_info . num_components		1097307	0		=			
ANR	1097452	Identifier	spp_out		1097307	0					
ANR	1097453	MemberAccess	penum -> dev -> color_info . num_components		1097307	1					
ANR	1097454	PtrMemberAccess	penum -> dev -> color_info		1097307	0					
ANR	1097455	PtrMemberAccess	penum -> dev		1097307	0					
ANR	1097456	Identifier	penum		1097307	0					
ANR	1097457	Identifier	dev		1097307	1					
ANR	1097458	Identifier	color_info		1097307	1					
ANR	1097459	Identifier	num_components		1097307	1					
ANR	1097460	ExpressionStatement	penum -> dxx = float2fixed ( penum -> matrix . xx + fixed2float ( fixed_epsilon ) / 2 )	603:4:21424:21499	1097307	10	True				
ANR	1097461	AssignmentExpression	penum -> dxx = float2fixed ( penum -> matrix . xx + fixed2float ( fixed_epsilon ) / 2 )		1097307	0		=			
ANR	1097462	PtrMemberAccess	penum -> dxx		1097307	0					
ANR	1097463	Identifier	penum		1097307	0					
ANR	1097464	Identifier	dxx		1097307	1					
ANR	1097465	CallExpression	float2fixed ( penum -> matrix . xx + fixed2float ( fixed_epsilon ) / 2 )		1097307	1					
ANR	1097466	Callee	float2fixed		1097307	0					
ANR	1097467	Identifier	float2fixed		1097307	0					
ANR	1097468	ArgumentList	penum -> matrix . xx + fixed2float ( fixed_epsilon ) / 2		1097307	1					
ANR	1097469	Argument	penum -> matrix . xx + fixed2float ( fixed_epsilon ) / 2		1097307	0					
ANR	1097470	AdditiveExpression	penum -> matrix . xx + fixed2float ( fixed_epsilon ) / 2		1097307	0		+			
ANR	1097471	MemberAccess	penum -> matrix . xx		1097307	0					
ANR	1097472	PtrMemberAccess	penum -> matrix		1097307	0					
ANR	1097473	Identifier	penum		1097307	0					
ANR	1097474	Identifier	matrix		1097307	1					
ANR	1097475	Identifier	xx		1097307	1					
ANR	1097476	MultiplicativeExpression	fixed2float ( fixed_epsilon ) / 2		1097307	1		/			
ANR	1097477	CallExpression	fixed2float ( fixed_epsilon )		1097307	0					
ANR	1097478	Callee	fixed2float		1097307	0					
ANR	1097479	Identifier	fixed2float		1097307	0					
ANR	1097480	ArgumentList	fixed_epsilon		1097307	1					
ANR	1097481	Argument	fixed_epsilon		1097307	0					
ANR	1097482	Identifier	fixed_epsilon		1097307	0					
ANR	1097483	PrimaryExpression	2		1097307	1					
ANR	1097484	IfStatement	if ( penum -> posture == image_landscape )		1097307	11					
ANR	1097485	Condition	penum -> posture == image_landscape	621:8:22607:22639	1097307	0	True				
ANR	1097486	EqualityExpression	penum -> posture == image_landscape		1097307	0		==			
ANR	1097487	PtrMemberAccess	penum -> posture		1097307	0					
ANR	1097488	Identifier	penum		1097307	0					
ANR	1097489	Identifier	posture		1097307	1					
ANR	1097490	Identifier	image_landscape		1097307	1					
ANR	1097491	CompoundStatement		46:8:2072:2138	1097307	1					
ANR	1097492	IdentifierDeclStatement	int col_length = fixed2int_var_rounded ( any_abs ( penum -> x_extent . y ) ) ;	622:8:22652:22718	1097307	0	True				
ANR	1097493	IdentifierDecl	col_length = fixed2int_var_rounded ( any_abs ( penum -> x_extent . y ) )		1097307	0					
ANR	1097494	IdentifierDeclType	int		1097307	0					
ANR	1097495	Identifier	col_length		1097307	1					
ANR	1097496	AssignmentExpression	col_length = fixed2int_var_rounded ( any_abs ( penum -> x_extent . y ) )		1097307	2		=			
ANR	1097497	Identifier	col_length		1097307	0					
ANR	1097498	CallExpression	fixed2int_var_rounded ( any_abs ( penum -> x_extent . y ) )		1097307	1					
ANR	1097499	Callee	fixed2int_var_rounded		1097307	0					
ANR	1097500	Identifier	fixed2int_var_rounded		1097307	0					
ANR	1097501	ArgumentList	any_abs ( penum -> x_extent . y )		1097307	1					
ANR	1097502	Argument	any_abs ( penum -> x_extent . y )		1097307	0					
ANR	1097503	CallExpression	any_abs ( penum -> x_extent . y )		1097307	0					
ANR	1097504	Callee	any_abs		1097307	0					
ANR	1097505	Identifier	any_abs		1097307	0					
ANR	1097506	ArgumentList	penum -> x_extent . y		1097307	1					
ANR	1097507	Argument	penum -> x_extent . y		1097307	0					
ANR	1097508	MemberAccess	penum -> x_extent . y		1097307	0					
ANR	1097509	PtrMemberAccess	penum -> x_extent		1097307	0					
ANR	1097510	Identifier	penum		1097307	0					
ANR	1097511	Identifier	x_extent		1097307	1					
ANR	1097512	Identifier	y		1097307	1					
ANR	1097513	ExpressionStatement	dda_ht = penum -> dda . pixel0 . y	623:8:22728:22756	1097307	1	True				
ANR	1097514	AssignmentExpression	dda_ht = penum -> dda . pixel0 . y		1097307	0		=			
ANR	1097515	Identifier	dda_ht		1097307	0					
ANR	1097516	MemberAccess	penum -> dda . pixel0 . y		1097307	1					
ANR	1097517	MemberAccess	penum -> dda . pixel0		1097307	0					
ANR	1097518	PtrMemberAccess	penum -> dda		1097307	0					
ANR	1097519	Identifier	penum		1097307	0					
ANR	1097520	Identifier	dda		1097307	1					
ANR	1097521	Identifier	pixel0		1097307	1					
ANR	1097522	Identifier	y		1097307	1					
ANR	1097523	IfStatement	if ( penum -> dxx > 0 )		1097307	2					
ANR	1097524	Condition	penum -> dxx > 0	624:12:22770:22783	1097307	0	True				
ANR	1097525	RelationalExpression	penum -> dxx > 0		1097307	0		>			
ANR	1097526	PtrMemberAccess	penum -> dxx		1097307	0					
ANR	1097527	Identifier	penum		1097307	0					
ANR	1097528	Identifier	dxx		1097307	1					
ANR	1097529	PrimaryExpression	0		1097307	1					
ANR	1097530	ExpressionStatement	"dda_translate ( dda_ht , - fixed_epsilon )"	625:12:22798:22835	1097307	1	True				
ANR	1097531	CallExpression	"dda_translate ( dda_ht , - fixed_epsilon )"		1097307	0					
ANR	1097532	Callee	dda_translate		1097307	0					
ANR	1097533	Identifier	dda_translate		1097307	0					
ANR	1097534	ArgumentList	dda_ht		1097307	1					
ANR	1097535	Argument	dda_ht		1097307	0					
ANR	1097536	Identifier	dda_ht		1097307	0					
ANR	1097537	Argument	- fixed_epsilon		1097307	1					
ANR	1097538	UnaryOperationExpression	- fixed_epsilon		1097307	0					
ANR	1097539	UnaryOperator	-		1097307	0					
ANR	1097540	Identifier	fixed_epsilon		1097307	1					
ANR	1097541	ExpressionStatement	ox = dda_current ( penum -> dda . pixel0 . x )	627:8:22892:22929	1097307	3	True				
ANR	1097542	AssignmentExpression	ox = dda_current ( penum -> dda . pixel0 . x )		1097307	0		=			
ANR	1097543	Identifier	ox		1097307	0					
ANR	1097544	CallExpression	dda_current ( penum -> dda . pixel0 . x )		1097307	1					
ANR	1097545	Callee	dda_current		1097307	0					
ANR	1097546	Identifier	dda_current		1097307	0					
ANR	1097547	ArgumentList	penum -> dda . pixel0 . x		1097307	1					
ANR	1097548	Argument	penum -> dda . pixel0 . x		1097307	0					
ANR	1097549	MemberAccess	penum -> dda . pixel0 . x		1097307	0					
ANR	1097550	MemberAccess	penum -> dda . pixel0		1097307	0					
ANR	1097551	PtrMemberAccess	penum -> dda		1097307	0					
ANR	1097552	Identifier	penum		1097307	0					
ANR	1097553	Identifier	dda		1097307	1					
ANR	1097554	Identifier	pixel0		1097307	1					
ANR	1097555	Identifier	x		1097307	1					
ANR	1097556	ExpressionStatement	"temp = gxht_dda_length ( & dda_ht , penum -> rect . w )"	628:8:22939:22985	1097307	4	True				
ANR	1097557	AssignmentExpression	"temp = gxht_dda_length ( & dda_ht , penum -> rect . w )"		1097307	0		=			
ANR	1097558	Identifier	temp		1097307	0					
ANR	1097559	CallExpression	"gxht_dda_length ( & dda_ht , penum -> rect . w )"		1097307	1					
ANR	1097560	Callee	gxht_dda_length		1097307	0					
ANR	1097561	Identifier	gxht_dda_length		1097307	0					
ANR	1097562	ArgumentList	& dda_ht		1097307	1					
ANR	1097563	Argument	& dda_ht		1097307	0					
ANR	1097564	UnaryOperationExpression	& dda_ht		1097307	0					
ANR	1097565	UnaryOperator	&		1097307	0					
ANR	1097566	Identifier	dda_ht		1097307	1					
ANR	1097567	Argument	penum -> rect . w		1097307	1					
ANR	1097568	MemberAccess	penum -> rect . w		1097307	0					
ANR	1097569	PtrMemberAccess	penum -> rect		1097307	0					
ANR	1097570	Identifier	penum		1097307	0					
ANR	1097571	Identifier	rect		1097307	1					
ANR	1097572	Identifier	w		1097307	1					
ANR	1097573	IfStatement	if ( col_length < temp )		1097307	5					
ANR	1097574	Condition	col_length < temp	629:12:22999:23015	1097307	0	True				
ANR	1097575	RelationalExpression	col_length < temp		1097307	0		<			
ANR	1097576	Identifier	col_length		1097307	0					
ANR	1097577	Identifier	temp		1097307	1					
ANR	1097578	ExpressionStatement	col_length = temp	630:12:23030:23047	1097307	1	True				
ANR	1097579	AssignmentExpression	col_length = temp		1097307	0		=			
ANR	1097580	Identifier	col_length		1097307	0					
ANR	1097581	Identifier	temp		1097307	1					
ANR	1097582	ExpressionStatement	temp = ( col_length + LAND_BITS ) / LAND_BITS	631:8:23122:23163	1097307	6	True				
ANR	1097583	AssignmentExpression	temp = ( col_length + LAND_BITS ) / LAND_BITS		1097307	0		=			
ANR	1097584	Identifier	temp		1097307	0					
ANR	1097585	MultiplicativeExpression	( col_length + LAND_BITS ) / LAND_BITS		1097307	1		/			
ANR	1097586	AdditiveExpression	col_length + LAND_BITS		1097307	0		+			
ANR	1097587	Identifier	col_length		1097307	0					
ANR	1097588	Identifier	LAND_BITS		1097307	1					
ANR	1097589	Identifier	LAND_BITS		1097307	1					
ANR	1097590	ExpressionStatement	penum -> line_size = bitmap_raster ( ( temp * LAND_BITS ) * 8 )	633:8:23287:23343	1097307	7	True				
ANR	1097591	AssignmentExpression	penum -> line_size = bitmap_raster ( ( temp * LAND_BITS ) * 8 )		1097307	0		=			
ANR	1097592	PtrMemberAccess	penum -> line_size		1097307	0					
ANR	1097593	Identifier	penum		1097307	0					
ANR	1097594	Identifier	line_size		1097307	1					
ANR	1097595	CallExpression	bitmap_raster ( ( temp * LAND_BITS ) * 8 )		1097307	1					
ANR	1097596	Callee	bitmap_raster		1097307	0					
ANR	1097597	Identifier	bitmap_raster		1097307	0					
ANR	1097598	ArgumentList	( temp * LAND_BITS ) * 8		1097307	1					
ANR	1097599	Argument	( temp * LAND_BITS ) * 8		1097307	0					
ANR	1097600	MultiplicativeExpression	( temp * LAND_BITS ) * 8		1097307	0		*			
ANR	1097601	MultiplicativeExpression	temp * LAND_BITS		1097307	0		*			
ANR	1097602	Identifier	temp		1097307	0					
ANR	1097603	Identifier	LAND_BITS		1097307	1					
ANR	1097604	PrimaryExpression	8		1097307	1					
ANR	1097605	ExpressionStatement	"penum -> line = gs_alloc_bytes ( penum -> memory , LAND_BITS * penum -> line_size * spp_out + 16 , ""gxht_thresh"" )"	635:8:23424:23601	1097307	8	True				
ANR	1097606	AssignmentExpression	"penum -> line = gs_alloc_bytes ( penum -> memory , LAND_BITS * penum -> line_size * spp_out + 16 , ""gxht_thresh"" )"		1097307	0		=			
ANR	1097607	PtrMemberAccess	penum -> line		1097307	0					
ANR	1097608	Identifier	penum		1097307	0					
ANR	1097609	Identifier	line		1097307	1					
ANR	1097610	CallExpression	"gs_alloc_bytes ( penum -> memory , LAND_BITS * penum -> line_size * spp_out + 16 , ""gxht_thresh"" )"		1097307	1					
ANR	1097611	Callee	gs_alloc_bytes		1097307	0					
ANR	1097612	Identifier	gs_alloc_bytes		1097307	0					
ANR	1097613	ArgumentList	penum -> memory		1097307	1					
ANR	1097614	Argument	penum -> memory		1097307	0					
ANR	1097615	PtrMemberAccess	penum -> memory		1097307	0					
ANR	1097616	Identifier	penum		1097307	0					
ANR	1097617	Identifier	memory		1097307	1					
ANR	1097618	Argument	LAND_BITS * penum -> line_size * spp_out + 16		1097307	1					
ANR	1097619	AdditiveExpression	LAND_BITS * penum -> line_size * spp_out + 16		1097307	0		+			
ANR	1097620	MultiplicativeExpression	LAND_BITS * penum -> line_size * spp_out		1097307	0		*			
ANR	1097621	Identifier	LAND_BITS		1097307	0					
ANR	1097622	MultiplicativeExpression	penum -> line_size * spp_out		1097307	1		*			
ANR	1097623	PtrMemberAccess	penum -> line_size		1097307	0					
ANR	1097624	Identifier	penum		1097307	0					
ANR	1097625	Identifier	line_size		1097307	1					
ANR	1097626	Identifier	spp_out		1097307	1					
ANR	1097627	PrimaryExpression	16		1097307	1					
ANR	1097628	Argument	"""gxht_thresh"""		1097307	2					
ANR	1097629	PrimaryExpression	"""gxht_thresh"""		1097307	0					
ANR	1097630	ExpressionStatement	"penum -> thresh_buffer = gs_alloc_bytes ( penum -> memory , penum -> line_size * LAND_BITS + 16 , ""gxht_thresh"" )"	639:8:23679:23867	1097307	9	True				
ANR	1097631	AssignmentExpression	"penum -> thresh_buffer = gs_alloc_bytes ( penum -> memory , penum -> line_size * LAND_BITS + 16 , ""gxht_thresh"" )"		1097307	0		=			
ANR	1097632	PtrMemberAccess	penum -> thresh_buffer		1097307	0					
ANR	1097633	Identifier	penum		1097307	0					
ANR	1097634	Identifier	thresh_buffer		1097307	1					
ANR	1097635	CallExpression	"gs_alloc_bytes ( penum -> memory , penum -> line_size * LAND_BITS + 16 , ""gxht_thresh"" )"		1097307	1					
ANR	1097636	Callee	gs_alloc_bytes		1097307	0					
ANR	1097637	Identifier	gs_alloc_bytes		1097307	0					
ANR	1097638	ArgumentList	penum -> memory		1097307	1					
ANR	1097639	Argument	penum -> memory		1097307	0					
ANR	1097640	PtrMemberAccess	penum -> memory		1097307	0					
ANR	1097641	Identifier	penum		1097307	0					
ANR	1097642	Identifier	memory		1097307	1					
ANR	1097643	Argument	penum -> line_size * LAND_BITS + 16		1097307	1					
ANR	1097644	AdditiveExpression	penum -> line_size * LAND_BITS + 16		1097307	0		+			
ANR	1097645	MultiplicativeExpression	penum -> line_size * LAND_BITS		1097307	0		*			
ANR	1097646	PtrMemberAccess	penum -> line_size		1097307	0					
ANR	1097647	Identifier	penum		1097307	0					
ANR	1097648	Identifier	line_size		1097307	1					
ANR	1097649	Identifier	LAND_BITS		1097307	1					
ANR	1097650	PrimaryExpression	16		1097307	1					
ANR	1097651	Argument	"""gxht_thresh"""		1097307	2					
ANR	1097652	PrimaryExpression	"""gxht_thresh"""		1097307	0					
ANR	1097653	ExpressionStatement	"penum -> ht_buffer = gs_alloc_bytes ( penum -> memory , penum -> line_size * ( LAND_BITS >> 3 ) * spp_out , ""gxht_thresh"" )"	643:8:23943:24129	1097307	10	True				
ANR	1097654	AssignmentExpression	"penum -> ht_buffer = gs_alloc_bytes ( penum -> memory , penum -> line_size * ( LAND_BITS >> 3 ) * spp_out , ""gxht_thresh"" )"		1097307	0		=			
ANR	1097655	PtrMemberAccess	penum -> ht_buffer		1097307	0					
ANR	1097656	Identifier	penum		1097307	0					
ANR	1097657	Identifier	ht_buffer		1097307	1					
ANR	1097658	CallExpression	"gs_alloc_bytes ( penum -> memory , penum -> line_size * ( LAND_BITS >> 3 ) * spp_out , ""gxht_thresh"" )"		1097307	1					
ANR	1097659	Callee	gs_alloc_bytes		1097307	0					
ANR	1097660	Identifier	gs_alloc_bytes		1097307	0					
ANR	1097661	ArgumentList	penum -> memory		1097307	1					
ANR	1097662	Argument	penum -> memory		1097307	0					
ANR	1097663	PtrMemberAccess	penum -> memory		1097307	0					
ANR	1097664	Identifier	penum		1097307	0					
ANR	1097665	Identifier	memory		1097307	1					
ANR	1097666	Argument	penum -> line_size * ( LAND_BITS >> 3 ) * spp_out		1097307	1					
ANR	1097667	MultiplicativeExpression	penum -> line_size * ( LAND_BITS >> 3 ) * spp_out		1097307	0		*			
ANR	1097668	PtrMemberAccess	penum -> line_size		1097307	0					
ANR	1097669	Identifier	penum		1097307	0					
ANR	1097670	Identifier	line_size		1097307	1					
ANR	1097671	MultiplicativeExpression	( LAND_BITS >> 3 ) * spp_out		1097307	1		*			
ANR	1097672	ShiftExpression	LAND_BITS >> 3		1097307	0		>>			
ANR	1097673	Identifier	LAND_BITS		1097307	0					
ANR	1097674	PrimaryExpression	3		1097307	1					
ANR	1097675	Identifier	spp_out		1097307	1					
ANR	1097676	Argument	"""gxht_thresh"""		1097307	2					
ANR	1097677	PrimaryExpression	"""gxht_thresh"""		1097307	0					
ANR	1097678	ExpressionStatement	penum -> ht_plane_height = penum -> line_size	647:8:24139:24180	1097307	11	True				
ANR	1097679	AssignmentExpression	penum -> ht_plane_height = penum -> line_size		1097307	0		=			
ANR	1097680	PtrMemberAccess	penum -> ht_plane_height		1097307	0					
ANR	1097681	Identifier	penum		1097307	0					
ANR	1097682	Identifier	ht_plane_height		1097307	1					
ANR	1097683	PtrMemberAccess	penum -> line_size		1097307	1					
ANR	1097684	Identifier	penum		1097307	0					
ANR	1097685	Identifier	line_size		1097307	1					
ANR	1097686	ExpressionStatement	penum -> ht_stride = penum -> line_size	648:8:24190:24225	1097307	12	True				
ANR	1097687	AssignmentExpression	penum -> ht_stride = penum -> line_size		1097307	0		=			
ANR	1097688	PtrMemberAccess	penum -> ht_stride		1097307	0					
ANR	1097689	Identifier	penum		1097307	0					
ANR	1097690	Identifier	ht_stride		1097307	1					
ANR	1097691	PtrMemberAccess	penum -> line_size		1097307	1					
ANR	1097692	Identifier	penum		1097307	0					
ANR	1097693	Identifier	line_size		1097307	1					
ANR	1097694	IfStatement	if ( penum -> line == NULL || penum -> thresh_buffer == NULL || penum -> ht_buffer == NULL )		1097307	13					
ANR	1097695	Condition	penum -> line == NULL || penum -> thresh_buffer == NULL || penum -> ht_buffer == NULL	649:12:24239:24337	1097307	0	True				
ANR	1097696	OrExpression	penum -> line == NULL || penum -> thresh_buffer == NULL || penum -> ht_buffer == NULL		1097307	0		||			
ANR	1097697	EqualityExpression	penum -> line == NULL		1097307	0		==			
ANR	1097698	PtrMemberAccess	penum -> line		1097307	0					
ANR	1097699	Identifier	penum		1097307	0					
ANR	1097700	Identifier	line		1097307	1					
ANR	1097701	Identifier	NULL		1097307	1					
ANR	1097702	OrExpression	penum -> thresh_buffer == NULL || penum -> ht_buffer == NULL		1097307	1		||			
ANR	1097703	EqualityExpression	penum -> thresh_buffer == NULL		1097307	0		==			
ANR	1097704	PtrMemberAccess	penum -> thresh_buffer		1097307	0					
ANR	1097705	Identifier	penum		1097307	0					
ANR	1097706	Identifier	thresh_buffer		1097307	1					
ANR	1097707	Identifier	NULL		1097307	1					
ANR	1097708	EqualityExpression	penum -> ht_buffer == NULL		1097307	1		==			
ANR	1097709	PtrMemberAccess	penum -> ht_buffer		1097307	0					
ANR	1097710	Identifier	penum		1097307	0					
ANR	1097711	Identifier	ht_buffer		1097307	1					
ANR	1097712	Identifier	NULL		1097307	1					
ANR	1097713	ReturnStatement	return - 1 ;	651:12:24352:24361	1097307	1	True				
ANR	1097714	UnaryOperationExpression	- 1		1097307	0					
ANR	1097715	UnaryOperator	-		1097307	0					
ANR	1097716	PrimaryExpression	1		1097307	1					
ANR	1097717	ExpressionStatement	penum -> ht_landscape . count = 0	652:8:24371:24400	1097307	14	True				
ANR	1097718	AssignmentExpression	penum -> ht_landscape . count = 0		1097307	0		=			
ANR	1097719	MemberAccess	penum -> ht_landscape . count		1097307	0					
ANR	1097720	PtrMemberAccess	penum -> ht_landscape		1097307	0					
ANR	1097721	Identifier	penum		1097307	0					
ANR	1097722	Identifier	ht_landscape		1097307	1					
ANR	1097723	Identifier	count		1097307	1					
ANR	1097724	PrimaryExpression	0		1097307	1					
ANR	1097725	ExpressionStatement	penum -> ht_landscape . num_contones = 0	653:8:24410:24446	1097307	15	True				
ANR	1097726	AssignmentExpression	penum -> ht_landscape . num_contones = 0		1097307	0		=			
ANR	1097727	MemberAccess	penum -> ht_landscape . num_contones		1097307	0					
ANR	1097728	PtrMemberAccess	penum -> ht_landscape		1097307	0					
ANR	1097729	Identifier	penum		1097307	0					
ANR	1097730	Identifier	ht_landscape		1097307	1					
ANR	1097731	Identifier	num_contones		1097307	1					
ANR	1097732	PrimaryExpression	0		1097307	1					
ANR	1097733	IfStatement	if ( penum -> y_extent . x < 0 )		1097307	16					
ANR	1097734	Condition	penum -> y_extent . x < 0	654:12:24460:24480	1097307	0	True				
ANR	1097735	RelationalExpression	penum -> y_extent . x < 0		1097307	0		<			
ANR	1097736	MemberAccess	penum -> y_extent . x		1097307	0					
ANR	1097737	PtrMemberAccess	penum -> y_extent		1097307	0					
ANR	1097738	Identifier	penum		1097307	0					
ANR	1097739	Identifier	y_extent		1097307	1					
ANR	1097740	Identifier	x		1097307	1					
ANR	1097741	PrimaryExpression	0		1097307	1					
ANR	1097742	CompoundStatement		78:35:3903:3903	1097307	1					
ANR	1097743	ExpressionStatement	penum -> ht_landscape . curr_pos = LAND_BITS - 1	656:12:24535:24577	1097307	0	True				
ANR	1097744	AssignmentExpression	penum -> ht_landscape . curr_pos = LAND_BITS - 1		1097307	0		=			
ANR	1097745	MemberAccess	penum -> ht_landscape . curr_pos		1097307	0					
ANR	1097746	PtrMemberAccess	penum -> ht_landscape		1097307	0					
ANR	1097747	Identifier	penum		1097307	0					
ANR	1097748	Identifier	ht_landscape		1097307	1					
ANR	1097749	Identifier	curr_pos		1097307	1					
ANR	1097750	AdditiveExpression	LAND_BITS - 1		1097307	1		-			
ANR	1097751	Identifier	LAND_BITS		1097307	0					
ANR	1097752	PrimaryExpression	1		1097307	1					
ANR	1097753	ExpressionStatement	penum -> ht_landscape . index = - 1	657:12:24591:24621	1097307	1	True				
ANR	1097754	AssignmentExpression	penum -> ht_landscape . index = - 1		1097307	0		=			
ANR	1097755	MemberAccess	penum -> ht_landscape . index		1097307	0					
ANR	1097756	PtrMemberAccess	penum -> ht_landscape		1097307	0					
ANR	1097757	Identifier	penum		1097307	0					
ANR	1097758	Identifier	ht_landscape		1097307	1					
ANR	1097759	Identifier	index		1097307	1					
ANR	1097760	UnaryOperationExpression	- 1		1097307	1					
ANR	1097761	UnaryOperator	-		1097307	0					
ANR	1097762	PrimaryExpression	1		1097307	1					
ANR	1097763	ElseStatement	else		1097307	0					
ANR	1097764	CompoundStatement		82:15:4058:4058	1097307	0					
ANR	1097765	ExpressionStatement	penum -> ht_landscape . curr_pos = 0	660:12:24690:24722	1097307	0	True				
ANR	1097766	AssignmentExpression	penum -> ht_landscape . curr_pos = 0		1097307	0		=			
ANR	1097767	MemberAccess	penum -> ht_landscape . curr_pos		1097307	0					
ANR	1097768	PtrMemberAccess	penum -> ht_landscape		1097307	0					
ANR	1097769	Identifier	penum		1097307	0					
ANR	1097770	Identifier	ht_landscape		1097307	1					
ANR	1097771	Identifier	curr_pos		1097307	1					
ANR	1097772	PrimaryExpression	0		1097307	1					
ANR	1097773	ExpressionStatement	penum -> ht_landscape . index = 1	661:12:24736:24765	1097307	1	True				
ANR	1097774	AssignmentExpression	penum -> ht_landscape . index = 1		1097307	0		=			
ANR	1097775	MemberAccess	penum -> ht_landscape . index		1097307	0					
ANR	1097776	PtrMemberAccess	penum -> ht_landscape		1097307	0					
ANR	1097777	Identifier	penum		1097307	0					
ANR	1097778	Identifier	ht_landscape		1097307	1					
ANR	1097779	Identifier	index		1097307	1					
ANR	1097780	PrimaryExpression	1		1097307	1					
ANR	1097781	IfStatement	if ( penum -> x_extent . y < 0 )		1097307	17					
ANR	1097782	Condition	penum -> x_extent . y < 0	663:12:24789:24809	1097307	0	True				
ANR	1097783	RelationalExpression	penum -> x_extent . y < 0		1097307	0		<			
ANR	1097784	MemberAccess	penum -> x_extent . y		1097307	0					
ANR	1097785	PtrMemberAccess	penum -> x_extent		1097307	0					
ANR	1097786	Identifier	penum		1097307	0					
ANR	1097787	Identifier	x_extent		1097307	1					
ANR	1097788	Identifier	y		1097307	1					
ANR	1097789	PrimaryExpression	0		1097307	1					
ANR	1097790	CompoundStatement		87:35:4232:4232	1097307	1					
ANR	1097791	ExpressionStatement	penum -> ht_landscape . flipy = true	664:12:24826:24858	1097307	0	True				
ANR	1097792	AssignmentExpression	penum -> ht_landscape . flipy = true		1097307	0		=			
ANR	1097793	MemberAccess	penum -> ht_landscape . flipy		1097307	0					
ANR	1097794	PtrMemberAccess	penum -> ht_landscape		1097307	0					
ANR	1097795	Identifier	penum		1097307	0					
ANR	1097796	Identifier	ht_landscape		1097307	1					
ANR	1097797	Identifier	flipy		1097307	1					
ANR	1097798	Identifier	true		1097307	1					
ANR	1097799	ExpressionStatement	penum -> ht_landscape . y_pos = fixed2int_pixround_perfect ( dda_current ( penum -> dda . pixel0 . y ) + penum -> x_extent . y )	665:12:24872:24996	1097307	1	True				
ANR	1097800	AssignmentExpression	penum -> ht_landscape . y_pos = fixed2int_pixround_perfect ( dda_current ( penum -> dda . pixel0 . y ) + penum -> x_extent . y )		1097307	0		=			
ANR	1097801	MemberAccess	penum -> ht_landscape . y_pos		1097307	0					
ANR	1097802	PtrMemberAccess	penum -> ht_landscape		1097307	0					
ANR	1097803	Identifier	penum		1097307	0					
ANR	1097804	Identifier	ht_landscape		1097307	1					
ANR	1097805	Identifier	y_pos		1097307	1					
ANR	1097806	CallExpression	fixed2int_pixround_perfect ( dda_current ( penum -> dda . pixel0 . y ) + penum -> x_extent . y )		1097307	1					
ANR	1097807	Callee	fixed2int_pixround_perfect		1097307	0					
ANR	1097808	Identifier	fixed2int_pixround_perfect		1097307	0					
ANR	1097809	ArgumentList	dda_current ( penum -> dda . pixel0 . y ) + penum -> x_extent . y		1097307	1					
ANR	1097810	Argument	dda_current ( penum -> dda . pixel0 . y ) + penum -> x_extent . y		1097307	0					
ANR	1097811	AdditiveExpression	dda_current ( penum -> dda . pixel0 . y ) + penum -> x_extent . y		1097307	0		+			
ANR	1097812	CallExpression	dda_current ( penum -> dda . pixel0 . y )		1097307	0					
ANR	1097813	Callee	dda_current		1097307	0					
ANR	1097814	Identifier	dda_current		1097307	0					
ANR	1097815	ArgumentList	penum -> dda . pixel0 . y		1097307	1					
ANR	1097816	Argument	penum -> dda . pixel0 . y		1097307	0					
ANR	1097817	MemberAccess	penum -> dda . pixel0 . y		1097307	0					
ANR	1097818	MemberAccess	penum -> dda . pixel0		1097307	0					
ANR	1097819	PtrMemberAccess	penum -> dda		1097307	0					
ANR	1097820	Identifier	penum		1097307	0					
ANR	1097821	Identifier	dda		1097307	1					
ANR	1097822	Identifier	pixel0		1097307	1					
ANR	1097823	Identifier	y		1097307	1					
ANR	1097824	MemberAccess	penum -> x_extent . y		1097307	1					
ANR	1097825	PtrMemberAccess	penum -> x_extent		1097307	0					
ANR	1097826	Identifier	penum		1097307	0					
ANR	1097827	Identifier	x_extent		1097307	1					
ANR	1097828	Identifier	y		1097307	1					
ANR	1097829	ElseStatement	else		1097307	0					
ANR	1097830	CompoundStatement		91:15:4433:4433	1097307	0					
ANR	1097831	ExpressionStatement	penum -> ht_landscape . flipy = false	668:12:25027:25060	1097307	0	True				
ANR	1097832	AssignmentExpression	penum -> ht_landscape . flipy = false		1097307	0		=			
ANR	1097833	MemberAccess	penum -> ht_landscape . flipy		1097307	0					
ANR	1097834	PtrMemberAccess	penum -> ht_landscape		1097307	0					
ANR	1097835	Identifier	penum		1097307	0					
ANR	1097836	Identifier	ht_landscape		1097307	1					
ANR	1097837	Identifier	flipy		1097307	1					
ANR	1097838	Identifier	false		1097307	1					
ANR	1097839	ExpressionStatement	penum -> ht_landscape . y_pos = fixed2int_pixround_perfect ( dda_current ( penum -> dda . pixel0 . y ) )	669:12:25074:25178	1097307	1	True				
ANR	1097840	AssignmentExpression	penum -> ht_landscape . y_pos = fixed2int_pixround_perfect ( dda_current ( penum -> dda . pixel0 . y ) )		1097307	0		=			
ANR	1097841	MemberAccess	penum -> ht_landscape . y_pos		1097307	0					
ANR	1097842	PtrMemberAccess	penum -> ht_landscape		1097307	0					
ANR	1097843	Identifier	penum		1097307	0					
ANR	1097844	Identifier	ht_landscape		1097307	1					
ANR	1097845	Identifier	y_pos		1097307	1					
ANR	1097846	CallExpression	fixed2int_pixround_perfect ( dda_current ( penum -> dda . pixel0 . y ) )		1097307	1					
ANR	1097847	Callee	fixed2int_pixround_perfect		1097307	0					
ANR	1097848	Identifier	fixed2int_pixround_perfect		1097307	0					
ANR	1097849	ArgumentList	dda_current ( penum -> dda . pixel0 . y )		1097307	1					
ANR	1097850	Argument	dda_current ( penum -> dda . pixel0 . y )		1097307	0					
ANR	1097851	CallExpression	dda_current ( penum -> dda . pixel0 . y )		1097307	0					
ANR	1097852	Callee	dda_current		1097307	0					
ANR	1097853	Identifier	dda_current		1097307	0					
ANR	1097854	ArgumentList	penum -> dda . pixel0 . y		1097307	1					
ANR	1097855	Argument	penum -> dda . pixel0 . y		1097307	0					
ANR	1097856	MemberAccess	penum -> dda . pixel0 . y		1097307	0					
ANR	1097857	MemberAccess	penum -> dda . pixel0		1097307	0					
ANR	1097858	PtrMemberAccess	penum -> dda		1097307	0					
ANR	1097859	Identifier	penum		1097307	0					
ANR	1097860	Identifier	dda		1097307	1					
ANR	1097861	Identifier	pixel0		1097307	1					
ANR	1097862	Identifier	y		1097307	1					
ANR	1097863	ExpressionStatement	"memset ( & ( penum -> ht_landscape . widths [ 0 ] ) , 0 , sizeof ( int ) * LAND_BITS )"	672:8:25198:25264	1097307	18	True				
ANR	1097864	CallExpression	"memset ( & ( penum -> ht_landscape . widths [ 0 ] ) , 0 , sizeof ( int ) * LAND_BITS )"		1097307	0					
ANR	1097865	Callee	memset		1097307	0					
ANR	1097866	Identifier	memset		1097307	0					
ANR	1097867	ArgumentList	& ( penum -> ht_landscape . widths [ 0 ] )		1097307	1					
ANR	1097868	Argument	& ( penum -> ht_landscape . widths [ 0 ] )		1097307	0					
ANR	1097869	UnaryOperationExpression	& ( penum -> ht_landscape . widths [ 0 ] )		1097307	0					
ANR	1097870	UnaryOperator	&		1097307	0					
ANR	1097871	ArrayIndexing	penum -> ht_landscape . widths [ 0 ]		1097307	1					
ANR	1097872	MemberAccess	penum -> ht_landscape . widths		1097307	0					
ANR	1097873	PtrMemberAccess	penum -> ht_landscape		1097307	0					
ANR	1097874	Identifier	penum		1097307	0					
ANR	1097875	Identifier	ht_landscape		1097307	1					
ANR	1097876	Identifier	widths		1097307	1					
ANR	1097877	PrimaryExpression	0		1097307	1					
ANR	1097878	Argument	0		1097307	1					
ANR	1097879	PrimaryExpression	0		1097307	0					
ANR	1097880	Argument	sizeof ( int ) * LAND_BITS		1097307	2					
ANR	1097881	MultiplicativeExpression	sizeof ( int ) * LAND_BITS		1097307	0		*			
ANR	1097882	SizeofExpression	sizeof ( int )		1097307	0					
ANR	1097883	Sizeof	sizeof		1097307	0					
ANR	1097884	SizeofOperand	int		1097307	1					
ANR	1097885	Identifier	LAND_BITS		1097307	1					
ANR	1097886	ExpressionStatement	penum -> ht_landscape . offset_set = false	673:8:25274:25312	1097307	19	True				
ANR	1097887	AssignmentExpression	penum -> ht_landscape . offset_set = false		1097307	0		=			
ANR	1097888	MemberAccess	penum -> ht_landscape . offset_set		1097307	0					
ANR	1097889	PtrMemberAccess	penum -> ht_landscape		1097307	0					
ANR	1097890	Identifier	penum		1097307	0					
ANR	1097891	Identifier	ht_landscape		1097307	1					
ANR	1097892	Identifier	offset_set		1097307	1					
ANR	1097893	Identifier	false		1097307	1					
ANR	1097894	ExpressionStatement	penum -> ht_offset_bits = 0	674:8:25322:25347	1097307	20	True				
ANR	1097895	AssignmentExpression	penum -> ht_offset_bits = 0		1097307	0		=			
ANR	1097896	PtrMemberAccess	penum -> ht_offset_bits		1097307	0					
ANR	1097897	Identifier	penum		1097307	0					
ANR	1097898	Identifier	ht_offset_bits		1097307	1					
ANR	1097899	PrimaryExpression	0		1097307	1					
ANR	1097900	IfStatement	if ( code >= 0 )		1097307	21					
ANR	1097901	Condition	code >= 0	675:12:25398:25406	1097307	0	True				
ANR	1097902	RelationalExpression	code >= 0		1097307	0		>=			
ANR	1097903	Identifier	code		1097307	0					
ANR	1097904	PrimaryExpression	0		1097307	1					
ANR	1097905	CompoundStatement		99:23:4829:4829	1097307	1					
ANR	1097906	ExpressionStatement	"memset ( penum -> line , 0 , LAND_BITS * penum -> line_size * spp_out + 16 )"	677:12:25470:25537	1097307	0	True				
ANR	1097907	CallExpression	"memset ( penum -> line , 0 , LAND_BITS * penum -> line_size * spp_out + 16 )"		1097307	0					
ANR	1097908	Callee	memset		1097307	0					
ANR	1097909	Identifier	memset		1097307	0					
ANR	1097910	ArgumentList	penum -> line		1097307	1					
ANR	1097911	Argument	penum -> line		1097307	0					
ANR	1097912	PtrMemberAccess	penum -> line		1097307	0					
ANR	1097913	Identifier	penum		1097307	0					
ANR	1097914	Identifier	line		1097307	1					
ANR	1097915	Argument	0		1097307	1					
ANR	1097916	PrimaryExpression	0		1097307	0					
ANR	1097917	Argument	LAND_BITS * penum -> line_size * spp_out + 16		1097307	2					
ANR	1097918	AdditiveExpression	LAND_BITS * penum -> line_size * spp_out + 16		1097307	0		+			
ANR	1097919	MultiplicativeExpression	LAND_BITS * penum -> line_size * spp_out		1097307	0		*			
ANR	1097920	Identifier	LAND_BITS		1097307	0					
ANR	1097921	MultiplicativeExpression	penum -> line_size * spp_out		1097307	1		*			
ANR	1097922	PtrMemberAccess	penum -> line_size		1097307	0					
ANR	1097923	Identifier	penum		1097307	0					
ANR	1097924	Identifier	line_size		1097307	1					
ANR	1097925	Identifier	spp_out		1097307	1					
ANR	1097926	PrimaryExpression	16		1097307	1					
ANR	1097927	ExpressionStatement	"memset ( penum -> ht_buffer , 0 , penum -> line_size * ( LAND_BITS >> 3 ) * spp_out )"	678:12:25551:25623	1097307	1	True				
ANR	1097928	CallExpression	"memset ( penum -> ht_buffer , 0 , penum -> line_size * ( LAND_BITS >> 3 ) * spp_out )"		1097307	0					
ANR	1097929	Callee	memset		1097307	0					
ANR	1097930	Identifier	memset		1097307	0					
ANR	1097931	ArgumentList	penum -> ht_buffer		1097307	1					
ANR	1097932	Argument	penum -> ht_buffer		1097307	0					
ANR	1097933	PtrMemberAccess	penum -> ht_buffer		1097307	0					
ANR	1097934	Identifier	penum		1097307	0					
ANR	1097935	Identifier	ht_buffer		1097307	1					
ANR	1097936	Argument	0		1097307	1					
ANR	1097937	PrimaryExpression	0		1097307	0					
ANR	1097938	Argument	penum -> line_size * ( LAND_BITS >> 3 ) * spp_out		1097307	2					
ANR	1097939	MultiplicativeExpression	penum -> line_size * ( LAND_BITS >> 3 ) * spp_out		1097307	0		*			
ANR	1097940	PtrMemberAccess	penum -> line_size		1097307	0					
ANR	1097941	Identifier	penum		1097307	0					
ANR	1097942	Identifier	line_size		1097307	1					
ANR	1097943	MultiplicativeExpression	( LAND_BITS >> 3 ) * spp_out		1097307	1		*			
ANR	1097944	ShiftExpression	LAND_BITS >> 3		1097307	0		>>			
ANR	1097945	Identifier	LAND_BITS		1097307	0					
ANR	1097946	PrimaryExpression	3		1097307	1					
ANR	1097947	Identifier	spp_out		1097307	1					
ANR	1097948	ExpressionStatement	"memset ( penum -> thresh_buffer , 0 , LAND_BITS * penum -> line_size + 16 )"	679:12:25637:25703	1097307	2	True				
ANR	1097949	CallExpression	"memset ( penum -> thresh_buffer , 0 , LAND_BITS * penum -> line_size + 16 )"		1097307	0					
ANR	1097950	Callee	memset		1097307	0					
ANR	1097951	Identifier	memset		1097307	0					
ANR	1097952	ArgumentList	penum -> thresh_buffer		1097307	1					
ANR	1097953	Argument	penum -> thresh_buffer		1097307	0					
ANR	1097954	PtrMemberAccess	penum -> thresh_buffer		1097307	0					
ANR	1097955	Identifier	penum		1097307	0					
ANR	1097956	Identifier	thresh_buffer		1097307	1					
ANR	1097957	Argument	0		1097307	1					
ANR	1097958	PrimaryExpression	0		1097307	0					
ANR	1097959	Argument	LAND_BITS * penum -> line_size + 16		1097307	2					
ANR	1097960	AdditiveExpression	LAND_BITS * penum -> line_size + 16		1097307	0		+			
ANR	1097961	MultiplicativeExpression	LAND_BITS * penum -> line_size		1097307	0		*			
ANR	1097962	Identifier	LAND_BITS		1097307	0					
ANR	1097963	PtrMemberAccess	penum -> line_size		1097307	1					
ANR	1097964	Identifier	penum		1097307	0					
ANR	1097965	Identifier	line_size		1097307	1					
ANR	1097966	PrimaryExpression	16		1097307	1					
ANR	1097967	ElseStatement	else		1097307	0					
ANR	1097968	CompoundStatement		106:11:5153:5153	1097307	0					
ANR	1097969	ExpressionStatement	dda_ht = penum -> dda . pixel0 . x	690:8:26195:26223	1097307	0	True				
ANR	1097970	AssignmentExpression	dda_ht = penum -> dda . pixel0 . x		1097307	0		=			
ANR	1097971	Identifier	dda_ht		1097307	0					
ANR	1097972	MemberAccess	penum -> dda . pixel0 . x		1097307	1					
ANR	1097973	MemberAccess	penum -> dda . pixel0		1097307	0					
ANR	1097974	PtrMemberAccess	penum -> dda		1097307	0					
ANR	1097975	Identifier	penum		1097307	0					
ANR	1097976	Identifier	dda		1097307	1					
ANR	1097977	Identifier	pixel0		1097307	1					
ANR	1097978	Identifier	x		1097307	1					
ANR	1097979	IfStatement	if ( penum -> dxx > 0 )		1097307	1					
ANR	1097980	Condition	penum -> dxx > 0	691:12:26237:26250	1097307	0	True				
ANR	1097981	RelationalExpression	penum -> dxx > 0		1097307	0		>			
ANR	1097982	PtrMemberAccess	penum -> dxx		1097307	0					
ANR	1097983	Identifier	penum		1097307	0					
ANR	1097984	Identifier	dxx		1097307	1					
ANR	1097985	PrimaryExpression	0		1097307	1					
ANR	1097986	ExpressionStatement	"dda_translate ( dda_ht , - fixed_epsilon )"	692:12:26265:26302	1097307	1	True				
ANR	1097987	CallExpression	"dda_translate ( dda_ht , - fixed_epsilon )"		1097307	0					
ANR	1097988	Callee	dda_translate		1097307	0					
ANR	1097989	Identifier	dda_translate		1097307	0					
ANR	1097990	ArgumentList	dda_ht		1097307	1					
ANR	1097991	Argument	dda_ht		1097307	0					
ANR	1097992	Identifier	dda_ht		1097307	0					
ANR	1097993	Argument	- fixed_epsilon		1097307	1					
ANR	1097994	UnaryOperationExpression	- fixed_epsilon		1097307	0					
ANR	1097995	UnaryOperator	-		1097307	0					
ANR	1097996	Identifier	fixed_epsilon		1097307	1					
ANR	1097997	ExpressionStatement	"memset ( & ( penum -> ht_landscape ) , 0 , sizeof ( ht_landscape_info_t ) )"	694:8:26414:26476	1097307	2	True				
ANR	1097998	CallExpression	"memset ( & ( penum -> ht_landscape ) , 0 , sizeof ( ht_landscape_info_t ) )"		1097307	0					
ANR	1097999	Callee	memset		1097307	0					
ANR	1098000	Identifier	memset		1097307	0					
ANR	1098001	ArgumentList	& ( penum -> ht_landscape )		1097307	1					
ANR	1098002	Argument	& ( penum -> ht_landscape )		1097307	0					
ANR	1098003	UnaryOperationExpression	& ( penum -> ht_landscape )		1097307	0					
ANR	1098004	UnaryOperator	&		1097307	0					
ANR	1098005	PtrMemberAccess	penum -> ht_landscape		1097307	1					
ANR	1098006	Identifier	penum		1097307	0					
ANR	1098007	Identifier	ht_landscape		1097307	1					
ANR	1098008	Argument	0		1097307	1					
ANR	1098009	PrimaryExpression	0		1097307	0					
ANR	1098010	Argument	sizeof ( ht_landscape_info_t )		1097307	2					
ANR	1098011	SizeofExpression	sizeof ( ht_landscape_info_t )		1097307	0					
ANR	1098012	Sizeof	sizeof		1097307	0					
ANR	1098013	SizeofOperand	ht_landscape_info_t		1097307	1					
ANR	1098014	ExpressionStatement	ox = dda_current ( dda_ht )	695:8:26486:26510	1097307	3	True				
ANR	1098015	AssignmentExpression	ox = dda_current ( dda_ht )		1097307	0		=			
ANR	1098016	Identifier	ox		1097307	0					
ANR	1098017	CallExpression	dda_current ( dda_ht )		1097307	1					
ANR	1098018	Callee	dda_current		1097307	0					
ANR	1098019	Identifier	dda_current		1097307	0					
ANR	1098020	ArgumentList	dda_ht		1097307	1					
ANR	1098021	Argument	dda_ht		1097307	0					
ANR	1098022	Identifier	dda_ht		1097307	0					
ANR	1098023	ExpressionStatement	"dev_width = gxht_dda_length ( & dda_ht , penum -> rect . w )"	696:8:26520:26571	1097307	4	True				
ANR	1098024	AssignmentExpression	"dev_width = gxht_dda_length ( & dda_ht , penum -> rect . w )"		1097307	0		=			
ANR	1098025	Identifier	dev_width		1097307	0					
ANR	1098026	CallExpression	"gxht_dda_length ( & dda_ht , penum -> rect . w )"		1097307	1					
ANR	1098027	Callee	gxht_dda_length		1097307	0					
ANR	1098028	Identifier	gxht_dda_length		1097307	0					
ANR	1098029	ArgumentList	& dda_ht		1097307	1					
ANR	1098030	Argument	& dda_ht		1097307	0					
ANR	1098031	UnaryOperationExpression	& dda_ht		1097307	0					
ANR	1098032	UnaryOperator	&		1097307	0					
ANR	1098033	Identifier	dda_ht		1097307	1					
ANR	1098034	Argument	penum -> rect . w		1097307	1					
ANR	1098035	MemberAccess	penum -> rect . w		1097307	0					
ANR	1098036	PtrMemberAccess	penum -> rect		1097307	0					
ANR	1098037	Identifier	penum		1097307	0					
ANR	1098038	Identifier	rect		1097307	1					
ANR	1098039	Identifier	w		1097307	1					
ANR	1098040	ExpressionStatement	penum -> ht_offset_bits = ( - fixed2int_var_rounded ( ox ) ) & ( bitmap_raster ( 1 ) - 1 )	703:8:26919:26996	1097307	5	True				
ANR	1098041	AssignmentExpression	penum -> ht_offset_bits = ( - fixed2int_var_rounded ( ox ) ) & ( bitmap_raster ( 1 ) - 1 )		1097307	0		=			
ANR	1098042	PtrMemberAccess	penum -> ht_offset_bits		1097307	0					
ANR	1098043	Identifier	penum		1097307	0					
ANR	1098044	Identifier	ht_offset_bits		1097307	1					
ANR	1098045	BitAndExpression	( - fixed2int_var_rounded ( ox ) ) & ( bitmap_raster ( 1 ) - 1 )		1097307	1		&			
ANR	1098046	UnaryOperationExpression	- fixed2int_var_rounded ( ox )		1097307	0					
ANR	1098047	UnaryOperator	-		1097307	0					
ANR	1098048	CallExpression	fixed2int_var_rounded ( ox )		1097307	1					
ANR	1098049	Callee	fixed2int_var_rounded		1097307	0					
ANR	1098050	Identifier	fixed2int_var_rounded		1097307	0					
ANR	1098051	ArgumentList	ox		1097307	1					
ANR	1098052	Argument	ox		1097307	0					
ANR	1098053	Identifier	ox		1097307	0					
ANR	1098054	AdditiveExpression	bitmap_raster ( 1 ) - 1		1097307	1		-			
ANR	1098055	CallExpression	bitmap_raster ( 1 )		1097307	0					
ANR	1098056	Callee	bitmap_raster		1097307	0					
ANR	1098057	Identifier	bitmap_raster		1097307	0					
ANR	1098058	ArgumentList	1		1097307	1					
ANR	1098059	Argument	1		1097307	0					
ANR	1098060	PrimaryExpression	1		1097307	0					
ANR	1098061	PrimaryExpression	1		1097307	1					
ANR	1098062	IfStatement	if ( penum -> ht_offset_bits > 0 )		1097307	6					
ANR	1098063	Condition	penum -> ht_offset_bits > 0	704:12:27010:27034	1097307	0	True				
ANR	1098064	RelationalExpression	penum -> ht_offset_bits > 0		1097307	0		>			
ANR	1098065	PtrMemberAccess	penum -> ht_offset_bits		1097307	0					
ANR	1098066	Identifier	penum		1097307	0					
ANR	1098067	Identifier	ht_offset_bits		1097307	1					
ANR	1098068	PrimaryExpression	0		1097307	1					
ANR	1098069	CompoundStatement		128:39:6457:6457	1097307	1					
ANR	1098070	ExpressionStatement	penum -> ht_stride = bitmap_raster ( ( 7 + ( dev_width + 4 ) ) + ( ARCH_SIZEOF_LONG * 8 ) )	705:12:27051:27131	1097307	0	True				
ANR	1098071	AssignmentExpression	penum -> ht_stride = bitmap_raster ( ( 7 + ( dev_width + 4 ) ) + ( ARCH_SIZEOF_LONG * 8 ) )		1097307	0		=			
ANR	1098072	PtrMemberAccess	penum -> ht_stride		1097307	0					
ANR	1098073	Identifier	penum		1097307	0					
ANR	1098074	Identifier	ht_stride		1097307	1					
ANR	1098075	CallExpression	bitmap_raster ( ( 7 + ( dev_width + 4 ) ) + ( ARCH_SIZEOF_LONG * 8 ) )		1097307	1					
ANR	1098076	Callee	bitmap_raster		1097307	0					
ANR	1098077	Identifier	bitmap_raster		1097307	0					
ANR	1098078	ArgumentList	( 7 + ( dev_width + 4 ) ) + ( ARCH_SIZEOF_LONG * 8 )		1097307	1					
ANR	1098079	Argument	( 7 + ( dev_width + 4 ) ) + ( ARCH_SIZEOF_LONG * 8 )		1097307	0					
ANR	1098080	AdditiveExpression	( 7 + ( dev_width + 4 ) ) + ( ARCH_SIZEOF_LONG * 8 )		1097307	0		+			
ANR	1098081	AdditiveExpression	7 + ( dev_width + 4 )		1097307	0		+			
ANR	1098082	PrimaryExpression	7		1097307	0					
ANR	1098083	AdditiveExpression	dev_width + 4		1097307	1		+			
ANR	1098084	Identifier	dev_width		1097307	0					
ANR	1098085	PrimaryExpression	4		1097307	1					
ANR	1098086	MultiplicativeExpression	ARCH_SIZEOF_LONG * 8		1097307	1		*			
ANR	1098087	Identifier	ARCH_SIZEOF_LONG		1097307	0					
ANR	1098088	PrimaryExpression	8		1097307	1					
ANR	1098089	ElseStatement	else		1097307	0					
ANR	1098090	CompoundStatement		130:15:6568:6568	1097307	0					
ANR	1098091	ExpressionStatement	penum -> ht_stride = bitmap_raster ( ( 7 + ( dev_width + 2 ) ) + ( ARCH_SIZEOF_LONG * 8 ) )	707:12:27162:27242	1097307	0	True				
ANR	1098092	AssignmentExpression	penum -> ht_stride = bitmap_raster ( ( 7 + ( dev_width + 2 ) ) + ( ARCH_SIZEOF_LONG * 8 ) )		1097307	0		=			
ANR	1098093	PtrMemberAccess	penum -> ht_stride		1097307	0					
ANR	1098094	Identifier	penum		1097307	0					
ANR	1098095	Identifier	ht_stride		1097307	1					
ANR	1098096	CallExpression	bitmap_raster ( ( 7 + ( dev_width + 2 ) ) + ( ARCH_SIZEOF_LONG * 8 ) )		1097307	1					
ANR	1098097	Callee	bitmap_raster		1097307	0					
ANR	1098098	Identifier	bitmap_raster		1097307	0					
ANR	1098099	ArgumentList	( 7 + ( dev_width + 2 ) ) + ( ARCH_SIZEOF_LONG * 8 )		1097307	1					
ANR	1098100	Argument	( 7 + ( dev_width + 2 ) ) + ( ARCH_SIZEOF_LONG * 8 )		1097307	0					
ANR	1098101	AdditiveExpression	( 7 + ( dev_width + 2 ) ) + ( ARCH_SIZEOF_LONG * 8 )		1097307	0		+			
ANR	1098102	AdditiveExpression	7 + ( dev_width + 2 )		1097307	0		+			
ANR	1098103	PrimaryExpression	7		1097307	0					
ANR	1098104	AdditiveExpression	dev_width + 2		1097307	1		+			
ANR	1098105	Identifier	dev_width		1097307	0					
ANR	1098106	PrimaryExpression	2		1097307	1					
ANR	1098107	MultiplicativeExpression	ARCH_SIZEOF_LONG * 8		1097307	1		*			
ANR	1098108	Identifier	ARCH_SIZEOF_LONG		1097307	0					
ANR	1098109	PrimaryExpression	8		1097307	1					
ANR	1098110	ExpressionStatement	max_height = ( int ) ceil ( fixed2float ( any_abs ( penum -> dst_height ) ) / ( float ) penum -> Height )	712:8:27412:27544	1097307	7	True				
ANR	1098111	AssignmentExpression	max_height = ( int ) ceil ( fixed2float ( any_abs ( penum -> dst_height ) ) / ( float ) penum -> Height )		1097307	0		=			
ANR	1098112	Identifier	max_height		1097307	0					
ANR	1098113	CastExpression	( int ) ceil ( fixed2float ( any_abs ( penum -> dst_height ) ) / ( float ) penum -> Height )		1097307	1					
ANR	1098114	CastTarget	int		1097307	0					
ANR	1098115	CallExpression	ceil ( fixed2float ( any_abs ( penum -> dst_height ) ) / ( float ) penum -> Height )		1097307	1					
ANR	1098116	Callee	ceil		1097307	0					
ANR	1098117	Identifier	ceil		1097307	0					
ANR	1098118	ArgumentList	fixed2float ( any_abs ( penum -> dst_height ) ) / ( float ) penum -> Height		1097307	1					
ANR	1098119	Argument	fixed2float ( any_abs ( penum -> dst_height ) ) / ( float ) penum -> Height		1097307	0					
ANR	1098120	MultiplicativeExpression	fixed2float ( any_abs ( penum -> dst_height ) ) / ( float ) penum -> Height		1097307	0		/			
ANR	1098121	CallExpression	fixed2float ( any_abs ( penum -> dst_height ) )		1097307	0					
ANR	1098122	Callee	fixed2float		1097307	0					
ANR	1098123	Identifier	fixed2float		1097307	0					
ANR	1098124	ArgumentList	any_abs ( penum -> dst_height )		1097307	1					
ANR	1098125	Argument	any_abs ( penum -> dst_height )		1097307	0					
ANR	1098126	CallExpression	any_abs ( penum -> dst_height )		1097307	0					
ANR	1098127	Callee	any_abs		1097307	0					
ANR	1098128	Identifier	any_abs		1097307	0					
ANR	1098129	ArgumentList	penum -> dst_height		1097307	1					
ANR	1098130	Argument	penum -> dst_height		1097307	0					
ANR	1098131	PtrMemberAccess	penum -> dst_height		1097307	0					
ANR	1098132	Identifier	penum		1097307	0					
ANR	1098133	Identifier	dst_height		1097307	1					
ANR	1098134	CastExpression	( float ) penum -> Height		1097307	1					
ANR	1098135	CastTarget	float		1097307	0					
ANR	1098136	PtrMemberAccess	penum -> Height		1097307	1					
ANR	1098137	Identifier	penum		1097307	0					
ANR	1098138	Identifier	Height		1097307	1					
ANR	1098139	IfStatement	if ( max_height <= 0 )		1097307	8					
ANR	1098140	Condition	max_height <= 0	714:12:27558:27572	1097307	0	True				
ANR	1098141	RelationalExpression	max_height <= 0		1097307	0		<=			
ANR	1098142	Identifier	max_height		1097307	0					
ANR	1098143	PrimaryExpression	0		1097307	1					
ANR	1098144	ReturnStatement	return - 1 ;	715:12:27587:27596	1097307	1	True				
ANR	1098145	UnaryOperationExpression	- 1		1097307	0					
ANR	1098146	UnaryOperator	-		1097307	0					
ANR	1098147	PrimaryExpression	1		1097307	1					
ANR	1098148	IfStatement	if ( penum -> ht_stride * spp_out > max_int / max_height )		1097307	9					
ANR	1098149	Condition	penum -> ht_stride * spp_out > max_int / max_height	716:12:27669:27717	1097307	0	True				
ANR	1098150	RelationalExpression	penum -> ht_stride * spp_out > max_int / max_height		1097307	0		>			
ANR	1098151	MultiplicativeExpression	penum -> ht_stride * spp_out		1097307	0		*			
ANR	1098152	PtrMemberAccess	penum -> ht_stride		1097307	0					
ANR	1098153	Identifier	penum		1097307	0					
ANR	1098154	Identifier	ht_stride		1097307	1					
ANR	1098155	Identifier	spp_out		1097307	1					
ANR	1098156	MultiplicativeExpression	max_int / max_height		1097307	1		/			
ANR	1098157	Identifier	max_int		1097307	0					
ANR	1098158	Identifier	max_height		1097307	1					
ANR	1098159	ReturnStatement	return - 1 ;	717:12:27732:27741	1097307	1	True				
ANR	1098160	UnaryOperationExpression	- 1		1097307	0					
ANR	1098161	UnaryOperator	-		1097307	0					
ANR	1098162	PrimaryExpression	1		1097307	1					
ANR	1098163	ExpressionStatement	"penum -> ht_buffer = gs_alloc_bytes ( penum -> memory , penum -> ht_stride * max_height * spp_out , ""gxht_thresh"" )"	719:8:27775:27957	1097307	10	True				
ANR	1098164	AssignmentExpression	"penum -> ht_buffer = gs_alloc_bytes ( penum -> memory , penum -> ht_stride * max_height * spp_out , ""gxht_thresh"" )"		1097307	0		=			
ANR	1098165	PtrMemberAccess	penum -> ht_buffer		1097307	0					
ANR	1098166	Identifier	penum		1097307	0					
ANR	1098167	Identifier	ht_buffer		1097307	1					
ANR	1098168	CallExpression	"gs_alloc_bytes ( penum -> memory , penum -> ht_stride * max_height * spp_out , ""gxht_thresh"" )"		1097307	1					
ANR	1098169	Callee	gs_alloc_bytes		1097307	0					
ANR	1098170	Identifier	gs_alloc_bytes		1097307	0					
ANR	1098171	ArgumentList	penum -> memory		1097307	1					
ANR	1098172	Argument	penum -> memory		1097307	0					
ANR	1098173	PtrMemberAccess	penum -> memory		1097307	0					
ANR	1098174	Identifier	penum		1097307	0					
ANR	1098175	Identifier	memory		1097307	1					
ANR	1098176	Argument	penum -> ht_stride * max_height * spp_out		1097307	1					
ANR	1098177	MultiplicativeExpression	penum -> ht_stride * max_height * spp_out		1097307	0		*			
ANR	1098178	PtrMemberAccess	penum -> ht_stride		1097307	0					
ANR	1098179	Identifier	penum		1097307	0					
ANR	1098180	Identifier	ht_stride		1097307	1					
ANR	1098181	MultiplicativeExpression	max_height * spp_out		1097307	1		*			
ANR	1098182	Identifier	max_height		1097307	0					
ANR	1098183	Identifier	spp_out		1097307	1					
ANR	1098184	Argument	"""gxht_thresh"""		1097307	2					
ANR	1098185	PrimaryExpression	"""gxht_thresh"""		1097307	0					
ANR	1098186	ExpressionStatement	penum -> ht_plane_height = penum -> ht_stride * max_height	723:8:27967:28021	1097307	11	True				
ANR	1098187	AssignmentExpression	penum -> ht_plane_height = penum -> ht_stride * max_height		1097307	0		=			
ANR	1098188	PtrMemberAccess	penum -> ht_plane_height		1097307	0					
ANR	1098189	Identifier	penum		1097307	0					
ANR	1098190	Identifier	ht_plane_height		1097307	1					
ANR	1098191	MultiplicativeExpression	penum -> ht_stride * max_height		1097307	1		*			
ANR	1098192	PtrMemberAccess	penum -> ht_stride		1097307	0					
ANR	1098193	Identifier	penum		1097307	0					
ANR	1098194	Identifier	ht_stride		1097307	1					
ANR	1098195	Identifier	max_height		1097307	1					
ANR	1098196	ExpressionStatement	temp = ( int ) ceil ( ( float ) ( ( dev_width + 15.0 ) + 15.0 ) / 16.0 )	737:8:28920:28979	1097307	12	True				
ANR	1098197	AssignmentExpression	temp = ( int ) ceil ( ( float ) ( ( dev_width + 15.0 ) + 15.0 ) / 16.0 )		1097307	0		=			
ANR	1098198	Identifier	temp		1097307	0					
ANR	1098199	CastExpression	( int ) ceil ( ( float ) ( ( dev_width + 15.0 ) + 15.0 ) / 16.0 )		1097307	1					
ANR	1098200	CastTarget	int		1097307	0					
ANR	1098201	CallExpression	ceil ( ( float ) ( ( dev_width + 15.0 ) + 15.0 ) / 16.0 )		1097307	1					
ANR	1098202	Callee	ceil		1097307	0					
ANR	1098203	Identifier	ceil		1097307	0					
ANR	1098204	ArgumentList	( float ) ( ( dev_width + 15.0 ) + 15.0 ) / 16.0		1097307	1					
ANR	1098205	Argument	( float ) ( ( dev_width + 15.0 ) + 15.0 ) / 16.0		1097307	0					
ANR	1098206	MultiplicativeExpression	( float ) ( ( dev_width + 15.0 ) + 15.0 ) / 16.0		1097307	0		/			
ANR	1098207	CastExpression	( float ) ( ( dev_width + 15.0 ) + 15.0 )		1097307	0					
ANR	1098208	CastTarget	float		1097307	0					
ANR	1098209	AdditiveExpression	( dev_width + 15.0 ) + 15.0		1097307	1		+			
ANR	1098210	AdditiveExpression	dev_width + 15.0		1097307	0		+			
ANR	1098211	Identifier	dev_width		1097307	0					
ANR	1098212	PrimaryExpression	15.0		1097307	1					
ANR	1098213	PrimaryExpression	15.0		1097307	1					
ANR	1098214	PrimaryExpression	16.0		1097307	1					
ANR	1098215	ExpressionStatement	penum -> line_size = bitmap_raster ( temp * 16 * 8 )	738:8:28989:29036	1097307	13	True				
ANR	1098216	AssignmentExpression	penum -> line_size = bitmap_raster ( temp * 16 * 8 )		1097307	0		=			
ANR	1098217	PtrMemberAccess	penum -> line_size		1097307	0					
ANR	1098218	Identifier	penum		1097307	0					
ANR	1098219	Identifier	line_size		1097307	1					
ANR	1098220	CallExpression	bitmap_raster ( temp * 16 * 8 )		1097307	1					
ANR	1098221	Callee	bitmap_raster		1097307	0					
ANR	1098222	Identifier	bitmap_raster		1097307	0					
ANR	1098223	ArgumentList	temp * 16 * 8		1097307	1					
ANR	1098224	Argument	temp * 16 * 8		1097307	0					
ANR	1098225	MultiplicativeExpression	temp * 16 * 8		1097307	0		*			
ANR	1098226	Identifier	temp		1097307	0					
ANR	1098227	MultiplicativeExpression	16 * 8		1097307	1		*			
ANR	1098228	PrimaryExpression	16		1097307	0					
ANR	1098229	PrimaryExpression	8		1097307	1					
ANR	1098230	IfStatement	if ( penum -> line_size > max_int / max_height )		1097307	14					
ANR	1098231	Condition	penum -> line_size > max_int / max_height	739:12:29068:29106	1097307	0	True				
ANR	1098232	RelationalExpression	penum -> line_size > max_int / max_height		1097307	0		>			
ANR	1098233	PtrMemberAccess	penum -> line_size		1097307	0					
ANR	1098234	Identifier	penum		1097307	0					
ANR	1098235	Identifier	line_size		1097307	1					
ANR	1098236	MultiplicativeExpression	max_int / max_height		1097307	1		/			
ANR	1098237	Identifier	max_int		1097307	0					
ANR	1098238	Identifier	max_height		1097307	1					
ANR	1098239	CompoundStatement		163:53:8529:8529	1097307	1					
ANR	1098240	ExpressionStatement	"gs_free_object ( penum -> memory , penum -> ht_buffer , ""gxht_thresh"" )"	740:12:29123:29185	1097307	0	True				
ANR	1098241	CallExpression	"gs_free_object ( penum -> memory , penum -> ht_buffer , ""gxht_thresh"" )"		1097307	0					
ANR	1098242	Callee	gs_free_object		1097307	0					
ANR	1098243	Identifier	gs_free_object		1097307	0					
ANR	1098244	ArgumentList	penum -> memory		1097307	1					
ANR	1098245	Argument	penum -> memory		1097307	0					
ANR	1098246	PtrMemberAccess	penum -> memory		1097307	0					
ANR	1098247	Identifier	penum		1097307	0					
ANR	1098248	Identifier	memory		1097307	1					
ANR	1098249	Argument	penum -> ht_buffer		1097307	1					
ANR	1098250	PtrMemberAccess	penum -> ht_buffer		1097307	0					
ANR	1098251	Identifier	penum		1097307	0					
ANR	1098252	Identifier	ht_buffer		1097307	1					
ANR	1098253	Argument	"""gxht_thresh"""		1097307	2					
ANR	1098254	PrimaryExpression	"""gxht_thresh"""		1097307	0					
ANR	1098255	ExpressionStatement	penum -> ht_buffer = NULL	741:12:29199:29222	1097307	1	True				
ANR	1098256	AssignmentExpression	penum -> ht_buffer = NULL		1097307	0		=			
ANR	1098257	PtrMemberAccess	penum -> ht_buffer		1097307	0					
ANR	1098258	Identifier	penum		1097307	0					
ANR	1098259	Identifier	ht_buffer		1097307	1					
ANR	1098260	Identifier	NULL		1097307	1					
ANR	1098261	ReturnStatement	return - 1 ;	742:12:29236:29245	1097307	2	True				
ANR	1098262	UnaryOperationExpression	- 1		1097307	0					
ANR	1098263	UnaryOperator	-		1097307	0					
ANR	1098264	PrimaryExpression	1		1097307	1					
ANR	1098265	ExpressionStatement	"penum -> line = gs_alloc_bytes ( penum -> memory , penum -> line_size * spp_out , ""gxht_thresh"" )"	744:8:29307:29430	1097307	15	True				
ANR	1098266	AssignmentExpression	"penum -> line = gs_alloc_bytes ( penum -> memory , penum -> line_size * spp_out , ""gxht_thresh"" )"		1097307	0		=			
ANR	1098267	PtrMemberAccess	penum -> line		1097307	0					
ANR	1098268	Identifier	penum		1097307	0					
ANR	1098269	Identifier	line		1097307	1					
ANR	1098270	CallExpression	"gs_alloc_bytes ( penum -> memory , penum -> line_size * spp_out , ""gxht_thresh"" )"		1097307	1					
ANR	1098271	Callee	gs_alloc_bytes		1097307	0					
ANR	1098272	Identifier	gs_alloc_bytes		1097307	0					
ANR	1098273	ArgumentList	penum -> memory		1097307	1					
ANR	1098274	Argument	penum -> memory		1097307	0					
ANR	1098275	PtrMemberAccess	penum -> memory		1097307	0					
ANR	1098276	Identifier	penum		1097307	0					
ANR	1098277	Identifier	memory		1097307	1					
ANR	1098278	Argument	penum -> line_size * spp_out		1097307	1					
ANR	1098279	MultiplicativeExpression	penum -> line_size * spp_out		1097307	0		*			
ANR	1098280	PtrMemberAccess	penum -> line_size		1097307	0					
ANR	1098281	Identifier	penum		1097307	0					
ANR	1098282	Identifier	line_size		1097307	1					
ANR	1098283	Identifier	spp_out		1097307	1					
ANR	1098284	Argument	"""gxht_thresh"""		1097307	2					
ANR	1098285	PrimaryExpression	"""gxht_thresh"""		1097307	0					
ANR	1098286	ExpressionStatement	"penum -> thresh_buffer = gs_alloc_bytes ( penum -> memory , penum -> line_size * max_height , ""gxht_thresh"" )"	746:8:29440:29630	1097307	16	True				
ANR	1098287	AssignmentExpression	"penum -> thresh_buffer = gs_alloc_bytes ( penum -> memory , penum -> line_size * max_height , ""gxht_thresh"" )"		1097307	0		=			
ANR	1098288	PtrMemberAccess	penum -> thresh_buffer		1097307	0					
ANR	1098289	Identifier	penum		1097307	0					
ANR	1098290	Identifier	thresh_buffer		1097307	1					
ANR	1098291	CallExpression	"gs_alloc_bytes ( penum -> memory , penum -> line_size * max_height , ""gxht_thresh"" )"		1097307	1					
ANR	1098292	Callee	gs_alloc_bytes		1097307	0					
ANR	1098293	Identifier	gs_alloc_bytes		1097307	0					
ANR	1098294	ArgumentList	penum -> memory		1097307	1					
ANR	1098295	Argument	penum -> memory		1097307	0					
ANR	1098296	PtrMemberAccess	penum -> memory		1097307	0					
ANR	1098297	Identifier	penum		1097307	0					
ANR	1098298	Identifier	memory		1097307	1					
ANR	1098299	Argument	penum -> line_size * max_height		1097307	1					
ANR	1098300	MultiplicativeExpression	penum -> line_size * max_height		1097307	0		*			
ANR	1098301	PtrMemberAccess	penum -> line_size		1097307	0					
ANR	1098302	Identifier	penum		1097307	0					
ANR	1098303	Identifier	line_size		1097307	1					
ANR	1098304	Identifier	max_height		1097307	1					
ANR	1098305	Argument	"""gxht_thresh"""		1097307	2					
ANR	1098306	PrimaryExpression	"""gxht_thresh"""		1097307	0					
ANR	1098307	IfStatement	if ( penum -> line == NULL || penum -> thresh_buffer == NULL || penum -> ht_buffer == NULL )		1097307	17					
ANR	1098308	Condition	penum -> line == NULL || penum -> thresh_buffer == NULL || penum -> ht_buffer == NULL	749:12:29644:29734	1097307	0	True				
ANR	1098309	OrExpression	penum -> line == NULL || penum -> thresh_buffer == NULL || penum -> ht_buffer == NULL		1097307	0		||			
ANR	1098310	EqualityExpression	penum -> line == NULL		1097307	0		==			
ANR	1098311	PtrMemberAccess	penum -> line		1097307	0					
ANR	1098312	Identifier	penum		1097307	0					
ANR	1098313	Identifier	line		1097307	1					
ANR	1098314	Identifier	NULL		1097307	1					
ANR	1098315	OrExpression	penum -> thresh_buffer == NULL || penum -> ht_buffer == NULL		1097307	1		||			
ANR	1098316	EqualityExpression	penum -> thresh_buffer == NULL		1097307	0		==			
ANR	1098317	PtrMemberAccess	penum -> thresh_buffer		1097307	0					
ANR	1098318	Identifier	penum		1097307	0					
ANR	1098319	Identifier	thresh_buffer		1097307	1					
ANR	1098320	Identifier	NULL		1097307	1					
ANR	1098321	EqualityExpression	penum -> ht_buffer == NULL		1097307	1		==			
ANR	1098322	PtrMemberAccess	penum -> ht_buffer		1097307	0					
ANR	1098323	Identifier	penum		1097307	0					
ANR	1098324	Identifier	ht_buffer		1097307	1					
ANR	1098325	Identifier	NULL		1097307	1					
ANR	1098326	CompoundStatement		174:38:9157:9157	1097307	1					
ANR	1098327	ReturnStatement	return - 1 ;	751:12:29751:29760	1097307	0	True				
ANR	1098328	UnaryOperationExpression	- 1		1097307	0					
ANR	1098329	UnaryOperator	-		1097307	0					
ANR	1098330	PrimaryExpression	1		1097307	1					
ANR	1098331	ElseStatement	else		1097307	0					
ANR	1098332	CompoundStatement		176:15:9197:9197	1097307	0					
ANR	1098333	ExpressionStatement	"memset ( penum -> line , 0 , penum -> line_size * spp_out )"	754:12:29838:29888	1097307	0	True				
ANR	1098334	CallExpression	"memset ( penum -> line , 0 , penum -> line_size * spp_out )"		1097307	0					
ANR	1098335	Callee	memset		1097307	0					
ANR	1098336	Identifier	memset		1097307	0					
ANR	1098337	ArgumentList	penum -> line		1097307	1					
ANR	1098338	Argument	penum -> line		1097307	0					
ANR	1098339	PtrMemberAccess	penum -> line		1097307	0					
ANR	1098340	Identifier	penum		1097307	0					
ANR	1098341	Identifier	line		1097307	1					
ANR	1098342	Argument	0		1097307	1					
ANR	1098343	PrimaryExpression	0		1097307	0					
ANR	1098344	Argument	penum -> line_size * spp_out		1097307	2					
ANR	1098345	MultiplicativeExpression	penum -> line_size * spp_out		1097307	0		*			
ANR	1098346	PtrMemberAccess	penum -> line_size		1097307	0					
ANR	1098347	Identifier	penum		1097307	0					
ANR	1098348	Identifier	line_size		1097307	1					
ANR	1098349	Identifier	spp_out		1097307	1					
ANR	1098350	ExpressionStatement	"memset ( penum -> ht_buffer , 0 , penum -> ht_stride * max_height * spp_out )"	755:12:29902:29970	1097307	1	True				
ANR	1098351	CallExpression	"memset ( penum -> ht_buffer , 0 , penum -> ht_stride * max_height * spp_out )"		1097307	0					
ANR	1098352	Callee	memset		1097307	0					
ANR	1098353	Identifier	memset		1097307	0					
ANR	1098354	ArgumentList	penum -> ht_buffer		1097307	1					
ANR	1098355	Argument	penum -> ht_buffer		1097307	0					
ANR	1098356	PtrMemberAccess	penum -> ht_buffer		1097307	0					
ANR	1098357	Identifier	penum		1097307	0					
ANR	1098358	Identifier	ht_buffer		1097307	1					
ANR	1098359	Argument	0		1097307	1					
ANR	1098360	PrimaryExpression	0		1097307	0					
ANR	1098361	Argument	penum -> ht_stride * max_height * spp_out		1097307	2					
ANR	1098362	MultiplicativeExpression	penum -> ht_stride * max_height * spp_out		1097307	0		*			
ANR	1098363	PtrMemberAccess	penum -> ht_stride		1097307	0					
ANR	1098364	Identifier	penum		1097307	0					
ANR	1098365	Identifier	ht_stride		1097307	1					
ANR	1098366	MultiplicativeExpression	max_height * spp_out		1097307	1		*			
ANR	1098367	Identifier	max_height		1097307	0					
ANR	1098368	Identifier	spp_out		1097307	1					
ANR	1098369	ExpressionStatement	"memset ( penum -> thresh_buffer , 0 , penum -> line_size * max_height )"	756:12:29984:30046	1097307	2	True				
ANR	1098370	CallExpression	"memset ( penum -> thresh_buffer , 0 , penum -> line_size * max_height )"		1097307	0					
ANR	1098371	Callee	memset		1097307	0					
ANR	1098372	Identifier	memset		1097307	0					
ANR	1098373	ArgumentList	penum -> thresh_buffer		1097307	1					
ANR	1098374	Argument	penum -> thresh_buffer		1097307	0					
ANR	1098375	PtrMemberAccess	penum -> thresh_buffer		1097307	0					
ANR	1098376	Identifier	penum		1097307	0					
ANR	1098377	Identifier	thresh_buffer		1097307	1					
ANR	1098378	Argument	0		1097307	1					
ANR	1098379	PrimaryExpression	0		1097307	0					
ANR	1098380	Argument	penum -> line_size * max_height		1097307	2					
ANR	1098381	MultiplicativeExpression	penum -> line_size * max_height		1097307	0		*			
ANR	1098382	PtrMemberAccess	penum -> line_size		1097307	0					
ANR	1098383	Identifier	penum		1097307	0					
ANR	1098384	Identifier	line_size		1097307	1					
ANR	1098385	Identifier	max_height		1097307	1					
ANR	1098386	ReturnStatement	return code ;	760:4:30075:30086	1097307	12	True				
ANR	1098387	Identifier	code		1097307	0					
ANR	1098388	ReturnType	int		1097307	1					
ANR	1098389	Identifier	gxht_thresh_image_init		1097307	2					
ANR	1098390	ParameterList	gx_image_enum * penum		1097307	3					
ANR	1098391	Parameter	gx_image_enum * penum	576:23:20557:20576	1097307	0	True				
ANR	1098392	ParameterType	gx_image_enum *		1097307	0					
ANR	1098393	Identifier	penum		1097307	1					
ANR	1098394	CFGEntryNode	ENTRY		1097307		True				
ANR	1098395	CFGExitNode	EXIT		1097307		True				
ANR	1098396	Symbol	penum -> rect		1097307						
ANR	1098397	Symbol	penum -> x_extent		1097307						
ANR	1098398	Symbol	ARCH_SIZEOF_LONG		1097307						
ANR	1098399	Symbol	penum -> dda . pixel0		1097307						
ANR	1098400	Symbol	penum -> matrix . xx		1097307						
ANR	1098401	Symbol	penum -> y_extent		1097307						
ANR	1098402	Symbol	penum -> ht_landscape . flipy		1097307						
ANR	1098403	Symbol	penum -> dev		1097307						
ANR	1098404	Symbol	max_height		1097307						
ANR	1098405	Symbol	penum -> ht_landscape . offset_set		1097307						
ANR	1098406	Symbol	gs_rethrow		1097307						
ANR	1098407	Symbol	penum -> x_extent . y		1097307						
ANR	1098408	Symbol	penum -> ht_stride		1097307						
ANR	1098409	Symbol	penum -> dev -> color_info		1097307						
ANR	1098410	Symbol	col_length		1097307						
ANR	1098411	Symbol	penum -> line		1097307						
ANR	1098412	Symbol	dev_width		1097307						
ANR	1098413	Symbol	* * * * penum		1097307						
ANR	1098414	Symbol	image_landscape		1097307						
ANR	1098415	Symbol	penum -> ht_landscape . index		1097307						
ANR	1098416	Symbol	penum -> ht_landscape		1097307						
ANR	1098417	Symbol	* penum -> dev		1097307						
ANR	1098418	Symbol	fixed_epsilon		1097307						
ANR	1098419	Symbol	* * penum		1097307						
ANR	1098420	Symbol	spp_out		1097307						
ANR	1098421	Symbol	penum -> rect . w		1097307						
ANR	1098422	Symbol	NULL		1097307						
ANR	1098423	Symbol	penum -> pgs -> dev_ht -> components		1097307						
ANR	1098424	Symbol	penum -> ht_offset_bits		1097307						
ANR	1098425	Symbol	penum		1097307						
ANR	1098426	Symbol	gx_ht_construct_threshold		1097307						
ANR	1098427	Symbol	ceil		1097307						
ANR	1098428	Symbol	penum -> pgs -> dev_ht -> num_comp		1097307						
ANR	1098429	Symbol	* * penum -> pgs -> dev_ht		1097307						
ANR	1098430	Symbol	penum -> y_extent . x		1097307						
ANR	1098431	Symbol	penum -> dda		1097307						
ANR	1098432	Symbol	fixed2int_pixround_perfect		1097307						
ANR	1098433	Symbol	& penum -> pgs -> dev_ht -> components [ k ] . corder		1097307						
ANR	1098434	Symbol	dda_current		1097307						
ANR	1098435	Symbol	penum -> pgs -> dev_ht		1097307						
ANR	1098436	Symbol	penum -> dxx		1097307						
ANR	1098437	Symbol	true		1097307						
ANR	1098438	Symbol	* * penum -> pgs		1097307						
ANR	1098439	Symbol	penum -> ht_landscape . count		1097307						
ANR	1098440	Symbol	penum -> ht_landscape . num_contones		1097307						
ANR	1098441	Symbol	penum -> thresh_buffer		1097307						
ANR	1098442	Symbol	* penum		1097307						
ANR	1098443	Symbol	max_int		1097307						
ANR	1098444	Symbol	gx_device_must_halftone		1097307						
ANR	1098445	Symbol	* * * penum		1097307						
ANR	1098446	Symbol	code		1097307						
ANR	1098447	Symbol	penum -> memory		1097307						
ANR	1098448	Symbol	* penum -> pgs		1097307						
ANR	1098449	Symbol	penum -> ht_landscape . curr_pos		1097307						
ANR	1098450	Symbol	fixed2int_var_rounded		1097307						
ANR	1098451	Symbol	penum -> pgs		1097307						
ANR	1098452	Symbol	penum -> matrix		1097307						
ANR	1098453	Symbol	float2fixed		1097307						
ANR	1098454	Symbol	penum -> line_size		1097307						
ANR	1098455	Symbol	* penum -> pgs -> dev_ht -> components		1097307						
ANR	1098456	Symbol	gxht_dda_length		1097307						
ANR	1098457	Symbol	any_abs		1097307						
ANR	1098458	Symbol	penum -> Height		1097307						
ANR	1098459	Symbol	penum -> ht_plane_height		1097307						
ANR	1098460	Symbol	* penum -> pgs -> dev_ht		1097307						
ANR	1098461	Symbol	LAND_BITS		1097307						
ANR	1098462	Symbol	penum -> dev -> color_info . num_components		1097307						
ANR	1098463	Symbol	* * * penum -> pgs		1097307						
ANR	1098464	Symbol	penum -> ht_landscape . widths		1097307						
ANR	1098465	Symbol	temp		1097307						
ANR	1098466	Symbol	gs_alloc_bytes		1097307						
ANR	1098467	Symbol	& dda_ht		1097307						
ANR	1098468	Symbol	fixed2float		1097307						
ANR	1098469	Symbol	false		1097307						
ANR	1098470	Symbol	penum -> dst_height		1097307						
ANR	1098471	Symbol	ox		1097307						
ANR	1098472	Symbol	penum -> ht_landscape . y_pos		1097307						
ANR	1098473	Symbol	& penum -> ht_landscape		1097307						
ANR	1098474	Symbol	k		1097307						
ANR	1098475	Symbol	d_order		1097307						
ANR	1098476	Symbol	bitmap_raster		1097307						
ANR	1098477	Symbol	penum -> posture		1097307						
ANR	1098478	Symbol	* k		1097307						
ANR	1098479	Symbol	dda_ht		1097307						
ANR	1098480	Symbol	penum -> ht_buffer		1097307						
ANR	1098481	Symbol	penum -> dda . pixel0 . x		1097307						
ANR	1098482	Symbol	penum -> dda . pixel0 . y		1097307						
ANR	1098483	Function	fill_threshold_buffer	763:0:30091:30859							
ANR	1098484	FunctionDef	"fill_threshold_buffer (byte * dest_strip , byte * src_strip , int src_width , int left_offset , int left_width , int num_tiles , int right_width)"		1098483	0					
ANR	1098485	CompoundStatement		767:0:30286:30859	1098483	0					
ANR	1098486	IdentifierDeclStatement	byte * ptr_out_temp = dest_strip ;	768:4:30292:30323	1098483	0	True				
ANR	1098487	IdentifierDecl	* ptr_out_temp = dest_strip		1098483	0					
ANR	1098488	IdentifierDeclType	byte *		1098483	0					
ANR	1098489	Identifier	ptr_out_temp		1098483	1					
ANR	1098490	AssignmentExpression	* ptr_out_temp = dest_strip		1098483	2		=			
ANR	1098491	Identifier	dest_strip		1098483	0					
ANR	1098492	Identifier	dest_strip		1098483	1					
ANR	1098493	IdentifierDeclStatement	int ii ;	769:4:30329:30335	1098483	1	True				
ANR	1098494	IdentifierDecl	ii		1098483	0					
ANR	1098495	IdentifierDeclType	int		1098483	0					
ANR	1098496	Identifier	ii		1098483	1					
ANR	1098497	ExpressionStatement	"memcpy ( dest_strip , src_strip + left_offset , left_width )"	772:4:30362:30417	1098483	2	True				
ANR	1098498	CallExpression	"memcpy ( dest_strip , src_strip + left_offset , left_width )"		1098483	0					
ANR	1098499	Callee	memcpy		1098483	0					
ANR	1098500	Identifier	memcpy		1098483	0					
ANR	1098501	ArgumentList	dest_strip		1098483	1					
ANR	1098502	Argument	dest_strip		1098483	0					
ANR	1098503	Identifier	dest_strip		1098483	0					
ANR	1098504	Argument	src_strip + left_offset		1098483	1					
ANR	1098505	AdditiveExpression	src_strip + left_offset		1098483	0		+			
ANR	1098506	Identifier	src_strip		1098483	0					
ANR	1098507	Identifier	left_offset		1098483	1					
ANR	1098508	Argument	left_width		1098483	2					
ANR	1098509	Identifier	left_width		1098483	0					
ANR	1098510	ExpressionStatement	ptr_out_temp += left_width	773:4:30423:30449	1098483	3	True				
ANR	1098511	AssignmentExpression	ptr_out_temp += left_width		1098483	0		+=			
ANR	1098512	Identifier	ptr_out_temp		1098483	0					
ANR	1098513	Identifier	left_width		1098483	1					
ANR	1098514	ForStatement	for ( ii = 0 ; ii < num_tiles ; ii ++ )		1098483	4					
ANR	1098515	ForInit	ii = 0 ;	775:9:30489:30495	1098483	0	True				
ANR	1098516	AssignmentExpression	ii = 0		1098483	0		=			
ANR	1098517	Identifier	ii		1098483	0					
ANR	1098518	PrimaryExpression	0		1098483	1					
ANR	1098519	Condition	ii < num_tiles	775:17:30497:30510	1098483	1	True				
ANR	1098520	RelationalExpression	ii < num_tiles		1098483	0		<			
ANR	1098521	Identifier	ii		1098483	0					
ANR	1098522	Identifier	num_tiles		1098483	1					
ANR	1098523	PostIncDecOperationExpression	ii ++	775:33:30513:30516	1098483	2	True				
ANR	1098524	Identifier	ii		1098483	0					
ANR	1098525	IncDec	++		1098483	1					
ANR	1098526	CompoundStatement		9:38:231:231	1098483	3					
ANR	1098527	ExpressionStatement	"memcpy ( ptr_out_temp , src_strip , src_width )"	776:8:30528:30570	1098483	0	True				
ANR	1098528	CallExpression	"memcpy ( ptr_out_temp , src_strip , src_width )"		1098483	0					
ANR	1098529	Callee	memcpy		1098483	0					
ANR	1098530	Identifier	memcpy		1098483	0					
ANR	1098531	ArgumentList	ptr_out_temp		1098483	1					
ANR	1098532	Argument	ptr_out_temp		1098483	0					
ANR	1098533	Identifier	ptr_out_temp		1098483	0					
ANR	1098534	Argument	src_strip		1098483	1					
ANR	1098535	Identifier	src_strip		1098483	0					
ANR	1098536	Argument	src_width		1098483	2					
ANR	1098537	Identifier	src_width		1098483	0					
ANR	1098538	ExpressionStatement	ptr_out_temp += src_width	777:8:30580:30605	1098483	1	True				
ANR	1098539	AssignmentExpression	ptr_out_temp += src_width		1098483	0		+=			
ANR	1098540	Identifier	ptr_out_temp		1098483	0					
ANR	1098541	Identifier	src_width		1098483	1					
ANR	1098542	ExpressionStatement	"memcpy ( ptr_out_temp , src_strip , right_width )"	780:4:30645:30689	1098483	5	True				
ANR	1098543	CallExpression	"memcpy ( ptr_out_temp , src_strip , right_width )"		1098483	0					
ANR	1098544	Callee	memcpy		1098483	0					
ANR	1098545	Identifier	memcpy		1098483	0					
ANR	1098546	ArgumentList	ptr_out_temp		1098483	1					
ANR	1098547	Argument	ptr_out_temp		1098483	0					
ANR	1098548	Identifier	ptr_out_temp		1098483	0					
ANR	1098549	Argument	src_strip		1098483	1					
ANR	1098550	Identifier	src_strip		1098483	0					
ANR	1098551	Argument	right_width		1098483	2					
ANR	1098552	Identifier	right_width		1098483	0					
ANR	1098553	ExpressionStatement	ptr_out_temp += right_width	782:4:30718:30745	1098483	6	True				
ANR	1098554	AssignmentExpression	ptr_out_temp += right_width		1098483	0		+=			
ANR	1098555	Identifier	ptr_out_temp		1098483	0					
ANR	1098556	Identifier	right_width		1098483	1					
ANR	1098557	ExpressionStatement	ii = ( dest_strip - ptr_out_temp ) % ( LAND_BITS - 1 )	783:4:30751:30797	1098483	7	True				
ANR	1098558	AssignmentExpression	ii = ( dest_strip - ptr_out_temp ) % ( LAND_BITS - 1 )		1098483	0		=			
ANR	1098559	Identifier	ii		1098483	0					
ANR	1098560	MultiplicativeExpression	( dest_strip - ptr_out_temp ) % ( LAND_BITS - 1 )		1098483	1		%			
ANR	1098561	AdditiveExpression	dest_strip - ptr_out_temp		1098483	0		-			
ANR	1098562	Identifier	dest_strip		1098483	0					
ANR	1098563	Identifier	ptr_out_temp		1098483	1					
ANR	1098564	AdditiveExpression	LAND_BITS - 1		1098483	1		-			
ANR	1098565	Identifier	LAND_BITS		1098483	0					
ANR	1098566	PrimaryExpression	1		1098483	1					
ANR	1098567	IfStatement	if ( ii > 0 )		1098483	8					
ANR	1098568	Condition	ii > 0	784:8:30807:30812	1098483	0	True				
ANR	1098569	RelationalExpression	ii > 0		1098483	0		>			
ANR	1098570	Identifier	ii		1098483	0					
ANR	1098571	PrimaryExpression	0		1098483	1					
ANR	1098572	ExpressionStatement	"memset ( ptr_out_temp , 0 , ii )"	785:8:30823:30850	1098483	1	True				
ANR	1098573	CallExpression	"memset ( ptr_out_temp , 0 , ii )"		1098483	0					
ANR	1098574	Callee	memset		1098483	0					
ANR	1098575	Identifier	memset		1098483	0					
ANR	1098576	ArgumentList	ptr_out_temp		1098483	1					
ANR	1098577	Argument	ptr_out_temp		1098483	0					
ANR	1098578	Identifier	ptr_out_temp		1098483	0					
ANR	1098579	Argument	0		1098483	1					
ANR	1098580	PrimaryExpression	0		1098483	0					
ANR	1098581	Argument	ii		1098483	2					
ANR	1098582	Identifier	ii		1098483	0					
ANR	1098583	ReturnType	static void		1098483	1					
ANR	1098584	Identifier	fill_threshold_buffer		1098483	2					
ANR	1098585	ParameterList	"byte * dest_strip , byte * src_strip , int src_width , int left_offset , int left_width , int num_tiles , int right_width"		1098483	3					
ANR	1098586	Parameter	byte * dest_strip	764:22:30125:30140	1098483	0	True				
ANR	1098587	ParameterType	byte *		1098483	0					
ANR	1098588	Identifier	dest_strip		1098483	1					
ANR	1098589	Parameter	byte * src_strip	764:40:30143:30157	1098483	1	True				
ANR	1098590	ParameterType	byte *		1098483	0					
ANR	1098591	Identifier	src_strip		1098483	1					
ANR	1098592	Parameter	int src_width	764:57:30160:30172	1098483	2	True				
ANR	1098593	ParameterType	int		1098483	0					
ANR	1098594	Identifier	src_width		1098483	1					
ANR	1098595	Parameter	int left_offset	765:23:30198:30212	1098483	3	True				
ANR	1098596	ParameterType	int		1098483	0					
ANR	1098597	Identifier	left_offset		1098483	1					
ANR	1098598	Parameter	int left_width	765:40:30215:30228	1098483	4	True				
ANR	1098599	ParameterType	int		1098483	0					
ANR	1098600	Identifier	left_width		1098483	1					
ANR	1098601	Parameter	int num_tiles	765:56:30231:30243	1098483	5	True				
ANR	1098602	ParameterType	int		1098483	0					
ANR	1098603	Identifier	num_tiles		1098483	1					
ANR	1098604	Parameter	int right_width	766:23:30269:30283	1098483	6	True				
ANR	1098605	ParameterType	int		1098483	0					
ANR	1098606	Identifier	right_width		1098483	1					
ANR	1098607	CFGEntryNode	ENTRY		1098483		True				
ANR	1098608	CFGExitNode	EXIT		1098483		True				
ANR	1098609	Symbol	ii		1098483						
ANR	1098610	Symbol	left_offset		1098483						
ANR	1098611	Symbol	num_tiles		1098483						
ANR	1098612	Symbol	right_width		1098483						
ANR	1098613	Symbol	ptr_out_temp		1098483						
ANR	1098614	Symbol	src_strip		1098483						
ANR	1098615	Symbol	dest_strip		1098483						
ANR	1098616	Symbol	src_width		1098483						
ANR	1098617	Symbol	LAND_BITS		1098483						
ANR	1098618	Symbol	left_width		1098483						
ANR	1098619	Function	move_landscape_buffer	790:0:31008:31794							
ANR	1098620	FunctionDef	"move_landscape_buffer (ht_landscape_info_t * ht_landscape , byte * contone_align , int data_length)"		1098619	0					
ANR	1098621	CompoundStatement		793:0:31138:31794	1098619	0					
ANR	1098622	IdentifierDeclStatement	int k ;	794:4:31144:31149	1098619	0	True				
ANR	1098623	IdentifierDecl	k		1098619	0					
ANR	1098624	IdentifierDeclType	int		1098619	0					
ANR	1098625	Identifier	k		1098619	1					
ANR	1098626	IdentifierDeclStatement	"int position_curr , position_new ;"	795:4:31155:31186	1098619	1	True				
ANR	1098627	IdentifierDecl	position_curr		1098619	0					
ANR	1098628	IdentifierDeclType	int		1098619	0					
ANR	1098629	Identifier	position_curr		1098619	1					
ANR	1098630	IdentifierDecl	position_new		1098619	1					
ANR	1098631	IdentifierDeclType	int		1098619	0					
ANR	1098632	Identifier	position_new		1098619	1					
ANR	1098633	IfStatement	if ( ht_landscape -> index < 0 )		1098619	2					
ANR	1098634	Condition	ht_landscape -> index < 0	797:8:31197:31219	1098619	0	True				
ANR	1098635	RelationalExpression	ht_landscape -> index < 0		1098619	0		<			
ANR	1098636	PtrMemberAccess	ht_landscape -> index		1098619	0					
ANR	1098637	Identifier	ht_landscape		1098619	0					
ANR	1098638	Identifier	index		1098619	1					
ANR	1098639	PrimaryExpression	0		1098619	1					
ANR	1098640	CompoundStatement		5:33:83:83	1098619	1					
ANR	1098641	ExpressionStatement	position_curr = ht_landscape -> curr_pos + 1	799:8:31293:31335	1098619	0	True				
ANR	1098642	AssignmentExpression	position_curr = ht_landscape -> curr_pos + 1		1098619	0		=			
ANR	1098643	Identifier	position_curr		1098619	0					
ANR	1098644	AdditiveExpression	ht_landscape -> curr_pos + 1		1098619	1		+			
ANR	1098645	PtrMemberAccess	ht_landscape -> curr_pos		1098619	0					
ANR	1098646	Identifier	ht_landscape		1098619	0					
ANR	1098647	Identifier	curr_pos		1098619	1					
ANR	1098648	PrimaryExpression	1		1098619	1					
ANR	1098649	ExpressionStatement	position_new = LAND_BITS - 1	800:8:31345:31371	1098619	1	True				
ANR	1098650	AssignmentExpression	position_new = LAND_BITS - 1		1098619	0		=			
ANR	1098651	Identifier	position_new		1098619	0					
ANR	1098652	AdditiveExpression	LAND_BITS - 1		1098619	1		-			
ANR	1098653	Identifier	LAND_BITS		1098619	0					
ANR	1098654	PrimaryExpression	1		1098619	1					
ANR	1098655	ElseStatement	else		1098619	0					
ANR	1098656	CompoundStatement		9:11:245:245	1098619	0					
ANR	1098657	ExpressionStatement	position_curr = ht_landscape -> curr_pos - 1	803:8:31454:31496	1098619	0	True				
ANR	1098658	AssignmentExpression	position_curr = ht_landscape -> curr_pos - 1		1098619	0		=			
ANR	1098659	Identifier	position_curr		1098619	0					
ANR	1098660	AdditiveExpression	ht_landscape -> curr_pos - 1		1098619	1		-			
ANR	1098661	PtrMemberAccess	ht_landscape -> curr_pos		1098619	0					
ANR	1098662	Identifier	ht_landscape		1098619	0					
ANR	1098663	Identifier	curr_pos		1098619	1					
ANR	1098664	PrimaryExpression	1		1098619	1					
ANR	1098665	ExpressionStatement	position_new = 0	804:8:31506:31522	1098619	1	True				
ANR	1098666	AssignmentExpression	position_new = 0		1098619	0		=			
ANR	1098667	Identifier	position_new		1098619	0					
ANR	1098668	PrimaryExpression	0		1098619	1					
ANR	1098669	IfStatement	if ( position_curr != position_new )		1098619	3					
ANR	1098670	Condition	position_curr != position_new	806:8:31538:31566	1098619	0	True				
ANR	1098671	EqualityExpression	position_curr != position_new		1098619	0		!=			
ANR	1098672	Identifier	position_curr		1098619	0					
ANR	1098673	Identifier	position_new		1098619	1					
ANR	1098674	CompoundStatement		14:39:430:430	1098619	1					
ANR	1098675	ForStatement	for ( k = 0 ; k < data_length ; k ++ )		1098619	0					
ANR	1098676	ForInit	k = 0 ;	807:13:31584:31589	1098619	0	True				
ANR	1098677	AssignmentExpression	k = 0		1098619	0		=			
ANR	1098678	Identifier	k		1098619	0					
ANR	1098679	PrimaryExpression	0		1098619	1					
ANR	1098680	Condition	k < data_length	807:20:31591:31605	1098619	1	True				
ANR	1098681	RelationalExpression	k < data_length		1098619	0		<			
ANR	1098682	Identifier	k		1098619	0					
ANR	1098683	Identifier	data_length		1098619	1					
ANR	1098684	PostIncDecOperationExpression	k ++	807:37:31608:31610	1098619	2	True				
ANR	1098685	Identifier	k		1098619	0					
ANR	1098686	IncDec	++		1098619	1					
ANR	1098687	CompoundStatement		15:42:474:474	1098619	3					
ANR	1098688	ExpressionStatement	contone_align [ position_new ] = contone_align [ position_curr ]	808:16:31631:31689	1098619	0	True				
ANR	1098689	AssignmentExpression	contone_align [ position_new ] = contone_align [ position_curr ]		1098619	0		=			
ANR	1098690	ArrayIndexing	contone_align [ position_new ]		1098619	0					
ANR	1098691	Identifier	contone_align		1098619	0					
ANR	1098692	Identifier	position_new		1098619	1					
ANR	1098693	ArrayIndexing	contone_align [ position_curr ]		1098619	1					
ANR	1098694	Identifier	contone_align		1098619	0					
ANR	1098695	Identifier	position_curr		1098619	1					
ANR	1098696	ExpressionStatement	position_curr += LAND_BITS	809:16:31707:31733	1098619	1	True				
ANR	1098697	AssignmentExpression	position_curr += LAND_BITS		1098619	0		+=			
ANR	1098698	Identifier	position_curr		1098619	0					
ANR	1098699	Identifier	LAND_BITS		1098619	1					
ANR	1098700	ExpressionStatement	position_new += LAND_BITS	810:16:31751:31776	1098619	2	True				
ANR	1098701	AssignmentExpression	position_new += LAND_BITS		1098619	0		+=			
ANR	1098702	Identifier	position_new		1098619	0					
ANR	1098703	Identifier	LAND_BITS		1098619	1					
ANR	1098704	ReturnType	static void		1098619	1					
ANR	1098705	Identifier	move_landscape_buffer		1098619	2					
ANR	1098706	ParameterList	"ht_landscape_info_t * ht_landscape , byte * contone_align , int data_length"		1098619	3					
ANR	1098707	Parameter	ht_landscape_info_t * ht_landscape	791:22:31042:31074	1098619	0	True				
ANR	1098708	ParameterType	ht_landscape_info_t *		1098619	0					
ANR	1098709	Identifier	ht_landscape		1098619	1					
ANR	1098710	Parameter	byte * contone_align	791:57:31077:31095	1098619	1	True				
ANR	1098711	ParameterType	byte *		1098619	0					
ANR	1098712	Identifier	contone_align		1098619	1					
ANR	1098713	Parameter	int data_length	792:23:31121:31135	1098619	2	True				
ANR	1098714	ParameterType	int		1098619	0					
ANR	1098715	Identifier	data_length		1098619	1					
ANR	1098716	CFGEntryNode	ENTRY		1098619		True				
ANR	1098717	CFGExitNode	EXIT		1098619		True				
ANR	1098718	Symbol	ht_landscape -> index		1098619						
ANR	1098719	Symbol	position_new		1098619						
ANR	1098720	Symbol	data_length		1098619						
ANR	1098721	Symbol	* ht_landscape		1098619						
ANR	1098722	Symbol	k		1098619						
ANR	1098723	Symbol	position_curr		1098619						
ANR	1098724	Symbol	* position_curr		1098619						
ANR	1098725	Symbol	* position_new		1098619						
ANR	1098726	Symbol	ht_landscape		1098619						
ANR	1098727	Symbol	ht_landscape -> curr_pos		1098619						
ANR	1098728	Symbol	* contone_align		1098619						
ANR	1098729	Symbol	LAND_BITS		1098619						
ANR	1098730	Symbol	contone_align		1098619						
ANR	1098731	Function	reset_landscape_buffer	818:0:31922:32890							
ANR	1098732	FunctionDef	"reset_landscape_buffer (ht_landscape_info_t * ht_landscape , byte * contone_align , int data_length , int num_used)"		1098731	0					
ANR	1098733	CompoundStatement		821:0:32067:32890	1098731	0					
ANR	1098734	IdentifierDeclStatement	int delta ;	822:4:32073:32082	1098731	0	True				
ANR	1098735	IdentifierDecl	delta		1098731	0					
ANR	1098736	IdentifierDeclType	int		1098731	0					
ANR	1098737	Identifier	delta		1098731	1					
ANR	1098738	IdentifierDeclStatement	int curr_x_pos = ht_landscape -> xstart ;	823:4:32088:32125	1098731	1	True				
ANR	1098739	IdentifierDecl	curr_x_pos = ht_landscape -> xstart		1098731	0					
ANR	1098740	IdentifierDeclType	int		1098731	0					
ANR	1098741	Identifier	curr_x_pos		1098731	1					
ANR	1098742	AssignmentExpression	curr_x_pos = ht_landscape -> xstart		1098731	2		=			
ANR	1098743	Identifier	curr_x_pos		1098731	0					
ANR	1098744	PtrMemberAccess	ht_landscape -> xstart		1098731	1					
ANR	1098745	Identifier	ht_landscape		1098731	0					
ANR	1098746	Identifier	xstart		1098731	1					
ANR	1098747	IfStatement	if ( ht_landscape -> index < 0 )		1098731	2					
ANR	1098748	Condition	ht_landscape -> index < 0	825:8:32136:32158	1098731	0	True				
ANR	1098749	RelationalExpression	ht_landscape -> index < 0		1098731	0		<			
ANR	1098750	PtrMemberAccess	ht_landscape -> index		1098731	0					
ANR	1098751	Identifier	ht_landscape		1098731	0					
ANR	1098752	Identifier	index		1098731	1					
ANR	1098753	PrimaryExpression	0		1098731	1					
ANR	1098754	CompoundStatement		5:33:93:93	1098731	1					
ANR	1098755	ExpressionStatement	delta = ht_landscape -> count - num_used	827:8:32232:32270	1098731	0	True				
ANR	1098756	AssignmentExpression	delta = ht_landscape -> count - num_used		1098731	0		=			
ANR	1098757	Identifier	delta		1098731	0					
ANR	1098758	AdditiveExpression	ht_landscape -> count - num_used		1098731	1		-			
ANR	1098759	PtrMemberAccess	ht_landscape -> count		1098731	0					
ANR	1098760	Identifier	ht_landscape		1098731	0					
ANR	1098761	Identifier	count		1098731	1					
ANR	1098762	Identifier	num_used		1098731	1					
ANR	1098763	ExpressionStatement	"memset ( & ( ht_landscape -> widths [ 0 ] ) , 0 , sizeof ( int ) * LAND_BITS )"	828:8:32280:32340	1098731	1	True				
ANR	1098764	CallExpression	"memset ( & ( ht_landscape -> widths [ 0 ] ) , 0 , sizeof ( int ) * LAND_BITS )"		1098731	0					
ANR	1098765	Callee	memset		1098731	0					
ANR	1098766	Identifier	memset		1098731	0					
ANR	1098767	ArgumentList	& ( ht_landscape -> widths [ 0 ] )		1098731	1					
ANR	1098768	Argument	& ( ht_landscape -> widths [ 0 ] )		1098731	0					
ANR	1098769	UnaryOperationExpression	& ( ht_landscape -> widths [ 0 ] )		1098731	0					
ANR	1098770	UnaryOperator	&		1098731	0					
ANR	1098771	ArrayIndexing	ht_landscape -> widths [ 0 ]		1098731	1					
ANR	1098772	PtrMemberAccess	ht_landscape -> widths		1098731	0					
ANR	1098773	Identifier	ht_landscape		1098731	0					
ANR	1098774	Identifier	widths		1098731	1					
ANR	1098775	PrimaryExpression	0		1098731	1					
ANR	1098776	Argument	0		1098731	1					
ANR	1098777	PrimaryExpression	0		1098731	0					
ANR	1098778	Argument	sizeof ( int ) * LAND_BITS		1098731	2					
ANR	1098779	MultiplicativeExpression	sizeof ( int ) * LAND_BITS		1098731	0		*			
ANR	1098780	SizeofExpression	sizeof ( int )		1098731	0					
ANR	1098781	Sizeof	sizeof		1098731	0					
ANR	1098782	SizeofOperand	int		1098731	1					
ANR	1098783	Identifier	LAND_BITS		1098731	1					
ANR	1098784	ExpressionStatement	ht_landscape -> widths [ LAND_BITS - 1 ] = delta	829:8:32350:32391	1098731	2	True				
ANR	1098785	AssignmentExpression	ht_landscape -> widths [ LAND_BITS - 1 ] = delta		1098731	0		=			
ANR	1098786	ArrayIndexing	ht_landscape -> widths [ LAND_BITS - 1 ]		1098731	0					
ANR	1098787	PtrMemberAccess	ht_landscape -> widths		1098731	0					
ANR	1098788	Identifier	ht_landscape		1098731	0					
ANR	1098789	Identifier	widths		1098731	1					
ANR	1098790	AdditiveExpression	LAND_BITS - 1		1098731	1		-			
ANR	1098791	Identifier	LAND_BITS		1098731	0					
ANR	1098792	PrimaryExpression	1		1098731	1					
ANR	1098793	Identifier	delta		1098731	1					
ANR	1098794	ExpressionStatement	ht_landscape -> curr_pos = LAND_BITS - 2	830:8:32401:32437	1098731	3	True				
ANR	1098795	AssignmentExpression	ht_landscape -> curr_pos = LAND_BITS - 2		1098731	0		=			
ANR	1098796	PtrMemberAccess	ht_landscape -> curr_pos		1098731	0					
ANR	1098797	Identifier	ht_landscape		1098731	0					
ANR	1098798	Identifier	curr_pos		1098731	1					
ANR	1098799	AdditiveExpression	LAND_BITS - 2		1098731	1		-			
ANR	1098800	Identifier	LAND_BITS		1098731	0					
ANR	1098801	PrimaryExpression	2		1098731	1					
ANR	1098802	ExpressionStatement	ht_landscape -> xstart = curr_x_pos - num_used	831:8:32447:32491	1098731	4	True				
ANR	1098803	AssignmentExpression	ht_landscape -> xstart = curr_x_pos - num_used		1098731	0		=			
ANR	1098804	PtrMemberAccess	ht_landscape -> xstart		1098731	0					
ANR	1098805	Identifier	ht_landscape		1098731	0					
ANR	1098806	Identifier	xstart		1098731	1					
ANR	1098807	AdditiveExpression	curr_x_pos - num_used		1098731	1		-			
ANR	1098808	Identifier	curr_x_pos		1098731	0					
ANR	1098809	Identifier	num_used		1098731	1					
ANR	1098810	ElseStatement	else		1098731	0					
ANR	1098811	CompoundStatement		12:11:436:436	1098731	0					
ANR	1098812	ExpressionStatement	delta = ht_landscape -> count - num_used	834:8:32574:32612	1098731	0	True				
ANR	1098813	AssignmentExpression	delta = ht_landscape -> count - num_used		1098731	0		=			
ANR	1098814	Identifier	delta		1098731	0					
ANR	1098815	AdditiveExpression	ht_landscape -> count - num_used		1098731	1		-			
ANR	1098816	PtrMemberAccess	ht_landscape -> count		1098731	0					
ANR	1098817	Identifier	ht_landscape		1098731	0					
ANR	1098818	Identifier	count		1098731	1					
ANR	1098819	Identifier	num_used		1098731	1					
ANR	1098820	ExpressionStatement	"memset ( & ( ht_landscape -> widths [ 0 ] ) , 0 , sizeof ( int ) * LAND_BITS )"	835:8:32622:32682	1098731	1	True				
ANR	1098821	CallExpression	"memset ( & ( ht_landscape -> widths [ 0 ] ) , 0 , sizeof ( int ) * LAND_BITS )"		1098731	0					
ANR	1098822	Callee	memset		1098731	0					
ANR	1098823	Identifier	memset		1098731	0					
ANR	1098824	ArgumentList	& ( ht_landscape -> widths [ 0 ] )		1098731	1					
ANR	1098825	Argument	& ( ht_landscape -> widths [ 0 ] )		1098731	0					
ANR	1098826	UnaryOperationExpression	& ( ht_landscape -> widths [ 0 ] )		1098731	0					
ANR	1098827	UnaryOperator	&		1098731	0					
ANR	1098828	ArrayIndexing	ht_landscape -> widths [ 0 ]		1098731	1					
ANR	1098829	PtrMemberAccess	ht_landscape -> widths		1098731	0					
ANR	1098830	Identifier	ht_landscape		1098731	0					
ANR	1098831	Identifier	widths		1098731	1					
ANR	1098832	PrimaryExpression	0		1098731	1					
ANR	1098833	Argument	0		1098731	1					
ANR	1098834	PrimaryExpression	0		1098731	0					
ANR	1098835	Argument	sizeof ( int ) * LAND_BITS		1098731	2					
ANR	1098836	MultiplicativeExpression	sizeof ( int ) * LAND_BITS		1098731	0		*			
ANR	1098837	SizeofExpression	sizeof ( int )		1098731	0					
ANR	1098838	Sizeof	sizeof		1098731	0					
ANR	1098839	SizeofOperand	int		1098731	1					
ANR	1098840	Identifier	LAND_BITS		1098731	1					
ANR	1098841	ExpressionStatement	ht_landscape -> widths [ 0 ] = delta	836:8:32692:32723	1098731	2	True				
ANR	1098842	AssignmentExpression	ht_landscape -> widths [ 0 ] = delta		1098731	0		=			
ANR	1098843	ArrayIndexing	ht_landscape -> widths [ 0 ]		1098731	0					
ANR	1098844	PtrMemberAccess	ht_landscape -> widths		1098731	0					
ANR	1098845	Identifier	ht_landscape		1098731	0					
ANR	1098846	Identifier	widths		1098731	1					
ANR	1098847	PrimaryExpression	0		1098731	1					
ANR	1098848	Identifier	delta		1098731	1					
ANR	1098849	ExpressionStatement	ht_landscape -> curr_pos = 1	837:8:32733:32759	1098731	3	True				
ANR	1098850	AssignmentExpression	ht_landscape -> curr_pos = 1		1098731	0		=			
ANR	1098851	PtrMemberAccess	ht_landscape -> curr_pos		1098731	0					
ANR	1098852	Identifier	ht_landscape		1098731	0					
ANR	1098853	Identifier	curr_pos		1098731	1					
ANR	1098854	PrimaryExpression	1		1098731	1					
ANR	1098855	ExpressionStatement	ht_landscape -> xstart = curr_x_pos + num_used	838:8:32769:32813	1098731	4	True				
ANR	1098856	AssignmentExpression	ht_landscape -> xstart = curr_x_pos + num_used		1098731	0		=			
ANR	1098857	PtrMemberAccess	ht_landscape -> xstart		1098731	0					
ANR	1098858	Identifier	ht_landscape		1098731	0					
ANR	1098859	Identifier	xstart		1098731	1					
ANR	1098860	AdditiveExpression	curr_x_pos + num_used		1098731	1		+			
ANR	1098861	Identifier	curr_x_pos		1098731	0					
ANR	1098862	Identifier	num_used		1098731	1					
ANR	1098863	ExpressionStatement	ht_landscape -> count = delta	840:4:32825:32852	1098731	3	True				
ANR	1098864	AssignmentExpression	ht_landscape -> count = delta		1098731	0		=			
ANR	1098865	PtrMemberAccess	ht_landscape -> count		1098731	0					
ANR	1098866	Identifier	ht_landscape		1098731	0					
ANR	1098867	Identifier	count		1098731	1					
ANR	1098868	Identifier	delta		1098731	1					
ANR	1098869	ExpressionStatement	ht_landscape -> num_contones = 1	841:4:32858:32888	1098731	4	True				
ANR	1098870	AssignmentExpression	ht_landscape -> num_contones = 1		1098731	0		=			
ANR	1098871	PtrMemberAccess	ht_landscape -> num_contones		1098731	0					
ANR	1098872	Identifier	ht_landscape		1098731	0					
ANR	1098873	Identifier	num_contones		1098731	1					
ANR	1098874	PrimaryExpression	1		1098731	1					
ANR	1098875	ReturnType	static void		1098731	1					
ANR	1098876	Identifier	reset_landscape_buffer		1098731	2					
ANR	1098877	ParameterList	"ht_landscape_info_t * ht_landscape , byte * contone_align , int data_length , int num_used"		1098731	3					
ANR	1098878	Parameter	ht_landscape_info_t * ht_landscape	819:23:31957:31989	1098731	0	True				
ANR	1098879	ParameterType	ht_landscape_info_t *		1098731	0					
ANR	1098880	Identifier	ht_landscape		1098731	1					
ANR	1098881	Parameter	byte * contone_align	819:58:31992:32010	1098731	1	True				
ANR	1098882	ParameterType	byte *		1098731	0					
ANR	1098883	Identifier	contone_align		1098731	1					
ANR	1098884	Parameter	int data_length	820:23:32036:32050	1098731	2	True				
ANR	1098885	ParameterType	int		1098731	0					
ANR	1098886	Identifier	data_length		1098731	1					
ANR	1098887	Parameter	int num_used	820:40:32053:32064	1098731	3	True				
ANR	1098888	ParameterType	int		1098731	0					
ANR	1098889	Identifier	num_used		1098731	1					
ANR	1098890	CFGEntryNode	ENTRY		1098731		True				
ANR	1098891	CFGExitNode	EXIT		1098731		True				
ANR	1098892	Symbol	ht_landscape -> index		1098731						
ANR	1098893	Symbol	* * ht_landscape		1098731						
ANR	1098894	Symbol	data_length		1098731						
ANR	1098895	Symbol	delta		1098731						
ANR	1098896	Symbol	* ht_landscape		1098731						
ANR	1098897	Symbol	ht_landscape -> widths		1098731						
ANR	1098898	Symbol	ht_landscape -> num_contones		1098731						
ANR	1098899	Symbol	ht_landscape -> count		1098731						
ANR	1098900	Symbol	ht_landscape -> xstart		1098731						
ANR	1098901	Symbol	num_used		1098731						
ANR	1098902	Symbol	ht_landscape		1098731						
ANR	1098903	Symbol	* ht_landscape -> widths		1098731						
ANR	1098904	Symbol	ht_landscape -> curr_pos		1098731						
ANR	1098905	Symbol	LAND_BITS		1098731						
ANR	1098906	Symbol	contone_align		1098731						
ANR	1098907	Symbol	curr_x_pos		1098731						
ANR	1098908	Symbol	* LAND_BITS		1098731						
ANR	1098909	Function	gxht_thresh_planes	847:0:33051:49425							
ANR	1098910	FunctionDef	"gxht_thresh_planes (gx_image_enum * penum , fixed xrun , int dest_width , int dest_height , byte * thresh_align , gx_device * dev , int offset_contone [ ] , int contone_stride)"		1098909	0					
ANR	1098911	CompoundStatement		852:0:33277:49425	1098909	0					
ANR	1098912	IdentifierDeclStatement	"int thresh_width , thresh_height , dx ;"	853:4:33283:33318	1098909	0	True				
ANR	1098913	IdentifierDecl	thresh_width		1098909	0					
ANR	1098914	IdentifierDeclType	int		1098909	0					
ANR	1098915	Identifier	thresh_width		1098909	1					
ANR	1098916	IdentifierDecl	thresh_height		1098909	1					
ANR	1098917	IdentifierDeclType	int		1098909	0					
ANR	1098918	Identifier	thresh_height		1098909	1					
ANR	1098919	IdentifierDecl	dx		1098909	2					
ANR	1098920	IdentifierDeclType	int		1098909	0					
ANR	1098921	Identifier	dx		1098909	1					
ANR	1098922	IdentifierDeclStatement	"int left_rem_end , left_width , vdi ;"	854:4:33324:33357	1098909	1	True				
ANR	1098923	IdentifierDecl	left_rem_end		1098909	0					
ANR	1098924	IdentifierDeclType	int		1098909	0					
ANR	1098925	Identifier	left_rem_end		1098909	1					
ANR	1098926	IdentifierDecl	left_width		1098909	1					
ANR	1098927	IdentifierDeclType	int		1098909	0					
ANR	1098928	Identifier	left_width		1098909	1					
ANR	1098929	IdentifierDecl	vdi		1098909	2					
ANR	1098930	IdentifierDeclType	int		1098909	0					
ANR	1098931	Identifier	vdi		1098909	1					
ANR	1098932	IdentifierDeclStatement	"int num_full_tiles , right_tile_width ;"	855:4:33363:33399	1098909	2	True				
ANR	1098933	IdentifierDecl	num_full_tiles		1098909	0					
ANR	1098934	IdentifierDeclType	int		1098909	0					
ANR	1098935	Identifier	num_full_tiles		1098909	1					
ANR	1098936	IdentifierDecl	right_tile_width		1098909	1					
ANR	1098937	IdentifierDeclType	int		1098909	0					
ANR	1098938	Identifier	right_tile_width		1098909	1					
ANR	1098939	IdentifierDeclStatement	"int k , jj , dy , j ;"	856:4:33405:33421	1098909	3	True				
ANR	1098940	IdentifierDecl	k		1098909	0					
ANR	1098941	IdentifierDeclType	int		1098909	0					
ANR	1098942	Identifier	k		1098909	1					
ANR	1098943	IdentifierDecl	jj		1098909	1					
ANR	1098944	IdentifierDeclType	int		1098909	0					
ANR	1098945	Identifier	jj		1098909	1					
ANR	1098946	IdentifierDecl	dy		1098909	2					
ANR	1098947	IdentifierDeclType	int		1098909	0					
ANR	1098948	Identifier	dy		1098909	1					
ANR	1098949	IdentifierDecl	j		1098909	3					
ANR	1098950	IdentifierDeclType	int		1098909	0					
ANR	1098951	Identifier	j		1098909	1					
ANR	1098952	IdentifierDeclStatement	byte * thresh_tile ;	857:4:33427:33444	1098909	4	True				
ANR	1098953	IdentifierDecl	* thresh_tile		1098909	0					
ANR	1098954	IdentifierDeclType	byte *		1098909	0					
ANR	1098955	Identifier	thresh_tile		1098909	1					
ANR	1098956	IdentifierDeclStatement	int position ;	858:4:33450:33462	1098909	5	True				
ANR	1098957	IdentifierDecl	position		1098909	0					
ANR	1098958	IdentifierDeclType	int		1098909	0					
ANR	1098959	Identifier	position		1098909	1					
ANR	1098960	IdentifierDeclStatement	bool replicate_tile ;	859:4:33468:33487	1098909	6	True				
ANR	1098961	IdentifierDecl	replicate_tile		1098909	0					
ANR	1098962	IdentifierDeclType	bool		1098909	0					
ANR	1098963	Identifier	replicate_tile		1098909	1					
ANR	1098964	IdentifierDeclStatement	image_posture posture = penum -> posture ;	860:4:33493:33531	1098909	7	True				
ANR	1098965	IdentifierDecl	posture = penum -> posture		1098909	0					
ANR	1098966	IdentifierDeclType	image_posture		1098909	0					
ANR	1098967	Identifier	posture		1098909	1					
ANR	1098968	AssignmentExpression	posture = penum -> posture		1098909	2		=			
ANR	1098969	Identifier	posture		1098909	0					
ANR	1098970	PtrMemberAccess	penum -> posture		1098909	1					
ANR	1098971	Identifier	penum		1098909	0					
ANR	1098972	Identifier	posture		1098909	1					
ANR	1098973	IdentifierDeclStatement	const int y_pos = penum -> yci ;	861:4:33537:33565	1098909	8	True				
ANR	1098974	IdentifierDecl	y_pos = penum -> yci		1098909	0					
ANR	1098975	IdentifierDeclType	const int		1098909	0					
ANR	1098976	Identifier	y_pos		1098909	1					
ANR	1098977	AssignmentExpression	y_pos = penum -> yci		1098909	2		=			
ANR	1098978	Identifier	y_pos		1098909	0					
ANR	1098979	PtrMemberAccess	penum -> yci		1098909	1					
ANR	1098980	Identifier	penum		1098909	0					
ANR	1098981	Identifier	yci		1098909	1					
ANR	1098982	IdentifierDeclStatement	int width = 0 ;	862:4:33571:33584	1098909	9	True				
ANR	1098983	IdentifierDecl	width = 0		1098909	0					
ANR	1098984	IdentifierDeclType	int		1098909	0					
ANR	1098985	Identifier	width		1098909	1					
ANR	1098986	AssignmentExpression	width = 0		1098909	2		=			
ANR	1098987	Identifier	width		1098909	0					
ANR	1098988	PrimaryExpression	0		1098909	1					
ANR	1098989	IdentifierDeclStatement	"byte * ptr_out , * row_ptr , * ptr_out_temp ;"	863:4:33630:33668	1098909	10	True				
ANR	1098990	IdentifierDecl	* ptr_out		1098909	0					
ANR	1098991	IdentifierDeclType	byte *		1098909	0					
ANR	1098992	Identifier	ptr_out		1098909	1					
ANR	1098993	IdentifierDecl	* row_ptr		1098909	1					
ANR	1098994	IdentifierDeclType	byte *		1098909	0					
ANR	1098995	Identifier	row_ptr		1098909	1					
ANR	1098996	IdentifierDecl	* ptr_out_temp		1098909	2					
ANR	1098997	IdentifierDeclType	byte *		1098909	0					
ANR	1098998	Identifier	ptr_out_temp		1098909	1					
ANR	1098999	IdentifierDeclStatement	byte * threshold ;	864:4:33674:33689	1098909	11	True				
ANR	1099000	IdentifierDecl	* threshold		1098909	0					
ANR	1099001	IdentifierDeclType	byte *		1098909	0					
ANR	1099002	Identifier	threshold		1098909	1					
ANR	1099003	IdentifierDeclStatement	"int init_tile , in_row_offset , ii , num_tiles , tile_remainder ;"	865:4:33695:33754	1098909	12	True				
ANR	1099004	IdentifierDecl	init_tile		1098909	0					
ANR	1099005	IdentifierDeclType	int		1098909	0					
ANR	1099006	Identifier	init_tile		1098909	1					
ANR	1099007	IdentifierDecl	in_row_offset		1098909	1					
ANR	1099008	IdentifierDeclType	int		1098909	0					
ANR	1099009	Identifier	in_row_offset		1098909	1					
ANR	1099010	IdentifierDecl	ii		1098909	2					
ANR	1099011	IdentifierDeclType	int		1098909	0					
ANR	1099012	Identifier	ii		1098909	1					
ANR	1099013	IdentifierDecl	num_tiles		1098909	3					
ANR	1099014	IdentifierDeclType	int		1098909	0					
ANR	1099015	Identifier	num_tiles		1098909	1					
ANR	1099016	IdentifierDecl	tile_remainder		1098909	4					
ANR	1099017	IdentifierDeclType	int		1098909	0					
ANR	1099018	Identifier	tile_remainder		1098909	1					
ANR	1099019	IdentifierDeclStatement	int offset_bits = penum -> ht_offset_bits ;	866:4:33760:33799	1098909	13	True				
ANR	1099020	IdentifierDecl	offset_bits = penum -> ht_offset_bits		1098909	0					
ANR	1099021	IdentifierDeclType	int		1098909	0					
ANR	1099022	Identifier	offset_bits		1098909	1					
ANR	1099023	AssignmentExpression	offset_bits = penum -> ht_offset_bits		1098909	2		=			
ANR	1099024	Identifier	offset_bits		1098909	0					
ANR	1099025	PtrMemberAccess	penum -> ht_offset_bits		1098909	1					
ANR	1099026	Identifier	penum		1098909	0					
ANR	1099027	Identifier	ht_offset_bits		1098909	1					
ANR	1099028	IdentifierDeclStatement	byte * halftone ;	867:4:33805:33819	1098909	14	True				
ANR	1099029	IdentifierDecl	* halftone		1098909	0					
ANR	1099030	IdentifierDeclType	byte *		1098909	0					
ANR	1099031	Identifier	halftone		1098909	1					
ANR	1099032	IdentifierDeclStatement	int dithered_stride = penum -> ht_stride ;	868:4:33825:33863	1098909	15	True				
ANR	1099033	IdentifierDecl	dithered_stride = penum -> ht_stride		1098909	0					
ANR	1099034	IdentifierDeclType	int		1098909	0					
ANR	1099035	Identifier	dithered_stride		1098909	1					
ANR	1099036	AssignmentExpression	dithered_stride = penum -> ht_stride		1098909	2		=			
ANR	1099037	Identifier	dithered_stride		1098909	0					
ANR	1099038	PtrMemberAccess	penum -> ht_stride		1098909	1					
ANR	1099039	Identifier	penum		1098909	0					
ANR	1099040	Identifier	ht_stride		1098909	1					
ANR	1099041	IdentifierDeclStatement	bool is_planar_dev = dev -> is_planar ;	869:4:33869:33904	1098909	16	True				
ANR	1099042	IdentifierDecl	is_planar_dev = dev -> is_planar		1098909	0					
ANR	1099043	IdentifierDeclType	bool		1098909	0					
ANR	1099044	Identifier	is_planar_dev		1098909	1					
ANR	1099045	AssignmentExpression	is_planar_dev = dev -> is_planar		1098909	2		=			
ANR	1099046	Identifier	is_planar_dev		1098909	0					
ANR	1099047	PtrMemberAccess	dev -> is_planar		1098909	1					
ANR	1099048	Identifier	dev		1098909	0					
ANR	1099049	Identifier	is_planar		1098909	1					
ANR	1099050	IdentifierDeclStatement	gx_color_index dev_white = gx_device_white ( dev ) ;	870:4:33910:33957	1098909	17	True				
ANR	1099051	IdentifierDecl	dev_white = gx_device_white ( dev )		1098909	0					
ANR	1099052	IdentifierDeclType	gx_color_index		1098909	0					
ANR	1099053	Identifier	dev_white		1098909	1					
ANR	1099054	AssignmentExpression	dev_white = gx_device_white ( dev )		1098909	2		=			
ANR	1099055	Identifier	dev_white		1098909	0					
ANR	1099056	CallExpression	gx_device_white ( dev )		1098909	1					
ANR	1099057	Callee	gx_device_white		1098909	0					
ANR	1099058	Identifier	gx_device_white		1098909	0					
ANR	1099059	ArgumentList	dev		1098909	1					
ANR	1099060	Argument	dev		1098909	0					
ANR	1099061	Identifier	dev		1098909	0					
ANR	1099062	IdentifierDeclStatement	gx_color_index dev_black = gx_device_black ( dev ) ;	871:4:33963:34010	1098909	18	True				
ANR	1099063	IdentifierDecl	dev_black = gx_device_black ( dev )		1098909	0					
ANR	1099064	IdentifierDeclType	gx_color_index		1098909	0					
ANR	1099065	Identifier	dev_black		1098909	1					
ANR	1099066	AssignmentExpression	dev_black = gx_device_black ( dev )		1098909	2		=			
ANR	1099067	Identifier	dev_black		1098909	0					
ANR	1099068	CallExpression	gx_device_black ( dev )		1098909	1					
ANR	1099069	Callee	gx_device_black		1098909	0					
ANR	1099070	Identifier	gx_device_black		1098909	0					
ANR	1099071	ArgumentList	dev		1098909	1					
ANR	1099072	Argument	dev		1098909	0					
ANR	1099073	Identifier	dev		1098909	0					
ANR	1099074	IdentifierDeclStatement	int spp_out = dev -> color_info . num_components ;	872:4:34016:34060	1098909	19	True				
ANR	1099075	IdentifierDecl	spp_out = dev -> color_info . num_components		1098909	0					
ANR	1099076	IdentifierDeclType	int		1098909	0					
ANR	1099077	Identifier	spp_out		1098909	1					
ANR	1099078	AssignmentExpression	spp_out = dev -> color_info . num_components		1098909	2		=			
ANR	1099079	Identifier	spp_out		1098909	0					
ANR	1099080	MemberAccess	dev -> color_info . num_components		1098909	1					
ANR	1099081	PtrMemberAccess	dev -> color_info		1098909	0					
ANR	1099082	Identifier	dev		1098909	0					
ANR	1099083	Identifier	color_info		1098909	1					
ANR	1099084	Identifier	num_components		1098909	1					
ANR	1099085	IdentifierDeclStatement	byte * contone_align = NULL ;	873:4:34066:34092	1098909	20	True				
ANR	1099086	IdentifierDecl	* contone_align = NULL		1098909	0					
ANR	1099087	IdentifierDeclType	byte *		1098909	0					
ANR	1099088	Identifier	contone_align		1098909	1					
ANR	1099089	AssignmentExpression	* contone_align = NULL		1098909	2		=			
ANR	1099090	Identifier	NULL		1098909	0					
ANR	1099091	Identifier	NULL		1098909	1					
ANR	1099092	SwitchStatement	switch ( posture )		1098909	21					
ANR	1099093	Condition	posture	880:12:34427:34433	1098909	0	True				
ANR	1099094	Identifier	posture		1098909	0					
ANR	1099095	CompoundStatement		29:21:1158:1158	1098909	1					
ANR	1099096	Label	case image_portrait :	881:8:34446:34465	1098909	0	True				
ANR	1099097	Identifier	image_portrait		1098909	0					
ANR	1099098	ExpressionStatement	vdi = penum -> hci	882:12:34479:34495	1098909	1	True				
ANR	1099099	AssignmentExpression	vdi = penum -> hci		1098909	0		=			
ANR	1099100	Identifier	vdi		1098909	0					
ANR	1099101	PtrMemberAccess	penum -> hci		1098909	1					
ANR	1099102	Identifier	penum		1098909	0					
ANR	1099103	Identifier	hci		1098909	1					
ANR	1099104	ForStatement	for ( j = 0 ; j < spp_out ; j ++ )		1098909	2					
ANR	1099105	ForInit	j = 0 ;	885:17:34653:34658	1098909	0	True				
ANR	1099106	AssignmentExpression	j = 0		1098909	0		=			
ANR	1099107	Identifier	j		1098909	0					
ANR	1099108	PrimaryExpression	0		1098909	1					
ANR	1099109	Condition	j < spp_out	885:24:34660:34670	1098909	1	True				
ANR	1099110	RelationalExpression	j < spp_out		1098909	0		<			
ANR	1099111	Identifier	j		1098909	0					
ANR	1099112	Identifier	spp_out		1098909	1					
ANR	1099113	PostIncDecOperationExpression	j ++	885:37:34673:34675	1098909	2	True				
ANR	1099114	Identifier	j		1098909	0					
ANR	1099115	IncDec	++		1098909	1					
ANR	1099116	CompoundStatement		35:16:1418:1503	1098909	3					
ANR	1099117	IdentifierDeclStatement	bool threshold_inverted = penum -> pgs -> dev_ht -> components [ j ] . corder . threshold_inverted ;	886:16:34696:34781	1098909	0	True				
ANR	1099118	IdentifierDecl	threshold_inverted = penum -> pgs -> dev_ht -> components [ j ] . corder . threshold_inverted		1098909	0					
ANR	1099119	IdentifierDeclType	bool		1098909	0					
ANR	1099120	Identifier	threshold_inverted		1098909	1					
ANR	1099121	AssignmentExpression	threshold_inverted = penum -> pgs -> dev_ht -> components [ j ] . corder . threshold_inverted		1098909	2		=			
ANR	1099122	Identifier	threshold_inverted		1098909	0					
ANR	1099123	MemberAccess	penum -> pgs -> dev_ht -> components [ j ] . corder . threshold_inverted		1098909	1					
ANR	1099124	MemberAccess	penum -> pgs -> dev_ht -> components [ j ] . corder		1098909	0					
ANR	1099125	ArrayIndexing	penum -> pgs -> dev_ht -> components [ j ]		1098909	0					
ANR	1099126	PtrMemberAccess	penum -> pgs -> dev_ht -> components		1098909	0					
ANR	1099127	PtrMemberAccess	penum -> pgs -> dev_ht		1098909	0					
ANR	1099128	PtrMemberAccess	penum -> pgs		1098909	0					
ANR	1099129	Identifier	penum		1098909	0					
ANR	1099130	Identifier	pgs		1098909	1					
ANR	1099131	Identifier	dev_ht		1098909	1					
ANR	1099132	Identifier	components		1098909	1					
ANR	1099133	Identifier	j		1098909	1					
ANR	1099134	Identifier	corder		1098909	1					
ANR	1099135	Identifier	threshold_inverted		1098909	1					
ANR	1099136	ExpressionStatement	thresh_width = penum -> pgs -> dev_ht -> components [ j ] . corder . width	888:16:34800:34861	1098909	1	True				
ANR	1099137	AssignmentExpression	thresh_width = penum -> pgs -> dev_ht -> components [ j ] . corder . width		1098909	0		=			
ANR	1099138	Identifier	thresh_width		1098909	0					
ANR	1099139	MemberAccess	penum -> pgs -> dev_ht -> components [ j ] . corder . width		1098909	1					
ANR	1099140	MemberAccess	penum -> pgs -> dev_ht -> components [ j ] . corder		1098909	0					
ANR	1099141	ArrayIndexing	penum -> pgs -> dev_ht -> components [ j ]		1098909	0					
ANR	1099142	PtrMemberAccess	penum -> pgs -> dev_ht -> components		1098909	0					
ANR	1099143	PtrMemberAccess	penum -> pgs -> dev_ht		1098909	0					
ANR	1099144	PtrMemberAccess	penum -> pgs		1098909	0					
ANR	1099145	Identifier	penum		1098909	0					
ANR	1099146	Identifier	pgs		1098909	1					
ANR	1099147	Identifier	dev_ht		1098909	1					
ANR	1099148	Identifier	components		1098909	1					
ANR	1099149	Identifier	j		1098909	1					
ANR	1099150	Identifier	corder		1098909	1					
ANR	1099151	Identifier	width		1098909	1					
ANR	1099152	ExpressionStatement	thresh_height = penum -> pgs -> dev_ht -> components [ j ] . corder . full_height	889:16:34879:34947	1098909	2	True				
ANR	1099153	AssignmentExpression	thresh_height = penum -> pgs -> dev_ht -> components [ j ] . corder . full_height		1098909	0		=			
ANR	1099154	Identifier	thresh_height		1098909	0					
ANR	1099155	MemberAccess	penum -> pgs -> dev_ht -> components [ j ] . corder . full_height		1098909	1					
ANR	1099156	MemberAccess	penum -> pgs -> dev_ht -> components [ j ] . corder		1098909	0					
ANR	1099157	ArrayIndexing	penum -> pgs -> dev_ht -> components [ j ]		1098909	0					
ANR	1099158	PtrMemberAccess	penum -> pgs -> dev_ht -> components		1098909	0					
ANR	1099159	PtrMemberAccess	penum -> pgs -> dev_ht		1098909	0					
ANR	1099160	PtrMemberAccess	penum -> pgs		1098909	0					
ANR	1099161	Identifier	penum		1098909	0					
ANR	1099162	Identifier	pgs		1098909	1					
ANR	1099163	Identifier	dev_ht		1098909	1					
ANR	1099164	Identifier	components		1098909	1					
ANR	1099165	Identifier	j		1098909	1					
ANR	1099166	Identifier	corder		1098909	1					
ANR	1099167	Identifier	full_height		1098909	1					
ANR	1099168	ExpressionStatement	halftone = penum -> ht_buffer + j * vdi * dithered_stride	890:16:34965:35020	1098909	3	True				
ANR	1099169	AssignmentExpression	halftone = penum -> ht_buffer + j * vdi * dithered_stride		1098909	0		=			
ANR	1099170	Identifier	halftone		1098909	0					
ANR	1099171	AdditiveExpression	penum -> ht_buffer + j * vdi * dithered_stride		1098909	1		+			
ANR	1099172	PtrMemberAccess	penum -> ht_buffer		1098909	0					
ANR	1099173	Identifier	penum		1098909	0					
ANR	1099174	Identifier	ht_buffer		1098909	1					
ANR	1099175	MultiplicativeExpression	j * vdi * dithered_stride		1098909	1		*			
ANR	1099176	Identifier	j		1098909	0					
ANR	1099177	MultiplicativeExpression	vdi * dithered_stride		1098909	1		*			
ANR	1099178	Identifier	vdi		1098909	0					
ANR	1099179	Identifier	dithered_stride		1098909	1					
ANR	1099180	ExpressionStatement	dx = ( fixed2int_var_rounded ( xrun ) + penum -> pgs -> screen_phase [ 0 ] . x ) % thresh_width	892:16:35105:35186	1098909	4	True				
ANR	1099181	AssignmentExpression	dx = ( fixed2int_var_rounded ( xrun ) + penum -> pgs -> screen_phase [ 0 ] . x ) % thresh_width		1098909	0		=			
ANR	1099182	Identifier	dx		1098909	0					
ANR	1099183	MultiplicativeExpression	( fixed2int_var_rounded ( xrun ) + penum -> pgs -> screen_phase [ 0 ] . x ) % thresh_width		1098909	1		%			
ANR	1099184	AdditiveExpression	fixed2int_var_rounded ( xrun ) + penum -> pgs -> screen_phase [ 0 ] . x		1098909	0		+			
ANR	1099185	CallExpression	fixed2int_var_rounded ( xrun )		1098909	0					
ANR	1099186	Callee	fixed2int_var_rounded		1098909	0					
ANR	1099187	Identifier	fixed2int_var_rounded		1098909	0					
ANR	1099188	ArgumentList	xrun		1098909	1					
ANR	1099189	Argument	xrun		1098909	0					
ANR	1099190	Identifier	xrun		1098909	0					
ANR	1099191	MemberAccess	penum -> pgs -> screen_phase [ 0 ] . x		1098909	1					
ANR	1099192	ArrayIndexing	penum -> pgs -> screen_phase [ 0 ]		1098909	0					
ANR	1099193	PtrMemberAccess	penum -> pgs -> screen_phase		1098909	0					
ANR	1099194	PtrMemberAccess	penum -> pgs		1098909	0					
ANR	1099195	Identifier	penum		1098909	0					
ANR	1099196	Identifier	pgs		1098909	1					
ANR	1099197	Identifier	screen_phase		1098909	1					
ANR	1099198	PrimaryExpression	0		1098909	1					
ANR	1099199	Identifier	x		1098909	1					
ANR	1099200	Identifier	thresh_width		1098909	1					
ANR	1099201	ExpressionStatement	"left_rem_end = min ( dx + dest_width , thresh_width )"	894:16:35246:35295	1098909	5	True				
ANR	1099202	AssignmentExpression	"left_rem_end = min ( dx + dest_width , thresh_width )"		1098909	0		=			
ANR	1099203	Identifier	left_rem_end		1098909	0					
ANR	1099204	CallExpression	"min ( dx + dest_width , thresh_width )"		1098909	1					
ANR	1099205	Callee	min		1098909	0					
ANR	1099206	Identifier	min		1098909	0					
ANR	1099207	ArgumentList	dx + dest_width		1098909	1					
ANR	1099208	Argument	dx + dest_width		1098909	0					
ANR	1099209	AdditiveExpression	dx + dest_width		1098909	0		+			
ANR	1099210	Identifier	dx		1098909	0					
ANR	1099211	Identifier	dest_width		1098909	1					
ANR	1099212	Argument	thresh_width		1098909	1					
ANR	1099213	Identifier	thresh_width		1098909	0					
ANR	1099214	ExpressionStatement	left_width = left_rem_end - dx	896:16:35367:35397	1098909	6	True				
ANR	1099215	AssignmentExpression	left_width = left_rem_end - dx		1098909	0		=			
ANR	1099216	Identifier	left_width		1098909	0					
ANR	1099217	AdditiveExpression	left_rem_end - dx		1098909	1		-			
ANR	1099218	Identifier	left_rem_end		1098909	0					
ANR	1099219	Identifier	dx		1098909	1					
ANR	1099220	ExpressionStatement	num_full_tiles = ( int ) fastfloor ( ( dest_width - left_width ) / ( float ) thresh_width )	898:16:35457:35557	1098909	7	True				
ANR	1099221	AssignmentExpression	num_full_tiles = ( int ) fastfloor ( ( dest_width - left_width ) / ( float ) thresh_width )		1098909	0		=			
ANR	1099222	Identifier	num_full_tiles		1098909	0					
ANR	1099223	CastExpression	( int ) fastfloor ( ( dest_width - left_width ) / ( float ) thresh_width )		1098909	1					
ANR	1099224	CastTarget	int		1098909	0					
ANR	1099225	CallExpression	fastfloor ( ( dest_width - left_width ) / ( float ) thresh_width )		1098909	1					
ANR	1099226	Callee	fastfloor		1098909	0					
ANR	1099227	Identifier	fastfloor		1098909	0					
ANR	1099228	ArgumentList	( dest_width - left_width ) / ( float ) thresh_width		1098909	1					
ANR	1099229	Argument	( dest_width - left_width ) / ( float ) thresh_width		1098909	0					
ANR	1099230	MultiplicativeExpression	( dest_width - left_width ) / ( float ) thresh_width		1098909	0		/			
ANR	1099231	AdditiveExpression	dest_width - left_width		1098909	0		-			
ANR	1099232	Identifier	dest_width		1098909	0					
ANR	1099233	Identifier	left_width		1098909	1					
ANR	1099234	CastExpression	( float ) thresh_width		1098909	1					
ANR	1099235	CastTarget	float		1098909	0					
ANR	1099236	Identifier	thresh_width		1098909	1					
ANR	1099237	ExpressionStatement	right_tile_width = dest_width - num_full_tiles * thresh_width - left_width	901:16:35616:35726	1098909	8	True				
ANR	1099238	AssignmentExpression	right_tile_width = dest_width - num_full_tiles * thresh_width - left_width		1098909	0		=			
ANR	1099239	Identifier	right_tile_width		1098909	0					
ANR	1099240	AdditiveExpression	dest_width - num_full_tiles * thresh_width - left_width		1098909	1		-			
ANR	1099241	Identifier	dest_width		1098909	0					
ANR	1099242	AdditiveExpression	num_full_tiles * thresh_width - left_width		1098909	1		-			
ANR	1099243	MultiplicativeExpression	num_full_tiles * thresh_width		1098909	0		*			
ANR	1099244	Identifier	num_full_tiles		1098909	0					
ANR	1099245	Identifier	thresh_width		1098909	1					
ANR	1099246	Identifier	left_width		1098909	1					
ANR	1099247	ExpressionStatement	threshold = penum -> pgs -> dev_ht -> components [ j ] . corder . threshold	904:16:35814:35876	1098909	9	True				
ANR	1099248	AssignmentExpression	threshold = penum -> pgs -> dev_ht -> components [ j ] . corder . threshold		1098909	0		=			
ANR	1099249	Identifier	threshold		1098909	0					
ANR	1099250	MemberAccess	penum -> pgs -> dev_ht -> components [ j ] . corder . threshold		1098909	1					
ANR	1099251	MemberAccess	penum -> pgs -> dev_ht -> components [ j ] . corder		1098909	0					
ANR	1099252	ArrayIndexing	penum -> pgs -> dev_ht -> components [ j ]		1098909	0					
ANR	1099253	PtrMemberAccess	penum -> pgs -> dev_ht -> components		1098909	0					
ANR	1099254	PtrMemberAccess	penum -> pgs -> dev_ht		1098909	0					
ANR	1099255	PtrMemberAccess	penum -> pgs		1098909	0					
ANR	1099256	Identifier	penum		1098909	0					
ANR	1099257	Identifier	pgs		1098909	1					
ANR	1099258	Identifier	dev_ht		1098909	1					
ANR	1099259	Identifier	components		1098909	1					
ANR	1099260	Identifier	j		1098909	1					
ANR	1099261	Identifier	corder		1098909	1					
ANR	1099262	Identifier	threshold		1098909	1					
ANR	1099263	ExpressionStatement	contone_align = penum -> line + contone_stride * j + offset_contone [ j ]	906:16:35949:36049	1098909	10	True				
ANR	1099264	AssignmentExpression	contone_align = penum -> line + contone_stride * j + offset_contone [ j ]		1098909	0		=			
ANR	1099265	Identifier	contone_align		1098909	0					
ANR	1099266	AdditiveExpression	penum -> line + contone_stride * j + offset_contone [ j ]		1098909	1		+			
ANR	1099267	PtrMemberAccess	penum -> line		1098909	0					
ANR	1099268	Identifier	penum		1098909	0					
ANR	1099269	Identifier	line		1098909	1					
ANR	1099270	AdditiveExpression	contone_stride * j + offset_contone [ j ]		1098909	1		+			
ANR	1099271	MultiplicativeExpression	contone_stride * j		1098909	0		*			
ANR	1099272	Identifier	contone_stride		1098909	0					
ANR	1099273	Identifier	j		1098909	1					
ANR	1099274	ArrayIndexing	offset_contone [ j ]		1098909	1					
ANR	1099275	Identifier	offset_contone		1098909	0					
ANR	1099276	Identifier	j		1098909	1					
ANR	1099277	ForStatement	for ( k = 0 ; k < vdi ; k ++ )		1098909	11					
ANR	1099278	ForInit	k = 0 ;	908:21:36072:36077	1098909	0	True				
ANR	1099279	AssignmentExpression	k = 0		1098909	0		=			
ANR	1099280	Identifier	k		1098909	0					
ANR	1099281	PrimaryExpression	0		1098909	1					
ANR	1099282	Condition	k < vdi	908:28:36079:36085	1098909	1	True				
ANR	1099283	RelationalExpression	k < vdi		1098909	0		<			
ANR	1099284	Identifier	k		1098909	0					
ANR	1099285	Identifier	vdi		1098909	1					
ANR	1099286	PostIncDecOperationExpression	k ++	908:37:36088:36090	1098909	2	True				
ANR	1099287	Identifier	k		1098909	0					
ANR	1099288	IncDec	++		1098909	1					
ANR	1099289	CompoundStatement		57:42:2815:2815	1098909	3					
ANR	1099290	ExpressionStatement	dy = ( penum -> yci + k - penum -> pgs -> screen_phase [ 0 ] . y ) % thresh_height	910:20:36171:36266	1098909	0	True				
ANR	1099291	AssignmentExpression	dy = ( penum -> yci + k - penum -> pgs -> screen_phase [ 0 ] . y ) % thresh_height		1098909	0		=			
ANR	1099292	Identifier	dy		1098909	0					
ANR	1099293	MultiplicativeExpression	( penum -> yci + k - penum -> pgs -> screen_phase [ 0 ] . y ) % thresh_height		1098909	1		%			
ANR	1099294	AdditiveExpression	penum -> yci + k - penum -> pgs -> screen_phase [ 0 ] . y		1098909	0		+			
ANR	1099295	PtrMemberAccess	penum -> yci		1098909	0					
ANR	1099296	Identifier	penum		1098909	0					
ANR	1099297	Identifier	yci		1098909	1					
ANR	1099298	AdditiveExpression	k - penum -> pgs -> screen_phase [ 0 ] . y		1098909	1		-			
ANR	1099299	Identifier	k		1098909	0					
ANR	1099300	MemberAccess	penum -> pgs -> screen_phase [ 0 ] . y		1098909	1					
ANR	1099301	ArrayIndexing	penum -> pgs -> screen_phase [ 0 ]		1098909	0					
ANR	1099302	PtrMemberAccess	penum -> pgs -> screen_phase		1098909	0					
ANR	1099303	PtrMemberAccess	penum -> pgs		1098909	0					
ANR	1099304	Identifier	penum		1098909	0					
ANR	1099305	Identifier	pgs		1098909	1					
ANR	1099306	Identifier	screen_phase		1098909	1					
ANR	1099307	PrimaryExpression	0		1098909	1					
ANR	1099308	Identifier	y		1098909	1					
ANR	1099309	Identifier	thresh_height		1098909	1					
ANR	1099310	IfStatement	if ( dy < 0 )		1098909	1					
ANR	1099311	Condition	dy < 0	912:24:36292:36297	1098909	0	True				
ANR	1099312	RelationalExpression	dy < 0		1098909	0		<			
ANR	1099313	Identifier	dy		1098909	0					
ANR	1099314	PrimaryExpression	0		1098909	1					
ANR	1099315	ExpressionStatement	dy += thresh_height	913:24:36324:36343	1098909	1	True				
ANR	1099316	AssignmentExpression	dy += thresh_height		1098909	0		+=			
ANR	1099317	Identifier	dy		1098909	0					
ANR	1099318	Identifier	thresh_height		1098909	1					
ANR	1099319	ExpressionStatement	thresh_tile = threshold + thresh_width * dy	914:20:36365:36408	1098909	2	True				
ANR	1099320	AssignmentExpression	thresh_tile = threshold + thresh_width * dy		1098909	0		=			
ANR	1099321	Identifier	thresh_tile		1098909	0					
ANR	1099322	AdditiveExpression	threshold + thresh_width * dy		1098909	1		+			
ANR	1099323	Identifier	threshold		1098909	0					
ANR	1099324	MultiplicativeExpression	thresh_width * dy		1098909	1		*			
ANR	1099325	Identifier	thresh_width		1098909	0					
ANR	1099326	Identifier	dy		1098909	1					
ANR	1099327	ExpressionStatement	position = contone_stride * k	917:20:36551:36580	1098909	3	True				
ANR	1099328	AssignmentExpression	position = contone_stride * k		1098909	0		=			
ANR	1099329	Identifier	position		1098909	0					
ANR	1099330	MultiplicativeExpression	contone_stride * k		1098909	1		*			
ANR	1099331	Identifier	contone_stride		1098909	0					
ANR	1099332	Identifier	k		1098909	1					
ANR	1099333	ExpressionStatement	"fill_threshold_buffer ( & ( thresh_align [ position ] ) , thresh_tile , thresh_width , dx , left_width , num_full_tiles , right_tile_width )"	919:20:36674:36885	1098909	4	True				
ANR	1099334	CallExpression	"fill_threshold_buffer ( & ( thresh_align [ position ] ) , thresh_tile , thresh_width , dx , left_width , num_full_tiles , right_tile_width )"		1098909	0					
ANR	1099335	Callee	fill_threshold_buffer		1098909	0					
ANR	1099336	Identifier	fill_threshold_buffer		1098909	0					
ANR	1099337	ArgumentList	& ( thresh_align [ position ] )		1098909	1					
ANR	1099338	Argument	& ( thresh_align [ position ] )		1098909	0					
ANR	1099339	UnaryOperationExpression	& ( thresh_align [ position ] )		1098909	0					
ANR	1099340	UnaryOperator	&		1098909	0					
ANR	1099341	ArrayIndexing	thresh_align [ position ]		1098909	1					
ANR	1099342	Identifier	thresh_align		1098909	0					
ANR	1099343	Identifier	position		1098909	1					
ANR	1099344	Argument	thresh_tile		1098909	1					
ANR	1099345	Identifier	thresh_tile		1098909	0					
ANR	1099346	Argument	thresh_width		1098909	2					
ANR	1099347	Identifier	thresh_width		1098909	0					
ANR	1099348	Argument	dx		1098909	3					
ANR	1099349	Identifier	dx		1098909	0					
ANR	1099350	Argument	left_width		1098909	4					
ANR	1099351	Identifier	left_width		1098909	0					
ANR	1099352	Argument	num_full_tiles		1098909	5					
ANR	1099353	Identifier	num_full_tiles		1098909	0					
ANR	1099354	Argument	right_tile_width		1098909	6					
ANR	1099355	Identifier	right_tile_width		1098909	0					
ANR	1099356	IfStatement	if ( offset_bits > dest_width )		1098909	12					
ANR	1099357	Condition	offset_bits > dest_width	924:20:36977:37000	1098909	0	True				
ANR	1099358	RelationalExpression	offset_bits > dest_width		1098909	0		>			
ANR	1099359	Identifier	offset_bits		1098909	0					
ANR	1099360	Identifier	dest_width		1098909	1					
ANR	1099361	ExpressionStatement	offset_bits = dest_width	925:20:37023:37047	1098909	1	True				
ANR	1099362	AssignmentExpression	offset_bits = dest_width		1098909	0		=			
ANR	1099363	Identifier	offset_bits		1098909	0					
ANR	1099364	Identifier	dest_width		1098909	1					
ANR	1099365	IfStatement	if ( threshold_inverted || ( dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE && is_planar_dev ) )		1098909	13					
ANR	1099366	Condition	threshold_inverted || ( dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE && is_planar_dev )	927:20:37070:37187	1098909	0	True				
ANR	1099367	OrExpression	threshold_inverted || ( dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE && is_planar_dev )		1098909	0		||			
ANR	1099368	Identifier	threshold_inverted		1098909	0					
ANR	1099369	AndExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE && is_planar_dev		1098909	1		&&			
ANR	1099370	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE		1098909	0		==			
ANR	1099371	MemberAccess	dev -> color_info . polarity		1098909	0					
ANR	1099372	PtrMemberAccess	dev -> color_info		1098909	0					
ANR	1099373	Identifier	dev		1098909	0					
ANR	1099374	Identifier	color_info		1098909	1					
ANR	1099375	Identifier	polarity		1098909	1					
ANR	1099376	Identifier	GX_CINFO_POLARITY_SUBTRACTIVE		1098909	1					
ANR	1099377	Identifier	is_planar_dev		1098909	1					
ANR	1099378	CompoundStatement		77:98:3912:3912	1098909	1					
ANR	1099379	ExpressionStatement	"gx_ht_threshold_row_bit_sub ( contone_align , thresh_align , contone_stride , halftone , dithered_stride , dest_width , vdi , offset_bits )"	929:20:37212:37417	1098909	0	True				
ANR	1099380	CallExpression	"gx_ht_threshold_row_bit_sub ( contone_align , thresh_align , contone_stride , halftone , dithered_stride , dest_width , vdi , offset_bits )"		1098909	0					
ANR	1099381	Callee	gx_ht_threshold_row_bit_sub		1098909	0					
ANR	1099382	Identifier	gx_ht_threshold_row_bit_sub		1098909	0					
ANR	1099383	ArgumentList	contone_align		1098909	1					
ANR	1099384	Argument	contone_align		1098909	0					
ANR	1099385	Identifier	contone_align		1098909	0					
ANR	1099386	Argument	thresh_align		1098909	1					
ANR	1099387	Identifier	thresh_align		1098909	0					
ANR	1099388	Argument	contone_stride		1098909	2					
ANR	1099389	Identifier	contone_stride		1098909	0					
ANR	1099390	Argument	halftone		1098909	3					
ANR	1099391	Identifier	halftone		1098909	0					
ANR	1099392	Argument	dithered_stride		1098909	4					
ANR	1099393	Identifier	dithered_stride		1098909	0					
ANR	1099394	Argument	dest_width		1098909	5					
ANR	1099395	Identifier	dest_width		1098909	0					
ANR	1099396	Argument	vdi		1098909	6					
ANR	1099397	Identifier	vdi		1098909	0					
ANR	1099398	Argument	offset_bits		1098909	7					
ANR	1099399	Identifier	offset_bits		1098909	0					
ANR	1099400	ElseStatement	else		1098909	0					
ANR	1099401	CompoundStatement		81:23:4164:4164	1098909	0					
ANR	1099402	ExpressionStatement	"gx_ht_threshold_row_bit ( contone_align , thresh_align , contone_stride , halftone , dithered_stride , dest_width , vdi , offset_bits )"	933:20:37464:37641	1098909	0	True				
ANR	1099403	CallExpression	"gx_ht_threshold_row_bit ( contone_align , thresh_align , contone_stride , halftone , dithered_stride , dest_width , vdi , offset_bits )"		1098909	0					
ANR	1099404	Callee	gx_ht_threshold_row_bit		1098909	0					
ANR	1099405	Identifier	gx_ht_threshold_row_bit		1098909	0					
ANR	1099406	ArgumentList	contone_align		1098909	1					
ANR	1099407	Argument	contone_align		1098909	0					
ANR	1099408	Identifier	contone_align		1098909	0					
ANR	1099409	Argument	thresh_align		1098909	1					
ANR	1099410	Identifier	thresh_align		1098909	0					
ANR	1099411	Argument	contone_stride		1098909	2					
ANR	1099412	Identifier	contone_stride		1098909	0					
ANR	1099413	Argument	halftone		1098909	3					
ANR	1099414	Identifier	halftone		1098909	0					
ANR	1099415	Argument	dithered_stride		1098909	4					
ANR	1099416	Identifier	dithered_stride		1098909	0					
ANR	1099417	Argument	dest_width		1098909	5					
ANR	1099418	Identifier	dest_width		1098909	0					
ANR	1099419	Argument	vdi		1098909	6					
ANR	1099420	Identifier	vdi		1098909	0					
ANR	1099421	Argument	offset_bits		1098909	7					
ANR	1099422	Identifier	offset_bits		1098909	0					
ANR	1099423	IfStatement	if ( offset_bits > 0 )		1098909	3					
ANR	1099424	Condition	offset_bits > 0	949:16:38379:38393	1098909	0	True				
ANR	1099425	RelationalExpression	offset_bits > 0		1098909	0		>			
ANR	1099426	Identifier	offset_bits		1098909	0					
ANR	1099427	PrimaryExpression	0		1098909	1					
ANR	1099428	CompoundStatement		99:16:5136:5175	1098909	1					
ANR	1099429	IdentifierDeclStatement	int x_pos = fixed2int_var_rounded ( xrun ) ;	950:16:38414:38453	1098909	0	True				
ANR	1099430	IdentifierDecl	x_pos = fixed2int_var_rounded ( xrun )		1098909	0					
ANR	1099431	IdentifierDeclType	int		1098909	0					
ANR	1099432	Identifier	x_pos		1098909	1					
ANR	1099433	AssignmentExpression	x_pos = fixed2int_var_rounded ( xrun )		1098909	2		=			
ANR	1099434	Identifier	x_pos		1098909	0					
ANR	1099435	CallExpression	fixed2int_var_rounded ( xrun )		1098909	1					
ANR	1099436	Callee	fixed2int_var_rounded		1098909	0					
ANR	1099437	Identifier	fixed2int_var_rounded		1098909	0					
ANR	1099438	ArgumentList	xrun		1098909	1					
ANR	1099439	Argument	xrun		1098909	0					
ANR	1099440	Identifier	xrun		1098909	0					
ANR	1099441	IfStatement	if ( ! is_planar_dev )		1098909	1					
ANR	1099442	Condition	! is_planar_dev	951:20:38475:38488	1098909	0	True				
ANR	1099443	UnaryOperationExpression	! is_planar_dev		1098909	0					
ANR	1099444	UnaryOperator	!		1098909	0					
ANR	1099445	Identifier	is_planar_dev		1098909	1					
ANR	1099446	CompoundStatement		100:36:5213:5213	1098909	1					
ANR	1099447	ExpressionStatement	"( * dev_proc ( dev , copy_mono ) ) ( dev , penum -> ht_buffer , 0 , dithered_stride , gx_no_bitmap_id , x_pos , y_pos , offset_bits , vdi , dev_white , dev_black )"	952:20:38513:38802	1098909	0	True				
ANR	1099448	CallExpression	"( * dev_proc ( dev , copy_mono ) ) ( dev , penum -> ht_buffer , 0 , dithered_stride , gx_no_bitmap_id , x_pos , y_pos , offset_bits , vdi , dev_white , dev_black )"		1098909	0					
ANR	1099449	Callee	"* dev_proc ( dev , copy_mono )"		1098909	0					
ANR	1099450	UnaryOperationExpression	"* dev_proc ( dev , copy_mono )"		1098909	0					
ANR	1099451	UnaryOperator	*		1098909	0					
ANR	1099452	CallExpression	"dev_proc ( dev , copy_mono )"		1098909	1					
ANR	1099453	Callee	dev_proc		1098909	0					
ANR	1099454	Identifier	dev_proc		1098909	0					
ANR	1099455	ArgumentList	dev		1098909	1					
ANR	1099456	Argument	dev		1098909	0					
ANR	1099457	Identifier	dev		1098909	0					
ANR	1099458	Argument	copy_mono		1098909	1					
ANR	1099459	Identifier	copy_mono		1098909	0					
ANR	1099460	ArgumentList	dev		1098909	1					
ANR	1099461	Argument	dev		1098909	0					
ANR	1099462	Identifier	dev		1098909	0					
ANR	1099463	Argument	penum -> ht_buffer		1098909	1					
ANR	1099464	PtrMemberAccess	penum -> ht_buffer		1098909	0					
ANR	1099465	Identifier	penum		1098909	0					
ANR	1099466	Identifier	ht_buffer		1098909	1					
ANR	1099467	Argument	0		1098909	2					
ANR	1099468	PrimaryExpression	0		1098909	0					
ANR	1099469	Argument	dithered_stride		1098909	3					
ANR	1099470	Identifier	dithered_stride		1098909	0					
ANR	1099471	Argument	gx_no_bitmap_id		1098909	4					
ANR	1099472	Identifier	gx_no_bitmap_id		1098909	0					
ANR	1099473	Argument	x_pos		1098909	5					
ANR	1099474	Identifier	x_pos		1098909	0					
ANR	1099475	Argument	y_pos		1098909	6					
ANR	1099476	Identifier	y_pos		1098909	0					
ANR	1099477	Argument	offset_bits		1098909	7					
ANR	1099478	Identifier	offset_bits		1098909	0					
ANR	1099479	Argument	vdi		1098909	8					
ANR	1099480	Identifier	vdi		1098909	0					
ANR	1099481	Argument	dev_white		1098909	9					
ANR	1099482	Identifier	dev_white		1098909	0					
ANR	1099483	Argument	dev_black		1098909	10					
ANR	1099484	Identifier	dev_black		1098909	0					
ANR	1099485	ElseStatement	else		1098909	0					
ANR	1099486	CompoundStatement		105:23:5549:5549	1098909	0					
ANR	1099487	ExpressionStatement	"( * dev_proc ( dev , copy_planes ) ) ( dev , penum -> ht_buffer , 0 , dithered_stride , gx_no_bitmap_id , x_pos , y_pos , offset_bits , vdi , vdi )"	957:20:38849:39074	1098909	0	True				
ANR	1099488	CallExpression	"( * dev_proc ( dev , copy_planes ) ) ( dev , penum -> ht_buffer , 0 , dithered_stride , gx_no_bitmap_id , x_pos , y_pos , offset_bits , vdi , vdi )"		1098909	0					
ANR	1099489	Callee	"* dev_proc ( dev , copy_planes )"		1098909	0					
ANR	1099490	UnaryOperationExpression	"* dev_proc ( dev , copy_planes )"		1098909	0					
ANR	1099491	UnaryOperator	*		1098909	0					
ANR	1099492	CallExpression	"dev_proc ( dev , copy_planes )"		1098909	1					
ANR	1099493	Callee	dev_proc		1098909	0					
ANR	1099494	Identifier	dev_proc		1098909	0					
ANR	1099495	ArgumentList	dev		1098909	1					
ANR	1099496	Argument	dev		1098909	0					
ANR	1099497	Identifier	dev		1098909	0					
ANR	1099498	Argument	copy_planes		1098909	1					
ANR	1099499	Identifier	copy_planes		1098909	0					
ANR	1099500	ArgumentList	dev		1098909	1					
ANR	1099501	Argument	dev		1098909	0					
ANR	1099502	Identifier	dev		1098909	0					
ANR	1099503	Argument	penum -> ht_buffer		1098909	1					
ANR	1099504	PtrMemberAccess	penum -> ht_buffer		1098909	0					
ANR	1099505	Identifier	penum		1098909	0					
ANR	1099506	Identifier	ht_buffer		1098909	1					
ANR	1099507	Argument	0		1098909	2					
ANR	1099508	PrimaryExpression	0		1098909	0					
ANR	1099509	Argument	dithered_stride		1098909	3					
ANR	1099510	Identifier	dithered_stride		1098909	0					
ANR	1099511	Argument	gx_no_bitmap_id		1098909	4					
ANR	1099512	Identifier	gx_no_bitmap_id		1098909	0					
ANR	1099513	Argument	x_pos		1098909	5					
ANR	1099514	Identifier	x_pos		1098909	0					
ANR	1099515	Argument	y_pos		1098909	6					
ANR	1099516	Identifier	y_pos		1098909	0					
ANR	1099517	Argument	offset_bits		1098909	7					
ANR	1099518	Identifier	offset_bits		1098909	0					
ANR	1099519	Argument	vdi		1098909	8					
ANR	1099520	Identifier	vdi		1098909	0					
ANR	1099521	Argument	vdi		1098909	9					
ANR	1099522	Identifier	vdi		1098909	0					
ANR	1099523	IfStatement	if ( ( dest_width - offset_bits ) > 0 )		1098909	4					
ANR	1099524	Condition	( dest_width - offset_bits ) > 0	962:16:39124:39153	1098909	0	True				
ANR	1099525	RelationalExpression	( dest_width - offset_bits ) > 0		1098909	0		>			
ANR	1099526	AdditiveExpression	dest_width - offset_bits		1098909	0		-			
ANR	1099527	Identifier	dest_width		1098909	0					
ANR	1099528	Identifier	offset_bits		1098909	1					
ANR	1099529	PrimaryExpression	0		1098909	1					
ANR	1099530	CompoundStatement		116:16:6166:6202	1098909	1					
ANR	1099531	IdentifierDeclStatement	int curr_width = dest_width - offset_bits ;	964:16:39227:39268	1098909	0	True				
ANR	1099532	IdentifierDecl	curr_width = dest_width - offset_bits		1098909	0					
ANR	1099533	IdentifierDeclType	int		1098909	0					
ANR	1099534	Identifier	curr_width		1098909	1					
ANR	1099535	AssignmentExpression	curr_width = dest_width - offset_bits		1098909	2		=			
ANR	1099536	Identifier	curr_width		1098909	0					
ANR	1099537	AdditiveExpression	dest_width - offset_bits		1098909	1		-			
ANR	1099538	Identifier	dest_width		1098909	0					
ANR	1099539	Identifier	offset_bits		1098909	1					
ANR	1099540	IdentifierDeclStatement	int x_pos = fixed2int_var_rounded ( xrun ) + offset_bits ;	965:16:39286:39339	1098909	1	True				
ANR	1099541	IdentifierDecl	x_pos = fixed2int_var_rounded ( xrun ) + offset_bits		1098909	0					
ANR	1099542	IdentifierDeclType	int		1098909	0					
ANR	1099543	Identifier	x_pos		1098909	1					
ANR	1099544	AssignmentExpression	x_pos = fixed2int_var_rounded ( xrun ) + offset_bits		1098909	2		=			
ANR	1099545	Identifier	x_pos		1098909	0					
ANR	1099546	AdditiveExpression	fixed2int_var_rounded ( xrun ) + offset_bits		1098909	1		+			
ANR	1099547	CallExpression	fixed2int_var_rounded ( xrun )		1098909	0					
ANR	1099548	Callee	fixed2int_var_rounded		1098909	0					
ANR	1099549	Identifier	fixed2int_var_rounded		1098909	0					
ANR	1099550	ArgumentList	xrun		1098909	1					
ANR	1099551	Argument	xrun		1098909	0					
ANR	1099552	Identifier	xrun		1098909	0					
ANR	1099553	Identifier	offset_bits		1098909	1					
ANR	1099554	IdentifierDeclStatement	int xoffs = offset_bits > 0 ? 16 : 0 ;	967:16:39444:39480	1098909	2	True				
ANR	1099555	IdentifierDecl	xoffs = offset_bits > 0 ? 16 : 0		1098909	0					
ANR	1099556	IdentifierDeclType	int		1098909	0					
ANR	1099557	Identifier	xoffs		1098909	1					
ANR	1099558	AssignmentExpression	xoffs = offset_bits > 0 ? 16 : 0		1098909	2		=			
ANR	1099559	Identifier	xoffs		1098909	0					
ANR	1099560	ConditionalExpression	offset_bits > 0 ? 16 : 0		1098909	1					
ANR	1099561	Condition	offset_bits > 0		1098909	0					
ANR	1099562	RelationalExpression	offset_bits > 0		1098909	0		>			
ANR	1099563	Identifier	offset_bits		1098909	0					
ANR	1099564	PrimaryExpression	0		1098909	1					
ANR	1099565	PrimaryExpression	16		1098909	1					
ANR	1099566	PrimaryExpression	0		1098909	2					
ANR	1099567	IfStatement	if ( ! is_planar_dev )		1098909	3					
ANR	1099568	Condition	! is_planar_dev	969:20:39503:39516	1098909	0	True				
ANR	1099569	UnaryOperationExpression	! is_planar_dev		1098909	0					
ANR	1099570	UnaryOperator	!		1098909	0					
ANR	1099571	Identifier	is_planar_dev		1098909	1					
ANR	1099572	CompoundStatement		118:36:6241:6241	1098909	1					
ANR	1099573	ExpressionStatement	"( * dev_proc ( dev , copy_mono ) ) ( dev , penum -> ht_buffer , xoffs , dithered_stride , gx_no_bitmap_id , x_pos , y_pos , curr_width , vdi , dev_white , dev_black )"	970:20:39541:39833	1098909	0	True				
ANR	1099574	CallExpression	"( * dev_proc ( dev , copy_mono ) ) ( dev , penum -> ht_buffer , xoffs , dithered_stride , gx_no_bitmap_id , x_pos , y_pos , curr_width , vdi , dev_white , dev_black )"		1098909	0					
ANR	1099575	Callee	"* dev_proc ( dev , copy_mono )"		1098909	0					
ANR	1099576	UnaryOperationExpression	"* dev_proc ( dev , copy_mono )"		1098909	0					
ANR	1099577	UnaryOperator	*		1098909	0					
ANR	1099578	CallExpression	"dev_proc ( dev , copy_mono )"		1098909	1					
ANR	1099579	Callee	dev_proc		1098909	0					
ANR	1099580	Identifier	dev_proc		1098909	0					
ANR	1099581	ArgumentList	dev		1098909	1					
ANR	1099582	Argument	dev		1098909	0					
ANR	1099583	Identifier	dev		1098909	0					
ANR	1099584	Argument	copy_mono		1098909	1					
ANR	1099585	Identifier	copy_mono		1098909	0					
ANR	1099586	ArgumentList	dev		1098909	1					
ANR	1099587	Argument	dev		1098909	0					
ANR	1099588	Identifier	dev		1098909	0					
ANR	1099589	Argument	penum -> ht_buffer		1098909	1					
ANR	1099590	PtrMemberAccess	penum -> ht_buffer		1098909	0					
ANR	1099591	Identifier	penum		1098909	0					
ANR	1099592	Identifier	ht_buffer		1098909	1					
ANR	1099593	Argument	xoffs		1098909	2					
ANR	1099594	Identifier	xoffs		1098909	0					
ANR	1099595	Argument	dithered_stride		1098909	3					
ANR	1099596	Identifier	dithered_stride		1098909	0					
ANR	1099597	Argument	gx_no_bitmap_id		1098909	4					
ANR	1099598	Identifier	gx_no_bitmap_id		1098909	0					
ANR	1099599	Argument	x_pos		1098909	5					
ANR	1099600	Identifier	x_pos		1098909	0					
ANR	1099601	Argument	y_pos		1098909	6					
ANR	1099602	Identifier	y_pos		1098909	0					
ANR	1099603	Argument	curr_width		1098909	7					
ANR	1099604	Identifier	curr_width		1098909	0					
ANR	1099605	Argument	vdi		1098909	8					
ANR	1099606	Identifier	vdi		1098909	0					
ANR	1099607	Argument	dev_white		1098909	9					
ANR	1099608	Identifier	dev_white		1098909	0					
ANR	1099609	Argument	dev_black		1098909	10					
ANR	1099610	Identifier	dev_black		1098909	0					
ANR	1099611	ElseStatement	else		1098909	0					
ANR	1099612	CompoundStatement		123:23:6580:6580	1098909	0					
ANR	1099613	ExpressionStatement	"( * dev_proc ( dev , copy_planes ) ) ( dev , penum -> ht_buffer , xoffs , dithered_stride , gx_no_bitmap_id , x_pos , y_pos , curr_width , vdi , vdi )"	975:20:39880:40108	1098909	0	True				
ANR	1099614	CallExpression	"( * dev_proc ( dev , copy_planes ) ) ( dev , penum -> ht_buffer , xoffs , dithered_stride , gx_no_bitmap_id , x_pos , y_pos , curr_width , vdi , vdi )"		1098909	0					
ANR	1099615	Callee	"* dev_proc ( dev , copy_planes )"		1098909	0					
ANR	1099616	UnaryOperationExpression	"* dev_proc ( dev , copy_planes )"		1098909	0					
ANR	1099617	UnaryOperator	*		1098909	0					
ANR	1099618	CallExpression	"dev_proc ( dev , copy_planes )"		1098909	1					
ANR	1099619	Callee	dev_proc		1098909	0					
ANR	1099620	Identifier	dev_proc		1098909	0					
ANR	1099621	ArgumentList	dev		1098909	1					
ANR	1099622	Argument	dev		1098909	0					
ANR	1099623	Identifier	dev		1098909	0					
ANR	1099624	Argument	copy_planes		1098909	1					
ANR	1099625	Identifier	copy_planes		1098909	0					
ANR	1099626	ArgumentList	dev		1098909	1					
ANR	1099627	Argument	dev		1098909	0					
ANR	1099628	Identifier	dev		1098909	0					
ANR	1099629	Argument	penum -> ht_buffer		1098909	1					
ANR	1099630	PtrMemberAccess	penum -> ht_buffer		1098909	0					
ANR	1099631	Identifier	penum		1098909	0					
ANR	1099632	Identifier	ht_buffer		1098909	1					
ANR	1099633	Argument	xoffs		1098909	2					
ANR	1099634	Identifier	xoffs		1098909	0					
ANR	1099635	Argument	dithered_stride		1098909	3					
ANR	1099636	Identifier	dithered_stride		1098909	0					
ANR	1099637	Argument	gx_no_bitmap_id		1098909	4					
ANR	1099638	Identifier	gx_no_bitmap_id		1098909	0					
ANR	1099639	Argument	x_pos		1098909	5					
ANR	1099640	Identifier	x_pos		1098909	0					
ANR	1099641	Argument	y_pos		1098909	6					
ANR	1099642	Identifier	y_pos		1098909	0					
ANR	1099643	Argument	curr_width		1098909	7					
ANR	1099644	Identifier	curr_width		1098909	0					
ANR	1099645	Argument	vdi		1098909	8					
ANR	1099646	Identifier	vdi		1098909	0					
ANR	1099647	Argument	vdi		1098909	9					
ANR	1099648	Identifier	vdi		1098909	0					
ANR	1099649	BreakStatement	break ;	981:12:40155:40160	1098909	5	True				
ANR	1099650	Label	case image_landscape :	982:8:40170:40190	1098909	6	True				
ANR	1099651	Identifier	image_landscape		1098909	0					
ANR	1099652	ExpressionStatement	vdi = penum -> wci	986:12:40381:40397	1098909	7	True				
ANR	1099653	AssignmentExpression	vdi = penum -> wci		1098909	0		=			
ANR	1099654	Identifier	vdi		1098909	0					
ANR	1099655	PtrMemberAccess	penum -> wci		1098909	1					
ANR	1099656	Identifier	penum		1098909	0					
ANR	1099657	Identifier	wci		1098909	1					
ANR	1099658	WhileStatement	while ( ( penum -> ht_landscape . count >= LAND_BITS || ( ( penum -> ht_landscape . count >= offset_bits ) && penum -> ht_landscape . offset_set ) ) )		1098909	8					
ANR	1099659	Condition	penum -> ht_landscape . count >= LAND_BITS || ( ( penum -> ht_landscape . count >= offset_bits ) && penum -> ht_landscape . offset_set )	989:20:40563:40723	1098909	0	True				
ANR	1099660	OrExpression	penum -> ht_landscape . count >= LAND_BITS || ( ( penum -> ht_landscape . count >= offset_bits ) && penum -> ht_landscape . offset_set )		1098909	0		||			
ANR	1099661	RelationalExpression	penum -> ht_landscape . count >= LAND_BITS		1098909	0		>=			
ANR	1099662	MemberAccess	penum -> ht_landscape . count		1098909	0					
ANR	1099663	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1099664	Identifier	penum		1098909	0					
ANR	1099665	Identifier	ht_landscape		1098909	1					
ANR	1099666	Identifier	count		1098909	1					
ANR	1099667	Identifier	LAND_BITS		1098909	1					
ANR	1099668	AndExpression	( penum -> ht_landscape . count >= offset_bits ) && penum -> ht_landscape . offset_set		1098909	1		&&			
ANR	1099669	RelationalExpression	penum -> ht_landscape . count >= offset_bits		1098909	0		>=			
ANR	1099670	MemberAccess	penum -> ht_landscape . count		1098909	0					
ANR	1099671	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1099672	Identifier	penum		1098909	0					
ANR	1099673	Identifier	ht_landscape		1098909	1					
ANR	1099674	Identifier	count		1098909	1					
ANR	1099675	Identifier	offset_bits		1098909	1					
ANR	1099676	MemberAccess	penum -> ht_landscape . offset_set		1098909	1					
ANR	1099677	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1099678	Identifier	penum		1098909	0					
ANR	1099679	Identifier	ht_landscape		1098909	1					
ANR	1099680	Identifier	offset_set		1098909	1					
ANR	1099681	CompoundStatement		140:54:7448:7448	1098909	1					
ANR	1099682	ForStatement	for ( j = 0 ; j < spp_out ; j ++ )		1098909	0					
ANR	1099683	ForInit	j = 0 ;	995:21:40945:40950	1098909	0	True				
ANR	1099684	AssignmentExpression	j = 0		1098909	0		=			
ANR	1099685	Identifier	j		1098909	0					
ANR	1099686	PrimaryExpression	0		1098909	1					
ANR	1099687	Condition	j < spp_out	995:28:40952:40962	1098909	1	True				
ANR	1099688	RelationalExpression	j < spp_out		1098909	0		<			
ANR	1099689	Identifier	j		1098909	0					
ANR	1099690	Identifier	spp_out		1098909	1					
ANR	1099691	PostIncDecOperationExpression	j ++	995:41:40965:40967	1098909	2	True				
ANR	1099692	Identifier	j		1098909	0					
ANR	1099693	IncDec	++		1098909	1					
ANR	1099694	CompoundStatement		144:46:7692:7692	1098909	3					
ANR	1099695	ExpressionStatement	halftone = penum -> ht_buffer + j * penum -> ht_plane_height * ( LAND_BITS >> 3 )	996:20:40992:41100	1098909	0	True				
ANR	1099696	AssignmentExpression	halftone = penum -> ht_buffer + j * penum -> ht_plane_height * ( LAND_BITS >> 3 )		1098909	0		=			
ANR	1099697	Identifier	halftone		1098909	0					
ANR	1099698	AdditiveExpression	penum -> ht_buffer + j * penum -> ht_plane_height * ( LAND_BITS >> 3 )		1098909	1		+			
ANR	1099699	PtrMemberAccess	penum -> ht_buffer		1098909	0					
ANR	1099700	Identifier	penum		1098909	0					
ANR	1099701	Identifier	ht_buffer		1098909	1					
ANR	1099702	MultiplicativeExpression	j * penum -> ht_plane_height * ( LAND_BITS >> 3 )		1098909	1		*			
ANR	1099703	Identifier	j		1098909	0					
ANR	1099704	MultiplicativeExpression	penum -> ht_plane_height * ( LAND_BITS >> 3 )		1098909	1		*			
ANR	1099705	PtrMemberAccess	penum -> ht_plane_height		1098909	0					
ANR	1099706	Identifier	penum		1098909	0					
ANR	1099707	Identifier	ht_plane_height		1098909	1					
ANR	1099708	ShiftExpression	LAND_BITS >> 3		1098909	1		>>			
ANR	1099709	Identifier	LAND_BITS		1098909	0					
ANR	1099710	PrimaryExpression	3		1098909	1					
ANR	1099711	ExpressionStatement	thresh_width = penum -> pgs -> dev_ht -> components [ j ] . corder . width	998:20:41122:41183	1098909	1	True				
ANR	1099712	AssignmentExpression	thresh_width = penum -> pgs -> dev_ht -> components [ j ] . corder . width		1098909	0		=			
ANR	1099713	Identifier	thresh_width		1098909	0					
ANR	1099714	MemberAccess	penum -> pgs -> dev_ht -> components [ j ] . corder . width		1098909	1					
ANR	1099715	MemberAccess	penum -> pgs -> dev_ht -> components [ j ] . corder		1098909	0					
ANR	1099716	ArrayIndexing	penum -> pgs -> dev_ht -> components [ j ]		1098909	0					
ANR	1099717	PtrMemberAccess	penum -> pgs -> dev_ht -> components		1098909	0					
ANR	1099718	PtrMemberAccess	penum -> pgs -> dev_ht		1098909	0					
ANR	1099719	PtrMemberAccess	penum -> pgs		1098909	0					
ANR	1099720	Identifier	penum		1098909	0					
ANR	1099721	Identifier	pgs		1098909	1					
ANR	1099722	Identifier	dev_ht		1098909	1					
ANR	1099723	Identifier	components		1098909	1					
ANR	1099724	Identifier	j		1098909	1					
ANR	1099725	Identifier	corder		1098909	1					
ANR	1099726	Identifier	width		1098909	1					
ANR	1099727	ExpressionStatement	thresh_height = penum -> pgs -> dev_ht -> components [ j ] . corder . full_height	999:20:41205:41299	1098909	2	True				
ANR	1099728	AssignmentExpression	thresh_height = penum -> pgs -> dev_ht -> components [ j ] . corder . full_height		1098909	0		=			
ANR	1099729	Identifier	thresh_height		1098909	0					
ANR	1099730	MemberAccess	penum -> pgs -> dev_ht -> components [ j ] . corder . full_height		1098909	1					
ANR	1099731	MemberAccess	penum -> pgs -> dev_ht -> components [ j ] . corder		1098909	0					
ANR	1099732	ArrayIndexing	penum -> pgs -> dev_ht -> components [ j ]		1098909	0					
ANR	1099733	PtrMemberAccess	penum -> pgs -> dev_ht -> components		1098909	0					
ANR	1099734	PtrMemberAccess	penum -> pgs -> dev_ht		1098909	0					
ANR	1099735	PtrMemberAccess	penum -> pgs		1098909	0					
ANR	1099736	Identifier	penum		1098909	0					
ANR	1099737	Identifier	pgs		1098909	1					
ANR	1099738	Identifier	dev_ht		1098909	1					
ANR	1099739	Identifier	components		1098909	1					
ANR	1099740	Identifier	j		1098909	1					
ANR	1099741	Identifier	corder		1098909	1					
ANR	1099742	Identifier	full_height		1098909	1					
ANR	1099743	ExpressionStatement	threshold = penum -> pgs -> dev_ht -> components [ j ] . corder . threshold	1002:20:41395:41457	1098909	3	True				
ANR	1099744	AssignmentExpression	threshold = penum -> pgs -> dev_ht -> components [ j ] . corder . threshold		1098909	0		=			
ANR	1099745	Identifier	threshold		1098909	0					
ANR	1099746	MemberAccess	penum -> pgs -> dev_ht -> components [ j ] . corder . threshold		1098909	1					
ANR	1099747	MemberAccess	penum -> pgs -> dev_ht -> components [ j ] . corder		1098909	0					
ANR	1099748	ArrayIndexing	penum -> pgs -> dev_ht -> components [ j ]		1098909	0					
ANR	1099749	PtrMemberAccess	penum -> pgs -> dev_ht -> components		1098909	0					
ANR	1099750	PtrMemberAccess	penum -> pgs -> dev_ht		1098909	0					
ANR	1099751	PtrMemberAccess	penum -> pgs		1098909	0					
ANR	1099752	Identifier	penum		1098909	0					
ANR	1099753	Identifier	pgs		1098909	1					
ANR	1099754	Identifier	dev_ht		1098909	1					
ANR	1099755	Identifier	components		1098909	1					
ANR	1099756	Identifier	j		1098909	1					
ANR	1099757	Identifier	corder		1098909	1					
ANR	1099758	Identifier	threshold		1098909	1					
ANR	1099759	ExpressionStatement	contone_align = penum -> line + offset_contone [ j ] + LAND_BITS * j * contone_stride	1004:20:41538:41656	1098909	4	True				
ANR	1099760	AssignmentExpression	contone_align = penum -> line + offset_contone [ j ] + LAND_BITS * j * contone_stride		1098909	0		=			
ANR	1099761	Identifier	contone_align		1098909	0					
ANR	1099762	AdditiveExpression	penum -> line + offset_contone [ j ] + LAND_BITS * j * contone_stride		1098909	1		+			
ANR	1099763	PtrMemberAccess	penum -> line		1098909	0					
ANR	1099764	Identifier	penum		1098909	0					
ANR	1099765	Identifier	line		1098909	1					
ANR	1099766	AdditiveExpression	offset_contone [ j ] + LAND_BITS * j * contone_stride		1098909	1		+			
ANR	1099767	ArrayIndexing	offset_contone [ j ]		1098909	0					
ANR	1099768	Identifier	offset_contone		1098909	0					
ANR	1099769	Identifier	j		1098909	1					
ANR	1099770	MultiplicativeExpression	LAND_BITS * j * contone_stride		1098909	1		*			
ANR	1099771	Identifier	LAND_BITS		1098909	0					
ANR	1099772	MultiplicativeExpression	j * contone_stride		1098909	1		*			
ANR	1099773	Identifier	j		1098909	0					
ANR	1099774	Identifier	contone_stride		1098909	1					
ANR	1099775	IfStatement	if ( penum -> ht_landscape . offset_set )		1098909	5					
ANR	1099776	Condition	penum -> ht_landscape . offset_set	1006:24:41682:41711	1098909	0	True				
ANR	1099777	MemberAccess	penum -> ht_landscape . offset_set		1098909	0					
ANR	1099778	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1099779	Identifier	penum		1098909	0					
ANR	1099780	Identifier	ht_landscape		1098909	1					
ANR	1099781	Identifier	offset_set		1098909	1					
ANR	1099782	CompoundStatement		155:56:8436:8436	1098909	1					
ANR	1099783	ExpressionStatement	width = offset_bits	1007:24:41740:41759	1098909	0	True				
ANR	1099784	AssignmentExpression	width = offset_bits		1098909	0		=			
ANR	1099785	Identifier	width		1098909	0					
ANR	1099786	Identifier	offset_bits		1098909	1					
ANR	1099787	ElseStatement	else		1098909	0					
ANR	1099788	CompoundStatement		157:27:8510:8510	1098909	0					
ANR	1099789	ExpressionStatement	width = LAND_BITS	1009:24:41814:41831	1098909	0	True				
ANR	1099790	AssignmentExpression	width = LAND_BITS		1098909	0		=			
ANR	1099791	Identifier	width		1098909	0					
ANR	1099792	Identifier	LAND_BITS		1098909	1					
ANR	1099793	IfStatement	if ( penum -> y_extent . x < 0 )		1098909	6					
ANR	1099794	Condition	penum -> y_extent . x < 0	1011:24:41879:41899	1098909	0	True				
ANR	1099795	RelationalExpression	penum -> y_extent . x < 0		1098909	0		<			
ANR	1099796	MemberAccess	penum -> y_extent . x		1098909	0					
ANR	1099797	PtrMemberAccess	penum -> y_extent		1098909	0					
ANR	1099798	Identifier	penum		1098909	0					
ANR	1099799	Identifier	y_extent		1098909	1					
ANR	1099800	Identifier	x		1098909	1					
ANR	1099801	PrimaryExpression	0		1098909	1					
ANR	1099802	CompoundStatement		160:47:8624:8624	1098909	1					
ANR	1099803	ExpressionStatement	dx = penum -> ht_landscape . xstart - width + 1	1012:24:41928:41971	1098909	0	True				
ANR	1099804	AssignmentExpression	dx = penum -> ht_landscape . xstart - width + 1		1098909	0		=			
ANR	1099805	Identifier	dx		1098909	0					
ANR	1099806	AdditiveExpression	penum -> ht_landscape . xstart - width + 1		1098909	1		-			
ANR	1099807	MemberAccess	penum -> ht_landscape . xstart		1098909	0					
ANR	1099808	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1099809	Identifier	penum		1098909	0					
ANR	1099810	Identifier	ht_landscape		1098909	1					
ANR	1099811	Identifier	xstart		1098909	1					
ANR	1099812	AdditiveExpression	width + 1		1098909	1		+			
ANR	1099813	Identifier	width		1098909	0					
ANR	1099814	PrimaryExpression	1		1098909	1					
ANR	1099815	ElseStatement	else		1098909	0					
ANR	1099816	CompoundStatement		162:27:8722:8722	1098909	0					
ANR	1099817	ExpressionStatement	dx = penum -> ht_landscape . xstart	1014:24:42026:42057	1098909	0	True				
ANR	1099818	AssignmentExpression	dx = penum -> ht_landscape . xstart		1098909	0		=			
ANR	1099819	Identifier	dx		1098909	0					
ANR	1099820	MemberAccess	penum -> ht_landscape . xstart		1098909	1					
ANR	1099821	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1099822	Identifier	penum		1098909	0					
ANR	1099823	Identifier	ht_landscape		1098909	1					
ANR	1099824	Identifier	xstart		1098909	1					
ANR	1099825	ExpressionStatement	dx = ( dx + penum -> pgs -> screen_phase [ 0 ] . x ) % thresh_width	1016:20:42101:42157	1098909	7	True				
ANR	1099826	AssignmentExpression	dx = ( dx + penum -> pgs -> screen_phase [ 0 ] . x ) % thresh_width		1098909	0		=			
ANR	1099827	Identifier	dx		1098909	0					
ANR	1099828	MultiplicativeExpression	( dx + penum -> pgs -> screen_phase [ 0 ] . x ) % thresh_width		1098909	1		%			
ANR	1099829	AdditiveExpression	dx + penum -> pgs -> screen_phase [ 0 ] . x		1098909	0		+			
ANR	1099830	Identifier	dx		1098909	0					
ANR	1099831	MemberAccess	penum -> pgs -> screen_phase [ 0 ] . x		1098909	1					
ANR	1099832	ArrayIndexing	penum -> pgs -> screen_phase [ 0 ]		1098909	0					
ANR	1099833	PtrMemberAccess	penum -> pgs -> screen_phase		1098909	0					
ANR	1099834	PtrMemberAccess	penum -> pgs		1098909	0					
ANR	1099835	Identifier	penum		1098909	0					
ANR	1099836	Identifier	pgs		1098909	1					
ANR	1099837	Identifier	screen_phase		1098909	1					
ANR	1099838	PrimaryExpression	0		1098909	1					
ANR	1099839	Identifier	x		1098909	1					
ANR	1099840	Identifier	thresh_width		1098909	1					
ANR	1099841	ExpressionStatement	dy = ( penum -> ht_landscape . y_pos - penum -> pgs -> screen_phase [ 0 ] . y ) % thresh_height	1017:20:42179:42289	1098909	8	True				
ANR	1099842	AssignmentExpression	dy = ( penum -> ht_landscape . y_pos - penum -> pgs -> screen_phase [ 0 ] . y ) % thresh_height		1098909	0		=			
ANR	1099843	Identifier	dy		1098909	0					
ANR	1099844	MultiplicativeExpression	( penum -> ht_landscape . y_pos - penum -> pgs -> screen_phase [ 0 ] . y ) % thresh_height		1098909	1		%			
ANR	1099845	AdditiveExpression	penum -> ht_landscape . y_pos - penum -> pgs -> screen_phase [ 0 ] . y		1098909	0		-			
ANR	1099846	MemberAccess	penum -> ht_landscape . y_pos		1098909	0					
ANR	1099847	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1099848	Identifier	penum		1098909	0					
ANR	1099849	Identifier	ht_landscape		1098909	1					
ANR	1099850	Identifier	y_pos		1098909	1					
ANR	1099851	MemberAccess	penum -> pgs -> screen_phase [ 0 ] . y		1098909	1					
ANR	1099852	ArrayIndexing	penum -> pgs -> screen_phase [ 0 ]		1098909	0					
ANR	1099853	PtrMemberAccess	penum -> pgs -> screen_phase		1098909	0					
ANR	1099854	PtrMemberAccess	penum -> pgs		1098909	0					
ANR	1099855	Identifier	penum		1098909	0					
ANR	1099856	Identifier	pgs		1098909	1					
ANR	1099857	Identifier	screen_phase		1098909	1					
ANR	1099858	PrimaryExpression	0		1098909	1					
ANR	1099859	Identifier	y		1098909	1					
ANR	1099860	Identifier	thresh_height		1098909	1					
ANR	1099861	IfStatement	if ( dy < 0 )		1098909	9					
ANR	1099862	Condition	dy < 0	1019:24:42315:42320	1098909	0	True				
ANR	1099863	RelationalExpression	dy < 0		1098909	0		<			
ANR	1099864	Identifier	dy		1098909	0					
ANR	1099865	PrimaryExpression	0		1098909	1					
ANR	1099866	ExpressionStatement	dy += thresh_height	1020:24:42347:42366	1098909	1	True				
ANR	1099867	AssignmentExpression	dy += thresh_height		1098909	0		+=			
ANR	1099868	Identifier	dy		1098909	0					
ANR	1099869	Identifier	thresh_height		1098909	1					
ANR	1099870	ExpressionStatement	"left_rem_end = min ( dx + LAND_BITS , thresh_width )"	1022:20:42434:42482	1098909	10	True				
ANR	1099871	AssignmentExpression	"left_rem_end = min ( dx + LAND_BITS , thresh_width )"		1098909	0		=			
ANR	1099872	Identifier	left_rem_end		1098909	0					
ANR	1099873	CallExpression	"min ( dx + LAND_BITS , thresh_width )"		1098909	1					
ANR	1099874	Callee	min		1098909	0					
ANR	1099875	Identifier	min		1098909	0					
ANR	1099876	ArgumentList	dx + LAND_BITS		1098909	1					
ANR	1099877	Argument	dx + LAND_BITS		1098909	0					
ANR	1099878	AdditiveExpression	dx + LAND_BITS		1098909	0		+			
ANR	1099879	Identifier	dx		1098909	0					
ANR	1099880	Identifier	LAND_BITS		1098909	1					
ANR	1099881	Argument	thresh_width		1098909	1					
ANR	1099882	Identifier	thresh_width		1098909	0					
ANR	1099883	ExpressionStatement	left_width = left_rem_end - dx	1023:20:42504:42534	1098909	11	True				
ANR	1099884	AssignmentExpression	left_width = left_rem_end - dx		1098909	0		=			
ANR	1099885	Identifier	left_width		1098909	0					
ANR	1099886	AdditiveExpression	left_rem_end - dx		1098909	1		-			
ANR	1099887	Identifier	left_rem_end		1098909	0					
ANR	1099888	Identifier	dx		1098909	1					
ANR	1099889	ExpressionStatement	num_full_tiles = ( LAND_BITS - left_width ) / thresh_width	1025:20:42602:42658	1098909	12	True				
ANR	1099890	AssignmentExpression	num_full_tiles = ( LAND_BITS - left_width ) / thresh_width		1098909	0		=			
ANR	1099891	Identifier	num_full_tiles		1098909	0					
ANR	1099892	MultiplicativeExpression	( LAND_BITS - left_width ) / thresh_width		1098909	1		/			
ANR	1099893	AdditiveExpression	LAND_BITS - left_width		1098909	0		-			
ANR	1099894	Identifier	LAND_BITS		1098909	0					
ANR	1099895	Identifier	left_width		1098909	1					
ANR	1099896	Identifier	thresh_width		1098909	1					
ANR	1099897	ExpressionStatement	right_tile_width = LAND_BITS - num_full_tiles * thresh_width - left_width	1027:20:42725:42822	1098909	13	True				
ANR	1099898	AssignmentExpression	right_tile_width = LAND_BITS - num_full_tiles * thresh_width - left_width		1098909	0		=			
ANR	1099899	Identifier	right_tile_width		1098909	0					
ANR	1099900	AdditiveExpression	LAND_BITS - num_full_tiles * thresh_width - left_width		1098909	1		-			
ANR	1099901	Identifier	LAND_BITS		1098909	0					
ANR	1099902	AdditiveExpression	num_full_tiles * thresh_width - left_width		1098909	1		-			
ANR	1099903	MultiplicativeExpression	num_full_tiles * thresh_width		1098909	0		*			
ANR	1099904	Identifier	num_full_tiles		1098909	0					
ANR	1099905	Identifier	thresh_width		1098909	1					
ANR	1099906	Identifier	left_width		1098909	1					
ANR	1099907	ExpressionStatement	ptr_out = thresh_align	1030:20:42896:42918	1098909	14	True				
ANR	1099908	AssignmentExpression	ptr_out = thresh_align		1098909	0		=			
ANR	1099909	Identifier	ptr_out		1098909	0					
ANR	1099910	Identifier	thresh_align		1098909	1					
ANR	1099911	IfStatement	if ( dest_height <= 2 * thresh_height )		1098909	15					
ANR	1099912	Condition	dest_height <= 2 * thresh_height	1035:24:43213:43244	1098909	0	True				
ANR	1099913	RelationalExpression	dest_height <= 2 * thresh_height		1098909	0		<=			
ANR	1099914	Identifier	dest_height		1098909	0					
ANR	1099915	MultiplicativeExpression	2 * thresh_height		1098909	1		*			
ANR	1099916	PrimaryExpression	2		1098909	0					
ANR	1099917	Identifier	thresh_height		1098909	1					
ANR	1099918	CompoundStatement		184:58:9969:9969	1098909	1					
ANR	1099919	ExpressionStatement	init_tile = dest_height	1036:24:43273:43296	1098909	0	True				
ANR	1099920	AssignmentExpression	init_tile = dest_height		1098909	0		=			
ANR	1099921	Identifier	init_tile		1098909	0					
ANR	1099922	Identifier	dest_height		1098909	1					
ANR	1099923	ExpressionStatement	replicate_tile = false	1037:24:43322:43344	1098909	1	True				
ANR	1099924	AssignmentExpression	replicate_tile = false		1098909	0		=			
ANR	1099925	Identifier	replicate_tile		1098909	0					
ANR	1099926	Identifier	false		1098909	1					
ANR	1099927	ElseStatement	else		1098909	0					
ANR	1099928	CompoundStatement		187:27:10095:10095	1098909	0					
ANR	1099929	ExpressionStatement	init_tile = thresh_height	1039:24:43399:43424	1098909	0	True				
ANR	1099930	AssignmentExpression	init_tile = thresh_height		1098909	0		=			
ANR	1099931	Identifier	init_tile		1098909	0					
ANR	1099932	Identifier	thresh_height		1098909	1					
ANR	1099933	ExpressionStatement	replicate_tile = true	1040:24:43450:43471	1098909	1	True				
ANR	1099934	AssignmentExpression	replicate_tile = true		1098909	0		=			
ANR	1099935	Identifier	replicate_tile		1098909	0					
ANR	1099936	Identifier	true		1098909	1					
ANR	1099937	ForStatement	for ( jj = 0 ; jj < init_tile ; jj ++ )		1098909	16					
ANR	1099938	ForInit	jj = 0 ;	1042:25:43520:43526	1098909	0	True				
ANR	1099939	AssignmentExpression	jj = 0		1098909	0		=			
ANR	1099940	Identifier	jj		1098909	0					
ANR	1099941	PrimaryExpression	0		1098909	1					
ANR	1099942	Condition	jj < init_tile	1042:33:43528:43541	1098909	1	True				
ANR	1099943	RelationalExpression	jj < init_tile		1098909	0		<			
ANR	1099944	Identifier	jj		1098909	0					
ANR	1099945	Identifier	init_tile		1098909	1					
ANR	1099946	PostIncDecOperationExpression	jj ++	1042:49:43544:43547	1098909	2	True				
ANR	1099947	Identifier	jj		1098909	0					
ANR	1099948	IncDec	++		1098909	1					
ANR	1099949	CompoundStatement		191:55:10272:10272	1098909	3					
ANR	1099950	ExpressionStatement	in_row_offset = ( jj + dy ) % thresh_height	1043:24:43576:43617	1098909	0	True				
ANR	1099951	AssignmentExpression	in_row_offset = ( jj + dy ) % thresh_height		1098909	0		=			
ANR	1099952	Identifier	in_row_offset		1098909	0					
ANR	1099953	MultiplicativeExpression	( jj + dy ) % thresh_height		1098909	1		%			
ANR	1099954	AdditiveExpression	jj + dy		1098909	0		+			
ANR	1099955	Identifier	jj		1098909	0					
ANR	1099956	Identifier	dy		1098909	1					
ANR	1099957	Identifier	thresh_height		1098909	1					
ANR	1099958	ExpressionStatement	row_ptr = threshold + in_row_offset * thresh_width	1044:24:43643:43693	1098909	1	True				
ANR	1099959	AssignmentExpression	row_ptr = threshold + in_row_offset * thresh_width		1098909	0		=			
ANR	1099960	Identifier	row_ptr		1098909	0					
ANR	1099961	AdditiveExpression	threshold + in_row_offset * thresh_width		1098909	1		+			
ANR	1099962	Identifier	threshold		1098909	0					
ANR	1099963	MultiplicativeExpression	in_row_offset * thresh_width		1098909	1		*			
ANR	1099964	Identifier	in_row_offset		1098909	0					
ANR	1099965	Identifier	thresh_width		1098909	1					
ANR	1099966	ExpressionStatement	ptr_out_temp = ptr_out	1045:24:43719:43741	1098909	2	True				
ANR	1099967	AssignmentExpression	ptr_out_temp = ptr_out		1098909	0		=			
ANR	1099968	Identifier	ptr_out_temp		1098909	0					
ANR	1099969	Identifier	ptr_out		1098909	1					
ANR	1099970	ExpressionStatement	"memcpy ( ptr_out_temp , row_ptr + dx , left_width )"	1047:24:43807:43853	1098909	3	True				
ANR	1099971	CallExpression	"memcpy ( ptr_out_temp , row_ptr + dx , left_width )"		1098909	0					
ANR	1099972	Callee	memcpy		1098909	0					
ANR	1099973	Identifier	memcpy		1098909	0					
ANR	1099974	ArgumentList	ptr_out_temp		1098909	1					
ANR	1099975	Argument	ptr_out_temp		1098909	0					
ANR	1099976	Identifier	ptr_out_temp		1098909	0					
ANR	1099977	Argument	row_ptr + dx		1098909	1					
ANR	1099978	AdditiveExpression	row_ptr + dx		1098909	0		+			
ANR	1099979	Identifier	row_ptr		1098909	0					
ANR	1099980	Identifier	dx		1098909	1					
ANR	1099981	Argument	left_width		1098909	2					
ANR	1099982	Identifier	left_width		1098909	0					
ANR	1099983	ExpressionStatement	ptr_out_temp += left_width	1048:24:43879:43905	1098909	4	True				
ANR	1099984	AssignmentExpression	ptr_out_temp += left_width		1098909	0		+=			
ANR	1099985	Identifier	ptr_out_temp		1098909	0					
ANR	1099986	Identifier	left_width		1098909	1					
ANR	1099987	ForStatement	for ( ii = 0 ; ii < num_full_tiles ; ii ++ )		1098909	5					
ANR	1099988	ForInit	ii = 0 ;	1050:29:43985:43991	1098909	0	True				
ANR	1099989	AssignmentExpression	ii = 0		1098909	0		=			
ANR	1099990	Identifier	ii		1098909	0					
ANR	1099991	PrimaryExpression	0		1098909	1					
ANR	1099992	Condition	ii < num_full_tiles	1050:37:43993:44011	1098909	1	True				
ANR	1099993	RelationalExpression	ii < num_full_tiles		1098909	0		<			
ANR	1099994	Identifier	ii		1098909	0					
ANR	1099995	Identifier	num_full_tiles		1098909	1					
ANR	1099996	PostIncDecOperationExpression	ii ++	1050:58:44014:44017	1098909	2	True				
ANR	1099997	Identifier	ii		1098909	0					
ANR	1099998	IncDec	++		1098909	1					
ANR	1099999	CompoundStatement		199:64:10742:10742	1098909	3					
ANR	1100000	ExpressionStatement	"memcpy ( ptr_out_temp , row_ptr , thresh_width )"	1051:28:44050:44093	1098909	0	True				
ANR	1100001	CallExpression	"memcpy ( ptr_out_temp , row_ptr , thresh_width )"		1098909	0					
ANR	1100002	Callee	memcpy		1098909	0					
ANR	1100003	Identifier	memcpy		1098909	0					
ANR	1100004	ArgumentList	ptr_out_temp		1098909	1					
ANR	1100005	Argument	ptr_out_temp		1098909	0					
ANR	1100006	Identifier	ptr_out_temp		1098909	0					
ANR	1100007	Argument	row_ptr		1098909	1					
ANR	1100008	Identifier	row_ptr		1098909	0					
ANR	1100009	Argument	thresh_width		1098909	2					
ANR	1100010	Identifier	thresh_width		1098909	0					
ANR	1100011	ExpressionStatement	ptr_out_temp += thresh_width	1052:28:44123:44151	1098909	1	True				
ANR	1100012	AssignmentExpression	ptr_out_temp += thresh_width		1098909	0		+=			
ANR	1100013	Identifier	ptr_out_temp		1098909	0					
ANR	1100014	Identifier	thresh_width		1098909	1					
ANR	1100015	ExpressionStatement	"memcpy ( ptr_out_temp , row_ptr , right_tile_width )"	1055:24:44251:44298	1098909	6	True				
ANR	1100016	CallExpression	"memcpy ( ptr_out_temp , row_ptr , right_tile_width )"		1098909	0					
ANR	1100017	Callee	memcpy		1098909	0					
ANR	1100018	Identifier	memcpy		1098909	0					
ANR	1100019	ArgumentList	ptr_out_temp		1098909	1					
ANR	1100020	Argument	ptr_out_temp		1098909	0					
ANR	1100021	Identifier	ptr_out_temp		1098909	0					
ANR	1100022	Argument	row_ptr		1098909	1					
ANR	1100023	Identifier	row_ptr		1098909	0					
ANR	1100024	Argument	right_tile_width		1098909	2					
ANR	1100025	Identifier	right_tile_width		1098909	0					
ANR	1100026	ExpressionStatement	ptr_out += LAND_BITS	1056:24:44324:44344	1098909	7	True				
ANR	1100027	AssignmentExpression	ptr_out += LAND_BITS		1098909	0		+=			
ANR	1100028	Identifier	ptr_out		1098909	0					
ANR	1100029	Identifier	LAND_BITS		1098909	1					
ANR	1100030	IfStatement	if ( replicate_tile )		1098909	17					
ANR	1100031	Condition	replicate_tile	1058:24:44392:44405	1098909	0	True				
ANR	1100032	Identifier	replicate_tile		1098909	0					
ANR	1100033	CompoundStatement		207:40:11130:11130	1098909	1					
ANR	1100034	ExpressionStatement	num_tiles = ( int ) fastfloor ( ( float ) ( dest_height - thresh_height ) / ( float ) thresh_height )	1060:24:44498:44614	1098909	0	True				
ANR	1100035	AssignmentExpression	num_tiles = ( int ) fastfloor ( ( float ) ( dest_height - thresh_height ) / ( float ) thresh_height )		1098909	0		=			
ANR	1100036	Identifier	num_tiles		1098909	0					
ANR	1100037	CastExpression	( int ) fastfloor ( ( float ) ( dest_height - thresh_height ) / ( float ) thresh_height )		1098909	1					
ANR	1100038	CastTarget	int		1098909	0					
ANR	1100039	CallExpression	fastfloor ( ( float ) ( dest_height - thresh_height ) / ( float ) thresh_height )		1098909	1					
ANR	1100040	Callee	fastfloor		1098909	0					
ANR	1100041	Identifier	fastfloor		1098909	0					
ANR	1100042	ArgumentList	( float ) ( dest_height - thresh_height ) / ( float ) thresh_height		1098909	1					
ANR	1100043	Argument	( float ) ( dest_height - thresh_height ) / ( float ) thresh_height		1098909	0					
ANR	1100044	MultiplicativeExpression	( float ) ( dest_height - thresh_height ) / ( float ) thresh_height		1098909	0		/			
ANR	1100045	CastExpression	( float ) ( dest_height - thresh_height )		1098909	0					
ANR	1100046	CastTarget	float		1098909	0					
ANR	1100047	AdditiveExpression	dest_height - thresh_height		1098909	1		-			
ANR	1100048	Identifier	dest_height		1098909	0					
ANR	1100049	Identifier	thresh_height		1098909	1					
ANR	1100050	CastExpression	( float ) thresh_height		1098909	1					
ANR	1100051	CastTarget	float		1098909	0					
ANR	1100052	Identifier	thresh_height		1098909	1					
ANR	1100053	ExpressionStatement	tile_remainder = dest_height - ( num_tiles + 1 ) * thresh_height	1062:24:44640:44702	1098909	1	True				
ANR	1100054	AssignmentExpression	tile_remainder = dest_height - ( num_tiles + 1 ) * thresh_height		1098909	0		=			
ANR	1100055	Identifier	tile_remainder		1098909	0					
ANR	1100056	AdditiveExpression	dest_height - ( num_tiles + 1 ) * thresh_height		1098909	1		-			
ANR	1100057	Identifier	dest_height		1098909	0					
ANR	1100058	MultiplicativeExpression	( num_tiles + 1 ) * thresh_height		1098909	1		*			
ANR	1100059	AdditiveExpression	num_tiles + 1		1098909	0		+			
ANR	1100060	Identifier	num_tiles		1098909	0					
ANR	1100061	PrimaryExpression	1		1098909	1					
ANR	1100062	Identifier	thresh_height		1098909	1					
ANR	1100063	ForStatement	for ( jj = 0 ; jj < num_tiles ; jj ++ )		1098909	2					
ANR	1100064	ForInit	jj = 0 ;	1063:29:44733:44739	1098909	0	True				
ANR	1100065	AssignmentExpression	jj = 0		1098909	0		=			
ANR	1100066	Identifier	jj		1098909	0					
ANR	1100067	PrimaryExpression	0		1098909	1					
ANR	1100068	Condition	jj < num_tiles	1063:37:44741:44754	1098909	1	True				
ANR	1100069	RelationalExpression	jj < num_tiles		1098909	0		<			
ANR	1100070	Identifier	jj		1098909	0					
ANR	1100071	Identifier	num_tiles		1098909	1					
ANR	1100072	PostIncDecOperationExpression	jj ++	1063:53:44757:44761	1098909	2	True				
ANR	1100073	Identifier	jj		1098909	0					
ANR	1100074	IncDec	++		1098909	1					
ANR	1100075	CompoundStatement		212:60:11486:11486	1098909	3					
ANR	1100076	ExpressionStatement	"memcpy ( ptr_out , thresh_align , LAND_BITS * thresh_height )"	1064:28:44794:44850	1098909	0	True				
ANR	1100077	CallExpression	"memcpy ( ptr_out , thresh_align , LAND_BITS * thresh_height )"		1098909	0					
ANR	1100078	Callee	memcpy		1098909	0					
ANR	1100079	Identifier	memcpy		1098909	0					
ANR	1100080	ArgumentList	ptr_out		1098909	1					
ANR	1100081	Argument	ptr_out		1098909	0					
ANR	1100082	Identifier	ptr_out		1098909	0					
ANR	1100083	Argument	thresh_align		1098909	1					
ANR	1100084	Identifier	thresh_align		1098909	0					
ANR	1100085	Argument	LAND_BITS * thresh_height		1098909	2					
ANR	1100086	MultiplicativeExpression	LAND_BITS * thresh_height		1098909	0		*			
ANR	1100087	Identifier	LAND_BITS		1098909	0					
ANR	1100088	Identifier	thresh_height		1098909	1					
ANR	1100089	ExpressionStatement	ptr_out += LAND_BITS * thresh_height	1065:28:44880:44916	1098909	1	True				
ANR	1100090	AssignmentExpression	ptr_out += LAND_BITS * thresh_height		1098909	0		+=			
ANR	1100091	Identifier	ptr_out		1098909	0					
ANR	1100092	MultiplicativeExpression	LAND_BITS * thresh_height		1098909	1		*			
ANR	1100093	Identifier	LAND_BITS		1098909	0					
ANR	1100094	Identifier	thresh_height		1098909	1					
ANR	1100095	ExpressionStatement	"memcpy ( ptr_out , thresh_align , LAND_BITS * tile_remainder )"	1068:24:45024:45081	1098909	3	True				
ANR	1100096	CallExpression	"memcpy ( ptr_out , thresh_align , LAND_BITS * tile_remainder )"		1098909	0					
ANR	1100097	Callee	memcpy		1098909	0					
ANR	1100098	Identifier	memcpy		1098909	0					
ANR	1100099	ArgumentList	ptr_out		1098909	1					
ANR	1100100	Argument	ptr_out		1098909	0					
ANR	1100101	Identifier	ptr_out		1098909	0					
ANR	1100102	Argument	thresh_align		1098909	1					
ANR	1100103	Identifier	thresh_align		1098909	0					
ANR	1100104	Argument	LAND_BITS * tile_remainder		1098909	2					
ANR	1100105	MultiplicativeExpression	LAND_BITS * tile_remainder		1098909	0		*			
ANR	1100106	Identifier	LAND_BITS		1098909	0					
ANR	1100107	Identifier	tile_remainder		1098909	1					
ANR	1100108	IfStatement	if ( dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE && is_planar_dev )		1098909	18					
ANR	1100109	Condition	dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE && is_planar_dev	1071:24:45185:45282	1098909	0	True				
ANR	1100110	AndExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE && is_planar_dev		1098909	0		&&			
ANR	1100111	EqualityExpression	dev -> color_info . polarity == GX_CINFO_POLARITY_SUBTRACTIVE		1098909	0		==			
ANR	1100112	MemberAccess	dev -> color_info . polarity		1098909	0					
ANR	1100113	PtrMemberAccess	dev -> color_info		1098909	0					
ANR	1100114	Identifier	dev		1098909	0					
ANR	1100115	Identifier	color_info		1098909	1					
ANR	1100116	Identifier	polarity		1098909	1					
ANR	1100117	Identifier	GX_CINFO_POLARITY_SUBTRACTIVE		1098909	1					
ANR	1100118	Identifier	is_planar_dev		1098909	1					
ANR	1100119	CompoundStatement		221:42:12007:12007	1098909	1					
ANR	1100120	ExpressionStatement	"gx_ht_threshold_landscape_sub ( contone_align , thresh_align , & ( penum -> ht_landscape ) , halftone , dest_height )"	1073:24:45311:45460	1098909	0	True				
ANR	1100121	CallExpression	"gx_ht_threshold_landscape_sub ( contone_align , thresh_align , & ( penum -> ht_landscape ) , halftone , dest_height )"		1098909	0					
ANR	1100122	Callee	gx_ht_threshold_landscape_sub		1098909	0					
ANR	1100123	Identifier	gx_ht_threshold_landscape_sub		1098909	0					
ANR	1100124	ArgumentList	contone_align		1098909	1					
ANR	1100125	Argument	contone_align		1098909	0					
ANR	1100126	Identifier	contone_align		1098909	0					
ANR	1100127	Argument	thresh_align		1098909	1					
ANR	1100128	Identifier	thresh_align		1098909	0					
ANR	1100129	Argument	& ( penum -> ht_landscape )		1098909	2					
ANR	1100130	UnaryOperationExpression	& ( penum -> ht_landscape )		1098909	0					
ANR	1100131	UnaryOperator	&		1098909	0					
ANR	1100132	PtrMemberAccess	penum -> ht_landscape		1098909	1					
ANR	1100133	Identifier	penum		1098909	0					
ANR	1100134	Identifier	ht_landscape		1098909	1					
ANR	1100135	Argument	halftone		1098909	3					
ANR	1100136	Identifier	halftone		1098909	0					
ANR	1100137	Argument	dest_height		1098909	4					
ANR	1100138	Identifier	dest_height		1098909	0					
ANR	1100139	ElseStatement	else		1098909	0					
ANR	1100140	CompoundStatement		224:27:12211:12211	1098909	0					
ANR	1100141	ExpressionStatement	"gx_ht_threshold_landscape ( contone_align , thresh_align , & ( penum -> ht_landscape ) , halftone , dest_height )"	1076:24:45515:45660	1098909	0	True				
ANR	1100142	CallExpression	"gx_ht_threshold_landscape ( contone_align , thresh_align , & ( penum -> ht_landscape ) , halftone , dest_height )"		1098909	0					
ANR	1100143	Callee	gx_ht_threshold_landscape		1098909	0					
ANR	1100144	Identifier	gx_ht_threshold_landscape		1098909	0					
ANR	1100145	ArgumentList	contone_align		1098909	1					
ANR	1100146	Argument	contone_align		1098909	0					
ANR	1100147	Identifier	contone_align		1098909	0					
ANR	1100148	Argument	thresh_align		1098909	1					
ANR	1100149	Identifier	thresh_align		1098909	0					
ANR	1100150	Argument	& ( penum -> ht_landscape )		1098909	2					
ANR	1100151	UnaryOperationExpression	& ( penum -> ht_landscape )		1098909	0					
ANR	1100152	UnaryOperator	&		1098909	0					
ANR	1100153	PtrMemberAccess	penum -> ht_landscape		1098909	1					
ANR	1100154	Identifier	penum		1098909	0					
ANR	1100155	Identifier	ht_landscape		1098909	1					
ANR	1100156	Argument	halftone		1098909	3					
ANR	1100157	Identifier	halftone		1098909	0					
ANR	1100158	Argument	dest_height		1098909	4					
ANR	1100159	Identifier	dest_height		1098909	0					
ANR	1100160	IfStatement	if ( width != penum -> ht_landscape . count )		1098909	19					
ANR	1100161	Condition	width != penum -> ht_landscape . count	1081:24:45866:45899	1098909	0	True				
ANR	1100162	EqualityExpression	width != penum -> ht_landscape . count		1098909	0		!=			
ANR	1100163	Identifier	width		1098909	0					
ANR	1100164	MemberAccess	penum -> ht_landscape . count		1098909	1					
ANR	1100165	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100166	Identifier	penum		1098909	0					
ANR	1100167	Identifier	ht_landscape		1098909	1					
ANR	1100168	Identifier	count		1098909	1					
ANR	1100169	CompoundStatement		230:60:12624:12624	1098909	1					
ANR	1100170	ExpressionStatement	"move_landscape_buffer ( & ( penum -> ht_landscape ) , contone_align , dest_height )"	1083:24:45995:46114	1098909	0	True				
ANR	1100171	CallExpression	"move_landscape_buffer ( & ( penum -> ht_landscape ) , contone_align , dest_height )"		1098909	0					
ANR	1100172	Callee	move_landscape_buffer		1098909	0					
ANR	1100173	Identifier	move_landscape_buffer		1098909	0					
ANR	1100174	ArgumentList	& ( penum -> ht_landscape )		1098909	1					
ANR	1100175	Argument	& ( penum -> ht_landscape )		1098909	0					
ANR	1100176	UnaryOperationExpression	& ( penum -> ht_landscape )		1098909	0					
ANR	1100177	UnaryOperator	&		1098909	0					
ANR	1100178	PtrMemberAccess	penum -> ht_landscape		1098909	1					
ANR	1100179	Identifier	penum		1098909	0					
ANR	1100180	Identifier	ht_landscape		1098909	1					
ANR	1100181	Argument	contone_align		1098909	1					
ANR	1100182	Identifier	contone_align		1098909	0					
ANR	1100183	Argument	dest_height		1098909	2					
ANR	1100184	Identifier	dest_height		1098909	0					
ANR	1100185	IfStatement	if ( penum -> ht_landscape . index < 0 )		1098909	1					
ANR	1100186	Condition	penum -> ht_landscape . index < 0	1088:20:46220:46248	1098909	0	True				
ANR	1100187	RelationalExpression	penum -> ht_landscape . index < 0		1098909	0		<			
ANR	1100188	MemberAccess	penum -> ht_landscape . index		1098909	0					
ANR	1100189	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100190	Identifier	penum		1098909	0					
ANR	1100191	Identifier	ht_landscape		1098909	1					
ANR	1100192	Identifier	index		1098909	1					
ANR	1100193	PrimaryExpression	0		1098909	1					
ANR	1100194	CompoundStatement		237:51:12973:12973	1098909	1					
ANR	1100195	IfStatement	if ( ! is_planar_dev )		1098909	0					
ANR	1100196	Condition	! is_planar_dev	1089:24:46277:46290	1098909	0	True				
ANR	1100197	UnaryOperationExpression	! is_planar_dev		1098909	0					
ANR	1100198	UnaryOperator	!		1098909	0					
ANR	1100199	Identifier	is_planar_dev		1098909	1					
ANR	1100200	CompoundStatement		238:40:13015:13015	1098909	1					
ANR	1100201	ExpressionStatement	"( * dev_proc ( dev , copy_mono ) ) ( dev , penum -> ht_buffer , 0 , LAND_BITS >> 3 , gx_no_bitmap_id , penum -> ht_landscape . xstart - width + 1 , penum -> ht_landscape . y_pos , width , dest_height , dev_white , dev_black )"	1090:24:46319:46752	1098909	0	True				
ANR	1100202	CallExpression	"( * dev_proc ( dev , copy_mono ) ) ( dev , penum -> ht_buffer , 0 , LAND_BITS >> 3 , gx_no_bitmap_id , penum -> ht_landscape . xstart - width + 1 , penum -> ht_landscape . y_pos , width , dest_height , dev_white , dev_black )"		1098909	0					
ANR	1100203	Callee	"* dev_proc ( dev , copy_mono )"		1098909	0					
ANR	1100204	UnaryOperationExpression	"* dev_proc ( dev , copy_mono )"		1098909	0					
ANR	1100205	UnaryOperator	*		1098909	0					
ANR	1100206	CallExpression	"dev_proc ( dev , copy_mono )"		1098909	1					
ANR	1100207	Callee	dev_proc		1098909	0					
ANR	1100208	Identifier	dev_proc		1098909	0					
ANR	1100209	ArgumentList	dev		1098909	1					
ANR	1100210	Argument	dev		1098909	0					
ANR	1100211	Identifier	dev		1098909	0					
ANR	1100212	Argument	copy_mono		1098909	1					
ANR	1100213	Identifier	copy_mono		1098909	0					
ANR	1100214	ArgumentList	dev		1098909	1					
ANR	1100215	Argument	dev		1098909	0					
ANR	1100216	Identifier	dev		1098909	0					
ANR	1100217	Argument	penum -> ht_buffer		1098909	1					
ANR	1100218	PtrMemberAccess	penum -> ht_buffer		1098909	0					
ANR	1100219	Identifier	penum		1098909	0					
ANR	1100220	Identifier	ht_buffer		1098909	1					
ANR	1100221	Argument	0		1098909	2					
ANR	1100222	PrimaryExpression	0		1098909	0					
ANR	1100223	Argument	LAND_BITS >> 3		1098909	3					
ANR	1100224	ShiftExpression	LAND_BITS >> 3		1098909	0		>>			
ANR	1100225	Identifier	LAND_BITS		1098909	0					
ANR	1100226	PrimaryExpression	3		1098909	1					
ANR	1100227	Argument	gx_no_bitmap_id		1098909	4					
ANR	1100228	Identifier	gx_no_bitmap_id		1098909	0					
ANR	1100229	Argument	penum -> ht_landscape . xstart - width + 1		1098909	5					
ANR	1100230	AdditiveExpression	penum -> ht_landscape . xstart - width + 1		1098909	0		-			
ANR	1100231	MemberAccess	penum -> ht_landscape . xstart		1098909	0					
ANR	1100232	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100233	Identifier	penum		1098909	0					
ANR	1100234	Identifier	ht_landscape		1098909	1					
ANR	1100235	Identifier	xstart		1098909	1					
ANR	1100236	AdditiveExpression	width + 1		1098909	1		+			
ANR	1100237	Identifier	width		1098909	0					
ANR	1100238	PrimaryExpression	1		1098909	1					
ANR	1100239	Argument	penum -> ht_landscape . y_pos		1098909	6					
ANR	1100240	MemberAccess	penum -> ht_landscape . y_pos		1098909	0					
ANR	1100241	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100242	Identifier	penum		1098909	0					
ANR	1100243	Identifier	ht_landscape		1098909	1					
ANR	1100244	Identifier	y_pos		1098909	1					
ANR	1100245	Argument	width		1098909	7					
ANR	1100246	Identifier	width		1098909	0					
ANR	1100247	Argument	dest_height		1098909	8					
ANR	1100248	Identifier	dest_height		1098909	0					
ANR	1100249	Argument	dev_white		1098909	9					
ANR	1100250	Identifier	dev_white		1098909	0					
ANR	1100251	Argument	dev_black		1098909	10					
ANR	1100252	Identifier	dev_black		1098909	0					
ANR	1100253	ElseStatement	else		1098909	0					
ANR	1100254	CompoundStatement		246:27:13503:13503	1098909	0					
ANR	1100255	ExpressionStatement	"( * dev_proc ( dev , copy_planes ) ) ( dev , penum -> ht_buffer , 0 , LAND_BITS >> 3 , gx_no_bitmap_id , penum -> ht_landscape . xstart - width + 1 , penum -> ht_landscape . y_pos , width , dest_height , penum -> ht_plane_height )"	1098:24:46807:47244	1098909	0	True				
ANR	1100256	CallExpression	"( * dev_proc ( dev , copy_planes ) ) ( dev , penum -> ht_buffer , 0 , LAND_BITS >> 3 , gx_no_bitmap_id , penum -> ht_landscape . xstart - width + 1 , penum -> ht_landscape . y_pos , width , dest_height , penum -> ht_plane_height )"		1098909	0					
ANR	1100257	Callee	"* dev_proc ( dev , copy_planes )"		1098909	0					
ANR	1100258	UnaryOperationExpression	"* dev_proc ( dev , copy_planes )"		1098909	0					
ANR	1100259	UnaryOperator	*		1098909	0					
ANR	1100260	CallExpression	"dev_proc ( dev , copy_planes )"		1098909	1					
ANR	1100261	Callee	dev_proc		1098909	0					
ANR	1100262	Identifier	dev_proc		1098909	0					
ANR	1100263	ArgumentList	dev		1098909	1					
ANR	1100264	Argument	dev		1098909	0					
ANR	1100265	Identifier	dev		1098909	0					
ANR	1100266	Argument	copy_planes		1098909	1					
ANR	1100267	Identifier	copy_planes		1098909	0					
ANR	1100268	ArgumentList	dev		1098909	1					
ANR	1100269	Argument	dev		1098909	0					
ANR	1100270	Identifier	dev		1098909	0					
ANR	1100271	Argument	penum -> ht_buffer		1098909	1					
ANR	1100272	PtrMemberAccess	penum -> ht_buffer		1098909	0					
ANR	1100273	Identifier	penum		1098909	0					
ANR	1100274	Identifier	ht_buffer		1098909	1					
ANR	1100275	Argument	0		1098909	2					
ANR	1100276	PrimaryExpression	0		1098909	0					
ANR	1100277	Argument	LAND_BITS >> 3		1098909	3					
ANR	1100278	ShiftExpression	LAND_BITS >> 3		1098909	0		>>			
ANR	1100279	Identifier	LAND_BITS		1098909	0					
ANR	1100280	PrimaryExpression	3		1098909	1					
ANR	1100281	Argument	gx_no_bitmap_id		1098909	4					
ANR	1100282	Identifier	gx_no_bitmap_id		1098909	0					
ANR	1100283	Argument	penum -> ht_landscape . xstart - width + 1		1098909	5					
ANR	1100284	AdditiveExpression	penum -> ht_landscape . xstart - width + 1		1098909	0		-			
ANR	1100285	MemberAccess	penum -> ht_landscape . xstart		1098909	0					
ANR	1100286	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100287	Identifier	penum		1098909	0					
ANR	1100288	Identifier	ht_landscape		1098909	1					
ANR	1100289	Identifier	xstart		1098909	1					
ANR	1100290	AdditiveExpression	width + 1		1098909	1		+			
ANR	1100291	Identifier	width		1098909	0					
ANR	1100292	PrimaryExpression	1		1098909	1					
ANR	1100293	Argument	penum -> ht_landscape . y_pos		1098909	6					
ANR	1100294	MemberAccess	penum -> ht_landscape . y_pos		1098909	0					
ANR	1100295	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100296	Identifier	penum		1098909	0					
ANR	1100297	Identifier	ht_landscape		1098909	1					
ANR	1100298	Identifier	y_pos		1098909	1					
ANR	1100299	Argument	width		1098909	7					
ANR	1100300	Identifier	width		1098909	0					
ANR	1100301	Argument	dest_height		1098909	8					
ANR	1100302	Identifier	dest_height		1098909	0					
ANR	1100303	Argument	penum -> ht_plane_height		1098909	9					
ANR	1100304	PtrMemberAccess	penum -> ht_plane_height		1098909	0					
ANR	1100305	Identifier	penum		1098909	0					
ANR	1100306	Identifier	ht_plane_height		1098909	1					
ANR	1100307	ElseStatement	else		1098909	0					
ANR	1100308	CompoundStatement		255:23:14013:14013	1098909	0					
ANR	1100309	IfStatement	if ( ! is_planar_dev )		1098909	0					
ANR	1100310	Condition	! is_planar_dev	1107:24:47317:47330	1098909	0	True				
ANR	1100311	UnaryOperationExpression	! is_planar_dev		1098909	0					
ANR	1100312	UnaryOperator	!		1098909	0					
ANR	1100313	Identifier	is_planar_dev		1098909	1					
ANR	1100314	CompoundStatement		256:40:14055:14055	1098909	1					
ANR	1100315	ExpressionStatement	"( * dev_proc ( dev , copy_mono ) ) ( dev , penum -> ht_buffer , 0 , LAND_BITS >> 3 , gx_no_bitmap_id , penum -> ht_landscape . xstart , penum -> ht_landscape . y_pos , width , dest_height , dev_white , dev_black )"	1108:24:47359:47806	1098909	0	True				
ANR	1100316	CallExpression	"( * dev_proc ( dev , copy_mono ) ) ( dev , penum -> ht_buffer , 0 , LAND_BITS >> 3 , gx_no_bitmap_id , penum -> ht_landscape . xstart , penum -> ht_landscape . y_pos , width , dest_height , dev_white , dev_black )"		1098909	0					
ANR	1100317	Callee	"* dev_proc ( dev , copy_mono )"		1098909	0					
ANR	1100318	UnaryOperationExpression	"* dev_proc ( dev , copy_mono )"		1098909	0					
ANR	1100319	UnaryOperator	*		1098909	0					
ANR	1100320	CallExpression	"dev_proc ( dev , copy_mono )"		1098909	1					
ANR	1100321	Callee	dev_proc		1098909	0					
ANR	1100322	Identifier	dev_proc		1098909	0					
ANR	1100323	ArgumentList	dev		1098909	1					
ANR	1100324	Argument	dev		1098909	0					
ANR	1100325	Identifier	dev		1098909	0					
ANR	1100326	Argument	copy_mono		1098909	1					
ANR	1100327	Identifier	copy_mono		1098909	0					
ANR	1100328	ArgumentList	dev		1098909	1					
ANR	1100329	Argument	dev		1098909	0					
ANR	1100330	Identifier	dev		1098909	0					
ANR	1100331	Argument	penum -> ht_buffer		1098909	1					
ANR	1100332	PtrMemberAccess	penum -> ht_buffer		1098909	0					
ANR	1100333	Identifier	penum		1098909	0					
ANR	1100334	Identifier	ht_buffer		1098909	1					
ANR	1100335	Argument	0		1098909	2					
ANR	1100336	PrimaryExpression	0		1098909	0					
ANR	1100337	Argument	LAND_BITS >> 3		1098909	3					
ANR	1100338	ShiftExpression	LAND_BITS >> 3		1098909	0		>>			
ANR	1100339	Identifier	LAND_BITS		1098909	0					
ANR	1100340	PrimaryExpression	3		1098909	1					
ANR	1100341	Argument	gx_no_bitmap_id		1098909	4					
ANR	1100342	Identifier	gx_no_bitmap_id		1098909	0					
ANR	1100343	Argument	penum -> ht_landscape . xstart		1098909	5					
ANR	1100344	MemberAccess	penum -> ht_landscape . xstart		1098909	0					
ANR	1100345	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100346	Identifier	penum		1098909	0					
ANR	1100347	Identifier	ht_landscape		1098909	1					
ANR	1100348	Identifier	xstart		1098909	1					
ANR	1100349	Argument	penum -> ht_landscape . y_pos		1098909	6					
ANR	1100350	MemberAccess	penum -> ht_landscape . y_pos		1098909	0					
ANR	1100351	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100352	Identifier	penum		1098909	0					
ANR	1100353	Identifier	ht_landscape		1098909	1					
ANR	1100354	Identifier	y_pos		1098909	1					
ANR	1100355	Argument	width		1098909	7					
ANR	1100356	Identifier	width		1098909	0					
ANR	1100357	Argument	dest_height		1098909	8					
ANR	1100358	Identifier	dest_height		1098909	0					
ANR	1100359	Argument	dev_white		1098909	9					
ANR	1100360	Identifier	dev_white		1098909	0					
ANR	1100361	Argument	dev_black		1098909	10					
ANR	1100362	Identifier	dev_black		1098909	0					
ANR	1100363	ElseStatement	else		1098909	0					
ANR	1100364	CompoundStatement		263:27:14557:14557	1098909	0					
ANR	1100365	ExpressionStatement	"( * dev_proc ( dev , copy_planes ) ) ( dev , penum -> ht_buffer , 0 , LAND_BITS >> 3 , gx_no_bitmap_id , penum -> ht_landscape . xstart , penum -> ht_landscape . y_pos , width , dest_height , penum -> ht_plane_height )"	1115:24:47861:48312	1098909	0	True				
ANR	1100366	CallExpression	"( * dev_proc ( dev , copy_planes ) ) ( dev , penum -> ht_buffer , 0 , LAND_BITS >> 3 , gx_no_bitmap_id , penum -> ht_landscape . xstart , penum -> ht_landscape . y_pos , width , dest_height , penum -> ht_plane_height )"		1098909	0					
ANR	1100367	Callee	"* dev_proc ( dev , copy_planes )"		1098909	0					
ANR	1100368	UnaryOperationExpression	"* dev_proc ( dev , copy_planes )"		1098909	0					
ANR	1100369	UnaryOperator	*		1098909	0					
ANR	1100370	CallExpression	"dev_proc ( dev , copy_planes )"		1098909	1					
ANR	1100371	Callee	dev_proc		1098909	0					
ANR	1100372	Identifier	dev_proc		1098909	0					
ANR	1100373	ArgumentList	dev		1098909	1					
ANR	1100374	Argument	dev		1098909	0					
ANR	1100375	Identifier	dev		1098909	0					
ANR	1100376	Argument	copy_planes		1098909	1					
ANR	1100377	Identifier	copy_planes		1098909	0					
ANR	1100378	ArgumentList	dev		1098909	1					
ANR	1100379	Argument	dev		1098909	0					
ANR	1100380	Identifier	dev		1098909	0					
ANR	1100381	Argument	penum -> ht_buffer		1098909	1					
ANR	1100382	PtrMemberAccess	penum -> ht_buffer		1098909	0					
ANR	1100383	Identifier	penum		1098909	0					
ANR	1100384	Identifier	ht_buffer		1098909	1					
ANR	1100385	Argument	0		1098909	2					
ANR	1100386	PrimaryExpression	0		1098909	0					
ANR	1100387	Argument	LAND_BITS >> 3		1098909	3					
ANR	1100388	ShiftExpression	LAND_BITS >> 3		1098909	0		>>			
ANR	1100389	Identifier	LAND_BITS		1098909	0					
ANR	1100390	PrimaryExpression	3		1098909	1					
ANR	1100391	Argument	gx_no_bitmap_id		1098909	4					
ANR	1100392	Identifier	gx_no_bitmap_id		1098909	0					
ANR	1100393	Argument	penum -> ht_landscape . xstart		1098909	5					
ANR	1100394	MemberAccess	penum -> ht_landscape . xstart		1098909	0					
ANR	1100395	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100396	Identifier	penum		1098909	0					
ANR	1100397	Identifier	ht_landscape		1098909	1					
ANR	1100398	Identifier	xstart		1098909	1					
ANR	1100399	Argument	penum -> ht_landscape . y_pos		1098909	6					
ANR	1100400	MemberAccess	penum -> ht_landscape . y_pos		1098909	0					
ANR	1100401	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100402	Identifier	penum		1098909	0					
ANR	1100403	Identifier	ht_landscape		1098909	1					
ANR	1100404	Identifier	y_pos		1098909	1					
ANR	1100405	Argument	width		1098909	7					
ANR	1100406	Identifier	width		1098909	0					
ANR	1100407	Argument	dest_height		1098909	8					
ANR	1100408	Identifier	dest_height		1098909	0					
ANR	1100409	Argument	penum -> ht_plane_height		1098909	9					
ANR	1100410	PtrMemberAccess	penum -> ht_plane_height		1098909	0					
ANR	1100411	Identifier	penum		1098909	0					
ANR	1100412	Identifier	ht_plane_height		1098909	1					
ANR	1100413	ExpressionStatement	penum -> ht_landscape . offset_set = false	1123:16:48370:48408	1098909	2	True				
ANR	1100414	AssignmentExpression	penum -> ht_landscape . offset_set = false		1098909	0		=			
ANR	1100415	MemberAccess	penum -> ht_landscape . offset_set		1098909	0					
ANR	1100416	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100417	Identifier	penum		1098909	0					
ANR	1100418	Identifier	ht_landscape		1098909	1					
ANR	1100419	Identifier	offset_set		1098909	1					
ANR	1100420	Identifier	false		1098909	1					
ANR	1100421	IfStatement	if ( width != penum -> ht_landscape . count )		1098909	3					
ANR	1100422	Condition	width != penum -> ht_landscape . count	1124:20:48430:48463	1098909	0	True				
ANR	1100423	EqualityExpression	width != penum -> ht_landscape . count		1098909	0		!=			
ANR	1100424	Identifier	width		1098909	0					
ANR	1100425	MemberAccess	penum -> ht_landscape . count		1098909	1					
ANR	1100426	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100427	Identifier	penum		1098909	0					
ANR	1100428	Identifier	ht_landscape		1098909	1					
ANR	1100429	Identifier	count		1098909	1					
ANR	1100430	CompoundStatement		273:56:15188:15188	1098909	1					
ANR	1100431	ExpressionStatement	"reset_landscape_buffer ( & ( penum -> ht_landscape ) , contone_align , dest_height , width )"	1125:20:48488:48655	1098909	0	True				
ANR	1100432	CallExpression	"reset_landscape_buffer ( & ( penum -> ht_landscape ) , contone_align , dest_height , width )"		1098909	0					
ANR	1100433	Callee	reset_landscape_buffer		1098909	0					
ANR	1100434	Identifier	reset_landscape_buffer		1098909	0					
ANR	1100435	ArgumentList	& ( penum -> ht_landscape )		1098909	1					
ANR	1100436	Argument	& ( penum -> ht_landscape )		1098909	0					
ANR	1100437	UnaryOperationExpression	& ( penum -> ht_landscape )		1098909	0					
ANR	1100438	UnaryOperator	&		1098909	0					
ANR	1100439	PtrMemberAccess	penum -> ht_landscape		1098909	1					
ANR	1100440	Identifier	penum		1098909	0					
ANR	1100441	Identifier	ht_landscape		1098909	1					
ANR	1100442	Argument	contone_align		1098909	1					
ANR	1100443	Identifier	contone_align		1098909	0					
ANR	1100444	Argument	dest_height		1098909	2					
ANR	1100445	Identifier	dest_height		1098909	0					
ANR	1100446	Argument	width		1098909	3					
ANR	1100447	Identifier	width		1098909	0					
ANR	1100448	ElseStatement	else		1098909	0					
ANR	1100449	CompoundStatement		277:23:15402:15402	1098909	0					
ANR	1100450	ExpressionStatement	penum -> ht_landscape . count = 0	1130:20:48751:48780	1098909	0	True				
ANR	1100451	AssignmentExpression	penum -> ht_landscape . count = 0		1098909	0		=			
ANR	1100452	MemberAccess	penum -> ht_landscape . count		1098909	0					
ANR	1100453	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100454	Identifier	penum		1098909	0					
ANR	1100455	Identifier	ht_landscape		1098909	1					
ANR	1100456	Identifier	count		1098909	1					
ANR	1100457	PrimaryExpression	0		1098909	1					
ANR	1100458	IfStatement	if ( penum -> ht_landscape . index < 0 )		1098909	1					
ANR	1100459	Condition	penum -> ht_landscape . index < 0	1131:24:48806:48834	1098909	0	True				
ANR	1100460	RelationalExpression	penum -> ht_landscape . index < 0		1098909	0		<			
ANR	1100461	MemberAccess	penum -> ht_landscape . index		1098909	0					
ANR	1100462	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100463	Identifier	penum		1098909	0					
ANR	1100464	Identifier	ht_landscape		1098909	1					
ANR	1100465	Identifier	index		1098909	1					
ANR	1100466	PrimaryExpression	0		1098909	1					
ANR	1100467	CompoundStatement		280:55:15559:15559	1098909	1					
ANR	1100468	ExpressionStatement	penum -> ht_landscape . curr_pos = LAND_BITS - 1	1133:24:48913:48955	1098909	0	True				
ANR	1100469	AssignmentExpression	penum -> ht_landscape . curr_pos = LAND_BITS - 1		1098909	0		=			
ANR	1100470	MemberAccess	penum -> ht_landscape . curr_pos		1098909	0					
ANR	1100471	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100472	Identifier	penum		1098909	0					
ANR	1100473	Identifier	ht_landscape		1098909	1					
ANR	1100474	Identifier	curr_pos		1098909	1					
ANR	1100475	AdditiveExpression	LAND_BITS - 1		1098909	1		-			
ANR	1100476	Identifier	LAND_BITS		1098909	0					
ANR	1100477	PrimaryExpression	1		1098909	1					
ANR	1100478	ElseStatement	else		1098909	0					
ANR	1100479	CompoundStatement		283:27:15706:15706	1098909	0					
ANR	1100480	ExpressionStatement	penum -> ht_landscape . curr_pos = 0	1136:24:49060:49092	1098909	0	True				
ANR	1100481	AssignmentExpression	penum -> ht_landscape . curr_pos = 0		1098909	0		=			
ANR	1100482	MemberAccess	penum -> ht_landscape . curr_pos		1098909	0					
ANR	1100483	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100484	Identifier	penum		1098909	0					
ANR	1100485	Identifier	ht_landscape		1098909	1					
ANR	1100486	Identifier	curr_pos		1098909	1					
ANR	1100487	PrimaryExpression	0		1098909	1					
ANR	1100488	ExpressionStatement	penum -> ht_landscape . num_contones = 0	1138:20:49136:49172	1098909	2	True				
ANR	1100489	AssignmentExpression	penum -> ht_landscape . num_contones = 0		1098909	0		=			
ANR	1100490	MemberAccess	penum -> ht_landscape . num_contones		1098909	0					
ANR	1100491	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100492	Identifier	penum		1098909	0					
ANR	1100493	Identifier	ht_landscape		1098909	1					
ANR	1100494	Identifier	num_contones		1098909	1					
ANR	1100495	PrimaryExpression	0		1098909	1					
ANR	1100496	ExpressionStatement	"memset ( & ( penum -> ht_landscape . widths [ 0 ] ) , 0 , sizeof ( int ) * LAND_BITS )"	1139:20:49194:49260	1098909	3	True				
ANR	1100497	CallExpression	"memset ( & ( penum -> ht_landscape . widths [ 0 ] ) , 0 , sizeof ( int ) * LAND_BITS )"		1098909	0					
ANR	1100498	Callee	memset		1098909	0					
ANR	1100499	Identifier	memset		1098909	0					
ANR	1100500	ArgumentList	& ( penum -> ht_landscape . widths [ 0 ] )		1098909	1					
ANR	1100501	Argument	& ( penum -> ht_landscape . widths [ 0 ] )		1098909	0					
ANR	1100502	UnaryOperationExpression	& ( penum -> ht_landscape . widths [ 0 ] )		1098909	0					
ANR	1100503	UnaryOperator	&		1098909	0					
ANR	1100504	ArrayIndexing	penum -> ht_landscape . widths [ 0 ]		1098909	1					
ANR	1100505	MemberAccess	penum -> ht_landscape . widths		1098909	0					
ANR	1100506	PtrMemberAccess	penum -> ht_landscape		1098909	0					
ANR	1100507	Identifier	penum		1098909	0					
ANR	1100508	Identifier	ht_landscape		1098909	1					
ANR	1100509	Identifier	widths		1098909	1					
ANR	1100510	PrimaryExpression	0		1098909	1					
ANR	1100511	Argument	0		1098909	1					
ANR	1100512	PrimaryExpression	0		1098909	0					
ANR	1100513	Argument	sizeof ( int ) * LAND_BITS		1098909	2					
ANR	1100514	MultiplicativeExpression	sizeof ( int ) * LAND_BITS		1098909	0		*			
ANR	1100515	SizeofExpression	sizeof ( int )		1098909	0					
ANR	1100516	Sizeof	sizeof		1098909	0					
ANR	1100517	SizeofOperand	int		1098909	1					
ANR	1100518	Identifier	LAND_BITS		1098909	1					
ANR	1100519	BreakStatement	break ;	1142:12:49306:49311	1098909	9	True				
ANR	1100520	Label	default :	1143:8:49321:49328	1098909	10	True				
ANR	1100521	Identifier	default		1098909	0					
ANR	1100522	ReturnStatement	"return gs_rethrow ( - 1 , ""Invalid orientation for thresholding"" ) ;"	1144:12:49342:49403	1098909	11	True				
ANR	1100523	CallExpression	"gs_rethrow ( - 1 , ""Invalid orientation for thresholding"" )"		1098909	0					
ANR	1100524	Callee	gs_rethrow		1098909	0					
ANR	1100525	Identifier	gs_rethrow		1098909	0					
ANR	1100526	ArgumentList	- 1		1098909	1					
ANR	1100527	Argument	- 1		1098909	0					
ANR	1100528	UnaryOperationExpression	- 1		1098909	0					
ANR	1100529	UnaryOperator	-		1098909	0					
ANR	1100530	PrimaryExpression	1		1098909	1					
ANR	1100531	Argument	"""Invalid orientation for thresholding"""		1098909	1					
ANR	1100532	PrimaryExpression	"""Invalid orientation for thresholding"""		1098909	0					
ANR	1100533	ReturnStatement	return 0 ;	1146:4:49415:49423	1098909	22	True				
ANR	1100534	PrimaryExpression	0		1098909	0					
ANR	1100535	ReturnType	int		1098909	1					
ANR	1100536	Identifier	gxht_thresh_planes		1098909	2					
ANR	1100537	ParameterList	"gx_image_enum * penum , fixed xrun , int dest_width , int dest_height , byte * thresh_align , gx_device * dev , int offset_contone [ ] , int contone_stride"		1098909	3					
ANR	1100538	Parameter	gx_image_enum * penum	848:19:33074:33093	1098909	0	True				
ANR	1100539	ParameterType	gx_image_enum *		1098909	0					
ANR	1100540	Identifier	penum		1098909	1					
ANR	1100541	Parameter	fixed xrun	848:41:33096:33105	1098909	1	True				
ANR	1100542	ParameterType	fixed		1098909	0					
ANR	1100543	Identifier	xrun		1098909	1					
ANR	1100544	Parameter	int dest_width	849:19:33127:33140	1098909	2	True				
ANR	1100545	ParameterType	int		1098909	0					
ANR	1100546	Identifier	dest_width		1098909	1					
ANR	1100547	Parameter	int dest_height	849:35:33143:33157	1098909	3	True				
ANR	1100548	ParameterType	int		1098909	0					
ANR	1100549	Identifier	dest_height		1098909	1					
ANR	1100550	Parameter	byte * thresh_align	850:19:33179:33196	1098909	4	True				
ANR	1100551	ParameterType	byte *		1098909	0					
ANR	1100552	Identifier	thresh_align		1098909	1					
ANR	1100553	Parameter	gx_device * dev	850:39:33199:33213	1098909	5	True				
ANR	1100554	ParameterType	gx_device *		1098909	0					
ANR	1100555	Identifier	dev		1098909	1					
ANR	1100556	Parameter	int offset_contone [ ]	850:56:33216:33235	1098909	6	True				
ANR	1100557	ParameterType	int [ ]		1098909	0					
ANR	1100558	Identifier	offset_contone		1098909	1					
ANR	1100559	Parameter	int contone_stride	851:19:33257:33274	1098909	7	True				
ANR	1100560	ParameterType	int		1098909	0					
ANR	1100561	Identifier	contone_stride		1098909	1					
ANR	1100562	CFGEntryNode	ENTRY		1098909		True				
ANR	1100563	CFGExitNode	EXIT		1098909		True				
ANR	1100564	Symbol	penum -> y_extent		1098909						
ANR	1100565	Symbol	is_planar_dev		1098909						
ANR	1100566	Symbol	penum -> ht_landscape . offset_set		1098909						
ANR	1100567	Symbol	gs_rethrow		1098909						
ANR	1100568	Symbol	penum -> wci		1098909						
ANR	1100569	Symbol	dev		1098909						
ANR	1100570	Symbol	* * * * penum		1098909						
ANR	1100571	Symbol	penum -> ht_landscape . index		1098909						
ANR	1100572	Symbol	penum -> pgs -> dev_ht -> components [ j ] . corder		1098909						
ANR	1100573	Symbol	* * penum		1098909						
ANR	1100574	Symbol	ii		1098909						
ANR	1100575	Symbol	spp_out		1098909						
ANR	1100576	Symbol	num_full_tiles		1098909						
ANR	1100577	Symbol	dev -> color_info . num_components		1098909						
ANR	1100578	Symbol	penum -> ht_offset_bits		1098909						
ANR	1100579	Symbol	penum		1098909						
ANR	1100580	Symbol	xrun		1098909						
ANR	1100581	Symbol	curr_width		1098909						
ANR	1100582	Symbol	dev_black		1098909						
ANR	1100583	Symbol	* * penum -> pgs -> dev_ht		1098909						
ANR	1100584	Symbol	penum -> y_extent . x		1098909						
ANR	1100585	Symbol	thresh_align		1098909						
ANR	1100586	Symbol	threshold_inverted		1098909						
ANR	1100587	Symbol	right_tile_width		1098909						
ANR	1100588	Symbol	penum -> pgs -> dev_ht		1098909						
ANR	1100589	Symbol	offset_bits		1098909						
ANR	1100590	Symbol	* * penum -> pgs		1098909						
ANR	1100591	Symbol	penum -> ht_landscape . num_contones		1098909						
ANR	1100592	Symbol	jj		1098909						
ANR	1100593	Symbol	* dev		1098909						
ANR	1100594	Symbol	* penum		1098909						
ANR	1100595	Symbol	* * * penum		1098909						
ANR	1100596	Symbol	* penum -> pgs		1098909						
ANR	1100597	Symbol	penum -> ht_landscape . curr_pos		1098909						
ANR	1100598	Symbol	dev -> color_info		1098909						
ANR	1100599	Symbol	fixed2int_var_rounded		1098909						
ANR	1100600	Symbol	penum -> pgs		1098909						
ANR	1100601	Symbol	min		1098909						
ANR	1100602	Symbol	tile_remainder		1098909						
ANR	1100603	Symbol	in_row_offset		1098909						
ANR	1100604	Symbol	* penum -> pgs -> dev_ht -> components		1098909						
ANR	1100605	Symbol	penum -> ht_plane_height		1098909						
ANR	1100606	Symbol	y_pos		1098909						
ANR	1100607	Symbol	* penum -> pgs -> dev_ht		1098909						
ANR	1100608	Symbol	contone_stride		1098909						
ANR	1100609	Symbol	ptr_out		1098909						
ANR	1100610	Symbol	gx_device_black		1098909						
ANR	1100611	Symbol	posture		1098909						
ANR	1100612	Symbol	penum -> ht_landscape . y_pos		1098909						
ANR	1100613	Symbol	& penum -> ht_landscape		1098909						
ANR	1100614	Symbol	j		1098909						
ANR	1100615	Symbol	k		1098909						
ANR	1100616	Symbol	offset_contone		1098909						
ANR	1100617	Symbol	left_width		1098909						
ANR	1100618	Symbol	* penum -> pgs -> screen_phase		1098909						
ANR	1100619	Symbol	penum -> posture		1098909						
ANR	1100620	Symbol	left_rem_end		1098909						
ANR	1100621	Symbol	dithered_stride		1098909						
ANR	1100622	Symbol	width		1098909						
ANR	1100623	Symbol	penum -> pgs -> dev_ht -> components [ j ] . corder . full_height		1098909						
ANR	1100624	Symbol	vdi		1098909						
ANR	1100625	Symbol	* offset_contone		1098909						
ANR	1100626	Symbol	num_tiles		1098909						
ANR	1100627	Symbol	penum -> pgs -> dev_ht -> components [ j ] . corder . threshold_inverted		1098909						
ANR	1100628	Symbol	threshold		1098909						
ANR	1100629	Symbol	penum -> yci		1098909						
ANR	1100630	Symbol	penum -> ht_stride		1098909						
ANR	1100631	Symbol	dev -> is_planar		1098909						
ANR	1100632	Symbol	xoffs		1098909						
ANR	1100633	Symbol	dx		1098909						
ANR	1100634	Symbol	dev -> color_info . polarity		1098909						
ANR	1100635	Symbol	dy		1098909						
ANR	1100636	Symbol	penum -> line		1098909						
ANR	1100637	Symbol	penum -> pgs -> dev_ht -> components [ j ] . corder . width		1098909						
ANR	1100638	Symbol	penum -> ht_landscape		1098909						
ANR	1100639	Symbol	gx_device_white		1098909						
ANR	1100640	Symbol	row_ptr		1098909						
ANR	1100641	Symbol	NULL		1098909						
ANR	1100642	Symbol	penum -> pgs -> dev_ht -> components		1098909						
ANR	1100643	Symbol	thresh_width		1098909						
ANR	1100644	Symbol	replicate_tile		1098909						
ANR	1100645	Symbol	penum -> ht_landscape . xstart		1098909						
ANR	1100646	Symbol	GX_CINFO_POLARITY_SUBTRACTIVE		1098909						
ANR	1100647	Symbol	gx_no_bitmap_id		1098909						
ANR	1100648	Symbol	thresh_height		1098909						
ANR	1100649	Symbol	true		1098909						
ANR	1100650	Symbol	position		1098909						
ANR	1100651	Symbol	penum -> ht_landscape . count		1098909						
ANR	1100652	Symbol	penum -> pgs -> screen_phase [ 0 ] . x		1098909						
ANR	1100653	Symbol	x_pos		1098909						
ANR	1100654	Symbol	penum -> pgs -> screen_phase [ 0 ] . y		1098909						
ANR	1100655	Symbol	thresh_tile		1098909						
ANR	1100656	Symbol	dev_proc		1098909						
ANR	1100657	Symbol	copy_mono		1098909						
ANR	1100658	Symbol	init_tile		1098909						
ANR	1100659	Symbol	dest_height		1098909						
ANR	1100660	Symbol	LAND_BITS		1098909						
ANR	1100661	Symbol	contone_align		1098909						
ANR	1100662	Symbol	penum -> hci		1098909						
ANR	1100663	Symbol	* * * penum -> pgs		1098909						
ANR	1100664	Symbol	penum -> ht_landscape . widths		1098909						
ANR	1100665	Symbol	ptr_out_temp		1098909						
ANR	1100666	Symbol	false		1098909						
ANR	1100667	Symbol	dest_width		1098909						
ANR	1100668	Symbol	halftone		1098909						
ANR	1100669	Symbol	dev_white		1098909						
ANR	1100670	Symbol	* j		1098909						
ANR	1100671	Symbol	penum -> pgs -> screen_phase		1098909						
ANR	1100672	Symbol	fastfloor		1098909						
ANR	1100673	Symbol	penum -> pgs -> dev_ht -> components [ j ] . corder . threshold		1098909						
ANR	1100674	Symbol	copy_planes		1098909						
ANR	1100675	Symbol	penum -> ht_buffer		1098909						
ANR	1100676	Function	gxht_dda_length	1149:0:49428:49640							
ANR	1100677	FunctionDef	"gxht_dda_length (gx_dda_fixed * dda , int src_size)"		1100676	0					
ANR	1100678	CompoundStatement		1150:0:49481:49640	1100676	0					
ANR	1100679	IdentifierDeclStatement	gx_dda_fixed d = ( * dda ) ;	1151:4:49487:49510	1100676	0	True				
ANR	1100680	IdentifierDecl	d = ( * dda )		1100676	0					
ANR	1100681	IdentifierDeclType	gx_dda_fixed		1100676	0					
ANR	1100682	Identifier	d		1100676	1					
ANR	1100683	AssignmentExpression	d = ( * dda )		1100676	2		=			
ANR	1100684	Identifier	d		1100676	0					
ANR	1100685	UnaryOperationExpression	* dda		1100676	1					
ANR	1100686	UnaryOperator	*		1100676	0					
ANR	1100687	Identifier	dda		1100676	1					
ANR	1100688	ExpressionStatement	"dda_advance ( d , src_size )"	1152:4:49516:49540	1100676	1	True				
ANR	1100689	CallExpression	"dda_advance ( d , src_size )"		1100676	0					
ANR	1100690	Callee	dda_advance		1100676	0					
ANR	1100691	Identifier	dda_advance		1100676	0					
ANR	1100692	ArgumentList	d		1100676	1					
ANR	1100693	Argument	d		1100676	0					
ANR	1100694	Identifier	d		1100676	0					
ANR	1100695	Argument	src_size		1100676	1					
ANR	1100696	Identifier	src_size		1100676	0					
ANR	1100697	ReturnStatement	return abs ( fixed2int_var_rounded ( dda_current ( d ) ) - fixed2int_var_rounded ( dda_current ( * dda ) ) ) ;	1153:4:49546:49638	1100676	2	True				
ANR	1100698	CallExpression	abs ( fixed2int_var_rounded ( dda_current ( d ) ) - fixed2int_var_rounded ( dda_current ( * dda ) ) )		1100676	0					
ANR	1100699	Callee	abs		1100676	0					
ANR	1100700	Identifier	abs		1100676	0					
ANR	1100701	ArgumentList	fixed2int_var_rounded ( dda_current ( d ) ) - fixed2int_var_rounded ( dda_current ( * dda ) )		1100676	1					
ANR	1100702	Argument	fixed2int_var_rounded ( dda_current ( d ) ) - fixed2int_var_rounded ( dda_current ( * dda ) )		1100676	0					
ANR	1100703	AdditiveExpression	fixed2int_var_rounded ( dda_current ( d ) ) - fixed2int_var_rounded ( dda_current ( * dda ) )		1100676	0		-			
ANR	1100704	CallExpression	fixed2int_var_rounded ( dda_current ( d ) )		1100676	0					
ANR	1100705	Callee	fixed2int_var_rounded		1100676	0					
ANR	1100706	Identifier	fixed2int_var_rounded		1100676	0					
ANR	1100707	ArgumentList	dda_current ( d )		1100676	1					
ANR	1100708	Argument	dda_current ( d )		1100676	0					
ANR	1100709	CallExpression	dda_current ( d )		1100676	0					
ANR	1100710	Callee	dda_current		1100676	0					
ANR	1100711	Identifier	dda_current		1100676	0					
ANR	1100712	ArgumentList	d		1100676	1					
ANR	1100713	Argument	d		1100676	0					
ANR	1100714	Identifier	d		1100676	0					
ANR	1100715	CallExpression	fixed2int_var_rounded ( dda_current ( * dda ) )		1100676	1					
ANR	1100716	Callee	fixed2int_var_rounded		1100676	0					
ANR	1100717	Identifier	fixed2int_var_rounded		1100676	0					
ANR	1100718	ArgumentList	dda_current ( * dda )		1100676	1					
ANR	1100719	Argument	dda_current ( * dda )		1100676	0					
ANR	1100720	CallExpression	dda_current ( * dda )		1100676	0					
ANR	1100721	Callee	dda_current		1100676	0					
ANR	1100722	Identifier	dda_current		1100676	0					
ANR	1100723	ArgumentList	* dda		1100676	1					
ANR	1100724	Argument	* dda		1100676	0					
ANR	1100725	UnaryOperationExpression	* dda		1100676	0					
ANR	1100726	UnaryOperator	*		1100676	0					
ANR	1100727	Identifier	dda		1100676	1					
ANR	1100728	ReturnType	int		1100676	1					
ANR	1100729	Identifier	gxht_dda_length		1100676	2					
ANR	1100730	ParameterList	"gx_dda_fixed * dda , int src_size"		1100676	3					
ANR	1100731	Parameter	gx_dda_fixed * dda	1149:20:49448:49464	1100676	0	True				
ANR	1100732	ParameterType	gx_dda_fixed *		1100676	0					
ANR	1100733	Identifier	dda		1100676	1					
ANR	1100734	Parameter	int src_size	1149:39:49467:49478	1100676	1	True				
ANR	1100735	ParameterType	int		1100676	0					
ANR	1100736	Identifier	src_size		1100676	1					
ANR	1100737	CFGEntryNode	ENTRY		1100676		True				
ANR	1100738	CFGExitNode	EXIT		1100676		True				
ANR	1100739	Symbol	dda		1100676						
ANR	1100740	Symbol	src_size		1100676						
ANR	1100741	Symbol	abs		1100676						
ANR	1100742	Symbol	d		1100676						
ANR	1100743	Symbol	* dda		1100676						
ANR	1100744	Symbol	dda_current		1100676						
ANR	1100745	Symbol	fixed2int_var_rounded		1100676						
