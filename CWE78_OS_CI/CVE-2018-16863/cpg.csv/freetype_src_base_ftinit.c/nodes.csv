command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3344543	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_base_ftinit.c								
ANR	3344544	DeclStmt									
ANR	3344545	Decl							const type	const type	x
ANR	3344546	DeclStmt									
ANR	3344547	Decl							const type	const type	x
ANR	3344548	DeclStmt									
ANR	3344549	Decl							FT_EXTERNC FT_Error FT_Create_Class_	"FT_EXTERNC FT_Error FT_Create_Class_ ( FT_Library library , FT_Module_Class * * output_class )"	x
ANR	3344550	DeclStmt									
ANR	3344551	Decl							FT_EXTERNC void FT_Destroy_Class_	"FT_EXTERNC void FT_Destroy_Class_ ( FT_Library library , FT_Module_Class * clazz )"	x
ANR	3344552	ClassDef	<unnamed>	106:2:4700:4766							
ANR	3344553	DeclStmt									
ANR	3344554	Decl							FT_Destroy_Class_	"FT_Destroy_Class_ ( library , classes [ i ] )"	x
ANR	3344555	Function	ft_destroy_default_module_classes	123:2:5125:5628							
ANR	3344556	FunctionDef	ft_destroy_default_module_classes (FT_Library library)		3344555	0					
ANR	3344557	CompoundStatement		124:2:5184:5628	3344555	0					
ANR	3344558	IdentifierDeclStatement	FT_Module_Class * * classes ;	125:4:5190:5216	3344555	0	True				
ANR	3344559	IdentifierDecl	* * classes		3344555	0					
ANR	3344560	IdentifierDeclType	FT_Module_Class * *		3344555	0					
ANR	3344561	Identifier	classes		3344555	1					
ANR	3344562	IdentifierDeclStatement	FT_Memory memory ;	126:4:5222:5247	3344555	1	True				
ANR	3344563	IdentifierDecl	memory		3344555	0					
ANR	3344564	IdentifierDeclType	FT_Memory		3344555	0					
ANR	3344565	Identifier	memory		3344555	1					
ANR	3344566	IdentifierDeclStatement	FT_UInt i ;	127:4:5253:5273	3344555	2	True				
ANR	3344567	IdentifierDecl	i		3344555	0					
ANR	3344568	IdentifierDeclType	FT_UInt		3344555	0					
ANR	3344569	Identifier	i		3344555	1					
ANR	3344570	IdentifierDeclStatement	BasePIC * pic_container = ( BasePIC * ) library -> pic_container . base ;	128:4:5279:5351	3344555	3	True				
ANR	3344571	IdentifierDecl	* pic_container = ( BasePIC * ) library -> pic_container . base		3344555	0					
ANR	3344572	IdentifierDeclType	BasePIC *		3344555	0					
ANR	3344573	Identifier	pic_container		3344555	1					
ANR	3344574	AssignmentExpression	* pic_container = ( BasePIC * ) library -> pic_container . base		3344555	2		=			
ANR	3344575	Identifier	pic_container		3344555	0					
ANR	3344576	CastExpression	( BasePIC * ) library -> pic_container . base		3344555	1					
ANR	3344577	CastTarget	BasePIC *		3344555	0					
ANR	3344578	MemberAccess	library -> pic_container . base		3344555	1					
ANR	3344579	PtrMemberAccess	library -> pic_container		3344555	0					
ANR	3344580	Identifier	library		3344555	0					
ANR	3344581	Identifier	pic_container		3344555	1					
ANR	3344582	Identifier	base		3344555	1					
ANR	3344583	IfStatement	if ( ! pic_container -> default_module_classes )		3344555	4					
ANR	3344584	Condition	! pic_container -> default_module_classes	131:9:5364:5401	3344555	0	True				
ANR	3344585	UnaryOperationExpression	! pic_container -> default_module_classes		3344555	0					
ANR	3344586	UnaryOperator	!		3344555	0					
ANR	3344587	PtrMemberAccess	pic_container -> default_module_classes		3344555	1					
ANR	3344588	Identifier	pic_container		3344555	0					
ANR	3344589	Identifier	default_module_classes		3344555	1					
ANR	3344590	ReturnStatement	return ;	132:6:5411:5417	3344555	1	True				
ANR	3344591	ExpressionStatement	memory = library -> memory	134:4:5424:5449	3344555	5	True				
ANR	3344592	AssignmentExpression	memory = library -> memory		3344555	0		=			
ANR	3344593	Identifier	memory		3344555	0					
ANR	3344594	PtrMemberAccess	library -> memory		3344555	1					
ANR	3344595	Identifier	library		3344555	0					
ANR	3344596	Identifier	memory		3344555	1					
ANR	3344597	ExpressionStatement	classes = pic_container -> default_module_classes	135:4:5455:5502	3344555	6	True				
ANR	3344598	AssignmentExpression	classes = pic_container -> default_module_classes		3344555	0		=			
ANR	3344599	Identifier	classes		3344555	0					
ANR	3344600	PtrMemberAccess	pic_container -> default_module_classes		3344555	1					
ANR	3344601	Identifier	pic_container		3344555	0					
ANR	3344602	Identifier	default_module_classes		3344555	1					
ANR	3344603	ExpressionStatement	i = 0	136:4:5508:5519	3344555	7	True				
ANR	3344604	AssignmentExpression	i = 0		3344555	0		=			
ANR	3344605	Identifier	i		3344555	0					
ANR	3344606	PrimaryExpression	0		3344555	1					
ANR	3344607	IdentifierDeclStatement	include FT_CONFIG_MODULES_H FT_FREE ( classes ) ;	138:1:5523:5574	3344555	8	True				
ANR	3344608	IdentifierDecl	FT_FREE ( classes )		3344555	0					
ANR	3344609	IdentifierDeclType	include FT_CONFIG_MODULES_H		3344555	0					
ANR	3344610	Identifier	FT_FREE		3344555	1					
ANR	3344611	Identifier	classes		3344555	2					
ANR	3344612	ExpressionStatement	pic_container -> default_module_classes = NULL	141:4:5580:5624	3344555	9	True				
ANR	3344613	AssignmentExpression	pic_container -> default_module_classes = NULL		3344555	0		=			
ANR	3344614	PtrMemberAccess	pic_container -> default_module_classes		3344555	0					
ANR	3344615	Identifier	pic_container		3344555	0					
ANR	3344616	Identifier	default_module_classes		3344555	1					
ANR	3344617	Identifier	NULL		3344555	1					
ANR	3344618	Identifier	ft_destroy_default_module_classes		3344555	1					
ANR	3344619	ParameterList	FT_Library library		3344555	2					
ANR	3344620	Parameter	FT_Library library	123:37:5160:5178	3344555	0	True				
ANR	3344621	ParameterType	FT_Library		3344555	0					
ANR	3344622	Identifier	library		3344555	1					
ANR	3344623	CFGEntryNode	ENTRY		3344555		True				
ANR	3344624	CFGExitNode	EXIT		3344555		True				
ANR	3344625	Symbol	* library		3344555						
ANR	3344626	Symbol	memory		3344555						
ANR	3344627	Symbol	NULL		3344555						
ANR	3344628	Symbol	classes		3344555						
ANR	3344629	Symbol	pic_container -> default_module_classes		3344555						
ANR	3344630	Symbol	i		3344555						
ANR	3344631	Symbol	library -> memory		3344555						
ANR	3344632	Symbol	* pic_container		3344555						
ANR	3344633	Symbol	pic_container		3344555						
ANR	3344634	Symbol	library -> pic_container . base		3344555						
ANR	3344635	Symbol	library		3344555						
ANR	3344636	Symbol	library -> pic_container		3344555						
ANR	3344637	Symbol	FT_FREE		3344555						
ANR	3344638	DeclStmt									
ANR	3344639	Decl							FT_Create_Class_	FT_Create_Class_	x
ANR	3344640	Function	ft_create_default_module_classes	155:2:5988:6896							
ANR	3344641	FunctionDef	ft_create_default_module_classes (FT_Library library)		3344640	0					
ANR	3344642	CompoundStatement		156:2:6046:6896	3344640	0					
ANR	3344643	IdentifierDeclStatement	FT_Error error ;	157:4:6052:6076	3344640	0	True				
ANR	3344644	IdentifierDecl	error		3344640	0					
ANR	3344645	IdentifierDeclType	FT_Error		3344640	0					
ANR	3344646	Identifier	error		3344640	1					
ANR	3344647	IdentifierDeclStatement	FT_Memory memory ;	158:4:6082:6107	3344640	1	True				
ANR	3344648	IdentifierDecl	memory		3344640	0					
ANR	3344649	IdentifierDeclType	FT_Memory		3344640	0					
ANR	3344650	Identifier	memory		3344640	1					
ANR	3344651	IdentifierDeclStatement	FT_Module_Class * * classes = NULL ;	159:4:6113:6146	3344640	2	True				
ANR	3344652	IdentifierDecl	* * classes = NULL		3344640	0					
ANR	3344653	IdentifierDeclType	FT_Module_Class * *		3344640	0					
ANR	3344654	Identifier	classes		3344640	1					
ANR	3344655	AssignmentExpression	* * classes = NULL		3344640	2		=			
ANR	3344656	Identifier	NULL		3344640	0					
ANR	3344657	Identifier	NULL		3344640	1					
ANR	3344658	IdentifierDeclStatement	FT_Module_Class * clazz ;	160:4:6152:6176	3344640	3	True				
ANR	3344659	IdentifierDecl	* clazz		3344640	0					
ANR	3344660	IdentifierDeclType	FT_Module_Class *		3344640	0					
ANR	3344661	Identifier	clazz		3344640	1					
ANR	3344662	IdentifierDeclStatement	FT_UInt i ;	161:4:6182:6202	3344640	4	True				
ANR	3344663	IdentifierDecl	i		3344640	0					
ANR	3344664	IdentifierDeclType	FT_UInt		3344640	0					
ANR	3344665	Identifier	i		3344640	1					
ANR	3344666	IdentifierDeclStatement	BasePIC * pic_container = ( BasePIC * ) library -> pic_container . base ;	162:4:6208:6280	3344640	5	True				
ANR	3344667	IdentifierDecl	* pic_container = ( BasePIC * ) library -> pic_container . base		3344640	0					
ANR	3344668	IdentifierDeclType	BasePIC *		3344640	0					
ANR	3344669	Identifier	pic_container		3344640	1					
ANR	3344670	AssignmentExpression	* pic_container = ( BasePIC * ) library -> pic_container . base		3344640	2		=			
ANR	3344671	Identifier	pic_container		3344640	0					
ANR	3344672	CastExpression	( BasePIC * ) library -> pic_container . base		3344640	1					
ANR	3344673	CastTarget	BasePIC *		3344640	0					
ANR	3344674	MemberAccess	library -> pic_container . base		3344640	1					
ANR	3344675	PtrMemberAccess	library -> pic_container		3344640	0					
ANR	3344676	Identifier	library		3344640	0					
ANR	3344677	Identifier	pic_container		3344640	1					
ANR	3344678	Identifier	base		3344640	1					
ANR	3344679	ExpressionStatement	memory = library -> memory	165:4:6288:6312	3344640	6	True				
ANR	3344680	AssignmentExpression	memory = library -> memory		3344640	0		=			
ANR	3344681	Identifier	memory		3344640	0					
ANR	3344682	PtrMemberAccess	library -> memory		3344640	1					
ANR	3344683	Identifier	library		3344640	0					
ANR	3344684	Identifier	memory		3344640	1					
ANR	3344685	ExpressionStatement	pic_container -> default_module_classes = NULL	167:4:6319:6363	3344640	7	True				
ANR	3344686	AssignmentExpression	pic_container -> default_module_classes = NULL		3344640	0		=			
ANR	3344687	PtrMemberAccess	pic_container -> default_module_classes		3344640	0					
ANR	3344688	Identifier	pic_container		3344640	0					
ANR	3344689	Identifier	default_module_classes		3344640	1					
ANR	3344690	Identifier	NULL		3344640	1					
ANR	3344691	IfStatement	"if ( FT_ALLOC ( classes , sizeof ( FT_Module_Class * ) * ( FT_NUM_MODULE_CLASSES + 1 ) ) )"		3344640	8					
ANR	3344692	Condition	"FT_ALLOC ( classes , sizeof ( FT_Module_Class * ) * ( FT_NUM_MODULE_CLASSES + 1 ) )"	169:9:6375:6484	3344640	0	True				
ANR	3344693	CallExpression	"FT_ALLOC ( classes , sizeof ( FT_Module_Class * ) * ( FT_NUM_MODULE_CLASSES + 1 ) )"		3344640	0					
ANR	3344694	Callee	FT_ALLOC		3344640	0					
ANR	3344695	Identifier	FT_ALLOC		3344640	0					
ANR	3344696	ArgumentList	classes		3344640	1					
ANR	3344697	Argument	classes		3344640	0					
ANR	3344698	Identifier	classes		3344640	0					
ANR	3344699	Argument	sizeof ( FT_Module_Class * ) * ( FT_NUM_MODULE_CLASSES + 1 )		3344640	1					
ANR	3344700	MultiplicativeExpression	sizeof ( FT_Module_Class * ) * ( FT_NUM_MODULE_CLASSES + 1 )		3344640	0		*			
ANR	3344701	SizeofExpression	sizeof ( FT_Module_Class * )		3344640	0					
ANR	3344702	Sizeof	sizeof		3344640	0					
ANR	3344703	SizeofOperand	FT_Module_Class *		3344640	1					
ANR	3344704	AdditiveExpression	FT_NUM_MODULE_CLASSES + 1		3344640	1		+			
ANR	3344705	Identifier	FT_NUM_MODULE_CLASSES		3344640	0					
ANR	3344706	PrimaryExpression	1		3344640	1					
ANR	3344707	ReturnStatement	return error ;	171:6:6494:6506	3344640	1	True				
ANR	3344708	Identifier	error		3344640	0					
ANR	3344709	ForStatement	for ( i = 0 ; i < FT_NUM_MODULE_CLASSES ; i ++ )		3344640	9					
ANR	3344710	ForInit	i = 0 ;	174:10:6583:6588	3344640	0	True				
ANR	3344711	AssignmentExpression	i = 0		3344640	0		=			
ANR	3344712	Identifier	i		3344640	0					
ANR	3344713	PrimaryExpression	0		3344640	1					
ANR	3344714	Condition	i < FT_NUM_MODULE_CLASSES	174:17:6590:6614	3344640	1	True				
ANR	3344715	RelationalExpression	i < FT_NUM_MODULE_CLASSES		3344640	0		<			
ANR	3344716	Identifier	i		3344640	0					
ANR	3344717	Identifier	FT_NUM_MODULE_CLASSES		3344640	1					
ANR	3344718	PostIncDecOperationExpression	i ++	174:44:6617:6619	3344640	2	True				
ANR	3344719	Identifier	i		3344640	0					
ANR	3344720	IncDec	++		3344640	1					
ANR	3344721	ExpressionStatement	classes [ i ] = NULL	175:6:6629:6646	3344640	3	True				
ANR	3344722	AssignmentExpression	classes [ i ] = NULL		3344640	0		=			
ANR	3344723	ArrayIndexing	classes [ i ]		3344640	0					
ANR	3344724	Identifier	classes		3344640	0					
ANR	3344725	Identifier	i		3344640	1					
ANR	3344726	Identifier	NULL		3344640	1					
ANR	3344727	ExpressionStatement	classes [ FT_NUM_MODULE_CLASSES ] = NULL	176:4:6652:6689	3344640	10	True				
ANR	3344728	AssignmentExpression	classes [ FT_NUM_MODULE_CLASSES ] = NULL		3344640	0		=			
ANR	3344729	ArrayIndexing	classes [ FT_NUM_MODULE_CLASSES ]		3344640	0					
ANR	3344730	Identifier	classes		3344640	0					
ANR	3344731	Identifier	FT_NUM_MODULE_CLASSES		3344640	1					
ANR	3344732	Identifier	NULL		3344640	1					
ANR	3344733	ExpressionStatement	i = 0	178:4:6696:6701	3344640	11	True				
ANR	3344734	AssignmentExpression	i = 0		3344640	0		=			
ANR	3344735	Identifier	i		3344640	0					
ANR	3344736	PrimaryExpression	0		3344640	1					
ANR	3344737	Statement	include	180:1:6705:6711	3344640	12	True				
ANR	3344738	Statement	FT_CONFIG_MODULES_H	180:9:6713:6731	3344640	13	True				
ANR	3344739	Label	Exit :	182:2:6736:6740	3344640	14	True				
ANR	3344740	Identifier	Exit		3344640	0					
ANR	3344741	IfStatement	if ( error )		3344640	15					
ANR	3344742	Condition	error	183:9:6751:6755	3344640	0	True				
ANR	3344743	Identifier	error		3344640	0					
ANR	3344744	ExpressionStatement	ft_destroy_default_module_classes ( library )	184:6:6765:6809	3344640	1	True				
ANR	3344745	CallExpression	ft_destroy_default_module_classes ( library )		3344640	0					
ANR	3344746	Callee	ft_destroy_default_module_classes		3344640	0					
ANR	3344747	Identifier	ft_destroy_default_module_classes		3344640	0					
ANR	3344748	ArgumentList	library		3344640	1					
ANR	3344749	Argument	library		3344640	0					
ANR	3344750	Identifier	library		3344640	0					
ANR	3344751	ElseStatement	else		3344640	0					
ANR	3344752	ExpressionStatement	pic_container -> default_module_classes = classes	186:6:6826:6873	3344640	0	True				
ANR	3344753	AssignmentExpression	pic_container -> default_module_classes = classes		3344640	0		=			
ANR	3344754	PtrMemberAccess	pic_container -> default_module_classes		3344640	0					
ANR	3344755	Identifier	pic_container		3344640	0					
ANR	3344756	Identifier	default_module_classes		3344640	1					
ANR	3344757	Identifier	classes		3344640	1					
ANR	3344758	ReturnStatement	return error ;	188:4:6880:6892	3344640	16	True				
ANR	3344759	Identifier	error		3344640	0					
ANR	3344760	Identifier	ft_create_default_module_classes		3344640	1					
ANR	3344761	ParameterList	FT_Library library		3344640	2					
ANR	3344762	Parameter	FT_Library library	155:36:6022:6040	3344640	0	True				
ANR	3344763	ParameterType	FT_Library		3344640	0					
ANR	3344764	Identifier	library		3344640	1					
ANR	3344765	CFGEntryNode	ENTRY		3344640		True				
ANR	3344766	CFGExitNode	EXIT		3344640		True				
ANR	3344767	Symbol	* FT_NUM_MODULE_CLASSES		3344640						
ANR	3344768	Symbol	* library		3344640						
ANR	3344769	Symbol	memory		3344640						
ANR	3344770	Symbol	NULL		3344640						
ANR	3344771	Symbol	classes		3344640						
ANR	3344772	Symbol	pic_container -> default_module_classes		3344640						
ANR	3344773	Symbol	i		3344640						
ANR	3344774	Symbol	library -> memory		3344640						
ANR	3344775	Symbol	error		3344640						
ANR	3344776	Symbol	* pic_container		3344640						
ANR	3344777	Symbol	pic_container		3344640						
ANR	3344778	Symbol	FT_NUM_MODULE_CLASSES		3344640						
ANR	3344779	Symbol	* classes		3344640						
ANR	3344780	Symbol	library -> pic_container . base		3344640						
ANR	3344781	Symbol	library		3344640						
ANR	3344782	Symbol	* i		3344640						
ANR	3344783	Symbol	FT_ALLOC		3344640						
ANR	3344784	Symbol	library -> pic_container		3344640						
ANR	3344785	Symbol	clazz		3344640						
ANR	3344786	Function	FT_Add_Default_Modules	198:2:7002:7821							
ANR	3344787	FunctionDef	FT_Add_Default_Modules (FT_Library library)		3344786	0					
ANR	3344788	CompoundStatement		199:2:7050:7821	3344786	0					
ANR	3344789	IdentifierDeclStatement	FT_Error error ;	200:4:7056:7092	3344786	0	True				
ANR	3344790	IdentifierDecl	error		3344786	0					
ANR	3344791	IdentifierDeclType	FT_Error		3344786	0					
ANR	3344792	Identifier	error		3344786	1					
ANR	3344793	Statement	const	201:4:7098:7102	3344786	1	True				
ANR	3344794	Statement	FT_Module_Class	201:10:7104:7118	3344786	2	True				
ANR	3344795	Statement	*	201:25:7119:7119	3344786	3	True				
ANR	3344796	Statement	const	201:27:7121:7125	3344786	4	True				
ANR	3344797	ExpressionStatement	* cur	201:32:7126:7132	3344786	5	True				
ANR	3344798	UnaryOperationExpression	* cur		3344786	0					
ANR	3344799	UnaryOperator	*		3344786	0					
ANR	3344800	Identifier	cur		3344786	1					
ANR	3344801	IfStatement	if ( ! library )		3344786	6					
ANR	3344802	Condition	! library	206:9:7241:7248	3344786	0	True				
ANR	3344803	UnaryOperationExpression	! library		3344786	0					
ANR	3344804	UnaryOperator	!		3344786	0					
ANR	3344805	Identifier	library		3344786	1					
ANR	3344806	ReturnStatement	return ;	207:6:7258:7264	3344786	1	True				
ANR	3344807	Statement	cur	213:4:7388:7390	3344786	7	True				
ANR	3344808	Statement	=	213:8:7392:7392	3344786	8	True				
ANR	3344809	Statement	(	213:10:7394:7394	3344786	9	True				
ANR	3344810	Statement	const	213:11:7395:7399	3344786	10	True				
ANR	3344811	Statement	FT_Module_Class	213:17:7401:7415	3344786	11	True				
ANR	3344812	Statement	*	213:32:7416:7416	3344786	12	True				
ANR	3344813	Statement	const	213:34:7418:7422	3344786	13	True				
ANR	3344814	Statement	*	213:39:7423:7423	3344786	14	True				
ANR	3344815	Statement	)	213:40:7424:7424	3344786	15	True				
ANR	3344816	ExpressionStatement	FT_DEFAULT_MODULES_GET	213:41:7425:7447	3344786	16	True				
ANR	3344817	Identifier	FT_DEFAULT_MODULES_GET		3344786	0					
ANR	3344818	WhileStatement	while ( * cur )		3344786	17					
ANR	3344819	Condition	* cur	216:12:7524:7527	3344786	0	True				
ANR	3344820	UnaryOperationExpression	* cur		3344786	0					
ANR	3344821	UnaryOperator	*		3344786	0					
ANR	3344822	Identifier	cur		3344786	1					
ANR	3344823	CompoundStatement		19:4:484:484	3344786	1					
ANR	3344824	ExpressionStatement	"error = FT_Add_Module ( library , * cur )"	218:6:7543:7581	3344786	0	True				
ANR	3344825	AssignmentExpression	"error = FT_Add_Module ( library , * cur )"		3344786	0		=			
ANR	3344826	Identifier	error		3344786	0					
ANR	3344827	CallExpression	"FT_Add_Module ( library , * cur )"		3344786	1					
ANR	3344828	Callee	FT_Add_Module		3344786	0					
ANR	3344829	Identifier	FT_Add_Module		3344786	0					
ANR	3344830	ArgumentList	library		3344786	1					
ANR	3344831	Argument	library		3344786	0					
ANR	3344832	Identifier	library		3344786	0					
ANR	3344833	Argument	* cur		3344786	1					
ANR	3344834	UnaryOperationExpression	* cur		3344786	0					
ANR	3344835	UnaryOperator	*		3344786	0					
ANR	3344836	Identifier	cur		3344786	1					
ANR	3344837	IfStatement	if ( error )		3344786	1					
ANR	3344838	Condition	error	220:11:7636:7640	3344786	0	True				
ANR	3344839	Identifier	error		3344786	0					
ANR	3344840	Statement	FT_TRACE0	221:8:7652:7660	3344786	1	True				
ANR	3344841	Statement	(	221:17:7661:7661	3344786	2	True				
ANR	3344842	Statement	(	221:18:7662:7662	3344786	3	True				
ANR	3344843	Statement	"""FT_Add_Default_Module:"""	221:20:7664:7687	3344786	4	True				
ANR	3344844	Statement	""" Cannot install `%s', error = 0x%x\\n"""	222:20:7709:7746	3344786	5	True				
ANR	3344845	Statement	","	222:58:7747:7747	3344786	6	True				
ANR	3344846	Statement	(	223:20:7769:7769	3344786	7	True				
ANR	3344847	Statement	*	223:21:7770:7770	3344786	8	True				
ANR	3344848	Statement	cur	223:22:7771:7773	3344786	9	True				
ANR	3344849	Statement	)	223:25:7774:7774	3344786	10	True				
ANR	3344850	Statement	->	223:26:7775:7776	3344786	11	True				
ANR	3344851	Statement	module_name	223:28:7777:7787	3344786	12	True				
ANR	3344852	Statement	","	223:39:7788:7788	3344786	13	True				
ANR	3344853	Statement	error	223:41:7790:7794	3344786	14	True				
ANR	3344854	Statement	)	223:47:7796:7796	3344786	15	True				
ANR	3344855	Statement	)	223:48:7797:7797	3344786	16	True				
ANR	3344856	ExpressionStatement		223:49:7798:7798	3344786	17	True				
ANR	3344857	ExpressionStatement	cur ++	224:6:7806:7811	3344786	18	True				
ANR	3344858	PostIncDecOperationExpression	cur ++		3344786	0					
ANR	3344859	Identifier	cur		3344786	0					
ANR	3344860	IncDec	++		3344786	1					
ANR	3344861	Identifier	FT_Add_Default_Modules		3344786	1					
ANR	3344862	ParameterList	FT_Library library		3344786	2					
ANR	3344863	Parameter	FT_Library library	198:26:7026:7044	3344786	0	True				
ANR	3344864	ParameterType	FT_Library		3344786	0					
ANR	3344865	Identifier	library		3344786	1					
ANR	3344866	CFGEntryNode	ENTRY		3344786		True				
ANR	3344867	CFGExitNode	EXIT		3344786		True				
ANR	3344868	Symbol	cur		3344786						
ANR	3344869	Symbol	library		3344786						
ANR	3344870	Symbol	* cur		3344786						
ANR	3344871	Symbol	FT_Add_Module		3344786						
ANR	3344872	Symbol	error		3344786						
ANR	3344873	Function	FT_Set_Default_Properties	236:2:7964:9580							
ANR	3344874	FunctionDef	FT_Set_Default_Properties (FT_Library library)		3344873	0					
ANR	3344875	CompoundStatement		237:2:8015:9580	3344873	0					
ANR	3344876	IdentifierDeclStatement	const char * env ;	238:4:8021:8037	3344873	0	True				
ANR	3344877	IdentifierDecl	* env		3344873	0					
ANR	3344878	IdentifierDeclType	const char *		3344873	0					
ANR	3344879	Identifier	env		3344873	1					
ANR	3344880	IdentifierDeclStatement	const char * p ;	239:4:8043:8057	3344873	1	True				
ANR	3344881	IdentifierDecl	* p		3344873	0					
ANR	3344882	IdentifierDeclType	const char *		3344873	0					
ANR	3344883	Identifier	p		3344873	1					
ANR	3344884	IdentifierDeclStatement	const char * q ;	240:4:8063:8077	3344873	2	True				
ANR	3344885	IdentifierDecl	* q		3344873	0					
ANR	3344886	IdentifierDeclType	const char *		3344873	0					
ANR	3344887	Identifier	q		3344873	1					
ANR	3344888	IdentifierDeclStatement	char module_name [ MAX_LENGTH + 1 ] ;	242:4:8084:8117	3344873	3	True				
ANR	3344889	IdentifierDecl	module_name [ MAX_LENGTH + 1 ]		3344873	0					
ANR	3344890	IdentifierDeclType	char [ MAX_LENGTH + 1 ]		3344873	0					
ANR	3344891	Identifier	module_name		3344873	1					
ANR	3344892	AdditiveExpression	MAX_LENGTH + 1		3344873	2		+			
ANR	3344893	Identifier	MAX_LENGTH		3344873	0					
ANR	3344894	PrimaryExpression	1		3344873	1					
ANR	3344895	IdentifierDeclStatement	char property_name [ MAX_LENGTH + 1 ] ;	243:4:8123:8158	3344873	4	True				
ANR	3344896	IdentifierDecl	property_name [ MAX_LENGTH + 1 ]		3344873	0					
ANR	3344897	IdentifierDeclType	char [ MAX_LENGTH + 1 ]		3344873	0					
ANR	3344898	Identifier	property_name		3344873	1					
ANR	3344899	AdditiveExpression	MAX_LENGTH + 1		3344873	2		+			
ANR	3344900	Identifier	MAX_LENGTH		3344873	0					
ANR	3344901	PrimaryExpression	1		3344873	1					
ANR	3344902	IdentifierDeclStatement	char property_value [ MAX_LENGTH + 1 ] ;	244:4:8164:8200	3344873	5	True				
ANR	3344903	IdentifierDecl	property_value [ MAX_LENGTH + 1 ]		3344873	0					
ANR	3344904	IdentifierDeclType	char [ MAX_LENGTH + 1 ]		3344873	0					
ANR	3344905	Identifier	property_value		3344873	1					
ANR	3344906	AdditiveExpression	MAX_LENGTH + 1		3344873	2		+			
ANR	3344907	Identifier	MAX_LENGTH		3344873	0					
ANR	3344908	PrimaryExpression	1		3344873	1					
ANR	3344909	IdentifierDeclStatement	int i ;	246:4:8207:8213	3344873	6	True				
ANR	3344910	IdentifierDecl	i		3344873	0					
ANR	3344911	IdentifierDeclType	int		3344873	0					
ANR	3344912	Identifier	i		3344873	1					
ANR	3344913	ExpressionStatement	"env = ft_getenv ( ""FREETYPE_PROPERTIES"" )"	249:4:8221:8261	3344873	7	True				
ANR	3344914	AssignmentExpression	"env = ft_getenv ( ""FREETYPE_PROPERTIES"" )"		3344873	0		=			
ANR	3344915	Identifier	env		3344873	0					
ANR	3344916	CallExpression	"ft_getenv ( ""FREETYPE_PROPERTIES"" )"		3344873	1					
ANR	3344917	Callee	ft_getenv		3344873	0					
ANR	3344918	Identifier	ft_getenv		3344873	0					
ANR	3344919	ArgumentList	"""FREETYPE_PROPERTIES"""		3344873	1					
ANR	3344920	Argument	"""FREETYPE_PROPERTIES"""		3344873	0					
ANR	3344921	PrimaryExpression	"""FREETYPE_PROPERTIES"""		3344873	0					
ANR	3344922	IfStatement	if ( ! env )		3344873	8					
ANR	3344923	Condition	! env	250:9:8272:8275	3344873	0	True				
ANR	3344924	UnaryOperationExpression	! env		3344873	0					
ANR	3344925	UnaryOperator	!		3344873	0					
ANR	3344926	Identifier	env		3344873	1					
ANR	3344927	ReturnStatement	return ;	251:6:8285:8291	3344873	1	True				
ANR	3344928	ForStatement	for ( p = env ; * p ; p ++ )		3344873	9					
ANR	3344929	ForInit	p = env ;	253:10:8304:8311	3344873	0	True				
ANR	3344930	AssignmentExpression	p = env		3344873	0		=			
ANR	3344931	Identifier	p		3344873	0					
ANR	3344932	Identifier	env		3344873	1					
ANR	3344933	Condition	* p	253:19:8313:8314	3344873	1	True				
ANR	3344934	UnaryOperationExpression	* p		3344873	0					
ANR	3344935	UnaryOperator	*		3344873	0					
ANR	3344936	Identifier	p		3344873	1					
ANR	3344937	PostIncDecOperationExpression	p ++	253:23:8317:8319	3344873	2	True				
ANR	3344938	Identifier	p		3344873	0					
ANR	3344939	IncDec	++		3344873	1					
ANR	3344940	CompoundStatement		18:4:311:311	3344873	3					
ANR	3344941	IfStatement	if ( * p == ' ' || * p == '\\t' )		3344873	0					
ANR	3344942	Condition	* p == ' ' || * p == '\\t'	256:11:8391:8413	3344873	0	True				
ANR	3344943	OrExpression	* p == ' ' || * p == '\\t'		3344873	0		||			
ANR	3344944	EqualityExpression	* p == ' '		3344873	0		==			
ANR	3344945	UnaryOperationExpression	* p		3344873	0					
ANR	3344946	UnaryOperator	*		3344873	0					
ANR	3344947	Identifier	p		3344873	1					
ANR	3344948	PrimaryExpression	' '		3344873	1					
ANR	3344949	EqualityExpression	* p == '\\t'		3344873	1		==			
ANR	3344950	UnaryOperationExpression	* p		3344873	0					
ANR	3344951	UnaryOperator	*		3344873	0					
ANR	3344952	Identifier	p		3344873	1					
ANR	3344953	PrimaryExpression	'\\t'		3344873	1					
ANR	3344954	ContinueStatement	continue ;	257:8:8425:8433	3344873	1	True				
ANR	3344955	ExpressionStatement	q = p	260:6:8488:8493	3344873	1	True				
ANR	3344956	AssignmentExpression	q = p		3344873	0		=			
ANR	3344957	Identifier	q		3344873	0					
ANR	3344958	Identifier	p		3344873	1					
ANR	3344959	ForStatement	for ( i = 0 ; i < MAX_LENGTH ; i ++ )		3344873	2					
ANR	3344960	ForInit	i = 0 ;	261:12:8507:8512	3344873	0	True				
ANR	3344961	AssignmentExpression	i = 0		3344873	0		=			
ANR	3344962	Identifier	i		3344873	0					
ANR	3344963	PrimaryExpression	0		3344873	1					
ANR	3344964	Condition	i < MAX_LENGTH	261:19:8514:8527	3344873	1	True				
ANR	3344965	RelationalExpression	i < MAX_LENGTH		3344873	0		<			
ANR	3344966	Identifier	i		3344873	0					
ANR	3344967	Identifier	MAX_LENGTH		3344873	1					
ANR	3344968	PostIncDecOperationExpression	i ++	261:35:8530:8532	3344873	2	True				
ANR	3344969	Identifier	i		3344873	0					
ANR	3344970	IncDec	++		3344873	1					
ANR	3344971	CompoundStatement		26:6:526:526	3344873	3					
ANR	3344972	IfStatement	if ( ! * p || * p == ':' )		3344873	0					
ANR	3344973	Condition	! * p || * p == ':'	263:13:8557:8572	3344873	0	True				
ANR	3344974	OrExpression	! * p || * p == ':'		3344873	0		||			
ANR	3344975	UnaryOperationExpression	! * p		3344873	0					
ANR	3344976	UnaryOperator	!		3344873	0					
ANR	3344977	UnaryOperationExpression	* p		3344873	1					
ANR	3344978	UnaryOperator	*		3344873	0					
ANR	3344979	Identifier	p		3344873	1					
ANR	3344980	EqualityExpression	* p == ':'		3344873	1		==			
ANR	3344981	UnaryOperationExpression	* p		3344873	0					
ANR	3344982	UnaryOperator	*		3344873	0					
ANR	3344983	Identifier	p		3344873	1					
ANR	3344984	PrimaryExpression	':'		3344873	1					
ANR	3344985	BreakStatement	break ;	264:10:8586:8591	3344873	1	True				
ANR	3344986	ExpressionStatement	module_name [ i ] = * p ++	265:8:8601:8622	3344873	1	True				
ANR	3344987	AssignmentExpression	module_name [ i ] = * p ++		3344873	0		=			
ANR	3344988	ArrayIndexing	module_name [ i ]		3344873	0					
ANR	3344989	Identifier	module_name		3344873	0					
ANR	3344990	Identifier	i		3344873	1					
ANR	3344991	UnaryOperationExpression	* p ++		3344873	1					
ANR	3344992	UnaryOperator	*		3344873	0					
ANR	3344993	PostIncDecOperationExpression	p ++		3344873	1					
ANR	3344994	Identifier	p		3344873	0					
ANR	3344995	IncDec	++		3344873	1					
ANR	3344996	ExpressionStatement	module_name [ i ] = '\\0'	267:6:8638:8659	3344873	3	True				
ANR	3344997	AssignmentExpression	module_name [ i ] = '\\0'		3344873	0		=			
ANR	3344998	ArrayIndexing	module_name [ i ]		3344873	0					
ANR	3344999	Identifier	module_name		3344873	0					
ANR	3345000	Identifier	i		3344873	1					
ANR	3345001	PrimaryExpression	'\\0'		3344873	1					
ANR	3345002	IfStatement	if ( ! * p || * p != ':' || p == q )		3344873	4					
ANR	3345003	Condition	! * p || * p != ':' || p == q	269:11:8673:8698	3344873	0	True				
ANR	3345004	OrExpression	! * p || * p != ':' || p == q		3344873	0		||			
ANR	3345005	UnaryOperationExpression	! * p		3344873	0					
ANR	3345006	UnaryOperator	!		3344873	0					
ANR	3345007	UnaryOperationExpression	* p		3344873	1					
ANR	3345008	UnaryOperator	*		3344873	0					
ANR	3345009	Identifier	p		3344873	1					
ANR	3345010	OrExpression	* p != ':' || p == q		3344873	1		||			
ANR	3345011	EqualityExpression	* p != ':'		3344873	0		!=			
ANR	3345012	UnaryOperationExpression	* p		3344873	0					
ANR	3345013	UnaryOperator	*		3344873	0					
ANR	3345014	Identifier	p		3344873	1					
ANR	3345015	PrimaryExpression	':'		3344873	1					
ANR	3345016	EqualityExpression	p == q		3344873	1		==			
ANR	3345017	Identifier	p		3344873	0					
ANR	3345018	Identifier	q		3344873	1					
ANR	3345019	BreakStatement	break ;	270:8:8710:8715	3344873	1	True				
ANR	3345020	ExpressionStatement	q = ++ p	273:6:8772:8779	3344873	5	True				
ANR	3345021	AssignmentExpression	q = ++ p		3344873	0		=			
ANR	3345022	Identifier	q		3344873	0					
ANR	3345023	UnaryExpression	++ p		3344873	1					
ANR	3345024	IncDec	++		3344873	0					
ANR	3345025	Identifier	p		3344873	1					
ANR	3345026	ForStatement	for ( i = 0 ; i < MAX_LENGTH ; i ++ )		3344873	6					
ANR	3345027	ForInit	i = 0 ;	274:12:8793:8798	3344873	0	True				
ANR	3345028	AssignmentExpression	i = 0		3344873	0		=			
ANR	3345029	Identifier	i		3344873	0					
ANR	3345030	PrimaryExpression	0		3344873	1					
ANR	3345031	Condition	i < MAX_LENGTH	274:19:8800:8813	3344873	1	True				
ANR	3345032	RelationalExpression	i < MAX_LENGTH		3344873	0		<			
ANR	3345033	Identifier	i		3344873	0					
ANR	3345034	Identifier	MAX_LENGTH		3344873	1					
ANR	3345035	PostIncDecOperationExpression	i ++	274:35:8816:8818	3344873	2	True				
ANR	3345036	Identifier	i		3344873	0					
ANR	3345037	IncDec	++		3344873	1					
ANR	3345038	CompoundStatement		39:6:812:812	3344873	3					
ANR	3345039	IfStatement	if ( ! * p || * p == '=' )		3344873	0					
ANR	3345040	Condition	! * p || * p == '='	276:13:8843:8858	3344873	0	True				
ANR	3345041	OrExpression	! * p || * p == '='		3344873	0		||			
ANR	3345042	UnaryOperationExpression	! * p		3344873	0					
ANR	3345043	UnaryOperator	!		3344873	0					
ANR	3345044	UnaryOperationExpression	* p		3344873	1					
ANR	3345045	UnaryOperator	*		3344873	0					
ANR	3345046	Identifier	p		3344873	1					
ANR	3345047	EqualityExpression	* p == '='		3344873	1		==			
ANR	3345048	UnaryOperationExpression	* p		3344873	0					
ANR	3345049	UnaryOperator	*		3344873	0					
ANR	3345050	Identifier	p		3344873	1					
ANR	3345051	PrimaryExpression	'='		3344873	1					
ANR	3345052	BreakStatement	break ;	277:10:8872:8877	3344873	1	True				
ANR	3345053	ExpressionStatement	property_name [ i ] = * p ++	278:8:8887:8910	3344873	1	True				
ANR	3345054	AssignmentExpression	property_name [ i ] = * p ++		3344873	0		=			
ANR	3345055	ArrayIndexing	property_name [ i ]		3344873	0					
ANR	3345056	Identifier	property_name		3344873	0					
ANR	3345057	Identifier	i		3344873	1					
ANR	3345058	UnaryOperationExpression	* p ++		3344873	1					
ANR	3345059	UnaryOperator	*		3344873	0					
ANR	3345060	PostIncDecOperationExpression	p ++		3344873	1					
ANR	3345061	Identifier	p		3344873	0					
ANR	3345062	IncDec	++		3344873	1					
ANR	3345063	ExpressionStatement	property_name [ i ] = '\\0'	280:6:8926:8949	3344873	7	True				
ANR	3345064	AssignmentExpression	property_name [ i ] = '\\0'		3344873	0		=			
ANR	3345065	ArrayIndexing	property_name [ i ]		3344873	0					
ANR	3345066	Identifier	property_name		3344873	0					
ANR	3345067	Identifier	i		3344873	1					
ANR	3345068	PrimaryExpression	'\\0'		3344873	1					
ANR	3345069	IfStatement	if ( ! * p || * p != '=' || p == q )		3344873	8					
ANR	3345070	Condition	! * p || * p != '=' || p == q	282:11:8963:8988	3344873	0	True				
ANR	3345071	OrExpression	! * p || * p != '=' || p == q		3344873	0		||			
ANR	3345072	UnaryOperationExpression	! * p		3344873	0					
ANR	3345073	UnaryOperator	!		3344873	0					
ANR	3345074	UnaryOperationExpression	* p		3344873	1					
ANR	3345075	UnaryOperator	*		3344873	0					
ANR	3345076	Identifier	p		3344873	1					
ANR	3345077	OrExpression	* p != '=' || p == q		3344873	1		||			
ANR	3345078	EqualityExpression	* p != '='		3344873	0		!=			
ANR	3345079	UnaryOperationExpression	* p		3344873	0					
ANR	3345080	UnaryOperator	*		3344873	0					
ANR	3345081	Identifier	p		3344873	1					
ANR	3345082	PrimaryExpression	'='		3344873	1					
ANR	3345083	EqualityExpression	p == q		3344873	1		==			
ANR	3345084	Identifier	p		3344873	0					
ANR	3345085	Identifier	q		3344873	1					
ANR	3345086	BreakStatement	break ;	283:8:9000:9005	3344873	1	True				
ANR	3345087	ExpressionStatement	q = ++ p	286:6:9079:9086	3344873	9	True				
ANR	3345088	AssignmentExpression	q = ++ p		3344873	0		=			
ANR	3345089	Identifier	q		3344873	0					
ANR	3345090	UnaryExpression	++ p		3344873	1					
ANR	3345091	IncDec	++		3344873	0					
ANR	3345092	Identifier	p		3344873	1					
ANR	3345093	ForStatement	for ( i = 0 ; i < MAX_LENGTH ; i ++ )		3344873	10					
ANR	3345094	ForInit	i = 0 ;	287:12:9100:9105	3344873	0	True				
ANR	3345095	AssignmentExpression	i = 0		3344873	0		=			
ANR	3345096	Identifier	i		3344873	0					
ANR	3345097	PrimaryExpression	0		3344873	1					
ANR	3345098	Condition	i < MAX_LENGTH	287:19:9107:9120	3344873	1	True				
ANR	3345099	RelationalExpression	i < MAX_LENGTH		3344873	0		<			
ANR	3345100	Identifier	i		3344873	0					
ANR	3345101	Identifier	MAX_LENGTH		3344873	1					
ANR	3345102	PostIncDecOperationExpression	i ++	287:35:9123:9125	3344873	2	True				
ANR	3345103	Identifier	i		3344873	0					
ANR	3345104	IncDec	++		3344873	1					
ANR	3345105	CompoundStatement		52:6:1119:1119	3344873	3					
ANR	3345106	IfStatement	if ( ! * p || * p == ' ' || * p == '\\t' )		3344873	0					
ANR	3345107	Condition	! * p || * p == ' ' || * p == '\\t'	289:13:9150:9179	3344873	0	True				
ANR	3345108	OrExpression	! * p || * p == ' ' || * p == '\\t'		3344873	0		||			
ANR	3345109	UnaryOperationExpression	! * p		3344873	0					
ANR	3345110	UnaryOperator	!		3344873	0					
ANR	3345111	UnaryOperationExpression	* p		3344873	1					
ANR	3345112	UnaryOperator	*		3344873	0					
ANR	3345113	Identifier	p		3344873	1					
ANR	3345114	OrExpression	* p == ' ' || * p == '\\t'		3344873	1		||			
ANR	3345115	EqualityExpression	* p == ' '		3344873	0		==			
ANR	3345116	UnaryOperationExpression	* p		3344873	0					
ANR	3345117	UnaryOperator	*		3344873	0					
ANR	3345118	Identifier	p		3344873	1					
ANR	3345119	PrimaryExpression	' '		3344873	1					
ANR	3345120	EqualityExpression	* p == '\\t'		3344873	1		==			
ANR	3345121	UnaryOperationExpression	* p		3344873	0					
ANR	3345122	UnaryOperator	*		3344873	0					
ANR	3345123	Identifier	p		3344873	1					
ANR	3345124	PrimaryExpression	'\\t'		3344873	1					
ANR	3345125	BreakStatement	break ;	290:10:9193:9198	3344873	1	True				
ANR	3345126	ExpressionStatement	property_value [ i ] = * p ++	291:8:9208:9232	3344873	1	True				
ANR	3345127	AssignmentExpression	property_value [ i ] = * p ++		3344873	0		=			
ANR	3345128	ArrayIndexing	property_value [ i ]		3344873	0					
ANR	3345129	Identifier	property_value		3344873	0					
ANR	3345130	Identifier	i		3344873	1					
ANR	3345131	UnaryOperationExpression	* p ++		3344873	1					
ANR	3345132	UnaryOperator	*		3344873	0					
ANR	3345133	PostIncDecOperationExpression	p ++		3344873	1					
ANR	3345134	Identifier	p		3344873	0					
ANR	3345135	IncDec	++		3344873	1					
ANR	3345136	ExpressionStatement	property_value [ i ] = '\\0'	293:6:9248:9272	3344873	11	True				
ANR	3345137	AssignmentExpression	property_value [ i ] = '\\0'		3344873	0		=			
ANR	3345138	ArrayIndexing	property_value [ i ]		3344873	0					
ANR	3345139	Identifier	property_value		3344873	0					
ANR	3345140	Identifier	i		3344873	1					
ANR	3345141	PrimaryExpression	'\\0'		3344873	1					
ANR	3345142	IfStatement	if ( ! ( * p == '\\0' || * p == ' ' || * p == '\\t' ) || p == q )		3344873	12					
ANR	3345143	Condition	! ( * p == '\\0' || * p == ' ' || * p == '\\t' ) || p == q	295:11:9286:9337	3344873	0	True				
ANR	3345144	OrExpression	! ( * p == '\\0' || * p == ' ' || * p == '\\t' ) || p == q		3344873	0		||			
ANR	3345145	UnaryOperationExpression	! ( * p == '\\0' || * p == ' ' || * p == '\\t' )		3344873	0					
ANR	3345146	UnaryOperator	!		3344873	0					
ANR	3345147	OrExpression	* p == '\\0' || * p == ' ' || * p == '\\t'		3344873	1		||			
ANR	3345148	EqualityExpression	* p == '\\0'		3344873	0		==			
ANR	3345149	UnaryOperationExpression	* p		3344873	0					
ANR	3345150	UnaryOperator	*		3344873	0					
ANR	3345151	Identifier	p		3344873	1					
ANR	3345152	PrimaryExpression	'\\0'		3344873	1					
ANR	3345153	OrExpression	* p == ' ' || * p == '\\t'		3344873	1		||			
ANR	3345154	EqualityExpression	* p == ' '		3344873	0		==			
ANR	3345155	UnaryOperationExpression	* p		3344873	0					
ANR	3345156	UnaryOperator	*		3344873	0					
ANR	3345157	Identifier	p		3344873	1					
ANR	3345158	PrimaryExpression	' '		3344873	1					
ANR	3345159	EqualityExpression	* p == '\\t'		3344873	1		==			
ANR	3345160	UnaryOperationExpression	* p		3344873	0					
ANR	3345161	UnaryOperator	*		3344873	0					
ANR	3345162	Identifier	p		3344873	1					
ANR	3345163	PrimaryExpression	'\\t'		3344873	1					
ANR	3345164	EqualityExpression	p == q		3344873	1		==			
ANR	3345165	Identifier	p		3344873	0					
ANR	3345166	Identifier	q		3344873	1					
ANR	3345167	BreakStatement	break ;	296:8:9349:9354	3344873	1	True				
ANR	3345168	ExpressionStatement	"ft_property_string_set ( library , module_name , property_name , property_value )"	299:6:9403:9570	3344873	13	True				
ANR	3345169	CallExpression	"ft_property_string_set ( library , module_name , property_name , property_value )"		3344873	0					
ANR	3345170	Callee	ft_property_string_set		3344873	0					
ANR	3345171	Identifier	ft_property_string_set		3344873	0					
ANR	3345172	ArgumentList	library		3344873	1					
ANR	3345173	Argument	library		3344873	0					
ANR	3345174	Identifier	library		3344873	0					
ANR	3345175	Argument	module_name		3344873	1					
ANR	3345176	Identifier	module_name		3344873	0					
ANR	3345177	Argument	property_name		3344873	2					
ANR	3345178	Identifier	property_name		3344873	0					
ANR	3345179	Argument	property_value		3344873	3					
ANR	3345180	Identifier	property_value		3344873	0					
ANR	3345181	Identifier	FT_Set_Default_Properties		3344873	1					
ANR	3345182	ParameterList	FT_Library library		3344873	2					
ANR	3345183	Parameter	FT_Library library	236:29:7991:8009	3344873	0	True				
ANR	3345184	ParameterType	FT_Library		3344873	0					
ANR	3345185	Identifier	library		3344873	1					
ANR	3345186	CFGEntryNode	ENTRY		3344873		True				
ANR	3345187	CFGExitNode	EXIT		3344873		True				
ANR	3345188	Symbol	* p ++		3344873						
ANR	3345189	Symbol	i		3344873						
ANR	3345190	Symbol	property_value		3344873						
ANR	3345191	Symbol	env		3344873						
ANR	3345192	Symbol	* property_name		3344873						
ANR	3345193	Symbol	ft_getenv		3344873						
ANR	3345194	Symbol	MAX_LENGTH		3344873						
ANR	3345195	Symbol	property_name		3344873						
ANR	3345196	Symbol	p		3344873						
ANR	3345197	Symbol	q		3344873						
ANR	3345198	Symbol	* module_name		3344873						
ANR	3345199	Symbol	library		3344873						
ANR	3345200	Symbol	* i		3344873						
ANR	3345201	Symbol	* property_value		3344873						
ANR	3345202	Symbol	* p		3344873						
ANR	3345203	Symbol	module_name		3344873						
ANR	3345204	Function	FT_Set_Default_Properties	309:2:9616:9697							
ANR	3345205	FunctionDef	FT_Set_Default_Properties (FT_Library library)		3345204	0					
ANR	3345206	CompoundStatement		310:2:9667:9697	3345204	0					
ANR	3345207	ExpressionStatement	FT_UNUSED ( library )	311:4:9673:9693	3345204	0	True				
ANR	3345208	CallExpression	FT_UNUSED ( library )		3345204	0					
ANR	3345209	Callee	FT_UNUSED		3345204	0					
ANR	3345210	Identifier	FT_UNUSED		3345204	0					
ANR	3345211	ArgumentList	library		3345204	1					
ANR	3345212	Argument	library		3345204	0					
ANR	3345213	Identifier	library		3345204	0					
ANR	3345214	Identifier	FT_Set_Default_Properties		3345204	1					
ANR	3345215	ParameterList	FT_Library library		3345204	2					
ANR	3345216	Parameter	FT_Library library	309:29:9643:9661	3345204	0	True				
ANR	3345217	ParameterType	FT_Library		3345204	0					
ANR	3345218	Identifier	library		3345204	1					
ANR	3345219	CFGEntryNode	ENTRY		3345204		True				
ANR	3345220	CFGExitNode	EXIT		3345204		True				
ANR	3345221	Symbol	library		3345204						
ANR	3345222	Function	FT_Init_FreeType	320:2:9779:10616							
ANR	3345223	FunctionDef	FT_Init_FreeType (FT_Library * alibrary)		3345222	0					
ANR	3345224	CompoundStatement		321:2:9823:10616	3345222	0					
ANR	3345225	IdentifierDeclStatement	FT_Error error ;	322:4:9829:9845	3345222	0	True				
ANR	3345226	IdentifierDecl	error		3345222	0					
ANR	3345227	IdentifierDeclType	FT_Error		3345222	0					
ANR	3345228	Identifier	error		3345222	1					
ANR	3345229	IdentifierDeclStatement	FT_Memory memory ;	323:4:9851:9868	3345222	1	True				
ANR	3345230	IdentifierDecl	memory		3345222	0					
ANR	3345231	IdentifierDeclType	FT_Memory		3345222	0					
ANR	3345232	Identifier	memory		3345222	1					
ANR	3345233	ExpressionStatement	memory = FT_New_Memory ( )	331:4:10092:10116	3345222	2	True				
ANR	3345234	AssignmentExpression	memory = FT_New_Memory ( )		3345222	0		=			
ANR	3345235	Identifier	memory		3345222	0					
ANR	3345236	CallExpression	FT_New_Memory ( )		3345222	1					
ANR	3345237	Callee	FT_New_Memory		3345222	0					
ANR	3345238	Identifier	FT_New_Memory		3345222	0					
ANR	3345239	ArgumentList			3345222	1					
ANR	3345240	IfStatement	if ( ! memory )		3345222	3					
ANR	3345241	Condition	! memory	332:9:10127:10133	3345222	0	True				
ANR	3345242	UnaryOperationExpression	! memory		3345222	0					
ANR	3345243	UnaryOperator	!		3345222	0					
ANR	3345244	Identifier	memory		3345222	1					
ANR	3345245	CompoundStatement		13:4:317:317	3345222	1					
ANR	3345246	ExpressionStatement	"FT_ERROR ( ( ""FT_Init_FreeType: cannot find memory manager\\n"" ) )"	334:6:10149:10211	3345222	0	True				
ANR	3345247	CallExpression	"FT_ERROR ( ( ""FT_Init_FreeType: cannot find memory manager\\n"" ) )"		3345222	0					
ANR	3345248	Callee	FT_ERROR		3345222	0					
ANR	3345249	Identifier	FT_ERROR		3345222	0					
ANR	3345250	ArgumentList	"""FT_Init_FreeType: cannot find memory manager\\n"""		3345222	1					
ANR	3345251	Argument	"""FT_Init_FreeType: cannot find memory manager\\n"""		3345222	0					
ANR	3345252	PrimaryExpression	"""FT_Init_FreeType: cannot find memory manager\\n"""		3345222	0					
ANR	3345253	ReturnStatement	return FT_THROW ( Unimplemented_Feature ) ;	335:6:10219:10259	3345222	1	True				
ANR	3345254	CallExpression	FT_THROW ( Unimplemented_Feature )		3345222	0					
ANR	3345255	Callee	FT_THROW		3345222	0					
ANR	3345256	Identifier	FT_THROW		3345222	0					
ANR	3345257	ArgumentList	Unimplemented_Feature		3345222	1					
ANR	3345258	Argument	Unimplemented_Feature		3345222	0					
ANR	3345259	Identifier	Unimplemented_Feature		3345222	0					
ANR	3345260	ExpressionStatement	"error = FT_New_Library ( memory , alibrary )"	341:4:10405:10447	3345222	4	True				
ANR	3345261	AssignmentExpression	"error = FT_New_Library ( memory , alibrary )"		3345222	0		=			
ANR	3345262	Identifier	error		3345222	0					
ANR	3345263	CallExpression	"FT_New_Library ( memory , alibrary )"		3345222	1					
ANR	3345264	Callee	FT_New_Library		3345222	0					
ANR	3345265	Identifier	FT_New_Library		3345222	0					
ANR	3345266	ArgumentList	memory		3345222	1					
ANR	3345267	Argument	memory		3345222	0					
ANR	3345268	Identifier	memory		3345222	0					
ANR	3345269	Argument	alibrary		3345222	1					
ANR	3345270	Identifier	alibrary		3345222	0					
ANR	3345271	IfStatement	if ( error )		3345222	5					
ANR	3345272	Condition	error	342:9:10458:10462	3345222	0	True				
ANR	3345273	Identifier	error		3345222	0					
ANR	3345274	ExpressionStatement	FT_Done_Memory ( memory )	343:6:10472:10496	3345222	1	True				
ANR	3345275	CallExpression	FT_Done_Memory ( memory )		3345222	0					
ANR	3345276	Callee	FT_Done_Memory		3345222	0					
ANR	3345277	Identifier	FT_Done_Memory		3345222	0					
ANR	3345278	ArgumentList	memory		3345222	1					
ANR	3345279	Argument	memory		3345222	0					
ANR	3345280	Identifier	memory		3345222	0					
ANR	3345281	ElseStatement	else		3345222	0					
ANR	3345282	ExpressionStatement	FT_Add_Default_Modules ( * alibrary )	345:6:10513:10548	3345222	0	True				
ANR	3345283	CallExpression	FT_Add_Default_Modules ( * alibrary )		3345222	0					
ANR	3345284	Callee	FT_Add_Default_Modules		3345222	0					
ANR	3345285	Identifier	FT_Add_Default_Modules		3345222	0					
ANR	3345286	ArgumentList	* alibrary		3345222	1					
ANR	3345287	Argument	* alibrary		3345222	0					
ANR	3345288	UnaryOperationExpression	* alibrary		3345222	0					
ANR	3345289	UnaryOperator	*		3345222	0					
ANR	3345290	Identifier	alibrary		3345222	1					
ANR	3345291	ExpressionStatement	FT_Set_Default_Properties ( * alibrary )	347:4:10555:10593	3345222	6	True				
ANR	3345292	CallExpression	FT_Set_Default_Properties ( * alibrary )		3345222	0					
ANR	3345293	Callee	FT_Set_Default_Properties		3345222	0					
ANR	3345294	Identifier	FT_Set_Default_Properties		3345222	0					
ANR	3345295	ArgumentList	* alibrary		3345222	1					
ANR	3345296	Argument	* alibrary		3345222	0					
ANR	3345297	UnaryOperationExpression	* alibrary		3345222	0					
ANR	3345298	UnaryOperator	*		3345222	0					
ANR	3345299	Identifier	alibrary		3345222	1					
ANR	3345300	ReturnStatement	return error ;	349:4:10600:10612	3345222	7	True				
ANR	3345301	Identifier	error		3345222	0					
ANR	3345302	Identifier	FT_Init_FreeType		3345222	1					
ANR	3345303	ParameterList	FT_Library * alibrary		3345222	2					
ANR	3345304	Parameter	FT_Library * alibrary	320:20:9797:9817	3345222	0	True				
ANR	3345305	ParameterType	FT_Library *		3345222	0					
ANR	3345306	Identifier	alibrary		3345222	1					
ANR	3345307	CFGEntryNode	ENTRY		3345222		True				
ANR	3345308	CFGExitNode	EXIT		3345222		True				
ANR	3345309	Symbol	alibrary		3345222						
ANR	3345310	Symbol	FT_New_Memory		3345222						
ANR	3345311	Symbol	memory		3345222						
ANR	3345312	Symbol	Unimplemented_Feature		3345222						
ANR	3345313	Symbol	* alibrary		3345222						
ANR	3345314	Symbol	error		3345222						
ANR	3345315	Symbol	FT_New_Library		3345222						
ANR	3345316	Symbol	FT_THROW		3345222						
ANR	3345317	Function	FT_Done_FreeType	356:2:10690:11018							
ANR	3345318	FunctionDef	FT_Done_FreeType (FT_Library library)		3345317	0					
ANR	3345319	CompoundStatement		357:2:10732:11018	3345317	0					
ANR	3345320	IdentifierDeclStatement	FT_Memory memory ;	358:4:10738:10755	3345317	0	True				
ANR	3345321	IdentifierDecl	memory		3345317	0					
ANR	3345322	IdentifierDeclType	FT_Memory		3345317	0					
ANR	3345323	Identifier	memory		3345317	1					
ANR	3345324	IfStatement	if ( ! library )		3345317	1					
ANR	3345325	Condition	! library	361:9:10768:10775	3345317	0	True				
ANR	3345326	UnaryOperationExpression	! library		3345317	0					
ANR	3345327	UnaryOperator	!		3345317	0					
ANR	3345328	Identifier	library		3345317	1					
ANR	3345329	ReturnStatement	return FT_THROW ( Invalid_Library_Handle ) ;	362:6:10785:10826	3345317	1	True				
ANR	3345330	CallExpression	FT_THROW ( Invalid_Library_Handle )		3345317	0					
ANR	3345331	Callee	FT_THROW		3345317	0					
ANR	3345332	Identifier	FT_THROW		3345317	0					
ANR	3345333	ArgumentList	Invalid_Library_Handle		3345317	1					
ANR	3345334	Argument	Invalid_Library_Handle		3345317	0					
ANR	3345335	Identifier	Invalid_Library_Handle		3345317	0					
ANR	3345336	ExpressionStatement	memory = library -> memory	364:4:10833:10857	3345317	2	True				
ANR	3345337	AssignmentExpression	memory = library -> memory		3345317	0		=			
ANR	3345338	Identifier	memory		3345317	0					
ANR	3345339	PtrMemberAccess	library -> memory		3345317	1					
ANR	3345340	Identifier	library		3345317	0					
ANR	3345341	Identifier	memory		3345317	1					
ANR	3345342	ExpressionStatement	FT_Done_Library ( library )	367:4:10901:10927	3345317	3	True				
ANR	3345343	CallExpression	FT_Done_Library ( library )		3345317	0					
ANR	3345344	Callee	FT_Done_Library		3345317	0					
ANR	3345345	Identifier	FT_Done_Library		3345317	0					
ANR	3345346	ArgumentList	library		3345317	1					
ANR	3345347	Argument	library		3345317	0					
ANR	3345348	Identifier	library		3345317	0					
ANR	3345349	ExpressionStatement	FT_Done_Memory ( memory )	370:4:10967:10991	3345317	4	True				
ANR	3345350	CallExpression	FT_Done_Memory ( memory )		3345317	0					
ANR	3345351	Callee	FT_Done_Memory		3345317	0					
ANR	3345352	Identifier	FT_Done_Memory		3345317	0					
ANR	3345353	ArgumentList	memory		3345317	1					
ANR	3345354	Argument	memory		3345317	0					
ANR	3345355	Identifier	memory		3345317	0					
ANR	3345356	ReturnStatement	return FT_Err_Ok ;	372:4:10998:11014	3345317	5	True				
ANR	3345357	Identifier	FT_Err_Ok		3345317	0					
ANR	3345358	Identifier	FT_Done_FreeType		3345317	1					
ANR	3345359	ParameterList	FT_Library library		3345317	2					
ANR	3345360	Parameter	FT_Library library	356:20:10708:10726	3345317	0	True				
ANR	3345361	ParameterType	FT_Library		3345317	0					
ANR	3345362	Identifier	library		3345317	1					
ANR	3345363	CFGEntryNode	ENTRY		3345317		True				
ANR	3345364	CFGExitNode	EXIT		3345317		True				
ANR	3345365	Symbol	* library		3345317						
ANR	3345366	Symbol	library		3345317						
ANR	3345367	Symbol	memory		3345317						
ANR	3345368	Symbol	FT_Err_Ok		3345317						
ANR	3345369	Symbol	Invalid_Library_Handle		3345317						
ANR	3345370	Symbol	library -> memory		3345317						
ANR	3345371	Symbol	FT_THROW		3345317						
