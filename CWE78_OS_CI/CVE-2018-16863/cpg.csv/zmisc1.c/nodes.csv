command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11249733	File	data/converged/CVE-2018-16863_ghostpdl/zmisc1.c								
ANR	11249734	DeclStmt									
ANR	11249735	Decl							int	"int ( i_ctx_t * , int ( * ) ( byte * , const byte * , uint , ushort * ) )"	type1crypt
ANR	11249736	Function	ztype1encrypt	33:0:1125:1220							
ANR	11249737	FunctionDef	ztype1encrypt (i_ctx_t * i_ctx_p)		11249736	0					
ANR	11249738	CompoundStatement		35:0:1168:1220	11249736	0					
ANR	11249739	ReturnStatement	"return type1crypt ( i_ctx_p , gs_type1_encrypt ) ;"	36:4:1174:1218	11249736	0	True				
ANR	11249740	CallExpression	"type1crypt ( i_ctx_p , gs_type1_encrypt )"		11249736	0					
ANR	11249741	Callee	type1crypt		11249736	0					
ANR	11249742	Identifier	type1crypt		11249736	0					
ANR	11249743	ArgumentList	i_ctx_p		11249736	1					
ANR	11249744	Argument	i_ctx_p		11249736	0					
ANR	11249745	Identifier	i_ctx_p		11249736	0					
ANR	11249746	Argument	gs_type1_encrypt		11249736	1					
ANR	11249747	Identifier	gs_type1_encrypt		11249736	0					
ANR	11249748	ReturnType	static int		11249736	1					
ANR	11249749	Identifier	ztype1encrypt		11249736	2					
ANR	11249750	ParameterList	i_ctx_t * i_ctx_p		11249736	3					
ANR	11249751	Parameter	i_ctx_t * i_ctx_p	34:14:1150:1165	11249736	0	True				
ANR	11249752	ParameterType	i_ctx_t *		11249736	0					
ANR	11249753	Identifier	i_ctx_p		11249736	1					
ANR	11249754	CFGEntryNode	ENTRY		11249736		True				
ANR	11249755	CFGExitNode	EXIT		11249736		True				
ANR	11249756	Symbol	gs_type1_encrypt		11249736						
ANR	11249757	Symbol	i_ctx_p		11249736						
ANR	11249758	Symbol	type1crypt		11249736						
ANR	11249759	Function	ztype1decrypt	38:0:1222:1317							
ANR	11249760	FunctionDef	ztype1decrypt (i_ctx_t * i_ctx_p)		11249759	0					
ANR	11249761	CompoundStatement		40:0:1265:1317	11249759	0					
ANR	11249762	ReturnStatement	"return type1crypt ( i_ctx_p , gs_type1_decrypt ) ;"	41:4:1271:1315	11249759	0	True				
ANR	11249763	CallExpression	"type1crypt ( i_ctx_p , gs_type1_decrypt )"		11249759	0					
ANR	11249764	Callee	type1crypt		11249759	0					
ANR	11249765	Identifier	type1crypt		11249759	0					
ANR	11249766	ArgumentList	i_ctx_p		11249759	1					
ANR	11249767	Argument	i_ctx_p		11249759	0					
ANR	11249768	Identifier	i_ctx_p		11249759	0					
ANR	11249769	Argument	gs_type1_decrypt		11249759	1					
ANR	11249770	Identifier	gs_type1_decrypt		11249759	0					
ANR	11249771	ReturnType	static int		11249759	1					
ANR	11249772	Identifier	ztype1decrypt		11249759	2					
ANR	11249773	ParameterList	i_ctx_t * i_ctx_p		11249759	3					
ANR	11249774	Parameter	i_ctx_t * i_ctx_p	39:14:1247:1262	11249759	0	True				
ANR	11249775	ParameterType	i_ctx_t *		11249759	0					
ANR	11249776	Identifier	i_ctx_p		11249759	1					
ANR	11249777	CFGEntryNode	ENTRY		11249759		True				
ANR	11249778	CFGExitNode	EXIT		11249759		True				
ANR	11249779	Symbol	gs_type1_decrypt		11249759						
ANR	11249780	Symbol	i_ctx_p		11249759						
ANR	11249781	Symbol	type1crypt		11249759						
ANR	11249782	Function	type1crypt	43:0:1319:2065							
ANR	11249783	FunctionDef	"type1crypt (i_ctx_t * i_ctx_p , int ( * proc ) ( byte * , const byte * , uint , ushort * ))"		11249782	0					
ANR	11249784	CompoundStatement		46:0:1421:2065	11249782	0					
ANR	11249785	IdentifierDeclStatement	os_ptr op = osp ;	47:4:1427:1442	11249782	0	True				
ANR	11249786	IdentifierDecl	op = osp		11249782	0					
ANR	11249787	IdentifierDeclType	os_ptr		11249782	0					
ANR	11249788	Identifier	op		11249782	1					
ANR	11249789	AssignmentExpression	op = osp		11249782	2		=			
ANR	11249790	Identifier	osp		11249782	0					
ANR	11249791	Identifier	osp		11249782	1					
ANR	11249792	IdentifierDeclStatement	crypt_state state ;	48:4:1448:1465	11249782	1	True				
ANR	11249793	IdentifierDecl	state		11249782	0					
ANR	11249794	IdentifierDeclType	crypt_state		11249782	0					
ANR	11249795	Identifier	state		11249782	1					
ANR	11249796	IdentifierDeclStatement	uint ssize ;	49:4:1471:1481	11249782	2	True				
ANR	11249797	IdentifierDecl	ssize		11249782	0					
ANR	11249798	IdentifierDeclType	uint		11249782	0					
ANR	11249799	Identifier	ssize		11249782	1					
ANR	11249800	ExpressionStatement	"check_type ( op [ - 2 ] , t_integer )"	51:4:1488:1517	11249782	3	True				
ANR	11249801	CallExpression	"check_type ( op [ - 2 ] , t_integer )"		11249782	0					
ANR	11249802	Callee	check_type		11249782	0					
ANR	11249803	Identifier	check_type		11249782	0					
ANR	11249804	ArgumentList	op [ - 2 ]		11249782	1					
ANR	11249805	Argument	op [ - 2 ]		11249782	0					
ANR	11249806	ArrayIndexing	op [ - 2 ]		11249782	0					
ANR	11249807	Identifier	op		11249782	0					
ANR	11249808	UnaryOperationExpression	- 2		11249782	1					
ANR	11249809	UnaryOperator	-		11249782	0					
ANR	11249810	PrimaryExpression	2		11249782	1					
ANR	11249811	Argument	t_integer		11249782	1					
ANR	11249812	Identifier	t_integer		11249782	0					
ANR	11249813	ExpressionStatement	state = op [ - 2 ] . value . intval	52:4:1523:1550	11249782	4	True				
ANR	11249814	AssignmentExpression	state = op [ - 2 ] . value . intval		11249782	0		=			
ANR	11249815	Identifier	state		11249782	0					
ANR	11249816	MemberAccess	op [ - 2 ] . value . intval		11249782	1					
ANR	11249817	MemberAccess	op [ - 2 ] . value		11249782	0					
ANR	11249818	ArrayIndexing	op [ - 2 ]		11249782	0					
ANR	11249819	Identifier	op		11249782	0					
ANR	11249820	UnaryOperationExpression	- 2		11249782	1					
ANR	11249821	UnaryOperator	-		11249782	0					
ANR	11249822	PrimaryExpression	2		11249782	1					
ANR	11249823	Identifier	value		11249782	1					
ANR	11249824	Identifier	intval		11249782	1					
ANR	11249825	IfStatement	if ( op [ - 2 ] . value . intval != state )		11249782	5					
ANR	11249826	Condition	op [ - 2 ] . value . intval != state	53:8:1560:1587	11249782	0	True				
ANR	11249827	EqualityExpression	op [ - 2 ] . value . intval != state		11249782	0		!=			
ANR	11249828	MemberAccess	op [ - 2 ] . value . intval		11249782	0					
ANR	11249829	MemberAccess	op [ - 2 ] . value		11249782	0					
ANR	11249830	ArrayIndexing	op [ - 2 ]		11249782	0					
ANR	11249831	Identifier	op		11249782	0					
ANR	11249832	UnaryOperationExpression	- 2		11249782	1					
ANR	11249833	UnaryOperator	-		11249782	0					
ANR	11249834	PrimaryExpression	2		11249782	1					
ANR	11249835	Identifier	value		11249782	1					
ANR	11249836	Identifier	intval		11249782	1					
ANR	11249837	Identifier	state		11249782	1					
ANR	11249838	ExpressionStatement	return_error ( gs_error_rangecheck )	54:8:1598:1631	11249782	1	True				
ANR	11249839	CallExpression	return_error ( gs_error_rangecheck )		11249782	0					
ANR	11249840	Callee	return_error		11249782	0					
ANR	11249841	Identifier	return_error		11249782	0					
ANR	11249842	ArgumentList	gs_error_rangecheck		11249782	1					
ANR	11249843	Argument	gs_error_rangecheck		11249782	0					
ANR	11249844	Identifier	gs_error_rangecheck		11249782	0					
ANR	11249845	ExpressionStatement	"check_read_type ( op [ - 1 ] , t_string )"	55:4:1669:1702	11249782	6	True				
ANR	11249846	CallExpression	"check_read_type ( op [ - 1 ] , t_string )"		11249782	0					
ANR	11249847	Callee	check_read_type		11249782	0					
ANR	11249848	Identifier	check_read_type		11249782	0					
ANR	11249849	ArgumentList	op [ - 1 ]		11249782	1					
ANR	11249850	Argument	op [ - 1 ]		11249782	0					
ANR	11249851	ArrayIndexing	op [ - 1 ]		11249782	0					
ANR	11249852	Identifier	op		11249782	0					
ANR	11249853	UnaryOperationExpression	- 1		11249782	1					
ANR	11249854	UnaryOperator	-		11249782	0					
ANR	11249855	PrimaryExpression	1		11249782	1					
ANR	11249856	Argument	t_string		11249782	1					
ANR	11249857	Identifier	t_string		11249782	0					
ANR	11249858	ExpressionStatement	"check_write_type ( * op , t_string )"	56:4:1708:1739	11249782	7	True				
ANR	11249859	CallExpression	"check_write_type ( * op , t_string )"		11249782	0					
ANR	11249860	Callee	check_write_type		11249782	0					
ANR	11249861	Identifier	check_write_type		11249782	0					
ANR	11249862	ArgumentList	* op		11249782	1					
ANR	11249863	Argument	* op		11249782	0					
ANR	11249864	UnaryOperationExpression	* op		11249782	0					
ANR	11249865	UnaryOperator	*		11249782	0					
ANR	11249866	Identifier	op		11249782	1					
ANR	11249867	Argument	t_string		11249782	1					
ANR	11249868	Identifier	t_string		11249782	0					
ANR	11249869	ExpressionStatement	ssize = r_size ( op - 1 )	57:4:1745:1767	11249782	8	True				
ANR	11249870	AssignmentExpression	ssize = r_size ( op - 1 )		11249782	0		=			
ANR	11249871	Identifier	ssize		11249782	0					
ANR	11249872	CallExpression	r_size ( op - 1 )		11249782	1					
ANR	11249873	Callee	r_size		11249782	0					
ANR	11249874	Identifier	r_size		11249782	0					
ANR	11249875	ArgumentList	op - 1		11249782	1					
ANR	11249876	Argument	op - 1		11249782	0					
ANR	11249877	AdditiveExpression	op - 1		11249782	0		-			
ANR	11249878	Identifier	op		11249782	0					
ANR	11249879	PrimaryExpression	1		11249782	1					
ANR	11249880	IfStatement	if ( r_size ( op ) < ssize )		11249782	9					
ANR	11249881	Condition	r_size ( op ) < ssize	58:8:1777:1794	11249782	0	True				
ANR	11249882	RelationalExpression	r_size ( op ) < ssize		11249782	0		<			
ANR	11249883	CallExpression	r_size ( op )		11249782	0					
ANR	11249884	Callee	r_size		11249782	0					
ANR	11249885	Identifier	r_size		11249782	0					
ANR	11249886	ArgumentList	op		11249782	1					
ANR	11249887	Argument	op		11249782	0					
ANR	11249888	Identifier	op		11249782	0					
ANR	11249889	Identifier	ssize		11249782	1					
ANR	11249890	ExpressionStatement	return_error ( gs_error_rangecheck )	59:8:1805:1838	11249782	1	True				
ANR	11249891	CallExpression	return_error ( gs_error_rangecheck )		11249782	0					
ANR	11249892	Callee	return_error		11249782	0					
ANR	11249893	Identifier	return_error		11249782	0					
ANR	11249894	ArgumentList	gs_error_rangecheck		11249782	1					
ANR	11249895	Argument	gs_error_rangecheck		11249782	0					
ANR	11249896	Identifier	gs_error_rangecheck		11249782	0					
ANR	11249897	ExpressionStatement	"discard ( ( * proc ) ( op -> value . bytes , op [ - 1 ] . value . const_bytes , ssize , & state ) )"	60:4:1844:1938	11249782	10	True				
ANR	11249898	CallExpression	"discard ( ( * proc ) ( op -> value . bytes , op [ - 1 ] . value . const_bytes , ssize , & state ) )"		11249782	0					
ANR	11249899	Callee	discard		11249782	0					
ANR	11249900	Identifier	discard		11249782	0					
ANR	11249901	ArgumentList	"( * proc ) ( op -> value . bytes , op [ - 1 ] . value . const_bytes , ssize , & state )"		11249782	1					
ANR	11249902	Argument	"( * proc ) ( op -> value . bytes , op [ - 1 ] . value . const_bytes , ssize , & state )"		11249782	0					
ANR	11249903	CallExpression	"( * proc ) ( op -> value . bytes , op [ - 1 ] . value . const_bytes , ssize , & state )"		11249782	0					
ANR	11249904	Callee	* proc		11249782	0					
ANR	11249905	UnaryOperationExpression	* proc		11249782	0					
ANR	11249906	UnaryOperator	*		11249782	0					
ANR	11249907	Identifier	proc		11249782	1					
ANR	11249908	ArgumentList	op -> value . bytes		11249782	1					
ANR	11249909	Argument	op -> value . bytes		11249782	0					
ANR	11249910	MemberAccess	op -> value . bytes		11249782	0					
ANR	11249911	PtrMemberAccess	op -> value		11249782	0					
ANR	11249912	Identifier	op		11249782	0					
ANR	11249913	Identifier	value		11249782	1					
ANR	11249914	Identifier	bytes		11249782	1					
ANR	11249915	Argument	op [ - 1 ] . value . const_bytes		11249782	1					
ANR	11249916	MemberAccess	op [ - 1 ] . value . const_bytes		11249782	0					
ANR	11249917	MemberAccess	op [ - 1 ] . value		11249782	0					
ANR	11249918	ArrayIndexing	op [ - 1 ]		11249782	0					
ANR	11249919	Identifier	op		11249782	0					
ANR	11249920	UnaryOperationExpression	- 1		11249782	1					
ANR	11249921	UnaryOperator	-		11249782	0					
ANR	11249922	PrimaryExpression	1		11249782	1					
ANR	11249923	Identifier	value		11249782	1					
ANR	11249924	Identifier	const_bytes		11249782	1					
ANR	11249925	Argument	ssize		11249782	2					
ANR	11249926	Identifier	ssize		11249782	0					
ANR	11249927	Argument	& state		11249782	3					
ANR	11249928	UnaryOperationExpression	& state		11249782	0					
ANR	11249929	UnaryOperator	&		11249782	0					
ANR	11249930	Identifier	state		11249782	1					
ANR	11249931	ExpressionStatement	op [ - 2 ] . value . intval = state	62:4:1961:1988	11249782	11	True				
ANR	11249932	AssignmentExpression	op [ - 2 ] . value . intval = state		11249782	0		=			
ANR	11249933	MemberAccess	op [ - 2 ] . value . intval		11249782	0					
ANR	11249934	MemberAccess	op [ - 2 ] . value		11249782	0					
ANR	11249935	ArrayIndexing	op [ - 2 ]		11249782	0					
ANR	11249936	Identifier	op		11249782	0					
ANR	11249937	UnaryOperationExpression	- 2		11249782	1					
ANR	11249938	UnaryOperator	-		11249782	0					
ANR	11249939	PrimaryExpression	2		11249782	1					
ANR	11249940	Identifier	value		11249782	1					
ANR	11249941	Identifier	intval		11249782	1					
ANR	11249942	Identifier	state		11249782	1					
ANR	11249943	ExpressionStatement	op [ - 1 ] = * op	63:4:1994:2006	11249782	12	True				
ANR	11249944	AssignmentExpression	op [ - 1 ] = * op		11249782	0		=			
ANR	11249945	ArrayIndexing	op [ - 1 ]		11249782	0					
ANR	11249946	Identifier	op		11249782	0					
ANR	11249947	UnaryOperationExpression	- 1		11249782	1					
ANR	11249948	UnaryOperator	-		11249782	0					
ANR	11249949	PrimaryExpression	1		11249782	1					
ANR	11249950	UnaryOperationExpression	* op		11249782	1					
ANR	11249951	UnaryOperator	*		11249782	0					
ANR	11249952	Identifier	op		11249782	1					
ANR	11249953	ExpressionStatement	"r_set_size ( op - 1 , ssize )"	64:4:2012:2037	11249782	13	True				
ANR	11249954	CallExpression	"r_set_size ( op - 1 , ssize )"		11249782	0					
ANR	11249955	Callee	r_set_size		11249782	0					
ANR	11249956	Identifier	r_set_size		11249782	0					
ANR	11249957	ArgumentList	op - 1		11249782	1					
ANR	11249958	Argument	op - 1		11249782	0					
ANR	11249959	AdditiveExpression	op - 1		11249782	0		-			
ANR	11249960	Identifier	op		11249782	0					
ANR	11249961	PrimaryExpression	1		11249782	1					
ANR	11249962	Argument	ssize		11249782	1					
ANR	11249963	Identifier	ssize		11249782	0					
ANR	11249964	ExpressionStatement	pop ( 1 )	65:4:2043:2049	11249782	14	True				
ANR	11249965	CallExpression	pop ( 1 )		11249782	0					
ANR	11249966	Callee	pop		11249782	0					
ANR	11249967	Identifier	pop		11249782	0					
ANR	11249968	ArgumentList	1		11249782	1					
ANR	11249969	Argument	1		11249782	0					
ANR	11249970	PrimaryExpression	1		11249782	0					
ANR	11249971	ReturnStatement	return 0 ;	66:4:2055:2063	11249782	15	True				
ANR	11249972	PrimaryExpression	0		11249782	0					
ANR	11249973	ReturnType	static int		11249782	1					
ANR	11249974	Identifier	type1crypt		11249782	2					
ANR	11249975	ParameterList	"i_ctx_t * i_ctx_p , int ( * proc ) ( byte * , const byte * , uint , ushort * )"		11249782	3					
ANR	11249976	Parameter	i_ctx_t * i_ctx_p	44:11:1341:1356	11249782	0	True				
ANR	11249977	ParameterType	i_ctx_t *		11249782	0					
ANR	11249978	Identifier	i_ctx_p		11249782	1					
ANR	11249979	Parameter	"int ( * proc ) ( byte * , const byte * , uint , ushort * )"	45:11:1370:1418	11249782	1	True				
ANR	11249980	ParameterType	"(( byte * , const byte * , uint , ushort * ) int) *"		11249782	0					
ANR	11249981	Identifier	proc		11249782	1					
ANR	11249982	CFGEntryNode	ENTRY		11249782		True				
ANR	11249983	CFGExitNode	EXIT		11249782		True				
ANR	11249984	Symbol	op		11249782						
ANR	11249985	Symbol	proc		11249782						
ANR	11249986	Symbol	* op		11249782						
ANR	11249987	Symbol	gs_error_rangecheck		11249782						
ANR	11249988	Symbol	& state		11249782						
ANR	11249989	Symbol	op [ - 1 ] . value		11249782						
ANR	11249990	Symbol	osp		11249782						
ANR	11249991	Symbol	* proc		11249782						
ANR	11249992	Symbol	t_string		11249782						
ANR	11249993	Symbol	op [ - 1 ] . value . const_bytes		11249782						
ANR	11249994	Symbol	t_integer		11249782						
ANR	11249995	Symbol	op [ - 2 ] . value		11249782						
ANR	11249996	Symbol	i_ctx_p		11249782						
ANR	11249997	Symbol	op -> value		11249782						
ANR	11249998	Symbol	op [ - 2 ] . value . intval		11249782						
ANR	11249999	Symbol	r_size		11249782						
ANR	11250000	Symbol	op -> value . bytes		11249782						
ANR	11250001	Symbol	state		11249782						
ANR	11250002	Symbol	ssize		11249782						
ANR	11250003	Function	eexec_param	71:0:2146:2474							
ANR	11250004	FunctionDef	"eexec_param (os_ptr op , ushort * pcstate)"		11250003	0					
ANR	11250005	CompoundStatement		73:0:2198:2474	11250003	0					
ANR	11250006	IdentifierDeclStatement	int npop = 1 ;	74:4:2204:2216	11250003	0	True				
ANR	11250007	IdentifierDecl	npop = 1		11250003	0					
ANR	11250008	IdentifierDeclType	int		11250003	0					
ANR	11250009	Identifier	npop		11250003	1					
ANR	11250010	AssignmentExpression	npop = 1		11250003	2		=			
ANR	11250011	Identifier	npop		11250003	0					
ANR	11250012	PrimaryExpression	1		11250003	1					
ANR	11250013	IfStatement	"if ( r_has_type ( op , t_dictionary ) )"		11250003	1					
ANR	11250014	Condition	"r_has_type ( op , t_dictionary )"	76:8:2227:2254	11250003	0	True				
ANR	11250015	CallExpression	"r_has_type ( op , t_dictionary )"		11250003	0					
ANR	11250016	Callee	r_has_type		11250003	0					
ANR	11250017	Identifier	r_has_type		11250003	0					
ANR	11250018	ArgumentList	op		11250003	1					
ANR	11250019	Argument	op		11250003	0					
ANR	11250020	Identifier	op		11250003	0					
ANR	11250021	Argument	t_dictionary		11250003	1					
ANR	11250022	Identifier	t_dictionary		11250003	0					
ANR	11250023	ExpressionStatement	"++ npop , -- op"	77:8:2265:2277	11250003	1	True				
ANR	11250024	Expression	"++ npop , -- op"		11250003	0					
ANR	11250025	UnaryExpression	++ npop		11250003	0					
ANR	11250026	IncDec	++		11250003	0					
ANR	11250027	Identifier	npop		11250003	1					
ANR	11250028	UnaryExpression	-- op		11250003	1					
ANR	11250029	IncDec	--		11250003	0					
ANR	11250030	Identifier	op		11250003	1					
ANR	11250031	ExpressionStatement	"check_type ( * op , t_integer )"	78:4:2283:2309	11250003	2	True				
ANR	11250032	CallExpression	"check_type ( * op , t_integer )"		11250003	0					
ANR	11250033	Callee	check_type		11250003	0					
ANR	11250034	Identifier	check_type		11250003	0					
ANR	11250035	ArgumentList	* op		11250003	1					
ANR	11250036	Argument	* op		11250003	0					
ANR	11250037	UnaryOperationExpression	* op		11250003	0					
ANR	11250038	UnaryOperator	*		11250003	0					
ANR	11250039	Identifier	op		11250003	1					
ANR	11250040	Argument	t_integer		11250003	1					
ANR	11250041	Identifier	t_integer		11250003	0					
ANR	11250042	ExpressionStatement	* pcstate = op -> value . intval	79:4:2315:2342	11250003	3	True				
ANR	11250043	AssignmentExpression	* pcstate = op -> value . intval		11250003	0		=			
ANR	11250044	UnaryOperationExpression	* pcstate		11250003	0					
ANR	11250045	UnaryOperator	*		11250003	0					
ANR	11250046	Identifier	pcstate		11250003	1					
ANR	11250047	MemberAccess	op -> value . intval		11250003	1					
ANR	11250048	PtrMemberAccess	op -> value		11250003	0					
ANR	11250049	Identifier	op		11250003	0					
ANR	11250050	Identifier	value		11250003	1					
ANR	11250051	Identifier	intval		11250003	1					
ANR	11250052	IfStatement	if ( op -> value . intval != * pcstate )		11250003	4					
ANR	11250053	Condition	op -> value . intval != * pcstate	80:8:2352:2379	11250003	0	True				
ANR	11250054	EqualityExpression	op -> value . intval != * pcstate		11250003	0		!=			
ANR	11250055	MemberAccess	op -> value . intval		11250003	0					
ANR	11250056	PtrMemberAccess	op -> value		11250003	0					
ANR	11250057	Identifier	op		11250003	0					
ANR	11250058	Identifier	value		11250003	1					
ANR	11250059	Identifier	intval		11250003	1					
ANR	11250060	UnaryOperationExpression	* pcstate		11250003	1					
ANR	11250061	UnaryOperator	*		11250003	0					
ANR	11250062	Identifier	pcstate		11250003	1					
ANR	11250063	ExpressionStatement	return_error ( gs_error_rangecheck )	81:8:2390:2423	11250003	1	True				
ANR	11250064	CallExpression	return_error ( gs_error_rangecheck )		11250003	0					
ANR	11250065	Callee	return_error		11250003	0					
ANR	11250066	Identifier	return_error		11250003	0					
ANR	11250067	ArgumentList	gs_error_rangecheck		11250003	1					
ANR	11250068	Argument	gs_error_rangecheck		11250003	0					
ANR	11250069	Identifier	gs_error_rangecheck		11250003	0					
ANR	11250070	ReturnStatement	return npop ;	82:4:2461:2472	11250003	5	True				
ANR	11250071	Identifier	npop		11250003	0					
ANR	11250072	ReturnType	static int		11250003	1					
ANR	11250073	Identifier	eexec_param		11250003	2					
ANR	11250074	ParameterList	"os_ptr op , ushort * pcstate"		11250003	3					
ANR	11250075	Parameter	os_ptr op	72:12:2169:2177	11250003	0	True				
ANR	11250076	ParameterType	os_ptr		11250003	0					
ANR	11250077	Identifier	op		11250003	1					
ANR	11250078	Parameter	ushort * pcstate	72:23:2180:2195	11250003	1	True				
ANR	11250079	ParameterType	ushort *		11250003	0					
ANR	11250080	Identifier	pcstate		11250003	1					
ANR	11250081	CFGEntryNode	ENTRY		11250003		True				
ANR	11250082	CFGExitNode	EXIT		11250003		True				
ANR	11250083	Symbol	npop		11250003						
ANR	11250084	Symbol	op		11250003						
ANR	11250085	Symbol	r_has_type		11250003						
ANR	11250086	Symbol	t_dictionary		11250003						
ANR	11250087	Symbol	* op		11250003						
ANR	11250088	Symbol	t_integer		11250003						
ANR	11250089	Symbol	gs_error_rangecheck		11250003						
ANR	11250090	Symbol	op -> value		11250003						
ANR	11250091	Symbol	pcstate		11250003						
ANR	11250092	Symbol	* pcstate		11250003						
ANR	11250093	Symbol	op -> value . intval		11250003						
ANR	11250094	Function	zexE	87:0:2588:2844							
ANR	11250095	FunctionDef	zexE (i_ctx_t * i_ctx_p)		11250094	0					
ANR	11250096	CompoundStatement		89:0:2622:2844	11250094	0					
ANR	11250097	IdentifierDeclStatement	os_ptr op = osp ;	90:4:2628:2643	11250094	0	True				
ANR	11250098	IdentifierDecl	op = osp		11250094	0					
ANR	11250099	IdentifierDeclType	os_ptr		11250094	0					
ANR	11250100	Identifier	op		11250094	1					
ANR	11250101	AssignmentExpression	op = osp		11250094	2		=			
ANR	11250102	Identifier	osp		11250094	0					
ANR	11250103	Identifier	osp		11250094	1					
ANR	11250104	IdentifierDeclStatement	stream_exE_state state ;	91:4:2649:2671	11250094	1	True				
ANR	11250105	IdentifierDecl	state		11250094	0					
ANR	11250106	IdentifierDeclType	stream_exE_state		11250094	0					
ANR	11250107	Identifier	state		11250094	1					
ANR	11250108	IdentifierDeclStatement	"int code = eexec_param ( op , & state . cstate ) ;"	92:4:2677:2718	11250094	2	True				
ANR	11250109	IdentifierDecl	"code = eexec_param ( op , & state . cstate )"		11250094	0					
ANR	11250110	IdentifierDeclType	int		11250094	0					
ANR	11250111	Identifier	code		11250094	1					
ANR	11250112	AssignmentExpression	"code = eexec_param ( op , & state . cstate )"		11250094	2		=			
ANR	11250113	Identifier	code		11250094	0					
ANR	11250114	CallExpression	"eexec_param ( op , & state . cstate )"		11250094	1					
ANR	11250115	Callee	eexec_param		11250094	0					
ANR	11250116	Identifier	eexec_param		11250094	0					
ANR	11250117	ArgumentList	op		11250094	1					
ANR	11250118	Argument	op		11250094	0					
ANR	11250119	Identifier	op		11250094	0					
ANR	11250120	Argument	& state . cstate		11250094	1					
ANR	11250121	UnaryOperationExpression	& state . cstate		11250094	0					
ANR	11250122	UnaryOperator	&		11250094	0					
ANR	11250123	MemberAccess	state . cstate		11250094	1					
ANR	11250124	Identifier	state		11250094	0					
ANR	11250125	Identifier	cstate		11250094	1					
ANR	11250126	IfStatement	if ( code < 0 )		11250094	3					
ANR	11250127	Condition	code < 0	94:8:2729:2736	11250094	0	True				
ANR	11250128	RelationalExpression	code < 0		11250094	0		<			
ANR	11250129	Identifier	code		11250094	0					
ANR	11250130	PrimaryExpression	0		11250094	1					
ANR	11250131	ReturnStatement	return code ;	95:8:2747:2758	11250094	1	True				
ANR	11250132	Identifier	code		11250094	0					
ANR	11250133	ReturnStatement	"return filter_write ( i_ctx_p , code , & s_exE_template , ( stream_state * ) & state , 0 ) ;"	96:4:2764:2842	11250094	4	True				
ANR	11250134	CallExpression	"filter_write ( i_ctx_p , code , & s_exE_template , ( stream_state * ) & state , 0 )"		11250094	0					
ANR	11250135	Callee	filter_write		11250094	0					
ANR	11250136	Identifier	filter_write		11250094	0					
ANR	11250137	ArgumentList	i_ctx_p		11250094	1					
ANR	11250138	Argument	i_ctx_p		11250094	0					
ANR	11250139	Identifier	i_ctx_p		11250094	0					
ANR	11250140	Argument	code		11250094	1					
ANR	11250141	Identifier	code		11250094	0					
ANR	11250142	Argument	& s_exE_template		11250094	2					
ANR	11250143	UnaryOperationExpression	& s_exE_template		11250094	0					
ANR	11250144	UnaryOperator	&		11250094	0					
ANR	11250145	Identifier	s_exE_template		11250094	1					
ANR	11250146	Argument	( stream_state * ) & state		11250094	3					
ANR	11250147	CastExpression	( stream_state * ) & state		11250094	0					
ANR	11250148	CastTarget	stream_state *		11250094	0					
ANR	11250149	UnaryOperationExpression	& state		11250094	1					
ANR	11250150	UnaryOperator	&		11250094	0					
ANR	11250151	Identifier	state		11250094	1					
ANR	11250152	Argument	0		11250094	4					
ANR	11250153	PrimaryExpression	0		11250094	0					
ANR	11250154	ReturnType	static int		11250094	1					
ANR	11250155	Identifier	zexE		11250094	2					
ANR	11250156	ParameterList	i_ctx_t * i_ctx_p		11250094	3					
ANR	11250157	Parameter	i_ctx_t * i_ctx_p	88:5:2604:2619	11250094	0	True				
ANR	11250158	ParameterType	i_ctx_t *		11250094	0					
ANR	11250159	Identifier	i_ctx_p		11250094	1					
ANR	11250160	CFGEntryNode	ENTRY		11250094		True				
ANR	11250161	CFGExitNode	EXIT		11250094		True				
ANR	11250162	Symbol	op		11250094						
ANR	11250163	Symbol	code		11250094						
ANR	11250164	Symbol	& state		11250094						
ANR	11250165	Symbol	i_ctx_p		11250094						
ANR	11250166	Symbol	filter_write		11250094						
ANR	11250167	Symbol	& s_exE_template		11250094						
ANR	11250168	Symbol	eexec_param		11250094						
ANR	11250169	Symbol	state		11250094						
ANR	11250170	Symbol	osp		11250094						
ANR	11250171	Symbol	& state . cstate		11250094						
ANR	11250172	Function	zexD	101:0:2943:5151							
ANR	11250173	FunctionDef	zexD (i_ctx_t * i_ctx_p)		11250172	0					
ANR	11250174	CompoundStatement		103:0:2977:5151	11250172	0					
ANR	11250175	IdentifierDeclStatement	os_ptr op = osp ;	104:4:2983:2998	11250172	0	True				
ANR	11250176	IdentifierDecl	op = osp		11250172	0					
ANR	11250177	IdentifierDeclType	os_ptr		11250172	0					
ANR	11250178	Identifier	op		11250172	1					
ANR	11250179	AssignmentExpression	op = osp		11250172	2		=			
ANR	11250180	Identifier	osp		11250172	0					
ANR	11250181	Identifier	osp		11250172	1					
ANR	11250182	IdentifierDeclStatement	stream_exD_state state ;	105:4:3004:3026	11250172	1	True				
ANR	11250183	IdentifierDecl	state		11250172	0					
ANR	11250184	IdentifierDeclType	stream_exD_state		11250172	0					
ANR	11250185	Identifier	state		11250172	1					
ANR	11250186	IdentifierDeclStatement	int code ;	106:4:3032:3040	11250172	2	True				
ANR	11250187	IdentifierDecl	code		11250172	0					
ANR	11250188	IdentifierDeclType	int		11250172	0					
ANR	11250189	Identifier	code		11250172	1					
ANR	11250190	ExpressionStatement	( * s_exD_template . set_defaults ) ( ( stream_state * ) & state )	108:4:3047:3101	11250172	3	True				
ANR	11250191	CallExpression	( * s_exD_template . set_defaults ) ( ( stream_state * ) & state )		11250172	0					
ANR	11250192	Callee	* s_exD_template . set_defaults		11250172	0					
ANR	11250193	UnaryOperationExpression	* s_exD_template . set_defaults		11250172	0					
ANR	11250194	UnaryOperator	*		11250172	0					
ANR	11250195	MemberAccess	s_exD_template . set_defaults		11250172	1					
ANR	11250196	Identifier	s_exD_template		11250172	0					
ANR	11250197	Identifier	set_defaults		11250172	1					
ANR	11250198	ArgumentList	( stream_state * ) & state		11250172	1					
ANR	11250199	Argument	( stream_state * ) & state		11250172	0					
ANR	11250200	CastExpression	( stream_state * ) & state		11250172	0					
ANR	11250201	CastTarget	stream_state *		11250172	0					
ANR	11250202	UnaryOperationExpression	& state		11250172	1					
ANR	11250203	UnaryOperator	&		11250172	0					
ANR	11250204	Identifier	state		11250172	1					
ANR	11250205	IfStatement	"if ( r_has_type ( op , t_dictionary ) )"		11250172	4					
ANR	11250206	Condition	"r_has_type ( op , t_dictionary )"	109:8:3111:3138	11250172	0	True				
ANR	11250207	CallExpression	"r_has_type ( op , t_dictionary )"		11250172	0					
ANR	11250208	Callee	r_has_type		11250172	0					
ANR	11250209	Identifier	r_has_type		11250172	0					
ANR	11250210	ArgumentList	op		11250172	1					
ANR	11250211	Argument	op		11250172	0					
ANR	11250212	Identifier	op		11250172	0					
ANR	11250213	Argument	t_dictionary		11250172	1					
ANR	11250214	Identifier	t_dictionary		11250172	0					
ANR	11250215	CompoundStatement		9:8:194:207	11250172	1					
ANR	11250216	IdentifierDeclStatement	uint cstate ;	110:8:3151:3162	11250172	0	True				
ANR	11250217	IdentifierDecl	cstate		11250172	0					
ANR	11250218	IdentifierDeclType	uint		11250172	0					
ANR	11250219	Identifier	cstate		11250172	1					
ANR	11250220	IdentifierDeclStatement	bool is_eexec ;	111:8:3172:3185	11250172	1	True				
ANR	11250221	IdentifierDecl	is_eexec		11250172	0					
ANR	11250222	IdentifierDeclType	bool		11250172	0					
ANR	11250223	Identifier	is_eexec		11250172	1					
ANR	11250224	ExpressionStatement	check_dict_read ( * op )	113:8:3196:3216	11250172	2	True				
ANR	11250225	CallExpression	check_dict_read ( * op )		11250172	0					
ANR	11250226	Callee	check_dict_read		11250172	0					
ANR	11250227	Identifier	check_dict_read		11250172	0					
ANR	11250228	ArgumentList	* op		11250172	1					
ANR	11250229	Argument	* op		11250172	0					
ANR	11250230	UnaryOperationExpression	* op		11250172	0					
ANR	11250231	UnaryOperator	*		11250172	0					
ANR	11250232	Identifier	op		11250172	1					
ANR	11250233	IfStatement	"if ( ( code = dict_uint_param ( op , ""seed"" , 0 , 0xffff , 0x10000 , & cstate ) ) < 0 || ( code = dict_int_param ( op , ""lenIV"" , 0 , max_int , 4 , & state . lenIV ) ) < 0 || ( code = dict_bool_param ( op , ""eexec"" , false , & is_eexec ) ) < 0 || ( code = dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces ) ) < 0 )"		11250172	3					
ANR	11250234	Condition	"( code = dict_uint_param ( op , ""seed"" , 0 , 0xffff , 0x10000 , & cstate ) ) < 0 || ( code = dict_int_param ( op , ""lenIV"" , 0 , max_int , 4 , & state . lenIV ) ) < 0 || ( code = dict_bool_param ( op , ""eexec"" , false , & is_eexec ) ) < 0 || ( code = dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces ) ) < 0"	114:12:3230:3689	11250172	0	True				
ANR	11250235	OrExpression	"( code = dict_uint_param ( op , ""seed"" , 0 , 0xffff , 0x10000 , & cstate ) ) < 0 || ( code = dict_int_param ( op , ""lenIV"" , 0 , max_int , 4 , & state . lenIV ) ) < 0 || ( code = dict_bool_param ( op , ""eexec"" , false , & is_eexec ) ) < 0 || ( code = dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces ) ) < 0"		11250172	0		||			
ANR	11250236	RelationalExpression	"( code = dict_uint_param ( op , ""seed"" , 0 , 0xffff , 0x10000 , & cstate ) ) < 0"		11250172	0		<			
ANR	11250237	AssignmentExpression	"code = dict_uint_param ( op , ""seed"" , 0 , 0xffff , 0x10000 , & cstate )"		11250172	0		=			
ANR	11250238	Identifier	code		11250172	0					
ANR	11250239	CallExpression	"dict_uint_param ( op , ""seed"" , 0 , 0xffff , 0x10000 , & cstate )"		11250172	1					
ANR	11250240	Callee	dict_uint_param		11250172	0					
ANR	11250241	Identifier	dict_uint_param		11250172	0					
ANR	11250242	ArgumentList	op		11250172	1					
ANR	11250243	Argument	op		11250172	0					
ANR	11250244	Identifier	op		11250172	0					
ANR	11250245	Argument	"""seed"""		11250172	1					
ANR	11250246	PrimaryExpression	"""seed"""		11250172	0					
ANR	11250247	Argument	0		11250172	2					
ANR	11250248	PrimaryExpression	0		11250172	0					
ANR	11250249	Argument	0xffff		11250172	3					
ANR	11250250	PrimaryExpression	0xffff		11250172	0					
ANR	11250251	Argument	0x10000		11250172	4					
ANR	11250252	PrimaryExpression	0x10000		11250172	0					
ANR	11250253	Argument	& cstate		11250172	5					
ANR	11250254	UnaryOperationExpression	& cstate		11250172	0					
ANR	11250255	UnaryOperator	&		11250172	0					
ANR	11250256	Identifier	cstate		11250172	1					
ANR	11250257	PrimaryExpression	0		11250172	1					
ANR	11250258	OrExpression	"( code = dict_int_param ( op , ""lenIV"" , 0 , max_int , 4 , & state . lenIV ) ) < 0 || ( code = dict_bool_param ( op , ""eexec"" , false , & is_eexec ) ) < 0 || ( code = dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces ) ) < 0"		11250172	1		||			
ANR	11250259	RelationalExpression	"( code = dict_int_param ( op , ""lenIV"" , 0 , max_int , 4 , & state . lenIV ) ) < 0"		11250172	0		<			
ANR	11250260	AssignmentExpression	"code = dict_int_param ( op , ""lenIV"" , 0 , max_int , 4 , & state . lenIV )"		11250172	0		=			
ANR	11250261	Identifier	code		11250172	0					
ANR	11250262	CallExpression	"dict_int_param ( op , ""lenIV"" , 0 , max_int , 4 , & state . lenIV )"		11250172	1					
ANR	11250263	Callee	dict_int_param		11250172	0					
ANR	11250264	Identifier	dict_int_param		11250172	0					
ANR	11250265	ArgumentList	op		11250172	1					
ANR	11250266	Argument	op		11250172	0					
ANR	11250267	Identifier	op		11250172	0					
ANR	11250268	Argument	"""lenIV"""		11250172	1					
ANR	11250269	PrimaryExpression	"""lenIV"""		11250172	0					
ANR	11250270	Argument	0		11250172	2					
ANR	11250271	PrimaryExpression	0		11250172	0					
ANR	11250272	Argument	max_int		11250172	3					
ANR	11250273	Identifier	max_int		11250172	0					
ANR	11250274	Argument	4		11250172	4					
ANR	11250275	PrimaryExpression	4		11250172	0					
ANR	11250276	Argument	& state . lenIV		11250172	5					
ANR	11250277	UnaryOperationExpression	& state . lenIV		11250172	0					
ANR	11250278	UnaryOperator	&		11250172	0					
ANR	11250279	MemberAccess	state . lenIV		11250172	1					
ANR	11250280	Identifier	state		11250172	0					
ANR	11250281	Identifier	lenIV		11250172	1					
ANR	11250282	PrimaryExpression	0		11250172	1					
ANR	11250283	OrExpression	"( code = dict_bool_param ( op , ""eexec"" , false , & is_eexec ) ) < 0 || ( code = dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces ) ) < 0"		11250172	1		||			
ANR	11250284	RelationalExpression	"( code = dict_bool_param ( op , ""eexec"" , false , & is_eexec ) ) < 0"		11250172	0		<			
ANR	11250285	AssignmentExpression	"code = dict_bool_param ( op , ""eexec"" , false , & is_eexec )"		11250172	0		=			
ANR	11250286	Identifier	code		11250172	0					
ANR	11250287	CallExpression	"dict_bool_param ( op , ""eexec"" , false , & is_eexec )"		11250172	1					
ANR	11250288	Callee	dict_bool_param		11250172	0					
ANR	11250289	Identifier	dict_bool_param		11250172	0					
ANR	11250290	ArgumentList	op		11250172	1					
ANR	11250291	Argument	op		11250172	0					
ANR	11250292	Identifier	op		11250172	0					
ANR	11250293	Argument	"""eexec"""		11250172	1					
ANR	11250294	PrimaryExpression	"""eexec"""		11250172	0					
ANR	11250295	Argument	false		11250172	2					
ANR	11250296	Identifier	false		11250172	0					
ANR	11250297	Argument	& is_eexec		11250172	3					
ANR	11250298	UnaryOperationExpression	& is_eexec		11250172	0					
ANR	11250299	UnaryOperator	&		11250172	0					
ANR	11250300	Identifier	is_eexec		11250172	1					
ANR	11250301	PrimaryExpression	0		11250172	1					
ANR	11250302	RelationalExpression	"( code = dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces ) ) < 0"		11250172	1		<			
ANR	11250303	AssignmentExpression	"code = dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces )"		11250172	0		=			
ANR	11250304	Identifier	code		11250172	0					
ANR	11250305	CallExpression	"dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces )"		11250172	1					
ANR	11250306	Callee	dict_bool_param		11250172	0					
ANR	11250307	Identifier	dict_bool_param		11250172	0					
ANR	11250308	ArgumentList	op		11250172	1					
ANR	11250309	Argument	op		11250172	0					
ANR	11250310	Identifier	op		11250172	0					
ANR	11250311	Argument	"""keep_spaces"""		11250172	1					
ANR	11250312	PrimaryExpression	"""keep_spaces"""		11250172	0					
ANR	11250313	Argument	false		11250172	2					
ANR	11250314	Identifier	false		11250172	0					
ANR	11250315	Argument	& state . keep_spaces		11250172	3					
ANR	11250316	UnaryOperationExpression	& state . keep_spaces		11250172	0					
ANR	11250317	UnaryOperator	&		11250172	0					
ANR	11250318	MemberAccess	state . keep_spaces		11250172	1					
ANR	11250319	Identifier	state		11250172	0					
ANR	11250320	Identifier	keep_spaces		11250172	1					
ANR	11250321	PrimaryExpression	0		11250172	1					
ANR	11250322	ReturnStatement	return code ;	123:12:3717:3728	11250172	1	True				
ANR	11250323	Identifier	code		11250172	0					
ANR	11250324	ExpressionStatement	state . cstate = cstate	124:8:3738:3759	11250172	4	True				
ANR	11250325	AssignmentExpression	state . cstate = cstate		11250172	0		=			
ANR	11250326	MemberAccess	state . cstate		11250172	0					
ANR	11250327	Identifier	state		11250172	0					
ANR	11250328	Identifier	cstate		11250172	1					
ANR	11250329	Identifier	cstate		11250172	1					
ANR	11250330	ExpressionStatement	state . binary = ( is_eexec ? - 1 : 1 )	125:8:3769:3803	11250172	5	True				
ANR	11250331	AssignmentExpression	state . binary = ( is_eexec ? - 1 : 1 )		11250172	0		=			
ANR	11250332	MemberAccess	state . binary		11250172	0					
ANR	11250333	Identifier	state		11250172	0					
ANR	11250334	Identifier	binary		11250172	1					
ANR	11250335	ConditionalExpression	is_eexec ? - 1 : 1		11250172	1					
ANR	11250336	Condition	is_eexec		11250172	0					
ANR	11250337	Identifier	is_eexec		11250172	0					
ANR	11250338	UnaryOperationExpression	- 1		11250172	1					
ANR	11250339	UnaryOperator	-		11250172	0					
ANR	11250340	PrimaryExpression	1		11250172	1					
ANR	11250341	PrimaryExpression	1		11250172	2					
ANR	11250342	ExpressionStatement	code = 1	126:8:3813:3821	11250172	6	True				
ANR	11250343	AssignmentExpression	code = 1		11250172	0		=			
ANR	11250344	Identifier	code		11250172	0					
ANR	11250345	PrimaryExpression	1		11250172	1					
ANR	11250346	ElseStatement	else		11250172	0					
ANR	11250347	CompoundStatement		25:11:856:856	11250172	0					
ANR	11250348	ExpressionStatement	state . binary = 1	128:8:3844:3860	11250172	0	True				
ANR	11250349	AssignmentExpression	state . binary = 1		11250172	0		=			
ANR	11250350	MemberAccess	state . binary		11250172	0					
ANR	11250351	Identifier	state		11250172	0					
ANR	11250352	Identifier	binary		11250172	1					
ANR	11250353	PrimaryExpression	1		11250172	1					
ANR	11250354	ExpressionStatement	"code = eexec_param ( op , & state . cstate )"	129:8:3870:3907	11250172	1	True				
ANR	11250355	AssignmentExpression	"code = eexec_param ( op , & state . cstate )"		11250172	0		=			
ANR	11250356	Identifier	code		11250172	0					
ANR	11250357	CallExpression	"eexec_param ( op , & state . cstate )"		11250172	1					
ANR	11250358	Callee	eexec_param		11250172	0					
ANR	11250359	Identifier	eexec_param		11250172	0					
ANR	11250360	ArgumentList	op		11250172	1					
ANR	11250361	Argument	op		11250172	0					
ANR	11250362	Identifier	op		11250172	0					
ANR	11250363	Argument	& state . cstate		11250172	1					
ANR	11250364	UnaryOperationExpression	& state . cstate		11250172	0					
ANR	11250365	UnaryOperator	&		11250172	0					
ANR	11250366	MemberAccess	state . cstate		11250172	1					
ANR	11250367	Identifier	state		11250172	0					
ANR	11250368	Identifier	cstate		11250172	1					
ANR	11250369	IfStatement	if ( code < 0 )		11250172	5					
ANR	11250370	Condition	code < 0	131:8:3923:3930	11250172	0	True				
ANR	11250371	RelationalExpression	code < 0		11250172	0		<			
ANR	11250372	Identifier	code		11250172	0					
ANR	11250373	PrimaryExpression	0		11250172	1					
ANR	11250374	ReturnStatement	return code ;	132:8:3941:3952	11250172	1	True				
ANR	11250375	Identifier	code		11250172	0					
ANR	11250376	IfStatement	"if ( r_has_type ( op - 1 , t_file ) )"		11250172	6					
ANR	11250377	Condition	"r_has_type ( op - 1 , t_file )"	137:8:4111:4136	11250172	0	True				
ANR	11250378	CallExpression	"r_has_type ( op - 1 , t_file )"		11250172	0					
ANR	11250379	Callee	r_has_type		11250172	0					
ANR	11250380	Identifier	r_has_type		11250172	0					
ANR	11250381	ArgumentList	op - 1		11250172	1					
ANR	11250382	Argument	op - 1		11250172	0					
ANR	11250383	AdditiveExpression	op - 1		11250172	0		-			
ANR	11250384	Identifier	op		11250172	0					
ANR	11250385	PrimaryExpression	1		11250172	1					
ANR	11250386	Argument	t_file		11250172	1					
ANR	11250387	Identifier	t_file		11250172	0					
ANR	11250388	CompoundStatement		36:8:1171:1204	11250172	1					
ANR	11250389	IdentifierDeclStatement	stream * s = ( op - 1 ) -> value . pfile ;	138:8:4149:4182	11250172	0	True				
ANR	11250390	IdentifierDecl	* s = ( op - 1 ) -> value . pfile		11250172	0					
ANR	11250391	IdentifierDeclType	stream *		11250172	0					
ANR	11250392	Identifier	s		11250172	1					
ANR	11250393	AssignmentExpression	* s = ( op - 1 ) -> value . pfile		11250172	2		=			
ANR	11250394	Identifier	s		11250172	0					
ANR	11250395	MemberAccess	( op - 1 ) -> value . pfile		11250172	1					
ANR	11250396	PtrMemberAccess	( op - 1 ) -> value		11250172	0					
ANR	11250397	AdditiveExpression	op - 1		11250172	0		-			
ANR	11250398	Identifier	op		11250172	0					
ANR	11250399	PrimaryExpression	1		11250172	1					
ANR	11250400	Identifier	value		11250172	1					
ANR	11250401	Identifier	pfile		11250172	1					
ANR	11250402	IfStatement	if ( s -> state != 0 && s -> state -> templat == & s_PFBD_template )		11250172	1					
ANR	11250403	Condition	s -> state != 0 && s -> state -> templat == & s_PFBD_template	140:12:4197:4250	11250172	0	True				
ANR	11250404	AndExpression	s -> state != 0 && s -> state -> templat == & s_PFBD_template		11250172	0		&&			
ANR	11250405	EqualityExpression	s -> state != 0		11250172	0		!=			
ANR	11250406	PtrMemberAccess	s -> state		11250172	0					
ANR	11250407	Identifier	s		11250172	0					
ANR	11250408	Identifier	state		11250172	1					
ANR	11250409	PrimaryExpression	0		11250172	1					
ANR	11250410	EqualityExpression	s -> state -> templat == & s_PFBD_template		11250172	1		==			
ANR	11250411	PtrMemberAccess	s -> state -> templat		11250172	0					
ANR	11250412	PtrMemberAccess	s -> state		11250172	0					
ANR	11250413	Identifier	s		11250172	0					
ANR	11250414	Identifier	state		11250172	1					
ANR	11250415	Identifier	templat		11250172	1					
ANR	11250416	UnaryOperationExpression	& s_PFBD_template		11250172	1					
ANR	11250417	UnaryOperator	&		11250172	0					
ANR	11250418	Identifier	s_PFBD_template		11250172	1					
ANR	11250419	CompoundStatement		39:12:1289:1343	11250172	1					
ANR	11250420	IdentifierDeclStatement	stream_PFBD_state * pss = ( stream_PFBD_state * ) s -> state ;	141:12:4267:4321	11250172	0	True				
ANR	11250421	IdentifierDecl	* pss = ( stream_PFBD_state * ) s -> state		11250172	0					
ANR	11250422	IdentifierDeclType	stream_PFBD_state *		11250172	0					
ANR	11250423	Identifier	pss		11250172	1					
ANR	11250424	AssignmentExpression	* pss = ( stream_PFBD_state * ) s -> state		11250172	2		=			
ANR	11250425	Identifier	pss		11250172	0					
ANR	11250426	CastExpression	( stream_PFBD_state * ) s -> state		11250172	1					
ANR	11250427	CastTarget	stream_PFBD_state *		11250172	0					
ANR	11250428	PtrMemberAccess	s -> state		11250172	1					
ANR	11250429	Identifier	s		11250172	0					
ANR	11250430	Identifier	state		11250172	1					
ANR	11250431	ExpressionStatement	state . pfb_state = pss	143:12:4336:4357	11250172	1	True				
ANR	11250432	AssignmentExpression	state . pfb_state = pss		11250172	0		=			
ANR	11250433	MemberAccess	state . pfb_state		11250172	0					
ANR	11250434	Identifier	state		11250172	0					
ANR	11250435	Identifier	pfb_state		11250172	1					
ANR	11250436	Identifier	pss		11250172	1					
ANR	11250437	IfStatement	if ( pss -> record_type == 2 )		11250172	2					
ANR	11250438	Condition	pss -> record_type == 2	148:16:4545:4565	11250172	0	True				
ANR	11250439	EqualityExpression	pss -> record_type == 2		11250172	0		==			
ANR	11250440	PtrMemberAccess	pss -> record_type		11250172	0					
ANR	11250441	Identifier	pss		11250172	0					
ANR	11250442	Identifier	record_type		11250172	1					
ANR	11250443	PrimaryExpression	2		11250172	1					
ANR	11250444	CompoundStatement		46:39:1590:1590	11250172	1					
ANR	11250445	IfStatement	if ( pss -> binary_to_hex && sbufavailable ( s ) > 0 )		11250172	0					
ANR	11250446	Condition	pss -> binary_to_hex && sbufavailable ( s ) > 0	153:20:4759:4800	11250172	0	True				
ANR	11250447	AndExpression	pss -> binary_to_hex && sbufavailable ( s ) > 0		11250172	0		&&			
ANR	11250448	PtrMemberAccess	pss -> binary_to_hex		11250172	0					
ANR	11250449	Identifier	pss		11250172	0					
ANR	11250450	Identifier	binary_to_hex		11250172	1					
ANR	11250451	RelationalExpression	sbufavailable ( s ) > 0		11250172	1		>			
ANR	11250452	CallExpression	sbufavailable ( s )		11250172	0					
ANR	11250453	Callee	sbufavailable		11250172	0					
ANR	11250454	Identifier	sbufavailable		11250172	0					
ANR	11250455	ArgumentList	s		11250172	1					
ANR	11250456	Argument	s		11250172	0					
ANR	11250457	Identifier	s		11250172	0					
ANR	11250458	PrimaryExpression	0		11250172	1					
ANR	11250459	CompoundStatement		51:64:1825:1825	11250172	1					
ANR	11250460	ExpressionStatement	state . binary = 0	154:20:4825:4841	11250172	0	True				
ANR	11250461	AssignmentExpression	state . binary = 0		11250172	0		=			
ANR	11250462	MemberAccess	state . binary		11250172	0					
ANR	11250463	Identifier	state		11250172	0					
ANR	11250464	Identifier	binary		11250172	1					
ANR	11250465	PrimaryExpression	0		11250172	1					
ANR	11250466	ExpressionStatement	state . hex_left = sbufavailable ( s )	155:20:4882:4915	11250172	1	True				
ANR	11250467	AssignmentExpression	state . hex_left = sbufavailable ( s )		11250172	0		=			
ANR	11250468	MemberAccess	state . hex_left		11250172	0					
ANR	11250469	Identifier	state		11250172	0					
ANR	11250470	Identifier	hex_left		11250172	1					
ANR	11250471	CallExpression	sbufavailable ( s )		11250172	1					
ANR	11250472	Callee	sbufavailable		11250172	0					
ANR	11250473	Identifier	sbufavailable		11250172	0					
ANR	11250474	ArgumentList	s		11250172	1					
ANR	11250475	Argument	s		11250172	0					
ANR	11250476	Identifier	s		11250172	0					
ANR	11250477	ElseStatement	else		11250172	0					
ANR	11250478	CompoundStatement		54:23:1962:1962	11250172	0					
ANR	11250479	ExpressionStatement	state . binary = 1	157:20:4962:4978	11250172	0	True				
ANR	11250480	AssignmentExpression	state . binary = 1		11250172	0		=			
ANR	11250481	MemberAccess	state . binary		11250172	0					
ANR	11250482	Identifier	state		11250172	0					
ANR	11250483	Identifier	binary		11250172	1					
ANR	11250484	PrimaryExpression	1		11250172	1					
ANR	11250485	ExpressionStatement	pss -> binary_to_hex = 0	159:16:5014:5036	11250172	1	True				
ANR	11250486	AssignmentExpression	pss -> binary_to_hex = 0		11250172	0		=			
ANR	11250487	PtrMemberAccess	pss -> binary_to_hex		11250172	0					
ANR	11250488	Identifier	pss		11250172	0					
ANR	11250489	Identifier	binary_to_hex		11250172	1					
ANR	11250490	PrimaryExpression	0		11250172	1					
ANR	11250491	ReturnStatement	"return filter_read ( i_ctx_p , code , & s_exD_template , ( stream_state * ) & state , 0 ) ;"	163:4:5072:5149	11250172	7	True				
ANR	11250492	CallExpression	"filter_read ( i_ctx_p , code , & s_exD_template , ( stream_state * ) & state , 0 )"		11250172	0					
ANR	11250493	Callee	filter_read		11250172	0					
ANR	11250494	Identifier	filter_read		11250172	0					
ANR	11250495	ArgumentList	i_ctx_p		11250172	1					
ANR	11250496	Argument	i_ctx_p		11250172	0					
ANR	11250497	Identifier	i_ctx_p		11250172	0					
ANR	11250498	Argument	code		11250172	1					
ANR	11250499	Identifier	code		11250172	0					
ANR	11250500	Argument	& s_exD_template		11250172	2					
ANR	11250501	UnaryOperationExpression	& s_exD_template		11250172	0					
ANR	11250502	UnaryOperator	&		11250172	0					
ANR	11250503	Identifier	s_exD_template		11250172	1					
ANR	11250504	Argument	( stream_state * ) & state		11250172	3					
ANR	11250505	CastExpression	( stream_state * ) & state		11250172	0					
ANR	11250506	CastTarget	stream_state *		11250172	0					
ANR	11250507	UnaryOperationExpression	& state		11250172	1					
ANR	11250508	UnaryOperator	&		11250172	0					
ANR	11250509	Identifier	state		11250172	1					
ANR	11250510	Argument	0		11250172	4					
ANR	11250511	PrimaryExpression	0		11250172	0					
ANR	11250512	ReturnType	static int		11250172	1					
ANR	11250513	Identifier	zexD		11250172	2					
ANR	11250514	ParameterList	i_ctx_t * i_ctx_p		11250172	3					
ANR	11250515	Parameter	i_ctx_t * i_ctx_p	102:5:2959:2974	11250172	0	True				
ANR	11250516	ParameterType	i_ctx_t *		11250172	0					
ANR	11250517	Identifier	i_ctx_p		11250172	1					
ANR	11250518	CFGEntryNode	ENTRY		11250172		True				
ANR	11250519	CFGExitNode	EXIT		11250172		True				
ANR	11250520	Symbol	& state . keep_spaces		11250172						
ANR	11250521	Symbol	pss -> record_type		11250172						
ANR	11250522	Symbol	max_int		11250172						
ANR	11250523	Symbol	is_eexec		11250172						
ANR	11250524	Symbol	code		11250172						
ANR	11250525	Symbol	t_dictionary		11250172						
ANR	11250526	Symbol	& is_eexec		11250172						
ANR	11250527	Symbol	* op		11250172						
ANR	11250528	Symbol	& state		11250172						
ANR	11250529	Symbol	state . hex_left		11250172						
ANR	11250530	Symbol	( op - 1 ) -> value		11250172						
ANR	11250531	Symbol	osp		11250172						
ANR	11250532	Symbol	state . binary		11250172						
ANR	11250533	Symbol	sbufavailable		11250172						
ANR	11250534	Symbol	filter_read		11250172						
ANR	11250535	Symbol	& s_exD_template		11250172						
ANR	11250536	Symbol	pss		11250172						
ANR	11250537	Symbol	r_has_type		11250172						
ANR	11250538	Symbol	& state . lenIV		11250172						
ANR	11250539	Symbol	s -> state -> templat		11250172						
ANR	11250540	Symbol	state . pfb_state		11250172						
ANR	11250541	Symbol	dict_bool_param		11250172						
ANR	11250542	Symbol	eexec_param		11250172						
ANR	11250543	Symbol	* * s		11250172						
ANR	11250544	Symbol	state		11250172						
ANR	11250545	Symbol	s_exD_template . set_defaults		11250172						
ANR	11250546	Symbol	( op - 1 ) -> value . pfile		11250172						
ANR	11250547	Symbol	state . cstate		11250172						
ANR	11250548	Symbol	op		11250172						
ANR	11250549	Symbol	* s -> state		11250172						
ANR	11250550	Symbol	& cstate		11250172						
ANR	11250551	Symbol	s -> state		11250172						
ANR	11250552	Symbol	false		11250172						
ANR	11250553	Symbol	& state . cstate		11250172						
ANR	11250554	Symbol	dict_uint_param		11250172						
ANR	11250555	Symbol	s		11250172						
ANR	11250556	Symbol	cstate		11250172						
ANR	11250557	Symbol	& s_PFBD_template		11250172						
ANR	11250558	Symbol	i_ctx_p		11250172						
ANR	11250559	Symbol	s_exD_template		11250172						
ANR	11250560	Symbol	* pss		11250172						
ANR	11250561	Symbol	dict_int_param		11250172						
ANR	11250562	Symbol	t_file		11250172						
ANR	11250563	Symbol	pss -> binary_to_hex		11250172						
ANR	11250564	Symbol	* s		11250172						
ANR	11250565	DeclStmt									
ANR	11250566	Decl							const op_def	const op_def [ ]	zmisc1_op_defs
