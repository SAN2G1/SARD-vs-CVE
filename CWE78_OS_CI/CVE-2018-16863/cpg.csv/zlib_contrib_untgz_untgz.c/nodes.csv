command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11213669	File	data/converged/CVE-2018-16863_ghostpdl/zlib_contrib_untgz_untgz.c								
ANR	11213670	ClassDef	tar_header	68:0:1818:2600							
ANR	11213671	DeclStmt									
ANR	11213672	Decl							char	char [ 100 ]	name
ANR	11213673	DeclStmt									
ANR	11213674	Decl							char	char [ 8 ]	mode
ANR	11213675	DeclStmt									
ANR	11213676	Decl							char	char [ 8 ]	uid
ANR	11213677	DeclStmt									
ANR	11213678	Decl							char	char [ 8 ]	gid
ANR	11213679	DeclStmt									
ANR	11213680	Decl							char	char [ 12 ]	size
ANR	11213681	DeclStmt									
ANR	11213682	Decl							char	char [ 12 ]	mtime
ANR	11213683	DeclStmt									
ANR	11213684	Decl							char	char [ 8 ]	chksum
ANR	11213685	DeclStmt									
ANR	11213686	Decl							char	char	typeflag
ANR	11213687	DeclStmt									
ANR	11213688	Decl							char	char [ 100 ]	linkname
ANR	11213689	DeclStmt									
ANR	11213690	Decl							char	char [ 6 ]	magic
ANR	11213691	DeclStmt									
ANR	11213692	Decl							char	char [ 2 ]	version
ANR	11213693	DeclStmt									
ANR	11213694	Decl							char	char [ 32 ]	uname
ANR	11213695	DeclStmt									
ANR	11213696	Decl							char	char [ 32 ]	gname
ANR	11213697	DeclStmt									
ANR	11213698	Decl							char	char [ 8 ]	devmajor
ANR	11213699	DeclStmt									
ANR	11213700	Decl							char	char [ 8 ]	devminor
ANR	11213701	DeclStmt									
ANR	11213702	Decl							char	char [ 155 ]	prefix
ANR	11213703	ClassDef	tar_buffer	89:0:2604:2692							
ANR	11213704	DeclStmt									
ANR	11213705	Decl							char	char [ BLOCKSIZE ]	buffer
ANR	11213706	DeclStmt									
ANR	11213707	Decl							struct tar_header	struct tar_header	header
ANR	11213708	ClassDef	attr_item	95:0:2696:2824							
ANR	11213709	DeclStmt									
ANR	11213710	Decl							struct attr_item	struct attr_item *	next
ANR	11213711	DeclStmt									
ANR	11213712	Decl							char	char *	fname
ANR	11213713	DeclStmt									
ANR	11213714	Decl							int	int	mode
ANR	11213715	DeclStmt									
ANR	11213716	Decl							time_t	time_t	time
ANR	11213717	ClassDef	<unnamed>	103:0:2828:2870							
ANR	11213718	DeclStmt									
ANR	11213719	Decl							void help	void help	OF
ANR	11213720	DeclStmt									
ANR	11213721	Decl							char	char *	prog
ANR	11213722	DeclStmt									
ANR	11213723	Decl							const char	const char * [ ]	TGZsuffix
ANR	11213724	Function	TGZfname	132:0:3719:4022							
ANR	11213725	FunctionDef	TGZfname (const char * arcname)		11213724	0					
ANR	11213726	CompoundStatement		133:0:3756:4022	11213724	0					
ANR	11213727	Statement	static	134:2:3760:3765	11213724	0	True				
ANR	11213728	IdentifierDeclStatement	char buffer [ 1024 ] ;	134:9:3767:3784	11213724	1	True				
ANR	11213729	IdentifierDecl	buffer [ 1024 ]		11213724	0					
ANR	11213730	IdentifierDeclType	char [ 1024 ]		11213724	0					
ANR	11213731	Identifier	buffer		11213724	1					
ANR	11213732	PrimaryExpression	1024		11213724	2					
ANR	11213733	IdentifierDeclStatement	"int origlen , i ;"	135:2:3788:3801	11213724	2	True				
ANR	11213734	IdentifierDecl	origlen		11213724	0					
ANR	11213735	IdentifierDeclType	int		11213724	0					
ANR	11213736	Identifier	origlen		11213724	1					
ANR	11213737	IdentifierDecl	i		11213724	1					
ANR	11213738	IdentifierDeclType	int		11213724	0					
ANR	11213739	Identifier	i		11213724	1					
ANR	11213740	ExpressionStatement	"strcpy ( buffer , arcname )"	137:2:3806:3828	11213724	3	True				
ANR	11213741	CallExpression	"strcpy ( buffer , arcname )"		11213724	0					
ANR	11213742	Callee	strcpy		11213724	0					
ANR	11213743	Identifier	strcpy		11213724	0					
ANR	11213744	ArgumentList	buffer		11213724	1					
ANR	11213745	Argument	buffer		11213724	0					
ANR	11213746	Identifier	buffer		11213724	0					
ANR	11213747	Argument	arcname		11213724	1					
ANR	11213748	Identifier	arcname		11213724	0					
ANR	11213749	ExpressionStatement	origlen = strlen ( buffer )	138:2:3832:3856	11213724	4	True				
ANR	11213750	AssignmentExpression	origlen = strlen ( buffer )		11213724	0		=			
ANR	11213751	Identifier	origlen		11213724	0					
ANR	11213752	CallExpression	strlen ( buffer )		11213724	1					
ANR	11213753	Callee	strlen		11213724	0					
ANR	11213754	Identifier	strlen		11213724	0					
ANR	11213755	ArgumentList	buffer		11213724	1					
ANR	11213756	Argument	buffer		11213724	0					
ANR	11213757	Identifier	buffer		11213724	0					
ANR	11213758	ForStatement	for ( i = 0 ; TGZsuffix [ i ] ; i ++ )		11213724	5					
ANR	11213759	ForInit	i = 0 ;	140:7:3866:3869	11213724	0	True				
ANR	11213760	AssignmentExpression	i = 0		11213724	0		=			
ANR	11213761	Identifier	i		11213724	0					
ANR	11213762	PrimaryExpression	0		11213724	1					
ANR	11213763	Condition	TGZsuffix [ i ]	140:12:3871:3882	11213724	1	True				
ANR	11213764	ArrayIndexing	TGZsuffix [ i ]		11213724	0					
ANR	11213765	Identifier	TGZsuffix		11213724	0					
ANR	11213766	Identifier	i		11213724	1					
ANR	11213767	PostIncDecOperationExpression	i ++	140:26:3885:3887	11213724	2	True				
ANR	11213768	Identifier	i		11213724	0					
ANR	11213769	IncDec	++		11213724	1					
ANR	11213770	CompoundStatement		9:4:137:137	11213724	3					
ANR	11213771	ExpressionStatement	"strcpy ( buffer + origlen , TGZsuffix [ i ] )"	142:7:3903:3938	11213724	0	True				
ANR	11213772	CallExpression	"strcpy ( buffer + origlen , TGZsuffix [ i ] )"		11213724	0					
ANR	11213773	Callee	strcpy		11213724	0					
ANR	11213774	Identifier	strcpy		11213724	0					
ANR	11213775	ArgumentList	buffer + origlen		11213724	1					
ANR	11213776	Argument	buffer + origlen		11213724	0					
ANR	11213777	AdditiveExpression	buffer + origlen		11213724	0		+			
ANR	11213778	Identifier	buffer		11213724	0					
ANR	11213779	Identifier	origlen		11213724	1					
ANR	11213780	Argument	TGZsuffix [ i ]		11213724	1					
ANR	11213781	ArrayIndexing	TGZsuffix [ i ]		11213724	0					
ANR	11213782	Identifier	TGZsuffix		11213724	0					
ANR	11213783	Identifier	i		11213724	1					
ANR	11213784	IfStatement	"if ( access ( buffer , F_OK ) == 0 )"		11213724	1					
ANR	11213785	Condition	"access ( buffer , F_OK ) == 0"	143:11:3951:3974	11213724	0	True				
ANR	11213786	EqualityExpression	"access ( buffer , F_OK ) == 0"		11213724	0		==			
ANR	11213787	CallExpression	"access ( buffer , F_OK )"		11213724	0					
ANR	11213788	Callee	access		11213724	0					
ANR	11213789	Identifier	access		11213724	0					
ANR	11213790	ArgumentList	buffer		11213724	1					
ANR	11213791	Argument	buffer		11213724	0					
ANR	11213792	Identifier	buffer		11213724	0					
ANR	11213793	Argument	F_OK		11213724	1					
ANR	11213794	Identifier	F_OK		11213724	0					
ANR	11213795	PrimaryExpression	0		11213724	1					
ANR	11213796	ReturnStatement	return buffer ;	144:9:3986:3999	11213724	1	True				
ANR	11213797	Identifier	buffer		11213724	0					
ANR	11213798	ReturnStatement	return NULL ;	146:2:4009:4020	11213724	6	True				
ANR	11213799	Identifier	NULL		11213724	0					
ANR	11213800	ReturnType	char *		11213724	1					
ANR	11213801	Identifier	TGZfname		11213724	2					
ANR	11213802	ParameterList	const char * arcname		11213724	3					
ANR	11213803	Parameter	const char * arcname	132:16:3735:3753	11213724	0	True				
ANR	11213804	ParameterType	const char *		11213724	0					
ANR	11213805	Identifier	arcname		11213724	1					
ANR	11213806	CFGEntryNode	ENTRY		11213724		True				
ANR	11213807	CFGExitNode	EXIT		11213724		True				
ANR	11213808	Symbol	origlen		11213724						
ANR	11213809	Symbol	strlen		11213724						
ANR	11213810	Symbol	* i		11213724						
ANR	11213811	Symbol	access		11213724						
ANR	11213812	Symbol	NULL		11213724						
ANR	11213813	Symbol	F_OK		11213724						
ANR	11213814	Symbol	arcname		11213724						
ANR	11213815	Symbol	* TGZsuffix		11213724						
ANR	11213816	Symbol	i		11213724						
ANR	11213817	Symbol	buffer		11213724						
ANR	11213818	Symbol	TGZsuffix		11213724						
ANR	11213819	Function	TGZnotfound	152:0:4064:4310							
ANR	11213820	FunctionDef	TGZnotfound (const char * arcname)		11213819	0					
ANR	11213821	CompoundStatement		153:0:4103:4310	11213819	0					
ANR	11213822	IdentifierDeclStatement	int i ;	154:2:4107:4112	11213819	0	True				
ANR	11213823	IdentifierDecl	i		11213819	0					
ANR	11213824	IdentifierDeclType	int		11213819	0					
ANR	11213825	Identifier	i		11213819	1					
ANR	11213826	ExpressionStatement	"fprintf ( stderr , ""%s: Couldn't find "" , prog )"	156:2:4117:4158	11213819	1	True				
ANR	11213827	CallExpression	"fprintf ( stderr , ""%s: Couldn't find "" , prog )"		11213819	0					
ANR	11213828	Callee	fprintf		11213819	0					
ANR	11213829	Identifier	fprintf		11213819	0					
ANR	11213830	ArgumentList	stderr		11213819	1					
ANR	11213831	Argument	stderr		11213819	0					
ANR	11213832	Identifier	stderr		11213819	0					
ANR	11213833	Argument	"""%s: Couldn't find """		11213819	1					
ANR	11213834	PrimaryExpression	"""%s: Couldn't find """		11213819	0					
ANR	11213835	Argument	prog		11213819	2					
ANR	11213836	Identifier	prog		11213819	0					
ANR	11213837	ForStatement	for ( i = 0 ; TGZsuffix [ i ] ; i ++ )		11213819	2					
ANR	11213838	ForInit	i = 0 ;	157:7:4167:4170	11213819	0	True				
ANR	11213839	AssignmentExpression	i = 0		11213819	0		=			
ANR	11213840	Identifier	i		11213819	0					
ANR	11213841	PrimaryExpression	0		11213819	1					
ANR	11213842	Condition	TGZsuffix [ i ]	157:11:4171:4182	11213819	1	True				
ANR	11213843	ArrayIndexing	TGZsuffix [ i ]		11213819	0					
ANR	11213844	Identifier	TGZsuffix		11213819	0					
ANR	11213845	Identifier	i		11213819	1					
ANR	11213846	PostIncDecOperationExpression	i ++	157:24:4184:4186	11213819	2	True				
ANR	11213847	Identifier	i		11213819	0					
ANR	11213848	IncDec	++		11213819	1					
ANR	11213849	ExpressionStatement	"fprintf ( stderr , ( TGZsuffix [ i + 1 ] ) ? ""%s%s, "" : ""or %s%s\\n"" , arcname , TGZsuffix [ i ] )"	158:4:4193:4297	11213819	3	True				
ANR	11213850	CallExpression	"fprintf ( stderr , ( TGZsuffix [ i + 1 ] ) ? ""%s%s, "" : ""or %s%s\\n"" , arcname , TGZsuffix [ i ] )"		11213819	0					
ANR	11213851	Callee	fprintf		11213819	0					
ANR	11213852	Identifier	fprintf		11213819	0					
ANR	11213853	ArgumentList	stderr		11213819	1					
ANR	11213854	Argument	stderr		11213819	0					
ANR	11213855	Identifier	stderr		11213819	0					
ANR	11213856	Argument	"( TGZsuffix [ i + 1 ] ) ? ""%s%s, "" : ""or %s%s\\n"""		11213819	1					
ANR	11213857	ConditionalExpression	"( TGZsuffix [ i + 1 ] ) ? ""%s%s, "" : ""or %s%s\\n"""		11213819	0					
ANR	11213858	Condition	TGZsuffix [ i + 1 ]		11213819	0					
ANR	11213859	ArrayIndexing	TGZsuffix [ i + 1 ]		11213819	0					
ANR	11213860	Identifier	TGZsuffix		11213819	0					
ANR	11213861	AdditiveExpression	i + 1		11213819	1		+			
ANR	11213862	Identifier	i		11213819	0					
ANR	11213863	PrimaryExpression	1		11213819	1					
ANR	11213864	PrimaryExpression	"""%s%s, """		11213819	1					
ANR	11213865	PrimaryExpression	"""or %s%s\\n"""		11213819	2					
ANR	11213866	Argument	arcname		11213819	2					
ANR	11213867	Identifier	arcname		11213819	0					
ANR	11213868	Argument	TGZsuffix [ i ]		11213819	3					
ANR	11213869	ArrayIndexing	TGZsuffix [ i ]		11213819	0					
ANR	11213870	Identifier	TGZsuffix		11213819	0					
ANR	11213871	Identifier	i		11213819	1					
ANR	11213872	ExpressionStatement	exit ( 1 )	161:2:4301:4308	11213819	3	True				
ANR	11213873	CallExpression	exit ( 1 )		11213819	0					
ANR	11213874	Callee	exit		11213819	0					
ANR	11213875	Identifier	exit		11213819	0					
ANR	11213876	ArgumentList	1		11213819	1					
ANR	11213877	Argument	1		11213819	0					
ANR	11213878	PrimaryExpression	1		11213819	0					
ANR	11213879	ReturnType	void		11213819	1					
ANR	11213880	Identifier	TGZnotfound		11213819	2					
ANR	11213881	ParameterList	const char * arcname		11213819	3					
ANR	11213882	Parameter	const char * arcname	152:18:4082:4100	11213819	0	True				
ANR	11213883	ParameterType	const char *		11213819	0					
ANR	11213884	Identifier	arcname		11213819	1					
ANR	11213885	CFGEntryNode	ENTRY		11213819		True				
ANR	11213886	CFGExitNode	EXIT		11213819		True				
ANR	11213887	Symbol	* i		11213819						
ANR	11213888	Symbol	arcname		11213819						
ANR	11213889	Symbol	* TGZsuffix		11213819						
ANR	11213890	Symbol	i		11213819						
ANR	11213891	Symbol	stderr		11213819						
ANR	11213892	Symbol	prog		11213819						
ANR	11213893	Symbol	TGZsuffix		11213819						
ANR	11213894	Function	getoct	168:0:4374:4658							
ANR	11213895	FunctionDef	"getoct (char * p , int width)"		11213894	0					
ANR	11213896	CompoundStatement		169:0:4405:4658	11213894	0					
ANR	11213897	IdentifierDeclStatement	int result = 0 ;	170:2:4409:4423	11213894	0	True				
ANR	11213898	IdentifierDecl	result = 0		11213894	0					
ANR	11213899	IdentifierDeclType	int		11213894	0					
ANR	11213900	Identifier	result		11213894	1					
ANR	11213901	AssignmentExpression	result = 0		11213894	2		=			
ANR	11213902	Identifier	result		11213894	0					
ANR	11213903	PrimaryExpression	0		11213894	1					
ANR	11213904	IdentifierDeclStatement	char c ;	171:2:4427:4433	11213894	1	True				
ANR	11213905	IdentifierDecl	c		11213894	0					
ANR	11213906	IdentifierDeclType	char		11213894	0					
ANR	11213907	Identifier	c		11213894	1					
ANR	11213908	WhileStatement	while ( width -- )		11213894	2					
ANR	11213909	Condition	width --	173:9:4445:4451	11213894	0	True				
ANR	11213910	PostIncDecOperationExpression	width --		11213894	0					
ANR	11213911	Identifier	width		11213894	0					
ANR	11213912	IncDec	--		11213894	1					
ANR	11213913	CompoundStatement		6:4:52:52	11213894	1					
ANR	11213914	ExpressionStatement	c = * p ++	175:6:4466:4474	11213894	0	True				
ANR	11213915	AssignmentExpression	c = * p ++		11213894	0		=			
ANR	11213916	Identifier	c		11213894	0					
ANR	11213917	UnaryOperationExpression	* p ++		11213894	1					
ANR	11213918	UnaryOperator	*		11213894	0					
ANR	11213919	PostIncDecOperationExpression	p ++		11213894	1					
ANR	11213920	Identifier	p		11213894	0					
ANR	11213921	IncDec	++		11213894	1					
ANR	11213922	IfStatement	if ( c == 0 )		11213894	1					
ANR	11213923	Condition	c == 0	176:10:4486:4491	11213894	0	True				
ANR	11213924	EqualityExpression	c == 0		11213894	0		==			
ANR	11213925	Identifier	c		11213894	0					
ANR	11213926	PrimaryExpression	0		11213894	1					
ANR	11213927	BreakStatement	break ;	177:8:4502:4507	11213894	1	True				
ANR	11213928	IfStatement	if ( c == ' ' )		11213894	2					
ANR	11213929	Condition	c == ' '	178:10:4519:4526	11213894	0	True				
ANR	11213930	EqualityExpression	c == ' '		11213894	0		==			
ANR	11213931	Identifier	c		11213894	0					
ANR	11213932	PrimaryExpression	' '		11213894	1					
ANR	11213933	ContinueStatement	continue ;	179:8:4537:4545	11213894	1	True				
ANR	11213934	IfStatement	if ( c < '0' || c > '7' )		11213894	3					
ANR	11213935	Condition	c < '0' || c > '7'	180:10:4557:4574	11213894	0	True				
ANR	11213936	OrExpression	c < '0' || c > '7'		11213894	0		||			
ANR	11213937	RelationalExpression	c < '0'		11213894	0		<			
ANR	11213938	Identifier	c		11213894	0					
ANR	11213939	PrimaryExpression	'0'		11213894	1					
ANR	11213940	RelationalExpression	c > '7'		11213894	1		>			
ANR	11213941	Identifier	c		11213894	0					
ANR	11213942	PrimaryExpression	'7'		11213894	1					
ANR	11213943	ReturnStatement	return - 1 ;	181:8:4585:4594	11213894	1	True				
ANR	11213944	UnaryOperationExpression	- 1		11213894	0					
ANR	11213945	UnaryOperator	-		11213894	0					
ANR	11213946	PrimaryExpression	1		11213894	1					
ANR	11213947	ExpressionStatement	result = result * 8 + ( c - '0' )	182:6:4602:4633	11213894	4	True				
ANR	11213948	AssignmentExpression	result = result * 8 + ( c - '0' )		11213894	0		=			
ANR	11213949	Identifier	result		11213894	0					
ANR	11213950	AdditiveExpression	result * 8 + ( c - '0' )		11213894	1		+			
ANR	11213951	MultiplicativeExpression	result * 8		11213894	0		*			
ANR	11213952	Identifier	result		11213894	0					
ANR	11213953	PrimaryExpression	8		11213894	1					
ANR	11213954	AdditiveExpression	c - '0'		11213894	1		-			
ANR	11213955	Identifier	c		11213894	0					
ANR	11213956	PrimaryExpression	'0'		11213894	1					
ANR	11213957	ReturnStatement	return result ;	184:2:4643:4656	11213894	3	True				
ANR	11213958	Identifier	result		11213894	0					
ANR	11213959	ReturnType	int		11213894	1					
ANR	11213960	Identifier	getoct		11213894	2					
ANR	11213961	ParameterList	"char * p , int width"		11213894	3					
ANR	11213962	Parameter	char * p	168:12:4386:4392	11213894	0	True				
ANR	11213963	ParameterType	char *		11213894	0					
ANR	11213964	Identifier	p		11213894	1					
ANR	11213965	Parameter	int width	168:20:4394:4402	11213894	1	True				
ANR	11213966	ParameterType	int		11213894	0					
ANR	11213967	Identifier	width		11213894	1					
ANR	11213968	CFGEntryNode	ENTRY		11213894		True				
ANR	11213969	CFGExitNode	EXIT		11213894		True				
ANR	11213970	Symbol	p		11213894						
ANR	11213971	Symbol	result		11213894						
ANR	11213972	Symbol	c		11213894						
ANR	11213973	Symbol	* p ++		11213894						
ANR	11213974	Symbol	width		11213894						
ANR	11213975	Function	strtime	191:0:4737:5025							
ANR	11213976	FunctionDef	strtime (time_t * t)		11213975	0					
ANR	11213977	CompoundStatement		192:0:4763:5025	11213975	0					
ANR	11213978	IdentifierDeclStatement	struct tm * local ;	193:2:4767:4785	11213975	0	True				
ANR	11213979	IdentifierDecl	* local		11213975	0					
ANR	11213980	IdentifierDeclType	struct tm *		11213975	0					
ANR	11213981	Identifier	local		11213975	1					
ANR	11213982	Statement	static	194:2:4789:4794	11213975	1	True				
ANR	11213983	IdentifierDeclStatement	char result [ 32 ] ;	194:9:4796:4811	11213975	2	True				
ANR	11213984	IdentifierDecl	result [ 32 ]		11213975	0					
ANR	11213985	IdentifierDeclType	char [ 32 ]		11213975	0					
ANR	11213986	Identifier	result		11213975	1					
ANR	11213987	PrimaryExpression	32		11213975	2					
ANR	11213988	ExpressionStatement	local = localtime ( t )	196:2:4816:4836	11213975	3	True				
ANR	11213989	AssignmentExpression	local = localtime ( t )		11213975	0		=			
ANR	11213990	Identifier	local		11213975	0					
ANR	11213991	CallExpression	localtime ( t )		11213975	1					
ANR	11213992	Callee	localtime		11213975	0					
ANR	11213993	Identifier	localtime		11213975	0					
ANR	11213994	ArgumentList	t		11213975	1					
ANR	11213995	Argument	t		11213975	0					
ANR	11213996	Identifier	t		11213975	0					
ANR	11213997	ExpressionStatement	"sprintf ( result , ""%4d/%02d/%02d %02d:%02d:%02d"" , local -> tm_year + 1900 , local -> tm_mon + 1 , local -> tm_mday , local -> tm_hour , local -> tm_min , local -> tm_sec )"	197:2:4840:5006	11213975	4	True				
ANR	11213998	CallExpression	"sprintf ( result , ""%4d/%02d/%02d %02d:%02d:%02d"" , local -> tm_year + 1900 , local -> tm_mon + 1 , local -> tm_mday , local -> tm_hour , local -> tm_min , local -> tm_sec )"		11213975	0					
ANR	11213999	Callee	sprintf		11213975	0					
ANR	11214000	Identifier	sprintf		11213975	0					
ANR	11214001	ArgumentList	result		11213975	1					
ANR	11214002	Argument	result		11213975	0					
ANR	11214003	Identifier	result		11213975	0					
ANR	11214004	Argument	"""%4d/%02d/%02d %02d:%02d:%02d"""		11213975	1					
ANR	11214005	PrimaryExpression	"""%4d/%02d/%02d %02d:%02d:%02d"""		11213975	0					
ANR	11214006	Argument	local -> tm_year + 1900		11213975	2					
ANR	11214007	AdditiveExpression	local -> tm_year + 1900		11213975	0		+			
ANR	11214008	PtrMemberAccess	local -> tm_year		11213975	0					
ANR	11214009	Identifier	local		11213975	0					
ANR	11214010	Identifier	tm_year		11213975	1					
ANR	11214011	PrimaryExpression	1900		11213975	1					
ANR	11214012	Argument	local -> tm_mon + 1		11213975	3					
ANR	11214013	AdditiveExpression	local -> tm_mon + 1		11213975	0		+			
ANR	11214014	PtrMemberAccess	local -> tm_mon		11213975	0					
ANR	11214015	Identifier	local		11213975	0					
ANR	11214016	Identifier	tm_mon		11213975	1					
ANR	11214017	PrimaryExpression	1		11213975	1					
ANR	11214018	Argument	local -> tm_mday		11213975	4					
ANR	11214019	PtrMemberAccess	local -> tm_mday		11213975	0					
ANR	11214020	Identifier	local		11213975	0					
ANR	11214021	Identifier	tm_mday		11213975	1					
ANR	11214022	Argument	local -> tm_hour		11213975	5					
ANR	11214023	PtrMemberAccess	local -> tm_hour		11213975	0					
ANR	11214024	Identifier	local		11213975	0					
ANR	11214025	Identifier	tm_hour		11213975	1					
ANR	11214026	Argument	local -> tm_min		11213975	6					
ANR	11214027	PtrMemberAccess	local -> tm_min		11213975	0					
ANR	11214028	Identifier	local		11213975	0					
ANR	11214029	Identifier	tm_min		11213975	1					
ANR	11214030	Argument	local -> tm_sec		11213975	7					
ANR	11214031	PtrMemberAccess	local -> tm_sec		11213975	0					
ANR	11214032	Identifier	local		11213975	0					
ANR	11214033	Identifier	tm_sec		11213975	1					
ANR	11214034	ReturnStatement	return result ;	200:2:5010:5023	11213975	5	True				
ANR	11214035	Identifier	result		11213975	0					
ANR	11214036	ReturnType	char *		11213975	1					
ANR	11214037	Identifier	strtime		11213975	2					
ANR	11214038	ParameterList	time_t * t		11213975	3					
ANR	11214039	Parameter	time_t * t	191:15:4752:4760	11213975	0	True				
ANR	11214040	ParameterType	time_t *		11213975	0					
ANR	11214041	Identifier	t		11213975	1					
ANR	11214042	CFGEntryNode	ENTRY		11213975		True				
ANR	11214043	CFGExitNode	EXIT		11213975		True				
ANR	11214044	Symbol	result		11213975						
ANR	11214045	Symbol	localtime		11213975						
ANR	11214046	Symbol	local -> tm_min		11213975						
ANR	11214047	Symbol	* local		11213975						
ANR	11214048	Symbol	local -> tm_sec		11213975						
ANR	11214049	Symbol	t		11213975						
ANR	11214050	Symbol	local -> tm_mon		11213975						
ANR	11214051	Symbol	local -> tm_mday		11213975						
ANR	11214052	Symbol	local		11213975						
ANR	11214053	Symbol	local -> tm_hour		11213975						
ANR	11214054	Symbol	local -> tm_year		11213975						
ANR	11214055	Function	setfiletime	206:0:5050:6232							
ANR	11214056	FunctionDef	"setfiletime (char * fname , time_t ftime)"		11214055	0					
ANR	11214057	CompoundStatement		207:0:5093:6232	11214055	0					
ANR	11214058	Statement	static	209:2:5110:5115	11214055	0	True				
ANR	11214059	IdentifierDeclStatement	int isWinNT = - 1 ;	209:9:5117:5133	11214055	1	True				
ANR	11214060	IdentifierDecl	isWinNT = - 1		11214055	0					
ANR	11214061	IdentifierDeclType	int		11214055	0					
ANR	11214062	Identifier	isWinNT		11214055	1					
ANR	11214063	AssignmentExpression	isWinNT = - 1		11214055	2		=			
ANR	11214064	Identifier	isWinNT		11214055	0					
ANR	11214065	UnaryOperationExpression	- 1		11214055	1					
ANR	11214066	UnaryOperator	-		11214055	0					
ANR	11214067	PrimaryExpression	1		11214055	1					
ANR	11214068	IdentifierDeclStatement	SYSTEMTIME st ;	210:2:5137:5150	11214055	2	True				
ANR	11214069	IdentifierDecl	st		11214055	0					
ANR	11214070	IdentifierDeclType	SYSTEMTIME		11214055	0					
ANR	11214071	Identifier	st		11214055	1					
ANR	11214072	IdentifierDeclStatement	"FILETIME locft , modft ;"	211:2:5154:5175	11214055	3	True				
ANR	11214073	IdentifierDecl	locft		11214055	0					
ANR	11214074	IdentifierDeclType	FILETIME		11214055	0					
ANR	11214075	Identifier	locft		11214055	1					
ANR	11214076	IdentifierDecl	modft		11214055	1					
ANR	11214077	IdentifierDeclType	FILETIME		11214055	0					
ANR	11214078	Identifier	modft		11214055	1					
ANR	11214079	IdentifierDeclStatement	struct tm * loctm ;	212:2:5179:5195	11214055	4	True				
ANR	11214080	IdentifierDecl	* loctm		11214055	0					
ANR	11214081	IdentifierDeclType	struct tm *		11214055	0					
ANR	11214082	Identifier	loctm		11214055	1					
ANR	11214083	IdentifierDeclStatement	HANDLE hFile ;	213:2:5199:5211	11214055	5	True				
ANR	11214084	IdentifierDecl	hFile		11214055	0					
ANR	11214085	IdentifierDeclType	HANDLE		11214055	0					
ANR	11214086	Identifier	hFile		11214055	1					
ANR	11214087	IdentifierDeclStatement	int result ;	214:2:5215:5225	11214055	6	True				
ANR	11214088	IdentifierDecl	result		11214055	0					
ANR	11214089	IdentifierDeclType	int		11214055	0					
ANR	11214090	Identifier	result		11214055	1					
ANR	11214091	ExpressionStatement	loctm = localtime ( & ftime )	216:2:5230:5255	11214055	7	True				
ANR	11214092	AssignmentExpression	loctm = localtime ( & ftime )		11214055	0		=			
ANR	11214093	Identifier	loctm		11214055	0					
ANR	11214094	CallExpression	localtime ( & ftime )		11214055	1					
ANR	11214095	Callee	localtime		11214055	0					
ANR	11214096	Identifier	localtime		11214055	0					
ANR	11214097	ArgumentList	& ftime		11214055	1					
ANR	11214098	Argument	& ftime		11214055	0					
ANR	11214099	UnaryOperationExpression	& ftime		11214055	0					
ANR	11214100	UnaryOperator	&		11214055	0					
ANR	11214101	Identifier	ftime		11214055	1					
ANR	11214102	IfStatement	if ( loctm == NULL )		11214055	8					
ANR	11214103	Condition	loctm == NULL	217:6:5263:5275	11214055	0	True				
ANR	11214104	EqualityExpression	loctm == NULL		11214055	0		==			
ANR	11214105	Identifier	loctm		11214055	0					
ANR	11214106	Identifier	NULL		11214055	1					
ANR	11214107	ReturnStatement	return - 1 ;	218:4:5282:5291	11214055	1	True				
ANR	11214108	UnaryOperationExpression	- 1		11214055	0					
ANR	11214109	UnaryOperator	-		11214055	0					
ANR	11214110	PrimaryExpression	1		11214055	1					
ANR	11214111	ExpressionStatement	st . wYear = ( WORD ) loctm -> tm_year + 1900	220:2:5296:5342	11214055	9	True				
ANR	11214112	AssignmentExpression	st . wYear = ( WORD ) loctm -> tm_year + 1900		11214055	0		=			
ANR	11214113	MemberAccess	st . wYear		11214055	0					
ANR	11214114	Identifier	st		11214055	0					
ANR	11214115	Identifier	wYear		11214055	1					
ANR	11214116	AdditiveExpression	( WORD ) loctm -> tm_year + 1900		11214055	1		+			
ANR	11214117	CastExpression	( WORD ) loctm -> tm_year		11214055	0					
ANR	11214118	CastTarget	WORD		11214055	0					
ANR	11214119	PtrMemberAccess	loctm -> tm_year		11214055	1					
ANR	11214120	Identifier	loctm		11214055	0					
ANR	11214121	Identifier	tm_year		11214055	1					
ANR	11214122	PrimaryExpression	1900		11214055	1					
ANR	11214123	ExpressionStatement	st . wMonth = ( WORD ) loctm -> tm_mon + 1	221:2:5346:5388	11214055	10	True				
ANR	11214124	AssignmentExpression	st . wMonth = ( WORD ) loctm -> tm_mon + 1		11214055	0		=			
ANR	11214125	MemberAccess	st . wMonth		11214055	0					
ANR	11214126	Identifier	st		11214055	0					
ANR	11214127	Identifier	wMonth		11214055	1					
ANR	11214128	AdditiveExpression	( WORD ) loctm -> tm_mon + 1		11214055	1		+			
ANR	11214129	CastExpression	( WORD ) loctm -> tm_mon		11214055	0					
ANR	11214130	CastTarget	WORD		11214055	0					
ANR	11214131	PtrMemberAccess	loctm -> tm_mon		11214055	1					
ANR	11214132	Identifier	loctm		11214055	0					
ANR	11214133	Identifier	tm_mon		11214055	1					
ANR	11214134	PrimaryExpression	1		11214055	1					
ANR	11214135	ExpressionStatement	st . wDayOfWeek = ( WORD ) loctm -> tm_wday	222:2:5392:5431	11214055	11	True				
ANR	11214136	AssignmentExpression	st . wDayOfWeek = ( WORD ) loctm -> tm_wday		11214055	0		=			
ANR	11214137	MemberAccess	st . wDayOfWeek		11214055	0					
ANR	11214138	Identifier	st		11214055	0					
ANR	11214139	Identifier	wDayOfWeek		11214055	1					
ANR	11214140	CastExpression	( WORD ) loctm -> tm_wday		11214055	1					
ANR	11214141	CastTarget	WORD		11214055	0					
ANR	11214142	PtrMemberAccess	loctm -> tm_wday		11214055	1					
ANR	11214143	Identifier	loctm		11214055	0					
ANR	11214144	Identifier	tm_wday		11214055	1					
ANR	11214145	ExpressionStatement	st . wDay = ( WORD ) loctm -> tm_mday	223:2:5435:5474	11214055	12	True				
ANR	11214146	AssignmentExpression	st . wDay = ( WORD ) loctm -> tm_mday		11214055	0		=			
ANR	11214147	MemberAccess	st . wDay		11214055	0					
ANR	11214148	Identifier	st		11214055	0					
ANR	11214149	Identifier	wDay		11214055	1					
ANR	11214150	CastExpression	( WORD ) loctm -> tm_mday		11214055	1					
ANR	11214151	CastTarget	WORD		11214055	0					
ANR	11214152	PtrMemberAccess	loctm -> tm_mday		11214055	1					
ANR	11214153	Identifier	loctm		11214055	0					
ANR	11214154	Identifier	tm_mday		11214055	1					
ANR	11214155	ExpressionStatement	st . wHour = ( WORD ) loctm -> tm_hour	224:2:5478:5517	11214055	13	True				
ANR	11214156	AssignmentExpression	st . wHour = ( WORD ) loctm -> tm_hour		11214055	0		=			
ANR	11214157	MemberAccess	st . wHour		11214055	0					
ANR	11214158	Identifier	st		11214055	0					
ANR	11214159	Identifier	wHour		11214055	1					
ANR	11214160	CastExpression	( WORD ) loctm -> tm_hour		11214055	1					
ANR	11214161	CastTarget	WORD		11214055	0					
ANR	11214162	PtrMemberAccess	loctm -> tm_hour		11214055	1					
ANR	11214163	Identifier	loctm		11214055	0					
ANR	11214164	Identifier	tm_hour		11214055	1					
ANR	11214165	ExpressionStatement	st . wMinute = ( WORD ) loctm -> tm_min	225:2:5521:5559	11214055	14	True				
ANR	11214166	AssignmentExpression	st . wMinute = ( WORD ) loctm -> tm_min		11214055	0		=			
ANR	11214167	MemberAccess	st . wMinute		11214055	0					
ANR	11214168	Identifier	st		11214055	0					
ANR	11214169	Identifier	wMinute		11214055	1					
ANR	11214170	CastExpression	( WORD ) loctm -> tm_min		11214055	1					
ANR	11214171	CastTarget	WORD		11214055	0					
ANR	11214172	PtrMemberAccess	loctm -> tm_min		11214055	1					
ANR	11214173	Identifier	loctm		11214055	0					
ANR	11214174	Identifier	tm_min		11214055	1					
ANR	11214175	ExpressionStatement	st . wSecond = ( WORD ) loctm -> tm_sec	226:2:5563:5601	11214055	15	True				
ANR	11214176	AssignmentExpression	st . wSecond = ( WORD ) loctm -> tm_sec		11214055	0		=			
ANR	11214177	MemberAccess	st . wSecond		11214055	0					
ANR	11214178	Identifier	st		11214055	0					
ANR	11214179	Identifier	wSecond		11214055	1					
ANR	11214180	CastExpression	( WORD ) loctm -> tm_sec		11214055	1					
ANR	11214181	CastTarget	WORD		11214055	0					
ANR	11214182	PtrMemberAccess	loctm -> tm_sec		11214055	1					
ANR	11214183	Identifier	loctm		11214055	0					
ANR	11214184	Identifier	tm_sec		11214055	1					
ANR	11214185	ExpressionStatement	st . wMilliseconds = 0	227:2:5605:5625	11214055	16	True				
ANR	11214186	AssignmentExpression	st . wMilliseconds = 0		11214055	0		=			
ANR	11214187	MemberAccess	st . wMilliseconds		11214055	0					
ANR	11214188	Identifier	st		11214055	0					
ANR	11214189	Identifier	wMilliseconds		11214055	1					
ANR	11214190	PrimaryExpression	0		11214055	1					
ANR	11214191	IfStatement	"if ( ! SystemTimeToFileTime ( & st , & locft ) || ! LocalFileTimeToFileTime ( & locft , & modft ) )"		11214055	17					
ANR	11214192	Condition	"! SystemTimeToFileTime ( & st , & locft ) || ! LocalFileTimeToFileTime ( & locft , & modft )"	228:6:5633:5716	11214055	0	True				
ANR	11214193	OrExpression	"! SystemTimeToFileTime ( & st , & locft ) || ! LocalFileTimeToFileTime ( & locft , & modft )"		11214055	0		||			
ANR	11214194	UnaryOperationExpression	"! SystemTimeToFileTime ( & st , & locft )"		11214055	0					
ANR	11214195	UnaryOperator	!		11214055	0					
ANR	11214196	CallExpression	"SystemTimeToFileTime ( & st , & locft )"		11214055	1					
ANR	11214197	Callee	SystemTimeToFileTime		11214055	0					
ANR	11214198	Identifier	SystemTimeToFileTime		11214055	0					
ANR	11214199	ArgumentList	& st		11214055	1					
ANR	11214200	Argument	& st		11214055	0					
ANR	11214201	UnaryOperationExpression	& st		11214055	0					
ANR	11214202	UnaryOperator	&		11214055	0					
ANR	11214203	Identifier	st		11214055	1					
ANR	11214204	Argument	& locft		11214055	1					
ANR	11214205	UnaryOperationExpression	& locft		11214055	0					
ANR	11214206	UnaryOperator	&		11214055	0					
ANR	11214207	Identifier	locft		11214055	1					
ANR	11214208	UnaryOperationExpression	"! LocalFileTimeToFileTime ( & locft , & modft )"		11214055	1					
ANR	11214209	UnaryOperator	!		11214055	0					
ANR	11214210	CallExpression	"LocalFileTimeToFileTime ( & locft , & modft )"		11214055	1					
ANR	11214211	Callee	LocalFileTimeToFileTime		11214055	0					
ANR	11214212	Identifier	LocalFileTimeToFileTime		11214055	0					
ANR	11214213	ArgumentList	& locft		11214055	1					
ANR	11214214	Argument	& locft		11214055	0					
ANR	11214215	UnaryOperationExpression	& locft		11214055	0					
ANR	11214216	UnaryOperator	&		11214055	0					
ANR	11214217	Identifier	locft		11214055	1					
ANR	11214218	Argument	& modft		11214055	1					
ANR	11214219	UnaryOperationExpression	& modft		11214055	0					
ANR	11214220	UnaryOperator	&		11214055	0					
ANR	11214221	Identifier	modft		11214055	1					
ANR	11214222	ReturnStatement	return - 1 ;	230:4:5723:5732	11214055	1	True				
ANR	11214223	UnaryOperationExpression	- 1		11214055	0					
ANR	11214224	UnaryOperator	-		11214055	0					
ANR	11214225	PrimaryExpression	1		11214055	1					
ANR	11214226	IfStatement	if ( isWinNT < 0 )		11214055	18					
ANR	11214227	Condition	isWinNT < 0	232:6:5741:5751	11214055	0	True				
ANR	11214228	RelationalExpression	isWinNT < 0		11214055	0		<			
ANR	11214229	Identifier	isWinNT		11214055	0					
ANR	11214230	PrimaryExpression	0		11214055	1					
ANR	11214231	ExpressionStatement	isWinNT = ( GetVersion ( ) < 0x80000000 ) ? 1 : 0	233:4:5758:5803	11214055	1	True				
ANR	11214232	AssignmentExpression	isWinNT = ( GetVersion ( ) < 0x80000000 ) ? 1 : 0		11214055	0		=			
ANR	11214233	Identifier	isWinNT		11214055	0					
ANR	11214234	ConditionalExpression	( GetVersion ( ) < 0x80000000 ) ? 1 : 0		11214055	1					
ANR	11214235	Condition	GetVersion ( ) < 0x80000000		11214055	0					
ANR	11214236	RelationalExpression	GetVersion ( ) < 0x80000000		11214055	0		<			
ANR	11214237	CallExpression	GetVersion ( )		11214055	0					
ANR	11214238	Callee	GetVersion		11214055	0					
ANR	11214239	Identifier	GetVersion		11214055	0					
ANR	11214240	ArgumentList			11214055	1					
ANR	11214241	PrimaryExpression	0x80000000		11214055	1					
ANR	11214242	PrimaryExpression	1		11214055	1					
ANR	11214243	PrimaryExpression	0		11214055	2					
ANR	11214244	ExpressionStatement	"hFile = CreateFile ( fname , GENERIC_WRITE , 0 , NULL , OPEN_EXISTING , ( isWinNT ? FILE_FLAG_BACKUP_SEMANTICS : 0 ) , NULL )"	234:2:5807:5963	11214055	19	True				
ANR	11214245	AssignmentExpression	"hFile = CreateFile ( fname , GENERIC_WRITE , 0 , NULL , OPEN_EXISTING , ( isWinNT ? FILE_FLAG_BACKUP_SEMANTICS : 0 ) , NULL )"		11214055	0		=			
ANR	11214246	Identifier	hFile		11214055	0					
ANR	11214247	CallExpression	"CreateFile ( fname , GENERIC_WRITE , 0 , NULL , OPEN_EXISTING , ( isWinNT ? FILE_FLAG_BACKUP_SEMANTICS : 0 ) , NULL )"		11214055	1					
ANR	11214248	Callee	CreateFile		11214055	0					
ANR	11214249	Identifier	CreateFile		11214055	0					
ANR	11214250	ArgumentList	fname		11214055	1					
ANR	11214251	Argument	fname		11214055	0					
ANR	11214252	Identifier	fname		11214055	0					
ANR	11214253	Argument	GENERIC_WRITE		11214055	1					
ANR	11214254	Identifier	GENERIC_WRITE		11214055	0					
ANR	11214255	Argument	0		11214055	2					
ANR	11214256	PrimaryExpression	0		11214055	0					
ANR	11214257	Argument	NULL		11214055	3					
ANR	11214258	Identifier	NULL		11214055	0					
ANR	11214259	Argument	OPEN_EXISTING		11214055	4					
ANR	11214260	Identifier	OPEN_EXISTING		11214055	0					
ANR	11214261	Argument	isWinNT ? FILE_FLAG_BACKUP_SEMANTICS : 0		11214055	5					
ANR	11214262	ConditionalExpression	isWinNT ? FILE_FLAG_BACKUP_SEMANTICS : 0		11214055	0					
ANR	11214263	Condition	isWinNT		11214055	0					
ANR	11214264	Identifier	isWinNT		11214055	0					
ANR	11214265	Identifier	FILE_FLAG_BACKUP_SEMANTICS		11214055	1					
ANR	11214266	PrimaryExpression	0		11214055	2					
ANR	11214267	Argument	NULL		11214055	6					
ANR	11214268	Identifier	NULL		11214055	0					
ANR	11214269	IfStatement	if ( hFile == INVALID_HANDLE_VALUE )		11214055	20					
ANR	11214270	Condition	hFile == INVALID_HANDLE_VALUE	237:6:5971:5999	11214055	0	True				
ANR	11214271	EqualityExpression	hFile == INVALID_HANDLE_VALUE		11214055	0		==			
ANR	11214272	Identifier	hFile		11214055	0					
ANR	11214273	Identifier	INVALID_HANDLE_VALUE		11214055	1					
ANR	11214274	ReturnStatement	return - 1 ;	238:4:6006:6015	11214055	1	True				
ANR	11214275	UnaryOperationExpression	- 1		11214055	0					
ANR	11214276	UnaryOperator	-		11214055	0					
ANR	11214277	PrimaryExpression	1		11214055	1					
ANR	11214278	ExpressionStatement	"result = SetFileTime ( hFile , NULL , NULL , & modft ) ? 0 : - 1"	239:2:6019:6075	11214055	21	True				
ANR	11214279	AssignmentExpression	"result = SetFileTime ( hFile , NULL , NULL , & modft ) ? 0 : - 1"		11214055	0		=			
ANR	11214280	Identifier	result		11214055	0					
ANR	11214281	ConditionalExpression	"SetFileTime ( hFile , NULL , NULL , & modft ) ? 0 : - 1"		11214055	1					
ANR	11214282	Condition	"SetFileTime ( hFile , NULL , NULL , & modft )"		11214055	0					
ANR	11214283	CallExpression	"SetFileTime ( hFile , NULL , NULL , & modft )"		11214055	0					
ANR	11214284	Callee	SetFileTime		11214055	0					
ANR	11214285	Identifier	SetFileTime		11214055	0					
ANR	11214286	ArgumentList	hFile		11214055	1					
ANR	11214287	Argument	hFile		11214055	0					
ANR	11214288	Identifier	hFile		11214055	0					
ANR	11214289	Argument	NULL		11214055	1					
ANR	11214290	Identifier	NULL		11214055	0					
ANR	11214291	Argument	NULL		11214055	2					
ANR	11214292	Identifier	NULL		11214055	0					
ANR	11214293	Argument	& modft		11214055	3					
ANR	11214294	UnaryOperationExpression	& modft		11214055	0					
ANR	11214295	UnaryOperator	&		11214055	0					
ANR	11214296	Identifier	modft		11214055	1					
ANR	11214297	PrimaryExpression	0		11214055	1					
ANR	11214298	UnaryOperationExpression	- 1		11214055	2					
ANR	11214299	UnaryOperator	-		11214055	0					
ANR	11214300	PrimaryExpression	1		11214055	1					
ANR	11214301	ExpressionStatement	CloseHandle ( hFile )	240:2:6079:6097	11214055	22	True				
ANR	11214302	CallExpression	CloseHandle ( hFile )		11214055	0					
ANR	11214303	Callee	CloseHandle		11214055	0					
ANR	11214304	Identifier	CloseHandle		11214055	0					
ANR	11214305	ArgumentList	hFile		11214055	1					
ANR	11214306	Argument	hFile		11214055	0					
ANR	11214307	Identifier	hFile		11214055	0					
ANR	11214308	ReturnStatement	return result ;	241:2:6101:6114	11214055	23	True				
ANR	11214309	Identifier	result		11214055	0					
ANR	11214310	ReturnType	int		11214055	1					
ANR	11214311	Identifier	setfiletime		11214055	2					
ANR	11214312	ParameterList	"char * fname , time_t ftime"		11214055	3					
ANR	11214313	Parameter	char * fname	206:17:5067:5077	11214055	0	True				
ANR	11214314	ParameterType	char *		11214055	0					
ANR	11214315	Identifier	fname		11214055	1					
ANR	11214316	Parameter	time_t ftime	206:29:5079:5090	11214055	1	True				
ANR	11214317	ParameterType	time_t		11214055	0					
ANR	11214318	Identifier	ftime		11214055	1					
ANR	11214319	CFGEntryNode	ENTRY		11214055		True				
ANR	11214320	CFGExitNode	EXIT		11214055		True				
ANR	11214321	Symbol	localtime		11214055						
ANR	11214322	Symbol	loctm -> tm_mday		11214055						
ANR	11214323	Symbol	loctm -> tm_mon		11214055						
ANR	11214324	Symbol	st . wHour		11214055						
ANR	11214325	Symbol	SystemTimeToFileTime		11214055						
ANR	11214326	Symbol	* loctm		11214055						
ANR	11214327	Symbol	st . wMonth		11214055						
ANR	11214328	Symbol	& st		11214055						
ANR	11214329	Symbol	st . wMinute		11214055						
ANR	11214330	Symbol	result		11214055						
ANR	11214331	Symbol	CreateFile		11214055						
ANR	11214332	Symbol	loctm -> tm_wday		11214055						
ANR	11214333	Symbol	st . wMilliseconds		11214055						
ANR	11214334	Symbol	GetVersion		11214055						
ANR	11214335	Symbol	GENERIC_WRITE		11214055						
ANR	11214336	Symbol	loctm -> tm_sec		11214055						
ANR	11214337	Symbol	loctm		11214055						
ANR	11214338	Symbol	LocalFileTimeToFileTime		11214055						
ANR	11214339	Symbol	OPEN_EXISTING		11214055						
ANR	11214340	Symbol	hFile		11214055						
ANR	11214341	Symbol	loctm -> tm_min		11214055						
ANR	11214342	Symbol	ftime		11214055						
ANR	11214343	Symbol	fname		11214055						
ANR	11214344	Symbol	st		11214055						
ANR	11214345	Symbol	& ftime		11214055						
ANR	11214346	Symbol	modft		11214055						
ANR	11214347	Symbol	NULL		11214055						
ANR	11214348	Symbol	loctm -> tm_hour		11214055						
ANR	11214349	Symbol	loctm -> tm_year		11214055						
ANR	11214350	Symbol	st . wSecond		11214055						
ANR	11214351	Symbol	locft		11214055						
ANR	11214352	Symbol	& modft		11214055						
ANR	11214353	Symbol	INVALID_HANDLE_VALUE		11214055						
ANR	11214354	Symbol	SetFileTime		11214055						
ANR	11214355	Symbol	st . wDay		11214055						
ANR	11214356	Symbol	st . wYear		11214055						
ANR	11214357	Symbol	& locft		11214055						
ANR	11214358	Symbol	FILE_FLAG_BACKUP_SEMANTICS		11214055						
ANR	11214359	Symbol	st . wDayOfWeek		11214055						
ANR	11214360	Symbol	isWinNT		11214055						
ANR	11214361	Function	push_attr	253:0:6264:6597							
ANR	11214362	FunctionDef	"push_attr (struct attr_item * * list , char * fname , int mode , time_t time)"		11214361	0					
ANR	11214363	CompoundStatement		254:0:6337:6597	11214361	0					
ANR	11214364	IdentifierDeclStatement	struct attr_item * item ;	255:2:6341:6363	11214361	0	True				
ANR	11214365	IdentifierDecl	* item		11214361	0					
ANR	11214366	IdentifierDeclType	struct attr_item *		11214361	0					
ANR	11214367	Identifier	item		11214361	1					
ANR	11214368	ExpressionStatement	item = ( struct attr_item * ) malloc ( sizeof ( struct attr_item ) )	257:2:6368:6427	11214361	1	True				
ANR	11214369	AssignmentExpression	item = ( struct attr_item * ) malloc ( sizeof ( struct attr_item ) )		11214361	0		=			
ANR	11214370	Identifier	item		11214361	0					
ANR	11214371	CastExpression	( struct attr_item * ) malloc ( sizeof ( struct attr_item ) )		11214361	1					
ANR	11214372	CastTarget	struct attr_item *		11214361	0					
ANR	11214373	CallExpression	malloc ( sizeof ( struct attr_item ) )		11214361	1					
ANR	11214374	Callee	malloc		11214361	0					
ANR	11214375	Identifier	malloc		11214361	0					
ANR	11214376	ArgumentList	sizeof ( struct attr_item )		11214361	1					
ANR	11214377	Argument	sizeof ( struct attr_item )		11214361	0					
ANR	11214378	SizeofExpression	sizeof ( struct attr_item )		11214361	0					
ANR	11214379	Sizeof	sizeof		11214361	0					
ANR	11214380	SizeofOperand	struct attr_item		11214361	1					
ANR	11214381	IfStatement	if ( item == NULL )		11214361	2					
ANR	11214382	Condition	item == NULL	258:6:6435:6446	11214361	0	True				
ANR	11214383	EqualityExpression	item == NULL		11214361	0		==			
ANR	11214384	Identifier	item		11214361	0					
ANR	11214385	Identifier	NULL		11214361	1					
ANR	11214386	ExpressionStatement	"error ( ""Out of memory"" )"	259:4:6453:6475	11214361	1	True				
ANR	11214387	CallExpression	"error ( ""Out of memory"" )"		11214361	0					
ANR	11214388	Callee	error		11214361	0					
ANR	11214389	Identifier	error		11214361	0					
ANR	11214390	ArgumentList	"""Out of memory"""		11214361	1					
ANR	11214391	Argument	"""Out of memory"""		11214361	0					
ANR	11214392	PrimaryExpression	"""Out of memory"""		11214361	0					
ANR	11214393	ExpressionStatement	item -> fname = strdup ( fname )	260:2:6479:6506	11214361	3	True				
ANR	11214394	AssignmentExpression	item -> fname = strdup ( fname )		11214361	0		=			
ANR	11214395	PtrMemberAccess	item -> fname		11214361	0					
ANR	11214396	Identifier	item		11214361	0					
ANR	11214397	Identifier	fname		11214361	1					
ANR	11214398	CallExpression	strdup ( fname )		11214361	1					
ANR	11214399	Callee	strdup		11214361	0					
ANR	11214400	Identifier	strdup		11214361	0					
ANR	11214401	ArgumentList	fname		11214361	1					
ANR	11214402	Argument	fname		11214361	0					
ANR	11214403	Identifier	fname		11214361	0					
ANR	11214404	ExpressionStatement	item -> mode = mode	261:2:6510:6528	11214361	4	True				
ANR	11214405	AssignmentExpression	item -> mode = mode		11214361	0		=			
ANR	11214406	PtrMemberAccess	item -> mode		11214361	0					
ANR	11214407	Identifier	item		11214361	0					
ANR	11214408	Identifier	mode		11214361	1					
ANR	11214409	Identifier	mode		11214361	1					
ANR	11214410	ExpressionStatement	item -> time = time	262:2:6532:6550	11214361	5	True				
ANR	11214411	AssignmentExpression	item -> time = time		11214361	0		=			
ANR	11214412	PtrMemberAccess	item -> time		11214361	0					
ANR	11214413	Identifier	item		11214361	0					
ANR	11214414	Identifier	time		11214361	1					
ANR	11214415	Identifier	time		11214361	1					
ANR	11214416	ExpressionStatement	item -> next = * list	263:2:6554:6573	11214361	6	True				
ANR	11214417	AssignmentExpression	item -> next = * list		11214361	0		=			
ANR	11214418	PtrMemberAccess	item -> next		11214361	0					
ANR	11214419	Identifier	item		11214361	0					
ANR	11214420	Identifier	next		11214361	1					
ANR	11214421	UnaryOperationExpression	* list		11214361	1					
ANR	11214422	UnaryOperator	*		11214361	0					
ANR	11214423	Identifier	list		11214361	1					
ANR	11214424	ExpressionStatement	* list = item	264:2:6577:6595	11214361	7	True				
ANR	11214425	AssignmentExpression	* list = item		11214361	0		=			
ANR	11214426	UnaryOperationExpression	* list		11214361	0					
ANR	11214427	UnaryOperator	*		11214361	0					
ANR	11214428	Identifier	list		11214361	1					
ANR	11214429	Identifier	item		11214361	1					
ANR	11214430	ReturnType	void		11214361	1					
ANR	11214431	Identifier	push_attr		11214361	2					
ANR	11214432	ParameterList	"struct attr_item * * list , char * fname , int mode , time_t time"		11214361	3					
ANR	11214433	Parameter	struct attr_item * * list	253:15:6279:6301	11214361	0	True				
ANR	11214434	ParameterType	struct attr_item * *		11214361	0					
ANR	11214435	Identifier	list		11214361	1					
ANR	11214436	Parameter	char * fname	253:39:6303:6313	11214361	1	True				
ANR	11214437	ParameterType	char *		11214361	0					
ANR	11214438	Identifier	fname		11214361	1					
ANR	11214439	Parameter	int mode	253:51:6315:6322	11214361	2	True				
ANR	11214440	ParameterType	int		11214361	0					
ANR	11214441	Identifier	mode		11214361	1					
ANR	11214442	Parameter	time_t time	253:60:6324:6334	11214361	3	True				
ANR	11214443	ParameterType	time_t		11214361	0					
ANR	11214444	Identifier	time		11214361	1					
ANR	11214445	CFGEntryNode	ENTRY		11214361		True				
ANR	11214446	CFGExitNode	EXIT		11214361		True				
ANR	11214447	Symbol	fname		11214361						
ANR	11214448	Symbol	malloc		11214361						
ANR	11214449	Symbol	item		11214361						
ANR	11214450	Symbol	item -> fname		11214361						
ANR	11214451	Symbol	NULL		11214361						
ANR	11214452	Symbol	list		11214361						
ANR	11214453	Symbol	item -> next		11214361						
ANR	11214454	Symbol	mode		11214361						
ANR	11214455	Symbol	item -> time		11214361						
ANR	11214456	Symbol	* list		11214361						
ANR	11214457	Symbol	* item		11214361						
ANR	11214458	Symbol	time		11214361						
ANR	11214459	Symbol	strdup		11214361						
ANR	11214460	Symbol	item -> mode		11214361						
ANR	11214461	Function	restore_attr	270:0:6632:6918							
ANR	11214462	FunctionDef	restore_attr (struct attr_item * * list)		11214461	0					
ANR	11214463	CompoundStatement		271:0:6675:6918	11214461	0					
ANR	11214464	IdentifierDeclStatement	"struct attr_item * item , * prev ;"	272:2:6679:6708	11214461	0	True				
ANR	11214465	IdentifierDecl	* item		11214461	0					
ANR	11214466	IdentifierDeclType	struct attr_item *		11214461	0					
ANR	11214467	Identifier	item		11214461	1					
ANR	11214468	IdentifierDecl	* prev		11214461	1					
ANR	11214469	IdentifierDeclType	struct attr_item *		11214461	0					
ANR	11214470	Identifier	prev		11214461	1					
ANR	11214471	ForStatement	for ( item = * list ; item != NULL ; )		11214461	1					
ANR	11214472	ForInit	item = * list ;	274:7:6718:6730	11214461	0	True				
ANR	11214473	AssignmentExpression	item = * list		11214461	0		=			
ANR	11214474	Identifier	item		11214461	0					
ANR	11214475	UnaryOperationExpression	* list		11214461	1					
ANR	11214476	UnaryOperator	*		11214461	0					
ANR	11214477	Identifier	list		11214461	1					
ANR	11214478	Condition	item != NULL	274:21:6732:6743	11214461	1	True				
ANR	11214479	EqualityExpression	item != NULL		11214461	0		!=			
ANR	11214480	Identifier	item		11214461	0					
ANR	11214481	Identifier	NULL		11214461	1					
ANR	11214482	CompoundStatement		5:4:76:76	11214461	2					
ANR	11214483	ExpressionStatement	"setfiletime ( item -> fname , item -> time )"	276:6:6760:6795	11214461	0	True				
ANR	11214484	CallExpression	"setfiletime ( item -> fname , item -> time )"		11214461	0					
ANR	11214485	Callee	setfiletime		11214461	0					
ANR	11214486	Identifier	setfiletime		11214461	0					
ANR	11214487	ArgumentList	item -> fname		11214461	1					
ANR	11214488	Argument	item -> fname		11214461	0					
ANR	11214489	PtrMemberAccess	item -> fname		11214461	0					
ANR	11214490	Identifier	item		11214461	0					
ANR	11214491	Identifier	fname		11214461	1					
ANR	11214492	Argument	item -> time		11214461	1					
ANR	11214493	PtrMemberAccess	item -> time		11214461	0					
ANR	11214494	Identifier	item		11214461	0					
ANR	11214495	Identifier	time		11214461	1					
ANR	11214496	ExpressionStatement	"chmod ( item -> fname , item -> mode )"	277:6:6803:6832	11214461	1	True				
ANR	11214497	CallExpression	"chmod ( item -> fname , item -> mode )"		11214461	0					
ANR	11214498	Callee	chmod		11214461	0					
ANR	11214499	Identifier	chmod		11214461	0					
ANR	11214500	ArgumentList	item -> fname		11214461	1					
ANR	11214501	Argument	item -> fname		11214461	0					
ANR	11214502	PtrMemberAccess	item -> fname		11214461	0					
ANR	11214503	Identifier	item		11214461	0					
ANR	11214504	Identifier	fname		11214461	1					
ANR	11214505	Argument	item -> mode		11214461	1					
ANR	11214506	PtrMemberAccess	item -> mode		11214461	0					
ANR	11214507	Identifier	item		11214461	0					
ANR	11214508	Identifier	mode		11214461	1					
ANR	11214509	ExpressionStatement	prev = item	278:6:6840:6851	11214461	2	True				
ANR	11214510	AssignmentExpression	prev = item		11214461	0		=			
ANR	11214511	Identifier	prev		11214461	0					
ANR	11214512	Identifier	item		11214461	1					
ANR	11214513	ExpressionStatement	item = item -> next	279:6:6859:6876	11214461	3	True				
ANR	11214514	AssignmentExpression	item = item -> next		11214461	0		=			
ANR	11214515	Identifier	item		11214461	0					
ANR	11214516	PtrMemberAccess	item -> next		11214461	1					
ANR	11214517	Identifier	item		11214461	0					
ANR	11214518	Identifier	next		11214461	1					
ANR	11214519	ExpressionStatement	free ( prev )	280:6:6884:6894	11214461	4	True				
ANR	11214520	CallExpression	free ( prev )		11214461	0					
ANR	11214521	Callee	free		11214461	0					
ANR	11214522	Identifier	free		11214461	0					
ANR	11214523	ArgumentList	prev		11214461	1					
ANR	11214524	Argument	prev		11214461	0					
ANR	11214525	Identifier	prev		11214461	0					
ANR	11214526	ExpressionStatement	* list = NULL	282:2:6904:6916	11214461	2	True				
ANR	11214527	AssignmentExpression	* list = NULL		11214461	0		=			
ANR	11214528	UnaryOperationExpression	* list		11214461	0					
ANR	11214529	UnaryOperator	*		11214461	0					
ANR	11214530	Identifier	list		11214461	1					
ANR	11214531	Identifier	NULL		11214461	1					
ANR	11214532	ReturnType	void		11214461	1					
ANR	11214533	Identifier	restore_attr		11214461	2					
ANR	11214534	ParameterList	struct attr_item * * list		11214461	3					
ANR	11214535	Parameter	struct attr_item * * list	270:18:6650:6672	11214461	0	True				
ANR	11214536	ParameterType	struct attr_item * *		11214461	0					
ANR	11214537	Identifier	list		11214461	1					
ANR	11214538	CFGEntryNode	ENTRY		11214461		True				
ANR	11214539	CFGExitNode	EXIT		11214461		True				
ANR	11214540	Symbol	item -> time		11214461						
ANR	11214541	Symbol	item		11214461						
ANR	11214542	Symbol	item -> fname		11214461						
ANR	11214543	Symbol	NULL		11214461						
ANR	11214544	Symbol	* list		11214461						
ANR	11214545	Symbol	* item		11214461						
ANR	11214546	Symbol	prev		11214461						
ANR	11214547	Symbol	list		11214461						
ANR	11214548	Symbol	item -> mode		11214461						
ANR	11214549	Symbol	item -> next		11214461						
ANR	11214550	Function	ExprMatch	290:0:7007:7667							
ANR	11214551	FunctionDef	"ExprMatch (char * string , char * expr)"		11214550	0					
ANR	11214552	CompoundStatement		291:0:7047:7667	11214550	0					
ANR	11214553	WhileStatement	while ( 1 )		11214550	0					
ANR	11214554	Condition	1	292:9:7058:7058	11214550	0	True				
ANR	11214555	PrimaryExpression	1		11214550	0					
ANR	11214556	CompoundStatement		3:4:17:17	11214550	1					
ANR	11214557	IfStatement	if ( ISSPECIAL ( * expr ) )		11214550	0					
ANR	11214558	Condition	ISSPECIAL ( * expr )	294:10:7077:7092	11214550	0	True				
ANR	11214559	CallExpression	ISSPECIAL ( * expr )		11214550	0					
ANR	11214560	Callee	ISSPECIAL		11214550	0					
ANR	11214561	Identifier	ISSPECIAL		11214550	0					
ANR	11214562	ArgumentList	* expr		11214550	1					
ANR	11214563	Argument	* expr		11214550	0					
ANR	11214564	UnaryOperationExpression	* expr		11214550	0					
ANR	11214565	UnaryOperator	*		11214550	0					
ANR	11214566	Identifier	expr		11214550	1					
ANR	11214567	CompoundStatement		5:8:55:55	11214550	1					
ANR	11214568	IfStatement	if ( * expr == '/' )		11214550	0					
ANR	11214569	Condition	* expr == '/'	296:14:7119:7130	11214550	0	True				
ANR	11214570	EqualityExpression	* expr == '/'		11214550	0		==			
ANR	11214571	UnaryOperationExpression	* expr		11214550	0					
ANR	11214572	UnaryOperator	*		11214550	0					
ANR	11214573	Identifier	expr		11214550	1					
ANR	11214574	PrimaryExpression	'/'		11214550	1					
ANR	11214575	CompoundStatement		7:12:97:97	11214550	1					
ANR	11214576	IfStatement	if ( * string != '\\\\' && * string != '/' )		11214550	0					
ANR	11214577	Condition	* string != '\\\\' && * string != '/'	298:18:7165:7197	11214550	0	True				
ANR	11214578	AndExpression	* string != '\\\\' && * string != '/'		11214550	0		&&			
ANR	11214579	EqualityExpression	* string != '\\\\'		11214550	0		!=			
ANR	11214580	UnaryOperationExpression	* string		11214550	0					
ANR	11214581	UnaryOperator	*		11214550	0					
ANR	11214582	Identifier	string		11214550	1					
ANR	11214583	PrimaryExpression	'\\\\'		11214550	1					
ANR	11214584	EqualityExpression	* string != '/'		11214550	1		!=			
ANR	11214585	UnaryOperationExpression	* string		11214550	0					
ANR	11214586	UnaryOperator	*		11214550	0					
ANR	11214587	Identifier	string		11214550	1					
ANR	11214588	PrimaryExpression	'/'		11214550	1					
ANR	11214589	ReturnStatement	return 0 ;	299:16:7216:7224	11214550	1	True				
ANR	11214590	PrimaryExpression	0		11214550	0					
ANR	11214591	ExpressionStatement	string ++	300:14:7240:7249	11214550	1	True				
ANR	11214592	PostIncDecOperationExpression	string ++		11214550	0					
ANR	11214593	Identifier	string		11214550	0					
ANR	11214594	IncDec	++		11214550	1					
ANR	11214595	ExpressionStatement	expr ++	300:25:7251:7257	11214550	2	True				
ANR	11214596	PostIncDecOperationExpression	expr ++		11214550	0					
ANR	11214597	Identifier	expr		11214550	0					
ANR	11214598	IncDec	++		11214550	1					
ANR	11214599	ElseStatement	else		11214550	0					
ANR	11214600	IfStatement	if ( * expr == '*' )		11214550	0					
ANR	11214601	Condition	* expr == '*'	302:19:7292:7303	11214550	0	True				
ANR	11214602	EqualityExpression	* expr == '*'		11214550	0		==			
ANR	11214603	UnaryOperationExpression	* expr		11214550	0					
ANR	11214604	UnaryOperator	*		11214550	0					
ANR	11214605	Identifier	expr		11214550	1					
ANR	11214606	PrimaryExpression	'*'		11214550	1					
ANR	11214607	CompoundStatement		13:12:270:270	11214550	1					
ANR	11214608	IfStatement	if ( * expr ++ == 0 )		11214550	0					
ANR	11214609	Condition	* expr ++ == 0	304:18:7338:7350	11214550	0	True				
ANR	11214610	EqualityExpression	* expr ++ == 0		11214550	0		==			
ANR	11214611	UnaryOperationExpression	* expr ++		11214550	0					
ANR	11214612	UnaryOperator	*		11214550	0					
ANR	11214613	PostIncDecOperationExpression	expr ++		11214550	1					
ANR	11214614	Identifier	expr		11214550	0					
ANR	11214615	IncDec	++		11214550	1					
ANR	11214616	PrimaryExpression	0		11214550	1					
ANR	11214617	ReturnStatement	return 1 ;	305:16:7369:7377	11214550	1	True				
ANR	11214618	PrimaryExpression	1		11214550	0					
ANR	11214619	WhileStatement	while ( * ++ string != * expr )		11214550	1					
ANR	11214620	Condition	* ++ string != * expr	306:21:7400:7417	11214550	0	True				
ANR	11214621	EqualityExpression	* ++ string != * expr		11214550	0		!=			
ANR	11214622	UnaryOperationExpression	* ++ string		11214550	0					
ANR	11214623	UnaryOperator	*		11214550	0					
ANR	11214624	UnaryExpression	++ string		11214550	1					
ANR	11214625	IncDec	++		11214550	0					
ANR	11214626	Identifier	string		11214550	1					
ANR	11214627	UnaryOperationExpression	* expr		11214550	1					
ANR	11214628	UnaryOperator	*		11214550	0					
ANR	11214629	Identifier	expr		11214550	1					
ANR	11214630	IfStatement	if ( * string == 0 )		11214550	1					
ANR	11214631	Condition	* string == 0	307:20:7440:7451	11214550	0	True				
ANR	11214632	EqualityExpression	* string == 0		11214550	0		==			
ANR	11214633	UnaryOperationExpression	* string		11214550	0					
ANR	11214634	UnaryOperator	*		11214550	0					
ANR	11214635	Identifier	string		11214550	1					
ANR	11214636	PrimaryExpression	0		11214550	1					
ANR	11214637	ReturnStatement	return 0 ;	308:18:7472:7480	11214550	1	True				
ANR	11214638	PrimaryExpression	0		11214550	0					
ANR	11214639	ElseStatement	else		11214550	0					
ANR	11214640	CompoundStatement		22:8:477:477	11214550	0					
ANR	11214641	IfStatement	if ( * string != * expr )		11214550	0					
ANR	11214642	Condition	* string != * expr	313:14:7541:7556	11214550	0	True				
ANR	11214643	EqualityExpression	* string != * expr		11214550	0		!=			
ANR	11214644	UnaryOperationExpression	* string		11214550	0					
ANR	11214645	UnaryOperator	*		11214550	0					
ANR	11214646	Identifier	string		11214550	1					
ANR	11214647	UnaryOperationExpression	* expr		11214550	1					
ANR	11214648	UnaryOperator	*		11214550	0					
ANR	11214649	Identifier	expr		11214550	1					
ANR	11214650	ReturnStatement	return 0 ;	314:12:7571:7579	11214550	1	True				
ANR	11214651	PrimaryExpression	0		11214550	0					
ANR	11214652	IfStatement	if ( * expr ++ == 0 )		11214550	1					
ANR	11214653	Condition	* expr ++ == 0	315:14:7595:7606	11214550	0	True				
ANR	11214654	EqualityExpression	* expr ++ == 0		11214550	0		==			
ANR	11214655	UnaryOperationExpression	* expr ++		11214550	0					
ANR	11214656	UnaryOperator	*		11214550	0					
ANR	11214657	PostIncDecOperationExpression	expr ++		11214550	1					
ANR	11214658	Identifier	expr		11214550	0					
ANR	11214659	IncDec	++		11214550	1					
ANR	11214660	PrimaryExpression	0		11214550	1					
ANR	11214661	ReturnStatement	return 1 ;	316:12:7621:7629	11214550	1	True				
ANR	11214662	PrimaryExpression	1		11214550	0					
ANR	11214663	ExpressionStatement	string ++	317:10:7641:7649	11214550	2	True				
ANR	11214664	PostIncDecOperationExpression	string ++		11214550	0					
ANR	11214665	Identifier	string		11214550	0					
ANR	11214666	IncDec	++		11214550	1					
ANR	11214667	ReturnType	int		11214550	1					
ANR	11214668	Identifier	ExprMatch		11214550	2					
ANR	11214669	ParameterList	"char * string , char * expr"		11214550	3					
ANR	11214670	Parameter	char * string	290:15:7022:7033	11214550	0	True				
ANR	11214671	ParameterType	char *		11214550	0					
ANR	11214672	Identifier	string		11214550	1					
ANR	11214673	Parameter	char * expr	290:28:7035:7044	11214550	1	True				
ANR	11214674	ParameterType	char *		11214550	0					
ANR	11214675	Identifier	expr		11214550	1					
ANR	11214676	CFGEntryNode	ENTRY		11214550		True				
ANR	11214677	CFGExitNode	EXIT		11214550		True				
ANR	11214678	Symbol	string		11214550						
ANR	11214679	Symbol	ISSPECIAL		11214550						
ANR	11214680	Symbol	* expr		11214550						
ANR	11214681	Symbol	* string		11214550						
ANR	11214682	Symbol	expr		11214550						
ANR	11214683	Symbol	* ++ string		11214550						
ANR	11214684	Symbol	* expr ++		11214550						
ANR	11214685	Function	makedir	328:0:7814:8540							
ANR	11214686	FunctionDef	makedir (char * newdir)		11214685	0					
ANR	11214687	CompoundStatement		329:0:7841:8540	11214685	0					
ANR	11214688	IdentifierDeclStatement	char * buffer = strdup ( newdir ) ;	330:2:7845:7874	11214685	0	True				
ANR	11214689	IdentifierDecl	* buffer = strdup ( newdir )		11214685	0					
ANR	11214690	IdentifierDeclType	char *		11214685	0					
ANR	11214691	Identifier	buffer		11214685	1					
ANR	11214692	AssignmentExpression	* buffer = strdup ( newdir )		11214685	2		=			
ANR	11214693	Identifier	buffer		11214685	0					
ANR	11214694	CallExpression	strdup ( newdir )		11214685	1					
ANR	11214695	Callee	strdup		11214685	0					
ANR	11214696	Identifier	strdup		11214685	0					
ANR	11214697	ArgumentList	newdir		11214685	1					
ANR	11214698	Argument	newdir		11214685	0					
ANR	11214699	Identifier	newdir		11214685	0					
ANR	11214700	IdentifierDeclStatement	char * p ;	331:2:7878:7885	11214685	1	True				
ANR	11214701	IdentifierDecl	* p		11214685	0					
ANR	11214702	IdentifierDeclType	char *		11214685	0					
ANR	11214703	Identifier	p		11214685	1					
ANR	11214704	IdentifierDeclStatement	int len = strlen ( buffer ) ;	332:2:7889:7914	11214685	2	True				
ANR	11214705	IdentifierDecl	len = strlen ( buffer )		11214685	0					
ANR	11214706	IdentifierDeclType	int		11214685	0					
ANR	11214707	Identifier	len		11214685	1					
ANR	11214708	AssignmentExpression	len = strlen ( buffer )		11214685	2		=			
ANR	11214709	Identifier	len		11214685	0					
ANR	11214710	CallExpression	strlen ( buffer )		11214685	1					
ANR	11214711	Callee	strlen		11214685	0					
ANR	11214712	Identifier	strlen		11214685	0					
ANR	11214713	ArgumentList	buffer		11214685	1					
ANR	11214714	Argument	buffer		11214685	0					
ANR	11214715	Identifier	buffer		11214685	0					
ANR	11214716	IfStatement	if ( len <= 0 )		11214685	3					
ANR	11214717	Condition	len <= 0	334:6:7923:7930	11214685	0	True				
ANR	11214718	RelationalExpression	len <= 0		11214685	0		<=			
ANR	11214719	Identifier	len		11214685	0					
ANR	11214720	PrimaryExpression	0		11214685	1					
ANR	11214721	CompoundStatement		6:16:91:91	11214685	1					
ANR	11214722	ExpressionStatement	free ( buffer )	335:4:7939:7951	11214685	0	True				
ANR	11214723	CallExpression	free ( buffer )		11214685	0					
ANR	11214724	Callee	free		11214685	0					
ANR	11214725	Identifier	free		11214685	0					
ANR	11214726	ArgumentList	buffer		11214685	1					
ANR	11214727	Argument	buffer		11214685	0					
ANR	11214728	Identifier	buffer		11214685	0					
ANR	11214729	ReturnStatement	return 0 ;	336:4:7957:7965	11214685	1	True				
ANR	11214730	PrimaryExpression	0		11214685	0					
ANR	11214731	IfStatement	if ( buffer [ len - 1 ] == '/' )		11214685	4					
ANR	11214732	Condition	buffer [ len - 1 ] == '/'	338:6:7977:7996	11214685	0	True				
ANR	11214733	EqualityExpression	buffer [ len - 1 ] == '/'		11214685	0		==			
ANR	11214734	ArrayIndexing	buffer [ len - 1 ]		11214685	0					
ANR	11214735	Identifier	buffer		11214685	0					
ANR	11214736	AdditiveExpression	len - 1		11214685	1		-			
ANR	11214737	Identifier	len		11214685	0					
ANR	11214738	PrimaryExpression	1		11214685	1					
ANR	11214739	PrimaryExpression	'/'		11214685	1					
ANR	11214740	CompoundStatement		10:28:157:157	11214685	1					
ANR	11214741	ExpressionStatement	buffer [ len - 1 ] = '\\0'	339:4:8005:8025	11214685	0	True				
ANR	11214742	AssignmentExpression	buffer [ len - 1 ] = '\\0'		11214685	0		=			
ANR	11214743	ArrayIndexing	buffer [ len - 1 ]		11214685	0					
ANR	11214744	Identifier	buffer		11214685	0					
ANR	11214745	AdditiveExpression	len - 1		11214685	1		-			
ANR	11214746	Identifier	len		11214685	0					
ANR	11214747	PrimaryExpression	1		11214685	1					
ANR	11214748	PrimaryExpression	'\\0'		11214685	1					
ANR	11214749	IfStatement	"if ( mkdir ( buffer , 0755 ) == 0 )"		11214685	5					
ANR	11214750	Condition	"mkdir ( buffer , 0755 ) == 0"	341:6:8037:8060	11214685	0	True				
ANR	11214751	EqualityExpression	"mkdir ( buffer , 0755 ) == 0"		11214685	0		==			
ANR	11214752	CallExpression	"mkdir ( buffer , 0755 )"		11214685	0					
ANR	11214753	Callee	mkdir		11214685	0					
ANR	11214754	Identifier	mkdir		11214685	0					
ANR	11214755	ArgumentList	buffer		11214685	1					
ANR	11214756	Argument	buffer		11214685	0					
ANR	11214757	Identifier	buffer		11214685	0					
ANR	11214758	Argument	0755		11214685	1					
ANR	11214759	PrimaryExpression	0755		11214685	0					
ANR	11214760	PrimaryExpression	0		11214685	1					
ANR	11214761	CompoundStatement		14:4:225:225	11214685	1					
ANR	11214762	ExpressionStatement	free ( buffer )	343:6:8075:8087	11214685	0	True				
ANR	11214763	CallExpression	free ( buffer )		11214685	0					
ANR	11214764	Callee	free		11214685	0					
ANR	11214765	Identifier	free		11214685	0					
ANR	11214766	ArgumentList	buffer		11214685	1					
ANR	11214767	Argument	buffer		11214685	0					
ANR	11214768	Identifier	buffer		11214685	0					
ANR	11214769	ReturnStatement	return 1 ;	344:6:8095:8103	11214685	1	True				
ANR	11214770	PrimaryExpression	1		11214685	0					
ANR	11214771	ExpressionStatement	p = buffer + 1	347:2:8114:8126	11214685	6	True				
ANR	11214772	AssignmentExpression	p = buffer + 1		11214685	0		=			
ANR	11214773	Identifier	p		11214685	0					
ANR	11214774	AdditiveExpression	buffer + 1		11214685	1		+			
ANR	11214775	Identifier	buffer		11214685	0					
ANR	11214776	PrimaryExpression	1		11214685	1					
ANR	11214777	WhileStatement	while ( 1 )		11214685	7					
ANR	11214778	Condition	1	348:9:8137:8137	11214685	0	True				
ANR	11214779	PrimaryExpression	1		11214685	0					
ANR	11214780	CompoundStatement		22:6:310:319	11214685	1					
ANR	11214781	IdentifierDeclStatement	char hold ;	350:6:8152:8161	11214685	0	True				
ANR	11214782	IdentifierDecl	hold		11214685	0					
ANR	11214783	IdentifierDeclType	char		11214685	0					
ANR	11214784	Identifier	hold		11214685	1					
ANR	11214785	WhileStatement	while ( * p && * p != '\\\\' && * p != '/' )		11214685	1					
ANR	11214786	Condition	* p && * p != '\\\\' && * p != '/'	352:12:8176:8204	11214685	0	True				
ANR	11214787	AndExpression	* p && * p != '\\\\' && * p != '/'		11214685	0		&&			
ANR	11214788	UnaryOperationExpression	* p		11214685	0					
ANR	11214789	UnaryOperator	*		11214685	0					
ANR	11214790	Identifier	p		11214685	1					
ANR	11214791	AndExpression	* p != '\\\\' && * p != '/'		11214685	1		&&			
ANR	11214792	EqualityExpression	* p != '\\\\'		11214685	0		!=			
ANR	11214793	UnaryOperationExpression	* p		11214685	0					
ANR	11214794	UnaryOperator	*		11214685	0					
ANR	11214795	Identifier	p		11214685	1					
ANR	11214796	PrimaryExpression	'\\\\'		11214685	1					
ANR	11214797	EqualityExpression	* p != '/'		11214685	1		!=			
ANR	11214798	UnaryOperationExpression	* p		11214685	0					
ANR	11214799	UnaryOperator	*		11214685	0					
ANR	11214800	Identifier	p		11214685	1					
ANR	11214801	PrimaryExpression	'/'		11214685	1					
ANR	11214802	ExpressionStatement	p ++	353:8:8215:8218	11214685	1	True				
ANR	11214803	PostIncDecOperationExpression	p ++		11214685	0					
ANR	11214804	Identifier	p		11214685	0					
ANR	11214805	IncDec	++		11214685	1					
ANR	11214806	ExpressionStatement	hold = * p	354:6:8226:8235	11214685	2	True				
ANR	11214807	AssignmentExpression	hold = * p		11214685	0		=			
ANR	11214808	Identifier	hold		11214685	0					
ANR	11214809	UnaryOperationExpression	* p		11214685	1					
ANR	11214810	UnaryOperator	*		11214685	0					
ANR	11214811	Identifier	p		11214685	1					
ANR	11214812	ExpressionStatement	* p = 0	355:6:8243:8249	11214685	3	True				
ANR	11214813	AssignmentExpression	* p = 0		11214685	0		=			
ANR	11214814	UnaryOperationExpression	* p		11214685	0					
ANR	11214815	UnaryOperator	*		11214685	0					
ANR	11214816	Identifier	p		11214685	1					
ANR	11214817	PrimaryExpression	0		11214685	1					
ANR	11214818	IfStatement	"if ( ( mkdir ( buffer , 0755 ) == - 1 ) && ( errno == ENOENT ) )"		11214685	4					
ANR	11214819	Condition	"( mkdir ( buffer , 0755 ) == - 1 ) && ( errno == ENOENT )"	356:10:8261:8308	11214685	0	True				
ANR	11214820	AndExpression	"( mkdir ( buffer , 0755 ) == - 1 ) && ( errno == ENOENT )"		11214685	0		&&			
ANR	11214821	EqualityExpression	"mkdir ( buffer , 0755 ) == - 1"		11214685	0		==			
ANR	11214822	CallExpression	"mkdir ( buffer , 0755 )"		11214685	0					
ANR	11214823	Callee	mkdir		11214685	0					
ANR	11214824	Identifier	mkdir		11214685	0					
ANR	11214825	ArgumentList	buffer		11214685	1					
ANR	11214826	Argument	buffer		11214685	0					
ANR	11214827	Identifier	buffer		11214685	0					
ANR	11214828	Argument	0755		11214685	1					
ANR	11214829	PrimaryExpression	0755		11214685	0					
ANR	11214830	UnaryOperationExpression	- 1		11214685	1					
ANR	11214831	UnaryOperator	-		11214685	0					
ANR	11214832	PrimaryExpression	1		11214685	1					
ANR	11214833	EqualityExpression	errno == ENOENT		11214685	1		==			
ANR	11214834	Identifier	errno		11214685	0					
ANR	11214835	Identifier	ENOENT		11214685	1					
ANR	11214836	CompoundStatement		29:8:477:477	11214685	1					
ANR	11214837	ExpressionStatement	"fprintf ( stderr , ""%s: Couldn't create directory %s\\n"" , prog , buffer )"	358:10:8331:8395	11214685	0	True				
ANR	11214838	CallExpression	"fprintf ( stderr , ""%s: Couldn't create directory %s\\n"" , prog , buffer )"		11214685	0					
ANR	11214839	Callee	fprintf		11214685	0					
ANR	11214840	Identifier	fprintf		11214685	0					
ANR	11214841	ArgumentList	stderr		11214685	1					
ANR	11214842	Argument	stderr		11214685	0					
ANR	11214843	Identifier	stderr		11214685	0					
ANR	11214844	Argument	"""%s: Couldn't create directory %s\\n"""		11214685	1					
ANR	11214845	PrimaryExpression	"""%s: Couldn't create directory %s\\n"""		11214685	0					
ANR	11214846	Argument	prog		11214685	2					
ANR	11214847	Identifier	prog		11214685	0					
ANR	11214848	Argument	buffer		11214685	3					
ANR	11214849	Identifier	buffer		11214685	0					
ANR	11214850	ExpressionStatement	free ( buffer )	359:10:8407:8419	11214685	1	True				
ANR	11214851	CallExpression	free ( buffer )		11214685	0					
ANR	11214852	Callee	free		11214685	0					
ANR	11214853	Identifier	free		11214685	0					
ANR	11214854	ArgumentList	buffer		11214685	1					
ANR	11214855	Argument	buffer		11214685	0					
ANR	11214856	Identifier	buffer		11214685	0					
ANR	11214857	ReturnStatement	return 0 ;	360:10:8431:8439	11214685	2	True				
ANR	11214858	PrimaryExpression	0		11214685	0					
ANR	11214859	IfStatement	if ( hold == 0 )		11214685	5					
ANR	11214860	Condition	hold == 0	362:10:8461:8469	11214685	0	True				
ANR	11214861	EqualityExpression	hold == 0		11214685	0		==			
ANR	11214862	Identifier	hold		11214685	0					
ANR	11214863	PrimaryExpression	0		11214685	1					
ANR	11214864	BreakStatement	break ;	363:8:8480:8485	11214685	1	True				
ANR	11214865	ExpressionStatement	* p ++ = hold	364:6:8493:8504	11214685	6	True				
ANR	11214866	AssignmentExpression	* p ++ = hold		11214685	0		=			
ANR	11214867	UnaryOperationExpression	* p ++		11214685	0					
ANR	11214868	UnaryOperator	*		11214685	0					
ANR	11214869	PostIncDecOperationExpression	p ++		11214685	1					
ANR	11214870	Identifier	p		11214685	0					
ANR	11214871	IncDec	++		11214685	1					
ANR	11214872	Identifier	hold		11214685	1					
ANR	11214873	ExpressionStatement	free ( buffer )	366:2:8514:8526	11214685	8	True				
ANR	11214874	CallExpression	free ( buffer )		11214685	0					
ANR	11214875	Callee	free		11214685	0					
ANR	11214876	Identifier	free		11214685	0					
ANR	11214877	ArgumentList	buffer		11214685	1					
ANR	11214878	Argument	buffer		11214685	0					
ANR	11214879	Identifier	buffer		11214685	0					
ANR	11214880	ReturnStatement	return 1 ;	367:2:8530:8538	11214685	9	True				
ANR	11214881	PrimaryExpression	1		11214685	0					
ANR	11214882	ReturnType	int		11214685	1					
ANR	11214883	Identifier	makedir		11214685	2					
ANR	11214884	ParameterList	char * newdir		11214685	3					
ANR	11214885	Parameter	char * newdir	328:13:7827:7838	11214685	0	True				
ANR	11214886	ParameterType	char *		11214685	0					
ANR	11214887	Identifier	newdir		11214685	1					
ANR	11214888	CFGEntryNode	ENTRY		11214685		True				
ANR	11214889	CFGExitNode	EXIT		11214685		True				
ANR	11214890	Symbol	* buffer		11214685						
ANR	11214891	Symbol	errno		11214685						
ANR	11214892	Symbol	* p ++		11214685						
ANR	11214893	Symbol	ENOENT		11214685						
ANR	11214894	Symbol	stderr		11214685						
ANR	11214895	Symbol	prog		11214685						
ANR	11214896	Symbol	hold		11214685						
ANR	11214897	Symbol	p		11214685						
ANR	11214898	Symbol	strlen		11214685						
ANR	11214899	Symbol	len		11214685						
ANR	11214900	Symbol	newdir		11214685						
ANR	11214901	Symbol	* p		11214685						
ANR	11214902	Symbol	buffer		11214685						
ANR	11214903	Symbol	strdup		11214685						
ANR	11214904	Symbol	mkdir		11214685						
ANR	11214905	Symbol	* len		11214685						
ANR	11214906	Function	matchname	371:0:8544:8813							
ANR	11214907	FunctionDef	"matchname (int arg , int argc , char * * argv , char * fname)"		11214906	0					
ANR	11214908	CompoundStatement		372:0:8601:8813	11214906	0					
ANR	11214909	IfStatement	if ( arg == argc )		11214906	0					
ANR	11214910	Condition	arg == argc	373:6:8609:8619	11214906	0	True				
ANR	11214911	EqualityExpression	arg == argc		11214906	0		==			
ANR	11214912	Identifier	arg		11214906	0					
ANR	11214913	Identifier	argc		11214906	1					
ANR	11214914	ReturnStatement	return 1 ;	374:4:8675:8683	11214906	1	True				
ANR	11214915	PrimaryExpression	1		11214906	0					
ANR	11214916	WhileStatement	while ( arg < argc )		11214906	1					
ANR	11214917	Condition	arg < argc	376:9:8695:8704	11214906	0	True				
ANR	11214918	RelationalExpression	arg < argc		11214906	0		<			
ANR	11214919	Identifier	arg		11214906	0					
ANR	11214920	Identifier	argc		11214906	1					
ANR	11214921	IfStatement	"if ( ExprMatch ( fname , argv [ arg ++ ] ) )"		11214906	1					
ANR	11214922	Condition	"ExprMatch ( fname , argv [ arg ++ ] )"	377:8:8715:8742	11214906	0	True				
ANR	11214923	CallExpression	"ExprMatch ( fname , argv [ arg ++ ] )"		11214906	0					
ANR	11214924	Callee	ExprMatch		11214906	0					
ANR	11214925	Identifier	ExprMatch		11214906	0					
ANR	11214926	ArgumentList	fname		11214906	1					
ANR	11214927	Argument	fname		11214906	0					
ANR	11214928	Identifier	fname		11214906	0					
ANR	11214929	Argument	argv [ arg ++ ]		11214906	1					
ANR	11214930	ArrayIndexing	argv [ arg ++ ]		11214906	0					
ANR	11214931	Identifier	argv		11214906	0					
ANR	11214932	PostIncDecOperationExpression	arg ++		11214906	1					
ANR	11214933	Identifier	arg		11214906	0					
ANR	11214934	IncDec	++		11214906	1					
ANR	11214935	ReturnStatement	return 1 ;	378:6:8751:8759	11214906	1	True				
ANR	11214936	PrimaryExpression	1		11214906	0					
ANR	11214937	ReturnStatement	return 0 ;	380:2:8764:8772	11214906	2	True				
ANR	11214938	PrimaryExpression	0		11214906	0					
ANR	11214939	ReturnType	int		11214906	1					
ANR	11214940	Identifier	matchname		11214906	2					
ANR	11214941	ParameterList	"int arg , int argc , char * * argv , char * fname"		11214906	3					
ANR	11214942	Parameter	int arg	371:15:8559:8565	11214906	0	True				
ANR	11214943	ParameterType	int		11214906	0					
ANR	11214944	Identifier	arg		11214906	1					
ANR	11214945	Parameter	int argc	371:23:8567:8574	11214906	1	True				
ANR	11214946	ParameterType	int		11214906	0					
ANR	11214947	Identifier	argc		11214906	1					
ANR	11214948	Parameter	char * * argv	371:32:8576:8586	11214906	2	True				
ANR	11214949	ParameterType	char * *		11214906	0					
ANR	11214950	Identifier	argv		11214906	1					
ANR	11214951	Parameter	char * fname	371:44:8588:8598	11214906	3	True				
ANR	11214952	ParameterType	char *		11214906	0					
ANR	11214953	Identifier	fname		11214906	1					
ANR	11214954	CFGEntryNode	ENTRY		11214906		True				
ANR	11214955	CFGExitNode	EXIT		11214906		True				
ANR	11214956	Symbol	argc		11214906						
ANR	11214957	Symbol	fname		11214906						
ANR	11214958	Symbol	arg		11214906						
ANR	11214959	Symbol	* argv		11214906						
ANR	11214960	Symbol	ExprMatch		11214906						
ANR	11214961	Symbol	argv		11214906						
ANR	11214962	Function	tar	386:0:8849:14477							
ANR	11214963	FunctionDef	"tar (gzFile in , int action , int arg , int argc , char * * argv)"		11214962	0					
ANR	11214964	CompoundStatement		387:0:8909:14477	11214962	0					
ANR	11214965	IdentifierDeclStatement	union tar_buffer buffer ;	388:2:8913:8937	11214962	0	True				
ANR	11214966	IdentifierDecl	buffer		11214962	0					
ANR	11214967	IdentifierDeclType	union tar_buffer		11214962	0					
ANR	11214968	Identifier	buffer		11214962	1					
ANR	11214969	IdentifierDeclStatement	int len ;	389:2:8941:8951	11214962	1	True				
ANR	11214970	IdentifierDecl	len		11214962	0					
ANR	11214971	IdentifierDeclType	int		11214962	0					
ANR	11214972	Identifier	len		11214962	1					
ANR	11214973	IdentifierDeclStatement	int err ;	390:2:8955:8965	11214962	2	True				
ANR	11214974	IdentifierDecl	err		11214962	0					
ANR	11214975	IdentifierDeclType	int		11214962	0					
ANR	11214976	Identifier	err		11214962	1					
ANR	11214977	IdentifierDeclStatement	int getheader = 1 ;	391:2:8969:8989	11214962	3	True				
ANR	11214978	IdentifierDecl	getheader = 1		11214962	0					
ANR	11214979	IdentifierDeclType	int		11214962	0					
ANR	11214980	Identifier	getheader		11214962	1					
ANR	11214981	AssignmentExpression	getheader = 1		11214962	2		=			
ANR	11214982	Identifier	getheader		11214962	0					
ANR	11214983	PrimaryExpression	1		11214962	1					
ANR	11214984	IdentifierDeclStatement	int remaining = 0 ;	392:2:8993:9013	11214962	4	True				
ANR	11214985	IdentifierDecl	remaining = 0		11214962	0					
ANR	11214986	IdentifierDeclType	int		11214962	0					
ANR	11214987	Identifier	remaining		11214962	1					
ANR	11214988	AssignmentExpression	remaining = 0		11214962	2		=			
ANR	11214989	Identifier	remaining		11214962	0					
ANR	11214990	PrimaryExpression	0		11214962	1					
ANR	11214991	IdentifierDeclStatement	FILE * outfile = NULL ;	393:2:9017:9039	11214962	5	True				
ANR	11214992	IdentifierDecl	* outfile = NULL		11214962	0					
ANR	11214993	IdentifierDeclType	FILE *		11214962	0					
ANR	11214994	Identifier	outfile		11214962	1					
ANR	11214995	AssignmentExpression	* outfile = NULL		11214962	2		=			
ANR	11214996	Identifier	NULL		11214962	0					
ANR	11214997	Identifier	NULL		11214962	1					
ANR	11214998	IdentifierDeclStatement	char fname [ BLOCKSIZE ] ;	394:2:9043:9066	11214962	6	True				
ANR	11214999	IdentifierDecl	fname [ BLOCKSIZE ]		11214962	0					
ANR	11215000	IdentifierDeclType	char [ BLOCKSIZE ]		11214962	0					
ANR	11215001	Identifier	fname		11214962	1					
ANR	11215002	Identifier	BLOCKSIZE		11214962	2					
ANR	11215003	IdentifierDeclStatement	int tarmode ;	395:2:9070:9084	11214962	7	True				
ANR	11215004	IdentifierDecl	tarmode		11214962	0					
ANR	11215005	IdentifierDeclType	int		11214962	0					
ANR	11215006	Identifier	tarmode		11214962	1					
ANR	11215007	IdentifierDeclStatement	time_t tartime ;	396:2:9088:9102	11214962	8	True				
ANR	11215008	IdentifierDecl	tartime		11214962	0					
ANR	11215009	IdentifierDeclType	time_t		11214962	0					
ANR	11215010	Identifier	tartime		11214962	1					
ANR	11215011	IdentifierDeclStatement	struct attr_item * attributes = NULL ;	397:2:9106:9141	11214962	9	True				
ANR	11215012	IdentifierDecl	* attributes = NULL		11214962	0					
ANR	11215013	IdentifierDeclType	struct attr_item *		11214962	0					
ANR	11215014	Identifier	attributes		11214962	1					
ANR	11215015	AssignmentExpression	* attributes = NULL		11214962	2		=			
ANR	11215016	Identifier	NULL		11214962	0					
ANR	11215017	Identifier	NULL		11214962	1					
ANR	11215018	IfStatement	if ( action == TGZ_LIST )		11214962	10					
ANR	11215019	Condition	action == TGZ_LIST	399:6:9150:9167	11214962	0	True				
ANR	11215020	EqualityExpression	action == TGZ_LIST		11214962	0		==			
ANR	11215021	Identifier	action		11214962	0					
ANR	11215022	Identifier	TGZ_LIST		11214962	1					
ANR	11215023	Statement	printf	400:4:9174:9179	11214962	1	True				
ANR	11215024	Statement	(	400:10:9180:9180	11214962	11	True				
ANR	11215025	Statement	"""    date      time     size                       file\\n"""	400:11:9181:9238	11214962	12	True				
ANR	11215026	Statement	""" ---------- -------- --------- -------------------------------------\\n"""	401:11:9251:9322	11214962	13	True				
ANR	11215027	Statement	)	401:83:9323:9323	11214962	14	True				
ANR	11215028	ExpressionStatement		401:84:9324:9324	11214962	15	True				
ANR	11215029	WhileStatement	while ( 1 )		11214962	16					
ANR	11215030	Condition	1	402:9:9335:9335	11214962	0	True				
ANR	11215031	PrimaryExpression	1		11214962	0					
ANR	11215032	CompoundStatement		17:4:432:432	11214962	1					
ANR	11215033	ExpressionStatement	"len = gzread ( in , & buffer , BLOCKSIZE )"	404:6:9350:9386	11214962	0	True				
ANR	11215034	AssignmentExpression	"len = gzread ( in , & buffer , BLOCKSIZE )"		11214962	0		=			
ANR	11215035	Identifier	len		11214962	0					
ANR	11215036	CallExpression	"gzread ( in , & buffer , BLOCKSIZE )"		11214962	1					
ANR	11215037	Callee	gzread		11214962	0					
ANR	11215038	Identifier	gzread		11214962	0					
ANR	11215039	ArgumentList	in		11214962	1					
ANR	11215040	Argument	in		11214962	0					
ANR	11215041	Identifier	in		11214962	0					
ANR	11215042	Argument	& buffer		11214962	1					
ANR	11215043	UnaryOperationExpression	& buffer		11214962	0					
ANR	11215044	UnaryOperator	&		11214962	0					
ANR	11215045	Identifier	buffer		11214962	1					
ANR	11215046	Argument	BLOCKSIZE		11214962	2					
ANR	11215047	Identifier	BLOCKSIZE		11214962	0					
ANR	11215048	IfStatement	if ( len < 0 )		11214962	1					
ANR	11215049	Condition	len < 0	405:10:9398:9404	11214962	0	True				
ANR	11215050	RelationalExpression	len < 0		11214962	0		<			
ANR	11215051	Identifier	len		11214962	0					
ANR	11215052	PrimaryExpression	0		11214962	1					
ANR	11215053	ExpressionStatement	"error ( gzerror ( in , & err ) )"	406:8:9415:9439	11214962	1	True				
ANR	11215054	CallExpression	"error ( gzerror ( in , & err ) )"		11214962	0					
ANR	11215055	Callee	error		11214962	0					
ANR	11215056	Identifier	error		11214962	0					
ANR	11215057	ArgumentList	"gzerror ( in , & err )"		11214962	1					
ANR	11215058	Argument	"gzerror ( in , & err )"		11214962	0					
ANR	11215059	CallExpression	"gzerror ( in , & err )"		11214962	0					
ANR	11215060	Callee	gzerror		11214962	0					
ANR	11215061	Identifier	gzerror		11214962	0					
ANR	11215062	ArgumentList	in		11214962	1					
ANR	11215063	Argument	in		11214962	0					
ANR	11215064	Identifier	in		11214962	0					
ANR	11215065	Argument	& err		11214962	1					
ANR	11215066	UnaryOperationExpression	& err		11214962	0					
ANR	11215067	UnaryOperator	&		11214962	0					
ANR	11215068	Identifier	err		11214962	1					
ANR	11215069	IfStatement	if ( len != BLOCKSIZE )		11214962	2					
ANR	11215070	Condition	len != BLOCKSIZE	411:10:9550:9565	11214962	0	True				
ANR	11215071	EqualityExpression	len != BLOCKSIZE		11214962	0		!=			
ANR	11215072	Identifier	len		11214962	0					
ANR	11215073	Identifier	BLOCKSIZE		11214962	1					
ANR	11215074	CompoundStatement		26:8:666:666	11214962	1					
ANR	11215075	ExpressionStatement	action = TGZ_INVALID	413:10:9588:9608	11214962	0	True				
ANR	11215076	AssignmentExpression	action = TGZ_INVALID		11214962	0		=			
ANR	11215077	Identifier	action		11214962	0					
ANR	11215078	Identifier	TGZ_INVALID		11214962	1					
ANR	11215079	ExpressionStatement	remaining = 0	414:10:9643:9656	11214962	1	True				
ANR	11215080	AssignmentExpression	remaining = 0		11214962	0		=			
ANR	11215081	Identifier	remaining		11214962	0					
ANR	11215082	PrimaryExpression	0		11214962	1					
ANR	11215083	IfStatement	if ( getheader >= 1 )		11214962	3					
ANR	11215084	Condition	getheader >= 1	420:10:9769:9782	11214962	0	True				
ANR	11215085	RelationalExpression	getheader >= 1		11214962	0		>=			
ANR	11215086	Identifier	getheader		11214962	0					
ANR	11215087	PrimaryExpression	1		11214962	1					
ANR	11215088	CompoundStatement		35:8:883:883	11214962	1					
ANR	11215089	IfStatement	if ( len == 0 || buffer . header . name [ 0 ] == 0 )		11214962	0					
ANR	11215090	Condition	len == 0 || buffer . header . name [ 0 ] == 0	427:14:9941:9978	11214962	0	True				
ANR	11215091	OrExpression	len == 0 || buffer . header . name [ 0 ] == 0		11214962	0		||			
ANR	11215092	EqualityExpression	len == 0		11214962	0		==			
ANR	11215093	Identifier	len		11214962	0					
ANR	11215094	PrimaryExpression	0		11214962	1					
ANR	11215095	EqualityExpression	buffer . header . name [ 0 ] == 0		11214962	1		==			
ANR	11215096	ArrayIndexing	buffer . header . name [ 0 ]		11214962	0					
ANR	11215097	MemberAccess	buffer . header . name		11214962	0					
ANR	11215098	MemberAccess	buffer . header		11214962	0					
ANR	11215099	Identifier	buffer		11214962	0					
ANR	11215100	Identifier	header		11214962	1					
ANR	11215101	Identifier	name		11214962	1					
ANR	11215102	PrimaryExpression	0		11214962	1					
ANR	11215103	PrimaryExpression	0		11214962	1					
ANR	11215104	BreakStatement	break ;	428:12:9993:9998	11214962	1	True				
ANR	11215105	ExpressionStatement	"tarmode = getoct ( buffer . header . mode , 8 )"	430:10:10011:10049	11214962	1	True				
ANR	11215106	AssignmentExpression	"tarmode = getoct ( buffer . header . mode , 8 )"		11214962	0		=			
ANR	11215107	Identifier	tarmode		11214962	0					
ANR	11215108	CallExpression	"getoct ( buffer . header . mode , 8 )"		11214962	1					
ANR	11215109	Callee	getoct		11214962	0					
ANR	11215110	Identifier	getoct		11214962	0					
ANR	11215111	ArgumentList	buffer . header . mode		11214962	1					
ANR	11215112	Argument	buffer . header . mode		11214962	0					
ANR	11215113	MemberAccess	buffer . header . mode		11214962	0					
ANR	11215114	MemberAccess	buffer . header		11214962	0					
ANR	11215115	Identifier	buffer		11214962	0					
ANR	11215116	Identifier	header		11214962	1					
ANR	11215117	Identifier	mode		11214962	1					
ANR	11215118	Argument	8		11214962	1					
ANR	11215119	PrimaryExpression	8		11214962	0					
ANR	11215120	ExpressionStatement	"tartime = ( time_t ) getoct ( buffer . header . mtime , 12 )"	431:10:10061:10109	11214962	2	True				
ANR	11215121	AssignmentExpression	"tartime = ( time_t ) getoct ( buffer . header . mtime , 12 )"		11214962	0		=			
ANR	11215122	Identifier	tartime		11214962	0					
ANR	11215123	CastExpression	"( time_t ) getoct ( buffer . header . mtime , 12 )"		11214962	1					
ANR	11215124	CastTarget	time_t		11214962	0					
ANR	11215125	CallExpression	"getoct ( buffer . header . mtime , 12 )"		11214962	1					
ANR	11215126	Callee	getoct		11214962	0					
ANR	11215127	Identifier	getoct		11214962	0					
ANR	11215128	ArgumentList	buffer . header . mtime		11214962	1					
ANR	11215129	Argument	buffer . header . mtime		11214962	0					
ANR	11215130	MemberAccess	buffer . header . mtime		11214962	0					
ANR	11215131	MemberAccess	buffer . header		11214962	0					
ANR	11215132	Identifier	buffer		11214962	0					
ANR	11215133	Identifier	header		11214962	1					
ANR	11215134	Identifier	mtime		11214962	1					
ANR	11215135	Argument	12		11214962	1					
ANR	11215136	PrimaryExpression	12		11214962	0					
ANR	11215137	IfStatement	if ( tarmode == - 1 || tartime == ( time_t ) - 1 )		11214962	3					
ANR	11215138	Condition	tarmode == - 1 || tartime == ( time_t ) - 1	432:14:10125:10162	11214962	0	True				
ANR	11215139	OrExpression	tarmode == - 1 || tartime == ( time_t ) - 1		11214962	0		||			
ANR	11215140	EqualityExpression	tarmode == - 1		11214962	0		==			
ANR	11215141	Identifier	tarmode		11214962	0					
ANR	11215142	UnaryOperationExpression	- 1		11214962	1					
ANR	11215143	UnaryOperator	-		11214962	0					
ANR	11215144	PrimaryExpression	1		11214962	1					
ANR	11215145	EqualityExpression	tartime == ( time_t ) - 1		11214962	1		==			
ANR	11215146	Identifier	tartime		11214962	0					
ANR	11215147	CastExpression	( time_t ) - 1		11214962	1					
ANR	11215148	CastTarget	time_t		11214962	0					
ANR	11215149	UnaryOperationExpression	- 1		11214962	1					
ANR	11215150	UnaryOperator	-		11214962	0					
ANR	11215151	PrimaryExpression	1		11214962	1					
ANR	11215152	CompoundStatement		47:12:1267:1267	11214962	1					
ANR	11215153	ExpressionStatement	buffer . header . name [ 0 ] = 0	434:14:10193:10218	11214962	0	True				
ANR	11215154	AssignmentExpression	buffer . header . name [ 0 ] = 0		11214962	0		=			
ANR	11215155	ArrayIndexing	buffer . header . name [ 0 ]		11214962	0					
ANR	11215156	MemberAccess	buffer . header . name		11214962	0					
ANR	11215157	MemberAccess	buffer . header		11214962	0					
ANR	11215158	Identifier	buffer		11214962	0					
ANR	11215159	Identifier	header		11214962	1					
ANR	11215160	Identifier	name		11214962	1					
ANR	11215161	PrimaryExpression	0		11214962	1					
ANR	11215162	PrimaryExpression	0		11214962	1					
ANR	11215163	ExpressionStatement	action = TGZ_INVALID	435:14:10234:10254	11214962	1	True				
ANR	11215164	AssignmentExpression	action = TGZ_INVALID		11214962	0		=			
ANR	11215165	Identifier	action		11214962	0					
ANR	11215166	Identifier	TGZ_INVALID		11214962	1					
ANR	11215167	IfStatement	if ( getheader == 1 )		11214962	4					
ANR	11215168	Condition	getheader == 1	438:14:10285:10298	11214962	0	True				
ANR	11215169	EqualityExpression	getheader == 1		11214962	0		==			
ANR	11215170	Identifier	getheader		11214962	0					
ANR	11215171	PrimaryExpression	1		11214962	1					
ANR	11215172	CompoundStatement		53:12:1403:1403	11214962	1					
ANR	11215173	ExpressionStatement	"strncpy ( fname , buffer . header . name , SHORTNAMESIZE )"	440:14:10329:10376	11214962	0	True				
ANR	11215174	CallExpression	"strncpy ( fname , buffer . header . name , SHORTNAMESIZE )"		11214962	0					
ANR	11215175	Callee	strncpy		11214962	0					
ANR	11215176	Identifier	strncpy		11214962	0					
ANR	11215177	ArgumentList	fname		11214962	1					
ANR	11215178	Argument	fname		11214962	0					
ANR	11215179	Identifier	fname		11214962	0					
ANR	11215180	Argument	buffer . header . name		11214962	1					
ANR	11215181	MemberAccess	buffer . header . name		11214962	0					
ANR	11215182	MemberAccess	buffer . header		11214962	0					
ANR	11215183	Identifier	buffer		11214962	0					
ANR	11215184	Identifier	header		11214962	1					
ANR	11215185	Identifier	name		11214962	1					
ANR	11215186	Argument	SHORTNAMESIZE		11214962	2					
ANR	11215187	Identifier	SHORTNAMESIZE		11214962	0					
ANR	11215188	IfStatement	if ( fname [ SHORTNAMESIZE - 1 ] != 0 )		11214962	1					
ANR	11215189	Condition	fname [ SHORTNAMESIZE - 1 ] != 0	441:18:10396:10422	11214962	0	True				
ANR	11215190	EqualityExpression	fname [ SHORTNAMESIZE - 1 ] != 0		11214962	0		!=			
ANR	11215191	ArrayIndexing	fname [ SHORTNAMESIZE - 1 ]		11214962	0					
ANR	11215192	Identifier	fname		11214962	0					
ANR	11215193	AdditiveExpression	SHORTNAMESIZE - 1		11214962	1		-			
ANR	11215194	Identifier	SHORTNAMESIZE		11214962	0					
ANR	11215195	PrimaryExpression	1		11214962	1					
ANR	11215196	PrimaryExpression	0		11214962	1					
ANR	11215197	ExpressionStatement	fname [ SHORTNAMESIZE ] = 0	442:18:10443:10467	11214962	1	True				
ANR	11215198	AssignmentExpression	fname [ SHORTNAMESIZE ] = 0		11214962	0		=			
ANR	11215199	ArrayIndexing	fname [ SHORTNAMESIZE ]		11214962	0					
ANR	11215200	Identifier	fname		11214962	0					
ANR	11215201	Identifier	SHORTNAMESIZE		11214962	1					
ANR	11215202	PrimaryExpression	0		11214962	1					
ANR	11215203	ElseStatement	else		11214962	0					
ANR	11215204	CompoundStatement		59:12:1600:1600	11214962	0					
ANR	11215205	IfStatement	"if ( strncmp ( fname , buffer . header . name , SHORTNAMESIZE - 1 ) != 0 )"		11214962	0					
ANR	11215206	Condition	"strncmp ( fname , buffer . header . name , SHORTNAMESIZE - 1 ) != 0"	449:18:10625:10678	11214962	0	True				
ANR	11215207	EqualityExpression	"strncmp ( fname , buffer . header . name , SHORTNAMESIZE - 1 ) != 0"		11214962	0		!=			
ANR	11215208	CallExpression	"strncmp ( fname , buffer . header . name , SHORTNAMESIZE - 1 )"		11214962	0					
ANR	11215209	Callee	strncmp		11214962	0					
ANR	11215210	Identifier	strncmp		11214962	0					
ANR	11215211	ArgumentList	fname		11214962	1					
ANR	11215212	Argument	fname		11214962	0					
ANR	11215213	Identifier	fname		11214962	0					
ANR	11215214	Argument	buffer . header . name		11214962	1					
ANR	11215215	MemberAccess	buffer . header . name		11214962	0					
ANR	11215216	MemberAccess	buffer . header		11214962	0					
ANR	11215217	Identifier	buffer		11214962	0					
ANR	11215218	Identifier	header		11214962	1					
ANR	11215219	Identifier	name		11214962	1					
ANR	11215220	Argument	SHORTNAMESIZE - 1		11214962	2					
ANR	11215221	AdditiveExpression	SHORTNAMESIZE - 1		11214962	0		-			
ANR	11215222	Identifier	SHORTNAMESIZE		11214962	0					
ANR	11215223	PrimaryExpression	1		11214962	1					
ANR	11215224	PrimaryExpression	0		11214962	1					
ANR	11215225	ExpressionStatement	"error ( ""bad long name"" )"	450:18:10699:10721	11214962	1	True				
ANR	11215226	CallExpression	"error ( ""bad long name"" )"		11214962	0					
ANR	11215227	Callee	error		11214962	0					
ANR	11215228	Identifier	error		11214962	0					
ANR	11215229	ArgumentList	"""bad long name"""		11214962	1					
ANR	11215230	Argument	"""bad long name"""		11214962	0					
ANR	11215231	PrimaryExpression	"""bad long name"""		11214962	0					
ANR	11215232	ExpressionStatement	getheader = 1	451:14:10737:10750	11214962	1	True				
ANR	11215233	AssignmentExpression	getheader = 1		11214962	0		=			
ANR	11215234	Identifier	getheader		11214962	0					
ANR	11215235	PrimaryExpression	1		11214962	1					
ANR	11215236	SwitchStatement	switch ( buffer . header . typeflag )		11214962	5					
ANR	11215237	Condition	buffer . header . typeflag	457:18:10856:10877	11214962	0	True				
ANR	11215238	MemberAccess	buffer . header . typeflag		11214962	0					
ANR	11215239	MemberAccess	buffer . header		11214962	0					
ANR	11215240	Identifier	buffer		11214962	0					
ANR	11215241	Identifier	header		11214962	1					
ANR	11215242	Identifier	typeflag		11214962	1					
ANR	11215243	CompoundStatement		72:12:1982:1982	11214962	1					
ANR	11215244	Label	case DIRTYPE :	459:12:10906:10918	11214962	0	True				
ANR	11215245	Identifier	DIRTYPE		11214962	0					
ANR	11215246	IfStatement	if ( action == TGZ_LIST )		11214962	1					
ANR	11215247	Condition	action == TGZ_LIST	460:18:10938:10955	11214962	0	True				
ANR	11215248	EqualityExpression	action == TGZ_LIST		11214962	0		==			
ANR	11215249	Identifier	action		11214962	0					
ANR	11215250	Identifier	TGZ_LIST		11214962	1					
ANR	11215251	ExpressionStatement	"printf ( "" %s     <dir> %s\\n"" , strtime ( & tartime ) , fname )"	461:16:10974:11026	11214962	1	True				
ANR	11215252	CallExpression	"printf ( "" %s     <dir> %s\\n"" , strtime ( & tartime ) , fname )"		11214962	0					
ANR	11215253	Callee	printf		11214962	0					
ANR	11215254	Identifier	printf		11214962	0					
ANR	11215255	ArgumentList	""" %s     <dir> %s\\n"""		11214962	1					
ANR	11215256	Argument	""" %s     <dir> %s\\n"""		11214962	0					
ANR	11215257	PrimaryExpression	""" %s     <dir> %s\\n"""		11214962	0					
ANR	11215258	Argument	strtime ( & tartime )		11214962	1					
ANR	11215259	CallExpression	strtime ( & tartime )		11214962	0					
ANR	11215260	Callee	strtime		11214962	0					
ANR	11215261	Identifier	strtime		11214962	0					
ANR	11215262	ArgumentList	& tartime		11214962	1					
ANR	11215263	Argument	& tartime		11214962	0					
ANR	11215264	UnaryOperationExpression	& tartime		11214962	0					
ANR	11215265	UnaryOperator	&		11214962	0					
ANR	11215266	Identifier	tartime		11214962	1					
ANR	11215267	Argument	fname		11214962	2					
ANR	11215268	Identifier	fname		11214962	0					
ANR	11215269	IfStatement	if ( action == TGZ_EXTRACT )		11214962	2					
ANR	11215270	Condition	action == TGZ_EXTRACT	462:18:11046:11066	11214962	0	True				
ANR	11215271	EqualityExpression	action == TGZ_EXTRACT		11214962	0		==			
ANR	11215272	Identifier	action		11214962	0					
ANR	11215273	Identifier	TGZ_EXTRACT		11214962	1					
ANR	11215274	CompoundStatement		77:16:2175:2175	11214962	1					
ANR	11215275	ExpressionStatement	makedir ( fname )	464:18:11105:11119	11214962	0	True				
ANR	11215276	CallExpression	makedir ( fname )		11214962	0					
ANR	11215277	Callee	makedir		11214962	0					
ANR	11215278	Identifier	makedir		11214962	0					
ANR	11215279	ArgumentList	fname		11214962	1					
ANR	11215280	Argument	fname		11214962	0					
ANR	11215281	Identifier	fname		11214962	0					
ANR	11215282	ExpressionStatement	"push_attr ( & attributes , fname , tarmode , tartime )"	465:18:11139:11183	11214962	1	True				
ANR	11215283	CallExpression	"push_attr ( & attributes , fname , tarmode , tartime )"		11214962	0					
ANR	11215284	Callee	push_attr		11214962	0					
ANR	11215285	Identifier	push_attr		11214962	0					
ANR	11215286	ArgumentList	& attributes		11214962	1					
ANR	11215287	Argument	& attributes		11214962	0					
ANR	11215288	UnaryOperationExpression	& attributes		11214962	0					
ANR	11215289	UnaryOperator	&		11214962	0					
ANR	11215290	Identifier	attributes		11214962	1					
ANR	11215291	Argument	fname		11214962	1					
ANR	11215292	Identifier	fname		11214962	0					
ANR	11215293	Argument	tarmode		11214962	2					
ANR	11215294	Identifier	tarmode		11214962	0					
ANR	11215295	Argument	tartime		11214962	3					
ANR	11215296	Identifier	tartime		11214962	0					
ANR	11215297	BreakStatement	break ;	467:14:11217:11222	11214962	3	True				
ANR	11215298	Label	case REGTYPE :	468:12:11236:11248	11214962	4	True				
ANR	11215299	Identifier	REGTYPE		11214962	0					
ANR	11215300	Label	case AREGTYPE :	469:12:11262:11275	11214962	5	True				
ANR	11215301	Identifier	AREGTYPE		11214962	0					
ANR	11215302	ExpressionStatement	"remaining = getoct ( buffer . header . size , 12 )"	470:14:11291:11332	11214962	6	True				
ANR	11215303	AssignmentExpression	"remaining = getoct ( buffer . header . size , 12 )"		11214962	0		=			
ANR	11215304	Identifier	remaining		11214962	0					
ANR	11215305	CallExpression	"getoct ( buffer . header . size , 12 )"		11214962	1					
ANR	11215306	Callee	getoct		11214962	0					
ANR	11215307	Identifier	getoct		11214962	0					
ANR	11215308	ArgumentList	buffer . header . size		11214962	1					
ANR	11215309	Argument	buffer . header . size		11214962	0					
ANR	11215310	MemberAccess	buffer . header . size		11214962	0					
ANR	11215311	MemberAccess	buffer . header		11214962	0					
ANR	11215312	Identifier	buffer		11214962	0					
ANR	11215313	Identifier	header		11214962	1					
ANR	11215314	Identifier	size		11214962	1					
ANR	11215315	Argument	12		11214962	1					
ANR	11215316	PrimaryExpression	12		11214962	0					
ANR	11215317	IfStatement	if ( remaining == - 1 )		11214962	7					
ANR	11215318	Condition	remaining == - 1	471:18:11352:11366	11214962	0	True				
ANR	11215319	EqualityExpression	remaining == - 1		11214962	0		==			
ANR	11215320	Identifier	remaining		11214962	0					
ANR	11215321	UnaryOperationExpression	- 1		11214962	1					
ANR	11215322	UnaryOperator	-		11214962	0					
ANR	11215323	PrimaryExpression	1		11214962	1					
ANR	11215324	CompoundStatement		86:16:2475:2475	11214962	1					
ANR	11215325	ExpressionStatement	action = TGZ_INVALID	473:18:11405:11425	11214962	0	True				
ANR	11215326	AssignmentExpression	action = TGZ_INVALID		11214962	0		=			
ANR	11215327	Identifier	action		11214962	0					
ANR	11215328	Identifier	TGZ_INVALID		11214962	1					
ANR	11215329	BreakStatement	break ;	474:18:11445:11450	11214962	1	True				
ANR	11215330	IfStatement	if ( action == TGZ_LIST )		11214962	8					
ANR	11215331	Condition	action == TGZ_LIST	476:18:11488:11505	11214962	0	True				
ANR	11215332	EqualityExpression	action == TGZ_LIST		11214962	0		==			
ANR	11215333	Identifier	action		11214962	0					
ANR	11215334	Identifier	TGZ_LIST		11214962	1					
ANR	11215335	ExpressionStatement	"printf ( "" %s %9d %s\\n"" , strtime ( & tartime ) , remaining , fname )"	477:16:11524:11580	11214962	1	True				
ANR	11215336	CallExpression	"printf ( "" %s %9d %s\\n"" , strtime ( & tartime ) , remaining , fname )"		11214962	0					
ANR	11215337	Callee	printf		11214962	0					
ANR	11215338	Identifier	printf		11214962	0					
ANR	11215339	ArgumentList	""" %s %9d %s\\n"""		11214962	1					
ANR	11215340	Argument	""" %s %9d %s\\n"""		11214962	0					
ANR	11215341	PrimaryExpression	""" %s %9d %s\\n"""		11214962	0					
ANR	11215342	Argument	strtime ( & tartime )		11214962	1					
ANR	11215343	CallExpression	strtime ( & tartime )		11214962	0					
ANR	11215344	Callee	strtime		11214962	0					
ANR	11215345	Identifier	strtime		11214962	0					
ANR	11215346	ArgumentList	& tartime		11214962	1					
ANR	11215347	Argument	& tartime		11214962	0					
ANR	11215348	UnaryOperationExpression	& tartime		11214962	0					
ANR	11215349	UnaryOperator	&		11214962	0					
ANR	11215350	Identifier	tartime		11214962	1					
ANR	11215351	Argument	remaining		11214962	2					
ANR	11215352	Identifier	remaining		11214962	0					
ANR	11215353	Argument	fname		11214962	3					
ANR	11215354	Identifier	fname		11214962	0					
ANR	11215355	ElseStatement	else		11214962	0					
ANR	11215356	IfStatement	if ( action == TGZ_EXTRACT )		11214962	0					
ANR	11215357	Condition	action == TGZ_EXTRACT	478:23:11605:11625	11214962	0	True				
ANR	11215358	EqualityExpression	action == TGZ_EXTRACT		11214962	0		==			
ANR	11215359	Identifier	action		11214962	0					
ANR	11215360	Identifier	TGZ_EXTRACT		11214962	1					
ANR	11215361	CompoundStatement		93:16:2734:2734	11214962	1					
ANR	11215362	IfStatement	"if ( matchname ( arg , argc , argv , fname ) )"		11214962	0					
ANR	11215363	Condition	"matchname ( arg , argc , argv , fname )"	480:22:11668:11697	11214962	0	True				
ANR	11215364	CallExpression	"matchname ( arg , argc , argv , fname )"		11214962	0					
ANR	11215365	Callee	matchname		11214962	0					
ANR	11215366	Identifier	matchname		11214962	0					
ANR	11215367	ArgumentList	arg		11214962	1					
ANR	11215368	Argument	arg		11214962	0					
ANR	11215369	Identifier	arg		11214962	0					
ANR	11215370	Argument	argc		11214962	1					
ANR	11215371	Identifier	argc		11214962	0					
ANR	11215372	Argument	argv		11214962	2					
ANR	11215373	Identifier	argv		11214962	0					
ANR	11215374	Argument	fname		11214962	3					
ANR	11215375	Identifier	fname		11214962	0					
ANR	11215376	CompoundStatement		95:20:2810:2810	11214962	1					
ANR	11215377	ExpressionStatement	"outfile = fopen ( fname , ""wb"" )"	482:22:11744:11771	11214962	0	True				
ANR	11215378	AssignmentExpression	"outfile = fopen ( fname , ""wb"" )"		11214962	0		=			
ANR	11215379	Identifier	outfile		11214962	0					
ANR	11215380	CallExpression	"fopen ( fname , ""wb"" )"		11214962	1					
ANR	11215381	Callee	fopen		11214962	0					
ANR	11215382	Identifier	fopen		11214962	0					
ANR	11215383	ArgumentList	fname		11214962	1					
ANR	11215384	Argument	fname		11214962	0					
ANR	11215385	Identifier	fname		11214962	0					
ANR	11215386	Argument	"""wb"""		11214962	1					
ANR	11215387	PrimaryExpression	"""wb"""		11214962	0					
ANR	11215388	IfStatement	if ( outfile == NULL )		11214962	1					
ANR	11215389	Condition	outfile == NULL	483:26:11799:11813	11214962	0	True				
ANR	11215390	EqualityExpression	outfile == NULL		11214962	0		==			
ANR	11215391	Identifier	outfile		11214962	0					
ANR	11215392	Identifier	NULL		11214962	1					
ANR	11215393	CompoundStatement		99:24:2985:3014	11214962	1					
ANR	11215394	IdentifierDeclStatement	"char * p = strrchr ( fname , '/' ) ;"	485:24:11895:11924	11214962	0	True				
ANR	11215395	IdentifierDecl	"* p = strrchr ( fname , '/' )"		11214962	0					
ANR	11215396	IdentifierDeclType	char *		11214962	0					
ANR	11215397	Identifier	p		11214962	1					
ANR	11215398	AssignmentExpression	"* p = strrchr ( fname , '/' )"		11214962	2		=			
ANR	11215399	Identifier	p		11214962	0					
ANR	11215400	CallExpression	"strrchr ( fname , '/' )"		11214962	1					
ANR	11215401	Callee	strrchr		11214962	0					
ANR	11215402	Identifier	strrchr		11214962	0					
ANR	11215403	ArgumentList	fname		11214962	1					
ANR	11215404	Argument	fname		11214962	0					
ANR	11215405	Identifier	fname		11214962	0					
ANR	11215406	Argument	'/'		11214962	1					
ANR	11215407	PrimaryExpression	'/'		11214962	0					
ANR	11215408	IfStatement	if ( p != NULL )		11214962	1					
ANR	11215409	Condition	p != NULL	486:28:11954:11962	11214962	0	True				
ANR	11215410	EqualityExpression	p != NULL		11214962	0		!=			
ANR	11215411	Identifier	p		11214962	0					
ANR	11215412	Identifier	NULL		11214962	1					
ANR	11215413	CompoundStatement		100:39:3055:3055	11214962	1					
ANR	11215414	ExpressionStatement	* p = '\\0'	487:26:11993:12002	11214962	0	True				
ANR	11215415	AssignmentExpression	* p = '\\0'		11214962	0		=			
ANR	11215416	UnaryOperationExpression	* p		11214962	0					
ANR	11215417	UnaryOperator	*		11214962	0					
ANR	11215418	Identifier	p		11214962	1					
ANR	11215419	PrimaryExpression	'\\0'		11214962	1					
ANR	11215420	ExpressionStatement	makedir ( fname )	488:26:12030:12044	11214962	1	True				
ANR	11215421	CallExpression	makedir ( fname )		11214962	0					
ANR	11215422	Callee	makedir		11214962	0					
ANR	11215423	Identifier	makedir		11214962	0					
ANR	11215424	ArgumentList	fname		11214962	1					
ANR	11215425	Argument	fname		11214962	0					
ANR	11215426	Identifier	fname		11214962	0					
ANR	11215427	ExpressionStatement	* p = '/'	489:26:12072:12080	11214962	2	True				
ANR	11215428	AssignmentExpression	* p = '/'		11214962	0		=			
ANR	11215429	UnaryOperationExpression	* p		11214962	0					
ANR	11215430	UnaryOperator	*		11214962	0					
ANR	11215431	Identifier	p		11214962	1					
ANR	11215432	PrimaryExpression	'/'		11214962	1					
ANR	11215433	ExpressionStatement	"outfile = fopen ( fname , ""wb"" )"	490:26:12108:12135	11214962	3	True				
ANR	11215434	AssignmentExpression	"outfile = fopen ( fname , ""wb"" )"		11214962	0		=			
ANR	11215435	Identifier	outfile		11214962	0					
ANR	11215436	CallExpression	"fopen ( fname , ""wb"" )"		11214962	1					
ANR	11215437	Callee	fopen		11214962	0					
ANR	11215438	Identifier	fopen		11214962	0					
ANR	11215439	ArgumentList	fname		11214962	1					
ANR	11215440	Argument	fname		11214962	0					
ANR	11215441	Identifier	fname		11214962	0					
ANR	11215442	Argument	"""wb"""		11214962	1					
ANR	11215443	PrimaryExpression	"""wb"""		11214962	0					
ANR	11215444	IfStatement	if ( outfile != NULL )		11214962	2					
ANR	11215445	Condition	outfile != NULL	493:26:12213:12227	11214962	0	True				
ANR	11215446	EqualityExpression	outfile != NULL		11214962	0		!=			
ANR	11215447	Identifier	outfile		11214962	0					
ANR	11215448	Identifier	NULL		11214962	1					
ANR	11215449	ExpressionStatement	"printf ( ""Extracting %s\\n"" , fname )"	494:24:12254:12285	11214962	1	True				
ANR	11215450	CallExpression	"printf ( ""Extracting %s\\n"" , fname )"		11214962	0					
ANR	11215451	Callee	printf		11214962	0					
ANR	11215452	Identifier	printf		11214962	0					
ANR	11215453	ArgumentList	"""Extracting %s\\n"""		11214962	1					
ANR	11215454	Argument	"""Extracting %s\\n"""		11214962	0					
ANR	11215455	PrimaryExpression	"""Extracting %s\\n"""		11214962	0					
ANR	11215456	Argument	fname		11214962	1					
ANR	11215457	Identifier	fname		11214962	0					
ANR	11215458	ElseStatement	else		11214962	0					
ANR	11215459	ExpressionStatement	"fprintf ( stderr , ""%s: Couldn't create %s"" , prog , fname )"	496:24:12338:12390	11214962	0	True				
ANR	11215460	CallExpression	"fprintf ( stderr , ""%s: Couldn't create %s"" , prog , fname )"		11214962	0					
ANR	11215461	Callee	fprintf		11214962	0					
ANR	11215462	Identifier	fprintf		11214962	0					
ANR	11215463	ArgumentList	stderr		11214962	1					
ANR	11215464	Argument	stderr		11214962	0					
ANR	11215465	Identifier	stderr		11214962	0					
ANR	11215466	Argument	"""%s: Couldn't create %s"""		11214962	1					
ANR	11215467	PrimaryExpression	"""%s: Couldn't create %s"""		11214962	0					
ANR	11215468	Argument	prog		11214962	2					
ANR	11215469	Identifier	prog		11214962	0					
ANR	11215470	Argument	fname		11214962	3					
ANR	11215471	Identifier	fname		11214962	0					
ANR	11215472	ElseStatement	else		11214962	0					
ANR	11215473	ExpressionStatement	outfile = NULL	499:20:12457:12471	11214962	0	True				
ANR	11215474	AssignmentExpression	outfile = NULL		11214962	0		=			
ANR	11215475	Identifier	outfile		11214962	0					
ANR	11215476	Identifier	NULL		11214962	1					
ANR	11215477	ExpressionStatement	getheader = 0	501:14:12505:12518	11214962	9	True				
ANR	11215478	AssignmentExpression	getheader = 0		11214962	0		=			
ANR	11215479	Identifier	getheader		11214962	0					
ANR	11215480	PrimaryExpression	0		11214962	1					
ANR	11215481	BreakStatement	break ;	502:14:12534:12539	11214962	10	True				
ANR	11215482	Label	case GNUTYPE_LONGLINK :	503:12:12553:12574	11214962	11	True				
ANR	11215483	Identifier	GNUTYPE_LONGLINK		11214962	0					
ANR	11215484	Label	case GNUTYPE_LONGNAME :	504:12:12588:12609	11214962	12	True				
ANR	11215485	Identifier	GNUTYPE_LONGNAME		11214962	0					
ANR	11215486	ExpressionStatement	"remaining = getoct ( buffer . header . size , 12 )"	505:14:12625:12666	11214962	13	True				
ANR	11215487	AssignmentExpression	"remaining = getoct ( buffer . header . size , 12 )"		11214962	0		=			
ANR	11215488	Identifier	remaining		11214962	0					
ANR	11215489	CallExpression	"getoct ( buffer . header . size , 12 )"		11214962	1					
ANR	11215490	Callee	getoct		11214962	0					
ANR	11215491	Identifier	getoct		11214962	0					
ANR	11215492	ArgumentList	buffer . header . size		11214962	1					
ANR	11215493	Argument	buffer . header . size		11214962	0					
ANR	11215494	MemberAccess	buffer . header . size		11214962	0					
ANR	11215495	MemberAccess	buffer . header		11214962	0					
ANR	11215496	Identifier	buffer		11214962	0					
ANR	11215497	Identifier	header		11214962	1					
ANR	11215498	Identifier	size		11214962	1					
ANR	11215499	Argument	12		11214962	1					
ANR	11215500	PrimaryExpression	12		11214962	0					
ANR	11215501	IfStatement	if ( remaining < 0 || remaining >= BLOCKSIZE )		11214962	14					
ANR	11215502	Condition	remaining < 0 || remaining >= BLOCKSIZE	506:18:12686:12724	11214962	0	True				
ANR	11215503	OrExpression	remaining < 0 || remaining >= BLOCKSIZE		11214962	0		||			
ANR	11215504	RelationalExpression	remaining < 0		11214962	0		<			
ANR	11215505	Identifier	remaining		11214962	0					
ANR	11215506	PrimaryExpression	0		11214962	1					
ANR	11215507	RelationalExpression	remaining >= BLOCKSIZE		11214962	1		>=			
ANR	11215508	Identifier	remaining		11214962	0					
ANR	11215509	Identifier	BLOCKSIZE		11214962	1					
ANR	11215510	CompoundStatement		121:16:3833:3833	11214962	1					
ANR	11215511	ExpressionStatement	action = TGZ_INVALID	508:18:12763:12783	11214962	0	True				
ANR	11215512	AssignmentExpression	action = TGZ_INVALID		11214962	0		=			
ANR	11215513	Identifier	action		11214962	0					
ANR	11215514	Identifier	TGZ_INVALID		11214962	1					
ANR	11215515	BreakStatement	break ;	509:18:12803:12808	11214962	1	True				
ANR	11215516	ExpressionStatement	"len = gzread ( in , fname , BLOCKSIZE )"	511:14:12842:12876	11214962	15	True				
ANR	11215517	AssignmentExpression	"len = gzread ( in , fname , BLOCKSIZE )"		11214962	0		=			
ANR	11215518	Identifier	len		11214962	0					
ANR	11215519	CallExpression	"gzread ( in , fname , BLOCKSIZE )"		11214962	1					
ANR	11215520	Callee	gzread		11214962	0					
ANR	11215521	Identifier	gzread		11214962	0					
ANR	11215522	ArgumentList	in		11214962	1					
ANR	11215523	Argument	in		11214962	0					
ANR	11215524	Identifier	in		11214962	0					
ANR	11215525	Argument	fname		11214962	1					
ANR	11215526	Identifier	fname		11214962	0					
ANR	11215527	Argument	BLOCKSIZE		11214962	2					
ANR	11215528	Identifier	BLOCKSIZE		11214962	0					
ANR	11215529	IfStatement	if ( len < 0 )		11214962	16					
ANR	11215530	Condition	len < 0	512:18:12896:12902	11214962	0	True				
ANR	11215531	RelationalExpression	len < 0		11214962	0		<			
ANR	11215532	Identifier	len		11214962	0					
ANR	11215533	PrimaryExpression	0		11214962	1					
ANR	11215534	ExpressionStatement	"error ( gzerror ( in , & err ) )"	513:16:12921:12945	11214962	1	True				
ANR	11215535	CallExpression	"error ( gzerror ( in , & err ) )"		11214962	0					
ANR	11215536	Callee	error		11214962	0					
ANR	11215537	Identifier	error		11214962	0					
ANR	11215538	ArgumentList	"gzerror ( in , & err )"		11214962	1					
ANR	11215539	Argument	"gzerror ( in , & err )"		11214962	0					
ANR	11215540	CallExpression	"gzerror ( in , & err )"		11214962	0					
ANR	11215541	Callee	gzerror		11214962	0					
ANR	11215542	Identifier	gzerror		11214962	0					
ANR	11215543	ArgumentList	in		11214962	1					
ANR	11215544	Argument	in		11214962	0					
ANR	11215545	Identifier	in		11214962	0					
ANR	11215546	Argument	& err		11214962	1					
ANR	11215547	UnaryOperationExpression	& err		11214962	0					
ANR	11215548	UnaryOperator	&		11214962	0					
ANR	11215549	Identifier	err		11214962	1					
ANR	11215550	IfStatement	if ( fname [ BLOCKSIZE - 1 ] != 0 || ( int ) strlen ( fname ) > remaining )		11214962	17					
ANR	11215551	Condition	fname [ BLOCKSIZE - 1 ] != 0 || ( int ) strlen ( fname ) > remaining	514:18:12965:13021	11214962	0	True				
ANR	11215552	OrExpression	fname [ BLOCKSIZE - 1 ] != 0 || ( int ) strlen ( fname ) > remaining		11214962	0		||			
ANR	11215553	EqualityExpression	fname [ BLOCKSIZE - 1 ] != 0		11214962	0		!=			
ANR	11215554	ArrayIndexing	fname [ BLOCKSIZE - 1 ]		11214962	0					
ANR	11215555	Identifier	fname		11214962	0					
ANR	11215556	AdditiveExpression	BLOCKSIZE - 1		11214962	1		-			
ANR	11215557	Identifier	BLOCKSIZE		11214962	0					
ANR	11215558	PrimaryExpression	1		11214962	1					
ANR	11215559	PrimaryExpression	0		11214962	1					
ANR	11215560	RelationalExpression	( int ) strlen ( fname ) > remaining		11214962	1		>			
ANR	11215561	CastExpression	( int ) strlen ( fname )		11214962	0					
ANR	11215562	CastTarget	int		11214962	0					
ANR	11215563	CallExpression	strlen ( fname )		11214962	1					
ANR	11215564	Callee	strlen		11214962	0					
ANR	11215565	Identifier	strlen		11214962	0					
ANR	11215566	ArgumentList	fname		11214962	1					
ANR	11215567	Argument	fname		11214962	0					
ANR	11215568	Identifier	fname		11214962	0					
ANR	11215569	Identifier	remaining		11214962	1					
ANR	11215570	CompoundStatement		129:16:4130:4130	11214962	1					
ANR	11215571	ExpressionStatement	action = TGZ_INVALID	516:18:13060:13080	11214962	0	True				
ANR	11215572	AssignmentExpression	action = TGZ_INVALID		11214962	0		=			
ANR	11215573	Identifier	action		11214962	0					
ANR	11215574	Identifier	TGZ_INVALID		11214962	1					
ANR	11215575	BreakStatement	break ;	517:18:13100:13105	11214962	1	True				
ANR	11215576	ExpressionStatement	getheader = 2	519:14:13139:13152	11214962	18	True				
ANR	11215577	AssignmentExpression	getheader = 2		11214962	0		=			
ANR	11215578	Identifier	getheader		11214962	0					
ANR	11215579	PrimaryExpression	2		11214962	1					
ANR	11215580	BreakStatement	break ;	520:14:13168:13173	11214962	19	True				
ANR	11215581	Label	default :	521:12:13187:13194	11214962	20	True				
ANR	11215582	Identifier	default		11214962	0					
ANR	11215583	IfStatement	if ( action == TGZ_LIST )		11214962	21					
ANR	11215584	Condition	action == TGZ_LIST	522:18:13214:13231	11214962	0	True				
ANR	11215585	EqualityExpression	action == TGZ_LIST		11214962	0		==			
ANR	11215586	Identifier	action		11214962	0					
ANR	11215587	Identifier	TGZ_LIST		11214962	1					
ANR	11215588	ExpressionStatement	"printf ( "" %s     <---> %s\\n"" , strtime ( & tartime ) , fname )"	523:16:13250:13302	11214962	1	True				
ANR	11215589	CallExpression	"printf ( "" %s     <---> %s\\n"" , strtime ( & tartime ) , fname )"		11214962	0					
ANR	11215590	Callee	printf		11214962	0					
ANR	11215591	Identifier	printf		11214962	0					
ANR	11215592	ArgumentList	""" %s     <---> %s\\n"""		11214962	1					
ANR	11215593	Argument	""" %s     <---> %s\\n"""		11214962	0					
ANR	11215594	PrimaryExpression	""" %s     <---> %s\\n"""		11214962	0					
ANR	11215595	Argument	strtime ( & tartime )		11214962	1					
ANR	11215596	CallExpression	strtime ( & tartime )		11214962	0					
ANR	11215597	Callee	strtime		11214962	0					
ANR	11215598	Identifier	strtime		11214962	0					
ANR	11215599	ArgumentList	& tartime		11214962	1					
ANR	11215600	Argument	& tartime		11214962	0					
ANR	11215601	UnaryOperationExpression	& tartime		11214962	0					
ANR	11215602	UnaryOperator	&		11214962	0					
ANR	11215603	Identifier	tartime		11214962	1					
ANR	11215604	Argument	fname		11214962	2					
ANR	11215605	Identifier	fname		11214962	0					
ANR	11215606	BreakStatement	break ;	524:14:13318:13323	11214962	22	True				
ANR	11215607	ElseStatement	else		11214962	0					
ANR	11215608	CompoundStatement		143:10:4470:4538	11214962	0					
ANR	11215609	IdentifierDeclStatement	unsigned int bytes = ( remaining > BLOCKSIZE ) ? BLOCKSIZE : remaining ;	529:10:13380:13448	11214962	0	True				
ANR	11215610	IdentifierDecl	bytes = ( remaining > BLOCKSIZE ) ? BLOCKSIZE : remaining		11214962	0					
ANR	11215611	IdentifierDeclType	unsigned int		11214962	0					
ANR	11215612	Identifier	bytes		11214962	1					
ANR	11215613	AssignmentExpression	bytes = ( remaining > BLOCKSIZE ) ? BLOCKSIZE : remaining		11214962	2		=			
ANR	11215614	Identifier	bytes		11214962	0					
ANR	11215615	ConditionalExpression	( remaining > BLOCKSIZE ) ? BLOCKSIZE : remaining		11214962	1					
ANR	11215616	Condition	remaining > BLOCKSIZE		11214962	0					
ANR	11215617	RelationalExpression	remaining > BLOCKSIZE		11214962	0		>			
ANR	11215618	Identifier	remaining		11214962	0					
ANR	11215619	Identifier	BLOCKSIZE		11214962	1					
ANR	11215620	Identifier	BLOCKSIZE		11214962	1					
ANR	11215621	Identifier	remaining		11214962	2					
ANR	11215622	IfStatement	if ( outfile != NULL )		11214962	1					
ANR	11215623	Condition	outfile != NULL	531:14:13465:13479	11214962	0	True				
ANR	11215624	EqualityExpression	outfile != NULL		11214962	0		!=			
ANR	11215625	Identifier	outfile		11214962	0					
ANR	11215626	Identifier	NULL		11214962	1					
ANR	11215627	CompoundStatement		146:12:4584:4584	11214962	1					
ANR	11215628	IfStatement	"if ( fwrite ( & buffer , sizeof ( char ) , bytes , outfile ) != bytes )"		11214962	0					
ANR	11215629	Condition	"fwrite ( & buffer , sizeof ( char ) , bytes , outfile ) != bytes"	533:18:13514:13564	11214962	0	True				
ANR	11215630	EqualityExpression	"fwrite ( & buffer , sizeof ( char ) , bytes , outfile ) != bytes"		11214962	0		!=			
ANR	11215631	CallExpression	"fwrite ( & buffer , sizeof ( char ) , bytes , outfile )"		11214962	0					
ANR	11215632	Callee	fwrite		11214962	0					
ANR	11215633	Identifier	fwrite		11214962	0					
ANR	11215634	ArgumentList	& buffer		11214962	1					
ANR	11215635	Argument	& buffer		11214962	0					
ANR	11215636	UnaryOperationExpression	& buffer		11214962	0					
ANR	11215637	UnaryOperator	&		11214962	0					
ANR	11215638	Identifier	buffer		11214962	1					
ANR	11215639	Argument	sizeof ( char )		11214962	1					
ANR	11215640	SizeofExpression	sizeof ( char )		11214962	0					
ANR	11215641	Sizeof	sizeof		11214962	0					
ANR	11215642	SizeofOperand	char		11214962	1					
ANR	11215643	Argument	bytes		11214962	2					
ANR	11215644	Identifier	bytes		11214962	0					
ANR	11215645	Argument	outfile		11214962	3					
ANR	11215646	Identifier	outfile		11214962	0					
ANR	11215647	Identifier	bytes		11214962	1					
ANR	11215648	CompoundStatement		148:16:4673:4673	11214962	1					
ANR	11215649	ExpressionStatement	"fprintf ( stderr , ""%s: Error writing %s -- skipping\\n"" , prog , fname )"	535:18:13603:13687	11214962	0	True				
ANR	11215650	CallExpression	"fprintf ( stderr , ""%s: Error writing %s -- skipping\\n"" , prog , fname )"		11214962	0					
ANR	11215651	Callee	fprintf		11214962	0					
ANR	11215652	Identifier	fprintf		11214962	0					
ANR	11215653	ArgumentList	stderr		11214962	1					
ANR	11215654	Argument	stderr		11214962	0					
ANR	11215655	Identifier	stderr		11214962	0					
ANR	11215656	Argument	"""%s: Error writing %s -- skipping\\n"""		11214962	1					
ANR	11215657	PrimaryExpression	"""%s: Error writing %s -- skipping\\n"""		11214962	0					
ANR	11215658	Argument	prog		11214962	2					
ANR	11215659	Identifier	prog		11214962	0					
ANR	11215660	Argument	fname		11214962	3					
ANR	11215661	Identifier	fname		11214962	0					
ANR	11215662	ExpressionStatement	fclose ( outfile )	537:18:13707:13722	11214962	1	True				
ANR	11215663	CallExpression	fclose ( outfile )		11214962	0					
ANR	11215664	Callee	fclose		11214962	0					
ANR	11215665	Identifier	fclose		11214962	0					
ANR	11215666	ArgumentList	outfile		11214962	1					
ANR	11215667	Argument	outfile		11214962	0					
ANR	11215668	Identifier	outfile		11214962	0					
ANR	11215669	ExpressionStatement	outfile = NULL	538:18:13742:13756	11214962	2	True				
ANR	11215670	AssignmentExpression	outfile = NULL		11214962	0		=			
ANR	11215671	Identifier	outfile		11214962	0					
ANR	11215672	Identifier	NULL		11214962	1					
ANR	11215673	ExpressionStatement	remove ( fname )	539:18:13776:13789	11214962	3	True				
ANR	11215674	CallExpression	remove ( fname )		11214962	0					
ANR	11215675	Callee	remove		11214962	0					
ANR	11215676	Identifier	remove		11214962	0					
ANR	11215677	ArgumentList	fname		11214962	1					
ANR	11215678	Argument	fname		11214962	0					
ANR	11215679	Identifier	fname		11214962	0					
ANR	11215680	ExpressionStatement	remaining -= bytes	542:10:13833:13851	11214962	2	True				
ANR	11215681	AssignmentExpression	remaining -= bytes		11214962	0		-=			
ANR	11215682	Identifier	remaining		11214962	0					
ANR	11215683	Identifier	bytes		11214962	1					
ANR	11215684	IfStatement	if ( remaining == 0 )		11214962	4					
ANR	11215685	Condition	remaining == 0	545:10:13874:13887	11214962	0	True				
ANR	11215686	EqualityExpression	remaining == 0		11214962	0		==			
ANR	11215687	Identifier	remaining		11214962	0					
ANR	11215688	PrimaryExpression	0		11214962	1					
ANR	11215689	CompoundStatement		160:8:4988:4988	11214962	1					
ANR	11215690	ExpressionStatement	getheader = 1	547:10:13910:13923	11214962	0	True				
ANR	11215691	AssignmentExpression	getheader = 1		11214962	0		=			
ANR	11215692	Identifier	getheader		11214962	0					
ANR	11215693	PrimaryExpression	1		11214962	1					
ANR	11215694	IfStatement	if ( outfile != NULL )		11214962	1					
ANR	11215695	Condition	outfile != NULL	548:14:13939:13953	11214962	0	True				
ANR	11215696	EqualityExpression	outfile != NULL		11214962	0		!=			
ANR	11215697	Identifier	outfile		11214962	0					
ANR	11215698	Identifier	NULL		11214962	1					
ANR	11215699	CompoundStatement		163:12:5058:5058	11214962	1					
ANR	11215700	ExpressionStatement	fclose ( outfile )	550:14:13984:13999	11214962	0	True				
ANR	11215701	CallExpression	fclose ( outfile )		11214962	0					
ANR	11215702	Callee	fclose		11214962	0					
ANR	11215703	Identifier	fclose		11214962	0					
ANR	11215704	ArgumentList	outfile		11214962	1					
ANR	11215705	Argument	outfile		11214962	0					
ANR	11215706	Identifier	outfile		11214962	0					
ANR	11215707	ExpressionStatement	outfile = NULL	551:14:14015:14029	11214962	1	True				
ANR	11215708	AssignmentExpression	outfile = NULL		11214962	0		=			
ANR	11215709	Identifier	outfile		11214962	0					
ANR	11215710	Identifier	NULL		11214962	1					
ANR	11215711	IfStatement	if ( action != TGZ_INVALID )		11214962	2					
ANR	11215712	Condition	action != TGZ_INVALID	552:18:14049:14069	11214962	0	True				
ANR	11215713	EqualityExpression	action != TGZ_INVALID		11214962	0		!=			
ANR	11215714	Identifier	action		11214962	0					
ANR	11215715	Identifier	TGZ_INVALID		11214962	1					
ANR	11215716	ExpressionStatement	"push_attr ( & attributes , fname , tarmode , tartime )"	553:16:14088:14132	11214962	1	True				
ANR	11215717	CallExpression	"push_attr ( & attributes , fname , tarmode , tartime )"		11214962	0					
ANR	11215718	Callee	push_attr		11214962	0					
ANR	11215719	Identifier	push_attr		11214962	0					
ANR	11215720	ArgumentList	& attributes		11214962	1					
ANR	11215721	Argument	& attributes		11214962	0					
ANR	11215722	UnaryOperationExpression	& attributes		11214962	0					
ANR	11215723	UnaryOperator	&		11214962	0					
ANR	11215724	Identifier	attributes		11214962	1					
ANR	11215725	Argument	fname		11214962	1					
ANR	11215726	Identifier	fname		11214962	0					
ANR	11215727	Argument	tarmode		11214962	2					
ANR	11215728	Identifier	tarmode		11214962	0					
ANR	11215729	Argument	tartime		11214962	3					
ANR	11215730	Identifier	tartime		11214962	0					
ANR	11215731	IfStatement	if ( action == TGZ_INVALID )		11214962	5					
ANR	11215732	Condition	action == TGZ_INVALID	560:10:14225:14245	11214962	0	True				
ANR	11215733	EqualityExpression	action == TGZ_INVALID		11214962	0		==			
ANR	11215734	Identifier	action		11214962	0					
ANR	11215735	Identifier	TGZ_INVALID		11214962	1					
ANR	11215736	CompoundStatement		175:8:5346:5346	11214962	1					
ANR	11215737	ExpressionStatement	"error ( ""broken archive"" )"	562:10:14268:14291	11214962	0	True				
ANR	11215738	CallExpression	"error ( ""broken archive"" )"		11214962	0					
ANR	11215739	Callee	error		11214962	0					
ANR	11215740	Identifier	error		11214962	0					
ANR	11215741	ArgumentList	"""broken archive"""		11214962	1					
ANR	11215742	Argument	"""broken archive"""		11214962	0					
ANR	11215743	PrimaryExpression	"""broken archive"""		11214962	0					
ANR	11215744	BreakStatement	break ;	563:10:14303:14308	11214962	1	True				
ANR	11215745	ExpressionStatement	restore_attr ( & attributes )	570:2:14380:14405	11214962	17	True				
ANR	11215746	CallExpression	restore_attr ( & attributes )		11214962	0					
ANR	11215747	Callee	restore_attr		11214962	0					
ANR	11215748	Identifier	restore_attr		11214962	0					
ANR	11215749	ArgumentList	& attributes		11214962	1					
ANR	11215750	Argument	& attributes		11214962	0					
ANR	11215751	UnaryOperationExpression	& attributes		11214962	0					
ANR	11215752	UnaryOperator	&		11214962	0					
ANR	11215753	Identifier	attributes		11214962	1					
ANR	11215754	IfStatement	if ( gzclose ( in ) != Z_OK )		11214962	18					
ANR	11215755	Condition	gzclose ( in ) != Z_OK	572:6:14414:14432	11214962	0	True				
ANR	11215756	EqualityExpression	gzclose ( in ) != Z_OK		11214962	0		!=			
ANR	11215757	CallExpression	gzclose ( in )		11214962	0					
ANR	11215758	Callee	gzclose		11214962	0					
ANR	11215759	Identifier	gzclose		11214962	0					
ANR	11215760	ArgumentList	in		11214962	1					
ANR	11215761	Argument	in		11214962	0					
ANR	11215762	Identifier	in		11214962	0					
ANR	11215763	Identifier	Z_OK		11214962	1					
ANR	11215764	ExpressionStatement	"error ( ""failed gzclose"" )"	573:4:14439:14462	11214962	1	True				
ANR	11215765	CallExpression	"error ( ""failed gzclose"" )"		11214962	0					
ANR	11215766	Callee	error		11214962	0					
ANR	11215767	Identifier	error		11214962	0					
ANR	11215768	ArgumentList	"""failed gzclose"""		11214962	1					
ANR	11215769	Argument	"""failed gzclose"""		11214962	0					
ANR	11215770	PrimaryExpression	"""failed gzclose"""		11214962	0					
ANR	11215771	ReturnStatement	return 0 ;	575:2:14467:14475	11214962	19	True				
ANR	11215772	PrimaryExpression	0		11214962	0					
ANR	11215773	ReturnType	int		11214962	1					
ANR	11215774	Identifier	tar		11214962	2					
ANR	11215775	ParameterList	"gzFile in , int action , int arg , int argc , char * * argv"		11214962	3					
ANR	11215776	Parameter	gzFile in	386:9:8858:8866	11214962	0	True				
ANR	11215777	ParameterType	gzFile		11214962	0					
ANR	11215778	Identifier	in		11214962	1					
ANR	11215779	Parameter	int action	386:19:8868:8877	11214962	1	True				
ANR	11215780	ParameterType	int		11214962	0					
ANR	11215781	Identifier	action		11214962	1					
ANR	11215782	Parameter	int arg	386:30:8879:8885	11214962	2	True				
ANR	11215783	ParameterType	int		11214962	0					
ANR	11215784	Identifier	arg		11214962	1					
ANR	11215785	Parameter	int argc	386:38:8887:8894	11214962	3	True				
ANR	11215786	ParameterType	int		11214962	0					
ANR	11215787	Identifier	argc		11214962	1					
ANR	11215788	Parameter	char * * argv	386:47:8896:8906	11214962	4	True				
ANR	11215789	ParameterType	char * *		11214962	0					
ANR	11215790	Identifier	argv		11214962	1					
ANR	11215791	CFGEntryNode	ENTRY		11214962		True				
ANR	11215792	CFGExitNode	EXIT		11214962		True				
ANR	11215793	Symbol	SHORTNAMESIZE		11214962						
ANR	11215794	Symbol	getoct		11214962						
ANR	11215795	Symbol	getheader		11214962						
ANR	11215796	Symbol	strncmp		11214962						
ANR	11215797	Symbol	strlen		11214962						
ANR	11215798	Symbol	gzclose		11214962						
ANR	11215799	Symbol	len		11214962						
ANR	11215800	Symbol	buffer . header . mtime		11214962						
ANR	11215801	Symbol	action		11214962						
ANR	11215802	Symbol	tarmode		11214962						
ANR	11215803	Symbol	buffer		11214962						
ANR	11215804	Symbol	fname		11214962						
ANR	11215805	Symbol	* BLOCKSIZE		11214962						
ANR	11215806	Symbol	NULL		11214962						
ANR	11215807	Symbol	in		11214962						
ANR	11215808	Symbol	strtime		11214962						
ANR	11215809	Symbol	gzread		11214962						
ANR	11215810	Symbol	tartime		11214962						
ANR	11215811	Symbol	stderr		11214962						
ANR	11215812	Symbol	remaining		11214962						
ANR	11215813	Symbol	& attributes		11214962						
ANR	11215814	Symbol	buffer . header . typeflag		11214962						
ANR	11215815	Symbol	TGZ_LIST		11214962						
ANR	11215816	Symbol	* buffer . header . name		11214962						
ANR	11215817	Symbol	outfile		11214962						
ANR	11215818	Symbol	BLOCKSIZE		11214962						
ANR	11215819	Symbol	* buffer . header		11214962						
ANR	11215820	Symbol	* fname		11214962						
ANR	11215821	Symbol	Z_OK		11214962						
ANR	11215822	Symbol	& err		11214962						
ANR	11215823	Symbol	argv		11214962						
ANR	11215824	Symbol	buffer . header . mode		11214962						
ANR	11215825	Symbol	* SHORTNAMESIZE		11214962						
ANR	11215826	Symbol	arg		11214962						
ANR	11215827	Symbol	buffer . header		11214962						
ANR	11215828	Symbol	& tartime		11214962						
ANR	11215829	Symbol	argc		11214962						
ANR	11215830	Symbol	gzerror		11214962						
ANR	11215831	Symbol	fopen		11214962						
ANR	11215832	Symbol	* buffer		11214962						
ANR	11215833	Symbol	err		11214962						
ANR	11215834	Symbol	buffer . header . name		11214962						
ANR	11215835	Symbol	fwrite		11214962						
ANR	11215836	Symbol	buffer . header . size		11214962						
ANR	11215837	Symbol	prog		11214962						
ANR	11215838	Symbol	TGZ_EXTRACT		11214962						
ANR	11215839	Symbol	p		11214962						
ANR	11215840	Symbol	matchname		11214962						
ANR	11215841	Symbol	& buffer		11214962						
ANR	11215842	Symbol	strrchr		11214962						
ANR	11215843	Symbol	bytes		11214962						
ANR	11215844	Symbol	attributes		11214962						
ANR	11215845	Symbol	* p		11214962						
ANR	11215846	Symbol	TGZ_INVALID		11214962						
ANR	11215847	Function	help	581:0:14549:14956							
ANR	11215848	FunctionDef	help (int exitval)		11215847	0					
ANR	11215849	CompoundStatement		582:0:14572:14956	11215847	0					
ANR	11215850	Statement	printf	583:2:14576:14581	11215847	0	True				
ANR	11215851	Statement	(	583:8:14582:14582	11215847	1	True				
ANR	11215852	Statement	"""untgz version 0.2.1\\n"""	583:9:14583:14605	11215847	2	True				
ANR	11215853	Statement	"""  using zlib version %s\\n\\n"""	584:9:14616:14644	11215847	3	True				
ANR	11215854	Statement	","	584:38:14645:14645	11215847	4	True				
ANR	11215855	Statement	zlibVersion	585:9:14656:14666	11215847	5	True				
ANR	11215856	Statement	(	585:20:14667:14667	11215847	6	True				
ANR	11215857	Statement	)	585:21:14668:14668	11215847	7	True				
ANR	11215858	Statement	)	585:22:14669:14669	11215847	8	True				
ANR	11215859	ExpressionStatement		585:23:14670:14670	11215847	9	True				
ANR	11215860	Statement	printf	586:2:14674:14679	11215847	10	True				
ANR	11215861	Statement	(	586:8:14680:14680	11215847	11	True				
ANR	11215862	Statement	"""Usage: untgz file.tgz            extract all files\\n"""	586:9:14681:14734	11215847	12	True				
ANR	11215863	Statement	"""       untgz file.tgz fname ...  extract selected files\\n"""	587:9:14745:14803	11215847	13	True				
ANR	11215864	Statement	"""       untgz -l file.tgz         list archive contents\\n"""	588:9:14814:14871	11215847	14	True				
ANR	11215865	Statement	"""       untgz -h                  display this help\\n"""	589:9:14882:14935	11215847	15	True				
ANR	11215866	Statement	)	589:63:14936:14936	11215847	16	True				
ANR	11215867	ExpressionStatement		589:64:14937:14937	11215847	17	True				
ANR	11215868	ExpressionStatement	exit ( exitval )	590:2:14941:14954	11215847	18	True				
ANR	11215869	CallExpression	exit ( exitval )		11215847	0					
ANR	11215870	Callee	exit		11215847	0					
ANR	11215871	Identifier	exit		11215847	0					
ANR	11215872	ArgumentList	exitval		11215847	1					
ANR	11215873	Argument	exitval		11215847	0					
ANR	11215874	Identifier	exitval		11215847	0					
ANR	11215875	ReturnType	void		11215847	1					
ANR	11215876	Identifier	help		11215847	2					
ANR	11215877	ParameterList	int exitval		11215847	3					
ANR	11215878	Parameter	int exitval	581:10:14559:14569	11215847	0	True				
ANR	11215879	ParameterType	int		11215847	0					
ANR	11215880	Identifier	exitval		11215847	1					
ANR	11215881	CFGEntryNode	ENTRY		11215847		True				
ANR	11215882	CFGExitNode	EXIT		11215847		True				
ANR	11215883	Symbol	exitval		11215847						
ANR	11215884	Function	error	593:0:14959:15042							
ANR	11215885	FunctionDef	error (const char * msg)		11215884	0					
ANR	11215886	CompoundStatement		594:0:14987:15042	11215884	0					
ANR	11215887	ExpressionStatement	"fprintf ( stderr , ""%s: %s\\n"" , prog , msg )"	595:2:14991:15029	11215884	0	True				
ANR	11215888	CallExpression	"fprintf ( stderr , ""%s: %s\\n"" , prog , msg )"		11215884	0					
ANR	11215889	Callee	fprintf		11215884	0					
ANR	11215890	Identifier	fprintf		11215884	0					
ANR	11215891	ArgumentList	stderr		11215884	1					
ANR	11215892	Argument	stderr		11215884	0					
ANR	11215893	Identifier	stderr		11215884	0					
ANR	11215894	Argument	"""%s: %s\\n"""		11215884	1					
ANR	11215895	PrimaryExpression	"""%s: %s\\n"""		11215884	0					
ANR	11215896	Argument	prog		11215884	2					
ANR	11215897	Identifier	prog		11215884	0					
ANR	11215898	Argument	msg		11215884	3					
ANR	11215899	Identifier	msg		11215884	0					
ANR	11215900	ExpressionStatement	exit ( 1 )	596:2:15033:15040	11215884	1	True				
ANR	11215901	CallExpression	exit ( 1 )		11215884	0					
ANR	11215902	Callee	exit		11215884	0					
ANR	11215903	Identifier	exit		11215884	0					
ANR	11215904	ArgumentList	1		11215884	1					
ANR	11215905	Argument	1		11215884	0					
ANR	11215906	PrimaryExpression	1		11215884	0					
ANR	11215907	ReturnType	void		11215884	1					
ANR	11215908	Identifier	error		11215884	2					
ANR	11215909	ParameterList	const char * msg		11215884	3					
ANR	11215910	Parameter	const char * msg	593:11:14970:14984	11215884	0	True				
ANR	11215911	ParameterType	const char *		11215884	0					
ANR	11215912	Identifier	msg		11215884	1					
ANR	11215913	CFGEntryNode	ENTRY		11215884		True				
ANR	11215914	CFGExitNode	EXIT		11215884		True				
ANR	11215915	Symbol	msg		11215884						
ANR	11215916	Symbol	stderr		11215884						
ANR	11215917	Symbol	prog		11215884						
ANR	11215918	DeclStmt									
ANR	11215919	Decl							int	int	_CRT_glob
ANR	11215920	Function	main	606:0:15227:16540							
ANR	11215921	FunctionDef	"main (int argc , char * * argv)"		11215920	0					
ANR	11215922	CompoundStatement		607:0:15258:16540	11215920	0					
ANR	11215923	IdentifierDeclStatement	int action = TGZ_EXTRACT ;	608:4:15264:15296	11215920	0	True				
ANR	11215924	IdentifierDecl	action = TGZ_EXTRACT		11215920	0					
ANR	11215925	IdentifierDeclType	int		11215920	0					
ANR	11215926	Identifier	action		11215920	1					
ANR	11215927	AssignmentExpression	action = TGZ_EXTRACT		11215920	2		=			
ANR	11215928	Identifier	TGZ_EXTRACT		11215920	0					
ANR	11215929	Identifier	TGZ_EXTRACT		11215920	1					
ANR	11215930	IdentifierDeclStatement	int arg = 1 ;	609:4:15302:15321	11215920	1	True				
ANR	11215931	IdentifierDecl	arg = 1		11215920	0					
ANR	11215932	IdentifierDeclType	int		11215920	0					
ANR	11215933	Identifier	arg		11215920	1					
ANR	11215934	AssignmentExpression	arg = 1		11215920	2		=			
ANR	11215935	Identifier	arg		11215920	0					
ANR	11215936	PrimaryExpression	1		11215920	1					
ANR	11215937	IdentifierDeclStatement	char * TGZfile ;	610:4:15327:15347	11215920	2	True				
ANR	11215938	IdentifierDecl	* TGZfile		11215920	0					
ANR	11215939	IdentifierDeclType	char *		11215920	0					
ANR	11215940	Identifier	TGZfile		11215920	1					
ANR	11215941	IdentifierDeclStatement	gzFile * f ;	611:4:15353:15367	11215920	3	True				
ANR	11215942	IdentifierDecl	* f		11215920	0					
ANR	11215943	IdentifierDeclType	gzFile *		11215920	0					
ANR	11215944	Identifier	f		11215920	1					
ANR	11215945	ExpressionStatement	"prog = strrchr ( argv [ 0 ] , '\\\\' )"	613:4:15374:15402	11215920	4	True				
ANR	11215946	AssignmentExpression	"prog = strrchr ( argv [ 0 ] , '\\\\' )"		11215920	0		=			
ANR	11215947	Identifier	prog		11215920	0					
ANR	11215948	CallExpression	"strrchr ( argv [ 0 ] , '\\\\' )"		11215920	1					
ANR	11215949	Callee	strrchr		11215920	0					
ANR	11215950	Identifier	strrchr		11215920	0					
ANR	11215951	ArgumentList	argv [ 0 ]		11215920	1					
ANR	11215952	Argument	argv [ 0 ]		11215920	0					
ANR	11215953	ArrayIndexing	argv [ 0 ]		11215920	0					
ANR	11215954	Identifier	argv		11215920	0					
ANR	11215955	PrimaryExpression	0		11215920	1					
ANR	11215956	Argument	'\\\\'		11215920	1					
ANR	11215957	PrimaryExpression	'\\\\'		11215920	0					
ANR	11215958	IfStatement	if ( prog == NULL )		11215920	5					
ANR	11215959	Condition	prog == NULL	614:8:15412:15423	11215920	0	True				
ANR	11215960	EqualityExpression	prog == NULL		11215920	0		==			
ANR	11215961	Identifier	prog		11215920	0					
ANR	11215962	Identifier	NULL		11215920	1					
ANR	11215963	CompoundStatement		9:6:173:173	11215920	1					
ANR	11215964	ExpressionStatement	"prog = strrchr ( argv [ 0 ] , '/' )"	616:8:15442:15469	11215920	0	True				
ANR	11215965	AssignmentExpression	"prog = strrchr ( argv [ 0 ] , '/' )"		11215920	0		=			
ANR	11215966	Identifier	prog		11215920	0					
ANR	11215967	CallExpression	"strrchr ( argv [ 0 ] , '/' )"		11215920	1					
ANR	11215968	Callee	strrchr		11215920	0					
ANR	11215969	Identifier	strrchr		11215920	0					
ANR	11215970	ArgumentList	argv [ 0 ]		11215920	1					
ANR	11215971	Argument	argv [ 0 ]		11215920	0					
ANR	11215972	ArrayIndexing	argv [ 0 ]		11215920	0					
ANR	11215973	Identifier	argv		11215920	0					
ANR	11215974	PrimaryExpression	0		11215920	1					
ANR	11215975	Argument	'/'		11215920	1					
ANR	11215976	PrimaryExpression	'/'		11215920	0					
ANR	11215977	IfStatement	if ( prog == NULL )		11215920	1					
ANR	11215978	Condition	prog == NULL	617:12:15483:15494	11215920	0	True				
ANR	11215979	EqualityExpression	prog == NULL		11215920	0		==			
ANR	11215980	Identifier	prog		11215920	0					
ANR	11215981	Identifier	NULL		11215920	1					
ANR	11215982	CompoundStatement		12:10:248:248	11215920	1					
ANR	11215983	ExpressionStatement	"prog = strrchr ( argv [ 0 ] , ':' )"	619:12:15521:15548	11215920	0	True				
ANR	11215984	AssignmentExpression	"prog = strrchr ( argv [ 0 ] , ':' )"		11215920	0		=			
ANR	11215985	Identifier	prog		11215920	0					
ANR	11215986	CallExpression	"strrchr ( argv [ 0 ] , ':' )"		11215920	1					
ANR	11215987	Callee	strrchr		11215920	0					
ANR	11215988	Identifier	strrchr		11215920	0					
ANR	11215989	ArgumentList	argv [ 0 ]		11215920	1					
ANR	11215990	Argument	argv [ 0 ]		11215920	0					
ANR	11215991	ArrayIndexing	argv [ 0 ]		11215920	0					
ANR	11215992	Identifier	argv		11215920	0					
ANR	11215993	PrimaryExpression	0		11215920	1					
ANR	11215994	Argument	':'		11215920	1					
ANR	11215995	PrimaryExpression	':'		11215920	0					
ANR	11215996	IfStatement	if ( prog == NULL )		11215920	1					
ANR	11215997	Condition	prog == NULL	620:16:15566:15577	11215920	0	True				
ANR	11215998	EqualityExpression	prog == NULL		11215920	0		==			
ANR	11215999	Identifier	prog		11215920	0					
ANR	11216000	Identifier	NULL		11215920	1					
ANR	11216001	ExpressionStatement	prog = argv [ 0 ]	621:14:15594:15608	11215920	1	True				
ANR	11216002	AssignmentExpression	prog = argv [ 0 ]		11215920	0		=			
ANR	11216003	Identifier	prog		11215920	0					
ANR	11216004	ArrayIndexing	argv [ 0 ]		11215920	1					
ANR	11216005	Identifier	argv		11215920	0					
ANR	11216006	PrimaryExpression	0		11215920	1					
ANR	11216007	ElseStatement	else		11215920	0					
ANR	11216008	ExpressionStatement	prog ++	623:14:15641:15647	11215920	0	True				
ANR	11216009	PostIncDecOperationExpression	prog ++		11215920	0					
ANR	11216010	Identifier	prog		11215920	0					
ANR	11216011	IncDec	++		11215920	1					
ANR	11216012	ElseStatement	else		11215920	0					
ANR	11216013	ExpressionStatement	prog ++	626:10:15684:15690	11215920	0	True				
ANR	11216014	PostIncDecOperationExpression	prog ++		11215920	0					
ANR	11216015	Identifier	prog		11215920	0					
ANR	11216016	IncDec	++		11215920	1					
ANR	11216017	ElseStatement	else		11215920	0					
ANR	11216018	ExpressionStatement	prog ++	629:6:15715:15721	11215920	0	True				
ANR	11216019	PostIncDecOperationExpression	prog ++		11215920	0					
ANR	11216020	Identifier	prog		11215920	0					
ANR	11216021	IncDec	++		11215920	1					
ANR	11216022	IfStatement	if ( argc == 1 )		11215920	6					
ANR	11216023	Condition	argc == 1	631:8:15732:15740	11215920	0	True				
ANR	11216024	EqualityExpression	argc == 1		11215920	0		==			
ANR	11216025	Identifier	argc		11215920	0					
ANR	11216026	PrimaryExpression	1		11215920	1					
ANR	11216027	ExpressionStatement	help ( 0 )	632:6:15749:15756	11215920	1	True				
ANR	11216028	CallExpression	help ( 0 )		11215920	0					
ANR	11216029	Callee	help		11215920	0					
ANR	11216030	Identifier	help		11215920	0					
ANR	11216031	ArgumentList	0		11215920	1					
ANR	11216032	Argument	0		11215920	0					
ANR	11216033	PrimaryExpression	0		11215920	0					
ANR	11216034	IfStatement	"if ( strcmp ( argv [ arg ] , ""-l"" ) == 0 )"		11215920	7					
ANR	11216035	Condition	"strcmp ( argv [ arg ] , ""-l"" ) == 0"	634:8:15767:15793	11215920	0	True				
ANR	11216036	EqualityExpression	"strcmp ( argv [ arg ] , ""-l"" ) == 0"		11215920	0		==			
ANR	11216037	CallExpression	"strcmp ( argv [ arg ] , ""-l"" )"		11215920	0					
ANR	11216038	Callee	strcmp		11215920	0					
ANR	11216039	Identifier	strcmp		11215920	0					
ANR	11216040	ArgumentList	argv [ arg ]		11215920	1					
ANR	11216041	Argument	argv [ arg ]		11215920	0					
ANR	11216042	ArrayIndexing	argv [ arg ]		11215920	0					
ANR	11216043	Identifier	argv		11215920	0					
ANR	11216044	Identifier	arg		11215920	1					
ANR	11216045	Argument	"""-l"""		11215920	1					
ANR	11216046	PrimaryExpression	"""-l"""		11215920	0					
ANR	11216047	PrimaryExpression	0		11215920	1					
ANR	11216048	CompoundStatement		29:6:543:543	11215920	1					
ANR	11216049	ExpressionStatement	action = TGZ_LIST	636:8:15812:15829	11215920	0	True				
ANR	11216050	AssignmentExpression	action = TGZ_LIST		11215920	0		=			
ANR	11216051	Identifier	action		11215920	0					
ANR	11216052	Identifier	TGZ_LIST		11215920	1					
ANR	11216053	IfStatement	if ( argc == ++ arg )		11215920	1					
ANR	11216054	Condition	argc == ++ arg	637:12:15843:15855	11215920	0	True				
ANR	11216055	EqualityExpression	argc == ++ arg		11215920	0		==			
ANR	11216056	Identifier	argc		11215920	0					
ANR	11216057	UnaryExpression	++ arg		11215920	1					
ANR	11216058	IncDec	++		11215920	0					
ANR	11216059	Identifier	arg		11215920	1					
ANR	11216060	ExpressionStatement	help ( 0 )	638:10:15868:15875	11215920	1	True				
ANR	11216061	CallExpression	help ( 0 )		11215920	0					
ANR	11216062	Callee	help		11215920	0					
ANR	11216063	Identifier	help		11215920	0					
ANR	11216064	ArgumentList	0		11215920	1					
ANR	11216065	Argument	0		11215920	0					
ANR	11216066	PrimaryExpression	0		11215920	0					
ANR	11216067	ElseStatement	else		11215920	0					
ANR	11216068	IfStatement	"if ( strcmp ( argv [ arg ] , ""-h"" ) == 0 )"		11215920	0					
ANR	11216069	Condition	"strcmp ( argv [ arg ] , ""-h"" ) == 0"	640:13:15898:15924	11215920	0	True				
ANR	11216070	EqualityExpression	"strcmp ( argv [ arg ] , ""-h"" ) == 0"		11215920	0		==			
ANR	11216071	CallExpression	"strcmp ( argv [ arg ] , ""-h"" )"		11215920	0					
ANR	11216072	Callee	strcmp		11215920	0					
ANR	11216073	Identifier	strcmp		11215920	0					
ANR	11216074	ArgumentList	argv [ arg ]		11215920	1					
ANR	11216075	Argument	argv [ arg ]		11215920	0					
ANR	11216076	ArrayIndexing	argv [ arg ]		11215920	0					
ANR	11216077	Identifier	argv		11215920	0					
ANR	11216078	Identifier	arg		11215920	1					
ANR	11216079	Argument	"""-h"""		11215920	1					
ANR	11216080	PrimaryExpression	"""-h"""		11215920	0					
ANR	11216081	PrimaryExpression	0		11215920	1					
ANR	11216082	CompoundStatement		35:6:674:674	11215920	1					
ANR	11216083	ExpressionStatement	help ( 0 )	642:8:15943:15950	11215920	0	True				
ANR	11216084	CallExpression	help ( 0 )		11215920	0					
ANR	11216085	Callee	help		11215920	0					
ANR	11216086	Identifier	help		11215920	0					
ANR	11216087	ArgumentList	0		11215920	1					
ANR	11216088	Argument	0		11215920	0					
ANR	11216089	PrimaryExpression	0		11215920	0					
ANR	11216090	IfStatement	if ( ( TGZfile = TGZfname ( argv [ arg ] ) ) == NULL )		11215920	8					
ANR	11216091	Condition	( TGZfile = TGZfname ( argv [ arg ] ) ) == NULL	645:8:15969:16007	11215920	0	True				
ANR	11216092	EqualityExpression	( TGZfile = TGZfname ( argv [ arg ] ) ) == NULL		11215920	0		==			
ANR	11216093	AssignmentExpression	TGZfile = TGZfname ( argv [ arg ] )		11215920	0		=			
ANR	11216094	Identifier	TGZfile		11215920	0					
ANR	11216095	CallExpression	TGZfname ( argv [ arg ] )		11215920	1					
ANR	11216096	Callee	TGZfname		11215920	0					
ANR	11216097	Identifier	TGZfname		11215920	0					
ANR	11216098	ArgumentList	argv [ arg ]		11215920	1					
ANR	11216099	Argument	argv [ arg ]		11215920	0					
ANR	11216100	ArrayIndexing	argv [ arg ]		11215920	0					
ANR	11216101	Identifier	argv		11215920	0					
ANR	11216102	Identifier	arg		11215920	1					
ANR	11216103	Identifier	NULL		11215920	1					
ANR	11216104	ExpressionStatement	TGZnotfound ( argv [ arg ] )	646:6:16016:16038	11215920	1	True				
ANR	11216105	CallExpression	TGZnotfound ( argv [ arg ] )		11215920	0					
ANR	11216106	Callee	TGZnotfound		11215920	0					
ANR	11216107	Identifier	TGZnotfound		11215920	0					
ANR	11216108	ArgumentList	argv [ arg ]		11215920	1					
ANR	11216109	Argument	argv [ arg ]		11215920	0					
ANR	11216110	ArrayIndexing	argv [ arg ]		11215920	0					
ANR	11216111	Identifier	argv		11215920	0					
ANR	11216112	Identifier	arg		11215920	1					
ANR	11216113	ExpressionStatement	++ arg	648:4:16045:16050	11215920	9	True				
ANR	11216114	UnaryExpression	++ arg		11215920	0					
ANR	11216115	IncDec	++		11215920	0					
ANR	11216116	Identifier	arg		11215920	1					
ANR	11216117	IfStatement	if ( ( action == TGZ_LIST ) && ( arg != argc ) )		11215920	10					
ANR	11216118	Condition	( action == TGZ_LIST ) && ( arg != argc )	649:8:16060:16096	11215920	0	True				
ANR	11216119	AndExpression	( action == TGZ_LIST ) && ( arg != argc )		11215920	0		&&			
ANR	11216120	EqualityExpression	action == TGZ_LIST		11215920	0		==			
ANR	11216121	Identifier	action		11215920	0					
ANR	11216122	Identifier	TGZ_LIST		11215920	1					
ANR	11216123	EqualityExpression	arg != argc		11215920	1		!=			
ANR	11216124	Identifier	arg		11215920	0					
ANR	11216125	Identifier	argc		11215920	1					
ANR	11216126	ExpressionStatement	help ( 1 )	650:6:16105:16112	11215920	1	True				
ANR	11216127	CallExpression	help ( 1 )		11215920	0					
ANR	11216128	Callee	help		11215920	0					
ANR	11216129	Identifier	help		11215920	0					
ANR	11216130	ArgumentList	1		11215920	1					
ANR	11216131	Argument	1		11215920	0					
ANR	11216132	PrimaryExpression	1		11215920	0					
ANR	11216133	SwitchStatement	switch ( action )		11215920	11					
ANR	11216134	Condition	action	655:11:16158:16163	11215920	0	True				
ANR	11216135	Identifier	action		11215920	0					
ANR	11216136	CompoundStatement		50:6:913:913	11215920	1					
ANR	11216137	Label	case TGZ_LIST :	657:6:16180:16193	11215920	0	True				
ANR	11216138	Identifier	TGZ_LIST		11215920	0					
ANR	11216139	Label	case TGZ_EXTRACT :	658:6:16201:16217	11215920	1	True				
ANR	11216140	Identifier	TGZ_EXTRACT		11215920	0					
ANR	11216141	ExpressionStatement	"f = gzopen ( TGZfile , ""rb"" )"	659:8:16227:16251	11215920	2	True				
ANR	11216142	AssignmentExpression	"f = gzopen ( TGZfile , ""rb"" )"		11215920	0		=			
ANR	11216143	Identifier	f		11215920	0					
ANR	11216144	CallExpression	"gzopen ( TGZfile , ""rb"" )"		11215920	1					
ANR	11216145	Callee	gzopen		11215920	0					
ANR	11216146	Identifier	gzopen		11215920	0					
ANR	11216147	ArgumentList	TGZfile		11215920	1					
ANR	11216148	Argument	TGZfile		11215920	0					
ANR	11216149	Identifier	TGZfile		11215920	0					
ANR	11216150	Argument	"""rb"""		11215920	1					
ANR	11216151	PrimaryExpression	"""rb"""		11215920	0					
ANR	11216152	IfStatement	if ( f == NULL )		11215920	3					
ANR	11216153	Condition	f == NULL	660:12:16265:16273	11215920	0	True				
ANR	11216154	EqualityExpression	f == NULL		11215920	0		==			
ANR	11216155	Identifier	f		11215920	0					
ANR	11216156	Identifier	NULL		11215920	1					
ANR	11216157	CompoundStatement		55:10:1027:1027	11215920	1					
ANR	11216158	ExpressionStatement	"fprintf ( stderr , ""%s: Couldn't gzopen %s\\n"" , prog , TGZfile )"	662:12:16300:16355	11215920	0	True				
ANR	11216159	CallExpression	"fprintf ( stderr , ""%s: Couldn't gzopen %s\\n"" , prog , TGZfile )"		11215920	0					
ANR	11216160	Callee	fprintf		11215920	0					
ANR	11216161	Identifier	fprintf		11215920	0					
ANR	11216162	ArgumentList	stderr		11215920	1					
ANR	11216163	Argument	stderr		11215920	0					
ANR	11216164	Identifier	stderr		11215920	0					
ANR	11216165	Argument	"""%s: Couldn't gzopen %s\\n"""		11215920	1					
ANR	11216166	PrimaryExpression	"""%s: Couldn't gzopen %s\\n"""		11215920	0					
ANR	11216167	Argument	prog		11215920	2					
ANR	11216168	Identifier	prog		11215920	0					
ANR	11216169	Argument	TGZfile		11215920	3					
ANR	11216170	Identifier	TGZfile		11215920	0					
ANR	11216171	ReturnStatement	return 1 ;	663:12:16369:16377	11215920	1	True				
ANR	11216172	PrimaryExpression	1		11215920	0					
ANR	11216173	ExpressionStatement	"exit ( tar ( f , action , arg , argc , argv ) )"	665:8:16399:16436	11215920	4	True				
ANR	11216174	CallExpression	"exit ( tar ( f , action , arg , argc , argv ) )"		11215920	0					
ANR	11216175	Callee	exit		11215920	0					
ANR	11216176	Identifier	exit		11215920	0					
ANR	11216177	ArgumentList	"tar ( f , action , arg , argc , argv )"		11215920	1					
ANR	11216178	Argument	"tar ( f , action , arg , argc , argv )"		11215920	0					
ANR	11216179	CallExpression	"tar ( f , action , arg , argc , argv )"		11215920	0					
ANR	11216180	Callee	tar		11215920	0					
ANR	11216181	Identifier	tar		11215920	0					
ANR	11216182	ArgumentList	f		11215920	1					
ANR	11216183	Argument	f		11215920	0					
ANR	11216184	Identifier	f		11215920	0					
ANR	11216185	Argument	action		11215920	1					
ANR	11216186	Identifier	action		11215920	0					
ANR	11216187	Argument	arg		11215920	2					
ANR	11216188	Identifier	arg		11215920	0					
ANR	11216189	Argument	argc		11215920	3					
ANR	11216190	Identifier	argc		11215920	0					
ANR	11216191	Argument	argv		11215920	4					
ANR	11216192	Identifier	argv		11215920	0					
ANR	11216193	BreakStatement	break ;	666:6:16444:16449	11215920	5	True				
ANR	11216194	Label	default :	668:6:16458:16465	11215920	6	True				
ANR	11216195	Identifier	default		11215920	0					
ANR	11216196	ExpressionStatement	"error ( ""Unknown option"" )"	669:8:16475:16498	11215920	7	True				
ANR	11216197	CallExpression	"error ( ""Unknown option"" )"		11215920	0					
ANR	11216198	Callee	error		11215920	0					
ANR	11216199	Identifier	error		11215920	0					
ANR	11216200	ArgumentList	"""Unknown option"""		11215920	1					
ANR	11216201	Argument	"""Unknown option"""		11215920	0					
ANR	11216202	PrimaryExpression	"""Unknown option"""		11215920	0					
ANR	11216203	ExpressionStatement	exit ( 1 )	670:8:16508:16515	11215920	8	True				
ANR	11216204	CallExpression	exit ( 1 )		11215920	0					
ANR	11216205	Callee	exit		11215920	0					
ANR	11216206	Identifier	exit		11215920	0					
ANR	11216207	ArgumentList	1		11215920	1					
ANR	11216208	Argument	1		11215920	0					
ANR	11216209	PrimaryExpression	1		11215920	0					
ANR	11216210	ReturnStatement	return 0 ;	673:4:16530:16538	11215920	12	True				
ANR	11216211	PrimaryExpression	0		11215920	0					
ANR	11216212	ReturnType	int		11215920	1					
ANR	11216213	Identifier	main		11215920	2					
ANR	11216214	ParameterList	"int argc , char * * argv"		11215920	3					
ANR	11216215	Parameter	int argc	606:9:15236:15243	11215920	0	True				
ANR	11216216	ParameterType	int		11215920	0					
ANR	11216217	Identifier	argc		11215920	1					
ANR	11216218	Parameter	char * * argv	606:18:15245:15255	11215920	1	True				
ANR	11216219	ParameterType	char * *		11215920	0					
ANR	11216220	Identifier	argv		11215920	1					
ANR	11216221	CFGEntryNode	ENTRY		11215920		True				
ANR	11216222	CFGExitNode	EXIT		11215920		True				
ANR	11216223	Symbol	argc		11215920						
ANR	11216224	Symbol	strcmp		11215920						
ANR	11216225	Symbol	NULL		11215920						
ANR	11216226	Symbol	tar		11215920						
ANR	11216227	Symbol	f		11215920						
ANR	11216228	Symbol	TGZfname		11215920						
ANR	11216229	Symbol	* argv		11215920						
ANR	11216230	Symbol	stderr		11215920						
ANR	11216231	Symbol	argv		11215920						
ANR	11216232	Symbol	prog		11215920						
ANR	11216233	Symbol	TGZ_EXTRACT		11215920						
ANR	11216234	Symbol	gzopen		11215920						
ANR	11216235	Symbol	TGZfile		11215920						
ANR	11216236	Symbol	strrchr		11215920						
ANR	11216237	Symbol	arg		11215920						
ANR	11216238	Symbol	action		11215920						
ANR	11216239	Symbol	TGZ_LIST		11215920						
ANR	11216240	Symbol	* arg		11215920						
