command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9543308	File	data/converged/CVE-2018-16863_ghostpdl/spdiff.c								
ANR	9543309	Function	s_PDiff_set_defaults	37:0:997:1151							
ANR	9543310	FunctionDef	s_PDiff_set_defaults (stream_state * st)		9543309	0					
ANR	9543311	CompoundStatement		39:0:1049:1151	9543309	0					
ANR	9543312	Statement	stream_PDiff_state	40:4:1055:1072	9543309	0	True				
ANR	9543313	Statement	*	40:23:1074:1074	9543309	1	True				
ANR	9543314	Statement	const	40:24:1075:1079	9543309	2	True				
ANR	9543315	ExpressionStatement	ss = ( stream_PDiff_state * ) st	40:30:1081:1111	9543309	3	True				
ANR	9543316	AssignmentExpression	ss = ( stream_PDiff_state * ) st		9543309	0		=			
ANR	9543317	Identifier	ss		9543309	0					
ANR	9543318	CastExpression	( stream_PDiff_state * ) st		9543309	1					
ANR	9543319	CastTarget	stream_PDiff_state *		9543309	0					
ANR	9543320	Identifier	st		9543309	1					
ANR	9543321	ExpressionStatement	s_PDiff_set_defaults_inline ( ss )	42:4:1118:1149	9543309	4	True				
ANR	9543322	CallExpression	s_PDiff_set_defaults_inline ( ss )		9543309	0					
ANR	9543323	Callee	s_PDiff_set_defaults_inline		9543309	0					
ANR	9543324	Identifier	s_PDiff_set_defaults_inline		9543309	0					
ANR	9543325	ArgumentList	ss		9543309	1					
ANR	9543326	Argument	ss		9543309	0					
ANR	9543327	Identifier	ss		9543309	0					
ANR	9543328	ReturnType	static void		9543309	1					
ANR	9543329	Identifier	s_PDiff_set_defaults		9543309	2					
ANR	9543330	ParameterList	stream_state * st		9543309	3					
ANR	9543331	Parameter	stream_state * st	38:21:1030:1046	9543309	0	True				
ANR	9543332	ParameterType	stream_state *		9543309	0					
ANR	9543333	Identifier	st		9543309	1					
ANR	9543334	CFGEntryNode	ENTRY		9543309		True				
ANR	9543335	CFGExitNode	EXIT		9543309		True				
ANR	9543336	Symbol	ss		9543309						
ANR	9543337	Symbol	st		9543309						
ANR	9543338	Function	s_PDiff_reinit	46:0:1187:1333							
ANR	9543339	FunctionDef	s_PDiff_reinit (stream_state * st)		9543338	0					
ANR	9543340	CompoundStatement		48:0:1232:1333	9543338	0					
ANR	9543341	Statement	stream_PDiff_state	49:4:1238:1255	9543338	0	True				
ANR	9543342	Statement	*	49:23:1257:1257	9543338	1	True				
ANR	9543343	Statement	const	49:24:1258:1262	9543338	2	True				
ANR	9543344	ExpressionStatement	ss = ( stream_PDiff_state * ) st	49:30:1264:1294	9543338	3	True				
ANR	9543345	AssignmentExpression	ss = ( stream_PDiff_state * ) st		9543338	0		=			
ANR	9543346	Identifier	ss		9543338	0					
ANR	9543347	CastExpression	( stream_PDiff_state * ) st		9543338	1					
ANR	9543348	CastTarget	stream_PDiff_state *		9543338	0					
ANR	9543349	Identifier	st		9543338	1					
ANR	9543350	ExpressionStatement	ss -> row_left = 0	51:4:1301:1317	9543338	4	True				
ANR	9543351	AssignmentExpression	ss -> row_left = 0		9543338	0		=			
ANR	9543352	PtrMemberAccess	ss -> row_left		9543338	0					
ANR	9543353	Identifier	ss		9543338	0					
ANR	9543354	Identifier	row_left		9543338	1					
ANR	9543355	PrimaryExpression	0		9543338	1					
ANR	9543356	ReturnStatement	return 0 ;	52:4:1323:1331	9543338	5	True				
ANR	9543357	PrimaryExpression	0		9543338	0					
ANR	9543358	ReturnType	static int		9543338	1					
ANR	9543359	Identifier	s_PDiff_reinit		9543338	2					
ANR	9543360	ParameterList	stream_state * st		9543338	3					
ANR	9543361	Parameter	stream_state * st	47:15:1213:1229	9543338	0	True				
ANR	9543362	ParameterType	stream_state *		9543338	0					
ANR	9543363	Identifier	st		9543338	1					
ANR	9543364	CFGEntryNode	ENTRY		9543338		True				
ANR	9543365	CFGExitNode	EXIT		9543338		True				
ANR	9543366	Symbol	ss		9543338						
ANR	9543367	Symbol	st		9543338						
ANR	9543368	Symbol	* ss		9543338						
ANR	9543369	Symbol	ss -> row_left		9543338						
ANR	9543370	Function	s_PDiffE_init	56:0:1383:1952							
ANR	9543371	FunctionDef	s_PDiffE_init (stream_state * st)		9543370	0					
ANR	9543372	CompoundStatement		58:0:1427:1952	9543370	0					
ANR	9543373	Statement	stream_PDiff_state	59:4:1433:1450	9543370	0	True				
ANR	9543374	Statement	*	59:23:1452:1452	9543370	1	True				
ANR	9543375	Statement	const	59:24:1453:1457	9543370	2	True				
ANR	9543376	ExpressionStatement	ss = ( stream_PDiff_state * ) st	59:30:1459:1489	9543370	3	True				
ANR	9543377	AssignmentExpression	ss = ( stream_PDiff_state * ) st		9543370	0		=			
ANR	9543378	Identifier	ss		9543370	0					
ANR	9543379	CastExpression	( stream_PDiff_state * ) st		9543370	1					
ANR	9543380	CastTarget	stream_PDiff_state *		9543370	0					
ANR	9543381	Identifier	st		9543370	1					
ANR	9543382	IdentifierDeclStatement	int bits_per_row = ss -> Colors * ss -> BitsPerComponent * ss -> Columns ;	60:4:1495:1569	9543370	4	True				
ANR	9543383	IdentifierDecl	bits_per_row = ss -> Colors * ss -> BitsPerComponent * ss -> Columns		9543370	0					
ANR	9543384	IdentifierDeclType	int		9543370	0					
ANR	9543385	Identifier	bits_per_row		9543370	1					
ANR	9543386	AssignmentExpression	bits_per_row = ss -> Colors * ss -> BitsPerComponent * ss -> Columns		9543370	2		=			
ANR	9543387	Identifier	bits_per_row		9543370	0					
ANR	9543388	MultiplicativeExpression	ss -> Colors * ss -> BitsPerComponent * ss -> Columns		9543370	1		*			
ANR	9543389	PtrMemberAccess	ss -> Colors		9543370	0					
ANR	9543390	Identifier	ss		9543370	0					
ANR	9543391	Identifier	Colors		9543370	1					
ANR	9543392	MultiplicativeExpression	ss -> BitsPerComponent * ss -> Columns		9543370	1		*			
ANR	9543393	PtrMemberAccess	ss -> BitsPerComponent		9543370	0					
ANR	9543394	Identifier	ss		9543370	0					
ANR	9543395	Identifier	BitsPerComponent		9543370	1					
ANR	9543396	PtrMemberAccess	ss -> Columns		9543370	1					
ANR	9543397	Identifier	ss		9543370	0					
ANR	9543398	Identifier	Columns		9543370	1					
ANR	9543399	Statement	static	62:4:1575:1580	9543370	5	True				
ANR	9543400	IdentifierDeclStatement	"const byte cb_values [ ] = { 0 , cBits1 , cBits2 , 0 , cBits4 , 0 , 0 , 0 , cBits8 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , cBits16 } ;"	62:11:1582:1706	9543370	6	True				
ANR	9543401	IdentifierDecl	"cb_values [ ] = { 0 , cBits1 , cBits2 , 0 , cBits4 , 0 , 0 , 0 , cBits8 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , cBits16 }"		9543370	0					
ANR	9543402	IdentifierDeclType	const byte [ ]		9543370	0					
ANR	9543403	Identifier	cb_values		9543370	1					
ANR	9543404	AssignmentExpression	"cb_values [ ] = { 0 , cBits1 , cBits2 , 0 , cBits4 , 0 , 0 , 0 , cBits8 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , cBits16 }"		9543370	2		=			
ANR	9543405	Identifier	cb_values		9543370	0					
ANR	9543406	InitializerList	0		9543370	1					
ANR	9543407	PrimaryExpression	0		9543370	0					
ANR	9543408	Identifier	cBits1		9543370	1					
ANR	9543409	Identifier	cBits2		9543370	2					
ANR	9543410	PrimaryExpression	0		9543370	3					
ANR	9543411	Identifier	cBits4		9543370	4					
ANR	9543412	PrimaryExpression	0		9543370	5					
ANR	9543413	PrimaryExpression	0		9543370	6					
ANR	9543414	PrimaryExpression	0		9543370	7					
ANR	9543415	Identifier	cBits8		9543370	8					
ANR	9543416	PrimaryExpression	0		9543370	9					
ANR	9543417	PrimaryExpression	0		9543370	10					
ANR	9543418	PrimaryExpression	0		9543370	11					
ANR	9543419	PrimaryExpression	0		9543370	12					
ANR	9543420	PrimaryExpression	0		9543370	13					
ANR	9543421	PrimaryExpression	0		9543370	14					
ANR	9543422	PrimaryExpression	0		9543370	15					
ANR	9543423	Identifier	cBits16		9543370	16					
ANR	9543424	ExpressionStatement	ss -> row_count = ( bits_per_row + 7 ) >> 3	67:4:1713:1752	9543370	7	True				
ANR	9543425	AssignmentExpression	ss -> row_count = ( bits_per_row + 7 ) >> 3		9543370	0		=			
ANR	9543426	PtrMemberAccess	ss -> row_count		9543370	0					
ANR	9543427	Identifier	ss		9543370	0					
ANR	9543428	Identifier	row_count		9543370	1					
ANR	9543429	ShiftExpression	( bits_per_row + 7 ) >> 3		9543370	1		>>			
ANR	9543430	AdditiveExpression	bits_per_row + 7		9543370	0		+			
ANR	9543431	Identifier	bits_per_row		9543370	0					
ANR	9543432	PrimaryExpression	7		9543370	1					
ANR	9543433	PrimaryExpression	3		9543370	1					
ANR	9543434	ExpressionStatement	ss -> end_mask = ( 1 << ( - bits_per_row & 7 ) ) - 1	68:4:1758:1803	9543370	8	True				
ANR	9543435	AssignmentExpression	ss -> end_mask = ( 1 << ( - bits_per_row & 7 ) ) - 1		9543370	0		=			
ANR	9543436	PtrMemberAccess	ss -> end_mask		9543370	0					
ANR	9543437	Identifier	ss		9543370	0					
ANR	9543438	Identifier	end_mask		9543370	1					
ANR	9543439	AdditiveExpression	( 1 << ( - bits_per_row & 7 ) ) - 1		9543370	1		-			
ANR	9543440	ShiftExpression	1 << ( - bits_per_row & 7 )		9543370	0		<<			
ANR	9543441	PrimaryExpression	1		9543370	0					
ANR	9543442	BitAndExpression	- bits_per_row & 7		9543370	1		&			
ANR	9543443	UnaryOperationExpression	- bits_per_row		9543370	0					
ANR	9543444	UnaryOperator	-		9543370	0					
ANR	9543445	Identifier	bits_per_row		9543370	1					
ANR	9543446	PrimaryExpression	7		9543370	1					
ANR	9543447	PrimaryExpression	1		9543370	1					
ANR	9543448	ExpressionStatement	ss -> case_index = cb_values [ ss -> BitsPerComponent ] + ( ss -> Colors > 4 ? 0 : ss -> Colors ) + cEncode	69:4:1809:1919	9543370	9	True				
ANR	9543449	AssignmentExpression	ss -> case_index = cb_values [ ss -> BitsPerComponent ] + ( ss -> Colors > 4 ? 0 : ss -> Colors ) + cEncode		9543370	0		=			
ANR	9543450	PtrMemberAccess	ss -> case_index		9543370	0					
ANR	9543451	Identifier	ss		9543370	0					
ANR	9543452	Identifier	case_index		9543370	1					
ANR	9543453	AdditiveExpression	cb_values [ ss -> BitsPerComponent ] + ( ss -> Colors > 4 ? 0 : ss -> Colors ) + cEncode		9543370	1		+			
ANR	9543454	ArrayIndexing	cb_values [ ss -> BitsPerComponent ]		9543370	0					
ANR	9543455	Identifier	cb_values		9543370	0					
ANR	9543456	PtrMemberAccess	ss -> BitsPerComponent		9543370	1					
ANR	9543457	Identifier	ss		9543370	0					
ANR	9543458	Identifier	BitsPerComponent		9543370	1					
ANR	9543459	AdditiveExpression	( ss -> Colors > 4 ? 0 : ss -> Colors ) + cEncode		9543370	1		+			
ANR	9543460	ConditionalExpression	ss -> Colors > 4 ? 0 : ss -> Colors		9543370	0					
ANR	9543461	Condition	ss -> Colors > 4		9543370	0					
ANR	9543462	RelationalExpression	ss -> Colors > 4		9543370	0		>			
ANR	9543463	PtrMemberAccess	ss -> Colors		9543370	0					
ANR	9543464	Identifier	ss		9543370	0					
ANR	9543465	Identifier	Colors		9543370	1					
ANR	9543466	PrimaryExpression	4		9543370	1					
ANR	9543467	PrimaryExpression	0		9543370	1					
ANR	9543468	PtrMemberAccess	ss -> Colors		9543370	2					
ANR	9543469	Identifier	ss		9543370	0					
ANR	9543470	Identifier	Colors		9543370	1					
ANR	9543471	Identifier	cEncode		9543370	1					
ANR	9543472	ReturnStatement	return s_PDiff_reinit ( st ) ;	72:4:1925:1950	9543370	10	True				
ANR	9543473	CallExpression	s_PDiff_reinit ( st )		9543370	0					
ANR	9543474	Callee	s_PDiff_reinit		9543370	0					
ANR	9543475	Identifier	s_PDiff_reinit		9543370	0					
ANR	9543476	ArgumentList	st		9543370	1					
ANR	9543477	Argument	st		9543370	0					
ANR	9543478	Identifier	st		9543370	0					
ANR	9543479	ReturnType	static int		9543370	1					
ANR	9543480	Identifier	s_PDiffE_init		9543370	2					
ANR	9543481	ParameterList	stream_state * st		9543370	3					
ANR	9543482	Parameter	stream_state * st	57:14:1408:1424	9543370	0	True				
ANR	9543483	ParameterType	stream_state *		9543370	0					
ANR	9543484	Identifier	st		9543370	1					
ANR	9543485	CFGEntryNode	ENTRY		9543370		True				
ANR	9543486	CFGExitNode	EXIT		9543370		True				
ANR	9543487	Symbol	ss		9543370						
ANR	9543488	Symbol	st		9543370						
ANR	9543489	Symbol	s_PDiff_reinit		9543370						
ANR	9543490	Symbol	* ss		9543370						
ANR	9543491	Symbol	ss -> BitsPerComponent		9543370						
ANR	9543492	Symbol	cBits4		9543370						
ANR	9543493	Symbol	cBits16		9543370						
ANR	9543494	Symbol	cBits2		9543370						
ANR	9543495	Symbol	cBits1		9543370						
ANR	9543496	Symbol	ss -> Colors		9543370						
ANR	9543497	Symbol	cBits8		9543370						
ANR	9543498	Symbol	ss -> end_mask		9543370						
ANR	9543499	Symbol	ss -> case_index		9543370						
ANR	9543500	Symbol	* * ss		9543370						
ANR	9543501	Symbol	* ss -> BitsPerComponent		9543370						
ANR	9543502	Symbol	bits_per_row		9543370						
ANR	9543503	Symbol	ss -> row_count		9543370						
ANR	9543504	Symbol	ss -> Columns		9543370						
ANR	9543505	Symbol	cb_values		9543370						
ANR	9543506	Symbol	cEncode		9543370						
ANR	9543507	Symbol	* cb_values		9543370						
ANR	9543508	Function	s_PDiffD_init	76:0:2002:2189							
ANR	9543509	FunctionDef	s_PDiffD_init (stream_state * st)		9543508	0					
ANR	9543510	CompoundStatement		78:0:2046:2189	9543508	0					
ANR	9543511	Statement	stream_PDiff_state	79:4:2052:2069	9543508	0	True				
ANR	9543512	Statement	*	79:23:2071:2071	9543508	1	True				
ANR	9543513	Statement	const	79:24:2072:2076	9543508	2	True				
ANR	9543514	ExpressionStatement	ss = ( stream_PDiff_state * ) st	79:30:2078:2108	9543508	3	True				
ANR	9543515	AssignmentExpression	ss = ( stream_PDiff_state * ) st		9543508	0		=			
ANR	9543516	Identifier	ss		9543508	0					
ANR	9543517	CastExpression	( stream_PDiff_state * ) st		9543508	1					
ANR	9543518	CastTarget	stream_PDiff_state *		9543508	0					
ANR	9543519	Identifier	st		9543508	1					
ANR	9543520	ExpressionStatement	s_PDiffE_init ( st )	81:4:2115:2132	9543508	4	True				
ANR	9543521	CallExpression	s_PDiffE_init ( st )		9543508	0					
ANR	9543522	Callee	s_PDiffE_init		9543508	0					
ANR	9543523	Identifier	s_PDiffE_init		9543508	0					
ANR	9543524	ArgumentList	st		9543508	1					
ANR	9543525	Argument	st		9543508	0					
ANR	9543526	Identifier	st		9543508	0					
ANR	9543527	ExpressionStatement	ss -> case_index += cDecode - cEncode	82:4:2138:2173	9543508	5	True				
ANR	9543528	AssignmentExpression	ss -> case_index += cDecode - cEncode		9543508	0		+=			
ANR	9543529	PtrMemberAccess	ss -> case_index		9543508	0					
ANR	9543530	Identifier	ss		9543508	0					
ANR	9543531	Identifier	case_index		9543508	1					
ANR	9543532	AdditiveExpression	cDecode - cEncode		9543508	1		-			
ANR	9543533	Identifier	cDecode		9543508	0					
ANR	9543534	Identifier	cEncode		9543508	1					
ANR	9543535	ReturnStatement	return 0 ;	83:4:2179:2187	9543508	6	True				
ANR	9543536	PrimaryExpression	0		9543508	0					
ANR	9543537	ReturnType	static int		9543508	1					
ANR	9543538	Identifier	s_PDiffD_init		9543508	2					
ANR	9543539	ParameterList	stream_state * st		9543508	3					
ANR	9543540	Parameter	stream_state * st	77:14:2027:2043	9543508	0	True				
ANR	9543541	ParameterType	stream_state *		9543508	0					
ANR	9543542	Identifier	st		9543508	1					
ANR	9543543	CFGEntryNode	ENTRY		9543508		True				
ANR	9543544	CFGExitNode	EXIT		9543508		True				
ANR	9543545	Symbol	ss		9543508						
ANR	9543546	Symbol	st		9543508						
ANR	9543547	Symbol	cDecode		9543508						
ANR	9543548	Symbol	* ss		9543508						
ANR	9543549	Symbol	ss -> case_index		9543508						
ANR	9543550	Symbol	cEncode		9543508						
ANR	9543551	Function	s_PDiff_process	87:0:2264:17311							
ANR	9543552	FunctionDef	"s_PDiff_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		9543551	0					
ANR	9543553	CompoundStatement		90:0:2388:17311	9543551	0					
ANR	9543554	Statement	stream_PDiff_state	91:4:2394:2411	9543551	0	True				
ANR	9543555	Statement	*	91:23:2413:2413	9543551	1	True				
ANR	9543556	Statement	const	91:24:2414:2418	9543551	2	True				
ANR	9543557	ExpressionStatement	ss = ( stream_PDiff_state * ) st	91:30:2420:2450	9543551	3	True				
ANR	9543558	AssignmentExpression	ss = ( stream_PDiff_state * ) st		9543551	0		=			
ANR	9543559	Identifier	ss		9543551	0					
ANR	9543560	CastExpression	( stream_PDiff_state * ) st		9543551	1					
ANR	9543561	CastTarget	stream_PDiff_state *		9543551	0					
ANR	9543562	Identifier	st		9543551	1					
ANR	9543563	IdentifierDeclStatement	const byte * p = pr -> ptr ;	92:4:2456:2479	9543551	4	True				
ANR	9543564	IdentifierDecl	* p = pr -> ptr		9543551	0					
ANR	9543565	IdentifierDeclType	const byte *		9543551	0					
ANR	9543566	Identifier	p		9543551	1					
ANR	9543567	AssignmentExpression	* p = pr -> ptr		9543551	2		=			
ANR	9543568	Identifier	p		9543551	0					
ANR	9543569	PtrMemberAccess	pr -> ptr		9543551	1					
ANR	9543570	Identifier	pr		9543551	0					
ANR	9543571	Identifier	ptr		9543551	1					
ANR	9543572	IdentifierDeclStatement	byte * q = pw -> ptr ;	93:4:2485:2502	9543551	5	True				
ANR	9543573	IdentifierDecl	* q = pw -> ptr		9543551	0					
ANR	9543574	IdentifierDeclType	byte *		9543551	0					
ANR	9543575	Identifier	q		9543551	1					
ANR	9543576	AssignmentExpression	* q = pw -> ptr		9543551	2		=			
ANR	9543577	Identifier	q		9543551	0					
ANR	9543578	PtrMemberAccess	pw -> ptr		9543551	1					
ANR	9543579	Identifier	pw		9543551	0					
ANR	9543580	Identifier	ptr		9543551	1					
ANR	9543581	IdentifierDeclStatement	int count ;	94:4:2508:2517	9543551	6	True				
ANR	9543582	IdentifierDecl	count		9543551	0					
ANR	9543583	IdentifierDeclType	int		9543551	0					
ANR	9543584	Identifier	count		9543551	1					
ANR	9543585	IdentifierDeclStatement	int status = 0 ;	95:4:2523:2537	9543551	7	True				
ANR	9543586	IdentifierDecl	status = 0		9543551	0					
ANR	9543587	IdentifierDeclType	int		9543551	0					
ANR	9543588	Identifier	status		9543551	1					
ANR	9543589	AssignmentExpression	status = 0		9543551	2		=			
ANR	9543590	Identifier	status		9543551	0					
ANR	9543591	PrimaryExpression	0		9543551	1					
ANR	9543592	IdentifierDeclStatement	uint s0 = ss -> prev [ 0 ] ;	96:4:2543:2564	9543551	8	True				
ANR	9543593	IdentifierDecl	s0 = ss -> prev [ 0 ]		9543551	0					
ANR	9543594	IdentifierDeclType	uint		9543551	0					
ANR	9543595	Identifier	s0		9543551	1					
ANR	9543596	AssignmentExpression	s0 = ss -> prev [ 0 ]		9543551	2		=			
ANR	9543597	Identifier	s0		9543551	0					
ANR	9543598	ArrayIndexing	ss -> prev [ 0 ]		9543551	1					
ANR	9543599	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9543600	Identifier	ss		9543551	0					
ANR	9543601	Identifier	prev		9543551	1					
ANR	9543602	PrimaryExpression	0		9543551	1					
ANR	9543603	IdentifierDeclStatement	byte t = 0 ;	97:4:2570:2580	9543551	9	True				
ANR	9543604	IdentifierDecl	t = 0		9543551	0					
ANR	9543605	IdentifierDeclType	byte		9543551	0					
ANR	9543606	Identifier	t		9543551	1					
ANR	9543607	AssignmentExpression	t = 0		9543551	2		=			
ANR	9543608	Identifier	t		9543551	0					
ANR	9543609	PrimaryExpression	0		9543551	1					
ANR	9543610	IdentifierDeclStatement	int ti ;	98:4:2627:2634	9543551	10	True				
ANR	9543611	IdentifierDecl	ti		9543551	0					
ANR	9543612	IdentifierDeclType	int		9543551	0					
ANR	9543613	Identifier	ti		9543551	1					
ANR	9543614	IdentifierDeclStatement	const byte end_mask = ss -> end_mask ;	99:4:2640:2674	9543551	11	True				
ANR	9543615	IdentifierDecl	end_mask = ss -> end_mask		9543551	0					
ANR	9543616	IdentifierDeclType	const byte		9543551	0					
ANR	9543617	Identifier	end_mask		9543551	1					
ANR	9543618	AssignmentExpression	end_mask = ss -> end_mask		9543551	2		=			
ANR	9543619	Identifier	end_mask		9543551	0					
ANR	9543620	PtrMemberAccess	ss -> end_mask		9543551	1					
ANR	9543621	Identifier	ss		9543551	0					
ANR	9543622	Identifier	end_mask		9543551	1					
ANR	9543623	IdentifierDeclStatement	int colors = ss -> Colors ;	100:4:2680:2703	9543551	12	True				
ANR	9543624	IdentifierDecl	colors = ss -> Colors		9543551	0					
ANR	9543625	IdentifierDeclType	int		9543551	0					
ANR	9543626	Identifier	colors		9543551	1					
ANR	9543627	AssignmentExpression	colors = ss -> Colors		9543551	2		=			
ANR	9543628	Identifier	colors		9543551	0					
ANR	9543629	PtrMemberAccess	ss -> Colors		9543551	1					
ANR	9543630	Identifier	ss		9543551	0					
ANR	9543631	Identifier	Colors		9543551	1					
ANR	9543632	IdentifierDeclStatement	int nb = ( colors * ss -> BitsPerComponent ) >> 3 ;	101:4:2709:2754	9543551	13	True				
ANR	9543633	IdentifierDecl	nb = ( colors * ss -> BitsPerComponent ) >> 3		9543551	0					
ANR	9543634	IdentifierDeclType	int		9543551	0					
ANR	9543635	Identifier	nb		9543551	1					
ANR	9543636	AssignmentExpression	nb = ( colors * ss -> BitsPerComponent ) >> 3		9543551	2		=			
ANR	9543637	Identifier	nb		9543551	0					
ANR	9543638	ShiftExpression	( colors * ss -> BitsPerComponent ) >> 3		9543551	1		>>			
ANR	9543639	MultiplicativeExpression	colors * ss -> BitsPerComponent		9543551	0		*			
ANR	9543640	Identifier	colors		9543551	0					
ANR	9543641	PtrMemberAccess	ss -> BitsPerComponent		9543551	1					
ANR	9543642	Identifier	ss		9543551	0					
ANR	9543643	Identifier	BitsPerComponent		9543551	1					
ANR	9543644	PrimaryExpression	3		9543551	1					
ANR	9543645	IdentifierDeclStatement	int final ;	102:4:2760:2769	9543551	14	True				
ANR	9543646	IdentifierDecl	final		9543551	0					
ANR	9543647	IdentifierDeclType	int		9543551	0					
ANR	9543648	Identifier	final		9543551	1					
ANR	9543649	IdentifierDeclStatement	"int ndone , ci ;"	103:4:2775:2788	9543551	15	True				
ANR	9543650	IdentifierDecl	ndone		9543551	0					
ANR	9543651	IdentifierDeclType	int		9543551	0					
ANR	9543652	Identifier	ndone		9543551	1					
ANR	9543653	IdentifierDecl	ci		9543551	1					
ANR	9543654	IdentifierDeclType	int		9543551	0					
ANR	9543655	Identifier	ci		9543551	1					
ANR	9543656	Label	row :	105:0:2791:2794	9543551	16	True				
ANR	9543657	Identifier	row		9543551	0					
ANR	9543658	IfStatement	if ( ss -> row_left == 0 )		9543551	17					
ANR	9543659	Condition	ss -> row_left == 0	106:8:2804:2820	9543551	0	True				
ANR	9543660	EqualityExpression	ss -> row_left == 0		9543551	0		==			
ANR	9543661	PtrMemberAccess	ss -> row_left		9543551	0					
ANR	9543662	Identifier	ss		9543551	0					
ANR	9543663	Identifier	row_left		9543551	1					
ANR	9543664	PrimaryExpression	0		9543551	1					
ANR	9543665	CompoundStatement		17:27:434:434	9543551	1					
ANR	9543666	ExpressionStatement	ss -> row_left = ss -> row_count	107:8:2833:2861	9543551	0	True				
ANR	9543667	AssignmentExpression	ss -> row_left = ss -> row_count		9543551	0		=			
ANR	9543668	PtrMemberAccess	ss -> row_left		9543551	0					
ANR	9543669	Identifier	ss		9543551	0					
ANR	9543670	Identifier	row_left		9543551	1					
ANR	9543671	PtrMemberAccess	ss -> row_count		9543551	1					
ANR	9543672	Identifier	ss		9543551	0					
ANR	9543673	Identifier	row_count		9543551	1					
ANR	9543674	ExpressionStatement	s0 = 0	108:8:2871:2877	9543551	1	True				
ANR	9543675	AssignmentExpression	s0 = 0		9543551	0		=			
ANR	9543676	Identifier	s0		9543551	0					
ANR	9543677	PrimaryExpression	0		9543551	1					
ANR	9543678	ExpressionStatement	"memset ( & ss -> prev [ 1 ] , 0 , sizeof ( uint ) * ( s_PDiff_max_Colors - 1 ) )"	109:8:2887:2951	9543551	2	True				
ANR	9543679	CallExpression	"memset ( & ss -> prev [ 1 ] , 0 , sizeof ( uint ) * ( s_PDiff_max_Colors - 1 ) )"		9543551	0					
ANR	9543680	Callee	memset		9543551	0					
ANR	9543681	Identifier	memset		9543551	0					
ANR	9543682	ArgumentList	& ss -> prev [ 1 ]		9543551	1					
ANR	9543683	Argument	& ss -> prev [ 1 ]		9543551	0					
ANR	9543684	UnaryOperationExpression	& ss -> prev [ 1 ]		9543551	0					
ANR	9543685	UnaryOperator	&		9543551	0					
ANR	9543686	ArrayIndexing	ss -> prev [ 1 ]		9543551	1					
ANR	9543687	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9543688	Identifier	ss		9543551	0					
ANR	9543689	Identifier	prev		9543551	1					
ANR	9543690	PrimaryExpression	1		9543551	1					
ANR	9543691	Argument	0		9543551	1					
ANR	9543692	PrimaryExpression	0		9543551	0					
ANR	9543693	Argument	sizeof ( uint ) * ( s_PDiff_max_Colors - 1 )		9543551	2					
ANR	9543694	MultiplicativeExpression	sizeof ( uint ) * ( s_PDiff_max_Colors - 1 )		9543551	0		*			
ANR	9543695	SizeofExpression	sizeof ( uint )		9543551	0					
ANR	9543696	Sizeof	sizeof		9543551	0					
ANR	9543697	SizeofOperand	uint		9543551	1					
ANR	9543698	AdditiveExpression	s_PDiff_max_Colors - 1		9543551	1		-			
ANR	9543699	Identifier	s_PDiff_max_Colors		9543551	0					
ANR	9543700	PrimaryExpression	1		9543551	1					
ANR	9543701	CompoundStatement		24:8:620:646	9543551	18					
ANR	9543702	IdentifierDeclStatement	int rcount = pr -> limit - p ;	112:8:2973:2999	9543551	0	True				
ANR	9543703	IdentifierDecl	rcount = pr -> limit - p		9543551	0					
ANR	9543704	IdentifierDeclType	int		9543551	0					
ANR	9543705	Identifier	rcount		9543551	1					
ANR	9543706	AssignmentExpression	rcount = pr -> limit - p		9543551	2		=			
ANR	9543707	Identifier	rcount		9543551	0					
ANR	9543708	AdditiveExpression	pr -> limit - p		9543551	1		-			
ANR	9543709	PtrMemberAccess	pr -> limit		9543551	0					
ANR	9543710	Identifier	pr		9543551	0					
ANR	9543711	Identifier	limit		9543551	1					
ANR	9543712	Identifier	p		9543551	1					
ANR	9543713	IdentifierDeclStatement	int wcount = pw -> limit - q ;	113:8:3009:3035	9543551	1	True				
ANR	9543714	IdentifierDecl	wcount = pw -> limit - q		9543551	0					
ANR	9543715	IdentifierDeclType	int		9543551	0					
ANR	9543716	Identifier	wcount		9543551	1					
ANR	9543717	AssignmentExpression	wcount = pw -> limit - q		9543551	2		=			
ANR	9543718	Identifier	wcount		9543551	0					
ANR	9543719	AdditiveExpression	pw -> limit - q		9543551	1		-			
ANR	9543720	PtrMemberAccess	pw -> limit		9543551	0					
ANR	9543721	Identifier	pw		9543551	0					
ANR	9543722	Identifier	limit		9543551	1					
ANR	9543723	Identifier	q		9543551	1					
ANR	9543724	IfStatement	if ( ss -> row_left < rcount )		9543551	2					
ANR	9543725	Condition	ss -> row_left < rcount	115:12:3050:3070	9543551	0	True				
ANR	9543726	RelationalExpression	ss -> row_left < rcount		9543551	0		<			
ANR	9543727	PtrMemberAccess	ss -> row_left		9543551	0					
ANR	9543728	Identifier	ss		9543551	0					
ANR	9543729	Identifier	row_left		9543551	1					
ANR	9543730	Identifier	rcount		9543551	1					
ANR	9543731	ExpressionStatement	rcount = ss -> row_left	116:12:3085:3106	9543551	1	True				
ANR	9543732	AssignmentExpression	rcount = ss -> row_left		9543551	0		=			
ANR	9543733	Identifier	rcount		9543551	0					
ANR	9543734	PtrMemberAccess	ss -> row_left		9543551	1					
ANR	9543735	Identifier	ss		9543551	0					
ANR	9543736	Identifier	row_left		9543551	1					
ANR	9543737	ExpressionStatement	"count = ( wcount < rcount ? ( status = 1 , wcount ) : rcount )"	117:8:3116:3173	9543551	3	True				
ANR	9543738	AssignmentExpression	"count = ( wcount < rcount ? ( status = 1 , wcount ) : rcount )"		9543551	0		=			
ANR	9543739	Identifier	count		9543551	0					
ANR	9543740	ConditionalExpression	"wcount < rcount ? ( status = 1 , wcount ) : rcount"		9543551	1					
ANR	9543741	Condition	wcount < rcount		9543551	0					
ANR	9543742	RelationalExpression	wcount < rcount		9543551	0		<			
ANR	9543743	Identifier	wcount		9543551	0					
ANR	9543744	Identifier	rcount		9543551	1					
ANR	9543745	Expression	"status = 1 , wcount"		9543551	1					
ANR	9543746	AssignmentExpression	status = 1		9543551	0		=			
ANR	9543747	Identifier	status		9543551	0					
ANR	9543748	PrimaryExpression	1		9543551	1					
ANR	9543749	Identifier	wcount		9543551	1					
ANR	9543750	Identifier	rcount		9543551	2					
ANR	9543751	ExpressionStatement	final = ( last && ! status ? 1 : nb )	119:4:3185:3219	9543551	19	True				
ANR	9543752	AssignmentExpression	final = ( last && ! status ? 1 : nb )		9543551	0		=			
ANR	9543753	Identifier	final		9543551	0					
ANR	9543754	ConditionalExpression	last && ! status ? 1 : nb		9543551	1					
ANR	9543755	Condition	last && ! status		9543551	0					
ANR	9543756	AndExpression	last && ! status		9543551	0		&&			
ANR	9543757	Identifier	last		9543551	0					
ANR	9543758	UnaryOperationExpression	! status		9543551	1					
ANR	9543759	UnaryOperator	!		9543551	0					
ANR	9543760	Identifier	status		9543551	1					
ANR	9543761	PrimaryExpression	1		9543551	1					
ANR	9543762	Identifier	nb		9543551	2					
ANR	9543763	ExpressionStatement	ss -> row_left -= count	120:4:3225:3246	9543551	20	True				
ANR	9543764	AssignmentExpression	ss -> row_left -= count		9543551	0		-=			
ANR	9543765	PtrMemberAccess	ss -> row_left		9543551	0					
ANR	9543766	Identifier	ss		9543551	0					
ANR	9543767	Identifier	row_left		9543551	1					
ANR	9543768	Identifier	count		9543551	1					
ANR	9543769	Statement	define	134:1:3736:3741	9543551	21	True				
ANR	9543770	Statement	LOOP_BY	134:8:3743:3749	9543551	22	True				
ANR	9543771	Statement	(	134:15:3750:3750	9543551	23	True				
ANR	9543772	Statement	n	134:16:3751:3751	9543551	24	True				
ANR	9543773	Statement	","	134:17:3752:3752	9543551	25	True				
ANR	9543774	Statement	body	134:19:3754:3757	9543551	26	True				
ANR	9543775	Statement	)	134:23:3758:3758	9543551	27	True				
ANR	9543776	ForStatement	for ( ; count >= n ; count -= n )		9543551	28					
ANR	9543777	Condition	count >= n	135:9:3770:3779	9543551	0	True				
ANR	9543778	RelationalExpression	count >= n		9543551	0		>=			
ANR	9543779	Identifier	count		9543551	0					
ANR	9543780	Identifier	n		9543551	1					
ANR	9543781	AssignmentExpression	count -= n	135:21:3782:3791	9543551	1	True	-=			
ANR	9543782	Identifier	count		9543551	0					
ANR	9543783	Identifier	n		9543551	1					
ANR	9543784	Statement	p	135:33:3794:3794	9543551	2	True				
ANR	9543785	Statement	+=	135:35:3796:3797	9543551	29	True				
ANR	9543786	Statement	n	135:38:3799:3799	9543551	30	True				
ANR	9543787	Statement	","	135:39:3800:3800	9543551	31	True				
ANR	9543788	Statement	q	135:41:3802:3802	9543551	32	True				
ANR	9543789	Statement	+=	135:43:3804:3805	9543551	33	True				
ANR	9543790	Statement	n	135:46:3807:3807	9543551	34	True				
ANR	9543791	Statement	","	135:47:3808:3808	9543551	35	True				
ANR	9543792	Statement	body	135:49:3810:3813	9543551	36	True				
ANR	9543793	SwitchStatement	switch ( ss -> case_index )		9543551	37					
ANR	9543794	Condition	ss -> case_index	137:12:3828:3841	9543551	0	True				
ANR	9543795	PtrMemberAccess	ss -> case_index		9543551	0					
ANR	9543796	Identifier	ss		9543551	0					
ANR	9543797	Identifier	case_index		9543551	1					
ANR	9543798	CompoundStatement		48:28:1455:1455	9543551	1					
ANR	9543799	Statement	define	141:1:3887:3892	9543551	0	True				
ANR	9543800	Statement	ENCODE1_LOOP	141:8:3894:3905	9543551	1	True				
ANR	9543801	ExpressionStatement	"( ee ) LOOP_BY ( 1 , ( t = * p , * q = ee , s0 = t ) )"	141:20:3906:3951	9543551	2	True				
ANR	9543802	CastExpression	"( ee ) LOOP_BY ( 1 , ( t = * p , * q = ee , s0 = t ) )"		9543551	0					
ANR	9543803	CastTarget	ee		9543551	0					
ANR	9543804	CallExpression	"LOOP_BY ( 1 , ( t = * p , * q = ee , s0 = t ) )"		9543551	1					
ANR	9543805	Callee	LOOP_BY		9543551	0					
ANR	9543806	Identifier	LOOP_BY		9543551	0					
ANR	9543807	ArgumentList	1		9543551	1					
ANR	9543808	Argument	1		9543551	0					
ANR	9543809	PrimaryExpression	1		9543551	0					
ANR	9543810	Argument	"t = * p , * q = ee , s0 = t"		9543551	1					
ANR	9543811	Expression	"t = * p , * q = ee , s0 = t"		9543551	0					
ANR	9543812	AssignmentExpression	t = * p		9543551	0		=			
ANR	9543813	Identifier	t		9543551	0					
ANR	9543814	UnaryOperationExpression	* p		9543551	1					
ANR	9543815	UnaryOperator	*		9543551	0					
ANR	9543816	Identifier	p		9543551	1					
ANR	9543817	Expression	"* q = ee , s0 = t"		9543551	1					
ANR	9543818	AssignmentExpression	* q = ee		9543551	0		=			
ANR	9543819	UnaryOperationExpression	* q		9543551	0					
ANR	9543820	UnaryOperator	*		9543551	0					
ANR	9543821	Identifier	q		9543551	1					
ANR	9543822	Identifier	ee		9543551	1					
ANR	9543823	AssignmentExpression	s0 = t		9543551	1		=			
ANR	9543824	Identifier	s0		9543551	0					
ANR	9543825	Identifier	t		9543551	1					
ANR	9543826	Statement	break	142:41:3953:3957	9543551	3	True				
ANR	9543827	Statement	define	144:1:3961:3966	9543551	4	True				
ANR	9543828	Statement	ENCODE_ALIGNED_LOOP	144:8:3968:3986	9543551	5	True				
ANR	9543829	Statement	(	144:27:3987:3987	9543551	6	True				
ANR	9543830	Statement	ee	144:28:3988:3989	9543551	7	True				
ANR	9543831	Statement	)	144:30:3990:3990	9543551	8	True				
ANR	9543832	Statement	BEGIN	145:2:3995:3999	9543551	9	True				
ANR	9543833	ExpressionStatement	ss -> prev [ 0 ] = s0	146:4:4006:4022	9543551	10	True				
ANR	9543834	AssignmentExpression	ss -> prev [ 0 ] = s0		9543551	0		=			
ANR	9543835	ArrayIndexing	ss -> prev [ 0 ]		9543551	0					
ANR	9543836	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9543837	Identifier	ss		9543551	0					
ANR	9543838	Identifier	prev		9543551	1					
ANR	9543839	PrimaryExpression	0		9543551	1					
ANR	9543840	Identifier	s0		9543551	1					
ANR	9543841	ForStatement	for ( ; count >= final ; count -= ndone )		9543551	11					
ANR	9543842	Condition	count >= final	147:11:4036:4049	9543551	0	True				
ANR	9543843	RelationalExpression	count >= final		9543551	0		>=			
ANR	9543844	Identifier	count		9543551	0					
ANR	9543845	Identifier	final		9543551	1					
ANR	9543846	AssignmentExpression	count -= ndone	147:27:4052:4065	9543551	1	True	-=			
ANR	9543847	Identifier	count		9543551	0					
ANR	9543848	Identifier	ndone		9543551	1					
ANR	9543849	CompoundStatement		58:43:1679:1679	9543551	2					
ANR	9543850	ExpressionStatement	"ndone = min ( count , nb )"	148:8:4079:4101	9543551	0	True				
ANR	9543851	AssignmentExpression	"ndone = min ( count , nb )"		9543551	0		=			
ANR	9543852	Identifier	ndone		9543551	0					
ANR	9543853	CallExpression	"min ( count , nb )"		9543551	1					
ANR	9543854	Callee	min		9543551	0					
ANR	9543855	Identifier	min		9543551	0					
ANR	9543856	ArgumentList	count		9543551	1					
ANR	9543857	Argument	count		9543551	0					
ANR	9543858	Identifier	count		9543551	0					
ANR	9543859	Argument	nb		9543551	1					
ANR	9543860	Identifier	nb		9543551	0					
ANR	9543861	ForStatement	for ( ci = 0 ; ci < ndone ; ++ ci )		9543551	1					
ANR	9543862	ForInit	ci = 0 ;	149:13:4117:4123	9543551	0	True				
ANR	9543863	AssignmentExpression	ci = 0		9543551	0		=			
ANR	9543864	Identifier	ci		9543551	0					
ANR	9543865	PrimaryExpression	0		9543551	1					
ANR	9543866	Condition	ci < ndone	149:21:4125:4134	9543551	1	True				
ANR	9543867	RelationalExpression	ci < ndone		9543551	0		<			
ANR	9543868	Identifier	ci		9543551	0					
ANR	9543869	Identifier	ndone		9543551	1					
ANR	9543870	UnaryExpression	++ ci	149:33:4137:4140	9543551	2	True				
ANR	9543871	IncDec	++		9543551	0					
ANR	9543872	Identifier	ci		9543551	1					
ANR	9543873	ExpressionStatement	"t = * ++ p , * ++ q = ee , ss -> prev [ ci ] = t"	150:12:4156:4193	9543551	3	True				
ANR	9543874	Expression	"t = * ++ p , * ++ q = ee , ss -> prev [ ci ] = t"		9543551	0					
ANR	9543875	AssignmentExpression	t = * ++ p		9543551	0		=			
ANR	9543876	Identifier	t		9543551	0					
ANR	9543877	UnaryOperationExpression	* ++ p		9543551	1					
ANR	9543878	UnaryOperator	*		9543551	0					
ANR	9543879	UnaryExpression	++ p		9543551	1					
ANR	9543880	IncDec	++		9543551	0					
ANR	9543881	Identifier	p		9543551	1					
ANR	9543882	Expression	"* ++ q = ee , ss -> prev [ ci ] = t"		9543551	1					
ANR	9543883	AssignmentExpression	* ++ q = ee		9543551	0		=			
ANR	9543884	UnaryOperationExpression	* ++ q		9543551	0					
ANR	9543885	UnaryOperator	*		9543551	0					
ANR	9543886	UnaryExpression	++ q		9543551	1					
ANR	9543887	IncDec	++		9543551	0					
ANR	9543888	Identifier	q		9543551	1					
ANR	9543889	Identifier	ee		9543551	1					
ANR	9543890	AssignmentExpression	ss -> prev [ ci ] = t		9543551	1		=			
ANR	9543891	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9543892	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9543893	Identifier	ss		9543551	0					
ANR	9543894	Identifier	prev		9543551	1					
ANR	9543895	Identifier	ci		9543551	1					
ANR	9543896	Identifier	t		9543551	1					
ANR	9543897	ExpressionStatement	s0 = ss -> prev [ 0 ]	152:4:4207:4223	9543551	12	True				
ANR	9543898	AssignmentExpression	s0 = ss -> prev [ 0 ]		9543551	0		=			
ANR	9543899	Identifier	s0		9543551	0					
ANR	9543900	ArrayIndexing	ss -> prev [ 0 ]		9543551	1					
ANR	9543901	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9543902	Identifier	ss		9543551	0					
ANR	9543903	Identifier	prev		9543551	1					
ANR	9543904	PrimaryExpression	0		9543551	1					
ANR	9543905	Statement	END	153:2:4228:4230	9543551	13	True				
ANR	9543906	Statement	define	155:1:4234:4239	9543551	14	True				
ANR	9543907	Statement	ENCODE_UNALIGNED_LOOP	155:8:4241:4261	9543551	15	True				
ANR	9543908	Statement	(	155:29:4262:4262	9543551	16	True				
ANR	9543909	Statement	shift	155:30:4263:4267	9543551	17	True				
ANR	9543910	Statement	","	155:35:4268:4268	9543551	18	True				
ANR	9543911	Statement	cshift	155:37:4270:4275	9543551	19	True				
ANR	9543912	Statement	","	155:43:4276:4276	9543551	20	True				
ANR	9543913	Statement	de	155:45:4278:4279	9543551	21	True				
ANR	9543914	Statement	)	155:47:4280:4280	9543551	22	True				
ANR	9543915	Statement	BEGIN	156:2:4285:4289	9543551	23	True				
ANR	9543916	ForStatement	for ( ; count >= final ; count -= ndone )		9543551	24					
ANR	9543917	Condition	count >= final	157:11:4303:4316	9543551	0	True				
ANR	9543918	RelationalExpression	count >= final		9543551	0		>=			
ANR	9543919	Identifier	count		9543551	0					
ANR	9543920	Identifier	final		9543551	1					
ANR	9543921	AssignmentExpression	count -= ndone	157:27:4319:4332	9543551	1	True	-=			
ANR	9543922	Identifier	count		9543551	0					
ANR	9543923	Identifier	ndone		9543551	1					
ANR	9543924	CompoundStatement		68:43:1946:1946	9543551	2					
ANR	9543925	ExpressionStatement	"ndone = min ( count , nb )"	158:8:4346:4368	9543551	0	True				
ANR	9543926	AssignmentExpression	"ndone = min ( count , nb )"		9543551	0		=			
ANR	9543927	Identifier	ndone		9543551	0					
ANR	9543928	CallExpression	"min ( count , nb )"		9543551	1					
ANR	9543929	Callee	min		9543551	0					
ANR	9543930	Identifier	min		9543551	0					
ANR	9543931	ArgumentList	count		9543551	1					
ANR	9543932	Argument	count		9543551	0					
ANR	9543933	Identifier	count		9543551	0					
ANR	9543934	Argument	nb		9543551	1					
ANR	9543935	Identifier	nb		9543551	0					
ANR	9543936	ForStatement	for ( ci = 1 ; ci <= ndone ; ++ ci )		9543551	1					
ANR	9543937	ForInit	ci = 1 ;	159:13:4384:4390	9543551	0	True				
ANR	9543938	AssignmentExpression	ci = 1		9543551	0		=			
ANR	9543939	Identifier	ci		9543551	0					
ANR	9543940	PrimaryExpression	1		9543551	1					
ANR	9543941	Condition	ci <= ndone	159:21:4392:4402	9543551	1	True				
ANR	9543942	RelationalExpression	ci <= ndone		9543551	0		<=			
ANR	9543943	Identifier	ci		9543551	0					
ANR	9543944	Identifier	ndone		9543551	1					
ANR	9543945	UnaryExpression	++ ci	159:34:4405:4408	9543551	2	True				
ANR	9543946	IncDec	++		9543551	0					
ANR	9543947	Identifier	ci		9543551	1					
ANR	9543948	CompoundStatement		70:40:2022:2022	9543551	3					
ANR	9543949	ExpressionStatement	++ p	160:12:4426:4429	9543551	0	True				
ANR	9543950	UnaryExpression	++ p		9543551	0					
ANR	9543951	IncDec	++		9543551	0					
ANR	9543952	Identifier	p		9543551	1					
ANR	9543953	ExpressionStatement	t = ( s0 << ( cshift ) ) | ( ss -> prev [ ci ] >> ( shift ) )	161:12:4444:4492	9543551	1	True				
ANR	9543954	AssignmentExpression	t = ( s0 << ( cshift ) ) | ( ss -> prev [ ci ] >> ( shift ) )		9543551	0		=			
ANR	9543955	Identifier	t		9543551	0					
ANR	9543956	InclusiveOrExpression	( s0 << ( cshift ) ) | ( ss -> prev [ ci ] >> ( shift ) )		9543551	1		|			
ANR	9543957	ShiftExpression	s0 << ( cshift )		9543551	0		<<			
ANR	9543958	Identifier	s0		9543551	0					
ANR	9543959	Identifier	cshift		9543551	1					
ANR	9543960	ShiftExpression	ss -> prev [ ci ] >> ( shift )		9543551	1		>>			
ANR	9543961	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9543962	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9543963	Identifier	ss		9543551	0					
ANR	9543964	Identifier	prev		9543551	1					
ANR	9543965	Identifier	ci		9543551	1					
ANR	9543966	Identifier	shift		9543551	1					
ANR	9543967	ExpressionStatement	* ++ q = de	162:12:4507:4516	9543551	2	True				
ANR	9543968	AssignmentExpression	* ++ q = de		9543551	0		=			
ANR	9543969	UnaryOperationExpression	* ++ q		9543551	0					
ANR	9543970	UnaryOperator	*		9543551	0					
ANR	9543971	UnaryExpression	++ q		9543551	1					
ANR	9543972	IncDec	++		9543551	0					
ANR	9543973	Identifier	q		9543551	1					
ANR	9543974	Identifier	de		9543551	1					
ANR	9543975	ExpressionStatement	s0 = ss -> prev [ ci ]	163:12:4531:4548	9543551	3	True				
ANR	9543976	AssignmentExpression	s0 = ss -> prev [ ci ]		9543551	0		=			
ANR	9543977	Identifier	s0		9543551	0					
ANR	9543978	ArrayIndexing	ss -> prev [ ci ]		9543551	1					
ANR	9543979	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9543980	Identifier	ss		9543551	0					
ANR	9543981	Identifier	prev		9543551	1					
ANR	9543982	Identifier	ci		9543551	1					
ANR	9543983	ExpressionStatement	ss -> prev [ ci ] = * p	164:12:4563:4580	9543551	4	True				
ANR	9543984	AssignmentExpression	ss -> prev [ ci ] = * p		9543551	0		=			
ANR	9543985	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9543986	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9543987	Identifier	ss		9543551	0					
ANR	9543988	Identifier	prev		9543551	1					
ANR	9543989	Identifier	ci		9543551	1					
ANR	9543990	UnaryOperationExpression	* p		9543551	1					
ANR	9543991	UnaryOperator	*		9543551	0					
ANR	9543992	Identifier	p		9543551	1					
ANR	9543993	Statement	END	167:2:4603:4605	9543551	25	True				
ANR	9543994	Statement	case	169:8:4616:4619	9543551	26	True				
ANR	9543995	Statement	cEncode	169:13:4621:4627	9543551	27	True				
ANR	9543996	Statement	+	169:21:4629:4629	9543551	28	True				
ANR	9543997	Statement	cBits1	169:23:4631:4636	9543551	29	True				
ANR	9543998	Statement	+	169:30:4638:4638	9543551	30	True				
ANR	9543999	Label	0 :	169:32:4640:4641	9543551	31	True				
ANR	9544000	Statement	case	170:8:4651:4654	9543551	32	True				
ANR	9544001	Statement	cEncode	170:13:4656:4662	9543551	33	True				
ANR	9544002	Statement	+	170:21:4664:4664	9543551	34	True				
ANR	9544003	Statement	cBits1	170:23:4666:4671	9543551	35	True				
ANR	9544004	Statement	+	170:30:4673:4673	9543551	36	True				
ANR	9544005	Label	2 :	170:32:4675:4676	9543551	37	True				
ANR	9544006	IfStatement	if ( colors < 8 )		9543551	38					
ANR	9544007	Condition	colors < 8	171:16:4694:4703	9543551	0	True				
ANR	9544008	RelationalExpression	colors < 8		9543551	0		<			
ANR	9544009	Identifier	colors		9543551	0					
ANR	9544010	PrimaryExpression	8		9543551	1					
ANR	9544011	CompoundStatement		83:16:2349:2372	9543551	1					
ANR	9544012	IdentifierDeclStatement	int cshift = 8 - colors ;	172:16:4738:4761	9543551	0	True				
ANR	9544013	IdentifierDecl	cshift = 8 - colors		9543551	0					
ANR	9544014	IdentifierDeclType	int		9543551	0					
ANR	9544015	Identifier	cshift		9543551	1					
ANR	9544016	AssignmentExpression	cshift = 8 - colors		9543551	2		=			
ANR	9544017	Identifier	cshift		9543551	0					
ANR	9544018	AdditiveExpression	8 - colors		9543551	1		-			
ANR	9544019	PrimaryExpression	8		9543551	0					
ANR	9544020	Identifier	colors		9543551	1					
ANR	9544021	ExpressionStatement	ENCODE1_LOOP ( t ^ ( ( s0 << cshift ) | ( t >> colors ) ) )	174:16:4780:4830	9543551	1	True				
ANR	9544022	CallExpression	ENCODE1_LOOP ( t ^ ( ( s0 << cshift ) | ( t >> colors ) ) )		9543551	0					
ANR	9544023	Callee	ENCODE1_LOOP		9543551	0					
ANR	9544024	Identifier	ENCODE1_LOOP		9543551	0					
ANR	9544025	ArgumentList	t ^ ( ( s0 << cshift ) | ( t >> colors ) )		9543551	1					
ANR	9544026	Argument	t ^ ( ( s0 << cshift ) | ( t >> colors ) )		9543551	0					
ANR	9544027	ExclusiveOrExpression	t ^ ( ( s0 << cshift ) | ( t >> colors ) )		9543551	0		^			
ANR	9544028	Identifier	t		9543551	0					
ANR	9544029	InclusiveOrExpression	( s0 << cshift ) | ( t >> colors )		9543551	1		|			
ANR	9544030	ShiftExpression	s0 << cshift		9543551	0		<<			
ANR	9544031	Identifier	s0		9543551	0					
ANR	9544032	Identifier	cshift		9543551	1					
ANR	9544033	ShiftExpression	t >> colors		9543551	1		>>			
ANR	9544034	Identifier	t		9543551	0					
ANR	9544035	Identifier	colors		9543551	1					
ANR	9544036	ElseStatement	else		9543551	0					
ANR	9544037	IfStatement	if ( colors & 7 )		9543551	0					
ANR	9544038	Condition	colors & 7	175:23:4855:4864	9543551	0	True				
ANR	9544039	BitAndExpression	colors & 7		9543551	0		&			
ANR	9544040	Identifier	colors		9543551	0					
ANR	9544041	PrimaryExpression	7		9543551	1					
ANR	9544042	CompoundStatement		88:16:2536:2558	9543551	1					
ANR	9544043	IdentifierDeclStatement	int shift = colors & 7 ;	176:16:4885:4907	9543551	0	True				
ANR	9544044	IdentifierDecl	shift = colors & 7		9543551	0					
ANR	9544045	IdentifierDeclType	int		9543551	0					
ANR	9544046	Identifier	shift		9543551	1					
ANR	9544047	AssignmentExpression	shift = colors & 7		9543551	2		=			
ANR	9544048	Identifier	shift		9543551	0					
ANR	9544049	BitAndExpression	colors & 7		9543551	1		&			
ANR	9544050	Identifier	colors		9543551	0					
ANR	9544051	PrimaryExpression	7		9543551	1					
ANR	9544052	IdentifierDeclStatement	int cshift = 8 - shift ;	177:16:4925:4947	9543551	1	True				
ANR	9544053	IdentifierDecl	cshift = 8 - shift		9543551	0					
ANR	9544054	IdentifierDeclType	int		9543551	0					
ANR	9544055	Identifier	cshift		9543551	1					
ANR	9544056	AssignmentExpression	cshift = 8 - shift		9543551	2		=			
ANR	9544057	Identifier	cshift		9543551	0					
ANR	9544058	AdditiveExpression	8 - shift		9543551	1		-			
ANR	9544059	PrimaryExpression	8		9543551	0					
ANR	9544060	Identifier	shift		9543551	1					
ANR	9544061	ExpressionStatement	"ENCODE_UNALIGNED_LOOP ( shift , cshift , * p ^ t )"	179:16:4966:5010	9543551	2	True				
ANR	9544062	CallExpression	"ENCODE_UNALIGNED_LOOP ( shift , cshift , * p ^ t )"		9543551	0					
ANR	9544063	Callee	ENCODE_UNALIGNED_LOOP		9543551	0					
ANR	9544064	Identifier	ENCODE_UNALIGNED_LOOP		9543551	0					
ANR	9544065	ArgumentList	shift		9543551	1					
ANR	9544066	Argument	shift		9543551	0					
ANR	9544067	Identifier	shift		9543551	0					
ANR	9544068	Argument	cshift		9543551	1					
ANR	9544069	Identifier	cshift		9543551	0					
ANR	9544070	Argument	* p ^ t		9543551	2					
ANR	9544071	ExclusiveOrExpression	* p ^ t		9543551	0		^			
ANR	9544072	UnaryOperationExpression	* p		9543551	0					
ANR	9544073	UnaryOperator	*		9543551	0					
ANR	9544074	Identifier	p		9543551	1					
ANR	9544075	Identifier	t		9543551	1					
ANR	9544076	ElseStatement	else		9543551	0					
ANR	9544077	CompoundStatement		91:19:2642:2642	9543551	0					
ANR	9544078	ExpressionStatement	ENCODE_ALIGNED_LOOP ( t ^ ss -> prev [ ci ] )	181:16:5049:5086	9543551	0	True				
ANR	9544079	CallExpression	ENCODE_ALIGNED_LOOP ( t ^ ss -> prev [ ci ] )		9543551	0					
ANR	9544080	Callee	ENCODE_ALIGNED_LOOP		9543551	0					
ANR	9544081	Identifier	ENCODE_ALIGNED_LOOP		9543551	0					
ANR	9544082	ArgumentList	t ^ ss -> prev [ ci ]		9543551	1					
ANR	9544083	Argument	t ^ ss -> prev [ ci ]		9543551	0					
ANR	9544084	ExclusiveOrExpression	t ^ ss -> prev [ ci ]		9543551	0		^			
ANR	9544085	Identifier	t		9543551	0					
ANR	9544086	ArrayIndexing	ss -> prev [ ci ]		9543551	1					
ANR	9544087	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9544088	Identifier	ss		9543551	0					
ANR	9544089	Identifier	prev		9543551	1					
ANR	9544090	Identifier	ci		9543551	1					
ANR	9544091	BreakStatement	break ;	183:12:5114:5119	9543551	39	True				
ANR	9544092	Statement	case	185:8:5130:5133	9543551	40	True				
ANR	9544093	Statement	cEncode	185:13:5135:5141	9543551	41	True				
ANR	9544094	Statement	+	185:21:5143:5143	9543551	42	True				
ANR	9544095	Statement	cBits1	185:23:5145:5150	9543551	43	True				
ANR	9544096	Statement	+	185:30:5152:5152	9543551	44	True				
ANR	9544097	Label	1 :	185:32:5154:5155	9543551	45	True				
ANR	9544098	ExpressionStatement	ENCODE1_LOOP ( t ^ ( ( s0 << 7 ) | ( t >> 1 ) ) )	186:12:5169:5209	9543551	46	True				
ANR	9544099	CallExpression	ENCODE1_LOOP ( t ^ ( ( s0 << 7 ) | ( t >> 1 ) ) )		9543551	0					
ANR	9544100	Callee	ENCODE1_LOOP		9543551	0					
ANR	9544101	Identifier	ENCODE1_LOOP		9543551	0					
ANR	9544102	ArgumentList	t ^ ( ( s0 << 7 ) | ( t >> 1 ) )		9543551	1					
ANR	9544103	Argument	t ^ ( ( s0 << 7 ) | ( t >> 1 ) )		9543551	0					
ANR	9544104	ExclusiveOrExpression	t ^ ( ( s0 << 7 ) | ( t >> 1 ) )		9543551	0		^			
ANR	9544105	Identifier	t		9543551	0					
ANR	9544106	InclusiveOrExpression	( s0 << 7 ) | ( t >> 1 )		9543551	1		|			
ANR	9544107	ShiftExpression	s0 << 7		9543551	0		<<			
ANR	9544108	Identifier	s0		9543551	0					
ANR	9544109	PrimaryExpression	7		9543551	1					
ANR	9544110	ShiftExpression	t >> 1		9543551	1		>>			
ANR	9544111	Identifier	t		9543551	0					
ANR	9544112	PrimaryExpression	1		9543551	1					
ANR	9544113	Statement	case	187:8:5219:5222	9543551	47	True				
ANR	9544114	Statement	cEncode	187:13:5224:5230	9543551	48	True				
ANR	9544115	Statement	+	187:21:5232:5232	9543551	49	True				
ANR	9544116	Statement	cBits1	187:23:5234:5239	9543551	50	True				
ANR	9544117	Statement	+	187:30:5241:5241	9543551	51	True				
ANR	9544118	Label	3 :	187:32:5243:5244	9543551	52	True				
ANR	9544119	ExpressionStatement	ENCODE1_LOOP ( t ^ ( ( s0 << 5 ) | ( t >> 3 ) ) )	188:12:5258:5298	9543551	53	True				
ANR	9544120	CallExpression	ENCODE1_LOOP ( t ^ ( ( s0 << 5 ) | ( t >> 3 ) ) )		9543551	0					
ANR	9544121	Callee	ENCODE1_LOOP		9543551	0					
ANR	9544122	Identifier	ENCODE1_LOOP		9543551	0					
ANR	9544123	ArgumentList	t ^ ( ( s0 << 5 ) | ( t >> 3 ) )		9543551	1					
ANR	9544124	Argument	t ^ ( ( s0 << 5 ) | ( t >> 3 ) )		9543551	0					
ANR	9544125	ExclusiveOrExpression	t ^ ( ( s0 << 5 ) | ( t >> 3 ) )		9543551	0		^			
ANR	9544126	Identifier	t		9543551	0					
ANR	9544127	InclusiveOrExpression	( s0 << 5 ) | ( t >> 3 )		9543551	1		|			
ANR	9544128	ShiftExpression	s0 << 5		9543551	0		<<			
ANR	9544129	Identifier	s0		9543551	0					
ANR	9544130	PrimaryExpression	5		9543551	1					
ANR	9544131	ShiftExpression	t >> 3		9543551	1		>>			
ANR	9544132	Identifier	t		9543551	0					
ANR	9544133	PrimaryExpression	3		9543551	1					
ANR	9544134	Statement	case	189:8:5308:5311	9543551	54	True				
ANR	9544135	Statement	cEncode	189:13:5313:5319	9543551	55	True				
ANR	9544136	Statement	+	189:21:5321:5321	9543551	56	True				
ANR	9544137	Statement	cBits1	189:23:5323:5328	9543551	57	True				
ANR	9544138	Statement	+	189:30:5330:5330	9543551	58	True				
ANR	9544139	Label	4 :	189:32:5332:5333	9543551	59	True				
ANR	9544140	ExpressionStatement	ENCODE1_LOOP ( t ^ ( ( s0 << 4 ) | ( t >> 4 ) ) )	190:12:5347:5387	9543551	60	True				
ANR	9544141	CallExpression	ENCODE1_LOOP ( t ^ ( ( s0 << 4 ) | ( t >> 4 ) ) )		9543551	0					
ANR	9544142	Callee	ENCODE1_LOOP		9543551	0					
ANR	9544143	Identifier	ENCODE1_LOOP		9543551	0					
ANR	9544144	ArgumentList	t ^ ( ( s0 << 4 ) | ( t >> 4 ) )		9543551	1					
ANR	9544145	Argument	t ^ ( ( s0 << 4 ) | ( t >> 4 ) )		9543551	0					
ANR	9544146	ExclusiveOrExpression	t ^ ( ( s0 << 4 ) | ( t >> 4 ) )		9543551	0		^			
ANR	9544147	Identifier	t		9543551	0					
ANR	9544148	InclusiveOrExpression	( s0 << 4 ) | ( t >> 4 )		9543551	1		|			
ANR	9544149	ShiftExpression	s0 << 4		9543551	0		<<			
ANR	9544150	Identifier	s0		9543551	0					
ANR	9544151	PrimaryExpression	4		9543551	1					
ANR	9544152	ShiftExpression	t >> 4		9543551	1		>>			
ANR	9544153	Identifier	t		9543551	0					
ANR	9544154	PrimaryExpression	4		9543551	1					
ANR	9544155	Statement	define	192:1:5391:5396	9543551	61	True				
ANR	9544156	Statement	DECODE1_LOOP	192:8:5398:5409	9543551	62	True				
ANR	9544157	Statement	(	192:20:5410:5410	9543551	63	True				
ANR	9544158	Statement	te	192:21:5411:5412	9543551	64	True				
ANR	9544159	Statement	","	192:23:5413:5413	9543551	65	True				
ANR	9544160	Statement	de	192:25:5415:5416	9543551	66	True				
ANR	9544161	Statement	)	192:27:5417:5417	9543551	67	True				
ANR	9544162	ExpressionStatement	"LOOP_BY ( 1 , ( t = te , s0 = * q = de ) )"	193:2:5422:5456	9543551	68	True				
ANR	9544163	CallExpression	"LOOP_BY ( 1 , ( t = te , s0 = * q = de ) )"		9543551	0					
ANR	9544164	Callee	LOOP_BY		9543551	0					
ANR	9544165	Identifier	LOOP_BY		9543551	0					
ANR	9544166	ArgumentList	1		9543551	1					
ANR	9544167	Argument	1		9543551	0					
ANR	9544168	PrimaryExpression	1		9543551	0					
ANR	9544169	Argument	"t = te , s0 = * q = de"		9543551	1					
ANR	9544170	Expression	"t = te , s0 = * q = de"		9543551	0					
ANR	9544171	AssignmentExpression	t = te		9543551	0		=			
ANR	9544172	Identifier	t		9543551	0					
ANR	9544173	Identifier	te		9543551	1					
ANR	9544174	AssignmentExpression	s0 = * q = de		9543551	1		=			
ANR	9544175	Identifier	s0		9543551	0					
ANR	9544176	AssignmentExpression	* q = de		9543551	1		=			
ANR	9544177	UnaryOperationExpression	* q		9543551	0					
ANR	9544178	UnaryOperator	*		9543551	0					
ANR	9544179	Identifier	q		9543551	1					
ANR	9544180	Identifier	de		9543551	1					
ANR	9544181	Statement	break	193:38:5458:5462	9543551	69	True				
ANR	9544182	Statement	define	195:1:5466:5471	9543551	70	True				
ANR	9544183	Statement	DECODE_ALIGNED_LOOP	195:8:5473:5491	9543551	71	True				
ANR	9544184	Statement	(	195:27:5492:5492	9543551	72	True				
ANR	9544185	Statement	de	195:28:5493:5494	9543551	73	True				
ANR	9544186	Statement	)	195:30:5495:5495	9543551	74	True				
ANR	9544187	Statement	BEGIN	196:2:5500:5504	9543551	75	True				
ANR	9544188	ExpressionStatement	ss -> prev [ 0 ] = s0	197:4:5511:5527	9543551	76	True				
ANR	9544189	AssignmentExpression	ss -> prev [ 0 ] = s0		9543551	0		=			
ANR	9544190	ArrayIndexing	ss -> prev [ 0 ]		9543551	0					
ANR	9544191	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9544192	Identifier	ss		9543551	0					
ANR	9544193	Identifier	prev		9543551	1					
ANR	9544194	PrimaryExpression	0		9543551	1					
ANR	9544195	Identifier	s0		9543551	1					
ANR	9544196	ForStatement	for ( ; count >= final ; count -= ndone )		9543551	77					
ANR	9544197	Condition	count >= final	198:11:5541:5554	9543551	0	True				
ANR	9544198	RelationalExpression	count >= final		9543551	0		>=			
ANR	9544199	Identifier	count		9543551	0					
ANR	9544200	Identifier	final		9543551	1					
ANR	9544201	AssignmentExpression	count -= ndone	198:27:5557:5570	9543551	1	True	-=			
ANR	9544202	Identifier	count		9543551	0					
ANR	9544203	Identifier	ndone		9543551	1					
ANR	9544204	CompoundStatement		109:43:3184:3184	9543551	2					
ANR	9544205	ExpressionStatement	"ndone = min ( count , nb )"	199:8:5584:5606	9543551	0	True				
ANR	9544206	AssignmentExpression	"ndone = min ( count , nb )"		9543551	0		=			
ANR	9544207	Identifier	ndone		9543551	0					
ANR	9544208	CallExpression	"min ( count , nb )"		9543551	1					
ANR	9544209	Callee	min		9543551	0					
ANR	9544210	Identifier	min		9543551	0					
ANR	9544211	ArgumentList	count		9543551	1					
ANR	9544212	Argument	count		9543551	0					
ANR	9544213	Identifier	count		9543551	0					
ANR	9544214	Argument	nb		9543551	1					
ANR	9544215	Identifier	nb		9543551	0					
ANR	9544216	ForStatement	for ( ci = 0 ; ci < ndone ; ++ ci )		9543551	1					
ANR	9544217	ForInit	ci = 0 ;	200:13:5622:5628	9543551	0	True				
ANR	9544218	AssignmentExpression	ci = 0		9543551	0		=			
ANR	9544219	Identifier	ci		9543551	0					
ANR	9544220	PrimaryExpression	0		9543551	1					
ANR	9544221	Condition	ci < ndone	200:21:5630:5639	9543551	1	True				
ANR	9544222	RelationalExpression	ci < ndone		9543551	0		<			
ANR	9544223	Identifier	ci		9543551	0					
ANR	9544224	Identifier	ndone		9543551	1					
ANR	9544225	UnaryExpression	++ ci	200:33:5642:5645	9543551	2	True				
ANR	9544226	IncDec	++		9543551	0					
ANR	9544227	Identifier	ci		9543551	1					
ANR	9544228	ExpressionStatement	"t = * ++ p , ss -> prev [ ci ] = * ++ q = de"	201:12:5661:5695	9543551	3	True				
ANR	9544229	Expression	"t = * ++ p , ss -> prev [ ci ] = * ++ q = de"		9543551	0					
ANR	9544230	AssignmentExpression	t = * ++ p		9543551	0		=			
ANR	9544231	Identifier	t		9543551	0					
ANR	9544232	UnaryOperationExpression	* ++ p		9543551	1					
ANR	9544233	UnaryOperator	*		9543551	0					
ANR	9544234	UnaryExpression	++ p		9543551	1					
ANR	9544235	IncDec	++		9543551	0					
ANR	9544236	Identifier	p		9543551	1					
ANR	9544237	AssignmentExpression	ss -> prev [ ci ] = * ++ q = de		9543551	1		=			
ANR	9544238	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9544239	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9544240	Identifier	ss		9543551	0					
ANR	9544241	Identifier	prev		9543551	1					
ANR	9544242	Identifier	ci		9543551	1					
ANR	9544243	AssignmentExpression	* ++ q = de		9543551	1		=			
ANR	9544244	UnaryOperationExpression	* ++ q		9543551	0					
ANR	9544245	UnaryOperator	*		9543551	0					
ANR	9544246	UnaryExpression	++ q		9543551	1					
ANR	9544247	IncDec	++		9543551	0					
ANR	9544248	Identifier	q		9543551	1					
ANR	9544249	Identifier	de		9543551	1					
ANR	9544250	ExpressionStatement	s0 = ss -> prev [ 0 ]	203:4:5709:5725	9543551	78	True				
ANR	9544251	AssignmentExpression	s0 = ss -> prev [ 0 ]		9543551	0		=			
ANR	9544252	Identifier	s0		9543551	0					
ANR	9544253	ArrayIndexing	ss -> prev [ 0 ]		9543551	1					
ANR	9544254	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9544255	Identifier	ss		9543551	0					
ANR	9544256	Identifier	prev		9543551	1					
ANR	9544257	PrimaryExpression	0		9543551	1					
ANR	9544258	Statement	END	204:2:5730:5732	9543551	79	True				
ANR	9544259	Statement	define	206:1:5736:5741	9543551	80	True				
ANR	9544260	Statement	DECODE_UNALIGNED_LOOP	206:8:5743:5763	9543551	81	True				
ANR	9544261	Statement	(	206:29:5764:5764	9543551	82	True				
ANR	9544262	Statement	shift	206:30:5765:5769	9543551	83	True				
ANR	9544263	Statement	","	206:35:5770:5770	9543551	84	True				
ANR	9544264	Statement	cshift	206:37:5772:5777	9543551	85	True				
ANR	9544265	Statement	","	206:43:5778:5778	9543551	86	True				
ANR	9544266	Statement	de	206:45:5780:5781	9543551	87	True				
ANR	9544267	Statement	)	206:47:5782:5782	9543551	88	True				
ANR	9544268	Statement	BEGIN	207:2:5787:5791	9543551	89	True				
ANR	9544269	ForStatement	for ( ; count >= final ; count -= ndone )		9543551	90					
ANR	9544270	Condition	count >= final	208:11:5805:5818	9543551	0	True				
ANR	9544271	RelationalExpression	count >= final		9543551	0		>=			
ANR	9544272	Identifier	count		9543551	0					
ANR	9544273	Identifier	final		9543551	1					
ANR	9544274	AssignmentExpression	count -= ndone	208:27:5821:5834	9543551	1	True	-=			
ANR	9544275	Identifier	count		9543551	0					
ANR	9544276	Identifier	ndone		9543551	1					
ANR	9544277	CompoundStatement		119:43:3448:3448	9543551	2					
ANR	9544278	ExpressionStatement	"ndone = min ( count , nb )"	209:8:5848:5870	9543551	0	True				
ANR	9544279	AssignmentExpression	"ndone = min ( count , nb )"		9543551	0		=			
ANR	9544280	Identifier	ndone		9543551	0					
ANR	9544281	CallExpression	"min ( count , nb )"		9543551	1					
ANR	9544282	Callee	min		9543551	0					
ANR	9544283	Identifier	min		9543551	0					
ANR	9544284	ArgumentList	count		9543551	1					
ANR	9544285	Argument	count		9543551	0					
ANR	9544286	Identifier	count		9543551	0					
ANR	9544287	Argument	nb		9543551	1					
ANR	9544288	Identifier	nb		9543551	0					
ANR	9544289	ForStatement	for ( ci = 1 ; ci <= ndone ; ++ ci )		9543551	1					
ANR	9544290	ForInit	ci = 1 ;	210:13:5886:5892	9543551	0	True				
ANR	9544291	AssignmentExpression	ci = 1		9543551	0		=			
ANR	9544292	Identifier	ci		9543551	0					
ANR	9544293	PrimaryExpression	1		9543551	1					
ANR	9544294	Condition	ci <= ndone	210:21:5894:5904	9543551	1	True				
ANR	9544295	RelationalExpression	ci <= ndone		9543551	0		<=			
ANR	9544296	Identifier	ci		9543551	0					
ANR	9544297	Identifier	ndone		9543551	1					
ANR	9544298	UnaryExpression	++ ci	210:34:5907:5910	9543551	2	True				
ANR	9544299	IncDec	++		9543551	0					
ANR	9544300	Identifier	ci		9543551	1					
ANR	9544301	CompoundStatement		121:40:3524:3524	9543551	3					
ANR	9544302	ExpressionStatement	"++ p , ++ q"	211:12:5928:5936	9543551	0	True				
ANR	9544303	Expression	"++ p , ++ q"		9543551	0					
ANR	9544304	UnaryExpression	++ p		9543551	0					
ANR	9544305	IncDec	++		9543551	0					
ANR	9544306	Identifier	p		9543551	1					
ANR	9544307	UnaryExpression	++ q		9543551	1					
ANR	9544308	IncDec	++		9543551	0					
ANR	9544309	Identifier	q		9543551	1					
ANR	9544310	ExpressionStatement	t = ( s0 << ( cshift ) ) | ( ss -> prev [ ci ] >> ( shift ) )	212:12:5951:5999	9543551	1	True				
ANR	9544311	AssignmentExpression	t = ( s0 << ( cshift ) ) | ( ss -> prev [ ci ] >> ( shift ) )		9543551	0		=			
ANR	9544312	Identifier	t		9543551	0					
ANR	9544313	InclusiveOrExpression	( s0 << ( cshift ) ) | ( ss -> prev [ ci ] >> ( shift ) )		9543551	1		|			
ANR	9544314	ShiftExpression	s0 << ( cshift )		9543551	0		<<			
ANR	9544315	Identifier	s0		9543551	0					
ANR	9544316	Identifier	cshift		9543551	1					
ANR	9544317	ShiftExpression	ss -> prev [ ci ] >> ( shift )		9543551	1		>>			
ANR	9544318	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9544319	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9544320	Identifier	ss		9543551	0					
ANR	9544321	Identifier	prev		9543551	1					
ANR	9544322	Identifier	ci		9543551	1					
ANR	9544323	Identifier	shift		9543551	1					
ANR	9544324	ExpressionStatement	s0 = ss -> prev [ ci ]	213:12:6014:6031	9543551	2	True				
ANR	9544325	AssignmentExpression	s0 = ss -> prev [ ci ]		9543551	0		=			
ANR	9544326	Identifier	s0		9543551	0					
ANR	9544327	ArrayIndexing	ss -> prev [ ci ]		9543551	1					
ANR	9544328	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9544329	Identifier	ss		9543551	0					
ANR	9544330	Identifier	prev		9543551	1					
ANR	9544331	Identifier	ci		9543551	1					
ANR	9544332	ExpressionStatement	ss -> prev [ ci ] = * q = de	214:12:6046:6068	9543551	3	True				
ANR	9544333	AssignmentExpression	ss -> prev [ ci ] = * q = de		9543551	0		=			
ANR	9544334	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9544335	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9544336	Identifier	ss		9543551	0					
ANR	9544337	Identifier	prev		9543551	1					
ANR	9544338	Identifier	ci		9543551	1					
ANR	9544339	AssignmentExpression	* q = de		9543551	1		=			
ANR	9544340	UnaryOperationExpression	* q		9543551	0					
ANR	9544341	UnaryOperator	*		9543551	0					
ANR	9544342	Identifier	q		9543551	1					
ANR	9544343	Identifier	de		9543551	1					
ANR	9544344	Statement	END	217:2:6091:6093	9543551	91	True				
ANR	9544345	Statement	case	219:8:6104:6107	9543551	92	True				
ANR	9544346	Statement	cDecode	219:13:6109:6115	9543551	93	True				
ANR	9544347	Statement	+	219:21:6117:6117	9543551	94	True				
ANR	9544348	Statement	cBits1	219:23:6119:6124	9543551	95	True				
ANR	9544349	Statement	+	219:30:6126:6126	9543551	96	True				
ANR	9544350	Label	0 :	219:32:6128:6129	9543551	97	True				
ANR	9544351	IfStatement	if ( colors < 8 )		9543551	98					
ANR	9544352	Condition	colors < 8	220:16:6147:6156	9543551	0	True				
ANR	9544353	RelationalExpression	colors < 8		9543551	0		<			
ANR	9544354	Identifier	colors		9543551	0					
ANR	9544355	PrimaryExpression	8		9543551	1					
ANR	9544356	CompoundStatement		132:16:3800:3823	9543551	1					
ANR	9544357	IdentifierDeclStatement	int cshift = 8 - colors ;	221:16:6189:6212	9543551	0	True				
ANR	9544358	IdentifierDecl	cshift = 8 - colors		9543551	0					
ANR	9544359	IdentifierDeclType	int		9543551	0					
ANR	9544360	Identifier	cshift		9543551	1					
ANR	9544361	AssignmentExpression	cshift = 8 - colors		9543551	2		=			
ANR	9544362	Identifier	cshift		9543551	0					
ANR	9544363	AdditiveExpression	8 - colors		9543551	1		-			
ANR	9544364	PrimaryExpression	8		9543551	0					
ANR	9544365	Identifier	colors		9543551	1					
ANR	9544366	ExpressionStatement	"DECODE1_LOOP ( * p ^ ( s0 << cshift ) , t ^ ( t >> colors ) )"	223:16:6231:6283	9543551	1	True				
ANR	9544367	CallExpression	"DECODE1_LOOP ( * p ^ ( s0 << cshift ) , t ^ ( t >> colors ) )"		9543551	0					
ANR	9544368	Callee	DECODE1_LOOP		9543551	0					
ANR	9544369	Identifier	DECODE1_LOOP		9543551	0					
ANR	9544370	ArgumentList	* p ^ ( s0 << cshift )		9543551	1					
ANR	9544371	Argument	* p ^ ( s0 << cshift )		9543551	0					
ANR	9544372	ExclusiveOrExpression	* p ^ ( s0 << cshift )		9543551	0		^			
ANR	9544373	UnaryOperationExpression	* p		9543551	0					
ANR	9544374	UnaryOperator	*		9543551	0					
ANR	9544375	Identifier	p		9543551	1					
ANR	9544376	ShiftExpression	s0 << cshift		9543551	1		<<			
ANR	9544377	Identifier	s0		9543551	0					
ANR	9544378	Identifier	cshift		9543551	1					
ANR	9544379	Argument	t ^ ( t >> colors )		9543551	1					
ANR	9544380	ExclusiveOrExpression	t ^ ( t >> colors )		9543551	0		^			
ANR	9544381	Identifier	t		9543551	0					
ANR	9544382	ShiftExpression	t >> colors		9543551	1		>>			
ANR	9544383	Identifier	t		9543551	0					
ANR	9544384	Identifier	colors		9543551	1					
ANR	9544385	ElseStatement	else		9543551	0					
ANR	9544386	IfStatement	if ( colors & 7 )		9543551	0					
ANR	9544387	Condition	colors & 7	224:23:6308:6317	9543551	0	True				
ANR	9544388	BitAndExpression	colors & 7		9543551	0		&			
ANR	9544389	Identifier	colors		9543551	0					
ANR	9544390	PrimaryExpression	7		9543551	1					
ANR	9544391	CompoundStatement		137:16:3989:4011	9543551	1					
ANR	9544392	IdentifierDeclStatement	int shift = colors & 7 ;	225:16:6338:6360	9543551	0	True				
ANR	9544393	IdentifierDecl	shift = colors & 7		9543551	0					
ANR	9544394	IdentifierDeclType	int		9543551	0					
ANR	9544395	Identifier	shift		9543551	1					
ANR	9544396	AssignmentExpression	shift = colors & 7		9543551	2		=			
ANR	9544397	Identifier	shift		9543551	0					
ANR	9544398	BitAndExpression	colors & 7		9543551	1		&			
ANR	9544399	Identifier	colors		9543551	0					
ANR	9544400	PrimaryExpression	7		9543551	1					
ANR	9544401	IdentifierDeclStatement	int cshift = 8 - shift ;	226:16:6378:6400	9543551	1	True				
ANR	9544402	IdentifierDecl	cshift = 8 - shift		9543551	0					
ANR	9544403	IdentifierDeclType	int		9543551	0					
ANR	9544404	Identifier	cshift		9543551	1					
ANR	9544405	AssignmentExpression	cshift = 8 - shift		9543551	2		=			
ANR	9544406	Identifier	cshift		9543551	0					
ANR	9544407	AdditiveExpression	8 - shift		9543551	1		-			
ANR	9544408	PrimaryExpression	8		9543551	0					
ANR	9544409	Identifier	shift		9543551	1					
ANR	9544410	ExpressionStatement	"DECODE_UNALIGNED_LOOP ( shift , cshift , * p ^ t )"	228:16:6419:6463	9543551	2	True				
ANR	9544411	CallExpression	"DECODE_UNALIGNED_LOOP ( shift , cshift , * p ^ t )"		9543551	0					
ANR	9544412	Callee	DECODE_UNALIGNED_LOOP		9543551	0					
ANR	9544413	Identifier	DECODE_UNALIGNED_LOOP		9543551	0					
ANR	9544414	ArgumentList	shift		9543551	1					
ANR	9544415	Argument	shift		9543551	0					
ANR	9544416	Identifier	shift		9543551	0					
ANR	9544417	Argument	cshift		9543551	1					
ANR	9544418	Identifier	cshift		9543551	0					
ANR	9544419	Argument	* p ^ t		9543551	2					
ANR	9544420	ExclusiveOrExpression	* p ^ t		9543551	0		^			
ANR	9544421	UnaryOperationExpression	* p		9543551	0					
ANR	9544422	UnaryOperator	*		9543551	0					
ANR	9544423	Identifier	p		9543551	1					
ANR	9544424	Identifier	t		9543551	1					
ANR	9544425	ElseStatement	else		9543551	0					
ANR	9544426	CompoundStatement		140:19:4095:4095	9543551	0					
ANR	9544427	ExpressionStatement	DECODE_ALIGNED_LOOP ( t ^ ss -> prev [ ci ] )	230:16:6502:6539	9543551	0	True				
ANR	9544428	CallExpression	DECODE_ALIGNED_LOOP ( t ^ ss -> prev [ ci ] )		9543551	0					
ANR	9544429	Callee	DECODE_ALIGNED_LOOP		9543551	0					
ANR	9544430	Identifier	DECODE_ALIGNED_LOOP		9543551	0					
ANR	9544431	ArgumentList	t ^ ss -> prev [ ci ]		9543551	1					
ANR	9544432	Argument	t ^ ss -> prev [ ci ]		9543551	0					
ANR	9544433	ExclusiveOrExpression	t ^ ss -> prev [ ci ]		9543551	0		^			
ANR	9544434	Identifier	t		9543551	0					
ANR	9544435	ArrayIndexing	ss -> prev [ ci ]		9543551	1					
ANR	9544436	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9544437	Identifier	ss		9543551	0					
ANR	9544438	Identifier	prev		9543551	1					
ANR	9544439	Identifier	ci		9543551	1					
ANR	9544440	BreakStatement	break ;	232:12:6567:6572	9543551	99	True				
ANR	9544441	Statement	case	234:8:6583:6586	9543551	100	True				
ANR	9544442	Statement	cDecode	234:13:6588:6594	9543551	101	True				
ANR	9544443	Statement	+	234:21:6596:6596	9543551	102	True				
ANR	9544444	Statement	cBits1	234:23:6598:6603	9543551	103	True				
ANR	9544445	Statement	+	234:30:6605:6605	9543551	104	True				
ANR	9544446	Label	1 :	234:32:6607:6608	9543551	105	True				
ANR	9544447	ExpressionStatement	"DECODE1_LOOP ( * p ^ ( s0 << 7 ) , ( t ^= t >> 1 , t ^= t >> 2 , t ^ ( t >> 4 ) ) )"	235:12:6622:6717	9543551	106	True				
ANR	9544448	CallExpression	"DECODE1_LOOP ( * p ^ ( s0 << 7 ) , ( t ^= t >> 1 , t ^= t >> 2 , t ^ ( t >> 4 ) ) )"		9543551	0					
ANR	9544449	Callee	DECODE1_LOOP		9543551	0					
ANR	9544450	Identifier	DECODE1_LOOP		9543551	0					
ANR	9544451	ArgumentList	* p ^ ( s0 << 7 )		9543551	1					
ANR	9544452	Argument	* p ^ ( s0 << 7 )		9543551	0					
ANR	9544453	ExclusiveOrExpression	* p ^ ( s0 << 7 )		9543551	0		^			
ANR	9544454	UnaryOperationExpression	* p		9543551	0					
ANR	9544455	UnaryOperator	*		9543551	0					
ANR	9544456	Identifier	p		9543551	1					
ANR	9544457	ShiftExpression	s0 << 7		9543551	1		<<			
ANR	9544458	Identifier	s0		9543551	0					
ANR	9544459	PrimaryExpression	7		9543551	1					
ANR	9544460	Argument	"t ^= t >> 1 , t ^= t >> 2 , t ^ ( t >> 4 )"		9543551	1					
ANR	9544461	Expression	"t ^= t >> 1 , t ^= t >> 2 , t ^ ( t >> 4 )"		9543551	0					
ANR	9544462	AssignmentExpression	t ^= t >> 1		9543551	0		^=			
ANR	9544463	Identifier	t		9543551	0					
ANR	9544464	ShiftExpression	t >> 1		9543551	1		>>			
ANR	9544465	Identifier	t		9543551	0					
ANR	9544466	PrimaryExpression	1		9543551	1					
ANR	9544467	Expression	"t ^= t >> 2 , t ^ ( t >> 4 )"		9543551	1					
ANR	9544468	AssignmentExpression	t ^= t >> 2		9543551	0		^=			
ANR	9544469	Identifier	t		9543551	0					
ANR	9544470	ShiftExpression	t >> 2		9543551	1		>>			
ANR	9544471	Identifier	t		9543551	0					
ANR	9544472	PrimaryExpression	2		9543551	1					
ANR	9544473	ExclusiveOrExpression	t ^ ( t >> 4 )		9543551	1		^			
ANR	9544474	Identifier	t		9543551	0					
ANR	9544475	ShiftExpression	t >> 4		9543551	1		>>			
ANR	9544476	Identifier	t		9543551	0					
ANR	9544477	PrimaryExpression	4		9543551	1					
ANR	9544478	Statement	case	237:8:6727:6730	9543551	107	True				
ANR	9544479	Statement	cDecode	237:13:6732:6738	9543551	108	True				
ANR	9544480	Statement	+	237:21:6740:6740	9543551	109	True				
ANR	9544481	Statement	cBits1	237:23:6742:6747	9543551	110	True				
ANR	9544482	Statement	+	237:30:6749:6749	9543551	111	True				
ANR	9544483	Label	2 :	237:32:6751:6752	9543551	112	True				
ANR	9544484	ExpressionStatement	"DECODE1_LOOP ( * p ^ ( s0 << 6 ) , ( t ^= ( t >> 2 ) , t ^ ( t >> 4 ) ) )"	238:12:6766:6850	9543551	113	True				
ANR	9544485	CallExpression	"DECODE1_LOOP ( * p ^ ( s0 << 6 ) , ( t ^= ( t >> 2 ) , t ^ ( t >> 4 ) ) )"		9543551	0					
ANR	9544486	Callee	DECODE1_LOOP		9543551	0					
ANR	9544487	Identifier	DECODE1_LOOP		9543551	0					
ANR	9544488	ArgumentList	* p ^ ( s0 << 6 )		9543551	1					
ANR	9544489	Argument	* p ^ ( s0 << 6 )		9543551	0					
ANR	9544490	ExclusiveOrExpression	* p ^ ( s0 << 6 )		9543551	0		^			
ANR	9544491	UnaryOperationExpression	* p		9543551	0					
ANR	9544492	UnaryOperator	*		9543551	0					
ANR	9544493	Identifier	p		9543551	1					
ANR	9544494	ShiftExpression	s0 << 6		9543551	1		<<			
ANR	9544495	Identifier	s0		9543551	0					
ANR	9544496	PrimaryExpression	6		9543551	1					
ANR	9544497	Argument	"t ^= ( t >> 2 ) , t ^ ( t >> 4 )"		9543551	1					
ANR	9544498	Expression	"t ^= ( t >> 2 ) , t ^ ( t >> 4 )"		9543551	0					
ANR	9544499	AssignmentExpression	t ^= ( t >> 2 )		9543551	0		^=			
ANR	9544500	Identifier	t		9543551	0					
ANR	9544501	ShiftExpression	t >> 2		9543551	1		>>			
ANR	9544502	Identifier	t		9543551	0					
ANR	9544503	PrimaryExpression	2		9543551	1					
ANR	9544504	ExclusiveOrExpression	t ^ ( t >> 4 )		9543551	1		^			
ANR	9544505	Identifier	t		9543551	0					
ANR	9544506	ShiftExpression	t >> 4		9543551	1		>>			
ANR	9544507	Identifier	t		9543551	0					
ANR	9544508	PrimaryExpression	4		9543551	1					
ANR	9544509	Statement	case	240:8:6860:6863	9543551	114	True				
ANR	9544510	Statement	cDecode	240:13:6865:6871	9543551	115	True				
ANR	9544511	Statement	+	240:21:6873:6873	9543551	116	True				
ANR	9544512	Statement	cBits1	240:23:6875:6880	9543551	117	True				
ANR	9544513	Statement	+	240:30:6882:6882	9543551	118	True				
ANR	9544514	Label	3 :	240:32:6884:6885	9543551	119	True				
ANR	9544515	ExpressionStatement	"DECODE1_LOOP ( * p ^ ( s0 << 5 ) , t ^ ( t >> 3 ) ^ ( t >> 6 ) )"	241:12:6899:6977	9543551	120	True				
ANR	9544516	CallExpression	"DECODE1_LOOP ( * p ^ ( s0 << 5 ) , t ^ ( t >> 3 ) ^ ( t >> 6 ) )"		9543551	0					
ANR	9544517	Callee	DECODE1_LOOP		9543551	0					
ANR	9544518	Identifier	DECODE1_LOOP		9543551	0					
ANR	9544519	ArgumentList	* p ^ ( s0 << 5 )		9543551	1					
ANR	9544520	Argument	* p ^ ( s0 << 5 )		9543551	0					
ANR	9544521	ExclusiveOrExpression	* p ^ ( s0 << 5 )		9543551	0		^			
ANR	9544522	UnaryOperationExpression	* p		9543551	0					
ANR	9544523	UnaryOperator	*		9543551	0					
ANR	9544524	Identifier	p		9543551	1					
ANR	9544525	ShiftExpression	s0 << 5		9543551	1		<<			
ANR	9544526	Identifier	s0		9543551	0					
ANR	9544527	PrimaryExpression	5		9543551	1					
ANR	9544528	Argument	t ^ ( t >> 3 ) ^ ( t >> 6 )		9543551	1					
ANR	9544529	ExclusiveOrExpression	t ^ ( t >> 3 ) ^ ( t >> 6 )		9543551	0		^			
ANR	9544530	Identifier	t		9543551	0					
ANR	9544531	ExclusiveOrExpression	( t >> 3 ) ^ ( t >> 6 )		9543551	1		^			
ANR	9544532	ShiftExpression	t >> 3		9543551	0		>>			
ANR	9544533	Identifier	t		9543551	0					
ANR	9544534	PrimaryExpression	3		9543551	1					
ANR	9544535	ShiftExpression	t >> 6		9543551	1		>>			
ANR	9544536	Identifier	t		9543551	0					
ANR	9544537	PrimaryExpression	6		9543551	1					
ANR	9544538	Statement	case	243:8:6987:6990	9543551	121	True				
ANR	9544539	Statement	cDecode	243:13:6992:6998	9543551	122	True				
ANR	9544540	Statement	+	243:21:7000:7000	9543551	123	True				
ANR	9544541	Statement	cBits1	243:23:7002:7007	9543551	124	True				
ANR	9544542	Statement	+	243:30:7009:7009	9543551	125	True				
ANR	9544543	Label	4 :	243:32:7011:7012	9543551	126	True				
ANR	9544544	ExpressionStatement	"DECODE1_LOOP ( * p ^ ( s0 << 4 ) , t ^ ( t >> 4 ) )"	244:12:7026:7093	9543551	127	True				
ANR	9544545	CallExpression	"DECODE1_LOOP ( * p ^ ( s0 << 4 ) , t ^ ( t >> 4 ) )"		9543551	0					
ANR	9544546	Callee	DECODE1_LOOP		9543551	0					
ANR	9544547	Identifier	DECODE1_LOOP		9543551	0					
ANR	9544548	ArgumentList	* p ^ ( s0 << 4 )		9543551	1					
ANR	9544549	Argument	* p ^ ( s0 << 4 )		9543551	0					
ANR	9544550	ExclusiveOrExpression	* p ^ ( s0 << 4 )		9543551	0		^			
ANR	9544551	UnaryOperationExpression	* p		9543551	0					
ANR	9544552	UnaryOperator	*		9543551	0					
ANR	9544553	Identifier	p		9543551	1					
ANR	9544554	ShiftExpression	s0 << 4		9543551	1		<<			
ANR	9544555	Identifier	s0		9543551	0					
ANR	9544556	PrimaryExpression	4		9543551	1					
ANR	9544557	Argument	t ^ ( t >> 4 )		9543551	1					
ANR	9544558	ExclusiveOrExpression	t ^ ( t >> 4 )		9543551	0		^			
ANR	9544559	Identifier	t		9543551	0					
ANR	9544560	ShiftExpression	t >> 4		9543551	1		>>			
ANR	9544561	Identifier	t		9543551	0					
ANR	9544562	PrimaryExpression	4		9543551	1					
ANR	9544563	Statement	define	249:1:7137:7142	9543551	128	True				
ANR	9544564	Statement	ADD4X2	249:8:7144:7149	9543551	129	True				
ANR	9544565	Statement	(	249:14:7150:7150	9543551	130	True				
ANR	9544566	Statement	a	249:15:7151:7151	9543551	131	True				
ANR	9544567	Statement	","	249:16:7152:7152	9543551	132	True				
ANR	9544568	Statement	b	249:18:7154:7154	9543551	133	True				
ANR	9544569	Statement	)	249:19:7155:7155	9543551	134	True				
ANR	9544570	Statement	(	249:21:7157:7157	9543551	135	True				
ANR	9544571	Statement	(	249:23:7159:7159	9543551	136	True				
ANR	9544572	Statement	(	249:24:7160:7160	9543551	137	True				
ANR	9544573	Statement	(	249:25:7161:7161	9543551	138	True				
ANR	9544574	Statement	a	249:26:7162:7162	9543551	139	True				
ANR	9544575	Statement	)	249:27:7163:7163	9543551	140	True				
ANR	9544576	Statement	&	249:29:7165:7165	9543551	141	True				
ANR	9544577	Statement	(	249:31:7167:7167	9543551	142	True				
ANR	9544578	Statement	b	249:32:7168:7168	9543551	143	True				
ANR	9544579	Statement	)	249:33:7169:7169	9543551	144	True				
ANR	9544580	Statement	&	249:35:7171:7171	9543551	145	True				
ANR	9544581	Statement	0x55	249:37:7173:7176	9543551	146	True				
ANR	9544582	Statement	)	249:41:7177:7177	9543551	147	True				
ANR	9544583	Statement	<<	249:43:7179:7180	9543551	148	True				
ANR	9544584	Statement	1	249:46:7182:7182	9543551	149	True				
ANR	9544585	Statement	)	249:47:7183:7183	9543551	150	True				
ANR	9544586	Statement	^	249:49:7185:7185	9543551	151	True				
ANR	9544587	Statement	(	249:51:7187:7187	9543551	152	True				
ANR	9544588	Statement	a	249:52:7188:7188	9543551	153	True				
ANR	9544589	Statement	)	249:53:7189:7189	9543551	154	True				
ANR	9544590	Statement	^	249:55:7191:7191	9543551	155	True				
ANR	9544591	Statement	(	249:57:7193:7193	9543551	156	True				
ANR	9544592	Statement	b	249:58:7194:7194	9543551	157	True				
ANR	9544593	Statement	)	249:59:7195:7195	9543551	158	True				
ANR	9544594	Statement	)	249:61:7197:7197	9543551	159	True				
ANR	9544595	Statement	define	251:1:7275:7280	9543551	160	True				
ANR	9544596	Statement	SUB4X2	251:8:7282:7287	9543551	161	True				
ANR	9544597	Statement	(	251:14:7288:7288	9543551	162	True				
ANR	9544598	Statement	a	251:15:7289:7289	9543551	163	True				
ANR	9544599	Statement	","	251:16:7290:7290	9543551	164	True				
ANR	9544600	Statement	b	251:18:7292:7292	9543551	165	True				
ANR	9544601	Statement	)	251:19:7293:7293	9543551	166	True				
ANR	9544602	Statement	(	251:21:7295:7295	9543551	167	True				
ANR	9544603	Statement	(	251:23:7297:7297	9543551	168	True				
ANR	9544604	Statement	(	251:24:7298:7298	9543551	169	True				
ANR	9544605	Statement	~	251:25:7299:7299	9543551	170	True				
ANR	9544606	Statement	(	251:26:7300:7300	9543551	171	True				
ANR	9544607	Statement	a	251:27:7301:7301	9543551	172	True				
ANR	9544608	Statement	)	251:28:7302:7302	9543551	173	True				
ANR	9544609	Statement	&	251:30:7304:7304	9543551	174	True				
ANR	9544610	Statement	(	251:32:7306:7306	9543551	175	True				
ANR	9544611	Statement	b	251:33:7307:7307	9543551	176	True				
ANR	9544612	Statement	)	251:34:7308:7308	9543551	177	True				
ANR	9544613	Statement	&	251:36:7310:7310	9543551	178	True				
ANR	9544614	Statement	0x55	251:38:7312:7315	9543551	179	True				
ANR	9544615	Statement	)	251:42:7316:7316	9543551	180	True				
ANR	9544616	Statement	<<	251:44:7318:7319	9543551	181	True				
ANR	9544617	Statement	1	251:47:7321:7321	9543551	182	True				
ANR	9544618	Statement	)	251:48:7322:7322	9543551	183	True				
ANR	9544619	Statement	^	251:50:7324:7324	9543551	184	True				
ANR	9544620	Statement	(	251:52:7326:7326	9543551	185	True				
ANR	9544621	Statement	a	251:53:7327:7327	9543551	186	True				
ANR	9544622	Statement	)	251:54:7328:7328	9543551	187	True				
ANR	9544623	Statement	^	251:56:7330:7330	9543551	188	True				
ANR	9544624	Statement	(	251:58:7332:7332	9543551	189	True				
ANR	9544625	Statement	b	251:59:7333:7333	9543551	190	True				
ANR	9544626	Statement	)	251:60:7334:7334	9543551	191	True				
ANR	9544627	Statement	)	251:62:7336:7336	9543551	192	True				
ANR	9544628	Statement	case	253:8:7347:7350	9543551	193	True				
ANR	9544629	Statement	cEncode	253:13:7352:7358	9543551	194	True				
ANR	9544630	Statement	+	253:21:7360:7360	9543551	195	True				
ANR	9544631	Statement	cBits2	253:23:7362:7367	9543551	196	True				
ANR	9544632	Statement	+	253:30:7369:7369	9543551	197	True				
ANR	9544633	Label	0 :	253:32:7371:7372	9543551	198	True				
ANR	9544634	IfStatement	if ( colors & 7 )		9543551	199					
ANR	9544635	Condition	colors & 7	254:16:7390:7399	9543551	0	True				
ANR	9544636	BitAndExpression	colors & 7		9543551	0		&			
ANR	9544637	Identifier	colors		9543551	0					
ANR	9544638	PrimaryExpression	7		9543551	1					
ANR	9544639	CompoundStatement		167:16:5078:5100	9543551	1					
ANR	9544640	IdentifierDeclStatement	int shift = ( colors & 3 ) << 1 ;	255:16:7420:7449	9543551	0	True				
ANR	9544641	IdentifierDecl	shift = ( colors & 3 ) << 1		9543551	0					
ANR	9544642	IdentifierDeclType	int		9543551	0					
ANR	9544643	Identifier	shift		9543551	1					
ANR	9544644	AssignmentExpression	shift = ( colors & 3 ) << 1		9543551	2		=			
ANR	9544645	Identifier	shift		9543551	0					
ANR	9544646	ShiftExpression	( colors & 3 ) << 1		9543551	1		<<			
ANR	9544647	BitAndExpression	colors & 3		9543551	0		&			
ANR	9544648	Identifier	colors		9543551	0					
ANR	9544649	PrimaryExpression	3		9543551	1					
ANR	9544650	PrimaryExpression	1		9543551	1					
ANR	9544651	IdentifierDeclStatement	int cshift = 8 - shift ;	256:16:7467:7489	9543551	1	True				
ANR	9544652	IdentifierDecl	cshift = 8 - shift		9543551	0					
ANR	9544653	IdentifierDeclType	int		9543551	0					
ANR	9544654	Identifier	cshift		9543551	1					
ANR	9544655	AssignmentExpression	cshift = 8 - shift		9543551	2		=			
ANR	9544656	Identifier	cshift		9543551	0					
ANR	9544657	AdditiveExpression	8 - shift		9543551	1		-			
ANR	9544658	PrimaryExpression	8		9543551	0					
ANR	9544659	Identifier	shift		9543551	1					
ANR	9544660	ExpressionStatement	"ENCODE_UNALIGNED_LOOP ( shift , cshift , SUB4X2 ( * p , t ) )"	258:16:7508:7559	9543551	2	True				
ANR	9544661	CallExpression	"ENCODE_UNALIGNED_LOOP ( shift , cshift , SUB4X2 ( * p , t ) )"		9543551	0					
ANR	9544662	Callee	ENCODE_UNALIGNED_LOOP		9543551	0					
ANR	9544663	Identifier	ENCODE_UNALIGNED_LOOP		9543551	0					
ANR	9544664	ArgumentList	shift		9543551	1					
ANR	9544665	Argument	shift		9543551	0					
ANR	9544666	Identifier	shift		9543551	0					
ANR	9544667	Argument	cshift		9543551	1					
ANR	9544668	Identifier	cshift		9543551	0					
ANR	9544669	Argument	"SUB4X2 ( * p , t )"		9543551	2					
ANR	9544670	CallExpression	"SUB4X2 ( * p , t )"		9543551	0					
ANR	9544671	Callee	SUB4X2		9543551	0					
ANR	9544672	Identifier	SUB4X2		9543551	0					
ANR	9544673	ArgumentList	* p		9543551	1					
ANR	9544674	Argument	* p		9543551	0					
ANR	9544675	UnaryOperationExpression	* p		9543551	0					
ANR	9544676	UnaryOperator	*		9543551	0					
ANR	9544677	Identifier	p		9543551	1					
ANR	9544678	Argument	t		9543551	1					
ANR	9544679	Identifier	t		9543551	0					
ANR	9544680	ElseStatement	else		9543551	0					
ANR	9544681	CompoundStatement		170:19:5191:5191	9543551	0					
ANR	9544682	ExpressionStatement	"ENCODE_ALIGNED_LOOP ( SUB4X2 ( t , ss -> prev [ ci ] ) )"	260:16:7598:7642	9543551	0	True				
ANR	9544683	CallExpression	"ENCODE_ALIGNED_LOOP ( SUB4X2 ( t , ss -> prev [ ci ] ) )"		9543551	0					
ANR	9544684	Callee	ENCODE_ALIGNED_LOOP		9543551	0					
ANR	9544685	Identifier	ENCODE_ALIGNED_LOOP		9543551	0					
ANR	9544686	ArgumentList	"SUB4X2 ( t , ss -> prev [ ci ] )"		9543551	1					
ANR	9544687	Argument	"SUB4X2 ( t , ss -> prev [ ci ] )"		9543551	0					
ANR	9544688	CallExpression	"SUB4X2 ( t , ss -> prev [ ci ] )"		9543551	0					
ANR	9544689	Callee	SUB4X2		9543551	0					
ANR	9544690	Identifier	SUB4X2		9543551	0					
ANR	9544691	ArgumentList	t		9543551	1					
ANR	9544692	Argument	t		9543551	0					
ANR	9544693	Identifier	t		9543551	0					
ANR	9544694	Argument	ss -> prev [ ci ]		9543551	1					
ANR	9544695	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9544696	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9544697	Identifier	ss		9543551	0					
ANR	9544698	Identifier	prev		9543551	1					
ANR	9544699	Identifier	ci		9543551	1					
ANR	9544700	BreakStatement	break ;	262:12:7670:7675	9543551	200	True				
ANR	9544701	Statement	case	264:8:7686:7689	9543551	201	True				
ANR	9544702	Statement	cEncode	264:13:7691:7697	9543551	202	True				
ANR	9544703	Statement	+	264:21:7699:7699	9543551	203	True				
ANR	9544704	Statement	cBits2	264:23:7701:7706	9543551	204	True				
ANR	9544705	Statement	+	264:30:7708:7708	9543551	205	True				
ANR	9544706	Label	1 :	264:32:7710:7711	9543551	206	True				
ANR	9544707	ExpressionStatement	"ENCODE1_LOOP ( ( s0 = ( s0 << 6 ) | ( t >> 2 ) , SUB4X2 ( t , s0 ) ) )"	265:12:7725:7781	9543551	207	True				
ANR	9544708	CallExpression	"ENCODE1_LOOP ( ( s0 = ( s0 << 6 ) | ( t >> 2 ) , SUB4X2 ( t , s0 ) ) )"		9543551	0					
ANR	9544709	Callee	ENCODE1_LOOP		9543551	0					
ANR	9544710	Identifier	ENCODE1_LOOP		9543551	0					
ANR	9544711	ArgumentList	"s0 = ( s0 << 6 ) | ( t >> 2 ) , SUB4X2 ( t , s0 )"		9543551	1					
ANR	9544712	Argument	"s0 = ( s0 << 6 ) | ( t >> 2 ) , SUB4X2 ( t , s0 )"		9543551	0					
ANR	9544713	Expression	"s0 = ( s0 << 6 ) | ( t >> 2 ) , SUB4X2 ( t , s0 )"		9543551	0					
ANR	9544714	AssignmentExpression	s0 = ( s0 << 6 ) | ( t >> 2 )		9543551	0		=			
ANR	9544715	Identifier	s0		9543551	0					
ANR	9544716	InclusiveOrExpression	( s0 << 6 ) | ( t >> 2 )		9543551	1		|			
ANR	9544717	ShiftExpression	s0 << 6		9543551	0		<<			
ANR	9544718	Identifier	s0		9543551	0					
ANR	9544719	PrimaryExpression	6		9543551	1					
ANR	9544720	ShiftExpression	t >> 2		9543551	1		>>			
ANR	9544721	Identifier	t		9543551	0					
ANR	9544722	PrimaryExpression	2		9543551	1					
ANR	9544723	CallExpression	"SUB4X2 ( t , s0 )"		9543551	1					
ANR	9544724	Callee	SUB4X2		9543551	0					
ANR	9544725	Identifier	SUB4X2		9543551	0					
ANR	9544726	ArgumentList	t		9543551	1					
ANR	9544727	Argument	t		9543551	0					
ANR	9544728	Identifier	t		9543551	0					
ANR	9544729	Argument	s0		9543551	1					
ANR	9544730	Identifier	s0		9543551	0					
ANR	9544731	Statement	case	266:8:7791:7794	9543551	208	True				
ANR	9544732	Statement	cEncode	266:13:7796:7802	9543551	209	True				
ANR	9544733	Statement	+	266:21:7804:7804	9543551	210	True				
ANR	9544734	Statement	cBits2	266:23:7806:7811	9543551	211	True				
ANR	9544735	Statement	+	266:30:7813:7813	9543551	212	True				
ANR	9544736	Label	2 :	266:32:7815:7816	9543551	213	True				
ANR	9544737	ExpressionStatement	"ENCODE1_LOOP ( ( s0 = ( s0 << 4 ) | ( t >> 4 ) , SUB4X2 ( t , s0 ) ) )"	267:12:7830:7886	9543551	214	True				
ANR	9544738	CallExpression	"ENCODE1_LOOP ( ( s0 = ( s0 << 4 ) | ( t >> 4 ) , SUB4X2 ( t , s0 ) ) )"		9543551	0					
ANR	9544739	Callee	ENCODE1_LOOP		9543551	0					
ANR	9544740	Identifier	ENCODE1_LOOP		9543551	0					
ANR	9544741	ArgumentList	"s0 = ( s0 << 4 ) | ( t >> 4 ) , SUB4X2 ( t , s0 )"		9543551	1					
ANR	9544742	Argument	"s0 = ( s0 << 4 ) | ( t >> 4 ) , SUB4X2 ( t , s0 )"		9543551	0					
ANR	9544743	Expression	"s0 = ( s0 << 4 ) | ( t >> 4 ) , SUB4X2 ( t , s0 )"		9543551	0					
ANR	9544744	AssignmentExpression	s0 = ( s0 << 4 ) | ( t >> 4 )		9543551	0		=			
ANR	9544745	Identifier	s0		9543551	0					
ANR	9544746	InclusiveOrExpression	( s0 << 4 ) | ( t >> 4 )		9543551	1		|			
ANR	9544747	ShiftExpression	s0 << 4		9543551	0		<<			
ANR	9544748	Identifier	s0		9543551	0					
ANR	9544749	PrimaryExpression	4		9543551	1					
ANR	9544750	ShiftExpression	t >> 4		9543551	1		>>			
ANR	9544751	Identifier	t		9543551	0					
ANR	9544752	PrimaryExpression	4		9543551	1					
ANR	9544753	CallExpression	"SUB4X2 ( t , s0 )"		9543551	1					
ANR	9544754	Callee	SUB4X2		9543551	0					
ANR	9544755	Identifier	SUB4X2		9543551	0					
ANR	9544756	ArgumentList	t		9543551	1					
ANR	9544757	Argument	t		9543551	0					
ANR	9544758	Identifier	t		9543551	0					
ANR	9544759	Argument	s0		9543551	1					
ANR	9544760	Identifier	s0		9543551	0					
ANR	9544761	Statement	case	268:8:7896:7899	9543551	215	True				
ANR	9544762	Statement	cEncode	268:13:7901:7907	9543551	216	True				
ANR	9544763	Statement	+	268:21:7909:7909	9543551	217	True				
ANR	9544764	Statement	cBits2	268:23:7911:7916	9543551	218	True				
ANR	9544765	Statement	+	268:30:7918:7918	9543551	219	True				
ANR	9544766	Label	3 :	268:32:7920:7921	9543551	220	True				
ANR	9544767	ExpressionStatement	"ENCODE1_LOOP ( ( s0 = ( s0 << 2 ) | ( t >> 6 ) , SUB4X2 ( t , s0 ) ) )"	269:12:7935:7991	9543551	221	True				
ANR	9544768	CallExpression	"ENCODE1_LOOP ( ( s0 = ( s0 << 2 ) | ( t >> 6 ) , SUB4X2 ( t , s0 ) ) )"		9543551	0					
ANR	9544769	Callee	ENCODE1_LOOP		9543551	0					
ANR	9544770	Identifier	ENCODE1_LOOP		9543551	0					
ANR	9544771	ArgumentList	"s0 = ( s0 << 2 ) | ( t >> 6 ) , SUB4X2 ( t , s0 )"		9543551	1					
ANR	9544772	Argument	"s0 = ( s0 << 2 ) | ( t >> 6 ) , SUB4X2 ( t , s0 )"		9543551	0					
ANR	9544773	Expression	"s0 = ( s0 << 2 ) | ( t >> 6 ) , SUB4X2 ( t , s0 )"		9543551	0					
ANR	9544774	AssignmentExpression	s0 = ( s0 << 2 ) | ( t >> 6 )		9543551	0		=			
ANR	9544775	Identifier	s0		9543551	0					
ANR	9544776	InclusiveOrExpression	( s0 << 2 ) | ( t >> 6 )		9543551	1		|			
ANR	9544777	ShiftExpression	s0 << 2		9543551	0		<<			
ANR	9544778	Identifier	s0		9543551	0					
ANR	9544779	PrimaryExpression	2		9543551	1					
ANR	9544780	ShiftExpression	t >> 6		9543551	1		>>			
ANR	9544781	Identifier	t		9543551	0					
ANR	9544782	PrimaryExpression	6		9543551	1					
ANR	9544783	CallExpression	"SUB4X2 ( t , s0 )"		9543551	1					
ANR	9544784	Callee	SUB4X2		9543551	0					
ANR	9544785	Identifier	SUB4X2		9543551	0					
ANR	9544786	ArgumentList	t		9543551	1					
ANR	9544787	Argument	t		9543551	0					
ANR	9544788	Identifier	t		9543551	0					
ANR	9544789	Argument	s0		9543551	1					
ANR	9544790	Identifier	s0		9543551	0					
ANR	9544791	Statement	case	270:8:8001:8004	9543551	222	True				
ANR	9544792	Statement	cEncode	270:13:8006:8012	9543551	223	True				
ANR	9544793	Statement	+	270:21:8014:8014	9543551	224	True				
ANR	9544794	Statement	cBits2	270:23:8016:8021	9543551	225	True				
ANR	9544795	Statement	+	270:30:8023:8023	9543551	226	True				
ANR	9544796	Label	4 :	270:32:8025:8026	9543551	227	True				
ANR	9544797	ExpressionStatement	"ENCODE1_LOOP ( SUB4X2 ( t , s0 ) )"	271:12:8040:8067	9543551	228	True				
ANR	9544798	CallExpression	"ENCODE1_LOOP ( SUB4X2 ( t , s0 ) )"		9543551	0					
ANR	9544799	Callee	ENCODE1_LOOP		9543551	0					
ANR	9544800	Identifier	ENCODE1_LOOP		9543551	0					
ANR	9544801	ArgumentList	"SUB4X2 ( t , s0 )"		9543551	1					
ANR	9544802	Argument	"SUB4X2 ( t , s0 )"		9543551	0					
ANR	9544803	CallExpression	"SUB4X2 ( t , s0 )"		9543551	0					
ANR	9544804	Callee	SUB4X2		9543551	0					
ANR	9544805	Identifier	SUB4X2		9543551	0					
ANR	9544806	ArgumentList	t		9543551	1					
ANR	9544807	Argument	t		9543551	0					
ANR	9544808	Identifier	t		9543551	0					
ANR	9544809	Argument	s0		9543551	1					
ANR	9544810	Identifier	s0		9543551	0					
ANR	9544811	Statement	case	273:8:8078:8081	9543551	229	True				
ANR	9544812	Statement	cDecode	273:13:8083:8089	9543551	230	True				
ANR	9544813	Statement	+	273:21:8091:8091	9543551	231	True				
ANR	9544814	Statement	cBits2	273:23:8093:8098	9543551	232	True				
ANR	9544815	Statement	+	273:30:8100:8100	9543551	233	True				
ANR	9544816	Label	0 :	273:32:8102:8103	9543551	234	True				
ANR	9544817	IfStatement	if ( colors & 7 )		9543551	235					
ANR	9544818	Condition	colors & 7	274:16:8121:8130	9543551	0	True				
ANR	9544819	BitAndExpression	colors & 7		9543551	0		&			
ANR	9544820	Identifier	colors		9543551	0					
ANR	9544821	PrimaryExpression	7		9543551	1					
ANR	9544822	CompoundStatement		187:16:5809:5831	9543551	1					
ANR	9544823	IdentifierDeclStatement	int shift = ( colors & 3 ) << 1 ;	275:16:8151:8180	9543551	0	True				
ANR	9544824	IdentifierDecl	shift = ( colors & 3 ) << 1		9543551	0					
ANR	9544825	IdentifierDeclType	int		9543551	0					
ANR	9544826	Identifier	shift		9543551	1					
ANR	9544827	AssignmentExpression	shift = ( colors & 3 ) << 1		9543551	2		=			
ANR	9544828	Identifier	shift		9543551	0					
ANR	9544829	ShiftExpression	( colors & 3 ) << 1		9543551	1		<<			
ANR	9544830	BitAndExpression	colors & 3		9543551	0		&			
ANR	9544831	Identifier	colors		9543551	0					
ANR	9544832	PrimaryExpression	3		9543551	1					
ANR	9544833	PrimaryExpression	1		9543551	1					
ANR	9544834	IdentifierDeclStatement	int cshift = 8 - shift ;	276:16:8198:8220	9543551	1	True				
ANR	9544835	IdentifierDecl	cshift = 8 - shift		9543551	0					
ANR	9544836	IdentifierDeclType	int		9543551	0					
ANR	9544837	Identifier	cshift		9543551	1					
ANR	9544838	AssignmentExpression	cshift = 8 - shift		9543551	2		=			
ANR	9544839	Identifier	cshift		9543551	0					
ANR	9544840	AdditiveExpression	8 - shift		9543551	1		-			
ANR	9544841	PrimaryExpression	8		9543551	0					
ANR	9544842	Identifier	shift		9543551	1					
ANR	9544843	ExpressionStatement	"DECODE_UNALIGNED_LOOP ( shift , cshift , ADD4X2 ( * p , t ) )"	278:16:8239:8290	9543551	2	True				
ANR	9544844	CallExpression	"DECODE_UNALIGNED_LOOP ( shift , cshift , ADD4X2 ( * p , t ) )"		9543551	0					
ANR	9544845	Callee	DECODE_UNALIGNED_LOOP		9543551	0					
ANR	9544846	Identifier	DECODE_UNALIGNED_LOOP		9543551	0					
ANR	9544847	ArgumentList	shift		9543551	1					
ANR	9544848	Argument	shift		9543551	0					
ANR	9544849	Identifier	shift		9543551	0					
ANR	9544850	Argument	cshift		9543551	1					
ANR	9544851	Identifier	cshift		9543551	0					
ANR	9544852	Argument	"ADD4X2 ( * p , t )"		9543551	2					
ANR	9544853	CallExpression	"ADD4X2 ( * p , t )"		9543551	0					
ANR	9544854	Callee	ADD4X2		9543551	0					
ANR	9544855	Identifier	ADD4X2		9543551	0					
ANR	9544856	ArgumentList	* p		9543551	1					
ANR	9544857	Argument	* p		9543551	0					
ANR	9544858	UnaryOperationExpression	* p		9543551	0					
ANR	9544859	UnaryOperator	*		9543551	0					
ANR	9544860	Identifier	p		9543551	1					
ANR	9544861	Argument	t		9543551	1					
ANR	9544862	Identifier	t		9543551	0					
ANR	9544863	ElseStatement	else		9543551	0					
ANR	9544864	CompoundStatement		190:19:5922:5922	9543551	0					
ANR	9544865	ExpressionStatement	"DECODE_ALIGNED_LOOP ( ADD4X2 ( t , ss -> prev [ ci ] ) )"	280:16:8329:8373	9543551	0	True				
ANR	9544866	CallExpression	"DECODE_ALIGNED_LOOP ( ADD4X2 ( t , ss -> prev [ ci ] ) )"		9543551	0					
ANR	9544867	Callee	DECODE_ALIGNED_LOOP		9543551	0					
ANR	9544868	Identifier	DECODE_ALIGNED_LOOP		9543551	0					
ANR	9544869	ArgumentList	"ADD4X2 ( t , ss -> prev [ ci ] )"		9543551	1					
ANR	9544870	Argument	"ADD4X2 ( t , ss -> prev [ ci ] )"		9543551	0					
ANR	9544871	CallExpression	"ADD4X2 ( t , ss -> prev [ ci ] )"		9543551	0					
ANR	9544872	Callee	ADD4X2		9543551	0					
ANR	9544873	Identifier	ADD4X2		9543551	0					
ANR	9544874	ArgumentList	t		9543551	1					
ANR	9544875	Argument	t		9543551	0					
ANR	9544876	Identifier	t		9543551	0					
ANR	9544877	Argument	ss -> prev [ ci ]		9543551	1					
ANR	9544878	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9544879	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9544880	Identifier	ss		9543551	0					
ANR	9544881	Identifier	prev		9543551	1					
ANR	9544882	Identifier	ci		9543551	1					
ANR	9544883	BreakStatement	break ;	282:12:8401:8406	9543551	236	True				
ANR	9544884	Statement	case	284:8:8417:8420	9543551	237	True				
ANR	9544885	Statement	cDecode	284:13:8422:8428	9543551	238	True				
ANR	9544886	Statement	+	284:21:8430:8430	9543551	239	True				
ANR	9544887	Statement	cBits2	284:23:8432:8437	9543551	240	True				
ANR	9544888	Statement	+	284:30:8439:8439	9543551	241	True				
ANR	9544889	Label	1 :	284:32:8441:8442	9543551	242	True				
ANR	9544890	ExpressionStatement	"DECODE1_LOOP ( * p + ( s0 << 6 ) , ( t = ADD4X2 ( t >> 2 , t ) , ADD4X2 ( t >> 4 , t ) ) )"	285:12:8456:8553	9543551	243	True				
ANR	9544891	CallExpression	"DECODE1_LOOP ( * p + ( s0 << 6 ) , ( t = ADD4X2 ( t >> 2 , t ) , ADD4X2 ( t >> 4 , t ) ) )"		9543551	0					
ANR	9544892	Callee	DECODE1_LOOP		9543551	0					
ANR	9544893	Identifier	DECODE1_LOOP		9543551	0					
ANR	9544894	ArgumentList	* p + ( s0 << 6 )		9543551	1					
ANR	9544895	Argument	* p + ( s0 << 6 )		9543551	0					
ANR	9544896	AdditiveExpression	* p + ( s0 << 6 )		9543551	0		+			
ANR	9544897	UnaryOperationExpression	* p		9543551	0					
ANR	9544898	UnaryOperator	*		9543551	0					
ANR	9544899	Identifier	p		9543551	1					
ANR	9544900	ShiftExpression	s0 << 6		9543551	1		<<			
ANR	9544901	Identifier	s0		9543551	0					
ANR	9544902	PrimaryExpression	6		9543551	1					
ANR	9544903	Argument	"t = ADD4X2 ( t >> 2 , t ) , ADD4X2 ( t >> 4 , t )"		9543551	1					
ANR	9544904	Expression	"t = ADD4X2 ( t >> 2 , t ) , ADD4X2 ( t >> 4 , t )"		9543551	0					
ANR	9544905	AssignmentExpression	"t = ADD4X2 ( t >> 2 , t )"		9543551	0		=			
ANR	9544906	Identifier	t		9543551	0					
ANR	9544907	CallExpression	"ADD4X2 ( t >> 2 , t )"		9543551	1					
ANR	9544908	Callee	ADD4X2		9543551	0					
ANR	9544909	Identifier	ADD4X2		9543551	0					
ANR	9544910	ArgumentList	t >> 2		9543551	1					
ANR	9544911	Argument	t >> 2		9543551	0					
ANR	9544912	ShiftExpression	t >> 2		9543551	0		>>			
ANR	9544913	Identifier	t		9543551	0					
ANR	9544914	PrimaryExpression	2		9543551	1					
ANR	9544915	Argument	t		9543551	1					
ANR	9544916	Identifier	t		9543551	0					
ANR	9544917	CallExpression	"ADD4X2 ( t >> 4 , t )"		9543551	1					
ANR	9544918	Callee	ADD4X2		9543551	0					
ANR	9544919	Identifier	ADD4X2		9543551	0					
ANR	9544920	ArgumentList	t >> 4		9543551	1					
ANR	9544921	Argument	t >> 4		9543551	0					
ANR	9544922	ShiftExpression	t >> 4		9543551	0		>>			
ANR	9544923	Identifier	t		9543551	0					
ANR	9544924	PrimaryExpression	4		9543551	1					
ANR	9544925	Argument	t		9543551	1					
ANR	9544926	Identifier	t		9543551	0					
ANR	9544927	Statement	case	287:8:8563:8566	9543551	244	True				
ANR	9544928	Statement	cDecode	287:13:8568:8574	9543551	245	True				
ANR	9544929	Statement	+	287:21:8576:8576	9543551	246	True				
ANR	9544930	Statement	cBits2	287:23:8578:8583	9543551	247	True				
ANR	9544931	Statement	+	287:30:8585:8585	9543551	248	True				
ANR	9544932	Label	2 :	287:32:8587:8588	9543551	249	True				
ANR	9544933	ExpressionStatement	"DECODE1_LOOP ( * p , ( t = ADD4X2 ( t , s0 << 4 ) , ADD4X2 ( t >> 4 , t ) ) )"	288:12:8602:8663	9543551	250	True				
ANR	9544934	CallExpression	"DECODE1_LOOP ( * p , ( t = ADD4X2 ( t , s0 << 4 ) , ADD4X2 ( t >> 4 , t ) ) )"		9543551	0					
ANR	9544935	Callee	DECODE1_LOOP		9543551	0					
ANR	9544936	Identifier	DECODE1_LOOP		9543551	0					
ANR	9544937	ArgumentList	* p		9543551	1					
ANR	9544938	Argument	* p		9543551	0					
ANR	9544939	UnaryOperationExpression	* p		9543551	0					
ANR	9544940	UnaryOperator	*		9543551	0					
ANR	9544941	Identifier	p		9543551	1					
ANR	9544942	Argument	"t = ADD4X2 ( t , s0 << 4 ) , ADD4X2 ( t >> 4 , t )"		9543551	1					
ANR	9544943	Expression	"t = ADD4X2 ( t , s0 << 4 ) , ADD4X2 ( t >> 4 , t )"		9543551	0					
ANR	9544944	AssignmentExpression	"t = ADD4X2 ( t , s0 << 4 )"		9543551	0		=			
ANR	9544945	Identifier	t		9543551	0					
ANR	9544946	CallExpression	"ADD4X2 ( t , s0 << 4 )"		9543551	1					
ANR	9544947	Callee	ADD4X2		9543551	0					
ANR	9544948	Identifier	ADD4X2		9543551	0					
ANR	9544949	ArgumentList	t		9543551	1					
ANR	9544950	Argument	t		9543551	0					
ANR	9544951	Identifier	t		9543551	0					
ANR	9544952	Argument	s0 << 4		9543551	1					
ANR	9544953	ShiftExpression	s0 << 4		9543551	0		<<			
ANR	9544954	Identifier	s0		9543551	0					
ANR	9544955	PrimaryExpression	4		9543551	1					
ANR	9544956	CallExpression	"ADD4X2 ( t >> 4 , t )"		9543551	1					
ANR	9544957	Callee	ADD4X2		9543551	0					
ANR	9544958	Identifier	ADD4X2		9543551	0					
ANR	9544959	ArgumentList	t >> 4		9543551	1					
ANR	9544960	Argument	t >> 4		9543551	0					
ANR	9544961	ShiftExpression	t >> 4		9543551	0		>>			
ANR	9544962	Identifier	t		9543551	0					
ANR	9544963	PrimaryExpression	4		9543551	1					
ANR	9544964	Argument	t		9543551	1					
ANR	9544965	Identifier	t		9543551	0					
ANR	9544966	Statement	case	289:8:8673:8676	9543551	251	True				
ANR	9544967	Statement	cDecode	289:13:8678:8684	9543551	252	True				
ANR	9544968	Statement	+	289:21:8686:8686	9543551	253	True				
ANR	9544969	Statement	cBits2	289:23:8688:8693	9543551	254	True				
ANR	9544970	Statement	+	289:30:8695:8695	9543551	255	True				
ANR	9544971	Label	3 :	289:32:8697:8698	9543551	256	True				
ANR	9544972	ExpressionStatement	"DECODE1_LOOP ( * p , ( t = ADD4X2 ( t , s0 << 2 ) , ADD4X2 ( t >> 6 , t ) ) )"	290:12:8712:8773	9543551	257	True				
ANR	9544973	CallExpression	"DECODE1_LOOP ( * p , ( t = ADD4X2 ( t , s0 << 2 ) , ADD4X2 ( t >> 6 , t ) ) )"		9543551	0					
ANR	9544974	Callee	DECODE1_LOOP		9543551	0					
ANR	9544975	Identifier	DECODE1_LOOP		9543551	0					
ANR	9544976	ArgumentList	* p		9543551	1					
ANR	9544977	Argument	* p		9543551	0					
ANR	9544978	UnaryOperationExpression	* p		9543551	0					
ANR	9544979	UnaryOperator	*		9543551	0					
ANR	9544980	Identifier	p		9543551	1					
ANR	9544981	Argument	"t = ADD4X2 ( t , s0 << 2 ) , ADD4X2 ( t >> 6 , t )"		9543551	1					
ANR	9544982	Expression	"t = ADD4X2 ( t , s0 << 2 ) , ADD4X2 ( t >> 6 , t )"		9543551	0					
ANR	9544983	AssignmentExpression	"t = ADD4X2 ( t , s0 << 2 )"		9543551	0		=			
ANR	9544984	Identifier	t		9543551	0					
ANR	9544985	CallExpression	"ADD4X2 ( t , s0 << 2 )"		9543551	1					
ANR	9544986	Callee	ADD4X2		9543551	0					
ANR	9544987	Identifier	ADD4X2		9543551	0					
ANR	9544988	ArgumentList	t		9543551	1					
ANR	9544989	Argument	t		9543551	0					
ANR	9544990	Identifier	t		9543551	0					
ANR	9544991	Argument	s0 << 2		9543551	1					
ANR	9544992	ShiftExpression	s0 << 2		9543551	0		<<			
ANR	9544993	Identifier	s0		9543551	0					
ANR	9544994	PrimaryExpression	2		9543551	1					
ANR	9544995	CallExpression	"ADD4X2 ( t >> 6 , t )"		9543551	1					
ANR	9544996	Callee	ADD4X2		9543551	0					
ANR	9544997	Identifier	ADD4X2		9543551	0					
ANR	9544998	ArgumentList	t >> 6		9543551	1					
ANR	9544999	Argument	t >> 6		9543551	0					
ANR	9545000	ShiftExpression	t >> 6		9543551	0		>>			
ANR	9545001	Identifier	t		9543551	0					
ANR	9545002	PrimaryExpression	6		9543551	1					
ANR	9545003	Argument	t		9543551	1					
ANR	9545004	Identifier	t		9543551	0					
ANR	9545005	Statement	case	291:8:8783:8786	9543551	258	True				
ANR	9545006	Statement	cDecode	291:13:8788:8794	9543551	259	True				
ANR	9545007	Statement	+	291:21:8796:8796	9543551	260	True				
ANR	9545008	Statement	cBits2	291:23:8798:8803	9543551	261	True				
ANR	9545009	Statement	+	291:30:8805:8805	9543551	262	True				
ANR	9545010	Label	4 :	291:32:8807:8808	9543551	263	True				
ANR	9545011	ExpressionStatement	"DECODE1_LOOP ( * p , ADD4X2 ( t , s0 ) )"	292:12:8822:8853	9543551	264	True				
ANR	9545012	CallExpression	"DECODE1_LOOP ( * p , ADD4X2 ( t , s0 ) )"		9543551	0					
ANR	9545013	Callee	DECODE1_LOOP		9543551	0					
ANR	9545014	Identifier	DECODE1_LOOP		9543551	0					
ANR	9545015	ArgumentList	* p		9543551	1					
ANR	9545016	Argument	* p		9543551	0					
ANR	9545017	UnaryOperationExpression	* p		9543551	0					
ANR	9545018	UnaryOperator	*		9543551	0					
ANR	9545019	Identifier	p		9543551	1					
ANR	9545020	Argument	"ADD4X2 ( t , s0 )"		9543551	1					
ANR	9545021	CallExpression	"ADD4X2 ( t , s0 )"		9543551	0					
ANR	9545022	Callee	ADD4X2		9543551	0					
ANR	9545023	Identifier	ADD4X2		9543551	0					
ANR	9545024	ArgumentList	t		9543551	1					
ANR	9545025	Argument	t		9543551	0					
ANR	9545026	Identifier	t		9543551	0					
ANR	9545027	Argument	s0		9543551	1					
ANR	9545028	Identifier	s0		9543551	0					
ANR	9545029	Statement	undef	294:1:8857:8861	9543551	265	True				
ANR	9545030	Statement	ADD4X2	294:7:8863:8868	9543551	266	True				
ANR	9545031	Statement	undef	295:1:8871:8875	9543551	267	True				
ANR	9545032	Statement	SUB4X2	295:7:8877:8882	9543551	268	True				
ANR	9545033	Statement	define	299:1:8926:8931	9543551	269	True				
ANR	9545034	Statement	ADD2X4	299:8:8933:8938	9543551	270	True				
ANR	9545035	Statement	(	299:14:8939:8939	9543551	271	True				
ANR	9545036	Statement	a	299:15:8940:8940	9543551	272	True				
ANR	9545037	Statement	","	299:16:8941:8941	9543551	273	True				
ANR	9545038	Statement	b	299:18:8943:8943	9543551	274	True				
ANR	9545039	Statement	)	299:19:8944:8944	9543551	275	True				
ANR	9545040	Statement	(	299:21:8946:8946	9543551	276	True				
ANR	9545041	Statement	(	299:23:8948:8948	9543551	277	True				
ANR	9545042	Statement	(	299:24:8949:8949	9543551	278	True				
ANR	9545043	Statement	(	299:25:8950:8950	9543551	279	True				
ANR	9545044	Statement	a	299:26:8951:8951	9543551	280	True				
ANR	9545045	Statement	)	299:27:8952:8952	9543551	281	True				
ANR	9545046	Statement	+	299:29:8954:8954	9543551	282	True				
ANR	9545047	Statement	(	299:31:8956:8956	9543551	283	True				
ANR	9545048	Statement	b	299:32:8957:8957	9543551	284	True				
ANR	9545049	Statement	)	299:33:8958:8958	9543551	285	True				
ANR	9545050	Statement	)	299:34:8959:8959	9543551	286	True				
ANR	9545051	Statement	&	299:36:8961:8961	9543551	287	True				
ANR	9545052	Statement	0xf	299:38:8963:8965	9543551	288	True				
ANR	9545053	Statement	)	299:41:8966:8966	9543551	289	True				
ANR	9545054	Statement	+	299:43:8968:8968	9543551	290	True				
ANR	9545055	Statement	(	299:45:8970:8970	9543551	291	True				
ANR	9545056	Statement	(	299:46:8971:8971	9543551	292	True				
ANR	9545057	Statement	a	299:47:8972:8972	9543551	293	True				
ANR	9545058	Statement	)	299:48:8973:8973	9543551	294	True				
ANR	9545059	Statement	&	299:50:8975:8975	9543551	295	True				
ANR	9545060	Statement	0xf0	299:52:8977:8980	9543551	296	True				
ANR	9545061	Statement	)	299:56:8981:8981	9543551	297	True				
ANR	9545062	Statement	+	299:58:8983:8983	9543551	298	True				
ANR	9545063	Statement	(	299:60:8985:8985	9543551	299	True				
ANR	9545064	Statement	(	299:61:8986:8986	9543551	300	True				
ANR	9545065	Statement	b	299:62:8987:8987	9543551	301	True				
ANR	9545066	Statement	)	299:63:8988:8988	9543551	302	True				
ANR	9545067	Statement	&	299:65:8990:8990	9543551	303	True				
ANR	9545068	Statement	0xf0	299:67:8992:8995	9543551	304	True				
ANR	9545069	Statement	)	299:71:8996:8996	9543551	305	True				
ANR	9545070	Statement	)	299:73:8998:8998	9543551	306	True				
ANR	9545071	Statement	define	300:1:9001:9006	9543551	307	True				
ANR	9545072	Statement	ADD2X4R4	300:8:9008:9015	9543551	308	True				
ANR	9545073	Statement	(	300:16:9016:9016	9543551	309	True				
ANR	9545074	Statement	a	300:17:9017:9017	9543551	310	True				
ANR	9545075	Statement	)	300:18:9018:9018	9543551	311	True				
ANR	9545076	Statement	(	300:20:9020:9020	9543551	312	True				
ANR	9545077	Statement	(	300:22:9022:9022	9543551	313	True				
ANR	9545078	Statement	(	300:23:9023:9023	9543551	314	True				
ANR	9545079	Statement	(	300:24:9024:9024	9543551	315	True				
ANR	9545080	Statement	a	300:25:9025:9025	9543551	316	True				
ANR	9545081	Statement	)	300:26:9026:9026	9543551	317	True				
ANR	9545082	Statement	+	300:28:9028:9028	9543551	318	True				
ANR	9545083	Statement	(	300:30:9030:9030	9543551	319	True				
ANR	9545084	Statement	(	300:31:9031:9031	9543551	320	True				
ANR	9545085	Statement	a	300:32:9032:9032	9543551	321	True				
ANR	9545086	Statement	)	300:33:9033:9033	9543551	322	True				
ANR	9545087	Statement	>>	300:35:9035:9036	9543551	323	True				
ANR	9545088	Statement	4	300:38:9038:9038	9543551	324	True				
ANR	9545089	Statement	)	300:39:9039:9039	9543551	325	True				
ANR	9545090	Statement	)	300:40:9040:9040	9543551	326	True				
ANR	9545091	Statement	&	300:42:9042:9042	9543551	327	True				
ANR	9545092	Statement	0xf	300:44:9044:9046	9543551	328	True				
ANR	9545093	Statement	)	300:47:9047:9047	9543551	329	True				
ANR	9545094	Statement	+	300:49:9049:9049	9543551	330	True				
ANR	9545095	Statement	(	300:51:9051:9051	9543551	331	True				
ANR	9545096	Statement	(	300:52:9052:9052	9543551	332	True				
ANR	9545097	Statement	a	300:53:9053:9053	9543551	333	True				
ANR	9545098	Statement	)	300:54:9054:9054	9543551	334	True				
ANR	9545099	Statement	&	300:56:9056:9056	9543551	335	True				
ANR	9545100	Statement	0xf0	300:58:9058:9061	9543551	336	True				
ANR	9545101	Statement	)	300:62:9062:9062	9543551	337	True				
ANR	9545102	Statement	)	300:64:9064:9064	9543551	338	True				
ANR	9545103	Statement	define	301:1:9067:9072	9543551	339	True				
ANR	9545104	Statement	SUB2X4	301:8:9074:9079	9543551	340	True				
ANR	9545105	Statement	(	301:14:9080:9080	9543551	341	True				
ANR	9545106	Statement	a	301:15:9081:9081	9543551	342	True				
ANR	9545107	Statement	","	301:16:9082:9082	9543551	343	True				
ANR	9545108	Statement	b	301:18:9084:9084	9543551	344	True				
ANR	9545109	Statement	)	301:19:9085:9085	9543551	345	True				
ANR	9545110	Statement	(	301:21:9087:9087	9543551	346	True				
ANR	9545111	Statement	(	301:23:9089:9089	9543551	347	True				
ANR	9545112	Statement	(	301:24:9090:9090	9543551	348	True				
ANR	9545113	Statement	(	301:25:9091:9091	9543551	349	True				
ANR	9545114	Statement	a	301:26:9092:9092	9543551	350	True				
ANR	9545115	Statement	)	301:27:9093:9093	9543551	351	True				
ANR	9545116	Statement	-	301:29:9095:9095	9543551	352	True				
ANR	9545117	Statement	(	301:31:9097:9097	9543551	353	True				
ANR	9545118	Statement	b	301:32:9098:9098	9543551	354	True				
ANR	9545119	Statement	)	301:33:9099:9099	9543551	355	True				
ANR	9545120	Statement	)	301:34:9100:9100	9543551	356	True				
ANR	9545121	Statement	&	301:36:9102:9102	9543551	357	True				
ANR	9545122	Statement	0xf	301:38:9104:9106	9543551	358	True				
ANR	9545123	Statement	)	301:41:9107:9107	9543551	359	True				
ANR	9545124	Statement	+	301:43:9109:9109	9543551	360	True				
ANR	9545125	Statement	(	301:45:9111:9111	9543551	361	True				
ANR	9545126	Statement	(	301:46:9112:9112	9543551	362	True				
ANR	9545127	Statement	a	301:47:9113:9113	9543551	363	True				
ANR	9545128	Statement	)	301:48:9114:9114	9543551	364	True				
ANR	9545129	Statement	&	301:50:9116:9116	9543551	365	True				
ANR	9545130	Statement	0xf0	301:52:9118:9121	9543551	366	True				
ANR	9545131	Statement	)	301:56:9122:9122	9543551	367	True				
ANR	9545132	Statement	-	301:58:9124:9124	9543551	368	True				
ANR	9545133	Statement	(	301:60:9126:9126	9543551	369	True				
ANR	9545134	Statement	(	301:61:9127:9127	9543551	370	True				
ANR	9545135	Statement	b	301:62:9128:9128	9543551	371	True				
ANR	9545136	Statement	)	301:63:9129:9129	9543551	372	True				
ANR	9545137	Statement	&	301:65:9131:9131	9543551	373	True				
ANR	9545138	Statement	0xf0	301:67:9133:9136	9543551	374	True				
ANR	9545139	Statement	)	301:71:9137:9137	9543551	375	True				
ANR	9545140	Statement	)	301:73:9139:9139	9543551	376	True				
ANR	9545141	Statement	define	302:1:9142:9147	9543551	377	True				
ANR	9545142	Statement	SUB2X4R4	302:8:9149:9156	9543551	378	True				
ANR	9545143	Statement	(	302:16:9157:9157	9543551	379	True				
ANR	9545144	Statement	a	302:17:9158:9158	9543551	380	True				
ANR	9545145	Statement	)	302:18:9159:9159	9543551	381	True				
ANR	9545146	Statement	(	302:20:9161:9161	9543551	382	True				
ANR	9545147	Statement	(	302:22:9163:9163	9543551	383	True				
ANR	9545148	Statement	(	302:23:9164:9164	9543551	384	True				
ANR	9545149	Statement	(	302:24:9165:9165	9543551	385	True				
ANR	9545150	Statement	a	302:25:9166:9166	9543551	386	True				
ANR	9545151	Statement	)	302:26:9167:9167	9543551	387	True				
ANR	9545152	Statement	-	302:28:9169:9169	9543551	388	True				
ANR	9545153	Statement	(	302:30:9171:9171	9543551	389	True				
ANR	9545154	Statement	(	302:31:9172:9172	9543551	390	True				
ANR	9545155	Statement	a	302:32:9173:9173	9543551	391	True				
ANR	9545156	Statement	)	302:33:9174:9174	9543551	392	True				
ANR	9545157	Statement	>>	302:35:9176:9177	9543551	393	True				
ANR	9545158	Statement	4	302:38:9179:9179	9543551	394	True				
ANR	9545159	Statement	)	302:39:9180:9180	9543551	395	True				
ANR	9545160	Statement	)	302:40:9181:9181	9543551	396	True				
ANR	9545161	Statement	&	302:42:9183:9183	9543551	397	True				
ANR	9545162	Statement	0xf	302:44:9185:9187	9543551	398	True				
ANR	9545163	Statement	)	302:47:9188:9188	9543551	399	True				
ANR	9545164	Statement	+	302:49:9190:9190	9543551	400	True				
ANR	9545165	Statement	(	302:51:9192:9192	9543551	401	True				
ANR	9545166	Statement	(	302:52:9193:9193	9543551	402	True				
ANR	9545167	Statement	a	302:53:9194:9194	9543551	403	True				
ANR	9545168	Statement	)	302:54:9195:9195	9543551	404	True				
ANR	9545169	Statement	&	302:56:9197:9197	9543551	405	True				
ANR	9545170	Statement	0xf0	302:58:9199:9202	9543551	406	True				
ANR	9545171	Statement	)	302:62:9203:9203	9543551	407	True				
ANR	9545172	Statement	)	302:64:9205:9205	9543551	408	True				
ANR	9545173	Statement	case	304:8:9216:9219	9543551	409	True				
ANR	9545174	Statement	cEncode	304:13:9221:9227	9543551	410	True				
ANR	9545175	Statement	+	304:21:9229:9229	9543551	411	True				
ANR	9545176	Statement	cBits4	304:23:9231:9236	9543551	412	True				
ANR	9545177	Statement	+	304:30:9238:9238	9543551	413	True				
ANR	9545178	Label	0 :	304:32:9240:9241	9543551	414	True				
ANR	9545179	Statement	case	305:8:9251:9254	9543551	415	True				
ANR	9545180	Statement	cEncode	305:13:9256:9262	9543551	416	True				
ANR	9545181	Statement	+	305:21:9264:9264	9543551	417	True				
ANR	9545182	Statement	cBits4	305:23:9266:9271	9543551	418	True				
ANR	9545183	Statement	+	305:30:9273:9273	9543551	419	True				
ANR	9545184	Label	2 :	305:32:9275:9276	9543551	420	True				
ANR	9545185	Label	enc4 :	306:4:9282:9286	9543551	421	True				
ANR	9545186	Identifier	enc4		9543551	0					
ANR	9545187	IfStatement	if ( colors & 1 )		9543551	422					
ANR	9545188	Condition	colors & 1	307:16:9304:9313	9543551	0	True				
ANR	9545189	BitAndExpression	colors & 1		9543551	0		&			
ANR	9545190	Identifier	colors		9543551	0					
ANR	9545191	PrimaryExpression	1		9543551	1					
ANR	9545192	CompoundStatement		218:28:6927:6927	9543551	1					
ANR	9545193	ExpressionStatement	"ENCODE_UNALIGNED_LOOP ( 4 , 4 , SUB2X4 ( * p , t ) )"	308:16:9334:9376	9543551	0	True				
ANR	9545194	CallExpression	"ENCODE_UNALIGNED_LOOP ( 4 , 4 , SUB2X4 ( * p , t ) )"		9543551	0					
ANR	9545195	Callee	ENCODE_UNALIGNED_LOOP		9543551	0					
ANR	9545196	Identifier	ENCODE_UNALIGNED_LOOP		9543551	0					
ANR	9545197	ArgumentList	4		9543551	1					
ANR	9545198	Argument	4		9543551	0					
ANR	9545199	PrimaryExpression	4		9543551	0					
ANR	9545200	Argument	4		9543551	1					
ANR	9545201	PrimaryExpression	4		9543551	0					
ANR	9545202	Argument	"SUB2X4 ( * p , t )"		9543551	2					
ANR	9545203	CallExpression	"SUB2X4 ( * p , t )"		9543551	0					
ANR	9545204	Callee	SUB2X4		9543551	0					
ANR	9545205	Identifier	SUB2X4		9543551	0					
ANR	9545206	ArgumentList	* p		9543551	1					
ANR	9545207	Argument	* p		9543551	0					
ANR	9545208	UnaryOperationExpression	* p		9543551	0					
ANR	9545209	UnaryOperator	*		9543551	0					
ANR	9545210	Identifier	p		9543551	1					
ANR	9545211	Argument	t		9543551	1					
ANR	9545212	Identifier	t		9543551	0					
ANR	9545213	ElseStatement	else		9543551	0					
ANR	9545214	CompoundStatement		220:19:7008:7008	9543551	0					
ANR	9545215	ExpressionStatement	"ENCODE_ALIGNED_LOOP ( SUB2X4 ( t , ss -> prev [ ci ] ) )"	310:16:9415:9459	9543551	0	True				
ANR	9545216	CallExpression	"ENCODE_ALIGNED_LOOP ( SUB2X4 ( t , ss -> prev [ ci ] ) )"		9543551	0					
ANR	9545217	Callee	ENCODE_ALIGNED_LOOP		9543551	0					
ANR	9545218	Identifier	ENCODE_ALIGNED_LOOP		9543551	0					
ANR	9545219	ArgumentList	"SUB2X4 ( t , ss -> prev [ ci ] )"		9543551	1					
ANR	9545220	Argument	"SUB2X4 ( t , ss -> prev [ ci ] )"		9543551	0					
ANR	9545221	CallExpression	"SUB2X4 ( t , ss -> prev [ ci ] )"		9543551	0					
ANR	9545222	Callee	SUB2X4		9543551	0					
ANR	9545223	Identifier	SUB2X4		9543551	0					
ANR	9545224	ArgumentList	t		9543551	1					
ANR	9545225	Argument	t		9543551	0					
ANR	9545226	Identifier	t		9543551	0					
ANR	9545227	Argument	ss -> prev [ ci ]		9543551	1					
ANR	9545228	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9545229	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545230	Identifier	ss		9543551	0					
ANR	9545231	Identifier	prev		9543551	1					
ANR	9545232	Identifier	ci		9543551	1					
ANR	9545233	BreakStatement	break ;	312:12:9487:9492	9543551	423	True				
ANR	9545234	Statement	case	314:8:9503:9506	9543551	424	True				
ANR	9545235	Statement	cEncode	314:13:9508:9514	9543551	425	True				
ANR	9545236	Statement	+	314:21:9516:9516	9543551	426	True				
ANR	9545237	Statement	cBits4	314:23:9518:9523	9543551	427	True				
ANR	9545238	Statement	+	314:30:9525:9525	9543551	428	True				
ANR	9545239	Label	1 :	314:32:9527:9528	9543551	429	True				
ANR	9545240	ExpressionStatement	ENCODE1_LOOP ( ( ( t - ( s0 << 4 ) ) & 0xf0 ) | ( ( t - ( t >> 4 ) ) & 0xf ) )	315:12:9542:9605	9543551	430	True				
ANR	9545241	CallExpression	ENCODE1_LOOP ( ( ( t - ( s0 << 4 ) ) & 0xf0 ) | ( ( t - ( t >> 4 ) ) & 0xf ) )		9543551	0					
ANR	9545242	Callee	ENCODE1_LOOP		9543551	0					
ANR	9545243	Identifier	ENCODE1_LOOP		9543551	0					
ANR	9545244	ArgumentList	( ( t - ( s0 << 4 ) ) & 0xf0 ) | ( ( t - ( t >> 4 ) ) & 0xf )		9543551	1					
ANR	9545245	Argument	( ( t - ( s0 << 4 ) ) & 0xf0 ) | ( ( t - ( t >> 4 ) ) & 0xf )		9543551	0					
ANR	9545246	InclusiveOrExpression	( ( t - ( s0 << 4 ) ) & 0xf0 ) | ( ( t - ( t >> 4 ) ) & 0xf )		9543551	0		|			
ANR	9545247	BitAndExpression	( t - ( s0 << 4 ) ) & 0xf0		9543551	0		&			
ANR	9545248	AdditiveExpression	t - ( s0 << 4 )		9543551	0		-			
ANR	9545249	Identifier	t		9543551	0					
ANR	9545250	ShiftExpression	s0 << 4		9543551	1		<<			
ANR	9545251	Identifier	s0		9543551	0					
ANR	9545252	PrimaryExpression	4		9543551	1					
ANR	9545253	PrimaryExpression	0xf0		9543551	1					
ANR	9545254	BitAndExpression	( t - ( t >> 4 ) ) & 0xf		9543551	1		&			
ANR	9545255	AdditiveExpression	t - ( t >> 4 )		9543551	0		-			
ANR	9545256	Identifier	t		9543551	0					
ANR	9545257	ShiftExpression	t >> 4		9543551	1		>>			
ANR	9545258	Identifier	t		9543551	0					
ANR	9545259	PrimaryExpression	4		9543551	1					
ANR	9545260	PrimaryExpression	0xf		9543551	1					
ANR	9545261	Statement	case	317:8:9616:9619	9543551	431	True				
ANR	9545262	Statement	cEncode	317:13:9621:9627	9543551	432	True				
ANR	9545263	Statement	+	317:21:9629:9629	9543551	433	True				
ANR	9545264	Statement	cBits4	317:23:9631:9636	9543551	434	True				
ANR	9545265	Statement	+	317:30:9638:9638	9543551	435	True				
ANR	9545266	Label	3 :	317:32:9640:9641	9543551	436	True				
ANR	9545267	CompoundStatement		229:12:7268:7289	9543551	437					
ANR	9545268	IdentifierDeclStatement	uint s1 = ss -> prev [ 1 ] ;	318:12:9657:9678	9543551	0	True				
ANR	9545269	IdentifierDecl	s1 = ss -> prev [ 1 ]		9543551	0					
ANR	9545270	IdentifierDeclType	uint		9543551	0					
ANR	9545271	Identifier	s1		9543551	1					
ANR	9545272	AssignmentExpression	s1 = ss -> prev [ 1 ]		9543551	2		=			
ANR	9545273	Identifier	s1		9543551	0					
ANR	9545274	ArrayIndexing	ss -> prev [ 1 ]		9543551	1					
ANR	9545275	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545276	Identifier	ss		9543551	0					
ANR	9545277	Identifier	prev		9543551	1					
ANR	9545278	PrimaryExpression	1		9543551	1					
ANR	9545279	ExpressionStatement	"LOOP_BY ( 1 , ( t = * p , * q = ( ( t - ( s0 << 4 ) ) & 0xf0 ) | ( ( t - ( s1 >> 4 ) ) & 0xf ) , s0 = s1 , s1 = t ) )"	320:12:9693:9849	9543551	1	True				
ANR	9545280	CallExpression	"LOOP_BY ( 1 , ( t = * p , * q = ( ( t - ( s0 << 4 ) ) & 0xf0 ) | ( ( t - ( s1 >> 4 ) ) & 0xf ) , s0 = s1 , s1 = t ) )"		9543551	0					
ANR	9545281	Callee	LOOP_BY		9543551	0					
ANR	9545282	Identifier	LOOP_BY		9543551	0					
ANR	9545283	ArgumentList	1		9543551	1					
ANR	9545284	Argument	1		9543551	0					
ANR	9545285	PrimaryExpression	1		9543551	0					
ANR	9545286	Argument	"t = * p , * q = ( ( t - ( s0 << 4 ) ) & 0xf0 ) | ( ( t - ( s1 >> 4 ) ) & 0xf ) , s0 = s1 , s1 = t"		9543551	1					
ANR	9545287	Expression	"t = * p , * q = ( ( t - ( s0 << 4 ) ) & 0xf0 ) | ( ( t - ( s1 >> 4 ) ) & 0xf ) , s0 = s1 , s1 = t"		9543551	0					
ANR	9545288	AssignmentExpression	t = * p		9543551	0		=			
ANR	9545289	Identifier	t		9543551	0					
ANR	9545290	UnaryOperationExpression	* p		9543551	1					
ANR	9545291	UnaryOperator	*		9543551	0					
ANR	9545292	Identifier	p		9543551	1					
ANR	9545293	Expression	"* q = ( ( t - ( s0 << 4 ) ) & 0xf0 ) | ( ( t - ( s1 >> 4 ) ) & 0xf ) , s0 = s1 , s1 = t"		9543551	1					
ANR	9545294	AssignmentExpression	* q = ( ( t - ( s0 << 4 ) ) & 0xf0 ) | ( ( t - ( s1 >> 4 ) ) & 0xf )		9543551	0		=			
ANR	9545295	UnaryOperationExpression	* q		9543551	0					
ANR	9545296	UnaryOperator	*		9543551	0					
ANR	9545297	Identifier	q		9543551	1					
ANR	9545298	InclusiveOrExpression	( ( t - ( s0 << 4 ) ) & 0xf0 ) | ( ( t - ( s1 >> 4 ) ) & 0xf )		9543551	1		|			
ANR	9545299	BitAndExpression	( t - ( s0 << 4 ) ) & 0xf0		9543551	0		&			
ANR	9545300	AdditiveExpression	t - ( s0 << 4 )		9543551	0		-			
ANR	9545301	Identifier	t		9543551	0					
ANR	9545302	ShiftExpression	s0 << 4		9543551	1		<<			
ANR	9545303	Identifier	s0		9543551	0					
ANR	9545304	PrimaryExpression	4		9543551	1					
ANR	9545305	PrimaryExpression	0xf0		9543551	1					
ANR	9545306	BitAndExpression	( t - ( s1 >> 4 ) ) & 0xf		9543551	1		&			
ANR	9545307	AdditiveExpression	t - ( s1 >> 4 )		9543551	0		-			
ANR	9545308	Identifier	t		9543551	0					
ANR	9545309	ShiftExpression	s1 >> 4		9543551	1		>>			
ANR	9545310	Identifier	s1		9543551	0					
ANR	9545311	PrimaryExpression	4		9543551	1					
ANR	9545312	PrimaryExpression	0xf		9543551	1					
ANR	9545313	Expression	"s0 = s1 , s1 = t"		9543551	1					
ANR	9545314	AssignmentExpression	s0 = s1		9543551	0		=			
ANR	9545315	Identifier	s0		9543551	0					
ANR	9545316	Identifier	s1		9543551	1					
ANR	9545317	AssignmentExpression	s1 = t		9543551	1		=			
ANR	9545318	Identifier	s1		9543551	0					
ANR	9545319	Identifier	t		9543551	1					
ANR	9545320	ExpressionStatement	ss -> prev [ 1 ] = s1	324:12:9863:9879	9543551	2	True				
ANR	9545321	AssignmentExpression	ss -> prev [ 1 ] = s1		9543551	0		=			
ANR	9545322	ArrayIndexing	ss -> prev [ 1 ]		9543551	0					
ANR	9545323	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545324	Identifier	ss		9543551	0					
ANR	9545325	Identifier	prev		9543551	1					
ANR	9545326	PrimaryExpression	1		9543551	1					
ANR	9545327	Identifier	s1		9543551	1					
ANR	9545328	BreakStatement	break ;	325:10:9891:9896	9543551	438	True				
ANR	9545329	Statement	case	327:8:9907:9910	9543551	439	True				
ANR	9545330	Statement	cEncode	327:13:9912:9918	9543551	440	True				
ANR	9545331	Statement	+	327:21:9920:9920	9543551	441	True				
ANR	9545332	Statement	cBits4	327:23:9922:9927	9543551	442	True				
ANR	9545333	Statement	+	327:30:9929:9929	9543551	443	True				
ANR	9545334	Label	4 :	327:32:9931:9932	9543551	444	True				
ANR	9545335	CompoundStatement		239:12:7559:7580	9543551	445					
ANR	9545336	IdentifierDeclStatement	uint s1 = ss -> prev [ 1 ] ;	328:12:9948:9969	9543551	0	True				
ANR	9545337	IdentifierDecl	s1 = ss -> prev [ 1 ]		9543551	0					
ANR	9545338	IdentifierDeclType	uint		9543551	0					
ANR	9545339	Identifier	s1		9543551	1					
ANR	9545340	AssignmentExpression	s1 = ss -> prev [ 1 ]		9543551	2		=			
ANR	9545341	Identifier	s1		9543551	0					
ANR	9545342	ArrayIndexing	ss -> prev [ 1 ]		9543551	1					
ANR	9545343	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545344	Identifier	ss		9543551	0					
ANR	9545345	Identifier	prev		9543551	1					
ANR	9545346	PrimaryExpression	1		9543551	1					
ANR	9545347	ExpressionStatement	"LOOP_BY ( 2 , ( t = p [ - 1 ] , q [ - 1 ] = SUB2X4 ( t , s0 ) , s0 = t , t = * p , * q = SUB2X4 ( t , s1 ) , s1 = t ) )"	330:12:9984:10115	9543551	1	True				
ANR	9545348	CallExpression	"LOOP_BY ( 2 , ( t = p [ - 1 ] , q [ - 1 ] = SUB2X4 ( t , s0 ) , s0 = t , t = * p , * q = SUB2X4 ( t , s1 ) , s1 = t ) )"		9543551	0					
ANR	9545349	Callee	LOOP_BY		9543551	0					
ANR	9545350	Identifier	LOOP_BY		9543551	0					
ANR	9545351	ArgumentList	2		9543551	1					
ANR	9545352	Argument	2		9543551	0					
ANR	9545353	PrimaryExpression	2		9543551	0					
ANR	9545354	Argument	"t = p [ - 1 ] , q [ - 1 ] = SUB2X4 ( t , s0 ) , s0 = t , t = * p , * q = SUB2X4 ( t , s1 ) , s1 = t"		9543551	1					
ANR	9545355	Expression	"t = p [ - 1 ] , q [ - 1 ] = SUB2X4 ( t , s0 ) , s0 = t , t = * p , * q = SUB2X4 ( t , s1 ) , s1 = t"		9543551	0					
ANR	9545356	AssignmentExpression	t = p [ - 1 ]		9543551	0		=			
ANR	9545357	Identifier	t		9543551	0					
ANR	9545358	ArrayIndexing	p [ - 1 ]		9543551	1					
ANR	9545359	Identifier	p		9543551	0					
ANR	9545360	UnaryOperationExpression	- 1		9543551	1					
ANR	9545361	UnaryOperator	-		9543551	0					
ANR	9545362	PrimaryExpression	1		9543551	1					
ANR	9545363	Expression	"q [ - 1 ] = SUB2X4 ( t , s0 ) , s0 = t , t = * p , * q = SUB2X4 ( t , s1 ) , s1 = t"		9543551	1					
ANR	9545364	AssignmentExpression	"q [ - 1 ] = SUB2X4 ( t , s0 )"		9543551	0		=			
ANR	9545365	ArrayIndexing	q [ - 1 ]		9543551	0					
ANR	9545366	Identifier	q		9543551	0					
ANR	9545367	UnaryOperationExpression	- 1		9543551	1					
ANR	9545368	UnaryOperator	-		9543551	0					
ANR	9545369	PrimaryExpression	1		9543551	1					
ANR	9545370	CallExpression	"SUB2X4 ( t , s0 )"		9543551	1					
ANR	9545371	Callee	SUB2X4		9543551	0					
ANR	9545372	Identifier	SUB2X4		9543551	0					
ANR	9545373	ArgumentList	t		9543551	1					
ANR	9545374	Argument	t		9543551	0					
ANR	9545375	Identifier	t		9543551	0					
ANR	9545376	Argument	s0		9543551	1					
ANR	9545377	Identifier	s0		9543551	0					
ANR	9545378	Expression	"s0 = t , t = * p , * q = SUB2X4 ( t , s1 ) , s1 = t"		9543551	1					
ANR	9545379	AssignmentExpression	s0 = t		9543551	0		=			
ANR	9545380	Identifier	s0		9543551	0					
ANR	9545381	Identifier	t		9543551	1					
ANR	9545382	Expression	"t = * p , * q = SUB2X4 ( t , s1 ) , s1 = t"		9543551	1					
ANR	9545383	AssignmentExpression	t = * p		9543551	0		=			
ANR	9545384	Identifier	t		9543551	0					
ANR	9545385	UnaryOperationExpression	* p		9543551	1					
ANR	9545386	UnaryOperator	*		9543551	0					
ANR	9545387	Identifier	p		9543551	1					
ANR	9545388	Expression	"* q = SUB2X4 ( t , s1 ) , s1 = t"		9543551	1					
ANR	9545389	AssignmentExpression	"* q = SUB2X4 ( t , s1 )"		9543551	0		=			
ANR	9545390	UnaryOperationExpression	* q		9543551	0					
ANR	9545391	UnaryOperator	*		9543551	0					
ANR	9545392	Identifier	q		9543551	1					
ANR	9545393	CallExpression	"SUB2X4 ( t , s1 )"		9543551	1					
ANR	9545394	Callee	SUB2X4		9543551	0					
ANR	9545395	Identifier	SUB2X4		9543551	0					
ANR	9545396	ArgumentList	t		9543551	1					
ANR	9545397	Argument	t		9543551	0					
ANR	9545398	Identifier	t		9543551	0					
ANR	9545399	Argument	s1		9543551	1					
ANR	9545400	Identifier	s1		9543551	0					
ANR	9545401	AssignmentExpression	s1 = t		9543551	1		=			
ANR	9545402	Identifier	s1		9543551	0					
ANR	9545403	Identifier	t		9543551	1					
ANR	9545404	ExpressionStatement	ss -> prev [ 1 ] = s1	333:12:10129:10145	9543551	2	True				
ANR	9545405	AssignmentExpression	ss -> prev [ 1 ] = s1		9543551	0		=			
ANR	9545406	ArrayIndexing	ss -> prev [ 1 ]		9543551	0					
ANR	9545407	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545408	Identifier	ss		9543551	0					
ANR	9545409	Identifier	prev		9543551	1					
ANR	9545410	PrimaryExpression	1		9543551	1					
ANR	9545411	Identifier	s1		9543551	1					
ANR	9545412	GotoStatement	goto enc4 ;	334:12:10159:10168	9543551	3	True				
ANR	9545413	Identifier	enc4		9543551	0					
ANR	9545414	Statement	case	337:8:10218:10221	9543551	446	True				
ANR	9545415	Statement	cDecode	337:13:10223:10229	9543551	447	True				
ANR	9545416	Statement	+	337:21:10231:10231	9543551	448	True				
ANR	9545417	Statement	cBits4	337:23:10233:10238	9543551	449	True				
ANR	9545418	Statement	+	337:30:10240:10240	9543551	450	True				
ANR	9545419	Label	0 :	337:32:10242:10243	9543551	451	True				
ANR	9545420	Statement	case	338:8:10253:10256	9543551	452	True				
ANR	9545421	Statement	cDecode	338:13:10258:10264	9543551	453	True				
ANR	9545422	Statement	+	338:21:10266:10266	9543551	454	True				
ANR	9545423	Statement	cBits4	338:23:10268:10273	9543551	455	True				
ANR	9545424	Statement	+	338:30:10275:10275	9543551	456	True				
ANR	9545425	Label	2 :	338:32:10277:10278	9543551	457	True				
ANR	9545426	Label	dec4 :	339:4:10284:10288	9543551	458	True				
ANR	9545427	Identifier	dec4		9543551	0					
ANR	9545428	IfStatement	if ( colors & 1 )		9543551	459					
ANR	9545429	Condition	colors & 1	340:16:10306:10315	9543551	0	True				
ANR	9545430	BitAndExpression	colors & 1		9543551	0		&			
ANR	9545431	Identifier	colors		9543551	0					
ANR	9545432	PrimaryExpression	1		9543551	1					
ANR	9545433	CompoundStatement		251:28:7929:7929	9543551	1					
ANR	9545434	ExpressionStatement	"DECODE_UNALIGNED_LOOP ( 4 , 4 , ADD2X4 ( * p , t ) )"	341:16:10336:10378	9543551	0	True				
ANR	9545435	CallExpression	"DECODE_UNALIGNED_LOOP ( 4 , 4 , ADD2X4 ( * p , t ) )"		9543551	0					
ANR	9545436	Callee	DECODE_UNALIGNED_LOOP		9543551	0					
ANR	9545437	Identifier	DECODE_UNALIGNED_LOOP		9543551	0					
ANR	9545438	ArgumentList	4		9543551	1					
ANR	9545439	Argument	4		9543551	0					
ANR	9545440	PrimaryExpression	4		9543551	0					
ANR	9545441	Argument	4		9543551	1					
ANR	9545442	PrimaryExpression	4		9543551	0					
ANR	9545443	Argument	"ADD2X4 ( * p , t )"		9543551	2					
ANR	9545444	CallExpression	"ADD2X4 ( * p , t )"		9543551	0					
ANR	9545445	Callee	ADD2X4		9543551	0					
ANR	9545446	Identifier	ADD2X4		9543551	0					
ANR	9545447	ArgumentList	* p		9543551	1					
ANR	9545448	Argument	* p		9543551	0					
ANR	9545449	UnaryOperationExpression	* p		9543551	0					
ANR	9545450	UnaryOperator	*		9543551	0					
ANR	9545451	Identifier	p		9543551	1					
ANR	9545452	Argument	t		9543551	1					
ANR	9545453	Identifier	t		9543551	0					
ANR	9545454	ElseStatement	else		9543551	0					
ANR	9545455	CompoundStatement		253:19:8010:8010	9543551	0					
ANR	9545456	ExpressionStatement	"DECODE_ALIGNED_LOOP ( ADD2X4 ( t , ss -> prev [ ci ] ) )"	343:16:10417:10461	9543551	0	True				
ANR	9545457	CallExpression	"DECODE_ALIGNED_LOOP ( ADD2X4 ( t , ss -> prev [ ci ] ) )"		9543551	0					
ANR	9545458	Callee	DECODE_ALIGNED_LOOP		9543551	0					
ANR	9545459	Identifier	DECODE_ALIGNED_LOOP		9543551	0					
ANR	9545460	ArgumentList	"ADD2X4 ( t , ss -> prev [ ci ] )"		9543551	1					
ANR	9545461	Argument	"ADD2X4 ( t , ss -> prev [ ci ] )"		9543551	0					
ANR	9545462	CallExpression	"ADD2X4 ( t , ss -> prev [ ci ] )"		9543551	0					
ANR	9545463	Callee	ADD2X4		9543551	0					
ANR	9545464	Identifier	ADD2X4		9543551	0					
ANR	9545465	ArgumentList	t		9543551	1					
ANR	9545466	Argument	t		9543551	0					
ANR	9545467	Identifier	t		9543551	0					
ANR	9545468	Argument	ss -> prev [ ci ]		9543551	1					
ANR	9545469	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9545470	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545471	Identifier	ss		9543551	0					
ANR	9545472	Identifier	prev		9543551	1					
ANR	9545473	Identifier	ci		9543551	1					
ANR	9545474	BreakStatement	break ;	345:12:10489:10494	9543551	460	True				
ANR	9545475	Statement	case	347:8:10505:10508	9543551	461	True				
ANR	9545476	Statement	cDecode	347:13:10510:10516	9543551	462	True				
ANR	9545477	Statement	+	347:21:10518:10518	9543551	463	True				
ANR	9545478	Statement	cBits4	347:23:10520:10525	9543551	464	True				
ANR	9545479	Statement	+	347:30:10527:10527	9543551	465	True				
ANR	9545480	Label	1 :	347:32:10529:10530	9543551	466	True				
ANR	9545481	ExpressionStatement	"DECODE1_LOOP ( * p + ( s0 << 4 ) , ADD2X4R4 ( t ) )"	348:12:10544:10585	9543551	467	True				
ANR	9545482	CallExpression	"DECODE1_LOOP ( * p + ( s0 << 4 ) , ADD2X4R4 ( t ) )"		9543551	0					
ANR	9545483	Callee	DECODE1_LOOP		9543551	0					
ANR	9545484	Identifier	DECODE1_LOOP		9543551	0					
ANR	9545485	ArgumentList	* p + ( s0 << 4 )		9543551	1					
ANR	9545486	Argument	* p + ( s0 << 4 )		9543551	0					
ANR	9545487	AdditiveExpression	* p + ( s0 << 4 )		9543551	0		+			
ANR	9545488	UnaryOperationExpression	* p		9543551	0					
ANR	9545489	UnaryOperator	*		9543551	0					
ANR	9545490	Identifier	p		9543551	1					
ANR	9545491	ShiftExpression	s0 << 4		9543551	1		<<			
ANR	9545492	Identifier	s0		9543551	0					
ANR	9545493	PrimaryExpression	4		9543551	1					
ANR	9545494	Argument	ADD2X4R4 ( t )		9543551	1					
ANR	9545495	CallExpression	ADD2X4R4 ( t )		9543551	0					
ANR	9545496	Callee	ADD2X4R4		9543551	0					
ANR	9545497	Identifier	ADD2X4R4		9543551	0					
ANR	9545498	ArgumentList	t		9543551	1					
ANR	9545499	Argument	t		9543551	0					
ANR	9545500	Identifier	t		9543551	0					
ANR	9545501	Statement	case	350:8:10596:10599	9543551	468	True				
ANR	9545502	Statement	cDecode	350:13:10601:10607	9543551	469	True				
ANR	9545503	Statement	+	350:21:10609:10609	9543551	470	True				
ANR	9545504	Statement	cBits4	350:23:10611:10616	9543551	471	True				
ANR	9545505	Statement	+	350:30:10618:10618	9543551	472	True				
ANR	9545506	Label	3 :	350:32:10620:10621	9543551	473	True				
ANR	9545507	CompoundStatement		262:12:8248:8269	9543551	474					
ANR	9545508	IdentifierDeclStatement	uint s1 = ss -> prev [ 1 ] ;	351:12:10637:10658	9543551	0	True				
ANR	9545509	IdentifierDecl	s1 = ss -> prev [ 1 ]		9543551	0					
ANR	9545510	IdentifierDeclType	uint		9543551	0					
ANR	9545511	Identifier	s1		9543551	1					
ANR	9545512	AssignmentExpression	s1 = ss -> prev [ 1 ]		9543551	2		=			
ANR	9545513	Identifier	s1		9543551	0					
ANR	9545514	ArrayIndexing	ss -> prev [ 1 ]		9543551	1					
ANR	9545515	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545516	Identifier	ss		9543551	0					
ANR	9545517	Identifier	prev		9543551	1					
ANR	9545518	PrimaryExpression	1		9543551	1					
ANR	9545519	ExpressionStatement	"LOOP_BY ( 1 , ( t = ( s0 << 4 ) + ( s1 >> 4 ) , s0 = s1 , s1 = * q = ADD2X4 ( * p , t ) ) )"	353:12:10673:10770	9543551	1	True				
ANR	9545520	CallExpression	"LOOP_BY ( 1 , ( t = ( s0 << 4 ) + ( s1 >> 4 ) , s0 = s1 , s1 = * q = ADD2X4 ( * p , t ) ) )"		9543551	0					
ANR	9545521	Callee	LOOP_BY		9543551	0					
ANR	9545522	Identifier	LOOP_BY		9543551	0					
ANR	9545523	ArgumentList	1		9543551	1					
ANR	9545524	Argument	1		9543551	0					
ANR	9545525	PrimaryExpression	1		9543551	0					
ANR	9545526	Argument	"t = ( s0 << 4 ) + ( s1 >> 4 ) , s0 = s1 , s1 = * q = ADD2X4 ( * p , t )"		9543551	1					
ANR	9545527	Expression	"t = ( s0 << 4 ) + ( s1 >> 4 ) , s0 = s1 , s1 = * q = ADD2X4 ( * p , t )"		9543551	0					
ANR	9545528	AssignmentExpression	t = ( s0 << 4 ) + ( s1 >> 4 )		9543551	0		=			
ANR	9545529	Identifier	t		9543551	0					
ANR	9545530	AdditiveExpression	( s0 << 4 ) + ( s1 >> 4 )		9543551	1		+			
ANR	9545531	ShiftExpression	s0 << 4		9543551	0		<<			
ANR	9545532	Identifier	s0		9543551	0					
ANR	9545533	PrimaryExpression	4		9543551	1					
ANR	9545534	ShiftExpression	s1 >> 4		9543551	1		>>			
ANR	9545535	Identifier	s1		9543551	0					
ANR	9545536	PrimaryExpression	4		9543551	1					
ANR	9545537	Expression	"s0 = s1 , s1 = * q = ADD2X4 ( * p , t )"		9543551	1					
ANR	9545538	AssignmentExpression	s0 = s1		9543551	0		=			
ANR	9545539	Identifier	s0		9543551	0					
ANR	9545540	Identifier	s1		9543551	1					
ANR	9545541	AssignmentExpression	"s1 = * q = ADD2X4 ( * p , t )"		9543551	1		=			
ANR	9545542	Identifier	s1		9543551	0					
ANR	9545543	AssignmentExpression	"* q = ADD2X4 ( * p , t )"		9543551	1		=			
ANR	9545544	UnaryOperationExpression	* q		9543551	0					
ANR	9545545	UnaryOperator	*		9543551	0					
ANR	9545546	Identifier	q		9543551	1					
ANR	9545547	CallExpression	"ADD2X4 ( * p , t )"		9543551	1					
ANR	9545548	Callee	ADD2X4		9543551	0					
ANR	9545549	Identifier	ADD2X4		9543551	0					
ANR	9545550	ArgumentList	* p		9543551	1					
ANR	9545551	Argument	* p		9543551	0					
ANR	9545552	UnaryOperationExpression	* p		9543551	0					
ANR	9545553	UnaryOperator	*		9543551	0					
ANR	9545554	Identifier	p		9543551	1					
ANR	9545555	Argument	t		9543551	1					
ANR	9545556	Identifier	t		9543551	0					
ANR	9545557	ExpressionStatement	ss -> prev [ 1 ] = s1	355:12:10784:10800	9543551	2	True				
ANR	9545558	AssignmentExpression	ss -> prev [ 1 ] = s1		9543551	0		=			
ANR	9545559	ArrayIndexing	ss -> prev [ 1 ]		9543551	0					
ANR	9545560	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545561	Identifier	ss		9543551	0					
ANR	9545562	Identifier	prev		9543551	1					
ANR	9545563	PrimaryExpression	1		9543551	1					
ANR	9545564	Identifier	s1		9543551	1					
ANR	9545565	BreakStatement	break ;	356:10:10812:10817	9543551	475	True				
ANR	9545566	Statement	case	358:8:10828:10831	9543551	476	True				
ANR	9545567	Statement	cDecode	358:13:10833:10839	9543551	477	True				
ANR	9545568	Statement	+	358:21:10841:10841	9543551	478	True				
ANR	9545569	Statement	cBits4	358:23:10843:10848	9543551	479	True				
ANR	9545570	Statement	+	358:30:10850:10850	9543551	480	True				
ANR	9545571	Label	4 :	358:32:10852:10853	9543551	481	True				
ANR	9545572	CompoundStatement		270:12:8480:8501	9543551	482					
ANR	9545573	IdentifierDeclStatement	uint s1 = ss -> prev [ 1 ] ;	359:12:10869:10890	9543551	0	True				
ANR	9545574	IdentifierDecl	s1 = ss -> prev [ 1 ]		9543551	0					
ANR	9545575	IdentifierDeclType	uint		9543551	0					
ANR	9545576	Identifier	s1		9543551	1					
ANR	9545577	AssignmentExpression	s1 = ss -> prev [ 1 ]		9543551	2		=			
ANR	9545578	Identifier	s1		9543551	0					
ANR	9545579	ArrayIndexing	ss -> prev [ 1 ]		9543551	1					
ANR	9545580	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545581	Identifier	ss		9543551	0					
ANR	9545582	Identifier	prev		9543551	1					
ANR	9545583	PrimaryExpression	1		9543551	1					
ANR	9545584	ExpressionStatement	"LOOP_BY ( 2 , ( t = p [ - 1 ] , s0 = q [ - 1 ] = ADD2X4 ( s0 , t ) , t = * p , s1 = * q = ADD2X4 ( s1 , t ) ) )"	361:12:10905:11030	9543551	1	True				
ANR	9545585	CallExpression	"LOOP_BY ( 2 , ( t = p [ - 1 ] , s0 = q [ - 1 ] = ADD2X4 ( s0 , t ) , t = * p , s1 = * q = ADD2X4 ( s1 , t ) ) )"		9543551	0					
ANR	9545586	Callee	LOOP_BY		9543551	0					
ANR	9545587	Identifier	LOOP_BY		9543551	0					
ANR	9545588	ArgumentList	2		9543551	1					
ANR	9545589	Argument	2		9543551	0					
ANR	9545590	PrimaryExpression	2		9543551	0					
ANR	9545591	Argument	"t = p [ - 1 ] , s0 = q [ - 1 ] = ADD2X4 ( s0 , t ) , t = * p , s1 = * q = ADD2X4 ( s1 , t )"		9543551	1					
ANR	9545592	Expression	"t = p [ - 1 ] , s0 = q [ - 1 ] = ADD2X4 ( s0 , t ) , t = * p , s1 = * q = ADD2X4 ( s1 , t )"		9543551	0					
ANR	9545593	AssignmentExpression	t = p [ - 1 ]		9543551	0		=			
ANR	9545594	Identifier	t		9543551	0					
ANR	9545595	ArrayIndexing	p [ - 1 ]		9543551	1					
ANR	9545596	Identifier	p		9543551	0					
ANR	9545597	UnaryOperationExpression	- 1		9543551	1					
ANR	9545598	UnaryOperator	-		9543551	0					
ANR	9545599	PrimaryExpression	1		9543551	1					
ANR	9545600	Expression	"s0 = q [ - 1 ] = ADD2X4 ( s0 , t ) , t = * p , s1 = * q = ADD2X4 ( s1 , t )"		9543551	1					
ANR	9545601	AssignmentExpression	"s0 = q [ - 1 ] = ADD2X4 ( s0 , t )"		9543551	0		=			
ANR	9545602	Identifier	s0		9543551	0					
ANR	9545603	AssignmentExpression	"q [ - 1 ] = ADD2X4 ( s0 , t )"		9543551	1		=			
ANR	9545604	ArrayIndexing	q [ - 1 ]		9543551	0					
ANR	9545605	Identifier	q		9543551	0					
ANR	9545606	UnaryOperationExpression	- 1		9543551	1					
ANR	9545607	UnaryOperator	-		9543551	0					
ANR	9545608	PrimaryExpression	1		9543551	1					
ANR	9545609	CallExpression	"ADD2X4 ( s0 , t )"		9543551	1					
ANR	9545610	Callee	ADD2X4		9543551	0					
ANR	9545611	Identifier	ADD2X4		9543551	0					
ANR	9545612	ArgumentList	s0		9543551	1					
ANR	9545613	Argument	s0		9543551	0					
ANR	9545614	Identifier	s0		9543551	0					
ANR	9545615	Argument	t		9543551	1					
ANR	9545616	Identifier	t		9543551	0					
ANR	9545617	Expression	"t = * p , s1 = * q = ADD2X4 ( s1 , t )"		9543551	1					
ANR	9545618	AssignmentExpression	t = * p		9543551	0		=			
ANR	9545619	Identifier	t		9543551	0					
ANR	9545620	UnaryOperationExpression	* p		9543551	1					
ANR	9545621	UnaryOperator	*		9543551	0					
ANR	9545622	Identifier	p		9543551	1					
ANR	9545623	AssignmentExpression	"s1 = * q = ADD2X4 ( s1 , t )"		9543551	1		=			
ANR	9545624	Identifier	s1		9543551	0					
ANR	9545625	AssignmentExpression	"* q = ADD2X4 ( s1 , t )"		9543551	1		=			
ANR	9545626	UnaryOperationExpression	* q		9543551	0					
ANR	9545627	UnaryOperator	*		9543551	0					
ANR	9545628	Identifier	q		9543551	1					
ANR	9545629	CallExpression	"ADD2X4 ( s1 , t )"		9543551	1					
ANR	9545630	Callee	ADD2X4		9543551	0					
ANR	9545631	Identifier	ADD2X4		9543551	0					
ANR	9545632	ArgumentList	s1		9543551	1					
ANR	9545633	Argument	s1		9543551	0					
ANR	9545634	Identifier	s1		9543551	0					
ANR	9545635	Argument	t		9543551	1					
ANR	9545636	Identifier	t		9543551	0					
ANR	9545637	ExpressionStatement	ss -> prev [ 1 ] = s1	364:12:11044:11060	9543551	2	True				
ANR	9545638	AssignmentExpression	ss -> prev [ 1 ] = s1		9543551	0		=			
ANR	9545639	ArrayIndexing	ss -> prev [ 1 ]		9543551	0					
ANR	9545640	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545641	Identifier	ss		9543551	0					
ANR	9545642	Identifier	prev		9543551	1					
ANR	9545643	PrimaryExpression	1		9543551	1					
ANR	9545644	Identifier	s1		9543551	1					
ANR	9545645	GotoStatement	goto dec4 ;	365:12:11074:11083	9543551	3	True				
ANR	9545646	Identifier	dec4		9543551	0					
ANR	9545647	Statement	undef	368:1:11126:11130	9543551	483	True				
ANR	9545648	Statement	ADD2X4	368:7:11132:11137	9543551	484	True				
ANR	9545649	Statement	undef	369:1:11140:11144	9543551	485	True				
ANR	9545650	Statement	ADD2X4R4	369:7:11146:11153	9543551	486	True				
ANR	9545651	Statement	undef	370:1:11156:11160	9543551	487	True				
ANR	9545652	Statement	SUB2X4	370:7:11162:11167	9543551	488	True				
ANR	9545653	Statement	undef	371:1:11170:11174	9543551	489	True				
ANR	9545654	Statement	SUB2X4R4	371:7:11176:11183	9543551	490	True				
ANR	9545655	Statement	define	375:1:11227:11232	9543551	491	True				
ANR	9545656	Statement	ENCODE8	375:8:11234:11240	9543551	492	True				
ANR	9545657	Statement	(	375:15:11241:11241	9543551	493	True				
ANR	9545658	Statement	s	375:16:11242:11242	9543551	494	True				
ANR	9545659	Statement	","	375:17:11243:11243	9543551	495	True				
ANR	9545660	Statement	d	375:19:11245:11245	9543551	496	True				
ANR	9545661	Statement	)	375:20:11246:11246	9543551	497	True				
ANR	9545662	Statement	(	375:22:11248:11248	9543551	498	True				
ANR	9545663	Statement	q	375:23:11249:11249	9543551	499	True				
ANR	9545664	Statement	[	375:24:11250:11250	9543551	500	True				
ANR	9545665	Statement	d	375:25:11251:11251	9543551	501	True				
ANR	9545666	Statement	]	375:26:11252:11252	9543551	502	True				
ANR	9545667	Statement	=	375:28:11254:11254	9543551	503	True				
ANR	9545668	Statement	p	375:30:11256:11256	9543551	504	True				
ANR	9545669	Statement	[	375:31:11257:11257	9543551	505	True				
ANR	9545670	Statement	d	375:32:11258:11258	9543551	506	True				
ANR	9545671	Statement	]	375:33:11259:11259	9543551	507	True				
ANR	9545672	Statement	-	375:35:11261:11261	9543551	508	True				
ANR	9545673	Statement	s	375:37:11263:11263	9543551	509	True				
ANR	9545674	Statement	","	375:38:11264:11264	9543551	510	True				
ANR	9545675	Statement	s	375:40:11266:11266	9543551	511	True				
ANR	9545676	Statement	=	375:42:11268:11268	9543551	512	True				
ANR	9545677	Statement	p	375:44:11270:11270	9543551	513	True				
ANR	9545678	Statement	[	375:45:11271:11271	9543551	514	True				
ANR	9545679	Statement	d	375:46:11272:11272	9543551	515	True				
ANR	9545680	Statement	]	375:47:11273:11273	9543551	516	True				
ANR	9545681	Statement	)	375:48:11274:11274	9543551	517	True				
ANR	9545682	Statement	define	376:1:11277:11282	9543551	518	True				
ANR	9545683	Statement	DECODE8	376:8:11284:11290	9543551	519	True				
ANR	9545684	Statement	(	376:15:11291:11291	9543551	520	True				
ANR	9545685	Statement	s	376:16:11292:11292	9543551	521	True				
ANR	9545686	Statement	","	376:17:11293:11293	9543551	522	True				
ANR	9545687	Statement	d	376:19:11295:11295	9543551	523	True				
ANR	9545688	Statement	)	376:20:11296:11296	9543551	524	True				
ANR	9545689	Statement	q	376:22:11298:11298	9543551	525	True				
ANR	9545690	Statement	[	376:23:11299:11299	9543551	526	True				
ANR	9545691	Statement	d	376:24:11300:11300	9543551	527	True				
ANR	9545692	Statement	]	376:25:11301:11301	9543551	528	True				
ANR	9545693	Statement	=	376:27:11303:11303	9543551	529	True				
ANR	9545694	Statement	s	376:29:11305:11305	9543551	530	True				
ANR	9545695	Statement	+=	376:31:11307:11308	9543551	531	True				
ANR	9545696	Statement	p	376:34:11310:11310	9543551	532	True				
ANR	9545697	Statement	[	376:35:11311:11311	9543551	533	True				
ANR	9545698	Statement	d	376:36:11312:11312	9543551	534	True				
ANR	9545699	Statement	]	376:37:11313:11313	9543551	535	True				
ANR	9545700	Statement	case	378:8:11324:11327	9543551	536	True				
ANR	9545701	Statement	cEncode	378:13:11329:11335	9543551	537	True				
ANR	9545702	Statement	+	378:21:11337:11337	9543551	538	True				
ANR	9545703	Statement	cBits8	378:23:11339:11344	9543551	539	True				
ANR	9545704	Statement	+	378:30:11346:11346	9543551	540	True				
ANR	9545705	Label	0 :	378:32:11348:11349	9543551	541	True				
ANR	9545706	Statement	case	379:8:11359:11362	9543551	542	True				
ANR	9545707	Statement	cEncode	379:13:11364:11370	9543551	543	True				
ANR	9545708	Statement	+	379:21:11372:11372	9543551	544	True				
ANR	9545709	Statement	cBits8	379:23:11374:11379	9543551	545	True				
ANR	9545710	Statement	+	379:30:11381:11381	9543551	546	True				
ANR	9545711	Label	2 :	379:32:11383:11384	9543551	547	True				
ANR	9545712	ExpressionStatement	ss -> prev [ 0 ] = s0	380:12:11398:11414	9543551	548	True				
ANR	9545713	AssignmentExpression	ss -> prev [ 0 ] = s0		9543551	0		=			
ANR	9545714	ArrayIndexing	ss -> prev [ 0 ]		9543551	0					
ANR	9545715	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545716	Identifier	ss		9543551	0					
ANR	9545717	Identifier	prev		9543551	1					
ANR	9545718	PrimaryExpression	0		9543551	1					
ANR	9545719	Identifier	s0		9543551	1					
ANR	9545720	ForStatement	for ( ; count >= colors ; count -= colors )		9543551	549					
ANR	9545721	Condition	count >= colors	381:19:11435:11449	9543551	0	True				
ANR	9545722	RelationalExpression	count >= colors		9543551	0		>=			
ANR	9545723	Identifier	count		9543551	0					
ANR	9545724	Identifier	colors		9543551	1					
ANR	9545725	AssignmentExpression	count -= colors	381:36:11452:11466	9543551	1	True	-=			
ANR	9545726	Identifier	count		9543551	0					
ANR	9545727	Identifier	colors		9543551	1					
ANR	9545728	ForStatement	for ( ci = 0 ; ci < colors ; ++ ci )		9543551	2					
ANR	9545729	ForInit	ci = 0 ;	382:21:11490:11496	9543551	0	True				
ANR	9545730	AssignmentExpression	ci = 0		9543551	0		=			
ANR	9545731	Identifier	ci		9543551	0					
ANR	9545732	PrimaryExpression	0		9543551	1					
ANR	9545733	Condition	ci < colors	382:29:11498:11508	9543551	1	True				
ANR	9545734	RelationalExpression	ci < colors		9543551	0		<			
ANR	9545735	Identifier	ci		9543551	0					
ANR	9545736	Identifier	colors		9543551	1					
ANR	9545737	UnaryExpression	++ ci	382:42:11511:11514	9543551	2	True				
ANR	9545738	IncDec	++		9543551	0					
ANR	9545739	Identifier	ci		9543551	1					
ANR	9545740	CompoundStatement		293:48:9128:9128	9543551	3					
ANR	9545741	ExpressionStatement	* ++ q = * ++ p - ss -> prev [ ci ]	383:20:11539:11565	9543551	0	True				
ANR	9545742	AssignmentExpression	* ++ q = * ++ p - ss -> prev [ ci ]		9543551	0		=			
ANR	9545743	UnaryOperationExpression	* ++ q		9543551	0					
ANR	9545744	UnaryOperator	*		9543551	0					
ANR	9545745	UnaryExpression	++ q		9543551	1					
ANR	9545746	IncDec	++		9543551	0					
ANR	9545747	Identifier	q		9543551	1					
ANR	9545748	AdditiveExpression	* ++ p - ss -> prev [ ci ]		9543551	1		-			
ANR	9545749	UnaryOperationExpression	* ++ p		9543551	0					
ANR	9545750	UnaryOperator	*		9543551	0					
ANR	9545751	UnaryExpression	++ p		9543551	1					
ANR	9545752	IncDec	++		9543551	0					
ANR	9545753	Identifier	p		9543551	1					
ANR	9545754	ArrayIndexing	ss -> prev [ ci ]		9543551	1					
ANR	9545755	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545756	Identifier	ss		9543551	0					
ANR	9545757	Identifier	prev		9543551	1					
ANR	9545758	Identifier	ci		9543551	1					
ANR	9545759	ExpressionStatement	ss -> prev [ ci ] = * p	384:20:11587:11604	9543551	1	True				
ANR	9545760	AssignmentExpression	ss -> prev [ ci ] = * p		9543551	0		=			
ANR	9545761	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9545762	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545763	Identifier	ss		9543551	0					
ANR	9545764	Identifier	prev		9543551	1					
ANR	9545765	Identifier	ci		9543551	1					
ANR	9545766	UnaryOperationExpression	* p		9543551	1					
ANR	9545767	UnaryOperator	*		9543551	0					
ANR	9545768	Identifier	p		9543551	1					
ANR	9545769	ExpressionStatement	s0 = ss -> prev [ 0 ]	386:12:11636:11652	9543551	550	True				
ANR	9545770	AssignmentExpression	s0 = ss -> prev [ 0 ]		9543551	0		=			
ANR	9545771	Identifier	s0		9543551	0					
ANR	9545772	ArrayIndexing	ss -> prev [ 0 ]		9543551	1					
ANR	9545773	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545774	Identifier	ss		9543551	0					
ANR	9545775	Identifier	prev		9543551	1					
ANR	9545776	PrimaryExpression	0		9543551	1					
ANR	9545777	Label	enc8 :	387:4:11658:11662	9543551	551	True				
ANR	9545778	Identifier	enc8		9543551	0					
ANR	9545779	IfStatement	if ( last && ! status )		9543551	552					
ANR	9545780	Condition	last && ! status	388:16:11711:11725	9543551	0	True				
ANR	9545781	AndExpression	last && ! status		9543551	0		&&			
ANR	9545782	Identifier	last		9543551	0					
ANR	9545783	UnaryOperationExpression	! status		9543551	1					
ANR	9545784	UnaryOperator	!		9543551	0					
ANR	9545785	Identifier	status		9543551	1					
ANR	9545786	ForStatement	for ( ci = 0 ; ci < count ; ++ ci )		9543551	1					
ANR	9545787	ForInit	ci = 0 ;	389:21:11749:11755	9543551	0	True				
ANR	9545788	AssignmentExpression	ci = 0		9543551	0		=			
ANR	9545789	Identifier	ci		9543551	0					
ANR	9545790	PrimaryExpression	0		9543551	1					
ANR	9545791	Condition	ci < count	389:29:11757:11766	9543551	1	True				
ANR	9545792	RelationalExpression	ci < count		9543551	0		<			
ANR	9545793	Identifier	ci		9543551	0					
ANR	9545794	Identifier	count		9543551	1					
ANR	9545795	UnaryExpression	++ ci	389:41:11769:11772	9543551	2	True				
ANR	9545796	IncDec	++		9543551	0					
ANR	9545797	Identifier	ci		9543551	1					
ANR	9545798	ExpressionStatement	"* ++ q = * ++ p - ss -> prev [ ci ] , ss -> prev [ ci ] = * p"	390:20:11795:11864	9543551	3	True				
ANR	9545799	Expression	"* ++ q = * ++ p - ss -> prev [ ci ] , ss -> prev [ ci ] = * p"		9543551	0					
ANR	9545800	AssignmentExpression	* ++ q = * ++ p - ss -> prev [ ci ]		9543551	0		=			
ANR	9545801	UnaryOperationExpression	* ++ q		9543551	0					
ANR	9545802	UnaryOperator	*		9543551	0					
ANR	9545803	UnaryExpression	++ q		9543551	1					
ANR	9545804	IncDec	++		9543551	0					
ANR	9545805	Identifier	q		9543551	1					
ANR	9545806	AdditiveExpression	* ++ p - ss -> prev [ ci ]		9543551	1		-			
ANR	9545807	UnaryOperationExpression	* ++ p		9543551	0					
ANR	9545808	UnaryOperator	*		9543551	0					
ANR	9545809	UnaryExpression	++ p		9543551	1					
ANR	9545810	IncDec	++		9543551	0					
ANR	9545811	Identifier	p		9543551	1					
ANR	9545812	ArrayIndexing	ss -> prev [ ci ]		9543551	1					
ANR	9545813	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545814	Identifier	ss		9543551	0					
ANR	9545815	Identifier	prev		9543551	1					
ANR	9545816	Identifier	ci		9543551	1					
ANR	9545817	AssignmentExpression	ss -> prev [ ci ] = * p		9543551	1		=			
ANR	9545818	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9545819	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545820	Identifier	ss		9543551	0					
ANR	9545821	Identifier	prev		9543551	1					
ANR	9545822	Identifier	ci		9543551	1					
ANR	9545823	UnaryOperationExpression	* p		9543551	1					
ANR	9545824	UnaryOperator	*		9543551	0					
ANR	9545825	Identifier	p		9543551	1					
ANR	9545826	BreakStatement	break ;	392:12:11878:11883	9543551	553	True				
ANR	9545827	Statement	case	394:8:11894:11897	9543551	554	True				
ANR	9545828	Statement	cDecode	394:13:11899:11905	9543551	555	True				
ANR	9545829	Statement	+	394:21:11907:11907	9543551	556	True				
ANR	9545830	Statement	cBits8	394:23:11909:11914	9543551	557	True				
ANR	9545831	Statement	+	394:30:11916:11916	9543551	558	True				
ANR	9545832	Label	0 :	394:32:11918:11919	9543551	559	True				
ANR	9545833	Statement	case	395:8:11929:11932	9543551	560	True				
ANR	9545834	Statement	cDecode	395:13:11934:11940	9543551	561	True				
ANR	9545835	Statement	+	395:21:11942:11942	9543551	562	True				
ANR	9545836	Statement	cBits8	395:23:11944:11949	9543551	563	True				
ANR	9545837	Statement	+	395:30:11951:11951	9543551	564	True				
ANR	9545838	Label	2 :	395:32:11953:11954	9543551	565	True				
ANR	9545839	ExpressionStatement	ss -> prev [ 0 ] = s0	396:12:11968:11984	9543551	566	True				
ANR	9545840	AssignmentExpression	ss -> prev [ 0 ] = s0		9543551	0		=			
ANR	9545841	ArrayIndexing	ss -> prev [ 0 ]		9543551	0					
ANR	9545842	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545843	Identifier	ss		9543551	0					
ANR	9545844	Identifier	prev		9543551	1					
ANR	9545845	PrimaryExpression	0		9543551	1					
ANR	9545846	Identifier	s0		9543551	1					
ANR	9545847	ForStatement	for ( ; count >= colors ; count -= colors )		9543551	567					
ANR	9545848	Condition	count >= colors	397:19:12005:12019	9543551	0	True				
ANR	9545849	RelationalExpression	count >= colors		9543551	0		>=			
ANR	9545850	Identifier	count		9543551	0					
ANR	9545851	Identifier	colors		9543551	1					
ANR	9545852	AssignmentExpression	count -= colors	397:36:12022:12036	9543551	1	True	-=			
ANR	9545853	Identifier	count		9543551	0					
ANR	9545854	Identifier	colors		9543551	1					
ANR	9545855	ForStatement	for ( ci = 0 ; ci < colors ; ++ ci )		9543551	2					
ANR	9545856	ForInit	ci = 0 ;	398:21:12060:12066	9543551	0	True				
ANR	9545857	AssignmentExpression	ci = 0		9543551	0		=			
ANR	9545858	Identifier	ci		9543551	0					
ANR	9545859	PrimaryExpression	0		9543551	1					
ANR	9545860	Condition	ci < colors	398:29:12068:12078	9543551	1	True				
ANR	9545861	RelationalExpression	ci < colors		9543551	0		<			
ANR	9545862	Identifier	ci		9543551	0					
ANR	9545863	Identifier	colors		9543551	1					
ANR	9545864	UnaryExpression	++ ci	398:42:12081:12084	9543551	2	True				
ANR	9545865	IncDec	++		9543551	0					
ANR	9545866	Identifier	ci		9543551	1					
ANR	9545867	ExpressionStatement	* ++ q = ss -> prev [ ci ] += * ++ p	399:20:12107:12134	9543551	3	True				
ANR	9545868	AssignmentExpression	* ++ q = ss -> prev [ ci ] += * ++ p		9543551	0		=			
ANR	9545869	UnaryOperationExpression	* ++ q		9543551	0					
ANR	9545870	UnaryOperator	*		9543551	0					
ANR	9545871	UnaryExpression	++ q		9543551	1					
ANR	9545872	IncDec	++		9543551	0					
ANR	9545873	Identifier	q		9543551	1					
ANR	9545874	AssignmentExpression	ss -> prev [ ci ] += * ++ p		9543551	1		+=			
ANR	9545875	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9545876	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545877	Identifier	ss		9543551	0					
ANR	9545878	Identifier	prev		9543551	1					
ANR	9545879	Identifier	ci		9543551	1					
ANR	9545880	UnaryOperationExpression	* ++ p		9543551	1					
ANR	9545881	UnaryOperator	*		9543551	0					
ANR	9545882	UnaryExpression	++ p		9543551	1					
ANR	9545883	IncDec	++		9543551	0					
ANR	9545884	Identifier	p		9543551	1					
ANR	9545885	ExpressionStatement	s0 = ss -> prev [ 0 ]	400:12:12148:12164	9543551	568	True				
ANR	9545886	AssignmentExpression	s0 = ss -> prev [ 0 ]		9543551	0		=			
ANR	9545887	Identifier	s0		9543551	0					
ANR	9545888	ArrayIndexing	ss -> prev [ 0 ]		9543551	1					
ANR	9545889	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545890	Identifier	ss		9543551	0					
ANR	9545891	Identifier	prev		9543551	1					
ANR	9545892	PrimaryExpression	0		9543551	1					
ANR	9545893	Label	dec8 :	401:4:12170:12174	9543551	569	True				
ANR	9545894	Identifier	dec8		9543551	0					
ANR	9545895	IfStatement	if ( last && ! status )		9543551	570					
ANR	9545896	Condition	last && ! status	402:16:12223:12237	9543551	0	True				
ANR	9545897	AndExpression	last && ! status		9543551	0		&&			
ANR	9545898	Identifier	last		9543551	0					
ANR	9545899	UnaryOperationExpression	! status		9543551	1					
ANR	9545900	UnaryOperator	!		9543551	0					
ANR	9545901	Identifier	status		9543551	1					
ANR	9545902	ForStatement	for ( ci = 0 ; ci < count ; ++ ci )		9543551	1					
ANR	9545903	ForInit	ci = 0 ;	403:21:12261:12267	9543551	0	True				
ANR	9545904	AssignmentExpression	ci = 0		9543551	0		=			
ANR	9545905	Identifier	ci		9543551	0					
ANR	9545906	PrimaryExpression	0		9543551	1					
ANR	9545907	Condition	ci < count	403:29:12269:12278	9543551	1	True				
ANR	9545908	RelationalExpression	ci < count		9543551	0		<			
ANR	9545909	Identifier	ci		9543551	0					
ANR	9545910	Identifier	count		9543551	1					
ANR	9545911	UnaryExpression	++ ci	403:41:12281:12284	9543551	2	True				
ANR	9545912	IncDec	++		9543551	0					
ANR	9545913	Identifier	ci		9543551	1					
ANR	9545914	ExpressionStatement	* ++ q = ss -> prev [ ci ] += * ++ p	404:20:12307:12334	9543551	3	True				
ANR	9545915	AssignmentExpression	* ++ q = ss -> prev [ ci ] += * ++ p		9543551	0		=			
ANR	9545916	UnaryOperationExpression	* ++ q		9543551	0					
ANR	9545917	UnaryOperator	*		9543551	0					
ANR	9545918	UnaryExpression	++ q		9543551	1					
ANR	9545919	IncDec	++		9543551	0					
ANR	9545920	Identifier	q		9543551	1					
ANR	9545921	AssignmentExpression	ss -> prev [ ci ] += * ++ p		9543551	1		+=			
ANR	9545922	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9545923	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545924	Identifier	ss		9543551	0					
ANR	9545925	Identifier	prev		9543551	1					
ANR	9545926	Identifier	ci		9543551	1					
ANR	9545927	UnaryOperationExpression	* ++ p		9543551	1					
ANR	9545928	UnaryOperator	*		9543551	0					
ANR	9545929	UnaryExpression	++ p		9543551	1					
ANR	9545930	IncDec	++		9543551	0					
ANR	9545931	Identifier	p		9543551	1					
ANR	9545932	BreakStatement	break ;	405:12:12348:12353	9543551	571	True				
ANR	9545933	Statement	case	407:8:12364:12367	9543551	572	True				
ANR	9545934	Statement	cEncode	407:13:12369:12375	9543551	573	True				
ANR	9545935	Statement	+	407:21:12377:12377	9543551	574	True				
ANR	9545936	Statement	cBits8	407:23:12379:12384	9543551	575	True				
ANR	9545937	Statement	+	407:30:12386:12386	9543551	576	True				
ANR	9545938	Label	1 :	407:32:12388:12389	9543551	577	True				
ANR	9545939	ExpressionStatement	"LOOP_BY ( 1 , ENCODE8 ( s0 , 0 ) )"	408:12:12403:12429	9543551	578	True				
ANR	9545940	CallExpression	"LOOP_BY ( 1 , ENCODE8 ( s0 , 0 ) )"		9543551	0					
ANR	9545941	Callee	LOOP_BY		9543551	0					
ANR	9545942	Identifier	LOOP_BY		9543551	0					
ANR	9545943	ArgumentList	1		9543551	1					
ANR	9545944	Argument	1		9543551	0					
ANR	9545945	PrimaryExpression	1		9543551	0					
ANR	9545946	Argument	"ENCODE8 ( s0 , 0 )"		9543551	1					
ANR	9545947	CallExpression	"ENCODE8 ( s0 , 0 )"		9543551	0					
ANR	9545948	Callee	ENCODE8		9543551	0					
ANR	9545949	Identifier	ENCODE8		9543551	0					
ANR	9545950	ArgumentList	s0		9543551	1					
ANR	9545951	Argument	s0		9543551	0					
ANR	9545952	Identifier	s0		9543551	0					
ANR	9545953	Argument	0		9543551	1					
ANR	9545954	PrimaryExpression	0		9543551	0					
ANR	9545955	BreakStatement	break ;	409:12:12443:12448	9543551	579	True				
ANR	9545956	Statement	case	411:8:12459:12462	9543551	580	True				
ANR	9545957	Statement	cDecode	411:13:12464:12470	9543551	581	True				
ANR	9545958	Statement	+	411:21:12472:12472	9543551	582	True				
ANR	9545959	Statement	cBits8	411:23:12474:12479	9543551	583	True				
ANR	9545960	Statement	+	411:30:12481:12481	9543551	584	True				
ANR	9545961	Label	1 :	411:32:12483:12484	9543551	585	True				
ANR	9545962	ExpressionStatement	"LOOP_BY ( 1 , DECODE8 ( s0 , 0 ) )"	412:12:12498:12524	9543551	586	True				
ANR	9545963	CallExpression	"LOOP_BY ( 1 , DECODE8 ( s0 , 0 ) )"		9543551	0					
ANR	9545964	Callee	LOOP_BY		9543551	0					
ANR	9545965	Identifier	LOOP_BY		9543551	0					
ANR	9545966	ArgumentList	1		9543551	1					
ANR	9545967	Argument	1		9543551	0					
ANR	9545968	PrimaryExpression	1		9543551	0					
ANR	9545969	Argument	"DECODE8 ( s0 , 0 )"		9543551	1					
ANR	9545970	CallExpression	"DECODE8 ( s0 , 0 )"		9543551	0					
ANR	9545971	Callee	DECODE8		9543551	0					
ANR	9545972	Identifier	DECODE8		9543551	0					
ANR	9545973	ArgumentList	s0		9543551	1					
ANR	9545974	Argument	s0		9543551	0					
ANR	9545975	Identifier	s0		9543551	0					
ANR	9545976	Argument	0		9543551	1					
ANR	9545977	PrimaryExpression	0		9543551	0					
ANR	9545978	BreakStatement	break ;	413:12:12538:12543	9543551	587	True				
ANR	9545979	Statement	case	415:8:12554:12557	9543551	588	True				
ANR	9545980	Statement	cEncode	415:13:12559:12565	9543551	589	True				
ANR	9545981	Statement	+	415:21:12567:12567	9543551	590	True				
ANR	9545982	Statement	cBits8	415:23:12569:12574	9543551	591	True				
ANR	9545983	Statement	+	415:30:12576:12576	9543551	592	True				
ANR	9545984	Label	3 :	415:32:12578:12579	9543551	593	True				
ANR	9545985	CompoundStatement		327:12:10206:10245	9543551	594					
ANR	9545986	IdentifierDeclStatement	"uint s1 = ss -> prev [ 1 ] , s2 = ss -> prev [ 2 ] ;"	416:12:12595:12634	9543551	0	True				
ANR	9545987	IdentifierDecl	s1 = ss -> prev [ 1 ]		9543551	0					
ANR	9545988	IdentifierDeclType	uint		9543551	0					
ANR	9545989	Identifier	s1		9543551	1					
ANR	9545990	AssignmentExpression	s1 = ss -> prev [ 1 ]		9543551	2		=			
ANR	9545991	Identifier	s1		9543551	0					
ANR	9545992	ArrayIndexing	ss -> prev [ 1 ]		9543551	1					
ANR	9545993	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9545994	Identifier	ss		9543551	0					
ANR	9545995	Identifier	prev		9543551	1					
ANR	9545996	PrimaryExpression	1		9543551	1					
ANR	9545997	IdentifierDecl	s2 = ss -> prev [ 2 ]		9543551	1					
ANR	9545998	IdentifierDeclType	uint		9543551	0					
ANR	9545999	Identifier	s2		9543551	1					
ANR	9546000	AssignmentExpression	s2 = ss -> prev [ 2 ]		9543551	2		=			
ANR	9546001	Identifier	s2		9543551	0					
ANR	9546002	ArrayIndexing	ss -> prev [ 2 ]		9543551	1					
ANR	9546003	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546004	Identifier	ss		9543551	0					
ANR	9546005	Identifier	prev		9543551	1					
ANR	9546006	PrimaryExpression	2		9543551	1					
ANR	9546007	ExpressionStatement	"LOOP_BY ( 3 , ( ENCODE8 ( s0 , - 2 ) , ENCODE8 ( s1 , - 1 ) , ENCODE8 ( s2 , 0 ) ) )"	418:12:12649:12735	9543551	1	True				
ANR	9546008	CallExpression	"LOOP_BY ( 3 , ( ENCODE8 ( s0 , - 2 ) , ENCODE8 ( s1 , - 1 ) , ENCODE8 ( s2 , 0 ) ) )"		9543551	0					
ANR	9546009	Callee	LOOP_BY		9543551	0					
ANR	9546010	Identifier	LOOP_BY		9543551	0					
ANR	9546011	ArgumentList	3		9543551	1					
ANR	9546012	Argument	3		9543551	0					
ANR	9546013	PrimaryExpression	3		9543551	0					
ANR	9546014	Argument	"ENCODE8 ( s0 , - 2 ) , ENCODE8 ( s1 , - 1 ) , ENCODE8 ( s2 , 0 )"		9543551	1					
ANR	9546015	Expression	"ENCODE8 ( s0 , - 2 ) , ENCODE8 ( s1 , - 1 ) , ENCODE8 ( s2 , 0 )"		9543551	0					
ANR	9546016	CallExpression	"ENCODE8 ( s0 , - 2 )"		9543551	0					
ANR	9546017	Callee	ENCODE8		9543551	0					
ANR	9546018	Identifier	ENCODE8		9543551	0					
ANR	9546019	ArgumentList	s0		9543551	1					
ANR	9546020	Argument	s0		9543551	0					
ANR	9546021	Identifier	s0		9543551	0					
ANR	9546022	Argument	- 2		9543551	1					
ANR	9546023	UnaryOperationExpression	- 2		9543551	0					
ANR	9546024	UnaryOperator	-		9543551	0					
ANR	9546025	PrimaryExpression	2		9543551	1					
ANR	9546026	Expression	"ENCODE8 ( s1 , - 1 ) , ENCODE8 ( s2 , 0 )"		9543551	1					
ANR	9546027	CallExpression	"ENCODE8 ( s1 , - 1 )"		9543551	0					
ANR	9546028	Callee	ENCODE8		9543551	0					
ANR	9546029	Identifier	ENCODE8		9543551	0					
ANR	9546030	ArgumentList	s1		9543551	1					
ANR	9546031	Argument	s1		9543551	0					
ANR	9546032	Identifier	s1		9543551	0					
ANR	9546033	Argument	- 1		9543551	1					
ANR	9546034	UnaryOperationExpression	- 1		9543551	0					
ANR	9546035	UnaryOperator	-		9543551	0					
ANR	9546036	PrimaryExpression	1		9543551	1					
ANR	9546037	CallExpression	"ENCODE8 ( s2 , 0 )"		9543551	1					
ANR	9546038	Callee	ENCODE8		9543551	0					
ANR	9546039	Identifier	ENCODE8		9543551	0					
ANR	9546040	ArgumentList	s2		9543551	1					
ANR	9546041	Argument	s2		9543551	0					
ANR	9546042	Identifier	s2		9543551	0					
ANR	9546043	Argument	0		9543551	1					
ANR	9546044	PrimaryExpression	0		9543551	0					
ANR	9546045	ExpressionStatement	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2"	420:12:12749:12801	9543551	2	True				
ANR	9546046	Expression	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2"		9543551	0					
ANR	9546047	AssignmentExpression	ss -> prev [ 0 ] = s0		9543551	0		=			
ANR	9546048	ArrayIndexing	ss -> prev [ 0 ]		9543551	0					
ANR	9546049	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546050	Identifier	ss		9543551	0					
ANR	9546051	Identifier	prev		9543551	1					
ANR	9546052	PrimaryExpression	0		9543551	1					
ANR	9546053	Identifier	s0		9543551	1					
ANR	9546054	Expression	"ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2"		9543551	1					
ANR	9546055	AssignmentExpression	ss -> prev [ 1 ] = s1		9543551	0		=			
ANR	9546056	ArrayIndexing	ss -> prev [ 1 ]		9543551	0					
ANR	9546057	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546058	Identifier	ss		9543551	0					
ANR	9546059	Identifier	prev		9543551	1					
ANR	9546060	PrimaryExpression	1		9543551	1					
ANR	9546061	Identifier	s1		9543551	1					
ANR	9546062	AssignmentExpression	ss -> prev [ 2 ] = s2		9543551	1		=			
ANR	9546063	ArrayIndexing	ss -> prev [ 2 ]		9543551	0					
ANR	9546064	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546065	Identifier	ss		9543551	0					
ANR	9546066	Identifier	prev		9543551	1					
ANR	9546067	PrimaryExpression	2		9543551	1					
ANR	9546068	Identifier	s2		9543551	1					
ANR	9546069	GotoStatement	goto enc8 ;	421:12:12815:12824	9543551	3	True				
ANR	9546070	Identifier	enc8		9543551	0					
ANR	9546071	Statement	case	424:8:12845:12848	9543551	595	True				
ANR	9546072	Statement	cDecode	424:13:12850:12856	9543551	596	True				
ANR	9546073	Statement	+	424:21:12858:12858	9543551	597	True				
ANR	9546074	Statement	cBits8	424:23:12860:12865	9543551	598	True				
ANR	9546075	Statement	+	424:30:12867:12867	9543551	599	True				
ANR	9546076	Label	3 :	424:32:12869:12870	9543551	600	True				
ANR	9546077	CompoundStatement		336:12:10497:10536	9543551	601					
ANR	9546078	IdentifierDeclStatement	"uint s1 = ss -> prev [ 1 ] , s2 = ss -> prev [ 2 ] ;"	425:12:12886:12925	9543551	0	True				
ANR	9546079	IdentifierDecl	s1 = ss -> prev [ 1 ]		9543551	0					
ANR	9546080	IdentifierDeclType	uint		9543551	0					
ANR	9546081	Identifier	s1		9543551	1					
ANR	9546082	AssignmentExpression	s1 = ss -> prev [ 1 ]		9543551	2		=			
ANR	9546083	Identifier	s1		9543551	0					
ANR	9546084	ArrayIndexing	ss -> prev [ 1 ]		9543551	1					
ANR	9546085	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546086	Identifier	ss		9543551	0					
ANR	9546087	Identifier	prev		9543551	1					
ANR	9546088	PrimaryExpression	1		9543551	1					
ANR	9546089	IdentifierDecl	s2 = ss -> prev [ 2 ]		9543551	1					
ANR	9546090	IdentifierDeclType	uint		9543551	0					
ANR	9546091	Identifier	s2		9543551	1					
ANR	9546092	AssignmentExpression	s2 = ss -> prev [ 2 ]		9543551	2		=			
ANR	9546093	Identifier	s2		9543551	0					
ANR	9546094	ArrayIndexing	ss -> prev [ 2 ]		9543551	1					
ANR	9546095	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546096	Identifier	ss		9543551	0					
ANR	9546097	Identifier	prev		9543551	1					
ANR	9546098	PrimaryExpression	2		9543551	1					
ANR	9546099	ExpressionStatement	"LOOP_BY ( 3 , ( DECODE8 ( s0 , - 2 ) , DECODE8 ( s1 , - 1 ) , DECODE8 ( s2 , 0 ) ) )"	427:12:12940:13026	9543551	1	True				
ANR	9546100	CallExpression	"LOOP_BY ( 3 , ( DECODE8 ( s0 , - 2 ) , DECODE8 ( s1 , - 1 ) , DECODE8 ( s2 , 0 ) ) )"		9543551	0					
ANR	9546101	Callee	LOOP_BY		9543551	0					
ANR	9546102	Identifier	LOOP_BY		9543551	0					
ANR	9546103	ArgumentList	3		9543551	1					
ANR	9546104	Argument	3		9543551	0					
ANR	9546105	PrimaryExpression	3		9543551	0					
ANR	9546106	Argument	"DECODE8 ( s0 , - 2 ) , DECODE8 ( s1 , - 1 ) , DECODE8 ( s2 , 0 )"		9543551	1					
ANR	9546107	Expression	"DECODE8 ( s0 , - 2 ) , DECODE8 ( s1 , - 1 ) , DECODE8 ( s2 , 0 )"		9543551	0					
ANR	9546108	CallExpression	"DECODE8 ( s0 , - 2 )"		9543551	0					
ANR	9546109	Callee	DECODE8		9543551	0					
ANR	9546110	Identifier	DECODE8		9543551	0					
ANR	9546111	ArgumentList	s0		9543551	1					
ANR	9546112	Argument	s0		9543551	0					
ANR	9546113	Identifier	s0		9543551	0					
ANR	9546114	Argument	- 2		9543551	1					
ANR	9546115	UnaryOperationExpression	- 2		9543551	0					
ANR	9546116	UnaryOperator	-		9543551	0					
ANR	9546117	PrimaryExpression	2		9543551	1					
ANR	9546118	Expression	"DECODE8 ( s1 , - 1 ) , DECODE8 ( s2 , 0 )"		9543551	1					
ANR	9546119	CallExpression	"DECODE8 ( s1 , - 1 )"		9543551	0					
ANR	9546120	Callee	DECODE8		9543551	0					
ANR	9546121	Identifier	DECODE8		9543551	0					
ANR	9546122	ArgumentList	s1		9543551	1					
ANR	9546123	Argument	s1		9543551	0					
ANR	9546124	Identifier	s1		9543551	0					
ANR	9546125	Argument	- 1		9543551	1					
ANR	9546126	UnaryOperationExpression	- 1		9543551	0					
ANR	9546127	UnaryOperator	-		9543551	0					
ANR	9546128	PrimaryExpression	1		9543551	1					
ANR	9546129	CallExpression	"DECODE8 ( s2 , 0 )"		9543551	1					
ANR	9546130	Callee	DECODE8		9543551	0					
ANR	9546131	Identifier	DECODE8		9543551	0					
ANR	9546132	ArgumentList	s2		9543551	1					
ANR	9546133	Argument	s2		9543551	0					
ANR	9546134	Identifier	s2		9543551	0					
ANR	9546135	Argument	0		9543551	1					
ANR	9546136	PrimaryExpression	0		9543551	0					
ANR	9546137	ExpressionStatement	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2"	429:12:13040:13092	9543551	2	True				
ANR	9546138	Expression	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2"		9543551	0					
ANR	9546139	AssignmentExpression	ss -> prev [ 0 ] = s0		9543551	0		=			
ANR	9546140	ArrayIndexing	ss -> prev [ 0 ]		9543551	0					
ANR	9546141	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546142	Identifier	ss		9543551	0					
ANR	9546143	Identifier	prev		9543551	1					
ANR	9546144	PrimaryExpression	0		9543551	1					
ANR	9546145	Identifier	s0		9543551	1					
ANR	9546146	Expression	"ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2"		9543551	1					
ANR	9546147	AssignmentExpression	ss -> prev [ 1 ] = s1		9543551	0		=			
ANR	9546148	ArrayIndexing	ss -> prev [ 1 ]		9543551	0					
ANR	9546149	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546150	Identifier	ss		9543551	0					
ANR	9546151	Identifier	prev		9543551	1					
ANR	9546152	PrimaryExpression	1		9543551	1					
ANR	9546153	Identifier	s1		9543551	1					
ANR	9546154	AssignmentExpression	ss -> prev [ 2 ] = s2		9543551	1		=			
ANR	9546155	ArrayIndexing	ss -> prev [ 2 ]		9543551	0					
ANR	9546156	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546157	Identifier	ss		9543551	0					
ANR	9546158	Identifier	prev		9543551	1					
ANR	9546159	PrimaryExpression	2		9543551	1					
ANR	9546160	Identifier	s2		9543551	1					
ANR	9546161	GotoStatement	goto dec8 ;	430:12:13106:13115	9543551	3	True				
ANR	9546162	Identifier	dec8		9543551	0					
ANR	9546163	BreakStatement	break ;	431:10:13127:13132	9543551	602	True				
ANR	9546164	Statement	case	433:8:13143:13146	9543551	603	True				
ANR	9546165	Statement	cEncode	433:13:13148:13154	9543551	604	True				
ANR	9546166	Statement	+	433:21:13156:13156	9543551	605	True				
ANR	9546167	Statement	cBits8	433:23:13158:13163	9543551	606	True				
ANR	9546168	Statement	+	433:30:13165:13165	9543551	607	True				
ANR	9546169	Label	4 :	433:32:13167:13168	9543551	608	True				
ANR	9546170	CompoundStatement		345:12:10795:10852	9543551	609					
ANR	9546171	IdentifierDeclStatement	"uint s1 = ss -> prev [ 1 ] , s2 = ss -> prev [ 2 ] , s3 = ss -> prev [ 3 ] ;"	434:12:13184:13241	9543551	0	True				
ANR	9546172	IdentifierDecl	s1 = ss -> prev [ 1 ]		9543551	0					
ANR	9546173	IdentifierDeclType	uint		9543551	0					
ANR	9546174	Identifier	s1		9543551	1					
ANR	9546175	AssignmentExpression	s1 = ss -> prev [ 1 ]		9543551	2		=			
ANR	9546176	Identifier	s1		9543551	0					
ANR	9546177	ArrayIndexing	ss -> prev [ 1 ]		9543551	1					
ANR	9546178	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546179	Identifier	ss		9543551	0					
ANR	9546180	Identifier	prev		9543551	1					
ANR	9546181	PrimaryExpression	1		9543551	1					
ANR	9546182	IdentifierDecl	s2 = ss -> prev [ 2 ]		9543551	1					
ANR	9546183	IdentifierDeclType	uint		9543551	0					
ANR	9546184	Identifier	s2		9543551	1					
ANR	9546185	AssignmentExpression	s2 = ss -> prev [ 2 ]		9543551	2		=			
ANR	9546186	Identifier	s2		9543551	0					
ANR	9546187	ArrayIndexing	ss -> prev [ 2 ]		9543551	1					
ANR	9546188	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546189	Identifier	ss		9543551	0					
ANR	9546190	Identifier	prev		9543551	1					
ANR	9546191	PrimaryExpression	2		9543551	1					
ANR	9546192	IdentifierDecl	s3 = ss -> prev [ 3 ]		9543551	2					
ANR	9546193	IdentifierDeclType	uint		9543551	0					
ANR	9546194	Identifier	s3		9543551	1					
ANR	9546195	AssignmentExpression	s3 = ss -> prev [ 3 ]		9543551	2		=			
ANR	9546196	Identifier	s3		9543551	0					
ANR	9546197	ArrayIndexing	ss -> prev [ 3 ]		9543551	1					
ANR	9546198	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546199	Identifier	ss		9543551	0					
ANR	9546200	Identifier	prev		9543551	1					
ANR	9546201	PrimaryExpression	3		9543551	1					
ANR	9546202	ExpressionStatement	"LOOP_BY ( 4 , ( ENCODE8 ( s0 , - 3 ) , ENCODE8 ( s1 , - 2 ) , ENCODE8 ( s2 , - 1 ) , ENCODE8 ( s3 , 0 ) ) )"	436:12:13256:13359	9543551	1	True				
ANR	9546203	CallExpression	"LOOP_BY ( 4 , ( ENCODE8 ( s0 , - 3 ) , ENCODE8 ( s1 , - 2 ) , ENCODE8 ( s2 , - 1 ) , ENCODE8 ( s3 , 0 ) ) )"		9543551	0					
ANR	9546204	Callee	LOOP_BY		9543551	0					
ANR	9546205	Identifier	LOOP_BY		9543551	0					
ANR	9546206	ArgumentList	4		9543551	1					
ANR	9546207	Argument	4		9543551	0					
ANR	9546208	PrimaryExpression	4		9543551	0					
ANR	9546209	Argument	"ENCODE8 ( s0 , - 3 ) , ENCODE8 ( s1 , - 2 ) , ENCODE8 ( s2 , - 1 ) , ENCODE8 ( s3 , 0 )"		9543551	1					
ANR	9546210	Expression	"ENCODE8 ( s0 , - 3 ) , ENCODE8 ( s1 , - 2 ) , ENCODE8 ( s2 , - 1 ) , ENCODE8 ( s3 , 0 )"		9543551	0					
ANR	9546211	CallExpression	"ENCODE8 ( s0 , - 3 )"		9543551	0					
ANR	9546212	Callee	ENCODE8		9543551	0					
ANR	9546213	Identifier	ENCODE8		9543551	0					
ANR	9546214	ArgumentList	s0		9543551	1					
ANR	9546215	Argument	s0		9543551	0					
ANR	9546216	Identifier	s0		9543551	0					
ANR	9546217	Argument	- 3		9543551	1					
ANR	9546218	UnaryOperationExpression	- 3		9543551	0					
ANR	9546219	UnaryOperator	-		9543551	0					
ANR	9546220	PrimaryExpression	3		9543551	1					
ANR	9546221	Expression	"ENCODE8 ( s1 , - 2 ) , ENCODE8 ( s2 , - 1 ) , ENCODE8 ( s3 , 0 )"		9543551	1					
ANR	9546222	CallExpression	"ENCODE8 ( s1 , - 2 )"		9543551	0					
ANR	9546223	Callee	ENCODE8		9543551	0					
ANR	9546224	Identifier	ENCODE8		9543551	0					
ANR	9546225	ArgumentList	s1		9543551	1					
ANR	9546226	Argument	s1		9543551	0					
ANR	9546227	Identifier	s1		9543551	0					
ANR	9546228	Argument	- 2		9543551	1					
ANR	9546229	UnaryOperationExpression	- 2		9543551	0					
ANR	9546230	UnaryOperator	-		9543551	0					
ANR	9546231	PrimaryExpression	2		9543551	1					
ANR	9546232	Expression	"ENCODE8 ( s2 , - 1 ) , ENCODE8 ( s3 , 0 )"		9543551	1					
ANR	9546233	CallExpression	"ENCODE8 ( s2 , - 1 )"		9543551	0					
ANR	9546234	Callee	ENCODE8		9543551	0					
ANR	9546235	Identifier	ENCODE8		9543551	0					
ANR	9546236	ArgumentList	s2		9543551	1					
ANR	9546237	Argument	s2		9543551	0					
ANR	9546238	Identifier	s2		9543551	0					
ANR	9546239	Argument	- 1		9543551	1					
ANR	9546240	UnaryOperationExpression	- 1		9543551	0					
ANR	9546241	UnaryOperator	-		9543551	0					
ANR	9546242	PrimaryExpression	1		9543551	1					
ANR	9546243	CallExpression	"ENCODE8 ( s3 , 0 )"		9543551	1					
ANR	9546244	Callee	ENCODE8		9543551	0					
ANR	9546245	Identifier	ENCODE8		9543551	0					
ANR	9546246	ArgumentList	s3		9543551	1					
ANR	9546247	Argument	s3		9543551	0					
ANR	9546248	Identifier	s3		9543551	0					
ANR	9546249	Argument	0		9543551	1					
ANR	9546250	PrimaryExpression	0		9543551	0					
ANR	9546251	ExpressionStatement	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"	438:12:13373:13443	9543551	2	True				
ANR	9546252	Expression	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"		9543551	0					
ANR	9546253	AssignmentExpression	ss -> prev [ 0 ] = s0		9543551	0		=			
ANR	9546254	ArrayIndexing	ss -> prev [ 0 ]		9543551	0					
ANR	9546255	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546256	Identifier	ss		9543551	0					
ANR	9546257	Identifier	prev		9543551	1					
ANR	9546258	PrimaryExpression	0		9543551	1					
ANR	9546259	Identifier	s0		9543551	1					
ANR	9546260	Expression	"ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"		9543551	1					
ANR	9546261	AssignmentExpression	ss -> prev [ 1 ] = s1		9543551	0		=			
ANR	9546262	ArrayIndexing	ss -> prev [ 1 ]		9543551	0					
ANR	9546263	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546264	Identifier	ss		9543551	0					
ANR	9546265	Identifier	prev		9543551	1					
ANR	9546266	PrimaryExpression	1		9543551	1					
ANR	9546267	Identifier	s1		9543551	1					
ANR	9546268	Expression	"ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"		9543551	1					
ANR	9546269	AssignmentExpression	ss -> prev [ 2 ] = s2		9543551	0		=			
ANR	9546270	ArrayIndexing	ss -> prev [ 2 ]		9543551	0					
ANR	9546271	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546272	Identifier	ss		9543551	0					
ANR	9546273	Identifier	prev		9543551	1					
ANR	9546274	PrimaryExpression	2		9543551	1					
ANR	9546275	Identifier	s2		9543551	1					
ANR	9546276	AssignmentExpression	ss -> prev [ 3 ] = s3		9543551	1		=			
ANR	9546277	ArrayIndexing	ss -> prev [ 3 ]		9543551	0					
ANR	9546278	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546279	Identifier	ss		9543551	0					
ANR	9546280	Identifier	prev		9543551	1					
ANR	9546281	PrimaryExpression	3		9543551	1					
ANR	9546282	Identifier	s3		9543551	1					
ANR	9546283	GotoStatement	goto enc8 ;	439:12:13457:13466	9543551	3	True				
ANR	9546284	Identifier	enc8		9543551	0					
ANR	9546285	BreakStatement	break ;	440:10:13478:13483	9543551	610	True				
ANR	9546286	Statement	case	442:8:13494:13497	9543551	611	True				
ANR	9546287	Statement	cDecode	442:13:13499:13505	9543551	612	True				
ANR	9546288	Statement	+	442:21:13507:13507	9543551	613	True				
ANR	9546289	Statement	cBits8	442:23:13509:13514	9543551	614	True				
ANR	9546290	Statement	+	442:30:13516:13516	9543551	615	True				
ANR	9546291	Label	4 :	442:32:13518:13519	9543551	616	True				
ANR	9546292	CompoundStatement		354:12:11146:11203	9543551	617					
ANR	9546293	IdentifierDeclStatement	"uint s1 = ss -> prev [ 1 ] , s2 = ss -> prev [ 2 ] , s3 = ss -> prev [ 3 ] ;"	443:12:13535:13592	9543551	0	True				
ANR	9546294	IdentifierDecl	s1 = ss -> prev [ 1 ]		9543551	0					
ANR	9546295	IdentifierDeclType	uint		9543551	0					
ANR	9546296	Identifier	s1		9543551	1					
ANR	9546297	AssignmentExpression	s1 = ss -> prev [ 1 ]		9543551	2		=			
ANR	9546298	Identifier	s1		9543551	0					
ANR	9546299	ArrayIndexing	ss -> prev [ 1 ]		9543551	1					
ANR	9546300	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546301	Identifier	ss		9543551	0					
ANR	9546302	Identifier	prev		9543551	1					
ANR	9546303	PrimaryExpression	1		9543551	1					
ANR	9546304	IdentifierDecl	s2 = ss -> prev [ 2 ]		9543551	1					
ANR	9546305	IdentifierDeclType	uint		9543551	0					
ANR	9546306	Identifier	s2		9543551	1					
ANR	9546307	AssignmentExpression	s2 = ss -> prev [ 2 ]		9543551	2		=			
ANR	9546308	Identifier	s2		9543551	0					
ANR	9546309	ArrayIndexing	ss -> prev [ 2 ]		9543551	1					
ANR	9546310	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546311	Identifier	ss		9543551	0					
ANR	9546312	Identifier	prev		9543551	1					
ANR	9546313	PrimaryExpression	2		9543551	1					
ANR	9546314	IdentifierDecl	s3 = ss -> prev [ 3 ]		9543551	2					
ANR	9546315	IdentifierDeclType	uint		9543551	0					
ANR	9546316	Identifier	s3		9543551	1					
ANR	9546317	AssignmentExpression	s3 = ss -> prev [ 3 ]		9543551	2		=			
ANR	9546318	Identifier	s3		9543551	0					
ANR	9546319	ArrayIndexing	ss -> prev [ 3 ]		9543551	1					
ANR	9546320	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546321	Identifier	ss		9543551	0					
ANR	9546322	Identifier	prev		9543551	1					
ANR	9546323	PrimaryExpression	3		9543551	1					
ANR	9546324	ExpressionStatement	"LOOP_BY ( 4 , ( DECODE8 ( s0 , - 3 ) , DECODE8 ( s1 , - 2 ) , DECODE8 ( s2 , - 1 ) , DECODE8 ( s3 , 0 ) ) )"	445:12:13607:13710	9543551	1	True				
ANR	9546325	CallExpression	"LOOP_BY ( 4 , ( DECODE8 ( s0 , - 3 ) , DECODE8 ( s1 , - 2 ) , DECODE8 ( s2 , - 1 ) , DECODE8 ( s3 , 0 ) ) )"		9543551	0					
ANR	9546326	Callee	LOOP_BY		9543551	0					
ANR	9546327	Identifier	LOOP_BY		9543551	0					
ANR	9546328	ArgumentList	4		9543551	1					
ANR	9546329	Argument	4		9543551	0					
ANR	9546330	PrimaryExpression	4		9543551	0					
ANR	9546331	Argument	"DECODE8 ( s0 , - 3 ) , DECODE8 ( s1 , - 2 ) , DECODE8 ( s2 , - 1 ) , DECODE8 ( s3 , 0 )"		9543551	1					
ANR	9546332	Expression	"DECODE8 ( s0 , - 3 ) , DECODE8 ( s1 , - 2 ) , DECODE8 ( s2 , - 1 ) , DECODE8 ( s3 , 0 )"		9543551	0					
ANR	9546333	CallExpression	"DECODE8 ( s0 , - 3 )"		9543551	0					
ANR	9546334	Callee	DECODE8		9543551	0					
ANR	9546335	Identifier	DECODE8		9543551	0					
ANR	9546336	ArgumentList	s0		9543551	1					
ANR	9546337	Argument	s0		9543551	0					
ANR	9546338	Identifier	s0		9543551	0					
ANR	9546339	Argument	- 3		9543551	1					
ANR	9546340	UnaryOperationExpression	- 3		9543551	0					
ANR	9546341	UnaryOperator	-		9543551	0					
ANR	9546342	PrimaryExpression	3		9543551	1					
ANR	9546343	Expression	"DECODE8 ( s1 , - 2 ) , DECODE8 ( s2 , - 1 ) , DECODE8 ( s3 , 0 )"		9543551	1					
ANR	9546344	CallExpression	"DECODE8 ( s1 , - 2 )"		9543551	0					
ANR	9546345	Callee	DECODE8		9543551	0					
ANR	9546346	Identifier	DECODE8		9543551	0					
ANR	9546347	ArgumentList	s1		9543551	1					
ANR	9546348	Argument	s1		9543551	0					
ANR	9546349	Identifier	s1		9543551	0					
ANR	9546350	Argument	- 2		9543551	1					
ANR	9546351	UnaryOperationExpression	- 2		9543551	0					
ANR	9546352	UnaryOperator	-		9543551	0					
ANR	9546353	PrimaryExpression	2		9543551	1					
ANR	9546354	Expression	"DECODE8 ( s2 , - 1 ) , DECODE8 ( s3 , 0 )"		9543551	1					
ANR	9546355	CallExpression	"DECODE8 ( s2 , - 1 )"		9543551	0					
ANR	9546356	Callee	DECODE8		9543551	0					
ANR	9546357	Identifier	DECODE8		9543551	0					
ANR	9546358	ArgumentList	s2		9543551	1					
ANR	9546359	Argument	s2		9543551	0					
ANR	9546360	Identifier	s2		9543551	0					
ANR	9546361	Argument	- 1		9543551	1					
ANR	9546362	UnaryOperationExpression	- 1		9543551	0					
ANR	9546363	UnaryOperator	-		9543551	0					
ANR	9546364	PrimaryExpression	1		9543551	1					
ANR	9546365	CallExpression	"DECODE8 ( s3 , 0 )"		9543551	1					
ANR	9546366	Callee	DECODE8		9543551	0					
ANR	9546367	Identifier	DECODE8		9543551	0					
ANR	9546368	ArgumentList	s3		9543551	1					
ANR	9546369	Argument	s3		9543551	0					
ANR	9546370	Identifier	s3		9543551	0					
ANR	9546371	Argument	0		9543551	1					
ANR	9546372	PrimaryExpression	0		9543551	0					
ANR	9546373	ExpressionStatement	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"	447:12:13724:13794	9543551	2	True				
ANR	9546374	Expression	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"		9543551	0					
ANR	9546375	AssignmentExpression	ss -> prev [ 0 ] = s0		9543551	0		=			
ANR	9546376	ArrayIndexing	ss -> prev [ 0 ]		9543551	0					
ANR	9546377	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546378	Identifier	ss		9543551	0					
ANR	9546379	Identifier	prev		9543551	1					
ANR	9546380	PrimaryExpression	0		9543551	1					
ANR	9546381	Identifier	s0		9543551	1					
ANR	9546382	Expression	"ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"		9543551	1					
ANR	9546383	AssignmentExpression	ss -> prev [ 1 ] = s1		9543551	0		=			
ANR	9546384	ArrayIndexing	ss -> prev [ 1 ]		9543551	0					
ANR	9546385	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546386	Identifier	ss		9543551	0					
ANR	9546387	Identifier	prev		9543551	1					
ANR	9546388	PrimaryExpression	1		9543551	1					
ANR	9546389	Identifier	s1		9543551	1					
ANR	9546390	Expression	"ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"		9543551	1					
ANR	9546391	AssignmentExpression	ss -> prev [ 2 ] = s2		9543551	0		=			
ANR	9546392	ArrayIndexing	ss -> prev [ 2 ]		9543551	0					
ANR	9546393	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546394	Identifier	ss		9543551	0					
ANR	9546395	Identifier	prev		9543551	1					
ANR	9546396	PrimaryExpression	2		9543551	1					
ANR	9546397	Identifier	s2		9543551	1					
ANR	9546398	AssignmentExpression	ss -> prev [ 3 ] = s3		9543551	1		=			
ANR	9546399	ArrayIndexing	ss -> prev [ 3 ]		9543551	0					
ANR	9546400	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546401	Identifier	ss		9543551	0					
ANR	9546402	Identifier	prev		9543551	1					
ANR	9546403	PrimaryExpression	3		9543551	1					
ANR	9546404	Identifier	s3		9543551	1					
ANR	9546405	GotoStatement	goto dec8 ;	448:12:13808:13817	9543551	3	True				
ANR	9546406	Identifier	dec8		9543551	0					
ANR	9546407	BreakStatement	break ;	449:10:13829:13834	9543551	618	True				
ANR	9546408	Statement	undef	451:1:13838:13842	9543551	619	True				
ANR	9546409	Statement	ENCODE8	451:7:13844:13850	9543551	620	True				
ANR	9546410	Statement	undef	452:1:13853:13857	9543551	621	True				
ANR	9546411	Statement	DECODE8	452:7:13859:13865	9543551	622	True				
ANR	9546412	Statement	define	456:1:13910:13915	9543551	623	True				
ANR	9546413	Statement	ENCODE16	456:8:13917:13924	9543551	624	True				
ANR	9546414	Statement	(	456:16:13925:13925	9543551	625	True				
ANR	9546415	Statement	s	456:17:13926:13926	9543551	626	True				
ANR	9546416	Statement	","	456:18:13927:13927	9543551	627	True				
ANR	9546417	Statement	d	456:20:13929:13929	9543551	628	True				
ANR	9546418	Statement	)	456:21:13930:13930	9543551	629	True				
ANR	9546419	Statement	(	456:23:13932:13932	9543551	630	True				
ANR	9546420	Statement	ti	456:24:13933:13934	9543551	631	True				
ANR	9546421	Statement	=	456:27:13936:13936	9543551	632	True				
ANR	9546422	Statement	(	456:29:13938:13938	9543551	633	True				
ANR	9546423	Statement	(	456:30:13939:13939	9543551	634	True				
ANR	9546424	Statement	p	456:31:13940:13940	9543551	635	True				
ANR	9546425	Statement	[	456:32:13941:13941	9543551	636	True				
ANR	9546426	Statement	d	456:33:13942:13942	9543551	637	True				
ANR	9546427	Statement	-	456:34:13943:13943	9543551	638	True				
ANR	9546428	Statement	1	456:35:13944:13944	9543551	639	True				
ANR	9546429	Statement	]	456:36:13945:13945	9543551	640	True				
ANR	9546430	Statement	<<	456:38:13947:13948	9543551	641	True				
ANR	9546431	Statement	8	456:41:13950:13950	9543551	642	True				
ANR	9546432	Statement	)	456:42:13951:13951	9543551	643	True				
ANR	9546433	Statement	+	456:44:13953:13953	9543551	644	True				
ANR	9546434	Statement	p	456:46:13955:13955	9543551	645	True				
ANR	9546435	Statement	[	456:47:13956:13956	9543551	646	True				
ANR	9546436	Statement	d	456:48:13957:13957	9543551	647	True				
ANR	9546437	Statement	]	456:49:13958:13958	9543551	648	True				
ANR	9546438	Statement	)	456:50:13959:13959	9543551	649	True				
ANR	9546439	Statement	","	456:51:13960:13960	9543551	650	True				
ANR	9546440	Statement	s	456:53:13962:13962	9543551	651	True				
ANR	9546441	Statement	=	456:55:13964:13964	9543551	652	True				
ANR	9546442	Statement	ti	456:57:13966:13967	9543551	653	True				
ANR	9546443	Statement	-	456:60:13969:13969	9543551	654	True				
ANR	9546444	Statement	s	456:62:13971:13971	9543551	655	True				
ANR	9546445	Statement	","	456:63:13972:13972	9543551	656	True				
ANR	9546446	Statement	q	457:12:13987:13987	9543551	657	True				
ANR	9546447	Statement	[	457:13:13988:13988	9543551	658	True				
ANR	9546448	Statement	d	457:14:13989:13989	9543551	659	True				
ANR	9546449	Statement	-	457:15:13990:13990	9543551	660	True				
ANR	9546450	Statement	1	457:16:13991:13991	9543551	661	True				
ANR	9546451	Statement	]	457:17:13992:13992	9543551	662	True				
ANR	9546452	Statement	=	457:19:13994:13994	9543551	663	True				
ANR	9546453	Statement	s	457:21:13996:13996	9543551	664	True				
ANR	9546454	Statement	>>	457:23:13998:13999	9543551	665	True				
ANR	9546455	Statement	8	457:26:14001:14001	9543551	666	True				
ANR	9546456	Statement	","	457:27:14002:14002	9543551	667	True				
ANR	9546457	Statement	q	457:29:14004:14004	9543551	668	True				
ANR	9546458	Statement	[	457:30:14005:14005	9543551	669	True				
ANR	9546459	Statement	d	457:31:14006:14006	9543551	670	True				
ANR	9546460	Statement	]	457:32:14007:14007	9543551	671	True				
ANR	9546461	Statement	=	457:34:14009:14009	9543551	672	True				
ANR	9546462	Statement	s	457:36:14011:14011	9543551	673	True				
ANR	9546463	Statement	&	457:38:14013:14013	9543551	674	True				
ANR	9546464	Statement	0xff	457:40:14015:14018	9543551	675	True				
ANR	9546465	Statement	","	457:44:14019:14019	9543551	676	True				
ANR	9546466	Statement	s	457:46:14021:14021	9543551	677	True				
ANR	9546467	Statement	=	457:48:14023:14023	9543551	678	True				
ANR	9546468	Statement	ti	457:50:14025:14026	9543551	679	True				
ANR	9546469	Statement	)	457:52:14027:14027	9543551	680	True				
ANR	9546470	Statement	define	458:1:14030:14035	9543551	681	True				
ANR	9546471	Statement	DECODE16	458:8:14037:14044	9543551	682	True				
ANR	9546472	Statement	(	458:16:14045:14045	9543551	683	True				
ANR	9546473	Statement	s	458:17:14046:14046	9543551	684	True				
ANR	9546474	Statement	","	458:18:14047:14047	9543551	685	True				
ANR	9546475	Statement	d	458:20:14049:14049	9543551	686	True				
ANR	9546476	Statement	)	458:21:14050:14050	9543551	687	True				
ANR	9546477	Statement	(	458:23:14052:14052	9543551	688	True				
ANR	9546478	Statement	s	458:24:14053:14053	9543551	689	True				
ANR	9546479	Statement	=	458:26:14055:14055	9543551	690	True				
ANR	9546480	Statement	0xffff	458:28:14057:14062	9543551	691	True				
ANR	9546481	Statement	&	458:35:14064:14064	9543551	692	True				
ANR	9546482	Statement	(	458:37:14066:14066	9543551	693	True				
ANR	9546483	Statement	s	458:38:14067:14067	9543551	694	True				
ANR	9546484	Statement	+	458:40:14069:14069	9543551	695	True				
ANR	9546485	Statement	(	458:42:14071:14071	9543551	696	True				
ANR	9546486	Statement	(	458:43:14072:14072	9543551	697	True				
ANR	9546487	Statement	p	458:44:14073:14073	9543551	698	True				
ANR	9546488	Statement	[	458:45:14074:14074	9543551	699	True				
ANR	9546489	Statement	d	458:46:14075:14075	9543551	700	True				
ANR	9546490	Statement	-	458:47:14076:14076	9543551	701	True				
ANR	9546491	Statement	1	458:48:14077:14077	9543551	702	True				
ANR	9546492	Statement	]	458:49:14078:14078	9543551	703	True				
ANR	9546493	Statement	<<	458:51:14080:14081	9543551	704	True				
ANR	9546494	Statement	8	458:54:14083:14083	9543551	705	True				
ANR	9546495	Statement	)	458:55:14084:14084	9543551	706	True				
ANR	9546496	Statement	+	458:57:14086:14086	9543551	707	True				
ANR	9546497	Statement	p	458:59:14088:14088	9543551	708	True				
ANR	9546498	Statement	[	458:60:14089:14089	9543551	709	True				
ANR	9546499	Statement	d	458:61:14090:14090	9543551	710	True				
ANR	9546500	Statement	]	458:62:14091:14091	9543551	711	True				
ANR	9546501	Statement	)	458:63:14092:14092	9543551	712	True				
ANR	9546502	Statement	)	458:64:14093:14093	9543551	713	True				
ANR	9546503	Statement	","	458:65:14094:14094	9543551	714	True				
ANR	9546504	Statement	q	459:12:14110:14110	9543551	715	True				
ANR	9546505	Statement	[	459:13:14111:14111	9543551	716	True				
ANR	9546506	Statement	d	459:14:14112:14112	9543551	717	True				
ANR	9546507	Statement	-	459:15:14113:14113	9543551	718	True				
ANR	9546508	Statement	1	459:16:14114:14114	9543551	719	True				
ANR	9546509	Statement	]	459:17:14115:14115	9543551	720	True				
ANR	9546510	Statement	=	459:19:14117:14117	9543551	721	True				
ANR	9546511	Statement	s	459:21:14119:14119	9543551	722	True				
ANR	9546512	Statement	>>	459:23:14121:14122	9543551	723	True				
ANR	9546513	Statement	8	459:26:14124:14124	9543551	724	True				
ANR	9546514	Statement	","	459:27:14125:14125	9543551	725	True				
ANR	9546515	Statement	q	459:29:14127:14127	9543551	726	True				
ANR	9546516	Statement	[	459:30:14128:14128	9543551	727	True				
ANR	9546517	Statement	d	459:31:14129:14129	9543551	728	True				
ANR	9546518	Statement	]	459:32:14130:14130	9543551	729	True				
ANR	9546519	Statement	=	459:34:14132:14132	9543551	730	True				
ANR	9546520	Statement	s	459:36:14134:14134	9543551	731	True				
ANR	9546521	Statement	&	459:38:14136:14136	9543551	732	True				
ANR	9546522	Statement	0xff	459:40:14138:14141	9543551	733	True				
ANR	9546523	Statement	)	459:44:14142:14142	9543551	734	True				
ANR	9546524	Statement	case	461:8:14153:14156	9543551	735	True				
ANR	9546525	Statement	cEncode	461:13:14158:14164	9543551	736	True				
ANR	9546526	Statement	+	461:21:14166:14166	9543551	737	True				
ANR	9546527	Statement	cBits16	461:23:14168:14174	9543551	738	True				
ANR	9546528	Statement	+	461:31:14176:14176	9543551	739	True				
ANR	9546529	Label	0 :	461:33:14178:14179	9543551	740	True				
ANR	9546530	Statement	case	462:8:14189:14192	9543551	741	True				
ANR	9546531	Statement	cEncode	462:13:14194:14200	9543551	742	True				
ANR	9546532	Statement	+	462:21:14202:14202	9543551	743	True				
ANR	9546533	Statement	cBits16	462:23:14204:14210	9543551	744	True				
ANR	9546534	Statement	+	462:31:14212:14212	9543551	745	True				
ANR	9546535	Label	2 :	462:33:14214:14215	9543551	746	True				
ANR	9546536	ExpressionStatement	ss -> prev [ 0 ] = s0	463:12:14229:14245	9543551	747	True				
ANR	9546537	AssignmentExpression	ss -> prev [ 0 ] = s0		9543551	0		=			
ANR	9546538	ArrayIndexing	ss -> prev [ 0 ]		9543551	0					
ANR	9546539	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546540	Identifier	ss		9543551	0					
ANR	9546541	Identifier	prev		9543551	1					
ANR	9546542	PrimaryExpression	0		9543551	1					
ANR	9546543	Identifier	s0		9543551	1					
ANR	9546544	ForStatement	for ( ; count >= colors * 2 ; count -= colors * 2 )		9543551	748					
ANR	9546545	Condition	count >= colors * 2	464:19:14266:14282	9543551	0	True				
ANR	9546546	RelationalExpression	count >= colors * 2		9543551	0		>=			
ANR	9546547	Identifier	count		9543551	0					
ANR	9546548	MultiplicativeExpression	colors * 2		9543551	1		*			
ANR	9546549	Identifier	colors		9543551	0					
ANR	9546550	PrimaryExpression	2		9543551	1					
ANR	9546551	AssignmentExpression	count -= colors * 2	464:38:14285:14301	9543551	1	True	-=			
ANR	9546552	Identifier	count		9543551	0					
ANR	9546553	MultiplicativeExpression	colors * 2		9543551	1		*			
ANR	9546554	Identifier	colors		9543551	0					
ANR	9546555	PrimaryExpression	2		9543551	1					
ANR	9546556	ForStatement	for ( ci = 0 ; ci < colors ; ++ ci )		9543551	2					
ANR	9546557	ForInit	ci = 0 ;	465:21:14325:14331	9543551	0	True				
ANR	9546558	AssignmentExpression	ci = 0		9543551	0		=			
ANR	9546559	Identifier	ci		9543551	0					
ANR	9546560	PrimaryExpression	0		9543551	1					
ANR	9546561	Condition	ci < colors	465:29:14333:14343	9543551	1	True				
ANR	9546562	RelationalExpression	ci < colors		9543551	0		<			
ANR	9546563	Identifier	ci		9543551	0					
ANR	9546564	Identifier	colors		9543551	1					
ANR	9546565	UnaryExpression	++ ci	465:42:14346:14349	9543551	2	True				
ANR	9546566	IncDec	++		9543551	0					
ANR	9546567	Identifier	ci		9543551	1					
ANR	9546568	CompoundStatement		377:20:11985:11991	9543551	3					
ANR	9546569	IdentifierDeclStatement	uint k ;	466:20:14374:14380	9543551	0	True				
ANR	9546570	IdentifierDecl	k		9543551	0					
ANR	9546571	IdentifierDeclType	uint		9543551	0					
ANR	9546572	Identifier	k		9543551	1					
ANR	9546573	ExpressionStatement	ti = ( int ) * ++ p << 8	467:20:14402:14422	9543551	1	True				
ANR	9546574	AssignmentExpression	ti = ( int ) * ++ p << 8		9543551	0		=			
ANR	9546575	Identifier	ti		9543551	0					
ANR	9546576	ShiftExpression	( int ) * ++ p << 8		9543551	1		<<			
ANR	9546577	CastExpression	( int ) * ++ p		9543551	0					
ANR	9546578	CastTarget	int		9543551	0					
ANR	9546579	UnaryOperationExpression	* ++ p		9543551	1					
ANR	9546580	UnaryOperator	*		9543551	0					
ANR	9546581	UnaryExpression	++ p		9543551	1					
ANR	9546582	IncDec	++		9543551	0					
ANR	9546583	Identifier	p		9543551	1					
ANR	9546584	PrimaryExpression	8		9543551	1					
ANR	9546585	ExpressionStatement	ti += ( int ) * ++ p	468:20:14444:14459	9543551	2	True				
ANR	9546586	AssignmentExpression	ti += ( int ) * ++ p		9543551	0		+=			
ANR	9546587	Identifier	ti		9543551	0					
ANR	9546588	CastExpression	( int ) * ++ p		9543551	1					
ANR	9546589	CastTarget	int		9543551	0					
ANR	9546590	UnaryOperationExpression	* ++ p		9543551	1					
ANR	9546591	UnaryOperator	*		9543551	0					
ANR	9546592	UnaryExpression	++ p		9543551	1					
ANR	9546593	IncDec	++		9543551	0					
ANR	9546594	Identifier	p		9543551	1					
ANR	9546595	ExpressionStatement	k = ti - ss -> prev [ ci ]	469:20:14481:14502	9543551	3	True				
ANR	9546596	AssignmentExpression	k = ti - ss -> prev [ ci ]		9543551	0		=			
ANR	9546597	Identifier	k		9543551	0					
ANR	9546598	AdditiveExpression	ti - ss -> prev [ ci ]		9543551	1		-			
ANR	9546599	Identifier	ti		9543551	0					
ANR	9546600	ArrayIndexing	ss -> prev [ ci ]		9543551	1					
ANR	9546601	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546602	Identifier	ss		9543551	0					
ANR	9546603	Identifier	prev		9543551	1					
ANR	9546604	Identifier	ci		9543551	1					
ANR	9546605	ExpressionStatement	* ++ q = k >> 8	470:20:14524:14537	9543551	4	True				
ANR	9546606	AssignmentExpression	* ++ q = k >> 8		9543551	0		=			
ANR	9546607	UnaryOperationExpression	* ++ q		9543551	0					
ANR	9546608	UnaryOperator	*		9543551	0					
ANR	9546609	UnaryExpression	++ q		9543551	1					
ANR	9546610	IncDec	++		9543551	0					
ANR	9546611	Identifier	q		9543551	1					
ANR	9546612	ShiftExpression	k >> 8		9543551	1		>>			
ANR	9546613	Identifier	k		9543551	0					
ANR	9546614	PrimaryExpression	8		9543551	1					
ANR	9546615	ExpressionStatement	* ++ q = k & 0xff	471:20:14559:14574	9543551	5	True				
ANR	9546616	AssignmentExpression	* ++ q = k & 0xff		9543551	0		=			
ANR	9546617	UnaryOperationExpression	* ++ q		9543551	0					
ANR	9546618	UnaryOperator	*		9543551	0					
ANR	9546619	UnaryExpression	++ q		9543551	1					
ANR	9546620	IncDec	++		9543551	0					
ANR	9546621	Identifier	q		9543551	1					
ANR	9546622	BitAndExpression	k & 0xff		9543551	1		&			
ANR	9546623	Identifier	k		9543551	0					
ANR	9546624	PrimaryExpression	0xff		9543551	1					
ANR	9546625	ExpressionStatement	ss -> prev [ ci ] = ti	472:20:14596:14613	9543551	6	True				
ANR	9546626	AssignmentExpression	ss -> prev [ ci ] = ti		9543551	0		=			
ANR	9546627	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9546628	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546629	Identifier	ss		9543551	0					
ANR	9546630	Identifier	prev		9543551	1					
ANR	9546631	Identifier	ci		9543551	1					
ANR	9546632	Identifier	ti		9543551	1					
ANR	9546633	ExpressionStatement	s0 = ss -> prev [ 0 ]	474:12:14645:14661	9543551	749	True				
ANR	9546634	AssignmentExpression	s0 = ss -> prev [ 0 ]		9543551	0		=			
ANR	9546635	Identifier	s0		9543551	0					
ANR	9546636	ArrayIndexing	ss -> prev [ 0 ]		9543551	1					
ANR	9546637	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546638	Identifier	ss		9543551	0					
ANR	9546639	Identifier	prev		9543551	1					
ANR	9546640	PrimaryExpression	0		9543551	1					
ANR	9546641	Label	enc16 :	475:4:14667:14672	9543551	750	True				
ANR	9546642	Identifier	enc16		9543551	0					
ANR	9546643	IfStatement	if ( last && ! status )		9543551	751					
ANR	9546644	Condition	last && ! status	476:16:14721:14735	9543551	0	True				
ANR	9546645	AndExpression	last && ! status		9543551	0		&&			
ANR	9546646	Identifier	last		9543551	0					
ANR	9546647	UnaryOperationExpression	! status		9543551	1					
ANR	9546648	UnaryOperator	!		9543551	0					
ANR	9546649	Identifier	status		9543551	1					
ANR	9546650	ForStatement	for ( ci = 0 ; ci < count ; ++ ci )		9543551	1					
ANR	9546651	ForInit	ci = 0 ;	477:21:14759:14765	9543551	0	True				
ANR	9546652	AssignmentExpression	ci = 0		9543551	0		=			
ANR	9546653	Identifier	ci		9543551	0					
ANR	9546654	PrimaryExpression	0		9543551	1					
ANR	9546655	Condition	ci < count	477:29:14767:14776	9543551	1	True				
ANR	9546656	RelationalExpression	ci < count		9543551	0		<			
ANR	9546657	Identifier	ci		9543551	0					
ANR	9546658	Identifier	count		9543551	1					
ANR	9546659	UnaryExpression	++ ci	477:41:14779:14782	9543551	2	True				
ANR	9546660	IncDec	++		9543551	0					
ANR	9546661	Identifier	ci		9543551	1					
ANR	9546662	ExpressionStatement	"* ++ q = * ++ p - ss -> prev [ ci ] , ss -> prev [ ci ] = * p"	478:20:14805:14874	9543551	3	True				
ANR	9546663	Expression	"* ++ q = * ++ p - ss -> prev [ ci ] , ss -> prev [ ci ] = * p"		9543551	0					
ANR	9546664	AssignmentExpression	* ++ q = * ++ p - ss -> prev [ ci ]		9543551	0		=			
ANR	9546665	UnaryOperationExpression	* ++ q		9543551	0					
ANR	9546666	UnaryOperator	*		9543551	0					
ANR	9546667	UnaryExpression	++ q		9543551	1					
ANR	9546668	IncDec	++		9543551	0					
ANR	9546669	Identifier	q		9543551	1					
ANR	9546670	AdditiveExpression	* ++ p - ss -> prev [ ci ]		9543551	1		-			
ANR	9546671	UnaryOperationExpression	* ++ p		9543551	0					
ANR	9546672	UnaryOperator	*		9543551	0					
ANR	9546673	UnaryExpression	++ p		9543551	1					
ANR	9546674	IncDec	++		9543551	0					
ANR	9546675	Identifier	p		9543551	1					
ANR	9546676	ArrayIndexing	ss -> prev [ ci ]		9543551	1					
ANR	9546677	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546678	Identifier	ss		9543551	0					
ANR	9546679	Identifier	prev		9543551	1					
ANR	9546680	Identifier	ci		9543551	1					
ANR	9546681	AssignmentExpression	ss -> prev [ ci ] = * p		9543551	1		=			
ANR	9546682	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9546683	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546684	Identifier	ss		9543551	0					
ANR	9546685	Identifier	prev		9543551	1					
ANR	9546686	Identifier	ci		9543551	1					
ANR	9546687	UnaryOperationExpression	* p		9543551	1					
ANR	9546688	UnaryOperator	*		9543551	0					
ANR	9546689	Identifier	p		9543551	1					
ANR	9546690	BreakStatement	break ;	480:12:14888:14893	9543551	752	True				
ANR	9546691	Statement	case	482:8:14904:14907	9543551	753	True				
ANR	9546692	Statement	cDecode	482:13:14909:14915	9543551	754	True				
ANR	9546693	Statement	+	482:21:14917:14917	9543551	755	True				
ANR	9546694	Statement	cBits16	482:23:14919:14925	9543551	756	True				
ANR	9546695	Statement	+	482:31:14927:14927	9543551	757	True				
ANR	9546696	Label	0 :	482:33:14929:14930	9543551	758	True				
ANR	9546697	Statement	case	483:8:14940:14943	9543551	759	True				
ANR	9546698	Statement	cDecode	483:13:14945:14951	9543551	760	True				
ANR	9546699	Statement	+	483:21:14953:14953	9543551	761	True				
ANR	9546700	Statement	cBits16	483:23:14955:14961	9543551	762	True				
ANR	9546701	Statement	+	483:31:14963:14963	9543551	763	True				
ANR	9546702	Label	2 :	483:33:14965:14966	9543551	764	True				
ANR	9546703	ExpressionStatement	ss -> prev [ 0 ] = s0	484:12:14980:14996	9543551	765	True				
ANR	9546704	AssignmentExpression	ss -> prev [ 0 ] = s0		9543551	0		=			
ANR	9546705	ArrayIndexing	ss -> prev [ 0 ]		9543551	0					
ANR	9546706	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546707	Identifier	ss		9543551	0					
ANR	9546708	Identifier	prev		9543551	1					
ANR	9546709	PrimaryExpression	0		9543551	1					
ANR	9546710	Identifier	s0		9543551	1					
ANR	9546711	ForStatement	for ( ; count >= colors * 2 ; count -= colors * 2 )		9543551	766					
ANR	9546712	Condition	count >= colors * 2	485:19:15017:15033	9543551	0	True				
ANR	9546713	RelationalExpression	count >= colors * 2		9543551	0		>=			
ANR	9546714	Identifier	count		9543551	0					
ANR	9546715	MultiplicativeExpression	colors * 2		9543551	1		*			
ANR	9546716	Identifier	colors		9543551	0					
ANR	9546717	PrimaryExpression	2		9543551	1					
ANR	9546718	AssignmentExpression	count -= colors * 2	485:38:15036:15052	9543551	1	True	-=			
ANR	9546719	Identifier	count		9543551	0					
ANR	9546720	MultiplicativeExpression	colors * 2		9543551	1		*			
ANR	9546721	Identifier	colors		9543551	0					
ANR	9546722	PrimaryExpression	2		9543551	1					
ANR	9546723	ForStatement	for ( ci = 0 ; ci < colors ; ++ ci )		9543551	2					
ANR	9546724	ForInit	ci = 0 ;	486:21:15076:15082	9543551	0	True				
ANR	9546725	AssignmentExpression	ci = 0		9543551	0		=			
ANR	9546726	Identifier	ci		9543551	0					
ANR	9546727	PrimaryExpression	0		9543551	1					
ANR	9546728	Condition	ci < colors	486:29:15084:15094	9543551	1	True				
ANR	9546729	RelationalExpression	ci < colors		9543551	0		<			
ANR	9546730	Identifier	ci		9543551	0					
ANR	9546731	Identifier	colors		9543551	1					
ANR	9546732	UnaryExpression	++ ci	486:42:15097:15100	9543551	2	True				
ANR	9546733	IncDec	++		9543551	0					
ANR	9546734	Identifier	ci		9543551	1					
ANR	9546735	CompoundStatement		397:48:12714:12714	9543551	3					
ANR	9546736	ExpressionStatement	ti = ( int ) * ++ p << 8	487:20:15125:15144	9543551	0	True				
ANR	9546737	AssignmentExpression	ti = ( int ) * ++ p << 8		9543551	0		=			
ANR	9546738	Identifier	ti		9543551	0					
ANR	9546739	ShiftExpression	( int ) * ++ p << 8		9543551	1		<<			
ANR	9546740	CastExpression	( int ) * ++ p		9543551	0					
ANR	9546741	CastTarget	int		9543551	0					
ANR	9546742	UnaryOperationExpression	* ++ p		9543551	1					
ANR	9546743	UnaryOperator	*		9543551	0					
ANR	9546744	UnaryExpression	++ p		9543551	1					
ANR	9546745	IncDec	++		9543551	0					
ANR	9546746	Identifier	p		9543551	1					
ANR	9546747	PrimaryExpression	8		9543551	1					
ANR	9546748	ExpressionStatement	ss -> prev [ ci ] += ti + * ++ p	488:20:15166:15191	9543551	1	True				
ANR	9546749	AssignmentExpression	ss -> prev [ ci ] += ti + * ++ p		9543551	0		+=			
ANR	9546750	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9546751	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546752	Identifier	ss		9543551	0					
ANR	9546753	Identifier	prev		9543551	1					
ANR	9546754	Identifier	ci		9543551	1					
ANR	9546755	AdditiveExpression	ti + * ++ p		9543551	1		+			
ANR	9546756	Identifier	ti		9543551	0					
ANR	9546757	UnaryOperationExpression	* ++ p		9543551	1					
ANR	9546758	UnaryOperator	*		9543551	0					
ANR	9546759	UnaryExpression	++ p		9543551	1					
ANR	9546760	IncDec	++		9543551	0					
ANR	9546761	Identifier	p		9543551	1					
ANR	9546762	ExpressionStatement	* ++ q = ss -> prev [ ci ] >> 8	489:20:15213:15237	9543551	2	True				
ANR	9546763	AssignmentExpression	* ++ q = ss -> prev [ ci ] >> 8		9543551	0		=			
ANR	9546764	UnaryOperationExpression	* ++ q		9543551	0					
ANR	9546765	UnaryOperator	*		9543551	0					
ANR	9546766	UnaryExpression	++ q		9543551	1					
ANR	9546767	IncDec	++		9543551	0					
ANR	9546768	Identifier	q		9543551	1					
ANR	9546769	ShiftExpression	ss -> prev [ ci ] >> 8		9543551	1		>>			
ANR	9546770	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9546771	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546772	Identifier	ss		9543551	0					
ANR	9546773	Identifier	prev		9543551	1					
ANR	9546774	Identifier	ci		9543551	1					
ANR	9546775	PrimaryExpression	8		9543551	1					
ANR	9546776	ExpressionStatement	* ++ q = ss -> prev [ ci ] & 0xff	490:20:15259:15285	9543551	3	True				
ANR	9546777	AssignmentExpression	* ++ q = ss -> prev [ ci ] & 0xff		9543551	0		=			
ANR	9546778	UnaryOperationExpression	* ++ q		9543551	0					
ANR	9546779	UnaryOperator	*		9543551	0					
ANR	9546780	UnaryExpression	++ q		9543551	1					
ANR	9546781	IncDec	++		9543551	0					
ANR	9546782	Identifier	q		9543551	1					
ANR	9546783	BitAndExpression	ss -> prev [ ci ] & 0xff		9543551	1		&			
ANR	9546784	ArrayIndexing	ss -> prev [ ci ]		9543551	0					
ANR	9546785	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546786	Identifier	ss		9543551	0					
ANR	9546787	Identifier	prev		9543551	1					
ANR	9546788	Identifier	ci		9543551	1					
ANR	9546789	PrimaryExpression	0xff		9543551	1					
ANR	9546790	ExpressionStatement	s0 = ss -> prev [ 0 ]	492:12:15317:15333	9543551	767	True				
ANR	9546791	AssignmentExpression	s0 = ss -> prev [ 0 ]		9543551	0		=			
ANR	9546792	Identifier	s0		9543551	0					
ANR	9546793	ArrayIndexing	ss -> prev [ 0 ]		9543551	1					
ANR	9546794	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546795	Identifier	ss		9543551	0					
ANR	9546796	Identifier	prev		9543551	1					
ANR	9546797	PrimaryExpression	0		9543551	1					
ANR	9546798	Label	dec16 :	493:4:15339:15344	9543551	768	True				
ANR	9546799	Identifier	dec16		9543551	0					
ANR	9546800	BreakStatement	break ;	494:12:15389:15394	9543551	769	True				
ANR	9546801	Statement	case	496:8:15405:15408	9543551	770	True				
ANR	9546802	Statement	cEncode	496:13:15410:15416	9543551	771	True				
ANR	9546803	Statement	+	496:21:15418:15418	9543551	772	True				
ANR	9546804	Statement	cBits16	496:23:15420:15426	9543551	773	True				
ANR	9546805	Statement	+	496:31:15428:15428	9543551	774	True				
ANR	9546806	Label	1 :	496:33:15430:15431	9543551	775	True				
ANR	9546807	ExpressionStatement	"LOOP_BY ( 2 , ENCODE16 ( s0 , 0 ) )"	497:11:15444:15471	9543551	776	True				
ANR	9546808	CallExpression	"LOOP_BY ( 2 , ENCODE16 ( s0 , 0 ) )"		9543551	0					
ANR	9546809	Callee	LOOP_BY		9543551	0					
ANR	9546810	Identifier	LOOP_BY		9543551	0					
ANR	9546811	ArgumentList	2		9543551	1					
ANR	9546812	Argument	2		9543551	0					
ANR	9546813	PrimaryExpression	2		9543551	0					
ANR	9546814	Argument	"ENCODE16 ( s0 , 0 )"		9543551	1					
ANR	9546815	CallExpression	"ENCODE16 ( s0 , 0 )"		9543551	0					
ANR	9546816	Callee	ENCODE16		9543551	0					
ANR	9546817	Identifier	ENCODE16		9543551	0					
ANR	9546818	ArgumentList	s0		9543551	1					
ANR	9546819	Argument	s0		9543551	0					
ANR	9546820	Identifier	s0		9543551	0					
ANR	9546821	Argument	0		9543551	1					
ANR	9546822	PrimaryExpression	0		9543551	0					
ANR	9546823	BreakStatement	break ;	498:11:15484:15489	9543551	777	True				
ANR	9546824	Statement	case	500:8:15500:15503	9543551	778	True				
ANR	9546825	Statement	cDecode	500:13:15505:15511	9543551	779	True				
ANR	9546826	Statement	+	500:21:15513:15513	9543551	780	True				
ANR	9546827	Statement	cBits16	500:23:15515:15521	9543551	781	True				
ANR	9546828	Statement	+	500:31:15523:15523	9543551	782	True				
ANR	9546829	Label	1 :	500:33:15525:15526	9543551	783	True				
ANR	9546830	ExpressionStatement	"LOOP_BY ( 2 , DECODE16 ( s0 , 0 ) )"	501:11:15539:15566	9543551	784	True				
ANR	9546831	CallExpression	"LOOP_BY ( 2 , DECODE16 ( s0 , 0 ) )"		9543551	0					
ANR	9546832	Callee	LOOP_BY		9543551	0					
ANR	9546833	Identifier	LOOP_BY		9543551	0					
ANR	9546834	ArgumentList	2		9543551	1					
ANR	9546835	Argument	2		9543551	0					
ANR	9546836	PrimaryExpression	2		9543551	0					
ANR	9546837	Argument	"DECODE16 ( s0 , 0 )"		9543551	1					
ANR	9546838	CallExpression	"DECODE16 ( s0 , 0 )"		9543551	0					
ANR	9546839	Callee	DECODE16		9543551	0					
ANR	9546840	Identifier	DECODE16		9543551	0					
ANR	9546841	ArgumentList	s0		9543551	1					
ANR	9546842	Argument	s0		9543551	0					
ANR	9546843	Identifier	s0		9543551	0					
ANR	9546844	Argument	0		9543551	1					
ANR	9546845	PrimaryExpression	0		9543551	0					
ANR	9546846	BreakStatement	break ;	502:11:15579:15584	9543551	785	True				
ANR	9546847	Statement	case	504:8:15595:15598	9543551	786	True				
ANR	9546848	Statement	cEncode	504:13:15600:15606	9543551	787	True				
ANR	9546849	Statement	+	504:21:15608:15608	9543551	788	True				
ANR	9546850	Statement	cBits16	504:23:15610:15616	9543551	789	True				
ANR	9546851	Statement	+	504:31:15618:15618	9543551	790	True				
ANR	9546852	Label	3 :	504:33:15620:15621	9543551	791	True				
ANR	9546853	CompoundStatement		416:12:13248:13287	9543551	792					
ANR	9546854	IdentifierDeclStatement	"uint s1 = ss -> prev [ 1 ] , s2 = ss -> prev [ 2 ] ;"	505:12:15637:15676	9543551	0	True				
ANR	9546855	IdentifierDecl	s1 = ss -> prev [ 1 ]		9543551	0					
ANR	9546856	IdentifierDeclType	uint		9543551	0					
ANR	9546857	Identifier	s1		9543551	1					
ANR	9546858	AssignmentExpression	s1 = ss -> prev [ 1 ]		9543551	2		=			
ANR	9546859	Identifier	s1		9543551	0					
ANR	9546860	ArrayIndexing	ss -> prev [ 1 ]		9543551	1					
ANR	9546861	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546862	Identifier	ss		9543551	0					
ANR	9546863	Identifier	prev		9543551	1					
ANR	9546864	PrimaryExpression	1		9543551	1					
ANR	9546865	IdentifierDecl	s2 = ss -> prev [ 2 ]		9543551	1					
ANR	9546866	IdentifierDeclType	uint		9543551	0					
ANR	9546867	Identifier	s2		9543551	1					
ANR	9546868	AssignmentExpression	s2 = ss -> prev [ 2 ]		9543551	2		=			
ANR	9546869	Identifier	s2		9543551	0					
ANR	9546870	ArrayIndexing	ss -> prev [ 2 ]		9543551	1					
ANR	9546871	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546872	Identifier	ss		9543551	0					
ANR	9546873	Identifier	prev		9543551	1					
ANR	9546874	PrimaryExpression	2		9543551	1					
ANR	9546875	ExpressionStatement	"LOOP_BY ( 6 , ( ENCODE16 ( s0 , - 4 ) , ENCODE16 ( s1 , - 2 ) , ENCODE16 ( s2 , 0 ) ) )"	507:12:15691:15780	9543551	1	True				
ANR	9546876	CallExpression	"LOOP_BY ( 6 , ( ENCODE16 ( s0 , - 4 ) , ENCODE16 ( s1 , - 2 ) , ENCODE16 ( s2 , 0 ) ) )"		9543551	0					
ANR	9546877	Callee	LOOP_BY		9543551	0					
ANR	9546878	Identifier	LOOP_BY		9543551	0					
ANR	9546879	ArgumentList	6		9543551	1					
ANR	9546880	Argument	6		9543551	0					
ANR	9546881	PrimaryExpression	6		9543551	0					
ANR	9546882	Argument	"ENCODE16 ( s0 , - 4 ) , ENCODE16 ( s1 , - 2 ) , ENCODE16 ( s2 , 0 )"		9543551	1					
ANR	9546883	Expression	"ENCODE16 ( s0 , - 4 ) , ENCODE16 ( s1 , - 2 ) , ENCODE16 ( s2 , 0 )"		9543551	0					
ANR	9546884	CallExpression	"ENCODE16 ( s0 , - 4 )"		9543551	0					
ANR	9546885	Callee	ENCODE16		9543551	0					
ANR	9546886	Identifier	ENCODE16		9543551	0					
ANR	9546887	ArgumentList	s0		9543551	1					
ANR	9546888	Argument	s0		9543551	0					
ANR	9546889	Identifier	s0		9543551	0					
ANR	9546890	Argument	- 4		9543551	1					
ANR	9546891	UnaryOperationExpression	- 4		9543551	0					
ANR	9546892	UnaryOperator	-		9543551	0					
ANR	9546893	PrimaryExpression	4		9543551	1					
ANR	9546894	Expression	"ENCODE16 ( s1 , - 2 ) , ENCODE16 ( s2 , 0 )"		9543551	1					
ANR	9546895	CallExpression	"ENCODE16 ( s1 , - 2 )"		9543551	0					
ANR	9546896	Callee	ENCODE16		9543551	0					
ANR	9546897	Identifier	ENCODE16		9543551	0					
ANR	9546898	ArgumentList	s1		9543551	1					
ANR	9546899	Argument	s1		9543551	0					
ANR	9546900	Identifier	s1		9543551	0					
ANR	9546901	Argument	- 2		9543551	1					
ANR	9546902	UnaryOperationExpression	- 2		9543551	0					
ANR	9546903	UnaryOperator	-		9543551	0					
ANR	9546904	PrimaryExpression	2		9543551	1					
ANR	9546905	CallExpression	"ENCODE16 ( s2 , 0 )"		9543551	1					
ANR	9546906	Callee	ENCODE16		9543551	0					
ANR	9546907	Identifier	ENCODE16		9543551	0					
ANR	9546908	ArgumentList	s2		9543551	1					
ANR	9546909	Argument	s2		9543551	0					
ANR	9546910	Identifier	s2		9543551	0					
ANR	9546911	Argument	0		9543551	1					
ANR	9546912	PrimaryExpression	0		9543551	0					
ANR	9546913	ExpressionStatement	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2"	509:12:15794:15846	9543551	2	True				
ANR	9546914	Expression	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2"		9543551	0					
ANR	9546915	AssignmentExpression	ss -> prev [ 0 ] = s0		9543551	0		=			
ANR	9546916	ArrayIndexing	ss -> prev [ 0 ]		9543551	0					
ANR	9546917	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546918	Identifier	ss		9543551	0					
ANR	9546919	Identifier	prev		9543551	1					
ANR	9546920	PrimaryExpression	0		9543551	1					
ANR	9546921	Identifier	s0		9543551	1					
ANR	9546922	Expression	"ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2"		9543551	1					
ANR	9546923	AssignmentExpression	ss -> prev [ 1 ] = s1		9543551	0		=			
ANR	9546924	ArrayIndexing	ss -> prev [ 1 ]		9543551	0					
ANR	9546925	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546926	Identifier	ss		9543551	0					
ANR	9546927	Identifier	prev		9543551	1					
ANR	9546928	PrimaryExpression	1		9543551	1					
ANR	9546929	Identifier	s1		9543551	1					
ANR	9546930	AssignmentExpression	ss -> prev [ 2 ] = s2		9543551	1		=			
ANR	9546931	ArrayIndexing	ss -> prev [ 2 ]		9543551	0					
ANR	9546932	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546933	Identifier	ss		9543551	0					
ANR	9546934	Identifier	prev		9543551	1					
ANR	9546935	PrimaryExpression	2		9543551	1					
ANR	9546936	Identifier	s2		9543551	1					
ANR	9546937	GotoStatement	goto enc16 ;	510:12:15860:15870	9543551	3	True				
ANR	9546938	Identifier	enc16		9543551	0					
ANR	9546939	Statement	case	513:8:15891:15894	9543551	793	True				
ANR	9546940	Statement	cDecode	513:13:15896:15902	9543551	794	True				
ANR	9546941	Statement	+	513:21:15904:15904	9543551	795	True				
ANR	9546942	Statement	cBits16	513:23:15906:15912	9543551	796	True				
ANR	9546943	Statement	+	513:31:15914:15914	9543551	797	True				
ANR	9546944	Label	3 :	513:33:15916:15917	9543551	798	True				
ANR	9546945	CompoundStatement		425:12:13544:13583	9543551	799					
ANR	9546946	IdentifierDeclStatement	"uint s1 = ss -> prev [ 1 ] , s2 = ss -> prev [ 2 ] ;"	514:12:15933:15972	9543551	0	True				
ANR	9546947	IdentifierDecl	s1 = ss -> prev [ 1 ]		9543551	0					
ANR	9546948	IdentifierDeclType	uint		9543551	0					
ANR	9546949	Identifier	s1		9543551	1					
ANR	9546950	AssignmentExpression	s1 = ss -> prev [ 1 ]		9543551	2		=			
ANR	9546951	Identifier	s1		9543551	0					
ANR	9546952	ArrayIndexing	ss -> prev [ 1 ]		9543551	1					
ANR	9546953	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546954	Identifier	ss		9543551	0					
ANR	9546955	Identifier	prev		9543551	1					
ANR	9546956	PrimaryExpression	1		9543551	1					
ANR	9546957	IdentifierDecl	s2 = ss -> prev [ 2 ]		9543551	1					
ANR	9546958	IdentifierDeclType	uint		9543551	0					
ANR	9546959	Identifier	s2		9543551	1					
ANR	9546960	AssignmentExpression	s2 = ss -> prev [ 2 ]		9543551	2		=			
ANR	9546961	Identifier	s2		9543551	0					
ANR	9546962	ArrayIndexing	ss -> prev [ 2 ]		9543551	1					
ANR	9546963	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9546964	Identifier	ss		9543551	0					
ANR	9546965	Identifier	prev		9543551	1					
ANR	9546966	PrimaryExpression	2		9543551	1					
ANR	9546967	ExpressionStatement	"LOOP_BY ( 6 , ( DECODE16 ( s0 , - 4 ) , DECODE16 ( s1 , - 2 ) , DECODE16 ( s2 , 0 ) ) )"	516:12:15987:16076	9543551	1	True				
ANR	9546968	CallExpression	"LOOP_BY ( 6 , ( DECODE16 ( s0 , - 4 ) , DECODE16 ( s1 , - 2 ) , DECODE16 ( s2 , 0 ) ) )"		9543551	0					
ANR	9546969	Callee	LOOP_BY		9543551	0					
ANR	9546970	Identifier	LOOP_BY		9543551	0					
ANR	9546971	ArgumentList	6		9543551	1					
ANR	9546972	Argument	6		9543551	0					
ANR	9546973	PrimaryExpression	6		9543551	0					
ANR	9546974	Argument	"DECODE16 ( s0 , - 4 ) , DECODE16 ( s1 , - 2 ) , DECODE16 ( s2 , 0 )"		9543551	1					
ANR	9546975	Expression	"DECODE16 ( s0 , - 4 ) , DECODE16 ( s1 , - 2 ) , DECODE16 ( s2 , 0 )"		9543551	0					
ANR	9546976	CallExpression	"DECODE16 ( s0 , - 4 )"		9543551	0					
ANR	9546977	Callee	DECODE16		9543551	0					
ANR	9546978	Identifier	DECODE16		9543551	0					
ANR	9546979	ArgumentList	s0		9543551	1					
ANR	9546980	Argument	s0		9543551	0					
ANR	9546981	Identifier	s0		9543551	0					
ANR	9546982	Argument	- 4		9543551	1					
ANR	9546983	UnaryOperationExpression	- 4		9543551	0					
ANR	9546984	UnaryOperator	-		9543551	0					
ANR	9546985	PrimaryExpression	4		9543551	1					
ANR	9546986	Expression	"DECODE16 ( s1 , - 2 ) , DECODE16 ( s2 , 0 )"		9543551	1					
ANR	9546987	CallExpression	"DECODE16 ( s1 , - 2 )"		9543551	0					
ANR	9546988	Callee	DECODE16		9543551	0					
ANR	9546989	Identifier	DECODE16		9543551	0					
ANR	9546990	ArgumentList	s1		9543551	1					
ANR	9546991	Argument	s1		9543551	0					
ANR	9546992	Identifier	s1		9543551	0					
ANR	9546993	Argument	- 2		9543551	1					
ANR	9546994	UnaryOperationExpression	- 2		9543551	0					
ANR	9546995	UnaryOperator	-		9543551	0					
ANR	9546996	PrimaryExpression	2		9543551	1					
ANR	9546997	CallExpression	"DECODE16 ( s2 , 0 )"		9543551	1					
ANR	9546998	Callee	DECODE16		9543551	0					
ANR	9546999	Identifier	DECODE16		9543551	0					
ANR	9547000	ArgumentList	s2		9543551	1					
ANR	9547001	Argument	s2		9543551	0					
ANR	9547002	Identifier	s2		9543551	0					
ANR	9547003	Argument	0		9543551	1					
ANR	9547004	PrimaryExpression	0		9543551	0					
ANR	9547005	ExpressionStatement	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2"	518:12:16090:16142	9543551	2	True				
ANR	9547006	Expression	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2"		9543551	0					
ANR	9547007	AssignmentExpression	ss -> prev [ 0 ] = s0		9543551	0		=			
ANR	9547008	ArrayIndexing	ss -> prev [ 0 ]		9543551	0					
ANR	9547009	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547010	Identifier	ss		9543551	0					
ANR	9547011	Identifier	prev		9543551	1					
ANR	9547012	PrimaryExpression	0		9543551	1					
ANR	9547013	Identifier	s0		9543551	1					
ANR	9547014	Expression	"ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2"		9543551	1					
ANR	9547015	AssignmentExpression	ss -> prev [ 1 ] = s1		9543551	0		=			
ANR	9547016	ArrayIndexing	ss -> prev [ 1 ]		9543551	0					
ANR	9547017	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547018	Identifier	ss		9543551	0					
ANR	9547019	Identifier	prev		9543551	1					
ANR	9547020	PrimaryExpression	1		9543551	1					
ANR	9547021	Identifier	s1		9543551	1					
ANR	9547022	AssignmentExpression	ss -> prev [ 2 ] = s2		9543551	1		=			
ANR	9547023	ArrayIndexing	ss -> prev [ 2 ]		9543551	0					
ANR	9547024	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547025	Identifier	ss		9543551	0					
ANR	9547026	Identifier	prev		9543551	1					
ANR	9547027	PrimaryExpression	2		9543551	1					
ANR	9547028	Identifier	s2		9543551	1					
ANR	9547029	GotoStatement	goto dec16 ;	519:12:16156:16166	9543551	3	True				
ANR	9547030	Identifier	dec16		9543551	0					
ANR	9547031	BreakStatement	break ;	520:10:16178:16183	9543551	800	True				
ANR	9547032	Statement	case	522:8:16194:16197	9543551	801	True				
ANR	9547033	Statement	cEncode	522:13:16199:16205	9543551	802	True				
ANR	9547034	Statement	+	522:21:16207:16207	9543551	803	True				
ANR	9547035	Statement	cBits16	522:23:16209:16215	9543551	804	True				
ANR	9547036	Statement	+	522:31:16217:16217	9543551	805	True				
ANR	9547037	Label	4 :	522:33:16219:16220	9543551	806	True				
ANR	9547038	CompoundStatement		434:12:13847:13904	9543551	807					
ANR	9547039	IdentifierDeclStatement	"uint s1 = ss -> prev [ 1 ] , s2 = ss -> prev [ 2 ] , s3 = ss -> prev [ 3 ] ;"	523:12:16236:16293	9543551	0	True				
ANR	9547040	IdentifierDecl	s1 = ss -> prev [ 1 ]		9543551	0					
ANR	9547041	IdentifierDeclType	uint		9543551	0					
ANR	9547042	Identifier	s1		9543551	1					
ANR	9547043	AssignmentExpression	s1 = ss -> prev [ 1 ]		9543551	2		=			
ANR	9547044	Identifier	s1		9543551	0					
ANR	9547045	ArrayIndexing	ss -> prev [ 1 ]		9543551	1					
ANR	9547046	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547047	Identifier	ss		9543551	0					
ANR	9547048	Identifier	prev		9543551	1					
ANR	9547049	PrimaryExpression	1		9543551	1					
ANR	9547050	IdentifierDecl	s2 = ss -> prev [ 2 ]		9543551	1					
ANR	9547051	IdentifierDeclType	uint		9543551	0					
ANR	9547052	Identifier	s2		9543551	1					
ANR	9547053	AssignmentExpression	s2 = ss -> prev [ 2 ]		9543551	2		=			
ANR	9547054	Identifier	s2		9543551	0					
ANR	9547055	ArrayIndexing	ss -> prev [ 2 ]		9543551	1					
ANR	9547056	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547057	Identifier	ss		9543551	0					
ANR	9547058	Identifier	prev		9543551	1					
ANR	9547059	PrimaryExpression	2		9543551	1					
ANR	9547060	IdentifierDecl	s3 = ss -> prev [ 3 ]		9543551	2					
ANR	9547061	IdentifierDeclType	uint		9543551	0					
ANR	9547062	Identifier	s3		9543551	1					
ANR	9547063	AssignmentExpression	s3 = ss -> prev [ 3 ]		9543551	2		=			
ANR	9547064	Identifier	s3		9543551	0					
ANR	9547065	ArrayIndexing	ss -> prev [ 3 ]		9543551	1					
ANR	9547066	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547067	Identifier	ss		9543551	0					
ANR	9547068	Identifier	prev		9543551	1					
ANR	9547069	PrimaryExpression	3		9543551	1					
ANR	9547070	ExpressionStatement	"LOOP_BY ( 8 , ( ENCODE16 ( s0 , - 6 ) , ENCODE16 ( s1 , - 4 ) , ENCODE16 ( s2 , - 2 ) , ENCODE16 ( s3 , 0 ) ) )"	525:12:16308:16415	9543551	1	True				
ANR	9547071	CallExpression	"LOOP_BY ( 8 , ( ENCODE16 ( s0 , - 6 ) , ENCODE16 ( s1 , - 4 ) , ENCODE16 ( s2 , - 2 ) , ENCODE16 ( s3 , 0 ) ) )"		9543551	0					
ANR	9547072	Callee	LOOP_BY		9543551	0					
ANR	9547073	Identifier	LOOP_BY		9543551	0					
ANR	9547074	ArgumentList	8		9543551	1					
ANR	9547075	Argument	8		9543551	0					
ANR	9547076	PrimaryExpression	8		9543551	0					
ANR	9547077	Argument	"ENCODE16 ( s0 , - 6 ) , ENCODE16 ( s1 , - 4 ) , ENCODE16 ( s2 , - 2 ) , ENCODE16 ( s3 , 0 )"		9543551	1					
ANR	9547078	Expression	"ENCODE16 ( s0 , - 6 ) , ENCODE16 ( s1 , - 4 ) , ENCODE16 ( s2 , - 2 ) , ENCODE16 ( s3 , 0 )"		9543551	0					
ANR	9547079	CallExpression	"ENCODE16 ( s0 , - 6 )"		9543551	0					
ANR	9547080	Callee	ENCODE16		9543551	0					
ANR	9547081	Identifier	ENCODE16		9543551	0					
ANR	9547082	ArgumentList	s0		9543551	1					
ANR	9547083	Argument	s0		9543551	0					
ANR	9547084	Identifier	s0		9543551	0					
ANR	9547085	Argument	- 6		9543551	1					
ANR	9547086	UnaryOperationExpression	- 6		9543551	0					
ANR	9547087	UnaryOperator	-		9543551	0					
ANR	9547088	PrimaryExpression	6		9543551	1					
ANR	9547089	Expression	"ENCODE16 ( s1 , - 4 ) , ENCODE16 ( s2 , - 2 ) , ENCODE16 ( s3 , 0 )"		9543551	1					
ANR	9547090	CallExpression	"ENCODE16 ( s1 , - 4 )"		9543551	0					
ANR	9547091	Callee	ENCODE16		9543551	0					
ANR	9547092	Identifier	ENCODE16		9543551	0					
ANR	9547093	ArgumentList	s1		9543551	1					
ANR	9547094	Argument	s1		9543551	0					
ANR	9547095	Identifier	s1		9543551	0					
ANR	9547096	Argument	- 4		9543551	1					
ANR	9547097	UnaryOperationExpression	- 4		9543551	0					
ANR	9547098	UnaryOperator	-		9543551	0					
ANR	9547099	PrimaryExpression	4		9543551	1					
ANR	9547100	Expression	"ENCODE16 ( s2 , - 2 ) , ENCODE16 ( s3 , 0 )"		9543551	1					
ANR	9547101	CallExpression	"ENCODE16 ( s2 , - 2 )"		9543551	0					
ANR	9547102	Callee	ENCODE16		9543551	0					
ANR	9547103	Identifier	ENCODE16		9543551	0					
ANR	9547104	ArgumentList	s2		9543551	1					
ANR	9547105	Argument	s2		9543551	0					
ANR	9547106	Identifier	s2		9543551	0					
ANR	9547107	Argument	- 2		9543551	1					
ANR	9547108	UnaryOperationExpression	- 2		9543551	0					
ANR	9547109	UnaryOperator	-		9543551	0					
ANR	9547110	PrimaryExpression	2		9543551	1					
ANR	9547111	CallExpression	"ENCODE16 ( s3 , 0 )"		9543551	1					
ANR	9547112	Callee	ENCODE16		9543551	0					
ANR	9547113	Identifier	ENCODE16		9543551	0					
ANR	9547114	ArgumentList	s3		9543551	1					
ANR	9547115	Argument	s3		9543551	0					
ANR	9547116	Identifier	s3		9543551	0					
ANR	9547117	Argument	0		9543551	1					
ANR	9547118	PrimaryExpression	0		9543551	0					
ANR	9547119	ExpressionStatement	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"	527:12:16429:16499	9543551	2	True				
ANR	9547120	Expression	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"		9543551	0					
ANR	9547121	AssignmentExpression	ss -> prev [ 0 ] = s0		9543551	0		=			
ANR	9547122	ArrayIndexing	ss -> prev [ 0 ]		9543551	0					
ANR	9547123	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547124	Identifier	ss		9543551	0					
ANR	9547125	Identifier	prev		9543551	1					
ANR	9547126	PrimaryExpression	0		9543551	1					
ANR	9547127	Identifier	s0		9543551	1					
ANR	9547128	Expression	"ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"		9543551	1					
ANR	9547129	AssignmentExpression	ss -> prev [ 1 ] = s1		9543551	0		=			
ANR	9547130	ArrayIndexing	ss -> prev [ 1 ]		9543551	0					
ANR	9547131	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547132	Identifier	ss		9543551	0					
ANR	9547133	Identifier	prev		9543551	1					
ANR	9547134	PrimaryExpression	1		9543551	1					
ANR	9547135	Identifier	s1		9543551	1					
ANR	9547136	Expression	"ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"		9543551	1					
ANR	9547137	AssignmentExpression	ss -> prev [ 2 ] = s2		9543551	0		=			
ANR	9547138	ArrayIndexing	ss -> prev [ 2 ]		9543551	0					
ANR	9547139	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547140	Identifier	ss		9543551	0					
ANR	9547141	Identifier	prev		9543551	1					
ANR	9547142	PrimaryExpression	2		9543551	1					
ANR	9547143	Identifier	s2		9543551	1					
ANR	9547144	AssignmentExpression	ss -> prev [ 3 ] = s3		9543551	1		=			
ANR	9547145	ArrayIndexing	ss -> prev [ 3 ]		9543551	0					
ANR	9547146	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547147	Identifier	ss		9543551	0					
ANR	9547148	Identifier	prev		9543551	1					
ANR	9547149	PrimaryExpression	3		9543551	1					
ANR	9547150	Identifier	s3		9543551	1					
ANR	9547151	GotoStatement	goto enc16 ;	528:12:16513:16523	9543551	3	True				
ANR	9547152	Identifier	enc16		9543551	0					
ANR	9547153	BreakStatement	break ;	529:10:16535:16540	9543551	808	True				
ANR	9547154	Statement	case	531:8:16551:16554	9543551	809	True				
ANR	9547155	Statement	cDecode	531:13:16556:16562	9543551	810	True				
ANR	9547156	Statement	+	531:21:16564:16564	9543551	811	True				
ANR	9547157	Statement	cBits16	531:23:16566:16572	9543551	812	True				
ANR	9547158	Statement	+	531:31:16574:16574	9543551	813	True				
ANR	9547159	Label	4 :	531:33:16576:16577	9543551	814	True				
ANR	9547160	CompoundStatement		443:12:14204:14261	9543551	815					
ANR	9547161	IdentifierDeclStatement	"uint s1 = ss -> prev [ 1 ] , s2 = ss -> prev [ 2 ] , s3 = ss -> prev [ 3 ] ;"	532:12:16593:16650	9543551	0	True				
ANR	9547162	IdentifierDecl	s1 = ss -> prev [ 1 ]		9543551	0					
ANR	9547163	IdentifierDeclType	uint		9543551	0					
ANR	9547164	Identifier	s1		9543551	1					
ANR	9547165	AssignmentExpression	s1 = ss -> prev [ 1 ]		9543551	2		=			
ANR	9547166	Identifier	s1		9543551	0					
ANR	9547167	ArrayIndexing	ss -> prev [ 1 ]		9543551	1					
ANR	9547168	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547169	Identifier	ss		9543551	0					
ANR	9547170	Identifier	prev		9543551	1					
ANR	9547171	PrimaryExpression	1		9543551	1					
ANR	9547172	IdentifierDecl	s2 = ss -> prev [ 2 ]		9543551	1					
ANR	9547173	IdentifierDeclType	uint		9543551	0					
ANR	9547174	Identifier	s2		9543551	1					
ANR	9547175	AssignmentExpression	s2 = ss -> prev [ 2 ]		9543551	2		=			
ANR	9547176	Identifier	s2		9543551	0					
ANR	9547177	ArrayIndexing	ss -> prev [ 2 ]		9543551	1					
ANR	9547178	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547179	Identifier	ss		9543551	0					
ANR	9547180	Identifier	prev		9543551	1					
ANR	9547181	PrimaryExpression	2		9543551	1					
ANR	9547182	IdentifierDecl	s3 = ss -> prev [ 3 ]		9543551	2					
ANR	9547183	IdentifierDeclType	uint		9543551	0					
ANR	9547184	Identifier	s3		9543551	1					
ANR	9547185	AssignmentExpression	s3 = ss -> prev [ 3 ]		9543551	2		=			
ANR	9547186	Identifier	s3		9543551	0					
ANR	9547187	ArrayIndexing	ss -> prev [ 3 ]		9543551	1					
ANR	9547188	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547189	Identifier	ss		9543551	0					
ANR	9547190	Identifier	prev		9543551	1					
ANR	9547191	PrimaryExpression	3		9543551	1					
ANR	9547192	ExpressionStatement	"LOOP_BY ( 8 , ( DECODE16 ( s0 , - 6 ) , DECODE16 ( s1 , - 4 ) , DECODE16 ( s2 , - 2 ) , DECODE16 ( s3 , 0 ) ) )"	534:12:16665:16772	9543551	1	True				
ANR	9547193	CallExpression	"LOOP_BY ( 8 , ( DECODE16 ( s0 , - 6 ) , DECODE16 ( s1 , - 4 ) , DECODE16 ( s2 , - 2 ) , DECODE16 ( s3 , 0 ) ) )"		9543551	0					
ANR	9547194	Callee	LOOP_BY		9543551	0					
ANR	9547195	Identifier	LOOP_BY		9543551	0					
ANR	9547196	ArgumentList	8		9543551	1					
ANR	9547197	Argument	8		9543551	0					
ANR	9547198	PrimaryExpression	8		9543551	0					
ANR	9547199	Argument	"DECODE16 ( s0 , - 6 ) , DECODE16 ( s1 , - 4 ) , DECODE16 ( s2 , - 2 ) , DECODE16 ( s3 , 0 )"		9543551	1					
ANR	9547200	Expression	"DECODE16 ( s0 , - 6 ) , DECODE16 ( s1 , - 4 ) , DECODE16 ( s2 , - 2 ) , DECODE16 ( s3 , 0 )"		9543551	0					
ANR	9547201	CallExpression	"DECODE16 ( s0 , - 6 )"		9543551	0					
ANR	9547202	Callee	DECODE16		9543551	0					
ANR	9547203	Identifier	DECODE16		9543551	0					
ANR	9547204	ArgumentList	s0		9543551	1					
ANR	9547205	Argument	s0		9543551	0					
ANR	9547206	Identifier	s0		9543551	0					
ANR	9547207	Argument	- 6		9543551	1					
ANR	9547208	UnaryOperationExpression	- 6		9543551	0					
ANR	9547209	UnaryOperator	-		9543551	0					
ANR	9547210	PrimaryExpression	6		9543551	1					
ANR	9547211	Expression	"DECODE16 ( s1 , - 4 ) , DECODE16 ( s2 , - 2 ) , DECODE16 ( s3 , 0 )"		9543551	1					
ANR	9547212	CallExpression	"DECODE16 ( s1 , - 4 )"		9543551	0					
ANR	9547213	Callee	DECODE16		9543551	0					
ANR	9547214	Identifier	DECODE16		9543551	0					
ANR	9547215	ArgumentList	s1		9543551	1					
ANR	9547216	Argument	s1		9543551	0					
ANR	9547217	Identifier	s1		9543551	0					
ANR	9547218	Argument	- 4		9543551	1					
ANR	9547219	UnaryOperationExpression	- 4		9543551	0					
ANR	9547220	UnaryOperator	-		9543551	0					
ANR	9547221	PrimaryExpression	4		9543551	1					
ANR	9547222	Expression	"DECODE16 ( s2 , - 2 ) , DECODE16 ( s3 , 0 )"		9543551	1					
ANR	9547223	CallExpression	"DECODE16 ( s2 , - 2 )"		9543551	0					
ANR	9547224	Callee	DECODE16		9543551	0					
ANR	9547225	Identifier	DECODE16		9543551	0					
ANR	9547226	ArgumentList	s2		9543551	1					
ANR	9547227	Argument	s2		9543551	0					
ANR	9547228	Identifier	s2		9543551	0					
ANR	9547229	Argument	- 2		9543551	1					
ANR	9547230	UnaryOperationExpression	- 2		9543551	0					
ANR	9547231	UnaryOperator	-		9543551	0					
ANR	9547232	PrimaryExpression	2		9543551	1					
ANR	9547233	CallExpression	"DECODE16 ( s3 , 0 )"		9543551	1					
ANR	9547234	Callee	DECODE16		9543551	0					
ANR	9547235	Identifier	DECODE16		9543551	0					
ANR	9547236	ArgumentList	s3		9543551	1					
ANR	9547237	Argument	s3		9543551	0					
ANR	9547238	Identifier	s3		9543551	0					
ANR	9547239	Argument	0		9543551	1					
ANR	9547240	PrimaryExpression	0		9543551	0					
ANR	9547241	ExpressionStatement	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"	536:12:16786:16856	9543551	2	True				
ANR	9547242	Expression	"ss -> prev [ 0 ] = s0 , ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"		9543551	0					
ANR	9547243	AssignmentExpression	ss -> prev [ 0 ] = s0		9543551	0		=			
ANR	9547244	ArrayIndexing	ss -> prev [ 0 ]		9543551	0					
ANR	9547245	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547246	Identifier	ss		9543551	0					
ANR	9547247	Identifier	prev		9543551	1					
ANR	9547248	PrimaryExpression	0		9543551	1					
ANR	9547249	Identifier	s0		9543551	1					
ANR	9547250	Expression	"ss -> prev [ 1 ] = s1 , ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"		9543551	1					
ANR	9547251	AssignmentExpression	ss -> prev [ 1 ] = s1		9543551	0		=			
ANR	9547252	ArrayIndexing	ss -> prev [ 1 ]		9543551	0					
ANR	9547253	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547254	Identifier	ss		9543551	0					
ANR	9547255	Identifier	prev		9543551	1					
ANR	9547256	PrimaryExpression	1		9543551	1					
ANR	9547257	Identifier	s1		9543551	1					
ANR	9547258	Expression	"ss -> prev [ 2 ] = s2 , ss -> prev [ 3 ] = s3"		9543551	1					
ANR	9547259	AssignmentExpression	ss -> prev [ 2 ] = s2		9543551	0		=			
ANR	9547260	ArrayIndexing	ss -> prev [ 2 ]		9543551	0					
ANR	9547261	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547262	Identifier	ss		9543551	0					
ANR	9547263	Identifier	prev		9543551	1					
ANR	9547264	PrimaryExpression	2		9543551	1					
ANR	9547265	Identifier	s2		9543551	1					
ANR	9547266	AssignmentExpression	ss -> prev [ 3 ] = s3		9543551	1		=			
ANR	9547267	ArrayIndexing	ss -> prev [ 3 ]		9543551	0					
ANR	9547268	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547269	Identifier	ss		9543551	0					
ANR	9547270	Identifier	prev		9543551	1					
ANR	9547271	PrimaryExpression	3		9543551	1					
ANR	9547272	Identifier	s3		9543551	1					
ANR	9547273	GotoStatement	goto dec16 ;	537:12:16870:16880	9543551	3	True				
ANR	9547274	Identifier	dec16		9543551	0					
ANR	9547275	BreakStatement	break ;	538:10:16892:16897	9543551	816	True				
ANR	9547276	Statement	undef	540:1:16901:16905	9543551	817	True				
ANR	9547277	Statement	ENCODE16	540:7:16907:16914	9543551	818	True				
ANR	9547278	Statement	undef	541:1:16917:16921	9543551	819	True				
ANR	9547279	Statement	DECODE16	541:7:16923:16930	9543551	820	True				
ANR	9547280	Statement	undef	544:1:16940:16944	9543551	38	True				
ANR	9547281	Statement	LOOP_BY	544:7:16946:16952	9543551	39	True				
ANR	9547282	Statement	undef	545:1:16955:16959	9543551	40	True				
ANR	9547283	Statement	ENCODE1_LOOP	545:7:16961:16972	9543551	41	True				
ANR	9547284	Statement	undef	546:1:16975:16979	9543551	42	True				
ANR	9547285	Statement	DECODE1_LOOP	546:7:16981:16992	9543551	43	True				
ANR	9547286	ExpressionStatement	ss -> row_left += count	547:4:16998:17019	9543551	44	True				
ANR	9547287	AssignmentExpression	ss -> row_left += count		9543551	0		+=			
ANR	9547288	PtrMemberAccess	ss -> row_left		9543551	0					
ANR	9547289	Identifier	ss		9543551	0					
ANR	9547290	Identifier	row_left		9543551	1					
ANR	9547291	Identifier	count		9543551	1					
ANR	9547292	IfStatement	if ( ss -> row_left == 0 )		9543551	45					
ANR	9547293	Condition	ss -> row_left == 0	548:8:17063:17079	9543551	0	True				
ANR	9547294	EqualityExpression	ss -> row_left == 0		9543551	0		==			
ANR	9547295	PtrMemberAccess	ss -> row_left		9543551	0					
ANR	9547296	Identifier	ss		9543551	0					
ANR	9547297	Identifier	row_left		9543551	1					
ANR	9547298	PrimaryExpression	0		9543551	1					
ANR	9547299	CompoundStatement		459:27:14693:14693	9543551	1					
ANR	9547300	IfStatement	if ( end_mask != 0 )		9543551	0					
ANR	9547301	Condition	end_mask != 0	549:12:17096:17108	9543551	0	True				
ANR	9547302	EqualityExpression	end_mask != 0		9543551	0		!=			
ANR	9547303	Identifier	end_mask		9543551	0					
ANR	9547304	PrimaryExpression	0		9543551	1					
ANR	9547305	ExpressionStatement	* q = ( * q & ~end_mask ) | ( * p & end_mask )	550:12:17123:17162	9543551	1	True				
ANR	9547306	AssignmentExpression	* q = ( * q & ~end_mask ) | ( * p & end_mask )		9543551	0		=			
ANR	9547307	UnaryOperationExpression	* q		9543551	0					
ANR	9547308	UnaryOperator	*		9543551	0					
ANR	9547309	Identifier	q		9543551	1					
ANR	9547310	InclusiveOrExpression	( * q & ~end_mask ) | ( * p & end_mask )		9543551	1		|			
ANR	9547311	BitAndExpression	* q & ~end_mask		9543551	0		&			
ANR	9547312	UnaryOperationExpression	* q		9543551	0					
ANR	9547313	UnaryOperator	*		9543551	0					
ANR	9547314	Identifier	q		9543551	1					
ANR	9547315	Identifier	~end_mask		9543551	1					
ANR	9547316	BitAndExpression	* p & end_mask		9543551	1		&			
ANR	9547317	UnaryOperationExpression	* p		9543551	0					
ANR	9547318	UnaryOperator	*		9543551	0					
ANR	9547319	Identifier	p		9543551	1					
ANR	9547320	Identifier	end_mask		9543551	1					
ANR	9547321	IfStatement	if ( p < pr -> limit && q < pw -> limit )		9543551	1					
ANR	9547322	Condition	p < pr -> limit && q < pw -> limit	551:12:17176:17205	9543551	0	True				
ANR	9547323	AndExpression	p < pr -> limit && q < pw -> limit		9543551	0		&&			
ANR	9547324	RelationalExpression	p < pr -> limit		9543551	0		<			
ANR	9547325	Identifier	p		9543551	0					
ANR	9547326	PtrMemberAccess	pr -> limit		9543551	1					
ANR	9547327	Identifier	pr		9543551	0					
ANR	9547328	Identifier	limit		9543551	1					
ANR	9547329	RelationalExpression	q < pw -> limit		9543551	1		<			
ANR	9547330	Identifier	q		9543551	0					
ANR	9547331	PtrMemberAccess	pw -> limit		9543551	1					
ANR	9547332	Identifier	pw		9543551	0					
ANR	9547333	Identifier	limit		9543551	1					
ANR	9547334	GotoStatement	goto row ;	552:12:17220:17228	9543551	1	True				
ANR	9547335	Identifier	row		9543551	0					
ANR	9547336	ExpressionStatement	ss -> prev [ 0 ] = s0	554:4:17240:17256	9543551	46	True				
ANR	9547337	AssignmentExpression	ss -> prev [ 0 ] = s0		9543551	0		=			
ANR	9547338	ArrayIndexing	ss -> prev [ 0 ]		9543551	0					
ANR	9547339	PtrMemberAccess	ss -> prev		9543551	0					
ANR	9547340	Identifier	ss		9543551	0					
ANR	9547341	Identifier	prev		9543551	1					
ANR	9547342	PrimaryExpression	0		9543551	1					
ANR	9547343	Identifier	s0		9543551	1					
ANR	9547344	ExpressionStatement	pr -> ptr = p	555:4:17262:17273	9543551	47	True				
ANR	9547345	AssignmentExpression	pr -> ptr = p		9543551	0		=			
ANR	9547346	PtrMemberAccess	pr -> ptr		9543551	0					
ANR	9547347	Identifier	pr		9543551	0					
ANR	9547348	Identifier	ptr		9543551	1					
ANR	9547349	Identifier	p		9543551	1					
ANR	9547350	ExpressionStatement	pw -> ptr = q	556:4:17279:17290	9543551	48	True				
ANR	9547351	AssignmentExpression	pw -> ptr = q		9543551	0		=			
ANR	9547352	PtrMemberAccess	pw -> ptr		9543551	0					
ANR	9547353	Identifier	pw		9543551	0					
ANR	9547354	Identifier	ptr		9543551	1					
ANR	9547355	Identifier	q		9543551	1					
ANR	9547356	ReturnStatement	return status ;	557:4:17296:17309	9543551	49	True				
ANR	9547357	Identifier	status		9543551	0					
ANR	9547358	ReturnType	static int		9543551	1					
ANR	9547359	Identifier	s_PDiff_process		9543551	2					
ANR	9547360	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		9543551	3					
ANR	9547361	Parameter	stream_state * st	88:16:2291:2307	9543551	0	True				
ANR	9547362	ParameterType	stream_state *		9543551	0					
ANR	9547363	Identifier	st		9543551	1					
ANR	9547364	Parameter	stream_cursor_read * pr	88:35:2310:2332	9543551	1	True				
ANR	9547365	ParameterType	stream_cursor_read *		9543551	0					
ANR	9547366	Identifier	pr		9543551	1					
ANR	9547367	Parameter	stream_cursor_write * pw	89:16:2351:2374	9543551	2	True				
ANR	9547368	ParameterType	stream_cursor_write *		9543551	0					
ANR	9547369	Identifier	pw		9543551	1					
ANR	9547370	Parameter	bool last	89:42:2377:2385	9543551	3	True				
ANR	9547371	ParameterType	bool		9543551	0					
ANR	9547372	Identifier	last		9543551	1					
ANR	9547373	CFGEntryNode	ENTRY		9543551		True				
ANR	9547374	CFGExitNode	EXIT		9543551		True				
ANR	9547375	Symbol	SUB4X2		9543551						
ANR	9547376	Symbol	SUB2X4		9543551						
ANR	9547377	Symbol	de		9543551						
ANR	9547378	Symbol	pr		9543551						
ANR	9547379	Symbol	* ss		9543551						
ANR	9547380	Symbol	ss -> BitsPerComponent		9543551						
ANR	9547381	Symbol	end_mask		9543551						
ANR	9547382	Symbol	pw		9543551						
ANR	9547383	Symbol	shift		9543551						
ANR	9547384	Symbol	ADD2X4R4		9543551						
ANR	9547385	Symbol	cshift		9543551						
ANR	9547386	Symbol	ss -> end_mask		9543551						
ANR	9547387	Symbol	pr -> limit		9543551						
ANR	9547388	Symbol	* ci		9543551						
ANR	9547389	Symbol	pr -> ptr		9543551						
ANR	9547390	Symbol	s0		9543551						
ANR	9547391	Symbol	s1		9543551						
ANR	9547392	Symbol	ENCODE16		9543551						
ANR	9547393	Symbol	pw -> ptr		9543551						
ANR	9547394	Symbol	ss -> prev		9543551						
ANR	9547395	Symbol	ENCODE8		9543551						
ANR	9547396	Symbol	s2		9543551						
ANR	9547397	Symbol	ee		9543551						
ANR	9547398	Symbol	s3		9543551						
ANR	9547399	Symbol	last		9543551						
ANR	9547400	Symbol	ADD4X2		9543551						
ANR	9547401	Symbol	ADD2X4		9543551						
ANR	9547402	Symbol	count		9543551						
ANR	9547403	Symbol	* pr		9543551						
ANR	9547404	Symbol	ss -> Colors		9543551						
ANR	9547405	Symbol	* pw		9543551						
ANR	9547406	Symbol	DECODE8		9543551						
ANR	9547407	Symbol	nb		9543551						
ANR	9547408	Symbol	s_PDiff_max_Colors		9543551						
ANR	9547409	Symbol	final		9543551						
ANR	9547410	Symbol	ss -> row_count		9543551						
ANR	9547411	Symbol	DECODE16		9543551						
ANR	9547412	Symbol	status		9543551						
ANR	9547413	Symbol	wcount		9543551						
ANR	9547414	Symbol	~end_mask		9543551						
ANR	9547415	Symbol	ss -> case_index		9543551						
ANR	9547416	Symbol	ndone		9543551						
ANR	9547417	Symbol	* * ss		9543551						
ANR	9547418	Symbol	colors		9543551						
ANR	9547419	Symbol	ss -> row_left		9543551						
ANR	9547420	Symbol	pw -> limit		9543551						
ANR	9547421	Symbol	min		9543551						
ANR	9547422	Symbol	ss		9543551						
ANR	9547423	Symbol	st		9543551						
ANR	9547424	Symbol	* ss -> prev		9543551						
ANR	9547425	Symbol	* ++ p		9543551						
ANR	9547426	Symbol	* ++ q		9543551						
ANR	9547427	Symbol	ci		9543551						
ANR	9547428	Symbol	k		9543551						
ANR	9547429	Symbol	n		9543551						
ANR	9547430	Symbol	p		9543551						
ANR	9547431	Symbol	q		9543551						
ANR	9547432	Symbol	te		9543551						
ANR	9547433	Symbol	rcount		9543551						
ANR	9547434	Symbol	t		9543551						
ANR	9547435	Symbol	ti		9543551						
ANR	9547436	Symbol	* p		9543551						
ANR	9547437	Symbol	* q		9543551						
ANR	9547438	DeclStmt									
ANR	9547439	Decl							const stream_template	const stream_template	s_PDiffE_template
ANR	9547440	DeclStmt									
ANR	9547441	Decl							const stream_template	const stream_template	s_PDiffD_template
