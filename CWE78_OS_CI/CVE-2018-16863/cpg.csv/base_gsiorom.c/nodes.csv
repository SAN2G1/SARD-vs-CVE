command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	669839	File	data/converged/CVE-2018-16863_ghostpdl/base_gsiorom.c								
ANR	669840	DeclStmt									
ANR	669841	Decl							const gx_io_device	const gx_io_device	gs_iodev_rom
ANR	669842	ClassDef	romfs_state_s	67:8:2157:2257							
ANR	669843	DeclStmt									
ANR	669844	Decl							int	int	atblock
ANR	669845	DeclStmt									
ANR	669846	Decl							romfs_state_s	romfs_state_s	romfs_state
ANR	669847	ClassDef	romfs_file_enum_s	73:8:2344:2533							
ANR	669848	DeclStmt									
ANR	669849	Decl							char	char *	pattern
ANR	669850	DeclStmt									
ANR	669851	Decl							int	int	list_index
ANR	669852	DeclStmt									
ANR	669853	Decl							gs_memory_t	gs_memory_t *	memory
ANR	669854	DeclStmt									
ANR	669855	Decl							romfs_file_enum_s	romfs_file_enum_s	romfs_file_enum
ANR	669856	DeclStmt									
ANR	669857	Decl							uint32_t	uint32_t ( const uint32_t * a )	get_u32_big_endian
ANR	669858	Function	get_u32_big_endian	84:0:2747:2939							
ANR	669859	FunctionDef	get_u32_big_endian (const uint32_t * a)		669858	0					
ANR	669860	CompoundStatement		86:0:2801:2939	669858	0					
ANR	669861	IdentifierDeclStatement	uint32_t v ;	87:4:2807:2817	669858	0	True				
ANR	669862	IdentifierDecl	v		669858	0					
ANR	669863	IdentifierDeclType	uint32_t		669858	0					
ANR	669864	Identifier	v		669858	1					
ANR	669865	IdentifierDeclStatement	const unsigned char * c = ( const unsigned char * ) a ;	88:4:2823:2870	669858	1	True				
ANR	669866	IdentifierDecl	* c = ( const unsigned char * ) a		669858	0					
ANR	669867	IdentifierDeclType	const unsigned char *		669858	0					
ANR	669868	Identifier	c		669858	1					
ANR	669869	AssignmentExpression	* c = ( const unsigned char * ) a		669858	2		=			
ANR	669870	Identifier	c		669858	0					
ANR	669871	CastExpression	( const unsigned char * ) a		669858	1					
ANR	669872	CastTarget	const unsigned char *		669858	0					
ANR	669873	Identifier	a		669858	1					
ANR	669874	ExpressionStatement	v = ( c [ 0 ] << 24 ) | ( c [ 1 ] << 16 ) | ( c [ 2 ] << 8 ) | c [ 3 ]	90:4:2877:2923	669858	2	True				
ANR	669875	AssignmentExpression	v = ( c [ 0 ] << 24 ) | ( c [ 1 ] << 16 ) | ( c [ 2 ] << 8 ) | c [ 3 ]		669858	0		=			
ANR	669876	Identifier	v		669858	0					
ANR	669877	InclusiveOrExpression	( c [ 0 ] << 24 ) | ( c [ 1 ] << 16 ) | ( c [ 2 ] << 8 ) | c [ 3 ]		669858	1		|			
ANR	669878	ShiftExpression	c [ 0 ] << 24		669858	0		<<			
ANR	669879	ArrayIndexing	c [ 0 ]		669858	0					
ANR	669880	Identifier	c		669858	0					
ANR	669881	PrimaryExpression	0		669858	1					
ANR	669882	PrimaryExpression	24		669858	1					
ANR	669883	InclusiveOrExpression	( c [ 1 ] << 16 ) | ( c [ 2 ] << 8 ) | c [ 3 ]		669858	1		|			
ANR	669884	ShiftExpression	c [ 1 ] << 16		669858	0		<<			
ANR	669885	ArrayIndexing	c [ 1 ]		669858	0					
ANR	669886	Identifier	c		669858	0					
ANR	669887	PrimaryExpression	1		669858	1					
ANR	669888	PrimaryExpression	16		669858	1					
ANR	669889	InclusiveOrExpression	( c [ 2 ] << 8 ) | c [ 3 ]		669858	1		|			
ANR	669890	ShiftExpression	c [ 2 ] << 8		669858	0		<<			
ANR	669891	ArrayIndexing	c [ 2 ]		669858	0					
ANR	669892	Identifier	c		669858	0					
ANR	669893	PrimaryExpression	2		669858	1					
ANR	669894	PrimaryExpression	8		669858	1					
ANR	669895	ArrayIndexing	c [ 3 ]		669858	1					
ANR	669896	Identifier	c		669858	0					
ANR	669897	PrimaryExpression	3		669858	1					
ANR	669898	ReturnStatement	return v ;	91:4:2929:2937	669858	3	True				
ANR	669899	Identifier	v		669858	0					
ANR	669900	ReturnType	static uint32_t		669858	1					
ANR	669901	Identifier	get_u32_big_endian		669858	2					
ANR	669902	ParameterList	const uint32_t * a		669858	3					
ANR	669903	Parameter	const uint32_t * a	85:19:2782:2798	669858	0	True				
ANR	669904	ParameterType	const uint32_t *		669858	0					
ANR	669905	Identifier	a		669858	1					
ANR	669906	CFGEntryNode	ENTRY		669858		True				
ANR	669907	CFGExitNode	EXIT		669858		True				
ANR	669908	Symbol	a		669858						
ANR	669909	Symbol	c		669858						
ANR	669910	Symbol	v		669858						
ANR	669911	Symbol	* c		669858						
ANR	669912	DeclStmt									
ANR	669913	Decl							int	"int ( stream * , gs_offset_t * )"	s_block_read_available
ANR	669914	Decl							int	"int ( stream * , gs_offset_t )"	s_block_read_seek
ANR	669915	Decl							int	int ( stream * )	s_block_read_close
ANR	669916	Decl							int	"int ( stream_state * , stream_cursor_read * , stream_cursor_write * , bool )"	s_block_read_process
ANR	669917	Function	sread_block	105:0:3374:3949							
ANR	669918	FunctionDef	"sread_block (register stream * s , const byte * ptr , uint len , const uint32_t * node)"		669917	0					
ANR	669919	CompoundStatement		107:0:3469:3949	669917	0					
ANR	669920	Statement	static	108:4:3475:3480	669917	0	True				
ANR	669921	IdentifierDeclStatement	"const stream_procs p = { s_block_read_available , s_block_read_seek , s_std_read_reset , s_std_read_flush , s_block_read_close , s_block_read_process , NULL } ;"	108:11:3482:3687	669917	1	True				
ANR	669922	IdentifierDecl	"p = { s_block_read_available , s_block_read_seek , s_std_read_reset , s_std_read_flush , s_block_read_close , s_block_read_process , NULL }"		669917	0					
ANR	669923	IdentifierDeclType	const stream_procs		669917	0					
ANR	669924	Identifier	p		669917	1					
ANR	669925	AssignmentExpression	"p = { s_block_read_available , s_block_read_seek , s_std_read_reset , s_std_read_flush , s_block_read_close , s_block_read_process , NULL }"		669917	2		=			
ANR	669926	Identifier	p		669917	0					
ANR	669927	InitializerList	s_block_read_available		669917	1					
ANR	669928	Identifier	s_block_read_available		669917	0					
ANR	669929	Identifier	s_block_read_seek		669917	1					
ANR	669930	Identifier	s_std_read_reset		669917	2					
ANR	669931	Identifier	s_std_read_flush		669917	3					
ANR	669932	Identifier	s_block_read_close		669917	4					
ANR	669933	Identifier	s_block_read_process		669917	5					
ANR	669934	Identifier	NULL		669917	6					
ANR	669935	ExpressionStatement	"s_std_init ( s , ( byte * ) ptr , len , & p , s_mode_read + s_mode_seek )"	113:4:3693:3755	669917	2	True				
ANR	669936	CallExpression	"s_std_init ( s , ( byte * ) ptr , len , & p , s_mode_read + s_mode_seek )"		669917	0					
ANR	669937	Callee	s_std_init		669917	0					
ANR	669938	Identifier	s_std_init		669917	0					
ANR	669939	ArgumentList	s		669917	1					
ANR	669940	Argument	s		669917	0					
ANR	669941	Identifier	s		669917	0					
ANR	669942	Argument	( byte * ) ptr		669917	1					
ANR	669943	CastExpression	( byte * ) ptr		669917	0					
ANR	669944	CastTarget	byte *		669917	0					
ANR	669945	Identifier	ptr		669917	1					
ANR	669946	Argument	len		669917	2					
ANR	669947	Identifier	len		669917	0					
ANR	669948	Argument	& p		669917	3					
ANR	669949	UnaryOperationExpression	& p		669917	0					
ANR	669950	UnaryOperator	&		669917	0					
ANR	669951	Identifier	p		669917	1					
ANR	669952	Argument	s_mode_read + s_mode_seek		669917	4					
ANR	669953	AdditiveExpression	s_mode_read + s_mode_seek		669917	0		+			
ANR	669954	Identifier	s_mode_read		669917	0					
ANR	669955	Identifier	s_mode_seek		669917	1					
ANR	669956	ExpressionStatement	s -> end_status = 0	114:4:3761:3778	669917	3	True				
ANR	669957	AssignmentExpression	s -> end_status = 0		669917	0		=			
ANR	669958	PtrMemberAccess	s -> end_status		669917	0					
ANR	669959	Identifier	s		669917	0					
ANR	669960	Identifier	end_status		669917	1					
ANR	669961	PrimaryExpression	0		669917	1					
ANR	669962	ExpressionStatement	s -> file = ( FILE * ) node	115:4:3784:3806	669917	4	True				
ANR	669963	AssignmentExpression	s -> file = ( FILE * ) node		669917	0		=			
ANR	669964	PtrMemberAccess	s -> file		669917	0					
ANR	669965	Identifier	s		669917	0					
ANR	669966	Identifier	file		669917	1					
ANR	669967	CastExpression	( FILE * ) node		669917	1					
ANR	669968	CastTarget	FILE *		669917	0					
ANR	669969	Identifier	node		669917	1					
ANR	669970	ExpressionStatement	s -> file_modes = s -> modes	116:4:3861:3885	669917	5	True				
ANR	669971	AssignmentExpression	s -> file_modes = s -> modes		669917	0		=			
ANR	669972	PtrMemberAccess	s -> file_modes		669917	0					
ANR	669973	Identifier	s		669917	0					
ANR	669974	Identifier	file_modes		669917	1					
ANR	669975	PtrMemberAccess	s -> modes		669917	1					
ANR	669976	Identifier	s		669917	0					
ANR	669977	Identifier	modes		669917	1					
ANR	669978	ExpressionStatement	s -> file_offset = 0	117:4:3891:3909	669917	6	True				
ANR	669979	AssignmentExpression	s -> file_offset = 0		669917	0		=			
ANR	669980	PtrMemberAccess	s -> file_offset		669917	0					
ANR	669981	Identifier	s		669917	0					
ANR	669982	Identifier	file_offset		669917	1					
ANR	669983	PrimaryExpression	0		669917	1					
ANR	669984	ExpressionStatement	s -> file_limit = S_FILE_LIMIT_MAX	118:4:3915:3947	669917	7	True				
ANR	669985	AssignmentExpression	s -> file_limit = S_FILE_LIMIT_MAX		669917	0		=			
ANR	669986	PtrMemberAccess	s -> file_limit		669917	0					
ANR	669987	Identifier	s		669917	0					
ANR	669988	Identifier	file_limit		669917	1					
ANR	669989	Identifier	S_FILE_LIMIT_MAX		669917	1					
ANR	669990	ReturnType	static void		669917	1					
ANR	669991	Identifier	sread_block		669917	2					
ANR	669992	ParameterList	"register stream * s , const byte * ptr , uint len , const uint32_t * node"		669917	3					
ANR	669993	Parameter	register stream * s	106:12:3398:3415	669917	0	True				
ANR	669994	ParameterType	register stream *		669917	0					
ANR	669995	Identifier	s		669917	1					
ANR	669996	Parameter	const byte * ptr	106:33:3419:3433	669917	1	True				
ANR	669997	ParameterType	const byte *		669917	0					
ANR	669998	Identifier	ptr		669917	1					
ANR	669999	Parameter	uint len	106:50:3436:3443	669917	2	True				
ANR	670000	ParameterType	uint		669917	0					
ANR	670001	Identifier	len		669917	1					
ANR	670002	Parameter	const uint32_t * node	106:60:3446:3465	669917	3	True				
ANR	670003	ParameterType	const uint32_t *		669917	0					
ANR	670004	Identifier	node		669917	1					
ANR	670005	CFGEntryNode	ENTRY		669917		True				
ANR	670006	CFGExitNode	EXIT		669917		True				
ANR	670007	Symbol	s_block_read_available		669917						
ANR	670008	Symbol	NULL		669917						
ANR	670009	Symbol	s -> file		669917						
ANR	670010	Symbol	s_block_read_close		669917						
ANR	670011	Symbol	s -> file_modes		669917						
ANR	670012	Symbol	s -> file_offset		669917						
ANR	670013	Symbol	S_FILE_LIMIT_MAX		669917						
ANR	670014	Symbol	s -> file_limit		669917						
ANR	670015	Symbol	ptr		669917						
ANR	670016	Symbol	p		669917						
ANR	670017	Symbol	s_std_read_reset		669917						
ANR	670018	Symbol	node		669917						
ANR	670019	Symbol	s		669917						
ANR	670020	Symbol	len		669917						
ANR	670021	Symbol	s_mode_seek		669917						
ANR	670022	Symbol	& p		669917						
ANR	670023	Symbol	s_block_read_seek		669917						
ANR	670024	Symbol	s_block_read_process		669917						
ANR	670025	Symbol	s_std_read_flush		669917						
ANR	670026	Symbol	s -> end_status		669917						
ANR	670027	Symbol	s_mode_read		669917						
ANR	670028	Symbol	* s		669917						
ANR	670029	Symbol	s -> modes		669917						
ANR	670030	Function	s_block_read_available	122:0:3995:4330							
ANR	670031	FunctionDef	"s_block_read_available (stream * s , gs_offset_t * pl)"		670030	0					
ANR	670032	CompoundStatement		124:0:4057:4330	670030	0					
ANR	670033	IdentifierDeclStatement	uint32_t * node = ( uint32_t * ) s -> file ;	125:4:4063:4099	670030	0	True				
ANR	670034	IdentifierDecl	* node = ( uint32_t * ) s -> file		670030	0					
ANR	670035	IdentifierDeclType	uint32_t *		670030	0					
ANR	670036	Identifier	node		670030	1					
ANR	670037	AssignmentExpression	* node = ( uint32_t * ) s -> file		670030	2		=			
ANR	670038	Identifier	node		670030	0					
ANR	670039	CastExpression	( uint32_t * ) s -> file		670030	1					
ANR	670040	CastTarget	uint32_t *		670030	0					
ANR	670041	PtrMemberAccess	s -> file		670030	1					
ANR	670042	Identifier	s		670030	0					
ANR	670043	Identifier	file		670030	1					
ANR	670044	IdentifierDeclStatement	uint32_t filelen = get_u32_big_endian ( node ) & 0x7fffffff ;	126:4:4105:4161	670030	1	True				
ANR	670045	IdentifierDecl	filelen = get_u32_big_endian ( node ) & 0x7fffffff		670030	0					
ANR	670046	IdentifierDeclType	uint32_t		670030	0					
ANR	670047	Identifier	filelen		670030	1					
ANR	670048	AssignmentExpression	filelen = get_u32_big_endian ( node ) & 0x7fffffff		670030	2		=			
ANR	670049	Identifier	filelen		670030	0					
ANR	670050	BitAndExpression	get_u32_big_endian ( node ) & 0x7fffffff		670030	1		&			
ANR	670051	CallExpression	get_u32_big_endian ( node )		670030	0					
ANR	670052	Callee	get_u32_big_endian		670030	0					
ANR	670053	Identifier	get_u32_big_endian		670030	0					
ANR	670054	ArgumentList	node		670030	1					
ANR	670055	Argument	node		670030	0					
ANR	670056	Identifier	node		670030	0					
ANR	670057	PrimaryExpression	0x7fffffff		670030	1					
ANR	670058	ExpressionStatement	* pl = filelen - s -> position - ( sbufptr ( s ) - s -> cbuf )	128:4:4197:4249	670030	2	True				
ANR	670059	AssignmentExpression	* pl = filelen - s -> position - ( sbufptr ( s ) - s -> cbuf )		670030	0		=			
ANR	670060	UnaryOperationExpression	* pl		670030	0					
ANR	670061	UnaryOperator	*		670030	0					
ANR	670062	Identifier	pl		670030	1					
ANR	670063	AdditiveExpression	filelen - s -> position - ( sbufptr ( s ) - s -> cbuf )		670030	1		-			
ANR	670064	Identifier	filelen		670030	0					
ANR	670065	AdditiveExpression	s -> position - ( sbufptr ( s ) - s -> cbuf )		670030	1		-			
ANR	670066	PtrMemberAccess	s -> position		670030	0					
ANR	670067	Identifier	s		670030	0					
ANR	670068	Identifier	position		670030	1					
ANR	670069	AdditiveExpression	sbufptr ( s ) - s -> cbuf		670030	1		-			
ANR	670070	CallExpression	sbufptr ( s )		670030	0					
ANR	670071	Callee	sbufptr		670030	0					
ANR	670072	Identifier	sbufptr		670030	0					
ANR	670073	ArgumentList	s		670030	1					
ANR	670074	Argument	s		670030	0					
ANR	670075	Identifier	s		670030	0					
ANR	670076	PtrMemberAccess	s -> cbuf		670030	1					
ANR	670077	Identifier	s		670030	0					
ANR	670078	Identifier	cbuf		670030	1					
ANR	670079	IfStatement	if ( * pl == 0 && s -> close_at_eod )		670030	3					
ANR	670080	Condition	* pl == 0 && s -> close_at_eod	129:8:4259:4285	670030	0	True				
ANR	670081	AndExpression	* pl == 0 && s -> close_at_eod		670030	0		&&			
ANR	670082	EqualityExpression	* pl == 0		670030	0		==			
ANR	670083	UnaryOperationExpression	* pl		670030	0					
ANR	670084	UnaryOperator	*		670030	0					
ANR	670085	Identifier	pl		670030	1					
ANR	670086	PrimaryExpression	0		670030	1					
ANR	670087	PtrMemberAccess	s -> close_at_eod		670030	1					
ANR	670088	Identifier	s		670030	0					
ANR	670089	Identifier	close_at_eod		670030	1					
ANR	670090	ExpressionStatement	* pl = - 1	130:8:4306:4314	670030	1	True				
ANR	670091	AssignmentExpression	* pl = - 1		670030	0		=			
ANR	670092	UnaryOperationExpression	* pl		670030	0					
ANR	670093	UnaryOperator	*		670030	0					
ANR	670094	Identifier	pl		670030	1					
ANR	670095	UnaryOperationExpression	- 1		670030	1					
ANR	670096	UnaryOperator	-		670030	0					
ANR	670097	PrimaryExpression	1		670030	1					
ANR	670098	ReturnStatement	return 0 ;	131:4:4320:4328	670030	4	True				
ANR	670099	PrimaryExpression	0		670030	0					
ANR	670100	ReturnType	static int		670030	1					
ANR	670101	Identifier	s_block_read_available		670030	2					
ANR	670102	ParameterList	"stream * s , gs_offset_t * pl"		670030	3					
ANR	670103	Parameter	stream * s	123:23:4029:4037	670030	0	True				
ANR	670104	ParameterType	stream *		670030	0					
ANR	670105	Identifier	s		670030	1					
ANR	670106	Parameter	gs_offset_t * pl	123:34:4040:4054	670030	1	True				
ANR	670107	ParameterType	gs_offset_t *		670030	0					
ANR	670108	Identifier	pl		670030	1					
ANR	670109	CFGEntryNode	ENTRY		670030		True				
ANR	670110	CFGExitNode	EXIT		670030		True				
ANR	670111	Symbol	filelen		670030						
ANR	670112	Symbol	node		670030						
ANR	670113	Symbol	* pl		670030						
ANR	670114	Symbol	s		670030						
ANR	670115	Symbol	s -> close_at_eod		670030						
ANR	670116	Symbol	s -> file		670030						
ANR	670117	Symbol	sbufptr		670030						
ANR	670118	Symbol	s -> position		670030						
ANR	670119	Symbol	s -> cbuf		670030						
ANR	670120	Symbol	pl		670030						
ANR	670121	Symbol	get_u32_big_endian		670030						
ANR	670122	Symbol	* s		670030						
ANR	670123	Function	s_block_read_seek	135:0:4398:5525							
ANR	670124	FunctionDef	"s_block_read_seek (register stream * s , gs_offset_t pos)"		670123	0					
ANR	670125	CompoundStatement		137:0:4465:5525	670123	0					
ANR	670126	IdentifierDeclStatement	uint32_t * node = ( uint32_t * ) s -> file ;	138:4:4471:4507	670123	0	True				
ANR	670127	IdentifierDecl	* node = ( uint32_t * ) s -> file		670123	0					
ANR	670128	IdentifierDeclType	uint32_t *		670123	0					
ANR	670129	Identifier	node		670123	1					
ANR	670130	AssignmentExpression	* node = ( uint32_t * ) s -> file		670123	2		=			
ANR	670131	Identifier	node		670123	0					
ANR	670132	CastExpression	( uint32_t * ) s -> file		670123	1					
ANR	670133	CastTarget	uint32_t *		670123	0					
ANR	670134	PtrMemberAccess	s -> file		670123	1					
ANR	670135	Identifier	s		670123	0					
ANR	670136	Identifier	file		670123	1					
ANR	670137	IdentifierDeclStatement	uint32_t filelen = get_u32_big_endian ( node ) & 0x7fffffff ;	139:4:4513:4569	670123	1	True				
ANR	670138	IdentifierDecl	filelen = get_u32_big_endian ( node ) & 0x7fffffff		670123	0					
ANR	670139	IdentifierDeclType	uint32_t		670123	0					
ANR	670140	Identifier	filelen		670123	1					
ANR	670141	AssignmentExpression	filelen = get_u32_big_endian ( node ) & 0x7fffffff		670123	2		=			
ANR	670142	Identifier	filelen		670123	0					
ANR	670143	BitAndExpression	get_u32_big_endian ( node ) & 0x7fffffff		670123	1		&			
ANR	670144	CallExpression	get_u32_big_endian ( node )		670123	0					
ANR	670145	Callee	get_u32_big_endian		670123	0					
ANR	670146	Identifier	get_u32_big_endian		670123	0					
ANR	670147	ArgumentList	node		670123	1					
ANR	670148	Argument	node		670123	0					
ANR	670149	Identifier	node		670123	0					
ANR	670150	PrimaryExpression	0x7fffffff		670123	1					
ANR	670151	IdentifierDeclStatement	uint end = s -> srlimit - s -> cbuf + 1 ;	140:4:4604:4639	670123	2	True				
ANR	670152	IdentifierDecl	end = s -> srlimit - s -> cbuf + 1		670123	0					
ANR	670153	IdentifierDeclType	uint		670123	0					
ANR	670154	Identifier	end		670123	1					
ANR	670155	AssignmentExpression	end = s -> srlimit - s -> cbuf + 1		670123	2		=			
ANR	670156	Identifier	end		670123	0					
ANR	670157	AdditiveExpression	s -> srlimit - s -> cbuf + 1		670123	1		-			
ANR	670158	PtrMemberAccess	s -> srlimit		670123	0					
ANR	670159	Identifier	s		670123	0					
ANR	670160	Identifier	srlimit		670123	1					
ANR	670161	AdditiveExpression	s -> cbuf + 1		670123	1		+			
ANR	670162	PtrMemberAccess	s -> cbuf		670123	0					
ANR	670163	Identifier	s		670123	0					
ANR	670164	Identifier	cbuf		670123	1					
ANR	670165	PrimaryExpression	1		670123	1					
ANR	670166	IdentifierDeclStatement	long offset = pos - s -> position ;	141:4:4645:4676	670123	3	True				
ANR	670167	IdentifierDecl	offset = pos - s -> position		670123	0					
ANR	670168	IdentifierDeclType	long		670123	0					
ANR	670169	Identifier	offset		670123	1					
ANR	670170	AssignmentExpression	offset = pos - s -> position		670123	2		=			
ANR	670171	Identifier	offset		670123	0					
ANR	670172	AdditiveExpression	pos - s -> position		670123	1		-			
ANR	670173	Identifier	pos		670123	0					
ANR	670174	PtrMemberAccess	s -> position		670123	1					
ANR	670175	Identifier	s		670123	0					
ANR	670176	Identifier	position		670123	1					
ANR	670177	IfStatement	if ( pos < 0 || pos > filelen )		670123	4					
ANR	670178	Condition	pos < 0 || pos > filelen	143:8:4687:4710	670123	0	True				
ANR	670179	OrExpression	pos < 0 || pos > filelen		670123	0		||			
ANR	670180	RelationalExpression	pos < 0		670123	0		<			
ANR	670181	Identifier	pos		670123	0					
ANR	670182	PrimaryExpression	0		670123	1					
ANR	670183	RelationalExpression	pos > filelen		670123	1		>			
ANR	670184	Identifier	pos		670123	0					
ANR	670185	Identifier	filelen		670123	1					
ANR	670186	ReturnStatement	return ERRC ;	144:8:4721:4732	670123	1	True				
ANR	670187	Identifier	ERRC		670123	0					
ANR	670188	IfStatement	if ( offset < 0 || offset > end )		670123	5					
ANR	670189	Condition	offset < 0 || offset > end	145:8:4742:4767	670123	0	True				
ANR	670190	OrExpression	offset < 0 || offset > end		670123	0		||			
ANR	670191	RelationalExpression	offset < 0		670123	0		<			
ANR	670192	Identifier	offset		670123	0					
ANR	670193	PrimaryExpression	0		670123	1					
ANR	670194	RelationalExpression	offset > end		670123	1		>			
ANR	670195	Identifier	offset		670123	0					
ANR	670196	Identifier	end		670123	1					
ANR	670197	CompoundStatement		11:8:375:397	670123	1					
ANR	670198	IdentifierDeclStatement	stream_cursor_write pw ;	147:8:4841:4863	670123	0	True				
ANR	670199	IdentifierDecl	pw		670123	0					
ANR	670200	IdentifierDeclType	stream_cursor_write		670123	0					
ANR	670201	Identifier	pw		670123	1					
ANR	670202	ExpressionStatement	offset = ( s -> file_offset + pos ) % ROMFS_BLOCKSIZE	150:8:4919:4968	670123	1	True				
ANR	670203	AssignmentExpression	offset = ( s -> file_offset + pos ) % ROMFS_BLOCKSIZE		670123	0		=			
ANR	670204	Identifier	offset		670123	0					
ANR	670205	MultiplicativeExpression	( s -> file_offset + pos ) % ROMFS_BLOCKSIZE		670123	1		%			
ANR	670206	AdditiveExpression	s -> file_offset + pos		670123	0		+			
ANR	670207	PtrMemberAccess	s -> file_offset		670123	0					
ANR	670208	Identifier	s		670123	0					
ANR	670209	Identifier	file_offset		670123	1					
ANR	670210	Identifier	pos		670123	1					
ANR	670211	Identifier	ROMFS_BLOCKSIZE		670123	1					
ANR	670212	ExpressionStatement	s -> position = pos - offset	151:8:4978:5004	670123	2	True				
ANR	670213	AssignmentExpression	s -> position = pos - offset		670123	0		=			
ANR	670214	PtrMemberAccess	s -> position		670123	0					
ANR	670215	Identifier	s		670123	0					
ANR	670216	Identifier	position		670123	1					
ANR	670217	AdditiveExpression	pos - offset		670123	1		-			
ANR	670218	Identifier	pos		670123	0					
ANR	670219	Identifier	offset		670123	1					
ANR	670220	ExpressionStatement	pw . ptr = s -> cbuf - 1	152:8:5014:5034	670123	3	True				
ANR	670221	AssignmentExpression	pw . ptr = s -> cbuf - 1		670123	0		=			
ANR	670222	MemberAccess	pw . ptr		670123	0					
ANR	670223	Identifier	pw		670123	0					
ANR	670224	Identifier	ptr		670123	1					
ANR	670225	AdditiveExpression	s -> cbuf - 1		670123	1		-			
ANR	670226	PtrMemberAccess	s -> cbuf		670123	0					
ANR	670227	Identifier	s		670123	0					
ANR	670228	Identifier	cbuf		670123	1					
ANR	670229	PrimaryExpression	1		670123	1					
ANR	670230	ExpressionStatement	pw . limit = pw . ptr + s -> cbsize	153:8:5044:5073	670123	4	True				
ANR	670231	AssignmentExpression	pw . limit = pw . ptr + s -> cbsize		670123	0		=			
ANR	670232	MemberAccess	pw . limit		670123	0					
ANR	670233	Identifier	pw		670123	0					
ANR	670234	Identifier	limit		670123	1					
ANR	670235	AdditiveExpression	pw . ptr + s -> cbsize		670123	1		+			
ANR	670236	MemberAccess	pw . ptr		670123	0					
ANR	670237	Identifier	pw		670123	0					
ANR	670238	Identifier	ptr		670123	1					
ANR	670239	PtrMemberAccess	s -> cbsize		670123	1					
ANR	670240	Identifier	s		670123	0					
ANR	670241	Identifier	cbsize		670123	1					
ANR	670242	ExpressionStatement	s -> srptr = s -> srlimit = s -> cbuf - 1	154:8:5083:5118	670123	5	True				
ANR	670243	AssignmentExpression	s -> srptr = s -> srlimit = s -> cbuf - 1		670123	0		=			
ANR	670244	PtrMemberAccess	s -> srptr		670123	0					
ANR	670245	Identifier	s		670123	0					
ANR	670246	Identifier	srptr		670123	1					
ANR	670247	AssignmentExpression	s -> srlimit = s -> cbuf - 1		670123	1		=			
ANR	670248	PtrMemberAccess	s -> srlimit		670123	0					
ANR	670249	Identifier	s		670123	0					
ANR	670250	Identifier	srlimit		670123	1					
ANR	670251	AdditiveExpression	s -> cbuf - 1		670123	1		-			
ANR	670252	PtrMemberAccess	s -> cbuf		670123	0					
ANR	670253	Identifier	s		670123	0					
ANR	670254	Identifier	cbuf		670123	1					
ANR	670255	PrimaryExpression	1		670123	1					
ANR	670256	IfStatement	"if ( ( s -> end_status = s_block_read_process ( ( stream_state * ) s , NULL , & pw , 0 ) ) == ERRC )"		670123	6					
ANR	670257	Condition	"( s -> end_status = s_block_read_process ( ( stream_state * ) s , NULL , & pw , 0 ) ) == ERRC"	155:12:5132:5210	670123	0	True				
ANR	670258	EqualityExpression	"( s -> end_status = s_block_read_process ( ( stream_state * ) s , NULL , & pw , 0 ) ) == ERRC"		670123	0		==			
ANR	670259	AssignmentExpression	"s -> end_status = s_block_read_process ( ( stream_state * ) s , NULL , & pw , 0 )"		670123	0		=			
ANR	670260	PtrMemberAccess	s -> end_status		670123	0					
ANR	670261	Identifier	s		670123	0					
ANR	670262	Identifier	end_status		670123	1					
ANR	670263	CallExpression	"s_block_read_process ( ( stream_state * ) s , NULL , & pw , 0 )"		670123	1					
ANR	670264	Callee	s_block_read_process		670123	0					
ANR	670265	Identifier	s_block_read_process		670123	0					
ANR	670266	ArgumentList	( stream_state * ) s		670123	1					
ANR	670267	Argument	( stream_state * ) s		670123	0					
ANR	670268	CastExpression	( stream_state * ) s		670123	0					
ANR	670269	CastTarget	stream_state *		670123	0					
ANR	670270	Identifier	s		670123	1					
ANR	670271	Argument	NULL		670123	1					
ANR	670272	Identifier	NULL		670123	0					
ANR	670273	Argument	& pw		670123	2					
ANR	670274	UnaryOperationExpression	& pw		670123	0					
ANR	670275	UnaryOperator	&		670123	0					
ANR	670276	Identifier	pw		670123	1					
ANR	670277	Argument	0		670123	3					
ANR	670278	PrimaryExpression	0		670123	0					
ANR	670279	Identifier	ERRC		670123	1					
ANR	670280	ReturnStatement	return ERRC ;	156:12:5225:5236	670123	1	True				
ANR	670281	Identifier	ERRC		670123	0					
ANR	670282	IfStatement	if ( s -> end_status == 1 )		670123	7					
ANR	670283	Condition	s -> end_status == 1	157:12:5250:5267	670123	0	True				
ANR	670284	EqualityExpression	s -> end_status == 1		670123	0		==			
ANR	670285	PtrMemberAccess	s -> end_status		670123	0					
ANR	670286	Identifier	s		670123	0					
ANR	670287	Identifier	end_status		670123	1					
ANR	670288	PrimaryExpression	1		670123	1					
ANR	670289	ExpressionStatement	s -> end_status = 0	158:12:5282:5299	670123	1	True				
ANR	670290	AssignmentExpression	s -> end_status = 0		670123	0		=			
ANR	670291	PtrMemberAccess	s -> end_status		670123	0					
ANR	670292	Identifier	s		670123	0					
ANR	670293	Identifier	end_status		670123	1					
ANR	670294	PrimaryExpression	0		670123	1					
ANR	670295	ExpressionStatement	s -> srptr = s -> cbuf - 1	159:8:5309:5331	670123	8	True				
ANR	670296	AssignmentExpression	s -> srptr = s -> cbuf - 1		670123	0		=			
ANR	670297	PtrMemberAccess	s -> srptr		670123	0					
ANR	670298	Identifier	s		670123	0					
ANR	670299	Identifier	srptr		670123	1					
ANR	670300	AdditiveExpression	s -> cbuf - 1		670123	1		-			
ANR	670301	PtrMemberAccess	s -> cbuf		670123	0					
ANR	670302	Identifier	s		670123	0					
ANR	670303	Identifier	cbuf		670123	1					
ANR	670304	PrimaryExpression	1		670123	1					
ANR	670305	ExpressionStatement	s -> srlimit = pw . ptr	160:8:5341:5360	670123	9	True				
ANR	670306	AssignmentExpression	s -> srlimit = pw . ptr		670123	0		=			
ANR	670307	PtrMemberAccess	s -> srlimit		670123	0					
ANR	670308	Identifier	s		670123	0					
ANR	670309	Identifier	srlimit		670123	1					
ANR	670310	MemberAccess	pw . ptr		670123	1					
ANR	670311	Identifier	pw		670123	0					
ANR	670312	Identifier	ptr		670123	1					
ANR	670313	ExpressionStatement	s -> srptr = s -> cbuf + offset - 1	163:4:5478:5509	670123	6	True				
ANR	670314	AssignmentExpression	s -> srptr = s -> cbuf + offset - 1		670123	0		=			
ANR	670315	PtrMemberAccess	s -> srptr		670123	0					
ANR	670316	Identifier	s		670123	0					
ANR	670317	Identifier	srptr		670123	1					
ANR	670318	AdditiveExpression	s -> cbuf + offset - 1		670123	1		+			
ANR	670319	PtrMemberAccess	s -> cbuf		670123	0					
ANR	670320	Identifier	s		670123	0					
ANR	670321	Identifier	cbuf		670123	1					
ANR	670322	AdditiveExpression	offset - 1		670123	1		-			
ANR	670323	Identifier	offset		670123	0					
ANR	670324	PrimaryExpression	1		670123	1					
ANR	670325	ReturnStatement	return 0 ;	164:4:5515:5523	670123	7	True				
ANR	670326	PrimaryExpression	0		670123	0					
ANR	670327	ReturnType	static int		670123	1					
ANR	670328	Identifier	s_block_read_seek		670123	2					
ANR	670329	ParameterList	"register stream * s , gs_offset_t pos"		670123	3					
ANR	670330	Parameter	register stream * s	136:18:4427:4445	670123	0	True				
ANR	670331	ParameterType	register stream *		670123	0					
ANR	670332	Identifier	s		670123	1					
ANR	670333	Parameter	gs_offset_t pos	136:39:4448:4462	670123	1	True				
ANR	670334	ParameterType	gs_offset_t		670123	0					
ANR	670335	Identifier	pos		670123	1					
ANR	670336	CFGEntryNode	ENTRY		670123		True				
ANR	670337	CFGExitNode	EXIT		670123		True				
ANR	670338	Symbol	pw . limit		670123						
ANR	670339	Symbol	NULL		670123						
ANR	670340	Symbol	offset		670123						
ANR	670341	Symbol	s -> file		670123						
ANR	670342	Symbol	s -> srptr		670123						
ANR	670343	Symbol	s -> position		670123						
ANR	670344	Symbol	s -> srlimit		670123						
ANR	670345	Symbol	pw		670123						
ANR	670346	Symbol	s -> file_offset		670123						
ANR	670347	Symbol	s -> cbuf		670123						
ANR	670348	Symbol	s -> cbsize		670123						
ANR	670349	Symbol	ROMFS_BLOCKSIZE		670123						
ANR	670350	Symbol	filelen		670123						
ANR	670351	Symbol	& pw		670123						
ANR	670352	Symbol	node		670123						
ANR	670353	Symbol	s		670123						
ANR	670354	Symbol	pos		670123						
ANR	670355	Symbol	s_block_read_process		670123						
ANR	670356	Symbol	end		670123						
ANR	670357	Symbol	s -> end_status		670123						
ANR	670358	Symbol	get_u32_big_endian		670123						
ANR	670359	Symbol	* s		670123						
ANR	670360	Symbol	ERRC		670123						
ANR	670361	Symbol	pw . ptr		670123						
ANR	670362	Function	s_block_read_close	167:0:5528:5811							
ANR	670363	FunctionDef	s_block_read_close (stream * s)		670362	0					
ANR	670364	CompoundStatement		169:0:5570:5811	670362	0					
ANR	670365	ExpressionStatement	"gs_free_object ( s -> memory , s -> cbuf , ""file_close(buffer)"" )"	170:4:5576:5632	670362	0	True				
ANR	670366	CallExpression	"gs_free_object ( s -> memory , s -> cbuf , ""file_close(buffer)"" )"		670362	0					
ANR	670367	Callee	gs_free_object		670362	0					
ANR	670368	Identifier	gs_free_object		670362	0					
ANR	670369	ArgumentList	s -> memory		670362	1					
ANR	670370	Argument	s -> memory		670362	0					
ANR	670371	PtrMemberAccess	s -> memory		670362	0					
ANR	670372	Identifier	s		670362	0					
ANR	670373	Identifier	memory		670362	1					
ANR	670374	Argument	s -> cbuf		670362	1					
ANR	670375	PtrMemberAccess	s -> cbuf		670362	0					
ANR	670376	Identifier	s		670362	0					
ANR	670377	Identifier	cbuf		670362	1					
ANR	670378	Argument	"""file_close(buffer)"""		670362	2					
ANR	670379	PrimaryExpression	"""file_close(buffer)"""		670362	0					
ANR	670380	ExpressionStatement	s -> file = 0	171:4:5638:5649	670362	1	True				
ANR	670381	AssignmentExpression	s -> file = 0		670362	0		=			
ANR	670382	PtrMemberAccess	s -> file		670362	0					
ANR	670383	Identifier	s		670362	0					
ANR	670384	Identifier	file		670362	1					
ANR	670385	PrimaryExpression	0		670362	1					
ANR	670386	ExpressionStatement	s -> read_id = s -> write_id = ( s -> read_id | s -> write_id ) + 1	173:4:5738:5795	670362	2	True				
ANR	670387	AssignmentExpression	s -> read_id = s -> write_id = ( s -> read_id | s -> write_id ) + 1		670362	0		=			
ANR	670388	PtrMemberAccess	s -> read_id		670362	0					
ANR	670389	Identifier	s		670362	0					
ANR	670390	Identifier	read_id		670362	1					
ANR	670391	AssignmentExpression	s -> write_id = ( s -> read_id | s -> write_id ) + 1		670362	1		=			
ANR	670392	PtrMemberAccess	s -> write_id		670362	0					
ANR	670393	Identifier	s		670362	0					
ANR	670394	Identifier	write_id		670362	1					
ANR	670395	AdditiveExpression	( s -> read_id | s -> write_id ) + 1		670362	1		+			
ANR	670396	InclusiveOrExpression	s -> read_id | s -> write_id		670362	0		|			
ANR	670397	PtrMemberAccess	s -> read_id		670362	0					
ANR	670398	Identifier	s		670362	0					
ANR	670399	Identifier	read_id		670362	1					
ANR	670400	PtrMemberAccess	s -> write_id		670362	1					
ANR	670401	Identifier	s		670362	0					
ANR	670402	Identifier	write_id		670362	1					
ANR	670403	PrimaryExpression	1		670362	1					
ANR	670404	ReturnStatement	return 0 ;	174:4:5801:5809	670362	3	True				
ANR	670405	PrimaryExpression	0		670362	0					
ANR	670406	ReturnType	static int		670362	1					
ANR	670407	Identifier	s_block_read_close		670362	2					
ANR	670408	ParameterList	stream * s		670362	3					
ANR	670409	Parameter	stream * s	168:19:5558:5567	670362	0	True				
ANR	670410	ParameterType	stream *		670362	0					
ANR	670411	Identifier	s		670362	1					
ANR	670412	CFGEntryNode	ENTRY		670362		True				
ANR	670413	CFGExitNode	EXIT		670362		True				
ANR	670414	Symbol	s -> write_id		670362						
ANR	670415	Symbol	s		670362						
ANR	670416	Symbol	s -> file		670362						
ANR	670417	Symbol	s -> memory		670362						
ANR	670418	Symbol	s -> read_id		670362						
ANR	670419	Symbol	s -> cbuf		670362						
ANR	670420	Symbol	* s		670362						
ANR	670421	Function	s_block_read_process	177:0:5814:8712							
ANR	670422	FunctionDef	"s_block_read_process (stream_state * st , stream_cursor_read * ignore_pr , stream_cursor_write * pw , bool last)"		670421	0					
ANR	670423	CompoundStatement		180:0:5956:8712	670421	0					
ANR	670424	IdentifierDeclStatement	int code ;	181:4:5962:5971	670421	0	True				
ANR	670425	IdentifierDecl	code		670421	0					
ANR	670426	IdentifierDeclType	int		670421	0					
ANR	670427	Identifier	code		670421	1					
ANR	670428	IdentifierDeclStatement	stream * s = ( stream * ) st ;	182:4:5977:6001	670421	1	True				
ANR	670429	IdentifierDecl	* s = ( stream * ) st		670421	0					
ANR	670430	IdentifierDeclType	stream *		670421	0					
ANR	670431	Identifier	s		670421	1					
ANR	670432	AssignmentExpression	* s = ( stream * ) st		670421	2		=			
ANR	670433	Identifier	s		670421	0					
ANR	670434	CastExpression	( stream * ) st		670421	1					
ANR	670435	CastTarget	stream *		670421	0					
ANR	670436	Identifier	st		670421	1					
ANR	670437	IdentifierDeclStatement	uint32_t * node = ( uint32_t * ) s -> file ;	183:4:6031:6067	670421	2	True				
ANR	670438	IdentifierDecl	* node = ( uint32_t * ) s -> file		670421	0					
ANR	670439	IdentifierDeclType	uint32_t *		670421	0					
ANR	670440	Identifier	node		670421	1					
ANR	670441	AssignmentExpression	* node = ( uint32_t * ) s -> file		670421	2		=			
ANR	670442	Identifier	node		670421	0					
ANR	670443	CastExpression	( uint32_t * ) s -> file		670421	1					
ANR	670444	CastTarget	uint32_t *		670421	0					
ANR	670445	PtrMemberAccess	s -> file		670421	1					
ANR	670446	Identifier	s		670421	0					
ANR	670447	Identifier	file		670421	1					
ANR	670448	IdentifierDeclStatement	uint max_count = pw -> limit - pw -> ptr ;	184:4:6073:6109	670421	3	True				
ANR	670449	IdentifierDecl	max_count = pw -> limit - pw -> ptr		670421	0					
ANR	670450	IdentifierDeclType	uint		670421	0					
ANR	670451	Identifier	max_count		670421	1					
ANR	670452	AssignmentExpression	max_count = pw -> limit - pw -> ptr		670421	2		=			
ANR	670453	Identifier	max_count		670421	0					
ANR	670454	AdditiveExpression	pw -> limit - pw -> ptr		670421	1		-			
ANR	670455	PtrMemberAccess	pw -> limit		670421	0					
ANR	670456	Identifier	pw		670421	0					
ANR	670457	Identifier	limit		670421	1					
ANR	670458	PtrMemberAccess	pw -> ptr		670421	1					
ANR	670459	Identifier	pw		670421	0					
ANR	670460	Identifier	ptr		670421	1					
ANR	670461	IdentifierDeclStatement	int status = 1 ;	185:4:6115:6129	670421	4	True				
ANR	670462	IdentifierDecl	status = 1		670421	0					
ANR	670463	IdentifierDeclType	int		670421	0					
ANR	670464	Identifier	status		670421	1					
ANR	670465	AssignmentExpression	status = 1		670421	2		=			
ANR	670466	Identifier	status		670421	0					
ANR	670467	PrimaryExpression	1		670421	1					
ANR	670468	IdentifierDeclStatement	int compression = ( ( get_u32_big_endian ( node ) & 0x80000000 ) != 0 ) ? 1 : 0 ;	186:4:6135:6207	670421	5	True				
ANR	670469	IdentifierDecl	compression = ( ( get_u32_big_endian ( node ) & 0x80000000 ) != 0 ) ? 1 : 0		670421	0					
ANR	670470	IdentifierDeclType	int		670421	0					
ANR	670471	Identifier	compression		670421	1					
ANR	670472	AssignmentExpression	compression = ( ( get_u32_big_endian ( node ) & 0x80000000 ) != 0 ) ? 1 : 0		670421	2		=			
ANR	670473	Identifier	compression		670421	0					
ANR	670474	ConditionalExpression	( ( get_u32_big_endian ( node ) & 0x80000000 ) != 0 ) ? 1 : 0		670421	1					
ANR	670475	Condition	( get_u32_big_endian ( node ) & 0x80000000 ) != 0		670421	0					
ANR	670476	EqualityExpression	( get_u32_big_endian ( node ) & 0x80000000 ) != 0		670421	0		!=			
ANR	670477	BitAndExpression	get_u32_big_endian ( node ) & 0x80000000		670421	0		&			
ANR	670478	CallExpression	get_u32_big_endian ( node )		670421	0					
ANR	670479	Callee	get_u32_big_endian		670421	0					
ANR	670480	Identifier	get_u32_big_endian		670421	0					
ANR	670481	ArgumentList	node		670421	1					
ANR	670482	Argument	node		670421	0					
ANR	670483	Identifier	node		670421	0					
ANR	670484	PrimaryExpression	0x80000000		670421	1					
ANR	670485	PrimaryExpression	0		670421	1					
ANR	670486	PrimaryExpression	1		670421	1					
ANR	670487	PrimaryExpression	0		670421	2					
ANR	670488	IdentifierDeclStatement	uint32_t filelen = get_u32_big_endian ( node ) & 0x7fffffff ;	187:4:6213:6269	670421	6	True				
ANR	670489	IdentifierDecl	filelen = get_u32_big_endian ( node ) & 0x7fffffff		670421	0					
ANR	670490	IdentifierDeclType	uint32_t		670421	0					
ANR	670491	Identifier	filelen		670421	1					
ANR	670492	AssignmentExpression	filelen = get_u32_big_endian ( node ) & 0x7fffffff		670421	2		=			
ANR	670493	Identifier	filelen		670421	0					
ANR	670494	BitAndExpression	get_u32_big_endian ( node ) & 0x7fffffff		670421	1		&			
ANR	670495	CallExpression	get_u32_big_endian ( node )		670421	0					
ANR	670496	Callee	get_u32_big_endian		670421	0					
ANR	670497	Identifier	get_u32_big_endian		670421	0					
ANR	670498	ArgumentList	node		670421	1					
ANR	670499	Argument	node		670421	0					
ANR	670500	Identifier	node		670421	0					
ANR	670501	PrimaryExpression	0x7fffffff		670421	1					
ANR	670502	IdentifierDeclStatement	uint32_t blocks = ( filelen + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE ;	188:4:6304:6367	670421	7	True				
ANR	670503	IdentifierDecl	blocks = ( filelen + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		670421	0					
ANR	670504	IdentifierDeclType	uint32_t		670421	0					
ANR	670505	Identifier	blocks		670421	1					
ANR	670506	AssignmentExpression	blocks = ( filelen + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		670421	2		=			
ANR	670507	Identifier	blocks		670421	0					
ANR	670508	MultiplicativeExpression	( filelen + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		670421	1		/			
ANR	670509	AdditiveExpression	filelen + ROMFS_BLOCKSIZE - 1		670421	0		+			
ANR	670510	Identifier	filelen		670421	0					
ANR	670511	AdditiveExpression	ROMFS_BLOCKSIZE - 1		670421	1		-			
ANR	670512	Identifier	ROMFS_BLOCKSIZE		670421	0					
ANR	670513	PrimaryExpression	1		670421	1					
ANR	670514	Identifier	ROMFS_BLOCKSIZE		670421	1					
ANR	670515	IdentifierDeclStatement	uint32_t iblock = ( s -> position + s -> file_offset + ( s -> srlimit + 1 - s -> cbuf ) ) / ROMFS_BLOCKSIZE ;	189:4:6373:6468	670421	8	True				
ANR	670516	IdentifierDecl	iblock = ( s -> position + s -> file_offset + ( s -> srlimit + 1 - s -> cbuf ) ) / ROMFS_BLOCKSIZE		670421	0					
ANR	670517	IdentifierDeclType	uint32_t		670421	0					
ANR	670518	Identifier	iblock		670421	1					
ANR	670519	AssignmentExpression	iblock = ( s -> position + s -> file_offset + ( s -> srlimit + 1 - s -> cbuf ) ) / ROMFS_BLOCKSIZE		670421	2		=			
ANR	670520	Identifier	iblock		670421	0					
ANR	670521	MultiplicativeExpression	( s -> position + s -> file_offset + ( s -> srlimit + 1 - s -> cbuf ) ) / ROMFS_BLOCKSIZE		670421	1		/			
ANR	670522	AdditiveExpression	s -> position + s -> file_offset + ( s -> srlimit + 1 - s -> cbuf )		670421	0		+			
ANR	670523	PtrMemberAccess	s -> position		670421	0					
ANR	670524	Identifier	s		670421	0					
ANR	670525	Identifier	position		670421	1					
ANR	670526	AdditiveExpression	s -> file_offset + ( s -> srlimit + 1 - s -> cbuf )		670421	1		+			
ANR	670527	PtrMemberAccess	s -> file_offset		670421	0					
ANR	670528	Identifier	s		670421	0					
ANR	670529	Identifier	file_offset		670421	1					
ANR	670530	AdditiveExpression	s -> srlimit + 1 - s -> cbuf		670421	1		+			
ANR	670531	PtrMemberAccess	s -> srlimit		670421	0					
ANR	670532	Identifier	s		670421	0					
ANR	670533	Identifier	srlimit		670421	1					
ANR	670534	AdditiveExpression	1 - s -> cbuf		670421	1		-			
ANR	670535	PrimaryExpression	1		670421	0					
ANR	670536	PtrMemberAccess	s -> cbuf		670421	1					
ANR	670537	Identifier	s		670421	0					
ANR	670538	Identifier	cbuf		670421	1					
ANR	670539	Identifier	ROMFS_BLOCKSIZE		670421	1					
ANR	670540	IdentifierDeclStatement	uint32_t block_length = get_u32_big_endian ( node + 1 + ( 2 * iblock ) ) ;	190:4:6474:6535	670421	9	True				
ANR	670541	IdentifierDecl	block_length = get_u32_big_endian ( node + 1 + ( 2 * iblock ) )		670421	0					
ANR	670542	IdentifierDeclType	uint32_t		670421	0					
ANR	670543	Identifier	block_length		670421	1					
ANR	670544	AssignmentExpression	block_length = get_u32_big_endian ( node + 1 + ( 2 * iblock ) )		670421	2		=			
ANR	670545	Identifier	block_length		670421	0					
ANR	670546	CallExpression	get_u32_big_endian ( node + 1 + ( 2 * iblock ) )		670421	1					
ANR	670547	Callee	get_u32_big_endian		670421	0					
ANR	670548	Identifier	get_u32_big_endian		670421	0					
ANR	670549	ArgumentList	node + 1 + ( 2 * iblock )		670421	1					
ANR	670550	Argument	node + 1 + ( 2 * iblock )		670421	0					
ANR	670551	AdditiveExpression	node + 1 + ( 2 * iblock )		670421	0		+			
ANR	670552	Identifier	node		670421	0					
ANR	670553	AdditiveExpression	1 + ( 2 * iblock )		670421	1		+			
ANR	670554	PrimaryExpression	1		670421	0					
ANR	670555	MultiplicativeExpression	2 * iblock		670421	1		*			
ANR	670556	PrimaryExpression	2		670421	0					
ANR	670557	Identifier	iblock		670421	1					
ANR	670558	IdentifierDeclStatement	uint32_t block_offset = get_u32_big_endian ( node + 2 + ( 2 * iblock ) ) ;	191:4:6541:6602	670421	10	True				
ANR	670559	IdentifierDecl	block_offset = get_u32_big_endian ( node + 2 + ( 2 * iblock ) )		670421	0					
ANR	670560	IdentifierDeclType	uint32_t		670421	0					
ANR	670561	Identifier	block_offset		670421	1					
ANR	670562	AssignmentExpression	block_offset = get_u32_big_endian ( node + 2 + ( 2 * iblock ) )		670421	2		=			
ANR	670563	Identifier	block_offset		670421	0					
ANR	670564	CallExpression	get_u32_big_endian ( node + 2 + ( 2 * iblock ) )		670421	1					
ANR	670565	Callee	get_u32_big_endian		670421	0					
ANR	670566	Identifier	get_u32_big_endian		670421	0					
ANR	670567	ArgumentList	node + 2 + ( 2 * iblock )		670421	1					
ANR	670568	Argument	node + 2 + ( 2 * iblock )		670421	0					
ANR	670569	AdditiveExpression	node + 2 + ( 2 * iblock )		670421	0		+			
ANR	670570	Identifier	node		670421	0					
ANR	670571	AdditiveExpression	2 + ( 2 * iblock )		670421	1		+			
ANR	670572	PrimaryExpression	2		670421	0					
ANR	670573	MultiplicativeExpression	2 * iblock		670421	1		*			
ANR	670574	PrimaryExpression	2		670421	0					
ANR	670575	Identifier	iblock		670421	1					
ANR	670576	Statement	unsigned	192:4:6608:6615	670421	11	True				
ANR	670577	IdentifierDeclStatement	const char * block_data = ( ( unsigned char * ) node ) + block_offset ;	192:13:6617:6680	670421	12	True				
ANR	670578	IdentifierDecl	* block_data = ( ( unsigned char * ) node ) + block_offset		670421	0					
ANR	670579	IdentifierDeclType	const char *		670421	0					
ANR	670580	Identifier	block_data		670421	1					
ANR	670581	AssignmentExpression	* block_data = ( ( unsigned char * ) node ) + block_offset		670421	2		=			
ANR	670582	Identifier	block_data		670421	0					
ANR	670583	AdditiveExpression	( ( unsigned char * ) node ) + block_offset		670421	1		+			
ANR	670584	CastExpression	( unsigned char * ) node		670421	0					
ANR	670585	CastTarget	unsigned char *		670421	0					
ANR	670586	Identifier	node		670421	1					
ANR	670587	Identifier	block_offset		670421	1					
ANR	670588	IdentifierDeclStatement	int count = iblock < ( blocks - 1 ) ? ROMFS_BLOCKSIZE : filelen - ( ROMFS_BLOCKSIZE * iblock ) ;	193:4:6686:6776	670421	13	True				
ANR	670589	IdentifierDecl	count = iblock < ( blocks - 1 ) ? ROMFS_BLOCKSIZE : filelen - ( ROMFS_BLOCKSIZE * iblock )		670421	0					
ANR	670590	IdentifierDeclType	int		670421	0					
ANR	670591	Identifier	count		670421	1					
ANR	670592	AssignmentExpression	count = iblock < ( blocks - 1 ) ? ROMFS_BLOCKSIZE : filelen - ( ROMFS_BLOCKSIZE * iblock )		670421	2		=			
ANR	670593	Identifier	count		670421	0					
ANR	670594	ConditionalExpression	iblock < ( blocks - 1 ) ? ROMFS_BLOCKSIZE : filelen - ( ROMFS_BLOCKSIZE * iblock )		670421	1					
ANR	670595	Condition	iblock < ( blocks - 1 )		670421	0					
ANR	670596	RelationalExpression	iblock < ( blocks - 1 )		670421	0		<			
ANR	670597	Identifier	iblock		670421	0					
ANR	670598	AdditiveExpression	blocks - 1		670421	1		-			
ANR	670599	Identifier	blocks		670421	0					
ANR	670600	PrimaryExpression	1		670421	1					
ANR	670601	Identifier	ROMFS_BLOCKSIZE		670421	1					
ANR	670602	AdditiveExpression	filelen - ( ROMFS_BLOCKSIZE * iblock )		670421	2		-			
ANR	670603	Identifier	filelen		670421	0					
ANR	670604	MultiplicativeExpression	ROMFS_BLOCKSIZE * iblock		670421	1		*			
ANR	670605	Identifier	ROMFS_BLOCKSIZE		670421	0					
ANR	670606	Identifier	iblock		670421	1					
ANR	670607	IfStatement	if ( s -> position + ( s -> cursor . r . limit - s -> cbuf + 1 ) >= filelen || block_data == NULL )		670421	14					
ANR	670608	Condition	s -> position + ( s -> cursor . r . limit - s -> cbuf + 1 ) >= filelen || block_data == NULL	195:8:6787:6866	670421	0	True				
ANR	670609	OrExpression	s -> position + ( s -> cursor . r . limit - s -> cbuf + 1 ) >= filelen || block_data == NULL		670421	0		||			
ANR	670610	RelationalExpression	s -> position + ( s -> cursor . r . limit - s -> cbuf + 1 ) >= filelen		670421	0		>=			
ANR	670611	AdditiveExpression	s -> position + ( s -> cursor . r . limit - s -> cbuf + 1 )		670421	0		+			
ANR	670612	PtrMemberAccess	s -> position		670421	0					
ANR	670613	Identifier	s		670421	0					
ANR	670614	Identifier	position		670421	1					
ANR	670615	AdditiveExpression	s -> cursor . r . limit - s -> cbuf + 1		670421	1		-			
ANR	670616	MemberAccess	s -> cursor . r . limit		670421	0					
ANR	670617	MemberAccess	s -> cursor . r		670421	0					
ANR	670618	PtrMemberAccess	s -> cursor		670421	0					
ANR	670619	Identifier	s		670421	0					
ANR	670620	Identifier	cursor		670421	1					
ANR	670621	Identifier	r		670421	1					
ANR	670622	Identifier	limit		670421	1					
ANR	670623	AdditiveExpression	s -> cbuf + 1		670421	1		+			
ANR	670624	PtrMemberAccess	s -> cbuf		670421	0					
ANR	670625	Identifier	s		670421	0					
ANR	670626	Identifier	cbuf		670421	1					
ANR	670627	PrimaryExpression	1		670421	1					
ANR	670628	Identifier	filelen		670421	1					
ANR	670629	EqualityExpression	block_data == NULL		670421	1		==			
ANR	670630	Identifier	block_data		670421	0					
ANR	670631	Identifier	NULL		670421	1					
ANR	670632	ReturnStatement	return EOFC ;	196:8:6877:6888	670421	1	True				
ANR	670633	Identifier	EOFC		670421	0					
ANR	670634	IfStatement	if ( s -> file_limit < S_FILE_LIMIT_MAX )		670421	15					
ANR	670635	Condition	s -> file_limit < S_FILE_LIMIT_MAX	197:8:6913:6944	670421	0	True				
ANR	670636	RelationalExpression	s -> file_limit < S_FILE_LIMIT_MAX		670421	0		<			
ANR	670637	PtrMemberAccess	s -> file_limit		670421	0					
ANR	670638	Identifier	s		670421	0					
ANR	670639	Identifier	file_limit		670421	1					
ANR	670640	Identifier	S_FILE_LIMIT_MAX		670421	1					
ANR	670641	CompoundStatement		20:8:1045:1112	670421	1					
ANR	670642	IdentifierDeclStatement	uint32_t limit_count = s -> file_offset + s -> file_limit - s -> position ;	199:8:7002:7069	670421	0	True				
ANR	670643	IdentifierDecl	limit_count = s -> file_offset + s -> file_limit - s -> position		670421	0					
ANR	670644	IdentifierDeclType	uint32_t		670421	0					
ANR	670645	Identifier	limit_count		670421	1					
ANR	670646	AssignmentExpression	limit_count = s -> file_offset + s -> file_limit - s -> position		670421	2		=			
ANR	670647	Identifier	limit_count		670421	0					
ANR	670648	AdditiveExpression	s -> file_offset + s -> file_limit - s -> position		670421	1		+			
ANR	670649	PtrMemberAccess	s -> file_offset		670421	0					
ANR	670650	Identifier	s		670421	0					
ANR	670651	Identifier	file_offset		670421	1					
ANR	670652	AdditiveExpression	s -> file_limit - s -> position		670421	1		-			
ANR	670653	PtrMemberAccess	s -> file_limit		670421	0					
ANR	670654	Identifier	s		670421	0					
ANR	670655	Identifier	file_limit		670421	1					
ANR	670656	PtrMemberAccess	s -> position		670421	1					
ANR	670657	Identifier	s		670421	0					
ANR	670658	Identifier	position		670421	1					
ANR	670659	IfStatement	if ( count > limit_count )		670421	1					
ANR	670660	Condition	count > limit_count	201:12:7084:7102	670421	0	True				
ANR	670661	RelationalExpression	count > limit_count		670421	0		>			
ANR	670662	Identifier	count		670421	0					
ANR	670663	Identifier	limit_count		670421	1					
ANR	670664	ExpressionStatement	count = limit_count	202:12:7117:7136	670421	1	True				
ANR	670665	AssignmentExpression	count = limit_count		670421	0		=			
ANR	670666	Identifier	count		670421	0					
ANR	670667	Identifier	limit_count		670421	1					
ANR	670668	IfStatement	if ( compression )		670421	16					
ANR	670669	Condition	compression	205:8:7192:7202	670421	0	True				
ANR	670670	Identifier	compression		670421	0					
ANR	670671	CompoundStatement		29:8:1371:1392	670421	1					
ANR	670672	IdentifierDeclStatement	unsigned long buflen = ROMFS_BLOCKSIZE ;	206:8:7215:7253	670421	0	True				
ANR	670673	IdentifierDecl	buflen = ROMFS_BLOCKSIZE		670421	0					
ANR	670674	IdentifierDeclType	unsigned long		670421	0					
ANR	670675	Identifier	buflen		670421	1					
ANR	670676	AssignmentExpression	buflen = ROMFS_BLOCKSIZE		670421	2		=			
ANR	670677	Identifier	ROMFS_BLOCKSIZE		670421	0					
ANR	670678	Identifier	ROMFS_BLOCKSIZE		670421	1					
ANR	670679	IdentifierDeclStatement	byte * dest = ( pw -> ptr + 1 ) ;	207:8:7263:7289	670421	1	True				
ANR	670680	IdentifierDecl	* dest = ( pw -> ptr + 1 )		670421	0					
ANR	670681	IdentifierDeclType	byte *		670421	0					
ANR	670682	Identifier	dest		670421	1					
ANR	670683	AssignmentExpression	* dest = ( pw -> ptr + 1 )		670421	2		=			
ANR	670684	Identifier	dest		670421	0					
ANR	670685	AdditiveExpression	pw -> ptr + 1		670421	1		+			
ANR	670686	PtrMemberAccess	pw -> ptr		670421	0					
ANR	670687	Identifier	pw		670421	0					
ANR	670688	Identifier	ptr		670421	1					
ANR	670689	PrimaryExpression	1		670421	1					
ANR	670690	IdentifierDeclStatement	int need_copy = false ;	208:8:7328:7349	670421	2	True				
ANR	670691	IdentifierDecl	need_copy = false		670421	0					
ANR	670692	IdentifierDeclType	int		670421	0					
ANR	670693	Identifier	need_copy		670421	1					
ANR	670694	AssignmentExpression	need_copy = false		670421	2		=			
ANR	670695	Identifier	false		670421	0					
ANR	670696	Identifier	false		670421	1					
ANR	670697	IfStatement	if ( ( dest < s -> cbuf ) || ( dest >= ( s -> cbuf + s -> cbsize ) ) )		670421	3					
ANR	670698	Condition	( dest < s -> cbuf ) || ( dest >= ( s -> cbuf + s -> cbsize ) )	212:12:7481:7531	670421	0	True				
ANR	670699	OrExpression	( dest < s -> cbuf ) || ( dest >= ( s -> cbuf + s -> cbsize ) )		670421	0		||			
ANR	670700	RelationalExpression	dest < s -> cbuf		670421	0		<			
ANR	670701	Identifier	dest		670421	0					
ANR	670702	PtrMemberAccess	s -> cbuf		670421	1					
ANR	670703	Identifier	s		670421	0					
ANR	670704	Identifier	cbuf		670421	1					
ANR	670705	RelationalExpression	dest >= ( s -> cbuf + s -> cbsize )		670421	1		>=			
ANR	670706	Identifier	dest		670421	0					
ANR	670707	AdditiveExpression	s -> cbuf + s -> cbsize		670421	1		+			
ANR	670708	PtrMemberAccess	s -> cbuf		670421	0					
ANR	670709	Identifier	s		670421	0					
ANR	670710	Identifier	cbuf		670421	1					
ANR	670711	PtrMemberAccess	s -> cbsize		670421	1					
ANR	670712	Identifier	s		670421	0					
ANR	670713	Identifier	cbsize		670421	1					
ANR	670714	CompoundStatement		33:65:1577:1577	670421	1					
ANR	670715	IfStatement	if ( max_count < count )		670421	0					
ANR	670716	Condition	max_count < count	217:16:7840:7856	670421	0	True				
ANR	670717	RelationalExpression	max_count < count		670421	0		<			
ANR	670718	Identifier	max_count		670421	0					
ANR	670719	Identifier	count		670421	1					
ANR	670720	CompoundStatement		38:35:1902:1902	670421	1					
ANR	670721	IfStatement	if ( ( sbufptr ( s ) ) != s -> srlimit )		670421	0					
ANR	670722	Condition	( sbufptr ( s ) ) != s -> srlimit	219:20:7894:7919	670421	0	True				
ANR	670723	EqualityExpression	( sbufptr ( s ) ) != s -> srlimit		670421	0		!=			
ANR	670724	CallExpression	sbufptr ( s )		670421	0					
ANR	670725	Callee	sbufptr		670421	0					
ANR	670726	Identifier	sbufptr		670421	0					
ANR	670727	ArgumentList	s		670421	1					
ANR	670728	Argument	s		670421	0					
ANR	670729	Identifier	s		670421	0					
ANR	670730	PtrMemberAccess	s -> srlimit		670421	1					
ANR	670731	Identifier	s		670421	0					
ANR	670732	Identifier	srlimit		670421	1					
ANR	670733	ExpressionStatement	"emprintf ( s -> memory , ""cbuf not empty as expected\\n."" )"	220:20:7942:7994	670421	1	True				
ANR	670734	CallExpression	"emprintf ( s -> memory , ""cbuf not empty as expected\\n."" )"		670421	0					
ANR	670735	Callee	emprintf		670421	0					
ANR	670736	Identifier	emprintf		670421	0					
ANR	670737	ArgumentList	s -> memory		670421	1					
ANR	670738	Argument	s -> memory		670421	0					
ANR	670739	PtrMemberAccess	s -> memory		670421	0					
ANR	670740	Identifier	s		670421	0					
ANR	670741	Identifier	memory		670421	1					
ANR	670742	Argument	"""cbuf not empty as expected\\n."""		670421	1					
ANR	670743	PrimaryExpression	"""cbuf not empty as expected\\n."""		670421	0					
ANR	670744	ExpressionStatement	dest = s -> cbuf	222:16:8019:8033	670421	1	True				
ANR	670745	AssignmentExpression	dest = s -> cbuf		670421	0		=			
ANR	670746	Identifier	dest		670421	0					
ANR	670747	PtrMemberAccess	s -> cbuf		670421	1					
ANR	670748	Identifier	s		670421	0					
ANR	670749	Identifier	cbuf		670421	1					
ANR	670750	ExpressionStatement	need_copy = true	223:16:8051:8067	670421	2	True				
ANR	670751	AssignmentExpression	need_copy = true		670421	0		=			
ANR	670752	Identifier	need_copy		670421	0					
ANR	670753	Identifier	true		670421	1					
ANR	670754	ExpressionStatement	"code = uncompress ( dest , & buflen , block_data , block_length )"	227:8:8151:8210	670421	4	True				
ANR	670755	AssignmentExpression	"code = uncompress ( dest , & buflen , block_data , block_length )"		670421	0		=			
ANR	670756	Identifier	code		670421	0					
ANR	670757	CallExpression	"uncompress ( dest , & buflen , block_data , block_length )"		670421	1					
ANR	670758	Callee	uncompress		670421	0					
ANR	670759	Identifier	uncompress		670421	0					
ANR	670760	ArgumentList	dest		670421	1					
ANR	670761	Argument	dest		670421	0					
ANR	670762	Identifier	dest		670421	0					
ANR	670763	Argument	& buflen		670421	1					
ANR	670764	UnaryOperationExpression	& buflen		670421	0					
ANR	670765	UnaryOperator	&		670421	0					
ANR	670766	Identifier	buflen		670421	1					
ANR	670767	Argument	block_data		670421	2					
ANR	670768	Identifier	block_data		670421	0					
ANR	670769	Argument	block_length		670421	3					
ANR	670770	Identifier	block_length		670421	0					
ANR	670771	IfStatement	if ( code != Z_OK || count != buflen )		670421	5					
ANR	670772	Condition	code != Z_OK || count != buflen	228:12:8224:8254	670421	0	True				
ANR	670773	OrExpression	code != Z_OK || count != buflen		670421	0		||			
ANR	670774	EqualityExpression	code != Z_OK		670421	0		!=			
ANR	670775	Identifier	code		670421	0					
ANR	670776	Identifier	Z_OK		670421	1					
ANR	670777	EqualityExpression	count != buflen		670421	1		!=			
ANR	670778	Identifier	count		670421	0					
ANR	670779	Identifier	buflen		670421	1					
ANR	670780	ReturnStatement	return ERRC ;	229:12:8269:8280	670421	1	True				
ANR	670781	Identifier	ERRC		670421	0					
ANR	670782	IfStatement	if ( need_copy )		670421	6					
ANR	670783	Condition	need_copy	230:12:8294:8302	670421	0	True				
ANR	670784	Identifier	need_copy		670421	0					
ANR	670785	CompoundStatement		51:23:2348:2348	670421	1					
ANR	670786	ExpressionStatement	"memcpy ( pw -> ptr + 1 , dest , max_count )"	231:12:8319:8353	670421	0	True				
ANR	670787	CallExpression	"memcpy ( pw -> ptr + 1 , dest , max_count )"		670421	0					
ANR	670788	Callee	memcpy		670421	0					
ANR	670789	Identifier	memcpy		670421	0					
ANR	670790	ArgumentList	pw -> ptr + 1		670421	1					
ANR	670791	Argument	pw -> ptr + 1		670421	0					
ANR	670792	AdditiveExpression	pw -> ptr + 1		670421	0		+			
ANR	670793	PtrMemberAccess	pw -> ptr		670421	0					
ANR	670794	Identifier	pw		670421	0					
ANR	670795	Identifier	ptr		670421	1					
ANR	670796	PrimaryExpression	1		670421	1					
ANR	670797	Argument	dest		670421	1					
ANR	670798	Identifier	dest		670421	0					
ANR	670799	Argument	max_count		670421	2					
ANR	670800	Identifier	max_count		670421	0					
ANR	670801	ExpressionStatement	count = max_count	232:12:8367:8384	670421	1	True				
ANR	670802	AssignmentExpression	count = max_count		670421	0		=			
ANR	670803	Identifier	count		670421	0					
ANR	670804	Identifier	max_count		670421	1					
ANR	670805	ElseStatement	else		670421	0					
ANR	670806	CompoundStatement		55:11:2450:2450	670421	0					
ANR	670807	ExpressionStatement	count = block_length	236:8:8462:8482	670421	0	True				
ANR	670808	AssignmentExpression	count = block_length		670421	0		=			
ANR	670809	Identifier	count		670421	0					
ANR	670810	Identifier	block_length		670421	1					
ANR	670811	IfStatement	if ( count > max_count )		670421	1					
ANR	670812	Condition	count > max_count	237:12:8496:8512	670421	0	True				
ANR	670813	RelationalExpression	count > max_count		670421	0		>			
ANR	670814	Identifier	count		670421	0					
ANR	670815	Identifier	max_count		670421	1					
ANR	670816	ExpressionStatement	count = max_count	238:12:8527:8544	670421	1	True				
ANR	670817	AssignmentExpression	count = max_count		670421	0		=			
ANR	670818	Identifier	count		670421	0					
ANR	670819	Identifier	max_count		670421	1					
ANR	670820	ExpressionStatement	"memcpy ( pw -> ptr + 1 , block_data , count )"	239:8:8554:8590	670421	2	True				
ANR	670821	CallExpression	"memcpy ( pw -> ptr + 1 , block_data , count )"		670421	0					
ANR	670822	Callee	memcpy		670421	0					
ANR	670823	Identifier	memcpy		670421	0					
ANR	670824	ArgumentList	pw -> ptr + 1		670421	1					
ANR	670825	Argument	pw -> ptr + 1		670421	0					
ANR	670826	AdditiveExpression	pw -> ptr + 1		670421	0		+			
ANR	670827	PtrMemberAccess	pw -> ptr		670421	0					
ANR	670828	Identifier	pw		670421	0					
ANR	670829	Identifier	ptr		670421	1					
ANR	670830	PrimaryExpression	1		670421	1					
ANR	670831	Argument	block_data		670421	1					
ANR	670832	Identifier	block_data		670421	0					
ANR	670833	Argument	count		670421	2					
ANR	670834	Identifier	count		670421	0					
ANR	670835	IfStatement	if ( count < 0 )		670421	17					
ANR	670836	Condition	count < 0	241:8:8606:8614	670421	0	True				
ANR	670837	RelationalExpression	count < 0		670421	0		<			
ANR	670838	Identifier	count		670421	0					
ANR	670839	PrimaryExpression	0		670421	1					
ANR	670840	ExpressionStatement	count = 0	242:8:8625:8634	670421	1	True				
ANR	670841	AssignmentExpression	count = 0		670421	0		=			
ANR	670842	Identifier	count		670421	0					
ANR	670843	PrimaryExpression	0		670421	1					
ANR	670844	ExpressionStatement	pw -> ptr += count	243:4:8640:8656	670421	18	True				
ANR	670845	AssignmentExpression	pw -> ptr += count		670421	0		+=			
ANR	670846	PtrMemberAccess	pw -> ptr		670421	0					
ANR	670847	Identifier	pw		670421	0					
ANR	670848	Identifier	ptr		670421	1					
ANR	670849	Identifier	count		670421	1					
ANR	670850	ExpressionStatement	process_interrupts ( s -> memory )	244:4:8662:8691	670421	19	True				
ANR	670851	CallExpression	process_interrupts ( s -> memory )		670421	0					
ANR	670852	Callee	process_interrupts		670421	0					
ANR	670853	Identifier	process_interrupts		670421	0					
ANR	670854	ArgumentList	s -> memory		670421	1					
ANR	670855	Argument	s -> memory		670421	0					
ANR	670856	PtrMemberAccess	s -> memory		670421	0					
ANR	670857	Identifier	s		670421	0					
ANR	670858	Identifier	memory		670421	1					
ANR	670859	ReturnStatement	return status ;	245:4:8697:8710	670421	20	True				
ANR	670860	Identifier	status		670421	0					
ANR	670861	ReturnType	static int		670421	1					
ANR	670862	Identifier	s_block_read_process		670421	2					
ANR	670863	ParameterList	"stream_state * st , stream_cursor_read * ignore_pr , stream_cursor_write * pw , bool last"		670421	3					
ANR	670864	Parameter	stream_state * st	178:21:5846:5862	670421	0	True				
ANR	670865	ParameterType	stream_state *		670421	0					
ANR	670866	Identifier	st		670421	1					
ANR	670867	Parameter	stream_cursor_read * ignore_pr	178:40:5865:5894	670421	1	True				
ANR	670868	ParameterType	stream_cursor_read *		670421	0					
ANR	670869	Identifier	ignore_pr		670421	1					
ANR	670870	Parameter	stream_cursor_write * pw	179:22:5919:5942	670421	2	True				
ANR	670871	ParameterType	stream_cursor_write *		670421	0					
ANR	670872	Identifier	pw		670421	1					
ANR	670873	Parameter	bool last	179:48:5945:5953	670421	3	True				
ANR	670874	ParameterType	bool		670421	0					
ANR	670875	Identifier	last		670421	1					
ANR	670876	CFGEntryNode	ENTRY		670421		True				
ANR	670877	CFGExitNode	EXIT		670421		True				
ANR	670878	Symbol	iblock		670421						
ANR	670879	Symbol	code		670421						
ANR	670880	Symbol	s -> file		670421						
ANR	670881	Symbol	sbufptr		670421						
ANR	670882	Symbol	pw		670421						
ANR	670883	Symbol	s -> srlimit		670421						
ANR	670884	Symbol	EOFC		670421						
ANR	670885	Symbol	S_FILE_LIMIT_MAX		670421						
ANR	670886	Symbol	s -> cbuf		670421						
ANR	670887	Symbol	Z_OK		670421						
ANR	670888	Symbol	dest		670421						
ANR	670889	Symbol	s -> file_limit		670421						
ANR	670890	Symbol	s -> cbsize		670421						
ANR	670891	Symbol	max_count		670421						
ANR	670892	Symbol	pw -> limit		670421						
ANR	670893	Symbol	filelen		670421						
ANR	670894	Symbol	block_offset		670421						
ANR	670895	Symbol	s -> cursor . r		670421						
ANR	670896	Symbol	buflen		670421						
ANR	670897	Symbol	get_u32_big_endian		670421						
ANR	670898	Symbol	pw -> ptr		670421						
ANR	670899	Symbol	need_copy		670421						
ANR	670900	Symbol	s -> cursor		670421						
ANR	670901	Symbol	st		670421						
ANR	670902	Symbol	NULL		670421						
ANR	670903	Symbol	last		670421						
ANR	670904	Symbol	blocks		670421						
ANR	670905	Symbol	s -> position		670421						
ANR	670906	Symbol	s -> memory		670421						
ANR	670907	Symbol	s -> file_offset		670421						
ANR	670908	Symbol	count		670421						
ANR	670909	Symbol	false		670421						
ANR	670910	Symbol	s -> cursor . r . limit		670421						
ANR	670911	Symbol	* pw		670421						
ANR	670912	Symbol	ROMFS_BLOCKSIZE		670421						
ANR	670913	Symbol	node		670421						
ANR	670914	Symbol	s		670421						
ANR	670915	Symbol	& buflen		670421						
ANR	670916	Symbol	ignore_pr		670421						
ANR	670917	Symbol	true		670421						
ANR	670918	Symbol	block_data		670421						
ANR	670919	Symbol	limit_count		670421						
ANR	670920	Symbol	uncompress		670421						
ANR	670921	Symbol	compression		670421						
ANR	670922	Symbol	* s		670421						
ANR	670923	Symbol	ERRC		670421						
ANR	670924	Symbol	status		670421						
ANR	670925	Symbol	block_length		670421						
ANR	670926	Function	romfs_init	248:0:8715:9013							
ANR	670927	FunctionDef	"romfs_init (gx_io_device * iodev , gs_memory_t * mem)"		670926	0					
ANR	670928	CompoundStatement		250:0:8776:9013	670926	0					
ANR	670929	IdentifierDeclStatement	"romfs_state * state = gs_alloc_struct ( mem , romfs_state , & st_romfs_state , ""romfs_init(state)"" ) ;"	251:4:8782:8915	670926	0	True				
ANR	670930	IdentifierDecl	"* state = gs_alloc_struct ( mem , romfs_state , & st_romfs_state , ""romfs_init(state)"" )"		670926	0					
ANR	670931	IdentifierDeclType	romfs_state *		670926	0					
ANR	670932	Identifier	state		670926	1					
ANR	670933	AssignmentExpression	"* state = gs_alloc_struct ( mem , romfs_state , & st_romfs_state , ""romfs_init(state)"" )"		670926	2		=			
ANR	670934	Identifier	state		670926	0					
ANR	670935	CallExpression	"gs_alloc_struct ( mem , romfs_state , & st_romfs_state , ""romfs_init(state)"" )"		670926	1					
ANR	670936	Callee	gs_alloc_struct		670926	0					
ANR	670937	Identifier	gs_alloc_struct		670926	0					
ANR	670938	ArgumentList	mem		670926	1					
ANR	670939	Argument	mem		670926	0					
ANR	670940	Identifier	mem		670926	0					
ANR	670941	Argument	romfs_state		670926	1					
ANR	670942	Identifier	romfs_state		670926	0					
ANR	670943	Argument	& st_romfs_state		670926	2					
ANR	670944	UnaryOperationExpression	& st_romfs_state		670926	0					
ANR	670945	UnaryOperator	&		670926	0					
ANR	670946	Identifier	st_romfs_state		670926	1					
ANR	670947	Argument	"""romfs_init(state)"""		670926	3					
ANR	670948	PrimaryExpression	"""romfs_init(state)"""		670926	0					
ANR	670949	IfStatement	if ( ! state )		670926	1					
ANR	670950	Condition	! state	253:8:8925:8930	670926	0	True				
ANR	670951	UnaryOperationExpression	! state		670926	0					
ANR	670952	UnaryOperator	!		670926	0					
ANR	670953	Identifier	state		670926	1					
ANR	670954	ExpressionStatement	return_error ( gs_error_VMerror )	254:8:8941:8971	670926	1	True				
ANR	670955	CallExpression	return_error ( gs_error_VMerror )		670926	0					
ANR	670956	Callee	return_error		670926	0					
ANR	670957	Identifier	return_error		670926	0					
ANR	670958	ArgumentList	gs_error_VMerror		670926	1					
ANR	670959	Argument	gs_error_VMerror		670926	0					
ANR	670960	Identifier	gs_error_VMerror		670926	0					
ANR	670961	ExpressionStatement	iodev -> state = state	255:4:8977:8997	670926	2	True				
ANR	670962	AssignmentExpression	iodev -> state = state		670926	0		=			
ANR	670963	PtrMemberAccess	iodev -> state		670926	0					
ANR	670964	Identifier	iodev		670926	0					
ANR	670965	Identifier	state		670926	1					
ANR	670966	Identifier	state		670926	1					
ANR	670967	ReturnStatement	return 0 ;	256:4:9003:9011	670926	3	True				
ANR	670968	PrimaryExpression	0		670926	0					
ANR	670969	ReturnType	static int		670926	1					
ANR	670970	Identifier	romfs_init		670926	2					
ANR	670971	ParameterList	"gx_io_device * iodev , gs_memory_t * mem"		670926	3					
ANR	670972	Parameter	gx_io_device * iodev	249:11:8737:8755	670926	0	True				
ANR	670973	ParameterType	gx_io_device *		670926	0					
ANR	670974	Identifier	iodev		670926	1					
ANR	670975	Parameter	gs_memory_t * mem	249:32:8758:8773	670926	1	True				
ANR	670976	ParameterType	gs_memory_t *		670926	0					
ANR	670977	Identifier	mem		670926	1					
ANR	670978	CFGEntryNode	ENTRY		670926		True				
ANR	670979	CFGExitNode	EXIT		670926		True				
ANR	670980	Symbol	romfs_state		670926						
ANR	670981	Symbol	gs_error_VMerror		670926						
ANR	670982	Symbol	iodev		670926						
ANR	670983	Symbol	mem		670926						
ANR	670984	Symbol	& st_romfs_state		670926						
ANR	670985	Symbol	* iodev		670926						
ANR	670986	Symbol	gs_alloc_struct		670926						
ANR	670987	Symbol	iodev -> state		670926						
ANR	670988	Symbol	state		670926						
ANR	670989	Function	romfs_finit	259:0:9016:9172							
ANR	670990	FunctionDef	"romfs_finit (gx_io_device * iodev , gs_memory_t * mem)"		670989	0					
ANR	670991	CompoundStatement		261:0:9079:9172	670989	0					
ANR	670992	ExpressionStatement	"gs_free_object ( mem , iodev -> state , ""romfs_finit"" )"	262:4:9085:9133	670989	0	True				
ANR	670993	CallExpression	"gs_free_object ( mem , iodev -> state , ""romfs_finit"" )"		670989	0					
ANR	670994	Callee	gs_free_object		670989	0					
ANR	670995	Identifier	gs_free_object		670989	0					
ANR	670996	ArgumentList	mem		670989	1					
ANR	670997	Argument	mem		670989	0					
ANR	670998	Identifier	mem		670989	0					
ANR	670999	Argument	iodev -> state		670989	1					
ANR	671000	PtrMemberAccess	iodev -> state		670989	0					
ANR	671001	Identifier	iodev		670989	0					
ANR	671002	Identifier	state		670989	1					
ANR	671003	Argument	"""romfs_finit"""		670989	2					
ANR	671004	PrimaryExpression	"""romfs_finit"""		670989	0					
ANR	671005	ExpressionStatement	iodev -> state = NULL	263:4:9139:9158	670989	1	True				
ANR	671006	AssignmentExpression	iodev -> state = NULL		670989	0		=			
ANR	671007	PtrMemberAccess	iodev -> state		670989	0					
ANR	671008	Identifier	iodev		670989	0					
ANR	671009	Identifier	state		670989	1					
ANR	671010	Identifier	NULL		670989	1					
ANR	671011	ReturnStatement	return ;	264:4:9164:9170	670989	2	True				
ANR	671012	ReturnType	static void		670989	1					
ANR	671013	Identifier	romfs_finit		670989	2					
ANR	671014	ParameterList	"gx_io_device * iodev , gs_memory_t * mem"		670989	3					
ANR	671015	Parameter	gx_io_device * iodev	260:12:9040:9058	670989	0	True				
ANR	671016	ParameterType	gx_io_device *		670989	0					
ANR	671017	Identifier	iodev		670989	1					
ANR	671018	Parameter	gs_memory_t * mem	260:33:9061:9076	670989	1	True				
ANR	671019	ParameterType	gs_memory_t *		670989	0					
ANR	671020	Identifier	mem		670989	1					
ANR	671021	CFGEntryNode	ENTRY		670989		True				
ANR	671022	CFGExitNode	EXIT		670989		True				
ANR	671023	Symbol	NULL		670989						
ANR	671024	Symbol	iodev		670989						
ANR	671025	Symbol	mem		670989						
ANR	671026	Symbol	* iodev		670989						
ANR	671027	Symbol	iodev -> state		670989						
ANR	671028	Function	romfs_open_file	267:0:9175:10710							
ANR	671029	FunctionDef	"romfs_open_file (gx_io_device * iodev , const char * fname , uint namelen , const char * access , stream * * ps , gs_memory_t * mem)"		671028	0					
ANR	671030	CompoundStatement		270:0:9311:10710	671028	0					
ANR	671031	Statement	extern	271:4:9317:9322	671028	0	True				
ANR	671032	IdentifierDeclStatement	const uint32_t * gs_romfs [ ] ;	271:11:9324:9350	671028	1	True				
ANR	671033	IdentifierDecl	* gs_romfs [ ]		671028	0					
ANR	671034	IdentifierDeclType	const uint32_t * [ ]		671028	0					
ANR	671035	Identifier	gs_romfs		671028	1					
ANR	671036	IdentifierDeclStatement	int code ;	272:4:9356:9364	671028	2	True				
ANR	671037	IdentifierDecl	code		671028	0					
ANR	671038	IdentifierDeclType	int		671028	0					
ANR	671039	Identifier	code		671028	1					
ANR	671040	IdentifierDeclStatement	"const uint32_t * node_scan = gs_romfs [ 0 ] , * node = NULL ;"	273:4:9370:9423	671028	3	True				
ANR	671041	IdentifierDecl	* node_scan = gs_romfs [ 0 ]		671028	0					
ANR	671042	IdentifierDeclType	const uint32_t *		671028	0					
ANR	671043	Identifier	node_scan		671028	1					
ANR	671044	AssignmentExpression	* node_scan = gs_romfs [ 0 ]		671028	2		=			
ANR	671045	Identifier	node_scan		671028	0					
ANR	671046	ArrayIndexing	gs_romfs [ 0 ]		671028	1					
ANR	671047	Identifier	gs_romfs		671028	0					
ANR	671048	PrimaryExpression	0		671028	1					
ANR	671049	IdentifierDecl	* node = NULL		671028	1					
ANR	671050	IdentifierDeclType	const uint32_t *		671028	0					
ANR	671051	Identifier	node		671028	1					
ANR	671052	AssignmentExpression	* node = NULL		671028	2		=			
ANR	671053	Identifier	NULL		671028	0					
ANR	671054	Identifier	NULL		671028	1					
ANR	671055	IdentifierDeclStatement	"uint32_t filelen , blocks ;"	274:4:9429:9453	671028	4	True				
ANR	671056	IdentifierDecl	filelen		671028	0					
ANR	671057	IdentifierDeclType	uint32_t		671028	0					
ANR	671058	Identifier	filelen		671028	1					
ANR	671059	IdentifierDecl	blocks		671028	1					
ANR	671060	IdentifierDeclType	uint32_t		671028	0					
ANR	671061	Identifier	blocks		671028	1					
ANR	671062	IdentifierDeclStatement	int i ;	275:4:9459:9464	671028	5	True				
ANR	671063	IdentifierDecl	i		671028	0					
ANR	671064	IdentifierDeclType	int		671028	0					
ANR	671065	Identifier	i		671028	1					
ANR	671066	IdentifierDeclStatement	char * filename ;	276:4:9470:9484	671028	6	True				
ANR	671067	IdentifierDecl	* filename		671028	0					
ANR	671068	IdentifierDeclType	char *		671028	0					
ANR	671069	Identifier	filename		671028	1					
ANR	671070	IdentifierDeclStatement	"char fmode [ 4 ] = ""\\000\\000\\000\\000"" ;"	277:4:9490:9524	671028	7	True				
ANR	671071	IdentifierDecl	"fmode [ 4 ] = ""\\000\\000\\000\\000"""		671028	0					
ANR	671072	IdentifierDeclType	char [ 4 ]		671028	0					
ANR	671073	Identifier	fmode		671028	1					
ANR	671074	PrimaryExpression	4		671028	2					
ANR	671075	AssignmentExpression	"fmode [ 4 ] = ""\\000\\000\\000\\000"""		671028	3		=			
ANR	671076	Identifier	fmode		671028	0					
ANR	671077	PrimaryExpression	"""\\000\\000\\000\\000"""		671028	1					
ANR	671078	ExpressionStatement	* ps = NULL	280:4:9573:9583	671028	8	True				
ANR	671079	AssignmentExpression	* ps = NULL		671028	0		=			
ANR	671080	UnaryOperationExpression	* ps		671028	0					
ANR	671081	UnaryOperator	*		671028	0					
ANR	671082	Identifier	ps		671028	1					
ANR	671083	Identifier	NULL		671028	1					
ANR	671084	ForStatement	"for ( i = 0 ; node_scan != 0 ; i ++ , node_scan = gs_romfs [ i ] )"		671028	9					
ANR	671085	ForInit	i = 0 ;	283:9:9648:9651	671028	0	True				
ANR	671086	AssignmentExpression	i = 0		671028	0		=			
ANR	671087	Identifier	i		671028	0					
ANR	671088	PrimaryExpression	0		671028	1					
ANR	671089	Condition	node_scan != 0	283:14:9653:9666	671028	1	True				
ANR	671090	EqualityExpression	node_scan != 0		671028	0		!=			
ANR	671091	Identifier	node_scan		671028	0					
ANR	671092	PrimaryExpression	0		671028	1					
ANR	671093	Expression	"i ++ , node_scan = gs_romfs [ i ]"	283:30:9669:9696	671028	2	True				
ANR	671094	PostIncDecOperationExpression	i ++		671028	0					
ANR	671095	Identifier	i		671028	0					
ANR	671096	IncDec	++		671028	1					
ANR	671097	AssignmentExpression	node_scan = gs_romfs [ i ]		671028	1		=			
ANR	671098	Identifier	node_scan		671028	0					
ANR	671099	ArrayIndexing	gs_romfs [ i ]		671028	1					
ANR	671100	Identifier	gs_romfs		671028	0					
ANR	671101	Identifier	i		671028	1					
ANR	671102	CompoundStatement		14:60:387:387	671028	3					
ANR	671103	ExpressionStatement	filelen = get_u32_big_endian ( node_scan ) & 0x7fffffff	284:8:9709:9761	671028	0	True				
ANR	671104	AssignmentExpression	filelen = get_u32_big_endian ( node_scan ) & 0x7fffffff		671028	0		=			
ANR	671105	Identifier	filelen		671028	0					
ANR	671106	BitAndExpression	get_u32_big_endian ( node_scan ) & 0x7fffffff		671028	1		&			
ANR	671107	CallExpression	get_u32_big_endian ( node_scan )		671028	0					
ANR	671108	Callee	get_u32_big_endian		671028	0					
ANR	671109	Identifier	get_u32_big_endian		671028	0					
ANR	671110	ArgumentList	node_scan		671028	1					
ANR	671111	Argument	node_scan		671028	0					
ANR	671112	Identifier	node_scan		671028	0					
ANR	671113	PrimaryExpression	0x7fffffff		671028	1					
ANR	671114	ExpressionStatement	blocks = ( filelen + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE	285:8:9800:9853	671028	1	True				
ANR	671115	AssignmentExpression	blocks = ( filelen + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		671028	0		=			
ANR	671116	Identifier	blocks		671028	0					
ANR	671117	MultiplicativeExpression	( filelen + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		671028	1		/			
ANR	671118	AdditiveExpression	filelen + ROMFS_BLOCKSIZE - 1		671028	0		+			
ANR	671119	Identifier	filelen		671028	0					
ANR	671120	AdditiveExpression	ROMFS_BLOCKSIZE - 1		671028	1		-			
ANR	671121	Identifier	ROMFS_BLOCKSIZE		671028	0					
ANR	671122	PrimaryExpression	1		671028	1					
ANR	671123	Identifier	ROMFS_BLOCKSIZE		671028	1					
ANR	671124	ExpressionStatement	filename = ( char * ) ( & ( node_scan [ 1 + ( 2 * blocks ) ] ) )	286:8:9863:9910	671028	2	True				
ANR	671125	AssignmentExpression	filename = ( char * ) ( & ( node_scan [ 1 + ( 2 * blocks ) ] ) )		671028	0		=			
ANR	671126	Identifier	filename		671028	0					
ANR	671127	CastExpression	( char * ) ( & ( node_scan [ 1 + ( 2 * blocks ) ] ) )		671028	1					
ANR	671128	CastTarget	char *		671028	0					
ANR	671129	UnaryOperationExpression	& ( node_scan [ 1 + ( 2 * blocks ) ] )		671028	1					
ANR	671130	UnaryOperator	&		671028	0					
ANR	671131	ArrayIndexing	node_scan [ 1 + ( 2 * blocks ) ]		671028	1					
ANR	671132	Identifier	node_scan		671028	0					
ANR	671133	AdditiveExpression	1 + ( 2 * blocks )		671028	1		+			
ANR	671134	PrimaryExpression	1		671028	0					
ANR	671135	MultiplicativeExpression	2 * blocks		671028	1		*			
ANR	671136	PrimaryExpression	2		671028	0					
ANR	671137	Identifier	blocks		671028	1					
ANR	671138	IfStatement	"if ( ( namelen == strlen ( filename ) ) && ( strncmp ( filename , fname , namelen ) == 0 ) )"		671028	3					
ANR	671139	Condition	"( namelen == strlen ( filename ) ) && ( strncmp ( filename , fname , namelen ) == 0 )"	287:12:9924:10008	671028	0	True				
ANR	671140	AndExpression	"( namelen == strlen ( filename ) ) && ( strncmp ( filename , fname , namelen ) == 0 )"		671028	0		&&			
ANR	671141	EqualityExpression	namelen == strlen ( filename )		671028	0		==			
ANR	671142	Identifier	namelen		671028	0					
ANR	671143	CallExpression	strlen ( filename )		671028	1					
ANR	671144	Callee	strlen		671028	0					
ANR	671145	Identifier	strlen		671028	0					
ANR	671146	ArgumentList	filename		671028	1					
ANR	671147	Argument	filename		671028	0					
ANR	671148	Identifier	filename		671028	0					
ANR	671149	EqualityExpression	"strncmp ( filename , fname , namelen ) == 0"		671028	1		==			
ANR	671150	CallExpression	"strncmp ( filename , fname , namelen )"		671028	0					
ANR	671151	Callee	strncmp		671028	0					
ANR	671152	Identifier	strncmp		671028	0					
ANR	671153	ArgumentList	filename		671028	1					
ANR	671154	Argument	filename		671028	0					
ANR	671155	Identifier	filename		671028	0					
ANR	671156	Argument	fname		671028	1					
ANR	671157	Identifier	fname		671028	0					
ANR	671158	Argument	namelen		671028	2					
ANR	671159	Identifier	namelen		671028	0					
ANR	671160	PrimaryExpression	0		671028	1					
ANR	671161	CompoundStatement		19:54:699:699	671028	1					
ANR	671162	ExpressionStatement	node = node_scan	289:12:10025:10041	671028	0	True				
ANR	671163	AssignmentExpression	node = node_scan		671028	0		=			
ANR	671164	Identifier	node		671028	0					
ANR	671165	Identifier	node_scan		671028	1					
ANR	671166	BreakStatement	break ;	290:12:10055:10060	671028	1	True				
ANR	671167	IfStatement	if ( node == NULL )		671028	10					
ANR	671168	Condition	node == NULL	294:8:10143:10154	671028	0	True				
ANR	671169	EqualityExpression	node == NULL		671028	0		==			
ANR	671170	Identifier	node		671028	0					
ANR	671171	Identifier	NULL		671028	1					
ANR	671172	ExpressionStatement	return_error ( gs_error_undefinedfilename )	295:8:10165:10205	671028	1	True				
ANR	671173	CallExpression	return_error ( gs_error_undefinedfilename )		671028	0					
ANR	671174	Callee	return_error		671028	0					
ANR	671175	Identifier	return_error		671028	0					
ANR	671176	ArgumentList	gs_error_undefinedfilename		671028	1					
ANR	671177	Argument	gs_error_undefinedfilename		671028	0					
ANR	671178	Identifier	gs_error_undefinedfilename		671028	0					
ANR	671179	ExpressionStatement	"code = file_prepare_stream ( fname , namelen , access , ROMFS_BLOCKSIZE + 256 , ps , fmode , mem )"	301:4:10487:10574	671028	11	True				
ANR	671180	AssignmentExpression	"code = file_prepare_stream ( fname , namelen , access , ROMFS_BLOCKSIZE + 256 , ps , fmode , mem )"		671028	0		=			
ANR	671181	Identifier	code		671028	0					
ANR	671182	CallExpression	"file_prepare_stream ( fname , namelen , access , ROMFS_BLOCKSIZE + 256 , ps , fmode , mem )"		671028	1					
ANR	671183	Callee	file_prepare_stream		671028	0					
ANR	671184	Identifier	file_prepare_stream		671028	0					
ANR	671185	ArgumentList	fname		671028	1					
ANR	671186	Argument	fname		671028	0					
ANR	671187	Identifier	fname		671028	0					
ANR	671188	Argument	namelen		671028	1					
ANR	671189	Identifier	namelen		671028	0					
ANR	671190	Argument	access		671028	2					
ANR	671191	Identifier	access		671028	0					
ANR	671192	Argument	ROMFS_BLOCKSIZE + 256		671028	3					
ANR	671193	AdditiveExpression	ROMFS_BLOCKSIZE + 256		671028	0		+			
ANR	671194	Identifier	ROMFS_BLOCKSIZE		671028	0					
ANR	671195	PrimaryExpression	256		671028	1					
ANR	671196	Argument	ps		671028	4					
ANR	671197	Identifier	ps		671028	0					
ANR	671198	Argument	fmode		671028	5					
ANR	671199	Identifier	fmode		671028	0					
ANR	671200	Argument	mem		671028	6					
ANR	671201	Identifier	mem		671028	0					
ANR	671202	IfStatement	if ( code < 0 )		671028	12					
ANR	671203	Condition	code < 0	302:8:10584:10591	671028	0	True				
ANR	671204	RelationalExpression	code < 0		671028	0		<			
ANR	671205	Identifier	code		671028	0					
ANR	671206	PrimaryExpression	0		671028	1					
ANR	671207	ReturnStatement	return code ;	303:8:10602:10613	671028	1	True				
ANR	671208	Identifier	code		671028	0					
ANR	671209	ExpressionStatement	"sread_block ( * ps , ( * ps ) -> cbuf , ( * ps ) -> cbsize , node )"	304:4:10619:10669	671028	13	True				
ANR	671210	CallExpression	"sread_block ( * ps , ( * ps ) -> cbuf , ( * ps ) -> cbsize , node )"		671028	0					
ANR	671211	Callee	sread_block		671028	0					
ANR	671212	Identifier	sread_block		671028	0					
ANR	671213	ArgumentList	* ps		671028	1					
ANR	671214	Argument	* ps		671028	0					
ANR	671215	UnaryOperationExpression	* ps		671028	0					
ANR	671216	UnaryOperator	*		671028	0					
ANR	671217	Identifier	ps		671028	1					
ANR	671218	Argument	( * ps ) -> cbuf		671028	1					
ANR	671219	PtrMemberAccess	( * ps ) -> cbuf		671028	0					
ANR	671220	UnaryOperationExpression	* ps		671028	0					
ANR	671221	UnaryOperator	*		671028	0					
ANR	671222	Identifier	ps		671028	1					
ANR	671223	Identifier	cbuf		671028	1					
ANR	671224	Argument	( * ps ) -> cbsize		671028	2					
ANR	671225	PtrMemberAccess	( * ps ) -> cbsize		671028	0					
ANR	671226	UnaryOperationExpression	* ps		671028	0					
ANR	671227	UnaryOperator	*		671028	0					
ANR	671228	Identifier	ps		671028	1					
ANR	671229	Identifier	cbsize		671028	1					
ANR	671230	Argument	node		671028	3					
ANR	671231	Identifier	node		671028	0					
ANR	671232	ReturnStatement	return 0 ;	306:4:10700:10708	671028	14	True				
ANR	671233	PrimaryExpression	0		671028	0					
ANR	671234	ReturnType	static int		671028	1					
ANR	671235	Identifier	romfs_open_file		671028	2					
ANR	671236	ParameterList	"gx_io_device * iodev , const char * fname , uint namelen , const char * access , stream * * ps , gs_memory_t * mem"		671028	3					
ANR	671237	Parameter	gx_io_device * iodev	268:16:9202:9220	671028	0	True				
ANR	671238	ParameterType	gx_io_device *		671028	0					
ANR	671239	Identifier	iodev		671028	1					
ANR	671240	Parameter	const char * fname	268:37:9223:9239	671028	1	True				
ANR	671241	ParameterType	const char *		671028	0					
ANR	671242	Identifier	fname		671028	1					
ANR	671243	Parameter	uint namelen	268:56:9242:9253	671028	2	True				
ANR	671244	ParameterType	uint		671028	0					
ANR	671245	Identifier	namelen		671028	1					
ANR	671246	Parameter	const char * access	269:4:9260:9277	671028	3	True				
ANR	671247	ParameterType	const char *		671028	0					
ANR	671248	Identifier	access		671028	1					
ANR	671249	Parameter	stream * * ps	269:24:9280:9290	671028	4	True				
ANR	671250	ParameterType	stream * *		671028	0					
ANR	671251	Identifier	ps		671028	1					
ANR	671252	Parameter	gs_memory_t * mem	269:37:9293:9308	671028	5	True				
ANR	671253	ParameterType	gs_memory_t *		671028	0					
ANR	671254	Identifier	mem		671028	1					
ANR	671255	CFGEntryNode	ENTRY		671028		True				
ANR	671256	CFGExitNode	EXIT		671028		True				
ANR	671257	Symbol	access		671028						
ANR	671258	Symbol	ps		671028						
ANR	671259	Symbol	code		671028						
ANR	671260	Symbol	namelen		671028						
ANR	671261	Symbol	filelen		671028						
ANR	671262	Symbol	strncmp		671028						
ANR	671263	Symbol	strlen		671028						
ANR	671264	Symbol	file_prepare_stream		671028						
ANR	671265	Symbol	iodev		671028						
ANR	671266	Symbol	mem		671028						
ANR	671267	Symbol	gs_romfs		671028						
ANR	671268	Symbol	node_scan		671028						
ANR	671269	Symbol	fmode		671028						
ANR	671270	Symbol	get_u32_big_endian		671028						
ANR	671271	Symbol	fname		671028						
ANR	671272	Symbol	NULL		671028						
ANR	671273	Symbol	( * ps ) -> cbsize		671028						
ANR	671274	Symbol	blocks		671028						
ANR	671275	Symbol	i		671028						
ANR	671276	Symbol	( * ps ) -> cbuf		671028						
ANR	671277	Symbol	* ps		671028						
ANR	671278	Symbol	gs_error_undefinedfilename		671028						
ANR	671279	Symbol	* * ps		671028						
ANR	671280	Symbol	ROMFS_BLOCKSIZE		671028						
ANR	671281	Symbol	node		671028						
ANR	671282	Symbol	filename		671028						
ANR	671283	Symbol	* i		671028						
ANR	671284	Symbol	* gs_romfs		671028						
ANR	671285	Function	romfs_file_status	309:0:10713:12177							
ANR	671286	FunctionDef	"romfs_file_status (gx_io_device * iodev , const char * fname , struct stat * pstat)"		671285	0					
ANR	671287	CompoundStatement		311:0:10803:12177	671285	0					
ANR	671288	Statement	extern	312:4:10809:10814	671285	0	True				
ANR	671289	IdentifierDeclStatement	const uint32_t * gs_romfs [ ] ;	312:11:10816:10842	671285	1	True				
ANR	671290	IdentifierDecl	* gs_romfs [ ]		671285	0					
ANR	671291	IdentifierDeclType	const uint32_t * [ ]		671285	0					
ANR	671292	Identifier	gs_romfs		671285	1					
ANR	671293	Statement	extern	313:4:10848:10853	671285	2	True				
ANR	671294	IdentifierDeclStatement	const time_t gs_romfs_buildtime ;	313:11:10855:10886	671285	3	True				
ANR	671295	IdentifierDecl	gs_romfs_buildtime		671285	0					
ANR	671296	IdentifierDeclType	const time_t		671285	0					
ANR	671297	Identifier	gs_romfs_buildtime		671285	1					
ANR	671298	IdentifierDeclStatement	"const uint32_t * node_scan = gs_romfs [ 0 ] , * node = NULL ;"	314:4:10892:10945	671285	4	True				
ANR	671299	IdentifierDecl	* node_scan = gs_romfs [ 0 ]		671285	0					
ANR	671300	IdentifierDeclType	const uint32_t *		671285	0					
ANR	671301	Identifier	node_scan		671285	1					
ANR	671302	AssignmentExpression	* node_scan = gs_romfs [ 0 ]		671285	2		=			
ANR	671303	Identifier	node_scan		671285	0					
ANR	671304	ArrayIndexing	gs_romfs [ 0 ]		671285	1					
ANR	671305	Identifier	gs_romfs		671285	0					
ANR	671306	PrimaryExpression	0		671285	1					
ANR	671307	IdentifierDecl	* node = NULL		671285	1					
ANR	671308	IdentifierDeclType	const uint32_t *		671285	0					
ANR	671309	Identifier	node		671285	1					
ANR	671310	AssignmentExpression	* node = NULL		671285	2		=			
ANR	671311	Identifier	NULL		671285	0					
ANR	671312	Identifier	NULL		671285	1					
ANR	671313	IdentifierDeclStatement	"uint32_t filelen , blocks ;"	315:4:10951:10975	671285	5	True				
ANR	671314	IdentifierDecl	filelen		671285	0					
ANR	671315	IdentifierDeclType	uint32_t		671285	0					
ANR	671316	Identifier	filelen		671285	1					
ANR	671317	IdentifierDecl	blocks		671285	1					
ANR	671318	IdentifierDeclType	uint32_t		671285	0					
ANR	671319	Identifier	blocks		671285	1					
ANR	671320	IdentifierDeclStatement	int i ;	316:4:10981:10986	671285	6	True				
ANR	671321	IdentifierDecl	i		671285	0					
ANR	671322	IdentifierDeclType	int		671285	0					
ANR	671323	Identifier	i		671285	1					
ANR	671324	IdentifierDeclStatement	char * filename ;	317:4:10992:11006	671285	7	True				
ANR	671325	IdentifierDecl	* filename		671285	0					
ANR	671326	IdentifierDeclType	char *		671285	0					
ANR	671327	Identifier	filename		671285	1					
ANR	671328	IdentifierDeclStatement	uint namelen = strlen ( fname ) ;	318:4:11012:11040	671285	8	True				
ANR	671329	IdentifierDecl	namelen = strlen ( fname )		671285	0					
ANR	671330	IdentifierDeclType	uint		671285	0					
ANR	671331	Identifier	namelen		671285	1					
ANR	671332	AssignmentExpression	namelen = strlen ( fname )		671285	2		=			
ANR	671333	Identifier	namelen		671285	0					
ANR	671334	CallExpression	strlen ( fname )		671285	1					
ANR	671335	Callee	strlen		671285	0					
ANR	671336	Identifier	strlen		671285	0					
ANR	671337	ArgumentList	fname		671285	1					
ANR	671338	Argument	fname		671285	0					
ANR	671339	Identifier	fname		671285	0					
ANR	671340	IfStatement	if ( gs_romfs_buildtime == ( time_t ) 0 )		671285	9					
ANR	671341	Condition	gs_romfs_buildtime == ( time_t ) 0	324:8:11238:11268	671285	0	True				
ANR	671342	EqualityExpression	gs_romfs_buildtime == ( time_t ) 0		671285	0		==			
ANR	671343	Identifier	gs_romfs_buildtime		671285	0					
ANR	671344	CastExpression	( time_t ) 0		671285	1					
ANR	671345	CastTarget	time_t		671285	0					
ANR	671346	PrimaryExpression	0		671285	1					
ANR	671347	CompoundStatement		14:41:467:467	671285	1					
ANR	671348	ExpressionStatement	return_error ( gs_error_unregistered )	325:8:11281:11316	671285	0	True				
ANR	671349	CallExpression	return_error ( gs_error_unregistered )		671285	0					
ANR	671350	Callee	return_error		671285	0					
ANR	671351	Identifier	return_error		671285	0					
ANR	671352	ArgumentList	gs_error_unregistered		671285	1					
ANR	671353	Argument	gs_error_unregistered		671285	0					
ANR	671354	Identifier	gs_error_unregistered		671285	0					
ANR	671355	ExpressionStatement	"memset ( pstat , 0 , sizeof ( struct stat ) )"	328:4:11329:11366	671285	10	True				
ANR	671356	CallExpression	"memset ( pstat , 0 , sizeof ( struct stat ) )"		671285	0					
ANR	671357	Callee	memset		671285	0					
ANR	671358	Identifier	memset		671285	0					
ANR	671359	ArgumentList	pstat		671285	1					
ANR	671360	Argument	pstat		671285	0					
ANR	671361	Identifier	pstat		671285	0					
ANR	671362	Argument	0		671285	1					
ANR	671363	PrimaryExpression	0		671285	0					
ANR	671364	Argument	sizeof ( struct stat )		671285	2					
ANR	671365	SizeofExpression	sizeof ( struct stat )		671285	0					
ANR	671366	Sizeof	sizeof		671285	0					
ANR	671367	SizeofOperand	struct stat		671285	1					
ANR	671368	ForStatement	"for ( i = 0 ; node_scan != 0 ; i ++ , node_scan = gs_romfs [ i ] )"		671285	11					
ANR	671369	ForInit	i = 0 ;	330:9:11430:11433	671285	0	True				
ANR	671370	AssignmentExpression	i = 0		671285	0		=			
ANR	671371	Identifier	i		671285	0					
ANR	671372	PrimaryExpression	0		671285	1					
ANR	671373	Condition	node_scan != 0	330:14:11435:11448	671285	1	True				
ANR	671374	EqualityExpression	node_scan != 0		671285	0		!=			
ANR	671375	Identifier	node_scan		671285	0					
ANR	671376	PrimaryExpression	0		671285	1					
ANR	671377	Expression	"i ++ , node_scan = gs_romfs [ i ]"	330:30:11451:11478	671285	2	True				
ANR	671378	PostIncDecOperationExpression	i ++		671285	0					
ANR	671379	Identifier	i		671285	0					
ANR	671380	IncDec	++		671285	1					
ANR	671381	AssignmentExpression	node_scan = gs_romfs [ i ]		671285	1		=			
ANR	671382	Identifier	node_scan		671285	0					
ANR	671383	ArrayIndexing	gs_romfs [ i ]		671285	1					
ANR	671384	Identifier	gs_romfs		671285	0					
ANR	671385	Identifier	i		671285	1					
ANR	671386	CompoundStatement		20:60:677:677	671285	3					
ANR	671387	ExpressionStatement	filelen = get_u32_big_endian ( node_scan ) & 0x7fffffff	331:8:11491:11543	671285	0	True				
ANR	671388	AssignmentExpression	filelen = get_u32_big_endian ( node_scan ) & 0x7fffffff		671285	0		=			
ANR	671389	Identifier	filelen		671285	0					
ANR	671390	BitAndExpression	get_u32_big_endian ( node_scan ) & 0x7fffffff		671285	1		&			
ANR	671391	CallExpression	get_u32_big_endian ( node_scan )		671285	0					
ANR	671392	Callee	get_u32_big_endian		671285	0					
ANR	671393	Identifier	get_u32_big_endian		671285	0					
ANR	671394	ArgumentList	node_scan		671285	1					
ANR	671395	Argument	node_scan		671285	0					
ANR	671396	Identifier	node_scan		671285	0					
ANR	671397	PrimaryExpression	0x7fffffff		671285	1					
ANR	671398	ExpressionStatement	blocks = ( filelen + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE	332:8:11582:11635	671285	1	True				
ANR	671399	AssignmentExpression	blocks = ( filelen + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		671285	0		=			
ANR	671400	Identifier	blocks		671285	0					
ANR	671401	MultiplicativeExpression	( filelen + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		671285	1		/			
ANR	671402	AdditiveExpression	filelen + ROMFS_BLOCKSIZE - 1		671285	0		+			
ANR	671403	Identifier	filelen		671285	0					
ANR	671404	AdditiveExpression	ROMFS_BLOCKSIZE - 1		671285	1		-			
ANR	671405	Identifier	ROMFS_BLOCKSIZE		671285	0					
ANR	671406	PrimaryExpression	1		671285	1					
ANR	671407	Identifier	ROMFS_BLOCKSIZE		671285	1					
ANR	671408	ExpressionStatement	filename = ( char * ) ( & ( node_scan [ 1 + ( 2 * blocks ) ] ) )	333:8:11645:11692	671285	2	True				
ANR	671409	AssignmentExpression	filename = ( char * ) ( & ( node_scan [ 1 + ( 2 * blocks ) ] ) )		671285	0		=			
ANR	671410	Identifier	filename		671285	0					
ANR	671411	CastExpression	( char * ) ( & ( node_scan [ 1 + ( 2 * blocks ) ] ) )		671285	1					
ANR	671412	CastTarget	char *		671285	0					
ANR	671413	UnaryOperationExpression	& ( node_scan [ 1 + ( 2 * blocks ) ] )		671285	1					
ANR	671414	UnaryOperator	&		671285	0					
ANR	671415	ArrayIndexing	node_scan [ 1 + ( 2 * blocks ) ]		671285	1					
ANR	671416	Identifier	node_scan		671285	0					
ANR	671417	AdditiveExpression	1 + ( 2 * blocks )		671285	1		+			
ANR	671418	PrimaryExpression	1		671285	0					
ANR	671419	MultiplicativeExpression	2 * blocks		671285	1		*			
ANR	671420	PrimaryExpression	2		671285	0					
ANR	671421	Identifier	blocks		671285	1					
ANR	671422	IfStatement	"if ( ( namelen == strlen ( filename ) ) && ( strncmp ( filename , fname , namelen ) == 0 ) )"		671285	3					
ANR	671423	Condition	"( namelen == strlen ( filename ) ) && ( strncmp ( filename , fname , namelen ) == 0 )"	334:12:11706:11790	671285	0	True				
ANR	671424	AndExpression	"( namelen == strlen ( filename ) ) && ( strncmp ( filename , fname , namelen ) == 0 )"		671285	0		&&			
ANR	671425	EqualityExpression	namelen == strlen ( filename )		671285	0		==			
ANR	671426	Identifier	namelen		671285	0					
ANR	671427	CallExpression	strlen ( filename )		671285	1					
ANR	671428	Callee	strlen		671285	0					
ANR	671429	Identifier	strlen		671285	0					
ANR	671430	ArgumentList	filename		671285	1					
ANR	671431	Argument	filename		671285	0					
ANR	671432	Identifier	filename		671285	0					
ANR	671433	EqualityExpression	"strncmp ( filename , fname , namelen ) == 0"		671285	1		==			
ANR	671434	CallExpression	"strncmp ( filename , fname , namelen )"		671285	0					
ANR	671435	Callee	strncmp		671285	0					
ANR	671436	Identifier	strncmp		671285	0					
ANR	671437	ArgumentList	filename		671285	1					
ANR	671438	Argument	filename		671285	0					
ANR	671439	Identifier	filename		671285	0					
ANR	671440	Argument	fname		671285	1					
ANR	671441	Identifier	fname		671285	0					
ANR	671442	Argument	namelen		671285	2					
ANR	671443	Identifier	namelen		671285	0					
ANR	671444	PrimaryExpression	0		671285	1					
ANR	671445	CompoundStatement		25:54:989:989	671285	1					
ANR	671446	ExpressionStatement	node = node_scan	336:12:11807:11823	671285	0	True				
ANR	671447	AssignmentExpression	node = node_scan		671285	0		=			
ANR	671448	Identifier	node		671285	0					
ANR	671449	Identifier	node_scan		671285	1					
ANR	671450	BreakStatement	break ;	337:12:11837:11842	671285	1	True				
ANR	671451	IfStatement	if ( node == NULL )		671285	12					
ANR	671452	Condition	node == NULL	341:8:11925:11936	671285	0	True				
ANR	671453	EqualityExpression	node == NULL		671285	0		==			
ANR	671454	Identifier	node		671285	0					
ANR	671455	Identifier	NULL		671285	1					
ANR	671456	ExpressionStatement	return_error ( gs_error_undefinedfilename )	342:8:11947:11987	671285	1	True				
ANR	671457	CallExpression	return_error ( gs_error_undefinedfilename )		671285	0					
ANR	671458	Callee	return_error		671285	0					
ANR	671459	Identifier	return_error		671285	0					
ANR	671460	ArgumentList	gs_error_undefinedfilename		671285	1					
ANR	671461	Argument	gs_error_undefinedfilename		671285	0					
ANR	671462	Identifier	gs_error_undefinedfilename		671285	0					
ANR	671463	ExpressionStatement	pstat -> st_size = filelen	345:4:12039:12063	671285	13	True				
ANR	671464	AssignmentExpression	pstat -> st_size = filelen		671285	0		=			
ANR	671465	PtrMemberAccess	pstat -> st_size		671285	0					
ANR	671466	Identifier	pstat		671285	0					
ANR	671467	Identifier	st_size		671285	1					
ANR	671468	Identifier	filelen		671285	1					
ANR	671469	ExpressionStatement	pstat -> st_mtime = gs_romfs_buildtime	346:4:12069:12105	671285	14	True				
ANR	671470	AssignmentExpression	pstat -> st_mtime = gs_romfs_buildtime		671285	0		=			
ANR	671471	PtrMemberAccess	pstat -> st_mtime		671285	0					
ANR	671472	Identifier	pstat		671285	0					
ANR	671473	Identifier	st_mtime		671285	1					
ANR	671474	Identifier	gs_romfs_buildtime		671285	1					
ANR	671475	ExpressionStatement	pstat -> st_ctime = gs_romfs_buildtime	347:4:12111:12147	671285	15	True				
ANR	671476	AssignmentExpression	pstat -> st_ctime = gs_romfs_buildtime		671285	0		=			
ANR	671477	PtrMemberAccess	pstat -> st_ctime		671285	0					
ANR	671478	Identifier	pstat		671285	0					
ANR	671479	Identifier	st_ctime		671285	1					
ANR	671480	Identifier	gs_romfs_buildtime		671285	1					
ANR	671481	ReturnStatement	return 0 ;	348:4:12153:12161	671285	16	True				
ANR	671482	PrimaryExpression	0		671285	0					
ANR	671483	ReturnType	static int		671285	1					
ANR	671484	Identifier	romfs_file_status		671285	2					
ANR	671485	ParameterList	"gx_io_device * iodev , const char * fname , struct stat * pstat"		671285	3					
ANR	671486	Parameter	gx_io_device * iodev	310:18:10742:10761	671285	0	True				
ANR	671487	ParameterType	gx_io_device *		671285	0					
ANR	671488	Identifier	iodev		671285	1					
ANR	671489	Parameter	const char * fname	310:40:10764:10780	671285	1	True				
ANR	671490	ParameterType	const char *		671285	0					
ANR	671491	Identifier	fname		671285	1					
ANR	671492	Parameter	struct stat * pstat	310:59:10783:10800	671285	2	True				
ANR	671493	ParameterType	struct stat *		671285	0					
ANR	671494	Identifier	pstat		671285	1					
ANR	671495	CFGEntryNode	ENTRY		671285		True				
ANR	671496	CFGExitNode	EXIT		671285		True				
ANR	671497	Symbol	pstat -> st_size		671285						
ANR	671498	Symbol	gs_error_unregistered		671285						
ANR	671499	Symbol	namelen		671285						
ANR	671500	Symbol	* pstat		671285						
ANR	671501	Symbol	filelen		671285						
ANR	671502	Symbol	strlen		671285						
ANR	671503	Symbol	strncmp		671285						
ANR	671504	Symbol	iodev		671285						
ANR	671505	Symbol	gs_romfs		671285						
ANR	671506	Symbol	node_scan		671285						
ANR	671507	Symbol	gs_romfs_buildtime		671285						
ANR	671508	Symbol	get_u32_big_endian		671285						
ANR	671509	Symbol	fname		671285						
ANR	671510	Symbol	NULL		671285						
ANR	671511	Symbol	pstat		671285						
ANR	671512	Symbol	blocks		671285						
ANR	671513	Symbol	i		671285						
ANR	671514	Symbol	gs_error_undefinedfilename		671285						
ANR	671515	Symbol	pstat -> st_ctime		671285						
ANR	671516	Symbol	ROMFS_BLOCKSIZE		671285						
ANR	671517	Symbol	node		671285						
ANR	671518	Symbol	filename		671285						
ANR	671519	Symbol	* i		671285						
ANR	671520	Symbol	* gs_romfs		671285						
ANR	671521	Symbol	pstat -> st_mtime		671285						
ANR	671522	Function	romfs_enumerate_files_init	351:0:12180:13033							
ANR	671523	FunctionDef	"romfs_enumerate_files_init (gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * mem)"		671522	0					
ANR	671524	CompoundStatement		354:0:12308:13033	671522	0					
ANR	671525	IdentifierDeclStatement	"romfs_file_enum * penum = gs_alloc_struct ( mem , romfs_file_enum , & st_romfs_file_enum , ""romfs_enumerate_files_init(file_enum)"" ) ;"	355:4:12314:12494	671522	0	True				
ANR	671526	IdentifierDecl	"* penum = gs_alloc_struct ( mem , romfs_file_enum , & st_romfs_file_enum , ""romfs_enumerate_files_init(file_enum)"" )"		671522	0					
ANR	671527	IdentifierDeclType	romfs_file_enum *		671522	0					
ANR	671528	Identifier	penum		671522	1					
ANR	671529	AssignmentExpression	"* penum = gs_alloc_struct ( mem , romfs_file_enum , & st_romfs_file_enum , ""romfs_enumerate_files_init(file_enum)"" )"		671522	2		=			
ANR	671530	Identifier	penum		671522	0					
ANR	671531	CallExpression	"gs_alloc_struct ( mem , romfs_file_enum , & st_romfs_file_enum , ""romfs_enumerate_files_init(file_enum)"" )"		671522	1					
ANR	671532	Callee	gs_alloc_struct		671522	0					
ANR	671533	Identifier	gs_alloc_struct		671522	0					
ANR	671534	ArgumentList	mem		671522	1					
ANR	671535	Argument	mem		671522	0					
ANR	671536	Identifier	mem		671522	0					
ANR	671537	Argument	romfs_file_enum		671522	1					
ANR	671538	Identifier	romfs_file_enum		671522	0					
ANR	671539	Argument	& st_romfs_file_enum		671522	2					
ANR	671540	UnaryOperationExpression	& st_romfs_file_enum		671522	0					
ANR	671541	UnaryOperator	&		671522	0					
ANR	671542	Identifier	st_romfs_file_enum		671522	1					
ANR	671543	Argument	"""romfs_enumerate_files_init(file_enum)"""		671522	3					
ANR	671544	PrimaryExpression	"""romfs_enumerate_files_init(file_enum)"""		671522	0					
ANR	671545	IfStatement	if ( penum == NULL )		671522	1					
ANR	671546	Condition	penum == NULL	357:8:12504:12516	671522	0	True				
ANR	671547	EqualityExpression	penum == NULL		671522	0		==			
ANR	671548	Identifier	penum		671522	0					
ANR	671549	Identifier	NULL		671522	1					
ANR	671550	ReturnStatement	return NULL ;	358:8:12527:12538	671522	1	True				
ANR	671551	Identifier	NULL		671522	0					
ANR	671552	ExpressionStatement	"memset ( penum , 0 , sizeof ( romfs_file_enum ) )"	359:4:12544:12585	671522	2	True				
ANR	671553	CallExpression	"memset ( penum , 0 , sizeof ( romfs_file_enum ) )"		671522	0					
ANR	671554	Callee	memset		671522	0					
ANR	671555	Identifier	memset		671522	0					
ANR	671556	ArgumentList	penum		671522	1					
ANR	671557	Argument	penum		671522	0					
ANR	671558	Identifier	penum		671522	0					
ANR	671559	Argument	0		671522	1					
ANR	671560	PrimaryExpression	0		671522	0					
ANR	671561	Argument	sizeof ( romfs_file_enum )		671522	2					
ANR	671562	SizeofExpression	sizeof ( romfs_file_enum )		671522	0					
ANR	671563	Sizeof	sizeof		671522	0					
ANR	671564	SizeofOperand	romfs_file_enum		671522	1					
ANR	671565	ExpressionStatement	"penum -> pattern = ( char * ) gs_alloc_bytes ( mem , patlen + 1 , ""romfs_enumerate_file_init(pattern)"" )"	360:4:12591:12683	671522	3	True				
ANR	671566	AssignmentExpression	"penum -> pattern = ( char * ) gs_alloc_bytes ( mem , patlen + 1 , ""romfs_enumerate_file_init(pattern)"" )"		671522	0		=			
ANR	671567	PtrMemberAccess	penum -> pattern		671522	0					
ANR	671568	Identifier	penum		671522	0					
ANR	671569	Identifier	pattern		671522	1					
ANR	671570	CastExpression	"( char * ) gs_alloc_bytes ( mem , patlen + 1 , ""romfs_enumerate_file_init(pattern)"" )"		671522	1					
ANR	671571	CastTarget	char *		671522	0					
ANR	671572	CallExpression	"gs_alloc_bytes ( mem , patlen + 1 , ""romfs_enumerate_file_init(pattern)"" )"		671522	1					
ANR	671573	Callee	gs_alloc_bytes		671522	0					
ANR	671574	Identifier	gs_alloc_bytes		671522	0					
ANR	671575	ArgumentList	mem		671522	1					
ANR	671576	Argument	mem		671522	0					
ANR	671577	Identifier	mem		671522	0					
ANR	671578	Argument	patlen + 1		671522	1					
ANR	671579	AdditiveExpression	patlen + 1		671522	0		+			
ANR	671580	Identifier	patlen		671522	0					
ANR	671581	PrimaryExpression	1		671522	1					
ANR	671582	Argument	"""romfs_enumerate_file_init(pattern)"""		671522	2					
ANR	671583	PrimaryExpression	"""romfs_enumerate_file_init(pattern)"""		671522	0					
ANR	671584	ExpressionStatement	penum -> list_index = 0	361:4:12689:12710	671522	4	True				
ANR	671585	AssignmentExpression	penum -> list_index = 0		671522	0		=			
ANR	671586	PtrMemberAccess	penum -> list_index		671522	0					
ANR	671587	Identifier	penum		671522	0					
ANR	671588	Identifier	list_index		671522	1					
ANR	671589	PrimaryExpression	0		671522	1					
ANR	671590	ExpressionStatement	penum -> memory = mem	362:4:12743:12762	671522	5	True				
ANR	671591	AssignmentExpression	penum -> memory = mem		671522	0		=			
ANR	671592	PtrMemberAccess	penum -> memory		671522	0					
ANR	671593	Identifier	penum		671522	0					
ANR	671594	Identifier	memory		671522	1					
ANR	671595	Identifier	mem		671522	1					
ANR	671596	IfStatement	if ( penum -> pattern == NULL )		671522	6					
ANR	671597	Condition	penum -> pattern == NULL	363:8:12772:12793	671522	0	True				
ANR	671598	EqualityExpression	penum -> pattern == NULL		671522	0		==			
ANR	671599	PtrMemberAccess	penum -> pattern		671522	0					
ANR	671600	Identifier	penum		671522	0					
ANR	671601	Identifier	pattern		671522	1					
ANR	671602	Identifier	NULL		671522	1					
ANR	671603	CompoundStatement		10:32:487:487	671522	1					
ANR	671604	ExpressionStatement	romfs_enumerate_close ( ( file_enum * ) penum )	364:8:12806:12848	671522	0	True				
ANR	671605	CallExpression	romfs_enumerate_close ( ( file_enum * ) penum )		671522	0					
ANR	671606	Callee	romfs_enumerate_close		671522	0					
ANR	671607	Identifier	romfs_enumerate_close		671522	0					
ANR	671608	ArgumentList	( file_enum * ) penum		671522	1					
ANR	671609	Argument	( file_enum * ) penum		671522	0					
ANR	671610	CastExpression	( file_enum * ) penum		671522	0					
ANR	671611	CastTarget	file_enum *		671522	0					
ANR	671612	Identifier	penum		671522	1					
ANR	671613	ReturnStatement	return NULL ;	365:8:12858:12869	671522	1	True				
ANR	671614	Identifier	NULL		671522	0					
ANR	671615	ExpressionStatement	"memcpy ( penum -> pattern , pat , patlen )"	367:4:12881:12916	671522	7	True				
ANR	671616	CallExpression	"memcpy ( penum -> pattern , pat , patlen )"		671522	0					
ANR	671617	Callee	memcpy		671522	0					
ANR	671618	Identifier	memcpy		671522	0					
ANR	671619	ArgumentList	penum -> pattern		671522	1					
ANR	671620	Argument	penum -> pattern		671522	0					
ANR	671621	PtrMemberAccess	penum -> pattern		671522	0					
ANR	671622	Identifier	penum		671522	0					
ANR	671623	Identifier	pattern		671522	1					
ANR	671624	Argument	pat		671522	1					
ANR	671625	Identifier	pat		671522	0					
ANR	671626	Argument	patlen		671522	2					
ANR	671627	Identifier	patlen		671522	0					
ANR	671628	ExpressionStatement	penum -> pattern [ patlen ] = 0	368:4:12950:12974	671522	8	True				
ANR	671629	AssignmentExpression	penum -> pattern [ patlen ] = 0		671522	0		=			
ANR	671630	ArrayIndexing	penum -> pattern [ patlen ]		671522	0					
ANR	671631	PtrMemberAccess	penum -> pattern		671522	0					
ANR	671632	Identifier	penum		671522	0					
ANR	671633	Identifier	pattern		671522	1					
ANR	671634	Identifier	patlen		671522	1					
ANR	671635	PrimaryExpression	0		671522	1					
ANR	671636	ReturnStatement	return ( file_enum * ) penum ;	370:4:13006:13031	671522	9	True				
ANR	671637	CastExpression	( file_enum * ) penum		671522	0					
ANR	671638	CastTarget	file_enum *		671522	0					
ANR	671639	Identifier	penum		671522	1					
ANR	671640	ReturnType	static file_enum *		671522	1					
ANR	671641	Identifier	romfs_enumerate_files_init		671522	2					
ANR	671642	ParameterList	"gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * mem"		671522	3					
ANR	671643	Parameter	gx_io_device * iodev	352:27:12226:12244	671522	0	True				
ANR	671644	ParameterType	gx_io_device *		671522	0					
ANR	671645	Identifier	iodev		671522	1					
ANR	671646	Parameter	const char * pat	352:48:12247:12261	671522	1	True				
ANR	671647	ParameterType	const char *		671522	0					
ANR	671648	Identifier	pat		671522	1					
ANR	671649	Parameter	uint patlen	352:65:12264:12274	671522	2	True				
ANR	671650	ParameterType	uint		671522	0					
ANR	671651	Identifier	patlen		671522	1					
ANR	671652	Parameter	gs_memory_t * mem	353:13:12290:12305	671522	3	True				
ANR	671653	ParameterType	gs_memory_t *		671522	0					
ANR	671654	Identifier	mem		671522	1					
ANR	671655	CFGEntryNode	ENTRY		671522		True				
ANR	671656	CFGExitNode	EXIT		671522		True				
ANR	671657	Symbol	* penum		671522						
ANR	671658	Symbol	pat		671522						
ANR	671659	Symbol	gs_alloc_bytes		671522						
ANR	671660	Symbol	NULL		671522						
ANR	671661	Symbol	penum -> memory		671522						
ANR	671662	Symbol	gs_alloc_struct		671522						
ANR	671663	Symbol	penum		671522						
ANR	671664	Symbol	* penum -> pattern		671522						
ANR	671665	Symbol	* patlen		671522						
ANR	671666	Symbol	romfs_file_enum		671522						
ANR	671667	Symbol	iodev		671522						
ANR	671668	Symbol	mem		671522						
ANR	671669	Symbol	penum -> pattern		671522						
ANR	671670	Symbol	penum -> list_index		671522						
ANR	671671	Symbol	& st_romfs_file_enum		671522						
ANR	671672	Symbol	patlen		671522						
ANR	671673	Symbol	* * penum		671522						
ANR	671674	Function	romfs_enumerate_close	373:0:13036:13342							
ANR	671675	FunctionDef	romfs_enumerate_close (file_enum * pfen)		671674	0					
ANR	671676	CompoundStatement		375:0:13087:13342	671674	0					
ANR	671677	IdentifierDeclStatement	romfs_file_enum * penum = ( romfs_file_enum * ) pfen ;	376:4:13093:13141	671674	0	True				
ANR	671678	IdentifierDecl	* penum = ( romfs_file_enum * ) pfen		671674	0					
ANR	671679	IdentifierDeclType	romfs_file_enum *		671674	0					
ANR	671680	Identifier	penum		671674	1					
ANR	671681	AssignmentExpression	* penum = ( romfs_file_enum * ) pfen		671674	2		=			
ANR	671682	Identifier	penum		671674	0					
ANR	671683	CastExpression	( romfs_file_enum * ) pfen		671674	1					
ANR	671684	CastTarget	romfs_file_enum *		671674	0					
ANR	671685	Identifier	pfen		671674	1					
ANR	671686	IdentifierDeclStatement	gs_memory_t * mem = penum -> memory ;	377:4:13147:13179	671674	1	True				
ANR	671687	IdentifierDecl	* mem = penum -> memory		671674	0					
ANR	671688	IdentifierDeclType	gs_memory_t *		671674	0					
ANR	671689	Identifier	mem		671674	1					
ANR	671690	AssignmentExpression	* mem = penum -> memory		671674	2		=			
ANR	671691	Identifier	mem		671674	0					
ANR	671692	PtrMemberAccess	penum -> memory		671674	1					
ANR	671693	Identifier	penum		671674	0					
ANR	671694	Identifier	memory		671674	1					
ANR	671695	IfStatement	if ( penum -> pattern )		671674	2					
ANR	671696	Condition	penum -> pattern	379:8:13190:13203	671674	0	True				
ANR	671697	PtrMemberAccess	penum -> pattern		671674	0					
ANR	671698	Identifier	penum		671674	0					
ANR	671699	Identifier	pattern		671674	1					
ANR	671700	ExpressionStatement	"gs_free_object ( mem , penum -> pattern , ""romfs_enum_init(pattern)"" )"	380:8:13214:13277	671674	1	True				
ANR	671701	CallExpression	"gs_free_object ( mem , penum -> pattern , ""romfs_enum_init(pattern)"" )"		671674	0					
ANR	671702	Callee	gs_free_object		671674	0					
ANR	671703	Identifier	gs_free_object		671674	0					
ANR	671704	ArgumentList	mem		671674	1					
ANR	671705	Argument	mem		671674	0					
ANR	671706	Identifier	mem		671674	0					
ANR	671707	Argument	penum -> pattern		671674	1					
ANR	671708	PtrMemberAccess	penum -> pattern		671674	0					
ANR	671709	Identifier	penum		671674	0					
ANR	671710	Identifier	pattern		671674	1					
ANR	671711	Argument	"""romfs_enum_init(pattern)"""		671674	2					
ANR	671712	PrimaryExpression	"""romfs_enum_init(pattern)"""		671674	0					
ANR	671713	ExpressionStatement	"gs_free_object ( mem , penum , ""romfs_enum_init(romfs_enum)"" )"	381:4:13283:13340	671674	3	True				
ANR	671714	CallExpression	"gs_free_object ( mem , penum , ""romfs_enum_init(romfs_enum)"" )"		671674	0					
ANR	671715	Callee	gs_free_object		671674	0					
ANR	671716	Identifier	gs_free_object		671674	0					
ANR	671717	ArgumentList	mem		671674	1					
ANR	671718	Argument	mem		671674	0					
ANR	671719	Identifier	mem		671674	0					
ANR	671720	Argument	penum		671674	1					
ANR	671721	Identifier	penum		671674	0					
ANR	671722	Argument	"""romfs_enum_init(romfs_enum)"""		671674	2					
ANR	671723	PrimaryExpression	"""romfs_enum_init(romfs_enum)"""		671674	0					
ANR	671724	ReturnType	static void		671674	1					
ANR	671725	Identifier	romfs_enumerate_close		671674	2					
ANR	671726	ParameterList	file_enum * pfen		671674	3					
ANR	671727	Parameter	file_enum * pfen	374:22:13070:13084	671674	0	True				
ANR	671728	ParameterType	file_enum *		671674	0					
ANR	671729	Identifier	pfen		671674	1					
ANR	671730	CFGEntryNode	ENTRY		671674		True				
ANR	671731	CFGExitNode	EXIT		671674		True				
ANR	671732	Symbol	* penum		671674						
ANR	671733	Symbol	penum -> memory		671674						
ANR	671734	Symbol	mem		671674						
ANR	671735	Symbol	penum -> pattern		671674						
ANR	671736	Symbol	penum		671674						
ANR	671737	Symbol	pfen		671674						
ANR	671738	Function	romfs_enumerate_next	384:0:13345:14380							
ANR	671739	FunctionDef	"romfs_enumerate_next (file_enum * pfen , char * ptr , uint maxlen)"		671738	0					
ANR	671740	CompoundStatement		386:0:13419:14380	671738	0					
ANR	671741	Statement	extern	387:4:13425:13430	671738	0	True				
ANR	671742	IdentifierDeclStatement	const uint32_t * gs_romfs [ ] ;	387:11:13432:13458	671738	1	True				
ANR	671743	IdentifierDecl	* gs_romfs [ ]		671738	0					
ANR	671744	IdentifierDeclType	const uint32_t * [ ]		671738	0					
ANR	671745	Identifier	gs_romfs		671738	1					
ANR	671746	IdentifierDeclStatement	romfs_file_enum * penum = ( romfs_file_enum * ) pfen ;	388:4:13464:13512	671738	2	True				
ANR	671747	IdentifierDecl	* penum = ( romfs_file_enum * ) pfen		671738	0					
ANR	671748	IdentifierDeclType	romfs_file_enum *		671738	0					
ANR	671749	Identifier	penum		671738	1					
ANR	671750	AssignmentExpression	* penum = ( romfs_file_enum * ) pfen		671738	2		=			
ANR	671751	Identifier	penum		671738	0					
ANR	671752	CastExpression	( romfs_file_enum * ) pfen		671738	1					
ANR	671753	CastTarget	romfs_file_enum *		671738	0					
ANR	671754	Identifier	pfen		671738	1					
ANR	671755	WhileStatement	while ( gs_romfs [ penum -> list_index ] != 0 )		671738	3					
ANR	671756	Condition	gs_romfs [ penum -> list_index ] != 0	390:11:13526:13557	671738	0	True				
ANR	671757	EqualityExpression	gs_romfs [ penum -> list_index ] != 0		671738	0		!=			
ANR	671758	ArrayIndexing	gs_romfs [ penum -> list_index ]		671738	0					
ANR	671759	Identifier	gs_romfs		671738	0					
ANR	671760	PtrMemberAccess	penum -> list_index		671738	1					
ANR	671761	Identifier	penum		671738	0					
ANR	671762	Identifier	list_index		671738	1					
ANR	671763	PrimaryExpression	0		671738	1					
ANR	671764	CompoundStatement		9:8:377:425	671738	1					
ANR	671765	IdentifierDeclStatement	const uint32_t * node = gs_romfs [ penum -> list_index ] ;	391:8:13570:13620	671738	0	True				
ANR	671766	IdentifierDecl	* node = gs_romfs [ penum -> list_index ]		671738	0					
ANR	671767	IdentifierDeclType	const uint32_t *		671738	0					
ANR	671768	Identifier	node		671738	1					
ANR	671769	AssignmentExpression	* node = gs_romfs [ penum -> list_index ]		671738	2		=			
ANR	671770	Identifier	node		671738	0					
ANR	671771	ArrayIndexing	gs_romfs [ penum -> list_index ]		671738	1					
ANR	671772	Identifier	gs_romfs		671738	0					
ANR	671773	PtrMemberAccess	penum -> list_index		671738	1					
ANR	671774	Identifier	penum		671738	0					
ANR	671775	Identifier	list_index		671738	1					
ANR	671776	IdentifierDeclStatement	uint32_t filelen = get_u32_big_endian ( node ) & 0x7fffffff ;	392:8:13630:13686	671738	1	True				
ANR	671777	IdentifierDecl	filelen = get_u32_big_endian ( node ) & 0x7fffffff		671738	0					
ANR	671778	IdentifierDeclType	uint32_t		671738	0					
ANR	671779	Identifier	filelen		671738	1					
ANR	671780	AssignmentExpression	filelen = get_u32_big_endian ( node ) & 0x7fffffff		671738	2		=			
ANR	671781	Identifier	filelen		671738	0					
ANR	671782	BitAndExpression	get_u32_big_endian ( node ) & 0x7fffffff		671738	1		&			
ANR	671783	CallExpression	get_u32_big_endian ( node )		671738	0					
ANR	671784	Callee	get_u32_big_endian		671738	0					
ANR	671785	Identifier	get_u32_big_endian		671738	0					
ANR	671786	ArgumentList	node		671738	1					
ANR	671787	Argument	node		671738	0					
ANR	671788	Identifier	node		671738	0					
ANR	671789	PrimaryExpression	0x7fffffff		671738	1					
ANR	671790	IdentifierDeclStatement	uint32_t blocks = ( filelen + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE ;	393:8:13725:13787	671738	2	True				
ANR	671791	IdentifierDecl	blocks = ( filelen + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		671738	0					
ANR	671792	IdentifierDeclType	uint32_t		671738	0					
ANR	671793	Identifier	blocks		671738	1					
ANR	671794	AssignmentExpression	blocks = ( filelen + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		671738	2		=			
ANR	671795	Identifier	blocks		671738	0					
ANR	671796	MultiplicativeExpression	( filelen + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		671738	1		/			
ANR	671797	AdditiveExpression	filelen + ROMFS_BLOCKSIZE - 1		671738	0		+			
ANR	671798	Identifier	filelen		671738	0					
ANR	671799	AdditiveExpression	ROMFS_BLOCKSIZE - 1		671738	1		-			
ANR	671800	Identifier	ROMFS_BLOCKSIZE		671738	0					
ANR	671801	PrimaryExpression	1		671738	1					
ANR	671802	Identifier	ROMFS_BLOCKSIZE		671738	1					
ANR	671803	IdentifierDeclStatement	char * filename = ( char * ) ( & ( node [ 1 + ( 2 * blocks ) ] ) ) ;	394:8:13797:13845	671738	3	True				
ANR	671804	IdentifierDecl	* filename = ( char * ) ( & ( node [ 1 + ( 2 * blocks ) ] ) )		671738	0					
ANR	671805	IdentifierDeclType	char *		671738	0					
ANR	671806	Identifier	filename		671738	1					
ANR	671807	AssignmentExpression	* filename = ( char * ) ( & ( node [ 1 + ( 2 * blocks ) ] ) )		671738	2		=			
ANR	671808	Identifier	filename		671738	0					
ANR	671809	CastExpression	( char * ) ( & ( node [ 1 + ( 2 * blocks ) ] ) )		671738	1					
ANR	671810	CastTarget	char *		671738	0					
ANR	671811	UnaryOperationExpression	& ( node [ 1 + ( 2 * blocks ) ] )		671738	1					
ANR	671812	UnaryOperator	&		671738	0					
ANR	671813	ArrayIndexing	node [ 1 + ( 2 * blocks ) ]		671738	1					
ANR	671814	Identifier	node		671738	0					
ANR	671815	AdditiveExpression	1 + ( 2 * blocks )		671738	1		+			
ANR	671816	PrimaryExpression	1		671738	0					
ANR	671817	MultiplicativeExpression	2 * blocks		671738	1		*			
ANR	671818	PrimaryExpression	2		671738	0					
ANR	671819	Identifier	blocks		671738	1					
ANR	671820	ExpressionStatement	penum -> list_index ++	396:8:13856:13875	671738	4	True				
ANR	671821	PostIncDecOperationExpression	penum -> list_index ++		671738	0					
ANR	671822	PtrMemberAccess	penum -> list_index		671738	0					
ANR	671823	Identifier	penum		671738	0					
ANR	671824	Identifier	list_index		671738	1					
ANR	671825	IncDec	++		671738	1					
ANR	671826	IfStatement	"if ( string_match ( ( byte * ) filename , strlen ( filename ) , ( byte * ) penum -> pattern , strlen ( penum -> pattern ) , 0 ) )"		671738	5					
ANR	671827	Condition	"string_match ( ( byte * ) filename , strlen ( filename ) , ( byte * ) penum -> pattern , strlen ( penum -> pattern ) , 0 )"	397:12:13925:14073	671738	0	True				
ANR	671828	CallExpression	"string_match ( ( byte * ) filename , strlen ( filename ) , ( byte * ) penum -> pattern , strlen ( penum -> pattern ) , 0 )"		671738	0					
ANR	671829	Callee	string_match		671738	0					
ANR	671830	Identifier	string_match		671738	0					
ANR	671831	ArgumentList	( byte * ) filename		671738	1					
ANR	671832	Argument	( byte * ) filename		671738	0					
ANR	671833	CastExpression	( byte * ) filename		671738	0					
ANR	671834	CastTarget	byte *		671738	0					
ANR	671835	Identifier	filename		671738	1					
ANR	671836	Argument	strlen ( filename )		671738	1					
ANR	671837	CallExpression	strlen ( filename )		671738	0					
ANR	671838	Callee	strlen		671738	0					
ANR	671839	Identifier	strlen		671738	0					
ANR	671840	ArgumentList	filename		671738	1					
ANR	671841	Argument	filename		671738	0					
ANR	671842	Identifier	filename		671738	0					
ANR	671843	Argument	( byte * ) penum -> pattern		671738	2					
ANR	671844	CastExpression	( byte * ) penum -> pattern		671738	0					
ANR	671845	CastTarget	byte *		671738	0					
ANR	671846	PtrMemberAccess	penum -> pattern		671738	1					
ANR	671847	Identifier	penum		671738	0					
ANR	671848	Identifier	pattern		671738	1					
ANR	671849	Argument	strlen ( penum -> pattern )		671738	3					
ANR	671850	CallExpression	strlen ( penum -> pattern )		671738	0					
ANR	671851	Callee	strlen		671738	0					
ANR	671852	Identifier	strlen		671738	0					
ANR	671853	ArgumentList	penum -> pattern		671738	1					
ANR	671854	Argument	penum -> pattern		671738	0					
ANR	671855	PtrMemberAccess	penum -> pattern		671738	0					
ANR	671856	Identifier	penum		671738	0					
ANR	671857	Identifier	pattern		671738	1					
ANR	671858	Argument	0		671738	4					
ANR	671859	PrimaryExpression	0		671738	0					
ANR	671860	CompoundStatement		14:53:656:656	671738	1					
ANR	671861	IfStatement	if ( strlen ( filename ) < maxlen )		671738	0					
ANR	671862	Condition	strlen ( filename ) < maxlen	400:16:14094:14118	671738	0	True				
ANR	671863	RelationalExpression	strlen ( filename ) < maxlen		671738	0		<			
ANR	671864	CallExpression	strlen ( filename )		671738	0					
ANR	671865	Callee	strlen		671738	0					
ANR	671866	Identifier	strlen		671738	0					
ANR	671867	ArgumentList	filename		671738	1					
ANR	671868	Argument	filename		671738	0					
ANR	671869	Identifier	filename		671738	0					
ANR	671870	Identifier	maxlen		671738	1					
ANR	671871	ExpressionStatement	"memcpy ( ptr , filename , strlen ( filename ) )"	401:16:14137:14176	671738	1	True				
ANR	671872	CallExpression	"memcpy ( ptr , filename , strlen ( filename ) )"		671738	0					
ANR	671873	Callee	memcpy		671738	0					
ANR	671874	Identifier	memcpy		671738	0					
ANR	671875	ArgumentList	ptr		671738	1					
ANR	671876	Argument	ptr		671738	0					
ANR	671877	Identifier	ptr		671738	0					
ANR	671878	Argument	filename		671738	1					
ANR	671879	Identifier	filename		671738	0					
ANR	671880	Argument	strlen ( filename )		671738	2					
ANR	671881	CallExpression	strlen ( filename )		671738	0					
ANR	671882	Callee	strlen		671738	0					
ANR	671883	Identifier	strlen		671738	0					
ANR	671884	ArgumentList	filename		671738	1					
ANR	671885	Argument	filename		671738	0					
ANR	671886	Identifier	filename		671738	0					
ANR	671887	ReturnStatement	return strlen ( filename ) ;	402:12:14190:14213	671738	1	True				
ANR	671888	CallExpression	strlen ( filename )		671738	0					
ANR	671889	Callee	strlen		671738	0					
ANR	671890	Identifier	strlen		671738	0					
ANR	671891	ArgumentList	filename		671738	1					
ANR	671892	Argument	filename		671738	0					
ANR	671893	Identifier	filename		671738	0					
ANR	671894	ExpressionStatement	romfs_enumerate_close ( pfen )	406:4:14330:14357	671738	4	True				
ANR	671895	CallExpression	romfs_enumerate_close ( pfen )		671738	0					
ANR	671896	Callee	romfs_enumerate_close		671738	0					
ANR	671897	Identifier	romfs_enumerate_close		671738	0					
ANR	671898	ArgumentList	pfen		671738	1					
ANR	671899	Argument	pfen		671738	0					
ANR	671900	Identifier	pfen		671738	0					
ANR	671901	ReturnStatement	return ~ ( uint ) 0 ;	407:4:14363:14378	671738	5	True				
ANR	671902	UnaryOperationExpression	~ ( uint ) 0		671738	0					
ANR	671903	UnaryOperator	~		671738	0					
ANR	671904	CastExpression	( uint ) 0		671738	1					
ANR	671905	CastTarget	uint		671738	0					
ANR	671906	PrimaryExpression	0		671738	1					
ANR	671907	ReturnType	static uint		671738	1					
ANR	671908	Identifier	romfs_enumerate_next		671738	2					
ANR	671909	ParameterList	"file_enum * pfen , char * ptr , uint maxlen"		671738	3					
ANR	671910	Parameter	file_enum * pfen	385:21:13378:13392	671738	0	True				
ANR	671911	ParameterType	file_enum *		671738	0					
ANR	671912	Identifier	pfen		671738	1					
ANR	671913	Parameter	char * ptr	385:38:13395:13403	671738	1	True				
ANR	671914	ParameterType	char *		671738	0					
ANR	671915	Identifier	ptr		671738	1					
ANR	671916	Parameter	uint maxlen	385:49:13406:13416	671738	2	True				
ANR	671917	ParameterType	uint		671738	0					
ANR	671918	Identifier	maxlen		671738	1					
ANR	671919	CFGEntryNode	ENTRY		671738		True				
ANR	671920	CFGExitNode	EXIT		671738		True				
ANR	671921	Symbol	* penum		671738						
ANR	671922	Symbol	blocks		671738						
ANR	671923	Symbol	* penum -> list_index		671738						
ANR	671924	Symbol	penum		671738						
ANR	671925	Symbol	pfen		671738						
ANR	671926	Symbol	ptr		671738						
ANR	671927	Symbol	ROMFS_BLOCKSIZE		671738						
ANR	671928	Symbol	filelen		671738						
ANR	671929	Symbol	node		671738						
ANR	671930	Symbol	strlen		671738						
ANR	671931	Symbol	filename		671738						
ANR	671932	Symbol	penum -> pattern		671738						
ANR	671933	Symbol	gs_romfs		671738						
ANR	671934	Symbol	string_match		671738						
ANR	671935	Symbol	* gs_romfs		671738						
ANR	671936	Symbol	penum -> list_index		671738						
ANR	671937	Symbol	get_u32_big_endian		671738						
ANR	671938	Symbol	maxlen		671738						
ANR	671939	Symbol	* * penum		671738						
