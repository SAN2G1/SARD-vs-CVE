command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9723502	File	data/converged/CVE-2018-16863_ghostpdl/testcups.c								
ANR	9723503	DeclStmt									
ANR	9723504	Decl							int	"int ( cups_dest_t * a , cups_dest_t * b )"	dests_equal
ANR	9723505	DeclStmt									
ANR	9723506	Decl							int	"int ( void * user_data , unsigned flags , cups_dest_t * dest )"	enum_cb
ANR	9723507	DeclStmt									
ANR	9723508	Decl							void	"void ( cups_dest_t * a , cups_dest_t * b )"	show_diffs
ANR	9723509	Function	main	47:0:1157:11218							
ANR	9723510	FunctionDef	"main (int argc , char * argv [ ])"		9723509	0					
ANR	9723511	CompoundStatement		50:0:1303:11218	9723509	0					
ANR	9723512	IdentifierDeclStatement	"int status = 0 , i , num_dests ;"	51:2:1307:1379	9723509	0	True				
ANR	9723513	IdentifierDecl	status = 0		9723509	0					
ANR	9723514	IdentifierDeclType	int		9723509	0					
ANR	9723515	Identifier	status		9723509	1					
ANR	9723516	AssignmentExpression	status = 0		9723509	2		=			
ANR	9723517	Identifier	status		9723509	0					
ANR	9723518	PrimaryExpression	0		9723509	1					
ANR	9723519	IdentifierDecl	i		9723509	1					
ANR	9723520	IdentifierDeclType	int		9723509	0					
ANR	9723521	Identifier	i		9723509	1					
ANR	9723522	IdentifierDecl	num_dests		9723509	2					
ANR	9723523	IdentifierDeclType	int		9723509	0					
ANR	9723524	Identifier	num_dests		9723509	1					
ANR	9723525	IdentifierDeclStatement	"cups_dest_t * dests , * dest , * named_dest ;"	54:2:1413:1504	9723509	1	True				
ANR	9723526	IdentifierDecl	* dests		9723509	0					
ANR	9723527	IdentifierDeclType	cups_dest_t *		9723509	0					
ANR	9723528	Identifier	dests		9723509	1					
ANR	9723529	IdentifierDecl	* dest		9723509	1					
ANR	9723530	IdentifierDeclType	cups_dest_t *		9723509	0					
ANR	9723531	Identifier	dest		9723509	1					
ANR	9723532	IdentifierDecl	* named_dest		9723509	2					
ANR	9723533	IdentifierDeclType	cups_dest_t *		9723509	0					
ANR	9723534	Identifier	named_dest		9723509	1					
ANR	9723535	IdentifierDeclStatement	const char * ppdfile ;	57:2:1541:1560	9723509	2	True				
ANR	9723536	IdentifierDecl	* ppdfile		9723509	0					
ANR	9723537	IdentifierDeclType	const char *		9723509	0					
ANR	9723538	Identifier	ppdfile		9723509	1					
ANR	9723539	IdentifierDeclStatement	ppd_file_t * ppd ;	58:2:1580:1595	9723509	3	True				
ANR	9723540	IdentifierDecl	* ppd		9723509	0					
ANR	9723541	IdentifierDeclType	ppd_file_t *		9723509	0					
ANR	9723542	Identifier	ppd		9723509	1					
ANR	9723543	IdentifierDeclStatement	int num_jobs ;	59:2:1621:1634	9723509	4	True				
ANR	9723544	IdentifierDecl	num_jobs		9723509	0					
ANR	9723545	IdentifierDeclType	int		9723509	0					
ANR	9723546	Identifier	num_jobs		9723509	1					
ANR	9723547	IdentifierDeclStatement	cups_job_t * jobs ;	60:2:1670:1686	9723509	5	True				
ANR	9723548	IdentifierDecl	* jobs		9723509	0					
ANR	9723549	IdentifierDeclType	cups_job_t *		9723509	0					
ANR	9723550	Identifier	jobs		9723509	1					
ANR	9723551	IfStatement	if ( argc > 1 )		9723509	6					
ANR	9723552	Condition	argc > 1	63:6:1719:1726	9723509	0	True				
ANR	9723553	RelationalExpression	argc > 1		9723509	0		>			
ANR	9723554	Identifier	argc		9723509	0					
ANR	9723555	PrimaryExpression	1		9723509	1					
ANR	9723556	CompoundStatement		15:2:427:427	9723509	1					
ANR	9723557	IfStatement	"if ( ! strcmp ( argv [ 1 ] , ""enum"" ) )"		9723509	0					
ANR	9723558	Condition	"! strcmp ( argv [ 1 ] , ""enum"" )"	65:8:1741:1764	9723509	0	True				
ANR	9723559	UnaryOperationExpression	"! strcmp ( argv [ 1 ] , ""enum"" )"		9723509	0					
ANR	9723560	UnaryOperator	!		9723509	0					
ANR	9723561	CallExpression	"strcmp ( argv [ 1 ] , ""enum"" )"		9723509	1					
ANR	9723562	Callee	strcmp		9723509	0					
ANR	9723563	Identifier	strcmp		9723509	0					
ANR	9723564	ArgumentList	argv [ 1 ]		9723509	1					
ANR	9723565	Argument	argv [ 1 ]		9723509	0					
ANR	9723566	ArrayIndexing	argv [ 1 ]		9723509	0					
ANR	9723567	Identifier	argv		9723509	0					
ANR	9723568	PrimaryExpression	1		9723509	1					
ANR	9723569	Argument	"""enum"""		9723509	1					
ANR	9723570	PrimaryExpression	"""enum"""		9723509	0					
ANR	9723571	CompoundStatement		22:6:604:617	9723509	1					
ANR	9723572	IdentifierDeclStatement	"cups_ptype_t mask = CUPS_PRINTER_LOCAL , type = CUPS_PRINTER_LOCAL ;"	67:6:1779:1876	9723509	0	True				
ANR	9723573	IdentifierDecl	mask = CUPS_PRINTER_LOCAL		9723509	0					
ANR	9723574	IdentifierDeclType	cups_ptype_t		9723509	0					
ANR	9723575	Identifier	mask		9723509	1					
ANR	9723576	AssignmentExpression	mask = CUPS_PRINTER_LOCAL		9723509	2		=			
ANR	9723577	Identifier	CUPS_PRINTER_LOCAL		9723509	0					
ANR	9723578	Identifier	CUPS_PRINTER_LOCAL		9723509	1					
ANR	9723579	IdentifierDecl	type = CUPS_PRINTER_LOCAL		9723509	1					
ANR	9723580	IdentifierDeclType	cups_ptype_t		9723509	0					
ANR	9723581	Identifier	type		9723509	1					
ANR	9723582	AssignmentExpression	type = CUPS_PRINTER_LOCAL		9723509	2		=			
ANR	9723583	Identifier	CUPS_PRINTER_LOCAL		9723509	0					
ANR	9723584	Identifier	CUPS_PRINTER_LOCAL		9723509	1					
ANR	9723585	IdentifierDeclStatement	int msec = 0 ;	71:6:1908:1921	9723509	1	True				
ANR	9723586	IdentifierDecl	msec = 0		9723509	0					
ANR	9723587	IdentifierDeclType	int		9723509	0					
ANR	9723588	Identifier	msec		9723509	1					
ANR	9723589	AssignmentExpression	msec = 0		9723509	2		=			
ANR	9723590	Identifier	msec		9723509	0					
ANR	9723591	PrimaryExpression	0		9723509	1					
ANR	9723592	ForStatement	for ( i = 2 ; i < argc ; i ++ )		9723509	2					
ANR	9723593	ForInit	i = 2 ;	74:11:1966:1971	9723509	0	True				
ANR	9723594	AssignmentExpression	i = 2		9723509	0		=			
ANR	9723595	Identifier	i		9723509	0					
ANR	9723596	PrimaryExpression	2		9723509	1					
ANR	9723597	Condition	i < argc	74:18:1973:1980	9723509	1	True				
ANR	9723598	RelationalExpression	i < argc		9723509	0		<			
ANR	9723599	Identifier	i		9723509	0					
ANR	9723600	Identifier	argc		9723509	1					
ANR	9723601	PostIncDecOperationExpression	i ++	74:28:1983:1986	9723509	2	True				
ANR	9723602	Identifier	i		9723509	0					
ANR	9723603	IncDec	++		9723509	1					
ANR	9723604	IfStatement	if ( isdigit ( argv [ i ] [ 0 ] & 255 ) || argv [ i ] [ 0 ] == '.' )		9723509	3					
ANR	9723605	Condition	isdigit ( argv [ i ] [ 0 ] & 255 ) || argv [ i ] [ 0 ] == '.'	75:12:2001:2046	9723509	0	True				
ANR	9723606	OrExpression	isdigit ( argv [ i ] [ 0 ] & 255 ) || argv [ i ] [ 0 ] == '.'		9723509	0		||			
ANR	9723607	CallExpression	isdigit ( argv [ i ] [ 0 ] & 255 )		9723509	0					
ANR	9723608	Callee	isdigit		9723509	0					
ANR	9723609	Identifier	isdigit		9723509	0					
ANR	9723610	ArgumentList	argv [ i ] [ 0 ] & 255		9723509	1					
ANR	9723611	Argument	argv [ i ] [ 0 ] & 255		9723509	0					
ANR	9723612	BitAndExpression	argv [ i ] [ 0 ] & 255		9723509	0		&			
ANR	9723613	ArrayIndexing	argv [ i ] [ 0 ]		9723509	0					
ANR	9723614	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723615	Identifier	argv		9723509	0					
ANR	9723616	Identifier	i		9723509	1					
ANR	9723617	PrimaryExpression	0		9723509	1					
ANR	9723618	PrimaryExpression	255		9723509	1					
ANR	9723619	EqualityExpression	argv [ i ] [ 0 ] == '.'		9723509	1		==			
ANR	9723620	ArrayIndexing	argv [ i ] [ 0 ]		9723509	0					
ANR	9723621	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723622	Identifier	argv		9723509	0					
ANR	9723623	Identifier	i		9723509	1					
ANR	9723624	PrimaryExpression	0		9723509	1					
ANR	9723625	PrimaryExpression	'.'		9723509	1					
ANR	9723626	ExpressionStatement	msec = ( int ) ( atof ( argv [ i ] ) * 1000 )	76:10:2059:2093	9723509	1	True				
ANR	9723627	AssignmentExpression	msec = ( int ) ( atof ( argv [ i ] ) * 1000 )		9723509	0		=			
ANR	9723628	Identifier	msec		9723509	0					
ANR	9723629	CastExpression	( int ) ( atof ( argv [ i ] ) * 1000 )		9723509	1					
ANR	9723630	CastTarget	int		9723509	0					
ANR	9723631	MultiplicativeExpression	atof ( argv [ i ] ) * 1000		9723509	1		*			
ANR	9723632	CallExpression	atof ( argv [ i ] )		9723509	0					
ANR	9723633	Callee	atof		9723509	0					
ANR	9723634	Identifier	atof		9723509	0					
ANR	9723635	ArgumentList	argv [ i ]		9723509	1					
ANR	9723636	Argument	argv [ i ]		9723509	0					
ANR	9723637	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723638	Identifier	argv		9723509	0					
ANR	9723639	Identifier	i		9723509	1					
ANR	9723640	PrimaryExpression	1000		9723509	1					
ANR	9723641	ElseStatement	else		9723509	0					
ANR	9723642	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""bw"" ) )"		9723509	0					
ANR	9723643	Condition	"! _cups_strcasecmp ( argv [ i ] , ""bw"" )"	77:17:2112:2143	9723509	0	True				
ANR	9723644	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""bw"" )"		9723509	0					
ANR	9723645	UnaryOperator	!		9723509	0					
ANR	9723646	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""bw"" )"		9723509	1					
ANR	9723647	Callee	_cups_strcasecmp		9723509	0					
ANR	9723648	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723649	ArgumentList	argv [ i ]		9723509	1					
ANR	9723650	Argument	argv [ i ]		9723509	0					
ANR	9723651	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723652	Identifier	argv		9723509	0					
ANR	9723653	Identifier	i		9723509	1					
ANR	9723654	Argument	"""bw"""		9723509	1					
ANR	9723655	PrimaryExpression	"""bw"""		9723509	0					
ANR	9723656	CompoundStatement		29:8:850:850	9723509	1					
ANR	9723657	ExpressionStatement	mask |= CUPS_PRINTER_BW	79:10:2166:2189	9723509	0	True				
ANR	9723658	AssignmentExpression	mask |= CUPS_PRINTER_BW		9723509	0		|=			
ANR	9723659	Identifier	mask		9723509	0					
ANR	9723660	Identifier	CUPS_PRINTER_BW		9723509	1					
ANR	9723661	ExpressionStatement	type |= CUPS_PRINTER_BW	80:10:2201:2224	9723509	1	True				
ANR	9723662	AssignmentExpression	type |= CUPS_PRINTER_BW		9723509	0		|=			
ANR	9723663	Identifier	type		9723509	0					
ANR	9723664	Identifier	CUPS_PRINTER_BW		9723509	1					
ANR	9723665	ElseStatement	else		9723509	0					
ANR	9723666	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""color"" ) )"		9723509	0					
ANR	9723667	Condition	"! _cups_strcasecmp ( argv [ i ] , ""color"" )"	82:17:2253:2287	9723509	0	True				
ANR	9723668	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""color"" )"		9723509	0					
ANR	9723669	UnaryOperator	!		9723509	0					
ANR	9723670	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""color"" )"		9723509	1					
ANR	9723671	Callee	_cups_strcasecmp		9723509	0					
ANR	9723672	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723673	ArgumentList	argv [ i ]		9723509	1					
ANR	9723674	Argument	argv [ i ]		9723509	0					
ANR	9723675	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723676	Identifier	argv		9723509	0					
ANR	9723677	Identifier	i		9723509	1					
ANR	9723678	Argument	"""color"""		9723509	1					
ANR	9723679	PrimaryExpression	"""color"""		9723509	0					
ANR	9723680	CompoundStatement		34:8:994:994	9723509	1					
ANR	9723681	ExpressionStatement	mask |= CUPS_PRINTER_COLOR	84:10:2310:2336	9723509	0	True				
ANR	9723682	AssignmentExpression	mask |= CUPS_PRINTER_COLOR		9723509	0		|=			
ANR	9723683	Identifier	mask		9723509	0					
ANR	9723684	Identifier	CUPS_PRINTER_COLOR		9723509	1					
ANR	9723685	ExpressionStatement	type |= CUPS_PRINTER_COLOR	85:10:2348:2374	9723509	1	True				
ANR	9723686	AssignmentExpression	type |= CUPS_PRINTER_COLOR		9723509	0		|=			
ANR	9723687	Identifier	type		9723509	0					
ANR	9723688	Identifier	CUPS_PRINTER_COLOR		9723509	1					
ANR	9723689	ElseStatement	else		9723509	0					
ANR	9723690	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""mono"" ) )"		9723509	0					
ANR	9723691	Condition	"! _cups_strcasecmp ( argv [ i ] , ""mono"" )"	87:17:2403:2436	9723509	0	True				
ANR	9723692	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""mono"" )"		9723509	0					
ANR	9723693	UnaryOperator	!		9723509	0					
ANR	9723694	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""mono"" )"		9723509	1					
ANR	9723695	Callee	_cups_strcasecmp		9723509	0					
ANR	9723696	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723697	ArgumentList	argv [ i ]		9723509	1					
ANR	9723698	Argument	argv [ i ]		9723509	0					
ANR	9723699	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723700	Identifier	argv		9723509	0					
ANR	9723701	Identifier	i		9723509	1					
ANR	9723702	Argument	"""mono"""		9723509	1					
ANR	9723703	PrimaryExpression	"""mono"""		9723509	0					
ANR	9723704	CompoundStatement		39:8:1143:1143	9723509	1					
ANR	9723705	ExpressionStatement	mask |= CUPS_PRINTER_COLOR	89:10:2459:2485	9723509	0	True				
ANR	9723706	AssignmentExpression	mask |= CUPS_PRINTER_COLOR		9723509	0		|=			
ANR	9723707	Identifier	mask		9723509	0					
ANR	9723708	Identifier	CUPS_PRINTER_COLOR		9723509	1					
ANR	9723709	ElseStatement	else		9723509	0					
ANR	9723710	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""duplex"" ) )"		9723509	0					
ANR	9723711	Condition	"! _cups_strcasecmp ( argv [ i ] , ""duplex"" )"	91:17:2514:2549	9723509	0	True				
ANR	9723712	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""duplex"" )"		9723509	0					
ANR	9723713	UnaryOperator	!		9723509	0					
ANR	9723714	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""duplex"" )"		9723509	1					
ANR	9723715	Callee	_cups_strcasecmp		9723509	0					
ANR	9723716	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723717	ArgumentList	argv [ i ]		9723509	1					
ANR	9723718	Argument	argv [ i ]		9723509	0					
ANR	9723719	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723720	Identifier	argv		9723509	0					
ANR	9723721	Identifier	i		9723509	1					
ANR	9723722	Argument	"""duplex"""		9723509	1					
ANR	9723723	PrimaryExpression	"""duplex"""		9723509	0					
ANR	9723724	CompoundStatement		43:8:1256:1256	9723509	1					
ANR	9723725	ExpressionStatement	mask |= CUPS_PRINTER_DUPLEX	93:10:2572:2599	9723509	0	True				
ANR	9723726	AssignmentExpression	mask |= CUPS_PRINTER_DUPLEX		9723509	0		|=			
ANR	9723727	Identifier	mask		9723509	0					
ANR	9723728	Identifier	CUPS_PRINTER_DUPLEX		9723509	1					
ANR	9723729	ExpressionStatement	type |= CUPS_PRINTER_DUPLEX	94:10:2611:2638	9723509	1	True				
ANR	9723730	AssignmentExpression	type |= CUPS_PRINTER_DUPLEX		9723509	0		|=			
ANR	9723731	Identifier	type		9723509	0					
ANR	9723732	Identifier	CUPS_PRINTER_DUPLEX		9723509	1					
ANR	9723733	ElseStatement	else		9723509	0					
ANR	9723734	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""simplex"" ) )"		9723509	0					
ANR	9723735	Condition	"! _cups_strcasecmp ( argv [ i ] , ""simplex"" )"	96:17:2667:2703	9723509	0	True				
ANR	9723736	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""simplex"" )"		9723509	0					
ANR	9723737	UnaryOperator	!		9723509	0					
ANR	9723738	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""simplex"" )"		9723509	1					
ANR	9723739	Callee	_cups_strcasecmp		9723509	0					
ANR	9723740	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723741	ArgumentList	argv [ i ]		9723509	1					
ANR	9723742	Argument	argv [ i ]		9723509	0					
ANR	9723743	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723744	Identifier	argv		9723509	0					
ANR	9723745	Identifier	i		9723509	1					
ANR	9723746	Argument	"""simplex"""		9723509	1					
ANR	9723747	PrimaryExpression	"""simplex"""		9723509	0					
ANR	9723748	CompoundStatement		48:8:1410:1410	9723509	1					
ANR	9723749	ExpressionStatement	mask |= CUPS_PRINTER_DUPLEX	98:10:2726:2753	9723509	0	True				
ANR	9723750	AssignmentExpression	mask |= CUPS_PRINTER_DUPLEX		9723509	0		|=			
ANR	9723751	Identifier	mask		9723509	0					
ANR	9723752	Identifier	CUPS_PRINTER_DUPLEX		9723509	1					
ANR	9723753	ElseStatement	else		9723509	0					
ANR	9723754	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""staple"" ) )"		9723509	0					
ANR	9723755	Condition	"! _cups_strcasecmp ( argv [ i ] , ""staple"" )"	100:17:2782:2817	9723509	0	True				
ANR	9723756	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""staple"" )"		9723509	0					
ANR	9723757	UnaryOperator	!		9723509	0					
ANR	9723758	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""staple"" )"		9723509	1					
ANR	9723759	Callee	_cups_strcasecmp		9723509	0					
ANR	9723760	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723761	ArgumentList	argv [ i ]		9723509	1					
ANR	9723762	Argument	argv [ i ]		9723509	0					
ANR	9723763	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723764	Identifier	argv		9723509	0					
ANR	9723765	Identifier	i		9723509	1					
ANR	9723766	Argument	"""staple"""		9723509	1					
ANR	9723767	PrimaryExpression	"""staple"""		9723509	0					
ANR	9723768	CompoundStatement		52:8:1524:1524	9723509	1					
ANR	9723769	ExpressionStatement	mask |= CUPS_PRINTER_STAPLE	102:10:2840:2867	9723509	0	True				
ANR	9723770	AssignmentExpression	mask |= CUPS_PRINTER_STAPLE		9723509	0		|=			
ANR	9723771	Identifier	mask		9723509	0					
ANR	9723772	Identifier	CUPS_PRINTER_STAPLE		9723509	1					
ANR	9723773	ExpressionStatement	type |= CUPS_PRINTER_STAPLE	103:10:2879:2906	9723509	1	True				
ANR	9723774	AssignmentExpression	type |= CUPS_PRINTER_STAPLE		9723509	0		|=			
ANR	9723775	Identifier	type		9723509	0					
ANR	9723776	Identifier	CUPS_PRINTER_STAPLE		9723509	1					
ANR	9723777	ElseStatement	else		9723509	0					
ANR	9723778	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""copies"" ) )"		9723509	0					
ANR	9723779	Condition	"! _cups_strcasecmp ( argv [ i ] , ""copies"" )"	105:17:2935:2970	9723509	0	True				
ANR	9723780	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""copies"" )"		9723509	0					
ANR	9723781	UnaryOperator	!		9723509	0					
ANR	9723782	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""copies"" )"		9723509	1					
ANR	9723783	Callee	_cups_strcasecmp		9723509	0					
ANR	9723784	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723785	ArgumentList	argv [ i ]		9723509	1					
ANR	9723786	Argument	argv [ i ]		9723509	0					
ANR	9723787	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723788	Identifier	argv		9723509	0					
ANR	9723789	Identifier	i		9723509	1					
ANR	9723790	Argument	"""copies"""		9723509	1					
ANR	9723791	PrimaryExpression	"""copies"""		9723509	0					
ANR	9723792	CompoundStatement		57:8:1677:1677	9723509	1					
ANR	9723793	ExpressionStatement	mask |= CUPS_PRINTER_COPIES	107:10:2993:3020	9723509	0	True				
ANR	9723794	AssignmentExpression	mask |= CUPS_PRINTER_COPIES		9723509	0		|=			
ANR	9723795	Identifier	mask		9723509	0					
ANR	9723796	Identifier	CUPS_PRINTER_COPIES		9723509	1					
ANR	9723797	ExpressionStatement	type |= CUPS_PRINTER_COPIES	108:10:3032:3059	9723509	1	True				
ANR	9723798	AssignmentExpression	type |= CUPS_PRINTER_COPIES		9723509	0		|=			
ANR	9723799	Identifier	type		9723509	0					
ANR	9723800	Identifier	CUPS_PRINTER_COPIES		9723509	1					
ANR	9723801	ElseStatement	else		9723509	0					
ANR	9723802	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""collate"" ) )"		9723509	0					
ANR	9723803	Condition	"! _cups_strcasecmp ( argv [ i ] , ""collate"" )"	110:17:3088:3124	9723509	0	True				
ANR	9723804	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""collate"" )"		9723509	0					
ANR	9723805	UnaryOperator	!		9723509	0					
ANR	9723806	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""collate"" )"		9723509	1					
ANR	9723807	Callee	_cups_strcasecmp		9723509	0					
ANR	9723808	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723809	ArgumentList	argv [ i ]		9723509	1					
ANR	9723810	Argument	argv [ i ]		9723509	0					
ANR	9723811	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723812	Identifier	argv		9723509	0					
ANR	9723813	Identifier	i		9723509	1					
ANR	9723814	Argument	"""collate"""		9723509	1					
ANR	9723815	PrimaryExpression	"""collate"""		9723509	0					
ANR	9723816	CompoundStatement		62:8:1831:1831	9723509	1					
ANR	9723817	ExpressionStatement	mask |= CUPS_PRINTER_COLLATE	112:10:3147:3175	9723509	0	True				
ANR	9723818	AssignmentExpression	mask |= CUPS_PRINTER_COLLATE		9723509	0		|=			
ANR	9723819	Identifier	mask		9723509	0					
ANR	9723820	Identifier	CUPS_PRINTER_COLLATE		9723509	1					
ANR	9723821	ExpressionStatement	type |= CUPS_PRINTER_COLLATE	113:10:3187:3215	9723509	1	True				
ANR	9723822	AssignmentExpression	type |= CUPS_PRINTER_COLLATE		9723509	0		|=			
ANR	9723823	Identifier	type		9723509	0					
ANR	9723824	Identifier	CUPS_PRINTER_COLLATE		9723509	1					
ANR	9723825	ElseStatement	else		9723509	0					
ANR	9723826	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""punch"" ) )"		9723509	0					
ANR	9723827	Condition	"! _cups_strcasecmp ( argv [ i ] , ""punch"" )"	115:17:3244:3278	9723509	0	True				
ANR	9723828	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""punch"" )"		9723509	0					
ANR	9723829	UnaryOperator	!		9723509	0					
ANR	9723830	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""punch"" )"		9723509	1					
ANR	9723831	Callee	_cups_strcasecmp		9723509	0					
ANR	9723832	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723833	ArgumentList	argv [ i ]		9723509	1					
ANR	9723834	Argument	argv [ i ]		9723509	0					
ANR	9723835	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723836	Identifier	argv		9723509	0					
ANR	9723837	Identifier	i		9723509	1					
ANR	9723838	Argument	"""punch"""		9723509	1					
ANR	9723839	PrimaryExpression	"""punch"""		9723509	0					
ANR	9723840	CompoundStatement		67:8:1985:1985	9723509	1					
ANR	9723841	ExpressionStatement	mask |= CUPS_PRINTER_PUNCH	117:10:3301:3327	9723509	0	True				
ANR	9723842	AssignmentExpression	mask |= CUPS_PRINTER_PUNCH		9723509	0		|=			
ANR	9723843	Identifier	mask		9723509	0					
ANR	9723844	Identifier	CUPS_PRINTER_PUNCH		9723509	1					
ANR	9723845	ExpressionStatement	type |= CUPS_PRINTER_PUNCH	118:10:3339:3365	9723509	1	True				
ANR	9723846	AssignmentExpression	type |= CUPS_PRINTER_PUNCH		9723509	0		|=			
ANR	9723847	Identifier	type		9723509	0					
ANR	9723848	Identifier	CUPS_PRINTER_PUNCH		9723509	1					
ANR	9723849	ElseStatement	else		9723509	0					
ANR	9723850	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""cover"" ) )"		9723509	0					
ANR	9723851	Condition	"! _cups_strcasecmp ( argv [ i ] , ""cover"" )"	120:17:3394:3428	9723509	0	True				
ANR	9723852	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""cover"" )"		9723509	0					
ANR	9723853	UnaryOperator	!		9723509	0					
ANR	9723854	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""cover"" )"		9723509	1					
ANR	9723855	Callee	_cups_strcasecmp		9723509	0					
ANR	9723856	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723857	ArgumentList	argv [ i ]		9723509	1					
ANR	9723858	Argument	argv [ i ]		9723509	0					
ANR	9723859	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723860	Identifier	argv		9723509	0					
ANR	9723861	Identifier	i		9723509	1					
ANR	9723862	Argument	"""cover"""		9723509	1					
ANR	9723863	PrimaryExpression	"""cover"""		9723509	0					
ANR	9723864	CompoundStatement		72:8:2135:2135	9723509	1					
ANR	9723865	ExpressionStatement	mask |= CUPS_PRINTER_COVER	122:10:3451:3477	9723509	0	True				
ANR	9723866	AssignmentExpression	mask |= CUPS_PRINTER_COVER		9723509	0		|=			
ANR	9723867	Identifier	mask		9723509	0					
ANR	9723868	Identifier	CUPS_PRINTER_COVER		9723509	1					
ANR	9723869	ExpressionStatement	type |= CUPS_PRINTER_COVER	123:10:3489:3515	9723509	1	True				
ANR	9723870	AssignmentExpression	type |= CUPS_PRINTER_COVER		9723509	0		|=			
ANR	9723871	Identifier	type		9723509	0					
ANR	9723872	Identifier	CUPS_PRINTER_COVER		9723509	1					
ANR	9723873	ElseStatement	else		9723509	0					
ANR	9723874	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""bind"" ) )"		9723509	0					
ANR	9723875	Condition	"! _cups_strcasecmp ( argv [ i ] , ""bind"" )"	125:17:3544:3577	9723509	0	True				
ANR	9723876	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""bind"" )"		9723509	0					
ANR	9723877	UnaryOperator	!		9723509	0					
ANR	9723878	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""bind"" )"		9723509	1					
ANR	9723879	Callee	_cups_strcasecmp		9723509	0					
ANR	9723880	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723881	ArgumentList	argv [ i ]		9723509	1					
ANR	9723882	Argument	argv [ i ]		9723509	0					
ANR	9723883	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723884	Identifier	argv		9723509	0					
ANR	9723885	Identifier	i		9723509	1					
ANR	9723886	Argument	"""bind"""		9723509	1					
ANR	9723887	PrimaryExpression	"""bind"""		9723509	0					
ANR	9723888	CompoundStatement		77:8:2284:2284	9723509	1					
ANR	9723889	ExpressionStatement	mask |= CUPS_PRINTER_BIND	127:10:3600:3625	9723509	0	True				
ANR	9723890	AssignmentExpression	mask |= CUPS_PRINTER_BIND		9723509	0		|=			
ANR	9723891	Identifier	mask		9723509	0					
ANR	9723892	Identifier	CUPS_PRINTER_BIND		9723509	1					
ANR	9723893	ExpressionStatement	type |= CUPS_PRINTER_BIND	128:10:3637:3662	9723509	1	True				
ANR	9723894	AssignmentExpression	type |= CUPS_PRINTER_BIND		9723509	0		|=			
ANR	9723895	Identifier	type		9723509	0					
ANR	9723896	Identifier	CUPS_PRINTER_BIND		9723509	1					
ANR	9723897	ElseStatement	else		9723509	0					
ANR	9723898	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""sort"" ) )"		9723509	0					
ANR	9723899	Condition	"! _cups_strcasecmp ( argv [ i ] , ""sort"" )"	130:17:3691:3724	9723509	0	True				
ANR	9723900	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""sort"" )"		9723509	0					
ANR	9723901	UnaryOperator	!		9723509	0					
ANR	9723902	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""sort"" )"		9723509	1					
ANR	9723903	Callee	_cups_strcasecmp		9723509	0					
ANR	9723904	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723905	ArgumentList	argv [ i ]		9723509	1					
ANR	9723906	Argument	argv [ i ]		9723509	0					
ANR	9723907	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723908	Identifier	argv		9723509	0					
ANR	9723909	Identifier	i		9723509	1					
ANR	9723910	Argument	"""sort"""		9723509	1					
ANR	9723911	PrimaryExpression	"""sort"""		9723509	0					
ANR	9723912	CompoundStatement		82:8:2431:2431	9723509	1					
ANR	9723913	ExpressionStatement	mask |= CUPS_PRINTER_SORT	132:10:3747:3772	9723509	0	True				
ANR	9723914	AssignmentExpression	mask |= CUPS_PRINTER_SORT		9723509	0		|=			
ANR	9723915	Identifier	mask		9723509	0					
ANR	9723916	Identifier	CUPS_PRINTER_SORT		9723509	1					
ANR	9723917	ExpressionStatement	type |= CUPS_PRINTER_SORT	133:10:3784:3809	9723509	1	True				
ANR	9723918	AssignmentExpression	type |= CUPS_PRINTER_SORT		9723509	0		|=			
ANR	9723919	Identifier	type		9723509	0					
ANR	9723920	Identifier	CUPS_PRINTER_SORT		9723509	1					
ANR	9723921	ElseStatement	else		9723509	0					
ANR	9723922	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""mfp"" ) )"		9723509	0					
ANR	9723923	Condition	"! _cups_strcasecmp ( argv [ i ] , ""mfp"" )"	135:17:3838:3870	9723509	0	True				
ANR	9723924	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""mfp"" )"		9723509	0					
ANR	9723925	UnaryOperator	!		9723509	0					
ANR	9723926	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""mfp"" )"		9723509	1					
ANR	9723927	Callee	_cups_strcasecmp		9723509	0					
ANR	9723928	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723929	ArgumentList	argv [ i ]		9723509	1					
ANR	9723930	Argument	argv [ i ]		9723509	0					
ANR	9723931	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723932	Identifier	argv		9723509	0					
ANR	9723933	Identifier	i		9723509	1					
ANR	9723934	Argument	"""mfp"""		9723509	1					
ANR	9723935	PrimaryExpression	"""mfp"""		9723509	0					
ANR	9723936	CompoundStatement		87:8:2577:2577	9723509	1					
ANR	9723937	ExpressionStatement	mask |= CUPS_PRINTER_MFP	137:10:3893:3917	9723509	0	True				
ANR	9723938	AssignmentExpression	mask |= CUPS_PRINTER_MFP		9723509	0		|=			
ANR	9723939	Identifier	mask		9723509	0					
ANR	9723940	Identifier	CUPS_PRINTER_MFP		9723509	1					
ANR	9723941	ExpressionStatement	type |= CUPS_PRINTER_MFP	138:10:3929:3953	9723509	1	True				
ANR	9723942	AssignmentExpression	type |= CUPS_PRINTER_MFP		9723509	0		|=			
ANR	9723943	Identifier	type		9723509	0					
ANR	9723944	Identifier	CUPS_PRINTER_MFP		9723509	1					
ANR	9723945	ElseStatement	else		9723509	0					
ANR	9723946	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""printer"" ) )"		9723509	0					
ANR	9723947	Condition	"! _cups_strcasecmp ( argv [ i ] , ""printer"" )"	140:17:3982:4018	9723509	0	True				
ANR	9723948	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""printer"" )"		9723509	0					
ANR	9723949	UnaryOperator	!		9723509	0					
ANR	9723950	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""printer"" )"		9723509	1					
ANR	9723951	Callee	_cups_strcasecmp		9723509	0					
ANR	9723952	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723953	ArgumentList	argv [ i ]		9723509	1					
ANR	9723954	Argument	argv [ i ]		9723509	0					
ANR	9723955	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723956	Identifier	argv		9723509	0					
ANR	9723957	Identifier	i		9723509	1					
ANR	9723958	Argument	"""printer"""		9723509	1					
ANR	9723959	PrimaryExpression	"""printer"""		9723509	0					
ANR	9723960	CompoundStatement		92:8:2725:2725	9723509	1					
ANR	9723961	ExpressionStatement	mask |= CUPS_PRINTER_MFP	142:10:4041:4065	9723509	0	True				
ANR	9723962	AssignmentExpression	mask |= CUPS_PRINTER_MFP		9723509	0		|=			
ANR	9723963	Identifier	mask		9723509	0					
ANR	9723964	Identifier	CUPS_PRINTER_MFP		9723509	1					
ANR	9723965	ElseStatement	else		9723509	0					
ANR	9723966	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""large"" ) )"		9723509	0					
ANR	9723967	Condition	"! _cups_strcasecmp ( argv [ i ] , ""large"" )"	144:17:4094:4128	9723509	0	True				
ANR	9723968	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""large"" )"		9723509	0					
ANR	9723969	UnaryOperator	!		9723509	0					
ANR	9723970	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""large"" )"		9723509	1					
ANR	9723971	Callee	_cups_strcasecmp		9723509	0					
ANR	9723972	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723973	ArgumentList	argv [ i ]		9723509	1					
ANR	9723974	Argument	argv [ i ]		9723509	0					
ANR	9723975	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9723976	Identifier	argv		9723509	0					
ANR	9723977	Identifier	i		9723509	1					
ANR	9723978	Argument	"""large"""		9723509	1					
ANR	9723979	PrimaryExpression	"""large"""		9723509	0					
ANR	9723980	CompoundStatement		96:8:2835:2835	9723509	1					
ANR	9723981	ExpressionStatement	mask |= CUPS_PRINTER_LARGE	146:10:4151:4177	9723509	0	True				
ANR	9723982	AssignmentExpression	mask |= CUPS_PRINTER_LARGE		9723509	0		|=			
ANR	9723983	Identifier	mask		9723509	0					
ANR	9723984	Identifier	CUPS_PRINTER_LARGE		9723509	1					
ANR	9723985	ExpressionStatement	type |= CUPS_PRINTER_LARGE	147:10:4189:4215	9723509	1	True				
ANR	9723986	AssignmentExpression	type |= CUPS_PRINTER_LARGE		9723509	0		|=			
ANR	9723987	Identifier	type		9723509	0					
ANR	9723988	Identifier	CUPS_PRINTER_LARGE		9723509	1					
ANR	9723989	ElseStatement	else		9723509	0					
ANR	9723990	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""medium"" ) )"		9723509	0					
ANR	9723991	Condition	"! _cups_strcasecmp ( argv [ i ] , ""medium"" )"	149:17:4244:4279	9723509	0	True				
ANR	9723992	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""medium"" )"		9723509	0					
ANR	9723993	UnaryOperator	!		9723509	0					
ANR	9723994	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""medium"" )"		9723509	1					
ANR	9723995	Callee	_cups_strcasecmp		9723509	0					
ANR	9723996	Identifier	_cups_strcasecmp		9723509	0					
ANR	9723997	ArgumentList	argv [ i ]		9723509	1					
ANR	9723998	Argument	argv [ i ]		9723509	0					
ANR	9723999	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9724000	Identifier	argv		9723509	0					
ANR	9724001	Identifier	i		9723509	1					
ANR	9724002	Argument	"""medium"""		9723509	1					
ANR	9724003	PrimaryExpression	"""medium"""		9723509	0					
ANR	9724004	CompoundStatement		101:8:2986:2986	9723509	1					
ANR	9724005	ExpressionStatement	mask |= CUPS_PRINTER_MEDIUM	151:10:4302:4329	9723509	0	True				
ANR	9724006	AssignmentExpression	mask |= CUPS_PRINTER_MEDIUM		9723509	0		|=			
ANR	9724007	Identifier	mask		9723509	0					
ANR	9724008	Identifier	CUPS_PRINTER_MEDIUM		9723509	1					
ANR	9724009	ExpressionStatement	type |= CUPS_PRINTER_MEDIUM	152:10:4341:4368	9723509	1	True				
ANR	9724010	AssignmentExpression	type |= CUPS_PRINTER_MEDIUM		9723509	0		|=			
ANR	9724011	Identifier	type		9723509	0					
ANR	9724012	Identifier	CUPS_PRINTER_MEDIUM		9723509	1					
ANR	9724013	ElseStatement	else		9723509	0					
ANR	9724014	IfStatement	"if ( ! _cups_strcasecmp ( argv [ i ] , ""small"" ) )"		9723509	0					
ANR	9724015	Condition	"! _cups_strcasecmp ( argv [ i ] , ""small"" )"	154:17:4397:4431	9723509	0	True				
ANR	9724016	UnaryOperationExpression	"! _cups_strcasecmp ( argv [ i ] , ""small"" )"		9723509	0					
ANR	9724017	UnaryOperator	!		9723509	0					
ANR	9724018	CallExpression	"_cups_strcasecmp ( argv [ i ] , ""small"" )"		9723509	1					
ANR	9724019	Callee	_cups_strcasecmp		9723509	0					
ANR	9724020	Identifier	_cups_strcasecmp		9723509	0					
ANR	9724021	ArgumentList	argv [ i ]		9723509	1					
ANR	9724022	Argument	argv [ i ]		9723509	0					
ANR	9724023	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9724024	Identifier	argv		9723509	0					
ANR	9724025	Identifier	i		9723509	1					
ANR	9724026	Argument	"""small"""		9723509	1					
ANR	9724027	PrimaryExpression	"""small"""		9723509	0					
ANR	9724028	CompoundStatement		106:8:3138:3138	9723509	1					
ANR	9724029	ExpressionStatement	mask |= CUPS_PRINTER_SMALL	156:10:4454:4480	9723509	0	True				
ANR	9724030	AssignmentExpression	mask |= CUPS_PRINTER_SMALL		9723509	0		|=			
ANR	9724031	Identifier	mask		9723509	0					
ANR	9724032	Identifier	CUPS_PRINTER_SMALL		9723509	1					
ANR	9724033	ExpressionStatement	type |= CUPS_PRINTER_SMALL	157:10:4492:4518	9723509	1	True				
ANR	9724034	AssignmentExpression	type |= CUPS_PRINTER_SMALL		9723509	0		|=			
ANR	9724035	Identifier	type		9723509	0					
ANR	9724036	Identifier	CUPS_PRINTER_SMALL		9723509	1					
ANR	9724037	ElseStatement	else		9723509	0					
ANR	9724038	ExpressionStatement	"fprintf ( stderr , ""Unknown argument \\""%s\\"" ignored...\\n"" , argv [ i ] )"	160:10:4553:4617	9723509	0	True				
ANR	9724039	CallExpression	"fprintf ( stderr , ""Unknown argument \\""%s\\"" ignored...\\n"" , argv [ i ] )"		9723509	0					
ANR	9724040	Callee	fprintf		9723509	0					
ANR	9724041	Identifier	fprintf		9723509	0					
ANR	9724042	ArgumentList	stderr		9723509	1					
ANR	9724043	Argument	stderr		9723509	0					
ANR	9724044	Identifier	stderr		9723509	0					
ANR	9724045	Argument	"""Unknown argument \\""%s\\"" ignored...\\n"""		9723509	1					
ANR	9724046	PrimaryExpression	"""Unknown argument \\""%s\\"" ignored...\\n"""		9723509	0					
ANR	9724047	Argument	argv [ i ]		9723509	2					
ANR	9724048	ArrayIndexing	argv [ i ]		9723509	0					
ANR	9724049	Identifier	argv		9723509	0					
ANR	9724050	Identifier	i		9723509	1					
ANR	9724051	ExpressionStatement	"cupsEnumDests ( CUPS_DEST_FLAGS_NONE , msec , NULL , type , mask , enum_cb , NULL )"	162:6:4626:4700	9723509	3	True				
ANR	9724052	CallExpression	"cupsEnumDests ( CUPS_DEST_FLAGS_NONE , msec , NULL , type , mask , enum_cb , NULL )"		9723509	0					
ANR	9724053	Callee	cupsEnumDests		9723509	0					
ANR	9724054	Identifier	cupsEnumDests		9723509	0					
ANR	9724055	ArgumentList	CUPS_DEST_FLAGS_NONE		9723509	1					
ANR	9724056	Argument	CUPS_DEST_FLAGS_NONE		9723509	0					
ANR	9724057	Identifier	CUPS_DEST_FLAGS_NONE		9723509	0					
ANR	9724058	Argument	msec		9723509	1					
ANR	9724059	Identifier	msec		9723509	0					
ANR	9724060	Argument	NULL		9723509	2					
ANR	9724061	Identifier	NULL		9723509	0					
ANR	9724062	Argument	type		9723509	3					
ANR	9724063	Identifier	type		9723509	0					
ANR	9724064	Argument	mask		9723509	4					
ANR	9724065	Identifier	mask		9723509	0					
ANR	9724066	Argument	enum_cb		9723509	5					
ANR	9724067	Identifier	enum_cb		9723509	0					
ANR	9724068	Argument	NULL		9723509	6					
ANR	9724069	Identifier	NULL		9723509	0					
ANR	9724070	ElseStatement	else		9723509	0					
ANR	9724071	IfStatement	"if ( ! strcmp ( argv [ 1 ] , ""password"" ) )"		9723509	0					
ANR	9724072	Condition	"! strcmp ( argv [ 1 ] , ""password"" )"	164:13:4721:4748	9723509	0	True				
ANR	9724073	UnaryOperationExpression	"! strcmp ( argv [ 1 ] , ""password"" )"		9723509	0					
ANR	9724074	UnaryOperator	!		9723509	0					
ANR	9724075	CallExpression	"strcmp ( argv [ 1 ] , ""password"" )"		9723509	1					
ANR	9724076	Callee	strcmp		9723509	0					
ANR	9724077	Identifier	strcmp		9723509	0					
ANR	9724078	ArgumentList	argv [ 1 ]		9723509	1					
ANR	9724079	Argument	argv [ 1 ]		9723509	0					
ANR	9724080	ArrayIndexing	argv [ 1 ]		9723509	0					
ANR	9724081	Identifier	argv		9723509	0					
ANR	9724082	PrimaryExpression	1		9723509	1					
ANR	9724083	Argument	"""password"""		9723509	1					
ANR	9724084	PrimaryExpression	"""password"""		9723509	0					
ANR	9724085	CompoundStatement		117:6:3459:3506	9723509	1					
ANR	9724086	IdentifierDeclStatement	"const char * pass = cupsGetPassword ( ""Password:"" ) ;"	166:6:4763:4810	9723509	0	True				
ANR	9724087	IdentifierDecl	"* pass = cupsGetPassword ( ""Password:"" )"		9723509	0					
ANR	9724088	IdentifierDeclType	const char *		9723509	0					
ANR	9724089	Identifier	pass		9723509	1					
ANR	9724090	AssignmentExpression	"* pass = cupsGetPassword ( ""Password:"" )"		9723509	2		=			
ANR	9724091	Identifier	pass		9723509	0					
ANR	9724092	CallExpression	"cupsGetPassword ( ""Password:"" )"		9723509	1					
ANR	9724093	Callee	cupsGetPassword		9723509	0					
ANR	9724094	Identifier	cupsGetPassword		9723509	0					
ANR	9724095	ArgumentList	"""Password:"""		9723509	1					
ANR	9724096	Argument	"""Password:"""		9723509	0					
ANR	9724097	PrimaryExpression	"""Password:"""		9723509	0					
ANR	9724098	IfStatement	if ( pass )		9723509	1					
ANR	9724099	Condition	pass	169:10:4852:4855	9723509	0	True				
ANR	9724100	Identifier	pass		9723509	0					
ANR	9724101	ExpressionStatement	"printf ( ""Password entered: %s\\n"" , pass )"	170:1:4859:4897	9723509	1	True				
ANR	9724102	CallExpression	"printf ( ""Password entered: %s\\n"" , pass )"		9723509	0					
ANR	9724103	Callee	printf		9723509	0					
ANR	9724104	Identifier	printf		9723509	0					
ANR	9724105	ArgumentList	"""Password entered: %s\\n"""		9723509	1					
ANR	9724106	Argument	"""Password entered: %s\\n"""		9723509	0					
ANR	9724107	PrimaryExpression	"""Password entered: %s\\n"""		9723509	0					
ANR	9724108	Argument	pass		9723509	1					
ANR	9724109	Identifier	pass		9723509	0					
ANR	9724110	ElseStatement	else		9723509	0					
ANR	9724111	ExpressionStatement	"puts ( ""No password entered."" )"	172:1:4911:4939	9723509	0	True				
ANR	9724112	CallExpression	"puts ( ""No password entered."" )"		9723509	0					
ANR	9724113	Callee	puts		9723509	0					
ANR	9724114	Identifier	puts		9723509	0					
ANR	9724115	ArgumentList	"""No password entered."""		9723509	1					
ANR	9724116	Argument	"""No password entered."""		9723509	0					
ANR	9724117	PrimaryExpression	"""No password entered."""		9723509	0					
ANR	9724118	ElseStatement	else		9723509	0					
ANR	9724119	IfStatement	"if ( ! strcmp ( argv [ 1 ] , ""ppd"" ) && argc == 3 )"		9723509	0					
ANR	9724120	Condition	"! strcmp ( argv [ 1 ] , ""ppd"" ) && argc == 3"	174:13:4960:4995	9723509	0	True				
ANR	9724121	AndExpression	"! strcmp ( argv [ 1 ] , ""ppd"" ) && argc == 3"		9723509	0		&&			
ANR	9724122	UnaryOperationExpression	"! strcmp ( argv [ 1 ] , ""ppd"" )"		9723509	0					
ANR	9724123	UnaryOperator	!		9723509	0					
ANR	9724124	CallExpression	"strcmp ( argv [ 1 ] , ""ppd"" )"		9723509	1					
ANR	9724125	Callee	strcmp		9723509	0					
ANR	9724126	Identifier	strcmp		9723509	0					
ANR	9724127	ArgumentList	argv [ 1 ]		9723509	1					
ANR	9724128	Argument	argv [ 1 ]		9723509	0					
ANR	9724129	ArrayIndexing	argv [ 1 ]		9723509	0					
ANR	9724130	Identifier	argv		9723509	0					
ANR	9724131	PrimaryExpression	1		9723509	1					
ANR	9724132	Argument	"""ppd"""		9723509	1					
ANR	9724133	PrimaryExpression	"""ppd"""		9723509	0					
ANR	9724134	EqualityExpression	argc == 3		9723509	1		==			
ANR	9724135	Identifier	argc		9723509	0					
ANR	9724136	PrimaryExpression	3		9723509	1					
ANR	9724137	CompoundStatement		133:6:3846:3865	9723509	1					
ANR	9724138	IdentifierDeclStatement	http_status_t http_status ;	180:6:5059:5084	9723509	0	True				
ANR	9724139	IdentifierDecl	http_status		9723509	0					
ANR	9724140	IdentifierDeclType	http_status_t		9723509	0					
ANR	9724141	Identifier	http_status		9723509	1					
ANR	9724142	IdentifierDeclStatement	char buffer [ 1024 ] ;	181:6:5105:5123	9723509	1	True				
ANR	9724143	IdentifierDecl	buffer [ 1024 ]		9723509	0					
ANR	9724144	IdentifierDeclType	char [ 1024 ]		9723509	0					
ANR	9724145	Identifier	buffer		9723509	1					
ANR	9724146	PrimaryExpression	1024		9723509	2					
ANR	9724147	IdentifierDeclStatement	time_t modtime = 0 ;	182:6:5150:5169	9723509	2	True				
ANR	9724148	IdentifierDecl	modtime = 0		9723509	0					
ANR	9724149	IdentifierDeclType	time_t		9723509	0					
ANR	9724150	Identifier	modtime		9723509	1					
ANR	9724151	AssignmentExpression	modtime = 0		9723509	2		=			
ANR	9724152	Identifier	modtime		9723509	0					
ANR	9724153	PrimaryExpression	0		9723509	1					
ANR	9724154	IfStatement	"if ( ( http_status = cupsGetPPD3 ( CUPS_HTTP_DEFAULT , argv [ 2 ] , & modtime , buffer , sizeof ( buffer ) ) ) != HTTP_STATUS_OK )"		9723509	3					
ANR	9724155	Condition	"( http_status = cupsGetPPD3 ( CUPS_HTTP_DEFAULT , argv [ 2 ] , & modtime , buffer , sizeof ( buffer ) ) ) != HTTP_STATUS_OK"	184:10:5202:5345	9723509	0	True				
ANR	9724156	EqualityExpression	"( http_status = cupsGetPPD3 ( CUPS_HTTP_DEFAULT , argv [ 2 ] , & modtime , buffer , sizeof ( buffer ) ) ) != HTTP_STATUS_OK"		9723509	0		!=			
ANR	9724157	AssignmentExpression	"http_status = cupsGetPPD3 ( CUPS_HTTP_DEFAULT , argv [ 2 ] , & modtime , buffer , sizeof ( buffer ) )"		9723509	0		=			
ANR	9724158	Identifier	http_status		9723509	0					
ANR	9724159	CallExpression	"cupsGetPPD3 ( CUPS_HTTP_DEFAULT , argv [ 2 ] , & modtime , buffer , sizeof ( buffer ) )"		9723509	1					
ANR	9724160	Callee	cupsGetPPD3		9723509	0					
ANR	9724161	Identifier	cupsGetPPD3		9723509	0					
ANR	9724162	ArgumentList	CUPS_HTTP_DEFAULT		9723509	1					
ANR	9724163	Argument	CUPS_HTTP_DEFAULT		9723509	0					
ANR	9724164	Identifier	CUPS_HTTP_DEFAULT		9723509	0					
ANR	9724165	Argument	argv [ 2 ]		9723509	1					
ANR	9724166	ArrayIndexing	argv [ 2 ]		9723509	0					
ANR	9724167	Identifier	argv		9723509	0					
ANR	9724168	PrimaryExpression	2		9723509	1					
ANR	9724169	Argument	& modtime		9723509	2					
ANR	9724170	UnaryOperationExpression	& modtime		9723509	0					
ANR	9724171	UnaryOperator	&		9723509	0					
ANR	9724172	Identifier	modtime		9723509	1					
ANR	9724173	Argument	buffer		9723509	3					
ANR	9724174	Identifier	buffer		9723509	0					
ANR	9724175	Argument	sizeof ( buffer )		9723509	4					
ANR	9724176	SizeofExpression	sizeof ( buffer )		9723509	0					
ANR	9724177	Sizeof	sizeof		9723509	0					
ANR	9724178	SizeofOperand	buffer		9723509	1					
ANR	9724179	Identifier	HTTP_STATUS_OK		9723509	1					
ANR	9724180	ExpressionStatement	"printf ( ""Unable to get PPD: %d (%s)\\n"" , ( int ) http_status , cupsLastErrorString ( ) )"	186:8:5356:5450	9723509	1	True				
ANR	9724181	CallExpression	"printf ( ""Unable to get PPD: %d (%s)\\n"" , ( int ) http_status , cupsLastErrorString ( ) )"		9723509	0					
ANR	9724182	Callee	printf		9723509	0					
ANR	9724183	Identifier	printf		9723509	0					
ANR	9724184	ArgumentList	"""Unable to get PPD: %d (%s)\\n"""		9723509	1					
ANR	9724185	Argument	"""Unable to get PPD: %d (%s)\\n"""		9723509	0					
ANR	9724186	PrimaryExpression	"""Unable to get PPD: %d (%s)\\n"""		9723509	0					
ANR	9724187	Argument	( int ) http_status		9723509	1					
ANR	9724188	CastExpression	( int ) http_status		9723509	0					
ANR	9724189	CastTarget	int		9723509	0					
ANR	9724190	Identifier	http_status		9723509	1					
ANR	9724191	Argument	cupsLastErrorString ( )		9723509	2					
ANR	9724192	CallExpression	cupsLastErrorString ( )		9723509	0					
ANR	9724193	Callee	cupsLastErrorString		9723509	0					
ANR	9724194	Identifier	cupsLastErrorString		9723509	0					
ANR	9724195	ArgumentList			9723509	1					
ANR	9724196	ElseStatement	else		9723509	0					
ANR	9724197	ExpressionStatement	puts ( buffer )	189:8:5471:5483	9723509	0	True				
ANR	9724198	CallExpression	puts ( buffer )		9723509	0					
ANR	9724199	Callee	puts		9723509	0					
ANR	9724200	Identifier	puts		9723509	0					
ANR	9724201	ArgumentList	buffer		9723509	1					
ANR	9724202	Argument	buffer		9723509	0					
ANR	9724203	Identifier	buffer		9723509	0					
ANR	9724204	ElseStatement	else		9723509	0					
ANR	9724205	IfStatement	"if ( ! strcmp ( argv [ 1 ] , ""print"" ) && argc == 5 )"		9723509	0					
ANR	9724206	Condition	"! strcmp ( argv [ 1 ] , ""print"" ) && argc == 5"	191:13:5504:5541	9723509	0	True				
ANR	9724207	AndExpression	"! strcmp ( argv [ 1 ] , ""print"" ) && argc == 5"		9723509	0		&&			
ANR	9724208	UnaryOperationExpression	"! strcmp ( argv [ 1 ] , ""print"" )"		9723509	0					
ANR	9724209	UnaryOperator	!		9723509	0					
ANR	9724210	CallExpression	"strcmp ( argv [ 1 ] , ""print"" )"		9723509	1					
ANR	9724211	Callee	strcmp		9723509	0					
ANR	9724212	Identifier	strcmp		9723509	0					
ANR	9724213	ArgumentList	argv [ 1 ]		9723509	1					
ANR	9724214	Argument	argv [ 1 ]		9723509	0					
ANR	9724215	ArrayIndexing	argv [ 1 ]		9723509	0					
ANR	9724216	Identifier	argv		9723509	0					
ANR	9724217	PrimaryExpression	1		9723509	1					
ANR	9724218	Argument	"""print"""		9723509	1					
ANR	9724219	PrimaryExpression	"""print"""		9723509	0					
ANR	9724220	EqualityExpression	argc == 5		9723509	1		==			
ANR	9724221	Identifier	argc		9723509	0					
ANR	9724222	PrimaryExpression	5		9723509	1					
ANR	9724223	CompoundStatement		152:6:4485:4499	9723509	1					
ANR	9724224	IdentifierDeclStatement	"int interval , job_id ;"	197:6:5621:5675	9723509	0	True				
ANR	9724225	IdentifierDecl	interval		9723509	0					
ANR	9724226	IdentifierDeclType	int		9723509	0					
ANR	9724227	Identifier	interval		9723509	1					
ANR	9724228	IdentifierDecl	job_id		9723509	1					
ANR	9724229	IdentifierDeclType	int		9723509	0					
ANR	9724230	Identifier	job_id		9723509	1					
ANR	9724231	IdentifierDeclStatement	cups_file_t * fp ;	199:6:5697:5712	9723509	1	True				
ANR	9724232	IdentifierDecl	* fp		9723509	0					
ANR	9724233	IdentifierDeclType	cups_file_t *		9723509	0					
ANR	9724234	Identifier	fp		9723509	1					
ANR	9724235	IdentifierDeclStatement	char buffer [ 16384 ] ;	200:6:5738:5757	9723509	2	True				
ANR	9724236	IdentifierDecl	buffer [ 16384 ]		9723509	0					
ANR	9724237	IdentifierDeclType	char [ 16384 ]		9723509	0					
ANR	9724238	Identifier	buffer		9723509	1					
ANR	9724239	PrimaryExpression	16384		9723509	2					
ANR	9724240	IdentifierDeclStatement	ssize_t bytes ;	201:6:5789:5803	9723509	3	True				
ANR	9724241	IdentifierDecl	bytes		9723509	0					
ANR	9724242	IdentifierDeclType	ssize_t		9723509	0					
ANR	9724243	Identifier	bytes		9723509	1					
ANR	9724244	IfStatement	"if ( ( fp = cupsFileOpen ( argv [ 3 ] , ""r"" ) ) == NULL )"		9723509	4					
ANR	9724245	Condition	"( fp = cupsFileOpen ( argv [ 3 ] , ""r"" ) ) == NULL"	203:10:5842:5882	9723509	0	True				
ANR	9724246	EqualityExpression	"( fp = cupsFileOpen ( argv [ 3 ] , ""r"" ) ) == NULL"		9723509	0		==			
ANR	9724247	AssignmentExpression	"fp = cupsFileOpen ( argv [ 3 ] , ""r"" )"		9723509	0		=			
ANR	9724248	Identifier	fp		9723509	0					
ANR	9724249	CallExpression	"cupsFileOpen ( argv [ 3 ] , ""r"" )"		9723509	1					
ANR	9724250	Callee	cupsFileOpen		9723509	0					
ANR	9724251	Identifier	cupsFileOpen		9723509	0					
ANR	9724252	ArgumentList	argv [ 3 ]		9723509	1					
ANR	9724253	Argument	argv [ 3 ]		9723509	0					
ANR	9724254	ArrayIndexing	argv [ 3 ]		9723509	0					
ANR	9724255	Identifier	argv		9723509	0					
ANR	9724256	PrimaryExpression	3		9723509	1					
ANR	9724257	Argument	"""r"""		9723509	1					
ANR	9724258	PrimaryExpression	"""r"""		9723509	0					
ANR	9724259	Identifier	NULL		9723509	1					
ANR	9724260	CompoundStatement		155:6:4587:4587	9723509	1					
ANR	9724261	ExpressionStatement	"printf ( ""Unable to open \\""%s\\"": %s\\n"" , argv [ 2 ] , strerror ( errno ) )"	205:1:5894:5957	9723509	0	True				
ANR	9724262	CallExpression	"printf ( ""Unable to open \\""%s\\"": %s\\n"" , argv [ 2 ] , strerror ( errno ) )"		9723509	0					
ANR	9724263	Callee	printf		9723509	0					
ANR	9724264	Identifier	printf		9723509	0					
ANR	9724265	ArgumentList	"""Unable to open \\""%s\\"": %s\\n"""		9723509	1					
ANR	9724266	Argument	"""Unable to open \\""%s\\"": %s\\n"""		9723509	0					
ANR	9724267	PrimaryExpression	"""Unable to open \\""%s\\"": %s\\n"""		9723509	0					
ANR	9724268	Argument	argv [ 2 ]		9723509	1					
ANR	9724269	ArrayIndexing	argv [ 2 ]		9723509	0					
ANR	9724270	Identifier	argv		9723509	0					
ANR	9724271	PrimaryExpression	2		9723509	1					
ANR	9724272	Argument	strerror ( errno )		9723509	2					
ANR	9724273	CallExpression	strerror ( errno )		9723509	0					
ANR	9724274	Callee	strerror		9723509	0					
ANR	9724275	Identifier	strerror		9723509	0					
ANR	9724276	ArgumentList	errno		9723509	1					
ANR	9724277	Argument	errno		9723509	0					
ANR	9724278	Identifier	errno		9723509	0					
ANR	9724279	ReturnStatement	return ( 1 ) ;	206:1:5960:5970	9723509	1	True				
ANR	9724280	PrimaryExpression	1		9723509	0					
ANR	9724281	IfStatement	"if ( ( job_id = cupsCreateJob ( CUPS_HTTP_DEFAULT , argv [ 2 ] , ""testcups"" , 0 , NULL ) ) <= 0 )"		9723509	5					
ANR	9724282	Condition	"( job_id = cupsCreateJob ( CUPS_HTTP_DEFAULT , argv [ 2 ] , ""testcups"" , 0 , NULL ) ) <= 0"	209:10:5991:6074	9723509	0	True				
ANR	9724283	RelationalExpression	"( job_id = cupsCreateJob ( CUPS_HTTP_DEFAULT , argv [ 2 ] , ""testcups"" , 0 , NULL ) ) <= 0"		9723509	0		<=			
ANR	9724284	AssignmentExpression	"job_id = cupsCreateJob ( CUPS_HTTP_DEFAULT , argv [ 2 ] , ""testcups"" , 0 , NULL )"		9723509	0		=			
ANR	9724285	Identifier	job_id		9723509	0					
ANR	9724286	CallExpression	"cupsCreateJob ( CUPS_HTTP_DEFAULT , argv [ 2 ] , ""testcups"" , 0 , NULL )"		9723509	1					
ANR	9724287	Callee	cupsCreateJob		9723509	0					
ANR	9724288	Identifier	cupsCreateJob		9723509	0					
ANR	9724289	ArgumentList	CUPS_HTTP_DEFAULT		9723509	1					
ANR	9724290	Argument	CUPS_HTTP_DEFAULT		9723509	0					
ANR	9724291	Identifier	CUPS_HTTP_DEFAULT		9723509	0					
ANR	9724292	Argument	argv [ 2 ]		9723509	1					
ANR	9724293	ArrayIndexing	argv [ 2 ]		9723509	0					
ANR	9724294	Identifier	argv		9723509	0					
ANR	9724295	PrimaryExpression	2		9723509	1					
ANR	9724296	Argument	"""testcups"""		9723509	2					
ANR	9724297	PrimaryExpression	"""testcups"""		9723509	0					
ANR	9724298	Argument	0		9723509	3					
ANR	9724299	PrimaryExpression	0		9723509	0					
ANR	9724300	Argument	NULL		9723509	4					
ANR	9724301	Identifier	NULL		9723509	0					
ANR	9724302	PrimaryExpression	0		9723509	1					
ANR	9724303	CompoundStatement		162:6:4779:4779	9723509	1					
ANR	9724304	ExpressionStatement	"printf ( ""Unable to create print job on %s: %s\\n"" , argv [ 1 ] , cupsLastErrorString ( ) )"	212:1:6086:6174	9723509	0	True				
ANR	9724305	CallExpression	"printf ( ""Unable to create print job on %s: %s\\n"" , argv [ 1 ] , cupsLastErrorString ( ) )"		9723509	0					
ANR	9724306	Callee	printf		9723509	0					
ANR	9724307	Identifier	printf		9723509	0					
ANR	9724308	ArgumentList	"""Unable to create print job on %s: %s\\n"""		9723509	1					
ANR	9724309	Argument	"""Unable to create print job on %s: %s\\n"""		9723509	0					
ANR	9724310	PrimaryExpression	"""Unable to create print job on %s: %s\\n"""		9723509	0					
ANR	9724311	Argument	argv [ 1 ]		9723509	1					
ANR	9724312	ArrayIndexing	argv [ 1 ]		9723509	0					
ANR	9724313	Identifier	argv		9723509	0					
ANR	9724314	PrimaryExpression	1		9723509	1					
ANR	9724315	Argument	cupsLastErrorString ( )		9723509	2					
ANR	9724316	CallExpression	cupsLastErrorString ( )		9723509	0					
ANR	9724317	Callee	cupsLastErrorString		9723509	0					
ANR	9724318	Identifier	cupsLastErrorString		9723509	0					
ANR	9724319	ArgumentList			9723509	1					
ANR	9724320	ReturnStatement	return ( 1 ) ;	214:1:6177:6187	9723509	1	True				
ANR	9724321	PrimaryExpression	1		9723509	0					
ANR	9724322	ExpressionStatement	interval = atoi ( argv [ 4 ] )	217:6:6204:6228	9723509	6	True				
ANR	9724323	AssignmentExpression	interval = atoi ( argv [ 4 ] )		9723509	0		=			
ANR	9724324	Identifier	interval		9723509	0					
ANR	9724325	CallExpression	atoi ( argv [ 4 ] )		9723509	1					
ANR	9724326	Callee	atoi		9723509	0					
ANR	9724327	Identifier	atoi		9723509	0					
ANR	9724328	ArgumentList	argv [ 4 ]		9723509	1					
ANR	9724329	Argument	argv [ 4 ]		9723509	0					
ANR	9724330	ArrayIndexing	argv [ 4 ]		9723509	0					
ANR	9724331	Identifier	argv		9723509	0					
ANR	9724332	PrimaryExpression	4		9723509	1					
ANR	9724333	IfStatement	"if ( cupsStartDocument ( CUPS_HTTP_DEFAULT , argv [ 1 ] , job_id , argv [ 2 ] , CUPS_FORMAT_AUTO , 1 ) != HTTP_STATUS_CONTINUE )"		9723509	7					
ANR	9724334	Condition	"cupsStartDocument ( CUPS_HTTP_DEFAULT , argv [ 1 ] , job_id , argv [ 2 ] , CUPS_FORMAT_AUTO , 1 ) != HTTP_STATUS_CONTINUE"	219:10:6241:6354	9723509	0	True				
ANR	9724335	EqualityExpression	"cupsStartDocument ( CUPS_HTTP_DEFAULT , argv [ 1 ] , job_id , argv [ 2 ] , CUPS_FORMAT_AUTO , 1 ) != HTTP_STATUS_CONTINUE"		9723509	0		!=			
ANR	9724336	CallExpression	"cupsStartDocument ( CUPS_HTTP_DEFAULT , argv [ 1 ] , job_id , argv [ 2 ] , CUPS_FORMAT_AUTO , 1 )"		9723509	0					
ANR	9724337	Callee	cupsStartDocument		9723509	0					
ANR	9724338	Identifier	cupsStartDocument		9723509	0					
ANR	9724339	ArgumentList	CUPS_HTTP_DEFAULT		9723509	1					
ANR	9724340	Argument	CUPS_HTTP_DEFAULT		9723509	0					
ANR	9724341	Identifier	CUPS_HTTP_DEFAULT		9723509	0					
ANR	9724342	Argument	argv [ 1 ]		9723509	1					
ANR	9724343	ArrayIndexing	argv [ 1 ]		9723509	0					
ANR	9724344	Identifier	argv		9723509	0					
ANR	9724345	PrimaryExpression	1		9723509	1					
ANR	9724346	Argument	job_id		9723509	2					
ANR	9724347	Identifier	job_id		9723509	0					
ANR	9724348	Argument	argv [ 2 ]		9723509	3					
ANR	9724349	ArrayIndexing	argv [ 2 ]		9723509	0					
ANR	9724350	Identifier	argv		9723509	0					
ANR	9724351	PrimaryExpression	2		9723509	1					
ANR	9724352	Argument	CUPS_FORMAT_AUTO		9723509	4					
ANR	9724353	Identifier	CUPS_FORMAT_AUTO		9723509	0					
ANR	9724354	Argument	1		9723509	5					
ANR	9724355	PrimaryExpression	1		9723509	0					
ANR	9724356	Identifier	HTTP_STATUS_CONTINUE		9723509	1					
ANR	9724357	CompoundStatement		172:6:5059:5059	9723509	1					
ANR	9724358	ExpressionStatement	"puts ( ""Unable to start document!"" )"	222:1:6366:6399	9723509	0	True				
ANR	9724359	CallExpression	"puts ( ""Unable to start document!"" )"		9723509	0					
ANR	9724360	Callee	puts		9723509	0					
ANR	9724361	Identifier	puts		9723509	0					
ANR	9724362	ArgumentList	"""Unable to start document!"""		9723509	1					
ANR	9724363	Argument	"""Unable to start document!"""		9723509	0					
ANR	9724364	PrimaryExpression	"""Unable to start document!"""		9723509	0					
ANR	9724365	ReturnStatement	return ( 1 ) ;	223:1:6402:6412	9723509	1	True				
ANR	9724366	PrimaryExpression	1		9723509	0					
ANR	9724367	WhileStatement	"while ( ( bytes = cupsFileRead ( fp , buffer , sizeof ( buffer ) ) ) > 0 )"		9723509	8					
ANR	9724368	Condition	"( bytes = cupsFileRead ( fp , buffer , sizeof ( buffer ) ) ) > 0"	226:13:6436:6489	9723509	0	True				
ANR	9724369	RelationalExpression	"( bytes = cupsFileRead ( fp , buffer , sizeof ( buffer ) ) ) > 0"		9723509	0		>			
ANR	9724370	AssignmentExpression	"bytes = cupsFileRead ( fp , buffer , sizeof ( buffer ) )"		9723509	0		=			
ANR	9724371	Identifier	bytes		9723509	0					
ANR	9724372	CallExpression	"cupsFileRead ( fp , buffer , sizeof ( buffer ) )"		9723509	1					
ANR	9724373	Callee	cupsFileRead		9723509	0					
ANR	9724374	Identifier	cupsFileRead		9723509	0					
ANR	9724375	ArgumentList	fp		9723509	1					
ANR	9724376	Argument	fp		9723509	0					
ANR	9724377	Identifier	fp		9723509	0					
ANR	9724378	Argument	buffer		9723509	1					
ANR	9724379	Identifier	buffer		9723509	0					
ANR	9724380	Argument	sizeof ( buffer )		9723509	2					
ANR	9724381	SizeofExpression	sizeof ( buffer )		9723509	0					
ANR	9724382	Sizeof	sizeof		9723509	0					
ANR	9724383	SizeofOperand	buffer		9723509	1					
ANR	9724384	PrimaryExpression	0		9723509	1					
ANR	9724385	CompoundStatement		178:6:5194:5194	9723509	1					
ANR	9724386	ExpressionStatement	"printf ( ""Writing %d bytes...\\n"" , ( int ) bytes )"	228:1:6501:6544	9723509	0	True				
ANR	9724387	CallExpression	"printf ( ""Writing %d bytes...\\n"" , ( int ) bytes )"		9723509	0					
ANR	9724388	Callee	printf		9723509	0					
ANR	9724389	Identifier	printf		9723509	0					
ANR	9724390	ArgumentList	"""Writing %d bytes...\\n"""		9723509	1					
ANR	9724391	Argument	"""Writing %d bytes...\\n"""		9723509	0					
ANR	9724392	PrimaryExpression	"""Writing %d bytes...\\n"""		9723509	0					
ANR	9724393	Argument	( int ) bytes		9723509	1					
ANR	9724394	CastExpression	( int ) bytes		9723509	0					
ANR	9724395	CastTarget	int		9723509	0					
ANR	9724396	Identifier	bytes		9723509	1					
ANR	9724397	IfStatement	"if ( cupsWriteRequestData ( CUPS_HTTP_DEFAULT , buffer , bytes ) != HTTP_STATUS_CONTINUE )"		9723509	1					
ANR	9724398	Condition	"cupsWriteRequestData ( CUPS_HTTP_DEFAULT , buffer , bytes ) != HTTP_STATUS_CONTINUE"	230:5:6552:6634	9723509	0	True				
ANR	9724399	EqualityExpression	"cupsWriteRequestData ( CUPS_HTTP_DEFAULT , buffer , bytes ) != HTTP_STATUS_CONTINUE"		9723509	0		!=			
ANR	9724400	CallExpression	"cupsWriteRequestData ( CUPS_HTTP_DEFAULT , buffer , bytes )"		9723509	0					
ANR	9724401	Callee	cupsWriteRequestData		9723509	0					
ANR	9724402	Identifier	cupsWriteRequestData		9723509	0					
ANR	9724403	ArgumentList	CUPS_HTTP_DEFAULT		9723509	1					
ANR	9724404	Argument	CUPS_HTTP_DEFAULT		9723509	0					
ANR	9724405	Identifier	CUPS_HTTP_DEFAULT		9723509	0					
ANR	9724406	Argument	buffer		9723509	1					
ANR	9724407	Identifier	buffer		9723509	0					
ANR	9724408	Argument	bytes		9723509	2					
ANR	9724409	Identifier	bytes		9723509	0					
ANR	9724410	Identifier	HTTP_STATUS_CONTINUE		9723509	1					
ANR	9724411	CompoundStatement		183:1:5334:5334	9723509	1					
ANR	9724412	ExpressionStatement	"puts ( ""Unable to write bytes!"" )"	233:3:6643:6673	9723509	0	True				
ANR	9724413	CallExpression	"puts ( ""Unable to write bytes!"" )"		9723509	0					
ANR	9724414	Callee	puts		9723509	0					
ANR	9724415	Identifier	puts		9723509	0					
ANR	9724416	ArgumentList	"""Unable to write bytes!"""		9723509	1					
ANR	9724417	Argument	"""Unable to write bytes!"""		9723509	0					
ANR	9724418	PrimaryExpression	"""Unable to write bytes!"""		9723509	0					
ANR	9724419	ReturnStatement	return ( 1 ) ;	234:3:6678:6688	9723509	1	True				
ANR	9724420	PrimaryExpression	1		9723509	0					
ANR	9724421	IfStatement	if ( interval > 0 )		9723509	2					
ANR	9724422	Condition	interval > 0	237:12:6706:6717	9723509	0	True				
ANR	9724423	RelationalExpression	interval > 0		9723509	0		>			
ANR	9724424	Identifier	interval		9723509	0					
ANR	9724425	PrimaryExpression	0		9723509	1					
ANR	9724426	ExpressionStatement	sleep ( interval )	238:3:6723:6738	9723509	1	True				
ANR	9724427	CallExpression	sleep ( interval )		9723509	0					
ANR	9724428	Callee	sleep		9723509	0					
ANR	9724429	Identifier	sleep		9723509	0					
ANR	9724430	ArgumentList	interval		9723509	1					
ANR	9724431	Argument	interval		9723509	0					
ANR	9724432	Identifier	interval		9723509	0					
ANR	9724433	ExpressionStatement	cupsFileClose ( fp )	241:6:6755:6772	9723509	9	True				
ANR	9724434	CallExpression	cupsFileClose ( fp )		9723509	0					
ANR	9724435	Callee	cupsFileClose		9723509	0					
ANR	9724436	Identifier	cupsFileClose		9723509	0					
ANR	9724437	ArgumentList	fp		9723509	1					
ANR	9724438	Argument	fp		9723509	0					
ANR	9724439	Identifier	fp		9723509	0					
ANR	9724440	IfStatement	"if ( cupsFinishDocument ( CUPS_HTTP_DEFAULT , argv [ 1 ] ) > IPP_STATUS_OK_IGNORED_OR_SUBSTITUTED )"		9723509	10					
ANR	9724441	Condition	"cupsFinishDocument ( CUPS_HTTP_DEFAULT , argv [ 1 ] ) > IPP_STATUS_OK_IGNORED_OR_SUBSTITUTED"	243:10:6785:6898	9723509	0	True				
ANR	9724442	RelationalExpression	"cupsFinishDocument ( CUPS_HTTP_DEFAULT , argv [ 1 ] ) > IPP_STATUS_OK_IGNORED_OR_SUBSTITUTED"		9723509	0		>			
ANR	9724443	CallExpression	"cupsFinishDocument ( CUPS_HTTP_DEFAULT , argv [ 1 ] )"		9723509	0					
ANR	9724444	Callee	cupsFinishDocument		9723509	0					
ANR	9724445	Identifier	cupsFinishDocument		9723509	0					
ANR	9724446	ArgumentList	CUPS_HTTP_DEFAULT		9723509	1					
ANR	9724447	Argument	CUPS_HTTP_DEFAULT		9723509	0					
ANR	9724448	Identifier	CUPS_HTTP_DEFAULT		9723509	0					
ANR	9724449	Argument	argv [ 1 ]		9723509	1					
ANR	9724450	ArrayIndexing	argv [ 1 ]		9723509	0					
ANR	9724451	Identifier	argv		9723509	0					
ANR	9724452	PrimaryExpression	1		9723509	1					
ANR	9724453	Identifier	IPP_STATUS_OK_IGNORED_OR_SUBSTITUTED		9723509	1					
ANR	9724454	CompoundStatement		196:6:5603:5603	9723509	1					
ANR	9724455	ExpressionStatement	"puts ( ""Unable to finish document!"" )"	246:1:6910:6944	9723509	0	True				
ANR	9724456	CallExpression	"puts ( ""Unable to finish document!"" )"		9723509	0					
ANR	9724457	Callee	puts		9723509	0					
ANR	9724458	Identifier	puts		9723509	0					
ANR	9724459	ArgumentList	"""Unable to finish document!"""		9723509	1					
ANR	9724460	Argument	"""Unable to finish document!"""		9723509	0					
ANR	9724461	PrimaryExpression	"""Unable to finish document!"""		9723509	0					
ANR	9724462	ReturnStatement	return ( 1 ) ;	247:1:6947:6957	9723509	1	True				
ANR	9724463	PrimaryExpression	1		9723509	0					
ANR	9724464	ElseStatement	else		9723509	0					
ANR	9724465	CompoundStatement		202:4:5682:5682	9723509	0					
ANR	9724466	ExpressionStatement	"puts ( ""Usage:"" )"	252:6:6994:7008	9723509	0	True				
ANR	9724467	CallExpression	"puts ( ""Usage:"" )"		9723509	0					
ANR	9724468	Callee	puts		9723509	0					
ANR	9724469	Identifier	puts		9723509	0					
ANR	9724470	ArgumentList	"""Usage:"""		9723509	1					
ANR	9724471	Argument	"""Usage:"""		9723509	0					
ANR	9724472	PrimaryExpression	"""Usage:"""		9723509	0					
ANR	9724473	ExpressionStatement	"puts ( """" )"	253:6:7016:7024	9723509	1	True				
ANR	9724474	CallExpression	"puts ( """" )"		9723509	0					
ANR	9724475	Callee	puts		9723509	0					
ANR	9724476	Identifier	puts		9723509	0					
ANR	9724477	ArgumentList	""""""		9723509	1					
ANR	9724478	Argument	""""""		9723509	0					
ANR	9724479	PrimaryExpression	""""""		9723509	0					
ANR	9724480	ExpressionStatement	"puts ( ""Run basic unit tests:"" )"	254:6:7032:7061	9723509	2	True				
ANR	9724481	CallExpression	"puts ( ""Run basic unit tests:"" )"		9723509	0					
ANR	9724482	Callee	puts		9723509	0					
ANR	9724483	Identifier	puts		9723509	0					
ANR	9724484	ArgumentList	"""Run basic unit tests:"""		9723509	1					
ANR	9724485	Argument	"""Run basic unit tests:"""		9723509	0					
ANR	9724486	PrimaryExpression	"""Run basic unit tests:"""		9723509	0					
ANR	9724487	ExpressionStatement	"puts ( """" )"	255:6:7069:7077	9723509	3	True				
ANR	9724488	CallExpression	"puts ( """" )"		9723509	0					
ANR	9724489	Callee	puts		9723509	0					
ANR	9724490	Identifier	puts		9723509	0					
ANR	9724491	ArgumentList	""""""		9723509	1					
ANR	9724492	Argument	""""""		9723509	0					
ANR	9724493	PrimaryExpression	""""""		9723509	0					
ANR	9724494	ExpressionStatement	"puts ( ""    ./testcups"" )"	256:6:7085:7107	9723509	4	True				
ANR	9724495	CallExpression	"puts ( ""    ./testcups"" )"		9723509	0					
ANR	9724496	Callee	puts		9723509	0					
ANR	9724497	Identifier	puts		9723509	0					
ANR	9724498	ArgumentList	"""    ./testcups"""		9723509	1					
ANR	9724499	Argument	"""    ./testcups"""		9723509	0					
ANR	9724500	PrimaryExpression	"""    ./testcups"""		9723509	0					
ANR	9724501	ExpressionStatement	"puts ( """" )"	257:6:7115:7123	9723509	5	True				
ANR	9724502	CallExpression	"puts ( """" )"		9723509	0					
ANR	9724503	Callee	puts		9723509	0					
ANR	9724504	Identifier	puts		9723509	0					
ANR	9724505	ArgumentList	""""""		9723509	1					
ANR	9724506	Argument	""""""		9723509	0					
ANR	9724507	PrimaryExpression	""""""		9723509	0					
ANR	9724508	ExpressionStatement	"puts ( ""Enumerate printers (for N seconds, -1 for indefinitely):"" )"	258:6:7131:7195	9723509	6	True				
ANR	9724509	CallExpression	"puts ( ""Enumerate printers (for N seconds, -1 for indefinitely):"" )"		9723509	0					
ANR	9724510	Callee	puts		9723509	0					
ANR	9724511	Identifier	puts		9723509	0					
ANR	9724512	ArgumentList	"""Enumerate printers (for N seconds, -1 for indefinitely):"""		9723509	1					
ANR	9724513	Argument	"""Enumerate printers (for N seconds, -1 for indefinitely):"""		9723509	0					
ANR	9724514	PrimaryExpression	"""Enumerate printers (for N seconds, -1 for indefinitely):"""		9723509	0					
ANR	9724515	ExpressionStatement	"puts ( """" )"	259:6:7203:7211	9723509	7	True				
ANR	9724516	CallExpression	"puts ( """" )"		9723509	0					
ANR	9724517	Callee	puts		9723509	0					
ANR	9724518	Identifier	puts		9723509	0					
ANR	9724519	ArgumentList	""""""		9723509	1					
ANR	9724520	Argument	""""""		9723509	0					
ANR	9724521	PrimaryExpression	""""""		9723509	0					
ANR	9724522	ExpressionStatement	"puts ( ""    ./testcups enum [seconds]"" )"	260:6:7219:7256	9723509	8	True				
ANR	9724523	CallExpression	"puts ( ""    ./testcups enum [seconds]"" )"		9723509	0					
ANR	9724524	Callee	puts		9723509	0					
ANR	9724525	Identifier	puts		9723509	0					
ANR	9724526	ArgumentList	"""    ./testcups enum [seconds]"""		9723509	1					
ANR	9724527	Argument	"""    ./testcups enum [seconds]"""		9723509	0					
ANR	9724528	PrimaryExpression	"""    ./testcups enum [seconds]"""		9723509	0					
ANR	9724529	ExpressionStatement	"puts ( """" )"	261:6:7264:7272	9723509	9	True				
ANR	9724530	CallExpression	"puts ( """" )"		9723509	0					
ANR	9724531	Callee	puts		9723509	0					
ANR	9724532	Identifier	puts		9723509	0					
ANR	9724533	ArgumentList	""""""		9723509	1					
ANR	9724534	Argument	""""""		9723509	0					
ANR	9724535	PrimaryExpression	""""""		9723509	0					
ANR	9724536	ExpressionStatement	"puts ( ""Ask for a password:"" )"	262:6:7280:7307	9723509	10	True				
ANR	9724537	CallExpression	"puts ( ""Ask for a password:"" )"		9723509	0					
ANR	9724538	Callee	puts		9723509	0					
ANR	9724539	Identifier	puts		9723509	0					
ANR	9724540	ArgumentList	"""Ask for a password:"""		9723509	1					
ANR	9724541	Argument	"""Ask for a password:"""		9723509	0					
ANR	9724542	PrimaryExpression	"""Ask for a password:"""		9723509	0					
ANR	9724543	ExpressionStatement	"puts ( """" )"	263:6:7315:7323	9723509	11	True				
ANR	9724544	CallExpression	"puts ( """" )"		9723509	0					
ANR	9724545	Callee	puts		9723509	0					
ANR	9724546	Identifier	puts		9723509	0					
ANR	9724547	ArgumentList	""""""		9723509	1					
ANR	9724548	Argument	""""""		9723509	0					
ANR	9724549	PrimaryExpression	""""""		9723509	0					
ANR	9724550	ExpressionStatement	"puts ( ""    ./testcups password"" )"	264:6:7331:7362	9723509	12	True				
ANR	9724551	CallExpression	"puts ( ""    ./testcups password"" )"		9723509	0					
ANR	9724552	Callee	puts		9723509	0					
ANR	9724553	Identifier	puts		9723509	0					
ANR	9724554	ArgumentList	"""    ./testcups password"""		9723509	1					
ANR	9724555	Argument	"""    ./testcups password"""		9723509	0					
ANR	9724556	PrimaryExpression	"""    ./testcups password"""		9723509	0					
ANR	9724557	ExpressionStatement	"puts ( """" )"	265:6:7370:7378	9723509	13	True				
ANR	9724558	CallExpression	"puts ( """" )"		9723509	0					
ANR	9724559	Callee	puts		9723509	0					
ANR	9724560	Identifier	puts		9723509	0					
ANR	9724561	ArgumentList	""""""		9723509	1					
ANR	9724562	Argument	""""""		9723509	0					
ANR	9724563	PrimaryExpression	""""""		9723509	0					
ANR	9724564	ExpressionStatement	"puts ( ""Get the PPD file:"" )"	266:6:7386:7411	9723509	14	True				
ANR	9724565	CallExpression	"puts ( ""Get the PPD file:"" )"		9723509	0					
ANR	9724566	Callee	puts		9723509	0					
ANR	9724567	Identifier	puts		9723509	0					
ANR	9724568	ArgumentList	"""Get the PPD file:"""		9723509	1					
ANR	9724569	Argument	"""Get the PPD file:"""		9723509	0					
ANR	9724570	PrimaryExpression	"""Get the PPD file:"""		9723509	0					
ANR	9724571	ExpressionStatement	"puts ( """" )"	267:6:7419:7427	9723509	15	True				
ANR	9724572	CallExpression	"puts ( """" )"		9723509	0					
ANR	9724573	Callee	puts		9723509	0					
ANR	9724574	Identifier	puts		9723509	0					
ANR	9724575	ArgumentList	""""""		9723509	1					
ANR	9724576	Argument	""""""		9723509	0					
ANR	9724577	PrimaryExpression	""""""		9723509	0					
ANR	9724578	ExpressionStatement	"puts ( ""    ./testcups ppd printer"" )"	268:6:7435:7469	9723509	16	True				
ANR	9724579	CallExpression	"puts ( ""    ./testcups ppd printer"" )"		9723509	0					
ANR	9724580	Callee	puts		9723509	0					
ANR	9724581	Identifier	puts		9723509	0					
ANR	9724582	ArgumentList	"""    ./testcups ppd printer"""		9723509	1					
ANR	9724583	Argument	"""    ./testcups ppd printer"""		9723509	0					
ANR	9724584	PrimaryExpression	"""    ./testcups ppd printer"""		9723509	0					
ANR	9724585	ExpressionStatement	"puts ( """" )"	269:6:7477:7485	9723509	17	True				
ANR	9724586	CallExpression	"puts ( """" )"		9723509	0					
ANR	9724587	Callee	puts		9723509	0					
ANR	9724588	Identifier	puts		9723509	0					
ANR	9724589	ArgumentList	""""""		9723509	1					
ANR	9724590	Argument	""""""		9723509	0					
ANR	9724591	PrimaryExpression	""""""		9723509	0					
ANR	9724592	ExpressionStatement	"puts ( ""Print a file (interval controls delay between buffers in seconds):"" )"	270:6:7493:7567	9723509	18	True				
ANR	9724593	CallExpression	"puts ( ""Print a file (interval controls delay between buffers in seconds):"" )"		9723509	0					
ANR	9724594	Callee	puts		9723509	0					
ANR	9724595	Identifier	puts		9723509	0					
ANR	9724596	ArgumentList	"""Print a file (interval controls delay between buffers in seconds):"""		9723509	1					
ANR	9724597	Argument	"""Print a file (interval controls delay between buffers in seconds):"""		9723509	0					
ANR	9724598	PrimaryExpression	"""Print a file (interval controls delay between buffers in seconds):"""		9723509	0					
ANR	9724599	ExpressionStatement	"puts ( """" )"	271:6:7575:7583	9723509	19	True				
ANR	9724600	CallExpression	"puts ( """" )"		9723509	0					
ANR	9724601	Callee	puts		9723509	0					
ANR	9724602	Identifier	puts		9723509	0					
ANR	9724603	ArgumentList	""""""		9723509	1					
ANR	9724604	Argument	""""""		9723509	0					
ANR	9724605	PrimaryExpression	""""""		9723509	0					
ANR	9724606	ExpressionStatement	"puts ( ""    ./testcups print printer file interval"" )"	272:6:7591:7641	9723509	20	True				
ANR	9724607	CallExpression	"puts ( ""    ./testcups print printer file interval"" )"		9723509	0					
ANR	9724608	Callee	puts		9723509	0					
ANR	9724609	Identifier	puts		9723509	0					
ANR	9724610	ArgumentList	"""    ./testcups print printer file interval"""		9723509	1					
ANR	9724611	Argument	"""    ./testcups print printer file interval"""		9723509	0					
ANR	9724612	PrimaryExpression	"""    ./testcups print printer file interval"""		9723509	0					
ANR	9724613	ReturnStatement	return ( 1 ) ;	273:6:7649:7659	9723509	21	True				
ANR	9724614	PrimaryExpression	1		9723509	0					
ANR	9724615	ReturnStatement	return ( 0 ) ;	276:4:7672:7682	9723509	1	True				
ANR	9724616	PrimaryExpression	0		9723509	0					
ANR	9724617	ExpressionStatement	"fputs ( ""cupsGetDests: "" , stdout )"	283:2:7720:7751	9723509	7	True				
ANR	9724618	CallExpression	"fputs ( ""cupsGetDests: "" , stdout )"		9723509	0					
ANR	9724619	Callee	fputs		9723509	0					
ANR	9724620	Identifier	fputs		9723509	0					
ANR	9724621	ArgumentList	"""cupsGetDests: """		9723509	1					
ANR	9724622	Argument	"""cupsGetDests: """		9723509	0					
ANR	9724623	PrimaryExpression	"""cupsGetDests: """		9723509	0					
ANR	9724624	Argument	stdout		9723509	1					
ANR	9724625	Identifier	stdout		9723509	0					
ANR	9724626	ExpressionStatement	fflush ( stdout )	284:2:7755:7769	9723509	8	True				
ANR	9724627	CallExpression	fflush ( stdout )		9723509	0					
ANR	9724628	Callee	fflush		9723509	0					
ANR	9724629	Identifier	fflush		9723509	0					
ANR	9724630	ArgumentList	stdout		9723509	1					
ANR	9724631	Argument	stdout		9723509	0					
ANR	9724632	Identifier	stdout		9723509	0					
ANR	9724633	ExpressionStatement	num_dests = cupsGetDests ( & dests )	286:2:7774:7806	9723509	9	True				
ANR	9724634	AssignmentExpression	num_dests = cupsGetDests ( & dests )		9723509	0		=			
ANR	9724635	Identifier	num_dests		9723509	0					
ANR	9724636	CallExpression	cupsGetDests ( & dests )		9723509	1					
ANR	9724637	Callee	cupsGetDests		9723509	0					
ANR	9724638	Identifier	cupsGetDests		9723509	0					
ANR	9724639	ArgumentList	& dests		9723509	1					
ANR	9724640	Argument	& dests		9723509	0					
ANR	9724641	UnaryOperationExpression	& dests		9723509	0					
ANR	9724642	UnaryOperator	&		9723509	0					
ANR	9724643	Identifier	dests		9723509	1					
ANR	9724644	IfStatement	if ( num_dests == 0 )		9723509	10					
ANR	9724645	Condition	num_dests == 0	288:6:7815:7828	9723509	0	True				
ANR	9724646	EqualityExpression	num_dests == 0		9723509	0		==			
ANR	9724647	Identifier	num_dests		9723509	0					
ANR	9724648	PrimaryExpression	0		9723509	1					
ANR	9724649	CompoundStatement		240:2:6529:6529	9723509	1					
ANR	9724650	ExpressionStatement	"puts ( ""FAIL"" )"	290:4:7839:7851	9723509	0	True				
ANR	9724651	CallExpression	"puts ( ""FAIL"" )"		9723509	0					
ANR	9724652	Callee	puts		9723509	0					
ANR	9724653	Identifier	puts		9723509	0					
ANR	9724654	ArgumentList	"""FAIL"""		9723509	1					
ANR	9724655	Argument	"""FAIL"""		9723509	0					
ANR	9724656	PrimaryExpression	"""FAIL"""		9723509	0					
ANR	9724657	ReturnStatement	return ( 1 ) ;	291:4:7857:7867	9723509	1	True				
ANR	9724658	PrimaryExpression	1		9723509	0					
ANR	9724659	ElseStatement	else		9723509	0					
ANR	9724660	CompoundStatement		245:2:6578:6578	9723509	0					
ANR	9724661	ExpressionStatement	"printf ( ""PASS (%d dests)\\n"" , num_dests )"	295:4:7888:7926	9723509	0	True				
ANR	9724662	CallExpression	"printf ( ""PASS (%d dests)\\n"" , num_dests )"		9723509	0					
ANR	9724663	Callee	printf		9723509	0					
ANR	9724664	Identifier	printf		9723509	0					
ANR	9724665	ArgumentList	"""PASS (%d dests)\\n"""		9723509	1					
ANR	9724666	Argument	"""PASS (%d dests)\\n"""		9723509	0					
ANR	9724667	PrimaryExpression	"""PASS (%d dests)\\n"""		9723509	0					
ANR	9724668	Argument	num_dests		9723509	1					
ANR	9724669	Identifier	num_dests		9723509	0					
ANR	9724670	ForStatement	"for ( i = num_dests , dest = dests ; i > 0 ; i -- , dest ++ )"		9723509	1					
ANR	9724671	ForInit	"i = num_dests , dest = dests ;"	297:9:7938:7965	9723509	0	True				
ANR	9724672	Expression	"i = num_dests , dest = dests"		9723509	0					
ANR	9724673	AssignmentExpression	i = num_dests		9723509	0		=			
ANR	9724674	Identifier	i		9723509	0					
ANR	9724675	Identifier	num_dests		9723509	1					
ANR	9724676	AssignmentExpression	dest = dests		9723509	1		=			
ANR	9724677	Identifier	dest		9723509	0					
ANR	9724678	Identifier	dests		9723509	1					
ANR	9724679	Condition	i > 0	297:38:7967:7971	9723509	1	True				
ANR	9724680	RelationalExpression	i > 0		9723509	0		>			
ANR	9724681	Identifier	i		9723509	0					
ANR	9724682	PrimaryExpression	0		9723509	1					
ANR	9724683	Expression	"i -- , dest ++"	297:45:7974:7986	9723509	2	True				
ANR	9724684	PostIncDecOperationExpression	i --		9723509	0					
ANR	9724685	Identifier	i		9723509	0					
ANR	9724686	IncDec	--		9723509	1					
ANR	9724687	PostIncDecOperationExpression	dest ++		9723509	1					
ANR	9724688	Identifier	dest		9723509	0					
ANR	9724689	IncDec	++		9723509	1					
ANR	9724690	CompoundStatement		249:4:6689:6689	9723509	3					
ANR	9724691	ExpressionStatement	"printf ( ""    %s"" , dest -> name )"	299:6:8001:8029	9723509	0	True				
ANR	9724692	CallExpression	"printf ( ""    %s"" , dest -> name )"		9723509	0					
ANR	9724693	Callee	printf		9723509	0					
ANR	9724694	Identifier	printf		9723509	0					
ANR	9724695	ArgumentList	"""    %s"""		9723509	1					
ANR	9724696	Argument	"""    %s"""		9723509	0					
ANR	9724697	PrimaryExpression	"""    %s"""		9723509	0					
ANR	9724698	Argument	dest -> name		9723509	1					
ANR	9724699	PtrMemberAccess	dest -> name		9723509	0					
ANR	9724700	Identifier	dest		9723509	0					
ANR	9724701	Identifier	name		9723509	1					
ANR	9724702	IfStatement	if ( dest -> instance )		9723509	1					
ANR	9724703	Condition	dest -> instance	301:10:8042:8055	9723509	0	True				
ANR	9724704	PtrMemberAccess	dest -> instance		9723509	0					
ANR	9724705	Identifier	dest		9723509	0					
ANR	9724706	Identifier	instance		9723509	1					
ANR	9724707	ExpressionStatement	"printf ( ""    /%s"" , dest -> instance )"	302:8:8066:8099	9723509	1	True				
ANR	9724708	CallExpression	"printf ( ""    /%s"" , dest -> instance )"		9723509	0					
ANR	9724709	Callee	printf		9723509	0					
ANR	9724710	Identifier	printf		9723509	0					
ANR	9724711	ArgumentList	"""    /%s"""		9723509	1					
ANR	9724712	Argument	"""    /%s"""		9723509	0					
ANR	9724713	PrimaryExpression	"""    /%s"""		9723509	0					
ANR	9724714	Argument	dest -> instance		9723509	1					
ANR	9724715	PtrMemberAccess	dest -> instance		9723509	0					
ANR	9724716	Identifier	dest		9723509	0					
ANR	9724717	Identifier	instance		9723509	1					
ANR	9724718	IfStatement	if ( dest -> is_default )		9723509	2					
ANR	9724719	Condition	dest -> is_default	304:10:8112:8127	9723509	0	True				
ANR	9724720	PtrMemberAccess	dest -> is_default		9723509	0					
ANR	9724721	Identifier	dest		9723509	0					
ANR	9724722	Identifier	is_default		9723509	1					
ANR	9724723	ExpressionStatement	"puts ( "" ***DEFAULT***"" )"	305:8:8138:8160	9723509	1	True				
ANR	9724724	CallExpression	"puts ( "" ***DEFAULT***"" )"		9723509	0					
ANR	9724725	Callee	puts		9723509	0					
ANR	9724726	Identifier	puts		9723509	0					
ANR	9724727	ArgumentList	""" ***DEFAULT***"""		9723509	1					
ANR	9724728	Argument	""" ***DEFAULT***"""		9723509	0					
ANR	9724729	PrimaryExpression	""" ***DEFAULT***"""		9723509	0					
ANR	9724730	ElseStatement	else		9723509	0					
ANR	9724731	ExpressionStatement	putchar ( '\\n' )	307:8:8181:8194	9723509	0	True				
ANR	9724732	CallExpression	putchar ( '\\n' )		9723509	0					
ANR	9724733	Callee	putchar		9723509	0					
ANR	9724734	Identifier	putchar		9723509	0					
ANR	9724735	ArgumentList	'\\n'		9723509	1					
ANR	9724736	Argument	'\\n'		9723509	0					
ANR	9724737	PrimaryExpression	'\\n'		9723509	0					
ANR	9724738	ExpressionStatement	"fputs ( ""cupsGetDest(NULL): "" , stdout )"	315:2:8241:8277	9723509	11	True				
ANR	9724739	CallExpression	"fputs ( ""cupsGetDest(NULL): "" , stdout )"		9723509	0					
ANR	9724740	Callee	fputs		9723509	0					
ANR	9724741	Identifier	fputs		9723509	0					
ANR	9724742	ArgumentList	"""cupsGetDest(NULL): """		9723509	1					
ANR	9724743	Argument	"""cupsGetDest(NULL): """		9723509	0					
ANR	9724744	PrimaryExpression	"""cupsGetDest(NULL): """		9723509	0					
ANR	9724745	Argument	stdout		9723509	1					
ANR	9724746	Identifier	stdout		9723509	0					
ANR	9724747	ExpressionStatement	fflush ( stdout )	316:2:8281:8295	9723509	12	True				
ANR	9724748	CallExpression	fflush ( stdout )		9723509	0					
ANR	9724749	Callee	fflush		9723509	0					
ANR	9724750	Identifier	fflush		9723509	0					
ANR	9724751	ArgumentList	stdout		9723509	1					
ANR	9724752	Argument	stdout		9723509	0					
ANR	9724753	Identifier	stdout		9723509	0					
ANR	9724754	IfStatement	"if ( ( dest = cupsGetDest ( NULL , NULL , num_dests , dests ) ) == NULL )"		9723509	13					
ANR	9724755	Condition	"( dest = cupsGetDest ( NULL , NULL , num_dests , dests ) ) == NULL"	318:6:8304:8361	9723509	0	True				
ANR	9724756	EqualityExpression	"( dest = cupsGetDest ( NULL , NULL , num_dests , dests ) ) == NULL"		9723509	0		==			
ANR	9724757	AssignmentExpression	"dest = cupsGetDest ( NULL , NULL , num_dests , dests )"		9723509	0		=			
ANR	9724758	Identifier	dest		9723509	0					
ANR	9724759	CallExpression	"cupsGetDest ( NULL , NULL , num_dests , dests )"		9723509	1					
ANR	9724760	Callee	cupsGetDest		9723509	0					
ANR	9724761	Identifier	cupsGetDest		9723509	0					
ANR	9724762	ArgumentList	NULL		9723509	1					
ANR	9724763	Argument	NULL		9723509	0					
ANR	9724764	Identifier	NULL		9723509	0					
ANR	9724765	Argument	NULL		9723509	1					
ANR	9724766	Identifier	NULL		9723509	0					
ANR	9724767	Argument	num_dests		9723509	2					
ANR	9724768	Identifier	num_dests		9723509	0					
ANR	9724769	Argument	dests		9723509	3					
ANR	9724770	Identifier	dests		9723509	0					
ANR	9724771	Identifier	NULL		9723509	1					
ANR	9724772	CompoundStatement		270:2:7062:7062	9723509	1					
ANR	9724773	ForStatement	"for ( i = num_dests , dest = dests ; i > 0 ; i -- , dest ++ )"		9723509	0					
ANR	9724774	ForInit	"i = num_dests , dest = dests ;"	320:9:8377:8404	9723509	0	True				
ANR	9724775	Expression	"i = num_dests , dest = dests"		9723509	0					
ANR	9724776	AssignmentExpression	i = num_dests		9723509	0		=			
ANR	9724777	Identifier	i		9723509	0					
ANR	9724778	Identifier	num_dests		9723509	1					
ANR	9724779	AssignmentExpression	dest = dests		9723509	1		=			
ANR	9724780	Identifier	dest		9723509	0					
ANR	9724781	Identifier	dests		9723509	1					
ANR	9724782	Condition	i > 0	320:38:8406:8410	9723509	1	True				
ANR	9724783	RelationalExpression	i > 0		9723509	0		>			
ANR	9724784	Identifier	i		9723509	0					
ANR	9724785	PrimaryExpression	0		9723509	1					
ANR	9724786	Expression	"i -- , dest ++"	320:45:8413:8425	9723509	2	True				
ANR	9724787	PostIncDecOperationExpression	i --		9723509	0					
ANR	9724788	Identifier	i		9723509	0					
ANR	9724789	IncDec	--		9723509	1					
ANR	9724790	PostIncDecOperationExpression	dest ++		9723509	1					
ANR	9724791	Identifier	dest		9723509	0					
ANR	9724792	IncDec	++		9723509	1					
ANR	9724793	IfStatement	if ( dest -> is_default )		9723509	3					
ANR	9724794	Condition	dest -> is_default	321:10:8438:8453	9723509	0	True				
ANR	9724795	PtrMemberAccess	dest -> is_default		9723509	0					
ANR	9724796	Identifier	dest		9723509	0					
ANR	9724797	Identifier	is_default		9723509	1					
ANR	9724798	BreakStatement	break ;	322:8:8464:8469	9723509	1	True				
ANR	9724799	IfStatement	if ( i )		9723509	1					
ANR	9724800	Condition	i	324:8:8480:8480	9723509	0	True				
ANR	9724801	Identifier	i		9723509	0					
ANR	9724802	CompoundStatement		276:4:7183:7183	9723509	1					
ANR	9724803	ExpressionStatement	status = 1	326:6:8495:8505	9723509	0	True				
ANR	9724804	AssignmentExpression	status = 1		9723509	0		=			
ANR	9724805	Identifier	status		9723509	0					
ANR	9724806	PrimaryExpression	1		9723509	1					
ANR	9724807	ExpressionStatement	"puts ( ""FAIL"" )"	327:6:8513:8525	9723509	1	True				
ANR	9724808	CallExpression	"puts ( ""FAIL"" )"		9723509	0					
ANR	9724809	Callee	puts		9723509	0					
ANR	9724810	Identifier	puts		9723509	0					
ANR	9724811	ArgumentList	"""FAIL"""		9723509	1					
ANR	9724812	Argument	"""FAIL"""		9723509	0					
ANR	9724813	PrimaryExpression	"""FAIL"""		9723509	0					
ANR	9724814	ElseStatement	else		9723509	0					
ANR	9724815	ExpressionStatement	"puts ( ""PASS (no default)"" )"	330:6:8548:8573	9723509	0	True				
ANR	9724816	CallExpression	"puts ( ""PASS (no default)"" )"		9723509	0					
ANR	9724817	Callee	puts		9723509	0					
ANR	9724818	Identifier	puts		9723509	0					
ANR	9724819	ArgumentList	"""PASS (no default)"""		9723509	1					
ANR	9724820	Argument	"""PASS (no default)"""		9723509	0					
ANR	9724821	PrimaryExpression	"""PASS (no default)"""		9723509	0					
ANR	9724822	ExpressionStatement	dest = NULL	332:4:8580:8591	9723509	2	True				
ANR	9724823	AssignmentExpression	dest = NULL		9723509	0		=			
ANR	9724824	Identifier	dest		9723509	0					
ANR	9724825	Identifier	NULL		9723509	1					
ANR	9724826	ElseStatement	else		9723509	0					
ANR	9724827	ExpressionStatement	"printf ( ""PASS (%s)\\n"" , dest -> name )"	335:4:8608:8641	9723509	0	True				
ANR	9724828	CallExpression	"printf ( ""PASS (%s)\\n"" , dest -> name )"		9723509	0					
ANR	9724829	Callee	printf		9723509	0					
ANR	9724830	Identifier	printf		9723509	0					
ANR	9724831	ArgumentList	"""PASS (%s)\\n"""		9723509	1					
ANR	9724832	Argument	"""PASS (%s)\\n"""		9723509	0					
ANR	9724833	PrimaryExpression	"""PASS (%s)\\n"""		9723509	0					
ANR	9724834	Argument	dest -> name		9723509	1					
ANR	9724835	PtrMemberAccess	dest -> name		9723509	0					
ANR	9724836	Identifier	dest		9723509	0					
ANR	9724837	Identifier	name		9723509	1					
ANR	9724838	ExpressionStatement	"fputs ( ""cupsGetNamedDest(NULL, NULL, NULL): "" , stdout )"	341:2:8695:8748	9723509	14	True				
ANR	9724839	CallExpression	"fputs ( ""cupsGetNamedDest(NULL, NULL, NULL): "" , stdout )"		9723509	0					
ANR	9724840	Callee	fputs		9723509	0					
ANR	9724841	Identifier	fputs		9723509	0					
ANR	9724842	ArgumentList	"""cupsGetNamedDest(NULL, NULL, NULL): """		9723509	1					
ANR	9724843	Argument	"""cupsGetNamedDest(NULL, NULL, NULL): """		9723509	0					
ANR	9724844	PrimaryExpression	"""cupsGetNamedDest(NULL, NULL, NULL): """		9723509	0					
ANR	9724845	Argument	stdout		9723509	1					
ANR	9724846	Identifier	stdout		9723509	0					
ANR	9724847	ExpressionStatement	fflush ( stdout )	342:2:8752:8766	9723509	15	True				
ANR	9724848	CallExpression	fflush ( stdout )		9723509	0					
ANR	9724849	Callee	fflush		9723509	0					
ANR	9724850	Identifier	fflush		9723509	0					
ANR	9724851	ArgumentList	stdout		9723509	1					
ANR	9724852	Argument	stdout		9723509	0					
ANR	9724853	Identifier	stdout		9723509	0					
ANR	9724854	IfStatement	"if ( ( named_dest = cupsGetNamedDest ( NULL , NULL , NULL ) ) == NULL || ! dests_equal ( dest , named_dest ) )"		9723509	16					
ANR	9724855	Condition	"( named_dest = cupsGetNamedDest ( NULL , NULL , NULL ) ) == NULL || ! dests_equal ( dest , named_dest )"	344:6:8775:8871	9723509	0	True				
ANR	9724856	OrExpression	"( named_dest = cupsGetNamedDest ( NULL , NULL , NULL ) ) == NULL || ! dests_equal ( dest , named_dest )"		9723509	0		||			
ANR	9724857	EqualityExpression	"( named_dest = cupsGetNamedDest ( NULL , NULL , NULL ) ) == NULL"		9723509	0		==			
ANR	9724858	AssignmentExpression	"named_dest = cupsGetNamedDest ( NULL , NULL , NULL )"		9723509	0		=			
ANR	9724859	Identifier	named_dest		9723509	0					
ANR	9724860	CallExpression	"cupsGetNamedDest ( NULL , NULL , NULL )"		9723509	1					
ANR	9724861	Callee	cupsGetNamedDest		9723509	0					
ANR	9724862	Identifier	cupsGetNamedDest		9723509	0					
ANR	9724863	ArgumentList	NULL		9723509	1					
ANR	9724864	Argument	NULL		9723509	0					
ANR	9724865	Identifier	NULL		9723509	0					
ANR	9724866	Argument	NULL		9723509	1					
ANR	9724867	Identifier	NULL		9723509	0					
ANR	9724868	Argument	NULL		9723509	2					
ANR	9724869	Identifier	NULL		9723509	0					
ANR	9724870	Identifier	NULL		9723509	1					
ANR	9724871	UnaryOperationExpression	"! dests_equal ( dest , named_dest )"		9723509	1					
ANR	9724872	UnaryOperator	!		9723509	0					
ANR	9724873	CallExpression	"dests_equal ( dest , named_dest )"		9723509	1					
ANR	9724874	Callee	dests_equal		9723509	0					
ANR	9724875	Identifier	dests_equal		9723509	0					
ANR	9724876	ArgumentList	dest		9723509	1					
ANR	9724877	Argument	dest		9723509	0					
ANR	9724878	Identifier	dest		9723509	0					
ANR	9724879	Argument	named_dest		9723509	1					
ANR	9724880	Identifier	named_dest		9723509	0					
ANR	9724881	CompoundStatement		297:2:7572:7572	9723509	1					
ANR	9724882	IfStatement	if ( ! dest )		9723509	0					
ANR	9724883	Condition	! dest	347:8:8886:8890	9723509	0	True				
ANR	9724884	UnaryOperationExpression	! dest		9723509	0					
ANR	9724885	UnaryOperator	!		9723509	0					
ANR	9724886	Identifier	dest		9723509	1					
ANR	9724887	ExpressionStatement	"puts ( ""PASS (no default)"" )"	348:6:8899:8924	9723509	1	True				
ANR	9724888	CallExpression	"puts ( ""PASS (no default)"" )"		9723509	0					
ANR	9724889	Callee	puts		9723509	0					
ANR	9724890	Identifier	puts		9723509	0					
ANR	9724891	ArgumentList	"""PASS (no default)"""		9723509	1					
ANR	9724892	Argument	"""PASS (no default)"""		9723509	0					
ANR	9724893	PrimaryExpression	"""PASS (no default)"""		9723509	0					
ANR	9724894	ElseStatement	else		9723509	0					
ANR	9724895	IfStatement	if ( named_dest )		9723509	0					
ANR	9724896	Condition	named_dest	349:13:8939:8948	9723509	0	True				
ANR	9724897	Identifier	named_dest		9723509	0					
ANR	9724898	CompoundStatement		301:4:7651:7651	9723509	1					
ANR	9724899	ExpressionStatement	"puts ( ""FAIL (different values)"" )"	351:6:8963:8994	9723509	0	True				
ANR	9724900	CallExpression	"puts ( ""FAIL (different values)"" )"		9723509	0					
ANR	9724901	Callee	puts		9723509	0					
ANR	9724902	Identifier	puts		9723509	0					
ANR	9724903	ArgumentList	"""FAIL (different values)"""		9723509	1					
ANR	9724904	Argument	"""FAIL (different values)"""		9723509	0					
ANR	9724905	PrimaryExpression	"""FAIL (different values)"""		9723509	0					
ANR	9724906	ExpressionStatement	"show_diffs ( dest , named_dest )"	352:6:9002:9030	9723509	1	True				
ANR	9724907	CallExpression	"show_diffs ( dest , named_dest )"		9723509	0					
ANR	9724908	Callee	show_diffs		9723509	0					
ANR	9724909	Identifier	show_diffs		9723509	0					
ANR	9724910	ArgumentList	dest		9723509	1					
ANR	9724911	Argument	dest		9723509	0					
ANR	9724912	Identifier	dest		9723509	0					
ANR	9724913	Argument	named_dest		9723509	1					
ANR	9724914	Identifier	named_dest		9723509	0					
ANR	9724915	ExpressionStatement	status = 1	353:6:9038:9048	9723509	2	True				
ANR	9724916	AssignmentExpression	status = 1		9723509	0		=			
ANR	9724917	Identifier	status		9723509	0					
ANR	9724918	PrimaryExpression	1		9723509	1					
ANR	9724919	ElseStatement	else		9723509	0					
ANR	9724920	CompoundStatement		307:4:7765:7765	9723509	0					
ANR	9724921	ExpressionStatement	"puts ( ""FAIL (no default)"" )"	357:6:9077:9102	9723509	0	True				
ANR	9724922	CallExpression	"puts ( ""FAIL (no default)"" )"		9723509	0					
ANR	9724923	Callee	puts		9723509	0					
ANR	9724924	Identifier	puts		9723509	0					
ANR	9724925	ArgumentList	"""FAIL (no default)"""		9723509	1					
ANR	9724926	Argument	"""FAIL (no default)"""		9723509	0					
ANR	9724927	PrimaryExpression	"""FAIL (no default)"""		9723509	0					
ANR	9724928	ExpressionStatement	status = 1	358:6:9110:9120	9723509	1	True				
ANR	9724929	AssignmentExpression	status = 1		9723509	0		=			
ANR	9724930	Identifier	status		9723509	0					
ANR	9724931	PrimaryExpression	1		9723509	1					
ANR	9724932	ElseStatement	else		9723509	0					
ANR	9724933	ExpressionStatement	"printf ( ""PASS (%s)\\n"" , named_dest -> name )"	362:4:9143:9182	9723509	0	True				
ANR	9724934	CallExpression	"printf ( ""PASS (%s)\\n"" , named_dest -> name )"		9723509	0					
ANR	9724935	Callee	printf		9723509	0					
ANR	9724936	Identifier	printf		9723509	0					
ANR	9724937	ArgumentList	"""PASS (%s)\\n"""		9723509	1					
ANR	9724938	Argument	"""PASS (%s)\\n"""		9723509	0					
ANR	9724939	PrimaryExpression	"""PASS (%s)\\n"""		9723509	0					
ANR	9724940	Argument	named_dest -> name		9723509	1					
ANR	9724941	PtrMemberAccess	named_dest -> name		9723509	0					
ANR	9724942	Identifier	named_dest		9723509	0					
ANR	9724943	Identifier	name		9723509	1					
ANR	9724944	IfStatement	if ( named_dest )		9723509	17					
ANR	9724945	Condition	named_dest	364:6:9191:9200	9723509	0	True				
ANR	9724946	Identifier	named_dest		9723509	0					
ANR	9724947	ExpressionStatement	"cupsFreeDests ( 1 , named_dest )"	365:4:9207:9235	9723509	1	True				
ANR	9724948	CallExpression	"cupsFreeDests ( 1 , named_dest )"		9723509	0					
ANR	9724949	Callee	cupsFreeDests		9723509	0					
ANR	9724950	Identifier	cupsFreeDests		9723509	0					
ANR	9724951	ArgumentList	1		9723509	1					
ANR	9724952	Argument	1		9723509	0					
ANR	9724953	PrimaryExpression	1		9723509	0					
ANR	9724954	Argument	named_dest		9723509	1					
ANR	9724955	Identifier	named_dest		9723509	0					
ANR	9724956	ExpressionStatement	"printf ( ""cupsGetDest(\\""%s\\""): "" , dests [ num_dests / 2 ] . name )"	371:2:9275:9333	9723509	18	True				
ANR	9724957	CallExpression	"printf ( ""cupsGetDest(\\""%s\\""): "" , dests [ num_dests / 2 ] . name )"		9723509	0					
ANR	9724958	Callee	printf		9723509	0					
ANR	9724959	Identifier	printf		9723509	0					
ANR	9724960	ArgumentList	"""cupsGetDest(\\""%s\\""): """		9723509	1					
ANR	9724961	Argument	"""cupsGetDest(\\""%s\\""): """		9723509	0					
ANR	9724962	PrimaryExpression	"""cupsGetDest(\\""%s\\""): """		9723509	0					
ANR	9724963	Argument	dests [ num_dests / 2 ] . name		9723509	1					
ANR	9724964	MemberAccess	dests [ num_dests / 2 ] . name		9723509	0					
ANR	9724965	ArrayIndexing	dests [ num_dests / 2 ]		9723509	0					
ANR	9724966	Identifier	dests		9723509	0					
ANR	9724967	MultiplicativeExpression	num_dests / 2		9723509	1		/			
ANR	9724968	Identifier	num_dests		9723509	0					
ANR	9724969	PrimaryExpression	2		9723509	1					
ANR	9724970	Identifier	name		9723509	1					
ANR	9724971	ExpressionStatement	fflush ( stdout )	372:2:9337:9351	9723509	19	True				
ANR	9724972	CallExpression	fflush ( stdout )		9723509	0					
ANR	9724973	Callee	fflush		9723509	0					
ANR	9724974	Identifier	fflush		9723509	0					
ANR	9724975	ArgumentList	stdout		9723509	1					
ANR	9724976	Argument	stdout		9723509	0					
ANR	9724977	Identifier	stdout		9723509	0					
ANR	9724978	IfStatement	"if ( ( dest = cupsGetDest ( dests [ num_dests / 2 ] . name , NULL , num_dests , dests ) ) == NULL )"		9723509	20					
ANR	9724979	Condition	"( dest = cupsGetDest ( dests [ num_dests / 2 ] . name , NULL , num_dests , dests ) ) == NULL"	374:6:9360:9464	9723509	0	True				
ANR	9724980	EqualityExpression	"( dest = cupsGetDest ( dests [ num_dests / 2 ] . name , NULL , num_dests , dests ) ) == NULL"		9723509	0		==			
ANR	9724981	AssignmentExpression	"dest = cupsGetDest ( dests [ num_dests / 2 ] . name , NULL , num_dests , dests )"		9723509	0		=			
ANR	9724982	Identifier	dest		9723509	0					
ANR	9724983	CallExpression	"cupsGetDest ( dests [ num_dests / 2 ] . name , NULL , num_dests , dests )"		9723509	1					
ANR	9724984	Callee	cupsGetDest		9723509	0					
ANR	9724985	Identifier	cupsGetDest		9723509	0					
ANR	9724986	ArgumentList	dests [ num_dests / 2 ] . name		9723509	1					
ANR	9724987	Argument	dests [ num_dests / 2 ] . name		9723509	0					
ANR	9724988	MemberAccess	dests [ num_dests / 2 ] . name		9723509	0					
ANR	9724989	ArrayIndexing	dests [ num_dests / 2 ]		9723509	0					
ANR	9724990	Identifier	dests		9723509	0					
ANR	9724991	MultiplicativeExpression	num_dests / 2		9723509	1		/			
ANR	9724992	Identifier	num_dests		9723509	0					
ANR	9724993	PrimaryExpression	2		9723509	1					
ANR	9724994	Identifier	name		9723509	1					
ANR	9724995	Argument	NULL		9723509	1					
ANR	9724996	Identifier	NULL		9723509	0					
ANR	9724997	Argument	num_dests		9723509	2					
ANR	9724998	Identifier	num_dests		9723509	0					
ANR	9724999	Argument	dests		9723509	3					
ANR	9725000	Identifier	dests		9723509	0					
ANR	9725001	Identifier	NULL		9723509	1					
ANR	9725002	CompoundStatement		327:2:8165:8165	9723509	1					
ANR	9725003	ExpressionStatement	"puts ( ""FAIL"" )"	377:4:9475:9487	9723509	0	True				
ANR	9725004	CallExpression	"puts ( ""FAIL"" )"		9723509	0					
ANR	9725005	Callee	puts		9723509	0					
ANR	9725006	Identifier	puts		9723509	0					
ANR	9725007	ArgumentList	"""FAIL"""		9723509	1					
ANR	9725008	Argument	"""FAIL"""		9723509	0					
ANR	9725009	PrimaryExpression	"""FAIL"""		9723509	0					
ANR	9725010	ReturnStatement	return ( 1 ) ;	378:4:9493:9503	9723509	1	True				
ANR	9725011	PrimaryExpression	1		9723509	0					
ANR	9725012	ElseStatement	else		9723509	0					
ANR	9725013	ExpressionStatement	"puts ( ""PASS"" )"	381:4:9520:9532	9723509	0	True				
ANR	9725014	CallExpression	"puts ( ""PASS"" )"		9723509	0					
ANR	9725015	Callee	puts		9723509	0					
ANR	9725016	Identifier	puts		9723509	0					
ANR	9725017	ArgumentList	"""PASS"""		9723509	1					
ANR	9725018	Argument	"""PASS"""		9723509	0					
ANR	9725019	PrimaryExpression	"""PASS"""		9723509	0					
ANR	9725020	ExpressionStatement	"printf ( ""cupsGetNamedDest(NULL, \\""%s\\"", \\""%s\\""): "" , dest -> name , dest -> instance ? dest -> instance : ""(null)"" )"	387:2:9593:9708	9723509	21	True				
ANR	9725021	CallExpression	"printf ( ""cupsGetNamedDest(NULL, \\""%s\\"", \\""%s\\""): "" , dest -> name , dest -> instance ? dest -> instance : ""(null)"" )"		9723509	0					
ANR	9725022	Callee	printf		9723509	0					
ANR	9725023	Identifier	printf		9723509	0					
ANR	9725024	ArgumentList	"""cupsGetNamedDest(NULL, \\""%s\\"", \\""%s\\""): """		9723509	1					
ANR	9725025	Argument	"""cupsGetNamedDest(NULL, \\""%s\\"", \\""%s\\""): """		9723509	0					
ANR	9725026	PrimaryExpression	"""cupsGetNamedDest(NULL, \\""%s\\"", \\""%s\\""): """		9723509	0					
ANR	9725027	Argument	dest -> name		9723509	1					
ANR	9725028	PtrMemberAccess	dest -> name		9723509	0					
ANR	9725029	Identifier	dest		9723509	0					
ANR	9725030	Identifier	name		9723509	1					
ANR	9725031	Argument	"dest -> instance ? dest -> instance : ""(null)"""		9723509	2					
ANR	9725032	ConditionalExpression	"dest -> instance ? dest -> instance : ""(null)"""		9723509	0					
ANR	9725033	Condition	dest -> instance		9723509	0					
ANR	9725034	PtrMemberAccess	dest -> instance		9723509	0					
ANR	9725035	Identifier	dest		9723509	0					
ANR	9725036	Identifier	instance		9723509	1					
ANR	9725037	PtrMemberAccess	dest -> instance		9723509	1					
ANR	9725038	Identifier	dest		9723509	0					
ANR	9725039	Identifier	instance		9723509	1					
ANR	9725040	PrimaryExpression	"""(null)"""		9723509	2					
ANR	9725041	ExpressionStatement	fflush ( stdout )	389:2:9712:9726	9723509	22	True				
ANR	9725042	CallExpression	fflush ( stdout )		9723509	0					
ANR	9725043	Callee	fflush		9723509	0					
ANR	9725044	Identifier	fflush		9723509	0					
ANR	9725045	ArgumentList	stdout		9723509	1					
ANR	9725046	Argument	stdout		9723509	0					
ANR	9725047	Identifier	stdout		9723509	0					
ANR	9725048	IfStatement	"if ( ( named_dest = cupsGetNamedDest ( NULL , dest -> name , dest -> instance ) ) == NULL || ! dests_equal ( dest , named_dest ) )"		9723509	23					
ANR	9725049	Condition	"( named_dest = cupsGetNamedDest ( NULL , dest -> name , dest -> instance ) ) == NULL || ! dests_equal ( dest , named_dest )"	391:6:9735:9884	9723509	0	True				
ANR	9725050	OrExpression	"( named_dest = cupsGetNamedDest ( NULL , dest -> name , dest -> instance ) ) == NULL || ! dests_equal ( dest , named_dest )"		9723509	0		||			
ANR	9725051	EqualityExpression	"( named_dest = cupsGetNamedDest ( NULL , dest -> name , dest -> instance ) ) == NULL"		9723509	0		==			
ANR	9725052	AssignmentExpression	"named_dest = cupsGetNamedDest ( NULL , dest -> name , dest -> instance )"		9723509	0		=			
ANR	9725053	Identifier	named_dest		9723509	0					
ANR	9725054	CallExpression	"cupsGetNamedDest ( NULL , dest -> name , dest -> instance )"		9723509	1					
ANR	9725055	Callee	cupsGetNamedDest		9723509	0					
ANR	9725056	Identifier	cupsGetNamedDest		9723509	0					
ANR	9725057	ArgumentList	NULL		9723509	1					
ANR	9725058	Argument	NULL		9723509	0					
ANR	9725059	Identifier	NULL		9723509	0					
ANR	9725060	Argument	dest -> name		9723509	1					
ANR	9725061	PtrMemberAccess	dest -> name		9723509	0					
ANR	9725062	Identifier	dest		9723509	0					
ANR	9725063	Identifier	name		9723509	1					
ANR	9725064	Argument	dest -> instance		9723509	2					
ANR	9725065	PtrMemberAccess	dest -> instance		9723509	0					
ANR	9725066	Identifier	dest		9723509	0					
ANR	9725067	Identifier	instance		9723509	1					
ANR	9725068	Identifier	NULL		9723509	1					
ANR	9725069	UnaryOperationExpression	"! dests_equal ( dest , named_dest )"		9723509	1					
ANR	9725070	UnaryOperator	!		9723509	0					
ANR	9725071	CallExpression	"dests_equal ( dest , named_dest )"		9723509	1					
ANR	9725072	Callee	dests_equal		9723509	0					
ANR	9725073	Identifier	dests_equal		9723509	0					
ANR	9725074	ArgumentList	dest		9723509	1					
ANR	9725075	Argument	dest		9723509	0					
ANR	9725076	Identifier	dest		9723509	0					
ANR	9725077	Argument	named_dest		9723509	1					
ANR	9725078	Identifier	named_dest		9723509	0					
ANR	9725079	CompoundStatement		345:2:8585:8585	9723509	1					
ANR	9725080	IfStatement	if ( named_dest )		9723509	0					
ANR	9725081	Condition	named_dest	395:8:9899:9908	9723509	0	True				
ANR	9725082	Identifier	named_dest		9723509	0					
ANR	9725083	CompoundStatement		347:4:8611:8611	9723509	1					
ANR	9725084	ExpressionStatement	"puts ( ""FAIL (different values)"" )"	397:6:9923:9954	9723509	0	True				
ANR	9725085	CallExpression	"puts ( ""FAIL (different values)"" )"		9723509	0					
ANR	9725086	Callee	puts		9723509	0					
ANR	9725087	Identifier	puts		9723509	0					
ANR	9725088	ArgumentList	"""FAIL (different values)"""		9723509	1					
ANR	9725089	Argument	"""FAIL (different values)"""		9723509	0					
ANR	9725090	PrimaryExpression	"""FAIL (different values)"""		9723509	0					
ANR	9725091	ExpressionStatement	"show_diffs ( dest , named_dest )"	398:6:9962:9990	9723509	1	True				
ANR	9725092	CallExpression	"show_diffs ( dest , named_dest )"		9723509	0					
ANR	9725093	Callee	show_diffs		9723509	0					
ANR	9725094	Identifier	show_diffs		9723509	0					
ANR	9725095	ArgumentList	dest		9723509	1					
ANR	9725096	Argument	dest		9723509	0					
ANR	9725097	Identifier	dest		9723509	0					
ANR	9725098	Argument	named_dest		9723509	1					
ANR	9725099	Identifier	named_dest		9723509	0					
ANR	9725100	ElseStatement	else		9723509	0					
ANR	9725101	ExpressionStatement	"puts ( ""FAIL (no destination)"" )"	401:6:10013:10042	9723509	0	True				
ANR	9725102	CallExpression	"puts ( ""FAIL (no destination)"" )"		9723509	0					
ANR	9725103	Callee	puts		9723509	0					
ANR	9725104	Identifier	puts		9723509	0					
ANR	9725105	ArgumentList	"""FAIL (no destination)"""		9723509	1					
ANR	9725106	Argument	"""FAIL (no destination)"""		9723509	0					
ANR	9725107	PrimaryExpression	"""FAIL (no destination)"""		9723509	0					
ANR	9725108	ExpressionStatement	status = 1	404:4:10050:10060	9723509	1	True				
ANR	9725109	AssignmentExpression	status = 1		9723509	0		=			
ANR	9725110	Identifier	status		9723509	0					
ANR	9725111	PrimaryExpression	1		9723509	1					
ANR	9725112	ElseStatement	else		9723509	0					
ANR	9725113	ExpressionStatement	"puts ( ""PASS"" )"	407:4:10077:10089	9723509	0	True				
ANR	9725114	CallExpression	"puts ( ""PASS"" )"		9723509	0					
ANR	9725115	Callee	puts		9723509	0					
ANR	9725116	Identifier	puts		9723509	0					
ANR	9725117	ArgumentList	"""PASS"""		9723509	1					
ANR	9725118	Argument	"""PASS"""		9723509	0					
ANR	9725119	PrimaryExpression	"""PASS"""		9723509	0					
ANR	9725120	IfStatement	if ( named_dest )		9723509	24					
ANR	9725121	Condition	named_dest	409:6:10098:10107	9723509	0	True				
ANR	9725122	Identifier	named_dest		9723509	0					
ANR	9725123	ExpressionStatement	"cupsFreeDests ( 1 , named_dest )"	410:4:10114:10142	9723509	1	True				
ANR	9725124	CallExpression	"cupsFreeDests ( 1 , named_dest )"		9723509	0					
ANR	9725125	Callee	cupsFreeDests		9723509	0					
ANR	9725126	Identifier	cupsFreeDests		9723509	0					
ANR	9725127	ArgumentList	1		9723509	1					
ANR	9725128	Argument	1		9723509	0					
ANR	9725129	PrimaryExpression	1		9723509	0					
ANR	9725130	Argument	named_dest		9723509	1					
ANR	9725131	Identifier	named_dest		9723509	0					
ANR	9725132	ExpressionStatement	"fputs ( ""cupsPrintFile: "" , stdout )"	416:2:10177:10209	9723509	25	True				
ANR	9725133	CallExpression	"fputs ( ""cupsPrintFile: "" , stdout )"		9723509	0					
ANR	9725134	Callee	fputs		9723509	0					
ANR	9725135	Identifier	fputs		9723509	0					
ANR	9725136	ArgumentList	"""cupsPrintFile: """		9723509	1					
ANR	9725137	Argument	"""cupsPrintFile: """		9723509	0					
ANR	9725138	PrimaryExpression	"""cupsPrintFile: """		9723509	0					
ANR	9725139	Argument	stdout		9723509	1					
ANR	9725140	Identifier	stdout		9723509	0					
ANR	9725141	ExpressionStatement	fflush ( stdout )	417:2:10213:10227	9723509	26	True				
ANR	9725142	CallExpression	fflush ( stdout )		9723509	0					
ANR	9725143	Callee	fflush		9723509	0					
ANR	9725144	Identifier	fflush		9723509	0					
ANR	9725145	ArgumentList	stdout		9723509	1					
ANR	9725146	Argument	stdout		9723509	0					
ANR	9725147	Identifier	stdout		9723509	0					
ANR	9725148	IfStatement	"if ( cupsPrintFile ( dest -> name , ""../data/testprint"" , ""Test Page"" , dest -> num_options , dest -> options ) <= 0 )"		9723509	27					
ANR	9725149	Condition	"cupsPrintFile ( dest -> name , ""../data/testprint"" , ""Test Page"" , dest -> num_options , dest -> options ) <= 0"	419:6:10236:10353	9723509	0	True				
ANR	9725150	RelationalExpression	"cupsPrintFile ( dest -> name , ""../data/testprint"" , ""Test Page"" , dest -> num_options , dest -> options ) <= 0"		9723509	0		<=			
ANR	9725151	CallExpression	"cupsPrintFile ( dest -> name , ""../data/testprint"" , ""Test Page"" , dest -> num_options , dest -> options )"		9723509	0					
ANR	9725152	Callee	cupsPrintFile		9723509	0					
ANR	9725153	Identifier	cupsPrintFile		9723509	0					
ANR	9725154	ArgumentList	dest -> name		9723509	1					
ANR	9725155	Argument	dest -> name		9723509	0					
ANR	9725156	PtrMemberAccess	dest -> name		9723509	0					
ANR	9725157	Identifier	dest		9723509	0					
ANR	9725158	Identifier	name		9723509	1					
ANR	9725159	Argument	"""../data/testprint"""		9723509	1					
ANR	9725160	PrimaryExpression	"""../data/testprint"""		9723509	0					
ANR	9725161	Argument	"""Test Page"""		9723509	2					
ANR	9725162	PrimaryExpression	"""Test Page"""		9723509	0					
ANR	9725163	Argument	dest -> num_options		9723509	3					
ANR	9725164	PtrMemberAccess	dest -> num_options		9723509	0					
ANR	9725165	Identifier	dest		9723509	0					
ANR	9725166	Identifier	num_options		9723509	1					
ANR	9725167	Argument	dest -> options		9723509	4					
ANR	9725168	PtrMemberAccess	dest -> options		9723509	0					
ANR	9725169	Identifier	dest		9723509	0					
ANR	9725170	Identifier	options		9723509	1					
ANR	9725171	PrimaryExpression	0		9723509	1					
ANR	9725172	CompoundStatement		372:2:9054:9054	9723509	1					
ANR	9725173	ExpressionStatement	"printf ( ""FAIL (%s)\\n"" , cupsLastErrorString ( ) )"	422:4:10364:10408	9723509	0	True				
ANR	9725174	CallExpression	"printf ( ""FAIL (%s)\\n"" , cupsLastErrorString ( ) )"		9723509	0					
ANR	9725175	Callee	printf		9723509	0					
ANR	9725176	Identifier	printf		9723509	0					
ANR	9725177	ArgumentList	"""FAIL (%s)\\n"""		9723509	1					
ANR	9725178	Argument	"""FAIL (%s)\\n"""		9723509	0					
ANR	9725179	PrimaryExpression	"""FAIL (%s)\\n"""		9723509	0					
ANR	9725180	Argument	cupsLastErrorString ( )		9723509	1					
ANR	9725181	CallExpression	cupsLastErrorString ( )		9723509	0					
ANR	9725182	Callee	cupsLastErrorString		9723509	0					
ANR	9725183	Identifier	cupsLastErrorString		9723509	0					
ANR	9725184	ArgumentList			9723509	1					
ANR	9725185	ReturnStatement	return ( 1 ) ;	423:4:10414:10424	9723509	1	True				
ANR	9725186	PrimaryExpression	1		9723509	0					
ANR	9725187	ElseStatement	else		9723509	0					
ANR	9725188	ExpressionStatement	"puts ( ""PASS"" )"	426:4:10441:10453	9723509	0	True				
ANR	9725189	CallExpression	"puts ( ""PASS"" )"		9723509	0					
ANR	9725190	Callee	puts		9723509	0					
ANR	9725191	Identifier	puts		9723509	0					
ANR	9725192	ArgumentList	"""PASS"""		9723509	1					
ANR	9725193	Argument	"""PASS"""		9723509	0					
ANR	9725194	PrimaryExpression	"""PASS"""		9723509	0					
ANR	9725195	ExpressionStatement	"fputs ( ""cupsGetPPD(): "" , stdout )"	432:2:10492:10523	9723509	28	True				
ANR	9725196	CallExpression	"fputs ( ""cupsGetPPD(): "" , stdout )"		9723509	0					
ANR	9725197	Callee	fputs		9723509	0					
ANR	9725198	Identifier	fputs		9723509	0					
ANR	9725199	ArgumentList	"""cupsGetPPD(): """		9723509	1					
ANR	9725200	Argument	"""cupsGetPPD(): """		9723509	0					
ANR	9725201	PrimaryExpression	"""cupsGetPPD(): """		9723509	0					
ANR	9725202	Argument	stdout		9723509	1					
ANR	9725203	Identifier	stdout		9723509	0					
ANR	9725204	ExpressionStatement	fflush ( stdout )	433:2:10527:10541	9723509	29	True				
ANR	9725205	CallExpression	fflush ( stdout )		9723509	0					
ANR	9725206	Callee	fflush		9723509	0					
ANR	9725207	Identifier	fflush		9723509	0					
ANR	9725208	ArgumentList	stdout		9723509	1					
ANR	9725209	Argument	stdout		9723509	0					
ANR	9725210	Identifier	stdout		9723509	0					
ANR	9725211	IfStatement	if ( ( ppdfile = cupsGetPPD ( dest -> name ) ) == NULL )		9723509	30					
ANR	9725212	Condition	( ppdfile = cupsGetPPD ( dest -> name ) ) == NULL	435:6:10550:10591	9723509	0	True				
ANR	9725213	EqualityExpression	( ppdfile = cupsGetPPD ( dest -> name ) ) == NULL		9723509	0		==			
ANR	9725214	AssignmentExpression	ppdfile = cupsGetPPD ( dest -> name )		9723509	0		=			
ANR	9725215	Identifier	ppdfile		9723509	0					
ANR	9725216	CallExpression	cupsGetPPD ( dest -> name )		9723509	1					
ANR	9725217	Callee	cupsGetPPD		9723509	0					
ANR	9725218	Identifier	cupsGetPPD		9723509	0					
ANR	9725219	ArgumentList	dest -> name		9723509	1					
ANR	9725220	Argument	dest -> name		9723509	0					
ANR	9725221	PtrMemberAccess	dest -> name		9723509	0					
ANR	9725222	Identifier	dest		9723509	0					
ANR	9725223	Identifier	name		9723509	1					
ANR	9725224	Identifier	NULL		9723509	1					
ANR	9725225	CompoundStatement		387:2:9292:9292	9723509	1					
ANR	9725226	ExpressionStatement	"puts ( ""FAIL"" )"	437:4:10602:10614	9723509	0	True				
ANR	9725227	CallExpression	"puts ( ""FAIL"" )"		9723509	0					
ANR	9725228	Callee	puts		9723509	0					
ANR	9725229	Identifier	puts		9723509	0					
ANR	9725230	ArgumentList	"""FAIL"""		9723509	1					
ANR	9725231	Argument	"""FAIL"""		9723509	0					
ANR	9725232	PrimaryExpression	"""FAIL"""		9723509	0					
ANR	9725233	ElseStatement	else		9723509	0					
ANR	9725234	CompoundStatement		391:2:9325:9325	9723509	0					
ANR	9725235	ExpressionStatement	"puts ( ""PASS"" )"	441:4:10635:10647	9723509	0	True				
ANR	9725236	CallExpression	"puts ( ""PASS"" )"		9723509	0					
ANR	9725237	Callee	puts		9723509	0					
ANR	9725238	Identifier	puts		9723509	0					
ANR	9725239	ArgumentList	"""PASS"""		9723509	1					
ANR	9725240	Argument	"""PASS"""		9723509	0					
ANR	9725241	PrimaryExpression	"""PASS"""		9723509	0					
ANR	9725242	ExpressionStatement	"fputs ( ""ppdOpenFile(): "" , stdout )"	447:4:10688:10720	9723509	1	True				
ANR	9725243	CallExpression	"fputs ( ""ppdOpenFile(): "" , stdout )"		9723509	0					
ANR	9725244	Callee	fputs		9723509	0					
ANR	9725245	Identifier	fputs		9723509	0					
ANR	9725246	ArgumentList	"""ppdOpenFile(): """		9723509	1					
ANR	9725247	Argument	"""ppdOpenFile(): """		9723509	0					
ANR	9725248	PrimaryExpression	"""ppdOpenFile(): """		9723509	0					
ANR	9725249	Argument	stdout		9723509	1					
ANR	9725250	Identifier	stdout		9723509	0					
ANR	9725251	ExpressionStatement	fflush ( stdout )	448:4:10726:10740	9723509	2	True				
ANR	9725252	CallExpression	fflush ( stdout )		9723509	0					
ANR	9725253	Callee	fflush		9723509	0					
ANR	9725254	Identifier	fflush		9723509	0					
ANR	9725255	ArgumentList	stdout		9723509	1					
ANR	9725256	Argument	stdout		9723509	0					
ANR	9725257	Identifier	stdout		9723509	0					
ANR	9725258	IfStatement	if ( ( ppd = ppdOpenFile ( ppdfile ) ) == NULL )		9723509	3					
ANR	9725259	Condition	( ppd = ppdOpenFile ( ppdfile ) ) == NULL	450:8:10751:10786	9723509	0	True				
ANR	9725260	EqualityExpression	( ppd = ppdOpenFile ( ppdfile ) ) == NULL		9723509	0		==			
ANR	9725261	AssignmentExpression	ppd = ppdOpenFile ( ppdfile )		9723509	0		=			
ANR	9725262	Identifier	ppd		9723509	0					
ANR	9725263	CallExpression	ppdOpenFile ( ppdfile )		9723509	1					
ANR	9725264	Callee	ppdOpenFile		9723509	0					
ANR	9725265	Identifier	ppdOpenFile		9723509	0					
ANR	9725266	ArgumentList	ppdfile		9723509	1					
ANR	9725267	Argument	ppdfile		9723509	0					
ANR	9725268	Identifier	ppdfile		9723509	0					
ANR	9725269	Identifier	NULL		9723509	1					
ANR	9725270	CompoundStatement		402:4:9489:9489	9723509	1					
ANR	9725271	ExpressionStatement	"puts ( ""FAIL"" )"	452:6:10801:10813	9723509	0	True				
ANR	9725272	CallExpression	"puts ( ""FAIL"" )"		9723509	0					
ANR	9725273	Callee	puts		9723509	0					
ANR	9725274	Identifier	puts		9723509	0					
ANR	9725275	ArgumentList	"""FAIL"""		9723509	1					
ANR	9725276	Argument	"""FAIL"""		9723509	0					
ANR	9725277	PrimaryExpression	"""FAIL"""		9723509	0					
ANR	9725278	ReturnStatement	return ( 1 ) ;	453:6:10821:10831	9723509	1	True				
ANR	9725279	PrimaryExpression	1		9723509	0					
ANR	9725280	ElseStatement	else		9723509	0					
ANR	9725281	ExpressionStatement	"puts ( ""PASS"" )"	456:6:10854:10866	9723509	0	True				
ANR	9725282	CallExpression	"puts ( ""PASS"" )"		9723509	0					
ANR	9725283	Callee	puts		9723509	0					
ANR	9725284	Identifier	puts		9723509	0					
ANR	9725285	ArgumentList	"""PASS"""		9723509	1					
ANR	9725286	Argument	"""PASS"""		9723509	0					
ANR	9725287	PrimaryExpression	"""PASS"""		9723509	0					
ANR	9725288	ExpressionStatement	ppdClose ( ppd )	458:4:10873:10886	9723509	4	True				
ANR	9725289	CallExpression	ppdClose ( ppd )		9723509	0					
ANR	9725290	Callee	ppdClose		9723509	0					
ANR	9725291	Identifier	ppdClose		9723509	0					
ANR	9725292	ArgumentList	ppd		9723509	1					
ANR	9725293	Argument	ppd		9723509	0					
ANR	9725294	Identifier	ppd		9723509	0					
ANR	9725295	ExpressionStatement	unlink ( ppdfile )	459:4:10892:10907	9723509	5	True				
ANR	9725296	CallExpression	unlink ( ppdfile )		9723509	0					
ANR	9725297	Callee	unlink		9723509	0					
ANR	9725298	Identifier	unlink		9723509	0					
ANR	9725299	ArgumentList	ppdfile		9723509	1					
ANR	9725300	Argument	ppdfile		9723509	0					
ANR	9725301	Identifier	ppdfile		9723509	0					
ANR	9725302	ExpressionStatement	"fputs ( ""cupsGetJobs: "" , stdout )"	466:2:10944:10974	9723509	31	True				
ANR	9725303	CallExpression	"fputs ( ""cupsGetJobs: "" , stdout )"		9723509	0					
ANR	9725304	Callee	fputs		9723509	0					
ANR	9725305	Identifier	fputs		9723509	0					
ANR	9725306	ArgumentList	"""cupsGetJobs: """		9723509	1					
ANR	9725307	Argument	"""cupsGetJobs: """		9723509	0					
ANR	9725308	PrimaryExpression	"""cupsGetJobs: """		9723509	0					
ANR	9725309	Argument	stdout		9723509	1					
ANR	9725310	Identifier	stdout		9723509	0					
ANR	9725311	ExpressionStatement	fflush ( stdout )	467:2:10978:10992	9723509	32	True				
ANR	9725312	CallExpression	fflush ( stdout )		9723509	0					
ANR	9725313	Callee	fflush		9723509	0					
ANR	9725314	Identifier	fflush		9723509	0					
ANR	9725315	ArgumentList	stdout		9723509	1					
ANR	9725316	Argument	stdout		9723509	0					
ANR	9725317	Identifier	stdout		9723509	0					
ANR	9725318	ExpressionStatement	"num_jobs = cupsGetJobs ( & jobs , NULL , 0 , - 1 )"	469:2:10997:11039	9723509	33	True				
ANR	9725319	AssignmentExpression	"num_jobs = cupsGetJobs ( & jobs , NULL , 0 , - 1 )"		9723509	0		=			
ANR	9725320	Identifier	num_jobs		9723509	0					
ANR	9725321	CallExpression	"cupsGetJobs ( & jobs , NULL , 0 , - 1 )"		9723509	1					
ANR	9725322	Callee	cupsGetJobs		9723509	0					
ANR	9725323	Identifier	cupsGetJobs		9723509	0					
ANR	9725324	ArgumentList	& jobs		9723509	1					
ANR	9725325	Argument	& jobs		9723509	0					
ANR	9725326	UnaryOperationExpression	& jobs		9723509	0					
ANR	9725327	UnaryOperator	&		9723509	0					
ANR	9725328	Identifier	jobs		9723509	1					
ANR	9725329	Argument	NULL		9723509	1					
ANR	9725330	Identifier	NULL		9723509	0					
ANR	9725331	Argument	0		9723509	2					
ANR	9725332	PrimaryExpression	0		9723509	0					
ANR	9725333	Argument	- 1		9723509	3					
ANR	9725334	UnaryOperationExpression	- 1		9723509	0					
ANR	9725335	UnaryOperator	-		9723509	0					
ANR	9725336	PrimaryExpression	1		9723509	1					
ANR	9725337	IfStatement	if ( num_jobs == 0 )		9723509	34					
ANR	9725338	Condition	num_jobs == 0	471:6:11048:11060	9723509	0	True				
ANR	9725339	EqualityExpression	num_jobs == 0		9723509	0		==			
ANR	9725340	Identifier	num_jobs		9723509	0					
ANR	9725341	PrimaryExpression	0		9723509	1					
ANR	9725342	CompoundStatement		423:2:9761:9761	9723509	1					
ANR	9725343	ExpressionStatement	"puts ( ""FAIL"" )"	473:4:11071:11083	9723509	0	True				
ANR	9725344	CallExpression	"puts ( ""FAIL"" )"		9723509	0					
ANR	9725345	Callee	puts		9723509	0					
ANR	9725346	Identifier	puts		9723509	0					
ANR	9725347	ArgumentList	"""FAIL"""		9723509	1					
ANR	9725348	Argument	"""FAIL"""		9723509	0					
ANR	9725349	PrimaryExpression	"""FAIL"""		9723509	0					
ANR	9725350	ReturnStatement	return ( 1 ) ;	474:4:11089:11099	9723509	1	True				
ANR	9725351	PrimaryExpression	1		9723509	0					
ANR	9725352	ElseStatement	else		9723509	0					
ANR	9725353	ExpressionStatement	"puts ( ""PASS"" )"	477:4:11116:11128	9723509	0	True				
ANR	9725354	CallExpression	"puts ( ""PASS"" )"		9723509	0					
ANR	9725355	Callee	puts		9723509	0					
ANR	9725356	Identifier	puts		9723509	0					
ANR	9725357	ArgumentList	"""PASS"""		9723509	1					
ANR	9725358	Argument	"""PASS"""		9723509	0					
ANR	9725359	PrimaryExpression	"""PASS"""		9723509	0					
ANR	9725360	ExpressionStatement	"cupsFreeJobs ( num_jobs , jobs )"	479:2:11133:11161	9723509	35	True				
ANR	9725361	CallExpression	"cupsFreeJobs ( num_jobs , jobs )"		9723509	0					
ANR	9725362	Callee	cupsFreeJobs		9723509	0					
ANR	9725363	Identifier	cupsFreeJobs		9723509	0					
ANR	9725364	ArgumentList	num_jobs		9723509	1					
ANR	9725365	Argument	num_jobs		9723509	0					
ANR	9725366	Identifier	num_jobs		9723509	0					
ANR	9725367	Argument	jobs		9723509	1					
ANR	9725368	Identifier	jobs		9723509	0					
ANR	9725369	ExpressionStatement	"cupsFreeDests ( num_dests , dests )"	480:2:11165:11196	9723509	36	True				
ANR	9725370	CallExpression	"cupsFreeDests ( num_dests , dests )"		9723509	0					
ANR	9725371	Callee	cupsFreeDests		9723509	0					
ANR	9725372	Identifier	cupsFreeDests		9723509	0					
ANR	9725373	ArgumentList	num_dests		9723509	1					
ANR	9725374	Argument	num_dests		9723509	0					
ANR	9725375	Identifier	num_dests		9723509	0					
ANR	9725376	Argument	dests		9723509	1					
ANR	9725377	Identifier	dests		9723509	0					
ANR	9725378	ReturnStatement	return ( status ) ;	482:2:11201:11216	9723509	37	True				
ANR	9725379	Identifier	status		9723509	0					
ANR	9725380	ReturnType	int		9723509	1					
ANR	9725381	Identifier	main		9723509	2					
ANR	9725382	ParameterList	"int argc , char * argv [ ]"		9723509	3					
ANR	9725383	Parameter	int argc	48:5:1192:1200	9723509	0	True				
ANR	9725384	ParameterType	int		9723509	0					
ANR	9725385	Identifier	argc		9723509	1					
ANR	9725386	Parameter	char * argv [ ]	49:5:1254:1265	9723509	1	True				
ANR	9725387	ParameterType	char * [ ]		9723509	0					
ANR	9725388	Identifier	argv		9723509	1					
ANR	9725389	CFGEntryNode	ENTRY		9723509		True				
ANR	9725390	CFGExitNode	EXIT		9723509		True				
ANR	9725391	Symbol	CUPS_PRINTER_SORT		9723509						
ANR	9725392	Symbol	stdout		9723509						
ANR	9725393	Symbol	num_jobs		9723509						
ANR	9725394	Symbol	cupsGetPPD		9723509						
ANR	9725395	Symbol	* argv		9723509						
ANR	9725396	Symbol	* dests		9723509						
ANR	9725397	Symbol	dest		9723509						
ANR	9725398	Symbol	type		9723509						
ANR	9725399	Symbol	IPP_STATUS_OK_IGNORED_OR_SUBSTITUTED		9723509						
ANR	9725400	Symbol	CUPS_FORMAT_AUTO		9723509						
ANR	9725401	Symbol	CUPS_PRINTER_COLOR		9723509						
ANR	9725402	Symbol	CUPS_PRINTER_LARGE		9723509						
ANR	9725403	Symbol	named_dest -> name		9723509						
ANR	9725404	Symbol	* * argv		9723509						
ANR	9725405	Symbol	buffer		9723509						
ANR	9725406	Symbol	CUPS_PRINTER_LOCAL		9723509						
ANR	9725407	Symbol	CUPS_PRINTER_MFP		9723509						
ANR	9725408	Symbol	CUPS_HTTP_DEFAULT		9723509						
ANR	9725409	Symbol	dest -> name		9723509						
ANR	9725410	Symbol	isdigit		9723509						
ANR	9725411	Symbol	strcmp		9723509						
ANR	9725412	Symbol	_cups_strcasecmp		9723509						
ANR	9725413	Symbol	dests		9723509						
ANR	9725414	Symbol	* * i		9723509						
ANR	9725415	Symbol	CUPS_PRINTER_COPIES		9723509						
ANR	9725416	Symbol	errno		9723509						
ANR	9725417	Symbol	cupsStartDocument		9723509						
ANR	9725418	Symbol	dest -> options		9723509						
ANR	9725419	Symbol	NULL		9723509						
ANR	9725420	Symbol	& modtime		9723509						
ANR	9725421	Symbol	CUPS_PRINTER_PUNCH		9723509						
ANR	9725422	Symbol	dests [ num_dests / 2 ] . name		9723509						
ANR	9725423	Symbol	pass		9723509						
ANR	9725424	Symbol	named_dest		9723509						
ANR	9725425	Symbol	CUPS_PRINTER_BIND		9723509						
ANR	9725426	Symbol	cupsCreateJob		9723509						
ANR	9725427	Symbol	CUPS_PRINTER_COVER		9723509						
ANR	9725428	Symbol	cupsLastErrorString		9723509						
ANR	9725429	Symbol	stderr		9723509						
ANR	9725430	Symbol	dest -> is_default		9723509						
ANR	9725431	Symbol	strerror		9723509						
ANR	9725432	Symbol	cupsGetDests		9723509						
ANR	9725433	Symbol	cupsGetDest		9723509						
ANR	9725434	Symbol	cupsWriteRequestData		9723509						
ANR	9725435	Symbol	CUPS_PRINTER_BW		9723509						
ANR	9725436	Symbol	interval		9723509						
ANR	9725437	Symbol	CUPS_PRINTER_MEDIUM		9723509						
ANR	9725438	Symbol	num_dests		9723509						
ANR	9725439	Symbol	status		9723509						
ANR	9725440	Symbol	ppdOpenFile		9723509						
ANR	9725441	Symbol	dest -> instance		9723509						
ANR	9725442	Symbol	cupsGetJobs		9723509						
ANR	9725443	Symbol	CUPS_PRINTER_DUPLEX		9723509						
ANR	9725444	Symbol	cupsGetPPD3		9723509						
ANR	9725445	Symbol	* dest		9723509						
ANR	9725446	Symbol	HTTP_STATUS_OK		9723509						
ANR	9725447	Symbol	fp		9723509						
ANR	9725448	Symbol	argv		9723509						
ANR	9725449	Symbol	cupsGetNamedDest		9723509						
ANR	9725450	Symbol	cupsFinishDocument		9723509						
ANR	9725451	Symbol	CUPS_PRINTER_STAPLE		9723509						
ANR	9725452	Symbol	dest -> num_options		9723509						
ANR	9725453	Symbol	CUPS_DEST_FLAGS_NONE		9723509						
ANR	9725454	Symbol	CUPS_PRINTER_SMALL		9723509						
ANR	9725455	Symbol	& jobs		9723509						
ANR	9725456	Symbol	cupsFileRead		9723509						
ANR	9725457	Symbol	mask		9723509						
ANR	9725458	Symbol	argc		9723509						
ANR	9725459	Symbol	atoi		9723509						
ANR	9725460	Symbol	cupsFileOpen		9723509						
ANR	9725461	Symbol	ppd		9723509						
ANR	9725462	Symbol	dests_equal		9723509						
ANR	9725463	Symbol	* named_dest		9723509						
ANR	9725464	Symbol	jobs		9723509						
ANR	9725465	Symbol	atof		9723509						
ANR	9725466	Symbol	modtime		9723509						
ANR	9725467	Symbol	HTTP_STATUS_CONTINUE		9723509						
ANR	9725468	Symbol	i		9723509						
ANR	9725469	Symbol	ppdfile		9723509						
ANR	9725470	Symbol	cupsPrintFile		9723509						
ANR	9725471	Symbol	& dests		9723509						
ANR	9725472	Symbol	CUPS_PRINTER_COLLATE		9723509						
ANR	9725473	Symbol	* i		9723509						
ANR	9725474	Symbol	enum_cb		9723509						
ANR	9725475	Symbol	job_id		9723509						
ANR	9725476	Symbol	bytes		9723509						
ANR	9725477	Symbol	msec		9723509						
ANR	9725478	Symbol	cupsGetPassword		9723509						
ANR	9725479	Symbol	http_status		9723509						
ANR	9725480	Symbol	* num_dests		9723509						
ANR	9725481	Function	dests_equal	490:0:11297:12158							
ANR	9725482	FunctionDef	"dests_equal (cups_dest_t * a , cups_dest_t * b)"		9725481	0					
ANR	9725483	CompoundStatement		493:0:11463:12158	9725481	0					
ANR	9725484	IdentifierDeclStatement	int i ;	494:2:11467:11473	9725481	0	True				
ANR	9725485	IdentifierDecl	i		9725481	0					
ANR	9725486	IdentifierDeclType	int		9725481	0					
ANR	9725487	Identifier	i		9725481	1					
ANR	9725488	IdentifierDeclStatement	cups_option_t * aoption ;	495:2:11497:11519	9725481	1	True				
ANR	9725489	IdentifierDecl	* aoption		9725481	0					
ANR	9725490	IdentifierDeclType	cups_option_t *		9725481	0					
ANR	9725491	Identifier	aoption		9725481	1					
ANR	9725492	IdentifierDeclStatement	const char * bval ;	496:2:11545:11561	9725481	2	True				
ANR	9725493	IdentifierDecl	* bval		9725481	0					
ANR	9725494	IdentifierDeclType	const char *		9725481	0					
ANR	9725495	Identifier	bval		9725481	1					
ANR	9725496	IfStatement	if ( a == b )		9725481	3					
ANR	9725497	Condition	a == b	499:6:11592:11597	9725481	0	True				
ANR	9725498	EqualityExpression	a == b		9725481	0		==			
ANR	9725499	Identifier	a		9725481	0					
ANR	9725500	Identifier	b		9725481	1					
ANR	9725501	ReturnStatement	return ( 1 ) ;	500:4:11604:11614	9725481	1	True				
ANR	9725502	PrimaryExpression	1		9725481	0					
ANR	9725503	IfStatement	if ( ! a || ! b )		9725481	4					
ANR	9725504	Condition	! a || ! b	502:6:11623:11630	9725481	0	True				
ANR	9725505	OrExpression	! a || ! b		9725481	0		||			
ANR	9725506	UnaryOperationExpression	! a		9725481	0					
ANR	9725507	UnaryOperator	!		9725481	0					
ANR	9725508	Identifier	a		9725481	1					
ANR	9725509	UnaryOperationExpression	! b		9725481	1					
ANR	9725510	UnaryOperator	!		9725481	0					
ANR	9725511	Identifier	b		9725481	1					
ANR	9725512	ReturnStatement	return ( 0 ) ;	503:4:11637:11647	9725481	1	True				
ANR	9725513	PrimaryExpression	0		9725481	0					
ANR	9725514	IfStatement	"if ( _cups_strcasecmp ( a -> name , b -> name ) || ( a -> instance && ! b -> instance ) || ( ! a -> instance && b -> instance ) || ( a -> instance && _cups_strcasecmp ( a -> instance , b -> instance ) ) || a -> num_options != b -> num_options )"		9725481	5					
ANR	9725515	Condition	"_cups_strcasecmp ( a -> name , b -> name ) || ( a -> instance && ! b -> instance ) || ( ! a -> instance && b -> instance ) || ( a -> instance && _cups_strcasecmp ( a -> instance , b -> instance ) ) || a -> num_options != b -> num_options"	505:6:11656:11878	9725481	0	True				
ANR	9725516	OrExpression	"_cups_strcasecmp ( a -> name , b -> name ) || ( a -> instance && ! b -> instance ) || ( ! a -> instance && b -> instance ) || ( a -> instance && _cups_strcasecmp ( a -> instance , b -> instance ) ) || a -> num_options != b -> num_options"		9725481	0		||			
ANR	9725517	CallExpression	"_cups_strcasecmp ( a -> name , b -> name )"		9725481	0					
ANR	9725518	Callee	_cups_strcasecmp		9725481	0					
ANR	9725519	Identifier	_cups_strcasecmp		9725481	0					
ANR	9725520	ArgumentList	a -> name		9725481	1					
ANR	9725521	Argument	a -> name		9725481	0					
ANR	9725522	PtrMemberAccess	a -> name		9725481	0					
ANR	9725523	Identifier	a		9725481	0					
ANR	9725524	Identifier	name		9725481	1					
ANR	9725525	Argument	b -> name		9725481	1					
ANR	9725526	PtrMemberAccess	b -> name		9725481	0					
ANR	9725527	Identifier	b		9725481	0					
ANR	9725528	Identifier	name		9725481	1					
ANR	9725529	OrExpression	"( a -> instance && ! b -> instance ) || ( ! a -> instance && b -> instance ) || ( a -> instance && _cups_strcasecmp ( a -> instance , b -> instance ) ) || a -> num_options != b -> num_options"		9725481	1		||			
ANR	9725530	AndExpression	a -> instance && ! b -> instance		9725481	0		&&			
ANR	9725531	PtrMemberAccess	a -> instance		9725481	0					
ANR	9725532	Identifier	a		9725481	0					
ANR	9725533	Identifier	instance		9725481	1					
ANR	9725534	UnaryOperationExpression	! b -> instance		9725481	1					
ANR	9725535	UnaryOperator	!		9725481	0					
ANR	9725536	PtrMemberAccess	b -> instance		9725481	1					
ANR	9725537	Identifier	b		9725481	0					
ANR	9725538	Identifier	instance		9725481	1					
ANR	9725539	OrExpression	"( ! a -> instance && b -> instance ) || ( a -> instance && _cups_strcasecmp ( a -> instance , b -> instance ) ) || a -> num_options != b -> num_options"		9725481	1		||			
ANR	9725540	AndExpression	! a -> instance && b -> instance		9725481	0		&&			
ANR	9725541	UnaryOperationExpression	! a -> instance		9725481	0					
ANR	9725542	UnaryOperator	!		9725481	0					
ANR	9725543	PtrMemberAccess	a -> instance		9725481	1					
ANR	9725544	Identifier	a		9725481	0					
ANR	9725545	Identifier	instance		9725481	1					
ANR	9725546	PtrMemberAccess	b -> instance		9725481	1					
ANR	9725547	Identifier	b		9725481	0					
ANR	9725548	Identifier	instance		9725481	1					
ANR	9725549	OrExpression	"( a -> instance && _cups_strcasecmp ( a -> instance , b -> instance ) ) || a -> num_options != b -> num_options"		9725481	1		||			
ANR	9725550	AndExpression	"a -> instance && _cups_strcasecmp ( a -> instance , b -> instance )"		9725481	0		&&			
ANR	9725551	PtrMemberAccess	a -> instance		9725481	0					
ANR	9725552	Identifier	a		9725481	0					
ANR	9725553	Identifier	instance		9725481	1					
ANR	9725554	CallExpression	"_cups_strcasecmp ( a -> instance , b -> instance )"		9725481	1					
ANR	9725555	Callee	_cups_strcasecmp		9725481	0					
ANR	9725556	Identifier	_cups_strcasecmp		9725481	0					
ANR	9725557	ArgumentList	a -> instance		9725481	1					
ANR	9725558	Argument	a -> instance		9725481	0					
ANR	9725559	PtrMemberAccess	a -> instance		9725481	0					
ANR	9725560	Identifier	a		9725481	0					
ANR	9725561	Identifier	instance		9725481	1					
ANR	9725562	Argument	b -> instance		9725481	1					
ANR	9725563	PtrMemberAccess	b -> instance		9725481	0					
ANR	9725564	Identifier	b		9725481	0					
ANR	9725565	Identifier	instance		9725481	1					
ANR	9725566	EqualityExpression	a -> num_options != b -> num_options		9725481	1		!=			
ANR	9725567	PtrMemberAccess	a -> num_options		9725481	0					
ANR	9725568	Identifier	a		9725481	0					
ANR	9725569	Identifier	num_options		9725481	1					
ANR	9725570	PtrMemberAccess	b -> num_options		9725481	1					
ANR	9725571	Identifier	b		9725481	0					
ANR	9725572	Identifier	num_options		9725481	1					
ANR	9725573	ReturnStatement	return ( 0 ) ;	510:4:11885:11895	9725481	1	True				
ANR	9725574	PrimaryExpression	0		9725481	0					
ANR	9725575	ForStatement	"for ( i = a -> num_options , aoption = a -> options ; i > 0 ; i -- , aoption ++ )"		9725481	6					
ANR	9725576	ForInit	"i = a -> num_options , aoption = a -> options ;"	512:7:11905:11945	9725481	0	True				
ANR	9725577	Expression	"i = a -> num_options , aoption = a -> options"		9725481	0					
ANR	9725578	AssignmentExpression	i = a -> num_options		9725481	0		=			
ANR	9725579	Identifier	i		9725481	0					
ANR	9725580	PtrMemberAccess	a -> num_options		9725481	1					
ANR	9725581	Identifier	a		9725481	0					
ANR	9725582	Identifier	num_options		9725481	1					
ANR	9725583	AssignmentExpression	aoption = a -> options		9725481	1		=			
ANR	9725584	Identifier	aoption		9725481	0					
ANR	9725585	PtrMemberAccess	a -> options		9725481	1					
ANR	9725586	Identifier	a		9725481	0					
ANR	9725587	Identifier	options		9725481	1					
ANR	9725588	Condition	i > 0	512:49:11947:11951	9725481	1	True				
ANR	9725589	RelationalExpression	i > 0		9725481	0		>			
ANR	9725590	Identifier	i		9725481	0					
ANR	9725591	PrimaryExpression	0		9725481	1					
ANR	9725592	Expression	"i -- , aoption ++"	512:56:11954:11969	9725481	2	True				
ANR	9725593	PostIncDecOperationExpression	i --		9725481	0					
ANR	9725594	Identifier	i		9725481	0					
ANR	9725595	IncDec	--		9725481	1					
ANR	9725596	PostIncDecOperationExpression	aoption ++		9725481	1					
ANR	9725597	Identifier	aoption		9725481	0					
ANR	9725598	IncDec	++		9725481	1					
ANR	9725599	IfStatement	"if ( ( bval = cupsGetOption ( aoption -> name , b -> num_options , b -> options ) ) == NULL || strcmp ( aoption -> value , bval ) )"		9725481	3					
ANR	9725600	Condition	"( bval = cupsGetOption ( aoption -> name , b -> num_options , b -> options ) ) == NULL || strcmp ( aoption -> value , bval )"	513:8:11980:12122	9725481	0	True				
ANR	9725601	OrExpression	"( bval = cupsGetOption ( aoption -> name , b -> num_options , b -> options ) ) == NULL || strcmp ( aoption -> value , bval )"		9725481	0		||			
ANR	9725602	EqualityExpression	"( bval = cupsGetOption ( aoption -> name , b -> num_options , b -> options ) ) == NULL"		9725481	0		==			
ANR	9725603	AssignmentExpression	"bval = cupsGetOption ( aoption -> name , b -> num_options , b -> options )"		9725481	0		=			
ANR	9725604	Identifier	bval		9725481	0					
ANR	9725605	CallExpression	"cupsGetOption ( aoption -> name , b -> num_options , b -> options )"		9725481	1					
ANR	9725606	Callee	cupsGetOption		9725481	0					
ANR	9725607	Identifier	cupsGetOption		9725481	0					
ANR	9725608	ArgumentList	aoption -> name		9725481	1					
ANR	9725609	Argument	aoption -> name		9725481	0					
ANR	9725610	PtrMemberAccess	aoption -> name		9725481	0					
ANR	9725611	Identifier	aoption		9725481	0					
ANR	9725612	Identifier	name		9725481	1					
ANR	9725613	Argument	b -> num_options		9725481	1					
ANR	9725614	PtrMemberAccess	b -> num_options		9725481	0					
ANR	9725615	Identifier	b		9725481	0					
ANR	9725616	Identifier	num_options		9725481	1					
ANR	9725617	Argument	b -> options		9725481	2					
ANR	9725618	PtrMemberAccess	b -> options		9725481	0					
ANR	9725619	Identifier	b		9725481	0					
ANR	9725620	Identifier	options		9725481	1					
ANR	9725621	Identifier	NULL		9725481	1					
ANR	9725622	CallExpression	"strcmp ( aoption -> value , bval )"		9725481	1					
ANR	9725623	Callee	strcmp		9725481	0					
ANR	9725624	Identifier	strcmp		9725481	0					
ANR	9725625	ArgumentList	aoption -> value		9725481	1					
ANR	9725626	Argument	aoption -> value		9725481	0					
ANR	9725627	PtrMemberAccess	aoption -> value		9725481	0					
ANR	9725628	Identifier	aoption		9725481	0					
ANR	9725629	Identifier	value		9725481	1					
ANR	9725630	Argument	bval		9725481	1					
ANR	9725631	Identifier	bval		9725481	0					
ANR	9725632	ReturnStatement	return ( 0 ) ;	516:6:12131:12141	9725481	1	True				
ANR	9725633	PrimaryExpression	0		9725481	0					
ANR	9725634	ReturnStatement	return ( 1 ) ;	518:2:12146:12156	9725481	7	True				
ANR	9725635	PrimaryExpression	1		9725481	0					
ANR	9725636	ReturnType	static int		9725481	1					
ANR	9725637	Identifier	dests_equal		9725481	2					
ANR	9725638	ParameterList	"cups_dest_t * a , cups_dest_t * b"		9725481	3					
ANR	9725639	Parameter	cups_dest_t * a	491:12:11360:11373	9725481	0	True				
ANR	9725640	ParameterType	cups_dest_t *		9725481	0					
ANR	9725641	Identifier	a		9725481	1					
ANR	9725642	Parameter	cups_dest_t * b	492:12:11417:11430	9725481	1	True				
ANR	9725643	ParameterType	cups_dest_t *		9725481	0					
ANR	9725644	Identifier	b		9725481	1					
ANR	9725645	CFGEntryNode	ENTRY		9725481		True				
ANR	9725646	CFGExitNode	EXIT		9725481		True				
ANR	9725647	Symbol	_cups_strcasecmp		9725481						
ANR	9725648	Symbol	strcmp		9725481						
ANR	9725649	Symbol	a		9725481						
ANR	9725650	Symbol	b		9725481						
ANR	9725651	Symbol	a -> options		9725481						
ANR	9725652	Symbol	NULL		9725481						
ANR	9725653	Symbol	* aoption		9725481						
ANR	9725654	Symbol	i		9725481						
ANR	9725655	Symbol	* a		9725481						
ANR	9725656	Symbol	b -> num_options		9725481						
ANR	9725657	Symbol	* b		9725481						
ANR	9725658	Symbol	cupsGetOption		9725481						
ANR	9725659	Symbol	b -> name		9725481						
ANR	9725660	Symbol	aoption		9725481						
ANR	9725661	Symbol	bval		9725481						
ANR	9725662	Symbol	b -> options		9725481						
ANR	9725663	Symbol	a -> name		9725481						
ANR	9725664	Symbol	b -> instance		9725481						
ANR	9725665	Symbol	a -> num_options		9725481						
ANR	9725666	Symbol	aoption -> value		9725481						
ANR	9725667	Symbol	aoption -> name		9725481						
ANR	9725668	Symbol	a -> instance		9725481						
ANR	9725669	Function	enum_cb	526:0:12218:12818							
ANR	9725670	FunctionDef	"enum_cb (void * user_data , unsigned flags , cups_dest_t * dest)"		9725669	0					
ANR	9725671	CompoundStatement		530:0:12435:12818	9725669	0					
ANR	9725672	IdentifierDeclStatement	int i ;	531:2:12439:12445	9725669	0	True				
ANR	9725673	IdentifierDecl	i		9725669	0					
ANR	9725674	IdentifierDeclType	int		9725669	0					
ANR	9725675	Identifier	i		9725669	1					
ANR	9725676	IdentifierDeclStatement	cups_option_t * option ;	532:2:12469:12490	9725669	1	True				
ANR	9725677	IdentifierDecl	* option		9725669	0					
ANR	9725678	IdentifierDeclType	cups_option_t *		9725669	0					
ANR	9725679	Identifier	option		9725669	1					
ANR	9725680	IfStatement	if ( flags & CUPS_DEST_FLAGS_REMOVED )		9725669	2					
ANR	9725681	Condition	flags & CUPS_DEST_FLAGS_REMOVED	535:6:12522:12552	9725669	0	True				
ANR	9725682	BitAndExpression	flags & CUPS_DEST_FLAGS_REMOVED		9725669	0		&			
ANR	9725683	Identifier	flags		9725669	0					
ANR	9725684	Identifier	CUPS_DEST_FLAGS_REMOVED		9725669	1					
ANR	9725685	ExpressionStatement	"printf ( ""Removed '%s':\\n"" , dest -> name )"	536:4:12559:12596	9725669	1	True				
ANR	9725686	CallExpression	"printf ( ""Removed '%s':\\n"" , dest -> name )"		9725669	0					
ANR	9725687	Callee	printf		9725669	0					
ANR	9725688	Identifier	printf		9725669	0					
ANR	9725689	ArgumentList	"""Removed '%s':\\n"""		9725669	1					
ANR	9725690	Argument	"""Removed '%s':\\n"""		9725669	0					
ANR	9725691	PrimaryExpression	"""Removed '%s':\\n"""		9725669	0					
ANR	9725692	Argument	dest -> name		9725669	1					
ANR	9725693	PtrMemberAccess	dest -> name		9725669	0					
ANR	9725694	Identifier	dest		9725669	0					
ANR	9725695	Identifier	name		9725669	1					
ANR	9725696	ElseStatement	else		9725669	0					
ANR	9725697	ExpressionStatement	"printf ( ""Added '%s':\\n"" , dest -> name )"	538:4:12609:12644	9725669	0	True				
ANR	9725698	CallExpression	"printf ( ""Added '%s':\\n"" , dest -> name )"		9725669	0					
ANR	9725699	Callee	printf		9725669	0					
ANR	9725700	Identifier	printf		9725669	0					
ANR	9725701	ArgumentList	"""Added '%s':\\n"""		9725669	1					
ANR	9725702	Argument	"""Added '%s':\\n"""		9725669	0					
ANR	9725703	PrimaryExpression	"""Added '%s':\\n"""		9725669	0					
ANR	9725704	Argument	dest -> name		9725669	1					
ANR	9725705	PtrMemberAccess	dest -> name		9725669	0					
ANR	9725706	Identifier	dest		9725669	0					
ANR	9725707	Identifier	name		9725669	1					
ANR	9725708	ForStatement	"for ( i = dest -> num_options , option = dest -> options ; i > 0 ; i -- , option ++ )"		9725669	3					
ANR	9725709	ForInit	"i = dest -> num_options , option = dest -> options ;"	540:7:12654:12699	9725669	0	True				
ANR	9725710	Expression	"i = dest -> num_options , option = dest -> options"		9725669	0					
ANR	9725711	AssignmentExpression	i = dest -> num_options		9725669	0		=			
ANR	9725712	Identifier	i		9725669	0					
ANR	9725713	PtrMemberAccess	dest -> num_options		9725669	1					
ANR	9725714	Identifier	dest		9725669	0					
ANR	9725715	Identifier	num_options		9725669	1					
ANR	9725716	AssignmentExpression	option = dest -> options		9725669	1		=			
ANR	9725717	Identifier	option		9725669	0					
ANR	9725718	PtrMemberAccess	dest -> options		9725669	1					
ANR	9725719	Identifier	dest		9725669	0					
ANR	9725720	Identifier	options		9725669	1					
ANR	9725721	Condition	i > 0	540:54:12701:12705	9725669	1	True				
ANR	9725722	RelationalExpression	i > 0		9725669	0		>			
ANR	9725723	Identifier	i		9725669	0					
ANR	9725724	PrimaryExpression	0		9725669	1					
ANR	9725725	Expression	"i -- , option ++"	540:61:12708:12722	9725669	2	True				
ANR	9725726	PostIncDecOperationExpression	i --		9725669	0					
ANR	9725727	Identifier	i		9725669	0					
ANR	9725728	IncDec	--		9725669	1					
ANR	9725729	PostIncDecOperationExpression	option ++		9725669	1					
ANR	9725730	Identifier	option		9725669	0					
ANR	9725731	IncDec	++		9725669	1					
ANR	9725732	ExpressionStatement	"printf ( ""    %s=\\""%s\\""\\n"" , option -> name , option -> value )"	541:4:12729:12783	9725669	3	True				
ANR	9725733	CallExpression	"printf ( ""    %s=\\""%s\\""\\n"" , option -> name , option -> value )"		9725669	0					
ANR	9725734	Callee	printf		9725669	0					
ANR	9725735	Identifier	printf		9725669	0					
ANR	9725736	ArgumentList	"""    %s=\\""%s\\""\\n"""		9725669	1					
ANR	9725737	Argument	"""    %s=\\""%s\\""\\n"""		9725669	0					
ANR	9725738	PrimaryExpression	"""    %s=\\""%s\\""\\n"""		9725669	0					
ANR	9725739	Argument	option -> name		9725669	1					
ANR	9725740	PtrMemberAccess	option -> name		9725669	0					
ANR	9725741	Identifier	option		9725669	0					
ANR	9725742	Identifier	name		9725669	1					
ANR	9725743	Argument	option -> value		9725669	2					
ANR	9725744	PtrMemberAccess	option -> value		9725669	0					
ANR	9725745	Identifier	option		9725669	0					
ANR	9725746	Identifier	value		9725669	1					
ANR	9725747	ExpressionStatement	putchar ( '\\n' )	543:2:12788:12801	9725669	4	True				
ANR	9725748	CallExpression	putchar ( '\\n' )		9725669	0					
ANR	9725749	Callee	putchar		9725669	0					
ANR	9725750	Identifier	putchar		9725669	0					
ANR	9725751	ArgumentList	'\\n'		9725669	1					
ANR	9725752	Argument	'\\n'		9725669	0					
ANR	9725753	PrimaryExpression	'\\n'		9725669	0					
ANR	9725754	ReturnStatement	return ( 1 ) ;	545:2:12806:12816	9725669	5	True				
ANR	9725755	PrimaryExpression	1		9725669	0					
ANR	9725756	ReturnType	static int		9725669	1					
ANR	9725757	Identifier	enum_cb		9725669	2					
ANR	9725758	ParameterList	"void * user_data , unsigned flags , cups_dest_t * dest"		9725669	3					
ANR	9725759	Parameter	void * user_data	527:8:12275:12296	9725669	0	True				
ANR	9725760	ParameterType	void *		9725669	0					
ANR	9725761	Identifier	user_data		9725669	1					
ANR	9725762	Parameter	unsigned flags	528:8:12337:12353	9725669	1	True				
ANR	9725763	ParameterType	unsigned		9725669	0					
ANR	9725764	Identifier	flags		9725669	1					
ANR	9725765	Parameter	cups_dest_t * dest	529:8:12393:12409	9725669	2	True				
ANR	9725766	ParameterType	cups_dest_t *		9725669	0					
ANR	9725767	Identifier	dest		9725669	1					
ANR	9725768	CFGEntryNode	ENTRY		9725669		True				
ANR	9725769	CFGExitNode	EXIT		9725669		True				
ANR	9725770	Symbol	dest -> options		9725669						
ANR	9725771	Symbol	* dest		9725669						
ANR	9725772	Symbol	option -> name		9725669						
ANR	9725773	Symbol	option -> value		9725669						
ANR	9725774	Symbol	flags		9725669						
ANR	9725775	Symbol	* option		9725669						
ANR	9725776	Symbol	i		9725669						
ANR	9725777	Symbol	user_data		9725669						
ANR	9725778	Symbol	dest		9725669						
ANR	9725779	Symbol	CUPS_DEST_FLAGS_REMOVED		9725669						
ANR	9725780	Symbol	dest -> num_options		9725669						
ANR	9725781	Symbol	dest -> name		9725669						
ANR	9725782	Symbol	option		9725669						
ANR	9725783	Function	show_diffs	553:0:12893:14236							
ANR	9725784	FunctionDef	"show_diffs (cups_dest_t * a , cups_dest_t * b)"		9725783	0					
ANR	9725785	CompoundStatement		556:0:13018:14236	9725783	0					
ANR	9725786	IdentifierDeclStatement	int i ;	557:2:13022:13028	9725783	0	True				
ANR	9725787	IdentifierDecl	i		9725783	0					
ANR	9725788	IdentifierDeclType	int		9725783	0					
ANR	9725789	Identifier	i		9725783	1					
ANR	9725790	IdentifierDeclStatement	cups_option_t * aoption ;	558:2:13052:13074	9725783	1	True				
ANR	9725791	IdentifierDecl	* aoption		9725783	0					
ANR	9725792	IdentifierDeclType	cups_option_t *		9725783	0					
ANR	9725793	Identifier	aoption		9725783	1					
ANR	9725794	IdentifierDeclStatement	const char * bval ;	559:2:13100:13116	9725783	2	True				
ANR	9725795	IdentifierDecl	* bval		9725783	0					
ANR	9725796	IdentifierDeclType	const char *		9725783	0					
ANR	9725797	Identifier	bval		9725783	1					
ANR	9725798	IfStatement	if ( ! a || ! b )		9725783	3					
ANR	9725799	Condition	! a || ! b	562:6:13147:13154	9725783	0	True				
ANR	9725800	OrExpression	! a || ! b		9725783	0		||			
ANR	9725801	UnaryOperationExpression	! a		9725783	0					
ANR	9725802	UnaryOperator	!		9725783	0					
ANR	9725803	Identifier	a		9725783	1					
ANR	9725804	UnaryOperationExpression	! b		9725783	1					
ANR	9725805	UnaryOperator	!		9725783	0					
ANR	9725806	Identifier	b		9725783	1					
ANR	9725807	ReturnStatement	return ;	563:4:13161:13167	9725783	1	True				
ANR	9725808	ExpressionStatement	"puts ( ""    Item                  cupsGetDest           cupsGetNamedDest"" )"	565:2:13172:13244	9725783	4	True				
ANR	9725809	CallExpression	"puts ( ""    Item                  cupsGetDest           cupsGetNamedDest"" )"		9725783	0					
ANR	9725810	Callee	puts		9725783	0					
ANR	9725811	Identifier	puts		9725783	0					
ANR	9725812	ArgumentList	"""    Item                  cupsGetDest           cupsGetNamedDest"""		9725783	1					
ANR	9725813	Argument	"""    Item                  cupsGetDest           cupsGetNamedDest"""		9725783	0					
ANR	9725814	PrimaryExpression	"""    Item                  cupsGetDest           cupsGetNamedDest"""		9725783	0					
ANR	9725815	ExpressionStatement	"puts ( ""    --------------------  --------------------  --------------------"" )"	566:2:13248:13324	9725783	5	True				
ANR	9725816	CallExpression	"puts ( ""    --------------------  --------------------  --------------------"" )"		9725783	0					
ANR	9725817	Callee	puts		9725783	0					
ANR	9725818	Identifier	puts		9725783	0					
ANR	9725819	ArgumentList	"""    --------------------  --------------------  --------------------"""		9725783	1					
ANR	9725820	Argument	"""    --------------------  --------------------  --------------------"""		9725783	0					
ANR	9725821	PrimaryExpression	"""    --------------------  --------------------  --------------------"""		9725783	0					
ANR	9725822	IfStatement	"if ( _cups_strcasecmp ( a -> name , b -> name ) )"		9725783	6					
ANR	9725823	Condition	"_cups_strcasecmp ( a -> name , b -> name )"	568:6:13333:13366	9725783	0	True				
ANR	9725824	CallExpression	"_cups_strcasecmp ( a -> name , b -> name )"		9725783	0					
ANR	9725825	Callee	_cups_strcasecmp		9725783	0					
ANR	9725826	Identifier	_cups_strcasecmp		9725783	0					
ANR	9725827	ArgumentList	a -> name		9725783	1					
ANR	9725828	Argument	a -> name		9725783	0					
ANR	9725829	PtrMemberAccess	a -> name		9725783	0					
ANR	9725830	Identifier	a		9725783	0					
ANR	9725831	Identifier	name		9725783	1					
ANR	9725832	Argument	b -> name		9725783	1					
ANR	9725833	PtrMemberAccess	b -> name		9725783	0					
ANR	9725834	Identifier	b		9725783	0					
ANR	9725835	Identifier	name		9725783	1					
ANR	9725836	ExpressionStatement	"printf ( ""    name                  %-20.20s  %-20.20s\\n"" , a -> name , b -> name )"	569:4:13373:13447	9725783	1	True				
ANR	9725837	CallExpression	"printf ( ""    name                  %-20.20s  %-20.20s\\n"" , a -> name , b -> name )"		9725783	0					
ANR	9725838	Callee	printf		9725783	0					
ANR	9725839	Identifier	printf		9725783	0					
ANR	9725840	ArgumentList	"""    name                  %-20.20s  %-20.20s\\n"""		9725783	1					
ANR	9725841	Argument	"""    name                  %-20.20s  %-20.20s\\n"""		9725783	0					
ANR	9725842	PrimaryExpression	"""    name                  %-20.20s  %-20.20s\\n"""		9725783	0					
ANR	9725843	Argument	a -> name		9725783	1					
ANR	9725844	PtrMemberAccess	a -> name		9725783	0					
ANR	9725845	Identifier	a		9725783	0					
ANR	9725846	Identifier	name		9725783	1					
ANR	9725847	Argument	b -> name		9725783	2					
ANR	9725848	PtrMemberAccess	b -> name		9725783	0					
ANR	9725849	Identifier	b		9725783	0					
ANR	9725850	Identifier	name		9725783	1					
ANR	9725851	IfStatement	"if ( ( a -> instance && ! b -> instance ) || ( ! a -> instance && b -> instance ) || ( a -> instance && _cups_strcasecmp ( a -> instance , b -> instance ) ) )"		9725783	7					
ANR	9725852	Condition	"( a -> instance && ! b -> instance ) || ( ! a -> instance && b -> instance ) || ( a -> instance && _cups_strcasecmp ( a -> instance , b -> instance ) )"	571:6:13456:13592	9725783	0	True				
ANR	9725853	OrExpression	"( a -> instance && ! b -> instance ) || ( ! a -> instance && b -> instance ) || ( a -> instance && _cups_strcasecmp ( a -> instance , b -> instance ) )"		9725783	0		||			
ANR	9725854	AndExpression	a -> instance && ! b -> instance		9725783	0		&&			
ANR	9725855	PtrMemberAccess	a -> instance		9725783	0					
ANR	9725856	Identifier	a		9725783	0					
ANR	9725857	Identifier	instance		9725783	1					
ANR	9725858	UnaryOperationExpression	! b -> instance		9725783	1					
ANR	9725859	UnaryOperator	!		9725783	0					
ANR	9725860	PtrMemberAccess	b -> instance		9725783	1					
ANR	9725861	Identifier	b		9725783	0					
ANR	9725862	Identifier	instance		9725783	1					
ANR	9725863	OrExpression	"( ! a -> instance && b -> instance ) || ( a -> instance && _cups_strcasecmp ( a -> instance , b -> instance ) )"		9725783	1		||			
ANR	9725864	AndExpression	! a -> instance && b -> instance		9725783	0		&&			
ANR	9725865	UnaryOperationExpression	! a -> instance		9725783	0					
ANR	9725866	UnaryOperator	!		9725783	0					
ANR	9725867	PtrMemberAccess	a -> instance		9725783	1					
ANR	9725868	Identifier	a		9725783	0					
ANR	9725869	Identifier	instance		9725783	1					
ANR	9725870	PtrMemberAccess	b -> instance		9725783	1					
ANR	9725871	Identifier	b		9725783	0					
ANR	9725872	Identifier	instance		9725783	1					
ANR	9725873	AndExpression	"a -> instance && _cups_strcasecmp ( a -> instance , b -> instance )"		9725783	1		&&			
ANR	9725874	PtrMemberAccess	a -> instance		9725783	0					
ANR	9725875	Identifier	a		9725783	0					
ANR	9725876	Identifier	instance		9725783	1					
ANR	9725877	CallExpression	"_cups_strcasecmp ( a -> instance , b -> instance )"		9725783	1					
ANR	9725878	Callee	_cups_strcasecmp		9725783	0					
ANR	9725879	Identifier	_cups_strcasecmp		9725783	0					
ANR	9725880	ArgumentList	a -> instance		9725783	1					
ANR	9725881	Argument	a -> instance		9725783	0					
ANR	9725882	PtrMemberAccess	a -> instance		9725783	0					
ANR	9725883	Identifier	a		9725783	0					
ANR	9725884	Identifier	instance		9725783	1					
ANR	9725885	Argument	b -> instance		9725783	1					
ANR	9725886	PtrMemberAccess	b -> instance		9725783	0					
ANR	9725887	Identifier	b		9725783	0					
ANR	9725888	Identifier	instance		9725783	1					
ANR	9725889	ExpressionStatement	"printf ( ""    instance              %-20.20s  %-20.20s\\n"" , a -> instance ? a -> instance : ""(null)"" , b -> instance ? b -> instance : ""(null)"" )"	574:4:13599:13746	9725783	1	True				
ANR	9725890	CallExpression	"printf ( ""    instance              %-20.20s  %-20.20s\\n"" , a -> instance ? a -> instance : ""(null)"" , b -> instance ? b -> instance : ""(null)"" )"		9725783	0					
ANR	9725891	Callee	printf		9725783	0					
ANR	9725892	Identifier	printf		9725783	0					
ANR	9725893	ArgumentList	"""    instance              %-20.20s  %-20.20s\\n"""		9725783	1					
ANR	9725894	Argument	"""    instance              %-20.20s  %-20.20s\\n"""		9725783	0					
ANR	9725895	PrimaryExpression	"""    instance              %-20.20s  %-20.20s\\n"""		9725783	0					
ANR	9725896	Argument	"a -> instance ? a -> instance : ""(null)"""		9725783	1					
ANR	9725897	ConditionalExpression	"a -> instance ? a -> instance : ""(null)"""		9725783	0					
ANR	9725898	Condition	a -> instance		9725783	0					
ANR	9725899	PtrMemberAccess	a -> instance		9725783	0					
ANR	9725900	Identifier	a		9725783	0					
ANR	9725901	Identifier	instance		9725783	1					
ANR	9725902	PtrMemberAccess	a -> instance		9725783	1					
ANR	9725903	Identifier	a		9725783	0					
ANR	9725904	Identifier	instance		9725783	1					
ANR	9725905	PrimaryExpression	"""(null)"""		9725783	2					
ANR	9725906	Argument	"b -> instance ? b -> instance : ""(null)"""		9725783	2					
ANR	9725907	ConditionalExpression	"b -> instance ? b -> instance : ""(null)"""		9725783	0					
ANR	9725908	Condition	b -> instance		9725783	0					
ANR	9725909	PtrMemberAccess	b -> instance		9725783	0					
ANR	9725910	Identifier	b		9725783	0					
ANR	9725911	Identifier	instance		9725783	1					
ANR	9725912	PtrMemberAccess	b -> instance		9725783	1					
ANR	9725913	Identifier	b		9725783	0					
ANR	9725914	Identifier	instance		9725783	1					
ANR	9725915	PrimaryExpression	"""(null)"""		9725783	2					
ANR	9725916	IfStatement	if ( a -> num_options != b -> num_options )		9725783	8					
ANR	9725917	Condition	a -> num_options != b -> num_options	578:6:13755:13786	9725783	0	True				
ANR	9725918	EqualityExpression	a -> num_options != b -> num_options		9725783	0		!=			
ANR	9725919	PtrMemberAccess	a -> num_options		9725783	0					
ANR	9725920	Identifier	a		9725783	0					
ANR	9725921	Identifier	num_options		9725783	1					
ANR	9725922	PtrMemberAccess	b -> num_options		9725783	1					
ANR	9725923	Identifier	b		9725783	0					
ANR	9725924	Identifier	num_options		9725783	1					
ANR	9725925	ExpressionStatement	"printf ( ""    num_options           %-20d  %-20d\\n"" , a -> num_options , b -> num_options )"	579:4:13793:13886	9725783	1	True				
ANR	9725926	CallExpression	"printf ( ""    num_options           %-20d  %-20d\\n"" , a -> num_options , b -> num_options )"		9725783	0					
ANR	9725927	Callee	printf		9725783	0					
ANR	9725928	Identifier	printf		9725783	0					
ANR	9725929	ArgumentList	"""    num_options           %-20d  %-20d\\n"""		9725783	1					
ANR	9725930	Argument	"""    num_options           %-20d  %-20d\\n"""		9725783	0					
ANR	9725931	PrimaryExpression	"""    num_options           %-20d  %-20d\\n"""		9725783	0					
ANR	9725932	Argument	a -> num_options		9725783	1					
ANR	9725933	PtrMemberAccess	a -> num_options		9725783	0					
ANR	9725934	Identifier	a		9725783	0					
ANR	9725935	Identifier	num_options		9725783	1					
ANR	9725936	Argument	b -> num_options		9725783	2					
ANR	9725937	PtrMemberAccess	b -> num_options		9725783	0					
ANR	9725938	Identifier	b		9725783	0					
ANR	9725939	Identifier	num_options		9725783	1					
ANR	9725940	ForStatement	"for ( i = a -> num_options , aoption = a -> options ; i > 0 ; i -- , aoption ++ )"		9725783	9					
ANR	9725941	ForInit	"i = a -> num_options , aoption = a -> options ;"	582:7:13896:13936	9725783	0	True				
ANR	9725942	Expression	"i = a -> num_options , aoption = a -> options"		9725783	0					
ANR	9725943	AssignmentExpression	i = a -> num_options		9725783	0		=			
ANR	9725944	Identifier	i		9725783	0					
ANR	9725945	PtrMemberAccess	a -> num_options		9725783	1					
ANR	9725946	Identifier	a		9725783	0					
ANR	9725947	Identifier	num_options		9725783	1					
ANR	9725948	AssignmentExpression	aoption = a -> options		9725783	1		=			
ANR	9725949	Identifier	aoption		9725783	0					
ANR	9725950	PtrMemberAccess	a -> options		9725783	1					
ANR	9725951	Identifier	a		9725783	0					
ANR	9725952	Identifier	options		9725783	1					
ANR	9725953	Condition	i > 0	582:49:13938:13942	9725783	1	True				
ANR	9725954	RelationalExpression	i > 0		9725783	0		>			
ANR	9725955	Identifier	i		9725783	0					
ANR	9725956	PrimaryExpression	0		9725783	1					
ANR	9725957	Expression	"i -- , aoption ++"	582:56:13945:13960	9725783	2	True				
ANR	9725958	PostIncDecOperationExpression	i --		9725783	0					
ANR	9725959	Identifier	i		9725783	0					
ANR	9725960	IncDec	--		9725783	1					
ANR	9725961	PostIncDecOperationExpression	aoption ++		9725783	1					
ANR	9725962	Identifier	aoption		9725783	0					
ANR	9725963	IncDec	++		9725783	1					
ANR	9725964	IfStatement	"if ( ( bval = cupsGetOption ( aoption -> name , b -> num_options , b -> options ) ) == NULL || strcmp ( aoption -> value , bval ) )"		9725783	3					
ANR	9725965	Condition	"( bval = cupsGetOption ( aoption -> name , b -> num_options , b -> options ) ) == NULL || strcmp ( aoption -> value , bval )"	583:8:13971:14113	9725783	0	True				
ANR	9725966	OrExpression	"( bval = cupsGetOption ( aoption -> name , b -> num_options , b -> options ) ) == NULL || strcmp ( aoption -> value , bval )"		9725783	0		||			
ANR	9725967	EqualityExpression	"( bval = cupsGetOption ( aoption -> name , b -> num_options , b -> options ) ) == NULL"		9725783	0		==			
ANR	9725968	AssignmentExpression	"bval = cupsGetOption ( aoption -> name , b -> num_options , b -> options )"		9725783	0		=			
ANR	9725969	Identifier	bval		9725783	0					
ANR	9725970	CallExpression	"cupsGetOption ( aoption -> name , b -> num_options , b -> options )"		9725783	1					
ANR	9725971	Callee	cupsGetOption		9725783	0					
ANR	9725972	Identifier	cupsGetOption		9725783	0					
ANR	9725973	ArgumentList	aoption -> name		9725783	1					
ANR	9725974	Argument	aoption -> name		9725783	0					
ANR	9725975	PtrMemberAccess	aoption -> name		9725783	0					
ANR	9725976	Identifier	aoption		9725783	0					
ANR	9725977	Identifier	name		9725783	1					
ANR	9725978	Argument	b -> num_options		9725783	1					
ANR	9725979	PtrMemberAccess	b -> num_options		9725783	0					
ANR	9725980	Identifier	b		9725783	0					
ANR	9725981	Identifier	num_options		9725783	1					
ANR	9725982	Argument	b -> options		9725783	2					
ANR	9725983	PtrMemberAccess	b -> options		9725783	0					
ANR	9725984	Identifier	b		9725783	0					
ANR	9725985	Identifier	options		9725783	1					
ANR	9725986	Identifier	NULL		9725783	1					
ANR	9725987	CallExpression	"strcmp ( aoption -> value , bval )"		9725783	1					
ANR	9725988	Callee	strcmp		9725783	0					
ANR	9725989	Identifier	strcmp		9725783	0					
ANR	9725990	ArgumentList	aoption -> value		9725783	1					
ANR	9725991	Argument	aoption -> value		9725783	0					
ANR	9725992	PtrMemberAccess	aoption -> value		9725783	0					
ANR	9725993	Identifier	aoption		9725783	0					
ANR	9725994	Identifier	value		9725783	1					
ANR	9725995	Argument	bval		9725783	1					
ANR	9725996	Identifier	bval		9725783	0					
ANR	9725997	ExpressionStatement	"printf ( ""    %-20.20s  %-20.20s  %-20.20s\\n"" , aoption -> name , aoption -> value , bval ? bval : ""(null)"" )"	586:6:14122:14234	9725783	1	True				
ANR	9725998	CallExpression	"printf ( ""    %-20.20s  %-20.20s  %-20.20s\\n"" , aoption -> name , aoption -> value , bval ? bval : ""(null)"" )"		9725783	0					
ANR	9725999	Callee	printf		9725783	0					
ANR	9726000	Identifier	printf		9725783	0					
ANR	9726001	ArgumentList	"""    %-20.20s  %-20.20s  %-20.20s\\n"""		9725783	1					
ANR	9726002	Argument	"""    %-20.20s  %-20.20s  %-20.20s\\n"""		9725783	0					
ANR	9726003	PrimaryExpression	"""    %-20.20s  %-20.20s  %-20.20s\\n"""		9725783	0					
ANR	9726004	Argument	aoption -> name		9725783	1					
ANR	9726005	PtrMemberAccess	aoption -> name		9725783	0					
ANR	9726006	Identifier	aoption		9725783	0					
ANR	9726007	Identifier	name		9725783	1					
ANR	9726008	Argument	aoption -> value		9725783	2					
ANR	9726009	PtrMemberAccess	aoption -> value		9725783	0					
ANR	9726010	Identifier	aoption		9725783	0					
ANR	9726011	Identifier	value		9725783	1					
ANR	9726012	Argument	"bval ? bval : ""(null)"""		9725783	3					
ANR	9726013	ConditionalExpression	"bval ? bval : ""(null)"""		9725783	0					
ANR	9726014	Condition	bval		9725783	0					
ANR	9726015	Identifier	bval		9725783	0					
ANR	9726016	Identifier	bval		9725783	1					
ANR	9726017	PrimaryExpression	"""(null)"""		9725783	2					
ANR	9726018	ReturnType	static void		9725783	1					
ANR	9726019	Identifier	show_diffs		9725783	2					
ANR	9726020	ParameterList	"cups_dest_t * a , cups_dest_t * b"		9725783	3					
ANR	9726021	Parameter	cups_dest_t * a	554:11:12916:12929	9725783	0	True				
ANR	9726022	ParameterType	cups_dest_t *		9725783	0					
ANR	9726023	Identifier	a		9725783	1					
ANR	9726024	Parameter	cups_dest_t * b	555:11:12972:12985	9725783	1	True				
ANR	9726025	ParameterType	cups_dest_t *		9725783	0					
ANR	9726026	Identifier	b		9725783	1					
ANR	9726027	CFGEntryNode	ENTRY		9725783		True				
ANR	9726028	CFGExitNode	EXIT		9725783		True				
ANR	9726029	Symbol	_cups_strcasecmp		9725783						
ANR	9726030	Symbol	strcmp		9725783						
ANR	9726031	Symbol	a		9725783						
ANR	9726032	Symbol	b		9725783						
ANR	9726033	Symbol	a -> options		9725783						
ANR	9726034	Symbol	NULL		9725783						
ANR	9726035	Symbol	* aoption		9725783						
ANR	9726036	Symbol	i		9725783						
ANR	9726037	Symbol	* a		9725783						
ANR	9726038	Symbol	b -> num_options		9725783						
ANR	9726039	Symbol	* b		9725783						
ANR	9726040	Symbol	cupsGetOption		9725783						
ANR	9726041	Symbol	b -> name		9725783						
ANR	9726042	Symbol	aoption		9725783						
ANR	9726043	Symbol	bval		9725783						
ANR	9726044	Symbol	b -> options		9725783						
ANR	9726045	Symbol	a -> name		9725783						
ANR	9726046	Symbol	b -> instance		9725783						
ANR	9726047	Symbol	a -> num_options		9725783						
ANR	9726048	Symbol	aoption -> value		9725783						
ANR	9726049	Symbol	aoption -> name		9725783						
ANR	9726050	Symbol	a -> instance		9725783						
