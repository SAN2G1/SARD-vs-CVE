command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3194923	File	data/converged/CVE-2018-16863_ghostpdl/fapi_ft.c								
ANR	3194924	ClassDef	ff_server_s	67:8:1762:2012							
ANR	3194925	DeclStmt									
ANR	3194926	Decl							gs_fapi_server	gs_fapi_server	fapi_server
ANR	3194927	DeclStmt									
ANR	3194928	Decl							FT_Library	FT_Library	freetype_library
ANR	3194929	DeclStmt									
ANR	3194930	Decl							FT_OutlineGlyph	FT_OutlineGlyph	outline_glyph
ANR	3194931	DeclStmt									
ANR	3194932	Decl							FT_BitmapGlyph	FT_BitmapGlyph	bitmap_glyph
ANR	3194933	DeclStmt									
ANR	3194934	Decl							gs_memory_t	gs_memory_t *	mem
ANR	3194935	DeclStmt									
ANR	3194936	Decl							FT_Memory	FT_Memory	ftmemory
ANR	3194937	DeclStmt									
ANR	3194938	Decl							struct FT_MemoryRec_	struct FT_MemoryRec_	ftmemory_rec
ANR	3194939	DeclStmt									
ANR	3194940	Decl							ff_server_s	ff_server_s	ff_server
ANR	3194941	ClassDef	ff_face_s	80:8:2025:2629							
ANR	3194942	DeclStmt									
ANR	3194943	Decl							FT_Face	FT_Face	ft_face
ANR	3194944	DeclStmt									
ANR	3194945	Decl							FT_Matrix	FT_Matrix	ft_transform
ANR	3194946	DeclStmt									
ANR	3194947	Decl							FT_F26Dot6	FT_F26Dot6	width
ANR	3194948	Decl							FT_F26Dot6	FT_F26Dot6	height
ANR	3194949	DeclStmt									
ANR	3194950	Decl							FT_UInt	FT_UInt	horz_res
ANR	3194951	DeclStmt									
ANR	3194952	Decl							FT_UInt	FT_UInt	vert_res
ANR	3194953	DeclStmt									
ANR	3194954	Decl							FT_Incremental_InterfaceRec	FT_Incremental_InterfaceRec *	ft_inc_int
ANR	3194955	DeclStmt									
ANR	3194956	Decl							FT_Stream	FT_Stream	ftstrm
ANR	3194957	DeclStmt									
ANR	3194958	Decl							unsigned char	unsigned char *	font_data
ANR	3194959	DeclStmt									
ANR	3194960	Decl							int	int	font_data_len
ANR	3194961	DeclStmt									
ANR	3194962	Decl							bool	bool	data_owned
ANR	3194963	DeclStmt									
ANR	3194964	Decl							ff_server	ff_server *	server
ANR	3194965	DeclStmt									
ANR	3194966	Decl							ff_face_s	ff_face_s	ff_face
ANR	3194967	ClassDef	FT_IncrementalRec_	105:8:2868:3563							
ANR	3194968	DeclStmt									
ANR	3194969	Decl							gs_fapi_font	gs_fapi_font *	fapi_font
ANR	3194970	DeclStmt									
ANR	3194971	Decl							unsigned char	unsigned char *	glyph_data
ANR	3194972	DeclStmt									
ANR	3194973	Decl							size_t	size_t	glyph_data_length
ANR	3194974	DeclStmt									
ANR	3194975	Decl							bool	bool	glyph_data_in_use
ANR	3194976	DeclStmt									
ANR	3194977	Decl							FT_Incremental_MetricsRec	FT_Incremental_MetricsRec	glyph_metrics
ANR	3194978	DeclStmt									
ANR	3194979	Decl							unsigned long	unsigned long	glyph_metrics_index
ANR	3194980	DeclStmt									
ANR	3194981	Decl							gs_fapi_metrics_type	gs_fapi_metrics_type	metrics_type
ANR	3194982	DeclStmt									
ANR	3194983	Decl							FT_IncrementalRec_	FT_IncrementalRec_	FT_IncrementalRec
ANR	3194984	DeclStmt									
ANR	3194985	Decl							void	"void ( gs_fapi_server * a_server , FT_Incremental_InterfaceRec * a_inc_int )"	delete_inc_int
ANR	3194986	DeclStmt									
ANR	3194987	Decl							void	"void ( gs_fapi_server * a_server , FT_IncrementalRec * a_inc_int_info )"	delete_inc_int_info
ANR	3194988	Function	FF_alloc	129:0:3820:3964							
ANR	3194989	FunctionDef	"FF_alloc (FT_Memory memory , long size)"		3194988	0					
ANR	3194990	CompoundStatement		130:0:3858:3964	3194988	0					
ANR	3194991	IdentifierDeclStatement	gs_memory_t * mem = ( gs_memory_t * ) memory -> user ;	131:4:3864:3911	3194988	0	True				
ANR	3194992	IdentifierDecl	* mem = ( gs_memory_t * ) memory -> user		3194988	0					
ANR	3194993	IdentifierDeclType	gs_memory_t *		3194988	0					
ANR	3194994	Identifier	mem		3194988	1					
ANR	3194995	AssignmentExpression	* mem = ( gs_memory_t * ) memory -> user		3194988	2		=			
ANR	3194996	Identifier	mem		3194988	0					
ANR	3194997	CastExpression	( gs_memory_t * ) memory -> user		3194988	1					
ANR	3194998	CastTarget	gs_memory_t *		3194988	0					
ANR	3194999	PtrMemberAccess	memory -> user		3194988	1					
ANR	3195000	Identifier	memory		3194988	0					
ANR	3195001	Identifier	user		3194988	1					
ANR	3195002	ReturnStatement	"return ( gs_malloc ( mem , size , 1 , ""FF_alloc"" ) ) ;"	133:4:3918:3962	3194988	1	True				
ANR	3195003	CallExpression	"gs_malloc ( mem , size , 1 , ""FF_alloc"" )"		3194988	0					
ANR	3195004	Callee	gs_malloc		3194988	0					
ANR	3195005	Identifier	gs_malloc		3194988	0					
ANR	3195006	ArgumentList	mem		3194988	1					
ANR	3195007	Argument	mem		3194988	0					
ANR	3195008	Identifier	mem		3194988	0					
ANR	3195009	Argument	size		3194988	1					
ANR	3195010	Identifier	size		3194988	0					
ANR	3195011	Argument	1		3194988	2					
ANR	3195012	PrimaryExpression	1		3194988	0					
ANR	3195013	Argument	"""FF_alloc"""		3194988	3					
ANR	3195014	PrimaryExpression	"""FF_alloc"""		3194988	0					
ANR	3195015	Identifier	FF_alloc		3194988	1					
ANR	3195016	ParameterList	"FT_Memory memory , long size"		3194988	2					
ANR	3195017	Parameter	FT_Memory memory	129:9:3829:3844	3194988	0	True				
ANR	3195018	ParameterType	FT_Memory		3194988	0					
ANR	3195019	Identifier	memory		3194988	1					
ANR	3195020	Parameter	long size	129:27:3847:3855	3194988	1	True				
ANR	3195021	ParameterType	long		3194988	0					
ANR	3195022	Identifier	size		3194988	1					
ANR	3195023	CFGEntryNode	ENTRY		3194988		True				
ANR	3195024	CFGExitNode	EXIT		3194988		True				
ANR	3195025	Symbol	gs_malloc		3194988						
ANR	3195026	Symbol	memory		3194988						
ANR	3195027	Symbol	size		3194988						
ANR	3195028	Symbol	mem		3194988						
ANR	3195029	Symbol	memory -> user		3194988						
ANR	3195030	Symbol	* memory		3194988						
ANR	3195031	Function	FF_realloc	137:4:3995:4406							
ANR	3195032	FunctionDef	"FF_realloc (FT_Memory memory , long cur_size , long new_size , void * block)"		3195031	0					
ANR	3195033	CompoundStatement		138:0:4067:4406	3195031	0					
ANR	3195034	IdentifierDeclStatement	gs_memory_t * mem = ( gs_memory_t * ) memory -> user ;	139:4:4073:4120	3195031	0	True				
ANR	3195035	IdentifierDecl	* mem = ( gs_memory_t * ) memory -> user		3195031	0					
ANR	3195036	IdentifierDeclType	gs_memory_t *		3195031	0					
ANR	3195037	Identifier	mem		3195031	1					
ANR	3195038	AssignmentExpression	* mem = ( gs_memory_t * ) memory -> user		3195031	2		=			
ANR	3195039	Identifier	mem		3195031	0					
ANR	3195040	CastExpression	( gs_memory_t * ) memory -> user		3195031	1					
ANR	3195041	CastTarget	gs_memory_t *		3195031	0					
ANR	3195042	PtrMemberAccess	memory -> user		3195031	1					
ANR	3195043	Identifier	memory		3195031	0					
ANR	3195044	Identifier	user		3195031	1					
ANR	3195045	IdentifierDeclStatement	void * tmp ;	140:4:4126:4135	3195031	1	True				
ANR	3195046	IdentifierDecl	* tmp		3195031	0					
ANR	3195047	IdentifierDeclType	void *		3195031	0					
ANR	3195048	Identifier	tmp		3195031	1					
ANR	3195049	IfStatement	if ( cur_size == new_size )		3195031	2					
ANR	3195050	Condition	cur_size == new_size	142:8:4146:4165	3195031	0	True				
ANR	3195051	EqualityExpression	cur_size == new_size		3195031	0		==			
ANR	3195052	Identifier	cur_size		3195031	0					
ANR	3195053	Identifier	new_size		3195031	1					
ANR	3195054	CompoundStatement		5:30:100:100	3195031	1					
ANR	3195055	ReturnStatement	return ( block ) ;	143:8:4178:4192	3195031	0	True				
ANR	3195056	Identifier	block		3195031	0					
ANR	3195057	ExpressionStatement	"tmp = gs_malloc ( mem , new_size , 1 , ""FF_realloc"" )"	146:4:4205:4252	3195031	3	True				
ANR	3195058	AssignmentExpression	"tmp = gs_malloc ( mem , new_size , 1 , ""FF_realloc"" )"		3195031	0		=			
ANR	3195059	Identifier	tmp		3195031	0					
ANR	3195060	CallExpression	"gs_malloc ( mem , new_size , 1 , ""FF_realloc"" )"		3195031	1					
ANR	3195061	Callee	gs_malloc		3195031	0					
ANR	3195062	Identifier	gs_malloc		3195031	0					
ANR	3195063	ArgumentList	mem		3195031	1					
ANR	3195064	Argument	mem		3195031	0					
ANR	3195065	Identifier	mem		3195031	0					
ANR	3195066	Argument	new_size		3195031	1					
ANR	3195067	Identifier	new_size		3195031	0					
ANR	3195068	Argument	1		3195031	2					
ANR	3195069	PrimaryExpression	1		3195031	0					
ANR	3195070	Argument	"""FF_realloc"""		3195031	3					
ANR	3195071	PrimaryExpression	"""FF_realloc"""		3195031	0					
ANR	3195072	IfStatement	if ( tmp && block )		3195031	4					
ANR	3195073	Condition	tmp && block	147:8:4262:4273	3195031	0	True				
ANR	3195074	AndExpression	tmp && block		3195031	0		&&			
ANR	3195075	Identifier	tmp		3195031	0					
ANR	3195076	Identifier	block		3195031	1					
ANR	3195077	CompoundStatement		10:22:208:208	3195031	1					
ANR	3195078	ExpressionStatement	"memcpy ( tmp , block , min ( cur_size , new_size ) )"	148:8:4286:4329	3195031	0	True				
ANR	3195079	CallExpression	"memcpy ( tmp , block , min ( cur_size , new_size ) )"		3195031	0					
ANR	3195080	Callee	memcpy		3195031	0					
ANR	3195081	Identifier	memcpy		3195031	0					
ANR	3195082	ArgumentList	tmp		3195031	1					
ANR	3195083	Argument	tmp		3195031	0					
ANR	3195084	Identifier	tmp		3195031	0					
ANR	3195085	Argument	block		3195031	1					
ANR	3195086	Identifier	block		3195031	0					
ANR	3195087	Argument	"min ( cur_size , new_size )"		3195031	2					
ANR	3195088	CallExpression	"min ( cur_size , new_size )"		3195031	0					
ANR	3195089	Callee	min		3195031	0					
ANR	3195090	Identifier	min		3195031	0					
ANR	3195091	ArgumentList	cur_size		3195031	1					
ANR	3195092	Argument	cur_size		3195031	0					
ANR	3195093	Identifier	cur_size		3195031	0					
ANR	3195094	Argument	new_size		3195031	1					
ANR	3195095	Identifier	new_size		3195031	0					
ANR	3195096	ExpressionStatement	"gs_free ( mem , block , 0 , 0 , ""FF_realloc"" )"	150:8:4340:4379	3195031	1	True				
ANR	3195097	CallExpression	"gs_free ( mem , block , 0 , 0 , ""FF_realloc"" )"		3195031	0					
ANR	3195098	Callee	gs_free		3195031	0					
ANR	3195099	Identifier	gs_free		3195031	0					
ANR	3195100	ArgumentList	mem		3195031	1					
ANR	3195101	Argument	mem		3195031	0					
ANR	3195102	Identifier	mem		3195031	0					
ANR	3195103	Argument	block		3195031	1					
ANR	3195104	Identifier	block		3195031	0					
ANR	3195105	Argument	0		3195031	2					
ANR	3195106	PrimaryExpression	0		3195031	0					
ANR	3195107	Argument	0		3195031	3					
ANR	3195108	PrimaryExpression	0		3195031	0					
ANR	3195109	Argument	"""FF_realloc"""		3195031	4					
ANR	3195110	PrimaryExpression	"""FF_realloc"""		3195031	0					
ANR	3195111	ReturnStatement	return ( tmp ) ;	153:4:4392:4404	3195031	5	True				
ANR	3195112	Identifier	tmp		3195031	0					
ANR	3195113	Identifier	FF_realloc		3195031	1					
ANR	3195114	ParameterList	"FT_Memory memory , long cur_size , long new_size , void * block"		3195031	2					
ANR	3195115	Parameter	FT_Memory memory	137:15:4006:4021	3195031	0	True				
ANR	3195116	ParameterType	FT_Memory		3195031	0					
ANR	3195117	Identifier	memory		3195031	1					
ANR	3195118	Parameter	long cur_size	137:33:4024:4036	3195031	1	True				
ANR	3195119	ParameterType	long		3195031	0					
ANR	3195120	Identifier	cur_size		3195031	1					
ANR	3195121	Parameter	long new_size	137:48:4039:4051	3195031	2	True				
ANR	3195122	ParameterType	long		3195031	0					
ANR	3195123	Identifier	new_size		3195031	1					
ANR	3195124	Parameter	void * block	137:63:4054:4064	3195031	3	True				
ANR	3195125	ParameterType	void *		3195031	0					
ANR	3195126	Identifier	block		3195031	1					
ANR	3195127	CFGEntryNode	ENTRY		3195031		True				
ANR	3195128	CFGExitNode	EXIT		3195031		True				
ANR	3195129	Symbol	gs_malloc		3195031						
ANR	3195130	Symbol	memory		3195031						
ANR	3195131	Symbol	min		3195031						
ANR	3195132	Symbol	mem		3195031						
ANR	3195133	Symbol	memory -> user		3195031						
ANR	3195134	Symbol	cur_size		3195031						
ANR	3195135	Symbol	tmp		3195031						
ANR	3195136	Symbol	new_size		3195031						
ANR	3195137	Symbol	block		3195031						
ANR	3195138	Symbol	* memory		3195031						
ANR	3195139	Function	FF_free	157:4:4435:4572							
ANR	3195140	FunctionDef	"FF_free (FT_Memory memory , void * block)"		3195139	0					
ANR	3195141	CompoundStatement		158:0:4474:4572	3195139	0					
ANR	3195142	IdentifierDeclStatement	gs_memory_t * mem = ( gs_memory_t * ) memory -> user ;	159:4:4480:4527	3195139	0	True				
ANR	3195143	IdentifierDecl	* mem = ( gs_memory_t * ) memory -> user		3195139	0					
ANR	3195144	IdentifierDeclType	gs_memory_t *		3195139	0					
ANR	3195145	Identifier	mem		3195139	1					
ANR	3195146	AssignmentExpression	* mem = ( gs_memory_t * ) memory -> user		3195139	2		=			
ANR	3195147	Identifier	mem		3195139	0					
ANR	3195148	CastExpression	( gs_memory_t * ) memory -> user		3195139	1					
ANR	3195149	CastTarget	gs_memory_t *		3195139	0					
ANR	3195150	PtrMemberAccess	memory -> user		3195139	1					
ANR	3195151	Identifier	memory		3195139	0					
ANR	3195152	Identifier	user		3195139	1					
ANR	3195153	ExpressionStatement	"gs_free ( mem , block , 0 , 0 , ""FF_free"" )"	161:4:4534:4570	3195139	1	True				
ANR	3195154	CallExpression	"gs_free ( mem , block , 0 , 0 , ""FF_free"" )"		3195139	0					
ANR	3195155	Callee	gs_free		3195139	0					
ANR	3195156	Identifier	gs_free		3195139	0					
ANR	3195157	ArgumentList	mem		3195139	1					
ANR	3195158	Argument	mem		3195139	0					
ANR	3195159	Identifier	mem		3195139	0					
ANR	3195160	Argument	block		3195139	1					
ANR	3195161	Identifier	block		3195139	0					
ANR	3195162	Argument	0		3195139	2					
ANR	3195163	PrimaryExpression	0		3195139	0					
ANR	3195164	Argument	0		3195139	3					
ANR	3195165	PrimaryExpression	0		3195139	0					
ANR	3195166	Argument	"""FF_free"""		3195139	4					
ANR	3195167	PrimaryExpression	"""FF_free"""		3195139	0					
ANR	3195168	Identifier	FF_free		3195139	1					
ANR	3195169	ParameterList	"FT_Memory memory , void * block"		3195139	2					
ANR	3195170	Parameter	FT_Memory memory	157:12:4443:4458	3195139	0	True				
ANR	3195171	ParameterType	FT_Memory		3195139	0					
ANR	3195172	Identifier	memory		3195139	1					
ANR	3195173	Parameter	void * block	157:30:4461:4471	3195139	1	True				
ANR	3195174	ParameterType	void *		3195139	0					
ANR	3195175	Identifier	block		3195139	1					
ANR	3195176	CFGEntryNode	ENTRY		3195139		True				
ANR	3195177	CFGExitNode	EXIT		3195139		True				
ANR	3195178	Symbol	memory		3195139						
ANR	3195179	Symbol	mem		3195139						
ANR	3195180	Symbol	memory -> user		3195139						
ANR	3195181	Symbol	block		3195139						
ANR	3195182	Symbol	* memory		3195139						
ANR	3195183	Function	FF_stream_read	169:0:4808:5275							
ANR	3195184	FunctionDef	"FF_stream_read (FT_Stream str , unsigned long offset , unsigned char * buffer , unsigned long count)"		3195183	0					
ANR	3195185	CompoundStatement		172:0:4935:5275	3195183	0					
ANR	3195186	IdentifierDeclStatement	stream * ps = ( stream * ) str -> descriptor . pointer ;	173:4:4941:4988	3195183	0	True				
ANR	3195187	IdentifierDecl	* ps = ( stream * ) str -> descriptor . pointer		3195183	0					
ANR	3195188	IdentifierDeclType	stream *		3195183	0					
ANR	3195189	Identifier	ps		3195183	1					
ANR	3195190	AssignmentExpression	* ps = ( stream * ) str -> descriptor . pointer		3195183	2		=			
ANR	3195191	Identifier	ps		3195183	0					
ANR	3195192	CastExpression	( stream * ) str -> descriptor . pointer		3195183	1					
ANR	3195193	CastTarget	stream *		3195183	0					
ANR	3195194	MemberAccess	str -> descriptor . pointer		3195183	1					
ANR	3195195	PtrMemberAccess	str -> descriptor		3195183	0					
ANR	3195196	Identifier	str		3195183	0					
ANR	3195197	Identifier	descriptor		3195183	1					
ANR	3195198	Identifier	pointer		3195183	1					
ANR	3195199	IdentifierDeclStatement	unsigned int rlen = 0 ;	174:4:4994:5015	3195183	1	True				
ANR	3195200	IdentifierDecl	rlen = 0		3195183	0					
ANR	3195201	IdentifierDeclType	unsigned int		3195183	0					
ANR	3195202	Identifier	rlen		3195183	1					
ANR	3195203	AssignmentExpression	rlen = 0		3195183	2		=			
ANR	3195204	Identifier	rlen		3195183	0					
ANR	3195205	PrimaryExpression	0		3195183	1					
ANR	3195206	IdentifierDeclStatement	int status = 0 ;	175:4:5021:5035	3195183	2	True				
ANR	3195207	IdentifierDecl	status = 0		3195183	0					
ANR	3195208	IdentifierDeclType	int		3195183	0					
ANR	3195209	Identifier	status		3195183	1					
ANR	3195210	AssignmentExpression	status = 0		3195183	2		=			
ANR	3195211	Identifier	status		3195183	0					
ANR	3195212	PrimaryExpression	0		3195183	1					
ANR	3195213	IfStatement	"if ( sseek ( ps , ( gs_offset_t ) offset ) < 0 )"		3195183	3					
ANR	3195214	Condition	"sseek ( ps , ( gs_offset_t ) offset ) < 0"	177:8:5046:5079	3195183	0	True				
ANR	3195215	RelationalExpression	"sseek ( ps , ( gs_offset_t ) offset ) < 0"		3195183	0		<			
ANR	3195216	CallExpression	"sseek ( ps , ( gs_offset_t ) offset )"		3195183	0					
ANR	3195217	Callee	sseek		3195183	0					
ANR	3195218	Identifier	sseek		3195183	0					
ANR	3195219	ArgumentList	ps		3195183	1					
ANR	3195220	Argument	ps		3195183	0					
ANR	3195221	Identifier	ps		3195183	0					
ANR	3195222	Argument	( gs_offset_t ) offset		3195183	1					
ANR	3195223	CastExpression	( gs_offset_t ) offset		3195183	0					
ANR	3195224	CastTarget	gs_offset_t		3195183	0					
ANR	3195225	Identifier	offset		3195183	1					
ANR	3195226	PrimaryExpression	0		3195183	1					
ANR	3195227	ExpressionStatement	return_error ( - 1 )	178:8:5090:5106	3195183	1	True				
ANR	3195228	CallExpression	return_error ( - 1 )		3195183	0					
ANR	3195229	Callee	return_error		3195183	0					
ANR	3195230	Identifier	return_error		3195183	0					
ANR	3195231	ArgumentList	- 1		3195183	1					
ANR	3195232	Argument	- 1		3195183	0					
ANR	3195233	UnaryOperationExpression	- 1		3195183	0					
ANR	3195234	UnaryOperator	-		3195183	0					
ANR	3195235	PrimaryExpression	1		3195183	1					
ANR	3195236	IfStatement	if ( count )		3195183	4					
ANR	3195237	Condition	count	180:8:5117:5121	3195183	0	True				
ANR	3195238	Identifier	count		3195183	0					
ANR	3195239	CompoundStatement		9:15:188:188	3195183	1					
ANR	3195240	ExpressionStatement	"status = sgets ( ps , buffer , count , & rlen )"	181:8:5134:5174	3195183	0	True				
ANR	3195241	AssignmentExpression	"status = sgets ( ps , buffer , count , & rlen )"		3195183	0		=			
ANR	3195242	Identifier	status		3195183	0					
ANR	3195243	CallExpression	"sgets ( ps , buffer , count , & rlen )"		3195183	1					
ANR	3195244	Callee	sgets		3195183	0					
ANR	3195245	Identifier	sgets		3195183	0					
ANR	3195246	ArgumentList	ps		3195183	1					
ANR	3195247	Argument	ps		3195183	0					
ANR	3195248	Identifier	ps		3195183	0					
ANR	3195249	Argument	buffer		3195183	1					
ANR	3195250	Identifier	buffer		3195183	0					
ANR	3195251	Argument	count		3195183	2					
ANR	3195252	Identifier	count		3195183	0					
ANR	3195253	Argument	& rlen		3195183	3					
ANR	3195254	UnaryOperationExpression	& rlen		3195183	0					
ANR	3195255	UnaryOperator	&		3195183	0					
ANR	3195256	Identifier	rlen		3195183	1					
ANR	3195257	IfStatement	if ( status < 0 && status != EOFC )		3195183	1					
ANR	3195258	Condition	status < 0 && status != EOFC	183:12:5189:5216	3195183	0	True				
ANR	3195259	AndExpression	status < 0 && status != EOFC		3195183	0		&&			
ANR	3195260	RelationalExpression	status < 0		3195183	0		<			
ANR	3195261	Identifier	status		3195183	0					
ANR	3195262	PrimaryExpression	0		3195183	1					
ANR	3195263	EqualityExpression	status != EOFC		3195183	1		!=			
ANR	3195264	Identifier	status		3195183	0					
ANR	3195265	Identifier	EOFC		3195183	1					
ANR	3195266	ExpressionStatement	return_error ( - 1 )	184:12:5231:5248	3195183	1	True				
ANR	3195267	CallExpression	return_error ( - 1 )		3195183	0					
ANR	3195268	Callee	return_error		3195183	0					
ANR	3195269	Identifier	return_error		3195183	0					
ANR	3195270	ArgumentList	- 1		3195183	1					
ANR	3195271	Argument	- 1		3195183	0					
ANR	3195272	UnaryOperationExpression	- 1		3195183	0					
ANR	3195273	UnaryOperator	-		3195183	0					
ANR	3195274	PrimaryExpression	1		3195183	1					
ANR	3195275	ReturnStatement	return ( rlen ) ;	186:4:5260:5273	3195183	5	True				
ANR	3195276	Identifier	rlen		3195183	0					
ANR	3195277	ReturnType	static FT_ULong		3195183	1					
ANR	3195278	Identifier	FF_stream_read		3195183	2					
ANR	3195279	ParameterList	"FT_Stream str , unsigned long offset , unsigned char * buffer , unsigned long count"		3195183	3					
ANR	3195280	Parameter	FT_Stream str	170:15:4839:4851	3195183	0	True				
ANR	3195281	ParameterType	FT_Stream		3195183	0					
ANR	3195282	Identifier	str		3195183	1					
ANR	3195283	Parameter	unsigned long offset	170:30:4854:4873	3195183	1	True				
ANR	3195284	ParameterType	unsigned long		3195183	0					
ANR	3195285	Identifier	offset		3195183	1					
ANR	3195286	Parameter	unsigned char * buffer	170:52:4876:4896	3195183	2	True				
ANR	3195287	ParameterType	unsigned char *		3195183	0					
ANR	3195288	Identifier	buffer		3195183	1					
ANR	3195289	Parameter	unsigned long count	171:15:4914:4932	3195183	3	True				
ANR	3195290	ParameterType	unsigned long		3195183	0					
ANR	3195291	Identifier	count		3195183	1					
ANR	3195292	CFGEntryNode	ENTRY		3195183		True				
ANR	3195293	CFGExitNode	EXIT		3195183		True				
ANR	3195294	Symbol	sseek		3195183						
ANR	3195295	Symbol	ps		3195183						
ANR	3195296	Symbol	offset		3195183						
ANR	3195297	Symbol	EOFC		3195183						
ANR	3195298	Symbol	count		3195183						
ANR	3195299	Symbol	str -> descriptor . pointer		3195183						
ANR	3195300	Symbol	& rlen		3195183						
ANR	3195301	Symbol	str		3195183						
ANR	3195302	Symbol	str -> descriptor		3195183						
ANR	3195303	Symbol	sgets		3195183						
ANR	3195304	Symbol	rlen		3195183						
ANR	3195305	Symbol	buffer		3195183						
ANR	3195306	Symbol	* str		3195183						
ANR	3195307	Symbol	status		3195183						
ANR	3195308	Function	FF_stream_close	189:0:5278:5399							
ANR	3195309	FunctionDef	FF_stream_close (FT_Stream str)		3195308	0					
ANR	3195310	CompoundStatement		191:0:5321:5399	3195308	0					
ANR	3195311	IdentifierDeclStatement	stream * ps = ( stream * ) str -> descriptor . pointer ;	192:4:5327:5374	3195308	0	True				
ANR	3195312	IdentifierDecl	* ps = ( stream * ) str -> descriptor . pointer		3195308	0					
ANR	3195313	IdentifierDeclType	stream *		3195308	0					
ANR	3195314	Identifier	ps		3195308	1					
ANR	3195315	AssignmentExpression	* ps = ( stream * ) str -> descriptor . pointer		3195308	2		=			
ANR	3195316	Identifier	ps		3195308	0					
ANR	3195317	CastExpression	( stream * ) str -> descriptor . pointer		3195308	1					
ANR	3195318	CastTarget	stream *		3195308	0					
ANR	3195319	MemberAccess	str -> descriptor . pointer		3195308	1					
ANR	3195320	PtrMemberAccess	str -> descriptor		3195308	0					
ANR	3195321	Identifier	str		3195308	0					
ANR	3195322	Identifier	descriptor		3195308	1					
ANR	3195323	Identifier	pointer		3195308	1					
ANR	3195324	ExpressionStatement	( void ) sclose ( ps )	194:4:5381:5397	3195308	1	True				
ANR	3195325	CastExpression	( void ) sclose ( ps )		3195308	0					
ANR	3195326	CastTarget	void		3195308	0					
ANR	3195327	CallExpression	sclose ( ps )		3195308	1					
ANR	3195328	Callee	sclose		3195308	0					
ANR	3195329	Identifier	sclose		3195308	0					
ANR	3195330	ArgumentList	ps		3195308	1					
ANR	3195331	Argument	ps		3195308	0					
ANR	3195332	Identifier	ps		3195308	0					
ANR	3195333	ReturnType	static void		3195308	1					
ANR	3195334	Identifier	FF_stream_close		3195308	2					
ANR	3195335	ParameterList	FT_Stream str		3195308	3					
ANR	3195336	Parameter	FT_Stream str	190:16:5306:5318	3195308	0	True				
ANR	3195337	ParameterType	FT_Stream		3195308	0					
ANR	3195338	Identifier	str		3195308	1					
ANR	3195339	CFGEntryNode	ENTRY		3195308		True				
ANR	3195340	CFGExitNode	EXIT		3195308		True				
ANR	3195341	Symbol	str		3195308						
ANR	3195342	Symbol	str -> descriptor		3195308						
ANR	3195343	Symbol	ps		3195308						
ANR	3195344	Symbol	str -> descriptor . pointer		3195308						
ANR	3195345	Symbol	* str		3195308						
ANR	3195346	DeclStmt									
ANR	3195347	Decl							const uint	const uint	file_default_buffer_size
ANR	3195348	Function	FF_open_read_stream	199:0:5447:7287							
ANR	3195349	FunctionDef	"FF_open_read_stream (gs_memory_t * mem , char * fname , FT_Stream * fts)"		3195348	0					
ANR	3195350	CompoundStatement		201:0:5527:7287	3195348	0					
ANR	3195351	IdentifierDeclStatement	int code = 0 ;	202:4:5533:5545	3195348	0	True				
ANR	3195352	IdentifierDecl	code = 0		3195348	0					
ANR	3195353	IdentifierDeclType	int		3195348	0					
ANR	3195354	Identifier	code		3195348	1					
ANR	3195355	AssignmentExpression	code = 0		3195348	2		=			
ANR	3195356	Identifier	code		3195348	0					
ANR	3195357	PrimaryExpression	0		3195348	1					
ANR	3195358	IdentifierDeclStatement	gs_parsed_file_name_t pfn ;	203:4:5551:5576	3195348	1	True				
ANR	3195359	IdentifierDecl	pfn		3195348	0					
ANR	3195360	IdentifierDeclType	gs_parsed_file_name_t		3195348	0					
ANR	3195361	Identifier	pfn		3195348	1					
ANR	3195362	IdentifierDeclStatement	stream * ps = ( stream * ) NULL ;	204:4:5582:5609	3195348	2	True				
ANR	3195363	IdentifierDecl	* ps = ( stream * ) NULL		3195348	0					
ANR	3195364	IdentifierDeclType	stream *		3195348	0					
ANR	3195365	Identifier	ps		3195348	1					
ANR	3195366	AssignmentExpression	* ps = ( stream * ) NULL		3195348	2		=			
ANR	3195367	Identifier	ps		3195348	0					
ANR	3195368	CastExpression	( stream * ) NULL		3195348	1					
ANR	3195369	CastTarget	stream *		3195348	0					
ANR	3195370	Identifier	NULL		3195348	1					
ANR	3195371	IdentifierDeclStatement	gs_offset_t length ;	205:4:5615:5633	3195348	3	True				
ANR	3195372	IdentifierDecl	length		3195348	0					
ANR	3195373	IdentifierDeclType	gs_offset_t		3195348	0					
ANR	3195374	Identifier	length		3195348	1					
ANR	3195375	IdentifierDeclStatement	FT_Stream ftstrm = NULL ;	206:4:5639:5662	3195348	4	True				
ANR	3195376	IdentifierDecl	ftstrm = NULL		3195348	0					
ANR	3195377	IdentifierDeclType	FT_Stream		3195348	0					
ANR	3195378	Identifier	ftstrm		3195348	1					
ANR	3195379	AssignmentExpression	ftstrm = NULL		3195348	2		=			
ANR	3195380	Identifier	NULL		3195348	0					
ANR	3195381	Identifier	NULL		3195348	1					
ANR	3195382	ExpressionStatement	"code = gs_parse_file_name ( & pfn , ( const char * ) fname , strlen ( fname ) , mem )"	208:4:5669:5741	3195348	5	True				
ANR	3195383	AssignmentExpression	"code = gs_parse_file_name ( & pfn , ( const char * ) fname , strlen ( fname ) , mem )"		3195348	0		=			
ANR	3195384	Identifier	code		3195348	0					
ANR	3195385	CallExpression	"gs_parse_file_name ( & pfn , ( const char * ) fname , strlen ( fname ) , mem )"		3195348	1					
ANR	3195386	Callee	gs_parse_file_name		3195348	0					
ANR	3195387	Identifier	gs_parse_file_name		3195348	0					
ANR	3195388	ArgumentList	& pfn		3195348	1					
ANR	3195389	Argument	& pfn		3195348	0					
ANR	3195390	UnaryOperationExpression	& pfn		3195348	0					
ANR	3195391	UnaryOperator	&		3195348	0					
ANR	3195392	Identifier	pfn		3195348	1					
ANR	3195393	Argument	( const char * ) fname		3195348	1					
ANR	3195394	CastExpression	( const char * ) fname		3195348	0					
ANR	3195395	CastTarget	const char *		3195348	0					
ANR	3195396	Identifier	fname		3195348	1					
ANR	3195397	Argument	strlen ( fname )		3195348	2					
ANR	3195398	CallExpression	strlen ( fname )		3195348	0					
ANR	3195399	Callee	strlen		3195348	0					
ANR	3195400	Identifier	strlen		3195348	0					
ANR	3195401	ArgumentList	fname		3195348	1					
ANR	3195402	Argument	fname		3195348	0					
ANR	3195403	Identifier	fname		3195348	0					
ANR	3195404	Argument	mem		3195348	3					
ANR	3195405	Identifier	mem		3195348	0					
ANR	3195406	IfStatement	if ( code < 0 )		3195348	6					
ANR	3195407	Condition	code < 0	209:8:5751:5758	3195348	0	True				
ANR	3195408	RelationalExpression	code < 0		3195348	0		<			
ANR	3195409	Identifier	code		3195348	0					
ANR	3195410	PrimaryExpression	0		3195348	1					
ANR	3195411	CompoundStatement		9:18:233:233	3195348	1					
ANR	3195412	GotoStatement	goto error_out ;	210:8:5771:5785	3195348	0	True				
ANR	3195413	Identifier	error_out		3195348	0					
ANR	3195414	IfStatement	if ( ! pfn . fname )		3195348	7					
ANR	3195415	Condition	! pfn . fname	213:8:5802:5811	3195348	0	True				
ANR	3195416	UnaryOperationExpression	! pfn . fname		3195348	0					
ANR	3195417	UnaryOperator	!		3195348	0					
ANR	3195418	MemberAccess	pfn . fname		3195348	1					
ANR	3195419	Identifier	pfn		3195348	0					
ANR	3195420	Identifier	fname		3195348	1					
ANR	3195421	CompoundStatement		13:20:286:286	3195348	1					
ANR	3195422	ExpressionStatement	code = gs_error_undefinedfilename	214:8:5824:5857	3195348	0	True				
ANR	3195423	AssignmentExpression	code = gs_error_undefinedfilename		3195348	0		=			
ANR	3195424	Identifier	code		3195348	0					
ANR	3195425	Identifier	gs_error_undefinedfilename		3195348	1					
ANR	3195426	GotoStatement	goto error_out ;	215:8:5867:5881	3195348	1	True				
ANR	3195427	Identifier	error_out		3195348	0					
ANR	3195428	IfStatement	if ( pfn . iodev == NULL )		3195348	8					
ANR	3195429	Condition	pfn . iodev == NULL	218:8:5898:5914	3195348	0	True				
ANR	3195430	EqualityExpression	pfn . iodev == NULL		3195348	0		==			
ANR	3195431	MemberAccess	pfn . iodev		3195348	0					
ANR	3195432	Identifier	pfn		3195348	0					
ANR	3195433	Identifier	iodev		3195348	1					
ANR	3195434	Identifier	NULL		3195348	1					
ANR	3195435	CompoundStatement		18:27:389:389	3195348	1					
ANR	3195436	ExpressionStatement	pfn . iodev = iodev_default ( mem )	219:8:5927:5957	3195348	0	True				
ANR	3195437	AssignmentExpression	pfn . iodev = iodev_default ( mem )		3195348	0		=			
ANR	3195438	MemberAccess	pfn . iodev		3195348	0					
ANR	3195439	Identifier	pfn		3195348	0					
ANR	3195440	Identifier	iodev		3195348	1					
ANR	3195441	CallExpression	iodev_default ( mem )		3195348	1					
ANR	3195442	Callee	iodev_default		3195348	0					
ANR	3195443	Identifier	iodev_default		3195348	0					
ANR	3195444	ArgumentList	mem		3195348	1					
ANR	3195445	Argument	mem		3195348	0					
ANR	3195446	Identifier	mem		3195348	0					
ANR	3195447	IfStatement	if ( pfn . iodev )		3195348	9					
ANR	3195448	Condition	pfn . iodev	222:8:5974:5982	3195348	0	True				
ANR	3195449	MemberAccess	pfn . iodev		3195348	0					
ANR	3195450	Identifier	pfn		3195348	0					
ANR	3195451	Identifier	iodev		3195348	1					
ANR	3195452	CompoundStatement		22:19:457:457	3195348	1					
ANR	3195453	Statement	gx_io_device	223:8:5995:6006	3195348	0	True				
ANR	3195454	Statement	*	223:21:6008:6008	3195348	1	True				
ANR	3195455	Statement	const	223:22:6009:6013	3195348	2	True				
ANR	3195456	ExpressionStatement	iodev = pfn . iodev	223:28:6015:6032	3195348	3	True				
ANR	3195457	AssignmentExpression	iodev = pfn . iodev		3195348	0		=			
ANR	3195458	Identifier	iodev		3195348	0					
ANR	3195459	MemberAccess	pfn . iodev		3195348	1					
ANR	3195460	Identifier	pfn		3195348	0					
ANR	3195461	Identifier	iodev		3195348	1					
ANR	3195462	ExpressionStatement	iodev_proc_open_file ( ( * open_file ) ) = iodev -> procs . open_file	225:8:6043:6102	3195348	4	True				
ANR	3195463	AssignmentExpression	iodev_proc_open_file ( ( * open_file ) ) = iodev -> procs . open_file		3195348	0		=			
ANR	3195464	CallExpression	iodev_proc_open_file ( ( * open_file ) )		3195348	0					
ANR	3195465	Callee	iodev_proc_open_file		3195348	0					
ANR	3195466	Identifier	iodev_proc_open_file		3195348	0					
ANR	3195467	ArgumentList	* open_file		3195348	1					
ANR	3195468	Argument	* open_file		3195348	0					
ANR	3195469	UnaryOperationExpression	* open_file		3195348	0					
ANR	3195470	UnaryOperator	*		3195348	0					
ANR	3195471	Identifier	open_file		3195348	1					
ANR	3195472	MemberAccess	iodev -> procs . open_file		3195348	1					
ANR	3195473	PtrMemberAccess	iodev -> procs		3195348	0					
ANR	3195474	Identifier	iodev		3195348	0					
ANR	3195475	Identifier	procs		3195348	1					
ANR	3195476	Identifier	open_file		3195348	1					
ANR	3195477	IfStatement	if ( open_file )		3195348	5					
ANR	3195478	Condition	open_file	227:12:6117:6125	3195348	0	True				
ANR	3195479	Identifier	open_file		3195348	0					
ANR	3195480	CompoundStatement		27:23:600:600	3195348	1					
ANR	3195481	ExpressionStatement	"code = open_file ( iodev , pfn . fname , pfn . len , ""r"" , & ps , mem )"	228:12:6142:6200	3195348	0	True				
ANR	3195482	AssignmentExpression	"code = open_file ( iodev , pfn . fname , pfn . len , ""r"" , & ps , mem )"		3195348	0		=			
ANR	3195483	Identifier	code		3195348	0					
ANR	3195484	CallExpression	"open_file ( iodev , pfn . fname , pfn . len , ""r"" , & ps , mem )"		3195348	1					
ANR	3195485	Callee	open_file		3195348	0					
ANR	3195486	Identifier	open_file		3195348	0					
ANR	3195487	ArgumentList	iodev		3195348	1					
ANR	3195488	Argument	iodev		3195348	0					
ANR	3195489	Identifier	iodev		3195348	0					
ANR	3195490	Argument	pfn . fname		3195348	1					
ANR	3195491	MemberAccess	pfn . fname		3195348	0					
ANR	3195492	Identifier	pfn		3195348	0					
ANR	3195493	Identifier	fname		3195348	1					
ANR	3195494	Argument	pfn . len		3195348	2					
ANR	3195495	MemberAccess	pfn . len		3195348	0					
ANR	3195496	Identifier	pfn		3195348	0					
ANR	3195497	Identifier	len		3195348	1					
ANR	3195498	Argument	"""r"""		3195348	3					
ANR	3195499	PrimaryExpression	"""r"""		3195348	0					
ANR	3195500	Argument	& ps		3195348	4					
ANR	3195501	UnaryOperationExpression	& ps		3195348	0					
ANR	3195502	UnaryOperator	&		3195348	0					
ANR	3195503	Identifier	ps		3195348	1					
ANR	3195504	Argument	mem		3195348	5					
ANR	3195505	Identifier	mem		3195348	0					
ANR	3195506	IfStatement	if ( code < 0 )		3195348	1					
ANR	3195507	Condition	code < 0	229:16:6218:6225	3195348	0	True				
ANR	3195508	RelationalExpression	code < 0		3195348	0		<			
ANR	3195509	Identifier	code		3195348	0					
ANR	3195510	PrimaryExpression	0		3195348	1					
ANR	3195511	CompoundStatement		29:26:700:700	3195348	1					
ANR	3195512	GotoStatement	goto error_out ;	230:16:6246:6260	3195348	0	True				
ANR	3195513	Identifier	error_out		3195348	0					
ANR	3195514	ElseStatement	else		3195348	0					
ANR	3195515	CompoundStatement		33:13:771:771	3195348	0					
ANR	3195516	ExpressionStatement	"code = file_open_stream ( pfn . fname , pfn . len , ""r"" , file_default_buffer_size , & ps , pfn . iodev , pfn . iodev -> procs . gp_fopen , mem )"	234:12:6313:6517	3195348	0	True				
ANR	3195517	AssignmentExpression	"code = file_open_stream ( pfn . fname , pfn . len , ""r"" , file_default_buffer_size , & ps , pfn . iodev , pfn . iodev -> procs . gp_fopen , mem )"		3195348	0		=			
ANR	3195518	Identifier	code		3195348	0					
ANR	3195519	CallExpression	"file_open_stream ( pfn . fname , pfn . len , ""r"" , file_default_buffer_size , & ps , pfn . iodev , pfn . iodev -> procs . gp_fopen , mem )"		3195348	1					
ANR	3195520	Callee	file_open_stream		3195348	0					
ANR	3195521	Identifier	file_open_stream		3195348	0					
ANR	3195522	ArgumentList	pfn . fname		3195348	1					
ANR	3195523	Argument	pfn . fname		3195348	0					
ANR	3195524	MemberAccess	pfn . fname		3195348	0					
ANR	3195525	Identifier	pfn		3195348	0					
ANR	3195526	Identifier	fname		3195348	1					
ANR	3195527	Argument	pfn . len		3195348	1					
ANR	3195528	MemberAccess	pfn . len		3195348	0					
ANR	3195529	Identifier	pfn		3195348	0					
ANR	3195530	Identifier	len		3195348	1					
ANR	3195531	Argument	"""r"""		3195348	2					
ANR	3195532	PrimaryExpression	"""r"""		3195348	0					
ANR	3195533	Argument	file_default_buffer_size		3195348	3					
ANR	3195534	Identifier	file_default_buffer_size		3195348	0					
ANR	3195535	Argument	& ps		3195348	4					
ANR	3195536	UnaryOperationExpression	& ps		3195348	0					
ANR	3195537	UnaryOperator	&		3195348	0					
ANR	3195538	Identifier	ps		3195348	1					
ANR	3195539	Argument	pfn . iodev		3195348	5					
ANR	3195540	MemberAccess	pfn . iodev		3195348	0					
ANR	3195541	Identifier	pfn		3195348	0					
ANR	3195542	Identifier	iodev		3195348	1					
ANR	3195543	Argument	pfn . iodev -> procs . gp_fopen		3195348	6					
ANR	3195544	MemberAccess	pfn . iodev -> procs . gp_fopen		3195348	0					
ANR	3195545	PtrMemberAccess	pfn . iodev -> procs		3195348	0					
ANR	3195546	MemberAccess	pfn . iodev		3195348	0					
ANR	3195547	Identifier	pfn		3195348	0					
ANR	3195548	Identifier	iodev		3195348	1					
ANR	3195549	Identifier	procs		3195348	1					
ANR	3195550	Identifier	gp_fopen		3195348	1					
ANR	3195551	Argument	mem		3195348	7					
ANR	3195552	Identifier	mem		3195348	0					
ANR	3195553	IfStatement	if ( code < 0 )		3195348	1					
ANR	3195554	Condition	code < 0	238:16:6535:6542	3195348	0	True				
ANR	3195555	RelationalExpression	code < 0		3195348	0		<			
ANR	3195556	Identifier	code		3195348	0					
ANR	3195557	PrimaryExpression	0		3195348	1					
ANR	3195558	CompoundStatement		38:26:1017:1017	3195348	1					
ANR	3195559	GotoStatement	goto error_out ;	239:16:6563:6577	3195348	0	True				
ANR	3195560	Identifier	error_out		3195348	0					
ANR	3195561	ElseStatement	else		3195348	0					
ANR	3195562	CompoundStatement		43:9:1090:1090	3195348	0					
ANR	3195563	GotoStatement	goto error_out ;	244:8:6628:6642	3195348	0	True				
ANR	3195564	Identifier	error_out		3195348	0					
ANR	3195565	IfStatement	"if ( ( code = savailable ( ps , & length ) ) < 0 )"		3195348	10					
ANR	3195566	Condition	"( code = savailable ( ps , & length ) ) < 0"	247:8:6659:6694	3195348	0	True				
ANR	3195567	RelationalExpression	"( code = savailable ( ps , & length ) ) < 0"		3195348	0		<			
ANR	3195568	AssignmentExpression	"code = savailable ( ps , & length )"		3195348	0		=			
ANR	3195569	Identifier	code		3195348	0					
ANR	3195570	CallExpression	"savailable ( ps , & length )"		3195348	1					
ANR	3195571	Callee	savailable		3195348	0					
ANR	3195572	Identifier	savailable		3195348	0					
ANR	3195573	ArgumentList	ps		3195348	1					
ANR	3195574	Argument	ps		3195348	0					
ANR	3195575	Identifier	ps		3195348	0					
ANR	3195576	Argument	& length		3195348	1					
ANR	3195577	UnaryOperationExpression	& length		3195348	0					
ANR	3195578	UnaryOperator	&		3195348	0					
ANR	3195579	Identifier	length		3195348	1					
ANR	3195580	PrimaryExpression	0		3195348	1					
ANR	3195581	CompoundStatement		47:46:1169:1169	3195348	1					
ANR	3195582	GotoStatement	goto error_out ;	248:8:6707:6721	3195348	0	True				
ANR	3195583	Identifier	error_out		3195348	0					
ANR	3195584	ExpressionStatement	"ftstrm = gs_malloc ( mem , sizeof ( FT_StreamRec ) , 1 , ""FF_open_read_stream"" )"	251:4:6734:6805	3195348	11	True				
ANR	3195585	AssignmentExpression	"ftstrm = gs_malloc ( mem , sizeof ( FT_StreamRec ) , 1 , ""FF_open_read_stream"" )"		3195348	0		=			
ANR	3195586	Identifier	ftstrm		3195348	0					
ANR	3195587	CallExpression	"gs_malloc ( mem , sizeof ( FT_StreamRec ) , 1 , ""FF_open_read_stream"" )"		3195348	1					
ANR	3195588	Callee	gs_malloc		3195348	0					
ANR	3195589	Identifier	gs_malloc		3195348	0					
ANR	3195590	ArgumentList	mem		3195348	1					
ANR	3195591	Argument	mem		3195348	0					
ANR	3195592	Identifier	mem		3195348	0					
ANR	3195593	Argument	sizeof ( FT_StreamRec )		3195348	1					
ANR	3195594	SizeofExpression	sizeof ( FT_StreamRec )		3195348	0					
ANR	3195595	Sizeof	sizeof		3195348	0					
ANR	3195596	SizeofOperand	FT_StreamRec		3195348	1					
ANR	3195597	Argument	1		3195348	2					
ANR	3195598	PrimaryExpression	1		3195348	0					
ANR	3195599	Argument	"""FF_open_read_stream"""		3195348	3					
ANR	3195600	PrimaryExpression	"""FF_open_read_stream"""		3195348	0					
ANR	3195601	IfStatement	if ( ! ftstrm )		3195348	12					
ANR	3195602	Condition	! ftstrm	252:8:6815:6821	3195348	0	True				
ANR	3195603	UnaryOperationExpression	! ftstrm		3195348	0					
ANR	3195604	UnaryOperator	!		3195348	0					
ANR	3195605	Identifier	ftstrm		3195348	1					
ANR	3195606	CompoundStatement		52:17:1296:1296	3195348	1					
ANR	3195607	ExpressionStatement	code = gs_error_VMerror	253:8:6834:6857	3195348	0	True				
ANR	3195608	AssignmentExpression	code = gs_error_VMerror		3195348	0		=			
ANR	3195609	Identifier	code		3195348	0					
ANR	3195610	Identifier	gs_error_VMerror		3195348	1					
ANR	3195611	GotoStatement	goto error_out ;	254:8:6867:6881	3195348	1	True				
ANR	3195612	Identifier	error_out		3195348	0					
ANR	3195613	ExpressionStatement	"memset ( ftstrm , 0x00 , sizeof ( FT_StreamRec ) )"	256:4:6893:6935	3195348	13	True				
ANR	3195614	CallExpression	"memset ( ftstrm , 0x00 , sizeof ( FT_StreamRec ) )"		3195348	0					
ANR	3195615	Callee	memset		3195348	0					
ANR	3195616	Identifier	memset		3195348	0					
ANR	3195617	ArgumentList	ftstrm		3195348	1					
ANR	3195618	Argument	ftstrm		3195348	0					
ANR	3195619	Identifier	ftstrm		3195348	0					
ANR	3195620	Argument	0x00		3195348	1					
ANR	3195621	PrimaryExpression	0x00		3195348	0					
ANR	3195622	Argument	sizeof ( FT_StreamRec )		3195348	2					
ANR	3195623	SizeofExpression	sizeof ( FT_StreamRec )		3195348	0					
ANR	3195624	Sizeof	sizeof		3195348	0					
ANR	3195625	SizeofOperand	FT_StreamRec		3195348	1					
ANR	3195626	ExpressionStatement	ftstrm -> descriptor . pointer = ps	258:4:6942:6973	3195348	14	True				
ANR	3195627	AssignmentExpression	ftstrm -> descriptor . pointer = ps		3195348	0		=			
ANR	3195628	MemberAccess	ftstrm -> descriptor . pointer		3195348	0					
ANR	3195629	PtrMemberAccess	ftstrm -> descriptor		3195348	0					
ANR	3195630	Identifier	ftstrm		3195348	0					
ANR	3195631	Identifier	descriptor		3195348	1					
ANR	3195632	Identifier	pointer		3195348	1					
ANR	3195633	Identifier	ps		3195348	1					
ANR	3195634	ExpressionStatement	ftstrm -> read = FF_stream_read	259:4:6979:7008	3195348	15	True				
ANR	3195635	AssignmentExpression	ftstrm -> read = FF_stream_read		3195348	0		=			
ANR	3195636	PtrMemberAccess	ftstrm -> read		3195348	0					
ANR	3195637	Identifier	ftstrm		3195348	0					
ANR	3195638	Identifier	read		3195348	1					
ANR	3195639	Identifier	FF_stream_read		3195348	1					
ANR	3195640	ExpressionStatement	ftstrm -> close = FF_stream_close	260:4:7014:7045	3195348	16	True				
ANR	3195641	AssignmentExpression	ftstrm -> close = FF_stream_close		3195348	0		=			
ANR	3195642	PtrMemberAccess	ftstrm -> close		3195348	0					
ANR	3195643	Identifier	ftstrm		3195348	0					
ANR	3195644	Identifier	close		3195348	1					
ANR	3195645	Identifier	FF_stream_close		3195348	1					
ANR	3195646	ExpressionStatement	ftstrm -> size = ( long ) length	261:4:7051:7078	3195348	17	True				
ANR	3195647	AssignmentExpression	ftstrm -> size = ( long ) length		3195348	0		=			
ANR	3195648	PtrMemberAccess	ftstrm -> size		3195348	0					
ANR	3195649	Identifier	ftstrm		3195348	0					
ANR	3195650	Identifier	size		3195348	1					
ANR	3195651	CastExpression	( long ) length		3195348	1					
ANR	3195652	CastTarget	long		3195348	0					
ANR	3195653	Identifier	length		3195348	1					
ANR	3195654	ExpressionStatement	* fts = ftstrm	262:4:7084:7097	3195348	18	True				
ANR	3195655	AssignmentExpression	* fts = ftstrm		3195348	0		=			
ANR	3195656	UnaryOperationExpression	* fts		3195348	0					
ANR	3195657	UnaryOperator	*		3195348	0					
ANR	3195658	Identifier	fts		3195348	1					
ANR	3195659	Identifier	ftstrm		3195348	1					
ANR	3195660	Label	error_out :	264:2:7102:7111	3195348	19	True				
ANR	3195661	Identifier	error_out		3195348	0					
ANR	3195662	IfStatement	if ( code < 0 )		3195348	20					
ANR	3195663	Condition	code < 0	265:8:7121:7128	3195348	0	True				
ANR	3195664	RelationalExpression	code < 0		3195348	0		<			
ANR	3195665	Identifier	code		3195348	0					
ANR	3195666	PrimaryExpression	0		3195348	1					
ANR	3195667	CompoundStatement		65:18:1603:1603	3195348	1					
ANR	3195668	IfStatement	if ( ps )		3195348	0					
ANR	3195669	Condition	ps	266:12:7145:7146	3195348	0	True				
ANR	3195670	Identifier	ps		3195348	0					
ANR	3195671	ExpressionStatement	( void ) sclose ( ps )	267:12:7161:7177	3195348	1	True				
ANR	3195672	CastExpression	( void ) sclose ( ps )		3195348	0					
ANR	3195673	CastTarget	void		3195348	0					
ANR	3195674	CallExpression	sclose ( ps )		3195348	1					
ANR	3195675	Callee	sclose		3195348	0					
ANR	3195676	Identifier	sclose		3195348	0					
ANR	3195677	ArgumentList	ps		3195348	1					
ANR	3195678	Argument	ps		3195348	0					
ANR	3195679	Identifier	ps		3195348	0					
ANR	3195680	IfStatement	if ( ftstrm )		3195348	1					
ANR	3195681	Condition	ftstrm	268:12:7191:7196	3195348	0	True				
ANR	3195682	Identifier	ftstrm		3195348	0					
ANR	3195683	ExpressionStatement	"gs_free ( mem , ftstrm , 0 , 0 , ""FF_open_read_stream"" )"	269:12:7211:7260	3195348	1	True				
ANR	3195684	CallExpression	"gs_free ( mem , ftstrm , 0 , 0 , ""FF_open_read_stream"" )"		3195348	0					
ANR	3195685	Callee	gs_free		3195348	0					
ANR	3195686	Identifier	gs_free		3195348	0					
ANR	3195687	ArgumentList	mem		3195348	1					
ANR	3195688	Argument	mem		3195348	0					
ANR	3195689	Identifier	mem		3195348	0					
ANR	3195690	Argument	ftstrm		3195348	1					
ANR	3195691	Identifier	ftstrm		3195348	0					
ANR	3195692	Argument	0		3195348	2					
ANR	3195693	PrimaryExpression	0		3195348	0					
ANR	3195694	Argument	0		3195348	3					
ANR	3195695	PrimaryExpression	0		3195348	0					
ANR	3195696	Argument	"""FF_open_read_stream"""		3195348	4					
ANR	3195697	PrimaryExpression	"""FF_open_read_stream"""		3195348	0					
ANR	3195698	ReturnStatement	return ( code ) ;	271:4:7272:7285	3195348	21	True				
ANR	3195699	Identifier	code		3195348	0					
ANR	3195700	ReturnType	static int		3195348	1					
ANR	3195701	Identifier	FF_open_read_stream		3195348	2					
ANR	3195702	ParameterList	"gs_memory_t * mem , char * fname , FT_Stream * fts"		3195348	3					
ANR	3195703	Parameter	gs_memory_t * mem	200:20:5478:5494	3195348	0	True				
ANR	3195704	ParameterType	gs_memory_t *		3195348	0					
ANR	3195705	Identifier	mem		3195348	1					
ANR	3195706	Parameter	char * fname	200:39:5497:5507	3195348	1	True				
ANR	3195707	ParameterType	char *		3195348	0					
ANR	3195708	Identifier	fname		3195348	1					
ANR	3195709	Parameter	FT_Stream * fts	200:52:5510:5524	3195348	2	True				
ANR	3195710	ParameterType	FT_Stream *		3195348	0					
ANR	3195711	Identifier	fts		3195348	1					
ANR	3195712	CFGEntryNode	ENTRY		3195348		True				
ANR	3195713	CFGExitNode	EXIT		3195348		True				
ANR	3195714	Symbol	code		3195348						
ANR	3195715	Symbol	ps		3195348						
ANR	3195716	Symbol	* open_file		3195348						
ANR	3195717	Symbol	pfn . iodev		3195348						
ANR	3195718	Symbol	pfn . iodev -> procs		3195348						
ANR	3195719	Symbol	pfn . iodev -> procs . gp_fopen		3195348						
ANR	3195720	Symbol	savailable		3195348						
ANR	3195721	Symbol	ftstrm -> read		3195348						
ANR	3195722	Symbol	ftstrm		3195348						
ANR	3195723	Symbol	file_open_stream		3195348						
ANR	3195724	Symbol	strlen		3195348						
ANR	3195725	Symbol	iodev_proc_open_file		3195348						
ANR	3195726	Symbol	FF_stream_read		3195348						
ANR	3195727	Symbol	mem		3195348						
ANR	3195728	Symbol	iodev		3195348						
ANR	3195729	Symbol	* pfn . iodev		3195348						
ANR	3195730	Symbol	& pfn		3195348						
ANR	3195731	Symbol	FF_stream_close		3195348						
ANR	3195732	Symbol	gs_parse_file_name		3195348						
ANR	3195733	Symbol	ftstrm -> descriptor		3195348						
ANR	3195734	Symbol	iodev -> procs . open_file		3195348						
ANR	3195735	Symbol	iodev -> procs		3195348						
ANR	3195736	Symbol	fname		3195348						
ANR	3195737	Symbol	* pfn		3195348						
ANR	3195738	Symbol	& length		3195348						
ANR	3195739	Symbol	NULL		3195348						
ANR	3195740	Symbol	fts		3195348						
ANR	3195741	Symbol	* iodev		3195348						
ANR	3195742	Symbol	length		3195348						
ANR	3195743	Symbol	gs_error_undefinedfilename		3195348						
ANR	3195744	Symbol	& ps		3195348						
ANR	3195745	Symbol	* fts		3195348						
ANR	3195746	Symbol	gs_error_VMerror		3195348						
ANR	3195747	Symbol	pfn . len		3195348						
ANR	3195748	Symbol	gs_malloc		3195348						
ANR	3195749	Symbol	iodev_default		3195348						
ANR	3195750	Symbol	open_file		3195348						
ANR	3195751	Symbol	ftstrm -> descriptor . pointer		3195348						
ANR	3195752	Symbol	ftstrm -> close		3195348						
ANR	3195753	Symbol	pfn		3195348						
ANR	3195754	Symbol	file_default_buffer_size		3195348						
ANR	3195755	Symbol	ftstrm -> size		3195348						
ANR	3195756	Symbol	pfn . fname		3195348						
ANR	3195757	Symbol	* ftstrm		3195348						
ANR	3195758	Function	new_face	275:0:7291:7946							
ANR	3195759	FunctionDef	"new_face (gs_fapi_server * a_server , FT_Face a_ft_face , FT_Incremental_InterfaceRec * a_ft_inc_int , FT_Stream ftstrm , unsigned char * a_font_data , int a_font_data_len , bool data_owned)"		3195758	0					
ANR	3195760	CompoundStatement		279:0:7509:7946	3195758	0					
ANR	3195761	IdentifierDeclStatement	ff_server * s = ( ff_server * ) a_server ;	280:4:7515:7552	3195758	0	True				
ANR	3195762	IdentifierDecl	* s = ( ff_server * ) a_server		3195758	0					
ANR	3195763	IdentifierDeclType	ff_server *		3195758	0					
ANR	3195764	Identifier	s		3195758	1					
ANR	3195765	AssignmentExpression	* s = ( ff_server * ) a_server		3195758	2		=			
ANR	3195766	Identifier	s		3195758	0					
ANR	3195767	CastExpression	( ff_server * ) a_server		3195758	1					
ANR	3195768	CastTarget	ff_server *		3195758	0					
ANR	3195769	Identifier	a_server		3195758	1					
ANR	3195770	IdentifierDeclStatement	"ff_face * face = ( ff_face * ) FF_alloc ( s -> ftmemory , sizeof ( ff_face ) ) ;"	282:4:7559:7625	3195758	1	True				
ANR	3195771	IdentifierDecl	"* face = ( ff_face * ) FF_alloc ( s -> ftmemory , sizeof ( ff_face ) )"		3195758	0					
ANR	3195772	IdentifierDeclType	ff_face *		3195758	0					
ANR	3195773	Identifier	face		3195758	1					
ANR	3195774	AssignmentExpression	"* face = ( ff_face * ) FF_alloc ( s -> ftmemory , sizeof ( ff_face ) )"		3195758	2		=			
ANR	3195775	Identifier	face		3195758	0					
ANR	3195776	CastExpression	"( ff_face * ) FF_alloc ( s -> ftmemory , sizeof ( ff_face ) )"		3195758	1					
ANR	3195777	CastTarget	ff_face *		3195758	0					
ANR	3195778	CallExpression	"FF_alloc ( s -> ftmemory , sizeof ( ff_face ) )"		3195758	1					
ANR	3195779	Callee	FF_alloc		3195758	0					
ANR	3195780	Identifier	FF_alloc		3195758	0					
ANR	3195781	ArgumentList	s -> ftmemory		3195758	1					
ANR	3195782	Argument	s -> ftmemory		3195758	0					
ANR	3195783	PtrMemberAccess	s -> ftmemory		3195758	0					
ANR	3195784	Identifier	s		3195758	0					
ANR	3195785	Identifier	ftmemory		3195758	1					
ANR	3195786	Argument	sizeof ( ff_face )		3195758	1					
ANR	3195787	SizeofExpression	sizeof ( ff_face )		3195758	0					
ANR	3195788	Sizeof	sizeof		3195758	0					
ANR	3195789	SizeofOperand	ff_face		3195758	1					
ANR	3195790	IfStatement	if ( face )		3195758	2					
ANR	3195791	Condition	face	284:8:7636:7639	3195758	0	True				
ANR	3195792	Identifier	face		3195758	0					
ANR	3195793	CompoundStatement		6:14:132:132	3195758	1					
ANR	3195794	ExpressionStatement	face -> ft_face = a_ft_face	285:8:7652:7677	3195758	0	True				
ANR	3195795	AssignmentExpression	face -> ft_face = a_ft_face		3195758	0		=			
ANR	3195796	PtrMemberAccess	face -> ft_face		3195758	0					
ANR	3195797	Identifier	face		3195758	0					
ANR	3195798	Identifier	ft_face		3195758	1					
ANR	3195799	Identifier	a_ft_face		3195758	1					
ANR	3195800	ExpressionStatement	face -> ft_inc_int = a_ft_inc_int	286:8:7687:7718	3195758	1	True				
ANR	3195801	AssignmentExpression	face -> ft_inc_int = a_ft_inc_int		3195758	0		=			
ANR	3195802	PtrMemberAccess	face -> ft_inc_int		3195758	0					
ANR	3195803	Identifier	face		3195758	0					
ANR	3195804	Identifier	ft_inc_int		3195758	1					
ANR	3195805	Identifier	a_ft_inc_int		3195758	1					
ANR	3195806	ExpressionStatement	face -> font_data = a_font_data	287:8:7728:7757	3195758	2	True				
ANR	3195807	AssignmentExpression	face -> font_data = a_font_data		3195758	0		=			
ANR	3195808	PtrMemberAccess	face -> font_data		3195758	0					
ANR	3195809	Identifier	face		3195758	0					
ANR	3195810	Identifier	font_data		3195758	1					
ANR	3195811	Identifier	a_font_data		3195758	1					
ANR	3195812	ExpressionStatement	face -> font_data_len = a_font_data_len	288:8:7767:7804	3195758	3	True				
ANR	3195813	AssignmentExpression	face -> font_data_len = a_font_data_len		3195758	0		=			
ANR	3195814	PtrMemberAccess	face -> font_data_len		3195758	0					
ANR	3195815	Identifier	face		3195758	0					
ANR	3195816	Identifier	font_data_len		3195758	1					
ANR	3195817	Identifier	a_font_data_len		3195758	1					
ANR	3195818	ExpressionStatement	face -> data_owned = data_owned	289:8:7814:7843	3195758	4	True				
ANR	3195819	AssignmentExpression	face -> data_owned = data_owned		3195758	0		=			
ANR	3195820	PtrMemberAccess	face -> data_owned		3195758	0					
ANR	3195821	Identifier	face		3195758	0					
ANR	3195822	Identifier	data_owned		3195758	1					
ANR	3195823	Identifier	data_owned		3195758	1					
ANR	3195824	ExpressionStatement	face -> ftstrm = ftstrm	290:8:7853:7874	3195758	5	True				
ANR	3195825	AssignmentExpression	face -> ftstrm = ftstrm		3195758	0		=			
ANR	3195826	PtrMemberAccess	face -> ftstrm		3195758	0					
ANR	3195827	Identifier	face		3195758	0					
ANR	3195828	Identifier	ftstrm		3195758	1					
ANR	3195829	Identifier	ftstrm		3195758	1					
ANR	3195830	ExpressionStatement	face -> server = ( ff_server * ) a_server	291:8:7884:7921	3195758	6	True				
ANR	3195831	AssignmentExpression	face -> server = ( ff_server * ) a_server		3195758	0		=			
ANR	3195832	PtrMemberAccess	face -> server		3195758	0					
ANR	3195833	Identifier	face		3195758	0					
ANR	3195834	Identifier	server		3195758	1					
ANR	3195835	CastExpression	( ff_server * ) a_server		3195758	1					
ANR	3195836	CastTarget	ff_server *		3195758	0					
ANR	3195837	Identifier	a_server		3195758	1					
ANR	3195838	ReturnStatement	return face ;	293:4:7933:7944	3195758	3	True				
ANR	3195839	Identifier	face		3195758	0					
ANR	3195840	ReturnType	static ff_face *		3195758	1					
ANR	3195841	Identifier	new_face		3195758	2					
ANR	3195842	ParameterList	"gs_fapi_server * a_server , FT_Face a_ft_face , FT_Incremental_InterfaceRec * a_ft_inc_int , FT_Stream ftstrm , unsigned char * a_font_data , int a_font_data_len , bool data_owned"		3195758	3					
ANR	3195843	Parameter	gs_fapi_server * a_server	276:9:7317:7341	3195758	0	True				
ANR	3195844	ParameterType	gs_fapi_server *		3195758	0					
ANR	3195845	Identifier	a_server		3195758	1					
ANR	3195846	Parameter	FT_Face a_ft_face	276:36:7344:7360	3195758	1	True				
ANR	3195847	ParameterType	FT_Face		3195758	0					
ANR	3195848	Identifier	a_ft_face		3195758	1					
ANR	3195849	Parameter	FT_Incremental_InterfaceRec * a_ft_inc_int	277:9:7372:7413	3195758	2	True				
ANR	3195850	ParameterType	FT_Incremental_InterfaceRec *		3195758	0					
ANR	3195851	Identifier	a_ft_inc_int		3195758	1					
ANR	3195852	Parameter	FT_Stream ftstrm	277:53:7416:7431	3195758	3	True				
ANR	3195853	ParameterType	FT_Stream		3195758	0					
ANR	3195854	Identifier	ftstrm		3195758	1					
ANR	3195855	Parameter	unsigned char * a_font_data	278:9:7443:7468	3195758	4	True				
ANR	3195856	ParameterType	unsigned char *		3195758	0					
ANR	3195857	Identifier	a_font_data		3195758	1					
ANR	3195858	Parameter	int a_font_data_len	278:37:7471:7489	3195758	5	True				
ANR	3195859	ParameterType	int		3195758	0					
ANR	3195860	Identifier	a_font_data_len		3195758	1					
ANR	3195861	Parameter	bool data_owned	278:58:7492:7506	3195758	6	True				
ANR	3195862	ParameterType	bool		3195758	0					
ANR	3195863	Identifier	data_owned		3195758	1					
ANR	3195864	CFGEntryNode	ENTRY		3195758		True				
ANR	3195865	CFGExitNode	EXIT		3195758		True				
ANR	3195866	Symbol	data_owned		3195758						
ANR	3195867	Symbol	face -> font_data_len		3195758						
ANR	3195868	Symbol	a_font_data		3195758						
ANR	3195869	Symbol	face -> font_data		3195758						
ANR	3195870	Symbol	a_server		3195758						
ANR	3195871	Symbol	face -> ft_face		3195758						
ANR	3195872	Symbol	face -> ft_inc_int		3195758						
ANR	3195873	Symbol	a_ft_face		3195758						
ANR	3195874	Symbol	face -> ftstrm		3195758						
ANR	3195875	Symbol	ftstrm		3195758						
ANR	3195876	Symbol	* face		3195758						
ANR	3195877	Symbol	face		3195758						
ANR	3195878	Symbol	s		3195758						
ANR	3195879	Symbol	face -> data_owned		3195758						
ANR	3195880	Symbol	face -> server		3195758						
ANR	3195881	Symbol	a_font_data_len		3195758						
ANR	3195882	Symbol	s -> ftmemory		3195758						
ANR	3195883	Symbol	FF_alloc		3195758						
ANR	3195884	Symbol	a_ft_inc_int		3195758						
ANR	3195885	Symbol	* s		3195758						
ANR	3195886	Function	delete_face	296:0:7949:8808							
ANR	3195887	FunctionDef	"delete_face (gs_fapi_server * a_server , ff_face * a_face)"		3195886	0					
ANR	3195888	CompoundStatement		298:0:8018:8808	3195886	0					
ANR	3195889	IfStatement	if ( a_face )		3195886	0					
ANR	3195890	Condition	a_face	299:8:8028:8033	3195886	0	True				
ANR	3195891	Identifier	a_face		3195886	0					
ANR	3195892	CompoundStatement		3:8:27:64	3195886	1					
ANR	3195893	IdentifierDeclStatement	ff_server * s = ( ff_server * ) a_server ;	300:8:8046:8083	3195886	0	True				
ANR	3195894	IdentifierDecl	* s = ( ff_server * ) a_server		3195886	0					
ANR	3195895	IdentifierDeclType	ff_server *		3195886	0					
ANR	3195896	Identifier	s		3195886	1					
ANR	3195897	AssignmentExpression	* s = ( ff_server * ) a_server		3195886	2		=			
ANR	3195898	Identifier	s		3195886	0					
ANR	3195899	CastExpression	( ff_server * ) a_server		3195886	1					
ANR	3195900	CastTarget	ff_server *		3195886	0					
ANR	3195901	Identifier	a_server		3195886	1					
ANR	3195902	IfStatement	if ( a_face -> ft_inc_int )		3195886	1					
ANR	3195903	Condition	a_face -> ft_inc_int	301:12:8097:8114	3195886	0	True				
ANR	3195904	PtrMemberAccess	a_face -> ft_inc_int		3195886	0					
ANR	3195905	Identifier	a_face		3195886	0					
ANR	3195906	Identifier	ft_inc_int		3195886	1					
ANR	3195907	CompoundStatement		5:12:112:162	3195886	1					
ANR	3195908	IdentifierDeclStatement	FT_Incremental a_info = a_face -> ft_inc_int -> object ;	302:12:8131:8181	3195886	0	True				
ANR	3195909	IdentifierDecl	a_info = a_face -> ft_inc_int -> object		3195886	0					
ANR	3195910	IdentifierDeclType	FT_Incremental		3195886	0					
ANR	3195911	Identifier	a_info		3195886	1					
ANR	3195912	AssignmentExpression	a_info = a_face -> ft_inc_int -> object		3195886	2		=			
ANR	3195913	Identifier	a_info		3195886	0					
ANR	3195914	PtrMemberAccess	a_face -> ft_inc_int -> object		3195886	1					
ANR	3195915	PtrMemberAccess	a_face -> ft_inc_int		3195886	0					
ANR	3195916	Identifier	a_face		3195886	0					
ANR	3195917	Identifier	ft_inc_int		3195886	1					
ANR	3195918	Identifier	object		3195886	1					
ANR	3195919	IfStatement	if ( a_info -> glyph_data )		3195886	1					
ANR	3195920	Condition	a_info -> glyph_data	304:16:8200:8217	3195886	0	True				
ANR	3195921	PtrMemberAccess	a_info -> glyph_data		3195886	0					
ANR	3195922	Identifier	a_info		3195886	0					
ANR	3195923	Identifier	glyph_data		3195886	1					
ANR	3195924	CompoundStatement		7:36:201:201	3195886	1					
ANR	3195925	ExpressionStatement	"gs_free ( s -> mem , a_info -> glyph_data , 0 , 0 , ""delete_face"" )"	305:16:8238:8294	3195886	0	True				
ANR	3195926	CallExpression	"gs_free ( s -> mem , a_info -> glyph_data , 0 , 0 , ""delete_face"" )"		3195886	0					
ANR	3195927	Callee	gs_free		3195886	0					
ANR	3195928	Identifier	gs_free		3195886	0					
ANR	3195929	ArgumentList	s -> mem		3195886	1					
ANR	3195930	Argument	s -> mem		3195886	0					
ANR	3195931	PtrMemberAccess	s -> mem		3195886	0					
ANR	3195932	Identifier	s		3195886	0					
ANR	3195933	Identifier	mem		3195886	1					
ANR	3195934	Argument	a_info -> glyph_data		3195886	1					
ANR	3195935	PtrMemberAccess	a_info -> glyph_data		3195886	0					
ANR	3195936	Identifier	a_info		3195886	0					
ANR	3195937	Identifier	glyph_data		3195886	1					
ANR	3195938	Argument	0		3195886	2					
ANR	3195939	PrimaryExpression	0		3195886	0					
ANR	3195940	Argument	0		3195886	3					
ANR	3195941	PrimaryExpression	0		3195886	0					
ANR	3195942	Argument	"""delete_face"""		3195886	4					
ANR	3195943	PrimaryExpression	"""delete_face"""		3195886	0					
ANR	3195944	ExpressionStatement	a_info -> glyph_data = NULL	307:12:8322:8347	3195886	2	True				
ANR	3195945	AssignmentExpression	a_info -> glyph_data = NULL		3195886	0		=			
ANR	3195946	PtrMemberAccess	a_info -> glyph_data		3195886	0					
ANR	3195947	Identifier	a_info		3195886	0					
ANR	3195948	Identifier	glyph_data		3195886	1					
ANR	3195949	Identifier	NULL		3195886	1					
ANR	3195950	ExpressionStatement	a_info -> glyph_data_length = 0	308:12:8361:8390	3195886	3	True				
ANR	3195951	AssignmentExpression	a_info -> glyph_data_length = 0		3195886	0		=			
ANR	3195952	PtrMemberAccess	a_info -> glyph_data_length		3195886	0					
ANR	3195953	Identifier	a_info		3195886	0					
ANR	3195954	Identifier	glyph_data_length		3195886	1					
ANR	3195955	PrimaryExpression	0		3195886	1					
ANR	3195956	ExpressionStatement	"delete_inc_int ( a_server , a_face -> ft_inc_int )"	309:12:8404:8448	3195886	4	True				
ANR	3195957	CallExpression	"delete_inc_int ( a_server , a_face -> ft_inc_int )"		3195886	0					
ANR	3195958	Callee	delete_inc_int		3195886	0					
ANR	3195959	Identifier	delete_inc_int		3195886	0					
ANR	3195960	ArgumentList	a_server		3195886	1					
ANR	3195961	Argument	a_server		3195886	0					
ANR	3195962	Identifier	a_server		3195886	0					
ANR	3195963	Argument	a_face -> ft_inc_int		3195886	1					
ANR	3195964	PtrMemberAccess	a_face -> ft_inc_int		3195886	0					
ANR	3195965	Identifier	a_face		3195886	0					
ANR	3195966	Identifier	ft_inc_int		3195886	1					
ANR	3195967	ExpressionStatement	a_face -> ft_inc_int = NULL	310:12:8462:8487	3195886	5	True				
ANR	3195968	AssignmentExpression	a_face -> ft_inc_int = NULL		3195886	0		=			
ANR	3195969	PtrMemberAccess	a_face -> ft_inc_int		3195886	0					
ANR	3195970	Identifier	a_face		3195886	0					
ANR	3195971	Identifier	ft_inc_int		3195886	1					
ANR	3195972	Identifier	NULL		3195886	1					
ANR	3195973	ExpressionStatement	FT_Done_Face ( a_face -> ft_face )	312:8:8507:8536	3195886	2	True				
ANR	3195974	CallExpression	FT_Done_Face ( a_face -> ft_face )		3195886	0					
ANR	3195975	Callee	FT_Done_Face		3195886	0					
ANR	3195976	Identifier	FT_Done_Face		3195886	0					
ANR	3195977	ArgumentList	a_face -> ft_face		3195886	1					
ANR	3195978	Argument	a_face -> ft_face		3195886	0					
ANR	3195979	PtrMemberAccess	a_face -> ft_face		3195886	0					
ANR	3195980	Identifier	a_face		3195886	0					
ANR	3195981	Identifier	ft_face		3195886	1					
ANR	3195982	ExpressionStatement	"FF_free ( s -> ftmemory , a_face -> ft_inc_int )"	314:8:8547:8587	3195886	3	True				
ANR	3195983	CallExpression	"FF_free ( s -> ftmemory , a_face -> ft_inc_int )"		3195886	0					
ANR	3195984	Callee	FF_free		3195886	0					
ANR	3195985	Identifier	FF_free		3195886	0					
ANR	3195986	ArgumentList	s -> ftmemory		3195886	1					
ANR	3195987	Argument	s -> ftmemory		3195886	0					
ANR	3195988	PtrMemberAccess	s -> ftmemory		3195886	0					
ANR	3195989	Identifier	s		3195886	0					
ANR	3195990	Identifier	ftmemory		3195886	1					
ANR	3195991	Argument	a_face -> ft_inc_int		3195886	1					
ANR	3195992	PtrMemberAccess	a_face -> ft_inc_int		3195886	0					
ANR	3195993	Identifier	a_face		3195886	0					
ANR	3195994	Identifier	ft_inc_int		3195886	1					
ANR	3195995	IfStatement	if ( a_face -> data_owned )		3195886	4					
ANR	3195996	Condition	a_face -> data_owned	315:12:8601:8618	3195886	0	True				
ANR	3195997	PtrMemberAccess	a_face -> data_owned		3195886	0					
ANR	3195998	Identifier	a_face		3195886	0					
ANR	3195999	Identifier	data_owned		3195886	1					
ANR	3196000	ExpressionStatement	"FF_free ( s -> ftmemory , a_face -> font_data )"	316:12:8633:8672	3195886	1	True				
ANR	3196001	CallExpression	"FF_free ( s -> ftmemory , a_face -> font_data )"		3195886	0					
ANR	3196002	Callee	FF_free		3195886	0					
ANR	3196003	Identifier	FF_free		3195886	0					
ANR	3196004	ArgumentList	s -> ftmemory		3195886	1					
ANR	3196005	Argument	s -> ftmemory		3195886	0					
ANR	3196006	PtrMemberAccess	s -> ftmemory		3195886	0					
ANR	3196007	Identifier	s		3195886	0					
ANR	3196008	Identifier	ftmemory		3195886	1					
ANR	3196009	Argument	a_face -> font_data		3195886	1					
ANR	3196010	PtrMemberAccess	a_face -> font_data		3195886	0					
ANR	3196011	Identifier	a_face		3195886	0					
ANR	3196012	Identifier	font_data		3195886	1					
ANR	3196013	IfStatement	if ( a_face -> ftstrm )		3195886	5					
ANR	3196014	Condition	a_face -> ftstrm	317:12:8686:8699	3195886	0	True				
ANR	3196015	PtrMemberAccess	a_face -> ftstrm		3195886	0					
ANR	3196016	Identifier	a_face		3195886	0					
ANR	3196017	Identifier	ftstrm		3195886	1					
ANR	3196018	CompoundStatement		20:28:683:683	3195886	1					
ANR	3196019	ExpressionStatement	"FF_free ( s -> ftmemory , a_face -> ftstrm )"	318:12:8716:8752	3195886	0	True				
ANR	3196020	CallExpression	"FF_free ( s -> ftmemory , a_face -> ftstrm )"		3195886	0					
ANR	3196021	Callee	FF_free		3195886	0					
ANR	3196022	Identifier	FF_free		3195886	0					
ANR	3196023	ArgumentList	s -> ftmemory		3195886	1					
ANR	3196024	Argument	s -> ftmemory		3195886	0					
ANR	3196025	PtrMemberAccess	s -> ftmemory		3195886	0					
ANR	3196026	Identifier	s		3195886	0					
ANR	3196027	Identifier	ftmemory		3195886	1					
ANR	3196028	Argument	a_face -> ftstrm		3195886	1					
ANR	3196029	PtrMemberAccess	a_face -> ftstrm		3195886	0					
ANR	3196030	Identifier	a_face		3195886	0					
ANR	3196031	Identifier	ftstrm		3195886	1					
ANR	3196032	ExpressionStatement	"FF_free ( s -> ftmemory , a_face )"	320:8:8772:8800	3195886	6	True				
ANR	3196033	CallExpression	"FF_free ( s -> ftmemory , a_face )"		3195886	0					
ANR	3196034	Callee	FF_free		3195886	0					
ANR	3196035	Identifier	FF_free		3195886	0					
ANR	3196036	ArgumentList	s -> ftmemory		3195886	1					
ANR	3196037	Argument	s -> ftmemory		3195886	0					
ANR	3196038	PtrMemberAccess	s -> ftmemory		3195886	0					
ANR	3196039	Identifier	s		3195886	0					
ANR	3196040	Identifier	ftmemory		3195886	1					
ANR	3196041	Argument	a_face		3195886	1					
ANR	3196042	Identifier	a_face		3195886	0					
ANR	3196043	ReturnType	static void		3195886	1					
ANR	3196044	Identifier	delete_face		3195886	2					
ANR	3196045	ParameterList	"gs_fapi_server * a_server , ff_face * a_face"		3195886	3					
ANR	3196046	Parameter	gs_fapi_server * a_server	297:12:7973:7997	3195886	0	True				
ANR	3196047	ParameterType	gs_fapi_server *		3195886	0					
ANR	3196048	Identifier	a_server		3195886	1					
ANR	3196049	Parameter	ff_face * a_face	297:39:8000:8015	3195886	1	True				
ANR	3196050	ParameterType	ff_face *		3195886	0					
ANR	3196051	Identifier	a_face		3195886	1					
ANR	3196052	CFGEntryNode	ENTRY		3195886		True				
ANR	3196053	CFGExitNode	EXIT		3195886		True				
ANR	3196054	Symbol	s -> mem		3195886						
ANR	3196055	Symbol	a_face -> ft_face		3195886						
ANR	3196056	Symbol	NULL		3195886						
ANR	3196057	Symbol	* * a_face		3195886						
ANR	3196058	Symbol	a_server		3195886						
ANR	3196059	Symbol	a_info -> glyph_data_length		3195886						
ANR	3196060	Symbol	* a_info		3195886						
ANR	3196061	Symbol	a_face		3195886						
ANR	3196062	Symbol	a_info -> glyph_data		3195886						
ANR	3196063	Symbol	a_face -> font_data		3195886						
ANR	3196064	Symbol	a_face -> data_owned		3195886						
ANR	3196065	Symbol	s		3195886						
ANR	3196066	Symbol	a_face -> ft_inc_int -> object		3195886						
ANR	3196067	Symbol	* a_face -> ft_inc_int		3195886						
ANR	3196068	Symbol	* a_face		3195886						
ANR	3196069	Symbol	s -> ftmemory		3195886						
ANR	3196070	Symbol	a_face -> ftstrm		3195886						
ANR	3196071	Symbol	* s		3195886						
ANR	3196072	Symbol	a_face -> ft_inc_int		3195886						
ANR	3196073	Symbol	a_info		3195886						
ANR	3196074	Function	new_inc_int_info	324:0:8811:9395							
ANR	3196075	FunctionDef	"new_inc_int_info (gs_fapi_server * a_server , gs_fapi_font * a_fapi_font)"		3196074	0					
ANR	3196076	CompoundStatement		326:0:8910:9395	3196074	0					
ANR	3196077	IdentifierDeclStatement	ff_server * s = ( ff_server * ) a_server ;	327:4:8916:8953	3196074	0	True				
ANR	3196078	IdentifierDecl	* s = ( ff_server * ) a_server		3196074	0					
ANR	3196079	IdentifierDeclType	ff_server *		3196074	0					
ANR	3196080	Identifier	s		3196074	1					
ANR	3196081	AssignmentExpression	* s = ( ff_server * ) a_server		3196074	2		=			
ANR	3196082	Identifier	s		3196074	0					
ANR	3196083	CastExpression	( ff_server * ) a_server		3196074	1					
ANR	3196084	CastTarget	ff_server *		3196074	0					
ANR	3196085	Identifier	a_server		3196074	1					
ANR	3196086	IdentifierDeclStatement	"FT_IncrementalRec * info = ( FT_IncrementalRec * ) FF_alloc ( s -> ftmemory , sizeof ( FT_IncrementalRec ) ) ;"	329:4:8960:9103	3196074	1	True				
ANR	3196087	IdentifierDecl	"* info = ( FT_IncrementalRec * ) FF_alloc ( s -> ftmemory , sizeof ( FT_IncrementalRec ) )"		3196074	0					
ANR	3196088	IdentifierDeclType	FT_IncrementalRec *		3196074	0					
ANR	3196089	Identifier	info		3196074	1					
ANR	3196090	AssignmentExpression	"* info = ( FT_IncrementalRec * ) FF_alloc ( s -> ftmemory , sizeof ( FT_IncrementalRec ) )"		3196074	2		=			
ANR	3196091	Identifier	info		3196074	0					
ANR	3196092	CastExpression	"( FT_IncrementalRec * ) FF_alloc ( s -> ftmemory , sizeof ( FT_IncrementalRec ) )"		3196074	1					
ANR	3196093	CastTarget	FT_IncrementalRec *		3196074	0					
ANR	3196094	CallExpression	"FF_alloc ( s -> ftmemory , sizeof ( FT_IncrementalRec ) )"		3196074	1					
ANR	3196095	Callee	FF_alloc		3196074	0					
ANR	3196096	Identifier	FF_alloc		3196074	0					
ANR	3196097	ArgumentList	s -> ftmemory		3196074	1					
ANR	3196098	Argument	s -> ftmemory		3196074	0					
ANR	3196099	PtrMemberAccess	s -> ftmemory		3196074	0					
ANR	3196100	Identifier	s		3196074	0					
ANR	3196101	Identifier	ftmemory		3196074	1					
ANR	3196102	Argument	sizeof ( FT_IncrementalRec )		3196074	1					
ANR	3196103	SizeofExpression	sizeof ( FT_IncrementalRec )		3196074	0					
ANR	3196104	Sizeof	sizeof		3196074	0					
ANR	3196105	SizeofOperand	FT_IncrementalRec		3196074	1					
ANR	3196106	IfStatement	if ( info )		3196074	2					
ANR	3196107	Condition	info	332:8:9113:9116	3196074	0	True				
ANR	3196108	Identifier	info		3196074	0					
ANR	3196109	CompoundStatement		7:14:208:208	3196074	1					
ANR	3196110	ExpressionStatement	info -> fapi_font = a_fapi_font	333:8:9129:9158	3196074	0	True				
ANR	3196111	AssignmentExpression	info -> fapi_font = a_fapi_font		3196074	0		=			
ANR	3196112	PtrMemberAccess	info -> fapi_font		3196074	0					
ANR	3196113	Identifier	info		3196074	0					
ANR	3196114	Identifier	fapi_font		3196074	1					
ANR	3196115	Identifier	a_fapi_font		3196074	1					
ANR	3196116	ExpressionStatement	info -> glyph_data = NULL	334:8:9168:9191	3196074	1	True				
ANR	3196117	AssignmentExpression	info -> glyph_data = NULL		3196074	0		=			
ANR	3196118	PtrMemberAccess	info -> glyph_data		3196074	0					
ANR	3196119	Identifier	info		3196074	0					
ANR	3196120	Identifier	glyph_data		3196074	1					
ANR	3196121	Identifier	NULL		3196074	1					
ANR	3196122	ExpressionStatement	info -> glyph_data_length = 0	335:8:9201:9228	3196074	2	True				
ANR	3196123	AssignmentExpression	info -> glyph_data_length = 0		3196074	0		=			
ANR	3196124	PtrMemberAccess	info -> glyph_data_length		3196074	0					
ANR	3196125	Identifier	info		3196074	0					
ANR	3196126	Identifier	glyph_data_length		3196074	1					
ANR	3196127	PrimaryExpression	0		3196074	1					
ANR	3196128	ExpressionStatement	info -> glyph_data_in_use = false	336:8:9238:9269	3196074	3	True				
ANR	3196129	AssignmentExpression	info -> glyph_data_in_use = false		3196074	0		=			
ANR	3196130	PtrMemberAccess	info -> glyph_data_in_use		3196074	0					
ANR	3196131	Identifier	info		3196074	0					
ANR	3196132	Identifier	glyph_data_in_use		3196074	1					
ANR	3196133	Identifier	false		3196074	1					
ANR	3196134	ExpressionStatement	info -> glyph_metrics_index = 0xFFFFFFFF	337:8:9279:9317	3196074	4	True				
ANR	3196135	AssignmentExpression	info -> glyph_metrics_index = 0xFFFFFFFF		3196074	0		=			
ANR	3196136	PtrMemberAccess	info -> glyph_metrics_index		3196074	0					
ANR	3196137	Identifier	info		3196074	0					
ANR	3196138	Identifier	glyph_metrics_index		3196074	1					
ANR	3196139	PrimaryExpression	0xFFFFFFFF		3196074	1					
ANR	3196140	ExpressionStatement	info -> metrics_type = gs_fapi_metrics_notdef	338:8:9327:9370	3196074	5	True				
ANR	3196141	AssignmentExpression	info -> metrics_type = gs_fapi_metrics_notdef		3196074	0		=			
ANR	3196142	PtrMemberAccess	info -> metrics_type		3196074	0					
ANR	3196143	Identifier	info		3196074	0					
ANR	3196144	Identifier	metrics_type		3196074	1					
ANR	3196145	Identifier	gs_fapi_metrics_notdef		3196074	1					
ANR	3196146	ReturnStatement	return info ;	340:4:9382:9393	3196074	3	True				
ANR	3196147	Identifier	info		3196074	0					
ANR	3196148	ReturnType	static FT_IncrementalRec *		3196074	1					
ANR	3196149	Identifier	new_inc_int_info		3196074	2					
ANR	3196150	ParameterList	"gs_fapi_server * a_server , gs_fapi_font * a_fapi_font"		3196074	3					
ANR	3196151	Parameter	gs_fapi_server * a_server	325:17:8855:8879	3196074	0	True				
ANR	3196152	ParameterType	gs_fapi_server *		3196074	0					
ANR	3196153	Identifier	a_server		3196074	1					
ANR	3196154	Parameter	gs_fapi_font * a_fapi_font	325:44:8882:8907	3196074	1	True				
ANR	3196155	ParameterType	gs_fapi_font *		3196074	0					
ANR	3196156	Identifier	a_fapi_font		3196074	1					
ANR	3196157	CFGEntryNode	ENTRY		3196074		True				
ANR	3196158	CFGExitNode	EXIT		3196074		True				
ANR	3196159	Symbol	NULL		3196074						
ANR	3196160	Symbol	a_server		3196074						
ANR	3196161	Symbol	info -> glyph_data_length		3196074						
ANR	3196162	Symbol	info -> metrics_type		3196074						
ANR	3196163	Symbol	false		3196074						
ANR	3196164	Symbol	info -> glyph_metrics_index		3196074						
ANR	3196165	Symbol	a_fapi_font		3196074						
ANR	3196166	Symbol	s		3196074						
ANR	3196167	Symbol	info -> glyph_data_in_use		3196074						
ANR	3196168	Symbol	s -> ftmemory		3196074						
ANR	3196169	Symbol	info -> fapi_font		3196074						
ANR	3196170	Symbol	FF_alloc		3196074						
ANR	3196171	Symbol	* info		3196074						
ANR	3196172	Symbol	gs_fapi_metrics_notdef		3196074						
ANR	3196173	Symbol	* s		3196074						
ANR	3196174	Symbol	info -> glyph_data		3196074						
ANR	3196175	Symbol	info		3196074						
ANR	3196176	Function	delete_inc_int_info	343:0:9398:9695							
ANR	3196177	FunctionDef	"delete_inc_int_info (gs_fapi_server * a_server , FT_IncrementalRec * a_inc_int_info)"		3196176	0					
ANR	3196178	CompoundStatement		346:0:9513:9695	3196176	0					
ANR	3196179	IdentifierDeclStatement	ff_server * s = ( ff_server * ) a_server ;	347:4:9519:9556	3196176	0	True				
ANR	3196180	IdentifierDecl	* s = ( ff_server * ) a_server		3196176	0					
ANR	3196181	IdentifierDeclType	ff_server *		3196176	0					
ANR	3196182	Identifier	s		3196176	1					
ANR	3196183	AssignmentExpression	* s = ( ff_server * ) a_server		3196176	2		=			
ANR	3196184	Identifier	s		3196176	0					
ANR	3196185	CastExpression	( ff_server * ) a_server		3196176	1					
ANR	3196186	CastTarget	ff_server *		3196176	0					
ANR	3196187	Identifier	a_server		3196176	1					
ANR	3196188	IfStatement	if ( a_inc_int_info )		3196176	1					
ANR	3196189	Condition	a_inc_int_info	349:8:9567:9580	3196176	0	True				
ANR	3196190	Identifier	a_inc_int_info		3196176	0					
ANR	3196191	CompoundStatement		4:24:69:69	3196176	1					
ANR	3196192	ExpressionStatement	"FF_free ( s -> ftmemory , a_inc_int_info -> glyph_data )"	350:8:9593:9641	3196176	0	True				
ANR	3196193	CallExpression	"FF_free ( s -> ftmemory , a_inc_int_info -> glyph_data )"		3196176	0					
ANR	3196194	Callee	FF_free		3196176	0					
ANR	3196195	Identifier	FF_free		3196176	0					
ANR	3196196	ArgumentList	s -> ftmemory		3196176	1					
ANR	3196197	Argument	s -> ftmemory		3196176	0					
ANR	3196198	PtrMemberAccess	s -> ftmemory		3196176	0					
ANR	3196199	Identifier	s		3196176	0					
ANR	3196200	Identifier	ftmemory		3196176	1					
ANR	3196201	Argument	a_inc_int_info -> glyph_data		3196176	1					
ANR	3196202	PtrMemberAccess	a_inc_int_info -> glyph_data		3196176	0					
ANR	3196203	Identifier	a_inc_int_info		3196176	0					
ANR	3196204	Identifier	glyph_data		3196176	1					
ANR	3196205	ExpressionStatement	"FF_free ( s -> ftmemory , a_inc_int_info )"	351:8:9651:9687	3196176	1	True				
ANR	3196206	CallExpression	"FF_free ( s -> ftmemory , a_inc_int_info )"		3196176	0					
ANR	3196207	Callee	FF_free		3196176	0					
ANR	3196208	Identifier	FF_free		3196176	0					
ANR	3196209	ArgumentList	s -> ftmemory		3196176	1					
ANR	3196210	Argument	s -> ftmemory		3196176	0					
ANR	3196211	PtrMemberAccess	s -> ftmemory		3196176	0					
ANR	3196212	Identifier	s		3196176	0					
ANR	3196213	Identifier	ftmemory		3196176	1					
ANR	3196214	Argument	a_inc_int_info		3196176	1					
ANR	3196215	Identifier	a_inc_int_info		3196176	0					
ANR	3196216	ReturnType	static void		3196176	1					
ANR	3196217	Identifier	delete_inc_int_info		3196176	2					
ANR	3196218	ParameterList	"gs_fapi_server * a_server , FT_IncrementalRec * a_inc_int_info"		3196176	3					
ANR	3196219	Parameter	gs_fapi_server * a_server	344:20:9430:9454	3196176	0	True				
ANR	3196220	ParameterType	gs_fapi_server *		3196176	0					
ANR	3196221	Identifier	a_server		3196176	1					
ANR	3196222	Parameter	FT_IncrementalRec * a_inc_int_info	345:20:9477:9510	3196176	1	True				
ANR	3196223	ParameterType	FT_IncrementalRec *		3196176	0					
ANR	3196224	Identifier	a_inc_int_info		3196176	1					
ANR	3196225	CFGEntryNode	ENTRY		3196176		True				
ANR	3196226	CFGExitNode	EXIT		3196176		True				
ANR	3196227	Symbol	a_inc_int_info		3196176						
ANR	3196228	Symbol	a_inc_int_info -> glyph_data		3196176						
ANR	3196229	Symbol	s		3196176						
ANR	3196230	Symbol	a_server		3196176						
ANR	3196231	Symbol	s -> ftmemory		3196176						
ANR	3196232	Symbol	* a_inc_int_info		3196176						
ANR	3196233	Symbol	* s		3196176						
ANR	3196234	Function	get_fapi_glyph_data	355:0:9698:12881							
ANR	3196235	FunctionDef	"get_fapi_glyph_data (FT_Incremental a_info , FT_UInt a_index , FT_Data * a_data)"		3196234	0					
ANR	3196236	CompoundStatement		357:0:9792:12881	3196234	0					
ANR	3196237	IdentifierDeclStatement	gs_fapi_font * ff = a_info -> fapi_font ;	358:4:9798:9834	3196234	0	True				
ANR	3196238	IdentifierDecl	* ff = a_info -> fapi_font		3196234	0					
ANR	3196239	IdentifierDeclType	gs_fapi_font *		3196234	0					
ANR	3196240	Identifier	ff		3196234	1					
ANR	3196241	AssignmentExpression	* ff = a_info -> fapi_font		3196234	2		=			
ANR	3196242	Identifier	ff		3196234	0					
ANR	3196243	PtrMemberAccess	a_info -> fapi_font		3196234	1					
ANR	3196244	Identifier	a_info		3196234	0					
ANR	3196245	Identifier	fapi_font		3196234	1					
ANR	3196246	IdentifierDeclStatement	int length = 0 ;	359:4:9840:9854	3196234	1	True				
ANR	3196247	IdentifierDecl	length = 0		3196234	0					
ANR	3196248	IdentifierDeclType	int		3196234	0					
ANR	3196249	Identifier	length		3196234	1					
ANR	3196250	AssignmentExpression	length = 0		3196234	2		=			
ANR	3196251	Identifier	length		3196234	0					
ANR	3196252	PrimaryExpression	0		3196234	1					
ANR	3196253	IdentifierDeclStatement	ff_face * face = ( ff_face * ) ff -> server_font_data ;	360:4:9860:9908	3196234	2	True				
ANR	3196254	IdentifierDecl	* face = ( ff_face * ) ff -> server_font_data		3196234	0					
ANR	3196255	IdentifierDeclType	ff_face *		3196234	0					
ANR	3196256	Identifier	face		3196234	1					
ANR	3196257	AssignmentExpression	* face = ( ff_face * ) ff -> server_font_data		3196234	2		=			
ANR	3196258	Identifier	face		3196234	0					
ANR	3196259	CastExpression	( ff_face * ) ff -> server_font_data		3196234	1					
ANR	3196260	CastTarget	ff_face *		3196234	0					
ANR	3196261	PtrMemberAccess	ff -> server_font_data		3196234	1					
ANR	3196262	Identifier	ff		3196234	0					
ANR	3196263	Identifier	server_font_data		3196234	1					
ANR	3196264	IdentifierDeclStatement	gs_memory_t * mem = ( gs_memory_t * ) face -> server -> mem ;	361:4:9914:9966	3196234	3	True				
ANR	3196265	IdentifierDecl	* mem = ( gs_memory_t * ) face -> server -> mem		3196234	0					
ANR	3196266	IdentifierDeclType	gs_memory_t *		3196234	0					
ANR	3196267	Identifier	mem		3196234	1					
ANR	3196268	AssignmentExpression	* mem = ( gs_memory_t * ) face -> server -> mem		3196234	2		=			
ANR	3196269	Identifier	mem		3196234	0					
ANR	3196270	CastExpression	( gs_memory_t * ) face -> server -> mem		3196234	1					
ANR	3196271	CastTarget	gs_memory_t *		3196234	0					
ANR	3196272	PtrMemberAccess	face -> server -> mem		3196234	1					
ANR	3196273	PtrMemberAccess	face -> server		3196234	0					
ANR	3196274	Identifier	face		3196234	0					
ANR	3196275	Identifier	server		3196234	1					
ANR	3196276	Identifier	mem		3196234	1					
ANR	3196277	ExpressionStatement	ff -> need_decrypt = true	364:4:10047:10070	3196234	4	True				
ANR	3196278	AssignmentExpression	ff -> need_decrypt = true		3196234	0		=			
ANR	3196279	PtrMemberAccess	ff -> need_decrypt		3196234	0					
ANR	3196280	Identifier	ff		3196234	0					
ANR	3196281	Identifier	need_decrypt		3196234	1					
ANR	3196282	Identifier	true		3196234	1					
ANR	3196283	IfStatement	if ( a_info -> glyph_data_in_use )		3196234	5					
ANR	3196284	Condition	a_info -> glyph_data_in_use	369:8:10206:10230	3196234	0	True				
ANR	3196285	PtrMemberAccess	a_info -> glyph_data_in_use		3196234	0					
ANR	3196286	Identifier	a_info		3196234	0					
ANR	3196287	Identifier	glyph_data_in_use		3196234	1					
ANR	3196288	CompoundStatement		14:8:450:478	3196234	1					
ANR	3196289	IdentifierDeclStatement	unsigned char * buffer = NULL ;	370:8:10243:10271	3196234	0	True				
ANR	3196290	IdentifierDecl	* buffer = NULL		3196234	0					
ANR	3196291	IdentifierDeclType	unsigned char *		3196234	0					
ANR	3196292	Identifier	buffer		3196234	1					
ANR	3196293	AssignmentExpression	* buffer = NULL		3196234	2		=			
ANR	3196294	Identifier	NULL		3196234	0					
ANR	3196295	Identifier	NULL		3196234	1					
ANR	3196296	ExpressionStatement	"length = ff -> get_glyph ( ff , a_index , NULL , 0 )"	372:8:10282:10326	3196234	1	True				
ANR	3196297	AssignmentExpression	"length = ff -> get_glyph ( ff , a_index , NULL , 0 )"		3196234	0		=			
ANR	3196298	Identifier	length		3196234	0					
ANR	3196299	CallExpression	"ff -> get_glyph ( ff , a_index , NULL , 0 )"		3196234	1					
ANR	3196300	Callee	ff -> get_glyph		3196234	0					
ANR	3196301	PtrMemberAccess	ff -> get_glyph		3196234	0					
ANR	3196302	Identifier	ff		3196234	0					
ANR	3196303	Identifier	get_glyph		3196234	1					
ANR	3196304	ArgumentList	ff		3196234	1					
ANR	3196305	Argument	ff		3196234	0					
ANR	3196306	Identifier	ff		3196234	0					
ANR	3196307	Argument	a_index		3196234	1					
ANR	3196308	Identifier	a_index		3196234	0					
ANR	3196309	Argument	NULL		3196234	2					
ANR	3196310	Identifier	NULL		3196234	0					
ANR	3196311	Argument	0		3196234	3					
ANR	3196312	PrimaryExpression	0		3196234	0					
ANR	3196313	IfStatement	if ( length == gs_fapi_glyph_invalid_format || length == gs_fapi_glyph_invalid_index )		3196234	2					
ANR	3196314	Condition	length == gs_fapi_glyph_invalid_format || length == gs_fapi_glyph_invalid_index	373:12:10340:10430	3196234	0	True				
ANR	3196315	OrExpression	length == gs_fapi_glyph_invalid_format || length == gs_fapi_glyph_invalid_index		3196234	0		||			
ANR	3196316	EqualityExpression	length == gs_fapi_glyph_invalid_format		3196234	0		==			
ANR	3196317	Identifier	length		3196234	0					
ANR	3196318	Identifier	gs_fapi_glyph_invalid_format		3196234	1					
ANR	3196319	EqualityExpression	length == gs_fapi_glyph_invalid_index		3196234	1		==			
ANR	3196320	Identifier	length		3196234	0					
ANR	3196321	Identifier	gs_fapi_glyph_invalid_index		3196234	1					
ANR	3196322	ReturnStatement	return FT_Err_Invalid_Glyph_Index ;	375:12:10445:10478	3196234	1	True				
ANR	3196323	Identifier	FT_Err_Invalid_Glyph_Index		3196234	0					
ANR	3196324	ExpressionStatement	"buffer = gs_malloc ( mem , length , 1 , ""get_fapi_glyph_data"" )"	377:8:10489:10546	3196234	3	True				
ANR	3196325	AssignmentExpression	"buffer = gs_malloc ( mem , length , 1 , ""get_fapi_glyph_data"" )"		3196234	0		=			
ANR	3196326	Identifier	buffer		3196234	0					
ANR	3196327	CallExpression	"gs_malloc ( mem , length , 1 , ""get_fapi_glyph_data"" )"		3196234	1					
ANR	3196328	Callee	gs_malloc		3196234	0					
ANR	3196329	Identifier	gs_malloc		3196234	0					
ANR	3196330	ArgumentList	mem		3196234	1					
ANR	3196331	Argument	mem		3196234	0					
ANR	3196332	Identifier	mem		3196234	0					
ANR	3196333	Argument	length		3196234	1					
ANR	3196334	Identifier	length		3196234	0					
ANR	3196335	Argument	1		3196234	2					
ANR	3196336	PrimaryExpression	1		3196234	0					
ANR	3196337	Argument	"""get_fapi_glyph_data"""		3196234	3					
ANR	3196338	PrimaryExpression	"""get_fapi_glyph_data"""		3196234	0					
ANR	3196339	IfStatement	if ( ! buffer )		3196234	4					
ANR	3196340	Condition	! buffer	378:12:10560:10566	3196234	0	True				
ANR	3196341	UnaryOperationExpression	! buffer		3196234	0					
ANR	3196342	UnaryOperator	!		3196234	0					
ANR	3196343	Identifier	buffer		3196234	1					
ANR	3196344	ReturnStatement	return FT_Err_Out_Of_Memory ;	379:12:10581:10608	3196234	1	True				
ANR	3196345	Identifier	FT_Err_Out_Of_Memory		3196234	0					
ANR	3196346	ExpressionStatement	"length = ff -> get_glyph ( ff , a_index , buffer , length )"	381:8:10619:10670	3196234	5	True				
ANR	3196347	AssignmentExpression	"length = ff -> get_glyph ( ff , a_index , buffer , length )"		3196234	0		=			
ANR	3196348	Identifier	length		3196234	0					
ANR	3196349	CallExpression	"ff -> get_glyph ( ff , a_index , buffer , length )"		3196234	1					
ANR	3196350	Callee	ff -> get_glyph		3196234	0					
ANR	3196351	PtrMemberAccess	ff -> get_glyph		3196234	0					
ANR	3196352	Identifier	ff		3196234	0					
ANR	3196353	Identifier	get_glyph		3196234	1					
ANR	3196354	ArgumentList	ff		3196234	1					
ANR	3196355	Argument	ff		3196234	0					
ANR	3196356	Identifier	ff		3196234	0					
ANR	3196357	Argument	a_index		3196234	1					
ANR	3196358	Identifier	a_index		3196234	0					
ANR	3196359	Argument	buffer		3196234	2					
ANR	3196360	Identifier	buffer		3196234	0					
ANR	3196361	Argument	length		3196234	3					
ANR	3196362	Identifier	length		3196234	0					
ANR	3196363	IfStatement	if ( length == gs_fapi_glyph_invalid_format )		3196234	6					
ANR	3196364	Condition	length == gs_fapi_glyph_invalid_format	382:12:10684:10721	3196234	0	True				
ANR	3196365	EqualityExpression	length == gs_fapi_glyph_invalid_format		3196234	0		==			
ANR	3196366	Identifier	length		3196234	0					
ANR	3196367	Identifier	gs_fapi_glyph_invalid_format		3196234	1					
ANR	3196368	CompoundStatement		26:52:931:931	3196234	1					
ANR	3196369	ExpressionStatement	"gs_free ( ( gs_memory_t * ) mem , buffer , 0 , 0 , ""get_fapi_glyph_data"" )"	383:12:10738:10823	3196234	0	True				
ANR	3196370	CallExpression	"gs_free ( ( gs_memory_t * ) mem , buffer , 0 , 0 , ""get_fapi_glyph_data"" )"		3196234	0					
ANR	3196371	Callee	gs_free		3196234	0					
ANR	3196372	Identifier	gs_free		3196234	0					
ANR	3196373	ArgumentList	( gs_memory_t * ) mem		3196234	1					
ANR	3196374	Argument	( gs_memory_t * ) mem		3196234	0					
ANR	3196375	CastExpression	( gs_memory_t * ) mem		3196234	0					
ANR	3196376	CastTarget	gs_memory_t *		3196234	0					
ANR	3196377	Identifier	mem		3196234	1					
ANR	3196378	Argument	buffer		3196234	1					
ANR	3196379	Identifier	buffer		3196234	0					
ANR	3196380	Argument	0		3196234	2					
ANR	3196381	PrimaryExpression	0		3196234	0					
ANR	3196382	Argument	0		3196234	3					
ANR	3196383	PrimaryExpression	0		3196234	0					
ANR	3196384	Argument	"""get_fapi_glyph_data"""		3196234	4					
ANR	3196385	PrimaryExpression	"""get_fapi_glyph_data"""		3196234	0					
ANR	3196386	ReturnStatement	return FT_Err_Invalid_Glyph_Index ;	385:12:10837:10870	3196234	1	True				
ANR	3196387	Identifier	FT_Err_Invalid_Glyph_Index		3196234	0					
ANR	3196388	ExpressionStatement	a_data -> pointer = buffer	387:8:10890:10914	3196234	7	True				
ANR	3196389	AssignmentExpression	a_data -> pointer = buffer		3196234	0		=			
ANR	3196390	PtrMemberAccess	a_data -> pointer		3196234	0					
ANR	3196391	Identifier	a_data		3196234	0					
ANR	3196392	Identifier	pointer		3196234	1					
ANR	3196393	Identifier	buffer		3196234	1					
ANR	3196394	ElseStatement	else		3196234	0					
ANR	3196395	CompoundStatement		38:8:1399:1442	3196234	0					
ANR	3196396	IdentifierDeclStatement	const void * saved_char_data = ff -> char_data ;	394:8:11192:11235	3196234	0	True				
ANR	3196397	IdentifierDecl	* saved_char_data = ff -> char_data		3196234	0					
ANR	3196398	IdentifierDeclType	const void *		3196234	0					
ANR	3196399	Identifier	saved_char_data		3196234	1					
ANR	3196400	AssignmentExpression	* saved_char_data = ff -> char_data		3196234	2		=			
ANR	3196401	Identifier	saved_char_data		3196234	0					
ANR	3196402	PtrMemberAccess	ff -> char_data		3196234	1					
ANR	3196403	Identifier	ff		3196234	0					
ANR	3196404	Identifier	char_data		3196234	1					
ANR	3196405	ExpressionStatement	"length = ff -> get_glyph ( ff , a_index , a_info -> glyph_data , ( ushort ) a_info -> glyph_data_length )"	397:8:11318:11447	3196234	1	True				
ANR	3196406	AssignmentExpression	"length = ff -> get_glyph ( ff , a_index , a_info -> glyph_data , ( ushort ) a_info -> glyph_data_length )"		3196234	0		=			
ANR	3196407	Identifier	length		3196234	0					
ANR	3196408	CallExpression	"ff -> get_glyph ( ff , a_index , a_info -> glyph_data , ( ushort ) a_info -> glyph_data_length )"		3196234	1					
ANR	3196409	Callee	ff -> get_glyph		3196234	0					
ANR	3196410	PtrMemberAccess	ff -> get_glyph		3196234	0					
ANR	3196411	Identifier	ff		3196234	0					
ANR	3196412	Identifier	get_glyph		3196234	1					
ANR	3196413	ArgumentList	ff		3196234	1					
ANR	3196414	Argument	ff		3196234	0					
ANR	3196415	Identifier	ff		3196234	0					
ANR	3196416	Argument	a_index		3196234	1					
ANR	3196417	Identifier	a_index		3196234	0					
ANR	3196418	Argument	a_info -> glyph_data		3196234	2					
ANR	3196419	PtrMemberAccess	a_info -> glyph_data		3196234	0					
ANR	3196420	Identifier	a_info		3196234	0					
ANR	3196421	Identifier	glyph_data		3196234	1					
ANR	3196422	Argument	( ushort ) a_info -> glyph_data_length		3196234	3					
ANR	3196423	CastExpression	( ushort ) a_info -> glyph_data_length		3196234	0					
ANR	3196424	CastTarget	ushort		3196234	0					
ANR	3196425	PtrMemberAccess	a_info -> glyph_data_length		3196234	1					
ANR	3196426	Identifier	a_info		3196234	0					
ANR	3196427	Identifier	glyph_data_length		3196234	1					
ANR	3196428	IfStatement	if ( length == gs_fapi_glyph_invalid_format )		3196234	2					
ANR	3196429	Condition	length == gs_fapi_glyph_invalid_format	400:12:11461:11498	3196234	0	True				
ANR	3196430	EqualityExpression	length == gs_fapi_glyph_invalid_format		3196234	0		==			
ANR	3196431	Identifier	length		3196234	0					
ANR	3196432	Identifier	gs_fapi_glyph_invalid_format		3196234	1					
ANR	3196433	CompoundStatement		44:52:1708:1708	3196234	1					
ANR	3196434	ExpressionStatement	ff -> char_data = saved_char_data	401:12:11515:11546	3196234	0	True				
ANR	3196435	AssignmentExpression	ff -> char_data = saved_char_data		3196234	0		=			
ANR	3196436	PtrMemberAccess	ff -> char_data		3196234	0					
ANR	3196437	Identifier	ff		3196234	0					
ANR	3196438	Identifier	char_data		3196234	1					
ANR	3196439	Identifier	saved_char_data		3196234	1					
ANR	3196440	ReturnStatement	return FT_Err_Unknown_File_Format ;	402:12:11560:11593	3196234	1	True				
ANR	3196441	Identifier	FT_Err_Unknown_File_Format		3196234	0					
ANR	3196442	IfStatement	if ( length == gs_fapi_glyph_invalid_index )		3196234	3					
ANR	3196443	Condition	length == gs_fapi_glyph_invalid_index	405:12:11618:11654	3196234	0	True				
ANR	3196444	EqualityExpression	length == gs_fapi_glyph_invalid_index		3196234	0		==			
ANR	3196445	Identifier	length		3196234	0					
ANR	3196446	Identifier	gs_fapi_glyph_invalid_index		3196234	1					
ANR	3196447	CompoundStatement		49:51:1864:1864	3196234	1					
ANR	3196448	ExpressionStatement	ff -> char_data = saved_char_data	406:12:11671:11702	3196234	0	True				
ANR	3196449	AssignmentExpression	ff -> char_data = saved_char_data		3196234	0		=			
ANR	3196450	PtrMemberAccess	ff -> char_data		3196234	0					
ANR	3196451	Identifier	ff		3196234	0					
ANR	3196452	Identifier	char_data		3196234	1					
ANR	3196453	Identifier	saved_char_data		3196234	1					
ANR	3196454	ReturnStatement	return FT_Err_Invalid_Glyph_Index ;	407:12:11716:11749	3196234	1	True				
ANR	3196455	Identifier	FT_Err_Invalid_Glyph_Index		3196234	0					
ANR	3196456	IfStatement	if ( length > a_info -> glyph_data_length )		3196234	4					
ANR	3196457	Condition	length > a_info -> glyph_data_length	411:12:11842:11875	3196234	0	True				
ANR	3196458	RelationalExpression	length > a_info -> glyph_data_length		3196234	0		>			
ANR	3196459	Identifier	length		3196234	0					
ANR	3196460	PtrMemberAccess	a_info -> glyph_data_length		3196234	1					
ANR	3196461	Identifier	a_info		3196234	0					
ANR	3196462	Identifier	glyph_data_length		3196234	1					
ANR	3196463	CompoundStatement		55:48:2085:2085	3196234	1					
ANR	3196464	IfStatement	if ( a_info -> glyph_data )		3196234	0					
ANR	3196465	Condition	a_info -> glyph_data	412:16:11896:11913	3196234	0	True				
ANR	3196466	PtrMemberAccess	a_info -> glyph_data		3196234	0					
ANR	3196467	Identifier	a_info		3196234	0					
ANR	3196468	Identifier	glyph_data		3196234	1					
ANR	3196469	CompoundStatement		56:36:2123:2123	3196234	1					
ANR	3196470	ExpressionStatement	"gs_free ( ( gs_memory_t * ) mem , a_info -> glyph_data , 0 , 0 , ""get_fapi_glyph_data"" )"	413:16:11934:12035	3196234	0	True				
ANR	3196471	CallExpression	"gs_free ( ( gs_memory_t * ) mem , a_info -> glyph_data , 0 , 0 , ""get_fapi_glyph_data"" )"		3196234	0					
ANR	3196472	Callee	gs_free		3196234	0					
ANR	3196473	Identifier	gs_free		3196234	0					
ANR	3196474	ArgumentList	( gs_memory_t * ) mem		3196234	1					
ANR	3196475	Argument	( gs_memory_t * ) mem		3196234	0					
ANR	3196476	CastExpression	( gs_memory_t * ) mem		3196234	0					
ANR	3196477	CastTarget	gs_memory_t *		3196234	0					
ANR	3196478	Identifier	mem		3196234	1					
ANR	3196479	Argument	a_info -> glyph_data		3196234	1					
ANR	3196480	PtrMemberAccess	a_info -> glyph_data		3196234	0					
ANR	3196481	Identifier	a_info		3196234	0					
ANR	3196482	Identifier	glyph_data		3196234	1					
ANR	3196483	Argument	0		3196234	2					
ANR	3196484	PrimaryExpression	0		3196234	0					
ANR	3196485	Argument	0		3196234	3					
ANR	3196486	PrimaryExpression	0		3196234	0					
ANR	3196487	Argument	"""get_fapi_glyph_data"""		3196234	4					
ANR	3196488	PrimaryExpression	"""get_fapi_glyph_data"""		3196234	0					
ANR	3196489	ExpressionStatement	"a_info -> glyph_data = gs_malloc ( mem , length , 1 , ""get_fapi_glyph_data"" )"	417:12:12064:12149	3196234	1	True				
ANR	3196490	AssignmentExpression	"a_info -> glyph_data = gs_malloc ( mem , length , 1 , ""get_fapi_glyph_data"" )"		3196234	0		=			
ANR	3196491	PtrMemberAccess	a_info -> glyph_data		3196234	0					
ANR	3196492	Identifier	a_info		3196234	0					
ANR	3196493	Identifier	glyph_data		3196234	1					
ANR	3196494	CallExpression	"gs_malloc ( mem , length , 1 , ""get_fapi_glyph_data"" )"		3196234	1					
ANR	3196495	Callee	gs_malloc		3196234	0					
ANR	3196496	Identifier	gs_malloc		3196234	0					
ANR	3196497	ArgumentList	mem		3196234	1					
ANR	3196498	Argument	mem		3196234	0					
ANR	3196499	Identifier	mem		3196234	0					
ANR	3196500	Argument	length		3196234	1					
ANR	3196501	Identifier	length		3196234	0					
ANR	3196502	Argument	1		3196234	2					
ANR	3196503	PrimaryExpression	1		3196234	0					
ANR	3196504	Argument	"""get_fapi_glyph_data"""		3196234	3					
ANR	3196505	PrimaryExpression	"""get_fapi_glyph_data"""		3196234	0					
ANR	3196506	IfStatement	if ( ! a_info -> glyph_data )		3196234	2					
ANR	3196507	Condition	! a_info -> glyph_data	420:16:12168:12186	3196234	0	True				
ANR	3196508	UnaryOperationExpression	! a_info -> glyph_data		3196234	0					
ANR	3196509	UnaryOperator	!		3196234	0					
ANR	3196510	PtrMemberAccess	a_info -> glyph_data		3196234	1					
ANR	3196511	Identifier	a_info		3196234	0					
ANR	3196512	Identifier	glyph_data		3196234	1					
ANR	3196513	CompoundStatement		64:37:2396:2396	3196234	1					
ANR	3196514	ExpressionStatement	a_info -> glyph_data_length = 0	421:16:12207:12236	3196234	0	True				
ANR	3196515	AssignmentExpression	a_info -> glyph_data_length = 0		3196234	0		=			
ANR	3196516	PtrMemberAccess	a_info -> glyph_data_length		3196234	0					
ANR	3196517	Identifier	a_info		3196234	0					
ANR	3196518	Identifier	glyph_data_length		3196234	1					
ANR	3196519	PrimaryExpression	0		3196234	1					
ANR	3196520	ReturnStatement	return FT_Err_Out_Of_Memory ;	422:16:12254:12281	3196234	1	True				
ANR	3196521	Identifier	FT_Err_Out_Of_Memory		3196234	0					
ANR	3196522	ExpressionStatement	a_info -> glyph_data_length = length	424:12:12309:12343	3196234	3	True				
ANR	3196523	AssignmentExpression	a_info -> glyph_data_length = length		3196234	0		=			
ANR	3196524	PtrMemberAccess	a_info -> glyph_data_length		3196234	0					
ANR	3196525	Identifier	a_info		3196234	0					
ANR	3196526	Identifier	glyph_data_length		3196234	1					
ANR	3196527	Identifier	length		3196234	1					
ANR	3196528	ExpressionStatement	ff -> char_data = saved_char_data	425:12:12357:12388	3196234	4	True				
ANR	3196529	AssignmentExpression	ff -> char_data = saved_char_data		3196234	0		=			
ANR	3196530	PtrMemberAccess	ff -> char_data		3196234	0					
ANR	3196531	Identifier	ff		3196234	0					
ANR	3196532	Identifier	char_data		3196234	1					
ANR	3196533	Identifier	saved_char_data		3196234	1					
ANR	3196534	ExpressionStatement	"length = ff -> get_glyph ( ff , a_index , a_info -> glyph_data , length )"	426:12:12402:12465	3196234	5	True				
ANR	3196535	AssignmentExpression	"length = ff -> get_glyph ( ff , a_index , a_info -> glyph_data , length )"		3196234	0		=			
ANR	3196536	Identifier	length		3196234	0					
ANR	3196537	CallExpression	"ff -> get_glyph ( ff , a_index , a_info -> glyph_data , length )"		3196234	1					
ANR	3196538	Callee	ff -> get_glyph		3196234	0					
ANR	3196539	PtrMemberAccess	ff -> get_glyph		3196234	0					
ANR	3196540	Identifier	ff		3196234	0					
ANR	3196541	Identifier	get_glyph		3196234	1					
ANR	3196542	ArgumentList	ff		3196234	1					
ANR	3196543	Argument	ff		3196234	0					
ANR	3196544	Identifier	ff		3196234	0					
ANR	3196545	Argument	a_index		3196234	1					
ANR	3196546	Identifier	a_index		3196234	0					
ANR	3196547	Argument	a_info -> glyph_data		3196234	2					
ANR	3196548	PtrMemberAccess	a_info -> glyph_data		3196234	0					
ANR	3196549	Identifier	a_info		3196234	0					
ANR	3196550	Identifier	glyph_data		3196234	1					
ANR	3196551	Argument	length		3196234	3					
ANR	3196552	Identifier	length		3196234	0					
ANR	3196553	IfStatement	if ( length == gs_fapi_glyph_invalid_format )		3196234	6					
ANR	3196554	Condition	length == gs_fapi_glyph_invalid_format	427:16:12483:12520	3196234	0	True				
ANR	3196555	EqualityExpression	length == gs_fapi_glyph_invalid_format		3196234	0		==			
ANR	3196556	Identifier	length		3196234	0					
ANR	3196557	Identifier	gs_fapi_glyph_invalid_format		3196234	1					
ANR	3196558	ReturnStatement	return FT_Err_Unknown_File_Format ;	428:16:12539:12572	3196234	1	True				
ANR	3196559	Identifier	FT_Err_Unknown_File_Format		3196234	0					
ANR	3196560	IfStatement	if ( length == gs_fapi_glyph_invalid_index )		3196234	7					
ANR	3196561	Condition	length == gs_fapi_glyph_invalid_index	429:16:12590:12626	3196234	0	True				
ANR	3196562	EqualityExpression	length == gs_fapi_glyph_invalid_index		3196234	0		==			
ANR	3196563	Identifier	length		3196234	0					
ANR	3196564	Identifier	gs_fapi_glyph_invalid_index		3196234	1					
ANR	3196565	ReturnStatement	return FT_Err_Invalid_Glyph_Index ;	430:16:12645:12678	3196234	1	True				
ANR	3196566	Identifier	FT_Err_Invalid_Glyph_Index		3196234	0					
ANR	3196567	ExpressionStatement	a_data -> pointer = a_info -> glyph_data	434:8:12750:12786	3196234	5	True				
ANR	3196568	AssignmentExpression	a_data -> pointer = a_info -> glyph_data		3196234	0		=			
ANR	3196569	PtrMemberAccess	a_data -> pointer		3196234	0					
ANR	3196570	Identifier	a_data		3196234	0					
ANR	3196571	Identifier	pointer		3196234	1					
ANR	3196572	PtrMemberAccess	a_info -> glyph_data		3196234	1					
ANR	3196573	Identifier	a_info		3196234	0					
ANR	3196574	Identifier	glyph_data		3196234	1					
ANR	3196575	ExpressionStatement	a_info -> glyph_data_in_use = true	436:8:12797:12829	3196234	6	True				
ANR	3196576	AssignmentExpression	a_info -> glyph_data_in_use = true		3196234	0		=			
ANR	3196577	PtrMemberAccess	a_info -> glyph_data_in_use		3196234	0					
ANR	3196578	Identifier	a_info		3196234	0					
ANR	3196579	Identifier	glyph_data_in_use		3196234	1					
ANR	3196580	Identifier	true		3196234	1					
ANR	3196581	ExpressionStatement	a_data -> length = length	439:4:12842:12865	3196234	6	True				
ANR	3196582	AssignmentExpression	a_data -> length = length		3196234	0		=			
ANR	3196583	PtrMemberAccess	a_data -> length		3196234	0					
ANR	3196584	Identifier	a_data		3196234	0					
ANR	3196585	Identifier	length		3196234	1					
ANR	3196586	Identifier	length		3196234	1					
ANR	3196587	ReturnStatement	return 0 ;	440:4:12871:12879	3196234	7	True				
ANR	3196588	PrimaryExpression	0		3196234	0					
ANR	3196589	ReturnType	static FT_Error		3196234	1					
ANR	3196590	Identifier	get_fapi_glyph_data		3196234	2					
ANR	3196591	ParameterList	"FT_Incremental a_info , FT_UInt a_index , FT_Data * a_data"		3196234	3					
ANR	3196592	Parameter	FT_Incremental a_info	356:20:9734:9754	3196234	0	True				
ANR	3196593	ParameterType	FT_Incremental		3196234	0					
ANR	3196594	Identifier	a_info		3196234	1					
ANR	3196595	Parameter	FT_UInt a_index	356:43:9757:9771	3196234	1	True				
ANR	3196596	ParameterType	FT_UInt		3196234	0					
ANR	3196597	Identifier	a_index		3196234	1					
ANR	3196598	Parameter	FT_Data * a_data	356:60:9774:9789	3196234	2	True				
ANR	3196599	ParameterType	FT_Data *		3196234	0					
ANR	3196600	Identifier	a_data		3196234	1					
ANR	3196601	CFGEntryNode	ENTRY		3196234		True				
ANR	3196602	CFGExitNode	EXIT		3196234		True				
ANR	3196603	Symbol	ff		3196234						
ANR	3196604	Symbol	a_info -> glyph_data_length		3196234						
ANR	3196605	Symbol	gs_fapi_glyph_invalid_index		3196234						
ANR	3196606	Symbol	* face		3196234						
ANR	3196607	Symbol	* face -> server		3196234						
ANR	3196608	Symbol	mem		3196234						
ANR	3196609	Symbol	FT_Err_Out_Of_Memory		3196234						
ANR	3196610	Symbol	* a_data		3196234						
ANR	3196611	Symbol	ff -> get_glyph		3196234						
ANR	3196612	Symbol	ff -> server_font_data		3196234						
ANR	3196613	Symbol	buffer		3196234						
ANR	3196614	Symbol	* * face		3196234						
ANR	3196615	Symbol	FT_Err_Invalid_Glyph_Index		3196234						
ANR	3196616	Symbol	NULL		3196234						
ANR	3196617	Symbol	a_data -> pointer		3196234						
ANR	3196618	Symbol	* ff		3196234						
ANR	3196619	Symbol	a_index		3196234						
ANR	3196620	Symbol	a_data		3196234						
ANR	3196621	Symbol	* a_info		3196234						
ANR	3196622	Symbol	length		3196234						
ANR	3196623	Symbol	a_info -> fapi_font		3196234						
ANR	3196624	Symbol	gs_fapi_glyph_invalid_format		3196234						
ANR	3196625	Symbol	a_data -> length		3196234						
ANR	3196626	Symbol	ff -> need_decrypt		3196234						
ANR	3196627	Symbol	a_info -> glyph_data		3196234						
ANR	3196628	Symbol	face -> server -> mem		3196234						
ANR	3196629	Symbol	a_info -> glyph_data_in_use		3196234						
ANR	3196630	Symbol	saved_char_data		3196234						
ANR	3196631	Symbol	face		3196234						
ANR	3196632	Symbol	gs_malloc		3196234						
ANR	3196633	Symbol	ff -> char_data		3196234						
ANR	3196634	Symbol	face -> server		3196234						
ANR	3196635	Symbol	true		3196234						
ANR	3196636	Symbol	FT_Err_Unknown_File_Format		3196234						
ANR	3196637	Symbol	a_info		3196234						
ANR	3196638	Function	free_fapi_glyph_data	443:0:12884:13312							
ANR	3196639	FunctionDef	"free_fapi_glyph_data (FT_Incremental a_info , FT_Data * a_data)"		3196638	0					
ANR	3196640	CompoundStatement		445:0:12958:13312	3196638	0					
ANR	3196641	IdentifierDeclStatement	gs_fapi_font * ff = a_info -> fapi_font ;	446:4:12964:13000	3196638	0	True				
ANR	3196642	IdentifierDecl	* ff = a_info -> fapi_font		3196638	0					
ANR	3196643	IdentifierDeclType	gs_fapi_font *		3196638	0					
ANR	3196644	Identifier	ff		3196638	1					
ANR	3196645	AssignmentExpression	* ff = a_info -> fapi_font		3196638	2		=			
ANR	3196646	Identifier	ff		3196638	0					
ANR	3196647	PtrMemberAccess	a_info -> fapi_font		3196638	1					
ANR	3196648	Identifier	a_info		3196638	0					
ANR	3196649	Identifier	fapi_font		3196638	1					
ANR	3196650	IdentifierDeclStatement	ff_face * face = ( ff_face * ) ff -> server_font_data ;	447:4:13006:13054	3196638	1	True				
ANR	3196651	IdentifierDecl	* face = ( ff_face * ) ff -> server_font_data		3196638	0					
ANR	3196652	IdentifierDeclType	ff_face *		3196638	0					
ANR	3196653	Identifier	face		3196638	1					
ANR	3196654	AssignmentExpression	* face = ( ff_face * ) ff -> server_font_data		3196638	2		=			
ANR	3196655	Identifier	face		3196638	0					
ANR	3196656	CastExpression	( ff_face * ) ff -> server_font_data		3196638	1					
ANR	3196657	CastTarget	ff_face *		3196638	0					
ANR	3196658	PtrMemberAccess	ff -> server_font_data		3196638	1					
ANR	3196659	Identifier	ff		3196638	0					
ANR	3196660	Identifier	server_font_data		3196638	1					
ANR	3196661	IdentifierDeclStatement	gs_memory_t * mem = ( gs_memory_t * ) face -> server -> mem ;	448:4:13060:13112	3196638	2	True				
ANR	3196662	IdentifierDecl	* mem = ( gs_memory_t * ) face -> server -> mem		3196638	0					
ANR	3196663	IdentifierDeclType	gs_memory_t *		3196638	0					
ANR	3196664	Identifier	mem		3196638	1					
ANR	3196665	AssignmentExpression	* mem = ( gs_memory_t * ) face -> server -> mem		3196638	2		=			
ANR	3196666	Identifier	mem		3196638	0					
ANR	3196667	CastExpression	( gs_memory_t * ) face -> server -> mem		3196638	1					
ANR	3196668	CastTarget	gs_memory_t *		3196638	0					
ANR	3196669	PtrMemberAccess	face -> server -> mem		3196638	1					
ANR	3196670	PtrMemberAccess	face -> server		3196638	0					
ANR	3196671	Identifier	face		3196638	0					
ANR	3196672	Identifier	server		3196638	1					
ANR	3196673	Identifier	mem		3196638	1					
ANR	3196674	IfStatement	if ( a_data -> pointer == ( const FT_Byte * ) a_info -> glyph_data )		3196638	3					
ANR	3196675	Condition	a_data -> pointer == ( const FT_Byte * ) a_info -> glyph_data	450:8:13123:13176	3196638	0	True				
ANR	3196676	EqualityExpression	a_data -> pointer == ( const FT_Byte * ) a_info -> glyph_data		3196638	0		==			
ANR	3196677	PtrMemberAccess	a_data -> pointer		3196638	0					
ANR	3196678	Identifier	a_data		3196638	0					
ANR	3196679	Identifier	pointer		3196638	1					
ANR	3196680	CastExpression	( const FT_Byte * ) a_info -> glyph_data		3196638	1					
ANR	3196681	CastTarget	const FT_Byte *		3196638	0					
ANR	3196682	PtrMemberAccess	a_info -> glyph_data		3196638	1					
ANR	3196683	Identifier	a_info		3196638	0					
ANR	3196684	Identifier	glyph_data		3196638	1					
ANR	3196685	ExpressionStatement	a_info -> glyph_data_in_use = false	451:8:13187:13220	3196638	1	True				
ANR	3196686	AssignmentExpression	a_info -> glyph_data_in_use = false		3196638	0		=			
ANR	3196687	PtrMemberAccess	a_info -> glyph_data_in_use		3196638	0					
ANR	3196688	Identifier	a_info		3196638	0					
ANR	3196689	Identifier	glyph_data_in_use		3196638	1					
ANR	3196690	Identifier	false		3196638	1					
ANR	3196691	ElseStatement	else		3196638	0					
ANR	3196692	ExpressionStatement	"gs_free ( mem , ( FT_Byte * ) a_data -> pointer , 0 , 0 , ""free_fapi_glyph_data"" )"	453:8:13239:13310	3196638	0	True				
ANR	3196693	CallExpression	"gs_free ( mem , ( FT_Byte * ) a_data -> pointer , 0 , 0 , ""free_fapi_glyph_data"" )"		3196638	0					
ANR	3196694	Callee	gs_free		3196638	0					
ANR	3196695	Identifier	gs_free		3196638	0					
ANR	3196696	ArgumentList	mem		3196638	1					
ANR	3196697	Argument	mem		3196638	0					
ANR	3196698	Identifier	mem		3196638	0					
ANR	3196699	Argument	( FT_Byte * ) a_data -> pointer		3196638	1					
ANR	3196700	CastExpression	( FT_Byte * ) a_data -> pointer		3196638	0					
ANR	3196701	CastTarget	FT_Byte *		3196638	0					
ANR	3196702	PtrMemberAccess	a_data -> pointer		3196638	1					
ANR	3196703	Identifier	a_data		3196638	0					
ANR	3196704	Identifier	pointer		3196638	1					
ANR	3196705	Argument	0		3196638	2					
ANR	3196706	PrimaryExpression	0		3196638	0					
ANR	3196707	Argument	0		3196638	3					
ANR	3196708	PrimaryExpression	0		3196638	0					
ANR	3196709	Argument	"""free_fapi_glyph_data"""		3196638	4					
ANR	3196710	PrimaryExpression	"""free_fapi_glyph_data"""		3196638	0					
ANR	3196711	ReturnType	static void		3196638	1					
ANR	3196712	Identifier	free_fapi_glyph_data		3196638	2					
ANR	3196713	ParameterList	"FT_Incremental a_info , FT_Data * a_data"		3196638	3					
ANR	3196714	Parameter	FT_Incremental a_info	444:21:12917:12937	3196638	0	True				
ANR	3196715	ParameterType	FT_Incremental		3196638	0					
ANR	3196716	Identifier	a_info		3196638	1					
ANR	3196717	Parameter	FT_Data * a_data	444:44:12940:12955	3196638	1	True				
ANR	3196718	ParameterType	FT_Data *		3196638	0					
ANR	3196719	Identifier	a_data		3196638	1					
ANR	3196720	CFGEntryNode	ENTRY		3196638		True				
ANR	3196721	CFGExitNode	EXIT		3196638		True				
ANR	3196722	Symbol	ff		3196638						
ANR	3196723	Symbol	a_data -> pointer		3196638						
ANR	3196724	Symbol	* ff		3196638						
ANR	3196725	Symbol	a_data		3196638						
ANR	3196726	Symbol	* a_info		3196638						
ANR	3196727	Symbol	false		3196638						
ANR	3196728	Symbol	a_info -> fapi_font		3196638						
ANR	3196729	Symbol	a_info -> glyph_data		3196638						
ANR	3196730	Symbol	* face		3196638						
ANR	3196731	Symbol	face -> server -> mem		3196638						
ANR	3196732	Symbol	* face -> server		3196638						
ANR	3196733	Symbol	a_info -> glyph_data_in_use		3196638						
ANR	3196734	Symbol	face		3196638						
ANR	3196735	Symbol	mem		3196638						
ANR	3196736	Symbol	face -> server		3196638						
ANR	3196737	Symbol	* a_data		3196638						
ANR	3196738	Symbol	ff -> server_font_data		3196638						
ANR	3196739	Symbol	a_info		3196638						
ANR	3196740	Symbol	* * face		3196638						
ANR	3196741	Function	get_fapi_glyph_metrics	456:0:13315:14604							
ANR	3196742	FunctionDef	"get_fapi_glyph_metrics (FT_Incremental a_info , FT_UInt a_glyph_index , FT_Bool bVertical , FT_Incremental_MetricsRec * a_metrics)"		3196741	0					
ANR	3196743	CompoundStatement		460:0:13504:14604	3196741	0					
ANR	3196744	IfStatement	if ( bVertical && ! a_info -> fapi_font -> is_type1 )		3196741	0					
ANR	3196745	Condition	bVertical && ! a_info -> fapi_font -> is_type1	465:8:13775:13815	3196741	0	True				
ANR	3196746	AndExpression	bVertical && ! a_info -> fapi_font -> is_type1		3196741	0		&&			
ANR	3196747	Identifier	bVertical		3196741	0					
ANR	3196748	UnaryOperationExpression	! a_info -> fapi_font -> is_type1		3196741	1					
ANR	3196749	UnaryOperator	!		3196741	0					
ANR	3196750	PtrMemberAccess	a_info -> fapi_font -> is_type1		3196741	1					
ANR	3196751	PtrMemberAccess	a_info -> fapi_font		3196741	0					
ANR	3196752	Identifier	a_info		3196741	0					
ANR	3196753	Identifier	fapi_font		3196741	1					
ANR	3196754	Identifier	is_type1		3196741	1					
ANR	3196755	ExpressionStatement	a_metrics -> advance = 0	466:8:13826:13848	3196741	1	True				
ANR	3196756	AssignmentExpression	a_metrics -> advance = 0		3196741	0		=			
ANR	3196757	PtrMemberAccess	a_metrics -> advance		3196741	0					
ANR	3196758	Identifier	a_metrics		3196741	0					
ANR	3196759	Identifier	advance		3196741	1					
ANR	3196760	PrimaryExpression	0		3196741	1					
ANR	3196761	IfStatement	if ( a_info -> glyph_metrics_index == a_glyph_index )		3196741	1					
ANR	3196762	Condition	a_info -> glyph_metrics_index == a_glyph_index	468:8:13859:13902	3196741	0	True				
ANR	3196763	EqualityExpression	a_info -> glyph_metrics_index == a_glyph_index		3196741	0		==			
ANR	3196764	PtrMemberAccess	a_info -> glyph_metrics_index		3196741	0					
ANR	3196765	Identifier	a_info		3196741	0					
ANR	3196766	Identifier	glyph_metrics_index		3196741	1					
ANR	3196767	Identifier	a_glyph_index		3196741	1					
ANR	3196768	CompoundStatement		9:54:400:400	3196741	1					
ANR	3196769	SwitchStatement	switch ( a_info -> metrics_type )		3196741	0					
ANR	3196770	Condition	a_info -> metrics_type	469:16:13923:13942	3196741	0	True				
ANR	3196771	PtrMemberAccess	a_info -> metrics_type		3196741	0					
ANR	3196772	Identifier	a_info		3196741	0					
ANR	3196773	Identifier	metrics_type		3196741	1					
ANR	3196774	CompoundStatement		10:38:440:440	3196741	1					
ANR	3196775	Label	case gs_fapi_metrics_add :	470:12:13959:13983	3196741	0	True				
ANR	3196776	Identifier	gs_fapi_metrics_add		3196741	0					
ANR	3196777	ExpressionStatement	a_metrics -> advance += a_info -> glyph_metrics . advance	471:16:14001:14052	3196741	1	True				
ANR	3196778	AssignmentExpression	a_metrics -> advance += a_info -> glyph_metrics . advance		3196741	0		+=			
ANR	3196779	PtrMemberAccess	a_metrics -> advance		3196741	0					
ANR	3196780	Identifier	a_metrics		3196741	0					
ANR	3196781	Identifier	advance		3196741	1					
ANR	3196782	MemberAccess	a_info -> glyph_metrics . advance		3196741	1					
ANR	3196783	PtrMemberAccess	a_info -> glyph_metrics		3196741	0					
ANR	3196784	Identifier	a_info		3196741	0					
ANR	3196785	Identifier	glyph_metrics		3196741	1					
ANR	3196786	Identifier	advance		3196741	1					
ANR	3196787	BreakStatement	break ;	472:16:14070:14075	3196741	2	True				
ANR	3196788	Label	case gs_fapi_metrics_replace_width :	473:12:14089:14123	3196741	3	True				
ANR	3196789	Identifier	gs_fapi_metrics_replace_width		3196741	0					
ANR	3196790	ExpressionStatement	a_metrics -> advance = a_info -> glyph_metrics . advance	474:16:14141:14191	3196741	4	True				
ANR	3196791	AssignmentExpression	a_metrics -> advance = a_info -> glyph_metrics . advance		3196741	0		=			
ANR	3196792	PtrMemberAccess	a_metrics -> advance		3196741	0					
ANR	3196793	Identifier	a_metrics		3196741	0					
ANR	3196794	Identifier	advance		3196741	1					
ANR	3196795	MemberAccess	a_info -> glyph_metrics . advance		3196741	1					
ANR	3196796	PtrMemberAccess	a_info -> glyph_metrics		3196741	0					
ANR	3196797	Identifier	a_info		3196741	0					
ANR	3196798	Identifier	glyph_metrics		3196741	1					
ANR	3196799	Identifier	advance		3196741	1					
ANR	3196800	BreakStatement	break ;	475:16:14209:14214	3196741	5	True				
ANR	3196801	Label	case gs_fapi_metrics_replace :	476:12:14228:14256	3196741	6	True				
ANR	3196802	Identifier	gs_fapi_metrics_replace		3196741	0					
ANR	3196803	ExpressionStatement	* a_metrics = a_info -> glyph_metrics	477:16:14274:14308	3196741	7	True				
ANR	3196804	AssignmentExpression	* a_metrics = a_info -> glyph_metrics		3196741	0		=			
ANR	3196805	UnaryOperationExpression	* a_metrics		3196741	0					
ANR	3196806	UnaryOperator	*		3196741	0					
ANR	3196807	Identifier	a_metrics		3196741	1					
ANR	3196808	PtrMemberAccess	a_info -> glyph_metrics		3196741	1					
ANR	3196809	Identifier	a_info		3196741	0					
ANR	3196810	Identifier	glyph_metrics		3196741	1					
ANR	3196811	ExpressionStatement	a_metrics -> advance_v = 0	479:16:14415:14439	3196741	8	True				
ANR	3196812	AssignmentExpression	a_metrics -> advance_v = 0		3196741	0		=			
ANR	3196813	PtrMemberAccess	a_metrics -> advance_v		3196741	0					
ANR	3196814	Identifier	a_metrics		3196741	0					
ANR	3196815	Identifier	advance_v		3196741	1					
ANR	3196816	PrimaryExpression	0		3196741	1					
ANR	3196817	BreakStatement	break ;	480:16:14457:14462	3196741	9	True				
ANR	3196818	Label	default :	481:12:14476:14483	3196741	10	True				
ANR	3196819	Identifier	default		3196741	0					
ANR	3196820	ReturnStatement	return FT_Err_Invalid_Argument ;	483:16:14542:14572	3196741	11	True				
ANR	3196821	Identifier	FT_Err_Invalid_Argument		3196741	0					
ANR	3196822	ReturnStatement	return 0 ;	486:4:14594:14602	3196741	2	True				
ANR	3196823	PrimaryExpression	0		3196741	0					
ANR	3196824	ReturnType	static FT_Error		3196741	1					
ANR	3196825	Identifier	get_fapi_glyph_metrics		3196741	2					
ANR	3196826	ParameterList	"FT_Incremental a_info , FT_UInt a_glyph_index , FT_Bool bVertical , FT_Incremental_MetricsRec * a_metrics"		3196741	3					
ANR	3196827	Parameter	FT_Incremental a_info	457:23:13354:13374	3196741	0	True				
ANR	3196828	ParameterType	FT_Incremental		3196741	0					
ANR	3196829	Identifier	a_info		3196741	1					
ANR	3196830	Parameter	FT_UInt a_glyph_index	457:46:13377:13397	3196741	1	True				
ANR	3196831	ParameterType	FT_UInt		3196741	0					
ANR	3196832	Identifier	a_glyph_index		3196741	1					
ANR	3196833	Parameter	FT_Bool bVertical	458:23:13423:13439	3196741	2	True				
ANR	3196834	ParameterType	FT_Bool		3196741	0					
ANR	3196835	Identifier	bVertical		3196741	1					
ANR	3196836	Parameter	FT_Incremental_MetricsRec * a_metrics	459:23:13465:13501	3196741	3	True				
ANR	3196837	ParameterType	FT_Incremental_MetricsRec *		3196741	0					
ANR	3196838	Identifier	a_metrics		3196741	1					
ANR	3196839	CFGEntryNode	ENTRY		3196741		True				
ANR	3196840	CFGExitNode	EXIT		3196741		True				
ANR	3196841	Symbol	* a_info -> fapi_font		3196741						
ANR	3196842	Symbol	a_info -> glyph_metrics . advance		3196741						
ANR	3196843	Symbol	* a_metrics		3196741						
ANR	3196844	Symbol	* a_info		3196741						
ANR	3196845	Symbol	a_info -> fapi_font		3196741						
ANR	3196846	Symbol	a_info -> glyph_metrics_index		3196741						
ANR	3196847	Symbol	a_glyph_index		3196741						
ANR	3196848	Symbol	bVertical		3196741						
ANR	3196849	Symbol	FT_Err_Invalid_Argument		3196741						
ANR	3196850	Symbol	a_info -> metrics_type		3196741						
ANR	3196851	Symbol	a_metrics		3196741						
ANR	3196852	Symbol	a_metrics -> advance_v		3196741						
ANR	3196853	Symbol	a_info -> fapi_font -> is_type1		3196741						
ANR	3196854	Symbol	a_metrics -> advance		3196741						
ANR	3196855	Symbol	* * a_info		3196741						
ANR	3196856	Symbol	a_info		3196741						
ANR	3196857	Symbol	a_info -> glyph_metrics		3196741						
ANR	3196858	DeclStmt									
ANR	3196859	Decl							const FT_Incremental_FuncsRec	const FT_Incremental_FuncsRec	TheFAPIIncrementalInterfaceFuncs
ANR	3196860	Function	new_inc_int	495:0:14763:15410							
ANR	3196861	FunctionDef	"new_inc_int (gs_fapi_server * a_server , gs_fapi_font * a_fapi_font)"		3196860	0					
ANR	3196862	CompoundStatement		497:0:14867:15410	3196860	0					
ANR	3196863	IdentifierDeclStatement	ff_server * s = ( ff_server * ) a_server ;	498:4:14873:14910	3196860	0	True				
ANR	3196864	IdentifierDecl	* s = ( ff_server * ) a_server		3196860	0					
ANR	3196865	IdentifierDeclType	ff_server *		3196860	0					
ANR	3196866	Identifier	s		3196860	1					
ANR	3196867	AssignmentExpression	* s = ( ff_server * ) a_server		3196860	2		=			
ANR	3196868	Identifier	s		3196860	0					
ANR	3196869	CastExpression	( ff_server * ) a_server		3196860	1					
ANR	3196870	CastTarget	ff_server *		3196860	0					
ANR	3196871	Identifier	a_server		3196860	1					
ANR	3196872	IdentifierDeclStatement	"FT_Incremental_InterfaceRec * i = ( FT_Incremental_InterfaceRec * ) FF_alloc ( s -> ftmemory , sizeof ( FT_Incremental_InterfaceRec ) ) ;"	500:4:14917:15147	3196860	1	True				
ANR	3196873	IdentifierDecl	"* i = ( FT_Incremental_InterfaceRec * ) FF_alloc ( s -> ftmemory , sizeof ( FT_Incremental_InterfaceRec ) )"		3196860	0					
ANR	3196874	IdentifierDeclType	FT_Incremental_InterfaceRec *		3196860	0					
ANR	3196875	Identifier	i		3196860	1					
ANR	3196876	AssignmentExpression	"* i = ( FT_Incremental_InterfaceRec * ) FF_alloc ( s -> ftmemory , sizeof ( FT_Incremental_InterfaceRec ) )"		3196860	2		=			
ANR	3196877	Identifier	i		3196860	0					
ANR	3196878	CastExpression	"( FT_Incremental_InterfaceRec * ) FF_alloc ( s -> ftmemory , sizeof ( FT_Incremental_InterfaceRec ) )"		3196860	1					
ANR	3196879	CastTarget	FT_Incremental_InterfaceRec *		3196860	0					
ANR	3196880	CallExpression	"FF_alloc ( s -> ftmemory , sizeof ( FT_Incremental_InterfaceRec ) )"		3196860	1					
ANR	3196881	Callee	FF_alloc		3196860	0					
ANR	3196882	Identifier	FF_alloc		3196860	0					
ANR	3196883	ArgumentList	s -> ftmemory		3196860	1					
ANR	3196884	Argument	s -> ftmemory		3196860	0					
ANR	3196885	PtrMemberAccess	s -> ftmemory		3196860	0					
ANR	3196886	Identifier	s		3196860	0					
ANR	3196887	Identifier	ftmemory		3196860	1					
ANR	3196888	Argument	sizeof ( FT_Incremental_InterfaceRec )		3196860	1					
ANR	3196889	SizeofExpression	sizeof ( FT_Incremental_InterfaceRec )		3196860	0					
ANR	3196890	Sizeof	sizeof		3196860	0					
ANR	3196891	SizeofOperand	FT_Incremental_InterfaceRec		3196860	1					
ANR	3196892	IfStatement	if ( i )		3196860	2					
ANR	3196893	Condition	i	504:8:15157:15157	3196860	0	True				
ANR	3196894	Identifier	i		3196860	0					
ANR	3196895	CompoundStatement		8:11:292:292	3196860	1					
ANR	3196896	ExpressionStatement	i -> funcs = & TheFAPIIncrementalInterfaceFuncs	505:8:15170:15214	3196860	0	True				
ANR	3196897	AssignmentExpression	i -> funcs = & TheFAPIIncrementalInterfaceFuncs		3196860	0		=			
ANR	3196898	PtrMemberAccess	i -> funcs		3196860	0					
ANR	3196899	Identifier	i		3196860	0					
ANR	3196900	Identifier	funcs		3196860	1					
ANR	3196901	UnaryOperationExpression	& TheFAPIIncrementalInterfaceFuncs		3196860	1					
ANR	3196902	UnaryOperator	&		3196860	0					
ANR	3196903	Identifier	TheFAPIIncrementalInterfaceFuncs		3196860	1					
ANR	3196904	ExpressionStatement	"i -> object = ( FT_Incremental ) new_inc_int_info ( a_server , a_fapi_font )"	506:8:15224:15292	3196860	1	True				
ANR	3196905	AssignmentExpression	"i -> object = ( FT_Incremental ) new_inc_int_info ( a_server , a_fapi_font )"		3196860	0		=			
ANR	3196906	PtrMemberAccess	i -> object		3196860	0					
ANR	3196907	Identifier	i		3196860	0					
ANR	3196908	Identifier	object		3196860	1					
ANR	3196909	CastExpression	"( FT_Incremental ) new_inc_int_info ( a_server , a_fapi_font )"		3196860	1					
ANR	3196910	CastTarget	FT_Incremental		3196860	0					
ANR	3196911	CallExpression	"new_inc_int_info ( a_server , a_fapi_font )"		3196860	1					
ANR	3196912	Callee	new_inc_int_info		3196860	0					
ANR	3196913	Identifier	new_inc_int_info		3196860	0					
ANR	3196914	ArgumentList	a_server		3196860	1					
ANR	3196915	Argument	a_server		3196860	0					
ANR	3196916	Identifier	a_server		3196860	0					
ANR	3196917	Argument	a_fapi_font		3196860	1					
ANR	3196918	Identifier	a_fapi_font		3196860	0					
ANR	3196919	IfStatement	if ( ! i -> object )		3196860	2					
ANR	3196920	Condition	! i -> object	508:12:15307:15316	3196860	0	True				
ANR	3196921	UnaryOperationExpression	! i -> object		3196860	0					
ANR	3196922	UnaryOperator	!		3196860	0					
ANR	3196923	PtrMemberAccess	i -> object		3196860	1					
ANR	3196924	Identifier	i		3196860	0					
ANR	3196925	Identifier	object		3196860	1					
ANR	3196926	CompoundStatement		12:24:451:451	3196860	1					
ANR	3196927	ExpressionStatement	"FF_free ( s -> ftmemory , i )"	509:12:15333:15356	3196860	0	True				
ANR	3196928	CallExpression	"FF_free ( s -> ftmemory , i )"		3196860	0					
ANR	3196929	Callee	FF_free		3196860	0					
ANR	3196930	Identifier	FF_free		3196860	0					
ANR	3196931	ArgumentList	s -> ftmemory		3196860	1					
ANR	3196932	Argument	s -> ftmemory		3196860	0					
ANR	3196933	PtrMemberAccess	s -> ftmemory		3196860	0					
ANR	3196934	Identifier	s		3196860	0					
ANR	3196935	Identifier	ftmemory		3196860	1					
ANR	3196936	Argument	i		3196860	1					
ANR	3196937	Identifier	i		3196860	0					
ANR	3196938	ExpressionStatement	i = NULL	510:12:15370:15378	3196860	1	True				
ANR	3196939	AssignmentExpression	i = NULL		3196860	0		=			
ANR	3196940	Identifier	i		3196860	0					
ANR	3196941	Identifier	NULL		3196860	1					
ANR	3196942	ReturnStatement	return i ;	513:4:15400:15408	3196860	3	True				
ANR	3196943	Identifier	i		3196860	0					
ANR	3196944	ReturnType	static FT_Incremental_InterfaceRec *		3196860	1					
ANR	3196945	Identifier	new_inc_int		3196860	2					
ANR	3196946	ParameterList	"gs_fapi_server * a_server , gs_fapi_font * a_fapi_font"		3196860	3					
ANR	3196947	Parameter	gs_fapi_server * a_server	496:12:14812:14836	3196860	0	True				
ANR	3196948	ParameterType	gs_fapi_server *		3196860	0					
ANR	3196949	Identifier	a_server		3196860	1					
ANR	3196950	Parameter	gs_fapi_font * a_fapi_font	496:39:14839:14864	3196860	1	True				
ANR	3196951	ParameterType	gs_fapi_font *		3196860	0					
ANR	3196952	Identifier	a_fapi_font		3196860	1					
ANR	3196953	CFGEntryNode	ENTRY		3196860		True				
ANR	3196954	CFGExitNode	EXIT		3196860		True				
ANR	3196955	Symbol	NULL		3196860						
ANR	3196956	Symbol	i -> funcs		3196860						
ANR	3196957	Symbol	i -> object		3196860						
ANR	3196958	Symbol	a_server		3196860						
ANR	3196959	Symbol	i		3196860						
ANR	3196960	Symbol	a_fapi_font		3196860						
ANR	3196961	Symbol	& TheFAPIIncrementalInterfaceFuncs		3196860						
ANR	3196962	Symbol	s		3196860						
ANR	3196963	Symbol	* i		3196860						
ANR	3196964	Symbol	new_inc_int_info		3196860						
ANR	3196965	Symbol	s -> ftmemory		3196860						
ANR	3196966	Symbol	FF_alloc		3196860						
ANR	3196967	Symbol	* s		3196860						
ANR	3196968	Function	delete_inc_int	516:0:15413:15695							
ANR	3196969	FunctionDef	"delete_inc_int (gs_fapi_server * a_server , FT_Incremental_InterfaceRec * a_inc_int)"		3196968	0					
ANR	3196970	CompoundStatement		519:0:15523:15695	3196968	0					
ANR	3196971	IdentifierDeclStatement	ff_server * s = ( ff_server * ) a_server ;	520:4:15529:15566	3196968	0	True				
ANR	3196972	IdentifierDecl	* s = ( ff_server * ) a_server		3196968	0					
ANR	3196973	IdentifierDeclType	ff_server *		3196968	0					
ANR	3196974	Identifier	s		3196968	1					
ANR	3196975	AssignmentExpression	* s = ( ff_server * ) a_server		3196968	2		=			
ANR	3196976	Identifier	s		3196968	0					
ANR	3196977	CastExpression	( ff_server * ) a_server		3196968	1					
ANR	3196978	CastTarget	ff_server *		3196968	0					
ANR	3196979	Identifier	a_server		3196968	1					
ANR	3196980	IfStatement	if ( a_inc_int )		3196968	1					
ANR	3196981	Condition	a_inc_int	522:8:15577:15585	3196968	0	True				
ANR	3196982	Identifier	a_inc_int		3196968	0					
ANR	3196983	CompoundStatement		4:19:64:64	3196968	1					
ANR	3196984	ExpressionStatement	"delete_inc_int_info ( a_server , a_inc_int -> object )"	523:8:15598:15646	3196968	0	True				
ANR	3196985	CallExpression	"delete_inc_int_info ( a_server , a_inc_int -> object )"		3196968	0					
ANR	3196986	Callee	delete_inc_int_info		3196968	0					
ANR	3196987	Identifier	delete_inc_int_info		3196968	0					
ANR	3196988	ArgumentList	a_server		3196968	1					
ANR	3196989	Argument	a_server		3196968	0					
ANR	3196990	Identifier	a_server		3196968	0					
ANR	3196991	Argument	a_inc_int -> object		3196968	1					
ANR	3196992	PtrMemberAccess	a_inc_int -> object		3196968	0					
ANR	3196993	Identifier	a_inc_int		3196968	0					
ANR	3196994	Identifier	object		3196968	1					
ANR	3196995	ExpressionStatement	"FF_free ( s -> ftmemory , a_inc_int )"	524:8:15656:15687	3196968	1	True				
ANR	3196996	CallExpression	"FF_free ( s -> ftmemory , a_inc_int )"		3196968	0					
ANR	3196997	Callee	FF_free		3196968	0					
ANR	3196998	Identifier	FF_free		3196968	0					
ANR	3196999	ArgumentList	s -> ftmemory		3196968	1					
ANR	3197000	Argument	s -> ftmemory		3196968	0					
ANR	3197001	PtrMemberAccess	s -> ftmemory		3196968	0					
ANR	3197002	Identifier	s		3196968	0					
ANR	3197003	Identifier	ftmemory		3196968	1					
ANR	3197004	Argument	a_inc_int		3196968	1					
ANR	3197005	Identifier	a_inc_int		3196968	0					
ANR	3197006	ReturnType	static void		3196968	1					
ANR	3197007	Identifier	delete_inc_int		3196968	2					
ANR	3197008	ParameterList	"gs_fapi_server * a_server , FT_Incremental_InterfaceRec * a_inc_int"		3196968	3					
ANR	3197009	Parameter	gs_fapi_server * a_server	517:15:15440:15464	3196968	0	True				
ANR	3197010	ParameterType	gs_fapi_server *		3196968	0					
ANR	3197011	Identifier	a_server		3196968	1					
ANR	3197012	Parameter	FT_Incremental_InterfaceRec * a_inc_int	518:15:15482:15520	3196968	1	True				
ANR	3197013	ParameterType	FT_Incremental_InterfaceRec *		3196968	0					
ANR	3197014	Identifier	a_inc_int		3196968	1					
ANR	3197015	CFGEntryNode	ENTRY		3196968		True				
ANR	3197016	CFGExitNode	EXIT		3196968		True				
ANR	3197017	Symbol	a_inc_int		3196968						
ANR	3197018	Symbol	s		3196968						
ANR	3197019	Symbol	a_inc_int -> object		3196968						
ANR	3197020	Symbol	a_server		3196968						
ANR	3197021	Symbol	s -> ftmemory		3196968						
ANR	3197022	Symbol	* s		3196968						
ANR	3197023	Symbol	* a_inc_int		3196968						
ANR	3197024	Function	ft_to_gs_error	531:0:15806:16042							
ANR	3197025	FunctionDef	ft_to_gs_error (FT_Error a_error)		3197024	0					
ANR	3197026	CompoundStatement		533:0:15850:16042	3197024	0					
ANR	3197027	IfStatement	if ( a_error )		3197024	0					
ANR	3197028	Condition	a_error	534:8:15860:15866	3197024	0	True				
ANR	3197029	Identifier	a_error		3197024	0					
ANR	3197030	CompoundStatement		2:17:18:18	3197024	1					
ANR	3197031	IfStatement	if ( a_error == FT_Err_Out_Of_Memory )		3197024	0					
ANR	3197032	Condition	a_error == FT_Err_Out_Of_Memory	535:12:15883:15913	3197024	0	True				
ANR	3197033	EqualityExpression	a_error == FT_Err_Out_Of_Memory		3197024	0		==			
ANR	3197034	Identifier	a_error		3197024	0					
ANR	3197035	Identifier	FT_Err_Out_Of_Memory		3197024	1					
ANR	3197036	ExpressionStatement	return_error ( gs_error_VMerror )	536:12:15928:15958	3197024	1	True				
ANR	3197037	CallExpression	return_error ( gs_error_VMerror )		3197024	0					
ANR	3197038	Callee	return_error		3197024	0					
ANR	3197039	Identifier	return_error		3197024	0					
ANR	3197040	ArgumentList	gs_error_VMerror		3197024	1					
ANR	3197041	Argument	gs_error_VMerror		3197024	0					
ANR	3197042	Identifier	gs_error_VMerror		3197024	0					
ANR	3197043	ElseStatement	else		3197024	0					
ANR	3197044	ExpressionStatement	return_error ( gs_error_unknownerror )	538:12:15985:16020	3197024	0	True				
ANR	3197045	CallExpression	return_error ( gs_error_unknownerror )		3197024	0					
ANR	3197046	Callee	return_error		3197024	0					
ANR	3197047	Identifier	return_error		3197024	0					
ANR	3197048	ArgumentList	gs_error_unknownerror		3197024	1					
ANR	3197049	Argument	gs_error_unknownerror		3197024	0					
ANR	3197050	Identifier	gs_error_unknownerror		3197024	0					
ANR	3197051	ReturnStatement	return 0 ;	540:4:16032:16040	3197024	1	True				
ANR	3197052	PrimaryExpression	0		3197024	0					
ANR	3197053	ReturnType	static int		3197024	1					
ANR	3197054	Identifier	ft_to_gs_error		3197024	2					
ANR	3197055	ParameterList	FT_Error a_error		3197024	3					
ANR	3197056	Parameter	FT_Error a_error	532:15:15832:15847	3197024	0	True				
ANR	3197057	ParameterType	FT_Error		3197024	0					
ANR	3197058	Identifier	a_error		3197024	1					
ANR	3197059	CFGEntryNode	ENTRY		3197024		True				
ANR	3197060	CFGExitNode	EXIT		3197024		True				
ANR	3197061	Symbol	gs_error_VMerror		3197024						
ANR	3197062	Symbol	FT_Err_Out_Of_Memory		3197024						
ANR	3197063	Symbol	a_error		3197024						
ANR	3197064	Symbol	gs_error_unknownerror		3197024						
ANR	3197065	Function	load_glyph	546:0:16181:31590							
ANR	3197066	FunctionDef	"load_glyph (gs_fapi_server * a_server , gs_fapi_font * a_fapi_font , const gs_fapi_char_ref * a_char_ref , gs_fapi_metrics * a_metrics , FT_Glyph * a_glyph , bool a_bitmap , int max_bitmap)"		3197065	0					
ANR	3197067	CompoundStatement		550:0:16409:31590	3197065	0					
ANR	3197068	IdentifierDeclStatement	ff_server * s = ( ff_server * ) a_server ;	551:4:16415:16452	3197065	0	True				
ANR	3197069	IdentifierDecl	* s = ( ff_server * ) a_server		3197065	0					
ANR	3197070	IdentifierDeclType	ff_server *		3197065	0					
ANR	3197071	Identifier	s		3197065	1					
ANR	3197072	AssignmentExpression	* s = ( ff_server * ) a_server		3197065	2		=			
ANR	3197073	Identifier	s		3197065	0					
ANR	3197074	CastExpression	( ff_server * ) a_server		3197065	1					
ANR	3197075	CastTarget	ff_server *		3197065	0					
ANR	3197076	Identifier	a_server		3197065	1					
ANR	3197077	IdentifierDeclStatement	FT_Error ft_error = 0 ;	552:4:16458:16479	3197065	1	True				
ANR	3197078	IdentifierDecl	ft_error = 0		3197065	0					
ANR	3197079	IdentifierDeclType	FT_Error		3197065	0					
ANR	3197080	Identifier	ft_error		3197065	1					
ANR	3197081	AssignmentExpression	ft_error = 0		3197065	2		=			
ANR	3197082	Identifier	ft_error		3197065	0					
ANR	3197083	PrimaryExpression	0		3197065	1					
ANR	3197084	IdentifierDeclStatement	FT_Error ft_error_fb = 1 ;	553:4:16485:16509	3197065	2	True				
ANR	3197085	IdentifierDecl	ft_error_fb = 1		3197065	0					
ANR	3197086	IdentifierDeclType	FT_Error		3197065	0					
ANR	3197087	Identifier	ft_error_fb		3197065	1					
ANR	3197088	AssignmentExpression	ft_error_fb = 1		3197065	2		=			
ANR	3197089	Identifier	ft_error_fb		3197065	0					
ANR	3197090	PrimaryExpression	1		3197065	1					
ANR	3197091	IdentifierDeclStatement	ff_face * face = ( ff_face * ) a_fapi_font -> server_font_data ;	554:4:16515:16572	3197065	3	True				
ANR	3197092	IdentifierDecl	* face = ( ff_face * ) a_fapi_font -> server_font_data		3197065	0					
ANR	3197093	IdentifierDeclType	ff_face *		3197065	0					
ANR	3197094	Identifier	face		3197065	1					
ANR	3197095	AssignmentExpression	* face = ( ff_face * ) a_fapi_font -> server_font_data		3197065	2		=			
ANR	3197096	Identifier	face		3197065	0					
ANR	3197097	CastExpression	( ff_face * ) a_fapi_font -> server_font_data		3197065	1					
ANR	3197098	CastTarget	ff_face *		3197065	0					
ANR	3197099	PtrMemberAccess	a_fapi_font -> server_font_data		3197065	1					
ANR	3197100	Identifier	a_fapi_font		3197065	0					
ANR	3197101	Identifier	server_font_data		3197065	1					
ANR	3197102	IdentifierDeclStatement	FT_Face ft_face = face -> ft_face ;	555:4:16578:16609	3197065	4	True				
ANR	3197103	IdentifierDecl	ft_face = face -> ft_face		3197065	0					
ANR	3197104	IdentifierDeclType	FT_Face		3197065	0					
ANR	3197105	Identifier	ft_face		3197065	1					
ANR	3197106	AssignmentExpression	ft_face = face -> ft_face		3197065	2		=			
ANR	3197107	Identifier	ft_face		3197065	0					
ANR	3197108	PtrMemberAccess	face -> ft_face		3197065	1					
ANR	3197109	Identifier	face		3197065	0					
ANR	3197110	Identifier	ft_face		3197065	1					
ANR	3197111	IdentifierDeclStatement	int index = a_char_ref -> char_codes [ 0 ] ;	556:4:16615:16652	3197065	5	True				
ANR	3197112	IdentifierDecl	index = a_char_ref -> char_codes [ 0 ]		3197065	0					
ANR	3197113	IdentifierDeclType	int		3197065	0					
ANR	3197114	Identifier	index		3197065	1					
ANR	3197115	AssignmentExpression	index = a_char_ref -> char_codes [ 0 ]		3197065	2		=			
ANR	3197116	Identifier	index		3197065	0					
ANR	3197117	ArrayIndexing	a_char_ref -> char_codes [ 0 ]		3197065	1					
ANR	3197118	PtrMemberAccess	a_char_ref -> char_codes		3197065	0					
ANR	3197119	Identifier	a_char_ref		3197065	0					
ANR	3197120	Identifier	char_codes		3197065	1					
ANR	3197121	PrimaryExpression	0		3197065	1					
ANR	3197122	IdentifierDeclStatement	FT_Long w ;	557:4:16658:16667	3197065	6	True				
ANR	3197123	IdentifierDecl	w		3197065	0					
ANR	3197124	IdentifierDeclType	FT_Long		3197065	0					
ANR	3197125	Identifier	w		3197065	1					
ANR	3197126	IdentifierDeclStatement	FT_Long h ;	558:4:16673:16682	3197065	7	True				
ANR	3197127	IdentifierDecl	h		3197065	0					
ANR	3197128	IdentifierDeclType	FT_Long		3197065	0					
ANR	3197129	Identifier	h		3197065	1					
ANR	3197130	IdentifierDeclStatement	FT_Long fflags ;	559:4:16688:16702	3197065	8	True				
ANR	3197131	IdentifierDecl	fflags		3197065	0					
ANR	3197132	IdentifierDeclType	FT_Long		3197065	0					
ANR	3197133	Identifier	fflags		3197065	1					
ANR	3197134	IdentifierDeclStatement	FT_Int32 load_flags = 0 ;	560:4:16708:16731	3197065	9	True				
ANR	3197135	IdentifierDecl	load_flags = 0		3197065	0					
ANR	3197136	IdentifierDeclType	FT_Int32		3197065	0					
ANR	3197137	Identifier	load_flags		3197065	1					
ANR	3197138	AssignmentExpression	load_flags = 0		3197065	2		=			
ANR	3197139	Identifier	load_flags		3197065	0					
ANR	3197140	PrimaryExpression	0		3197065	1					
ANR	3197141	IdentifierDeclStatement	"FT_Vector delta = { 0 , 0 } ;"	561:4:16737:16761	3197065	10	True				
ANR	3197142	IdentifierDecl	"delta = { 0 , 0 }"		3197065	0					
ANR	3197143	IdentifierDeclType	FT_Vector		3197065	0					
ANR	3197144	Identifier	delta		3197065	1					
ANR	3197145	AssignmentExpression	"delta = { 0 , 0 }"		3197065	2		=			
ANR	3197146	Identifier	delta		3197065	0					
ANR	3197147	InitializerList	0		3197065	1					
ANR	3197148	PrimaryExpression	0		3197065	0					
ANR	3197149	PrimaryExpression	0		3197065	1					
ANR	3197150	IdentifierDeclStatement	const void * saved_char_data = a_fapi_font -> char_data ;	567:4:17005:17057	3197065	11	True				
ANR	3197151	IdentifierDecl	* saved_char_data = a_fapi_font -> char_data		3197065	0					
ANR	3197152	IdentifierDeclType	const void *		3197065	0					
ANR	3197153	Identifier	saved_char_data		3197065	1					
ANR	3197154	AssignmentExpression	* saved_char_data = a_fapi_font -> char_data		3197065	2		=			
ANR	3197155	Identifier	saved_char_data		3197065	0					
ANR	3197156	PtrMemberAccess	a_fapi_font -> char_data		3197065	1					
ANR	3197157	Identifier	a_fapi_font		3197065	0					
ANR	3197158	Identifier	char_data		3197065	1					
ANR	3197159	IdentifierDeclStatement	const int saved_char_data_len = a_fapi_font -> char_data_len ;	568:4:17063:17121	3197065	12	True				
ANR	3197160	IdentifierDecl	saved_char_data_len = a_fapi_font -> char_data_len		3197065	0					
ANR	3197161	IdentifierDeclType	const int		3197065	0					
ANR	3197162	Identifier	saved_char_data_len		3197065	1					
ANR	3197163	AssignmentExpression	saved_char_data_len = a_fapi_font -> char_data_len		3197065	2		=			
ANR	3197164	Identifier	saved_char_data_len		3197065	0					
ANR	3197165	PtrMemberAccess	a_fapi_font -> char_data_len		3197065	1					
ANR	3197166	Identifier	a_fapi_font		3197065	0					
ANR	3197167	Identifier	char_data_len		3197065	1					
ANR	3197168	IfStatement	if ( s -> bitmap_glyph )		3197065	13					
ANR	3197169	Condition	s -> bitmap_glyph	570:8:17132:17146	3197065	0	True				
ANR	3197170	PtrMemberAccess	s -> bitmap_glyph		3197065	0					
ANR	3197171	Identifier	s		3197065	0					
ANR	3197172	Identifier	bitmap_glyph		3197065	1					
ANR	3197173	CompoundStatement		21:25:739:739	3197065	1					
ANR	3197174	ExpressionStatement	"FT_Bitmap_Done ( s -> freetype_library , & s -> bitmap_glyph -> bitmap )"	571:8:17159:17220	3197065	0	True				
ANR	3197175	CallExpression	"FT_Bitmap_Done ( s -> freetype_library , & s -> bitmap_glyph -> bitmap )"		3197065	0					
ANR	3197176	Callee	FT_Bitmap_Done		3197065	0					
ANR	3197177	Identifier	FT_Bitmap_Done		3197065	0					
ANR	3197178	ArgumentList	s -> freetype_library		3197065	1					
ANR	3197179	Argument	s -> freetype_library		3197065	0					
ANR	3197180	PtrMemberAccess	s -> freetype_library		3197065	0					
ANR	3197181	Identifier	s		3197065	0					
ANR	3197182	Identifier	freetype_library		3197065	1					
ANR	3197183	Argument	& s -> bitmap_glyph -> bitmap		3197065	1					
ANR	3197184	UnaryOperationExpression	& s -> bitmap_glyph -> bitmap		3197065	0					
ANR	3197185	UnaryOperator	&		3197065	0					
ANR	3197186	PtrMemberAccess	s -> bitmap_glyph -> bitmap		3197065	1					
ANR	3197187	PtrMemberAccess	s -> bitmap_glyph		3197065	0					
ANR	3197188	Identifier	s		3197065	0					
ANR	3197189	Identifier	bitmap_glyph		3197065	1					
ANR	3197190	Identifier	bitmap		3197065	1					
ANR	3197191	ExpressionStatement	"FF_free ( s -> ftmemory , s -> bitmap_glyph )"	572:8:17230:17267	3197065	1	True				
ANR	3197192	CallExpression	"FF_free ( s -> ftmemory , s -> bitmap_glyph )"		3197065	0					
ANR	3197193	Callee	FF_free		3197065	0					
ANR	3197194	Identifier	FF_free		3197065	0					
ANR	3197195	ArgumentList	s -> ftmemory		3197065	1					
ANR	3197196	Argument	s -> ftmemory		3197065	0					
ANR	3197197	PtrMemberAccess	s -> ftmemory		3197065	0					
ANR	3197198	Identifier	s		3197065	0					
ANR	3197199	Identifier	ftmemory		3197065	1					
ANR	3197200	Argument	s -> bitmap_glyph		3197065	1					
ANR	3197201	PtrMemberAccess	s -> bitmap_glyph		3197065	0					
ANR	3197202	Identifier	s		3197065	0					
ANR	3197203	Identifier	bitmap_glyph		3197065	1					
ANR	3197204	ExpressionStatement	s -> bitmap_glyph = NULL	573:8:17277:17299	3197065	2	True				
ANR	3197205	AssignmentExpression	s -> bitmap_glyph = NULL		3197065	0		=			
ANR	3197206	PtrMemberAccess	s -> bitmap_glyph		3197065	0					
ANR	3197207	Identifier	s		3197065	0					
ANR	3197208	Identifier	bitmap_glyph		3197065	1					
ANR	3197209	Identifier	NULL		3197065	1					
ANR	3197210	IfStatement	if ( s -> outline_glyph )		3197065	14					
ANR	3197211	Condition	s -> outline_glyph	575:8:17315:17330	3197065	0	True				
ANR	3197212	PtrMemberAccess	s -> outline_glyph		3197065	0					
ANR	3197213	Identifier	s		3197065	0					
ANR	3197214	Identifier	outline_glyph		3197065	1					
ANR	3197215	CompoundStatement		26:26:923:923	3197065	1					
ANR	3197216	ExpressionStatement	"FT_Outline_Done ( s -> freetype_library , & s -> outline_glyph -> outline )"	576:8:17343:17407	3197065	0	True				
ANR	3197217	CallExpression	"FT_Outline_Done ( s -> freetype_library , & s -> outline_glyph -> outline )"		3197065	0					
ANR	3197218	Callee	FT_Outline_Done		3197065	0					
ANR	3197219	Identifier	FT_Outline_Done		3197065	0					
ANR	3197220	ArgumentList	s -> freetype_library		3197065	1					
ANR	3197221	Argument	s -> freetype_library		3197065	0					
ANR	3197222	PtrMemberAccess	s -> freetype_library		3197065	0					
ANR	3197223	Identifier	s		3197065	0					
ANR	3197224	Identifier	freetype_library		3197065	1					
ANR	3197225	Argument	& s -> outline_glyph -> outline		3197065	1					
ANR	3197226	UnaryOperationExpression	& s -> outline_glyph -> outline		3197065	0					
ANR	3197227	UnaryOperator	&		3197065	0					
ANR	3197228	PtrMemberAccess	s -> outline_glyph -> outline		3197065	1					
ANR	3197229	PtrMemberAccess	s -> outline_glyph		3197065	0					
ANR	3197230	Identifier	s		3197065	0					
ANR	3197231	Identifier	outline_glyph		3197065	1					
ANR	3197232	Identifier	outline		3197065	1					
ANR	3197233	ExpressionStatement	"FF_free ( s -> ftmemory , s -> outline_glyph )"	577:8:17417:17455	3197065	1	True				
ANR	3197234	CallExpression	"FF_free ( s -> ftmemory , s -> outline_glyph )"		3197065	0					
ANR	3197235	Callee	FF_free		3197065	0					
ANR	3197236	Identifier	FF_free		3197065	0					
ANR	3197237	ArgumentList	s -> ftmemory		3197065	1					
ANR	3197238	Argument	s -> ftmemory		3197065	0					
ANR	3197239	PtrMemberAccess	s -> ftmemory		3197065	0					
ANR	3197240	Identifier	s		3197065	0					
ANR	3197241	Identifier	ftmemory		3197065	1					
ANR	3197242	Argument	s -> outline_glyph		3197065	1					
ANR	3197243	PtrMemberAccess	s -> outline_glyph		3197065	0					
ANR	3197244	Identifier	s		3197065	0					
ANR	3197245	Identifier	outline_glyph		3197065	1					
ANR	3197246	ExpressionStatement	s -> outline_glyph = NULL	578:8:17465:17488	3197065	2	True				
ANR	3197247	AssignmentExpression	s -> outline_glyph = NULL		3197065	0		=			
ANR	3197248	PtrMemberAccess	s -> outline_glyph		3197065	0					
ANR	3197249	Identifier	s		3197065	0					
ANR	3197250	Identifier	outline_glyph		3197065	1					
ANR	3197251	Identifier	NULL		3197065	1					
ANR	3197252	IfStatement	if ( a_fapi_font -> is_type1 )		3197065	15					
ANR	3197253	Condition	a_fapi_font -> is_type1	582:8:17511:17531	3197065	0	True				
ANR	3197254	PtrMemberAccess	a_fapi_font -> is_type1		3197065	0					
ANR	3197255	Identifier	a_fapi_font		3197065	0					
ANR	3197256	Identifier	is_type1		3197065	1					
ANR	3197257	CompoundStatement		38:8:1298:1332	3197065	1					
ANR	3197258	IdentifierDeclStatement	FT_Fixed coords [ 16 ] = { 0 } ;	583:8:17544:17569	3197065	0	True				
ANR	3197259	IdentifierDecl	coords [ 16 ] = { 0 }		3197065	0					
ANR	3197260	IdentifierDeclType	FT_Fixed [ 16 ]		3197065	0					
ANR	3197261	Identifier	coords		3197065	1					
ANR	3197262	PrimaryExpression	16		3197065	2					
ANR	3197263	AssignmentExpression	coords [ 16 ] = { 0 }		3197065	3		=			
ANR	3197264	Identifier	coords		3197065	0					
ANR	3197265	InitializerList	0		3197065	1					
ANR	3197266	PrimaryExpression	0		3197065	0					
ANR	3197267	IdentifierDeclStatement	int i ;	584:8:17579:17584	3197065	1	True				
ANR	3197268	IdentifierDecl	i		3197065	0					
ANR	3197269	IdentifierDeclType	int		3197065	0					
ANR	3197270	Identifier	i		3197065	1					
ANR	3197271	IdentifierDeclStatement	gs_font_type1 * pfont1 = ( gs_font_type1 * ) a_fapi_font -> client_font_data ;	585:8:17594:17665	3197065	2	True				
ANR	3197272	IdentifierDecl	* pfont1 = ( gs_font_type1 * ) a_fapi_font -> client_font_data		3197065	0					
ANR	3197273	IdentifierDeclType	gs_font_type1 *		3197065	0					
ANR	3197274	Identifier	pfont1		3197065	1					
ANR	3197275	AssignmentExpression	* pfont1 = ( gs_font_type1 * ) a_fapi_font -> client_font_data		3197065	2		=			
ANR	3197276	Identifier	pfont1		3197065	0					
ANR	3197277	CastExpression	( gs_font_type1 * ) a_fapi_font -> client_font_data		3197065	1					
ANR	3197278	CastTarget	gs_font_type1 *		3197065	0					
ANR	3197279	PtrMemberAccess	a_fapi_font -> client_font_data		3197065	1					
ANR	3197280	Identifier	a_fapi_font		3197065	0					
ANR	3197281	Identifier	client_font_data		3197065	1					
ANR	3197282	IdentifierDeclStatement	FT_Multi_Master amaster ;	586:8:17675:17698	3197065	3	True				
ANR	3197283	IdentifierDecl	amaster		3197065	0					
ANR	3197284	IdentifierDeclType	FT_Multi_Master		3197065	0					
ANR	3197285	Identifier	amaster		3197065	1					
ANR	3197286	IdentifierDeclStatement	T1_Face * face = ( T1_Face * ) ft_face ;	587:8:17708:17742	3197065	4	True				
ANR	3197287	IdentifierDecl	* face = ( T1_Face * ) ft_face		3197065	0					
ANR	3197288	IdentifierDeclType	T1_Face *		3197065	0					
ANR	3197289	Identifier	face		3197065	1					
ANR	3197290	AssignmentExpression	* face = ( T1_Face * ) ft_face		3197065	2		=			
ANR	3197291	Identifier	face		3197065	0					
ANR	3197292	CastExpression	( T1_Face * ) ft_face		3197065	1					
ANR	3197293	CastTarget	T1_Face *		3197065	0					
ANR	3197294	Identifier	ft_face		3197065	1					
ANR	3197295	ExpressionStatement	"ft_error = FT_Get_Multi_Master ( ft_face , & amaster )"	589:8:17753:17802	3197065	5	True				
ANR	3197296	AssignmentExpression	"ft_error = FT_Get_Multi_Master ( ft_face , & amaster )"		3197065	0		=			
ANR	3197297	Identifier	ft_error		3197065	0					
ANR	3197298	CallExpression	"FT_Get_Multi_Master ( ft_face , & amaster )"		3197065	1					
ANR	3197299	Callee	FT_Get_Multi_Master		3197065	0					
ANR	3197300	Identifier	FT_Get_Multi_Master		3197065	0					
ANR	3197301	ArgumentList	ft_face		3197065	1					
ANR	3197302	Argument	ft_face		3197065	0					
ANR	3197303	Identifier	ft_face		3197065	0					
ANR	3197304	Argument	& amaster		3197065	1					
ANR	3197305	UnaryOperationExpression	& amaster		3197065	0					
ANR	3197306	UnaryOperator	&		3197065	0					
ANR	3197307	Identifier	amaster		3197065	1					
ANR	3197308	IfStatement	if ( pfont1 -> data . WeightVector . count > 0 )		3197065	6					
ANR	3197309	Condition	pfont1 -> data . WeightVector . count > 0	591:12:17817:17851	3197065	0	True				
ANR	3197310	RelationalExpression	pfont1 -> data . WeightVector . count > 0		3197065	0		>			
ANR	3197311	MemberAccess	pfont1 -> data . WeightVector . count		3197065	0					
ANR	3197312	MemberAccess	pfont1 -> data . WeightVector		3197065	0					
ANR	3197313	PtrMemberAccess	pfont1 -> data		3197065	0					
ANR	3197314	Identifier	pfont1		3197065	0					
ANR	3197315	Identifier	data		3197065	1					
ANR	3197316	Identifier	WeightVector		3197065	1					
ANR	3197317	Identifier	count		3197065	1					
ANR	3197318	PrimaryExpression	0		3197065	1					
ANR	3197319	CompoundStatement		42:49:1444:1444	3197065	1					
ANR	3197320	ForStatement	for ( i = 0 ; i < pfont1 -> data . WeightVector . count ; i ++ )		3197065	0					
ANR	3197321	ForInit	i = 0 ;	592:17:17873:17878	3197065	0	True				
ANR	3197322	AssignmentExpression	i = 0		3197065	0		=			
ANR	3197323	Identifier	i		3197065	0					
ANR	3197324	PrimaryExpression	0		3197065	1					
ANR	3197325	Condition	i < pfont1 -> data . WeightVector . count	592:24:17880:17914	3197065	1	True				
ANR	3197326	RelationalExpression	i < pfont1 -> data . WeightVector . count		3197065	0		<			
ANR	3197327	Identifier	i		3197065	0					
ANR	3197328	MemberAccess	pfont1 -> data . WeightVector . count		3197065	1					
ANR	3197329	MemberAccess	pfont1 -> data . WeightVector		3197065	0					
ANR	3197330	PtrMemberAccess	pfont1 -> data		3197065	0					
ANR	3197331	Identifier	pfont1		3197065	0					
ANR	3197332	Identifier	data		3197065	1					
ANR	3197333	Identifier	WeightVector		3197065	1					
ANR	3197334	Identifier	count		3197065	1					
ANR	3197335	PostIncDecOperationExpression	i ++	592:61:17917:17919	3197065	2	True				
ANR	3197336	Identifier	i		3197065	0					
ANR	3197337	IncDec	++		3197065	1					
ANR	3197338	CompoundStatement		43:66:1512:1512	3197065	3					
ANR	3197339	ExpressionStatement	coords [ i ] = ( FT_Fixed ) ( pfont1 -> data . WeightVector . values [ i ] * 65536 )	593:16:17940:18007	3197065	0	True				
ANR	3197340	AssignmentExpression	coords [ i ] = ( FT_Fixed ) ( pfont1 -> data . WeightVector . values [ i ] * 65536 )		3197065	0		=			
ANR	3197341	ArrayIndexing	coords [ i ]		3197065	0					
ANR	3197342	Identifier	coords		3197065	0					
ANR	3197343	Identifier	i		3197065	1					
ANR	3197344	CastExpression	( FT_Fixed ) ( pfont1 -> data . WeightVector . values [ i ] * 65536 )		3197065	1					
ANR	3197345	CastTarget	FT_Fixed		3197065	0					
ANR	3197346	MultiplicativeExpression	pfont1 -> data . WeightVector . values [ i ] * 65536		3197065	1		*			
ANR	3197347	ArrayIndexing	pfont1 -> data . WeightVector . values [ i ]		3197065	0					
ANR	3197348	MemberAccess	pfont1 -> data . WeightVector . values		3197065	0					
ANR	3197349	MemberAccess	pfont1 -> data . WeightVector		3197065	0					
ANR	3197350	PtrMemberAccess	pfont1 -> data		3197065	0					
ANR	3197351	Identifier	pfont1		3197065	0					
ANR	3197352	Identifier	data		3197065	1					
ANR	3197353	Identifier	WeightVector		3197065	1					
ANR	3197354	Identifier	values		3197065	1					
ANR	3197355	Identifier	i		3197065	1					
ANR	3197356	PrimaryExpression	65536		3197065	1					
ANR	3197357	ExpressionStatement	coords [ 0 ] = coords [ 1 ]	595:12:18035:18056	3197065	1	True				
ANR	3197358	AssignmentExpression	coords [ 0 ] = coords [ 1 ]		3197065	0		=			
ANR	3197359	ArrayIndexing	coords [ 0 ]		3197065	0					
ANR	3197360	Identifier	coords		3197065	0					
ANR	3197361	PrimaryExpression	0		3197065	1					
ANR	3197362	ArrayIndexing	coords [ 1 ]		3197065	1					
ANR	3197363	Identifier	coords		3197065	0					
ANR	3197364	PrimaryExpression	1		3197065	1					
ANR	3197365	ExpressionStatement	coords [ 1 ] = coords [ 2 ]	596:12:18070:18091	3197065	2	True				
ANR	3197366	AssignmentExpression	coords [ 1 ] = coords [ 2 ]		3197065	0		=			
ANR	3197367	ArrayIndexing	coords [ 1 ]		3197065	0					
ANR	3197368	Identifier	coords		3197065	0					
ANR	3197369	PrimaryExpression	1		3197065	1					
ANR	3197370	ArrayIndexing	coords [ 2 ]		3197065	1					
ANR	3197371	Identifier	coords		3197065	0					
ANR	3197372	PrimaryExpression	2		3197065	1					
ANR	3197373	ExpressionStatement	"ft_error = FT_Set_MM_Blend_Coordinates ( ft_face , pfont1 -> data . WeightVector . count / 2 , coords )"	597:12:18105:18198	3197065	3	True				
ANR	3197374	AssignmentExpression	"ft_error = FT_Set_MM_Blend_Coordinates ( ft_face , pfont1 -> data . WeightVector . count / 2 , coords )"		3197065	0		=			
ANR	3197375	Identifier	ft_error		3197065	0					
ANR	3197376	CallExpression	"FT_Set_MM_Blend_Coordinates ( ft_face , pfont1 -> data . WeightVector . count / 2 , coords )"		3197065	1					
ANR	3197377	Callee	FT_Set_MM_Blend_Coordinates		3197065	0					
ANR	3197378	Identifier	FT_Set_MM_Blend_Coordinates		3197065	0					
ANR	3197379	ArgumentList	ft_face		3197065	1					
ANR	3197380	Argument	ft_face		3197065	0					
ANR	3197381	Identifier	ft_face		3197065	0					
ANR	3197382	Argument	pfont1 -> data . WeightVector . count / 2		3197065	1					
ANR	3197383	MultiplicativeExpression	pfont1 -> data . WeightVector . count / 2		3197065	0		/			
ANR	3197384	MemberAccess	pfont1 -> data . WeightVector . count		3197065	0					
ANR	3197385	MemberAccess	pfont1 -> data . WeightVector		3197065	0					
ANR	3197386	PtrMemberAccess	pfont1 -> data		3197065	0					
ANR	3197387	Identifier	pfont1		3197065	0					
ANR	3197388	Identifier	data		3197065	1					
ANR	3197389	Identifier	WeightVector		3197065	1					
ANR	3197390	Identifier	count		3197065	1					
ANR	3197391	PrimaryExpression	2		3197065	1					
ANR	3197392	Argument	coords		3197065	2					
ANR	3197393	Identifier	coords		3197065	0					
ANR	3197394	ElseStatement	else		3197065	0					
ANR	3197395	ExpressionStatement	"ft_error = FT_Set_MM_Blend_Coordinates ( ft_face , 0 , coords )"	600:12:18235:18294	3197065	0	True				
ANR	3197396	AssignmentExpression	"ft_error = FT_Set_MM_Blend_Coordinates ( ft_face , 0 , coords )"		3197065	0		=			
ANR	3197397	Identifier	ft_error		3197065	0					
ANR	3197398	CallExpression	"FT_Set_MM_Blend_Coordinates ( ft_face , 0 , coords )"		3197065	1					
ANR	3197399	Callee	FT_Set_MM_Blend_Coordinates		3197065	0					
ANR	3197400	Identifier	FT_Set_MM_Blend_Coordinates		3197065	0					
ANR	3197401	ArgumentList	ft_face		3197065	1					
ANR	3197402	Argument	ft_face		3197065	0					
ANR	3197403	Identifier	ft_face		3197065	0					
ANR	3197404	Argument	0		3197065	1					
ANR	3197405	PrimaryExpression	0		3197065	0					
ANR	3197406	Argument	coords		3197065	2					
ANR	3197407	Identifier	coords		3197065	0					
ANR	3197408	IfStatement	if ( ! a_char_ref -> is_glyph_index )		3197065	16					
ANR	3197409	Condition	! a_char_ref -> is_glyph_index	604:8:18318:18344	3197065	0	True				
ANR	3197410	UnaryOperationExpression	! a_char_ref -> is_glyph_index		3197065	0					
ANR	3197411	UnaryOperator	!		3197065	0					
ANR	3197412	PtrMemberAccess	a_char_ref -> is_glyph_index		3197065	1					
ANR	3197413	Identifier	a_char_ref		3197065	0					
ANR	3197414	Identifier	is_glyph_index		3197065	1					
ANR	3197415	CompoundStatement		55:37:1937:1937	3197065	1					
ANR	3197416	IfStatement	if ( ft_face -> num_charmaps )		3197065	0					
ANR	3197417	Condition	ft_face -> num_charmaps	605:12:18361:18381	3197065	0	True				
ANR	3197418	PtrMemberAccess	ft_face -> num_charmaps		3197065	0					
ANR	3197419	Identifier	ft_face		3197065	0					
ANR	3197420	Identifier	num_charmaps		3197065	1					
ANR	3197421	ExpressionStatement	"index = FT_Get_Char_Index ( ft_face , index )"	606:12:18396:18437	3197065	1	True				
ANR	3197422	AssignmentExpression	"index = FT_Get_Char_Index ( ft_face , index )"		3197065	0		=			
ANR	3197423	Identifier	index		3197065	0					
ANR	3197424	CallExpression	"FT_Get_Char_Index ( ft_face , index )"		3197065	1					
ANR	3197425	Callee	FT_Get_Char_Index		3197065	0					
ANR	3197426	Identifier	FT_Get_Char_Index		3197065	0					
ANR	3197427	ArgumentList	ft_face		3197065	1					
ANR	3197428	Argument	ft_face		3197065	0					
ANR	3197429	Identifier	ft_face		3197065	0					
ANR	3197430	Argument	index		3197065	1					
ANR	3197431	Identifier	index		3197065	0					
ANR	3197432	ElseStatement	else		3197065	0					
ANR	3197433	CompoundStatement		58:13:2042:2042	3197065	0					
ANR	3197434	IfStatement	if ( a_fapi_font -> is_type1 )		3197065	0					
ANR	3197435	Condition	a_fapi_font -> is_type1	619:16:19119:19139	3197065	0	True				
ANR	3197436	PtrMemberAccess	a_fapi_font -> is_type1		3197065	0					
ANR	3197437	Identifier	a_fapi_font		3197065	0					
ANR	3197438	Identifier	is_type1		3197065	1					
ANR	3197439	ExpressionStatement	index = 0	620:16:19158:19167	3197065	1	True				
ANR	3197440	AssignmentExpression	index = 0		3197065	0		=			
ANR	3197441	Identifier	index		3197065	0					
ANR	3197442	PrimaryExpression	0		3197065	1					
ANR	3197443	ElseStatement	else		3197065	0					
ANR	3197444	ExpressionStatement	index = a_char_ref -> char_codes [ 0 ]	622:16:19202:19235	3197065	0	True				
ANR	3197445	AssignmentExpression	index = a_char_ref -> char_codes [ 0 ]		3197065	0		=			
ANR	3197446	Identifier	index		3197065	0					
ANR	3197447	ArrayIndexing	a_char_ref -> char_codes [ 0 ]		3197065	1					
ANR	3197448	PtrMemberAccess	a_char_ref -> char_codes		3197065	0					
ANR	3197449	Identifier	a_char_ref		3197065	0					
ANR	3197450	Identifier	char_codes		3197065	1					
ANR	3197451	PrimaryExpression	0		3197065	1					
ANR	3197452	ElseStatement	else		3197065	0					
ANR	3197453	CompoundStatement		76:9:2852:2852	3197065	0					
ANR	3197454	IfStatement	"if ( ! a_fapi_font -> is_cid && ! face -> ft_inc_int && ( index == 0 || ( a_char_ref -> client_char_code != gs_no_char && FT_Get_Char_Index ( ft_face , a_char_ref -> client_char_code ) <= 0 ) ) )"		3197065	0					
ANR	3197455	Condition	"! a_fapi_font -> is_cid && ! face -> ft_inc_int && ( index == 0 || ( a_char_ref -> client_char_code != gs_no_char && FT_Get_Char_Index ( ft_face , a_char_ref -> client_char_code ) <= 0 ) )"	631:12:19627:19832	3197065	0	True				
ANR	3197456	AndExpression	"! a_fapi_font -> is_cid && ! face -> ft_inc_int && ( index == 0 || ( a_char_ref -> client_char_code != gs_no_char && FT_Get_Char_Index ( ft_face , a_char_ref -> client_char_code ) <= 0 ) )"		3197065	0		&&			
ANR	3197457	UnaryOperationExpression	! a_fapi_font -> is_cid		3197065	0					
ANR	3197458	UnaryOperator	!		3197065	0					
ANR	3197459	PtrMemberAccess	a_fapi_font -> is_cid		3197065	1					
ANR	3197460	Identifier	a_fapi_font		3197065	0					
ANR	3197461	Identifier	is_cid		3197065	1					
ANR	3197462	AndExpression	"! face -> ft_inc_int && ( index == 0 || ( a_char_ref -> client_char_code != gs_no_char && FT_Get_Char_Index ( ft_face , a_char_ref -> client_char_code ) <= 0 ) )"		3197065	1		&&			
ANR	3197463	UnaryOperationExpression	! face -> ft_inc_int		3197065	0					
ANR	3197464	UnaryOperator	!		3197065	0					
ANR	3197465	PtrMemberAccess	face -> ft_inc_int		3197065	1					
ANR	3197466	Identifier	face		3197065	0					
ANR	3197467	Identifier	ft_inc_int		3197065	1					
ANR	3197468	OrExpression	"index == 0 || ( a_char_ref -> client_char_code != gs_no_char && FT_Get_Char_Index ( ft_face , a_char_ref -> client_char_code ) <= 0 )"		3197065	1		||			
ANR	3197469	EqualityExpression	index == 0		3197065	0		==			
ANR	3197470	Identifier	index		3197065	0					
ANR	3197471	PrimaryExpression	0		3197065	1					
ANR	3197472	AndExpression	"a_char_ref -> client_char_code != gs_no_char && FT_Get_Char_Index ( ft_face , a_char_ref -> client_char_code ) <= 0"		3197065	1		&&			
ANR	3197473	EqualityExpression	a_char_ref -> client_char_code != gs_no_char		3197065	0		!=			
ANR	3197474	PtrMemberAccess	a_char_ref -> client_char_code		3197065	0					
ANR	3197475	Identifier	a_char_ref		3197065	0					
ANR	3197476	Identifier	client_char_code		3197065	1					
ANR	3197477	Identifier	gs_no_char		3197065	1					
ANR	3197478	RelationalExpression	"FT_Get_Char_Index ( ft_face , a_char_ref -> client_char_code ) <= 0"		3197065	1		<=			
ANR	3197479	CallExpression	"FT_Get_Char_Index ( ft_face , a_char_ref -> client_char_code )"		3197065	0					
ANR	3197480	Callee	FT_Get_Char_Index		3197065	0					
ANR	3197481	Identifier	FT_Get_Char_Index		3197065	0					
ANR	3197482	ArgumentList	ft_face		3197065	1					
ANR	3197483	Argument	ft_face		3197065	0					
ANR	3197484	Identifier	ft_face		3197065	0					
ANR	3197485	Argument	a_char_ref -> client_char_code		3197065	1					
ANR	3197486	PtrMemberAccess	a_char_ref -> client_char_code		3197065	0					
ANR	3197487	Identifier	a_char_ref		3197065	0					
ANR	3197488	Identifier	client_char_code		3197065	1					
ANR	3197489	PrimaryExpression	0		3197065	1					
ANR	3197490	CompoundStatement		86:12:3439:3450	3197065	1					
ANR	3197491	IdentifierDeclStatement	int tmp_ind ;	635:12:19849:19860	3197065	0	True				
ANR	3197492	IdentifierDecl	tmp_ind		3197065	0					
ANR	3197493	IdentifierDeclType	int		3197065	0					
ANR	3197494	Identifier	tmp_ind		3197065	1					
ANR	3197495	IfStatement	"if ( ( tmp_ind = FT_Get_Char_Index ( ft_face , 32 ) ) > 0 )"		3197065	1					
ANR	3197496	Condition	"( tmp_ind = FT_Get_Char_Index ( ft_face , 32 ) ) > 0"	637:16:19879:19924	3197065	0	True				
ANR	3197497	RelationalExpression	"( tmp_ind = FT_Get_Char_Index ( ft_face , 32 ) ) > 0"		3197065	0		>			
ANR	3197498	AssignmentExpression	"tmp_ind = FT_Get_Char_Index ( ft_face , 32 )"		3197065	0		=			
ANR	3197499	Identifier	tmp_ind		3197065	0					
ANR	3197500	CallExpression	"FT_Get_Char_Index ( ft_face , 32 )"		3197065	1					
ANR	3197501	Callee	FT_Get_Char_Index		3197065	0					
ANR	3197502	Identifier	FT_Get_Char_Index		3197065	0					
ANR	3197503	ArgumentList	ft_face		3197065	1					
ANR	3197504	Argument	ft_face		3197065	0					
ANR	3197505	Identifier	ft_face		3197065	0					
ANR	3197506	Argument	32		3197065	1					
ANR	3197507	PrimaryExpression	32		3197065	0					
ANR	3197508	PrimaryExpression	0		3197065	1					
ANR	3197509	CompoundStatement		88:64:3517:3517	3197065	1					
ANR	3197510	ExpressionStatement	index = tmp_ind	638:16:19945:19960	3197065	0	True				
ANR	3197511	AssignmentExpression	index = tmp_ind		3197065	0		=			
ANR	3197512	Identifier	index		3197065	0					
ANR	3197513	Identifier	tmp_ind		3197065	1					
ANR	3197514	IfStatement	if ( face -> ft_inc_int )		3197065	17					
ANR	3197515	Condition	face -> ft_inc_int	643:8:20082:20097	3197065	0	True				
ANR	3197516	PtrMemberAccess	face -> ft_inc_int		3197065	0					
ANR	3197517	Identifier	face		3197065	0					
ANR	3197518	Identifier	ft_inc_int		3197065	1					
ANR	3197519	ExpressionStatement	face -> ft_inc_int -> object -> fapi_font = a_fapi_font	644:8:20108:20157	3197065	1	True				
ANR	3197520	AssignmentExpression	face -> ft_inc_int -> object -> fapi_font = a_fapi_font		3197065	0		=			
ANR	3197521	PtrMemberAccess	face -> ft_inc_int -> object -> fapi_font		3197065	0					
ANR	3197522	PtrMemberAccess	face -> ft_inc_int -> object		3197065	0					
ANR	3197523	PtrMemberAccess	face -> ft_inc_int		3197065	0					
ANR	3197524	Identifier	face		3197065	0					
ANR	3197525	Identifier	ft_inc_int		3197065	1					
ANR	3197526	Identifier	object		3197065	1					
ANR	3197527	Identifier	fapi_font		3197065	1					
ANR	3197528	Identifier	a_fapi_font		3197065	1					
ANR	3197529	IfStatement	if ( face -> ft_inc_int && a_char_ref -> metrics_type != gs_fapi_metrics_notdef )		3197065	18					
ANR	3197530	Condition	face -> ft_inc_int && a_char_ref -> metrics_type != gs_fapi_metrics_notdef	647:8:20235:20312	3197065	0	True				
ANR	3197531	AndExpression	face -> ft_inc_int && a_char_ref -> metrics_type != gs_fapi_metrics_notdef		3197065	0		&&			
ANR	3197532	PtrMemberAccess	face -> ft_inc_int		3197065	0					
ANR	3197533	Identifier	face		3197065	0					
ANR	3197534	Identifier	ft_inc_int		3197065	1					
ANR	3197535	EqualityExpression	a_char_ref -> metrics_type != gs_fapi_metrics_notdef		3197065	1		!=			
ANR	3197536	PtrMemberAccess	a_char_ref -> metrics_type		3197065	0					
ANR	3197537	Identifier	a_char_ref		3197065	0					
ANR	3197538	Identifier	metrics_type		3197065	1					
ANR	3197539	Identifier	gs_fapi_metrics_notdef		3197065	1					
ANR	3197540	CompoundStatement		101:8:3916:3999	3197065	1					
ANR	3197541	IdentifierDeclStatement	FT_Incremental_MetricsRec * m = & face -> ft_inc_int -> object -> glyph_metrics ;	650:8:20326:20409	3197065	0	True				
ANR	3197542	IdentifierDecl	* m = & face -> ft_inc_int -> object -> glyph_metrics		3197065	0					
ANR	3197543	IdentifierDeclType	FT_Incremental_MetricsRec *		3197065	0					
ANR	3197544	Identifier	m		3197065	1					
ANR	3197545	AssignmentExpression	* m = & face -> ft_inc_int -> object -> glyph_metrics		3197065	2		=			
ANR	3197546	Identifier	m		3197065	0					
ANR	3197547	UnaryOperationExpression	& face -> ft_inc_int -> object -> glyph_metrics		3197065	1					
ANR	3197548	UnaryOperator	&		3197065	0					
ANR	3197549	PtrMemberAccess	face -> ft_inc_int -> object -> glyph_metrics		3197065	1					
ANR	3197550	PtrMemberAccess	face -> ft_inc_int -> object		3197065	0					
ANR	3197551	PtrMemberAccess	face -> ft_inc_int		3197065	0					
ANR	3197552	Identifier	face		3197065	0					
ANR	3197553	Identifier	ft_inc_int		3197065	1					
ANR	3197554	Identifier	object		3197065	1					
ANR	3197555	Identifier	glyph_metrics		3197065	1					
ANR	3197556	ExpressionStatement	m -> bearing_x = a_char_ref -> sb_x >> 16	652:8:20419:20456	3197065	1	True				
ANR	3197557	AssignmentExpression	m -> bearing_x = a_char_ref -> sb_x >> 16		3197065	0		=			
ANR	3197558	PtrMemberAccess	m -> bearing_x		3197065	0					
ANR	3197559	Identifier	m		3197065	0					
ANR	3197560	Identifier	bearing_x		3197065	1					
ANR	3197561	ShiftExpression	a_char_ref -> sb_x >> 16		3197065	1		>>			
ANR	3197562	PtrMemberAccess	a_char_ref -> sb_x		3197065	0					
ANR	3197563	Identifier	a_char_ref		3197065	0					
ANR	3197564	Identifier	sb_x		3197065	1					
ANR	3197565	PrimaryExpression	16		3197065	1					
ANR	3197566	ExpressionStatement	m -> bearing_y = a_char_ref -> sb_y >> 16	653:8:20466:20503	3197065	2	True				
ANR	3197567	AssignmentExpression	m -> bearing_y = a_char_ref -> sb_y >> 16		3197065	0		=			
ANR	3197568	PtrMemberAccess	m -> bearing_y		3197065	0					
ANR	3197569	Identifier	m		3197065	0					
ANR	3197570	Identifier	bearing_y		3197065	1					
ANR	3197571	ShiftExpression	a_char_ref -> sb_y >> 16		3197065	1		>>			
ANR	3197572	PtrMemberAccess	a_char_ref -> sb_y		3197065	0					
ANR	3197573	Identifier	a_char_ref		3197065	0					
ANR	3197574	Identifier	sb_y		3197065	1					
ANR	3197575	PrimaryExpression	16		3197065	1					
ANR	3197576	ExpressionStatement	m -> advance = a_char_ref -> aw_x >> 16	654:8:20513:20548	3197065	3	True				
ANR	3197577	AssignmentExpression	m -> advance = a_char_ref -> aw_x >> 16		3197065	0		=			
ANR	3197578	PtrMemberAccess	m -> advance		3197065	0					
ANR	3197579	Identifier	m		3197065	0					
ANR	3197580	Identifier	advance		3197065	1					
ANR	3197581	ShiftExpression	a_char_ref -> aw_x >> 16		3197065	1		>>			
ANR	3197582	PtrMemberAccess	a_char_ref -> aw_x		3197065	0					
ANR	3197583	Identifier	a_char_ref		3197065	0					
ANR	3197584	Identifier	aw_x		3197065	1					
ANR	3197585	PrimaryExpression	16		3197065	1					
ANR	3197586	ExpressionStatement	face -> ft_inc_int -> object -> glyph_metrics_index = index	655:8:20558:20611	3197065	4	True				
ANR	3197587	AssignmentExpression	face -> ft_inc_int -> object -> glyph_metrics_index = index		3197065	0		=			
ANR	3197588	PtrMemberAccess	face -> ft_inc_int -> object -> glyph_metrics_index		3197065	0					
ANR	3197589	PtrMemberAccess	face -> ft_inc_int -> object		3197065	0					
ANR	3197590	PtrMemberAccess	face -> ft_inc_int		3197065	0					
ANR	3197591	Identifier	face		3197065	0					
ANR	3197592	Identifier	ft_inc_int		3197065	1					
ANR	3197593	Identifier	object		3197065	1					
ANR	3197594	Identifier	glyph_metrics_index		3197065	1					
ANR	3197595	Identifier	index		3197065	1					
ANR	3197596	ExpressionStatement	face -> ft_inc_int -> object -> metrics_type = a_char_ref -> metrics_type	656:8:20621:20686	3197065	5	True				
ANR	3197597	AssignmentExpression	face -> ft_inc_int -> object -> metrics_type = a_char_ref -> metrics_type		3197065	0		=			
ANR	3197598	PtrMemberAccess	face -> ft_inc_int -> object -> metrics_type		3197065	0					
ANR	3197599	PtrMemberAccess	face -> ft_inc_int -> object		3197065	0					
ANR	3197600	PtrMemberAccess	face -> ft_inc_int		3197065	0					
ANR	3197601	Identifier	face		3197065	0					
ANR	3197602	Identifier	ft_inc_int		3197065	1					
ANR	3197603	Identifier	object		3197065	1					
ANR	3197604	Identifier	metrics_type		3197065	1					
ANR	3197605	PtrMemberAccess	a_char_ref -> metrics_type		3197065	1					
ANR	3197606	Identifier	a_char_ref		3197065	0					
ANR	3197607	Identifier	metrics_type		3197065	1					
ANR	3197608	IfStatement	if ( ! a_fapi_font -> is_type1 )		3197065	6					
ANR	3197609	Condition	! a_fapi_font -> is_type1	659:12:20760:20781	3197065	0	True				
ANR	3197610	UnaryOperationExpression	! a_fapi_font -> is_type1		3197065	0					
ANR	3197611	UnaryOperator	!		3197065	0					
ANR	3197612	PtrMemberAccess	a_fapi_font -> is_type1		3197065	1					
ANR	3197613	Identifier	a_fapi_font		3197065	0					
ANR	3197614	Identifier	is_type1		3197065	1					
ANR	3197615	CompoundStatement		110:36:4374:4374	3197065	1					
ANR	3197616	ExpressionStatement	delta . y = 0	660:12:20798:20809	3197065	0	True				
ANR	3197617	AssignmentExpression	delta . y = 0		3197065	0		=			
ANR	3197618	MemberAccess	delta . y		3197065	0					
ANR	3197619	Identifier	delta		3197065	0					
ANR	3197620	Identifier	y		3197065	1					
ANR	3197621	PrimaryExpression	0		3197065	1					
ANR	3197622	ExpressionStatement	"delta . x = FT_MulFix ( a_char_ref -> sb_x , ft_face -> size -> metrics . x_scale )"	661:12:20823:20892	3197065	1	True				
ANR	3197623	AssignmentExpression	"delta . x = FT_MulFix ( a_char_ref -> sb_x , ft_face -> size -> metrics . x_scale )"		3197065	0		=			
ANR	3197624	MemberAccess	delta . x		3197065	0					
ANR	3197625	Identifier	delta		3197065	0					
ANR	3197626	Identifier	x		3197065	1					
ANR	3197627	CallExpression	"FT_MulFix ( a_char_ref -> sb_x , ft_face -> size -> metrics . x_scale )"		3197065	1					
ANR	3197628	Callee	FT_MulFix		3197065	0					
ANR	3197629	Identifier	FT_MulFix		3197065	0					
ANR	3197630	ArgumentList	a_char_ref -> sb_x		3197065	1					
ANR	3197631	Argument	a_char_ref -> sb_x		3197065	0					
ANR	3197632	PtrMemberAccess	a_char_ref -> sb_x		3197065	0					
ANR	3197633	Identifier	a_char_ref		3197065	0					
ANR	3197634	Identifier	sb_x		3197065	1					
ANR	3197635	Argument	ft_face -> size -> metrics . x_scale		3197065	1					
ANR	3197636	MemberAccess	ft_face -> size -> metrics . x_scale		3197065	0					
ANR	3197637	PtrMemberAccess	ft_face -> size -> metrics		3197065	0					
ANR	3197638	PtrMemberAccess	ft_face -> size		3197065	0					
ANR	3197639	Identifier	ft_face		3197065	0					
ANR	3197640	Identifier	size		3197065	1					
ANR	3197641	Identifier	metrics		3197065	1					
ANR	3197642	Identifier	x_scale		3197065	1					
ANR	3197643	ExpressionStatement	"FT_Vector_Transform ( & delta , & face -> ft_transform )"	662:12:20906:20955	3197065	2	True				
ANR	3197644	CallExpression	"FT_Vector_Transform ( & delta , & face -> ft_transform )"		3197065	0					
ANR	3197645	Callee	FT_Vector_Transform		3197065	0					
ANR	3197646	Identifier	FT_Vector_Transform		3197065	0					
ANR	3197647	ArgumentList	& delta		3197065	1					
ANR	3197648	Argument	& delta		3197065	0					
ANR	3197649	UnaryOperationExpression	& delta		3197065	0					
ANR	3197650	UnaryOperator	&		3197065	0					
ANR	3197651	Identifier	delta		3197065	1					
ANR	3197652	Argument	& face -> ft_transform		3197065	1					
ANR	3197653	UnaryOperationExpression	& face -> ft_transform		3197065	0					
ANR	3197654	UnaryOperator	&		3197065	0					
ANR	3197655	PtrMemberAccess	face -> ft_transform		3197065	1					
ANR	3197656	Identifier	face		3197065	0					
ANR	3197657	Identifier	ft_transform		3197065	1					
ANR	3197658	ElseStatement	else		3197065	0					
ANR	3197659	IfStatement	if ( face -> ft_inc_int )		3197065	0					
ANR	3197660	Condition	face -> ft_inc_int	665:13:20985:21000	3197065	0	True				
ANR	3197661	PtrMemberAccess	face -> ft_inc_int		3197065	0					
ANR	3197662	Identifier	face		3197065	0					
ANR	3197663	Identifier	ft_inc_int		3197065	1					
ANR	3197664	ExpressionStatement	face -> ft_inc_int -> object -> glyph_metrics_index = 0xFFFFFFFF	667:8:21126:21184	3197065	1	True				
ANR	3197665	AssignmentExpression	face -> ft_inc_int -> object -> glyph_metrics_index = 0xFFFFFFFF		3197065	0		=			
ANR	3197666	PtrMemberAccess	face -> ft_inc_int -> object -> glyph_metrics_index		3197065	0					
ANR	3197667	PtrMemberAccess	face -> ft_inc_int -> object		3197065	0					
ANR	3197668	PtrMemberAccess	face -> ft_inc_int		3197065	0					
ANR	3197669	Identifier	face		3197065	0					
ANR	3197670	Identifier	ft_inc_int		3197065	1					
ANR	3197671	Identifier	object		3197065	1					
ANR	3197672	Identifier	glyph_metrics_index		3197065	1					
ANR	3197673	PrimaryExpression	0xFFFFFFFF		3197065	1					
ANR	3197674	IfStatement	if ( ! ft_error )		3197065	19					
ANR	3197675	Condition	! ft_error	670:8:21287:21295	3197065	0	True				
ANR	3197676	UnaryOperationExpression	! ft_error		3197065	0					
ANR	3197677	UnaryOperator	!		3197065	0					
ANR	3197678	Identifier	ft_error		3197065	1					
ANR	3197679	CompoundStatement		121:19:4888:4888	3197065	1					
ANR	3197680	ExpressionStatement	a_fapi_font -> char_data = saved_char_data	674:8:21648:21688	3197065	0	True				
ANR	3197681	AssignmentExpression	a_fapi_font -> char_data = saved_char_data		3197065	0		=			
ANR	3197682	PtrMemberAccess	a_fapi_font -> char_data		3197065	0					
ANR	3197683	Identifier	a_fapi_font		3197065	0					
ANR	3197684	Identifier	char_data		3197065	1					
ANR	3197685	Identifier	saved_char_data		3197065	1					
ANR	3197686	IfStatement	if ( ! a_fapi_font -> is_mtx_skipped && ! a_fapi_font -> is_type1 )		3197065	1					
ANR	3197687	Condition	! a_fapi_font -> is_mtx_skipped && ! a_fapi_font -> is_type1	675:12:21702:21755	3197065	0	True				
ANR	3197688	AndExpression	! a_fapi_font -> is_mtx_skipped && ! a_fapi_font -> is_type1		3197065	0		&&			
ANR	3197689	UnaryOperationExpression	! a_fapi_font -> is_mtx_skipped		3197065	0					
ANR	3197690	UnaryOperator	!		3197065	0					
ANR	3197691	PtrMemberAccess	a_fapi_font -> is_mtx_skipped		3197065	1					
ANR	3197692	Identifier	a_fapi_font		3197065	0					
ANR	3197693	Identifier	is_mtx_skipped		3197065	1					
ANR	3197694	UnaryOperationExpression	! a_fapi_font -> is_type1		3197065	1					
ANR	3197695	UnaryOperator	!		3197065	0					
ANR	3197696	PtrMemberAccess	a_fapi_font -> is_type1		3197065	1					
ANR	3197697	Identifier	a_fapi_font		3197065	0					
ANR	3197698	Identifier	is_type1		3197065	1					
ANR	3197699	CompoundStatement		126:68:5348:5348	3197065	1					
ANR	3197700	IfStatement	if ( a_server -> grid_fit == 0 )		3197065	0					
ANR	3197701	Condition	a_server -> grid_fit == 0	680:16:21927:21949	3197065	0	True				
ANR	3197702	EqualityExpression	a_server -> grid_fit == 0		3197065	0		==			
ANR	3197703	PtrMemberAccess	a_server -> grid_fit		3197065	0					
ANR	3197704	Identifier	a_server		3197065	0					
ANR	3197705	Identifier	grid_fit		3197065	1					
ANR	3197706	PrimaryExpression	0		3197065	1					
ANR	3197707	CompoundStatement		131:41:5542:5542	3197065	1					
ANR	3197708	ExpressionStatement	load_flags = FT_LOAD_NO_HINTING | FT_LOAD_NO_AUTOHINT	681:16:21970:22023	3197065	0	True				
ANR	3197709	AssignmentExpression	load_flags = FT_LOAD_NO_HINTING | FT_LOAD_NO_AUTOHINT		3197065	0		=			
ANR	3197710	Identifier	load_flags		3197065	0					
ANR	3197711	InclusiveOrExpression	FT_LOAD_NO_HINTING | FT_LOAD_NO_AUTOHINT		3197065	1		|			
ANR	3197712	Identifier	FT_LOAD_NO_HINTING		3197065	0					
ANR	3197713	Identifier	FT_LOAD_NO_AUTOHINT		3197065	1					
ANR	3197714	ElseStatement	else		3197065	0					
ANR	3197715	IfStatement	if ( a_server -> grid_fit == 2 )		3197065	0					
ANR	3197716	Condition	a_server -> grid_fit == 2	683:21:22060:22082	3197065	0	True				
ANR	3197717	EqualityExpression	a_server -> grid_fit == 2		3197065	0		==			
ANR	3197718	PtrMemberAccess	a_server -> grid_fit		3197065	0					
ANR	3197719	Identifier	a_server		3197065	0					
ANR	3197720	Identifier	grid_fit		3197065	1					
ANR	3197721	PrimaryExpression	2		3197065	1					
ANR	3197722	CompoundStatement		134:46:5675:5675	3197065	1					
ANR	3197723	ExpressionStatement	load_flags = FT_LOAD_FORCE_AUTOHINT	684:16:22103:22138	3197065	0	True				
ANR	3197724	AssignmentExpression	load_flags = FT_LOAD_FORCE_AUTOHINT		3197065	0		=			
ANR	3197725	Identifier	load_flags		3197065	0					
ANR	3197726	Identifier	FT_LOAD_FORCE_AUTOHINT		3197065	1					
ANR	3197727	ExpressionStatement	load_flags |= FT_LOAD_MONOCHROME | FT_LOAD_NO_BITMAP | FT_LOAD_LINEAR_DESIGN	686:12:22166:22242	3197065	1	True				
ANR	3197728	AssignmentExpression	load_flags |= FT_LOAD_MONOCHROME | FT_LOAD_NO_BITMAP | FT_LOAD_LINEAR_DESIGN		3197065	0		|=			
ANR	3197729	Identifier	load_flags		3197065	0					
ANR	3197730	InclusiveOrExpression	FT_LOAD_MONOCHROME | FT_LOAD_NO_BITMAP | FT_LOAD_LINEAR_DESIGN		3197065	1		|			
ANR	3197731	Identifier	FT_LOAD_MONOCHROME		3197065	0					
ANR	3197732	InclusiveOrExpression	FT_LOAD_NO_BITMAP | FT_LOAD_LINEAR_DESIGN		3197065	1		|			
ANR	3197733	Identifier	FT_LOAD_NO_BITMAP		3197065	0					
ANR	3197734	Identifier	FT_LOAD_LINEAR_DESIGN		3197065	1					
ANR	3197735	ElseStatement	else		3197065	0					
ANR	3197736	CompoundStatement		139:13:5857:5857	3197065	0					
ANR	3197737	ExpressionStatement	load_flags |= FT_LOAD_MONOCHROME | FT_LOAD_NO_HINTING | FT_LOAD_NO_BITMAP | FT_LOAD_LINEAR_DESIGN	691:12:22527:22624	3197065	0	True				
ANR	3197738	AssignmentExpression	load_flags |= FT_LOAD_MONOCHROME | FT_LOAD_NO_HINTING | FT_LOAD_NO_BITMAP | FT_LOAD_LINEAR_DESIGN		3197065	0		|=			
ANR	3197739	Identifier	load_flags		3197065	0					
ANR	3197740	InclusiveOrExpression	FT_LOAD_MONOCHROME | FT_LOAD_NO_HINTING | FT_LOAD_NO_BITMAP | FT_LOAD_LINEAR_DESIGN		3197065	1		|			
ANR	3197741	Identifier	FT_LOAD_MONOCHROME		3197065	0					
ANR	3197742	InclusiveOrExpression	FT_LOAD_NO_HINTING | FT_LOAD_NO_BITMAP | FT_LOAD_LINEAR_DESIGN		3197065	1		|			
ANR	3197743	Identifier	FT_LOAD_NO_HINTING		3197065	0					
ANR	3197744	InclusiveOrExpression	FT_LOAD_NO_BITMAP | FT_LOAD_LINEAR_DESIGN		3197065	1		|			
ANR	3197745	Identifier	FT_LOAD_NO_BITMAP		3197065	0					
ANR	3197746	Identifier	FT_LOAD_LINEAR_DESIGN		3197065	1					
ANR	3197747	ExpressionStatement	"ft_error = FT_Load_Glyph ( ft_face , index , load_flags )"	694:8:22645:22697	3197065	2	True				
ANR	3197748	AssignmentExpression	"ft_error = FT_Load_Glyph ( ft_face , index , load_flags )"		3197065	0		=			
ANR	3197749	Identifier	ft_error		3197065	0					
ANR	3197750	CallExpression	"FT_Load_Glyph ( ft_face , index , load_flags )"		3197065	1					
ANR	3197751	Callee	FT_Load_Glyph		3197065	0					
ANR	3197752	Identifier	FT_Load_Glyph		3197065	0					
ANR	3197753	ArgumentList	ft_face		3197065	1					
ANR	3197754	Argument	ft_face		3197065	0					
ANR	3197755	Identifier	ft_face		3197065	0					
ANR	3197756	Argument	index		3197065	1					
ANR	3197757	Identifier	index		3197065	0					
ANR	3197758	Argument	load_flags		3197065	2					
ANR	3197759	Identifier	load_flags		3197065	0					
ANR	3197760	IfStatement	if ( ft_error == FT_Err_Unknown_File_Format )		3197065	3					
ANR	3197761	Condition	ft_error == FT_Err_Unknown_File_Format	695:12:22711:22748	3197065	0	True				
ANR	3197762	EqualityExpression	ft_error == FT_Err_Unknown_File_Format		3197065	0		==			
ANR	3197763	Identifier	ft_error		3197065	0					
ANR	3197764	Identifier	FT_Err_Unknown_File_Format		3197065	1					
ANR	3197765	CompoundStatement		146:52:6341:6341	3197065	1					
ANR	3197766	ReturnStatement	return index + 1 ;	696:12:22765:22781	3197065	0	True				
ANR	3197767	AdditiveExpression	index + 1		3197065	0		+			
ANR	3197768	Identifier	index		3197065	0					
ANR	3197769	PrimaryExpression	1		3197065	1					
ANR	3197770	IfStatement	if ( ft_error == FT_Err_Invalid_Argument || ft_error == FT_Err_Invalid_Reference || ft_error == FT_Err_Invalid_Glyph_Index || ( ft_error >= FT_Err_Invalid_Opcode && ft_error <= FT_Err_Too_Many_Instruction_Defs ) )		3197065	20					
ANR	3197771	Condition	ft_error == FT_Err_Invalid_Argument || ft_error == FT_Err_Invalid_Reference || ft_error == FT_Err_Invalid_Glyph_Index || ( ft_error >= FT_Err_Invalid_Opcode && ft_error <= FT_Err_Too_Many_Instruction_Defs )	700:8:22808:23047	3197065	0	True				
ANR	3197772	OrExpression	ft_error == FT_Err_Invalid_Argument || ft_error == FT_Err_Invalid_Reference || ft_error == FT_Err_Invalid_Glyph_Index || ( ft_error >= FT_Err_Invalid_Opcode && ft_error <= FT_Err_Too_Many_Instruction_Defs )		3197065	0		||			
ANR	3197773	EqualityExpression	ft_error == FT_Err_Invalid_Argument		3197065	0		==			
ANR	3197774	Identifier	ft_error		3197065	0					
ANR	3197775	Identifier	FT_Err_Invalid_Argument		3197065	1					
ANR	3197776	OrExpression	ft_error == FT_Err_Invalid_Reference || ft_error == FT_Err_Invalid_Glyph_Index || ( ft_error >= FT_Err_Invalid_Opcode && ft_error <= FT_Err_Too_Many_Instruction_Defs )		3197065	1		||			
ANR	3197777	EqualityExpression	ft_error == FT_Err_Invalid_Reference		3197065	0		==			
ANR	3197778	Identifier	ft_error		3197065	0					
ANR	3197779	Identifier	FT_Err_Invalid_Reference		3197065	1					
ANR	3197780	OrExpression	ft_error == FT_Err_Invalid_Glyph_Index || ( ft_error >= FT_Err_Invalid_Opcode && ft_error <= FT_Err_Too_Many_Instruction_Defs )		3197065	1		||			
ANR	3197781	EqualityExpression	ft_error == FT_Err_Invalid_Glyph_Index		3197065	0		==			
ANR	3197782	Identifier	ft_error		3197065	0					
ANR	3197783	Identifier	FT_Err_Invalid_Glyph_Index		3197065	1					
ANR	3197784	AndExpression	ft_error >= FT_Err_Invalid_Opcode && ft_error <= FT_Err_Too_Many_Instruction_Defs		3197065	1		&&			
ANR	3197785	RelationalExpression	ft_error >= FT_Err_Invalid_Opcode		3197065	0		>=			
ANR	3197786	Identifier	ft_error		3197065	0					
ANR	3197787	Identifier	FT_Err_Invalid_Opcode		3197065	1					
ANR	3197788	RelationalExpression	ft_error <= FT_Err_Too_Many_Instruction_Defs		3197065	1		<=			
ANR	3197789	Identifier	ft_error		3197065	0					
ANR	3197790	Identifier	FT_Err_Too_Many_Instruction_Defs		3197065	1					
ANR	3197791	CompoundStatement		155:62:6640:6640	3197065	1					
ANR	3197792	ExpressionStatement	a_fapi_font -> char_data = saved_char_data	706:8:23061:23101	3197065	0	True				
ANR	3197793	AssignmentExpression	a_fapi_font -> char_data = saved_char_data		3197065	0		=			
ANR	3197794	PtrMemberAccess	a_fapi_font -> char_data		3197065	0					
ANR	3197795	Identifier	a_fapi_font		3197065	0					
ANR	3197796	Identifier	char_data		3197065	1					
ANR	3197797	Identifier	saved_char_data		3197065	1					
ANR	3197798	ExpressionStatement	fflags = ft_face -> face_flags	709:8:23216:23244	3197065	1	True				
ANR	3197799	AssignmentExpression	fflags = ft_face -> face_flags		3197065	0		=			
ANR	3197800	Identifier	fflags		3197065	0					
ANR	3197801	PtrMemberAccess	ft_face -> face_flags		3197065	1					
ANR	3197802	Identifier	ft_face		3197065	0					
ANR	3197803	Identifier	face_flags		3197065	1					
ANR	3197804	ExpressionStatement	ft_face -> face_flags &= ~FT_FACE_FLAG_TRICKY	710:8:23254:23297	3197065	2	True				
ANR	3197805	AssignmentExpression	ft_face -> face_flags &= ~FT_FACE_FLAG_TRICKY		3197065	0		&=			
ANR	3197806	PtrMemberAccess	ft_face -> face_flags		3197065	0					
ANR	3197807	Identifier	ft_face		3197065	0					
ANR	3197808	Identifier	face_flags		3197065	1					
ANR	3197809	Identifier	~FT_FACE_FLAG_TRICKY		3197065	1					
ANR	3197810	ExpressionStatement	load_flags |= FT_LOAD_NO_HINTING	711:8:23307:23339	3197065	3	True				
ANR	3197811	AssignmentExpression	load_flags |= FT_LOAD_NO_HINTING		3197065	0		|=			
ANR	3197812	Identifier	load_flags		3197065	0					
ANR	3197813	Identifier	FT_LOAD_NO_HINTING		3197065	1					
ANR	3197814	ExpressionStatement	"ft_error = FT_Load_Glyph ( ft_face , index , load_flags )"	712:8:23349:23401	3197065	4	True				
ANR	3197815	AssignmentExpression	"ft_error = FT_Load_Glyph ( ft_face , index , load_flags )"		3197065	0		=			
ANR	3197816	Identifier	ft_error		3197065	0					
ANR	3197817	CallExpression	"FT_Load_Glyph ( ft_face , index , load_flags )"		3197065	1					
ANR	3197818	Callee	FT_Load_Glyph		3197065	0					
ANR	3197819	Identifier	FT_Load_Glyph		3197065	0					
ANR	3197820	ArgumentList	ft_face		3197065	1					
ANR	3197821	Argument	ft_face		3197065	0					
ANR	3197822	Identifier	ft_face		3197065	0					
ANR	3197823	Argument	index		3197065	1					
ANR	3197824	Identifier	index		3197065	0					
ANR	3197825	Argument	load_flags		3197065	2					
ANR	3197826	Identifier	load_flags		3197065	0					
ANR	3197827	ExpressionStatement	ft_face -> face_flags = fflags	714:8:23412:23440	3197065	5	True				
ANR	3197828	AssignmentExpression	ft_face -> face_flags = fflags		3197065	0		=			
ANR	3197829	PtrMemberAccess	ft_face -> face_flags		3197065	0					
ANR	3197830	Identifier	ft_face		3197065	0					
ANR	3197831	Identifier	face_flags		3197065	1					
ANR	3197832	Identifier	fflags		3197065	1					
ANR	3197833	IfStatement	if ( ft_error == FT_Err_Out_Of_Memory || ft_error == FT_Err_Array_Too_Large )		3197065	21					
ANR	3197834	Condition	ft_error == FT_Err_Out_Of_Memory || ft_error == FT_Err_Array_Too_Large	717:8:23457:23534	3197065	0	True				
ANR	3197835	OrExpression	ft_error == FT_Err_Out_Of_Memory || ft_error == FT_Err_Array_Too_Large		3197065	0		||			
ANR	3197836	EqualityExpression	ft_error == FT_Err_Out_Of_Memory		3197065	0		==			
ANR	3197837	Identifier	ft_error		3197065	0					
ANR	3197838	Identifier	FT_Err_Out_Of_Memory		3197065	1					
ANR	3197839	EqualityExpression	ft_error == FT_Err_Array_Too_Large		3197065	1		==			
ANR	3197840	Identifier	ft_error		3197065	0					
ANR	3197841	Identifier	FT_Err_Array_Too_Large		3197065	1					
ANR	3197842	CompoundStatement		169:47:7127:7127	3197065	1					
ANR	3197843	ReturnStatement	return ( gs_error_VMerror ) ;	719:8:23547:23572	3197065	0	True				
ANR	3197844	Identifier	gs_error_VMerror		3197065	0					
ANR	3197845	IfStatement	if ( ft_error )		3197065	22					
ANR	3197846	Condition	ft_error	723:8:23720:23727	3197065	0	True				
ANR	3197847	Identifier	ft_error		3197065	0					
ANR	3197848	CompoundStatement		175:8:7330:7350	3197065	1					
ANR	3197849	IdentifierDeclStatement	gs_string notdef_str ;	724:8:23740:23760	3197065	0	True				
ANR	3197850	IdentifierDecl	notdef_str		3197065	0					
ANR	3197851	IdentifierDeclType	gs_string		3197065	0					
ANR	3197852	Identifier	notdef_str		3197065	1					
ANR	3197853	ExpressionStatement	"notdef_str . data = ( byte * ) "".notdef"""	726:8:23779:23814	3197065	1	True				
ANR	3197854	AssignmentExpression	"notdef_str . data = ( byte * ) "".notdef"""		3197065	0		=			
ANR	3197855	MemberAccess	notdef_str . data		3197065	0					
ANR	3197856	Identifier	notdef_str		3197065	0					
ANR	3197857	Identifier	data		3197065	1					
ANR	3197858	CastExpression	"( byte * ) "".notdef"""		3197065	1					
ANR	3197859	CastTarget	byte *		3197065	0					
ANR	3197860	PrimaryExpression	""".notdef"""		3197065	1					
ANR	3197861	ExpressionStatement	notdef_str . size = 7	727:8:23824:23843	3197065	2	True				
ANR	3197862	AssignmentExpression	notdef_str . size = 7		3197065	0		=			
ANR	3197863	MemberAccess	notdef_str . size		3197065	0					
ANR	3197864	Identifier	notdef_str		3197065	0					
ANR	3197865	Identifier	size		3197065	1					
ANR	3197866	PrimaryExpression	7		3197065	1					
ANR	3197867	ExpressionStatement	a_fapi_font -> char_data = ( void * ) ( & notdef_str )	729:8:23862:23908	3197065	3	True				
ANR	3197868	AssignmentExpression	a_fapi_font -> char_data = ( void * ) ( & notdef_str )		3197065	0		=			
ANR	3197869	PtrMemberAccess	a_fapi_font -> char_data		3197065	0					
ANR	3197870	Identifier	a_fapi_font		3197065	0					
ANR	3197871	Identifier	char_data		3197065	1					
ANR	3197872	CastExpression	( void * ) ( & notdef_str )		3197065	1					
ANR	3197873	CastTarget	void *		3197065	0					
ANR	3197874	UnaryOperationExpression	& notdef_str		3197065	1					
ANR	3197875	UnaryOperator	&		3197065	0					
ANR	3197876	Identifier	notdef_str		3197065	1					
ANR	3197877	ExpressionStatement	a_fapi_font -> char_data_len = 0	730:8:23918:23948	3197065	4	True				
ANR	3197878	AssignmentExpression	a_fapi_font -> char_data_len = 0		3197065	0		=			
ANR	3197879	PtrMemberAccess	a_fapi_font -> char_data_len		3197065	0					
ANR	3197880	Identifier	a_fapi_font		3197065	0					
ANR	3197881	Identifier	char_data_len		3197065	1					
ANR	3197882	PrimaryExpression	0		3197065	1					
ANR	3197883	ExpressionStatement	fflags = ft_face -> face_flags	733:8:24063:24091	3197065	5	True				
ANR	3197884	AssignmentExpression	fflags = ft_face -> face_flags		3197065	0		=			
ANR	3197885	Identifier	fflags		3197065	0					
ANR	3197886	PtrMemberAccess	ft_face -> face_flags		3197065	1					
ANR	3197887	Identifier	ft_face		3197065	0					
ANR	3197888	Identifier	face_flags		3197065	1					
ANR	3197889	ExpressionStatement	ft_face -> face_flags &= ~FT_FACE_FLAG_TRICKY	734:8:24101:24144	3197065	6	True				
ANR	3197890	AssignmentExpression	ft_face -> face_flags &= ~FT_FACE_FLAG_TRICKY		3197065	0		&=			
ANR	3197891	PtrMemberAccess	ft_face -> face_flags		3197065	0					
ANR	3197892	Identifier	ft_face		3197065	0					
ANR	3197893	Identifier	face_flags		3197065	1					
ANR	3197894	Identifier	~FT_FACE_FLAG_TRICKY		3197065	1					
ANR	3197895	ExpressionStatement	"ft_error_fb = FT_Load_Glyph ( ft_face , 0 , load_flags )"	736:8:24155:24206	3197065	7	True				
ANR	3197896	AssignmentExpression	"ft_error_fb = FT_Load_Glyph ( ft_face , 0 , load_flags )"		3197065	0		=			
ANR	3197897	Identifier	ft_error_fb		3197065	0					
ANR	3197898	CallExpression	"FT_Load_Glyph ( ft_face , 0 , load_flags )"		3197065	1					
ANR	3197899	Callee	FT_Load_Glyph		3197065	0					
ANR	3197900	Identifier	FT_Load_Glyph		3197065	0					
ANR	3197901	ArgumentList	ft_face		3197065	1					
ANR	3197902	Argument	ft_face		3197065	0					
ANR	3197903	Identifier	ft_face		3197065	0					
ANR	3197904	Argument	0		3197065	1					
ANR	3197905	PrimaryExpression	0		3197065	0					
ANR	3197906	Argument	load_flags		3197065	2					
ANR	3197907	Identifier	load_flags		3197065	0					
ANR	3197908	ExpressionStatement	ft_face -> face_flags = fflags	738:8:24217:24245	3197065	8	True				
ANR	3197909	AssignmentExpression	ft_face -> face_flags = fflags		3197065	0		=			
ANR	3197910	PtrMemberAccess	ft_face -> face_flags		3197065	0					
ANR	3197911	Identifier	ft_face		3197065	0					
ANR	3197912	Identifier	face_flags		3197065	1					
ANR	3197913	Identifier	fflags		3197065	1					
ANR	3197914	ExpressionStatement	a_fapi_font -> char_data = saved_char_data	740:8:24256:24296	3197065	9	True				
ANR	3197915	AssignmentExpression	a_fapi_font -> char_data = saved_char_data		3197065	0		=			
ANR	3197916	PtrMemberAccess	a_fapi_font -> char_data		3197065	0					
ANR	3197917	Identifier	a_fapi_font		3197065	0					
ANR	3197918	Identifier	char_data		3197065	1					
ANR	3197919	Identifier	saved_char_data		3197065	1					
ANR	3197920	ExpressionStatement	a_fapi_font -> char_data_len = saved_char_data_len	741:8:24306:24354	3197065	10	True				
ANR	3197921	AssignmentExpression	a_fapi_font -> char_data_len = saved_char_data_len		3197065	0		=			
ANR	3197922	PtrMemberAccess	a_fapi_font -> char_data_len		3197065	0					
ANR	3197923	Identifier	a_fapi_font		3197065	0					
ANR	3197924	Identifier	char_data_len		3197065	1					
ANR	3197925	Identifier	saved_char_data_len		3197065	1					
ANR	3197926	IfStatement	if ( ( ! ft_error || ! ft_error_fb ) && ( delta . x != 0 || delta . y != 0 ) )		3197065	23					
ANR	3197927	Condition	( ! ft_error || ! ft_error_fb ) && ( delta . x != 0 || delta . y != 0 )	744:8:24371:24431	3197065	0	True				
ANR	3197928	AndExpression	( ! ft_error || ! ft_error_fb ) && ( delta . x != 0 || delta . y != 0 )		3197065	0		&&			
ANR	3197929	OrExpression	! ft_error || ! ft_error_fb		3197065	0		||			
ANR	3197930	UnaryOperationExpression	! ft_error		3197065	0					
ANR	3197931	UnaryOperator	!		3197065	0					
ANR	3197932	Identifier	ft_error		3197065	1					
ANR	3197933	UnaryOperationExpression	! ft_error_fb		3197065	1					
ANR	3197934	UnaryOperator	!		3197065	0					
ANR	3197935	Identifier	ft_error_fb		3197065	1					
ANR	3197936	OrExpression	delta . x != 0 || delta . y != 0		3197065	1		||			
ANR	3197937	EqualityExpression	delta . x != 0		3197065	0		!=			
ANR	3197938	MemberAccess	delta . x		3197065	0					
ANR	3197939	Identifier	delta		3197065	0					
ANR	3197940	Identifier	x		3197065	1					
ANR	3197941	PrimaryExpression	0		3197065	1					
ANR	3197942	EqualityExpression	delta . y != 0		3197065	1		!=			
ANR	3197943	MemberAccess	delta . y		3197065	0					
ANR	3197944	Identifier	delta		3197065	0					
ANR	3197945	Identifier	y		3197065	1					
ANR	3197946	PrimaryExpression	0		3197065	1					
ANR	3197947	CompoundStatement		195:71:8024:8024	3197065	1					
ANR	3197948	ExpressionStatement	"FT_Outline_Translate ( & ft_face -> glyph -> outline , delta . x >> 16 , delta . y >> 16 )"	745:8:24444:24522	3197065	0	True				
ANR	3197949	CallExpression	"FT_Outline_Translate ( & ft_face -> glyph -> outline , delta . x >> 16 , delta . y >> 16 )"		3197065	0					
ANR	3197950	Callee	FT_Outline_Translate		3197065	0					
ANR	3197951	Identifier	FT_Outline_Translate		3197065	0					
ANR	3197952	ArgumentList	& ft_face -> glyph -> outline		3197065	1					
ANR	3197953	Argument	& ft_face -> glyph -> outline		3197065	0					
ANR	3197954	UnaryOperationExpression	& ft_face -> glyph -> outline		3197065	0					
ANR	3197955	UnaryOperator	&		3197065	0					
ANR	3197956	PtrMemberAccess	ft_face -> glyph -> outline		3197065	1					
ANR	3197957	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3197958	Identifier	ft_face		3197065	0					
ANR	3197959	Identifier	glyph		3197065	1					
ANR	3197960	Identifier	outline		3197065	1					
ANR	3197961	Argument	delta . x >> 16		3197065	1					
ANR	3197962	ShiftExpression	delta . x >> 16		3197065	0		>>			
ANR	3197963	MemberAccess	delta . x		3197065	0					
ANR	3197964	Identifier	delta		3197065	0					
ANR	3197965	Identifier	x		3197065	1					
ANR	3197966	PrimaryExpression	16		3197065	1					
ANR	3197967	Argument	delta . y >> 16		3197065	2					
ANR	3197968	ShiftExpression	delta . y >> 16		3197065	0		>>			
ANR	3197969	MemberAccess	delta . y		3197065	0					
ANR	3197970	Identifier	delta		3197065	0					
ANR	3197971	Identifier	y		3197065	1					
ANR	3197972	PrimaryExpression	16		3197065	1					
ANR	3197973	IfStatement	if ( ( ! ft_error || ! ft_error_fb ) && a_metrics )		3197065	24					
ANR	3197974	Condition	( ! ft_error || ! ft_error_fb ) && a_metrics	751:8:24730:24769	3197065	0	True				
ANR	3197975	AndExpression	( ! ft_error || ! ft_error_fb ) && a_metrics		3197065	0		&&			
ANR	3197976	OrExpression	! ft_error || ! ft_error_fb		3197065	0		||			
ANR	3197977	UnaryOperationExpression	! ft_error		3197065	0					
ANR	3197978	UnaryOperator	!		3197065	0					
ANR	3197979	Identifier	ft_error		3197065	1					
ANR	3197980	UnaryOperationExpression	! ft_error_fb		3197065	1					
ANR	3197981	UnaryOperator	!		3197065	0					
ANR	3197982	Identifier	ft_error_fb		3197065	1					
ANR	3197983	Identifier	a_metrics		3197065	1					
ANR	3197984	CompoundStatement		205:8:8412:8424	3197065	1					
ANR	3197985	IdentifierDeclStatement	FT_Long hx ;	752:8:24782:24792	3197065	0	True				
ANR	3197986	IdentifierDecl	hx		3197065	0					
ANR	3197987	IdentifierDeclType	FT_Long		3197065	0					
ANR	3197988	Identifier	hx		3197065	1					
ANR	3197989	IdentifierDeclStatement	FT_Long hy ;	753:8:24802:24812	3197065	1	True				
ANR	3197990	IdentifierDecl	hy		3197065	0					
ANR	3197991	IdentifierDeclType	FT_Long		3197065	0					
ANR	3197992	Identifier	hy		3197065	1					
ANR	3197993	IdentifierDeclStatement	FT_Long vadv ;	754:8:24822:24834	3197065	2	True				
ANR	3197994	IdentifierDecl	vadv		3197065	0					
ANR	3197995	IdentifierDeclType	FT_Long		3197065	0					
ANR	3197996	Identifier	vadv		3197065	1					
ANR	3197997	ExpressionStatement	hx = ( FT_Long ) ( ( ( double ) ft_face -> glyph -> metrics . horiBearingX * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> width * face -> horz_res ) )	759:8:25015:25199	3197065	3	True				
ANR	3197998	AssignmentExpression	hx = ( FT_Long ) ( ( ( double ) ft_face -> glyph -> metrics . horiBearingX * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> width * face -> horz_res ) )		3197065	0		=			
ANR	3197999	Identifier	hx		3197065	0					
ANR	3198000	CastExpression	( FT_Long ) ( ( ( double ) ft_face -> glyph -> metrics . horiBearingX * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> width * face -> horz_res ) )		3197065	1					
ANR	3198001	CastTarget	FT_Long		3197065	0					
ANR	3198002	MultiplicativeExpression	( ( double ) ft_face -> glyph -> metrics . horiBearingX * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> width * face -> horz_res )		3197065	1		/			
ANR	3198003	MultiplicativeExpression	( double ) ft_face -> glyph -> metrics . horiBearingX * ft_face -> units_per_EM * 72.0		3197065	0		*			
ANR	3198004	CastExpression	( double ) ft_face -> glyph -> metrics . horiBearingX		3197065	0					
ANR	3198005	CastTarget	double		3197065	0					
ANR	3198006	MemberAccess	ft_face -> glyph -> metrics . horiBearingX		3197065	1					
ANR	3198007	PtrMemberAccess	ft_face -> glyph -> metrics		3197065	0					
ANR	3198008	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198009	Identifier	ft_face		3197065	0					
ANR	3198010	Identifier	glyph		3197065	1					
ANR	3198011	Identifier	metrics		3197065	1					
ANR	3198012	Identifier	horiBearingX		3197065	1					
ANR	3198013	MultiplicativeExpression	ft_face -> units_per_EM * 72.0		3197065	1		*			
ANR	3198014	PtrMemberAccess	ft_face -> units_per_EM		3197065	0					
ANR	3198015	Identifier	ft_face		3197065	0					
ANR	3198016	Identifier	units_per_EM		3197065	1					
ANR	3198017	PrimaryExpression	72.0		3197065	1					
ANR	3198018	MultiplicativeExpression	( double ) face -> width * face -> horz_res		3197065	1		*			
ANR	3198019	CastExpression	( double ) face -> width		3197065	0					
ANR	3198020	CastTarget	double		3197065	0					
ANR	3198021	PtrMemberAccess	face -> width		3197065	1					
ANR	3198022	Identifier	face		3197065	0					
ANR	3198023	Identifier	width		3197065	1					
ANR	3198024	PtrMemberAccess	face -> horz_res		3197065	1					
ANR	3198025	Identifier	face		3197065	0					
ANR	3198026	Identifier	horz_res		3197065	1					
ANR	3198027	ExpressionStatement	hy = ( FT_Long ) ( ( ( double ) ft_face -> glyph -> metrics . horiBearingY * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> height * face -> vert_res ) )	762:8:25209:25394	3197065	4	True				
ANR	3198028	AssignmentExpression	hy = ( FT_Long ) ( ( ( double ) ft_face -> glyph -> metrics . horiBearingY * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> height * face -> vert_res ) )		3197065	0		=			
ANR	3198029	Identifier	hy		3197065	0					
ANR	3198030	CastExpression	( FT_Long ) ( ( ( double ) ft_face -> glyph -> metrics . horiBearingY * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> height * face -> vert_res ) )		3197065	1					
ANR	3198031	CastTarget	FT_Long		3197065	0					
ANR	3198032	MultiplicativeExpression	( ( double ) ft_face -> glyph -> metrics . horiBearingY * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> height * face -> vert_res )		3197065	1		/			
ANR	3198033	MultiplicativeExpression	( double ) ft_face -> glyph -> metrics . horiBearingY * ft_face -> units_per_EM * 72.0		3197065	0		*			
ANR	3198034	CastExpression	( double ) ft_face -> glyph -> metrics . horiBearingY		3197065	0					
ANR	3198035	CastTarget	double		3197065	0					
ANR	3198036	MemberAccess	ft_face -> glyph -> metrics . horiBearingY		3197065	1					
ANR	3198037	PtrMemberAccess	ft_face -> glyph -> metrics		3197065	0					
ANR	3198038	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198039	Identifier	ft_face		3197065	0					
ANR	3198040	Identifier	glyph		3197065	1					
ANR	3198041	Identifier	metrics		3197065	1					
ANR	3198042	Identifier	horiBearingY		3197065	1					
ANR	3198043	MultiplicativeExpression	ft_face -> units_per_EM * 72.0		3197065	1		*			
ANR	3198044	PtrMemberAccess	ft_face -> units_per_EM		3197065	0					
ANR	3198045	Identifier	ft_face		3197065	0					
ANR	3198046	Identifier	units_per_EM		3197065	1					
ANR	3198047	PrimaryExpression	72.0		3197065	1					
ANR	3198048	MultiplicativeExpression	( double ) face -> height * face -> vert_res		3197065	1		*			
ANR	3198049	CastExpression	( double ) face -> height		3197065	0					
ANR	3198050	CastTarget	double		3197065	0					
ANR	3198051	PtrMemberAccess	face -> height		3197065	1					
ANR	3198052	Identifier	face		3197065	0					
ANR	3198053	Identifier	height		3197065	1					
ANR	3198054	PtrMemberAccess	face -> vert_res		3197065	1					
ANR	3198055	Identifier	face		3197065	0					
ANR	3198056	Identifier	vert_res		3197065	1					
ANR	3198057	ExpressionStatement	w = ( FT_Long ) ( ( ( double ) ft_face -> glyph -> metrics . width * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> width * face -> horz_res ) )	766:8:25405:25613	3197065	5	True				
ANR	3198058	AssignmentExpression	w = ( FT_Long ) ( ( ( double ) ft_face -> glyph -> metrics . width * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> width * face -> horz_res ) )		3197065	0		=			
ANR	3198059	Identifier	w		3197065	0					
ANR	3198060	CastExpression	( FT_Long ) ( ( ( double ) ft_face -> glyph -> metrics . width * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> width * face -> horz_res ) )		3197065	1					
ANR	3198061	CastTarget	FT_Long		3197065	0					
ANR	3198062	MultiplicativeExpression	( ( double ) ft_face -> glyph -> metrics . width * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> width * face -> horz_res )		3197065	1		/			
ANR	3198063	MultiplicativeExpression	( double ) ft_face -> glyph -> metrics . width * ft_face -> units_per_EM * 72.0		3197065	0		*			
ANR	3198064	CastExpression	( double ) ft_face -> glyph -> metrics . width		3197065	0					
ANR	3198065	CastTarget	double		3197065	0					
ANR	3198066	MemberAccess	ft_face -> glyph -> metrics . width		3197065	1					
ANR	3198067	PtrMemberAccess	ft_face -> glyph -> metrics		3197065	0					
ANR	3198068	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198069	Identifier	ft_face		3197065	0					
ANR	3198070	Identifier	glyph		3197065	1					
ANR	3198071	Identifier	metrics		3197065	1					
ANR	3198072	Identifier	width		3197065	1					
ANR	3198073	MultiplicativeExpression	ft_face -> units_per_EM * 72.0		3197065	1		*			
ANR	3198074	PtrMemberAccess	ft_face -> units_per_EM		3197065	0					
ANR	3198075	Identifier	ft_face		3197065	0					
ANR	3198076	Identifier	units_per_EM		3197065	1					
ANR	3198077	PrimaryExpression	72.0		3197065	1					
ANR	3198078	MultiplicativeExpression	( double ) face -> width * face -> horz_res		3197065	1		*			
ANR	3198079	CastExpression	( double ) face -> width		3197065	0					
ANR	3198080	CastTarget	double		3197065	0					
ANR	3198081	PtrMemberAccess	face -> width		3197065	1					
ANR	3198082	Identifier	face		3197065	0					
ANR	3198083	Identifier	width		3197065	1					
ANR	3198084	PtrMemberAccess	face -> horz_res		3197065	1					
ANR	3198085	Identifier	face		3197065	0					
ANR	3198086	Identifier	horz_res		3197065	1					
ANR	3198087	ExpressionStatement	h = ( FT_Long ) ( ( ( double ) ft_face -> glyph -> metrics . height * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> height * face -> vert_res ) )	769:8:25623:25799	3197065	6	True				
ANR	3198088	AssignmentExpression	h = ( FT_Long ) ( ( ( double ) ft_face -> glyph -> metrics . height * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> height * face -> vert_res ) )		3197065	0		=			
ANR	3198089	Identifier	h		3197065	0					
ANR	3198090	CastExpression	( FT_Long ) ( ( ( double ) ft_face -> glyph -> metrics . height * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> height * face -> vert_res ) )		3197065	1					
ANR	3198091	CastTarget	FT_Long		3197065	0					
ANR	3198092	MultiplicativeExpression	( ( double ) ft_face -> glyph -> metrics . height * ft_face -> units_per_EM * 72.0 ) / ( ( double ) face -> height * face -> vert_res )		3197065	1		/			
ANR	3198093	MultiplicativeExpression	( double ) ft_face -> glyph -> metrics . height * ft_face -> units_per_EM * 72.0		3197065	0		*			
ANR	3198094	CastExpression	( double ) ft_face -> glyph -> metrics . height		3197065	0					
ANR	3198095	CastTarget	double		3197065	0					
ANR	3198096	MemberAccess	ft_face -> glyph -> metrics . height		3197065	1					
ANR	3198097	PtrMemberAccess	ft_face -> glyph -> metrics		3197065	0					
ANR	3198098	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198099	Identifier	ft_face		3197065	0					
ANR	3198100	Identifier	glyph		3197065	1					
ANR	3198101	Identifier	metrics		3197065	1					
ANR	3198102	Identifier	height		3197065	1					
ANR	3198103	MultiplicativeExpression	ft_face -> units_per_EM * 72.0		3197065	1		*			
ANR	3198104	PtrMemberAccess	ft_face -> units_per_EM		3197065	0					
ANR	3198105	Identifier	ft_face		3197065	0					
ANR	3198106	Identifier	units_per_EM		3197065	1					
ANR	3198107	PrimaryExpression	72.0		3197065	1					
ANR	3198108	MultiplicativeExpression	( double ) face -> height * face -> vert_res		3197065	1		*			
ANR	3198109	CastExpression	( double ) face -> height		3197065	0					
ANR	3198110	CastTarget	double		3197065	0					
ANR	3198111	PtrMemberAccess	face -> height		3197065	1					
ANR	3198112	Identifier	face		3197065	0					
ANR	3198113	Identifier	height		3197065	1					
ANR	3198114	PtrMemberAccess	face -> vert_res		3197065	1					
ANR	3198115	Identifier	face		3197065	0					
ANR	3198116	Identifier	vert_res		3197065	1					
ANR	3198117	IfStatement	if ( a_fapi_font -> is_type1 || ( ( a_fapi_font -> full_font_buf || a_fapi_font -> font_file_path ) && a_fapi_font -> is_vertical && FT_HAS_VERTICAL ( ft_face ) ) )		3197065	7					
ANR	3198118	Condition	a_fapi_font -> is_type1 || ( ( a_fapi_font -> full_font_buf || a_fapi_font -> font_file_path ) && a_fapi_font -> is_vertical && FT_HAS_VERTICAL ( ft_face ) )	778:12:26220:26384	3197065	0	True				
ANR	3198119	OrExpression	a_fapi_font -> is_type1 || ( ( a_fapi_font -> full_font_buf || a_fapi_font -> font_file_path ) && a_fapi_font -> is_vertical && FT_HAS_VERTICAL ( ft_face ) )		3197065	0		||			
ANR	3198120	PtrMemberAccess	a_fapi_font -> is_type1		3197065	0					
ANR	3198121	Identifier	a_fapi_font		3197065	0					
ANR	3198122	Identifier	is_type1		3197065	1					
ANR	3198123	AndExpression	( a_fapi_font -> full_font_buf || a_fapi_font -> font_file_path ) && a_fapi_font -> is_vertical && FT_HAS_VERTICAL ( ft_face )		3197065	1		&&			
ANR	3198124	OrExpression	a_fapi_font -> full_font_buf || a_fapi_font -> font_file_path		3197065	0		||			
ANR	3198125	PtrMemberAccess	a_fapi_font -> full_font_buf		3197065	0					
ANR	3198126	Identifier	a_fapi_font		3197065	0					
ANR	3198127	Identifier	full_font_buf		3197065	1					
ANR	3198128	PtrMemberAccess	a_fapi_font -> font_file_path		3197065	1					
ANR	3198129	Identifier	a_fapi_font		3197065	0					
ANR	3198130	Identifier	font_file_path		3197065	1					
ANR	3198131	AndExpression	a_fapi_font -> is_vertical && FT_HAS_VERTICAL ( ft_face )		3197065	1		&&			
ANR	3198132	PtrMemberAccess	a_fapi_font -> is_vertical		3197065	0					
ANR	3198133	Identifier	a_fapi_font		3197065	0					
ANR	3198134	Identifier	is_vertical		3197065	1					
ANR	3198135	CallExpression	FT_HAS_VERTICAL ( ft_face )		3197065	1					
ANR	3198136	Callee	FT_HAS_VERTICAL		3197065	0					
ANR	3198137	Identifier	FT_HAS_VERTICAL		3197065	0					
ANR	3198138	ArgumentList	ft_face		3197065	1					
ANR	3198139	Argument	ft_face		3197065	0					
ANR	3198140	Identifier	ft_face		3197065	0					
ANR	3198141	CompoundStatement		231:70:9977:9977	3197065	1					
ANR	3198142	ExpressionStatement	vadv = ft_face -> glyph -> linearVertAdvance	782:12:26402:26442	3197065	0	True				
ANR	3198143	AssignmentExpression	vadv = ft_face -> glyph -> linearVertAdvance		3197065	0		=			
ANR	3198144	Identifier	vadv		3197065	0					
ANR	3198145	PtrMemberAccess	ft_face -> glyph -> linearVertAdvance		3197065	1					
ANR	3198146	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198147	Identifier	ft_face		3197065	0					
ANR	3198148	Identifier	glyph		3197065	1					
ANR	3198149	Identifier	linearVertAdvance		3197065	1					
ANR	3198150	ElseStatement	else		3197065	0					
ANR	3198151	CompoundStatement		235:13:10057:10057	3197065	0					
ANR	3198152	ExpressionStatement	vadv = 0	785:12:26481:26489	3197065	0	True				
ANR	3198153	AssignmentExpression	vadv = 0		3197065	0		=			
ANR	3198154	Identifier	vadv		3197065	0					
ANR	3198155	PrimaryExpression	0		3197065	1					
ANR	3198156	ExpressionStatement	a_metrics -> bbox_x0 = hx	788:8:26510:26533	3197065	8	True				
ANR	3198157	AssignmentExpression	a_metrics -> bbox_x0 = hx		3197065	0		=			
ANR	3198158	PtrMemberAccess	a_metrics -> bbox_x0		3197065	0					
ANR	3198159	Identifier	a_metrics		3197065	0					
ANR	3198160	Identifier	bbox_x0		3197065	1					
ANR	3198161	Identifier	hx		3197065	1					
ANR	3198162	ExpressionStatement	a_metrics -> bbox_y0 = hy - h	789:8:26543:26570	3197065	9	True				
ANR	3198163	AssignmentExpression	a_metrics -> bbox_y0 = hy - h		3197065	0		=			
ANR	3198164	PtrMemberAccess	a_metrics -> bbox_y0		3197065	0					
ANR	3198165	Identifier	a_metrics		3197065	0					
ANR	3198166	Identifier	bbox_y0		3197065	1					
ANR	3198167	AdditiveExpression	hy - h		3197065	1		-			
ANR	3198168	Identifier	hy		3197065	0					
ANR	3198169	Identifier	h		3197065	1					
ANR	3198170	ExpressionStatement	a_metrics -> bbox_x1 = a_metrics -> bbox_x0 + w	790:8:26580:26623	3197065	10	True				
ANR	3198171	AssignmentExpression	a_metrics -> bbox_x1 = a_metrics -> bbox_x0 + w		3197065	0		=			
ANR	3198172	PtrMemberAccess	a_metrics -> bbox_x1		3197065	0					
ANR	3198173	Identifier	a_metrics		3197065	0					
ANR	3198174	Identifier	bbox_x1		3197065	1					
ANR	3198175	AdditiveExpression	a_metrics -> bbox_x0 + w		3197065	1		+			
ANR	3198176	PtrMemberAccess	a_metrics -> bbox_x0		3197065	0					
ANR	3198177	Identifier	a_metrics		3197065	0					
ANR	3198178	Identifier	bbox_x0		3197065	1					
ANR	3198179	Identifier	w		3197065	1					
ANR	3198180	ExpressionStatement	a_metrics -> bbox_y1 = a_metrics -> bbox_y0 + h	791:8:26633:26676	3197065	11	True				
ANR	3198181	AssignmentExpression	a_metrics -> bbox_y1 = a_metrics -> bbox_y0 + h		3197065	0		=			
ANR	3198182	PtrMemberAccess	a_metrics -> bbox_y1		3197065	0					
ANR	3198183	Identifier	a_metrics		3197065	0					
ANR	3198184	Identifier	bbox_y1		3197065	1					
ANR	3198185	AdditiveExpression	a_metrics -> bbox_y0 + h		3197065	1		+			
ANR	3198186	PtrMemberAccess	a_metrics -> bbox_y0		3197065	0					
ANR	3198187	Identifier	a_metrics		3197065	0					
ANR	3198188	Identifier	bbox_y0		3197065	1					
ANR	3198189	Identifier	h		3197065	1					
ANR	3198190	ExpressionStatement	a_metrics -> escapement = ft_face -> glyph -> linearHoriAdvance	792:8:26686:26743	3197065	12	True				
ANR	3198191	AssignmentExpression	a_metrics -> escapement = ft_face -> glyph -> linearHoriAdvance		3197065	0		=			
ANR	3198192	PtrMemberAccess	a_metrics -> escapement		3197065	0					
ANR	3198193	Identifier	a_metrics		3197065	0					
ANR	3198194	Identifier	escapement		3197065	1					
ANR	3198195	PtrMemberAccess	ft_face -> glyph -> linearHoriAdvance		3197065	1					
ANR	3198196	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198197	Identifier	ft_face		3197065	0					
ANR	3198198	Identifier	glyph		3197065	1					
ANR	3198199	Identifier	linearHoriAdvance		3197065	1					
ANR	3198200	ExpressionStatement	a_metrics -> v_escapement = vadv	793:8:26753:26783	3197065	13	True				
ANR	3198201	AssignmentExpression	a_metrics -> v_escapement = vadv		3197065	0		=			
ANR	3198202	PtrMemberAccess	a_metrics -> v_escapement		3197065	0					
ANR	3198203	Identifier	a_metrics		3197065	0					
ANR	3198204	Identifier	v_escapement		3197065	1					
ANR	3198205	Identifier	vadv		3197065	1					
ANR	3198206	ExpressionStatement	a_metrics -> em_x = ft_face -> units_per_EM	794:8:26793:26832	3197065	14	True				
ANR	3198207	AssignmentExpression	a_metrics -> em_x = ft_face -> units_per_EM		3197065	0		=			
ANR	3198208	PtrMemberAccess	a_metrics -> em_x		3197065	0					
ANR	3198209	Identifier	a_metrics		3197065	0					
ANR	3198210	Identifier	em_x		3197065	1					
ANR	3198211	PtrMemberAccess	ft_face -> units_per_EM		3197065	1					
ANR	3198212	Identifier	ft_face		3197065	0					
ANR	3198213	Identifier	units_per_EM		3197065	1					
ANR	3198214	ExpressionStatement	a_metrics -> em_y = ft_face -> units_per_EM	795:8:26842:26881	3197065	15	True				
ANR	3198215	AssignmentExpression	a_metrics -> em_y = ft_face -> units_per_EM		3197065	0		=			
ANR	3198216	PtrMemberAccess	a_metrics -> em_y		3197065	0					
ANR	3198217	Identifier	a_metrics		3197065	0					
ANR	3198218	Identifier	em_y		3197065	1					
ANR	3198219	PtrMemberAccess	ft_face -> units_per_EM		3197065	1					
ANR	3198220	Identifier	ft_face		3197065	0					
ANR	3198221	Identifier	units_per_EM		3197065	1					
ANR	3198222	IfStatement	if ( ( ! ft_error || ! ft_error_fb ) )		3197065	25					
ANR	3198223	Condition	! ft_error || ! ft_error_fb	798:8:26898:26924	3197065	0	True				
ANR	3198224	OrExpression	! ft_error || ! ft_error_fb		3197065	0		||			
ANR	3198225	UnaryOperationExpression	! ft_error		3197065	0					
ANR	3198226	UnaryOperator	!		3197065	0					
ANR	3198227	Identifier	ft_error		3197065	1					
ANR	3198228	UnaryOperationExpression	! ft_error_fb		3197065	1					
ANR	3198229	UnaryOperator	!		3197065	0					
ANR	3198230	Identifier	ft_error_fb		3197065	1					
ANR	3198231	CompoundStatement		251:8:10528:10540	3197065	1					
ANR	3198232	IdentifierDeclStatement	FT_BBox cbox ;	800:8:26938:26950	3197065	0	True				
ANR	3198233	IdentifierDecl	cbox		3197065	0					
ANR	3198234	IdentifierDeclType	FT_BBox		3197065	0					
ANR	3198235	Identifier	cbox		3197065	1					
ANR	3198236	ExpressionStatement	"FT_Outline_Get_CBox ( & ft_face -> glyph -> outline , & cbox )"	803:8:27050:27102	3197065	1	True				
ANR	3198237	CallExpression	"FT_Outline_Get_CBox ( & ft_face -> glyph -> outline , & cbox )"		3197065	0					
ANR	3198238	Callee	FT_Outline_Get_CBox		3197065	0					
ANR	3198239	Identifier	FT_Outline_Get_CBox		3197065	0					
ANR	3198240	ArgumentList	& ft_face -> glyph -> outline		3197065	1					
ANR	3198241	Argument	& ft_face -> glyph -> outline		3197065	0					
ANR	3198242	UnaryOperationExpression	& ft_face -> glyph -> outline		3197065	0					
ANR	3198243	UnaryOperator	&		3197065	0					
ANR	3198244	PtrMemberAccess	ft_face -> glyph -> outline		3197065	1					
ANR	3198245	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198246	Identifier	ft_face		3197065	0					
ANR	3198247	Identifier	glyph		3197065	1					
ANR	3198248	Identifier	outline		3197065	1					
ANR	3198249	Argument	& cbox		3197065	1					
ANR	3198250	UnaryOperationExpression	& cbox		3197065	0					
ANR	3198251	UnaryOperator	&		3197065	0					
ANR	3198252	Identifier	cbox		3197065	1					
ANR	3198253	ExpressionStatement	cbox . xMin = ( ( cbox . xMin ) & ~63 )	809:8:27345:27376	3197065	2	True				
ANR	3198254	AssignmentExpression	cbox . xMin = ( ( cbox . xMin ) & ~63 )		3197065	0		=			
ANR	3198255	MemberAccess	cbox . xMin		3197065	0					
ANR	3198256	Identifier	cbox		3197065	0					
ANR	3198257	Identifier	xMin		3197065	1					
ANR	3198258	BitAndExpression	( cbox . xMin ) & ~63		3197065	1		&			
ANR	3198259	MemberAccess	cbox . xMin		3197065	0					
ANR	3198260	Identifier	cbox		3197065	0					
ANR	3198261	Identifier	xMin		3197065	1					
ANR	3198262	Identifier	~63		3197065	1					
ANR	3198263	ExpressionStatement	cbox . yMin = ( ( cbox . yMin ) & ~63 )	810:8:27425:27456	3197065	3	True				
ANR	3198264	AssignmentExpression	cbox . yMin = ( ( cbox . yMin ) & ~63 )		3197065	0		=			
ANR	3198265	MemberAccess	cbox . yMin		3197065	0					
ANR	3198266	Identifier	cbox		3197065	0					
ANR	3198267	Identifier	yMin		3197065	1					
ANR	3198268	BitAndExpression	( cbox . yMin ) & ~63		3197065	1		&			
ANR	3198269	MemberAccess	cbox . yMin		3197065	0					
ANR	3198270	Identifier	cbox		3197065	0					
ANR	3198271	Identifier	yMin		3197065	1					
ANR	3198272	Identifier	~63		3197065	1					
ANR	3198273	ExpressionStatement	cbox . xMax = ( ( ( cbox . xMax ) + 63 ) & ~63 )	811:8:27466:27504	3197065	4	True				
ANR	3198274	AssignmentExpression	cbox . xMax = ( ( ( cbox . xMax ) + 63 ) & ~63 )		3197065	0		=			
ANR	3198275	MemberAccess	cbox . xMax		3197065	0					
ANR	3198276	Identifier	cbox		3197065	0					
ANR	3198277	Identifier	xMax		3197065	1					
ANR	3198278	BitAndExpression	( ( cbox . xMax ) + 63 ) & ~63		3197065	1		&			
ANR	3198279	AdditiveExpression	( cbox . xMax ) + 63		3197065	0		+			
ANR	3198280	MemberAccess	cbox . xMax		3197065	0					
ANR	3198281	Identifier	cbox		3197065	0					
ANR	3198282	Identifier	xMax		3197065	1					
ANR	3198283	PrimaryExpression	63		3197065	1					
ANR	3198284	Identifier	~63		3197065	1					
ANR	3198285	ExpressionStatement	cbox . yMax = ( ( ( cbox . yMax ) + 63 ) & ~63 )	812:8:27514:27552	3197065	5	True				
ANR	3198286	AssignmentExpression	cbox . yMax = ( ( ( cbox . yMax ) + 63 ) & ~63 )		3197065	0		=			
ANR	3198287	MemberAccess	cbox . yMax		3197065	0					
ANR	3198288	Identifier	cbox		3197065	0					
ANR	3198289	Identifier	yMax		3197065	1					
ANR	3198290	BitAndExpression	( ( cbox . yMax ) + 63 ) & ~63		3197065	1		&			
ANR	3198291	AdditiveExpression	( cbox . yMax ) + 63		3197065	0		+			
ANR	3198292	MemberAccess	cbox . yMax		3197065	0					
ANR	3198293	Identifier	cbox		3197065	0					
ANR	3198294	Identifier	yMax		3197065	1					
ANR	3198295	PrimaryExpression	63		3197065	1					
ANR	3198296	Identifier	~63		3197065	1					
ANR	3198297	ExpressionStatement	w = ( FT_UInt ) ( ( cbox . xMax - cbox . xMin ) >> 6 )	814:8:27594:27638	3197065	6	True				
ANR	3198298	AssignmentExpression	w = ( FT_UInt ) ( ( cbox . xMax - cbox . xMin ) >> 6 )		3197065	0		=			
ANR	3198299	Identifier	w		3197065	0					
ANR	3198300	CastExpression	( FT_UInt ) ( ( cbox . xMax - cbox . xMin ) >> 6 )		3197065	1					
ANR	3198301	CastTarget	FT_UInt		3197065	0					
ANR	3198302	ShiftExpression	( cbox . xMax - cbox . xMin ) >> 6		3197065	1		>>			
ANR	3198303	AdditiveExpression	cbox . xMax - cbox . xMin		3197065	0		-			
ANR	3198304	MemberAccess	cbox . xMax		3197065	0					
ANR	3198305	Identifier	cbox		3197065	0					
ANR	3198306	Identifier	xMax		3197065	1					
ANR	3198307	MemberAccess	cbox . xMin		3197065	1					
ANR	3198308	Identifier	cbox		3197065	0					
ANR	3198309	Identifier	xMin		3197065	1					
ANR	3198310	PrimaryExpression	6		3197065	1					
ANR	3198311	ExpressionStatement	h = ( FT_UInt ) ( ( cbox . yMax - cbox . yMin ) >> 6 )	815:8:27648:27692	3197065	7	True				
ANR	3198312	AssignmentExpression	h = ( FT_UInt ) ( ( cbox . yMax - cbox . yMin ) >> 6 )		3197065	0		=			
ANR	3198313	Identifier	h		3197065	0					
ANR	3198314	CastExpression	( FT_UInt ) ( ( cbox . yMax - cbox . yMin ) >> 6 )		3197065	1					
ANR	3198315	CastTarget	FT_UInt		3197065	0					
ANR	3198316	ShiftExpression	( cbox . yMax - cbox . yMin ) >> 6		3197065	1		>>			
ANR	3198317	AdditiveExpression	cbox . yMax - cbox . yMin		3197065	0		-			
ANR	3198318	MemberAccess	cbox . yMax		3197065	0					
ANR	3198319	Identifier	cbox		3197065	0					
ANR	3198320	Identifier	yMax		3197065	1					
ANR	3198321	MemberAccess	cbox . yMin		3197065	1					
ANR	3198322	Identifier	cbox		3197065	0					
ANR	3198323	Identifier	yMin		3197065	1					
ANR	3198324	PrimaryExpression	6		3197065	1					
ANR	3198325	IfStatement	if ( ! a_fapi_font -> metrics_only && a_bitmap == true && ft_face -> glyph -> format != FT_GLYPH_FORMAT_BITMAP && ft_face -> glyph -> format != FT_GLYPH_FORMAT_COMPOSITE )		3197065	8					
ANR	3198326	Condition	! a_fapi_font -> metrics_only && a_bitmap == true && ft_face -> glyph -> format != FT_GLYPH_FORMAT_BITMAP && ft_face -> glyph -> format != FT_GLYPH_FORMAT_COMPOSITE	817:12:27707:27871	3197065	0	True				
ANR	3198327	AndExpression	! a_fapi_font -> metrics_only && a_bitmap == true && ft_face -> glyph -> format != FT_GLYPH_FORMAT_BITMAP && ft_face -> glyph -> format != FT_GLYPH_FORMAT_COMPOSITE		3197065	0		&&			
ANR	3198328	UnaryOperationExpression	! a_fapi_font -> metrics_only		3197065	0					
ANR	3198329	UnaryOperator	!		3197065	0					
ANR	3198330	PtrMemberAccess	a_fapi_font -> metrics_only		3197065	1					
ANR	3198331	Identifier	a_fapi_font		3197065	0					
ANR	3198332	Identifier	metrics_only		3197065	1					
ANR	3198333	AndExpression	a_bitmap == true && ft_face -> glyph -> format != FT_GLYPH_FORMAT_BITMAP && ft_face -> glyph -> format != FT_GLYPH_FORMAT_COMPOSITE		3197065	1		&&			
ANR	3198334	EqualityExpression	a_bitmap == true		3197065	0		==			
ANR	3198335	Identifier	a_bitmap		3197065	0					
ANR	3198336	Identifier	true		3197065	1					
ANR	3198337	AndExpression	ft_face -> glyph -> format != FT_GLYPH_FORMAT_BITMAP && ft_face -> glyph -> format != FT_GLYPH_FORMAT_COMPOSITE		3197065	1		&&			
ANR	3198338	EqualityExpression	ft_face -> glyph -> format != FT_GLYPH_FORMAT_BITMAP		3197065	0		!=			
ANR	3198339	PtrMemberAccess	ft_face -> glyph -> format		3197065	0					
ANR	3198340	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198341	Identifier	ft_face		3197065	0					
ANR	3198342	Identifier	glyph		3197065	1					
ANR	3198343	Identifier	format		3197065	1					
ANR	3198344	Identifier	FT_GLYPH_FORMAT_BITMAP		3197065	1					
ANR	3198345	EqualityExpression	ft_face -> glyph -> format != FT_GLYPH_FORMAT_COMPOSITE		3197065	1		!=			
ANR	3198346	PtrMemberAccess	ft_face -> glyph -> format		3197065	0					
ANR	3198347	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198348	Identifier	ft_face		3197065	0					
ANR	3198349	Identifier	glyph		3197065	1					
ANR	3198350	Identifier	format		3197065	1					
ANR	3198351	Identifier	FT_GLYPH_FORMAT_COMPOSITE		3197065	1					
ANR	3198352	CompoundStatement		269:68:11464:11464	3197065	1					
ANR	3198353	IfStatement	if ( ( bitmap_raster ( w ) * h ) < max_bitmap )		3197065	0					
ANR	3198354	Condition	( bitmap_raster ( w ) * h ) < max_bitmap	819:16:27892:27926	3197065	0	True				
ANR	3198355	RelationalExpression	( bitmap_raster ( w ) * h ) < max_bitmap		3197065	0		<			
ANR	3198356	MultiplicativeExpression	bitmap_raster ( w ) * h		3197065	0		*			
ANR	3198357	CallExpression	bitmap_raster ( w )		3197065	0					
ANR	3198358	Callee	bitmap_raster		3197065	0					
ANR	3198359	Identifier	bitmap_raster		3197065	0					
ANR	3198360	ArgumentList	w		3197065	1					
ANR	3198361	Argument	w		3197065	0					
ANR	3198362	Identifier	w		3197065	0					
ANR	3198363	Identifier	h		3197065	1					
ANR	3198364	Identifier	max_bitmap		3197065	1					
ANR	3198365	CompoundStatement		271:16:11537:11578	3197065	1					
ANR	3198366	IdentifierDeclStatement	FT_Render_Mode mode = FT_RENDER_MODE_MONO ;	820:16:27947:27988	3197065	0	True				
ANR	3198367	IdentifierDecl	mode = FT_RENDER_MODE_MONO		3197065	0					
ANR	3198368	IdentifierDeclType	FT_Render_Mode		3197065	0					
ANR	3198369	Identifier	mode		3197065	1					
ANR	3198370	AssignmentExpression	mode = FT_RENDER_MODE_MONO		3197065	2		=			
ANR	3198371	Identifier	FT_RENDER_MODE_MONO		3197065	0					
ANR	3198372	Identifier	FT_RENDER_MODE_MONO		3197065	1					
ANR	3198373	ExpressionStatement	"ft_error = FT_Render_Glyph ( ft_face -> glyph , mode )"	822:16:28007:28055	3197065	1	True				
ANR	3198374	AssignmentExpression	"ft_error = FT_Render_Glyph ( ft_face -> glyph , mode )"		3197065	0		=			
ANR	3198375	Identifier	ft_error		3197065	0					
ANR	3198376	CallExpression	"FT_Render_Glyph ( ft_face -> glyph , mode )"		3197065	1					
ANR	3198377	Callee	FT_Render_Glyph		3197065	0					
ANR	3198378	Identifier	FT_Render_Glyph		3197065	0					
ANR	3198379	ArgumentList	ft_face -> glyph		3197065	1					
ANR	3198380	Argument	ft_face -> glyph		3197065	0					
ANR	3198381	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198382	Identifier	ft_face		3197065	0					
ANR	3198383	Identifier	glyph		3197065	1					
ANR	3198384	Argument	mode		3197065	1					
ANR	3198385	Identifier	mode		3197065	0					
ANR	3198386	ElseStatement	else		3197065	0					
ANR	3198387	CompoundStatement		275:17:11678:11678	3197065	0					
ANR	3198388	ExpressionStatement	( * a_glyph ) = NULL	825:16:28106:28123	3197065	0	True				
ANR	3198389	AssignmentExpression	( * a_glyph ) = NULL		3197065	0		=			
ANR	3198390	UnaryOperationExpression	* a_glyph		3197065	0					
ANR	3198391	UnaryOperator	*		3197065	0					
ANR	3198392	Identifier	a_glyph		3197065	1					
ANR	3198393	Identifier	NULL		3197065	1					
ANR	3198394	ReturnStatement	return ( gs_error_VMerror ) ;	826:16:28141:28166	3197065	1	True				
ANR	3198395	Identifier	gs_error_VMerror		3197065	0					
ANR	3198396	IfStatement	if ( ! a_fapi_font -> metrics_only )		3197065	26					
ANR	3198397	Condition	! a_fapi_font -> metrics_only	831:8:28207:28232	3197065	0	True				
ANR	3198398	UnaryOperationExpression	! a_fapi_font -> metrics_only		3197065	0					
ANR	3198399	UnaryOperator	!		3197065	0					
ANR	3198400	PtrMemberAccess	a_fapi_font -> metrics_only		3197065	1					
ANR	3198401	Identifier	a_fapi_font		3197065	0					
ANR	3198402	Identifier	metrics_only		3197065	1					
ANR	3198403	CompoundStatement		282:36:11825:11825	3197065	1					
ANR	3198404	ExpressionStatement	ft_face -> glyph -> advance . x = ft_face -> glyph -> advance . y = 0	837:8:28576:28633	3197065	0	True				
ANR	3198405	AssignmentExpression	ft_face -> glyph -> advance . x = ft_face -> glyph -> advance . y = 0		3197065	0		=			
ANR	3198406	MemberAccess	ft_face -> glyph -> advance . x		3197065	0					
ANR	3198407	PtrMemberAccess	ft_face -> glyph -> advance		3197065	0					
ANR	3198408	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198409	Identifier	ft_face		3197065	0					
ANR	3198410	Identifier	glyph		3197065	1					
ANR	3198411	Identifier	advance		3197065	1					
ANR	3198412	Identifier	x		3197065	1					
ANR	3198413	AssignmentExpression	ft_face -> glyph -> advance . y = 0		3197065	1		=			
ANR	3198414	MemberAccess	ft_face -> glyph -> advance . y		3197065	0					
ANR	3198415	PtrMemberAccess	ft_face -> glyph -> advance		3197065	0					
ANR	3198416	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198417	Identifier	ft_face		3197065	0					
ANR	3198418	Identifier	glyph		3197065	1					
ANR	3198419	Identifier	advance		3197065	1					
ANR	3198420	Identifier	y		3197065	1					
ANR	3198421	PrimaryExpression	0		3197065	1					
ANR	3198422	IfStatement	if ( ( ! ft_error || ! ft_error_fb ) && a_glyph )		3197065	1					
ANR	3198423	Condition	( ! ft_error || ! ft_error_fb ) && a_glyph	838:12:28647:28684	3197065	0	True				
ANR	3198424	AndExpression	( ! ft_error || ! ft_error_fb ) && a_glyph		3197065	0		&&			
ANR	3198425	OrExpression	! ft_error || ! ft_error_fb		3197065	0		||			
ANR	3198426	UnaryOperationExpression	! ft_error		3197065	0					
ANR	3198427	UnaryOperator	!		3197065	0					
ANR	3198428	Identifier	ft_error		3197065	1					
ANR	3198429	UnaryOperationExpression	! ft_error_fb		3197065	1					
ANR	3198430	UnaryOperator	!		3197065	0					
ANR	3198431	Identifier	ft_error_fb		3197065	1					
ANR	3198432	Identifier	a_glyph		3197065	1					
ANR	3198433	CompoundStatement		289:52:12277:12277	3197065	1					
ANR	3198434	ExpressionStatement	"ft_error = FT_Get_Glyph ( ft_face -> glyph , a_glyph )"	839:12:28701:28749	3197065	0	True				
ANR	3198435	AssignmentExpression	"ft_error = FT_Get_Glyph ( ft_face -> glyph , a_glyph )"		3197065	0		=			
ANR	3198436	Identifier	ft_error		3197065	0					
ANR	3198437	CallExpression	"FT_Get_Glyph ( ft_face -> glyph , a_glyph )"		3197065	1					
ANR	3198438	Callee	FT_Get_Glyph		3197065	0					
ANR	3198439	Identifier	FT_Get_Glyph		3197065	0					
ANR	3198440	ArgumentList	ft_face -> glyph		3197065	1					
ANR	3198441	Argument	ft_face -> glyph		3197065	0					
ANR	3198442	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198443	Identifier	ft_face		3197065	0					
ANR	3198444	Identifier	glyph		3197065	1					
ANR	3198445	Argument	a_glyph		3197065	1					
ANR	3198446	Identifier	a_glyph		3197065	0					
ANR	3198447	ElseStatement	else		3197065	0					
ANR	3198448	CompoundStatement		292:13:12364:12364	3197065	0					
ANR	3198449	IfStatement	if ( ft_face -> glyph -> format == FT_GLYPH_FORMAT_BITMAP )		3197065	0					
ANR	3198450	Condition	ft_face -> glyph -> format == FT_GLYPH_FORMAT_BITMAP	842:16:28792:28839	3197065	0	True				
ANR	3198451	EqualityExpression	ft_face -> glyph -> format == FT_GLYPH_FORMAT_BITMAP		3197065	0		==			
ANR	3198452	PtrMemberAccess	ft_face -> glyph -> format		3197065	0					
ANR	3198453	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198454	Identifier	ft_face		3197065	0					
ANR	3198455	Identifier	glyph		3197065	1					
ANR	3198456	Identifier	format		3197065	1					
ANR	3198457	Identifier	FT_GLYPH_FORMAT_BITMAP		3197065	1					
ANR	3198458	CompoundStatement		294:16:12450:12468	3197065	1					
ANR	3198459	IdentifierDeclStatement	FT_BitmapGlyph bmg ;	843:16:28860:28878	3197065	0	True				
ANR	3198460	IdentifierDecl	bmg		3197065	0					
ANR	3198461	IdentifierDeclType	FT_BitmapGlyph		3197065	0					
ANR	3198462	Identifier	bmg		3197065	1					
ANR	3198463	ExpressionStatement	"ft_error = FT_Get_Glyph ( ft_face -> glyph , ( FT_Glyph * ) & bmg )"	845:16:28897:28956	3197065	1	True				
ANR	3198464	AssignmentExpression	"ft_error = FT_Get_Glyph ( ft_face -> glyph , ( FT_Glyph * ) & bmg )"		3197065	0		=			
ANR	3198465	Identifier	ft_error		3197065	0					
ANR	3198466	CallExpression	"FT_Get_Glyph ( ft_face -> glyph , ( FT_Glyph * ) & bmg )"		3197065	1					
ANR	3198467	Callee	FT_Get_Glyph		3197065	0					
ANR	3198468	Identifier	FT_Get_Glyph		3197065	0					
ANR	3198469	ArgumentList	ft_face -> glyph		3197065	1					
ANR	3198470	Argument	ft_face -> glyph		3197065	0					
ANR	3198471	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198472	Identifier	ft_face		3197065	0					
ANR	3198473	Identifier	glyph		3197065	1					
ANR	3198474	Argument	( FT_Glyph * ) & bmg		3197065	1					
ANR	3198475	CastExpression	( FT_Glyph * ) & bmg		3197065	0					
ANR	3198476	CastTarget	FT_Glyph *		3197065	0					
ANR	3198477	UnaryOperationExpression	& bmg		3197065	1					
ANR	3198478	UnaryOperator	&		3197065	0					
ANR	3198479	Identifier	bmg		3197065	1					
ANR	3198480	IfStatement	if ( ! ft_error )		3197065	2					
ANR	3198481	Condition	! ft_error	846:20:28978:28986	3197065	0	True				
ANR	3198482	UnaryOperationExpression	! ft_error		3197065	0					
ANR	3198483	UnaryOperator	!		3197065	0					
ANR	3198484	Identifier	ft_error		3197065	1					
ANR	3198485	CompoundStatement		297:31:12579:12579	3197065	1					
ANR	3198486	ExpressionStatement	"FT_Bitmap_Done ( s -> freetype_library , & bmg -> bitmap )"	847:20:29011:29060	3197065	0	True				
ANR	3198487	CallExpression	"FT_Bitmap_Done ( s -> freetype_library , & bmg -> bitmap )"		3197065	0					
ANR	3198488	Callee	FT_Bitmap_Done		3197065	0					
ANR	3198489	Identifier	FT_Bitmap_Done		3197065	0					
ANR	3198490	ArgumentList	s -> freetype_library		3197065	1					
ANR	3198491	Argument	s -> freetype_library		3197065	0					
ANR	3198492	PtrMemberAccess	s -> freetype_library		3197065	0					
ANR	3198493	Identifier	s		3197065	0					
ANR	3198494	Identifier	freetype_library		3197065	1					
ANR	3198495	Argument	& bmg -> bitmap		3197065	1					
ANR	3198496	UnaryOperationExpression	& bmg -> bitmap		3197065	0					
ANR	3198497	UnaryOperator	&		3197065	0					
ANR	3198498	PtrMemberAccess	bmg -> bitmap		3197065	1					
ANR	3198499	Identifier	bmg		3197065	0					
ANR	3198500	Identifier	bitmap		3197065	1					
ANR	3198501	ExpressionStatement	"FF_free ( s -> ftmemory , bmg )"	848:20:29082:29107	3197065	1	True				
ANR	3198502	CallExpression	"FF_free ( s -> ftmemory , bmg )"		3197065	0					
ANR	3198503	Callee	FF_free		3197065	0					
ANR	3198504	Identifier	FF_free		3197065	0					
ANR	3198505	ArgumentList	s -> ftmemory		3197065	1					
ANR	3198506	Argument	s -> ftmemory		3197065	0					
ANR	3198507	PtrMemberAccess	s -> ftmemory		3197065	0					
ANR	3198508	Identifier	s		3197065	0					
ANR	3198509	Identifier	ftmemory		3197065	1					
ANR	3198510	Argument	bmg		3197065	1					
ANR	3198511	Identifier	bmg		3197065	0					
ANR	3198512	ElseStatement	else		3197065	0					
ANR	3198513	CompoundStatement		303:16:12766:12785	3197065	0					
ANR	3198514	IdentifierDeclStatement	FT_OutlineGlyph olg ;	852:16:29176:29195	3197065	0	True				
ANR	3198515	IdentifierDecl	olg		3197065	0					
ANR	3198516	IdentifierDeclType	FT_OutlineGlyph		3197065	0					
ANR	3198517	Identifier	olg		3197065	1					
ANR	3198518	ExpressionStatement	"ft_error = FT_Get_Glyph ( ft_face -> glyph , ( FT_Glyph * ) & olg )"	854:16:29214:29273	3197065	1	True				
ANR	3198519	AssignmentExpression	"ft_error = FT_Get_Glyph ( ft_face -> glyph , ( FT_Glyph * ) & olg )"		3197065	0		=			
ANR	3198520	Identifier	ft_error		3197065	0					
ANR	3198521	CallExpression	"FT_Get_Glyph ( ft_face -> glyph , ( FT_Glyph * ) & olg )"		3197065	1					
ANR	3198522	Callee	FT_Get_Glyph		3197065	0					
ANR	3198523	Identifier	FT_Get_Glyph		3197065	0					
ANR	3198524	ArgumentList	ft_face -> glyph		3197065	1					
ANR	3198525	Argument	ft_face -> glyph		3197065	0					
ANR	3198526	PtrMemberAccess	ft_face -> glyph		3197065	0					
ANR	3198527	Identifier	ft_face		3197065	0					
ANR	3198528	Identifier	glyph		3197065	1					
ANR	3198529	Argument	( FT_Glyph * ) & olg		3197065	1					
ANR	3198530	CastExpression	( FT_Glyph * ) & olg		3197065	0					
ANR	3198531	CastTarget	FT_Glyph *		3197065	0					
ANR	3198532	UnaryOperationExpression	& olg		3197065	1					
ANR	3198533	UnaryOperator	&		3197065	0					
ANR	3198534	Identifier	olg		3197065	1					
ANR	3198535	IfStatement	if ( ! ft_error )		3197065	2					
ANR	3198536	Condition	! ft_error	855:20:29295:29303	3197065	0	True				
ANR	3198537	UnaryOperationExpression	! ft_error		3197065	0					
ANR	3198538	UnaryOperator	!		3197065	0					
ANR	3198539	Identifier	ft_error		3197065	1					
ANR	3198540	CompoundStatement		306:31:12896:12896	3197065	1					
ANR	3198541	ExpressionStatement	"FT_Outline_Done ( s -> freetype_library , & olg -> outline )"	856:20:29328:29379	3197065	0	True				
ANR	3198542	CallExpression	"FT_Outline_Done ( s -> freetype_library , & olg -> outline )"		3197065	0					
ANR	3198543	Callee	FT_Outline_Done		3197065	0					
ANR	3198544	Identifier	FT_Outline_Done		3197065	0					
ANR	3198545	ArgumentList	s -> freetype_library		3197065	1					
ANR	3198546	Argument	s -> freetype_library		3197065	0					
ANR	3198547	PtrMemberAccess	s -> freetype_library		3197065	0					
ANR	3198548	Identifier	s		3197065	0					
ANR	3198549	Identifier	freetype_library		3197065	1					
ANR	3198550	Argument	& olg -> outline		3197065	1					
ANR	3198551	UnaryOperationExpression	& olg -> outline		3197065	0					
ANR	3198552	UnaryOperator	&		3197065	0					
ANR	3198553	PtrMemberAccess	olg -> outline		3197065	1					
ANR	3198554	Identifier	olg		3197065	0					
ANR	3198555	Identifier	outline		3197065	1					
ANR	3198556	ExpressionStatement	"FF_free ( s -> ftmemory , olg )"	857:20:29401:29426	3197065	1	True				
ANR	3198557	CallExpression	"FF_free ( s -> ftmemory , olg )"		3197065	0					
ANR	3198558	Callee	FF_free		3197065	0					
ANR	3198559	Identifier	FF_free		3197065	0					
ANR	3198560	ArgumentList	s -> ftmemory		3197065	1					
ANR	3198561	Argument	s -> ftmemory		3197065	0					
ANR	3198562	PtrMemberAccess	s -> ftmemory		3197065	0					
ANR	3198563	Identifier	s		3197065	0					
ANR	3198564	Identifier	ftmemory		3197065	1					
ANR	3198565	Argument	olg		3197065	1					
ANR	3198566	Identifier	olg		3197065	0					
ANR	3198567	IfStatement	if ( ft_error == FT_Err_Too_Many_Hints )		3197065	27					
ANR	3198568	Condition	ft_error == FT_Err_Too_Many_Hints	863:8:29485:29517	3197065	0	True				
ANR	3198569	EqualityExpression	ft_error == FT_Err_Too_Many_Hints		3197065	0		==			
ANR	3198570	Identifier	ft_error		3197065	0					
ANR	3198571	Identifier	FT_Err_Too_Many_Hints		3197065	1					
ANR	3198572	CompoundStatement		314:43:13110:13110	3197065	1					
ANR	3198573	IfStatement	if ( gs_debug_c ( '1' ) )		3197065	0					
ANR	3198574	Condition	gs_debug_c ( '1' )	865:12:29547:29561	3197065	0	True				
ANR	3198575	CallExpression	gs_debug_c ( '1' )		3197065	0					
ANR	3198576	Callee	gs_debug_c		3197065	0					
ANR	3198577	Identifier	gs_debug_c		3197065	0					
ANR	3198578	ArgumentList	'1'		3197065	1					
ANR	3198579	Argument	'1'		3197065	0					
ANR	3198580	PrimaryExpression	'1'		3197065	0					
ANR	3198581	CompoundStatement		316:29:13154:13154	3197065	1					
ANR	3198582	Statement	ft_emprintf1	866:12:29578:29589	3197065	0	True				
ANR	3198583	Statement	(	866:24:29590:29590	3197065	1	True				
ANR	3198584	Statement	a_fapi_font	866:25:29591:29601	3197065	2	True				
ANR	3198585	Statement	->	866:36:29602:29603	3197065	3	True				
ANR	3198586	Statement	memory	866:38:29604:29609	3197065	4	True				
ANR	3198587	Statement	","	866:44:29610:29610	3197065	5	True				
ANR	3198588	Statement	"""TrueType glyph %"""	867:22:29634:29651	3197065	6	True				
ANR	3198589	Statement	PRId64	867:40:29652:29657	3197065	7	True				
ANR	3198590	Statement	""" uses more instructions than the declared maximum in the font."""	867:46:29658:29721	3197065	8	True				
ANR	3198591	Statement	","	867:110:29722:29722	3197065	9	True				
ANR	3198592	Statement	a_char_ref	868:22:29746:29755	3197065	10	True				
ANR	3198593	Statement	->	868:32:29756:29757	3197065	11	True				
ANR	3198594	Statement	char_codes	868:34:29758:29767	3197065	12	True				
ANR	3198595	Statement	[	868:44:29768:29768	3197065	13	True				
ANR	3198596	Statement	0	868:45:29769:29769	3197065	14	True				
ANR	3198597	Statement	]	868:46:29770:29770	3197065	15	True				
ANR	3198598	Statement	)	868:47:29771:29771	3197065	16	True				
ANR	3198599	ExpressionStatement		868:48:29772:29772	3197065	17	True				
ANR	3198600	IfStatement	if ( ! ft_error_fb )		3197065	18					
ANR	3198601	Condition	! ft_error_fb	870:16:29791:29802	3197065	0	True				
ANR	3198602	UnaryOperationExpression	! ft_error_fb		3197065	0					
ANR	3198603	UnaryOperator	!		3197065	0					
ANR	3198604	Identifier	ft_error_fb		3197065	1					
ANR	3198605	CompoundStatement		321:30:13395:13395	3197065	1					
ANR	3198606	ExpressionStatement	"ft_emprintf ( a_fapi_font -> memory , "" Continuing, falling back to notdef\\n\\n"" )"	871:16:29823:29923	3197065	0	True				
ANR	3198607	CallExpression	"ft_emprintf ( a_fapi_font -> memory , "" Continuing, falling back to notdef\\n\\n"" )"		3197065	0					
ANR	3198608	Callee	ft_emprintf		3197065	0					
ANR	3198609	Identifier	ft_emprintf		3197065	0					
ANR	3198610	ArgumentList	a_fapi_font -> memory		3197065	1					
ANR	3198611	Argument	a_fapi_font -> memory		3197065	0					
ANR	3198612	PtrMemberAccess	a_fapi_font -> memory		3197065	0					
ANR	3198613	Identifier	a_fapi_font		3197065	0					
ANR	3198614	Identifier	memory		3197065	1					
ANR	3198615	Argument	""" Continuing, falling back to notdef\\n\\n"""		3197065	1					
ANR	3198616	PrimaryExpression	""" Continuing, falling back to notdef\\n\\n"""		3197065	0					
ANR	3198617	IfStatement	if ( ! ft_error_fb )		3197065	1					
ANR	3198618	Condition	! ft_error_fb	876:12:29968:29979	3197065	0	True				
ANR	3198619	UnaryOperationExpression	! ft_error_fb		3197065	0					
ANR	3198620	UnaryOperator	!		3197065	0					
ANR	3198621	Identifier	ft_error_fb		3197065	1					
ANR	3198622	ExpressionStatement	ft_error = 0	877:12:29994:30006	3197065	1	True				
ANR	3198623	AssignmentExpression	ft_error = 0		3197065	0		=			
ANR	3198624	Identifier	ft_error		3197065	0					
ANR	3198625	PrimaryExpression	0		3197065	1					
ANR	3198626	IfStatement	if ( ft_error == FT_Err_Invalid_Argument )		3197065	28					
ANR	3198627	Condition	ft_error == FT_Err_Invalid_Argument	879:8:30022:30056	3197065	0	True				
ANR	3198628	EqualityExpression	ft_error == FT_Err_Invalid_Argument		3197065	0		==			
ANR	3198629	Identifier	ft_error		3197065	0					
ANR	3198630	Identifier	FT_Err_Invalid_Argument		3197065	1					
ANR	3198631	CompoundStatement		330:45:13649:13649	3197065	1					
ANR	3198632	IfStatement	if ( gs_debug_c ( '1' ) )		3197065	0					
ANR	3198633	Condition	gs_debug_c ( '1' )	881:12:30086:30100	3197065	0	True				
ANR	3198634	CallExpression	gs_debug_c ( '1' )		3197065	0					
ANR	3198635	Callee	gs_debug_c		3197065	0					
ANR	3198636	Identifier	gs_debug_c		3197065	0					
ANR	3198637	ArgumentList	'1'		3197065	1					
ANR	3198638	Argument	'1'		3197065	0					
ANR	3198639	PrimaryExpression	'1'		3197065	0					
ANR	3198640	CompoundStatement		332:29:13693:13693	3197065	1					
ANR	3198641	Statement	ft_emprintf1	882:12:30117:30128	3197065	0	True				
ANR	3198642	Statement	(	882:24:30129:30129	3197065	1	True				
ANR	3198643	Statement	a_fapi_font	882:25:30130:30140	3197065	2	True				
ANR	3198644	Statement	->	882:36:30141:30142	3197065	3	True				
ANR	3198645	Statement	memory	882:38:30143:30148	3197065	4	True				
ANR	3198646	Statement	","	882:44:30149:30149	3197065	5	True				
ANR	3198647	Statement	"""TrueType parsing error in glyph %"""	883:22:30173:30207	3197065	6	True				
ANR	3198648	Statement	PRId64	883:57:30208:30213	3197065	7	True				
ANR	3198649	Statement	""" in the font."""	883:63:30214:30228	3197065	8	True				
ANR	3198650	Statement	","	883:78:30229:30229	3197065	9	True				
ANR	3198651	Statement	a_char_ref	884:22:30253:30262	3197065	10	True				
ANR	3198652	Statement	->	884:32:30263:30264	3197065	11	True				
ANR	3198653	Statement	char_codes	884:34:30265:30274	3197065	12	True				
ANR	3198654	Statement	[	884:44:30275:30275	3197065	13	True				
ANR	3198655	Statement	0	884:45:30276:30276	3197065	14	True				
ANR	3198656	Statement	]	884:46:30277:30277	3197065	15	True				
ANR	3198657	Statement	)	884:47:30278:30278	3197065	16	True				
ANR	3198658	ExpressionStatement		884:48:30279:30279	3197065	17	True				
ANR	3198659	IfStatement	if ( ! ft_error_fb )		3197065	18					
ANR	3198660	Condition	! ft_error_fb	886:16:30298:30309	3197065	0	True				
ANR	3198661	UnaryOperationExpression	! ft_error_fb		3197065	0					
ANR	3198662	UnaryOperator	!		3197065	0					
ANR	3198663	Identifier	ft_error_fb		3197065	1					
ANR	3198664	CompoundStatement		337:30:13902:13902	3197065	1					
ANR	3198665	ExpressionStatement	"ft_emprintf ( a_fapi_font -> memory , "" Continuing, falling back to notdef\\n\\n"" )"	887:16:30330:30430	3197065	0	True				
ANR	3198666	CallExpression	"ft_emprintf ( a_fapi_font -> memory , "" Continuing, falling back to notdef\\n\\n"" )"		3197065	0					
ANR	3198667	Callee	ft_emprintf		3197065	0					
ANR	3198668	Identifier	ft_emprintf		3197065	0					
ANR	3198669	ArgumentList	a_fapi_font -> memory		3197065	1					
ANR	3198670	Argument	a_fapi_font -> memory		3197065	0					
ANR	3198671	PtrMemberAccess	a_fapi_font -> memory		3197065	0					
ANR	3198672	Identifier	a_fapi_font		3197065	0					
ANR	3198673	Identifier	memory		3197065	1					
ANR	3198674	Argument	""" Continuing, falling back to notdef\\n\\n"""		3197065	1					
ANR	3198675	PrimaryExpression	""" Continuing, falling back to notdef\\n\\n"""		3197065	0					
ANR	3198676	IfStatement	if ( ! ft_error_fb )		3197065	1					
ANR	3198677	Condition	! ft_error_fb	892:12:30475:30486	3197065	0	True				
ANR	3198678	UnaryOperationExpression	! ft_error_fb		3197065	0					
ANR	3198679	UnaryOperator	!		3197065	0					
ANR	3198680	Identifier	ft_error_fb		3197065	1					
ANR	3198681	ExpressionStatement	ft_error = 0	893:12:30501:30513	3197065	1	True				
ANR	3198682	AssignmentExpression	ft_error = 0		3197065	0		=			
ANR	3198683	Identifier	ft_error		3197065	0					
ANR	3198684	PrimaryExpression	0		3197065	1					
ANR	3198685	IfStatement	if ( ft_error == FT_Err_Too_Many_Function_Defs )		3197065	29					
ANR	3198686	Condition	ft_error == FT_Err_Too_Many_Function_Defs	895:8:30529:30569	3197065	0	True				
ANR	3198687	EqualityExpression	ft_error == FT_Err_Too_Many_Function_Defs		3197065	0		==			
ANR	3198688	Identifier	ft_error		3197065	0					
ANR	3198689	Identifier	FT_Err_Too_Many_Function_Defs		3197065	1					
ANR	3198690	CompoundStatement		346:51:14162:14162	3197065	1					
ANR	3198691	IfStatement	if ( gs_debug_c ( '1' ) )		3197065	0					
ANR	3198692	Condition	gs_debug_c ( '1' )	897:12:30599:30613	3197065	0	True				
ANR	3198693	CallExpression	gs_debug_c ( '1' )		3197065	0					
ANR	3198694	Callee	gs_debug_c		3197065	0					
ANR	3198695	Identifier	gs_debug_c		3197065	0					
ANR	3198696	ArgumentList	'1'		3197065	1					
ANR	3198697	Argument	'1'		3197065	0					
ANR	3198698	PrimaryExpression	'1'		3197065	0					
ANR	3198699	CompoundStatement		348:29:14206:14206	3197065	1					
ANR	3198700	Statement	ft_emprintf1	898:12:30630:30641	3197065	0	True				
ANR	3198701	Statement	(	898:24:30642:30642	3197065	1	True				
ANR	3198702	Statement	a_fapi_font	898:25:30643:30653	3197065	2	True				
ANR	3198703	Statement	->	898:36:30654:30655	3197065	3	True				
ANR	3198704	Statement	memory	898:38:30656:30661	3197065	4	True				
ANR	3198705	Statement	","	898:44:30662:30662	3197065	5	True				
ANR	3198706	Statement	"""TrueType instruction error in glyph %"""	899:22:30686:30724	3197065	6	True				
ANR	3198707	Statement	PRId64	899:61:30725:30730	3197065	7	True				
ANR	3198708	Statement	""" in the font."""	899:67:30731:30745	3197065	8	True				
ANR	3198709	Statement	","	899:82:30746:30746	3197065	9	True				
ANR	3198710	Statement	a_char_ref	900:22:30770:30779	3197065	10	True				
ANR	3198711	Statement	->	900:32:30780:30781	3197065	11	True				
ANR	3198712	Statement	char_codes	900:34:30782:30791	3197065	12	True				
ANR	3198713	Statement	[	900:44:30792:30792	3197065	13	True				
ANR	3198714	Statement	0	900:45:30793:30793	3197065	14	True				
ANR	3198715	Statement	]	900:46:30794:30794	3197065	15	True				
ANR	3198716	Statement	)	900:47:30795:30795	3197065	16	True				
ANR	3198717	ExpressionStatement		900:48:30796:30796	3197065	17	True				
ANR	3198718	IfStatement	if ( ! ft_error_fb )		3197065	18					
ANR	3198719	Condition	! ft_error_fb	902:16:30815:30826	3197065	0	True				
ANR	3198720	UnaryOperationExpression	! ft_error_fb		3197065	0					
ANR	3198721	UnaryOperator	!		3197065	0					
ANR	3198722	Identifier	ft_error_fb		3197065	1					
ANR	3198723	CompoundStatement		353:30:14419:14419	3197065	1					
ANR	3198724	ExpressionStatement	"ft_emprintf ( a_fapi_font -> memory , "" Continuing, falling back to notdef\\n\\n"" )"	903:16:30847:30947	3197065	0	True				
ANR	3198725	CallExpression	"ft_emprintf ( a_fapi_font -> memory , "" Continuing, falling back to notdef\\n\\n"" )"		3197065	0					
ANR	3198726	Callee	ft_emprintf		3197065	0					
ANR	3198727	Identifier	ft_emprintf		3197065	0					
ANR	3198728	ArgumentList	a_fapi_font -> memory		3197065	1					
ANR	3198729	Argument	a_fapi_font -> memory		3197065	0					
ANR	3198730	PtrMemberAccess	a_fapi_font -> memory		3197065	0					
ANR	3198731	Identifier	a_fapi_font		3197065	0					
ANR	3198732	Identifier	memory		3197065	1					
ANR	3198733	Argument	""" Continuing, falling back to notdef\\n\\n"""		3197065	1					
ANR	3198734	PrimaryExpression	""" Continuing, falling back to notdef\\n\\n"""		3197065	0					
ANR	3198735	IfStatement	if ( ! ft_error_fb )		3197065	1					
ANR	3198736	Condition	! ft_error_fb	908:12:30992:31003	3197065	0	True				
ANR	3198737	UnaryOperationExpression	! ft_error_fb		3197065	0					
ANR	3198738	UnaryOperator	!		3197065	0					
ANR	3198739	Identifier	ft_error_fb		3197065	1					
ANR	3198740	ExpressionStatement	ft_error = 0	909:12:31018:31030	3197065	1	True				
ANR	3198741	AssignmentExpression	ft_error = 0		3197065	0		=			
ANR	3198742	Identifier	ft_error		3197065	0					
ANR	3198743	PrimaryExpression	0		3197065	1					
ANR	3198744	IfStatement	if ( ft_error == FT_Err_Invalid_Glyph_Index )		3197065	30					
ANR	3198745	Condition	ft_error == FT_Err_Invalid_Glyph_Index	911:8:31046:31083	3197065	0	True				
ANR	3198746	EqualityExpression	ft_error == FT_Err_Invalid_Glyph_Index		3197065	0		==			
ANR	3198747	Identifier	ft_error		3197065	0					
ANR	3198748	Identifier	FT_Err_Invalid_Glyph_Index		3197065	1					
ANR	3198749	CompoundStatement		362:48:14676:14676	3197065	1					
ANR	3198750	IfStatement	if ( gs_debug_c ( '1' ) )		3197065	0					
ANR	3198751	Condition	gs_debug_c ( '1' )	913:12:31113:31127	3197065	0	True				
ANR	3198752	CallExpression	gs_debug_c ( '1' )		3197065	0					
ANR	3198753	Callee	gs_debug_c		3197065	0					
ANR	3198754	Identifier	gs_debug_c		3197065	0					
ANR	3198755	ArgumentList	'1'		3197065	1					
ANR	3198756	Argument	'1'		3197065	0					
ANR	3198757	PrimaryExpression	'1'		3197065	0					
ANR	3198758	CompoundStatement		364:29:14720:14720	3197065	1					
ANR	3198759	Statement	ft_emprintf1	914:12:31144:31155	3197065	0	True				
ANR	3198760	Statement	(	914:24:31156:31156	3197065	1	True				
ANR	3198761	Statement	a_fapi_font	914:25:31157:31167	3197065	2	True				
ANR	3198762	Statement	->	914:36:31168:31169	3197065	3	True				
ANR	3198763	Statement	memory	914:38:31170:31175	3197065	4	True				
ANR	3198764	Statement	","	914:44:31176:31176	3197065	5	True				
ANR	3198765	Statement	"""FreeType is unable to find the glyph %"""	915:22:31200:31239	3197065	6	True				
ANR	3198766	Statement	PRId64	915:62:31240:31245	3197065	7	True				
ANR	3198767	Statement	""" in the font."""	915:68:31246:31260	3197065	8	True				
ANR	3198768	Statement	","	915:83:31261:31261	3197065	9	True				
ANR	3198769	Statement	a_char_ref	916:22:31285:31294	3197065	10	True				
ANR	3198770	Statement	->	916:32:31295:31296	3197065	11	True				
ANR	3198771	Statement	char_codes	916:34:31297:31306	3197065	12	True				
ANR	3198772	Statement	[	916:44:31307:31307	3197065	13	True				
ANR	3198773	Statement	0	916:45:31308:31308	3197065	14	True				
ANR	3198774	Statement	]	916:46:31309:31309	3197065	15	True				
ANR	3198775	Statement	)	916:47:31310:31310	3197065	16	True				
ANR	3198776	ExpressionStatement		916:48:31311:31311	3197065	17	True				
ANR	3198777	IfStatement	if ( ! ft_error_fb )		3197065	18					
ANR	3198778	Condition	! ft_error_fb	918:16:31330:31341	3197065	0	True				
ANR	3198779	UnaryOperationExpression	! ft_error_fb		3197065	0					
ANR	3198780	UnaryOperator	!		3197065	0					
ANR	3198781	Identifier	ft_error_fb		3197065	1					
ANR	3198782	CompoundStatement		369:30:14934:14934	3197065	1					
ANR	3198783	ExpressionStatement	"ft_emprintf ( a_fapi_font -> memory , "" Continuing, falling back to notdef\\n\\n"" )"	919:16:31362:31462	3197065	0	True				
ANR	3198784	CallExpression	"ft_emprintf ( a_fapi_font -> memory , "" Continuing, falling back to notdef\\n\\n"" )"		3197065	0					
ANR	3198785	Callee	ft_emprintf		3197065	0					
ANR	3198786	Identifier	ft_emprintf		3197065	0					
ANR	3198787	ArgumentList	a_fapi_font -> memory		3197065	1					
ANR	3198788	Argument	a_fapi_font -> memory		3197065	0					
ANR	3198789	PtrMemberAccess	a_fapi_font -> memory		3197065	0					
ANR	3198790	Identifier	a_fapi_font		3197065	0					
ANR	3198791	Identifier	memory		3197065	1					
ANR	3198792	Argument	""" Continuing, falling back to notdef\\n\\n"""		3197065	1					
ANR	3198793	PrimaryExpression	""" Continuing, falling back to notdef\\n\\n"""		3197065	0					
ANR	3198794	IfStatement	if ( ! ft_error_fb )		3197065	1					
ANR	3198795	Condition	! ft_error_fb	924:12:31507:31518	3197065	0	True				
ANR	3198796	UnaryOperationExpression	! ft_error_fb		3197065	0					
ANR	3198797	UnaryOperator	!		3197065	0					
ANR	3198798	Identifier	ft_error_fb		3197065	1					
ANR	3198799	ExpressionStatement	ft_error = 0	925:12:31533:31545	3197065	1	True				
ANR	3198800	AssignmentExpression	ft_error = 0		3197065	0		=			
ANR	3198801	Identifier	ft_error		3197065	0					
ANR	3198802	PrimaryExpression	0		3197065	1					
ANR	3198803	ReturnStatement	return ft_to_gs_error ( ft_error ) ;	927:4:31557:31588	3197065	31	True				
ANR	3198804	CallExpression	ft_to_gs_error ( ft_error )		3197065	0					
ANR	3198805	Callee	ft_to_gs_error		3197065	0					
ANR	3198806	Identifier	ft_to_gs_error		3197065	0					
ANR	3198807	ArgumentList	ft_error		3197065	1					
ANR	3198808	Argument	ft_error		3197065	0					
ANR	3198809	Identifier	ft_error		3197065	0					
ANR	3198810	ReturnType	static gs_fapi_retcode		3197065	1					
ANR	3198811	Identifier	load_glyph		3197065	2					
ANR	3198812	ParameterList	"gs_fapi_server * a_server , gs_fapi_font * a_fapi_font , const gs_fapi_char_ref * a_char_ref , gs_fapi_metrics * a_metrics , FT_Glyph * a_glyph , bool a_bitmap , int max_bitmap"		3197065	3					
ANR	3198813	Parameter	gs_fapi_server * a_server	547:11:16215:16239	3197065	0	True				
ANR	3198814	ParameterType	gs_fapi_server *		3197065	0					
ANR	3198815	Identifier	a_server		3197065	1					
ANR	3198816	Parameter	gs_fapi_font * a_fapi_font	547:38:16242:16267	3197065	1	True				
ANR	3198817	ParameterType	gs_fapi_font *		3197065	0					
ANR	3198818	Identifier	a_fapi_font		3197065	1					
ANR	3198819	Parameter	const gs_fapi_char_ref * a_char_ref	548:11:16281:16315	3197065	2	True				
ANR	3198820	ParameterType	const gs_fapi_char_ref *		3197065	0					
ANR	3198821	Identifier	a_char_ref		3197065	1					
ANR	3198822	Parameter	gs_fapi_metrics * a_metrics	548:48:16318:16344	3197065	3	True				
ANR	3198823	ParameterType	gs_fapi_metrics *		3197065	0					
ANR	3198824	Identifier	a_metrics		3197065	1					
ANR	3198825	Parameter	FT_Glyph * a_glyph	549:11:16358:16375	3197065	4	True				
ANR	3198826	ParameterType	FT_Glyph *		3197065	0					
ANR	3198827	Identifier	a_glyph		3197065	1					
ANR	3198828	Parameter	bool a_bitmap	549:31:16378:16390	3197065	5	True				
ANR	3198829	ParameterType	bool		3197065	0					
ANR	3198830	Identifier	a_bitmap		3197065	1					
ANR	3198831	Parameter	int max_bitmap	549:46:16393:16406	3197065	6	True				
ANR	3198832	ParameterType	int		3197065	0					
ANR	3198833	Identifier	max_bitmap		3197065	1					
ANR	3198834	CFGEntryNode	ENTRY		3197065		True				
ANR	3198835	CFGExitNode	EXIT		3197065		True				
ANR	3198836	Symbol	* pfont1 -> data		3197065						
ANR	3198837	Symbol	max_bitmap		3197065						
ANR	3198838	Symbol	face -> ft_inc_int -> object		3197065						
ANR	3198839	Symbol	delta		3197065						
ANR	3198840	Symbol	cbox . xMin		3197065						
ANR	3198841	Symbol	* face		3197065						
ANR	3198842	Symbol	a_char_ref -> char_codes		3197065						
ANR	3198843	Symbol	s -> bitmap_glyph		3197065						
ANR	3198844	Symbol	FT_Err_Invalid_Opcode		3197065						
ANR	3198845	Symbol	face -> horz_res		3197065						
ANR	3198846	Symbol	ft_face -> glyph -> format		3197065						
ANR	3198847	Symbol	hx		3197065						
ANR	3198848	Symbol	ft_face -> glyph -> metrics . width		3197065						
ANR	3198849	Symbol	hy		3197065						
ANR	3198850	Symbol	FT_Err_Out_Of_Memory		3197065						
ANR	3198851	Symbol	FT_GLYPH_FORMAT_BITMAP		3197065						
ANR	3198852	Symbol	& olg		3197065						
ANR	3198853	Symbol	& s -> outline_glyph -> outline		3197065						
ANR	3198854	Symbol	face -> ft_inc_int -> object -> glyph_metrics_index		3197065						
ANR	3198855	Symbol	notdef_str . data		3197065						
ANR	3198856	Symbol	a_char_ref -> sb_x		3197065						
ANR	3198857	Symbol	tmp_ind		3197065						
ANR	3198858	Symbol	& amaster		3197065						
ANR	3198859	Symbol	* * face		3197065						
ANR	3198860	Symbol	cbox . xMax		3197065						
ANR	3198861	Symbol	FT_LOAD_FORCE_AUTOHINT		3197065						
ANR	3198862	Symbol	a_server		3197065						
ANR	3198863	Symbol	ft_to_gs_error		3197065						
ANR	3198864	Symbol	m -> bearing_y		3197065						
ANR	3198865	Symbol	index		3197065						
ANR	3198866	Symbol	* face -> ft_inc_int -> object		3197065						
ANR	3198867	Symbol	& ft_face -> glyph -> outline		3197065						
ANR	3198868	Symbol	olg		3197065						
ANR	3198869	Symbol	* coords		3197065						
ANR	3198870	Symbol	s -> freetype_library		3197065						
ANR	3198871	Symbol	m -> bearing_x		3197065						
ANR	3198872	Symbol	FT_Set_MM_Blend_Coordinates		3197065						
ANR	3198873	Symbol	& s -> bitmap_glyph -> bitmap		3197065						
ANR	3198874	Symbol	ft_face -> glyph -> linearVertAdvance		3197065						
ANR	3198875	Symbol	ft_face		3197065						
ANR	3198876	Symbol	a_bitmap		3197065						
ANR	3198877	Symbol	face -> ft_inc_int -> object -> metrics_type		3197065						
ANR	3198878	Symbol	load_flags		3197065						
ANR	3198879	Symbol	a_fapi_font -> is_vertical		3197065						
ANR	3198880	Symbol	ft_face -> num_charmaps		3197065						
ANR	3198881	Symbol	fflags		3197065						
ANR	3198882	Symbol	* ft_face		3197065						
ANR	3198883	Symbol	a_metrics -> em_x		3197065						
ANR	3198884	Symbol	a_metrics -> em_y		3197065						
ANR	3198885	Symbol	ft_face -> glyph -> metrics . horiBearingX		3197065						
ANR	3198886	Symbol	& delta		3197065						
ANR	3198887	Symbol	ft_face -> glyph -> metrics . horiBearingY		3197065						
ANR	3198888	Symbol	* a_metrics		3197065						
ANR	3198889	Symbol	s -> outline_glyph		3197065						
ANR	3198890	Symbol	* a_server		3197065						
ANR	3198891	Symbol	vadv		3197065						
ANR	3198892	Symbol	FT_Load_Glyph		3197065						
ANR	3198893	Symbol	pfont1 -> data . WeightVector . count		3197065						
ANR	3198894	Symbol	ft_face -> glyph -> linearHoriAdvance		3197065						
ANR	3198895	Symbol	a_metrics -> escapement		3197065						
ANR	3198896	Symbol	* a_glyph		3197065						
ANR	3198897	Symbol	FT_LOAD_NO_BITMAP		3197065						
ANR	3198898	Symbol	FT_LOAD_NO_AUTOHINT		3197065						
ANR	3198899	Symbol	pfont1 -> data . WeightVector . values		3197065						
ANR	3198900	Symbol	a_fapi_font -> full_font_buf		3197065						
ANR	3198901	Symbol	gs_no_char		3197065						
ANR	3198902	Symbol	FT_LOAD_MONOCHROME		3197065						
ANR	3198903	Symbol	coords		3197065						
ANR	3198904	Symbol	ft_face -> glyph -> advance		3197065						
ANR	3198905	Symbol	FT_Err_Invalid_Glyph_Index		3197065						
ANR	3198906	Symbol	FT_Get_Char_Index		3197065						
ANR	3198907	Symbol	a_char_ref -> sb_y		3197065						
ANR	3198908	Symbol	h		3197065						
ANR	3198909	Symbol	i		3197065						
ANR	3198910	Symbol	a_fapi_font -> font_file_path		3197065						
ANR	3198911	Symbol	cbox . yMin		3197065						
ANR	3198912	Symbol	FT_Err_Invalid_Reference		3197065						
ANR	3198913	Symbol	m		3197065						
ANR	3198914	Symbol	ft_face -> glyph -> metrics . height		3197065						
ANR	3198915	Symbol	FT_HAS_VERTICAL		3197065						
ANR	3198916	Symbol	bitmap_raster		3197065						
ANR	3198917	Symbol	FT_Get_Multi_Master		3197065						
ANR	3198918	Symbol	FT_Render_Glyph		3197065						
ANR	3198919	Symbol	face		3197065						
ANR	3198920	Symbol	s		3197065						
ANR	3198921	Symbol	a_fapi_font -> server_font_data		3197065						
ANR	3198922	Symbol	FT_MulFix		3197065						
ANR	3198923	Symbol	* a_char_ref		3197065						
ANR	3198924	Symbol	a_fapi_font -> client_font_data		3197065						
ANR	3198925	Symbol	FT_Err_Too_Many_Instruction_Defs		3197065						
ANR	3198926	Symbol	~FT_FACE_FLAG_TRICKY		3197065						
ANR	3198927	Symbol	w		3197065						
ANR	3198928	Symbol	ft_face -> units_per_EM		3197065						
ANR	3198929	Symbol	* * a_char_ref		3197065						
ANR	3198930	Symbol	cbox . yMax		3197065						
ANR	3198931	Symbol	* * pfont1		3197065						
ANR	3198932	Symbol	a_char_ref -> aw_x		3197065						
ANR	3198933	Symbol	bmg		3197065						
ANR	3198934	Symbol	a_fapi_font -> is_mtx_skipped		3197065						
ANR	3198935	Symbol	* a_char_ref -> char_codes		3197065						
ANR	3198936	Symbol	* * face -> ft_inc_int		3197065						
ANR	3198937	Symbol	face -> ft_inc_int		3197065						
ANR	3198938	Symbol	& olg -> outline		3197065						
ANR	3198939	Symbol	a_char_ref		3197065						
ANR	3198940	Symbol	a_fapi_font -> char_data		3197065						
ANR	3198941	Symbol	FT_Err_Array_Too_Large		3197065						
ANR	3198942	Symbol	ft_face -> size -> metrics . x_scale		3197065						
ANR	3198943	Symbol	ft_face -> glyph		3197065						
ANR	3198944	Symbol	& cbox		3197065						
ANR	3198945	Symbol	a_fapi_font		3197065						
ANR	3198946	Symbol	a_metrics -> bbox_y1		3197065						
ANR	3198947	Symbol	* * * face		3197065						
ANR	3198948	Symbol	a_metrics -> bbox_y0		3197065						
ANR	3198949	Symbol	FT_RENDER_MODE_MONO		3197065						
ANR	3198950	Symbol	mode		3197065						
ANR	3198951	Symbol	notdef_str		3197065						
ANR	3198952	Symbol	a_metrics		3197065						
ANR	3198953	Symbol	delta . y		3197065						
ANR	3198954	Symbol	delta . x		3197065						
ANR	3198955	Symbol	ft_face -> size -> metrics		3197065						
ANR	3198956	Symbol	FT_LOAD_NO_HINTING		3197065						
ANR	3198957	Symbol	gs_debug_c		3197065						
ANR	3198958	Symbol	* pfont1 -> data . WeightVector . values		3197065						
ANR	3198959	Symbol	& face -> ft_inc_int -> object -> glyph_metrics		3197065						
ANR	3198960	Symbol	* pfont1		3197065						
ANR	3198961	Symbol	pfont1		3197065						
ANR	3198962	Symbol	a_fapi_font -> is_cid		3197065						
ANR	3198963	Symbol	NULL		3197065						
ANR	3198964	Symbol	& bmg		3197065						
ANR	3198965	Symbol	ft_error_fb		3197065						
ANR	3198966	Symbol	cbox		3197065						
ANR	3198967	Symbol	FT_Err_Too_Many_Function_Defs		3197065						
ANR	3198968	Symbol	notdef_str . size		3197065						
ANR	3198969	Symbol	a_fapi_font -> memory		3197065						
ANR	3198970	Symbol	FT_Get_Glyph		3197065						
ANR	3198971	Symbol	a_server -> grid_fit		3197065						
ANR	3198972	Symbol	pfont1 -> data		3197065						
ANR	3198973	Symbol	a_char_ref -> client_char_code		3197065						
ANR	3198974	Symbol	FT_Err_Invalid_Argument		3197065						
ANR	3198975	Symbol	ft_face -> glyph -> advance . y		3197065						
ANR	3198976	Symbol	ft_face -> glyph -> advance . x		3197065						
ANR	3198977	Symbol	& notdef_str		3197065						
ANR	3198978	Symbol	pfont1 -> data . WeightVector		3197065						
ANR	3198979	Symbol	* ft_face -> glyph		3197065						
ANR	3198980	Symbol	true		3197065						
ANR	3198981	Symbol	& bmg -> bitmap		3197065						
ANR	3198982	Symbol	~63		3197065						
ANR	3198983	Symbol	ft_error		3197065						
ANR	3198984	Symbol	amaster		3197065						
ANR	3198985	Symbol	ft_face -> glyph -> metrics		3197065						
ANR	3198986	Symbol	FT_GLYPH_FORMAT_COMPOSITE		3197065						
ANR	3198987	Symbol	a_char_ref -> is_glyph_index		3197065						
ANR	3198988	Symbol	m -> advance		3197065						
ANR	3198989	Symbol	a_metrics -> v_escapement		3197065						
ANR	3198990	Symbol	face -> width		3197065						
ANR	3198991	Symbol	s -> ftmemory		3197065						
ANR	3198992	Symbol	* face -> ft_inc_int		3197065						
ANR	3198993	Symbol	ft_face -> size		3197065						
ANR	3198994	Symbol	gs_fapi_metrics_notdef		3197065						
ANR	3198995	Symbol	face -> height		3197065						
ANR	3198996	Symbol	ft_face -> face_flags		3197065						
ANR	3198997	Symbol	a_fapi_font -> char_data_len		3197065						
ANR	3198998	Symbol	* a_fapi_font		3197065						
ANR	3198999	Symbol	a_char_ref -> metrics_type		3197065						
ANR	3199000	Symbol	face -> ft_face		3197065						
ANR	3199001	Symbol	face -> ft_inc_int -> object -> fapi_font		3197065						
ANR	3199002	Symbol	FT_LOAD_LINEAR_DESIGN		3197065						
ANR	3199003	Symbol	a_fapi_font -> is_type1		3197065						
ANR	3199004	Symbol	* * ft_face		3197065						
ANR	3199005	Symbol	a_fapi_font -> metrics_only		3197065						
ANR	3199006	Symbol	a_metrics -> bbox_x0		3197065						
ANR	3199007	Symbol	a_metrics -> bbox_x1		3197065						
ANR	3199008	Symbol	saved_char_data		3197065						
ANR	3199009	Symbol	gs_error_VMerror		3197065						
ANR	3199010	Symbol	face -> vert_res		3197065						
ANR	3199011	Symbol	* pfont1 -> data . WeightVector		3197065						
ANR	3199012	Symbol	* i		3197065						
ANR	3199013	Symbol	FT_Err_Too_Many_Hints		3197065						
ANR	3199014	Symbol	* ft_face -> size		3197065						
ANR	3199015	Symbol	* m		3197065						
ANR	3199016	Symbol	a_glyph		3197065						
ANR	3199017	Symbol	saved_char_data_len		3197065						
ANR	3199018	Symbol	* s		3197065						
ANR	3199019	Symbol	FT_Err_Unknown_File_Format		3197065						
ANR	3199020	Symbol	& face -> ft_transform		3197065						
ANR	3199021	Function	gs_fapi_ft_ensure_open	935:0:31718:32617							
ANR	3199022	FunctionDef	"gs_fapi_ft_ensure_open (gs_fapi_server * a_server , const char * server_param , int server_param_size)"		3199021	0					
ANR	3199023	CompoundStatement		938:0:31864:32617	3199021	0					
ANR	3199024	IdentifierDeclStatement	ff_server * s = ( ff_server * ) a_server ;	939:4:31870:31907	3199021	0	True				
ANR	3199025	IdentifierDecl	* s = ( ff_server * ) a_server		3199021	0					
ANR	3199026	IdentifierDeclType	ff_server *		3199021	0					
ANR	3199027	Identifier	s		3199021	1					
ANR	3199028	AssignmentExpression	* s = ( ff_server * ) a_server		3199021	2		=			
ANR	3199029	Identifier	s		3199021	0					
ANR	3199030	CastExpression	( ff_server * ) a_server		3199021	1					
ANR	3199031	CastTarget	ff_server *		3199021	0					
ANR	3199032	Identifier	a_server		3199021	1					
ANR	3199033	IdentifierDeclStatement	FT_UInt tt_ins_version = TT_INTERPRETER_VERSION_35 ;	940:4:31913:31963	3199021	1	True				
ANR	3199034	IdentifierDecl	tt_ins_version = TT_INTERPRETER_VERSION_35		3199021	0					
ANR	3199035	IdentifierDeclType	FT_UInt		3199021	0					
ANR	3199036	Identifier	tt_ins_version		3199021	1					
ANR	3199037	AssignmentExpression	tt_ins_version = TT_INTERPRETER_VERSION_35		3199021	2		=			
ANR	3199038	Identifier	TT_INTERPRETER_VERSION_35		3199021	0					
ANR	3199039	Identifier	TT_INTERPRETER_VERSION_35		3199021	1					
ANR	3199040	IdentifierDeclStatement	FT_Error ft_error ;	941:4:31969:31986	3199021	2	True				
ANR	3199041	IdentifierDecl	ft_error		3199021	0					
ANR	3199042	IdentifierDeclType	FT_Error		3199021	0					
ANR	3199043	Identifier	ft_error		3199021	1					
ANR	3199044	IfStatement	if ( s -> freetype_library )		3199021	3					
ANR	3199045	Condition	s -> freetype_library	943:8:31997:32015	3199021	0	True				
ANR	3199046	PtrMemberAccess	s -> freetype_library		3199021	0					
ANR	3199047	Identifier	s		3199021	0					
ANR	3199048	Identifier	freetype_library		3199021	1					
ANR	3199049	ReturnStatement	return 0 ;	944:8:32026:32034	3199021	1	True				
ANR	3199050	PrimaryExpression	0		3199021	0					
ANR	3199051	ExpressionStatement	s -> ftmemory -> user = s -> mem	949:4:32196:32222	3199021	4	True				
ANR	3199052	AssignmentExpression	s -> ftmemory -> user = s -> mem		3199021	0		=			
ANR	3199053	PtrMemberAccess	s -> ftmemory -> user		3199021	0					
ANR	3199054	PtrMemberAccess	s -> ftmemory		3199021	0					
ANR	3199055	Identifier	s		3199021	0					
ANR	3199056	Identifier	ftmemory		3199021	1					
ANR	3199057	Identifier	user		3199021	1					
ANR	3199058	PtrMemberAccess	s -> mem		3199021	1					
ANR	3199059	Identifier	s		3199021	0					
ANR	3199060	Identifier	mem		3199021	1					
ANR	3199061	ExpressionStatement	s -> ftmemory -> alloc = FF_alloc	950:4:32228:32257	3199021	5	True				
ANR	3199062	AssignmentExpression	s -> ftmemory -> alloc = FF_alloc		3199021	0		=			
ANR	3199063	PtrMemberAccess	s -> ftmemory -> alloc		3199021	0					
ANR	3199064	PtrMemberAccess	s -> ftmemory		3199021	0					
ANR	3199065	Identifier	s		3199021	0					
ANR	3199066	Identifier	ftmemory		3199021	1					
ANR	3199067	Identifier	alloc		3199021	1					
ANR	3199068	Identifier	FF_alloc		3199021	1					
ANR	3199069	ExpressionStatement	s -> ftmemory -> free = FF_free	951:4:32263:32290	3199021	6	True				
ANR	3199070	AssignmentExpression	s -> ftmemory -> free = FF_free		3199021	0		=			
ANR	3199071	PtrMemberAccess	s -> ftmemory -> free		3199021	0					
ANR	3199072	PtrMemberAccess	s -> ftmemory		3199021	0					
ANR	3199073	Identifier	s		3199021	0					
ANR	3199074	Identifier	ftmemory		3199021	1					
ANR	3199075	Identifier	free		3199021	1					
ANR	3199076	Identifier	FF_free		3199021	1					
ANR	3199077	ExpressionStatement	s -> ftmemory -> realloc = FF_realloc	952:4:32296:32329	3199021	7	True				
ANR	3199078	AssignmentExpression	s -> ftmemory -> realloc = FF_realloc		3199021	0		=			
ANR	3199079	PtrMemberAccess	s -> ftmemory -> realloc		3199021	0					
ANR	3199080	PtrMemberAccess	s -> ftmemory		3199021	0					
ANR	3199081	Identifier	s		3199021	0					
ANR	3199082	Identifier	ftmemory		3199021	1					
ANR	3199083	Identifier	realloc		3199021	1					
ANR	3199084	Identifier	FF_realloc		3199021	1					
ANR	3199085	ExpressionStatement	"ft_error = FT_New_Library ( s -> ftmemory , & s -> freetype_library )"	954:4:32336:32396	3199021	8	True				
ANR	3199086	AssignmentExpression	"ft_error = FT_New_Library ( s -> ftmemory , & s -> freetype_library )"		3199021	0		=			
ANR	3199087	Identifier	ft_error		3199021	0					
ANR	3199088	CallExpression	"FT_New_Library ( s -> ftmemory , & s -> freetype_library )"		3199021	1					
ANR	3199089	Callee	FT_New_Library		3199021	0					
ANR	3199090	Identifier	FT_New_Library		3199021	0					
ANR	3199091	ArgumentList	s -> ftmemory		3199021	1					
ANR	3199092	Argument	s -> ftmemory		3199021	0					
ANR	3199093	PtrMemberAccess	s -> ftmemory		3199021	0					
ANR	3199094	Identifier	s		3199021	0					
ANR	3199095	Identifier	ftmemory		3199021	1					
ANR	3199096	Argument	& s -> freetype_library		3199021	1					
ANR	3199097	UnaryOperationExpression	& s -> freetype_library		3199021	0					
ANR	3199098	UnaryOperator	&		3199021	0					
ANR	3199099	PtrMemberAccess	s -> freetype_library		3199021	1					
ANR	3199100	Identifier	s		3199021	0					
ANR	3199101	Identifier	freetype_library		3199021	1					
ANR	3199102	IfStatement	if ( ft_error )		3199021	9					
ANR	3199103	Condition	ft_error	955:8:32406:32413	3199021	0	True				
ANR	3199104	Identifier	ft_error		3199021	0					
ANR	3199105	ReturnStatement	return ft_to_gs_error ( ft_error ) ;	956:8:32424:32455	3199021	1	True				
ANR	3199106	CallExpression	ft_to_gs_error ( ft_error )		3199021	0					
ANR	3199107	Callee	ft_to_gs_error		3199021	0					
ANR	3199108	Identifier	ft_to_gs_error		3199021	0					
ANR	3199109	ArgumentList	ft_error		3199021	1					
ANR	3199110	Argument	ft_error		3199021	0					
ANR	3199111	Identifier	ft_error		3199021	0					
ANR	3199112	ExpressionStatement	FT_Add_Default_Modules ( s -> freetype_library )	958:4:32462:32505	3199021	10	True				
ANR	3199113	CallExpression	FT_Add_Default_Modules ( s -> freetype_library )		3199021	0					
ANR	3199114	Callee	FT_Add_Default_Modules		3199021	0					
ANR	3199115	Identifier	FT_Add_Default_Modules		3199021	0					
ANR	3199116	ArgumentList	s -> freetype_library		3199021	1					
ANR	3199117	Argument	s -> freetype_library		3199021	0					
ANR	3199118	PtrMemberAccess	s -> freetype_library		3199021	0					
ANR	3199119	Identifier	s		3199021	0					
ANR	3199120	Identifier	freetype_library		3199021	1					
ANR	3199121	ExpressionStatement	"FT_Property_Set ( s -> freetype_library , ""truetype"" , ""interpreter-version"" , & tt_ins_version )"	959:4:32511:32600	3199021	11	True				
ANR	3199122	CallExpression	"FT_Property_Set ( s -> freetype_library , ""truetype"" , ""interpreter-version"" , & tt_ins_version )"		3199021	0					
ANR	3199123	Callee	FT_Property_Set		3199021	0					
ANR	3199124	Identifier	FT_Property_Set		3199021	0					
ANR	3199125	ArgumentList	s -> freetype_library		3199021	1					
ANR	3199126	Argument	s -> freetype_library		3199021	0					
ANR	3199127	PtrMemberAccess	s -> freetype_library		3199021	0					
ANR	3199128	Identifier	s		3199021	0					
ANR	3199129	Identifier	freetype_library		3199021	1					
ANR	3199130	Argument	"""truetype"""		3199021	1					
ANR	3199131	PrimaryExpression	"""truetype"""		3199021	0					
ANR	3199132	Argument	"""interpreter-version"""		3199021	2					
ANR	3199133	PrimaryExpression	"""interpreter-version"""		3199021	0					
ANR	3199134	Argument	& tt_ins_version		3199021	3					
ANR	3199135	UnaryOperationExpression	& tt_ins_version		3199021	0					
ANR	3199136	UnaryOperator	&		3199021	0					
ANR	3199137	Identifier	tt_ins_version		3199021	1					
ANR	3199138	ReturnStatement	return 0 ;	961:4:32607:32615	3199021	12	True				
ANR	3199139	PrimaryExpression	0		3199021	0					
ANR	3199140	ReturnType	static gs_fapi_retcode		3199021	1					
ANR	3199141	Identifier	gs_fapi_ft_ensure_open		3199021	2					
ANR	3199142	ParameterList	"gs_fapi_server * a_server , const char * server_param , int server_param_size"		3199021	3					
ANR	3199143	Parameter	gs_fapi_server * a_server	936:23:31764:31788	3199021	0	True				
ANR	3199144	ParameterType	gs_fapi_server *		3199021	0					
ANR	3199145	Identifier	a_server		3199021	1					
ANR	3199146	Parameter	const char * server_param	936:50:31791:31815	3199021	1	True				
ANR	3199147	ParameterType	const char *		3199021	0					
ANR	3199148	Identifier	server_param		3199021	1					
ANR	3199149	Parameter	int server_param_size	937:23:31841:31861	3199021	2	True				
ANR	3199150	ParameterType	int		3199021	0					
ANR	3199151	Identifier	server_param_size		3199021	1					
ANR	3199152	CFGEntryNode	ENTRY		3199021		True				
ANR	3199153	CFGExitNode	EXIT		3199021		True				
ANR	3199154	Symbol	tt_ins_version		3199021						
ANR	3199155	Symbol	s -> mem		3199021						
ANR	3199156	Symbol	a_server		3199021						
ANR	3199157	Symbol	ft_to_gs_error		3199021						
ANR	3199158	Symbol	FF_realloc		3199021						
ANR	3199159	Symbol	server_param		3199021						
ANR	3199160	Symbol	TT_INTERPRETER_VERSION_35		3199021						
ANR	3199161	Symbol	s -> freetype_library		3199021						
ANR	3199162	Symbol	s -> ftmemory -> realloc		3199021						
ANR	3199163	Symbol	s		3199021						
ANR	3199164	Symbol	s -> ftmemory -> alloc		3199021						
ANR	3199165	Symbol	& s -> freetype_library		3199021						
ANR	3199166	Symbol	server_param_size		3199021						
ANR	3199167	Symbol	s -> ftmemory -> user		3199021						
ANR	3199168	Symbol	* * s		3199021						
ANR	3199169	Symbol	s -> ftmemory		3199021						
ANR	3199170	Symbol	FF_free		3199021						
ANR	3199171	Symbol	* s -> ftmemory		3199021						
ANR	3199172	Symbol	FF_alloc		3199021						
ANR	3199173	Symbol	s -> ftmemory -> free		3199021						
ANR	3199174	Symbol	ft_error		3199021						
ANR	3199175	Symbol	FT_New_Library		3199021						
ANR	3199176	Symbol	* s		3199021						
ANR	3199177	Symbol	& tt_ins_version		3199021						
ANR	3199178	Function	transform_concat	965:0:32677:32835							
ANR	3199179	FunctionDef	"transform_concat (FT_Matrix * a_A , const FT_Matrix * a_B)"		3199178	0					
ANR	3199180	CompoundStatement		967:0:32746:32835	3199178	0					
ANR	3199181	IdentifierDeclStatement	FT_Matrix result = * a_B ;	968:4:32752:32775	3199178	0	True				
ANR	3199182	IdentifierDecl	result = * a_B		3199178	0					
ANR	3199183	IdentifierDeclType	FT_Matrix		3199178	0					
ANR	3199184	Identifier	result		3199178	1					
ANR	3199185	AssignmentExpression	result = * a_B		3199178	2		=			
ANR	3199186	Identifier	result		3199178	0					
ANR	3199187	UnaryOperationExpression	* a_B		3199178	1					
ANR	3199188	UnaryOperator	*		3199178	0					
ANR	3199189	Identifier	a_B		3199178	1					
ANR	3199190	ExpressionStatement	"FT_Matrix_Multiply ( a_A , & result )"	970:4:32782:32814	3199178	1	True				
ANR	3199191	CallExpression	"FT_Matrix_Multiply ( a_A , & result )"		3199178	0					
ANR	3199192	Callee	FT_Matrix_Multiply		3199178	0					
ANR	3199193	Identifier	FT_Matrix_Multiply		3199178	0					
ANR	3199194	ArgumentList	a_A		3199178	1					
ANR	3199195	Argument	a_A		3199178	0					
ANR	3199196	Identifier	a_A		3199178	0					
ANR	3199197	Argument	& result		3199178	1					
ANR	3199198	UnaryOperationExpression	& result		3199178	0					
ANR	3199199	UnaryOperator	&		3199178	0					
ANR	3199200	Identifier	result		3199178	1					
ANR	3199201	ExpressionStatement	* a_A = result	971:4:32820:32833	3199178	2	True				
ANR	3199202	AssignmentExpression	* a_A = result		3199178	0		=			
ANR	3199203	UnaryOperationExpression	* a_A		3199178	0					
ANR	3199204	UnaryOperator	*		3199178	0					
ANR	3199205	Identifier	a_A		3199178	1					
ANR	3199206	Identifier	result		3199178	1					
ANR	3199207	ReturnType	static void		3199178	1					
ANR	3199208	Identifier	transform_concat		3199178	2					
ANR	3199209	ParameterList	"FT_Matrix * a_A , const FT_Matrix * a_B"		3199178	3					
ANR	3199210	Parameter	FT_Matrix * a_A	966:17:32706:32720	3199178	0	True				
ANR	3199211	ParameterType	FT_Matrix *		3199178	0					
ANR	3199212	Identifier	a_A		3199178	1					
ANR	3199213	Parameter	const FT_Matrix * a_B	966:34:32723:32743	3199178	1	True				
ANR	3199214	ParameterType	const FT_Matrix *		3199178	0					
ANR	3199215	Identifier	a_B		3199178	1					
ANR	3199216	CFGEntryNode	ENTRY		3199178		True				
ANR	3199217	CFGExitNode	EXIT		3199178		True				
ANR	3199218	Symbol	result		3199178						
ANR	3199219	Symbol	* a_B		3199178						
ANR	3199220	Symbol	a_A		3199178						
ANR	3199221	Symbol	* a_A		3199178						
ANR	3199222	Symbol	a_B		3199178						
ANR	3199223	Symbol	& result		3199178						
ANR	3199224	Function	make_rotation	975:0:32906:33427							
ANR	3199225	FunctionDef	"make_rotation (FT_Matrix * a_transform , const FT_Vector * a_vector)"		3199224	0					
ANR	3199226	CompoundStatement		977:0:32985:33427	3199224	0					
ANR	3199227	IdentifierDeclStatement	"FT_Fixed length , cos , sin ;"	978:4:32991:33016	3199224	0	True				
ANR	3199228	IdentifierDecl	length		3199224	0					
ANR	3199229	IdentifierDeclType	FT_Fixed		3199224	0					
ANR	3199230	Identifier	length		3199224	1					
ANR	3199231	IdentifierDecl	cos		3199224	1					
ANR	3199232	IdentifierDeclType	FT_Fixed		3199224	0					
ANR	3199233	Identifier	cos		3199224	1					
ANR	3199234	IdentifierDecl	sin		3199224	2					
ANR	3199235	IdentifierDeclType	FT_Fixed		3199224	0					
ANR	3199236	Identifier	sin		3199224	1					
ANR	3199237	IfStatement	if ( a_vector -> x >= 0 && a_vector -> y == 0 )		3199224	1					
ANR	3199238	Condition	a_vector -> x >= 0 && a_vector -> y == 0	980:8:33027:33062	3199224	0	True				
ANR	3199239	AndExpression	a_vector -> x >= 0 && a_vector -> y == 0		3199224	0		&&			
ANR	3199240	RelationalExpression	a_vector -> x >= 0		3199224	0		>=			
ANR	3199241	PtrMemberAccess	a_vector -> x		3199224	0					
ANR	3199242	Identifier	a_vector		3199224	0					
ANR	3199243	Identifier	x		3199224	1					
ANR	3199244	PrimaryExpression	0		3199224	1					
ANR	3199245	EqualityExpression	a_vector -> y == 0		3199224	1		==			
ANR	3199246	PtrMemberAccess	a_vector -> y		3199224	0					
ANR	3199247	Identifier	a_vector		3199224	0					
ANR	3199248	Identifier	y		3199224	1					
ANR	3199249	PrimaryExpression	0		3199224	1					
ANR	3199250	CompoundStatement		4:46:79:79	3199224	1					
ANR	3199251	ExpressionStatement	a_transform -> xx = a_transform -> yy = 65536	981:8:33075:33116	3199224	0	True				
ANR	3199252	AssignmentExpression	a_transform -> xx = a_transform -> yy = 65536		3199224	0		=			
ANR	3199253	PtrMemberAccess	a_transform -> xx		3199224	0					
ANR	3199254	Identifier	a_transform		3199224	0					
ANR	3199255	Identifier	xx		3199224	1					
ANR	3199256	AssignmentExpression	a_transform -> yy = 65536		3199224	1		=			
ANR	3199257	PtrMemberAccess	a_transform -> yy		3199224	0					
ANR	3199258	Identifier	a_transform		3199224	0					
ANR	3199259	Identifier	yy		3199224	1					
ANR	3199260	PrimaryExpression	65536		3199224	1					
ANR	3199261	ExpressionStatement	a_transform -> xy = a_transform -> yx = 0	982:8:33126:33163	3199224	1	True				
ANR	3199262	AssignmentExpression	a_transform -> xy = a_transform -> yx = 0		3199224	0		=			
ANR	3199263	PtrMemberAccess	a_transform -> xy		3199224	0					
ANR	3199264	Identifier	a_transform		3199224	0					
ANR	3199265	Identifier	xy		3199224	1					
ANR	3199266	AssignmentExpression	a_transform -> yx = 0		3199224	1		=			
ANR	3199267	PtrMemberAccess	a_transform -> yx		3199224	0					
ANR	3199268	Identifier	a_transform		3199224	0					
ANR	3199269	Identifier	yx		3199224	1					
ANR	3199270	PrimaryExpression	0		3199224	1					
ANR	3199271	ReturnStatement	return ;	983:8:33173:33179	3199224	2	True				
ANR	3199272	ExpressionStatement	length = FT_Vector_Length ( ( FT_Vector * ) a_vector )	986:4:33192:33241	3199224	2	True				
ANR	3199273	AssignmentExpression	length = FT_Vector_Length ( ( FT_Vector * ) a_vector )		3199224	0		=			
ANR	3199274	Identifier	length		3199224	0					
ANR	3199275	CallExpression	FT_Vector_Length ( ( FT_Vector * ) a_vector )		3199224	1					
ANR	3199276	Callee	FT_Vector_Length		3199224	0					
ANR	3199277	Identifier	FT_Vector_Length		3199224	0					
ANR	3199278	ArgumentList	( FT_Vector * ) a_vector		3199224	1					
ANR	3199279	Argument	( FT_Vector * ) a_vector		3199224	0					
ANR	3199280	CastExpression	( FT_Vector * ) a_vector		3199224	0					
ANR	3199281	CastTarget	FT_Vector *		3199224	0					
ANR	3199282	Identifier	a_vector		3199224	1					
ANR	3199283	ExpressionStatement	"cos = FT_DivFix ( a_vector -> x , length )"	987:4:33247:33283	3199224	3	True				
ANR	3199284	AssignmentExpression	"cos = FT_DivFix ( a_vector -> x , length )"		3199224	0		=			
ANR	3199285	Identifier	cos		3199224	0					
ANR	3199286	CallExpression	"FT_DivFix ( a_vector -> x , length )"		3199224	1					
ANR	3199287	Callee	FT_DivFix		3199224	0					
ANR	3199288	Identifier	FT_DivFix		3199224	0					
ANR	3199289	ArgumentList	a_vector -> x		3199224	1					
ANR	3199290	Argument	a_vector -> x		3199224	0					
ANR	3199291	PtrMemberAccess	a_vector -> x		3199224	0					
ANR	3199292	Identifier	a_vector		3199224	0					
ANR	3199293	Identifier	x		3199224	1					
ANR	3199294	Argument	length		3199224	1					
ANR	3199295	Identifier	length		3199224	0					
ANR	3199296	ExpressionStatement	"sin = FT_DivFix ( a_vector -> y , length )"	988:4:33289:33325	3199224	4	True				
ANR	3199297	AssignmentExpression	"sin = FT_DivFix ( a_vector -> y , length )"		3199224	0		=			
ANR	3199298	Identifier	sin		3199224	0					
ANR	3199299	CallExpression	"FT_DivFix ( a_vector -> y , length )"		3199224	1					
ANR	3199300	Callee	FT_DivFix		3199224	0					
ANR	3199301	Identifier	FT_DivFix		3199224	0					
ANR	3199302	ArgumentList	a_vector -> y		3199224	1					
ANR	3199303	Argument	a_vector -> y		3199224	0					
ANR	3199304	PtrMemberAccess	a_vector -> y		3199224	0					
ANR	3199305	Identifier	a_vector		3199224	0					
ANR	3199306	Identifier	y		3199224	1					
ANR	3199307	Argument	length		3199224	1					
ANR	3199308	Identifier	length		3199224	0					
ANR	3199309	ExpressionStatement	a_transform -> xx = a_transform -> yy = cos	989:4:33331:33370	3199224	5	True				
ANR	3199310	AssignmentExpression	a_transform -> xx = a_transform -> yy = cos		3199224	0		=			
ANR	3199311	PtrMemberAccess	a_transform -> xx		3199224	0					
ANR	3199312	Identifier	a_transform		3199224	0					
ANR	3199313	Identifier	xx		3199224	1					
ANR	3199314	AssignmentExpression	a_transform -> yy = cos		3199224	1		=			
ANR	3199315	PtrMemberAccess	a_transform -> yy		3199224	0					
ANR	3199316	Identifier	a_transform		3199224	0					
ANR	3199317	Identifier	yy		3199224	1					
ANR	3199318	Identifier	cos		3199224	1					
ANR	3199319	ExpressionStatement	a_transform -> xy = - sin	990:4:33376:33398	3199224	6	True				
ANR	3199320	AssignmentExpression	a_transform -> xy = - sin		3199224	0		=			
ANR	3199321	PtrMemberAccess	a_transform -> xy		3199224	0					
ANR	3199322	Identifier	a_transform		3199224	0					
ANR	3199323	Identifier	xy		3199224	1					
ANR	3199324	UnaryOperationExpression	- sin		3199224	1					
ANR	3199325	UnaryOperator	-		3199224	0					
ANR	3199326	Identifier	sin		3199224	1					
ANR	3199327	ExpressionStatement	a_transform -> yx = sin	991:4:33404:33425	3199224	7	True				
ANR	3199328	AssignmentExpression	a_transform -> yx = sin		3199224	0		=			
ANR	3199329	PtrMemberAccess	a_transform -> yx		3199224	0					
ANR	3199330	Identifier	a_transform		3199224	0					
ANR	3199331	Identifier	yx		3199224	1					
ANR	3199332	Identifier	sin		3199224	1					
ANR	3199333	ReturnType	static void		3199224	1					
ANR	3199334	Identifier	make_rotation		3199224	2					
ANR	3199335	ParameterList	"FT_Matrix * a_transform , const FT_Vector * a_vector"		3199224	3					
ANR	3199336	Parameter	FT_Matrix * a_transform	976:14:32932:32954	3199224	0	True				
ANR	3199337	ParameterType	FT_Matrix *		3199224	0					
ANR	3199338	Identifier	a_transform		3199224	1					
ANR	3199339	Parameter	const FT_Vector * a_vector	976:39:32957:32982	3199224	1	True				
ANR	3199340	ParameterType	const FT_Vector *		3199224	0					
ANR	3199341	Identifier	a_vector		3199224	1					
ANR	3199342	CFGEntryNode	ENTRY		3199224		True				
ANR	3199343	CFGExitNode	EXIT		3199224		True				
ANR	3199344	Symbol	a_vector -> y		3199224						
ANR	3199345	Symbol	a_vector -> x		3199224						
ANR	3199346	Symbol	* a_vector		3199224						
ANR	3199347	Symbol	* a_transform		3199224						
ANR	3199348	Symbol	FT_DivFix		3199224						
ANR	3199349	Symbol	cos		3199224						
ANR	3199350	Symbol	FT_Vector_Length		3199224						
ANR	3199351	Symbol	length		3199224						
ANR	3199352	Symbol	a_transform		3199224						
ANR	3199353	Symbol	a_transform -> xy		3199224						
ANR	3199354	Symbol	a_transform -> xx		3199224						
ANR	3199355	Symbol	a_transform -> yy		3199224						
ANR	3199356	Symbol	a_transform -> yx		3199224						
ANR	3199357	Symbol	sin		3199224						
ANR	3199358	Symbol	a_vector		3199224						
ANR	3199359	Function	transform_decompose	998:0:33612:37669							
ANR	3199360	FunctionDef	"transform_decompose (FT_Matrix * a_transform , FT_UInt * xresp , FT_UInt * yresp , FT_Fixed * a_x_scale , FT_Fixed * a_y_scale)"		3199359	0					
ANR	3199361	CompoundStatement		1001:0:33767:37669	3199359	0					
ANR	3199362	IdentifierDeclStatement	"double scalex , scaley , fact = 1.0 ;"	1002:4:33773:33806	3199359	0	True				
ANR	3199363	IdentifierDecl	scalex		3199359	0					
ANR	3199364	IdentifierDeclType	double		3199359	0					
ANR	3199365	Identifier	scalex		3199359	1					
ANR	3199366	IdentifierDecl	scaley		3199359	1					
ANR	3199367	IdentifierDeclType	double		3199359	0					
ANR	3199368	Identifier	scaley		3199359	1					
ANR	3199369	IdentifierDecl	fact = 1.0		3199359	2					
ANR	3199370	IdentifierDeclType	double		3199359	0					
ANR	3199371	Identifier	fact		3199359	1					
ANR	3199372	AssignmentExpression	fact = 1.0		3199359	2		=			
ANR	3199373	Identifier	fact		3199359	0					
ANR	3199374	PrimaryExpression	1.0		3199359	1					
ANR	3199375	IdentifierDeclStatement	"double factx = 1.0 , facty = 1.0 ;"	1003:4:33812:33843	3199359	1	True				
ANR	3199376	IdentifierDecl	factx = 1.0		3199359	0					
ANR	3199377	IdentifierDeclType	double		3199359	0					
ANR	3199378	Identifier	factx		3199359	1					
ANR	3199379	AssignmentExpression	factx = 1.0		3199359	2		=			
ANR	3199380	Identifier	factx		3199359	0					
ANR	3199381	PrimaryExpression	1.0		3199359	1					
ANR	3199382	IdentifierDecl	facty = 1.0		3199359	1					
ANR	3199383	IdentifierDeclType	double		3199359	0					
ANR	3199384	Identifier	facty		3199359	1					
ANR	3199385	AssignmentExpression	facty = 1.0		3199359	2		=			
ANR	3199386	Identifier	facty		3199359	0					
ANR	3199387	PrimaryExpression	1.0		3199359	1					
ANR	3199388	IdentifierDeclStatement	FT_Matrix ftscale_mat ;	1004:4:33849:33870	3199359	2	True				
ANR	3199389	IdentifierDecl	ftscale_mat		3199359	0					
ANR	3199390	IdentifierDeclType	FT_Matrix		3199359	0					
ANR	3199391	Identifier	ftscale_mat		3199359	1					
ANR	3199392	IdentifierDeclStatement	FT_UInt xres ;	1005:4:33876:33888	3199359	3	True				
ANR	3199393	IdentifierDecl	xres		3199359	0					
ANR	3199394	IdentifierDeclType	FT_UInt		3199359	0					
ANR	3199395	Identifier	xres		3199359	1					
ANR	3199396	IdentifierDeclStatement	FT_UInt yres ;	1006:4:33894:33906	3199359	4	True				
ANR	3199397	IdentifierDecl	yres		3199359	0					
ANR	3199398	IdentifierDeclType	FT_UInt		3199359	0					
ANR	3199399	Identifier	yres		3199359	1					
ANR	3199400	ExpressionStatement	"scalex = hypot ( ( double ) a_transform -> xx , ( double ) a_transform -> xy )"	1008:4:33913:33977	3199359	5	True				
ANR	3199401	AssignmentExpression	"scalex = hypot ( ( double ) a_transform -> xx , ( double ) a_transform -> xy )"		3199359	0		=			
ANR	3199402	Identifier	scalex		3199359	0					
ANR	3199403	CallExpression	"hypot ( ( double ) a_transform -> xx , ( double ) a_transform -> xy )"		3199359	1					
ANR	3199404	Callee	hypot		3199359	0					
ANR	3199405	Identifier	hypot		3199359	0					
ANR	3199406	ArgumentList	( double ) a_transform -> xx		3199359	1					
ANR	3199407	Argument	( double ) a_transform -> xx		3199359	0					
ANR	3199408	CastExpression	( double ) a_transform -> xx		3199359	0					
ANR	3199409	CastTarget	double		3199359	0					
ANR	3199410	PtrMemberAccess	a_transform -> xx		3199359	1					
ANR	3199411	Identifier	a_transform		3199359	0					
ANR	3199412	Identifier	xx		3199359	1					
ANR	3199413	Argument	( double ) a_transform -> xy		3199359	1					
ANR	3199414	CastExpression	( double ) a_transform -> xy		3199359	0					
ANR	3199415	CastTarget	double		3199359	0					
ANR	3199416	PtrMemberAccess	a_transform -> xy		3199359	1					
ANR	3199417	Identifier	a_transform		3199359	0					
ANR	3199418	Identifier	xy		3199359	1					
ANR	3199419	ExpressionStatement	"scaley = hypot ( ( double ) a_transform -> yx , ( double ) a_transform -> yy )"	1009:4:33983:34047	3199359	6	True				
ANR	3199420	AssignmentExpression	"scaley = hypot ( ( double ) a_transform -> yx , ( double ) a_transform -> yy )"		3199359	0		=			
ANR	3199421	Identifier	scaley		3199359	0					
ANR	3199422	CallExpression	"hypot ( ( double ) a_transform -> yx , ( double ) a_transform -> yy )"		3199359	1					
ANR	3199423	Callee	hypot		3199359	0					
ANR	3199424	Identifier	hypot		3199359	0					
ANR	3199425	ArgumentList	( double ) a_transform -> yx		3199359	1					
ANR	3199426	Argument	( double ) a_transform -> yx		3199359	0					
ANR	3199427	CastExpression	( double ) a_transform -> yx		3199359	0					
ANR	3199428	CastTarget	double		3199359	0					
ANR	3199429	PtrMemberAccess	a_transform -> yx		3199359	1					
ANR	3199430	Identifier	a_transform		3199359	0					
ANR	3199431	Identifier	yx		3199359	1					
ANR	3199432	Argument	( double ) a_transform -> yy		3199359	1					
ANR	3199433	CastExpression	( double ) a_transform -> yy		3199359	0					
ANR	3199434	CastTarget	double		3199359	0					
ANR	3199435	PtrMemberAccess	a_transform -> yy		3199359	1					
ANR	3199436	Identifier	a_transform		3199359	0					
ANR	3199437	Identifier	yy		3199359	1					
ANR	3199438	IfStatement	if ( scalex < 64.0 || scaley < 64.0 )		3199359	7					
ANR	3199439	Condition	scalex < 64.0 || scaley < 64.0	1014:8:34215:34244	3199359	0	True				
ANR	3199440	OrExpression	scalex < 64.0 || scaley < 64.0		3199359	0		||			
ANR	3199441	RelationalExpression	scalex < 64.0		3199359	0		<			
ANR	3199442	Identifier	scalex		3199359	0					
ANR	3199443	PrimaryExpression	64.0		3199359	1					
ANR	3199444	RelationalExpression	scaley < 64.0		3199359	1		<			
ANR	3199445	Identifier	scaley		3199359	0					
ANR	3199446	PrimaryExpression	64.0		3199359	1					
ANR	3199447	CompoundStatement		14:40:479:479	3199359	1					
ANR	3199448	ExpressionStatement	factx = 64.0 / scalex	1015:8:34257:34276	3199359	0	True				
ANR	3199449	AssignmentExpression	factx = 64.0 / scalex		3199359	0		=			
ANR	3199450	Identifier	factx		3199359	0					
ANR	3199451	MultiplicativeExpression	64.0 / scalex		3199359	1		/			
ANR	3199452	PrimaryExpression	64.0		3199359	0					
ANR	3199453	Identifier	scalex		3199359	1					
ANR	3199454	ExpressionStatement	facty = 64.0 / scaley	1016:8:34286:34305	3199359	1	True				
ANR	3199455	AssignmentExpression	facty = 64.0 / scaley		3199359	0		=			
ANR	3199456	Identifier	facty		3199359	0					
ANR	3199457	MultiplicativeExpression	64.0 / scaley		3199359	1		/			
ANR	3199458	PrimaryExpression	64.0		3199359	0					
ANR	3199459	Identifier	scaley		3199359	1					
ANR	3199460	ExpressionStatement	ftscale_mat . xx = ( FT_Fixed ) ( a_transform -> xx * factx )	1018:8:34316:34368	3199359	2	True				
ANR	3199461	AssignmentExpression	ftscale_mat . xx = ( FT_Fixed ) ( a_transform -> xx * factx )		3199359	0		=			
ANR	3199462	MemberAccess	ftscale_mat . xx		3199359	0					
ANR	3199463	Identifier	ftscale_mat		3199359	0					
ANR	3199464	Identifier	xx		3199359	1					
ANR	3199465	CastExpression	( FT_Fixed ) ( a_transform -> xx * factx )		3199359	1					
ANR	3199466	CastTarget	FT_Fixed		3199359	0					
ANR	3199467	MultiplicativeExpression	a_transform -> xx * factx		3199359	1		*			
ANR	3199468	PtrMemberAccess	a_transform -> xx		3199359	0					
ANR	3199469	Identifier	a_transform		3199359	0					
ANR	3199470	Identifier	xx		3199359	1					
ANR	3199471	Identifier	factx		3199359	1					
ANR	3199472	ExpressionStatement	ftscale_mat . xy = ( FT_Fixed ) ( a_transform -> xy * facty )	1019:8:34378:34430	3199359	3	True				
ANR	3199473	AssignmentExpression	ftscale_mat . xy = ( FT_Fixed ) ( a_transform -> xy * facty )		3199359	0		=			
ANR	3199474	MemberAccess	ftscale_mat . xy		3199359	0					
ANR	3199475	Identifier	ftscale_mat		3199359	0					
ANR	3199476	Identifier	xy		3199359	1					
ANR	3199477	CastExpression	( FT_Fixed ) ( a_transform -> xy * facty )		3199359	1					
ANR	3199478	CastTarget	FT_Fixed		3199359	0					
ANR	3199479	MultiplicativeExpression	a_transform -> xy * facty		3199359	1		*			
ANR	3199480	PtrMemberAccess	a_transform -> xy		3199359	0					
ANR	3199481	Identifier	a_transform		3199359	0					
ANR	3199482	Identifier	xy		3199359	1					
ANR	3199483	Identifier	facty		3199359	1					
ANR	3199484	ExpressionStatement	ftscale_mat . yx = ( FT_Fixed ) ( a_transform -> yx * factx )	1020:8:34440:34492	3199359	4	True				
ANR	3199485	AssignmentExpression	ftscale_mat . yx = ( FT_Fixed ) ( a_transform -> yx * factx )		3199359	0		=			
ANR	3199486	MemberAccess	ftscale_mat . yx		3199359	0					
ANR	3199487	Identifier	ftscale_mat		3199359	0					
ANR	3199488	Identifier	yx		3199359	1					
ANR	3199489	CastExpression	( FT_Fixed ) ( a_transform -> yx * factx )		3199359	1					
ANR	3199490	CastTarget	FT_Fixed		3199359	0					
ANR	3199491	MultiplicativeExpression	a_transform -> yx * factx		3199359	1		*			
ANR	3199492	PtrMemberAccess	a_transform -> yx		3199359	0					
ANR	3199493	Identifier	a_transform		3199359	0					
ANR	3199494	Identifier	yx		3199359	1					
ANR	3199495	Identifier	factx		3199359	1					
ANR	3199496	ExpressionStatement	ftscale_mat . yy = ( FT_Fixed ) ( a_transform -> yy * facty )	1021:8:34502:34554	3199359	5	True				
ANR	3199497	AssignmentExpression	ftscale_mat . yy = ( FT_Fixed ) ( a_transform -> yy * facty )		3199359	0		=			
ANR	3199498	MemberAccess	ftscale_mat . yy		3199359	0					
ANR	3199499	Identifier	ftscale_mat		3199359	0					
ANR	3199500	Identifier	yy		3199359	1					
ANR	3199501	CastExpression	( FT_Fixed ) ( a_transform -> yy * facty )		3199359	1					
ANR	3199502	CastTarget	FT_Fixed		3199359	0					
ANR	3199503	MultiplicativeExpression	a_transform -> yy * facty		3199359	1		*			
ANR	3199504	PtrMemberAccess	a_transform -> yy		3199359	0					
ANR	3199505	Identifier	a_transform		3199359	0					
ANR	3199506	Identifier	yy		3199359	1					
ANR	3199507	Identifier	facty		3199359	1					
ANR	3199508	ExpressionStatement	"memcpy ( a_transform , & ftscale_mat , sizeof ( ftscale_mat ) )"	1022:8:34564:34618	3199359	6	True				
ANR	3199509	CallExpression	"memcpy ( a_transform , & ftscale_mat , sizeof ( ftscale_mat ) )"		3199359	0					
ANR	3199510	Callee	memcpy		3199359	0					
ANR	3199511	Identifier	memcpy		3199359	0					
ANR	3199512	ArgumentList	a_transform		3199359	1					
ANR	3199513	Argument	a_transform		3199359	0					
ANR	3199514	Identifier	a_transform		3199359	0					
ANR	3199515	Argument	& ftscale_mat		3199359	1					
ANR	3199516	UnaryOperationExpression	& ftscale_mat		3199359	0					
ANR	3199517	UnaryOperator	&		3199359	0					
ANR	3199518	Identifier	ftscale_mat		3199359	1					
ANR	3199519	Argument	sizeof ( ftscale_mat )		3199359	2					
ANR	3199520	SizeofExpression	sizeof ( ftscale_mat )		3199359	0					
ANR	3199521	Sizeof	sizeof		3199359	0					
ANR	3199522	SizeofOperand	ftscale_mat		3199359	1					
ANR	3199523	ExpressionStatement	"scalex = hypot ( ( double ) a_transform -> xx , ( double ) a_transform -> xy )"	1023:8:34628:34692	3199359	7	True				
ANR	3199524	AssignmentExpression	"scalex = hypot ( ( double ) a_transform -> xx , ( double ) a_transform -> xy )"		3199359	0		=			
ANR	3199525	Identifier	scalex		3199359	0					
ANR	3199526	CallExpression	"hypot ( ( double ) a_transform -> xx , ( double ) a_transform -> xy )"		3199359	1					
ANR	3199527	Callee	hypot		3199359	0					
ANR	3199528	Identifier	hypot		3199359	0					
ANR	3199529	ArgumentList	( double ) a_transform -> xx		3199359	1					
ANR	3199530	Argument	( double ) a_transform -> xx		3199359	0					
ANR	3199531	CastExpression	( double ) a_transform -> xx		3199359	0					
ANR	3199532	CastTarget	double		3199359	0					
ANR	3199533	PtrMemberAccess	a_transform -> xx		3199359	1					
ANR	3199534	Identifier	a_transform		3199359	0					
ANR	3199535	Identifier	xx		3199359	1					
ANR	3199536	Argument	( double ) a_transform -> xy		3199359	1					
ANR	3199537	CastExpression	( double ) a_transform -> xy		3199359	0					
ANR	3199538	CastTarget	double		3199359	0					
ANR	3199539	PtrMemberAccess	a_transform -> xy		3199359	1					
ANR	3199540	Identifier	a_transform		3199359	0					
ANR	3199541	Identifier	xy		3199359	1					
ANR	3199542	ExpressionStatement	"scaley = hypot ( ( double ) a_transform -> yx , ( double ) a_transform -> yy )"	1024:8:34702:34766	3199359	8	True				
ANR	3199543	AssignmentExpression	"scaley = hypot ( ( double ) a_transform -> yx , ( double ) a_transform -> yy )"		3199359	0		=			
ANR	3199544	Identifier	scaley		3199359	0					
ANR	3199545	CallExpression	"hypot ( ( double ) a_transform -> yx , ( double ) a_transform -> yy )"		3199359	1					
ANR	3199546	Callee	hypot		3199359	0					
ANR	3199547	Identifier	hypot		3199359	0					
ANR	3199548	ArgumentList	( double ) a_transform -> yx		3199359	1					
ANR	3199549	Argument	( double ) a_transform -> yx		3199359	0					
ANR	3199550	CastExpression	( double ) a_transform -> yx		3199359	0					
ANR	3199551	CastTarget	double		3199359	0					
ANR	3199552	PtrMemberAccess	a_transform -> yx		3199359	1					
ANR	3199553	Identifier	a_transform		3199359	0					
ANR	3199554	Identifier	yx		3199359	1					
ANR	3199555	Argument	( double ) a_transform -> yy		3199359	1					
ANR	3199556	CastExpression	( double ) a_transform -> yy		3199359	0					
ANR	3199557	CastTarget	double		3199359	0					
ANR	3199558	PtrMemberAccess	a_transform -> yy		3199359	1					
ANR	3199559	Identifier	a_transform		3199359	0					
ANR	3199560	Identifier	yy		3199359	1					
ANR	3199561	IfStatement	if ( * xresp != * yresp )		3199359	8					
ANR	3199562	Condition	* xresp != * yresp	1027:8:34783:34798	3199359	0	True				
ANR	3199563	EqualityExpression	* xresp != * yresp		3199359	0		!=			
ANR	3199564	UnaryOperationExpression	* xresp		3199359	0					
ANR	3199565	UnaryOperator	*		3199359	0					
ANR	3199566	Identifier	xresp		3199359	1					
ANR	3199567	UnaryOperationExpression	* yresp		3199359	1					
ANR	3199568	UnaryOperator	*		3199359	0					
ANR	3199569	Identifier	yresp		3199359	1					
ANR	3199570	CompoundStatement		34:8:1403:1420	3199359	1					
ANR	3199571	IdentifierDeclStatement	bool use_x = true ;	1034:8:35171:35188	3199359	0	True				
ANR	3199572	IdentifierDecl	use_x = true		3199359	0					
ANR	3199573	IdentifierDeclType	bool		3199359	0					
ANR	3199574	Identifier	use_x		3199359	1					
ANR	3199575	AssignmentExpression	use_x = true		3199359	2		=			
ANR	3199576	Identifier	true		3199359	0					
ANR	3199577	Identifier	true		3199359	1					
ANR	3199578	IfStatement	if ( * xresp < * yresp )		3199359	1					
ANR	3199579	Condition	* xresp < * yresp	1036:12:35203:35217	3199359	0	True				
ANR	3199580	RelationalExpression	* xresp < * yresp		3199359	0		<			
ANR	3199581	UnaryOperationExpression	* xresp		3199359	0					
ANR	3199582	UnaryOperator	*		3199359	0					
ANR	3199583	Identifier	xresp		3199359	1					
ANR	3199584	UnaryOperationExpression	* yresp		3199359	1					
ANR	3199585	UnaryOperator	*		3199359	0					
ANR	3199586	Identifier	yresp		3199359	1					
ANR	3199587	CompoundStatement		36:29:1452:1452	3199359	1					
ANR	3199588	ExpressionStatement	use_x = false	1037:12:35234:35247	3199359	0	True				
ANR	3199589	AssignmentExpression	use_x = false		3199359	0		=			
ANR	3199590	Identifier	use_x		3199359	0					
ANR	3199591	Identifier	false		3199359	1					
ANR	3199592	ExpressionStatement	ftscale_mat . xx = ( int ) ( ( ( double ) ( * xresp ) / ( ( double ) ( use_x ? ( * xresp ) : ( * yresp ) ) ) ) * 65536 )	1040:8:35268:35391	3199359	2	True				
ANR	3199593	AssignmentExpression	ftscale_mat . xx = ( int ) ( ( ( double ) ( * xresp ) / ( ( double ) ( use_x ? ( * xresp ) : ( * yresp ) ) ) ) * 65536 )		3199359	0		=			
ANR	3199594	MemberAccess	ftscale_mat . xx		3199359	0					
ANR	3199595	Identifier	ftscale_mat		3199359	0					
ANR	3199596	Identifier	xx		3199359	1					
ANR	3199597	CastExpression	( int ) ( ( ( double ) ( * xresp ) / ( ( double ) ( use_x ? ( * xresp ) : ( * yresp ) ) ) ) * 65536 )		3199359	1					
ANR	3199598	CastTarget	int		3199359	0					
ANR	3199599	MultiplicativeExpression	( ( double ) ( * xresp ) / ( ( double ) ( use_x ? ( * xresp ) : ( * yresp ) ) ) ) * 65536		3199359	1		*			
ANR	3199600	MultiplicativeExpression	( double ) ( * xresp ) / ( ( double ) ( use_x ? ( * xresp ) : ( * yresp ) ) )		3199359	0		/			
ANR	3199601	CastExpression	( double ) ( * xresp )		3199359	0					
ANR	3199602	CastTarget	double		3199359	0					
ANR	3199603	UnaryOperationExpression	* xresp		3199359	1					
ANR	3199604	UnaryOperator	*		3199359	0					
ANR	3199605	Identifier	xresp		3199359	1					
ANR	3199606	CastExpression	( double ) ( use_x ? ( * xresp ) : ( * yresp ) )		3199359	1					
ANR	3199607	CastTarget	double		3199359	0					
ANR	3199608	ConditionalExpression	use_x ? ( * xresp ) : ( * yresp )		3199359	1					
ANR	3199609	Condition	use_x		3199359	0					
ANR	3199610	Identifier	use_x		3199359	0					
ANR	3199611	UnaryOperationExpression	* xresp		3199359	1					
ANR	3199612	UnaryOperator	*		3199359	0					
ANR	3199613	Identifier	xresp		3199359	1					
ANR	3199614	UnaryOperationExpression	* yresp		3199359	2					
ANR	3199615	UnaryOperator	*		3199359	0					
ANR	3199616	Identifier	yresp		3199359	1					
ANR	3199617	PrimaryExpression	65536		3199359	1					
ANR	3199618	ExpressionStatement	ftscale_mat . xy = ftscale_mat . yx = 0	1043:8:35401:35436	3199359	3	True				
ANR	3199619	AssignmentExpression	ftscale_mat . xy = ftscale_mat . yx = 0		3199359	0		=			
ANR	3199620	MemberAccess	ftscale_mat . xy		3199359	0					
ANR	3199621	Identifier	ftscale_mat		3199359	0					
ANR	3199622	Identifier	xy		3199359	1					
ANR	3199623	AssignmentExpression	ftscale_mat . yx = 0		3199359	1		=			
ANR	3199624	MemberAccess	ftscale_mat . yx		3199359	0					
ANR	3199625	Identifier	ftscale_mat		3199359	0					
ANR	3199626	Identifier	yx		3199359	1					
ANR	3199627	PrimaryExpression	0		3199359	1					
ANR	3199628	ExpressionStatement	ftscale_mat . yy = ( int ) ( ( ( double ) ( * yresp ) / ( ( double ) ( use_x ? ( * xresp ) : ( * yresp ) ) ) ) * 65536 )	1044:8:35446:35569	3199359	4	True				
ANR	3199629	AssignmentExpression	ftscale_mat . yy = ( int ) ( ( ( double ) ( * yresp ) / ( ( double ) ( use_x ? ( * xresp ) : ( * yresp ) ) ) ) * 65536 )		3199359	0		=			
ANR	3199630	MemberAccess	ftscale_mat . yy		3199359	0					
ANR	3199631	Identifier	ftscale_mat		3199359	0					
ANR	3199632	Identifier	yy		3199359	1					
ANR	3199633	CastExpression	( int ) ( ( ( double ) ( * yresp ) / ( ( double ) ( use_x ? ( * xresp ) : ( * yresp ) ) ) ) * 65536 )		3199359	1					
ANR	3199634	CastTarget	int		3199359	0					
ANR	3199635	MultiplicativeExpression	( ( double ) ( * yresp ) / ( ( double ) ( use_x ? ( * xresp ) : ( * yresp ) ) ) ) * 65536		3199359	1		*			
ANR	3199636	MultiplicativeExpression	( double ) ( * yresp ) / ( ( double ) ( use_x ? ( * xresp ) : ( * yresp ) ) )		3199359	0		/			
ANR	3199637	CastExpression	( double ) ( * yresp )		3199359	0					
ANR	3199638	CastTarget	double		3199359	0					
ANR	3199639	UnaryOperationExpression	* yresp		3199359	1					
ANR	3199640	UnaryOperator	*		3199359	0					
ANR	3199641	Identifier	yresp		3199359	1					
ANR	3199642	CastExpression	( double ) ( use_x ? ( * xresp ) : ( * yresp ) )		3199359	1					
ANR	3199643	CastTarget	double		3199359	0					
ANR	3199644	ConditionalExpression	use_x ? ( * xresp ) : ( * yresp )		3199359	1					
ANR	3199645	Condition	use_x		3199359	0					
ANR	3199646	Identifier	use_x		3199359	0					
ANR	3199647	UnaryOperationExpression	* xresp		3199359	1					
ANR	3199648	UnaryOperator	*		3199359	0					
ANR	3199649	Identifier	xresp		3199359	1					
ANR	3199650	UnaryOperationExpression	* yresp		3199359	2					
ANR	3199651	UnaryOperator	*		3199359	0					
ANR	3199652	Identifier	yresp		3199359	1					
ANR	3199653	PrimaryExpression	65536		3199359	1					
ANR	3199654	ExpressionStatement	"FT_Matrix_Multiply ( & ftscale_mat , a_transform )"	1048:8:35580:35625	3199359	5	True				
ANR	3199655	CallExpression	"FT_Matrix_Multiply ( & ftscale_mat , a_transform )"		3199359	0					
ANR	3199656	Callee	FT_Matrix_Multiply		3199359	0					
ANR	3199657	Identifier	FT_Matrix_Multiply		3199359	0					
ANR	3199658	ArgumentList	& ftscale_mat		3199359	1					
ANR	3199659	Argument	& ftscale_mat		3199359	0					
ANR	3199660	UnaryOperationExpression	& ftscale_mat		3199359	0					
ANR	3199661	UnaryOperator	&		3199359	0					
ANR	3199662	Identifier	ftscale_mat		3199359	1					
ANR	3199663	Argument	a_transform		3199359	1					
ANR	3199664	Identifier	a_transform		3199359	0					
ANR	3199665	ExpressionStatement	xres = yres = ( use_x ? ( * xresp ) : ( * yresp ) )	1050:8:35636:35679	3199359	6	True				
ANR	3199666	AssignmentExpression	xres = yres = ( use_x ? ( * xresp ) : ( * yresp ) )		3199359	0		=			
ANR	3199667	Identifier	xres		3199359	0					
ANR	3199668	AssignmentExpression	yres = ( use_x ? ( * xresp ) : ( * yresp ) )		3199359	1		=			
ANR	3199669	Identifier	yres		3199359	0					
ANR	3199670	ConditionalExpression	use_x ? ( * xresp ) : ( * yresp )		3199359	1					
ANR	3199671	Condition	use_x		3199359	0					
ANR	3199672	Identifier	use_x		3199359	0					
ANR	3199673	UnaryOperationExpression	* xresp		3199359	1					
ANR	3199674	UnaryOperator	*		3199359	0					
ANR	3199675	Identifier	xresp		3199359	1					
ANR	3199676	UnaryOperationExpression	* yresp		3199359	2					
ANR	3199677	UnaryOperator	*		3199359	0					
ANR	3199678	Identifier	yresp		3199359	1					
ANR	3199679	ExpressionStatement	xres = ( FT_UInt ) ( xres / factx )	1051:8:35689:35719	3199359	7	True				
ANR	3199680	AssignmentExpression	xres = ( FT_UInt ) ( xres / factx )		3199359	0		=			
ANR	3199681	Identifier	xres		3199359	0					
ANR	3199682	CastExpression	( FT_UInt ) ( xres / factx )		3199359	1					
ANR	3199683	CastTarget	FT_UInt		3199359	0					
ANR	3199684	MultiplicativeExpression	xres / factx		3199359	1		/			
ANR	3199685	Identifier	xres		3199359	0					
ANR	3199686	Identifier	factx		3199359	1					
ANR	3199687	ExpressionStatement	yres = ( FT_UInt ) ( yres / facty )	1052:8:35729:35759	3199359	8	True				
ANR	3199688	AssignmentExpression	yres = ( FT_UInt ) ( yres / facty )		3199359	0		=			
ANR	3199689	Identifier	yres		3199359	0					
ANR	3199690	CastExpression	( FT_UInt ) ( yres / facty )		3199359	1					
ANR	3199691	CastTarget	FT_UInt		3199359	0					
ANR	3199692	MultiplicativeExpression	yres / facty		3199359	1		/			
ANR	3199693	Identifier	yres		3199359	0					
ANR	3199694	Identifier	facty		3199359	1					
ANR	3199695	ElseStatement	else		3199359	0					
ANR	3199696	CompoundStatement		54:9:2008:2008	3199359	0					
ANR	3199697	ExpressionStatement	xres = ( FT_UInt ) ( * xresp / factx )	1056:8:35864:35896	3199359	0	True				
ANR	3199698	AssignmentExpression	xres = ( FT_UInt ) ( * xresp / factx )		3199359	0		=			
ANR	3199699	Identifier	xres		3199359	0					
ANR	3199700	CastExpression	( FT_UInt ) ( * xresp / factx )		3199359	1					
ANR	3199701	CastTarget	FT_UInt		3199359	0					
ANR	3199702	MultiplicativeExpression	* xresp / factx		3199359	1		/			
ANR	3199703	UnaryOperationExpression	* xresp		3199359	0					
ANR	3199704	UnaryOperator	*		3199359	0					
ANR	3199705	Identifier	xresp		3199359	1					
ANR	3199706	Identifier	factx		3199359	1					
ANR	3199707	ExpressionStatement	yres = ( FT_UInt ) ( * yresp / facty )	1057:8:35906:35938	3199359	1	True				
ANR	3199708	AssignmentExpression	yres = ( FT_UInt ) ( * yresp / facty )		3199359	0		=			
ANR	3199709	Identifier	yres		3199359	0					
ANR	3199710	CastExpression	( FT_UInt ) ( * yresp / facty )		3199359	1					
ANR	3199711	CastTarget	FT_UInt		3199359	0					
ANR	3199712	MultiplicativeExpression	* yresp / facty		3199359	1		/			
ANR	3199713	UnaryOperationExpression	* yresp		3199359	0					
ANR	3199714	UnaryOperator	*		3199359	0					
ANR	3199715	Identifier	yresp		3199359	1					
ANR	3199716	Identifier	facty		3199359	1					
ANR	3199717	ExpressionStatement	scalex *= 1.0 / 65536.0	1060:4:35951:35974	3199359	9	True				
ANR	3199718	AssignmentExpression	scalex *= 1.0 / 65536.0		3199359	0		*=			
ANR	3199719	Identifier	scalex		3199359	0					
ANR	3199720	MultiplicativeExpression	1.0 / 65536.0		3199359	1		/			
ANR	3199721	PrimaryExpression	1.0		3199359	0					
ANR	3199722	PrimaryExpression	65536.0		3199359	1					
ANR	3199723	ExpressionStatement	scaley *= 1.0 / 65536.0	1061:4:35980:36003	3199359	10	True				
ANR	3199724	AssignmentExpression	scaley *= 1.0 / 65536.0		3199359	0		*=			
ANR	3199725	Identifier	scaley		3199359	0					
ANR	3199726	MultiplicativeExpression	1.0 / 65536.0		3199359	1		/			
ANR	3199727	PrimaryExpression	1.0		3199359	0					
ANR	3199728	PrimaryExpression	65536.0		3199359	1					
ANR	3199729	IfStatement	if ( scalex < scaley )		3199359	11					
ANR	3199730	Condition	scalex < scaley	1063:8:36014:36028	3199359	0	True				
ANR	3199731	RelationalExpression	scalex < scaley		3199359	0		<			
ANR	3199732	Identifier	scalex		3199359	0					
ANR	3199733	Identifier	scaley		3199359	1					
ANR	3199734	CompoundStatement		63:25:2263:2263	3199359	1					
ANR	3199735	ExpressionStatement	scaley = scalex	1064:8:36041:36056	3199359	0	True				
ANR	3199736	AssignmentExpression	scaley = scalex		3199359	0		=			
ANR	3199737	Identifier	scaley		3199359	0					
ANR	3199738	Identifier	scalex		3199359	1					
ANR	3199739	ElseStatement	else		3199359	0					
ANR	3199740	IfStatement	if ( scalex > scaley )		3199359	0					
ANR	3199741	Condition	scalex > scaley	1066:13:36077:36091	3199359	0	True				
ANR	3199742	RelationalExpression	scalex > scaley		3199359	0		>			
ANR	3199743	Identifier	scalex		3199359	0					
ANR	3199744	Identifier	scaley		3199359	1					
ANR	3199745	CompoundStatement		66:30:2326:2326	3199359	1					
ANR	3199746	ExpressionStatement	scalex = scaley	1067:8:36104:36119	3199359	0	True				
ANR	3199747	AssignmentExpression	scalex = scaley		3199359	0		=			
ANR	3199748	Identifier	scalex		3199359	0					
ANR	3199749	Identifier	scaley		3199359	1					
ANR	3199750	IfStatement	if ( scalex < 10.0 )		3199359	12					
ANR	3199751	Condition	scalex < 10.0	1080:8:36584:36596	3199359	0	True				
ANR	3199752	RelationalExpression	scalex < 10.0		3199359	0		<			
ANR	3199753	Identifier	scalex		3199359	0					
ANR	3199754	PrimaryExpression	10.0		3199359	1					
ANR	3199755	CompoundStatement		80:23:2831:2831	3199359	1					
ANR	3199756	ExpressionStatement	fact = 10.016 / scalex	1081:8:36609:36631	3199359	0	True				
ANR	3199757	AssignmentExpression	fact = 10.016 / scalex		3199359	0		=			
ANR	3199758	Identifier	fact		3199359	0					
ANR	3199759	MultiplicativeExpression	10.016 / scalex		3199359	1		/			
ANR	3199760	PrimaryExpression	10.016		3199359	0					
ANR	3199761	Identifier	scalex		3199359	1					
ANR	3199762	ExpressionStatement	scalex = scalex * fact	1082:8:36641:36663	3199359	1	True				
ANR	3199763	AssignmentExpression	scalex = scalex * fact		3199359	0		=			
ANR	3199764	Identifier	scalex		3199359	0					
ANR	3199765	MultiplicativeExpression	scalex * fact		3199359	1		*			
ANR	3199766	Identifier	scalex		3199359	0					
ANR	3199767	Identifier	fact		3199359	1					
ANR	3199768	ExpressionStatement	scaley = scaley * fact	1083:8:36673:36695	3199359	2	True				
ANR	3199769	AssignmentExpression	scaley = scaley * fact		3199359	0		=			
ANR	3199770	Identifier	scaley		3199359	0					
ANR	3199771	MultiplicativeExpression	scaley * fact		3199359	1		*			
ANR	3199772	Identifier	scaley		3199359	0					
ANR	3199773	Identifier	fact		3199359	1					
ANR	3199774	IfStatement	if ( scalex * xres < 2268.0 / 64.0 )		3199359	13					
ANR	3199775	Condition	scalex * xres < 2268.0 / 64.0	1087:8:36732:36760	3199359	0	True				
ANR	3199776	RelationalExpression	scalex * xres < 2268.0 / 64.0		3199359	0		<			
ANR	3199777	MultiplicativeExpression	scalex * xres		3199359	0		*			
ANR	3199778	Identifier	scalex		3199359	0					
ANR	3199779	Identifier	xres		3199359	1					
ANR	3199780	MultiplicativeExpression	2268.0 / 64.0		3199359	1		/			
ANR	3199781	PrimaryExpression	2268.0		3199359	0					
ANR	3199782	PrimaryExpression	64.0		3199359	1					
ANR	3199783	CompoundStatement		87:39:2995:2995	3199359	1					
ANR	3199784	ExpressionStatement	fact = ( 2400.0 / 64.0 ) / ( xres * scalex )	1088:8:36773:36813	3199359	0	True				
ANR	3199785	AssignmentExpression	fact = ( 2400.0 / 64.0 ) / ( xres * scalex )		3199359	0		=			
ANR	3199786	Identifier	fact		3199359	0					
ANR	3199787	MultiplicativeExpression	( 2400.0 / 64.0 ) / ( xres * scalex )		3199359	1		/			
ANR	3199788	MultiplicativeExpression	2400.0 / 64.0		3199359	0		/			
ANR	3199789	PrimaryExpression	2400.0		3199359	0					
ANR	3199790	PrimaryExpression	64.0		3199359	1					
ANR	3199791	MultiplicativeExpression	xres * scalex		3199359	1		*			
ANR	3199792	Identifier	xres		3199359	0					
ANR	3199793	Identifier	scalex		3199359	1					
ANR	3199794	ExpressionStatement	scaley *= fact	1089:8:36823:36837	3199359	1	True				
ANR	3199795	AssignmentExpression	scaley *= fact		3199359	0		*=			
ANR	3199796	Identifier	scaley		3199359	0					
ANR	3199797	Identifier	fact		3199359	1					
ANR	3199798	ExpressionStatement	scalex *= fact	1090:8:36847:36861	3199359	2	True				
ANR	3199799	AssignmentExpression	scalex *= fact		3199359	0		*=			
ANR	3199800	Identifier	scalex		3199359	0					
ANR	3199801	Identifier	fact		3199359	1					
ANR	3199802	ExpressionStatement	fact = 1.0	1094:4:36894:36904	3199359	14	True				
ANR	3199803	AssignmentExpression	fact = 1.0		3199359	0		=			
ANR	3199804	Identifier	fact		3199359	0					
ANR	3199805	PrimaryExpression	1.0		3199359	1					
ANR	3199806	WhileStatement	while ( scaley * yres > 512.0 * 72.0 && ( xres > 0 && yres > 0 ) && ( scalex > 0.0 && scaley > 0.0 ) )		3199359	15					
ANR	3199807	Condition	scaley * yres > 512.0 * 72.0 && ( xres > 0 && yres > 0 ) && ( scalex > 0.0 && scaley > 0.0 )	1095:11:36917:37015	3199359	0	True				
ANR	3199808	AndExpression	scaley * yres > 512.0 * 72.0 && ( xres > 0 && yres > 0 ) && ( scalex > 0.0 && scaley > 0.0 )		3199359	0		&&			
ANR	3199809	RelationalExpression	scaley * yres > 512.0 * 72.0		3199359	0		>			
ANR	3199810	MultiplicativeExpression	scaley * yres		3199359	0		*			
ANR	3199811	Identifier	scaley		3199359	0					
ANR	3199812	Identifier	yres		3199359	1					
ANR	3199813	MultiplicativeExpression	512.0 * 72.0		3199359	1		*			
ANR	3199814	PrimaryExpression	512.0		3199359	0					
ANR	3199815	PrimaryExpression	72.0		3199359	1					
ANR	3199816	AndExpression	( xres > 0 && yres > 0 ) && ( scalex > 0.0 && scaley > 0.0 )		3199359	1		&&			
ANR	3199817	AndExpression	xres > 0 && yres > 0		3199359	0		&&			
ANR	3199818	RelationalExpression	xres > 0		3199359	0		>			
ANR	3199819	Identifier	xres		3199359	0					
ANR	3199820	PrimaryExpression	0		3199359	1					
ANR	3199821	RelationalExpression	yres > 0		3199359	1		>			
ANR	3199822	Identifier	yres		3199359	0					
ANR	3199823	PrimaryExpression	0		3199359	1					
ANR	3199824	AndExpression	scalex > 0.0 && scaley > 0.0		3199359	1		&&			
ANR	3199825	RelationalExpression	scalex > 0.0		3199359	0		>			
ANR	3199826	Identifier	scalex		3199359	0					
ANR	3199827	PrimaryExpression	0.0		3199359	1					
ANR	3199828	RelationalExpression	scaley > 0.0		3199359	1		>			
ANR	3199829	Identifier	scaley		3199359	0					
ANR	3199830	PrimaryExpression	0.0		3199359	1					
ANR	3199831	CompoundStatement		96:46:3250:3250	3199359	1					
ANR	3199832	IfStatement	if ( scaley < yres )		3199359	0					
ANR	3199833	Condition	scaley < yres	1097:12:37032:37044	3199359	0	True				
ANR	3199834	RelationalExpression	scaley < yres		3199359	0		<			
ANR	3199835	Identifier	scaley		3199359	0					
ANR	3199836	Identifier	yres		3199359	1					
ANR	3199837	CompoundStatement		97:27:3279:3279	3199359	1					
ANR	3199838	ExpressionStatement	xres >>= 1	1098:12:37061:37071	3199359	0	True				
ANR	3199839	AssignmentExpression	xres >>= 1		3199359	0		>>=			
ANR	3199840	Identifier	xres		3199359	0					
ANR	3199841	PrimaryExpression	1		3199359	1					
ANR	3199842	ExpressionStatement	yres >>= 1	1099:12:37085:37095	3199359	1	True				
ANR	3199843	AssignmentExpression	yres >>= 1		3199359	0		>>=			
ANR	3199844	Identifier	yres		3199359	0					
ANR	3199845	PrimaryExpression	1		3199359	1					
ANR	3199846	ExpressionStatement	fact *= 2.0	1100:12:37109:37120	3199359	2	True				
ANR	3199847	AssignmentExpression	fact *= 2.0		3199359	0		*=			
ANR	3199848	Identifier	fact		3199359	0					
ANR	3199849	PrimaryExpression	2.0		3199359	1					
ANR	3199850	ElseStatement	else		3199359	0					
ANR	3199851	CompoundStatement		102:13:3377:3377	3199359	0					
ANR	3199852	ExpressionStatement	scalex /= 1.25	1103:12:37159:37173	3199359	0	True				
ANR	3199853	AssignmentExpression	scalex /= 1.25		3199359	0		/=			
ANR	3199854	Identifier	scalex		3199359	0					
ANR	3199855	PrimaryExpression	1.25		3199359	1					
ANR	3199856	ExpressionStatement	scaley /= 1.25	1104:12:37187:37201	3199359	1	True				
ANR	3199857	AssignmentExpression	scaley /= 1.25		3199359	0		/=			
ANR	3199858	Identifier	scaley		3199359	0					
ANR	3199859	PrimaryExpression	1.25		3199359	1					
ANR	3199860	ExpressionStatement	ftscale_mat . xx = ( FT_Fixed ) ( ( 65536.0 / scalex ) * fact )	1108:4:37224:37279	3199359	16	True				
ANR	3199861	AssignmentExpression	ftscale_mat . xx = ( FT_Fixed ) ( ( 65536.0 / scalex ) * fact )		3199359	0		=			
ANR	3199862	MemberAccess	ftscale_mat . xx		3199359	0					
ANR	3199863	Identifier	ftscale_mat		3199359	0					
ANR	3199864	Identifier	xx		3199359	1					
ANR	3199865	CastExpression	( FT_Fixed ) ( ( 65536.0 / scalex ) * fact )		3199359	1					
ANR	3199866	CastTarget	FT_Fixed		3199359	0					
ANR	3199867	MultiplicativeExpression	( 65536.0 / scalex ) * fact		3199359	1		*			
ANR	3199868	MultiplicativeExpression	65536.0 / scalex		3199359	0		/			
ANR	3199869	PrimaryExpression	65536.0		3199359	0					
ANR	3199870	Identifier	scalex		3199359	1					
ANR	3199871	Identifier	fact		3199359	1					
ANR	3199872	ExpressionStatement	ftscale_mat . xy = 0	1109:4:37285:37303	3199359	17	True				
ANR	3199873	AssignmentExpression	ftscale_mat . xy = 0		3199359	0		=			
ANR	3199874	MemberAccess	ftscale_mat . xy		3199359	0					
ANR	3199875	Identifier	ftscale_mat		3199359	0					
ANR	3199876	Identifier	xy		3199359	1					
ANR	3199877	PrimaryExpression	0		3199359	1					
ANR	3199878	ExpressionStatement	ftscale_mat . yx = 0	1110:4:37309:37327	3199359	18	True				
ANR	3199879	AssignmentExpression	ftscale_mat . yx = 0		3199359	0		=			
ANR	3199880	MemberAccess	ftscale_mat . yx		3199359	0					
ANR	3199881	Identifier	ftscale_mat		3199359	0					
ANR	3199882	Identifier	yx		3199359	1					
ANR	3199883	PrimaryExpression	0		3199359	1					
ANR	3199884	ExpressionStatement	ftscale_mat . yy = ( FT_Fixed ) ( ( 65536.0 / scaley ) * fact )	1111:4:37333:37388	3199359	19	True				
ANR	3199885	AssignmentExpression	ftscale_mat . yy = ( FT_Fixed ) ( ( 65536.0 / scaley ) * fact )		3199359	0		=			
ANR	3199886	MemberAccess	ftscale_mat . yy		3199359	0					
ANR	3199887	Identifier	ftscale_mat		3199359	0					
ANR	3199888	Identifier	yy		3199359	1					
ANR	3199889	CastExpression	( FT_Fixed ) ( ( 65536.0 / scaley ) * fact )		3199359	1					
ANR	3199890	CastTarget	FT_Fixed		3199359	0					
ANR	3199891	MultiplicativeExpression	( 65536.0 / scaley ) * fact		3199359	1		*			
ANR	3199892	MultiplicativeExpression	65536.0 / scaley		3199359	0		/			
ANR	3199893	PrimaryExpression	65536.0		3199359	0					
ANR	3199894	Identifier	scaley		3199359	1					
ANR	3199895	Identifier	fact		3199359	1					
ANR	3199896	ExpressionStatement	"FT_Matrix_Multiply ( a_transform , & ftscale_mat )"	1113:4:37395:37440	3199359	20	True				
ANR	3199897	CallExpression	"FT_Matrix_Multiply ( a_transform , & ftscale_mat )"		3199359	0					
ANR	3199898	Callee	FT_Matrix_Multiply		3199359	0					
ANR	3199899	Identifier	FT_Matrix_Multiply		3199359	0					
ANR	3199900	ArgumentList	a_transform		3199359	1					
ANR	3199901	Argument	a_transform		3199359	0					
ANR	3199902	Identifier	a_transform		3199359	0					
ANR	3199903	Argument	& ftscale_mat		3199359	1					
ANR	3199904	UnaryOperationExpression	& ftscale_mat		3199359	0					
ANR	3199905	UnaryOperator	&		3199359	0					
ANR	3199906	Identifier	ftscale_mat		3199359	1					
ANR	3199907	ExpressionStatement	"memcpy ( a_transform , & ftscale_mat , sizeof ( FT_Matrix ) )"	1114:4:37446:37498	3199359	21	True				
ANR	3199908	CallExpression	"memcpy ( a_transform , & ftscale_mat , sizeof ( FT_Matrix ) )"		3199359	0					
ANR	3199909	Callee	memcpy		3199359	0					
ANR	3199910	Identifier	memcpy		3199359	0					
ANR	3199911	ArgumentList	a_transform		3199359	1					
ANR	3199912	Argument	a_transform		3199359	0					
ANR	3199913	Identifier	a_transform		3199359	0					
ANR	3199914	Argument	& ftscale_mat		3199359	1					
ANR	3199915	UnaryOperationExpression	& ftscale_mat		3199359	0					
ANR	3199916	UnaryOperator	&		3199359	0					
ANR	3199917	Identifier	ftscale_mat		3199359	1					
ANR	3199918	Argument	sizeof ( FT_Matrix )		3199359	2					
ANR	3199919	SizeofExpression	sizeof ( FT_Matrix )		3199359	0					
ANR	3199920	Sizeof	sizeof		3199359	0					
ANR	3199921	SizeofOperand	FT_Matrix		3199359	1					
ANR	3199922	ExpressionStatement	* xresp = xres	1116:4:37505:37518	3199359	22	True				
ANR	3199923	AssignmentExpression	* xresp = xres		3199359	0		=			
ANR	3199924	UnaryOperationExpression	* xresp		3199359	0					
ANR	3199925	UnaryOperator	*		3199359	0					
ANR	3199926	Identifier	xresp		3199359	1					
ANR	3199927	Identifier	xres		3199359	1					
ANR	3199928	ExpressionStatement	* yresp = yres	1117:4:37524:37537	3199359	23	True				
ANR	3199929	AssignmentExpression	* yresp = yres		3199359	0		=			
ANR	3199930	UnaryOperationExpression	* yresp		3199359	0					
ANR	3199931	UnaryOperator	*		3199359	0					
ANR	3199932	Identifier	yresp		3199359	1					
ANR	3199933	Identifier	yres		3199359	1					
ANR	3199934	ExpressionStatement	* a_x_scale = ( FT_Fixed ) ( scalex * 64 )	1119:4:37587:37624	3199359	24	True				
ANR	3199935	AssignmentExpression	* a_x_scale = ( FT_Fixed ) ( scalex * 64 )		3199359	0		=			
ANR	3199936	UnaryOperationExpression	* a_x_scale		3199359	0					
ANR	3199937	UnaryOperator	*		3199359	0					
ANR	3199938	Identifier	a_x_scale		3199359	1					
ANR	3199939	CastExpression	( FT_Fixed ) ( scalex * 64 )		3199359	1					
ANR	3199940	CastTarget	FT_Fixed		3199359	0					
ANR	3199941	MultiplicativeExpression	scalex * 64		3199359	1		*			
ANR	3199942	Identifier	scalex		3199359	0					
ANR	3199943	PrimaryExpression	64		3199359	1					
ANR	3199944	ExpressionStatement	* a_y_scale = ( FT_Fixed ) ( scaley * 64 )	1120:4:37630:37667	3199359	25	True				
ANR	3199945	AssignmentExpression	* a_y_scale = ( FT_Fixed ) ( scaley * 64 )		3199359	0		=			
ANR	3199946	UnaryOperationExpression	* a_y_scale		3199359	0					
ANR	3199947	UnaryOperator	*		3199359	0					
ANR	3199948	Identifier	a_y_scale		3199359	1					
ANR	3199949	CastExpression	( FT_Fixed ) ( scaley * 64 )		3199359	1					
ANR	3199950	CastTarget	FT_Fixed		3199359	0					
ANR	3199951	MultiplicativeExpression	scaley * 64		3199359	1		*			
ANR	3199952	Identifier	scaley		3199359	0					
ANR	3199953	PrimaryExpression	64		3199359	1					
ANR	3199954	ReturnType	static void		3199359	1					
ANR	3199955	Identifier	transform_decompose		3199359	2					
ANR	3199956	ParameterList	"FT_Matrix * a_transform , FT_UInt * xresp , FT_UInt * yresp , FT_Fixed * a_x_scale , FT_Fixed * a_y_scale"		3199359	3					
ANR	3199957	Parameter	FT_Matrix * a_transform	999:20:33644:33666	3199359	0	True				
ANR	3199958	ParameterType	FT_Matrix *		3199359	0					
ANR	3199959	Identifier	a_transform		3199359	1					
ANR	3199960	Parameter	FT_UInt * xresp	999:45:33669:33683	3199359	1	True				
ANR	3199961	ParameterType	FT_UInt *		3199359	0					
ANR	3199962	Identifier	xresp		3199359	1					
ANR	3199963	Parameter	FT_UInt * yresp	999:62:33686:33700	3199359	2	True				
ANR	3199964	ParameterType	FT_UInt *		3199359	0					
ANR	3199965	Identifier	yresp		3199359	1					
ANR	3199966	Parameter	FT_Fixed * a_x_scale	1000:20:33723:33742	3199359	3	True				
ANR	3199967	ParameterType	FT_Fixed *		3199359	0					
ANR	3199968	Identifier	a_x_scale		3199359	1					
ANR	3199969	Parameter	FT_Fixed * a_y_scale	1000:42:33745:33764	3199359	4	True				
ANR	3199970	ParameterType	FT_Fixed *		3199359	0					
ANR	3199971	Identifier	a_y_scale		3199359	1					
ANR	3199972	CFGEntryNode	ENTRY		3199359		True				
ANR	3199973	CFGExitNode	EXIT		3199359		True				
ANR	3199974	Symbol	* a_transform		3199359						
ANR	3199975	Symbol	fact		3199359						
ANR	3199976	Symbol	factx		3199359						
ANR	3199977	Symbol	facty		3199359						
ANR	3199978	Symbol	& ftscale_mat		3199359						
ANR	3199979	Symbol	a_y_scale		3199359						
ANR	3199980	Symbol	a_transform -> yy		3199359						
ANR	3199981	Symbol	a_transform -> yx		3199359						
ANR	3199982	Symbol	xres		3199359						
ANR	3199983	Symbol	* a_y_scale		3199359						
ANR	3199984	Symbol	* a_x_scale		3199359						
ANR	3199985	Symbol	hypot		3199359						
ANR	3199986	Symbol	yresp		3199359						
ANR	3199987	Symbol	xresp		3199359						
ANR	3199988	Symbol	ftscale_mat . yx		3199359						
ANR	3199989	Symbol	ftscale_mat . yy		3199359						
ANR	3199990	Symbol	ftscale_mat		3199359						
ANR	3199991	Symbol	* xresp		3199359						
ANR	3199992	Symbol	use_x		3199359						
ANR	3199993	Symbol	false		3199359						
ANR	3199994	Symbol	a_transform		3199359						
ANR	3199995	Symbol	* yresp		3199359						
ANR	3199996	Symbol	a_x_scale		3199359						
ANR	3199997	Symbol	a_transform -> xy		3199359						
ANR	3199998	Symbol	a_transform -> xx		3199359						
ANR	3199999	Symbol	scalex		3199359						
ANR	3200000	Symbol	scaley		3199359						
ANR	3200001	Symbol	true		3199359						
ANR	3200002	Symbol	ftscale_mat . xx		3199359						
ANR	3200003	Symbol	ftscale_mat . xy		3199359						
ANR	3200004	Symbol	yres		3199359						
ANR	3200005	Function	gs_fapi_ft_get_scaled_font	1126:0:37712:49298							
ANR	3200006	FunctionDef	"gs_fapi_ft_get_scaled_font (gs_fapi_server * a_server , gs_fapi_font * a_font , const gs_fapi_font_scale * a_font_scale , const char * a_map , gs_fapi_descendant_code a_descendant_code)"		3200005	0					
ANR	3200007	CompoundStatement		1130:0:37947:49298	3200005	0					
ANR	3200008	IdentifierDeclStatement	ff_server * s = ( ff_server * ) a_server ;	1131:4:37953:37990	3200005	0	True				
ANR	3200009	IdentifierDecl	* s = ( ff_server * ) a_server		3200005	0					
ANR	3200010	IdentifierDeclType	ff_server *		3200005	0					
ANR	3200011	Identifier	s		3200005	1					
ANR	3200012	AssignmentExpression	* s = ( ff_server * ) a_server		3200005	2		=			
ANR	3200013	Identifier	s		3200005	0					
ANR	3200014	CastExpression	( ff_server * ) a_server		3200005	1					
ANR	3200015	CastTarget	ff_server *		3200005	0					
ANR	3200016	Identifier	a_server		3200005	1					
ANR	3200017	IdentifierDeclStatement	ff_face * face = ( ff_face * ) a_font -> server_font_data ;	1132:4:37996:38048	3200005	1	True				
ANR	3200018	IdentifierDecl	* face = ( ff_face * ) a_font -> server_font_data		3200005	0					
ANR	3200019	IdentifierDeclType	ff_face *		3200005	0					
ANR	3200020	Identifier	face		3200005	1					
ANR	3200021	AssignmentExpression	* face = ( ff_face * ) a_font -> server_font_data		3200005	2		=			
ANR	3200022	Identifier	face		3200005	0					
ANR	3200023	CastExpression	( ff_face * ) a_font -> server_font_data		3200005	1					
ANR	3200024	CastTarget	ff_face *		3200005	0					
ANR	3200025	PtrMemberAccess	a_font -> server_font_data		3200005	1					
ANR	3200026	Identifier	a_font		3200005	0					
ANR	3200027	Identifier	server_font_data		3200005	1					
ANR	3200028	IdentifierDeclStatement	FT_Error ft_error = 0 ;	1133:4:38054:38075	3200005	2	True				
ANR	3200029	IdentifierDecl	ft_error = 0		3200005	0					
ANR	3200030	IdentifierDeclType	FT_Error		3200005	0					
ANR	3200031	Identifier	ft_error		3200005	1					
ANR	3200032	AssignmentExpression	ft_error = 0		3200005	2		=			
ANR	3200033	Identifier	ft_error		3200005	0					
ANR	3200034	PrimaryExpression	0		3200005	1					
ANR	3200035	IdentifierDeclStatement	"int i , j ;"	1134:4:38081:38089	3200005	3	True				
ANR	3200036	IdentifierDecl	i		3200005	0					
ANR	3200037	IdentifierDeclType	int		3200005	0					
ANR	3200038	Identifier	i		3200005	1					
ANR	3200039	IdentifierDecl	j		3200005	1					
ANR	3200040	IdentifierDeclType	int		3200005	0					
ANR	3200041	Identifier	j		3200005	1					
ANR	3200042	IdentifierDeclStatement	FT_CharMap cmap = NULL ;	1135:4:38095:38117	3200005	4	True				
ANR	3200043	IdentifierDecl	cmap = NULL		3200005	0					
ANR	3200044	IdentifierDeclType	FT_CharMap		3200005	0					
ANR	3200045	Identifier	cmap		3200005	1					
ANR	3200046	AssignmentExpression	cmap = NULL		3200005	2		=			
ANR	3200047	Identifier	NULL		3200005	0					
ANR	3200048	Identifier	NULL		3200005	1					
ANR	3200049	IdentifierDeclStatement	bool data_owned = true ;	1136:4:38123:38145	3200005	5	True				
ANR	3200050	IdentifierDecl	data_owned = true		3200005	0					
ANR	3200051	IdentifierDeclType	bool		3200005	0					
ANR	3200052	Identifier	data_owned		3200005	1					
ANR	3200053	AssignmentExpression	data_owned = true		3200005	2		=			
ANR	3200054	Identifier	true		3200005	0					
ANR	3200055	Identifier	true		3200005	1					
ANR	3200056	IfStatement	if ( s -> bitmap_glyph )		3200005	6					
ANR	3200057	Condition	s -> bitmap_glyph	1138:8:38156:38170	3200005	0	True				
ANR	3200058	PtrMemberAccess	s -> bitmap_glyph		3200005	0					
ANR	3200059	Identifier	s		3200005	0					
ANR	3200060	Identifier	bitmap_glyph		3200005	1					
ANR	3200061	CompoundStatement		9:25:225:225	3200005	1					
ANR	3200062	ExpressionStatement	"FT_Bitmap_Done ( s -> freetype_library , & s -> bitmap_glyph -> bitmap )"	1139:8:38183:38244	3200005	0	True				
ANR	3200063	CallExpression	"FT_Bitmap_Done ( s -> freetype_library , & s -> bitmap_glyph -> bitmap )"		3200005	0					
ANR	3200064	Callee	FT_Bitmap_Done		3200005	0					
ANR	3200065	Identifier	FT_Bitmap_Done		3200005	0					
ANR	3200066	ArgumentList	s -> freetype_library		3200005	1					
ANR	3200067	Argument	s -> freetype_library		3200005	0					
ANR	3200068	PtrMemberAccess	s -> freetype_library		3200005	0					
ANR	3200069	Identifier	s		3200005	0					
ANR	3200070	Identifier	freetype_library		3200005	1					
ANR	3200071	Argument	& s -> bitmap_glyph -> bitmap		3200005	1					
ANR	3200072	UnaryOperationExpression	& s -> bitmap_glyph -> bitmap		3200005	0					
ANR	3200073	UnaryOperator	&		3200005	0					
ANR	3200074	PtrMemberAccess	s -> bitmap_glyph -> bitmap		3200005	1					
ANR	3200075	PtrMemberAccess	s -> bitmap_glyph		3200005	0					
ANR	3200076	Identifier	s		3200005	0					
ANR	3200077	Identifier	bitmap_glyph		3200005	1					
ANR	3200078	Identifier	bitmap		3200005	1					
ANR	3200079	ExpressionStatement	"FF_free ( s -> ftmemory , s -> bitmap_glyph )"	1140:8:38254:38291	3200005	1	True				
ANR	3200080	CallExpression	"FF_free ( s -> ftmemory , s -> bitmap_glyph )"		3200005	0					
ANR	3200081	Callee	FF_free		3200005	0					
ANR	3200082	Identifier	FF_free		3200005	0					
ANR	3200083	ArgumentList	s -> ftmemory		3200005	1					
ANR	3200084	Argument	s -> ftmemory		3200005	0					
ANR	3200085	PtrMemberAccess	s -> ftmemory		3200005	0					
ANR	3200086	Identifier	s		3200005	0					
ANR	3200087	Identifier	ftmemory		3200005	1					
ANR	3200088	Argument	s -> bitmap_glyph		3200005	1					
ANR	3200089	PtrMemberAccess	s -> bitmap_glyph		3200005	0					
ANR	3200090	Identifier	s		3200005	0					
ANR	3200091	Identifier	bitmap_glyph		3200005	1					
ANR	3200092	ExpressionStatement	s -> bitmap_glyph = NULL	1141:8:38301:38323	3200005	2	True				
ANR	3200093	AssignmentExpression	s -> bitmap_glyph = NULL		3200005	0		=			
ANR	3200094	PtrMemberAccess	s -> bitmap_glyph		3200005	0					
ANR	3200095	Identifier	s		3200005	0					
ANR	3200096	Identifier	bitmap_glyph		3200005	1					
ANR	3200097	Identifier	NULL		3200005	1					
ANR	3200098	IfStatement	if ( s -> outline_glyph )		3200005	7					
ANR	3200099	Condition	s -> outline_glyph	1143:8:38339:38354	3200005	0	True				
ANR	3200100	PtrMemberAccess	s -> outline_glyph		3200005	0					
ANR	3200101	Identifier	s		3200005	0					
ANR	3200102	Identifier	outline_glyph		3200005	1					
ANR	3200103	CompoundStatement		14:26:409:409	3200005	1					
ANR	3200104	ExpressionStatement	"FT_Outline_Done ( s -> freetype_library , & s -> outline_glyph -> outline )"	1144:8:38367:38431	3200005	0	True				
ANR	3200105	CallExpression	"FT_Outline_Done ( s -> freetype_library , & s -> outline_glyph -> outline )"		3200005	0					
ANR	3200106	Callee	FT_Outline_Done		3200005	0					
ANR	3200107	Identifier	FT_Outline_Done		3200005	0					
ANR	3200108	ArgumentList	s -> freetype_library		3200005	1					
ANR	3200109	Argument	s -> freetype_library		3200005	0					
ANR	3200110	PtrMemberAccess	s -> freetype_library		3200005	0					
ANR	3200111	Identifier	s		3200005	0					
ANR	3200112	Identifier	freetype_library		3200005	1					
ANR	3200113	Argument	& s -> outline_glyph -> outline		3200005	1					
ANR	3200114	UnaryOperationExpression	& s -> outline_glyph -> outline		3200005	0					
ANR	3200115	UnaryOperator	&		3200005	0					
ANR	3200116	PtrMemberAccess	s -> outline_glyph -> outline		3200005	1					
ANR	3200117	PtrMemberAccess	s -> outline_glyph		3200005	0					
ANR	3200118	Identifier	s		3200005	0					
ANR	3200119	Identifier	outline_glyph		3200005	1					
ANR	3200120	Identifier	outline		3200005	1					
ANR	3200121	ExpressionStatement	"FF_free ( s -> ftmemory , s -> outline_glyph )"	1145:8:38441:38479	3200005	1	True				
ANR	3200122	CallExpression	"FF_free ( s -> ftmemory , s -> outline_glyph )"		3200005	0					
ANR	3200123	Callee	FF_free		3200005	0					
ANR	3200124	Identifier	FF_free		3200005	0					
ANR	3200125	ArgumentList	s -> ftmemory		3200005	1					
ANR	3200126	Argument	s -> ftmemory		3200005	0					
ANR	3200127	PtrMemberAccess	s -> ftmemory		3200005	0					
ANR	3200128	Identifier	s		3200005	0					
ANR	3200129	Identifier	ftmemory		3200005	1					
ANR	3200130	Argument	s -> outline_glyph		3200005	1					
ANR	3200131	PtrMemberAccess	s -> outline_glyph		3200005	0					
ANR	3200132	Identifier	s		3200005	0					
ANR	3200133	Identifier	outline_glyph		3200005	1					
ANR	3200134	ExpressionStatement	s -> outline_glyph = NULL	1146:8:38489:38512	3200005	2	True				
ANR	3200135	AssignmentExpression	s -> outline_glyph = NULL		3200005	0		=			
ANR	3200136	PtrMemberAccess	s -> outline_glyph		3200005	0					
ANR	3200137	Identifier	s		3200005	0					
ANR	3200138	Identifier	outline_glyph		3200005	1					
ANR	3200139	Identifier	NULL		3200005	1					
ANR	3200140	IfStatement	if ( a_font -> is_cid && a_font -> is_type1 && a_font -> font_file_path == NULL && ( a_descendant_code == gs_fapi_toplevel_begin || a_descendant_code == gs_fapi_toplevel_complete ) )		3200005	8					
ANR	3200141	Condition	a_font -> is_cid && a_font -> is_type1 && a_font -> font_file_path == NULL && ( a_descendant_code == gs_fapi_toplevel_begin || a_descendant_code == gs_fapi_toplevel_complete )	1156:8:38969:39155	3200005	0	True				
ANR	3200142	AndExpression	a_font -> is_cid && a_font -> is_type1 && a_font -> font_file_path == NULL && ( a_descendant_code == gs_fapi_toplevel_begin || a_descendant_code == gs_fapi_toplevel_complete )		3200005	0		&&			
ANR	3200143	PtrMemberAccess	a_font -> is_cid		3200005	0					
ANR	3200144	Identifier	a_font		3200005	0					
ANR	3200145	Identifier	is_cid		3200005	1					
ANR	3200146	AndExpression	a_font -> is_type1 && a_font -> font_file_path == NULL && ( a_descendant_code == gs_fapi_toplevel_begin || a_descendant_code == gs_fapi_toplevel_complete )		3200005	1		&&			
ANR	3200147	PtrMemberAccess	a_font -> is_type1		3200005	0					
ANR	3200148	Identifier	a_font		3200005	0					
ANR	3200149	Identifier	is_type1		3200005	1					
ANR	3200150	AndExpression	a_font -> font_file_path == NULL && ( a_descendant_code == gs_fapi_toplevel_begin || a_descendant_code == gs_fapi_toplevel_complete )		3200005	1		&&			
ANR	3200151	EqualityExpression	a_font -> font_file_path == NULL		3200005	0		==			
ANR	3200152	PtrMemberAccess	a_font -> font_file_path		3200005	0					
ANR	3200153	Identifier	a_font		3200005	0					
ANR	3200154	Identifier	font_file_path		3200005	1					
ANR	3200155	Identifier	NULL		3200005	1					
ANR	3200156	OrExpression	a_descendant_code == gs_fapi_toplevel_begin || a_descendant_code == gs_fapi_toplevel_complete		3200005	1		||			
ANR	3200157	EqualityExpression	a_descendant_code == gs_fapi_toplevel_begin		3200005	0		==			
ANR	3200158	Identifier	a_descendant_code		3200005	0					
ANR	3200159	Identifier	gs_fapi_toplevel_begin		3200005	1					
ANR	3200160	EqualityExpression	a_descendant_code == gs_fapi_toplevel_complete		3200005	1		==			
ANR	3200161	Identifier	a_descendant_code		3200005	0					
ANR	3200162	Identifier	gs_fapi_toplevel_complete		3200005	1					
ANR	3200163	CompoundStatement		29:64:1210:1210	3200005	1					
ANR	3200164	ReturnStatement	return 0 ;	1160:8:39228:39236	3200005	0	True				
ANR	3200165	PrimaryExpression	0		3200005	0					
ANR	3200166	IfStatement	if ( ! face )		3200005	9					
ANR	3200167	Condition	! face	1164:8:39308:39312	3200005	0	True				
ANR	3200168	UnaryOperationExpression	! face		3200005	0					
ANR	3200169	UnaryOperator	!		3200005	0					
ANR	3200170	Identifier	face		3200005	1					
ANR	3200171	CompoundStatement		41:8:1577:1601	3200005	1					
ANR	3200172	IdentifierDeclStatement	FT_Face ft_face = NULL ;	1165:8:39325:39347	3200005	0	True				
ANR	3200173	IdentifierDecl	ft_face = NULL		3200005	0					
ANR	3200174	IdentifierDeclType	FT_Face		3200005	0					
ANR	3200175	Identifier	ft_face		3200005	1					
ANR	3200176	AssignmentExpression	ft_face = NULL		3200005	2		=			
ANR	3200177	Identifier	NULL		3200005	0					
ANR	3200178	Identifier	NULL		3200005	1					
ANR	3200179	IdentifierDeclStatement	FT_Parameter ft_param ;	1166:8:39357:39378	3200005	1	True				
ANR	3200180	IdentifierDecl	ft_param		3200005	0					
ANR	3200181	IdentifierDeclType	FT_Parameter		3200005	0					
ANR	3200182	Identifier	ft_param		3200005	1					
ANR	3200183	IdentifierDeclStatement	FT_Incremental_InterfaceRec * ft_inc_int = NULL ;	1167:8:39388:39434	3200005	2	True				
ANR	3200184	IdentifierDecl	* ft_inc_int = NULL		3200005	0					
ANR	3200185	IdentifierDeclType	FT_Incremental_InterfaceRec *		3200005	0					
ANR	3200186	Identifier	ft_inc_int		3200005	1					
ANR	3200187	AssignmentExpression	* ft_inc_int = NULL		3200005	2		=			
ANR	3200188	Identifier	NULL		3200005	0					
ANR	3200189	Identifier	NULL		3200005	1					
ANR	3200190	IdentifierDeclStatement	unsigned char * own_font_data = NULL ;	1168:8:39444:39479	3200005	3	True				
ANR	3200191	IdentifierDecl	* own_font_data = NULL		3200005	0					
ANR	3200192	IdentifierDeclType	unsigned char *		3200005	0					
ANR	3200193	Identifier	own_font_data		3200005	1					
ANR	3200194	AssignmentExpression	* own_font_data = NULL		3200005	2		=			
ANR	3200195	Identifier	NULL		3200005	0					
ANR	3200196	Identifier	NULL		3200005	1					
ANR	3200197	IdentifierDeclStatement	int own_font_data_len = - 1 ;	1169:8:39489:39515	3200005	4	True				
ANR	3200198	IdentifierDecl	own_font_data_len = - 1		3200005	0					
ANR	3200199	IdentifierDeclType	int		3200005	0					
ANR	3200200	Identifier	own_font_data_len		3200005	1					
ANR	3200201	AssignmentExpression	own_font_data_len = - 1		3200005	2		=			
ANR	3200202	Identifier	own_font_data_len		3200005	0					
ANR	3200203	UnaryOperationExpression	- 1		3200005	1					
ANR	3200204	UnaryOperator	-		3200005	0					
ANR	3200205	PrimaryExpression	1		3200005	1					
ANR	3200206	IdentifierDeclStatement	FT_Stream ft_strm = NULL ;	1170:8:39525:39549	3200005	5	True				
ANR	3200207	IdentifierDecl	ft_strm = NULL		3200005	0					
ANR	3200208	IdentifierDeclType	FT_Stream		3200005	0					
ANR	3200209	Identifier	ft_strm		3200005	1					
ANR	3200210	AssignmentExpression	ft_strm = NULL		3200005	2		=			
ANR	3200211	Identifier	NULL		3200005	0					
ANR	3200212	Identifier	NULL		3200005	1					
ANR	3200213	IfStatement	if ( a_font -> full_font_buf )		3200005	6					
ANR	3200214	Condition	a_font -> full_font_buf	1174:12:39630:39650	3200005	0	True				
ANR	3200215	PtrMemberAccess	a_font -> full_font_buf		3200005	0					
ANR	3200216	Identifier	a_font		3200005	0					
ANR	3200217	Identifier	full_font_buf		3200005	1					
ANR	3200218	CompoundStatement		45:35:1705:1705	3200005	1					
ANR	3200219	ExpressionStatement	"own_font_data = gs_malloc ( ( ( gs_memory_t * ) ( s -> ftmemory -> user ) ) , a_font -> full_font_buf_len , 1 , ""gs_fapi_ft_get_scaled_font - full font buf"" )"	1176:12:39668:39876	3200005	0	True				
ANR	3200220	AssignmentExpression	"own_font_data = gs_malloc ( ( ( gs_memory_t * ) ( s -> ftmemory -> user ) ) , a_font -> full_font_buf_len , 1 , ""gs_fapi_ft_get_scaled_font - full font buf"" )"		3200005	0		=			
ANR	3200221	Identifier	own_font_data		3200005	0					
ANR	3200222	CallExpression	"gs_malloc ( ( ( gs_memory_t * ) ( s -> ftmemory -> user ) ) , a_font -> full_font_buf_len , 1 , ""gs_fapi_ft_get_scaled_font - full font buf"" )"		3200005	1					
ANR	3200223	Callee	gs_malloc		3200005	0					
ANR	3200224	Identifier	gs_malloc		3200005	0					
ANR	3200225	ArgumentList	( gs_memory_t * ) ( s -> ftmemory -> user )		3200005	1					
ANR	3200226	Argument	( gs_memory_t * ) ( s -> ftmemory -> user )		3200005	0					
ANR	3200227	CastExpression	( gs_memory_t * ) ( s -> ftmemory -> user )		3200005	0					
ANR	3200228	CastTarget	gs_memory_t *		3200005	0					
ANR	3200229	PtrMemberAccess	s -> ftmemory -> user		3200005	1					
ANR	3200230	PtrMemberAccess	s -> ftmemory		3200005	0					
ANR	3200231	Identifier	s		3200005	0					
ANR	3200232	Identifier	ftmemory		3200005	1					
ANR	3200233	Identifier	user		3200005	1					
ANR	3200234	Argument	a_font -> full_font_buf_len		3200005	1					
ANR	3200235	PtrMemberAccess	a_font -> full_font_buf_len		3200005	0					
ANR	3200236	Identifier	a_font		3200005	0					
ANR	3200237	Identifier	full_font_buf_len		3200005	1					
ANR	3200238	Argument	1		3200005	2					
ANR	3200239	PrimaryExpression	1		3200005	0					
ANR	3200240	Argument	"""gs_fapi_ft_get_scaled_font - full font buf"""		3200005	3					
ANR	3200241	PrimaryExpression	"""gs_fapi_ft_get_scaled_font - full font buf"""		3200005	0					
ANR	3200242	IfStatement	if ( ! own_font_data )		3200005	1					
ANR	3200243	Condition	! own_font_data	1180:16:39894:39907	3200005	0	True				
ANR	3200244	UnaryOperationExpression	! own_font_data		3200005	0					
ANR	3200245	UnaryOperator	!		3200005	0					
ANR	3200246	Identifier	own_font_data		3200005	1					
ANR	3200247	CompoundStatement		51:32:1962:1962	3200005	1					
ANR	3200248	ExpressionStatement	return_error ( gs_error_VMerror )	1181:16:39928:39958	3200005	0	True				
ANR	3200249	CallExpression	return_error ( gs_error_VMerror )		3200005	0					
ANR	3200250	Callee	return_error		3200005	0					
ANR	3200251	Identifier	return_error		3200005	0					
ANR	3200252	ArgumentList	gs_error_VMerror		3200005	1					
ANR	3200253	Argument	gs_error_VMerror		3200005	0					
ANR	3200254	Identifier	gs_error_VMerror		3200005	0					
ANR	3200255	ExpressionStatement	own_font_data_len = a_font -> full_font_buf_len	1184:12:39987:40032	3200005	2	True				
ANR	3200256	AssignmentExpression	own_font_data_len = a_font -> full_font_buf_len		3200005	0		=			
ANR	3200257	Identifier	own_font_data_len		3200005	0					
ANR	3200258	PtrMemberAccess	a_font -> full_font_buf_len		3200005	1					
ANR	3200259	Identifier	a_font		3200005	0					
ANR	3200260	Identifier	full_font_buf_len		3200005	1					
ANR	3200261	ExpressionStatement	"memcpy ( own_font_data , a_font -> full_font_buf , a_font -> full_font_buf_len )"	1185:12:40046:40136	3200005	3	True				
ANR	3200262	CallExpression	"memcpy ( own_font_data , a_font -> full_font_buf , a_font -> full_font_buf_len )"		3200005	0					
ANR	3200263	Callee	memcpy		3200005	0					
ANR	3200264	Identifier	memcpy		3200005	0					
ANR	3200265	ArgumentList	own_font_data		3200005	1					
ANR	3200266	Argument	own_font_data		3200005	0					
ANR	3200267	Identifier	own_font_data		3200005	0					
ANR	3200268	Argument	a_font -> full_font_buf		3200005	1					
ANR	3200269	PtrMemberAccess	a_font -> full_font_buf		3200005	0					
ANR	3200270	Identifier	a_font		3200005	0					
ANR	3200271	Identifier	full_font_buf		3200005	1					
ANR	3200272	Argument	a_font -> full_font_buf_len		3200005	2					
ANR	3200273	PtrMemberAccess	a_font -> full_font_buf_len		3200005	0					
ANR	3200274	Identifier	a_font		3200005	0					
ANR	3200275	Identifier	full_font_buf_len		3200005	1					
ANR	3200276	ExpressionStatement	"ft_error = FT_New_Memory_Face ( s -> freetype_library , ( const FT_Byte * ) own_font_data , own_font_data_len , a_font -> subfont , & ft_face )"	1188:12:40151:40400	3200005	4	True				
ANR	3200277	AssignmentExpression	"ft_error = FT_New_Memory_Face ( s -> freetype_library , ( const FT_Byte * ) own_font_data , own_font_data_len , a_font -> subfont , & ft_face )"		3200005	0		=			
ANR	3200278	Identifier	ft_error		3200005	0					
ANR	3200279	CallExpression	"FT_New_Memory_Face ( s -> freetype_library , ( const FT_Byte * ) own_font_data , own_font_data_len , a_font -> subfont , & ft_face )"		3200005	1					
ANR	3200280	Callee	FT_New_Memory_Face		3200005	0					
ANR	3200281	Identifier	FT_New_Memory_Face		3200005	0					
ANR	3200282	ArgumentList	s -> freetype_library		3200005	1					
ANR	3200283	Argument	s -> freetype_library		3200005	0					
ANR	3200284	PtrMemberAccess	s -> freetype_library		3200005	0					
ANR	3200285	Identifier	s		3200005	0					
ANR	3200286	Identifier	freetype_library		3200005	1					
ANR	3200287	Argument	( const FT_Byte * ) own_font_data		3200005	1					
ANR	3200288	CastExpression	( const FT_Byte * ) own_font_data		3200005	0					
ANR	3200289	CastTarget	const FT_Byte *		3200005	0					
ANR	3200290	Identifier	own_font_data		3200005	1					
ANR	3200291	Argument	own_font_data_len		3200005	2					
ANR	3200292	Identifier	own_font_data_len		3200005	0					
ANR	3200293	Argument	a_font -> subfont		3200005	3					
ANR	3200294	PtrMemberAccess	a_font -> subfont		3200005	0					
ANR	3200295	Identifier	a_font		3200005	0					
ANR	3200296	Identifier	subfont		3200005	1					
ANR	3200297	Argument	& ft_face		3200005	4					
ANR	3200298	UnaryOperationExpression	& ft_face		3200005	0					
ANR	3200299	UnaryOperator	&		3200005	0					
ANR	3200300	Identifier	ft_face		3200005	1					
ANR	3200301	IfStatement	if ( ft_error )		3200005	5					
ANR	3200302	Condition	ft_error	1194:16:40419:40426	3200005	0	True				
ANR	3200303	Identifier	ft_error		3200005	0					
ANR	3200304	CompoundStatement		66:16:2499:2552	3200005	1					
ANR	3200305	IdentifierDeclStatement	gs_memory_t * mem = ( gs_memory_t * ) s -> ftmemory -> user ;	1195:16:40447:40500	3200005	0	True				
ANR	3200306	IdentifierDecl	* mem = ( gs_memory_t * ) s -> ftmemory -> user		3200005	0					
ANR	3200307	IdentifierDeclType	gs_memory_t *		3200005	0					
ANR	3200308	Identifier	mem		3200005	1					
ANR	3200309	AssignmentExpression	* mem = ( gs_memory_t * ) s -> ftmemory -> user		3200005	2		=			
ANR	3200310	Identifier	mem		3200005	0					
ANR	3200311	CastExpression	( gs_memory_t * ) s -> ftmemory -> user		3200005	1					
ANR	3200312	CastTarget	gs_memory_t *		3200005	0					
ANR	3200313	PtrMemberAccess	s -> ftmemory -> user		3200005	1					
ANR	3200314	PtrMemberAccess	s -> ftmemory		3200005	0					
ANR	3200315	Identifier	s		3200005	0					
ANR	3200316	Identifier	ftmemory		3200005	1					
ANR	3200317	Identifier	user		3200005	1					
ANR	3200318	ExpressionStatement	"gs_free ( mem , own_font_data , 0 , 0 , ""FF_open_read_stream"" )"	1196:16:40518:40574	3200005	1	True				
ANR	3200319	CallExpression	"gs_free ( mem , own_font_data , 0 , 0 , ""FF_open_read_stream"" )"		3200005	0					
ANR	3200320	Callee	gs_free		3200005	0					
ANR	3200321	Identifier	gs_free		3200005	0					
ANR	3200322	ArgumentList	mem		3200005	1					
ANR	3200323	Argument	mem		3200005	0					
ANR	3200324	Identifier	mem		3200005	0					
ANR	3200325	Argument	own_font_data		3200005	1					
ANR	3200326	Identifier	own_font_data		3200005	0					
ANR	3200327	Argument	0		3200005	2					
ANR	3200328	PrimaryExpression	0		3200005	0					
ANR	3200329	Argument	0		3200005	3					
ANR	3200330	PrimaryExpression	0		3200005	0					
ANR	3200331	Argument	"""FF_open_read_stream"""		3200005	4					
ANR	3200332	PrimaryExpression	"""FF_open_read_stream"""		3200005	0					
ANR	3200333	ReturnStatement	return ft_to_gs_error ( ft_error ) ;	1197:16:40592:40623	3200005	2	True				
ANR	3200334	CallExpression	ft_to_gs_error ( ft_error )		3200005	0					
ANR	3200335	Callee	ft_to_gs_error		3200005	0					
ANR	3200336	Identifier	ft_to_gs_error		3200005	0					
ANR	3200337	ArgumentList	ft_error		3200005	1					
ANR	3200338	Argument	ft_error		3200005	0					
ANR	3200339	Identifier	ft_error		3200005	0					
ANR	3200340	ElseStatement	else		3200005	0					
ANR	3200341	IfStatement	if ( a_font -> font_file_path )		3200005	0					
ANR	3200342	Condition	a_font -> font_file_path	1201:17:40709:40730	3200005	0	True				
ANR	3200343	PtrMemberAccess	a_font -> font_file_path		3200005	0					
ANR	3200344	Identifier	a_font		3200005	0					
ANR	3200345	Identifier	font_file_path		3200005	1					
ANR	3200346	CompoundStatement		74:12:2830:2838	3200005	1					
ANR	3200347	IdentifierDeclStatement	FT_Open_Args args ;	1202:12:40747:40764	3200005	0	True				
ANR	3200348	IdentifierDecl	args		3200005	0					
ANR	3200349	IdentifierDeclType	FT_Open_Args		3200005	0					
ANR	3200350	Identifier	args		3200005	1					
ANR	3200351	IdentifierDeclStatement	int code ;	1203:12:40778:40786	3200005	1	True				
ANR	3200352	IdentifierDecl	code		3200005	0					
ANR	3200353	IdentifierDeclType	int		3200005	0					
ANR	3200354	Identifier	code		3200005	1					
ANR	3200355	ExpressionStatement	"memset ( & args , 0x00 , sizeof ( args ) )"	1205:12:40801:40834	3200005	2	True				
ANR	3200356	CallExpression	"memset ( & args , 0x00 , sizeof ( args ) )"		3200005	0					
ANR	3200357	Callee	memset		3200005	0					
ANR	3200358	Identifier	memset		3200005	0					
ANR	3200359	ArgumentList	& args		3200005	1					
ANR	3200360	Argument	& args		3200005	0					
ANR	3200361	UnaryOperationExpression	& args		3200005	0					
ANR	3200362	UnaryOperator	&		3200005	0					
ANR	3200363	Identifier	args		3200005	1					
ANR	3200364	Argument	0x00		3200005	1					
ANR	3200365	PrimaryExpression	0x00		3200005	0					
ANR	3200366	Argument	sizeof ( args )		3200005	2					
ANR	3200367	SizeofExpression	sizeof ( args )		3200005	0					
ANR	3200368	Sizeof	sizeof		3200005	0					
ANR	3200369	SizeofOperand	args		3200005	1					
ANR	3200370	IfStatement	"if ( ( code = FF_open_read_stream ( ( gs_memory_t * ) ( s -> ftmemory -> user ) , ( char * ) a_font -> font_file_path , & ft_strm ) ) < 0 )"		3200005	3					
ANR	3200371	Condition	"( code = FF_open_read_stream ( ( gs_memory_t * ) ( s -> ftmemory -> user ) , ( char * ) a_font -> font_file_path , & ft_strm ) ) < 0"	1207:16:40853:41054	3200005	0	True				
ANR	3200372	RelationalExpression	"( code = FF_open_read_stream ( ( gs_memory_t * ) ( s -> ftmemory -> user ) , ( char * ) a_font -> font_file_path , & ft_strm ) ) < 0"		3200005	0		<			
ANR	3200373	AssignmentExpression	"code = FF_open_read_stream ( ( gs_memory_t * ) ( s -> ftmemory -> user ) , ( char * ) a_font -> font_file_path , & ft_strm )"		3200005	0		=			
ANR	3200374	Identifier	code		3200005	0					
ANR	3200375	CallExpression	"FF_open_read_stream ( ( gs_memory_t * ) ( s -> ftmemory -> user ) , ( char * ) a_font -> font_file_path , & ft_strm )"		3200005	1					
ANR	3200376	Callee	FF_open_read_stream		3200005	0					
ANR	3200377	Identifier	FF_open_read_stream		3200005	0					
ANR	3200378	ArgumentList	( gs_memory_t * ) ( s -> ftmemory -> user )		3200005	1					
ANR	3200379	Argument	( gs_memory_t * ) ( s -> ftmemory -> user )		3200005	0					
ANR	3200380	CastExpression	( gs_memory_t * ) ( s -> ftmemory -> user )		3200005	0					
ANR	3200381	CastTarget	gs_memory_t *		3200005	0					
ANR	3200382	PtrMemberAccess	s -> ftmemory -> user		3200005	1					
ANR	3200383	PtrMemberAccess	s -> ftmemory		3200005	0					
ANR	3200384	Identifier	s		3200005	0					
ANR	3200385	Identifier	ftmemory		3200005	1					
ANR	3200386	Identifier	user		3200005	1					
ANR	3200387	Argument	( char * ) a_font -> font_file_path		3200005	1					
ANR	3200388	CastExpression	( char * ) a_font -> font_file_path		3200005	0					
ANR	3200389	CastTarget	char *		3200005	0					
ANR	3200390	PtrMemberAccess	a_font -> font_file_path		3200005	1					
ANR	3200391	Identifier	a_font		3200005	0					
ANR	3200392	Identifier	font_file_path		3200005	1					
ANR	3200393	Argument	& ft_strm		3200005	2					
ANR	3200394	UnaryOperationExpression	& ft_strm		3200005	0					
ANR	3200395	UnaryOperator	&		3200005	0					
ANR	3200396	Identifier	ft_strm		3200005	1					
ANR	3200397	PrimaryExpression	0		3200005	1					
ANR	3200398	CompoundStatement		81:53:3109:3109	3200005	1					
ANR	3200399	ReturnStatement	return ( code ) ;	1211:16:41075:41088	3200005	0	True				
ANR	3200400	Identifier	code		3200005	0					
ANR	3200401	ExpressionStatement	args . flags = FT_OPEN_STREAM	1214:12:41117:41144	3200005	4	True				
ANR	3200402	AssignmentExpression	args . flags = FT_OPEN_STREAM		3200005	0		=			
ANR	3200403	MemberAccess	args . flags		3200005	0					
ANR	3200404	Identifier	args		3200005	0					
ANR	3200405	Identifier	flags		3200005	1					
ANR	3200406	Identifier	FT_OPEN_STREAM		3200005	1					
ANR	3200407	ExpressionStatement	args . stream = ft_strm	1215:12:41158:41179	3200005	5	True				
ANR	3200408	AssignmentExpression	args . stream = ft_strm		3200005	0		=			
ANR	3200409	MemberAccess	args . stream		3200005	0					
ANR	3200410	Identifier	args		3200005	0					
ANR	3200411	Identifier	stream		3200005	1					
ANR	3200412	Identifier	ft_strm		3200005	1					
ANR	3200413	ExpressionStatement	"ft_error = FT_Open_Face ( s -> freetype_library , & args , a_font -> subfont , & ft_face )"	1217:12:41194:41317	3200005	6	True				
ANR	3200414	AssignmentExpression	"ft_error = FT_Open_Face ( s -> freetype_library , & args , a_font -> subfont , & ft_face )"		3200005	0		=			
ANR	3200415	Identifier	ft_error		3200005	0					
ANR	3200416	CallExpression	"FT_Open_Face ( s -> freetype_library , & args , a_font -> subfont , & ft_face )"		3200005	1					
ANR	3200417	Callee	FT_Open_Face		3200005	0					
ANR	3200418	Identifier	FT_Open_Face		3200005	0					
ANR	3200419	ArgumentList	s -> freetype_library		3200005	1					
ANR	3200420	Argument	s -> freetype_library		3200005	0					
ANR	3200421	PtrMemberAccess	s -> freetype_library		3200005	0					
ANR	3200422	Identifier	s		3200005	0					
ANR	3200423	Identifier	freetype_library		3200005	1					
ANR	3200424	Argument	& args		3200005	1					
ANR	3200425	UnaryOperationExpression	& args		3200005	0					
ANR	3200426	UnaryOperator	&		3200005	0					
ANR	3200427	Identifier	args		3200005	1					
ANR	3200428	Argument	a_font -> subfont		3200005	2					
ANR	3200429	PtrMemberAccess	a_font -> subfont		3200005	0					
ANR	3200430	Identifier	a_font		3200005	0					
ANR	3200431	Identifier	subfont		3200005	1					
ANR	3200432	Argument	& ft_face		3200005	3					
ANR	3200433	UnaryOperationExpression	& ft_face		3200005	0					
ANR	3200434	UnaryOperator	&		3200005	0					
ANR	3200435	Identifier	ft_face		3200005	1					
ANR	3200436	IfStatement	if ( ft_error )		3200005	7					
ANR	3200437	Condition	ft_error	1220:16:41335:41342	3200005	0	True				
ANR	3200438	Identifier	ft_error		3200005	0					
ANR	3200439	CompoundStatement		91:26:3397:3397	3200005	1					
ANR	3200440	ReturnStatement	return ft_to_gs_error ( ft_error ) ;	1222:16:41446:41477	3200005	0	True				
ANR	3200441	CallExpression	ft_to_gs_error ( ft_error )		3200005	0					
ANR	3200442	Callee	ft_to_gs_error		3200005	0					
ANR	3200443	Identifier	ft_to_gs_error		3200005	0					
ANR	3200444	ArgumentList	ft_error		3200005	1					
ANR	3200445	Argument	ft_error		3200005	0					
ANR	3200446	Identifier	ft_error		3200005	0					
ANR	3200447	ElseStatement	else		3200005	0					
ANR	3200448	CompoundStatement		99:12:3660:3682	3200005	0					
ANR	3200449	IdentifierDeclStatement	FT_Open_Args open_args ;	1228:12:41608:41630	3200005	0	True				
ANR	3200450	IdentifierDecl	open_args		3200005	0					
ANR	3200451	IdentifierDeclType	FT_Open_Args		3200005	0					
ANR	3200452	Identifier	open_args		3200005	1					
ANR	3200453	ExpressionStatement	open_args . flags = FT_OPEN_MEMORY	1230:12:41645:41677	3200005	1	True				
ANR	3200454	AssignmentExpression	open_args . flags = FT_OPEN_MEMORY		3200005	0		=			
ANR	3200455	MemberAccess	open_args . flags		3200005	0					
ANR	3200456	Identifier	open_args		3200005	0					
ANR	3200457	Identifier	flags		3200005	1					
ANR	3200458	Identifier	FT_OPEN_MEMORY		3200005	1					
ANR	3200459	ExpressionStatement	open_args . stream = NULL	1231:12:41691:41714	3200005	2	True				
ANR	3200460	AssignmentExpression	open_args . stream = NULL		3200005	0		=			
ANR	3200461	MemberAccess	open_args . stream		3200005	0					
ANR	3200462	Identifier	open_args		3200005	0					
ANR	3200463	Identifier	stream		3200005	1					
ANR	3200464	Identifier	NULL		3200005	1					
ANR	3200465	IfStatement	if ( a_font -> is_type1 )		3200005	3					
ANR	3200466	Condition	a_font -> is_type1	1233:16:41733:41748	3200005	0	True				
ANR	3200467	PtrMemberAccess	a_font -> is_type1		3200005	0					
ANR	3200468	Identifier	a_font		3200005	0					
ANR	3200469	Identifier	is_type1		3200005	1					
ANR	3200470	CompoundStatement		106:16:3850:3976	3200005	1					
ANR	3200471	IdentifierDeclStatement	long length ;	1234:16:41769:41780	3200005	0	True				
ANR	3200472	IdentifierDecl	length		3200005	0					
ANR	3200473	IdentifierDeclType	long		3200005	0					
ANR	3200474	Identifier	length		3200005	1					
ANR	3200475	IdentifierDeclStatement	"int type = a_font -> get_word ( a_font , gs_fapi_font_feature_FontType , 0 ) ;"	1235:16:41798:41924	3200005	1	True				
ANR	3200476	IdentifierDecl	"type = a_font -> get_word ( a_font , gs_fapi_font_feature_FontType , 0 )"		3200005	0					
ANR	3200477	IdentifierDeclType	int		3200005	0					
ANR	3200478	Identifier	type		3200005	1					
ANR	3200479	AssignmentExpression	"type = a_font -> get_word ( a_font , gs_fapi_font_feature_FontType , 0 )"		3200005	2		=			
ANR	3200480	Identifier	type		3200005	0					
ANR	3200481	CallExpression	"a_font -> get_word ( a_font , gs_fapi_font_feature_FontType , 0 )"		3200005	1					
ANR	3200482	Callee	a_font -> get_word		3200005	0					
ANR	3200483	PtrMemberAccess	a_font -> get_word		3200005	0					
ANR	3200484	Identifier	a_font		3200005	0					
ANR	3200485	Identifier	get_word		3200005	1					
ANR	3200486	ArgumentList	a_font		3200005	1					
ANR	3200487	Argument	a_font		3200005	0					
ANR	3200488	Identifier	a_font		3200005	0					
ANR	3200489	Argument	gs_fapi_font_feature_FontType		3200005	1					
ANR	3200490	Identifier	gs_fapi_font_feature_FontType		3200005	0					
ANR	3200491	Argument	0		3200005	2					
ANR	3200492	PrimaryExpression	0		3200005	0					
ANR	3200493	ExpressionStatement	a_font -> need_decrypt = true	1240:16:42030:42057	3200005	2	True				
ANR	3200494	AssignmentExpression	a_font -> need_decrypt = true		3200005	0		=			
ANR	3200495	PtrMemberAccess	a_font -> need_decrypt		3200005	0					
ANR	3200496	Identifier	a_font		3200005	0					
ANR	3200497	Identifier	need_decrypt		3200005	1					
ANR	3200498	Identifier	true		3200005	1					
ANR	3200499	IfStatement	if ( type == 1 )		3200005	3					
ANR	3200500	Condition	type == 1	1246:20:42271:42279	3200005	0	True				
ANR	3200501	EqualityExpression	type == 1		3200005	0		==			
ANR	3200502	Identifier	type		3200005	0					
ANR	3200503	PrimaryExpression	1		3200005	1					
ANR	3200504	ExpressionStatement	"length = gs_fapi_serialize_type1_font ( a_font , NULL , 0 )"	1247:20:42302:42356	3200005	1	True				
ANR	3200505	AssignmentExpression	"length = gs_fapi_serialize_type1_font ( a_font , NULL , 0 )"		3200005	0		=			
ANR	3200506	Identifier	length		3200005	0					
ANR	3200507	CallExpression	"gs_fapi_serialize_type1_font ( a_font , NULL , 0 )"		3200005	1					
ANR	3200508	Callee	gs_fapi_serialize_type1_font		3200005	0					
ANR	3200509	Identifier	gs_fapi_serialize_type1_font		3200005	0					
ANR	3200510	ArgumentList	a_font		3200005	1					
ANR	3200511	Argument	a_font		3200005	0					
ANR	3200512	Identifier	a_font		3200005	0					
ANR	3200513	Argument	NULL		3200005	1					
ANR	3200514	Identifier	NULL		3200005	0					
ANR	3200515	Argument	0		3200005	2					
ANR	3200516	PrimaryExpression	0		3200005	0					
ANR	3200517	ElseStatement	else		3200005	0					
ANR	3200518	ExpressionStatement	"length = gs_fapi_serialize_type2_font ( a_font , NULL , 0 )"	1249:20:42399:42453	3200005	0	True				
ANR	3200519	AssignmentExpression	"length = gs_fapi_serialize_type2_font ( a_font , NULL , 0 )"		3200005	0		=			
ANR	3200520	Identifier	length		3200005	0					
ANR	3200521	CallExpression	"gs_fapi_serialize_type2_font ( a_font , NULL , 0 )"		3200005	1					
ANR	3200522	Callee	gs_fapi_serialize_type2_font		3200005	0					
ANR	3200523	Identifier	gs_fapi_serialize_type2_font		3200005	0					
ANR	3200524	ArgumentList	a_font		3200005	1					
ANR	3200525	Argument	a_font		3200005	0					
ANR	3200526	Identifier	a_font		3200005	0					
ANR	3200527	Argument	NULL		3200005	1					
ANR	3200528	Identifier	NULL		3200005	0					
ANR	3200529	Argument	0		3200005	2					
ANR	3200530	PrimaryExpression	0		3200005	0					
ANR	3200531	ExpressionStatement	"open_args . memory_base = own_font_data = FF_alloc ( s -> ftmemory , length )"	1250:16:42471:42560	3200005	4	True				
ANR	3200532	AssignmentExpression	"open_args . memory_base = own_font_data = FF_alloc ( s -> ftmemory , length )"		3200005	0		=			
ANR	3200533	MemberAccess	open_args . memory_base		3200005	0					
ANR	3200534	Identifier	open_args		3200005	0					
ANR	3200535	Identifier	memory_base		3200005	1					
ANR	3200536	AssignmentExpression	"own_font_data = FF_alloc ( s -> ftmemory , length )"		3200005	1		=			
ANR	3200537	Identifier	own_font_data		3200005	0					
ANR	3200538	CallExpression	"FF_alloc ( s -> ftmemory , length )"		3200005	1					
ANR	3200539	Callee	FF_alloc		3200005	0					
ANR	3200540	Identifier	FF_alloc		3200005	0					
ANR	3200541	ArgumentList	s -> ftmemory		3200005	1					
ANR	3200542	Argument	s -> ftmemory		3200005	0					
ANR	3200543	PtrMemberAccess	s -> ftmemory		3200005	0					
ANR	3200544	Identifier	s		3200005	0					
ANR	3200545	Identifier	ftmemory		3200005	1					
ANR	3200546	Argument	length		3200005	1					
ANR	3200547	Identifier	length		3200005	0					
ANR	3200548	IfStatement	if ( ! open_args . memory_base )		3200005	5					
ANR	3200549	Condition	! open_args . memory_base	1252:20:42582:42603	3200005	0	True				
ANR	3200550	UnaryOperationExpression	! open_args . memory_base		3200005	0					
ANR	3200551	UnaryOperator	!		3200005	0					
ANR	3200552	MemberAccess	open_args . memory_base		3200005	1					
ANR	3200553	Identifier	open_args		3200005	0					
ANR	3200554	Identifier	memory_base		3200005	1					
ANR	3200555	ExpressionStatement	return_error ( gs_error_VMerror )	1253:20:42626:42656	3200005	1	True				
ANR	3200556	CallExpression	return_error ( gs_error_VMerror )		3200005	0					
ANR	3200557	Callee	return_error		3200005	0					
ANR	3200558	Identifier	return_error		3200005	0					
ANR	3200559	ArgumentList	gs_error_VMerror		3200005	1					
ANR	3200560	Argument	gs_error_VMerror		3200005	0					
ANR	3200561	Identifier	gs_error_VMerror		3200005	0					
ANR	3200562	ExpressionStatement	own_font_data_len = length	1254:16:42674:42700	3200005	6	True				
ANR	3200563	AssignmentExpression	own_font_data_len = length		3200005	0		=			
ANR	3200564	Identifier	own_font_data_len		3200005	0					
ANR	3200565	Identifier	length		3200005	1					
ANR	3200566	IfStatement	if ( type == 1 )		3200005	7					
ANR	3200567	Condition	type == 1	1255:20:42722:42730	3200005	0	True				
ANR	3200568	EqualityExpression	type == 1		3200005	0		==			
ANR	3200569	Identifier	type		3200005	0					
ANR	3200570	PrimaryExpression	1		3200005	1					
ANR	3200571	ExpressionStatement	"open_args . memory_size = gs_fapi_serialize_type1_font ( a_font , own_font_data , length )"	1256:20:42753:42913	3200005	1	True				
ANR	3200572	AssignmentExpression	"open_args . memory_size = gs_fapi_serialize_type1_font ( a_font , own_font_data , length )"		3200005	0		=			
ANR	3200573	MemberAccess	open_args . memory_size		3200005	0					
ANR	3200574	Identifier	open_args		3200005	0					
ANR	3200575	Identifier	memory_size		3200005	1					
ANR	3200576	CallExpression	"gs_fapi_serialize_type1_font ( a_font , own_font_data , length )"		3200005	1					
ANR	3200577	Callee	gs_fapi_serialize_type1_font		3200005	0					
ANR	3200578	Identifier	gs_fapi_serialize_type1_font		3200005	0					
ANR	3200579	ArgumentList	a_font		3200005	1					
ANR	3200580	Argument	a_font		3200005	0					
ANR	3200581	Identifier	a_font		3200005	0					
ANR	3200582	Argument	own_font_data		3200005	1					
ANR	3200583	Identifier	own_font_data		3200005	0					
ANR	3200584	Argument	length		3200005	2					
ANR	3200585	Identifier	length		3200005	0					
ANR	3200586	ElseStatement	else		3200005	0					
ANR	3200587	ExpressionStatement	"open_args . memory_size = gs_fapi_serialize_type2_font ( a_font , own_font_data , length )"	1260:20:42956:43116	3200005	0	True				
ANR	3200588	AssignmentExpression	"open_args . memory_size = gs_fapi_serialize_type2_font ( a_font , own_font_data , length )"		3200005	0		=			
ANR	3200589	MemberAccess	open_args . memory_size		3200005	0					
ANR	3200590	Identifier	open_args		3200005	0					
ANR	3200591	Identifier	memory_size		3200005	1					
ANR	3200592	CallExpression	"gs_fapi_serialize_type2_font ( a_font , own_font_data , length )"		3200005	1					
ANR	3200593	Callee	gs_fapi_serialize_type2_font		3200005	0					
ANR	3200594	Identifier	gs_fapi_serialize_type2_font		3200005	0					
ANR	3200595	ArgumentList	a_font		3200005	1					
ANR	3200596	Argument	a_font		3200005	0					
ANR	3200597	Identifier	a_font		3200005	0					
ANR	3200598	Argument	own_font_data		3200005	1					
ANR	3200599	Identifier	own_font_data		3200005	0					
ANR	3200600	Argument	length		3200005	2					
ANR	3200601	Identifier	length		3200005	0					
ANR	3200602	IfStatement	if ( open_args . memory_size != length )		3200005	8					
ANR	3200603	Condition	open_args . memory_size != length	1263:20:43138:43168	3200005	0	True				
ANR	3200604	EqualityExpression	open_args . memory_size != length		3200005	0		!=			
ANR	3200605	MemberAccess	open_args . memory_size		3200005	0					
ANR	3200606	Identifier	open_args		3200005	0					
ANR	3200607	Identifier	memory_size		3200005	1					
ANR	3200608	Identifier	length		3200005	1					
ANR	3200609	ExpressionStatement	return_error ( gs_error_unregistered )	1264:20:43191:43226	3200005	1	True				
ANR	3200610	CallExpression	return_error ( gs_error_unregistered )		3200005	0					
ANR	3200611	Callee	return_error		3200005	0					
ANR	3200612	Identifier	return_error		3200005	0					
ANR	3200613	ArgumentList	gs_error_unregistered		3200005	1					
ANR	3200614	Argument	gs_error_unregistered		3200005	0					
ANR	3200615	Identifier	gs_error_unregistered		3200005	0					
ANR	3200616	ExpressionStatement	"ft_inc_int = new_inc_int ( a_server , a_font )"	1265:16:43274:43316	3200005	9	True				
ANR	3200617	AssignmentExpression	"ft_inc_int = new_inc_int ( a_server , a_font )"		3200005	0		=			
ANR	3200618	Identifier	ft_inc_int		3200005	0					
ANR	3200619	CallExpression	"new_inc_int ( a_server , a_font )"		3200005	1					
ANR	3200620	Callee	new_inc_int		3200005	0					
ANR	3200621	Identifier	new_inc_int		3200005	0					
ANR	3200622	ArgumentList	a_server		3200005	1					
ANR	3200623	Argument	a_server		3200005	0					
ANR	3200624	Identifier	a_server		3200005	0					
ANR	3200625	Argument	a_font		3200005	1					
ANR	3200626	Identifier	a_font		3200005	0					
ANR	3200627	IfStatement	if ( ! ft_inc_int )		3200005	10					
ANR	3200628	Condition	! ft_inc_int	1266:20:43338:43348	3200005	0	True				
ANR	3200629	UnaryOperationExpression	! ft_inc_int		3200005	0					
ANR	3200630	UnaryOperator	!		3200005	0					
ANR	3200631	Identifier	ft_inc_int		3200005	1					
ANR	3200632	CompoundStatement		137:33:5403:5403	3200005	1					
ANR	3200633	ExpressionStatement	"FF_free ( s -> ftmemory , own_font_data )"	1267:20:43373:43408	3200005	0	True				
ANR	3200634	CallExpression	"FF_free ( s -> ftmemory , own_font_data )"		3200005	0					
ANR	3200635	Callee	FF_free		3200005	0					
ANR	3200636	Identifier	FF_free		3200005	0					
ANR	3200637	ArgumentList	s -> ftmemory		3200005	1					
ANR	3200638	Argument	s -> ftmemory		3200005	0					
ANR	3200639	PtrMemberAccess	s -> ftmemory		3200005	0					
ANR	3200640	Identifier	s		3200005	0					
ANR	3200641	Identifier	ftmemory		3200005	1					
ANR	3200642	Argument	own_font_data		3200005	1					
ANR	3200643	Identifier	own_font_data		3200005	0					
ANR	3200644	ExpressionStatement	return_error ( gs_error_VMerror )	1268:20:43430:43460	3200005	1	True				
ANR	3200645	CallExpression	return_error ( gs_error_VMerror )		3200005	0					
ANR	3200646	Callee	return_error		3200005	0					
ANR	3200647	Identifier	return_error		3200005	0					
ANR	3200648	ArgumentList	gs_error_VMerror		3200005	1					
ANR	3200649	Argument	gs_error_VMerror		3200005	0					
ANR	3200650	Identifier	gs_error_VMerror		3200005	0					
ANR	3200651	ElseStatement	else		3200005	0					
ANR	3200652	CompoundStatement		144:17:5645:5645	3200005	0					
ANR	3200653	ExpressionStatement	"open_args . memory_size = a_font -> get_long ( a_font , gs_fapi_font_feature_TT_size , 0 )"	1275:16:43670:43771	3200005	0	True				
ANR	3200654	AssignmentExpression	"open_args . memory_size = a_font -> get_long ( a_font , gs_fapi_font_feature_TT_size , 0 )"		3200005	0		=			
ANR	3200655	MemberAccess	open_args . memory_size		3200005	0					
ANR	3200656	Identifier	open_args		3200005	0					
ANR	3200657	Identifier	memory_size		3200005	1					
ANR	3200658	CallExpression	"a_font -> get_long ( a_font , gs_fapi_font_feature_TT_size , 0 )"		3200005	1					
ANR	3200659	Callee	a_font -> get_long		3200005	0					
ANR	3200660	PtrMemberAccess	a_font -> get_long		3200005	0					
ANR	3200661	Identifier	a_font		3200005	0					
ANR	3200662	Identifier	get_long		3200005	1					
ANR	3200663	ArgumentList	a_font		3200005	1					
ANR	3200664	Argument	a_font		3200005	0					
ANR	3200665	Identifier	a_font		3200005	0					
ANR	3200666	Argument	gs_fapi_font_feature_TT_size		3200005	1					
ANR	3200667	Identifier	gs_fapi_font_feature_TT_size		3200005	0					
ANR	3200668	Argument	0		3200005	2					
ANR	3200669	PrimaryExpression	0		3200005	0					
ANR	3200670	IfStatement	if ( open_args . memory_size == 0 )		3200005	1					
ANR	3200671	Condition	open_args . memory_size == 0	1277:20:43793:43818	3200005	0	True				
ANR	3200672	EqualityExpression	open_args . memory_size == 0		3200005	0		==			
ANR	3200673	MemberAccess	open_args . memory_size		3200005	0					
ANR	3200674	Identifier	open_args		3200005	0					
ANR	3200675	Identifier	memory_size		3200005	1					
ANR	3200676	PrimaryExpression	0		3200005	1					
ANR	3200677	ExpressionStatement	return_error ( gs_error_invalidfont )	1278:20:43841:43875	3200005	1	True				
ANR	3200678	CallExpression	return_error ( gs_error_invalidfont )		3200005	0					
ANR	3200679	Callee	return_error		3200005	0					
ANR	3200680	Identifier	return_error		3200005	0					
ANR	3200681	ArgumentList	gs_error_invalidfont		3200005	1					
ANR	3200682	Argument	gs_error_invalidfont		3200005	0					
ANR	3200683	Identifier	gs_error_invalidfont		3200005	0					
ANR	3200684	ExpressionStatement	"open_args . memory_base = own_font_data = FF_alloc ( s -> ftmemory , open_args . memory_size )"	1281:16:43961:44065	3200005	2	True				
ANR	3200685	AssignmentExpression	"open_args . memory_base = own_font_data = FF_alloc ( s -> ftmemory , open_args . memory_size )"		3200005	0		=			
ANR	3200686	MemberAccess	open_args . memory_base		3200005	0					
ANR	3200687	Identifier	open_args		3200005	0					
ANR	3200688	Identifier	memory_base		3200005	1					
ANR	3200689	AssignmentExpression	"own_font_data = FF_alloc ( s -> ftmemory , open_args . memory_size )"		3200005	1		=			
ANR	3200690	Identifier	own_font_data		3200005	0					
ANR	3200691	CallExpression	"FF_alloc ( s -> ftmemory , open_args . memory_size )"		3200005	1					
ANR	3200692	Callee	FF_alloc		3200005	0					
ANR	3200693	Identifier	FF_alloc		3200005	0					
ANR	3200694	ArgumentList	s -> ftmemory		3200005	1					
ANR	3200695	Argument	s -> ftmemory		3200005	0					
ANR	3200696	PtrMemberAccess	s -> ftmemory		3200005	0					
ANR	3200697	Identifier	s		3200005	0					
ANR	3200698	Identifier	ftmemory		3200005	1					
ANR	3200699	Argument	open_args . memory_size		3200005	1					
ANR	3200700	MemberAccess	open_args . memory_size		3200005	0					
ANR	3200701	Identifier	open_args		3200005	0					
ANR	3200702	Identifier	memory_size		3200005	1					
ANR	3200703	IfStatement	if ( ! own_font_data )		3200005	3					
ANR	3200704	Condition	! own_font_data	1283:20:44087:44100	3200005	0	True				
ANR	3200705	UnaryOperationExpression	! own_font_data		3200005	0					
ANR	3200706	UnaryOperator	!		3200005	0					
ANR	3200707	Identifier	own_font_data		3200005	1					
ANR	3200708	ExpressionStatement	return_error ( gs_error_VMerror )	1284:20:44123:44153	3200005	1	True				
ANR	3200709	CallExpression	return_error ( gs_error_VMerror )		3200005	0					
ANR	3200710	Callee	return_error		3200005	0					
ANR	3200711	Identifier	return_error		3200005	0					
ANR	3200712	ArgumentList	gs_error_VMerror		3200005	1					
ANR	3200713	Argument	gs_error_VMerror		3200005	0					
ANR	3200714	Identifier	gs_error_VMerror		3200005	0					
ANR	3200715	ExpressionStatement	own_font_data_len = open_args . memory_size	1286:16:44172:44213	3200005	4	True				
ANR	3200716	AssignmentExpression	own_font_data_len = open_args . memory_size		3200005	0		=			
ANR	3200717	Identifier	own_font_data_len		3200005	0					
ANR	3200718	MemberAccess	open_args . memory_size		3200005	1					
ANR	3200719	Identifier	open_args		3200005	0					
ANR	3200720	Identifier	memory_size		3200005	1					
ANR	3200721	IfStatement	"if ( a_font -> serialize_tt_font ( a_font , own_font_data , open_args . memory_size ) )"		3200005	5					
ANR	3200722	Condition	"a_font -> serialize_tt_font ( a_font , own_font_data , open_args . memory_size )"	1288:20:44236:44365	3200005	0	True				
ANR	3200723	CallExpression	"a_font -> serialize_tt_font ( a_font , own_font_data , open_args . memory_size )"		3200005	0					
ANR	3200724	Callee	a_font -> serialize_tt_font		3200005	0					
ANR	3200725	PtrMemberAccess	a_font -> serialize_tt_font		3200005	0					
ANR	3200726	Identifier	a_font		3200005	0					
ANR	3200727	Identifier	serialize_tt_font		3200005	1					
ANR	3200728	ArgumentList	a_font		3200005	1					
ANR	3200729	Argument	a_font		3200005	0					
ANR	3200730	Identifier	a_font		3200005	0					
ANR	3200731	Argument	own_font_data		3200005	1					
ANR	3200732	Identifier	own_font_data		3200005	0					
ANR	3200733	Argument	open_args . memory_size		3200005	2					
ANR	3200734	MemberAccess	open_args . memory_size		3200005	0					
ANR	3200735	Identifier	open_args		3200005	0					
ANR	3200736	Identifier	memory_size		3200005	1					
ANR	3200737	ExpressionStatement	return_error ( gs_error_invalidfont )	1291:20:44388:44422	3200005	1	True				
ANR	3200738	CallExpression	return_error ( gs_error_invalidfont )		3200005	0					
ANR	3200739	Callee	return_error		3200005	0					
ANR	3200740	Identifier	return_error		3200005	0					
ANR	3200741	ArgumentList	gs_error_invalidfont		3200005	1					
ANR	3200742	Argument	gs_error_invalidfont		3200005	0					
ANR	3200743	Identifier	gs_error_invalidfont		3200005	0					
ANR	3200744	ExpressionStatement	"ft_inc_int = new_inc_int ( a_server , a_font )"	1294:16:44493:44535	3200005	6	True				
ANR	3200745	AssignmentExpression	"ft_inc_int = new_inc_int ( a_server , a_font )"		3200005	0		=			
ANR	3200746	Identifier	ft_inc_int		3200005	0					
ANR	3200747	CallExpression	"new_inc_int ( a_server , a_font )"		3200005	1					
ANR	3200748	Callee	new_inc_int		3200005	0					
ANR	3200749	Identifier	new_inc_int		3200005	0					
ANR	3200750	ArgumentList	a_server		3200005	1					
ANR	3200751	Argument	a_server		3200005	0					
ANR	3200752	Identifier	a_server		3200005	0					
ANR	3200753	Argument	a_font		3200005	1					
ANR	3200754	Identifier	a_font		3200005	0					
ANR	3200755	IfStatement	if ( ! ft_inc_int )		3200005	7					
ANR	3200756	Condition	! ft_inc_int	1295:20:44557:44567	3200005	0	True				
ANR	3200757	UnaryOperationExpression	! ft_inc_int		3200005	0					
ANR	3200758	UnaryOperator	!		3200005	0					
ANR	3200759	Identifier	ft_inc_int		3200005	1					
ANR	3200760	CompoundStatement		166:33:6622:6622	3200005	1					
ANR	3200761	ExpressionStatement	"FF_free ( s -> ftmemory , own_font_data )"	1296:20:44592:44627	3200005	0	True				
ANR	3200762	CallExpression	"FF_free ( s -> ftmemory , own_font_data )"		3200005	0					
ANR	3200763	Callee	FF_free		3200005	0					
ANR	3200764	Identifier	FF_free		3200005	0					
ANR	3200765	ArgumentList	s -> ftmemory		3200005	1					
ANR	3200766	Argument	s -> ftmemory		3200005	0					
ANR	3200767	PtrMemberAccess	s -> ftmemory		3200005	0					
ANR	3200768	Identifier	s		3200005	0					
ANR	3200769	Identifier	ftmemory		3200005	1					
ANR	3200770	Argument	own_font_data		3200005	1					
ANR	3200771	Identifier	own_font_data		3200005	0					
ANR	3200772	ExpressionStatement	return_error ( gs_error_VMerror )	1297:20:44649:44679	3200005	1	True				
ANR	3200773	CallExpression	return_error ( gs_error_VMerror )		3200005	0					
ANR	3200774	Callee	return_error		3200005	0					
ANR	3200775	Identifier	return_error		3200005	0					
ANR	3200776	ArgumentList	gs_error_VMerror		3200005	1					
ANR	3200777	Argument	gs_error_VMerror		3200005	0					
ANR	3200778	Identifier	gs_error_VMerror		3200005	0					
ANR	3200779	IfStatement	if ( ft_inc_int )		3200005	4					
ANR	3200780	Condition	ft_inc_int	1301:16:44730:44739	3200005	0	True				
ANR	3200781	Identifier	ft_inc_int		3200005	0					
ANR	3200782	CompoundStatement		172:28:6794:6794	3200005	1					
ANR	3200783	ExpressionStatement	open_args . flags = ( FT_UInt ) ( open_args . flags | FT_OPEN_PARAMS )	1302:16:44760:44842	3200005	0	True				
ANR	3200784	AssignmentExpression	open_args . flags = ( FT_UInt ) ( open_args . flags | FT_OPEN_PARAMS )		3200005	0		=			
ANR	3200785	MemberAccess	open_args . flags		3200005	0					
ANR	3200786	Identifier	open_args		3200005	0					
ANR	3200787	Identifier	flags		3200005	1					
ANR	3200788	CastExpression	( FT_UInt ) ( open_args . flags | FT_OPEN_PARAMS )		3200005	1					
ANR	3200789	CastTarget	FT_UInt		3200005	0					
ANR	3200790	InclusiveOrExpression	open_args . flags | FT_OPEN_PARAMS		3200005	1		|			
ANR	3200791	MemberAccess	open_args . flags		3200005	0					
ANR	3200792	Identifier	open_args		3200005	0					
ANR	3200793	Identifier	flags		3200005	1					
ANR	3200794	Identifier	FT_OPEN_PARAMS		3200005	1					
ANR	3200795	ExpressionStatement	ft_param . tag = FT_PARAM_TAG_INCREMENTAL	1304:16:44860:44899	3200005	1	True				
ANR	3200796	AssignmentExpression	ft_param . tag = FT_PARAM_TAG_INCREMENTAL		3200005	0		=			
ANR	3200797	MemberAccess	ft_param . tag		3200005	0					
ANR	3200798	Identifier	ft_param		3200005	0					
ANR	3200799	Identifier	tag		3200005	1					
ANR	3200800	Identifier	FT_PARAM_TAG_INCREMENTAL		3200005	1					
ANR	3200801	ExpressionStatement	ft_param . data = ft_inc_int	1305:16:44917:44943	3200005	2	True				
ANR	3200802	AssignmentExpression	ft_param . data = ft_inc_int		3200005	0		=			
ANR	3200803	MemberAccess	ft_param . data		3200005	0					
ANR	3200804	Identifier	ft_param		3200005	0					
ANR	3200805	Identifier	data		3200005	1					
ANR	3200806	Identifier	ft_inc_int		3200005	1					
ANR	3200807	ExpressionStatement	open_args . num_params = 1	1306:16:44961:44985	3200005	3	True				
ANR	3200808	AssignmentExpression	open_args . num_params = 1		3200005	0		=			
ANR	3200809	MemberAccess	open_args . num_params		3200005	0					
ANR	3200810	Identifier	open_args		3200005	0					
ANR	3200811	Identifier	num_params		3200005	1					
ANR	3200812	PrimaryExpression	1		3200005	1					
ANR	3200813	ExpressionStatement	open_args . params = & ft_param	1307:16:45003:45031	3200005	4	True				
ANR	3200814	AssignmentExpression	open_args . params = & ft_param		3200005	0		=			
ANR	3200815	MemberAccess	open_args . params		3200005	0					
ANR	3200816	Identifier	open_args		3200005	0					
ANR	3200817	Identifier	params		3200005	1					
ANR	3200818	UnaryOperationExpression	& ft_param		3200005	1					
ANR	3200819	UnaryOperator	&		3200005	0					
ANR	3200820	Identifier	ft_param		3200005	1					
ANR	3200821	ExpressionStatement	"ft_error = FT_Open_Face ( s -> freetype_library , & open_args , a_font -> subfont , & ft_face )"	1309:12:45059:45187	3200005	5	True				
ANR	3200822	AssignmentExpression	"ft_error = FT_Open_Face ( s -> freetype_library , & open_args , a_font -> subfont , & ft_face )"		3200005	0		=			
ANR	3200823	Identifier	ft_error		3200005	0					
ANR	3200824	CallExpression	"FT_Open_Face ( s -> freetype_library , & open_args , a_font -> subfont , & ft_face )"		3200005	1					
ANR	3200825	Callee	FT_Open_Face		3200005	0					
ANR	3200826	Identifier	FT_Open_Face		3200005	0					
ANR	3200827	ArgumentList	s -> freetype_library		3200005	1					
ANR	3200828	Argument	s -> freetype_library		3200005	0					
ANR	3200829	PtrMemberAccess	s -> freetype_library		3200005	0					
ANR	3200830	Identifier	s		3200005	0					
ANR	3200831	Identifier	freetype_library		3200005	1					
ANR	3200832	Argument	& open_args		3200005	1					
ANR	3200833	UnaryOperationExpression	& open_args		3200005	0					
ANR	3200834	UnaryOperator	&		3200005	0					
ANR	3200835	Identifier	open_args		3200005	1					
ANR	3200836	Argument	a_font -> subfont		3200005	2					
ANR	3200837	PtrMemberAccess	a_font -> subfont		3200005	0					
ANR	3200838	Identifier	a_font		3200005	0					
ANR	3200839	Identifier	subfont		3200005	1					
ANR	3200840	Argument	& ft_face		3200005	3					
ANR	3200841	UnaryOperationExpression	& ft_face		3200005	0					
ANR	3200842	UnaryOperator	&		3200005	0					
ANR	3200843	Identifier	ft_face		3200005	1					
ANR	3200844	IfStatement	if ( ft_error )		3200005	6					
ANR	3200845	Condition	ft_error	1312:16:45205:45212	3200005	0	True				
ANR	3200846	Identifier	ft_error		3200005	0					
ANR	3200847	CompoundStatement		183:26:7267:7267	3200005	1					
ANR	3200848	ExpressionStatement	"delete_inc_int ( a_server , ft_inc_int )"	1313:16:45233:45270	3200005	0	True				
ANR	3200849	CallExpression	"delete_inc_int ( a_server , ft_inc_int )"		3200005	0					
ANR	3200850	Callee	delete_inc_int		3200005	0					
ANR	3200851	Identifier	delete_inc_int		3200005	0					
ANR	3200852	ArgumentList	a_server		3200005	1					
ANR	3200853	Argument	a_server		3200005	0					
ANR	3200854	Identifier	a_server		3200005	0					
ANR	3200855	Argument	ft_inc_int		3200005	1					
ANR	3200856	Identifier	ft_inc_int		3200005	0					
ANR	3200857	ExpressionStatement	"FF_free ( s -> ftmemory , own_font_data )"	1314:16:45288:45323	3200005	1	True				
ANR	3200858	CallExpression	"FF_free ( s -> ftmemory , own_font_data )"		3200005	0					
ANR	3200859	Callee	FF_free		3200005	0					
ANR	3200860	Identifier	FF_free		3200005	0					
ANR	3200861	ArgumentList	s -> ftmemory		3200005	1					
ANR	3200862	Argument	s -> ftmemory		3200005	0					
ANR	3200863	PtrMemberAccess	s -> ftmemory		3200005	0					
ANR	3200864	Identifier	s		3200005	0					
ANR	3200865	Identifier	ftmemory		3200005	1					
ANR	3200866	Argument	own_font_data		3200005	1					
ANR	3200867	Identifier	own_font_data		3200005	0					
ANR	3200868	ReturnStatement	return ft_to_gs_error ( ft_error ) ;	1315:16:45341:45372	3200005	2	True				
ANR	3200869	CallExpression	ft_to_gs_error ( ft_error )		3200005	0					
ANR	3200870	Callee	ft_to_gs_error		3200005	0					
ANR	3200871	Identifier	ft_to_gs_error		3200005	0					
ANR	3200872	ArgumentList	ft_error		3200005	1					
ANR	3200873	Argument	ft_error		3200005	0					
ANR	3200874	Identifier	ft_error		3200005	0					
ANR	3200875	IfStatement	if ( ft_face )		3200005	7					
ANR	3200876	Condition	ft_face	1319:12:45411:45417	3200005	0	True				
ANR	3200877	Identifier	ft_face		3200005	0					
ANR	3200878	CompoundStatement		190:21:7472:7472	3200005	1					
ANR	3200879	ExpressionStatement	"face = new_face ( a_server , ft_face , ft_inc_int , ft_strm , own_font_data , own_font_data_len , data_owned )"	1320:12:45434:45576	3200005	0	True				
ANR	3200880	AssignmentExpression	"face = new_face ( a_server , ft_face , ft_inc_int , ft_strm , own_font_data , own_font_data_len , data_owned )"		3200005	0		=			
ANR	3200881	Identifier	face		3200005	0					
ANR	3200882	CallExpression	"new_face ( a_server , ft_face , ft_inc_int , ft_strm , own_font_data , own_font_data_len , data_owned )"		3200005	1					
ANR	3200883	Callee	new_face		3200005	0					
ANR	3200884	Identifier	new_face		3200005	0					
ANR	3200885	ArgumentList	a_server		3200005	1					
ANR	3200886	Argument	a_server		3200005	0					
ANR	3200887	Identifier	a_server		3200005	0					
ANR	3200888	Argument	ft_face		3200005	1					
ANR	3200889	Identifier	ft_face		3200005	0					
ANR	3200890	Argument	ft_inc_int		3200005	2					
ANR	3200891	Identifier	ft_inc_int		3200005	0					
ANR	3200892	Argument	ft_strm		3200005	3					
ANR	3200893	Identifier	ft_strm		3200005	0					
ANR	3200894	Argument	own_font_data		3200005	4					
ANR	3200895	Identifier	own_font_data		3200005	0					
ANR	3200896	Argument	own_font_data_len		3200005	5					
ANR	3200897	Identifier	own_font_data_len		3200005	0					
ANR	3200898	Argument	data_owned		3200005	6					
ANR	3200899	Identifier	data_owned		3200005	0					
ANR	3200900	IfStatement	if ( ! face )		3200005	1					
ANR	3200901	Condition	! face	1323:16:45594:45598	3200005	0	True				
ANR	3200902	UnaryOperationExpression	! face		3200005	0					
ANR	3200903	UnaryOperator	!		3200005	0					
ANR	3200904	Identifier	face		3200005	1					
ANR	3200905	CompoundStatement		194:23:7653:7653	3200005	1					
ANR	3200906	ExpressionStatement	"FF_free ( s -> ftmemory , own_font_data )"	1324:16:45619:45654	3200005	0	True				
ANR	3200907	CallExpression	"FF_free ( s -> ftmemory , own_font_data )"		3200005	0					
ANR	3200908	Callee	FF_free		3200005	0					
ANR	3200909	Identifier	FF_free		3200005	0					
ANR	3200910	ArgumentList	s -> ftmemory		3200005	1					
ANR	3200911	Argument	s -> ftmemory		3200005	0					
ANR	3200912	PtrMemberAccess	s -> ftmemory		3200005	0					
ANR	3200913	Identifier	s		3200005	0					
ANR	3200914	Identifier	ftmemory		3200005	1					
ANR	3200915	Argument	own_font_data		3200005	1					
ANR	3200916	Identifier	own_font_data		3200005	0					
ANR	3200917	ExpressionStatement	FT_Done_Face ( ft_face )	1325:16:45672:45693	3200005	1	True				
ANR	3200918	CallExpression	FT_Done_Face ( ft_face )		3200005	0					
ANR	3200919	Callee	FT_Done_Face		3200005	0					
ANR	3200920	Identifier	FT_Done_Face		3200005	0					
ANR	3200921	ArgumentList	ft_face		3200005	1					
ANR	3200922	Argument	ft_face		3200005	0					
ANR	3200923	Identifier	ft_face		3200005	0					
ANR	3200924	ExpressionStatement	"delete_inc_int ( a_server , ft_inc_int )"	1326:16:45711:45747	3200005	2	True				
ANR	3200925	CallExpression	"delete_inc_int ( a_server , ft_inc_int )"		3200005	0					
ANR	3200926	Callee	delete_inc_int		3200005	0					
ANR	3200927	Identifier	delete_inc_int		3200005	0					
ANR	3200928	ArgumentList	a_server		3200005	1					
ANR	3200929	Argument	a_server		3200005	0					
ANR	3200930	Identifier	a_server		3200005	0					
ANR	3200931	Argument	ft_inc_int		3200005	1					
ANR	3200932	Identifier	ft_inc_int		3200005	0					
ANR	3200933	ExpressionStatement	return_error ( gs_error_VMerror )	1327:16:45765:45795	3200005	3	True				
ANR	3200934	CallExpression	return_error ( gs_error_VMerror )		3200005	0					
ANR	3200935	Callee	return_error		3200005	0					
ANR	3200936	Identifier	return_error		3200005	0					
ANR	3200937	ArgumentList	gs_error_VMerror		3200005	1					
ANR	3200938	Argument	gs_error_VMerror		3200005	0					
ANR	3200939	Identifier	gs_error_VMerror		3200005	0					
ANR	3200940	ExpressionStatement	a_font -> server_font_data = face	1329:12:45823:45854	3200005	2	True				
ANR	3200941	AssignmentExpression	a_font -> server_font_data = face		3200005	0		=			
ANR	3200942	PtrMemberAccess	a_font -> server_font_data		3200005	0					
ANR	3200943	Identifier	a_font		3200005	0					
ANR	3200944	Identifier	server_font_data		3200005	1					
ANR	3200945	Identifier	face		3200005	1					
ANR	3200946	ElseStatement	else		3200005	0					
ANR	3200947	ExpressionStatement	a_font -> server_font_data = NULL	1332:12:45891:45922	3200005	0	True				
ANR	3200948	AssignmentExpression	a_font -> server_font_data = NULL		3200005	0		=			
ANR	3200949	PtrMemberAccess	a_font -> server_font_data		3200005	0					
ANR	3200950	Identifier	a_font		3200005	0					
ANR	3200951	Identifier	server_font_data		3200005	1					
ANR	3200952	Identifier	NULL		3200005	1					
ANR	3200953	IfStatement	if ( face )		3200005	10					
ANR	3200954	Condition	face	1339:8:46124:46127	3200005	0	True				
ANR	3200955	Identifier	face		3200005	0					
ANR	3200956	CompoundStatement		210:14:8182:8182	3200005	1					
ANR	3200957	ExpressionStatement	face -> ft_transform . xx = a_font_scale -> matrix [ 0 ]	1344:8:46372:46419	3200005	0	True				
ANR	3200958	AssignmentExpression	face -> ft_transform . xx = a_font_scale -> matrix [ 0 ]		3200005	0		=			
ANR	3200959	MemberAccess	face -> ft_transform . xx		3200005	0					
ANR	3200960	PtrMemberAccess	face -> ft_transform		3200005	0					
ANR	3200961	Identifier	face		3200005	0					
ANR	3200962	Identifier	ft_transform		3200005	1					
ANR	3200963	Identifier	xx		3200005	1					
ANR	3200964	ArrayIndexing	a_font_scale -> matrix [ 0 ]		3200005	1					
ANR	3200965	PtrMemberAccess	a_font_scale -> matrix		3200005	0					
ANR	3200966	Identifier	a_font_scale		3200005	0					
ANR	3200967	Identifier	matrix		3200005	1					
ANR	3200968	PrimaryExpression	0		3200005	1					
ANR	3200969	ExpressionStatement	face -> ft_transform . xy = a_font_scale -> matrix [ 2 ]	1345:8:46429:46476	3200005	1	True				
ANR	3200970	AssignmentExpression	face -> ft_transform . xy = a_font_scale -> matrix [ 2 ]		3200005	0		=			
ANR	3200971	MemberAccess	face -> ft_transform . xy		3200005	0					
ANR	3200972	PtrMemberAccess	face -> ft_transform		3200005	0					
ANR	3200973	Identifier	face		3200005	0					
ANR	3200974	Identifier	ft_transform		3200005	1					
ANR	3200975	Identifier	xy		3200005	1					
ANR	3200976	ArrayIndexing	a_font_scale -> matrix [ 2 ]		3200005	1					
ANR	3200977	PtrMemberAccess	a_font_scale -> matrix		3200005	0					
ANR	3200978	Identifier	a_font_scale		3200005	0					
ANR	3200979	Identifier	matrix		3200005	1					
ANR	3200980	PrimaryExpression	2		3200005	1					
ANR	3200981	ExpressionStatement	face -> ft_transform . yx = a_font_scale -> matrix [ 1 ]	1346:8:46486:46533	3200005	2	True				
ANR	3200982	AssignmentExpression	face -> ft_transform . yx = a_font_scale -> matrix [ 1 ]		3200005	0		=			
ANR	3200983	MemberAccess	face -> ft_transform . yx		3200005	0					
ANR	3200984	PtrMemberAccess	face -> ft_transform		3200005	0					
ANR	3200985	Identifier	face		3200005	0					
ANR	3200986	Identifier	ft_transform		3200005	1					
ANR	3200987	Identifier	yx		3200005	1					
ANR	3200988	ArrayIndexing	a_font_scale -> matrix [ 1 ]		3200005	1					
ANR	3200989	PtrMemberAccess	a_font_scale -> matrix		3200005	0					
ANR	3200990	Identifier	a_font_scale		3200005	0					
ANR	3200991	Identifier	matrix		3200005	1					
ANR	3200992	PrimaryExpression	1		3200005	1					
ANR	3200993	ExpressionStatement	face -> ft_transform . yy = a_font_scale -> matrix [ 3 ]	1347:8:46543:46590	3200005	3	True				
ANR	3200994	AssignmentExpression	face -> ft_transform . yy = a_font_scale -> matrix [ 3 ]		3200005	0		=			
ANR	3200995	MemberAccess	face -> ft_transform . yy		3200005	0					
ANR	3200996	PtrMemberAccess	face -> ft_transform		3200005	0					
ANR	3200997	Identifier	face		3200005	0					
ANR	3200998	Identifier	ft_transform		3200005	1					
ANR	3200999	Identifier	yy		3200005	1					
ANR	3201000	ArrayIndexing	a_font_scale -> matrix [ 3 ]		3200005	1					
ANR	3201001	PtrMemberAccess	a_font_scale -> matrix		3200005	0					
ANR	3201002	Identifier	a_font_scale		3200005	0					
ANR	3201003	Identifier	matrix		3200005	1					
ANR	3201004	PrimaryExpression	3		3200005	1					
ANR	3201005	ExpressionStatement	face -> horz_res = a_font_scale -> HWResolution [ 0 ] >> 16	1349:8:46601:46653	3200005	4	True				
ANR	3201006	AssignmentExpression	face -> horz_res = a_font_scale -> HWResolution [ 0 ] >> 16		3200005	0		=			
ANR	3201007	PtrMemberAccess	face -> horz_res		3200005	0					
ANR	3201008	Identifier	face		3200005	0					
ANR	3201009	Identifier	horz_res		3200005	1					
ANR	3201010	ShiftExpression	a_font_scale -> HWResolution [ 0 ] >> 16		3200005	1		>>			
ANR	3201011	ArrayIndexing	a_font_scale -> HWResolution [ 0 ]		3200005	0					
ANR	3201012	PtrMemberAccess	a_font_scale -> HWResolution		3200005	0					
ANR	3201013	Identifier	a_font_scale		3200005	0					
ANR	3201014	Identifier	HWResolution		3200005	1					
ANR	3201015	PrimaryExpression	0		3200005	1					
ANR	3201016	PrimaryExpression	16		3200005	1					
ANR	3201017	ExpressionStatement	face -> vert_res = a_font_scale -> HWResolution [ 1 ] >> 16	1350:8:46663:46715	3200005	5	True				
ANR	3201018	AssignmentExpression	face -> vert_res = a_font_scale -> HWResolution [ 1 ] >> 16		3200005	0		=			
ANR	3201019	PtrMemberAccess	face -> vert_res		3200005	0					
ANR	3201020	Identifier	face		3200005	0					
ANR	3201021	Identifier	vert_res		3200005	1					
ANR	3201022	ShiftExpression	a_font_scale -> HWResolution [ 1 ] >> 16		3200005	1		>>			
ANR	3201023	ArrayIndexing	a_font_scale -> HWResolution [ 1 ]		3200005	0					
ANR	3201024	PtrMemberAccess	a_font_scale -> HWResolution		3200005	0					
ANR	3201025	Identifier	a_font_scale		3200005	0					
ANR	3201026	Identifier	HWResolution		3200005	1					
ANR	3201027	PrimaryExpression	1		3200005	1					
ANR	3201028	PrimaryExpression	16		3200005	1					
ANR	3201029	ExpressionStatement	"transform_decompose ( & face -> ft_transform , & face -> horz_res , & face -> vert_res , & face -> width , & face -> height )"	1355:8:46835:46966	3200005	6	True				
ANR	3201030	CallExpression	"transform_decompose ( & face -> ft_transform , & face -> horz_res , & face -> vert_res , & face -> width , & face -> height )"		3200005	0					
ANR	3201031	Callee	transform_decompose		3200005	0					
ANR	3201032	Identifier	transform_decompose		3200005	0					
ANR	3201033	ArgumentList	& face -> ft_transform		3200005	1					
ANR	3201034	Argument	& face -> ft_transform		3200005	0					
ANR	3201035	UnaryOperationExpression	& face -> ft_transform		3200005	0					
ANR	3201036	UnaryOperator	&		3200005	0					
ANR	3201037	PtrMemberAccess	face -> ft_transform		3200005	1					
ANR	3201038	Identifier	face		3200005	0					
ANR	3201039	Identifier	ft_transform		3200005	1					
ANR	3201040	Argument	& face -> horz_res		3200005	1					
ANR	3201041	UnaryOperationExpression	& face -> horz_res		3200005	0					
ANR	3201042	UnaryOperator	&		3200005	0					
ANR	3201043	PtrMemberAccess	face -> horz_res		3200005	1					
ANR	3201044	Identifier	face		3200005	0					
ANR	3201045	Identifier	horz_res		3200005	1					
ANR	3201046	Argument	& face -> vert_res		3200005	2					
ANR	3201047	UnaryOperationExpression	& face -> vert_res		3200005	0					
ANR	3201048	UnaryOperator	&		3200005	0					
ANR	3201049	PtrMemberAccess	face -> vert_res		3200005	1					
ANR	3201050	Identifier	face		3200005	0					
ANR	3201051	Identifier	vert_res		3200005	1					
ANR	3201052	Argument	& face -> width		3200005	3					
ANR	3201053	UnaryOperationExpression	& face -> width		3200005	0					
ANR	3201054	UnaryOperator	&		3200005	0					
ANR	3201055	PtrMemberAccess	face -> width		3200005	1					
ANR	3201056	Identifier	face		3200005	0					
ANR	3201057	Identifier	width		3200005	1					
ANR	3201058	Argument	& face -> height		3200005	4					
ANR	3201059	UnaryOperationExpression	& face -> height		3200005	0					
ANR	3201060	UnaryOperator	&		3200005	0					
ANR	3201061	PtrMemberAccess	face -> height		3200005	1					
ANR	3201062	Identifier	face		3200005	0					
ANR	3201063	Identifier	height		3200005	1					
ANR	3201064	ExpressionStatement	"ft_error = FT_Set_Char_Size ( face -> ft_face , face -> width , face -> height , face -> horz_res , face -> vert_res )"	1358:8:46977:47114	3200005	7	True				
ANR	3201065	AssignmentExpression	"ft_error = FT_Set_Char_Size ( face -> ft_face , face -> width , face -> height , face -> horz_res , face -> vert_res )"		3200005	0		=			
ANR	3201066	Identifier	ft_error		3200005	0					
ANR	3201067	CallExpression	"FT_Set_Char_Size ( face -> ft_face , face -> width , face -> height , face -> horz_res , face -> vert_res )"		3200005	1					
ANR	3201068	Callee	FT_Set_Char_Size		3200005	0					
ANR	3201069	Identifier	FT_Set_Char_Size		3200005	0					
ANR	3201070	ArgumentList	face -> ft_face		3200005	1					
ANR	3201071	Argument	face -> ft_face		3200005	0					
ANR	3201072	PtrMemberAccess	face -> ft_face		3200005	0					
ANR	3201073	Identifier	face		3200005	0					
ANR	3201074	Identifier	ft_face		3200005	1					
ANR	3201075	Argument	face -> width		3200005	1					
ANR	3201076	PtrMemberAccess	face -> width		3200005	0					
ANR	3201077	Identifier	face		3200005	0					
ANR	3201078	Identifier	width		3200005	1					
ANR	3201079	Argument	face -> height		3200005	2					
ANR	3201080	PtrMemberAccess	face -> height		3200005	0					
ANR	3201081	Identifier	face		3200005	0					
ANR	3201082	Identifier	height		3200005	1					
ANR	3201083	Argument	face -> horz_res		3200005	3					
ANR	3201084	PtrMemberAccess	face -> horz_res		3200005	0					
ANR	3201085	Identifier	face		3200005	0					
ANR	3201086	Identifier	horz_res		3200005	1					
ANR	3201087	Argument	face -> vert_res		3200005	4					
ANR	3201088	PtrMemberAccess	face -> vert_res		3200005	0					
ANR	3201089	Identifier	face		3200005	0					
ANR	3201090	Identifier	vert_res		3200005	1					
ANR	3201091	IfStatement	if ( ft_error )		3200005	8					
ANR	3201092	Condition	ft_error	1361:12:47129:47136	3200005	0	True				
ANR	3201093	Identifier	ft_error		3200005	0					
ANR	3201094	CompoundStatement		232:22:9191:9191	3200005	1					
ANR	3201095	ReturnStatement	return ft_to_gs_error ( ft_error ) ;	1368:12:47556:47587	3200005	0	True				
ANR	3201096	CallExpression	ft_to_gs_error ( ft_error )		3200005	0					
ANR	3201097	Callee	ft_to_gs_error		3200005	0					
ANR	3201098	Identifier	ft_to_gs_error		3200005	0					
ANR	3201099	ArgumentList	ft_error		3200005	1					
ANR	3201100	Argument	ft_error		3200005	0					
ANR	3201101	Identifier	ft_error		3200005	0					
ANR	3201102	ExpressionStatement	"FT_Set_Transform ( face -> ft_face , & face -> ft_transform , NULL )"	1376:8:47842:47900	3200005	9	True				
ANR	3201103	CallExpression	"FT_Set_Transform ( face -> ft_face , & face -> ft_transform , NULL )"		3200005	0					
ANR	3201104	Callee	FT_Set_Transform		3200005	0					
ANR	3201105	Identifier	FT_Set_Transform		3200005	0					
ANR	3201106	ArgumentList	face -> ft_face		3200005	1					
ANR	3201107	Argument	face -> ft_face		3200005	0					
ANR	3201108	PtrMemberAccess	face -> ft_face		3200005	0					
ANR	3201109	Identifier	face		3200005	0					
ANR	3201110	Identifier	ft_face		3200005	1					
ANR	3201111	Argument	& face -> ft_transform		3200005	1					
ANR	3201112	UnaryOperationExpression	& face -> ft_transform		3200005	0					
ANR	3201113	UnaryOperator	&		3200005	0					
ANR	3201114	PtrMemberAccess	face -> ft_transform		3200005	1					
ANR	3201115	Identifier	face		3200005	0					
ANR	3201116	Identifier	ft_transform		3200005	1					
ANR	3201117	Argument	NULL		3200005	2					
ANR	3201118	Identifier	NULL		3200005	0					
ANR	3201119	IfStatement	if ( ! a_font -> is_type1 )		3200005	10					
ANR	3201120	Condition	! a_font -> is_type1	1378:12:47923:47939	3200005	0	True				
ANR	3201121	UnaryOperationExpression	! a_font -> is_type1		3200005	0					
ANR	3201122	UnaryOperator	!		3200005	0					
ANR	3201123	PtrMemberAccess	a_font -> is_type1		3200005	1					
ANR	3201124	Identifier	a_font		3200005	0					
ANR	3201125	Identifier	is_type1		3200005	1					
ANR	3201126	CompoundStatement		249:31:9994:9994	3200005	1					
ANR	3201127	ForStatement	for ( i = 0 ; i < GS_FAPI_NUM_TTF_CMAP_REQ && ! cmap ; i ++ )		3200005	0					
ANR	3201128	ForInit	i = 0 ;	1379:17:47961:47966	3200005	0	True				
ANR	3201129	AssignmentExpression	i = 0		3200005	0		=			
ANR	3201130	Identifier	i		3200005	0					
ANR	3201131	PrimaryExpression	0		3200005	1					
ANR	3201132	Condition	i < GS_FAPI_NUM_TTF_CMAP_REQ && ! cmap	1379:24:47968:48004	3200005	1	True				
ANR	3201133	AndExpression	i < GS_FAPI_NUM_TTF_CMAP_REQ && ! cmap		3200005	0		&&			
ANR	3201134	RelationalExpression	i < GS_FAPI_NUM_TTF_CMAP_REQ		3200005	0		<			
ANR	3201135	Identifier	i		3200005	0					
ANR	3201136	Identifier	GS_FAPI_NUM_TTF_CMAP_REQ		3200005	1					
ANR	3201137	UnaryOperationExpression	! cmap		3200005	1					
ANR	3201138	UnaryOperator	!		3200005	0					
ANR	3201139	Identifier	cmap		3200005	1					
ANR	3201140	PostIncDecOperationExpression	i ++	1379:63:48007:48009	3200005	2	True				
ANR	3201141	Identifier	i		3200005	0					
ANR	3201142	IncDec	++		3200005	1					
ANR	3201143	CompoundStatement		250:68:10064:10064	3200005	3					
ANR	3201144	IfStatement	if ( a_font -> ttf_cmap_req [ i ] . platform_id > 0 )		3200005	0					
ANR	3201145	Condition	a_font -> ttf_cmap_req [ i ] . platform_id > 0	1380:20:48034:48072	3200005	0	True				
ANR	3201146	RelationalExpression	a_font -> ttf_cmap_req [ i ] . platform_id > 0		3200005	0		>			
ANR	3201147	MemberAccess	a_font -> ttf_cmap_req [ i ] . platform_id		3200005	0					
ANR	3201148	ArrayIndexing	a_font -> ttf_cmap_req [ i ]		3200005	0					
ANR	3201149	PtrMemberAccess	a_font -> ttf_cmap_req		3200005	0					
ANR	3201150	Identifier	a_font		3200005	0					
ANR	3201151	Identifier	ttf_cmap_req		3200005	1					
ANR	3201152	Identifier	i		3200005	1					
ANR	3201153	Identifier	platform_id		3200005	1					
ANR	3201154	PrimaryExpression	0		3200005	1					
ANR	3201155	CompoundStatement		251:61:10127:10127	3200005	1					
ANR	3201156	ForStatement	for ( j = 0 ; j < face -> ft_face -> num_charmaps ; j ++ )		3200005	0					
ANR	3201157	ForInit	j = 0 ;	1381:25:48102:48107	3200005	0	True				
ANR	3201158	AssignmentExpression	j = 0		3200005	0		=			
ANR	3201159	Identifier	j		3200005	0					
ANR	3201160	PrimaryExpression	0		3200005	1					
ANR	3201161	Condition	j < face -> ft_face -> num_charmaps	1381:32:48109:48139	3200005	1	True				
ANR	3201162	RelationalExpression	j < face -> ft_face -> num_charmaps		3200005	0		<			
ANR	3201163	Identifier	j		3200005	0					
ANR	3201164	PtrMemberAccess	face -> ft_face -> num_charmaps		3200005	1					
ANR	3201165	PtrMemberAccess	face -> ft_face		3200005	0					
ANR	3201166	Identifier	face		3200005	0					
ANR	3201167	Identifier	ft_face		3200005	1					
ANR	3201168	Identifier	num_charmaps		3200005	1					
ANR	3201169	PostIncDecOperationExpression	j ++	1381:65:48142:48144	3200005	2	True				
ANR	3201170	Identifier	j		3200005	0					
ANR	3201171	IncDec	++		3200005	1					
ANR	3201172	CompoundStatement		252:70:10199:10199	3200005	3					
ANR	3201173	IfStatement	if ( face -> ft_face -> charmaps [ j ] -> platform_id == a_font -> ttf_cmap_req [ i ] . platform_id && face -> ft_face -> charmaps [ j ] -> encoding_id == a_font -> ttf_cmap_req [ i ] . encoding_id )		3200005	0					
ANR	3201174	Condition	face -> ft_face -> charmaps [ j ] -> platform_id == a_font -> ttf_cmap_req [ i ] . platform_id && face -> ft_face -> charmaps [ j ] -> encoding_id == a_font -> ttf_cmap_req [ i ] . encoding_id	1382:28:48177:48361	3200005	0	True				
ANR	3201175	AndExpression	face -> ft_face -> charmaps [ j ] -> platform_id == a_font -> ttf_cmap_req [ i ] . platform_id && face -> ft_face -> charmaps [ j ] -> encoding_id == a_font -> ttf_cmap_req [ i ] . encoding_id		3200005	0		&&			
ANR	3201176	EqualityExpression	face -> ft_face -> charmaps [ j ] -> platform_id == a_font -> ttf_cmap_req [ i ] . platform_id		3200005	0		==			
ANR	3201177	PtrMemberAccess	face -> ft_face -> charmaps [ j ] -> platform_id		3200005	0					
ANR	3201178	ArrayIndexing	face -> ft_face -> charmaps [ j ]		3200005	0					
ANR	3201179	PtrMemberAccess	face -> ft_face -> charmaps		3200005	0					
ANR	3201180	PtrMemberAccess	face -> ft_face		3200005	0					
ANR	3201181	Identifier	face		3200005	0					
ANR	3201182	Identifier	ft_face		3200005	1					
ANR	3201183	Identifier	charmaps		3200005	1					
ANR	3201184	Identifier	j		3200005	1					
ANR	3201185	Identifier	platform_id		3200005	1					
ANR	3201186	MemberAccess	a_font -> ttf_cmap_req [ i ] . platform_id		3200005	1					
ANR	3201187	ArrayIndexing	a_font -> ttf_cmap_req [ i ]		3200005	0					
ANR	3201188	PtrMemberAccess	a_font -> ttf_cmap_req		3200005	0					
ANR	3201189	Identifier	a_font		3200005	0					
ANR	3201190	Identifier	ttf_cmap_req		3200005	1					
ANR	3201191	Identifier	i		3200005	1					
ANR	3201192	Identifier	platform_id		3200005	1					
ANR	3201193	EqualityExpression	face -> ft_face -> charmaps [ j ] -> encoding_id == a_font -> ttf_cmap_req [ i ] . encoding_id		3200005	1		==			
ANR	3201194	PtrMemberAccess	face -> ft_face -> charmaps [ j ] -> encoding_id		3200005	0					
ANR	3201195	ArrayIndexing	face -> ft_face -> charmaps [ j ]		3200005	0					
ANR	3201196	PtrMemberAccess	face -> ft_face -> charmaps		3200005	0					
ANR	3201197	PtrMemberAccess	face -> ft_face		3200005	0					
ANR	3201198	Identifier	face		3200005	0					
ANR	3201199	Identifier	ft_face		3200005	1					
ANR	3201200	Identifier	charmaps		3200005	1					
ANR	3201201	Identifier	j		3200005	1					
ANR	3201202	Identifier	encoding_id		3200005	1					
ANR	3201203	MemberAccess	a_font -> ttf_cmap_req [ i ] . encoding_id		3200005	1					
ANR	3201204	ArrayIndexing	a_font -> ttf_cmap_req [ i ]		3200005	0					
ANR	3201205	PtrMemberAccess	a_font -> ttf_cmap_req		3200005	0					
ANR	3201206	Identifier	a_font		3200005	0					
ANR	3201207	Identifier	ttf_cmap_req		3200005	1					
ANR	3201208	Identifier	i		3200005	1					
ANR	3201209	Identifier	encoding_id		3200005	1					
ANR	3201210	CompoundStatement		254:108:10416:10416	3200005	1					
ANR	3201211	ExpressionStatement	cmap = face -> ft_face -> charmaps [ j ]	1385:28:48395:48428	3200005	0	True				
ANR	3201212	AssignmentExpression	cmap = face -> ft_face -> charmaps [ j ]		3200005	0		=			
ANR	3201213	Identifier	cmap		3200005	0					
ANR	3201214	ArrayIndexing	face -> ft_face -> charmaps [ j ]		3200005	1					
ANR	3201215	PtrMemberAccess	face -> ft_face -> charmaps		3200005	0					
ANR	3201216	PtrMemberAccess	face -> ft_face		3200005	0					
ANR	3201217	Identifier	face		3200005	0					
ANR	3201218	Identifier	ft_face		3200005	1					
ANR	3201219	Identifier	charmaps		3200005	1					
ANR	3201220	Identifier	j		3200005	1					
ANR	3201221	BreakStatement	break ;	1386:28:48458:48463	3200005	1	True				
ANR	3201222	ElseStatement	else		3200005	0					
ANR	3201223	CompoundStatement		261:21:10604:10604	3200005	0					
ANR	3201224	BreakStatement	break ;	1391:20:48574:48579	3200005	0	True				
ANR	3201225	IfStatement	if ( cmap )		3200005	1					
ANR	3201226	Condition	cmap	1394:16:48629:48632	3200005	0	True				
ANR	3201227	Identifier	cmap		3200005	0					
ANR	3201228	CompoundStatement		265:22:10687:10687	3200005	1					
ANR	3201229	ExpressionStatement	"( void ) FT_Set_Charmap ( face -> ft_face , cmap )"	1395:16:48653:48694	3200005	0	True				
ANR	3201230	CastExpression	"( void ) FT_Set_Charmap ( face -> ft_face , cmap )"		3200005	0					
ANR	3201231	CastTarget	void		3200005	0					
ANR	3201232	CallExpression	"FT_Set_Charmap ( face -> ft_face , cmap )"		3200005	1					
ANR	3201233	Callee	FT_Set_Charmap		3200005	0					
ANR	3201234	Identifier	FT_Set_Charmap		3200005	0					
ANR	3201235	ArgumentList	face -> ft_face		3200005	1					
ANR	3201236	Argument	face -> ft_face		3200005	0					
ANR	3201237	PtrMemberAccess	face -> ft_face		3200005	0					
ANR	3201238	Identifier	face		3200005	0					
ANR	3201239	Identifier	ft_face		3200005	1					
ANR	3201240	Argument	cmap		3200005	1					
ANR	3201241	Identifier	cmap		3200005	0					
ANR	3201242	ElseStatement	else		3200005	0					
ANR	3201243	IfStatement	if ( a_font -> full_font_buf != NULL || a_font -> font_file_path != NULL )		3200005	0					
ANR	3201244	Condition	a_font -> full_font_buf != NULL || a_font -> font_file_path != NULL	1397:21:48731:48793	3200005	0	True				
ANR	3201245	OrExpression	a_font -> full_font_buf != NULL || a_font -> font_file_path != NULL		3200005	0		||			
ANR	3201246	EqualityExpression	a_font -> full_font_buf != NULL		3200005	0		!=			
ANR	3201247	PtrMemberAccess	a_font -> full_font_buf		3200005	0					
ANR	3201248	Identifier	a_font		3200005	0					
ANR	3201249	Identifier	full_font_buf		3200005	1					
ANR	3201250	Identifier	NULL		3200005	1					
ANR	3201251	EqualityExpression	a_font -> font_file_path != NULL		3200005	1		!=			
ANR	3201252	PtrMemberAccess	a_font -> font_file_path		3200005	0					
ANR	3201253	Identifier	a_font		3200005	0					
ANR	3201254	Identifier	font_file_path		3200005	1					
ANR	3201255	Identifier	NULL		3200005	1					
ANR	3201256	CompoundStatement		268:86:10848:10848	3200005	1					
ANR	3201257	ExpressionStatement	"( void ) FT_Select_Charmap ( face -> ft_face , ft_encoding_unicode )"	1402:16:49068:49127	3200005	0	True				
ANR	3201258	CastExpression	"( void ) FT_Select_Charmap ( face -> ft_face , ft_encoding_unicode )"		3200005	0					
ANR	3201259	CastTarget	void		3200005	0					
ANR	3201260	CallExpression	"FT_Select_Charmap ( face -> ft_face , ft_encoding_unicode )"		3200005	1					
ANR	3201261	Callee	FT_Select_Charmap		3200005	0					
ANR	3201262	Identifier	FT_Select_Charmap		3200005	0					
ANR	3201263	ArgumentList	face -> ft_face		3200005	1					
ANR	3201264	Argument	face -> ft_face		3200005	0					
ANR	3201265	PtrMemberAccess	face -> ft_face		3200005	0					
ANR	3201266	Identifier	face		3200005	0					
ANR	3201267	Identifier	ft_face		3200005	1					
ANR	3201268	Argument	ft_encoding_unicode		3200005	1					
ANR	3201269	Identifier	ft_encoding_unicode		3200005	0					
ANR	3201270	ReturnStatement	return a_font -> server_font_data ? 0 : - 1 ;	1408:4:49256:49296	3200005	11	True				
ANR	3201271	ConditionalExpression	a_font -> server_font_data ? 0 : - 1		3200005	0					
ANR	3201272	Condition	a_font -> server_font_data		3200005	0					
ANR	3201273	PtrMemberAccess	a_font -> server_font_data		3200005	0					
ANR	3201274	Identifier	a_font		3200005	0					
ANR	3201275	Identifier	server_font_data		3200005	1					
ANR	3201276	PrimaryExpression	0		3200005	1					
ANR	3201277	UnaryOperationExpression	- 1		3200005	2					
ANR	3201278	UnaryOperator	-		3200005	0					
ANR	3201279	PrimaryExpression	1		3200005	1					
ANR	3201280	ReturnType	static gs_fapi_retcode		3200005	1					
ANR	3201281	Identifier	gs_fapi_ft_get_scaled_font		3200005	2					
ANR	3201282	ParameterList	"gs_fapi_server * a_server , gs_fapi_font * a_font , const gs_fapi_font_scale * a_font_scale , const char * a_map , gs_fapi_descendant_code a_descendant_code"		3200005	3					
ANR	3201283	Parameter	gs_fapi_server * a_server	1127:27:37762:37786	3200005	0	True				
ANR	3201284	ParameterType	gs_fapi_server *		3200005	0					
ANR	3201285	Identifier	a_server		3200005	1					
ANR	3201286	Parameter	gs_fapi_font * a_font	1127:54:37789:37809	3200005	1	True				
ANR	3201287	ParameterType	gs_fapi_font *		3200005	0					
ANR	3201288	Identifier	a_font		3200005	1					
ANR	3201289	Parameter	const gs_fapi_font_scale * a_font_scale	1128:16:37828:37866	3200005	2	True				
ANR	3201290	ParameterType	const gs_fapi_font_scale *		3200005	0					
ANR	3201291	Identifier	a_font_scale		3200005	1					
ANR	3201292	Parameter	const char * a_map	1129:16:37885:37901	3200005	3	True				
ANR	3201293	ParameterType	const char *		3200005	0					
ANR	3201294	Identifier	a_map		3200005	1					
ANR	3201295	Parameter	gs_fapi_descendant_code a_descendant_code	1129:35:37904:37944	3200005	4	True				
ANR	3201296	ParameterType	gs_fapi_descendant_code		3200005	0					
ANR	3201297	Identifier	a_descendant_code		3200005	1					
ANR	3201298	CFGEntryNode	ENTRY		3200005		True				
ANR	3201299	CFGExitNode	EXIT		3200005		True				
ANR	3201300	Symbol	a_font -> ttf_cmap_req [ i ] . encoding_id		3200005						
ANR	3201301	Symbol	ft_inc_int		3200005						
ANR	3201302	Symbol	FF_open_read_stream		3200005						
ANR	3201303	Symbol	a_font_scale -> HWResolution		3200005						
ANR	3201304	Symbol	type		3200005						
ANR	3201305	Symbol	s -> bitmap_glyph		3200005						
ANR	3201306	Symbol	* face		3200005						
ANR	3201307	Symbol	face -> horz_res		3200005						
ANR	3201308	Symbol	new_inc_int		3200005						
ANR	3201309	Symbol	* * a_font_scale		3200005						
ANR	3201310	Symbol	a_font -> ttf_cmap_req		3200005						
ANR	3201311	Symbol	& s -> outline_glyph -> outline		3200005						
ANR	3201312	Symbol	* s -> ftmemory		3200005						
ANR	3201313	Symbol	a_font -> serialize_tt_font		3200005						
ANR	3201314	Symbol	* * a_font		3200005						
ANR	3201315	Symbol	* * face		3200005						
ANR	3201316	Symbol	open_args . memory_base		3200005						
ANR	3201317	Symbol	a_server		3200005						
ANR	3201318	Symbol	* * * face -> ft_face		3200005						
ANR	3201319	Symbol	ft_to_gs_error		3200005						
ANR	3201320	Symbol	a_font_scale -> matrix		3200005						
ANR	3201321	Symbol	* * face -> ft_face		3200005						
ANR	3201322	Symbol	a_font_scale		3200005						
ANR	3201323	Symbol	own_font_data_len		3200005						
ANR	3201324	Symbol	s -> freetype_library		3200005						
ANR	3201325	Symbol	a_font -> full_font_buf_len		3200005						
ANR	3201326	Symbol	face -> ft_face -> charmaps [ j ] -> platform_id		3200005						
ANR	3201327	Symbol	gs_malloc		3200005						
ANR	3201328	Symbol	& s -> bitmap_glyph -> bitmap		3200005						
ANR	3201329	Symbol	ft_strm		3200005						
ANR	3201330	Symbol	ft_face		3200005						
ANR	3201331	Symbol	s -> ftmemory -> user		3200005						
ANR	3201332	Symbol	cmap		3200005						
ANR	3201333	Symbol	open_args . num_params		3200005						
ANR	3201334	Symbol	own_font_data		3200005						
ANR	3201335	Symbol	face -> ft_transform		3200005						
ANR	3201336	Symbol	a_font -> is_type1		3200005						
ANR	3201337	Symbol	s -> outline_glyph		3200005						
ANR	3201338	Symbol	gs_fapi_serialize_type2_font		3200005						
ANR	3201339	Symbol	FT_OPEN_MEMORY		3200005						
ANR	3201340	Symbol	* a_font -> ttf_cmap_req		3200005						
ANR	3201341	Symbol	& ft_face		3200005						
ANR	3201342	Symbol	FT_PARAM_TAG_INCREMENTAL		3200005						
ANR	3201343	Symbol	* * s		3200005						
ANR	3201344	Symbol	* * face -> ft_face -> charmaps		3200005						
ANR	3201345	Symbol	gs_error_invalidfont		3200005						
ANR	3201346	Symbol	a_font -> need_decrypt		3200005						
ANR	3201347	Symbol	gs_fapi_font_feature_TT_size		3200005						
ANR	3201348	Symbol	& args		3200005						
ANR	3201349	Symbol	& ft_strm		3200005						
ANR	3201350	Symbol	a_font -> get_word		3200005						
ANR	3201351	Symbol	* a_font_scale -> HWResolution		3200005						
ANR	3201352	Symbol	& ft_param		3200005						
ANR	3201353	Symbol	FT_Open_Face		3200005						
ANR	3201354	Symbol	i		3200005						
ANR	3201355	Symbol	j		3200005						
ANR	3201356	Symbol	a_font -> font_file_path		3200005						
ANR	3201357	Symbol	& face -> height		3200005						
ANR	3201358	Symbol	gs_fapi_toplevel_begin		3200005						
ANR	3201359	Symbol	ft_encoding_unicode		3200005						
ANR	3201360	Symbol	face		3200005						
ANR	3201361	Symbol	a_font -> server_font_data		3200005						
ANR	3201362	Symbol	a_font -> subfont		3200005						
ANR	3201363	Symbol	a_descendant_code		3200005						
ANR	3201364	Symbol	s		3200005						
ANR	3201365	Symbol	open_args . stream		3200005						
ANR	3201366	Symbol	& open_args		3200005						
ANR	3201367	Symbol	a_font -> ttf_cmap_req [ i ] . platform_id		3200005						
ANR	3201368	Symbol	data_owned		3200005						
ANR	3201369	Symbol	gs_fapi_toplevel_complete		3200005						
ANR	3201370	Symbol	ft_param . data		3200005						
ANR	3201371	Symbol	* a_font		3200005						
ANR	3201372	Symbol	& face -> vert_res		3200005						
ANR	3201373	Symbol	* face -> ft_face -> charmaps		3200005						
ANR	3201374	Symbol	open_args . params		3200005						
ANR	3201375	Symbol	a_font -> is_cid		3200005						
ANR	3201376	Symbol	new_face		3200005						
ANR	3201377	Symbol	* * * face		3200005						
ANR	3201378	Symbol	open_args		3200005						
ANR	3201379	Symbol	face -> ft_transform . xx		3200005						
ANR	3201380	Symbol	face -> ft_transform . xy		3200005						
ANR	3201381	Symbol	* * * * face		3200005						
ANR	3201382	Symbol	a_font		3200005						
ANR	3201383	Symbol	* * j		3200005						
ANR	3201384	Symbol	NULL		3200005						
ANR	3201385	Symbol	ft_param		3200005						
ANR	3201386	Symbol	args . flags		3200005						
ANR	3201387	Symbol	face -> ft_face -> num_charmaps		3200005						
ANR	3201388	Symbol	true		3200005						
ANR	3201389	Symbol	* a_font_scale		3200005						
ANR	3201390	Symbol	face -> ft_face -> charmaps		3200005						
ANR	3201391	Symbol	ft_error		3200005						
ANR	3201392	Symbol	gs_error_unregistered		3200005						
ANR	3201393	Symbol	code		3200005						
ANR	3201394	Symbol	open_args . memory_size		3200005						
ANR	3201395	Symbol	gs_fapi_font_feature_FontType		3200005						
ANR	3201396	Symbol	* face -> ft_face		3200005						
ANR	3201397	Symbol	GS_FAPI_NUM_TTF_CMAP_REQ		3200005						
ANR	3201398	Symbol	mem		3200005						
ANR	3201399	Symbol	face -> width		3200005						
ANR	3201400	Symbol	s -> ftmemory		3200005						
ANR	3201401	Symbol	FF_alloc		3200005						
ANR	3201402	Symbol	face -> height		3200005						
ANR	3201403	Symbol	* a_font_scale -> matrix		3200005						
ANR	3201404	Symbol	FT_OPEN_STREAM		3200005						
ANR	3201405	Symbol	& face -> horz_res		3200005						
ANR	3201406	Symbol	face -> ft_face		3200005						
ANR	3201407	Symbol	length		3200005						
ANR	3201408	Symbol	a_font -> get_long		3200005						
ANR	3201409	Symbol	a_font -> full_font_buf		3200005						
ANR	3201410	Symbol	args		3200005						
ANR	3201411	Symbol	face -> ft_transform . yy		3200005						
ANR	3201412	Symbol	FT_Set_Char_Size		3200005						
ANR	3201413	Symbol	gs_error_VMerror		3200005						
ANR	3201414	Symbol	open_args . flags		3200005						
ANR	3201415	Symbol	face -> ft_transform . yx		3200005						
ANR	3201416	Symbol	face -> vert_res		3200005						
ANR	3201417	Symbol	* i		3200005						
ANR	3201418	Symbol	* j		3200005						
ANR	3201419	Symbol	ft_param . tag		3200005						
ANR	3201420	Symbol	args . stream		3200005						
ANR	3201421	Symbol	& face -> width		3200005						
ANR	3201422	Symbol	FT_OPEN_PARAMS		3200005						
ANR	3201423	Symbol	FT_New_Memory_Face		3200005						
ANR	3201424	Symbol	gs_fapi_serialize_type1_font		3200005						
ANR	3201425	Symbol	a_map		3200005						
ANR	3201426	Symbol	* s		3200005						
ANR	3201427	Symbol	face -> ft_face -> charmaps [ j ] -> encoding_id		3200005						
ANR	3201428	Symbol	& face -> ft_transform		3200005						
ANR	3201429	Function	gs_fapi_ft_get_decodingID	1417:0:49566:49756							
ANR	3201430	FunctionDef	"gs_fapi_ft_get_decodingID (gs_fapi_server * a_server , gs_fapi_font * a_font , const char * * a_decoding_id)"		3201429	0					
ANR	3201431	CompoundStatement		1420:0:49708:49756	3201429	0					
ANR	3201432	ExpressionStatement	"* a_decoding_id = ""Unicode"""	1421:4:49714:49740	3201429	0	True				
ANR	3201433	AssignmentExpression	"* a_decoding_id = ""Unicode"""		3201429	0		=			
ANR	3201434	UnaryOperationExpression	* a_decoding_id		3201429	0					
ANR	3201435	UnaryOperator	*		3201429	0					
ANR	3201436	Identifier	a_decoding_id		3201429	1					
ANR	3201437	PrimaryExpression	"""Unicode"""		3201429	1					
ANR	3201438	ReturnStatement	return 0 ;	1422:4:49746:49754	3201429	1	True				
ANR	3201439	PrimaryExpression	0		3201429	0					
ANR	3201440	ReturnType	static gs_fapi_retcode		3201429	1					
ANR	3201441	Identifier	gs_fapi_ft_get_decodingID		3201429	2					
ANR	3201442	ParameterList	"gs_fapi_server * a_server , gs_fapi_font * a_font , const char * * a_decoding_id"		3201429	3					
ANR	3201443	Parameter	gs_fapi_server * a_server	1418:26:49615:49639	3201429	0	True				
ANR	3201444	ParameterType	gs_fapi_server *		3201429	0					
ANR	3201445	Identifier	a_server		3201429	1					
ANR	3201446	Parameter	gs_fapi_font * a_font	1418:53:49642:49662	3201429	1	True				
ANR	3201447	ParameterType	gs_fapi_font *		3201429	0					
ANR	3201448	Identifier	a_font		3201429	1					
ANR	3201449	Parameter	const char * * a_decoding_id	1419:15:49680:49705	3201429	2	True				
ANR	3201450	ParameterType	const char * *		3201429	0					
ANR	3201451	Identifier	a_decoding_id		3201429	1					
ANR	3201452	CFGEntryNode	ENTRY		3201429		True				
ANR	3201453	CFGExitNode	EXIT		3201429		True				
ANR	3201454	Symbol	a_decoding_id		3201429						
ANR	3201455	Symbol	a_server		3201429						
ANR	3201456	Symbol	* a_decoding_id		3201429						
ANR	3201457	Symbol	a_font		3201429						
ANR	3201458	Function	gs_fapi_ft_get_font_bbox	1428:0:49810:50247							
ANR	3201459	FunctionDef	"gs_fapi_ft_get_font_bbox (gs_fapi_server * a_server , gs_fapi_font * a_font , int a_box [ 4 ] , int unitsPerEm [ 2 ])"		3201458	0					
ANR	3201460	CompoundStatement		1430:0:49941:50247	3201458	0					
ANR	3201461	IdentifierDeclStatement	ff_face * face = ( ff_face * ) a_font -> server_font_data ;	1431:4:49947:49999	3201458	0	True				
ANR	3201462	IdentifierDecl	* face = ( ff_face * ) a_font -> server_font_data		3201458	0					
ANR	3201463	IdentifierDeclType	ff_face *		3201458	0					
ANR	3201464	Identifier	face		3201458	1					
ANR	3201465	AssignmentExpression	* face = ( ff_face * ) a_font -> server_font_data		3201458	2		=			
ANR	3201466	Identifier	face		3201458	0					
ANR	3201467	CastExpression	( ff_face * ) a_font -> server_font_data		3201458	1					
ANR	3201468	CastTarget	ff_face *		3201458	0					
ANR	3201469	PtrMemberAccess	a_font -> server_font_data		3201458	1					
ANR	3201470	Identifier	a_font		3201458	0					
ANR	3201471	Identifier	server_font_data		3201458	1					
ANR	3201472	ExpressionStatement	a_box [ 0 ] = face -> ft_face -> bbox . xMin	1433:4:50006:50041	3201458	1	True				
ANR	3201473	AssignmentExpression	a_box [ 0 ] = face -> ft_face -> bbox . xMin		3201458	0		=			
ANR	3201474	ArrayIndexing	a_box [ 0 ]		3201458	0					
ANR	3201475	Identifier	a_box		3201458	0					
ANR	3201476	PrimaryExpression	0		3201458	1					
ANR	3201477	MemberAccess	face -> ft_face -> bbox . xMin		3201458	1					
ANR	3201478	PtrMemberAccess	face -> ft_face -> bbox		3201458	0					
ANR	3201479	PtrMemberAccess	face -> ft_face		3201458	0					
ANR	3201480	Identifier	face		3201458	0					
ANR	3201481	Identifier	ft_face		3201458	1					
ANR	3201482	Identifier	bbox		3201458	1					
ANR	3201483	Identifier	xMin		3201458	1					
ANR	3201484	ExpressionStatement	a_box [ 1 ] = face -> ft_face -> bbox . yMin	1434:4:50047:50082	3201458	2	True				
ANR	3201485	AssignmentExpression	a_box [ 1 ] = face -> ft_face -> bbox . yMin		3201458	0		=			
ANR	3201486	ArrayIndexing	a_box [ 1 ]		3201458	0					
ANR	3201487	Identifier	a_box		3201458	0					
ANR	3201488	PrimaryExpression	1		3201458	1					
ANR	3201489	MemberAccess	face -> ft_face -> bbox . yMin		3201458	1					
ANR	3201490	PtrMemberAccess	face -> ft_face -> bbox		3201458	0					
ANR	3201491	PtrMemberAccess	face -> ft_face		3201458	0					
ANR	3201492	Identifier	face		3201458	0					
ANR	3201493	Identifier	ft_face		3201458	1					
ANR	3201494	Identifier	bbox		3201458	1					
ANR	3201495	Identifier	yMin		3201458	1					
ANR	3201496	ExpressionStatement	a_box [ 2 ] = face -> ft_face -> bbox . xMax	1435:4:50088:50123	3201458	3	True				
ANR	3201497	AssignmentExpression	a_box [ 2 ] = face -> ft_face -> bbox . xMax		3201458	0		=			
ANR	3201498	ArrayIndexing	a_box [ 2 ]		3201458	0					
ANR	3201499	Identifier	a_box		3201458	0					
ANR	3201500	PrimaryExpression	2		3201458	1					
ANR	3201501	MemberAccess	face -> ft_face -> bbox . xMax		3201458	1					
ANR	3201502	PtrMemberAccess	face -> ft_face -> bbox		3201458	0					
ANR	3201503	PtrMemberAccess	face -> ft_face		3201458	0					
ANR	3201504	Identifier	face		3201458	0					
ANR	3201505	Identifier	ft_face		3201458	1					
ANR	3201506	Identifier	bbox		3201458	1					
ANR	3201507	Identifier	xMax		3201458	1					
ANR	3201508	ExpressionStatement	a_box [ 3 ] = face -> ft_face -> bbox . yMax	1436:4:50129:50164	3201458	4	True				
ANR	3201509	AssignmentExpression	a_box [ 3 ] = face -> ft_face -> bbox . yMax		3201458	0		=			
ANR	3201510	ArrayIndexing	a_box [ 3 ]		3201458	0					
ANR	3201511	Identifier	a_box		3201458	0					
ANR	3201512	PrimaryExpression	3		3201458	1					
ANR	3201513	MemberAccess	face -> ft_face -> bbox . yMax		3201458	1					
ANR	3201514	PtrMemberAccess	face -> ft_face -> bbox		3201458	0					
ANR	3201515	PtrMemberAccess	face -> ft_face		3201458	0					
ANR	3201516	Identifier	face		3201458	0					
ANR	3201517	Identifier	ft_face		3201458	1					
ANR	3201518	Identifier	bbox		3201458	1					
ANR	3201519	Identifier	yMax		3201458	1					
ANR	3201520	ExpressionStatement	unitsPerEm [ 0 ] = unitsPerEm [ 1 ] = face -> ft_face -> units_per_EM	1438:4:50171:50230	3201458	5	True				
ANR	3201521	AssignmentExpression	unitsPerEm [ 0 ] = unitsPerEm [ 1 ] = face -> ft_face -> units_per_EM		3201458	0		=			
ANR	3201522	ArrayIndexing	unitsPerEm [ 0 ]		3201458	0					
ANR	3201523	Identifier	unitsPerEm		3201458	0					
ANR	3201524	PrimaryExpression	0		3201458	1					
ANR	3201525	AssignmentExpression	unitsPerEm [ 1 ] = face -> ft_face -> units_per_EM		3201458	1		=			
ANR	3201526	ArrayIndexing	unitsPerEm [ 1 ]		3201458	0					
ANR	3201527	Identifier	unitsPerEm		3201458	0					
ANR	3201528	PrimaryExpression	1		3201458	1					
ANR	3201529	PtrMemberAccess	face -> ft_face -> units_per_EM		3201458	1					
ANR	3201530	PtrMemberAccess	face -> ft_face		3201458	0					
ANR	3201531	Identifier	face		3201458	0					
ANR	3201532	Identifier	ft_face		3201458	1					
ANR	3201533	Identifier	units_per_EM		3201458	1					
ANR	3201534	ReturnStatement	return 0 ;	1440:4:50237:50245	3201458	6	True				
ANR	3201535	PrimaryExpression	0		3201458	0					
ANR	3201536	ReturnType	static gs_fapi_retcode		3201458	1					
ANR	3201537	Identifier	gs_fapi_ft_get_font_bbox		3201458	2					
ANR	3201538	ParameterList	"gs_fapi_server * a_server , gs_fapi_font * a_font , int a_box [ 4 ] , int unitsPerEm [ 2 ]"		3201458	3					
ANR	3201539	Parameter	gs_fapi_server * a_server	1429:25:49858:49882	3201458	0	True				
ANR	3201540	ParameterType	gs_fapi_server *		3201458	0					
ANR	3201541	Identifier	a_server		3201458	1					
ANR	3201542	Parameter	gs_fapi_font * a_font	1429:52:49885:49905	3201458	1	True				
ANR	3201543	ParameterType	gs_fapi_font *		3201458	0					
ANR	3201544	Identifier	a_font		3201458	1					
ANR	3201545	Parameter	int a_box [ 4 ]	1429:75:49908:49919	3201458	2	True				
ANR	3201546	ParameterType	int [ 4 ]		3201458	0					
ANR	3201547	Identifier	a_box		3201458	1					
ANR	3201548	Parameter	int unitsPerEm [ 2 ]	1429:89:49922:49938	3201458	3	True				
ANR	3201549	ParameterType	int [ 2 ]		3201458	0					
ANR	3201550	Identifier	unitsPerEm		3201458	1					
ANR	3201551	CFGEntryNode	ENTRY		3201458		True				
ANR	3201552	CFGExitNode	EXIT		3201458		True				
ANR	3201553	Symbol	a_server		3201458						
ANR	3201554	Symbol	face -> ft_face		3201458						
ANR	3201555	Symbol	face -> ft_face -> bbox		3201458						
ANR	3201556	Symbol	face -> ft_face -> bbox . yMax		3201458						
ANR	3201557	Symbol	* a_font		3201458						
ANR	3201558	Symbol	unitsPerEm		3201458						
ANR	3201559	Symbol	* face		3201458						
ANR	3201560	Symbol	* face -> ft_face		3201458						
ANR	3201561	Symbol	a_box		3201458						
ANR	3201562	Symbol	face -> ft_face -> bbox . xMax		3201458						
ANR	3201563	Symbol	face		3201458						
ANR	3201564	Symbol	a_font -> server_font_data		3201458						
ANR	3201565	Symbol	* a_box		3201458						
ANR	3201566	Symbol	face -> ft_face -> bbox . xMin		3201458						
ANR	3201567	Symbol	face -> ft_face -> units_per_EM		3201458						
ANR	3201568	Symbol	* unitsPerEm		3201458						
ANR	3201569	Symbol	face -> ft_face -> bbox . yMin		3201458						
ANR	3201570	Symbol	a_font		3201458						
ANR	3201571	Symbol	* * face		3201458						
ANR	3201572	Function	gs_fapi_ft_get_font_proportional_feature	1447:0:50361:50572							
ANR	3201573	FunctionDef	"gs_fapi_ft_get_font_proportional_feature (gs_fapi_server * a_server , gs_fapi_font * a_font , bool * a_proportional)"		3201572	0					
ANR	3201574	CompoundStatement		1450:0:50528:50572	3201572	0					
ANR	3201575	ExpressionStatement	* a_proportional = true	1451:4:50534:50556	3201572	0	True				
ANR	3201576	AssignmentExpression	* a_proportional = true		3201572	0		=			
ANR	3201577	UnaryOperationExpression	* a_proportional		3201572	0					
ANR	3201578	UnaryOperator	*		3201572	0					
ANR	3201579	Identifier	a_proportional		3201572	1					
ANR	3201580	Identifier	true		3201572	1					
ANR	3201581	ReturnStatement	return 0 ;	1452:4:50562:50570	3201572	1	True				
ANR	3201582	PrimaryExpression	0		3201572	0					
ANR	3201583	ReturnType	static gs_fapi_retcode		3201572	1					
ANR	3201584	Identifier	gs_fapi_ft_get_font_proportional_feature		3201572	2					
ANR	3201585	ParameterList	"gs_fapi_server * a_server , gs_fapi_font * a_font , bool * a_proportional"		3201572	3					
ANR	3201586	Parameter	gs_fapi_server * a_server	1448:41:50425:50449	3201572	0	True				
ANR	3201587	ParameterType	gs_fapi_server *		3201572	0					
ANR	3201588	Identifier	a_server		3201572	1					
ANR	3201589	Parameter	gs_fapi_font * a_font	1449:30:50482:50502	3201572	1	True				
ANR	3201590	ParameterType	gs_fapi_font *		3201572	0					
ANR	3201591	Identifier	a_font		3201572	1					
ANR	3201592	Parameter	bool * a_proportional	1449:53:50505:50525	3201572	2	True				
ANR	3201593	ParameterType	bool *		3201572	0					
ANR	3201594	Identifier	a_proportional		3201572	1					
ANR	3201595	CFGEntryNode	ENTRY		3201572		True				
ANR	3201596	CFGExitNode	EXIT		3201572		True				
ANR	3201597	Symbol	a_server		3201572						
ANR	3201598	Symbol	true		3201572						
ANR	3201599	Symbol	* a_proportional		3201572						
ANR	3201600	Symbol	a_proportional		3201572						
ANR	3201601	Symbol	a_font		3201572						
ANR	3201602	Function	gs_fapi_ft_can_retrieve_char_by_name	1461:0:50886:51628							
ANR	3201603	FunctionDef	"gs_fapi_ft_can_retrieve_char_by_name (gs_fapi_server * a_server , gs_fapi_font * a_font , gs_fapi_char_ref * a_char_ref , bool * a_result)"		3201602	0					
ANR	3201604	CompoundStatement		1464:0:51070:51628	3201602	0					
ANR	3201605	IdentifierDeclStatement	ff_face * face = ( ff_face * ) a_font -> server_font_data ;	1465:4:51076:51128	3201602	0	True				
ANR	3201606	IdentifierDecl	* face = ( ff_face * ) a_font -> server_font_data		3201602	0					
ANR	3201607	IdentifierDeclType	ff_face *		3201602	0					
ANR	3201608	Identifier	face		3201602	1					
ANR	3201609	AssignmentExpression	* face = ( ff_face * ) a_font -> server_font_data		3201602	2		=			
ANR	3201610	Identifier	face		3201602	0					
ANR	3201611	CastExpression	( ff_face * ) a_font -> server_font_data		3201602	1					
ANR	3201612	CastTarget	ff_face *		3201602	0					
ANR	3201613	PtrMemberAccess	a_font -> server_font_data		3201602	1					
ANR	3201614	Identifier	a_font		3201602	0					
ANR	3201615	Identifier	server_font_data		3201602	1					
ANR	3201616	IdentifierDeclStatement	char name [ 128 ] ;	1466:4:51134:51148	3201602	1	True				
ANR	3201617	IdentifierDecl	name [ 128 ]		3201602	0					
ANR	3201618	IdentifierDeclType	char [ 128 ]		3201602	0					
ANR	3201619	Identifier	name		3201602	1					
ANR	3201620	PrimaryExpression	128		3201602	2					
ANR	3201621	IfStatement	if ( FT_HAS_GLYPH_NAMES ( face -> ft_face ) && a_char_ref -> char_name_length < sizeof ( name ) )		3201602	2					
ANR	3201622	Condition	FT_HAS_GLYPH_NAMES ( face -> ft_face ) && a_char_ref -> char_name_length < sizeof ( name )	1468:8:51159:51246	3201602	0	True				
ANR	3201623	AndExpression	FT_HAS_GLYPH_NAMES ( face -> ft_face ) && a_char_ref -> char_name_length < sizeof ( name )		3201602	0		&&			
ANR	3201624	CallExpression	FT_HAS_GLYPH_NAMES ( face -> ft_face )		3201602	0					
ANR	3201625	Callee	FT_HAS_GLYPH_NAMES		3201602	0					
ANR	3201626	Identifier	FT_HAS_GLYPH_NAMES		3201602	0					
ANR	3201627	ArgumentList	face -> ft_face		3201602	1					
ANR	3201628	Argument	face -> ft_face		3201602	0					
ANR	3201629	PtrMemberAccess	face -> ft_face		3201602	0					
ANR	3201630	Identifier	face		3201602	0					
ANR	3201631	Identifier	ft_face		3201602	1					
ANR	3201632	RelationalExpression	a_char_ref -> char_name_length < sizeof ( name )		3201602	1		<			
ANR	3201633	PtrMemberAccess	a_char_ref -> char_name_length		3201602	0					
ANR	3201634	Identifier	a_char_ref		3201602	0					
ANR	3201635	Identifier	char_name_length		3201602	1					
ANR	3201636	SizeofExpression	sizeof ( name )		3201602	1					
ANR	3201637	Sizeof	sizeof		3201602	0					
ANR	3201638	SizeofOperand	name		3201602	1					
ANR	3201639	CompoundStatement		6:56:178:178	3201602	1					
ANR	3201640	ExpressionStatement	"memcpy ( name , a_char_ref -> char_name , a_char_ref -> char_name_length )"	1470:8:51259:51324	3201602	0	True				
ANR	3201641	CallExpression	"memcpy ( name , a_char_ref -> char_name , a_char_ref -> char_name_length )"		3201602	0					
ANR	3201642	Callee	memcpy		3201602	0					
ANR	3201643	Identifier	memcpy		3201602	0					
ANR	3201644	ArgumentList	name		3201602	1					
ANR	3201645	Argument	name		3201602	0					
ANR	3201646	Identifier	name		3201602	0					
ANR	3201647	Argument	a_char_ref -> char_name		3201602	1					
ANR	3201648	PtrMemberAccess	a_char_ref -> char_name		3201602	0					
ANR	3201649	Identifier	a_char_ref		3201602	0					
ANR	3201650	Identifier	char_name		3201602	1					
ANR	3201651	Argument	a_char_ref -> char_name_length		3201602	2					
ANR	3201652	PtrMemberAccess	a_char_ref -> char_name_length		3201602	0					
ANR	3201653	Identifier	a_char_ref		3201602	0					
ANR	3201654	Identifier	char_name_length		3201602	1					
ANR	3201655	ExpressionStatement	name [ a_char_ref -> char_name_length ] = 0	1471:8:51334:51372	3201602	1	True				
ANR	3201656	AssignmentExpression	name [ a_char_ref -> char_name_length ] = 0		3201602	0		=			
ANR	3201657	ArrayIndexing	name [ a_char_ref -> char_name_length ]		3201602	0					
ANR	3201658	Identifier	name		3201602	0					
ANR	3201659	PtrMemberAccess	a_char_ref -> char_name_length		3201602	1					
ANR	3201660	Identifier	a_char_ref		3201602	0					
ANR	3201661	Identifier	char_name_length		3201602	1					
ANR	3201662	PrimaryExpression	0		3201602	1					
ANR	3201663	ExpressionStatement	"a_char_ref -> char_codes [ 0 ] = FT_Get_Name_Index ( face -> ft_face , name )"	1472:8:51382:51448	3201602	2	True				
ANR	3201664	AssignmentExpression	"a_char_ref -> char_codes [ 0 ] = FT_Get_Name_Index ( face -> ft_face , name )"		3201602	0		=			
ANR	3201665	ArrayIndexing	a_char_ref -> char_codes [ 0 ]		3201602	0					
ANR	3201666	PtrMemberAccess	a_char_ref -> char_codes		3201602	0					
ANR	3201667	Identifier	a_char_ref		3201602	0					
ANR	3201668	Identifier	char_codes		3201602	1					
ANR	3201669	PrimaryExpression	0		3201602	1					
ANR	3201670	CallExpression	"FT_Get_Name_Index ( face -> ft_face , name )"		3201602	1					
ANR	3201671	Callee	FT_Get_Name_Index		3201602	0					
ANR	3201672	Identifier	FT_Get_Name_Index		3201602	0					
ANR	3201673	ArgumentList	face -> ft_face		3201602	1					
ANR	3201674	Argument	face -> ft_face		3201602	0					
ANR	3201675	PtrMemberAccess	face -> ft_face		3201602	0					
ANR	3201676	Identifier	face		3201602	0					
ANR	3201677	Identifier	ft_face		3201602	1					
ANR	3201678	Argument	name		3201602	1					
ANR	3201679	Identifier	name		3201602	0					
ANR	3201680	ExpressionStatement	* a_result = a_char_ref -> char_codes [ 0 ] != 0	1473:8:51458:51500	3201602	3	True				
ANR	3201681	AssignmentExpression	* a_result = a_char_ref -> char_codes [ 0 ] != 0		3201602	0		=			
ANR	3201682	UnaryOperationExpression	* a_result		3201602	0					
ANR	3201683	UnaryOperator	*		3201602	0					
ANR	3201684	Identifier	a_result		3201602	1					
ANR	3201685	EqualityExpression	a_char_ref -> char_codes [ 0 ] != 0		3201602	1		!=			
ANR	3201686	ArrayIndexing	a_char_ref -> char_codes [ 0 ]		3201602	0					
ANR	3201687	PtrMemberAccess	a_char_ref -> char_codes		3201602	0					
ANR	3201688	Identifier	a_char_ref		3201602	0					
ANR	3201689	Identifier	char_codes		3201602	1					
ANR	3201690	PrimaryExpression	0		3201602	1					
ANR	3201691	PrimaryExpression	0		3201602	1					
ANR	3201692	IfStatement	if ( * a_result )		3201602	4					
ANR	3201693	Condition	* a_result	1474:12:51514:51522	3201602	0	True				
ANR	3201694	UnaryOperationExpression	* a_result		3201602	0					
ANR	3201695	UnaryOperator	*		3201602	0					
ANR	3201696	Identifier	a_result		3201602	1					
ANR	3201697	ExpressionStatement	a_char_ref -> is_glyph_index = true	1475:12:51537:51570	3201602	1	True				
ANR	3201698	AssignmentExpression	a_char_ref -> is_glyph_index = true		3201602	0		=			
ANR	3201699	PtrMemberAccess	a_char_ref -> is_glyph_index		3201602	0					
ANR	3201700	Identifier	a_char_ref		3201602	0					
ANR	3201701	Identifier	is_glyph_index		3201602	1					
ANR	3201702	Identifier	true		3201602	1					
ANR	3201703	ElseStatement	else		3201602	0					
ANR	3201704	ExpressionStatement	* a_result = false	1478:8:51595:51612	3201602	0	True				
ANR	3201705	AssignmentExpression	* a_result = false		3201602	0		=			
ANR	3201706	UnaryOperationExpression	* a_result		3201602	0					
ANR	3201707	UnaryOperator	*		3201602	0					
ANR	3201708	Identifier	a_result		3201602	1					
ANR	3201709	Identifier	false		3201602	1					
ANR	3201710	ReturnStatement	return 0 ;	1479:4:51618:51626	3201602	3	True				
ANR	3201711	PrimaryExpression	0		3201602	0					
ANR	3201712	ReturnType	static gs_fapi_retcode		3201602	1					
ANR	3201713	Identifier	gs_fapi_ft_can_retrieve_char_by_name		3201602	2					
ANR	3201714	ParameterList	"gs_fapi_server * a_server , gs_fapi_font * a_font , gs_fapi_char_ref * a_char_ref , bool * a_result"		3201602	3					
ANR	3201715	Parameter	gs_fapi_server * a_server	1462:37:50946:50970	3201602	0	True				
ANR	3201716	ParameterType	gs_fapi_server *		3201602	0					
ANR	3201717	Identifier	a_server		3201602	1					
ANR	3201718	Parameter	gs_fapi_font * a_font	1462:64:50973:50993	3201602	1	True				
ANR	3201719	ParameterType	gs_fapi_font *		3201602	0					
ANR	3201720	Identifier	a_font		3201602	1					
ANR	3201721	Parameter	gs_fapi_char_ref * a_char_ref	1463:26:51022:51050	3201602	2	True				
ANR	3201722	ParameterType	gs_fapi_char_ref *		3201602	0					
ANR	3201723	Identifier	a_char_ref		3201602	1					
ANR	3201724	Parameter	bool * a_result	1463:57:51053:51067	3201602	3	True				
ANR	3201725	ParameterType	bool *		3201602	0					
ANR	3201726	Identifier	a_result		3201602	1					
ANR	3201727	CFGEntryNode	ENTRY		3201602		True				
ANR	3201728	CFGExitNode	EXIT		3201602		True				
ANR	3201729	Symbol	* name		3201602						
ANR	3201730	Symbol	* a_char_ref -> char_name_length		3201602						
ANR	3201731	Symbol	* a_char_ref -> char_codes		3201602						
ANR	3201732	Symbol	a_server		3201602						
ANR	3201733	Symbol	FT_HAS_GLYPH_NAMES		3201602						
ANR	3201734	Symbol	face -> ft_face		3201602						
ANR	3201735	Symbol	a_char_ref		3201602						
ANR	3201736	Symbol	a_char_ref -> char_name		3201602						
ANR	3201737	Symbol	false		3201602						
ANR	3201738	Symbol	* a_font		3201602						
ANR	3201739	Symbol	* face		3201602						
ANR	3201740	Symbol	a_char_ref -> char_codes		3201602						
ANR	3201741	Symbol	a_char_ref -> is_glyph_index		3201602						
ANR	3201742	Symbol	face		3201602						
ANR	3201743	Symbol	a_font -> server_font_data		3201602						
ANR	3201744	Symbol	a_char_ref -> char_name_length		3201602						
ANR	3201745	Symbol	a_result		3201602						
ANR	3201746	Symbol	* a_char_ref		3201602						
ANR	3201747	Symbol	name		3201602						
ANR	3201748	Symbol	true		3201602						
ANR	3201749	Symbol	* * a_char_ref		3201602						
ANR	3201750	Symbol	* a_result		3201602						
ANR	3201751	Symbol	a_font		3201602						
ANR	3201752	Symbol	FT_Get_Name_Index		3201602						
ANR	3201753	Function	gs_fapi_ft_can_replace_metrics	1485:0:51689:51968							
ANR	3201754	FunctionDef	"gs_fapi_ft_can_replace_metrics (gs_fapi_server * a_server , gs_fapi_font * a_font , gs_fapi_char_ref * a_char_ref , int * a_result)"		3201753	0					
ANR	3201755	CompoundStatement		1488:0:51859:51968	3201753	0					
ANR	3201756	ExpressionStatement	* a_result = 1	1490:4:51939:51952	3201753	0	True				
ANR	3201757	AssignmentExpression	* a_result = 1		3201753	0		=			
ANR	3201758	UnaryOperationExpression	* a_result		3201753	0					
ANR	3201759	UnaryOperator	*		3201753	0					
ANR	3201760	Identifier	a_result		3201753	1					
ANR	3201761	PrimaryExpression	1		3201753	1					
ANR	3201762	ReturnStatement	return 0 ;	1491:4:51958:51966	3201753	1	True				
ANR	3201763	PrimaryExpression	0		3201753	0					
ANR	3201764	ReturnType	static gs_fapi_retcode		3201753	1					
ANR	3201765	Identifier	gs_fapi_ft_can_replace_metrics		3201753	2					
ANR	3201766	ParameterList	"gs_fapi_server * a_server , gs_fapi_font * a_font , gs_fapi_char_ref * a_char_ref , int * a_result"		3201753	3					
ANR	3201767	Parameter	gs_fapi_server * a_server	1486:31:51743:51767	3201753	0	True				
ANR	3201768	ParameterType	gs_fapi_server *		3201753	0					
ANR	3201769	Identifier	a_server		3201753	1					
ANR	3201770	Parameter	gs_fapi_font * a_font	1486:58:51770:51790	3201753	1	True				
ANR	3201771	ParameterType	gs_fapi_font *		3201753	0					
ANR	3201772	Identifier	a_font		3201753	1					
ANR	3201773	Parameter	gs_fapi_char_ref * a_char_ref	1487:20:51813:51841	3201753	2	True				
ANR	3201774	ParameterType	gs_fapi_char_ref *		3201753	0					
ANR	3201775	Identifier	a_char_ref		3201753	1					
ANR	3201776	Parameter	int * a_result	1487:51:51844:51856	3201753	3	True				
ANR	3201777	ParameterType	int *		3201753	0					
ANR	3201778	Identifier	a_result		3201753	1					
ANR	3201779	CFGEntryNode	ENTRY		3201753		True				
ANR	3201780	CFGExitNode	EXIT		3201753		True				
ANR	3201781	Symbol	a_result		3201753						
ANR	3201782	Symbol	a_server		3201753						
ANR	3201783	Symbol	a_char_ref		3201753						
ANR	3201784	Symbol	* a_result		3201753						
ANR	3201785	Symbol	a_font		3201753						
ANR	3201786	Function	gs_fapi_ft_get_char_width	1497:0:52043:52433							
ANR	3201787	FunctionDef	"gs_fapi_ft_get_char_width (gs_fapi_server * a_server , gs_fapi_font * a_font , gs_fapi_char_ref * a_char_ref , gs_fapi_metrics * a_metrics)"		3201786	0					
ANR	3201788	CompoundStatement		1500:0:52217:52433	3201786	0					
ANR	3201789	IdentifierDeclStatement	ff_server * s = ( ff_server * ) a_server ;	1501:4:52223:52260	3201786	0	True				
ANR	3201790	IdentifierDecl	* s = ( ff_server * ) a_server		3201786	0					
ANR	3201791	IdentifierDeclType	ff_server *		3201786	0					
ANR	3201792	Identifier	s		3201786	1					
ANR	3201793	AssignmentExpression	* s = ( ff_server * ) a_server		3201786	2		=			
ANR	3201794	Identifier	s		3201786	0					
ANR	3201795	CastExpression	( ff_server * ) a_server		3201786	1					
ANR	3201796	CastTarget	ff_server *		3201786	0					
ANR	3201797	Identifier	a_server		3201786	1					
ANR	3201798	ReturnStatement	"return load_glyph ( a_server , a_font , a_char_ref , a_metrics , ( FT_Glyph * ) & s -> outline_glyph , false , a_server -> max_bitmap ) ;"	1503:4:52267:52431	3201786	1	True				
ANR	3201799	CallExpression	"load_glyph ( a_server , a_font , a_char_ref , a_metrics , ( FT_Glyph * ) & s -> outline_glyph , false , a_server -> max_bitmap )"		3201786	0					
ANR	3201800	Callee	load_glyph		3201786	0					
ANR	3201801	Identifier	load_glyph		3201786	0					
ANR	3201802	ArgumentList	a_server		3201786	1					
ANR	3201803	Argument	a_server		3201786	0					
ANR	3201804	Identifier	a_server		3201786	0					
ANR	3201805	Argument	a_font		3201786	1					
ANR	3201806	Identifier	a_font		3201786	0					
ANR	3201807	Argument	a_char_ref		3201786	2					
ANR	3201808	Identifier	a_char_ref		3201786	0					
ANR	3201809	Argument	a_metrics		3201786	3					
ANR	3201810	Identifier	a_metrics		3201786	0					
ANR	3201811	Argument	( FT_Glyph * ) & s -> outline_glyph		3201786	4					
ANR	3201812	CastExpression	( FT_Glyph * ) & s -> outline_glyph		3201786	0					
ANR	3201813	CastTarget	FT_Glyph *		3201786	0					
ANR	3201814	UnaryOperationExpression	& s -> outline_glyph		3201786	1					
ANR	3201815	UnaryOperator	&		3201786	0					
ANR	3201816	PtrMemberAccess	s -> outline_glyph		3201786	1					
ANR	3201817	Identifier	s		3201786	0					
ANR	3201818	Identifier	outline_glyph		3201786	1					
ANR	3201819	Argument	false		3201786	5					
ANR	3201820	Identifier	false		3201786	0					
ANR	3201821	Argument	a_server -> max_bitmap		3201786	6					
ANR	3201822	PtrMemberAccess	a_server -> max_bitmap		3201786	0					
ANR	3201823	Identifier	a_server		3201786	0					
ANR	3201824	Identifier	max_bitmap		3201786	1					
ANR	3201825	ReturnType	static gs_fapi_retcode		3201786	1					
ANR	3201826	Identifier	gs_fapi_ft_get_char_width		3201786	2					
ANR	3201827	ParameterList	"gs_fapi_server * a_server , gs_fapi_font * a_font , gs_fapi_char_ref * a_char_ref , gs_fapi_metrics * a_metrics"		3201786	3					
ANR	3201828	Parameter	gs_fapi_server * a_server	1498:26:52092:52116	3201786	0	True				
ANR	3201829	ParameterType	gs_fapi_server *		3201786	0					
ANR	3201830	Identifier	a_server		3201786	1					
ANR	3201831	Parameter	gs_fapi_font * a_font	1498:53:52119:52139	3201786	1	True				
ANR	3201832	ParameterType	gs_fapi_font *		3201786	0					
ANR	3201833	Identifier	a_font		3201786	1					
ANR	3201834	Parameter	gs_fapi_char_ref * a_char_ref	1499:15:52157:52185	3201786	2	True				
ANR	3201835	ParameterType	gs_fapi_char_ref *		3201786	0					
ANR	3201836	Identifier	a_char_ref		3201786	1					
ANR	3201837	Parameter	gs_fapi_metrics * a_metrics	1499:46:52188:52214	3201786	3	True				
ANR	3201838	ParameterType	gs_fapi_metrics *		3201786	0					
ANR	3201839	Identifier	a_metrics		3201786	1					
ANR	3201840	CFGEntryNode	ENTRY		3201786		True				
ANR	3201841	CFGExitNode	EXIT		3201786		True				
ANR	3201842	Symbol	& s -> outline_glyph		3201786						
ANR	3201843	Symbol	load_glyph		3201786						
ANR	3201844	Symbol	a_metrics		3201786						
ANR	3201845	Symbol	s		3201786						
ANR	3201846	Symbol	a_server		3201786						
ANR	3201847	Symbol	a_char_ref		3201786						
ANR	3201848	Symbol	false		3201786						
ANR	3201849	Symbol	* a_server		3201786						
ANR	3201850	Symbol	a_server -> max_bitmap		3201786						
ANR	3201851	Symbol	a_font		3201786						
ANR	3201852	Function	gs_fapi_ft_get_fontmatrix	1508:0:52436:52643							
ANR	3201853	FunctionDef	"gs_fapi_ft_get_fontmatrix (gs_fapi_server * server , gs_matrix * m)"		3201852	0					
ANR	3201854	CompoundStatement		1510:0:52525:52643	3201852	0					
ANR	3201855	ExpressionStatement	m -> xx = 1.0	1511:4:52531:52542	3201852	0	True				
ANR	3201856	AssignmentExpression	m -> xx = 1.0		3201852	0		=			
ANR	3201857	PtrMemberAccess	m -> xx		3201852	0					
ANR	3201858	Identifier	m		3201852	0					
ANR	3201859	Identifier	xx		3201852	1					
ANR	3201860	PrimaryExpression	1.0		3201852	1					
ANR	3201861	ExpressionStatement	m -> xy = 0.0	1512:4:52548:52559	3201852	1	True				
ANR	3201862	AssignmentExpression	m -> xy = 0.0		3201852	0		=			
ANR	3201863	PtrMemberAccess	m -> xy		3201852	0					
ANR	3201864	Identifier	m		3201852	0					
ANR	3201865	Identifier	xy		3201852	1					
ANR	3201866	PrimaryExpression	0.0		3201852	1					
ANR	3201867	ExpressionStatement	m -> yx = 0.0	1513:4:52565:52576	3201852	2	True				
ANR	3201868	AssignmentExpression	m -> yx = 0.0		3201852	0		=			
ANR	3201869	PtrMemberAccess	m -> yx		3201852	0					
ANR	3201870	Identifier	m		3201852	0					
ANR	3201871	Identifier	yx		3201852	1					
ANR	3201872	PrimaryExpression	0.0		3201852	1					
ANR	3201873	ExpressionStatement	m -> yy = 1.0	1514:4:52582:52593	3201852	3	True				
ANR	3201874	AssignmentExpression	m -> yy = 1.0		3201852	0		=			
ANR	3201875	PtrMemberAccess	m -> yy		3201852	0					
ANR	3201876	Identifier	m		3201852	0					
ANR	3201877	Identifier	yy		3201852	1					
ANR	3201878	PrimaryExpression	1.0		3201852	1					
ANR	3201879	ExpressionStatement	m -> tx = 0.0	1515:4:52599:52610	3201852	4	True				
ANR	3201880	AssignmentExpression	m -> tx = 0.0		3201852	0		=			
ANR	3201881	PtrMemberAccess	m -> tx		3201852	0					
ANR	3201882	Identifier	m		3201852	0					
ANR	3201883	Identifier	tx		3201852	1					
ANR	3201884	PrimaryExpression	0.0		3201852	1					
ANR	3201885	ExpressionStatement	m -> ty = 0.0	1516:4:52616:52627	3201852	5	True				
ANR	3201886	AssignmentExpression	m -> ty = 0.0		3201852	0		=			
ANR	3201887	PtrMemberAccess	m -> ty		3201852	0					
ANR	3201888	Identifier	m		3201852	0					
ANR	3201889	Identifier	ty		3201852	1					
ANR	3201890	PrimaryExpression	0.0		3201852	1					
ANR	3201891	ReturnStatement	return 0 ;	1517:4:52633:52641	3201852	6	True				
ANR	3201892	PrimaryExpression	0		3201852	0					
ANR	3201893	ReturnType	static gs_fapi_retcode		3201852	1					
ANR	3201894	Identifier	gs_fapi_ft_get_fontmatrix		3201852	2					
ANR	3201895	ParameterList	"gs_fapi_server * server , gs_matrix * m"		3201852	3					
ANR	3201896	Parameter	gs_fapi_server * server	1509:26:52485:52507	3201852	0	True				
ANR	3201897	ParameterType	gs_fapi_server *		3201852	0					
ANR	3201898	Identifier	server		3201852	1					
ANR	3201899	Parameter	gs_matrix * m	1509:51:52510:52522	3201852	1	True				
ANR	3201900	ParameterType	gs_matrix *		3201852	0					
ANR	3201901	Identifier	m		3201852	1					
ANR	3201902	CFGEntryNode	ENTRY		3201852		True				
ANR	3201903	CFGExitNode	EXIT		3201852		True				
ANR	3201904	Symbol	server		3201852						
ANR	3201905	Symbol	m -> yx		3201852						
ANR	3201906	Symbol	m -> xy		3201852						
ANR	3201907	Symbol	m -> xx		3201852						
ANR	3201908	Symbol	m -> yy		3201852						
ANR	3201909	Symbol	* m		3201852						
ANR	3201910	Symbol	m -> ty		3201852						
ANR	3201911	Symbol	m -> tx		3201852						
ANR	3201912	Symbol	m		3201852						
ANR	3201913	Function	gs_fapi_ft_get_char_raster_metrics	1525:0:52830:53296							
ANR	3201914	FunctionDef	"gs_fapi_ft_get_char_raster_metrics (gs_fapi_server * a_server , gs_fapi_font * a_font , gs_fapi_char_ref * a_char_ref , gs_fapi_metrics * a_metrics)"		3201913	0					
ANR	3201915	CompoundStatement		1529:0:53046:53296	3201913	0					
ANR	3201916	IdentifierDeclStatement	ff_server * s = ( ff_server * ) a_server ;	1530:4:53052:53089	3201913	0	True				
ANR	3201917	IdentifierDecl	* s = ( ff_server * ) a_server		3201913	0					
ANR	3201918	IdentifierDeclType	ff_server *		3201913	0					
ANR	3201919	Identifier	s		3201913	1					
ANR	3201920	AssignmentExpression	* s = ( ff_server * ) a_server		3201913	2		=			
ANR	3201921	Identifier	s		3201913	0					
ANR	3201922	CastExpression	( ff_server * ) a_server		3201913	1					
ANR	3201923	CastTarget	ff_server *		3201913	0					
ANR	3201924	Identifier	a_server		3201913	1					
ANR	3201925	IdentifierDeclStatement	"gs_fapi_retcode error = load_glyph ( a_server , a_font , a_char_ref , a_metrics , ( FT_Glyph * ) & s -> bitmap_glyph , true , a_server -> max_bitmap ) ;"	1531:4:53095:53276	3201913	1	True				
ANR	3201926	IdentifierDecl	"error = load_glyph ( a_server , a_font , a_char_ref , a_metrics , ( FT_Glyph * ) & s -> bitmap_glyph , true , a_server -> max_bitmap )"		3201913	0					
ANR	3201927	IdentifierDeclType	gs_fapi_retcode		3201913	0					
ANR	3201928	Identifier	error		3201913	1					
ANR	3201929	AssignmentExpression	"error = load_glyph ( a_server , a_font , a_char_ref , a_metrics , ( FT_Glyph * ) & s -> bitmap_glyph , true , a_server -> max_bitmap )"		3201913	2		=			
ANR	3201930	Identifier	error		3201913	0					
ANR	3201931	CallExpression	"load_glyph ( a_server , a_font , a_char_ref , a_metrics , ( FT_Glyph * ) & s -> bitmap_glyph , true , a_server -> max_bitmap )"		3201913	1					
ANR	3201932	Callee	load_glyph		3201913	0					
ANR	3201933	Identifier	load_glyph		3201913	0					
ANR	3201934	ArgumentList	a_server		3201913	1					
ANR	3201935	Argument	a_server		3201913	0					
ANR	3201936	Identifier	a_server		3201913	0					
ANR	3201937	Argument	a_font		3201913	1					
ANR	3201938	Identifier	a_font		3201913	0					
ANR	3201939	Argument	a_char_ref		3201913	2					
ANR	3201940	Identifier	a_char_ref		3201913	0					
ANR	3201941	Argument	a_metrics		3201913	3					
ANR	3201942	Identifier	a_metrics		3201913	0					
ANR	3201943	Argument	( FT_Glyph * ) & s -> bitmap_glyph		3201913	4					
ANR	3201944	CastExpression	( FT_Glyph * ) & s -> bitmap_glyph		3201913	0					
ANR	3201945	CastTarget	FT_Glyph *		3201913	0					
ANR	3201946	UnaryOperationExpression	& s -> bitmap_glyph		3201913	1					
ANR	3201947	UnaryOperator	&		3201913	0					
ANR	3201948	PtrMemberAccess	s -> bitmap_glyph		3201913	1					
ANR	3201949	Identifier	s		3201913	0					
ANR	3201950	Identifier	bitmap_glyph		3201913	1					
ANR	3201951	Argument	true		3201913	5					
ANR	3201952	Identifier	true		3201913	0					
ANR	3201953	Argument	a_server -> max_bitmap		3201913	6					
ANR	3201954	PtrMemberAccess	a_server -> max_bitmap		3201913	0					
ANR	3201955	Identifier	a_server		3201913	0					
ANR	3201956	Identifier	max_bitmap		3201913	1					
ANR	3201957	ReturnStatement	return error ;	1535:4:53282:53294	3201913	2	True				
ANR	3201958	Identifier	error		3201913	0					
ANR	3201959	ReturnType	static gs_fapi_retcode		3201913	1					
ANR	3201960	Identifier	gs_fapi_ft_get_char_raster_metrics		3201913	2					
ANR	3201961	ParameterList	"gs_fapi_server * a_server , gs_fapi_font * a_font , gs_fapi_char_ref * a_char_ref , gs_fapi_metrics * a_metrics"		3201913	3					
ANR	3201962	Parameter	gs_fapi_server * a_server	1526:35:52888:52912	3201913	0	True				
ANR	3201963	ParameterType	gs_fapi_server *		3201913	0					
ANR	3201964	Identifier	a_server		3201913	1					
ANR	3201965	Parameter	gs_fapi_font * a_font	1526:62:52915:52935	3201913	1	True				
ANR	3201966	ParameterType	gs_fapi_font *		3201913	0					
ANR	3201967	Identifier	a_font		3201913	1					
ANR	3201968	Parameter	gs_fapi_char_ref * a_char_ref	1527:24:52962:52990	3201913	2	True				
ANR	3201969	ParameterType	gs_fapi_char_ref *		3201913	0					
ANR	3201970	Identifier	a_char_ref		3201913	1					
ANR	3201971	Parameter	gs_fapi_metrics * a_metrics	1528:24:53017:53043	3201913	3	True				
ANR	3201972	ParameterType	gs_fapi_metrics *		3201913	0					
ANR	3201973	Identifier	a_metrics		3201913	1					
ANR	3201974	CFGEntryNode	ENTRY		3201913		True				
ANR	3201975	CFGExitNode	EXIT		3201913		True				
ANR	3201976	Symbol	load_glyph		3201913						
ANR	3201977	Symbol	a_metrics		3201913						
ANR	3201978	Symbol	s		3201913						
ANR	3201979	Symbol	a_server		3201913						
ANR	3201980	Symbol	a_char_ref		3201913						
ANR	3201981	Symbol	true		3201913						
ANR	3201982	Symbol	* a_server		3201913						
ANR	3201983	Symbol	a_server -> max_bitmap		3201913						
ANR	3201984	Symbol	error		3201913						
ANR	3201985	Symbol	a_font		3201913						
ANR	3201986	Symbol	& s -> bitmap_glyph		3201913						
ANR	3201987	Function	gs_fapi_ft_get_char_raster	1541:0:53391:54045							
ANR	3201988	FunctionDef	"gs_fapi_ft_get_char_raster (gs_fapi_server * a_server , gs_fapi_raster * a_raster)"		3201987	0					
ANR	3201989	CompoundStatement		1543:0:53495:54045	3201987	0					
ANR	3201990	IdentifierDeclStatement	ff_server * s = ( ff_server * ) a_server ;	1544:4:53501:53538	3201987	0	True				
ANR	3201991	IdentifierDecl	* s = ( ff_server * ) a_server		3201987	0					
ANR	3201992	IdentifierDeclType	ff_server *		3201987	0					
ANR	3201993	Identifier	s		3201987	1					
ANR	3201994	AssignmentExpression	* s = ( ff_server * ) a_server		3201987	2		=			
ANR	3201995	Identifier	s		3201987	0					
ANR	3201996	CastExpression	( ff_server * ) a_server		3201987	1					
ANR	3201997	CastTarget	ff_server *		3201987	0					
ANR	3201998	Identifier	a_server		3201987	1					
ANR	3201999	IfStatement	if ( ! s -> bitmap_glyph )		3201987	1					
ANR	3202000	Condition	! s -> bitmap_glyph	1546:8:53549:53564	3201987	0	True				
ANR	3202001	UnaryOperationExpression	! s -> bitmap_glyph		3201987	0					
ANR	3202002	UnaryOperator	!		3201987	0					
ANR	3202003	PtrMemberAccess	s -> bitmap_glyph		3201987	1					
ANR	3202004	Identifier	s		3201987	0					
ANR	3202005	Identifier	bitmap_glyph		3201987	1					
ANR	3202006	ReturnStatement	return ( gs_error_unregistered ) ;	1547:8:53575:53604	3201987	1	True				
ANR	3202007	Identifier	gs_error_unregistered		3201987	0					
ANR	3202008	ExpressionStatement	a_raster -> p = s -> bitmap_glyph -> bitmap . buffer	1548:4:53610:53654	3201987	2	True				
ANR	3202009	AssignmentExpression	a_raster -> p = s -> bitmap_glyph -> bitmap . buffer		3201987	0		=			
ANR	3202010	PtrMemberAccess	a_raster -> p		3201987	0					
ANR	3202011	Identifier	a_raster		3201987	0					
ANR	3202012	Identifier	p		3201987	1					
ANR	3202013	MemberAccess	s -> bitmap_glyph -> bitmap . buffer		3201987	1					
ANR	3202014	PtrMemberAccess	s -> bitmap_glyph -> bitmap		3201987	0					
ANR	3202015	PtrMemberAccess	s -> bitmap_glyph		3201987	0					
ANR	3202016	Identifier	s		3201987	0					
ANR	3202017	Identifier	bitmap_glyph		3201987	1					
ANR	3202018	Identifier	bitmap		3201987	1					
ANR	3202019	Identifier	buffer		3201987	1					
ANR	3202020	ExpressionStatement	a_raster -> width = s -> bitmap_glyph -> bitmap . width	1549:4:53660:53707	3201987	3	True				
ANR	3202021	AssignmentExpression	a_raster -> width = s -> bitmap_glyph -> bitmap . width		3201987	0		=			
ANR	3202022	PtrMemberAccess	a_raster -> width		3201987	0					
ANR	3202023	Identifier	a_raster		3201987	0					
ANR	3202024	Identifier	width		3201987	1					
ANR	3202025	MemberAccess	s -> bitmap_glyph -> bitmap . width		3201987	1					
ANR	3202026	PtrMemberAccess	s -> bitmap_glyph -> bitmap		3201987	0					
ANR	3202027	PtrMemberAccess	s -> bitmap_glyph		3201987	0					
ANR	3202028	Identifier	s		3201987	0					
ANR	3202029	Identifier	bitmap_glyph		3201987	1					
ANR	3202030	Identifier	bitmap		3201987	1					
ANR	3202031	Identifier	width		3201987	1					
ANR	3202032	ExpressionStatement	a_raster -> height = s -> bitmap_glyph -> bitmap . rows	1550:4:53713:53760	3201987	4	True				
ANR	3202033	AssignmentExpression	a_raster -> height = s -> bitmap_glyph -> bitmap . rows		3201987	0		=			
ANR	3202034	PtrMemberAccess	a_raster -> height		3201987	0					
ANR	3202035	Identifier	a_raster		3201987	0					
ANR	3202036	Identifier	height		3201987	1					
ANR	3202037	MemberAccess	s -> bitmap_glyph -> bitmap . rows		3201987	1					
ANR	3202038	PtrMemberAccess	s -> bitmap_glyph -> bitmap		3201987	0					
ANR	3202039	PtrMemberAccess	s -> bitmap_glyph		3201987	0					
ANR	3202040	Identifier	s		3201987	0					
ANR	3202041	Identifier	bitmap_glyph		3201987	1					
ANR	3202042	Identifier	bitmap		3201987	1					
ANR	3202043	Identifier	rows		3201987	1					
ANR	3202044	ExpressionStatement	a_raster -> line_step = s -> bitmap_glyph -> bitmap . pitch	1551:4:53766:53817	3201987	5	True				
ANR	3202045	AssignmentExpression	a_raster -> line_step = s -> bitmap_glyph -> bitmap . pitch		3201987	0		=			
ANR	3202046	PtrMemberAccess	a_raster -> line_step		3201987	0					
ANR	3202047	Identifier	a_raster		3201987	0					
ANR	3202048	Identifier	line_step		3201987	1					
ANR	3202049	MemberAccess	s -> bitmap_glyph -> bitmap . pitch		3201987	1					
ANR	3202050	PtrMemberAccess	s -> bitmap_glyph -> bitmap		3201987	0					
ANR	3202051	PtrMemberAccess	s -> bitmap_glyph		3201987	0					
ANR	3202052	Identifier	s		3201987	0					
ANR	3202053	Identifier	bitmap_glyph		3201987	1					
ANR	3202054	Identifier	bitmap		3201987	1					
ANR	3202055	Identifier	pitch		3201987	1					
ANR	3202056	ExpressionStatement	a_raster -> orig_x = s -> bitmap_glyph -> left * 16	1552:4:53823:53868	3201987	6	True				
ANR	3202057	AssignmentExpression	a_raster -> orig_x = s -> bitmap_glyph -> left * 16		3201987	0		=			
ANR	3202058	PtrMemberAccess	a_raster -> orig_x		3201987	0					
ANR	3202059	Identifier	a_raster		3201987	0					
ANR	3202060	Identifier	orig_x		3201987	1					
ANR	3202061	MultiplicativeExpression	s -> bitmap_glyph -> left * 16		3201987	1		*			
ANR	3202062	PtrMemberAccess	s -> bitmap_glyph -> left		3201987	0					
ANR	3202063	PtrMemberAccess	s -> bitmap_glyph		3201987	0					
ANR	3202064	Identifier	s		3201987	0					
ANR	3202065	Identifier	bitmap_glyph		3201987	1					
ANR	3202066	Identifier	left		3201987	1					
ANR	3202067	PrimaryExpression	16		3201987	1					
ANR	3202068	ExpressionStatement	a_raster -> orig_y = s -> bitmap_glyph -> top * 16	1553:4:53874:53918	3201987	7	True				
ANR	3202069	AssignmentExpression	a_raster -> orig_y = s -> bitmap_glyph -> top * 16		3201987	0		=			
ANR	3202070	PtrMemberAccess	a_raster -> orig_y		3201987	0					
ANR	3202071	Identifier	a_raster		3201987	0					
ANR	3202072	Identifier	orig_y		3201987	1					
ANR	3202073	MultiplicativeExpression	s -> bitmap_glyph -> top * 16		3201987	1		*			
ANR	3202074	PtrMemberAccess	s -> bitmap_glyph -> top		3201987	0					
ANR	3202075	PtrMemberAccess	s -> bitmap_glyph		3201987	0					
ANR	3202076	Identifier	s		3201987	0					
ANR	3202077	Identifier	bitmap_glyph		3201987	1					
ANR	3202078	Identifier	top		3201987	1					
ANR	3202079	PrimaryExpression	16		3201987	1					
ANR	3202080	ExpressionStatement	a_raster -> left_indent = a_raster -> top_indent = a_raster -> black_height = a_raster -> black_width = 0	1554:4:53924:54029	3201987	8	True				
ANR	3202081	AssignmentExpression	a_raster -> left_indent = a_raster -> top_indent = a_raster -> black_height = a_raster -> black_width = 0		3201987	0		=			
ANR	3202082	PtrMemberAccess	a_raster -> left_indent		3201987	0					
ANR	3202083	Identifier	a_raster		3201987	0					
ANR	3202084	Identifier	left_indent		3201987	1					
ANR	3202085	AssignmentExpression	a_raster -> top_indent = a_raster -> black_height = a_raster -> black_width = 0		3201987	1		=			
ANR	3202086	PtrMemberAccess	a_raster -> top_indent		3201987	0					
ANR	3202087	Identifier	a_raster		3201987	0					
ANR	3202088	Identifier	top_indent		3201987	1					
ANR	3202089	AssignmentExpression	a_raster -> black_height = a_raster -> black_width = 0		3201987	1		=			
ANR	3202090	PtrMemberAccess	a_raster -> black_height		3201987	0					
ANR	3202091	Identifier	a_raster		3201987	0					
ANR	3202092	Identifier	black_height		3201987	1					
ANR	3202093	AssignmentExpression	a_raster -> black_width = 0		3201987	1		=			
ANR	3202094	PtrMemberAccess	a_raster -> black_width		3201987	0					
ANR	3202095	Identifier	a_raster		3201987	0					
ANR	3202096	Identifier	black_width		3201987	1					
ANR	3202097	PrimaryExpression	0		3201987	1					
ANR	3202098	ReturnStatement	return 0 ;	1556:4:54035:54043	3201987	9	True				
ANR	3202099	PrimaryExpression	0		3201987	0					
ANR	3202100	ReturnType	static gs_fapi_retcode		3201987	1					
ANR	3202101	Identifier	gs_fapi_ft_get_char_raster		3201987	2					
ANR	3202102	ParameterList	"gs_fapi_server * a_server , gs_fapi_raster * a_raster"		3201987	3					
ANR	3202103	Parameter	gs_fapi_server * a_server	1542:27:53441:53465	3201987	0	True				
ANR	3202104	ParameterType	gs_fapi_server *		3201987	0					
ANR	3202105	Identifier	a_server		3201987	1					
ANR	3202106	Parameter	gs_fapi_raster * a_raster	1542:54:53468:53492	3201987	1	True				
ANR	3202107	ParameterType	gs_fapi_raster *		3201987	0					
ANR	3202108	Identifier	a_raster		3201987	1					
ANR	3202109	CFGEntryNode	ENTRY		3201987		True				
ANR	3202110	CFGExitNode	EXIT		3201987		True				
ANR	3202111	Symbol	gs_error_unregistered		3201987						
ANR	3202112	Symbol	s -> bitmap_glyph -> bitmap		3201987						
ANR	3202113	Symbol	s -> bitmap_glyph -> bitmap . pitch		3201987						
ANR	3202114	Symbol	a_raster		3201987						
ANR	3202115	Symbol	s -> bitmap_glyph		3201987						
ANR	3202116	Symbol	a_raster -> black_width		3201987						
ANR	3202117	Symbol	* * s		3201987						
ANR	3202118	Symbol	a_raster -> p		3201987						
ANR	3202119	Symbol	* a_raster		3201987						
ANR	3202120	Symbol	a_raster -> top_indent		3201987						
ANR	3202121	Symbol	a_server		3201987						
ANR	3202122	Symbol	a_raster -> height		3201987						
ANR	3202123	Symbol	s -> bitmap_glyph -> bitmap . buffer		3201987						
ANR	3202124	Symbol	* s -> bitmap_glyph		3201987						
ANR	3202125	Symbol	s -> bitmap_glyph -> bitmap . rows		3201987						
ANR	3202126	Symbol	a_raster -> line_step		3201987						
ANR	3202127	Symbol	s -> bitmap_glyph -> left		3201987						
ANR	3202128	Symbol	s		3201987						
ANR	3202129	Symbol	s -> bitmap_glyph -> bitmap . width		3201987						
ANR	3202130	Symbol	a_raster -> left_indent		3201987						
ANR	3202131	Symbol	s -> bitmap_glyph -> top		3201987						
ANR	3202132	Symbol	a_raster -> width		3201987						
ANR	3202133	Symbol	a_raster -> orig_x		3201987						
ANR	3202134	Symbol	a_raster -> orig_y		3201987						
ANR	3202135	Symbol	* s		3201987						
ANR	3202136	Symbol	a_raster -> black_height		3201987						
ANR	3202137	Function	gs_fapi_ft_get_char_outline_metrics	1564:0:54246:54681							
ANR	3202138	FunctionDef	"gs_fapi_ft_get_char_outline_metrics (gs_fapi_server * a_server , gs_fapi_font * a_font , gs_fapi_char_ref * a_char_ref , gs_fapi_metrics * a_metrics)"		3202137	0					
ANR	3202139	CompoundStatement		1568:0:54465:54681	3202137	0					
ANR	3202140	IdentifierDeclStatement	ff_server * s = ( ff_server * ) a_server ;	1569:4:54471:54508	3202137	0	True				
ANR	3202141	IdentifierDecl	* s = ( ff_server * ) a_server		3202137	0					
ANR	3202142	IdentifierDeclType	ff_server *		3202137	0					
ANR	3202143	Identifier	s		3202137	1					
ANR	3202144	AssignmentExpression	* s = ( ff_server * ) a_server		3202137	2		=			
ANR	3202145	Identifier	s		3202137	0					
ANR	3202146	CastExpression	( ff_server * ) a_server		3202137	1					
ANR	3202147	CastTarget	ff_server *		3202137	0					
ANR	3202148	Identifier	a_server		3202137	1					
ANR	3202149	ReturnStatement	"return load_glyph ( a_server , a_font , a_char_ref , a_metrics , ( FT_Glyph * ) & s -> outline_glyph , false , a_server -> max_bitmap ) ;"	1571:4:54515:54679	3202137	1	True				
ANR	3202150	CallExpression	"load_glyph ( a_server , a_font , a_char_ref , a_metrics , ( FT_Glyph * ) & s -> outline_glyph , false , a_server -> max_bitmap )"		3202137	0					
ANR	3202151	Callee	load_glyph		3202137	0					
ANR	3202152	Identifier	load_glyph		3202137	0					
ANR	3202153	ArgumentList	a_server		3202137	1					
ANR	3202154	Argument	a_server		3202137	0					
ANR	3202155	Identifier	a_server		3202137	0					
ANR	3202156	Argument	a_font		3202137	1					
ANR	3202157	Identifier	a_font		3202137	0					
ANR	3202158	Argument	a_char_ref		3202137	2					
ANR	3202159	Identifier	a_char_ref		3202137	0					
ANR	3202160	Argument	a_metrics		3202137	3					
ANR	3202161	Identifier	a_metrics		3202137	0					
ANR	3202162	Argument	( FT_Glyph * ) & s -> outline_glyph		3202137	4					
ANR	3202163	CastExpression	( FT_Glyph * ) & s -> outline_glyph		3202137	0					
ANR	3202164	CastTarget	FT_Glyph *		3202137	0					
ANR	3202165	UnaryOperationExpression	& s -> outline_glyph		3202137	1					
ANR	3202166	UnaryOperator	&		3202137	0					
ANR	3202167	PtrMemberAccess	s -> outline_glyph		3202137	1					
ANR	3202168	Identifier	s		3202137	0					
ANR	3202169	Identifier	outline_glyph		3202137	1					
ANR	3202170	Argument	false		3202137	5					
ANR	3202171	Identifier	false		3202137	0					
ANR	3202172	Argument	a_server -> max_bitmap		3202137	6					
ANR	3202173	PtrMemberAccess	a_server -> max_bitmap		3202137	0					
ANR	3202174	Identifier	a_server		3202137	0					
ANR	3202175	Identifier	max_bitmap		3202137	1					
ANR	3202176	ReturnType	static gs_fapi_retcode		3202137	1					
ANR	3202177	Identifier	gs_fapi_ft_get_char_outline_metrics		3202137	2					
ANR	3202178	ParameterList	"gs_fapi_server * a_server , gs_fapi_font * a_font , gs_fapi_char_ref * a_char_ref , gs_fapi_metrics * a_metrics"		3202137	3					
ANR	3202179	Parameter	gs_fapi_server * a_server	1565:36:54305:54329	3202137	0	True				
ANR	3202180	ParameterType	gs_fapi_server *		3202137	0					
ANR	3202181	Identifier	a_server		3202137	1					
ANR	3202182	Parameter	gs_fapi_font * a_font	1565:63:54332:54352	3202137	1	True				
ANR	3202183	ParameterType	gs_fapi_font *		3202137	0					
ANR	3202184	Identifier	a_font		3202137	1					
ANR	3202185	Parameter	gs_fapi_char_ref * a_char_ref	1566:25:54380:54408	3202137	2	True				
ANR	3202186	ParameterType	gs_fapi_char_ref *		3202137	0					
ANR	3202187	Identifier	a_char_ref		3202137	1					
ANR	3202188	Parameter	gs_fapi_metrics * a_metrics	1567:25:54436:54462	3202137	3	True				
ANR	3202189	ParameterType	gs_fapi_metrics *		3202137	0					
ANR	3202190	Identifier	a_metrics		3202137	1					
ANR	3202191	CFGEntryNode	ENTRY		3202137		True				
ANR	3202192	CFGExitNode	EXIT		3202137		True				
ANR	3202193	Symbol	& s -> outline_glyph		3202137						
ANR	3202194	Symbol	load_glyph		3202137						
ANR	3202195	Symbol	a_metrics		3202137						
ANR	3202196	Symbol	s		3202137						
ANR	3202197	Symbol	a_server		3202137						
ANR	3202198	Symbol	a_char_ref		3202137						
ANR	3202199	Symbol	false		3202137						
ANR	3202200	Symbol	* a_server		3202137						
ANR	3202201	Symbol	a_server -> max_bitmap		3202137						
ANR	3202202	Symbol	a_font		3202137						
ANR	3202203	ClassDef	FF_path_info_s	1576:8:54692:54808							
ANR	3202204	DeclStmt									
ANR	3202205	Decl							gs_fapi_path	gs_fapi_path *	path
ANR	3202206	DeclStmt									
ANR	3202207	Decl							int64_t	int64_t	x
ANR	3202208	DeclStmt									
ANR	3202209	Decl							int64_t	int64_t	y
ANR	3202210	DeclStmt									
ANR	3202211	Decl							FT_Vector	FT_Vector	currentp
ANR	3202212	DeclStmt									
ANR	3202213	Decl							FF_path_info_s	FF_path_info_s	FF_path_info
ANR	3202214	Function	FF_points_equal	1584:0:54811:54976							
ANR	3202215	FunctionDef	"FF_points_equal (const FT_Vector * p1 , const FT_Vector * p2)"		3202214	0					
ANR	3202216	CompoundStatement		1586:0:54887:54976	3202214	0					
ANR	3202217	IfStatement	if ( p1 -> x == p2 -> x && p1 -> y == p2 -> y )		3202214	0					
ANR	3202218	Condition	p1 -> x == p2 -> x && p1 -> y == p2 -> y	1587:8:54897:54928	3202214	0	True				
ANR	3202219	AndExpression	p1 -> x == p2 -> x && p1 -> y == p2 -> y		3202214	0		&&			
ANR	3202220	EqualityExpression	p1 -> x == p2 -> x		3202214	0		==			
ANR	3202221	PtrMemberAccess	p1 -> x		3202214	0					
ANR	3202222	Identifier	p1		3202214	0					
ANR	3202223	Identifier	x		3202214	1					
ANR	3202224	PtrMemberAccess	p2 -> x		3202214	1					
ANR	3202225	Identifier	p2		3202214	0					
ANR	3202226	Identifier	x		3202214	1					
ANR	3202227	EqualityExpression	p1 -> y == p2 -> y		3202214	1		==			
ANR	3202228	PtrMemberAccess	p1 -> y		3202214	0					
ANR	3202229	Identifier	p1		3202214	0					
ANR	3202230	Identifier	y		3202214	1					
ANR	3202231	PtrMemberAccess	p2 -> y		3202214	1					
ANR	3202232	Identifier	p2		3202214	0					
ANR	3202233	Identifier	y		3202214	1					
ANR	3202234	ReturnStatement	return 1 ;	1588:8:54939:54947	3202214	1	True				
ANR	3202235	PrimaryExpression	1		3202214	0					
ANR	3202236	ElseStatement	else		3202214	0					
ANR	3202237	ReturnStatement	return 0 ;	1590:8:54966:54974	3202214	0	True				
ANR	3202238	PrimaryExpression	0		3202214	0					
ANR	3202239	ReturnType	static inline int		3202214	1					
ANR	3202240	Identifier	FF_points_equal		3202214	2					
ANR	3202241	ParameterList	"const FT_Vector * p1 , const FT_Vector * p2"		3202214	3					
ANR	3202242	Parameter	const FT_Vector * p1	1585:16:54845:54863	3202214	0	True				
ANR	3202243	ParameterType	const FT_Vector *		3202214	0					
ANR	3202244	Identifier	p1		3202214	1					
ANR	3202245	Parameter	const FT_Vector * p2	1585:37:54866:54884	3202214	1	True				
ANR	3202246	ParameterType	const FT_Vector *		3202214	0					
ANR	3202247	Identifier	p2		3202214	1					
ANR	3202248	CFGEntryNode	ENTRY		3202214		True				
ANR	3202249	CFGExitNode	EXIT		3202214		True				
ANR	3202250	Symbol	p1		3202214						
ANR	3202251	Symbol	p2		3202214						
ANR	3202252	Symbol	p2 -> x		3202214						
ANR	3202253	Symbol	* p1		3202214						
ANR	3202254	Symbol	p1 -> y		3202214						
ANR	3202255	Symbol	p1 -> x		3202214						
ANR	3202256	Symbol	* p2		3202214						
ANR	3202257	Symbol	p2 -> y		3202214						
ANR	3202258	Function	move_to	1593:0:54979:55636							
ANR	3202259	FunctionDef	"move_to (const FT_Vector * aTo , void * aObject)"		3202258	0					
ANR	3202260	CompoundStatement		1595:0:55036:55636	3202258	0					
ANR	3202261	IdentifierDeclStatement	FF_path_info * p = ( FF_path_info * ) aObject ;	1596:4:55042:55084	3202258	0	True				
ANR	3202262	IdentifierDecl	* p = ( FF_path_info * ) aObject		3202258	0					
ANR	3202263	IdentifierDeclType	FF_path_info *		3202258	0					
ANR	3202264	Identifier	p		3202258	1					
ANR	3202265	AssignmentExpression	* p = ( FF_path_info * ) aObject		3202258	2		=			
ANR	3202266	Identifier	p		3202258	0					
ANR	3202267	CastExpression	( FF_path_info * ) aObject		3202258	1					
ANR	3202268	CastTarget	FF_path_info *		3202258	0					
ANR	3202269	Identifier	aObject		3202258	1					
ANR	3202270	ExpressionStatement	p -> currentp = * aTo	1598:4:55091:55109	3202258	1	True				
ANR	3202271	AssignmentExpression	p -> currentp = * aTo		3202258	0		=			
ANR	3202272	PtrMemberAccess	p -> currentp		3202258	0					
ANR	3202273	Identifier	p		3202258	0					
ANR	3202274	Identifier	currentp		3202258	1					
ANR	3202275	UnaryOperationExpression	* aTo		3202258	1					
ANR	3202276	UnaryOperator	*		3202258	0					
ANR	3202277	Identifier	aTo		3202258	1					
ANR	3202278	ExpressionStatement	p -> x = ( ( int64_t ) aTo -> x ) << 26	1607:4:55507:55538	3202258	2	True				
ANR	3202279	AssignmentExpression	p -> x = ( ( int64_t ) aTo -> x ) << 26		3202258	0		=			
ANR	3202280	PtrMemberAccess	p -> x		3202258	0					
ANR	3202281	Identifier	p		3202258	0					
ANR	3202282	Identifier	x		3202258	1					
ANR	3202283	ShiftExpression	( ( int64_t ) aTo -> x ) << 26		3202258	1		<<			
ANR	3202284	CastExpression	( int64_t ) aTo -> x		3202258	0					
ANR	3202285	CastTarget	int64_t		3202258	0					
ANR	3202286	PtrMemberAccess	aTo -> x		3202258	1					
ANR	3202287	Identifier	aTo		3202258	0					
ANR	3202288	Identifier	x		3202258	1					
ANR	3202289	PrimaryExpression	26		3202258	1					
ANR	3202290	ExpressionStatement	p -> y = ( ( int64_t ) aTo -> y ) << 26	1608:4:55544:55575	3202258	3	True				
ANR	3202291	AssignmentExpression	p -> y = ( ( int64_t ) aTo -> y ) << 26		3202258	0		=			
ANR	3202292	PtrMemberAccess	p -> y		3202258	0					
ANR	3202293	Identifier	p		3202258	0					
ANR	3202294	Identifier	y		3202258	1					
ANR	3202295	ShiftExpression	( ( int64_t ) aTo -> y ) << 26		3202258	1		<<			
ANR	3202296	CastExpression	( int64_t ) aTo -> y		3202258	0					
ANR	3202297	CastTarget	int64_t		3202258	0					
ANR	3202298	PtrMemberAccess	aTo -> y		3202258	1					
ANR	3202299	Identifier	aTo		3202258	0					
ANR	3202300	Identifier	y		3202258	1					
ANR	3202301	PrimaryExpression	26		3202258	1					
ANR	3202302	ReturnStatement	"return p -> path -> moveto ( p -> path , p -> x , p -> y ) ? - 1 : 0 ;"	1610:4:55582:55634	3202258	4	True				
ANR	3202303	ConditionalExpression	"p -> path -> moveto ( p -> path , p -> x , p -> y ) ? - 1 : 0"		3202258	0					
ANR	3202304	Condition	"p -> path -> moveto ( p -> path , p -> x , p -> y )"		3202258	0					
ANR	3202305	CallExpression	"p -> path -> moveto ( p -> path , p -> x , p -> y )"		3202258	0					
ANR	3202306	Callee	p -> path -> moveto		3202258	0					
ANR	3202307	PtrMemberAccess	p -> path -> moveto		3202258	0					
ANR	3202308	PtrMemberAccess	p -> path		3202258	0					
ANR	3202309	Identifier	p		3202258	0					
ANR	3202310	Identifier	path		3202258	1					
ANR	3202311	Identifier	moveto		3202258	1					
ANR	3202312	ArgumentList	p -> path		3202258	1					
ANR	3202313	Argument	p -> path		3202258	0					
ANR	3202314	PtrMemberAccess	p -> path		3202258	0					
ANR	3202315	Identifier	p		3202258	0					
ANR	3202316	Identifier	path		3202258	1					
ANR	3202317	Argument	p -> x		3202258	1					
ANR	3202318	PtrMemberAccess	p -> x		3202258	0					
ANR	3202319	Identifier	p		3202258	0					
ANR	3202320	Identifier	x		3202258	1					
ANR	3202321	Argument	p -> y		3202258	2					
ANR	3202322	PtrMemberAccess	p -> y		3202258	0					
ANR	3202323	Identifier	p		3202258	0					
ANR	3202324	Identifier	y		3202258	1					
ANR	3202325	UnaryOperationExpression	- 1		3202258	1					
ANR	3202326	UnaryOperator	-		3202258	0					
ANR	3202327	PrimaryExpression	1		3202258	1					
ANR	3202328	PrimaryExpression	0		3202258	2					
ANR	3202329	ReturnType	static int		3202258	1					
ANR	3202330	Identifier	move_to		3202258	2					
ANR	3202331	ParameterList	"const FT_Vector * aTo , void * aObject"		3202258	3					
ANR	3202332	Parameter	const FT_Vector * aTo	1594:8:54998:55018	3202258	0	True				
ANR	3202333	ParameterType	const FT_Vector *		3202258	0					
ANR	3202334	Identifier	aTo		3202258	1					
ANR	3202335	Parameter	void * aObject	1594:31:55021:55033	3202258	1	True				
ANR	3202336	ParameterType	void *		3202258	0					
ANR	3202337	Identifier	aObject		3202258	1					
ANR	3202338	CFGEntryNode	ENTRY		3202258		True				
ANR	3202339	CFGExitNode	EXIT		3202258		True				
ANR	3202340	Symbol	aObject		3202258						
ANR	3202341	Symbol	p -> currentp		3202258						
ANR	3202342	Symbol	* p -> path		3202258						
ANR	3202343	Symbol	p -> y		3202258						
ANR	3202344	Symbol	p -> path -> moveto		3202258						
ANR	3202345	Symbol	p -> x		3202258						
ANR	3202346	Symbol	p		3202258						
ANR	3202347	Symbol	aTo -> y		3202258						
ANR	3202348	Symbol	aTo -> x		3202258						
ANR	3202349	Symbol	p -> path		3202258						
ANR	3202350	Symbol	* aTo		3202258						
ANR	3202351	Symbol	* p		3202258						
ANR	3202352	Symbol	* * p		3202258						
ANR	3202353	Symbol	aTo		3202258						
ANR	3202354	Function	line_to	1613:0:55639:56022							
ANR	3202355	FunctionDef	"line_to (const FT_Vector * aTo , void * aObject)"		3202354	0					
ANR	3202356	CompoundStatement		1615:0:55696:56022	3202354	0					
ANR	3202357	IdentifierDeclStatement	FF_path_info * p = ( FF_path_info * ) aObject ;	1616:4:55702:55744	3202354	0	True				
ANR	3202358	IdentifierDecl	* p = ( FF_path_info * ) aObject		3202354	0					
ANR	3202359	IdentifierDeclType	FF_path_info *		3202354	0					
ANR	3202360	Identifier	p		3202354	1					
ANR	3202361	AssignmentExpression	* p = ( FF_path_info * ) aObject		3202354	2		=			
ANR	3202362	Identifier	p		3202354	0					
ANR	3202363	CastExpression	( FF_path_info * ) aObject		3202354	1					
ANR	3202364	CastTarget	FF_path_info *		3202354	0					
ANR	3202365	Identifier	aObject		3202354	1					
ANR	3202366	IfStatement	"if ( ! FF_points_equal ( & p -> currentp , aTo ) )"		3202354	1					
ANR	3202367	Condition	"! FF_points_equal ( & p -> currentp , aTo )"	1618:8:55755:55789	3202354	0	True				
ANR	3202368	UnaryOperationExpression	"! FF_points_equal ( & p -> currentp , aTo )"		3202354	0					
ANR	3202369	UnaryOperator	!		3202354	0					
ANR	3202370	CallExpression	"FF_points_equal ( & p -> currentp , aTo )"		3202354	1					
ANR	3202371	Callee	FF_points_equal		3202354	0					
ANR	3202372	Identifier	FF_points_equal		3202354	0					
ANR	3202373	ArgumentList	& p -> currentp		3202354	1					
ANR	3202374	Argument	& p -> currentp		3202354	0					
ANR	3202375	UnaryOperationExpression	& p -> currentp		3202354	0					
ANR	3202376	UnaryOperator	&		3202354	0					
ANR	3202377	PtrMemberAccess	p -> currentp		3202354	1					
ANR	3202378	Identifier	p		3202354	0					
ANR	3202379	Identifier	currentp		3202354	1					
ANR	3202380	Argument	aTo		3202354	1					
ANR	3202381	Identifier	aTo		3202354	0					
ANR	3202382	CompoundStatement		4:45:95:95	3202354	1					
ANR	3202383	ExpressionStatement	p -> currentp = * aTo	1619:8:55802:55820	3202354	0	True				
ANR	3202384	AssignmentExpression	p -> currentp = * aTo		3202354	0		=			
ANR	3202385	PtrMemberAccess	p -> currentp		3202354	0					
ANR	3202386	Identifier	p		3202354	0					
ANR	3202387	Identifier	currentp		3202354	1					
ANR	3202388	UnaryOperationExpression	* aTo		3202354	1					
ANR	3202389	UnaryOperator	*		3202354	0					
ANR	3202390	Identifier	aTo		3202354	1					
ANR	3202391	ExpressionStatement	p -> x = ( ( int64_t ) aTo -> x ) << 26	1622:8:55865:55896	3202354	1	True				
ANR	3202392	AssignmentExpression	p -> x = ( ( int64_t ) aTo -> x ) << 26		3202354	0		=			
ANR	3202393	PtrMemberAccess	p -> x		3202354	0					
ANR	3202394	Identifier	p		3202354	0					
ANR	3202395	Identifier	x		3202354	1					
ANR	3202396	ShiftExpression	( ( int64_t ) aTo -> x ) << 26		3202354	1		<<			
ANR	3202397	CastExpression	( int64_t ) aTo -> x		3202354	0					
ANR	3202398	CastTarget	int64_t		3202354	0					
ANR	3202399	PtrMemberAccess	aTo -> x		3202354	1					
ANR	3202400	Identifier	aTo		3202354	0					
ANR	3202401	Identifier	x		3202354	1					
ANR	3202402	PrimaryExpression	26		3202354	1					
ANR	3202403	ExpressionStatement	p -> y = ( ( int64_t ) aTo -> y ) << 26	1623:8:55906:55937	3202354	2	True				
ANR	3202404	AssignmentExpression	p -> y = ( ( int64_t ) aTo -> y ) << 26		3202354	0		=			
ANR	3202405	PtrMemberAccess	p -> y		3202354	0					
ANR	3202406	Identifier	p		3202354	0					
ANR	3202407	Identifier	y		3202354	1					
ANR	3202408	ShiftExpression	( ( int64_t ) aTo -> y ) << 26		3202354	1		<<			
ANR	3202409	CastExpression	( int64_t ) aTo -> y		3202354	0					
ANR	3202410	CastTarget	int64_t		3202354	0					
ANR	3202411	PtrMemberAccess	aTo -> y		3202354	1					
ANR	3202412	Identifier	aTo		3202354	0					
ANR	3202413	Identifier	y		3202354	1					
ANR	3202414	PrimaryExpression	26		3202354	1					
ANR	3202415	ReturnStatement	"return p -> path -> lineto ( p -> path , p -> x , p -> y ) ? - 1 : 0 ;"	1625:8:55948:56000	3202354	3	True				
ANR	3202416	ConditionalExpression	"p -> path -> lineto ( p -> path , p -> x , p -> y ) ? - 1 : 0"		3202354	0					
ANR	3202417	Condition	"p -> path -> lineto ( p -> path , p -> x , p -> y )"		3202354	0					
ANR	3202418	CallExpression	"p -> path -> lineto ( p -> path , p -> x , p -> y )"		3202354	0					
ANR	3202419	Callee	p -> path -> lineto		3202354	0					
ANR	3202420	PtrMemberAccess	p -> path -> lineto		3202354	0					
ANR	3202421	PtrMemberAccess	p -> path		3202354	0					
ANR	3202422	Identifier	p		3202354	0					
ANR	3202423	Identifier	path		3202354	1					
ANR	3202424	Identifier	lineto		3202354	1					
ANR	3202425	ArgumentList	p -> path		3202354	1					
ANR	3202426	Argument	p -> path		3202354	0					
ANR	3202427	PtrMemberAccess	p -> path		3202354	0					
ANR	3202428	Identifier	p		3202354	0					
ANR	3202429	Identifier	path		3202354	1					
ANR	3202430	Argument	p -> x		3202354	1					
ANR	3202431	PtrMemberAccess	p -> x		3202354	0					
ANR	3202432	Identifier	p		3202354	0					
ANR	3202433	Identifier	x		3202354	1					
ANR	3202434	Argument	p -> y		3202354	2					
ANR	3202435	PtrMemberAccess	p -> y		3202354	0					
ANR	3202436	Identifier	p		3202354	0					
ANR	3202437	Identifier	y		3202354	1					
ANR	3202438	UnaryOperationExpression	- 1		3202354	1					
ANR	3202439	UnaryOperator	-		3202354	0					
ANR	3202440	PrimaryExpression	1		3202354	1					
ANR	3202441	PrimaryExpression	0		3202354	2					
ANR	3202442	ReturnStatement	return 0 ;	1627:4:56012:56020	3202354	2	True				
ANR	3202443	PrimaryExpression	0		3202354	0					
ANR	3202444	ReturnType	static int		3202354	1					
ANR	3202445	Identifier	line_to		3202354	2					
ANR	3202446	ParameterList	"const FT_Vector * aTo , void * aObject"		3202354	3					
ANR	3202447	Parameter	const FT_Vector * aTo	1614:8:55658:55678	3202354	0	True				
ANR	3202448	ParameterType	const FT_Vector *		3202354	0					
ANR	3202449	Identifier	aTo		3202354	1					
ANR	3202450	Parameter	void * aObject	1614:31:55681:55693	3202354	1	True				
ANR	3202451	ParameterType	void *		3202354	0					
ANR	3202452	Identifier	aObject		3202354	1					
ANR	3202453	CFGEntryNode	ENTRY		3202354		True				
ANR	3202454	CFGExitNode	EXIT		3202354		True				
ANR	3202455	Symbol	aObject		3202354						
ANR	3202456	Symbol	p -> path -> lineto		3202354						
ANR	3202457	Symbol	p -> currentp		3202354						
ANR	3202458	Symbol	* p -> path		3202354						
ANR	3202459	Symbol	p -> y		3202354						
ANR	3202460	Symbol	p -> x		3202354						
ANR	3202461	Symbol	p		3202354						
ANR	3202462	Symbol	aTo -> y		3202354						
ANR	3202463	Symbol	aTo -> x		3202354						
ANR	3202464	Symbol	FF_points_equal		3202354						
ANR	3202465	Symbol	& p -> currentp		3202354						
ANR	3202466	Symbol	p -> path		3202354						
ANR	3202467	Symbol	* aTo		3202354						
ANR	3202468	Symbol	* p		3202354						
ANR	3202469	Symbol	* * p		3202354						
ANR	3202470	Symbol	aTo		3202354						
ANR	3202471	Function	conic_to	1630:0:56025:58110							
ANR	3202472	FunctionDef	"conic_to (const FT_Vector * aControl , const FT_Vector * aTo , void * aObject)"		3202471	0					
ANR	3202473	CompoundStatement		1632:0:56111:58110	3202471	0					
ANR	3202474	IdentifierDeclStatement	FF_path_info * p = ( FF_path_info * ) aObject ;	1633:4:56117:56159	3202471	0	True				
ANR	3202475	IdentifierDecl	* p = ( FF_path_info * ) aObject		3202471	0					
ANR	3202476	IdentifierDeclType	FF_path_info *		3202471	0					
ANR	3202477	Identifier	p		3202471	1					
ANR	3202478	AssignmentExpression	* p = ( FF_path_info * ) aObject		3202471	2		=			
ANR	3202479	Identifier	p		3202471	0					
ANR	3202480	CastExpression	( FF_path_info * ) aObject		3202471	1					
ANR	3202481	CastTarget	FF_path_info *		3202471	0					
ANR	3202482	Identifier	aObject		3202471	1					
ANR	3202483	IdentifierDeclStatement	"double x , y , Controlx , Controly ;"	1634:4:56165:56196	3202471	1	True				
ANR	3202484	IdentifierDecl	x		3202471	0					
ANR	3202485	IdentifierDeclType	double		3202471	0					
ANR	3202486	Identifier	x		3202471	1					
ANR	3202487	IdentifierDecl	y		3202471	1					
ANR	3202488	IdentifierDeclType	double		3202471	0					
ANR	3202489	Identifier	y		3202471	1					
ANR	3202490	IdentifierDecl	Controlx		3202471	2					
ANR	3202491	IdentifierDeclType	double		3202471	0					
ANR	3202492	Identifier	Controlx		3202471	1					
ANR	3202493	IdentifierDecl	Controly		3202471	3					
ANR	3202494	IdentifierDeclType	double		3202471	0					
ANR	3202495	Identifier	Controly		3202471	1					
ANR	3202496	IdentifierDeclStatement	"int64_t Control1x , Control1y , Control2x , Control2y ;"	1635:4:56202:56252	3202471	2	True				
ANR	3202497	IdentifierDecl	Control1x		3202471	0					
ANR	3202498	IdentifierDeclType	int64_t		3202471	0					
ANR	3202499	Identifier	Control1x		3202471	1					
ANR	3202500	IdentifierDecl	Control1y		3202471	1					
ANR	3202501	IdentifierDeclType	int64_t		3202471	0					
ANR	3202502	Identifier	Control1y		3202471	1					
ANR	3202503	IdentifierDecl	Control2x		3202471	2					
ANR	3202504	IdentifierDeclType	int64_t		3202471	0					
ANR	3202505	Identifier	Control2x		3202471	1					
ANR	3202506	IdentifierDecl	Control2y		3202471	3					
ANR	3202507	IdentifierDeclType	int64_t		3202471	0					
ANR	3202508	Identifier	Control2y		3202471	1					
ANR	3202509	IdentifierDeclStatement	"double sx , sy ;"	1636:4:56258:56271	3202471	3	True				
ANR	3202510	IdentifierDecl	sx		3202471	0					
ANR	3202511	IdentifierDeclType	double		3202471	0					
ANR	3202512	Identifier	sx		3202471	1					
ANR	3202513	IdentifierDecl	sy		3202471	1					
ANR	3202514	IdentifierDeclType	double		3202471	0					
ANR	3202515	Identifier	sy		3202471	1					
ANR	3202516	IfStatement	"if ( ! FF_points_equal ( & p -> currentp , aControl ) || ! FF_points_equal ( & p -> currentp , aTo ) || ! FF_points_equal ( aControl , aTo ) )"		3202471	4					
ANR	3202517	Condition	"! FF_points_equal ( & p -> currentp , aControl ) || ! FF_points_equal ( & p -> currentp , aTo ) || ! FF_points_equal ( aControl , aTo )"	1638:8:56282:56411	3202471	0	True				
ANR	3202518	OrExpression	"! FF_points_equal ( & p -> currentp , aControl ) || ! FF_points_equal ( & p -> currentp , aTo ) || ! FF_points_equal ( aControl , aTo )"		3202471	0		||			
ANR	3202519	UnaryOperationExpression	"! FF_points_equal ( & p -> currentp , aControl )"		3202471	0					
ANR	3202520	UnaryOperator	!		3202471	0					
ANR	3202521	CallExpression	"FF_points_equal ( & p -> currentp , aControl )"		3202471	1					
ANR	3202522	Callee	FF_points_equal		3202471	0					
ANR	3202523	Identifier	FF_points_equal		3202471	0					
ANR	3202524	ArgumentList	& p -> currentp		3202471	1					
ANR	3202525	Argument	& p -> currentp		3202471	0					
ANR	3202526	UnaryOperationExpression	& p -> currentp		3202471	0					
ANR	3202527	UnaryOperator	&		3202471	0					
ANR	3202528	PtrMemberAccess	p -> currentp		3202471	1					
ANR	3202529	Identifier	p		3202471	0					
ANR	3202530	Identifier	currentp		3202471	1					
ANR	3202531	Argument	aControl		3202471	1					
ANR	3202532	Identifier	aControl		3202471	0					
ANR	3202533	OrExpression	"! FF_points_equal ( & p -> currentp , aTo ) || ! FF_points_equal ( aControl , aTo )"		3202471	1		||			
ANR	3202534	UnaryOperationExpression	"! FF_points_equal ( & p -> currentp , aTo )"		3202471	0					
ANR	3202535	UnaryOperator	!		3202471	0					
ANR	3202536	CallExpression	"FF_points_equal ( & p -> currentp , aTo )"		3202471	1					
ANR	3202537	Callee	FF_points_equal		3202471	0					
ANR	3202538	Identifier	FF_points_equal		3202471	0					
ANR	3202539	ArgumentList	& p -> currentp		3202471	1					
ANR	3202540	Argument	& p -> currentp		3202471	0					
ANR	3202541	UnaryOperationExpression	& p -> currentp		3202471	0					
ANR	3202542	UnaryOperator	&		3202471	0					
ANR	3202543	PtrMemberAccess	p -> currentp		3202471	1					
ANR	3202544	Identifier	p		3202471	0					
ANR	3202545	Identifier	currentp		3202471	1					
ANR	3202546	Argument	aTo		3202471	1					
ANR	3202547	Identifier	aTo		3202471	0					
ANR	3202548	UnaryOperationExpression	"! FF_points_equal ( aControl , aTo )"		3202471	1					
ANR	3202549	UnaryOperator	!		3202471	0					
ANR	3202550	CallExpression	"FF_points_equal ( aControl , aTo )"		3202471	1					
ANR	3202551	Callee	FF_points_equal		3202471	0					
ANR	3202552	Identifier	FF_points_equal		3202471	0					
ANR	3202553	ArgumentList	aControl		3202471	1					
ANR	3202554	Argument	aControl		3202471	0					
ANR	3202555	Identifier	aControl		3202471	0					
ANR	3202556	Argument	aTo		3202471	1					
ANR	3202557	Identifier	aTo		3202471	0					
ANR	3202558	CompoundStatement		9:41:302:302	3202471	1					
ANR	3202559	ExpressionStatement	p -> currentp = * aTo	1641:8:56424:56442	3202471	0	True				
ANR	3202560	AssignmentExpression	p -> currentp = * aTo		3202471	0		=			
ANR	3202561	PtrMemberAccess	p -> currentp		3202471	0					
ANR	3202562	Identifier	p		3202471	0					
ANR	3202563	Identifier	currentp		3202471	1					
ANR	3202564	UnaryOperationExpression	* aTo		3202471	1					
ANR	3202565	UnaryOperator	*		3202471	0					
ANR	3202566	Identifier	aTo		3202471	1					
ANR	3202567	ExpressionStatement	sx = ( double ) ( p -> x >> 32 )	1659:8:57320:57346	3202471	1	True				
ANR	3202568	AssignmentExpression	sx = ( double ) ( p -> x >> 32 )		3202471	0		=			
ANR	3202569	Identifier	sx		3202471	0					
ANR	3202570	CastExpression	( double ) ( p -> x >> 32 )		3202471	1					
ANR	3202571	CastTarget	double		3202471	0					
ANR	3202572	ShiftExpression	p -> x >> 32		3202471	1		>>			
ANR	3202573	PtrMemberAccess	p -> x		3202471	0					
ANR	3202574	Identifier	p		3202471	0					
ANR	3202575	Identifier	x		3202471	1					
ANR	3202576	PrimaryExpression	32		3202471	1					
ANR	3202577	ExpressionStatement	sy = ( double ) ( p -> y >> 32 )	1660:8:57356:57382	3202471	2	True				
ANR	3202578	AssignmentExpression	sy = ( double ) ( p -> y >> 32 )		3202471	0		=			
ANR	3202579	Identifier	sy		3202471	0					
ANR	3202580	CastExpression	( double ) ( p -> y >> 32 )		3202471	1					
ANR	3202581	CastTarget	double		3202471	0					
ANR	3202582	ShiftExpression	p -> y >> 32		3202471	1		>>			
ANR	3202583	PtrMemberAccess	p -> y		3202471	0					
ANR	3202584	Identifier	p		3202471	0					
ANR	3202585	Identifier	y		3202471	1					
ANR	3202586	PrimaryExpression	32		3202471	1					
ANR	3202587	ExpressionStatement	x = aTo -> x / 64.0	1662:8:57393:57410	3202471	3	True				
ANR	3202588	AssignmentExpression	x = aTo -> x / 64.0		3202471	0		=			
ANR	3202589	Identifier	x		3202471	0					
ANR	3202590	MultiplicativeExpression	aTo -> x / 64.0		3202471	1		/			
ANR	3202591	PtrMemberAccess	aTo -> x		3202471	0					
ANR	3202592	Identifier	aTo		3202471	0					
ANR	3202593	Identifier	x		3202471	1					
ANR	3202594	PrimaryExpression	64.0		3202471	1					
ANR	3202595	ExpressionStatement	p -> x = ( ( int64_t ) float2fixed ( x ) ) << 24	1663:8:57420:57459	3202471	4	True				
ANR	3202596	AssignmentExpression	p -> x = ( ( int64_t ) float2fixed ( x ) ) << 24		3202471	0		=			
ANR	3202597	PtrMemberAccess	p -> x		3202471	0					
ANR	3202598	Identifier	p		3202471	0					
ANR	3202599	Identifier	x		3202471	1					
ANR	3202600	ShiftExpression	( ( int64_t ) float2fixed ( x ) ) << 24		3202471	1		<<			
ANR	3202601	CastExpression	( int64_t ) float2fixed ( x )		3202471	0					
ANR	3202602	CastTarget	int64_t		3202471	0					
ANR	3202603	CallExpression	float2fixed ( x )		3202471	1					
ANR	3202604	Callee	float2fixed		3202471	0					
ANR	3202605	Identifier	float2fixed		3202471	0					
ANR	3202606	ArgumentList	x		3202471	1					
ANR	3202607	Argument	x		3202471	0					
ANR	3202608	Identifier	x		3202471	0					
ANR	3202609	PrimaryExpression	24		3202471	1					
ANR	3202610	ExpressionStatement	y = aTo -> y / 64.0	1664:8:57469:57486	3202471	5	True				
ANR	3202611	AssignmentExpression	y = aTo -> y / 64.0		3202471	0		=			
ANR	3202612	Identifier	y		3202471	0					
ANR	3202613	MultiplicativeExpression	aTo -> y / 64.0		3202471	1		/			
ANR	3202614	PtrMemberAccess	aTo -> y		3202471	0					
ANR	3202615	Identifier	aTo		3202471	0					
ANR	3202616	Identifier	y		3202471	1					
ANR	3202617	PrimaryExpression	64.0		3202471	1					
ANR	3202618	ExpressionStatement	p -> y = ( ( int64_t ) float2fixed ( y ) ) << 24	1665:8:57496:57535	3202471	6	True				
ANR	3202619	AssignmentExpression	p -> y = ( ( int64_t ) float2fixed ( y ) ) << 24		3202471	0		=			
ANR	3202620	PtrMemberAccess	p -> y		3202471	0					
ANR	3202621	Identifier	p		3202471	0					
ANR	3202622	Identifier	y		3202471	1					
ANR	3202623	ShiftExpression	( ( int64_t ) float2fixed ( y ) ) << 24		3202471	1		<<			
ANR	3202624	CastExpression	( int64_t ) float2fixed ( y )		3202471	0					
ANR	3202625	CastTarget	int64_t		3202471	0					
ANR	3202626	CallExpression	float2fixed ( y )		3202471	1					
ANR	3202627	Callee	float2fixed		3202471	0					
ANR	3202628	Identifier	float2fixed		3202471	0					
ANR	3202629	ArgumentList	y		3202471	1					
ANR	3202630	Argument	y		3202471	0					
ANR	3202631	Identifier	y		3202471	0					
ANR	3202632	PrimaryExpression	24		3202471	1					
ANR	3202633	ExpressionStatement	Controlx = aControl -> x / 64.0	1666:8:57545:57574	3202471	7	True				
ANR	3202634	AssignmentExpression	Controlx = aControl -> x / 64.0		3202471	0		=			
ANR	3202635	Identifier	Controlx		3202471	0					
ANR	3202636	MultiplicativeExpression	aControl -> x / 64.0		3202471	1		/			
ANR	3202637	PtrMemberAccess	aControl -> x		3202471	0					
ANR	3202638	Identifier	aControl		3202471	0					
ANR	3202639	Identifier	x		3202471	1					
ANR	3202640	PrimaryExpression	64.0		3202471	1					
ANR	3202641	ExpressionStatement	Controly = aControl -> y / 64.0	1667:8:57584:57613	3202471	8	True				
ANR	3202642	AssignmentExpression	Controly = aControl -> y / 64.0		3202471	0		=			
ANR	3202643	Identifier	Controly		3202471	0					
ANR	3202644	MultiplicativeExpression	aControl -> y / 64.0		3202471	1		/			
ANR	3202645	PtrMemberAccess	aControl -> y		3202471	0					
ANR	3202646	Identifier	aControl		3202471	0					
ANR	3202647	Identifier	y		3202471	1					
ANR	3202648	PrimaryExpression	64.0		3202471	1					
ANR	3202649	ExpressionStatement	Control1x = ( ( int64_t ) float2fixed ( ( sx + Controlx * 2 ) / 3 ) ) << 24	1669:8:57624:57690	3202471	9	True				
ANR	3202650	AssignmentExpression	Control1x = ( ( int64_t ) float2fixed ( ( sx + Controlx * 2 ) / 3 ) ) << 24		3202471	0		=			
ANR	3202651	Identifier	Control1x		3202471	0					
ANR	3202652	ShiftExpression	( ( int64_t ) float2fixed ( ( sx + Controlx * 2 ) / 3 ) ) << 24		3202471	1		<<			
ANR	3202653	CastExpression	( int64_t ) float2fixed ( ( sx + Controlx * 2 ) / 3 )		3202471	0					
ANR	3202654	CastTarget	int64_t		3202471	0					
ANR	3202655	CallExpression	float2fixed ( ( sx + Controlx * 2 ) / 3 )		3202471	1					
ANR	3202656	Callee	float2fixed		3202471	0					
ANR	3202657	Identifier	float2fixed		3202471	0					
ANR	3202658	ArgumentList	( sx + Controlx * 2 ) / 3		3202471	1					
ANR	3202659	Argument	( sx + Controlx * 2 ) / 3		3202471	0					
ANR	3202660	MultiplicativeExpression	( sx + Controlx * 2 ) / 3		3202471	0		/			
ANR	3202661	AdditiveExpression	sx + Controlx * 2		3202471	0		+			
ANR	3202662	Identifier	sx		3202471	0					
ANR	3202663	MultiplicativeExpression	Controlx * 2		3202471	1		*			
ANR	3202664	Identifier	Controlx		3202471	0					
ANR	3202665	PrimaryExpression	2		3202471	1					
ANR	3202666	PrimaryExpression	3		3202471	1					
ANR	3202667	PrimaryExpression	24		3202471	1					
ANR	3202668	ExpressionStatement	Control1y = ( ( int64_t ) float2fixed ( ( sy + Controly * 2 ) / 3 ) ) << 24	1670:8:57700:57766	3202471	10	True				
ANR	3202669	AssignmentExpression	Control1y = ( ( int64_t ) float2fixed ( ( sy + Controly * 2 ) / 3 ) ) << 24		3202471	0		=			
ANR	3202670	Identifier	Control1y		3202471	0					
ANR	3202671	ShiftExpression	( ( int64_t ) float2fixed ( ( sy + Controly * 2 ) / 3 ) ) << 24		3202471	1		<<			
ANR	3202672	CastExpression	( int64_t ) float2fixed ( ( sy + Controly * 2 ) / 3 )		3202471	0					
ANR	3202673	CastTarget	int64_t		3202471	0					
ANR	3202674	CallExpression	float2fixed ( ( sy + Controly * 2 ) / 3 )		3202471	1					
ANR	3202675	Callee	float2fixed		3202471	0					
ANR	3202676	Identifier	float2fixed		3202471	0					
ANR	3202677	ArgumentList	( sy + Controly * 2 ) / 3		3202471	1					
ANR	3202678	Argument	( sy + Controly * 2 ) / 3		3202471	0					
ANR	3202679	MultiplicativeExpression	( sy + Controly * 2 ) / 3		3202471	0		/			
ANR	3202680	AdditiveExpression	sy + Controly * 2		3202471	0		+			
ANR	3202681	Identifier	sy		3202471	0					
ANR	3202682	MultiplicativeExpression	Controly * 2		3202471	1		*			
ANR	3202683	Identifier	Controly		3202471	0					
ANR	3202684	PrimaryExpression	2		3202471	1					
ANR	3202685	PrimaryExpression	3		3202471	1					
ANR	3202686	PrimaryExpression	24		3202471	1					
ANR	3202687	ExpressionStatement	Control2x = ( ( int64_t ) float2fixed ( ( x + Controlx * 2 ) / 3 ) ) << 24	1671:8:57776:57841	3202471	11	True				
ANR	3202688	AssignmentExpression	Control2x = ( ( int64_t ) float2fixed ( ( x + Controlx * 2 ) / 3 ) ) << 24		3202471	0		=			
ANR	3202689	Identifier	Control2x		3202471	0					
ANR	3202690	ShiftExpression	( ( int64_t ) float2fixed ( ( x + Controlx * 2 ) / 3 ) ) << 24		3202471	1		<<			
ANR	3202691	CastExpression	( int64_t ) float2fixed ( ( x + Controlx * 2 ) / 3 )		3202471	0					
ANR	3202692	CastTarget	int64_t		3202471	0					
ANR	3202693	CallExpression	float2fixed ( ( x + Controlx * 2 ) / 3 )		3202471	1					
ANR	3202694	Callee	float2fixed		3202471	0					
ANR	3202695	Identifier	float2fixed		3202471	0					
ANR	3202696	ArgumentList	( x + Controlx * 2 ) / 3		3202471	1					
ANR	3202697	Argument	( x + Controlx * 2 ) / 3		3202471	0					
ANR	3202698	MultiplicativeExpression	( x + Controlx * 2 ) / 3		3202471	0		/			
ANR	3202699	AdditiveExpression	x + Controlx * 2		3202471	0		+			
ANR	3202700	Identifier	x		3202471	0					
ANR	3202701	MultiplicativeExpression	Controlx * 2		3202471	1		*			
ANR	3202702	Identifier	Controlx		3202471	0					
ANR	3202703	PrimaryExpression	2		3202471	1					
ANR	3202704	PrimaryExpression	3		3202471	1					
ANR	3202705	PrimaryExpression	24		3202471	1					
ANR	3202706	ExpressionStatement	Control2y = ( ( int64_t ) float2fixed ( ( y + Controly * 2 ) / 3 ) ) << 24	1672:8:57851:57916	3202471	12	True				
ANR	3202707	AssignmentExpression	Control2y = ( ( int64_t ) float2fixed ( ( y + Controly * 2 ) / 3 ) ) << 24		3202471	0		=			
ANR	3202708	Identifier	Control2y		3202471	0					
ANR	3202709	ShiftExpression	( ( int64_t ) float2fixed ( ( y + Controly * 2 ) / 3 ) ) << 24		3202471	1		<<			
ANR	3202710	CastExpression	( int64_t ) float2fixed ( ( y + Controly * 2 ) / 3 )		3202471	0					
ANR	3202711	CastTarget	int64_t		3202471	0					
ANR	3202712	CallExpression	float2fixed ( ( y + Controly * 2 ) / 3 )		3202471	1					
ANR	3202713	Callee	float2fixed		3202471	0					
ANR	3202714	Identifier	float2fixed		3202471	0					
ANR	3202715	ArgumentList	( y + Controly * 2 ) / 3		3202471	1					
ANR	3202716	Argument	( y + Controly * 2 ) / 3		3202471	0					
ANR	3202717	MultiplicativeExpression	( y + Controly * 2 ) / 3		3202471	0		/			
ANR	3202718	AdditiveExpression	y + Controly * 2		3202471	0		+			
ANR	3202719	Identifier	y		3202471	0					
ANR	3202720	MultiplicativeExpression	Controly * 2		3202471	1		*			
ANR	3202721	Identifier	Controly		3202471	0					
ANR	3202722	PrimaryExpression	2		3202471	1					
ANR	3202723	PrimaryExpression	3		3202471	1					
ANR	3202724	PrimaryExpression	24		3202471	1					
ANR	3202725	ReturnStatement	"return p -> path -> curveto ( p -> path , Control1x , Control1y , Control2x , Control2y , p -> x , p -> y ) ? - 1 : 0 ;"	1674:8:57927:58088	3202471	13	True				
ANR	3202726	ConditionalExpression	"p -> path -> curveto ( p -> path , Control1x , Control1y , Control2x , Control2y , p -> x , p -> y ) ? - 1 : 0"		3202471	0					
ANR	3202727	Condition	"p -> path -> curveto ( p -> path , Control1x , Control1y , Control2x , Control2y , p -> x , p -> y )"		3202471	0					
ANR	3202728	CallExpression	"p -> path -> curveto ( p -> path , Control1x , Control1y , Control2x , Control2y , p -> x , p -> y )"		3202471	0					
ANR	3202729	Callee	p -> path -> curveto		3202471	0					
ANR	3202730	PtrMemberAccess	p -> path -> curveto		3202471	0					
ANR	3202731	PtrMemberAccess	p -> path		3202471	0					
ANR	3202732	Identifier	p		3202471	0					
ANR	3202733	Identifier	path		3202471	1					
ANR	3202734	Identifier	curveto		3202471	1					
ANR	3202735	ArgumentList	p -> path		3202471	1					
ANR	3202736	Argument	p -> path		3202471	0					
ANR	3202737	PtrMemberAccess	p -> path		3202471	0					
ANR	3202738	Identifier	p		3202471	0					
ANR	3202739	Identifier	path		3202471	1					
ANR	3202740	Argument	Control1x		3202471	1					
ANR	3202741	Identifier	Control1x		3202471	0					
ANR	3202742	Argument	Control1y		3202471	2					
ANR	3202743	Identifier	Control1y		3202471	0					
ANR	3202744	Argument	Control2x		3202471	3					
ANR	3202745	Identifier	Control2x		3202471	0					
ANR	3202746	Argument	Control2y		3202471	4					
ANR	3202747	Identifier	Control2y		3202471	0					
ANR	3202748	Argument	p -> x		3202471	5					
ANR	3202749	PtrMemberAccess	p -> x		3202471	0					
ANR	3202750	Identifier	p		3202471	0					
ANR	3202751	Identifier	x		3202471	1					
ANR	3202752	Argument	p -> y		3202471	6					
ANR	3202753	PtrMemberAccess	p -> y		3202471	0					
ANR	3202754	Identifier	p		3202471	0					
ANR	3202755	Identifier	y		3202471	1					
ANR	3202756	UnaryOperationExpression	- 1		3202471	1					
ANR	3202757	UnaryOperator	-		3202471	0					
ANR	3202758	PrimaryExpression	1		3202471	1					
ANR	3202759	PrimaryExpression	0		3202471	2					
ANR	3202760	ReturnStatement	return 0 ;	1678:4:58100:58108	3202471	5	True				
ANR	3202761	PrimaryExpression	0		3202471	0					
ANR	3202762	ReturnType	static int		3202471	1					
ANR	3202763	Identifier	conic_to		3202471	2					
ANR	3202764	ParameterList	"const FT_Vector * aControl , const FT_Vector * aTo , void * aObject"		3202471	3					
ANR	3202765	Parameter	const FT_Vector * aControl	1631:9:56045:56070	3202471	0	True				
ANR	3202766	ParameterType	const FT_Vector *		3202471	0					
ANR	3202767	Identifier	aControl		3202471	1					
ANR	3202768	Parameter	const FT_Vector * aTo	1631:37:56073:56093	3202471	1	True				
ANR	3202769	ParameterType	const FT_Vector *		3202471	0					
ANR	3202770	Identifier	aTo		3202471	1					
ANR	3202771	Parameter	void * aObject	1631:60:56096:56108	3202471	2	True				
ANR	3202772	ParameterType	void *		3202471	0					
ANR	3202773	Identifier	aObject		3202471	1					
ANR	3202774	CFGEntryNode	ENTRY		3202471		True				
ANR	3202775	CFGExitNode	EXIT		3202471		True				
ANR	3202776	Symbol	Control1y		3202471						
ANR	3202777	Symbol	Control1x		3202471						
ANR	3202778	Symbol	p -> path -> curveto		3202471						
ANR	3202779	Symbol	* p -> path		3202471						
ANR	3202780	Symbol	p -> y		3202471						
ANR	3202781	Symbol	p -> x		3202471						
ANR	3202782	Symbol	Controly		3202471						
ANR	3202783	Symbol	float2fixed		3202471						
ANR	3202784	Symbol	Controlx		3202471						
ANR	3202785	Symbol	& p -> currentp		3202471						
ANR	3202786	Symbol	p -> path		3202471						
ANR	3202787	Symbol	* aTo		3202471						
ANR	3202788	Symbol	* * p		3202471						
ANR	3202789	Symbol	Control2y		3202471						
ANR	3202790	Symbol	aObject		3202471						
ANR	3202791	Symbol	sx		3202471						
ANR	3202792	Symbol	Control2x		3202471						
ANR	3202793	Symbol	sy		3202471						
ANR	3202794	Symbol	p -> currentp		3202471						
ANR	3202795	Symbol	* aControl		3202471						
ANR	3202796	Symbol	p		3202471						
ANR	3202797	Symbol	aTo -> y		3202471						
ANR	3202798	Symbol	aTo -> x		3202471						
ANR	3202799	Symbol	FF_points_equal		3202471						
ANR	3202800	Symbol	aControl -> y		3202471						
ANR	3202801	Symbol	aControl -> x		3202471						
ANR	3202802	Symbol	x		3202471						
ANR	3202803	Symbol	y		3202471						
ANR	3202804	Symbol	* p		3202471						
ANR	3202805	Symbol	aControl		3202471						
ANR	3202806	Symbol	aTo		3202471						
ANR	3202807	Function	cubic_to	1681:0:58113:59149							
ANR	3202808	FunctionDef	"cubic_to (const FT_Vector * aControl1 , const FT_Vector * aControl2 , const FT_Vector * aTo , void * aObject)"		3202807	0					
ANR	3202809	CompoundStatement		1684:0:58238:59149	3202807	0					
ANR	3202810	IdentifierDeclStatement	FF_path_info * p = ( FF_path_info * ) aObject ;	1685:4:58244:58286	3202807	0	True				
ANR	3202811	IdentifierDecl	* p = ( FF_path_info * ) aObject		3202807	0					
ANR	3202812	IdentifierDeclType	FF_path_info *		3202807	0					
ANR	3202813	Identifier	p		3202807	1					
ANR	3202814	AssignmentExpression	* p = ( FF_path_info * ) aObject		3202807	2		=			
ANR	3202815	Identifier	p		3202807	0					
ANR	3202816	CastExpression	( FF_path_info * ) aObject		3202807	1					
ANR	3202817	CastTarget	FF_path_info *		3202807	0					
ANR	3202818	Identifier	aObject		3202807	1					
ANR	3202819	IdentifierDeclStatement	"int64_t Control1x , Control1y , Control2x , Control2y ;"	1686:4:58292:58342	3202807	1	True				
ANR	3202820	IdentifierDecl	Control1x		3202807	0					
ANR	3202821	IdentifierDeclType	int64_t		3202807	0					
ANR	3202822	Identifier	Control1x		3202807	1					
ANR	3202823	IdentifierDecl	Control1y		3202807	1					
ANR	3202824	IdentifierDeclType	int64_t		3202807	0					
ANR	3202825	Identifier	Control1y		3202807	1					
ANR	3202826	IdentifierDecl	Control2x		3202807	2					
ANR	3202827	IdentifierDeclType	int64_t		3202807	0					
ANR	3202828	Identifier	Control2x		3202807	1					
ANR	3202829	IdentifierDecl	Control2y		3202807	3					
ANR	3202830	IdentifierDeclType	int64_t		3202807	0					
ANR	3202831	Identifier	Control2y		3202807	1					
ANR	3202832	IfStatement	"if ( ! FF_points_equal ( & p -> currentp , aControl1 ) || ! FF_points_equal ( & p -> currentp , aControl2 ) || ! FF_points_equal ( & p -> currentp , aTo ) || ! FF_points_equal ( aControl1 , aControl2 ) || ! FF_points_equal ( aControl1 , aTo ) || ! FF_points_equal ( aControl2 , aTo ) )"		3202807	2					
ANR	3202833	Condition	"! FF_points_equal ( & p -> currentp , aControl1 ) || ! FF_points_equal ( & p -> currentp , aControl2 ) || ! FF_points_equal ( & p -> currentp , aTo ) || ! FF_points_equal ( aControl1 , aControl2 ) || ! FF_points_equal ( aControl1 , aTo ) || ! FF_points_equal ( aControl2 , aTo )"	1688:8:58353:58631	3202807	0	True				
ANR	3202834	OrExpression	"! FF_points_equal ( & p -> currentp , aControl1 ) || ! FF_points_equal ( & p -> currentp , aControl2 ) || ! FF_points_equal ( & p -> currentp , aTo ) || ! FF_points_equal ( aControl1 , aControl2 ) || ! FF_points_equal ( aControl1 , aTo ) || ! FF_points_equal ( aControl2 , aTo )"		3202807	0		||			
ANR	3202835	UnaryOperationExpression	"! FF_points_equal ( & p -> currentp , aControl1 )"		3202807	0					
ANR	3202836	UnaryOperator	!		3202807	0					
ANR	3202837	CallExpression	"FF_points_equal ( & p -> currentp , aControl1 )"		3202807	1					
ANR	3202838	Callee	FF_points_equal		3202807	0					
ANR	3202839	Identifier	FF_points_equal		3202807	0					
ANR	3202840	ArgumentList	& p -> currentp		3202807	1					
ANR	3202841	Argument	& p -> currentp		3202807	0					
ANR	3202842	UnaryOperationExpression	& p -> currentp		3202807	0					
ANR	3202843	UnaryOperator	&		3202807	0					
ANR	3202844	PtrMemberAccess	p -> currentp		3202807	1					
ANR	3202845	Identifier	p		3202807	0					
ANR	3202846	Identifier	currentp		3202807	1					
ANR	3202847	Argument	aControl1		3202807	1					
ANR	3202848	Identifier	aControl1		3202807	0					
ANR	3202849	OrExpression	"! FF_points_equal ( & p -> currentp , aControl2 ) || ! FF_points_equal ( & p -> currentp , aTo ) || ! FF_points_equal ( aControl1 , aControl2 ) || ! FF_points_equal ( aControl1 , aTo ) || ! FF_points_equal ( aControl2 , aTo )"		3202807	1		||			
ANR	3202850	UnaryOperationExpression	"! FF_points_equal ( & p -> currentp , aControl2 )"		3202807	0					
ANR	3202851	UnaryOperator	!		3202807	0					
ANR	3202852	CallExpression	"FF_points_equal ( & p -> currentp , aControl2 )"		3202807	1					
ANR	3202853	Callee	FF_points_equal		3202807	0					
ANR	3202854	Identifier	FF_points_equal		3202807	0					
ANR	3202855	ArgumentList	& p -> currentp		3202807	1					
ANR	3202856	Argument	& p -> currentp		3202807	0					
ANR	3202857	UnaryOperationExpression	& p -> currentp		3202807	0					
ANR	3202858	UnaryOperator	&		3202807	0					
ANR	3202859	PtrMemberAccess	p -> currentp		3202807	1					
ANR	3202860	Identifier	p		3202807	0					
ANR	3202861	Identifier	currentp		3202807	1					
ANR	3202862	Argument	aControl2		3202807	1					
ANR	3202863	Identifier	aControl2		3202807	0					
ANR	3202864	OrExpression	"! FF_points_equal ( & p -> currentp , aTo ) || ! FF_points_equal ( aControl1 , aControl2 ) || ! FF_points_equal ( aControl1 , aTo ) || ! FF_points_equal ( aControl2 , aTo )"		3202807	1		||			
ANR	3202865	UnaryOperationExpression	"! FF_points_equal ( & p -> currentp , aTo )"		3202807	0					
ANR	3202866	UnaryOperator	!		3202807	0					
ANR	3202867	CallExpression	"FF_points_equal ( & p -> currentp , aTo )"		3202807	1					
ANR	3202868	Callee	FF_points_equal		3202807	0					
ANR	3202869	Identifier	FF_points_equal		3202807	0					
ANR	3202870	ArgumentList	& p -> currentp		3202807	1					
ANR	3202871	Argument	& p -> currentp		3202807	0					
ANR	3202872	UnaryOperationExpression	& p -> currentp		3202807	0					
ANR	3202873	UnaryOperator	&		3202807	0					
ANR	3202874	PtrMemberAccess	p -> currentp		3202807	1					
ANR	3202875	Identifier	p		3202807	0					
ANR	3202876	Identifier	currentp		3202807	1					
ANR	3202877	Argument	aTo		3202807	1					
ANR	3202878	Identifier	aTo		3202807	0					
ANR	3202879	OrExpression	"! FF_points_equal ( aControl1 , aControl2 ) || ! FF_points_equal ( aControl1 , aTo ) || ! FF_points_equal ( aControl2 , aTo )"		3202807	1		||			
ANR	3202880	UnaryOperationExpression	"! FF_points_equal ( aControl1 , aControl2 )"		3202807	0					
ANR	3202881	UnaryOperator	!		3202807	0					
ANR	3202882	CallExpression	"FF_points_equal ( aControl1 , aControl2 )"		3202807	1					
ANR	3202883	Callee	FF_points_equal		3202807	0					
ANR	3202884	Identifier	FF_points_equal		3202807	0					
ANR	3202885	ArgumentList	aControl1		3202807	1					
ANR	3202886	Argument	aControl1		3202807	0					
ANR	3202887	Identifier	aControl1		3202807	0					
ANR	3202888	Argument	aControl2		3202807	1					
ANR	3202889	Identifier	aControl2		3202807	0					
ANR	3202890	OrExpression	"! FF_points_equal ( aControl1 , aTo ) || ! FF_points_equal ( aControl2 , aTo )"		3202807	1		||			
ANR	3202891	UnaryOperationExpression	"! FF_points_equal ( aControl1 , aTo )"		3202807	0					
ANR	3202892	UnaryOperator	!		3202807	0					
ANR	3202893	CallExpression	"FF_points_equal ( aControl1 , aTo )"		3202807	1					
ANR	3202894	Callee	FF_points_equal		3202807	0					
ANR	3202895	Identifier	FF_points_equal		3202807	0					
ANR	3202896	ArgumentList	aControl1		3202807	1					
ANR	3202897	Argument	aControl1		3202807	0					
ANR	3202898	Identifier	aControl1		3202807	0					
ANR	3202899	Argument	aTo		3202807	1					
ANR	3202900	Identifier	aTo		3202807	0					
ANR	3202901	UnaryOperationExpression	"! FF_points_equal ( aControl2 , aTo )"		3202807	1					
ANR	3202902	UnaryOperator	!		3202807	0					
ANR	3202903	CallExpression	"FF_points_equal ( aControl2 , aTo )"		3202807	1					
ANR	3202904	Callee	FF_points_equal		3202807	0					
ANR	3202905	Identifier	FF_points_equal		3202807	0					
ANR	3202906	ArgumentList	aControl2		3202807	1					
ANR	3202907	Argument	aControl2		3202807	0					
ANR	3202908	Identifier	aControl2		3202807	0					
ANR	3202909	Argument	aTo		3202807	1					
ANR	3202910	Identifier	aTo		3202807	0					
ANR	3202911	CompoundStatement		10:42:395:395	3202807	1					
ANR	3202912	ExpressionStatement	p -> currentp = * aTo	1694:8:58644:58662	3202807	0	True				
ANR	3202913	AssignmentExpression	p -> currentp = * aTo		3202807	0		=			
ANR	3202914	PtrMemberAccess	p -> currentp		3202807	0					
ANR	3202915	Identifier	p		3202807	0					
ANR	3202916	Identifier	currentp		3202807	1					
ANR	3202917	UnaryOperationExpression	* aTo		3202807	1					
ANR	3202918	UnaryOperator	*		3202807	0					
ANR	3202919	Identifier	aTo		3202807	1					
ANR	3202920	ExpressionStatement	p -> x = ( ( int64_t ) aTo -> x ) << 26	1697:8:58707:58738	3202807	1	True				
ANR	3202921	AssignmentExpression	p -> x = ( ( int64_t ) aTo -> x ) << 26		3202807	0		=			
ANR	3202922	PtrMemberAccess	p -> x		3202807	0					
ANR	3202923	Identifier	p		3202807	0					
ANR	3202924	Identifier	x		3202807	1					
ANR	3202925	ShiftExpression	( ( int64_t ) aTo -> x ) << 26		3202807	1		<<			
ANR	3202926	CastExpression	( int64_t ) aTo -> x		3202807	0					
ANR	3202927	CastTarget	int64_t		3202807	0					
ANR	3202928	PtrMemberAccess	aTo -> x		3202807	1					
ANR	3202929	Identifier	aTo		3202807	0					
ANR	3202930	Identifier	x		3202807	1					
ANR	3202931	PrimaryExpression	26		3202807	1					
ANR	3202932	ExpressionStatement	p -> y = ( ( int64_t ) aTo -> y ) << 26	1698:8:58748:58779	3202807	2	True				
ANR	3202933	AssignmentExpression	p -> y = ( ( int64_t ) aTo -> y ) << 26		3202807	0		=			
ANR	3202934	PtrMemberAccess	p -> y		3202807	0					
ANR	3202935	Identifier	p		3202807	0					
ANR	3202936	Identifier	y		3202807	1					
ANR	3202937	ShiftExpression	( ( int64_t ) aTo -> y ) << 26		3202807	1		<<			
ANR	3202938	CastExpression	( int64_t ) aTo -> y		3202807	0					
ANR	3202939	CastTarget	int64_t		3202807	0					
ANR	3202940	PtrMemberAccess	aTo -> y		3202807	1					
ANR	3202941	Identifier	aTo		3202807	0					
ANR	3202942	Identifier	y		3202807	1					
ANR	3202943	PrimaryExpression	26		3202807	1					
ANR	3202944	ExpressionStatement	Control1x = ( ( int64_t ) aControl1 -> x ) << 26	1700:8:58790:58832	3202807	3	True				
ANR	3202945	AssignmentExpression	Control1x = ( ( int64_t ) aControl1 -> x ) << 26		3202807	0		=			
ANR	3202946	Identifier	Control1x		3202807	0					
ANR	3202947	ShiftExpression	( ( int64_t ) aControl1 -> x ) << 26		3202807	1		<<			
ANR	3202948	CastExpression	( int64_t ) aControl1 -> x		3202807	0					
ANR	3202949	CastTarget	int64_t		3202807	0					
ANR	3202950	PtrMemberAccess	aControl1 -> x		3202807	1					
ANR	3202951	Identifier	aControl1		3202807	0					
ANR	3202952	Identifier	x		3202807	1					
ANR	3202953	PrimaryExpression	26		3202807	1					
ANR	3202954	ExpressionStatement	Control1y = ( ( int64_t ) aControl1 -> y ) << 26	1701:8:58842:58884	3202807	4	True				
ANR	3202955	AssignmentExpression	Control1y = ( ( int64_t ) aControl1 -> y ) << 26		3202807	0		=			
ANR	3202956	Identifier	Control1y		3202807	0					
ANR	3202957	ShiftExpression	( ( int64_t ) aControl1 -> y ) << 26		3202807	1		<<			
ANR	3202958	CastExpression	( int64_t ) aControl1 -> y		3202807	0					
ANR	3202959	CastTarget	int64_t		3202807	0					
ANR	3202960	PtrMemberAccess	aControl1 -> y		3202807	1					
ANR	3202961	Identifier	aControl1		3202807	0					
ANR	3202962	Identifier	y		3202807	1					
ANR	3202963	PrimaryExpression	26		3202807	1					
ANR	3202964	ExpressionStatement	Control2x = ( ( int64_t ) aControl2 -> x ) << 26	1702:8:58894:58936	3202807	5	True				
ANR	3202965	AssignmentExpression	Control2x = ( ( int64_t ) aControl2 -> x ) << 26		3202807	0		=			
ANR	3202966	Identifier	Control2x		3202807	0					
ANR	3202967	ShiftExpression	( ( int64_t ) aControl2 -> x ) << 26		3202807	1		<<			
ANR	3202968	CastExpression	( int64_t ) aControl2 -> x		3202807	0					
ANR	3202969	CastTarget	int64_t		3202807	0					
ANR	3202970	PtrMemberAccess	aControl2 -> x		3202807	1					
ANR	3202971	Identifier	aControl2		3202807	0					
ANR	3202972	Identifier	x		3202807	1					
ANR	3202973	PrimaryExpression	26		3202807	1					
ANR	3202974	ExpressionStatement	Control2y = ( ( int64_t ) aControl2 -> y ) << 26	1703:8:58946:58988	3202807	6	True				
ANR	3202975	AssignmentExpression	Control2y = ( ( int64_t ) aControl2 -> y ) << 26		3202807	0		=			
ANR	3202976	Identifier	Control2y		3202807	0					
ANR	3202977	ShiftExpression	( ( int64_t ) aControl2 -> y ) << 26		3202807	1		<<			
ANR	3202978	CastExpression	( int64_t ) aControl2 -> y		3202807	0					
ANR	3202979	CastTarget	int64_t		3202807	0					
ANR	3202980	PtrMemberAccess	aControl2 -> y		3202807	1					
ANR	3202981	Identifier	aControl2		3202807	0					
ANR	3202982	Identifier	y		3202807	1					
ANR	3202983	PrimaryExpression	26		3202807	1					
ANR	3202984	ReturnStatement	"return p -> path -> curveto ( p -> path , Control1x , Control1y , Control2x , Control2y , p -> x , p -> y ) ? - 1 : 0 ;"	1704:8:58998:59127	3202807	7	True				
ANR	3202985	ConditionalExpression	"p -> path -> curveto ( p -> path , Control1x , Control1y , Control2x , Control2y , p -> x , p -> y ) ? - 1 : 0"		3202807	0					
ANR	3202986	Condition	"p -> path -> curveto ( p -> path , Control1x , Control1y , Control2x , Control2y , p -> x , p -> y )"		3202807	0					
ANR	3202987	CallExpression	"p -> path -> curveto ( p -> path , Control1x , Control1y , Control2x , Control2y , p -> x , p -> y )"		3202807	0					
ANR	3202988	Callee	p -> path -> curveto		3202807	0					
ANR	3202989	PtrMemberAccess	p -> path -> curveto		3202807	0					
ANR	3202990	PtrMemberAccess	p -> path		3202807	0					
ANR	3202991	Identifier	p		3202807	0					
ANR	3202992	Identifier	path		3202807	1					
ANR	3202993	Identifier	curveto		3202807	1					
ANR	3202994	ArgumentList	p -> path		3202807	1					
ANR	3202995	Argument	p -> path		3202807	0					
ANR	3202996	PtrMemberAccess	p -> path		3202807	0					
ANR	3202997	Identifier	p		3202807	0					
ANR	3202998	Identifier	path		3202807	1					
ANR	3202999	Argument	Control1x		3202807	1					
ANR	3203000	Identifier	Control1x		3202807	0					
ANR	3203001	Argument	Control1y		3202807	2					
ANR	3203002	Identifier	Control1y		3202807	0					
ANR	3203003	Argument	Control2x		3202807	3					
ANR	3203004	Identifier	Control2x		3202807	0					
ANR	3203005	Argument	Control2y		3202807	4					
ANR	3203006	Identifier	Control2y		3202807	0					
ANR	3203007	Argument	p -> x		3202807	5					
ANR	3203008	PtrMemberAccess	p -> x		3202807	0					
ANR	3203009	Identifier	p		3202807	0					
ANR	3203010	Identifier	x		3202807	1					
ANR	3203011	Argument	p -> y		3202807	6					
ANR	3203012	PtrMemberAccess	p -> y		3202807	0					
ANR	3203013	Identifier	p		3202807	0					
ANR	3203014	Identifier	y		3202807	1					
ANR	3203015	UnaryOperationExpression	- 1		3202807	1					
ANR	3203016	UnaryOperator	-		3202807	0					
ANR	3203017	PrimaryExpression	1		3202807	1					
ANR	3203018	PrimaryExpression	0		3202807	2					
ANR	3203019	ReturnStatement	return 0 ;	1707:4:59139:59147	3202807	3	True				
ANR	3203020	PrimaryExpression	0		3202807	0					
ANR	3203021	ReturnType	static int		3202807	1					
ANR	3203022	Identifier	cubic_to		3202807	2					
ANR	3203023	ParameterList	"const FT_Vector * aControl1 , const FT_Vector * aControl2 , const FT_Vector * aTo , void * aObject"		3202807	3					
ANR	3203024	Parameter	const FT_Vector * aControl1	1682:9:58133:58159	3202807	0	True				
ANR	3203025	ParameterType	const FT_Vector *		3202807	0					
ANR	3203026	Identifier	aControl1		3202807	1					
ANR	3203027	Parameter	const FT_Vector * aControl2	1682:38:58162:58188	3202807	1	True				
ANR	3203028	ParameterType	const FT_Vector *		3202807	0					
ANR	3203029	Identifier	aControl2		3202807	1					
ANR	3203030	Parameter	const FT_Vector * aTo	1683:9:58200:58220	3202807	2	True				
ANR	3203031	ParameterType	const FT_Vector *		3202807	0					
ANR	3203032	Identifier	aTo		3202807	1					
ANR	3203033	Parameter	void * aObject	1683:32:58223:58235	3202807	3	True				
ANR	3203034	ParameterType	void *		3202807	0					
ANR	3203035	Identifier	aObject		3202807	1					
ANR	3203036	CFGEntryNode	ENTRY		3202807		True				
ANR	3203037	CFGExitNode	EXIT		3202807		True				
ANR	3203038	Symbol	Control1y		3202807						
ANR	3203039	Symbol	Control1x		3202807						
ANR	3203040	Symbol	p -> path -> curveto		3202807						
ANR	3203041	Symbol	aControl1		3202807						
ANR	3203042	Symbol	aControl2		3202807						
ANR	3203043	Symbol	* p -> path		3202807						
ANR	3203044	Symbol	aControl1 -> y		3202807						
ANR	3203045	Symbol	p -> y		3202807						
ANR	3203046	Symbol	aControl1 -> x		3202807						
ANR	3203047	Symbol	p -> x		3202807						
ANR	3203048	Symbol	* aControl1		3202807						
ANR	3203049	Symbol	& p -> currentp		3202807						
ANR	3203050	Symbol	p -> path		3202807						
ANR	3203051	Symbol	* aTo		3202807						
ANR	3203052	Symbol	* * p		3202807						
ANR	3203053	Symbol	Control2y		3202807						
ANR	3203054	Symbol	aObject		3202807						
ANR	3203055	Symbol	Control2x		3202807						
ANR	3203056	Symbol	p -> currentp		3202807						
ANR	3203057	Symbol	p		3202807						
ANR	3203058	Symbol	aTo -> y		3202807						
ANR	3203059	Symbol	* aControl2		3202807						
ANR	3203060	Symbol	aTo -> x		3202807						
ANR	3203061	Symbol	FF_points_equal		3202807						
ANR	3203062	Symbol	* p		3202807						
ANR	3203063	Symbol	aControl2 -> y		3202807						
ANR	3203064	Symbol	aTo		3202807						
ANR	3203065	Symbol	aControl2 -> x		3202807						
ANR	3203066	DeclStmt									
ANR	3203067	Decl							const FT_Outline_Funcs	const FT_Outline_Funcs	TheFtOutlineFuncs
ANR	3203068	Function	gs_fapi_ft_get_char_outline	1722:0:59369:60051							
ANR	3203069	FunctionDef	"gs_fapi_ft_get_char_outline (gs_fapi_server * a_server , gs_fapi_path * a_path)"		3203068	0					
ANR	3203070	CompoundStatement		1724:0:59470:60051	3203068	0					
ANR	3203071	IdentifierDeclStatement	ff_server * s = ( ff_server * ) a_server ;	1725:4:59476:59513	3203068	0	True				
ANR	3203072	IdentifierDecl	* s = ( ff_server * ) a_server		3203068	0					
ANR	3203073	IdentifierDeclType	ff_server *		3203068	0					
ANR	3203074	Identifier	s		3203068	1					
ANR	3203075	AssignmentExpression	* s = ( ff_server * ) a_server		3203068	2		=			
ANR	3203076	Identifier	s		3203068	0					
ANR	3203077	CastExpression	( ff_server * ) a_server		3203068	1					
ANR	3203078	CastTarget	ff_server *		3203068	0					
ANR	3203079	Identifier	a_server		3203068	1					
ANR	3203080	IdentifierDeclStatement	FF_path_info p ;	1726:4:59519:59533	3203068	1	True				
ANR	3203081	IdentifierDecl	p		3203068	0					
ANR	3203082	IdentifierDeclType	FF_path_info		3203068	0					
ANR	3203083	Identifier	p		3203068	1					
ANR	3203084	IdentifierDeclStatement	FT_Error ft_error = 0 ;	1727:4:59539:59560	3203068	2	True				
ANR	3203085	IdentifierDecl	ft_error = 0		3203068	0					
ANR	3203086	IdentifierDeclType	FT_Error		3203068	0					
ANR	3203087	Identifier	ft_error		3203068	1					
ANR	3203088	AssignmentExpression	ft_error = 0		3203068	2		=			
ANR	3203089	Identifier	ft_error		3203068	0					
ANR	3203090	PrimaryExpression	0		3203068	1					
ANR	3203091	ExpressionStatement	p . path = a_path	1729:4:59567:59582	3203068	3	True				
ANR	3203092	AssignmentExpression	p . path = a_path		3203068	0		=			
ANR	3203093	MemberAccess	p . path		3203068	0					
ANR	3203094	Identifier	p		3203068	0					
ANR	3203095	Identifier	path		3203068	1					
ANR	3203096	Identifier	a_path		3203068	1					
ANR	3203097	ExpressionStatement	p . x = 0	1730:4:59588:59595	3203068	4	True				
ANR	3203098	AssignmentExpression	p . x = 0		3203068	0		=			
ANR	3203099	MemberAccess	p . x		3203068	0					
ANR	3203100	Identifier	p		3203068	0					
ANR	3203101	Identifier	x		3203068	1					
ANR	3203102	PrimaryExpression	0		3203068	1					
ANR	3203103	ExpressionStatement	p . y = 0	1731:4:59601:59608	3203068	5	True				
ANR	3203104	AssignmentExpression	p . y = 0		3203068	0		=			
ANR	3203105	MemberAccess	p . y		3203068	0					
ANR	3203106	Identifier	p		3203068	0					
ANR	3203107	Identifier	y		3203068	1					
ANR	3203108	PrimaryExpression	0		3203068	1					
ANR	3203109	IfStatement	if ( s -> outline_glyph )		3203068	6					
ANR	3203110	Condition	s -> outline_glyph	1735:8:59728:59743	3203068	0	True				
ANR	3203111	PtrMemberAccess	s -> outline_glyph		3203068	0					
ANR	3203112	Identifier	s		3203068	0					
ANR	3203113	Identifier	outline_glyph		3203068	1					
ANR	3203114	CompoundStatement		12:26:275:275	3203068	1					
ANR	3203115	ExpressionStatement	"ft_error = FT_Outline_Decompose ( & s -> outline_glyph -> outline , & TheFtOutlineFuncs , & p )"	1736:8:59756:59884	3203068	0	True				
ANR	3203116	AssignmentExpression	"ft_error = FT_Outline_Decompose ( & s -> outline_glyph -> outline , & TheFtOutlineFuncs , & p )"		3203068	0		=			
ANR	3203117	Identifier	ft_error		3203068	0					
ANR	3203118	CallExpression	"FT_Outline_Decompose ( & s -> outline_glyph -> outline , & TheFtOutlineFuncs , & p )"		3203068	1					
ANR	3203119	Callee	FT_Outline_Decompose		3203068	0					
ANR	3203120	Identifier	FT_Outline_Decompose		3203068	0					
ANR	3203121	ArgumentList	& s -> outline_glyph -> outline		3203068	1					
ANR	3203122	Argument	& s -> outline_glyph -> outline		3203068	0					
ANR	3203123	UnaryOperationExpression	& s -> outline_glyph -> outline		3203068	0					
ANR	3203124	UnaryOperator	&		3203068	0					
ANR	3203125	PtrMemberAccess	s -> outline_glyph -> outline		3203068	1					
ANR	3203126	PtrMemberAccess	s -> outline_glyph		3203068	0					
ANR	3203127	Identifier	s		3203068	0					
ANR	3203128	Identifier	outline_glyph		3203068	1					
ANR	3203129	Identifier	outline		3203068	1					
ANR	3203130	Argument	& TheFtOutlineFuncs		3203068	1					
ANR	3203131	UnaryOperationExpression	& TheFtOutlineFuncs		3203068	0					
ANR	3203132	UnaryOperator	&		3203068	0					
ANR	3203133	Identifier	TheFtOutlineFuncs		3203068	1					
ANR	3203134	Argument	& p		3203068	2					
ANR	3203135	UnaryOperationExpression	& p		3203068	0					
ANR	3203136	UnaryOperator	&		3203068	0					
ANR	3203137	Identifier	p		3203068	1					
ANR	3203138	ElseStatement	else		3203068	0					
ANR	3203139	CompoundStatement		17:9:430:430	3203068	0					
ANR	3203140	ExpressionStatement	"a_path -> moveto ( a_path , 0 , 0 )"	1741:8:59911:59939	3203068	0	True				
ANR	3203141	CallExpression	"a_path -> moveto ( a_path , 0 , 0 )"		3203068	0					
ANR	3203142	Callee	a_path -> moveto		3203068	0					
ANR	3203143	PtrMemberAccess	a_path -> moveto		3203068	0					
ANR	3203144	Identifier	a_path		3203068	0					
ANR	3203145	Identifier	moveto		3203068	1					
ANR	3203146	ArgumentList	a_path		3203068	1					
ANR	3203147	Argument	a_path		3203068	0					
ANR	3203148	Identifier	a_path		3203068	0					
ANR	3203149	Argument	0		3203068	1					
ANR	3203150	PrimaryExpression	0		3203068	0					
ANR	3203151	Argument	0		3203068	2					
ANR	3203152	PrimaryExpression	0		3203068	0					
ANR	3203153	IfStatement	if ( a_path -> gs_error == 0 )		3203068	7					
ANR	3203154	Condition	a_path -> gs_error == 0	1744:8:59956:59976	3203068	0	True				
ANR	3203155	EqualityExpression	a_path -> gs_error == 0		3203068	0		==			
ANR	3203156	PtrMemberAccess	a_path -> gs_error		3203068	0					
ANR	3203157	Identifier	a_path		3203068	0					
ANR	3203158	Identifier	gs_error		3203068	1					
ANR	3203159	PrimaryExpression	0		3203068	1					
ANR	3203160	ExpressionStatement	a_path -> closepath ( a_path )	1745:8:59987:60012	3203068	1	True				
ANR	3203161	CallExpression	a_path -> closepath ( a_path )		3203068	0					
ANR	3203162	Callee	a_path -> closepath		3203068	0					
ANR	3203163	PtrMemberAccess	a_path -> closepath		3203068	0					
ANR	3203164	Identifier	a_path		3203068	0					
ANR	3203165	Identifier	closepath		3203068	1					
ANR	3203166	ArgumentList	a_path		3203068	1					
ANR	3203167	Argument	a_path		3203068	0					
ANR	3203168	Identifier	a_path		3203068	0					
ANR	3203169	ReturnStatement	return ft_to_gs_error ( ft_error ) ;	1746:4:60018:60049	3203068	8	True				
ANR	3203170	CallExpression	ft_to_gs_error ( ft_error )		3203068	0					
ANR	3203171	Callee	ft_to_gs_error		3203068	0					
ANR	3203172	Identifier	ft_to_gs_error		3203068	0					
ANR	3203173	ArgumentList	ft_error		3203068	1					
ANR	3203174	Argument	ft_error		3203068	0					
ANR	3203175	Identifier	ft_error		3203068	0					
ANR	3203176	ReturnType	static gs_fapi_retcode		3203068	1					
ANR	3203177	Identifier	gs_fapi_ft_get_char_outline		3203068	2					
ANR	3203178	ParameterList	"gs_fapi_server * a_server , gs_fapi_path * a_path"		3203068	3					
ANR	3203179	Parameter	gs_fapi_server * a_server	1723:28:59420:59444	3203068	0	True				
ANR	3203180	ParameterType	gs_fapi_server *		3203068	0					
ANR	3203181	Identifier	a_server		3203068	1					
ANR	3203182	Parameter	gs_fapi_path * a_path	1723:55:59447:59467	3203068	1	True				
ANR	3203183	ParameterType	gs_fapi_path *		3203068	0					
ANR	3203184	Identifier	a_path		3203068	1					
ANR	3203185	CFGEntryNode	ENTRY		3203068		True				
ANR	3203186	CFGExitNode	EXIT		3203068		True				
ANR	3203187	Symbol	a_path -> gs_error		3203068						
ANR	3203188	Symbol	a_server		3203068						
ANR	3203189	Symbol	p . path		3203068						
ANR	3203190	Symbol	ft_to_gs_error		3203068						
ANR	3203191	Symbol	s -> outline_glyph		3203068						
ANR	3203192	Symbol	p . y		3203068						
ANR	3203193	Symbol	p . x		3203068						
ANR	3203194	Symbol	p		3203068						
ANR	3203195	Symbol	s		3203068						
ANR	3203196	Symbol	* a_path		3203068						
ANR	3203197	Symbol	a_path		3203068						
ANR	3203198	Symbol	& p		3203068						
ANR	3203199	Symbol	& s -> outline_glyph -> outline		3203068						
ANR	3203200	Symbol	FT_Outline_Decompose		3203068						
ANR	3203201	Symbol	ft_error		3203068						
ANR	3203202	Symbol	* s		3203068						
ANR	3203203	Symbol	& TheFtOutlineFuncs		3203068						
ANR	3203204	Function	gs_fapi_ft_release_char_data	1749:0:60054:60559							
ANR	3203205	FunctionDef	gs_fapi_ft_release_char_data (gs_fapi_server * a_server)		3203204	0					
ANR	3203206	CompoundStatement		1751:0:60133:60559	3203204	0					
ANR	3203207	IdentifierDeclStatement	ff_server * s = ( ff_server * ) a_server ;	1752:4:60139:60176	3203204	0	True				
ANR	3203208	IdentifierDecl	* s = ( ff_server * ) a_server		3203204	0					
ANR	3203209	IdentifierDeclType	ff_server *		3203204	0					
ANR	3203210	Identifier	s		3203204	1					
ANR	3203211	AssignmentExpression	* s = ( ff_server * ) a_server		3203204	2		=			
ANR	3203212	Identifier	s		3203204	0					
ANR	3203213	CastExpression	( ff_server * ) a_server		3203204	1					
ANR	3203214	CastTarget	ff_server *		3203204	0					
ANR	3203215	Identifier	a_server		3203204	1					
ANR	3203216	IfStatement	if ( s -> outline_glyph )		3203204	1					
ANR	3203217	Condition	s -> outline_glyph	1754:8:60187:60202	3203204	0	True				
ANR	3203218	PtrMemberAccess	s -> outline_glyph		3203204	0					
ANR	3203219	Identifier	s		3203204	0					
ANR	3203220	Identifier	outline_glyph		3203204	1					
ANR	3203221	CompoundStatement		4:26:71:71	3203204	1					
ANR	3203222	ExpressionStatement	"FT_Outline_Done ( s -> freetype_library , & s -> outline_glyph -> outline )"	1755:8:60215:60279	3203204	0	True				
ANR	3203223	CallExpression	"FT_Outline_Done ( s -> freetype_library , & s -> outline_glyph -> outline )"		3203204	0					
ANR	3203224	Callee	FT_Outline_Done		3203204	0					
ANR	3203225	Identifier	FT_Outline_Done		3203204	0					
ANR	3203226	ArgumentList	s -> freetype_library		3203204	1					
ANR	3203227	Argument	s -> freetype_library		3203204	0					
ANR	3203228	PtrMemberAccess	s -> freetype_library		3203204	0					
ANR	3203229	Identifier	s		3203204	0					
ANR	3203230	Identifier	freetype_library		3203204	1					
ANR	3203231	Argument	& s -> outline_glyph -> outline		3203204	1					
ANR	3203232	UnaryOperationExpression	& s -> outline_glyph -> outline		3203204	0					
ANR	3203233	UnaryOperator	&		3203204	0					
ANR	3203234	PtrMemberAccess	s -> outline_glyph -> outline		3203204	1					
ANR	3203235	PtrMemberAccess	s -> outline_glyph		3203204	0					
ANR	3203236	Identifier	s		3203204	0					
ANR	3203237	Identifier	outline_glyph		3203204	1					
ANR	3203238	Identifier	outline		3203204	1					
ANR	3203239	ExpressionStatement	"FF_free ( s -> ftmemory , s -> outline_glyph )"	1756:8:60289:60327	3203204	1	True				
ANR	3203240	CallExpression	"FF_free ( s -> ftmemory , s -> outline_glyph )"		3203204	0					
ANR	3203241	Callee	FF_free		3203204	0					
ANR	3203242	Identifier	FF_free		3203204	0					
ANR	3203243	ArgumentList	s -> ftmemory		3203204	1					
ANR	3203244	Argument	s -> ftmemory		3203204	0					
ANR	3203245	PtrMemberAccess	s -> ftmemory		3203204	0					
ANR	3203246	Identifier	s		3203204	0					
ANR	3203247	Identifier	ftmemory		3203204	1					
ANR	3203248	Argument	s -> outline_glyph		3203204	1					
ANR	3203249	PtrMemberAccess	s -> outline_glyph		3203204	0					
ANR	3203250	Identifier	s		3203204	0					
ANR	3203251	Identifier	outline_glyph		3203204	1					
ANR	3203252	IfStatement	if ( s -> bitmap_glyph )		3203204	2					
ANR	3203253	Condition	s -> bitmap_glyph	1759:8:60344:60358	3203204	0	True				
ANR	3203254	PtrMemberAccess	s -> bitmap_glyph		3203204	0					
ANR	3203255	Identifier	s		3203204	0					
ANR	3203256	Identifier	bitmap_glyph		3203204	1					
ANR	3203257	CompoundStatement		9:25:227:227	3203204	1					
ANR	3203258	ExpressionStatement	"FT_Bitmap_Done ( s -> freetype_library , & s -> bitmap_glyph -> bitmap )"	1760:8:60371:60432	3203204	0	True				
ANR	3203259	CallExpression	"FT_Bitmap_Done ( s -> freetype_library , & s -> bitmap_glyph -> bitmap )"		3203204	0					
ANR	3203260	Callee	FT_Bitmap_Done		3203204	0					
ANR	3203261	Identifier	FT_Bitmap_Done		3203204	0					
ANR	3203262	ArgumentList	s -> freetype_library		3203204	1					
ANR	3203263	Argument	s -> freetype_library		3203204	0					
ANR	3203264	PtrMemberAccess	s -> freetype_library		3203204	0					
ANR	3203265	Identifier	s		3203204	0					
ANR	3203266	Identifier	freetype_library		3203204	1					
ANR	3203267	Argument	& s -> bitmap_glyph -> bitmap		3203204	1					
ANR	3203268	UnaryOperationExpression	& s -> bitmap_glyph -> bitmap		3203204	0					
ANR	3203269	UnaryOperator	&		3203204	0					
ANR	3203270	PtrMemberAccess	s -> bitmap_glyph -> bitmap		3203204	1					
ANR	3203271	PtrMemberAccess	s -> bitmap_glyph		3203204	0					
ANR	3203272	Identifier	s		3203204	0					
ANR	3203273	Identifier	bitmap_glyph		3203204	1					
ANR	3203274	Identifier	bitmap		3203204	1					
ANR	3203275	ExpressionStatement	"FF_free ( s -> ftmemory , s -> bitmap_glyph )"	1761:8:60442:60479	3203204	1	True				
ANR	3203276	CallExpression	"FF_free ( s -> ftmemory , s -> bitmap_glyph )"		3203204	0					
ANR	3203277	Callee	FF_free		3203204	0					
ANR	3203278	Identifier	FF_free		3203204	0					
ANR	3203279	ArgumentList	s -> ftmemory		3203204	1					
ANR	3203280	Argument	s -> ftmemory		3203204	0					
ANR	3203281	PtrMemberAccess	s -> ftmemory		3203204	0					
ANR	3203282	Identifier	s		3203204	0					
ANR	3203283	Identifier	ftmemory		3203204	1					
ANR	3203284	Argument	s -> bitmap_glyph		3203204	1					
ANR	3203285	PtrMemberAccess	s -> bitmap_glyph		3203204	0					
ANR	3203286	Identifier	s		3203204	0					
ANR	3203287	Identifier	bitmap_glyph		3203204	1					
ANR	3203288	ExpressionStatement	s -> outline_glyph = NULL	1764:4:60492:60515	3203204	3	True				
ANR	3203289	AssignmentExpression	s -> outline_glyph = NULL		3203204	0		=			
ANR	3203290	PtrMemberAccess	s -> outline_glyph		3203204	0					
ANR	3203291	Identifier	s		3203204	0					
ANR	3203292	Identifier	outline_glyph		3203204	1					
ANR	3203293	Identifier	NULL		3203204	1					
ANR	3203294	ExpressionStatement	s -> bitmap_glyph = NULL	1765:4:60521:60543	3203204	4	True				
ANR	3203295	AssignmentExpression	s -> bitmap_glyph = NULL		3203204	0		=			
ANR	3203296	PtrMemberAccess	s -> bitmap_glyph		3203204	0					
ANR	3203297	Identifier	s		3203204	0					
ANR	3203298	Identifier	bitmap_glyph		3203204	1					
ANR	3203299	Identifier	NULL		3203204	1					
ANR	3203300	ReturnStatement	return 0 ;	1766:4:60549:60557	3203204	5	True				
ANR	3203301	PrimaryExpression	0		3203204	0					
ANR	3203302	ReturnType	static gs_fapi_retcode		3203204	1					
ANR	3203303	Identifier	gs_fapi_ft_release_char_data		3203204	2					
ANR	3203304	ParameterList	gs_fapi_server * a_server		3203204	3					
ANR	3203305	Parameter	gs_fapi_server * a_server	1750:29:60106:60130	3203204	0	True				
ANR	3203306	ParameterType	gs_fapi_server *		3203204	0					
ANR	3203307	Identifier	a_server		3203204	1					
ANR	3203308	CFGEntryNode	ENTRY		3203204		True				
ANR	3203309	CFGExitNode	EXIT		3203204		True				
ANR	3203310	Symbol	s		3203204						
ANR	3203311	Symbol	& s -> bitmap_glyph -> bitmap		3203204						
ANR	3203312	Symbol	NULL		3203204						
ANR	3203313	Symbol	a_server		3203204						
ANR	3203314	Symbol	s -> outline_glyph		3203204						
ANR	3203315	Symbol	& s -> outline_glyph -> outline		3203204						
ANR	3203316	Symbol	s -> ftmemory		3203204						
ANR	3203317	Symbol	* s		3203204						
ANR	3203318	Symbol	s -> bitmap_glyph		3203204						
ANR	3203319	Symbol	s -> freetype_library		3203204						
ANR	3203320	Function	gs_fapi_ft_release_typeface	1769:0:60562:60768							
ANR	3203321	FunctionDef	"gs_fapi_ft_release_typeface (gs_fapi_server * a_server , void * a_server_font_data)"		3203320	0					
ANR	3203322	CompoundStatement		1771:0:60666:60768	3203320	0					
ANR	3203323	IdentifierDeclStatement	ff_face * face = ( ff_face * ) a_server_font_data ;	1772:4:60672:60718	3203320	0	True				
ANR	3203324	IdentifierDecl	* face = ( ff_face * ) a_server_font_data		3203320	0					
ANR	3203325	IdentifierDeclType	ff_face *		3203320	0					
ANR	3203326	Identifier	face		3203320	1					
ANR	3203327	AssignmentExpression	* face = ( ff_face * ) a_server_font_data		3203320	2		=			
ANR	3203328	Identifier	face		3203320	0					
ANR	3203329	CastExpression	( ff_face * ) a_server_font_data		3203320	1					
ANR	3203330	CastTarget	ff_face *		3203320	0					
ANR	3203331	Identifier	a_server_font_data		3203320	1					
ANR	3203332	ExpressionStatement	"delete_face ( a_server , face )"	1774:4:60725:60752	3203320	1	True				
ANR	3203333	CallExpression	"delete_face ( a_server , face )"		3203320	0					
ANR	3203334	Callee	delete_face		3203320	0					
ANR	3203335	Identifier	delete_face		3203320	0					
ANR	3203336	ArgumentList	a_server		3203320	1					
ANR	3203337	Argument	a_server		3203320	0					
ANR	3203338	Identifier	a_server		3203320	0					
ANR	3203339	Argument	face		3203320	1					
ANR	3203340	Identifier	face		3203320	0					
ANR	3203341	ReturnStatement	return 0 ;	1775:4:60758:60766	3203320	2	True				
ANR	3203342	PrimaryExpression	0		3203320	0					
ANR	3203343	ReturnType	static gs_fapi_retcode		3203320	1					
ANR	3203344	Identifier	gs_fapi_ft_release_typeface		3203320	2					
ANR	3203345	ParameterList	"gs_fapi_server * a_server , void * a_server_font_data"		3203320	3					
ANR	3203346	Parameter	gs_fapi_server * a_server	1770:28:60613:60637	3203320	0	True				
ANR	3203347	ParameterType	gs_fapi_server *		3203320	0					
ANR	3203348	Identifier	a_server		3203320	1					
ANR	3203349	Parameter	void * a_server_font_data	1770:55:60640:60663	3203320	1	True				
ANR	3203350	ParameterType	void *		3203320	0					
ANR	3203351	Identifier	a_server_font_data		3203320	1					
ANR	3203352	CFGEntryNode	ENTRY		3203320		True				
ANR	3203353	CFGExitNode	EXIT		3203320		True				
ANR	3203354	Symbol	face		3203320						
ANR	3203355	Symbol	a_server_font_data		3203320						
ANR	3203356	Symbol	a_server		3203320						
ANR	3203357	Function	gs_fapi_ft_check_cmap_for_GID	1778:0:60771:61029							
ANR	3203358	FunctionDef	"gs_fapi_ft_check_cmap_for_GID (gs_fapi_server * server , uint * index)"		3203357	0					
ANR	3203359	CompoundStatement		1780:0:60863:61029	3203357	0					
ANR	3203360	IdentifierDeclStatement	ff_face * face = ( ff_face * ) ( server -> ff . server_font_data ) ;	1781:4:60869:60926	3203357	0	True				
ANR	3203361	IdentifierDecl	* face = ( ff_face * ) ( server -> ff . server_font_data )		3203357	0					
ANR	3203362	IdentifierDeclType	ff_face *		3203357	0					
ANR	3203363	Identifier	face		3203357	1					
ANR	3203364	AssignmentExpression	* face = ( ff_face * ) ( server -> ff . server_font_data )		3203357	2		=			
ANR	3203365	Identifier	face		3203357	0					
ANR	3203366	CastExpression	( ff_face * ) ( server -> ff . server_font_data )		3203357	1					
ANR	3203367	CastTarget	ff_face *		3203357	0					
ANR	3203368	MemberAccess	server -> ff . server_font_data		3203357	1					
ANR	3203369	PtrMemberAccess	server -> ff		3203357	0					
ANR	3203370	Identifier	server		3203357	0					
ANR	3203371	Identifier	ff		3203357	1					
ANR	3203372	Identifier	server_font_data		3203357	1					
ANR	3203373	IdentifierDeclStatement	FT_Face ft_face = face -> ft_face ;	1782:4:60932:60963	3203357	1	True				
ANR	3203374	IdentifierDecl	ft_face = face -> ft_face		3203357	0					
ANR	3203375	IdentifierDeclType	FT_Face		3203357	0					
ANR	3203376	Identifier	ft_face		3203357	1					
ANR	3203377	AssignmentExpression	ft_face = face -> ft_face		3203357	2		=			
ANR	3203378	Identifier	ft_face		3203357	0					
ANR	3203379	PtrMemberAccess	face -> ft_face		3203357	1					
ANR	3203380	Identifier	face		3203357	0					
ANR	3203381	Identifier	ft_face		3203357	1					
ANR	3203382	ExpressionStatement	"* index = FT_Get_Char_Index ( ft_face , * index )"	1784:4:60970:61013	3203357	2	True				
ANR	3203383	AssignmentExpression	"* index = FT_Get_Char_Index ( ft_face , * index )"		3203357	0		=			
ANR	3203384	UnaryOperationExpression	* index		3203357	0					
ANR	3203385	UnaryOperator	*		3203357	0					
ANR	3203386	Identifier	index		3203357	1					
ANR	3203387	CallExpression	"FT_Get_Char_Index ( ft_face , * index )"		3203357	1					
ANR	3203388	Callee	FT_Get_Char_Index		3203357	0					
ANR	3203389	Identifier	FT_Get_Char_Index		3203357	0					
ANR	3203390	ArgumentList	ft_face		3203357	1					
ANR	3203391	Argument	ft_face		3203357	0					
ANR	3203392	Identifier	ft_face		3203357	0					
ANR	3203393	Argument	* index		3203357	1					
ANR	3203394	UnaryOperationExpression	* index		3203357	0					
ANR	3203395	UnaryOperator	*		3203357	0					
ANR	3203396	Identifier	index		3203357	1					
ANR	3203397	ReturnStatement	return 0 ;	1785:4:61019:61027	3203357	3	True				
ANR	3203398	PrimaryExpression	0		3203357	0					
ANR	3203399	ReturnType	static gs_fapi_retcode		3203357	1					
ANR	3203400	Identifier	gs_fapi_ft_check_cmap_for_GID		3203357	2					
ANR	3203401	ParameterList	"gs_fapi_server * server , uint * index"		3203357	3					
ANR	3203402	Parameter	gs_fapi_server * server	1779:30:60824:60846	3203357	0	True				
ANR	3203403	ParameterType	gs_fapi_server *		3203357	0					
ANR	3203404	Identifier	server		3203357	1					
ANR	3203405	Parameter	uint * index	1779:55:60849:60860	3203357	1	True				
ANR	3203406	ParameterType	uint *		3203357	0					
ANR	3203407	Identifier	index		3203357	1					
ANR	3203408	CFGEntryNode	ENTRY		3203357		True				
ANR	3203409	CFGExitNode	EXIT		3203357		True				
ANR	3203410	Symbol	server		3203357						
ANR	3203411	Symbol	face		3203357						
ANR	3203412	Symbol	* server		3203357						
ANR	3203413	Symbol	FT_Get_Char_Index		3203357						
ANR	3203414	Symbol	server -> ff		3203357						
ANR	3203415	Symbol	face -> ft_face		3203357						
ANR	3203416	Symbol	ft_face		3203357						
ANR	3203417	Symbol	* index		3203357						
ANR	3203418	Symbol	server -> ff . server_font_data		3203357						
ANR	3203419	Symbol	index		3203357						
ANR	3203420	Symbol	* face		3203357						
ANR	3203421	Function	gs_fapi_ft_set_mm_weight_vector	1788:0:61032:61268							
ANR	3203422	FunctionDef	"gs_fapi_ft_set_mm_weight_vector (gs_fapi_server * server , gs_fapi_font * ff , float * wvector , int length)"		3203421	0					
ANR	3203423	CompoundStatement		1790:0:61157:61268	3203421	0					
ANR	3203424	ExpressionStatement	( void ) server	1791:4:61163:61175	3203421	0	True				
ANR	3203425	CastExpression	( void ) server		3203421	0					
ANR	3203426	CastTarget	void		3203421	0					
ANR	3203427	Identifier	server		3203421	1					
ANR	3203428	ExpressionStatement	( void ) ff	1792:4:61181:61189	3203421	1	True				
ANR	3203429	CastExpression	( void ) ff		3203421	0					
ANR	3203430	CastTarget	void		3203421	0					
ANR	3203431	Identifier	ff		3203421	1					
ANR	3203432	ExpressionStatement	( void ) wvector	1793:4:61195:61208	3203421	2	True				
ANR	3203433	CastExpression	( void ) wvector		3203421	0					
ANR	3203434	CastTarget	void		3203421	0					
ANR	3203435	Identifier	wvector		3203421	1					
ANR	3203436	ExpressionStatement	( void ) length	1794:4:61214:61226	3203421	3	True				
ANR	3203437	CastExpression	( void ) length		3203421	0					
ANR	3203438	CastTarget	void		3203421	0					
ANR	3203439	Identifier	length		3203421	1					
ANR	3203440	ReturnStatement	return gs_error_invalidaccess ;	1796:4:61237:61266	3203421	4	True				
ANR	3203441	Identifier	gs_error_invalidaccess		3203421	0					
ANR	3203442	ReturnType	static gs_fapi_retcode		3203421	1					
ANR	3203443	Identifier	gs_fapi_ft_set_mm_weight_vector		3203421	2					
ANR	3203444	ParameterList	"gs_fapi_server * server , gs_fapi_font * ff , float * wvector , int length"		3203421	3					
ANR	3203445	Parameter	gs_fapi_server * server	1789:32:61087:61108	3203421	0	True				
ANR	3203446	ParameterType	gs_fapi_server *		3203421	0					
ANR	3203447	Identifier	server		3203421	1					
ANR	3203448	Parameter	gs_fapi_font * ff	1789:56:61111:61126	3203421	1	True				
ANR	3203449	ParameterType	gs_fapi_font *		3203421	0					
ANR	3203450	Identifier	ff		3203421	1					
ANR	3203451	Parameter	float * wvector	1789:74:61129:61142	3203421	2	True				
ANR	3203452	ParameterType	float *		3203421	0					
ANR	3203453	Identifier	wvector		3203421	1					
ANR	3203454	Parameter	int length	1789:90:61145:61154	3203421	3	True				
ANR	3203455	ParameterType	int		3203421	0					
ANR	3203456	Identifier	length		3203421	1					
ANR	3203457	CFGEntryNode	ENTRY		3203421		True				
ANR	3203458	CFGExitNode	EXIT		3203421		True				
ANR	3203459	Symbol	ff		3203421						
ANR	3203460	Symbol	server		3203421						
ANR	3203461	Symbol	wvector		3203421						
ANR	3203462	Symbol	length		3203421						
ANR	3203463	Symbol	gs_error_invalidaccess		3203421						
ANR	3203464	DeclStmt									
ANR	3203465	Decl							void	void ( gs_fapi_server * * serv )	gs_fapi_freetype_destroy
ANR	3203466	DeclStmt									
ANR	3203467	Decl							const gs_fapi_server_descriptor	const gs_fapi_server_descriptor	freetypedescriptor
ANR	3203468	DeclStmt									
ANR	3203469	Decl							const gs_fapi_server	const gs_fapi_server	freetypeserver
ANR	3203470	DeclStmt									
ANR	3203471	Decl							int	"int ( gs_memory_t * mem , gs_fapi_server * * server )"	gs_fapi_ft_init
ANR	3203472	Function	gs_fapi_ft_init	1840:0:62506:63168							
ANR	3203473	FunctionDef	"gs_fapi_ft_init (gs_memory_t * mem , gs_fapi_server * * server)"		3203472	0					
ANR	3203474	CompoundStatement		1842:0:62571:63168	3203472	0					
ANR	3203475	IdentifierDeclStatement	ff_server * serv ;	1843:4:62577:62592	3203472	0	True				
ANR	3203476	IdentifierDecl	* serv		3203472	0					
ANR	3203477	IdentifierDeclType	ff_server *		3203472	0					
ANR	3203478	Identifier	serv		3203472	1					
ANR	3203479	IdentifierDeclStatement	int code = 0 ;	1844:4:62598:62610	3203472	1	True				
ANR	3203480	IdentifierDecl	code = 0		3203472	0					
ANR	3203481	IdentifierDeclType	int		3203472	0					
ANR	3203482	Identifier	code		3203472	1					
ANR	3203483	AssignmentExpression	code = 0		3203472	2		=			
ANR	3203484	Identifier	code		3203472	0					
ANR	3203485	PrimaryExpression	0		3203472	1					
ANR	3203486	IdentifierDeclStatement	gs_memory_t * cmem = mem -> non_gc_memory ;	1845:4:62616:62654	3203472	2	True				
ANR	3203487	IdentifierDecl	* cmem = mem -> non_gc_memory		3203472	0					
ANR	3203488	IdentifierDeclType	gs_memory_t *		3203472	0					
ANR	3203489	Identifier	cmem		3203472	1					
ANR	3203490	AssignmentExpression	* cmem = mem -> non_gc_memory		3203472	2		=			
ANR	3203491	Identifier	cmem		3203472	0					
ANR	3203492	PtrMemberAccess	mem -> non_gc_memory		3203472	1					
ANR	3203493	Identifier	mem		3203472	0					
ANR	3203494	Identifier	non_gc_memory		3203472	1					
ANR	3203495	ExpressionStatement	"code = gs_memory_chunk_wrap ( & ( cmem ) , mem )"	1847:4:62661:62702	3203472	3	True				
ANR	3203496	AssignmentExpression	"code = gs_memory_chunk_wrap ( & ( cmem ) , mem )"		3203472	0		=			
ANR	3203497	Identifier	code		3203472	0					
ANR	3203498	CallExpression	"gs_memory_chunk_wrap ( & ( cmem ) , mem )"		3203472	1					
ANR	3203499	Callee	gs_memory_chunk_wrap		3203472	0					
ANR	3203500	Identifier	gs_memory_chunk_wrap		3203472	0					
ANR	3203501	ArgumentList	& ( cmem )		3203472	1					
ANR	3203502	Argument	& ( cmem )		3203472	0					
ANR	3203503	UnaryOperationExpression	& ( cmem )		3203472	0					
ANR	3203504	UnaryOperator	&		3203472	0					
ANR	3203505	Identifier	cmem		3203472	1					
ANR	3203506	Argument	mem		3203472	1					
ANR	3203507	Identifier	mem		3203472	0					
ANR	3203508	IfStatement	if ( code != 0 )		3203472	4					
ANR	3203509	Condition	code != 0	1848:8:62712:62720	3203472	0	True				
ANR	3203510	EqualityExpression	code != 0		3203472	0		!=			
ANR	3203511	Identifier	code		3203472	0					
ANR	3203512	PrimaryExpression	0		3203472	1					
ANR	3203513	CompoundStatement		7:19:151:151	3203472	1					
ANR	3203514	ReturnStatement	return ( code ) ;	1849:8:62733:62746	3203472	0	True				
ANR	3203515	Identifier	code		3203472	0					
ANR	3203516	ExpressionStatement	"serv = ( ff_server * ) gs_alloc_bytes_immovable ( cmem , sizeof ( ff_server ) , ""gs_fapi_ft_init"" )"	1853:4:62760:62849	3203472	5	True				
ANR	3203517	AssignmentExpression	"serv = ( ff_server * ) gs_alloc_bytes_immovable ( cmem , sizeof ( ff_server ) , ""gs_fapi_ft_init"" )"		3203472	0		=			
ANR	3203518	Identifier	serv		3203472	0					
ANR	3203519	CastExpression	"( ff_server * ) gs_alloc_bytes_immovable ( cmem , sizeof ( ff_server ) , ""gs_fapi_ft_init"" )"		3203472	1					
ANR	3203520	CastTarget	ff_server *		3203472	0					
ANR	3203521	CallExpression	"gs_alloc_bytes_immovable ( cmem , sizeof ( ff_server ) , ""gs_fapi_ft_init"" )"		3203472	1					
ANR	3203522	Callee	gs_alloc_bytes_immovable		3203472	0					
ANR	3203523	Identifier	gs_alloc_bytes_immovable		3203472	0					
ANR	3203524	ArgumentList	cmem		3203472	1					
ANR	3203525	Argument	cmem		3203472	0					
ANR	3203526	Identifier	cmem		3203472	0					
ANR	3203527	Argument	sizeof ( ff_server )		3203472	1					
ANR	3203528	SizeofExpression	sizeof ( ff_server )		3203472	0					
ANR	3203529	Sizeof	sizeof		3203472	0					
ANR	3203530	SizeofOperand	ff_server		3203472	1					
ANR	3203531	Argument	"""gs_fapi_ft_init"""		3203472	2					
ANR	3203532	PrimaryExpression	"""gs_fapi_ft_init"""		3203472	0					
ANR	3203533	IfStatement	if ( ! serv )		3203472	6					
ANR	3203534	Condition	! serv	1854:8:62859:62863	3203472	0	True				
ANR	3203535	UnaryOperationExpression	! serv		3203472	0					
ANR	3203536	UnaryOperator	!		3203472	0					
ANR	3203537	Identifier	serv		3203472	1					
ANR	3203538	CompoundStatement		13:15:294:294	3203472	1					
ANR	3203539	ExpressionStatement	gs_memory_chunk_release ( cmem )	1855:8:62876:62905	3203472	0	True				
ANR	3203540	CallExpression	gs_memory_chunk_release ( cmem )		3203472	0					
ANR	3203541	Callee	gs_memory_chunk_release		3203472	0					
ANR	3203542	Identifier	gs_memory_chunk_release		3203472	0					
ANR	3203543	ArgumentList	cmem		3203472	1					
ANR	3203544	Argument	cmem		3203472	0					
ANR	3203545	Identifier	cmem		3203472	0					
ANR	3203546	ExpressionStatement	return_error ( gs_error_VMerror )	1856:8:62915:62945	3203472	1	True				
ANR	3203547	CallExpression	return_error ( gs_error_VMerror )		3203472	0					
ANR	3203548	Callee	return_error		3203472	0					
ANR	3203549	Identifier	return_error		3203472	0					
ANR	3203550	ArgumentList	gs_error_VMerror		3203472	1					
ANR	3203551	Argument	gs_error_VMerror		3203472	0					
ANR	3203552	Identifier	gs_error_VMerror		3203472	0					
ANR	3203553	ExpressionStatement	"memset ( serv , 0 , sizeof ( * serv ) )"	1858:4:62957:62987	3203472	7	True				
ANR	3203554	CallExpression	"memset ( serv , 0 , sizeof ( * serv ) )"		3203472	0					
ANR	3203555	Callee	memset		3203472	0					
ANR	3203556	Identifier	memset		3203472	0					
ANR	3203557	ArgumentList	serv		3203472	1					
ANR	3203558	Argument	serv		3203472	0					
ANR	3203559	Identifier	serv		3203472	0					
ANR	3203560	Argument	0		3203472	1					
ANR	3203561	PrimaryExpression	0		3203472	0					
ANR	3203562	Argument	sizeof ( * serv )		3203472	2					
ANR	3203563	SizeofExpression	sizeof ( * serv )		3203472	0					
ANR	3203564	Sizeof	sizeof		3203472	0					
ANR	3203565	UnaryOperationExpression	* serv		3203472	1					
ANR	3203566	UnaryOperator	*		3203472	0					
ANR	3203567	Identifier	serv		3203472	1					
ANR	3203568	ExpressionStatement	serv -> mem = cmem	1859:4:62993:63009	3203472	8	True				
ANR	3203569	AssignmentExpression	serv -> mem = cmem		3203472	0		=			
ANR	3203570	PtrMemberAccess	serv -> mem		3203472	0					
ANR	3203571	Identifier	serv		3203472	0					
ANR	3203572	Identifier	mem		3203472	1					
ANR	3203573	Identifier	cmem		3203472	1					
ANR	3203574	ExpressionStatement	serv -> fapi_server = freetypeserver	1860:4:63015:63049	3203472	9	True				
ANR	3203575	AssignmentExpression	serv -> fapi_server = freetypeserver		3203472	0		=			
ANR	3203576	PtrMemberAccess	serv -> fapi_server		3203472	0					
ANR	3203577	Identifier	serv		3203472	0					
ANR	3203578	Identifier	fapi_server		3203472	1					
ANR	3203579	Identifier	freetypeserver		3203472	1					
ANR	3203580	ExpressionStatement	serv -> ftmemory = ( FT_Memory ) ( & ( serv -> ftmemory_rec ) )	1862:4:63056:63108	3203472	10	True				
ANR	3203581	AssignmentExpression	serv -> ftmemory = ( FT_Memory ) ( & ( serv -> ftmemory_rec ) )		3203472	0		=			
ANR	3203582	PtrMemberAccess	serv -> ftmemory		3203472	0					
ANR	3203583	Identifier	serv		3203472	0					
ANR	3203584	Identifier	ftmemory		3203472	1					
ANR	3203585	CastExpression	( FT_Memory ) ( & ( serv -> ftmemory_rec ) )		3203472	1					
ANR	3203586	CastTarget	FT_Memory		3203472	0					
ANR	3203587	UnaryOperationExpression	& ( serv -> ftmemory_rec )		3203472	1					
ANR	3203588	UnaryOperator	&		3203472	0					
ANR	3203589	PtrMemberAccess	serv -> ftmemory_rec		3203472	1					
ANR	3203590	Identifier	serv		3203472	0					
ANR	3203591	Identifier	ftmemory_rec		3203472	1					
ANR	3203592	ExpressionStatement	( * server ) = ( gs_fapi_server * ) serv	1864:4:63115:63150	3203472	11	True				
ANR	3203593	AssignmentExpression	( * server ) = ( gs_fapi_server * ) serv		3203472	0		=			
ANR	3203594	UnaryOperationExpression	* server		3203472	0					
ANR	3203595	UnaryOperator	*		3203472	0					
ANR	3203596	Identifier	server		3203472	1					
ANR	3203597	CastExpression	( gs_fapi_server * ) serv		3203472	1					
ANR	3203598	CastTarget	gs_fapi_server *		3203472	0					
ANR	3203599	Identifier	serv		3203472	1					
ANR	3203600	ReturnStatement	return ( 0 ) ;	1865:4:63156:63166	3203472	12	True				
ANR	3203601	PrimaryExpression	0		3203472	0					
ANR	3203602	ReturnType	int		3203472	1					
ANR	3203603	Identifier	gs_fapi_ft_init		3203472	2					
ANR	3203604	ParameterList	"gs_memory_t * mem , gs_fapi_server * * server"		3203472	3					
ANR	3203605	Parameter	gs_memory_t * mem	1841:16:62526:62542	3203472	0	True				
ANR	3203606	ParameterType	gs_memory_t *		3203472	0					
ANR	3203607	Identifier	mem		3203472	1					
ANR	3203608	Parameter	gs_fapi_server * * server	1841:35:62545:62568	3203472	1	True				
ANR	3203609	ParameterType	gs_fapi_server * *		3203472	0					
ANR	3203610	Identifier	server		3203472	1					
ANR	3203611	CFGEntryNode	ENTRY		3203472		True				
ANR	3203612	CFGExitNode	EXIT		3203472		True				
ANR	3203613	Symbol	server		3203472						
ANR	3203614	Symbol	serv		3203472						
ANR	3203615	Symbol	code		3203472						
ANR	3203616	Symbol	* server		3203472						
ANR	3203617	Symbol	gs_memory_chunk_wrap		3203472						
ANR	3203618	Symbol	& cmem		3203472						
ANR	3203619	Symbol	* serv		3203472						
ANR	3203620	Symbol	freetypeserver		3203472						
ANR	3203621	Symbol	mem -> non_gc_memory		3203472						
ANR	3203622	Symbol	serv -> fapi_server		3203472						
ANR	3203623	Symbol	gs_error_VMerror		3203472						
ANR	3203624	Symbol	& serv -> ftmemory_rec		3203472						
ANR	3203625	Symbol	mem		3203472						
ANR	3203626	Symbol	gs_alloc_bytes_immovable		3203472						
ANR	3203627	Symbol	serv -> mem		3203472						
ANR	3203628	Symbol	serv -> ftmemory		3203472						
ANR	3203629	Symbol	cmem		3203472						
ANR	3203630	Symbol	* mem		3203472						
ANR	3203631	Function	gs_fapi_freetype_destroy	1869:0:63172:63796							
ANR	3203632	FunctionDef	gs_fapi_freetype_destroy (gs_fapi_server * * serv)		3203631	0					
ANR	3203633	CompoundStatement		1871:0:63226:63796	3203631	0					
ANR	3203634	IdentifierDeclStatement	ff_server * server = ( ff_server * ) * serv ;	1872:4:63232:63272	3203631	0	True				
ANR	3203635	IdentifierDecl	* server = ( ff_server * ) * serv		3203631	0					
ANR	3203636	IdentifierDeclType	ff_server *		3203631	0					
ANR	3203637	Identifier	server		3203631	1					
ANR	3203638	AssignmentExpression	* server = ( ff_server * ) * serv		3203631	2		=			
ANR	3203639	Identifier	server		3203631	0					
ANR	3203640	CastExpression	( ff_server * ) * serv		3203631	1					
ANR	3203641	CastTarget	ff_server *		3203631	0					
ANR	3203642	UnaryOperationExpression	* serv		3203631	1					
ANR	3203643	UnaryOperator	*		3203631	0					
ANR	3203644	Identifier	serv		3203631	1					
ANR	3203645	IdentifierDeclStatement	gs_memory_t * cmem = server -> mem ;	1873:4:63278:63309	3203631	1	True				
ANR	3203646	IdentifierDecl	* cmem = server -> mem		3203631	0					
ANR	3203647	IdentifierDeclType	gs_memory_t *		3203631	0					
ANR	3203648	Identifier	cmem		3203631	1					
ANR	3203649	AssignmentExpression	* cmem = server -> mem		3203631	2		=			
ANR	3203650	Identifier	cmem		3203631	0					
ANR	3203651	PtrMemberAccess	server -> mem		3203631	1					
ANR	3203652	Identifier	server		3203631	0					
ANR	3203653	Identifier	mem		3203631	1					
ANR	3203654	ExpressionStatement	FT_Done_Glyph ( & server -> outline_glyph -> root )	1875:4:63316:63359	3203631	2	True				
ANR	3203655	CallExpression	FT_Done_Glyph ( & server -> outline_glyph -> root )		3203631	0					
ANR	3203656	Callee	FT_Done_Glyph		3203631	0					
ANR	3203657	Identifier	FT_Done_Glyph		3203631	0					
ANR	3203658	ArgumentList	& server -> outline_glyph -> root		3203631	1					
ANR	3203659	Argument	& server -> outline_glyph -> root		3203631	0					
ANR	3203660	UnaryOperationExpression	& server -> outline_glyph -> root		3203631	0					
ANR	3203661	UnaryOperator	&		3203631	0					
ANR	3203662	PtrMemberAccess	server -> outline_glyph -> root		3203631	1					
ANR	3203663	PtrMemberAccess	server -> outline_glyph		3203631	0					
ANR	3203664	Identifier	server		3203631	0					
ANR	3203665	Identifier	outline_glyph		3203631	1					
ANR	3203666	Identifier	root		3203631	1					
ANR	3203667	ExpressionStatement	FT_Done_Glyph ( & server -> bitmap_glyph -> root )	1876:4:63365:63407	3203631	3	True				
ANR	3203668	CallExpression	FT_Done_Glyph ( & server -> bitmap_glyph -> root )		3203631	0					
ANR	3203669	Callee	FT_Done_Glyph		3203631	0					
ANR	3203670	Identifier	FT_Done_Glyph		3203631	0					
ANR	3203671	ArgumentList	& server -> bitmap_glyph -> root		3203631	1					
ANR	3203672	Argument	& server -> bitmap_glyph -> root		3203631	0					
ANR	3203673	UnaryOperationExpression	& server -> bitmap_glyph -> root		3203631	0					
ANR	3203674	UnaryOperator	&		3203631	0					
ANR	3203675	PtrMemberAccess	server -> bitmap_glyph -> root		3203631	1					
ANR	3203676	PtrMemberAccess	server -> bitmap_glyph		3203631	0					
ANR	3203677	Identifier	server		3203631	0					
ANR	3203678	Identifier	bitmap_glyph		3203631	1					
ANR	3203679	Identifier	root		3203631	1					
ANR	3203680	ExpressionStatement	FT_Done_Library ( server -> freetype_library )	1882:4:63629:63670	3203631	4	True				
ANR	3203681	CallExpression	FT_Done_Library ( server -> freetype_library )		3203631	0					
ANR	3203682	Callee	FT_Done_Library		3203631	0					
ANR	3203683	Identifier	FT_Done_Library		3203631	0					
ANR	3203684	ArgumentList	server -> freetype_library		3203631	1					
ANR	3203685	Argument	server -> freetype_library		3203631	0					
ANR	3203686	PtrMemberAccess	server -> freetype_library		3203631	0					
ANR	3203687	Identifier	server		3203631	0					
ANR	3203688	Identifier	freetype_library		3203631	1					
ANR	3203689	ExpressionStatement	"gs_free ( cmem , * serv , 0 , 0 , ""gs_fapi_freetype_destroy: ff_server"" )"	1883:4:63676:63741	3203631	5	True				
ANR	3203690	CallExpression	"gs_free ( cmem , * serv , 0 , 0 , ""gs_fapi_freetype_destroy: ff_server"" )"		3203631	0					
ANR	3203691	Callee	gs_free		3203631	0					
ANR	3203692	Identifier	gs_free		3203631	0					
ANR	3203693	ArgumentList	cmem		3203631	1					
ANR	3203694	Argument	cmem		3203631	0					
ANR	3203695	Identifier	cmem		3203631	0					
ANR	3203696	Argument	* serv		3203631	1					
ANR	3203697	UnaryOperationExpression	* serv		3203631	0					
ANR	3203698	UnaryOperator	*		3203631	0					
ANR	3203699	Identifier	serv		3203631	1					
ANR	3203700	Argument	0		3203631	2					
ANR	3203701	PrimaryExpression	0		3203631	0					
ANR	3203702	Argument	0		3203631	3					
ANR	3203703	PrimaryExpression	0		3203631	0					
ANR	3203704	Argument	"""gs_fapi_freetype_destroy: ff_server"""		3203631	4					
ANR	3203705	PrimaryExpression	"""gs_fapi_freetype_destroy: ff_server"""		3203631	0					
ANR	3203706	ExpressionStatement	* serv = NULL	1884:4:63747:63759	3203631	6	True				
ANR	3203707	AssignmentExpression	* serv = NULL		3203631	0		=			
ANR	3203708	UnaryOperationExpression	* serv		3203631	0					
ANR	3203709	UnaryOperator	*		3203631	0					
ANR	3203710	Identifier	serv		3203631	1					
ANR	3203711	Identifier	NULL		3203631	1					
ANR	3203712	ExpressionStatement	gs_memory_chunk_release ( cmem )	1885:4:63765:63794	3203631	7	True				
ANR	3203713	CallExpression	gs_memory_chunk_release ( cmem )		3203631	0					
ANR	3203714	Callee	gs_memory_chunk_release		3203631	0					
ANR	3203715	Identifier	gs_memory_chunk_release		3203631	0					
ANR	3203716	ArgumentList	cmem		3203631	1					
ANR	3203717	Argument	cmem		3203631	0					
ANR	3203718	Identifier	cmem		3203631	0					
ANR	3203719	ReturnType	void		3203631	1					
ANR	3203720	Identifier	gs_fapi_freetype_destroy		3203631	2					
ANR	3203721	ParameterList	gs_fapi_server * * serv		3203631	3					
ANR	3203722	Parameter	gs_fapi_server * * serv	1870:25:63202:63223	3203631	0	True				
ANR	3203723	ParameterType	gs_fapi_server * *		3203631	0					
ANR	3203724	Identifier	serv		3203631	1					
ANR	3203725	CFGEntryNode	ENTRY		3203631		True				
ANR	3203726	CFGExitNode	EXIT		3203631		True				
ANR	3203727	Symbol	server -> bitmap_glyph		3203631						
ANR	3203728	Symbol	server		3203631						
ANR	3203729	Symbol	server -> outline_glyph		3203631						
ANR	3203730	Symbol	serv		3203631						
ANR	3203731	Symbol	* server		3203631						
ANR	3203732	Symbol	NULL		3203631						
ANR	3203733	Symbol	server -> freetype_library		3203631						
ANR	3203734	Symbol	server -> mem		3203631						
ANR	3203735	Symbol	* serv		3203631						
ANR	3203736	Symbol	& server -> bitmap_glyph -> root		3203631						
ANR	3203737	Symbol	& server -> outline_glyph -> root		3203631						
ANR	3203738	Symbol	cmem		3203631						
