command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4950172	File	data/converged/CVE-2018-16863_ghostpdl/gp_wsync.c								
ANR	4950173	ClassDef	win32_semaphore_s	49:8:1787:1887							
ANR	4950174	DeclStmt									
ANR	4950175	Decl							HANDLE	HANDLE	handle
ANR	4950176	DeclStmt									
ANR	4950177	Decl							win32_semaphore_s	win32_semaphore_s	win32_semaphore
ANR	4950178	Function	gp_semaphore_sizeof	53:0:1890:1959							
ANR	4950179	FunctionDef	gp_semaphore_sizeof ()		4950178	0					
ANR	4950180	CompoundStatement		55:0:1921:1959	4950178	0					
ANR	4950181	ReturnStatement	return sizeof ( win32_semaphore ) ;	56:4:1927:1957	4950178	0	True				
ANR	4950182	SizeofExpression	sizeof ( win32_semaphore )		4950178	0					
ANR	4950183	Sizeof	sizeof		4950178	0					
ANR	4950184	SizeofOperand	win32_semaphore		4950178	1					
ANR	4950185	ReturnType	uint		4950178	1					
ANR	4950186	Identifier	gp_semaphore_sizeof		4950178	2					
ANR	4950187	ParameterList			4950178	3					
ANR	4950188	CFGEntryNode	ENTRY		4950178		True				
ANR	4950189	CFGExitNode	EXIT		4950178		True				
ANR	4950190	Function	gp_semaphore_open	59:0:1962:2562							
ANR	4950191	FunctionDef	gp_semaphore_open (gp_semaphore * sema)		4950190	0					
ANR	4950192	CompoundStatement		63:0:2127:2562	4950190	0					
ANR	4950193	Statement	win32_semaphore	64:4:2133:2147	4950190	0	True				
ANR	4950194	Statement	*	64:20:2149:2149	4950190	1	True				
ANR	4950195	Statement	const	64:21:2150:2154	4950190	2	True				
ANR	4950196	ExpressionStatement	winSema = ( win32_semaphore * ) sema	64:27:2156:2189	4950190	3	True				
ANR	4950197	AssignmentExpression	winSema = ( win32_semaphore * ) sema		4950190	0		=			
ANR	4950198	Identifier	winSema		4950190	0					
ANR	4950199	CastExpression	( win32_semaphore * ) sema		4950190	1					
ANR	4950200	CastTarget	win32_semaphore *		4950190	0					
ANR	4950201	Identifier	sema		4950190	1					
ANR	4950202	IfStatement	if ( winSema )		4950190	4					
ANR	4950203	Condition	winSema	66:8:2200:2206	4950190	0	True				
ANR	4950204	Identifier	winSema		4950190	0					
ANR	4950205	CompoundStatement		4:17:81:81	4950190	1					
ANR	4950206	Statement	winSema	67:8:2219:2225	4950190	0	True				
ANR	4950207	Statement	->	67:15:2226:2227	4950190	1	True				
ANR	4950208	Statement	handle	67:17:2228:2233	4950190	2	True				
ANR	4950209	Statement	=	67:24:2235:2235	4950190	3	True				
ANR	4950210	ExpressionStatement	"CreateSemaphoreExW ( NULL , 0 , max_int , NULL , 0 , 0 )"	69:12:2262:2310	4950190	4	True				
ANR	4950211	CallExpression	"CreateSemaphoreExW ( NULL , 0 , max_int , NULL , 0 , 0 )"		4950190	0					
ANR	4950212	Callee	CreateSemaphoreExW		4950190	0					
ANR	4950213	Identifier	CreateSemaphoreExW		4950190	0					
ANR	4950214	ArgumentList	NULL		4950190	1					
ANR	4950215	Argument	NULL		4950190	0					
ANR	4950216	Identifier	NULL		4950190	0					
ANR	4950217	Argument	0		4950190	1					
ANR	4950218	PrimaryExpression	0		4950190	0					
ANR	4950219	Argument	max_int		4950190	2					
ANR	4950220	Identifier	max_int		4950190	0					
ANR	4950221	Argument	NULL		4950190	3					
ANR	4950222	Identifier	NULL		4950190	0					
ANR	4950223	Argument	0		4950190	4					
ANR	4950224	PrimaryExpression	0		4950190	0					
ANR	4950225	Argument	0		4950190	5					
ANR	4950226	PrimaryExpression	0		4950190	0					
ANR	4950227	ReturnStatement	return ( winSema -> handle != NULL ? 0 : gs_note_error ( gs_error_unknownerror ) ) ;	73:8:2386:2486	4950190	5	True				
ANR	4950228	ConditionalExpression	winSema -> handle != NULL ? 0 : gs_note_error ( gs_error_unknownerror )		4950190	0					
ANR	4950229	Condition	winSema -> handle != NULL		4950190	0					
ANR	4950230	EqualityExpression	winSema -> handle != NULL		4950190	0		!=			
ANR	4950231	PtrMemberAccess	winSema -> handle		4950190	0					
ANR	4950232	Identifier	winSema		4950190	0					
ANR	4950233	Identifier	handle		4950190	1					
ANR	4950234	Identifier	NULL		4950190	1					
ANR	4950235	PrimaryExpression	0		4950190	1					
ANR	4950236	CallExpression	gs_note_error ( gs_error_unknownerror )		4950190	2					
ANR	4950237	Callee	gs_note_error		4950190	0					
ANR	4950238	Identifier	gs_note_error		4950190	0					
ANR	4950239	ArgumentList	gs_error_unknownerror		4950190	1					
ANR	4950240	Argument	gs_error_unknownerror		4950190	0					
ANR	4950241	Identifier	gs_error_unknownerror		4950190	0					
ANR	4950242	ElseStatement	else		4950190	0					
ANR	4950243	ReturnStatement	return 0 ;	77:8:2507:2515	4950190	0	True				
ANR	4950244	PrimaryExpression	0		4950190	0					
ANR	4950245	ReturnType	int		4950190	1					
ANR	4950246	Identifier	gp_semaphore_open		4950190	2					
ANR	4950247	ParameterList	gp_semaphore * sema		4950190	3					
ANR	4950248	Parameter	gp_semaphore * sema	61:18:2077:2095	4950190	0	True				
ANR	4950249	ParameterType	gp_semaphore *		4950190	0					
ANR	4950250	Identifier	sema		4950190	1					
ANR	4950251	CFGEntryNode	ENTRY		4950190		True				
ANR	4950252	CFGExitNode	EXIT		4950190		True				
ANR	4950253	Symbol	max_int		4950190						
ANR	4950254	Symbol	gs_note_error		4950190						
ANR	4950255	Symbol	sema		4950190						
ANR	4950256	Symbol	NULL		4950190						
ANR	4950257	Symbol	winSema		4950190						
ANR	4950258	Symbol	winSema -> handle		4950190						
ANR	4950259	Symbol	* winSema		4950190						
ANR	4950260	Symbol	gs_error_unknownerror		4950190						
ANR	4950261	Function	gp_semaphore_close	80:0:2565:2834							
ANR	4950262	FunctionDef	gp_semaphore_close (gp_semaphore * sema)		4950261	0					
ANR	4950263	CompoundStatement		84:0:2656:2834	4950261	0					
ANR	4950264	Statement	win32_semaphore	85:4:2662:2676	4950261	0	True				
ANR	4950265	Statement	*	85:20:2678:2678	4950261	1	True				
ANR	4950266	Statement	const	85:21:2679:2683	4950261	2	True				
ANR	4950267	ExpressionStatement	winSema = ( win32_semaphore * ) sema	85:27:2685:2718	4950261	3	True				
ANR	4950268	AssignmentExpression	winSema = ( win32_semaphore * ) sema		4950261	0		=			
ANR	4950269	Identifier	winSema		4950261	0					
ANR	4950270	CastExpression	( win32_semaphore * ) sema		4950261	1					
ANR	4950271	CastTarget	win32_semaphore *		4950261	0					
ANR	4950272	Identifier	sema		4950261	1					
ANR	4950273	IfStatement	if ( winSema -> handle != NULL )		4950261	4					
ANR	4950274	Condition	winSema -> handle != NULL	87:8:2729:2751	4950261	0	True				
ANR	4950275	EqualityExpression	winSema -> handle != NULL		4950261	0		!=			
ANR	4950276	PtrMemberAccess	winSema -> handle		4950261	0					
ANR	4950277	Identifier	winSema		4950261	0					
ANR	4950278	Identifier	handle		4950261	1					
ANR	4950279	Identifier	NULL		4950261	1					
ANR	4950280	ExpressionStatement	CloseHandle ( winSema -> handle )	88:8:2762:2790	4950261	1	True				
ANR	4950281	CallExpression	CloseHandle ( winSema -> handle )		4950261	0					
ANR	4950282	Callee	CloseHandle		4950261	0					
ANR	4950283	Identifier	CloseHandle		4950261	0					
ANR	4950284	ArgumentList	winSema -> handle		4950261	1					
ANR	4950285	Argument	winSema -> handle		4950261	0					
ANR	4950286	PtrMemberAccess	winSema -> handle		4950261	0					
ANR	4950287	Identifier	winSema		4950261	0					
ANR	4950288	Identifier	handle		4950261	1					
ANR	4950289	ExpressionStatement	winSema -> handle = NULL	89:4:2796:2818	4950261	5	True				
ANR	4950290	AssignmentExpression	winSema -> handle = NULL		4950261	0		=			
ANR	4950291	PtrMemberAccess	winSema -> handle		4950261	0					
ANR	4950292	Identifier	winSema		4950261	0					
ANR	4950293	Identifier	handle		4950261	1					
ANR	4950294	Identifier	NULL		4950261	1					
ANR	4950295	ReturnStatement	return 0 ;	90:4:2824:2832	4950261	6	True				
ANR	4950296	PrimaryExpression	0		4950261	0					
ANR	4950297	ReturnType	int		4950261	1					
ANR	4950298	Identifier	gp_semaphore_close		4950261	2					
ANR	4950299	ParameterList	gp_semaphore * sema		4950261	3					
ANR	4950300	Parameter	gp_semaphore * sema	82:19:2608:2626	4950261	0	True				
ANR	4950301	ParameterType	gp_semaphore *		4950261	0					
ANR	4950302	Identifier	sema		4950261	1					
ANR	4950303	CFGEntryNode	ENTRY		4950261		True				
ANR	4950304	CFGExitNode	EXIT		4950261		True				
ANR	4950305	Symbol	sema		4950261						
ANR	4950306	Symbol	NULL		4950261						
ANR	4950307	Symbol	winSema		4950261						
ANR	4950308	Symbol	winSema -> handle		4950261						
ANR	4950309	Symbol	* winSema		4950261						
ANR	4950310	Function	gp_semaphore_wait	93:0:2837:3244							
ANR	4950311	FunctionDef	gp_semaphore_wait (gp_semaphore * sema)		4950310	0					
ANR	4950312	CompoundStatement		97:0:2956:3244	4950310	0					
ANR	4950313	Statement	win32_semaphore	98:4:2962:2976	4950310	0	True				
ANR	4950314	Statement	*	98:20:2978:2978	4950310	1	True				
ANR	4950315	Statement	const	98:21:2979:2983	4950310	2	True				
ANR	4950316	ExpressionStatement	winSema = ( win32_semaphore * ) sema	98:27:2985:3018	4950310	3	True				
ANR	4950317	AssignmentExpression	winSema = ( win32_semaphore * ) sema		4950310	0		=			
ANR	4950318	Identifier	winSema		4950310	0					
ANR	4950319	CastExpression	( win32_semaphore * ) sema		4950310	1					
ANR	4950320	CastTarget	win32_semaphore *		4950310	0					
ANR	4950321	Identifier	sema		4950310	1					
ANR	4950322	Statement	return	100:4:3025:3030	4950310	4	True				
ANR	4950323	Statement	(	101:8:3040:3040	4950310	5	True				
ANR	4950324	Statement	WaitForSingleObjectEx	103:8:3063:3083	4950310	6	True				
ANR	4950325	Statement	(	103:29:3084:3084	4950310	7	True				
ANR	4950326	Statement	winSema	103:30:3085:3091	4950310	8	True				
ANR	4950327	Statement	->	103:37:3092:3093	4950310	9	True				
ANR	4950328	Statement	handle	103:39:3094:3099	4950310	10	True				
ANR	4950329	Statement	","	103:45:3100:3100	4950310	11	True				
ANR	4950330	Statement	INFINITE	103:47:3102:3109	4950310	12	True				
ANR	4950331	Statement	","	103:55:3110:3110	4950310	13	True				
ANR	4950332	Statement	FALSE	103:57:3112:3116	4950310	14	True				
ANR	4950333	Statement	)	103:62:3117:3117	4950310	15	True				
ANR	4950334	Statement	==	107:10:3197:3198	4950310	16	True				
ANR	4950335	Statement	WAIT_OBJECT_0	107:13:3200:3212	4950310	17	True				
ANR	4950336	Statement	?	107:27:3214:3214	4950310	18	True				
ANR	4950337	Label	0 :	107:29:3216:3218	4950310	19	True				
ANR	4950338	Statement	gs_error_unknownerror	107:33:3220:3240	4950310	20	True				
ANR	4950339	Statement	)	107:54:3241:3241	4950310	21	True				
ANR	4950340	ExpressionStatement		107:55:3242:3242	4950310	22	True				
ANR	4950341	ReturnType	int		4950310	1					
ANR	4950342	Identifier	gp_semaphore_wait		4950310	2					
ANR	4950343	ParameterList	gp_semaphore * sema		4950310	3					
ANR	4950344	Parameter	gp_semaphore * sema	95:18:2908:2926	4950310	0	True				
ANR	4950345	ParameterType	gp_semaphore *		4950310	0					
ANR	4950346	Identifier	sema		4950310	1					
ANR	4950347	CFGEntryNode	ENTRY		4950310		True				
ANR	4950348	CFGExitNode	EXIT		4950310		True				
ANR	4950349	Symbol	sema		4950310						
ANR	4950350	Symbol	winSema		4950310						
ANR	4950351	Function	gp_semaphore_signal	110:0:3247:3537							
ANR	4950352	FunctionDef	gp_semaphore_signal (gp_semaphore * sema)		4950351	0					
ANR	4950353	CompoundStatement		114:0:3370:3537	4950351	0					
ANR	4950354	Statement	win32_semaphore	115:4:3376:3390	4950351	0	True				
ANR	4950355	Statement	*	115:20:3392:3392	4950351	1	True				
ANR	4950356	Statement	const	115:21:3393:3397	4950351	2	True				
ANR	4950357	ExpressionStatement	winSema = ( win32_semaphore * ) sema	115:27:3399:3432	4950351	3	True				
ANR	4950358	AssignmentExpression	winSema = ( win32_semaphore * ) sema		4950351	0		=			
ANR	4950359	Identifier	winSema		4950351	0					
ANR	4950360	CastExpression	( win32_semaphore * ) sema		4950351	1					
ANR	4950361	CastTarget	win32_semaphore *		4950351	0					
ANR	4950362	Identifier	sema		4950351	1					
ANR	4950363	ReturnStatement	"return ( ReleaseSemaphore ( winSema -> handle , 1 , NULL ) ? 0 : gs_error_unknownerror ) ;"	117:4:3439:3535	4950351	4	True				
ANR	4950364	ConditionalExpression	"ReleaseSemaphore ( winSema -> handle , 1 , NULL ) ? 0 : gs_error_unknownerror"		4950351	0					
ANR	4950365	Condition	"ReleaseSemaphore ( winSema -> handle , 1 , NULL )"		4950351	0					
ANR	4950366	CallExpression	"ReleaseSemaphore ( winSema -> handle , 1 , NULL )"		4950351	0					
ANR	4950367	Callee	ReleaseSemaphore		4950351	0					
ANR	4950368	Identifier	ReleaseSemaphore		4950351	0					
ANR	4950369	ArgumentList	winSema -> handle		4950351	1					
ANR	4950370	Argument	winSema -> handle		4950351	0					
ANR	4950371	PtrMemberAccess	winSema -> handle		4950351	0					
ANR	4950372	Identifier	winSema		4950351	0					
ANR	4950373	Identifier	handle		4950351	1					
ANR	4950374	Argument	1		4950351	1					
ANR	4950375	PrimaryExpression	1		4950351	0					
ANR	4950376	Argument	NULL		4950351	2					
ANR	4950377	Identifier	NULL		4950351	0					
ANR	4950378	PrimaryExpression	0		4950351	1					
ANR	4950379	Identifier	gs_error_unknownerror		4950351	2					
ANR	4950380	ReturnType	int		4950351	1					
ANR	4950381	Identifier	gp_semaphore_signal		4950351	2					
ANR	4950382	ParameterList	gp_semaphore * sema		4950351	3					
ANR	4950383	Parameter	gp_semaphore * sema	112:20:3322:3340	4950351	0	True				
ANR	4950384	ParameterType	gp_semaphore *		4950351	0					
ANR	4950385	Identifier	sema		4950351	1					
ANR	4950386	CFGEntryNode	ENTRY		4950351		True				
ANR	4950387	CFGExitNode	EXIT		4950351		True				
ANR	4950388	Symbol	sema		4950351						
ANR	4950389	Symbol	NULL		4950351						
ANR	4950390	Symbol	winSema		4950351						
ANR	4950391	Symbol	winSema -> handle		4950351						
ANR	4950392	Symbol	* winSema		4950351						
ANR	4950393	Symbol	ReleaseSemaphore		4950351						
ANR	4950394	Symbol	gs_error_unknownerror		4950351						
ANR	4950395	ClassDef	win32_monitor_s	124:8:3594:3689							
ANR	4950396	DeclStmt									
ANR	4950397	Decl							CRITICAL_SECTION	CRITICAL_SECTION	lock
ANR	4950398	DeclStmt									
ANR	4950399	Decl							win32_monitor_s	win32_monitor_s	win32_monitor
ANR	4950400	Function	gp_monitor_sizeof	128:0:3692:3757							
ANR	4950401	FunctionDef	gp_monitor_sizeof ()		4950400	0					
ANR	4950402	CompoundStatement		130:0:3721:3757	4950400	0					
ANR	4950403	ReturnStatement	return sizeof ( win32_monitor ) ;	131:4:3727:3755	4950400	0	True				
ANR	4950404	SizeofExpression	sizeof ( win32_monitor )		4950400	0					
ANR	4950405	Sizeof	sizeof		4950400	0					
ANR	4950406	SizeofOperand	win32_monitor		4950400	1					
ANR	4950407	ReturnType	uint		4950400	1					
ANR	4950408	Identifier	gp_monitor_sizeof		4950400	2					
ANR	4950409	ParameterList			4950400	3					
ANR	4950410	CFGEntryNode	ENTRY		4950400		True				
ANR	4950411	CFGExitNode	EXIT		4950400		True				
ANR	4950412	Function	gp_monitor_open	134:0:3760:4267							
ANR	4950413	FunctionDef	gp_monitor_open (gp_monitor * mon)		4950412	0					
ANR	4950414	CompoundStatement		138:0:3916:4267	4950412	0					
ANR	4950415	Statement	win32_monitor	139:4:3922:3934	4950412	0	True				
ANR	4950416	Statement	*	139:18:3936:3936	4950412	1	True				
ANR	4950417	Statement	const	139:19:3937:3941	4950412	2	True				
ANR	4950418	ExpressionStatement	winMon = ( win32_monitor * ) mon	139:25:3943:3972	4950412	3	True				
ANR	4950419	AssignmentExpression	winMon = ( win32_monitor * ) mon		4950412	0		=			
ANR	4950420	Identifier	winMon		4950412	0					
ANR	4950421	CastExpression	( win32_monitor * ) mon		4950412	1					
ANR	4950422	CastTarget	win32_monitor *		4950412	0					
ANR	4950423	Identifier	mon		4950412	1					
ANR	4950424	IfStatement	if ( mon )		4950412	4					
ANR	4950425	Condition	mon	141:8:3983:3985	4950412	0	True				
ANR	4950426	Identifier	mon		4950412	0					
ANR	4950427	CompoundStatement		4:13:71:71	4950412	1					
ANR	4950428	ExpressionStatement	"InitializeCriticalSectionEx ( & winMon -> lock , 0 , 0 )"	143:8:4011:4059	4950412	0	True				
ANR	4950429	CallExpression	"InitializeCriticalSectionEx ( & winMon -> lock , 0 , 0 )"		4950412	0					
ANR	4950430	Callee	InitializeCriticalSectionEx		4950412	0					
ANR	4950431	Identifier	InitializeCriticalSectionEx		4950412	0					
ANR	4950432	ArgumentList	& winMon -> lock		4950412	1					
ANR	4950433	Argument	& winMon -> lock		4950412	0					
ANR	4950434	UnaryOperationExpression	& winMon -> lock		4950412	0					
ANR	4950435	UnaryOperator	&		4950412	0					
ANR	4950436	PtrMemberAccess	winMon -> lock		4950412	1					
ANR	4950437	Identifier	winMon		4950412	0					
ANR	4950438	Identifier	lock		4950412	1					
ANR	4950439	Argument	0		4950412	1					
ANR	4950440	PrimaryExpression	0		4950412	0					
ANR	4950441	Argument	0		4950412	2					
ANR	4950442	PrimaryExpression	0		4950412	0					
ANR	4950443	ReturnStatement	return 0 ;	147:8:4180:4188	4950412	1	True				
ANR	4950444	PrimaryExpression	0		4950412	0					
ANR	4950445	ElseStatement	else		4950412	0					
ANR	4950446	ReturnStatement	return 1 ;	149:8:4209:4217	4950412	0	True				
ANR	4950447	PrimaryExpression	1		4950412	0					
ANR	4950448	ReturnType	int		4950412	1					
ANR	4950449	Identifier	gp_monitor_open		4950412	2					
ANR	4950450	ParameterList	gp_monitor * mon		4950412	3					
ANR	4950451	Parameter	gp_monitor * mon	136:16:3871:3886	4950412	0	True				
ANR	4950452	ParameterType	gp_monitor *		4950412	0					
ANR	4950453	Identifier	mon		4950412	1					
ANR	4950454	CFGEntryNode	ENTRY		4950412		True				
ANR	4950455	CFGExitNode	EXIT		4950412		True				
ANR	4950456	Symbol	winMon		4950412						
ANR	4950457	Symbol	mon		4950412						
ANR	4950458	Symbol	& winMon -> lock		4950412						
ANR	4950459	Function	gp_monitor_close	152:0:4270:4488							
ANR	4950460	FunctionDef	gp_monitor_close (gp_monitor * mon)		4950459	0					
ANR	4950461	CompoundStatement		156:0:4352:4488	4950459	0					
ANR	4950462	Statement	win32_monitor	157:4:4358:4370	4950459	0	True				
ANR	4950463	Statement	*	157:18:4372:4372	4950459	1	True				
ANR	4950464	Statement	const	157:19:4373:4377	4950459	2	True				
ANR	4950465	ExpressionStatement	winMon = ( win32_monitor * ) mon	157:25:4379:4408	4950459	3	True				
ANR	4950466	AssignmentExpression	winMon = ( win32_monitor * ) mon		4950459	0		=			
ANR	4950467	Identifier	winMon		4950459	0					
ANR	4950468	CastExpression	( win32_monitor * ) mon		4950459	1					
ANR	4950469	CastTarget	win32_monitor *		4950459	0					
ANR	4950470	Identifier	mon		4950459	1					
ANR	4950471	ExpressionStatement	DeleteCriticalSection ( & winMon -> lock )	159:4:4415:4451	4950459	4	True				
ANR	4950472	CallExpression	DeleteCriticalSection ( & winMon -> lock )		4950459	0					
ANR	4950473	Callee	DeleteCriticalSection		4950459	0					
ANR	4950474	Identifier	DeleteCriticalSection		4950459	0					
ANR	4950475	ArgumentList	& winMon -> lock		4950459	1					
ANR	4950476	Argument	& winMon -> lock		4950459	0					
ANR	4950477	UnaryOperationExpression	& winMon -> lock		4950459	0					
ANR	4950478	UnaryOperator	&		4950459	0					
ANR	4950479	PtrMemberAccess	winMon -> lock		4950459	1					
ANR	4950480	Identifier	winMon		4950459	0					
ANR	4950481	Identifier	lock		4950459	1					
ANR	4950482	ReturnStatement	return 0 ;	160:4:4478:4486	4950459	5	True				
ANR	4950483	PrimaryExpression	0		4950459	0					
ANR	4950484	ReturnType	int		4950459	1					
ANR	4950485	Identifier	gp_monitor_close		4950459	2					
ANR	4950486	ParameterList	gp_monitor * mon		4950459	3					
ANR	4950487	Parameter	gp_monitor * mon	154:17:4309:4324	4950459	0	True				
ANR	4950488	ParameterType	gp_monitor *		4950459	0					
ANR	4950489	Identifier	mon		4950459	1					
ANR	4950490	CFGEntryNode	ENTRY		4950459		True				
ANR	4950491	CFGExitNode	EXIT		4950459		True				
ANR	4950492	Symbol	winMon		4950459						
ANR	4950493	Symbol	mon		4950459						
ANR	4950494	Symbol	& winMon -> lock		4950459						
ANR	4950495	Function	gp_monitor_enter	163:0:4491:4738							
ANR	4950496	FunctionDef	gp_monitor_enter (gp_monitor * mon)		4950495	0					
ANR	4950497	CompoundStatement		167:0:4603:4738	4950495	0					
ANR	4950498	Statement	win32_monitor	168:4:4609:4621	4950495	0	True				
ANR	4950499	Statement	*	168:18:4623:4623	4950495	1	True				
ANR	4950500	Statement	const	168:19:4624:4628	4950495	2	True				
ANR	4950501	ExpressionStatement	winMon = ( win32_monitor * ) mon	168:25:4630:4659	4950495	3	True				
ANR	4950502	AssignmentExpression	winMon = ( win32_monitor * ) mon		4950495	0		=			
ANR	4950503	Identifier	winMon		4950495	0					
ANR	4950504	CastExpression	( win32_monitor * ) mon		4950495	1					
ANR	4950505	CastTarget	win32_monitor *		4950495	0					
ANR	4950506	Identifier	mon		4950495	1					
ANR	4950507	ExpressionStatement	EnterCriticalSection ( & winMon -> lock )	170:4:4666:4701	4950495	4	True				
ANR	4950508	CallExpression	EnterCriticalSection ( & winMon -> lock )		4950495	0					
ANR	4950509	Callee	EnterCriticalSection		4950495	0					
ANR	4950510	Identifier	EnterCriticalSection		4950495	0					
ANR	4950511	ArgumentList	& winMon -> lock		4950495	1					
ANR	4950512	Argument	& winMon -> lock		4950495	0					
ANR	4950513	UnaryOperationExpression	& winMon -> lock		4950495	0					
ANR	4950514	UnaryOperator	&		4950495	0					
ANR	4950515	PtrMemberAccess	winMon -> lock		4950495	1					
ANR	4950516	Identifier	winMon		4950495	0					
ANR	4950517	Identifier	lock		4950495	1					
ANR	4950518	ReturnStatement	return 0 ;	171:4:4728:4736	4950495	5	True				
ANR	4950519	PrimaryExpression	0		4950495	0					
ANR	4950520	ReturnType	int		4950495	1					
ANR	4950521	Identifier	gp_monitor_enter		4950495	2					
ANR	4950522	ParameterList	gp_monitor * mon		4950495	3					
ANR	4950523	Parameter	gp_monitor * mon	165:17:4560:4575	4950495	0	True				
ANR	4950524	ParameterType	gp_monitor *		4950495	0					
ANR	4950525	Identifier	mon		4950495	1					
ANR	4950526	CFGEntryNode	ENTRY		4950495		True				
ANR	4950527	CFGExitNode	EXIT		4950495		True				
ANR	4950528	Symbol	winMon		4950495						
ANR	4950529	Symbol	mon		4950495						
ANR	4950530	Symbol	& winMon -> lock		4950495						
ANR	4950531	Function	gp_monitor_leave	174:0:4741:4988							
ANR	4950532	FunctionDef	gp_monitor_leave (gp_monitor * mon)		4950531	0					
ANR	4950533	CompoundStatement		178:0:4853:4988	4950531	0					
ANR	4950534	Statement	win32_monitor	179:4:4859:4871	4950531	0	True				
ANR	4950535	Statement	*	179:18:4873:4873	4950531	1	True				
ANR	4950536	Statement	const	179:19:4874:4878	4950531	2	True				
ANR	4950537	ExpressionStatement	winMon = ( win32_monitor * ) mon	179:25:4880:4909	4950531	3	True				
ANR	4950538	AssignmentExpression	winMon = ( win32_monitor * ) mon		4950531	0		=			
ANR	4950539	Identifier	winMon		4950531	0					
ANR	4950540	CastExpression	( win32_monitor * ) mon		4950531	1					
ANR	4950541	CastTarget	win32_monitor *		4950531	0					
ANR	4950542	Identifier	mon		4950531	1					
ANR	4950543	ExpressionStatement	LeaveCriticalSection ( & winMon -> lock )	181:4:4916:4951	4950531	4	True				
ANR	4950544	CallExpression	LeaveCriticalSection ( & winMon -> lock )		4950531	0					
ANR	4950545	Callee	LeaveCriticalSection		4950531	0					
ANR	4950546	Identifier	LeaveCriticalSection		4950531	0					
ANR	4950547	ArgumentList	& winMon -> lock		4950531	1					
ANR	4950548	Argument	& winMon -> lock		4950531	0					
ANR	4950549	UnaryOperationExpression	& winMon -> lock		4950531	0					
ANR	4950550	UnaryOperator	&		4950531	0					
ANR	4950551	PtrMemberAccess	winMon -> lock		4950531	1					
ANR	4950552	Identifier	winMon		4950531	0					
ANR	4950553	Identifier	lock		4950531	1					
ANR	4950554	ReturnStatement	return 0 ;	182:4:4978:4986	4950531	5	True				
ANR	4950555	PrimaryExpression	0		4950531	0					
ANR	4950556	ReturnType	int		4950531	1					
ANR	4950557	Identifier	gp_monitor_leave		4950531	2					
ANR	4950558	ParameterList	gp_monitor * mon		4950531	3					
ANR	4950559	Parameter	gp_monitor * mon	176:17:4810:4825	4950531	0	True				
ANR	4950560	ParameterType	gp_monitor *		4950531	0					
ANR	4950561	Identifier	mon		4950531	1					
ANR	4950562	CFGEntryNode	ENTRY		4950531		True				
ANR	4950563	CFGExitNode	EXIT		4950531		True				
ANR	4950564	Symbol	winMon		4950531						
ANR	4950565	Symbol	mon		4950531						
ANR	4950566	Symbol	& winMon -> lock		4950531						
ANR	4950567	ClassDef	gp_thread_creation_closure_s	187:8:5045:5232							
ANR	4950568	DeclStmt									
ANR	4950569	Decl							gp_thread_creation_callback_t	gp_thread_creation_callback_t	function
ANR	4950570	DeclStmt									
ANR	4950571	Decl							void	void *	data
ANR	4950572	DeclStmt									
ANR	4950573	Decl							gp_thread_creation_closure_s	gp_thread_creation_closure_s	gp_thread_creation_closure
ANR	4950574	Function	gp_thread_begin_wrapper	193:0:5291:5607							
ANR	4950575	FunctionDef	gp_thread_begin_wrapper (void * thread_data)		4950574	0					
ANR	4950576	CompoundStatement		197:0:5426:5607	4950574	0					
ANR	4950577	IdentifierDeclStatement	gp_thread_creation_closure closure ;	198:4:5432:5466	4950574	0	True				
ANR	4950578	IdentifierDecl	closure		4950574	0					
ANR	4950579	IdentifierDeclType	gp_thread_creation_closure		4950574	0					
ANR	4950580	Identifier	closure		4950574	1					
ANR	4950581	ExpressionStatement	closure = * ( gp_thread_creation_closure * ) thread_data	200:4:5473:5525	4950574	1	True				
ANR	4950582	AssignmentExpression	closure = * ( gp_thread_creation_closure * ) thread_data		4950574	0		=			
ANR	4950583	Identifier	closure		4950574	0					
ANR	4950584	UnaryOperationExpression	* ( gp_thread_creation_closure * ) thread_data		4950574	1					
ANR	4950585	UnaryOperator	*		4950574	0					
ANR	4950586	CastExpression	( gp_thread_creation_closure * ) thread_data		4950574	1					
ANR	4950587	CastTarget	gp_thread_creation_closure *		4950574	0					
ANR	4950588	Identifier	thread_data		4950574	1					
ANR	4950589	ExpressionStatement	free ( thread_data )	201:4:5531:5548	4950574	2	True				
ANR	4950590	CallExpression	free ( thread_data )		4950574	0					
ANR	4950591	Callee	free		4950574	0					
ANR	4950592	Identifier	free		4950574	0					
ANR	4950593	ArgumentList	thread_data		4950574	1					
ANR	4950594	Argument	thread_data		4950574	0					
ANR	4950595	Identifier	thread_data		4950574	0					
ANR	4950596	ExpressionStatement	( * closure . function ) ( closure . data )	202:4:5554:5587	4950574	3	True				
ANR	4950597	CallExpression	( * closure . function ) ( closure . data )		4950574	0					
ANR	4950598	Callee	* closure . function		4950574	0					
ANR	4950599	UnaryOperationExpression	* closure . function		4950574	0					
ANR	4950600	UnaryOperator	*		4950574	0					
ANR	4950601	MemberAccess	closure . function		4950574	1					
ANR	4950602	Identifier	closure		4950574	0					
ANR	4950603	Identifier	function		4950574	1					
ANR	4950604	ArgumentList	closure . data		4950574	1					
ANR	4950605	Argument	closure . data		4950574	0					
ANR	4950606	MemberAccess	closure . data		4950574	0					
ANR	4950607	Identifier	closure		4950574	0					
ANR	4950608	Identifier	data		4950574	1					
ANR	4950609	ExpressionStatement	_endthread ( )	203:4:5593:5605	4950574	4	True				
ANR	4950610	CallExpression	_endthread ( )		4950574	0					
ANR	4950611	Callee	_endthread		4950574	0					
ANR	4950612	Identifier	_endthread		4950574	0					
ANR	4950613	ArgumentList			4950574	1					
ANR	4950614	ReturnType	static void		4950574	1					
ANR	4950615	Identifier	gp_thread_begin_wrapper		4950574	2					
ANR	4950616	ParameterList	void * thread_data		4950574	3					
ANR	4950617	Parameter	void * thread_data	195:24:5352:5368	4950574	0	True				
ANR	4950618	ParameterType	void *		4950574	0					
ANR	4950619	Identifier	thread_data		4950574	1					
ANR	4950620	CFGEntryNode	ENTRY		4950574		True				
ANR	4950621	CFGExitNode	EXIT		4950574		True				
ANR	4950622	Symbol	* ( gp_thread_creation_closure * ) thread_data		4950574						
ANR	4950623	Symbol	closure . data		4950574						
ANR	4950624	Symbol	closure . function		4950574						
ANR	4950625	Symbol	* thread_data		4950574						
ANR	4950626	Symbol	closure		4950574						
ANR	4950627	Symbol	thread_data		4950574						
ANR	4950628	Function	gp_create_thread	207:0:5654:6868							
ANR	4950629	FunctionDef	"gp_create_thread (gp_thread_creation_callback_t function , void * data)"		4950628	0					
ANR	4950630	CompoundStatement		212:0:5850:6868	4950628	0					
ANR	4950631	IdentifierDeclStatement	gp_thread_creation_closure * closure = ( gp_thread_creation_closure * ) malloc ( sizeof ( * closure ) ) ;	214:4:5923:6023	4950628	0	True				
ANR	4950632	IdentifierDecl	* closure = ( gp_thread_creation_closure * ) malloc ( sizeof ( * closure ) )		4950628	0					
ANR	4950633	IdentifierDeclType	gp_thread_creation_closure *		4950628	0					
ANR	4950634	Identifier	closure		4950628	1					
ANR	4950635	AssignmentExpression	* closure = ( gp_thread_creation_closure * ) malloc ( sizeof ( * closure ) )		4950628	2		=			
ANR	4950636	Identifier	closure		4950628	0					
ANR	4950637	CastExpression	( gp_thread_creation_closure * ) malloc ( sizeof ( * closure ) )		4950628	1					
ANR	4950638	CastTarget	gp_thread_creation_closure *		4950628	0					
ANR	4950639	CallExpression	malloc ( sizeof ( * closure ) )		4950628	1					
ANR	4950640	Callee	malloc		4950628	0					
ANR	4950641	Identifier	malloc		4950628	0					
ANR	4950642	ArgumentList	sizeof ( * closure )		4950628	1					
ANR	4950643	Argument	sizeof ( * closure )		4950628	0					
ANR	4950644	SizeofExpression	sizeof ( * closure )		4950628	0					
ANR	4950645	Sizeof	sizeof		4950628	0					
ANR	4950646	UnaryOperationExpression	* closure		4950628	1					
ANR	4950647	UnaryOperator	*		4950628	0					
ANR	4950648	Identifier	closure		4950628	1					
ANR	4950649	IfStatement	if ( ! closure )		4950628	1					
ANR	4950650	Condition	! closure	217:8:6034:6041	4950628	0	True				
ANR	4950651	UnaryOperationExpression	! closure		4950628	0					
ANR	4950652	UnaryOperator	!		4950628	0					
ANR	4950653	Identifier	closure		4950628	1					
ANR	4950654	ExpressionStatement	return_error ( gs_error_VMerror )	218:8:6052:6082	4950628	1	True				
ANR	4950655	CallExpression	return_error ( gs_error_VMerror )		4950628	0					
ANR	4950656	Callee	return_error		4950628	0					
ANR	4950657	Identifier	return_error		4950628	0					
ANR	4950658	ArgumentList	gs_error_VMerror		4950628	1					
ANR	4950659	Argument	gs_error_VMerror		4950628	0					
ANR	4950660	Identifier	gs_error_VMerror		4950628	0					
ANR	4950661	ExpressionStatement	closure -> function = function	219:4:6088:6116	4950628	2	True				
ANR	4950662	AssignmentExpression	closure -> function = function		4950628	0		=			
ANR	4950663	PtrMemberAccess	closure -> function		4950628	0					
ANR	4950664	Identifier	closure		4950628	0					
ANR	4950665	Identifier	function		4950628	1					
ANR	4950666	Identifier	function		4950628	1					
ANR	4950667	ExpressionStatement	closure -> data = data	220:4:6122:6142	4950628	3	True				
ANR	4950668	AssignmentExpression	closure -> data = data		4950628	0		=			
ANR	4950669	PtrMemberAccess	closure -> data		4950628	0					
ANR	4950670	Identifier	closure		4950628	0					
ANR	4950671	Identifier	data		4950628	1					
ANR	4950672	Identifier	data		4950628	1					
ANR	4950673	IfStatement	"if ( ~BEGIN_THREAD ( gp_thread_begin_wrapper , 128 * 1024 , closure ) != 0 )"		4950628	4					
ANR	4950674	Condition	"~BEGIN_THREAD ( gp_thread_begin_wrapper , 128 * 1024 , closure ) != 0"	233:8:6710:6771	4950628	0	True				
ANR	4950675	EqualityExpression	"~BEGIN_THREAD ( gp_thread_begin_wrapper , 128 * 1024 , closure ) != 0"		4950628	0		!=			
ANR	4950676	CallExpression	"~BEGIN_THREAD ( gp_thread_begin_wrapper , 128 * 1024 , closure )"		4950628	0					
ANR	4950677	Callee	~BEGIN_THREAD		4950628	0					
ANR	4950678	Identifier	~BEGIN_THREAD		4950628	0					
ANR	4950679	ArgumentList	gp_thread_begin_wrapper		4950628	1					
ANR	4950680	Argument	gp_thread_begin_wrapper		4950628	0					
ANR	4950681	Identifier	gp_thread_begin_wrapper		4950628	0					
ANR	4950682	Argument	128 * 1024		4950628	1					
ANR	4950683	MultiplicativeExpression	128 * 1024		4950628	0		*			
ANR	4950684	PrimaryExpression	128		4950628	0					
ANR	4950685	PrimaryExpression	1024		4950628	1					
ANR	4950686	Argument	closure		4950628	2					
ANR	4950687	Identifier	closure		4950628	0					
ANR	4950688	PrimaryExpression	0		4950628	1					
ANR	4950689	CompoundStatement		23:4:927:927	4950628	1					
ANR	4950690	ExpressionStatement	free ( closure )	235:8:6788:6801	4950628	0	True				
ANR	4950691	CallExpression	free ( closure )		4950628	0					
ANR	4950692	Callee	free		4950628	0					
ANR	4950693	Identifier	free		4950628	0					
ANR	4950694	ArgumentList	closure		4950628	1					
ANR	4950695	Argument	closure		4950628	0					
ANR	4950696	Identifier	closure		4950628	0					
ANR	4950697	ReturnStatement	return 0 ;	236:8:6811:6819	4950628	1	True				
ANR	4950698	PrimaryExpression	0		4950628	0					
ANR	4950699	ExpressionStatement	return_error ( gs_error_unknownerror )	238:4:6831:6866	4950628	5	True				
ANR	4950700	CallExpression	return_error ( gs_error_unknownerror )		4950628	0					
ANR	4950701	Callee	return_error		4950628	0					
ANR	4950702	Identifier	return_error		4950628	0					
ANR	4950703	ArgumentList	gs_error_unknownerror		4950628	1					
ANR	4950704	Argument	gs_error_unknownerror		4950628	0					
ANR	4950705	Identifier	gs_error_unknownerror		4950628	0					
ANR	4950706	ReturnType	int		4950628	1					
ANR	4950707	Identifier	gp_create_thread		4950628	2					
ANR	4950708	ParameterList	"gp_thread_creation_callback_t function , void * data"		4950628	3					
ANR	4950709	Parameter	gp_thread_creation_callback_t function	209:17:5718:5755	4950628	0	True				
ANR	4950710	ParameterType	gp_thread_creation_callback_t		4950628	0					
ANR	4950711	Identifier	function		4950628	1					
ANR	4950712	Parameter	void * data	210:17:5799:5808	4950628	1	True				
ANR	4950713	ParameterType	void *		4950628	0					
ANR	4950714	Identifier	data		4950628	1					
ANR	4950715	CFGEntryNode	ENTRY		4950628		True				
ANR	4950716	CFGExitNode	EXIT		4950628		True				
ANR	4950717	Symbol	malloc		4950628						
ANR	4950718	Symbol	gs_error_VMerror		4950628						
ANR	4950719	Symbol	~BEGIN_THREAD		4950628						
ANR	4950720	Symbol	gp_thread_begin_wrapper		4950628						
ANR	4950721	Symbol	* closure		4950628						
ANR	4950722	Symbol	data		4950628						
ANR	4950723	Symbol	function		4950628						
ANR	4950724	Symbol	closure -> function		4950628						
ANR	4950725	Symbol	closure -> data		4950628						
ANR	4950726	Symbol	closure		4950628						
ANR	4950727	Symbol	gs_error_unknownerror		4950628						
ANR	4950728	Function	gp_thread_start_wrapper	242:0:6925:7192							
ANR	4950729	FunctionDef	gp_thread_start_wrapper (void * thread_data)		4950728	0					
ANR	4950730	CompoundStatement		244:0:6994:7192	4950728	0					
ANR	4950731	IdentifierDeclStatement	gp_thread_creation_closure closure ;	245:4:7000:7034	4950728	0	True				
ANR	4950732	IdentifierDecl	closure		4950728	0					
ANR	4950733	IdentifierDeclType	gp_thread_creation_closure		4950728	0					
ANR	4950734	Identifier	closure		4950728	1					
ANR	4950735	ExpressionStatement	closure = * ( gp_thread_creation_closure * ) thread_data	247:4:7041:7093	4950728	1	True				
ANR	4950736	AssignmentExpression	closure = * ( gp_thread_creation_closure * ) thread_data		4950728	0		=			
ANR	4950737	Identifier	closure		4950728	0					
ANR	4950738	UnaryOperationExpression	* ( gp_thread_creation_closure * ) thread_data		4950728	1					
ANR	4950739	UnaryOperator	*		4950728	0					
ANR	4950740	CastExpression	( gp_thread_creation_closure * ) thread_data		4950728	1					
ANR	4950741	CastTarget	gp_thread_creation_closure *		4950728	0					
ANR	4950742	Identifier	thread_data		4950728	1					
ANR	4950743	ExpressionStatement	free ( thread_data )	248:4:7099:7116	4950728	2	True				
ANR	4950744	CallExpression	free ( thread_data )		4950728	0					
ANR	4950745	Callee	free		4950728	0					
ANR	4950746	Identifier	free		4950728	0					
ANR	4950747	ArgumentList	thread_data		4950728	1					
ANR	4950748	Argument	thread_data		4950728	0					
ANR	4950749	Identifier	thread_data		4950728	0					
ANR	4950750	ExpressionStatement	( * closure . function ) ( closure . data )	249:4:7122:7155	4950728	3	True				
ANR	4950751	CallExpression	( * closure . function ) ( closure . data )		4950728	0					
ANR	4950752	Callee	* closure . function		4950728	0					
ANR	4950753	UnaryOperationExpression	* closure . function		4950728	0					
ANR	4950754	UnaryOperator	*		4950728	0					
ANR	4950755	MemberAccess	closure . function		4950728	1					
ANR	4950756	Identifier	closure		4950728	0					
ANR	4950757	Identifier	function		4950728	1					
ANR	4950758	ArgumentList	closure . data		4950728	1					
ANR	4950759	Argument	closure . data		4950728	0					
ANR	4950760	MemberAccess	closure . data		4950728	0					
ANR	4950761	Identifier	closure		4950728	0					
ANR	4950762	Identifier	data		4950728	1					
ANR	4950763	ExpressionStatement	_endthreadex ( 0 )	250:4:7161:7176	4950728	4	True				
ANR	4950764	CallExpression	_endthreadex ( 0 )		4950728	0					
ANR	4950765	Callee	_endthreadex		4950728	0					
ANR	4950766	Identifier	_endthreadex		4950728	0					
ANR	4950767	ArgumentList	0		4950728	1					
ANR	4950768	Argument	0		4950728	0					
ANR	4950769	PrimaryExpression	0		4950728	0					
ANR	4950770	ReturnStatement	return 0 ;	251:4:7182:7190	4950728	5	True				
ANR	4950771	PrimaryExpression	0		4950728	0					
ANR	4950772	ReturnType	static unsigned __stdcall		4950728	1					
ANR	4950773	Identifier	gp_thread_start_wrapper		4950728	2					
ANR	4950774	ParameterList	void * thread_data		4950728	3					
ANR	4950775	Parameter	void * thread_data	243:24:6975:6991	4950728	0	True				
ANR	4950776	ParameterType	void *		4950728	0					
ANR	4950777	Identifier	thread_data		4950728	1					
ANR	4950778	CFGEntryNode	ENTRY		4950728		True				
ANR	4950779	CFGExitNode	EXIT		4950728		True				
ANR	4950780	Symbol	* ( gp_thread_creation_closure * ) thread_data		4950728						
ANR	4950781	Symbol	closure . data		4950728						
ANR	4950782	Symbol	closure . function		4950728						
ANR	4950783	Symbol	* thread_data		4950728						
ANR	4950784	Symbol	closure		4950728						
ANR	4950785	Symbol	thread_data		4950728						
ANR	4950786	Function	gp_thread_start	254:0:7195:8096							
ANR	4950787	FunctionDef	"gp_thread_start (gp_thread_creation_callback_t function , void * data , gp_thread_id * thread)"		4950786	0					
ANR	4950788	CompoundStatement		256:0:7309:8096	4950786	0					
ANR	4950789	ExpressionStatement	* thread = ( gp_thread_id ) 1	258:4:7358:7383	4950786	0	True				
ANR	4950790	AssignmentExpression	* thread = ( gp_thread_id ) 1		4950786	0		=			
ANR	4950791	UnaryOperationExpression	* thread		4950786	0					
ANR	4950792	UnaryOperator	*		4950786	0					
ANR	4950793	Identifier	thread		4950786	1					
ANR	4950794	CastExpression	( gp_thread_id ) 1		4950786	1					
ANR	4950795	CastTarget	gp_thread_id		4950786	0					
ANR	4950796	PrimaryExpression	1		4950786	1					
ANR	4950797	ReturnStatement	"return gp_create_thread ( function , data ) ;"	259:4:7389:7428	4950786	1	True				
ANR	4950798	CallExpression	"gp_create_thread ( function , data )"		4950786	0					
ANR	4950799	Callee	gp_create_thread		4950786	0					
ANR	4950800	Identifier	gp_create_thread		4950786	0					
ANR	4950801	ArgumentList	function		4950786	1					
ANR	4950802	Argument	function		4950786	0					
ANR	4950803	Identifier	function		4950786	0					
ANR	4950804	Argument	data		4950786	1					
ANR	4950805	Identifier	data		4950786	0					
ANR	4950806	ReturnType	int		4950786	1					
ANR	4950807	Identifier	gp_thread_start		4950786	2					
ANR	4950808	ParameterList	"gp_thread_creation_callback_t function , void * data , gp_thread_id * thread"		4950786	3					
ANR	4950809	Parameter	gp_thread_creation_callback_t function	254:20:7215:7252	4950786	0	True				
ANR	4950810	ParameterType	gp_thread_creation_callback_t		4950786	0					
ANR	4950811	Identifier	function		4950786	1					
ANR	4950812	Parameter	void * data	255:20:7275:7284	4950786	1	True				
ANR	4950813	ParameterType	void *		4950786	0					
ANR	4950814	Identifier	data		4950786	1					
ANR	4950815	Parameter	gp_thread_id * thread	255:32:7287:7306	4950786	2	True				
ANR	4950816	ParameterType	gp_thread_id *		4950786	0					
ANR	4950817	Identifier	thread		4950786	1					
ANR	4950818	CFGEntryNode	ENTRY		4950786		True				
ANR	4950819	CFGExitNode	EXIT		4950786		True				
ANR	4950820	Symbol	data		4950786						
ANR	4950821	Symbol	function		4950786						
ANR	4950822	Symbol	* thread		4950786						
ANR	4950823	Symbol	thread		4950786						
ANR	4950824	Symbol	gp_create_thread		4950786						
ANR	4950825	Function	gp_thread_finish	284:0:8099:8405							
ANR	4950826	FunctionDef	gp_thread_finish (gp_thread_id thread)		4950825	0					
ANR	4950827	CompoundStatement		285:0:8142:8405	4950825	0					
ANR	4950828	IfStatement	if ( thread == NULL )		4950825	0					
ANR	4950829	Condition	thread == NULL	287:8:8196:8209	4950825	0	True				
ANR	4950830	EqualityExpression	thread == NULL		4950825	0		==			
ANR	4950831	Identifier	thread		4950825	0					
ANR	4950832	Identifier	NULL		4950825	1					
ANR	4950833	ReturnStatement	return ;	288:8:8220:8226	4950825	1	True				
ANR	4950834	ExpressionStatement	"WaitForSingleObjectEx ( ( HANDLE ) thread , INFINITE , FALSE )"	290:4:8245:8299	4950825	1	True				
ANR	4950835	CallExpression	"WaitForSingleObjectEx ( ( HANDLE ) thread , INFINITE , FALSE )"		4950825	0					
ANR	4950836	Callee	WaitForSingleObjectEx		4950825	0					
ANR	4950837	Identifier	WaitForSingleObjectEx		4950825	0					
ANR	4950838	ArgumentList	( HANDLE ) thread		4950825	1					
ANR	4950839	Argument	( HANDLE ) thread		4950825	0					
ANR	4950840	CastExpression	( HANDLE ) thread		4950825	0					
ANR	4950841	CastTarget	HANDLE		4950825	0					
ANR	4950842	Identifier	thread		4950825	1					
ANR	4950843	Argument	INFINITE		4950825	1					
ANR	4950844	Identifier	INFINITE		4950825	0					
ANR	4950845	Argument	FALSE		4950825	2					
ANR	4950846	Identifier	FALSE		4950825	0					
ANR	4950847	ExpressionStatement	CloseHandle ( ( HANDLE ) thread )	294:4:8369:8396	4950825	2	True				
ANR	4950848	CallExpression	CloseHandle ( ( HANDLE ) thread )		4950825	0					
ANR	4950849	Callee	CloseHandle		4950825	0					
ANR	4950850	Identifier	CloseHandle		4950825	0					
ANR	4950851	ArgumentList	( HANDLE ) thread		4950825	1					
ANR	4950852	Argument	( HANDLE ) thread		4950825	0					
ANR	4950853	CastExpression	( HANDLE ) thread		4950825	0					
ANR	4950854	CastTarget	HANDLE		4950825	0					
ANR	4950855	Identifier	thread		4950825	1					
ANR	4950856	ReturnType	void		4950825	1					
ANR	4950857	Identifier	gp_thread_finish		4950825	2					
ANR	4950858	ParameterList	gp_thread_id thread		4950825	3					
ANR	4950859	Parameter	gp_thread_id thread	284:22:8121:8139	4950825	0	True				
ANR	4950860	ParameterType	gp_thread_id		4950825	0					
ANR	4950861	Identifier	thread		4950825	1					
ANR	4950862	CFGEntryNode	ENTRY		4950825		True				
ANR	4950863	CFGExitNode	EXIT		4950825		True				
ANR	4950864	Symbol	NULL		4950825						
ANR	4950865	Symbol	FALSE		4950825						
ANR	4950866	Symbol	thread		4950825						
ANR	4950867	Symbol	INFINITE		4950825						
