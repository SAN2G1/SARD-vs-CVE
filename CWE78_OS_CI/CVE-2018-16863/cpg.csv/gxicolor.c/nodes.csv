command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5662426	File	data/converged/CVE-2018-16863_ghostpdl/gxicolor.c								
ANR	5662427	ClassDef	<unnamed>	47:8:1187:1460							
ANR	5662428	DeclStmt									
ANR	5662429	Decl							byte	byte [ GS_IMAGE_MAX_COLOR_COMPONENTS ]	v
ANR	5662430	DeclStmt									
ANR	5662431	Decl							bits32	bits32 [ BITS32_PER_COLOR_SAMPLES ]	all
ANR	5662432	DeclStmt									
ANR	5662433	Decl									color_samples
ANR	5662434	Function	gs_image_class_4_color	66:0:1825:7936							
ANR	5662435	FunctionDef	gs_image_class_4_color (gx_image_enum * penum)		5662434	0					
ANR	5662436	CompoundStatement		68:0:1886:7936	5662434	0					
ANR	5662437	IdentifierDeclStatement	bool std_cmap_procs ;	69:4:1892:1911	5662434	0	True				
ANR	5662438	IdentifierDecl	std_cmap_procs		5662434	0					
ANR	5662439	IdentifierDeclType	bool		5662434	0					
ANR	5662440	Identifier	std_cmap_procs		5662434	1					
ANR	5662441	IdentifierDeclStatement	int code ;	70:4:1917:1925	5662434	1	True				
ANR	5662442	IdentifierDecl	code		5662434	0					
ANR	5662443	IdentifierDeclType	int		5662434	0					
ANR	5662444	Identifier	code		5662434	1					
ANR	5662445	IdentifierDeclStatement	bool use_fast_thresh = true ;	72:4:1952:1979	5662434	2	True				
ANR	5662446	IdentifierDecl	use_fast_thresh = true		5662434	0					
ANR	5662447	IdentifierDeclType	bool		5662434	0					
ANR	5662448	Identifier	use_fast_thresh		5662434	1					
ANR	5662449	AssignmentExpression	use_fast_thresh = true		5662434	2		=			
ANR	5662450	Identifier	true		5662434	0					
ANR	5662451	Identifier	true		5662434	1					
ANR	5662452	IfStatement	if ( penum -> use_mask_color )		5662434	3					
ANR	5662453	Condition	penum -> use_mask_color	77:8:2037:2057	5662434	0	True				
ANR	5662454	PtrMemberAccess	penum -> use_mask_color		5662434	0					
ANR	5662455	Identifier	penum		5662434	0					
ANR	5662456	Identifier	use_mask_color		5662434	1					
ANR	5662457	CompoundStatement		17:8:391:434	5662434	1					
ANR	5662458	IdentifierDeclStatement	int i ;	82:8:2229:2234	5662434	0	True				
ANR	5662459	IdentifierDecl	i		5662434	0					
ANR	5662460	IdentifierDeclType	int		5662434	0					
ANR	5662461	Identifier	i		5662434	1					
ANR	5662462	IdentifierDeclStatement	"color_samples mask , test ;"	83:8:2244:2268	5662434	1	True				
ANR	5662463	IdentifierDecl	mask		5662434	0					
ANR	5662464	IdentifierDeclType	color_samples		5662434	0					
ANR	5662465	Identifier	mask		5662434	1					
ANR	5662466	IdentifierDecl	test		5662434	1					
ANR	5662467	IdentifierDeclType	color_samples		5662434	0					
ANR	5662468	Identifier	test		5662434	1					
ANR	5662469	IdentifierDeclStatement	bool exact = penum -> spp <= BYTES_PER_BITS32 ;	84:8:2278:2321	5662434	2	True				
ANR	5662470	IdentifierDecl	exact = penum -> spp <= BYTES_PER_BITS32		5662434	0					
ANR	5662471	IdentifierDeclType	bool		5662434	0					
ANR	5662472	Identifier	exact		5662434	1					
ANR	5662473	AssignmentExpression	exact = penum -> spp <= BYTES_PER_BITS32		5662434	2		=			
ANR	5662474	Identifier	exact		5662434	0					
ANR	5662475	RelationalExpression	penum -> spp <= BYTES_PER_BITS32		5662434	1		<=			
ANR	5662476	PtrMemberAccess	penum -> spp		5662434	0					
ANR	5662477	Identifier	penum		5662434	0					
ANR	5662478	Identifier	spp		5662434	1					
ANR	5662479	Identifier	BYTES_PER_BITS32		5662434	1					
ANR	5662480	ExpressionStatement	"memset ( & mask , 0 , sizeof ( mask ) )"	86:8:2332:2362	5662434	3	True				
ANR	5662481	CallExpression	"memset ( & mask , 0 , sizeof ( mask ) )"		5662434	0					
ANR	5662482	Callee	memset		5662434	0					
ANR	5662483	Identifier	memset		5662434	0					
ANR	5662484	ArgumentList	& mask		5662434	1					
ANR	5662485	Argument	& mask		5662434	0					
ANR	5662486	UnaryOperationExpression	& mask		5662434	0					
ANR	5662487	UnaryOperator	&		5662434	0					
ANR	5662488	Identifier	mask		5662434	1					
ANR	5662489	Argument	0		5662434	1					
ANR	5662490	PrimaryExpression	0		5662434	0					
ANR	5662491	Argument	sizeof ( mask )		5662434	2					
ANR	5662492	SizeofExpression	sizeof ( mask )		5662434	0					
ANR	5662493	Sizeof	sizeof		5662434	0					
ANR	5662494	SizeofOperand	mask		5662434	1					
ANR	5662495	ExpressionStatement	"memset ( & test , 0 , sizeof ( test ) )"	87:8:2372:2402	5662434	4	True				
ANR	5662496	CallExpression	"memset ( & test , 0 , sizeof ( test ) )"		5662434	0					
ANR	5662497	Callee	memset		5662434	0					
ANR	5662498	Identifier	memset		5662434	0					
ANR	5662499	ArgumentList	& test		5662434	1					
ANR	5662500	Argument	& test		5662434	0					
ANR	5662501	UnaryOperationExpression	& test		5662434	0					
ANR	5662502	UnaryOperator	&		5662434	0					
ANR	5662503	Identifier	test		5662434	1					
ANR	5662504	Argument	0		5662434	1					
ANR	5662505	PrimaryExpression	0		5662434	0					
ANR	5662506	Argument	sizeof ( test )		5662434	2					
ANR	5662507	SizeofExpression	sizeof ( test )		5662434	0					
ANR	5662508	Sizeof	sizeof		5662434	0					
ANR	5662509	SizeofOperand	test		5662434	1					
ANR	5662510	ForStatement	for ( i = 0 ; i < penum -> spp ; ++ i )		5662434	5					
ANR	5662511	ForInit	i = 0 ;	88:13:2417:2422	5662434	0	True				
ANR	5662512	AssignmentExpression	i = 0		5662434	0		=			
ANR	5662513	Identifier	i		5662434	0					
ANR	5662514	PrimaryExpression	0		5662434	1					
ANR	5662515	Condition	i < penum -> spp	88:20:2424:2437	5662434	1	True				
ANR	5662516	RelationalExpression	i < penum -> spp		5662434	0		<			
ANR	5662517	Identifier	i		5662434	0					
ANR	5662518	PtrMemberAccess	penum -> spp		5662434	1					
ANR	5662519	Identifier	penum		5662434	0					
ANR	5662520	Identifier	spp		5662434	1					
ANR	5662521	UnaryExpression	++ i	88:36:2440:2442	5662434	2	True				
ANR	5662522	IncDec	++		5662434	0					
ANR	5662523	Identifier	i		5662434	1					
ANR	5662524	CompoundStatement		23:12:597:614	5662434	3					
ANR	5662525	IdentifierDeclStatement	"byte v0 , v1 ;"	89:12:2459:2470	5662434	0	True				
ANR	5662526	IdentifierDecl	v0		5662434	0					
ANR	5662527	IdentifierDeclType	byte		5662434	0					
ANR	5662528	Identifier	v0		5662434	1					
ANR	5662529	IdentifierDecl	v1		5662434	1					
ANR	5662530	IdentifierDeclType	byte		5662434	0					
ANR	5662531	Identifier	v1		5662434	1					
ANR	5662532	IdentifierDeclStatement	byte match = 0xff ;	90:12:2484:2501	5662434	1	True				
ANR	5662533	IdentifierDecl	match = 0xff		5662434	0					
ANR	5662534	IdentifierDeclType	byte		5662434	0					
ANR	5662535	Identifier	match		5662434	1					
ANR	5662536	AssignmentExpression	match = 0xff		5662434	2		=			
ANR	5662537	Identifier	match		5662434	0					
ANR	5662538	PrimaryExpression	0xff		5662434	1					
ANR	5662539	ExpressionStatement	"gx_image_scale_mask_colors ( penum , i )"	92:12:2516:2552	5662434	2	True				
ANR	5662540	CallExpression	"gx_image_scale_mask_colors ( penum , i )"		5662434	0					
ANR	5662541	Callee	gx_image_scale_mask_colors		5662434	0					
ANR	5662542	Identifier	gx_image_scale_mask_colors		5662434	0					
ANR	5662543	ArgumentList	penum		5662434	1					
ANR	5662544	Argument	penum		5662434	0					
ANR	5662545	Identifier	penum		5662434	0					
ANR	5662546	Argument	i		5662434	1					
ANR	5662547	Identifier	i		5662434	0					
ANR	5662548	ExpressionStatement	v0 = ( byte ) penum -> mask_color . values [ 2 * i ]	93:12:2566:2608	5662434	3	True				
ANR	5662549	AssignmentExpression	v0 = ( byte ) penum -> mask_color . values [ 2 * i ]		5662434	0		=			
ANR	5662550	Identifier	v0		5662434	0					
ANR	5662551	CastExpression	( byte ) penum -> mask_color . values [ 2 * i ]		5662434	1					
ANR	5662552	CastTarget	byte		5662434	0					
ANR	5662553	ArrayIndexing	penum -> mask_color . values [ 2 * i ]		5662434	1					
ANR	5662554	MemberAccess	penum -> mask_color . values		5662434	0					
ANR	5662555	PtrMemberAccess	penum -> mask_color		5662434	0					
ANR	5662556	Identifier	penum		5662434	0					
ANR	5662557	Identifier	mask_color		5662434	1					
ANR	5662558	Identifier	values		5662434	1					
ANR	5662559	MultiplicativeExpression	2 * i		5662434	1		*			
ANR	5662560	PrimaryExpression	2		5662434	0					
ANR	5662561	Identifier	i		5662434	1					
ANR	5662562	ExpressionStatement	v1 = ( byte ) penum -> mask_color . values [ 2 * i + 1 ]	94:12:2622:2668	5662434	4	True				
ANR	5662563	AssignmentExpression	v1 = ( byte ) penum -> mask_color . values [ 2 * i + 1 ]		5662434	0		=			
ANR	5662564	Identifier	v1		5662434	0					
ANR	5662565	CastExpression	( byte ) penum -> mask_color . values [ 2 * i + 1 ]		5662434	1					
ANR	5662566	CastTarget	byte		5662434	0					
ANR	5662567	ArrayIndexing	penum -> mask_color . values [ 2 * i + 1 ]		5662434	1					
ANR	5662568	MemberAccess	penum -> mask_color . values		5662434	0					
ANR	5662569	PtrMemberAccess	penum -> mask_color		5662434	0					
ANR	5662570	Identifier	penum		5662434	0					
ANR	5662571	Identifier	mask_color		5662434	1					
ANR	5662572	Identifier	values		5662434	1					
ANR	5662573	AdditiveExpression	2 * i + 1		5662434	1		+			
ANR	5662574	MultiplicativeExpression	2 * i		5662434	0		*			
ANR	5662575	PrimaryExpression	2		5662434	0					
ANR	5662576	Identifier	i		5662434	1					
ANR	5662577	PrimaryExpression	1		5662434	1					
ANR	5662578	WhileStatement	while ( ( v0 & match ) != ( v1 & match ) )		5662434	5					
ANR	5662579	Condition	( v0 & match ) != ( v1 & match )	95:19:2689:2716	5662434	0	True				
ANR	5662580	EqualityExpression	( v0 & match ) != ( v1 & match )		5662434	0		!=			
ANR	5662581	BitAndExpression	v0 & match		5662434	0		&			
ANR	5662582	Identifier	v0		5662434	0					
ANR	5662583	Identifier	match		5662434	1					
ANR	5662584	BitAndExpression	v1 & match		5662434	1		&			
ANR	5662585	Identifier	v1		5662434	0					
ANR	5662586	Identifier	match		5662434	1					
ANR	5662587	ExpressionStatement	match <<= 1	96:16:2735:2746	5662434	1	True				
ANR	5662588	AssignmentExpression	match <<= 1		5662434	0		<<=			
ANR	5662589	Identifier	match		5662434	0					
ANR	5662590	PrimaryExpression	1		5662434	1					
ANR	5662591	ExpressionStatement	mask . v [ i ] = match	97:12:2760:2777	5662434	6	True				
ANR	5662592	AssignmentExpression	mask . v [ i ] = match		5662434	0		=			
ANR	5662593	ArrayIndexing	mask . v [ i ]		5662434	0					
ANR	5662594	MemberAccess	mask . v		5662434	0					
ANR	5662595	Identifier	mask		5662434	0					
ANR	5662596	Identifier	v		5662434	1					
ANR	5662597	Identifier	i		5662434	1					
ANR	5662598	Identifier	match		5662434	1					
ANR	5662599	ExpressionStatement	test . v [ i ] = v0 & match	98:12:2791:2813	5662434	7	True				
ANR	5662600	AssignmentExpression	test . v [ i ] = v0 & match		5662434	0		=			
ANR	5662601	ArrayIndexing	test . v [ i ]		5662434	0					
ANR	5662602	MemberAccess	test . v		5662434	0					
ANR	5662603	Identifier	test		5662434	0					
ANR	5662604	Identifier	v		5662434	1					
ANR	5662605	Identifier	i		5662434	1					
ANR	5662606	BitAndExpression	v0 & match		5662434	1		&			
ANR	5662607	Identifier	v0		5662434	0					
ANR	5662608	Identifier	match		5662434	1					
ANR	5662609	ExpressionStatement	exact &= ( v0 == match && ( v1 | match ) == 0xff )	99:12:2827:2873	5662434	8	True				
ANR	5662610	AssignmentExpression	exact &= ( v0 == match && ( v1 | match ) == 0xff )		5662434	0		&=			
ANR	5662611	Identifier	exact		5662434	0					
ANR	5662612	AndExpression	v0 == match && ( v1 | match ) == 0xff		5662434	1		&&			
ANR	5662613	EqualityExpression	v0 == match		5662434	0		==			
ANR	5662614	Identifier	v0		5662434	0					
ANR	5662615	Identifier	match		5662434	1					
ANR	5662616	EqualityExpression	( v1 | match ) == 0xff		5662434	1		==			
ANR	5662617	InclusiveOrExpression	v1 | match		5662434	0		|			
ANR	5662618	Identifier	v1		5662434	0					
ANR	5662619	Identifier	match		5662434	1					
ANR	5662620	PrimaryExpression	0xff		5662434	1					
ANR	5662621	ExpressionStatement	penum -> mask_color . mask = mask . all [ 0 ]	101:8:2893:2929	5662434	6	True				
ANR	5662622	AssignmentExpression	penum -> mask_color . mask = mask . all [ 0 ]		5662434	0		=			
ANR	5662623	MemberAccess	penum -> mask_color . mask		5662434	0					
ANR	5662624	PtrMemberAccess	penum -> mask_color		5662434	0					
ANR	5662625	Identifier	penum		5662434	0					
ANR	5662626	Identifier	mask_color		5662434	1					
ANR	5662627	Identifier	mask		5662434	1					
ANR	5662628	ArrayIndexing	mask . all [ 0 ]		5662434	1					
ANR	5662629	MemberAccess	mask . all		5662434	0					
ANR	5662630	Identifier	mask		5662434	0					
ANR	5662631	Identifier	all		5662434	1					
ANR	5662632	PrimaryExpression	0		5662434	1					
ANR	5662633	ExpressionStatement	penum -> mask_color . test = test . all [ 0 ]	102:8:2939:2975	5662434	7	True				
ANR	5662634	AssignmentExpression	penum -> mask_color . test = test . all [ 0 ]		5662434	0		=			
ANR	5662635	MemberAccess	penum -> mask_color . test		5662434	0					
ANR	5662636	PtrMemberAccess	penum -> mask_color		5662434	0					
ANR	5662637	Identifier	penum		5662434	0					
ANR	5662638	Identifier	mask_color		5662434	1					
ANR	5662639	Identifier	test		5662434	1					
ANR	5662640	ArrayIndexing	test . all [ 0 ]		5662434	1					
ANR	5662641	MemberAccess	test . all		5662434	0					
ANR	5662642	Identifier	test		5662434	0					
ANR	5662643	Identifier	all		5662434	1					
ANR	5662644	PrimaryExpression	0		5662434	1					
ANR	5662645	ExpressionStatement	penum -> mask_color . exact = exact	103:8:2985:3016	5662434	8	True				
ANR	5662646	AssignmentExpression	penum -> mask_color . exact = exact		5662434	0		=			
ANR	5662647	MemberAccess	penum -> mask_color . exact		5662434	0					
ANR	5662648	PtrMemberAccess	penum -> mask_color		5662434	0					
ANR	5662649	Identifier	penum		5662434	0					
ANR	5662650	Identifier	mask_color		5662434	1					
ANR	5662651	Identifier	exact		5662434	1					
ANR	5662652	Identifier	exact		5662434	1					
ANR	5662653	ElseStatement	else		5662434	0					
ANR	5662654	CompoundStatement		37:11:1142:1142	5662434	0					
ANR	5662655	ExpressionStatement	penum -> mask_color . mask = 0	105:8:3039:3065	5662434	0	True				
ANR	5662656	AssignmentExpression	penum -> mask_color . mask = 0		5662434	0		=			
ANR	5662657	MemberAccess	penum -> mask_color . mask		5662434	0					
ANR	5662658	PtrMemberAccess	penum -> mask_color		5662434	0					
ANR	5662659	Identifier	penum		5662434	0					
ANR	5662660	Identifier	mask_color		5662434	1					
ANR	5662661	Identifier	mask		5662434	1					
ANR	5662662	PrimaryExpression	0		5662434	1					
ANR	5662663	ExpressionStatement	penum -> mask_color . test = ~0	106:8:3075:3102	5662434	1	True				
ANR	5662664	AssignmentExpression	penum -> mask_color . test = ~0		5662434	0		=			
ANR	5662665	MemberAccess	penum -> mask_color . test		5662434	0					
ANR	5662666	PtrMemberAccess	penum -> mask_color		5662434	0					
ANR	5662667	Identifier	penum		5662434	0					
ANR	5662668	Identifier	mask_color		5662434	1					
ANR	5662669	Identifier	test		5662434	1					
ANR	5662670	Identifier	~0		5662434	1					
ANR	5662671	ExpressionStatement	"std_cmap_procs = gx_device_uses_std_cmap_procs ( penum -> dev , penum -> pgs )"	112:4:3382:3452	5662434	4	True				
ANR	5662672	AssignmentExpression	"std_cmap_procs = gx_device_uses_std_cmap_procs ( penum -> dev , penum -> pgs )"		5662434	0		=			
ANR	5662673	Identifier	std_cmap_procs		5662434	0					
ANR	5662674	CallExpression	"gx_device_uses_std_cmap_procs ( penum -> dev , penum -> pgs )"		5662434	1					
ANR	5662675	Callee	gx_device_uses_std_cmap_procs		5662434	0					
ANR	5662676	Identifier	gx_device_uses_std_cmap_procs		5662434	0					
ANR	5662677	ArgumentList	penum -> dev		5662434	1					
ANR	5662678	Argument	penum -> dev		5662434	0					
ANR	5662679	PtrMemberAccess	penum -> dev		5662434	0					
ANR	5662680	Identifier	penum		5662434	0					
ANR	5662681	Identifier	dev		5662434	1					
ANR	5662682	Argument	penum -> pgs		5662434	1					
ANR	5662683	PtrMemberAccess	penum -> pgs		5662434	0					
ANR	5662684	Identifier	penum		5662434	0					
ANR	5662685	Identifier	pgs		5662434	1					
ANR	5662686	IfStatement	if ( ( gs_color_space_get_index ( penum -> pcs ) == gs_color_space_index_DeviceN && penum -> pcs -> cmm_icc_profile_data == NULL ) || penum -> use_mask_color || ! std_cmap_procs )		5662434	5					
ANR	5662687	Condition	( gs_color_space_get_index ( penum -> pcs ) == gs_color_space_index_DeviceN && penum -> pcs -> cmm_icc_profile_data == NULL ) || penum -> use_mask_color || ! std_cmap_procs	113:9:3463:3636	5662434	0	True				
ANR	5662688	OrExpression	( gs_color_space_get_index ( penum -> pcs ) == gs_color_space_index_DeviceN && penum -> pcs -> cmm_icc_profile_data == NULL ) || penum -> use_mask_color || ! std_cmap_procs		5662434	0		||			
ANR	5662689	AndExpression	gs_color_space_get_index ( penum -> pcs ) == gs_color_space_index_DeviceN && penum -> pcs -> cmm_icc_profile_data == NULL		5662434	0		&&			
ANR	5662690	EqualityExpression	gs_color_space_get_index ( penum -> pcs ) == gs_color_space_index_DeviceN		5662434	0		==			
ANR	5662691	CallExpression	gs_color_space_get_index ( penum -> pcs )		5662434	0					
ANR	5662692	Callee	gs_color_space_get_index		5662434	0					
ANR	5662693	Identifier	gs_color_space_get_index		5662434	0					
ANR	5662694	ArgumentList	penum -> pcs		5662434	1					
ANR	5662695	Argument	penum -> pcs		5662434	0					
ANR	5662696	PtrMemberAccess	penum -> pcs		5662434	0					
ANR	5662697	Identifier	penum		5662434	0					
ANR	5662698	Identifier	pcs		5662434	1					
ANR	5662699	Identifier	gs_color_space_index_DeviceN		5662434	1					
ANR	5662700	EqualityExpression	penum -> pcs -> cmm_icc_profile_data == NULL		5662434	1		==			
ANR	5662701	PtrMemberAccess	penum -> pcs -> cmm_icc_profile_data		5662434	0					
ANR	5662702	PtrMemberAccess	penum -> pcs		5662434	0					
ANR	5662703	Identifier	penum		5662434	0					
ANR	5662704	Identifier	pcs		5662434	1					
ANR	5662705	Identifier	cmm_icc_profile_data		5662434	1					
ANR	5662706	Identifier	NULL		5662434	1					
ANR	5662707	OrExpression	penum -> use_mask_color || ! std_cmap_procs		5662434	1		||			
ANR	5662708	PtrMemberAccess	penum -> use_mask_color		5662434	0					
ANR	5662709	Identifier	penum		5662434	0					
ANR	5662710	Identifier	use_mask_color		5662434	1					
ANR	5662711	UnaryOperationExpression	! std_cmap_procs		5662434	1					
ANR	5662712	UnaryOperator	!		5662434	0					
ANR	5662713	Identifier	std_cmap_procs		5662434	1					
ANR	5662714	CompoundStatement		48:25:1752:1752	5662434	1					
ANR	5662715	ReturnStatement	return & image_render_color_DeviceN ;	116:8:3649:3683	5662434	0	True				
ANR	5662716	UnaryOperationExpression	& image_render_color_DeviceN		5662434	0					
ANR	5662717	UnaryOperator	&		5662434	0					
ANR	5662718	Identifier	image_render_color_DeviceN		5662434	1					
ANR	5662719	ElseStatement	else		5662434	0					
ANR	5662720	CompoundStatement		57:8:2042:2072	5662434	0					
ANR	5662721	IdentifierDeclStatement	const gs_color_space * pcs ;	119:8:3740:3765	5662434	0	True				
ANR	5662722	IdentifierDecl	* pcs		5662434	0					
ANR	5662723	IdentifierDeclType	const gs_color_space *		5662434	0					
ANR	5662724	Identifier	pcs		5662434	1					
ANR	5662725	IdentifierDeclStatement	gsicc_rendering_param_t rendering_params ;	120:8:3775:3815	5662434	1	True				
ANR	5662726	IdentifierDecl	rendering_params		5662434	0					
ANR	5662727	IdentifierDeclType	gsicc_rendering_param_t		5662434	0					
ANR	5662728	Identifier	rendering_params		5662434	1					
ANR	5662729	IdentifierDeclStatement	int k ;	121:8:3825:3830	5662434	2	True				
ANR	5662730	IdentifierDecl	k		5662434	0					
ANR	5662731	IdentifierDeclType	int		5662434	0					
ANR	5662732	Identifier	k		5662434	1					
ANR	5662733	IdentifierDeclStatement	int src_num_comp = cs_num_components ( penum -> pcs ) ;	122:8:3840:3888	5662434	3	True				
ANR	5662734	IdentifierDecl	src_num_comp = cs_num_components ( penum -> pcs )		5662434	0					
ANR	5662735	IdentifierDeclType	int		5662434	0					
ANR	5662736	Identifier	src_num_comp		5662434	1					
ANR	5662737	AssignmentExpression	src_num_comp = cs_num_components ( penum -> pcs )		5662434	2		=			
ANR	5662738	Identifier	src_num_comp		5662434	0					
ANR	5662739	CallExpression	cs_num_components ( penum -> pcs )		5662434	1					
ANR	5662740	Callee	cs_num_components		5662434	0					
ANR	5662741	Identifier	cs_num_components		5662434	0					
ANR	5662742	ArgumentList	penum -> pcs		5662434	1					
ANR	5662743	Argument	penum -> pcs		5662434	0					
ANR	5662744	PtrMemberAccess	penum -> pcs		5662434	0					
ANR	5662745	Identifier	penum		5662434	0					
ANR	5662746	Identifier	pcs		5662434	1					
ANR	5662747	IdentifierDeclStatement	"int des_num_comp , bpc ;"	123:8:3898:3919	5662434	4	True				
ANR	5662748	IdentifierDecl	des_num_comp		5662434	0					
ANR	5662749	IdentifierDeclType	int		5662434	0					
ANR	5662750	Identifier	des_num_comp		5662434	1					
ANR	5662751	IdentifierDecl	bpc		5662434	1					
ANR	5662752	IdentifierDeclType	int		5662434	0					
ANR	5662753	Identifier	bpc		5662434	1					
ANR	5662754	IdentifierDeclStatement	cmm_dev_profile_t * dev_profile ;	124:8:3929:3959	5662434	5	True				
ANR	5662755	IdentifierDecl	* dev_profile		5662434	0					
ANR	5662756	IdentifierDeclType	cmm_dev_profile_t *		5662434	0					
ANR	5662757	Identifier	dev_profile		5662434	1					
ANR	5662758	ExpressionStatement	"code = dev_proc ( penum -> dev , get_profile ) ( penum -> dev , & dev_profile )"	126:8:3970:4036	5662434	6	True				
ANR	5662759	AssignmentExpression	"code = dev_proc ( penum -> dev , get_profile ) ( penum -> dev , & dev_profile )"		5662434	0		=			
ANR	5662760	Identifier	code		5662434	0					
ANR	5662761	CallExpression	"dev_proc ( penum -> dev , get_profile ) ( penum -> dev , & dev_profile )"		5662434	1					
ANR	5662762	Callee	"dev_proc ( penum -> dev , get_profile )"		5662434	0					
ANR	5662763	CallExpression	"dev_proc ( penum -> dev , get_profile )"		5662434	0					
ANR	5662764	Callee	dev_proc		5662434	0					
ANR	5662765	Identifier	dev_proc		5662434	0					
ANR	5662766	ArgumentList	penum -> dev		5662434	1					
ANR	5662767	Argument	penum -> dev		5662434	0					
ANR	5662768	PtrMemberAccess	penum -> dev		5662434	0					
ANR	5662769	Identifier	penum		5662434	0					
ANR	5662770	Identifier	dev		5662434	1					
ANR	5662771	Argument	get_profile		5662434	1					
ANR	5662772	Identifier	get_profile		5662434	0					
ANR	5662773	ArgumentList	penum -> dev		5662434	1					
ANR	5662774	Argument	penum -> dev		5662434	0					
ANR	5662775	PtrMemberAccess	penum -> dev		5662434	0					
ANR	5662776	Identifier	penum		5662434	0					
ANR	5662777	Identifier	dev		5662434	1					
ANR	5662778	Argument	& dev_profile		5662434	1					
ANR	5662779	UnaryOperationExpression	& dev_profile		5662434	0					
ANR	5662780	UnaryOperator	&		5662434	0					
ANR	5662781	Identifier	dev_profile		5662434	1					
ANR	5662782	IfStatement	if ( code < 0 )		5662434	7					
ANR	5662783	Condition	code < 0	127:12:4050:4057	5662434	0	True				
ANR	5662784	RelationalExpression	code < 0		5662434	0		<			
ANR	5662785	Identifier	code		5662434	0					
ANR	5662786	PrimaryExpression	0		5662434	1					
ANR	5662787	ReturnStatement	return NULL ;	128:12:4072:4083	5662434	1	True				
ANR	5662788	Identifier	NULL		5662434	0					
ANR	5662789	ExpressionStatement	des_num_comp = gsicc_get_device_profile_comps ( dev_profile )	130:8:4186:4244	5662434	8	True				
ANR	5662790	AssignmentExpression	des_num_comp = gsicc_get_device_profile_comps ( dev_profile )		5662434	0		=			
ANR	5662791	Identifier	des_num_comp		5662434	0					
ANR	5662792	CallExpression	gsicc_get_device_profile_comps ( dev_profile )		5662434	1					
ANR	5662793	Callee	gsicc_get_device_profile_comps		5662434	0					
ANR	5662794	Identifier	gsicc_get_device_profile_comps		5662434	0					
ANR	5662795	ArgumentList	dev_profile		5662434	1					
ANR	5662796	Argument	dev_profile		5662434	0					
ANR	5662797	Identifier	dev_profile		5662434	0					
ANR	5662798	ExpressionStatement	bpc = penum -> dev -> color_info . depth / des_num_comp	131:8:4254:4303	5662434	9	True				
ANR	5662799	AssignmentExpression	bpc = penum -> dev -> color_info . depth / des_num_comp		5662434	0		=			
ANR	5662800	Identifier	bpc		5662434	0					
ANR	5662801	MultiplicativeExpression	penum -> dev -> color_info . depth / des_num_comp		5662434	1		/			
ANR	5662802	MemberAccess	penum -> dev -> color_info . depth		5662434	0					
ANR	5662803	PtrMemberAccess	penum -> dev -> color_info		5662434	0					
ANR	5662804	PtrMemberAccess	penum -> dev		5662434	0					
ANR	5662805	Identifier	penum		5662434	0					
ANR	5662806	Identifier	dev		5662434	1					
ANR	5662807	Identifier	color_info		5662434	1					
ANR	5662808	Identifier	depth		5662434	1					
ANR	5662809	Identifier	des_num_comp		5662434	1					
ANR	5662810	ExpressionStatement	penum -> icc_setup . need_decode = false	132:8:4338:4374	5662434	10	True				
ANR	5662811	AssignmentExpression	penum -> icc_setup . need_decode = false		5662434	0		=			
ANR	5662812	MemberAccess	penum -> icc_setup . need_decode		5662434	0					
ANR	5662813	PtrMemberAccess	penum -> icc_setup		5662434	0					
ANR	5662814	Identifier	penum		5662434	0					
ANR	5662815	Identifier	icc_setup		5662434	1					
ANR	5662816	Identifier	need_decode		5662434	1					
ANR	5662817	Identifier	false		5662434	1					
ANR	5662818	ForStatement	for ( k = 0 ; k < src_num_comp ; k ++ )		5662434	11					
ANR	5662819	ForInit	k = 0 ;	134:13:4477:4482	5662434	0	True				
ANR	5662820	AssignmentExpression	k = 0		5662434	0		=			
ANR	5662821	Identifier	k		5662434	0					
ANR	5662822	PrimaryExpression	0		5662434	1					
ANR	5662823	Condition	k < src_num_comp	134:20:4484:4499	5662434	1	True				
ANR	5662824	RelationalExpression	k < src_num_comp		5662434	0		<			
ANR	5662825	Identifier	k		5662434	0					
ANR	5662826	Identifier	src_num_comp		5662434	1					
ANR	5662827	PostIncDecOperationExpression	k ++	134:38:4502:4504	5662434	2	True				
ANR	5662828	Identifier	k		5662434	0					
ANR	5662829	IncDec	++		5662434	1					
ANR	5662830	CompoundStatement		67:43:2620:2620	5662434	3					
ANR	5662831	IfStatement	if ( penum -> map [ k ] . decoding != sd_none )		5662434	0					
ANR	5662832	Condition	penum -> map [ k ] . decoding != sd_none	135:17:4526:4558	5662434	0	True				
ANR	5662833	EqualityExpression	penum -> map [ k ] . decoding != sd_none		5662434	0		!=			
ANR	5662834	MemberAccess	penum -> map [ k ] . decoding		5662434	0					
ANR	5662835	ArrayIndexing	penum -> map [ k ]		5662434	0					
ANR	5662836	PtrMemberAccess	penum -> map		5662434	0					
ANR	5662837	Identifier	penum		5662434	0					
ANR	5662838	Identifier	map		5662434	1					
ANR	5662839	Identifier	k		5662434	1					
ANR	5662840	Identifier	decoding		5662434	1					
ANR	5662841	Identifier	sd_none		5662434	1					
ANR	5662842	CompoundStatement		68:53:2675:2675	5662434	1					
ANR	5662843	ExpressionStatement	penum -> icc_setup . need_decode = true	136:16:4580:4615	5662434	0	True				
ANR	5662844	AssignmentExpression	penum -> icc_setup . need_decode = true		5662434	0		=			
ANR	5662845	MemberAccess	penum -> icc_setup . need_decode		5662434	0					
ANR	5662846	PtrMemberAccess	penum -> icc_setup		5662434	0					
ANR	5662847	Identifier	penum		5662434	0					
ANR	5662848	Identifier	icc_setup		5662434	1					
ANR	5662849	Identifier	need_decode		5662434	1					
ANR	5662850	Identifier	true		5662434	1					
ANR	5662851	BreakStatement	break ;	137:16:4633:4638	5662434	1	True				
ANR	5662852	ExpressionStatement	rendering_params . black_point_comp = penum -> pgs -> blackptcomp	141:8:4715:4774	5662434	12	True				
ANR	5662853	AssignmentExpression	rendering_params . black_point_comp = penum -> pgs -> blackptcomp		5662434	0		=			
ANR	5662854	MemberAccess	rendering_params . black_point_comp		5662434	0					
ANR	5662855	Identifier	rendering_params		5662434	0					
ANR	5662856	Identifier	black_point_comp		5662434	1					
ANR	5662857	PtrMemberAccess	penum -> pgs -> blackptcomp		5662434	1					
ANR	5662858	PtrMemberAccess	penum -> pgs		5662434	0					
ANR	5662859	Identifier	penum		5662434	0					
ANR	5662860	Identifier	pgs		5662434	1					
ANR	5662861	Identifier	blackptcomp		5662434	1					
ANR	5662862	ExpressionStatement	rendering_params . graphics_type_tag = GS_IMAGE_TAG	142:8:4784:4833	5662434	13	True				
ANR	5662863	AssignmentExpression	rendering_params . graphics_type_tag = GS_IMAGE_TAG		5662434	0		=			
ANR	5662864	MemberAccess	rendering_params . graphics_type_tag		5662434	0					
ANR	5662865	Identifier	rendering_params		5662434	0					
ANR	5662866	Identifier	graphics_type_tag		5662434	1					
ANR	5662867	Identifier	GS_IMAGE_TAG		5662434	1					
ANR	5662868	ExpressionStatement	rendering_params . override_icc = false	143:8:4843:4880	5662434	14	True				
ANR	5662869	AssignmentExpression	rendering_params . override_icc = false		5662434	0		=			
ANR	5662870	MemberAccess	rendering_params . override_icc		5662434	0					
ANR	5662871	Identifier	rendering_params		5662434	0					
ANR	5662872	Identifier	override_icc		5662434	1					
ANR	5662873	Identifier	false		5662434	1					
ANR	5662874	ExpressionStatement	rendering_params . preserve_black = gsBKPRESNOTSPECIFIED	144:8:4890:4944	5662434	15	True				
ANR	5662875	AssignmentExpression	rendering_params . preserve_black = gsBKPRESNOTSPECIFIED		5662434	0		=			
ANR	5662876	MemberAccess	rendering_params . preserve_black		5662434	0					
ANR	5662877	Identifier	rendering_params		5662434	0					
ANR	5662878	Identifier	preserve_black		5662434	1					
ANR	5662879	Identifier	gsBKPRESNOTSPECIFIED		5662434	1					
ANR	5662880	ExpressionStatement	rendering_params . rendering_intent = penum -> pgs -> renderingintent	145:8:4954:5017	5662434	16	True				
ANR	5662881	AssignmentExpression	rendering_params . rendering_intent = penum -> pgs -> renderingintent		5662434	0		=			
ANR	5662882	MemberAccess	rendering_params . rendering_intent		5662434	0					
ANR	5662883	Identifier	rendering_params		5662434	0					
ANR	5662884	Identifier	rendering_intent		5662434	1					
ANR	5662885	PtrMemberAccess	penum -> pgs -> renderingintent		5662434	1					
ANR	5662886	PtrMemberAccess	penum -> pgs		5662434	0					
ANR	5662887	Identifier	penum		5662434	0					
ANR	5662888	Identifier	pgs		5662434	1					
ANR	5662889	Identifier	renderingintent		5662434	1					
ANR	5662890	ExpressionStatement	rendering_params . cmm = gsCMM_DEFAULT	146:8:5027:5063	5662434	17	True				
ANR	5662891	AssignmentExpression	rendering_params . cmm = gsCMM_DEFAULT		5662434	0		=			
ANR	5662892	MemberAccess	rendering_params . cmm		5662434	0					
ANR	5662893	Identifier	rendering_params		5662434	0					
ANR	5662894	Identifier	cmm		5662434	1					
ANR	5662895	Identifier	gsCMM_DEFAULT		5662434	1					
ANR	5662896	IfStatement	if ( gs_color_space_is_PSCIE ( penum -> pcs ) && penum -> pcs -> icc_equivalent != NULL )		5662434	18					
ANR	5662897	Condition	gs_color_space_is_PSCIE ( penum -> pcs ) && penum -> pcs -> icc_equivalent != NULL	147:12:5077:5149	5662434	0	True				
ANR	5662898	AndExpression	gs_color_space_is_PSCIE ( penum -> pcs ) && penum -> pcs -> icc_equivalent != NULL		5662434	0		&&			
ANR	5662899	CallExpression	gs_color_space_is_PSCIE ( penum -> pcs )		5662434	0					
ANR	5662900	Callee	gs_color_space_is_PSCIE		5662434	0					
ANR	5662901	Identifier	gs_color_space_is_PSCIE		5662434	0					
ANR	5662902	ArgumentList	penum -> pcs		5662434	1					
ANR	5662903	Argument	penum -> pcs		5662434	0					
ANR	5662904	PtrMemberAccess	penum -> pcs		5662434	0					
ANR	5662905	Identifier	penum		5662434	0					
ANR	5662906	Identifier	pcs		5662434	1					
ANR	5662907	EqualityExpression	penum -> pcs -> icc_equivalent != NULL		5662434	1		!=			
ANR	5662908	PtrMemberAccess	penum -> pcs -> icc_equivalent		5662434	0					
ANR	5662909	PtrMemberAccess	penum -> pcs		5662434	0					
ANR	5662910	Identifier	penum		5662434	0					
ANR	5662911	Identifier	pcs		5662434	1					
ANR	5662912	Identifier	icc_equivalent		5662434	1					
ANR	5662913	Identifier	NULL		5662434	1					
ANR	5662914	CompoundStatement		80:87:3265:3265	5662434	1					
ANR	5662915	ExpressionStatement	pcs = penum -> pcs -> icc_equivalent	148:12:5166:5198	5662434	0	True				
ANR	5662916	AssignmentExpression	pcs = penum -> pcs -> icc_equivalent		5662434	0		=			
ANR	5662917	Identifier	pcs		5662434	0					
ANR	5662918	PtrMemberAccess	penum -> pcs -> icc_equivalent		5662434	1					
ANR	5662919	PtrMemberAccess	penum -> pcs		5662434	0					
ANR	5662920	Identifier	penum		5662434	0					
ANR	5662921	Identifier	pcs		5662434	1					
ANR	5662922	Identifier	icc_equivalent		5662434	1					
ANR	5662923	ElseStatement	else		5662434	0					
ANR	5662924	CompoundStatement		82:15:3328:3328	5662434	0					
ANR	5662925	ExpressionStatement	pcs = penum -> pcs	150:12:5229:5245	5662434	0	True				
ANR	5662926	AssignmentExpression	pcs = penum -> pcs		5662434	0		=			
ANR	5662927	Identifier	pcs		5662434	0					
ANR	5662928	PtrMemberAccess	penum -> pcs		5662434	1					
ANR	5662929	Identifier	penum		5662434	0					
ANR	5662930	Identifier	pcs		5662434	1					
ANR	5662931	ExpressionStatement	penum -> icc_setup . is_lab = pcs -> cmm_icc_profile_data -> islab	152:8:5265:5323	5662434	19	True				
ANR	5662932	AssignmentExpression	penum -> icc_setup . is_lab = pcs -> cmm_icc_profile_data -> islab		5662434	0		=			
ANR	5662933	MemberAccess	penum -> icc_setup . is_lab		5662434	0					
ANR	5662934	PtrMemberAccess	penum -> icc_setup		5662434	0					
ANR	5662935	Identifier	penum		5662434	0					
ANR	5662936	Identifier	icc_setup		5662434	1					
ANR	5662937	Identifier	is_lab		5662434	1					
ANR	5662938	PtrMemberAccess	pcs -> cmm_icc_profile_data -> islab		5662434	1					
ANR	5662939	PtrMemberAccess	pcs -> cmm_icc_profile_data		5662434	0					
ANR	5662940	Identifier	pcs		5662434	0					
ANR	5662941	Identifier	cmm_icc_profile_data		5662434	1					
ANR	5662942	Identifier	islab		5662434	1					
ANR	5662943	ExpressionStatement	penum -> icc_setup . must_halftone = gx_device_must_halftone ( penum -> dev )	153:8:5333:5401	5662434	20	True				
ANR	5662944	AssignmentExpression	penum -> icc_setup . must_halftone = gx_device_must_halftone ( penum -> dev )		5662434	0		=			
ANR	5662945	MemberAccess	penum -> icc_setup . must_halftone		5662434	0					
ANR	5662946	PtrMemberAccess	penum -> icc_setup		5662434	0					
ANR	5662947	Identifier	penum		5662434	0					
ANR	5662948	Identifier	icc_setup		5662434	1					
ANR	5662949	Identifier	must_halftone		5662434	1					
ANR	5662950	CallExpression	gx_device_must_halftone ( penum -> dev )		5662434	1					
ANR	5662951	Callee	gx_device_must_halftone		5662434	0					
ANR	5662952	Identifier	gx_device_must_halftone		5662434	0					
ANR	5662953	ArgumentList	penum -> dev		5662434	1					
ANR	5662954	Argument	penum -> dev		5662434	0					
ANR	5662955	PtrMemberAccess	penum -> dev		5662434	0					
ANR	5662956	Identifier	penum		5662434	0					
ANR	5662957	Identifier	dev		5662434	1					
ANR	5662958	ExpressionStatement	"penum -> icc_setup . has_transfer = gx_has_transfer ( penum -> pgs , des_num_comp )"	154:8:5411:5484	5662434	21	True				
ANR	5662959	AssignmentExpression	"penum -> icc_setup . has_transfer = gx_has_transfer ( penum -> pgs , des_num_comp )"		5662434	0		=			
ANR	5662960	MemberAccess	penum -> icc_setup . has_transfer		5662434	0					
ANR	5662961	PtrMemberAccess	penum -> icc_setup		5662434	0					
ANR	5662962	Identifier	penum		5662434	0					
ANR	5662963	Identifier	icc_setup		5662434	1					
ANR	5662964	Identifier	has_transfer		5662434	1					
ANR	5662965	CallExpression	"gx_has_transfer ( penum -> pgs , des_num_comp )"		5662434	1					
ANR	5662966	Callee	gx_has_transfer		5662434	0					
ANR	5662967	Identifier	gx_has_transfer		5662434	0					
ANR	5662968	ArgumentList	penum -> pgs		5662434	1					
ANR	5662969	Argument	penum -> pgs		5662434	0					
ANR	5662970	PtrMemberAccess	penum -> pgs		5662434	0					
ANR	5662971	Identifier	penum		5662434	0					
ANR	5662972	Identifier	pgs		5662434	1					
ANR	5662973	Argument	des_num_comp		5662434	1					
ANR	5662974	Identifier	des_num_comp		5662434	0					
ANR	5662975	IfStatement	if ( penum -> icc_setup . is_lab )		5662434	22					
ANR	5662976	Condition	penum -> icc_setup . is_lab	155:12:5498:5520	5662434	0	True				
ANR	5662977	MemberAccess	penum -> icc_setup . is_lab		5662434	0					
ANR	5662978	PtrMemberAccess	penum -> icc_setup		5662434	0					
ANR	5662979	Identifier	penum		5662434	0					
ANR	5662980	Identifier	icc_setup		5662434	1					
ANR	5662981	Identifier	is_lab		5662434	1					
ANR	5662982	ExpressionStatement	penum -> icc_setup . need_decode = false	156:12:5535:5571	5662434	1	True				
ANR	5662983	AssignmentExpression	penum -> icc_setup . need_decode = false		5662434	0		=			
ANR	5662984	MemberAccess	penum -> icc_setup . need_decode		5662434	0					
ANR	5662985	PtrMemberAccess	penum -> icc_setup		5662434	0					
ANR	5662986	Identifier	penum		5662434	0					
ANR	5662987	Identifier	icc_setup		5662434	1					
ANR	5662988	Identifier	need_decode		5662434	1					
ANR	5662989	Identifier	false		5662434	1					
ANR	5662990	IfStatement	if ( penum -> icc_link == NULL )		5662434	23					
ANR	5662991	Condition	penum -> icc_link == NULL	157:12:5585:5607	5662434	0	True				
ANR	5662992	EqualityExpression	penum -> icc_link == NULL		5662434	0		==			
ANR	5662993	PtrMemberAccess	penum -> icc_link		5662434	0					
ANR	5662994	Identifier	penum		5662434	0					
ANR	5662995	Identifier	icc_link		5662434	1					
ANR	5662996	Identifier	NULL		5662434	1					
ANR	5662997	CompoundStatement		90:37:3723:3723	5662434	1					
ANR	5662998	ExpressionStatement	"penum -> icc_link = gsicc_get_link ( penum -> pgs , penum -> dev , pcs , NULL , & rendering_params , penum -> memory )"	158:12:5624:5741	5662434	0	True				
ANR	5662999	AssignmentExpression	"penum -> icc_link = gsicc_get_link ( penum -> pgs , penum -> dev , pcs , NULL , & rendering_params , penum -> memory )"		5662434	0		=			
ANR	5663000	PtrMemberAccess	penum -> icc_link		5662434	0					
ANR	5663001	Identifier	penum		5662434	0					
ANR	5663002	Identifier	icc_link		5662434	1					
ANR	5663003	CallExpression	"gsicc_get_link ( penum -> pgs , penum -> dev , pcs , NULL , & rendering_params , penum -> memory )"		5662434	1					
ANR	5663004	Callee	gsicc_get_link		5662434	0					
ANR	5663005	Identifier	gsicc_get_link		5662434	0					
ANR	5663006	ArgumentList	penum -> pgs		5662434	1					
ANR	5663007	Argument	penum -> pgs		5662434	0					
ANR	5663008	PtrMemberAccess	penum -> pgs		5662434	0					
ANR	5663009	Identifier	penum		5662434	0					
ANR	5663010	Identifier	pgs		5662434	1					
ANR	5663011	Argument	penum -> dev		5662434	1					
ANR	5663012	PtrMemberAccess	penum -> dev		5662434	0					
ANR	5663013	Identifier	penum		5662434	0					
ANR	5663014	Identifier	dev		5662434	1					
ANR	5663015	Argument	pcs		5662434	2					
ANR	5663016	Identifier	pcs		5662434	0					
ANR	5663017	Argument	NULL		5662434	3					
ANR	5663018	Identifier	NULL		5662434	0					
ANR	5663019	Argument	& rendering_params		5662434	4					
ANR	5663020	UnaryOperationExpression	& rendering_params		5662434	0					
ANR	5663021	UnaryOperator	&		5662434	0					
ANR	5663022	Identifier	rendering_params		5662434	1					
ANR	5663023	Argument	penum -> memory		5662434	5					
ANR	5663024	PtrMemberAccess	penum -> memory		5662434	0					
ANR	5663025	Identifier	penum		5662434	0					
ANR	5663026	Identifier	memory		5662434	1					
ANR	5663027	ExpressionStatement	penum -> use_cie_range = false	165:8:6021:6049	5662434	24	True				
ANR	5663028	AssignmentExpression	penum -> use_cie_range = false		5662434	0		=			
ANR	5663029	PtrMemberAccess	penum -> use_cie_range		5662434	0					
ANR	5663030	Identifier	penum		5662434	0					
ANR	5663031	Identifier	use_cie_range		5662434	1					
ANR	5663032	Identifier	false		5662434	1					
ANR	5663033	IfStatement	if ( gs_color_space_is_PSCIE ( penum -> pcs ) && penum -> pcs -> icc_equivalent != NULL )		5662434	25					
ANR	5663034	Condition	gs_color_space_is_PSCIE ( penum -> pcs ) && penum -> pcs -> icc_equivalent != NULL	166:12:6063:6147	5662434	0	True				
ANR	5663035	AndExpression	gs_color_space_is_PSCIE ( penum -> pcs ) && penum -> pcs -> icc_equivalent != NULL		5662434	0		&&			
ANR	5663036	CallExpression	gs_color_space_is_PSCIE ( penum -> pcs )		5662434	0					
ANR	5663037	Callee	gs_color_space_is_PSCIE		5662434	0					
ANR	5663038	Identifier	gs_color_space_is_PSCIE		5662434	0					
ANR	5663039	ArgumentList	penum -> pcs		5662434	1					
ANR	5663040	Argument	penum -> pcs		5662434	0					
ANR	5663041	PtrMemberAccess	penum -> pcs		5662434	0					
ANR	5663042	Identifier	penum		5662434	0					
ANR	5663043	Identifier	pcs		5662434	1					
ANR	5663044	EqualityExpression	penum -> pcs -> icc_equivalent != NULL		5662434	1		!=			
ANR	5663045	PtrMemberAccess	penum -> pcs -> icc_equivalent		5662434	0					
ANR	5663046	PtrMemberAccess	penum -> pcs		5662434	0					
ANR	5663047	Identifier	penum		5662434	0					
ANR	5663048	Identifier	pcs		5662434	1					
ANR	5663049	Identifier	icc_equivalent		5662434	1					
ANR	5663050	Identifier	NULL		5662434	1					
ANR	5663051	CompoundStatement		100:48:4263:4263	5662434	1					
ANR	5663052	IfStatement	if ( ! check_cie_range ( penum -> pcs ) )		5662434	0					
ANR	5663053	Condition	! check_cie_range ( penum -> pcs )	169:17:6228:6255	5662434	0	True				
ANR	5663054	UnaryOperationExpression	! check_cie_range ( penum -> pcs )		5662434	0					
ANR	5663055	UnaryOperator	!		5662434	0					
ANR	5663056	CallExpression	check_cie_range ( penum -> pcs )		5662434	1					
ANR	5663057	Callee	check_cie_range		5662434	0					
ANR	5663058	Identifier	check_cie_range		5662434	0					
ANR	5663059	ArgumentList	penum -> pcs		5662434	1					
ANR	5663060	Argument	penum -> pcs		5662434	0					
ANR	5663061	PtrMemberAccess	penum -> pcs		5662434	0					
ANR	5663062	Identifier	penum		5662434	0					
ANR	5663063	Identifier	pcs		5662434	1					
ANR	5663064	CompoundStatement		102:48:4372:4372	5662434	1					
ANR	5663065	ExpressionStatement	penum -> use_cie_range = ( get_cie_range ( penum -> pcs ) != NULL )	172:16:6398:6456	5662434	0	True				
ANR	5663066	AssignmentExpression	penum -> use_cie_range = ( get_cie_range ( penum -> pcs ) != NULL )		5662434	0		=			
ANR	5663067	PtrMemberAccess	penum -> use_cie_range		5662434	0					
ANR	5663068	Identifier	penum		5662434	0					
ANR	5663069	Identifier	use_cie_range		5662434	1					
ANR	5663070	EqualityExpression	get_cie_range ( penum -> pcs ) != NULL		5662434	1		!=			
ANR	5663071	CallExpression	get_cie_range ( penum -> pcs )		5662434	0					
ANR	5663072	Callee	get_cie_range		5662434	0					
ANR	5663073	Identifier	get_cie_range		5662434	0					
ANR	5663074	ArgumentList	penum -> pcs		5662434	1					
ANR	5663075	Argument	penum -> pcs		5662434	0					
ANR	5663076	PtrMemberAccess	penum -> pcs		5662434	0					
ANR	5663077	Identifier	penum		5662434	0					
ANR	5663078	Identifier	pcs		5662434	1					
ANR	5663079	Identifier	NULL		5662434	1					
ANR	5663080	IfStatement	if ( gx_device_must_halftone ( penum -> dev ) && use_fast_thresh && ( penum -> posture == image_portrait || penum -> posture == image_landscape ) && penum -> image_parent_type == gs_image_type1 )		5662434	26					
ANR	5663081	Condition	gx_device_must_halftone ( penum -> dev ) && use_fast_thresh && ( penum -> posture == image_portrait || penum -> posture == image_landscape ) && penum -> image_parent_type == gs_image_type1	175:12:6494:6692	5662434	0	True				
ANR	5663082	AndExpression	gx_device_must_halftone ( penum -> dev ) && use_fast_thresh && ( penum -> posture == image_portrait || penum -> posture == image_landscape ) && penum -> image_parent_type == gs_image_type1		5662434	0		&&			
ANR	5663083	CallExpression	gx_device_must_halftone ( penum -> dev )		5662434	0					
ANR	5663084	Callee	gx_device_must_halftone		5662434	0					
ANR	5663085	Identifier	gx_device_must_halftone		5662434	0					
ANR	5663086	ArgumentList	penum -> dev		5662434	1					
ANR	5663087	Argument	penum -> dev		5662434	0					
ANR	5663088	PtrMemberAccess	penum -> dev		5662434	0					
ANR	5663089	Identifier	penum		5662434	0					
ANR	5663090	Identifier	dev		5662434	1					
ANR	5663091	AndExpression	use_fast_thresh && ( penum -> posture == image_portrait || penum -> posture == image_landscape ) && penum -> image_parent_type == gs_image_type1		5662434	1		&&			
ANR	5663092	Identifier	use_fast_thresh		5662434	0					
ANR	5663093	AndExpression	( penum -> posture == image_portrait || penum -> posture == image_landscape ) && penum -> image_parent_type == gs_image_type1		5662434	1		&&			
ANR	5663094	OrExpression	penum -> posture == image_portrait || penum -> posture == image_landscape		5662434	0		||			
ANR	5663095	EqualityExpression	penum -> posture == image_portrait		5662434	0		==			
ANR	5663096	PtrMemberAccess	penum -> posture		5662434	0					
ANR	5663097	Identifier	penum		5662434	0					
ANR	5663098	Identifier	posture		5662434	1					
ANR	5663099	Identifier	image_portrait		5662434	1					
ANR	5663100	EqualityExpression	penum -> posture == image_landscape		5662434	1		==			
ANR	5663101	PtrMemberAccess	penum -> posture		5662434	0					
ANR	5663102	Identifier	penum		5662434	0					
ANR	5663103	Identifier	posture		5662434	1					
ANR	5663104	Identifier	image_landscape		5662434	1					
ANR	5663105	EqualityExpression	penum -> image_parent_type == gs_image_type1		5662434	1		==			
ANR	5663106	PtrMemberAccess	penum -> image_parent_type		5662434	0					
ANR	5663107	Identifier	penum		5662434	0					
ANR	5663108	Identifier	image_parent_type		5662434	1					
ANR	5663109	Identifier	gs_image_type1		5662434	1					
ANR	5663110	CompoundStatement		111:12:4822:4855	5662434	1					
ANR	5663111	IdentifierDeclStatement	bool transfer_is_monotonic = true ;	178:12:6709:6742	5662434	0	True				
ANR	5663112	IdentifierDecl	transfer_is_monotonic = true		5662434	0					
ANR	5663113	IdentifierDeclType	bool		5662434	0					
ANR	5663114	Identifier	transfer_is_monotonic		5662434	1					
ANR	5663115	AssignmentExpression	transfer_is_monotonic = true		5662434	2		=			
ANR	5663116	Identifier	true		5662434	0					
ANR	5663117	Identifier	true		5662434	1					
ANR	5663118	ForStatement	for ( k = 0 ; k < des_num_comp ; k ++ )		5662434	1					
ANR	5663119	ForInit	k = 0 ;	180:17:6762:6765	5662434	0	True				
ANR	5663120	AssignmentExpression	k = 0		5662434	0		=			
ANR	5663121	Identifier	k		5662434	0					
ANR	5663122	PrimaryExpression	0		5662434	1					
ANR	5663123	Condition	k < des_num_comp	180:22:6767:6780	5662434	1	True				
ANR	5663124	RelationalExpression	k < des_num_comp		5662434	0		<			
ANR	5663125	Identifier	k		5662434	0					
ANR	5663126	Identifier	des_num_comp		5662434	1					
ANR	5663127	PostIncDecOperationExpression	k ++	180:38:6783:6785	5662434	2	True				
ANR	5663128	Identifier	k		5662434	0					
ANR	5663129	IncDec	++		5662434	1					
ANR	5663130	CompoundStatement		113:43:4901:4901	5662434	3					
ANR	5663131	IfStatement	"if ( ! gx_transfer_is_monotonic ( penum -> pgs , k ) )"		5662434	0					
ANR	5663132	Condition	"! gx_transfer_is_monotonic ( penum -> pgs , k )"	181:20:6810:6849	5662434	0	True				
ANR	5663133	UnaryOperationExpression	"! gx_transfer_is_monotonic ( penum -> pgs , k )"		5662434	0					
ANR	5663134	UnaryOperator	!		5662434	0					
ANR	5663135	CallExpression	"gx_transfer_is_monotonic ( penum -> pgs , k )"		5662434	1					
ANR	5663136	Callee	gx_transfer_is_monotonic		5662434	0					
ANR	5663137	Identifier	gx_transfer_is_monotonic		5662434	0					
ANR	5663138	ArgumentList	penum -> pgs		5662434	1					
ANR	5663139	Argument	penum -> pgs		5662434	0					
ANR	5663140	PtrMemberAccess	penum -> pgs		5662434	0					
ANR	5663141	Identifier	penum		5662434	0					
ANR	5663142	Identifier	pgs		5662434	1					
ANR	5663143	Argument	k		5662434	1					
ANR	5663144	Identifier	k		5662434	0					
ANR	5663145	CompoundStatement		114:62:4965:4965	5662434	1					
ANR	5663146	ExpressionStatement	transfer_is_monotonic = false	182:20:6874:6903	5662434	0	True				
ANR	5663147	AssignmentExpression	transfer_is_monotonic = false		5662434	0		=			
ANR	5663148	Identifier	transfer_is_monotonic		5662434	0					
ANR	5663149	Identifier	false		5662434	1					
ANR	5663150	BreakStatement	break ;	183:20:6925:6930	5662434	1	True				
ANR	5663151	IfStatement	if ( ( bpc == 1 ) && transfer_is_monotonic && ( penum -> dev -> color_info . num_components == 1 || penum -> dev -> is_planar ) && penum -> bps == 8 )		5662434	2					
ANR	5663152	Condition	( bpc == 1 ) && transfer_is_monotonic && ( penum -> dev -> color_info . num_components == 1 || penum -> dev -> is_planar ) && penum -> bps == 8	189:16:7191:7349	5662434	0	True				
ANR	5663153	AndExpression	( bpc == 1 ) && transfer_is_monotonic && ( penum -> dev -> color_info . num_components == 1 || penum -> dev -> is_planar ) && penum -> bps == 8		5662434	0		&&			
ANR	5663154	EqualityExpression	bpc == 1		5662434	0		==			
ANR	5663155	Identifier	bpc		5662434	0					
ANR	5663156	PrimaryExpression	1		5662434	1					
ANR	5663157	AndExpression	transfer_is_monotonic && ( penum -> dev -> color_info . num_components == 1 || penum -> dev -> is_planar ) && penum -> bps == 8		5662434	1		&&			
ANR	5663158	Identifier	transfer_is_monotonic		5662434	0					
ANR	5663159	AndExpression	( penum -> dev -> color_info . num_components == 1 || penum -> dev -> is_planar ) && penum -> bps == 8		5662434	1		&&			
ANR	5663160	OrExpression	penum -> dev -> color_info . num_components == 1 || penum -> dev -> is_planar		5662434	0		||			
ANR	5663161	EqualityExpression	penum -> dev -> color_info . num_components == 1		5662434	0		==			
ANR	5663162	MemberAccess	penum -> dev -> color_info . num_components		5662434	0					
ANR	5663163	PtrMemberAccess	penum -> dev -> color_info		5662434	0					
ANR	5663164	PtrMemberAccess	penum -> dev		5662434	0					
ANR	5663165	Identifier	penum		5662434	0					
ANR	5663166	Identifier	dev		5662434	1					
ANR	5663167	Identifier	color_info		5662434	1					
ANR	5663168	Identifier	num_components		5662434	1					
ANR	5663169	PrimaryExpression	1		5662434	1					
ANR	5663170	PtrMemberAccess	penum -> dev -> is_planar		5662434	1					
ANR	5663171	PtrMemberAccess	penum -> dev		5662434	0					
ANR	5663172	Identifier	penum		5662434	0					
ANR	5663173	Identifier	dev		5662434	1					
ANR	5663174	Identifier	is_planar		5662434	1					
ANR	5663175	EqualityExpression	penum -> bps == 8		5662434	1		==			
ANR	5663176	PtrMemberAccess	penum -> bps		5662434	0					
ANR	5663177	Identifier	penum		5662434	0					
ANR	5663178	Identifier	bps		5662434	1					
ANR	5663179	PrimaryExpression	8		5662434	1					
ANR	5663180	CompoundStatement		124:33:5465:5465	5662434	1					
ANR	5663181	ExpressionStatement	code = gxht_thresh_image_init ( penum )	192:16:7370:7406	5662434	0	True				
ANR	5663182	AssignmentExpression	code = gxht_thresh_image_init ( penum )		5662434	0		=			
ANR	5663183	Identifier	code		5662434	0					
ANR	5663184	CallExpression	gxht_thresh_image_init ( penum )		5662434	1					
ANR	5663185	Callee	gxht_thresh_image_init		5662434	0					
ANR	5663186	Identifier	gxht_thresh_image_init		5662434	0					
ANR	5663187	ArgumentList	penum		5662434	1					
ANR	5663188	Argument	penum		5662434	0					
ANR	5663189	Identifier	penum		5662434	0					
ANR	5663190	IfStatement	if ( code == 0 )		5662434	1					
ANR	5663191	Condition	code == 0	193:20:7428:7436	5662434	0	True				
ANR	5663192	EqualityExpression	code == 0		5662434	0		==			
ANR	5663193	Identifier	code		5662434	0					
ANR	5663194	PrimaryExpression	0		5662434	1					
ANR	5663195	CompoundStatement		126:31:5552:5552	5662434	1					
ANR	5663196	ExpressionStatement	penum -> icc_setup . has_transfer = false	195:21:7548:7585	5662434	0	True				
ANR	5663197	AssignmentExpression	penum -> icc_setup . has_transfer = false		5662434	0		=			
ANR	5663198	MemberAccess	penum -> icc_setup . has_transfer		5662434	0					
ANR	5663199	PtrMemberAccess	penum -> icc_setup		5662434	0					
ANR	5663200	Identifier	penum		5662434	0					
ANR	5663201	Identifier	icc_setup		5662434	1					
ANR	5663202	Identifier	has_transfer		5662434	1					
ANR	5663203	Identifier	false		5662434	1					
ANR	5663204	ReturnStatement	return & image_render_color_thresh ;	196:21:7608:7641	5662434	1	True				
ANR	5663205	UnaryOperationExpression	& image_render_color_thresh		5662434	0					
ANR	5663206	UnaryOperator	&		5662434	0					
ANR	5663207	Identifier	image_render_color_thresh		5662434	1					
ANR	5663208	IfStatement	if ( penum -> posture == image_portrait )		5662434	27					
ANR	5663209	Condition	penum -> posture == image_portrait	200:12:7697:7728	5662434	0	True				
ANR	5663210	EqualityExpression	penum -> posture == image_portrait		5662434	0		==			
ANR	5663211	PtrMemberAccess	penum -> posture		5662434	0					
ANR	5663212	Identifier	penum		5662434	0					
ANR	5663213	Identifier	posture		5662434	1					
ANR	5663214	Identifier	image_portrait		5662434	1					
ANR	5663215	ReturnStatement	return & image_render_color_icc_portrait ;	201:12:7743:7782	5662434	1	True				
ANR	5663216	UnaryOperationExpression	& image_render_color_icc_portrait		5662434	0					
ANR	5663217	UnaryOperator	&		5662434	0					
ANR	5663218	Identifier	image_render_color_icc_portrait		5662434	1					
ANR	5663219	IfStatement	if ( penum -> posture == image_landscape )		5662434	28					
ANR	5663220	Condition	penum -> posture == image_landscape	202:12:7796:7828	5662434	0	True				
ANR	5663221	EqualityExpression	penum -> posture == image_landscape		5662434	0		==			
ANR	5663222	PtrMemberAccess	penum -> posture		5662434	0					
ANR	5663223	Identifier	penum		5662434	0					
ANR	5663224	Identifier	posture		5662434	1					
ANR	5663225	Identifier	image_landscape		5662434	1					
ANR	5663226	ReturnStatement	return & image_render_color_icc_landscape ;	203:12:7843:7883	5662434	1	True				
ANR	5663227	UnaryOperationExpression	& image_render_color_icc_landscape		5662434	0					
ANR	5663228	UnaryOperator	&		5662434	0					
ANR	5663229	Identifier	image_render_color_icc_landscape		5662434	1					
ANR	5663230	ReturnStatement	return & image_render_color_icc_skew ;	204:8:7893:7928	5662434	29	True				
ANR	5663231	UnaryOperationExpression	& image_render_color_icc_skew		5662434	0					
ANR	5663232	UnaryOperator	&		5662434	0					
ANR	5663233	Identifier	image_render_color_icc_skew		5662434	1					
ANR	5663234	ReturnType	irender_proc_t		5662434	1					
ANR	5663235	Identifier	gs_image_class_4_color		5662434	2					
ANR	5663236	ParameterList	gx_image_enum * penum		5662434	3					
ANR	5663237	Parameter	gx_image_enum * penum	67:23:1863:1883	5662434	0	True				
ANR	5663238	ParameterType	gx_image_enum *		5662434	0					
ANR	5663239	Identifier	penum		5662434	1					
ANR	5663240	CFGEntryNode	ENTRY		5662434		True				
ANR	5663241	CFGExitNode	EXIT		5662434		True				
ANR	5663242	Symbol	penum -> pgs -> renderingintent		5662434						
ANR	5663243	Symbol	penum -> dev		5662434						
ANR	5663244	Symbol	penum -> dev -> color_info		5662434						
ANR	5663245	Symbol	gx_has_transfer		5662434						
ANR	5663246	Symbol	penum -> icc_setup . need_decode		5662434						
ANR	5663247	Symbol	gs_color_space_is_PSCIE		5662434						
ANR	5663248	Symbol	image_portrait		5662434						
ANR	5663249	Symbol	sd_none		5662434						
ANR	5663250	Symbol	* * penum		5662434						
ANR	5663251	Symbol	& dev_profile		5662434						
ANR	5663252	Symbol	penum -> use_cie_range		5662434						
ANR	5663253	Symbol	pcs -> cmm_icc_profile_data		5662434						
ANR	5663254	Symbol	transfer_is_monotonic		5662434						
ANR	5663255	Symbol	penum		5662434						
ANR	5663256	Symbol	gsicc_get_device_profile_comps		5662434						
ANR	5663257	Symbol	check_cie_range		5662434						
ANR	5663258	Symbol	penum -> pcs		5662434						
ANR	5663259	Symbol	penum -> icc_setup . must_halftone		5662434						
ANR	5663260	Symbol	penum -> bps		5662434						
ANR	5663261	Symbol	exact		5662434						
ANR	5663262	Symbol	gs_color_space_get_index		5662434						
ANR	5663263	Symbol	gx_device_uses_std_cmap_procs		5662434						
ANR	5663264	Symbol	* penum		5662434						
ANR	5663265	Symbol	gx_device_must_halftone		5662434						
ANR	5663266	Symbol	* penum -> map		5662434						
ANR	5663267	Symbol	* penum -> pgs		5662434						
ANR	5663268	Symbol	& image_render_color_icc_skew		5662434						
ANR	5663269	Symbol	penum -> map [ k ] . decoding		5662434						
ANR	5663270	Symbol	& image_render_color_icc_portrait		5662434						
ANR	5663271	Symbol	penum -> dev -> is_planar		5662434						
ANR	5663272	Symbol	penum -> pgs		5662434						
ANR	5663273	Symbol	penum -> map		5662434						
ANR	5663274	Symbol	penum -> mask_color . exact		5662434						
ANR	5663275	Symbol	penum -> mask_color		5662434						
ANR	5663276	Symbol	test . all		5662434						
ANR	5663277	Symbol	use_fast_thresh		5662434						
ANR	5663278	Symbol	& rendering_params		5662434						
ANR	5663279	Symbol	& image_render_color_thresh		5662434						
ANR	5663280	Symbol	& image_render_color_DeviceN		5662434						
ANR	5663281	Symbol	rendering_params . rendering_intent		5662434						
ANR	5663282	Symbol	& image_render_color_icc_landscape		5662434						
ANR	5663283	Symbol	& mask		5662434						
ANR	5663284	Symbol	i		5662434						
ANR	5663285	Symbol	k		5662434						
ANR	5663286	Symbol	* test		5662434						
ANR	5663287	Symbol	penum -> icc_setup . is_lab		5662434						
ANR	5663288	Symbol	~0		5662434						
ANR	5663289	Symbol	penum -> posture		5662434						
ANR	5663290	Symbol	penum -> use_mask_color		5662434						
ANR	5663291	Symbol	v0		5662434						
ANR	5663292	Symbol	v1		5662434						
ANR	5663293	Symbol	penum -> dev -> color_info . depth		5662434						
ANR	5663294	Symbol	rendering_params . graphics_type_tag		5662434						
ANR	5663295	Symbol	pcs -> cmm_icc_profile_data -> islab		5662434						
ANR	5663296	Symbol	* mask		5662434						
ANR	5663297	Symbol	std_cmap_procs		5662434						
ANR	5663298	Symbol	dev_profile		5662434						
ANR	5663299	Symbol	penum -> pcs -> icc_equivalent		5662434						
ANR	5663300	Symbol	* pcs		5662434						
ANR	5663301	Symbol	* test . v		5662434						
ANR	5663302	Symbol	* penum -> mask_color		5662434						
ANR	5663303	Symbol	* penum -> mask_color . values		5662434						
ANR	5663304	Symbol	gs_color_space_index_DeviceN		5662434						
ANR	5663305	Symbol	penum -> icc_setup . has_transfer		5662434						
ANR	5663306	Symbol	image_landscape		5662434						
ANR	5663307	Symbol	mask . v		5662434						
ANR	5663308	Symbol	* penum -> dev		5662434						
ANR	5663309	Symbol	GS_IMAGE_TAG		5662434						
ANR	5663310	Symbol	& test		5662434						
ANR	5663311	Symbol	penum -> icc_link		5662434						
ANR	5663312	Symbol	rendering_params . cmm		5662434						
ANR	5663313	Symbol	NULL		5662434						
ANR	5663314	Symbol	test		5662434						
ANR	5663315	Symbol	gsBKPRESNOTSPECIFIED		5662434						
ANR	5663316	Symbol	penum -> image_parent_type		5662434						
ANR	5663317	Symbol	penum -> pcs -> cmm_icc_profile_data		5662434						
ANR	5663318	Symbol	rendering_params . preserve_black		5662434						
ANR	5663319	Symbol	gs_image_type1		5662434						
ANR	5663320	Symbol	rendering_params		5662434						
ANR	5663321	Symbol	* mask . all		5662434						
ANR	5663322	Symbol	mask . all		5662434						
ANR	5663323	Symbol	penum -> mask_color . test		5662434						
ANR	5663324	Symbol	* * pcs		5662434						
ANR	5663325	Symbol	cs_num_components		5662434						
ANR	5663326	Symbol	true		5662434						
ANR	5663327	Symbol	gxht_thresh_image_init		5662434						
ANR	5663328	Symbol	* penum -> pcs		5662434						
ANR	5663329	Symbol	code		5662434						
ANR	5663330	Symbol	penum -> memory		5662434						
ANR	5663331	Symbol	penum -> icc_setup		5662434						
ANR	5663332	Symbol	des_num_comp		5662434						
ANR	5663333	Symbol	bpc		5662434						
ANR	5663334	Symbol	gx_transfer_is_monotonic		5662434						
ANR	5663335	Symbol	dev_proc		5662434						
ANR	5663336	Symbol	rendering_params . override_icc		5662434						
ANR	5663337	Symbol	gsicc_get_link		5662434						
ANR	5663338	Symbol	get_profile		5662434						
ANR	5663339	Symbol	mask		5662434						
ANR	5663340	Symbol	rendering_params . black_point_comp		5662434						
ANR	5663341	Symbol	penum -> dev -> color_info . num_components		5662434						
ANR	5663342	Symbol	penum -> spp		5662434						
ANR	5663343	Symbol	* mask . v		5662434						
ANR	5663344	Symbol	pcs		5662434						
ANR	5663345	Symbol	gsCMM_DEFAULT		5662434						
ANR	5663346	Symbol	penum -> pgs -> blackptcomp		5662434						
ANR	5663347	Symbol	penum -> mask_color . values		5662434						
ANR	5663348	Symbol	match		5662434						
ANR	5663349	Symbol	false		5662434						
ANR	5663350	Symbol	* pcs -> cmm_icc_profile_data		5662434						
ANR	5663351	Symbol	BYTES_PER_BITS32		5662434						
ANR	5663352	Symbol	* i		5662434						
ANR	5663353	Symbol	penum -> mask_color . mask		5662434						
ANR	5663354	Symbol	* k		5662434						
ANR	5663355	Symbol	src_num_comp		5662434						
ANR	5663356	Symbol	* test . all		5662434						
ANR	5663357	Symbol	test . v		5662434						
ANR	5663358	Symbol	get_cie_range		5662434						
ANR	5663359	Function	mask_color_matches	211:0:8024:8383							
ANR	5663360	FunctionDef	"mask_color_matches (const byte * v , const gx_image_enum * penum , int num_components)"		5663359	0					
ANR	5663361	CompoundStatement		214:0:8137:8383	5663359	0					
ANR	5663362	IdentifierDeclStatement	int i ;	215:4:8143:8148	5663359	0	True				
ANR	5663363	IdentifierDecl	i		5663359	0					
ANR	5663364	IdentifierDeclType	int		5663359	0					
ANR	5663365	Identifier	i		5663359	1					
ANR	5663366	ForStatement	"for ( i = num_components * 2 , v += num_components - 1 ; ( i -= 2 ) >= 0 ; -- v )"		5663359	1					
ANR	5663367	ForInit	"i = num_components * 2 , v += num_components - 1 ;"	217:9:8160:8207	5663359	0	True				
ANR	5663368	Expression	"i = num_components * 2 , v += num_components - 1"		5663359	0					
ANR	5663369	AssignmentExpression	i = num_components * 2		5663359	0		=			
ANR	5663370	Identifier	i		5663359	0					
ANR	5663371	MultiplicativeExpression	num_components * 2		5663359	1		*			
ANR	5663372	Identifier	num_components		5663359	0					
ANR	5663373	PrimaryExpression	2		5663359	1					
ANR	5663374	AssignmentExpression	v += num_components - 1		5663359	1		+=			
ANR	5663375	Identifier	v		5663359	0					
ANR	5663376	AdditiveExpression	num_components - 1		5663359	1		-			
ANR	5663377	Identifier	num_components		5663359	0					
ANR	5663378	PrimaryExpression	1		5663359	1					
ANR	5663379	Condition	( i -= 2 ) >= 0	217:58:8209:8221	5663359	1	True				
ANR	5663380	RelationalExpression	( i -= 2 ) >= 0		5663359	0		>=			
ANR	5663381	AssignmentExpression	i -= 2		5663359	0		-=			
ANR	5663382	Identifier	i		5663359	0					
ANR	5663383	PrimaryExpression	2		5663359	1					
ANR	5663384	PrimaryExpression	0		5663359	1					
ANR	5663385	UnaryExpression	-- v	217:73:8224:8226	5663359	2	True				
ANR	5663386	IncDec	--		5663359	0					
ANR	5663387	Identifier	v		5663359	1					
ANR	5663388	IfStatement	if ( * v < penum -> mask_color . values [ i ] || * v > penum -> mask_color . values [ i + 1 ] )		5663359	3					
ANR	5663389	Condition	* v < penum -> mask_color . values [ i ] || * v > penum -> mask_color . values [ i + 1 ]	218:12:8241:8324	5663359	0	True				
ANR	5663390	OrExpression	* v < penum -> mask_color . values [ i ] || * v > penum -> mask_color . values [ i + 1 ]		5663359	0		||			
ANR	5663391	RelationalExpression	* v < penum -> mask_color . values [ i ]		5663359	0		<			
ANR	5663392	UnaryOperationExpression	* v		5663359	0					
ANR	5663393	UnaryOperator	*		5663359	0					
ANR	5663394	Identifier	v		5663359	1					
ANR	5663395	ArrayIndexing	penum -> mask_color . values [ i ]		5663359	1					
ANR	5663396	MemberAccess	penum -> mask_color . values		5663359	0					
ANR	5663397	PtrMemberAccess	penum -> mask_color		5663359	0					
ANR	5663398	Identifier	penum		5663359	0					
ANR	5663399	Identifier	mask_color		5663359	1					
ANR	5663400	Identifier	values		5663359	1					
ANR	5663401	Identifier	i		5663359	1					
ANR	5663402	RelationalExpression	* v > penum -> mask_color . values [ i + 1 ]		5663359	1		>			
ANR	5663403	UnaryOperationExpression	* v		5663359	0					
ANR	5663404	UnaryOperator	*		5663359	0					
ANR	5663405	Identifier	v		5663359	1					
ANR	5663406	ArrayIndexing	penum -> mask_color . values [ i + 1 ]		5663359	1					
ANR	5663407	MemberAccess	penum -> mask_color . values		5663359	0					
ANR	5663408	PtrMemberAccess	penum -> mask_color		5663359	0					
ANR	5663409	Identifier	penum		5663359	0					
ANR	5663410	Identifier	mask_color		5663359	1					
ANR	5663411	Identifier	values		5663359	1					
ANR	5663412	AdditiveExpression	i + 1		5663359	1		+			
ANR	5663413	Identifier	i		5663359	0					
ANR	5663414	PrimaryExpression	1		5663359	1					
ANR	5663415	ReturnStatement	return false ;	221:12:8352:8364	5663359	1	True				
ANR	5663416	Identifier	false		5663359	0					
ANR	5663417	ReturnStatement	return true ;	222:4:8370:8381	5663359	2	True				
ANR	5663418	Identifier	true		5663359	0					
ANR	5663419	ReturnType	static bool		5663359	1					
ANR	5663420	Identifier	mask_color_matches		5663359	2					
ANR	5663421	ParameterList	"const byte * v , const gx_image_enum * penum , int num_components"		5663359	3					
ANR	5663422	Parameter	const byte * v	212:19:8055:8067	5663359	0	True				
ANR	5663423	ParameterType	const byte *		5663359	0					
ANR	5663424	Identifier	v		5663359	1					
ANR	5663425	Parameter	const gx_image_enum * penum	212:34:8070:8095	5663359	1	True				
ANR	5663426	ParameterType	const gx_image_enum *		5663359	0					
ANR	5663427	Identifier	penum		5663359	1					
ANR	5663428	Parameter	int num_components	213:19:8117:8134	5663359	2	True				
ANR	5663429	ParameterType	int		5663359	0					
ANR	5663430	Identifier	num_components		5663359	1					
ANR	5663431	CFGEntryNode	ENTRY		5663359		True				
ANR	5663432	CFGExitNode	EXIT		5663359		True				
ANR	5663433	Symbol	* v		5663359						
ANR	5663434	Symbol	* penum		5663359						
ANR	5663435	Symbol	penum -> mask_color . values		5663359						
ANR	5663436	Symbol	penum		5663359						
ANR	5663437	Symbol	false		5663359						
ANR	5663438	Symbol	i		5663359						
ANR	5663439	Symbol	num_components		5663359						
ANR	5663440	Symbol	* penum -> mask_color		5663359						
ANR	5663441	Symbol	* penum -> mask_color . values		5663359						
ANR	5663442	Symbol	penum -> mask_color		5663359						
ANR	5663443	Symbol	* i		5663359						
ANR	5663444	Symbol	v		5663359						
ANR	5663445	Symbol	true		5663359						
ANR	5663446	Symbol	* * penum		5663359						
ANR	5663447	Function	rescale_input_color	225:0:8386:8513							
ANR	5663448	FunctionDef	"rescale_input_color (gs_range range , float input)"		5663447	0					
ANR	5663449	CompoundStatement		227:0:8455:8513	5663447	0					
ANR	5663450	ReturnStatement	return ( ( input - range . rmin ) / ( range . rmax - range . rmin ) ) ;	228:4:8461:8511	5663447	0	True				
ANR	5663451	MultiplicativeExpression	( input - range . rmin ) / ( range . rmax - range . rmin )		5663447	0		/			
ANR	5663452	AdditiveExpression	input - range . rmin		5663447	0		-			
ANR	5663453	Identifier	input		5663447	0					
ANR	5663454	MemberAccess	range . rmin		5663447	1					
ANR	5663455	Identifier	range		5663447	0					
ANR	5663456	Identifier	rmin		5663447	1					
ANR	5663457	AdditiveExpression	range . rmax - range . rmin		5663447	1		-			
ANR	5663458	MemberAccess	range . rmax		5663447	0					
ANR	5663459	Identifier	range		5663447	0					
ANR	5663460	Identifier	rmax		5663447	1					
ANR	5663461	MemberAccess	range . rmin		5663447	1					
ANR	5663462	Identifier	range		5663447	0					
ANR	5663463	Identifier	rmin		5663447	1					
ANR	5663464	ReturnType	static inline float		5663447	1					
ANR	5663465	Identifier	rescale_input_color		5663447	2					
ANR	5663466	ParameterList	"gs_range range , float input"		5663447	3					
ANR	5663467	Parameter	gs_range range	226:20:8426:8439	5663447	0	True				
ANR	5663468	ParameterType	gs_range		5663447	0					
ANR	5663469	Identifier	range		5663447	1					
ANR	5663470	Parameter	float input	226:36:8442:8452	5663447	1	True				
ANR	5663471	ParameterType	float		5663447	0					
ANR	5663472	Identifier	input		5663447	1					
ANR	5663473	CFGEntryNode	ENTRY		5663447		True				
ANR	5663474	CFGExitNode	EXIT		5663447		True				
ANR	5663475	Symbol	input		5663447						
ANR	5663476	Symbol	range . rmin		5663447						
ANR	5663477	Symbol	range . rmax		5663447						
ANR	5663478	Symbol	range		5663447						
ANR	5663479	Function	decode_row_cie	233:0:8609:9951							
ANR	5663480	FunctionDef	"decode_row_cie (const gx_image_enum * penum , const byte * psrc , int spp , byte * pdes , byte * bufend , gs_range range_array [ ])"		5663479	0					
ANR	5663481	CompoundStatement		236:0:8757:9951	5663479	0					
ANR	5663482	IdentifierDeclStatement	byte * curr_pos = pdes ;	237:4:8763:8784	5663479	0	True				
ANR	5663483	IdentifierDecl	* curr_pos = pdes		5663479	0					
ANR	5663484	IdentifierDeclType	byte *		5663479	0					
ANR	5663485	Identifier	curr_pos		5663479	1					
ANR	5663486	AssignmentExpression	* curr_pos = pdes		5663479	2		=			
ANR	5663487	Identifier	pdes		5663479	0					
ANR	5663488	Identifier	pdes		5663479	1					
ANR	5663489	IdentifierDeclStatement	int k ;	238:4:8790:8795	5663479	1	True				
ANR	5663490	IdentifierDecl	k		5663479	0					
ANR	5663491	IdentifierDeclType	int		5663479	0					
ANR	5663492	Identifier	k		5663479	1					
ANR	5663493	IdentifierDeclStatement	float temp ;	239:4:8801:8811	5663479	2	True				
ANR	5663494	IdentifierDecl	temp		5663479	0					
ANR	5663495	IdentifierDeclType	float		5663479	0					
ANR	5663496	Identifier	temp		5663479	1					
ANR	5663497	WhileStatement	while ( curr_pos < bufend )		5663479	3					
ANR	5663498	Condition	curr_pos < bufend	241:12:8826:8842	5663479	0	True				
ANR	5663499	RelationalExpression	curr_pos < bufend		5663479	0		<			
ANR	5663500	Identifier	curr_pos		5663479	0					
ANR	5663501	Identifier	bufend		5663479	1					
ANR	5663502	CompoundStatement		6:32:88:88	5663479	1					
ANR	5663503	ForStatement	for ( k = 0 ; k < spp ; k ++ )		5663479	0					
ANR	5663504	ForInit	k = 0 ;	242:14:8862:8867	5663479	0	True				
ANR	5663505	AssignmentExpression	k = 0		5663479	0		=			
ANR	5663506	Identifier	k		5663479	0					
ANR	5663507	PrimaryExpression	0		5663479	1					
ANR	5663508	Condition	k < spp	242:21:8869:8875	5663479	1	True				
ANR	5663509	RelationalExpression	k < spp		5663479	0		<			
ANR	5663510	Identifier	k		5663479	0					
ANR	5663511	Identifier	spp		5663479	1					
ANR	5663512	PostIncDecOperationExpression	k ++	242:30:8878:8881	5663479	2	True				
ANR	5663513	Identifier	k		5663479	0					
ANR	5663514	IncDec	++		5663479	1					
ANR	5663515	CompoundStatement		7:37:127:127	5663479	3					
ANR	5663516	SwitchStatement	switch ( penum -> map [ k ] . decoding )		5663479	0					
ANR	5663517	Condition	penum -> map [ k ] . decoding	243:21:8908:8929	5663479	0	True				
ANR	5663518	MemberAccess	penum -> map [ k ] . decoding		5663479	0					
ANR	5663519	ArrayIndexing	penum -> map [ k ]		5663479	0					
ANR	5663520	PtrMemberAccess	penum -> map		5663479	0					
ANR	5663521	Identifier	penum		5663479	0					
ANR	5663522	Identifier	map		5663479	1					
ANR	5663523	Identifier	k		5663479	1					
ANR	5663524	Identifier	decoding		5663479	1					
ANR	5663525	CompoundStatement		8:46:175:175	5663479	1					
ANR	5663526	Label	case sd_none :	244:16:8951:8963	5663479	0	True				
ANR	5663527	Identifier	sd_none		5663479	0					
ANR	5663528	ExpressionStatement	* curr_pos = * psrc	245:20:8985:9002	5663479	1	True				
ANR	5663529	AssignmentExpression	* curr_pos = * psrc		5663479	0		=			
ANR	5663530	UnaryOperationExpression	* curr_pos		5663479	0					
ANR	5663531	UnaryOperator	*		5663479	0					
ANR	5663532	Identifier	curr_pos		5663479	1					
ANR	5663533	UnaryOperationExpression	* psrc		5663479	1					
ANR	5663534	UnaryOperator	*		5663479	0					
ANR	5663535	Identifier	psrc		5663479	1					
ANR	5663536	BreakStatement	break ;	246:20:9024:9029	5663479	2	True				
ANR	5663537	Label	case sd_lookup :	247:16:9047:9061	5663479	3	True				
ANR	5663538	Identifier	sd_lookup		5663479	0					
ANR	5663539	ExpressionStatement	temp = penum -> map [ k ] . decode_lookup [ ( * psrc ) >> 4 ] * 255.0	248:20:9083:9137	5663479	4	True				
ANR	5663540	AssignmentExpression	temp = penum -> map [ k ] . decode_lookup [ ( * psrc ) >> 4 ] * 255.0		5663479	0		=			
ANR	5663541	Identifier	temp		5663479	0					
ANR	5663542	MultiplicativeExpression	penum -> map [ k ] . decode_lookup [ ( * psrc ) >> 4 ] * 255.0		5663479	1		*			
ANR	5663543	ArrayIndexing	penum -> map [ k ] . decode_lookup [ ( * psrc ) >> 4 ]		5663479	0					
ANR	5663544	MemberAccess	penum -> map [ k ] . decode_lookup		5663479	0					
ANR	5663545	ArrayIndexing	penum -> map [ k ]		5663479	0					
ANR	5663546	PtrMemberAccess	penum -> map		5663479	0					
ANR	5663547	Identifier	penum		5663479	0					
ANR	5663548	Identifier	map		5663479	1					
ANR	5663549	Identifier	k		5663479	1					
ANR	5663550	Identifier	decode_lookup		5663479	1					
ANR	5663551	ShiftExpression	( * psrc ) >> 4		5663479	1		>>			
ANR	5663552	UnaryOperationExpression	* psrc		5663479	0					
ANR	5663553	UnaryOperator	*		5663479	0					
ANR	5663554	Identifier	psrc		5663479	1					
ANR	5663555	PrimaryExpression	4		5663479	1					
ANR	5663556	PrimaryExpression	255.0		5663479	1					
ANR	5663557	ExpressionStatement	"temp = rescale_input_color ( range_array [ k ] , temp )"	249:20:9159:9207	5663479	5	True				
ANR	5663558	AssignmentExpression	"temp = rescale_input_color ( range_array [ k ] , temp )"		5663479	0		=			
ANR	5663559	Identifier	temp		5663479	0					
ANR	5663560	CallExpression	"rescale_input_color ( range_array [ k ] , temp )"		5663479	1					
ANR	5663561	Callee	rescale_input_color		5663479	0					
ANR	5663562	Identifier	rescale_input_color		5663479	0					
ANR	5663563	ArgumentList	range_array [ k ]		5663479	1					
ANR	5663564	Argument	range_array [ k ]		5663479	0					
ANR	5663565	ArrayIndexing	range_array [ k ]		5663479	0					
ANR	5663566	Identifier	range_array		5663479	0					
ANR	5663567	Identifier	k		5663479	1					
ANR	5663568	Argument	temp		5663479	1					
ANR	5663569	Identifier	temp		5663479	0					
ANR	5663570	ExpressionStatement	temp = temp * 255	250:20:9229:9244	5663479	6	True				
ANR	5663571	AssignmentExpression	temp = temp * 255		5663479	0		=			
ANR	5663572	Identifier	temp		5663479	0					
ANR	5663573	MultiplicativeExpression	temp * 255		5663479	1		*			
ANR	5663574	Identifier	temp		5663479	0					
ANR	5663575	PrimaryExpression	255		5663479	1					
ANR	5663576	IfStatement	if ( temp > 255 )		5663479	7					
ANR	5663577	Condition	temp > 255	251:24:9270:9279	5663479	0	True				
ANR	5663578	RelationalExpression	temp > 255		5663479	0		>			
ANR	5663579	Identifier	temp		5663479	0					
ANR	5663580	PrimaryExpression	255		5663479	1					
ANR	5663581	ExpressionStatement	temp = 255	251:36:9282:9292	5663479	1	True				
ANR	5663582	AssignmentExpression	temp = 255		5663479	0		=			
ANR	5663583	Identifier	temp		5663479	0					
ANR	5663584	PrimaryExpression	255		5663479	1					
ANR	5663585	IfStatement	if ( temp < 0 )		5663479	8					
ANR	5663586	Condition	temp < 0	252:24:9318:9325	5663479	0	True				
ANR	5663587	RelationalExpression	temp < 0		5663479	0		<			
ANR	5663588	Identifier	temp		5663479	0					
ANR	5663589	PrimaryExpression	0		5663479	1					
ANR	5663590	ExpressionStatement	temp = 0	252:35:9329:9337	5663479	1	True				
ANR	5663591	AssignmentExpression	temp = 0		5663479	0		=			
ANR	5663592	Identifier	temp		5663479	0					
ANR	5663593	PrimaryExpression	0		5663479	1					
ANR	5663594	ExpressionStatement	* curr_pos = ( unsigned char ) temp	253:20:9359:9391	5663479	9	True				
ANR	5663595	AssignmentExpression	* curr_pos = ( unsigned char ) temp		5663479	0		=			
ANR	5663596	UnaryOperationExpression	* curr_pos		5663479	0					
ANR	5663597	UnaryOperator	*		5663479	0					
ANR	5663598	Identifier	curr_pos		5663479	1					
ANR	5663599	CastExpression	( unsigned char ) temp		5663479	1					
ANR	5663600	CastTarget	unsigned char		5663479	0					
ANR	5663601	Identifier	temp		5663479	1					
ANR	5663602	BreakStatement	break ;	254:20:9413:9418	5663479	10	True				
ANR	5663603	Label	case sd_compute :	255:16:9436:9451	5663479	11	True				
ANR	5663604	Identifier	sd_compute		5663479	0					
ANR	5663605	ExpressionStatement	temp = penum -> map [ k ] . decode_base + ( * psrc ) * penum -> map [ k ] . decode_factor	256:20:9473:9569	5663479	12	True				
ANR	5663606	AssignmentExpression	temp = penum -> map [ k ] . decode_base + ( * psrc ) * penum -> map [ k ] . decode_factor		5663479	0		=			
ANR	5663607	Identifier	temp		5663479	0					
ANR	5663608	AdditiveExpression	penum -> map [ k ] . decode_base + ( * psrc ) * penum -> map [ k ] . decode_factor		5663479	1		+			
ANR	5663609	MemberAccess	penum -> map [ k ] . decode_base		5663479	0					
ANR	5663610	ArrayIndexing	penum -> map [ k ]		5663479	0					
ANR	5663611	PtrMemberAccess	penum -> map		5663479	0					
ANR	5663612	Identifier	penum		5663479	0					
ANR	5663613	Identifier	map		5663479	1					
ANR	5663614	Identifier	k		5663479	1					
ANR	5663615	Identifier	decode_base		5663479	1					
ANR	5663616	MultiplicativeExpression	( * psrc ) * penum -> map [ k ] . decode_factor		5663479	1		*			
ANR	5663617	UnaryOperationExpression	* psrc		5663479	0					
ANR	5663618	UnaryOperator	*		5663479	0					
ANR	5663619	Identifier	psrc		5663479	1					
ANR	5663620	MemberAccess	penum -> map [ k ] . decode_factor		5663479	1					
ANR	5663621	ArrayIndexing	penum -> map [ k ]		5663479	0					
ANR	5663622	PtrMemberAccess	penum -> map		5663479	0					
ANR	5663623	Identifier	penum		5663479	0					
ANR	5663624	Identifier	map		5663479	1					
ANR	5663625	Identifier	k		5663479	1					
ANR	5663626	Identifier	decode_factor		5663479	1					
ANR	5663627	ExpressionStatement	"temp = rescale_input_color ( range_array [ k ] , temp )"	258:20:9591:9639	5663479	13	True				
ANR	5663628	AssignmentExpression	"temp = rescale_input_color ( range_array [ k ] , temp )"		5663479	0		=			
ANR	5663629	Identifier	temp		5663479	0					
ANR	5663630	CallExpression	"rescale_input_color ( range_array [ k ] , temp )"		5663479	1					
ANR	5663631	Callee	rescale_input_color		5663479	0					
ANR	5663632	Identifier	rescale_input_color		5663479	0					
ANR	5663633	ArgumentList	range_array [ k ]		5663479	1					
ANR	5663634	Argument	range_array [ k ]		5663479	0					
ANR	5663635	ArrayIndexing	range_array [ k ]		5663479	0					
ANR	5663636	Identifier	range_array		5663479	0					
ANR	5663637	Identifier	k		5663479	1					
ANR	5663638	Argument	temp		5663479	1					
ANR	5663639	Identifier	temp		5663479	0					
ANR	5663640	ExpressionStatement	temp = temp * 255	259:20:9661:9676	5663479	14	True				
ANR	5663641	AssignmentExpression	temp = temp * 255		5663479	0		=			
ANR	5663642	Identifier	temp		5663479	0					
ANR	5663643	MultiplicativeExpression	temp * 255		5663479	1		*			
ANR	5663644	Identifier	temp		5663479	0					
ANR	5663645	PrimaryExpression	255		5663479	1					
ANR	5663646	IfStatement	if ( temp > 255 )		5663479	15					
ANR	5663647	Condition	temp > 255	260:24:9702:9711	5663479	0	True				
ANR	5663648	RelationalExpression	temp > 255		5663479	0		>			
ANR	5663649	Identifier	temp		5663479	0					
ANR	5663650	PrimaryExpression	255		5663479	1					
ANR	5663651	ExpressionStatement	temp = 255	260:36:9714:9724	5663479	1	True				
ANR	5663652	AssignmentExpression	temp = 255		5663479	0		=			
ANR	5663653	Identifier	temp		5663479	0					
ANR	5663654	PrimaryExpression	255		5663479	1					
ANR	5663655	IfStatement	if ( temp < 0 )		5663479	16					
ANR	5663656	Condition	temp < 0	261:24:9750:9757	5663479	0	True				
ANR	5663657	RelationalExpression	temp < 0		5663479	0		<			
ANR	5663658	Identifier	temp		5663479	0					
ANR	5663659	PrimaryExpression	0		5663479	1					
ANR	5663660	ExpressionStatement	temp = 0	261:35:9761:9769	5663479	1	True				
ANR	5663661	AssignmentExpression	temp = 0		5663479	0		=			
ANR	5663662	Identifier	temp		5663479	0					
ANR	5663663	PrimaryExpression	0		5663479	1					
ANR	5663664	ExpressionStatement	* curr_pos = ( unsigned char ) temp	262:20:9791:9823	5663479	17	True				
ANR	5663665	AssignmentExpression	* curr_pos = ( unsigned char ) temp		5663479	0		=			
ANR	5663666	UnaryOperationExpression	* curr_pos		5663479	0					
ANR	5663667	UnaryOperator	*		5663479	0					
ANR	5663668	Identifier	curr_pos		5663479	1					
ANR	5663669	CastExpression	( unsigned char ) temp		5663479	1					
ANR	5663670	CastTarget	unsigned char		5663479	0					
ANR	5663671	Identifier	temp		5663479	1					
ANR	5663672	Label	default :	263:16:9841:9848	5663479	18	True				
ANR	5663673	Identifier	default		5663479	0					
ANR	5663674	BreakStatement	break ;	264:20:9870:9875	5663479	19	True				
ANR	5663675	ExpressionStatement	curr_pos ++	266:12:9903:9913	5663479	1	True				
ANR	5663676	PostIncDecOperationExpression	curr_pos ++		5663479	0					
ANR	5663677	Identifier	curr_pos		5663479	0					
ANR	5663678	IncDec	++		5663479	1					
ANR	5663679	ExpressionStatement	psrc ++	267:12:9927:9933	5663479	2	True				
ANR	5663680	PostIncDecOperationExpression	psrc ++		5663479	0					
ANR	5663681	Identifier	psrc		5663479	0					
ANR	5663682	IncDec	++		5663479	1					
ANR	5663683	ReturnType	static void		5663479	1					
ANR	5663684	Identifier	decode_row_cie		5663479	2					
ANR	5663685	ParameterList	"const gx_image_enum * penum , const byte * psrc , int spp , byte * pdes , byte * bufend , gs_range range_array [ ]"		5663479	3					
ANR	5663686	Parameter	const gx_image_enum * penum	234:15:8636:8661	5663479	0	True				
ANR	5663687	ParameterType	const gx_image_enum *		5663479	0					
ANR	5663688	Identifier	penum		5663479	1					
ANR	5663689	Parameter	const byte * psrc	234:43:8664:8679	5663479	1	True				
ANR	5663690	ParameterType	const byte *		5663479	0					
ANR	5663691	Identifier	psrc		5663479	1					
ANR	5663692	Parameter	int spp	234:61:8682:8688	5663479	2	True				
ANR	5663693	ParameterType	int		5663479	0					
ANR	5663694	Identifier	spp		5663479	1					
ANR	5663695	Parameter	byte * pdes	234:70:8691:8700	5663479	3	True				
ANR	5663696	ParameterType	byte *		5663479	0					
ANR	5663697	Identifier	pdes		5663479	1					
ANR	5663698	Parameter	byte * bufend	235:16:8719:8730	5663479	4	True				
ANR	5663699	ParameterType	byte *		5663479	0					
ANR	5663700	Identifier	bufend		5663479	1					
ANR	5663701	Parameter	gs_range range_array [ ]	235:30:8733:8754	5663479	5	True				
ANR	5663702	ParameterType	gs_range [ ]		5663479	0					
ANR	5663703	Identifier	range_array		5663479	1					
ANR	5663704	CFGEntryNode	ENTRY		5663479		True				
ANR	5663705	CFGExitNode	EXIT		5663479		True				
ANR	5663706	Symbol	psrc		5663479						
ANR	5663707	Symbol	* penum		5663479						
ANR	5663708	Symbol	* * * penum		5663479						
ANR	5663709	Symbol	* penum -> map		5663479						
ANR	5663710	Symbol	* penum -> map [ k ] . decode_lookup		5663479						
ANR	5663711	Symbol	penum -> map [ k ] . decoding		5663479						
ANR	5663712	Symbol	* psrc		5663479						
ANR	5663713	Symbol	penum -> map [ k ] . decode_lookup		5663479						
ANR	5663714	Symbol	penum -> map [ k ] . decode_base		5663479						
ANR	5663715	Symbol	curr_pos		5663479						
ANR	5663716	Symbol	penum -> map		5663479						
ANR	5663717	Symbol	bufend		5663479						
ANR	5663718	Symbol	pdes		5663479						
ANR	5663719	Symbol	* curr_pos		5663479						
ANR	5663720	Symbol	* * penum		5663479						
ANR	5663721	Symbol	* * k		5663479						
ANR	5663722	Symbol	temp		5663479						
ANR	5663723	Symbol	penum -> map [ k ] . decode_factor		5663479						
ANR	5663724	Symbol	rescale_input_color		5663479						
ANR	5663725	Symbol	penum		5663479						
ANR	5663726	Symbol	k		5663479						
ANR	5663727	Symbol	spp		5663479						
ANR	5663728	Symbol	* k		5663479						
ANR	5663729	Symbol	* * psrc		5663479						
ANR	5663730	Symbol	* * penum -> map		5663479						
ANR	5663731	Symbol	range_array		5663479						
ANR	5663732	Symbol	* range_array		5663479						
ANR	5663733	Function	decode_row	272:0:9954:11087							
ANR	5663734	FunctionDef	"decode_row (const gx_image_enum * penum , const byte * psrc , int spp , byte * pdes , byte * bufend)"		5663733	0					
ANR	5663735	CompoundStatement		275:0:10074:11087	5663733	0					
ANR	5663736	IdentifierDeclStatement	byte * curr_pos = pdes ;	276:4:10080:10101	5663733	0	True				
ANR	5663737	IdentifierDecl	* curr_pos = pdes		5663733	0					
ANR	5663738	IdentifierDeclType	byte *		5663733	0					
ANR	5663739	Identifier	curr_pos		5663733	1					
ANR	5663740	AssignmentExpression	* curr_pos = pdes		5663733	2		=			
ANR	5663741	Identifier	pdes		5663733	0					
ANR	5663742	Identifier	pdes		5663733	1					
ANR	5663743	IdentifierDeclStatement	int k ;	277:4:10107:10112	5663733	1	True				
ANR	5663744	IdentifierDecl	k		5663733	0					
ANR	5663745	IdentifierDeclType	int		5663733	0					
ANR	5663746	Identifier	k		5663733	1					
ANR	5663747	IdentifierDeclStatement	float temp ;	278:4:10118:10128	5663733	2	True				
ANR	5663748	IdentifierDecl	temp		5663733	0					
ANR	5663749	IdentifierDeclType	float		5663733	0					
ANR	5663750	Identifier	temp		5663733	1					
ANR	5663751	WhileStatement	while ( curr_pos < bufend )		5663733	3					
ANR	5663752	Condition	curr_pos < bufend	280:12:10143:10159	5663733	0	True				
ANR	5663753	RelationalExpression	curr_pos < bufend		5663733	0		<			
ANR	5663754	Identifier	curr_pos		5663733	0					
ANR	5663755	Identifier	bufend		5663733	1					
ANR	5663756	CompoundStatement		6:32:88:88	5663733	1					
ANR	5663757	ForStatement	for ( k = 0 ; k < spp ; k ++ )		5663733	0					
ANR	5663758	ForInit	k = 0 ;	281:14:10179:10184	5663733	0	True				
ANR	5663759	AssignmentExpression	k = 0		5663733	0		=			
ANR	5663760	Identifier	k		5663733	0					
ANR	5663761	PrimaryExpression	0		5663733	1					
ANR	5663762	Condition	k < spp	281:21:10186:10192	5663733	1	True				
ANR	5663763	RelationalExpression	k < spp		5663733	0		<			
ANR	5663764	Identifier	k		5663733	0					
ANR	5663765	Identifier	spp		5663733	1					
ANR	5663766	PostIncDecOperationExpression	k ++	281:30:10195:10198	5663733	2	True				
ANR	5663767	Identifier	k		5663733	0					
ANR	5663768	IncDec	++		5663733	1					
ANR	5663769	CompoundStatement		7:37:127:127	5663733	3					
ANR	5663770	SwitchStatement	switch ( penum -> map [ k ] . decoding )		5663733	0					
ANR	5663771	Condition	penum -> map [ k ] . decoding	282:21:10225:10246	5663733	0	True				
ANR	5663772	MemberAccess	penum -> map [ k ] . decoding		5663733	0					
ANR	5663773	ArrayIndexing	penum -> map [ k ]		5663733	0					
ANR	5663774	PtrMemberAccess	penum -> map		5663733	0					
ANR	5663775	Identifier	penum		5663733	0					
ANR	5663776	Identifier	map		5663733	1					
ANR	5663777	Identifier	k		5663733	1					
ANR	5663778	Identifier	decoding		5663733	1					
ANR	5663779	CompoundStatement		8:46:175:175	5663733	1					
ANR	5663780	Label	case sd_none :	283:16:10268:10280	5663733	0	True				
ANR	5663781	Identifier	sd_none		5663733	0					
ANR	5663782	ExpressionStatement	* curr_pos = * psrc	284:20:10302:10319	5663733	1	True				
ANR	5663783	AssignmentExpression	* curr_pos = * psrc		5663733	0		=			
ANR	5663784	UnaryOperationExpression	* curr_pos		5663733	0					
ANR	5663785	UnaryOperator	*		5663733	0					
ANR	5663786	Identifier	curr_pos		5663733	1					
ANR	5663787	UnaryOperationExpression	* psrc		5663733	1					
ANR	5663788	UnaryOperator	*		5663733	0					
ANR	5663789	Identifier	psrc		5663733	1					
ANR	5663790	BreakStatement	break ;	285:20:10341:10346	5663733	2	True				
ANR	5663791	Label	case sd_lookup :	286:16:10364:10378	5663733	3	True				
ANR	5663792	Identifier	sd_lookup		5663733	0					
ANR	5663793	ExpressionStatement	temp = penum -> map [ k ] . decode_lookup [ ( * psrc ) >> 4 ] * 255.0	287:20:10400:10454	5663733	4	True				
ANR	5663794	AssignmentExpression	temp = penum -> map [ k ] . decode_lookup [ ( * psrc ) >> 4 ] * 255.0		5663733	0		=			
ANR	5663795	Identifier	temp		5663733	0					
ANR	5663796	MultiplicativeExpression	penum -> map [ k ] . decode_lookup [ ( * psrc ) >> 4 ] * 255.0		5663733	1		*			
ANR	5663797	ArrayIndexing	penum -> map [ k ] . decode_lookup [ ( * psrc ) >> 4 ]		5663733	0					
ANR	5663798	MemberAccess	penum -> map [ k ] . decode_lookup		5663733	0					
ANR	5663799	ArrayIndexing	penum -> map [ k ]		5663733	0					
ANR	5663800	PtrMemberAccess	penum -> map		5663733	0					
ANR	5663801	Identifier	penum		5663733	0					
ANR	5663802	Identifier	map		5663733	1					
ANR	5663803	Identifier	k		5663733	1					
ANR	5663804	Identifier	decode_lookup		5663733	1					
ANR	5663805	ShiftExpression	( * psrc ) >> 4		5663733	1		>>			
ANR	5663806	UnaryOperationExpression	* psrc		5663733	0					
ANR	5663807	UnaryOperator	*		5663733	0					
ANR	5663808	Identifier	psrc		5663733	1					
ANR	5663809	PrimaryExpression	4		5663733	1					
ANR	5663810	PrimaryExpression	255.0		5663733	1					
ANR	5663811	IfStatement	if ( temp > 255 )		5663733	5					
ANR	5663812	Condition	temp > 255	288:24:10480:10489	5663733	0	True				
ANR	5663813	RelationalExpression	temp > 255		5663733	0		>			
ANR	5663814	Identifier	temp		5663733	0					
ANR	5663815	PrimaryExpression	255		5663733	1					
ANR	5663816	ExpressionStatement	temp = 255	288:36:10492:10502	5663733	1	True				
ANR	5663817	AssignmentExpression	temp = 255		5663733	0		=			
ANR	5663818	Identifier	temp		5663733	0					
ANR	5663819	PrimaryExpression	255		5663733	1					
ANR	5663820	IfStatement	if ( temp < 0 )		5663733	6					
ANR	5663821	Condition	temp < 0	289:24:10528:10535	5663733	0	True				
ANR	5663822	RelationalExpression	temp < 0		5663733	0		<			
ANR	5663823	Identifier	temp		5663733	0					
ANR	5663824	PrimaryExpression	0		5663733	1					
ANR	5663825	ExpressionStatement	temp = 0	289:35:10539:10547	5663733	1	True				
ANR	5663826	AssignmentExpression	temp = 0		5663733	0		=			
ANR	5663827	Identifier	temp		5663733	0					
ANR	5663828	PrimaryExpression	0		5663733	1					
ANR	5663829	ExpressionStatement	* curr_pos = ( unsigned char ) temp	290:20:10569:10601	5663733	7	True				
ANR	5663830	AssignmentExpression	* curr_pos = ( unsigned char ) temp		5663733	0		=			
ANR	5663831	UnaryOperationExpression	* curr_pos		5663733	0					
ANR	5663832	UnaryOperator	*		5663733	0					
ANR	5663833	Identifier	curr_pos		5663733	1					
ANR	5663834	CastExpression	( unsigned char ) temp		5663733	1					
ANR	5663835	CastTarget	unsigned char		5663733	0					
ANR	5663836	Identifier	temp		5663733	1					
ANR	5663837	BreakStatement	break ;	291:20:10623:10628	5663733	8	True				
ANR	5663838	Label	case sd_compute :	292:16:10646:10661	5663733	9	True				
ANR	5663839	Identifier	sd_compute		5663733	0					
ANR	5663840	ExpressionStatement	temp = penum -> map [ k ] . decode_base + ( * psrc ) * penum -> map [ k ] . decode_factor	293:20:10683:10779	5663733	10	True				
ANR	5663841	AssignmentExpression	temp = penum -> map [ k ] . decode_base + ( * psrc ) * penum -> map [ k ] . decode_factor		5663733	0		=			
ANR	5663842	Identifier	temp		5663733	0					
ANR	5663843	AdditiveExpression	penum -> map [ k ] . decode_base + ( * psrc ) * penum -> map [ k ] . decode_factor		5663733	1		+			
ANR	5663844	MemberAccess	penum -> map [ k ] . decode_base		5663733	0					
ANR	5663845	ArrayIndexing	penum -> map [ k ]		5663733	0					
ANR	5663846	PtrMemberAccess	penum -> map		5663733	0					
ANR	5663847	Identifier	penum		5663733	0					
ANR	5663848	Identifier	map		5663733	1					
ANR	5663849	Identifier	k		5663733	1					
ANR	5663850	Identifier	decode_base		5663733	1					
ANR	5663851	MultiplicativeExpression	( * psrc ) * penum -> map [ k ] . decode_factor		5663733	1		*			
ANR	5663852	UnaryOperationExpression	* psrc		5663733	0					
ANR	5663853	UnaryOperator	*		5663733	0					
ANR	5663854	Identifier	psrc		5663733	1					
ANR	5663855	MemberAccess	penum -> map [ k ] . decode_factor		5663733	1					
ANR	5663856	ArrayIndexing	penum -> map [ k ]		5663733	0					
ANR	5663857	PtrMemberAccess	penum -> map		5663733	0					
ANR	5663858	Identifier	penum		5663733	0					
ANR	5663859	Identifier	map		5663733	1					
ANR	5663860	Identifier	k		5663733	1					
ANR	5663861	Identifier	decode_factor		5663733	1					
ANR	5663862	ExpressionStatement	temp *= 255	295:20:10801:10812	5663733	11	True				
ANR	5663863	AssignmentExpression	temp *= 255		5663733	0		*=			
ANR	5663864	Identifier	temp		5663733	0					
ANR	5663865	PrimaryExpression	255		5663733	1					
ANR	5663866	IfStatement	if ( temp > 255 )		5663733	12					
ANR	5663867	Condition	temp > 255	296:24:10838:10847	5663733	0	True				
ANR	5663868	RelationalExpression	temp > 255		5663733	0		>			
ANR	5663869	Identifier	temp		5663733	0					
ANR	5663870	PrimaryExpression	255		5663733	1					
ANR	5663871	ExpressionStatement	temp = 255	296:36:10850:10860	5663733	1	True				
ANR	5663872	AssignmentExpression	temp = 255		5663733	0		=			
ANR	5663873	Identifier	temp		5663733	0					
ANR	5663874	PrimaryExpression	255		5663733	1					
ANR	5663875	IfStatement	if ( temp < 0 )		5663733	13					
ANR	5663876	Condition	temp < 0	297:24:10886:10893	5663733	0	True				
ANR	5663877	RelationalExpression	temp < 0		5663733	0		<			
ANR	5663878	Identifier	temp		5663733	0					
ANR	5663879	PrimaryExpression	0		5663733	1					
ANR	5663880	ExpressionStatement	temp = 0	297:35:10897:10905	5663733	1	True				
ANR	5663881	AssignmentExpression	temp = 0		5663733	0		=			
ANR	5663882	Identifier	temp		5663733	0					
ANR	5663883	PrimaryExpression	0		5663733	1					
ANR	5663884	ExpressionStatement	* curr_pos = ( unsigned char ) temp	298:20:10927:10959	5663733	14	True				
ANR	5663885	AssignmentExpression	* curr_pos = ( unsigned char ) temp		5663733	0		=			
ANR	5663886	UnaryOperationExpression	* curr_pos		5663733	0					
ANR	5663887	UnaryOperator	*		5663733	0					
ANR	5663888	Identifier	curr_pos		5663733	1					
ANR	5663889	CastExpression	( unsigned char ) temp		5663733	1					
ANR	5663890	CastTarget	unsigned char		5663733	0					
ANR	5663891	Identifier	temp		5663733	1					
ANR	5663892	Label	default :	299:16:10977:10984	5663733	15	True				
ANR	5663893	Identifier	default		5663733	0					
ANR	5663894	BreakStatement	break ;	300:20:11006:11011	5663733	16	True				
ANR	5663895	ExpressionStatement	curr_pos ++	302:12:11039:11049	5663733	1	True				
ANR	5663896	PostIncDecOperationExpression	curr_pos ++		5663733	0					
ANR	5663897	Identifier	curr_pos		5663733	0					
ANR	5663898	IncDec	++		5663733	1					
ANR	5663899	ExpressionStatement	psrc ++	303:12:11063:11069	5663733	2	True				
ANR	5663900	PostIncDecOperationExpression	psrc ++		5663733	0					
ANR	5663901	Identifier	psrc		5663733	0					
ANR	5663902	IncDec	++		5663733	1					
ANR	5663903	ReturnType	static void		5663733	1					
ANR	5663904	Identifier	decode_row		5663733	2					
ANR	5663905	ParameterList	"const gx_image_enum * penum , const byte * psrc , int spp , byte * pdes , byte * bufend"		5663733	3					
ANR	5663906	Parameter	const gx_image_enum * penum	273:11:9977:10002	5663733	0	True				
ANR	5663907	ParameterType	const gx_image_enum *		5663733	0					
ANR	5663908	Identifier	penum		5663733	1					
ANR	5663909	Parameter	const byte * psrc	273:39:10005:10020	5663733	1	True				
ANR	5663910	ParameterType	const byte *		5663733	0					
ANR	5663911	Identifier	psrc		5663733	1					
ANR	5663912	Parameter	int spp	273:57:10023:10029	5663733	2	True				
ANR	5663913	ParameterType	int		5663733	0					
ANR	5663914	Identifier	spp		5663733	1					
ANR	5663915	Parameter	byte * pdes	273:66:10032:10041	5663733	3	True				
ANR	5663916	ParameterType	byte *		5663733	0					
ANR	5663917	Identifier	pdes		5663733	1					
ANR	5663918	Parameter	byte * bufend	274:16:10060:10071	5663733	4	True				
ANR	5663919	ParameterType	byte *		5663733	0					
ANR	5663920	Identifier	bufend		5663733	1					
ANR	5663921	CFGEntryNode	ENTRY		5663733		True				
ANR	5663922	CFGExitNode	EXIT		5663733		True				
ANR	5663923	Symbol	psrc		5663733						
ANR	5663924	Symbol	* * k		5663733						
ANR	5663925	Symbol	* penum		5663733						
ANR	5663926	Symbol	temp		5663733						
ANR	5663927	Symbol	* * * penum		5663733						
ANR	5663928	Symbol	penum -> map [ k ] . decode_factor		5663733						
ANR	5663929	Symbol	* penum -> map		5663733						
ANR	5663930	Symbol	* penum -> map [ k ] . decode_lookup		5663733						
ANR	5663931	Symbol	penum		5663733						
ANR	5663932	Symbol	penum -> map [ k ] . decoding		5663733						
ANR	5663933	Symbol	* psrc		5663733						
ANR	5663934	Symbol	penum -> map [ k ] . decode_lookup		5663733						
ANR	5663935	Symbol	k		5663733						
ANR	5663936	Symbol	penum -> map [ k ] . decode_base		5663733						
ANR	5663937	Symbol	curr_pos		5663733						
ANR	5663938	Symbol	penum -> map		5663733						
ANR	5663939	Symbol	spp		5663733						
ANR	5663940	Symbol	bufend		5663733						
ANR	5663941	Symbol	* k		5663733						
ANR	5663942	Symbol	pdes		5663733						
ANR	5663943	Symbol	* * penum -> map		5663733						
ANR	5663944	Symbol	* * psrc		5663733						
ANR	5663945	Symbol	* curr_pos		5663733						
ANR	5663946	Symbol	* * penum		5663733						
ANR	5663947	Function	image_color_icc_prep	310:0:11186:17727							
ANR	5663948	FunctionDef	"image_color_icc_prep (gx_image_enum * penum_orig , const byte * psrc , uint w , gx_device * dev , int * spp_cm_out , byte * * psrc_cm , byte * * psrc_cm_start , byte * * bufend , bool planar_out)"		5663947	0					
ANR	5663949	CompoundStatement		314:0:11416:17727	5663947	0					
ANR	5663950	Statement	const	315:4:11422:11426	5663947	0	True				
ANR	5663951	Statement	gx_image_enum	315:10:11428:11440	5663947	1	True				
ANR	5663952	Statement	*	315:24:11442:11442	5663947	2	True				
ANR	5663953	Statement	const	315:25:11443:11447	5663947	3	True				
ANR	5663954	ExpressionStatement	penum = penum_orig	315:31:11449:11467	5663947	4	True				
ANR	5663955	AssignmentExpression	penum = penum_orig		5663947	0		=			
ANR	5663956	Identifier	penum		5663947	0					
ANR	5663957	Identifier	penum_orig		5663947	1					
ANR	5663958	IdentifierDeclStatement	const gs_gstate * pgs = penum -> pgs ;	316:4:11497:11530	5663947	5	True				
ANR	5663959	IdentifierDecl	* pgs = penum -> pgs		5663947	0					
ANR	5663960	IdentifierDeclType	const gs_gstate *		5663947	0					
ANR	5663961	Identifier	pgs		5663947	1					
ANR	5663962	AssignmentExpression	* pgs = penum -> pgs		5663947	2		=			
ANR	5663963	Identifier	pgs		5663947	0					
ANR	5663964	PtrMemberAccess	penum -> pgs		5663947	1					
ANR	5663965	Identifier	penum		5663947	0					
ANR	5663966	Identifier	pgs		5663947	1					
ANR	5663967	IdentifierDeclStatement	bool need_decode = penum -> icc_setup . need_decode ;	317:4:11536:11583	5663947	6	True				
ANR	5663968	IdentifierDecl	need_decode = penum -> icc_setup . need_decode		5663947	0					
ANR	5663969	IdentifierDeclType	bool		5663947	0					
ANR	5663970	Identifier	need_decode		5663947	1					
ANR	5663971	AssignmentExpression	need_decode = penum -> icc_setup . need_decode		5663947	2		=			
ANR	5663972	Identifier	need_decode		5663947	0					
ANR	5663973	MemberAccess	penum -> icc_setup . need_decode		5663947	1					
ANR	5663974	PtrMemberAccess	penum -> icc_setup		5663947	0					
ANR	5663975	Identifier	penum		5663947	0					
ANR	5663976	Identifier	icc_setup		5663947	1					
ANR	5663977	Identifier	need_decode		5663947	1					
ANR	5663978	IdentifierDeclStatement	gsicc_bufferdesc_t input_buff_desc ;	318:4:11589:11623	5663947	7	True				
ANR	5663979	IdentifierDecl	input_buff_desc		5663947	0					
ANR	5663980	IdentifierDeclType	gsicc_bufferdesc_t		5663947	0					
ANR	5663981	Identifier	input_buff_desc		5663947	1					
ANR	5663982	IdentifierDeclStatement	gsicc_bufferdesc_t output_buff_desc ;	319:4:11629:11664	5663947	8	True				
ANR	5663983	IdentifierDecl	output_buff_desc		5663947	0					
ANR	5663984	IdentifierDeclType	gsicc_bufferdesc_t		5663947	0					
ANR	5663985	Identifier	output_buff_desc		5663947	1					
ANR	5663986	IdentifierDeclStatement	"int num_pixels , spp_cm ;"	320:4:11670:11692	5663947	9	True				
ANR	5663987	IdentifierDecl	num_pixels		5663947	0					
ANR	5663988	IdentifierDeclType	int		5663947	0					
ANR	5663989	Identifier	num_pixels		5663947	1					
ANR	5663990	IdentifierDecl	spp_cm		5663947	1					
ANR	5663991	IdentifierDeclType	int		5663947	0					
ANR	5663992	Identifier	spp_cm		5663947	1					
ANR	5663993	IdentifierDeclStatement	int spp = penum -> spp ;	321:4:11698:11718	5663947	10	True				
ANR	5663994	IdentifierDecl	spp = penum -> spp		5663947	0					
ANR	5663995	IdentifierDeclType	int		5663947	0					
ANR	5663996	Identifier	spp		5663947	1					
ANR	5663997	AssignmentExpression	spp = penum -> spp		5663947	2		=			
ANR	5663998	Identifier	spp		5663947	0					
ANR	5663999	PtrMemberAccess	penum -> spp		5663947	1					
ANR	5664000	Identifier	penum		5663947	0					
ANR	5664001	Identifier	spp		5663947	1					
ANR	5664002	IdentifierDeclStatement	bool force_planar = false ;	322:4:11724:11749	5663947	11	True				
ANR	5664003	IdentifierDecl	force_planar = false		5663947	0					
ANR	5664004	IdentifierDeclType	bool		5663947	0					
ANR	5664005	Identifier	force_planar		5663947	1					
ANR	5664006	AssignmentExpression	force_planar = false		5663947	2		=			
ANR	5664007	Identifier	false		5663947	0					
ANR	5664008	Identifier	false		5663947	1					
ANR	5664009	IdentifierDeclStatement	int num_des_comps ;	323:4:11755:11772	5663947	12	True				
ANR	5664010	IdentifierDecl	num_des_comps		5663947	0					
ANR	5664011	IdentifierDeclType	int		5663947	0					
ANR	5664012	Identifier	num_des_comps		5663947	1					
ANR	5664013	IdentifierDeclStatement	int code ;	324:4:11778:11786	5663947	13	True				
ANR	5664014	IdentifierDecl	code		5663947	0					
ANR	5664015	IdentifierDeclType	int		5663947	0					
ANR	5664016	Identifier	code		5663947	1					
ANR	5664017	IdentifierDeclStatement	cmm_dev_profile_t * dev_profile ;	325:4:11792:11822	5663947	14	True				
ANR	5664018	IdentifierDecl	* dev_profile		5663947	0					
ANR	5664019	IdentifierDeclType	cmm_dev_profile_t *		5663947	0					
ANR	5664020	Identifier	dev_profile		5663947	1					
ANR	5664021	IdentifierDeclStatement	byte * psrc_decode ;	326:4:11828:11845	5663947	15	True				
ANR	5664022	IdentifierDecl	* psrc_decode		5663947	0					
ANR	5664023	IdentifierDeclType	byte *		5663947	0					
ANR	5664024	Identifier	psrc_decode		5663947	1					
ANR	5664025	IdentifierDeclStatement	const byte * planar_src ;	327:4:11851:11873	5663947	16	True				
ANR	5664026	IdentifierDecl	* planar_src		5663947	0					
ANR	5664027	IdentifierDeclType	const byte *		5663947	0					
ANR	5664028	Identifier	planar_src		5663947	1					
ANR	5664029	IdentifierDeclStatement	byte * planar_des ;	328:4:11879:11895	5663947	17	True				
ANR	5664030	IdentifierDecl	* planar_des		5663947	0					
ANR	5664031	IdentifierDeclType	byte *		5663947	0					
ANR	5664032	Identifier	planar_des		5663947	1					
ANR	5664033	IdentifierDeclStatement	"int j , k ;"	329:4:11901:11909	5663947	18	True				
ANR	5664034	IdentifierDecl	j		5663947	0					
ANR	5664035	IdentifierDeclType	int		5663947	0					
ANR	5664036	Identifier	j		5663947	1					
ANR	5664037	IdentifierDecl	k		5663947	1					
ANR	5664038	IdentifierDeclType	int		5663947	0					
ANR	5664039	Identifier	k		5663947	1					
ANR	5664040	IdentifierDeclStatement	int width ;	330:4:11915:11924	5663947	19	True				
ANR	5664041	IdentifierDecl	width		5663947	0					
ANR	5664042	IdentifierDeclType	int		5663947	0					
ANR	5664043	Identifier	width		5663947	1					
ANR	5664044	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	332:4:11931:11983	5663947	20	True				
ANR	5664045	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		5663947	0		=			
ANR	5664046	Identifier	code		5663947	0					
ANR	5664047	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		5663947	1					
ANR	5664048	Callee	"dev_proc ( dev , get_profile )"		5663947	0					
ANR	5664049	CallExpression	"dev_proc ( dev , get_profile )"		5663947	0					
ANR	5664050	Callee	dev_proc		5663947	0					
ANR	5664051	Identifier	dev_proc		5663947	0					
ANR	5664052	ArgumentList	dev		5663947	1					
ANR	5664053	Argument	dev		5663947	0					
ANR	5664054	Identifier	dev		5663947	0					
ANR	5664055	Argument	get_profile		5663947	1					
ANR	5664056	Identifier	get_profile		5663947	0					
ANR	5664057	ArgumentList	dev		5663947	1					
ANR	5664058	Argument	dev		5663947	0					
ANR	5664059	Identifier	dev		5663947	0					
ANR	5664060	Argument	& dev_profile		5663947	1					
ANR	5664061	UnaryOperationExpression	& dev_profile		5663947	0					
ANR	5664062	UnaryOperator	&		5663947	0					
ANR	5664063	Identifier	dev_profile		5663947	1					
ANR	5664064	IfStatement	if ( code < 0 )		5663947	21					
ANR	5664065	Condition	code < 0	333:8:11993:12000	5663947	0	True				
ANR	5664066	RelationalExpression	code < 0		5663947	0		<			
ANR	5664067	Identifier	code		5663947	0					
ANR	5664068	PrimaryExpression	0		5663947	1					
ANR	5664069	ReturnStatement	return code ;	333:18:12003:12014	5663947	1	True				
ANR	5664070	Identifier	code		5663947	0					
ANR	5664071	ExpressionStatement	num_des_comps = gsicc_get_device_profile_comps ( dev_profile )	334:4:12020:12079	5663947	22	True				
ANR	5664072	AssignmentExpression	num_des_comps = gsicc_get_device_profile_comps ( dev_profile )		5663947	0		=			
ANR	5664073	Identifier	num_des_comps		5663947	0					
ANR	5664074	CallExpression	gsicc_get_device_profile_comps ( dev_profile )		5663947	1					
ANR	5664075	Callee	gsicc_get_device_profile_comps		5663947	0					
ANR	5664076	Identifier	gsicc_get_device_profile_comps		5663947	0					
ANR	5664077	ArgumentList	dev_profile		5663947	1					
ANR	5664078	Argument	dev_profile		5663947	0					
ANR	5664079	Identifier	dev_profile		5663947	0					
ANR	5664080	IfStatement	if ( penum -> icc_link == NULL )		5663947	23					
ANR	5664081	Condition	penum -> icc_link == NULL	335:8:12089:12111	5663947	0	True				
ANR	5664082	EqualityExpression	penum -> icc_link == NULL		5663947	0		==			
ANR	5664083	PtrMemberAccess	penum -> icc_link		5663947	0					
ANR	5664084	Identifier	penum		5663947	0					
ANR	5664085	Identifier	icc_link		5663947	1					
ANR	5664086	Identifier	NULL		5663947	1					
ANR	5664087	CompoundStatement		22:33:697:697	5663947	1					
ANR	5664088	ReturnStatement	"return gs_rethrow ( - 1 , ""ICC Link not created during image render color"" ) ;"	336:8:12124:12195	5663947	0	True				
ANR	5664089	CallExpression	"gs_rethrow ( - 1 , ""ICC Link not created during image render color"" )"		5663947	0					
ANR	5664090	Callee	gs_rethrow		5663947	0					
ANR	5664091	Identifier	gs_rethrow		5663947	0					
ANR	5664092	ArgumentList	- 1		5663947	1					
ANR	5664093	Argument	- 1		5663947	0					
ANR	5664094	UnaryOperationExpression	- 1		5663947	0					
ANR	5664095	UnaryOperator	-		5663947	0					
ANR	5664096	PrimaryExpression	1		5663947	1					
ANR	5664097	Argument	"""ICC Link not created during image render color"""		5663947	1					
ANR	5664098	PrimaryExpression	"""ICC Link not created during image render color"""		5663947	0					
ANR	5664099	IfStatement	if ( num_des_comps != 1 && planar_out == true )		5663947	24					
ANR	5664100	Condition	num_des_comps != 1 && planar_out == true	343:8:12574:12613	5663947	0	True				
ANR	5664101	AndExpression	num_des_comps != 1 && planar_out == true		5663947	0		&&			
ANR	5664102	EqualityExpression	num_des_comps != 1		5663947	0		!=			
ANR	5664103	Identifier	num_des_comps		5663947	0					
ANR	5664104	PrimaryExpression	1		5663947	1					
ANR	5664105	EqualityExpression	planar_out == true		5663947	1		==			
ANR	5664106	Identifier	planar_out		5663947	0					
ANR	5664107	Identifier	true		5663947	1					
ANR	5664108	CompoundStatement		30:50:1199:1199	5663947	1					
ANR	5664109	ExpressionStatement	force_planar = true	344:8:12626:12645	5663947	0	True				
ANR	5664110	AssignmentExpression	force_planar = true		5663947	0		=			
ANR	5664111	Identifier	force_planar		5663947	0					
ANR	5664112	Identifier	true		5663947	1					
ANR	5664113	IfStatement	if ( penum -> icc_link -> is_identity && ! need_decode && ! force_planar )		5663947	25					
ANR	5664114	Condition	penum -> icc_link -> is_identity && ! need_decode && ! force_planar	346:8:12661:12721	5663947	0	True				
ANR	5664115	AndExpression	penum -> icc_link -> is_identity && ! need_decode && ! force_planar		5663947	0		&&			
ANR	5664116	PtrMemberAccess	penum -> icc_link -> is_identity		5663947	0					
ANR	5664117	PtrMemberAccess	penum -> icc_link		5663947	0					
ANR	5664118	Identifier	penum		5663947	0					
ANR	5664119	Identifier	icc_link		5663947	1					
ANR	5664120	Identifier	is_identity		5663947	1					
ANR	5664121	AndExpression	! need_decode && ! force_planar		5663947	1		&&			
ANR	5664122	UnaryOperationExpression	! need_decode		5663947	0					
ANR	5664123	UnaryOperator	!		5663947	0					
ANR	5664124	Identifier	need_decode		5663947	1					
ANR	5664125	UnaryOperationExpression	! force_planar		5663947	1					
ANR	5664126	UnaryOperator	!		5663947	0					
ANR	5664127	Identifier	force_planar		5663947	1					
ANR	5664128	CompoundStatement		33:71:1307:1307	5663947	1					
ANR	5664129	ExpressionStatement	* psrc_cm = ( unsigned char * ) psrc	348:8:12786:12819	5663947	0	True				
ANR	5664130	AssignmentExpression	* psrc_cm = ( unsigned char * ) psrc		5663947	0		=			
ANR	5664131	UnaryOperationExpression	* psrc_cm		5663947	0					
ANR	5664132	UnaryOperator	*		5663947	0					
ANR	5664133	Identifier	psrc_cm		5663947	1					
ANR	5664134	CastExpression	( unsigned char * ) psrc		5663947	1					
ANR	5664135	CastTarget	unsigned char *		5663947	0					
ANR	5664136	Identifier	psrc		5663947	1					
ANR	5664137	ExpressionStatement	spp_cm = spp	349:8:12829:12841	5663947	1	True				
ANR	5664138	AssignmentExpression	spp_cm = spp		5663947	0		=			
ANR	5664139	Identifier	spp_cm		5663947	0					
ANR	5664140	Identifier	spp		5663947	1					
ANR	5664141	ExpressionStatement	* bufend = * psrc_cm + w	350:8:12851:12873	5663947	2	True				
ANR	5664142	AssignmentExpression	* bufend = * psrc_cm + w		5663947	0		=			
ANR	5664143	UnaryOperationExpression	* bufend		5663947	0					
ANR	5664144	UnaryOperator	*		5663947	0					
ANR	5664145	Identifier	bufend		5663947	1					
ANR	5664146	AdditiveExpression	* psrc_cm + w		5663947	1		+			
ANR	5664147	UnaryOperationExpression	* psrc_cm		5663947	0					
ANR	5664148	UnaryOperator	*		5663947	0					
ANR	5664149	Identifier	psrc_cm		5663947	1					
ANR	5664150	Identifier	w		5663947	1					
ANR	5664151	ExpressionStatement	* psrc_cm_start = NULL	351:8:12883:12904	5663947	3	True				
ANR	5664152	AssignmentExpression	* psrc_cm_start = NULL		5663947	0		=			
ANR	5664153	UnaryOperationExpression	* psrc_cm_start		5663947	0					
ANR	5664154	UnaryOperator	*		5663947	0					
ANR	5664155	Identifier	psrc_cm_start		5663947	1					
ANR	5664156	Identifier	NULL		5663947	1					
ANR	5664157	ElseStatement	else		5663947	0					
ANR	5664158	CompoundStatement		39:11:1500:1500	5663947	0					
ANR	5664159	ExpressionStatement	spp_cm = num_des_comps	353:8:12927:12949	5663947	0	True				
ANR	5664160	AssignmentExpression	spp_cm = num_des_comps		5663947	0		=			
ANR	5664161	Identifier	spp_cm		5663947	0					
ANR	5664162	Identifier	num_des_comps		5663947	1					
ANR	5664163	ExpressionStatement	"* psrc_cm = gs_alloc_bytes ( pgs -> memory , w * spp_cm / spp , ""image_color_icc_prep"" )"	354:8:12959:13072	5663947	1	True				
ANR	5664164	AssignmentExpression	"* psrc_cm = gs_alloc_bytes ( pgs -> memory , w * spp_cm / spp , ""image_color_icc_prep"" )"		5663947	0		=			
ANR	5664165	UnaryOperationExpression	* psrc_cm		5663947	0					
ANR	5664166	UnaryOperator	*		5663947	0					
ANR	5664167	Identifier	psrc_cm		5663947	1					
ANR	5664168	CallExpression	"gs_alloc_bytes ( pgs -> memory , w * spp_cm / spp , ""image_color_icc_prep"" )"		5663947	1					
ANR	5664169	Callee	gs_alloc_bytes		5663947	0					
ANR	5664170	Identifier	gs_alloc_bytes		5663947	0					
ANR	5664171	ArgumentList	pgs -> memory		5663947	1					
ANR	5664172	Argument	pgs -> memory		5663947	0					
ANR	5664173	PtrMemberAccess	pgs -> memory		5663947	0					
ANR	5664174	Identifier	pgs		5663947	0					
ANR	5664175	Identifier	memory		5663947	1					
ANR	5664176	Argument	w * spp_cm / spp		5663947	1					
ANR	5664177	MultiplicativeExpression	w * spp_cm / spp		5663947	0		*			
ANR	5664178	Identifier	w		5663947	0					
ANR	5664179	MultiplicativeExpression	spp_cm / spp		5663947	1		/			
ANR	5664180	Identifier	spp_cm		5663947	0					
ANR	5664181	Identifier	spp		5663947	1					
ANR	5664182	Argument	"""image_color_icc_prep"""		5663947	2					
ANR	5664183	PrimaryExpression	"""image_color_icc_prep"""		5663947	0					
ANR	5664184	ExpressionStatement	* psrc_cm_start = * psrc_cm	356:8:13082:13107	5663947	2	True				
ANR	5664185	AssignmentExpression	* psrc_cm_start = * psrc_cm		5663947	0		=			
ANR	5664186	UnaryOperationExpression	* psrc_cm_start		5663947	0					
ANR	5664187	UnaryOperator	*		5663947	0					
ANR	5664188	Identifier	psrc_cm_start		5663947	1					
ANR	5664189	UnaryOperationExpression	* psrc_cm		5663947	1					
ANR	5664190	UnaryOperator	*		5663947	0					
ANR	5664191	Identifier	psrc_cm		5663947	1					
ANR	5664192	ExpressionStatement	* bufend = * psrc_cm + w * spp_cm / spp	357:8:13117:13153	5663947	3	True				
ANR	5664193	AssignmentExpression	* bufend = * psrc_cm + w * spp_cm / spp		5663947	0		=			
ANR	5664194	UnaryOperationExpression	* bufend		5663947	0					
ANR	5664195	UnaryOperator	*		5663947	0					
ANR	5664196	Identifier	bufend		5663947	1					
ANR	5664197	AdditiveExpression	* psrc_cm + w * spp_cm / spp		5663947	1		+			
ANR	5664198	UnaryOperationExpression	* psrc_cm		5663947	0					
ANR	5664199	UnaryOperator	*		5663947	0					
ANR	5664200	Identifier	psrc_cm		5663947	1					
ANR	5664201	MultiplicativeExpression	w * spp_cm / spp		5663947	1		*			
ANR	5664202	Identifier	w		5663947	0					
ANR	5664203	MultiplicativeExpression	spp_cm / spp		5663947	1		/			
ANR	5664204	Identifier	spp_cm		5663947	0					
ANR	5664205	Identifier	spp		5663947	1					
ANR	5664206	IfStatement	if ( penum -> icc_link -> is_identity )		5663947	4					
ANR	5664207	Condition	penum -> icc_link -> is_identity	358:12:13167:13194	5663947	0	True				
ANR	5664208	PtrMemberAccess	penum -> icc_link -> is_identity		5663947	0					
ANR	5664209	PtrMemberAccess	penum -> icc_link		5663947	0					
ANR	5664210	Identifier	penum		5663947	0					
ANR	5664211	Identifier	icc_link		5663947	1					
ANR	5664212	Identifier	is_identity		5663947	1					
ANR	5664213	CompoundStatement		45:42:1780:1780	5663947	1					
ANR	5664214	IfStatement	if ( ! force_planar )		5663947	0					
ANR	5664215	Condition	! force_planar	359:16:13215:13227	5663947	0	True				
ANR	5664216	UnaryOperationExpression	! force_planar		5663947	0					
ANR	5664217	UnaryOperator	!		5663947	0					
ANR	5664218	Identifier	force_planar		5663947	1					
ANR	5664219	CompoundStatement		46:31:1813:1813	5663947	1					
ANR	5664220	ExpressionStatement	"decode_row ( penum , psrc , spp , * psrc_cm , * bufend )"	361:16:13335:13382	5663947	0	True				
ANR	5664221	CallExpression	"decode_row ( penum , psrc , spp , * psrc_cm , * bufend )"		5663947	0					
ANR	5664222	Callee	decode_row		5663947	0					
ANR	5664223	Identifier	decode_row		5663947	0					
ANR	5664224	ArgumentList	penum		5663947	1					
ANR	5664225	Argument	penum		5663947	0					
ANR	5664226	Identifier	penum		5663947	0					
ANR	5664227	Argument	psrc		5663947	1					
ANR	5664228	Identifier	psrc		5663947	0					
ANR	5664229	Argument	spp		5663947	2					
ANR	5664230	Identifier	spp		5663947	0					
ANR	5664231	Argument	* psrc_cm		5663947	3					
ANR	5664232	UnaryOperationExpression	* psrc_cm		5663947	0					
ANR	5664233	UnaryOperator	*		5663947	0					
ANR	5664234	Identifier	psrc_cm		5663947	1					
ANR	5664235	Argument	* bufend		5663947	4					
ANR	5664236	UnaryOperationExpression	* bufend		5663947	0					
ANR	5664237	UnaryOperator	*		5663947	0					
ANR	5664238	Identifier	bufend		5663947	1					
ANR	5664239	ElseStatement	else		5663947	0					
ANR	5664240	CompoundStatement		49:19:1986:1986	5663947	0					
ANR	5664241	IfStatement	if ( need_decode )		5663947	0					
ANR	5664242	Condition	need_decode	366:20:13662:13672	5663947	0	True				
ANR	5664243	Identifier	need_decode		5663947	0					
ANR	5664244	CompoundStatement		53:33:2258:2258	5663947	1					
ANR	5664245	ExpressionStatement	"psrc_decode = gs_alloc_bytes ( pgs -> memory , w , ""image_color_icc_prep"" )"	368:20:13754:13873	5663947	0	True				
ANR	5664246	AssignmentExpression	"psrc_decode = gs_alloc_bytes ( pgs -> memory , w , ""image_color_icc_prep"" )"		5663947	0		=			
ANR	5664247	Identifier	psrc_decode		5663947	0					
ANR	5664248	CallExpression	"gs_alloc_bytes ( pgs -> memory , w , ""image_color_icc_prep"" )"		5663947	1					
ANR	5664249	Callee	gs_alloc_bytes		5663947	0					
ANR	5664250	Identifier	gs_alloc_bytes		5663947	0					
ANR	5664251	ArgumentList	pgs -> memory		5663947	1					
ANR	5664252	Argument	pgs -> memory		5663947	0					
ANR	5664253	PtrMemberAccess	pgs -> memory		5663947	0					
ANR	5664254	Identifier	pgs		5663947	0					
ANR	5664255	Identifier	memory		5663947	1					
ANR	5664256	Argument	w		5663947	1					
ANR	5664257	Identifier	w		5663947	0					
ANR	5664258	Argument	"""image_color_icc_prep"""		5663947	2					
ANR	5664259	PrimaryExpression	"""image_color_icc_prep"""		5663947	0					
ANR	5664260	IfStatement	if ( ! penum -> use_cie_range )		5663947	1					
ANR	5664261	Condition	! penum -> use_cie_range	370:24:13899:13919	5663947	0	True				
ANR	5664262	UnaryOperationExpression	! penum -> use_cie_range		5663947	0					
ANR	5664263	UnaryOperator	!		5663947	0					
ANR	5664264	PtrMemberAccess	penum -> use_cie_range		5663947	1					
ANR	5664265	Identifier	penum		5663947	0					
ANR	5664266	Identifier	use_cie_range		5663947	1					
ANR	5664267	CompoundStatement		57:47:2505:2505	5663947	1					
ANR	5664268	ExpressionStatement	"decode_row ( penum , psrc , spp , psrc_decode , psrc_decode + w )"	371:24:13948:14004	5663947	0	True				
ANR	5664269	CallExpression	"decode_row ( penum , psrc , spp , psrc_decode , psrc_decode + w )"		5663947	0					
ANR	5664270	Callee	decode_row		5663947	0					
ANR	5664271	Identifier	decode_row		5663947	0					
ANR	5664272	ArgumentList	penum		5663947	1					
ANR	5664273	Argument	penum		5663947	0					
ANR	5664274	Identifier	penum		5663947	0					
ANR	5664275	Argument	psrc		5663947	1					
ANR	5664276	Identifier	psrc		5663947	0					
ANR	5664277	Argument	spp		5663947	2					
ANR	5664278	Identifier	spp		5663947	0					
ANR	5664279	Argument	psrc_decode		5663947	3					
ANR	5664280	Identifier	psrc_decode		5663947	0					
ANR	5664281	Argument	psrc_decode + w		5663947	4					
ANR	5664282	AdditiveExpression	psrc_decode + w		5663947	0		+			
ANR	5664283	Identifier	psrc_decode		5663947	0					
ANR	5664284	Identifier	w		5663947	1					
ANR	5664285	ElseStatement	else		5663947	0					
ANR	5664286	CompoundStatement		59:27:2616:2616	5663947	0					
ANR	5664287	ExpressionStatement	"decode_row_cie ( penum , psrc , spp , psrc_decode , psrc_decode + w , get_cie_range ( penum -> pcs ) )"	374:24:14138:14267	5663947	0	True				
ANR	5664288	CallExpression	"decode_row_cie ( penum , psrc , spp , psrc_decode , psrc_decode + w , get_cie_range ( penum -> pcs ) )"		5663947	0					
ANR	5664289	Callee	decode_row_cie		5663947	0					
ANR	5664290	Identifier	decode_row_cie		5663947	0					
ANR	5664291	ArgumentList	penum		5663947	1					
ANR	5664292	Argument	penum		5663947	0					
ANR	5664293	Identifier	penum		5663947	0					
ANR	5664294	Argument	psrc		5663947	1					
ANR	5664295	Identifier	psrc		5663947	0					
ANR	5664296	Argument	spp		5663947	2					
ANR	5664297	Identifier	spp		5663947	0					
ANR	5664298	Argument	psrc_decode		5663947	3					
ANR	5664299	Identifier	psrc_decode		5663947	0					
ANR	5664300	Argument	psrc_decode + w		5663947	4					
ANR	5664301	AdditiveExpression	psrc_decode + w		5663947	0		+			
ANR	5664302	Identifier	psrc_decode		5663947	0					
ANR	5664303	Identifier	w		5663947	1					
ANR	5664304	Argument	get_cie_range ( penum -> pcs )		5663947	5					
ANR	5664305	CallExpression	get_cie_range ( penum -> pcs )		5663947	0					
ANR	5664306	Callee	get_cie_range		5663947	0					
ANR	5664307	Identifier	get_cie_range		5663947	0					
ANR	5664308	ArgumentList	penum -> pcs		5663947	1					
ANR	5664309	Argument	penum -> pcs		5663947	0					
ANR	5664310	PtrMemberAccess	penum -> pcs		5663947	0					
ANR	5664311	Identifier	penum		5663947	0					
ANR	5664312	Identifier	pcs		5663947	1					
ANR	5664313	ExpressionStatement	planar_src = psrc_decode	377:20:14311:14335	5663947	2	True				
ANR	5664314	AssignmentExpression	planar_src = psrc_decode		5663947	0		=			
ANR	5664315	Identifier	planar_src		5663947	0					
ANR	5664316	Identifier	psrc_decode		5663947	1					
ANR	5664317	ElseStatement	else		5663947	0					
ANR	5664318	CompoundStatement		65:23:2943:2943	5663947	0					
ANR	5664319	ExpressionStatement	psrc_decode = NULL	379:20:14382:14400	5663947	0	True				
ANR	5664320	AssignmentExpression	psrc_decode = NULL		5663947	0		=			
ANR	5664321	Identifier	psrc_decode		5663947	0					
ANR	5664322	Identifier	NULL		5663947	1					
ANR	5664323	ExpressionStatement	planar_src = psrc	380:20:14422:14439	5663947	1	True				
ANR	5664324	AssignmentExpression	planar_src = psrc		5663947	0		=			
ANR	5664325	Identifier	planar_src		5663947	0					
ANR	5664326	Identifier	psrc		5663947	1					
ANR	5664327	ExpressionStatement	width = w / spp	383:16:14511:14524	5663947	1	True				
ANR	5664328	AssignmentExpression	width = w / spp		5663947	0		=			
ANR	5664329	Identifier	width		5663947	0					
ANR	5664330	MultiplicativeExpression	w / spp		5663947	1		/			
ANR	5664331	Identifier	w		5663947	0					
ANR	5664332	Identifier	spp		5663947	1					
ANR	5664333	ExpressionStatement	planar_des = * psrc_cm	384:16:14542:14563	5663947	2	True				
ANR	5664334	AssignmentExpression	planar_des = * psrc_cm		5663947	0		=			
ANR	5664335	Identifier	planar_des		5663947	0					
ANR	5664336	UnaryOperationExpression	* psrc_cm		5663947	1					
ANR	5664337	UnaryOperator	*		5663947	0					
ANR	5664338	Identifier	psrc_cm		5663947	1					
ANR	5664339	ForStatement	for ( k = 0 ; k < width ; k ++ )		5663947	3					
ANR	5664340	ForInit	k = 0 ;	385:21:14586:14591	5663947	0	True				
ANR	5664341	AssignmentExpression	k = 0		5663947	0		=			
ANR	5664342	Identifier	k		5663947	0					
ANR	5664343	PrimaryExpression	0		5663947	1					
ANR	5664344	Condition	k < width	385:28:14593:14601	5663947	1	True				
ANR	5664345	RelationalExpression	k < width		5663947	0		<			
ANR	5664346	Identifier	k		5663947	0					
ANR	5664347	Identifier	width		5663947	1					
ANR	5664348	PostIncDecOperationExpression	k ++	385:39:14604:14606	5663947	2	True				
ANR	5664349	Identifier	k		5663947	0					
ANR	5664350	IncDec	++		5663947	1					
ANR	5664351	CompoundStatement		72:44:3192:3192	5663947	3					
ANR	5664352	ForStatement	for ( j = 0 ; j < spp ; j ++ )		5663947	0					
ANR	5664353	ForInit	j = 0 ;	386:25:14636:14641	5663947	0	True				
ANR	5664354	AssignmentExpression	j = 0		5663947	0		=			
ANR	5664355	Identifier	j		5663947	0					
ANR	5664356	PrimaryExpression	0		5663947	1					
ANR	5664357	Condition	j < spp	386:32:14643:14649	5663947	1	True				
ANR	5664358	RelationalExpression	j < spp		5663947	0		<			
ANR	5664359	Identifier	j		5663947	0					
ANR	5664360	Identifier	spp		5663947	1					
ANR	5664361	PostIncDecOperationExpression	j ++	386:41:14652:14654	5663947	2	True				
ANR	5664362	Identifier	j		5663947	0					
ANR	5664363	IncDec	++		5663947	1					
ANR	5664364	CompoundStatement		73:46:3240:3240	5663947	3					
ANR	5664365	ExpressionStatement	* ( planar_des + j * width ) = * planar_src ++	387:24:14683:14724	5663947	0	True				
ANR	5664366	AssignmentExpression	* ( planar_des + j * width ) = * planar_src ++		5663947	0		=			
ANR	5664367	UnaryOperationExpression	* ( planar_des + j * width )		5663947	0					
ANR	5664368	UnaryOperator	*		5663947	0					
ANR	5664369	AdditiveExpression	planar_des + j * width		5663947	1		+			
ANR	5664370	Identifier	planar_des		5663947	0					
ANR	5664371	MultiplicativeExpression	j * width		5663947	1		*			
ANR	5664372	Identifier	j		5663947	0					
ANR	5664373	Identifier	width		5663947	1					
ANR	5664374	UnaryOperationExpression	* planar_src ++		5663947	1					
ANR	5664375	UnaryOperator	*		5663947	0					
ANR	5664376	PostIncDecOperationExpression	planar_src ++		5663947	1					
ANR	5664377	Identifier	planar_src		5663947	0					
ANR	5664378	IncDec	++		5663947	1					
ANR	5664379	ExpressionStatement	planar_des ++	389:20:14768:14780	5663947	1	True				
ANR	5664380	PostIncDecOperationExpression	planar_des ++		5663947	0					
ANR	5664381	Identifier	planar_des		5663947	0					
ANR	5664382	IncDec	++		5663947	1					
ANR	5664383	IfStatement	if ( psrc_decode != NULL )		5663947	4					
ANR	5664384	Condition	psrc_decode != NULL	392:20:14871:14889	5663947	0	True				
ANR	5664385	EqualityExpression	psrc_decode != NULL		5663947	0		!=			
ANR	5664386	Identifier	psrc_decode		5663947	0					
ANR	5664387	Identifier	NULL		5663947	1					
ANR	5664388	CompoundStatement		79:41:3475:3475	5663947	1					
ANR	5664389	ExpressionStatement	"gs_free_object ( pgs -> memory , ( byte * ) psrc_decode , ""image_render_color_icc"" )"	393:20:14914:15024	5663947	0	True				
ANR	5664390	CallExpression	"gs_free_object ( pgs -> memory , ( byte * ) psrc_decode , ""image_render_color_icc"" )"		5663947	0					
ANR	5664391	Callee	gs_free_object		5663947	0					
ANR	5664392	Identifier	gs_free_object		5663947	0					
ANR	5664393	ArgumentList	pgs -> memory		5663947	1					
ANR	5664394	Argument	pgs -> memory		5663947	0					
ANR	5664395	PtrMemberAccess	pgs -> memory		5663947	0					
ANR	5664396	Identifier	pgs		5663947	0					
ANR	5664397	Identifier	memory		5663947	1					
ANR	5664398	Argument	( byte * ) psrc_decode		5663947	1					
ANR	5664399	CastExpression	( byte * ) psrc_decode		5663947	0					
ANR	5664400	CastTarget	byte *		5663947	0					
ANR	5664401	Identifier	psrc_decode		5663947	1					
ANR	5664402	Argument	"""image_render_color_icc"""		5663947	2					
ANR	5664403	PrimaryExpression	"""image_render_color_icc"""		5663947	0					
ANR	5664404	ElseStatement	else		5663947	0					
ANR	5664405	CompoundStatement		84:15:3656:3656	5663947	0					
ANR	5664406	ExpressionStatement	num_pixels = w / spp	399:12:15167:15185	5663947	0	True				
ANR	5664407	AssignmentExpression	num_pixels = w / spp		5663947	0		=			
ANR	5664408	Identifier	num_pixels		5663947	0					
ANR	5664409	MultiplicativeExpression	w / spp		5663947	1		/			
ANR	5664410	Identifier	w		5663947	0					
ANR	5664411	Identifier	spp		5663947	1					
ANR	5664412	ExpressionStatement	"gsicc_init_buffer ( & input_buff_desc , spp , 1 , false , false , false , 0 , w , 1 , num_pixels )"	400:12:15199:15336	5663947	1	True				
ANR	5664413	CallExpression	"gsicc_init_buffer ( & input_buff_desc , spp , 1 , false , false , false , 0 , w , 1 , num_pixels )"		5663947	0					
ANR	5664414	Callee	gsicc_init_buffer		5663947	0					
ANR	5664415	Identifier	gsicc_init_buffer		5663947	0					
ANR	5664416	ArgumentList	& input_buff_desc		5663947	1					
ANR	5664417	Argument	& input_buff_desc		5663947	0					
ANR	5664418	UnaryOperationExpression	& input_buff_desc		5663947	0					
ANR	5664419	UnaryOperator	&		5663947	0					
ANR	5664420	Identifier	input_buff_desc		5663947	1					
ANR	5664421	Argument	spp		5663947	1					
ANR	5664422	Identifier	spp		5663947	0					
ANR	5664423	Argument	1		5663947	2					
ANR	5664424	PrimaryExpression	1		5663947	0					
ANR	5664425	Argument	false		5663947	3					
ANR	5664426	Identifier	false		5663947	0					
ANR	5664427	Argument	false		5663947	4					
ANR	5664428	Identifier	false		5663947	0					
ANR	5664429	Argument	false		5663947	5					
ANR	5664430	Identifier	false		5663947	0					
ANR	5664431	Argument	0		5663947	6					
ANR	5664432	PrimaryExpression	0		5663947	0					
ANR	5664433	Argument	w		5663947	7					
ANR	5664434	Identifier	w		5663947	0					
ANR	5664435	Argument	1		5663947	8					
ANR	5664436	PrimaryExpression	1		5663947	0					
ANR	5664437	Argument	num_pixels		5663947	9					
ANR	5664438	Identifier	num_pixels		5663947	0					
ANR	5664439	IfStatement	if ( ! force_planar )		5663947	2					
ANR	5664440	Condition	! force_planar	403:16:15354:15366	5663947	0	True				
ANR	5664441	UnaryOperationExpression	! force_planar		5663947	0					
ANR	5664442	UnaryOperator	!		5663947	0					
ANR	5664443	Identifier	force_planar		5663947	1					
ANR	5664444	CompoundStatement		90:31:3952:3952	5663947	1					
ANR	5664445	ExpressionStatement	"gsicc_init_buffer ( & output_buff_desc , spp_cm , 1 , false , false , false , 0 , num_pixels * spp_cm , 1 , num_pixels )"	404:16:15387:15554	5663947	0	True				
ANR	5664446	CallExpression	"gsicc_init_buffer ( & output_buff_desc , spp_cm , 1 , false , false , false , 0 , num_pixels * spp_cm , 1 , num_pixels )"		5663947	0					
ANR	5664447	Callee	gsicc_init_buffer		5663947	0					
ANR	5664448	Identifier	gsicc_init_buffer		5663947	0					
ANR	5664449	ArgumentList	& output_buff_desc		5663947	1					
ANR	5664450	Argument	& output_buff_desc		5663947	0					
ANR	5664451	UnaryOperationExpression	& output_buff_desc		5663947	0					
ANR	5664452	UnaryOperator	&		5663947	0					
ANR	5664453	Identifier	output_buff_desc		5663947	1					
ANR	5664454	Argument	spp_cm		5663947	1					
ANR	5664455	Identifier	spp_cm		5663947	0					
ANR	5664456	Argument	1		5663947	2					
ANR	5664457	PrimaryExpression	1		5663947	0					
ANR	5664458	Argument	false		5663947	3					
ANR	5664459	Identifier	false		5663947	0					
ANR	5664460	Argument	false		5663947	4					
ANR	5664461	Identifier	false		5663947	0					
ANR	5664462	Argument	false		5663947	5					
ANR	5664463	Identifier	false		5663947	0					
ANR	5664464	Argument	0		5663947	6					
ANR	5664465	PrimaryExpression	0		5663947	0					
ANR	5664466	Argument	num_pixels * spp_cm		5663947	7					
ANR	5664467	MultiplicativeExpression	num_pixels * spp_cm		5663947	0		*			
ANR	5664468	Identifier	num_pixels		5663947	0					
ANR	5664469	Identifier	spp_cm		5663947	1					
ANR	5664470	Argument	1		5663947	8					
ANR	5664471	PrimaryExpression	1		5663947	0					
ANR	5664472	Argument	num_pixels		5663947	9					
ANR	5664473	Identifier	num_pixels		5663947	0					
ANR	5664474	ElseStatement	else		5663947	0					
ANR	5664475	CompoundStatement		94:19:4158:4158	5663947	0					
ANR	5664476	ExpressionStatement	"gsicc_init_buffer ( & output_buff_desc , spp_cm , 1 , false , false , true , w / spp , w / spp , 1 , num_pixels )"	408:16:15593:15749	5663947	0	True				
ANR	5664477	CallExpression	"gsicc_init_buffer ( & output_buff_desc , spp_cm , 1 , false , false , true , w / spp , w / spp , 1 , num_pixels )"		5663947	0					
ANR	5664478	Callee	gsicc_init_buffer		5663947	0					
ANR	5664479	Identifier	gsicc_init_buffer		5663947	0					
ANR	5664480	ArgumentList	& output_buff_desc		5663947	1					
ANR	5664481	Argument	& output_buff_desc		5663947	0					
ANR	5664482	UnaryOperationExpression	& output_buff_desc		5663947	0					
ANR	5664483	UnaryOperator	&		5663947	0					
ANR	5664484	Identifier	output_buff_desc		5663947	1					
ANR	5664485	Argument	spp_cm		5663947	1					
ANR	5664486	Identifier	spp_cm		5663947	0					
ANR	5664487	Argument	1		5663947	2					
ANR	5664488	PrimaryExpression	1		5663947	0					
ANR	5664489	Argument	false		5663947	3					
ANR	5664490	Identifier	false		5663947	0					
ANR	5664491	Argument	false		5663947	4					
ANR	5664492	Identifier	false		5663947	0					
ANR	5664493	Argument	true		5663947	5					
ANR	5664494	Identifier	true		5663947	0					
ANR	5664495	Argument	w / spp		5663947	6					
ANR	5664496	MultiplicativeExpression	w / spp		5663947	0		/			
ANR	5664497	Identifier	w		5663947	0					
ANR	5664498	Identifier	spp		5663947	1					
ANR	5664499	Argument	w / spp		5663947	7					
ANR	5664500	MultiplicativeExpression	w / spp		5663947	0		/			
ANR	5664501	Identifier	w		5663947	0					
ANR	5664502	Identifier	spp		5663947	1					
ANR	5664503	Argument	1		5663947	8					
ANR	5664504	PrimaryExpression	1		5663947	0					
ANR	5664505	Argument	num_pixels		5663947	9					
ANR	5664506	Identifier	num_pixels		5663947	0					
ANR	5664507	IfStatement	if ( need_decode )		5663947	3					
ANR	5664508	Condition	need_decode	417:16:16182:16192	5663947	0	True				
ANR	5664509	Identifier	need_decode		5663947	0					
ANR	5664510	CompoundStatement		104:29:4778:4778	5663947	1					
ANR	5664511	ExpressionStatement	"psrc_decode = gs_alloc_bytes ( pgs -> memory , w , ""image_color_icc_prep"" )"	419:16:16300:16414	5663947	0	True				
ANR	5664512	AssignmentExpression	"psrc_decode = gs_alloc_bytes ( pgs -> memory , w , ""image_color_icc_prep"" )"		5663947	0		=			
ANR	5664513	Identifier	psrc_decode		5663947	0					
ANR	5664514	CallExpression	"gs_alloc_bytes ( pgs -> memory , w , ""image_color_icc_prep"" )"		5663947	1					
ANR	5664515	Callee	gs_alloc_bytes		5663947	0					
ANR	5664516	Identifier	gs_alloc_bytes		5663947	0					
ANR	5664517	ArgumentList	pgs -> memory		5663947	1					
ANR	5664518	Argument	pgs -> memory		5663947	0					
ANR	5664519	PtrMemberAccess	pgs -> memory		5663947	0					
ANR	5664520	Identifier	pgs		5663947	0					
ANR	5664521	Identifier	memory		5663947	1					
ANR	5664522	Argument	w		5663947	1					
ANR	5664523	Identifier	w		5663947	0					
ANR	5664524	Argument	"""image_color_icc_prep"""		5663947	2					
ANR	5664525	PrimaryExpression	"""image_color_icc_prep"""		5663947	0					
ANR	5664526	IfStatement	if ( ! penum -> use_cie_range )		5663947	1					
ANR	5664527	Condition	! penum -> use_cie_range	421:20:16436:16456	5663947	0	True				
ANR	5664528	UnaryOperationExpression	! penum -> use_cie_range		5663947	0					
ANR	5664529	UnaryOperator	!		5663947	0					
ANR	5664530	PtrMemberAccess	penum -> use_cie_range		5663947	1					
ANR	5664531	Identifier	penum		5663947	0					
ANR	5664532	Identifier	use_cie_range		5663947	1					
ANR	5664533	CompoundStatement		108:43:5042:5042	5663947	1					
ANR	5664534	ExpressionStatement	"decode_row ( penum , psrc , spp , psrc_decode , psrc_decode + w )"	422:20:16481:16537	5663947	0	True				
ANR	5664535	CallExpression	"decode_row ( penum , psrc , spp , psrc_decode , psrc_decode + w )"		5663947	0					
ANR	5664536	Callee	decode_row		5663947	0					
ANR	5664537	Identifier	decode_row		5663947	0					
ANR	5664538	ArgumentList	penum		5663947	1					
ANR	5664539	Argument	penum		5663947	0					
ANR	5664540	Identifier	penum		5663947	0					
ANR	5664541	Argument	psrc		5663947	1					
ANR	5664542	Identifier	psrc		5663947	0					
ANR	5664543	Argument	spp		5663947	2					
ANR	5664544	Identifier	spp		5663947	0					
ANR	5664545	Argument	psrc_decode		5663947	3					
ANR	5664546	Identifier	psrc_decode		5663947	0					
ANR	5664547	Argument	psrc_decode + w		5663947	4					
ANR	5664548	AdditiveExpression	psrc_decode + w		5663947	0		+			
ANR	5664549	Identifier	psrc_decode		5663947	0					
ANR	5664550	Identifier	w		5663947	1					
ANR	5664551	ElseStatement	else		5663947	0					
ANR	5664552	CompoundStatement		110:23:5145:5145	5663947	0					
ANR	5664553	ExpressionStatement	"decode_row_cie ( penum , psrc , spp , psrc_decode , psrc_decode + w , get_cie_range ( penum -> pcs ) )"	425:20:16659:16782	5663947	0	True				
ANR	5664554	CallExpression	"decode_row_cie ( penum , psrc , spp , psrc_decode , psrc_decode + w , get_cie_range ( penum -> pcs ) )"		5663947	0					
ANR	5664555	Callee	decode_row_cie		5663947	0					
ANR	5664556	Identifier	decode_row_cie		5663947	0					
ANR	5664557	ArgumentList	penum		5663947	1					
ANR	5664558	Argument	penum		5663947	0					
ANR	5664559	Identifier	penum		5663947	0					
ANR	5664560	Argument	psrc		5663947	1					
ANR	5664561	Identifier	psrc		5663947	0					
ANR	5664562	Argument	spp		5663947	2					
ANR	5664563	Identifier	spp		5663947	0					
ANR	5664564	Argument	psrc_decode		5663947	3					
ANR	5664565	Identifier	psrc_decode		5663947	0					
ANR	5664566	Argument	psrc_decode + w		5663947	4					
ANR	5664567	AdditiveExpression	psrc_decode + w		5663947	0		+			
ANR	5664568	Identifier	psrc_decode		5663947	0					
ANR	5664569	Identifier	w		5663947	1					
ANR	5664570	Argument	get_cie_range ( penum -> pcs )		5663947	5					
ANR	5664571	CallExpression	get_cie_range ( penum -> pcs )		5663947	0					
ANR	5664572	Callee	get_cie_range		5663947	0					
ANR	5664573	Identifier	get_cie_range		5663947	0					
ANR	5664574	ArgumentList	penum -> pcs		5663947	1					
ANR	5664575	Argument	penum -> pcs		5663947	0					
ANR	5664576	PtrMemberAccess	penum -> pcs		5663947	0					
ANR	5664577	Identifier	penum		5663947	0					
ANR	5664578	Identifier	pcs		5663947	1					
ANR	5664579	ExpressionStatement	"( penum -> icc_link -> procs . map_buffer ) ( dev , penum -> icc_link , & input_buff_desc , & output_buff_desc , ( void * ) psrc_decode , ( void * ) * psrc_cm )"	428:16:16818:17159	5663947	2	True				
ANR	5664580	CallExpression	"( penum -> icc_link -> procs . map_buffer ) ( dev , penum -> icc_link , & input_buff_desc , & output_buff_desc , ( void * ) psrc_decode , ( void * ) * psrc_cm )"		5663947	0					
ANR	5664581	Callee	penum -> icc_link -> procs . map_buffer		5663947	0					
ANR	5664582	MemberAccess	penum -> icc_link -> procs . map_buffer		5663947	0					
ANR	5664583	PtrMemberAccess	penum -> icc_link -> procs		5663947	0					
ANR	5664584	PtrMemberAccess	penum -> icc_link		5663947	0					
ANR	5664585	Identifier	penum		5663947	0					
ANR	5664586	Identifier	icc_link		5663947	1					
ANR	5664587	Identifier	procs		5663947	1					
ANR	5664588	Identifier	map_buffer		5663947	1					
ANR	5664589	ArgumentList	dev		5663947	1					
ANR	5664590	Argument	dev		5663947	0					
ANR	5664591	Identifier	dev		5663947	0					
ANR	5664592	Argument	penum -> icc_link		5663947	1					
ANR	5664593	PtrMemberAccess	penum -> icc_link		5663947	0					
ANR	5664594	Identifier	penum		5663947	0					
ANR	5664595	Identifier	icc_link		5663947	1					
ANR	5664596	Argument	& input_buff_desc		5663947	2					
ANR	5664597	UnaryOperationExpression	& input_buff_desc		5663947	0					
ANR	5664598	UnaryOperator	&		5663947	0					
ANR	5664599	Identifier	input_buff_desc		5663947	1					
ANR	5664600	Argument	& output_buff_desc		5663947	3					
ANR	5664601	UnaryOperationExpression	& output_buff_desc		5663947	0					
ANR	5664602	UnaryOperator	&		5663947	0					
ANR	5664603	Identifier	output_buff_desc		5663947	1					
ANR	5664604	Argument	( void * ) psrc_decode		5663947	4					
ANR	5664605	CastExpression	( void * ) psrc_decode		5663947	0					
ANR	5664606	CastTarget	void *		5663947	0					
ANR	5664607	Identifier	psrc_decode		5663947	1					
ANR	5664608	Argument	( void * ) * psrc_cm		5663947	5					
ANR	5664609	CastExpression	( void * ) * psrc_cm		5663947	0					
ANR	5664610	CastTarget	void *		5663947	0					
ANR	5664611	UnaryOperationExpression	* psrc_cm		5663947	1					
ANR	5664612	UnaryOperator	*		5663947	0					
ANR	5664613	Identifier	psrc_cm		5663947	1					
ANR	5664614	ExpressionStatement	"gs_free_object ( pgs -> memory , psrc_decode , ""image_color_icc_prep"" )"	433:16:17177:17241	5663947	3	True				
ANR	5664615	CallExpression	"gs_free_object ( pgs -> memory , psrc_decode , ""image_color_icc_prep"" )"		5663947	0					
ANR	5664616	Callee	gs_free_object		5663947	0					
ANR	5664617	Identifier	gs_free_object		5663947	0					
ANR	5664618	ArgumentList	pgs -> memory		5663947	1					
ANR	5664619	Argument	pgs -> memory		5663947	0					
ANR	5664620	PtrMemberAccess	pgs -> memory		5663947	0					
ANR	5664621	Identifier	pgs		5663947	0					
ANR	5664622	Identifier	memory		5663947	1					
ANR	5664623	Argument	psrc_decode		5663947	1					
ANR	5664624	Identifier	psrc_decode		5663947	0					
ANR	5664625	Argument	"""image_color_icc_prep"""		5663947	2					
ANR	5664626	PrimaryExpression	"""image_color_icc_prep"""		5663947	0					
ANR	5664627	ElseStatement	else		5663947	0					
ANR	5664628	CompoundStatement		121:19:5845:5845	5663947	0					
ANR	5664629	ExpressionStatement	"( penum -> icc_link -> procs . map_buffer ) ( dev , penum -> icc_link , & input_buff_desc , & output_buff_desc , ( void * ) psrc , ( void * ) * psrc_cm )"	436:16:17321:17655	5663947	0	True				
ANR	5664630	CallExpression	"( penum -> icc_link -> procs . map_buffer ) ( dev , penum -> icc_link , & input_buff_desc , & output_buff_desc , ( void * ) psrc , ( void * ) * psrc_cm )"		5663947	0					
ANR	5664631	Callee	penum -> icc_link -> procs . map_buffer		5663947	0					
ANR	5664632	MemberAccess	penum -> icc_link -> procs . map_buffer		5663947	0					
ANR	5664633	PtrMemberAccess	penum -> icc_link -> procs		5663947	0					
ANR	5664634	PtrMemberAccess	penum -> icc_link		5663947	0					
ANR	5664635	Identifier	penum		5663947	0					
ANR	5664636	Identifier	icc_link		5663947	1					
ANR	5664637	Identifier	procs		5663947	1					
ANR	5664638	Identifier	map_buffer		5663947	1					
ANR	5664639	ArgumentList	dev		5663947	1					
ANR	5664640	Argument	dev		5663947	0					
ANR	5664641	Identifier	dev		5663947	0					
ANR	5664642	Argument	penum -> icc_link		5663947	1					
ANR	5664643	PtrMemberAccess	penum -> icc_link		5663947	0					
ANR	5664644	Identifier	penum		5663947	0					
ANR	5664645	Identifier	icc_link		5663947	1					
ANR	5664646	Argument	& input_buff_desc		5663947	2					
ANR	5664647	UnaryOperationExpression	& input_buff_desc		5663947	0					
ANR	5664648	UnaryOperator	&		5663947	0					
ANR	5664649	Identifier	input_buff_desc		5663947	1					
ANR	5664650	Argument	& output_buff_desc		5663947	3					
ANR	5664651	UnaryOperationExpression	& output_buff_desc		5663947	0					
ANR	5664652	UnaryOperator	&		5663947	0					
ANR	5664653	Identifier	output_buff_desc		5663947	1					
ANR	5664654	Argument	( void * ) psrc		5663947	4					
ANR	5664655	CastExpression	( void * ) psrc		5663947	0					
ANR	5664656	CastTarget	void *		5663947	0					
ANR	5664657	Identifier	psrc		5663947	1					
ANR	5664658	Argument	( void * ) * psrc_cm		5663947	5					
ANR	5664659	CastExpression	( void * ) * psrc_cm		5663947	0					
ANR	5664660	CastTarget	void *		5663947	0					
ANR	5664661	UnaryOperationExpression	* psrc_cm		5663947	1					
ANR	5664662	UnaryOperator	*		5663947	0					
ANR	5664663	Identifier	psrc_cm		5663947	1					
ANR	5664664	ExpressionStatement	* spp_cm_out = spp_cm	444:4:17691:17711	5663947	26	True				
ANR	5664665	AssignmentExpression	* spp_cm_out = spp_cm		5663947	0		=			
ANR	5664666	UnaryOperationExpression	* spp_cm_out		5663947	0					
ANR	5664667	UnaryOperator	*		5663947	0					
ANR	5664668	Identifier	spp_cm_out		5663947	1					
ANR	5664669	Identifier	spp_cm		5663947	1					
ANR	5664670	ReturnStatement	return 0 ;	445:4:17717:17725	5663947	27	True				
ANR	5664671	PrimaryExpression	0		5663947	0					
ANR	5664672	ReturnType	static int		5663947	1					
ANR	5664673	Identifier	image_color_icc_prep		5663947	2					
ANR	5664674	ParameterList	"gx_image_enum * penum_orig , const byte * psrc , uint w , gx_device * dev , int * spp_cm_out , byte * * psrc_cm , byte * * psrc_cm_start , byte * * bufend , bool planar_out"		5663947	3					
ANR	5664675	Parameter	gx_image_enum * penum_orig	311:21:11218:11242	5663947	0	True				
ANR	5664676	ParameterType	gx_image_enum *		5663947	0					
ANR	5664677	Identifier	penum_orig		5663947	1					
ANR	5664678	Parameter	const byte * psrc	311:48:11245:11260	5663947	1	True				
ANR	5664679	ParameterType	const byte *		5663947	0					
ANR	5664680	Identifier	psrc		5663947	1					
ANR	5664681	Parameter	uint w	311:66:11263:11268	5663947	2	True				
ANR	5664682	ParameterType	uint		5663947	0					
ANR	5664683	Identifier	w		5663947	1					
ANR	5664684	Parameter	gx_device * dev	312:21:11292:11305	5663947	3	True				
ANR	5664685	ParameterType	gx_device *		5663947	0					
ANR	5664686	Identifier	dev		5663947	1					
ANR	5664687	Parameter	int * spp_cm_out	312:37:11308:11322	5663947	4	True				
ANR	5664688	ParameterType	int *		5663947	0					
ANR	5664689	Identifier	spp_cm_out		5663947	1					
ANR	5664690	Parameter	byte * * psrc_cm	312:54:11325:11338	5663947	5	True				
ANR	5664691	ParameterType	byte * *		5663947	0					
ANR	5664692	Identifier	psrc_cm		5663947	1					
ANR	5664693	Parameter	byte * * psrc_cm_start	313:21:11362:11381	5663947	6	True				
ANR	5664694	ParameterType	byte * *		5663947	0					
ANR	5664695	Identifier	psrc_cm_start		5663947	1					
ANR	5664696	Parameter	byte * * bufend	313:43:11384:11396	5663947	7	True				
ANR	5664697	ParameterType	byte * *		5663947	0					
ANR	5664698	Identifier	bufend		5663947	1					
ANR	5664699	Parameter	bool planar_out	313:58:11399:11413	5663947	8	True				
ANR	5664700	ParameterType	bool		5663947	0					
ANR	5664701	Identifier	planar_out		5663947	1					
ANR	5664702	CFGEntryNode	ENTRY		5663947		True				
ANR	5664703	CFGExitNode	EXIT		5663947		True				
ANR	5664704	Symbol	* spp_cm_out		5663947						
ANR	5664705	Symbol	output_buff_desc		5663947						
ANR	5664706	Symbol	planar_src		5663947						
ANR	5664707	Symbol	* pgs		5663947						
ANR	5664708	Symbol	dev_profile		5663947						
ANR	5664709	Symbol	gs_rethrow		5663947						
ANR	5664710	Symbol	planar_out		5663947						
ANR	5664711	Symbol	penum -> icc_setup . need_decode		5663947						
ANR	5664712	Symbol	dev		5663947						
ANR	5664713	Symbol	penum -> icc_link		5663947						
ANR	5664714	Symbol	* * penum		5663947						
ANR	5664715	Symbol	NULL		5663947						
ANR	5664716	Symbol	& dev_profile		5663947						
ANR	5664717	Symbol	penum -> use_cie_range		5663947						
ANR	5664718	Symbol	* penum -> icc_link		5663947						
ANR	5664719	Symbol	penum		5663947						
ANR	5664720	Symbol	* bufend		5663947						
ANR	5664721	Symbol	gsicc_get_device_profile_comps		5663947						
ANR	5664722	Symbol	need_decode		5663947						
ANR	5664723	Symbol	spp		5663947						
ANR	5664724	Symbol	penum -> pcs		5663947						
ANR	5664725	Symbol	true		5663947						
ANR	5664726	Symbol	* ( planar_des + j * width )		5663947						
ANR	5664727	Symbol	& input_buff_desc		5663947						
ANR	5664728	Symbol	psrc_cm_start		5663947						
ANR	5664729	Symbol	num_des_comps		5663947						
ANR	5664730	Symbol	psrc		5663947						
ANR	5664731	Symbol	* penum		5663947						
ANR	5664732	Symbol	code		5663947						
ANR	5664733	Symbol	penum_orig		5663947						
ANR	5664734	Symbol	num_pixels		5663947						
ANR	5664735	Symbol	input_buff_desc		5663947						
ANR	5664736	Symbol	penum -> icc_link -> procs		5663947						
ANR	5664737	Symbol	* width		5663947						
ANR	5664738	Symbol	penum -> pgs		5663947						
ANR	5664739	Symbol	force_planar		5663947						
ANR	5664740	Symbol	penum -> icc_setup		5663947						
ANR	5664741	Symbol	penum -> icc_link -> is_identity		5663947						
ANR	5664742	Symbol	bufend		5663947						
ANR	5664743	Symbol	planar_des		5663947						
ANR	5664744	Symbol	* psrc_cm		5663947						
ANR	5664745	Symbol	dev_proc		5663947						
ANR	5664746	Symbol	* planar_des		5663947						
ANR	5664747	Symbol	pgs		5663947						
ANR	5664748	Symbol	pgs -> memory		5663947						
ANR	5664749	Symbol	get_profile		5663947						
ANR	5664750	Symbol	penum -> spp		5663947						
ANR	5664751	Symbol	gs_alloc_bytes		5663947						
ANR	5664752	Symbol	* planar_src ++		5663947						
ANR	5664753	Symbol	& output_buff_desc		5663947						
ANR	5664754	Symbol	false		5663947						
ANR	5664755	Symbol	j		5663947						
ANR	5664756	Symbol	k		5663947						
ANR	5664757	Symbol	spp_cm		5663947						
ANR	5664758	Symbol	* j		5663947						
ANR	5664759	Symbol	psrc_decode		5663947						
ANR	5664760	Symbol	w		5663947						
ANR	5664761	Symbol	width		5663947						
ANR	5664762	Symbol	psrc_cm		5663947						
ANR	5664763	Symbol	spp_cm_out		5663947						
ANR	5664764	Symbol	get_cie_range		5663947						
ANR	5664765	Symbol	* psrc_cm_start		5663947						
ANR	5664766	Function	image_render_color_thresh	448:0:17730:38967							
ANR	5664767	FunctionDef	"image_render_color_thresh (gx_image_enum * penum_orig , const byte * buffer , int data_x , uint w , int h , gx_device * dev)"		5664766	0					
ANR	5664768	CompoundStatement		451:0:17877:38967	5664766	0					
ANR	5664769	IdentifierDeclStatement	gx_image_enum * penum = penum_orig ;	452:4:17883:17916	5664766	0	True				
ANR	5664770	IdentifierDecl	* penum = penum_orig		5664766	0					
ANR	5664771	IdentifierDeclType	gx_image_enum *		5664766	0					
ANR	5664772	Identifier	penum		5664766	1					
ANR	5664773	AssignmentExpression	* penum = penum_orig		5664766	2		=			
ANR	5664774	Identifier	penum_orig		5664766	0					
ANR	5664775	Identifier	penum_orig		5664766	1					
ANR	5664776	IdentifierDeclStatement	image_posture posture = penum -> posture ;	453:4:17946:17984	5664766	1	True				
ANR	5664777	IdentifierDecl	posture = penum -> posture		5664766	0					
ANR	5664778	IdentifierDeclType	image_posture		5664766	0					
ANR	5664779	Identifier	posture		5664766	1					
ANR	5664780	AssignmentExpression	posture = penum -> posture		5664766	2		=			
ANR	5664781	Identifier	posture		5664766	0					
ANR	5664782	PtrMemberAccess	penum -> posture		5664766	1					
ANR	5664783	Identifier	penum		5664766	0					
ANR	5664784	Identifier	posture		5664766	1					
ANR	5664785	IdentifierDeclStatement	int vdi ;	454:4:17990:17997	5664766	2	True				
ANR	5664786	IdentifierDecl	vdi		5664766	0					
ANR	5664787	IdentifierDeclType	int		5664766	0					
ANR	5664788	Identifier	vdi		5664766	1					
ANR	5664789	IdentifierDeclStatement	fixed xrun = 0 ;	455:4:18031:18045	5664766	3	True				
ANR	5664790	IdentifierDecl	xrun = 0		5664766	0					
ANR	5664791	IdentifierDeclType	fixed		5664766	0					
ANR	5664792	Identifier	xrun		5664766	1					
ANR	5664793	AssignmentExpression	xrun = 0		5664766	2		=			
ANR	5664794	Identifier	xrun		5664766	0					
ANR	5664795	PrimaryExpression	0		5664766	1					
ANR	5664796	IdentifierDeclStatement	byte * thresh_align ;	456:4:18051:18069	5664766	4	True				
ANR	5664797	IdentifierDecl	* thresh_align		5664766	0					
ANR	5664798	IdentifierDeclType	byte *		5664766	0					
ANR	5664799	Identifier	thresh_align		5664766	1					
ANR	5664800	IdentifierDeclStatement	byte * devc_contone [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	457:4:18075:18125	5664766	5	True				
ANR	5664801	IdentifierDecl	* devc_contone [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		5664766	0					
ANR	5664802	IdentifierDeclType	byte * [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		5664766	0					
ANR	5664803	Identifier	devc_contone		5664766	1					
ANR	5664804	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		5664766	2					
ANR	5664805	IdentifierDeclStatement	byte * psrc_plane [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	458:4:18131:18179	5664766	6	True				
ANR	5664806	IdentifierDecl	* psrc_plane [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		5664766	0					
ANR	5664807	IdentifierDeclType	byte * [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		5664766	0					
ANR	5664808	Identifier	psrc_plane		5664766	1					
ANR	5664809	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		5664766	2					
ANR	5664810	IdentifierDeclStatement	byte * devc_contone_gray ;	459:4:18185:18208	5664766	7	True				
ANR	5664811	IdentifierDecl	* devc_contone_gray		5664766	0					
ANR	5664812	IdentifierDeclType	byte *		5664766	0					
ANR	5664813	Identifier	devc_contone_gray		5664766	1					
ANR	5664814	IdentifierDeclStatement	const byte * psrc = buffer + data_x ;	460:4:18214:18248	5664766	8	True				
ANR	5664815	IdentifierDecl	* psrc = buffer + data_x		5664766	0					
ANR	5664816	IdentifierDeclType	const byte *		5664766	0					
ANR	5664817	Identifier	psrc		5664766	1					
ANR	5664818	AssignmentExpression	* psrc = buffer + data_x		5664766	2		=			
ANR	5664819	Identifier	psrc		5664766	0					
ANR	5664820	AdditiveExpression	buffer + data_x		5664766	1		+			
ANR	5664821	Identifier	buffer		5664766	0					
ANR	5664822	Identifier	data_x		5664766	1					
ANR	5664823	IdentifierDeclStatement	"int dest_width , dest_height , data_length ;"	461:4:18254:18294	5664766	9	True				
ANR	5664824	IdentifierDecl	dest_width		5664766	0					
ANR	5664825	IdentifierDeclType	int		5664766	0					
ANR	5664826	Identifier	dest_width		5664766	1					
ANR	5664827	IdentifierDecl	dest_height		5664766	1					
ANR	5664828	IdentifierDeclType	int		5664766	0					
ANR	5664829	Identifier	dest_height		5664766	1					
ANR	5664830	IdentifierDecl	data_length		5664766	2					
ANR	5664831	IdentifierDeclType	int		5664766	0					
ANR	5664832	Identifier	data_length		5664766	1					
ANR	5664833	IdentifierDeclStatement	int spp_out = dev -> color_info . num_components ;	462:4:18300:18344	5664766	10	True				
ANR	5664834	IdentifierDecl	spp_out = dev -> color_info . num_components		5664766	0					
ANR	5664835	IdentifierDeclType	int		5664766	0					
ANR	5664836	Identifier	spp_out		5664766	1					
ANR	5664837	AssignmentExpression	spp_out = dev -> color_info . num_components		5664766	2		=			
ANR	5664838	Identifier	spp_out		5664766	0					
ANR	5664839	MemberAccess	dev -> color_info . num_components		5664766	1					
ANR	5664840	PtrMemberAccess	dev -> color_info		5664766	0					
ANR	5664841	Identifier	dev		5664766	0					
ANR	5664842	Identifier	color_info		5664766	1					
ANR	5664843	Identifier	num_components		5664766	1					
ANR	5664844	IdentifierDeclStatement	"int position , i , j , k ;"	463:4:18350:18371	5664766	11	True				
ANR	5664845	IdentifierDecl	position		5664766	0					
ANR	5664846	IdentifierDeclType	int		5664766	0					
ANR	5664847	Identifier	position		5664766	1					
ANR	5664848	IdentifierDecl	i		5664766	1					
ANR	5664849	IdentifierDeclType	int		5664766	0					
ANR	5664850	Identifier	i		5664766	1					
ANR	5664851	IdentifierDecl	j		5664766	2					
ANR	5664852	IdentifierDeclType	int		5664766	0					
ANR	5664853	Identifier	j		5664766	1					
ANR	5664854	IdentifierDecl	k		5664766	3					
ANR	5664855	IdentifierDeclType	int		5664766	0					
ANR	5664856	Identifier	k		5664766	1					
ANR	5664857	IdentifierDeclStatement	int offset_bits = penum -> ht_offset_bits ;	464:4:18377:18416	5664766	12	True				
ANR	5664858	IdentifierDecl	offset_bits = penum -> ht_offset_bits		5664766	0					
ANR	5664859	IdentifierDeclType	int		5664766	0					
ANR	5664860	Identifier	offset_bits		5664766	1					
ANR	5664861	AssignmentExpression	offset_bits = penum -> ht_offset_bits		5664766	2		=			
ANR	5664862	Identifier	offset_bits		5664766	0					
ANR	5664863	PtrMemberAccess	penum -> ht_offset_bits		5664766	1					
ANR	5664864	Identifier	penum		5664766	0					
ANR	5664865	Identifier	ht_offset_bits		5664766	1					
ANR	5664866	IdentifierDeclStatement	int contone_stride = 0 ;	465:4:18422:18444	5664766	13	True				
ANR	5664867	IdentifierDecl	contone_stride = 0		5664766	0					
ANR	5664868	IdentifierDeclType	int		5664766	0					
ANR	5664869	Identifier	contone_stride		5664766	1					
ANR	5664870	AssignmentExpression	contone_stride = 0		5664766	2		=			
ANR	5664871	Identifier	contone_stride		5664766	0					
ANR	5664872	PrimaryExpression	0		5664766	1					
ANR	5664873	IdentifierDeclStatement	fixed offset ;	466:4:18484:18496	5664766	14	True				
ANR	5664874	IdentifierDecl	offset		5664766	0					
ANR	5664875	IdentifierDeclType	fixed		5664766	0					
ANR	5664876	Identifier	offset		5664766	1					
ANR	5664877	IdentifierDeclStatement	int src_size ;	467:4:18502:18514	5664766	15	True				
ANR	5664878	IdentifierDecl	src_size		5664766	0					
ANR	5664879	IdentifierDeclType	int		5664766	0					
ANR	5664880	Identifier	src_size		5664766	1					
ANR	5664881	IdentifierDeclStatement	bool flush_buff = false ;	468:4:18520:18543	5664766	16	True				
ANR	5664882	IdentifierDecl	flush_buff = false		5664766	0					
ANR	5664883	IdentifierDeclType	bool		5664766	0					
ANR	5664884	Identifier	flush_buff		5664766	1					
ANR	5664885	AssignmentExpression	flush_buff = false		5664766	2		=			
ANR	5664886	Identifier	false		5664766	0					
ANR	5664887	Identifier	false		5664766	1					
ANR	5664888	IdentifierDeclStatement	byte * psrc_temp ;	469:4:18549:18564	5664766	17	True				
ANR	5664889	IdentifierDecl	* psrc_temp		5664766	0					
ANR	5664890	IdentifierDeclType	byte *		5664766	0					
ANR	5664891	Identifier	psrc_temp		5664766	1					
ANR	5664892	IdentifierDeclStatement	int offset_contone [ GX_DEVICE_COLOR_MAX_COMPONENTS ] ;	470:4:18570:18620	5664766	18	True				
ANR	5664893	IdentifierDecl	offset_contone [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		5664766	0					
ANR	5664894	IdentifierDeclType	int [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		5664766	0					
ANR	5664895	Identifier	offset_contone		5664766	1					
ANR	5664896	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		5664766	2					
ANR	5664897	IdentifierDeclStatement	int offset_threshold ;	471:4:18662:18682	5664766	19	True				
ANR	5664898	IdentifierDecl	offset_threshold		5664766	0					
ANR	5664899	IdentifierDeclType	int		5664766	0					
ANR	5664900	Identifier	offset_threshold		5664766	1					
ANR	5664901	IdentifierDeclStatement	gx_dda_fixed dda_ht ;	472:4:18722:18741	5664766	20	True				
ANR	5664902	IdentifierDecl	dda_ht		5664766	0					
ANR	5664903	IdentifierDeclType	gx_dda_fixed		5664766	0					
ANR	5664904	Identifier	dda_ht		5664766	1					
ANR	5664905	IdentifierDeclStatement	"int xn , xr ;"	473:4:18747:18757	5664766	21	True				
ANR	5664906	IdentifierDecl	xn		5664766	0					
ANR	5664907	IdentifierDeclType	int		5664766	0					
ANR	5664908	Identifier	xn		5664766	1					
ANR	5664909	IdentifierDecl	xr		5664766	1					
ANR	5664910	IdentifierDeclType	int		5664766	0					
ANR	5664911	Identifier	xr		5664766	1					
ANR	5664912	IdentifierDeclStatement	int code = 0 ;	474:4:18826:18838	5664766	22	True				
ANR	5664913	IdentifierDecl	code = 0		5664766	0					
ANR	5664914	IdentifierDeclType	int		5664766	0					
ANR	5664915	Identifier	code		5664766	1					
ANR	5664916	AssignmentExpression	code = 0		5664766	2		=			
ANR	5664917	Identifier	code		5664766	0					
ANR	5664918	PrimaryExpression	0		5664766	1					
ANR	5664919	IdentifierDeclStatement	int spp_cm = 0 ;	475:4:18844:18858	5664766	23	True				
ANR	5664920	IdentifierDecl	spp_cm = 0		5664766	0					
ANR	5664921	IdentifierDeclType	int		5664766	0					
ANR	5664922	Identifier	spp_cm		5664766	1					
ANR	5664923	AssignmentExpression	spp_cm = 0		5664766	2		=			
ANR	5664924	Identifier	spp_cm		5664766	0					
ANR	5664925	PrimaryExpression	0		5664766	1					
ANR	5664926	IdentifierDeclStatement	"byte * psrc_cm = NULL , * psrc_cm_start = NULL ;"	476:4:18864:18907	5664766	24	True				
ANR	5664927	IdentifierDecl	* psrc_cm = NULL		5664766	0					
ANR	5664928	IdentifierDeclType	byte *		5664766	0					
ANR	5664929	Identifier	psrc_cm		5664766	1					
ANR	5664930	AssignmentExpression	* psrc_cm = NULL		5664766	2		=			
ANR	5664931	Identifier	NULL		5664766	0					
ANR	5664932	Identifier	NULL		5664766	1					
ANR	5664933	IdentifierDecl	* psrc_cm_start = NULL		5664766	1					
ANR	5664934	IdentifierDeclType	byte *		5664766	0					
ANR	5664935	Identifier	psrc_cm_start		5664766	1					
ANR	5664936	AssignmentExpression	* psrc_cm_start = NULL		5664766	2		=			
ANR	5664937	Identifier	NULL		5664766	0					
ANR	5664938	Identifier	NULL		5664766	1					
ANR	5664939	IdentifierDeclStatement	byte * bufend = NULL ;	477:4:18913:18932	5664766	25	True				
ANR	5664940	IdentifierDecl	* bufend = NULL		5664766	0					
ANR	5664941	IdentifierDeclType	byte *		5664766	0					
ANR	5664942	Identifier	bufend		5664766	1					
ANR	5664943	AssignmentExpression	* bufend = NULL		5664766	2		=			
ANR	5664944	Identifier	NULL		5664766	0					
ANR	5664945	Identifier	NULL		5664766	1					
ANR	5664946	IdentifierDeclStatement	int psrc_planestride = w / penum -> spp ;	478:4:18938:18973	5664766	26	True				
ANR	5664947	IdentifierDecl	psrc_planestride = w / penum -> spp		5664766	0					
ANR	5664948	IdentifierDeclType	int		5664766	0					
ANR	5664949	Identifier	psrc_planestride		5664766	1					
ANR	5664950	AssignmentExpression	psrc_planestride = w / penum -> spp		5664766	2		=			
ANR	5664951	Identifier	psrc_planestride		5664766	0					
ANR	5664952	MultiplicativeExpression	w / penum -> spp		5664766	1		/			
ANR	5664953	Identifier	w		5664766	0					
ANR	5664954	PtrMemberAccess	penum -> spp		5664766	1					
ANR	5664955	Identifier	penum		5664766	0					
ANR	5664956	Identifier	spp		5664766	1					
ANR	5664957	IfStatement	if ( h != 0 && penum -> line_size != 0 )		5664766	27					
ANR	5664958	Condition	h != 0 && penum -> line_size != 0	480:8:18984:19014	5664766	0	True				
ANR	5664959	AndExpression	h != 0 && penum -> line_size != 0		5664766	0		&&			
ANR	5664960	EqualityExpression	h != 0		5664766	0		!=			
ANR	5664961	Identifier	h		5664766	0					
ANR	5664962	PrimaryExpression	0		5664766	1					
ANR	5664963	EqualityExpression	penum -> line_size != 0		5664766	1		!=			
ANR	5664964	PtrMemberAccess	penum -> line_size		5664766	0					
ANR	5664965	Identifier	penum		5664766	0					
ANR	5664966	Identifier	line_size		5664766	1					
ANR	5664967	PrimaryExpression	0		5664766	1					
ANR	5664968	CompoundStatement		30:41:1139:1139	5664766	1					
ANR	5664969	ExpressionStatement	"code = image_color_icc_prep ( penum , psrc , w , dev , & spp_cm , & psrc_cm , & psrc_cm_start , & bufend , true )"	482:8:19125:19260	5664766	0	True				
ANR	5664970	AssignmentExpression	"code = image_color_icc_prep ( penum , psrc , w , dev , & spp_cm , & psrc_cm , & psrc_cm_start , & bufend , true )"		5664766	0		=			
ANR	5664971	Identifier	code		5664766	0					
ANR	5664972	CallExpression	"image_color_icc_prep ( penum , psrc , w , dev , & spp_cm , & psrc_cm , & psrc_cm_start , & bufend , true )"		5664766	1					
ANR	5664973	Callee	image_color_icc_prep		5664766	0					
ANR	5664974	Identifier	image_color_icc_prep		5664766	0					
ANR	5664975	ArgumentList	penum		5664766	1					
ANR	5664976	Argument	penum		5664766	0					
ANR	5664977	Identifier	penum		5664766	0					
ANR	5664978	Argument	psrc		5664766	1					
ANR	5664979	Identifier	psrc		5664766	0					
ANR	5664980	Argument	w		5664766	2					
ANR	5664981	Identifier	w		5664766	0					
ANR	5664982	Argument	dev		5664766	3					
ANR	5664983	Identifier	dev		5664766	0					
ANR	5664984	Argument	& spp_cm		5664766	4					
ANR	5664985	UnaryOperationExpression	& spp_cm		5664766	0					
ANR	5664986	UnaryOperator	&		5664766	0					
ANR	5664987	Identifier	spp_cm		5664766	1					
ANR	5664988	Argument	& psrc_cm		5664766	5					
ANR	5664989	UnaryOperationExpression	& psrc_cm		5664766	0					
ANR	5664990	UnaryOperator	&		5664766	0					
ANR	5664991	Identifier	psrc_cm		5664766	1					
ANR	5664992	Argument	& psrc_cm_start		5664766	6					
ANR	5664993	UnaryOperationExpression	& psrc_cm_start		5664766	0					
ANR	5664994	UnaryOperator	&		5664766	0					
ANR	5664995	Identifier	psrc_cm_start		5664766	1					
ANR	5664996	Argument	& bufend		5664766	7					
ANR	5664997	UnaryOperationExpression	& bufend		5664766	0					
ANR	5664998	UnaryOperator	&		5664766	0					
ANR	5664999	Identifier	bufend		5664766	1					
ANR	5665000	Argument	true		5664766	8					
ANR	5665001	Identifier	true		5664766	0					
ANR	5665002	IfStatement	if ( code < 0 )		5664766	1					
ANR	5665003	Condition	code < 0	484:12:19274:19281	5664766	0	True				
ANR	5665004	RelationalExpression	code < 0		5664766	0		<			
ANR	5665005	Identifier	code		5664766	0					
ANR	5665006	PrimaryExpression	0		5664766	1					
ANR	5665007	ReturnStatement	return code ;	485:12:19296:19307	5664766	1	True				
ANR	5665008	Identifier	code		5664766	0					
ANR	5665009	ElseStatement	else		5664766	0					
ANR	5665010	CompoundStatement		36:11:1442:1442	5664766	0					
ANR	5665011	IfStatement	if ( penum -> ht_landscape . count == 0 || posture == image_portrait )		5664766	0					
ANR	5665012	Condition	penum -> ht_landscape . count == 0 || posture == image_portrait	487:12:19334:19392	5664766	0	True				
ANR	5665013	OrExpression	penum -> ht_landscape . count == 0 || posture == image_portrait		5664766	0		||			
ANR	5665014	EqualityExpression	penum -> ht_landscape . count == 0		5664766	0		==			
ANR	5665015	MemberAccess	penum -> ht_landscape . count		5664766	0					
ANR	5665016	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5665017	Identifier	penum		5664766	0					
ANR	5665018	Identifier	ht_landscape		5664766	1					
ANR	5665019	Identifier	count		5664766	1					
ANR	5665020	PrimaryExpression	0		5664766	1					
ANR	5665021	EqualityExpression	posture == image_portrait		5664766	1		==			
ANR	5665022	Identifier	posture		5664766	0					
ANR	5665023	Identifier	image_portrait		5664766	1					
ANR	5665024	CompoundStatement		37:73:1517:1517	5664766	1					
ANR	5665025	ReturnStatement	return 0 ;	488:12:19409:19417	5664766	0	True				
ANR	5665026	PrimaryExpression	0		5664766	0					
ANR	5665027	ElseStatement	else		5664766	0					
ANR	5665028	CompoundStatement		39:15:1556:1556	5664766	0					
ANR	5665029	ExpressionStatement	offset_bits = penum -> ht_landscape . count	491:12:19491:19530	5664766	0	True				
ANR	5665030	AssignmentExpression	offset_bits = penum -> ht_landscape . count		5664766	0		=			
ANR	5665031	Identifier	offset_bits		5664766	0					
ANR	5665032	MemberAccess	penum -> ht_landscape . count		5664766	1					
ANR	5665033	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5665034	Identifier	penum		5664766	0					
ANR	5665035	Identifier	ht_landscape		5664766	1					
ANR	5665036	Identifier	count		5664766	1					
ANR	5665037	ExpressionStatement	penum -> ht_offset_bits = offset_bits	492:12:19544:19579	5664766	1	True				
ANR	5665038	AssignmentExpression	penum -> ht_offset_bits = offset_bits		5664766	0		=			
ANR	5665039	PtrMemberAccess	penum -> ht_offset_bits		5664766	0					
ANR	5665040	Identifier	penum		5664766	0					
ANR	5665041	Identifier	ht_offset_bits		5664766	1					
ANR	5665042	Identifier	offset_bits		5664766	1					
ANR	5665043	ExpressionStatement	penum -> ht_landscape . offset_set = true	493:12:19593:19630	5664766	2	True				
ANR	5665044	AssignmentExpression	penum -> ht_landscape . offset_set = true		5664766	0		=			
ANR	5665045	MemberAccess	penum -> ht_landscape . offset_set		5664766	0					
ANR	5665046	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5665047	Identifier	penum		5664766	0					
ANR	5665048	Identifier	ht_landscape		5664766	1					
ANR	5665049	Identifier	offset_set		5664766	1					
ANR	5665050	Identifier	true		5664766	1					
ANR	5665051	ExpressionStatement	flush_buff = true	494:12:19644:19661	5664766	3	True				
ANR	5665052	AssignmentExpression	flush_buff = true		5664766	0		=			
ANR	5665053	Identifier	flush_buff		5664766	0					
ANR	5665054	Identifier	true		5664766	1					
ANR	5665055	ExpressionStatement	src_size = penum -> rect . w	500:4:19900:19924	5664766	28	True				
ANR	5665056	AssignmentExpression	src_size = penum -> rect . w		5664766	0		=			
ANR	5665057	Identifier	src_size		5664766	0					
ANR	5665058	MemberAccess	penum -> rect . w		5664766	1					
ANR	5665059	PtrMemberAccess	penum -> rect		5664766	0					
ANR	5665060	Identifier	penum		5664766	0					
ANR	5665061	Identifier	rect		5664766	1					
ANR	5665062	Identifier	w		5664766	1					
ANR	5665063	ExpressionStatement	dda_ht = ( posture == image_portrait ) ? penum -> dda . pixel0 . x : penum -> dda . pixel0 . y	503:4:20010:20090	5664766	29	True				
ANR	5665064	AssignmentExpression	dda_ht = ( posture == image_portrait ) ? penum -> dda . pixel0 . x : penum -> dda . pixel0 . y		5664766	0		=			
ANR	5665065	Identifier	dda_ht		5664766	0					
ANR	5665066	ConditionalExpression	( posture == image_portrait ) ? penum -> dda . pixel0 . x : penum -> dda . pixel0 . y		5664766	1					
ANR	5665067	Condition	posture == image_portrait		5664766	0					
ANR	5665068	EqualityExpression	posture == image_portrait		5664766	0		==			
ANR	5665069	Identifier	posture		5664766	0					
ANR	5665070	Identifier	image_portrait		5664766	1					
ANR	5665071	MemberAccess	penum -> dda . pixel0 . x		5664766	1					
ANR	5665072	MemberAccess	penum -> dda . pixel0		5664766	0					
ANR	5665073	PtrMemberAccess	penum -> dda		5664766	0					
ANR	5665074	Identifier	penum		5664766	0					
ANR	5665075	Identifier	dda		5664766	1					
ANR	5665076	Identifier	pixel0		5664766	1					
ANR	5665077	Identifier	x		5664766	1					
ANR	5665078	MemberAccess	penum -> dda . pixel0 . y		5664766	2					
ANR	5665079	MemberAccess	penum -> dda . pixel0		5664766	0					
ANR	5665080	PtrMemberAccess	penum -> dda		5664766	0					
ANR	5665081	Identifier	penum		5664766	0					
ANR	5665082	Identifier	dda		5664766	1					
ANR	5665083	Identifier	pixel0		5664766	1					
ANR	5665084	Identifier	y		5664766	1					
ANR	5665085	IfStatement	if ( penum -> dxx > 0 )		5664766	30					
ANR	5665086	Condition	penum -> dxx > 0	504:8:20100:20113	5664766	0	True				
ANR	5665087	RelationalExpression	penum -> dxx > 0		5664766	0		>			
ANR	5665088	PtrMemberAccess	penum -> dxx		5664766	0					
ANR	5665089	Identifier	penum		5664766	0					
ANR	5665090	Identifier	dxx		5664766	1					
ANR	5665091	PrimaryExpression	0		5664766	1					
ANR	5665092	ExpressionStatement	"dda_translate ( dda_ht , - fixed_epsilon )"	505:8:20124:20161	5664766	1	True				
ANR	5665093	CallExpression	"dda_translate ( dda_ht , - fixed_epsilon )"		5664766	0					
ANR	5665094	Callee	dda_translate		5664766	0					
ANR	5665095	Identifier	dda_translate		5664766	0					
ANR	5665096	ArgumentList	dda_ht		5664766	1					
ANR	5665097	Argument	dda_ht		5664766	0					
ANR	5665098	Identifier	dda_ht		5664766	0					
ANR	5665099	Argument	- fixed_epsilon		5664766	1					
ANR	5665100	UnaryOperationExpression	- fixed_epsilon		5664766	0					
ANR	5665101	UnaryOperator	-		5664766	0					
ANR	5665102	Identifier	fixed_epsilon		5664766	1					
ANR	5665103	SwitchStatement	switch ( posture )		5664766	31					
ANR	5665104	Condition	posture	507:12:20222:20228	5664766	0	True				
ANR	5665105	Identifier	posture		5664766	0					
ANR	5665106	CompoundStatement		57:21:2353:2353	5664766	1					
ANR	5665107	Label	case image_portrait :	508:8:20241:20260	5664766	0	True				
ANR	5665108	Identifier	image_portrait		5664766	0					
ANR	5665109	ExpressionStatement	xrun = dda_current ( dda_ht )	513:12:20558:20584	5664766	1	True				
ANR	5665110	AssignmentExpression	xrun = dda_current ( dda_ht )		5664766	0		=			
ANR	5665111	Identifier	xrun		5664766	0					
ANR	5665112	CallExpression	dda_current ( dda_ht )		5664766	1					
ANR	5665113	Callee	dda_current		5664766	0					
ANR	5665114	Identifier	dda_current		5664766	0					
ANR	5665115	ArgumentList	dda_ht		5664766	1					
ANR	5665116	Argument	dda_ht		5664766	0					
ANR	5665117	Identifier	dda_ht		5664766	0					
ANR	5665118	ExpressionStatement	"dest_width = gxht_dda_length ( & dda_ht , src_size )"	514:12:20598:20645	5664766	2	True				
ANR	5665119	AssignmentExpression	"dest_width = gxht_dda_length ( & dda_ht , src_size )"		5664766	0		=			
ANR	5665120	Identifier	dest_width		5664766	0					
ANR	5665121	CallExpression	"gxht_dda_length ( & dda_ht , src_size )"		5664766	1					
ANR	5665122	Callee	gxht_dda_length		5664766	0					
ANR	5665123	Identifier	gxht_dda_length		5664766	0					
ANR	5665124	ArgumentList	& dda_ht		5664766	1					
ANR	5665125	Argument	& dda_ht		5664766	0					
ANR	5665126	UnaryOperationExpression	& dda_ht		5664766	0					
ANR	5665127	UnaryOperator	&		5664766	0					
ANR	5665128	Identifier	dda_ht		5664766	1					
ANR	5665129	Argument	src_size		5664766	1					
ANR	5665130	Identifier	src_size		5664766	0					
ANR	5665131	IfStatement	if ( penum -> x_extent . x < 0 )		5664766	3					
ANR	5665132	Condition	penum -> x_extent . x < 0	515:16:20663:20683	5664766	0	True				
ANR	5665133	RelationalExpression	penum -> x_extent . x < 0		5664766	0		<			
ANR	5665134	MemberAccess	penum -> x_extent . x		5664766	0					
ANR	5665135	PtrMemberAccess	penum -> x_extent		5664766	0					
ANR	5665136	Identifier	penum		5664766	0					
ANR	5665137	Identifier	x_extent		5664766	1					
ANR	5665138	Identifier	x		5664766	1					
ANR	5665139	PrimaryExpression	0		5664766	1					
ANR	5665140	ExpressionStatement	xrun += penum -> x_extent . x	516:16:20702:20727	5664766	1	True				
ANR	5665141	AssignmentExpression	xrun += penum -> x_extent . x		5664766	0		+=			
ANR	5665142	Identifier	xrun		5664766	0					
ANR	5665143	MemberAccess	penum -> x_extent . x		5664766	1					
ANR	5665144	PtrMemberAccess	penum -> x_extent		5664766	0					
ANR	5665145	Identifier	penum		5664766	0					
ANR	5665146	Identifier	x_extent		5664766	1					
ANR	5665147	Identifier	x		5664766	1					
ANR	5665148	ExpressionStatement	vdi = penum -> hci	517:12:20741:20757	5664766	4	True				
ANR	5665149	AssignmentExpression	vdi = penum -> hci		5664766	0		=			
ANR	5665150	Identifier	vdi		5664766	0					
ANR	5665151	PtrMemberAccess	penum -> hci		5664766	1					
ANR	5665152	Identifier	penum		5664766	0					
ANR	5665153	Identifier	hci		5664766	1					
ANR	5665154	ExpressionStatement	contone_stride = penum -> line_size	518:12:20771:20804	5664766	5	True				
ANR	5665155	AssignmentExpression	contone_stride = penum -> line_size		5664766	0		=			
ANR	5665156	Identifier	contone_stride		5664766	0					
ANR	5665157	PtrMemberAccess	penum -> line_size		5664766	1					
ANR	5665158	Identifier	penum		5664766	0					
ANR	5665159	Identifier	line_size		5664766	1					
ANR	5665160	ExpressionStatement	offset_threshold = ( - ( ( ( long ) ( penum -> thresh_buffer ) ) + penum -> ht_offset_bits ) ) & 15	519:12:20818:20940	5664766	6	True				
ANR	5665161	AssignmentExpression	offset_threshold = ( - ( ( ( long ) ( penum -> thresh_buffer ) ) + penum -> ht_offset_bits ) ) & 15		5664766	0		=			
ANR	5665162	Identifier	offset_threshold		5664766	0					
ANR	5665163	BitAndExpression	( - ( ( ( long ) ( penum -> thresh_buffer ) ) + penum -> ht_offset_bits ) ) & 15		5664766	1		&			
ANR	5665164	UnaryOperationExpression	- ( ( ( long ) ( penum -> thresh_buffer ) ) + penum -> ht_offset_bits )		5664766	0					
ANR	5665165	UnaryOperator	-		5664766	0					
ANR	5665166	AdditiveExpression	( ( long ) ( penum -> thresh_buffer ) ) + penum -> ht_offset_bits		5664766	1		+			
ANR	5665167	CastExpression	( long ) ( penum -> thresh_buffer )		5664766	0					
ANR	5665168	CastTarget	long		5664766	0					
ANR	5665169	PtrMemberAccess	penum -> thresh_buffer		5664766	1					
ANR	5665170	Identifier	penum		5664766	0					
ANR	5665171	Identifier	thresh_buffer		5664766	1					
ANR	5665172	PtrMemberAccess	penum -> ht_offset_bits		5664766	1					
ANR	5665173	Identifier	penum		5664766	0					
ANR	5665174	Identifier	ht_offset_bits		5664766	1					
ANR	5665175	PrimaryExpression	15		5664766	1					
ANR	5665176	ForStatement	for ( k = 0 ; k < spp_out ; k ++ )		5664766	7					
ANR	5665177	ForInit	k = 0 ;	521:17:20959:20964	5664766	0	True				
ANR	5665178	AssignmentExpression	k = 0		5664766	0		=			
ANR	5665179	Identifier	k		5664766	0					
ANR	5665180	PrimaryExpression	0		5664766	1					
ANR	5665181	Condition	k < spp_out	521:24:20966:20976	5664766	1	True				
ANR	5665182	RelationalExpression	k < spp_out		5664766	0		<			
ANR	5665183	Identifier	k		5664766	0					
ANR	5665184	Identifier	spp_out		5664766	1					
ANR	5665185	PostIncDecOperationExpression	k ++	521:37:20979:20982	5664766	2	True				
ANR	5665186	Identifier	k		5664766	0					
ANR	5665187	IncDec	++		5664766	1					
ANR	5665188	CompoundStatement		71:43:3107:3107	5664766	3					
ANR	5665189	ExpressionStatement	offset_contone [ k ] = ( - ( ( ( long ) ( penum -> line ) ) + contone_stride * k + penum -> ht_offset_bits ) ) & 15	522:16:21003:21186	5664766	0	True				
ANR	5665190	AssignmentExpression	offset_contone [ k ] = ( - ( ( ( long ) ( penum -> line ) ) + contone_stride * k + penum -> ht_offset_bits ) ) & 15		5664766	0		=			
ANR	5665191	ArrayIndexing	offset_contone [ k ]		5664766	0					
ANR	5665192	Identifier	offset_contone		5664766	0					
ANR	5665193	Identifier	k		5664766	1					
ANR	5665194	BitAndExpression	( - ( ( ( long ) ( penum -> line ) ) + contone_stride * k + penum -> ht_offset_bits ) ) & 15		5664766	1		&			
ANR	5665195	UnaryOperationExpression	- ( ( ( long ) ( penum -> line ) ) + contone_stride * k + penum -> ht_offset_bits )		5664766	0					
ANR	5665196	UnaryOperator	-		5664766	0					
ANR	5665197	AdditiveExpression	( ( long ) ( penum -> line ) ) + contone_stride * k + penum -> ht_offset_bits		5664766	1		+			
ANR	5665198	CastExpression	( long ) ( penum -> line )		5664766	0					
ANR	5665199	CastTarget	long		5664766	0					
ANR	5665200	PtrMemberAccess	penum -> line		5664766	1					
ANR	5665201	Identifier	penum		5664766	0					
ANR	5665202	Identifier	line		5664766	1					
ANR	5665203	AdditiveExpression	contone_stride * k + penum -> ht_offset_bits		5664766	1		+			
ANR	5665204	MultiplicativeExpression	contone_stride * k		5664766	0		*			
ANR	5665205	Identifier	contone_stride		5664766	0					
ANR	5665206	Identifier	k		5664766	1					
ANR	5665207	PtrMemberAccess	penum -> ht_offset_bits		5664766	1					
ANR	5665208	Identifier	penum		5664766	0					
ANR	5665209	Identifier	ht_offset_bits		5664766	1					
ANR	5665210	PrimaryExpression	15		5664766	1					
ANR	5665211	ExpressionStatement	data_length = dest_width	526:12:21214:21238	5664766	8	True				
ANR	5665212	AssignmentExpression	data_length = dest_width		5664766	0		=			
ANR	5665213	Identifier	data_length		5664766	0					
ANR	5665214	Identifier	dest_width		5664766	1					
ANR	5665215	ExpressionStatement	dest_height = fixed2int_var_rounded ( any_abs ( penum -> y_extent . y ) )	527:12:21252:21315	5664766	9	True				
ANR	5665216	AssignmentExpression	dest_height = fixed2int_var_rounded ( any_abs ( penum -> y_extent . y ) )		5664766	0		=			
ANR	5665217	Identifier	dest_height		5664766	0					
ANR	5665218	CallExpression	fixed2int_var_rounded ( any_abs ( penum -> y_extent . y ) )		5664766	1					
ANR	5665219	Callee	fixed2int_var_rounded		5664766	0					
ANR	5665220	Identifier	fixed2int_var_rounded		5664766	0					
ANR	5665221	ArgumentList	any_abs ( penum -> y_extent . y )		5664766	1					
ANR	5665222	Argument	any_abs ( penum -> y_extent . y )		5664766	0					
ANR	5665223	CallExpression	any_abs ( penum -> y_extent . y )		5664766	0					
ANR	5665224	Callee	any_abs		5664766	0					
ANR	5665225	Identifier	any_abs		5664766	0					
ANR	5665226	ArgumentList	penum -> y_extent . y		5664766	1					
ANR	5665227	Argument	penum -> y_extent . y		5664766	0					
ANR	5665228	MemberAccess	penum -> y_extent . y		5664766	0					
ANR	5665229	PtrMemberAccess	penum -> y_extent		5664766	0					
ANR	5665230	Identifier	penum		5664766	0					
ANR	5665231	Identifier	y_extent		5664766	1					
ANR	5665232	Identifier	y		5664766	1					
ANR	5665233	ExpressionStatement	"memset ( penum -> ht_buffer , 0x00 , penum -> ht_stride * vdi * spp_out )"	530:12:21386:21450	5664766	10	True				
ANR	5665234	CallExpression	"memset ( penum -> ht_buffer , 0x00 , penum -> ht_stride * vdi * spp_out )"		5664766	0					
ANR	5665235	Callee	memset		5664766	0					
ANR	5665236	Identifier	memset		5664766	0					
ANR	5665237	ArgumentList	penum -> ht_buffer		5664766	1					
ANR	5665238	Argument	penum -> ht_buffer		5664766	0					
ANR	5665239	PtrMemberAccess	penum -> ht_buffer		5664766	0					
ANR	5665240	Identifier	penum		5664766	0					
ANR	5665241	Identifier	ht_buffer		5664766	1					
ANR	5665242	Argument	0x00		5664766	1					
ANR	5665243	PrimaryExpression	0x00		5664766	0					
ANR	5665244	Argument	penum -> ht_stride * vdi * spp_out		5664766	2					
ANR	5665245	MultiplicativeExpression	penum -> ht_stride * vdi * spp_out		5664766	0		*			
ANR	5665246	PtrMemberAccess	penum -> ht_stride		5664766	0					
ANR	5665247	Identifier	penum		5664766	0					
ANR	5665248	Identifier	ht_stride		5664766	1					
ANR	5665249	MultiplicativeExpression	vdi * spp_out		5664766	1		*			
ANR	5665250	Identifier	vdi		5664766	0					
ANR	5665251	Identifier	spp_out		5664766	1					
ANR	5665252	BreakStatement	break ;	532:12:21471:21476	5664766	11	True				
ANR	5665253	Label	case image_landscape :	533:8:21486:21506	5664766	12	True				
ANR	5665254	Identifier	image_landscape		5664766	0					
ANR	5665255	Label	default :	534:8:21516:21523	5664766	13	True				
ANR	5665256	Identifier	default		5664766	0					
ANR	5665257	ExpressionStatement	vdi = penum -> wci	539:12:21775:21791	5664766	14	True				
ANR	5665258	AssignmentExpression	vdi = penum -> wci		5664766	0		=			
ANR	5665259	Identifier	vdi		5664766	0					
ANR	5665260	PtrMemberAccess	penum -> wci		5664766	1					
ANR	5665261	Identifier	penum		5664766	0					
ANR	5665262	Identifier	wci		5664766	1					
ANR	5665263	ExpressionStatement	contone_stride = penum -> line_size	540:12:21805:21838	5664766	15	True				
ANR	5665264	AssignmentExpression	contone_stride = penum -> line_size		5664766	0		=			
ANR	5665265	Identifier	contone_stride		5664766	0					
ANR	5665266	PtrMemberAccess	penum -> line_size		5664766	1					
ANR	5665267	Identifier	penum		5664766	0					
ANR	5665268	Identifier	line_size		5664766	1					
ANR	5665269	ExpressionStatement	dest_width = fixed2int_var_rounded ( any_abs ( penum -> y_extent . x ) )	541:12:21852:21914	5664766	16	True				
ANR	5665270	AssignmentExpression	dest_width = fixed2int_var_rounded ( any_abs ( penum -> y_extent . x ) )		5664766	0		=			
ANR	5665271	Identifier	dest_width		5664766	0					
ANR	5665272	CallExpression	fixed2int_var_rounded ( any_abs ( penum -> y_extent . x ) )		5664766	1					
ANR	5665273	Callee	fixed2int_var_rounded		5664766	0					
ANR	5665274	Identifier	fixed2int_var_rounded		5664766	0					
ANR	5665275	ArgumentList	any_abs ( penum -> y_extent . x )		5664766	1					
ANR	5665276	Argument	any_abs ( penum -> y_extent . x )		5664766	0					
ANR	5665277	CallExpression	any_abs ( penum -> y_extent . x )		5664766	0					
ANR	5665278	Callee	any_abs		5664766	0					
ANR	5665279	Identifier	any_abs		5664766	0					
ANR	5665280	ArgumentList	penum -> y_extent . x		5664766	1					
ANR	5665281	Argument	penum -> y_extent . x		5664766	0					
ANR	5665282	MemberAccess	penum -> y_extent . x		5664766	0					
ANR	5665283	PtrMemberAccess	penum -> y_extent		5664766	0					
ANR	5665284	Identifier	penum		5664766	0					
ANR	5665285	Identifier	y_extent		5664766	1					
ANR	5665286	Identifier	x		5664766	1					
ANR	5665287	ExpressionStatement	xrun = dda_current ( dda_ht )	543:12:21998:22024	5664766	17	True				
ANR	5665288	AssignmentExpression	xrun = dda_current ( dda_ht )		5664766	0		=			
ANR	5665289	Identifier	xrun		5664766	0					
ANR	5665290	CallExpression	dda_current ( dda_ht )		5664766	1					
ANR	5665291	Callee	dda_current		5664766	0					
ANR	5665292	Identifier	dda_current		5664766	0					
ANR	5665293	ArgumentList	dda_ht		5664766	1					
ANR	5665294	Argument	dda_ht		5664766	0					
ANR	5665295	Identifier	dda_ht		5664766	0					
ANR	5665296	ExpressionStatement	"dest_height = gxht_dda_length ( & dda_ht , src_size )"	544:12:22101:22149	5664766	18	True				
ANR	5665297	AssignmentExpression	"dest_height = gxht_dda_length ( & dda_ht , src_size )"		5664766	0		=			
ANR	5665298	Identifier	dest_height		5664766	0					
ANR	5665299	CallExpression	"gxht_dda_length ( & dda_ht , src_size )"		5664766	1					
ANR	5665300	Callee	gxht_dda_length		5664766	0					
ANR	5665301	Identifier	gxht_dda_length		5664766	0					
ANR	5665302	ArgumentList	& dda_ht		5664766	1					
ANR	5665303	Argument	& dda_ht		5664766	0					
ANR	5665304	UnaryOperationExpression	& dda_ht		5664766	0					
ANR	5665305	UnaryOperator	&		5664766	0					
ANR	5665306	Identifier	dda_ht		5664766	1					
ANR	5665307	Argument	src_size		5664766	1					
ANR	5665308	Identifier	src_size		5664766	0					
ANR	5665309	ExpressionStatement	data_length = dest_height	545:12:22163:22188	5664766	19	True				
ANR	5665310	AssignmentExpression	data_length = dest_height		5664766	0		=			
ANR	5665311	Identifier	data_length		5664766	0					
ANR	5665312	Identifier	dest_height		5664766	1					
ANR	5665313	ExpressionStatement	offset_threshold = ( - ( long ) ( penum -> thresh_buffer ) ) & 15	546:12:22202:22257	5664766	20	True				
ANR	5665314	AssignmentExpression	offset_threshold = ( - ( long ) ( penum -> thresh_buffer ) ) & 15		5664766	0		=			
ANR	5665315	Identifier	offset_threshold		5664766	0					
ANR	5665316	BitAndExpression	( - ( long ) ( penum -> thresh_buffer ) ) & 15		5664766	1		&			
ANR	5665317	UnaryOperationExpression	- ( long ) ( penum -> thresh_buffer )		5664766	0					
ANR	5665318	UnaryOperator	-		5664766	0					
ANR	5665319	CastExpression	( long ) ( penum -> thresh_buffer )		5664766	1					
ANR	5665320	CastTarget	long		5664766	0					
ANR	5665321	PtrMemberAccess	penum -> thresh_buffer		5664766	1					
ANR	5665322	Identifier	penum		5664766	0					
ANR	5665323	Identifier	thresh_buffer		5664766	1					
ANR	5665324	PrimaryExpression	15		5664766	1					
ANR	5665325	ForStatement	for ( k = 0 ; k < spp_out ; k ++ )		5664766	21					
ANR	5665326	ForInit	k = 0 ;	547:17:22276:22281	5664766	0	True				
ANR	5665327	AssignmentExpression	k = 0		5664766	0		=			
ANR	5665328	Identifier	k		5664766	0					
ANR	5665329	PrimaryExpression	0		5664766	1					
ANR	5665330	Condition	k < spp_out	547:24:22283:22293	5664766	1	True				
ANR	5665331	RelationalExpression	k < spp_out		5664766	0		<			
ANR	5665332	Identifier	k		5664766	0					
ANR	5665333	Identifier	spp_out		5664766	1					
ANR	5665334	PostIncDecOperationExpression	k ++	547:37:22296:22299	5664766	2	True				
ANR	5665335	Identifier	k		5664766	0					
ANR	5665336	IncDec	++		5664766	1					
ANR	5665337	CompoundStatement		97:43:4424:4424	5664766	3					
ANR	5665338	ExpressionStatement	offset_contone [ k ] = ( - ( ( long ) ( penum -> line ) + contone_stride * k ) ) & 15	548:16:22320:22435	5664766	0	True				
ANR	5665339	AssignmentExpression	offset_contone [ k ] = ( - ( ( long ) ( penum -> line ) + contone_stride * k ) ) & 15		5664766	0		=			
ANR	5665340	ArrayIndexing	offset_contone [ k ]		5664766	0					
ANR	5665341	Identifier	offset_contone		5664766	0					
ANR	5665342	Identifier	k		5664766	1					
ANR	5665343	BitAndExpression	( - ( ( long ) ( penum -> line ) + contone_stride * k ) ) & 15		5664766	1		&			
ANR	5665344	UnaryOperationExpression	- ( ( long ) ( penum -> line ) + contone_stride * k )		5664766	0					
ANR	5665345	UnaryOperator	-		5664766	0					
ANR	5665346	AdditiveExpression	( long ) ( penum -> line ) + contone_stride * k		5664766	1		+			
ANR	5665347	CastExpression	( long ) ( penum -> line )		5664766	0					
ANR	5665348	CastTarget	long		5664766	0					
ANR	5665349	PtrMemberAccess	penum -> line		5664766	1					
ANR	5665350	Identifier	penum		5664766	0					
ANR	5665351	Identifier	line		5664766	1					
ANR	5665352	MultiplicativeExpression	contone_stride * k		5664766	1		*			
ANR	5665353	Identifier	contone_stride		5664766	0					
ANR	5665354	Identifier	k		5664766	1					
ANR	5665355	PrimaryExpression	15		5664766	1					
ANR	5665356	IfStatement	if ( penum -> ht_landscape . count == 0 )		5664766	22					
ANR	5665357	Condition	penum -> ht_landscape . count == 0	559:16:23003:23032	5664766	0	True				
ANR	5665358	EqualityExpression	penum -> ht_landscape . count == 0		5664766	0		==			
ANR	5665359	MemberAccess	penum -> ht_landscape . count		5664766	0					
ANR	5665360	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5665361	Identifier	penum		5664766	0					
ANR	5665362	Identifier	ht_landscape		5664766	1					
ANR	5665363	Identifier	count		5664766	1					
ANR	5665364	PrimaryExpression	0		5664766	1					
ANR	5665365	CompoundStatement		109:48:5157:5157	5664766	1					
ANR	5665366	ExpressionStatement	penum -> ht_landscape . offset_set = true	564:16:23331:23368	5664766	0	True				
ANR	5665367	AssignmentExpression	penum -> ht_landscape . offset_set = true		5664766	0		=			
ANR	5665368	MemberAccess	penum -> ht_landscape . offset_set		5664766	0					
ANR	5665369	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5665370	Identifier	penum		5664766	0					
ANR	5665371	Identifier	ht_landscape		5664766	1					
ANR	5665372	Identifier	offset_set		5664766	1					
ANR	5665373	Identifier	true		5664766	1					
ANR	5665374	IfStatement	if ( penum -> ht_landscape . index < 0 )		5664766	1					
ANR	5665375	Condition	penum -> ht_landscape . index < 0	565:20:23390:23418	5664766	0	True				
ANR	5665376	RelationalExpression	penum -> ht_landscape . index < 0		5664766	0		<			
ANR	5665377	MemberAccess	penum -> ht_landscape . index		5664766	0					
ANR	5665378	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5665379	Identifier	penum		5664766	0					
ANR	5665380	Identifier	ht_landscape		5664766	1					
ANR	5665381	Identifier	index		5664766	1					
ANR	5665382	PrimaryExpression	0		5664766	1					
ANR	5665383	CompoundStatement		115:51:5543:5543	5664766	1					
ANR	5665384	ExpressionStatement	penum -> ht_landscape . xstart = penum -> xci + vdi - 1	566:20:23443:23492	5664766	0	True				
ANR	5665385	AssignmentExpression	penum -> ht_landscape . xstart = penum -> xci + vdi - 1		5664766	0		=			
ANR	5665386	MemberAccess	penum -> ht_landscape . xstart		5664766	0					
ANR	5665387	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5665388	Identifier	penum		5664766	0					
ANR	5665389	Identifier	ht_landscape		5664766	1					
ANR	5665390	Identifier	xstart		5664766	1					
ANR	5665391	AdditiveExpression	penum -> xci + vdi - 1		5664766	1		+			
ANR	5665392	PtrMemberAccess	penum -> xci		5664766	0					
ANR	5665393	Identifier	penum		5664766	0					
ANR	5665394	Identifier	xci		5664766	1					
ANR	5665395	AdditiveExpression	vdi - 1		5664766	1		-			
ANR	5665396	Identifier	vdi		5664766	0					
ANR	5665397	PrimaryExpression	1		5664766	1					
ANR	5665398	ExpressionStatement	offset_bits = ( penum -> ht_landscape . xstart % 16 ) + 1	567:20:23514:23565	5664766	1	True				
ANR	5665399	AssignmentExpression	offset_bits = ( penum -> ht_landscape . xstart % 16 ) + 1		5664766	0		=			
ANR	5665400	Identifier	offset_bits		5664766	0					
ANR	5665401	AdditiveExpression	( penum -> ht_landscape . xstart % 16 ) + 1		5664766	1		+			
ANR	5665402	MultiplicativeExpression	penum -> ht_landscape . xstart % 16		5664766	0		%			
ANR	5665403	MemberAccess	penum -> ht_landscape . xstart		5664766	0					
ANR	5665404	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5665405	Identifier	penum		5664766	0					
ANR	5665406	Identifier	ht_landscape		5664766	1					
ANR	5665407	Identifier	xstart		5664766	1					
ANR	5665408	PrimaryExpression	16		5664766	1					
ANR	5665409	PrimaryExpression	1		5664766	1					
ANR	5665410	IfStatement	if ( offset_bits <= 0 )		5664766	2					
ANR	5665411	Condition	offset_bits <= 0	569:24:23656:23671	5664766	0	True				
ANR	5665412	RelationalExpression	offset_bits <= 0		5664766	0		<=			
ANR	5665413	Identifier	offset_bits		5664766	0					
ANR	5665414	PrimaryExpression	0		5664766	1					
ANR	5665415	ExpressionStatement	offset_bits += 16	569:42:23674:23691	5664766	1	True				
ANR	5665416	AssignmentExpression	offset_bits += 16		5664766	0		+=			
ANR	5665417	Identifier	offset_bits		5664766	0					
ANR	5665418	PrimaryExpression	16		5664766	1					
ANR	5665419	ElseStatement	else		5664766	0					
ANR	5665420	CompoundStatement		120:23:5838:5838	5664766	0					
ANR	5665421	ExpressionStatement	penum -> ht_landscape . xstart = penum -> xci	571:20:23738:23777	5664766	0	True				
ANR	5665422	AssignmentExpression	penum -> ht_landscape . xstart = penum -> xci		5664766	0		=			
ANR	5665423	MemberAccess	penum -> ht_landscape . xstart		5664766	0					
ANR	5665424	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5665425	Identifier	penum		5664766	0					
ANR	5665426	Identifier	ht_landscape		5664766	1					
ANR	5665427	Identifier	xstart		5664766	1					
ANR	5665428	PtrMemberAccess	penum -> xci		5664766	1					
ANR	5665429	Identifier	penum		5664766	0					
ANR	5665430	Identifier	xci		5664766	1					
ANR	5665431	ExpressionStatement	offset_bits = 16 - penum -> xci % 16	573:20:23862:23896	5664766	1	True				
ANR	5665432	AssignmentExpression	offset_bits = 16 - penum -> xci % 16		5664766	0		=			
ANR	5665433	Identifier	offset_bits		5664766	0					
ANR	5665434	AdditiveExpression	16 - penum -> xci % 16		5664766	1		-			
ANR	5665435	PrimaryExpression	16		5664766	0					
ANR	5665436	MultiplicativeExpression	penum -> xci % 16		5664766	1		%			
ANR	5665437	PtrMemberAccess	penum -> xci		5664766	0					
ANR	5665438	Identifier	penum		5664766	0					
ANR	5665439	Identifier	xci		5664766	1					
ANR	5665440	PrimaryExpression	16		5664766	1					
ANR	5665441	IfStatement	if ( offset_bits >= 16 )		5664766	2					
ANR	5665442	Condition	offset_bits >= 16	574:24:23922:23938	5664766	0	True				
ANR	5665443	RelationalExpression	offset_bits >= 16		5664766	0		>=			
ANR	5665444	Identifier	offset_bits		5664766	0					
ANR	5665445	PrimaryExpression	16		5664766	1					
ANR	5665446	ExpressionStatement	offset_bits -= 16	574:43:23941:23958	5664766	1	True				
ANR	5665447	AssignmentExpression	offset_bits -= 16		5664766	0		-=			
ANR	5665448	Identifier	offset_bits		5664766	0					
ANR	5665449	PrimaryExpression	16		5664766	1					
ANR	5665450	IfStatement	if ( offset_bits == 0 || offset_bits == 16 )		5664766	2					
ANR	5665451	Condition	offset_bits == 0 || offset_bits == 16	576:20:23998:24034	5664766	0	True				
ANR	5665452	OrExpression	offset_bits == 0 || offset_bits == 16		5664766	0		||			
ANR	5665453	EqualityExpression	offset_bits == 0		5664766	0		==			
ANR	5665454	Identifier	offset_bits		5664766	0					
ANR	5665455	PrimaryExpression	0		5664766	1					
ANR	5665456	EqualityExpression	offset_bits == 16		5664766	1		==			
ANR	5665457	Identifier	offset_bits		5664766	0					
ANR	5665458	PrimaryExpression	16		5664766	1					
ANR	5665459	CompoundStatement		126:59:6159:6159	5664766	1					
ANR	5665460	ExpressionStatement	penum -> ht_landscape . offset_set = false	577:20:24059:24097	5664766	0	True				
ANR	5665461	AssignmentExpression	penum -> ht_landscape . offset_set = false		5664766	0		=			
ANR	5665462	MemberAccess	penum -> ht_landscape . offset_set		5664766	0					
ANR	5665463	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5665464	Identifier	penum		5664766	0					
ANR	5665465	Identifier	ht_landscape		5664766	1					
ANR	5665466	Identifier	offset_set		5664766	1					
ANR	5665467	Identifier	false		5664766	1					
ANR	5665468	ExpressionStatement	penum -> ht_offset_bits = 0	578:20:24119:24144	5664766	1	True				
ANR	5665469	AssignmentExpression	penum -> ht_offset_bits = 0		5664766	0		=			
ANR	5665470	PtrMemberAccess	penum -> ht_offset_bits		5664766	0					
ANR	5665471	Identifier	penum		5664766	0					
ANR	5665472	Identifier	ht_offset_bits		5664766	1					
ANR	5665473	PrimaryExpression	0		5664766	1					
ANR	5665474	ElseStatement	else		5664766	0					
ANR	5665475	CompoundStatement		129:23:6291:6291	5664766	0					
ANR	5665476	ExpressionStatement	penum -> ht_offset_bits = offset_bits	580:20:24191:24226	5664766	0	True				
ANR	5665477	AssignmentExpression	penum -> ht_offset_bits = offset_bits		5664766	0		=			
ANR	5665478	PtrMemberAccess	penum -> ht_offset_bits		5664766	0					
ANR	5665479	Identifier	penum		5664766	0					
ANR	5665480	Identifier	ht_offset_bits		5664766	1					
ANR	5665481	Identifier	offset_bits		5664766	1					
ANR	5665482	BreakStatement	break ;	583:12:24272:24277	5664766	23	True				
ANR	5665483	IfStatement	if ( flush_buff )		5664766	32					
ANR	5665484	Condition	flush_buff	585:8:24293:24302	5664766	0	True				
ANR	5665485	Identifier	flush_buff		5664766	0					
ANR	5665486	GotoStatement	goto flush ;	586:8:24313:24323	5664766	1	True				
ANR	5665487	Identifier	flush		5664766	0					
ANR	5665488	ForStatement	for ( k = 0 ; k < spp_out ; k ++ )		5664766	33					
ANR	5665489	ForInit	k = 0 ;	589:9:24393:24398	5664766	0	True				
ANR	5665490	AssignmentExpression	k = 0		5664766	0		=			
ANR	5665491	Identifier	k		5664766	0					
ANR	5665492	PrimaryExpression	0		5664766	1					
ANR	5665493	Condition	k < spp_out	589:16:24400:24410	5664766	1	True				
ANR	5665494	RelationalExpression	k < spp_out		5664766	0		<			
ANR	5665495	Identifier	k		5664766	0					
ANR	5665496	Identifier	spp_out		5664766	1					
ANR	5665497	PostIncDecOperationExpression	k ++	589:29:24413:24415	5664766	2	True				
ANR	5665498	Identifier	k		5664766	0					
ANR	5665499	IncDec	++		5664766	1					
ANR	5665500	CompoundStatement		139:34:6540:6540	5664766	3					
ANR	5665501	IfStatement	if ( posture == image_portrait )		5664766	0					
ANR	5665502	Condition	posture == image_portrait	590:12:24432:24456	5664766	0	True				
ANR	5665503	EqualityExpression	posture == image_portrait		5664766	0		==			
ANR	5665504	Identifier	posture		5664766	0					
ANR	5665505	Identifier	image_portrait		5664766	1					
ANR	5665506	CompoundStatement		140:39:6581:6581	5664766	1					
ANR	5665507	ExpressionStatement	devc_contone [ k ] = penum -> line + contone_stride * k + offset_contone [ k ]	591:12:24473:24573	5664766	0	True				
ANR	5665508	AssignmentExpression	devc_contone [ k ] = penum -> line + contone_stride * k + offset_contone [ k ]		5664766	0		=			
ANR	5665509	ArrayIndexing	devc_contone [ k ]		5664766	0					
ANR	5665510	Identifier	devc_contone		5664766	0					
ANR	5665511	Identifier	k		5664766	1					
ANR	5665512	AdditiveExpression	penum -> line + contone_stride * k + offset_contone [ k ]		5664766	1		+			
ANR	5665513	PtrMemberAccess	penum -> line		5664766	0					
ANR	5665514	Identifier	penum		5664766	0					
ANR	5665515	Identifier	line		5664766	1					
ANR	5665516	AdditiveExpression	contone_stride * k + offset_contone [ k ]		5664766	1		+			
ANR	5665517	MultiplicativeExpression	contone_stride * k		5664766	0		*			
ANR	5665518	Identifier	contone_stride		5664766	0					
ANR	5665519	Identifier	k		5664766	1					
ANR	5665520	ArrayIndexing	offset_contone [ k ]		5664766	1					
ANR	5665521	Identifier	offset_contone		5664766	0					
ANR	5665522	Identifier	k		5664766	1					
ANR	5665523	ElseStatement	else		5664766	0					
ANR	5665524	CompoundStatement		143:15:6712:6712	5664766	0					
ANR	5665525	ExpressionStatement	devc_contone [ k ] = penum -> line + offset_contone [ k ] + LAND_BITS * k * contone_stride	594:12:24604:24716	5664766	0	True				
ANR	5665526	AssignmentExpression	devc_contone [ k ] = penum -> line + offset_contone [ k ] + LAND_BITS * k * contone_stride		5664766	0		=			
ANR	5665527	ArrayIndexing	devc_contone [ k ]		5664766	0					
ANR	5665528	Identifier	devc_contone		5664766	0					
ANR	5665529	Identifier	k		5664766	1					
ANR	5665530	AdditiveExpression	penum -> line + offset_contone [ k ] + LAND_BITS * k * contone_stride		5664766	1		+			
ANR	5665531	PtrMemberAccess	penum -> line		5664766	0					
ANR	5665532	Identifier	penum		5664766	0					
ANR	5665533	Identifier	line		5664766	1					
ANR	5665534	AdditiveExpression	offset_contone [ k ] + LAND_BITS * k * contone_stride		5664766	1		+			
ANR	5665535	ArrayIndexing	offset_contone [ k ]		5664766	0					
ANR	5665536	Identifier	offset_contone		5664766	0					
ANR	5665537	Identifier	k		5664766	1					
ANR	5665538	MultiplicativeExpression	LAND_BITS * k * contone_stride		5664766	1		*			
ANR	5665539	Identifier	LAND_BITS		5664766	0					
ANR	5665540	MultiplicativeExpression	k * contone_stride		5664766	1		*			
ANR	5665541	Identifier	k		5664766	0					
ANR	5665542	Identifier	contone_stride		5664766	1					
ANR	5665543	ExpressionStatement	psrc_plane [ k ] = psrc_cm + psrc_planestride * k	597:8:24736:24782	5664766	1	True				
ANR	5665544	AssignmentExpression	psrc_plane [ k ] = psrc_cm + psrc_planestride * k		5664766	0		=			
ANR	5665545	ArrayIndexing	psrc_plane [ k ]		5664766	0					
ANR	5665546	Identifier	psrc_plane		5664766	0					
ANR	5665547	Identifier	k		5664766	1					
ANR	5665548	AdditiveExpression	psrc_cm + psrc_planestride * k		5664766	1		+			
ANR	5665549	Identifier	psrc_cm		5664766	0					
ANR	5665550	MultiplicativeExpression	psrc_planestride * k		5664766	1		*			
ANR	5665551	Identifier	psrc_planestride		5664766	0					
ANR	5665552	Identifier	k		5664766	1					
ANR	5665553	ExpressionStatement	xr = fixed2int_var_rounded ( dda_current ( dda_ht ) )	599:4:24794:24841	5664766	34	True				
ANR	5665554	AssignmentExpression	xr = fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	0		=			
ANR	5665555	Identifier	xr		5664766	0					
ANR	5665556	CallExpression	fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	1					
ANR	5665557	Callee	fixed2int_var_rounded		5664766	0					
ANR	5665558	Identifier	fixed2int_var_rounded		5664766	0					
ANR	5665559	ArgumentList	dda_current ( dda_ht )		5664766	1					
ANR	5665560	Argument	dda_current ( dda_ht )		5664766	0					
ANR	5665561	CallExpression	dda_current ( dda_ht )		5664766	0					
ANR	5665562	Callee	dda_current		5664766	0					
ANR	5665563	Identifier	dda_current		5664766	0					
ANR	5665564	ArgumentList	dda_ht		5664766	1					
ANR	5665565	Argument	dda_ht		5664766	0					
ANR	5665566	Identifier	dda_ht		5664766	0					
ANR	5665567	SwitchStatement	switch ( spp_out )		5664766	35					
ANR	5665568	Condition	spp_out	604:12:25092:25098	5664766	0	True				
ANR	5665569	Identifier	spp_out		5664766	0					
ANR	5665570	CompoundStatement		155:4:7227:7227	5664766	1					
ANR	5665571	Label	case 1 :	607:8:25152:25158	5664766	0	True				
ANR	5665572	ExpressionStatement	devc_contone_gray = devc_contone [ 0 ]	608:12:25172:25207	5664766	1	True				
ANR	5665573	AssignmentExpression	devc_contone_gray = devc_contone [ 0 ]		5664766	0		=			
ANR	5665574	Identifier	devc_contone_gray		5664766	0					
ANR	5665575	ArrayIndexing	devc_contone [ 0 ]		5664766	1					
ANR	5665576	Identifier	devc_contone		5664766	0					
ANR	5665577	PrimaryExpression	0		5664766	1					
ANR	5665578	SwitchStatement	switch ( posture )		5664766	2					
ANR	5665579	Condition	posture	609:20:25229:25235	5664766	0	True				
ANR	5665580	Identifier	posture		5664766	0					
ANR	5665581	CompoundStatement		159:29:7360:7360	5664766	1					
ANR	5665582	Label	case image_portrait :	611:16:25298:25317	5664766	0	True				
ANR	5665583	Identifier	image_portrait		5664766	0					
ANR	5665584	IfStatement	if ( penum -> dst_width > 0 )		5664766	1					
ANR	5665585	Condition	penum -> dst_width > 0	612:24:25343:25362	5664766	0	True				
ANR	5665586	RelationalExpression	penum -> dst_width > 0		5664766	0		>			
ANR	5665587	PtrMemberAccess	penum -> dst_width		5664766	0					
ANR	5665588	Identifier	penum		5664766	0					
ANR	5665589	Identifier	dst_width		5664766	1					
ANR	5665590	PrimaryExpression	0		5664766	1					
ANR	5665591	CompoundStatement		162:46:7487:7487	5664766	1					
ANR	5665592	IfStatement	if ( src_size == dest_width )		5664766	0					
ANR	5665593	Condition	src_size == dest_width	613:28:25395:25416	5664766	0	True				
ANR	5665594	EqualityExpression	src_size == dest_width		5664766	0		==			
ANR	5665595	Identifier	src_size		5664766	0					
ANR	5665596	Identifier	dest_width		5664766	1					
ANR	5665597	CompoundStatement		163:52:7541:7541	5664766	1					
ANR	5665598	ExpressionStatement	"memcpy ( devc_contone_gray , psrc_cm , data_length )"	614:28:25449:25496	5664766	0	True				
ANR	5665599	CallExpression	"memcpy ( devc_contone_gray , psrc_cm , data_length )"		5664766	0					
ANR	5665600	Callee	memcpy		5664766	0					
ANR	5665601	Identifier	memcpy		5664766	0					
ANR	5665602	ArgumentList	devc_contone_gray		5664766	1					
ANR	5665603	Argument	devc_contone_gray		5664766	0					
ANR	5665604	Identifier	devc_contone_gray		5664766	0					
ANR	5665605	Argument	psrc_cm		5664766	1					
ANR	5665606	Identifier	psrc_cm		5664766	0					
ANR	5665607	Argument	data_length		5664766	2					
ANR	5665608	Identifier	data_length		5664766	0					
ANR	5665609	ElseStatement	else		5664766	0					
ANR	5665610	IfStatement	if ( src_size * 2 == dest_width )		5664766	0					
ANR	5665611	Condition	src_size * 2 == dest_width	615:35:25533:25558	5664766	0	True				
ANR	5665612	EqualityExpression	src_size * 2 == dest_width		5664766	0		==			
ANR	5665613	MultiplicativeExpression	src_size * 2		5664766	0		*			
ANR	5665614	Identifier	src_size		5664766	0					
ANR	5665615	PrimaryExpression	2		5664766	1					
ANR	5665616	Identifier	dest_width		5664766	1					
ANR	5665617	CompoundStatement		165:63:7683:7683	5664766	1					
ANR	5665618	ExpressionStatement	psrc_temp = psrc_cm	616:28:25591:25610	5664766	0	True				
ANR	5665619	AssignmentExpression	psrc_temp = psrc_cm		5664766	0		=			
ANR	5665620	Identifier	psrc_temp		5664766	0					
ANR	5665621	Identifier	psrc_cm		5664766	1					
ANR	5665622	ForStatement	"for ( k = 0 ; k < data_length ; k += 2 , devc_contone_gray += 2 , psrc_temp ++ )"		5664766	1					
ANR	5665623	ForInit	k = 0 ;	617:33:25645:25650	5664766	0	True				
ANR	5665624	AssignmentExpression	k = 0		5664766	0		=			
ANR	5665625	Identifier	k		5664766	0					
ANR	5665626	PrimaryExpression	0		5664766	1					
ANR	5665627	Condition	k < data_length	617:40:25652:25666	5664766	1	True				
ANR	5665628	RelationalExpression	k < data_length		5664766	0		<			
ANR	5665629	Identifier	k		5664766	0					
ANR	5665630	Identifier	data_length		5664766	1					
ANR	5665631	Expression	"k += 2 , devc_contone_gray += 2 , psrc_temp ++"	617:57:25669:25740	5664766	2	True				
ANR	5665632	AssignmentExpression	k += 2		5664766	0		+=			
ANR	5665633	Identifier	k		5664766	0					
ANR	5665634	PrimaryExpression	2		5664766	1					
ANR	5665635	Expression	"devc_contone_gray += 2 , psrc_temp ++"		5664766	1					
ANR	5665636	AssignmentExpression	devc_contone_gray += 2		5664766	0		+=			
ANR	5665637	Identifier	devc_contone_gray		5664766	0					
ANR	5665638	PrimaryExpression	2		5664766	1					
ANR	5665639	PostIncDecOperationExpression	psrc_temp ++		5664766	1					
ANR	5665640	Identifier	psrc_temp		5664766	0					
ANR	5665641	IncDec	++		5664766	1					
ANR	5665642	CompoundStatement		168:68:7865:7865	5664766	3					
ANR	5665643	ExpressionStatement	* devc_contone_gray = * ( devc_contone_gray + 1 ) = * psrc_temp	619:32:25777:25869	5664766	0	True				
ANR	5665644	AssignmentExpression	* devc_contone_gray = * ( devc_contone_gray + 1 ) = * psrc_temp		5664766	0		=			
ANR	5665645	UnaryOperationExpression	* devc_contone_gray		5664766	0					
ANR	5665646	UnaryOperator	*		5664766	0					
ANR	5665647	Identifier	devc_contone_gray		5664766	1					
ANR	5665648	AssignmentExpression	* ( devc_contone_gray + 1 ) = * psrc_temp		5664766	1		=			
ANR	5665649	UnaryOperationExpression	* ( devc_contone_gray + 1 )		5664766	0					
ANR	5665650	UnaryOperator	*		5664766	0					
ANR	5665651	AdditiveExpression	devc_contone_gray + 1		5664766	1		+			
ANR	5665652	Identifier	devc_contone_gray		5664766	0					
ANR	5665653	PrimaryExpression	1		5664766	1					
ANR	5665654	UnaryOperationExpression	* psrc_temp		5664766	1					
ANR	5665655	UnaryOperator	*		5664766	0					
ANR	5665656	Identifier	psrc_temp		5664766	1					
ANR	5665657	ElseStatement	else		5664766	0					
ANR	5665658	CompoundStatement		172:31:8054:8054	5664766	0					
ANR	5665659	ExpressionStatement	psrc_temp = psrc_cm	624:24:26007:26026	5664766	0	True				
ANR	5665660	AssignmentExpression	psrc_temp = psrc_cm		5664766	0		=			
ANR	5665661	Identifier	psrc_temp		5664766	0					
ANR	5665662	Identifier	psrc_cm		5664766	1					
ANR	5665663	ForStatement	for ( k = 0 ; k < src_size ; k ++ )		5664766	1					
ANR	5665664	ForInit	k = 0 ;	625:29:26057:26060	5664766	0	True				
ANR	5665665	AssignmentExpression	k = 0		5664766	0		=			
ANR	5665666	Identifier	k		5664766	0					
ANR	5665667	PrimaryExpression	0		5664766	1					
ANR	5665668	Condition	k < src_size	625:34:26062:26071	5664766	1	True				
ANR	5665669	RelationalExpression	k < src_size		5664766	0		<			
ANR	5665670	Identifier	k		5664766	0					
ANR	5665671	Identifier	src_size		5664766	1					
ANR	5665672	PostIncDecOperationExpression	k ++	625:46:26074:26076	5664766	2	True				
ANR	5665673	Identifier	k		5664766	0					
ANR	5665674	IncDec	++		5664766	1					
ANR	5665675	CompoundStatement		175:51:8201:8201	5664766	3					
ANR	5665676	ExpressionStatement	dda_next ( dda_ht )	626:28:26109:26125	5664766	0	True				
ANR	5665677	CallExpression	dda_next ( dda_ht )		5664766	0					
ANR	5665678	Callee	dda_next		5664766	0					
ANR	5665679	Identifier	dda_next		5664766	0					
ANR	5665680	ArgumentList	dda_ht		5664766	1					
ANR	5665681	Argument	dda_ht		5664766	0					
ANR	5665682	Identifier	dda_ht		5664766	0					
ANR	5665683	ExpressionStatement	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )	627:28:26155:26202	5664766	1	True				
ANR	5665684	AssignmentExpression	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	0		=			
ANR	5665685	Identifier	xn		5664766	0					
ANR	5665686	CallExpression	fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	1					
ANR	5665687	Callee	fixed2int_var_rounded		5664766	0					
ANR	5665688	Identifier	fixed2int_var_rounded		5664766	0					
ANR	5665689	ArgumentList	dda_current ( dda_ht )		5664766	1					
ANR	5665690	Argument	dda_current ( dda_ht )		5664766	0					
ANR	5665691	CallExpression	dda_current ( dda_ht )		5664766	0					
ANR	5665692	Callee	dda_current		5664766	0					
ANR	5665693	Identifier	dda_current		5664766	0					
ANR	5665694	ArgumentList	dda_ht		5664766	1					
ANR	5665695	Argument	dda_ht		5664766	0					
ANR	5665696	Identifier	dda_ht		5664766	0					
ANR	5665697	WhileStatement	while ( xr < xn )		5664766	2					
ANR	5665698	Condition	xr < xn	628:35:26239:26245	5664766	0	True				
ANR	5665699	RelationalExpression	xr < xn		5664766	0		<			
ANR	5665700	Identifier	xr		5664766	0					
ANR	5665701	Identifier	xn		5664766	1					
ANR	5665702	CompoundStatement		178:44:8370:8370	5664766	1					
ANR	5665703	ExpressionStatement	* devc_contone_gray ++ = * psrc_temp	629:32:26282:26315	5664766	0	True				
ANR	5665704	AssignmentExpression	* devc_contone_gray ++ = * psrc_temp		5664766	0		=			
ANR	5665705	UnaryOperationExpression	* devc_contone_gray ++		5664766	0					
ANR	5665706	UnaryOperator	*		5664766	0					
ANR	5665707	PostIncDecOperationExpression	devc_contone_gray ++		5664766	1					
ANR	5665708	Identifier	devc_contone_gray		5664766	0					
ANR	5665709	IncDec	++		5664766	1					
ANR	5665710	UnaryOperationExpression	* psrc_temp		5664766	1					
ANR	5665711	UnaryOperator	*		5664766	0					
ANR	5665712	Identifier	psrc_temp		5664766	1					
ANR	5665713	ExpressionStatement	xr ++	630:32:26349:26353	5664766	1	True				
ANR	5665714	PostIncDecOperationExpression	xr ++		5664766	0					
ANR	5665715	Identifier	xr		5664766	0					
ANR	5665716	IncDec	++		5664766	1					
ANR	5665717	ExpressionStatement	psrc_temp ++	632:28:26459:26470	5664766	3	True				
ANR	5665718	PostIncDecOperationExpression	psrc_temp ++		5664766	0					
ANR	5665719	Identifier	psrc_temp		5664766	0					
ANR	5665720	IncDec	++		5664766	1					
ANR	5665721	ElseStatement	else		5664766	0					
ANR	5665722	CompoundStatement		185:27:8677:8677	5664766	0					
ANR	5665723	ExpressionStatement	devc_contone_gray += ( data_length - 1 )	637:24:26632:26670	5664766	0	True				
ANR	5665724	AssignmentExpression	devc_contone_gray += ( data_length - 1 )		5664766	0		+=			
ANR	5665725	Identifier	devc_contone_gray		5664766	0					
ANR	5665726	AdditiveExpression	data_length - 1		5664766	1		-			
ANR	5665727	Identifier	data_length		5664766	0					
ANR	5665728	PrimaryExpression	1		5664766	1					
ANR	5665729	ExpressionStatement	psrc_temp = psrc_cm	638:24:26696:26715	5664766	1	True				
ANR	5665730	AssignmentExpression	psrc_temp = psrc_cm		5664766	0		=			
ANR	5665731	Identifier	psrc_temp		5664766	0					
ANR	5665732	Identifier	psrc_cm		5664766	1					
ANR	5665733	ForStatement	for ( k = 0 ; k < src_size ; k ++ )		5664766	2					
ANR	5665734	ForInit	k = 0 ;	639:29:26746:26749	5664766	0	True				
ANR	5665735	AssignmentExpression	k = 0		5664766	0		=			
ANR	5665736	Identifier	k		5664766	0					
ANR	5665737	PrimaryExpression	0		5664766	1					
ANR	5665738	Condition	k < src_size	639:34:26751:26760	5664766	1	True				
ANR	5665739	RelationalExpression	k < src_size		5664766	0		<			
ANR	5665740	Identifier	k		5664766	0					
ANR	5665741	Identifier	src_size		5664766	1					
ANR	5665742	PostIncDecOperationExpression	k ++	639:46:26763:26765	5664766	2	True				
ANR	5665743	Identifier	k		5664766	0					
ANR	5665744	IncDec	++		5664766	1					
ANR	5665745	CompoundStatement		189:51:8890:8890	5664766	3					
ANR	5665746	ExpressionStatement	dda_next ( dda_ht )	640:28:26798:26814	5664766	0	True				
ANR	5665747	CallExpression	dda_next ( dda_ht )		5664766	0					
ANR	5665748	Callee	dda_next		5664766	0					
ANR	5665749	Identifier	dda_next		5664766	0					
ANR	5665750	ArgumentList	dda_ht		5664766	1					
ANR	5665751	Argument	dda_ht		5664766	0					
ANR	5665752	Identifier	dda_ht		5664766	0					
ANR	5665753	ExpressionStatement	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )	641:28:26844:26891	5664766	1	True				
ANR	5665754	AssignmentExpression	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	0		=			
ANR	5665755	Identifier	xn		5664766	0					
ANR	5665756	CallExpression	fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	1					
ANR	5665757	Callee	fixed2int_var_rounded		5664766	0					
ANR	5665758	Identifier	fixed2int_var_rounded		5664766	0					
ANR	5665759	ArgumentList	dda_current ( dda_ht )		5664766	1					
ANR	5665760	Argument	dda_current ( dda_ht )		5664766	0					
ANR	5665761	CallExpression	dda_current ( dda_ht )		5664766	0					
ANR	5665762	Callee	dda_current		5664766	0					
ANR	5665763	Identifier	dda_current		5664766	0					
ANR	5665764	ArgumentList	dda_ht		5664766	1					
ANR	5665765	Argument	dda_ht		5664766	0					
ANR	5665766	Identifier	dda_ht		5664766	0					
ANR	5665767	WhileStatement	while ( xr > xn )		5664766	2					
ANR	5665768	Condition	xr > xn	642:35:26928:26934	5664766	0	True				
ANR	5665769	RelationalExpression	xr > xn		5664766	0		>			
ANR	5665770	Identifier	xr		5664766	0					
ANR	5665771	Identifier	xn		5664766	1					
ANR	5665772	CompoundStatement		192:44:9059:9059	5664766	1					
ANR	5665773	ExpressionStatement	* devc_contone_gray -- = * psrc_temp	643:32:26971:27004	5664766	0	True				
ANR	5665774	AssignmentExpression	* devc_contone_gray -- = * psrc_temp		5664766	0		=			
ANR	5665775	UnaryOperationExpression	* devc_contone_gray --		5664766	0					
ANR	5665776	UnaryOperator	*		5664766	0					
ANR	5665777	PostIncDecOperationExpression	devc_contone_gray --		5664766	1					
ANR	5665778	Identifier	devc_contone_gray		5664766	0					
ANR	5665779	IncDec	--		5664766	1					
ANR	5665780	UnaryOperationExpression	* psrc_temp		5664766	1					
ANR	5665781	UnaryOperator	*		5664766	0					
ANR	5665782	Identifier	psrc_temp		5664766	1					
ANR	5665783	ExpressionStatement	xr --	644:32:27038:27042	5664766	1	True				
ANR	5665784	PostIncDecOperationExpression	xr --		5664766	0					
ANR	5665785	Identifier	xr		5664766	0					
ANR	5665786	IncDec	--		5664766	1					
ANR	5665787	ExpressionStatement	psrc_temp ++	646:28:27148:27159	5664766	3	True				
ANR	5665788	PostIncDecOperationExpression	psrc_temp ++		5664766	0					
ANR	5665789	Identifier	psrc_temp		5664766	0					
ANR	5665790	IncDec	++		5664766	1					
ANR	5665791	BreakStatement	break ;	649:20:27233:27238	5664766	2	True				
ANR	5665792	Label	case image_landscape :	651:16:27299:27319	5664766	3	True				
ANR	5665793	Identifier	image_landscape		5664766	0					
ANR	5665794	IfStatement	if ( penum -> ht_landscape . flipy )		5664766	4					
ANR	5665795	Condition	penum -> ht_landscape . flipy	655:24:27551:27575	5664766	0	True				
ANR	5665796	MemberAccess	penum -> ht_landscape . flipy		5664766	0					
ANR	5665797	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5665798	Identifier	penum		5664766	0					
ANR	5665799	Identifier	ht_landscape		5664766	1					
ANR	5665800	Identifier	flipy		5664766	1					
ANR	5665801	CompoundStatement		205:51:9700:9700	5664766	1					
ANR	5665802	ExpressionStatement	position = penum -> ht_landscape . curr_pos + LAND_BITS * ( data_length - 1 )	656:24:27604:27711	5664766	0	True				
ANR	5665803	AssignmentExpression	position = penum -> ht_landscape . curr_pos + LAND_BITS * ( data_length - 1 )		5664766	0		=			
ANR	5665804	Identifier	position		5664766	0					
ANR	5665805	AdditiveExpression	penum -> ht_landscape . curr_pos + LAND_BITS * ( data_length - 1 )		5664766	1		+			
ANR	5665806	MemberAccess	penum -> ht_landscape . curr_pos		5664766	0					
ANR	5665807	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5665808	Identifier	penum		5664766	0					
ANR	5665809	Identifier	ht_landscape		5664766	1					
ANR	5665810	Identifier	curr_pos		5664766	1					
ANR	5665811	MultiplicativeExpression	LAND_BITS * ( data_length - 1 )		5664766	1		*			
ANR	5665812	Identifier	LAND_BITS		5664766	0					
ANR	5665813	AdditiveExpression	data_length - 1		5664766	1		-			
ANR	5665814	Identifier	data_length		5664766	0					
ANR	5665815	PrimaryExpression	1		5664766	1					
ANR	5665816	ExpressionStatement	psrc_temp = psrc_cm	658:24:27737:27756	5664766	1	True				
ANR	5665817	AssignmentExpression	psrc_temp = psrc_cm		5664766	0		=			
ANR	5665818	Identifier	psrc_temp		5664766	0					
ANR	5665819	Identifier	psrc_cm		5664766	1					
ANR	5665820	ForStatement	for ( k = 0 ; k < src_size ; k ++ )		5664766	2					
ANR	5665821	ForInit	k = 0 ;	659:29:27787:27790	5664766	0	True				
ANR	5665822	AssignmentExpression	k = 0		5664766	0		=			
ANR	5665823	Identifier	k		5664766	0					
ANR	5665824	PrimaryExpression	0		5664766	1					
ANR	5665825	Condition	k < src_size	659:34:27792:27801	5664766	1	True				
ANR	5665826	RelationalExpression	k < src_size		5664766	0		<			
ANR	5665827	Identifier	k		5664766	0					
ANR	5665828	Identifier	src_size		5664766	1					
ANR	5665829	PostIncDecOperationExpression	k ++	659:46:27804:27806	5664766	2	True				
ANR	5665830	Identifier	k		5664766	0					
ANR	5665831	IncDec	++		5664766	1					
ANR	5665832	CompoundStatement		209:51:9931:9931	5664766	3					
ANR	5665833	ExpressionStatement	dda_next ( dda_ht )	660:28:27839:27855	5664766	0	True				
ANR	5665834	CallExpression	dda_next ( dda_ht )		5664766	0					
ANR	5665835	Callee	dda_next		5664766	0					
ANR	5665836	Identifier	dda_next		5664766	0					
ANR	5665837	ArgumentList	dda_ht		5664766	1					
ANR	5665838	Argument	dda_ht		5664766	0					
ANR	5665839	Identifier	dda_ht		5664766	0					
ANR	5665840	ExpressionStatement	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )	661:28:27885:27932	5664766	1	True				
ANR	5665841	AssignmentExpression	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	0		=			
ANR	5665842	Identifier	xn		5664766	0					
ANR	5665843	CallExpression	fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	1					
ANR	5665844	Callee	fixed2int_var_rounded		5664766	0					
ANR	5665845	Identifier	fixed2int_var_rounded		5664766	0					
ANR	5665846	ArgumentList	dda_current ( dda_ht )		5664766	1					
ANR	5665847	Argument	dda_current ( dda_ht )		5664766	0					
ANR	5665848	CallExpression	dda_current ( dda_ht )		5664766	0					
ANR	5665849	Callee	dda_current		5664766	0					
ANR	5665850	Identifier	dda_current		5664766	0					
ANR	5665851	ArgumentList	dda_ht		5664766	1					
ANR	5665852	Argument	dda_ht		5664766	0					
ANR	5665853	Identifier	dda_ht		5664766	0					
ANR	5665854	WhileStatement	while ( xr > xn )		5664766	2					
ANR	5665855	Condition	xr > xn	662:35:27969:27975	5664766	0	True				
ANR	5665856	RelationalExpression	xr > xn		5664766	0		>			
ANR	5665857	Identifier	xr		5664766	0					
ANR	5665858	Identifier	xn		5664766	1					
ANR	5665859	CompoundStatement		212:44:10100:10100	5664766	1					
ANR	5665860	ExpressionStatement	devc_contone_gray [ position ] = * psrc_temp	663:32:28012:28052	5664766	0	True				
ANR	5665861	AssignmentExpression	devc_contone_gray [ position ] = * psrc_temp		5664766	0		=			
ANR	5665862	ArrayIndexing	devc_contone_gray [ position ]		5664766	0					
ANR	5665863	Identifier	devc_contone_gray		5664766	0					
ANR	5665864	Identifier	position		5664766	1					
ANR	5665865	UnaryOperationExpression	* psrc_temp		5664766	1					
ANR	5665866	UnaryOperator	*		5664766	0					
ANR	5665867	Identifier	psrc_temp		5664766	1					
ANR	5665868	ExpressionStatement	position -= LAND_BITS	664:32:28086:28107	5664766	1	True				
ANR	5665869	AssignmentExpression	position -= LAND_BITS		5664766	0		-=			
ANR	5665870	Identifier	position		5664766	0					
ANR	5665871	Identifier	LAND_BITS		5664766	1					
ANR	5665872	ExpressionStatement	xr --	665:32:28141:28145	5664766	2	True				
ANR	5665873	PostIncDecOperationExpression	xr --		5664766	0					
ANR	5665874	Identifier	xr		5664766	0					
ANR	5665875	IncDec	--		5664766	1					
ANR	5665876	ExpressionStatement	psrc_temp ++	667:28:28251:28262	5664766	3	True				
ANR	5665877	PostIncDecOperationExpression	psrc_temp ++		5664766	0					
ANR	5665878	Identifier	psrc_temp		5664766	0					
ANR	5665879	IncDec	++		5664766	1					
ANR	5665880	ElseStatement	else		5664766	0					
ANR	5665881	CompoundStatement		219:27:10439:10439	5664766	0					
ANR	5665882	ExpressionStatement	position = penum -> ht_landscape . curr_pos	670:24:28343:28382	5664766	0	True				
ANR	5665883	AssignmentExpression	position = penum -> ht_landscape . curr_pos		5664766	0		=			
ANR	5665884	Identifier	position		5664766	0					
ANR	5665885	MemberAccess	penum -> ht_landscape . curr_pos		5664766	1					
ANR	5665886	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5665887	Identifier	penum		5664766	0					
ANR	5665888	Identifier	ht_landscape		5664766	1					
ANR	5665889	Identifier	curr_pos		5664766	1					
ANR	5665890	IfStatement	if ( src_size == dest_height )		5664766	1					
ANR	5665891	Condition	src_size == dest_height	674:28:28622:28644	5664766	0	True				
ANR	5665892	EqualityExpression	src_size == dest_height		5664766	0		==			
ANR	5665893	Identifier	src_size		5664766	0					
ANR	5665894	Identifier	dest_height		5664766	1					
ANR	5665895	CompoundStatement		224:53:10769:10769	5664766	1					
ANR	5665896	ForStatement	for ( k = 0 ; k < data_length ; k ++ )		5664766	0					
ANR	5665897	ForInit	k = 0 ;	675:33:28682:28687	5664766	0	True				
ANR	5665898	AssignmentExpression	k = 0		5664766	0		=			
ANR	5665899	Identifier	k		5664766	0					
ANR	5665900	PrimaryExpression	0		5664766	1					
ANR	5665901	Condition	k < data_length	675:40:28689:28703	5664766	1	True				
ANR	5665902	RelationalExpression	k < data_length		5664766	0		<			
ANR	5665903	Identifier	k		5664766	0					
ANR	5665904	Identifier	data_length		5664766	1					
ANR	5665905	PostIncDecOperationExpression	k ++	675:57:28706:28708	5664766	2	True				
ANR	5665906	Identifier	k		5664766	0					
ANR	5665907	IncDec	++		5664766	1					
ANR	5665908	CompoundStatement		225:62:10833:10833	5664766	3					
ANR	5665909	ExpressionStatement	devc_contone_gray [ position ] = psrc_cm [ k ]	676:32:28745:28785	5664766	0	True				
ANR	5665910	AssignmentExpression	devc_contone_gray [ position ] = psrc_cm [ k ]		5664766	0		=			
ANR	5665911	ArrayIndexing	devc_contone_gray [ position ]		5664766	0					
ANR	5665912	Identifier	devc_contone_gray		5664766	0					
ANR	5665913	Identifier	position		5664766	1					
ANR	5665914	ArrayIndexing	psrc_cm [ k ]		5664766	1					
ANR	5665915	Identifier	psrc_cm		5664766	0					
ANR	5665916	Identifier	k		5664766	1					
ANR	5665917	ExpressionStatement	position += LAND_BITS	677:32:28819:28840	5664766	1	True				
ANR	5665918	AssignmentExpression	position += LAND_BITS		5664766	0		+=			
ANR	5665919	Identifier	position		5664766	0					
ANR	5665920	Identifier	LAND_BITS		5664766	1					
ANR	5665921	ElseStatement	else		5664766	0					
ANR	5665922	IfStatement	if ( src_size * 2 == dest_height )		5664766	0					
ANR	5665923	Condition	src_size * 2 == dest_height	679:35:28907:28931	5664766	0	True				
ANR	5665924	EqualityExpression	src_size * 2 == dest_height		5664766	0		==			
ANR	5665925	MultiplicativeExpression	src_size * 2		5664766	0		*			
ANR	5665926	Identifier	src_size		5664766	0					
ANR	5665927	PrimaryExpression	2		5664766	1					
ANR	5665928	Identifier	dest_height		5664766	1					
ANR	5665929	CompoundStatement		229:62:11056:11056	5664766	1					
ANR	5665930	ForStatement	for ( k = 0 ; k < data_length ; k += 2 )		5664766	0					
ANR	5665931	ForInit	k = 0 ;	680:33:28969:28974	5664766	0	True				
ANR	5665932	AssignmentExpression	k = 0		5664766	0		=			
ANR	5665933	Identifier	k		5664766	0					
ANR	5665934	PrimaryExpression	0		5664766	1					
ANR	5665935	Condition	k < data_length	680:40:28976:28990	5664766	1	True				
ANR	5665936	RelationalExpression	k < data_length		5664766	0		<			
ANR	5665937	Identifier	k		5664766	0					
ANR	5665938	Identifier	data_length		5664766	1					
ANR	5665939	AssignmentExpression	k += 2	680:57:28993:28996	5664766	2	True	+=			
ANR	5665940	Identifier	k		5664766	0					
ANR	5665941	PrimaryExpression	2		5664766	1					
ANR	5665942	CompoundStatement		230:63:11121:11121	5664766	3					
ANR	5665943	ExpressionStatement	offset = fixed2int_var_rounded ( fixed_half * k )	681:32:29033:29079	5664766	0	True				
ANR	5665944	AssignmentExpression	offset = fixed2int_var_rounded ( fixed_half * k )		5664766	0		=			
ANR	5665945	Identifier	offset		5664766	0					
ANR	5665946	CallExpression	fixed2int_var_rounded ( fixed_half * k )		5664766	1					
ANR	5665947	Callee	fixed2int_var_rounded		5664766	0					
ANR	5665948	Identifier	fixed2int_var_rounded		5664766	0					
ANR	5665949	ArgumentList	fixed_half * k		5664766	1					
ANR	5665950	Argument	fixed_half * k		5664766	0					
ANR	5665951	MultiplicativeExpression	fixed_half * k		5664766	0		*			
ANR	5665952	Identifier	fixed_half		5664766	0					
ANR	5665953	Identifier	k		5664766	1					
ANR	5665954	ExpressionStatement	devc_contone_gray [ position ] = devc_contone_gray [ position + LAND_BITS ] = psrc_cm [ offset ]	682:32:29113:29272	5664766	1	True				
ANR	5665955	AssignmentExpression	devc_contone_gray [ position ] = devc_contone_gray [ position + LAND_BITS ] = psrc_cm [ offset ]		5664766	0		=			
ANR	5665956	ArrayIndexing	devc_contone_gray [ position ]		5664766	0					
ANR	5665957	Identifier	devc_contone_gray		5664766	0					
ANR	5665958	Identifier	position		5664766	1					
ANR	5665959	AssignmentExpression	devc_contone_gray [ position + LAND_BITS ] = psrc_cm [ offset ]		5664766	1		=			
ANR	5665960	ArrayIndexing	devc_contone_gray [ position + LAND_BITS ]		5664766	0					
ANR	5665961	Identifier	devc_contone_gray		5664766	0					
ANR	5665962	AdditiveExpression	position + LAND_BITS		5664766	1		+			
ANR	5665963	Identifier	position		5664766	0					
ANR	5665964	Identifier	LAND_BITS		5664766	1					
ANR	5665965	ArrayIndexing	psrc_cm [ offset ]		5664766	1					
ANR	5665966	Identifier	psrc_cm		5664766	0					
ANR	5665967	Identifier	offset		5664766	1					
ANR	5665968	ExpressionStatement	position += 2 * LAND_BITS	685:32:29306:29329	5664766	2	True				
ANR	5665969	AssignmentExpression	position += 2 * LAND_BITS		5664766	0		+=			
ANR	5665970	Identifier	position		5664766	0					
ANR	5665971	MultiplicativeExpression	2 * LAND_BITS		5664766	1		*			
ANR	5665972	PrimaryExpression	2		5664766	0					
ANR	5665973	Identifier	LAND_BITS		5664766	1					
ANR	5665974	ElseStatement	else		5664766	0					
ANR	5665975	CompoundStatement		237:31:11514:11514	5664766	0					
ANR	5665976	ExpressionStatement	psrc_temp = psrc_cm	689:28:29464:29483	5664766	0	True				
ANR	5665977	AssignmentExpression	psrc_temp = psrc_cm		5664766	0		=			
ANR	5665978	Identifier	psrc_temp		5664766	0					
ANR	5665979	Identifier	psrc_cm		5664766	1					
ANR	5665980	ForStatement	for ( k = 0 ; k < src_size ; k ++ )		5664766	1					
ANR	5665981	ForInit	k = 0 ;	690:33:29518:29521	5664766	0	True				
ANR	5665982	AssignmentExpression	k = 0		5664766	0		=			
ANR	5665983	Identifier	k		5664766	0					
ANR	5665984	PrimaryExpression	0		5664766	1					
ANR	5665985	Condition	k < src_size	690:38:29523:29532	5664766	1	True				
ANR	5665986	RelationalExpression	k < src_size		5664766	0		<			
ANR	5665987	Identifier	k		5664766	0					
ANR	5665988	Identifier	src_size		5664766	1					
ANR	5665989	PostIncDecOperationExpression	k ++	690:50:29535:29537	5664766	2	True				
ANR	5665990	Identifier	k		5664766	0					
ANR	5665991	IncDec	++		5664766	1					
ANR	5665992	CompoundStatement		240:55:11662:11662	5664766	3					
ANR	5665993	ExpressionStatement	dda_next ( dda_ht )	691:32:29574:29590	5664766	0	True				
ANR	5665994	CallExpression	dda_next ( dda_ht )		5664766	0					
ANR	5665995	Callee	dda_next		5664766	0					
ANR	5665996	Identifier	dda_next		5664766	0					
ANR	5665997	ArgumentList	dda_ht		5664766	1					
ANR	5665998	Argument	dda_ht		5664766	0					
ANR	5665999	Identifier	dda_ht		5664766	0					
ANR	5666000	ExpressionStatement	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )	692:32:29624:29671	5664766	1	True				
ANR	5666001	AssignmentExpression	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	0		=			
ANR	5666002	Identifier	xn		5664766	0					
ANR	5666003	CallExpression	fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	1					
ANR	5666004	Callee	fixed2int_var_rounded		5664766	0					
ANR	5666005	Identifier	fixed2int_var_rounded		5664766	0					
ANR	5666006	ArgumentList	dda_current ( dda_ht )		5664766	1					
ANR	5666007	Argument	dda_current ( dda_ht )		5664766	0					
ANR	5666008	CallExpression	dda_current ( dda_ht )		5664766	0					
ANR	5666009	Callee	dda_current		5664766	0					
ANR	5666010	Identifier	dda_current		5664766	0					
ANR	5666011	ArgumentList	dda_ht		5664766	1					
ANR	5666012	Argument	dda_ht		5664766	0					
ANR	5666013	Identifier	dda_ht		5664766	0					
ANR	5666014	WhileStatement	while ( xr < xn )		5664766	2					
ANR	5666015	Condition	xr < xn	693:39:29712:29718	5664766	0	True				
ANR	5666016	RelationalExpression	xr < xn		5664766	0		<			
ANR	5666017	Identifier	xr		5664766	0					
ANR	5666018	Identifier	xn		5664766	1					
ANR	5666019	CompoundStatement		243:48:11843:11843	5664766	1					
ANR	5666020	ExpressionStatement	devc_contone_gray [ position ] = * psrc_temp	694:36:29759:29799	5664766	0	True				
ANR	5666021	AssignmentExpression	devc_contone_gray [ position ] = * psrc_temp		5664766	0		=			
ANR	5666022	ArrayIndexing	devc_contone_gray [ position ]		5664766	0					
ANR	5666023	Identifier	devc_contone_gray		5664766	0					
ANR	5666024	Identifier	position		5664766	1					
ANR	5666025	UnaryOperationExpression	* psrc_temp		5664766	1					
ANR	5666026	UnaryOperator	*		5664766	0					
ANR	5666027	Identifier	psrc_temp		5664766	1					
ANR	5666028	ExpressionStatement	position += LAND_BITS	695:36:29837:29858	5664766	1	True				
ANR	5666029	AssignmentExpression	position += LAND_BITS		5664766	0		+=			
ANR	5666030	Identifier	position		5664766	0					
ANR	5666031	Identifier	LAND_BITS		5664766	1					
ANR	5666032	ExpressionStatement	xr ++	696:36:29896:29900	5664766	2	True				
ANR	5666033	PostIncDecOperationExpression	xr ++		5664766	0					
ANR	5666034	Identifier	xr		5664766	0					
ANR	5666035	IncDec	++		5664766	1					
ANR	5666036	ExpressionStatement	psrc_temp ++	698:32:30014:30025	5664766	3	True				
ANR	5666037	PostIncDecOperationExpression	psrc_temp ++		5664766	0					
ANR	5666038	Identifier	psrc_temp		5664766	0					
ANR	5666039	IncDec	++		5664766	1					
ANR	5666040	ExpressionStatement	penum -> ht_landscape . count += vdi	703:20:30201:30233	5664766	5	True				
ANR	5666041	AssignmentExpression	penum -> ht_landscape . count += vdi		5664766	0		+=			
ANR	5666042	MemberAccess	penum -> ht_landscape . count		5664766	0					
ANR	5666043	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5666044	Identifier	penum		5664766	0					
ANR	5666045	Identifier	ht_landscape		5664766	1					
ANR	5666046	Identifier	count		5664766	1					
ANR	5666047	Identifier	vdi		5664766	1					
ANR	5666048	ExpressionStatement	penum -> ht_landscape . widths [ penum -> ht_landscape . curr_pos ] = vdi	704:20:30255:30317	5664766	6	True				
ANR	5666049	AssignmentExpression	penum -> ht_landscape . widths [ penum -> ht_landscape . curr_pos ] = vdi		5664766	0		=			
ANR	5666050	ArrayIndexing	penum -> ht_landscape . widths [ penum -> ht_landscape . curr_pos ]		5664766	0					
ANR	5666051	MemberAccess	penum -> ht_landscape . widths		5664766	0					
ANR	5666052	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5666053	Identifier	penum		5664766	0					
ANR	5666054	Identifier	ht_landscape		5664766	1					
ANR	5666055	Identifier	widths		5664766	1					
ANR	5666056	MemberAccess	penum -> ht_landscape . curr_pos		5664766	1					
ANR	5666057	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5666058	Identifier	penum		5664766	0					
ANR	5666059	Identifier	ht_landscape		5664766	1					
ANR	5666060	Identifier	curr_pos		5664766	1					
ANR	5666061	Identifier	vdi		5664766	1					
ANR	5666062	ExpressionStatement	penum -> ht_landscape . curr_pos += penum -> ht_landscape . index	705:20:30339:30396	5664766	7	True				
ANR	5666063	AssignmentExpression	penum -> ht_landscape . curr_pos += penum -> ht_landscape . index		5664766	0		+=			
ANR	5666064	MemberAccess	penum -> ht_landscape . curr_pos		5664766	0					
ANR	5666065	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5666066	Identifier	penum		5664766	0					
ANR	5666067	Identifier	ht_landscape		5664766	1					
ANR	5666068	Identifier	curr_pos		5664766	1					
ANR	5666069	MemberAccess	penum -> ht_landscape . index		5664766	1					
ANR	5666070	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5666071	Identifier	penum		5664766	0					
ANR	5666072	Identifier	ht_landscape		5664766	1					
ANR	5666073	Identifier	index		5664766	1					
ANR	5666074	ExpressionStatement	penum -> ht_landscape . num_contones ++	706:20:30418:30452	5664766	8	True				
ANR	5666075	PostIncDecOperationExpression	penum -> ht_landscape . num_contones ++		5664766	0					
ANR	5666076	MemberAccess	penum -> ht_landscape . num_contones		5664766	0					
ANR	5666077	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5666078	Identifier	penum		5664766	0					
ANR	5666079	Identifier	ht_landscape		5664766	1					
ANR	5666080	Identifier	num_contones		5664766	1					
ANR	5666081	IncDec	++		5664766	1					
ANR	5666082	BreakStatement	break ;	707:20:30474:30479	5664766	9	True				
ANR	5666083	Label	default :	708:16:30497:30504	5664766	10	True				
ANR	5666084	Identifier	default		5664766	0					
ANR	5666085	BreakStatement	break ;	710:20:30570:30575	5664766	11	True				
ANR	5666086	BreakStatement	break ;	712:8:30599:30604	5664766	3	True				
ANR	5666087	Label	case 4 :	715:8:30639:30645	5664766	4	True				
ANR	5666088	SwitchStatement	switch ( posture )		5664766	5					
ANR	5666089	Condition	posture	716:20:30667:30673	5664766	0	True				
ANR	5666090	Identifier	posture		5664766	0					
ANR	5666091	CompoundStatement		266:29:12798:12798	5664766	1					
ANR	5666092	Label	case image_portrait :	718:16:30730:30749	5664766	0	True				
ANR	5666093	Identifier	image_portrait		5664766	0					
ANR	5666094	IfStatement	if ( penum -> dst_width > 0 )		5664766	1					
ANR	5666095	Condition	penum -> dst_width > 0	719:24:30775:30794	5664766	0	True				
ANR	5666096	RelationalExpression	penum -> dst_width > 0		5664766	0		>			
ANR	5666097	PtrMemberAccess	penum -> dst_width		5664766	0					
ANR	5666098	Identifier	penum		5664766	0					
ANR	5666099	Identifier	dst_width		5664766	1					
ANR	5666100	PrimaryExpression	0		5664766	1					
ANR	5666101	CompoundStatement		269:46:12919:12919	5664766	1					
ANR	5666102	IfStatement	if ( src_size == dest_width )		5664766	0					
ANR	5666103	Condition	src_size == dest_width	720:28:30827:30848	5664766	0	True				
ANR	5666104	EqualityExpression	src_size == dest_width		5664766	0		==			
ANR	5666105	Identifier	src_size		5664766	0					
ANR	5666106	Identifier	dest_width		5664766	1					
ANR	5666107	CompoundStatement		270:52:12973:12973	5664766	1					
ANR	5666108	ExpressionStatement	"memcpy ( devc_contone [ 0 ] , psrc_plane [ 0 ] , data_length )"	721:28:30881:30932	5664766	0	True				
ANR	5666109	CallExpression	"memcpy ( devc_contone [ 0 ] , psrc_plane [ 0 ] , data_length )"		5664766	0					
ANR	5666110	Callee	memcpy		5664766	0					
ANR	5666111	Identifier	memcpy		5664766	0					
ANR	5666112	ArgumentList	devc_contone [ 0 ]		5664766	1					
ANR	5666113	Argument	devc_contone [ 0 ]		5664766	0					
ANR	5666114	ArrayIndexing	devc_contone [ 0 ]		5664766	0					
ANR	5666115	Identifier	devc_contone		5664766	0					
ANR	5666116	PrimaryExpression	0		5664766	1					
ANR	5666117	Argument	psrc_plane [ 0 ]		5664766	1					
ANR	5666118	ArrayIndexing	psrc_plane [ 0 ]		5664766	0					
ANR	5666119	Identifier	psrc_plane		5664766	0					
ANR	5666120	PrimaryExpression	0		5664766	1					
ANR	5666121	Argument	data_length		5664766	2					
ANR	5666122	Identifier	data_length		5664766	0					
ANR	5666123	ExpressionStatement	"memcpy ( devc_contone [ 1 ] , psrc_plane [ 1 ] , data_length )"	722:28:30962:31013	5664766	1	True				
ANR	5666124	CallExpression	"memcpy ( devc_contone [ 1 ] , psrc_plane [ 1 ] , data_length )"		5664766	0					
ANR	5666125	Callee	memcpy		5664766	0					
ANR	5666126	Identifier	memcpy		5664766	0					
ANR	5666127	ArgumentList	devc_contone [ 1 ]		5664766	1					
ANR	5666128	Argument	devc_contone [ 1 ]		5664766	0					
ANR	5666129	ArrayIndexing	devc_contone [ 1 ]		5664766	0					
ANR	5666130	Identifier	devc_contone		5664766	0					
ANR	5666131	PrimaryExpression	1		5664766	1					
ANR	5666132	Argument	psrc_plane [ 1 ]		5664766	1					
ANR	5666133	ArrayIndexing	psrc_plane [ 1 ]		5664766	0					
ANR	5666134	Identifier	psrc_plane		5664766	0					
ANR	5666135	PrimaryExpression	1		5664766	1					
ANR	5666136	Argument	data_length		5664766	2					
ANR	5666137	Identifier	data_length		5664766	0					
ANR	5666138	ExpressionStatement	"memcpy ( devc_contone [ 2 ] , psrc_plane [ 2 ] , data_length )"	723:28:31043:31094	5664766	2	True				
ANR	5666139	CallExpression	"memcpy ( devc_contone [ 2 ] , psrc_plane [ 2 ] , data_length )"		5664766	0					
ANR	5666140	Callee	memcpy		5664766	0					
ANR	5666141	Identifier	memcpy		5664766	0					
ANR	5666142	ArgumentList	devc_contone [ 2 ]		5664766	1					
ANR	5666143	Argument	devc_contone [ 2 ]		5664766	0					
ANR	5666144	ArrayIndexing	devc_contone [ 2 ]		5664766	0					
ANR	5666145	Identifier	devc_contone		5664766	0					
ANR	5666146	PrimaryExpression	2		5664766	1					
ANR	5666147	Argument	psrc_plane [ 2 ]		5664766	1					
ANR	5666148	ArrayIndexing	psrc_plane [ 2 ]		5664766	0					
ANR	5666149	Identifier	psrc_plane		5664766	0					
ANR	5666150	PrimaryExpression	2		5664766	1					
ANR	5666151	Argument	data_length		5664766	2					
ANR	5666152	Identifier	data_length		5664766	0					
ANR	5666153	ExpressionStatement	"memcpy ( devc_contone [ 3 ] , psrc_plane [ 3 ] , data_length )"	724:28:31124:31175	5664766	3	True				
ANR	5666154	CallExpression	"memcpy ( devc_contone [ 3 ] , psrc_plane [ 3 ] , data_length )"		5664766	0					
ANR	5666155	Callee	memcpy		5664766	0					
ANR	5666156	Identifier	memcpy		5664766	0					
ANR	5666157	ArgumentList	devc_contone [ 3 ]		5664766	1					
ANR	5666158	Argument	devc_contone [ 3 ]		5664766	0					
ANR	5666159	ArrayIndexing	devc_contone [ 3 ]		5664766	0					
ANR	5666160	Identifier	devc_contone		5664766	0					
ANR	5666161	PrimaryExpression	3		5664766	1					
ANR	5666162	Argument	psrc_plane [ 3 ]		5664766	1					
ANR	5666163	ArrayIndexing	psrc_plane [ 3 ]		5664766	0					
ANR	5666164	Identifier	psrc_plane		5664766	0					
ANR	5666165	PrimaryExpression	3		5664766	1					
ANR	5666166	Argument	data_length		5664766	2					
ANR	5666167	Identifier	data_length		5664766	0					
ANR	5666168	ElseStatement	else		5664766	0					
ANR	5666169	IfStatement	if ( src_size * 2 == dest_width )		5664766	0					
ANR	5666170	Condition	src_size * 2 == dest_width	725:35:31212:31237	5664766	0	True				
ANR	5666171	EqualityExpression	src_size * 2 == dest_width		5664766	0		==			
ANR	5666172	MultiplicativeExpression	src_size * 2		5664766	0		*			
ANR	5666173	Identifier	src_size		5664766	0					
ANR	5666174	PrimaryExpression	2		5664766	1					
ANR	5666175	Identifier	dest_width		5664766	1					
ANR	5666176	CompoundStatement		275:63:13362:13362	5664766	1					
ANR	5666177	ForStatement	for ( k = 0 ; k < data_length ; k += 2 )		5664766	0					
ANR	5666178	ForInit	k = 0 ;	726:33:31275:31280	5664766	0	True				
ANR	5666179	AssignmentExpression	k = 0		5664766	0		=			
ANR	5666180	Identifier	k		5664766	0					
ANR	5666181	PrimaryExpression	0		5664766	1					
ANR	5666182	Condition	k < data_length	726:40:31282:31296	5664766	1	True				
ANR	5666183	RelationalExpression	k < data_length		5664766	0		<			
ANR	5666184	Identifier	k		5664766	0					
ANR	5666185	Identifier	data_length		5664766	1					
ANR	5666186	AssignmentExpression	k += 2	726:57:31299:31302	5664766	2	True	+=			
ANR	5666187	Identifier	k		5664766	0					
ANR	5666188	PrimaryExpression	2		5664766	1					
ANR	5666189	CompoundStatement		276:63:13427:13427	5664766	3					
ANR	5666190	ExpressionStatement	* ( devc_contone [ 0 ] ) = * ( devc_contone [ 0 ] + 1 ) = * psrc_plane [ 0 ] ++	727:32:31339:31435	5664766	0	True				
ANR	5666191	AssignmentExpression	* ( devc_contone [ 0 ] ) = * ( devc_contone [ 0 ] + 1 ) = * psrc_plane [ 0 ] ++		5664766	0		=			
ANR	5666192	UnaryOperationExpression	* ( devc_contone [ 0 ] )		5664766	0					
ANR	5666193	UnaryOperator	*		5664766	0					
ANR	5666194	ArrayIndexing	devc_contone [ 0 ]		5664766	1					
ANR	5666195	Identifier	devc_contone		5664766	0					
ANR	5666196	PrimaryExpression	0		5664766	1					
ANR	5666197	AssignmentExpression	* ( devc_contone [ 0 ] + 1 ) = * psrc_plane [ 0 ] ++		5664766	1		=			
ANR	5666198	UnaryOperationExpression	* ( devc_contone [ 0 ] + 1 )		5664766	0					
ANR	5666199	UnaryOperator	*		5664766	0					
ANR	5666200	AdditiveExpression	devc_contone [ 0 ] + 1		5664766	1		+			
ANR	5666201	ArrayIndexing	devc_contone [ 0 ]		5664766	0					
ANR	5666202	Identifier	devc_contone		5664766	0					
ANR	5666203	PrimaryExpression	0		5664766	1					
ANR	5666204	PrimaryExpression	1		5664766	1					
ANR	5666205	UnaryOperationExpression	* psrc_plane [ 0 ] ++		5664766	1					
ANR	5666206	UnaryOperator	*		5664766	0					
ANR	5666207	PostIncDecOperationExpression	psrc_plane [ 0 ] ++		5664766	1					
ANR	5666208	ArrayIndexing	psrc_plane [ 0 ]		5664766	0					
ANR	5666209	Identifier	psrc_plane		5664766	0					
ANR	5666210	PrimaryExpression	0		5664766	1					
ANR	5666211	IncDec	++		5664766	1					
ANR	5666212	ExpressionStatement	* ( devc_contone [ 1 ] ) = * ( devc_contone [ 1 ] + 1 ) = * psrc_plane [ 1 ] ++	729:32:31469:31565	5664766	1	True				
ANR	5666213	AssignmentExpression	* ( devc_contone [ 1 ] ) = * ( devc_contone [ 1 ] + 1 ) = * psrc_plane [ 1 ] ++		5664766	0		=			
ANR	5666214	UnaryOperationExpression	* ( devc_contone [ 1 ] )		5664766	0					
ANR	5666215	UnaryOperator	*		5664766	0					
ANR	5666216	ArrayIndexing	devc_contone [ 1 ]		5664766	1					
ANR	5666217	Identifier	devc_contone		5664766	0					
ANR	5666218	PrimaryExpression	1		5664766	1					
ANR	5666219	AssignmentExpression	* ( devc_contone [ 1 ] + 1 ) = * psrc_plane [ 1 ] ++		5664766	1		=			
ANR	5666220	UnaryOperationExpression	* ( devc_contone [ 1 ] + 1 )		5664766	0					
ANR	5666221	UnaryOperator	*		5664766	0					
ANR	5666222	AdditiveExpression	devc_contone [ 1 ] + 1		5664766	1		+			
ANR	5666223	ArrayIndexing	devc_contone [ 1 ]		5664766	0					
ANR	5666224	Identifier	devc_contone		5664766	0					
ANR	5666225	PrimaryExpression	1		5664766	1					
ANR	5666226	PrimaryExpression	1		5664766	1					
ANR	5666227	UnaryOperationExpression	* psrc_plane [ 1 ] ++		5664766	1					
ANR	5666228	UnaryOperator	*		5664766	0					
ANR	5666229	PostIncDecOperationExpression	psrc_plane [ 1 ] ++		5664766	1					
ANR	5666230	ArrayIndexing	psrc_plane [ 1 ]		5664766	0					
ANR	5666231	Identifier	psrc_plane		5664766	0					
ANR	5666232	PrimaryExpression	1		5664766	1					
ANR	5666233	IncDec	++		5664766	1					
ANR	5666234	ExpressionStatement	* ( devc_contone [ 2 ] ) = * ( devc_contone [ 2 ] + 1 ) = * psrc_plane [ 2 ] ++	731:32:31599:31695	5664766	2	True				
ANR	5666235	AssignmentExpression	* ( devc_contone [ 2 ] ) = * ( devc_contone [ 2 ] + 1 ) = * psrc_plane [ 2 ] ++		5664766	0		=			
ANR	5666236	UnaryOperationExpression	* ( devc_contone [ 2 ] )		5664766	0					
ANR	5666237	UnaryOperator	*		5664766	0					
ANR	5666238	ArrayIndexing	devc_contone [ 2 ]		5664766	1					
ANR	5666239	Identifier	devc_contone		5664766	0					
ANR	5666240	PrimaryExpression	2		5664766	1					
ANR	5666241	AssignmentExpression	* ( devc_contone [ 2 ] + 1 ) = * psrc_plane [ 2 ] ++		5664766	1		=			
ANR	5666242	UnaryOperationExpression	* ( devc_contone [ 2 ] + 1 )		5664766	0					
ANR	5666243	UnaryOperator	*		5664766	0					
ANR	5666244	AdditiveExpression	devc_contone [ 2 ] + 1		5664766	1		+			
ANR	5666245	ArrayIndexing	devc_contone [ 2 ]		5664766	0					
ANR	5666246	Identifier	devc_contone		5664766	0					
ANR	5666247	PrimaryExpression	2		5664766	1					
ANR	5666248	PrimaryExpression	1		5664766	1					
ANR	5666249	UnaryOperationExpression	* psrc_plane [ 2 ] ++		5664766	1					
ANR	5666250	UnaryOperator	*		5664766	0					
ANR	5666251	PostIncDecOperationExpression	psrc_plane [ 2 ] ++		5664766	1					
ANR	5666252	ArrayIndexing	psrc_plane [ 2 ]		5664766	0					
ANR	5666253	Identifier	psrc_plane		5664766	0					
ANR	5666254	PrimaryExpression	2		5664766	1					
ANR	5666255	IncDec	++		5664766	1					
ANR	5666256	ExpressionStatement	* ( devc_contone [ 3 ] ) = * ( devc_contone [ 3 ] + 1 ) = * psrc_plane [ 3 ] ++	733:32:31729:31825	5664766	3	True				
ANR	5666257	AssignmentExpression	* ( devc_contone [ 3 ] ) = * ( devc_contone [ 3 ] + 1 ) = * psrc_plane [ 3 ] ++		5664766	0		=			
ANR	5666258	UnaryOperationExpression	* ( devc_contone [ 3 ] )		5664766	0					
ANR	5666259	UnaryOperator	*		5664766	0					
ANR	5666260	ArrayIndexing	devc_contone [ 3 ]		5664766	1					
ANR	5666261	Identifier	devc_contone		5664766	0					
ANR	5666262	PrimaryExpression	3		5664766	1					
ANR	5666263	AssignmentExpression	* ( devc_contone [ 3 ] + 1 ) = * psrc_plane [ 3 ] ++		5664766	1		=			
ANR	5666264	UnaryOperationExpression	* ( devc_contone [ 3 ] + 1 )		5664766	0					
ANR	5666265	UnaryOperator	*		5664766	0					
ANR	5666266	AdditiveExpression	devc_contone [ 3 ] + 1		5664766	1		+			
ANR	5666267	ArrayIndexing	devc_contone [ 3 ]		5664766	0					
ANR	5666268	Identifier	devc_contone		5664766	0					
ANR	5666269	PrimaryExpression	3		5664766	1					
ANR	5666270	PrimaryExpression	1		5664766	1					
ANR	5666271	UnaryOperationExpression	* psrc_plane [ 3 ] ++		5664766	1					
ANR	5666272	UnaryOperator	*		5664766	0					
ANR	5666273	PostIncDecOperationExpression	psrc_plane [ 3 ] ++		5664766	1					
ANR	5666274	ArrayIndexing	psrc_plane [ 3 ]		5664766	0					
ANR	5666275	Identifier	psrc_plane		5664766	0					
ANR	5666276	PrimaryExpression	3		5664766	1					
ANR	5666277	IncDec	++		5664766	1					
ANR	5666278	ExpressionStatement	devc_contone [ 0 ] += 2	735:32:31859:31879	5664766	4	True				
ANR	5666279	AssignmentExpression	devc_contone [ 0 ] += 2		5664766	0		+=			
ANR	5666280	ArrayIndexing	devc_contone [ 0 ]		5664766	0					
ANR	5666281	Identifier	devc_contone		5664766	0					
ANR	5666282	PrimaryExpression	0		5664766	1					
ANR	5666283	PrimaryExpression	2		5664766	1					
ANR	5666284	ExpressionStatement	devc_contone [ 1 ] += 2	736:32:31913:31933	5664766	5	True				
ANR	5666285	AssignmentExpression	devc_contone [ 1 ] += 2		5664766	0		+=			
ANR	5666286	ArrayIndexing	devc_contone [ 1 ]		5664766	0					
ANR	5666287	Identifier	devc_contone		5664766	0					
ANR	5666288	PrimaryExpression	1		5664766	1					
ANR	5666289	PrimaryExpression	2		5664766	1					
ANR	5666290	ExpressionStatement	devc_contone [ 2 ] += 2	737:32:31967:31987	5664766	6	True				
ANR	5666291	AssignmentExpression	devc_contone [ 2 ] += 2		5664766	0		+=			
ANR	5666292	ArrayIndexing	devc_contone [ 2 ]		5664766	0					
ANR	5666293	Identifier	devc_contone		5664766	0					
ANR	5666294	PrimaryExpression	2		5664766	1					
ANR	5666295	PrimaryExpression	2		5664766	1					
ANR	5666296	ExpressionStatement	devc_contone [ 3 ] += 2	738:32:32021:32041	5664766	7	True				
ANR	5666297	AssignmentExpression	devc_contone [ 3 ] += 2		5664766	0		+=			
ANR	5666298	ArrayIndexing	devc_contone [ 3 ]		5664766	0					
ANR	5666299	Identifier	devc_contone		5664766	0					
ANR	5666300	PrimaryExpression	3		5664766	1					
ANR	5666301	PrimaryExpression	2		5664766	1					
ANR	5666302	ElseStatement	else		5664766	0					
ANR	5666303	CompoundStatement		290:31:14226:14226	5664766	0					
ANR	5666304	ForStatement	"for ( k = 0 , j = 0 ; k < src_size ; k ++ )"		5664766	0					
ANR	5666305	ForInit	"k = 0 , j = 0 ;"	742:33:32188:32196	5664766	0	True				
ANR	5666306	Expression	"k = 0 , j = 0"		5664766	0					
ANR	5666307	AssignmentExpression	k = 0		5664766	0		=			
ANR	5666308	Identifier	k		5664766	0					
ANR	5666309	PrimaryExpression	0		5664766	1					
ANR	5666310	AssignmentExpression	j = 0		5664766	1		=			
ANR	5666311	Identifier	j		5664766	0					
ANR	5666312	PrimaryExpression	0		5664766	1					
ANR	5666313	Condition	k < src_size	742:43:32198:32207	5664766	1	True				
ANR	5666314	RelationalExpression	k < src_size		5664766	0		<			
ANR	5666315	Identifier	k		5664766	0					
ANR	5666316	Identifier	src_size		5664766	1					
ANR	5666317	PostIncDecOperationExpression	k ++	742:55:32210:32212	5664766	2	True				
ANR	5666318	Identifier	k		5664766	0					
ANR	5666319	IncDec	++		5664766	1					
ANR	5666320	CompoundStatement		292:60:14337:14337	5664766	3					
ANR	5666321	ExpressionStatement	dda_next ( dda_ht )	743:32:32249:32265	5664766	0	True				
ANR	5666322	CallExpression	dda_next ( dda_ht )		5664766	0					
ANR	5666323	Callee	dda_next		5664766	0					
ANR	5666324	Identifier	dda_next		5664766	0					
ANR	5666325	ArgumentList	dda_ht		5664766	1					
ANR	5666326	Argument	dda_ht		5664766	0					
ANR	5666327	Identifier	dda_ht		5664766	0					
ANR	5666328	ExpressionStatement	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )	744:32:32299:32346	5664766	1	True				
ANR	5666329	AssignmentExpression	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	0		=			
ANR	5666330	Identifier	xn		5664766	0					
ANR	5666331	CallExpression	fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	1					
ANR	5666332	Callee	fixed2int_var_rounded		5664766	0					
ANR	5666333	Identifier	fixed2int_var_rounded		5664766	0					
ANR	5666334	ArgumentList	dda_current ( dda_ht )		5664766	1					
ANR	5666335	Argument	dda_current ( dda_ht )		5664766	0					
ANR	5666336	CallExpression	dda_current ( dda_ht )		5664766	0					
ANR	5666337	Callee	dda_current		5664766	0					
ANR	5666338	Identifier	dda_current		5664766	0					
ANR	5666339	ArgumentList	dda_ht		5664766	1					
ANR	5666340	Argument	dda_ht		5664766	0					
ANR	5666341	Identifier	dda_ht		5664766	0					
ANR	5666342	WhileStatement	while ( xr < xn )		5664766	2					
ANR	5666343	Condition	xr < xn	745:39:32387:32393	5664766	0	True				
ANR	5666344	RelationalExpression	xr < xn		5664766	0		<			
ANR	5666345	Identifier	xr		5664766	0					
ANR	5666346	Identifier	xn		5664766	1					
ANR	5666347	CompoundStatement		295:48:14518:14518	5664766	1					
ANR	5666348	ExpressionStatement	* ( devc_contone [ 0 ] ) ++ = ( psrc_plane [ 0 ] ) [ j ]	746:36:32434:32475	5664766	0	True				
ANR	5666349	AssignmentExpression	* ( devc_contone [ 0 ] ) ++ = ( psrc_plane [ 0 ] ) [ j ]		5664766	0		=			
ANR	5666350	UnaryOperationExpression	* ( devc_contone [ 0 ] ) ++		5664766	0					
ANR	5666351	UnaryOperator	*		5664766	0					
ANR	5666352	PostIncDecOperationExpression	( devc_contone [ 0 ] ) ++		5664766	1					
ANR	5666353	ArrayIndexing	devc_contone [ 0 ]		5664766	0					
ANR	5666354	Identifier	devc_contone		5664766	0					
ANR	5666355	PrimaryExpression	0		5664766	1					
ANR	5666356	IncDec	++		5664766	1					
ANR	5666357	ArrayIndexing	( psrc_plane [ 0 ] ) [ j ]		5664766	1					
ANR	5666358	ArrayIndexing	psrc_plane [ 0 ]		5664766	0					
ANR	5666359	Identifier	psrc_plane		5664766	0					
ANR	5666360	PrimaryExpression	0		5664766	1					
ANR	5666361	Identifier	j		5664766	1					
ANR	5666362	ExpressionStatement	* ( devc_contone [ 1 ] ) ++ = ( psrc_plane [ 1 ] ) [ j ]	747:36:32513:32554	5664766	1	True				
ANR	5666363	AssignmentExpression	* ( devc_contone [ 1 ] ) ++ = ( psrc_plane [ 1 ] ) [ j ]		5664766	0		=			
ANR	5666364	UnaryOperationExpression	* ( devc_contone [ 1 ] ) ++		5664766	0					
ANR	5666365	UnaryOperator	*		5664766	0					
ANR	5666366	PostIncDecOperationExpression	( devc_contone [ 1 ] ) ++		5664766	1					
ANR	5666367	ArrayIndexing	devc_contone [ 1 ]		5664766	0					
ANR	5666368	Identifier	devc_contone		5664766	0					
ANR	5666369	PrimaryExpression	1		5664766	1					
ANR	5666370	IncDec	++		5664766	1					
ANR	5666371	ArrayIndexing	( psrc_plane [ 1 ] ) [ j ]		5664766	1					
ANR	5666372	ArrayIndexing	psrc_plane [ 1 ]		5664766	0					
ANR	5666373	Identifier	psrc_plane		5664766	0					
ANR	5666374	PrimaryExpression	1		5664766	1					
ANR	5666375	Identifier	j		5664766	1					
ANR	5666376	ExpressionStatement	* ( devc_contone [ 2 ] ) ++ = ( psrc_plane [ 2 ] ) [ j ]	748:36:32592:32633	5664766	2	True				
ANR	5666377	AssignmentExpression	* ( devc_contone [ 2 ] ) ++ = ( psrc_plane [ 2 ] ) [ j ]		5664766	0		=			
ANR	5666378	UnaryOperationExpression	* ( devc_contone [ 2 ] ) ++		5664766	0					
ANR	5666379	UnaryOperator	*		5664766	0					
ANR	5666380	PostIncDecOperationExpression	( devc_contone [ 2 ] ) ++		5664766	1					
ANR	5666381	ArrayIndexing	devc_contone [ 2 ]		5664766	0					
ANR	5666382	Identifier	devc_contone		5664766	0					
ANR	5666383	PrimaryExpression	2		5664766	1					
ANR	5666384	IncDec	++		5664766	1					
ANR	5666385	ArrayIndexing	( psrc_plane [ 2 ] ) [ j ]		5664766	1					
ANR	5666386	ArrayIndexing	psrc_plane [ 2 ]		5664766	0					
ANR	5666387	Identifier	psrc_plane		5664766	0					
ANR	5666388	PrimaryExpression	2		5664766	1					
ANR	5666389	Identifier	j		5664766	1					
ANR	5666390	ExpressionStatement	* ( devc_contone [ 3 ] ) ++ = ( psrc_plane [ 3 ] ) [ j ]	749:36:32671:32712	5664766	3	True				
ANR	5666391	AssignmentExpression	* ( devc_contone [ 3 ] ) ++ = ( psrc_plane [ 3 ] ) [ j ]		5664766	0		=			
ANR	5666392	UnaryOperationExpression	* ( devc_contone [ 3 ] ) ++		5664766	0					
ANR	5666393	UnaryOperator	*		5664766	0					
ANR	5666394	PostIncDecOperationExpression	( devc_contone [ 3 ] ) ++		5664766	1					
ANR	5666395	ArrayIndexing	devc_contone [ 3 ]		5664766	0					
ANR	5666396	Identifier	devc_contone		5664766	0					
ANR	5666397	PrimaryExpression	3		5664766	1					
ANR	5666398	IncDec	++		5664766	1					
ANR	5666399	ArrayIndexing	( psrc_plane [ 3 ] ) [ j ]		5664766	1					
ANR	5666400	ArrayIndexing	psrc_plane [ 3 ]		5664766	0					
ANR	5666401	Identifier	psrc_plane		5664766	0					
ANR	5666402	PrimaryExpression	3		5664766	1					
ANR	5666403	Identifier	j		5664766	1					
ANR	5666404	ExpressionStatement	xr ++	750:36:32750:32754	5664766	4	True				
ANR	5666405	PostIncDecOperationExpression	xr ++		5664766	0					
ANR	5666406	Identifier	xr		5664766	0					
ANR	5666407	IncDec	++		5664766	1					
ANR	5666408	ExpressionStatement	j ++	752:32:32868:32871	5664766	3	True				
ANR	5666409	PostIncDecOperationExpression	j ++		5664766	0					
ANR	5666410	Identifier	j		5664766	0					
ANR	5666411	IncDec	++		5664766	1					
ANR	5666412	ElseStatement	else		5664766	0					
ANR	5666413	CompoundStatement		305:27:15078:15078	5664766	0					
ANR	5666414	ExpressionStatement	devc_contone [ 0 ] += ( data_length - 1 )	758:24:33107:33143	5664766	0	True				
ANR	5666415	AssignmentExpression	devc_contone [ 0 ] += ( data_length - 1 )		5664766	0		+=			
ANR	5666416	ArrayIndexing	devc_contone [ 0 ]		5664766	0					
ANR	5666417	Identifier	devc_contone		5664766	0					
ANR	5666418	PrimaryExpression	0		5664766	1					
ANR	5666419	AdditiveExpression	data_length - 1		5664766	1		-			
ANR	5666420	Identifier	data_length		5664766	0					
ANR	5666421	PrimaryExpression	1		5664766	1					
ANR	5666422	ExpressionStatement	devc_contone [ 1 ] += ( data_length - 1 )	759:24:33169:33205	5664766	1	True				
ANR	5666423	AssignmentExpression	devc_contone [ 1 ] += ( data_length - 1 )		5664766	0		+=			
ANR	5666424	ArrayIndexing	devc_contone [ 1 ]		5664766	0					
ANR	5666425	Identifier	devc_contone		5664766	0					
ANR	5666426	PrimaryExpression	1		5664766	1					
ANR	5666427	AdditiveExpression	data_length - 1		5664766	1		-			
ANR	5666428	Identifier	data_length		5664766	0					
ANR	5666429	PrimaryExpression	1		5664766	1					
ANR	5666430	ExpressionStatement	devc_contone [ 2 ] += ( data_length - 1 )	760:24:33231:33267	5664766	2	True				
ANR	5666431	AssignmentExpression	devc_contone [ 2 ] += ( data_length - 1 )		5664766	0		+=			
ANR	5666432	ArrayIndexing	devc_contone [ 2 ]		5664766	0					
ANR	5666433	Identifier	devc_contone		5664766	0					
ANR	5666434	PrimaryExpression	2		5664766	1					
ANR	5666435	AdditiveExpression	data_length - 1		5664766	1		-			
ANR	5666436	Identifier	data_length		5664766	0					
ANR	5666437	PrimaryExpression	1		5664766	1					
ANR	5666438	ExpressionStatement	devc_contone [ 3 ] += ( data_length - 1 )	761:24:33293:33329	5664766	3	True				
ANR	5666439	AssignmentExpression	devc_contone [ 3 ] += ( data_length - 1 )		5664766	0		+=			
ANR	5666440	ArrayIndexing	devc_contone [ 3 ]		5664766	0					
ANR	5666441	Identifier	devc_contone		5664766	0					
ANR	5666442	PrimaryExpression	3		5664766	1					
ANR	5666443	AdditiveExpression	data_length - 1		5664766	1		-			
ANR	5666444	Identifier	data_length		5664766	0					
ANR	5666445	PrimaryExpression	1		5664766	1					
ANR	5666446	ForStatement	"for ( k = 0 , j = 0 ; k < src_size ; k ++ )"		5664766	4					
ANR	5666447	ForInit	"k = 0 , j = 0 ;"	762:29:33360:33368	5664766	0	True				
ANR	5666448	Expression	"k = 0 , j = 0"		5664766	0					
ANR	5666449	AssignmentExpression	k = 0		5664766	0		=			
ANR	5666450	Identifier	k		5664766	0					
ANR	5666451	PrimaryExpression	0		5664766	1					
ANR	5666452	AssignmentExpression	j = 0		5664766	1		=			
ANR	5666453	Identifier	j		5664766	0					
ANR	5666454	PrimaryExpression	0		5664766	1					
ANR	5666455	Condition	k < src_size	762:39:33370:33379	5664766	1	True				
ANR	5666456	RelationalExpression	k < src_size		5664766	0		<			
ANR	5666457	Identifier	k		5664766	0					
ANR	5666458	Identifier	src_size		5664766	1					
ANR	5666459	PostIncDecOperationExpression	k ++	762:51:33382:33384	5664766	2	True				
ANR	5666460	Identifier	k		5664766	0					
ANR	5666461	IncDec	++		5664766	1					
ANR	5666462	CompoundStatement		312:56:15509:15509	5664766	3					
ANR	5666463	ExpressionStatement	dda_next ( dda_ht )	763:28:33417:33433	5664766	0	True				
ANR	5666464	CallExpression	dda_next ( dda_ht )		5664766	0					
ANR	5666465	Callee	dda_next		5664766	0					
ANR	5666466	Identifier	dda_next		5664766	0					
ANR	5666467	ArgumentList	dda_ht		5664766	1					
ANR	5666468	Argument	dda_ht		5664766	0					
ANR	5666469	Identifier	dda_ht		5664766	0					
ANR	5666470	ExpressionStatement	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )	764:28:33463:33510	5664766	1	True				
ANR	5666471	AssignmentExpression	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	0		=			
ANR	5666472	Identifier	xn		5664766	0					
ANR	5666473	CallExpression	fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	1					
ANR	5666474	Callee	fixed2int_var_rounded		5664766	0					
ANR	5666475	Identifier	fixed2int_var_rounded		5664766	0					
ANR	5666476	ArgumentList	dda_current ( dda_ht )		5664766	1					
ANR	5666477	Argument	dda_current ( dda_ht )		5664766	0					
ANR	5666478	CallExpression	dda_current ( dda_ht )		5664766	0					
ANR	5666479	Callee	dda_current		5664766	0					
ANR	5666480	Identifier	dda_current		5664766	0					
ANR	5666481	ArgumentList	dda_ht		5664766	1					
ANR	5666482	Argument	dda_ht		5664766	0					
ANR	5666483	Identifier	dda_ht		5664766	0					
ANR	5666484	WhileStatement	while ( xr > xn )		5664766	2					
ANR	5666485	Condition	xr > xn	765:35:33547:33553	5664766	0	True				
ANR	5666486	RelationalExpression	xr > xn		5664766	0		>			
ANR	5666487	Identifier	xr		5664766	0					
ANR	5666488	Identifier	xn		5664766	1					
ANR	5666489	CompoundStatement		315:44:15678:15678	5664766	1					
ANR	5666490	ExpressionStatement	* ( devc_contone [ 0 ] ) -- = ( psrc_plane [ 0 ] ) [ j ]	766:32:33590:33631	5664766	0	True				
ANR	5666491	AssignmentExpression	* ( devc_contone [ 0 ] ) -- = ( psrc_plane [ 0 ] ) [ j ]		5664766	0		=			
ANR	5666492	UnaryOperationExpression	* ( devc_contone [ 0 ] ) --		5664766	0					
ANR	5666493	UnaryOperator	*		5664766	0					
ANR	5666494	PostIncDecOperationExpression	( devc_contone [ 0 ] ) --		5664766	1					
ANR	5666495	ArrayIndexing	devc_contone [ 0 ]		5664766	0					
ANR	5666496	Identifier	devc_contone		5664766	0					
ANR	5666497	PrimaryExpression	0		5664766	1					
ANR	5666498	IncDec	--		5664766	1					
ANR	5666499	ArrayIndexing	( psrc_plane [ 0 ] ) [ j ]		5664766	1					
ANR	5666500	ArrayIndexing	psrc_plane [ 0 ]		5664766	0					
ANR	5666501	Identifier	psrc_plane		5664766	0					
ANR	5666502	PrimaryExpression	0		5664766	1					
ANR	5666503	Identifier	j		5664766	1					
ANR	5666504	ExpressionStatement	* ( devc_contone [ 1 ] ) -- = ( psrc_plane [ 1 ] ) [ j ]	767:32:33665:33706	5664766	1	True				
ANR	5666505	AssignmentExpression	* ( devc_contone [ 1 ] ) -- = ( psrc_plane [ 1 ] ) [ j ]		5664766	0		=			
ANR	5666506	UnaryOperationExpression	* ( devc_contone [ 1 ] ) --		5664766	0					
ANR	5666507	UnaryOperator	*		5664766	0					
ANR	5666508	PostIncDecOperationExpression	( devc_contone [ 1 ] ) --		5664766	1					
ANR	5666509	ArrayIndexing	devc_contone [ 1 ]		5664766	0					
ANR	5666510	Identifier	devc_contone		5664766	0					
ANR	5666511	PrimaryExpression	1		5664766	1					
ANR	5666512	IncDec	--		5664766	1					
ANR	5666513	ArrayIndexing	( psrc_plane [ 1 ] ) [ j ]		5664766	1					
ANR	5666514	ArrayIndexing	psrc_plane [ 1 ]		5664766	0					
ANR	5666515	Identifier	psrc_plane		5664766	0					
ANR	5666516	PrimaryExpression	1		5664766	1					
ANR	5666517	Identifier	j		5664766	1					
ANR	5666518	ExpressionStatement	* ( devc_contone [ 2 ] ) -- = ( psrc_plane [ 2 ] ) [ j ]	768:32:33740:33781	5664766	2	True				
ANR	5666519	AssignmentExpression	* ( devc_contone [ 2 ] ) -- = ( psrc_plane [ 2 ] ) [ j ]		5664766	0		=			
ANR	5666520	UnaryOperationExpression	* ( devc_contone [ 2 ] ) --		5664766	0					
ANR	5666521	UnaryOperator	*		5664766	0					
ANR	5666522	PostIncDecOperationExpression	( devc_contone [ 2 ] ) --		5664766	1					
ANR	5666523	ArrayIndexing	devc_contone [ 2 ]		5664766	0					
ANR	5666524	Identifier	devc_contone		5664766	0					
ANR	5666525	PrimaryExpression	2		5664766	1					
ANR	5666526	IncDec	--		5664766	1					
ANR	5666527	ArrayIndexing	( psrc_plane [ 2 ] ) [ j ]		5664766	1					
ANR	5666528	ArrayIndexing	psrc_plane [ 2 ]		5664766	0					
ANR	5666529	Identifier	psrc_plane		5664766	0					
ANR	5666530	PrimaryExpression	2		5664766	1					
ANR	5666531	Identifier	j		5664766	1					
ANR	5666532	ExpressionStatement	* ( devc_contone [ 3 ] ) -- = ( psrc_plane [ 3 ] ) [ j ]	769:32:33815:33856	5664766	3	True				
ANR	5666533	AssignmentExpression	* ( devc_contone [ 3 ] ) -- = ( psrc_plane [ 3 ] ) [ j ]		5664766	0		=			
ANR	5666534	UnaryOperationExpression	* ( devc_contone [ 3 ] ) --		5664766	0					
ANR	5666535	UnaryOperator	*		5664766	0					
ANR	5666536	PostIncDecOperationExpression	( devc_contone [ 3 ] ) --		5664766	1					
ANR	5666537	ArrayIndexing	devc_contone [ 3 ]		5664766	0					
ANR	5666538	Identifier	devc_contone		5664766	0					
ANR	5666539	PrimaryExpression	3		5664766	1					
ANR	5666540	IncDec	--		5664766	1					
ANR	5666541	ArrayIndexing	( psrc_plane [ 3 ] ) [ j ]		5664766	1					
ANR	5666542	ArrayIndexing	psrc_plane [ 3 ]		5664766	0					
ANR	5666543	Identifier	psrc_plane		5664766	0					
ANR	5666544	PrimaryExpression	3		5664766	1					
ANR	5666545	Identifier	j		5664766	1					
ANR	5666546	ExpressionStatement	xr --	770:32:33890:33894	5664766	4	True				
ANR	5666547	PostIncDecOperationExpression	xr --		5664766	0					
ANR	5666548	Identifier	xr		5664766	0					
ANR	5666549	IncDec	--		5664766	1					
ANR	5666550	ExpressionStatement	j ++	772:28:34000:34003	5664766	3	True				
ANR	5666551	PostIncDecOperationExpression	j ++		5664766	0					
ANR	5666552	Identifier	j		5664766	0					
ANR	5666553	IncDec	++		5664766	1					
ANR	5666554	BreakStatement	break ;	775:20:34073:34078	5664766	2	True				
ANR	5666555	Label	case image_landscape :	777:16:34133:34153	5664766	3	True				
ANR	5666556	Identifier	image_landscape		5664766	0					
ANR	5666557	IfStatement	if ( penum -> ht_landscape . flipy )		5664766	4					
ANR	5666558	Condition	penum -> ht_landscape . flipy	782:24:34460:34484	5664766	0	True				
ANR	5666559	MemberAccess	penum -> ht_landscape . flipy		5664766	0					
ANR	5666560	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5666561	Identifier	penum		5664766	0					
ANR	5666562	Identifier	ht_landscape		5664766	1					
ANR	5666563	Identifier	flipy		5664766	1					
ANR	5666564	CompoundStatement		332:51:16609:16609	5664766	1					
ANR	5666565	ExpressionStatement	position = penum -> ht_landscape . curr_pos + LAND_BITS * ( data_length - 1 )	783:24:34513:34620	5664766	0	True				
ANR	5666566	AssignmentExpression	position = penum -> ht_landscape . curr_pos + LAND_BITS * ( data_length - 1 )		5664766	0		=			
ANR	5666567	Identifier	position		5664766	0					
ANR	5666568	AdditiveExpression	penum -> ht_landscape . curr_pos + LAND_BITS * ( data_length - 1 )		5664766	1		+			
ANR	5666569	MemberAccess	penum -> ht_landscape . curr_pos		5664766	0					
ANR	5666570	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5666571	Identifier	penum		5664766	0					
ANR	5666572	Identifier	ht_landscape		5664766	1					
ANR	5666573	Identifier	curr_pos		5664766	1					
ANR	5666574	MultiplicativeExpression	LAND_BITS * ( data_length - 1 )		5664766	1		*			
ANR	5666575	Identifier	LAND_BITS		5664766	0					
ANR	5666576	AdditiveExpression	data_length - 1		5664766	1		-			
ANR	5666577	Identifier	data_length		5664766	0					
ANR	5666578	PrimaryExpression	1		5664766	1					
ANR	5666579	ForStatement	"for ( k = 0 , i = 0 ; k < src_size ; k ++ )"		5664766	1					
ANR	5666580	ForInit	"k = 0 , i = 0 ;"	786:29:34689:34697	5664766	0	True				
ANR	5666581	Expression	"k = 0 , i = 0"		5664766	0					
ANR	5666582	AssignmentExpression	k = 0		5664766	0		=			
ANR	5666583	Identifier	k		5664766	0					
ANR	5666584	PrimaryExpression	0		5664766	1					
ANR	5666585	AssignmentExpression	i = 0		5664766	1		=			
ANR	5666586	Identifier	i		5664766	0					
ANR	5666587	PrimaryExpression	0		5664766	1					
ANR	5666588	Condition	k < src_size	786:39:34699:34708	5664766	1	True				
ANR	5666589	RelationalExpression	k < src_size		5664766	0		<			
ANR	5666590	Identifier	k		5664766	0					
ANR	5666591	Identifier	src_size		5664766	1					
ANR	5666592	PostIncDecOperationExpression	k ++	786:51:34711:34713	5664766	2	True				
ANR	5666593	Identifier	k		5664766	0					
ANR	5666594	IncDec	++		5664766	1					
ANR	5666595	CompoundStatement		336:56:16838:16838	5664766	3					
ANR	5666596	ExpressionStatement	dda_next ( dda_ht )	787:28:34746:34762	5664766	0	True				
ANR	5666597	CallExpression	dda_next ( dda_ht )		5664766	0					
ANR	5666598	Callee	dda_next		5664766	0					
ANR	5666599	Identifier	dda_next		5664766	0					
ANR	5666600	ArgumentList	dda_ht		5664766	1					
ANR	5666601	Argument	dda_ht		5664766	0					
ANR	5666602	Identifier	dda_ht		5664766	0					
ANR	5666603	ExpressionStatement	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )	788:28:34792:34839	5664766	1	True				
ANR	5666604	AssignmentExpression	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	0		=			
ANR	5666605	Identifier	xn		5664766	0					
ANR	5666606	CallExpression	fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	1					
ANR	5666607	Callee	fixed2int_var_rounded		5664766	0					
ANR	5666608	Identifier	fixed2int_var_rounded		5664766	0					
ANR	5666609	ArgumentList	dda_current ( dda_ht )		5664766	1					
ANR	5666610	Argument	dda_current ( dda_ht )		5664766	0					
ANR	5666611	CallExpression	dda_current ( dda_ht )		5664766	0					
ANR	5666612	Callee	dda_current		5664766	0					
ANR	5666613	Identifier	dda_current		5664766	0					
ANR	5666614	ArgumentList	dda_ht		5664766	1					
ANR	5666615	Argument	dda_ht		5664766	0					
ANR	5666616	Identifier	dda_ht		5664766	0					
ANR	5666617	WhileStatement	while ( xr > xn )		5664766	2					
ANR	5666618	Condition	xr > xn	789:35:34876:34882	5664766	0	True				
ANR	5666619	RelationalExpression	xr > xn		5664766	0		>			
ANR	5666620	Identifier	xr		5664766	0					
ANR	5666621	Identifier	xn		5664766	1					
ANR	5666622	CompoundStatement		339:44:17007:17007	5664766	1					
ANR	5666623	ForStatement	for ( j = 0 ; j < spp_out ; j ++ )		5664766	0					
ANR	5666624	ForInit	j = 0 ;	790:37:34924:34929	5664766	0	True				
ANR	5666625	AssignmentExpression	j = 0		5664766	0		=			
ANR	5666626	Identifier	j		5664766	0					
ANR	5666627	PrimaryExpression	0		5664766	1					
ANR	5666628	Condition	j < spp_out	790:44:34931:34941	5664766	1	True				
ANR	5666629	RelationalExpression	j < spp_out		5664766	0		<			
ANR	5666630	Identifier	j		5664766	0					
ANR	5666631	Identifier	spp_out		5664766	1					
ANR	5666632	PostIncDecOperationExpression	j ++	790:57:34944:34946	5664766	2	True				
ANR	5666633	Identifier	j		5664766	0					
ANR	5666634	IncDec	++		5664766	1					
ANR	5666635	CompoundStatement		340:62:17071:17071	5664766	3					
ANR	5666636	ExpressionStatement	* ( devc_contone [ j ] + position ) = ( psrc_plane [ j ] ) [ i ]	791:36:34987:35037	5664766	0	True				
ANR	5666637	AssignmentExpression	* ( devc_contone [ j ] + position ) = ( psrc_plane [ j ] ) [ i ]		5664766	0		=			
ANR	5666638	UnaryOperationExpression	* ( devc_contone [ j ] + position )		5664766	0					
ANR	5666639	UnaryOperator	*		5664766	0					
ANR	5666640	AdditiveExpression	devc_contone [ j ] + position		5664766	1		+			
ANR	5666641	ArrayIndexing	devc_contone [ j ]		5664766	0					
ANR	5666642	Identifier	devc_contone		5664766	0					
ANR	5666643	Identifier	j		5664766	1					
ANR	5666644	Identifier	position		5664766	1					
ANR	5666645	ArrayIndexing	( psrc_plane [ j ] ) [ i ]		5664766	1					
ANR	5666646	ArrayIndexing	psrc_plane [ j ]		5664766	0					
ANR	5666647	Identifier	psrc_plane		5664766	0					
ANR	5666648	Identifier	j		5664766	1					
ANR	5666649	Identifier	i		5664766	1					
ANR	5666650	ExpressionStatement	position -= LAND_BITS	792:36:35075:35096	5664766	1	True				
ANR	5666651	AssignmentExpression	position -= LAND_BITS		5664766	0		-=			
ANR	5666652	Identifier	position		5664766	0					
ANR	5666653	Identifier	LAND_BITS		5664766	1					
ANR	5666654	ExpressionStatement	xr --	794:32:35164:35168	5664766	1	True				
ANR	5666655	PostIncDecOperationExpression	xr --		5664766	0					
ANR	5666656	Identifier	xr		5664766	0					
ANR	5666657	IncDec	--		5664766	1					
ANR	5666658	ExpressionStatement	i ++	796:28:35274:35277	5664766	3	True				
ANR	5666659	PostIncDecOperationExpression	i ++		5664766	0					
ANR	5666660	Identifier	i		5664766	0					
ANR	5666661	IncDec	++		5664766	1					
ANR	5666662	ElseStatement	else		5664766	0					
ANR	5666663	CompoundStatement		348:27:17454:17454	5664766	0					
ANR	5666664	ExpressionStatement	position = penum -> ht_landscape . curr_pos	799:24:35358:35397	5664766	0	True				
ANR	5666665	AssignmentExpression	position = penum -> ht_landscape . curr_pos		5664766	0		=			
ANR	5666666	Identifier	position		5664766	0					
ANR	5666667	MemberAccess	penum -> ht_landscape . curr_pos		5664766	1					
ANR	5666668	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5666669	Identifier	penum		5664766	0					
ANR	5666670	Identifier	ht_landscape		5664766	1					
ANR	5666671	Identifier	curr_pos		5664766	1					
ANR	5666672	ForStatement	for ( k = 0 ; k < spp_out ; k ++ )		5664766	1					
ANR	5666673	ForInit	k = 0 ;	804:29:35689:35694	5664766	0	True				
ANR	5666674	AssignmentExpression	k = 0		5664766	0		=			
ANR	5666675	Identifier	k		5664766	0					
ANR	5666676	PrimaryExpression	0		5664766	1					
ANR	5666677	Condition	k < spp_out	804:36:35696:35706	5664766	1	True				
ANR	5666678	RelationalExpression	k < spp_out		5664766	0		<			
ANR	5666679	Identifier	k		5664766	0					
ANR	5666680	Identifier	spp_out		5664766	1					
ANR	5666681	PostIncDecOperationExpression	k ++	804:49:35709:35711	5664766	2	True				
ANR	5666682	Identifier	k		5664766	0					
ANR	5666683	IncDec	++		5664766	1					
ANR	5666684	CompoundStatement		354:54:17836:17836	5664766	3					
ANR	5666685	ExpressionStatement	devc_contone [ k ] = devc_contone [ k ] + position	805:28:35744:35788	5664766	0	True				
ANR	5666686	AssignmentExpression	devc_contone [ k ] = devc_contone [ k ] + position		5664766	0		=			
ANR	5666687	ArrayIndexing	devc_contone [ k ]		5664766	0					
ANR	5666688	Identifier	devc_contone		5664766	0					
ANR	5666689	Identifier	k		5664766	1					
ANR	5666690	AdditiveExpression	devc_contone [ k ] + position		5664766	1		+			
ANR	5666691	ArrayIndexing	devc_contone [ k ]		5664766	0					
ANR	5666692	Identifier	devc_contone		5664766	0					
ANR	5666693	Identifier	k		5664766	1					
ANR	5666694	Identifier	position		5664766	1					
ANR	5666695	IfStatement	if ( src_size == dest_height )		5664766	2					
ANR	5666696	Condition	src_size == dest_height	807:28:35844:35866	5664766	0	True				
ANR	5666697	EqualityExpression	src_size == dest_height		5664766	0		==			
ANR	5666698	Identifier	src_size		5664766	0					
ANR	5666699	Identifier	dest_height		5664766	1					
ANR	5666700	CompoundStatement		357:53:17991:17991	5664766	1					
ANR	5666701	ForStatement	for ( k = 0 ; k < data_length ; k ++ )		5664766	0					
ANR	5666702	ForInit	k = 0 ;	808:33:35904:35909	5664766	0	True				
ANR	5666703	AssignmentExpression	k = 0		5664766	0		=			
ANR	5666704	Identifier	k		5664766	0					
ANR	5666705	PrimaryExpression	0		5664766	1					
ANR	5666706	Condition	k < data_length	808:40:35911:35925	5664766	1	True				
ANR	5666707	RelationalExpression	k < data_length		5664766	0		<			
ANR	5666708	Identifier	k		5664766	0					
ANR	5666709	Identifier	data_length		5664766	1					
ANR	5666710	PostIncDecOperationExpression	k ++	808:57:35928:35930	5664766	2	True				
ANR	5666711	Identifier	k		5664766	0					
ANR	5666712	IncDec	++		5664766	1					
ANR	5666713	CompoundStatement		358:62:18055:18055	5664766	3					
ANR	5666714	ForStatement	for ( j = 0 ; j < spp_out ; j ++ )		5664766	0					
ANR	5666715	ForInit	j = 0 ;	810:37:36056:36061	5664766	0	True				
ANR	5666716	AssignmentExpression	j = 0		5664766	0		=			
ANR	5666717	Identifier	j		5664766	0					
ANR	5666718	PrimaryExpression	0		5664766	1					
ANR	5666719	Condition	j < spp_out	810:44:36063:36073	5664766	1	True				
ANR	5666720	RelationalExpression	j < spp_out		5664766	0		<			
ANR	5666721	Identifier	j		5664766	0					
ANR	5666722	Identifier	spp_out		5664766	1					
ANR	5666723	PostIncDecOperationExpression	j ++	810:57:36076:36078	5664766	2	True				
ANR	5666724	Identifier	j		5664766	0					
ANR	5666725	IncDec	++		5664766	1					
ANR	5666726	CompoundStatement		360:62:18203:18203	5664766	3					
ANR	5666727	ExpressionStatement	* ( devc_contone [ j ] ) = ( psrc_plane [ j ] ) [ k ]	811:36:36119:36158	5664766	0	True				
ANR	5666728	AssignmentExpression	* ( devc_contone [ j ] ) = ( psrc_plane [ j ] ) [ k ]		5664766	0		=			
ANR	5666729	UnaryOperationExpression	* ( devc_contone [ j ] )		5664766	0					
ANR	5666730	UnaryOperator	*		5664766	0					
ANR	5666731	ArrayIndexing	devc_contone [ j ]		5664766	1					
ANR	5666732	Identifier	devc_contone		5664766	0					
ANR	5666733	Identifier	j		5664766	1					
ANR	5666734	ArrayIndexing	( psrc_plane [ j ] ) [ k ]		5664766	1					
ANR	5666735	ArrayIndexing	psrc_plane [ j ]		5664766	0					
ANR	5666736	Identifier	psrc_plane		5664766	0					
ANR	5666737	Identifier	j		5664766	1					
ANR	5666738	Identifier	k		5664766	1					
ANR	5666739	ExpressionStatement	devc_contone [ j ] += LAND_BITS	812:36:36196:36224	5664766	1	True				
ANR	5666740	AssignmentExpression	devc_contone [ j ] += LAND_BITS		5664766	0		+=			
ANR	5666741	ArrayIndexing	devc_contone [ j ]		5664766	0					
ANR	5666742	Identifier	devc_contone		5664766	0					
ANR	5666743	Identifier	j		5664766	1					
ANR	5666744	Identifier	LAND_BITS		5664766	1					
ANR	5666745	ElseStatement	else		5664766	0					
ANR	5666746	IfStatement	if ( src_size * 2 == dest_height )		5664766	0					
ANR	5666747	Condition	src_size * 2 == dest_height	815:35:36325:36349	5664766	0	True				
ANR	5666748	EqualityExpression	src_size * 2 == dest_height		5664766	0		==			
ANR	5666749	MultiplicativeExpression	src_size * 2		5664766	0		*			
ANR	5666750	Identifier	src_size		5664766	0					
ANR	5666751	PrimaryExpression	2		5664766	1					
ANR	5666752	Identifier	dest_height		5664766	1					
ANR	5666753	CompoundStatement		365:62:18474:18474	5664766	1					
ANR	5666754	ForStatement	for ( k = 0 ; k < data_length ; k += 2 )		5664766	0					
ANR	5666755	ForInit	k = 0 ;	816:33:36387:36392	5664766	0	True				
ANR	5666756	AssignmentExpression	k = 0		5664766	0		=			
ANR	5666757	Identifier	k		5664766	0					
ANR	5666758	PrimaryExpression	0		5664766	1					
ANR	5666759	Condition	k < data_length	816:40:36394:36408	5664766	1	True				
ANR	5666760	RelationalExpression	k < data_length		5664766	0		<			
ANR	5666761	Identifier	k		5664766	0					
ANR	5666762	Identifier	data_length		5664766	1					
ANR	5666763	AssignmentExpression	k += 2	816:57:36411:36414	5664766	2	True	+=			
ANR	5666764	Identifier	k		5664766	0					
ANR	5666765	PrimaryExpression	2		5664766	1					
ANR	5666766	CompoundStatement		366:63:18539:18539	5664766	3					
ANR	5666767	ExpressionStatement	offset = fixed2int_var_rounded ( fixed_half * k )	817:32:36451:36497	5664766	0	True				
ANR	5666768	AssignmentExpression	offset = fixed2int_var_rounded ( fixed_half * k )		5664766	0		=			
ANR	5666769	Identifier	offset		5664766	0					
ANR	5666770	CallExpression	fixed2int_var_rounded ( fixed_half * k )		5664766	1					
ANR	5666771	Callee	fixed2int_var_rounded		5664766	0					
ANR	5666772	Identifier	fixed2int_var_rounded		5664766	0					
ANR	5666773	ArgumentList	fixed_half * k		5664766	1					
ANR	5666774	Argument	fixed_half * k		5664766	0					
ANR	5666775	MultiplicativeExpression	fixed_half * k		5664766	0		*			
ANR	5666776	Identifier	fixed_half		5664766	0					
ANR	5666777	Identifier	k		5664766	1					
ANR	5666778	ForStatement	for ( j = 0 ; j < spp_out ; j ++ )		5664766	1					
ANR	5666779	ForInit	j = 0 ;	819:37:36620:36625	5664766	0	True				
ANR	5666780	AssignmentExpression	j = 0		5664766	0		=			
ANR	5666781	Identifier	j		5664766	0					
ANR	5666782	PrimaryExpression	0		5664766	1					
ANR	5666783	Condition	j < spp_out	819:44:36627:36637	5664766	1	True				
ANR	5666784	RelationalExpression	j < spp_out		5664766	0		<			
ANR	5666785	Identifier	j		5664766	0					
ANR	5666786	Identifier	spp_out		5664766	1					
ANR	5666787	PostIncDecOperationExpression	j ++	819:57:36640:36642	5664766	2	True				
ANR	5666788	Identifier	j		5664766	0					
ANR	5666789	IncDec	++		5664766	1					
ANR	5666790	CompoundStatement		369:62:18767:18767	5664766	3					
ANR	5666791	ExpressionStatement	* ( devc_contone [ j ] ) = * ( devc_contone [ j ] + LAND_BITS ) = ( psrc_plane [ j ] ) [ offset ]	820:36:36683:36836	5664766	0	True				
ANR	5666792	AssignmentExpression	* ( devc_contone [ j ] ) = * ( devc_contone [ j ] + LAND_BITS ) = ( psrc_plane [ j ] ) [ offset ]		5664766	0		=			
ANR	5666793	UnaryOperationExpression	* ( devc_contone [ j ] )		5664766	0					
ANR	5666794	UnaryOperator	*		5664766	0					
ANR	5666795	ArrayIndexing	devc_contone [ j ]		5664766	1					
ANR	5666796	Identifier	devc_contone		5664766	0					
ANR	5666797	Identifier	j		5664766	1					
ANR	5666798	AssignmentExpression	* ( devc_contone [ j ] + LAND_BITS ) = ( psrc_plane [ j ] ) [ offset ]		5664766	1		=			
ANR	5666799	UnaryOperationExpression	* ( devc_contone [ j ] + LAND_BITS )		5664766	0					
ANR	5666800	UnaryOperator	*		5664766	0					
ANR	5666801	AdditiveExpression	devc_contone [ j ] + LAND_BITS		5664766	1		+			
ANR	5666802	ArrayIndexing	devc_contone [ j ]		5664766	0					
ANR	5666803	Identifier	devc_contone		5664766	0					
ANR	5666804	Identifier	j		5664766	1					
ANR	5666805	Identifier	LAND_BITS		5664766	1					
ANR	5666806	ArrayIndexing	( psrc_plane [ j ] ) [ offset ]		5664766	1					
ANR	5666807	ArrayIndexing	psrc_plane [ j ]		5664766	0					
ANR	5666808	Identifier	psrc_plane		5664766	0					
ANR	5666809	Identifier	j		5664766	1					
ANR	5666810	Identifier	offset		5664766	1					
ANR	5666811	ExpressionStatement	devc_contone [ j ] += 2 * LAND_BITS	823:36:36874:36906	5664766	1	True				
ANR	5666812	AssignmentExpression	devc_contone [ j ] += 2 * LAND_BITS		5664766	0		+=			
ANR	5666813	ArrayIndexing	devc_contone [ j ]		5664766	0					
ANR	5666814	Identifier	devc_contone		5664766	0					
ANR	5666815	Identifier	j		5664766	1					
ANR	5666816	MultiplicativeExpression	2 * LAND_BITS		5664766	1		*			
ANR	5666817	PrimaryExpression	2		5664766	0					
ANR	5666818	Identifier	LAND_BITS		5664766	1					
ANR	5666819	ElseStatement	else		5664766	0					
ANR	5666820	CompoundStatement		376:31:19125:19125	5664766	0					
ANR	5666821	ForStatement	"for ( k = 0 , i = 0 ; k < src_size ; k ++ )"		5664766	0					
ANR	5666822	ForInit	"k = 0 , i = 0 ;"	828:33:37080:37088	5664766	0	True				
ANR	5666823	Expression	"k = 0 , i = 0"		5664766	0					
ANR	5666824	AssignmentExpression	k = 0		5664766	0		=			
ANR	5666825	Identifier	k		5664766	0					
ANR	5666826	PrimaryExpression	0		5664766	1					
ANR	5666827	AssignmentExpression	i = 0		5664766	1		=			
ANR	5666828	Identifier	i		5664766	0					
ANR	5666829	PrimaryExpression	0		5664766	1					
ANR	5666830	Condition	k < src_size	828:43:37090:37099	5664766	1	True				
ANR	5666831	RelationalExpression	k < src_size		5664766	0		<			
ANR	5666832	Identifier	k		5664766	0					
ANR	5666833	Identifier	src_size		5664766	1					
ANR	5666834	PostIncDecOperationExpression	k ++	828:55:37102:37104	5664766	2	True				
ANR	5666835	Identifier	k		5664766	0					
ANR	5666836	IncDec	++		5664766	1					
ANR	5666837	CompoundStatement		378:60:19229:19229	5664766	3					
ANR	5666838	ExpressionStatement	dda_next ( dda_ht )	829:32:37141:37157	5664766	0	True				
ANR	5666839	CallExpression	dda_next ( dda_ht )		5664766	0					
ANR	5666840	Callee	dda_next		5664766	0					
ANR	5666841	Identifier	dda_next		5664766	0					
ANR	5666842	ArgumentList	dda_ht		5664766	1					
ANR	5666843	Argument	dda_ht		5664766	0					
ANR	5666844	Identifier	dda_ht		5664766	0					
ANR	5666845	ExpressionStatement	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )	830:32:37191:37238	5664766	1	True				
ANR	5666846	AssignmentExpression	xn = fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	0		=			
ANR	5666847	Identifier	xn		5664766	0					
ANR	5666848	CallExpression	fixed2int_var_rounded ( dda_current ( dda_ht ) )		5664766	1					
ANR	5666849	Callee	fixed2int_var_rounded		5664766	0					
ANR	5666850	Identifier	fixed2int_var_rounded		5664766	0					
ANR	5666851	ArgumentList	dda_current ( dda_ht )		5664766	1					
ANR	5666852	Argument	dda_current ( dda_ht )		5664766	0					
ANR	5666853	CallExpression	dda_current ( dda_ht )		5664766	0					
ANR	5666854	Callee	dda_current		5664766	0					
ANR	5666855	Identifier	dda_current		5664766	0					
ANR	5666856	ArgumentList	dda_ht		5664766	1					
ANR	5666857	Argument	dda_ht		5664766	0					
ANR	5666858	Identifier	dda_ht		5664766	0					
ANR	5666859	WhileStatement	while ( xr > xn )		5664766	2					
ANR	5666860	Condition	xr > xn	831:39:37279:37285	5664766	0	True				
ANR	5666861	RelationalExpression	xr > xn		5664766	0		>			
ANR	5666862	Identifier	xr		5664766	0					
ANR	5666863	Identifier	xn		5664766	1					
ANR	5666864	CompoundStatement		381:48:19410:19410	5664766	1					
ANR	5666865	ForStatement	for ( j = 0 ; j < spp_out ; j ++ )		5664766	0					
ANR	5666866	ForInit	j = 0 ;	832:41:37331:37336	5664766	0	True				
ANR	5666867	AssignmentExpression	j = 0		5664766	0		=			
ANR	5666868	Identifier	j		5664766	0					
ANR	5666869	PrimaryExpression	0		5664766	1					
ANR	5666870	Condition	j < spp_out	832:48:37338:37348	5664766	1	True				
ANR	5666871	RelationalExpression	j < spp_out		5664766	0		<			
ANR	5666872	Identifier	j		5664766	0					
ANR	5666873	Identifier	spp_out		5664766	1					
ANR	5666874	PostIncDecOperationExpression	j ++	832:61:37351:37353	5664766	2	True				
ANR	5666875	Identifier	j		5664766	0					
ANR	5666876	IncDec	++		5664766	1					
ANR	5666877	CompoundStatement		382:66:19478:19478	5664766	3					
ANR	5666878	ExpressionStatement	* ( devc_contone [ j ] + position ) = ( psrc_plane [ j ] ) [ i ]	833:40:37398:37448	5664766	0	True				
ANR	5666879	AssignmentExpression	* ( devc_contone [ j ] + position ) = ( psrc_plane [ j ] ) [ i ]		5664766	0		=			
ANR	5666880	UnaryOperationExpression	* ( devc_contone [ j ] + position )		5664766	0					
ANR	5666881	UnaryOperator	*		5664766	0					
ANR	5666882	AdditiveExpression	devc_contone [ j ] + position		5664766	1		+			
ANR	5666883	ArrayIndexing	devc_contone [ j ]		5664766	0					
ANR	5666884	Identifier	devc_contone		5664766	0					
ANR	5666885	Identifier	j		5664766	1					
ANR	5666886	Identifier	position		5664766	1					
ANR	5666887	ArrayIndexing	( psrc_plane [ j ] ) [ i ]		5664766	1					
ANR	5666888	ArrayIndexing	psrc_plane [ j ]		5664766	0					
ANR	5666889	Identifier	psrc_plane		5664766	0					
ANR	5666890	Identifier	j		5664766	1					
ANR	5666891	Identifier	i		5664766	1					
ANR	5666892	ExpressionStatement	position -= LAND_BITS	834:40:37490:37511	5664766	1	True				
ANR	5666893	AssignmentExpression	position -= LAND_BITS		5664766	0		-=			
ANR	5666894	Identifier	position		5664766	0					
ANR	5666895	Identifier	LAND_BITS		5664766	1					
ANR	5666896	ExpressionStatement	xr --	836:36:37587:37591	5664766	1	True				
ANR	5666897	PostIncDecOperationExpression	xr --		5664766	0					
ANR	5666898	Identifier	xr		5664766	0					
ANR	5666899	IncDec	--		5664766	1					
ANR	5666900	ExpressionStatement	i ++	838:32:37705:37708	5664766	3	True				
ANR	5666901	PostIncDecOperationExpression	i ++		5664766	0					
ANR	5666902	Identifier	i		5664766	0					
ANR	5666903	IncDec	++		5664766	1					
ANR	5666904	ExpressionStatement	penum -> ht_landscape . count += vdi	843:20:37884:37916	5664766	5	True				
ANR	5666905	AssignmentExpression	penum -> ht_landscape . count += vdi		5664766	0		+=			
ANR	5666906	MemberAccess	penum -> ht_landscape . count		5664766	0					
ANR	5666907	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5666908	Identifier	penum		5664766	0					
ANR	5666909	Identifier	ht_landscape		5664766	1					
ANR	5666910	Identifier	count		5664766	1					
ANR	5666911	Identifier	vdi		5664766	1					
ANR	5666912	ExpressionStatement	penum -> ht_landscape . widths [ penum -> ht_landscape . curr_pos ] = vdi	844:20:37938:38000	5664766	6	True				
ANR	5666913	AssignmentExpression	penum -> ht_landscape . widths [ penum -> ht_landscape . curr_pos ] = vdi		5664766	0		=			
ANR	5666914	ArrayIndexing	penum -> ht_landscape . widths [ penum -> ht_landscape . curr_pos ]		5664766	0					
ANR	5666915	MemberAccess	penum -> ht_landscape . widths		5664766	0					
ANR	5666916	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5666917	Identifier	penum		5664766	0					
ANR	5666918	Identifier	ht_landscape		5664766	1					
ANR	5666919	Identifier	widths		5664766	1					
ANR	5666920	MemberAccess	penum -> ht_landscape . curr_pos		5664766	1					
ANR	5666921	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5666922	Identifier	penum		5664766	0					
ANR	5666923	Identifier	ht_landscape		5664766	1					
ANR	5666924	Identifier	curr_pos		5664766	1					
ANR	5666925	Identifier	vdi		5664766	1					
ANR	5666926	ExpressionStatement	penum -> ht_landscape . curr_pos += penum -> ht_landscape . index	845:20:38022:38079	5664766	7	True				
ANR	5666927	AssignmentExpression	penum -> ht_landscape . curr_pos += penum -> ht_landscape . index		5664766	0		+=			
ANR	5666928	MemberAccess	penum -> ht_landscape . curr_pos		5664766	0					
ANR	5666929	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5666930	Identifier	penum		5664766	0					
ANR	5666931	Identifier	ht_landscape		5664766	1					
ANR	5666932	Identifier	curr_pos		5664766	1					
ANR	5666933	MemberAccess	penum -> ht_landscape . index		5664766	1					
ANR	5666934	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5666935	Identifier	penum		5664766	0					
ANR	5666936	Identifier	ht_landscape		5664766	1					
ANR	5666937	Identifier	index		5664766	1					
ANR	5666938	ExpressionStatement	penum -> ht_landscape . num_contones ++	846:20:38101:38135	5664766	8	True				
ANR	5666939	PostIncDecOperationExpression	penum -> ht_landscape . num_contones ++		5664766	0					
ANR	5666940	MemberAccess	penum -> ht_landscape . num_contones		5664766	0					
ANR	5666941	PtrMemberAccess	penum -> ht_landscape		5664766	0					
ANR	5666942	Identifier	penum		5664766	0					
ANR	5666943	Identifier	ht_landscape		5664766	1					
ANR	5666944	Identifier	num_contones		5664766	1					
ANR	5666945	IncDec	++		5664766	1					
ANR	5666946	BreakStatement	break ;	847:20:38157:38162	5664766	9	True				
ANR	5666947	Label	default :	848:16:38180:38187	5664766	10	True				
ANR	5666948	Identifier	default		5664766	0					
ANR	5666949	BreakStatement	break ;	850:20:38253:38258	5664766	11	True				
ANR	5666950	BreakStatement	break ;	852:8:38282:38287	5664766	6	True				
ANR	5666951	Label	default :	853:8:38297:38304	5664766	7	True				
ANR	5666952	Identifier	default		5664766	0					
ANR	5666953	BreakStatement	break ;	855:8:38364:38369	5664766	8	True				
ANR	5666954	Label	flush :	859:0:38503:38508	5664766	36	True				
ANR	5666955	Identifier	flush		5664766	0					
ANR	5666956	ExpressionStatement	thresh_align = penum -> thresh_buffer + offset_threshold	860:4:38514:38568	5664766	37	True				
ANR	5666957	AssignmentExpression	thresh_align = penum -> thresh_buffer + offset_threshold		5664766	0		=			
ANR	5666958	Identifier	thresh_align		5664766	0					
ANR	5666959	AdditiveExpression	penum -> thresh_buffer + offset_threshold		5664766	1		+			
ANR	5666960	PtrMemberAccess	penum -> thresh_buffer		5664766	0					
ANR	5666961	Identifier	penum		5664766	0					
ANR	5666962	Identifier	thresh_buffer		5664766	1					
ANR	5666963	Identifier	offset_threshold		5664766	1					
ANR	5666964	ExpressionStatement	"code = gxht_thresh_planes ( penum , xrun , dest_width , dest_height , thresh_align , dev , offset_contone , contone_stride )"	861:4:38574:38749	5664766	38	True				
ANR	5666965	AssignmentExpression	"code = gxht_thresh_planes ( penum , xrun , dest_width , dest_height , thresh_align , dev , offset_contone , contone_stride )"		5664766	0		=			
ANR	5666966	Identifier	code		5664766	0					
ANR	5666967	CallExpression	"gxht_thresh_planes ( penum , xrun , dest_width , dest_height , thresh_align , dev , offset_contone , contone_stride )"		5664766	1					
ANR	5666968	Callee	gxht_thresh_planes		5664766	0					
ANR	5666969	Identifier	gxht_thresh_planes		5664766	0					
ANR	5666970	ArgumentList	penum		5664766	1					
ANR	5666971	Argument	penum		5664766	0					
ANR	5666972	Identifier	penum		5664766	0					
ANR	5666973	Argument	xrun		5664766	1					
ANR	5666974	Identifier	xrun		5664766	0					
ANR	5666975	Argument	dest_width		5664766	2					
ANR	5666976	Identifier	dest_width		5664766	0					
ANR	5666977	Argument	dest_height		5664766	3					
ANR	5666978	Identifier	dest_height		5664766	0					
ANR	5666979	Argument	thresh_align		5664766	4					
ANR	5666980	Identifier	thresh_align		5664766	0					
ANR	5666981	Argument	dev		5664766	5					
ANR	5666982	Identifier	dev		5664766	0					
ANR	5666983	Argument	offset_contone		5664766	6					
ANR	5666984	Identifier	offset_contone		5664766	0					
ANR	5666985	Argument	contone_stride		5664766	7					
ANR	5666986	Identifier	contone_stride		5664766	0					
ANR	5666987	IfStatement	if ( psrc_cm_start != NULL )		5664766	39					
ANR	5666988	Condition	psrc_cm_start != NULL	865:8:38800:38820	5664766	0	True				
ANR	5666989	EqualityExpression	psrc_cm_start != NULL		5664766	0		!=			
ANR	5666990	Identifier	psrc_cm_start		5664766	0					
ANR	5666991	Identifier	NULL		5664766	1					
ANR	5666992	CompoundStatement		415:31:20945:20945	5664766	1					
ANR	5666993	ExpressionStatement	"gs_free_object ( penum -> pgs -> memory , ( byte * ) psrc_cm_start , ""image_render_color_thresh"" )"	866:8:38833:38942	5664766	0	True				
ANR	5666994	CallExpression	"gs_free_object ( penum -> pgs -> memory , ( byte * ) psrc_cm_start , ""image_render_color_thresh"" )"		5664766	0					
ANR	5666995	Callee	gs_free_object		5664766	0					
ANR	5666996	Identifier	gs_free_object		5664766	0					
ANR	5666997	ArgumentList	penum -> pgs -> memory		5664766	1					
ANR	5666998	Argument	penum -> pgs -> memory		5664766	0					
ANR	5666999	PtrMemberAccess	penum -> pgs -> memory		5664766	0					
ANR	5667000	PtrMemberAccess	penum -> pgs		5664766	0					
ANR	5667001	Identifier	penum		5664766	0					
ANR	5667002	Identifier	pgs		5664766	1					
ANR	5667003	Identifier	memory		5664766	1					
ANR	5667004	Argument	( byte * ) psrc_cm_start		5664766	1					
ANR	5667005	CastExpression	( byte * ) psrc_cm_start		5664766	0					
ANR	5667006	CastTarget	byte *		5664766	0					
ANR	5667007	Identifier	psrc_cm_start		5664766	1					
ANR	5667008	Argument	"""image_render_color_thresh"""		5664766	2					
ANR	5667009	PrimaryExpression	"""image_render_color_thresh"""		5664766	0					
ANR	5667010	ReturnStatement	return code ;	869:4:38954:38965	5664766	40	True				
ANR	5667011	Identifier	code		5664766	0					
ANR	5667012	ReturnType	static int		5664766	1					
ANR	5667013	Identifier	image_render_color_thresh		5664766	2					
ANR	5667014	ParameterList	"gx_image_enum * penum_orig , const byte * buffer , int data_x , uint w , int h , gx_device * dev"		5664766	3					
ANR	5667015	Parameter	gx_image_enum * penum_orig	449:26:17767:17791	5664766	0	True				
ANR	5667016	ParameterType	gx_image_enum *		5664766	0					
ANR	5667017	Identifier	penum_orig		5664766	1					
ANR	5667018	Parameter	const byte * buffer	449:53:17794:17811	5664766	1	True				
ANR	5667019	ParameterType	const byte *		5664766	0					
ANR	5667020	Identifier	buffer		5664766	1					
ANR	5667021	Parameter	int data_x	449:73:17814:17823	5664766	2	True				
ANR	5667022	ParameterType	int		5664766	0					
ANR	5667023	Identifier	data_x		5664766	1					
ANR	5667024	Parameter	uint w	450:19:17845:17850	5664766	3	True				
ANR	5667025	ParameterType	uint		5664766	0					
ANR	5667026	Identifier	w		5664766	1					
ANR	5667027	Parameter	int h	450:27:17853:17857	5664766	4	True				
ANR	5667028	ParameterType	int		5664766	0					
ANR	5667029	Identifier	h		5664766	1					
ANR	5667030	Parameter	gx_device * dev	450:34:17860:17874	5664766	5	True				
ANR	5667031	ParameterType	gx_device *		5664766	0					
ANR	5667032	Identifier	dev		5664766	1					
ANR	5667033	CFGEntryNode	ENTRY		5664766		True				
ANR	5667034	CFGExitNode	EXIT		5664766		True				
ANR	5667035	Symbol	offset_threshold		5664766						
ANR	5667036	Symbol	penum -> x_extent		5664766						
ANR	5667037	Symbol	penum -> dda . pixel0		5664766						
ANR	5667038	Symbol	penum -> y_extent		5664766						
ANR	5667039	Symbol	penum -> ht_landscape . flipy		5664766						
ANR	5667040	Symbol	penum -> ht_landscape . offset_set		5664766						
ANR	5667041	Symbol	penum -> wci		5664766						
ANR	5667042	Symbol	data_x		5664766						
ANR	5667043	Symbol	* ( devc_contone [ 3 ] )		5664766						
ANR	5667044	Symbol	dev		5664766						
ANR	5667045	Symbol	image_portrait		5664766						
ANR	5667046	Symbol	penum -> ht_landscape . index		5664766						
ANR	5667047	Symbol	penum -> dst_width		5664766						
ANR	5667048	Symbol	* ( devc_contone [ 0 ] + 1 )		5664766						
ANR	5667049	Symbol	* ( devc_contone [ j ] + position )		5664766						
ANR	5667050	Symbol	* * penum		5664766						
ANR	5667051	Symbol	spp_out		5664766						
ANR	5667052	Symbol	* devc_contone		5664766						
ANR	5667053	Symbol	dev -> color_info . num_components		5664766						
ANR	5667054	Symbol	* psrc_plane [ 0 ] ++		5664766						
ANR	5667055	Symbol	penum -> ht_offset_bits		5664766						
ANR	5667056	Symbol	penum		5664766						
ANR	5667057	Symbol	xrun		5664766						
ANR	5667058	Symbol	penum -> y_extent . y		5664766						
ANR	5667059	Symbol	penum -> y_extent . x		5664766						
ANR	5667060	Symbol	thresh_align		5664766						
ANR	5667061	Symbol	penum -> dda		5664766						
ANR	5667062	Symbol	* penum -> ht_landscape . widths		5664766						
ANR	5667063	Symbol	* ( devc_contone [ 0 ] ) --		5664766						
ANR	5667064	Symbol	* ( devc_contone [ 2 ] ) --		5664766						
ANR	5667065	Symbol	* ( devc_contone [ 1 ] )		5664766						
ANR	5667066	Symbol	offset_bits		5664766						
ANR	5667067	Symbol	penum -> ht_landscape . num_contones		5664766						
ANR	5667068	Symbol	psrc_cm_start		5664766						
ANR	5667069	Symbol	* penum -> ht_landscape		5664766						
ANR	5667070	Symbol	psrc		5664766						
ANR	5667071	Symbol	* dev		5664766						
ANR	5667072	Symbol	* penum		5664766						
ANR	5667073	Symbol	psrc_temp		5664766						
ANR	5667074	Symbol	* ( devc_contone_gray + 1 )		5664766						
ANR	5667075	Symbol	* penum -> pgs		5664766						
ANR	5667076	Symbol	penum -> ht_landscape . curr_pos		5664766						
ANR	5667077	Symbol	dev -> color_info		5664766						
ANR	5667078	Symbol	fixed2int_var_rounded		5664766						
ANR	5667079	Symbol	devc_contone_gray		5664766						
ANR	5667080	Symbol	penum -> pgs		5664766						
ANR	5667081	Symbol	* psrc_plane [ 2 ] ++		5664766						
ANR	5667082	Symbol	bufend		5664766						
ANR	5667083	Symbol	penum -> line_size		5664766						
ANR	5667084	Symbol	any_abs		5664766						
ANR	5667085	Symbol	* ( devc_contone [ 1 ] + 1 )		5664766						
ANR	5667086	Symbol	& spp_cm		5664766						
ANR	5667087	Symbol	contone_stride		5664766						
ANR	5667088	Symbol	* ( devc_contone [ j ] )		5664766						
ANR	5667089	Symbol	posture		5664766						
ANR	5667090	Symbol	h		5664766						
ANR	5667091	Symbol	gxht_thresh_planes		5664766						
ANR	5667092	Symbol	i		5664766						
ANR	5667093	Symbol	* devc_contone_gray		5664766						
ANR	5667094	Symbol	j		5664766						
ANR	5667095	Symbol	k		5664766						
ANR	5667096	Symbol	offset_contone		5664766						
ANR	5667097	Symbol	src_size		5664766						
ANR	5667098	Symbol	penum -> posture		5664766						
ANR	5667099	Symbol	* position		5664766						
ANR	5667100	Symbol	psrc_plane		5664766						
ANR	5667101	Symbol	* ( devc_contone [ 3 ] ) --		5664766						
ANR	5667102	Symbol	w		5664766						
ANR	5667103	Symbol	* devc_contone_gray --		5664766						
ANR	5667104	Symbol	* ( devc_contone [ 2 ] ) ++		5664766						
ANR	5667105	Symbol	dda_ht		5664766						
ANR	5667106	Symbol	psrc_cm		5664766						
ANR	5667107	Symbol	vdi		5664766						
ANR	5667108	Symbol	* offset_contone		5664766						
ANR	5667109	Symbol	penum -> rect		5664766						
ANR	5667110	Symbol	penum -> x_extent . x		5664766						
ANR	5667111	Symbol	* ( devc_contone [ 2 ] )		5664766						
ANR	5667112	Symbol	penum -> ht_stride		5664766						
ANR	5667113	Symbol	devc_contone		5664766						
ANR	5667114	Symbol	penum -> line		5664766						
ANR	5667115	Symbol	buffer		5664766						
ANR	5667116	Symbol	penum -> ht_landscape		5664766						
ANR	5667117	Symbol	* * psrc_plane		5664766						
ANR	5667118	Symbol	fixed_epsilon		5664766						
ANR	5667119	Symbol	& psrc_cm		5664766						
ANR	5667120	Symbol	penum -> rect . w		5664766						
ANR	5667121	Symbol	* * j		5664766						
ANR	5667122	Symbol	NULL		5664766						
ANR	5667123	Symbol	offset		5664766						
ANR	5667124	Symbol	penum -> ht_landscape . xstart		5664766						
ANR	5667125	Symbol	* ( devc_contone [ 0 ] )		5664766						
ANR	5667126	Symbol	* ( devc_contone [ 3 ] + 1 )		5664766						
ANR	5667127	Symbol	dda_current		5664766						
ANR	5667128	Symbol	* ( devc_contone [ 3 ] ) ++		5664766						
ANR	5667129	Symbol	penum -> dxx		5664766						
ANR	5667130	Symbol	* devc_contone_gray ++		5664766						
ANR	5667131	Symbol	* ( devc_contone [ 1 ] ) ++		5664766						
ANR	5667132	Symbol	true		5664766						
ANR	5667133	Symbol	* offset		5664766						
ANR	5667134	Symbol	position		5664766						
ANR	5667135	Symbol	penum -> ht_landscape . count		5664766						
ANR	5667136	Symbol	* psrc_plane [ 3 ] ++		5664766						
ANR	5667137	Symbol	penum -> thresh_buffer		5664766						
ANR	5667138	Symbol	penum -> pgs -> memory		5664766						
ANR	5667139	Symbol	code		5664766						
ANR	5667140	Symbol	* penum -> ht_landscape . curr_pos		5664766						
ANR	5667141	Symbol	penum_orig		5664766						
ANR	5667142	Symbol	psrc_planestride		5664766						
ANR	5667143	Symbol	* ( devc_contone [ j ] + LAND_BITS )		5664766						
ANR	5667144	Symbol	& bufend		5664766						
ANR	5667145	Symbol	penum -> xci		5664766						
ANR	5667146	Symbol	* psrc_cm		5664766						
ANR	5667147	Symbol	gxht_dda_length		5664766						
ANR	5667148	Symbol	* psrc_plane [ 1 ] ++		5664766						
ANR	5667149	Symbol	fixed_half		5664766						
ANR	5667150	Symbol	* * devc_contone		5664766						
ANR	5667151	Symbol	dest_height		5664766						
ANR	5667152	Symbol	LAND_BITS		5664766						
ANR	5667153	Symbol	penum -> hci		5664766						
ANR	5667154	Symbol	* LAND_BITS		5664766						
ANR	5667155	Symbol	penum -> spp		5664766						
ANR	5667156	Symbol	penum -> ht_landscape . widths		5664766						
ANR	5667157	Symbol	& dda_ht		5664766						
ANR	5667158	Symbol	* psrc_plane		5664766						
ANR	5667159	Symbol	data_length		5664766						
ANR	5667160	Symbol	false		5664766						
ANR	5667161	Symbol	* ( devc_contone [ 2 ] + 1 )		5664766						
ANR	5667162	Symbol	dest_width		5664766						
ANR	5667163	Symbol	spp_cm		5664766						
ANR	5667164	Symbol	& psrc_cm_start		5664766						
ANR	5667165	Symbol	image_color_icc_prep		5664766						
ANR	5667166	Symbol	* i		5664766						
ANR	5667167	Symbol	* j		5664766						
ANR	5667168	Symbol	* k		5664766						
ANR	5667169	Symbol	xn		5664766						
ANR	5667170	Symbol	flush_buff		5664766						
ANR	5667171	Symbol	* ( devc_contone [ 0 ] ) ++		5664766						
ANR	5667172	Symbol	* ( devc_contone [ 1 ] ) --		5664766						
ANR	5667173	Symbol	xr		5664766						
ANR	5667174	Symbol	penum -> ht_buffer		5664766						
ANR	5667175	Symbol	* psrc_temp		5664766						
ANR	5667176	Symbol	penum -> dda . pixel0 . x		5664766						
ANR	5667177	Symbol	penum -> dda . pixel0 . y		5664766						
ANR	5667178	Function	image_render_color_icc_portrait	873:0:39048:42253							
ANR	5667179	FunctionDef	"image_render_color_icc_portrait (gx_image_enum * penum_orig , const byte * buffer , int data_x , uint w , int h , gx_device * dev)"		5667178	0					
ANR	5667180	CompoundStatement		876:0:39214:42253	5667178	0					
ANR	5667181	Statement	const	877:4:39220:39224	5667178	0	True				
ANR	5667182	Statement	gx_image_enum	877:10:39226:39238	5667178	1	True				
ANR	5667183	Statement	*	877:24:39240:39240	5667178	2	True				
ANR	5667184	Statement	const	877:25:39241:39245	5667178	3	True				
ANR	5667185	ExpressionStatement	penum = penum_orig	877:31:39247:39265	5667178	4	True				
ANR	5667186	AssignmentExpression	penum = penum_orig		5667178	0		=			
ANR	5667187	Identifier	penum		5667178	0					
ANR	5667188	Identifier	penum_orig		5667178	1					
ANR	5667189	IdentifierDeclStatement	const gs_gstate * pgs = penum -> pgs ;	878:4:39295:39328	5667178	5	True				
ANR	5667190	IdentifierDecl	* pgs = penum -> pgs		5667178	0					
ANR	5667191	IdentifierDeclType	const gs_gstate *		5667178	0					
ANR	5667192	Identifier	pgs		5667178	1					
ANR	5667193	AssignmentExpression	* pgs = penum -> pgs		5667178	2		=			
ANR	5667194	Identifier	pgs		5667178	0					
ANR	5667195	PtrMemberAccess	penum -> pgs		5667178	1					
ANR	5667196	Identifier	penum		5667178	0					
ANR	5667197	Identifier	pgs		5667178	1					
ANR	5667198	IdentifierDeclStatement	gs_logical_operation_t lop = penum -> log_op ;	879:4:39334:39376	5667178	6	True				
ANR	5667199	IdentifierDecl	lop = penum -> log_op		5667178	0					
ANR	5667200	IdentifierDeclType	gs_logical_operation_t		5667178	0					
ANR	5667201	Identifier	lop		5667178	1					
ANR	5667202	AssignmentExpression	lop = penum -> log_op		5667178	2		=			
ANR	5667203	Identifier	lop		5667178	0					
ANR	5667204	PtrMemberAccess	penum -> log_op		5667178	1					
ANR	5667205	Identifier	penum		5667178	0					
ANR	5667206	Identifier	log_op		5667178	1					
ANR	5667207	IdentifierDeclStatement	gx_dda_fixed_point pnext ;	880:4:39382:39406	5667178	7	True				
ANR	5667208	IdentifierDecl	pnext		5667178	0					
ANR	5667209	IdentifierDeclType	gx_dda_fixed_point		5667178	0					
ANR	5667210	Identifier	pnext		5667178	1					
ANR	5667211	IdentifierDeclStatement	"int vci , vdi ;"	881:4:39412:39424	5667178	8	True				
ANR	5667212	IdentifierDecl	vci		5667178	0					
ANR	5667213	IdentifierDeclType	int		5667178	0					
ANR	5667214	Identifier	vci		5667178	1					
ANR	5667215	IdentifierDecl	vdi		5667178	1					
ANR	5667216	IdentifierDeclType	int		5667178	0					
ANR	5667217	Identifier	vdi		5667178	1					
ANR	5667218	IdentifierDeclStatement	int spp = penum -> spp ;	882:4:39430:39450	5667178	9	True				
ANR	5667219	IdentifierDecl	spp = penum -> spp		5667178	0					
ANR	5667220	IdentifierDeclType	int		5667178	0					
ANR	5667221	Identifier	spp		5667178	1					
ANR	5667222	AssignmentExpression	spp = penum -> spp		5667178	2		=			
ANR	5667223	Identifier	spp		5667178	0					
ANR	5667224	PtrMemberAccess	penum -> spp		5667178	1					
ANR	5667225	Identifier	penum		5667178	0					
ANR	5667226	Identifier	spp		5667178	1					
ANR	5667227	IdentifierDeclStatement	const byte * psrc = buffer + data_x * spp ;	883:4:39456:39496	5667178	10	True				
ANR	5667228	IdentifierDecl	* psrc = buffer + data_x * spp		5667178	0					
ANR	5667229	IdentifierDeclType	const byte *		5667178	0					
ANR	5667230	Identifier	psrc		5667178	1					
ANR	5667231	AssignmentExpression	* psrc = buffer + data_x * spp		5667178	2		=			
ANR	5667232	Identifier	psrc		5667178	0					
ANR	5667233	AdditiveExpression	buffer + data_x * spp		5667178	1		+			
ANR	5667234	Identifier	buffer		5667178	0					
ANR	5667235	MultiplicativeExpression	data_x * spp		5667178	1		*			
ANR	5667236	Identifier	data_x		5667178	0					
ANR	5667237	Identifier	spp		5667178	1					
ANR	5667238	IdentifierDeclStatement	int irun ;	884:4:39502:39510	5667178	11	True				
ANR	5667239	IdentifierDecl	irun		5667178	0					
ANR	5667240	IdentifierDeclType	int		5667178	0					
ANR	5667241	Identifier	irun		5667178	1					
ANR	5667242	IdentifierDeclStatement	byte * bufend = NULL ;	885:4:39535:39554	5667178	12	True				
ANR	5667243	IdentifierDecl	* bufend = NULL		5667178	0					
ANR	5667244	IdentifierDeclType	byte *		5667178	0					
ANR	5667245	Identifier	bufend		5667178	1					
ANR	5667246	AssignmentExpression	* bufend = NULL		5667178	2		=			
ANR	5667247	Identifier	NULL		5667178	0					
ANR	5667248	Identifier	NULL		5667178	1					
ANR	5667249	IdentifierDeclStatement	int code = 0 ;	886:4:39560:39572	5667178	13	True				
ANR	5667250	IdentifierDecl	code = 0		5667178	0					
ANR	5667251	IdentifierDeclType	int		5667178	0					
ANR	5667252	Identifier	code		5667178	1					
ANR	5667253	AssignmentExpression	code = 0		5667178	2		=			
ANR	5667254	Identifier	code		5667178	0					
ANR	5667255	PrimaryExpression	0		5667178	1					
ANR	5667256	IdentifierDeclStatement	"byte * psrc_cm = NULL , * psrc_cm_start = NULL ;"	887:4:39578:39621	5667178	14	True				
ANR	5667257	IdentifierDecl	* psrc_cm = NULL		5667178	0					
ANR	5667258	IdentifierDeclType	byte *		5667178	0					
ANR	5667259	Identifier	psrc_cm		5667178	1					
ANR	5667260	AssignmentExpression	* psrc_cm = NULL		5667178	2		=			
ANR	5667261	Identifier	NULL		5667178	0					
ANR	5667262	Identifier	NULL		5667178	1					
ANR	5667263	IdentifierDecl	* psrc_cm_start = NULL		5667178	1					
ANR	5667264	IdentifierDeclType	byte *		5667178	0					
ANR	5667265	Identifier	psrc_cm_start		5667178	1					
ANR	5667266	AssignmentExpression	* psrc_cm_start = NULL		5667178	2		=			
ANR	5667267	Identifier	NULL		5667178	0					
ANR	5667268	Identifier	NULL		5667178	1					
ANR	5667269	IdentifierDeclStatement	byte * psrc_cm_initial ;	888:4:39627:39648	5667178	15	True				
ANR	5667270	IdentifierDecl	* psrc_cm_initial		5667178	0					
ANR	5667271	IdentifierDeclType	byte *		5667178	0					
ANR	5667272	Identifier	psrc_cm_initial		5667178	1					
ANR	5667273	IdentifierDeclStatement	byte * run ;	889:4:39654:39663	5667178	16	True				
ANR	5667274	IdentifierDecl	* run		5667178	0					
ANR	5667275	IdentifierDeclType	byte *		5667178	0					
ANR	5667276	Identifier	run		5667178	1					
ANR	5667277	IdentifierDeclStatement	int k ;	890:4:39669:39674	5667178	17	True				
ANR	5667278	IdentifierDecl	k		5667178	0					
ANR	5667279	IdentifierDeclType	int		5667178	0					
ANR	5667280	Identifier	k		5667178	1					
ANR	5667281	IdentifierDeclStatement	int spp_cm = 0 ;	891:4:39680:39694	5667178	18	True				
ANR	5667282	IdentifierDecl	spp_cm = 0		5667178	0					
ANR	5667283	IdentifierDeclType	int		5667178	0					
ANR	5667284	Identifier	spp_cm		5667178	1					
ANR	5667285	AssignmentExpression	spp_cm = 0		5667178	2		=			
ANR	5667286	Identifier	spp_cm		5667178	0					
ANR	5667287	PrimaryExpression	0		5667178	1					
ANR	5667288	IdentifierDeclStatement	bool must_halftone = penum -> icc_setup . must_halftone ;	892:4:39700:39751	5667178	19	True				
ANR	5667289	IdentifierDecl	must_halftone = penum -> icc_setup . must_halftone		5667178	0					
ANR	5667290	IdentifierDeclType	bool		5667178	0					
ANR	5667291	Identifier	must_halftone		5667178	1					
ANR	5667292	AssignmentExpression	must_halftone = penum -> icc_setup . must_halftone		5667178	2		=			
ANR	5667293	Identifier	must_halftone		5667178	0					
ANR	5667294	MemberAccess	penum -> icc_setup . must_halftone		5667178	1					
ANR	5667295	PtrMemberAccess	penum -> icc_setup		5667178	0					
ANR	5667296	Identifier	penum		5667178	0					
ANR	5667297	Identifier	icc_setup		5667178	1					
ANR	5667298	Identifier	must_halftone		5667178	1					
ANR	5667299	IdentifierDeclStatement	bool has_transfer = penum -> icc_setup . has_transfer ;	893:4:39757:39806	5667178	20	True				
ANR	5667300	IdentifierDecl	has_transfer = penum -> icc_setup . has_transfer		5667178	0					
ANR	5667301	IdentifierDeclType	bool		5667178	0					
ANR	5667302	Identifier	has_transfer		5667178	1					
ANR	5667303	AssignmentExpression	has_transfer = penum -> icc_setup . has_transfer		5667178	2		=			
ANR	5667304	Identifier	has_transfer		5667178	0					
ANR	5667305	MemberAccess	penum -> icc_setup . has_transfer		5667178	1					
ANR	5667306	PtrMemberAccess	penum -> icc_setup		5667178	0					
ANR	5667307	Identifier	penum		5667178	0					
ANR	5667308	Identifier	icc_setup		5667178	1					
ANR	5667309	Identifier	has_transfer		5667178	1					
ANR	5667310	IdentifierDeclStatement	gx_cmapper_data data ;	894:4:39812:39832	5667178	21	True				
ANR	5667311	IdentifierDecl	data		5667178	0					
ANR	5667312	IdentifierDeclType	gx_cmapper_data		5667178	0					
ANR	5667313	Identifier	data		5667178	1					
ANR	5667314	IdentifierDeclStatement	"gx_cmapper_fn * mapper = gx_get_cmapper ( & data , pgs , dev , has_transfer , must_halftone , gs_color_select_source ) ;"	895:4:39838:39946	5667178	22	True				
ANR	5667315	IdentifierDecl	"* mapper = gx_get_cmapper ( & data , pgs , dev , has_transfer , must_halftone , gs_color_select_source )"		5667178	0					
ANR	5667316	IdentifierDeclType	gx_cmapper_fn *		5667178	0					
ANR	5667317	Identifier	mapper		5667178	1					
ANR	5667318	AssignmentExpression	"* mapper = gx_get_cmapper ( & data , pgs , dev , has_transfer , must_halftone , gs_color_select_source )"		5667178	2		=			
ANR	5667319	Identifier	mapper		5667178	0					
ANR	5667320	CallExpression	"gx_get_cmapper ( & data , pgs , dev , has_transfer , must_halftone , gs_color_select_source )"		5667178	1					
ANR	5667321	Callee	gx_get_cmapper		5667178	0					
ANR	5667322	Identifier	gx_get_cmapper		5667178	0					
ANR	5667323	ArgumentList	& data		5667178	1					
ANR	5667324	Argument	& data		5667178	0					
ANR	5667325	UnaryOperationExpression	& data		5667178	0					
ANR	5667326	UnaryOperator	&		5667178	0					
ANR	5667327	Identifier	data		5667178	1					
ANR	5667328	Argument	pgs		5667178	1					
ANR	5667329	Identifier	pgs		5667178	0					
ANR	5667330	Argument	dev		5667178	2					
ANR	5667331	Identifier	dev		5667178	0					
ANR	5667332	Argument	has_transfer		5667178	3					
ANR	5667333	Identifier	has_transfer		5667178	0					
ANR	5667334	Argument	must_halftone		5667178	4					
ANR	5667335	Identifier	must_halftone		5667178	0					
ANR	5667336	Argument	gs_color_select_source		5667178	5					
ANR	5667337	Identifier	gs_color_select_source		5667178	0					
ANR	5667338	IdentifierDeclStatement	gx_color_value * conc = & data . conc [ 0 ] ;	896:4:39952:39988	5667178	23	True				
ANR	5667339	IdentifierDecl	* conc = & data . conc [ 0 ]		5667178	0					
ANR	5667340	IdentifierDeclType	gx_color_value *		5667178	0					
ANR	5667341	Identifier	conc		5667178	1					
ANR	5667342	AssignmentExpression	* conc = & data . conc [ 0 ]		5667178	2		=			
ANR	5667343	Identifier	conc		5667178	0					
ANR	5667344	UnaryOperationExpression	& data . conc [ 0 ]		5667178	1					
ANR	5667345	UnaryOperator	&		5667178	0					
ANR	5667346	ArrayIndexing	data . conc [ 0 ]		5667178	1					
ANR	5667347	MemberAccess	data . conc		5667178	0					
ANR	5667348	Identifier	data		5667178	0					
ANR	5667349	Identifier	conc		5667178	1					
ANR	5667350	PrimaryExpression	0		5667178	1					
ANR	5667351	IfStatement	if ( h == 0 )		5667178	24					
ANR	5667352	Condition	h == 0	898:8:39999:40004	5667178	0	True				
ANR	5667353	EqualityExpression	h == 0		5667178	0		==			
ANR	5667354	Identifier	h		5667178	0					
ANR	5667355	PrimaryExpression	0		5667178	1					
ANR	5667356	ReturnStatement	return 0 ;	899:8:40015:40023	5667178	1	True				
ANR	5667357	PrimaryExpression	0		5667178	0					
ANR	5667358	ExpressionStatement	"code = image_color_icc_prep ( penum_orig , psrc , w , dev , & spp_cm , & psrc_cm , & psrc_cm_start , & bufend , false )"	900:4:40029:40165	5667178	25	True				
ANR	5667359	AssignmentExpression	"code = image_color_icc_prep ( penum_orig , psrc , w , dev , & spp_cm , & psrc_cm , & psrc_cm_start , & bufend , false )"		5667178	0		=			
ANR	5667360	Identifier	code		5667178	0					
ANR	5667361	CallExpression	"image_color_icc_prep ( penum_orig , psrc , w , dev , & spp_cm , & psrc_cm , & psrc_cm_start , & bufend , false )"		5667178	1					
ANR	5667362	Callee	image_color_icc_prep		5667178	0					
ANR	5667363	Identifier	image_color_icc_prep		5667178	0					
ANR	5667364	ArgumentList	penum_orig		5667178	1					
ANR	5667365	Argument	penum_orig		5667178	0					
ANR	5667366	Identifier	penum_orig		5667178	0					
ANR	5667367	Argument	psrc		5667178	1					
ANR	5667368	Identifier	psrc		5667178	0					
ANR	5667369	Argument	w		5667178	2					
ANR	5667370	Identifier	w		5667178	0					
ANR	5667371	Argument	dev		5667178	3					
ANR	5667372	Identifier	dev		5667178	0					
ANR	5667373	Argument	& spp_cm		5667178	4					
ANR	5667374	UnaryOperationExpression	& spp_cm		5667178	0					
ANR	5667375	UnaryOperator	&		5667178	0					
ANR	5667376	Identifier	spp_cm		5667178	1					
ANR	5667377	Argument	& psrc_cm		5667178	5					
ANR	5667378	UnaryOperationExpression	& psrc_cm		5667178	0					
ANR	5667379	UnaryOperator	&		5667178	0					
ANR	5667380	Identifier	psrc_cm		5667178	1					
ANR	5667381	Argument	& psrc_cm_start		5667178	6					
ANR	5667382	UnaryOperationExpression	& psrc_cm_start		5667178	0					
ANR	5667383	UnaryOperator	&		5667178	0					
ANR	5667384	Identifier	psrc_cm_start		5667178	1					
ANR	5667385	Argument	& bufend		5667178	7					
ANR	5667386	UnaryOperationExpression	& bufend		5667178	0					
ANR	5667387	UnaryOperator	&		5667178	0					
ANR	5667388	Identifier	bufend		5667178	1					
ANR	5667389	Argument	false		5667178	8					
ANR	5667390	Identifier	false		5667178	0					
ANR	5667391	IfStatement	if ( code < 0 )		5667178	26					
ANR	5667392	Condition	code < 0	902:8:40175:40182	5667178	0	True				
ANR	5667393	RelationalExpression	code < 0		5667178	0		<			
ANR	5667394	Identifier	code		5667178	0					
ANR	5667395	PrimaryExpression	0		5667178	1					
ANR	5667396	ReturnStatement	return code ;	902:18:40185:40196	5667178	1	True				
ANR	5667397	Identifier	code		5667178	0					
ANR	5667398	ExpressionStatement	psrc_cm_initial = psrc_cm	903:4:40202:40227	5667178	27	True				
ANR	5667399	AssignmentExpression	psrc_cm_initial = psrc_cm		5667178	0		=			
ANR	5667400	Identifier	psrc_cm_initial		5667178	0					
ANR	5667401	Identifier	psrc_cm		5667178	1					
ANR	5667402	ExpressionStatement	pnext = penum -> dda . pixel0	905:4:40263:40288	5667178	28	True				
ANR	5667403	AssignmentExpression	pnext = penum -> dda . pixel0		5667178	0		=			
ANR	5667404	Identifier	pnext		5667178	0					
ANR	5667405	MemberAccess	penum -> dda . pixel0		5667178	1					
ANR	5667406	PtrMemberAccess	penum -> dda		5667178	0					
ANR	5667407	Identifier	penum		5667178	0					
ANR	5667408	Identifier	dda		5667178	1					
ANR	5667409	Identifier	pixel0		5667178	1					
ANR	5667410	ExpressionStatement	"dda_translate ( pnext . x , ( - fixed_epsilon ) )"	906:4:40294:40335	5667178	29	True				
ANR	5667411	CallExpression	"dda_translate ( pnext . x , ( - fixed_epsilon ) )"		5667178	0					
ANR	5667412	Callee	dda_translate		5667178	0					
ANR	5667413	Identifier	dda_translate		5667178	0					
ANR	5667414	ArgumentList	pnext . x		5667178	1					
ANR	5667415	Argument	pnext . x		5667178	0					
ANR	5667416	MemberAccess	pnext . x		5667178	0					
ANR	5667417	Identifier	pnext		5667178	0					
ANR	5667418	Identifier	x		5667178	1					
ANR	5667419	Argument	- fixed_epsilon		5667178	1					
ANR	5667420	UnaryOperationExpression	- fixed_epsilon		5667178	0					
ANR	5667421	UnaryOperator	-		5667178	0					
ANR	5667422	Identifier	fixed_epsilon		5667178	1					
ANR	5667423	ExpressionStatement	irun = fixed2int_var_rounded ( dda_current ( pnext . x ) )	907:4:40341:40391	5667178	30	True				
ANR	5667424	AssignmentExpression	irun = fixed2int_var_rounded ( dda_current ( pnext . x ) )		5667178	0		=			
ANR	5667425	Identifier	irun		5667178	0					
ANR	5667426	CallExpression	fixed2int_var_rounded ( dda_current ( pnext . x ) )		5667178	1					
ANR	5667427	Callee	fixed2int_var_rounded		5667178	0					
ANR	5667428	Identifier	fixed2int_var_rounded		5667178	0					
ANR	5667429	ArgumentList	dda_current ( pnext . x )		5667178	1					
ANR	5667430	Argument	dda_current ( pnext . x )		5667178	0					
ANR	5667431	CallExpression	dda_current ( pnext . x )		5667178	0					
ANR	5667432	Callee	dda_current		5667178	0					
ANR	5667433	Identifier	dda_current		5667178	0					
ANR	5667434	ArgumentList	pnext . x		5667178	1					
ANR	5667435	Argument	pnext . x		5667178	0					
ANR	5667436	MemberAccess	pnext . x		5667178	0					
ANR	5667437	Identifier	pnext		5667178	0					
ANR	5667438	Identifier	x		5667178	1					
ANR	5667439	ExpressionStatement	"vci = penum -> yci , vdi = penum -> hci"	908:4:40397:40431	5667178	31	True				
ANR	5667440	Expression	"vci = penum -> yci , vdi = penum -> hci"		5667178	0					
ANR	5667441	AssignmentExpression	vci = penum -> yci		5667178	0		=			
ANR	5667442	Identifier	vci		5667178	0					
ANR	5667443	PtrMemberAccess	penum -> yci		5667178	1					
ANR	5667444	Identifier	penum		5667178	0					
ANR	5667445	Identifier	yci		5667178	1					
ANR	5667446	AssignmentExpression	vdi = penum -> hci		5667178	1		=			
ANR	5667447	Identifier	vdi		5667178	0					
ANR	5667448	PtrMemberAccess	penum -> hci		5667178	1					
ANR	5667449	Identifier	penum		5667178	0					
ANR	5667450	Identifier	hci		5667178	1					
ANR	5667451	ExpressionStatement	"if_debug5m ( 'b' , penum -> memory , ""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"" , penum -> y , data_x , w , fixed2float ( dda_current ( pnext . x ) ) , fixed2float ( dda_current ( pnext . y ) ) )"	909:4:40437:40613	5667178	32	True				
ANR	5667452	CallExpression	"if_debug5m ( 'b' , penum -> memory , ""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"" , penum -> y , data_x , w , fixed2float ( dda_current ( pnext . x ) ) , fixed2float ( dda_current ( pnext . y ) ) )"		5667178	0					
ANR	5667453	Callee	if_debug5m		5667178	0					
ANR	5667454	Identifier	if_debug5m		5667178	0					
ANR	5667455	ArgumentList	'b'		5667178	1					
ANR	5667456	Argument	'b'		5667178	0					
ANR	5667457	PrimaryExpression	'b'		5667178	0					
ANR	5667458	Argument	penum -> memory		5667178	1					
ANR	5667459	PtrMemberAccess	penum -> memory		5667178	0					
ANR	5667460	Identifier	penum		5667178	0					
ANR	5667461	Identifier	memory		5667178	1					
ANR	5667462	Argument	"""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"""		5667178	2					
ANR	5667463	PrimaryExpression	"""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"""		5667178	0					
ANR	5667464	Argument	penum -> y		5667178	3					
ANR	5667465	PtrMemberAccess	penum -> y		5667178	0					
ANR	5667466	Identifier	penum		5667178	0					
ANR	5667467	Identifier	y		5667178	1					
ANR	5667468	Argument	data_x		5667178	4					
ANR	5667469	Identifier	data_x		5667178	0					
ANR	5667470	Argument	w		5667178	5					
ANR	5667471	Identifier	w		5667178	0					
ANR	5667472	Argument	fixed2float ( dda_current ( pnext . x ) )		5667178	6					
ANR	5667473	CallExpression	fixed2float ( dda_current ( pnext . x ) )		5667178	0					
ANR	5667474	Callee	fixed2float		5667178	0					
ANR	5667475	Identifier	fixed2float		5667178	0					
ANR	5667476	ArgumentList	dda_current ( pnext . x )		5667178	1					
ANR	5667477	Argument	dda_current ( pnext . x )		5667178	0					
ANR	5667478	CallExpression	dda_current ( pnext . x )		5667178	0					
ANR	5667479	Callee	dda_current		5667178	0					
ANR	5667480	Identifier	dda_current		5667178	0					
ANR	5667481	ArgumentList	pnext . x		5667178	1					
ANR	5667482	Argument	pnext . x		5667178	0					
ANR	5667483	MemberAccess	pnext . x		5667178	0					
ANR	5667484	Identifier	pnext		5667178	0					
ANR	5667485	Identifier	x		5667178	1					
ANR	5667486	Argument	fixed2float ( dda_current ( pnext . y ) )		5667178	7					
ANR	5667487	CallExpression	fixed2float ( dda_current ( pnext . y ) )		5667178	0					
ANR	5667488	Callee	fixed2float		5667178	0					
ANR	5667489	Identifier	fixed2float		5667178	0					
ANR	5667490	ArgumentList	dda_current ( pnext . y )		5667178	1					
ANR	5667491	Argument	dda_current ( pnext . y )		5667178	0					
ANR	5667492	CallExpression	dda_current ( pnext . y )		5667178	0					
ANR	5667493	Callee	dda_current		5667178	0					
ANR	5667494	Identifier	dda_current		5667178	0					
ANR	5667495	ArgumentList	pnext . y		5667178	1					
ANR	5667496	Argument	pnext . y		5667178	0					
ANR	5667497	MemberAccess	pnext . y		5667178	0					
ANR	5667498	Identifier	pnext		5667178	0					
ANR	5667499	Identifier	y		5667178	1					
ANR	5667500	WhileStatement	while ( psrc_cm < bufend )		5667178	33					
ANR	5667501	Condition	psrc_cm < bufend	911:11:40626:40641	5667178	0	True				
ANR	5667502	RelationalExpression	psrc_cm < bufend		5667178	0		<			
ANR	5667503	Identifier	psrc_cm		5667178	0					
ANR	5667504	Identifier	bufend		5667178	1					
ANR	5667505	CompoundStatement		36:29:1429:1429	5667178	1					
ANR	5667506	ExpressionStatement	run = psrc_cm + spp_cm	914:8:40803:40825	5667178	0	True				
ANR	5667507	AssignmentExpression	run = psrc_cm + spp_cm		5667178	0		=			
ANR	5667508	Identifier	run		5667178	0					
ANR	5667509	AdditiveExpression	psrc_cm + spp_cm		5667178	1		+			
ANR	5667510	Identifier	psrc_cm		5667178	0					
ANR	5667511	Identifier	spp_cm		5667178	1					
ANR	5667512	WhileStatement	while ( 1 )		5667178	1					
ANR	5667513	Condition	1	915:15:40842:40842	5667178	0	True				
ANR	5667514	PrimaryExpression	1		5667178	0					
ANR	5667515	CompoundStatement		41:8:1638:1638	5667178	1					
ANR	5667516	ExpressionStatement	dda_next ( pnext . x )	917:12:40867:40884	5667178	0	True				
ANR	5667517	CallExpression	dda_next ( pnext . x )		5667178	0					
ANR	5667518	Callee	dda_next		5667178	0					
ANR	5667519	Identifier	dda_next		5667178	0					
ANR	5667520	ArgumentList	pnext . x		5667178	1					
ANR	5667521	Argument	pnext . x		5667178	0					
ANR	5667522	MemberAccess	pnext . x		5667178	0					
ANR	5667523	Identifier	pnext		5667178	0					
ANR	5667524	Identifier	x		5667178	1					
ANR	5667525	IfStatement	if ( run >= bufend )		5667178	1					
ANR	5667526	Condition	run >= bufend	918:16:40902:40914	5667178	0	True				
ANR	5667527	RelationalExpression	run >= bufend		5667178	0		>=			
ANR	5667528	Identifier	run		5667178	0					
ANR	5667529	Identifier	bufend		5667178	1					
ANR	5667530	BreakStatement	break ;	919:16:40933:40938	5667178	1	True				
ANR	5667531	IfStatement	"if ( memcmp ( run , psrc_cm , spp_cm ) )"		5667178	2					
ANR	5667532	Condition	"memcmp ( run , psrc_cm , spp_cm )"	920:16:40956:40983	5667178	0	True				
ANR	5667533	CallExpression	"memcmp ( run , psrc_cm , spp_cm )"		5667178	0					
ANR	5667534	Callee	memcmp		5667178	0					
ANR	5667535	Identifier	memcmp		5667178	0					
ANR	5667536	ArgumentList	run		5667178	1					
ANR	5667537	Argument	run		5667178	0					
ANR	5667538	Identifier	run		5667178	0					
ANR	5667539	Argument	psrc_cm		5667178	1					
ANR	5667540	Identifier	psrc_cm		5667178	0					
ANR	5667541	Argument	spp_cm		5667178	2					
ANR	5667542	Identifier	spp_cm		5667178	0					
ANR	5667543	BreakStatement	break ;	921:16:41002:41007	5667178	1	True				
ANR	5667544	ExpressionStatement	run += spp_cm	922:12:41021:41034	5667178	3	True				
ANR	5667545	AssignmentExpression	run += spp_cm		5667178	0		+=			
ANR	5667546	Identifier	run		5667178	0					
ANR	5667547	Identifier	spp_cm		5667178	1					
ANR	5667548	ForStatement	for ( k = 0 ; k < spp_cm ; k ++ )		5667178	2					
ANR	5667549	ForInit	k = 0 ;	926:13:41182:41187	5667178	0	True				
ANR	5667550	AssignmentExpression	k = 0		5667178	0		=			
ANR	5667551	Identifier	k		5667178	0					
ANR	5667552	PrimaryExpression	0		5667178	1					
ANR	5667553	Condition	k < spp_cm	926:20:41189:41198	5667178	1	True				
ANR	5667554	RelationalExpression	k < spp_cm		5667178	0		<			
ANR	5667555	Identifier	k		5667178	0					
ANR	5667556	Identifier	spp_cm		5667178	1					
ANR	5667557	PostIncDecOperationExpression	k ++	926:32:41201:41203	5667178	2	True				
ANR	5667558	Identifier	k		5667178	0					
ANR	5667559	IncDec	++		5667178	1					
ANR	5667560	CompoundStatement		51:37:1991:1991	5667178	3					
ANR	5667561	ExpressionStatement	conc [ k ] = gx_color_value_from_byte ( psrc_cm [ k ] )	927:12:41220:41266	5667178	0	True				
ANR	5667562	AssignmentExpression	conc [ k ] = gx_color_value_from_byte ( psrc_cm [ k ] )		5667178	0		=			
ANR	5667563	ArrayIndexing	conc [ k ]		5667178	0					
ANR	5667564	Identifier	conc		5667178	0					
ANR	5667565	Identifier	k		5667178	1					
ANR	5667566	CallExpression	gx_color_value_from_byte ( psrc_cm [ k ] )		5667178	1					
ANR	5667567	Callee	gx_color_value_from_byte		5667178	0					
ANR	5667568	Identifier	gx_color_value_from_byte		5667178	0					
ANR	5667569	ArgumentList	psrc_cm [ k ]		5667178	1					
ANR	5667570	Argument	psrc_cm [ k ]		5667178	0					
ANR	5667571	ArrayIndexing	psrc_cm [ k ]		5667178	0					
ANR	5667572	Identifier	psrc_cm		5667178	0					
ANR	5667573	Identifier	k		5667178	1					
ANR	5667574	ExpressionStatement	mapper ( & data )	929:8:41286:41299	5667178	3	True				
ANR	5667575	CallExpression	mapper ( & data )		5667178	0					
ANR	5667576	Callee	mapper		5667178	0					
ANR	5667577	Identifier	mapper		5667178	0					
ANR	5667578	ArgumentList	& data		5667178	1					
ANR	5667579	Argument	& data		5667178	0					
ANR	5667580	UnaryOperationExpression	& data		5667178	0					
ANR	5667581	UnaryOperator	&		5667178	0					
ANR	5667582	Identifier	data		5667178	1					
ANR	5667583	CompoundStatement		58:12:2213:2279	5667178	4					
ANR	5667584	IdentifierDeclStatement	int xi = irun ;	932:12:41401:41414	5667178	0	True				
ANR	5667585	IdentifierDecl	xi = irun		5667178	0					
ANR	5667586	IdentifierDeclType	int		5667178	0					
ANR	5667587	Identifier	xi		5667178	1					
ANR	5667588	AssignmentExpression	xi = irun		5667178	2		=			
ANR	5667589	Identifier	irun		5667178	0					
ANR	5667590	Identifier	irun		5667178	1					
ANR	5667591	IdentifierDeclStatement	int wi = ( irun = fixed2int_var_rounded ( dda_current ( pnext . x ) ) ) - xi ;	933:12:41428:41494	5667178	1	True				
ANR	5667592	IdentifierDecl	wi = ( irun = fixed2int_var_rounded ( dda_current ( pnext . x ) ) ) - xi		5667178	0					
ANR	5667593	IdentifierDeclType	int		5667178	0					
ANR	5667594	Identifier	wi		5667178	1					
ANR	5667595	AssignmentExpression	wi = ( irun = fixed2int_var_rounded ( dda_current ( pnext . x ) ) ) - xi		5667178	2		=			
ANR	5667596	Identifier	wi		5667178	0					
ANR	5667597	AdditiveExpression	( irun = fixed2int_var_rounded ( dda_current ( pnext . x ) ) ) - xi		5667178	1		-			
ANR	5667598	AssignmentExpression	irun = fixed2int_var_rounded ( dda_current ( pnext . x ) )		5667178	0		=			
ANR	5667599	Identifier	irun		5667178	0					
ANR	5667600	CallExpression	fixed2int_var_rounded ( dda_current ( pnext . x ) )		5667178	1					
ANR	5667601	Callee	fixed2int_var_rounded		5667178	0					
ANR	5667602	Identifier	fixed2int_var_rounded		5667178	0					
ANR	5667603	ArgumentList	dda_current ( pnext . x )		5667178	1					
ANR	5667604	Argument	dda_current ( pnext . x )		5667178	0					
ANR	5667605	CallExpression	dda_current ( pnext . x )		5667178	0					
ANR	5667606	Callee	dda_current		5667178	0					
ANR	5667607	Identifier	dda_current		5667178	0					
ANR	5667608	ArgumentList	pnext . x		5667178	1					
ANR	5667609	Argument	pnext . x		5667178	0					
ANR	5667610	MemberAccess	pnext . x		5667178	0					
ANR	5667611	Identifier	pnext		5667178	0					
ANR	5667612	Identifier	x		5667178	1					
ANR	5667613	Identifier	xi		5667178	1					
ANR	5667614	IfStatement	if ( wi < 0 )		5667178	2					
ANR	5667615	Condition	wi < 0	935:16:41513:41518	5667178	0	True				
ANR	5667616	RelationalExpression	wi < 0		5667178	0		<			
ANR	5667617	Identifier	wi		5667178	0					
ANR	5667618	PrimaryExpression	0		5667178	1					
ANR	5667619	ExpressionStatement	"xi += wi , wi = - wi"	936:16:41537:41555	5667178	1	True				
ANR	5667620	Expression	"xi += wi , wi = - wi"		5667178	0					
ANR	5667621	AssignmentExpression	xi += wi		5667178	0		+=			
ANR	5667622	Identifier	xi		5667178	0					
ANR	5667623	Identifier	wi		5667178	1					
ANR	5667624	AssignmentExpression	wi = - wi		5667178	1		=			
ANR	5667625	Identifier	wi		5667178	0					
ANR	5667626	UnaryOperationExpression	- wi		5667178	1					
ANR	5667627	UnaryOperator	-		5667178	0					
ANR	5667628	Identifier	wi		5667178	1					
ANR	5667629	IfStatement	if ( wi > 0 )		5667178	3					
ANR	5667630	Condition	wi > 0	937:16:41573:41578	5667178	0	True				
ANR	5667631	RelationalExpression	wi > 0		5667178	0		>			
ANR	5667632	Identifier	wi		5667178	0					
ANR	5667633	PrimaryExpression	0		5667178	1					
ANR	5667634	ExpressionStatement	"code = gx_fill_rectangle_device_rop ( xi , vci , wi , vdi , & data . devc , dev , lop )"	938:16:41597:41724	5667178	1	True				
ANR	5667635	AssignmentExpression	"code = gx_fill_rectangle_device_rop ( xi , vci , wi , vdi , & data . devc , dev , lop )"		5667178	0		=			
ANR	5667636	Identifier	code		5667178	0					
ANR	5667637	CallExpression	"gx_fill_rectangle_device_rop ( xi , vci , wi , vdi , & data . devc , dev , lop )"		5667178	1					
ANR	5667638	Callee	gx_fill_rectangle_device_rop		5667178	0					
ANR	5667639	Identifier	gx_fill_rectangle_device_rop		5667178	0					
ANR	5667640	ArgumentList	xi		5667178	1					
ANR	5667641	Argument	xi		5667178	0					
ANR	5667642	Identifier	xi		5667178	0					
ANR	5667643	Argument	vci		5667178	1					
ANR	5667644	Identifier	vci		5667178	0					
ANR	5667645	Argument	wi		5667178	2					
ANR	5667646	Identifier	wi		5667178	0					
ANR	5667647	Argument	vdi		5667178	3					
ANR	5667648	Identifier	vdi		5667178	0					
ANR	5667649	Argument	& data . devc		5667178	4					
ANR	5667650	UnaryOperationExpression	& data . devc		5667178	0					
ANR	5667651	UnaryOperator	&		5667178	0					
ANR	5667652	MemberAccess	data . devc		5667178	1					
ANR	5667653	Identifier	data		5667178	0					
ANR	5667654	Identifier	devc		5667178	1					
ANR	5667655	Argument	dev		5667178	5					
ANR	5667656	Identifier	dev		5667178	0					
ANR	5667657	Argument	lop		5667178	6					
ANR	5667658	Identifier	lop		5667178	0					
ANR	5667659	IfStatement	if ( code < 0 )		5667178	5					
ANR	5667660	Condition	code < 0	941:12:41748:41755	5667178	0	True				
ANR	5667661	RelationalExpression	code < 0		5667178	0		<			
ANR	5667662	Identifier	code		5667178	0					
ANR	5667663	PrimaryExpression	0		5667178	1					
ANR	5667664	GotoStatement	goto err ;	942:12:41770:41778	5667178	1	True				
ANR	5667665	Identifier	err		5667178	0					
ANR	5667666	ExpressionStatement	psrc_cm = run	943:8:41788:41801	5667178	6	True				
ANR	5667667	AssignmentExpression	psrc_cm = run		5667178	0		=			
ANR	5667668	Identifier	psrc_cm		5667178	0					
ANR	5667669	Identifier	run		5667178	1					
ANR	5667670	IfStatement	if ( psrc_cm_start != NULL )		5667178	34					
ANR	5667671	Condition	psrc_cm_start != NULL	946:8:41858:41878	5667178	0	True				
ANR	5667672	EqualityExpression	psrc_cm_start != NULL		5667178	0		!=			
ANR	5667673	Identifier	psrc_cm_start		5667178	0					
ANR	5667674	Identifier	NULL		5667178	1					
ANR	5667675	CompoundStatement		71:31:2666:2666	5667178	1					
ANR	5667676	ExpressionStatement	"gs_free_object ( pgs -> memory , ( byte * ) psrc_cm_start , ""image_render_color_icc"" )"	947:8:41891:41967	5667178	0	True				
ANR	5667677	CallExpression	"gs_free_object ( pgs -> memory , ( byte * ) psrc_cm_start , ""image_render_color_icc"" )"		5667178	0					
ANR	5667678	Callee	gs_free_object		5667178	0					
ANR	5667679	Identifier	gs_free_object		5667178	0					
ANR	5667680	ArgumentList	pgs -> memory		5667178	1					
ANR	5667681	Argument	pgs -> memory		5667178	0					
ANR	5667682	PtrMemberAccess	pgs -> memory		5667178	0					
ANR	5667683	Identifier	pgs		5667178	0					
ANR	5667684	Identifier	memory		5667178	1					
ANR	5667685	Argument	( byte * ) psrc_cm_start		5667178	1					
ANR	5667686	CastExpression	( byte * ) psrc_cm_start		5667178	0					
ANR	5667687	CastTarget	byte *		5667178	0					
ANR	5667688	Identifier	psrc_cm_start		5667178	1					
ANR	5667689	Argument	"""image_render_color_icc"""		5667178	2					
ANR	5667690	PrimaryExpression	"""image_render_color_icc"""		5667178	0					
ANR	5667691	ReturnStatement	return ( code < 0 ? code : 1 ) ;	949:4:41979:42007	5667178	35	True				
ANR	5667692	ConditionalExpression	code < 0 ? code : 1		5667178	0					
ANR	5667693	Condition	code < 0		5667178	0					
ANR	5667694	RelationalExpression	code < 0		5667178	0		<			
ANR	5667695	Identifier	code		5667178	0					
ANR	5667696	PrimaryExpression	0		5667178	1					
ANR	5667697	Identifier	code		5667178	1					
ANR	5667698	PrimaryExpression	1		5667178	2					
ANR	5667699	Label	err :	951:0:42062:42065	5667178	36	True				
ANR	5667700	Identifier	err		5667178	0					
ANR	5667701	ExpressionStatement	"gs_free_object ( pgs -> memory , ( byte * ) psrc_cm_start , ""image_render_color_icc"" )"	952:4:42071:42147	5667178	37	True				
ANR	5667702	CallExpression	"gs_free_object ( pgs -> memory , ( byte * ) psrc_cm_start , ""image_render_color_icc"" )"		5667178	0					
ANR	5667703	Callee	gs_free_object		5667178	0					
ANR	5667704	Identifier	gs_free_object		5667178	0					
ANR	5667705	ArgumentList	pgs -> memory		5667178	1					
ANR	5667706	Argument	pgs -> memory		5667178	0					
ANR	5667707	PtrMemberAccess	pgs -> memory		5667178	0					
ANR	5667708	Identifier	pgs		5667178	0					
ANR	5667709	Identifier	memory		5667178	1					
ANR	5667710	Argument	( byte * ) psrc_cm_start		5667178	1					
ANR	5667711	CastExpression	( byte * ) psrc_cm_start		5667178	0					
ANR	5667712	CastTarget	byte *		5667178	0					
ANR	5667713	Identifier	psrc_cm_start		5667178	1					
ANR	5667714	Argument	"""image_render_color_icc"""		5667178	2					
ANR	5667715	PrimaryExpression	"""image_render_color_icc"""		5667178	0					
ANR	5667716	ExpressionStatement	penum_orig -> used . x = ( run - psrc_cm_initial ) / spp_cm	953:4:42153:42206	5667178	38	True				
ANR	5667717	AssignmentExpression	penum_orig -> used . x = ( run - psrc_cm_initial ) / spp_cm		5667178	0		=			
ANR	5667718	MemberAccess	penum_orig -> used . x		5667178	0					
ANR	5667719	PtrMemberAccess	penum_orig -> used		5667178	0					
ANR	5667720	Identifier	penum_orig		5667178	0					
ANR	5667721	Identifier	used		5667178	1					
ANR	5667722	Identifier	x		5667178	1					
ANR	5667723	MultiplicativeExpression	( run - psrc_cm_initial ) / spp_cm		5667178	1		/			
ANR	5667724	AdditiveExpression	run - psrc_cm_initial		5667178	0		-			
ANR	5667725	Identifier	run		5667178	0					
ANR	5667726	Identifier	psrc_cm_initial		5667178	1					
ANR	5667727	Identifier	spp_cm		5667178	1					
ANR	5667728	ExpressionStatement	penum_orig -> used . y = 0	954:4:42212:42234	5667178	39	True				
ANR	5667729	AssignmentExpression	penum_orig -> used . y = 0		5667178	0		=			
ANR	5667730	MemberAccess	penum_orig -> used . y		5667178	0					
ANR	5667731	PtrMemberAccess	penum_orig -> used		5667178	0					
ANR	5667732	Identifier	penum_orig		5667178	0					
ANR	5667733	Identifier	used		5667178	1					
ANR	5667734	Identifier	y		5667178	1					
ANR	5667735	PrimaryExpression	0		5667178	1					
ANR	5667736	ReturnStatement	return code ;	955:4:42240:42251	5667178	40	True				
ANR	5667737	Identifier	code		5667178	0					
ANR	5667738	ReturnType	static int		5667178	1					
ANR	5667739	Identifier	image_render_color_icc_portrait		5667178	2					
ANR	5667740	ParameterList	"gx_image_enum * penum_orig , const byte * buffer , int data_x , uint w , int h , gx_device * dev"		5667178	3					
ANR	5667741	Parameter	gx_image_enum * penum_orig	874:32:39091:39115	5667178	0	True				
ANR	5667742	ParameterType	gx_image_enum *		5667178	0					
ANR	5667743	Identifier	penum_orig		5667178	1					
ANR	5667744	Parameter	const byte * buffer	874:59:39118:39135	5667178	1	True				
ANR	5667745	ParameterType	const byte *		5667178	0					
ANR	5667746	Identifier	buffer		5667178	1					
ANR	5667747	Parameter	int data_x	874:79:39138:39147	5667178	2	True				
ANR	5667748	ParameterType	int		5667178	0					
ANR	5667749	Identifier	data_x		5667178	1					
ANR	5667750	Parameter	uint w	875:32:39182:39187	5667178	3	True				
ANR	5667751	ParameterType	uint		5667178	0					
ANR	5667752	Identifier	w		5667178	1					
ANR	5667753	Parameter	int h	875:40:39190:39194	5667178	4	True				
ANR	5667754	ParameterType	int		5667178	0					
ANR	5667755	Identifier	h		5667178	1					
ANR	5667756	Parameter	gx_device * dev	875:47:39197:39211	5667178	5	True				
ANR	5667757	ParameterType	gx_device *		5667178	0					
ANR	5667758	Identifier	dev		5667178	1					
ANR	5667759	CFGEntryNode	ENTRY		5667178		True				
ANR	5667760	CFGExitNode	EXIT		5667178		True				
ANR	5667761	Symbol	& data . devc		5667178						
ANR	5667762	Symbol	penum -> dda . pixel0		5667178						
ANR	5667763	Symbol	data		5667178						
ANR	5667764	Symbol	gs_color_select_source		5667178						
ANR	5667765	Symbol	* pgs		5667178						
ANR	5667766	Symbol	run		5667178						
ANR	5667767	Symbol	penum -> yci		5667178						
ANR	5667768	Symbol	conc		5667178						
ANR	5667769	Symbol	data_x		5667178						
ANR	5667770	Symbol	penum -> icc_setup . has_transfer		5667178						
ANR	5667771	Symbol	memcmp		5667178						
ANR	5667772	Symbol	dev		5667178						
ANR	5667773	Symbol	gx_get_cmapper		5667178						
ANR	5667774	Symbol	buffer		5667178						
ANR	5667775	Symbol	fixed_epsilon		5667178						
ANR	5667776	Symbol	& psrc_cm		5667178						
ANR	5667777	Symbol	NULL		5667178						
ANR	5667778	Symbol	must_halftone		5667178						
ANR	5667779	Symbol	gx_color_value_from_byte		5667178						
ANR	5667780	Symbol	penum		5667178						
ANR	5667781	Symbol	gx_fill_rectangle_device_rop		5667178						
ANR	5667782	Symbol	& data		5667178						
ANR	5667783	Symbol	spp		5667178						
ANR	5667784	Symbol	penum -> dda		5667178						
ANR	5667785	Symbol	irun		5667178						
ANR	5667786	Symbol	penum -> icc_setup . must_halftone		5667178						
ANR	5667787	Symbol	dda_current		5667178						
ANR	5667788	Symbol	data . conc		5667178						
ANR	5667789	Symbol	pnext		5667178						
ANR	5667790	Symbol	psrc_cm_start		5667178						
ANR	5667791	Symbol	penum_orig -> used		5667178						
ANR	5667792	Symbol	psrc		5667178						
ANR	5667793	Symbol	* penum		5667178						
ANR	5667794	Symbol	code		5667178						
ANR	5667795	Symbol	* penum_orig		5667178						
ANR	5667796	Symbol	penum -> memory		5667178						
ANR	5667797	Symbol	penum_orig		5667178						
ANR	5667798	Symbol	mapper		5667178						
ANR	5667799	Symbol	* conc		5667178						
ANR	5667800	Symbol	lop		5667178						
ANR	5667801	Symbol	& bufend		5667178						
ANR	5667802	Symbol	fixed2int_var_rounded		5667178						
ANR	5667803	Symbol	penum -> pgs		5667178						
ANR	5667804	Symbol	penum -> icc_setup		5667178						
ANR	5667805	Symbol	wi		5667178						
ANR	5667806	Symbol	bufend		5667178						
ANR	5667807	Symbol	* psrc_cm		5667178						
ANR	5667808	Symbol	pgs		5667178						
ANR	5667809	Symbol	vci		5667178						
ANR	5667810	Symbol	penum -> hci		5667178						
ANR	5667811	Symbol	pgs -> memory		5667178						
ANR	5667812	Symbol	psrc_cm_initial		5667178						
ANR	5667813	Symbol	penum -> spp		5667178						
ANR	5667814	Symbol	& spp_cm		5667178						
ANR	5667815	Symbol	fixed2float		5667178						
ANR	5667816	Symbol	penum -> log_op		5667178						
ANR	5667817	Symbol	h		5667178						
ANR	5667818	Symbol	false		5667178						
ANR	5667819	Symbol	k		5667178						
ANR	5667820	Symbol	penum_orig -> used . x		5667178						
ANR	5667821	Symbol	spp_cm		5667178						
ANR	5667822	Symbol	penum -> y		5667178						
ANR	5667823	Symbol	& psrc_cm_start		5667178						
ANR	5667824	Symbol	penum_orig -> used . y		5667178						
ANR	5667825	Symbol	xi		5667178						
ANR	5667826	Symbol	image_color_icc_prep		5667178						
ANR	5667827	Symbol	pnext . y		5667178						
ANR	5667828	Symbol	* k		5667178						
ANR	5667829	Symbol	w		5667178						
ANR	5667830	Symbol	pnext . x		5667178						
ANR	5667831	Symbol	psrc_cm		5667178						
ANR	5667832	Symbol	vdi		5667178						
ANR	5667833	Symbol	has_transfer		5667178						
ANR	5667834	Function	image_render_color_icc_landscape	958:0:42256:45498							
ANR	5667835	FunctionDef	"image_render_color_icc_landscape (gx_image_enum * penum_orig , const byte * buffer , int data_x , uint w , int h , gx_device * dev)"		5667834	0					
ANR	5667836	CompoundStatement		961:0:42424:45498	5667834	0					
ANR	5667837	Statement	const	962:4:42430:42434	5667834	0	True				
ANR	5667838	Statement	gx_image_enum	962:10:42436:42448	5667834	1	True				
ANR	5667839	Statement	*	962:24:42450:42450	5667834	2	True				
ANR	5667840	Statement	const	962:25:42451:42455	5667834	3	True				
ANR	5667841	ExpressionStatement	penum = penum_orig	962:31:42457:42475	5667834	4	True				
ANR	5667842	AssignmentExpression	penum = penum_orig		5667834	0		=			
ANR	5667843	Identifier	penum		5667834	0					
ANR	5667844	Identifier	penum_orig		5667834	1					
ANR	5667845	IdentifierDeclStatement	const gs_gstate * pgs = penum -> pgs ;	963:4:42505:42538	5667834	5	True				
ANR	5667846	IdentifierDecl	* pgs = penum -> pgs		5667834	0					
ANR	5667847	IdentifierDeclType	const gs_gstate *		5667834	0					
ANR	5667848	Identifier	pgs		5667834	1					
ANR	5667849	AssignmentExpression	* pgs = penum -> pgs		5667834	2		=			
ANR	5667850	Identifier	pgs		5667834	0					
ANR	5667851	PtrMemberAccess	penum -> pgs		5667834	1					
ANR	5667852	Identifier	penum		5667834	0					
ANR	5667853	Identifier	pgs		5667834	1					
ANR	5667854	IdentifierDeclStatement	gs_logical_operation_t lop = penum -> log_op ;	964:4:42544:42586	5667834	6	True				
ANR	5667855	IdentifierDecl	lop = penum -> log_op		5667834	0					
ANR	5667856	IdentifierDeclType	gs_logical_operation_t		5667834	0					
ANR	5667857	Identifier	lop		5667834	1					
ANR	5667858	AssignmentExpression	lop = penum -> log_op		5667834	2		=			
ANR	5667859	Identifier	lop		5667834	0					
ANR	5667860	PtrMemberAccess	penum -> log_op		5667834	1					
ANR	5667861	Identifier	penum		5667834	0					
ANR	5667862	Identifier	log_op		5667834	1					
ANR	5667863	IdentifierDeclStatement	gx_dda_fixed_point pnext ;	965:4:42592:42616	5667834	7	True				
ANR	5667864	IdentifierDecl	pnext		5667834	0					
ANR	5667865	IdentifierDeclType	gx_dda_fixed_point		5667834	0					
ANR	5667866	Identifier	pnext		5667834	1					
ANR	5667867	IdentifierDeclStatement	"int vci , vdi ;"	966:4:42622:42634	5667834	8	True				
ANR	5667868	IdentifierDecl	vci		5667834	0					
ANR	5667869	IdentifierDeclType	int		5667834	0					
ANR	5667870	Identifier	vci		5667834	1					
ANR	5667871	IdentifierDecl	vdi		5667834	1					
ANR	5667872	IdentifierDeclType	int		5667834	0					
ANR	5667873	Identifier	vdi		5667834	1					
ANR	5667874	IdentifierDeclStatement	int spp = penum -> spp ;	967:4:42640:42660	5667834	9	True				
ANR	5667875	IdentifierDecl	spp = penum -> spp		5667834	0					
ANR	5667876	IdentifierDeclType	int		5667834	0					
ANR	5667877	Identifier	spp		5667834	1					
ANR	5667878	AssignmentExpression	spp = penum -> spp		5667834	2		=			
ANR	5667879	Identifier	spp		5667834	0					
ANR	5667880	PtrMemberAccess	penum -> spp		5667834	1					
ANR	5667881	Identifier	penum		5667834	0					
ANR	5667882	Identifier	spp		5667834	1					
ANR	5667883	IdentifierDeclStatement	const byte * psrc = buffer + data_x * spp ;	968:4:42666:42706	5667834	10	True				
ANR	5667884	IdentifierDecl	* psrc = buffer + data_x * spp		5667834	0					
ANR	5667885	IdentifierDeclType	const byte *		5667834	0					
ANR	5667886	Identifier	psrc		5667834	1					
ANR	5667887	AssignmentExpression	* psrc = buffer + data_x * spp		5667834	2		=			
ANR	5667888	Identifier	psrc		5667834	0					
ANR	5667889	AdditiveExpression	buffer + data_x * spp		5667834	1		+			
ANR	5667890	Identifier	buffer		5667834	0					
ANR	5667891	MultiplicativeExpression	data_x * spp		5667834	1		*			
ANR	5667892	Identifier	data_x		5667834	0					
ANR	5667893	Identifier	spp		5667834	1					
ANR	5667894	IdentifierDeclStatement	int irun ;	969:4:42712:42720	5667834	11	True				
ANR	5667895	IdentifierDecl	irun		5667834	0					
ANR	5667896	IdentifierDeclType	int		5667834	0					
ANR	5667897	Identifier	irun		5667834	1					
ANR	5667898	IdentifierDeclStatement	byte * bufend = NULL ;	970:4:42745:42764	5667834	12	True				
ANR	5667899	IdentifierDecl	* bufend = NULL		5667834	0					
ANR	5667900	IdentifierDeclType	byte *		5667834	0					
ANR	5667901	Identifier	bufend		5667834	1					
ANR	5667902	AssignmentExpression	* bufend = NULL		5667834	2		=			
ANR	5667903	Identifier	NULL		5667834	0					
ANR	5667904	Identifier	NULL		5667834	1					
ANR	5667905	IdentifierDeclStatement	int code = 0 ;	971:4:42770:42782	5667834	13	True				
ANR	5667906	IdentifierDecl	code = 0		5667834	0					
ANR	5667907	IdentifierDeclType	int		5667834	0					
ANR	5667908	Identifier	code		5667834	1					
ANR	5667909	AssignmentExpression	code = 0		5667834	2		=			
ANR	5667910	Identifier	code		5667834	0					
ANR	5667911	PrimaryExpression	0		5667834	1					
ANR	5667912	IdentifierDeclStatement	"byte * psrc_cm = NULL , * psrc_cm_start = NULL ;"	972:4:42788:42831	5667834	14	True				
ANR	5667913	IdentifierDecl	* psrc_cm = NULL		5667834	0					
ANR	5667914	IdentifierDeclType	byte *		5667834	0					
ANR	5667915	Identifier	psrc_cm		5667834	1					
ANR	5667916	AssignmentExpression	* psrc_cm = NULL		5667834	2		=			
ANR	5667917	Identifier	NULL		5667834	0					
ANR	5667918	Identifier	NULL		5667834	1					
ANR	5667919	IdentifierDecl	* psrc_cm_start = NULL		5667834	1					
ANR	5667920	IdentifierDeclType	byte *		5667834	0					
ANR	5667921	Identifier	psrc_cm_start		5667834	1					
ANR	5667922	AssignmentExpression	* psrc_cm_start = NULL		5667834	2		=			
ANR	5667923	Identifier	NULL		5667834	0					
ANR	5667924	Identifier	NULL		5667834	1					
ANR	5667925	IdentifierDeclStatement	byte * psrc_cm_initial ;	973:4:42837:42858	5667834	15	True				
ANR	5667926	IdentifierDecl	* psrc_cm_initial		5667834	0					
ANR	5667927	IdentifierDeclType	byte *		5667834	0					
ANR	5667928	Identifier	psrc_cm_initial		5667834	1					
ANR	5667929	IdentifierDeclStatement	byte * run ;	974:4:42864:42873	5667834	16	True				
ANR	5667930	IdentifierDecl	* run		5667834	0					
ANR	5667931	IdentifierDeclType	byte *		5667834	0					
ANR	5667932	Identifier	run		5667834	1					
ANR	5667933	IdentifierDeclStatement	int k ;	975:4:42879:42884	5667834	17	True				
ANR	5667934	IdentifierDecl	k		5667834	0					
ANR	5667935	IdentifierDeclType	int		5667834	0					
ANR	5667936	Identifier	k		5667834	1					
ANR	5667937	IdentifierDeclStatement	int spp_cm = 0 ;	976:4:42890:42904	5667834	18	True				
ANR	5667938	IdentifierDecl	spp_cm = 0		5667834	0					
ANR	5667939	IdentifierDeclType	int		5667834	0					
ANR	5667940	Identifier	spp_cm		5667834	1					
ANR	5667941	AssignmentExpression	spp_cm = 0		5667834	2		=			
ANR	5667942	Identifier	spp_cm		5667834	0					
ANR	5667943	PrimaryExpression	0		5667834	1					
ANR	5667944	IdentifierDeclStatement	bool must_halftone = penum -> icc_setup . must_halftone ;	977:4:42910:42961	5667834	19	True				
ANR	5667945	IdentifierDecl	must_halftone = penum -> icc_setup . must_halftone		5667834	0					
ANR	5667946	IdentifierDeclType	bool		5667834	0					
ANR	5667947	Identifier	must_halftone		5667834	1					
ANR	5667948	AssignmentExpression	must_halftone = penum -> icc_setup . must_halftone		5667834	2		=			
ANR	5667949	Identifier	must_halftone		5667834	0					
ANR	5667950	MemberAccess	penum -> icc_setup . must_halftone		5667834	1					
ANR	5667951	PtrMemberAccess	penum -> icc_setup		5667834	0					
ANR	5667952	Identifier	penum		5667834	0					
ANR	5667953	Identifier	icc_setup		5667834	1					
ANR	5667954	Identifier	must_halftone		5667834	1					
ANR	5667955	IdentifierDeclStatement	bool has_transfer = penum -> icc_setup . has_transfer ;	978:4:42967:43016	5667834	20	True				
ANR	5667956	IdentifierDecl	has_transfer = penum -> icc_setup . has_transfer		5667834	0					
ANR	5667957	IdentifierDeclType	bool		5667834	0					
ANR	5667958	Identifier	has_transfer		5667834	1					
ANR	5667959	AssignmentExpression	has_transfer = penum -> icc_setup . has_transfer		5667834	2		=			
ANR	5667960	Identifier	has_transfer		5667834	0					
ANR	5667961	MemberAccess	penum -> icc_setup . has_transfer		5667834	1					
ANR	5667962	PtrMemberAccess	penum -> icc_setup		5667834	0					
ANR	5667963	Identifier	penum		5667834	0					
ANR	5667964	Identifier	icc_setup		5667834	1					
ANR	5667965	Identifier	has_transfer		5667834	1					
ANR	5667966	IdentifierDeclStatement	gx_cmapper_data data ;	979:4:43022:43042	5667834	21	True				
ANR	5667967	IdentifierDecl	data		5667834	0					
ANR	5667968	IdentifierDeclType	gx_cmapper_data		5667834	0					
ANR	5667969	Identifier	data		5667834	1					
ANR	5667970	IdentifierDeclStatement	"gx_cmapper_fn * mapper = gx_get_cmapper ( & data , pgs , dev , has_transfer , must_halftone , gs_color_select_source ) ;"	980:4:43048:43156	5667834	22	True				
ANR	5667971	IdentifierDecl	"* mapper = gx_get_cmapper ( & data , pgs , dev , has_transfer , must_halftone , gs_color_select_source )"		5667834	0					
ANR	5667972	IdentifierDeclType	gx_cmapper_fn *		5667834	0					
ANR	5667973	Identifier	mapper		5667834	1					
ANR	5667974	AssignmentExpression	"* mapper = gx_get_cmapper ( & data , pgs , dev , has_transfer , must_halftone , gs_color_select_source )"		5667834	2		=			
ANR	5667975	Identifier	mapper		5667834	0					
ANR	5667976	CallExpression	"gx_get_cmapper ( & data , pgs , dev , has_transfer , must_halftone , gs_color_select_source )"		5667834	1					
ANR	5667977	Callee	gx_get_cmapper		5667834	0					
ANR	5667978	Identifier	gx_get_cmapper		5667834	0					
ANR	5667979	ArgumentList	& data		5667834	1					
ANR	5667980	Argument	& data		5667834	0					
ANR	5667981	UnaryOperationExpression	& data		5667834	0					
ANR	5667982	UnaryOperator	&		5667834	0					
ANR	5667983	Identifier	data		5667834	1					
ANR	5667984	Argument	pgs		5667834	1					
ANR	5667985	Identifier	pgs		5667834	0					
ANR	5667986	Argument	dev		5667834	2					
ANR	5667987	Identifier	dev		5667834	0					
ANR	5667988	Argument	has_transfer		5667834	3					
ANR	5667989	Identifier	has_transfer		5667834	0					
ANR	5667990	Argument	must_halftone		5667834	4					
ANR	5667991	Identifier	must_halftone		5667834	0					
ANR	5667992	Argument	gs_color_select_source		5667834	5					
ANR	5667993	Identifier	gs_color_select_source		5667834	0					
ANR	5667994	IdentifierDeclStatement	gx_color_value * conc = & data . conc [ 0 ] ;	981:4:43162:43198	5667834	23	True				
ANR	5667995	IdentifierDecl	* conc = & data . conc [ 0 ]		5667834	0					
ANR	5667996	IdentifierDeclType	gx_color_value *		5667834	0					
ANR	5667997	Identifier	conc		5667834	1					
ANR	5667998	AssignmentExpression	* conc = & data . conc [ 0 ]		5667834	2		=			
ANR	5667999	Identifier	conc		5667834	0					
ANR	5668000	UnaryOperationExpression	& data . conc [ 0 ]		5667834	1					
ANR	5668001	UnaryOperator	&		5667834	0					
ANR	5668002	ArrayIndexing	data . conc [ 0 ]		5667834	1					
ANR	5668003	MemberAccess	data . conc		5667834	0					
ANR	5668004	Identifier	data		5667834	0					
ANR	5668005	Identifier	conc		5667834	1					
ANR	5668006	PrimaryExpression	0		5667834	1					
ANR	5668007	IfStatement	if ( h == 0 )		5667834	24					
ANR	5668008	Condition	h == 0	983:8:43209:43214	5667834	0	True				
ANR	5668009	EqualityExpression	h == 0		5667834	0		==			
ANR	5668010	Identifier	h		5667834	0					
ANR	5668011	PrimaryExpression	0		5667834	1					
ANR	5668012	ReturnStatement	return 0 ;	984:8:43225:43233	5667834	1	True				
ANR	5668013	PrimaryExpression	0		5667834	0					
ANR	5668014	ExpressionStatement	"code = image_color_icc_prep ( penum_orig , psrc , w , dev , & spp_cm , & psrc_cm , & psrc_cm_start , & bufend , false )"	985:4:43239:43375	5667834	25	True				
ANR	5668015	AssignmentExpression	"code = image_color_icc_prep ( penum_orig , psrc , w , dev , & spp_cm , & psrc_cm , & psrc_cm_start , & bufend , false )"		5667834	0		=			
ANR	5668016	Identifier	code		5667834	0					
ANR	5668017	CallExpression	"image_color_icc_prep ( penum_orig , psrc , w , dev , & spp_cm , & psrc_cm , & psrc_cm_start , & bufend , false )"		5667834	1					
ANR	5668018	Callee	image_color_icc_prep		5667834	0					
ANR	5668019	Identifier	image_color_icc_prep		5667834	0					
ANR	5668020	ArgumentList	penum_orig		5667834	1					
ANR	5668021	Argument	penum_orig		5667834	0					
ANR	5668022	Identifier	penum_orig		5667834	0					
ANR	5668023	Argument	psrc		5667834	1					
ANR	5668024	Identifier	psrc		5667834	0					
ANR	5668025	Argument	w		5667834	2					
ANR	5668026	Identifier	w		5667834	0					
ANR	5668027	Argument	dev		5667834	3					
ANR	5668028	Identifier	dev		5667834	0					
ANR	5668029	Argument	& spp_cm		5667834	4					
ANR	5668030	UnaryOperationExpression	& spp_cm		5667834	0					
ANR	5668031	UnaryOperator	&		5667834	0					
ANR	5668032	Identifier	spp_cm		5667834	1					
ANR	5668033	Argument	& psrc_cm		5667834	5					
ANR	5668034	UnaryOperationExpression	& psrc_cm		5667834	0					
ANR	5668035	UnaryOperator	&		5667834	0					
ANR	5668036	Identifier	psrc_cm		5667834	1					
ANR	5668037	Argument	& psrc_cm_start		5667834	6					
ANR	5668038	UnaryOperationExpression	& psrc_cm_start		5667834	0					
ANR	5668039	UnaryOperator	&		5667834	0					
ANR	5668040	Identifier	psrc_cm_start		5667834	1					
ANR	5668041	Argument	& bufend		5667834	7					
ANR	5668042	UnaryOperationExpression	& bufend		5667834	0					
ANR	5668043	UnaryOperator	&		5667834	0					
ANR	5668044	Identifier	bufend		5667834	1					
ANR	5668045	Argument	false		5667834	8					
ANR	5668046	Identifier	false		5667834	0					
ANR	5668047	IfStatement	if ( code < 0 )		5667834	26					
ANR	5668048	Condition	code < 0	987:8:43385:43392	5667834	0	True				
ANR	5668049	RelationalExpression	code < 0		5667834	0		<			
ANR	5668050	Identifier	code		5667834	0					
ANR	5668051	PrimaryExpression	0		5667834	1					
ANR	5668052	ReturnStatement	return code ;	987:18:43395:43406	5667834	1	True				
ANR	5668053	Identifier	code		5667834	0					
ANR	5668054	ExpressionStatement	psrc_cm_initial = psrc_cm	988:4:43412:43437	5667834	27	True				
ANR	5668055	AssignmentExpression	psrc_cm_initial = psrc_cm		5667834	0		=			
ANR	5668056	Identifier	psrc_cm_initial		5667834	0					
ANR	5668057	Identifier	psrc_cm		5667834	1					
ANR	5668058	ExpressionStatement	pnext = penum -> dda . pixel0	990:4:43473:43498	5667834	28	True				
ANR	5668059	AssignmentExpression	pnext = penum -> dda . pixel0		5667834	0		=			
ANR	5668060	Identifier	pnext		5667834	0					
ANR	5668061	MemberAccess	penum -> dda . pixel0		5667834	1					
ANR	5668062	PtrMemberAccess	penum -> dda		5667834	0					
ANR	5668063	Identifier	penum		5667834	0					
ANR	5668064	Identifier	dda		5667834	1					
ANR	5668065	Identifier	pixel0		5667834	1					
ANR	5668066	ExpressionStatement	"dda_translate ( pnext . x , ( - fixed_epsilon ) )"	991:4:43504:43545	5667834	29	True				
ANR	5668067	CallExpression	"dda_translate ( pnext . x , ( - fixed_epsilon ) )"		5667834	0					
ANR	5668068	Callee	dda_translate		5667834	0					
ANR	5668069	Identifier	dda_translate		5667834	0					
ANR	5668070	ArgumentList	pnext . x		5667834	1					
ANR	5668071	Argument	pnext . x		5667834	0					
ANR	5668072	MemberAccess	pnext . x		5667834	0					
ANR	5668073	Identifier	pnext		5667834	0					
ANR	5668074	Identifier	x		5667834	1					
ANR	5668075	Argument	- fixed_epsilon		5667834	1					
ANR	5668076	UnaryOperationExpression	- fixed_epsilon		5667834	0					
ANR	5668077	UnaryOperator	-		5667834	0					
ANR	5668078	Identifier	fixed_epsilon		5667834	1					
ANR	5668079	ExpressionStatement	irun = fixed2int_var_rounded ( dda_current ( pnext . y ) )	992:4:43551:43601	5667834	30	True				
ANR	5668080	AssignmentExpression	irun = fixed2int_var_rounded ( dda_current ( pnext . y ) )		5667834	0		=			
ANR	5668081	Identifier	irun		5667834	0					
ANR	5668082	CallExpression	fixed2int_var_rounded ( dda_current ( pnext . y ) )		5667834	1					
ANR	5668083	Callee	fixed2int_var_rounded		5667834	0					
ANR	5668084	Identifier	fixed2int_var_rounded		5667834	0					
ANR	5668085	ArgumentList	dda_current ( pnext . y )		5667834	1					
ANR	5668086	Argument	dda_current ( pnext . y )		5667834	0					
ANR	5668087	CallExpression	dda_current ( pnext . y )		5667834	0					
ANR	5668088	Callee	dda_current		5667834	0					
ANR	5668089	Identifier	dda_current		5667834	0					
ANR	5668090	ArgumentList	pnext . y		5667834	1					
ANR	5668091	Argument	pnext . y		5667834	0					
ANR	5668092	MemberAccess	pnext . y		5667834	0					
ANR	5668093	Identifier	pnext		5667834	0					
ANR	5668094	Identifier	y		5667834	1					
ANR	5668095	ExpressionStatement	"vci = penum -> xci , vdi = penum -> wci"	993:4:43607:43641	5667834	31	True				
ANR	5668096	Expression	"vci = penum -> xci , vdi = penum -> wci"		5667834	0					
ANR	5668097	AssignmentExpression	vci = penum -> xci		5667834	0		=			
ANR	5668098	Identifier	vci		5667834	0					
ANR	5668099	PtrMemberAccess	penum -> xci		5667834	1					
ANR	5668100	Identifier	penum		5667834	0					
ANR	5668101	Identifier	xci		5667834	1					
ANR	5668102	AssignmentExpression	vdi = penum -> wci		5667834	1		=			
ANR	5668103	Identifier	vdi		5667834	0					
ANR	5668104	PtrMemberAccess	penum -> wci		5667834	1					
ANR	5668105	Identifier	penum		5667834	0					
ANR	5668106	Identifier	wci		5667834	1					
ANR	5668107	ExpressionStatement	"if_debug5m ( 'b' , penum -> memory , ""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"" , penum -> y , data_x , w , fixed2float ( dda_current ( pnext . x ) ) , fixed2float ( dda_current ( pnext . y ) ) )"	994:4:43647:43823	5667834	32	True				
ANR	5668108	CallExpression	"if_debug5m ( 'b' , penum -> memory , ""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"" , penum -> y , data_x , w , fixed2float ( dda_current ( pnext . x ) ) , fixed2float ( dda_current ( pnext . y ) ) )"		5667834	0					
ANR	5668109	Callee	if_debug5m		5667834	0					
ANR	5668110	Identifier	if_debug5m		5667834	0					
ANR	5668111	ArgumentList	'b'		5667834	1					
ANR	5668112	Argument	'b'		5667834	0					
ANR	5668113	PrimaryExpression	'b'		5667834	0					
ANR	5668114	Argument	penum -> memory		5667834	1					
ANR	5668115	PtrMemberAccess	penum -> memory		5667834	0					
ANR	5668116	Identifier	penum		5667834	0					
ANR	5668117	Identifier	memory		5667834	1					
ANR	5668118	Argument	"""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"""		5667834	2					
ANR	5668119	PrimaryExpression	"""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"""		5667834	0					
ANR	5668120	Argument	penum -> y		5667834	3					
ANR	5668121	PtrMemberAccess	penum -> y		5667834	0					
ANR	5668122	Identifier	penum		5667834	0					
ANR	5668123	Identifier	y		5667834	1					
ANR	5668124	Argument	data_x		5667834	4					
ANR	5668125	Identifier	data_x		5667834	0					
ANR	5668126	Argument	w		5667834	5					
ANR	5668127	Identifier	w		5667834	0					
ANR	5668128	Argument	fixed2float ( dda_current ( pnext . x ) )		5667834	6					
ANR	5668129	CallExpression	fixed2float ( dda_current ( pnext . x ) )		5667834	0					
ANR	5668130	Callee	fixed2float		5667834	0					
ANR	5668131	Identifier	fixed2float		5667834	0					
ANR	5668132	ArgumentList	dda_current ( pnext . x )		5667834	1					
ANR	5668133	Argument	dda_current ( pnext . x )		5667834	0					
ANR	5668134	CallExpression	dda_current ( pnext . x )		5667834	0					
ANR	5668135	Callee	dda_current		5667834	0					
ANR	5668136	Identifier	dda_current		5667834	0					
ANR	5668137	ArgumentList	pnext . x		5667834	1					
ANR	5668138	Argument	pnext . x		5667834	0					
ANR	5668139	MemberAccess	pnext . x		5667834	0					
ANR	5668140	Identifier	pnext		5667834	0					
ANR	5668141	Identifier	x		5667834	1					
ANR	5668142	Argument	fixed2float ( dda_current ( pnext . y ) )		5667834	7					
ANR	5668143	CallExpression	fixed2float ( dda_current ( pnext . y ) )		5667834	0					
ANR	5668144	Callee	fixed2float		5667834	0					
ANR	5668145	Identifier	fixed2float		5667834	0					
ANR	5668146	ArgumentList	dda_current ( pnext . y )		5667834	1					
ANR	5668147	Argument	dda_current ( pnext . y )		5667834	0					
ANR	5668148	CallExpression	dda_current ( pnext . y )		5667834	0					
ANR	5668149	Callee	dda_current		5667834	0					
ANR	5668150	Identifier	dda_current		5667834	0					
ANR	5668151	ArgumentList	pnext . y		5667834	1					
ANR	5668152	Argument	pnext . y		5667834	0					
ANR	5668153	MemberAccess	pnext . y		5667834	0					
ANR	5668154	Identifier	pnext		5667834	0					
ANR	5668155	Identifier	y		5667834	1					
ANR	5668156	WhileStatement	while ( psrc_cm < bufend )		5667834	33					
ANR	5668157	Condition	psrc_cm < bufend	996:11:43836:43851	5667834	0	True				
ANR	5668158	RelationalExpression	psrc_cm < bufend		5667834	0		<			
ANR	5668159	Identifier	psrc_cm		5667834	0					
ANR	5668160	Identifier	bufend		5667834	1					
ANR	5668161	CompoundStatement		36:29:1429:1429	5667834	1					
ANR	5668162	ExpressionStatement	run = psrc_cm + spp_cm	999:8:44013:44035	5667834	0	True				
ANR	5668163	AssignmentExpression	run = psrc_cm + spp_cm		5667834	0		=			
ANR	5668164	Identifier	run		5667834	0					
ANR	5668165	AdditiveExpression	psrc_cm + spp_cm		5667834	1		+			
ANR	5668166	Identifier	psrc_cm		5667834	0					
ANR	5668167	Identifier	spp_cm		5667834	1					
ANR	5668168	WhileStatement	while ( 1 )		5667834	1					
ANR	5668169	Condition	1	1000:15:44052:44052	5667834	0	True				
ANR	5668170	PrimaryExpression	1		5667834	0					
ANR	5668171	CompoundStatement		41:8:1638:1638	5667834	1					
ANR	5668172	ExpressionStatement	dda_next ( pnext . y )	1002:12:44077:44094	5667834	0	True				
ANR	5668173	CallExpression	dda_next ( pnext . y )		5667834	0					
ANR	5668174	Callee	dda_next		5667834	0					
ANR	5668175	Identifier	dda_next		5667834	0					
ANR	5668176	ArgumentList	pnext . y		5667834	1					
ANR	5668177	Argument	pnext . y		5667834	0					
ANR	5668178	MemberAccess	pnext . y		5667834	0					
ANR	5668179	Identifier	pnext		5667834	0					
ANR	5668180	Identifier	y		5667834	1					
ANR	5668181	IfStatement	if ( run >= bufend )		5667834	1					
ANR	5668182	Condition	run >= bufend	1003:16:44112:44124	5667834	0	True				
ANR	5668183	RelationalExpression	run >= bufend		5667834	0		>=			
ANR	5668184	Identifier	run		5667834	0					
ANR	5668185	Identifier	bufend		5667834	1					
ANR	5668186	BreakStatement	break ;	1004:16:44143:44148	5667834	1	True				
ANR	5668187	IfStatement	"if ( memcmp ( run , psrc_cm , spp_cm ) )"		5667834	2					
ANR	5668188	Condition	"memcmp ( run , psrc_cm , spp_cm )"	1005:16:44166:44193	5667834	0	True				
ANR	5668189	CallExpression	"memcmp ( run , psrc_cm , spp_cm )"		5667834	0					
ANR	5668190	Callee	memcmp		5667834	0					
ANR	5668191	Identifier	memcmp		5667834	0					
ANR	5668192	ArgumentList	run		5667834	1					
ANR	5668193	Argument	run		5667834	0					
ANR	5668194	Identifier	run		5667834	0					
ANR	5668195	Argument	psrc_cm		5667834	1					
ANR	5668196	Identifier	psrc_cm		5667834	0					
ANR	5668197	Argument	spp_cm		5667834	2					
ANR	5668198	Identifier	spp_cm		5667834	0					
ANR	5668199	BreakStatement	break ;	1006:16:44212:44217	5667834	1	True				
ANR	5668200	ExpressionStatement	run += spp_cm	1007:12:44231:44244	5667834	3	True				
ANR	5668201	AssignmentExpression	run += spp_cm		5667834	0		+=			
ANR	5668202	Identifier	run		5667834	0					
ANR	5668203	Identifier	spp_cm		5667834	1					
ANR	5668204	ForStatement	for ( k = 0 ; k < spp_cm ; k ++ )		5667834	2					
ANR	5668205	ForInit	k = 0 ;	1011:13:44392:44397	5667834	0	True				
ANR	5668206	AssignmentExpression	k = 0		5667834	0		=			
ANR	5668207	Identifier	k		5667834	0					
ANR	5668208	PrimaryExpression	0		5667834	1					
ANR	5668209	Condition	k < spp_cm	1011:20:44399:44408	5667834	1	True				
ANR	5668210	RelationalExpression	k < spp_cm		5667834	0		<			
ANR	5668211	Identifier	k		5667834	0					
ANR	5668212	Identifier	spp_cm		5667834	1					
ANR	5668213	PostIncDecOperationExpression	k ++	1011:32:44411:44413	5667834	2	True				
ANR	5668214	Identifier	k		5667834	0					
ANR	5668215	IncDec	++		5667834	1					
ANR	5668216	CompoundStatement		51:37:1991:1991	5667834	3					
ANR	5668217	ExpressionStatement	conc [ k ] = gx_color_value_from_byte ( psrc_cm [ k ] )	1012:12:44430:44476	5667834	0	True				
ANR	5668218	AssignmentExpression	conc [ k ] = gx_color_value_from_byte ( psrc_cm [ k ] )		5667834	0		=			
ANR	5668219	ArrayIndexing	conc [ k ]		5667834	0					
ANR	5668220	Identifier	conc		5667834	0					
ANR	5668221	Identifier	k		5667834	1					
ANR	5668222	CallExpression	gx_color_value_from_byte ( psrc_cm [ k ] )		5667834	1					
ANR	5668223	Callee	gx_color_value_from_byte		5667834	0					
ANR	5668224	Identifier	gx_color_value_from_byte		5667834	0					
ANR	5668225	ArgumentList	psrc_cm [ k ]		5667834	1					
ANR	5668226	Argument	psrc_cm [ k ]		5667834	0					
ANR	5668227	ArrayIndexing	psrc_cm [ k ]		5667834	0					
ANR	5668228	Identifier	psrc_cm		5667834	0					
ANR	5668229	Identifier	k		5667834	1					
ANR	5668230	ExpressionStatement	mapper ( & data )	1014:8:44496:44509	5667834	3	True				
ANR	5668231	CallExpression	mapper ( & data )		5667834	0					
ANR	5668232	Callee	mapper		5667834	0					
ANR	5668233	Identifier	mapper		5667834	0					
ANR	5668234	ArgumentList	& data		5667834	1					
ANR	5668235	Argument	& data		5667834	0					
ANR	5668236	UnaryOperationExpression	& data		5667834	0					
ANR	5668237	UnaryOperator	&		5667834	0					
ANR	5668238	Identifier	data		5667834	1					
ANR	5668239	CompoundStatement		58:12:2248:2314	5667834	4					
ANR	5668240	IdentifierDeclStatement	int yi = irun ;	1017:12:44646:44659	5667834	0	True				
ANR	5668241	IdentifierDecl	yi = irun		5667834	0					
ANR	5668242	IdentifierDeclType	int		5667834	0					
ANR	5668243	Identifier	yi		5667834	1					
ANR	5668244	AssignmentExpression	yi = irun		5667834	2		=			
ANR	5668245	Identifier	irun		5667834	0					
ANR	5668246	Identifier	irun		5667834	1					
ANR	5668247	IdentifierDeclStatement	int hi = ( irun = fixed2int_var_rounded ( dda_current ( pnext . y ) ) ) - yi ;	1018:12:44673:44739	5667834	1	True				
ANR	5668248	IdentifierDecl	hi = ( irun = fixed2int_var_rounded ( dda_current ( pnext . y ) ) ) - yi		5667834	0					
ANR	5668249	IdentifierDeclType	int		5667834	0					
ANR	5668250	Identifier	hi		5667834	1					
ANR	5668251	AssignmentExpression	hi = ( irun = fixed2int_var_rounded ( dda_current ( pnext . y ) ) ) - yi		5667834	2		=			
ANR	5668252	Identifier	hi		5667834	0					
ANR	5668253	AdditiveExpression	( irun = fixed2int_var_rounded ( dda_current ( pnext . y ) ) ) - yi		5667834	1		-			
ANR	5668254	AssignmentExpression	irun = fixed2int_var_rounded ( dda_current ( pnext . y ) )		5667834	0		=			
ANR	5668255	Identifier	irun		5667834	0					
ANR	5668256	CallExpression	fixed2int_var_rounded ( dda_current ( pnext . y ) )		5667834	1					
ANR	5668257	Callee	fixed2int_var_rounded		5667834	0					
ANR	5668258	Identifier	fixed2int_var_rounded		5667834	0					
ANR	5668259	ArgumentList	dda_current ( pnext . y )		5667834	1					
ANR	5668260	Argument	dda_current ( pnext . y )		5667834	0					
ANR	5668261	CallExpression	dda_current ( pnext . y )		5667834	0					
ANR	5668262	Callee	dda_current		5667834	0					
ANR	5668263	Identifier	dda_current		5667834	0					
ANR	5668264	ArgumentList	pnext . y		5667834	1					
ANR	5668265	Argument	pnext . y		5667834	0					
ANR	5668266	MemberAccess	pnext . y		5667834	0					
ANR	5668267	Identifier	pnext		5667834	0					
ANR	5668268	Identifier	y		5667834	1					
ANR	5668269	Identifier	yi		5667834	1					
ANR	5668270	IfStatement	if ( hi < 0 )		5667834	2					
ANR	5668271	Condition	hi < 0	1020:16:44758:44763	5667834	0	True				
ANR	5668272	RelationalExpression	hi < 0		5667834	0		<			
ANR	5668273	Identifier	hi		5667834	0					
ANR	5668274	PrimaryExpression	0		5667834	1					
ANR	5668275	ExpressionStatement	"yi += hi , hi = - hi"	1021:16:44782:44800	5667834	1	True				
ANR	5668276	Expression	"yi += hi , hi = - hi"		5667834	0					
ANR	5668277	AssignmentExpression	yi += hi		5667834	0		+=			
ANR	5668278	Identifier	yi		5667834	0					
ANR	5668279	Identifier	hi		5667834	1					
ANR	5668280	AssignmentExpression	hi = - hi		5667834	1		=			
ANR	5668281	Identifier	hi		5667834	0					
ANR	5668282	UnaryOperationExpression	- hi		5667834	1					
ANR	5668283	UnaryOperator	-		5667834	0					
ANR	5668284	Identifier	hi		5667834	1					
ANR	5668285	IfStatement	if ( hi > 0 )		5667834	3					
ANR	5668286	Condition	hi > 0	1022:16:44818:44823	5667834	0	True				
ANR	5668287	RelationalExpression	hi > 0		5667834	0		>			
ANR	5668288	Identifier	hi		5667834	0					
ANR	5668289	PrimaryExpression	0		5667834	1					
ANR	5668290	ExpressionStatement	"code = gx_fill_rectangle_device_rop ( vci , yi , vdi , hi , & data . devc , dev , lop )"	1023:16:44842:44969	5667834	1	True				
ANR	5668291	AssignmentExpression	"code = gx_fill_rectangle_device_rop ( vci , yi , vdi , hi , & data . devc , dev , lop )"		5667834	0		=			
ANR	5668292	Identifier	code		5667834	0					
ANR	5668293	CallExpression	"gx_fill_rectangle_device_rop ( vci , yi , vdi , hi , & data . devc , dev , lop )"		5667834	1					
ANR	5668294	Callee	gx_fill_rectangle_device_rop		5667834	0					
ANR	5668295	Identifier	gx_fill_rectangle_device_rop		5667834	0					
ANR	5668296	ArgumentList	vci		5667834	1					
ANR	5668297	Argument	vci		5667834	0					
ANR	5668298	Identifier	vci		5667834	0					
ANR	5668299	Argument	yi		5667834	1					
ANR	5668300	Identifier	yi		5667834	0					
ANR	5668301	Argument	vdi		5667834	2					
ANR	5668302	Identifier	vdi		5667834	0					
ANR	5668303	Argument	hi		5667834	3					
ANR	5668304	Identifier	hi		5667834	0					
ANR	5668305	Argument	& data . devc		5667834	4					
ANR	5668306	UnaryOperationExpression	& data . devc		5667834	0					
ANR	5668307	UnaryOperator	&		5667834	0					
ANR	5668308	MemberAccess	data . devc		5667834	1					
ANR	5668309	Identifier	data		5667834	0					
ANR	5668310	Identifier	devc		5667834	1					
ANR	5668311	Argument	dev		5667834	5					
ANR	5668312	Identifier	dev		5667834	0					
ANR	5668313	Argument	lop		5667834	6					
ANR	5668314	Identifier	lop		5667834	0					
ANR	5668315	IfStatement	if ( code < 0 )		5667834	5					
ANR	5668316	Condition	code < 0	1026:12:44993:45000	5667834	0	True				
ANR	5668317	RelationalExpression	code < 0		5667834	0		<			
ANR	5668318	Identifier	code		5667834	0					
ANR	5668319	PrimaryExpression	0		5667834	1					
ANR	5668320	GotoStatement	goto err ;	1027:12:45015:45023	5667834	1	True				
ANR	5668321	Identifier	err		5667834	0					
ANR	5668322	ExpressionStatement	psrc_cm = run	1028:8:45033:45046	5667834	6	True				
ANR	5668323	AssignmentExpression	psrc_cm = run		5667834	0		=			
ANR	5668324	Identifier	psrc_cm		5667834	0					
ANR	5668325	Identifier	run		5667834	1					
ANR	5668326	IfStatement	if ( psrc_cm_start != NULL )		5667834	34					
ANR	5668327	Condition	psrc_cm_start != NULL	1031:8:45103:45123	5667834	0	True				
ANR	5668328	EqualityExpression	psrc_cm_start != NULL		5667834	0		!=			
ANR	5668329	Identifier	psrc_cm_start		5667834	0					
ANR	5668330	Identifier	NULL		5667834	1					
ANR	5668331	CompoundStatement		71:31:2701:2701	5667834	1					
ANR	5668332	ExpressionStatement	"gs_free_object ( pgs -> memory , ( byte * ) psrc_cm_start , ""image_render_color_icc"" )"	1032:8:45136:45212	5667834	0	True				
ANR	5668333	CallExpression	"gs_free_object ( pgs -> memory , ( byte * ) psrc_cm_start , ""image_render_color_icc"" )"		5667834	0					
ANR	5668334	Callee	gs_free_object		5667834	0					
ANR	5668335	Identifier	gs_free_object		5667834	0					
ANR	5668336	ArgumentList	pgs -> memory		5667834	1					
ANR	5668337	Argument	pgs -> memory		5667834	0					
ANR	5668338	PtrMemberAccess	pgs -> memory		5667834	0					
ANR	5668339	Identifier	pgs		5667834	0					
ANR	5668340	Identifier	memory		5667834	1					
ANR	5668341	Argument	( byte * ) psrc_cm_start		5667834	1					
ANR	5668342	CastExpression	( byte * ) psrc_cm_start		5667834	0					
ANR	5668343	CastTarget	byte *		5667834	0					
ANR	5668344	Identifier	psrc_cm_start		5667834	1					
ANR	5668345	Argument	"""image_render_color_icc"""		5667834	2					
ANR	5668346	PrimaryExpression	"""image_render_color_icc"""		5667834	0					
ANR	5668347	ReturnStatement	return ( code < 0 ? code : 1 ) ;	1034:4:45224:45252	5667834	35	True				
ANR	5668348	ConditionalExpression	code < 0 ? code : 1		5667834	0					
ANR	5668349	Condition	code < 0		5667834	0					
ANR	5668350	RelationalExpression	code < 0		5667834	0		<			
ANR	5668351	Identifier	code		5667834	0					
ANR	5668352	PrimaryExpression	0		5667834	1					
ANR	5668353	Identifier	code		5667834	1					
ANR	5668354	PrimaryExpression	1		5667834	2					
ANR	5668355	Label	err :	1036:0:45307:45310	5667834	36	True				
ANR	5668356	Identifier	err		5667834	0					
ANR	5668357	ExpressionStatement	"gs_free_object ( pgs -> memory , ( byte * ) psrc_cm_start , ""image_render_color_icc"" )"	1037:4:45316:45392	5667834	37	True				
ANR	5668358	CallExpression	"gs_free_object ( pgs -> memory , ( byte * ) psrc_cm_start , ""image_render_color_icc"" )"		5667834	0					
ANR	5668359	Callee	gs_free_object		5667834	0					
ANR	5668360	Identifier	gs_free_object		5667834	0					
ANR	5668361	ArgumentList	pgs -> memory		5667834	1					
ANR	5668362	Argument	pgs -> memory		5667834	0					
ANR	5668363	PtrMemberAccess	pgs -> memory		5667834	0					
ANR	5668364	Identifier	pgs		5667834	0					
ANR	5668365	Identifier	memory		5667834	1					
ANR	5668366	Argument	( byte * ) psrc_cm_start		5667834	1					
ANR	5668367	CastExpression	( byte * ) psrc_cm_start		5667834	0					
ANR	5668368	CastTarget	byte *		5667834	0					
ANR	5668369	Identifier	psrc_cm_start		5667834	1					
ANR	5668370	Argument	"""image_render_color_icc"""		5667834	2					
ANR	5668371	PrimaryExpression	"""image_render_color_icc"""		5667834	0					
ANR	5668372	ExpressionStatement	penum_orig -> used . x = ( run - psrc_cm_initial ) / spp_cm	1038:4:45398:45451	5667834	38	True				
ANR	5668373	AssignmentExpression	penum_orig -> used . x = ( run - psrc_cm_initial ) / spp_cm		5667834	0		=			
ANR	5668374	MemberAccess	penum_orig -> used . x		5667834	0					
ANR	5668375	PtrMemberAccess	penum_orig -> used		5667834	0					
ANR	5668376	Identifier	penum_orig		5667834	0					
ANR	5668377	Identifier	used		5667834	1					
ANR	5668378	Identifier	x		5667834	1					
ANR	5668379	MultiplicativeExpression	( run - psrc_cm_initial ) / spp_cm		5667834	1		/			
ANR	5668380	AdditiveExpression	run - psrc_cm_initial		5667834	0		-			
ANR	5668381	Identifier	run		5667834	0					
ANR	5668382	Identifier	psrc_cm_initial		5667834	1					
ANR	5668383	Identifier	spp_cm		5667834	1					
ANR	5668384	ExpressionStatement	penum_orig -> used . y = 0	1039:4:45457:45479	5667834	39	True				
ANR	5668385	AssignmentExpression	penum_orig -> used . y = 0		5667834	0		=			
ANR	5668386	MemberAccess	penum_orig -> used . y		5667834	0					
ANR	5668387	PtrMemberAccess	penum_orig -> used		5667834	0					
ANR	5668388	Identifier	penum_orig		5667834	0					
ANR	5668389	Identifier	used		5667834	1					
ANR	5668390	Identifier	y		5667834	1					
ANR	5668391	PrimaryExpression	0		5667834	1					
ANR	5668392	ReturnStatement	return code ;	1040:4:45485:45496	5667834	40	True				
ANR	5668393	Identifier	code		5667834	0					
ANR	5668394	ReturnType	static int		5667834	1					
ANR	5668395	Identifier	image_render_color_icc_landscape		5667834	2					
ANR	5668396	ParameterList	"gx_image_enum * penum_orig , const byte * buffer , int data_x , uint w , int h , gx_device * dev"		5667834	3					
ANR	5668397	Parameter	gx_image_enum * penum_orig	959:33:42300:42324	5667834	0	True				
ANR	5668398	ParameterType	gx_image_enum *		5667834	0					
ANR	5668399	Identifier	penum_orig		5667834	1					
ANR	5668400	Parameter	const byte * buffer	959:60:42327:42344	5667834	1	True				
ANR	5668401	ParameterType	const byte *		5667834	0					
ANR	5668402	Identifier	buffer		5667834	1					
ANR	5668403	Parameter	int data_x	959:80:42347:42356	5667834	2	True				
ANR	5668404	ParameterType	int		5667834	0					
ANR	5668405	Identifier	data_x		5667834	1					
ANR	5668406	Parameter	uint w	960:33:42392:42397	5667834	3	True				
ANR	5668407	ParameterType	uint		5667834	0					
ANR	5668408	Identifier	w		5667834	1					
ANR	5668409	Parameter	int h	960:41:42400:42404	5667834	4	True				
ANR	5668410	ParameterType	int		5667834	0					
ANR	5668411	Identifier	h		5667834	1					
ANR	5668412	Parameter	gx_device * dev	960:48:42407:42421	5667834	5	True				
ANR	5668413	ParameterType	gx_device *		5667834	0					
ANR	5668414	Identifier	dev		5667834	1					
ANR	5668415	CFGEntryNode	ENTRY		5667834		True				
ANR	5668416	CFGExitNode	EXIT		5667834		True				
ANR	5668417	Symbol	hi		5667834						
ANR	5668418	Symbol	& data . devc		5667834						
ANR	5668419	Symbol	penum -> dda . pixel0		5667834						
ANR	5668420	Symbol	data		5667834						
ANR	5668421	Symbol	gs_color_select_source		5667834						
ANR	5668422	Symbol	* pgs		5667834						
ANR	5668423	Symbol	run		5667834						
ANR	5668424	Symbol	penum -> wci		5667834						
ANR	5668425	Symbol	conc		5667834						
ANR	5668426	Symbol	yi		5667834						
ANR	5668427	Symbol	data_x		5667834						
ANR	5668428	Symbol	penum -> icc_setup . has_transfer		5667834						
ANR	5668429	Symbol	memcmp		5667834						
ANR	5668430	Symbol	dev		5667834						
ANR	5668431	Symbol	gx_get_cmapper		5667834						
ANR	5668432	Symbol	buffer		5667834						
ANR	5668433	Symbol	fixed_epsilon		5667834						
ANR	5668434	Symbol	& psrc_cm		5667834						
ANR	5668435	Symbol	NULL		5667834						
ANR	5668436	Symbol	must_halftone		5667834						
ANR	5668437	Symbol	gx_color_value_from_byte		5667834						
ANR	5668438	Symbol	penum		5667834						
ANR	5668439	Symbol	gx_fill_rectangle_device_rop		5667834						
ANR	5668440	Symbol	& data		5667834						
ANR	5668441	Symbol	spp		5667834						
ANR	5668442	Symbol	penum -> dda		5667834						
ANR	5668443	Symbol	irun		5667834						
ANR	5668444	Symbol	penum -> icc_setup . must_halftone		5667834						
ANR	5668445	Symbol	dda_current		5667834						
ANR	5668446	Symbol	data . conc		5667834						
ANR	5668447	Symbol	pnext		5667834						
ANR	5668448	Symbol	psrc_cm_start		5667834						
ANR	5668449	Symbol	penum_orig -> used		5667834						
ANR	5668450	Symbol	psrc		5667834						
ANR	5668451	Symbol	* penum		5667834						
ANR	5668452	Symbol	code		5667834						
ANR	5668453	Symbol	* penum_orig		5667834						
ANR	5668454	Symbol	penum -> memory		5667834						
ANR	5668455	Symbol	penum_orig		5667834						
ANR	5668456	Symbol	mapper		5667834						
ANR	5668457	Symbol	* conc		5667834						
ANR	5668458	Symbol	lop		5667834						
ANR	5668459	Symbol	& bufend		5667834						
ANR	5668460	Symbol	penum -> xci		5667834						
ANR	5668461	Symbol	fixed2int_var_rounded		5667834						
ANR	5668462	Symbol	penum -> pgs		5667834						
ANR	5668463	Symbol	penum -> icc_setup		5667834						
ANR	5668464	Symbol	bufend		5667834						
ANR	5668465	Symbol	* psrc_cm		5667834						
ANR	5668466	Symbol	pgs		5667834						
ANR	5668467	Symbol	vci		5667834						
ANR	5668468	Symbol	pgs -> memory		5667834						
ANR	5668469	Symbol	psrc_cm_initial		5667834						
ANR	5668470	Symbol	penum -> spp		5667834						
ANR	5668471	Symbol	& spp_cm		5667834						
ANR	5668472	Symbol	fixed2float		5667834						
ANR	5668473	Symbol	penum -> log_op		5667834						
ANR	5668474	Symbol	h		5667834						
ANR	5668475	Symbol	false		5667834						
ANR	5668476	Symbol	k		5667834						
ANR	5668477	Symbol	penum_orig -> used . x		5667834						
ANR	5668478	Symbol	spp_cm		5667834						
ANR	5668479	Symbol	penum -> y		5667834						
ANR	5668480	Symbol	& psrc_cm_start		5667834						
ANR	5668481	Symbol	penum_orig -> used . y		5667834						
ANR	5668482	Symbol	image_color_icc_prep		5667834						
ANR	5668483	Symbol	pnext . y		5667834						
ANR	5668484	Symbol	* k		5667834						
ANR	5668485	Symbol	w		5667834						
ANR	5668486	Symbol	pnext . x		5667834						
ANR	5668487	Symbol	psrc_cm		5667834						
ANR	5668488	Symbol	vdi		5667834						
ANR	5668489	Symbol	has_transfer		5667834						
ANR	5668490	Function	image_render_color_icc_skew	1043:0:45501:48631							
ANR	5668491	FunctionDef	"image_render_color_icc_skew (gx_image_enum * penum_orig , const byte * buffer , int data_x , uint w , int h , gx_device * dev)"		5668490	0					
ANR	5668492	CompoundStatement		1046:0:45650:48631	5668490	0					
ANR	5668493	Statement	const	1047:4:45656:45660	5668490	0	True				
ANR	5668494	Statement	gx_image_enum	1047:10:45662:45674	5668490	1	True				
ANR	5668495	Statement	*	1047:24:45676:45676	5668490	2	True				
ANR	5668496	Statement	const	1047:25:45677:45681	5668490	3	True				
ANR	5668497	ExpressionStatement	penum = penum_orig	1047:31:45683:45701	5668490	4	True				
ANR	5668498	AssignmentExpression	penum = penum_orig		5668490	0		=			
ANR	5668499	Identifier	penum		5668490	0					
ANR	5668500	Identifier	penum_orig		5668490	1					
ANR	5668501	IdentifierDeclStatement	const gs_gstate * pgs = penum -> pgs ;	1048:4:45731:45764	5668490	5	True				
ANR	5668502	IdentifierDecl	* pgs = penum -> pgs		5668490	0					
ANR	5668503	IdentifierDeclType	const gs_gstate *		5668490	0					
ANR	5668504	Identifier	pgs		5668490	1					
ANR	5668505	AssignmentExpression	* pgs = penum -> pgs		5668490	2		=			
ANR	5668506	Identifier	pgs		5668490	0					
ANR	5668507	PtrMemberAccess	penum -> pgs		5668490	1					
ANR	5668508	Identifier	penum		5668490	0					
ANR	5668509	Identifier	pgs		5668490	1					
ANR	5668510	IdentifierDeclStatement	gs_logical_operation_t lop = penum -> log_op ;	1049:4:45770:45812	5668490	6	True				
ANR	5668511	IdentifierDecl	lop = penum -> log_op		5668490	0					
ANR	5668512	IdentifierDeclType	gs_logical_operation_t		5668490	0					
ANR	5668513	Identifier	lop		5668490	1					
ANR	5668514	AssignmentExpression	lop = penum -> log_op		5668490	2		=			
ANR	5668515	Identifier	lop		5668490	0					
ANR	5668516	PtrMemberAccess	penum -> log_op		5668490	1					
ANR	5668517	Identifier	penum		5668490	0					
ANR	5668518	Identifier	log_op		5668490	1					
ANR	5668519	IdentifierDeclStatement	gx_dda_fixed_point pnext ;	1050:4:45818:45842	5668490	7	True				
ANR	5668520	IdentifierDecl	pnext		5668490	0					
ANR	5668521	IdentifierDeclType	gx_dda_fixed_point		5668490	0					
ANR	5668522	Identifier	pnext		5668490	1					
ANR	5668523	IdentifierDeclStatement	"fixed xprev , yprev ;"	1051:4:45848:45866	5668490	8	True				
ANR	5668524	IdentifierDecl	xprev		5668490	0					
ANR	5668525	IdentifierDeclType	fixed		5668490	0					
ANR	5668526	Identifier	xprev		5668490	1					
ANR	5668527	IdentifierDecl	yprev		5668490	1					
ANR	5668528	IdentifierDeclType	fixed		5668490	0					
ANR	5668529	Identifier	yprev		5668490	1					
ANR	5668530	IdentifierDeclStatement	"fixed pdyx , pdyy ;"	1052:4:45872:45888	5668490	9	True				
ANR	5668531	IdentifierDecl	pdyx		5668490	0					
ANR	5668532	IdentifierDeclType	fixed		5668490	0					
ANR	5668533	Identifier	pdyx		5668490	1					
ANR	5668534	IdentifierDecl	pdyy		5668490	1					
ANR	5668535	IdentifierDeclType	fixed		5668490	0					
ANR	5668536	Identifier	pdyy		5668490	1					
ANR	5668537	IdentifierDeclStatement	int spp = penum -> spp ;	1053:4:45923:45943	5668490	10	True				
ANR	5668538	IdentifierDecl	spp = penum -> spp		5668490	0					
ANR	5668539	IdentifierDeclType	int		5668490	0					
ANR	5668540	Identifier	spp		5668490	1					
ANR	5668541	AssignmentExpression	spp = penum -> spp		5668490	2		=			
ANR	5668542	Identifier	spp		5668490	0					
ANR	5668543	PtrMemberAccess	penum -> spp		5668490	1					
ANR	5668544	Identifier	penum		5668490	0					
ANR	5668545	Identifier	spp		5668490	1					
ANR	5668546	IdentifierDeclStatement	const byte * psrc = buffer + data_x * spp ;	1054:4:45949:45989	5668490	11	True				
ANR	5668547	IdentifierDecl	* psrc = buffer + data_x * spp		5668490	0					
ANR	5668548	IdentifierDeclType	const byte *		5668490	0					
ANR	5668549	Identifier	psrc		5668490	1					
ANR	5668550	AssignmentExpression	* psrc = buffer + data_x * spp		5668490	2		=			
ANR	5668551	Identifier	psrc		5668490	0					
ANR	5668552	AdditiveExpression	buffer + data_x * spp		5668490	1		+			
ANR	5668553	Identifier	buffer		5668490	0					
ANR	5668554	MultiplicativeExpression	data_x * spp		5668490	1		*			
ANR	5668555	Identifier	data_x		5668490	0					
ANR	5668556	Identifier	spp		5668490	1					
ANR	5668557	IdentifierDeclStatement	fixed xpos ;	1055:4:45995:46005	5668490	12	True				
ANR	5668558	IdentifierDecl	xpos		5668490	0					
ANR	5668559	IdentifierDeclType	fixed		5668490	0					
ANR	5668560	Identifier	xpos		5668490	1					
ANR	5668561	IdentifierDeclStatement	fixed ypos ;	1056:4:46027:46037	5668490	13	True				
ANR	5668562	IdentifierDecl	ypos		5668490	0					
ANR	5668563	IdentifierDeclType	fixed		5668490	0					
ANR	5668564	Identifier	ypos		5668490	1					
ANR	5668565	IdentifierDeclStatement	byte * bufend = NULL ;	1057:4:46059:46078	5668490	14	True				
ANR	5668566	IdentifierDecl	* bufend = NULL		5668490	0					
ANR	5668567	IdentifierDeclType	byte *		5668490	0					
ANR	5668568	Identifier	bufend		5668490	1					
ANR	5668569	AssignmentExpression	* bufend = NULL		5668490	2		=			
ANR	5668570	Identifier	NULL		5668490	0					
ANR	5668571	Identifier	NULL		5668490	1					
ANR	5668572	IdentifierDeclStatement	int code = 0 ;	1058:4:46084:46096	5668490	15	True				
ANR	5668573	IdentifierDecl	code = 0		5668490	0					
ANR	5668574	IdentifierDeclType	int		5668490	0					
ANR	5668575	Identifier	code		5668490	1					
ANR	5668576	AssignmentExpression	code = 0		5668490	2		=			
ANR	5668577	Identifier	code		5668490	0					
ANR	5668578	PrimaryExpression	0		5668490	1					
ANR	5668579	IdentifierDeclStatement	"byte * psrc_cm = NULL , * psrc_cm_start = NULL ;"	1059:4:46102:46145	5668490	16	True				
ANR	5668580	IdentifierDecl	* psrc_cm = NULL		5668490	0					
ANR	5668581	IdentifierDeclType	byte *		5668490	0					
ANR	5668582	Identifier	psrc_cm		5668490	1					
ANR	5668583	AssignmentExpression	* psrc_cm = NULL		5668490	2		=			
ANR	5668584	Identifier	NULL		5668490	0					
ANR	5668585	Identifier	NULL		5668490	1					
ANR	5668586	IdentifierDecl	* psrc_cm_start = NULL		5668490	1					
ANR	5668587	IdentifierDeclType	byte *		5668490	0					
ANR	5668588	Identifier	psrc_cm_start		5668490	1					
ANR	5668589	AssignmentExpression	* psrc_cm_start = NULL		5668490	2		=			
ANR	5668590	Identifier	NULL		5668490	0					
ANR	5668591	Identifier	NULL		5668490	1					
ANR	5668592	IdentifierDeclStatement	byte * psrc_cm_initial ;	1060:4:46151:46172	5668490	17	True				
ANR	5668593	IdentifierDecl	* psrc_cm_initial		5668490	0					
ANR	5668594	IdentifierDeclType	byte *		5668490	0					
ANR	5668595	Identifier	psrc_cm_initial		5668490	1					
ANR	5668596	IdentifierDeclStatement	int k ;	1061:4:46178:46183	5668490	18	True				
ANR	5668597	IdentifierDecl	k		5668490	0					
ANR	5668598	IdentifierDeclType	int		5668490	0					
ANR	5668599	Identifier	k		5668490	1					
ANR	5668600	IdentifierDeclStatement	int spp_cm = 0 ;	1062:4:46189:46203	5668490	19	True				
ANR	5668601	IdentifierDecl	spp_cm = 0		5668490	0					
ANR	5668602	IdentifierDeclType	int		5668490	0					
ANR	5668603	Identifier	spp_cm		5668490	1					
ANR	5668604	AssignmentExpression	spp_cm = 0		5668490	2		=			
ANR	5668605	Identifier	spp_cm		5668490	0					
ANR	5668606	PrimaryExpression	0		5668490	1					
ANR	5668607	IdentifierDeclStatement	bool must_halftone = penum -> icc_setup . must_halftone ;	1063:4:46209:46260	5668490	20	True				
ANR	5668608	IdentifierDecl	must_halftone = penum -> icc_setup . must_halftone		5668490	0					
ANR	5668609	IdentifierDeclType	bool		5668490	0					
ANR	5668610	Identifier	must_halftone		5668490	1					
ANR	5668611	AssignmentExpression	must_halftone = penum -> icc_setup . must_halftone		5668490	2		=			
ANR	5668612	Identifier	must_halftone		5668490	0					
ANR	5668613	MemberAccess	penum -> icc_setup . must_halftone		5668490	1					
ANR	5668614	PtrMemberAccess	penum -> icc_setup		5668490	0					
ANR	5668615	Identifier	penum		5668490	0					
ANR	5668616	Identifier	icc_setup		5668490	1					
ANR	5668617	Identifier	must_halftone		5668490	1					
ANR	5668618	IdentifierDeclStatement	bool has_transfer = penum -> icc_setup . has_transfer ;	1064:4:46266:46315	5668490	21	True				
ANR	5668619	IdentifierDecl	has_transfer = penum -> icc_setup . has_transfer		5668490	0					
ANR	5668620	IdentifierDeclType	bool		5668490	0					
ANR	5668621	Identifier	has_transfer		5668490	1					
ANR	5668622	AssignmentExpression	has_transfer = penum -> icc_setup . has_transfer		5668490	2		=			
ANR	5668623	Identifier	has_transfer		5668490	0					
ANR	5668624	MemberAccess	penum -> icc_setup . has_transfer		5668490	1					
ANR	5668625	PtrMemberAccess	penum -> icc_setup		5668490	0					
ANR	5668626	Identifier	penum		5668490	0					
ANR	5668627	Identifier	icc_setup		5668490	1					
ANR	5668628	Identifier	has_transfer		5668490	1					
ANR	5668629	IdentifierDeclStatement	byte initial_run [ GX_DEVICE_COLOR_MAX_COMPONENTS ] = { 0 } ;	1065:4:46321:46377	5668490	22	True				
ANR	5668630	IdentifierDecl	initial_run [ GX_DEVICE_COLOR_MAX_COMPONENTS ] = { 0 }		5668490	0					
ANR	5668631	IdentifierDeclType	byte [ GX_DEVICE_COLOR_MAX_COMPONENTS ]		5668490	0					
ANR	5668632	Identifier	initial_run		5668490	1					
ANR	5668633	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		5668490	2					
ANR	5668634	AssignmentExpression	initial_run [ GX_DEVICE_COLOR_MAX_COMPONENTS ] = { 0 }		5668490	3		=			
ANR	5668635	Identifier	GX_DEVICE_COLOR_MAX_COMPONENTS		5668490	0					
ANR	5668636	InitializerList	0		5668490	1					
ANR	5668637	PrimaryExpression	0		5668490	0					
ANR	5668638	IdentifierDeclStatement	byte * prev_cm = & initial_run [ 0 ] ;	1066:4:46383:46414	5668490	23	True				
ANR	5668639	IdentifierDecl	* prev_cm = & initial_run [ 0 ]		5668490	0					
ANR	5668640	IdentifierDeclType	byte *		5668490	0					
ANR	5668641	Identifier	prev_cm		5668490	1					
ANR	5668642	AssignmentExpression	* prev_cm = & initial_run [ 0 ]		5668490	2		=			
ANR	5668643	Identifier	prev_cm		5668490	0					
ANR	5668644	UnaryOperationExpression	& initial_run [ 0 ]		5668490	1					
ANR	5668645	UnaryOperator	&		5668490	0					
ANR	5668646	ArrayIndexing	initial_run [ 0 ]		5668490	1					
ANR	5668647	Identifier	initial_run		5668490	0					
ANR	5668648	PrimaryExpression	0		5668490	1					
ANR	5668649	IdentifierDeclStatement	gx_cmapper_data data ;	1067:4:46420:46440	5668490	24	True				
ANR	5668650	IdentifierDecl	data		5668490	0					
ANR	5668651	IdentifierDeclType	gx_cmapper_data		5668490	0					
ANR	5668652	Identifier	data		5668490	1					
ANR	5668653	IdentifierDeclStatement	"gx_cmapper_fn * mapper = gx_get_cmapper ( & data , pgs , dev , has_transfer , must_halftone , gs_color_select_source ) ;"	1068:4:46446:46554	5668490	25	True				
ANR	5668654	IdentifierDecl	"* mapper = gx_get_cmapper ( & data , pgs , dev , has_transfer , must_halftone , gs_color_select_source )"		5668490	0					
ANR	5668655	IdentifierDeclType	gx_cmapper_fn *		5668490	0					
ANR	5668656	Identifier	mapper		5668490	1					
ANR	5668657	AssignmentExpression	"* mapper = gx_get_cmapper ( & data , pgs , dev , has_transfer , must_halftone , gs_color_select_source )"		5668490	2		=			
ANR	5668658	Identifier	mapper		5668490	0					
ANR	5668659	CallExpression	"gx_get_cmapper ( & data , pgs , dev , has_transfer , must_halftone , gs_color_select_source )"		5668490	1					
ANR	5668660	Callee	gx_get_cmapper		5668490	0					
ANR	5668661	Identifier	gx_get_cmapper		5668490	0					
ANR	5668662	ArgumentList	& data		5668490	1					
ANR	5668663	Argument	& data		5668490	0					
ANR	5668664	UnaryOperationExpression	& data		5668490	0					
ANR	5668665	UnaryOperator	&		5668490	0					
ANR	5668666	Identifier	data		5668490	1					
ANR	5668667	Argument	pgs		5668490	1					
ANR	5668668	Identifier	pgs		5668490	0					
ANR	5668669	Argument	dev		5668490	2					
ANR	5668670	Identifier	dev		5668490	0					
ANR	5668671	Argument	has_transfer		5668490	3					
ANR	5668672	Identifier	has_transfer		5668490	0					
ANR	5668673	Argument	must_halftone		5668490	4					
ANR	5668674	Identifier	must_halftone		5668490	0					
ANR	5668675	Argument	gs_color_select_source		5668490	5					
ANR	5668676	Identifier	gs_color_select_source		5668490	0					
ANR	5668677	IdentifierDeclStatement	gx_color_value * conc = & data . conc [ 0 ] ;	1069:4:46560:46596	5668490	26	True				
ANR	5668678	IdentifierDecl	* conc = & data . conc [ 0 ]		5668490	0					
ANR	5668679	IdentifierDeclType	gx_color_value *		5668490	0					
ANR	5668680	Identifier	conc		5668490	1					
ANR	5668681	AssignmentExpression	* conc = & data . conc [ 0 ]		5668490	2		=			
ANR	5668682	Identifier	conc		5668490	0					
ANR	5668683	UnaryOperationExpression	& data . conc [ 0 ]		5668490	1					
ANR	5668684	UnaryOperator	&		5668490	0					
ANR	5668685	ArrayIndexing	data . conc [ 0 ]		5668490	1					
ANR	5668686	MemberAccess	data . conc		5668490	0					
ANR	5668687	Identifier	data		5668490	0					
ANR	5668688	Identifier	conc		5668490	1					
ANR	5668689	PrimaryExpression	0		5668490	1					
ANR	5668690	IfStatement	if ( h == 0 )		5668490	27					
ANR	5668691	Condition	h == 0	1071:8:46607:46612	5668490	0	True				
ANR	5668692	EqualityExpression	h == 0		5668490	0		==			
ANR	5668693	Identifier	h		5668490	0					
ANR	5668694	PrimaryExpression	0		5668490	1					
ANR	5668695	ReturnStatement	return 0 ;	1072:8:46623:46631	5668490	1	True				
ANR	5668696	PrimaryExpression	0		5668490	0					
ANR	5668697	ExpressionStatement	"code = image_color_icc_prep ( penum_orig , psrc , w , dev , & spp_cm , & psrc_cm , & psrc_cm_start , & bufend , false )"	1073:4:46637:46773	5668490	28	True				
ANR	5668698	AssignmentExpression	"code = image_color_icc_prep ( penum_orig , psrc , w , dev , & spp_cm , & psrc_cm , & psrc_cm_start , & bufend , false )"		5668490	0		=			
ANR	5668699	Identifier	code		5668490	0					
ANR	5668700	CallExpression	"image_color_icc_prep ( penum_orig , psrc , w , dev , & spp_cm , & psrc_cm , & psrc_cm_start , & bufend , false )"		5668490	1					
ANR	5668701	Callee	image_color_icc_prep		5668490	0					
ANR	5668702	Identifier	image_color_icc_prep		5668490	0					
ANR	5668703	ArgumentList	penum_orig		5668490	1					
ANR	5668704	Argument	penum_orig		5668490	0					
ANR	5668705	Identifier	penum_orig		5668490	0					
ANR	5668706	Argument	psrc		5668490	1					
ANR	5668707	Identifier	psrc		5668490	0					
ANR	5668708	Argument	w		5668490	2					
ANR	5668709	Identifier	w		5668490	0					
ANR	5668710	Argument	dev		5668490	3					
ANR	5668711	Identifier	dev		5668490	0					
ANR	5668712	Argument	& spp_cm		5668490	4					
ANR	5668713	UnaryOperationExpression	& spp_cm		5668490	0					
ANR	5668714	UnaryOperator	&		5668490	0					
ANR	5668715	Identifier	spp_cm		5668490	1					
ANR	5668716	Argument	& psrc_cm		5668490	5					
ANR	5668717	UnaryOperationExpression	& psrc_cm		5668490	0					
ANR	5668718	UnaryOperator	&		5668490	0					
ANR	5668719	Identifier	psrc_cm		5668490	1					
ANR	5668720	Argument	& psrc_cm_start		5668490	6					
ANR	5668721	UnaryOperationExpression	& psrc_cm_start		5668490	0					
ANR	5668722	UnaryOperator	&		5668490	0					
ANR	5668723	Identifier	psrc_cm_start		5668490	1					
ANR	5668724	Argument	& bufend		5668490	7					
ANR	5668725	UnaryOperationExpression	& bufend		5668490	0					
ANR	5668726	UnaryOperator	&		5668490	0					
ANR	5668727	Identifier	bufend		5668490	1					
ANR	5668728	Argument	false		5668490	8					
ANR	5668729	Identifier	false		5668490	0					
ANR	5668730	IfStatement	if ( code < 0 )		5668490	29					
ANR	5668731	Condition	code < 0	1075:8:46783:46790	5668490	0	True				
ANR	5668732	RelationalExpression	code < 0		5668490	0		<			
ANR	5668733	Identifier	code		5668490	0					
ANR	5668734	PrimaryExpression	0		5668490	1					
ANR	5668735	ReturnStatement	return code ;	1075:18:46793:46804	5668490	1	True				
ANR	5668736	Identifier	code		5668490	0					
ANR	5668737	ExpressionStatement	psrc_cm_initial = psrc_cm	1076:4:46810:46835	5668490	30	True				
ANR	5668738	AssignmentExpression	psrc_cm_initial = psrc_cm		5668490	0		=			
ANR	5668739	Identifier	psrc_cm_initial		5668490	0					
ANR	5668740	Identifier	psrc_cm		5668490	1					
ANR	5668741	ExpressionStatement	pnext = penum -> dda . pixel0	1078:4:46871:46896	5668490	31	True				
ANR	5668742	AssignmentExpression	pnext = penum -> dda . pixel0		5668490	0		=			
ANR	5668743	Identifier	pnext		5668490	0					
ANR	5668744	MemberAccess	penum -> dda . pixel0		5668490	1					
ANR	5668745	PtrMemberAccess	penum -> dda		5668490	0					
ANR	5668746	Identifier	penum		5668490	0					
ANR	5668747	Identifier	dda		5668490	1					
ANR	5668748	Identifier	pixel0		5668490	1					
ANR	5668749	ExpressionStatement	"dda_translate ( pnext . x , ( - fixed_epsilon ) )"	1079:4:46902:46943	5668490	32	True				
ANR	5668750	CallExpression	"dda_translate ( pnext . x , ( - fixed_epsilon ) )"		5668490	0					
ANR	5668751	Callee	dda_translate		5668490	0					
ANR	5668752	Identifier	dda_translate		5668490	0					
ANR	5668753	ArgumentList	pnext . x		5668490	1					
ANR	5668754	Argument	pnext . x		5668490	0					
ANR	5668755	MemberAccess	pnext . x		5668490	0					
ANR	5668756	Identifier	pnext		5668490	0					
ANR	5668757	Identifier	x		5668490	1					
ANR	5668758	Argument	- fixed_epsilon		5668490	1					
ANR	5668759	UnaryOperationExpression	- fixed_epsilon		5668490	0					
ANR	5668760	UnaryOperator	-		5668490	0					
ANR	5668761	Identifier	fixed_epsilon		5668490	1					
ANR	5668762	ExpressionStatement	xprev = dda_current ( pnext . x )	1080:4:46949:46977	5668490	33	True				
ANR	5668763	AssignmentExpression	xprev = dda_current ( pnext . x )		5668490	0		=			
ANR	5668764	Identifier	xprev		5668490	0					
ANR	5668765	CallExpression	dda_current ( pnext . x )		5668490	1					
ANR	5668766	Callee	dda_current		5668490	0					
ANR	5668767	Identifier	dda_current		5668490	0					
ANR	5668768	ArgumentList	pnext . x		5668490	1					
ANR	5668769	Argument	pnext . x		5668490	0					
ANR	5668770	MemberAccess	pnext . x		5668490	0					
ANR	5668771	Identifier	pnext		5668490	0					
ANR	5668772	Identifier	x		5668490	1					
ANR	5668773	ExpressionStatement	yprev = dda_current ( pnext . y )	1081:4:46983:47011	5668490	34	True				
ANR	5668774	AssignmentExpression	yprev = dda_current ( pnext . y )		5668490	0		=			
ANR	5668775	Identifier	yprev		5668490	0					
ANR	5668776	CallExpression	dda_current ( pnext . y )		5668490	1					
ANR	5668777	Callee	dda_current		5668490	0					
ANR	5668778	Identifier	dda_current		5668490	0					
ANR	5668779	ArgumentList	pnext . y		5668490	1					
ANR	5668780	Argument	pnext . y		5668490	0					
ANR	5668781	MemberAccess	pnext . y		5668490	0					
ANR	5668782	Identifier	pnext		5668490	0					
ANR	5668783	Identifier	y		5668490	1					
ANR	5668784	ExpressionStatement	pdyx = dda_current ( penum -> dda . row . x ) - penum -> cur . x	1082:4:47017:47068	5668490	35	True				
ANR	5668785	AssignmentExpression	pdyx = dda_current ( penum -> dda . row . x ) - penum -> cur . x		5668490	0		=			
ANR	5668786	Identifier	pdyx		5668490	0					
ANR	5668787	AdditiveExpression	dda_current ( penum -> dda . row . x ) - penum -> cur . x		5668490	1		-			
ANR	5668788	CallExpression	dda_current ( penum -> dda . row . x )		5668490	0					
ANR	5668789	Callee	dda_current		5668490	0					
ANR	5668790	Identifier	dda_current		5668490	0					
ANR	5668791	ArgumentList	penum -> dda . row . x		5668490	1					
ANR	5668792	Argument	penum -> dda . row . x		5668490	0					
ANR	5668793	MemberAccess	penum -> dda . row . x		5668490	0					
ANR	5668794	MemberAccess	penum -> dda . row		5668490	0					
ANR	5668795	PtrMemberAccess	penum -> dda		5668490	0					
ANR	5668796	Identifier	penum		5668490	0					
ANR	5668797	Identifier	dda		5668490	1					
ANR	5668798	Identifier	row		5668490	1					
ANR	5668799	Identifier	x		5668490	1					
ANR	5668800	MemberAccess	penum -> cur . x		5668490	1					
ANR	5668801	PtrMemberAccess	penum -> cur		5668490	0					
ANR	5668802	Identifier	penum		5668490	0					
ANR	5668803	Identifier	cur		5668490	1					
ANR	5668804	Identifier	x		5668490	1					
ANR	5668805	ExpressionStatement	pdyy = dda_current ( penum -> dda . row . y ) - penum -> cur . y	1083:4:47074:47125	5668490	36	True				
ANR	5668806	AssignmentExpression	pdyy = dda_current ( penum -> dda . row . y ) - penum -> cur . y		5668490	0		=			
ANR	5668807	Identifier	pdyy		5668490	0					
ANR	5668808	AdditiveExpression	dda_current ( penum -> dda . row . y ) - penum -> cur . y		5668490	1		-			
ANR	5668809	CallExpression	dda_current ( penum -> dda . row . y )		5668490	0					
ANR	5668810	Callee	dda_current		5668490	0					
ANR	5668811	Identifier	dda_current		5668490	0					
ANR	5668812	ArgumentList	penum -> dda . row . y		5668490	1					
ANR	5668813	Argument	penum -> dda . row . y		5668490	0					
ANR	5668814	MemberAccess	penum -> dda . row . y		5668490	0					
ANR	5668815	MemberAccess	penum -> dda . row		5668490	0					
ANR	5668816	PtrMemberAccess	penum -> dda		5668490	0					
ANR	5668817	Identifier	penum		5668490	0					
ANR	5668818	Identifier	dda		5668490	1					
ANR	5668819	Identifier	row		5668490	1					
ANR	5668820	Identifier	y		5668490	1					
ANR	5668821	MemberAccess	penum -> cur . y		5668490	1					
ANR	5668822	PtrMemberAccess	penum -> cur		5668490	0					
ANR	5668823	Identifier	penum		5668490	0					
ANR	5668824	Identifier	cur		5668490	1					
ANR	5668825	Identifier	y		5668490	1					
ANR	5668826	ExpressionStatement	"if_debug5m ( 'b' , penum -> memory , ""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"" , penum -> y , data_x , w , fixed2float ( xprev ) , fixed2float ( yprev ) )"	1084:4:47131:47277	5668490	37	True				
ANR	5668827	CallExpression	"if_debug5m ( 'b' , penum -> memory , ""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"" , penum -> y , data_x , w , fixed2float ( xprev ) , fixed2float ( yprev ) )"		5668490	0					
ANR	5668828	Callee	if_debug5m		5668490	0					
ANR	5668829	Identifier	if_debug5m		5668490	0					
ANR	5668830	ArgumentList	'b'		5668490	1					
ANR	5668831	Argument	'b'		5668490	0					
ANR	5668832	PrimaryExpression	'b'		5668490	0					
ANR	5668833	Argument	penum -> memory		5668490	1					
ANR	5668834	PtrMemberAccess	penum -> memory		5668490	0					
ANR	5668835	Identifier	penum		5668490	0					
ANR	5668836	Identifier	memory		5668490	1					
ANR	5668837	Argument	"""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"""		5668490	2					
ANR	5668838	PrimaryExpression	"""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"""		5668490	0					
ANR	5668839	Argument	penum -> y		5668490	3					
ANR	5668840	PtrMemberAccess	penum -> y		5668490	0					
ANR	5668841	Identifier	penum		5668490	0					
ANR	5668842	Identifier	y		5668490	1					
ANR	5668843	Argument	data_x		5668490	4					
ANR	5668844	Identifier	data_x		5668490	0					
ANR	5668845	Argument	w		5668490	5					
ANR	5668846	Identifier	w		5668490	0					
ANR	5668847	Argument	fixed2float ( xprev )		5668490	6					
ANR	5668848	CallExpression	fixed2float ( xprev )		5668490	0					
ANR	5668849	Callee	fixed2float		5668490	0					
ANR	5668850	Identifier	fixed2float		5668490	0					
ANR	5668851	ArgumentList	xprev		5668490	1					
ANR	5668852	Argument	xprev		5668490	0					
ANR	5668853	Identifier	xprev		5668490	0					
ANR	5668854	Argument	fixed2float ( yprev )		5668490	7					
ANR	5668855	CallExpression	fixed2float ( yprev )		5668490	0					
ANR	5668856	Callee	fixed2float		5668490	0					
ANR	5668857	Identifier	fixed2float		5668490	0					
ANR	5668858	ArgumentList	yprev		5668490	1					
ANR	5668859	Argument	yprev		5668490	0					
ANR	5668860	Identifier	yprev		5668490	0					
ANR	5668861	ExpressionStatement	prev_cm [ 0 ] = ~psrc_cm [ 0 ]	1086:4:47283:47307	5668490	38	True				
ANR	5668862	AssignmentExpression	prev_cm [ 0 ] = ~psrc_cm [ 0 ]		5668490	0		=			
ANR	5668863	ArrayIndexing	prev_cm [ 0 ]		5668490	0					
ANR	5668864	Identifier	prev_cm		5668490	0					
ANR	5668865	PrimaryExpression	0		5668490	1					
ANR	5668866	ArrayIndexing	~psrc_cm [ 0 ]		5668490	1					
ANR	5668867	Identifier	~psrc_cm		5668490	0					
ANR	5668868	PrimaryExpression	0		5668490	1					
ANR	5668869	WhileStatement	while ( psrc_cm < bufend )		5668490	39					
ANR	5668870	Condition	psrc_cm < bufend	1087:11:47347:47362	5668490	0	True				
ANR	5668871	RelationalExpression	psrc_cm < bufend		5668490	0		<			
ANR	5668872	Identifier	psrc_cm		5668490	0					
ANR	5668873	Identifier	bufend		5668490	1					
ANR	5668874	CompoundStatement		42:29:1714:1714	5668490	1					
ANR	5668875	ExpressionStatement	dda_next ( pnext . x )	1088:8:47375:47392	5668490	0	True				
ANR	5668876	CallExpression	dda_next ( pnext . x )		5668490	0					
ANR	5668877	Callee	dda_next		5668490	0					
ANR	5668878	Identifier	dda_next		5668490	0					
ANR	5668879	ArgumentList	pnext . x		5668490	1					
ANR	5668880	Argument	pnext . x		5668490	0					
ANR	5668881	MemberAccess	pnext . x		5668490	0					
ANR	5668882	Identifier	pnext		5668490	0					
ANR	5668883	Identifier	x		5668490	1					
ANR	5668884	ExpressionStatement	dda_next ( pnext . y )	1089:8:47402:47419	5668490	1	True				
ANR	5668885	CallExpression	dda_next ( pnext . y )		5668490	0					
ANR	5668886	Callee	dda_next		5668490	0					
ANR	5668887	Identifier	dda_next		5668490	0					
ANR	5668888	ArgumentList	pnext . y		5668490	1					
ANR	5668889	Argument	pnext . y		5668490	0					
ANR	5668890	MemberAccess	pnext . y		5668490	0					
ANR	5668891	Identifier	pnext		5668490	0					
ANR	5668892	Identifier	y		5668490	1					
ANR	5668893	ExpressionStatement	xpos = dda_current ( pnext . x )	1090:8:47429:47456	5668490	2	True				
ANR	5668894	AssignmentExpression	xpos = dda_current ( pnext . x )		5668490	0		=			
ANR	5668895	Identifier	xpos		5668490	0					
ANR	5668896	CallExpression	dda_current ( pnext . x )		5668490	1					
ANR	5668897	Callee	dda_current		5668490	0					
ANR	5668898	Identifier	dda_current		5668490	0					
ANR	5668899	ArgumentList	pnext . x		5668490	1					
ANR	5668900	Argument	pnext . x		5668490	0					
ANR	5668901	MemberAccess	pnext . x		5668490	0					
ANR	5668902	Identifier	pnext		5668490	0					
ANR	5668903	Identifier	x		5668490	1					
ANR	5668904	ExpressionStatement	ypos = dda_current ( pnext . y )	1091:8:47466:47493	5668490	3	True				
ANR	5668905	AssignmentExpression	ypos = dda_current ( pnext . y )		5668490	0		=			
ANR	5668906	Identifier	ypos		5668490	0					
ANR	5668907	CallExpression	dda_current ( pnext . y )		5668490	1					
ANR	5668908	Callee	dda_current		5668490	0					
ANR	5668909	Identifier	dda_current		5668490	0					
ANR	5668910	ArgumentList	pnext . y		5668490	1					
ANR	5668911	Argument	pnext . y		5668490	0					
ANR	5668912	MemberAccess	pnext . y		5668490	0					
ANR	5668913	Identifier	pnext		5668490	0					
ANR	5668914	Identifier	y		5668490	1					
ANR	5668915	IfStatement	"if ( memcmp ( prev_cm , psrc_cm , spp_cm ) != 0 )"		5668490	4					
ANR	5668916	Condition	"memcmp ( prev_cm , psrc_cm , spp_cm ) != 0"	1093:12:47508:47544	5668490	0	True				
ANR	5668917	EqualityExpression	"memcmp ( prev_cm , psrc_cm , spp_cm ) != 0"		5668490	0		!=			
ANR	5668918	CallExpression	"memcmp ( prev_cm , psrc_cm , spp_cm )"		5668490	0					
ANR	5668919	Callee	memcmp		5668490	0					
ANR	5668920	Identifier	memcmp		5668490	0					
ANR	5668921	ArgumentList	prev_cm		5668490	1					
ANR	5668922	Argument	prev_cm		5668490	0					
ANR	5668923	Identifier	prev_cm		5668490	0					
ANR	5668924	Argument	psrc_cm		5668490	1					
ANR	5668925	Identifier	psrc_cm		5668490	0					
ANR	5668926	Argument	spp_cm		5668490	2					
ANR	5668927	Identifier	spp_cm		5668490	0					
ANR	5668928	PrimaryExpression	0		5668490	1					
ANR	5668929	CompoundStatement		49:8:1904:1904	5668490	1					
ANR	5668930	ForStatement	for ( k = 0 ; k < spp_cm ; k ++ )		5668490	0					
ANR	5668931	ForInit	k = 0 ;	1096:17:47617:47622	5668490	0	True				
ANR	5668932	AssignmentExpression	k = 0		5668490	0		=			
ANR	5668933	Identifier	k		5668490	0					
ANR	5668934	PrimaryExpression	0		5668490	1					
ANR	5668935	Condition	k < spp_cm	1096:24:47624:47633	5668490	1	True				
ANR	5668936	RelationalExpression	k < spp_cm		5668490	0		<			
ANR	5668937	Identifier	k		5668490	0					
ANR	5668938	Identifier	spp_cm		5668490	1					
ANR	5668939	PostIncDecOperationExpression	k ++	1096:36:47636:47638	5668490	2	True				
ANR	5668940	Identifier	k		5668490	0					
ANR	5668941	IncDec	++		5668490	1					
ANR	5668942	CompoundStatement		51:41:1990:1990	5668490	3					
ANR	5668943	ExpressionStatement	conc [ k ] = gx_color_value_from_byte ( psrc_cm [ k ] )	1097:16:47659:47705	5668490	0	True				
ANR	5668944	AssignmentExpression	conc [ k ] = gx_color_value_from_byte ( psrc_cm [ k ] )		5668490	0		=			
ANR	5668945	ArrayIndexing	conc [ k ]		5668490	0					
ANR	5668946	Identifier	conc		5668490	0					
ANR	5668947	Identifier	k		5668490	1					
ANR	5668948	CallExpression	gx_color_value_from_byte ( psrc_cm [ k ] )		5668490	1					
ANR	5668949	Callee	gx_color_value_from_byte		5668490	0					
ANR	5668950	Identifier	gx_color_value_from_byte		5668490	0					
ANR	5668951	ArgumentList	psrc_cm [ k ]		5668490	1					
ANR	5668952	Argument	psrc_cm [ k ]		5668490	0					
ANR	5668953	ArrayIndexing	psrc_cm [ k ]		5668490	0					
ANR	5668954	Identifier	psrc_cm		5668490	0					
ANR	5668955	Identifier	k		5668490	1					
ANR	5668956	ExpressionStatement	mapper ( & data )	1099:12:47733:47746	5668490	1	True				
ANR	5668957	CallExpression	mapper ( & data )		5668490	0					
ANR	5668958	Callee	mapper		5668490	0					
ANR	5668959	Identifier	mapper		5668490	0					
ANR	5668960	ArgumentList	& data		5668490	1					
ANR	5668961	Argument	& data		5668490	0					
ANR	5668962	UnaryOperationExpression	& data		5668490	0					
ANR	5668963	UnaryOperator	&		5668490	0					
ANR	5668964	Identifier	data		5668490	1					
ANR	5668965	ExpressionStatement	"code = ( * dev_proc ( dev , fill_parallelogram ) ) ( dev , xprev , yprev , xpos - xprev , ypos - yprev , pdyx , pdyy , & data . devc , lop )"	1104:8:47872:48033	5668490	5	True				
ANR	5668966	AssignmentExpression	"code = ( * dev_proc ( dev , fill_parallelogram ) ) ( dev , xprev , yprev , xpos - xprev , ypos - yprev , pdyx , pdyy , & data . devc , lop )"		5668490	0		=			
ANR	5668967	Identifier	code		5668490	0					
ANR	5668968	CallExpression	"( * dev_proc ( dev , fill_parallelogram ) ) ( dev , xprev , yprev , xpos - xprev , ypos - yprev , pdyx , pdyy , & data . devc , lop )"		5668490	1					
ANR	5668969	Callee	"* dev_proc ( dev , fill_parallelogram )"		5668490	0					
ANR	5668970	UnaryOperationExpression	"* dev_proc ( dev , fill_parallelogram )"		5668490	0					
ANR	5668971	UnaryOperator	*		5668490	0					
ANR	5668972	CallExpression	"dev_proc ( dev , fill_parallelogram )"		5668490	1					
ANR	5668973	Callee	dev_proc		5668490	0					
ANR	5668974	Identifier	dev_proc		5668490	0					
ANR	5668975	ArgumentList	dev		5668490	1					
ANR	5668976	Argument	dev		5668490	0					
ANR	5668977	Identifier	dev		5668490	0					
ANR	5668978	Argument	fill_parallelogram		5668490	1					
ANR	5668979	Identifier	fill_parallelogram		5668490	0					
ANR	5668980	ArgumentList	dev		5668490	1					
ANR	5668981	Argument	dev		5668490	0					
ANR	5668982	Identifier	dev		5668490	0					
ANR	5668983	Argument	xprev		5668490	1					
ANR	5668984	Identifier	xprev		5668490	0					
ANR	5668985	Argument	yprev		5668490	2					
ANR	5668986	Identifier	yprev		5668490	0					
ANR	5668987	Argument	xpos - xprev		5668490	3					
ANR	5668988	AdditiveExpression	xpos - xprev		5668490	0		-			
ANR	5668989	Identifier	xpos		5668490	0					
ANR	5668990	Identifier	xprev		5668490	1					
ANR	5668991	Argument	ypos - yprev		5668490	4					
ANR	5668992	AdditiveExpression	ypos - yprev		5668490	0		-			
ANR	5668993	Identifier	ypos		5668490	0					
ANR	5668994	Identifier	yprev		5668490	1					
ANR	5668995	Argument	pdyx		5668490	5					
ANR	5668996	Identifier	pdyx		5668490	0					
ANR	5668997	Argument	pdyy		5668490	6					
ANR	5668998	Identifier	pdyy		5668490	0					
ANR	5668999	Argument	& data . devc		5668490	7					
ANR	5669000	UnaryOperationExpression	& data . devc		5668490	0					
ANR	5669001	UnaryOperator	&		5668490	0					
ANR	5669002	MemberAccess	data . devc		5668490	1					
ANR	5669003	Identifier	data		5668490	0					
ANR	5669004	Identifier	devc		5668490	1					
ANR	5669005	Argument	lop		5668490	8					
ANR	5669006	Identifier	lop		5668490	0					
ANR	5669007	ExpressionStatement	xprev = xpos	1107:8:48043:48055	5668490	6	True				
ANR	5669008	AssignmentExpression	xprev = xpos		5668490	0		=			
ANR	5669009	Identifier	xprev		5668490	0					
ANR	5669010	Identifier	xpos		5668490	1					
ANR	5669011	ExpressionStatement	yprev = ypos	1108:8:48065:48077	5668490	7	True				
ANR	5669012	AssignmentExpression	yprev = ypos		5668490	0		=			
ANR	5669013	Identifier	yprev		5668490	0					
ANR	5669014	Identifier	ypos		5668490	1					
ANR	5669015	IfStatement	if ( code < 0 )		5668490	8					
ANR	5669016	Condition	code < 0	1109:12:48091:48098	5668490	0	True				
ANR	5669017	RelationalExpression	code < 0		5668490	0		<			
ANR	5669018	Identifier	code		5668490	0					
ANR	5669019	PrimaryExpression	0		5668490	1					
ANR	5669020	GotoStatement	goto err ;	1110:12:48113:48121	5668490	1	True				
ANR	5669021	Identifier	err		5668490	0					
ANR	5669022	ExpressionStatement	prev_cm = psrc_cm	1111:8:48131:48148	5668490	9	True				
ANR	5669023	AssignmentExpression	prev_cm = psrc_cm		5668490	0		=			
ANR	5669024	Identifier	prev_cm		5668490	0					
ANR	5669025	Identifier	psrc_cm		5668490	1					
ANR	5669026	ExpressionStatement	psrc_cm += spp_cm	1112:8:48158:48175	5668490	10	True				
ANR	5669027	AssignmentExpression	psrc_cm += spp_cm		5668490	0		+=			
ANR	5669028	Identifier	psrc_cm		5668490	0					
ANR	5669029	Identifier	spp_cm		5668490	1					
ANR	5669030	IfStatement	if ( psrc_cm_start != NULL )		5668490	40					
ANR	5669031	Condition	psrc_cm_start != NULL	1115:8:48232:48252	5668490	0	True				
ANR	5669032	EqualityExpression	psrc_cm_start != NULL		5668490	0		!=			
ANR	5669033	Identifier	psrc_cm_start		5668490	0					
ANR	5669034	Identifier	NULL		5668490	1					
ANR	5669035	CompoundStatement		70:31:2604:2604	5668490	1					
ANR	5669036	ExpressionStatement	"gs_free_object ( pgs -> memory , ( byte * ) psrc_cm_start , ""image_render_color_icc"" )"	1116:8:48265:48341	5668490	0	True				
ANR	5669037	CallExpression	"gs_free_object ( pgs -> memory , ( byte * ) psrc_cm_start , ""image_render_color_icc"" )"		5668490	0					
ANR	5669038	Callee	gs_free_object		5668490	0					
ANR	5669039	Identifier	gs_free_object		5668490	0					
ANR	5669040	ArgumentList	pgs -> memory		5668490	1					
ANR	5669041	Argument	pgs -> memory		5668490	0					
ANR	5669042	PtrMemberAccess	pgs -> memory		5668490	0					
ANR	5669043	Identifier	pgs		5668490	0					
ANR	5669044	Identifier	memory		5668490	1					
ANR	5669045	Argument	( byte * ) psrc_cm_start		5668490	1					
ANR	5669046	CastExpression	( byte * ) psrc_cm_start		5668490	0					
ANR	5669047	CastTarget	byte *		5668490	0					
ANR	5669048	Identifier	psrc_cm_start		5668490	1					
ANR	5669049	Argument	"""image_render_color_icc"""		5668490	2					
ANR	5669050	PrimaryExpression	"""image_render_color_icc"""		5668490	0					
ANR	5669051	ReturnStatement	return ( code < 0 ? code : 1 ) ;	1118:4:48353:48381	5668490	41	True				
ANR	5669052	ConditionalExpression	code < 0 ? code : 1		5668490	0					
ANR	5669053	Condition	code < 0		5668490	0					
ANR	5669054	RelationalExpression	code < 0		5668490	0		<			
ANR	5669055	Identifier	code		5668490	0					
ANR	5669056	PrimaryExpression	0		5668490	1					
ANR	5669057	Identifier	code		5668490	1					
ANR	5669058	PrimaryExpression	1		5668490	2					
ANR	5669059	Label	err :	1120:0:48436:48439	5668490	42	True				
ANR	5669060	Identifier	err		5668490	0					
ANR	5669061	ExpressionStatement	"gs_free_object ( pgs -> memory , ( byte * ) psrc_cm_start , ""image_render_color_icc"" )"	1121:4:48445:48521	5668490	43	True				
ANR	5669062	CallExpression	"gs_free_object ( pgs -> memory , ( byte * ) psrc_cm_start , ""image_render_color_icc"" )"		5668490	0					
ANR	5669063	Callee	gs_free_object		5668490	0					
ANR	5669064	Identifier	gs_free_object		5668490	0					
ANR	5669065	ArgumentList	pgs -> memory		5668490	1					
ANR	5669066	Argument	pgs -> memory		5668490	0					
ANR	5669067	PtrMemberAccess	pgs -> memory		5668490	0					
ANR	5669068	Identifier	pgs		5668490	0					
ANR	5669069	Identifier	memory		5668490	1					
ANR	5669070	Argument	( byte * ) psrc_cm_start		5668490	1					
ANR	5669071	CastExpression	( byte * ) psrc_cm_start		5668490	0					
ANR	5669072	CastTarget	byte *		5668490	0					
ANR	5669073	Identifier	psrc_cm_start		5668490	1					
ANR	5669074	Argument	"""image_render_color_icc"""		5668490	2					
ANR	5669075	PrimaryExpression	"""image_render_color_icc"""		5668490	0					
ANR	5669076	ExpressionStatement	penum_orig -> used . x = ( psrc_cm - psrc_cm_initial ) / spp_cm	1122:4:48527:48584	5668490	44	True				
ANR	5669077	AssignmentExpression	penum_orig -> used . x = ( psrc_cm - psrc_cm_initial ) / spp_cm		5668490	0		=			
ANR	5669078	MemberAccess	penum_orig -> used . x		5668490	0					
ANR	5669079	PtrMemberAccess	penum_orig -> used		5668490	0					
ANR	5669080	Identifier	penum_orig		5668490	0					
ANR	5669081	Identifier	used		5668490	1					
ANR	5669082	Identifier	x		5668490	1					
ANR	5669083	MultiplicativeExpression	( psrc_cm - psrc_cm_initial ) / spp_cm		5668490	1		/			
ANR	5669084	AdditiveExpression	psrc_cm - psrc_cm_initial		5668490	0		-			
ANR	5669085	Identifier	psrc_cm		5668490	0					
ANR	5669086	Identifier	psrc_cm_initial		5668490	1					
ANR	5669087	Identifier	spp_cm		5668490	1					
ANR	5669088	ExpressionStatement	penum_orig -> used . y = 0	1123:4:48590:48612	5668490	45	True				
ANR	5669089	AssignmentExpression	penum_orig -> used . y = 0		5668490	0		=			
ANR	5669090	MemberAccess	penum_orig -> used . y		5668490	0					
ANR	5669091	PtrMemberAccess	penum_orig -> used		5668490	0					
ANR	5669092	Identifier	penum_orig		5668490	0					
ANR	5669093	Identifier	used		5668490	1					
ANR	5669094	Identifier	y		5668490	1					
ANR	5669095	PrimaryExpression	0		5668490	1					
ANR	5669096	ReturnStatement	return code ;	1124:4:48618:48629	5668490	46	True				
ANR	5669097	Identifier	code		5668490	0					
ANR	5669098	ReturnType	static int		5668490	1					
ANR	5669099	Identifier	image_render_color_icc_skew		5668490	2					
ANR	5669100	ParameterList	"gx_image_enum * penum_orig , const byte * buffer , int data_x , uint w , int h , gx_device * dev"		5668490	3					
ANR	5669101	Parameter	gx_image_enum * penum_orig	1044:28:45540:45564	5668490	0	True				
ANR	5669102	ParameterType	gx_image_enum *		5668490	0					
ANR	5669103	Identifier	penum_orig		5668490	1					
ANR	5669104	Parameter	const byte * buffer	1044:55:45567:45584	5668490	1	True				
ANR	5669105	ParameterType	const byte *		5668490	0					
ANR	5669106	Identifier	buffer		5668490	1					
ANR	5669107	Parameter	int data_x	1044:75:45587:45596	5668490	2	True				
ANR	5669108	ParameterType	int		5668490	0					
ANR	5669109	Identifier	data_x		5668490	1					
ANR	5669110	Parameter	uint w	1045:19:45618:45623	5668490	3	True				
ANR	5669111	ParameterType	uint		5668490	0					
ANR	5669112	Identifier	w		5668490	1					
ANR	5669113	Parameter	int h	1045:27:45626:45630	5668490	4	True				
ANR	5669114	ParameterType	int		5668490	0					
ANR	5669115	Identifier	h		5668490	1					
ANR	5669116	Parameter	gx_device * dev	1045:34:45633:45647	5668490	5	True				
ANR	5669117	ParameterType	gx_device *		5668490	0					
ANR	5669118	Identifier	dev		5668490	1					
ANR	5669119	CFGEntryNode	ENTRY		5668490		True				
ANR	5669120	CFGExitNode	EXIT		5668490		True				
ANR	5669121	Symbol	penum -> dda . row		5668490						
ANR	5669122	Symbol	& data . devc		5668490						
ANR	5669123	Symbol	ypos		5668490						
ANR	5669124	Symbol	penum -> dda . pixel0		5668490						
ANR	5669125	Symbol	data		5668490						
ANR	5669126	Symbol	gs_color_select_source		5668490						
ANR	5669127	Symbol	* pgs		5668490						
ANR	5669128	Symbol	"* dev_proc ( dev , fill_parallelogram )"		5668490						
ANR	5669129	Symbol	conc		5668490						
ANR	5669130	Symbol	data_x		5668490						
ANR	5669131	Symbol	penum -> icc_setup . has_transfer		5668490						
ANR	5669132	Symbol	memcmp		5668490						
ANR	5669133	Symbol	dev		5668490						
ANR	5669134	Symbol	~psrc_cm		5668490						
ANR	5669135	Symbol	initial_run		5668490						
ANR	5669136	Symbol	gx_get_cmapper		5668490						
ANR	5669137	Symbol	buffer		5668490						
ANR	5669138	Symbol	GX_DEVICE_COLOR_MAX_COMPONENTS		5668490						
ANR	5669139	Symbol	fixed_epsilon		5668490						
ANR	5669140	Symbol	pdyy		5668490						
ANR	5669141	Symbol	& psrc_cm		5668490						
ANR	5669142	Symbol	NULL		5668490						
ANR	5669143	Symbol	must_halftone		5668490						
ANR	5669144	Symbol	pdyx		5668490						
ANR	5669145	Symbol	gx_color_value_from_byte		5668490						
ANR	5669146	Symbol	penum		5668490						
ANR	5669147	Symbol	& data		5668490						
ANR	5669148	Symbol	fill_parallelogram		5668490						
ANR	5669149	Symbol	spp		5668490						
ANR	5669150	Symbol	penum -> dda		5668490						
ANR	5669151	Symbol	penum -> icc_setup . must_halftone		5668490						
ANR	5669152	Symbol	dda_current		5668490						
ANR	5669153	Symbol	penum -> cur . y		5668490						
ANR	5669154	Symbol	penum -> cur . x		5668490						
ANR	5669155	Symbol	data . conc		5668490						
ANR	5669156	Symbol	pnext		5668490						
ANR	5669157	Symbol	psrc_cm_start		5668490						
ANR	5669158	Symbol	penum_orig -> used		5668490						
ANR	5669159	Symbol	psrc		5668490						
ANR	5669160	Symbol	* penum		5668490						
ANR	5669161	Symbol	code		5668490						
ANR	5669162	Symbol	* penum_orig		5668490						
ANR	5669163	Symbol	penum -> memory		5668490						
ANR	5669164	Symbol	penum_orig		5668490						
ANR	5669165	Symbol	* dev_proc		5668490						
ANR	5669166	Symbol	mapper		5668490						
ANR	5669167	Symbol	* conc		5668490						
ANR	5669168	Symbol	lop		5668490						
ANR	5669169	Symbol	& bufend		5668490						
ANR	5669170	Symbol	penum -> pgs		5668490						
ANR	5669171	Symbol	penum -> icc_setup		5668490						
ANR	5669172	Symbol	bufend		5668490						
ANR	5669173	Symbol	penum -> cur		5668490						
ANR	5669174	Symbol	* psrc_cm		5668490						
ANR	5669175	Symbol	dev_proc		5668490						
ANR	5669176	Symbol	* ~psrc_cm		5668490						
ANR	5669177	Symbol	pgs		5668490						
ANR	5669178	Symbol	pgs -> memory		5668490						
ANR	5669179	Symbol	psrc_cm_initial		5668490						
ANR	5669180	Symbol	penum -> spp		5668490						
ANR	5669181	Symbol	& spp_cm		5668490						
ANR	5669182	Symbol	xprev		5668490						
ANR	5669183	Symbol	xpos		5668490						
ANR	5669184	Symbol	fixed2float		5668490						
ANR	5669185	Symbol	penum -> log_op		5668490						
ANR	5669186	Symbol	h		5668490						
ANR	5669187	Symbol	false		5668490						
ANR	5669188	Symbol	* prev_cm		5668490						
ANR	5669189	Symbol	k		5668490						
ANR	5669190	Symbol	penum -> dda . row . x		5668490						
ANR	5669191	Symbol	penum_orig -> used . x		5668490						
ANR	5669192	Symbol	spp_cm		5668490						
ANR	5669193	Symbol	penum -> y		5668490						
ANR	5669194	Symbol	& psrc_cm_start		5668490						
ANR	5669195	Symbol	penum_orig -> used . y		5668490						
ANR	5669196	Symbol	yprev		5668490						
ANR	5669197	Symbol	image_color_icc_prep		5668490						
ANR	5669198	Symbol	pnext . y		5668490						
ANR	5669199	Symbol	penum -> dda . row . y		5668490						
ANR	5669200	Symbol	* k		5668490						
ANR	5669201	Symbol	w		5668490						
ANR	5669202	Symbol	pnext . x		5668490						
ANR	5669203	Symbol	psrc_cm		5668490						
ANR	5669204	Symbol	has_transfer		5668490						
ANR	5669205	Symbol	prev_cm		5668490						
ANR	5669206	Function	image_render_color_DeviceN	1130:0:48821:58246							
ANR	5669207	FunctionDef	"image_render_color_DeviceN (gx_image_enum * penum_orig , const byte * buffer , int data_x , uint w , int h , gx_device * dev)"		5669206	0					
ANR	5669208	CompoundStatement		1133:0:48969:58246	5669206	0					
ANR	5669209	Statement	const	1134:4:48975:48979	5669206	0	True				
ANR	5669210	Statement	gx_image_enum	1134:10:48981:48993	5669206	1	True				
ANR	5669211	Statement	*	1134:24:48995:48995	5669206	2	True				
ANR	5669212	Statement	const	1134:25:48996:49000	5669206	3	True				
ANR	5669213	ExpressionStatement	penum = penum_orig	1134:31:49002:49020	5669206	4	True				
ANR	5669214	AssignmentExpression	penum = penum_orig		5669206	0		=			
ANR	5669215	Identifier	penum		5669206	0					
ANR	5669216	Identifier	penum_orig		5669206	1					
ANR	5669217	IdentifierDeclStatement	const gs_gstate * pgs = penum -> pgs ;	1135:4:49050:49083	5669206	5	True				
ANR	5669218	IdentifierDecl	* pgs = penum -> pgs		5669206	0					
ANR	5669219	IdentifierDeclType	const gs_gstate *		5669206	0					
ANR	5669220	Identifier	pgs		5669206	1					
ANR	5669221	AssignmentExpression	* pgs = penum -> pgs		5669206	2		=			
ANR	5669222	Identifier	pgs		5669206	0					
ANR	5669223	PtrMemberAccess	penum -> pgs		5669206	1					
ANR	5669224	Identifier	penum		5669206	0					
ANR	5669225	Identifier	pgs		5669206	1					
ANR	5669226	IdentifierDeclStatement	gs_logical_operation_t lop = penum -> log_op ;	1136:4:49089:49131	5669206	6	True				
ANR	5669227	IdentifierDecl	lop = penum -> log_op		5669206	0					
ANR	5669228	IdentifierDeclType	gs_logical_operation_t		5669206	0					
ANR	5669229	Identifier	lop		5669206	1					
ANR	5669230	AssignmentExpression	lop = penum -> log_op		5669206	2		=			
ANR	5669231	Identifier	lop		5669206	0					
ANR	5669232	PtrMemberAccess	penum -> log_op		5669206	1					
ANR	5669233	Identifier	penum		5669206	0					
ANR	5669234	Identifier	log_op		5669206	1					
ANR	5669235	IdentifierDeclStatement	gx_dda_fixed_point pnext ;	1137:4:49137:49161	5669206	7	True				
ANR	5669236	IdentifierDecl	pnext		5669206	0					
ANR	5669237	IdentifierDeclType	gx_dda_fixed_point		5669206	0					
ANR	5669238	Identifier	pnext		5669206	1					
ANR	5669239	IdentifierDeclStatement	image_posture posture = penum -> posture ;	1138:4:49167:49205	5669206	8	True				
ANR	5669240	IdentifierDecl	posture = penum -> posture		5669206	0					
ANR	5669241	IdentifierDeclType	image_posture		5669206	0					
ANR	5669242	Identifier	posture		5669206	1					
ANR	5669243	AssignmentExpression	posture = penum -> posture		5669206	2		=			
ANR	5669244	Identifier	posture		5669206	0					
ANR	5669245	PtrMemberAccess	penum -> posture		5669206	1					
ANR	5669246	Identifier	penum		5669206	0					
ANR	5669247	Identifier	posture		5669206	1					
ANR	5669248	IdentifierDeclStatement	"fixed xprev , yprev ;"	1139:4:49211:49229	5669206	9	True				
ANR	5669249	IdentifierDecl	xprev		5669206	0					
ANR	5669250	IdentifierDeclType	fixed		5669206	0					
ANR	5669251	Identifier	xprev		5669206	1					
ANR	5669252	IdentifierDecl	yprev		5669206	1					
ANR	5669253	IdentifierDeclType	fixed		5669206	0					
ANR	5669254	Identifier	yprev		5669206	1					
ANR	5669255	IdentifierDeclStatement	"fixed pdyx , pdyy ;"	1140:4:49235:49251	5669206	10	True				
ANR	5669256	IdentifierDecl	pdyx		5669206	0					
ANR	5669257	IdentifierDeclType	fixed		5669206	0					
ANR	5669258	Identifier	pdyx		5669206	1					
ANR	5669259	IdentifierDecl	pdyy		5669206	1					
ANR	5669260	IdentifierDeclType	fixed		5669206	0					
ANR	5669261	Identifier	pdyy		5669206	1					
ANR	5669262	IdentifierDeclStatement	"int vci , vdi ;"	1141:4:49286:49298	5669206	11	True				
ANR	5669263	IdentifierDecl	vci		5669206	0					
ANR	5669264	IdentifierDeclType	int		5669206	0					
ANR	5669265	Identifier	vci		5669206	1					
ANR	5669266	IdentifierDecl	vdi		5669206	1					
ANR	5669267	IdentifierDeclType	int		5669206	0					
ANR	5669268	Identifier	vdi		5669206	1					
ANR	5669269	IdentifierDeclStatement	const gs_color_space * pcs = penum -> pcs ;	1142:4:49304:49342	5669206	12	True				
ANR	5669270	IdentifierDecl	* pcs = penum -> pcs		5669206	0					
ANR	5669271	IdentifierDeclType	const gs_color_space *		5669206	0					
ANR	5669272	Identifier	pcs		5669206	1					
ANR	5669273	AssignmentExpression	* pcs = penum -> pcs		5669206	2		=			
ANR	5669274	Identifier	pcs		5669206	0					
ANR	5669275	PtrMemberAccess	penum -> pcs		5669206	1					
ANR	5669276	Identifier	penum		5669206	0					
ANR	5669277	Identifier	pcs		5669206	1					
ANR	5669278	ExpressionStatement	cs_proc_remap_color ( ( * remap_color ) ) = pcs -> type -> remap_color	1143:4:49348:49408	5669206	13	True				
ANR	5669279	AssignmentExpression	cs_proc_remap_color ( ( * remap_color ) ) = pcs -> type -> remap_color		5669206	0		=			
ANR	5669280	CallExpression	cs_proc_remap_color ( ( * remap_color ) )		5669206	0					
ANR	5669281	Callee	cs_proc_remap_color		5669206	0					
ANR	5669282	Identifier	cs_proc_remap_color		5669206	0					
ANR	5669283	ArgumentList	* remap_color		5669206	1					
ANR	5669284	Argument	* remap_color		5669206	0					
ANR	5669285	UnaryOperationExpression	* remap_color		5669206	0					
ANR	5669286	UnaryOperator	*		5669206	0					
ANR	5669287	Identifier	remap_color		5669206	1					
ANR	5669288	PtrMemberAccess	pcs -> type -> remap_color		5669206	1					
ANR	5669289	PtrMemberAccess	pcs -> type		5669206	0					
ANR	5669290	Identifier	pcs		5669206	0					
ANR	5669291	Identifier	type		5669206	1					
ANR	5669292	Identifier	remap_color		5669206	1					
ANR	5669293	IdentifierDeclStatement	gs_client_color cc ;	1144:4:49414:49432	5669206	14	True				
ANR	5669294	IdentifierDecl	cc		5669206	0					
ANR	5669295	IdentifierDeclType	gs_client_color		5669206	0					
ANR	5669296	Identifier	cc		5669206	1					
ANR	5669297	IdentifierDeclStatement	gx_device_color devc1 ;	1145:4:49438:49459	5669206	15	True				
ANR	5669298	IdentifierDecl	devc1		5669206	0					
ANR	5669299	IdentifierDeclType	gx_device_color		5669206	0					
ANR	5669300	Identifier	devc1		5669206	1					
ANR	5669301	IdentifierDeclStatement	gx_device_color devc2 ;	1146:4:49465:49486	5669206	16	True				
ANR	5669302	IdentifierDecl	devc2		5669206	0					
ANR	5669303	IdentifierDeclType	gx_device_color		5669206	0					
ANR	5669304	Identifier	devc2		5669206	1					
ANR	5669305	IdentifierDeclStatement	gx_device_color * pdevc ;	1147:4:49492:49514	5669206	17	True				
ANR	5669306	IdentifierDecl	* pdevc		5669206	0					
ANR	5669307	IdentifierDeclType	gx_device_color *		5669206	0					
ANR	5669308	Identifier	pdevc		5669206	1					
ANR	5669309	IdentifierDeclStatement	gx_device_color * pdevc_next ;	1148:4:49520:49547	5669206	18	True				
ANR	5669310	IdentifierDecl	* pdevc_next		5669206	0					
ANR	5669311	IdentifierDeclType	gx_device_color *		5669206	0					
ANR	5669312	Identifier	pdevc_next		5669206	1					
ANR	5669313	IdentifierDeclStatement	gx_device_color * ptemp ;	1149:4:49553:49575	5669206	19	True				
ANR	5669314	IdentifierDecl	* ptemp		5669206	0					
ANR	5669315	IdentifierDeclType	gx_device_color *		5669206	0					
ANR	5669316	Identifier	ptemp		5669206	1					
ANR	5669317	IdentifierDeclStatement	int spp = penum -> spp ;	1150:4:49581:49601	5669206	20	True				
ANR	5669318	IdentifierDecl	spp = penum -> spp		5669206	0					
ANR	5669319	IdentifierDeclType	int		5669206	0					
ANR	5669320	Identifier	spp		5669206	1					
ANR	5669321	AssignmentExpression	spp = penum -> spp		5669206	2		=			
ANR	5669322	Identifier	spp		5669206	0					
ANR	5669323	PtrMemberAccess	penum -> spp		5669206	1					
ANR	5669324	Identifier	penum		5669206	0					
ANR	5669325	Identifier	spp		5669206	1					
ANR	5669326	IdentifierDeclStatement	const byte * psrc_initial = buffer + data_x * spp ;	1151:4:49607:49655	5669206	21	True				
ANR	5669327	IdentifierDecl	* psrc_initial = buffer + data_x * spp		5669206	0					
ANR	5669328	IdentifierDeclType	const byte *		5669206	0					
ANR	5669329	Identifier	psrc_initial		5669206	1					
ANR	5669330	AssignmentExpression	* psrc_initial = buffer + data_x * spp		5669206	2		=			
ANR	5669331	Identifier	psrc_initial		5669206	0					
ANR	5669332	AdditiveExpression	buffer + data_x * spp		5669206	1		+			
ANR	5669333	Identifier	buffer		5669206	0					
ANR	5669334	MultiplicativeExpression	data_x * spp		5669206	1		*			
ANR	5669335	Identifier	data_x		5669206	0					
ANR	5669336	Identifier	spp		5669206	1					
ANR	5669337	IdentifierDeclStatement	const byte * psrc = psrc_initial ;	1152:4:49661:49692	5669206	22	True				
ANR	5669338	IdentifierDecl	* psrc = psrc_initial		5669206	0					
ANR	5669339	IdentifierDeclType	const byte *		5669206	0					
ANR	5669340	Identifier	psrc		5669206	1					
ANR	5669341	AssignmentExpression	* psrc = psrc_initial		5669206	2		=			
ANR	5669342	Identifier	psrc_initial		5669206	0					
ANR	5669343	Identifier	psrc_initial		5669206	1					
ANR	5669344	IdentifierDeclStatement	const byte * rsrc = psrc + spp ;	1153:4:49698:49727	5669206	23	True				
ANR	5669345	IdentifierDecl	* rsrc = psrc + spp		5669206	0					
ANR	5669346	IdentifierDeclType	const byte *		5669206	0					
ANR	5669347	Identifier	rsrc		5669206	1					
ANR	5669348	AssignmentExpression	* rsrc = psrc + spp		5669206	2		=			
ANR	5669349	Identifier	rsrc		5669206	0					
ANR	5669350	AdditiveExpression	psrc + spp		5669206	1		+			
ANR	5669351	Identifier	psrc		5669206	0					
ANR	5669352	Identifier	spp		5669206	1					
ANR	5669353	IdentifierDeclStatement	fixed xrun ;	1154:4:49766:49776	5669206	24	True				
ANR	5669354	IdentifierDecl	xrun		5669206	0					
ANR	5669355	IdentifierDeclType	fixed		5669206	0					
ANR	5669356	Identifier	xrun		5669206	1					
ANR	5669357	IdentifierDeclStatement	fixed yrun ;	1155:4:49798:49808	5669206	25	True				
ANR	5669358	IdentifierDecl	yrun		5669206	0					
ANR	5669359	IdentifierDeclType	fixed		5669206	0					
ANR	5669360	Identifier	yrun		5669206	1					
ANR	5669361	IdentifierDeclStatement	int irun ;	1156:4:49830:49838	5669206	26	True				
ANR	5669362	IdentifierDecl	irun		5669206	0					
ANR	5669363	IdentifierDeclType	int		5669206	0					
ANR	5669364	Identifier	irun		5669206	1					
ANR	5669365	IdentifierDeclStatement	color_samples run ;	1157:4:49863:49880	5669206	27	True				
ANR	5669366	IdentifierDecl	run		5669206	0					
ANR	5669367	IdentifierDeclType	color_samples		5669206	0					
ANR	5669368	Identifier	run		5669206	1					
ANR	5669369	IdentifierDeclStatement	color_samples next ;	1158:4:49903:49921	5669206	28	True				
ANR	5669370	IdentifierDecl	next		5669206	0					
ANR	5669371	IdentifierDeclType	color_samples		5669206	0					
ANR	5669372	Identifier	next		5669206	1					
ANR	5669373	IdentifierDeclStatement	const byte * bufend = psrc + w ;	1159:4:49952:49981	5669206	29	True				
ANR	5669374	IdentifierDecl	* bufend = psrc + w		5669206	0					
ANR	5669375	IdentifierDeclType	const byte *		5669206	0					
ANR	5669376	Identifier	bufend		5669206	1					
ANR	5669377	AssignmentExpression	* bufend = psrc + w		5669206	2		=			
ANR	5669378	Identifier	bufend		5669206	0					
ANR	5669379	AdditiveExpression	psrc + w		5669206	1		+			
ANR	5669380	Identifier	psrc		5669206	0					
ANR	5669381	Identifier	w		5669206	1					
ANR	5669382	IdentifierDeclStatement	"int code = 0 , mcode = 0 ;"	1160:4:49987:50010	5669206	30	True				
ANR	5669383	IdentifierDecl	code = 0		5669206	0					
ANR	5669384	IdentifierDeclType	int		5669206	0					
ANR	5669385	Identifier	code		5669206	1					
ANR	5669386	AssignmentExpression	code = 0		5669206	2		=			
ANR	5669387	Identifier	code		5669206	0					
ANR	5669388	PrimaryExpression	0		5669206	1					
ANR	5669389	IdentifierDecl	mcode = 0		5669206	1					
ANR	5669390	IdentifierDeclType	int		5669206	0					
ANR	5669391	Identifier	mcode		5669206	1					
ANR	5669392	AssignmentExpression	mcode = 0		5669206	2		=			
ANR	5669393	Identifier	mcode		5669206	0					
ANR	5669394	PrimaryExpression	0		5669206	1					
ANR	5669395	IdentifierDeclStatement	int i ;	1161:4:50016:50021	5669206	31	True				
ANR	5669396	IdentifierDecl	i		5669206	0					
ANR	5669397	IdentifierDeclType	int		5669206	0					
ANR	5669398	Identifier	i		5669206	1					
ANR	5669399	IdentifierDeclStatement	bits32 mask = penum -> mask_color . mask ;	1162:4:50027:50063	5669206	32	True				
ANR	5669400	IdentifierDecl	mask = penum -> mask_color . mask		5669206	0					
ANR	5669401	IdentifierDeclType	bits32		5669206	0					
ANR	5669402	Identifier	mask		5669206	1					
ANR	5669403	AssignmentExpression	mask = penum -> mask_color . mask		5669206	2		=			
ANR	5669404	Identifier	mask		5669206	0					
ANR	5669405	MemberAccess	penum -> mask_color . mask		5669206	1					
ANR	5669406	PtrMemberAccess	penum -> mask_color		5669206	0					
ANR	5669407	Identifier	penum		5669206	0					
ANR	5669408	Identifier	mask_color		5669206	1					
ANR	5669409	Identifier	mask		5669206	1					
ANR	5669410	IdentifierDeclStatement	bits32 test = penum -> mask_color . test ;	1163:4:50069:50105	5669206	33	True				
ANR	5669411	IdentifierDecl	test = penum -> mask_color . test		5669206	0					
ANR	5669412	IdentifierDeclType	bits32		5669206	0					
ANR	5669413	Identifier	test		5669206	1					
ANR	5669414	AssignmentExpression	test = penum -> mask_color . test		5669206	2		=			
ANR	5669415	Identifier	test		5669206	0					
ANR	5669416	MemberAccess	penum -> mask_color . test		5669206	1					
ANR	5669417	PtrMemberAccess	penum -> mask_color		5669206	0					
ANR	5669418	Identifier	penum		5669206	0					
ANR	5669419	Identifier	mask_color		5669206	1					
ANR	5669420	Identifier	test		5669206	1					
ANR	5669421	IdentifierDeclStatement	bool lab_case = false ;	1164:4:50111:50132	5669206	34	True				
ANR	5669422	IdentifierDecl	lab_case = false		5669206	0					
ANR	5669423	IdentifierDeclType	bool		5669206	0					
ANR	5669424	Identifier	lab_case		5669206	1					
ANR	5669425	AssignmentExpression	lab_case = false		5669206	2		=			
ANR	5669426	Identifier	false		5669206	0					
ANR	5669427	Identifier	false		5669206	1					
ANR	5669428	IfStatement	if ( h == 0 )		5669206	35					
ANR	5669429	Condition	h == 0	1166:8:50143:50148	5669206	0	True				
ANR	5669430	EqualityExpression	h == 0		5669206	0		==			
ANR	5669431	Identifier	h		5669206	0					
ANR	5669432	PrimaryExpression	0		5669206	1					
ANR	5669433	ReturnStatement	return 0 ;	1167:8:50159:50167	5669206	1	True				
ANR	5669434	PrimaryExpression	0		5669206	0					
ANR	5669435	IfStatement	if ( gs_color_space_is_ICC ( pcs ) && pcs -> cmm_icc_profile_data != NULL && pcs -> cmm_icc_profile_data -> islab )		5669206	36					
ANR	5669436	Condition	gs_color_space_is_ICC ( pcs ) && pcs -> cmm_icc_profile_data != NULL && pcs -> cmm_icc_profile_data -> islab	1171:8:50321:50427	5669206	0	True				
ANR	5669437	AndExpression	gs_color_space_is_ICC ( pcs ) && pcs -> cmm_icc_profile_data != NULL && pcs -> cmm_icc_profile_data -> islab		5669206	0		&&			
ANR	5669438	CallExpression	gs_color_space_is_ICC ( pcs )		5669206	0					
ANR	5669439	Callee	gs_color_space_is_ICC		5669206	0					
ANR	5669440	Identifier	gs_color_space_is_ICC		5669206	0					
ANR	5669441	ArgumentList	pcs		5669206	1					
ANR	5669442	Argument	pcs		5669206	0					
ANR	5669443	Identifier	pcs		5669206	0					
ANR	5669444	AndExpression	pcs -> cmm_icc_profile_data != NULL && pcs -> cmm_icc_profile_data -> islab		5669206	1		&&			
ANR	5669445	EqualityExpression	pcs -> cmm_icc_profile_data != NULL		5669206	0		!=			
ANR	5669446	PtrMemberAccess	pcs -> cmm_icc_profile_data		5669206	0					
ANR	5669447	Identifier	pcs		5669206	0					
ANR	5669448	Identifier	cmm_icc_profile_data		5669206	1					
ANR	5669449	Identifier	NULL		5669206	1					
ANR	5669450	PtrMemberAccess	pcs -> cmm_icc_profile_data -> islab		5669206	1					
ANR	5669451	PtrMemberAccess	pcs -> cmm_icc_profile_data		5669206	0					
ANR	5669452	Identifier	pcs		5669206	0					
ANR	5669453	Identifier	cmm_icc_profile_data		5669206	1					
ANR	5669454	Identifier	islab		5669206	1					
ANR	5669455	CompoundStatement		40:42:1460:1460	5669206	1					
ANR	5669456	ExpressionStatement	remap_color = gx_remap_ICC_imagelab	1173:8:50440:50475	5669206	0	True				
ANR	5669457	AssignmentExpression	remap_color = gx_remap_ICC_imagelab		5669206	0		=			
ANR	5669458	Identifier	remap_color		5669206	0					
ANR	5669459	Identifier	gx_remap_ICC_imagelab		5669206	1					
ANR	5669460	ExpressionStatement	lab_case = true	1174:8:50485:50500	5669206	1	True				
ANR	5669461	AssignmentExpression	lab_case = true		5669206	0		=			
ANR	5669462	Identifier	lab_case		5669206	0					
ANR	5669463	Identifier	true		5669206	1					
ANR	5669464	ElseStatement	else		5669206	0					
ANR	5669465	CompoundStatement		43:11:1543:1543	5669206	0					
ANR	5669466	ExpressionStatement	remap_color = pcs -> type -> remap_color	1176:8:50523:50559	5669206	0	True				
ANR	5669467	AssignmentExpression	remap_color = pcs -> type -> remap_color		5669206	0		=			
ANR	5669468	Identifier	remap_color		5669206	0					
ANR	5669469	PtrMemberAccess	pcs -> type -> remap_color		5669206	1					
ANR	5669470	PtrMemberAccess	pcs -> type		5669206	0					
ANR	5669471	Identifier	pcs		5669206	0					
ANR	5669472	Identifier	type		5669206	1					
ANR	5669473	Identifier	remap_color		5669206	1					
ANR	5669474	ExpressionStatement	pdevc = & devc1	1178:4:50571:50585	5669206	37	True				
ANR	5669475	AssignmentExpression	pdevc = & devc1		5669206	0		=			
ANR	5669476	Identifier	pdevc		5669206	0					
ANR	5669477	UnaryOperationExpression	& devc1		5669206	1					
ANR	5669478	UnaryOperator	&		5669206	0					
ANR	5669479	Identifier	devc1		5669206	1					
ANR	5669480	ExpressionStatement	pdevc_next = & devc2	1179:4:50591:50610	5669206	38	True				
ANR	5669481	AssignmentExpression	pdevc_next = & devc2		5669206	0		=			
ANR	5669482	Identifier	pdevc_next		5669206	0					
ANR	5669483	UnaryOperationExpression	& devc2		5669206	1					
ANR	5669484	UnaryOperator	&		5669206	0					
ANR	5669485	Identifier	devc2		5669206	1					
ANR	5669486	IfStatement	"if ( dev_proc ( dev , dev_spec_op ) ( dev , gxdso_supports_devn , NULL , 0 ) )"		5669206	39					
ANR	5669487	Condition	"dev_proc ( dev , dev_spec_op ) ( dev , gxdso_supports_devn , NULL , 0 )"	1181:8:50660:50720	5669206	0	True				
ANR	5669488	CallExpression	"dev_proc ( dev , dev_spec_op ) ( dev , gxdso_supports_devn , NULL , 0 )"		5669206	0					
ANR	5669489	Callee	"dev_proc ( dev , dev_spec_op )"		5669206	0					
ANR	5669490	CallExpression	"dev_proc ( dev , dev_spec_op )"		5669206	0					
ANR	5669491	Callee	dev_proc		5669206	0					
ANR	5669492	Identifier	dev_proc		5669206	0					
ANR	5669493	ArgumentList	dev		5669206	1					
ANR	5669494	Argument	dev		5669206	0					
ANR	5669495	Identifier	dev		5669206	0					
ANR	5669496	Argument	dev_spec_op		5669206	1					
ANR	5669497	Identifier	dev_spec_op		5669206	0					
ANR	5669498	ArgumentList	dev		5669206	1					
ANR	5669499	Argument	dev		5669206	0					
ANR	5669500	Identifier	dev		5669206	0					
ANR	5669501	Argument	gxdso_supports_devn		5669206	1					
ANR	5669502	Identifier	gxdso_supports_devn		5669206	0					
ANR	5669503	Argument	NULL		5669206	2					
ANR	5669504	Identifier	NULL		5669206	0					
ANR	5669505	Argument	0		5669206	3					
ANR	5669506	PrimaryExpression	0		5669206	0					
ANR	5669507	CompoundStatement		49:71:1753:1753	5669206	1					
ANR	5669508	ForStatement	for ( i = 0 ; i < GS_CLIENT_COLOR_MAX_COMPONENTS ; i ++ )		5669206	0					
ANR	5669509	ForInit	i = 0 ;	1182:13:50738:50743	5669206	0	True				
ANR	5669510	AssignmentExpression	i = 0		5669206	0		=			
ANR	5669511	Identifier	i		5669206	0					
ANR	5669512	PrimaryExpression	0		5669206	1					
ANR	5669513	Condition	i < GS_CLIENT_COLOR_MAX_COMPONENTS	1182:20:50745:50778	5669206	1	True				
ANR	5669514	RelationalExpression	i < GS_CLIENT_COLOR_MAX_COMPONENTS		5669206	0		<			
ANR	5669515	Identifier	i		5669206	0					
ANR	5669516	Identifier	GS_CLIENT_COLOR_MAX_COMPONENTS		5669206	1					
ANR	5669517	PostIncDecOperationExpression	i ++	1182:56:50781:50783	5669206	2	True				
ANR	5669518	Identifier	i		5669206	0					
ANR	5669519	IncDec	++		5669206	1					
ANR	5669520	CompoundStatement		50:61:1816:1816	5669206	3					
ANR	5669521	ExpressionStatement	pdevc -> colors . devn . values [ i ] = 0	1183:12:50800:50832	5669206	0	True				
ANR	5669522	AssignmentExpression	pdevc -> colors . devn . values [ i ] = 0		5669206	0		=			
ANR	5669523	ArrayIndexing	pdevc -> colors . devn . values [ i ]		5669206	0					
ANR	5669524	MemberAccess	pdevc -> colors . devn . values		5669206	0					
ANR	5669525	MemberAccess	pdevc -> colors . devn		5669206	0					
ANR	5669526	PtrMemberAccess	pdevc -> colors		5669206	0					
ANR	5669527	Identifier	pdevc		5669206	0					
ANR	5669528	Identifier	colors		5669206	1					
ANR	5669529	Identifier	devn		5669206	1					
ANR	5669530	Identifier	values		5669206	1					
ANR	5669531	Identifier	i		5669206	1					
ANR	5669532	PrimaryExpression	0		5669206	1					
ANR	5669533	ExpressionStatement	pdevc_next -> colors . devn . values [ i ] = 0	1184:12:50846:50883	5669206	1	True				
ANR	5669534	AssignmentExpression	pdevc_next -> colors . devn . values [ i ] = 0		5669206	0		=			
ANR	5669535	ArrayIndexing	pdevc_next -> colors . devn . values [ i ]		5669206	0					
ANR	5669536	MemberAccess	pdevc_next -> colors . devn . values		5669206	0					
ANR	5669537	MemberAccess	pdevc_next -> colors . devn		5669206	0					
ANR	5669538	PtrMemberAccess	pdevc_next -> colors		5669206	0					
ANR	5669539	Identifier	pdevc_next		5669206	0					
ANR	5669540	Identifier	colors		5669206	1					
ANR	5669541	Identifier	devn		5669206	1					
ANR	5669542	Identifier	values		5669206	1					
ANR	5669543	Identifier	i		5669206	1					
ANR	5669544	PrimaryExpression	0		5669206	1					
ANR	5669545	ExpressionStatement	pdevc -> type = gx_dc_type_none	1188:4:50950:50979	5669206	40	True				
ANR	5669546	AssignmentExpression	pdevc -> type = gx_dc_type_none		5669206	0		=			
ANR	5669547	PtrMemberAccess	pdevc -> type		5669206	0					
ANR	5669548	Identifier	pdevc		5669206	0					
ANR	5669549	Identifier	type		5669206	1					
ANR	5669550	Identifier	gx_dc_type_none		5669206	1					
ANR	5669551	ExpressionStatement	pdevc_next -> type = gx_dc_type_none	1189:4:50985:51019	5669206	41	True				
ANR	5669552	AssignmentExpression	pdevc_next -> type = gx_dc_type_none		5669206	0		=			
ANR	5669553	PtrMemberAccess	pdevc_next -> type		5669206	0					
ANR	5669554	Identifier	pdevc_next		5669206	0					
ANR	5669555	Identifier	type		5669206	1					
ANR	5669556	Identifier	gx_dc_type_none		5669206	1					
ANR	5669557	ExpressionStatement	pnext = penum -> dda . pixel0	1190:4:51025:51050	5669206	42	True				
ANR	5669558	AssignmentExpression	pnext = penum -> dda . pixel0		5669206	0		=			
ANR	5669559	Identifier	pnext		5669206	0					
ANR	5669560	MemberAccess	penum -> dda . pixel0		5669206	1					
ANR	5669561	PtrMemberAccess	penum -> dda		5669206	0					
ANR	5669562	Identifier	penum		5669206	0					
ANR	5669563	Identifier	dda		5669206	1					
ANR	5669564	Identifier	pixel0		5669206	1					
ANR	5669565	ExpressionStatement	xrun = xprev = dda_current ( pnext . x )	1191:4:51056:51091	5669206	43	True				
ANR	5669566	AssignmentExpression	xrun = xprev = dda_current ( pnext . x )		5669206	0		=			
ANR	5669567	Identifier	xrun		5669206	0					
ANR	5669568	AssignmentExpression	xprev = dda_current ( pnext . x )		5669206	1		=			
ANR	5669569	Identifier	xprev		5669206	0					
ANR	5669570	CallExpression	dda_current ( pnext . x )		5669206	1					
ANR	5669571	Callee	dda_current		5669206	0					
ANR	5669572	Identifier	dda_current		5669206	0					
ANR	5669573	ArgumentList	pnext . x		5669206	1					
ANR	5669574	Argument	pnext . x		5669206	0					
ANR	5669575	MemberAccess	pnext . x		5669206	0					
ANR	5669576	Identifier	pnext		5669206	0					
ANR	5669577	Identifier	x		5669206	1					
ANR	5669578	ExpressionStatement	yrun = yprev = dda_current ( pnext . y )	1192:4:51097:51132	5669206	44	True				
ANR	5669579	AssignmentExpression	yrun = yprev = dda_current ( pnext . y )		5669206	0		=			
ANR	5669580	Identifier	yrun		5669206	0					
ANR	5669581	AssignmentExpression	yprev = dda_current ( pnext . y )		5669206	1		=			
ANR	5669582	Identifier	yprev		5669206	0					
ANR	5669583	CallExpression	dda_current ( pnext . y )		5669206	1					
ANR	5669584	Callee	dda_current		5669206	0					
ANR	5669585	Identifier	dda_current		5669206	0					
ANR	5669586	ArgumentList	pnext . y		5669206	1					
ANR	5669587	Argument	pnext . y		5669206	0					
ANR	5669588	MemberAccess	pnext . y		5669206	0					
ANR	5669589	Identifier	pnext		5669206	0					
ANR	5669590	Identifier	y		5669206	1					
ANR	5669591	ExpressionStatement	pdyx = dda_current ( penum -> dda . row . x ) - penum -> cur . x	1193:4:51138:51189	5669206	45	True				
ANR	5669592	AssignmentExpression	pdyx = dda_current ( penum -> dda . row . x ) - penum -> cur . x		5669206	0		=			
ANR	5669593	Identifier	pdyx		5669206	0					
ANR	5669594	AdditiveExpression	dda_current ( penum -> dda . row . x ) - penum -> cur . x		5669206	1		-			
ANR	5669595	CallExpression	dda_current ( penum -> dda . row . x )		5669206	0					
ANR	5669596	Callee	dda_current		5669206	0					
ANR	5669597	Identifier	dda_current		5669206	0					
ANR	5669598	ArgumentList	penum -> dda . row . x		5669206	1					
ANR	5669599	Argument	penum -> dda . row . x		5669206	0					
ANR	5669600	MemberAccess	penum -> dda . row . x		5669206	0					
ANR	5669601	MemberAccess	penum -> dda . row		5669206	0					
ANR	5669602	PtrMemberAccess	penum -> dda		5669206	0					
ANR	5669603	Identifier	penum		5669206	0					
ANR	5669604	Identifier	dda		5669206	1					
ANR	5669605	Identifier	row		5669206	1					
ANR	5669606	Identifier	x		5669206	1					
ANR	5669607	MemberAccess	penum -> cur . x		5669206	1					
ANR	5669608	PtrMemberAccess	penum -> cur		5669206	0					
ANR	5669609	Identifier	penum		5669206	0					
ANR	5669610	Identifier	cur		5669206	1					
ANR	5669611	Identifier	x		5669206	1					
ANR	5669612	ExpressionStatement	pdyy = dda_current ( penum -> dda . row . y ) - penum -> cur . y	1194:4:51195:51246	5669206	46	True				
ANR	5669613	AssignmentExpression	pdyy = dda_current ( penum -> dda . row . y ) - penum -> cur . y		5669206	0		=			
ANR	5669614	Identifier	pdyy		5669206	0					
ANR	5669615	AdditiveExpression	dda_current ( penum -> dda . row . y ) - penum -> cur . y		5669206	1		-			
ANR	5669616	CallExpression	dda_current ( penum -> dda . row . y )		5669206	0					
ANR	5669617	Callee	dda_current		5669206	0					
ANR	5669618	Identifier	dda_current		5669206	0					
ANR	5669619	ArgumentList	penum -> dda . row . y		5669206	1					
ANR	5669620	Argument	penum -> dda . row . y		5669206	0					
ANR	5669621	MemberAccess	penum -> dda . row . y		5669206	0					
ANR	5669622	MemberAccess	penum -> dda . row		5669206	0					
ANR	5669623	PtrMemberAccess	penum -> dda		5669206	0					
ANR	5669624	Identifier	penum		5669206	0					
ANR	5669625	Identifier	dda		5669206	1					
ANR	5669626	Identifier	row		5669206	1					
ANR	5669627	Identifier	y		5669206	1					
ANR	5669628	MemberAccess	penum -> cur . y		5669206	1					
ANR	5669629	PtrMemberAccess	penum -> cur		5669206	0					
ANR	5669630	Identifier	penum		5669206	0					
ANR	5669631	Identifier	cur		5669206	1					
ANR	5669632	Identifier	y		5669206	1					
ANR	5669633	SwitchStatement	switch ( posture )		5669206	47					
ANR	5669634	Condition	posture	1195:12:51260:51266	5669206	0	True				
ANR	5669635	Identifier	posture		5669206	0					
ANR	5669636	CompoundStatement		63:21:2299:2299	5669206	1					
ANR	5669637	Label	case image_portrait :	1196:8:51279:51298	5669206	0	True				
ANR	5669638	Identifier	image_portrait		5669206	0					
ANR	5669639	ExpressionStatement	"vci = penum -> yci , vdi = penum -> hci"	1197:12:51312:51346	5669206	1	True				
ANR	5669640	Expression	"vci = penum -> yci , vdi = penum -> hci"		5669206	0					
ANR	5669641	AssignmentExpression	vci = penum -> yci		5669206	0		=			
ANR	5669642	Identifier	vci		5669206	0					
ANR	5669643	PtrMemberAccess	penum -> yci		5669206	1					
ANR	5669644	Identifier	penum		5669206	0					
ANR	5669645	Identifier	yci		5669206	1					
ANR	5669646	AssignmentExpression	vdi = penum -> hci		5669206	1		=			
ANR	5669647	Identifier	vdi		5669206	0					
ANR	5669648	PtrMemberAccess	penum -> hci		5669206	1					
ANR	5669649	Identifier	penum		5669206	0					
ANR	5669650	Identifier	hci		5669206	1					
ANR	5669651	ExpressionStatement	irun = fixed2int_var_rounded ( xrun )	1198:12:51360:51394	5669206	2	True				
ANR	5669652	AssignmentExpression	irun = fixed2int_var_rounded ( xrun )		5669206	0		=			
ANR	5669653	Identifier	irun		5669206	0					
ANR	5669654	CallExpression	fixed2int_var_rounded ( xrun )		5669206	1					
ANR	5669655	Callee	fixed2int_var_rounded		5669206	0					
ANR	5669656	Identifier	fixed2int_var_rounded		5669206	0					
ANR	5669657	ArgumentList	xrun		5669206	1					
ANR	5669658	Argument	xrun		5669206	0					
ANR	5669659	Identifier	xrun		5669206	0					
ANR	5669660	BreakStatement	break ;	1199:12:51408:51413	5669206	3	True				
ANR	5669661	Label	case image_landscape :	1200:8:51423:51443	5669206	4	True				
ANR	5669662	Identifier	image_landscape		5669206	0					
ANR	5669663	Label	default :	1201:8:51453:51460	5669206	5	True				
ANR	5669664	Identifier	default		5669206	0					
ANR	5669665	ExpressionStatement	"vci = penum -> xci , vdi = penum -> wci"	1202:12:51526:51560	5669206	6	True				
ANR	5669666	Expression	"vci = penum -> xci , vdi = penum -> wci"		5669206	0					
ANR	5669667	AssignmentExpression	vci = penum -> xci		5669206	0		=			
ANR	5669668	Identifier	vci		5669206	0					
ANR	5669669	PtrMemberAccess	penum -> xci		5669206	1					
ANR	5669670	Identifier	penum		5669206	0					
ANR	5669671	Identifier	xci		5669206	1					
ANR	5669672	AssignmentExpression	vdi = penum -> wci		5669206	1		=			
ANR	5669673	Identifier	vdi		5669206	0					
ANR	5669674	PtrMemberAccess	penum -> wci		5669206	1					
ANR	5669675	Identifier	penum		5669206	0					
ANR	5669676	Identifier	wci		5669206	1					
ANR	5669677	ExpressionStatement	irun = fixed2int_var_rounded ( yrun )	1203:12:51574:51608	5669206	7	True				
ANR	5669678	AssignmentExpression	irun = fixed2int_var_rounded ( yrun )		5669206	0		=			
ANR	5669679	Identifier	irun		5669206	0					
ANR	5669680	CallExpression	fixed2int_var_rounded ( yrun )		5669206	1					
ANR	5669681	Callee	fixed2int_var_rounded		5669206	0					
ANR	5669682	Identifier	fixed2int_var_rounded		5669206	0					
ANR	5669683	ArgumentList	yrun		5669206	1					
ANR	5669684	Argument	yrun		5669206	0					
ANR	5669685	Identifier	yrun		5669206	0					
ANR	5669686	BreakStatement	break ;	1204:12:51622:51627	5669206	8	True				
ANR	5669687	ExpressionStatement	"if_debug5m ( 'b' , penum -> memory , ""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"" , penum -> y , data_x , w , fixed2float ( xprev ) , fixed2float ( yprev ) )"	1206:4:51639:51785	5669206	48	True				
ANR	5669688	CallExpression	"if_debug5m ( 'b' , penum -> memory , ""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"" , penum -> y , data_x , w , fixed2float ( xprev ) , fixed2float ( yprev ) )"		5669206	0					
ANR	5669689	Callee	if_debug5m		5669206	0					
ANR	5669690	Identifier	if_debug5m		5669206	0					
ANR	5669691	ArgumentList	'b'		5669206	1					
ANR	5669692	Argument	'b'		5669206	0					
ANR	5669693	PrimaryExpression	'b'		5669206	0					
ANR	5669694	Argument	penum -> memory		5669206	1					
ANR	5669695	PtrMemberAccess	penum -> memory		5669206	0					
ANR	5669696	Identifier	penum		5669206	0					
ANR	5669697	Identifier	memory		5669206	1					
ANR	5669698	Argument	"""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"""		5669206	2					
ANR	5669699	PrimaryExpression	"""[b]y=%d data_x=%d w=%d xt=%f yt=%f\\n"""		5669206	0					
ANR	5669700	Argument	penum -> y		5669206	3					
ANR	5669701	PtrMemberAccess	penum -> y		5669206	0					
ANR	5669702	Identifier	penum		5669206	0					
ANR	5669703	Identifier	y		5669206	1					
ANR	5669704	Argument	data_x		5669206	4					
ANR	5669705	Identifier	data_x		5669206	0					
ANR	5669706	Argument	w		5669206	5					
ANR	5669707	Identifier	w		5669206	0					
ANR	5669708	Argument	fixed2float ( xprev )		5669206	6					
ANR	5669709	CallExpression	fixed2float ( xprev )		5669206	0					
ANR	5669710	Callee	fixed2float		5669206	0					
ANR	5669711	Identifier	fixed2float		5669206	0					
ANR	5669712	ArgumentList	xprev		5669206	1					
ANR	5669713	Argument	xprev		5669206	0					
ANR	5669714	Identifier	xprev		5669206	0					
ANR	5669715	Argument	fixed2float ( yprev )		5669206	7					
ANR	5669716	CallExpression	fixed2float ( yprev )		5669206	0					
ANR	5669717	Callee	fixed2float		5669206	0					
ANR	5669718	Identifier	fixed2float		5669206	0					
ANR	5669719	ArgumentList	yprev		5669206	1					
ANR	5669720	Argument	yprev		5669206	0					
ANR	5669721	Identifier	yprev		5669206	0					
ANR	5669722	ExpressionStatement	"memset ( & run , 0 , sizeof ( run ) )"	1208:4:51791:51819	5669206	49	True				
ANR	5669723	CallExpression	"memset ( & run , 0 , sizeof ( run ) )"		5669206	0					
ANR	5669724	Callee	memset		5669206	0					
ANR	5669725	Identifier	memset		5669206	0					
ANR	5669726	ArgumentList	& run		5669206	1					
ANR	5669727	Argument	& run		5669206	0					
ANR	5669728	UnaryOperationExpression	& run		5669206	0					
ANR	5669729	UnaryOperator	&		5669206	0					
ANR	5669730	Identifier	run		5669206	1					
ANR	5669731	Argument	0		5669206	1					
ANR	5669732	PrimaryExpression	0		5669206	0					
ANR	5669733	Argument	sizeof ( run )		5669206	2					
ANR	5669734	SizeofExpression	sizeof ( run )		5669206	0					
ANR	5669735	Sizeof	sizeof		5669206	0					
ANR	5669736	SizeofOperand	run		5669206	1					
ANR	5669737	ExpressionStatement	"memset ( & next , 0 , sizeof ( next ) )"	1209:4:51825:51855	5669206	50	True				
ANR	5669738	CallExpression	"memset ( & next , 0 , sizeof ( next ) )"		5669206	0					
ANR	5669739	Callee	memset		5669206	0					
ANR	5669740	Identifier	memset		5669206	0					
ANR	5669741	ArgumentList	& next		5669206	1					
ANR	5669742	Argument	& next		5669206	0					
ANR	5669743	UnaryOperationExpression	& next		5669206	0					
ANR	5669744	UnaryOperator	&		5669206	0					
ANR	5669745	Identifier	next		5669206	1					
ANR	5669746	Argument	0		5669206	1					
ANR	5669747	PrimaryExpression	0		5669206	0					
ANR	5669748	Argument	sizeof ( next )		5669206	2					
ANR	5669749	SizeofExpression	sizeof ( next )		5669206	0					
ANR	5669750	Sizeof	sizeof		5669206	0					
ANR	5669751	SizeofOperand	next		5669206	1					
ANR	5669752	ExpressionStatement	"cs_full_init_color ( & cc , pcs )"	1210:4:51861:51889	5669206	51	True				
ANR	5669753	CallExpression	"cs_full_init_color ( & cc , pcs )"		5669206	0					
ANR	5669754	Callee	cs_full_init_color		5669206	0					
ANR	5669755	Identifier	cs_full_init_color		5669206	0					
ANR	5669756	ArgumentList	& cc		5669206	1					
ANR	5669757	Argument	& cc		5669206	0					
ANR	5669758	UnaryOperationExpression	& cc		5669206	0					
ANR	5669759	UnaryOperator	&		5669206	0					
ANR	5669760	Identifier	cc		5669206	1					
ANR	5669761	Argument	pcs		5669206	1					
ANR	5669762	Identifier	pcs		5669206	0					
ANR	5669763	ExpressionStatement	run . v [ 0 ] = ~psrc [ 0 ]	1211:4:51895:51914	5669206	52	True				
ANR	5669764	AssignmentExpression	run . v [ 0 ] = ~psrc [ 0 ]		5669206	0		=			
ANR	5669765	ArrayIndexing	run . v [ 0 ]		5669206	0					
ANR	5669766	MemberAccess	run . v		5669206	0					
ANR	5669767	Identifier	run		5669206	0					
ANR	5669768	Identifier	v		5669206	1					
ANR	5669769	PrimaryExpression	0		5669206	1					
ANR	5669770	ArrayIndexing	~psrc [ 0 ]		5669206	1					
ANR	5669771	Identifier	~psrc		5669206	0					
ANR	5669772	PrimaryExpression	0		5669206	1					
ANR	5669773	WhileStatement	while ( psrc < bufend )		5669206	53					
ANR	5669774	Condition	psrc < bufend	1212:11:51945:51957	5669206	0	True				
ANR	5669775	RelationalExpression	psrc < bufend		5669206	0		<			
ANR	5669776	Identifier	psrc		5669206	0					
ANR	5669777	Identifier	bufend		5669206	1					
ANR	5669778	CompoundStatement		80:26:2990:2990	5669206	1					
ANR	5669779	ExpressionStatement	dda_next ( pnext . x )	1213:8:51970:51987	5669206	0	True				
ANR	5669780	CallExpression	dda_next ( pnext . x )		5669206	0					
ANR	5669781	Callee	dda_next		5669206	0					
ANR	5669782	Identifier	dda_next		5669206	0					
ANR	5669783	ArgumentList	pnext . x		5669206	1					
ANR	5669784	Argument	pnext . x		5669206	0					
ANR	5669785	MemberAccess	pnext . x		5669206	0					
ANR	5669786	Identifier	pnext		5669206	0					
ANR	5669787	Identifier	x		5669206	1					
ANR	5669788	ExpressionStatement	dda_next ( pnext . y )	1214:8:51997:52014	5669206	1	True				
ANR	5669789	CallExpression	dda_next ( pnext . y )		5669206	0					
ANR	5669790	Callee	dda_next		5669206	0					
ANR	5669791	Identifier	dda_next		5669206	0					
ANR	5669792	ArgumentList	pnext . y		5669206	1					
ANR	5669793	Argument	pnext . y		5669206	0					
ANR	5669794	MemberAccess	pnext . y		5669206	0					
ANR	5669795	Identifier	pnext		5669206	0					
ANR	5669796	Identifier	y		5669206	1					
ANR	5669797	IfStatement	"if ( posture != image_skewed && ! memcmp ( psrc , run . v , spp ) )"		5669206	2					
ANR	5669798	Condition	"posture != image_skewed && ! memcmp ( psrc , run . v , spp )"	1215:12:52028:52079	5669206	0	True				
ANR	5669799	AndExpression	"posture != image_skewed && ! memcmp ( psrc , run . v , spp )"		5669206	0		&&			
ANR	5669800	EqualityExpression	posture != image_skewed		5669206	0		!=			
ANR	5669801	Identifier	posture		5669206	0					
ANR	5669802	Identifier	image_skewed		5669206	1					
ANR	5669803	UnaryOperationExpression	"! memcmp ( psrc , run . v , spp )"		5669206	1					
ANR	5669804	UnaryOperator	!		5669206	0					
ANR	5669805	CallExpression	"memcmp ( psrc , run . v , spp )"		5669206	1					
ANR	5669806	Callee	memcmp		5669206	0					
ANR	5669807	Identifier	memcmp		5669206	0					
ANR	5669808	ArgumentList	psrc		5669206	1					
ANR	5669809	Argument	psrc		5669206	0					
ANR	5669810	Identifier	psrc		5669206	0					
ANR	5669811	Argument	run . v		5669206	1					
ANR	5669812	MemberAccess	run . v		5669206	0					
ANR	5669813	Identifier	run		5669206	0					
ANR	5669814	Identifier	v		5669206	1					
ANR	5669815	Argument	spp		5669206	2					
ANR	5669816	Identifier	spp		5669206	0					
ANR	5669817	CompoundStatement		83:66:3112:3112	5669206	1					
ANR	5669818	ExpressionStatement	psrc += spp	1216:12:52096:52107	5669206	0	True				
ANR	5669819	AssignmentExpression	psrc += spp		5669206	0		+=			
ANR	5669820	Identifier	psrc		5669206	0					
ANR	5669821	Identifier	spp		5669206	1					
ANR	5669822	GotoStatement	goto inc ;	1217:12:52121:52129	5669206	1	True				
ANR	5669823	Identifier	inc		5669206	0					
ANR	5669824	ExpressionStatement	"memcpy ( next . v , psrc , spp )"	1219:8:52149:52174	5669206	3	True				
ANR	5669825	CallExpression	"memcpy ( next . v , psrc , spp )"		5669206	0					
ANR	5669826	Callee	memcpy		5669206	0					
ANR	5669827	Identifier	memcpy		5669206	0					
ANR	5669828	ArgumentList	next . v		5669206	1					
ANR	5669829	Argument	next . v		5669206	0					
ANR	5669830	MemberAccess	next . v		5669206	0					
ANR	5669831	Identifier	next		5669206	0					
ANR	5669832	Identifier	v		5669206	1					
ANR	5669833	Argument	psrc		5669206	1					
ANR	5669834	Identifier	psrc		5669206	0					
ANR	5669835	Argument	spp		5669206	2					
ANR	5669836	Identifier	spp		5669206	0					
ANR	5669837	ExpressionStatement	psrc += spp	1220:8:52184:52195	5669206	4	True				
ANR	5669838	AssignmentExpression	psrc += spp		5669206	0		+=			
ANR	5669839	Identifier	psrc		5669206	0					
ANR	5669840	Identifier	spp		5669206	1					
ANR	5669841	IfStatement	"if ( ( next . all [ 0 ] & mask ) == test && ( penum -> mask_color . exact || mask_color_matches ( next . v , penum , spp ) ) )"		5669206	5					
ANR	5669842	Condition	"( next . all [ 0 ] & mask ) == test && ( penum -> mask_color . exact || mask_color_matches ( next . v , penum , spp ) )"	1222:12:52248:52371	5669206	0	True				
ANR	5669843	AndExpression	"( next . all [ 0 ] & mask ) == test && ( penum -> mask_color . exact || mask_color_matches ( next . v , penum , spp ) )"		5669206	0		&&			
ANR	5669844	EqualityExpression	( next . all [ 0 ] & mask ) == test		5669206	0		==			
ANR	5669845	BitAndExpression	next . all [ 0 ] & mask		5669206	0		&			
ANR	5669846	ArrayIndexing	next . all [ 0 ]		5669206	0					
ANR	5669847	MemberAccess	next . all		5669206	0					
ANR	5669848	Identifier	next		5669206	0					
ANR	5669849	Identifier	all		5669206	1					
ANR	5669850	PrimaryExpression	0		5669206	1					
ANR	5669851	Identifier	mask		5669206	1					
ANR	5669852	Identifier	test		5669206	1					
ANR	5669853	OrExpression	"penum -> mask_color . exact || mask_color_matches ( next . v , penum , spp )"		5669206	1		||			
ANR	5669854	MemberAccess	penum -> mask_color . exact		5669206	0					
ANR	5669855	PtrMemberAccess	penum -> mask_color		5669206	0					
ANR	5669856	Identifier	penum		5669206	0					
ANR	5669857	Identifier	mask_color		5669206	1					
ANR	5669858	Identifier	exact		5669206	1					
ANR	5669859	CallExpression	"mask_color_matches ( next . v , penum , spp )"		5669206	1					
ANR	5669860	Callee	mask_color_matches		5669206	0					
ANR	5669861	Identifier	mask_color_matches		5669206	0					
ANR	5669862	ArgumentList	next . v		5669206	1					
ANR	5669863	Argument	next . v		5669206	0					
ANR	5669864	MemberAccess	next . v		5669206	0					
ANR	5669865	Identifier	next		5669206	0					
ANR	5669866	Identifier	v		5669206	1					
ANR	5669867	Argument	penum		5669206	1					
ANR	5669868	Identifier	penum		5669206	0					
ANR	5669869	Argument	spp		5669206	2					
ANR	5669870	Identifier	spp		5669206	0					
ANR	5669871	CompoundStatement		92:54:3404:3404	5669206	1					
ANR	5669872	ExpressionStatement	color_set_null ( pdevc_next )	1225:12:52388:52414	5669206	0	True				
ANR	5669873	CallExpression	color_set_null ( pdevc_next )		5669206	0					
ANR	5669874	Callee	color_set_null		5669206	0					
ANR	5669875	Identifier	color_set_null		5669206	0					
ANR	5669876	ArgumentList	pdevc_next		5669206	1					
ANR	5669877	Argument	pdevc_next		5669206	0					
ANR	5669878	Identifier	pdevc_next		5669206	0					
ANR	5669879	GotoStatement	goto mapped ;	1226:12:52428:52439	5669206	1	True				
ANR	5669880	Identifier	mapped		5669206	0					
ANR	5669881	IfStatement	if ( lab_case )		5669206	6					
ANR	5669882	Condition	lab_case	1229:12:52528:52535	5669206	0	True				
ANR	5669883	Identifier	lab_case		5669206	0					
ANR	5669884	ForStatement	for ( i = 0 ; i < spp ; ++ i )		5669206	1					
ANR	5669885	ForInit	i = 0 ;	1230:17:52555:52560	5669206	0	True				
ANR	5669886	AssignmentExpression	i = 0		5669206	0		=			
ANR	5669887	Identifier	i		5669206	0					
ANR	5669888	PrimaryExpression	0		5669206	1					
ANR	5669889	Condition	i < spp	1230:24:52562:52568	5669206	1	True				
ANR	5669890	RelationalExpression	i < spp		5669206	0		<			
ANR	5669891	Identifier	i		5669206	0					
ANR	5669892	Identifier	spp		5669206	1					
ANR	5669893	UnaryExpression	++ i	1230:33:52571:52573	5669206	2	True				
ANR	5669894	IncDec	++		5669206	0					
ANR	5669895	Identifier	i		5669206	1					
ANR	5669896	ExpressionStatement	cc . paint . values [ i ] = ( next . v [ i ] ) * ( 1.0f / 255.0f )	1231:16:52592:52642	5669206	3	True				
ANR	5669897	AssignmentExpression	cc . paint . values [ i ] = ( next . v [ i ] ) * ( 1.0f / 255.0f )		5669206	0		=			
ANR	5669898	ArrayIndexing	cc . paint . values [ i ]		5669206	0					
ANR	5669899	MemberAccess	cc . paint . values		5669206	0					
ANR	5669900	MemberAccess	cc . paint		5669206	0					
ANR	5669901	Identifier	cc		5669206	0					
ANR	5669902	Identifier	paint		5669206	1					
ANR	5669903	Identifier	values		5669206	1					
ANR	5669904	Identifier	i		5669206	1					
ANR	5669905	MultiplicativeExpression	( next . v [ i ] ) * ( 1.0f / 255.0f )		5669206	1		*			
ANR	5669906	ArrayIndexing	next . v [ i ]		5669206	0					
ANR	5669907	MemberAccess	next . v		5669206	0					
ANR	5669908	Identifier	next		5669206	0					
ANR	5669909	Identifier	v		5669206	1					
ANR	5669910	Identifier	i		5669206	1					
ANR	5669911	MultiplicativeExpression	1.0f / 255.0f		5669206	1		/			
ANR	5669912	PrimaryExpression	1.0f		5669206	0					
ANR	5669913	PrimaryExpression	255.0f		5669206	1					
ANR	5669914	ElseStatement	else		5669206	0					
ANR	5669915	ForStatement	for ( i = 0 ; i < spp ; ++ i )		5669206	0					
ANR	5669916	ForInit	i = 0 ;	1233:17:52674:52679	5669206	0	True				
ANR	5669917	AssignmentExpression	i = 0		5669206	0		=			
ANR	5669918	Identifier	i		5669206	0					
ANR	5669919	PrimaryExpression	0		5669206	1					
ANR	5669920	Condition	i < spp	1233:24:52681:52687	5669206	1	True				
ANR	5669921	RelationalExpression	i < spp		5669206	0		<			
ANR	5669922	Identifier	i		5669206	0					
ANR	5669923	Identifier	spp		5669206	1					
ANR	5669924	UnaryExpression	++ i	1233:33:52690:52692	5669206	2	True				
ANR	5669925	IncDec	++		5669206	0					
ANR	5669926	Identifier	i		5669206	1					
ANR	5669927	ExpressionStatement	"decode_sample ( next . v [ i ] , cc , i )"	1234:16:52711:52742	5669206	3	True				
ANR	5669928	CallExpression	"decode_sample ( next . v [ i ] , cc , i )"		5669206	0					
ANR	5669929	Callee	decode_sample		5669206	0					
ANR	5669930	Identifier	decode_sample		5669206	0					
ANR	5669931	ArgumentList	next . v [ i ]		5669206	1					
ANR	5669932	Argument	next . v [ i ]		5669206	0					
ANR	5669933	ArrayIndexing	next . v [ i ]		5669206	0					
ANR	5669934	MemberAccess	next . v		5669206	0					
ANR	5669935	Identifier	next		5669206	0					
ANR	5669936	Identifier	v		5669206	1					
ANR	5669937	Identifier	i		5669206	1					
ANR	5669938	Argument	cc		5669206	1					
ANR	5669939	Identifier	cc		5669206	0					
ANR	5669940	Argument	i		5669206	2					
ANR	5669941	Identifier	i		5669206	0					
ANR	5669942	IfStatement	if ( gs_debug_c ( 'B' ) )		5669206	7					
ANR	5669943	Condition	gs_debug_c ( 'B' )	1236:12:52769:52783	5669206	0	True				
ANR	5669944	CallExpression	gs_debug_c ( 'B' )		5669206	0					
ANR	5669945	Callee	gs_debug_c		5669206	0					
ANR	5669946	Identifier	gs_debug_c		5669206	0					
ANR	5669947	ArgumentList	'B'		5669206	1					
ANR	5669948	Argument	'B'		5669206	0					
ANR	5669949	PrimaryExpression	'B'		5669206	0					
ANR	5669950	CompoundStatement		104:29:3816:3816	5669206	1					
ANR	5669951	ExpressionStatement	"dmprintf2 ( dev -> memory , ""[B]cc[0..%d]=%g"" , spp - 1 , cc . paint . values [ 0 ] )"	1237:12:52800:52891	5669206	0	True				
ANR	5669952	CallExpression	"dmprintf2 ( dev -> memory , ""[B]cc[0..%d]=%g"" , spp - 1 , cc . paint . values [ 0 ] )"		5669206	0					
ANR	5669953	Callee	dmprintf2		5669206	0					
ANR	5669954	Identifier	dmprintf2		5669206	0					
ANR	5669955	ArgumentList	dev -> memory		5669206	1					
ANR	5669956	Argument	dev -> memory		5669206	0					
ANR	5669957	PtrMemberAccess	dev -> memory		5669206	0					
ANR	5669958	Identifier	dev		5669206	0					
ANR	5669959	Identifier	memory		5669206	1					
ANR	5669960	Argument	"""[B]cc[0..%d]=%g"""		5669206	1					
ANR	5669961	PrimaryExpression	"""[B]cc[0..%d]=%g"""		5669206	0					
ANR	5669962	Argument	spp - 1		5669206	2					
ANR	5669963	AdditiveExpression	spp - 1		5669206	0		-			
ANR	5669964	Identifier	spp		5669206	0					
ANR	5669965	PrimaryExpression	1		5669206	1					
ANR	5669966	Argument	cc . paint . values [ 0 ]		5669206	3					
ANR	5669967	ArrayIndexing	cc . paint . values [ 0 ]		5669206	0					
ANR	5669968	MemberAccess	cc . paint . values		5669206	0					
ANR	5669969	MemberAccess	cc . paint		5669206	0					
ANR	5669970	Identifier	cc		5669206	0					
ANR	5669971	Identifier	paint		5669206	1					
ANR	5669972	Identifier	values		5669206	1					
ANR	5669973	PrimaryExpression	0		5669206	1					
ANR	5669974	ForStatement	for ( i = 1 ; i < spp ; ++ i )		5669206	1					
ANR	5669975	ForInit	i = 1 ;	1239:17:52910:52915	5669206	0	True				
ANR	5669976	AssignmentExpression	i = 1		5669206	0		=			
ANR	5669977	Identifier	i		5669206	0					
ANR	5669978	PrimaryExpression	1		5669206	1					
ANR	5669979	Condition	i < spp	1239:24:52917:52923	5669206	1	True				
ANR	5669980	RelationalExpression	i < spp		5669206	0		<			
ANR	5669981	Identifier	i		5669206	0					
ANR	5669982	Identifier	spp		5669206	1					
ANR	5669983	UnaryExpression	++ i	1239:33:52926:52928	5669206	2	True				
ANR	5669984	IncDec	++		5669206	0					
ANR	5669985	Identifier	i		5669206	1					
ANR	5669986	ExpressionStatement	"dmprintf1 ( dev -> memory , "",%g"" , cc . paint . values [ i ] )"	1240:16:52947:52996	5669206	3	True				
ANR	5669987	CallExpression	"dmprintf1 ( dev -> memory , "",%g"" , cc . paint . values [ i ] )"		5669206	0					
ANR	5669988	Callee	dmprintf1		5669206	0					
ANR	5669989	Identifier	dmprintf1		5669206	0					
ANR	5669990	ArgumentList	dev -> memory		5669206	1					
ANR	5669991	Argument	dev -> memory		5669206	0					
ANR	5669992	PtrMemberAccess	dev -> memory		5669206	0					
ANR	5669993	Identifier	dev		5669206	0					
ANR	5669994	Identifier	memory		5669206	1					
ANR	5669995	Argument	""",%g"""		5669206	1					
ANR	5669996	PrimaryExpression	""",%g"""		5669206	0					
ANR	5669997	Argument	cc . paint . values [ i ]		5669206	2					
ANR	5669998	ArrayIndexing	cc . paint . values [ i ]		5669206	0					
ANR	5669999	MemberAccess	cc . paint . values		5669206	0					
ANR	5670000	MemberAccess	cc . paint		5669206	0					
ANR	5670001	Identifier	cc		5669206	0					
ANR	5670002	Identifier	paint		5669206	1					
ANR	5670003	Identifier	values		5669206	1					
ANR	5670004	Identifier	i		5669206	1					
ANR	5670005	ExpressionStatement	"dmputs ( dev -> memory , ""\\n"" )"	1241:12:53010:53035	5669206	2	True				
ANR	5670006	CallExpression	"dmputs ( dev -> memory , ""\\n"" )"		5669206	0					
ANR	5670007	Callee	dmputs		5669206	0					
ANR	5670008	Identifier	dmputs		5669206	0					
ANR	5670009	ArgumentList	dev -> memory		5669206	1					
ANR	5670010	Argument	dev -> memory		5669206	0					
ANR	5670011	PtrMemberAccess	dev -> memory		5669206	0					
ANR	5670012	Identifier	dev		5669206	0					
ANR	5670013	Identifier	memory		5669206	1					
ANR	5670014	Argument	"""\\n"""		5669206	1					
ANR	5670015	PrimaryExpression	"""\\n"""		5669206	0					
ANR	5670016	ExpressionStatement	"mcode = remap_color ( & cc , pcs , pdevc_next , pgs , dev , gs_color_select_source )"	1244:8:53062:53164	5669206	8	True				
ANR	5670017	AssignmentExpression	"mcode = remap_color ( & cc , pcs , pdevc_next , pgs , dev , gs_color_select_source )"		5669206	0		=			
ANR	5670018	Identifier	mcode		5669206	0					
ANR	5670019	CallExpression	"remap_color ( & cc , pcs , pdevc_next , pgs , dev , gs_color_select_source )"		5669206	1					
ANR	5670020	Callee	remap_color		5669206	0					
ANR	5670021	Identifier	remap_color		5669206	0					
ANR	5670022	ArgumentList	& cc		5669206	1					
ANR	5670023	Argument	& cc		5669206	0					
ANR	5670024	UnaryOperationExpression	& cc		5669206	0					
ANR	5670025	UnaryOperator	&		5669206	0					
ANR	5670026	Identifier	cc		5669206	1					
ANR	5670027	Argument	pcs		5669206	1					
ANR	5670028	Identifier	pcs		5669206	0					
ANR	5670029	Argument	pdevc_next		5669206	2					
ANR	5670030	Identifier	pdevc_next		5669206	0					
ANR	5670031	Argument	pgs		5669206	3					
ANR	5670032	Identifier	pgs		5669206	0					
ANR	5670033	Argument	dev		5669206	4					
ANR	5670034	Identifier	dev		5669206	0					
ANR	5670035	Argument	gs_color_select_source		5669206	5					
ANR	5670036	Identifier	gs_color_select_source		5669206	0					
ANR	5670037	Label	mapped :	1246:0:53166:53172	5669206	9	True				
ANR	5670038	Identifier	mapped		5669206	0					
ANR	5670039	IfStatement	if ( mcode < 0 )		5669206	10					
ANR	5670040	Condition	mcode < 0	1246:12:53178:53186	5669206	0	True				
ANR	5670041	RelationalExpression	mcode < 0		5669206	0		<			
ANR	5670042	Identifier	mcode		5669206	0					
ANR	5670043	PrimaryExpression	0		5669206	1					
ANR	5670044	GotoStatement	goto fill ;	1247:12:53201:53210	5669206	1	True				
ANR	5670045	Identifier	fill		5669206	0					
ANR	5670046	IfStatement	if ( sizeof ( pdevc_next -> colors . binary . color [ 0 ] ) <= sizeof ( ulong ) )		5669206	11					
ANR	5670047	Condition	sizeof ( pdevc_next -> colors . binary . color [ 0 ] ) <= sizeof ( ulong )	1248:12:53224:53282	5669206	0	True				
ANR	5670048	RelationalExpression	sizeof ( pdevc_next -> colors . binary . color [ 0 ] ) <= sizeof ( ulong )		5669206	0		<=			
ANR	5670049	SizeofExpression	sizeof ( pdevc_next -> colors . binary . color [ 0 ] )		5669206	0					
ANR	5670050	Sizeof	sizeof		5669206	0					
ANR	5670051	ArrayIndexing	pdevc_next -> colors . binary . color [ 0 ]		5669206	1					
ANR	5670052	MemberAccess	pdevc_next -> colors . binary . color		5669206	0					
ANR	5670053	MemberAccess	pdevc_next -> colors . binary		5669206	0					
ANR	5670054	PtrMemberAccess	pdevc_next -> colors		5669206	0					
ANR	5670055	Identifier	pdevc_next		5669206	0					
ANR	5670056	Identifier	colors		5669206	1					
ANR	5670057	Identifier	binary		5669206	1					
ANR	5670058	Identifier	color		5669206	1					
ANR	5670059	PrimaryExpression	0		5669206	1					
ANR	5670060	SizeofExpression	sizeof ( ulong )		5669206	1					
ANR	5670061	Sizeof	sizeof		5669206	0					
ANR	5670062	SizeofOperand	ulong		5669206	1					
ANR	5670063	ExpressionStatement	"if_debug7m ( 'B' , penum -> memory , ""[B]0x%x,0x%x,0x%x,0x%x -> 0x%lx,0x%lx,0x%lx\\n"" , next . v [ 0 ] , next . v [ 1 ] , next . v [ 2 ] , next . v [ 3 ] , ( ulong ) pdevc_next -> colors . binary . color [ 0 ] , ( ulong ) pdevc_next -> colors . binary . color [ 1 ] , ( ulong ) pdevc_next -> type )"	1249:12:53297:53647	5669206	1	True				
ANR	5670064	CallExpression	"if_debug7m ( 'B' , penum -> memory , ""[B]0x%x,0x%x,0x%x,0x%x -> 0x%lx,0x%lx,0x%lx\\n"" , next . v [ 0 ] , next . v [ 1 ] , next . v [ 2 ] , next . v [ 3 ] , ( ulong ) pdevc_next -> colors . binary . color [ 0 ] , ( ulong ) pdevc_next -> colors . binary . color [ 1 ] , ( ulong ) pdevc_next -> type )"		5669206	0					
ANR	5670065	Callee	if_debug7m		5669206	0					
ANR	5670066	Identifier	if_debug7m		5669206	0					
ANR	5670067	ArgumentList	'B'		5669206	1					
ANR	5670068	Argument	'B'		5669206	0					
ANR	5670069	PrimaryExpression	'B'		5669206	0					
ANR	5670070	Argument	penum -> memory		5669206	1					
ANR	5670071	PtrMemberAccess	penum -> memory		5669206	0					
ANR	5670072	Identifier	penum		5669206	0					
ANR	5670073	Identifier	memory		5669206	1					
ANR	5670074	Argument	"""[B]0x%x,0x%x,0x%x,0x%x -> 0x%lx,0x%lx,0x%lx\\n"""		5669206	2					
ANR	5670075	PrimaryExpression	"""[B]0x%x,0x%x,0x%x,0x%x -> 0x%lx,0x%lx,0x%lx\\n"""		5669206	0					
ANR	5670076	Argument	next . v [ 0 ]		5669206	3					
ANR	5670077	ArrayIndexing	next . v [ 0 ]		5669206	0					
ANR	5670078	MemberAccess	next . v		5669206	0					
ANR	5670079	Identifier	next		5669206	0					
ANR	5670080	Identifier	v		5669206	1					
ANR	5670081	PrimaryExpression	0		5669206	1					
ANR	5670082	Argument	next . v [ 1 ]		5669206	4					
ANR	5670083	ArrayIndexing	next . v [ 1 ]		5669206	0					
ANR	5670084	MemberAccess	next . v		5669206	0					
ANR	5670085	Identifier	next		5669206	0					
ANR	5670086	Identifier	v		5669206	1					
ANR	5670087	PrimaryExpression	1		5669206	1					
ANR	5670088	Argument	next . v [ 2 ]		5669206	5					
ANR	5670089	ArrayIndexing	next . v [ 2 ]		5669206	0					
ANR	5670090	MemberAccess	next . v		5669206	0					
ANR	5670091	Identifier	next		5669206	0					
ANR	5670092	Identifier	v		5669206	1					
ANR	5670093	PrimaryExpression	2		5669206	1					
ANR	5670094	Argument	next . v [ 3 ]		5669206	6					
ANR	5670095	ArrayIndexing	next . v [ 3 ]		5669206	0					
ANR	5670096	MemberAccess	next . v		5669206	0					
ANR	5670097	Identifier	next		5669206	0					
ANR	5670098	Identifier	v		5669206	1					
ANR	5670099	PrimaryExpression	3		5669206	1					
ANR	5670100	Argument	( ulong ) pdevc_next -> colors . binary . color [ 0 ]		5669206	7					
ANR	5670101	CastExpression	( ulong ) pdevc_next -> colors . binary . color [ 0 ]		5669206	0					
ANR	5670102	CastTarget	ulong		5669206	0					
ANR	5670103	ArrayIndexing	pdevc_next -> colors . binary . color [ 0 ]		5669206	1					
ANR	5670104	MemberAccess	pdevc_next -> colors . binary . color		5669206	0					
ANR	5670105	MemberAccess	pdevc_next -> colors . binary		5669206	0					
ANR	5670106	PtrMemberAccess	pdevc_next -> colors		5669206	0					
ANR	5670107	Identifier	pdevc_next		5669206	0					
ANR	5670108	Identifier	colors		5669206	1					
ANR	5670109	Identifier	binary		5669206	1					
ANR	5670110	Identifier	color		5669206	1					
ANR	5670111	PrimaryExpression	0		5669206	1					
ANR	5670112	Argument	( ulong ) pdevc_next -> colors . binary . color [ 1 ]		5669206	8					
ANR	5670113	CastExpression	( ulong ) pdevc_next -> colors . binary . color [ 1 ]		5669206	0					
ANR	5670114	CastTarget	ulong		5669206	0					
ANR	5670115	ArrayIndexing	pdevc_next -> colors . binary . color [ 1 ]		5669206	1					
ANR	5670116	MemberAccess	pdevc_next -> colors . binary . color		5669206	0					
ANR	5670117	MemberAccess	pdevc_next -> colors . binary		5669206	0					
ANR	5670118	PtrMemberAccess	pdevc_next -> colors		5669206	0					
ANR	5670119	Identifier	pdevc_next		5669206	0					
ANR	5670120	Identifier	colors		5669206	1					
ANR	5670121	Identifier	binary		5669206	1					
ANR	5670122	Identifier	color		5669206	1					
ANR	5670123	PrimaryExpression	1		5669206	1					
ANR	5670124	Argument	( ulong ) pdevc_next -> type		5669206	9					
ANR	5670125	CastExpression	( ulong ) pdevc_next -> type		5669206	0					
ANR	5670126	CastTarget	ulong		5669206	0					
ANR	5670127	PtrMemberAccess	pdevc_next -> type		5669206	1					
ANR	5670128	Identifier	pdevc_next		5669206	0					
ANR	5670129	Identifier	type		5669206	1					
ANR	5670130	ElseStatement	else		5669206	0					
ANR	5670131	ExpressionStatement	"if_debug9m ( 'B' , penum -> memory , ""[B]0x%x,0x%x,0x%x,0x%x -> 0x%08lx%08lx,0x%08lx%08lx,0x%lx\\n"" , next . v [ 0 ] , next . v [ 1 ] , next . v [ 2 ] , next . v [ 3 ] , ( ulong ) ( pdevc_next -> colors . binary . color [ 0 ] >> 8 * ( sizeof ( pdevc_next -> colors . binary . color [ 0 ] ) - sizeof ( ulong ) ) ) , ( ulong ) pdevc_next -> colors . binary . color [ 0 ] , ( ulong ) ( pdevc_next -> colors . binary . color [ 1 ] >> 8 * ( sizeof ( pdevc_next -> colors . binary . color [ 1 ] ) - sizeof ( ulong ) ) ) , ( ulong ) pdevc_next -> colors . binary . color [ 1 ] , ( ulong ) pdevc_next -> type )"	1256:12:53674:54372	5669206	0	True				
ANR	5670132	CallExpression	"if_debug9m ( 'B' , penum -> memory , ""[B]0x%x,0x%x,0x%x,0x%x -> 0x%08lx%08lx,0x%08lx%08lx,0x%lx\\n"" , next . v [ 0 ] , next . v [ 1 ] , next . v [ 2 ] , next . v [ 3 ] , ( ulong ) ( pdevc_next -> colors . binary . color [ 0 ] >> 8 * ( sizeof ( pdevc_next -> colors . binary . color [ 0 ] ) - sizeof ( ulong ) ) ) , ( ulong ) pdevc_next -> colors . binary . color [ 0 ] , ( ulong ) ( pdevc_next -> colors . binary . color [ 1 ] >> 8 * ( sizeof ( pdevc_next -> colors . binary . color [ 1 ] ) - sizeof ( ulong ) ) ) , ( ulong ) pdevc_next -> colors . binary . color [ 1 ] , ( ulong ) pdevc_next -> type )"		5669206	0					
ANR	5670133	Callee	if_debug9m		5669206	0					
ANR	5670134	Identifier	if_debug9m		5669206	0					
ANR	5670135	ArgumentList	'B'		5669206	1					
ANR	5670136	Argument	'B'		5669206	0					
ANR	5670137	PrimaryExpression	'B'		5669206	0					
ANR	5670138	Argument	penum -> memory		5669206	1					
ANR	5670139	PtrMemberAccess	penum -> memory		5669206	0					
ANR	5670140	Identifier	penum		5669206	0					
ANR	5670141	Identifier	memory		5669206	1					
ANR	5670142	Argument	"""[B]0x%x,0x%x,0x%x,0x%x -> 0x%08lx%08lx,0x%08lx%08lx,0x%lx\\n"""		5669206	2					
ANR	5670143	PrimaryExpression	"""[B]0x%x,0x%x,0x%x,0x%x -> 0x%08lx%08lx,0x%08lx%08lx,0x%lx\\n"""		5669206	0					
ANR	5670144	Argument	next . v [ 0 ]		5669206	3					
ANR	5670145	ArrayIndexing	next . v [ 0 ]		5669206	0					
ANR	5670146	MemberAccess	next . v		5669206	0					
ANR	5670147	Identifier	next		5669206	0					
ANR	5670148	Identifier	v		5669206	1					
ANR	5670149	PrimaryExpression	0		5669206	1					
ANR	5670150	Argument	next . v [ 1 ]		5669206	4					
ANR	5670151	ArrayIndexing	next . v [ 1 ]		5669206	0					
ANR	5670152	MemberAccess	next . v		5669206	0					
ANR	5670153	Identifier	next		5669206	0					
ANR	5670154	Identifier	v		5669206	1					
ANR	5670155	PrimaryExpression	1		5669206	1					
ANR	5670156	Argument	next . v [ 2 ]		5669206	5					
ANR	5670157	ArrayIndexing	next . v [ 2 ]		5669206	0					
ANR	5670158	MemberAccess	next . v		5669206	0					
ANR	5670159	Identifier	next		5669206	0					
ANR	5670160	Identifier	v		5669206	1					
ANR	5670161	PrimaryExpression	2		5669206	1					
ANR	5670162	Argument	next . v [ 3 ]		5669206	6					
ANR	5670163	ArrayIndexing	next . v [ 3 ]		5669206	0					
ANR	5670164	MemberAccess	next . v		5669206	0					
ANR	5670165	Identifier	next		5669206	0					
ANR	5670166	Identifier	v		5669206	1					
ANR	5670167	PrimaryExpression	3		5669206	1					
ANR	5670168	Argument	( ulong ) ( pdevc_next -> colors . binary . color [ 0 ] >> 8 * ( sizeof ( pdevc_next -> colors . binary . color [ 0 ] ) - sizeof ( ulong ) ) )		5669206	7					
ANR	5670169	CastExpression	( ulong ) ( pdevc_next -> colors . binary . color [ 0 ] >> 8 * ( sizeof ( pdevc_next -> colors . binary . color [ 0 ] ) - sizeof ( ulong ) ) )		5669206	0					
ANR	5670170	CastTarget	ulong		5669206	0					
ANR	5670171	ShiftExpression	pdevc_next -> colors . binary . color [ 0 ] >> 8 * ( sizeof ( pdevc_next -> colors . binary . color [ 0 ] ) - sizeof ( ulong ) )		5669206	1		>>			
ANR	5670172	ArrayIndexing	pdevc_next -> colors . binary . color [ 0 ]		5669206	0					
ANR	5670173	MemberAccess	pdevc_next -> colors . binary . color		5669206	0					
ANR	5670174	MemberAccess	pdevc_next -> colors . binary		5669206	0					
ANR	5670175	PtrMemberAccess	pdevc_next -> colors		5669206	0					
ANR	5670176	Identifier	pdevc_next		5669206	0					
ANR	5670177	Identifier	colors		5669206	1					
ANR	5670178	Identifier	binary		5669206	1					
ANR	5670179	Identifier	color		5669206	1					
ANR	5670180	PrimaryExpression	0		5669206	1					
ANR	5670181	MultiplicativeExpression	8 * ( sizeof ( pdevc_next -> colors . binary . color [ 0 ] ) - sizeof ( ulong ) )		5669206	1		*			
ANR	5670182	PrimaryExpression	8		5669206	0					
ANR	5670183	AdditiveExpression	sizeof ( pdevc_next -> colors . binary . color [ 0 ] ) - sizeof ( ulong )		5669206	1		-			
ANR	5670184	SizeofExpression	sizeof ( pdevc_next -> colors . binary . color [ 0 ] )		5669206	0					
ANR	5670185	Sizeof	sizeof		5669206	0					
ANR	5670186	ArrayIndexing	pdevc_next -> colors . binary . color [ 0 ]		5669206	1					
ANR	5670187	MemberAccess	pdevc_next -> colors . binary . color		5669206	0					
ANR	5670188	MemberAccess	pdevc_next -> colors . binary		5669206	0					
ANR	5670189	PtrMemberAccess	pdevc_next -> colors		5669206	0					
ANR	5670190	Identifier	pdevc_next		5669206	0					
ANR	5670191	Identifier	colors		5669206	1					
ANR	5670192	Identifier	binary		5669206	1					
ANR	5670193	Identifier	color		5669206	1					
ANR	5670194	PrimaryExpression	0		5669206	1					
ANR	5670195	SizeofExpression	sizeof ( ulong )		5669206	1					
ANR	5670196	Sizeof	sizeof		5669206	0					
ANR	5670197	SizeofOperand	ulong		5669206	1					
ANR	5670198	Argument	( ulong ) pdevc_next -> colors . binary . color [ 0 ]		5669206	8					
ANR	5670199	CastExpression	( ulong ) pdevc_next -> colors . binary . color [ 0 ]		5669206	0					
ANR	5670200	CastTarget	ulong		5669206	0					
ANR	5670201	ArrayIndexing	pdevc_next -> colors . binary . color [ 0 ]		5669206	1					
ANR	5670202	MemberAccess	pdevc_next -> colors . binary . color		5669206	0					
ANR	5670203	MemberAccess	pdevc_next -> colors . binary		5669206	0					
ANR	5670204	PtrMemberAccess	pdevc_next -> colors		5669206	0					
ANR	5670205	Identifier	pdevc_next		5669206	0					
ANR	5670206	Identifier	colors		5669206	1					
ANR	5670207	Identifier	binary		5669206	1					
ANR	5670208	Identifier	color		5669206	1					
ANR	5670209	PrimaryExpression	0		5669206	1					
ANR	5670210	Argument	( ulong ) ( pdevc_next -> colors . binary . color [ 1 ] >> 8 * ( sizeof ( pdevc_next -> colors . binary . color [ 1 ] ) - sizeof ( ulong ) ) )		5669206	9					
ANR	5670211	CastExpression	( ulong ) ( pdevc_next -> colors . binary . color [ 1 ] >> 8 * ( sizeof ( pdevc_next -> colors . binary . color [ 1 ] ) - sizeof ( ulong ) ) )		5669206	0					
ANR	5670212	CastTarget	ulong		5669206	0					
ANR	5670213	ShiftExpression	pdevc_next -> colors . binary . color [ 1 ] >> 8 * ( sizeof ( pdevc_next -> colors . binary . color [ 1 ] ) - sizeof ( ulong ) )		5669206	1		>>			
ANR	5670214	ArrayIndexing	pdevc_next -> colors . binary . color [ 1 ]		5669206	0					
ANR	5670215	MemberAccess	pdevc_next -> colors . binary . color		5669206	0					
ANR	5670216	MemberAccess	pdevc_next -> colors . binary		5669206	0					
ANR	5670217	PtrMemberAccess	pdevc_next -> colors		5669206	0					
ANR	5670218	Identifier	pdevc_next		5669206	0					
ANR	5670219	Identifier	colors		5669206	1					
ANR	5670220	Identifier	binary		5669206	1					
ANR	5670221	Identifier	color		5669206	1					
ANR	5670222	PrimaryExpression	1		5669206	1					
ANR	5670223	MultiplicativeExpression	8 * ( sizeof ( pdevc_next -> colors . binary . color [ 1 ] ) - sizeof ( ulong ) )		5669206	1		*			
ANR	5670224	PrimaryExpression	8		5669206	0					
ANR	5670225	AdditiveExpression	sizeof ( pdevc_next -> colors . binary . color [ 1 ] ) - sizeof ( ulong )		5669206	1		-			
ANR	5670226	SizeofExpression	sizeof ( pdevc_next -> colors . binary . color [ 1 ] )		5669206	0					
ANR	5670227	Sizeof	sizeof		5669206	0					
ANR	5670228	ArrayIndexing	pdevc_next -> colors . binary . color [ 1 ]		5669206	1					
ANR	5670229	MemberAccess	pdevc_next -> colors . binary . color		5669206	0					
ANR	5670230	MemberAccess	pdevc_next -> colors . binary		5669206	0					
ANR	5670231	PtrMemberAccess	pdevc_next -> colors		5669206	0					
ANR	5670232	Identifier	pdevc_next		5669206	0					
ANR	5670233	Identifier	colors		5669206	1					
ANR	5670234	Identifier	binary		5669206	1					
ANR	5670235	Identifier	color		5669206	1					
ANR	5670236	PrimaryExpression	1		5669206	1					
ANR	5670237	SizeofExpression	sizeof ( ulong )		5669206	1					
ANR	5670238	Sizeof	sizeof		5669206	0					
ANR	5670239	SizeofOperand	ulong		5669206	1					
ANR	5670240	Argument	( ulong ) pdevc_next -> colors . binary . color [ 1 ]		5669206	10					
ANR	5670241	CastExpression	( ulong ) pdevc_next -> colors . binary . color [ 1 ]		5669206	0					
ANR	5670242	CastTarget	ulong		5669206	0					
ANR	5670243	ArrayIndexing	pdevc_next -> colors . binary . color [ 1 ]		5669206	1					
ANR	5670244	MemberAccess	pdevc_next -> colors . binary . color		5669206	0					
ANR	5670245	MemberAccess	pdevc_next -> colors . binary		5669206	0					
ANR	5670246	PtrMemberAccess	pdevc_next -> colors		5669206	0					
ANR	5670247	Identifier	pdevc_next		5669206	0					
ANR	5670248	Identifier	colors		5669206	1					
ANR	5670249	Identifier	binary		5669206	1					
ANR	5670250	Identifier	color		5669206	1					
ANR	5670251	PrimaryExpression	1		5669206	1					
ANR	5670252	Argument	( ulong ) pdevc_next -> type		5669206	11					
ANR	5670253	CastExpression	( ulong ) pdevc_next -> type		5669206	0					
ANR	5670254	CastTarget	ulong		5669206	0					
ANR	5670255	PtrMemberAccess	pdevc_next -> type		5669206	1					
ANR	5670256	Identifier	pdevc_next		5669206	0					
ANR	5670257	Identifier	type		5669206	1					
ANR	5670258	IfStatement	"if ( posture != image_skewed && dev_color_eq ( * pdevc , * pdevc_next ) )"		5669206	12					
ANR	5670259	Condition	"posture != image_skewed && dev_color_eq ( * pdevc , * pdevc_next )"	1267:12:54473:54532	5669206	0	True				
ANR	5670260	AndExpression	"posture != image_skewed && dev_color_eq ( * pdevc , * pdevc_next )"		5669206	0		&&			
ANR	5670261	EqualityExpression	posture != image_skewed		5669206	0		!=			
ANR	5670262	Identifier	posture		5669206	0					
ANR	5670263	Identifier	image_skewed		5669206	1					
ANR	5670264	CallExpression	"dev_color_eq ( * pdevc , * pdevc_next )"		5669206	1					
ANR	5670265	Callee	dev_color_eq		5669206	0					
ANR	5670266	Identifier	dev_color_eq		5669206	0					
ANR	5670267	ArgumentList	* pdevc		5669206	1					
ANR	5670268	Argument	* pdevc		5669206	0					
ANR	5670269	UnaryOperationExpression	* pdevc		5669206	0					
ANR	5670270	UnaryOperator	*		5669206	0					
ANR	5670271	Identifier	pdevc		5669206	1					
ANR	5670272	Argument	* pdevc_next		5669206	1					
ANR	5670273	UnaryOperationExpression	* pdevc_next		5669206	0					
ANR	5670274	UnaryOperator	*		5669206	0					
ANR	5670275	Identifier	pdevc_next		5669206	1					
ANR	5670276	GotoStatement	goto set ;	1268:12:54547:54555	5669206	1	True				
ANR	5670277	Identifier	set		5669206	0					
ANR	5670278	Label	fill :	1269:0:54557:54561	5669206	13	True				
ANR	5670279	Identifier	fill		5669206	0					
ANR	5670280	SwitchStatement	switch ( posture )		5669206	14					
ANR	5670281	Condition	posture	1277:16:54979:54985	5669206	0	True				
ANR	5670282	Identifier	posture		5669206	0					
ANR	5670283	CompoundStatement		145:25:6018:6018	5669206	1					
ANR	5670284	Label	case image_portrait :	1278:8:54998:55017	5669206	0	True				
ANR	5670285	Identifier	image_portrait		5669206	0					
ANR	5670286	CompoundStatement		149:16:6127:6178	5669206	1					
ANR	5670287	IdentifierDeclStatement	int xi = irun ;	1280:16:55066:55079	5669206	0	True				
ANR	5670288	IdentifierDecl	xi = irun		5669206	0					
ANR	5670289	IdentifierDeclType	int		5669206	0					
ANR	5670290	Identifier	xi		5669206	1					
ANR	5670291	AssignmentExpression	xi = irun		5669206	2		=			
ANR	5670292	Identifier	irun		5669206	0					
ANR	5670293	Identifier	irun		5669206	1					
ANR	5670294	IdentifierDeclStatement	int wi = ( irun = fixed2int_var_rounded ( xprev ) ) - xi ;	1281:16:55097:55148	5669206	1	True				
ANR	5670295	IdentifierDecl	wi = ( irun = fixed2int_var_rounded ( xprev ) ) - xi		5669206	0					
ANR	5670296	IdentifierDeclType	int		5669206	0					
ANR	5670297	Identifier	wi		5669206	1					
ANR	5670298	AssignmentExpression	wi = ( irun = fixed2int_var_rounded ( xprev ) ) - xi		5669206	2		=			
ANR	5670299	Identifier	wi		5669206	0					
ANR	5670300	AdditiveExpression	( irun = fixed2int_var_rounded ( xprev ) ) - xi		5669206	1		-			
ANR	5670301	AssignmentExpression	irun = fixed2int_var_rounded ( xprev )		5669206	0		=			
ANR	5670302	Identifier	irun		5669206	0					
ANR	5670303	CallExpression	fixed2int_var_rounded ( xprev )		5669206	1					
ANR	5670304	Callee	fixed2int_var_rounded		5669206	0					
ANR	5670305	Identifier	fixed2int_var_rounded		5669206	0					
ANR	5670306	ArgumentList	xprev		5669206	1					
ANR	5670307	Argument	xprev		5669206	0					
ANR	5670308	Identifier	xprev		5669206	0					
ANR	5670309	Identifier	xi		5669206	1					
ANR	5670310	IfStatement	if ( wi < 0 )		5669206	2					
ANR	5670311	Condition	wi < 0	1283:20:55171:55176	5669206	0	True				
ANR	5670312	RelationalExpression	wi < 0		5669206	0		<			
ANR	5670313	Identifier	wi		5669206	0					
ANR	5670314	PrimaryExpression	0		5669206	1					
ANR	5670315	ExpressionStatement	"xi += wi , wi = - wi"	1284:20:55199:55217	5669206	1	True				
ANR	5670316	Expression	"xi += wi , wi = - wi"		5669206	0					
ANR	5670317	AssignmentExpression	xi += wi		5669206	0		+=			
ANR	5670318	Identifier	xi		5669206	0					
ANR	5670319	Identifier	wi		5669206	1					
ANR	5670320	AssignmentExpression	wi = - wi		5669206	1		=			
ANR	5670321	Identifier	wi		5669206	0					
ANR	5670322	UnaryOperationExpression	- wi		5669206	1					
ANR	5670323	UnaryOperator	-		5669206	0					
ANR	5670324	Identifier	wi		5669206	1					
ANR	5670325	IfStatement	if ( wi > 0 )		5669206	3					
ANR	5670326	Condition	wi > 0	1285:20:55239:55244	5669206	0	True				
ANR	5670327	RelationalExpression	wi > 0		5669206	0		>			
ANR	5670328	Identifier	wi		5669206	0					
ANR	5670329	PrimaryExpression	0		5669206	1					
ANR	5670330	ExpressionStatement	"code = gx_fill_rectangle_device_rop ( xi , vci , wi , vdi , pdevc , dev , lop )"	1286:20:55267:55393	5669206	1	True				
ANR	5670331	AssignmentExpression	"code = gx_fill_rectangle_device_rop ( xi , vci , wi , vdi , pdevc , dev , lop )"		5669206	0		=			
ANR	5670332	Identifier	code		5669206	0					
ANR	5670333	CallExpression	"gx_fill_rectangle_device_rop ( xi , vci , wi , vdi , pdevc , dev , lop )"		5669206	1					
ANR	5670334	Callee	gx_fill_rectangle_device_rop		5669206	0					
ANR	5670335	Identifier	gx_fill_rectangle_device_rop		5669206	0					
ANR	5670336	ArgumentList	xi		5669206	1					
ANR	5670337	Argument	xi		5669206	0					
ANR	5670338	Identifier	xi		5669206	0					
ANR	5670339	Argument	vci		5669206	1					
ANR	5670340	Identifier	vci		5669206	0					
ANR	5670341	Argument	wi		5669206	2					
ANR	5670342	Identifier	wi		5669206	0					
ANR	5670343	Argument	vdi		5669206	3					
ANR	5670344	Identifier	vdi		5669206	0					
ANR	5670345	Argument	pdevc		5669206	4					
ANR	5670346	Identifier	pdevc		5669206	0					
ANR	5670347	Argument	dev		5669206	5					
ANR	5670348	Identifier	dev		5669206	0					
ANR	5670349	Argument	lop		5669206	6					
ANR	5670350	Identifier	lop		5669206	0					
ANR	5670351	BreakStatement	break ;	1289:12:55421:55426	5669206	2	True				
ANR	5670352	Label	case image_landscape :	1290:8:55436:55456	5669206	3	True				
ANR	5670353	Identifier	image_landscape		5669206	0					
ANR	5670354	CompoundStatement		161:16:6584:6635	5669206	4					
ANR	5670355	IdentifierDeclStatement	int yi = irun ;	1292:16:55523:55536	5669206	0	True				
ANR	5670356	IdentifierDecl	yi = irun		5669206	0					
ANR	5670357	IdentifierDeclType	int		5669206	0					
ANR	5670358	Identifier	yi		5669206	1					
ANR	5670359	AssignmentExpression	yi = irun		5669206	2		=			
ANR	5670360	Identifier	irun		5669206	0					
ANR	5670361	Identifier	irun		5669206	1					
ANR	5670362	IdentifierDeclStatement	int hi = ( irun = fixed2int_var_rounded ( yprev ) ) - yi ;	1293:16:55554:55605	5669206	1	True				
ANR	5670363	IdentifierDecl	hi = ( irun = fixed2int_var_rounded ( yprev ) ) - yi		5669206	0					
ANR	5670364	IdentifierDeclType	int		5669206	0					
ANR	5670365	Identifier	hi		5669206	1					
ANR	5670366	AssignmentExpression	hi = ( irun = fixed2int_var_rounded ( yprev ) ) - yi		5669206	2		=			
ANR	5670367	Identifier	hi		5669206	0					
ANR	5670368	AdditiveExpression	( irun = fixed2int_var_rounded ( yprev ) ) - yi		5669206	1		-			
ANR	5670369	AssignmentExpression	irun = fixed2int_var_rounded ( yprev )		5669206	0		=			
ANR	5670370	Identifier	irun		5669206	0					
ANR	5670371	CallExpression	fixed2int_var_rounded ( yprev )		5669206	1					
ANR	5670372	Callee	fixed2int_var_rounded		5669206	0					
ANR	5670373	Identifier	fixed2int_var_rounded		5669206	0					
ANR	5670374	ArgumentList	yprev		5669206	1					
ANR	5670375	Argument	yprev		5669206	0					
ANR	5670376	Identifier	yprev		5669206	0					
ANR	5670377	Identifier	yi		5669206	1					
ANR	5670378	IfStatement	if ( hi < 0 )		5669206	2					
ANR	5670379	Condition	hi < 0	1295:20:55628:55633	5669206	0	True				
ANR	5670380	RelationalExpression	hi < 0		5669206	0		<			
ANR	5670381	Identifier	hi		5669206	0					
ANR	5670382	PrimaryExpression	0		5669206	1					
ANR	5670383	ExpressionStatement	"yi += hi , hi = - hi"	1296:20:55656:55674	5669206	1	True				
ANR	5670384	Expression	"yi += hi , hi = - hi"		5669206	0					
ANR	5670385	AssignmentExpression	yi += hi		5669206	0		+=			
ANR	5670386	Identifier	yi		5669206	0					
ANR	5670387	Identifier	hi		5669206	1					
ANR	5670388	AssignmentExpression	hi = - hi		5669206	1		=			
ANR	5670389	Identifier	hi		5669206	0					
ANR	5670390	UnaryOperationExpression	- hi		5669206	1					
ANR	5670391	UnaryOperator	-		5669206	0					
ANR	5670392	Identifier	hi		5669206	1					
ANR	5670393	IfStatement	if ( hi > 0 )		5669206	3					
ANR	5670394	Condition	hi > 0	1297:20:55696:55701	5669206	0	True				
ANR	5670395	RelationalExpression	hi > 0		5669206	0		>			
ANR	5670396	Identifier	hi		5669206	0					
ANR	5670397	PrimaryExpression	0		5669206	1					
ANR	5670398	ExpressionStatement	"code = gx_fill_rectangle_device_rop ( vci , yi , vdi , hi , pdevc , dev , lop )"	1298:20:55724:55850	5669206	1	True				
ANR	5670399	AssignmentExpression	"code = gx_fill_rectangle_device_rop ( vci , yi , vdi , hi , pdevc , dev , lop )"		5669206	0		=			
ANR	5670400	Identifier	code		5669206	0					
ANR	5670401	CallExpression	"gx_fill_rectangle_device_rop ( vci , yi , vdi , hi , pdevc , dev , lop )"		5669206	1					
ANR	5670402	Callee	gx_fill_rectangle_device_rop		5669206	0					
ANR	5670403	Identifier	gx_fill_rectangle_device_rop		5669206	0					
ANR	5670404	ArgumentList	vci		5669206	1					
ANR	5670405	Argument	vci		5669206	0					
ANR	5670406	Identifier	vci		5669206	0					
ANR	5670407	Argument	yi		5669206	1					
ANR	5670408	Identifier	yi		5669206	0					
ANR	5670409	Argument	vdi		5669206	2					
ANR	5670410	Identifier	vdi		5669206	0					
ANR	5670411	Argument	hi		5669206	3					
ANR	5670412	Identifier	hi		5669206	0					
ANR	5670413	Argument	pdevc		5669206	4					
ANR	5670414	Identifier	pdevc		5669206	0					
ANR	5670415	Argument	dev		5669206	5					
ANR	5670416	Identifier	dev		5669206	0					
ANR	5670417	Argument	lop		5669206	6					
ANR	5670418	Identifier	lop		5669206	0					
ANR	5670419	BreakStatement	break ;	1301:12:55878:55883	5669206	5	True				
ANR	5670420	Label	default :	1302:8:55893:55900	5669206	6	True				
ANR	5670421	Identifier	default		5669206	0					
ANR	5670422	CompoundStatement		171:12:6944:6944	5669206	7					
ANR	5670423	ExpressionStatement	"code = ( * dev_proc ( dev , fill_parallelogram ) ) ( dev , xrun , yrun , xprev - xrun , yprev - yrun , pdyx , pdyy , pdevc , lop )"	1304:16:55953:56107	5669206	0	True				
ANR	5670424	AssignmentExpression	"code = ( * dev_proc ( dev , fill_parallelogram ) ) ( dev , xrun , yrun , xprev - xrun , yprev - yrun , pdyx , pdyy , pdevc , lop )"		5669206	0		=			
ANR	5670425	Identifier	code		5669206	0					
ANR	5670426	CallExpression	"( * dev_proc ( dev , fill_parallelogram ) ) ( dev , xrun , yrun , xprev - xrun , yprev - yrun , pdyx , pdyy , pdevc , lop )"		5669206	1					
ANR	5670427	Callee	"* dev_proc ( dev , fill_parallelogram )"		5669206	0					
ANR	5670428	UnaryOperationExpression	"* dev_proc ( dev , fill_parallelogram )"		5669206	0					
ANR	5670429	UnaryOperator	*		5669206	0					
ANR	5670430	CallExpression	"dev_proc ( dev , fill_parallelogram )"		5669206	1					
ANR	5670431	Callee	dev_proc		5669206	0					
ANR	5670432	Identifier	dev_proc		5669206	0					
ANR	5670433	ArgumentList	dev		5669206	1					
ANR	5670434	Argument	dev		5669206	0					
ANR	5670435	Identifier	dev		5669206	0					
ANR	5670436	Argument	fill_parallelogram		5669206	1					
ANR	5670437	Identifier	fill_parallelogram		5669206	0					
ANR	5670438	ArgumentList	dev		5669206	1					
ANR	5670439	Argument	dev		5669206	0					
ANR	5670440	Identifier	dev		5669206	0					
ANR	5670441	Argument	xrun		5669206	1					
ANR	5670442	Identifier	xrun		5669206	0					
ANR	5670443	Argument	yrun		5669206	2					
ANR	5670444	Identifier	yrun		5669206	0					
ANR	5670445	Argument	xprev - xrun		5669206	3					
ANR	5670446	AdditiveExpression	xprev - xrun		5669206	0		-			
ANR	5670447	Identifier	xprev		5669206	0					
ANR	5670448	Identifier	xrun		5669206	1					
ANR	5670449	Argument	yprev - yrun		5669206	4					
ANR	5670450	AdditiveExpression	yprev - yrun		5669206	0		-			
ANR	5670451	Identifier	yprev		5669206	0					
ANR	5670452	Identifier	yrun		5669206	1					
ANR	5670453	Argument	pdyx		5669206	5					
ANR	5670454	Identifier	pdyx		5669206	0					
ANR	5670455	Argument	pdyy		5669206	6					
ANR	5670456	Identifier	pdyy		5669206	0					
ANR	5670457	Argument	pdevc		5669206	7					
ANR	5670458	Identifier	pdevc		5669206	0					
ANR	5670459	Argument	lop		5669206	8					
ANR	5670460	Identifier	lop		5669206	0					
ANR	5670461	ExpressionStatement	xrun = xprev	1307:16:56125:56137	5669206	1	True				
ANR	5670462	AssignmentExpression	xrun = xprev		5669206	0		=			
ANR	5670463	Identifier	xrun		5669206	0					
ANR	5670464	Identifier	xprev		5669206	1					
ANR	5670465	ExpressionStatement	yrun = yprev	1308:16:56155:56167	5669206	2	True				
ANR	5670466	AssignmentExpression	yrun = yprev		5669206	0		=			
ANR	5670467	Identifier	yrun		5669206	0					
ANR	5670468	Identifier	yprev		5669206	1					
ANR	5670469	IfStatement	if ( code < 0 )		5669206	15					
ANR	5670470	Condition	code < 0	1311:12:56205:56212	5669206	0	True				
ANR	5670471	RelationalExpression	code < 0		5669206	0		<			
ANR	5670472	Identifier	code		5669206	0					
ANR	5670473	PrimaryExpression	0		5669206	1					
ANR	5670474	GotoStatement	goto err ;	1312:12:56227:56235	5669206	1	True				
ANR	5670475	Identifier	err		5669206	0					
ANR	5670476	ExpressionStatement	rsrc = psrc	1313:8:56245:56256	5669206	16	True				
ANR	5670477	AssignmentExpression	rsrc = psrc		5669206	0		=			
ANR	5670478	Identifier	rsrc		5669206	0					
ANR	5670479	Identifier	psrc		5669206	1					
ANR	5670480	IfStatement	if ( ( code = mcode ) < 0 )		5669206	17					
ANR	5670481	Condition	( code = mcode ) < 0	1315:12:56271:56288	5669206	0	True				
ANR	5670482	RelationalExpression	( code = mcode ) < 0		5669206	0		<			
ANR	5670483	AssignmentExpression	code = mcode		5669206	0		=			
ANR	5670484	Identifier	code		5669206	0					
ANR	5670485	Identifier	mcode		5669206	1					
ANR	5670486	PrimaryExpression	0		5669206	1					
ANR	5670487	GotoStatement	goto err ;	1315:32:56291:56299	5669206	1	True				
ANR	5670488	Identifier	err		5669206	0					
ANR	5670489	ExpressionStatement	ptemp = pdevc	1317:8:56362:56375	5669206	18	True				
ANR	5670490	AssignmentExpression	ptemp = pdevc		5669206	0		=			
ANR	5670491	Identifier	ptemp		5669206	0					
ANR	5670492	Identifier	pdevc		5669206	1					
ANR	5670493	ExpressionStatement	pdevc = pdevc_next	1318:8:56385:56403	5669206	19	True				
ANR	5670494	AssignmentExpression	pdevc = pdevc_next		5669206	0		=			
ANR	5670495	Identifier	pdevc		5669206	0					
ANR	5670496	Identifier	pdevc_next		5669206	1					
ANR	5670497	ExpressionStatement	pdevc_next = ptemp	1319:8:56413:56431	5669206	20	True				
ANR	5670498	AssignmentExpression	pdevc_next = ptemp		5669206	0		=			
ANR	5670499	Identifier	pdevc_next		5669206	0					
ANR	5670500	Identifier	ptemp		5669206	1					
ANR	5670501	Label	set :	1320:0:56433:56436	5669206	21	True				
ANR	5670502	Identifier	set		5669206	0					
ANR	5670503	ExpressionStatement	run = next	1320:5:56438:56448	5669206	22	True				
ANR	5670504	AssignmentExpression	run = next		5669206	0		=			
ANR	5670505	Identifier	run		5669206	0					
ANR	5670506	Identifier	next		5669206	1					
ANR	5670507	Label	inc :	1321:0:56450:56453	5669206	23	True				
ANR	5670508	Identifier	inc		5669206	0					
ANR	5670509	ExpressionStatement	xprev = dda_current ( pnext . x )	1321:5:56455:56483	5669206	24	True				
ANR	5670510	AssignmentExpression	xprev = dda_current ( pnext . x )		5669206	0		=			
ANR	5670511	Identifier	xprev		5669206	0					
ANR	5670512	CallExpression	dda_current ( pnext . x )		5669206	1					
ANR	5670513	Callee	dda_current		5669206	0					
ANR	5670514	Identifier	dda_current		5669206	0					
ANR	5670515	ArgumentList	pnext . x		5669206	1					
ANR	5670516	Argument	pnext . x		5669206	0					
ANR	5670517	MemberAccess	pnext . x		5669206	0					
ANR	5670518	Identifier	pnext		5669206	0					
ANR	5670519	Identifier	x		5669206	1					
ANR	5670520	ExpressionStatement	yprev = dda_current ( pnext . y )	1322:8:56493:56521	5669206	25	True				
ANR	5670521	AssignmentExpression	yprev = dda_current ( pnext . y )		5669206	0		=			
ANR	5670522	Identifier	yprev		5669206	0					
ANR	5670523	CallExpression	dda_current ( pnext . y )		5669206	1					
ANR	5670524	Callee	dda_current		5669206	0					
ANR	5670525	Identifier	dda_current		5669206	0					
ANR	5670526	ArgumentList	pnext . y		5669206	1					
ANR	5670527	Argument	pnext . y		5669206	0					
ANR	5670528	MemberAccess	pnext . y		5669206	0					
ANR	5670529	Identifier	pnext		5669206	0					
ANR	5670530	Identifier	y		5669206	1					
ANR	5670531	SwitchStatement	switch ( posture )		5669206	54					
ANR	5670532	Condition	posture	1331:12:56899:56905	5669206	0	True				
ANR	5670533	Identifier	posture		5669206	0					
ANR	5670534	CompoundStatement		199:21:7938:7938	5669206	1					
ANR	5670535	Label	case image_portrait :	1332:8:56918:56937	5669206	0	True				
ANR	5670536	Identifier	image_portrait		5669206	0					
ANR	5670537	CompoundStatement		203:16:8047:8098	5669206	1					
ANR	5670538	IdentifierDeclStatement	int xi = irun ;	1334:16:56986:56999	5669206	0	True				
ANR	5670539	IdentifierDecl	xi = irun		5669206	0					
ANR	5670540	IdentifierDeclType	int		5669206	0					
ANR	5670541	Identifier	xi		5669206	1					
ANR	5670542	AssignmentExpression	xi = irun		5669206	2		=			
ANR	5670543	Identifier	irun		5669206	0					
ANR	5670544	Identifier	irun		5669206	1					
ANR	5670545	IdentifierDeclStatement	int wi = ( irun = fixed2int_var_rounded ( xprev ) ) - xi ;	1335:16:57017:57068	5669206	1	True				
ANR	5670546	IdentifierDecl	wi = ( irun = fixed2int_var_rounded ( xprev ) ) - xi		5669206	0					
ANR	5670547	IdentifierDeclType	int		5669206	0					
ANR	5670548	Identifier	wi		5669206	1					
ANR	5670549	AssignmentExpression	wi = ( irun = fixed2int_var_rounded ( xprev ) ) - xi		5669206	2		=			
ANR	5670550	Identifier	wi		5669206	0					
ANR	5670551	AdditiveExpression	( irun = fixed2int_var_rounded ( xprev ) ) - xi		5669206	1		-			
ANR	5670552	AssignmentExpression	irun = fixed2int_var_rounded ( xprev )		5669206	0		=			
ANR	5670553	Identifier	irun		5669206	0					
ANR	5670554	CallExpression	fixed2int_var_rounded ( xprev )		5669206	1					
ANR	5670555	Callee	fixed2int_var_rounded		5669206	0					
ANR	5670556	Identifier	fixed2int_var_rounded		5669206	0					
ANR	5670557	ArgumentList	xprev		5669206	1					
ANR	5670558	Argument	xprev		5669206	0					
ANR	5670559	Identifier	xprev		5669206	0					
ANR	5670560	Identifier	xi		5669206	1					
ANR	5670561	IfStatement	if ( wi < 0 )		5669206	2					
ANR	5670562	Condition	wi < 0	1337:20:57091:57096	5669206	0	True				
ANR	5670563	RelationalExpression	wi < 0		5669206	0		<			
ANR	5670564	Identifier	wi		5669206	0					
ANR	5670565	PrimaryExpression	0		5669206	1					
ANR	5670566	ExpressionStatement	"xi += wi , wi = - wi"	1338:20:57119:57137	5669206	1	True				
ANR	5670567	Expression	"xi += wi , wi = - wi"		5669206	0					
ANR	5670568	AssignmentExpression	xi += wi		5669206	0		+=			
ANR	5670569	Identifier	xi		5669206	0					
ANR	5670570	Identifier	wi		5669206	1					
ANR	5670571	AssignmentExpression	wi = - wi		5669206	1		=			
ANR	5670572	Identifier	wi		5669206	0					
ANR	5670573	UnaryOperationExpression	- wi		5669206	1					
ANR	5670574	UnaryOperator	-		5669206	0					
ANR	5670575	Identifier	wi		5669206	1					
ANR	5670576	IfStatement	if ( wi > 0 )		5669206	3					
ANR	5670577	Condition	wi > 0	1339:20:57159:57164	5669206	0	True				
ANR	5670578	RelationalExpression	wi > 0		5669206	0		>			
ANR	5670579	Identifier	wi		5669206	0					
ANR	5670580	PrimaryExpression	0		5669206	1					
ANR	5670581	ExpressionStatement	"code = gx_fill_rectangle_device_rop ( xi , vci , wi , vdi , pdevc , dev , lop )"	1340:20:57187:57313	5669206	1	True				
ANR	5670582	AssignmentExpression	"code = gx_fill_rectangle_device_rop ( xi , vci , wi , vdi , pdevc , dev , lop )"		5669206	0		=			
ANR	5670583	Identifier	code		5669206	0					
ANR	5670584	CallExpression	"gx_fill_rectangle_device_rop ( xi , vci , wi , vdi , pdevc , dev , lop )"		5669206	1					
ANR	5670585	Callee	gx_fill_rectangle_device_rop		5669206	0					
ANR	5670586	Identifier	gx_fill_rectangle_device_rop		5669206	0					
ANR	5670587	ArgumentList	xi		5669206	1					
ANR	5670588	Argument	xi		5669206	0					
ANR	5670589	Identifier	xi		5669206	0					
ANR	5670590	Argument	vci		5669206	1					
ANR	5670591	Identifier	vci		5669206	0					
ANR	5670592	Argument	wi		5669206	2					
ANR	5670593	Identifier	wi		5669206	0					
ANR	5670594	Argument	vdi		5669206	3					
ANR	5670595	Identifier	vdi		5669206	0					
ANR	5670596	Argument	pdevc		5669206	4					
ANR	5670597	Identifier	pdevc		5669206	0					
ANR	5670598	Argument	dev		5669206	5					
ANR	5670599	Identifier	dev		5669206	0					
ANR	5670600	Argument	lop		5669206	6					
ANR	5670601	Identifier	lop		5669206	0					
ANR	5670602	BreakStatement	break ;	1343:12:57341:57346	5669206	2	True				
ANR	5670603	Label	case image_landscape :	1344:8:57356:57376	5669206	3	True				
ANR	5670604	Identifier	image_landscape		5669206	0					
ANR	5670605	CompoundStatement		215:16:8504:8555	5669206	4					
ANR	5670606	IdentifierDeclStatement	int yi = irun ;	1346:16:57443:57456	5669206	0	True				
ANR	5670607	IdentifierDecl	yi = irun		5669206	0					
ANR	5670608	IdentifierDeclType	int		5669206	0					
ANR	5670609	Identifier	yi		5669206	1					
ANR	5670610	AssignmentExpression	yi = irun		5669206	2		=			
ANR	5670611	Identifier	irun		5669206	0					
ANR	5670612	Identifier	irun		5669206	1					
ANR	5670613	IdentifierDeclStatement	int hi = ( irun = fixed2int_var_rounded ( yprev ) ) - yi ;	1347:16:57474:57525	5669206	1	True				
ANR	5670614	IdentifierDecl	hi = ( irun = fixed2int_var_rounded ( yprev ) ) - yi		5669206	0					
ANR	5670615	IdentifierDeclType	int		5669206	0					
ANR	5670616	Identifier	hi		5669206	1					
ANR	5670617	AssignmentExpression	hi = ( irun = fixed2int_var_rounded ( yprev ) ) - yi		5669206	2		=			
ANR	5670618	Identifier	hi		5669206	0					
ANR	5670619	AdditiveExpression	( irun = fixed2int_var_rounded ( yprev ) ) - yi		5669206	1		-			
ANR	5670620	AssignmentExpression	irun = fixed2int_var_rounded ( yprev )		5669206	0		=			
ANR	5670621	Identifier	irun		5669206	0					
ANR	5670622	CallExpression	fixed2int_var_rounded ( yprev )		5669206	1					
ANR	5670623	Callee	fixed2int_var_rounded		5669206	0					
ANR	5670624	Identifier	fixed2int_var_rounded		5669206	0					
ANR	5670625	ArgumentList	yprev		5669206	1					
ANR	5670626	Argument	yprev		5669206	0					
ANR	5670627	Identifier	yprev		5669206	0					
ANR	5670628	Identifier	yi		5669206	1					
ANR	5670629	IfStatement	if ( hi < 0 )		5669206	2					
ANR	5670630	Condition	hi < 0	1349:20:57548:57553	5669206	0	True				
ANR	5670631	RelationalExpression	hi < 0		5669206	0		<			
ANR	5670632	Identifier	hi		5669206	0					
ANR	5670633	PrimaryExpression	0		5669206	1					
ANR	5670634	ExpressionStatement	"yi += hi , hi = - hi"	1350:20:57576:57594	5669206	1	True				
ANR	5670635	Expression	"yi += hi , hi = - hi"		5669206	0					
ANR	5670636	AssignmentExpression	yi += hi		5669206	0		+=			
ANR	5670637	Identifier	yi		5669206	0					
ANR	5670638	Identifier	hi		5669206	1					
ANR	5670639	AssignmentExpression	hi = - hi		5669206	1		=			
ANR	5670640	Identifier	hi		5669206	0					
ANR	5670641	UnaryOperationExpression	- hi		5669206	1					
ANR	5670642	UnaryOperator	-		5669206	0					
ANR	5670643	Identifier	hi		5669206	1					
ANR	5670644	IfStatement	if ( hi > 0 )		5669206	3					
ANR	5670645	Condition	hi > 0	1351:20:57616:57621	5669206	0	True				
ANR	5670646	RelationalExpression	hi > 0		5669206	0		>			
ANR	5670647	Identifier	hi		5669206	0					
ANR	5670648	PrimaryExpression	0		5669206	1					
ANR	5670649	ExpressionStatement	"code = gx_fill_rectangle_device_rop ( vci , yi , vdi , hi , pdevc , dev , lop )"	1352:20:57644:57770	5669206	1	True				
ANR	5670650	AssignmentExpression	"code = gx_fill_rectangle_device_rop ( vci , yi , vdi , hi , pdevc , dev , lop )"		5669206	0		=			
ANR	5670651	Identifier	code		5669206	0					
ANR	5670652	CallExpression	"gx_fill_rectangle_device_rop ( vci , yi , vdi , hi , pdevc , dev , lop )"		5669206	1					
ANR	5670653	Callee	gx_fill_rectangle_device_rop		5669206	0					
ANR	5670654	Identifier	gx_fill_rectangle_device_rop		5669206	0					
ANR	5670655	ArgumentList	vci		5669206	1					
ANR	5670656	Argument	vci		5669206	0					
ANR	5670657	Identifier	vci		5669206	0					
ANR	5670658	Argument	yi		5669206	1					
ANR	5670659	Identifier	yi		5669206	0					
ANR	5670660	Argument	vdi		5669206	2					
ANR	5670661	Identifier	vdi		5669206	0					
ANR	5670662	Argument	hi		5669206	3					
ANR	5670663	Identifier	hi		5669206	0					
ANR	5670664	Argument	pdevc		5669206	4					
ANR	5670665	Identifier	pdevc		5669206	0					
ANR	5670666	Argument	dev		5669206	5					
ANR	5670667	Identifier	dev		5669206	0					
ANR	5670668	Argument	lop		5669206	6					
ANR	5670669	Identifier	lop		5669206	0					
ANR	5670670	BreakStatement	break ;	1355:12:57798:57803	5669206	5	True				
ANR	5670671	Label	default :	1356:8:57813:57820	5669206	6	True				
ANR	5670672	Identifier	default		5669206	0					
ANR	5670673	CompoundStatement		225:12:8864:8864	5669206	7					
ANR	5670674	ExpressionStatement	"code = ( * dev_proc ( dev , fill_parallelogram ) ) ( dev , xrun , yrun , xprev - xrun , yprev - yrun , pdyx , pdyy , pdevc , lop )"	1358:16:57873:58027	5669206	0	True				
ANR	5670675	AssignmentExpression	"code = ( * dev_proc ( dev , fill_parallelogram ) ) ( dev , xrun , yrun , xprev - xrun , yprev - yrun , pdyx , pdyy , pdevc , lop )"		5669206	0		=			
ANR	5670676	Identifier	code		5669206	0					
ANR	5670677	CallExpression	"( * dev_proc ( dev , fill_parallelogram ) ) ( dev , xrun , yrun , xprev - xrun , yprev - yrun , pdyx , pdyy , pdevc , lop )"		5669206	1					
ANR	5670678	Callee	"* dev_proc ( dev , fill_parallelogram )"		5669206	0					
ANR	5670679	UnaryOperationExpression	"* dev_proc ( dev , fill_parallelogram )"		5669206	0					
ANR	5670680	UnaryOperator	*		5669206	0					
ANR	5670681	CallExpression	"dev_proc ( dev , fill_parallelogram )"		5669206	1					
ANR	5670682	Callee	dev_proc		5669206	0					
ANR	5670683	Identifier	dev_proc		5669206	0					
ANR	5670684	ArgumentList	dev		5669206	1					
ANR	5670685	Argument	dev		5669206	0					
ANR	5670686	Identifier	dev		5669206	0					
ANR	5670687	Argument	fill_parallelogram		5669206	1					
ANR	5670688	Identifier	fill_parallelogram		5669206	0					
ANR	5670689	ArgumentList	dev		5669206	1					
ANR	5670690	Argument	dev		5669206	0					
ANR	5670691	Identifier	dev		5669206	0					
ANR	5670692	Argument	xrun		5669206	1					
ANR	5670693	Identifier	xrun		5669206	0					
ANR	5670694	Argument	yrun		5669206	2					
ANR	5670695	Identifier	yrun		5669206	0					
ANR	5670696	Argument	xprev - xrun		5669206	3					
ANR	5670697	AdditiveExpression	xprev - xrun		5669206	0		-			
ANR	5670698	Identifier	xprev		5669206	0					
ANR	5670699	Identifier	xrun		5669206	1					
ANR	5670700	Argument	yprev - yrun		5669206	4					
ANR	5670701	AdditiveExpression	yprev - yrun		5669206	0		-			
ANR	5670702	Identifier	yprev		5669206	0					
ANR	5670703	Identifier	yrun		5669206	1					
ANR	5670704	Argument	pdyx		5669206	5					
ANR	5670705	Identifier	pdyx		5669206	0					
ANR	5670706	Argument	pdyy		5669206	6					
ANR	5670707	Identifier	pdyy		5669206	0					
ANR	5670708	Argument	pdevc		5669206	7					
ANR	5670709	Identifier	pdevc		5669206	0					
ANR	5670710	Argument	lop		5669206	8					
ANR	5670711	Identifier	lop		5669206	0					
ANR	5670712	ReturnStatement	return ( code < 0 ? code : 1 ) ;	1363:4:58053:58081	5669206	55	True				
ANR	5670713	ConditionalExpression	code < 0 ? code : 1		5669206	0					
ANR	5670714	Condition	code < 0		5669206	0					
ANR	5670715	RelationalExpression	code < 0		5669206	0		<			
ANR	5670716	Identifier	code		5669206	0					
ANR	5670717	PrimaryExpression	0		5669206	1					
ANR	5670718	Identifier	code		5669206	1					
ANR	5670719	PrimaryExpression	1		5669206	2					
ANR	5670720	Label	err :	1365:0:58136:58139	5669206	56	True				
ANR	5670721	Identifier	err		5669206	0					
ANR	5670722	ExpressionStatement	penum_orig -> used . x = ( rsrc - spp - psrc_initial ) / spp	1366:4:58145:58199	5669206	57	True				
ANR	5670723	AssignmentExpression	penum_orig -> used . x = ( rsrc - spp - psrc_initial ) / spp		5669206	0		=			
ANR	5670724	MemberAccess	penum_orig -> used . x		5669206	0					
ANR	5670725	PtrMemberAccess	penum_orig -> used		5669206	0					
ANR	5670726	Identifier	penum_orig		5669206	0					
ANR	5670727	Identifier	used		5669206	1					
ANR	5670728	Identifier	x		5669206	1					
ANR	5670729	MultiplicativeExpression	( rsrc - spp - psrc_initial ) / spp		5669206	1		/			
ANR	5670730	AdditiveExpression	rsrc - spp - psrc_initial		5669206	0		-			
ANR	5670731	Identifier	rsrc		5669206	0					
ANR	5670732	AdditiveExpression	spp - psrc_initial		5669206	1		-			
ANR	5670733	Identifier	spp		5669206	0					
ANR	5670734	Identifier	psrc_initial		5669206	1					
ANR	5670735	Identifier	spp		5669206	1					
ANR	5670736	ExpressionStatement	penum_orig -> used . y = 0	1367:4:58205:58227	5669206	58	True				
ANR	5670737	AssignmentExpression	penum_orig -> used . y = 0		5669206	0		=			
ANR	5670738	MemberAccess	penum_orig -> used . y		5669206	0					
ANR	5670739	PtrMemberAccess	penum_orig -> used		5669206	0					
ANR	5670740	Identifier	penum_orig		5669206	0					
ANR	5670741	Identifier	used		5669206	1					
ANR	5670742	Identifier	y		5669206	1					
ANR	5670743	PrimaryExpression	0		5669206	1					
ANR	5670744	ReturnStatement	return code ;	1368:4:58233:58244	5669206	59	True				
ANR	5670745	Identifier	code		5669206	0					
ANR	5670746	ReturnType	static int		5669206	1					
ANR	5670747	Identifier	image_render_color_DeviceN		5669206	2					
ANR	5670748	ParameterList	"gx_image_enum * penum_orig , const byte * buffer , int data_x , uint w , int h , gx_device * dev"		5669206	3					
ANR	5670749	Parameter	gx_image_enum * penum_orig	1131:27:48859:48883	5669206	0	True				
ANR	5670750	ParameterType	gx_image_enum *		5669206	0					
ANR	5670751	Identifier	penum_orig		5669206	1					
ANR	5670752	Parameter	const byte * buffer	1131:54:48886:48903	5669206	1	True				
ANR	5670753	ParameterType	const byte *		5669206	0					
ANR	5670754	Identifier	buffer		5669206	1					
ANR	5670755	Parameter	int data_x	1131:74:48906:48915	5669206	2	True				
ANR	5670756	ParameterType	int		5669206	0					
ANR	5670757	Identifier	data_x		5669206	1					
ANR	5670758	Parameter	uint w	1132:19:48937:48942	5669206	3	True				
ANR	5670759	ParameterType	uint		5669206	0					
ANR	5670760	Identifier	w		5669206	1					
ANR	5670761	Parameter	int h	1132:27:48945:48949	5669206	4	True				
ANR	5670762	ParameterType	int		5669206	0					
ANR	5670763	Identifier	h		5669206	1					
ANR	5670764	Parameter	gx_device * dev	1132:34:48952:48966	5669206	5	True				
ANR	5670765	ParameterType	gx_device *		5669206	0					
ANR	5670766	Identifier	dev		5669206	1					
ANR	5670767	CFGEntryNode	ENTRY		5669206		True				
ANR	5670768	CFGExitNode	EXIT		5669206		True				
ANR	5670769	Symbol	penum -> dda . row		5669206						
ANR	5670770	Symbol	hi		5669206						
ANR	5670771	Symbol	* pdevc -> colors		5669206						
ANR	5670772	Symbol	pdevc -> colors . devn . values		5669206						
ANR	5670773	Symbol	penum -> dda . pixel0		5669206						
ANR	5670774	Symbol	pdevc_next		5669206						
ANR	5670775	Symbol	* cc		5669206						
ANR	5670776	Symbol	* pdevc_next		5669206						
ANR	5670777	Symbol	pdevc		5669206						
ANR	5670778	Symbol	rsrc		5669206						
ANR	5670779	Symbol	pdevc -> colors . devn		5669206						
ANR	5670780	Symbol	* pdevc_next -> colors . binary . color		5669206						
ANR	5670781	Symbol	gs_color_space_is_ICC		5669206						
ANR	5670782	Symbol	dev_spec_op		5669206						
ANR	5670783	Symbol	gx_dc_type_none		5669206						
ANR	5670784	Symbol	penum -> wci		5669206						
ANR	5670785	Symbol	yi		5669206						
ANR	5670786	Symbol	data_x		5669206						
ANR	5670787	Symbol	dev		5669206						
ANR	5670788	Symbol	pdevc -> colors		5669206						
ANR	5670789	Symbol	pdevc_next -> colors . devn . values		5669206						
ANR	5670790	Symbol	pdyy		5669206						
ANR	5670791	Symbol	pdevc -> type		5669206						
ANR	5670792	Symbol	ptemp		5669206						
ANR	5670793	Symbol	pcs -> cmm_icc_profile_data		5669206						
ANR	5670794	Symbol	pdyx		5669206						
ANR	5670795	Symbol	penum		5669206						
ANR	5670796	Symbol	psrc_initial		5669206						
ANR	5670797	Symbol	xrun		5669206						
ANR	5670798	Symbol	remap_color		5669206						
ANR	5670799	Symbol	fill_parallelogram		5669206						
ANR	5670800	Symbol	penum -> dda		5669206						
ANR	5670801	Symbol	penum -> pcs		5669206						
ANR	5670802	Symbol	* pdevc_next -> colors . binary		5669206						
ANR	5670803	Symbol	cc . paint . values		5669206						
ANR	5670804	Symbol	pnext		5669206						
ANR	5670805	Symbol	penum_orig -> used		5669206						
ANR	5670806	Symbol	psrc		5669206						
ANR	5670807	Symbol	* dev		5669206						
ANR	5670808	Symbol	* penum		5669206						
ANR	5670809	Symbol	* pdevc_next -> colors . devn . values		5669206						
ANR	5670810	Symbol	* penum_orig		5669206						
ANR	5670811	Symbol	* dev_proc		5669206						
ANR	5670812	Symbol	yrun		5669206						
ANR	5670813	Symbol	lop		5669206						
ANR	5670814	Symbol	fixed2int_var_rounded		5669206						
ANR	5670815	Symbol	penum -> pgs		5669206						
ANR	5670816	Symbol	penum -> mask_color . exact		5669206						
ANR	5670817	Symbol	* pdevc		5669206						
ANR	5670818	Symbol	bufend		5669206						
ANR	5670819	Symbol	penum -> mask_color		5669206						
ANR	5670820	Symbol	penum -> cur		5669206						
ANR	5670821	Symbol	* run . v		5669206						
ANR	5670822	Symbol	* pcs -> type		5669206						
ANR	5670823	Symbol	pgs		5669206						
ANR	5670824	Symbol	vci		5669206						
ANR	5670825	Symbol	cc		5669206						
ANR	5670826	Symbol	pcs -> type -> remap_color		5669206						
ANR	5670827	Symbol	* pdevc -> colors . devn . values		5669206						
ANR	5670828	Symbol	& next		5669206						
ANR	5670829	Symbol	xprev		5669206						
ANR	5670830	Symbol	penum -> log_op		5669206						
ANR	5670831	Symbol	posture		5669206						
ANR	5670832	Symbol	pdevc_next -> colors		5669206						
ANR	5670833	Symbol	h		5669206						
ANR	5670834	Symbol	i		5669206						
ANR	5670835	Symbol	penum -> dda . row . x		5669206						
ANR	5670836	Symbol	penum_orig -> used . x		5669206						
ANR	5670837	Symbol	penum_orig -> used . y		5669206						
ANR	5670838	Symbol	pdevc_next -> colors . binary . color		5669206						
ANR	5670839	Symbol	penum -> posture		5669206						
ANR	5670840	Symbol	pnext . y		5669206						
ANR	5670841	Symbol	penum -> dda . row . y		5669206						
ANR	5670842	Symbol	mask_color_matches		5669206						
ANR	5670843	Symbol	w		5669206						
ANR	5670844	Symbol	pnext . x		5669206						
ANR	5670845	Symbol	cc . paint		5669206						
ANR	5670846	Symbol	pdevc_next -> colors . binary		5669206						
ANR	5670847	Symbol	vdi		5669206						
ANR	5670848	Symbol	* pdevc -> colors . devn		5669206						
ANR	5670849	Symbol	lab_case		5669206						
ANR	5670850	Symbol	* remap_color		5669206						
ANR	5670851	Symbol	pcs -> cmm_icc_profile_data -> islab		5669206						
ANR	5670852	Symbol	gs_color_select_source		5669206						
ANR	5670853	Symbol	* pcs		5669206						
ANR	5670854	Symbol	run		5669206						
ANR	5670855	Symbol	"* dev_proc ( dev , fill_parallelogram )"		5669206						
ANR	5670856	Symbol	& cc		5669206						
ANR	5670857	Symbol	* next		5669206						
ANR	5670858	Symbol	GS_CLIENT_COLOR_MAX_COMPONENTS		5669206						
ANR	5670859	Symbol	penum -> yci		5669206						
ANR	5670860	Symbol	pdevc_next -> colors . devn		5669206						
ANR	5670861	Symbol	* * pdevc_next		5669206						
ANR	5670862	Symbol	dev_color_eq		5669206						
ANR	5670863	Symbol	memcmp		5669206						
ANR	5670864	Symbol	* cc . paint . values		5669206						
ANR	5670865	Symbol	next . v		5669206						
ANR	5670866	Symbol	gs_debug_c		5669206						
ANR	5670867	Symbol	buffer		5669206						
ANR	5670868	Symbol	pcs -> type		5669206						
ANR	5670869	Symbol	NULL		5669206						
ANR	5670870	Symbol	test		5669206						
ANR	5670871	Symbol	run . v		5669206						
ANR	5670872	Symbol	* next . all		5669206						
ANR	5670873	Symbol	gx_fill_rectangle_device_rop		5669206						
ANR	5670874	Symbol	gxdso_supports_devn		5669206						
ANR	5670875	Symbol	spp		5669206						
ANR	5670876	Symbol	devc1		5669206						
ANR	5670877	Symbol	irun		5669206						
ANR	5670878	Symbol	* * pcs		5669206						
ANR	5670879	Symbol	devc2		5669206						
ANR	5670880	Symbol	penum -> mask_color . test		5669206						
ANR	5670881	Symbol	dda_current		5669206						
ANR	5670882	Symbol	penum -> cur . y		5669206						
ANR	5670883	Symbol	& run		5669206						
ANR	5670884	Symbol	penum -> cur . x		5669206						
ANR	5670885	Symbol	true		5669206						
ANR	5670886	Symbol	image_skewed		5669206						
ANR	5670887	Symbol	next		5669206						
ANR	5670888	Symbol	code		5669206						
ANR	5670889	Symbol	penum -> memory		5669206						
ANR	5670890	Symbol	penum_orig		5669206						
ANR	5670891	Symbol	gx_remap_ICC_imagelab		5669206						
ANR	5670892	Symbol	* pdevc_next -> colors		5669206						
ANR	5670893	Symbol	penum -> xci		5669206						
ANR	5670894	Symbol	wi		5669206						
ANR	5670895	Symbol	dev_proc		5669206						
ANR	5670896	Symbol	~psrc		5669206						
ANR	5670897	Symbol	penum -> hci		5669206						
ANR	5670898	Symbol	mask		5669206						
ANR	5670899	Symbol	penum -> spp		5669206						
ANR	5670900	Symbol	pcs		5669206						
ANR	5670901	Symbol	next . all		5669206						
ANR	5670902	Symbol	fixed2float		5669206						
ANR	5670903	Symbol	* next . v		5669206						
ANR	5670904	Symbol	false		5669206						
ANR	5670905	Symbol	* pcs -> cmm_icc_profile_data		5669206						
ANR	5670906	Symbol	* * pdevc		5669206						
ANR	5670907	Symbol	penum -> y		5669206						
ANR	5670908	Symbol	yprev		5669206						
ANR	5670909	Symbol	cs_proc_remap_color		5669206						
ANR	5670910	Symbol	& devc1		5669206						
ANR	5670911	Symbol	* pdevc_next -> colors . devn		5669206						
ANR	5670912	Symbol	xi		5669206						
ANR	5670913	Symbol	& devc2		5669206						
ANR	5670914	Symbol	* cc . paint		5669206						
ANR	5670915	Symbol	dev -> memory		5669206						
ANR	5670916	Symbol	penum -> mask_color . mask		5669206						
ANR	5670917	Symbol	* i		5669206						
ANR	5670918	Symbol	mcode		5669206						
ANR	5670919	Symbol	* run		5669206						
ANR	5670920	Symbol	pdevc_next -> type		5669206						
ANR	5670921	Symbol	* ~psrc		5669206						
