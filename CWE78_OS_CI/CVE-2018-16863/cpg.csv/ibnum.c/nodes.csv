command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5943138	File	data/converged/CVE-2018-16863_ghostpdl/ibnum.c								
ANR	5943139	DeclStmt									
ANR	5943140	Decl							const byte	const byte [ ]	enc_num_bytes
ANR	5943141	Function	num_array_format	37:0:1122:2033							
ANR	5943142	FunctionDef	num_array_format (const ref * op)		5943141	0					
ANR	5943143	CompoundStatement		39:0:1159:2033	5943141	0					
ANR	5943144	IdentifierDeclStatement	int format ;	40:4:1165:1175	5943141	0	True				
ANR	5943145	IdentifierDecl	format		5943141	0					
ANR	5943146	IdentifierDeclType	int		5943141	0					
ANR	5943147	Identifier	format		5943141	1					
ANR	5943148	SwitchStatement	switch ( r_type ( op ) )		5943141	1					
ANR	5943149	Condition	r_type ( op )	42:12:1190:1199	5943141	0	True				
ANR	5943150	CallExpression	r_type ( op )		5943141	0					
ANR	5943151	Callee	r_type		5943141	0					
ANR	5943152	Identifier	r_type		5943141	0					
ANR	5943153	ArgumentList	op		5943141	1					
ANR	5943154	Argument	op		5943141	0					
ANR	5943155	Identifier	op		5943141	0					
ANR	5943156	CompoundStatement		4:24:42:42	5943141	1					
ANR	5943157	Label	case t_string :	43:8:1212:1225	5943141	0	True				
ANR	5943158	Identifier	t_string		5943141	0					
ANR	5943159	CompoundStatement		8:16:174:206	5943141	1					
ANR	5943160	IdentifierDeclStatement	const byte * bp = op -> value . bytes ;	46:16:1334:1366	5943141	0	True				
ANR	5943161	IdentifierDecl	* bp = op -> value . bytes		5943141	0					
ANR	5943162	IdentifierDeclType	const byte *		5943141	0					
ANR	5943163	Identifier	bp		5943141	1					
ANR	5943164	AssignmentExpression	* bp = op -> value . bytes		5943141	2		=			
ANR	5943165	Identifier	bp		5943141	0					
ANR	5943166	MemberAccess	op -> value . bytes		5943141	1					
ANR	5943167	PtrMemberAccess	op -> value		5943141	0					
ANR	5943168	Identifier	op		5943141	0					
ANR	5943169	Identifier	value		5943141	1					
ANR	5943170	Identifier	bytes		5943141	1					
ANR	5943171	IfStatement	if ( r_size ( op ) < 4 || bp [ 0 ] != bt_num_array_value )		5943141	1					
ANR	5943172	Condition	r_size ( op ) < 4 || bp [ 0 ] != bt_num_array_value	48:20:1389:1433	5943141	0	True				
ANR	5943173	OrExpression	r_size ( op ) < 4 || bp [ 0 ] != bt_num_array_value		5943141	0		||			
ANR	5943174	RelationalExpression	r_size ( op ) < 4		5943141	0		<			
ANR	5943175	CallExpression	r_size ( op )		5943141	0					
ANR	5943176	Callee	r_size		5943141	0					
ANR	5943177	Identifier	r_size		5943141	0					
ANR	5943178	ArgumentList	op		5943141	1					
ANR	5943179	Argument	op		5943141	0					
ANR	5943180	Identifier	op		5943141	0					
ANR	5943181	PrimaryExpression	4		5943141	1					
ANR	5943182	EqualityExpression	bp [ 0 ] != bt_num_array_value		5943141	1		!=			
ANR	5943183	ArrayIndexing	bp [ 0 ]		5943141	0					
ANR	5943184	Identifier	bp		5943141	0					
ANR	5943185	PrimaryExpression	0		5943141	1					
ANR	5943186	Identifier	bt_num_array_value		5943141	1					
ANR	5943187	ExpressionStatement	return_error ( gs_error_typecheck )	49:20:1456:1488	5943141	1	True				
ANR	5943188	CallExpression	return_error ( gs_error_typecheck )		5943141	0					
ANR	5943189	Callee	return_error		5943141	0					
ANR	5943190	Identifier	return_error		5943141	0					
ANR	5943191	ArgumentList	gs_error_typecheck		5943141	1					
ANR	5943192	Argument	gs_error_typecheck		5943141	0					
ANR	5943193	Identifier	gs_error_typecheck		5943141	0					
ANR	5943194	ExpressionStatement	format = bp [ 1 ]	50:16:1506:1520	5943141	2	True				
ANR	5943195	AssignmentExpression	format = bp [ 1 ]		5943141	0		=			
ANR	5943196	Identifier	format		5943141	0					
ANR	5943197	ArrayIndexing	bp [ 1 ]		5943141	1					
ANR	5943198	Identifier	bp		5943141	0					
ANR	5943199	PrimaryExpression	1		5943141	1					
ANR	5943200	IfStatement	"if ( ! num_is_valid ( format ) || sdecodeshort ( bp + 2 , format ) != ( r_size ( op ) - 4 ) / encoded_number_bytes ( format ) )"		5943141	3					
ANR	5943201	Condition	"! num_is_valid ( format ) || sdecodeshort ( bp + 2 , format ) != ( r_size ( op ) - 4 ) / encoded_number_bytes ( format )"	51:20:1542:1685	5943141	0	True				
ANR	5943202	OrExpression	"! num_is_valid ( format ) || sdecodeshort ( bp + 2 , format ) != ( r_size ( op ) - 4 ) / encoded_number_bytes ( format )"		5943141	0		||			
ANR	5943203	UnaryOperationExpression	! num_is_valid ( format )		5943141	0					
ANR	5943204	UnaryOperator	!		5943141	0					
ANR	5943205	CallExpression	num_is_valid ( format )		5943141	1					
ANR	5943206	Callee	num_is_valid		5943141	0					
ANR	5943207	Identifier	num_is_valid		5943141	0					
ANR	5943208	ArgumentList	format		5943141	1					
ANR	5943209	Argument	format		5943141	0					
ANR	5943210	Identifier	format		5943141	0					
ANR	5943211	EqualityExpression	"sdecodeshort ( bp + 2 , format ) != ( r_size ( op ) - 4 ) / encoded_number_bytes ( format )"		5943141	1		!=			
ANR	5943212	CallExpression	"sdecodeshort ( bp + 2 , format )"		5943141	0					
ANR	5943213	Callee	sdecodeshort		5943141	0					
ANR	5943214	Identifier	sdecodeshort		5943141	0					
ANR	5943215	ArgumentList	bp + 2		5943141	1					
ANR	5943216	Argument	bp + 2		5943141	0					
ANR	5943217	AdditiveExpression	bp + 2		5943141	0		+			
ANR	5943218	Identifier	bp		5943141	0					
ANR	5943219	PrimaryExpression	2		5943141	1					
ANR	5943220	Argument	format		5943141	1					
ANR	5943221	Identifier	format		5943141	0					
ANR	5943222	MultiplicativeExpression	( r_size ( op ) - 4 ) / encoded_number_bytes ( format )		5943141	1		/			
ANR	5943223	AdditiveExpression	r_size ( op ) - 4		5943141	0		-			
ANR	5943224	CallExpression	r_size ( op )		5943141	0					
ANR	5943225	Callee	r_size		5943141	0					
ANR	5943226	Identifier	r_size		5943141	0					
ANR	5943227	ArgumentList	op		5943141	1					
ANR	5943228	Argument	op		5943141	0					
ANR	5943229	Identifier	op		5943141	0					
ANR	5943230	PrimaryExpression	4		5943141	1					
ANR	5943231	CallExpression	encoded_number_bytes ( format )		5943141	1					
ANR	5943232	Callee	encoded_number_bytes		5943141	0					
ANR	5943233	Identifier	encoded_number_bytes		5943141	0					
ANR	5943234	ArgumentList	format		5943141	1					
ANR	5943235	Argument	format		5943141	0					
ANR	5943236	Identifier	format		5943141	0					
ANR	5943237	ExpressionStatement	return_error ( gs_error_rangecheck )	55:20:1729:1762	5943141	1	True				
ANR	5943238	CallExpression	return_error ( gs_error_rangecheck )		5943141	0					
ANR	5943239	Callee	return_error		5943141	0					
ANR	5943240	Identifier	return_error		5943141	0					
ANR	5943241	ArgumentList	gs_error_rangecheck		5943141	1					
ANR	5943242	Argument	gs_error_rangecheck		5943141	0					
ANR	5943243	Identifier	gs_error_rangecheck		5943141	0					
ANR	5943244	BreakStatement	break ;	57:12:1790:1795	5943141	2	True				
ANR	5943245	Label	case t_array :	58:8:1805:1817	5943141	3	True				
ANR	5943246	Identifier	t_array		5943141	0					
ANR	5943247	Label	case t_mixedarray :	59:8:1827:1844	5943141	4	True				
ANR	5943248	Identifier	t_mixedarray		5943141	0					
ANR	5943249	Label	case t_shortarray :	60:8:1854:1871	5943141	5	True				
ANR	5943250	Identifier	t_shortarray		5943141	0					
ANR	5943251	ExpressionStatement	format = num_array	61:12:1885:1903	5943141	6	True				
ANR	5943252	AssignmentExpression	format = num_array		5943141	0		=			
ANR	5943253	Identifier	format		5943141	0					
ANR	5943254	Identifier	num_array		5943141	1					
ANR	5943255	BreakStatement	break ;	62:12:1917:1922	5943141	7	True				
ANR	5943256	Label	default :	63:8:1932:1939	5943141	8	True				
ANR	5943257	Identifier	default		5943141	0					
ANR	5943258	ExpressionStatement	return_error ( gs_error_typecheck )	64:12:1953:1985	5943141	9	True				
ANR	5943259	CallExpression	return_error ( gs_error_typecheck )		5943141	0					
ANR	5943260	Callee	return_error		5943141	0					
ANR	5943261	Identifier	return_error		5943141	0					
ANR	5943262	ArgumentList	gs_error_typecheck		5943141	1					
ANR	5943263	Argument	gs_error_typecheck		5943141	0					
ANR	5943264	Identifier	gs_error_typecheck		5943141	0					
ANR	5943265	ExpressionStatement	check_read ( * op )	66:4:1997:2012	5943141	2	True				
ANR	5943266	CallExpression	check_read ( * op )		5943141	0					
ANR	5943267	Callee	check_read		5943141	0					
ANR	5943268	Identifier	check_read		5943141	0					
ANR	5943269	ArgumentList	* op		5943141	1					
ANR	5943270	Argument	* op		5943141	0					
ANR	5943271	UnaryOperationExpression	* op		5943141	0					
ANR	5943272	UnaryOperator	*		5943141	0					
ANR	5943273	Identifier	op		5943141	1					
ANR	5943274	ReturnStatement	return format ;	67:4:2018:2031	5943141	3	True				
ANR	5943275	Identifier	format		5943141	0					
ANR	5943276	ReturnType	int		5943141	1					
ANR	5943277	Identifier	num_array_format		5943141	2					
ANR	5943278	ParameterList	const ref * op		5943141	3					
ANR	5943279	Parameter	const ref * op	38:17:1143:1156	5943141	0	True				
ANR	5943280	ParameterType	const ref *		5943141	0					
ANR	5943281	Identifier	op		5943141	1					
ANR	5943282	CFGEntryNode	ENTRY		5943141		True				
ANR	5943283	CFGExitNode	EXIT		5943141		True				
ANR	5943284	Symbol	op		5943141						
ANR	5943285	Symbol	num_array		5943141						
ANR	5943286	Symbol	* op		5943141						
ANR	5943287	Symbol	gs_error_rangecheck		5943141						
ANR	5943288	Symbol	format		5943141						
ANR	5943289	Symbol	bt_num_array_value		5943141						
ANR	5943290	Symbol	bp		5943141						
ANR	5943291	Symbol	gs_error_typecheck		5943141						
ANR	5943292	Symbol	op -> value		5943141						
ANR	5943293	Symbol	num_is_valid		5943141						
ANR	5943294	Symbol	op -> value . bytes		5943141						
ANR	5943295	Symbol	r_size		5943141						
ANR	5943296	Symbol	* bp		5943141						
ANR	5943297	Symbol	r_type		5943141						
ANR	5943298	Symbol	encoded_number_bytes		5943141						
ANR	5943299	Symbol	sdecodeshort		5943141						
ANR	5943300	Function	num_array_size	71:0:2104:2263							
ANR	5943301	FunctionDef	"num_array_size (const ref * op , int format)"		5943300	0					
ANR	5943302	CompoundStatement		73:0:2152:2263	5943300	0					
ANR	5943303	ReturnStatement	return ( format == num_array ? r_size ( op ) : ( r_size ( op ) - 4 ) / encoded_number_bytes ( format ) ) ;	74:4:2158:2261	5943300	0	True				
ANR	5943304	ConditionalExpression	format == num_array ? r_size ( op ) : ( r_size ( op ) - 4 ) / encoded_number_bytes ( format )		5943300	0					
ANR	5943305	Condition	format == num_array		5943300	0					
ANR	5943306	EqualityExpression	format == num_array		5943300	0		==			
ANR	5943307	Identifier	format		5943300	0					
ANR	5943308	Identifier	num_array		5943300	1					
ANR	5943309	CallExpression	r_size ( op )		5943300	1					
ANR	5943310	Callee	r_size		5943300	0					
ANR	5943311	Identifier	r_size		5943300	0					
ANR	5943312	ArgumentList	op		5943300	1					
ANR	5943313	Argument	op		5943300	0					
ANR	5943314	Identifier	op		5943300	0					
ANR	5943315	MultiplicativeExpression	( r_size ( op ) - 4 ) / encoded_number_bytes ( format )		5943300	2		/			
ANR	5943316	AdditiveExpression	r_size ( op ) - 4		5943300	0		-			
ANR	5943317	CallExpression	r_size ( op )		5943300	0					
ANR	5943318	Callee	r_size		5943300	0					
ANR	5943319	Identifier	r_size		5943300	0					
ANR	5943320	ArgumentList	op		5943300	1					
ANR	5943321	Argument	op		5943300	0					
ANR	5943322	Identifier	op		5943300	0					
ANR	5943323	PrimaryExpression	4		5943300	1					
ANR	5943324	CallExpression	encoded_number_bytes ( format )		5943300	1					
ANR	5943325	Callee	encoded_number_bytes		5943300	0					
ANR	5943326	Identifier	encoded_number_bytes		5943300	0					
ANR	5943327	ArgumentList	format		5943300	1					
ANR	5943328	Argument	format		5943300	0					
ANR	5943329	Identifier	format		5943300	0					
ANR	5943330	ReturnType	uint		5943300	1					
ANR	5943331	Identifier	num_array_size		5943300	2					
ANR	5943332	ParameterList	"const ref * op , int format"		5943300	3					
ANR	5943333	Parameter	const ref * op	72:15:2124:2137	5943300	0	True				
ANR	5943334	ParameterType	const ref *		5943300	0					
ANR	5943335	Identifier	op		5943300	1					
ANR	5943336	Parameter	int format	72:31:2140:2149	5943300	1	True				
ANR	5943337	ParameterType	int		5943300	0					
ANR	5943338	Identifier	format		5943300	1					
ANR	5943339	CFGEntryNode	ENTRY		5943300		True				
ANR	5943340	CFGExitNode	EXIT		5943300		True				
ANR	5943341	Symbol	op		5943300						
ANR	5943342	Symbol	num_array		5943300						
ANR	5943343	Symbol	r_size		5943300						
ANR	5943344	Symbol	format		5943300						
ANR	5943345	Symbol	encoded_number_bytes		5943300						
ANR	5943346	Function	num_array_get	82:0:2513:3231							
ANR	5943347	FunctionDef	"num_array_get (const gs_memory_t * mem , const ref * op , int format , uint index , ref * np)"		5943346	0					
ANR	5943348	CompoundStatement		84:0:2605:3231	5943346	0					
ANR	5943349	IfStatement	if ( format == num_array )		5943346	0					
ANR	5943350	Condition	format == num_array	85:8:2615:2633	5943346	0	True				
ANR	5943351	EqualityExpression	format == num_array		5943346	0		==			
ANR	5943352	Identifier	format		5943346	0					
ANR	5943353	Identifier	num_array		5943346	1					
ANR	5943354	CompoundStatement		3:8:40:86	5943346	1					
ANR	5943355	IdentifierDeclStatement	"int code = array_get ( mem , op , ( long ) index , np ) ;"	86:8:2646:2692	5943346	0	True				
ANR	5943356	IdentifierDecl	"code = array_get ( mem , op , ( long ) index , np )"		5943346	0					
ANR	5943357	IdentifierDeclType	int		5943346	0					
ANR	5943358	Identifier	code		5943346	1					
ANR	5943359	AssignmentExpression	"code = array_get ( mem , op , ( long ) index , np )"		5943346	2		=			
ANR	5943360	Identifier	code		5943346	0					
ANR	5943361	CallExpression	"array_get ( mem , op , ( long ) index , np )"		5943346	1					
ANR	5943362	Callee	array_get		5943346	0					
ANR	5943363	Identifier	array_get		5943346	0					
ANR	5943364	ArgumentList	mem		5943346	1					
ANR	5943365	Argument	mem		5943346	0					
ANR	5943366	Identifier	mem		5943346	0					
ANR	5943367	Argument	op		5943346	1					
ANR	5943368	Identifier	op		5943346	0					
ANR	5943369	Argument	( long ) index		5943346	2					
ANR	5943370	CastExpression	( long ) index		5943346	0					
ANR	5943371	CastTarget	long		5943346	0					
ANR	5943372	Identifier	index		5943346	1					
ANR	5943373	Argument	np		5943346	3					
ANR	5943374	Identifier	np		5943346	0					
ANR	5943375	IfStatement	if ( code < 0 )		5943346	1					
ANR	5943376	Condition	code < 0	88:12:2707:2714	5943346	0	True				
ANR	5943377	RelationalExpression	code < 0		5943346	0		<			
ANR	5943378	Identifier	code		5943346	0					
ANR	5943379	PrimaryExpression	0		5943346	1					
ANR	5943380	ReturnStatement	return t_null ;	89:12:2729:2742	5943346	1	True				
ANR	5943381	Identifier	t_null		5943346	0					
ANR	5943382	SwitchStatement	switch ( r_type ( np ) )		5943346	2					
ANR	5943383	Condition	r_type ( np )	90:16:2760:2769	5943346	0	True				
ANR	5943384	CallExpression	r_type ( np )		5943346	0					
ANR	5943385	Callee	r_type		5943346	0					
ANR	5943386	Identifier	r_type		5943346	0					
ANR	5943387	ArgumentList	np		5943346	1					
ANR	5943388	Argument	np		5943346	0					
ANR	5943389	Identifier	np		5943346	0					
ANR	5943390	CompoundStatement		7:28:166:166	5943346	1					
ANR	5943391	Label	case t_integer :	91:12:2786:2800	5943346	0	True				
ANR	5943392	Identifier	t_integer		5943346	0					
ANR	5943393	ReturnStatement	return t_integer ;	92:16:2818:2834	5943346	1	True				
ANR	5943394	Identifier	t_integer		5943346	0					
ANR	5943395	Label	case t_real :	93:12:2848:2859	5943346	2	True				
ANR	5943396	Identifier	t_real		5943346	0					
ANR	5943397	ReturnStatement	return t_real ;	94:16:2877:2890	5943346	3	True				
ANR	5943398	Identifier	t_real		5943346	0					
ANR	5943399	Label	default :	95:12:2904:2911	5943346	4	True				
ANR	5943400	Identifier	default		5943346	0					
ANR	5943401	ExpressionStatement	return_error ( gs_error_typecheck )	96:16:2929:2961	5943346	5	True				
ANR	5943402	CallExpression	return_error ( gs_error_typecheck )		5943346	0					
ANR	5943403	Callee	return_error		5943346	0					
ANR	5943404	Identifier	return_error		5943346	0					
ANR	5943405	ArgumentList	gs_error_typecheck		5943346	1					
ANR	5943406	Argument	gs_error_typecheck		5943346	0					
ANR	5943407	Identifier	gs_error_typecheck		5943346	0					
ANR	5943408	ElseStatement	else		5943346	0					
ANR	5943409	CompoundStatement		16:8:388:430	5943346	0					
ANR	5943410	IdentifierDeclStatement	uint nbytes = encoded_number_bytes ( format ) ;	99:8:2994:3036	5943346	0	True				
ANR	5943411	IdentifierDecl	nbytes = encoded_number_bytes ( format )		5943346	0					
ANR	5943412	IdentifierDeclType	uint		5943346	0					
ANR	5943413	Identifier	nbytes		5943346	1					
ANR	5943414	AssignmentExpression	nbytes = encoded_number_bytes ( format )		5943346	2		=			
ANR	5943415	Identifier	nbytes		5943346	0					
ANR	5943416	CallExpression	encoded_number_bytes ( format )		5943346	1					
ANR	5943417	Callee	encoded_number_bytes		5943346	0					
ANR	5943418	Identifier	encoded_number_bytes		5943346	0					
ANR	5943419	ArgumentList	format		5943346	1					
ANR	5943420	Argument	format		5943346	0					
ANR	5943421	Identifier	format		5943346	0					
ANR	5943422	IfStatement	if ( index >= ( r_size ( op ) - 4 ) / nbytes )		5943346	1					
ANR	5943423	Condition	index >= ( r_size ( op ) - 4 ) / nbytes	101:12:3051:3084	5943346	0	True				
ANR	5943424	RelationalExpression	index >= ( r_size ( op ) - 4 ) / nbytes		5943346	0		>=			
ANR	5943425	Identifier	index		5943346	0					
ANR	5943426	MultiplicativeExpression	( r_size ( op ) - 4 ) / nbytes		5943346	1		/			
ANR	5943427	AdditiveExpression	r_size ( op ) - 4		5943346	0		-			
ANR	5943428	CallExpression	r_size ( op )		5943346	0					
ANR	5943429	Callee	r_size		5943346	0					
ANR	5943430	Identifier	r_size		5943346	0					
ANR	5943431	ArgumentList	op		5943346	1					
ANR	5943432	Argument	op		5943346	0					
ANR	5943433	Identifier	op		5943346	0					
ANR	5943434	PrimaryExpression	4		5943346	1					
ANR	5943435	Identifier	nbytes		5943346	1					
ANR	5943436	ReturnStatement	return t_null ;	102:12:3099:3112	5943346	1	True				
ANR	5943437	Identifier	t_null		5943346	0					
ANR	5943438	ReturnStatement	"return sdecode_number ( op -> value . bytes + 4 + index * nbytes , format , np ) ;"	103:8:3122:3223	5943346	2	True				
ANR	5943439	CallExpression	"sdecode_number ( op -> value . bytes + 4 + index * nbytes , format , np )"		5943346	0					
ANR	5943440	Callee	sdecode_number		5943346	0					
ANR	5943441	Identifier	sdecode_number		5943346	0					
ANR	5943442	ArgumentList	op -> value . bytes + 4 + index * nbytes		5943346	1					
ANR	5943443	Argument	op -> value . bytes + 4 + index * nbytes		5943346	0					
ANR	5943444	AdditiveExpression	op -> value . bytes + 4 + index * nbytes		5943346	0		+			
ANR	5943445	MemberAccess	op -> value . bytes		5943346	0					
ANR	5943446	PtrMemberAccess	op -> value		5943346	0					
ANR	5943447	Identifier	op		5943346	0					
ANR	5943448	Identifier	value		5943346	1					
ANR	5943449	Identifier	bytes		5943346	1					
ANR	5943450	AdditiveExpression	4 + index * nbytes		5943346	1		+			
ANR	5943451	PrimaryExpression	4		5943346	0					
ANR	5943452	MultiplicativeExpression	index * nbytes		5943346	1		*			
ANR	5943453	Identifier	index		5943346	0					
ANR	5943454	Identifier	nbytes		5943346	1					
ANR	5943455	Argument	format		5943346	1					
ANR	5943456	Identifier	format		5943346	0					
ANR	5943457	Argument	np		5943346	2					
ANR	5943458	Identifier	np		5943346	0					
ANR	5943459	ReturnType	int		5943346	1					
ANR	5943460	Identifier	num_array_get		5943346	2					
ANR	5943461	ParameterList	"const gs_memory_t * mem , const ref * op , int format , uint index , ref * np"		5943346	3					
ANR	5943462	Parameter	const gs_memory_t * mem	83:14:2531:2552	5943346	0	True				
ANR	5943463	ParameterType	const gs_memory_t *		5943346	0					
ANR	5943464	Identifier	mem		5943346	1					
ANR	5943465	Parameter	const ref * op	83:38:2555:2568	5943346	1	True				
ANR	5943466	ParameterType	const ref *		5943346	0					
ANR	5943467	Identifier	op		5943346	1					
ANR	5943468	Parameter	int format	83:54:2571:2580	5943346	2	True				
ANR	5943469	ParameterType	int		5943346	0					
ANR	5943470	Identifier	format		5943346	1					
ANR	5943471	Parameter	uint index	83:66:2583:2592	5943346	3	True				
ANR	5943472	ParameterType	uint		5943346	0					
ANR	5943473	Identifier	index		5943346	1					
ANR	5943474	Parameter	ref * np	83:78:2595:2602	5943346	4	True				
ANR	5943475	ParameterType	ref *		5943346	0					
ANR	5943476	Identifier	np		5943346	1					
ANR	5943477	CFGEntryNode	ENTRY		5943346		True				
ANR	5943478	CFGExitNode	EXIT		5943346		True				
ANR	5943479	Symbol	op		5943346						
ANR	5943480	Symbol	num_array		5943346						
ANR	5943481	Symbol	np		5943346						
ANR	5943482	Symbol	code		5943346						
ANR	5943483	Symbol	* op		5943346						
ANR	5943484	Symbol	array_get		5943346						
ANR	5943485	Symbol	format		5943346						
ANR	5943486	Symbol	index		5943346						
ANR	5943487	Symbol	t_real		5943346						
ANR	5943488	Symbol	sdecode_number		5943346						
ANR	5943489	Symbol	nbytes		5943346						
ANR	5943490	Symbol	t_null		5943346						
ANR	5943491	Symbol	gs_error_typecheck		5943346						
ANR	5943492	Symbol	mem		5943346						
ANR	5943493	Symbol	t_integer		5943346						
ANR	5943494	Symbol	op -> value		5943346						
ANR	5943495	Symbol	r_size		5943346						
ANR	5943496	Symbol	op -> value . bytes		5943346						
ANR	5943497	Symbol	r_type		5943346						
ANR	5943498	Symbol	encoded_number_bytes		5943346						
ANR	5943499	DeclStmt									
ANR	5943500	Decl							const double	const double [ 32 ]	binary_scale
ANR	5943501	Function	sdecode_number	122:0:3802:5013							
ANR	5943502	FunctionDef	"sdecode_number (const byte * str , int format , ref * np)"		5943501	0					
ANR	5943503	CompoundStatement		124:0:3861:5013	5943501	0					
ANR	5943504	SwitchStatement	switch ( format & 0x170 )		5943501	0					
ANR	5943505	Condition	format & 0x170	125:12:3875:3888	5943501	0	True				
ANR	5943506	BitAndExpression	format & 0x170		5943501	0		&			
ANR	5943507	Identifier	format		5943501	0					
ANR	5943508	PrimaryExpression	0x170		5943501	1					
ANR	5943509	CompoundStatement		2:28:29:29	5943501	1					
ANR	5943510	Label	case num_int32 :	126:8:3901:3915	5943501	0	True				
ANR	5943511	Identifier	num_int32		5943501	0					
ANR	5943512	Statement	case	127:8:3925:3928	5943501	1	True				
ANR	5943513	Statement	num_int32	127:13:3930:3938	5943501	2	True				
ANR	5943514	Statement	+	127:23:3940:3940	5943501	3	True				
ANR	5943515	Label	16 :	127:25:3942:3944	5943501	4	True				
ANR	5943516	IfStatement	if ( ( format & 31 ) == 0 )		5943501	5					
ANR	5943517	Condition	( format & 31 ) == 0	128:16:3962:3979	5943501	0	True				
ANR	5943518	EqualityExpression	( format & 31 ) == 0		5943501	0		==			
ANR	5943519	BitAndExpression	format & 31		5943501	0		&			
ANR	5943520	Identifier	format		5943501	0					
ANR	5943521	PrimaryExpression	31		5943501	1					
ANR	5943522	PrimaryExpression	0		5943501	1					
ANR	5943523	CompoundStatement		5:36:120:120	5943501	1					
ANR	5943524	ExpressionStatement	"np -> value . intval = sdecodeint32 ( str , format )"	129:16:4000:4044	5943501	0	True				
ANR	5943525	AssignmentExpression	"np -> value . intval = sdecodeint32 ( str , format )"		5943501	0		=			
ANR	5943526	MemberAccess	np -> value . intval		5943501	0					
ANR	5943527	PtrMemberAccess	np -> value		5943501	0					
ANR	5943528	Identifier	np		5943501	0					
ANR	5943529	Identifier	value		5943501	1					
ANR	5943530	Identifier	intval		5943501	1					
ANR	5943531	CallExpression	"sdecodeint32 ( str , format )"		5943501	1					
ANR	5943532	Callee	sdecodeint32		5943501	0					
ANR	5943533	Identifier	sdecodeint32		5943501	0					
ANR	5943534	ArgumentList	str		5943501	1					
ANR	5943535	Argument	str		5943501	0					
ANR	5943536	Identifier	str		5943501	0					
ANR	5943537	Argument	format		5943501	1					
ANR	5943538	Identifier	format		5943501	0					
ANR	5943539	ReturnStatement	return t_integer ;	130:16:4062:4078	5943501	1	True				
ANR	5943540	Identifier	t_integer		5943501	0					
ANR	5943541	ElseStatement	else		5943501	0					
ANR	5943542	CompoundStatement		8:19:237:237	5943501	0					
ANR	5943543	ExpressionStatement	"np -> value . realval = ( double ) sdecodeint32 ( str , format ) * binary_scale [ format & 31 ]"	132:16:4117:4238	5943501	0	True				
ANR	5943544	AssignmentExpression	"np -> value . realval = ( double ) sdecodeint32 ( str , format ) * binary_scale [ format & 31 ]"		5943501	0		=			
ANR	5943545	MemberAccess	np -> value . realval		5943501	0					
ANR	5943546	PtrMemberAccess	np -> value		5943501	0					
ANR	5943547	Identifier	np		5943501	0					
ANR	5943548	Identifier	value		5943501	1					
ANR	5943549	Identifier	realval		5943501	1					
ANR	5943550	MultiplicativeExpression	"( double ) sdecodeint32 ( str , format ) * binary_scale [ format & 31 ]"		5943501	1		*			
ANR	5943551	CastExpression	"( double ) sdecodeint32 ( str , format )"		5943501	0					
ANR	5943552	CastTarget	double		5943501	0					
ANR	5943553	CallExpression	"sdecodeint32 ( str , format )"		5943501	1					
ANR	5943554	Callee	sdecodeint32		5943501	0					
ANR	5943555	Identifier	sdecodeint32		5943501	0					
ANR	5943556	ArgumentList	str		5943501	1					
ANR	5943557	Argument	str		5943501	0					
ANR	5943558	Identifier	str		5943501	0					
ANR	5943559	Argument	format		5943501	1					
ANR	5943560	Identifier	format		5943501	0					
ANR	5943561	ArrayIndexing	binary_scale [ format & 31 ]		5943501	1					
ANR	5943562	Identifier	binary_scale		5943501	0					
ANR	5943563	BitAndExpression	format & 31		5943501	1		&			
ANR	5943564	Identifier	format		5943501	0					
ANR	5943565	PrimaryExpression	31		5943501	1					
ANR	5943566	ReturnStatement	return t_real ;	135:16:4256:4269	5943501	1	True				
ANR	5943567	Identifier	t_real		5943501	0					
ANR	5943568	Label	case num_int16 :	137:8:4293:4307	5943501	6	True				
ANR	5943569	Identifier	num_int16		5943501	0					
ANR	5943570	IfStatement	if ( ( format & 15 ) == 0 )		5943501	7					
ANR	5943571	Condition	( format & 15 ) == 0	138:16:4325:4342	5943501	0	True				
ANR	5943572	EqualityExpression	( format & 15 ) == 0		5943501	0		==			
ANR	5943573	BitAndExpression	format & 15		5943501	0		&			
ANR	5943574	Identifier	format		5943501	0					
ANR	5943575	PrimaryExpression	15		5943501	1					
ANR	5943576	PrimaryExpression	0		5943501	1					
ANR	5943577	CompoundStatement		15:36:483:483	5943501	1					
ANR	5943578	ExpressionStatement	"np -> value . intval = sdecodeshort ( str , format )"	139:16:4363:4407	5943501	0	True				
ANR	5943579	AssignmentExpression	"np -> value . intval = sdecodeshort ( str , format )"		5943501	0		=			
ANR	5943580	MemberAccess	np -> value . intval		5943501	0					
ANR	5943581	PtrMemberAccess	np -> value		5943501	0					
ANR	5943582	Identifier	np		5943501	0					
ANR	5943583	Identifier	value		5943501	1					
ANR	5943584	Identifier	intval		5943501	1					
ANR	5943585	CallExpression	"sdecodeshort ( str , format )"		5943501	1					
ANR	5943586	Callee	sdecodeshort		5943501	0					
ANR	5943587	Identifier	sdecodeshort		5943501	0					
ANR	5943588	ArgumentList	str		5943501	1					
ANR	5943589	Argument	str		5943501	0					
ANR	5943590	Identifier	str		5943501	0					
ANR	5943591	Argument	format		5943501	1					
ANR	5943592	Identifier	format		5943501	0					
ANR	5943593	ReturnStatement	return t_integer ;	140:16:4425:4441	5943501	1	True				
ANR	5943594	Identifier	t_integer		5943501	0					
ANR	5943595	ElseStatement	else		5943501	0					
ANR	5943596	CompoundStatement		18:19:600:600	5943501	0					
ANR	5943597	ExpressionStatement	"np -> value . realval = sdecodeshort ( str , format ) * binary_scale [ format & 15 ]"	142:16:4480:4593	5943501	0	True				
ANR	5943598	AssignmentExpression	"np -> value . realval = sdecodeshort ( str , format ) * binary_scale [ format & 15 ]"		5943501	0		=			
ANR	5943599	MemberAccess	np -> value . realval		5943501	0					
ANR	5943600	PtrMemberAccess	np -> value		5943501	0					
ANR	5943601	Identifier	np		5943501	0					
ANR	5943602	Identifier	value		5943501	1					
ANR	5943603	Identifier	realval		5943501	1					
ANR	5943604	MultiplicativeExpression	"sdecodeshort ( str , format ) * binary_scale [ format & 15 ]"		5943501	1		*			
ANR	5943605	CallExpression	"sdecodeshort ( str , format )"		5943501	0					
ANR	5943606	Callee	sdecodeshort		5943501	0					
ANR	5943607	Identifier	sdecodeshort		5943501	0					
ANR	5943608	ArgumentList	str		5943501	1					
ANR	5943609	Argument	str		5943501	0					
ANR	5943610	Identifier	str		5943501	0					
ANR	5943611	Argument	format		5943501	1					
ANR	5943612	Identifier	format		5943501	0					
ANR	5943613	ArrayIndexing	binary_scale [ format & 15 ]		5943501	1					
ANR	5943614	Identifier	binary_scale		5943501	0					
ANR	5943615	BitAndExpression	format & 15		5943501	1		&			
ANR	5943616	Identifier	format		5943501	0					
ANR	5943617	PrimaryExpression	15		5943501	1					
ANR	5943618	ReturnStatement	return t_real ;	145:16:4611:4624	5943501	1	True				
ANR	5943619	Identifier	t_real		5943501	0					
ANR	5943620	Label	case num_float :	147:8:4648:4662	5943501	8	True				
ANR	5943621	Identifier	num_float		5943501	0					
ANR	5943622	CompoundStatement		27:16:860:904	5943501	9					
ANR	5943623	IdentifierDeclStatement	float fval ;	149:16:4694:4704	5943501	0	True				
ANR	5943624	IdentifierDecl	fval		5943501	0					
ANR	5943625	IdentifierDeclType	float		5943501	0					
ANR	5943626	Identifier	fval		5943501	1					
ANR	5943627	IdentifierDeclStatement	"int code = sdecode_float ( str , format , & fval ) ;"	150:16:4722:4766	5943501	1	True				
ANR	5943628	IdentifierDecl	"code = sdecode_float ( str , format , & fval )"		5943501	0					
ANR	5943629	IdentifierDeclType	int		5943501	0					
ANR	5943630	Identifier	code		5943501	1					
ANR	5943631	AssignmentExpression	"code = sdecode_float ( str , format , & fval )"		5943501	2		=			
ANR	5943632	Identifier	code		5943501	0					
ANR	5943633	CallExpression	"sdecode_float ( str , format , & fval )"		5943501	1					
ANR	5943634	Callee	sdecode_float		5943501	0					
ANR	5943635	Identifier	sdecode_float		5943501	0					
ANR	5943636	ArgumentList	str		5943501	1					
ANR	5943637	Argument	str		5943501	0					
ANR	5943638	Identifier	str		5943501	0					
ANR	5943639	Argument	format		5943501	1					
ANR	5943640	Identifier	format		5943501	0					
ANR	5943641	Argument	& fval		5943501	2					
ANR	5943642	UnaryOperationExpression	& fval		5943501	0					
ANR	5943643	UnaryOperator	&		5943501	0					
ANR	5943644	Identifier	fval		5943501	1					
ANR	5943645	IfStatement	if ( code < 0 )		5943501	2					
ANR	5943646	Condition	code < 0	152:20:4789:4796	5943501	0	True				
ANR	5943647	RelationalExpression	code < 0		5943501	0		<			
ANR	5943648	Identifier	code		5943501	0					
ANR	5943649	PrimaryExpression	0		5943501	1					
ANR	5943650	ReturnStatement	return code ;	153:20:4819:4830	5943501	1	True				
ANR	5943651	Identifier	code		5943501	0					
ANR	5943652	ExpressionStatement	np -> value . realval = fval	154:16:4848:4872	5943501	3	True				
ANR	5943653	AssignmentExpression	np -> value . realval = fval		5943501	0		=			
ANR	5943654	MemberAccess	np -> value . realval		5943501	0					
ANR	5943655	PtrMemberAccess	np -> value		5943501	0					
ANR	5943656	Identifier	np		5943501	0					
ANR	5943657	Identifier	value		5943501	1					
ANR	5943658	Identifier	realval		5943501	1					
ANR	5943659	Identifier	fval		5943501	1					
ANR	5943660	ReturnStatement	return t_real ;	155:16:4890:4903	5943501	4	True				
ANR	5943661	Identifier	t_real		5943501	0					
ANR	5943662	Label	default :	157:8:4927:4934	5943501	10	True				
ANR	5943663	Identifier	default		5943501	0					
ANR	5943664	ExpressionStatement	return_error ( gs_error_syntaxerror )	158:12:4948:4982	5943501	11	True				
ANR	5943665	CallExpression	return_error ( gs_error_syntaxerror )		5943501	0					
ANR	5943666	Callee	return_error		5943501	0					
ANR	5943667	Identifier	return_error		5943501	0					
ANR	5943668	ArgumentList	gs_error_syntaxerror		5943501	1					
ANR	5943669	Argument	gs_error_syntaxerror		5943501	0					
ANR	5943670	Identifier	gs_error_syntaxerror		5943501	0					
ANR	5943671	ReturnType	int		5943501	1					
ANR	5943672	Identifier	sdecode_number		5943501	2					
ANR	5943673	ParameterList	"const byte * str , int format , ref * np"		5943501	3					
ANR	5943674	Parameter	const byte * str	123:15:3821:3836	5943501	0	True				
ANR	5943675	ParameterType	const byte *		5943501	0					
ANR	5943676	Identifier	str		5943501	1					
ANR	5943677	Parameter	int format	123:33:3839:3848	5943501	1	True				
ANR	5943678	ParameterType	int		5943501	0					
ANR	5943679	Identifier	format		5943501	1					
ANR	5943680	Parameter	ref * np	123:45:3851:3858	5943501	2	True				
ANR	5943681	ParameterType	ref *		5943501	0					
ANR	5943682	Identifier	np		5943501	1					
ANR	5943683	CFGEntryNode	ENTRY		5943501		True				
ANR	5943684	CFGExitNode	EXIT		5943501		True				
ANR	5943685	Symbol	np		5943501						
ANR	5943686	Symbol	code		5943501						
ANR	5943687	Symbol	* binary_scale		5943501						
ANR	5943688	Symbol	format		5943501						
ANR	5943689	Symbol	gs_error_syntaxerror		5943501						
ANR	5943690	Symbol	* np		5943501						
ANR	5943691	Symbol	t_real		5943501						
ANR	5943692	Symbol	fval		5943501						
ANR	5943693	Symbol	binary_scale		5943501						
ANR	5943694	Symbol	np -> value . realval		5943501						
ANR	5943695	Symbol	str		5943501						
ANR	5943696	Symbol	np -> value		5943501						
ANR	5943697	Symbol	t_integer		5943501						
ANR	5943698	Symbol	* format		5943501						
ANR	5943699	Symbol	sdecodeint32		5943501						
ANR	5943700	Symbol	np -> value . intval		5943501						
ANR	5943701	Symbol	sdecode_float		5943501						
ANR	5943702	Symbol	& fval		5943501						
ANR	5943703	Symbol	sdecodeshort		5943501						
ANR	5943704	Function	sdecodeushort	167:0:5167:5308							
ANR	5943705	FunctionDef	"sdecodeushort (const byte * p , int format)"		5943704	0					
ANR	5943706	CompoundStatement		169:0:5214:5308	5943704	0					
ANR	5943707	IdentifierDeclStatement	"int a = p [ 0 ] , b = p [ 1 ] ;"	170:4:5220:5242	5943704	0	True				
ANR	5943708	IdentifierDecl	a = p [ 0 ]		5943704	0					
ANR	5943709	IdentifierDeclType	int		5943704	0					
ANR	5943710	Identifier	a		5943704	1					
ANR	5943711	AssignmentExpression	a = p [ 0 ]		5943704	2		=			
ANR	5943712	Identifier	a		5943704	0					
ANR	5943713	ArrayIndexing	p [ 0 ]		5943704	1					
ANR	5943714	Identifier	p		5943704	0					
ANR	5943715	PrimaryExpression	0		5943704	1					
ANR	5943716	IdentifierDecl	b = p [ 1 ]		5943704	1					
ANR	5943717	IdentifierDeclType	int		5943704	0					
ANR	5943718	Identifier	b		5943704	1					
ANR	5943719	AssignmentExpression	b = p [ 1 ]		5943704	2		=			
ANR	5943720	Identifier	b		5943704	0					
ANR	5943721	ArrayIndexing	p [ 1 ]		5943704	1					
ANR	5943722	Identifier	p		5943704	0					
ANR	5943723	PrimaryExpression	1		5943704	1					
ANR	5943724	ReturnStatement	return ( num_is_lsb ( format ) ? ( b << 8 ) + a : ( a << 8 ) + b ) ;	172:4:5249:5306	5943704	1	True				
ANR	5943725	ConditionalExpression	num_is_lsb ( format ) ? ( b << 8 ) + a : ( a << 8 ) + b		5943704	0					
ANR	5943726	Condition	num_is_lsb ( format )		5943704	0					
ANR	5943727	CallExpression	num_is_lsb ( format )		5943704	0					
ANR	5943728	Callee	num_is_lsb		5943704	0					
ANR	5943729	Identifier	num_is_lsb		5943704	0					
ANR	5943730	ArgumentList	format		5943704	1					
ANR	5943731	Argument	format		5943704	0					
ANR	5943732	Identifier	format		5943704	0					
ANR	5943733	AdditiveExpression	( b << 8 ) + a		5943704	1		+			
ANR	5943734	ShiftExpression	b << 8		5943704	0		<<			
ANR	5943735	Identifier	b		5943704	0					
ANR	5943736	PrimaryExpression	8		5943704	1					
ANR	5943737	Identifier	a		5943704	1					
ANR	5943738	AdditiveExpression	( a << 8 ) + b		5943704	2		+			
ANR	5943739	ShiftExpression	a << 8		5943704	0		<<			
ANR	5943740	Identifier	a		5943704	0					
ANR	5943741	PrimaryExpression	8		5943704	1					
ANR	5943742	Identifier	b		5943704	1					
ANR	5943743	ReturnType	uint		5943704	1					
ANR	5943744	Identifier	sdecodeushort		5943704	2					
ANR	5943745	ParameterList	"const byte * p , int format"		5943704	3					
ANR	5943746	Parameter	const byte * p	168:14:5186:5199	5943704	0	True				
ANR	5943747	ParameterType	const byte *		5943704	0					
ANR	5943748	Identifier	p		5943704	1					
ANR	5943749	Parameter	int format	168:30:5202:5211	5943704	1	True				
ANR	5943750	ParameterType	int		5943704	0					
ANR	5943751	Identifier	format		5943704	1					
ANR	5943752	CFGEntryNode	ENTRY		5943704		True				
ANR	5943753	CFGExitNode	EXIT		5943704		True				
ANR	5943754	Symbol	p		5943704						
ANR	5943755	Symbol	a		5943704						
ANR	5943756	Symbol	b		5943704						
ANR	5943757	Symbol	format		5943704						
ANR	5943758	Symbol	* p		5943704						
ANR	5943759	Symbol	num_is_lsb		5943704						
ANR	5943760	Function	sdecodeshort	174:0:5310:5441							
ANR	5943761	FunctionDef	"sdecodeshort (const byte * p , int format)"		5943760	0					
ANR	5943762	CompoundStatement		176:0:5355:5441	5943760	0					
ANR	5943763	IdentifierDeclStatement	"int v = ( int ) sdecodeushort ( p , format ) ;"	177:4:5361:5398	5943760	0	True				
ANR	5943764	IdentifierDecl	"v = ( int ) sdecodeushort ( p , format )"		5943760	0					
ANR	5943765	IdentifierDeclType	int		5943760	0					
ANR	5943766	Identifier	v		5943760	1					
ANR	5943767	AssignmentExpression	"v = ( int ) sdecodeushort ( p , format )"		5943760	2		=			
ANR	5943768	Identifier	v		5943760	0					
ANR	5943769	CastExpression	"( int ) sdecodeushort ( p , format )"		5943760	1					
ANR	5943770	CastTarget	int		5943760	0					
ANR	5943771	CallExpression	"sdecodeushort ( p , format )"		5943760	1					
ANR	5943772	Callee	sdecodeushort		5943760	0					
ANR	5943773	Identifier	sdecodeushort		5943760	0					
ANR	5943774	ArgumentList	p		5943760	1					
ANR	5943775	Argument	p		5943760	0					
ANR	5943776	Identifier	p		5943760	0					
ANR	5943777	Argument	format		5943760	1					
ANR	5943778	Identifier	format		5943760	0					
ANR	5943779	ReturnStatement	return ( v & 0x7fff ) - ( v & 0x8000 ) ;	179:4:5405:5439	5943760	1	True				
ANR	5943780	AdditiveExpression	( v & 0x7fff ) - ( v & 0x8000 )		5943760	0		-			
ANR	5943781	BitAndExpression	v & 0x7fff		5943760	0		&			
ANR	5943782	Identifier	v		5943760	0					
ANR	5943783	PrimaryExpression	0x7fff		5943760	1					
ANR	5943784	BitAndExpression	v & 0x8000		5943760	1		&			
ANR	5943785	Identifier	v		5943760	0					
ANR	5943786	PrimaryExpression	0x8000		5943760	1					
ANR	5943787	ReturnType	int		5943760	1					
ANR	5943788	Identifier	sdecodeshort		5943760	2					
ANR	5943789	ParameterList	"const byte * p , int format"		5943760	3					
ANR	5943790	Parameter	const byte * p	175:13:5327:5340	5943760	0	True				
ANR	5943791	ParameterType	const byte *		5943760	0					
ANR	5943792	Identifier	p		5943760	1					
ANR	5943793	Parameter	int format	175:29:5343:5352	5943760	1	True				
ANR	5943794	ParameterType	int		5943760	0					
ANR	5943795	Identifier	format		5943760	1					
ANR	5943796	CFGEntryNode	ENTRY		5943760		True				
ANR	5943797	CFGExitNode	EXIT		5943760		True				
ANR	5943798	Symbol	p		5943760						
ANR	5943799	Symbol	v		5943760						
ANR	5943800	Symbol	format		5943760						
ANR	5943801	Symbol	sdecodeushort		5943760						
ANR	5943802	Function	sdecodeint32	183:0:5482:5751							
ANR	5943803	FunctionDef	"sdecodeint32 (const byte * p , int format)"		5943802	0					
ANR	5943804	CompoundStatement		185:0:5527:5751	5943802	0					
ANR	5943805	IdentifierDeclStatement	"int a = p [ 0 ] , b = p [ 1 ] , c = p [ 2 ] , d = p [ 3 ] ;"	186:4:5533:5575	5943802	0	True				
ANR	5943806	IdentifierDecl	a = p [ 0 ]		5943802	0					
ANR	5943807	IdentifierDeclType	int		5943802	0					
ANR	5943808	Identifier	a		5943802	1					
ANR	5943809	AssignmentExpression	a = p [ 0 ]		5943802	2		=			
ANR	5943810	Identifier	a		5943802	0					
ANR	5943811	ArrayIndexing	p [ 0 ]		5943802	1					
ANR	5943812	Identifier	p		5943802	0					
ANR	5943813	PrimaryExpression	0		5943802	1					
ANR	5943814	IdentifierDecl	b = p [ 1 ]		5943802	1					
ANR	5943815	IdentifierDeclType	int		5943802	0					
ANR	5943816	Identifier	b		5943802	1					
ANR	5943817	AssignmentExpression	b = p [ 1 ]		5943802	2		=			
ANR	5943818	Identifier	b		5943802	0					
ANR	5943819	ArrayIndexing	p [ 1 ]		5943802	1					
ANR	5943820	Identifier	p		5943802	0					
ANR	5943821	PrimaryExpression	1		5943802	1					
ANR	5943822	IdentifierDecl	c = p [ 2 ]		5943802	2					
ANR	5943823	IdentifierDeclType	int		5943802	0					
ANR	5943824	Identifier	c		5943802	1					
ANR	5943825	AssignmentExpression	c = p [ 2 ]		5943802	2		=			
ANR	5943826	Identifier	c		5943802	0					
ANR	5943827	ArrayIndexing	p [ 2 ]		5943802	1					
ANR	5943828	Identifier	p		5943802	0					
ANR	5943829	PrimaryExpression	2		5943802	1					
ANR	5943830	IdentifierDecl	d = p [ 3 ]		5943802	3					
ANR	5943831	IdentifierDeclType	int		5943802	0					
ANR	5943832	Identifier	d		5943802	1					
ANR	5943833	AssignmentExpression	d = p [ 3 ]		5943802	2		=			
ANR	5943834	Identifier	d		5943802	0					
ANR	5943835	ArrayIndexing	p [ 3 ]		5943802	1					
ANR	5943836	Identifier	p		5943802	0					
ANR	5943837	PrimaryExpression	3		5943802	1					
ANR	5943838	IdentifierDeclStatement	int v = ( num_is_lsb ( format ) ? ( ( int ) d << 24 ) + ( ( int ) c << 16 ) + ( b << 8 ) + a : ( ( int ) a << 24 ) + ( ( int ) b << 16 ) + ( c << 8 ) + d ) ;	187:4:5581:5735	5943802	1	True				
ANR	5943839	IdentifierDecl	v = ( num_is_lsb ( format ) ? ( ( int ) d << 24 ) + ( ( int ) c << 16 ) + ( b << 8 ) + a : ( ( int ) a << 24 ) + ( ( int ) b << 16 ) + ( c << 8 ) + d )		5943802	0					
ANR	5943840	IdentifierDeclType	int		5943802	0					
ANR	5943841	Identifier	v		5943802	1					
ANR	5943842	AssignmentExpression	v = ( num_is_lsb ( format ) ? ( ( int ) d << 24 ) + ( ( int ) c << 16 ) + ( b << 8 ) + a : ( ( int ) a << 24 ) + ( ( int ) b << 16 ) + ( c << 8 ) + d )		5943802	2		=			
ANR	5943843	Identifier	v		5943802	0					
ANR	5943844	ConditionalExpression	num_is_lsb ( format ) ? ( ( int ) d << 24 ) + ( ( int ) c << 16 ) + ( b << 8 ) + a : ( ( int ) a << 24 ) + ( ( int ) b << 16 ) + ( c << 8 ) + d		5943802	1					
ANR	5943845	Condition	num_is_lsb ( format )		5943802	0					
ANR	5943846	CallExpression	num_is_lsb ( format )		5943802	0					
ANR	5943847	Callee	num_is_lsb		5943802	0					
ANR	5943848	Identifier	num_is_lsb		5943802	0					
ANR	5943849	ArgumentList	format		5943802	1					
ANR	5943850	Argument	format		5943802	0					
ANR	5943851	Identifier	format		5943802	0					
ANR	5943852	AdditiveExpression	( ( int ) d << 24 ) + ( ( int ) c << 16 ) + ( b << 8 ) + a		5943802	1		+			
ANR	5943853	ShiftExpression	( int ) d << 24		5943802	0		<<			
ANR	5943854	CastExpression	( int ) d		5943802	0					
ANR	5943855	CastTarget	int		5943802	0					
ANR	5943856	Identifier	d		5943802	1					
ANR	5943857	PrimaryExpression	24		5943802	1					
ANR	5943858	AdditiveExpression	( ( int ) c << 16 ) + ( b << 8 ) + a		5943802	1		+			
ANR	5943859	ShiftExpression	( int ) c << 16		5943802	0		<<			
ANR	5943860	CastExpression	( int ) c		5943802	0					
ANR	5943861	CastTarget	int		5943802	0					
ANR	5943862	Identifier	c		5943802	1					
ANR	5943863	PrimaryExpression	16		5943802	1					
ANR	5943864	AdditiveExpression	( b << 8 ) + a		5943802	1		+			
ANR	5943865	ShiftExpression	b << 8		5943802	0		<<			
ANR	5943866	Identifier	b		5943802	0					
ANR	5943867	PrimaryExpression	8		5943802	1					
ANR	5943868	Identifier	a		5943802	1					
ANR	5943869	AdditiveExpression	( ( int ) a << 24 ) + ( ( int ) b << 16 ) + ( c << 8 ) + d		5943802	2		+			
ANR	5943870	ShiftExpression	( int ) a << 24		5943802	0		<<			
ANR	5943871	CastExpression	( int ) a		5943802	0					
ANR	5943872	CastTarget	int		5943802	0					
ANR	5943873	Identifier	a		5943802	1					
ANR	5943874	PrimaryExpression	24		5943802	1					
ANR	5943875	AdditiveExpression	( ( int ) b << 16 ) + ( c << 8 ) + d		5943802	1		+			
ANR	5943876	ShiftExpression	( int ) b << 16		5943802	0		<<			
ANR	5943877	CastExpression	( int ) b		5943802	0					
ANR	5943878	CastTarget	int		5943802	0					
ANR	5943879	Identifier	b		5943802	1					
ANR	5943880	PrimaryExpression	16		5943802	1					
ANR	5943881	AdditiveExpression	( c << 8 ) + d		5943802	1		+			
ANR	5943882	ShiftExpression	c << 8		5943802	0		<<			
ANR	5943883	Identifier	c		5943802	0					
ANR	5943884	PrimaryExpression	8		5943802	1					
ANR	5943885	Identifier	d		5943802	1					
ANR	5943886	ReturnStatement	return v ;	190:4:5741:5749	5943802	2	True				
ANR	5943887	Identifier	v		5943802	0					
ANR	5943888	ReturnType	int		5943802	1					
ANR	5943889	Identifier	sdecodeint32		5943802	2					
ANR	5943890	ParameterList	"const byte * p , int format"		5943802	3					
ANR	5943891	Parameter	const byte * p	184:13:5499:5512	5943802	0	True				
ANR	5943892	ParameterType	const byte *		5943802	0					
ANR	5943893	Identifier	p		5943802	1					
ANR	5943894	Parameter	int format	184:29:5515:5524	5943802	1	True				
ANR	5943895	ParameterType	int		5943802	0					
ANR	5943896	Identifier	format		5943802	1					
ANR	5943897	CFGEntryNode	ENTRY		5943802		True				
ANR	5943898	CFGExitNode	EXIT		5943802		True				
ANR	5943899	Symbol	p		5943802						
ANR	5943900	Symbol	a		5943802						
ANR	5943901	Symbol	b		5943802						
ANR	5943902	Symbol	c		5943802						
ANR	5943903	Symbol	d		5943802						
ANR	5943904	Symbol	v		5943802						
ANR	5943905	Symbol	format		5943802						
ANR	5943906	Symbol	* p		5943802						
ANR	5943907	Symbol	num_is_lsb		5943802						
ANR	5943908	Function	sdecodebits32	195:0:5880:6149							
ANR	5943909	FunctionDef	"sdecodebits32 (const byte * p , int format , bits32 * v)"		5943908	0					
ANR	5943910	CompoundStatement		197:0:5945:6149	5943908	0					
ANR	5943911	IdentifierDeclStatement	"int a = p [ 0 ] , b = p [ 1 ] , c = p [ 2 ] , d = p [ 3 ] ;"	198:2:5949:5991	5943908	0	True				
ANR	5943912	IdentifierDecl	a = p [ 0 ]		5943908	0					
ANR	5943913	IdentifierDeclType	int		5943908	0					
ANR	5943914	Identifier	a		5943908	1					
ANR	5943915	AssignmentExpression	a = p [ 0 ]		5943908	2		=			
ANR	5943916	Identifier	a		5943908	0					
ANR	5943917	ArrayIndexing	p [ 0 ]		5943908	1					
ANR	5943918	Identifier	p		5943908	0					
ANR	5943919	PrimaryExpression	0		5943908	1					
ANR	5943920	IdentifierDecl	b = p [ 1 ]		5943908	1					
ANR	5943921	IdentifierDeclType	int		5943908	0					
ANR	5943922	Identifier	b		5943908	1					
ANR	5943923	AssignmentExpression	b = p [ 1 ]		5943908	2		=			
ANR	5943924	Identifier	b		5943908	0					
ANR	5943925	ArrayIndexing	p [ 1 ]		5943908	1					
ANR	5943926	Identifier	p		5943908	0					
ANR	5943927	PrimaryExpression	1		5943908	1					
ANR	5943928	IdentifierDecl	c = p [ 2 ]		5943908	2					
ANR	5943929	IdentifierDeclType	int		5943908	0					
ANR	5943930	Identifier	c		5943908	1					
ANR	5943931	AssignmentExpression	c = p [ 2 ]		5943908	2		=			
ANR	5943932	Identifier	c		5943908	0					
ANR	5943933	ArrayIndexing	p [ 2 ]		5943908	1					
ANR	5943934	Identifier	p		5943908	0					
ANR	5943935	PrimaryExpression	2		5943908	1					
ANR	5943936	IdentifierDecl	d = p [ 3 ]		5943908	3					
ANR	5943937	IdentifierDeclType	int		5943908	0					
ANR	5943938	Identifier	d		5943908	1					
ANR	5943939	AssignmentExpression	d = p [ 3 ]		5943908	2		=			
ANR	5943940	Identifier	d		5943908	0					
ANR	5943941	ArrayIndexing	p [ 3 ]		5943908	1					
ANR	5943942	Identifier	p		5943908	0					
ANR	5943943	PrimaryExpression	3		5943908	1					
ANR	5943944	ExpressionStatement	* v = ( num_is_lsb ( format ) ? ( ( long ) d << 24 ) + ( ( long ) c << 16 ) + ( b << 8 ) + a : ( ( long ) a << 24 ) + ( ( long ) b << 16 ) + ( c << 8 ) + d )	199:2:5995:6146	5943908	1	True				
ANR	5943945	AssignmentExpression	* v = ( num_is_lsb ( format ) ? ( ( long ) d << 24 ) + ( ( long ) c << 16 ) + ( b << 8 ) + a : ( ( long ) a << 24 ) + ( ( long ) b << 16 ) + ( c << 8 ) + d )		5943908	0		=			
ANR	5943946	UnaryOperationExpression	* v		5943908	0					
ANR	5943947	UnaryOperator	*		5943908	0					
ANR	5943948	Identifier	v		5943908	1					
ANR	5943949	ConditionalExpression	num_is_lsb ( format ) ? ( ( long ) d << 24 ) + ( ( long ) c << 16 ) + ( b << 8 ) + a : ( ( long ) a << 24 ) + ( ( long ) b << 16 ) + ( c << 8 ) + d		5943908	1					
ANR	5943950	Condition	num_is_lsb ( format )		5943908	0					
ANR	5943951	CallExpression	num_is_lsb ( format )		5943908	0					
ANR	5943952	Callee	num_is_lsb		5943908	0					
ANR	5943953	Identifier	num_is_lsb		5943908	0					
ANR	5943954	ArgumentList	format		5943908	1					
ANR	5943955	Argument	format		5943908	0					
ANR	5943956	Identifier	format		5943908	0					
ANR	5943957	AdditiveExpression	( ( long ) d << 24 ) + ( ( long ) c << 16 ) + ( b << 8 ) + a		5943908	1		+			
ANR	5943958	ShiftExpression	( long ) d << 24		5943908	0		<<			
ANR	5943959	CastExpression	( long ) d		5943908	0					
ANR	5943960	CastTarget	long		5943908	0					
ANR	5943961	Identifier	d		5943908	1					
ANR	5943962	PrimaryExpression	24		5943908	1					
ANR	5943963	AdditiveExpression	( ( long ) c << 16 ) + ( b << 8 ) + a		5943908	1		+			
ANR	5943964	ShiftExpression	( long ) c << 16		5943908	0		<<			
ANR	5943965	CastExpression	( long ) c		5943908	0					
ANR	5943966	CastTarget	long		5943908	0					
ANR	5943967	Identifier	c		5943908	1					
ANR	5943968	PrimaryExpression	16		5943908	1					
ANR	5943969	AdditiveExpression	( b << 8 ) + a		5943908	1		+			
ANR	5943970	ShiftExpression	b << 8		5943908	0		<<			
ANR	5943971	Identifier	b		5943908	0					
ANR	5943972	PrimaryExpression	8		5943908	1					
ANR	5943973	Identifier	a		5943908	1					
ANR	5943974	AdditiveExpression	( ( long ) a << 24 ) + ( ( long ) b << 16 ) + ( c << 8 ) + d		5943908	2		+			
ANR	5943975	ShiftExpression	( long ) a << 24		5943908	0		<<			
ANR	5943976	CastExpression	( long ) a		5943908	0					
ANR	5943977	CastTarget	long		5943908	0					
ANR	5943978	Identifier	a		5943908	1					
ANR	5943979	PrimaryExpression	24		5943908	1					
ANR	5943980	AdditiveExpression	( ( long ) b << 16 ) + ( c << 8 ) + d		5943908	1		+			
ANR	5943981	ShiftExpression	( long ) b << 16		5943908	0		<<			
ANR	5943982	CastExpression	( long ) b		5943908	0					
ANR	5943983	CastTarget	long		5943908	0					
ANR	5943984	Identifier	b		5943908	1					
ANR	5943985	PrimaryExpression	16		5943908	1					
ANR	5943986	AdditiveExpression	( c << 8 ) + d		5943908	1		+			
ANR	5943987	ShiftExpression	c << 8		5943908	0		<<			
ANR	5943988	Identifier	c		5943908	0					
ANR	5943989	PrimaryExpression	8		5943908	1					
ANR	5943990	Identifier	d		5943908	1					
ANR	5943991	ReturnType	static void		5943908	1					
ANR	5943992	Identifier	sdecodebits32		5943908	2					
ANR	5943993	ParameterList	"const byte * p , int format , bits32 * v"		5943908	3					
ANR	5943994	Parameter	const byte * p	196:14:5906:5919	5943908	0	True				
ANR	5943995	ParameterType	const byte *		5943908	0					
ANR	5943996	Identifier	p		5943908	1					
ANR	5943997	Parameter	int format	196:30:5922:5931	5943908	1	True				
ANR	5943998	ParameterType	int		5943908	0					
ANR	5943999	Identifier	format		5943908	1					
ANR	5944000	Parameter	bits32 * v	196:42:5934:5942	5943908	2	True				
ANR	5944001	ParameterType	bits32 *		5943908	0					
ANR	5944002	Identifier	v		5943908	1					
ANR	5944003	CFGEntryNode	ENTRY		5943908		True				
ANR	5944004	CFGExitNode	EXIT		5943908		True				
ANR	5944005	Symbol	p		5943908						
ANR	5944006	Symbol	* v		5943908						
ANR	5944007	Symbol	a		5943908						
ANR	5944008	Symbol	b		5943908						
ANR	5944009	Symbol	c		5943908						
ANR	5944010	Symbol	d		5943908						
ANR	5944011	Symbol	v		5943908						
ANR	5944012	Symbol	format		5943908						
ANR	5944013	Symbol	* p		5943908						
ANR	5944014	Symbol	num_is_lsb		5943908						
ANR	5944015	Function	sdecode_float	207:0:6295:7949							
ANR	5944016	FunctionDef	"sdecode_float (const byte * p , int format , float * pfnum)"		5944015	0					
ANR	5944017	CompoundStatement		209:0:6355:7949	5944015	0					
ANR	5944018	IdentifierDeclStatement	bits32 lnum ;	210:4:6361:6372	5944015	0	True				
ANR	5944019	IdentifierDecl	lnum		5944015	0					
ANR	5944020	IdentifierDeclType	bits32		5944015	0					
ANR	5944021	Identifier	lnum		5944015	1					
ANR	5944022	IfStatement	if ( ( format & ~ ( num_msb | num_lsb ) ) == num_float_native )		5944015	1					
ANR	5944023	Condition	( format & ~ ( num_msb | num_lsb ) ) == num_float_native	212:8:6383:6433	5944015	0	True				
ANR	5944024	EqualityExpression	( format & ~ ( num_msb | num_lsb ) ) == num_float_native		5944015	0		==			
ANR	5944025	BitAndExpression	format & ~ ( num_msb | num_lsb )		5944015	0		&			
ANR	5944026	Identifier	format		5944015	0					
ANR	5944027	UnaryOperationExpression	~ ( num_msb | num_lsb )		5944015	1					
ANR	5944028	UnaryOperator	~		5944015	0					
ANR	5944029	InclusiveOrExpression	num_msb | num_lsb		5944015	1		|			
ANR	5944030	Identifier	num_msb		5944015	0					
ANR	5944031	Identifier	num_lsb		5944015	1					
ANR	5944032	Identifier	num_float_native		5944015	1					
ANR	5944033	CompoundStatement		4:61:80:80	5944015	1					
ANR	5944034	ExpressionStatement	"memcpy ( pfnum , p , 4 )"	217:8:6582:6601	5944015	0	True				
ANR	5944035	CallExpression	"memcpy ( pfnum , p , 4 )"		5944015	0					
ANR	5944036	Callee	memcpy		5944015	0					
ANR	5944037	Identifier	memcpy		5944015	0					
ANR	5944038	ArgumentList	pfnum		5944015	1					
ANR	5944039	Argument	pfnum		5944015	0					
ANR	5944040	Identifier	pfnum		5944015	0					
ANR	5944041	Argument	p		5944015	1					
ANR	5944042	Identifier	p		5944015	0					
ANR	5944043	Argument	4		5944015	2					
ANR	5944044	PrimaryExpression	4		5944015	0					
ANR	5944045	ReturnStatement	return 0 ;	219:8:6637:6645	5944015	1	True				
ANR	5944046	PrimaryExpression	0		5944015	0					
ANR	5944047	ExpressionStatement	lnum = * ( bits32 * ) pfnum	221:8:6699:6722	5944015	2	True				
ANR	5944048	AssignmentExpression	lnum = * ( bits32 * ) pfnum		5944015	0		=			
ANR	5944049	Identifier	lnum		5944015	0					
ANR	5944050	UnaryOperationExpression	* ( bits32 * ) pfnum		5944015	1					
ANR	5944051	UnaryOperator	*		5944015	0					
ANR	5944052	CastExpression	( bits32 * ) pfnum		5944015	1					
ANR	5944053	CastTarget	bits32 *		5944015	0					
ANR	5944054	Identifier	pfnum		5944015	1					
ANR	5944055	ElseStatement	else		5944015	0					
ANR	5944056	CompoundStatement		14:11:379:379	5944015	0					
ANR	5944057	ExpressionStatement	"sdecodebits32 ( p , format , & lnum )"	223:8:6745:6776	5944015	0	True				
ANR	5944058	CallExpression	"sdecodebits32 ( p , format , & lnum )"		5944015	0					
ANR	5944059	Callee	sdecodebits32		5944015	0					
ANR	5944060	Identifier	sdecodebits32		5944015	0					
ANR	5944061	ArgumentList	p		5944015	1					
ANR	5944062	Argument	p		5944015	0					
ANR	5944063	Identifier	p		5944015	0					
ANR	5944064	Argument	format		5944015	1					
ANR	5944065	Identifier	format		5944015	0					
ANR	5944066	Argument	& lnum		5944015	2					
ANR	5944067	UnaryOperationExpression	& lnum		5944015	0					
ANR	5944068	UnaryOperator	&		5944015	0					
ANR	5944069	Identifier	lnum		5944015	1					
ANR	5944070	CompoundStatement		24:12:699:709	5944015	1					
ANR	5944071	IdentifierDeclStatement	int sign_expt = lnum >> 23 ;	229:12:6933:6959	5944015	0	True				
ANR	5944072	IdentifierDecl	sign_expt = lnum >> 23		5944015	0					
ANR	5944073	IdentifierDeclType	int		5944015	0					
ANR	5944074	Identifier	sign_expt		5944015	1					
ANR	5944075	AssignmentExpression	sign_expt = lnum >> 23		5944015	2		=			
ANR	5944076	Identifier	sign_expt		5944015	0					
ANR	5944077	ShiftExpression	lnum >> 23		5944015	1		>>			
ANR	5944078	Identifier	lnum		5944015	0					
ANR	5944079	PrimaryExpression	23		5944015	1					
ANR	5944080	IdentifierDeclStatement	int expt = sign_expt & 0xff ;	230:12:6973:7000	5944015	1	True				
ANR	5944081	IdentifierDecl	expt = sign_expt & 0xff		5944015	0					
ANR	5944082	IdentifierDeclType	int		5944015	0					
ANR	5944083	Identifier	expt		5944015	1					
ANR	5944084	AssignmentExpression	expt = sign_expt & 0xff		5944015	2		=			
ANR	5944085	Identifier	expt		5944015	0					
ANR	5944086	BitAndExpression	sign_expt & 0xff		5944015	1		&			
ANR	5944087	Identifier	sign_expt		5944015	0					
ANR	5944088	PrimaryExpression	0xff		5944015	1					
ANR	5944089	IdentifierDeclStatement	long mant = lnum & 0x7fffff ;	231:12:7014:7041	5944015	2	True				
ANR	5944090	IdentifierDecl	mant = lnum & 0x7fffff		5944015	0					
ANR	5944091	IdentifierDeclType	long		5944015	0					
ANR	5944092	Identifier	mant		5944015	1					
ANR	5944093	AssignmentExpression	mant = lnum & 0x7fffff		5944015	2		=			
ANR	5944094	Identifier	mant		5944015	0					
ANR	5944095	BitAndExpression	lnum & 0x7fffff		5944015	1		&			
ANR	5944096	Identifier	lnum		5944015	0					
ANR	5944097	PrimaryExpression	0x7fffff		5944015	1					
ANR	5944098	IdentifierDeclStatement	float fnum ;	232:12:7055:7065	5944015	3	True				
ANR	5944099	IdentifierDecl	fnum		5944015	0					
ANR	5944100	IdentifierDeclType	float		5944015	0					
ANR	5944101	Identifier	fnum		5944015	1					
ANR	5944102	IfStatement	if ( expt == 0 && mant == 0 )		5944015	4					
ANR	5944103	Condition	expt == 0 && mant == 0	234:16:7084:7105	5944015	0	True				
ANR	5944104	AndExpression	expt == 0 && mant == 0		5944015	0		&&			
ANR	5944105	EqualityExpression	expt == 0		5944015	0		==			
ANR	5944106	Identifier	expt		5944015	0					
ANR	5944107	PrimaryExpression	0		5944015	1					
ANR	5944108	EqualityExpression	mant == 0		5944015	1		==			
ANR	5944109	Identifier	mant		5944015	0					
ANR	5944110	PrimaryExpression	0		5944015	1					
ANR	5944111	ExpressionStatement	fnum = 0	235:16:7124:7132	5944015	1	True				
ANR	5944112	AssignmentExpression	fnum = 0		5944015	0		=			
ANR	5944113	Identifier	fnum		5944015	0					
ANR	5944114	PrimaryExpression	0		5944015	1					
ANR	5944115	ElseStatement	else		5944015	0					
ANR	5944116	IfStatement	if ( expt == 0xff )		5944015	0					
ANR	5944117	Condition	expt == 0xff	236:21:7155:7166	5944015	0	True				
ANR	5944118	EqualityExpression	expt == 0xff		5944015	0		==			
ANR	5944119	Identifier	expt		5944015	0					
ANR	5944120	PrimaryExpression	0xff		5944015	1					
ANR	5944121	ExpressionStatement	return_error ( gs_error_undefinedresult )	237:16:7185:7223	5944015	1	True				
ANR	5944122	CallExpression	return_error ( gs_error_undefinedresult )		5944015	0					
ANR	5944123	Callee	return_error		5944015	0					
ANR	5944124	Identifier	return_error		5944015	0					
ANR	5944125	ArgumentList	gs_error_undefinedresult		5944015	1					
ANR	5944126	Argument	gs_error_undefinedresult		5944015	0					
ANR	5944127	Identifier	gs_error_undefinedresult		5944015	0					
ANR	5944128	ElseStatement	else		5944015	0					
ANR	5944129	CompoundStatement		30:17:903:903	5944015	0					
ANR	5944130	ExpressionStatement	mant += 0x800000	239:16:7277:7293	5944015	0	True				
ANR	5944131	AssignmentExpression	mant += 0x800000		5944015	0		+=			
ANR	5944132	Identifier	mant		5944015	0					
ANR	5944133	PrimaryExpression	0x800000		5944015	1					
ANR	5944134	ExpressionStatement	"fnum = ( float ) ldexp ( ( float ) mant , expt - 127 - 23 )"	240:16:7311:7360	5944015	1	True				
ANR	5944135	AssignmentExpression	"fnum = ( float ) ldexp ( ( float ) mant , expt - 127 - 23 )"		5944015	0		=			
ANR	5944136	Identifier	fnum		5944015	0					
ANR	5944137	CastExpression	"( float ) ldexp ( ( float ) mant , expt - 127 - 23 )"		5944015	1					
ANR	5944138	CastTarget	float		5944015	0					
ANR	5944139	CallExpression	"ldexp ( ( float ) mant , expt - 127 - 23 )"		5944015	1					
ANR	5944140	Callee	ldexp		5944015	0					
ANR	5944141	Identifier	ldexp		5944015	0					
ANR	5944142	ArgumentList	( float ) mant		5944015	1					
ANR	5944143	Argument	( float ) mant		5944015	0					
ANR	5944144	CastExpression	( float ) mant		5944015	0					
ANR	5944145	CastTarget	float		5944015	0					
ANR	5944146	Identifier	mant		5944015	1					
ANR	5944147	Argument	expt - 127 - 23		5944015	1					
ANR	5944148	AdditiveExpression	expt - 127 - 23		5944015	0		-			
ANR	5944149	Identifier	expt		5944015	0					
ANR	5944150	AdditiveExpression	127 - 23		5944015	1		-			
ANR	5944151	PrimaryExpression	127		5944015	0					
ANR	5944152	PrimaryExpression	23		5944015	1					
ANR	5944153	IfStatement	if ( sign_expt & 0x100 )		5944015	5					
ANR	5944154	Condition	sign_expt & 0x100	242:16:7392:7408	5944015	0	True				
ANR	5944155	BitAndExpression	sign_expt & 0x100		5944015	0		&			
ANR	5944156	Identifier	sign_expt		5944015	0					
ANR	5944157	PrimaryExpression	0x100		5944015	1					
ANR	5944158	ExpressionStatement	fnum = - fnum	243:16:7427:7439	5944015	1	True				
ANR	5944159	AssignmentExpression	fnum = - fnum		5944015	0		=			
ANR	5944160	Identifier	fnum		5944015	0					
ANR	5944161	UnaryOperationExpression	- fnum		5944015	1					
ANR	5944162	UnaryOperator	-		5944015	0					
ANR	5944163	Identifier	fnum		5944015	1					
ANR	5944164	ExpressionStatement	* pfnum = fnum	244:12:7453:7466	5944015	6	True				
ANR	5944165	AssignmentExpression	* pfnum = fnum		5944015	0		=			
ANR	5944166	UnaryOperationExpression	* pfnum		5944015	0					
ANR	5944167	UnaryOperator	*		5944015	0					
ANR	5944168	Identifier	pfnum		5944015	1					
ANR	5944169	Identifier	fnum		5944015	1					
ANR	5944170	ReturnStatement	return 0 ;	245:12:7480:7488	5944015	7	True				
ANR	5944171	PrimaryExpression	0		5944015	0					
ANR	5944172	IfStatement	if ( ! ( ~lnum & 0x7f800000 ) )		5944015	2					
ANR	5944173	Condition	! ( ~lnum & 0x7f800000 )	256:8:7819:7839	5944015	0	True				
ANR	5944174	UnaryOperationExpression	! ( ~lnum & 0x7f800000 )		5944015	0					
ANR	5944175	UnaryOperator	!		5944015	0					
ANR	5944176	BitAndExpression	~lnum & 0x7f800000		5944015	1		&			
ANR	5944177	Identifier	~lnum		5944015	0					
ANR	5944178	PrimaryExpression	0x7f800000		5944015	1					
ANR	5944179	ExpressionStatement	return_error ( gs_error_undefinedresult )	257:8:7878:7916	5944015	1	True				
ANR	5944180	CallExpression	return_error ( gs_error_undefinedresult )		5944015	0					
ANR	5944181	Callee	return_error		5944015	0					
ANR	5944182	Identifier	return_error		5944015	0					
ANR	5944183	ArgumentList	gs_error_undefinedresult		5944015	1					
ANR	5944184	Argument	gs_error_undefinedresult		5944015	0					
ANR	5944185	Identifier	gs_error_undefinedresult		5944015	0					
ANR	5944186	ReturnStatement	return 0 ;	258:4:7939:7947	5944015	3	True				
ANR	5944187	PrimaryExpression	0		5944015	0					
ANR	5944188	ReturnType	int		5944015	1					
ANR	5944189	Identifier	sdecode_float		5944015	2					
ANR	5944190	ParameterList	"const byte * p , int format , float * pfnum"		5944015	3					
ANR	5944191	Parameter	const byte * p	208:14:6313:6326	5944015	0	True				
ANR	5944192	ParameterType	const byte *		5944015	0					
ANR	5944193	Identifier	p		5944015	1					
ANR	5944194	Parameter	int format	208:30:6329:6338	5944015	1	True				
ANR	5944195	ParameterType	int		5944015	0					
ANR	5944196	Identifier	format		5944015	1					
ANR	5944197	Parameter	float * pfnum	208:42:6341:6352	5944015	2	True				
ANR	5944198	ParameterType	float *		5944015	0					
ANR	5944199	Identifier	pfnum		5944015	1					
ANR	5944200	CFGEntryNode	ENTRY		5944015		True				
ANR	5944201	CFGExitNode	EXIT		5944015		True				
ANR	5944202	Symbol	* pfnum		5944015						
ANR	5944203	Symbol	num_msb		5944015						
ANR	5944204	Symbol	num_lsb		5944015						
ANR	5944205	Symbol	sign_expt		5944015						
ANR	5944206	Symbol	ldexp		5944015						
ANR	5944207	Symbol	format		5944015						
ANR	5944208	Symbol	lnum		5944015						
ANR	5944209	Symbol	mant		5944015						
ANR	5944210	Symbol	pfnum		5944015						
ANR	5944211	Symbol	gs_error_undefinedresult		5944015						
ANR	5944212	Symbol	p		5944015						
ANR	5944213	Symbol	fnum		5944015						
ANR	5944214	Symbol	num_float_native		5944015						
ANR	5944215	Symbol	* ( bits32 * ) pfnum		5944015						
ANR	5944216	Symbol	expt		5944015						
ANR	5944217	Symbol	& lnum		5944015						
ANR	5944218	Symbol	~lnum		5944015						
