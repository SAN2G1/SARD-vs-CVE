command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3623492	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_sfnt_sfdriver.c								
ANR	3623493	Function	get_sfnt_table	75:2:2593:3359							
ANR	3623494	FunctionDef	"get_sfnt_table (TT_Face face , FT_Sfnt_Tag tag)"		3623493	0					
ANR	3623495	CompoundStatement		78:2:2682:3359	3623493	0					
ANR	3623496	IdentifierDeclStatement	void * table ;	79:4:2688:2700	3623493	0	True				
ANR	3623497	IdentifierDecl	* table		3623493	0					
ANR	3623498	IdentifierDeclType	void *		3623493	0					
ANR	3623499	Identifier	table		3623493	1					
ANR	3623500	SwitchStatement	switch ( tag )		3623493	1					
ANR	3623501	Condition	tag	82:13:2717:2719	3623493	0	True				
ANR	3623502	Identifier	tag		3623493	0					
ANR	3623503	CompoundStatement		6:4:44:44	3623493	1					
ANR	3623504	Label	case FT_SFNT_HEAD :	84:4:2733:2750	3623493	0	True				
ANR	3623505	Identifier	FT_SFNT_HEAD		3623493	0					
ANR	3623506	ExpressionStatement	table = & face -> header	85:6:2758:2779	3623493	1	True				
ANR	3623507	AssignmentExpression	table = & face -> header		3623493	0		=			
ANR	3623508	Identifier	table		3623493	0					
ANR	3623509	UnaryOperationExpression	& face -> header		3623493	1					
ANR	3623510	UnaryOperator	&		3623493	0					
ANR	3623511	PtrMemberAccess	face -> header		3623493	1					
ANR	3623512	Identifier	face		3623493	0					
ANR	3623513	Identifier	header		3623493	1					
ANR	3623514	BreakStatement	break ;	86:6:2787:2792	3623493	2	True				
ANR	3623515	Label	case FT_SFNT_HHEA :	88:4:2799:2816	3623493	3	True				
ANR	3623516	Identifier	FT_SFNT_HHEA		3623493	0					
ANR	3623517	ExpressionStatement	table = & face -> horizontal	89:6:2824:2849	3623493	4	True				
ANR	3623518	AssignmentExpression	table = & face -> horizontal		3623493	0		=			
ANR	3623519	Identifier	table		3623493	0					
ANR	3623520	UnaryOperationExpression	& face -> horizontal		3623493	1					
ANR	3623521	UnaryOperator	&		3623493	0					
ANR	3623522	PtrMemberAccess	face -> horizontal		3623493	1					
ANR	3623523	Identifier	face		3623493	0					
ANR	3623524	Identifier	horizontal		3623493	1					
ANR	3623525	BreakStatement	break ;	90:6:2857:2862	3623493	5	True				
ANR	3623526	Label	case FT_SFNT_VHEA :	92:4:2869:2886	3623493	6	True				
ANR	3623527	Identifier	FT_SFNT_VHEA		3623493	0					
ANR	3623528	ExpressionStatement	table = face -> vertical_info ? & face -> vertical : NULL	93:6:2894:2946	3623493	7	True				
ANR	3623529	AssignmentExpression	table = face -> vertical_info ? & face -> vertical : NULL		3623493	0		=			
ANR	3623530	Identifier	table		3623493	0					
ANR	3623531	ConditionalExpression	face -> vertical_info ? & face -> vertical : NULL		3623493	1					
ANR	3623532	Condition	face -> vertical_info		3623493	0					
ANR	3623533	PtrMemberAccess	face -> vertical_info		3623493	0					
ANR	3623534	Identifier	face		3623493	0					
ANR	3623535	Identifier	vertical_info		3623493	1					
ANR	3623536	UnaryOperationExpression	& face -> vertical		3623493	1					
ANR	3623537	UnaryOperator	&		3623493	0					
ANR	3623538	PtrMemberAccess	face -> vertical		3623493	1					
ANR	3623539	Identifier	face		3623493	0					
ANR	3623540	Identifier	vertical		3623493	1					
ANR	3623541	Identifier	NULL		3623493	2					
ANR	3623542	BreakStatement	break ;	94:6:2954:2959	3623493	8	True				
ANR	3623543	Label	case FT_SFNT_OS2 :	96:4:2966:2982	3623493	9	True				
ANR	3623544	Identifier	FT_SFNT_OS2		3623493	0					
ANR	3623545	ExpressionStatement	table = ( face -> os2 . version == 0xFFFFU ) ? NULL : & face -> os2	97:6:2990:3050	3623493	10	True				
ANR	3623546	AssignmentExpression	table = ( face -> os2 . version == 0xFFFFU ) ? NULL : & face -> os2		3623493	0		=			
ANR	3623547	Identifier	table		3623493	0					
ANR	3623548	ConditionalExpression	( face -> os2 . version == 0xFFFFU ) ? NULL : & face -> os2		3623493	1					
ANR	3623549	Condition	face -> os2 . version == 0xFFFFU		3623493	0					
ANR	3623550	EqualityExpression	face -> os2 . version == 0xFFFFU		3623493	0		==			
ANR	3623551	MemberAccess	face -> os2 . version		3623493	0					
ANR	3623552	PtrMemberAccess	face -> os2		3623493	0					
ANR	3623553	Identifier	face		3623493	0					
ANR	3623554	Identifier	os2		3623493	1					
ANR	3623555	Identifier	version		3623493	1					
ANR	3623556	PrimaryExpression	0xFFFFU		3623493	1					
ANR	3623557	Identifier	NULL		3623493	1					
ANR	3623558	UnaryOperationExpression	& face -> os2		3623493	2					
ANR	3623559	UnaryOperator	&		3623493	0					
ANR	3623560	PtrMemberAccess	face -> os2		3623493	1					
ANR	3623561	Identifier	face		3623493	0					
ANR	3623562	Identifier	os2		3623493	1					
ANR	3623563	BreakStatement	break ;	98:6:3058:3063	3623493	11	True				
ANR	3623564	Label	case FT_SFNT_POST :	100:4:3070:3087	3623493	12	True				
ANR	3623565	Identifier	FT_SFNT_POST		3623493	0					
ANR	3623566	ExpressionStatement	table = & face -> postscript	101:6:3095:3120	3623493	13	True				
ANR	3623567	AssignmentExpression	table = & face -> postscript		3623493	0		=			
ANR	3623568	Identifier	table		3623493	0					
ANR	3623569	UnaryOperationExpression	& face -> postscript		3623493	1					
ANR	3623570	UnaryOperator	&		3623493	0					
ANR	3623571	PtrMemberAccess	face -> postscript		3623493	1					
ANR	3623572	Identifier	face		3623493	0					
ANR	3623573	Identifier	postscript		3623493	1					
ANR	3623574	BreakStatement	break ;	102:6:3128:3133	3623493	14	True				
ANR	3623575	Label	case FT_SFNT_MAXP :	104:4:3140:3157	3623493	15	True				
ANR	3623576	Identifier	FT_SFNT_MAXP		3623493	0					
ANR	3623577	ExpressionStatement	table = & face -> max_profile	105:6:3165:3191	3623493	16	True				
ANR	3623578	AssignmentExpression	table = & face -> max_profile		3623493	0		=			
ANR	3623579	Identifier	table		3623493	0					
ANR	3623580	UnaryOperationExpression	& face -> max_profile		3623493	1					
ANR	3623581	UnaryOperator	&		3623493	0					
ANR	3623582	PtrMemberAccess	face -> max_profile		3623493	1					
ANR	3623583	Identifier	face		3623493	0					
ANR	3623584	Identifier	max_profile		3623493	1					
ANR	3623585	BreakStatement	break ;	106:6:3199:3204	3623493	17	True				
ANR	3623586	Label	case FT_SFNT_PCLT :	108:4:3211:3228	3623493	18	True				
ANR	3623587	Identifier	FT_SFNT_PCLT		3623493	0					
ANR	3623588	ExpressionStatement	table = face -> pclt . Version ? & face -> pclt : NULL	109:6:3236:3283	3623493	19	True				
ANR	3623589	AssignmentExpression	table = face -> pclt . Version ? & face -> pclt : NULL		3623493	0		=			
ANR	3623590	Identifier	table		3623493	0					
ANR	3623591	ConditionalExpression	face -> pclt . Version ? & face -> pclt : NULL		3623493	1					
ANR	3623592	Condition	face -> pclt . Version		3623493	0					
ANR	3623593	MemberAccess	face -> pclt . Version		3623493	0					
ANR	3623594	PtrMemberAccess	face -> pclt		3623493	0					
ANR	3623595	Identifier	face		3623493	0					
ANR	3623596	Identifier	pclt		3623493	1					
ANR	3623597	Identifier	Version		3623493	1					
ANR	3623598	UnaryOperationExpression	& face -> pclt		3623493	1					
ANR	3623599	UnaryOperator	&		3623493	0					
ANR	3623600	PtrMemberAccess	face -> pclt		3623493	1					
ANR	3623601	Identifier	face		3623493	0					
ANR	3623602	Identifier	pclt		3623493	1					
ANR	3623603	Identifier	NULL		3623493	2					
ANR	3623604	BreakStatement	break ;	110:6:3291:3296	3623493	20	True				
ANR	3623605	Label	default :	112:4:3303:3310	3623493	21	True				
ANR	3623606	Identifier	default		3623493	0					
ANR	3623607	ExpressionStatement	table = NULL	113:6:3318:3330	3623493	22	True				
ANR	3623608	AssignmentExpression	table = NULL		3623493	0		=			
ANR	3623609	Identifier	table		3623493	0					
ANR	3623610	Identifier	NULL		3623493	1					
ANR	3623611	ReturnStatement	return table ;	116:4:3343:3355	3623493	2	True				
ANR	3623612	Identifier	table		3623493	0					
ANR	3623613	ReturnType	static void *		3623493	1					
ANR	3623614	Identifier	get_sfnt_table		3623493	2					
ANR	3623615	ParameterList	"TT_Face face , FT_Sfnt_Tag tag"		3623493	3					
ANR	3623616	Parameter	TT_Face face	76:18:2624:2640	3623493	0	True				
ANR	3623617	ParameterType	TT_Face		3623493	0					
ANR	3623618	Identifier	face		3623493	1					
ANR	3623619	Parameter	FT_Sfnt_Tag tag	77:18:2661:2676	3623493	1	True				
ANR	3623620	ParameterType	FT_Sfnt_Tag		3623493	0					
ANR	3623621	Identifier	tag		3623493	1					
ANR	3623622	CFGEntryNode	ENTRY		3623493		True				
ANR	3623623	CFGExitNode	EXIT		3623493		True				
ANR	3623624	Symbol	NULL		3623493						
ANR	3623625	Symbol	& face -> postscript		3623493						
ANR	3623626	Symbol	& face -> pclt		3623493						
ANR	3623627	Symbol	face -> os2 . version		3623493						
ANR	3623628	Symbol	& face -> vertical		3623493						
ANR	3623629	Symbol	* face		3623493						
ANR	3623630	Symbol	face -> vertical_info		3623493						
ANR	3623631	Symbol	face -> os2		3623493						
ANR	3623632	Symbol	face		3623493						
ANR	3623633	Symbol	& face -> header		3623493						
ANR	3623634	Symbol	face -> pclt . Version		3623493						
ANR	3623635	Symbol	& face -> horizontal		3623493						
ANR	3623636	Symbol	tag		3623493						
ANR	3623637	Symbol	& face -> os2		3623493						
ANR	3623638	Symbol	table		3623493						
ANR	3623639	Symbol	& face -> max_profile		3623493						
ANR	3623640	Symbol	face -> pclt		3623493						
ANR	3623641	Function	sfnt_table_info	120:2:3365:3953							
ANR	3623642	FunctionDef	"sfnt_table_info (TT_Face face , FT_UInt idx , FT_ULong * tag , FT_ULong * offset , FT_ULong * length)"		3623641	0					
ANR	3623643	CompoundStatement		126:2:3566:3953	3623641	0					
ANR	3623644	IfStatement	if ( ! offset || ! length )		3623641	0					
ANR	3623645	Condition	! offset || ! length	127:9:3577:3594	3623641	0	True				
ANR	3623646	OrExpression	! offset || ! length		3623641	0		||			
ANR	3623647	UnaryOperationExpression	! offset		3623641	0					
ANR	3623648	UnaryOperator	!		3623641	0					
ANR	3623649	Identifier	offset		3623641	1					
ANR	3623650	UnaryOperationExpression	! length		3623641	1					
ANR	3623651	UnaryOperator	!		3623641	0					
ANR	3623652	Identifier	length		3623641	1					
ANR	3623653	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	128:6:3604:3639	3623641	1	True				
ANR	3623654	CallExpression	FT_THROW ( Invalid_Argument )		3623641	0					
ANR	3623655	Callee	FT_THROW		3623641	0					
ANR	3623656	Identifier	FT_THROW		3623641	0					
ANR	3623657	ArgumentList	Invalid_Argument		3623641	1					
ANR	3623658	Argument	Invalid_Argument		3623641	0					
ANR	3623659	Identifier	Invalid_Argument		3623641	0					
ANR	3623660	IfStatement	if ( ! tag )		3623641	1					
ANR	3623661	Condition	! tag	130:9:3651:3654	3623641	0	True				
ANR	3623662	UnaryOperationExpression	! tag		3623641	0					
ANR	3623663	UnaryOperator	!		3623641	0					
ANR	3623664	Identifier	tag		3623641	1					
ANR	3623665	ExpressionStatement	* length = face -> num_tables	131:6:3664:3690	3623641	1	True				
ANR	3623666	AssignmentExpression	* length = face -> num_tables		3623641	0		=			
ANR	3623667	UnaryOperationExpression	* length		3623641	0					
ANR	3623668	UnaryOperator	*		3623641	0					
ANR	3623669	Identifier	length		3623641	1					
ANR	3623670	PtrMemberAccess	face -> num_tables		3623641	1					
ANR	3623671	Identifier	face		3623641	0					
ANR	3623672	Identifier	num_tables		3623641	1					
ANR	3623673	ElseStatement	else		3623641	0					
ANR	3623674	CompoundStatement		8:4:138:138	3623641	0					
ANR	3623675	IfStatement	if ( idx >= face -> num_tables )		3623641	0					
ANR	3623676	Condition	idx >= face -> num_tables	134:11:3718:3740	3623641	0	True				
ANR	3623677	RelationalExpression	idx >= face -> num_tables		3623641	0		>=			
ANR	3623678	Identifier	idx		3623641	0					
ANR	3623679	PtrMemberAccess	face -> num_tables		3623641	1					
ANR	3623680	Identifier	face		3623641	0					
ANR	3623681	Identifier	num_tables		3623641	1					
ANR	3623682	ReturnStatement	return FT_THROW ( Table_Missing ) ;	135:8:3752:3784	3623641	1	True				
ANR	3623683	CallExpression	FT_THROW ( Table_Missing )		3623641	0					
ANR	3623684	Callee	FT_THROW		3623641	0					
ANR	3623685	Identifier	FT_THROW		3623641	0					
ANR	3623686	ArgumentList	Table_Missing		3623641	1					
ANR	3623687	Argument	Table_Missing		3623641	0					
ANR	3623688	Identifier	Table_Missing		3623641	0					
ANR	3623689	ExpressionStatement	* tag = face -> dir_tables [ idx ] . Tag	137:6:3793:3828	3623641	1	True				
ANR	3623690	AssignmentExpression	* tag = face -> dir_tables [ idx ] . Tag		3623641	0		=			
ANR	3623691	UnaryOperationExpression	* tag		3623641	0					
ANR	3623692	UnaryOperator	*		3623641	0					
ANR	3623693	Identifier	tag		3623641	1					
ANR	3623694	MemberAccess	face -> dir_tables [ idx ] . Tag		3623641	1					
ANR	3623695	ArrayIndexing	face -> dir_tables [ idx ]		3623641	0					
ANR	3623696	PtrMemberAccess	face -> dir_tables		3623641	0					
ANR	3623697	Identifier	face		3623641	0					
ANR	3623698	Identifier	dir_tables		3623641	1					
ANR	3623699	Identifier	idx		3623641	1					
ANR	3623700	Identifier	Tag		3623641	1					
ANR	3623701	ExpressionStatement	* offset = face -> dir_tables [ idx ] . Offset	138:6:3836:3874	3623641	2	True				
ANR	3623702	AssignmentExpression	* offset = face -> dir_tables [ idx ] . Offset		3623641	0		=			
ANR	3623703	UnaryOperationExpression	* offset		3623641	0					
ANR	3623704	UnaryOperator	*		3623641	0					
ANR	3623705	Identifier	offset		3623641	1					
ANR	3623706	MemberAccess	face -> dir_tables [ idx ] . Offset		3623641	1					
ANR	3623707	ArrayIndexing	face -> dir_tables [ idx ]		3623641	0					
ANR	3623708	PtrMemberAccess	face -> dir_tables		3623641	0					
ANR	3623709	Identifier	face		3623641	0					
ANR	3623710	Identifier	dir_tables		3623641	1					
ANR	3623711	Identifier	idx		3623641	1					
ANR	3623712	Identifier	Offset		3623641	1					
ANR	3623713	ExpressionStatement	* length = face -> dir_tables [ idx ] . Length	139:6:3882:3920	3623641	3	True				
ANR	3623714	AssignmentExpression	* length = face -> dir_tables [ idx ] . Length		3623641	0		=			
ANR	3623715	UnaryOperationExpression	* length		3623641	0					
ANR	3623716	UnaryOperator	*		3623641	0					
ANR	3623717	Identifier	length		3623641	1					
ANR	3623718	MemberAccess	face -> dir_tables [ idx ] . Length		3623641	1					
ANR	3623719	ArrayIndexing	face -> dir_tables [ idx ]		3623641	0					
ANR	3623720	PtrMemberAccess	face -> dir_tables		3623641	0					
ANR	3623721	Identifier	face		3623641	0					
ANR	3623722	Identifier	dir_tables		3623641	1					
ANR	3623723	Identifier	idx		3623641	1					
ANR	3623724	Identifier	Length		3623641	1					
ANR	3623725	ReturnStatement	return FT_Err_Ok ;	142:4:3933:3949	3623641	2	True				
ANR	3623726	Identifier	FT_Err_Ok		3623641	0					
ANR	3623727	ReturnType	static FT_Error		3623641	1					
ANR	3623728	Identifier	sfnt_table_info		3623641	2					
ANR	3623729	ParameterList	"TT_Face face , FT_UInt idx , FT_ULong * tag , FT_ULong * offset , FT_ULong * length"		3623641	3					
ANR	3623730	Parameter	TT_Face face	121:19:3400:3414	3623641	0	True				
ANR	3623731	ParameterType	TT_Face		3623641	0					
ANR	3623732	Identifier	face		3623641	1					
ANR	3623733	Parameter	FT_UInt idx	122:19:3436:3449	3623641	1	True				
ANR	3623734	ParameterType	FT_UInt		3623641	0					
ANR	3623735	Identifier	idx		3623641	1					
ANR	3623736	Parameter	FT_ULong * tag	123:19:3471:3484	3623641	2	True				
ANR	3623737	ParameterType	FT_ULong *		3623641	0					
ANR	3623738	Identifier	tag		3623641	1					
ANR	3623739	Parameter	FT_ULong * offset	124:19:3506:3522	3623641	3	True				
ANR	3623740	ParameterType	FT_ULong *		3623641	0					
ANR	3623741	Identifier	offset		3623641	1					
ANR	3623742	Parameter	FT_ULong * length	125:19:3544:3560	3623641	4	True				
ANR	3623743	ParameterType	FT_ULong *		3623641	0					
ANR	3623744	Identifier	length		3623641	1					
ANR	3623745	CFGEntryNode	ENTRY		3623641		True				
ANR	3623746	CFGExitNode	EXIT		3623641		True				
ANR	3623747	Symbol	face -> dir_tables		3623641						
ANR	3623748	Symbol	offset		3623641						
ANR	3623749	Symbol	* tag		3623641						
ANR	3623750	Symbol	FT_Err_Ok		3623641						
ANR	3623751	Symbol	* face -> dir_tables		3623641						
ANR	3623752	Symbol	length		3623641						
ANR	3623753	Symbol	Table_Missing		3623641						
ANR	3623754	Symbol	Invalid_Argument		3623641						
ANR	3623755	Symbol	* face		3623641						
ANR	3623756	Symbol	FT_THROW		3623641						
ANR	3623757	Symbol	face -> dir_tables [ idx ] . Offset		3623641						
ANR	3623758	Symbol	face		3623641						
ANR	3623759	Symbol	* idx		3623641						
ANR	3623760	Symbol	* offset		3623641						
ANR	3623761	Symbol	* length		3623641						
ANR	3623762	Symbol	face -> dir_tables [ idx ] . Length		3623641						
ANR	3623763	Symbol	tag		3623641						
ANR	3623764	Symbol	face -> num_tables		3623641						
ANR	3623765	Symbol	face -> dir_tables [ idx ] . Tag		3623641						
ANR	3623766	Symbol	idx		3623641						
ANR	3623767	Symbol	* * face		3623641						
ANR	3623768	Function	sfnt_get_glyph_name	162:2:4312:4717							
ANR	3623769	FunctionDef	"sfnt_get_glyph_name (FT_Face face , FT_UInt glyph_index , FT_Pointer buffer , FT_UInt buffer_max)"		3623768	0					
ANR	3623770	CompoundStatement		167:2:4510:4717	3623768	0					
ANR	3623771	IdentifierDeclStatement	FT_String * gname ;	168:4:4516:4533	3623768	0	True				
ANR	3623772	IdentifierDecl	* gname		3623768	0					
ANR	3623773	IdentifierDeclType	FT_String *		3623768	0					
ANR	3623774	Identifier	gname		3623768	1					
ANR	3623775	IdentifierDeclStatement	FT_Error error ;	169:4:4539:4556	3623768	1	True				
ANR	3623776	IdentifierDecl	error		3623768	0					
ANR	3623777	IdentifierDeclType	FT_Error		3623768	0					
ANR	3623778	Identifier	error		3623768	1					
ANR	3623779	ExpressionStatement	"error = tt_face_get_ps_name ( ( TT_Face ) face , glyph_index , & gname )"	172:4:4564:4629	3623768	2	True				
ANR	3623780	AssignmentExpression	"error = tt_face_get_ps_name ( ( TT_Face ) face , glyph_index , & gname )"		3623768	0		=			
ANR	3623781	Identifier	error		3623768	0					
ANR	3623782	CallExpression	"tt_face_get_ps_name ( ( TT_Face ) face , glyph_index , & gname )"		3623768	1					
ANR	3623783	Callee	tt_face_get_ps_name		3623768	0					
ANR	3623784	Identifier	tt_face_get_ps_name		3623768	0					
ANR	3623785	ArgumentList	( TT_Face ) face		3623768	1					
ANR	3623786	Argument	( TT_Face ) face		3623768	0					
ANR	3623787	CastExpression	( TT_Face ) face		3623768	0					
ANR	3623788	CastTarget	TT_Face		3623768	0					
ANR	3623789	Identifier	face		3623768	1					
ANR	3623790	Argument	glyph_index		3623768	1					
ANR	3623791	Identifier	glyph_index		3623768	0					
ANR	3623792	Argument	& gname		3623768	2					
ANR	3623793	UnaryOperationExpression	& gname		3623768	0					
ANR	3623794	UnaryOperator	&		3623768	0					
ANR	3623795	Identifier	gname		3623768	1					
ANR	3623796	IfStatement	if ( ! error )		3623768	3					
ANR	3623797	Condition	! error	173:9:4640:4645	3623768	0	True				
ANR	3623798	UnaryOperationExpression	! error		3623768	0					
ANR	3623799	UnaryOperator	!		3623768	0					
ANR	3623800	Identifier	error		3623768	1					
ANR	3623801	ExpressionStatement	"FT_STRCPYN ( buffer , gname , buffer_max )"	174:6:4655:4694	3623768	1	True				
ANR	3623802	CallExpression	"FT_STRCPYN ( buffer , gname , buffer_max )"		3623768	0					
ANR	3623803	Callee	FT_STRCPYN		3623768	0					
ANR	3623804	Identifier	FT_STRCPYN		3623768	0					
ANR	3623805	ArgumentList	buffer		3623768	1					
ANR	3623806	Argument	buffer		3623768	0					
ANR	3623807	Identifier	buffer		3623768	0					
ANR	3623808	Argument	gname		3623768	1					
ANR	3623809	Identifier	gname		3623768	0					
ANR	3623810	Argument	buffer_max		3623768	2					
ANR	3623811	Identifier	buffer_max		3623768	0					
ANR	3623812	ReturnStatement	return error ;	176:4:4701:4713	3623768	4	True				
ANR	3623813	Identifier	error		3623768	0					
ANR	3623814	ReturnType	static FT_Error		3623768	1					
ANR	3623815	Identifier	sfnt_get_glyph_name		3623768	2					
ANR	3623816	ParameterList	"FT_Face face , FT_UInt glyph_index , FT_Pointer buffer , FT_UInt buffer_max"		3623768	3					
ANR	3623817	Parameter	FT_Face face	163:23:4351:4366	3623768	0	True				
ANR	3623818	ParameterType	FT_Face		3623768	0					
ANR	3623819	Identifier	face		3623768	1					
ANR	3623820	Parameter	FT_UInt glyph_index	164:23:4392:4414	3623768	1	True				
ANR	3623821	ParameterType	FT_UInt		3623768	0					
ANR	3623822	Identifier	glyph_index		3623768	1					
ANR	3623823	Parameter	FT_Pointer buffer	165:23:4440:4457	3623768	2	True				
ANR	3623824	ParameterType	FT_Pointer		3623768	0					
ANR	3623825	Identifier	buffer		3623768	1					
ANR	3623826	Parameter	FT_UInt buffer_max	166:23:4483:4504	3623768	3	True				
ANR	3623827	ParameterType	FT_UInt		3623768	0					
ANR	3623828	Identifier	buffer_max		3623768	1					
ANR	3623829	CFGEntryNode	ENTRY		3623768		True				
ANR	3623830	CFGExitNode	EXIT		3623768		True				
ANR	3623831	Symbol	buffer_max		3623768						
ANR	3623832	Symbol	face		3623768						
ANR	3623833	Symbol	glyph_index		3623768						
ANR	3623834	Symbol	tt_face_get_ps_name		3623768						
ANR	3623835	Symbol	buffer		3623768						
ANR	3623836	Symbol	gname		3623768						
ANR	3623837	Symbol	error		3623768						
ANR	3623838	Symbol	& gname		3623768						
ANR	3623839	Function	sfnt_get_name_index	180:2:4723:5455							
ANR	3623840	FunctionDef	"sfnt_get_name_index (FT_Face face , FT_String * glyph_name)"		3623839	0					
ANR	3623841	CompoundStatement		183:2:4829:5455	3623839	0					
ANR	3623842	IdentifierDeclStatement	TT_Face ttface = ( TT_Face ) face ;	184:4:4835:4866	3623839	0	True				
ANR	3623843	IdentifierDecl	ttface = ( TT_Face ) face		3623839	0					
ANR	3623844	IdentifierDeclType	TT_Face		3623839	0					
ANR	3623845	Identifier	ttface		3623839	1					
ANR	3623846	AssignmentExpression	ttface = ( TT_Face ) face		3623839	2		=			
ANR	3623847	Identifier	ttface		3623839	0					
ANR	3623848	CastExpression	( TT_Face ) face		3623839	1					
ANR	3623849	CastTarget	TT_Face		3623839	0					
ANR	3623850	Identifier	face		3623839	1					
ANR	3623851	IdentifierDeclStatement	"FT_UInt i , max_gid = FT_UINT_MAX ;"	186:4:4873:4906	3623839	1	True				
ANR	3623852	IdentifierDecl	i		3623839	0					
ANR	3623853	IdentifierDeclType	FT_UInt		3623839	0					
ANR	3623854	Identifier	i		3623839	1					
ANR	3623855	IdentifierDecl	max_gid = FT_UINT_MAX		3623839	1					
ANR	3623856	IdentifierDeclType	FT_UInt		3623839	0					
ANR	3623857	Identifier	max_gid		3623839	1					
ANR	3623858	AssignmentExpression	max_gid = FT_UINT_MAX		3623839	2		=			
ANR	3623859	Identifier	FT_UINT_MAX		3623839	0					
ANR	3623860	Identifier	FT_UINT_MAX		3623839	1					
ANR	3623861	IfStatement	if ( face -> num_glyphs < 0 )		3623839	2					
ANR	3623862	Condition	face -> num_glyphs < 0	189:9:4919:4938	3623839	0	True				
ANR	3623863	RelationalExpression	face -> num_glyphs < 0		3623839	0		<			
ANR	3623864	PtrMemberAccess	face -> num_glyphs		3623839	0					
ANR	3623865	Identifier	face		3623839	0					
ANR	3623866	Identifier	num_glyphs		3623839	1					
ANR	3623867	PrimaryExpression	0		3623839	1					
ANR	3623868	ReturnStatement	return 0 ;	190:6:4948:4956	3623839	1	True				
ANR	3623869	PrimaryExpression	0		3623839	0					
ANR	3623870	ElseStatement	else		3623839	0					
ANR	3623871	IfStatement	if ( ( FT_ULong ) face -> num_glyphs < FT_UINT_MAX )		3623839	0					
ANR	3623872	Condition	( FT_ULong ) face -> num_glyphs < FT_UINT_MAX	191:14:4972:5011	3623839	0	True				
ANR	3623873	RelationalExpression	( FT_ULong ) face -> num_glyphs < FT_UINT_MAX		3623839	0		<			
ANR	3623874	CastExpression	( FT_ULong ) face -> num_glyphs		3623839	0					
ANR	3623875	CastTarget	FT_ULong		3623839	0					
ANR	3623876	PtrMemberAccess	face -> num_glyphs		3623839	1					
ANR	3623877	Identifier	face		3623839	0					
ANR	3623878	Identifier	num_glyphs		3623839	1					
ANR	3623879	Identifier	FT_UINT_MAX		3623839	1					
ANR	3623880	ExpressionStatement	max_gid = ( FT_UInt ) face -> num_glyphs	192:6:5021:5056	3623839	1	True				
ANR	3623881	AssignmentExpression	max_gid = ( FT_UInt ) face -> num_glyphs		3623839	0		=			
ANR	3623882	Identifier	max_gid		3623839	0					
ANR	3623883	CastExpression	( FT_UInt ) face -> num_glyphs		3623839	1					
ANR	3623884	CastTarget	FT_UInt		3623839	0					
ANR	3623885	PtrMemberAccess	face -> num_glyphs		3623839	1					
ANR	3623886	Identifier	face		3623839	0					
ANR	3623887	Identifier	num_glyphs		3623839	1					
ANR	3623888	ElseStatement	else		3623839	0					
ANR	3623889	ExpressionStatement	"FT_TRACE0 ( ( ""Ignore glyph names for invalid GID 0x%08x - 0x%08x\\n"" , FT_UINT_MAX , face -> num_glyphs ) )"	194:6:5073:5191	3623839	0	True				
ANR	3623890	CallExpression	"FT_TRACE0 ( ( ""Ignore glyph names for invalid GID 0x%08x - 0x%08x\\n"" , FT_UINT_MAX , face -> num_glyphs ) )"		3623839	0					
ANR	3623891	Callee	FT_TRACE0		3623839	0					
ANR	3623892	Identifier	FT_TRACE0		3623839	0					
ANR	3623893	ArgumentList	"""Ignore glyph names for invalid GID 0x%08x - 0x%08x\\n"" , FT_UINT_MAX , face -> num_glyphs"		3623839	1					
ANR	3623894	Argument	"""Ignore glyph names for invalid GID 0x%08x - 0x%08x\\n"" , FT_UINT_MAX , face -> num_glyphs"		3623839	0					
ANR	3623895	Expression	"""Ignore glyph names for invalid GID 0x%08x - 0x%08x\\n"" , FT_UINT_MAX , face -> num_glyphs"		3623839	0					
ANR	3623896	PrimaryExpression	"""Ignore glyph names for invalid GID 0x%08x - 0x%08x\\n"""		3623839	0					
ANR	3623897	Expression	"FT_UINT_MAX , face -> num_glyphs"		3623839	1					
ANR	3623898	Identifier	FT_UINT_MAX		3623839	0					
ANR	3623899	PtrMemberAccess	face -> num_glyphs		3623839	1					
ANR	3623900	Identifier	face		3623839	0					
ANR	3623901	Identifier	num_glyphs		3623839	1					
ANR	3623902	ForStatement	for ( i = 0 ; i < max_gid ; i ++ )		3623839	3					
ANR	3623903	ForInit	i = 0 ;	197:10:5204:5209	3623839	0	True				
ANR	3623904	AssignmentExpression	i = 0		3623839	0		=			
ANR	3623905	Identifier	i		3623839	0					
ANR	3623906	PrimaryExpression	0		3623839	1					
ANR	3623907	Condition	i < max_gid	197:17:5211:5221	3623839	1	True				
ANR	3623908	RelationalExpression	i < max_gid		3623839	0		<			
ANR	3623909	Identifier	i		3623839	0					
ANR	3623910	Identifier	max_gid		3623839	1					
ANR	3623911	PostIncDecOperationExpression	i ++	197:30:5224:5226	3623839	2	True				
ANR	3623912	Identifier	i		3623839	0					
ANR	3623913	IncDec	++		3623839	1					
ANR	3623914	CompoundStatement		18:6:437:497	3623839	3					
ANR	3623915	IdentifierDeclStatement	FT_String * gname ;	199:6:5242:5259	3623839	0	True				
ANR	3623916	IdentifierDecl	* gname		3623839	0					
ANR	3623917	IdentifierDeclType	FT_String *		3623839	0					
ANR	3623918	Identifier	gname		3623839	1					
ANR	3623919	IdentifierDeclStatement	"FT_Error error = tt_face_get_ps_name ( ttface , i , & gname ) ;"	200:6:5267:5327	3623839	1	True				
ANR	3623920	IdentifierDecl	"error = tt_face_get_ps_name ( ttface , i , & gname )"		3623839	0					
ANR	3623921	IdentifierDeclType	FT_Error		3623839	0					
ANR	3623922	Identifier	error		3623839	1					
ANR	3623923	AssignmentExpression	"error = tt_face_get_ps_name ( ttface , i , & gname )"		3623839	2		=			
ANR	3623924	Identifier	error		3623839	0					
ANR	3623925	CallExpression	"tt_face_get_ps_name ( ttface , i , & gname )"		3623839	1					
ANR	3623926	Callee	tt_face_get_ps_name		3623839	0					
ANR	3623927	Identifier	tt_face_get_ps_name		3623839	0					
ANR	3623928	ArgumentList	ttface		3623839	1					
ANR	3623929	Argument	ttface		3623839	0					
ANR	3623930	Identifier	ttface		3623839	0					
ANR	3623931	Argument	i		3623839	1					
ANR	3623932	Identifier	i		3623839	0					
ANR	3623933	Argument	& gname		3623839	2					
ANR	3623934	UnaryOperationExpression	& gname		3623839	0					
ANR	3623935	UnaryOperator	&		3623839	0					
ANR	3623936	Identifier	gname		3623839	1					
ANR	3623937	IfStatement	if ( error )		3623839	2					
ANR	3623938	Condition	error	203:11:5342:5346	3623839	0	True				
ANR	3623939	Identifier	error		3623839	0					
ANR	3623940	ContinueStatement	continue ;	204:8:5358:5366	3623839	1	True				
ANR	3623941	IfStatement	"if ( ! ft_strcmp ( glyph_name , gname ) )"		3623839	3					
ANR	3623942	Condition	"! ft_strcmp ( glyph_name , gname )"	206:11:5380:5410	3623839	0	True				
ANR	3623943	UnaryOperationExpression	"! ft_strcmp ( glyph_name , gname )"		3623839	0					
ANR	3623944	UnaryOperator	!		3623839	0					
ANR	3623945	CallExpression	"ft_strcmp ( glyph_name , gname )"		3623839	1					
ANR	3623946	Callee	ft_strcmp		3623839	0					
ANR	3623947	Identifier	ft_strcmp		3623839	0					
ANR	3623948	ArgumentList	glyph_name		3623839	1					
ANR	3623949	Argument	glyph_name		3623839	0					
ANR	3623950	Identifier	glyph_name		3623839	0					
ANR	3623951	Argument	gname		3623839	1					
ANR	3623952	Identifier	gname		3623839	0					
ANR	3623953	ReturnStatement	return i ;	207:8:5422:5430	3623839	1	True				
ANR	3623954	Identifier	i		3623839	0					
ANR	3623955	ReturnStatement	return 0 ;	210:4:5443:5451	3623839	4	True				
ANR	3623956	PrimaryExpression	0		3623839	0					
ANR	3623957	ReturnType	static FT_UInt		3623839	1					
ANR	3623958	Identifier	sfnt_get_name_index		3623839	2					
ANR	3623959	ParameterList	"FT_Face face , FT_String * glyph_name"		3623839	3					
ANR	3623960	Parameter	FT_Face face	181:23:4761:4776	3623839	0	True				
ANR	3623961	ParameterType	FT_Face		3623839	0					
ANR	3623962	Identifier	face		3623839	1					
ANR	3623963	Parameter	FT_String * glyph_name	182:23:4802:4823	3623839	1	True				
ANR	3623964	ParameterType	FT_String *		3623839	0					
ANR	3623965	Identifier	glyph_name		3623839	1					
ANR	3623966	CFGEntryNode	ENTRY		3623839		True				
ANR	3623967	CFGExitNode	EXIT		3623839		True				
ANR	3623968	Symbol	glyph_name		3623839						
ANR	3623969	Symbol	FT_UINT_MAX		3623839						
ANR	3623970	Symbol	i		3623839						
ANR	3623971	Symbol	tt_face_get_ps_name		3623839						
ANR	3623972	Symbol	face -> num_glyphs		3623839						
ANR	3623973	Symbol	gname		3623839						
ANR	3623974	Symbol	error		3623839						
ANR	3623975	Symbol	* face		3623839						
ANR	3623976	Symbol	face		3623839						
ANR	3623977	Symbol	max_gid		3623839						
ANR	3623978	Symbol	ft_strcmp		3623839						
ANR	3623979	Symbol	ttface		3623839						
ANR	3623980	Symbol	& gname		3623839						
ANR	3623981	DeclStmt									
ANR	3623982	Decl							const unsigned char	const unsigned char [ 16 ]	sfnt_ps_map
ANR	3623983	Function	sfnt_is_postscript	244:2:6467:6671							
ANR	3623984	FunctionDef	sfnt_is_postscript (int c)		3623983	0					
ANR	3623985	CompoundStatement		246:2:6511:6671	3623983	0					
ANR	3623986	IdentifierDeclStatement	unsigned int cc ;	247:4:6517:6533	3623983	0	True				
ANR	3623987	IdentifierDecl	cc		3623983	0					
ANR	3623988	IdentifierDeclType	unsigned int		3623983	0					
ANR	3623989	Identifier	cc		3623983	1					
ANR	3623990	IfStatement	if ( c < 0 || c >= 0x80 )		3623983	1					
ANR	3623991	Condition	c < 0 || c >= 0x80	250:9:6546:6563	3623983	0	True				
ANR	3623992	OrExpression	c < 0 || c >= 0x80		3623983	0		||			
ANR	3623993	RelationalExpression	c < 0		3623983	0		<			
ANR	3623994	Identifier	c		3623983	0					
ANR	3623995	PrimaryExpression	0		3623983	1					
ANR	3623996	RelationalExpression	c >= 0x80		3623983	1		>=			
ANR	3623997	Identifier	c		3623983	0					
ANR	3623998	PrimaryExpression	0x80		3623983	1					
ANR	3623999	ReturnStatement	return 0 ;	251:6:6573:6581	3623983	1	True				
ANR	3624000	PrimaryExpression	0		3623983	0					
ANR	3624001	ExpressionStatement	cc = ( unsigned int ) c	253:4:6588:6608	3623983	2	True				
ANR	3624002	AssignmentExpression	cc = ( unsigned int ) c		3623983	0		=			
ANR	3624003	Identifier	cc		3623983	0					
ANR	3624004	CastExpression	( unsigned int ) c		3623983	1					
ANR	3624005	CastTarget	unsigned int		3623983	0					
ANR	3624006	Identifier	c		3623983	1					
ANR	3624007	ReturnStatement	return sfnt_ps_map [ cc >> 3 ] & ( 1 << ( cc & 0x07 ) ) ;	255:4:6615:6667	3623983	3	True				
ANR	3624008	BitAndExpression	sfnt_ps_map [ cc >> 3 ] & ( 1 << ( cc & 0x07 ) )		3623983	0		&			
ANR	3624009	ArrayIndexing	sfnt_ps_map [ cc >> 3 ]		3623983	0					
ANR	3624010	Identifier	sfnt_ps_map		3623983	0					
ANR	3624011	ShiftExpression	cc >> 3		3623983	1		>>			
ANR	3624012	Identifier	cc		3623983	0					
ANR	3624013	PrimaryExpression	3		3623983	1					
ANR	3624014	ShiftExpression	1 << ( cc & 0x07 )		3623983	1		<<			
ANR	3624015	PrimaryExpression	1		3623983	0					
ANR	3624016	BitAndExpression	cc & 0x07		3623983	1		&			
ANR	3624017	Identifier	cc		3623983	0					
ANR	3624018	PrimaryExpression	0x07		3623983	1					
ANR	3624019	ReturnType	static int		3623983	1					
ANR	3624020	Identifier	sfnt_is_postscript		3623983	2					
ANR	3624021	ParameterList	int c		3623983	3					
ANR	3624022	Parameter	int c	245:22:6500:6505	3623983	0	True				
ANR	3624023	ParameterType	int		3623983	0					
ANR	3624024	Identifier	c		3623983	1					
ANR	3624025	CFGEntryNode	ENTRY		3623983		True				
ANR	3624026	CFGExitNode	EXIT		3623983		True				
ANR	3624027	Symbol	cc		3623983						
ANR	3624028	Symbol	c		3623983						
ANR	3624029	Symbol	* sfnt_ps_map		3623983						
ANR	3624030	Symbol	* cc		3623983						
ANR	3624031	Symbol	sfnt_ps_map		3623983						
ANR	3624032	Function	sfnt_is_alphanumeric	266:2:7062:7140							
ANR	3624033	FunctionDef	sfnt_is_alphanumeric (int c)		3624032	0					
ANR	3624034	CompoundStatement		268:2:7108:7140	3624032	0					
ANR	3624035	ReturnStatement	return ft_isalnum ( c ) ;	269:4:7114:7136	3624032	0	True				
ANR	3624036	CallExpression	ft_isalnum ( c )		3624032	0					
ANR	3624037	Callee	ft_isalnum		3624032	0					
ANR	3624038	Identifier	ft_isalnum		3624032	0					
ANR	3624039	ArgumentList	c		3624032	1					
ANR	3624040	Argument	c		3624032	0					
ANR	3624041	Identifier	c		3624032	0					
ANR	3624042	ReturnType	static int		3624032	1					
ANR	3624043	Identifier	sfnt_is_alphanumeric		3624032	2					
ANR	3624044	ParameterList	int c		3624032	3					
ANR	3624045	Parameter	int c	267:24:7097:7102	3624032	0	True				
ANR	3624046	ParameterType	int		3624032	0					
ANR	3624047	Identifier	c		3624032	1					
ANR	3624048	CFGEntryNode	ENTRY		3624032		True				
ANR	3624049	CFGExitNode	EXIT		3624032		True				
ANR	3624050	Symbol	c		3624032						
ANR	3624051	Symbol	ft_isalnum		3624032						
ANR	3624052	Function	fmix32	279:2:7360:7519							
ANR	3624053	FunctionDef	fmix32 (FT_UInt32 h)		3624052	0					
ANR	3624054	CompoundStatement		281:2:7404:7519	3624052	0					
ANR	3624055	ExpressionStatement	h ^= h >> 16	282:4:7410:7422	3624052	0	True				
ANR	3624056	AssignmentExpression	h ^= h >> 16		3624052	0		^=			
ANR	3624057	Identifier	h		3624052	0					
ANR	3624058	ShiftExpression	h >> 16		3624052	1		>>			
ANR	3624059	Identifier	h		3624052	0					
ANR	3624060	PrimaryExpression	16		3624052	1					
ANR	3624061	ExpressionStatement	h *= 0x85ebca6b	283:4:7428:7443	3624052	1	True				
ANR	3624062	AssignmentExpression	h *= 0x85ebca6b		3624052	0		*=			
ANR	3624063	Identifier	h		3624052	0					
ANR	3624064	PrimaryExpression	0x85ebca6b		3624052	1					
ANR	3624065	ExpressionStatement	h ^= h >> 13	284:4:7449:7461	3624052	2	True				
ANR	3624066	AssignmentExpression	h ^= h >> 13		3624052	0		^=			
ANR	3624067	Identifier	h		3624052	0					
ANR	3624068	ShiftExpression	h >> 13		3624052	1		>>			
ANR	3624069	Identifier	h		3624052	0					
ANR	3624070	PrimaryExpression	13		3624052	1					
ANR	3624071	ExpressionStatement	h *= 0xc2b2ae35	285:4:7467:7482	3624052	3	True				
ANR	3624072	AssignmentExpression	h *= 0xc2b2ae35		3624052	0		*=			
ANR	3624073	Identifier	h		3624052	0					
ANR	3624074	PrimaryExpression	0xc2b2ae35		3624052	1					
ANR	3624075	ExpressionStatement	h ^= h >> 16	286:4:7488:7500	3624052	4	True				
ANR	3624076	AssignmentExpression	h ^= h >> 16		3624052	0		^=			
ANR	3624077	Identifier	h		3624052	0					
ANR	3624078	ShiftExpression	h >> 16		3624052	1		>>			
ANR	3624079	Identifier	h		3624052	0					
ANR	3624080	PrimaryExpression	16		3624052	1					
ANR	3624081	ReturnStatement	return h ;	288:4:7507:7515	3624052	5	True				
ANR	3624082	Identifier	h		3624052	0					
ANR	3624083	ReturnType	static FT_UInt32		3624052	1					
ANR	3624084	Identifier	fmix32		3624052	2					
ANR	3624085	ParameterList	FT_UInt32 h		3624052	3					
ANR	3624086	Parameter	FT_UInt32 h	280:10:7387:7398	3624052	0	True				
ANR	3624087	ParameterType	FT_UInt32		3624052	0					
ANR	3624088	Identifier	h		3624052	1					
ANR	3624089	CFGEntryNode	ENTRY		3624052		True				
ANR	3624090	CFGExitNode	EXIT		3624052		True				
ANR	3624091	Symbol	h		3624052						
ANR	3624092	Function	murmur_hash_3_128	292:2:7525:10837							
ANR	3624093	FunctionDef	"murmur_hash_3_128 (const void * key , const unsigned int len , FT_UInt32 seed , void * out)"		3624092	0					
ANR	3624094	CompoundStatement		297:2:7725:10837	3624092	0					
ANR	3624095	IdentifierDeclStatement	const FT_Byte * data = ( const FT_Byte * ) key ;	298:4:7731:7776	3624092	0	True				
ANR	3624096	IdentifierDecl	* data = ( const FT_Byte * ) key		3624092	0					
ANR	3624097	IdentifierDeclType	const FT_Byte *		3624092	0					
ANR	3624098	Identifier	data		3624092	1					
ANR	3624099	AssignmentExpression	* data = ( const FT_Byte * ) key		3624092	2		=			
ANR	3624100	Identifier	data		3624092	0					
ANR	3624101	CastExpression	( const FT_Byte * ) key		3624092	1					
ANR	3624102	CastTarget	const FT_Byte *		3624092	0					
ANR	3624103	Identifier	key		3624092	1					
ANR	3624104	IdentifierDeclStatement	const int nblocks = ( int ) len / 16 ;	299:4:7782:7821	3624092	1	True				
ANR	3624105	IdentifierDecl	nblocks = ( int ) len / 16		3624092	0					
ANR	3624106	IdentifierDeclType	const int		3624092	0					
ANR	3624107	Identifier	nblocks		3624092	1					
ANR	3624108	AssignmentExpression	nblocks = ( int ) len / 16		3624092	2		=			
ANR	3624109	Identifier	nblocks		3624092	0					
ANR	3624110	MultiplicativeExpression	( int ) len / 16		3624092	1		/			
ANR	3624111	CastExpression	( int ) len		3624092	0					
ANR	3624112	CastTarget	int		3624092	0					
ANR	3624113	Identifier	len		3624092	1					
ANR	3624114	PrimaryExpression	16		3624092	1					
ANR	3624115	IdentifierDeclStatement	FT_UInt32 h1 = seed ;	301:4:7828:7848	3624092	2	True				
ANR	3624116	IdentifierDecl	h1 = seed		3624092	0					
ANR	3624117	IdentifierDeclType	FT_UInt32		3624092	0					
ANR	3624118	Identifier	h1		3624092	1					
ANR	3624119	AssignmentExpression	h1 = seed		3624092	2		=			
ANR	3624120	Identifier	seed		3624092	0					
ANR	3624121	Identifier	seed		3624092	1					
ANR	3624122	IdentifierDeclStatement	FT_UInt32 h2 = seed ;	302:4:7854:7874	3624092	3	True				
ANR	3624123	IdentifierDecl	h2 = seed		3624092	0					
ANR	3624124	IdentifierDeclType	FT_UInt32		3624092	0					
ANR	3624125	Identifier	h2		3624092	1					
ANR	3624126	AssignmentExpression	h2 = seed		3624092	2		=			
ANR	3624127	Identifier	seed		3624092	0					
ANR	3624128	Identifier	seed		3624092	1					
ANR	3624129	IdentifierDeclStatement	FT_UInt32 h3 = seed ;	303:4:7880:7900	3624092	4	True				
ANR	3624130	IdentifierDecl	h3 = seed		3624092	0					
ANR	3624131	IdentifierDeclType	FT_UInt32		3624092	0					
ANR	3624132	Identifier	h3		3624092	1					
ANR	3624133	AssignmentExpression	h3 = seed		3624092	2		=			
ANR	3624134	Identifier	seed		3624092	0					
ANR	3624135	Identifier	seed		3624092	1					
ANR	3624136	IdentifierDeclStatement	FT_UInt32 h4 = seed ;	304:4:7906:7926	3624092	5	True				
ANR	3624137	IdentifierDecl	h4 = seed		3624092	0					
ANR	3624138	IdentifierDeclType	FT_UInt32		3624092	0					
ANR	3624139	Identifier	h4		3624092	1					
ANR	3624140	AssignmentExpression	h4 = seed		3624092	2		=			
ANR	3624141	Identifier	seed		3624092	0					
ANR	3624142	Identifier	seed		3624092	1					
ANR	3624143	IdentifierDeclStatement	const FT_UInt32 c1 = 0x239b961b ;	306:4:7933:7965	3624092	6	True				
ANR	3624144	IdentifierDecl	c1 = 0x239b961b		3624092	0					
ANR	3624145	IdentifierDeclType	const FT_UInt32		3624092	0					
ANR	3624146	Identifier	c1		3624092	1					
ANR	3624147	AssignmentExpression	c1 = 0x239b961b		3624092	2		=			
ANR	3624148	Identifier	c1		3624092	0					
ANR	3624149	PrimaryExpression	0x239b961b		3624092	1					
ANR	3624150	IdentifierDeclStatement	const FT_UInt32 c2 = 0xab0e9789 ;	307:4:7971:8003	3624092	7	True				
ANR	3624151	IdentifierDecl	c2 = 0xab0e9789		3624092	0					
ANR	3624152	IdentifierDeclType	const FT_UInt32		3624092	0					
ANR	3624153	Identifier	c2		3624092	1					
ANR	3624154	AssignmentExpression	c2 = 0xab0e9789		3624092	2		=			
ANR	3624155	Identifier	c2		3624092	0					
ANR	3624156	PrimaryExpression	0xab0e9789		3624092	1					
ANR	3624157	IdentifierDeclStatement	const FT_UInt32 c3 = 0x38b34ae5 ;	308:4:8009:8041	3624092	8	True				
ANR	3624158	IdentifierDecl	c3 = 0x38b34ae5		3624092	0					
ANR	3624159	IdentifierDeclType	const FT_UInt32		3624092	0					
ANR	3624160	Identifier	c3		3624092	1					
ANR	3624161	AssignmentExpression	c3 = 0x38b34ae5		3624092	2		=			
ANR	3624162	Identifier	c3		3624092	0					
ANR	3624163	PrimaryExpression	0x38b34ae5		3624092	1					
ANR	3624164	IdentifierDeclStatement	const FT_UInt32 c4 = 0xa1e38b93 ;	309:4:8047:8079	3624092	9	True				
ANR	3624165	IdentifierDecl	c4 = 0xa1e38b93		3624092	0					
ANR	3624166	IdentifierDeclType	const FT_UInt32		3624092	0					
ANR	3624167	Identifier	c4		3624092	1					
ANR	3624168	AssignmentExpression	c4 = 0xa1e38b93		3624092	2		=			
ANR	3624169	Identifier	c4		3624092	0					
ANR	3624170	PrimaryExpression	0xa1e38b93		3624092	1					
ANR	3624171	IdentifierDeclStatement	const FT_UInt32 * blocks = ( const FT_UInt32 * ) ( data + nblocks * 16 ) ;	311:4:8086:8154	3624092	10	True				
ANR	3624172	IdentifierDecl	* blocks = ( const FT_UInt32 * ) ( data + nblocks * 16 )		3624092	0					
ANR	3624173	IdentifierDeclType	const FT_UInt32 *		3624092	0					
ANR	3624174	Identifier	blocks		3624092	1					
ANR	3624175	AssignmentExpression	* blocks = ( const FT_UInt32 * ) ( data + nblocks * 16 )		3624092	2		=			
ANR	3624176	Identifier	blocks		3624092	0					
ANR	3624177	CastExpression	( const FT_UInt32 * ) ( data + nblocks * 16 )		3624092	1					
ANR	3624178	CastTarget	const FT_UInt32 *		3624092	0					
ANR	3624179	AdditiveExpression	data + nblocks * 16		3624092	1		+			
ANR	3624180	Identifier	data		3624092	0					
ANR	3624181	MultiplicativeExpression	nblocks * 16		3624092	1		*			
ANR	3624182	Identifier	nblocks		3624092	0					
ANR	3624183	PrimaryExpression	16		3624092	1					
ANR	3624184	IdentifierDeclStatement	int i ;	313:4:8161:8167	3624092	11	True				
ANR	3624185	IdentifierDecl	i		3624092	0					
ANR	3624186	IdentifierDeclType	int		3624092	0					
ANR	3624187	Identifier	i		3624092	1					
ANR	3624188	ForStatement	for ( i = - nblocks ; i ; i ++ )		3624092	12					
ANR	3624189	ForInit	i = - nblocks ;	316:9:8180:8192	3624092	0	True				
ANR	3624190	AssignmentExpression	i = - nblocks		3624092	0		=			
ANR	3624191	Identifier	i		3624092	0					
ANR	3624192	UnaryOperationExpression	- nblocks		3624092	1					
ANR	3624193	UnaryOperator	-		3624092	0					
ANR	3624194	Identifier	nblocks		3624092	1					
ANR	3624195	Condition	i	316:23:8194:8194	3624092	1	True				
ANR	3624196	Identifier	i		3624092	0					
ANR	3624197	PostIncDecOperationExpression	i ++	316:26:8197:8199	3624092	2	True				
ANR	3624198	Identifier	i		3624092	0					
ANR	3624199	IncDec	++		3624092	1					
ANR	3624200	CompoundStatement		25:6:612:645	3624092	3					
ANR	3624201	IdentifierDeclStatement	FT_UInt32 k1 = blocks [ i * 4 + 0 ] ;	318:6:8215:8248	3624092	0	True				
ANR	3624202	IdentifierDecl	k1 = blocks [ i * 4 + 0 ]		3624092	0					
ANR	3624203	IdentifierDeclType	FT_UInt32		3624092	0					
ANR	3624204	Identifier	k1		3624092	1					
ANR	3624205	AssignmentExpression	k1 = blocks [ i * 4 + 0 ]		3624092	2		=			
ANR	3624206	Identifier	k1		3624092	0					
ANR	3624207	ArrayIndexing	blocks [ i * 4 + 0 ]		3624092	1					
ANR	3624208	Identifier	blocks		3624092	0					
ANR	3624209	AdditiveExpression	i * 4 + 0		3624092	1		+			
ANR	3624210	MultiplicativeExpression	i * 4		3624092	0		*			
ANR	3624211	Identifier	i		3624092	0					
ANR	3624212	PrimaryExpression	4		3624092	1					
ANR	3624213	PrimaryExpression	0		3624092	1					
ANR	3624214	IdentifierDeclStatement	FT_UInt32 k2 = blocks [ i * 4 + 1 ] ;	319:6:8256:8289	3624092	1	True				
ANR	3624215	IdentifierDecl	k2 = blocks [ i * 4 + 1 ]		3624092	0					
ANR	3624216	IdentifierDeclType	FT_UInt32		3624092	0					
ANR	3624217	Identifier	k2		3624092	1					
ANR	3624218	AssignmentExpression	k2 = blocks [ i * 4 + 1 ]		3624092	2		=			
ANR	3624219	Identifier	k2		3624092	0					
ANR	3624220	ArrayIndexing	blocks [ i * 4 + 1 ]		3624092	1					
ANR	3624221	Identifier	blocks		3624092	0					
ANR	3624222	AdditiveExpression	i * 4 + 1		3624092	1		+			
ANR	3624223	MultiplicativeExpression	i * 4		3624092	0		*			
ANR	3624224	Identifier	i		3624092	0					
ANR	3624225	PrimaryExpression	4		3624092	1					
ANR	3624226	PrimaryExpression	1		3624092	1					
ANR	3624227	IdentifierDeclStatement	FT_UInt32 k3 = blocks [ i * 4 + 2 ] ;	320:6:8297:8330	3624092	2	True				
ANR	3624228	IdentifierDecl	k3 = blocks [ i * 4 + 2 ]		3624092	0					
ANR	3624229	IdentifierDeclType	FT_UInt32		3624092	0					
ANR	3624230	Identifier	k3		3624092	1					
ANR	3624231	AssignmentExpression	k3 = blocks [ i * 4 + 2 ]		3624092	2		=			
ANR	3624232	Identifier	k3		3624092	0					
ANR	3624233	ArrayIndexing	blocks [ i * 4 + 2 ]		3624092	1					
ANR	3624234	Identifier	blocks		3624092	0					
ANR	3624235	AdditiveExpression	i * 4 + 2		3624092	1		+			
ANR	3624236	MultiplicativeExpression	i * 4		3624092	0		*			
ANR	3624237	Identifier	i		3624092	0					
ANR	3624238	PrimaryExpression	4		3624092	1					
ANR	3624239	PrimaryExpression	2		3624092	1					
ANR	3624240	IdentifierDeclStatement	FT_UInt32 k4 = blocks [ i * 4 + 3 ] ;	321:6:8338:8371	3624092	3	True				
ANR	3624241	IdentifierDecl	k4 = blocks [ i * 4 + 3 ]		3624092	0					
ANR	3624242	IdentifierDeclType	FT_UInt32		3624092	0					
ANR	3624243	Identifier	k4		3624092	1					
ANR	3624244	AssignmentExpression	k4 = blocks [ i * 4 + 3 ]		3624092	2		=			
ANR	3624245	Identifier	k4		3624092	0					
ANR	3624246	ArrayIndexing	blocks [ i * 4 + 3 ]		3624092	1					
ANR	3624247	Identifier	blocks		3624092	0					
ANR	3624248	AdditiveExpression	i * 4 + 3		3624092	1		+			
ANR	3624249	MultiplicativeExpression	i * 4		3624092	0		*			
ANR	3624250	Identifier	i		3624092	0					
ANR	3624251	PrimaryExpression	4		3624092	1					
ANR	3624252	PrimaryExpression	3		3624092	1					
ANR	3624253	ExpressionStatement	k1 *= c1	324:6:8381:8389	3624092	4	True				
ANR	3624254	AssignmentExpression	k1 *= c1		3624092	0		*=			
ANR	3624255	Identifier	k1		3624092	0					
ANR	3624256	Identifier	c1		3624092	1					
ANR	3624257	ExpressionStatement	"k1 = ROTL32 ( k1 , 15 )"	325:6:8397:8419	3624092	5	True				
ANR	3624258	AssignmentExpression	"k1 = ROTL32 ( k1 , 15 )"		3624092	0		=			
ANR	3624259	Identifier	k1		3624092	0					
ANR	3624260	CallExpression	"ROTL32 ( k1 , 15 )"		3624092	1					
ANR	3624261	Callee	ROTL32		3624092	0					
ANR	3624262	Identifier	ROTL32		3624092	0					
ANR	3624263	ArgumentList	k1		3624092	1					
ANR	3624264	Argument	k1		3624092	0					
ANR	3624265	Identifier	k1		3624092	0					
ANR	3624266	Argument	15		3624092	1					
ANR	3624267	PrimaryExpression	15		3624092	0					
ANR	3624268	ExpressionStatement	k1 *= c2	326:6:8427:8435	3624092	6	True				
ANR	3624269	AssignmentExpression	k1 *= c2		3624092	0		*=			
ANR	3624270	Identifier	k1		3624092	0					
ANR	3624271	Identifier	c2		3624092	1					
ANR	3624272	ExpressionStatement	h1 ^= k1	327:6:8443:8451	3624092	7	True				
ANR	3624273	AssignmentExpression	h1 ^= k1		3624092	0		^=			
ANR	3624274	Identifier	h1		3624092	0					
ANR	3624275	Identifier	k1		3624092	1					
ANR	3624276	ExpressionStatement	"h1 = ROTL32 ( h1 , 19 )"	329:6:8460:8482	3624092	8	True				
ANR	3624277	AssignmentExpression	"h1 = ROTL32 ( h1 , 19 )"		3624092	0		=			
ANR	3624278	Identifier	h1		3624092	0					
ANR	3624279	CallExpression	"ROTL32 ( h1 , 19 )"		3624092	1					
ANR	3624280	Callee	ROTL32		3624092	0					
ANR	3624281	Identifier	ROTL32		3624092	0					
ANR	3624282	ArgumentList	h1		3624092	1					
ANR	3624283	Argument	h1		3624092	0					
ANR	3624284	Identifier	h1		3624092	0					
ANR	3624285	Argument	19		3624092	1					
ANR	3624286	PrimaryExpression	19		3624092	0					
ANR	3624287	ExpressionStatement	h1 += h2	330:6:8490:8498	3624092	9	True				
ANR	3624288	AssignmentExpression	h1 += h2		3624092	0		+=			
ANR	3624289	Identifier	h1		3624092	0					
ANR	3624290	Identifier	h2		3624092	1					
ANR	3624291	ExpressionStatement	h1 = h1 * 5 + 0x561ccd1b	331:6:8506:8531	3624092	10	True				
ANR	3624292	AssignmentExpression	h1 = h1 * 5 + 0x561ccd1b		3624092	0		=			
ANR	3624293	Identifier	h1		3624092	0					
ANR	3624294	AdditiveExpression	h1 * 5 + 0x561ccd1b		3624092	1		+			
ANR	3624295	MultiplicativeExpression	h1 * 5		3624092	0		*			
ANR	3624296	Identifier	h1		3624092	0					
ANR	3624297	PrimaryExpression	5		3624092	1					
ANR	3624298	PrimaryExpression	0x561ccd1b		3624092	1					
ANR	3624299	ExpressionStatement	k2 *= c2	333:6:8540:8548	3624092	11	True				
ANR	3624300	AssignmentExpression	k2 *= c2		3624092	0		*=			
ANR	3624301	Identifier	k2		3624092	0					
ANR	3624302	Identifier	c2		3624092	1					
ANR	3624303	ExpressionStatement	"k2 = ROTL32 ( k2 , 16 )"	334:6:8556:8578	3624092	12	True				
ANR	3624304	AssignmentExpression	"k2 = ROTL32 ( k2 , 16 )"		3624092	0		=			
ANR	3624305	Identifier	k2		3624092	0					
ANR	3624306	CallExpression	"ROTL32 ( k2 , 16 )"		3624092	1					
ANR	3624307	Callee	ROTL32		3624092	0					
ANR	3624308	Identifier	ROTL32		3624092	0					
ANR	3624309	ArgumentList	k2		3624092	1					
ANR	3624310	Argument	k2		3624092	0					
ANR	3624311	Identifier	k2		3624092	0					
ANR	3624312	Argument	16		3624092	1					
ANR	3624313	PrimaryExpression	16		3624092	0					
ANR	3624314	ExpressionStatement	k2 *= c3	335:6:8586:8594	3624092	13	True				
ANR	3624315	AssignmentExpression	k2 *= c3		3624092	0		*=			
ANR	3624316	Identifier	k2		3624092	0					
ANR	3624317	Identifier	c3		3624092	1					
ANR	3624318	ExpressionStatement	h2 ^= k2	336:6:8602:8610	3624092	14	True				
ANR	3624319	AssignmentExpression	h2 ^= k2		3624092	0		^=			
ANR	3624320	Identifier	h2		3624092	0					
ANR	3624321	Identifier	k2		3624092	1					
ANR	3624322	ExpressionStatement	"h2 = ROTL32 ( h2 , 17 )"	338:6:8619:8641	3624092	15	True				
ANR	3624323	AssignmentExpression	"h2 = ROTL32 ( h2 , 17 )"		3624092	0		=			
ANR	3624324	Identifier	h2		3624092	0					
ANR	3624325	CallExpression	"ROTL32 ( h2 , 17 )"		3624092	1					
ANR	3624326	Callee	ROTL32		3624092	0					
ANR	3624327	Identifier	ROTL32		3624092	0					
ANR	3624328	ArgumentList	h2		3624092	1					
ANR	3624329	Argument	h2		3624092	0					
ANR	3624330	Identifier	h2		3624092	0					
ANR	3624331	Argument	17		3624092	1					
ANR	3624332	PrimaryExpression	17		3624092	0					
ANR	3624333	ExpressionStatement	h2 += h3	339:6:8649:8657	3624092	16	True				
ANR	3624334	AssignmentExpression	h2 += h3		3624092	0		+=			
ANR	3624335	Identifier	h2		3624092	0					
ANR	3624336	Identifier	h3		3624092	1					
ANR	3624337	ExpressionStatement	h2 = h2 * 5 + 0x0bcaa747	340:6:8665:8690	3624092	17	True				
ANR	3624338	AssignmentExpression	h2 = h2 * 5 + 0x0bcaa747		3624092	0		=			
ANR	3624339	Identifier	h2		3624092	0					
ANR	3624340	AdditiveExpression	h2 * 5 + 0x0bcaa747		3624092	1		+			
ANR	3624341	MultiplicativeExpression	h2 * 5		3624092	0		*			
ANR	3624342	Identifier	h2		3624092	0					
ANR	3624343	PrimaryExpression	5		3624092	1					
ANR	3624344	PrimaryExpression	0x0bcaa747		3624092	1					
ANR	3624345	ExpressionStatement	k3 *= c3	342:6:8699:8707	3624092	18	True				
ANR	3624346	AssignmentExpression	k3 *= c3		3624092	0		*=			
ANR	3624347	Identifier	k3		3624092	0					
ANR	3624348	Identifier	c3		3624092	1					
ANR	3624349	ExpressionStatement	"k3 = ROTL32 ( k3 , 17 )"	343:6:8715:8737	3624092	19	True				
ANR	3624350	AssignmentExpression	"k3 = ROTL32 ( k3 , 17 )"		3624092	0		=			
ANR	3624351	Identifier	k3		3624092	0					
ANR	3624352	CallExpression	"ROTL32 ( k3 , 17 )"		3624092	1					
ANR	3624353	Callee	ROTL32		3624092	0					
ANR	3624354	Identifier	ROTL32		3624092	0					
ANR	3624355	ArgumentList	k3		3624092	1					
ANR	3624356	Argument	k3		3624092	0					
ANR	3624357	Identifier	k3		3624092	0					
ANR	3624358	Argument	17		3624092	1					
ANR	3624359	PrimaryExpression	17		3624092	0					
ANR	3624360	ExpressionStatement	k3 *= c4	344:6:8745:8753	3624092	20	True				
ANR	3624361	AssignmentExpression	k3 *= c4		3624092	0		*=			
ANR	3624362	Identifier	k3		3624092	0					
ANR	3624363	Identifier	c4		3624092	1					
ANR	3624364	ExpressionStatement	h3 ^= k3	345:6:8761:8769	3624092	21	True				
ANR	3624365	AssignmentExpression	h3 ^= k3		3624092	0		^=			
ANR	3624366	Identifier	h3		3624092	0					
ANR	3624367	Identifier	k3		3624092	1					
ANR	3624368	ExpressionStatement	"h3 = ROTL32 ( h3 , 15 )"	347:6:8778:8800	3624092	22	True				
ANR	3624369	AssignmentExpression	"h3 = ROTL32 ( h3 , 15 )"		3624092	0		=			
ANR	3624370	Identifier	h3		3624092	0					
ANR	3624371	CallExpression	"ROTL32 ( h3 , 15 )"		3624092	1					
ANR	3624372	Callee	ROTL32		3624092	0					
ANR	3624373	Identifier	ROTL32		3624092	0					
ANR	3624374	ArgumentList	h3		3624092	1					
ANR	3624375	Argument	h3		3624092	0					
ANR	3624376	Identifier	h3		3624092	0					
ANR	3624377	Argument	15		3624092	1					
ANR	3624378	PrimaryExpression	15		3624092	0					
ANR	3624379	ExpressionStatement	h3 += h4	348:6:8808:8816	3624092	23	True				
ANR	3624380	AssignmentExpression	h3 += h4		3624092	0		+=			
ANR	3624381	Identifier	h3		3624092	0					
ANR	3624382	Identifier	h4		3624092	1					
ANR	3624383	ExpressionStatement	h3 = h3 * 5 + 0x96cd1c35	349:6:8824:8849	3624092	24	True				
ANR	3624384	AssignmentExpression	h3 = h3 * 5 + 0x96cd1c35		3624092	0		=			
ANR	3624385	Identifier	h3		3624092	0					
ANR	3624386	AdditiveExpression	h3 * 5 + 0x96cd1c35		3624092	1		+			
ANR	3624387	MultiplicativeExpression	h3 * 5		3624092	0		*			
ANR	3624388	Identifier	h3		3624092	0					
ANR	3624389	PrimaryExpression	5		3624092	1					
ANR	3624390	PrimaryExpression	0x96cd1c35		3624092	1					
ANR	3624391	ExpressionStatement	k4 *= c4	351:6:8858:8866	3624092	25	True				
ANR	3624392	AssignmentExpression	k4 *= c4		3624092	0		*=			
ANR	3624393	Identifier	k4		3624092	0					
ANR	3624394	Identifier	c4		3624092	1					
ANR	3624395	ExpressionStatement	"k4 = ROTL32 ( k4 , 18 )"	352:6:8874:8896	3624092	26	True				
ANR	3624396	AssignmentExpression	"k4 = ROTL32 ( k4 , 18 )"		3624092	0		=			
ANR	3624397	Identifier	k4		3624092	0					
ANR	3624398	CallExpression	"ROTL32 ( k4 , 18 )"		3624092	1					
ANR	3624399	Callee	ROTL32		3624092	0					
ANR	3624400	Identifier	ROTL32		3624092	0					
ANR	3624401	ArgumentList	k4		3624092	1					
ANR	3624402	Argument	k4		3624092	0					
ANR	3624403	Identifier	k4		3624092	0					
ANR	3624404	Argument	18		3624092	1					
ANR	3624405	PrimaryExpression	18		3624092	0					
ANR	3624406	ExpressionStatement	k4 *= c1	353:6:8904:8912	3624092	27	True				
ANR	3624407	AssignmentExpression	k4 *= c1		3624092	0		*=			
ANR	3624408	Identifier	k4		3624092	0					
ANR	3624409	Identifier	c1		3624092	1					
ANR	3624410	ExpressionStatement	h4 ^= k4	354:6:8920:8928	3624092	28	True				
ANR	3624411	AssignmentExpression	h4 ^= k4		3624092	0		^=			
ANR	3624412	Identifier	h4		3624092	0					
ANR	3624413	Identifier	k4		3624092	1					
ANR	3624414	ExpressionStatement	"h4 = ROTL32 ( h4 , 13 )"	356:6:8937:8959	3624092	29	True				
ANR	3624415	AssignmentExpression	"h4 = ROTL32 ( h4 , 13 )"		3624092	0		=			
ANR	3624416	Identifier	h4		3624092	0					
ANR	3624417	CallExpression	"ROTL32 ( h4 , 13 )"		3624092	1					
ANR	3624418	Callee	ROTL32		3624092	0					
ANR	3624419	Identifier	ROTL32		3624092	0					
ANR	3624420	ArgumentList	h4		3624092	1					
ANR	3624421	Argument	h4		3624092	0					
ANR	3624422	Identifier	h4		3624092	0					
ANR	3624423	Argument	13		3624092	1					
ANR	3624424	PrimaryExpression	13		3624092	0					
ANR	3624425	ExpressionStatement	h4 += h1	357:6:8967:8975	3624092	30	True				
ANR	3624426	AssignmentExpression	h4 += h1		3624092	0		+=			
ANR	3624427	Identifier	h4		3624092	0					
ANR	3624428	Identifier	h1		3624092	1					
ANR	3624429	ExpressionStatement	h4 = h4 * 5 + 0x32ac3b17	358:6:8983:9008	3624092	31	True				
ANR	3624430	AssignmentExpression	h4 = h4 * 5 + 0x32ac3b17		3624092	0		=			
ANR	3624431	Identifier	h4		3624092	0					
ANR	3624432	AdditiveExpression	h4 * 5 + 0x32ac3b17		3624092	1		+			
ANR	3624433	MultiplicativeExpression	h4 * 5		3624092	0		*			
ANR	3624434	Identifier	h4		3624092	0					
ANR	3624435	PrimaryExpression	5		3624092	1					
ANR	3624436	PrimaryExpression	0x32ac3b17		3624092	1					
ANR	3624437	CompoundStatement		71:6:1449:1466	3624092	13					
ANR	3624438	IdentifierDeclStatement	const FT_Byte * tail = ( const FT_Byte * ) ( data + nblocks * 16 ) ;	362:6:9029:9091	3624092	0	True				
ANR	3624439	IdentifierDecl	* tail = ( const FT_Byte * ) ( data + nblocks * 16 )		3624092	0					
ANR	3624440	IdentifierDeclType	const FT_Byte *		3624092	0					
ANR	3624441	Identifier	tail		3624092	1					
ANR	3624442	AssignmentExpression	* tail = ( const FT_Byte * ) ( data + nblocks * 16 )		3624092	2		=			
ANR	3624443	Identifier	tail		3624092	0					
ANR	3624444	CastExpression	( const FT_Byte * ) ( data + nblocks * 16 )		3624092	1					
ANR	3624445	CastTarget	const FT_Byte *		3624092	0					
ANR	3624446	AdditiveExpression	data + nblocks * 16		3624092	1		+			
ANR	3624447	Identifier	data		3624092	0					
ANR	3624448	MultiplicativeExpression	nblocks * 16		3624092	1		*			
ANR	3624449	Identifier	nblocks		3624092	0					
ANR	3624450	PrimaryExpression	16		3624092	1					
ANR	3624451	IdentifierDeclStatement	FT_UInt32 k1 = 0 ;	364:6:9100:9117	3624092	1	True				
ANR	3624452	IdentifierDecl	k1 = 0		3624092	0					
ANR	3624453	IdentifierDeclType	FT_UInt32		3624092	0					
ANR	3624454	Identifier	k1		3624092	1					
ANR	3624455	AssignmentExpression	k1 = 0		3624092	2		=			
ANR	3624456	Identifier	k1		3624092	0					
ANR	3624457	PrimaryExpression	0		3624092	1					
ANR	3624458	IdentifierDeclStatement	FT_UInt32 k2 = 0 ;	365:6:9125:9142	3624092	2	True				
ANR	3624459	IdentifierDecl	k2 = 0		3624092	0					
ANR	3624460	IdentifierDeclType	FT_UInt32		3624092	0					
ANR	3624461	Identifier	k2		3624092	1					
ANR	3624462	AssignmentExpression	k2 = 0		3624092	2		=			
ANR	3624463	Identifier	k2		3624092	0					
ANR	3624464	PrimaryExpression	0		3624092	1					
ANR	3624465	IdentifierDeclStatement	FT_UInt32 k3 = 0 ;	366:6:9150:9167	3624092	3	True				
ANR	3624466	IdentifierDecl	k3 = 0		3624092	0					
ANR	3624467	IdentifierDeclType	FT_UInt32		3624092	0					
ANR	3624468	Identifier	k3		3624092	1					
ANR	3624469	AssignmentExpression	k3 = 0		3624092	2		=			
ANR	3624470	Identifier	k3		3624092	0					
ANR	3624471	PrimaryExpression	0		3624092	1					
ANR	3624472	IdentifierDeclStatement	FT_UInt32 k4 = 0 ;	367:6:9175:9192	3624092	4	True				
ANR	3624473	IdentifierDecl	k4 = 0		3624092	0					
ANR	3624474	IdentifierDeclType	FT_UInt32		3624092	0					
ANR	3624475	Identifier	k4		3624092	1					
ANR	3624476	AssignmentExpression	k4 = 0		3624092	2		=			
ANR	3624477	Identifier	k4		3624092	0					
ANR	3624478	PrimaryExpression	0		3624092	1					
ANR	3624479	SwitchStatement	switch ( len & 15 )		3624092	5					
ANR	3624480	Condition	len & 15	370:15:9211:9218	3624092	0	True				
ANR	3624481	BitAndExpression	len & 15		3624092	0		&			
ANR	3624482	Identifier	len		3624092	0					
ANR	3624483	PrimaryExpression	15		3624092	1					
ANR	3624484	CompoundStatement		75:6:1502:1502	3624092	1					
ANR	3624485	Label	case 15 :	372:6:9236:9243	3624092	0	True				
ANR	3624486	ExpressionStatement	k4 ^= ( FT_UInt32 ) tail [ 14 ] << 16	373:8:9253:9284	3624092	1	True				
ANR	3624487	AssignmentExpression	k4 ^= ( FT_UInt32 ) tail [ 14 ] << 16		3624092	0		^=			
ANR	3624488	Identifier	k4		3624092	0					
ANR	3624489	ShiftExpression	( FT_UInt32 ) tail [ 14 ] << 16		3624092	1		<<			
ANR	3624490	CastExpression	( FT_UInt32 ) tail [ 14 ]		3624092	0					
ANR	3624491	CastTarget	FT_UInt32		3624092	0					
ANR	3624492	ArrayIndexing	tail [ 14 ]		3624092	1					
ANR	3624493	Identifier	tail		3624092	0					
ANR	3624494	PrimaryExpression	14		3624092	1					
ANR	3624495	PrimaryExpression	16		3624092	1					
ANR	3624496	Label	case 14 :	374:6:9292:9299	3624092	2	True				
ANR	3624497	ExpressionStatement	k4 ^= ( FT_UInt32 ) tail [ 13 ] << 8	375:8:9309:9339	3624092	3	True				
ANR	3624498	AssignmentExpression	k4 ^= ( FT_UInt32 ) tail [ 13 ] << 8		3624092	0		^=			
ANR	3624499	Identifier	k4		3624092	0					
ANR	3624500	ShiftExpression	( FT_UInt32 ) tail [ 13 ] << 8		3624092	1		<<			
ANR	3624501	CastExpression	( FT_UInt32 ) tail [ 13 ]		3624092	0					
ANR	3624502	CastTarget	FT_UInt32		3624092	0					
ANR	3624503	ArrayIndexing	tail [ 13 ]		3624092	1					
ANR	3624504	Identifier	tail		3624092	0					
ANR	3624505	PrimaryExpression	13		3624092	1					
ANR	3624506	PrimaryExpression	8		3624092	1					
ANR	3624507	Label	case 13 :	376:6:9347:9354	3624092	4	True				
ANR	3624508	ExpressionStatement	k4 ^= ( FT_UInt32 ) tail [ 12 ]	377:8:9364:9389	3624092	5	True				
ANR	3624509	AssignmentExpression	k4 ^= ( FT_UInt32 ) tail [ 12 ]		3624092	0		^=			
ANR	3624510	Identifier	k4		3624092	0					
ANR	3624511	CastExpression	( FT_UInt32 ) tail [ 12 ]		3624092	1					
ANR	3624512	CastTarget	FT_UInt32		3624092	0					
ANR	3624513	ArrayIndexing	tail [ 12 ]		3624092	1					
ANR	3624514	Identifier	tail		3624092	0					
ANR	3624515	PrimaryExpression	12		3624092	1					
ANR	3624516	ExpressionStatement	k4 *= c4	378:8:9399:9407	3624092	6	True				
ANR	3624517	AssignmentExpression	k4 *= c4		3624092	0		*=			
ANR	3624518	Identifier	k4		3624092	0					
ANR	3624519	Identifier	c4		3624092	1					
ANR	3624520	ExpressionStatement	"k4 = ROTL32 ( k4 , 18 )"	379:8:9417:9439	3624092	7	True				
ANR	3624521	AssignmentExpression	"k4 = ROTL32 ( k4 , 18 )"		3624092	0		=			
ANR	3624522	Identifier	k4		3624092	0					
ANR	3624523	CallExpression	"ROTL32 ( k4 , 18 )"		3624092	1					
ANR	3624524	Callee	ROTL32		3624092	0					
ANR	3624525	Identifier	ROTL32		3624092	0					
ANR	3624526	ArgumentList	k4		3624092	1					
ANR	3624527	Argument	k4		3624092	0					
ANR	3624528	Identifier	k4		3624092	0					
ANR	3624529	Argument	18		3624092	1					
ANR	3624530	PrimaryExpression	18		3624092	0					
ANR	3624531	ExpressionStatement	k4 *= c1	380:8:9449:9457	3624092	8	True				
ANR	3624532	AssignmentExpression	k4 *= c1		3624092	0		*=			
ANR	3624533	Identifier	k4		3624092	0					
ANR	3624534	Identifier	c1		3624092	1					
ANR	3624535	ExpressionStatement	h4 ^= k4	381:8:9467:9475	3624092	9	True				
ANR	3624536	AssignmentExpression	h4 ^= k4		3624092	0		^=			
ANR	3624537	Identifier	h4		3624092	0					
ANR	3624538	Identifier	k4		3624092	1					
ANR	3624539	Label	case 12 :	383:6:9484:9491	3624092	10	True				
ANR	3624540	ExpressionStatement	k3 ^= ( FT_UInt32 ) tail [ 11 ] << 24	384:8:9501:9532	3624092	11	True				
ANR	3624541	AssignmentExpression	k3 ^= ( FT_UInt32 ) tail [ 11 ] << 24		3624092	0		^=			
ANR	3624542	Identifier	k3		3624092	0					
ANR	3624543	ShiftExpression	( FT_UInt32 ) tail [ 11 ] << 24		3624092	1		<<			
ANR	3624544	CastExpression	( FT_UInt32 ) tail [ 11 ]		3624092	0					
ANR	3624545	CastTarget	FT_UInt32		3624092	0					
ANR	3624546	ArrayIndexing	tail [ 11 ]		3624092	1					
ANR	3624547	Identifier	tail		3624092	0					
ANR	3624548	PrimaryExpression	11		3624092	1					
ANR	3624549	PrimaryExpression	24		3624092	1					
ANR	3624550	Label	case 11 :	385:6:9540:9547	3624092	12	True				
ANR	3624551	ExpressionStatement	k3 ^= ( FT_UInt32 ) tail [ 10 ] << 16	386:8:9557:9588	3624092	13	True				
ANR	3624552	AssignmentExpression	k3 ^= ( FT_UInt32 ) tail [ 10 ] << 16		3624092	0		^=			
ANR	3624553	Identifier	k3		3624092	0					
ANR	3624554	ShiftExpression	( FT_UInt32 ) tail [ 10 ] << 16		3624092	1		<<			
ANR	3624555	CastExpression	( FT_UInt32 ) tail [ 10 ]		3624092	0					
ANR	3624556	CastTarget	FT_UInt32		3624092	0					
ANR	3624557	ArrayIndexing	tail [ 10 ]		3624092	1					
ANR	3624558	Identifier	tail		3624092	0					
ANR	3624559	PrimaryExpression	10		3624092	1					
ANR	3624560	PrimaryExpression	16		3624092	1					
ANR	3624561	Label	case 10 :	387:6:9596:9603	3624092	14	True				
ANR	3624562	ExpressionStatement	k3 ^= ( FT_UInt32 ) tail [ 9 ] << 8	388:8:9613:9642	3624092	15	True				
ANR	3624563	AssignmentExpression	k3 ^= ( FT_UInt32 ) tail [ 9 ] << 8		3624092	0		^=			
ANR	3624564	Identifier	k3		3624092	0					
ANR	3624565	ShiftExpression	( FT_UInt32 ) tail [ 9 ] << 8		3624092	1		<<			
ANR	3624566	CastExpression	( FT_UInt32 ) tail [ 9 ]		3624092	0					
ANR	3624567	CastTarget	FT_UInt32		3624092	0					
ANR	3624568	ArrayIndexing	tail [ 9 ]		3624092	1					
ANR	3624569	Identifier	tail		3624092	0					
ANR	3624570	PrimaryExpression	9		3624092	1					
ANR	3624571	PrimaryExpression	8		3624092	1					
ANR	3624572	Label	case 9 :	389:6:9650:9656	3624092	16	True				
ANR	3624573	ExpressionStatement	k3 ^= ( FT_UInt32 ) tail [ 8 ]	390:8:9666:9690	3624092	17	True				
ANR	3624574	AssignmentExpression	k3 ^= ( FT_UInt32 ) tail [ 8 ]		3624092	0		^=			
ANR	3624575	Identifier	k3		3624092	0					
ANR	3624576	CastExpression	( FT_UInt32 ) tail [ 8 ]		3624092	1					
ANR	3624577	CastTarget	FT_UInt32		3624092	0					
ANR	3624578	ArrayIndexing	tail [ 8 ]		3624092	1					
ANR	3624579	Identifier	tail		3624092	0					
ANR	3624580	PrimaryExpression	8		3624092	1					
ANR	3624581	ExpressionStatement	k3 *= c3	391:8:9700:9708	3624092	18	True				
ANR	3624582	AssignmentExpression	k3 *= c3		3624092	0		*=			
ANR	3624583	Identifier	k3		3624092	0					
ANR	3624584	Identifier	c3		3624092	1					
ANR	3624585	ExpressionStatement	"k3 = ROTL32 ( k3 , 17 )"	392:8:9718:9740	3624092	19	True				
ANR	3624586	AssignmentExpression	"k3 = ROTL32 ( k3 , 17 )"		3624092	0		=			
ANR	3624587	Identifier	k3		3624092	0					
ANR	3624588	CallExpression	"ROTL32 ( k3 , 17 )"		3624092	1					
ANR	3624589	Callee	ROTL32		3624092	0					
ANR	3624590	Identifier	ROTL32		3624092	0					
ANR	3624591	ArgumentList	k3		3624092	1					
ANR	3624592	Argument	k3		3624092	0					
ANR	3624593	Identifier	k3		3624092	0					
ANR	3624594	Argument	17		3624092	1					
ANR	3624595	PrimaryExpression	17		3624092	0					
ANR	3624596	ExpressionStatement	k3 *= c4	393:8:9750:9758	3624092	20	True				
ANR	3624597	AssignmentExpression	k3 *= c4		3624092	0		*=			
ANR	3624598	Identifier	k3		3624092	0					
ANR	3624599	Identifier	c4		3624092	1					
ANR	3624600	ExpressionStatement	h3 ^= k3	394:8:9768:9776	3624092	21	True				
ANR	3624601	AssignmentExpression	h3 ^= k3		3624092	0		^=			
ANR	3624602	Identifier	h3		3624092	0					
ANR	3624603	Identifier	k3		3624092	1					
ANR	3624604	Label	case 8 :	396:6:9785:9791	3624092	22	True				
ANR	3624605	ExpressionStatement	k2 ^= ( FT_UInt32 ) tail [ 7 ] << 24	397:8:9801:9831	3624092	23	True				
ANR	3624606	AssignmentExpression	k2 ^= ( FT_UInt32 ) tail [ 7 ] << 24		3624092	0		^=			
ANR	3624607	Identifier	k2		3624092	0					
ANR	3624608	ShiftExpression	( FT_UInt32 ) tail [ 7 ] << 24		3624092	1		<<			
ANR	3624609	CastExpression	( FT_UInt32 ) tail [ 7 ]		3624092	0					
ANR	3624610	CastTarget	FT_UInt32		3624092	0					
ANR	3624611	ArrayIndexing	tail [ 7 ]		3624092	1					
ANR	3624612	Identifier	tail		3624092	0					
ANR	3624613	PrimaryExpression	7		3624092	1					
ANR	3624614	PrimaryExpression	24		3624092	1					
ANR	3624615	Label	case 7 :	398:6:9839:9845	3624092	24	True				
ANR	3624616	ExpressionStatement	k2 ^= ( FT_UInt32 ) tail [ 6 ] << 16	399:8:9855:9885	3624092	25	True				
ANR	3624617	AssignmentExpression	k2 ^= ( FT_UInt32 ) tail [ 6 ] << 16		3624092	0		^=			
ANR	3624618	Identifier	k2		3624092	0					
ANR	3624619	ShiftExpression	( FT_UInt32 ) tail [ 6 ] << 16		3624092	1		<<			
ANR	3624620	CastExpression	( FT_UInt32 ) tail [ 6 ]		3624092	0					
ANR	3624621	CastTarget	FT_UInt32		3624092	0					
ANR	3624622	ArrayIndexing	tail [ 6 ]		3624092	1					
ANR	3624623	Identifier	tail		3624092	0					
ANR	3624624	PrimaryExpression	6		3624092	1					
ANR	3624625	PrimaryExpression	16		3624092	1					
ANR	3624626	Label	case 6 :	400:6:9893:9899	3624092	26	True				
ANR	3624627	ExpressionStatement	k2 ^= ( FT_UInt32 ) tail [ 5 ] << 8	401:8:9909:9938	3624092	27	True				
ANR	3624628	AssignmentExpression	k2 ^= ( FT_UInt32 ) tail [ 5 ] << 8		3624092	0		^=			
ANR	3624629	Identifier	k2		3624092	0					
ANR	3624630	ShiftExpression	( FT_UInt32 ) tail [ 5 ] << 8		3624092	1		<<			
ANR	3624631	CastExpression	( FT_UInt32 ) tail [ 5 ]		3624092	0					
ANR	3624632	CastTarget	FT_UInt32		3624092	0					
ANR	3624633	ArrayIndexing	tail [ 5 ]		3624092	1					
ANR	3624634	Identifier	tail		3624092	0					
ANR	3624635	PrimaryExpression	5		3624092	1					
ANR	3624636	PrimaryExpression	8		3624092	1					
ANR	3624637	Label	case 5 :	402:6:9946:9952	3624092	28	True				
ANR	3624638	ExpressionStatement	k2 ^= ( FT_UInt32 ) tail [ 4 ]	403:8:9962:9986	3624092	29	True				
ANR	3624639	AssignmentExpression	k2 ^= ( FT_UInt32 ) tail [ 4 ]		3624092	0		^=			
ANR	3624640	Identifier	k2		3624092	0					
ANR	3624641	CastExpression	( FT_UInt32 ) tail [ 4 ]		3624092	1					
ANR	3624642	CastTarget	FT_UInt32		3624092	0					
ANR	3624643	ArrayIndexing	tail [ 4 ]		3624092	1					
ANR	3624644	Identifier	tail		3624092	0					
ANR	3624645	PrimaryExpression	4		3624092	1					
ANR	3624646	ExpressionStatement	k2 *= c2	404:8:9996:10004	3624092	30	True				
ANR	3624647	AssignmentExpression	k2 *= c2		3624092	0		*=			
ANR	3624648	Identifier	k2		3624092	0					
ANR	3624649	Identifier	c2		3624092	1					
ANR	3624650	ExpressionStatement	"k2 = ROTL32 ( k2 , 16 )"	405:8:10014:10036	3624092	31	True				
ANR	3624651	AssignmentExpression	"k2 = ROTL32 ( k2 , 16 )"		3624092	0		=			
ANR	3624652	Identifier	k2		3624092	0					
ANR	3624653	CallExpression	"ROTL32 ( k2 , 16 )"		3624092	1					
ANR	3624654	Callee	ROTL32		3624092	0					
ANR	3624655	Identifier	ROTL32		3624092	0					
ANR	3624656	ArgumentList	k2		3624092	1					
ANR	3624657	Argument	k2		3624092	0					
ANR	3624658	Identifier	k2		3624092	0					
ANR	3624659	Argument	16		3624092	1					
ANR	3624660	PrimaryExpression	16		3624092	0					
ANR	3624661	ExpressionStatement	k2 *= c3	406:8:10046:10054	3624092	32	True				
ANR	3624662	AssignmentExpression	k2 *= c3		3624092	0		*=			
ANR	3624663	Identifier	k2		3624092	0					
ANR	3624664	Identifier	c3		3624092	1					
ANR	3624665	ExpressionStatement	h2 ^= k2	407:8:10064:10072	3624092	33	True				
ANR	3624666	AssignmentExpression	h2 ^= k2		3624092	0		^=			
ANR	3624667	Identifier	h2		3624092	0					
ANR	3624668	Identifier	k2		3624092	1					
ANR	3624669	Label	case 4 :	409:6:10081:10087	3624092	34	True				
ANR	3624670	ExpressionStatement	k1 ^= ( FT_UInt32 ) tail [ 3 ] << 24	410:8:10097:10127	3624092	35	True				
ANR	3624671	AssignmentExpression	k1 ^= ( FT_UInt32 ) tail [ 3 ] << 24		3624092	0		^=			
ANR	3624672	Identifier	k1		3624092	0					
ANR	3624673	ShiftExpression	( FT_UInt32 ) tail [ 3 ] << 24		3624092	1		<<			
ANR	3624674	CastExpression	( FT_UInt32 ) tail [ 3 ]		3624092	0					
ANR	3624675	CastTarget	FT_UInt32		3624092	0					
ANR	3624676	ArrayIndexing	tail [ 3 ]		3624092	1					
ANR	3624677	Identifier	tail		3624092	0					
ANR	3624678	PrimaryExpression	3		3624092	1					
ANR	3624679	PrimaryExpression	24		3624092	1					
ANR	3624680	Label	case 3 :	411:6:10135:10141	3624092	36	True				
ANR	3624681	ExpressionStatement	k1 ^= ( FT_UInt32 ) tail [ 2 ] << 16	412:8:10151:10181	3624092	37	True				
ANR	3624682	AssignmentExpression	k1 ^= ( FT_UInt32 ) tail [ 2 ] << 16		3624092	0		^=			
ANR	3624683	Identifier	k1		3624092	0					
ANR	3624684	ShiftExpression	( FT_UInt32 ) tail [ 2 ] << 16		3624092	1		<<			
ANR	3624685	CastExpression	( FT_UInt32 ) tail [ 2 ]		3624092	0					
ANR	3624686	CastTarget	FT_UInt32		3624092	0					
ANR	3624687	ArrayIndexing	tail [ 2 ]		3624092	1					
ANR	3624688	Identifier	tail		3624092	0					
ANR	3624689	PrimaryExpression	2		3624092	1					
ANR	3624690	PrimaryExpression	16		3624092	1					
ANR	3624691	Label	case 2 :	413:6:10189:10195	3624092	38	True				
ANR	3624692	ExpressionStatement	k1 ^= ( FT_UInt32 ) tail [ 1 ] << 8	414:8:10205:10234	3624092	39	True				
ANR	3624693	AssignmentExpression	k1 ^= ( FT_UInt32 ) tail [ 1 ] << 8		3624092	0		^=			
ANR	3624694	Identifier	k1		3624092	0					
ANR	3624695	ShiftExpression	( FT_UInt32 ) tail [ 1 ] << 8		3624092	1		<<			
ANR	3624696	CastExpression	( FT_UInt32 ) tail [ 1 ]		3624092	0					
ANR	3624697	CastTarget	FT_UInt32		3624092	0					
ANR	3624698	ArrayIndexing	tail [ 1 ]		3624092	1					
ANR	3624699	Identifier	tail		3624092	0					
ANR	3624700	PrimaryExpression	1		3624092	1					
ANR	3624701	PrimaryExpression	8		3624092	1					
ANR	3624702	Label	case 1 :	415:6:10242:10248	3624092	40	True				
ANR	3624703	ExpressionStatement	k1 ^= ( FT_UInt32 ) tail [ 0 ]	416:8:10258:10282	3624092	41	True				
ANR	3624704	AssignmentExpression	k1 ^= ( FT_UInt32 ) tail [ 0 ]		3624092	0		^=			
ANR	3624705	Identifier	k1		3624092	0					
ANR	3624706	CastExpression	( FT_UInt32 ) tail [ 0 ]		3624092	1					
ANR	3624707	CastTarget	FT_UInt32		3624092	0					
ANR	3624708	ArrayIndexing	tail [ 0 ]		3624092	1					
ANR	3624709	Identifier	tail		3624092	0					
ANR	3624710	PrimaryExpression	0		3624092	1					
ANR	3624711	ExpressionStatement	k1 *= c1	417:8:10292:10300	3624092	42	True				
ANR	3624712	AssignmentExpression	k1 *= c1		3624092	0		*=			
ANR	3624713	Identifier	k1		3624092	0					
ANR	3624714	Identifier	c1		3624092	1					
ANR	3624715	ExpressionStatement	"k1 = ROTL32 ( k1 , 15 )"	418:8:10310:10332	3624092	43	True				
ANR	3624716	AssignmentExpression	"k1 = ROTL32 ( k1 , 15 )"		3624092	0		=			
ANR	3624717	Identifier	k1		3624092	0					
ANR	3624718	CallExpression	"ROTL32 ( k1 , 15 )"		3624092	1					
ANR	3624719	Callee	ROTL32		3624092	0					
ANR	3624720	Identifier	ROTL32		3624092	0					
ANR	3624721	ArgumentList	k1		3624092	1					
ANR	3624722	Argument	k1		3624092	0					
ANR	3624723	Identifier	k1		3624092	0					
ANR	3624724	Argument	15		3624092	1					
ANR	3624725	PrimaryExpression	15		3624092	0					
ANR	3624726	ExpressionStatement	k1 *= c2	419:8:10342:10350	3624092	44	True				
ANR	3624727	AssignmentExpression	k1 *= c2		3624092	0		*=			
ANR	3624728	Identifier	k1		3624092	0					
ANR	3624729	Identifier	c2		3624092	1					
ANR	3624730	ExpressionStatement	h1 ^= k1	420:8:10360:10368	3624092	45	True				
ANR	3624731	AssignmentExpression	h1 ^= k1		3624092	0		^=			
ANR	3624732	Identifier	h1		3624092	0					
ANR	3624733	Identifier	k1		3624092	1					
ANR	3624734	ExpressionStatement	h1 ^= len	424:4:10389:10398	3624092	14	True				
ANR	3624735	AssignmentExpression	h1 ^= len		3624092	0		^=			
ANR	3624736	Identifier	h1		3624092	0					
ANR	3624737	Identifier	len		3624092	1					
ANR	3624738	ExpressionStatement	h2 ^= len	425:4:10404:10413	3624092	15	True				
ANR	3624739	AssignmentExpression	h2 ^= len		3624092	0		^=			
ANR	3624740	Identifier	h2		3624092	0					
ANR	3624741	Identifier	len		3624092	1					
ANR	3624742	ExpressionStatement	h3 ^= len	426:4:10419:10428	3624092	16	True				
ANR	3624743	AssignmentExpression	h3 ^= len		3624092	0		^=			
ANR	3624744	Identifier	h3		3624092	0					
ANR	3624745	Identifier	len		3624092	1					
ANR	3624746	ExpressionStatement	h4 ^= len	427:4:10434:10443	3624092	17	True				
ANR	3624747	AssignmentExpression	h4 ^= len		3624092	0		^=			
ANR	3624748	Identifier	h4		3624092	0					
ANR	3624749	Identifier	len		3624092	1					
ANR	3624750	ExpressionStatement	h1 += h2	429:4:10450:10458	3624092	18	True				
ANR	3624751	AssignmentExpression	h1 += h2		3624092	0		+=			
ANR	3624752	Identifier	h1		3624092	0					
ANR	3624753	Identifier	h2		3624092	1					
ANR	3624754	ExpressionStatement	h1 += h3	430:4:10464:10472	3624092	19	True				
ANR	3624755	AssignmentExpression	h1 += h3		3624092	0		+=			
ANR	3624756	Identifier	h1		3624092	0					
ANR	3624757	Identifier	h3		3624092	1					
ANR	3624758	ExpressionStatement	h1 += h4	431:4:10478:10486	3624092	20	True				
ANR	3624759	AssignmentExpression	h1 += h4		3624092	0		+=			
ANR	3624760	Identifier	h1		3624092	0					
ANR	3624761	Identifier	h4		3624092	1					
ANR	3624762	ExpressionStatement	h2 += h1	433:4:10493:10501	3624092	21	True				
ANR	3624763	AssignmentExpression	h2 += h1		3624092	0		+=			
ANR	3624764	Identifier	h2		3624092	0					
ANR	3624765	Identifier	h1		3624092	1					
ANR	3624766	ExpressionStatement	h3 += h1	434:4:10507:10515	3624092	22	True				
ANR	3624767	AssignmentExpression	h3 += h1		3624092	0		+=			
ANR	3624768	Identifier	h3		3624092	0					
ANR	3624769	Identifier	h1		3624092	1					
ANR	3624770	ExpressionStatement	h4 += h1	435:4:10521:10529	3624092	23	True				
ANR	3624771	AssignmentExpression	h4 += h1		3624092	0		+=			
ANR	3624772	Identifier	h4		3624092	0					
ANR	3624773	Identifier	h1		3624092	1					
ANR	3624774	ExpressionStatement	h1 = fmix32 ( h1 )	437:4:10536:10553	3624092	24	True				
ANR	3624775	AssignmentExpression	h1 = fmix32 ( h1 )		3624092	0		=			
ANR	3624776	Identifier	h1		3624092	0					
ANR	3624777	CallExpression	fmix32 ( h1 )		3624092	1					
ANR	3624778	Callee	fmix32		3624092	0					
ANR	3624779	Identifier	fmix32		3624092	0					
ANR	3624780	ArgumentList	h1		3624092	1					
ANR	3624781	Argument	h1		3624092	0					
ANR	3624782	Identifier	h1		3624092	0					
ANR	3624783	ExpressionStatement	h2 = fmix32 ( h2 )	438:4:10559:10576	3624092	25	True				
ANR	3624784	AssignmentExpression	h2 = fmix32 ( h2 )		3624092	0		=			
ANR	3624785	Identifier	h2		3624092	0					
ANR	3624786	CallExpression	fmix32 ( h2 )		3624092	1					
ANR	3624787	Callee	fmix32		3624092	0					
ANR	3624788	Identifier	fmix32		3624092	0					
ANR	3624789	ArgumentList	h2		3624092	1					
ANR	3624790	Argument	h2		3624092	0					
ANR	3624791	Identifier	h2		3624092	0					
ANR	3624792	ExpressionStatement	h3 = fmix32 ( h3 )	439:4:10582:10599	3624092	26	True				
ANR	3624793	AssignmentExpression	h3 = fmix32 ( h3 )		3624092	0		=			
ANR	3624794	Identifier	h3		3624092	0					
ANR	3624795	CallExpression	fmix32 ( h3 )		3624092	1					
ANR	3624796	Callee	fmix32		3624092	0					
ANR	3624797	Identifier	fmix32		3624092	0					
ANR	3624798	ArgumentList	h3		3624092	1					
ANR	3624799	Argument	h3		3624092	0					
ANR	3624800	Identifier	h3		3624092	0					
ANR	3624801	ExpressionStatement	h4 = fmix32 ( h4 )	440:4:10605:10622	3624092	27	True				
ANR	3624802	AssignmentExpression	h4 = fmix32 ( h4 )		3624092	0		=			
ANR	3624803	Identifier	h4		3624092	0					
ANR	3624804	CallExpression	fmix32 ( h4 )		3624092	1					
ANR	3624805	Callee	fmix32		3624092	0					
ANR	3624806	Identifier	fmix32		3624092	0					
ANR	3624807	ArgumentList	h4		3624092	1					
ANR	3624808	Argument	h4		3624092	0					
ANR	3624809	Identifier	h4		3624092	0					
ANR	3624810	ExpressionStatement	h1 += h2	442:4:10629:10637	3624092	28	True				
ANR	3624811	AssignmentExpression	h1 += h2		3624092	0		+=			
ANR	3624812	Identifier	h1		3624092	0					
ANR	3624813	Identifier	h2		3624092	1					
ANR	3624814	ExpressionStatement	h1 += h3	443:4:10643:10651	3624092	29	True				
ANR	3624815	AssignmentExpression	h1 += h3		3624092	0		+=			
ANR	3624816	Identifier	h1		3624092	0					
ANR	3624817	Identifier	h3		3624092	1					
ANR	3624818	ExpressionStatement	h1 += h4	444:4:10657:10665	3624092	30	True				
ANR	3624819	AssignmentExpression	h1 += h4		3624092	0		+=			
ANR	3624820	Identifier	h1		3624092	0					
ANR	3624821	Identifier	h4		3624092	1					
ANR	3624822	ExpressionStatement	h2 += h1	446:4:10672:10680	3624092	31	True				
ANR	3624823	AssignmentExpression	h2 += h1		3624092	0		+=			
ANR	3624824	Identifier	h2		3624092	0					
ANR	3624825	Identifier	h1		3624092	1					
ANR	3624826	ExpressionStatement	h3 += h1	447:4:10686:10694	3624092	32	True				
ANR	3624827	AssignmentExpression	h3 += h1		3624092	0		+=			
ANR	3624828	Identifier	h3		3624092	0					
ANR	3624829	Identifier	h1		3624092	1					
ANR	3624830	ExpressionStatement	h4 += h1	448:4:10700:10708	3624092	33	True				
ANR	3624831	AssignmentExpression	h4 += h1		3624092	0		+=			
ANR	3624832	Identifier	h4		3624092	0					
ANR	3624833	Identifier	h1		3624092	1					
ANR	3624834	ExpressionStatement	( ( FT_UInt32 * ) out ) [ 0 ] = h1	450:4:10715:10740	3624092	34	True				
ANR	3624835	AssignmentExpression	( ( FT_UInt32 * ) out ) [ 0 ] = h1		3624092	0		=			
ANR	3624836	ArrayIndexing	( ( FT_UInt32 * ) out ) [ 0 ]		3624092	0					
ANR	3624837	CastExpression	( FT_UInt32 * ) out		3624092	0					
ANR	3624838	CastTarget	FT_UInt32 *		3624092	0					
ANR	3624839	Identifier	out		3624092	1					
ANR	3624840	PrimaryExpression	0		3624092	1					
ANR	3624841	Identifier	h1		3624092	1					
ANR	3624842	ExpressionStatement	( ( FT_UInt32 * ) out ) [ 1 ] = h2	451:4:10746:10771	3624092	35	True				
ANR	3624843	AssignmentExpression	( ( FT_UInt32 * ) out ) [ 1 ] = h2		3624092	0		=			
ANR	3624844	ArrayIndexing	( ( FT_UInt32 * ) out ) [ 1 ]		3624092	0					
ANR	3624845	CastExpression	( FT_UInt32 * ) out		3624092	0					
ANR	3624846	CastTarget	FT_UInt32 *		3624092	0					
ANR	3624847	Identifier	out		3624092	1					
ANR	3624848	PrimaryExpression	1		3624092	1					
ANR	3624849	Identifier	h2		3624092	1					
ANR	3624850	ExpressionStatement	( ( FT_UInt32 * ) out ) [ 2 ] = h3	452:4:10777:10802	3624092	36	True				
ANR	3624851	AssignmentExpression	( ( FT_UInt32 * ) out ) [ 2 ] = h3		3624092	0		=			
ANR	3624852	ArrayIndexing	( ( FT_UInt32 * ) out ) [ 2 ]		3624092	0					
ANR	3624853	CastExpression	( FT_UInt32 * ) out		3624092	0					
ANR	3624854	CastTarget	FT_UInt32 *		3624092	0					
ANR	3624855	Identifier	out		3624092	1					
ANR	3624856	PrimaryExpression	2		3624092	1					
ANR	3624857	Identifier	h3		3624092	1					
ANR	3624858	ExpressionStatement	( ( FT_UInt32 * ) out ) [ 3 ] = h4	453:4:10808:10833	3624092	37	True				
ANR	3624859	AssignmentExpression	( ( FT_UInt32 * ) out ) [ 3 ] = h4		3624092	0		=			
ANR	3624860	ArrayIndexing	( ( FT_UInt32 * ) out ) [ 3 ]		3624092	0					
ANR	3624861	CastExpression	( FT_UInt32 * ) out		3624092	0					
ANR	3624862	CastTarget	FT_UInt32 *		3624092	0					
ANR	3624863	Identifier	out		3624092	1					
ANR	3624864	PrimaryExpression	3		3624092	1					
ANR	3624865	Identifier	h4		3624092	1					
ANR	3624866	ReturnType	static void		3624092	1					
ANR	3624867	Identifier	murmur_hash_3_128		3624092	2					
ANR	3624868	ParameterList	"const void * key , const unsigned int len , FT_UInt32 seed , void * out"		3624092	3					
ANR	3624869	Parameter	const void * key	293:21:7558:7580	3624092	0	True				
ANR	3624870	ParameterType	const void *		3624092	0					
ANR	3624871	Identifier	key		3624092	1					
ANR	3624872	Parameter	const unsigned int len	294:21:7604:7626	3624092	1	True				
ANR	3624873	ParameterType	const unsigned int		3624092	0					
ANR	3624874	Identifier	len		3624092	1					
ANR	3624875	Parameter	FT_UInt32 seed	295:21:7650:7673	3624092	2	True				
ANR	3624876	ParameterType	FT_UInt32		3624092	0					
ANR	3624877	Identifier	seed		3624092	1					
ANR	3624878	Parameter	void * out	296:21:7697:7719	3624092	3	True				
ANR	3624879	ParameterType	void *		3624092	0					
ANR	3624880	Identifier	out		3624092	1					
ANR	3624881	CFGEntryNode	ENTRY		3624092		True				
ANR	3624882	CFGExitNode	EXIT		3624092		True				
ANR	3624883	Symbol	seed		3624092						
ANR	3624884	Symbol	data		3624092						
ANR	3624885	Symbol	h1		3624092						
ANR	3624886	Symbol	h2		3624092						
ANR	3624887	Symbol	h3		3624092						
ANR	3624888	Symbol	h4		3624092						
ANR	3624889	Symbol	out		3624092						
ANR	3624890	Symbol	len		3624092						
ANR	3624891	Symbol	key		3624092						
ANR	3624892	Symbol	* tail		3624092						
ANR	3624893	Symbol	* blocks		3624092						
ANR	3624894	Symbol	blocks		3624092						
ANR	3624895	Symbol	k1		3624092						
ANR	3624896	Symbol	tail		3624092						
ANR	3624897	Symbol	k2		3624092						
ANR	3624898	Symbol	k3		3624092						
ANR	3624899	Symbol	i		3624092						
ANR	3624900	Symbol	k4		3624092						
ANR	3624901	Symbol	fmix32		3624092						
ANR	3624902	Symbol	c1		3624092						
ANR	3624903	Symbol	c2		3624092						
ANR	3624904	Symbol	c3		3624092						
ANR	3624905	Symbol	c4		3624092						
ANR	3624906	Symbol	* i		3624092						
ANR	3624907	Symbol	* out		3624092						
ANR	3624908	Symbol	ROTL32		3624092						
ANR	3624909	Symbol	nblocks		3624092						
ANR	3624910	DeclStmt									
ANR	3624911	Decl							int ( * ) ( int c )	int ( * ) ( int c )	char_type_func
ANR	3624912	Function	get_win_string	472:2:11367:12746							
ANR	3624913	FunctionDef	"get_win_string (FT_Memory memory , FT_Stream stream , TT_Name entry , char_type_func char_type , FT_Bool report_invalid_characters)"		3624912	0					
ANR	3624914	CompoundStatement		478:2:11614:12746	3624912	0					
ANR	3624915	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	479:4:11620:11647	3624912	0	True				
ANR	3624916	IdentifierDecl	error = FT_Err_Ok		3624912	0					
ANR	3624917	IdentifierDeclType	FT_Error		3624912	0					
ANR	3624918	Identifier	error		3624912	1					
ANR	3624919	AssignmentExpression	error = FT_Err_Ok		3624912	2		=			
ANR	3624920	Identifier	FT_Err_Ok		3624912	0					
ANR	3624921	Identifier	FT_Err_Ok		3624912	1					
ANR	3624922	IdentifierDeclStatement	char * result = NULL ;	481:4:11654:11679	3624912	1	True				
ANR	3624923	IdentifierDecl	* result = NULL		3624912	0					
ANR	3624924	IdentifierDeclType	char *		3624912	0					
ANR	3624925	Identifier	result		3624912	1					
ANR	3624926	AssignmentExpression	* result = NULL		3624912	2		=			
ANR	3624927	Identifier	NULL		3624912	0					
ANR	3624928	Identifier	NULL		3624912	1					
ANR	3624929	IdentifierDeclStatement	FT_String * r ;	482:4:11685:11698	3624912	2	True				
ANR	3624930	IdentifierDecl	* r		3624912	0					
ANR	3624931	IdentifierDeclType	FT_String *		3624912	0					
ANR	3624932	Identifier	r		3624912	1					
ANR	3624933	IdentifierDeclStatement	FT_Char * p ;	483:4:11704:11717	3624912	3	True				
ANR	3624934	IdentifierDecl	* p		3624912	0					
ANR	3624935	IdentifierDeclType	FT_Char *		3624912	0					
ANR	3624936	Identifier	p		3624912	1					
ANR	3624937	IdentifierDeclStatement	FT_UInt len ;	484:4:11723:11738	3624912	4	True				
ANR	3624938	IdentifierDecl	len		3624912	0					
ANR	3624939	IdentifierDeclType	FT_UInt		3624912	0					
ANR	3624940	Identifier	len		3624912	1					
ANR	3624941	ExpressionStatement	FT_UNUSED ( error )	486:4:11745:11763	3624912	5	True				
ANR	3624942	CallExpression	FT_UNUSED ( error )		3624912	0					
ANR	3624943	Callee	FT_UNUSED		3624912	0					
ANR	3624944	Identifier	FT_UNUSED		3624912	0					
ANR	3624945	ArgumentList	error		3624912	1					
ANR	3624946	Argument	error		3624912	0					
ANR	3624947	Identifier	error		3624912	0					
ANR	3624948	IfStatement	"if ( FT_ALLOC ( result , entry -> stringLength / 2 + 1 ) )"		3624912	6					
ANR	3624949	Condition	"FT_ALLOC ( result , entry -> stringLength / 2 + 1 )"	489:9:11776:11822	3624912	0	True				
ANR	3624950	CallExpression	"FT_ALLOC ( result , entry -> stringLength / 2 + 1 )"		3624912	0					
ANR	3624951	Callee	FT_ALLOC		3624912	0					
ANR	3624952	Identifier	FT_ALLOC		3624912	0					
ANR	3624953	ArgumentList	result		3624912	1					
ANR	3624954	Argument	result		3624912	0					
ANR	3624955	Identifier	result		3624912	0					
ANR	3624956	Argument	entry -> stringLength / 2 + 1		3624912	1					
ANR	3624957	AdditiveExpression	entry -> stringLength / 2 + 1		3624912	0		+			
ANR	3624958	MultiplicativeExpression	entry -> stringLength / 2		3624912	0		/			
ANR	3624959	PtrMemberAccess	entry -> stringLength		3624912	0					
ANR	3624960	Identifier	entry		3624912	0					
ANR	3624961	Identifier	stringLength		3624912	1					
ANR	3624962	PrimaryExpression	2		3624912	1					
ANR	3624963	PrimaryExpression	1		3624912	1					
ANR	3624964	ReturnStatement	return NULL ;	490:6:11832:11843	3624912	1	True				
ANR	3624965	Identifier	NULL		3624912	0					
ANR	3624966	IfStatement	if ( FT_STREAM_SEEK ( entry -> stringOffset ) || FT_FRAME_ENTER ( entry -> stringLength ) )		3624912	7					
ANR	3624967	Condition	FT_STREAM_SEEK ( entry -> stringOffset ) || FT_FRAME_ENTER ( entry -> stringLength )	492:9:11855:11941	3624912	0	True				
ANR	3624968	OrExpression	FT_STREAM_SEEK ( entry -> stringOffset ) || FT_FRAME_ENTER ( entry -> stringLength )		3624912	0		||			
ANR	3624969	CallExpression	FT_STREAM_SEEK ( entry -> stringOffset )		3624912	0					
ANR	3624970	Callee	FT_STREAM_SEEK		3624912	0					
ANR	3624971	Identifier	FT_STREAM_SEEK		3624912	0					
ANR	3624972	ArgumentList	entry -> stringOffset		3624912	1					
ANR	3624973	Argument	entry -> stringOffset		3624912	0					
ANR	3624974	PtrMemberAccess	entry -> stringOffset		3624912	0					
ANR	3624975	Identifier	entry		3624912	0					
ANR	3624976	Identifier	stringOffset		3624912	1					
ANR	3624977	CallExpression	FT_FRAME_ENTER ( entry -> stringLength )		3624912	1					
ANR	3624978	Callee	FT_FRAME_ENTER		3624912	0					
ANR	3624979	Identifier	FT_FRAME_ENTER		3624912	0					
ANR	3624980	ArgumentList	entry -> stringLength		3624912	1					
ANR	3624981	Argument	entry -> stringLength		3624912	0					
ANR	3624982	PtrMemberAccess	entry -> stringLength		3624912	0					
ANR	3624983	Identifier	entry		3624912	0					
ANR	3624984	Identifier	stringLength		3624912	1					
ANR	3624985	CompoundStatement		17:4:334:334	3624912	1					
ANR	3624986	ExpressionStatement	FT_FREE ( result )	495:6:11957:11974	3624912	0	True				
ANR	3624987	CallExpression	FT_FREE ( result )		3624912	0					
ANR	3624988	Callee	FT_FREE		3624912	0					
ANR	3624989	Identifier	FT_FREE		3624912	0					
ANR	3624990	ArgumentList	result		3624912	1					
ANR	3624991	Argument	result		3624912	0					
ANR	3624992	Identifier	result		3624912	0					
ANR	3624993	ExpressionStatement	entry -> stringLength = 0	496:6:11982:12005	3624912	1	True				
ANR	3624994	AssignmentExpression	entry -> stringLength = 0		3624912	0		=			
ANR	3624995	PtrMemberAccess	entry -> stringLength		3624912	0					
ANR	3624996	Identifier	entry		3624912	0					
ANR	3624997	Identifier	stringLength		3624912	1					
ANR	3624998	PrimaryExpression	0		3624912	1					
ANR	3624999	ExpressionStatement	entry -> stringOffset = 0	497:6:12013:12036	3624912	2	True				
ANR	3625000	AssignmentExpression	entry -> stringOffset = 0		3624912	0		=			
ANR	3625001	PtrMemberAccess	entry -> stringOffset		3624912	0					
ANR	3625002	Identifier	entry		3624912	0					
ANR	3625003	Identifier	stringOffset		3624912	1					
ANR	3625004	PrimaryExpression	0		3624912	1					
ANR	3625005	ExpressionStatement	FT_FREE ( entry -> string )	498:6:12044:12068	3624912	3	True				
ANR	3625006	CallExpression	FT_FREE ( entry -> string )		3624912	0					
ANR	3625007	Callee	FT_FREE		3624912	0					
ANR	3625008	Identifier	FT_FREE		3624912	0					
ANR	3625009	ArgumentList	entry -> string		3624912	1					
ANR	3625010	Argument	entry -> string		3624912	0					
ANR	3625011	PtrMemberAccess	entry -> string		3624912	0					
ANR	3625012	Identifier	entry		3624912	0					
ANR	3625013	Identifier	string		3624912	1					
ANR	3625014	ReturnStatement	return NULL ;	500:6:12077:12088	3624912	4	True				
ANR	3625015	Identifier	NULL		3624912	0					
ANR	3625016	ExpressionStatement	r = ( FT_String * ) result	503:4:12101:12123	3624912	8	True				
ANR	3625017	AssignmentExpression	r = ( FT_String * ) result		3624912	0		=			
ANR	3625018	Identifier	r		3624912	0					
ANR	3625019	CastExpression	( FT_String * ) result		3624912	1					
ANR	3625020	CastTarget	FT_String *		3624912	0					
ANR	3625021	Identifier	result		3624912	1					
ANR	3625022	ExpressionStatement	p = ( FT_Char * ) stream -> cursor	504:4:12129:12157	3624912	9	True				
ANR	3625023	AssignmentExpression	p = ( FT_Char * ) stream -> cursor		3624912	0		=			
ANR	3625024	Identifier	p		3624912	0					
ANR	3625025	CastExpression	( FT_Char * ) stream -> cursor		3624912	1					
ANR	3625026	CastTarget	FT_Char *		3624912	0					
ANR	3625027	PtrMemberAccess	stream -> cursor		3624912	1					
ANR	3625028	Identifier	stream		3624912	0					
ANR	3625029	Identifier	cursor		3624912	1					
ANR	3625030	ForStatement	"for ( len = entry -> stringLength / 2 ; len > 0 ; len -- , p += 2 )"		3624912	10					
ANR	3625031	ForInit	len = entry -> stringLength / 2 ;	506:10:12170:12199	3624912	0	True				
ANR	3625032	AssignmentExpression	len = entry -> stringLength / 2		3624912	0		=			
ANR	3625033	Identifier	len		3624912	0					
ANR	3625034	MultiplicativeExpression	entry -> stringLength / 2		3624912	1		/			
ANR	3625035	PtrMemberAccess	entry -> stringLength		3624912	0					
ANR	3625036	Identifier	entry		3624912	0					
ANR	3625037	Identifier	stringLength		3624912	1					
ANR	3625038	PrimaryExpression	2		3624912	1					
ANR	3625039	Condition	len > 0	506:41:12201:12207	3624912	1	True				
ANR	3625040	RelationalExpression	len > 0		3624912	0		>			
ANR	3625041	Identifier	len		3624912	0					
ANR	3625042	PrimaryExpression	0		3624912	1					
ANR	3625043	Expression	"len -- , p += 2"	506:50:12210:12222	3624912	2	True				
ANR	3625044	PostIncDecOperationExpression	len --		3624912	0					
ANR	3625045	Identifier	len		3624912	0					
ANR	3625046	IncDec	--		3624912	1					
ANR	3625047	AssignmentExpression	p += 2		3624912	1		+=			
ANR	3625048	Identifier	p		3624912	0					
ANR	3625049	PrimaryExpression	2		3624912	1					
ANR	3625050	CompoundStatement		30:4:615:615	3624912	3					
ANR	3625051	IfStatement	if ( p [ 0 ] == 0 )		3624912	0					
ANR	3625052	Condition	p [ 0 ] == 0	508:11:12243:12251	3624912	0	True				
ANR	3625053	EqualityExpression	p [ 0 ] == 0		3624912	0		==			
ANR	3625054	ArrayIndexing	p [ 0 ]		3624912	0					
ANR	3625055	Identifier	p		3624912	0					
ANR	3625056	PrimaryExpression	0		3624912	1					
ANR	3625057	PrimaryExpression	0		3624912	1					
ANR	3625058	CompoundStatement		32:6:646:646	3624912	1					
ANR	3625059	IfStatement	if ( char_type ( p [ 1 ] ) )		3624912	0					
ANR	3625060	Condition	char_type ( p [ 1 ] )	510:13:12276:12292	3624912	0	True				
ANR	3625061	CallExpression	char_type ( p [ 1 ] )		3624912	0					
ANR	3625062	Callee	char_type		3624912	0					
ANR	3625063	Identifier	char_type		3624912	0					
ANR	3625064	ArgumentList	p [ 1 ]		3624912	1					
ANR	3625065	Argument	p [ 1 ]		3624912	0					
ANR	3625066	ArrayIndexing	p [ 1 ]		3624912	0					
ANR	3625067	Identifier	p		3624912	0					
ANR	3625068	PrimaryExpression	1		3624912	1					
ANR	3625069	ExpressionStatement	* r ++ = p [ 1 ]	511:10:12306:12317	3624912	1	True				
ANR	3625070	AssignmentExpression	* r ++ = p [ 1 ]		3624912	0		=			
ANR	3625071	UnaryOperationExpression	* r ++		3624912	0					
ANR	3625072	UnaryOperator	*		3624912	0					
ANR	3625073	PostIncDecOperationExpression	r ++		3624912	1					
ANR	3625074	Identifier	r		3624912	0					
ANR	3625075	IncDec	++		3624912	1					
ANR	3625076	ArrayIndexing	p [ 1 ]		3624912	1					
ANR	3625077	Identifier	p		3624912	0					
ANR	3625078	PrimaryExpression	1		3624912	1					
ANR	3625079	ElseStatement	else		3624912	0					
ANR	3625080	CompoundStatement		36:8:725:725	3624912	0					
ANR	3625081	IfStatement	if ( report_invalid_characters )		3624912	0					
ANR	3625082	Condition	report_invalid_characters	514:15:12357:12381	3624912	0	True				
ANR	3625083	Identifier	report_invalid_characters		3624912	0					
ANR	3625084	CompoundStatement		38:10:780:780	3624912	1					
ANR	3625085	Statement	FT_TRACE0	516:12:12409:12417	3624912	0	True				
ANR	3625086	Statement	(	516:21:12418:12418	3624912	1	True				
ANR	3625087	Statement	(	516:22:12419:12419	3624912	2	True				
ANR	3625088	Statement	"""get_win_string:"""	516:24:12421:12437	3624912	3	True				
ANR	3625089	Statement	""" Character `%c' (0x%X) invalid in PS name string\\n"""	517:24:12463:12514	3624912	4	True				
ANR	3625090	Statement	","	517:76:12515:12515	3624912	5	True				
ANR	3625091	Statement	p	518:24:12541:12541	3624912	6	True				
ANR	3625092	Statement	[	518:25:12542:12542	3624912	7	True				
ANR	3625093	Statement	1	518:26:12543:12543	3624912	8	True				
ANR	3625094	Statement	]	518:27:12544:12544	3624912	9	True				
ANR	3625095	Statement	","	518:28:12545:12545	3624912	10	True				
ANR	3625096	Statement	p	518:30:12547:12547	3624912	11	True				
ANR	3625097	Statement	[	518:31:12548:12548	3624912	12	True				
ANR	3625098	Statement	1	518:32:12549:12549	3624912	13	True				
ANR	3625099	Statement	]	518:33:12550:12550	3624912	14	True				
ANR	3625100	Statement	)	518:35:12552:12552	3624912	15	True				
ANR	3625101	Statement	)	518:36:12553:12553	3624912	16	True				
ANR	3625102	ExpressionStatement		518:37:12554:12554	3624912	17	True				
ANR	3625103	ExpressionStatement	* r ++ = p [ 1 ]	520:12:12638:12649	3624912	18	True				
ANR	3625104	AssignmentExpression	* r ++ = p [ 1 ]		3624912	0		=			
ANR	3625105	UnaryOperationExpression	* r ++		3624912	0					
ANR	3625106	UnaryOperator	*		3624912	0					
ANR	3625107	PostIncDecOperationExpression	r ++		3624912	1					
ANR	3625108	Identifier	r		3624912	0					
ANR	3625109	IncDec	++		3624912	1					
ANR	3625110	ArrayIndexing	p [ 1 ]		3624912	1					
ANR	3625111	Identifier	p		3624912	0					
ANR	3625112	PrimaryExpression	1		3624912	1					
ANR	3625113	ExpressionStatement	* r = '\\0'	525:4:12691:12700	3624912	11	True				
ANR	3625114	AssignmentExpression	* r = '\\0'		3624912	0		=			
ANR	3625115	UnaryOperationExpression	* r		3624912	0					
ANR	3625116	UnaryOperator	*		3624912	0					
ANR	3625117	Identifier	r		3624912	1					
ANR	3625118	PrimaryExpression	'\\0'		3624912	1					
ANR	3625119	ExpressionStatement	FT_FRAME_EXIT ( )	527:4:12707:12722	3624912	12	True				
ANR	3625120	CallExpression	FT_FRAME_EXIT ( )		3624912	0					
ANR	3625121	Callee	FT_FRAME_EXIT		3624912	0					
ANR	3625122	Identifier	FT_FRAME_EXIT		3624912	0					
ANR	3625123	ArgumentList			3624912	1					
ANR	3625124	ReturnStatement	return result ;	529:4:12729:12742	3624912	13	True				
ANR	3625125	Identifier	result		3624912	0					
ANR	3625126	ReturnType	static char *		3624912	1					
ANR	3625127	Identifier	get_win_string		3624912	2					
ANR	3625128	ParameterList	"FT_Memory memory , FT_Stream stream , TT_Name entry , char_type_func char_type , FT_Bool report_invalid_characters"		3624912	3					
ANR	3625129	Parameter	FT_Memory memory	473:18:11398:11419	3624912	0	True				
ANR	3625130	ParameterType	FT_Memory		3624912	0					
ANR	3625131	Identifier	memory		3624912	1					
ANR	3625132	Parameter	FT_Stream stream	474:18:11440:11461	3624912	1	True				
ANR	3625133	ParameterType	FT_Stream		3624912	0					
ANR	3625134	Identifier	stream		3624912	1					
ANR	3625135	Parameter	TT_Name entry	475:18:11482:11502	3624912	2	True				
ANR	3625136	ParameterType	TT_Name		3624912	0					
ANR	3625137	Identifier	entry		3624912	1					
ANR	3625138	Parameter	char_type_func char_type	476:18:11523:11547	3624912	3	True				
ANR	3625139	ParameterType	char_type_func		3624912	0					
ANR	3625140	Identifier	char_type		3624912	1					
ANR	3625141	Parameter	FT_Bool report_invalid_characters	477:18:11568:11608	3624912	4	True				
ANR	3625142	ParameterType	FT_Bool		3624912	0					
ANR	3625143	Identifier	report_invalid_characters		3624912	1					
ANR	3625144	CFGEntryNode	ENTRY		3624912		True				
ANR	3625145	CFGExitNode	EXIT		3624912		True				
ANR	3625146	Symbol	FT_STREAM_SEEK		3624912						
ANR	3625147	Symbol	FT_FRAME_ENTER		3624912						
ANR	3625148	Symbol	memory		3624912						
ANR	3625149	Symbol	NULL		3624912						
ANR	3625150	Symbol	char_type		3624912						
ANR	3625151	Symbol	FT_Err_Ok		3624912						
ANR	3625152	Symbol	report_invalid_characters		3624912						
ANR	3625153	Symbol	* r ++		3624912						
ANR	3625154	Symbol	error		3624912						
ANR	3625155	Symbol	result		3624912						
ANR	3625156	Symbol	p		3624912						
ANR	3625157	Symbol	entry		3624912						
ANR	3625158	Symbol	r		3624912						
ANR	3625159	Symbol	len		3624912						
ANR	3625160	Symbol	stream		3624912						
ANR	3625161	Symbol	FT_ALLOC		3624912						
ANR	3625162	Symbol	entry -> stringOffset		3624912						
ANR	3625163	Symbol	stream -> cursor		3624912						
ANR	3625164	Symbol	* stream		3624912						
ANR	3625165	Symbol	entry -> string		3624912						
ANR	3625166	Symbol	* p		3624912						
ANR	3625167	Symbol	* r		3624912						
ANR	3625168	Symbol	entry -> stringLength		3624912						
ANR	3625169	Symbol	* entry		3624912						
ANR	3625170	Function	get_apple_string	533:2:12752:14057							
ANR	3625171	FunctionDef	"get_apple_string (FT_Memory memory , FT_Stream stream , TT_Name entry , char_type_func char_type , FT_Bool report_invalid_characters)"		3625170	0					
ANR	3625172	CompoundStatement		539:2:13009:14057	3625170	0					
ANR	3625173	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	540:4:13015:13042	3625170	0	True				
ANR	3625174	IdentifierDecl	error = FT_Err_Ok		3625170	0					
ANR	3625175	IdentifierDeclType	FT_Error		3625170	0					
ANR	3625176	Identifier	error		3625170	1					
ANR	3625177	AssignmentExpression	error = FT_Err_Ok		3625170	2		=			
ANR	3625178	Identifier	FT_Err_Ok		3625170	0					
ANR	3625179	Identifier	FT_Err_Ok		3625170	1					
ANR	3625180	IdentifierDeclStatement	char * result = NULL ;	542:4:13049:13074	3625170	1	True				
ANR	3625181	IdentifierDecl	* result = NULL		3625170	0					
ANR	3625182	IdentifierDeclType	char *		3625170	0					
ANR	3625183	Identifier	result		3625170	1					
ANR	3625184	AssignmentExpression	* result = NULL		3625170	2		=			
ANR	3625185	Identifier	NULL		3625170	0					
ANR	3625186	Identifier	NULL		3625170	1					
ANR	3625187	IdentifierDeclStatement	FT_String * r ;	543:4:13080:13093	3625170	2	True				
ANR	3625188	IdentifierDecl	* r		3625170	0					
ANR	3625189	IdentifierDeclType	FT_String *		3625170	0					
ANR	3625190	Identifier	r		3625170	1					
ANR	3625191	IdentifierDeclStatement	FT_Char * p ;	544:4:13099:13112	3625170	3	True				
ANR	3625192	IdentifierDecl	* p		3625170	0					
ANR	3625193	IdentifierDeclType	FT_Char *		3625170	0					
ANR	3625194	Identifier	p		3625170	1					
ANR	3625195	IdentifierDeclStatement	FT_UInt len ;	545:4:13118:13133	3625170	4	True				
ANR	3625196	IdentifierDecl	len		3625170	0					
ANR	3625197	IdentifierDeclType	FT_UInt		3625170	0					
ANR	3625198	Identifier	len		3625170	1					
ANR	3625199	ExpressionStatement	FT_UNUSED ( error )	547:4:13140:13158	3625170	5	True				
ANR	3625200	CallExpression	FT_UNUSED ( error )		3625170	0					
ANR	3625201	Callee	FT_UNUSED		3625170	0					
ANR	3625202	Identifier	FT_UNUSED		3625170	0					
ANR	3625203	ArgumentList	error		3625170	1					
ANR	3625204	Argument	error		3625170	0					
ANR	3625205	Identifier	error		3625170	0					
ANR	3625206	IfStatement	"if ( FT_ALLOC ( result , entry -> stringLength + 1 ) )"		3625170	6					
ANR	3625207	Condition	"FT_ALLOC ( result , entry -> stringLength + 1 )"	550:9:13171:13213	3625170	0	True				
ANR	3625208	CallExpression	"FT_ALLOC ( result , entry -> stringLength + 1 )"		3625170	0					
ANR	3625209	Callee	FT_ALLOC		3625170	0					
ANR	3625210	Identifier	FT_ALLOC		3625170	0					
ANR	3625211	ArgumentList	result		3625170	1					
ANR	3625212	Argument	result		3625170	0					
ANR	3625213	Identifier	result		3625170	0					
ANR	3625214	Argument	entry -> stringLength + 1		3625170	1					
ANR	3625215	AdditiveExpression	entry -> stringLength + 1		3625170	0		+			
ANR	3625216	PtrMemberAccess	entry -> stringLength		3625170	0					
ANR	3625217	Identifier	entry		3625170	0					
ANR	3625218	Identifier	stringLength		3625170	1					
ANR	3625219	PrimaryExpression	1		3625170	1					
ANR	3625220	ReturnStatement	return NULL ;	551:6:13223:13234	3625170	1	True				
ANR	3625221	Identifier	NULL		3625170	0					
ANR	3625222	IfStatement	if ( FT_STREAM_SEEK ( entry -> stringOffset ) || FT_FRAME_ENTER ( entry -> stringLength ) )		3625170	7					
ANR	3625223	Condition	FT_STREAM_SEEK ( entry -> stringOffset ) || FT_FRAME_ENTER ( entry -> stringLength )	553:9:13246:13332	3625170	0	True				
ANR	3625224	OrExpression	FT_STREAM_SEEK ( entry -> stringOffset ) || FT_FRAME_ENTER ( entry -> stringLength )		3625170	0		||			
ANR	3625225	CallExpression	FT_STREAM_SEEK ( entry -> stringOffset )		3625170	0					
ANR	3625226	Callee	FT_STREAM_SEEK		3625170	0					
ANR	3625227	Identifier	FT_STREAM_SEEK		3625170	0					
ANR	3625228	ArgumentList	entry -> stringOffset		3625170	1					
ANR	3625229	Argument	entry -> stringOffset		3625170	0					
ANR	3625230	PtrMemberAccess	entry -> stringOffset		3625170	0					
ANR	3625231	Identifier	entry		3625170	0					
ANR	3625232	Identifier	stringOffset		3625170	1					
ANR	3625233	CallExpression	FT_FRAME_ENTER ( entry -> stringLength )		3625170	1					
ANR	3625234	Callee	FT_FRAME_ENTER		3625170	0					
ANR	3625235	Identifier	FT_FRAME_ENTER		3625170	0					
ANR	3625236	ArgumentList	entry -> stringLength		3625170	1					
ANR	3625237	Argument	entry -> stringLength		3625170	0					
ANR	3625238	PtrMemberAccess	entry -> stringLength		3625170	0					
ANR	3625239	Identifier	entry		3625170	0					
ANR	3625240	Identifier	stringLength		3625170	1					
ANR	3625241	CompoundStatement		17:4:330:330	3625170	1					
ANR	3625242	ExpressionStatement	FT_FREE ( result )	556:6:13348:13365	3625170	0	True				
ANR	3625243	CallExpression	FT_FREE ( result )		3625170	0					
ANR	3625244	Callee	FT_FREE		3625170	0					
ANR	3625245	Identifier	FT_FREE		3625170	0					
ANR	3625246	ArgumentList	result		3625170	1					
ANR	3625247	Argument	result		3625170	0					
ANR	3625248	Identifier	result		3625170	0					
ANR	3625249	ExpressionStatement	entry -> stringOffset = 0	557:6:13373:13396	3625170	1	True				
ANR	3625250	AssignmentExpression	entry -> stringOffset = 0		3625170	0		=			
ANR	3625251	PtrMemberAccess	entry -> stringOffset		3625170	0					
ANR	3625252	Identifier	entry		3625170	0					
ANR	3625253	Identifier	stringOffset		3625170	1					
ANR	3625254	PrimaryExpression	0		3625170	1					
ANR	3625255	ExpressionStatement	entry -> stringLength = 0	558:6:13404:13427	3625170	2	True				
ANR	3625256	AssignmentExpression	entry -> stringLength = 0		3625170	0		=			
ANR	3625257	PtrMemberAccess	entry -> stringLength		3625170	0					
ANR	3625258	Identifier	entry		3625170	0					
ANR	3625259	Identifier	stringLength		3625170	1					
ANR	3625260	PrimaryExpression	0		3625170	1					
ANR	3625261	ExpressionStatement	FT_FREE ( entry -> string )	559:6:13435:13459	3625170	3	True				
ANR	3625262	CallExpression	FT_FREE ( entry -> string )		3625170	0					
ANR	3625263	Callee	FT_FREE		3625170	0					
ANR	3625264	Identifier	FT_FREE		3625170	0					
ANR	3625265	ArgumentList	entry -> string		3625170	1					
ANR	3625266	Argument	entry -> string		3625170	0					
ANR	3625267	PtrMemberAccess	entry -> string		3625170	0					
ANR	3625268	Identifier	entry		3625170	0					
ANR	3625269	Identifier	string		3625170	1					
ANR	3625270	ReturnStatement	return NULL ;	561:6:13468:13479	3625170	4	True				
ANR	3625271	Identifier	NULL		3625170	0					
ANR	3625272	ExpressionStatement	r = ( FT_String * ) result	564:4:13492:13514	3625170	8	True				
ANR	3625273	AssignmentExpression	r = ( FT_String * ) result		3625170	0		=			
ANR	3625274	Identifier	r		3625170	0					
ANR	3625275	CastExpression	( FT_String * ) result		3625170	1					
ANR	3625276	CastTarget	FT_String *		3625170	0					
ANR	3625277	Identifier	result		3625170	1					
ANR	3625278	ExpressionStatement	p = ( FT_Char * ) stream -> cursor	565:4:13520:13548	3625170	9	True				
ANR	3625279	AssignmentExpression	p = ( FT_Char * ) stream -> cursor		3625170	0		=			
ANR	3625280	Identifier	p		3625170	0					
ANR	3625281	CastExpression	( FT_Char * ) stream -> cursor		3625170	1					
ANR	3625282	CastTarget	FT_Char *		3625170	0					
ANR	3625283	PtrMemberAccess	stream -> cursor		3625170	1					
ANR	3625284	Identifier	stream		3625170	0					
ANR	3625285	Identifier	cursor		3625170	1					
ANR	3625286	ForStatement	"for ( len = entry -> stringLength ; len > 0 ; len -- , p ++ )"		3625170	10					
ANR	3625287	ForInit	len = entry -> stringLength ;	567:10:13561:13586	3625170	0	True				
ANR	3625288	AssignmentExpression	len = entry -> stringLength		3625170	0		=			
ANR	3625289	Identifier	len		3625170	0					
ANR	3625290	PtrMemberAccess	entry -> stringLength		3625170	1					
ANR	3625291	Identifier	entry		3625170	0					
ANR	3625292	Identifier	stringLength		3625170	1					
ANR	3625293	Condition	len > 0	567:37:13588:13594	3625170	1	True				
ANR	3625294	RelationalExpression	len > 0		3625170	0		>			
ANR	3625295	Identifier	len		3625170	0					
ANR	3625296	PrimaryExpression	0		3625170	1					
ANR	3625297	Expression	"len -- , p ++"	567:46:13597:13606	3625170	2	True				
ANR	3625298	PostIncDecOperationExpression	len --		3625170	0					
ANR	3625299	Identifier	len		3625170	0					
ANR	3625300	IncDec	--		3625170	1					
ANR	3625301	PostIncDecOperationExpression	p ++		3625170	1					
ANR	3625302	Identifier	p		3625170	0					
ANR	3625303	IncDec	++		3625170	1					
ANR	3625304	CompoundStatement		30:4:604:604	3625170	3					
ANR	3625305	IfStatement	if ( char_type ( * p ) )		3625170	0					
ANR	3625306	Condition	char_type ( * p )	569:11:13627:13641	3625170	0	True				
ANR	3625307	CallExpression	char_type ( * p )		3625170	0					
ANR	3625308	Callee	char_type		3625170	0					
ANR	3625309	Identifier	char_type		3625170	0					
ANR	3625310	ArgumentList	* p		3625170	1					
ANR	3625311	Argument	* p		3625170	0					
ANR	3625312	UnaryOperationExpression	* p		3625170	0					
ANR	3625313	UnaryOperator	*		3625170	0					
ANR	3625314	Identifier	p		3625170	1					
ANR	3625315	ExpressionStatement	* r ++ = * p	570:8:13653:13662	3625170	1	True				
ANR	3625316	AssignmentExpression	* r ++ = * p		3625170	0		=			
ANR	3625317	UnaryOperationExpression	* r ++		3625170	0					
ANR	3625318	UnaryOperator	*		3625170	0					
ANR	3625319	PostIncDecOperationExpression	r ++		3625170	1					
ANR	3625320	Identifier	r		3625170	0					
ANR	3625321	IncDec	++		3625170	1					
ANR	3625322	UnaryOperationExpression	* p		3625170	1					
ANR	3625323	UnaryOperator	*		3625170	0					
ANR	3625324	Identifier	p		3625170	1					
ANR	3625325	ElseStatement	else		3625170	0					
ANR	3625326	CompoundStatement		34:6:671:671	3625170	0					
ANR	3625327	IfStatement	if ( report_invalid_characters )		3625170	0					
ANR	3625328	Condition	report_invalid_characters	573:13:13696:13720	3625170	0	True				
ANR	3625329	Identifier	report_invalid_characters		3625170	0					
ANR	3625330	CompoundStatement		36:8:722:722	3625170	1					
ANR	3625331	Statement	FT_TRACE0	575:10:13744:13752	3625170	0	True				
ANR	3625332	Statement	(	575:19:13753:13753	3625170	1	True				
ANR	3625333	Statement	(	575:20:13754:13754	3625170	2	True				
ANR	3625334	Statement	"""get_apple_string:"""	575:22:13756:13774	3625170	3	True				
ANR	3625335	Statement	""" Character `%c' (0x%X) invalid in PS name string\\n"""	576:22:13798:13849	3625170	4	True				
ANR	3625336	Statement	","	576:74:13850:13850	3625170	5	True				
ANR	3625337	Statement	*	577:22:13874:13874	3625170	6	True				
ANR	3625338	Statement	p	577:23:13875:13875	3625170	7	True				
ANR	3625339	Statement	","	577:24:13876:13876	3625170	8	True				
ANR	3625340	Statement	*	577:26:13878:13878	3625170	9	True				
ANR	3625341	Statement	p	577:27:13879:13879	3625170	10	True				
ANR	3625342	Statement	)	577:29:13881:13881	3625170	11	True				
ANR	3625343	Statement	)	577:30:13882:13882	3625170	12	True				
ANR	3625344	ExpressionStatement		577:31:13883:13883	3625170	13	True				
ANR	3625345	ExpressionStatement	* r ++ = * p	579:10:13963:13972	3625170	14	True				
ANR	3625346	AssignmentExpression	* r ++ = * p		3625170	0		=			
ANR	3625347	UnaryOperationExpression	* r ++		3625170	0					
ANR	3625348	UnaryOperator	*		3625170	0					
ANR	3625349	PostIncDecOperationExpression	r ++		3625170	1					
ANR	3625350	Identifier	r		3625170	0					
ANR	3625351	IncDec	++		3625170	1					
ANR	3625352	UnaryOperationExpression	* p		3625170	1					
ANR	3625353	UnaryOperator	*		3625170	0					
ANR	3625354	Identifier	p		3625170	1					
ANR	3625355	ExpressionStatement	* r = '\\0'	583:4:14002:14011	3625170	11	True				
ANR	3625356	AssignmentExpression	* r = '\\0'		3625170	0		=			
ANR	3625357	UnaryOperationExpression	* r		3625170	0					
ANR	3625358	UnaryOperator	*		3625170	0					
ANR	3625359	Identifier	r		3625170	1					
ANR	3625360	PrimaryExpression	'\\0'		3625170	1					
ANR	3625361	ExpressionStatement	FT_FRAME_EXIT ( )	585:4:14018:14033	3625170	12	True				
ANR	3625362	CallExpression	FT_FRAME_EXIT ( )		3625170	0					
ANR	3625363	Callee	FT_FRAME_EXIT		3625170	0					
ANR	3625364	Identifier	FT_FRAME_EXIT		3625170	0					
ANR	3625365	ArgumentList			3625170	1					
ANR	3625366	ReturnStatement	return result ;	587:4:14040:14053	3625170	13	True				
ANR	3625367	Identifier	result		3625170	0					
ANR	3625368	ReturnType	static char *		3625170	1					
ANR	3625369	Identifier	get_apple_string		3625170	2					
ANR	3625370	ParameterList	"FT_Memory memory , FT_Stream stream , TT_Name entry , char_type_func char_type , FT_Bool report_invalid_characters"		3625170	3					
ANR	3625371	Parameter	FT_Memory memory	534:20:12785:12806	3625170	0	True				
ANR	3625372	ParameterType	FT_Memory		3625170	0					
ANR	3625373	Identifier	memory		3625170	1					
ANR	3625374	Parameter	FT_Stream stream	535:20:12829:12850	3625170	1	True				
ANR	3625375	ParameterType	FT_Stream		3625170	0					
ANR	3625376	Identifier	stream		3625170	1					
ANR	3625377	Parameter	TT_Name entry	536:20:12873:12893	3625170	2	True				
ANR	3625378	ParameterType	TT_Name		3625170	0					
ANR	3625379	Identifier	entry		3625170	1					
ANR	3625380	Parameter	char_type_func char_type	537:20:12916:12940	3625170	3	True				
ANR	3625381	ParameterType	char_type_func		3625170	0					
ANR	3625382	Identifier	char_type		3625170	1					
ANR	3625383	Parameter	FT_Bool report_invalid_characters	538:20:12963:13003	3625170	4	True				
ANR	3625384	ParameterType	FT_Bool		3625170	0					
ANR	3625385	Identifier	report_invalid_characters		3625170	1					
ANR	3625386	CFGEntryNode	ENTRY		3625170		True				
ANR	3625387	CFGExitNode	EXIT		3625170		True				
ANR	3625388	Symbol	FT_STREAM_SEEK		3625170						
ANR	3625389	Symbol	FT_FRAME_ENTER		3625170						
ANR	3625390	Symbol	memory		3625170						
ANR	3625391	Symbol	NULL		3625170						
ANR	3625392	Symbol	char_type		3625170						
ANR	3625393	Symbol	FT_Err_Ok		3625170						
ANR	3625394	Symbol	report_invalid_characters		3625170						
ANR	3625395	Symbol	* r ++		3625170						
ANR	3625396	Symbol	error		3625170						
ANR	3625397	Symbol	result		3625170						
ANR	3625398	Symbol	p		3625170						
ANR	3625399	Symbol	entry		3625170						
ANR	3625400	Symbol	r		3625170						
ANR	3625401	Symbol	len		3625170						
ANR	3625402	Symbol	stream		3625170						
ANR	3625403	Symbol	FT_ALLOC		3625170						
ANR	3625404	Symbol	entry -> stringOffset		3625170						
ANR	3625405	Symbol	stream -> cursor		3625170						
ANR	3625406	Symbol	* stream		3625170						
ANR	3625407	Symbol	entry -> string		3625170						
ANR	3625408	Symbol	* p		3625170						
ANR	3625409	Symbol	* r		3625170						
ANR	3625410	Symbol	entry -> stringLength		3625170						
ANR	3625411	Symbol	* entry		3625170						
ANR	3625412	Function	sfnt_get_name_id	591:2:14063:14616							
ANR	3625413	FunctionDef	"sfnt_get_name_id (TT_Face face , FT_UShort id , FT_Int * win , FT_Int * apple)"		3625412	0					
ANR	3625414	CompoundStatement		596:2:14227:14616	3625412	0					
ANR	3625415	IdentifierDeclStatement	FT_Int n ;	597:4:14233:14242	3625412	0	True				
ANR	3625416	IdentifierDecl	n		3625412	0					
ANR	3625417	IdentifierDeclType	FT_Int		3625412	0					
ANR	3625418	Identifier	n		3625412	1					
ANR	3625419	ExpressionStatement	* win = - 1	600:4:14250:14261	3625412	1	True				
ANR	3625420	AssignmentExpression	* win = - 1		3625412	0		=			
ANR	3625421	UnaryOperationExpression	* win		3625412	0					
ANR	3625422	UnaryOperator	*		3625412	0					
ANR	3625423	Identifier	win		3625412	1					
ANR	3625424	UnaryOperationExpression	- 1		3625412	1					
ANR	3625425	UnaryOperator	-		3625412	0					
ANR	3625426	PrimaryExpression	1		3625412	1					
ANR	3625427	ExpressionStatement	* apple = - 1	601:4:14267:14278	3625412	2	True				
ANR	3625428	AssignmentExpression	* apple = - 1		3625412	0		=			
ANR	3625429	UnaryOperationExpression	* apple		3625412	0					
ANR	3625430	UnaryOperator	*		3625412	0					
ANR	3625431	Identifier	apple		3625412	1					
ANR	3625432	UnaryOperationExpression	- 1		3625412	1					
ANR	3625433	UnaryOperator	-		3625412	0					
ANR	3625434	PrimaryExpression	1		3625412	1					
ANR	3625435	ForStatement	for ( n = 0 ; n < face -> num_names ; n ++ )		3625412	3					
ANR	3625436	ForInit	n = 0 ;	603:10:14291:14296	3625412	0	True				
ANR	3625437	AssignmentExpression	n = 0		3625412	0		=			
ANR	3625438	Identifier	n		3625412	0					
ANR	3625439	PrimaryExpression	0		3625412	1					
ANR	3625440	Condition	n < face -> num_names	603:17:14298:14316	3625412	1	True				
ANR	3625441	RelationalExpression	n < face -> num_names		3625412	0		<			
ANR	3625442	Identifier	n		3625412	0					
ANR	3625443	PtrMemberAccess	face -> num_names		3625412	1					
ANR	3625444	Identifier	face		3625412	0					
ANR	3625445	Identifier	num_names		3625412	1					
ANR	3625446	PostIncDecOperationExpression	n ++	603:38:14319:14321	3625412	2	True				
ANR	3625447	Identifier	n		3625412	0					
ANR	3625448	IncDec	++		3625412	1					
ANR	3625449	CompoundStatement		10:6:109:151	3625412	3					
ANR	3625450	IdentifierDeclStatement	TT_Name name = face -> name_table . names + n ;	605:6:14337:14379	3625412	0	True				
ANR	3625451	IdentifierDecl	name = face -> name_table . names + n		3625412	0					
ANR	3625452	IdentifierDeclType	TT_Name		3625412	0					
ANR	3625453	Identifier	name		3625412	1					
ANR	3625454	AssignmentExpression	name = face -> name_table . names + n		3625412	2		=			
ANR	3625455	Identifier	name		3625412	0					
ANR	3625456	AdditiveExpression	face -> name_table . names + n		3625412	1		+			
ANR	3625457	MemberAccess	face -> name_table . names		3625412	0					
ANR	3625458	PtrMemberAccess	face -> name_table		3625412	0					
ANR	3625459	Identifier	face		3625412	0					
ANR	3625460	Identifier	name_table		3625412	1					
ANR	3625461	Identifier	names		3625412	1					
ANR	3625462	Identifier	n		3625412	1					
ANR	3625463	IfStatement	if ( name -> nameID == id && name -> stringLength > 0 )		3625412	1					
ANR	3625464	Condition	name -> nameID == id && name -> stringLength > 0	608:11:14394:14437	3625412	0	True				
ANR	3625465	AndExpression	name -> nameID == id && name -> stringLength > 0		3625412	0		&&			
ANR	3625466	EqualityExpression	name -> nameID == id		3625412	0		==			
ANR	3625467	PtrMemberAccess	name -> nameID		3625412	0					
ANR	3625468	Identifier	name		3625412	0					
ANR	3625469	Identifier	nameID		3625412	1					
ANR	3625470	Identifier	id		3625412	1					
ANR	3625471	RelationalExpression	name -> stringLength > 0		3625412	1		>			
ANR	3625472	PtrMemberAccess	name -> stringLength		3625412	0					
ANR	3625473	Identifier	name		3625412	0					
ANR	3625474	Identifier	stringLength		3625412	1					
ANR	3625475	PrimaryExpression	0		3625412	1					
ANR	3625476	CompoundStatement		14:6:219:219	3625412	1					
ANR	3625477	IfStatement	if ( IS_WIN ( name ) )		3625412	0					
ANR	3625478	Condition	IS_WIN ( name )	610:13:14462:14475	3625412	0	True				
ANR	3625479	CallExpression	IS_WIN ( name )		3625412	0					
ANR	3625480	Callee	IS_WIN		3625412	0					
ANR	3625481	Identifier	IS_WIN		3625412	0					
ANR	3625482	ArgumentList	name		3625412	1					
ANR	3625483	Argument	name		3625412	0					
ANR	3625484	Identifier	name		3625412	0					
ANR	3625485	ExpressionStatement	* win = n	611:10:14489:14497	3625412	1	True				
ANR	3625486	AssignmentExpression	* win = n		3625412	0		=			
ANR	3625487	UnaryOperationExpression	* win		3625412	0					
ANR	3625488	UnaryOperator	*		3625412	0					
ANR	3625489	Identifier	win		3625412	1					
ANR	3625490	Identifier	n		3625412	1					
ANR	3625491	IfStatement	if ( IS_APPLE ( name ) )		3625412	1					
ANR	3625492	Condition	IS_APPLE ( name )	613:13:14513:14528	3625412	0	True				
ANR	3625493	CallExpression	IS_APPLE ( name )		3625412	0					
ANR	3625494	Callee	IS_APPLE		3625412	0					
ANR	3625495	Identifier	IS_APPLE		3625412	0					
ANR	3625496	ArgumentList	name		3625412	1					
ANR	3625497	Argument	name		3625412	0					
ANR	3625498	Identifier	name		3625412	0					
ANR	3625499	ExpressionStatement	* apple = n	614:10:14542:14552	3625412	1	True				
ANR	3625500	AssignmentExpression	* apple = n		3625412	0		=			
ANR	3625501	UnaryOperationExpression	* apple		3625412	0					
ANR	3625502	UnaryOperator	*		3625412	0					
ANR	3625503	Identifier	apple		3625412	1					
ANR	3625504	Identifier	n		3625412	1					
ANR	3625505	ReturnStatement	return ( * win >= 0 ) || ( * apple >= 0 ) ;	618:4:14573:14612	3625412	4	True				
ANR	3625506	OrExpression	( * win >= 0 ) || ( * apple >= 0 )		3625412	0		||			
ANR	3625507	RelationalExpression	* win >= 0		3625412	0		>=			
ANR	3625508	UnaryOperationExpression	* win		3625412	0					
ANR	3625509	UnaryOperator	*		3625412	0					
ANR	3625510	Identifier	win		3625412	1					
ANR	3625511	PrimaryExpression	0		3625412	1					
ANR	3625512	RelationalExpression	* apple >= 0		3625412	1		>=			
ANR	3625513	UnaryOperationExpression	* apple		3625412	0					
ANR	3625514	UnaryOperator	*		3625412	0					
ANR	3625515	Identifier	apple		3625412	1					
ANR	3625516	PrimaryExpression	0		3625412	1					
ANR	3625517	ReturnType	static FT_Bool		3625412	1					
ANR	3625518	Identifier	sfnt_get_name_id		3625412	2					
ANR	3625519	ParameterList	"TT_Face face , FT_UShort id , FT_Int * win , FT_Int * apple"		3625412	3					
ANR	3625520	Parameter	TT_Face face	592:20:14098:14112	3625412	0	True				
ANR	3625521	ParameterType	TT_Face		3625412	0					
ANR	3625522	Identifier	face		3625412	1					
ANR	3625523	Parameter	FT_UShort id	593:20:14135:14147	3625412	1	True				
ANR	3625524	ParameterType	FT_UShort		3625412	0					
ANR	3625525	Identifier	id		3625412	1					
ANR	3625526	Parameter	FT_Int * win	594:20:14170:14183	3625412	2	True				
ANR	3625527	ParameterType	FT_Int *		3625412	0					
ANR	3625528	Identifier	win		3625412	1					
ANR	3625529	Parameter	FT_Int * apple	595:20:14206:14221	3625412	3	True				
ANR	3625530	ParameterType	FT_Int *		3625412	0					
ANR	3625531	Identifier	apple		3625412	1					
ANR	3625532	CFGEntryNode	ENTRY		3625412		True				
ANR	3625533	CFGExitNode	EXIT		3625412		True				
ANR	3625534	Symbol	* name		3625412						
ANR	3625535	Symbol	* win		3625412						
ANR	3625536	Symbol	* apple		3625412						
ANR	3625537	Symbol	face -> num_names		3625412						
ANR	3625538	Symbol	IS_WIN		3625412						
ANR	3625539	Symbol	* face		3625412						
ANR	3625540	Symbol	n		3625412						
ANR	3625541	Symbol	apple		3625412						
ANR	3625542	Symbol	face		3625412						
ANR	3625543	Symbol	face -> name_table		3625412						
ANR	3625544	Symbol	name -> nameID		3625412						
ANR	3625545	Symbol	IS_APPLE		3625412						
ANR	3625546	Symbol	name		3625412						
ANR	3625547	Symbol	id		3625412						
ANR	3625548	Symbol	name -> stringLength		3625412						
ANR	3625549	Symbol	face -> name_table . names		3625412						
ANR	3625550	Symbol	win		3625412						
ANR	3625551	Function	fixed2float	651:2:15599:18155							
ANR	3625552	FunctionDef	"fixed2float (FT_Int fixed , char * buf)"		3625551	0					
ANR	3625553	CompoundStatement		654:2:15673:18155	3625551	0					
ANR	3625554	IdentifierDeclStatement	char * p ;	655:4:15679:15687	3625551	0	True				
ANR	3625555	IdentifierDecl	* p		3625551	0					
ANR	3625556	IdentifierDeclType	char *		3625551	0					
ANR	3625557	Identifier	p		3625551	1					
ANR	3625558	IdentifierDeclStatement	char * q ;	656:4:15693:15701	3625551	1	True				
ANR	3625559	IdentifierDecl	* q		3625551	0					
ANR	3625560	IdentifierDeclType	char *		3625551	0					
ANR	3625561	Identifier	q		3625551	1					
ANR	3625562	IdentifierDeclStatement	char tmp [ 5 ] ;	657:4:15707:15720	3625551	2	True				
ANR	3625563	IdentifierDecl	tmp [ 5 ]		3625551	0					
ANR	3625564	IdentifierDeclType	char [ 5 ]		3625551	0					
ANR	3625565	Identifier	tmp		3625551	1					
ANR	3625566	PrimaryExpression	5		3625551	2					
ANR	3625567	IdentifierDeclStatement	FT_Int int_part ;	659:4:15727:15743	3625551	3	True				
ANR	3625568	IdentifierDecl	int_part		3625551	0					
ANR	3625569	IdentifierDeclType	FT_Int		3625551	0					
ANR	3625570	Identifier	int_part		3625551	1					
ANR	3625571	IdentifierDeclStatement	FT_Int frac_part ;	660:4:15749:15766	3625551	4	True				
ANR	3625572	IdentifierDecl	frac_part		3625551	0					
ANR	3625573	IdentifierDeclType	FT_Int		3625551	0					
ANR	3625574	Identifier	frac_part		3625551	1					
ANR	3625575	IdentifierDeclStatement	FT_Int i ;	662:4:15773:15782	3625551	5	True				
ANR	3625576	IdentifierDecl	i		3625551	0					
ANR	3625577	IdentifierDeclType	FT_Int		3625551	0					
ANR	3625578	Identifier	i		3625551	1					
ANR	3625579	ExpressionStatement	p = buf	665:4:15790:15797	3625551	6	True				
ANR	3625580	AssignmentExpression	p = buf		3625551	0		=			
ANR	3625581	Identifier	p		3625551	0					
ANR	3625582	Identifier	buf		3625551	1					
ANR	3625583	IfStatement	if ( fixed == 0 )		3625551	7					
ANR	3625584	Condition	fixed == 0	667:9:15809:15818	3625551	0	True				
ANR	3625585	EqualityExpression	fixed == 0		3625551	0		==			
ANR	3625586	Identifier	fixed		3625551	0					
ANR	3625587	PrimaryExpression	0		3625551	1					
ANR	3625588	CompoundStatement		15:4:152:152	3625551	1					
ANR	3625589	ExpressionStatement	* p ++ = '0'	669:6:15834:15844	3625551	0	True				
ANR	3625590	AssignmentExpression	* p ++ = '0'		3625551	0		=			
ANR	3625591	UnaryOperationExpression	* p ++		3625551	0					
ANR	3625592	UnaryOperator	*		3625551	0					
ANR	3625593	PostIncDecOperationExpression	p ++		3625551	1					
ANR	3625594	Identifier	p		3625551	0					
ANR	3625595	IncDec	++		3625551	1					
ANR	3625596	PrimaryExpression	'0'		3625551	1					
ANR	3625597	ReturnStatement	return p ;	670:6:15852:15860	3625551	1	True				
ANR	3625598	Identifier	p		3625551	0					
ANR	3625599	IfStatement	if ( fixed < 0 )		3625551	8					
ANR	3625600	Condition	fixed < 0	673:9:15878:15886	3625551	0	True				
ANR	3625601	RelationalExpression	fixed < 0		3625551	0		<			
ANR	3625602	Identifier	fixed		3625551	0					
ANR	3625603	PrimaryExpression	0		3625551	1					
ANR	3625604	CompoundStatement		21:4:220:220	3625551	1					
ANR	3625605	ExpressionStatement	* p ++ = '-'	675:6:15902:15912	3625551	0	True				
ANR	3625606	AssignmentExpression	* p ++ = '-'		3625551	0		=			
ANR	3625607	UnaryOperationExpression	* p ++		3625551	0					
ANR	3625608	UnaryOperator	*		3625551	0					
ANR	3625609	PostIncDecOperationExpression	p ++		3625551	1					
ANR	3625610	Identifier	p		3625551	0					
ANR	3625611	IncDec	++		3625551	1					
ANR	3625612	PrimaryExpression	'-'		3625551	1					
ANR	3625613	ExpressionStatement	fixed = - fixed	676:6:15920:15934	3625551	1	True				
ANR	3625614	AssignmentExpression	fixed = - fixed		3625551	0		=			
ANR	3625615	Identifier	fixed		3625551	0					
ANR	3625616	UnaryOperationExpression	- fixed		3625551	1					
ANR	3625617	UnaryOperator	-		3625551	0					
ANR	3625618	Identifier	fixed		3625551	1					
ANR	3625619	ExpressionStatement	int_part = ( fixed >> 16 ) & 0xFFFF	679:4:15947:15983	3625551	9	True				
ANR	3625620	AssignmentExpression	int_part = ( fixed >> 16 ) & 0xFFFF		3625551	0		=			
ANR	3625621	Identifier	int_part		3625551	0					
ANR	3625622	BitAndExpression	( fixed >> 16 ) & 0xFFFF		3625551	1		&			
ANR	3625623	ShiftExpression	fixed >> 16		3625551	0		>>			
ANR	3625624	Identifier	fixed		3625551	0					
ANR	3625625	PrimaryExpression	16		3625551	1					
ANR	3625626	PrimaryExpression	0xFFFF		3625551	1					
ANR	3625627	ExpressionStatement	frac_part = fixed & 0xFFFF	680:4:15989:16015	3625551	10	True				
ANR	3625628	AssignmentExpression	frac_part = fixed & 0xFFFF		3625551	0		=			
ANR	3625629	Identifier	frac_part		3625551	0					
ANR	3625630	BitAndExpression	fixed & 0xFFFF		3625551	1		&			
ANR	3625631	Identifier	fixed		3625551	0					
ANR	3625632	PrimaryExpression	0xFFFF		3625551	1					
ANR	3625633	ExpressionStatement	q = tmp	683:4:16078:16085	3625551	11	True				
ANR	3625634	AssignmentExpression	q = tmp		3625551	0		=			
ANR	3625635	Identifier	q		3625551	0					
ANR	3625636	Identifier	tmp		3625551	1					
ANR	3625637	WhileStatement	while ( int_part > 0 )		3625551	12					
ANR	3625638	Condition	int_part > 0	684:12:16099:16110	3625551	0	True				
ANR	3625639	RelationalExpression	int_part > 0		3625551	0		>			
ANR	3625640	Identifier	int_part		3625551	0					
ANR	3625641	PrimaryExpression	0		3625551	1					
ANR	3625642	CompoundStatement		32:4:444:444	3625551	1					
ANR	3625643	ExpressionStatement	* q ++ = '0' + int_part % 10	686:6:16126:16157	3625551	0	True				
ANR	3625644	AssignmentExpression	* q ++ = '0' + int_part % 10		3625551	0		=			
ANR	3625645	UnaryOperationExpression	* q ++		3625551	0					
ANR	3625646	UnaryOperator	*		3625551	0					
ANR	3625647	PostIncDecOperationExpression	q ++		3625551	1					
ANR	3625648	Identifier	q		3625551	0					
ANR	3625649	IncDec	++		3625551	1					
ANR	3625650	AdditiveExpression	'0' + int_part % 10		3625551	1		+			
ANR	3625651	PrimaryExpression	'0'		3625551	0					
ANR	3625652	MultiplicativeExpression	int_part % 10		3625551	1		%			
ANR	3625653	Identifier	int_part		3625551	0					
ANR	3625654	PrimaryExpression	10		3625551	1					
ANR	3625655	ExpressionStatement	int_part /= 10	687:6:16165:16179	3625551	1	True				
ANR	3625656	AssignmentExpression	int_part /= 10		3625551	0		/=			
ANR	3625657	Identifier	int_part		3625551	0					
ANR	3625658	PrimaryExpression	10		3625551	1					
ANR	3625659	WhileStatement	while ( q > tmp )		3625551	13					
ANR	3625660	Condition	q > tmp	691:12:16249:16255	3625551	0	True				
ANR	3625661	RelationalExpression	q > tmp		3625551	0		>			
ANR	3625662	Identifier	q		3625551	0					
ANR	3625663	Identifier	tmp		3625551	1					
ANR	3625664	ExpressionStatement	* p ++ = * -- q	692:6:16265:16276	3625551	1	True				
ANR	3625665	AssignmentExpression	* p ++ = * -- q		3625551	0		=			
ANR	3625666	UnaryOperationExpression	* p ++		3625551	0					
ANR	3625667	UnaryOperator	*		3625551	0					
ANR	3625668	PostIncDecOperationExpression	p ++		3625551	1					
ANR	3625669	Identifier	p		3625551	0					
ANR	3625670	IncDec	++		3625551	1					
ANR	3625671	UnaryOperationExpression	* -- q		3625551	1					
ANR	3625672	UnaryOperator	*		3625551	0					
ANR	3625673	UnaryExpression	-- q		3625551	1					
ANR	3625674	IncDec	--		3625551	0					
ANR	3625675	Identifier	q		3625551	1					
ANR	3625676	IfStatement	if ( ! frac_part )		3625551	14					
ANR	3625677	Condition	! frac_part	694:9:16288:16297	3625551	0	True				
ANR	3625678	UnaryOperationExpression	! frac_part		3625551	0					
ANR	3625679	UnaryOperator	!		3625551	0					
ANR	3625680	Identifier	frac_part		3625551	1					
ANR	3625681	ReturnStatement	return p ;	695:6:16307:16315	3625551	1	True				
ANR	3625682	Identifier	p		3625551	0					
ANR	3625683	ExpressionStatement	q = p	698:4:16355:16363	3625551	15	True				
ANR	3625684	AssignmentExpression	q = p		3625551	0		=			
ANR	3625685	Identifier	q		3625551	0					
ANR	3625686	Identifier	p		3625551	1					
ANR	3625687	ExpressionStatement	* p ++ = '.'	699:4:16369:16379	3625551	16	True				
ANR	3625688	AssignmentExpression	* p ++ = '.'		3625551	0		=			
ANR	3625689	UnaryOperationExpression	* p ++		3625551	0					
ANR	3625690	UnaryOperator	*		3625551	0					
ANR	3625691	PostIncDecOperationExpression	p ++		3625551	1					
ANR	3625692	Identifier	p		3625551	0					
ANR	3625693	IncDec	++		3625551	1					
ANR	3625694	PrimaryExpression	'.'		3625551	1					
ANR	3625695	ExpressionStatement	frac_part = frac_part * 10 + 5	702:4:16411:16441	3625551	17	True				
ANR	3625696	AssignmentExpression	frac_part = frac_part * 10 + 5		3625551	0		=			
ANR	3625697	Identifier	frac_part		3625551	0					
ANR	3625698	AdditiveExpression	frac_part * 10 + 5		3625551	1		+			
ANR	3625699	MultiplicativeExpression	frac_part * 10		3625551	0		*			
ANR	3625700	Identifier	frac_part		3625551	0					
ANR	3625701	PrimaryExpression	10		3625551	1					
ANR	3625702	PrimaryExpression	5		3625551	1					
ANR	3625703	ForStatement	for ( i = 0 ; i < 5 ; i ++ )		3625551	18					
ANR	3625704	ForInit	i = 0 ;	705:10:16494:16499	3625551	0	True				
ANR	3625705	AssignmentExpression	i = 0		3625551	0		=			
ANR	3625706	Identifier	i		3625551	0					
ANR	3625707	PrimaryExpression	0		3625551	1					
ANR	3625708	Condition	i < 5	705:17:16501:16505	3625551	1	True				
ANR	3625709	RelationalExpression	i < 5		3625551	0		<			
ANR	3625710	Identifier	i		3625551	0					
ANR	3625711	PrimaryExpression	5		3625551	1					
ANR	3625712	PostIncDecOperationExpression	i ++	705:24:16508:16510	3625551	2	True				
ANR	3625713	Identifier	i		3625551	0					
ANR	3625714	IncDec	++		3625551	1					
ANR	3625715	CompoundStatement		53:4:844:844	3625551	3					
ANR	3625716	ExpressionStatement	* p ++ = '0' + ( char ) ( frac_part / 0x10000L )	707:6:16526:16569	3625551	0	True				
ANR	3625717	AssignmentExpression	* p ++ = '0' + ( char ) ( frac_part / 0x10000L )		3625551	0		=			
ANR	3625718	UnaryOperationExpression	* p ++		3625551	0					
ANR	3625719	UnaryOperator	*		3625551	0					
ANR	3625720	PostIncDecOperationExpression	p ++		3625551	1					
ANR	3625721	Identifier	p		3625551	0					
ANR	3625722	IncDec	++		3625551	1					
ANR	3625723	AdditiveExpression	'0' + ( char ) ( frac_part / 0x10000L )		3625551	1		+			
ANR	3625724	PrimaryExpression	'0'		3625551	0					
ANR	3625725	CastExpression	( char ) ( frac_part / 0x10000L )		3625551	1					
ANR	3625726	CastTarget	char		3625551	0					
ANR	3625727	MultiplicativeExpression	frac_part / 0x10000L		3625551	1		/			
ANR	3625728	Identifier	frac_part		3625551	0					
ANR	3625729	PrimaryExpression	0x10000L		3625551	1					
ANR	3625730	ExpressionStatement	frac_part %= 0x10000L	709:6:16578:16599	3625551	1	True				
ANR	3625731	AssignmentExpression	frac_part %= 0x10000L		3625551	0		%=			
ANR	3625732	Identifier	frac_part		3625551	0					
ANR	3625733	PrimaryExpression	0x10000L		3625551	1					
ANR	3625734	IfStatement	if ( ! frac_part )		3625551	2					
ANR	3625735	Condition	! frac_part	710:11:16612:16621	3625551	0	True				
ANR	3625736	UnaryOperationExpression	! frac_part		3625551	0					
ANR	3625737	UnaryOperator	!		3625551	0					
ANR	3625738	Identifier	frac_part		3625551	1					
ANR	3625739	BreakStatement	break ;	711:8:16633:16638	3625551	1	True				
ANR	3625740	ExpressionStatement	frac_part *= 10	713:6:16647:16662	3625551	3	True				
ANR	3625741	AssignmentExpression	frac_part *= 10		3625551	0		*=			
ANR	3625742	Identifier	frac_part		3625551	0					
ANR	3625743	PrimaryExpression	10		3625551	1					
ANR	3625744	ExpressionStatement	p --	735:4:17586:17589	3625551	19	True				
ANR	3625745	PostIncDecOperationExpression	p --		3625551	0					
ANR	3625746	Identifier	p		3625551	0					
ANR	3625747	IncDec	--		3625551	1					
ANR	3625748	IfStatement	if ( p - q == 5 )		3625551	20					
ANR	3625749	Condition	p - q == 5	736:9:17600:17609	3625551	0	True				
ANR	3625750	EqualityExpression	p - q == 5		3625551	0		==			
ANR	3625751	AdditiveExpression	p - q		3625551	0		-			
ANR	3625752	Identifier	p		3625551	0					
ANR	3625753	Identifier	q		3625551	1					
ANR	3625754	PrimaryExpression	5		3625551	1					
ANR	3625755	CompoundStatement		84:4:1963:1963	3625551	1					
ANR	3625756	IfStatement	if ( frac_part < 34480 * 10 && * p == '1' )		3625551	0					
ANR	3625757	Condition	frac_part < 34480 * 10 && * p == '1'	739:11:17718:17763	3625551	0	True				
ANR	3625758	AndExpression	frac_part < 34480 * 10 && * p == '1'		3625551	0		&&			
ANR	3625759	RelationalExpression	frac_part < 34480 * 10		3625551	0		<			
ANR	3625760	Identifier	frac_part		3625551	0					
ANR	3625761	MultiplicativeExpression	34480 * 10		3625551	1		*			
ANR	3625762	PrimaryExpression	34480		3625551	0					
ANR	3625763	PrimaryExpression	10		3625551	1					
ANR	3625764	EqualityExpression	* p == '1'		3625551	1		==			
ANR	3625765	UnaryOperationExpression	* p		3625551	0					
ANR	3625766	UnaryOperator	*		3625551	0					
ANR	3625767	Identifier	p		3625551	1					
ANR	3625768	PrimaryExpression	'1'		3625551	1					
ANR	3625769	ExpressionStatement	* p = '0'	741:8:17788:17796	3625551	1	True				
ANR	3625770	AssignmentExpression	* p = '0'		3625551	0		=			
ANR	3625771	UnaryOperationExpression	* p		3625551	0					
ANR	3625772	UnaryOperator	*		3625551	0					
ANR	3625773	Identifier	p		3625551	1					
ANR	3625774	PrimaryExpression	'0'		3625551	1					
ANR	3625775	ElseStatement	else		3625551	0					
ANR	3625776	IfStatement	if ( frac_part == 17232 * 10 && * p & 1 )		3625551	0					
ANR	3625777	Condition	frac_part == 17232 * 10 && * p & 1	744:16:17865:17913	3625551	0	True				
ANR	3625778	AndExpression	frac_part == 17232 * 10 && * p & 1		3625551	0		&&			
ANR	3625779	EqualityExpression	frac_part == 17232 * 10		3625551	0		==			
ANR	3625780	Identifier	frac_part		3625551	0					
ANR	3625781	MultiplicativeExpression	17232 * 10		3625551	1		*			
ANR	3625782	PrimaryExpression	17232		3625551	0					
ANR	3625783	PrimaryExpression	10		3625551	1					
ANR	3625784	BitAndExpression	* p & 1		3625551	1		&			
ANR	3625785	UnaryOperationExpression	* p		3625551	0					
ANR	3625786	UnaryOperator	*		3625551	0					
ANR	3625787	Identifier	p		3625551	1					
ANR	3625788	PrimaryExpression	1		3625551	1					
ANR	3625789	ExpressionStatement	* p -= 1	746:8:17942:17949	3625551	1	True				
ANR	3625790	AssignmentExpression	* p -= 1		3625551	0		-=			
ANR	3625791	UnaryOperationExpression	* p		3625551	0					
ANR	3625792	UnaryOperator	*		3625551	0					
ANR	3625793	Identifier	p		3625551	1					
ANR	3625794	PrimaryExpression	1		3625551	1					
ANR	3625795	ElseStatement	else		3625551	0					
ANR	3625796	IfStatement	if ( frac_part < 17232 * 10 && * p != '0' )		3625551	0					
ANR	3625797	Condition	frac_part < 17232 * 10 && * p != '0'	748:16:17968:18018	3625551	0	True				
ANR	3625798	AndExpression	frac_part < 17232 * 10 && * p != '0'		3625551	0		&&			
ANR	3625799	RelationalExpression	frac_part < 17232 * 10		3625551	0		<			
ANR	3625800	Identifier	frac_part		3625551	0					
ANR	3625801	MultiplicativeExpression	17232 * 10		3625551	1		*			
ANR	3625802	PrimaryExpression	17232		3625551	0					
ANR	3625803	PrimaryExpression	10		3625551	1					
ANR	3625804	EqualityExpression	* p != '0'		3625551	1		!=			
ANR	3625805	UnaryOperationExpression	* p		3625551	0					
ANR	3625806	UnaryOperator	*		3625551	0					
ANR	3625807	Identifier	p		3625551	1					
ANR	3625808	PrimaryExpression	'0'		3625551	1					
ANR	3625809	ExpressionStatement	* p -= 1	750:8:18043:18050	3625551	1	True				
ANR	3625810	AssignmentExpression	* p -= 1		3625551	0		-=			
ANR	3625811	UnaryOperationExpression	* p		3625551	0					
ANR	3625812	UnaryOperator	*		3625551	0					
ANR	3625813	Identifier	p		3625551	1					
ANR	3625814	PrimaryExpression	1		3625551	1					
ANR	3625815	WhileStatement	while ( * p == '0' )		3625551	21					
ANR	3625816	Condition	* p == '0'	754:12:18103:18111	3625551	0	True				
ANR	3625817	EqualityExpression	* p == '0'		3625551	0		==			
ANR	3625818	UnaryOperationExpression	* p		3625551	0					
ANR	3625819	UnaryOperator	*		3625551	0					
ANR	3625820	Identifier	p		3625551	1					
ANR	3625821	PrimaryExpression	'0'		3625551	1					
ANR	3625822	ExpressionStatement	* p -- = '\\0'	755:6:18121:18132	3625551	1	True				
ANR	3625823	AssignmentExpression	* p -- = '\\0'		3625551	0		=			
ANR	3625824	UnaryOperationExpression	* p --		3625551	0					
ANR	3625825	UnaryOperator	*		3625551	0					
ANR	3625826	PostIncDecOperationExpression	p --		3625551	1					
ANR	3625827	Identifier	p		3625551	0					
ANR	3625828	IncDec	--		3625551	1					
ANR	3625829	PrimaryExpression	'\\0'		3625551	1					
ANR	3625830	ReturnStatement	return p + 1 ;	757:4:18139:18151	3625551	22	True				
ANR	3625831	AdditiveExpression	p + 1		3625551	0		+			
ANR	3625832	Identifier	p		3625551	0					
ANR	3625833	PrimaryExpression	1		3625551	1					
ANR	3625834	ReturnType	static char *		3625551	1					
ANR	3625835	Identifier	fixed2float		3625551	2					
ANR	3625836	ParameterList	"FT_Int fixed , char * buf"		3625551	3					
ANR	3625837	Parameter	FT_Int fixed	652:15:15627:15639	3625551	0	True				
ANR	3625838	ParameterType	FT_Int		3625551	0					
ANR	3625839	Identifier	fixed		3625551	1					
ANR	3625840	Parameter	char * buf	653:15:15657:15667	3625551	1	True				
ANR	3625841	ParameterType	char *		3625551	0					
ANR	3625842	Identifier	buf		3625551	1					
ANR	3625843	CFGEntryNode	ENTRY		3625551		True				
ANR	3625844	CFGExitNode	EXIT		3625551		True				
ANR	3625845	Symbol	frac_part		3625551						
ANR	3625846	Symbol	* -- q		3625551						
ANR	3625847	Symbol	* p ++		3625551						
ANR	3625848	Symbol	* q ++		3625551						
ANR	3625849	Symbol	* p --		3625551						
ANR	3625850	Symbol	int_part		3625551						
ANR	3625851	Symbol	i		3625551						
ANR	3625852	Symbol	p		3625551						
ANR	3625853	Symbol	q		3625551						
ANR	3625854	Symbol	buf		3625551						
ANR	3625855	Symbol	tmp		3625551						
ANR	3625856	Symbol	fixed		3625551						
ANR	3625857	Symbol	* p		3625551						
ANR	3625858	Symbol	* q		3625551						
ANR	3625859	DeclStmt									
ANR	3625860	Decl							const char	const char [ 16 ]	hexdigits
ANR	3625861	Function	sfnt_get_var_ps_name	768:2:18296:25400							
ANR	3625862	FunctionDef	sfnt_get_var_ps_name (TT_Face face)		3625861	0					
ANR	3625863	CompoundStatement		770:2:18357:25400	3625861	0					
ANR	3625864	IdentifierDeclStatement	FT_Error error ;	771:4:18363:18379	3625861	0	True				
ANR	3625865	IdentifierDecl	error		3625861	0					
ANR	3625866	IdentifierDeclType	FT_Error		3625861	0					
ANR	3625867	Identifier	error		3625861	1					
ANR	3625868	IdentifierDeclStatement	FT_Memory memory = face -> root . memory ;	772:4:18385:18422	3625861	1	True				
ANR	3625869	IdentifierDecl	memory = face -> root . memory		3625861	0					
ANR	3625870	IdentifierDeclType	FT_Memory		3625861	0					
ANR	3625871	Identifier	memory		3625861	1					
ANR	3625872	AssignmentExpression	memory = face -> root . memory		3625861	2		=			
ANR	3625873	Identifier	memory		3625861	0					
ANR	3625874	MemberAccess	face -> root . memory		3625861	1					
ANR	3625875	PtrMemberAccess	face -> root		3625861	0					
ANR	3625876	Identifier	face		3625861	0					
ANR	3625877	Identifier	root		3625861	1					
ANR	3625878	Identifier	memory		3625861	1					
ANR	3625879	IdentifierDeclStatement	FT_Service_MultiMasters mm = ( FT_Service_MultiMasters ) face -> mm ;	774:4:18429:18492	3625861	2	True				
ANR	3625880	IdentifierDecl	mm = ( FT_Service_MultiMasters ) face -> mm		3625861	0					
ANR	3625881	IdentifierDeclType	FT_Service_MultiMasters		3625861	0					
ANR	3625882	Identifier	mm		3625861	1					
ANR	3625883	AssignmentExpression	mm = ( FT_Service_MultiMasters ) face -> mm		3625861	2		=			
ANR	3625884	Identifier	mm		3625861	0					
ANR	3625885	CastExpression	( FT_Service_MultiMasters ) face -> mm		3625861	1					
ANR	3625886	CastTarget	FT_Service_MultiMasters		3625861	0					
ANR	3625887	PtrMemberAccess	face -> mm		3625861	1					
ANR	3625888	Identifier	face		3625861	0					
ANR	3625889	Identifier	mm		3625861	1					
ANR	3625890	IdentifierDeclStatement	FT_UInt num_coords ;	776:4:18499:18521	3625861	3	True				
ANR	3625891	IdentifierDecl	num_coords		3625861	0					
ANR	3625892	IdentifierDeclType	FT_UInt		3625861	0					
ANR	3625893	Identifier	num_coords		3625861	1					
ANR	3625894	IdentifierDeclStatement	FT_Fixed * coords ;	777:4:18527:18545	3625861	4	True				
ANR	3625895	IdentifierDecl	* coords		3625861	0					
ANR	3625896	IdentifierDeclType	FT_Fixed *		3625861	0					
ANR	3625897	Identifier	coords		3625861	1					
ANR	3625898	IdentifierDeclStatement	FT_MM_Var * mm_var ;	778:4:18551:18569	3625861	5	True				
ANR	3625899	IdentifierDecl	* mm_var		3625861	0					
ANR	3625900	IdentifierDeclType	FT_MM_Var *		3625861	0					
ANR	3625901	Identifier	mm_var		3625861	1					
ANR	3625902	IdentifierDeclStatement	"FT_Int found , win , apple ;"	780:4:18576:18602	3625861	6	True				
ANR	3625903	IdentifierDecl	found		3625861	0					
ANR	3625904	IdentifierDeclType	FT_Int		3625861	0					
ANR	3625905	Identifier	found		3625861	1					
ANR	3625906	IdentifierDecl	win		3625861	1					
ANR	3625907	IdentifierDeclType	FT_Int		3625861	0					
ANR	3625908	Identifier	win		3625861	1					
ANR	3625909	IdentifierDecl	apple		3625861	2					
ANR	3625910	IdentifierDeclType	FT_Int		3625861	0					
ANR	3625911	Identifier	apple		3625861	1					
ANR	3625912	IdentifierDeclStatement	"FT_UInt i , j ;"	781:4:18608:18621	3625861	7	True				
ANR	3625913	IdentifierDecl	i		3625861	0					
ANR	3625914	IdentifierDeclType	FT_UInt		3625861	0					
ANR	3625915	Identifier	i		3625861	1					
ANR	3625916	IdentifierDecl	j		3625861	1					
ANR	3625917	IdentifierDeclType	FT_UInt		3625861	0					
ANR	3625918	Identifier	j		3625861	1					
ANR	3625919	IdentifierDeclStatement	char * result = NULL ;	783:4:18628:18648	3625861	8	True				
ANR	3625920	IdentifierDecl	* result = NULL		3625861	0					
ANR	3625921	IdentifierDeclType	char *		3625861	0					
ANR	3625922	Identifier	result		3625861	1					
ANR	3625923	AssignmentExpression	* result = NULL		3625861	2		=			
ANR	3625924	Identifier	NULL		3625861	0					
ANR	3625925	Identifier	NULL		3625861	1					
ANR	3625926	IdentifierDeclStatement	char * p ;	784:4:18654:18662	3625861	9	True				
ANR	3625927	IdentifierDecl	* p		3625861	0					
ANR	3625928	IdentifierDeclType	char *		3625861	0					
ANR	3625929	Identifier	p		3625861	1					
ANR	3625930	IfStatement	if ( ! face -> var_postscript_prefix )		3625861	10					
ANR	3625931	Condition	! face -> var_postscript_prefix	787:9:18675:18702	3625861	0	True				
ANR	3625932	UnaryOperationExpression	! face -> var_postscript_prefix		3625861	0					
ANR	3625933	UnaryOperator	!		3625861	0					
ANR	3625934	PtrMemberAccess	face -> var_postscript_prefix		3625861	1					
ANR	3625935	Identifier	face		3625861	0					
ANR	3625936	Identifier	var_postscript_prefix		3625861	1					
ANR	3625937	CompoundStatement		20:6:360:372	3625861	1					
ANR	3625938	IdentifierDeclStatement	FT_UInt len ;	789:6:18718:18730	3625861	0	True				
ANR	3625939	IdentifierDecl	len		3625861	0					
ANR	3625940	IdentifierDeclType	FT_UInt		3625861	0					
ANR	3625941	Identifier	len		3625861	1					
ANR	3625942	ExpressionStatement	"found = sfnt_get_name_id ( face , TT_NAME_ID_VARIATIONS_PREFIX , & win , & apple )"	793:6:18810:18982	3625861	1	True				
ANR	3625943	AssignmentExpression	"found = sfnt_get_name_id ( face , TT_NAME_ID_VARIATIONS_PREFIX , & win , & apple )"		3625861	0		=			
ANR	3625944	Identifier	found		3625861	0					
ANR	3625945	CallExpression	"sfnt_get_name_id ( face , TT_NAME_ID_VARIATIONS_PREFIX , & win , & apple )"		3625861	1					
ANR	3625946	Callee	sfnt_get_name_id		3625861	0					
ANR	3625947	Identifier	sfnt_get_name_id		3625861	0					
ANR	3625948	ArgumentList	face		3625861	1					
ANR	3625949	Argument	face		3625861	0					
ANR	3625950	Identifier	face		3625861	0					
ANR	3625951	Argument	TT_NAME_ID_VARIATIONS_PREFIX		3625861	1					
ANR	3625952	Identifier	TT_NAME_ID_VARIATIONS_PREFIX		3625861	0					
ANR	3625953	Argument	& win		3625861	2					
ANR	3625954	UnaryOperationExpression	& win		3625861	0					
ANR	3625955	UnaryOperator	&		3625861	0					
ANR	3625956	Identifier	win		3625861	1					
ANR	3625957	Argument	& apple		3625861	3					
ANR	3625958	UnaryOperationExpression	& apple		3625861	0					
ANR	3625959	UnaryOperator	&		3625861	0					
ANR	3625960	Identifier	apple		3625861	1					
ANR	3625961	IfStatement	if ( ! found )		3625861	2					
ANR	3625962	Condition	! found	797:11:18995:19000	3625861	0	True				
ANR	3625963	UnaryOperationExpression	! found		3625861	0					
ANR	3625964	UnaryOperator	!		3625861	0					
ANR	3625965	Identifier	found		3625861	1					
ANR	3625966	CompoundStatement		29:6:652:652	3625861	1					
ANR	3625967	ExpressionStatement	"found = sfnt_get_name_id ( face , TT_NAME_ID_TYPOGRAPHIC_FAMILY , & win , & apple )"	800:8:19076:19255	3625861	0	True				
ANR	3625968	AssignmentExpression	"found = sfnt_get_name_id ( face , TT_NAME_ID_TYPOGRAPHIC_FAMILY , & win , & apple )"		3625861	0		=			
ANR	3625969	Identifier	found		3625861	0					
ANR	3625970	CallExpression	"sfnt_get_name_id ( face , TT_NAME_ID_TYPOGRAPHIC_FAMILY , & win , & apple )"		3625861	1					
ANR	3625971	Callee	sfnt_get_name_id		3625861	0					
ANR	3625972	Identifier	sfnt_get_name_id		3625861	0					
ANR	3625973	ArgumentList	face		3625861	1					
ANR	3625974	Argument	face		3625861	0					
ANR	3625975	Identifier	face		3625861	0					
ANR	3625976	Argument	TT_NAME_ID_TYPOGRAPHIC_FAMILY		3625861	1					
ANR	3625977	Identifier	TT_NAME_ID_TYPOGRAPHIC_FAMILY		3625861	0					
ANR	3625978	Argument	& win		3625861	2					
ANR	3625979	UnaryOperationExpression	& win		3625861	0					
ANR	3625980	UnaryOperator	&		3625861	0					
ANR	3625981	Identifier	win		3625861	1					
ANR	3625982	Argument	& apple		3625861	3					
ANR	3625983	UnaryOperationExpression	& apple		3625861	0					
ANR	3625984	UnaryOperator	&		3625861	0					
ANR	3625985	Identifier	apple		3625861	1					
ANR	3625986	IfStatement	if ( ! found )		3625861	3					
ANR	3625987	Condition	! found	806:11:19277:19282	3625861	0	True				
ANR	3625988	UnaryOperationExpression	! found		3625861	0					
ANR	3625989	UnaryOperator	!		3625861	0					
ANR	3625990	Identifier	found		3625861	1					
ANR	3625991	CompoundStatement		38:6:934:934	3625861	1					
ANR	3625992	ExpressionStatement	"found = sfnt_get_name_id ( face , TT_NAME_ID_FONT_FAMILY , & win , & apple )"	811:8:19521:19693	3625861	0	True				
ANR	3625993	AssignmentExpression	"found = sfnt_get_name_id ( face , TT_NAME_ID_FONT_FAMILY , & win , & apple )"		3625861	0		=			
ANR	3625994	Identifier	found		3625861	0					
ANR	3625995	CallExpression	"sfnt_get_name_id ( face , TT_NAME_ID_FONT_FAMILY , & win , & apple )"		3625861	1					
ANR	3625996	Callee	sfnt_get_name_id		3625861	0					
ANR	3625997	Identifier	sfnt_get_name_id		3625861	0					
ANR	3625998	ArgumentList	face		3625861	1					
ANR	3625999	Argument	face		3625861	0					
ANR	3626000	Identifier	face		3625861	0					
ANR	3626001	Argument	TT_NAME_ID_FONT_FAMILY		3625861	1					
ANR	3626002	Identifier	TT_NAME_ID_FONT_FAMILY		3625861	0					
ANR	3626003	Argument	& win		3625861	2					
ANR	3626004	UnaryOperationExpression	& win		3625861	0					
ANR	3626005	UnaryOperator	&		3625861	0					
ANR	3626006	Identifier	win		3625861	1					
ANR	3626007	Argument	& apple		3625861	3					
ANR	3626008	UnaryOperationExpression	& apple		3625861	0					
ANR	3626009	UnaryOperator	&		3625861	0					
ANR	3626010	Identifier	apple		3625861	1					
ANR	3626011	IfStatement	if ( ! found )		3625861	4					
ANR	3626012	Condition	! found	817:11:19715:19720	3625861	0	True				
ANR	3626013	UnaryOperationExpression	! found		3625861	0					
ANR	3626014	UnaryOperator	!		3625861	0					
ANR	3626015	Identifier	found		3625861	1					
ANR	3626016	CompoundStatement		49:6:1372:1372	3625861	1					
ANR	3626017	Statement	FT_TRACE0	819:8:19740:19748	3625861	0	True				
ANR	3626018	Statement	(	819:17:19749:19749	3625861	1	True				
ANR	3626019	Statement	(	819:18:19750:19750	3625861	2	True				
ANR	3626020	Statement	"""sfnt_get_var_ps_name:"""	819:20:19752:19774	3625861	3	True				
ANR	3626021	Statement	""" Can't construct PS name prefix for font instances\\n"""	820:20:19796:19849	3625861	4	True				
ANR	3626022	Statement	)	820:75:19851:19851	3625861	5	True				
ANR	3626023	Statement	)	820:76:19852:19852	3625861	6	True				
ANR	3626024	ExpressionStatement		820:77:19853:19853	3625861	7	True				
ANR	3626025	ReturnStatement	return NULL ;	821:8:19863:19874	3625861	8	True				
ANR	3626026	Identifier	NULL		3625861	0					
ANR	3626027	IfStatement	if ( win != - 1 )		3625861	5					
ANR	3626028	Condition	win != - 1	825:11:19942:19950	3625861	0	True				
ANR	3626029	EqualityExpression	win != - 1		3625861	0		!=			
ANR	3626030	Identifier	win		3625861	0					
ANR	3626031	UnaryOperationExpression	- 1		3625861	1					
ANR	3626032	UnaryOperator	-		3625861	0					
ANR	3626033	PrimaryExpression	1		3625861	1					
ANR	3626034	ExpressionStatement	"result = get_win_string ( face -> root . memory , face -> name_table . stream , face -> name_table . names + win , sfnt_is_alphanumeric , 0 )"	826:8:19962:20218	3625861	1	True				
ANR	3626035	AssignmentExpression	"result = get_win_string ( face -> root . memory , face -> name_table . stream , face -> name_table . names + win , sfnt_is_alphanumeric , 0 )"		3625861	0		=			
ANR	3626036	Identifier	result		3625861	0					
ANR	3626037	CallExpression	"get_win_string ( face -> root . memory , face -> name_table . stream , face -> name_table . names + win , sfnt_is_alphanumeric , 0 )"		3625861	1					
ANR	3626038	Callee	get_win_string		3625861	0					
ANR	3626039	Identifier	get_win_string		3625861	0					
ANR	3626040	ArgumentList	face -> root . memory		3625861	1					
ANR	3626041	Argument	face -> root . memory		3625861	0					
ANR	3626042	MemberAccess	face -> root . memory		3625861	0					
ANR	3626043	PtrMemberAccess	face -> root		3625861	0					
ANR	3626044	Identifier	face		3625861	0					
ANR	3626045	Identifier	root		3625861	1					
ANR	3626046	Identifier	memory		3625861	1					
ANR	3626047	Argument	face -> name_table . stream		3625861	1					
ANR	3626048	MemberAccess	face -> name_table . stream		3625861	0					
ANR	3626049	PtrMemberAccess	face -> name_table		3625861	0					
ANR	3626050	Identifier	face		3625861	0					
ANR	3626051	Identifier	name_table		3625861	1					
ANR	3626052	Identifier	stream		3625861	1					
ANR	3626053	Argument	face -> name_table . names + win		3625861	2					
ANR	3626054	AdditiveExpression	face -> name_table . names + win		3625861	0		+			
ANR	3626055	MemberAccess	face -> name_table . names		3625861	0					
ANR	3626056	PtrMemberAccess	face -> name_table		3625861	0					
ANR	3626057	Identifier	face		3625861	0					
ANR	3626058	Identifier	name_table		3625861	1					
ANR	3626059	Identifier	names		3625861	1					
ANR	3626060	Identifier	win		3625861	1					
ANR	3626061	Argument	sfnt_is_alphanumeric		3625861	3					
ANR	3626062	Identifier	sfnt_is_alphanumeric		3625861	0					
ANR	3626063	Argument	0		3625861	4					
ANR	3626064	PrimaryExpression	0		3625861	0					
ANR	3626065	ElseStatement	else		3625861	0					
ANR	3626066	ExpressionStatement	"result = get_apple_string ( face -> root . memory , face -> name_table . stream , face -> name_table . names + apple , sfnt_is_alphanumeric , 0 )"	832:8:20239:20507	3625861	0	True				
ANR	3626067	AssignmentExpression	"result = get_apple_string ( face -> root . memory , face -> name_table . stream , face -> name_table . names + apple , sfnt_is_alphanumeric , 0 )"		3625861	0		=			
ANR	3626068	Identifier	result		3625861	0					
ANR	3626069	CallExpression	"get_apple_string ( face -> root . memory , face -> name_table . stream , face -> name_table . names + apple , sfnt_is_alphanumeric , 0 )"		3625861	1					
ANR	3626070	Callee	get_apple_string		3625861	0					
ANR	3626071	Identifier	get_apple_string		3625861	0					
ANR	3626072	ArgumentList	face -> root . memory		3625861	1					
ANR	3626073	Argument	face -> root . memory		3625861	0					
ANR	3626074	MemberAccess	face -> root . memory		3625861	0					
ANR	3626075	PtrMemberAccess	face -> root		3625861	0					
ANR	3626076	Identifier	face		3625861	0					
ANR	3626077	Identifier	root		3625861	1					
ANR	3626078	Identifier	memory		3625861	1					
ANR	3626079	Argument	face -> name_table . stream		3625861	1					
ANR	3626080	MemberAccess	face -> name_table . stream		3625861	0					
ANR	3626081	PtrMemberAccess	face -> name_table		3625861	0					
ANR	3626082	Identifier	face		3625861	0					
ANR	3626083	Identifier	name_table		3625861	1					
ANR	3626084	Identifier	stream		3625861	1					
ANR	3626085	Argument	face -> name_table . names + apple		3625861	2					
ANR	3626086	AdditiveExpression	face -> name_table . names + apple		3625861	0		+			
ANR	3626087	MemberAccess	face -> name_table . names		3625861	0					
ANR	3626088	PtrMemberAccess	face -> name_table		3625861	0					
ANR	3626089	Identifier	face		3625861	0					
ANR	3626090	Identifier	name_table		3625861	1					
ANR	3626091	Identifier	names		3625861	1					
ANR	3626092	Identifier	apple		3625861	1					
ANR	3626093	Argument	sfnt_is_alphanumeric		3625861	3					
ANR	3626094	Identifier	sfnt_is_alphanumeric		3625861	0					
ANR	3626095	Argument	0		3625861	4					
ANR	3626096	PrimaryExpression	0		3625861	0					
ANR	3626097	ExpressionStatement	len = ft_strlen ( result )	838:6:20516:20541	3625861	6	True				
ANR	3626098	AssignmentExpression	len = ft_strlen ( result )		3625861	0		=			
ANR	3626099	Identifier	len		3625861	0					
ANR	3626100	CallExpression	ft_strlen ( result )		3625861	1					
ANR	3626101	Callee	ft_strlen		3625861	0					
ANR	3626102	Identifier	ft_strlen		3625861	0					
ANR	3626103	ArgumentList	result		3625861	1					
ANR	3626104	Argument	result		3625861	0					
ANR	3626105	Identifier	result		3625861	0					
ANR	3626106	IfStatement	if ( len > MAX_PS_NAME_LEN - ( 1 + 32 + 3 ) )		3625861	7					
ANR	3626107	Condition	len > MAX_PS_NAME_LEN - ( 1 + 32 + 3 )	844:11:20859:20896	3625861	0	True				
ANR	3626108	RelationalExpression	len > MAX_PS_NAME_LEN - ( 1 + 32 + 3 )		3625861	0		>			
ANR	3626109	Identifier	len		3625861	0					
ANR	3626110	AdditiveExpression	MAX_PS_NAME_LEN - ( 1 + 32 + 3 )		3625861	1		-			
ANR	3626111	Identifier	MAX_PS_NAME_LEN		3625861	0					
ANR	3626112	AdditiveExpression	1 + 32 + 3		3625861	1		+			
ANR	3626113	PrimaryExpression	1		3625861	0					
ANR	3626114	AdditiveExpression	32 + 3		3625861	1		+			
ANR	3626115	PrimaryExpression	32		3625861	0					
ANR	3626116	PrimaryExpression	3		3625861	1					
ANR	3626117	CompoundStatement		76:6:2548:2548	3625861	1					
ANR	3626118	ExpressionStatement	len = MAX_PS_NAME_LEN - ( 1 + 32 + 3 )	846:8:20916:20962	3625861	0	True				
ANR	3626119	AssignmentExpression	len = MAX_PS_NAME_LEN - ( 1 + 32 + 3 )		3625861	0		=			
ANR	3626120	Identifier	len		3625861	0					
ANR	3626121	AdditiveExpression	MAX_PS_NAME_LEN - ( 1 + 32 + 3 )		3625861	1		-			
ANR	3626122	Identifier	MAX_PS_NAME_LEN		3625861	0					
ANR	3626123	AdditiveExpression	1 + 32 + 3		3625861	1		+			
ANR	3626124	PrimaryExpression	1		3625861	0					
ANR	3626125	AdditiveExpression	32 + 3		3625861	1		+			
ANR	3626126	PrimaryExpression	32		3625861	0					
ANR	3626127	PrimaryExpression	3		3625861	1					
ANR	3626128	ExpressionStatement	result [ len ] = '\\0'	847:8:20972:20990	3625861	1	True				
ANR	3626129	AssignmentExpression	result [ len ] = '\\0'		3625861	0		=			
ANR	3626130	ArrayIndexing	result [ len ]		3625861	0					
ANR	3626131	Identifier	result		3625861	0					
ANR	3626132	Identifier	len		3625861	1					
ANR	3626133	PrimaryExpression	'\\0'		3625861	1					
ANR	3626134	Statement	FT_TRACE0	849:8:21001:21009	3625861	2	True				
ANR	3626135	Statement	(	849:17:21010:21010	3625861	3	True				
ANR	3626136	Statement	(	849:18:21011:21011	3625861	4	True				
ANR	3626137	Statement	"""sfnt_get_var_ps_name:"""	849:20:21013:21035	3625861	5	True				
ANR	3626138	Statement	""" Shortening variation PS name prefix\\n"""	850:20:21057:21096	3625861	6	True				
ANR	3626139	Statement	"""                     """	851:20:21118:21140	3625861	7	True				
ANR	3626140	Statement	""" to %d characters\\n"""	852:20:21162:21182	3625861	8	True				
ANR	3626141	Statement	","	852:41:21183:21183	3625861	9	True				
ANR	3626142	Statement	len	852:43:21185:21187	3625861	10	True				
ANR	3626143	Statement	)	852:47:21189:21189	3625861	11	True				
ANR	3626144	Statement	)	852:48:21190:21190	3625861	12	True				
ANR	3626145	ExpressionStatement		852:49:21191:21191	3625861	13	True				
ANR	3626146	ExpressionStatement	face -> var_postscript_prefix = result	855:6:21208:21248	3625861	8	True				
ANR	3626147	AssignmentExpression	face -> var_postscript_prefix = result		3625861	0		=			
ANR	3626148	PtrMemberAccess	face -> var_postscript_prefix		3625861	0					
ANR	3626149	Identifier	face		3625861	0					
ANR	3626150	Identifier	var_postscript_prefix		3625861	1					
ANR	3626151	Identifier	result		3625861	1					
ANR	3626152	ExpressionStatement	face -> var_postscript_prefix_len = len	856:6:21256:21293	3625861	9	True				
ANR	3626153	AssignmentExpression	face -> var_postscript_prefix_len = len		3625861	0		=			
ANR	3626154	PtrMemberAccess	face -> var_postscript_prefix_len		3625861	0					
ANR	3626155	Identifier	face		3625861	0					
ANR	3626156	Identifier	var_postscript_prefix_len		3625861	1					
ANR	3626157	Identifier	len		3625861	1					
ANR	3626158	ExpressionStatement	"mm -> get_var_blend ( FT_FACE ( face ) , & num_coords , & coords , NULL , & mm_var )"	859:4:21306:21471	3625861	11	True				
ANR	3626159	CallExpression	"mm -> get_var_blend ( FT_FACE ( face ) , & num_coords , & coords , NULL , & mm_var )"		3625861	0					
ANR	3626160	Callee	mm -> get_var_blend		3625861	0					
ANR	3626161	PtrMemberAccess	mm -> get_var_blend		3625861	0					
ANR	3626162	Identifier	mm		3625861	0					
ANR	3626163	Identifier	get_var_blend		3625861	1					
ANR	3626164	ArgumentList	FT_FACE ( face )		3625861	1					
ANR	3626165	Argument	FT_FACE ( face )		3625861	0					
ANR	3626166	CallExpression	FT_FACE ( face )		3625861	0					
ANR	3626167	Callee	FT_FACE		3625861	0					
ANR	3626168	Identifier	FT_FACE		3625861	0					
ANR	3626169	ArgumentList	face		3625861	1					
ANR	3626170	Argument	face		3625861	0					
ANR	3626171	Identifier	face		3625861	0					
ANR	3626172	Argument	& num_coords		3625861	1					
ANR	3626173	UnaryOperationExpression	& num_coords		3625861	0					
ANR	3626174	UnaryOperator	&		3625861	0					
ANR	3626175	Identifier	num_coords		3625861	1					
ANR	3626176	Argument	& coords		3625861	2					
ANR	3626177	UnaryOperationExpression	& coords		3625861	0					
ANR	3626178	UnaryOperator	&		3625861	0					
ANR	3626179	Identifier	coords		3625861	1					
ANR	3626180	Argument	NULL		3625861	3					
ANR	3626181	Identifier	NULL		3625861	0					
ANR	3626182	Argument	& mm_var		3625861	4					
ANR	3626183	UnaryOperationExpression	& mm_var		3625861	0					
ANR	3626184	UnaryOperator	&		3625861	0					
ANR	3626185	Identifier	mm_var		3625861	1					
ANR	3626186	IfStatement	if ( FT_IS_NAMED_INSTANCE ( FT_FACE ( face ) ) && ! FT_IS_VARIATION ( FT_FACE ( face ) ) )		3625861	12					
ANR	3626187	Condition	FT_IS_NAMED_INSTANCE ( FT_FACE ( face ) ) && ! FT_IS_VARIATION ( FT_FACE ( face ) )	865:9:21483:21569	3625861	0	True				
ANR	3626188	AndExpression	FT_IS_NAMED_INSTANCE ( FT_FACE ( face ) ) && ! FT_IS_VARIATION ( FT_FACE ( face ) )		3625861	0		&&			
ANR	3626189	CallExpression	FT_IS_NAMED_INSTANCE ( FT_FACE ( face ) )		3625861	0					
ANR	3626190	Callee	FT_IS_NAMED_INSTANCE		3625861	0					
ANR	3626191	Identifier	FT_IS_NAMED_INSTANCE		3625861	0					
ANR	3626192	ArgumentList	FT_FACE ( face )		3625861	1					
ANR	3626193	Argument	FT_FACE ( face )		3625861	0					
ANR	3626194	CallExpression	FT_FACE ( face )		3625861	0					
ANR	3626195	Callee	FT_FACE		3625861	0					
ANR	3626196	Identifier	FT_FACE		3625861	0					
ANR	3626197	ArgumentList	face		3625861	1					
ANR	3626198	Argument	face		3625861	0					
ANR	3626199	Identifier	face		3625861	0					
ANR	3626200	UnaryOperationExpression	! FT_IS_VARIATION ( FT_FACE ( face ) )		3625861	1					
ANR	3626201	UnaryOperator	!		3625861	0					
ANR	3626202	CallExpression	FT_IS_VARIATION ( FT_FACE ( face ) )		3625861	1					
ANR	3626203	Callee	FT_IS_VARIATION		3625861	0					
ANR	3626204	Identifier	FT_IS_VARIATION		3625861	0					
ANR	3626205	ArgumentList	FT_FACE ( face )		3625861	1					
ANR	3626206	Argument	FT_FACE ( face )		3625861	0					
ANR	3626207	CallExpression	FT_FACE ( face )		3625861	0					
ANR	3626208	Callee	FT_FACE		3625861	0					
ANR	3626209	Identifier	FT_FACE		3625861	0					
ANR	3626210	ArgumentList	face		3625861	1					
ANR	3626211	Argument	face		3625861	0					
ANR	3626212	Identifier	face		3625861	0					
ANR	3626213	CompoundStatement		104:6:3428:3449	3625861	1					
ANR	3626214	IdentifierDeclStatement	SFNT_Service sfnt = ( SFNT_Service ) face -> sfnt ;	868:6:21589:21634	3625861	0	True				
ANR	3626215	IdentifierDecl	sfnt = ( SFNT_Service ) face -> sfnt		3625861	0					
ANR	3626216	IdentifierDeclType	SFNT_Service		3625861	0					
ANR	3626217	Identifier	sfnt		3625861	1					
ANR	3626218	AssignmentExpression	sfnt = ( SFNT_Service ) face -> sfnt		3625861	2		=			
ANR	3626219	Identifier	sfnt		3625861	0					
ANR	3626220	CastExpression	( SFNT_Service ) face -> sfnt		3625861	1					
ANR	3626221	CastTarget	SFNT_Service		3625861	0					
ANR	3626222	PtrMemberAccess	face -> sfnt		3625861	1					
ANR	3626223	Identifier	face		3625861	0					
ANR	3626224	Identifier	sfnt		3625861	1					
ANR	3626225	IdentifierDeclStatement	FT_Long instance = ( ( face -> root . face_index & 0x7FFF0000L ) >> 16 ) - 1 ;	870:6:21643:21716	3625861	1	True				
ANR	3626226	IdentifierDecl	instance = ( ( face -> root . face_index & 0x7FFF0000L ) >> 16 ) - 1		3625861	0					
ANR	3626227	IdentifierDeclType	FT_Long		3625861	0					
ANR	3626228	Identifier	instance		3625861	1					
ANR	3626229	AssignmentExpression	instance = ( ( face -> root . face_index & 0x7FFF0000L ) >> 16 ) - 1		3625861	2		=			
ANR	3626230	Identifier	instance		3625861	0					
ANR	3626231	AdditiveExpression	( ( face -> root . face_index & 0x7FFF0000L ) >> 16 ) - 1		3625861	1		-			
ANR	3626232	ShiftExpression	( face -> root . face_index & 0x7FFF0000L ) >> 16		3625861	0		>>			
ANR	3626233	BitAndExpression	face -> root . face_index & 0x7FFF0000L		3625861	0		&			
ANR	3626234	MemberAccess	face -> root . face_index		3625861	0					
ANR	3626235	PtrMemberAccess	face -> root		3625861	0					
ANR	3626236	Identifier	face		3625861	0					
ANR	3626237	Identifier	root		3625861	1					
ANR	3626238	Identifier	face_index		3625861	1					
ANR	3626239	PrimaryExpression	0x7FFF0000L		3625861	1					
ANR	3626240	PrimaryExpression	16		3625861	1					
ANR	3626241	PrimaryExpression	1		3625861	1					
ANR	3626242	IdentifierDeclStatement	FT_UInt psid = mm_var -> namedstyle [ instance ] . psid ;	871:6:21724:21777	3625861	2	True				
ANR	3626243	IdentifierDecl	psid = mm_var -> namedstyle [ instance ] . psid		3625861	0					
ANR	3626244	IdentifierDeclType	FT_UInt		3625861	0					
ANR	3626245	Identifier	psid		3625861	1					
ANR	3626246	AssignmentExpression	psid = mm_var -> namedstyle [ instance ] . psid		3625861	2		=			
ANR	3626247	Identifier	psid		3625861	0					
ANR	3626248	MemberAccess	mm_var -> namedstyle [ instance ] . psid		3625861	1					
ANR	3626249	ArrayIndexing	mm_var -> namedstyle [ instance ]		3625861	0					
ANR	3626250	PtrMemberAccess	mm_var -> namedstyle		3625861	0					
ANR	3626251	Identifier	mm_var		3625861	0					
ANR	3626252	Identifier	namedstyle		3625861	1					
ANR	3626253	Identifier	instance		3625861	1					
ANR	3626254	Identifier	psid		3625861	1					
ANR	3626255	IdentifierDeclStatement	char * ps_name = NULL ;	873:6:21786:21807	3625861	3	True				
ANR	3626256	IdentifierDecl	* ps_name = NULL		3625861	0					
ANR	3626257	IdentifierDeclType	char *		3625861	0					
ANR	3626258	Identifier	ps_name		3625861	1					
ANR	3626259	AssignmentExpression	* ps_name = NULL		3625861	2		=			
ANR	3626260	Identifier	NULL		3625861	0					
ANR	3626261	Identifier	NULL		3625861	1					
ANR	3626262	IfStatement	if ( psid == 6 || ( psid > 255 && psid < 32768 ) )		3625861	4					
ANR	3626263	Condition	psid == 6 || ( psid > 255 && psid < 32768 )	877:11:21898:21972	3625861	0	True				
ANR	3626264	OrExpression	psid == 6 || ( psid > 255 && psid < 32768 )		3625861	0		||			
ANR	3626265	EqualityExpression	psid == 6		3625861	0		==			
ANR	3626266	Identifier	psid		3625861	0					
ANR	3626267	PrimaryExpression	6		3625861	1					
ANR	3626268	AndExpression	psid > 255 && psid < 32768		3625861	1		&&			
ANR	3626269	RelationalExpression	psid > 255		3625861	0		>			
ANR	3626270	Identifier	psid		3625861	0					
ANR	3626271	PrimaryExpression	255		3625861	1					
ANR	3626272	RelationalExpression	psid < 32768		3625861	1		<			
ANR	3626273	Identifier	psid		3625861	0					
ANR	3626274	PrimaryExpression	32768		3625861	1					
ANR	3626275	ExpressionStatement	"( void ) sfnt -> get_name ( face , ( FT_UShort ) psid , & ps_name )"	879:8:21984:22039	3625861	1	True				
ANR	3626276	CastExpression	"( void ) sfnt -> get_name ( face , ( FT_UShort ) psid , & ps_name )"		3625861	0					
ANR	3626277	CastTarget	void		3625861	0					
ANR	3626278	CallExpression	"sfnt -> get_name ( face , ( FT_UShort ) psid , & ps_name )"		3625861	1					
ANR	3626279	Callee	sfnt -> get_name		3625861	0					
ANR	3626280	PtrMemberAccess	sfnt -> get_name		3625861	0					
ANR	3626281	Identifier	sfnt		3625861	0					
ANR	3626282	Identifier	get_name		3625861	1					
ANR	3626283	ArgumentList	face		3625861	1					
ANR	3626284	Argument	face		3625861	0					
ANR	3626285	Identifier	face		3625861	0					
ANR	3626286	Argument	( FT_UShort ) psid		3625861	1					
ANR	3626287	CastExpression	( FT_UShort ) psid		3625861	0					
ANR	3626288	CastTarget	FT_UShort		3625861	0					
ANR	3626289	Identifier	psid		3625861	1					
ANR	3626290	Argument	& ps_name		3625861	2					
ANR	3626291	UnaryOperationExpression	& ps_name		3625861	0					
ANR	3626292	UnaryOperator	&		3625861	0					
ANR	3626293	Identifier	ps_name		3625861	1					
ANR	3626294	IfStatement	if ( ps_name )		3625861	5					
ANR	3626295	Condition	ps_name	881:11:22053:22059	3625861	0	True				
ANR	3626296	Identifier	ps_name		3625861	0					
ANR	3626297	CompoundStatement		113:6:3711:3711	3625861	1					
ANR	3626298	ExpressionStatement	result = ps_name	883:8:22079:22095	3625861	0	True				
ANR	3626299	AssignmentExpression	result = ps_name		3625861	0		=			
ANR	3626300	Identifier	result		3625861	0					
ANR	3626301	Identifier	ps_name		3625861	1					
ANR	3626302	ExpressionStatement	p = result + ft_strlen ( result ) + 1	884:8:22105:22146	3625861	1	True				
ANR	3626303	AssignmentExpression	p = result + ft_strlen ( result ) + 1		3625861	0		=			
ANR	3626304	Identifier	p		3625861	0					
ANR	3626305	AdditiveExpression	result + ft_strlen ( result ) + 1		3625861	1		+			
ANR	3626306	Identifier	result		3625861	0					
ANR	3626307	AdditiveExpression	ft_strlen ( result ) + 1		3625861	1		+			
ANR	3626308	CallExpression	ft_strlen ( result )		3625861	0					
ANR	3626309	Callee	ft_strlen		3625861	0					
ANR	3626310	Identifier	ft_strlen		3625861	0					
ANR	3626311	ArgumentList	result		3625861	1					
ANR	3626312	Argument	result		3625861	0					
ANR	3626313	Identifier	result		3625861	0					
ANR	3626314	PrimaryExpression	1		3625861	1					
ANR	3626315	GotoStatement	goto check_length ;	886:8:22157:22174	3625861	2	True				
ANR	3626316	Identifier	check_length		3625861	0					
ANR	3626317	ElseStatement	else		3625861	0					
ANR	3626318	CompoundStatement		125:8:4011:4019	3625861	0					
ANR	3626319	IdentifierDeclStatement	FT_UInt strid = mm_var -> namedstyle [ instance ] . strid ;	891:8:22276:22327	3625861	0	True				
ANR	3626320	IdentifierDecl	strid = mm_var -> namedstyle [ instance ] . strid		3625861	0					
ANR	3626321	IdentifierDeclType	FT_UInt		3625861	0					
ANR	3626322	Identifier	strid		3625861	1					
ANR	3626323	AssignmentExpression	strid = mm_var -> namedstyle [ instance ] . strid		3625861	2		=			
ANR	3626324	Identifier	strid		3625861	0					
ANR	3626325	MemberAccess	mm_var -> namedstyle [ instance ] . strid		3625861	1					
ANR	3626326	ArrayIndexing	mm_var -> namedstyle [ instance ]		3625861	0					
ANR	3626327	PtrMemberAccess	mm_var -> namedstyle		3625861	0					
ANR	3626328	Identifier	mm_var		3625861	0					
ANR	3626329	Identifier	namedstyle		3625861	1					
ANR	3626330	Identifier	instance		3625861	1					
ANR	3626331	Identifier	strid		3625861	1					
ANR	3626332	IdentifierDeclStatement	char * subfamily_name ;	893:8:22338:22359	3625861	1	True				
ANR	3626333	IdentifierDecl	* subfamily_name		3625861	0					
ANR	3626334	IdentifierDeclType	char *		3625861	0					
ANR	3626335	Identifier	subfamily_name		3625861	1					
ANR	3626336	IdentifierDeclStatement	char * s ;	894:8:22369:22377	3625861	2	True				
ANR	3626337	IdentifierDecl	* s		3625861	0					
ANR	3626338	IdentifierDeclType	char *		3625861	0					
ANR	3626339	Identifier	s		3625861	1					
ANR	3626340	ExpressionStatement	"( void ) sfnt -> get_name ( face , ( FT_UShort ) strid , & subfamily_name )"	897:8:22389:22452	3625861	3	True				
ANR	3626341	CastExpression	"( void ) sfnt -> get_name ( face , ( FT_UShort ) strid , & subfamily_name )"		3625861	0					
ANR	3626342	CastTarget	void		3625861	0					
ANR	3626343	CallExpression	"sfnt -> get_name ( face , ( FT_UShort ) strid , & subfamily_name )"		3625861	1					
ANR	3626344	Callee	sfnt -> get_name		3625861	0					
ANR	3626345	PtrMemberAccess	sfnt -> get_name		3625861	0					
ANR	3626346	Identifier	sfnt		3625861	0					
ANR	3626347	Identifier	get_name		3625861	1					
ANR	3626348	ArgumentList	face		3625861	1					
ANR	3626349	Argument	face		3625861	0					
ANR	3626350	Identifier	face		3625861	0					
ANR	3626351	Argument	( FT_UShort ) strid		3625861	1					
ANR	3626352	CastExpression	( FT_UShort ) strid		3625861	0					
ANR	3626353	CastTarget	FT_UShort		3625861	0					
ANR	3626354	Identifier	strid		3625861	1					
ANR	3626355	Argument	& subfamily_name		3625861	2					
ANR	3626356	UnaryOperationExpression	& subfamily_name		3625861	0					
ANR	3626357	UnaryOperator	&		3625861	0					
ANR	3626358	Identifier	subfamily_name		3625861	1					
ANR	3626359	IfStatement	if ( ! subfamily_name )		3625861	4					
ANR	3626360	Condition	! subfamily_name	899:13:22468:22482	3625861	0	True				
ANR	3626361	UnaryOperationExpression	! subfamily_name		3625861	0					
ANR	3626362	UnaryOperator	!		3625861	0					
ANR	3626363	Identifier	subfamily_name		3625861	1					
ANR	3626364	CompoundStatement		131:8:4136:4136	3625861	1					
ANR	3626365	Statement	FT_TRACE1	901:10:22506:22514	3625861	0	True				
ANR	3626366	Statement	(	901:19:22515:22515	3625861	1	True				
ANR	3626367	Statement	(	901:20:22516:22516	3625861	2	True				
ANR	3626368	Statement	"""sfnt_get_var_ps_name:"""	901:22:22518:22540	3625861	3	True				
ANR	3626369	Statement	""" can't construct named instance PS name;\\n"""	902:22:22564:22607	3625861	4	True				
ANR	3626370	Statement	"""                     """	903:22:22631:22653	3625861	5	True				
ANR	3626371	Statement	""" trying to construct normal instance PS name\\n"""	904:22:22677:22724	3625861	6	True				
ANR	3626372	Statement	)	904:71:22726:22726	3625861	7	True				
ANR	3626373	Statement	)	904:72:22727:22727	3625861	8	True				
ANR	3626374	ExpressionStatement		904:73:22728:22728	3625861	9	True				
ANR	3626375	GotoStatement	goto construct_instance_name ;	905:10:22740:22768	3625861	10	True				
ANR	3626376	Identifier	construct_instance_name		3625861	0					
ANR	3626377	IfStatement	"if ( FT_ALLOC ( result , face -> var_postscript_prefix_len + 1 + ft_strlen ( subfamily_name ) + 1 ) )"		3625861	5					
ANR	3626378	Condition	"FT_ALLOC ( result , face -> var_postscript_prefix_len + 1 + ft_strlen ( subfamily_name ) + 1 )"	910:13:22936:23055	3625861	0	True				
ANR	3626379	CallExpression	"FT_ALLOC ( result , face -> var_postscript_prefix_len + 1 + ft_strlen ( subfamily_name ) + 1 )"		3625861	0					
ANR	3626380	Callee	FT_ALLOC		3625861	0					
ANR	3626381	Identifier	FT_ALLOC		3625861	0					
ANR	3626382	ArgumentList	result		3625861	1					
ANR	3626383	Argument	result		3625861	0					
ANR	3626384	Identifier	result		3625861	0					
ANR	3626385	Argument	face -> var_postscript_prefix_len + 1 + ft_strlen ( subfamily_name ) + 1		3625861	1					
ANR	3626386	AdditiveExpression	face -> var_postscript_prefix_len + 1 + ft_strlen ( subfamily_name ) + 1		3625861	0		+			
ANR	3626387	PtrMemberAccess	face -> var_postscript_prefix_len		3625861	0					
ANR	3626388	Identifier	face		3625861	0					
ANR	3626389	Identifier	var_postscript_prefix_len		3625861	1					
ANR	3626390	AdditiveExpression	1 + ft_strlen ( subfamily_name ) + 1		3625861	1		+			
ANR	3626391	PrimaryExpression	1		3625861	0					
ANR	3626392	AdditiveExpression	ft_strlen ( subfamily_name ) + 1		3625861	1		+			
ANR	3626393	CallExpression	ft_strlen ( subfamily_name )		3625861	0					
ANR	3626394	Callee	ft_strlen		3625861	0					
ANR	3626395	Identifier	ft_strlen		3625861	0					
ANR	3626396	ArgumentList	subfamily_name		3625861	1					
ANR	3626397	Argument	subfamily_name		3625861	0					
ANR	3626398	Identifier	subfamily_name		3625861	0					
ANR	3626399	PrimaryExpression	1		3625861	1					
ANR	3626400	ReturnStatement	return NULL ;	912:10:23069:23080	3625861	1	True				
ANR	3626401	Identifier	NULL		3625861	0					
ANR	3626402	ExpressionStatement	"ft_strcpy ( result , face -> var_postscript_prefix )"	914:8:23091:23139	3625861	6	True				
ANR	3626403	CallExpression	"ft_strcpy ( result , face -> var_postscript_prefix )"		3625861	0					
ANR	3626404	Callee	ft_strcpy		3625861	0					
ANR	3626405	Identifier	ft_strcpy		3625861	0					
ANR	3626406	ArgumentList	result		3625861	1					
ANR	3626407	Argument	result		3625861	0					
ANR	3626408	Identifier	result		3625861	0					
ANR	3626409	Argument	face -> var_postscript_prefix		3625861	1					
ANR	3626410	PtrMemberAccess	face -> var_postscript_prefix		3625861	0					
ANR	3626411	Identifier	face		3625861	0					
ANR	3626412	Identifier	var_postscript_prefix		3625861	1					
ANR	3626413	ExpressionStatement	p = result + face -> var_postscript_prefix_len	916:8:23150:23194	3625861	7	True				
ANR	3626414	AssignmentExpression	p = result + face -> var_postscript_prefix_len		3625861	0		=			
ANR	3626415	Identifier	p		3625861	0					
ANR	3626416	AdditiveExpression	result + face -> var_postscript_prefix_len		3625861	1		+			
ANR	3626417	Identifier	result		3625861	0					
ANR	3626418	PtrMemberAccess	face -> var_postscript_prefix_len		3625861	1					
ANR	3626419	Identifier	face		3625861	0					
ANR	3626420	Identifier	var_postscript_prefix_len		3625861	1					
ANR	3626421	ExpressionStatement	* p ++ = '-'	917:8:23204:23214	3625861	8	True				
ANR	3626422	AssignmentExpression	* p ++ = '-'		3625861	0		=			
ANR	3626423	UnaryOperationExpression	* p ++		3625861	0					
ANR	3626424	UnaryOperator	*		3625861	0					
ANR	3626425	PostIncDecOperationExpression	p ++		3625861	1					
ANR	3626426	Identifier	p		3625861	0					
ANR	3626427	IncDec	++		3625861	1					
ANR	3626428	PrimaryExpression	'-'		3625861	1					
ANR	3626429	ExpressionStatement	s = subfamily_name	919:8:23225:23243	3625861	9	True				
ANR	3626430	AssignmentExpression	s = subfamily_name		3625861	0		=			
ANR	3626431	Identifier	s		3625861	0					
ANR	3626432	Identifier	subfamily_name		3625861	1					
ANR	3626433	WhileStatement	while ( * s )		3625861	10					
ANR	3626434	Condition	* s	920:16:23261:23262	3625861	0	True				
ANR	3626435	UnaryOperationExpression	* s		3625861	0					
ANR	3626436	UnaryOperator	*		3625861	0					
ANR	3626437	Identifier	s		3625861	1					
ANR	3626438	CompoundStatement		152:8:4916:4916	3625861	1					
ANR	3626439	IfStatement	if ( ft_isalnum ( * s ) )		3625861	0					
ANR	3626440	Condition	ft_isalnum ( * s )	922:15:23291:23306	3625861	0	True				
ANR	3626441	CallExpression	ft_isalnum ( * s )		3625861	0					
ANR	3626442	Callee	ft_isalnum		3625861	0					
ANR	3626443	Identifier	ft_isalnum		3625861	0					
ANR	3626444	ArgumentList	* s		3625861	1					
ANR	3626445	Argument	* s		3625861	0					
ANR	3626446	UnaryOperationExpression	* s		3625861	0					
ANR	3626447	UnaryOperator	*		3625861	0					
ANR	3626448	Identifier	s		3625861	1					
ANR	3626449	ExpressionStatement	* p ++ = * s	923:12:23322:23331	3625861	1	True				
ANR	3626450	AssignmentExpression	* p ++ = * s		3625861	0		=			
ANR	3626451	UnaryOperationExpression	* p ++		3625861	0					
ANR	3626452	UnaryOperator	*		3625861	0					
ANR	3626453	PostIncDecOperationExpression	p ++		3625861	1					
ANR	3626454	Identifier	p		3625861	0					
ANR	3626455	IncDec	++		3625861	1					
ANR	3626456	UnaryOperationExpression	* s		3625861	1					
ANR	3626457	UnaryOperator	*		3625861	0					
ANR	3626458	Identifier	s		3625861	1					
ANR	3626459	ExpressionStatement	s ++	924:10:23343:23346	3625861	1	True				
ANR	3626460	PostIncDecOperationExpression	s ++		3625861	0					
ANR	3626461	Identifier	s		3625861	0					
ANR	3626462	IncDec	++		3625861	1					
ANR	3626463	ExpressionStatement	* p ++ = '\\0'	926:8:23366:23377	3625861	11	True				
ANR	3626464	AssignmentExpression	* p ++ = '\\0'		3625861	0		=			
ANR	3626465	UnaryOperationExpression	* p ++		3625861	0					
ANR	3626466	UnaryOperator	*		3625861	0					
ANR	3626467	PostIncDecOperationExpression	p ++		3625861	1					
ANR	3626468	Identifier	p		3625861	0					
ANR	3626469	IncDec	++		3625861	1					
ANR	3626470	PrimaryExpression	'\\0'		3625861	1					
ANR	3626471	ExpressionStatement	FT_FREE ( subfamily_name )	928:8:23388:23413	3625861	12	True				
ANR	3626472	CallExpression	FT_FREE ( subfamily_name )		3625861	0					
ANR	3626473	Callee	FT_FREE		3625861	0					
ANR	3626474	Identifier	FT_FREE		3625861	0					
ANR	3626475	ArgumentList	subfamily_name		3625861	1					
ANR	3626476	Argument	subfamily_name		3625861	0					
ANR	3626477	Identifier	subfamily_name		3625861	0					
ANR	3626478	ElseStatement	else		3625861	0					
ANR	3626479	CompoundStatement		164:6:5092:5110	3625861	0					
ANR	3626480	IdentifierDeclStatement	FT_Var_Axis * axis ;	933:6:23450:23468	3625861	0	True				
ANR	3626481	IdentifierDecl	* axis		3625861	0					
ANR	3626482	IdentifierDeclType	FT_Var_Axis *		3625861	0					
ANR	3626483	Identifier	axis		3625861	1					
ANR	3626484	Label	construct_instance_name :	936:4:23476:23499	3625861	1	True				
ANR	3626485	Identifier	construct_instance_name		3625861	0					
ANR	3626486	ExpressionStatement	axis = mm_var -> axis	937:6:23507:23526	3625861	2	True				
ANR	3626487	AssignmentExpression	axis = mm_var -> axis		3625861	0		=			
ANR	3626488	Identifier	axis		3625861	0					
ANR	3626489	PtrMemberAccess	mm_var -> axis		3625861	1					
ANR	3626490	Identifier	mm_var		3625861	0					
ANR	3626491	Identifier	axis		3625861	1					
ANR	3626492	IfStatement	"if ( FT_ALLOC ( result , face -> var_postscript_prefix_len + num_coords * MAX_VALUE_DESCRIPTOR_LEN + 1 ) )"		3625861	3					
ANR	3626493	Condition	"FT_ALLOC ( result , face -> var_postscript_prefix_len + num_coords * MAX_VALUE_DESCRIPTOR_LEN + 1 )"	939:11:23540:23678	3625861	0	True				
ANR	3626494	CallExpression	"FT_ALLOC ( result , face -> var_postscript_prefix_len + num_coords * MAX_VALUE_DESCRIPTOR_LEN + 1 )"		3625861	0					
ANR	3626495	Callee	FT_ALLOC		3625861	0					
ANR	3626496	Identifier	FT_ALLOC		3625861	0					
ANR	3626497	ArgumentList	result		3625861	1					
ANR	3626498	Argument	result		3625861	0					
ANR	3626499	Identifier	result		3625861	0					
ANR	3626500	Argument	face -> var_postscript_prefix_len + num_coords * MAX_VALUE_DESCRIPTOR_LEN + 1		3625861	1					
ANR	3626501	AdditiveExpression	face -> var_postscript_prefix_len + num_coords * MAX_VALUE_DESCRIPTOR_LEN + 1		3625861	0		+			
ANR	3626502	PtrMemberAccess	face -> var_postscript_prefix_len		3625861	0					
ANR	3626503	Identifier	face		3625861	0					
ANR	3626504	Identifier	var_postscript_prefix_len		3625861	1					
ANR	3626505	AdditiveExpression	num_coords * MAX_VALUE_DESCRIPTOR_LEN + 1		3625861	1		+			
ANR	3626506	MultiplicativeExpression	num_coords * MAX_VALUE_DESCRIPTOR_LEN		3625861	0		*			
ANR	3626507	Identifier	num_coords		3625861	0					
ANR	3626508	Identifier	MAX_VALUE_DESCRIPTOR_LEN		3625861	1					
ANR	3626509	PrimaryExpression	1		3625861	1					
ANR	3626510	ReturnStatement	return NULL ;	942:8:23690:23701	3625861	1	True				
ANR	3626511	Identifier	NULL		3625861	0					
ANR	3626512	ExpressionStatement	p = result	944:6:23710:23720	3625861	4	True				
ANR	3626513	AssignmentExpression	p = result		3625861	0		=			
ANR	3626514	Identifier	p		3625861	0					
ANR	3626515	Identifier	result		3625861	1					
ANR	3626516	ExpressionStatement	"ft_strcpy ( p , face -> var_postscript_prefix )"	946:6:23729:23772	3625861	5	True				
ANR	3626517	CallExpression	"ft_strcpy ( p , face -> var_postscript_prefix )"		3625861	0					
ANR	3626518	Callee	ft_strcpy		3625861	0					
ANR	3626519	Identifier	ft_strcpy		3625861	0					
ANR	3626520	ArgumentList	p		3625861	1					
ANR	3626521	Argument	p		3625861	0					
ANR	3626522	Identifier	p		3625861	0					
ANR	3626523	Argument	face -> var_postscript_prefix		3625861	1					
ANR	3626524	PtrMemberAccess	face -> var_postscript_prefix		3625861	0					
ANR	3626525	Identifier	face		3625861	0					
ANR	3626526	Identifier	var_postscript_prefix		3625861	1					
ANR	3626527	ExpressionStatement	p += face -> var_postscript_prefix_len	947:6:23780:23816	3625861	6	True				
ANR	3626528	AssignmentExpression	p += face -> var_postscript_prefix_len		3625861	0		+=			
ANR	3626529	Identifier	p		3625861	0					
ANR	3626530	PtrMemberAccess	face -> var_postscript_prefix_len		3625861	1					
ANR	3626531	Identifier	face		3625861	0					
ANR	3626532	Identifier	var_postscript_prefix_len		3625861	1					
ANR	3626533	ForStatement	"for ( i = 0 ; i < num_coords ; i ++ , coords ++ , axis ++ )"		3625861	7					
ANR	3626534	ForInit	i = 0 ;	949:12:23831:23836	3625861	0	True				
ANR	3626535	AssignmentExpression	i = 0		3625861	0		=			
ANR	3626536	Identifier	i		3625861	0					
ANR	3626537	PrimaryExpression	0		3625861	1					
ANR	3626538	Condition	i < num_coords	949:19:23838:23851	3625861	1	True				
ANR	3626539	RelationalExpression	i < num_coords		3625861	0		<			
ANR	3626540	Identifier	i		3625861	0					
ANR	3626541	Identifier	num_coords		3625861	1					
ANR	3626542	Expression	"i ++ , coords ++ , axis ++"	949:35:23854:23874	3625861	2	True				
ANR	3626543	PostIncDecOperationExpression	i ++		3625861	0					
ANR	3626544	Identifier	i		3625861	0					
ANR	3626545	IncDec	++		3625861	1					
ANR	3626546	Expression	"coords ++ , axis ++"		3625861	1					
ANR	3626547	PostIncDecOperationExpression	coords ++		3625861	0					
ANR	3626548	Identifier	coords		3625861	0					
ANR	3626549	IncDec	++		3625861	1					
ANR	3626550	PostIncDecOperationExpression	axis ++		3625861	1					
ANR	3626551	Identifier	axis		3625861	0					
ANR	3626552	IncDec	++		3625861	1					
ANR	3626553	CompoundStatement		182:8:5536:5543	3625861	3					
ANR	3626554	IdentifierDeclStatement	char t ;	951:8:23894:23901	3625861	0	True				
ANR	3626555	IdentifierDecl	t		3625861	0					
ANR	3626556	IdentifierDeclType	char		3625861	0					
ANR	3626557	Identifier	t		3625861	1					
ANR	3626558	IfStatement	if ( * coords == axis -> def )		3625861	1					
ANR	3626559	Condition	* coords == axis -> def	956:13:24038:24057	3625861	0	True				
ANR	3626560	EqualityExpression	* coords == axis -> def		3625861	0		==			
ANR	3626561	UnaryOperationExpression	* coords		3625861	0					
ANR	3626562	UnaryOperator	*		3625861	0					
ANR	3626563	Identifier	coords		3625861	1					
ANR	3626564	PtrMemberAccess	axis -> def		3625861	1					
ANR	3626565	Identifier	axis		3625861	0					
ANR	3626566	Identifier	def		3625861	1					
ANR	3626567	ContinueStatement	continue ;	957:10:24071:24079	3625861	1	True				
ANR	3626568	ExpressionStatement	* p ++ = '_'	959:8:24090:24100	3625861	2	True				
ANR	3626569	AssignmentExpression	* p ++ = '_'		3625861	0		=			
ANR	3626570	UnaryOperationExpression	* p ++		3625861	0					
ANR	3626571	UnaryOperator	*		3625861	0					
ANR	3626572	PostIncDecOperationExpression	p ++		3625861	1					
ANR	3626573	Identifier	p		3625861	0					
ANR	3626574	IncDec	++		3625861	1					
ANR	3626575	PrimaryExpression	'_'		3625861	1					
ANR	3626576	ExpressionStatement	"p = fixed2float ( * coords , p )"	960:8:24110:24142	3625861	3	True				
ANR	3626577	AssignmentExpression	"p = fixed2float ( * coords , p )"		3625861	0		=			
ANR	3626578	Identifier	p		3625861	0					
ANR	3626579	CallExpression	"fixed2float ( * coords , p )"		3625861	1					
ANR	3626580	Callee	fixed2float		3625861	0					
ANR	3626581	Identifier	fixed2float		3625861	0					
ANR	3626582	ArgumentList	* coords		3625861	1					
ANR	3626583	Argument	* coords		3625861	0					
ANR	3626584	UnaryOperationExpression	* coords		3625861	0					
ANR	3626585	UnaryOperator	*		3625861	0					
ANR	3626586	Identifier	coords		3625861	1					
ANR	3626587	Argument	p		3625861	1					
ANR	3626588	Identifier	p		3625861	0					
ANR	3626589	ExpressionStatement	t = ( char ) ( axis -> tag >> 24 )	962:8:24153:24182	3625861	4	True				
ANR	3626590	AssignmentExpression	t = ( char ) ( axis -> tag >> 24 )		3625861	0		=			
ANR	3626591	Identifier	t		3625861	0					
ANR	3626592	CastExpression	( char ) ( axis -> tag >> 24 )		3625861	1					
ANR	3626593	CastTarget	char		3625861	0					
ANR	3626594	ShiftExpression	axis -> tag >> 24		3625861	1		>>			
ANR	3626595	PtrMemberAccess	axis -> tag		3625861	0					
ANR	3626596	Identifier	axis		3625861	0					
ANR	3626597	Identifier	tag		3625861	1					
ANR	3626598	PrimaryExpression	24		3625861	1					
ANR	3626599	IfStatement	if ( t != ' ' && ft_isalnum ( t ) )		3625861	5					
ANR	3626600	Condition	t != ' ' && ft_isalnum ( t )	963:13:24197:24223	3625861	0	True				
ANR	3626601	AndExpression	t != ' ' && ft_isalnum ( t )		3625861	0		&&			
ANR	3626602	EqualityExpression	t != ' '		3625861	0		!=			
ANR	3626603	Identifier	t		3625861	0					
ANR	3626604	PrimaryExpression	' '		3625861	1					
ANR	3626605	CallExpression	ft_isalnum ( t )		3625861	1					
ANR	3626606	Callee	ft_isalnum		3625861	0					
ANR	3626607	Identifier	ft_isalnum		3625861	0					
ANR	3626608	ArgumentList	t		3625861	1					
ANR	3626609	Argument	t		3625861	0					
ANR	3626610	Identifier	t		3625861	0					
ANR	3626611	ExpressionStatement	* p ++ = t	964:10:24237:24245	3625861	1	True				
ANR	3626612	AssignmentExpression	* p ++ = t		3625861	0		=			
ANR	3626613	UnaryOperationExpression	* p ++		3625861	0					
ANR	3626614	UnaryOperator	*		3625861	0					
ANR	3626615	PostIncDecOperationExpression	p ++		3625861	1					
ANR	3626616	Identifier	p		3625861	0					
ANR	3626617	IncDec	++		3625861	1					
ANR	3626618	Identifier	t		3625861	1					
ANR	3626619	ExpressionStatement	t = ( char ) ( axis -> tag >> 16 )	965:8:24255:24284	3625861	6	True				
ANR	3626620	AssignmentExpression	t = ( char ) ( axis -> tag >> 16 )		3625861	0		=			
ANR	3626621	Identifier	t		3625861	0					
ANR	3626622	CastExpression	( char ) ( axis -> tag >> 16 )		3625861	1					
ANR	3626623	CastTarget	char		3625861	0					
ANR	3626624	ShiftExpression	axis -> tag >> 16		3625861	1		>>			
ANR	3626625	PtrMemberAccess	axis -> tag		3625861	0					
ANR	3626626	Identifier	axis		3625861	0					
ANR	3626627	Identifier	tag		3625861	1					
ANR	3626628	PrimaryExpression	16		3625861	1					
ANR	3626629	IfStatement	if ( t != ' ' && ft_isalnum ( t ) )		3625861	7					
ANR	3626630	Condition	t != ' ' && ft_isalnum ( t )	966:13:24299:24325	3625861	0	True				
ANR	3626631	AndExpression	t != ' ' && ft_isalnum ( t )		3625861	0		&&			
ANR	3626632	EqualityExpression	t != ' '		3625861	0		!=			
ANR	3626633	Identifier	t		3625861	0					
ANR	3626634	PrimaryExpression	' '		3625861	1					
ANR	3626635	CallExpression	ft_isalnum ( t )		3625861	1					
ANR	3626636	Callee	ft_isalnum		3625861	0					
ANR	3626637	Identifier	ft_isalnum		3625861	0					
ANR	3626638	ArgumentList	t		3625861	1					
ANR	3626639	Argument	t		3625861	0					
ANR	3626640	Identifier	t		3625861	0					
ANR	3626641	ExpressionStatement	* p ++ = t	967:10:24339:24347	3625861	1	True				
ANR	3626642	AssignmentExpression	* p ++ = t		3625861	0		=			
ANR	3626643	UnaryOperationExpression	* p ++		3625861	0					
ANR	3626644	UnaryOperator	*		3625861	0					
ANR	3626645	PostIncDecOperationExpression	p ++		3625861	1					
ANR	3626646	Identifier	p		3625861	0					
ANR	3626647	IncDec	++		3625861	1					
ANR	3626648	Identifier	t		3625861	1					
ANR	3626649	ExpressionStatement	t = ( char ) ( axis -> tag >> 8 )	968:8:24357:24385	3625861	8	True				
ANR	3626650	AssignmentExpression	t = ( char ) ( axis -> tag >> 8 )		3625861	0		=			
ANR	3626651	Identifier	t		3625861	0					
ANR	3626652	CastExpression	( char ) ( axis -> tag >> 8 )		3625861	1					
ANR	3626653	CastTarget	char		3625861	0					
ANR	3626654	ShiftExpression	axis -> tag >> 8		3625861	1		>>			
ANR	3626655	PtrMemberAccess	axis -> tag		3625861	0					
ANR	3626656	Identifier	axis		3625861	0					
ANR	3626657	Identifier	tag		3625861	1					
ANR	3626658	PrimaryExpression	8		3625861	1					
ANR	3626659	IfStatement	if ( t != ' ' && ft_isalnum ( t ) )		3625861	9					
ANR	3626660	Condition	t != ' ' && ft_isalnum ( t )	969:13:24400:24426	3625861	0	True				
ANR	3626661	AndExpression	t != ' ' && ft_isalnum ( t )		3625861	0		&&			
ANR	3626662	EqualityExpression	t != ' '		3625861	0		!=			
ANR	3626663	Identifier	t		3625861	0					
ANR	3626664	PrimaryExpression	' '		3625861	1					
ANR	3626665	CallExpression	ft_isalnum ( t )		3625861	1					
ANR	3626666	Callee	ft_isalnum		3625861	0					
ANR	3626667	Identifier	ft_isalnum		3625861	0					
ANR	3626668	ArgumentList	t		3625861	1					
ANR	3626669	Argument	t		3625861	0					
ANR	3626670	Identifier	t		3625861	0					
ANR	3626671	ExpressionStatement	* p ++ = t	970:10:24440:24448	3625861	1	True				
ANR	3626672	AssignmentExpression	* p ++ = t		3625861	0		=			
ANR	3626673	UnaryOperationExpression	* p ++		3625861	0					
ANR	3626674	UnaryOperator	*		3625861	0					
ANR	3626675	PostIncDecOperationExpression	p ++		3625861	1					
ANR	3626676	Identifier	p		3625861	0					
ANR	3626677	IncDec	++		3625861	1					
ANR	3626678	Identifier	t		3625861	1					
ANR	3626679	ExpressionStatement	t = ( char ) axis -> tag	971:8:24458:24477	3625861	10	True				
ANR	3626680	AssignmentExpression	t = ( char ) axis -> tag		3625861	0		=			
ANR	3626681	Identifier	t		3625861	0					
ANR	3626682	CastExpression	( char ) axis -> tag		3625861	1					
ANR	3626683	CastTarget	char		3625861	0					
ANR	3626684	PtrMemberAccess	axis -> tag		3625861	1					
ANR	3626685	Identifier	axis		3625861	0					
ANR	3626686	Identifier	tag		3625861	1					
ANR	3626687	IfStatement	if ( t != ' ' && ft_isalnum ( t ) )		3625861	11					
ANR	3626688	Condition	t != ' ' && ft_isalnum ( t )	972:13:24492:24518	3625861	0	True				
ANR	3626689	AndExpression	t != ' ' && ft_isalnum ( t )		3625861	0		&&			
ANR	3626690	EqualityExpression	t != ' '		3625861	0		!=			
ANR	3626691	Identifier	t		3625861	0					
ANR	3626692	PrimaryExpression	' '		3625861	1					
ANR	3626693	CallExpression	ft_isalnum ( t )		3625861	1					
ANR	3626694	Callee	ft_isalnum		3625861	0					
ANR	3626695	Identifier	ft_isalnum		3625861	0					
ANR	3626696	ArgumentList	t		3625861	1					
ANR	3626697	Argument	t		3625861	0					
ANR	3626698	Identifier	t		3625861	0					
ANR	3626699	ExpressionStatement	* p ++ = t	973:10:24532:24540	3625861	1	True				
ANR	3626700	AssignmentExpression	* p ++ = t		3625861	0		=			
ANR	3626701	UnaryOperationExpression	* p ++		3625861	0					
ANR	3626702	UnaryOperator	*		3625861	0					
ANR	3626703	PostIncDecOperationExpression	p ++		3625861	1					
ANR	3626704	Identifier	p		3625861	0					
ANR	3626705	IncDec	++		3625861	1					
ANR	3626706	Identifier	t		3625861	1					
ANR	3626707	Label	check_length :	977:2:24559:24571	3625861	13	True				
ANR	3626708	Identifier	check_length		3625861	0					
ANR	3626709	IfStatement	if ( p - result > MAX_PS_NAME_LEN )		3625861	14					
ANR	3626710	Condition	p - result > MAX_PS_NAME_LEN	978:9:24582:24609	3625861	0	True				
ANR	3626711	RelationalExpression	p - result > MAX_PS_NAME_LEN		3625861	0		>			
ANR	3626712	AdditiveExpression	p - result		3625861	0		-			
ANR	3626713	Identifier	p		3625861	0					
ANR	3626714	Identifier	result		3625861	1					
ANR	3626715	Identifier	MAX_PS_NAME_LEN		3625861	1					
ANR	3626716	CompoundStatement		217:6:6483:6496	3625861	1					
ANR	3626717	IdentifierDeclStatement	FT_UInt32 seed = 123456789 ;	983:6:24778:24805	3625861	0	True				
ANR	3626718	IdentifierDecl	seed = 123456789		3625861	0					
ANR	3626719	IdentifierDeclType	FT_UInt32		3625861	0					
ANR	3626720	Identifier	seed		3625861	1					
ANR	3626721	AssignmentExpression	seed = 123456789		3625861	2		=			
ANR	3626722	Identifier	seed		3625861	0					
ANR	3626723	PrimaryExpression	123456789		3625861	1					
ANR	3626724	IdentifierDeclStatement	FT_UInt32 hash [ 4 ] ;	985:6:24814:24833	3625861	1	True				
ANR	3626725	IdentifierDecl	hash [ 4 ]		3625861	0					
ANR	3626726	IdentifierDeclType	FT_UInt32 [ 4 ]		3625861	0					
ANR	3626727	Identifier	hash		3625861	1					
ANR	3626728	PrimaryExpression	4		3625861	2					
ANR	3626729	IdentifierDeclStatement	FT_UInt32 * h ;	986:6:24841:24854	3625861	2	True				
ANR	3626730	IdentifierDecl	* h		3625861	0					
ANR	3626731	IdentifierDeclType	FT_UInt32 *		3625861	0					
ANR	3626732	Identifier	h		3625861	1					
ANR	3626733	ExpressionStatement	"murmur_hash_3_128 ( result , p - result , seed , hash )"	989:6:24864:24915	3625861	3	True				
ANR	3626734	CallExpression	"murmur_hash_3_128 ( result , p - result , seed , hash )"		3625861	0					
ANR	3626735	Callee	murmur_hash_3_128		3625861	0					
ANR	3626736	Identifier	murmur_hash_3_128		3625861	0					
ANR	3626737	ArgumentList	result		3625861	1					
ANR	3626738	Argument	result		3625861	0					
ANR	3626739	Identifier	result		3625861	0					
ANR	3626740	Argument	p - result		3625861	1					
ANR	3626741	AdditiveExpression	p - result		3625861	0		-			
ANR	3626742	Identifier	p		3625861	0					
ANR	3626743	Identifier	result		3625861	1					
ANR	3626744	Argument	seed		3625861	2					
ANR	3626745	Identifier	seed		3625861	0					
ANR	3626746	Argument	hash		3625861	3					
ANR	3626747	Identifier	hash		3625861	0					
ANR	3626748	ExpressionStatement	p = result + face -> var_postscript_prefix_len	991:6:24924:24968	3625861	4	True				
ANR	3626749	AssignmentExpression	p = result + face -> var_postscript_prefix_len		3625861	0		=			
ANR	3626750	Identifier	p		3625861	0					
ANR	3626751	AdditiveExpression	result + face -> var_postscript_prefix_len		3625861	1		+			
ANR	3626752	Identifier	result		3625861	0					
ANR	3626753	PtrMemberAccess	face -> var_postscript_prefix_len		3625861	1					
ANR	3626754	Identifier	face		3625861	0					
ANR	3626755	Identifier	var_postscript_prefix_len		3625861	1					
ANR	3626756	ExpressionStatement	* p ++ = '-'	992:6:24976:24986	3625861	5	True				
ANR	3626757	AssignmentExpression	* p ++ = '-'		3625861	0		=			
ANR	3626758	UnaryOperationExpression	* p ++		3625861	0					
ANR	3626759	UnaryOperator	*		3625861	0					
ANR	3626760	PostIncDecOperationExpression	p ++		3625861	1					
ANR	3626761	Identifier	p		3625861	0					
ANR	3626762	IncDec	++		3625861	1					
ANR	3626763	PrimaryExpression	'-'		3625861	1					
ANR	3626764	ExpressionStatement	p += 32 + 3	995:6:25066:25077	3625861	6	True				
ANR	3626765	AssignmentExpression	p += 32 + 3		3625861	0		+=			
ANR	3626766	Identifier	p		3625861	0					
ANR	3626767	AdditiveExpression	32 + 3		3625861	1		+			
ANR	3626768	PrimaryExpression	32		3625861	0					
ANR	3626769	PrimaryExpression	3		3625861	1					
ANR	3626770	ExpressionStatement	h = hash + 3	996:6:25085:25098	3625861	7	True				
ANR	3626771	AssignmentExpression	h = hash + 3		3625861	0		=			
ANR	3626772	Identifier	h		3625861	0					
ANR	3626773	AdditiveExpression	hash + 3		3625861	1		+			
ANR	3626774	Identifier	hash		3625861	0					
ANR	3626775	PrimaryExpression	3		3625861	1					
ANR	3626776	ExpressionStatement	* p -- = '\\0'	998:6:25107:25118	3625861	8	True				
ANR	3626777	AssignmentExpression	* p -- = '\\0'		3625861	0		=			
ANR	3626778	UnaryOperationExpression	* p --		3625861	0					
ANR	3626779	UnaryOperator	*		3625861	0					
ANR	3626780	PostIncDecOperationExpression	p --		3625861	1					
ANR	3626781	Identifier	p		3625861	0					
ANR	3626782	IncDec	--		3625861	1					
ANR	3626783	PrimaryExpression	'\\0'		3625861	1					
ANR	3626784	ExpressionStatement	* p -- = '.'	999:6:25126:25136	3625861	9	True				
ANR	3626785	AssignmentExpression	* p -- = '.'		3625861	0		=			
ANR	3626786	UnaryOperationExpression	* p --		3625861	0					
ANR	3626787	UnaryOperator	*		3625861	0					
ANR	3626788	PostIncDecOperationExpression	p --		3625861	1					
ANR	3626789	Identifier	p		3625861	0					
ANR	3626790	IncDec	--		3625861	1					
ANR	3626791	PrimaryExpression	'.'		3625861	1					
ANR	3626792	ExpressionStatement	* p -- = '.'	1000:6:25144:25154	3625861	10	True				
ANR	3626793	AssignmentExpression	* p -- = '.'		3625861	0		=			
ANR	3626794	UnaryOperationExpression	* p --		3625861	0					
ANR	3626795	UnaryOperator	*		3625861	0					
ANR	3626796	PostIncDecOperationExpression	p --		3625861	1					
ANR	3626797	Identifier	p		3625861	0					
ANR	3626798	IncDec	--		3625861	1					
ANR	3626799	PrimaryExpression	'.'		3625861	1					
ANR	3626800	ExpressionStatement	* p -- = '.'	1001:6:25162:25172	3625861	11	True				
ANR	3626801	AssignmentExpression	* p -- = '.'		3625861	0		=			
ANR	3626802	UnaryOperationExpression	* p --		3625861	0					
ANR	3626803	UnaryOperator	*		3625861	0					
ANR	3626804	PostIncDecOperationExpression	p --		3625861	1					
ANR	3626805	Identifier	p		3625861	0					
ANR	3626806	IncDec	--		3625861	1					
ANR	3626807	PrimaryExpression	'.'		3625861	1					
ANR	3626808	ForStatement	"for ( i = 0 ; i < 4 ; i ++ , h -- )"		3625861	12					
ANR	3626809	ForInit	i = 0 ;	1003:12:25187:25192	3625861	0	True				
ANR	3626810	AssignmentExpression	i = 0		3625861	0		=			
ANR	3626811	Identifier	i		3625861	0					
ANR	3626812	PrimaryExpression	0		3625861	1					
ANR	3626813	Condition	i < 4	1003:19:25194:25198	3625861	1	True				
ANR	3626814	RelationalExpression	i < 4		3625861	0		<			
ANR	3626815	Identifier	i		3625861	0					
ANR	3626816	PrimaryExpression	4		3625861	1					
ANR	3626817	Expression	"i ++ , h --"	1003:26:25201:25208	3625861	2	True				
ANR	3626818	PostIncDecOperationExpression	i ++		3625861	0					
ANR	3626819	Identifier	i		3625861	0					
ANR	3626820	IncDec	++		3625861	1					
ANR	3626821	PostIncDecOperationExpression	h --		3625861	1					
ANR	3626822	Identifier	h		3625861	0					
ANR	3626823	IncDec	--		3625861	1					
ANR	3626824	CompoundStatement		236:8:6870:6887	3625861	3					
ANR	3626825	IdentifierDeclStatement	FT_UInt32 v = * h ;	1005:8:25228:25245	3625861	0	True				
ANR	3626826	IdentifierDecl	v = * h		3625861	0					
ANR	3626827	IdentifierDeclType	FT_UInt32		3625861	0					
ANR	3626828	Identifier	v		3625861	1					
ANR	3626829	AssignmentExpression	v = * h		3625861	2		=			
ANR	3626830	Identifier	v		3625861	0					
ANR	3626831	UnaryOperationExpression	* h		3625861	1					
ANR	3626832	UnaryOperator	*		3625861	0					
ANR	3626833	Identifier	h		3625861	1					
ANR	3626834	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		3625861	1					
ANR	3626835	ForInit	j = 0 ;	1008:14:25263:25268	3625861	0	True				
ANR	3626836	AssignmentExpression	j = 0		3625861	0		=			
ANR	3626837	Identifier	j		3625861	0					
ANR	3626838	PrimaryExpression	0		3625861	1					
ANR	3626839	Condition	j < 8	1008:21:25270:25274	3625861	1	True				
ANR	3626840	RelationalExpression	j < 8		3625861	0		<			
ANR	3626841	Identifier	j		3625861	0					
ANR	3626842	PrimaryExpression	8		3625861	1					
ANR	3626843	PostIncDecOperationExpression	j ++	1008:28:25277:25279	3625861	2	True				
ANR	3626844	Identifier	j		3625861	0					
ANR	3626845	IncDec	++		3625861	1					
ANR	3626846	CompoundStatement		240:8:6933:6933	3625861	3					
ANR	3626847	ExpressionStatement	* p -- = hexdigits [ v & 0xF ]	1010:10:25303:25330	3625861	0	True				
ANR	3626848	AssignmentExpression	* p -- = hexdigits [ v & 0xF ]		3625861	0		=			
ANR	3626849	UnaryOperationExpression	* p --		3625861	0					
ANR	3626850	UnaryOperator	*		3625861	0					
ANR	3626851	PostIncDecOperationExpression	p --		3625861	1					
ANR	3626852	Identifier	p		3625861	0					
ANR	3626853	IncDec	--		3625861	1					
ANR	3626854	ArrayIndexing	hexdigits [ v & 0xF ]		3625861	1					
ANR	3626855	Identifier	hexdigits		3625861	0					
ANR	3626856	BitAndExpression	v & 0xF		3625861	1		&			
ANR	3626857	Identifier	v		3625861	0					
ANR	3626858	PrimaryExpression	0xF		3625861	1					
ANR	3626859	ExpressionStatement	v >>= 4	1011:10:25342:25352	3625861	1	True				
ANR	3626860	AssignmentExpression	v >>= 4		3625861	0		>>=			
ANR	3626861	Identifier	v		3625861	0					
ANR	3626862	PrimaryExpression	4		3625861	1					
ANR	3626863	ReturnStatement	return result ;	1016:4:25383:25396	3625861	15	True				
ANR	3626864	Identifier	result		3625861	0					
ANR	3626865	ReturnType	static const char *		3625861	1					
ANR	3626866	Identifier	sfnt_get_var_ps_name		3625861	2					
ANR	3626867	ParameterList	TT_Face face		3625861	3					
ANR	3626868	Parameter	TT_Face face	769:24:18339:18351	3625861	0	True				
ANR	3626869	ParameterType	TT_Face		3625861	0					
ANR	3626870	Identifier	face		3625861	1					
ANR	3626871	CFGEntryNode	ENTRY		3625861		True				
ANR	3626872	CFGExitNode	EXIT		3625861		True				
ANR	3626873	Symbol	* v		3625861						
ANR	3626874	Symbol	instance		3625861						
ANR	3626875	Symbol	get_apple_string		3625861						
ANR	3626876	Symbol	strid		3625861						
ANR	3626877	Symbol	FT_FACE		3625861						
ANR	3626878	Symbol	axis		3625861						
ANR	3626879	Symbol	* face		3625861						
ANR	3626880	Symbol	sfnt_is_alphanumeric		3625861						
ANR	3626881	Symbol	MAX_VALUE_DESCRIPTOR_LEN		3625861						
ANR	3626882	Symbol	num_coords		3625861						
ANR	3626883	Symbol	len		3625861						
ANR	3626884	Symbol	& subfamily_name		3625861						
ANR	3626885	Symbol	* hexdigits		3625861						
ANR	3626886	Symbol	FT_ALLOC		3625861						
ANR	3626887	Symbol	face -> root		3625861						
ANR	3626888	Symbol	face -> sfnt		3625861						
ANR	3626889	Symbol	mm		3625861						
ANR	3626890	Symbol	face -> mm		3625861						
ANR	3626891	Symbol	mm_var -> axis		3625861						
ANR	3626892	Symbol	ps_name		3625861						
ANR	3626893	Symbol	NULL		3625861						
ANR	3626894	Symbol	& mm_var		3625861						
ANR	3626895	Symbol	mm_var		3625861						
ANR	3626896	Symbol	face -> var_postscript_prefix		3625861						
ANR	3626897	Symbol	face -> root . face_index		3625861						
ANR	3626898	Symbol	* p --		3625861						
ANR	3626899	Symbol	* mm_var -> namedstyle		3625861						
ANR	3626900	Symbol	TT_NAME_ID_TYPOGRAPHIC_FAMILY		3625861						
ANR	3626901	Symbol	ft_isalnum		3625861						
ANR	3626902	Symbol	& coords		3625861						
ANR	3626903	Symbol	* coords		3625861						
ANR	3626904	Symbol	axis -> def		3625861						
ANR	3626905	Symbol	& apple		3625861						
ANR	3626906	Symbol	face -> root . memory		3625861						
ANR	3626907	Symbol	face -> var_postscript_prefix_len		3625861						
ANR	3626908	Symbol	TT_NAME_ID_VARIATIONS_PREFIX		3625861						
ANR	3626909	Symbol	sfnt_get_name_id		3625861						
ANR	3626910	Symbol	mm_var -> namedstyle [ instance ] . psid		3625861						
ANR	3626911	Symbol	hash		3625861						
ANR	3626912	Symbol	memory		3625861						
ANR	3626913	Symbol	ft_strlen		3625861						
ANR	3626914	Symbol	seed		3625861						
ANR	3626915	Symbol	& win		3625861						
ANR	3626916	Symbol	FT_IS_VARIATION		3625861						
ANR	3626917	Symbol	subfamily_name		3625861						
ANR	3626918	Symbol	TT_NAME_ID_FONT_FAMILY		3625861						
ANR	3626919	Symbol	* axis		3625861						
ANR	3626920	Symbol	error		3625861						
ANR	3626921	Symbol	result		3625861						
ANR	3626922	Symbol	apple		3625861						
ANR	3626923	Symbol	mm_var -> namedstyle		3625861						
ANR	3626924	Symbol	axis -> tag		3625861						
ANR	3626925	Symbol	found		3625861						
ANR	3626926	Symbol	face -> name_table		3625861						
ANR	3626927	Symbol	* result		3625861						
ANR	3626928	Symbol	get_win_string		3625861						
ANR	3626929	Symbol	* mm_var		3625861						
ANR	3626930	Symbol	face -> name_table . names		3625861						
ANR	3626931	Symbol	face -> name_table . stream		3625861						
ANR	3626932	Symbol	win		3625861						
ANR	3626933	Symbol	coords		3625861						
ANR	3626934	Symbol	MAX_PS_NAME_LEN		3625861						
ANR	3626935	Symbol	fixed2float		3625861						
ANR	3626936	Symbol	* p ++		3625861						
ANR	3626937	Symbol	h		3625861						
ANR	3626938	Symbol	i		3625861						
ANR	3626939	Symbol	j		3625861						
ANR	3626940	Symbol	psid		3625861						
ANR	3626941	Symbol	& num_coords		3625861						
ANR	3626942	Symbol	sfnt		3625861						
ANR	3626943	Symbol	mm_var -> namedstyle [ instance ] . strid		3625861						
ANR	3626944	Symbol	hexdigits		3625861						
ANR	3626945	Symbol	p		3625861						
ANR	3626946	Symbol	face		3625861						
ANR	3626947	Symbol	* h		3625861						
ANR	3626948	Symbol	s		3625861						
ANR	3626949	Symbol	* * mm_var		3625861						
ANR	3626950	Symbol	t		3625861						
ANR	3626951	Symbol	v		3625861						
ANR	3626952	Symbol	* instance		3625861						
ANR	3626953	Symbol	FT_IS_NAMED_INSTANCE		3625861						
ANR	3626954	Symbol	* s		3625861						
ANR	3626955	Symbol	& ps_name		3625861						
ANR	3626956	Symbol	* len		3625861						
ANR	3626957	Function	sfnt_get_ps_name	1022:2:25452:26888							
ANR	3626958	FunctionDef	sfnt_get_ps_name (TT_Face face)		3626957	0					
ANR	3626959	CompoundStatement		1024:2:25509:26888	3626957	0					
ANR	3626960	IdentifierDeclStatement	"FT_Int found , win , apple ;"	1025:4:25515:25545	3626957	0	True				
ANR	3626961	IdentifierDecl	found		3626957	0					
ANR	3626962	IdentifierDeclType	FT_Int		3626957	0					
ANR	3626963	Identifier	found		3626957	1					
ANR	3626964	IdentifierDecl	win		3626957	1					
ANR	3626965	IdentifierDeclType	FT_Int		3626957	0					
ANR	3626966	Identifier	win		3626957	1					
ANR	3626967	IdentifierDecl	apple		3626957	2					
ANR	3626968	IdentifierDeclType	FT_Int		3626957	0					
ANR	3626969	Identifier	apple		3626957	1					
ANR	3626970	IdentifierDeclStatement	const char * result = NULL ;	1026:4:25551:25577	3626957	1	True				
ANR	3626971	IdentifierDecl	* result = NULL		3626957	0					
ANR	3626972	IdentifierDeclType	const char *		3626957	0					
ANR	3626973	Identifier	result		3626957	1					
ANR	3626974	AssignmentExpression	* result = NULL		3626957	2		=			
ANR	3626975	Identifier	NULL		3626957	0					
ANR	3626976	Identifier	NULL		3626957	1					
ANR	3626977	IfStatement	if ( face -> postscript_name )		3626957	2					
ANR	3626978	Condition	face -> postscript_name	1029:9:25590:25610	3626957	0	True				
ANR	3626979	PtrMemberAccess	face -> postscript_name		3626957	0					
ANR	3626980	Identifier	face		3626957	0					
ANR	3626981	Identifier	postscript_name		3626957	1					
ANR	3626982	ReturnStatement	return face -> postscript_name ;	1030:6:25620:25648	3626957	1	True				
ANR	3626983	PtrMemberAccess	face -> postscript_name		3626957	0					
ANR	3626984	Identifier	face		3626957	0					
ANR	3626985	Identifier	postscript_name		3626957	1					
ANR	3626986	IfStatement	if ( face -> blend && ( FT_IS_NAMED_INSTANCE ( FT_FACE ( face ) ) || FT_IS_VARIATION ( FT_FACE ( face ) ) ) )		3626957	3					
ANR	3626987	Condition	face -> blend && ( FT_IS_NAMED_INSTANCE ( FT_FACE ( face ) ) || FT_IS_VARIATION ( FT_FACE ( face ) ) )	1033:9:25699:25851	3626957	0	True				
ANR	3626988	AndExpression	face -> blend && ( FT_IS_NAMED_INSTANCE ( FT_FACE ( face ) ) || FT_IS_VARIATION ( FT_FACE ( face ) ) )		3626957	0		&&			
ANR	3626989	PtrMemberAccess	face -> blend		3626957	0					
ANR	3626990	Identifier	face		3626957	0					
ANR	3626991	Identifier	blend		3626957	1					
ANR	3626992	OrExpression	FT_IS_NAMED_INSTANCE ( FT_FACE ( face ) ) || FT_IS_VARIATION ( FT_FACE ( face ) )		3626957	1		||			
ANR	3626993	CallExpression	FT_IS_NAMED_INSTANCE ( FT_FACE ( face ) )		3626957	0					
ANR	3626994	Callee	FT_IS_NAMED_INSTANCE		3626957	0					
ANR	3626995	Identifier	FT_IS_NAMED_INSTANCE		3626957	0					
ANR	3626996	ArgumentList	FT_FACE ( face )		3626957	1					
ANR	3626997	Argument	FT_FACE ( face )		3626957	0					
ANR	3626998	CallExpression	FT_FACE ( face )		3626957	0					
ANR	3626999	Callee	FT_FACE		3626957	0					
ANR	3627000	Identifier	FT_FACE		3626957	0					
ANR	3627001	ArgumentList	face		3626957	1					
ANR	3627002	Argument	face		3626957	0					
ANR	3627003	Identifier	face		3626957	0					
ANR	3627004	CallExpression	FT_IS_VARIATION ( FT_FACE ( face ) )		3626957	1					
ANR	3627005	Callee	FT_IS_VARIATION		3626957	0					
ANR	3627006	Identifier	FT_IS_VARIATION		3626957	0					
ANR	3627007	ArgumentList	FT_FACE ( face )		3626957	1					
ANR	3627008	Argument	FT_FACE ( face )		3626957	0					
ANR	3627009	CallExpression	FT_FACE ( face )		3626957	0					
ANR	3627010	Callee	FT_FACE		3626957	0					
ANR	3627011	Identifier	FT_FACE		3626957	0					
ANR	3627012	ArgumentList	face		3626957	1					
ANR	3627013	Argument	face		3626957	0					
ANR	3627014	Identifier	face		3626957	0					
ANR	3627015	CompoundStatement		13:4:349:349	3626957	1					
ANR	3627016	ExpressionStatement	face -> postscript_name = sfnt_get_var_ps_name ( face )	1037:6:25867:25919	3626957	0	True				
ANR	3627017	AssignmentExpression	face -> postscript_name = sfnt_get_var_ps_name ( face )		3626957	0		=			
ANR	3627018	PtrMemberAccess	face -> postscript_name		3626957	0					
ANR	3627019	Identifier	face		3626957	0					
ANR	3627020	Identifier	postscript_name		3626957	1					
ANR	3627021	CallExpression	sfnt_get_var_ps_name ( face )		3626957	1					
ANR	3627022	Callee	sfnt_get_var_ps_name		3626957	0					
ANR	3627023	Identifier	sfnt_get_var_ps_name		3626957	0					
ANR	3627024	ArgumentList	face		3626957	1					
ANR	3627025	Argument	face		3626957	0					
ANR	3627026	Identifier	face		3626957	0					
ANR	3627027	ReturnStatement	return face -> postscript_name ;	1038:6:25927:25955	3626957	1	True				
ANR	3627028	PtrMemberAccess	face -> postscript_name		3626957	0					
ANR	3627029	Identifier	face		3626957	0					
ANR	3627030	Identifier	postscript_name		3626957	1					
ANR	3627031	ExpressionStatement	"found = sfnt_get_name_id ( face , TT_NAME_ID_PS_NAME , & win , & apple )"	1044:4:26129:26195	3626957	4	True				
ANR	3627032	AssignmentExpression	"found = sfnt_get_name_id ( face , TT_NAME_ID_PS_NAME , & win , & apple )"		3626957	0		=			
ANR	3627033	Identifier	found		3626957	0					
ANR	3627034	CallExpression	"sfnt_get_name_id ( face , TT_NAME_ID_PS_NAME , & win , & apple )"		3626957	1					
ANR	3627035	Callee	sfnt_get_name_id		3626957	0					
ANR	3627036	Identifier	sfnt_get_name_id		3626957	0					
ANR	3627037	ArgumentList	face		3626957	1					
ANR	3627038	Argument	face		3626957	0					
ANR	3627039	Identifier	face		3626957	0					
ANR	3627040	Argument	TT_NAME_ID_PS_NAME		3626957	1					
ANR	3627041	Identifier	TT_NAME_ID_PS_NAME		3626957	0					
ANR	3627042	Argument	& win		3626957	2					
ANR	3627043	UnaryOperationExpression	& win		3626957	0					
ANR	3627044	UnaryOperator	&		3626957	0					
ANR	3627045	Identifier	win		3626957	1					
ANR	3627046	Argument	& apple		3626957	3					
ANR	3627047	UnaryOperationExpression	& apple		3626957	0					
ANR	3627048	UnaryOperator	&		3626957	0					
ANR	3627049	Identifier	apple		3626957	1					
ANR	3627050	IfStatement	if ( ! found )		3626957	5					
ANR	3627051	Condition	! found	1045:9:26206:26211	3626957	0	True				
ANR	3627052	UnaryOperationExpression	! found		3626957	0					
ANR	3627053	UnaryOperator	!		3626957	0					
ANR	3627054	Identifier	found		3626957	1					
ANR	3627055	ReturnStatement	return NULL ;	1046:6:26221:26232	3626957	1	True				
ANR	3627056	Identifier	NULL		3626957	0					
ANR	3627057	IfStatement	if ( win != - 1 )		3626957	6					
ANR	3627058	Condition	win != - 1	1049:9:26288:26296	3626957	0	True				
ANR	3627059	EqualityExpression	win != - 1		3626957	0		!=			
ANR	3627060	Identifier	win		3626957	0					
ANR	3627061	UnaryOperationExpression	- 1		3626957	1					
ANR	3627062	UnaryOperator	-		3626957	0					
ANR	3627063	PrimaryExpression	1		3626957	1					
ANR	3627064	ExpressionStatement	"result = get_win_string ( face -> root . memory , face -> name_table . stream , face -> name_table . names + win , sfnt_is_postscript , 1 )"	1050:6:26306:26552	3626957	1	True				
ANR	3627065	AssignmentExpression	"result = get_win_string ( face -> root . memory , face -> name_table . stream , face -> name_table . names + win , sfnt_is_postscript , 1 )"		3626957	0		=			
ANR	3627066	Identifier	result		3626957	0					
ANR	3627067	CallExpression	"get_win_string ( face -> root . memory , face -> name_table . stream , face -> name_table . names + win , sfnt_is_postscript , 1 )"		3626957	1					
ANR	3627068	Callee	get_win_string		3626957	0					
ANR	3627069	Identifier	get_win_string		3626957	0					
ANR	3627070	ArgumentList	face -> root . memory		3626957	1					
ANR	3627071	Argument	face -> root . memory		3626957	0					
ANR	3627072	MemberAccess	face -> root . memory		3626957	0					
ANR	3627073	PtrMemberAccess	face -> root		3626957	0					
ANR	3627074	Identifier	face		3626957	0					
ANR	3627075	Identifier	root		3626957	1					
ANR	3627076	Identifier	memory		3626957	1					
ANR	3627077	Argument	face -> name_table . stream		3626957	1					
ANR	3627078	MemberAccess	face -> name_table . stream		3626957	0					
ANR	3627079	PtrMemberAccess	face -> name_table		3626957	0					
ANR	3627080	Identifier	face		3626957	0					
ANR	3627081	Identifier	name_table		3626957	1					
ANR	3627082	Identifier	stream		3626957	1					
ANR	3627083	Argument	face -> name_table . names + win		3626957	2					
ANR	3627084	AdditiveExpression	face -> name_table . names + win		3626957	0		+			
ANR	3627085	MemberAccess	face -> name_table . names		3626957	0					
ANR	3627086	PtrMemberAccess	face -> name_table		3626957	0					
ANR	3627087	Identifier	face		3626957	0					
ANR	3627088	Identifier	name_table		3626957	1					
ANR	3627089	Identifier	names		3626957	1					
ANR	3627090	Identifier	win		3626957	1					
ANR	3627091	Argument	sfnt_is_postscript		3626957	3					
ANR	3627092	Identifier	sfnt_is_postscript		3626957	0					
ANR	3627093	Argument	1		3626957	4					
ANR	3627094	PrimaryExpression	1		3626957	0					
ANR	3627095	ElseStatement	else		3626957	0					
ANR	3627096	ExpressionStatement	"result = get_apple_string ( face -> root . memory , face -> name_table . stream , face -> name_table . names + apple , sfnt_is_postscript , 1 )"	1056:6:26569:26827	3626957	0	True				
ANR	3627097	AssignmentExpression	"result = get_apple_string ( face -> root . memory , face -> name_table . stream , face -> name_table . names + apple , sfnt_is_postscript , 1 )"		3626957	0		=			
ANR	3627098	Identifier	result		3626957	0					
ANR	3627099	CallExpression	"get_apple_string ( face -> root . memory , face -> name_table . stream , face -> name_table . names + apple , sfnt_is_postscript , 1 )"		3626957	1					
ANR	3627100	Callee	get_apple_string		3626957	0					
ANR	3627101	Identifier	get_apple_string		3626957	0					
ANR	3627102	ArgumentList	face -> root . memory		3626957	1					
ANR	3627103	Argument	face -> root . memory		3626957	0					
ANR	3627104	MemberAccess	face -> root . memory		3626957	0					
ANR	3627105	PtrMemberAccess	face -> root		3626957	0					
ANR	3627106	Identifier	face		3626957	0					
ANR	3627107	Identifier	root		3626957	1					
ANR	3627108	Identifier	memory		3626957	1					
ANR	3627109	Argument	face -> name_table . stream		3626957	1					
ANR	3627110	MemberAccess	face -> name_table . stream		3626957	0					
ANR	3627111	PtrMemberAccess	face -> name_table		3626957	0					
ANR	3627112	Identifier	face		3626957	0					
ANR	3627113	Identifier	name_table		3626957	1					
ANR	3627114	Identifier	stream		3626957	1					
ANR	3627115	Argument	face -> name_table . names + apple		3626957	2					
ANR	3627116	AdditiveExpression	face -> name_table . names + apple		3626957	0		+			
ANR	3627117	MemberAccess	face -> name_table . names		3626957	0					
ANR	3627118	PtrMemberAccess	face -> name_table		3626957	0					
ANR	3627119	Identifier	face		3626957	0					
ANR	3627120	Identifier	name_table		3626957	1					
ANR	3627121	Identifier	names		3626957	1					
ANR	3627122	Identifier	apple		3626957	1					
ANR	3627123	Argument	sfnt_is_postscript		3626957	3					
ANR	3627124	Identifier	sfnt_is_postscript		3626957	0					
ANR	3627125	Argument	1		3626957	4					
ANR	3627126	PrimaryExpression	1		3626957	0					
ANR	3627127	ExpressionStatement	face -> postscript_name = result	1062:4:26834:26864	3626957	7	True				
ANR	3627128	AssignmentExpression	face -> postscript_name = result		3626957	0		=			
ANR	3627129	PtrMemberAccess	face -> postscript_name		3626957	0					
ANR	3627130	Identifier	face		3626957	0					
ANR	3627131	Identifier	postscript_name		3626957	1					
ANR	3627132	Identifier	result		3626957	1					
ANR	3627133	ReturnStatement	return result ;	1064:4:26871:26884	3626957	8	True				
ANR	3627134	Identifier	result		3626957	0					
ANR	3627135	ReturnType	static const char *		3626957	1					
ANR	3627136	Identifier	sfnt_get_ps_name		3626957	2					
ANR	3627137	ParameterList	TT_Face face		3626957	3					
ANR	3627138	Parameter	TT_Face face	1023:20:25491:25503	3626957	0	True				
ANR	3627139	ParameterType	TT_Face		3626957	0					
ANR	3627140	Identifier	face		3626957	1					
ANR	3627141	CFGEntryNode	ENTRY		3626957		True				
ANR	3627142	CFGExitNode	EXIT		3626957		True				
ANR	3627143	Symbol	face -> blend		3626957						
ANR	3627144	Symbol	& win		3626957						
ANR	3627145	Symbol	get_apple_string		3626957						
ANR	3627146	Symbol	face -> postscript_name		3626957						
ANR	3627147	Symbol	FT_IS_VARIATION		3626957						
ANR	3627148	Symbol	FT_FACE		3626957						
ANR	3627149	Symbol	* face		3626957						
ANR	3627150	Symbol	sfnt_is_postscript		3626957						
ANR	3627151	Symbol	result		3626957						
ANR	3627152	Symbol	apple		3626957						
ANR	3627153	Symbol	found		3626957						
ANR	3627154	Symbol	face -> name_table		3626957						
ANR	3627155	Symbol	face -> root		3626957						
ANR	3627156	Symbol	get_win_string		3626957						
ANR	3627157	Symbol	face -> name_table . stream		3626957						
ANR	3627158	Symbol	face -> name_table . names		3626957						
ANR	3627159	Symbol	win		3626957						
ANR	3627160	Symbol	NULL		3626957						
ANR	3627161	Symbol	TT_NAME_ID_PS_NAME		3626957						
ANR	3627162	Symbol	face		3626957						
ANR	3627163	Symbol	& apple		3626957						
ANR	3627164	Symbol	face -> root . memory		3626957						
ANR	3627165	Symbol	FT_IS_NAMED_INSTANCE		3626957						
ANR	3627166	Symbol	sfnt_get_name_id		3626957						
ANR	3627167	Symbol	sfnt_get_var_ps_name		3626957						
ANR	3627168	Function	sfnt_get_charset_id	1087:2:27225:28344							
ANR	3627169	FunctionDef	"sfnt_get_charset_id (TT_Face face , const char * * acharset_encoding , const char * * acharset_registry)"		3627168	0					
ANR	3627170	CompoundStatement		1091:2:27399:28344	3627168	0					
ANR	3627171	IdentifierDeclStatement	"BDF_PropertyRec encoding , registry ;"	1092:4:27405:27440	3627168	0	True				
ANR	3627172	IdentifierDecl	encoding		3627168	0					
ANR	3627173	IdentifierDeclType	BDF_PropertyRec		3627168	0					
ANR	3627174	Identifier	encoding		3627168	1					
ANR	3627175	IdentifierDecl	registry		3627168	1					
ANR	3627176	IdentifierDeclType	BDF_PropertyRec		3627168	0					
ANR	3627177	Identifier	registry		3627168	1					
ANR	3627178	IdentifierDeclStatement	FT_Error error ;	1093:4:27446:27468	3627168	1	True				
ANR	3627179	IdentifierDecl	error		3627168	0					
ANR	3627180	IdentifierDeclType	FT_Error		3627168	0					
ANR	3627181	Identifier	error		3627168	1					
ANR	3627182	ExpressionStatement	"error = tt_face_find_bdf_prop ( face , ""CHARSET_REGISTRY"" , & registry )"	1102:4:27823:27891	3627168	2	True				
ANR	3627183	AssignmentExpression	"error = tt_face_find_bdf_prop ( face , ""CHARSET_REGISTRY"" , & registry )"		3627168	0		=			
ANR	3627184	Identifier	error		3627168	0					
ANR	3627185	CallExpression	"tt_face_find_bdf_prop ( face , ""CHARSET_REGISTRY"" , & registry )"		3627168	1					
ANR	3627186	Callee	tt_face_find_bdf_prop		3627168	0					
ANR	3627187	Identifier	tt_face_find_bdf_prop		3627168	0					
ANR	3627188	ArgumentList	face		3627168	1					
ANR	3627189	Argument	face		3627168	0					
ANR	3627190	Identifier	face		3627168	0					
ANR	3627191	Argument	"""CHARSET_REGISTRY"""		3627168	1					
ANR	3627192	PrimaryExpression	"""CHARSET_REGISTRY"""		3627168	0					
ANR	3627193	Argument	& registry		3627168	2					
ANR	3627194	UnaryOperationExpression	& registry		3627168	0					
ANR	3627195	UnaryOperator	&		3627168	0					
ANR	3627196	Identifier	registry		3627168	1					
ANR	3627197	IfStatement	if ( ! error )		3627168	3					
ANR	3627198	Condition	! error	1103:9:27902:27907	3627168	0	True				
ANR	3627199	UnaryOperationExpression	! error		3627168	0					
ANR	3627200	UnaryOperator	!		3627168	0					
ANR	3627201	Identifier	error		3627168	1					
ANR	3627202	CompoundStatement		14:4:515:515	3627168	1					
ANR	3627203	ExpressionStatement	"error = tt_face_find_bdf_prop ( face , ""CHARSET_ENCODING"" , & encoding )"	1105:6:27923:27991	3627168	0	True				
ANR	3627204	AssignmentExpression	"error = tt_face_find_bdf_prop ( face , ""CHARSET_ENCODING"" , & encoding )"		3627168	0		=			
ANR	3627205	Identifier	error		3627168	0					
ANR	3627206	CallExpression	"tt_face_find_bdf_prop ( face , ""CHARSET_ENCODING"" , & encoding )"		3627168	1					
ANR	3627207	Callee	tt_face_find_bdf_prop		3627168	0					
ANR	3627208	Identifier	tt_face_find_bdf_prop		3627168	0					
ANR	3627209	ArgumentList	face		3627168	1					
ANR	3627210	Argument	face		3627168	0					
ANR	3627211	Identifier	face		3627168	0					
ANR	3627212	Argument	"""CHARSET_ENCODING"""		3627168	1					
ANR	3627213	PrimaryExpression	"""CHARSET_ENCODING"""		3627168	0					
ANR	3627214	Argument	& encoding		3627168	2					
ANR	3627215	UnaryOperationExpression	& encoding		3627168	0					
ANR	3627216	UnaryOperator	&		3627168	0					
ANR	3627217	Identifier	encoding		3627168	1					
ANR	3627218	IfStatement	if ( ! error )		3627168	1					
ANR	3627219	Condition	! error	1106:11:28004:28009	3627168	0	True				
ANR	3627220	UnaryOperationExpression	! error		3627168	0					
ANR	3627221	UnaryOperator	!		3627168	0					
ANR	3627222	Identifier	error		3627168	1					
ANR	3627223	CompoundStatement		17:6:619:619	3627168	1					
ANR	3627224	IfStatement	if ( registry . type == BDF_PROPERTY_TYPE_ATOM && encoding . type == BDF_PROPERTY_TYPE_ATOM )		3627168	0					
ANR	3627225	Condition	registry . type == BDF_PROPERTY_TYPE_ATOM && encoding . type == BDF_PROPERTY_TYPE_ATOM	1108:13:28034:28128	3627168	0	True				
ANR	3627226	AndExpression	registry . type == BDF_PROPERTY_TYPE_ATOM && encoding . type == BDF_PROPERTY_TYPE_ATOM		3627168	0		&&			
ANR	3627227	EqualityExpression	registry . type == BDF_PROPERTY_TYPE_ATOM		3627168	0		==			
ANR	3627228	MemberAccess	registry . type		3627168	0					
ANR	3627229	Identifier	registry		3627168	0					
ANR	3627230	Identifier	type		3627168	1					
ANR	3627231	Identifier	BDF_PROPERTY_TYPE_ATOM		3627168	1					
ANR	3627232	EqualityExpression	encoding . type == BDF_PROPERTY_TYPE_ATOM		3627168	1		==			
ANR	3627233	MemberAccess	encoding . type		3627168	0					
ANR	3627234	Identifier	encoding		3627168	0					
ANR	3627235	Identifier	type		3627168	1					
ANR	3627236	Identifier	BDF_PROPERTY_TYPE_ATOM		3627168	1					
ANR	3627237	CompoundStatement		20:8:740:740	3627168	1					
ANR	3627238	ExpressionStatement	* acharset_encoding = encoding . u . atom	1111:10:28152:28188	3627168	0	True				
ANR	3627239	AssignmentExpression	* acharset_encoding = encoding . u . atom		3627168	0		=			
ANR	3627240	UnaryOperationExpression	* acharset_encoding		3627168	0					
ANR	3627241	UnaryOperator	*		3627168	0					
ANR	3627242	Identifier	acharset_encoding		3627168	1					
ANR	3627243	MemberAccess	encoding . u . atom		3627168	1					
ANR	3627244	MemberAccess	encoding . u		3627168	0					
ANR	3627245	Identifier	encoding		3627168	0					
ANR	3627246	Identifier	u		3627168	1					
ANR	3627247	Identifier	atom		3627168	1					
ANR	3627248	ExpressionStatement	* acharset_registry = registry . u . atom	1112:10:28200:28236	3627168	1	True				
ANR	3627249	AssignmentExpression	* acharset_registry = registry . u . atom		3627168	0		=			
ANR	3627250	UnaryOperationExpression	* acharset_registry		3627168	0					
ANR	3627251	UnaryOperator	*		3627168	0					
ANR	3627252	Identifier	acharset_registry		3627168	1					
ANR	3627253	MemberAccess	registry . u . atom		3627168	1					
ANR	3627254	MemberAccess	registry . u		3627168	0					
ANR	3627255	Identifier	registry		3627168	0					
ANR	3627256	Identifier	u		3627168	1					
ANR	3627257	Identifier	atom		3627168	1					
ANR	3627258	ElseStatement	else		3627168	0					
ANR	3627259	ExpressionStatement	error = FT_THROW ( Invalid_Argument )	1115:10:28271:28307	3627168	0	True				
ANR	3627260	AssignmentExpression	error = FT_THROW ( Invalid_Argument )		3627168	0		=			
ANR	3627261	Identifier	error		3627168	0					
ANR	3627262	CallExpression	FT_THROW ( Invalid_Argument )		3627168	1					
ANR	3627263	Callee	FT_THROW		3627168	0					
ANR	3627264	Identifier	FT_THROW		3627168	0					
ANR	3627265	ArgumentList	Invalid_Argument		3627168	1					
ANR	3627266	Argument	Invalid_Argument		3627168	0					
ANR	3627267	Identifier	Invalid_Argument		3627168	0					
ANR	3627268	ReturnStatement	return error ;	1119:4:28328:28340	3627168	4	True				
ANR	3627269	Identifier	error		3627168	0					
ANR	3627270	ReturnType	static FT_Error		3627168	1					
ANR	3627271	Identifier	sfnt_get_charset_id		3627168	2					
ANR	3627272	ParameterList	"TT_Face face , const char * * acharset_encoding , const char * * acharset_registry"		3627168	3					
ANR	3627273	Parameter	TT_Face face	1088:23:27264:27281	3627168	0	True				
ANR	3627274	ParameterType	TT_Face		3627168	0					
ANR	3627275	Identifier	face		3627168	1					
ANR	3627276	Parameter	const char * * acharset_encoding	1089:23:27307:27337	3627168	1	True				
ANR	3627277	ParameterType	const char * *		3627168	0					
ANR	3627278	Identifier	acharset_encoding		3627168	1					
ANR	3627279	Parameter	const char * * acharset_registry	1090:23:27363:27393	3627168	2	True				
ANR	3627280	ParameterType	const char * *		3627168	0					
ANR	3627281	Identifier	acharset_registry		3627168	1					
ANR	3627282	CFGEntryNode	ENTRY		3627168		True				
ANR	3627283	CFGExitNode	EXIT		3627168		True				
ANR	3627284	Symbol	registry		3627168						
ANR	3627285	Symbol	& registry		3627168						
ANR	3627286	Symbol	acharset_registry		3627168						
ANR	3627287	Symbol	Invalid_Argument		3627168						
ANR	3627288	Symbol	encoding		3627168						
ANR	3627289	Symbol	error		3627168						
ANR	3627290	Symbol	tt_face_find_bdf_prop		3627168						
ANR	3627291	Symbol	FT_THROW		3627168						
ANR	3627292	Symbol	encoding . u . atom		3627168						
ANR	3627293	Symbol	registry . u		3627168						
ANR	3627294	Symbol	face		3627168						
ANR	3627295	Symbol	registry . u . atom		3627168						
ANR	3627296	Symbol	encoding . u		3627168						
ANR	3627297	Symbol	* acharset_registry		3627168						
ANR	3627298	Symbol	acharset_encoding		3627168						
ANR	3627299	Symbol	BDF_PROPERTY_TYPE_ATOM		3627168						
ANR	3627300	Symbol	registry . type		3627168						
ANR	3627301	Symbol	encoding . type		3627168						
ANR	3627302	Symbol	& encoding		3627168						
ANR	3627303	Symbol	* acharset_encoding		3627168						
ANR	3627304	Function	sfnt_get_interface	1174:2:30123:30563							
ANR	3627305	FunctionDef	"sfnt_get_interface (FT_Module module , const char * module_interface)"		3627304	0					
ANR	3627306	CompoundStatement		1176:2:30220:30563	3627304	0					
ANR	3627307	IdentifierDeclStatement	FT_Library library ;	1179:4:30317:30336	3627304	0	True				
ANR	3627308	IdentifierDecl	library		3627304	0					
ANR	3627309	IdentifierDeclType	FT_Library		3627304	0					
ANR	3627310	Identifier	library		3627304	1					
ANR	3627311	IfStatement	if ( ! module )		3627304	1					
ANR	3627312	Condition	! module	1182:9:30349:30355	3627304	0	True				
ANR	3627313	UnaryOperationExpression	! module		3627304	0					
ANR	3627314	UnaryOperator	!		3627304	0					
ANR	3627315	Identifier	module		3627304	1					
ANR	3627316	ReturnStatement	return NULL ;	1183:6:30365:30376	3627304	1	True				
ANR	3627317	Identifier	NULL		3627304	0					
ANR	3627318	ExpressionStatement	library = module -> library	1184:4:30382:30407	3627304	2	True				
ANR	3627319	AssignmentExpression	library = module -> library		3627304	0		=			
ANR	3627320	Identifier	library		3627304	0					
ANR	3627321	PtrMemberAccess	module -> library		3627304	1					
ANR	3627322	Identifier	module		3627304	0					
ANR	3627323	Identifier	library		3627304	1					
ANR	3627324	IfStatement	if ( ! library )		3627304	3					
ANR	3627325	Condition	! library	1185:9:30418:30425	3627304	0	True				
ANR	3627326	UnaryOperationExpression	! library		3627304	0					
ANR	3627327	UnaryOperator	!		3627304	0					
ANR	3627328	Identifier	library		3627304	1					
ANR	3627329	ReturnStatement	return NULL ;	1186:6:30435:30446	3627304	1	True				
ANR	3627330	Identifier	NULL		3627304	0					
ANR	3627331	ReturnStatement	"return ft_service_list_lookup ( SFNT_SERVICES_GET , module_interface ) ;"	1191:4:30491:30559	3627304	4	True				
ANR	3627332	CallExpression	"ft_service_list_lookup ( SFNT_SERVICES_GET , module_interface )"		3627304	0					
ANR	3627333	Callee	ft_service_list_lookup		3627304	0					
ANR	3627334	Identifier	ft_service_list_lookup		3627304	0					
ANR	3627335	ArgumentList	SFNT_SERVICES_GET		3627304	1					
ANR	3627336	Argument	SFNT_SERVICES_GET		3627304	0					
ANR	3627337	Identifier	SFNT_SERVICES_GET		3627304	0					
ANR	3627338	Argument	module_interface		3627304	1					
ANR	3627339	Identifier	module_interface		3627304	0					
ANR	3627340	Identifier	sfnt_get_interface		3627304	1					
ANR	3627341	ParameterList	"FT_Module module , const char * module_interface"		3627304	2					
ANR	3627342	Parameter	FT_Module module	1174:22:30143:30161	3627304	0	True				
ANR	3627343	ParameterType	FT_Module		3627304	0					
ANR	3627344	Identifier	module		3627304	1					
ANR	3627345	Parameter	const char * module_interface	1175:22:30186:30214	3627304	1	True				
ANR	3627346	ParameterType	const char *		3627304	0					
ANR	3627347	Identifier	module_interface		3627304	1					
ANR	3627348	CFGEntryNode	ENTRY		3627304		True				
ANR	3627349	CFGExitNode	EXIT		3627304		True				
ANR	3627350	Symbol	module -> library		3627304						
ANR	3627351	Symbol	SFNT_SERVICES_GET		3627304						
ANR	3627352	Symbol	module_interface		3627304						
ANR	3627353	Symbol	library		3627304						
ANR	3627354	Symbol	NULL		3627304						
ANR	3627355	Symbol	* module		3627304						
ANR	3627356	Symbol	module		3627304						
ANR	3627357	Symbol	ft_service_list_lookup		3627304						
