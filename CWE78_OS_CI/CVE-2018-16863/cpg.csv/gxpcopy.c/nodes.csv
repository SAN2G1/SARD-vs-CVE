command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5759514	File	data/converged/CVE-2018-16863_ghostpdl/gxpcopy.c								
ANR	5759515	DeclStmt									
ANR	5759516	Decl							void	"void ( segment * , const segment * , const gs_fixed_point * )"	adjust_point_to_tangent
ANR	5759517	Function	break_line_if_long	30:0:943:1831							
ANR	5759518	FunctionDef	"break_line_if_long (gx_path * ppath , const segment * pseg)"		5759517	0					
ANR	5759519	CompoundStatement		32:0:1017:1831	5759517	0					
ANR	5759520	IdentifierDeclStatement	fixed x0 = ppath -> position . x ;	33:4:1023:1051	5759517	0	True				
ANR	5759521	IdentifierDecl	x0 = ppath -> position . x		5759517	0					
ANR	5759522	IdentifierDeclType	fixed		5759517	0					
ANR	5759523	Identifier	x0		5759517	1					
ANR	5759524	AssignmentExpression	x0 = ppath -> position . x		5759517	2		=			
ANR	5759525	Identifier	x0		5759517	0					
ANR	5759526	MemberAccess	ppath -> position . x		5759517	1					
ANR	5759527	PtrMemberAccess	ppath -> position		5759517	0					
ANR	5759528	Identifier	ppath		5759517	0					
ANR	5759529	Identifier	position		5759517	1					
ANR	5759530	Identifier	x		5759517	1					
ANR	5759531	IdentifierDeclStatement	fixed y0 = ppath -> position . y ;	34:4:1057:1085	5759517	1	True				
ANR	5759532	IdentifierDecl	y0 = ppath -> position . y		5759517	0					
ANR	5759533	IdentifierDeclType	fixed		5759517	0					
ANR	5759534	Identifier	y0		5759517	1					
ANR	5759535	AssignmentExpression	y0 = ppath -> position . y		5759517	2		=			
ANR	5759536	Identifier	y0		5759517	0					
ANR	5759537	MemberAccess	ppath -> position . y		5759517	1					
ANR	5759538	PtrMemberAccess	ppath -> position		5759517	0					
ANR	5759539	Identifier	ppath		5759517	0					
ANR	5759540	Identifier	position		5759517	1					
ANR	5759541	Identifier	y		5759517	1					
ANR	5759542	IfStatement	"if ( gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 ) )"		5759517	2					
ANR	5759543	Condition	"gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 )"	36:8:1096:1195	5759517	0	True				
ANR	5759544	OrExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 )"		5759517	0		||			
ANR	5759545	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 )"		5759517	0					
ANR	5759546	Callee	gx_check_fixed_diff_overflow		5759517	0					
ANR	5759547	Identifier	gx_check_fixed_diff_overflow		5759517	0					
ANR	5759548	ArgumentList	pseg -> pt . x		5759517	1					
ANR	5759549	Argument	pseg -> pt . x		5759517	0					
ANR	5759550	MemberAccess	pseg -> pt . x		5759517	0					
ANR	5759551	PtrMemberAccess	pseg -> pt		5759517	0					
ANR	5759552	Identifier	pseg		5759517	0					
ANR	5759553	Identifier	pt		5759517	1					
ANR	5759554	Identifier	x		5759517	1					
ANR	5759555	Argument	x0		5759517	1					
ANR	5759556	Identifier	x0		5759517	0					
ANR	5759557	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 )"		5759517	1					
ANR	5759558	Callee	gx_check_fixed_diff_overflow		5759517	0					
ANR	5759559	Identifier	gx_check_fixed_diff_overflow		5759517	0					
ANR	5759560	ArgumentList	pseg -> pt . y		5759517	1					
ANR	5759561	Argument	pseg -> pt . y		5759517	0					
ANR	5759562	MemberAccess	pseg -> pt . y		5759517	0					
ANR	5759563	PtrMemberAccess	pseg -> pt		5759517	0					
ANR	5759564	Identifier	pseg		5759517	0					
ANR	5759565	Identifier	pt		5759517	1					
ANR	5759566	Identifier	y		5759517	1					
ANR	5759567	Argument	y0		5759517	1					
ANR	5759568	Identifier	y0		5759517	0					
ANR	5759569	CompoundStatement		7:8:190:200	5759517	1					
ANR	5759570	IdentifierDeclStatement	"fixed x , y ;"	38:8:1208:1218	5759517	0	True				
ANR	5759571	IdentifierDecl	x		5759517	0					
ANR	5759572	IdentifierDeclType	fixed		5759517	0					
ANR	5759573	Identifier	x		5759517	1					
ANR	5759574	IdentifierDecl	y		5759517	1					
ANR	5759575	IdentifierDeclType	fixed		5759517	0					
ANR	5759576	Identifier	y		5759517	1					
ANR	5759577	IfStatement	"if ( gx_check_fixed_sum_overflow ( pseg -> pt . x , x0 ) )"		5759517	1					
ANR	5759578	Condition	"gx_check_fixed_sum_overflow ( pseg -> pt . x , x0 )"	40:12:1233:1275	5759517	0	True				
ANR	5759579	CallExpression	"gx_check_fixed_sum_overflow ( pseg -> pt . x , x0 )"		5759517	0					
ANR	5759580	Callee	gx_check_fixed_sum_overflow		5759517	0					
ANR	5759581	Identifier	gx_check_fixed_sum_overflow		5759517	0					
ANR	5759582	ArgumentList	pseg -> pt . x		5759517	1					
ANR	5759583	Argument	pseg -> pt . x		5759517	0					
ANR	5759584	MemberAccess	pseg -> pt . x		5759517	0					
ANR	5759585	PtrMemberAccess	pseg -> pt		5759517	0					
ANR	5759586	Identifier	pseg		5759517	0					
ANR	5759587	Identifier	pt		5759517	1					
ANR	5759588	Identifier	x		5759517	1					
ANR	5759589	Argument	x0		5759517	1					
ANR	5759590	Identifier	x0		5759517	0					
ANR	5759591	ExpressionStatement	x = ( pseg -> pt . x >> 1 ) + ( x0 >> 1 )	41:12:1290:1323	5759517	1	True				
ANR	5759592	AssignmentExpression	x = ( pseg -> pt . x >> 1 ) + ( x0 >> 1 )		5759517	0		=			
ANR	5759593	Identifier	x		5759517	0					
ANR	5759594	AdditiveExpression	( pseg -> pt . x >> 1 ) + ( x0 >> 1 )		5759517	1		+			
ANR	5759595	ShiftExpression	pseg -> pt . x >> 1		5759517	0		>>			
ANR	5759596	MemberAccess	pseg -> pt . x		5759517	0					
ANR	5759597	PtrMemberAccess	pseg -> pt		5759517	0					
ANR	5759598	Identifier	pseg		5759517	0					
ANR	5759599	Identifier	pt		5759517	1					
ANR	5759600	Identifier	x		5759517	1					
ANR	5759601	PrimaryExpression	1		5759517	1					
ANR	5759602	ShiftExpression	x0 >> 1		5759517	1		>>			
ANR	5759603	Identifier	x0		5759517	0					
ANR	5759604	PrimaryExpression	1		5759517	1					
ANR	5759605	ElseStatement	else		5759517	0					
ANR	5759606	ExpressionStatement	x = ( pseg -> pt . x + x0 ) >> 1	43:12:1350:1376	5759517	0	True				
ANR	5759607	AssignmentExpression	x = ( pseg -> pt . x + x0 ) >> 1		5759517	0		=			
ANR	5759608	Identifier	x		5759517	0					
ANR	5759609	ShiftExpression	( pseg -> pt . x + x0 ) >> 1		5759517	1		>>			
ANR	5759610	AdditiveExpression	pseg -> pt . x + x0		5759517	0		+			
ANR	5759611	MemberAccess	pseg -> pt . x		5759517	0					
ANR	5759612	PtrMemberAccess	pseg -> pt		5759517	0					
ANR	5759613	Identifier	pseg		5759517	0					
ANR	5759614	Identifier	pt		5759517	1					
ANR	5759615	Identifier	x		5759517	1					
ANR	5759616	Identifier	x0		5759517	1					
ANR	5759617	PrimaryExpression	1		5759517	1					
ANR	5759618	IfStatement	"if ( gx_check_fixed_sum_overflow ( pseg -> pt . y , y0 ) )"		5759517	2					
ANR	5759619	Condition	"gx_check_fixed_sum_overflow ( pseg -> pt . y , y0 )"	44:12:1390:1432	5759517	0	True				
ANR	5759620	CallExpression	"gx_check_fixed_sum_overflow ( pseg -> pt . y , y0 )"		5759517	0					
ANR	5759621	Callee	gx_check_fixed_sum_overflow		5759517	0					
ANR	5759622	Identifier	gx_check_fixed_sum_overflow		5759517	0					
ANR	5759623	ArgumentList	pseg -> pt . y		5759517	1					
ANR	5759624	Argument	pseg -> pt . y		5759517	0					
ANR	5759625	MemberAccess	pseg -> pt . y		5759517	0					
ANR	5759626	PtrMemberAccess	pseg -> pt		5759517	0					
ANR	5759627	Identifier	pseg		5759517	0					
ANR	5759628	Identifier	pt		5759517	1					
ANR	5759629	Identifier	y		5759517	1					
ANR	5759630	Argument	y0		5759517	1					
ANR	5759631	Identifier	y0		5759517	0					
ANR	5759632	ExpressionStatement	y = ( pseg -> pt . y >> 1 ) + ( y0 >> 1 )	45:12:1447:1480	5759517	1	True				
ANR	5759633	AssignmentExpression	y = ( pseg -> pt . y >> 1 ) + ( y0 >> 1 )		5759517	0		=			
ANR	5759634	Identifier	y		5759517	0					
ANR	5759635	AdditiveExpression	( pseg -> pt . y >> 1 ) + ( y0 >> 1 )		5759517	1		+			
ANR	5759636	ShiftExpression	pseg -> pt . y >> 1		5759517	0		>>			
ANR	5759637	MemberAccess	pseg -> pt . y		5759517	0					
ANR	5759638	PtrMemberAccess	pseg -> pt		5759517	0					
ANR	5759639	Identifier	pseg		5759517	0					
ANR	5759640	Identifier	pt		5759517	1					
ANR	5759641	Identifier	y		5759517	1					
ANR	5759642	PrimaryExpression	1		5759517	1					
ANR	5759643	ShiftExpression	y0 >> 1		5759517	1		>>			
ANR	5759644	Identifier	y0		5759517	0					
ANR	5759645	PrimaryExpression	1		5759517	1					
ANR	5759646	ElseStatement	else		5759517	0					
ANR	5759647	ExpressionStatement	y = ( pseg -> pt . y + y0 ) >> 1	47:12:1507:1533	5759517	0	True				
ANR	5759648	AssignmentExpression	y = ( pseg -> pt . y + y0 ) >> 1		5759517	0		=			
ANR	5759649	Identifier	y		5759517	0					
ANR	5759650	ShiftExpression	( pseg -> pt . y + y0 ) >> 1		5759517	1		>>			
ANR	5759651	AdditiveExpression	pseg -> pt . y + y0		5759517	0		+			
ANR	5759652	MemberAccess	pseg -> pt . y		5759517	0					
ANR	5759653	PtrMemberAccess	pseg -> pt		5759517	0					
ANR	5759654	Identifier	pseg		5759517	0					
ANR	5759655	Identifier	pt		5759517	1					
ANR	5759656	Identifier	y		5759517	1					
ANR	5759657	Identifier	y0		5759517	1					
ANR	5759658	PrimaryExpression	1		5759517	1					
ANR	5759659	ReturnStatement	"return gx_path_add_line_notes ( ppath , x , y , pseg -> notes ) ;"	48:8:1543:1598	5759517	3	True				
ANR	5759660	CallExpression	"gx_path_add_line_notes ( ppath , x , y , pseg -> notes )"		5759517	0					
ANR	5759661	Callee	gx_path_add_line_notes		5759517	0					
ANR	5759662	Identifier	gx_path_add_line_notes		5759517	0					
ANR	5759663	ArgumentList	ppath		5759517	1					
ANR	5759664	Argument	ppath		5759517	0					
ANR	5759665	Identifier	ppath		5759517	0					
ANR	5759666	Argument	x		5759517	1					
ANR	5759667	Identifier	x		5759517	0					
ANR	5759668	Argument	y		5759517	2					
ANR	5759669	Identifier	y		5759517	0					
ANR	5759670	Argument	pseg -> notes		5759517	3					
ANR	5759671	PtrMemberAccess	pseg -> notes		5759517	0					
ANR	5759672	Identifier	pseg		5759517	0					
ANR	5759673	Identifier	notes		5759517	1					
ANR	5759674	ReturnStatement	return 0 ;	54:4:1821:1829	5759517	3	True				
ANR	5759675	PrimaryExpression	0		5759517	0					
ANR	5759676	ReturnType	static inline int		5759517	1					
ANR	5759677	Identifier	break_line_if_long		5759517	2					
ANR	5759678	ParameterList	"gx_path * ppath , const segment * pseg"		5759517	3					
ANR	5759679	Parameter	gx_path * ppath	31:19:980:993	5759517	0	True				
ANR	5759680	ParameterType	gx_path *		5759517	0					
ANR	5759681	Identifier	ppath		5759517	1					
ANR	5759682	Parameter	const segment * pseg	31:35:996:1014	5759517	1	True				
ANR	5759683	ParameterType	const segment *		5759517	0					
ANR	5759684	Identifier	pseg		5759517	1					
ANR	5759685	CFGEntryNode	ENTRY		5759517		True				
ANR	5759686	CFGExitNode	EXIT		5759517		True				
ANR	5759687	Symbol	* ppath		5759517						
ANR	5759688	Symbol	pseg -> notes		5759517						
ANR	5759689	Symbol	gx_path_add_line_notes		5759517						
ANR	5759690	Symbol	gx_check_fixed_sum_overflow		5759517						
ANR	5759691	Symbol	ppath -> position . x		5759517						
ANR	5759692	Symbol	pseg -> pt . x		5759517						
ANR	5759693	Symbol	ppath		5759517						
ANR	5759694	Symbol	pseg -> pt . y		5759517						
ANR	5759695	Symbol	ppath -> position . y		5759517						
ANR	5759696	Symbol	gx_check_fixed_diff_overflow		5759517						
ANR	5759697	Symbol	pseg		5759517						
ANR	5759698	Symbol	pseg -> pt		5759517						
ANR	5759699	Symbol	y0		5759517						
ANR	5759700	Symbol	x0		5759517						
ANR	5759701	Symbol	* pseg		5759517						
ANR	5759702	Symbol	x		5759517						
ANR	5759703	Symbol	y		5759517						
ANR	5759704	Symbol	ppath -> position		5759517						
ANR	5759705	Function	break_gap_if_long	56:0:1833:2719							
ANR	5759706	FunctionDef	"break_gap_if_long (gx_path * ppath , const segment * pseg)"		5759705	0					
ANR	5759707	CompoundStatement		58:0:1906:2719	5759705	0					
ANR	5759708	IdentifierDeclStatement	fixed x0 = ppath -> position . x ;	59:4:1912:1940	5759705	0	True				
ANR	5759709	IdentifierDecl	x0 = ppath -> position . x		5759705	0					
ANR	5759710	IdentifierDeclType	fixed		5759705	0					
ANR	5759711	Identifier	x0		5759705	1					
ANR	5759712	AssignmentExpression	x0 = ppath -> position . x		5759705	2		=			
ANR	5759713	Identifier	x0		5759705	0					
ANR	5759714	MemberAccess	ppath -> position . x		5759705	1					
ANR	5759715	PtrMemberAccess	ppath -> position		5759705	0					
ANR	5759716	Identifier	ppath		5759705	0					
ANR	5759717	Identifier	position		5759705	1					
ANR	5759718	Identifier	x		5759705	1					
ANR	5759719	IdentifierDeclStatement	fixed y0 = ppath -> position . y ;	60:4:1946:1974	5759705	1	True				
ANR	5759720	IdentifierDecl	y0 = ppath -> position . y		5759705	0					
ANR	5759721	IdentifierDeclType	fixed		5759705	0					
ANR	5759722	Identifier	y0		5759705	1					
ANR	5759723	AssignmentExpression	y0 = ppath -> position . y		5759705	2		=			
ANR	5759724	Identifier	y0		5759705	0					
ANR	5759725	MemberAccess	ppath -> position . y		5759705	1					
ANR	5759726	PtrMemberAccess	ppath -> position		5759705	0					
ANR	5759727	Identifier	ppath		5759705	0					
ANR	5759728	Identifier	position		5759705	1					
ANR	5759729	Identifier	y		5759705	1					
ANR	5759730	IfStatement	"if ( gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 ) )"		5759705	2					
ANR	5759731	Condition	"gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 )"	62:8:1985:2084	5759705	0	True				
ANR	5759732	OrExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 )"		5759705	0		||			
ANR	5759733	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 )"		5759705	0					
ANR	5759734	Callee	gx_check_fixed_diff_overflow		5759705	0					
ANR	5759735	Identifier	gx_check_fixed_diff_overflow		5759705	0					
ANR	5759736	ArgumentList	pseg -> pt . x		5759705	1					
ANR	5759737	Argument	pseg -> pt . x		5759705	0					
ANR	5759738	MemberAccess	pseg -> pt . x		5759705	0					
ANR	5759739	PtrMemberAccess	pseg -> pt		5759705	0					
ANR	5759740	Identifier	pseg		5759705	0					
ANR	5759741	Identifier	pt		5759705	1					
ANR	5759742	Identifier	x		5759705	1					
ANR	5759743	Argument	x0		5759705	1					
ANR	5759744	Identifier	x0		5759705	0					
ANR	5759745	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 )"		5759705	1					
ANR	5759746	Callee	gx_check_fixed_diff_overflow		5759705	0					
ANR	5759747	Identifier	gx_check_fixed_diff_overflow		5759705	0					
ANR	5759748	ArgumentList	pseg -> pt . y		5759705	1					
ANR	5759749	Argument	pseg -> pt . y		5759705	0					
ANR	5759750	MemberAccess	pseg -> pt . y		5759705	0					
ANR	5759751	PtrMemberAccess	pseg -> pt		5759705	0					
ANR	5759752	Identifier	pseg		5759705	0					
ANR	5759753	Identifier	pt		5759705	1					
ANR	5759754	Identifier	y		5759705	1					
ANR	5759755	Argument	y0		5759705	1					
ANR	5759756	Identifier	y0		5759705	0					
ANR	5759757	CompoundStatement		7:8:190:200	5759705	1					
ANR	5759758	IdentifierDeclStatement	"fixed x , y ;"	64:8:2097:2107	5759705	0	True				
ANR	5759759	IdentifierDecl	x		5759705	0					
ANR	5759760	IdentifierDeclType	fixed		5759705	0					
ANR	5759761	Identifier	x		5759705	1					
ANR	5759762	IdentifierDecl	y		5759705	1					
ANR	5759763	IdentifierDeclType	fixed		5759705	0					
ANR	5759764	Identifier	y		5759705	1					
ANR	5759765	IfStatement	"if ( gx_check_fixed_sum_overflow ( pseg -> pt . x , x0 ) )"		5759705	1					
ANR	5759766	Condition	"gx_check_fixed_sum_overflow ( pseg -> pt . x , x0 )"	66:12:2122:2164	5759705	0	True				
ANR	5759767	CallExpression	"gx_check_fixed_sum_overflow ( pseg -> pt . x , x0 )"		5759705	0					
ANR	5759768	Callee	gx_check_fixed_sum_overflow		5759705	0					
ANR	5759769	Identifier	gx_check_fixed_sum_overflow		5759705	0					
ANR	5759770	ArgumentList	pseg -> pt . x		5759705	1					
ANR	5759771	Argument	pseg -> pt . x		5759705	0					
ANR	5759772	MemberAccess	pseg -> pt . x		5759705	0					
ANR	5759773	PtrMemberAccess	pseg -> pt		5759705	0					
ANR	5759774	Identifier	pseg		5759705	0					
ANR	5759775	Identifier	pt		5759705	1					
ANR	5759776	Identifier	x		5759705	1					
ANR	5759777	Argument	x0		5759705	1					
ANR	5759778	Identifier	x0		5759705	0					
ANR	5759779	ExpressionStatement	x = ( pseg -> pt . x >> 1 ) + ( x0 >> 1 )	67:12:2179:2212	5759705	1	True				
ANR	5759780	AssignmentExpression	x = ( pseg -> pt . x >> 1 ) + ( x0 >> 1 )		5759705	0		=			
ANR	5759781	Identifier	x		5759705	0					
ANR	5759782	AdditiveExpression	( pseg -> pt . x >> 1 ) + ( x0 >> 1 )		5759705	1		+			
ANR	5759783	ShiftExpression	pseg -> pt . x >> 1		5759705	0		>>			
ANR	5759784	MemberAccess	pseg -> pt . x		5759705	0					
ANR	5759785	PtrMemberAccess	pseg -> pt		5759705	0					
ANR	5759786	Identifier	pseg		5759705	0					
ANR	5759787	Identifier	pt		5759705	1					
ANR	5759788	Identifier	x		5759705	1					
ANR	5759789	PrimaryExpression	1		5759705	1					
ANR	5759790	ShiftExpression	x0 >> 1		5759705	1		>>			
ANR	5759791	Identifier	x0		5759705	0					
ANR	5759792	PrimaryExpression	1		5759705	1					
ANR	5759793	ElseStatement	else		5759705	0					
ANR	5759794	ExpressionStatement	x = ( pseg -> pt . x + x0 ) >> 1	69:12:2239:2265	5759705	0	True				
ANR	5759795	AssignmentExpression	x = ( pseg -> pt . x + x0 ) >> 1		5759705	0		=			
ANR	5759796	Identifier	x		5759705	0					
ANR	5759797	ShiftExpression	( pseg -> pt . x + x0 ) >> 1		5759705	1		>>			
ANR	5759798	AdditiveExpression	pseg -> pt . x + x0		5759705	0		+			
ANR	5759799	MemberAccess	pseg -> pt . x		5759705	0					
ANR	5759800	PtrMemberAccess	pseg -> pt		5759705	0					
ANR	5759801	Identifier	pseg		5759705	0					
ANR	5759802	Identifier	pt		5759705	1					
ANR	5759803	Identifier	x		5759705	1					
ANR	5759804	Identifier	x0		5759705	1					
ANR	5759805	PrimaryExpression	1		5759705	1					
ANR	5759806	IfStatement	"if ( gx_check_fixed_sum_overflow ( pseg -> pt . y , y0 ) )"		5759705	2					
ANR	5759807	Condition	"gx_check_fixed_sum_overflow ( pseg -> pt . y , y0 )"	70:12:2279:2321	5759705	0	True				
ANR	5759808	CallExpression	"gx_check_fixed_sum_overflow ( pseg -> pt . y , y0 )"		5759705	0					
ANR	5759809	Callee	gx_check_fixed_sum_overflow		5759705	0					
ANR	5759810	Identifier	gx_check_fixed_sum_overflow		5759705	0					
ANR	5759811	ArgumentList	pseg -> pt . y		5759705	1					
ANR	5759812	Argument	pseg -> pt . y		5759705	0					
ANR	5759813	MemberAccess	pseg -> pt . y		5759705	0					
ANR	5759814	PtrMemberAccess	pseg -> pt		5759705	0					
ANR	5759815	Identifier	pseg		5759705	0					
ANR	5759816	Identifier	pt		5759705	1					
ANR	5759817	Identifier	y		5759705	1					
ANR	5759818	Argument	y0		5759705	1					
ANR	5759819	Identifier	y0		5759705	0					
ANR	5759820	ExpressionStatement	y = ( pseg -> pt . y >> 1 ) + ( y0 >> 1 )	71:12:2336:2369	5759705	1	True				
ANR	5759821	AssignmentExpression	y = ( pseg -> pt . y >> 1 ) + ( y0 >> 1 )		5759705	0		=			
ANR	5759822	Identifier	y		5759705	0					
ANR	5759823	AdditiveExpression	( pseg -> pt . y >> 1 ) + ( y0 >> 1 )		5759705	1		+			
ANR	5759824	ShiftExpression	pseg -> pt . y >> 1		5759705	0		>>			
ANR	5759825	MemberAccess	pseg -> pt . y		5759705	0					
ANR	5759826	PtrMemberAccess	pseg -> pt		5759705	0					
ANR	5759827	Identifier	pseg		5759705	0					
ANR	5759828	Identifier	pt		5759705	1					
ANR	5759829	Identifier	y		5759705	1					
ANR	5759830	PrimaryExpression	1		5759705	1					
ANR	5759831	ShiftExpression	y0 >> 1		5759705	1		>>			
ANR	5759832	Identifier	y0		5759705	0					
ANR	5759833	PrimaryExpression	1		5759705	1					
ANR	5759834	ElseStatement	else		5759705	0					
ANR	5759835	ExpressionStatement	y = ( pseg -> pt . y + y0 ) >> 1	73:12:2396:2422	5759705	0	True				
ANR	5759836	AssignmentExpression	y = ( pseg -> pt . y + y0 ) >> 1		5759705	0		=			
ANR	5759837	Identifier	y		5759705	0					
ANR	5759838	ShiftExpression	( pseg -> pt . y + y0 ) >> 1		5759705	1		>>			
ANR	5759839	AdditiveExpression	pseg -> pt . y + y0		5759705	0		+			
ANR	5759840	MemberAccess	pseg -> pt . y		5759705	0					
ANR	5759841	PtrMemberAccess	pseg -> pt		5759705	0					
ANR	5759842	Identifier	pseg		5759705	0					
ANR	5759843	Identifier	pt		5759705	1					
ANR	5759844	Identifier	y		5759705	1					
ANR	5759845	Identifier	y0		5759705	1					
ANR	5759846	PrimaryExpression	1		5759705	1					
ANR	5759847	ReturnStatement	"return gx_path_add_gap_notes ( ppath , x , y , pseg -> notes ) ;"	74:8:2432:2486	5759705	3	True				
ANR	5759848	CallExpression	"gx_path_add_gap_notes ( ppath , x , y , pseg -> notes )"		5759705	0					
ANR	5759849	Callee	gx_path_add_gap_notes		5759705	0					
ANR	5759850	Identifier	gx_path_add_gap_notes		5759705	0					
ANR	5759851	ArgumentList	ppath		5759705	1					
ANR	5759852	Argument	ppath		5759705	0					
ANR	5759853	Identifier	ppath		5759705	0					
ANR	5759854	Argument	x		5759705	1					
ANR	5759855	Identifier	x		5759705	0					
ANR	5759856	Argument	y		5759705	2					
ANR	5759857	Identifier	y		5759705	0					
ANR	5759858	Argument	pseg -> notes		5759705	3					
ANR	5759859	PtrMemberAccess	pseg -> notes		5759705	0					
ANR	5759860	Identifier	pseg		5759705	0					
ANR	5759861	Identifier	notes		5759705	1					
ANR	5759862	ReturnStatement	return 0 ;	80:4:2709:2717	5759705	3	True				
ANR	5759863	PrimaryExpression	0		5759705	0					
ANR	5759864	ReturnType	static inline int		5759705	1					
ANR	5759865	Identifier	break_gap_if_long		5759705	2					
ANR	5759866	ParameterList	"gx_path * ppath , const segment * pseg"		5759705	3					
ANR	5759867	Parameter	gx_path * ppath	57:18:1869:1882	5759705	0	True				
ANR	5759868	ParameterType	gx_path *		5759705	0					
ANR	5759869	Identifier	ppath		5759705	1					
ANR	5759870	Parameter	const segment * pseg	57:34:1885:1903	5759705	1	True				
ANR	5759871	ParameterType	const segment *		5759705	0					
ANR	5759872	Identifier	pseg		5759705	1					
ANR	5759873	CFGEntryNode	ENTRY		5759705		True				
ANR	5759874	CFGExitNode	EXIT		5759705		True				
ANR	5759875	Symbol	* ppath		5759705						
ANR	5759876	Symbol	gx_path_add_gap_notes		5759705						
ANR	5759877	Symbol	pseg -> notes		5759705						
ANR	5759878	Symbol	gx_check_fixed_sum_overflow		5759705						
ANR	5759879	Symbol	ppath -> position . x		5759705						
ANR	5759880	Symbol	pseg -> pt . x		5759705						
ANR	5759881	Symbol	ppath		5759705						
ANR	5759882	Symbol	pseg -> pt . y		5759705						
ANR	5759883	Symbol	ppath -> position . y		5759705						
ANR	5759884	Symbol	gx_check_fixed_diff_overflow		5759705						
ANR	5759885	Symbol	pseg		5759705						
ANR	5759886	Symbol	pseg -> pt		5759705						
ANR	5759887	Symbol	y0		5759705						
ANR	5759888	Symbol	x0		5759705						
ANR	5759889	Symbol	* pseg		5759705						
ANR	5759890	Symbol	x		5759705						
ANR	5759891	Symbol	y		5759705						
ANR	5759892	Symbol	ppath -> position		5759705						
ANR	5759893	Function	gx_path_copy_reducing	85:0:2827:12605							
ANR	5759894	FunctionDef	"gx_path_copy_reducing (const gx_path * ppath_old , gx_path * ppath , fixed fixed_flatness , const gs_gstate * pgs , gx_path_copy_options options)"		5759893	0					
ANR	5759895	CompoundStatement		89:0:3013:12605	5759893	0					
ANR	5759896	IdentifierDeclStatement	const segment * pseg ;	90:4:3019:3038	5759893	0	True				
ANR	5759897	IdentifierDecl	* pseg		5759893	0					
ANR	5759898	IdentifierDeclType	const segment *		5759893	0					
ANR	5759899	Identifier	pseg		5759893	1					
ANR	5759900	IdentifierDeclStatement	fixed flat = fixed_flatness ;	91:4:3044:3071	5759893	1	True				
ANR	5759901	IdentifierDecl	flat = fixed_flatness		5759893	0					
ANR	5759902	IdentifierDeclType	fixed		5759893	0					
ANR	5759903	Identifier	flat		5759893	1					
ANR	5759904	AssignmentExpression	flat = fixed_flatness		5759893	2		=			
ANR	5759905	Identifier	fixed_flatness		5759893	0					
ANR	5759906	Identifier	fixed_flatness		5759893	1					
ANR	5759907	IdentifierDeclStatement	gs_fixed_point expansion ;	92:4:3077:3101	5759893	2	True				
ANR	5759908	IdentifierDecl	expansion		5759893	0					
ANR	5759909	IdentifierDeclType	gs_fixed_point		5759893	0					
ANR	5759910	Identifier	expansion		5759893	1					
ANR	5759911	IdentifierDeclStatement	int code = gx_path_unshare ( ppath ) ;	97:4:3208:3241	5759893	3	True				
ANR	5759912	IdentifierDecl	code = gx_path_unshare ( ppath )		5759893	0					
ANR	5759913	IdentifierDeclType	int		5759893	0					
ANR	5759914	Identifier	code		5759893	1					
ANR	5759915	AssignmentExpression	code = gx_path_unshare ( ppath )		5759893	2		=			
ANR	5759916	Identifier	code		5759893	0					
ANR	5759917	CallExpression	gx_path_unshare ( ppath )		5759893	1					
ANR	5759918	Callee	gx_path_unshare		5759893	0					
ANR	5759919	Identifier	gx_path_unshare		5759893	0					
ANR	5759920	ArgumentList	ppath		5759893	1					
ANR	5759921	Argument	ppath		5759893	0					
ANR	5759922	Identifier	ppath		5759893	0					
ANR	5759923	IfStatement	if ( code < 0 )		5759893	4					
ANR	5759924	Condition	code < 0	99:8:3252:3259	5759893	0	True				
ANR	5759925	RelationalExpression	code < 0		5759893	0		<			
ANR	5759926	Identifier	code		5759893	0					
ANR	5759927	PrimaryExpression	0		5759893	1					
ANR	5759928	ReturnStatement	return code ;	100:8:3270:3281	5759893	1	True				
ANR	5759929	Identifier	code		5759893	0					
ANR	5759930	IfStatement	if ( gs_debug_c ( 'P' ) )		5759893	5					
ANR	5759931	Condition	gs_debug_c ( 'P' )	102:8:3304:3318	5759893	0	True				
ANR	5759932	CallExpression	gs_debug_c ( 'P' )		5759893	0					
ANR	5759933	Callee	gs_debug_c		5759893	0					
ANR	5759934	Identifier	gs_debug_c		5759893	0					
ANR	5759935	ArgumentList	'P'		5759893	1					
ANR	5759936	Argument	'P'		5759893	0					
ANR	5759937	PrimaryExpression	'P'		5759893	0					
ANR	5759938	ExpressionStatement	"gx_dump_path ( ppath_old , ""before reducing"" )"	103:8:3329:3371	5759893	1	True				
ANR	5759939	CallExpression	"gx_dump_path ( ppath_old , ""before reducing"" )"		5759893	0					
ANR	5759940	Callee	gx_dump_path		5759893	0					
ANR	5759941	Identifier	gx_dump_path		5759893	0					
ANR	5759942	ArgumentList	ppath_old		5759893	1					
ANR	5759943	Argument	ppath_old		5759893	0					
ANR	5759944	Identifier	ppath_old		5759893	0					
ANR	5759945	Argument	"""before reducing"""		5759893	1					
ANR	5759946	PrimaryExpression	"""before reducing"""		5759893	0					
ANR	5759947	IfStatement	if ( options & pco_for_stroke )		5759893	6					
ANR	5759948	Condition	options & pco_for_stroke	105:8:3388:3411	5759893	0	True				
ANR	5759949	BitAndExpression	options & pco_for_stroke		5759893	0		&			
ANR	5759950	Identifier	options		5759893	0					
ANR	5759951	Identifier	pco_for_stroke		5759893	1					
ANR	5759952	CompoundStatement		19:8:478:520	5759893	1					
ANR	5759953	IdentifierDeclStatement	double width = pgs -> line_params . half_width ;	107:8:3492:3534	5759893	0	True				
ANR	5759954	IdentifierDecl	width = pgs -> line_params . half_width		5759893	0					
ANR	5759955	IdentifierDeclType	double		5759893	0					
ANR	5759956	Identifier	width		5759893	1					
ANR	5759957	AssignmentExpression	width = pgs -> line_params . half_width		5759893	2		=			
ANR	5759958	Identifier	width		5759893	0					
ANR	5759959	MemberAccess	pgs -> line_params . half_width		5759893	1					
ANR	5759960	PtrMemberAccess	pgs -> line_params		5759893	0					
ANR	5759961	Identifier	pgs		5759893	0					
ANR	5759962	Identifier	line_params		5759893	1					
ANR	5759963	Identifier	half_width		5759893	1					
ANR	5759964	ExpressionStatement	expansion . x = float2fixed ( ( fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx ) ) * width ) * 2	109:8:3545:3635	5759893	1	True				
ANR	5759965	AssignmentExpression	expansion . x = float2fixed ( ( fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx ) ) * width ) * 2		5759893	0		=			
ANR	5759966	MemberAccess	expansion . x		5759893	0					
ANR	5759967	Identifier	expansion		5759893	0					
ANR	5759968	Identifier	x		5759893	1					
ANR	5759969	MultiplicativeExpression	float2fixed ( ( fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx ) ) * width ) * 2		5759893	1		*			
ANR	5759970	CallExpression	float2fixed ( ( fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx ) ) * width )		5759893	0					
ANR	5759971	Callee	float2fixed		5759893	0					
ANR	5759972	Identifier	float2fixed		5759893	0					
ANR	5759973	ArgumentList	( fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx ) ) * width		5759893	1					
ANR	5759974	Argument	( fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx ) ) * width		5759893	0					
ANR	5759975	MultiplicativeExpression	( fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx ) ) * width		5759893	0		*			
ANR	5759976	AdditiveExpression	fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx )		5759893	0		+			
ANR	5759977	CallExpression	fabs ( pgs -> ctm . xx )		5759893	0					
ANR	5759978	Callee	fabs		5759893	0					
ANR	5759979	Identifier	fabs		5759893	0					
ANR	5759980	ArgumentList	pgs -> ctm . xx		5759893	1					
ANR	5759981	Argument	pgs -> ctm . xx		5759893	0					
ANR	5759982	MemberAccess	pgs -> ctm . xx		5759893	0					
ANR	5759983	PtrMemberAccess	pgs -> ctm		5759893	0					
ANR	5759984	Identifier	pgs		5759893	0					
ANR	5759985	Identifier	ctm		5759893	1					
ANR	5759986	Identifier	xx		5759893	1					
ANR	5759987	CallExpression	fabs ( pgs -> ctm . yx )		5759893	1					
ANR	5759988	Callee	fabs		5759893	0					
ANR	5759989	Identifier	fabs		5759893	0					
ANR	5759990	ArgumentList	pgs -> ctm . yx		5759893	1					
ANR	5759991	Argument	pgs -> ctm . yx		5759893	0					
ANR	5759992	MemberAccess	pgs -> ctm . yx		5759893	0					
ANR	5759993	PtrMemberAccess	pgs -> ctm		5759893	0					
ANR	5759994	Identifier	pgs		5759893	0					
ANR	5759995	Identifier	ctm		5759893	1					
ANR	5759996	Identifier	yx		5759893	1					
ANR	5759997	Identifier	width		5759893	1					
ANR	5759998	PrimaryExpression	2		5759893	1					
ANR	5759999	ExpressionStatement	expansion . y = float2fixed ( ( fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy ) ) * width ) * 2	111:8:3645:3735	5759893	2	True				
ANR	5760000	AssignmentExpression	expansion . y = float2fixed ( ( fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy ) ) * width ) * 2		5759893	0		=			
ANR	5760001	MemberAccess	expansion . y		5759893	0					
ANR	5760002	Identifier	expansion		5759893	0					
ANR	5760003	Identifier	y		5759893	1					
ANR	5760004	MultiplicativeExpression	float2fixed ( ( fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy ) ) * width ) * 2		5759893	1		*			
ANR	5760005	CallExpression	float2fixed ( ( fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy ) ) * width )		5759893	0					
ANR	5760006	Callee	float2fixed		5759893	0					
ANR	5760007	Identifier	float2fixed		5759893	0					
ANR	5760008	ArgumentList	( fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy ) ) * width		5759893	1					
ANR	5760009	Argument	( fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy ) ) * width		5759893	0					
ANR	5760010	MultiplicativeExpression	( fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy ) ) * width		5759893	0		*			
ANR	5760011	AdditiveExpression	fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy )		5759893	0		+			
ANR	5760012	CallExpression	fabs ( pgs -> ctm . xy )		5759893	0					
ANR	5760013	Callee	fabs		5759893	0					
ANR	5760014	Identifier	fabs		5759893	0					
ANR	5760015	ArgumentList	pgs -> ctm . xy		5759893	1					
ANR	5760016	Argument	pgs -> ctm . xy		5759893	0					
ANR	5760017	MemberAccess	pgs -> ctm . xy		5759893	0					
ANR	5760018	PtrMemberAccess	pgs -> ctm		5759893	0					
ANR	5760019	Identifier	pgs		5759893	0					
ANR	5760020	Identifier	ctm		5759893	1					
ANR	5760021	Identifier	xy		5759893	1					
ANR	5760022	CallExpression	fabs ( pgs -> ctm . yy )		5759893	1					
ANR	5760023	Callee	fabs		5759893	0					
ANR	5760024	Identifier	fabs		5759893	0					
ANR	5760025	ArgumentList	pgs -> ctm . yy		5759893	1					
ANR	5760026	Argument	pgs -> ctm . yy		5759893	0					
ANR	5760027	MemberAccess	pgs -> ctm . yy		5759893	0					
ANR	5760028	PtrMemberAccess	pgs -> ctm		5759893	0					
ANR	5760029	Identifier	pgs		5759893	0					
ANR	5760030	Identifier	ctm		5759893	1					
ANR	5760031	Identifier	yy		5759893	1					
ANR	5760032	Identifier	width		5759893	1					
ANR	5760033	PrimaryExpression	2		5759893	1					
ANR	5760034	ElseStatement	else		5759893	0					
ANR	5760035	ExpressionStatement	expansion . x = expansion . y = 0	114:8:3756:3785	5759893	0	True				
ANR	5760036	AssignmentExpression	expansion . x = expansion . y = 0		5759893	0		=			
ANR	5760037	MemberAccess	expansion . x		5759893	0					
ANR	5760038	Identifier	expansion		5759893	0					
ANR	5760039	Identifier	x		5759893	1					
ANR	5760040	AssignmentExpression	expansion . y = 0		5759893	1		=			
ANR	5760041	MemberAccess	expansion . y		5759893	0					
ANR	5760042	Identifier	expansion		5759893	0					
ANR	5760043	Identifier	y		5759893	1					
ANR	5760044	PrimaryExpression	0		5759893	1					
ANR	5760045	ExpressionStatement	pseg = ( const segment * ) ( ppath_old -> first_subpath )	115:4:3816:3866	5759893	7	True				
ANR	5760046	AssignmentExpression	pseg = ( const segment * ) ( ppath_old -> first_subpath )		5759893	0		=			
ANR	5760047	Identifier	pseg		5759893	0					
ANR	5760048	CastExpression	( const segment * ) ( ppath_old -> first_subpath )		5759893	1					
ANR	5760049	CastTarget	const segment *		5759893	0					
ANR	5760050	PtrMemberAccess	ppath_old -> first_subpath		5759893	1					
ANR	5760051	Identifier	ppath_old		5759893	0					
ANR	5760052	Identifier	first_subpath		5759893	1					
ANR	5760053	WhileStatement	while ( pseg )		5759893	8					
ANR	5760054	Condition	pseg	116:11:3879:3882	5759893	0	True				
ANR	5760055	Identifier	pseg		5759893	0					
ANR	5760056	CompoundStatement		28:17:871:871	5759893	1					
ANR	5760057	SwitchStatement	switch ( pseg -> type )		5759893	0					
ANR	5760058	Condition	pseg -> type	117:16:3903:3912	5759893	0	True				
ANR	5760059	PtrMemberAccess	pseg -> type		5759893	0					
ANR	5760060	Identifier	pseg		5759893	0					
ANR	5760061	Identifier	type		5759893	1					
ANR	5760062	CompoundStatement		29:28:901:901	5759893	1					
ANR	5760063	Label	case s_start :	118:12:3929:3941	5759893	0	True				
ANR	5760064	Identifier	s_start		5759893	0					
ANR	5760065	ExpressionStatement	"code = gx_path_add_point ( ppath , pseg -> pt . x , pseg -> pt . y )"	119:16:3959:4055	5759893	1	True				
ANR	5760066	AssignmentExpression	"code = gx_path_add_point ( ppath , pseg -> pt . x , pseg -> pt . y )"		5759893	0		=			
ANR	5760067	Identifier	code		5759893	0					
ANR	5760068	CallExpression	"gx_path_add_point ( ppath , pseg -> pt . x , pseg -> pt . y )"		5759893	1					
ANR	5760069	Callee	gx_path_add_point		5759893	0					
ANR	5760070	Identifier	gx_path_add_point		5759893	0					
ANR	5760071	ArgumentList	ppath		5759893	1					
ANR	5760072	Argument	ppath		5759893	0					
ANR	5760073	Identifier	ppath		5759893	0					
ANR	5760074	Argument	pseg -> pt . x		5759893	1					
ANR	5760075	MemberAccess	pseg -> pt . x		5759893	0					
ANR	5760076	PtrMemberAccess	pseg -> pt		5759893	0					
ANR	5760077	Identifier	pseg		5759893	0					
ANR	5760078	Identifier	pt		5759893	1					
ANR	5760079	Identifier	x		5759893	1					
ANR	5760080	Argument	pseg -> pt . y		5759893	2					
ANR	5760081	MemberAccess	pseg -> pt . y		5759893	0					
ANR	5760082	PtrMemberAccess	pseg -> pt		5759893	0					
ANR	5760083	Identifier	pseg		5759893	0					
ANR	5760084	Identifier	pt		5759893	1					
ANR	5760085	Identifier	y		5759893	1					
ANR	5760086	BreakStatement	break ;	121:16:4073:4078	5759893	2	True				
ANR	5760087	Label	case s_curve :	122:12:4092:4104	5759893	3	True				
ANR	5760088	Identifier	s_curve		5759893	0					
ANR	5760089	CompoundStatement		36:20:1130:1183	5759893	4					
ANR	5760090	IdentifierDeclStatement	const curve_segment * pc = ( const curve_segment * ) pseg ;	124:20:4144:4197	5759893	0	True				
ANR	5760091	IdentifierDecl	* pc = ( const curve_segment * ) pseg		5759893	0					
ANR	5760092	IdentifierDeclType	const curve_segment *		5759893	0					
ANR	5760093	Identifier	pc		5759893	1					
ANR	5760094	AssignmentExpression	* pc = ( const curve_segment * ) pseg		5759893	2		=			
ANR	5760095	Identifier	pc		5759893	0					
ANR	5760096	CastExpression	( const curve_segment * ) pseg		5759893	1					
ANR	5760097	CastTarget	const curve_segment *		5759893	0					
ANR	5760098	Identifier	pseg		5759893	1					
ANR	5760099	IfStatement	if ( fixed_flatness == max_fixed )		5759893	1					
ANR	5760100	Condition	fixed_flatness == max_fixed	126:24:4224:4250	5759893	0	True				
ANR	5760101	EqualityExpression	fixed_flatness == max_fixed		5759893	0		==			
ANR	5760102	Identifier	fixed_flatness		5759893	0					
ANR	5760103	Identifier	max_fixed		5759893	1					
ANR	5760104	CompoundStatement		38:53:1239:1239	5759893	1					
ANR	5760105	IfStatement	if ( options & pco_monotonize )		5759893	0					
ANR	5760106	Condition	options & pco_monotonize	127:28:4303:4326	5759893	0	True				
ANR	5760107	BitAndExpression	options & pco_monotonize		5759893	0		&			
ANR	5760108	Identifier	options		5759893	0					
ANR	5760109	Identifier	pco_monotonize		5759893	1					
ANR	5760110	ExpressionStatement	"code = gx_curve_monotonize ( ppath , pc )"	128:28:4357:4394	5759893	1	True				
ANR	5760111	AssignmentExpression	"code = gx_curve_monotonize ( ppath , pc )"		5759893	0		=			
ANR	5760112	Identifier	code		5759893	0					
ANR	5760113	CallExpression	"gx_curve_monotonize ( ppath , pc )"		5759893	1					
ANR	5760114	Callee	gx_curve_monotonize		5759893	0					
ANR	5760115	Identifier	gx_curve_monotonize		5759893	0					
ANR	5760116	ArgumentList	ppath		5759893	1					
ANR	5760117	Argument	ppath		5759893	0					
ANR	5760118	Identifier	ppath		5759893	0					
ANR	5760119	Argument	pc		5759893	1					
ANR	5760120	Identifier	pc		5759893	0					
ANR	5760121	ElseStatement	else		5759893	0					
ANR	5760122	ExpressionStatement	"code = gx_path_add_curve_notes ( ppath , pc -> p1 . x , pc -> p1 . y , pc -> p2 . x , pc -> p2 . y , pc -> pt . x , pc -> pt . y , pseg -> notes )"	130:28:4453:4643	5759893	0	True				
ANR	5760123	AssignmentExpression	"code = gx_path_add_curve_notes ( ppath , pc -> p1 . x , pc -> p1 . y , pc -> p2 . x , pc -> p2 . y , pc -> pt . x , pc -> pt . y , pseg -> notes )"		5759893	0		=			
ANR	5760124	Identifier	code		5759893	0					
ANR	5760125	CallExpression	"gx_path_add_curve_notes ( ppath , pc -> p1 . x , pc -> p1 . y , pc -> p2 . x , pc -> p2 . y , pc -> pt . x , pc -> pt . y , pseg -> notes )"		5759893	1					
ANR	5760126	Callee	gx_path_add_curve_notes		5759893	0					
ANR	5760127	Identifier	gx_path_add_curve_notes		5759893	0					
ANR	5760128	ArgumentList	ppath		5759893	1					
ANR	5760129	Argument	ppath		5759893	0					
ANR	5760130	Identifier	ppath		5759893	0					
ANR	5760131	Argument	pc -> p1 . x		5759893	1					
ANR	5760132	MemberAccess	pc -> p1 . x		5759893	0					
ANR	5760133	PtrMemberAccess	pc -> p1		5759893	0					
ANR	5760134	Identifier	pc		5759893	0					
ANR	5760135	Identifier	p1		5759893	1					
ANR	5760136	Identifier	x		5759893	1					
ANR	5760137	Argument	pc -> p1 . y		5759893	2					
ANR	5760138	MemberAccess	pc -> p1 . y		5759893	0					
ANR	5760139	PtrMemberAccess	pc -> p1		5759893	0					
ANR	5760140	Identifier	pc		5759893	0					
ANR	5760141	Identifier	p1		5759893	1					
ANR	5760142	Identifier	y		5759893	1					
ANR	5760143	Argument	pc -> p2 . x		5759893	3					
ANR	5760144	MemberAccess	pc -> p2 . x		5759893	0					
ANR	5760145	PtrMemberAccess	pc -> p2		5759893	0					
ANR	5760146	Identifier	pc		5759893	0					
ANR	5760147	Identifier	p2		5759893	1					
ANR	5760148	Identifier	x		5759893	1					
ANR	5760149	Argument	pc -> p2 . y		5759893	4					
ANR	5760150	MemberAccess	pc -> p2 . y		5759893	0					
ANR	5760151	PtrMemberAccess	pc -> p2		5759893	0					
ANR	5760152	Identifier	pc		5759893	0					
ANR	5760153	Identifier	p2		5759893	1					
ANR	5760154	Identifier	y		5759893	1					
ANR	5760155	Argument	pc -> pt . x		5759893	5					
ANR	5760156	MemberAccess	pc -> pt . x		5759893	0					
ANR	5760157	PtrMemberAccess	pc -> pt		5759893	0					
ANR	5760158	Identifier	pc		5759893	0					
ANR	5760159	Identifier	pt		5759893	1					
ANR	5760160	Identifier	x		5759893	1					
ANR	5760161	Argument	pc -> pt . y		5759893	6					
ANR	5760162	MemberAccess	pc -> pt . y		5759893	0					
ANR	5760163	PtrMemberAccess	pc -> pt		5759893	0					
ANR	5760164	Identifier	pc		5759893	0					
ANR	5760165	Identifier	pt		5759893	1					
ANR	5760166	Identifier	y		5759893	1					
ANR	5760167	Argument	pseg -> notes		5759893	7					
ANR	5760168	PtrMemberAccess	pseg -> notes		5759893	0					
ANR	5760169	Identifier	pseg		5759893	0					
ANR	5760170	Identifier	notes		5759893	1					
ANR	5760171	ElseStatement	else		5759893	0					
ANR	5760172	CompoundStatement		50:24:1895:1900	5759893	0					
ANR	5760173	IdentifierDeclStatement	fixed x0 = ppath -> position . x ;	134:24:4698:4726	5759893	0	True				
ANR	5760174	IdentifierDecl	x0 = ppath -> position . x		5759893	0					
ANR	5760175	IdentifierDeclType	fixed		5759893	0					
ANR	5760176	Identifier	x0		5759893	1					
ANR	5760177	AssignmentExpression	x0 = ppath -> position . x		5759893	2		=			
ANR	5760178	Identifier	x0		5759893	0					
ANR	5760179	MemberAccess	ppath -> position . x		5759893	1					
ANR	5760180	PtrMemberAccess	ppath -> position		5759893	0					
ANR	5760181	Identifier	ppath		5759893	0					
ANR	5760182	Identifier	position		5759893	1					
ANR	5760183	Identifier	x		5759893	1					
ANR	5760184	IdentifierDeclStatement	fixed y0 = ppath -> position . y ;	135:24:4752:4780	5759893	1	True				
ANR	5760185	IdentifierDecl	y0 = ppath -> position . y		5759893	0					
ANR	5760186	IdentifierDeclType	fixed		5759893	0					
ANR	5760187	Identifier	y0		5759893	1					
ANR	5760188	AssignmentExpression	y0 = ppath -> position . y		5759893	2		=			
ANR	5760189	Identifier	y0		5759893	0					
ANR	5760190	MemberAccess	ppath -> position . y		5759893	1					
ANR	5760191	PtrMemberAccess	ppath -> position		5759893	0					
ANR	5760192	Identifier	ppath		5759893	0					
ANR	5760193	Identifier	position		5759893	1					
ANR	5760194	Identifier	y		5759893	1					
ANR	5760195	IdentifierDeclStatement	segment_notes notes = pseg -> notes ;	136:24:4806:4839	5759893	2	True				
ANR	5760196	IdentifierDecl	notes = pseg -> notes		5759893	0					
ANR	5760197	IdentifierDeclType	segment_notes		5759893	0					
ANR	5760198	Identifier	notes		5759893	1					
ANR	5760199	AssignmentExpression	notes = pseg -> notes		5759893	2		=			
ANR	5760200	Identifier	notes		5759893	0					
ANR	5760201	PtrMemberAccess	pseg -> notes		5759893	1					
ANR	5760202	Identifier	pseg		5759893	0					
ANR	5760203	Identifier	notes		5759893	1					
ANR	5760204	IdentifierDeclStatement	curve_segment cseg ;	137:24:4865:4883	5759893	3	True				
ANR	5760205	IdentifierDecl	cseg		5759893	0					
ANR	5760206	IdentifierDeclType	curve_segment		5759893	0					
ANR	5760207	Identifier	cseg		5759893	1					
ANR	5760208	IdentifierDeclStatement	int k ;	138:24:4909:4914	5759893	4	True				
ANR	5760209	IdentifierDecl	k		5759893	0					
ANR	5760210	IdentifierDeclType	int		5759893	0					
ANR	5760211	Identifier	k		5759893	1					
ANR	5760212	IfStatement	if ( options & pco_for_stroke )		5759893	5					
ANR	5760213	Condition	options & pco_for_stroke	140:28:4945:4968	5759893	0	True				
ANR	5760214	BitAndExpression	options & pco_for_stroke		5759893	0		&			
ANR	5760215	Identifier	options		5759893	0					
ANR	5760216	Identifier	pco_for_stroke		5759893	1					
ANR	5760217	CompoundStatement		73:4:2987:3067	5759893	1					
ANR	5760218	IdentifierDeclStatement	"fixed min01 , max01 , min23 , max23 ;"	151:28:5618:5650	5759893	0	True				
ANR	5760219	IdentifierDecl	min01		5759893	0					
ANR	5760220	IdentifierDeclType	fixed		5759893	0					
ANR	5760221	Identifier	min01		5759893	1					
ANR	5760222	IdentifierDecl	max01		5759893	1					
ANR	5760223	IdentifierDeclType	fixed		5759893	0					
ANR	5760224	Identifier	max01		5759893	1					
ANR	5760225	IdentifierDecl	min23		5759893	2					
ANR	5760226	IdentifierDeclType	fixed		5759893	0					
ANR	5760227	Identifier	min23		5759893	1					
ANR	5760228	IdentifierDecl	max23		5759893	3					
ANR	5760229	IdentifierDeclType	fixed		5759893	0					
ANR	5760230	Identifier	max23		5759893	1					
ANR	5760231	IdentifierDeclStatement	"fixed ex , ey , flat_x , flat_y ;"	152:28:5680:5708	5759893	1	True				
ANR	5760232	IdentifierDecl	ex		5759893	0					
ANR	5760233	IdentifierDeclType	fixed		5759893	0					
ANR	5760234	Identifier	ex		5759893	1					
ANR	5760235	IdentifierDecl	ey		5759893	1					
ANR	5760236	IdentifierDeclType	fixed		5759893	0					
ANR	5760237	Identifier	ey		5759893	1					
ANR	5760238	IdentifierDecl	flat_x		5759893	2					
ANR	5760239	IdentifierDeclType	fixed		5759893	0					
ANR	5760240	Identifier	flat_x		5759893	1					
ANR	5760241	IdentifierDecl	flat_y		5759893	3					
ANR	5760242	IdentifierDeclType	fixed		5759893	0					
ANR	5760243	Identifier	flat_y		5759893	1					
ANR	5760244	Statement	define	154:1:5712:5717	5759893	2	True				
ANR	5760245	Statement	SET_EXTENT	154:8:5719:5728	5759893	3	True				
ANR	5760246	Statement	(	154:18:5729:5729	5759893	4	True				
ANR	5760247	Statement	r	154:19:5730:5730	5759893	5	True				
ANR	5760248	Statement	","	154:20:5731:5731	5759893	6	True				
ANR	5760249	Statement	c0	154:22:5733:5734	5759893	7	True				
ANR	5760250	Statement	","	154:24:5735:5735	5759893	8	True				
ANR	5760251	Statement	c1	154:26:5737:5738	5759893	9	True				
ANR	5760252	Statement	","	154:28:5739:5739	5759893	10	True				
ANR	5760253	Statement	c2	154:30:5741:5742	5759893	11	True				
ANR	5760254	Statement	","	154:32:5743:5743	5759893	12	True				
ANR	5760255	Statement	c3	154:34:5745:5746	5759893	13	True				
ANR	5760256	Statement	)	154:36:5747:5747	5759893	14	True				
ANR	5760257	Statement	BEGIN	155:4:5754:5758	5759893	15	True				
ANR	5760258	IfStatement	if ( c0 < c1 )		5759893	16					
ANR	5760259	Condition	c0 < c1	156:12:5773:5779	5759893	0	True				
ANR	5760260	RelationalExpression	c0 < c1		5759893	0		<			
ANR	5760261	Identifier	c0		5759893	0					
ANR	5760262	Identifier	c1		5759893	1					
ANR	5760263	ExpressionStatement	"min01 = c0 , max01 = c1"	156:21:5782:5804	5759893	1	True				
ANR	5760264	Expression	"min01 = c0 , max01 = c1"		5759893	0					
ANR	5760265	AssignmentExpression	min01 = c0		5759893	0		=			
ANR	5760266	Identifier	min01		5759893	0					
ANR	5760267	Identifier	c0		5759893	1					
ANR	5760268	AssignmentExpression	max01 = c1		5759893	1		=			
ANR	5760269	Identifier	max01		5759893	0					
ANR	5760270	Identifier	c1		5759893	1					
ANR	5760271	ElseStatement	else		5759893	0					
ANR	5760272	ExpressionStatement	"min01 = c1 , max01 = c0"	157:21:5828:5850	5759893	0	True				
ANR	5760273	Expression	"min01 = c1 , max01 = c0"		5759893	0					
ANR	5760274	AssignmentExpression	min01 = c1		5759893	0		=			
ANR	5760275	Identifier	min01		5759893	0					
ANR	5760276	Identifier	c1		5759893	1					
ANR	5760277	AssignmentExpression	max01 = c0		5759893	1		=			
ANR	5760278	Identifier	max01		5759893	0					
ANR	5760279	Identifier	c0		5759893	1					
ANR	5760280	IfStatement	if ( c2 < c3 )		5759893	17					
ANR	5760281	Condition	c2 < c3	158:12:5865:5871	5759893	0	True				
ANR	5760282	RelationalExpression	c2 < c3		5759893	0		<			
ANR	5760283	Identifier	c2		5759893	0					
ANR	5760284	Identifier	c3		5759893	1					
ANR	5760285	ExpressionStatement	"min23 = c2 , max23 = c3"	158:21:5874:5896	5759893	1	True				
ANR	5760286	Expression	"min23 = c2 , max23 = c3"		5759893	0					
ANR	5760287	AssignmentExpression	min23 = c2		5759893	0		=			
ANR	5760288	Identifier	min23		5759893	0					
ANR	5760289	Identifier	c2		5759893	1					
ANR	5760290	AssignmentExpression	max23 = c3		5759893	1		=			
ANR	5760291	Identifier	max23		5759893	0					
ANR	5760292	Identifier	c3		5759893	1					
ANR	5760293	ElseStatement	else		5759893	0					
ANR	5760294	ExpressionStatement	"min23 = c3 , max23 = c2"	159:21:5920:5942	5759893	0	True				
ANR	5760295	Expression	"min23 = c3 , max23 = c2"		5759893	0					
ANR	5760296	AssignmentExpression	min23 = c3		5759893	0		=			
ANR	5760297	Identifier	min23		5759893	0					
ANR	5760298	Identifier	c3		5759893	1					
ANR	5760299	AssignmentExpression	max23 = c2		5759893	1		=			
ANR	5760300	Identifier	max23		5759893	0					
ANR	5760301	Identifier	c2		5759893	1					
ANR	5760302	ExpressionStatement	"r = max ( max01 , max23 ) - min ( min01 , min23 )"	160:8:5953:5994	5759893	18	True				
ANR	5760303	AssignmentExpression	"r = max ( max01 , max23 ) - min ( min01 , min23 )"		5759893	0		=			
ANR	5760304	Identifier	r		5759893	0					
ANR	5760305	AdditiveExpression	"max ( max01 , max23 ) - min ( min01 , min23 )"		5759893	1		-			
ANR	5760306	CallExpression	"max ( max01 , max23 )"		5759893	0					
ANR	5760307	Callee	max		5759893	0					
ANR	5760308	Identifier	max		5759893	0					
ANR	5760309	ArgumentList	max01		5759893	1					
ANR	5760310	Argument	max01		5759893	0					
ANR	5760311	Identifier	max01		5759893	0					
ANR	5760312	Argument	max23		5759893	1					
ANR	5760313	Identifier	max23		5759893	0					
ANR	5760314	CallExpression	"min ( min01 , min23 )"		5759893	1					
ANR	5760315	Callee	min		5759893	0					
ANR	5760316	Identifier	min		5759893	0					
ANR	5760317	ArgumentList	min01		5759893	1					
ANR	5760318	Argument	min01		5759893	0					
ANR	5760319	Identifier	min01		5759893	0					
ANR	5760320	Argument	min23		5759893	1					
ANR	5760321	Identifier	min23		5759893	0					
ANR	5760322	IdentifierDeclStatement	"END SET_EXTENT ( ex , x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x ) ;"	161:4:6001:6081	5759893	19	True				
ANR	5760323	IdentifierDecl	"SET_EXTENT ( ex , x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x )"		5759893	0					
ANR	5760324	IdentifierDeclType	END		5759893	0					
ANR	5760325	Identifier	SET_EXTENT		5759893	1					
ANR	5760326	Expression	"ex , x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x"		5759893	2					
ANR	5760327	Identifier	ex		5759893	0					
ANR	5760328	Expression	"x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x"		5759893	1					
ANR	5760329	Identifier	x0		5759893	0					
ANR	5760330	Expression	"pc -> p1 . x , pc -> p2 . x , pc -> pt . x"		5759893	1					
ANR	5760331	MemberAccess	pc -> p1 . x		5759893	0					
ANR	5760332	PtrMemberAccess	pc -> p1		5759893	0					
ANR	5760333	Identifier	pc		5759893	0					
ANR	5760334	Identifier	p1		5759893	1					
ANR	5760335	Identifier	x		5759893	1					
ANR	5760336	Expression	"pc -> p2 . x , pc -> pt . x"		5759893	1					
ANR	5760337	MemberAccess	pc -> p2 . x		5759893	0					
ANR	5760338	PtrMemberAccess	pc -> p2		5759893	0					
ANR	5760339	Identifier	pc		5759893	0					
ANR	5760340	Identifier	p2		5759893	1					
ANR	5760341	Identifier	x		5759893	1					
ANR	5760342	MemberAccess	pc -> pt . x		5759893	1					
ANR	5760343	PtrMemberAccess	pc -> pt		5759893	0					
ANR	5760344	Identifier	pc		5759893	0					
ANR	5760345	Identifier	pt		5759893	1					
ANR	5760346	Identifier	x		5759893	1					
ANR	5760347	ExpressionStatement	"SET_EXTENT ( ey , y0 , pc -> p1 . y , pc -> p2 . y , pc -> pt . y )"	163:28:6111:6159	5759893	20	True				
ANR	5760348	CallExpression	"SET_EXTENT ( ey , y0 , pc -> p1 . y , pc -> p2 . y , pc -> pt . y )"		5759893	0					
ANR	5760349	Callee	SET_EXTENT		5759893	0					
ANR	5760350	Identifier	SET_EXTENT		5759893	0					
ANR	5760351	ArgumentList	ey		5759893	1					
ANR	5760352	Argument	ey		5759893	0					
ANR	5760353	Identifier	ey		5759893	0					
ANR	5760354	Argument	y0		5759893	1					
ANR	5760355	Identifier	y0		5759893	0					
ANR	5760356	Argument	pc -> p1 . y		5759893	2					
ANR	5760357	MemberAccess	pc -> p1 . y		5759893	0					
ANR	5760358	PtrMemberAccess	pc -> p1		5759893	0					
ANR	5760359	Identifier	pc		5759893	0					
ANR	5760360	Identifier	p1		5759893	1					
ANR	5760361	Identifier	y		5759893	1					
ANR	5760362	Argument	pc -> p2 . y		5759893	3					
ANR	5760363	MemberAccess	pc -> p2 . y		5759893	0					
ANR	5760364	PtrMemberAccess	pc -> p2		5759893	0					
ANR	5760365	Identifier	pc		5759893	0					
ANR	5760366	Identifier	p2		5759893	1					
ANR	5760367	Identifier	y		5759893	1					
ANR	5760368	Argument	pc -> pt . y		5759893	4					
ANR	5760369	MemberAccess	pc -> pt . y		5759893	0					
ANR	5760370	PtrMemberAccess	pc -> pt		5759893	0					
ANR	5760371	Identifier	pc		5759893	0					
ANR	5760372	Identifier	pt		5759893	1					
ANR	5760373	Identifier	y		5759893	1					
ANR	5760374	Statement	undef	164:1:6162:6166	5759893	21	True				
ANR	5760375	Statement	SET_EXTENT	164:7:6168:6177	5759893	22	True				
ANR	5760376	IfStatement	if ( ex == 0 || ey == 0 )		5759893	23					
ANR	5760377	Condition	ex == 0 || ey == 0	169:32:6408:6425	5759893	0	True				
ANR	5760378	OrExpression	ex == 0 || ey == 0		5759893	0		||			
ANR	5760379	EqualityExpression	ex == 0		5759893	0		==			
ANR	5760380	Identifier	ex		5759893	0					
ANR	5760381	PrimaryExpression	0		5759893	1					
ANR	5760382	EqualityExpression	ey == 0		5759893	1		==			
ANR	5760383	Identifier	ey		5759893	0					
ANR	5760384	PrimaryExpression	0		5759893	1					
ANR	5760385	IfStatement	if ( ex != 0 )		5759893	1					
ANR	5760386	Condition	ex != 0	170:36:6464:6470	5759893	0	True				
ANR	5760387	EqualityExpression	ex != 0		5759893	0		!=			
ANR	5760388	Identifier	ex		5759893	0					
ANR	5760389	PrimaryExpression	0		5759893	1					
ANR	5760390	CompoundStatement		82:45:3459:3459	5759893	1					
ANR	5760391	ExpressionStatement	"flat = fixed_mult_quo ( fixed_flatness , ex , ex + expansion . x )"	171:36:6511:6628	5759893	0	True				
ANR	5760392	AssignmentExpression	"flat = fixed_mult_quo ( fixed_flatness , ex , ex + expansion . x )"		5759893	0		=			
ANR	5760393	Identifier	flat		5759893	0					
ANR	5760394	CallExpression	"fixed_mult_quo ( fixed_flatness , ex , ex + expansion . x )"		5759893	1					
ANR	5760395	Callee	fixed_mult_quo		5759893	0					
ANR	5760396	Identifier	fixed_mult_quo		5759893	0					
ANR	5760397	ArgumentList	fixed_flatness		5759893	1					
ANR	5760398	Argument	fixed_flatness		5759893	0					
ANR	5760399	Identifier	fixed_flatness		5759893	0					
ANR	5760400	Argument	ex		5759893	1					
ANR	5760401	Identifier	ex		5759893	0					
ANR	5760402	Argument	ex + expansion . x		5759893	2					
ANR	5760403	AdditiveExpression	ex + expansion . x		5759893	0		+			
ANR	5760404	Identifier	ex		5759893	0					
ANR	5760405	MemberAccess	expansion . x		5759893	1					
ANR	5760406	Identifier	expansion		5759893	0					
ANR	5760407	Identifier	x		5759893	1					
ANR	5760408	ExpressionStatement	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"	173:36:6666:6706	5759893	1	True				
ANR	5760409	AssignmentExpression	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"		5759893	0		=			
ANR	5760410	Identifier	k		5759893	0					
ANR	5760411	CallExpression	"gx_curve_log2_samples ( x0 , y0 , pc , flat )"		5759893	1					
ANR	5760412	Callee	gx_curve_log2_samples		5759893	0					
ANR	5760413	Identifier	gx_curve_log2_samples		5759893	0					
ANR	5760414	ArgumentList	x0		5759893	1					
ANR	5760415	Argument	x0		5759893	0					
ANR	5760416	Identifier	x0		5759893	0					
ANR	5760417	Argument	y0		5759893	1					
ANR	5760418	Identifier	y0		5759893	0					
ANR	5760419	Argument	pc		5759893	2					
ANR	5760420	Identifier	pc		5759893	0					
ANR	5760421	Argument	flat		5759893	3					
ANR	5760422	Identifier	flat		5759893	0					
ANR	5760423	ElseStatement	else		5759893	0					
ANR	5760424	IfStatement	if ( ey != 0 )		5759893	0					
ANR	5760425	Condition	ey != 0	174:43:6751:6757	5759893	0	True				
ANR	5760426	EqualityExpression	ey != 0		5759893	0		!=			
ANR	5760427	Identifier	ey		5759893	0					
ANR	5760428	PrimaryExpression	0		5759893	1					
ANR	5760429	CompoundStatement		86:52:3746:3746	5759893	1					
ANR	5760430	ExpressionStatement	"flat = fixed_mult_quo ( fixed_flatness , ey , ey + expansion . y )"	175:36:6798:6915	5759893	0	True				
ANR	5760431	AssignmentExpression	"flat = fixed_mult_quo ( fixed_flatness , ey , ey + expansion . y )"		5759893	0		=			
ANR	5760432	Identifier	flat		5759893	0					
ANR	5760433	CallExpression	"fixed_mult_quo ( fixed_flatness , ey , ey + expansion . y )"		5759893	1					
ANR	5760434	Callee	fixed_mult_quo		5759893	0					
ANR	5760435	Identifier	fixed_mult_quo		5759893	0					
ANR	5760436	ArgumentList	fixed_flatness		5759893	1					
ANR	5760437	Argument	fixed_flatness		5759893	0					
ANR	5760438	Identifier	fixed_flatness		5759893	0					
ANR	5760439	Argument	ey		5759893	1					
ANR	5760440	Identifier	ey		5759893	0					
ANR	5760441	Argument	ey + expansion . y		5759893	2					
ANR	5760442	AdditiveExpression	ey + expansion . y		5759893	0		+			
ANR	5760443	Identifier	ey		5759893	0					
ANR	5760444	MemberAccess	expansion . y		5759893	1					
ANR	5760445	Identifier	expansion		5759893	0					
ANR	5760446	Identifier	y		5759893	1					
ANR	5760447	ExpressionStatement	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"	177:36:6953:6993	5759893	1	True				
ANR	5760448	AssignmentExpression	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"		5759893	0		=			
ANR	5760449	Identifier	k		5759893	0					
ANR	5760450	CallExpression	"gx_curve_log2_samples ( x0 , y0 , pc , flat )"		5759893	1					
ANR	5760451	Callee	gx_curve_log2_samples		5759893	0					
ANR	5760452	Identifier	gx_curve_log2_samples		5759893	0					
ANR	5760453	ArgumentList	x0		5759893	1					
ANR	5760454	Argument	x0		5759893	0					
ANR	5760455	Identifier	x0		5759893	0					
ANR	5760456	Argument	y0		5759893	1					
ANR	5760457	Identifier	y0		5759893	0					
ANR	5760458	Argument	pc		5759893	2					
ANR	5760459	Identifier	pc		5759893	0					
ANR	5760460	Argument	flat		5759893	3					
ANR	5760461	Identifier	flat		5759893	0					
ANR	5760462	ElseStatement	else		5759893	0					
ANR	5760463	ExpressionStatement	k = 0	179:36:7070:7075	5759893	0	True				
ANR	5760464	AssignmentExpression	k = 0		5759893	0		=			
ANR	5760465	Identifier	k		5759893	0					
ANR	5760466	PrimaryExpression	0		5759893	1					
ANR	5760467	ElseStatement	else		5759893	0					
ANR	5760468	CompoundStatement		92:33:4096:4096	5759893	0					
ANR	5760469	ExpressionStatement	"flat_x = fixed_mult_quo ( fixed_flatness , ex , ex + expansion . x )"	181:32:7144:7292	5759893	0	True				
ANR	5760470	AssignmentExpression	"flat_x = fixed_mult_quo ( fixed_flatness , ex , ex + expansion . x )"		5759893	0		=			
ANR	5760471	Identifier	flat_x		5759893	0					
ANR	5760472	CallExpression	"fixed_mult_quo ( fixed_flatness , ex , ex + expansion . x )"		5759893	1					
ANR	5760473	Callee	fixed_mult_quo		5759893	0					
ANR	5760474	Identifier	fixed_mult_quo		5759893	0					
ANR	5760475	ArgumentList	fixed_flatness		5759893	1					
ANR	5760476	Argument	fixed_flatness		5759893	0					
ANR	5760477	Identifier	fixed_flatness		5759893	0					
ANR	5760478	Argument	ex		5759893	1					
ANR	5760479	Identifier	ex		5759893	0					
ANR	5760480	Argument	ex + expansion . x		5759893	2					
ANR	5760481	AdditiveExpression	ex + expansion . x		5759893	0		+			
ANR	5760482	Identifier	ex		5759893	0					
ANR	5760483	MemberAccess	expansion . x		5759893	1					
ANR	5760484	Identifier	expansion		5759893	0					
ANR	5760485	Identifier	x		5759893	1					
ANR	5760486	ExpressionStatement	"flat_y = fixed_mult_quo ( fixed_flatness , ey , ey + expansion . y )"	184:32:7326:7474	5759893	1	True				
ANR	5760487	AssignmentExpression	"flat_y = fixed_mult_quo ( fixed_flatness , ey , ey + expansion . y )"		5759893	0		=			
ANR	5760488	Identifier	flat_y		5759893	0					
ANR	5760489	CallExpression	"fixed_mult_quo ( fixed_flatness , ey , ey + expansion . y )"		5759893	1					
ANR	5760490	Callee	fixed_mult_quo		5759893	0					
ANR	5760491	Identifier	fixed_mult_quo		5759893	0					
ANR	5760492	ArgumentList	fixed_flatness		5759893	1					
ANR	5760493	Argument	fixed_flatness		5759893	0					
ANR	5760494	Identifier	fixed_flatness		5759893	0					
ANR	5760495	Argument	ey		5759893	1					
ANR	5760496	Identifier	ey		5759893	0					
ANR	5760497	Argument	ey + expansion . y		5759893	2					
ANR	5760498	AdditiveExpression	ey + expansion . y		5759893	0		+			
ANR	5760499	Identifier	ey		5759893	0					
ANR	5760500	MemberAccess	expansion . y		5759893	1					
ANR	5760501	Identifier	expansion		5759893	0					
ANR	5760502	Identifier	y		5759893	1					
ANR	5760503	ExpressionStatement	"flat = min ( flat_x , flat_y )"	187:32:7508:7534	5759893	2	True				
ANR	5760504	AssignmentExpression	"flat = min ( flat_x , flat_y )"		5759893	0		=			
ANR	5760505	Identifier	flat		5759893	0					
ANR	5760506	CallExpression	"min ( flat_x , flat_y )"		5759893	1					
ANR	5760507	Callee	min		5759893	0					
ANR	5760508	Identifier	min		5759893	0					
ANR	5760509	ArgumentList	flat_x		5759893	1					
ANR	5760510	Argument	flat_x		5759893	0					
ANR	5760511	Identifier	flat_x		5759893	0					
ANR	5760512	Argument	flat_y		5759893	1					
ANR	5760513	Identifier	flat_y		5759893	0					
ANR	5760514	ExpressionStatement	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"	188:32:7568:7611	5759893	3	True				
ANR	5760515	AssignmentExpression	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"		5759893	0		=			
ANR	5760516	Identifier	k		5759893	0					
ANR	5760517	CallExpression	"gx_curve_log2_samples ( x0 , y0 , pc , flat )"		5759893	1					
ANR	5760518	Callee	gx_curve_log2_samples		5759893	0					
ANR	5760519	Identifier	gx_curve_log2_samples		5759893	0					
ANR	5760520	ArgumentList	x0		5759893	1					
ANR	5760521	Argument	x0		5759893	0					
ANR	5760522	Identifier	x0		5759893	0					
ANR	5760523	Argument	y0		5759893	1					
ANR	5760524	Identifier	y0		5759893	0					
ANR	5760525	Argument	pc		5759893	2					
ANR	5760526	Identifier	pc		5759893	0					
ANR	5760527	Argument	flat		5759893	3					
ANR	5760528	Identifier	flat		5759893	0					
ANR	5760529	ElseStatement	else		5759893	0					
ANR	5760530	ExpressionStatement	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"	191:28:7702:7745	5759893	0	True				
ANR	5760531	AssignmentExpression	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"		5759893	0		=			
ANR	5760532	Identifier	k		5759893	0					
ANR	5760533	CallExpression	"gx_curve_log2_samples ( x0 , y0 , pc , flat )"		5759893	1					
ANR	5760534	Callee	gx_curve_log2_samples		5759893	0					
ANR	5760535	Identifier	gx_curve_log2_samples		5759893	0					
ANR	5760536	ArgumentList	x0		5759893	1					
ANR	5760537	Argument	x0		5759893	0					
ANR	5760538	Identifier	x0		5759893	0					
ANR	5760539	Argument	y0		5759893	1					
ANR	5760540	Identifier	y0		5759893	0					
ANR	5760541	Argument	pc		5759893	2					
ANR	5760542	Identifier	pc		5759893	0					
ANR	5760543	Argument	flat		5759893	3					
ANR	5760544	Identifier	flat		5759893	0					
ANR	5760545	IfStatement	if ( options & pco_accurate )		5759893	6					
ANR	5760546	Condition	options & pco_accurate	192:28:7775:7796	5759893	0	True				
ANR	5760547	BitAndExpression	options & pco_accurate		5759893	0		&			
ANR	5760548	Identifier	options		5759893	0					
ANR	5760549	Identifier	pco_accurate		5759893	1					
ANR	5760550	CompoundStatement		106:28:4859:4871	5759893	1					
ANR	5760551	IdentifierDeclStatement	segment * start ;	193:28:7829:7843	5759893	0	True				
ANR	5760552	IdentifierDecl	* start		5759893	0					
ANR	5760553	IdentifierDeclType	segment *		5759893	0					
ANR	5760554	Identifier	start		5759893	1					
ANR	5760555	IdentifierDeclStatement	segment * end ;	194:28:7873:7885	5759893	1	True				
ANR	5760556	IdentifierDecl	* end		5759893	0					
ANR	5760557	IdentifierDeclType	segment *		5759893	0					
ANR	5760558	Identifier	end		5759893	1					
ANR	5760559	ExpressionStatement	"code = gx_path_add_line_notes ( ppath , x0 , y0 , notes )"	200:28:8099:8208	5759893	2	True				
ANR	5760560	AssignmentExpression	"code = gx_path_add_line_notes ( ppath , x0 , y0 , notes )"		5759893	0		=			
ANR	5760561	Identifier	code		5759893	0					
ANR	5760562	CallExpression	"gx_path_add_line_notes ( ppath , x0 , y0 , notes )"		5759893	1					
ANR	5760563	Callee	gx_path_add_line_notes		5759893	0					
ANR	5760564	Identifier	gx_path_add_line_notes		5759893	0					
ANR	5760565	ArgumentList	ppath		5759893	1					
ANR	5760566	Argument	ppath		5759893	0					
ANR	5760567	Identifier	ppath		5759893	0					
ANR	5760568	Argument	x0		5759893	1					
ANR	5760569	Identifier	x0		5759893	0					
ANR	5760570	Argument	y0		5759893	2					
ANR	5760571	Identifier	y0		5759893	0					
ANR	5760572	Argument	notes		5759893	3					
ANR	5760573	Identifier	notes		5759893	0					
ANR	5760574	IfStatement	if ( code < 0 )		5759893	3					
ANR	5760575	Condition	code < 0	202:32:8242:8249	5759893	0	True				
ANR	5760576	RelationalExpression	code < 0		5759893	0		<			
ANR	5760577	Identifier	code		5759893	0					
ANR	5760578	PrimaryExpression	0		5759893	1					
ANR	5760579	BreakStatement	break ;	203:32:8284:8289	5759893	1	True				
ANR	5760580	ExpressionStatement	start = ppath -> current_subpath -> last	204:28:8319:8355	5759893	4	True				
ANR	5760581	AssignmentExpression	start = ppath -> current_subpath -> last		5759893	0		=			
ANR	5760582	Identifier	start		5759893	0					
ANR	5760583	PtrMemberAccess	ppath -> current_subpath -> last		5759893	1					
ANR	5760584	PtrMemberAccess	ppath -> current_subpath		5759893	0					
ANR	5760585	Identifier	ppath		5759893	0					
ANR	5760586	Identifier	current_subpath		5759893	1					
ANR	5760587	Identifier	last		5759893	1					
ANR	5760588	ExpressionStatement	notes |= sn_not_first	205:28:8385:8406	5759893	5	True				
ANR	5760589	AssignmentExpression	notes |= sn_not_first		5759893	0		|=			
ANR	5760590	Identifier	notes		5759893	0					
ANR	5760591	Identifier	sn_not_first		5759893	1					
ANR	5760592	ExpressionStatement	cseg = * pc	206:28:8436:8446	5759893	6	True				
ANR	5760593	AssignmentExpression	cseg = * pc		5759893	0		=			
ANR	5760594	Identifier	cseg		5759893	0					
ANR	5760595	UnaryOperationExpression	* pc		5759893	1					
ANR	5760596	UnaryOperator	*		5759893	0					
ANR	5760597	Identifier	pc		5759893	1					
ANR	5760598	ExpressionStatement	"code = gx_subdivide_curve ( ppath , k , & cseg , notes )"	207:28:8476:8525	5759893	7	True				
ANR	5760599	AssignmentExpression	"code = gx_subdivide_curve ( ppath , k , & cseg , notes )"		5759893	0		=			
ANR	5760600	Identifier	code		5759893	0					
ANR	5760601	CallExpression	"gx_subdivide_curve ( ppath , k , & cseg , notes )"		5759893	1					
ANR	5760602	Callee	gx_subdivide_curve		5759893	0					
ANR	5760603	Identifier	gx_subdivide_curve		5759893	0					
ANR	5760604	ArgumentList	ppath		5759893	1					
ANR	5760605	Argument	ppath		5759893	0					
ANR	5760606	Identifier	ppath		5759893	0					
ANR	5760607	Argument	k		5759893	1					
ANR	5760608	Identifier	k		5759893	0					
ANR	5760609	Argument	& cseg		5759893	2					
ANR	5760610	UnaryOperationExpression	& cseg		5759893	0					
ANR	5760611	UnaryOperator	&		5759893	0					
ANR	5760612	Identifier	cseg		5759893	1					
ANR	5760613	Argument	notes		5759893	3					
ANR	5760614	Identifier	notes		5759893	0					
ANR	5760615	IfStatement	if ( code < 0 )		5759893	8					
ANR	5760616	Condition	code < 0	208:32:8559:8566	5759893	0	True				
ANR	5760617	RelationalExpression	code < 0		5759893	0		<			
ANR	5760618	Identifier	code		5759893	0					
ANR	5760619	PrimaryExpression	0		5759893	1					
ANR	5760620	BreakStatement	break ;	209:32:8601:8606	5759893	1	True				
ANR	5760621	ExpressionStatement	end = ppath -> current_subpath -> last	214:28:8836:8870	5759893	9	True				
ANR	5760622	AssignmentExpression	end = ppath -> current_subpath -> last		5759893	0		=			
ANR	5760623	Identifier	end		5759893	0					
ANR	5760624	PtrMemberAccess	ppath -> current_subpath -> last		5759893	1					
ANR	5760625	PtrMemberAccess	ppath -> current_subpath		5759893	0					
ANR	5760626	Identifier	ppath		5759893	0					
ANR	5760627	Identifier	current_subpath		5759893	1					
ANR	5760628	Identifier	last		5759893	1					
ANR	5760629	IfStatement	"if ( ( code = gx_path_add_line_notes ( ppath , ppath -> position . x , ppath -> position . y , pseg -> notes | sn_not_first ) ) < 0 )"		5759893	10					
ANR	5760630	Condition	"( code = gx_path_add_line_notes ( ppath , ppath -> position . x , ppath -> position . y , pseg -> notes | sn_not_first ) ) < 0"	215:32:8904:9171	5759893	0	True				
ANR	5760631	RelationalExpression	"( code = gx_path_add_line_notes ( ppath , ppath -> position . x , ppath -> position . y , pseg -> notes | sn_not_first ) ) < 0"		5759893	0		<			
ANR	5760632	AssignmentExpression	"code = gx_path_add_line_notes ( ppath , ppath -> position . x , ppath -> position . y , pseg -> notes | sn_not_first )"		5759893	0		=			
ANR	5760633	Identifier	code		5759893	0					
ANR	5760634	CallExpression	"gx_path_add_line_notes ( ppath , ppath -> position . x , ppath -> position . y , pseg -> notes | sn_not_first )"		5759893	1					
ANR	5760635	Callee	gx_path_add_line_notes		5759893	0					
ANR	5760636	Identifier	gx_path_add_line_notes		5759893	0					
ANR	5760637	ArgumentList	ppath		5759893	1					
ANR	5760638	Argument	ppath		5759893	0					
ANR	5760639	Identifier	ppath		5759893	0					
ANR	5760640	Argument	ppath -> position . x		5759893	1					
ANR	5760641	MemberAccess	ppath -> position . x		5759893	0					
ANR	5760642	PtrMemberAccess	ppath -> position		5759893	0					
ANR	5760643	Identifier	ppath		5759893	0					
ANR	5760644	Identifier	position		5759893	1					
ANR	5760645	Identifier	x		5759893	1					
ANR	5760646	Argument	ppath -> position . y		5759893	2					
ANR	5760647	MemberAccess	ppath -> position . y		5759893	0					
ANR	5760648	PtrMemberAccess	ppath -> position		5759893	0					
ANR	5760649	Identifier	ppath		5759893	0					
ANR	5760650	Identifier	position		5759893	1					
ANR	5760651	Identifier	y		5759893	1					
ANR	5760652	Argument	pseg -> notes | sn_not_first		5759893	3					
ANR	5760653	InclusiveOrExpression	pseg -> notes | sn_not_first		5759893	0		|			
ANR	5760654	PtrMemberAccess	pseg -> notes		5759893	0					
ANR	5760655	Identifier	pseg		5759893	0					
ANR	5760656	Identifier	notes		5759893	1					
ANR	5760657	Identifier	sn_not_first		5759893	1					
ANR	5760658	PrimaryExpression	0		5759893	1					
ANR	5760659	BreakStatement	break ;	219:32:9206:9211	5759893	1	True				
ANR	5760660	IfStatement	if ( start -> next -> pt . x != pc -> p1 . x || start -> next -> pt . y != pc -> p1 . y )		5759893	11					
ANR	5760661	Condition	start -> next -> pt . x != pc -> p1 . x || start -> next -> pt . y != pc -> p1 . y	220:32:9245:9306	5759893	0	True				
ANR	5760662	OrExpression	start -> next -> pt . x != pc -> p1 . x || start -> next -> pt . y != pc -> p1 . y		5759893	0		||			
ANR	5760663	EqualityExpression	start -> next -> pt . x != pc -> p1 . x		5759893	0		!=			
ANR	5760664	MemberAccess	start -> next -> pt . x		5759893	0					
ANR	5760665	PtrMemberAccess	start -> next -> pt		5759893	0					
ANR	5760666	PtrMemberAccess	start -> next		5759893	0					
ANR	5760667	Identifier	start		5759893	0					
ANR	5760668	Identifier	next		5759893	1					
ANR	5760669	Identifier	pt		5759893	1					
ANR	5760670	Identifier	x		5759893	1					
ANR	5760671	MemberAccess	pc -> p1 . x		5759893	1					
ANR	5760672	PtrMemberAccess	pc -> p1		5759893	0					
ANR	5760673	Identifier	pc		5759893	0					
ANR	5760674	Identifier	p1		5759893	1					
ANR	5760675	Identifier	x		5759893	1					
ANR	5760676	EqualityExpression	start -> next -> pt . y != pc -> p1 . y		5759893	1		!=			
ANR	5760677	MemberAccess	start -> next -> pt . y		5759893	0					
ANR	5760678	PtrMemberAccess	start -> next -> pt		5759893	0					
ANR	5760679	PtrMemberAccess	start -> next		5759893	0					
ANR	5760680	Identifier	start		5759893	0					
ANR	5760681	Identifier	next		5759893	1					
ANR	5760682	Identifier	pt		5759893	1					
ANR	5760683	Identifier	y		5759893	1					
ANR	5760684	MemberAccess	pc -> p1 . y		5759893	1					
ANR	5760685	PtrMemberAccess	pc -> p1		5759893	0					
ANR	5760686	Identifier	pc		5759893	0					
ANR	5760687	Identifier	p1		5759893	1					
ANR	5760688	Identifier	y		5759893	1					
ANR	5760689	ExpressionStatement	"adjust_point_to_tangent ( start , start -> next , & pc -> p1 )"	221:32:9341:9393	5759893	1	True				
ANR	5760690	CallExpression	"adjust_point_to_tangent ( start , start -> next , & pc -> p1 )"		5759893	0					
ANR	5760691	Callee	adjust_point_to_tangent		5759893	0					
ANR	5760692	Identifier	adjust_point_to_tangent		5759893	0					
ANR	5760693	ArgumentList	start		5759893	1					
ANR	5760694	Argument	start		5759893	0					
ANR	5760695	Identifier	start		5759893	0					
ANR	5760696	Argument	start -> next		5759893	1					
ANR	5760697	PtrMemberAccess	start -> next		5759893	0					
ANR	5760698	Identifier	start		5759893	0					
ANR	5760699	Identifier	next		5759893	1					
ANR	5760700	Argument	& pc -> p1		5759893	2					
ANR	5760701	UnaryOperationExpression	& pc -> p1		5759893	0					
ANR	5760702	UnaryOperator	&		5759893	0					
ANR	5760703	PtrMemberAccess	pc -> p1		5759893	1					
ANR	5760704	Identifier	pc		5759893	0					
ANR	5760705	Identifier	p1		5759893	1					
ANR	5760706	ElseStatement	else		5759893	0					
ANR	5760707	IfStatement	if ( start -> next -> pt . x != pc -> p2 . x || start -> next -> pt . y != pc -> p2 . y )		5759893	0					
ANR	5760708	Condition	start -> next -> pt . x != pc -> p2 . x || start -> next -> pt . y != pc -> p2 . y	222:37:9432:9493	5759893	0	True				
ANR	5760709	OrExpression	start -> next -> pt . x != pc -> p2 . x || start -> next -> pt . y != pc -> p2 . y		5759893	0		||			
ANR	5760710	EqualityExpression	start -> next -> pt . x != pc -> p2 . x		5759893	0		!=			
ANR	5760711	MemberAccess	start -> next -> pt . x		5759893	0					
ANR	5760712	PtrMemberAccess	start -> next -> pt		5759893	0					
ANR	5760713	PtrMemberAccess	start -> next		5759893	0					
ANR	5760714	Identifier	start		5759893	0					
ANR	5760715	Identifier	next		5759893	1					
ANR	5760716	Identifier	pt		5759893	1					
ANR	5760717	Identifier	x		5759893	1					
ANR	5760718	MemberAccess	pc -> p2 . x		5759893	1					
ANR	5760719	PtrMemberAccess	pc -> p2		5759893	0					
ANR	5760720	Identifier	pc		5759893	0					
ANR	5760721	Identifier	p2		5759893	1					
ANR	5760722	Identifier	x		5759893	1					
ANR	5760723	EqualityExpression	start -> next -> pt . y != pc -> p2 . y		5759893	1		!=			
ANR	5760724	MemberAccess	start -> next -> pt . y		5759893	0					
ANR	5760725	PtrMemberAccess	start -> next -> pt		5759893	0					
ANR	5760726	PtrMemberAccess	start -> next		5759893	0					
ANR	5760727	Identifier	start		5759893	0					
ANR	5760728	Identifier	next		5759893	1					
ANR	5760729	Identifier	pt		5759893	1					
ANR	5760730	Identifier	y		5759893	1					
ANR	5760731	MemberAccess	pc -> p2 . y		5759893	1					
ANR	5760732	PtrMemberAccess	pc -> p2		5759893	0					
ANR	5760733	Identifier	pc		5759893	0					
ANR	5760734	Identifier	p2		5759893	1					
ANR	5760735	Identifier	y		5759893	1					
ANR	5760736	ExpressionStatement	"adjust_point_to_tangent ( start , start -> next , & pc -> p2 )"	223:32:9528:9580	5759893	1	True				
ANR	5760737	CallExpression	"adjust_point_to_tangent ( start , start -> next , & pc -> p2 )"		5759893	0					
ANR	5760738	Callee	adjust_point_to_tangent		5759893	0					
ANR	5760739	Identifier	adjust_point_to_tangent		5759893	0					
ANR	5760740	ArgumentList	start		5759893	1					
ANR	5760741	Argument	start		5759893	0					
ANR	5760742	Identifier	start		5759893	0					
ANR	5760743	Argument	start -> next		5759893	1					
ANR	5760744	PtrMemberAccess	start -> next		5759893	0					
ANR	5760745	Identifier	start		5759893	0					
ANR	5760746	Identifier	next		5759893	1					
ANR	5760747	Argument	& pc -> p2		5759893	2					
ANR	5760748	UnaryOperationExpression	& pc -> p2		5759893	0					
ANR	5760749	UnaryOperator	&		5759893	0					
ANR	5760750	PtrMemberAccess	pc -> p2		5759893	1					
ANR	5760751	Identifier	pc		5759893	0					
ANR	5760752	Identifier	p2		5759893	1					
ANR	5760753	ElseStatement	else		5759893	0					
ANR	5760754	ExpressionStatement	"adjust_point_to_tangent ( start , start -> next , & end -> prev -> pt )"	225:32:9647:9706	5759893	0	True				
ANR	5760755	CallExpression	"adjust_point_to_tangent ( start , start -> next , & end -> prev -> pt )"		5759893	0					
ANR	5760756	Callee	adjust_point_to_tangent		5759893	0					
ANR	5760757	Identifier	adjust_point_to_tangent		5759893	0					
ANR	5760758	ArgumentList	start		5759893	1					
ANR	5760759	Argument	start		5759893	0					
ANR	5760760	Identifier	start		5759893	0					
ANR	5760761	Argument	start -> next		5759893	1					
ANR	5760762	PtrMemberAccess	start -> next		5759893	0					
ANR	5760763	Identifier	start		5759893	0					
ANR	5760764	Identifier	next		5759893	1					
ANR	5760765	Argument	& end -> prev -> pt		5759893	2					
ANR	5760766	UnaryOperationExpression	& end -> prev -> pt		5759893	0					
ANR	5760767	UnaryOperator	&		5759893	0					
ANR	5760768	PtrMemberAccess	end -> prev -> pt		5759893	1					
ANR	5760769	PtrMemberAccess	end -> prev		5759893	0					
ANR	5760770	Identifier	end		5759893	0					
ANR	5760771	Identifier	prev		5759893	1					
ANR	5760772	Identifier	pt		5759893	1					
ANR	5760773	IfStatement	if ( end -> prev -> pt . x != pc -> p2 . x || end -> prev -> pt . y != pc -> p2 . y )		5759893	12					
ANR	5760774	Condition	end -> prev -> pt . x != pc -> p2 . x || end -> prev -> pt . y != pc -> p2 . y	226:32:9740:9797	5759893	0	True				
ANR	5760775	OrExpression	end -> prev -> pt . x != pc -> p2 . x || end -> prev -> pt . y != pc -> p2 . y		5759893	0		||			
ANR	5760776	EqualityExpression	end -> prev -> pt . x != pc -> p2 . x		5759893	0		!=			
ANR	5760777	MemberAccess	end -> prev -> pt . x		5759893	0					
ANR	5760778	PtrMemberAccess	end -> prev -> pt		5759893	0					
ANR	5760779	PtrMemberAccess	end -> prev		5759893	0					
ANR	5760780	Identifier	end		5759893	0					
ANR	5760781	Identifier	prev		5759893	1					
ANR	5760782	Identifier	pt		5759893	1					
ANR	5760783	Identifier	x		5759893	1					
ANR	5760784	MemberAccess	pc -> p2 . x		5759893	1					
ANR	5760785	PtrMemberAccess	pc -> p2		5759893	0					
ANR	5760786	Identifier	pc		5759893	0					
ANR	5760787	Identifier	p2		5759893	1					
ANR	5760788	Identifier	x		5759893	1					
ANR	5760789	EqualityExpression	end -> prev -> pt . y != pc -> p2 . y		5759893	1		!=			
ANR	5760790	MemberAccess	end -> prev -> pt . y		5759893	0					
ANR	5760791	PtrMemberAccess	end -> prev -> pt		5759893	0					
ANR	5760792	PtrMemberAccess	end -> prev		5759893	0					
ANR	5760793	Identifier	end		5759893	0					
ANR	5760794	Identifier	prev		5759893	1					
ANR	5760795	Identifier	pt		5759893	1					
ANR	5760796	Identifier	y		5759893	1					
ANR	5760797	MemberAccess	pc -> p2 . y		5759893	1					
ANR	5760798	PtrMemberAccess	pc -> p2		5759893	0					
ANR	5760799	Identifier	pc		5759893	0					
ANR	5760800	Identifier	p2		5759893	1					
ANR	5760801	Identifier	y		5759893	1					
ANR	5760802	ExpressionStatement	"adjust_point_to_tangent ( end , end -> prev , & pc -> p2 )"	227:32:9832:9880	5759893	1	True				
ANR	5760803	CallExpression	"adjust_point_to_tangent ( end , end -> prev , & pc -> p2 )"		5759893	0					
ANR	5760804	Callee	adjust_point_to_tangent		5759893	0					
ANR	5760805	Identifier	adjust_point_to_tangent		5759893	0					
ANR	5760806	ArgumentList	end		5759893	1					
ANR	5760807	Argument	end		5759893	0					
ANR	5760808	Identifier	end		5759893	0					
ANR	5760809	Argument	end -> prev		5759893	1					
ANR	5760810	PtrMemberAccess	end -> prev		5759893	0					
ANR	5760811	Identifier	end		5759893	0					
ANR	5760812	Identifier	prev		5759893	1					
ANR	5760813	Argument	& pc -> p2		5759893	2					
ANR	5760814	UnaryOperationExpression	& pc -> p2		5759893	0					
ANR	5760815	UnaryOperator	&		5759893	0					
ANR	5760816	PtrMemberAccess	pc -> p2		5759893	1					
ANR	5760817	Identifier	pc		5759893	0					
ANR	5760818	Identifier	p2		5759893	1					
ANR	5760819	ElseStatement	else		5759893	0					
ANR	5760820	IfStatement	if ( end -> prev -> pt . x != pc -> p1 . x || end -> prev -> pt . y != pc -> p1 . y )		5759893	0					
ANR	5760821	Condition	end -> prev -> pt . x != pc -> p1 . x || end -> prev -> pt . y != pc -> p1 . y	228:37:9919:9976	5759893	0	True				
ANR	5760822	OrExpression	end -> prev -> pt . x != pc -> p1 . x || end -> prev -> pt . y != pc -> p1 . y		5759893	0		||			
ANR	5760823	EqualityExpression	end -> prev -> pt . x != pc -> p1 . x		5759893	0		!=			
ANR	5760824	MemberAccess	end -> prev -> pt . x		5759893	0					
ANR	5760825	PtrMemberAccess	end -> prev -> pt		5759893	0					
ANR	5760826	PtrMemberAccess	end -> prev		5759893	0					
ANR	5760827	Identifier	end		5759893	0					
ANR	5760828	Identifier	prev		5759893	1					
ANR	5760829	Identifier	pt		5759893	1					
ANR	5760830	Identifier	x		5759893	1					
ANR	5760831	MemberAccess	pc -> p1 . x		5759893	1					
ANR	5760832	PtrMemberAccess	pc -> p1		5759893	0					
ANR	5760833	Identifier	pc		5759893	0					
ANR	5760834	Identifier	p1		5759893	1					
ANR	5760835	Identifier	x		5759893	1					
ANR	5760836	EqualityExpression	end -> prev -> pt . y != pc -> p1 . y		5759893	1		!=			
ANR	5760837	MemberAccess	end -> prev -> pt . y		5759893	0					
ANR	5760838	PtrMemberAccess	end -> prev -> pt		5759893	0					
ANR	5760839	PtrMemberAccess	end -> prev		5759893	0					
ANR	5760840	Identifier	end		5759893	0					
ANR	5760841	Identifier	prev		5759893	1					
ANR	5760842	Identifier	pt		5759893	1					
ANR	5760843	Identifier	y		5759893	1					
ANR	5760844	MemberAccess	pc -> p1 . y		5759893	1					
ANR	5760845	PtrMemberAccess	pc -> p1		5759893	0					
ANR	5760846	Identifier	pc		5759893	0					
ANR	5760847	Identifier	p1		5759893	1					
ANR	5760848	Identifier	y		5759893	1					
ANR	5760849	ExpressionStatement	"adjust_point_to_tangent ( end , end -> prev , & pc -> p1 )"	229:32:10011:10059	5759893	1	True				
ANR	5760850	CallExpression	"adjust_point_to_tangent ( end , end -> prev , & pc -> p1 )"		5759893	0					
ANR	5760851	Callee	adjust_point_to_tangent		5759893	0					
ANR	5760852	Identifier	adjust_point_to_tangent		5759893	0					
ANR	5760853	ArgumentList	end		5759893	1					
ANR	5760854	Argument	end		5759893	0					
ANR	5760855	Identifier	end		5759893	0					
ANR	5760856	Argument	end -> prev		5759893	1					
ANR	5760857	PtrMemberAccess	end -> prev		5759893	0					
ANR	5760858	Identifier	end		5759893	0					
ANR	5760859	Identifier	prev		5759893	1					
ANR	5760860	Argument	& pc -> p1		5759893	2					
ANR	5760861	UnaryOperationExpression	& pc -> p1		5759893	0					
ANR	5760862	UnaryOperator	&		5759893	0					
ANR	5760863	PtrMemberAccess	pc -> p1		5759893	1					
ANR	5760864	Identifier	pc		5759893	0					
ANR	5760865	Identifier	p1		5759893	1					
ANR	5760866	ElseStatement	else		5759893	0					
ANR	5760867	ExpressionStatement	"adjust_point_to_tangent ( end , end -> prev , & start -> pt )"	231:32:10126:10177	5759893	0	True				
ANR	5760868	CallExpression	"adjust_point_to_tangent ( end , end -> prev , & start -> pt )"		5759893	0					
ANR	5760869	Callee	adjust_point_to_tangent		5759893	0					
ANR	5760870	Identifier	adjust_point_to_tangent		5759893	0					
ANR	5760871	ArgumentList	end		5759893	1					
ANR	5760872	Argument	end		5759893	0					
ANR	5760873	Identifier	end		5759893	0					
ANR	5760874	Argument	end -> prev		5759893	1					
ANR	5760875	PtrMemberAccess	end -> prev		5759893	0					
ANR	5760876	Identifier	end		5759893	0					
ANR	5760877	Identifier	prev		5759893	1					
ANR	5760878	Argument	& start -> pt		5759893	2					
ANR	5760879	UnaryOperationExpression	& start -> pt		5759893	0					
ANR	5760880	UnaryOperator	&		5759893	0					
ANR	5760881	PtrMemberAccess	start -> pt		5759893	1					
ANR	5760882	Identifier	start		5759893	0					
ANR	5760883	Identifier	pt		5759893	1					
ANR	5760884	ElseStatement	else		5759893	0					
ANR	5760885	CompoundStatement		144:31:7196:7196	5759893	0					
ANR	5760886	ExpressionStatement	cseg = * pc	233:28:10240:10250	5759893	0	True				
ANR	5760887	AssignmentExpression	cseg = * pc		5759893	0		=			
ANR	5760888	Identifier	cseg		5759893	0					
ANR	5760889	UnaryOperationExpression	* pc		5759893	1					
ANR	5760890	UnaryOperator	*		5759893	0					
ANR	5760891	Identifier	pc		5759893	1					
ANR	5760892	ExpressionStatement	"code = gx_subdivide_curve ( ppath , k , & cseg , notes )"	234:28:10280:10329	5759893	1	True				
ANR	5760893	AssignmentExpression	"code = gx_subdivide_curve ( ppath , k , & cseg , notes )"		5759893	0		=			
ANR	5760894	Identifier	code		5759893	0					
ANR	5760895	CallExpression	"gx_subdivide_curve ( ppath , k , & cseg , notes )"		5759893	1					
ANR	5760896	Callee	gx_subdivide_curve		5759893	0					
ANR	5760897	Identifier	gx_subdivide_curve		5759893	0					
ANR	5760898	ArgumentList	ppath		5759893	1					
ANR	5760899	Argument	ppath		5759893	0					
ANR	5760900	Identifier	ppath		5759893	0					
ANR	5760901	Argument	k		5759893	1					
ANR	5760902	Identifier	k		5759893	0					
ANR	5760903	Argument	& cseg		5759893	2					
ANR	5760904	UnaryOperationExpression	& cseg		5759893	0					
ANR	5760905	UnaryOperator	&		5759893	0					
ANR	5760906	Identifier	cseg		5759893	1					
ANR	5760907	Argument	notes		5759893	3					
ANR	5760908	Identifier	notes		5759893	0					
ANR	5760909	BreakStatement	break ;	237:20:10399:10404	5759893	2	True				
ANR	5760910	Label	case s_line :	239:12:10436:10447	5759893	5	True				
ANR	5760911	Identifier	s_line		5759893	0					
ANR	5760912	ExpressionStatement	"code = break_line_if_long ( ppath , pseg )"	240:16:10465:10503	5759893	6	True				
ANR	5760913	AssignmentExpression	"code = break_line_if_long ( ppath , pseg )"		5759893	0		=			
ANR	5760914	Identifier	code		5759893	0					
ANR	5760915	CallExpression	"break_line_if_long ( ppath , pseg )"		5759893	1					
ANR	5760916	Callee	break_line_if_long		5759893	0					
ANR	5760917	Identifier	break_line_if_long		5759893	0					
ANR	5760918	ArgumentList	ppath		5759893	1					
ANR	5760919	Argument	ppath		5759893	0					
ANR	5760920	Identifier	ppath		5759893	0					
ANR	5760921	Argument	pseg		5759893	1					
ANR	5760922	Identifier	pseg		5759893	0					
ANR	5760923	IfStatement	if ( code < 0 )		5759893	7					
ANR	5760924	Condition	code < 0	241:20:10525:10532	5759893	0	True				
ANR	5760925	RelationalExpression	code < 0		5759893	0		<			
ANR	5760926	Identifier	code		5759893	0					
ANR	5760927	PrimaryExpression	0		5759893	1					
ANR	5760928	BreakStatement	break ;	242:20:10555:10560	5759893	1	True				
ANR	5760929	ExpressionStatement	"code = gx_path_add_line_notes ( ppath , pseg -> pt . x , pseg -> pt . y , pseg -> notes )"	243:16:10578:10690	5759893	8	True				
ANR	5760930	AssignmentExpression	"code = gx_path_add_line_notes ( ppath , pseg -> pt . x , pseg -> pt . y , pseg -> notes )"		5759893	0		=			
ANR	5760931	Identifier	code		5759893	0					
ANR	5760932	CallExpression	"gx_path_add_line_notes ( ppath , pseg -> pt . x , pseg -> pt . y , pseg -> notes )"		5759893	1					
ANR	5760933	Callee	gx_path_add_line_notes		5759893	0					
ANR	5760934	Identifier	gx_path_add_line_notes		5759893	0					
ANR	5760935	ArgumentList	ppath		5759893	1					
ANR	5760936	Argument	ppath		5759893	0					
ANR	5760937	Identifier	ppath		5759893	0					
ANR	5760938	Argument	pseg -> pt . x		5759893	1					
ANR	5760939	MemberAccess	pseg -> pt . x		5759893	0					
ANR	5760940	PtrMemberAccess	pseg -> pt		5759893	0					
ANR	5760941	Identifier	pseg		5759893	0					
ANR	5760942	Identifier	pt		5759893	1					
ANR	5760943	Identifier	x		5759893	1					
ANR	5760944	Argument	pseg -> pt . y		5759893	2					
ANR	5760945	MemberAccess	pseg -> pt . y		5759893	0					
ANR	5760946	PtrMemberAccess	pseg -> pt		5759893	0					
ANR	5760947	Identifier	pseg		5759893	0					
ANR	5760948	Identifier	pt		5759893	1					
ANR	5760949	Identifier	y		5759893	1					
ANR	5760950	Argument	pseg -> notes		5759893	3					
ANR	5760951	PtrMemberAccess	pseg -> notes		5759893	0					
ANR	5760952	Identifier	pseg		5759893	0					
ANR	5760953	Identifier	notes		5759893	1					
ANR	5760954	BreakStatement	break ;	245:16:10708:10713	5759893	9	True				
ANR	5760955	Label	case s_gap :	246:12:10727:10737	5759893	10	True				
ANR	5760956	Identifier	s_gap		5759893	0					
ANR	5760957	ExpressionStatement	"code = break_gap_if_long ( ppath , pseg )"	247:16:10755:10792	5759893	11	True				
ANR	5760958	AssignmentExpression	"code = break_gap_if_long ( ppath , pseg )"		5759893	0		=			
ANR	5760959	Identifier	code		5759893	0					
ANR	5760960	CallExpression	"break_gap_if_long ( ppath , pseg )"		5759893	1					
ANR	5760961	Callee	break_gap_if_long		5759893	0					
ANR	5760962	Identifier	break_gap_if_long		5759893	0					
ANR	5760963	ArgumentList	ppath		5759893	1					
ANR	5760964	Argument	ppath		5759893	0					
ANR	5760965	Identifier	ppath		5759893	0					
ANR	5760966	Argument	pseg		5759893	1					
ANR	5760967	Identifier	pseg		5759893	0					
ANR	5760968	IfStatement	if ( code < 0 )		5759893	12					
ANR	5760969	Condition	code < 0	248:20:10814:10821	5759893	0	True				
ANR	5760970	RelationalExpression	code < 0		5759893	0		<			
ANR	5760971	Identifier	code		5759893	0					
ANR	5760972	PrimaryExpression	0		5759893	1					
ANR	5760973	BreakStatement	break ;	249:20:10844:10849	5759893	1	True				
ANR	5760974	ExpressionStatement	"code = gx_path_add_gap_notes ( ppath , pseg -> pt . x , pseg -> pt . y , pseg -> notes )"	250:16:10867:10978	5759893	13	True				
ANR	5760975	AssignmentExpression	"code = gx_path_add_gap_notes ( ppath , pseg -> pt . x , pseg -> pt . y , pseg -> notes )"		5759893	0		=			
ANR	5760976	Identifier	code		5759893	0					
ANR	5760977	CallExpression	"gx_path_add_gap_notes ( ppath , pseg -> pt . x , pseg -> pt . y , pseg -> notes )"		5759893	1					
ANR	5760978	Callee	gx_path_add_gap_notes		5759893	0					
ANR	5760979	Identifier	gx_path_add_gap_notes		5759893	0					
ANR	5760980	ArgumentList	ppath		5759893	1					
ANR	5760981	Argument	ppath		5759893	0					
ANR	5760982	Identifier	ppath		5759893	0					
ANR	5760983	Argument	pseg -> pt . x		5759893	1					
ANR	5760984	MemberAccess	pseg -> pt . x		5759893	0					
ANR	5760985	PtrMemberAccess	pseg -> pt		5759893	0					
ANR	5760986	Identifier	pseg		5759893	0					
ANR	5760987	Identifier	pt		5759893	1					
ANR	5760988	Identifier	x		5759893	1					
ANR	5760989	Argument	pseg -> pt . y		5759893	2					
ANR	5760990	MemberAccess	pseg -> pt . y		5759893	0					
ANR	5760991	PtrMemberAccess	pseg -> pt		5759893	0					
ANR	5760992	Identifier	pseg		5759893	0					
ANR	5760993	Identifier	pt		5759893	1					
ANR	5760994	Identifier	y		5759893	1					
ANR	5760995	Argument	pseg -> notes		5759893	3					
ANR	5760996	PtrMemberAccess	pseg -> notes		5759893	0					
ANR	5760997	Identifier	pseg		5759893	0					
ANR	5760998	Identifier	notes		5759893	1					
ANR	5760999	BreakStatement	break ;	252:16:10996:11001	5759893	14	True				
ANR	5761000	Label	case s_dash :	253:12:11015:11026	5759893	15	True				
ANR	5761001	Identifier	s_dash		5759893	0					
ANR	5761002	CompoundStatement		167:20:8052:8103	5759893	16					
ANR	5761003	IdentifierDeclStatement	const dash_segment * pd = ( const dash_segment * ) pseg ;	255:20:11066:11117	5759893	0	True				
ANR	5761004	IdentifierDecl	* pd = ( const dash_segment * ) pseg		5759893	0					
ANR	5761005	IdentifierDeclType	const dash_segment *		5759893	0					
ANR	5761006	Identifier	pd		5759893	1					
ANR	5761007	AssignmentExpression	* pd = ( const dash_segment * ) pseg		5759893	2		=			
ANR	5761008	Identifier	pd		5759893	0					
ANR	5761009	CastExpression	( const dash_segment * ) pseg		5759893	1					
ANR	5761010	CastTarget	const dash_segment *		5759893	0					
ANR	5761011	Identifier	pseg		5759893	1					
ANR	5761012	ExpressionStatement	"code = gx_path_add_dash_notes ( ppath , pd -> pt . x , pd -> pt . y , pd -> tangent . x , pd -> tangent . y , pseg -> notes )"	257:20:11140:11278	5759893	1	True				
ANR	5761013	AssignmentExpression	"code = gx_path_add_dash_notes ( ppath , pd -> pt . x , pd -> pt . y , pd -> tangent . x , pd -> tangent . y , pseg -> notes )"		5759893	0		=			
ANR	5761014	Identifier	code		5759893	0					
ANR	5761015	CallExpression	"gx_path_add_dash_notes ( ppath , pd -> pt . x , pd -> pt . y , pd -> tangent . x , pd -> tangent . y , pseg -> notes )"		5759893	1					
ANR	5761016	Callee	gx_path_add_dash_notes		5759893	0					
ANR	5761017	Identifier	gx_path_add_dash_notes		5759893	0					
ANR	5761018	ArgumentList	ppath		5759893	1					
ANR	5761019	Argument	ppath		5759893	0					
ANR	5761020	Identifier	ppath		5759893	0					
ANR	5761021	Argument	pd -> pt . x		5759893	1					
ANR	5761022	MemberAccess	pd -> pt . x		5759893	0					
ANR	5761023	PtrMemberAccess	pd -> pt		5759893	0					
ANR	5761024	Identifier	pd		5759893	0					
ANR	5761025	Identifier	pt		5759893	1					
ANR	5761026	Identifier	x		5759893	1					
ANR	5761027	Argument	pd -> pt . y		5759893	2					
ANR	5761028	MemberAccess	pd -> pt . y		5759893	0					
ANR	5761029	PtrMemberAccess	pd -> pt		5759893	0					
ANR	5761030	Identifier	pd		5759893	0					
ANR	5761031	Identifier	pt		5759893	1					
ANR	5761032	Identifier	y		5759893	1					
ANR	5761033	Argument	pd -> tangent . x		5759893	3					
ANR	5761034	MemberAccess	pd -> tangent . x		5759893	0					
ANR	5761035	PtrMemberAccess	pd -> tangent		5759893	0					
ANR	5761036	Identifier	pd		5759893	0					
ANR	5761037	Identifier	tangent		5759893	1					
ANR	5761038	Identifier	x		5759893	1					
ANR	5761039	Argument	pd -> tangent . y		5759893	4					
ANR	5761040	MemberAccess	pd -> tangent . y		5759893	0					
ANR	5761041	PtrMemberAccess	pd -> tangent		5759893	0					
ANR	5761042	Identifier	pd		5759893	0					
ANR	5761043	Identifier	tangent		5759893	1					
ANR	5761044	Identifier	y		5759893	1					
ANR	5761045	Argument	pseg -> notes		5759893	5					
ANR	5761046	PtrMemberAccess	pseg -> notes		5759893	0					
ANR	5761047	Identifier	pseg		5759893	0					
ANR	5761048	Identifier	notes		5759893	1					
ANR	5761049	BreakStatement	break ;	259:20:11300:11305	5759893	2	True				
ANR	5761050	Label	case s_line_close :	261:12:11337:11354	5759893	17	True				
ANR	5761051	Identifier	s_line_close		5759893	0					
ANR	5761052	ExpressionStatement	"code = break_line_if_long ( ppath , pseg )"	262:16:11372:11410	5759893	18	True				
ANR	5761053	AssignmentExpression	"code = break_line_if_long ( ppath , pseg )"		5759893	0		=			
ANR	5761054	Identifier	code		5759893	0					
ANR	5761055	CallExpression	"break_line_if_long ( ppath , pseg )"		5759893	1					
ANR	5761056	Callee	break_line_if_long		5759893	0					
ANR	5761057	Identifier	break_line_if_long		5759893	0					
ANR	5761058	ArgumentList	ppath		5759893	1					
ANR	5761059	Argument	ppath		5759893	0					
ANR	5761060	Identifier	ppath		5759893	0					
ANR	5761061	Argument	pseg		5759893	1					
ANR	5761062	Identifier	pseg		5759893	0					
ANR	5761063	IfStatement	if ( code < 0 )		5759893	19					
ANR	5761064	Condition	code < 0	263:20:11432:11439	5759893	0	True				
ANR	5761065	RelationalExpression	code < 0		5759893	0		<			
ANR	5761066	Identifier	code		5759893	0					
ANR	5761067	PrimaryExpression	0		5759893	1					
ANR	5761068	BreakStatement	break ;	264:20:11462:11467	5759893	1	True				
ANR	5761069	ExpressionStatement	code = gx_path_close_subpath ( ppath )	265:16:11485:11520	5759893	20	True				
ANR	5761070	AssignmentExpression	code = gx_path_close_subpath ( ppath )		5759893	0		=			
ANR	5761071	Identifier	code		5759893	0					
ANR	5761072	CallExpression	gx_path_close_subpath ( ppath )		5759893	1					
ANR	5761073	Callee	gx_path_close_subpath		5759893	0					
ANR	5761074	Identifier	gx_path_close_subpath		5759893	0					
ANR	5761075	ArgumentList	ppath		5759893	1					
ANR	5761076	Argument	ppath		5759893	0					
ANR	5761077	Identifier	ppath		5759893	0					
ANR	5761078	BreakStatement	break ;	266:16:11538:11543	5759893	21	True				
ANR	5761079	Label	default :	267:12:11557:11564	5759893	22	True				
ANR	5761080	Identifier	default		5759893	0					
ANR	5761081	ExpressionStatement	code = gs_note_error ( gs_error_unregistered )	268:16:11602:11645	5759893	23	True				
ANR	5761082	AssignmentExpression	code = gs_note_error ( gs_error_unregistered )		5759893	0		=			
ANR	5761083	Identifier	code		5759893	0					
ANR	5761084	CallExpression	gs_note_error ( gs_error_unregistered )		5759893	1					
ANR	5761085	Callee	gs_note_error		5759893	0					
ANR	5761086	Identifier	gs_note_error		5759893	0					
ANR	5761087	ArgumentList	gs_error_unregistered		5759893	1					
ANR	5761088	Argument	gs_error_unregistered		5759893	0					
ANR	5761089	Identifier	gs_error_unregistered		5759893	0					
ANR	5761090	IfStatement	if ( code < 0 )		5759893	1					
ANR	5761091	Condition	code < 0	270:12:11669:11676	5759893	0	True				
ANR	5761092	RelationalExpression	code < 0		5759893	0		<			
ANR	5761093	Identifier	code		5759893	0					
ANR	5761094	PrimaryExpression	0		5759893	1					
ANR	5761095	CompoundStatement		182:22:8665:8665	5759893	1					
ANR	5761096	ExpressionStatement	gx_path_new ( ppath )	271:12:11693:11711	5759893	0	True				
ANR	5761097	CallExpression	gx_path_new ( ppath )		5759893	0					
ANR	5761098	Callee	gx_path_new		5759893	0					
ANR	5761099	Identifier	gx_path_new		5759893	0					
ANR	5761100	ArgumentList	ppath		5759893	1					
ANR	5761101	Argument	ppath		5759893	0					
ANR	5761102	Identifier	ppath		5759893	0					
ANR	5761103	ReturnStatement	return code ;	272:12:11725:11736	5759893	1	True				
ANR	5761104	Identifier	code		5759893	0					
ANR	5761105	ExpressionStatement	pseg = pseg -> next	274:8:11756:11773	5759893	2	True				
ANR	5761106	AssignmentExpression	pseg = pseg -> next		5759893	0		=			
ANR	5761107	Identifier	pseg		5759893	0					
ANR	5761108	PtrMemberAccess	pseg -> next		5759893	1					
ANR	5761109	Identifier	pseg		5759893	0					
ANR	5761110	Identifier	next		5759893	1					
ANR	5761111	IfStatement	if ( path_last_is_moveto ( ppath_old ) )		5759893	9					
ANR	5761112	Condition	path_last_is_moveto ( ppath_old )	276:8:11789:11818	5759893	0	True				
ANR	5761113	CallExpression	path_last_is_moveto ( ppath_old )		5759893	0					
ANR	5761114	Callee	path_last_is_moveto		5759893	0					
ANR	5761115	Identifier	path_last_is_moveto		5759893	0					
ANR	5761116	ArgumentList	ppath_old		5759893	1					
ANR	5761117	Argument	ppath_old		5759893	0					
ANR	5761118	Identifier	ppath_old		5759893	0					
ANR	5761119	CompoundStatement		188:40:8807:8807	5759893	1					
ANR	5761120	ExpressionStatement	"code = gx_path_add_point ( ppath , ppath_old -> position . x , ppath_old -> position . y )"	277:8:11831:11934	5759893	0	True				
ANR	5761121	AssignmentExpression	"code = gx_path_add_point ( ppath , ppath_old -> position . x , ppath_old -> position . y )"		5759893	0		=			
ANR	5761122	Identifier	code		5759893	0					
ANR	5761123	CallExpression	"gx_path_add_point ( ppath , ppath_old -> position . x , ppath_old -> position . y )"		5759893	1					
ANR	5761124	Callee	gx_path_add_point		5759893	0					
ANR	5761125	Identifier	gx_path_add_point		5759893	0					
ANR	5761126	ArgumentList	ppath		5759893	1					
ANR	5761127	Argument	ppath		5759893	0					
ANR	5761128	Identifier	ppath		5759893	0					
ANR	5761129	Argument	ppath_old -> position . x		5759893	1					
ANR	5761130	MemberAccess	ppath_old -> position . x		5759893	0					
ANR	5761131	PtrMemberAccess	ppath_old -> position		5759893	0					
ANR	5761132	Identifier	ppath_old		5759893	0					
ANR	5761133	Identifier	position		5759893	1					
ANR	5761134	Identifier	x		5759893	1					
ANR	5761135	Argument	ppath_old -> position . y		5759893	2					
ANR	5761136	MemberAccess	ppath_old -> position . y		5759893	0					
ANR	5761137	PtrMemberAccess	ppath_old -> position		5759893	0					
ANR	5761138	Identifier	ppath_old		5759893	0					
ANR	5761139	Identifier	position		5759893	1					
ANR	5761140	Identifier	y		5759893	1					
ANR	5761141	IfStatement	if ( code < 0 )		5759893	1					
ANR	5761142	Condition	code < 0	279:12:11948:11955	5759893	0	True				
ANR	5761143	RelationalExpression	code < 0		5759893	0		<			
ANR	5761144	Identifier	code		5759893	0					
ANR	5761145	PrimaryExpression	0		5759893	1					
ANR	5761146	CompoundStatement		191:22:8944:8944	5759893	1					
ANR	5761147	ExpressionStatement	gx_path_new ( ppath )	280:12:11972:11990	5759893	0	True				
ANR	5761148	CallExpression	gx_path_new ( ppath )		5759893	0					
ANR	5761149	Callee	gx_path_new		5759893	0					
ANR	5761150	Identifier	gx_path_new		5759893	0					
ANR	5761151	ArgumentList	ppath		5759893	1					
ANR	5761152	Argument	ppath		5759893	0					
ANR	5761153	Identifier	ppath		5759893	0					
ANR	5761154	ReturnStatement	return code ;	281:12:12004:12015	5759893	1	True				
ANR	5761155	Identifier	code		5759893	0					
ANR	5761156	IfStatement	if ( ppath_old -> bbox_set )		5759893	10					
ANR	5761157	Condition	ppath_old -> bbox_set	284:8:12041:12059	5759893	0	True				
ANR	5761158	PtrMemberAccess	ppath_old -> bbox_set		5759893	0					
ANR	5761159	Identifier	ppath_old		5759893	0					
ANR	5761160	Identifier	bbox_set		5759893	1					
ANR	5761161	CompoundStatement		196:29:9048:9048	5759893	1					
ANR	5761162	IfStatement	if ( ppath -> bbox_set )		5759893	0					
ANR	5761163	Condition	ppath -> bbox_set	285:12:12076:12090	5759893	0	True				
ANR	5761164	PtrMemberAccess	ppath -> bbox_set		5759893	0					
ANR	5761165	Identifier	ppath		5759893	0					
ANR	5761166	Identifier	bbox_set		5759893	1					
ANR	5761167	CompoundStatement		197:29:9079:9079	5759893	1					
ANR	5761168	ExpressionStatement	"ppath -> bbox . p . x = min ( ppath_old -> bbox . p . x , ppath -> bbox . p . x )"	286:12:12107:12166	5759893	0	True				
ANR	5761169	AssignmentExpression	"ppath -> bbox . p . x = min ( ppath_old -> bbox . p . x , ppath -> bbox . p . x )"		5759893	0		=			
ANR	5761170	MemberAccess	ppath -> bbox . p . x		5759893	0					
ANR	5761171	MemberAccess	ppath -> bbox . p		5759893	0					
ANR	5761172	PtrMemberAccess	ppath -> bbox		5759893	0					
ANR	5761173	Identifier	ppath		5759893	0					
ANR	5761174	Identifier	bbox		5759893	1					
ANR	5761175	Identifier	p		5759893	1					
ANR	5761176	Identifier	x		5759893	1					
ANR	5761177	CallExpression	"min ( ppath_old -> bbox . p . x , ppath -> bbox . p . x )"		5759893	1					
ANR	5761178	Callee	min		5759893	0					
ANR	5761179	Identifier	min		5759893	0					
ANR	5761180	ArgumentList	ppath_old -> bbox . p . x		5759893	1					
ANR	5761181	Argument	ppath_old -> bbox . p . x		5759893	0					
ANR	5761182	MemberAccess	ppath_old -> bbox . p . x		5759893	0					
ANR	5761183	MemberAccess	ppath_old -> bbox . p		5759893	0					
ANR	5761184	PtrMemberAccess	ppath_old -> bbox		5759893	0					
ANR	5761185	Identifier	ppath_old		5759893	0					
ANR	5761186	Identifier	bbox		5759893	1					
ANR	5761187	Identifier	p		5759893	1					
ANR	5761188	Identifier	x		5759893	1					
ANR	5761189	Argument	ppath -> bbox . p . x		5759893	1					
ANR	5761190	MemberAccess	ppath -> bbox . p . x		5759893	0					
ANR	5761191	MemberAccess	ppath -> bbox . p		5759893	0					
ANR	5761192	PtrMemberAccess	ppath -> bbox		5759893	0					
ANR	5761193	Identifier	ppath		5759893	0					
ANR	5761194	Identifier	bbox		5759893	1					
ANR	5761195	Identifier	p		5759893	1					
ANR	5761196	Identifier	x		5759893	1					
ANR	5761197	ExpressionStatement	"ppath -> bbox . p . y = min ( ppath_old -> bbox . p . y , ppath -> bbox . p . y )"	287:12:12180:12239	5759893	1	True				
ANR	5761198	AssignmentExpression	"ppath -> bbox . p . y = min ( ppath_old -> bbox . p . y , ppath -> bbox . p . y )"		5759893	0		=			
ANR	5761199	MemberAccess	ppath -> bbox . p . y		5759893	0					
ANR	5761200	MemberAccess	ppath -> bbox . p		5759893	0					
ANR	5761201	PtrMemberAccess	ppath -> bbox		5759893	0					
ANR	5761202	Identifier	ppath		5759893	0					
ANR	5761203	Identifier	bbox		5759893	1					
ANR	5761204	Identifier	p		5759893	1					
ANR	5761205	Identifier	y		5759893	1					
ANR	5761206	CallExpression	"min ( ppath_old -> bbox . p . y , ppath -> bbox . p . y )"		5759893	1					
ANR	5761207	Callee	min		5759893	0					
ANR	5761208	Identifier	min		5759893	0					
ANR	5761209	ArgumentList	ppath_old -> bbox . p . y		5759893	1					
ANR	5761210	Argument	ppath_old -> bbox . p . y		5759893	0					
ANR	5761211	MemberAccess	ppath_old -> bbox . p . y		5759893	0					
ANR	5761212	MemberAccess	ppath_old -> bbox . p		5759893	0					
ANR	5761213	PtrMemberAccess	ppath_old -> bbox		5759893	0					
ANR	5761214	Identifier	ppath_old		5759893	0					
ANR	5761215	Identifier	bbox		5759893	1					
ANR	5761216	Identifier	p		5759893	1					
ANR	5761217	Identifier	y		5759893	1					
ANR	5761218	Argument	ppath -> bbox . p . y		5759893	1					
ANR	5761219	MemberAccess	ppath -> bbox . p . y		5759893	0					
ANR	5761220	MemberAccess	ppath -> bbox . p		5759893	0					
ANR	5761221	PtrMemberAccess	ppath -> bbox		5759893	0					
ANR	5761222	Identifier	ppath		5759893	0					
ANR	5761223	Identifier	bbox		5759893	1					
ANR	5761224	Identifier	p		5759893	1					
ANR	5761225	Identifier	y		5759893	1					
ANR	5761226	ExpressionStatement	"ppath -> bbox . q . x = max ( ppath_old -> bbox . q . x , ppath -> bbox . q . x )"	288:12:12253:12312	5759893	2	True				
ANR	5761227	AssignmentExpression	"ppath -> bbox . q . x = max ( ppath_old -> bbox . q . x , ppath -> bbox . q . x )"		5759893	0		=			
ANR	5761228	MemberAccess	ppath -> bbox . q . x		5759893	0					
ANR	5761229	MemberAccess	ppath -> bbox . q		5759893	0					
ANR	5761230	PtrMemberAccess	ppath -> bbox		5759893	0					
ANR	5761231	Identifier	ppath		5759893	0					
ANR	5761232	Identifier	bbox		5759893	1					
ANR	5761233	Identifier	q		5759893	1					
ANR	5761234	Identifier	x		5759893	1					
ANR	5761235	CallExpression	"max ( ppath_old -> bbox . q . x , ppath -> bbox . q . x )"		5759893	1					
ANR	5761236	Callee	max		5759893	0					
ANR	5761237	Identifier	max		5759893	0					
ANR	5761238	ArgumentList	ppath_old -> bbox . q . x		5759893	1					
ANR	5761239	Argument	ppath_old -> bbox . q . x		5759893	0					
ANR	5761240	MemberAccess	ppath_old -> bbox . q . x		5759893	0					
ANR	5761241	MemberAccess	ppath_old -> bbox . q		5759893	0					
ANR	5761242	PtrMemberAccess	ppath_old -> bbox		5759893	0					
ANR	5761243	Identifier	ppath_old		5759893	0					
ANR	5761244	Identifier	bbox		5759893	1					
ANR	5761245	Identifier	q		5759893	1					
ANR	5761246	Identifier	x		5759893	1					
ANR	5761247	Argument	ppath -> bbox . q . x		5759893	1					
ANR	5761248	MemberAccess	ppath -> bbox . q . x		5759893	0					
ANR	5761249	MemberAccess	ppath -> bbox . q		5759893	0					
ANR	5761250	PtrMemberAccess	ppath -> bbox		5759893	0					
ANR	5761251	Identifier	ppath		5759893	0					
ANR	5761252	Identifier	bbox		5759893	1					
ANR	5761253	Identifier	q		5759893	1					
ANR	5761254	Identifier	x		5759893	1					
ANR	5761255	ExpressionStatement	"ppath -> bbox . q . y = max ( ppath_old -> bbox . q . y , ppath -> bbox . q . y )"	289:12:12326:12385	5759893	3	True				
ANR	5761256	AssignmentExpression	"ppath -> bbox . q . y = max ( ppath_old -> bbox . q . y , ppath -> bbox . q . y )"		5759893	0		=			
ANR	5761257	MemberAccess	ppath -> bbox . q . y		5759893	0					
ANR	5761258	MemberAccess	ppath -> bbox . q		5759893	0					
ANR	5761259	PtrMemberAccess	ppath -> bbox		5759893	0					
ANR	5761260	Identifier	ppath		5759893	0					
ANR	5761261	Identifier	bbox		5759893	1					
ANR	5761262	Identifier	q		5759893	1					
ANR	5761263	Identifier	y		5759893	1					
ANR	5761264	CallExpression	"max ( ppath_old -> bbox . q . y , ppath -> bbox . q . y )"		5759893	1					
ANR	5761265	Callee	max		5759893	0					
ANR	5761266	Identifier	max		5759893	0					
ANR	5761267	ArgumentList	ppath_old -> bbox . q . y		5759893	1					
ANR	5761268	Argument	ppath_old -> bbox . q . y		5759893	0					
ANR	5761269	MemberAccess	ppath_old -> bbox . q . y		5759893	0					
ANR	5761270	MemberAccess	ppath_old -> bbox . q		5759893	0					
ANR	5761271	PtrMemberAccess	ppath_old -> bbox		5759893	0					
ANR	5761272	Identifier	ppath_old		5759893	0					
ANR	5761273	Identifier	bbox		5759893	1					
ANR	5761274	Identifier	q		5759893	1					
ANR	5761275	Identifier	y		5759893	1					
ANR	5761276	Argument	ppath -> bbox . q . y		5759893	1					
ANR	5761277	MemberAccess	ppath -> bbox . q . y		5759893	0					
ANR	5761278	MemberAccess	ppath -> bbox . q		5759893	0					
ANR	5761279	PtrMemberAccess	ppath -> bbox		5759893	0					
ANR	5761280	Identifier	ppath		5759893	0					
ANR	5761281	Identifier	bbox		5759893	1					
ANR	5761282	Identifier	q		5759893	1					
ANR	5761283	Identifier	y		5759893	1					
ANR	5761284	ElseStatement	else		5759893	0					
ANR	5761285	CompoundStatement		202:15:9388:9388	5759893	0					
ANR	5761286	ExpressionStatement	ppath -> bbox_set = true	291:12:12416:12438	5759893	0	True				
ANR	5761287	AssignmentExpression	ppath -> bbox_set = true		5759893	0		=			
ANR	5761288	PtrMemberAccess	ppath -> bbox_set		5759893	0					
ANR	5761289	Identifier	ppath		5759893	0					
ANR	5761290	Identifier	bbox_set		5759893	1					
ANR	5761291	Identifier	true		5759893	1					
ANR	5761292	ExpressionStatement	ppath -> bbox = ppath_old -> bbox	292:12:12452:12481	5759893	1	True				
ANR	5761293	AssignmentExpression	ppath -> bbox = ppath_old -> bbox		5759893	0		=			
ANR	5761294	PtrMemberAccess	ppath -> bbox		5759893	0					
ANR	5761295	Identifier	ppath		5759893	0					
ANR	5761296	Identifier	bbox		5759893	1					
ANR	5761297	PtrMemberAccess	ppath_old -> bbox		5759893	1					
ANR	5761298	Identifier	ppath_old		5759893	0					
ANR	5761299	Identifier	bbox		5759893	1					
ANR	5761300	IfStatement	if ( gs_debug_c ( 'P' ) )		5759893	11					
ANR	5761301	Condition	gs_debug_c ( 'P' )	296:8:12520:12534	5759893	0	True				
ANR	5761302	CallExpression	gs_debug_c ( 'P' )		5759893	0					
ANR	5761303	Callee	gs_debug_c		5759893	0					
ANR	5761304	Identifier	gs_debug_c		5759893	0					
ANR	5761305	ArgumentList	'P'		5759893	1					
ANR	5761306	Argument	'P'		5759893	0					
ANR	5761307	PrimaryExpression	'P'		5759893	0					
ANR	5761308	ExpressionStatement	"gx_dump_path ( ppath , ""after reducing"" )"	297:8:12545:12582	5759893	1	True				
ANR	5761309	CallExpression	"gx_dump_path ( ppath , ""after reducing"" )"		5759893	0					
ANR	5761310	Callee	gx_dump_path		5759893	0					
ANR	5761311	Identifier	gx_dump_path		5759893	0					
ANR	5761312	ArgumentList	ppath		5759893	1					
ANR	5761313	Argument	ppath		5759893	0					
ANR	5761314	Identifier	ppath		5759893	0					
ANR	5761315	Argument	"""after reducing"""		5759893	1					
ANR	5761316	PrimaryExpression	"""after reducing"""		5759893	0					
ANR	5761317	ReturnStatement	return 0 ;	299:4:12595:12603	5759893	12	True				
ANR	5761318	PrimaryExpression	0		5759893	0					
ANR	5761319	ReturnType	int		5759893	1					
ANR	5761320	Identifier	gx_path_copy_reducing		5759893	2					
ANR	5761321	ParameterList	"const gx_path * ppath_old , gx_path * ppath , fixed fixed_flatness , const gs_gstate * pgs , gx_path_copy_options options"		5759893	3					
ANR	5761322	Parameter	const gx_path * ppath_old	86:22:2853:2876	5759893	0	True				
ANR	5761323	ParameterType	const gx_path *		5759893	0					
ANR	5761324	Identifier	ppath_old		5759893	1					
ANR	5761325	Parameter	gx_path * ppath	86:48:2879:2892	5759893	1	True				
ANR	5761326	ParameterType	gx_path *		5759893	0					
ANR	5761327	Identifier	ppath		5759893	1					
ANR	5761328	Parameter	fixed fixed_flatness	87:22:2917:2936	5759893	2	True				
ANR	5761329	ParameterType	fixed		5759893	0					
ANR	5761330	Identifier	fixed_flatness		5759893	1					
ANR	5761331	Parameter	const gs_gstate * pgs	87:44:2939:2958	5759893	3	True				
ANR	5761332	ParameterType	const gs_gstate *		5759893	0					
ANR	5761333	Identifier	pgs		5759893	1					
ANR	5761334	Parameter	gx_path_copy_options options	88:22:2983:3010	5759893	4	True				
ANR	5761335	ParameterType	gx_path_copy_options		5759893	0					
ANR	5761336	Identifier	options		5759893	1					
ANR	5761337	CFGEntryNode	ENTRY		5759893		True				
ANR	5761338	CFGExitNode	EXIT		5759893		True				
ANR	5761339	Symbol	* ppath -> current_subpath		5759893						
ANR	5761340	Symbol	ppath -> current_subpath -> last		5759893						
ANR	5761341	Symbol	fixed_mult_quo		5759893						
ANR	5761342	Symbol	pd -> pt		5759893						
ANR	5761343	Symbol	pc -> p1 . y		5759893						
ANR	5761344	Symbol	& cseg		5759893						
ANR	5761345	Symbol	* pgs		5759893						
ANR	5761346	Symbol	pc -> p1 . x		5759893						
ANR	5761347	Symbol	* start		5759893						
ANR	5761348	Symbol	pc -> pt . x		5759893						
ANR	5761349	Symbol	pc -> pt . y		5759893						
ANR	5761350	Symbol	gx_path_unshare		5759893						
ANR	5761351	Symbol	gx_path_add_dash_notes		5759893						
ANR	5761352	Symbol	break_line_if_long		5759893						
ANR	5761353	Symbol	ppath_old -> bbox_set		5759893						
ANR	5761354	Symbol	options		5759893						
ANR	5761355	Symbol	gx_path_add_curve_notes		5759893						
ANR	5761356	Symbol	end -> prev		5759893						
ANR	5761357	Symbol	flat_x		5759893						
ANR	5761358	Symbol	* start -> next		5759893						
ANR	5761359	Symbol	fixed_flatness		5759893						
ANR	5761360	Symbol	flat_y		5759893						
ANR	5761361	Symbol	min23		5759893						
ANR	5761362	Symbol	ppath -> bbox . p		5759893						
ANR	5761363	Symbol	ppath -> bbox . q		5759893						
ANR	5761364	Symbol	ppath_old -> bbox . q . x		5759893						
ANR	5761365	Symbol	pd -> pt . x		5759893						
ANR	5761366	Symbol	ppath_old -> bbox . q . y		5759893						
ANR	5761367	Symbol	ppath -> position . x		5759893						
ANR	5761368	Symbol	pd -> pt . y		5759893						
ANR	5761369	Symbol	gx_curve_monotonize		5759893						
ANR	5761370	Symbol	ppath -> position . y		5759893						
ANR	5761371	Symbol	c0		5759893						
ANR	5761372	Symbol	gx_path_add_point		5759893						
ANR	5761373	Symbol	c1		5759893						
ANR	5761374	Symbol	c2		5759893						
ANR	5761375	Symbol	ppath_old -> position		5759893						
ANR	5761376	Symbol	c3		5759893						
ANR	5761377	Symbol	gx_curve_log2_samples		5759893						
ANR	5761378	Symbol	* * ppath		5759893						
ANR	5761379	Symbol	* ppath_old		5759893						
ANR	5761380	Symbol	cseg		5759893						
ANR	5761381	Symbol	break_gap_if_long		5759893						
ANR	5761382	Symbol	max01		5759893						
ANR	5761383	Symbol	pseg -> pt		5759893						
ANR	5761384	Symbol	float2fixed		5759893						
ANR	5761385	Symbol	min		5759893						
ANR	5761386	Symbol	pseg -> type		5759893						
ANR	5761387	Symbol	flat		5759893						
ANR	5761388	Symbol	pgs		5759893						
ANR	5761389	Symbol	start -> next		5759893						
ANR	5761390	Symbol	ppath_old -> bbox . p		5759893						
ANR	5761391	Symbol	fabs		5759893						
ANR	5761392	Symbol	pgs -> line_params . half_width		5759893						
ANR	5761393	Symbol	max		5759893						
ANR	5761394	Symbol	ppath_old -> bbox . q		5759893						
ANR	5761395	Symbol	pco_monotonize		5759893						
ANR	5761396	Symbol	k		5759893						
ANR	5761397	Symbol	ppath -> bbox . p . x		5759893						
ANR	5761398	Symbol	ppath -> bbox . p . y		5759893						
ANR	5761399	Symbol	r		5759893						
ANR	5761400	Symbol	width		5759893						
ANR	5761401	Symbol	expansion . x		5759893						
ANR	5761402	Symbol	& end -> prev -> pt		5759893						
ANR	5761403	Symbol	end -> prev -> pt		5759893						
ANR	5761404	Symbol	expansion . y		5759893						
ANR	5761405	Symbol	pd -> tangent . y		5759893						
ANR	5761406	Symbol	pd -> tangent . x		5759893						
ANR	5761407	Symbol	gx_path_add_gap_notes		5759893						
ANR	5761408	Symbol	notes		5759893						
ANR	5761409	Symbol	ppath -> current_subpath		5759893						
ANR	5761410	Symbol	pd -> tangent		5759893						
ANR	5761411	Symbol	pgs -> line_params		5759893						
ANR	5761412	Symbol	max23		5759893						
ANR	5761413	Symbol	ppath -> bbox		5759893						
ANR	5761414	Symbol	pseg -> next		5759893						
ANR	5761415	Symbol	pgs -> ctm . xx		5759893						
ANR	5761416	Symbol	pc -> p2 . x		5759893						
ANR	5761417	Symbol	end -> prev -> pt . x		5759893						
ANR	5761418	Symbol	max_fixed		5759893						
ANR	5761419	Symbol	pc -> p2 . y		5759893						
ANR	5761420	Symbol	SET_EXTENT		5759893						
ANR	5761421	Symbol	end -> prev -> pt . y		5759893						
ANR	5761422	Symbol	ppath -> bbox_set		5759893						
ANR	5761423	Symbol	pgs -> ctm . xy		5759893						
ANR	5761424	Symbol	start -> next -> pt		5759893						
ANR	5761425	Symbol	gs_debug_c		5759893						
ANR	5761426	Symbol	pc -> p2		5759893						
ANR	5761427	Symbol	pc -> p1		5759893						
ANR	5761428	Symbol	* end -> prev		5759893						
ANR	5761429	Symbol	* ppath		5759893						
ANR	5761430	Symbol	pco_accurate		5759893						
ANR	5761431	Symbol	pco_for_stroke		5759893						
ANR	5761432	Symbol	ppath_old -> first_subpath		5759893						
ANR	5761433	Symbol	gx_subdivide_curve		5759893						
ANR	5761434	Symbol	gx_path_add_line_notes		5759893						
ANR	5761435	Symbol	pseg -> pt . x		5759893						
ANR	5761436	Symbol	pseg -> pt . y		5759893						
ANR	5761437	Symbol	pgs -> ctm		5759893						
ANR	5761438	Symbol	expansion		5759893						
ANR	5761439	Symbol	* * end		5759893						
ANR	5761440	Symbol	start -> next -> pt . y		5759893						
ANR	5761441	Symbol	start -> next -> pt . x		5759893						
ANR	5761442	Symbol	ppath_old -> bbox		5759893						
ANR	5761443	Symbol	ex		5759893						
ANR	5761444	Symbol	pgs -> ctm . yy		5759893						
ANR	5761445	Symbol	ey		5759893						
ANR	5761446	Symbol	pgs -> ctm . yx		5759893						
ANR	5761447	Symbol	* pseg		5759893						
ANR	5761448	Symbol	x0		5759893						
ANR	5761449	Symbol	true		5759893						
ANR	5761450	Symbol	* pd		5759893						
ANR	5761451	Symbol	* pc		5759893						
ANR	5761452	Symbol	* end		5759893						
ANR	5761453	Symbol	* * start		5759893						
ANR	5761454	Symbol	ppath_old -> bbox . p . x		5759893						
ANR	5761455	Symbol	ppath_old -> bbox . p . y		5759893						
ANR	5761456	Symbol	gs_error_unregistered		5759893						
ANR	5761457	Symbol	code		5759893						
ANR	5761458	Symbol	pseg -> notes		5759893						
ANR	5761459	Symbol	ppath		5759893						
ANR	5761460	Symbol	gx_path_close_subpath		5759893						
ANR	5761461	Symbol	pseg		5759893						
ANR	5761462	Symbol	y0		5759893						
ANR	5761463	Symbol	pc -> pt		5759893						
ANR	5761464	Symbol	ppath -> bbox . q . x		5759893						
ANR	5761465	Symbol	ppath -> bbox . q . y		5759893						
ANR	5761466	Symbol	end		5759893						
ANR	5761467	Symbol	min01		5759893						
ANR	5761468	Symbol	start		5759893						
ANR	5761469	Symbol	path_last_is_moveto		5759893						
ANR	5761470	Symbol	& pc -> p2		5759893						
ANR	5761471	Symbol	& pc -> p1		5759893						
ANR	5761472	Symbol	gs_note_error		5759893						
ANR	5761473	Symbol	pc		5759893						
ANR	5761474	Symbol	ppath_old		5759893						
ANR	5761475	Symbol	pd		5759893						
ANR	5761476	Symbol	sn_not_first		5759893						
ANR	5761477	Symbol	ppath_old -> position . x		5759893						
ANR	5761478	Symbol	ppath -> position		5759893						
ANR	5761479	Symbol	ppath_old -> position . y		5759893						
ANR	5761480	Symbol	& start -> pt		5759893						
ANR	5761481	Function	adjust_point_to_tangent	313:0:13168:14774							
ANR	5761482	FunctionDef	"adjust_point_to_tangent (segment * pseg , const segment * next , const gs_fixed_point * p1)"		5761481	0					
ANR	5761483	CompoundStatement		316:0:13293:14774	5761481	0					
ANR	5761484	IdentifierDeclStatement	"const fixed x0 = pseg -> pt . x , y0 = pseg -> pt . y ;"	317:4:13299:13343	5761481	0	True				
ANR	5761485	IdentifierDecl	x0 = pseg -> pt . x		5761481	0					
ANR	5761486	IdentifierDeclType	const fixed		5761481	0					
ANR	5761487	Identifier	x0		5761481	1					
ANR	5761488	AssignmentExpression	x0 = pseg -> pt . x		5761481	2		=			
ANR	5761489	Identifier	x0		5761481	0					
ANR	5761490	MemberAccess	pseg -> pt . x		5761481	1					
ANR	5761491	PtrMemberAccess	pseg -> pt		5761481	0					
ANR	5761492	Identifier	pseg		5761481	0					
ANR	5761493	Identifier	pt		5761481	1					
ANR	5761494	Identifier	x		5761481	1					
ANR	5761495	IdentifierDecl	y0 = pseg -> pt . y		5761481	1					
ANR	5761496	IdentifierDeclType	const fixed		5761481	0					
ANR	5761497	Identifier	y0		5761481	1					
ANR	5761498	AssignmentExpression	y0 = pseg -> pt . y		5761481	2		=			
ANR	5761499	Identifier	y0		5761481	0					
ANR	5761500	MemberAccess	pseg -> pt . y		5761481	1					
ANR	5761501	PtrMemberAccess	pseg -> pt		5761481	0					
ANR	5761502	Identifier	pseg		5761481	0					
ANR	5761503	Identifier	pt		5761481	1					
ANR	5761504	Identifier	y		5761481	1					
ANR	5761505	IdentifierDeclStatement	"const fixed fC = p1 -> x - x0 , fD = p1 -> y - y0 ;"	318:4:13349:13393	5761481	1	True				
ANR	5761506	IdentifierDecl	fC = p1 -> x - x0		5761481	0					
ANR	5761507	IdentifierDeclType	const fixed		5761481	0					
ANR	5761508	Identifier	fC		5761481	1					
ANR	5761509	AssignmentExpression	fC = p1 -> x - x0		5761481	2		=			
ANR	5761510	Identifier	fC		5761481	0					
ANR	5761511	AdditiveExpression	p1 -> x - x0		5761481	1		-			
ANR	5761512	PtrMemberAccess	p1 -> x		5761481	0					
ANR	5761513	Identifier	p1		5761481	0					
ANR	5761514	Identifier	x		5761481	1					
ANR	5761515	Identifier	x0		5761481	1					
ANR	5761516	IdentifierDecl	fD = p1 -> y - y0		5761481	1					
ANR	5761517	IdentifierDeclType	const fixed		5761481	0					
ANR	5761518	Identifier	fD		5761481	1					
ANR	5761519	AssignmentExpression	fD = p1 -> y - y0		5761481	2		=			
ANR	5761520	Identifier	fD		5761481	0					
ANR	5761521	AdditiveExpression	p1 -> y - y0		5761481	1		-			
ANR	5761522	PtrMemberAccess	p1 -> y		5761481	0					
ANR	5761523	Identifier	p1		5761481	0					
ANR	5761524	Identifier	y		5761481	1					
ANR	5761525	Identifier	y0		5761481	1					
ANR	5761526	IfStatement	if ( fC == 0 )		5761481	2					
ANR	5761527	Condition	fC == 0	325:8:13618:13624	5761481	0	True				
ANR	5761528	EqualityExpression	fC == 0		5761481	0		==			
ANR	5761529	Identifier	fC		5761481	0					
ANR	5761530	PrimaryExpression	0		5761481	1					
ANR	5761531	CompoundStatement		12:8:375:424	5761481	1					
ANR	5761532	IdentifierDeclStatement	"const fixed DT = arith_rshift ( next -> pt . y - y0 , 2 ) ;"	327:8:13669:13718	5761481	0	True				
ANR	5761533	IdentifierDecl	"DT = arith_rshift ( next -> pt . y - y0 , 2 )"		5761481	0					
ANR	5761534	IdentifierDeclType	const fixed		5761481	0					
ANR	5761535	Identifier	DT		5761481	1					
ANR	5761536	AssignmentExpression	"DT = arith_rshift ( next -> pt . y - y0 , 2 )"		5761481	2		=			
ANR	5761537	Identifier	DT		5761481	0					
ANR	5761538	CallExpression	"arith_rshift ( next -> pt . y - y0 , 2 )"		5761481	1					
ANR	5761539	Callee	arith_rshift		5761481	0					
ANR	5761540	Identifier	arith_rshift		5761481	0					
ANR	5761541	ArgumentList	next -> pt . y - y0		5761481	1					
ANR	5761542	Argument	next -> pt . y - y0		5761481	0					
ANR	5761543	AdditiveExpression	next -> pt . y - y0		5761481	0		-			
ANR	5761544	MemberAccess	next -> pt . y		5761481	0					
ANR	5761545	PtrMemberAccess	next -> pt		5761481	0					
ANR	5761546	Identifier	next		5761481	0					
ANR	5761547	Identifier	pt		5761481	1					
ANR	5761548	Identifier	y		5761481	1					
ANR	5761549	Identifier	y0		5761481	1					
ANR	5761550	Argument	2		5761481	1					
ANR	5761551	PrimaryExpression	2		5761481	0					
ANR	5761552	IfStatement	if ( fD == 0 )		5761481	1					
ANR	5761553	Condition	fD == 0	329:12:13733:13739	5761481	0	True				
ANR	5761554	EqualityExpression	fD == 0		5761481	0		==			
ANR	5761555	Identifier	fD		5761481	0					
ANR	5761556	PrimaryExpression	0		5761481	1					
ANR	5761557	ReturnStatement	return ;	330:12:13754:13760	5761481	1	True				
ANR	5761558	ExpressionStatement	"if_debug1 ( '2' , ""[2]adjusting vertical: DT = %g\\n"" , fixed2float ( DT ) )"	331:8:13792:13877	5761481	2	True				
ANR	5761559	CallExpression	"if_debug1 ( '2' , ""[2]adjusting vertical: DT = %g\\n"" , fixed2float ( DT ) )"		5761481	0					
ANR	5761560	Callee	if_debug1		5761481	0					
ANR	5761561	Identifier	if_debug1		5761481	0					
ANR	5761562	ArgumentList	'2'		5761481	1					
ANR	5761563	Argument	'2'		5761481	0					
ANR	5761564	PrimaryExpression	'2'		5761481	0					
ANR	5761565	Argument	"""[2]adjusting vertical: DT = %g\\n"""		5761481	1					
ANR	5761566	PrimaryExpression	"""[2]adjusting vertical: DT = %g\\n"""		5761481	0					
ANR	5761567	Argument	fixed2float ( DT )		5761481	2					
ANR	5761568	CallExpression	fixed2float ( DT )		5761481	0					
ANR	5761569	Callee	fixed2float		5761481	0					
ANR	5761570	Identifier	fixed2float		5761481	0					
ANR	5761571	ArgumentList	DT		5761481	1					
ANR	5761572	Argument	DT		5761481	0					
ANR	5761573	Identifier	DT		5761481	0					
ANR	5761574	IfStatement	if ( ( DT ^ fD ) > 0 )		5761481	3					
ANR	5761575	Condition	( DT ^ fD ) > 0	333:12:13891:13903	5761481	0	True				
ANR	5761576	RelationalExpression	( DT ^ fD ) > 0		5761481	0		>			
ANR	5761577	ExclusiveOrExpression	DT ^ fD		5761481	0		^			
ANR	5761578	Identifier	DT		5761481	0					
ANR	5761579	Identifier	fD		5761481	1					
ANR	5761580	PrimaryExpression	0		5761481	1					
ANR	5761581	ExpressionStatement	pseg -> pt . y = DT + y0	334:12:13918:13938	5761481	1	True				
ANR	5761582	AssignmentExpression	pseg -> pt . y = DT + y0		5761481	0		=			
ANR	5761583	MemberAccess	pseg -> pt . y		5761481	0					
ANR	5761584	PtrMemberAccess	pseg -> pt		5761481	0					
ANR	5761585	Identifier	pseg		5761481	0					
ANR	5761586	Identifier	pt		5761481	1					
ANR	5761587	Identifier	y		5761481	1					
ANR	5761588	AdditiveExpression	DT + y0		5761481	1		+			
ANR	5761589	Identifier	DT		5761481	0					
ANR	5761590	Identifier	y0		5761481	1					
ANR	5761591	ElseStatement	else		5761481	0					
ANR	5761592	IfStatement	if ( fD == 0 )		5761481	0					
ANR	5761593	Condition	fD == 0	335:15:13955:13961	5761481	0	True				
ANR	5761594	EqualityExpression	fD == 0		5761481	0		==			
ANR	5761595	Identifier	fD		5761481	0					
ANR	5761596	PrimaryExpression	0		5761481	1					
ANR	5761597	CompoundStatement		22:8:714:763	5761481	1					
ANR	5761598	IdentifierDeclStatement	"const fixed CT = arith_rshift ( next -> pt . x - x0 , 2 ) ;"	337:8:14008:14057	5761481	0	True				
ANR	5761599	IdentifierDecl	"CT = arith_rshift ( next -> pt . x - x0 , 2 )"		5761481	0					
ANR	5761600	IdentifierDeclType	const fixed		5761481	0					
ANR	5761601	Identifier	CT		5761481	1					
ANR	5761602	AssignmentExpression	"CT = arith_rshift ( next -> pt . x - x0 , 2 )"		5761481	2		=			
ANR	5761603	Identifier	CT		5761481	0					
ANR	5761604	CallExpression	"arith_rshift ( next -> pt . x - x0 , 2 )"		5761481	1					
ANR	5761605	Callee	arith_rshift		5761481	0					
ANR	5761606	Identifier	arith_rshift		5761481	0					
ANR	5761607	ArgumentList	next -> pt . x - x0		5761481	1					
ANR	5761608	Argument	next -> pt . x - x0		5761481	0					
ANR	5761609	AdditiveExpression	next -> pt . x - x0		5761481	0		-			
ANR	5761610	MemberAccess	next -> pt . x		5761481	0					
ANR	5761611	PtrMemberAccess	next -> pt		5761481	0					
ANR	5761612	Identifier	next		5761481	0					
ANR	5761613	Identifier	pt		5761481	1					
ANR	5761614	Identifier	x		5761481	1					
ANR	5761615	Identifier	x0		5761481	1					
ANR	5761616	Argument	2		5761481	1					
ANR	5761617	PrimaryExpression	2		5761481	0					
ANR	5761618	ExpressionStatement	"if_debug1 ( '2' , ""[2]adjusting horizontal: CT = %g\\n"" , fixed2float ( CT ) )"	339:8:14068:14155	5761481	1	True				
ANR	5761619	CallExpression	"if_debug1 ( '2' , ""[2]adjusting horizontal: CT = %g\\n"" , fixed2float ( CT ) )"		5761481	0					
ANR	5761620	Callee	if_debug1		5761481	0					
ANR	5761621	Identifier	if_debug1		5761481	0					
ANR	5761622	ArgumentList	'2'		5761481	1					
ANR	5761623	Argument	'2'		5761481	0					
ANR	5761624	PrimaryExpression	'2'		5761481	0					
ANR	5761625	Argument	"""[2]adjusting horizontal: CT = %g\\n"""		5761481	1					
ANR	5761626	PrimaryExpression	"""[2]adjusting horizontal: CT = %g\\n"""		5761481	0					
ANR	5761627	Argument	fixed2float ( CT )		5761481	2					
ANR	5761628	CallExpression	fixed2float ( CT )		5761481	0					
ANR	5761629	Callee	fixed2float		5761481	0					
ANR	5761630	Identifier	fixed2float		5761481	0					
ANR	5761631	ArgumentList	CT		5761481	1					
ANR	5761632	Argument	CT		5761481	0					
ANR	5761633	Identifier	CT		5761481	0					
ANR	5761634	IfStatement	if ( ( CT ^ fC ) > 0 )		5761481	2					
ANR	5761635	Condition	( CT ^ fC ) > 0	341:12:14169:14181	5761481	0	True				
ANR	5761636	RelationalExpression	( CT ^ fC ) > 0		5761481	0		>			
ANR	5761637	ExclusiveOrExpression	CT ^ fC		5761481	0		^			
ANR	5761638	Identifier	CT		5761481	0					
ANR	5761639	Identifier	fC		5761481	1					
ANR	5761640	PrimaryExpression	0		5761481	1					
ANR	5761641	ExpressionStatement	pseg -> pt . x = CT + x0	342:12:14196:14216	5761481	1	True				
ANR	5761642	AssignmentExpression	pseg -> pt . x = CT + x0		5761481	0		=			
ANR	5761643	MemberAccess	pseg -> pt . x		5761481	0					
ANR	5761644	PtrMemberAccess	pseg -> pt		5761481	0					
ANR	5761645	Identifier	pseg		5761481	0					
ANR	5761646	Identifier	pt		5761481	1					
ANR	5761647	Identifier	x		5761481	1					
ANR	5761648	AdditiveExpression	CT + x0		5761481	1		+			
ANR	5761649	Identifier	CT		5761481	0					
ANR	5761650	Identifier	x0		5761481	1					
ANR	5761651	ElseStatement	else		5761481	0					
ANR	5761652	CompoundStatement		31:8:1010:1094	5761481	0					
ANR	5761653	IdentifierDeclStatement	"const double C = fC , D = fD ;"	345:8:14267:14294	5761481	0	True				
ANR	5761654	IdentifierDecl	C = fC		5761481	0					
ANR	5761655	IdentifierDeclType	const double		5761481	0					
ANR	5761656	Identifier	C		5761481	1					
ANR	5761657	AssignmentExpression	C = fC		5761481	2		=			
ANR	5761658	Identifier	fC		5761481	0					
ANR	5761659	Identifier	fC		5761481	1					
ANR	5761660	IdentifierDecl	D = fD		5761481	1					
ANR	5761661	IdentifierDeclType	const double		5761481	0					
ANR	5761662	Identifier	D		5761481	1					
ANR	5761663	AssignmentExpression	D = fD		5761481	2		=			
ANR	5761664	Identifier	fD		5761481	0					
ANR	5761665	Identifier	fD		5761481	1					
ANR	5761666	IdentifierDeclStatement	double T = ( C * ( next -> pt . x - x0 ) + D * ( next -> pt . y - y0 ) ) / ( C * C + D * D ) ;	346:8:14304:14388	5761481	1	True				
ANR	5761667	IdentifierDecl	T = ( C * ( next -> pt . x - x0 ) + D * ( next -> pt . y - y0 ) ) / ( C * C + D * D )		5761481	0					
ANR	5761668	IdentifierDeclType	double		5761481	0					
ANR	5761669	Identifier	T		5761481	1					
ANR	5761670	AssignmentExpression	T = ( C * ( next -> pt . x - x0 ) + D * ( next -> pt . y - y0 ) ) / ( C * C + D * D )		5761481	2		=			
ANR	5761671	Identifier	T		5761481	0					
ANR	5761672	MultiplicativeExpression	( C * ( next -> pt . x - x0 ) + D * ( next -> pt . y - y0 ) ) / ( C * C + D * D )		5761481	1		/			
ANR	5761673	AdditiveExpression	C * ( next -> pt . x - x0 ) + D * ( next -> pt . y - y0 )		5761481	0		+			
ANR	5761674	MultiplicativeExpression	C * ( next -> pt . x - x0 )		5761481	0		*			
ANR	5761675	Identifier	C		5761481	0					
ANR	5761676	AdditiveExpression	next -> pt . x - x0		5761481	1		-			
ANR	5761677	MemberAccess	next -> pt . x		5761481	0					
ANR	5761678	PtrMemberAccess	next -> pt		5761481	0					
ANR	5761679	Identifier	next		5761481	0					
ANR	5761680	Identifier	pt		5761481	1					
ANR	5761681	Identifier	x		5761481	1					
ANR	5761682	Identifier	x0		5761481	1					
ANR	5761683	MultiplicativeExpression	D * ( next -> pt . y - y0 )		5761481	1		*			
ANR	5761684	Identifier	D		5761481	0					
ANR	5761685	AdditiveExpression	next -> pt . y - y0		5761481	1		-			
ANR	5761686	MemberAccess	next -> pt . y		5761481	0					
ANR	5761687	PtrMemberAccess	next -> pt		5761481	0					
ANR	5761688	Identifier	next		5761481	0					
ANR	5761689	Identifier	pt		5761481	1					
ANR	5761690	Identifier	y		5761481	1					
ANR	5761691	Identifier	y0		5761481	1					
ANR	5761692	AdditiveExpression	C * C + D * D		5761481	1		+			
ANR	5761693	MultiplicativeExpression	C * C		5761481	0		*			
ANR	5761694	Identifier	C		5761481	0					
ANR	5761695	Identifier	C		5761481	1					
ANR	5761696	MultiplicativeExpression	D * D		5761481	1		*			
ANR	5761697	Identifier	D		5761481	0					
ANR	5761698	Identifier	D		5761481	1					
ANR	5761699	ExpressionStatement	"if_debug3 ( '2' , ""[2]adjusting: C = %g, D = %g, T = %g\\n"" , C , D , T )"	349:8:14399:14482	5761481	2	True				
ANR	5761700	CallExpression	"if_debug3 ( '2' , ""[2]adjusting: C = %g, D = %g, T = %g\\n"" , C , D , T )"		5761481	0					
ANR	5761701	Callee	if_debug3		5761481	0					
ANR	5761702	Identifier	if_debug3		5761481	0					
ANR	5761703	ArgumentList	'2'		5761481	1					
ANR	5761704	Argument	'2'		5761481	0					
ANR	5761705	PrimaryExpression	'2'		5761481	0					
ANR	5761706	Argument	"""[2]adjusting: C = %g, D = %g, T = %g\\n"""		5761481	1					
ANR	5761707	PrimaryExpression	"""[2]adjusting: C = %g, D = %g, T = %g\\n"""		5761481	0					
ANR	5761708	Argument	C		5761481	2					
ANR	5761709	Identifier	C		5761481	0					
ANR	5761710	Argument	D		5761481	3					
ANR	5761711	Identifier	D		5761481	0					
ANR	5761712	Argument	T		5761481	4					
ANR	5761713	Identifier	T		5761481	0					
ANR	5761714	IfStatement	if ( T > 0 )		5761481	3					
ANR	5761715	Condition	T > 0	351:12:14496:14500	5761481	0	True				
ANR	5761716	RelationalExpression	T > 0		5761481	0		>			
ANR	5761717	Identifier	T		5761481	0					
ANR	5761718	PrimaryExpression	0		5761481	1					
ANR	5761719	CompoundStatement		36:19:1209:1209	5761481	1					
ANR	5761720	IfStatement	if ( T > 1 )		5761481	0					
ANR	5761721	Condition	T > 1	352:16:14521:14525	5761481	0	True				
ANR	5761722	RelationalExpression	T > 1		5761481	0		>			
ANR	5761723	Identifier	T		5761481	0					
ANR	5761724	PrimaryExpression	1		5761481	1					
ANR	5761725	CompoundStatement		37:23:1234:1234	5761481	1					
ANR	5761726	ExpressionStatement	T = 1	354:16:14609:14614	5761481	0	True				
ANR	5761727	AssignmentExpression	T = 1		5761481	0		=			
ANR	5761728	Identifier	T		5761481	0					
ANR	5761729	PrimaryExpression	1		5761481	1					
ANR	5761730	ExpressionStatement	"pseg -> pt . x = arith_rshift ( ( fixed ) ( C * T ) , 2 ) + x0"	356:12:14642:14692	5761481	1	True				
ANR	5761731	AssignmentExpression	"pseg -> pt . x = arith_rshift ( ( fixed ) ( C * T ) , 2 ) + x0"		5761481	0		=			
ANR	5761732	MemberAccess	pseg -> pt . x		5761481	0					
ANR	5761733	PtrMemberAccess	pseg -> pt		5761481	0					
ANR	5761734	Identifier	pseg		5761481	0					
ANR	5761735	Identifier	pt		5761481	1					
ANR	5761736	Identifier	x		5761481	1					
ANR	5761737	AdditiveExpression	"arith_rshift ( ( fixed ) ( C * T ) , 2 ) + x0"		5761481	1		+			
ANR	5761738	CallExpression	"arith_rshift ( ( fixed ) ( C * T ) , 2 )"		5761481	0					
ANR	5761739	Callee	arith_rshift		5761481	0					
ANR	5761740	Identifier	arith_rshift		5761481	0					
ANR	5761741	ArgumentList	( fixed ) ( C * T )		5761481	1					
ANR	5761742	Argument	( fixed ) ( C * T )		5761481	0					
ANR	5761743	CastExpression	( fixed ) ( C * T )		5761481	0					
ANR	5761744	CastTarget	fixed		5761481	0					
ANR	5761745	MultiplicativeExpression	C * T		5761481	1		*			
ANR	5761746	Identifier	C		5761481	0					
ANR	5761747	Identifier	T		5761481	1					
ANR	5761748	Argument	2		5761481	1					
ANR	5761749	PrimaryExpression	2		5761481	0					
ANR	5761750	Identifier	x0		5761481	1					
ANR	5761751	ExpressionStatement	"pseg -> pt . y = arith_rshift ( ( fixed ) ( D * T ) , 2 ) + y0"	357:12:14706:14756	5761481	2	True				
ANR	5761752	AssignmentExpression	"pseg -> pt . y = arith_rshift ( ( fixed ) ( D * T ) , 2 ) + y0"		5761481	0		=			
ANR	5761753	MemberAccess	pseg -> pt . y		5761481	0					
ANR	5761754	PtrMemberAccess	pseg -> pt		5761481	0					
ANR	5761755	Identifier	pseg		5761481	0					
ANR	5761756	Identifier	pt		5761481	1					
ANR	5761757	Identifier	y		5761481	1					
ANR	5761758	AdditiveExpression	"arith_rshift ( ( fixed ) ( D * T ) , 2 ) + y0"		5761481	1		+			
ANR	5761759	CallExpression	"arith_rshift ( ( fixed ) ( D * T ) , 2 )"		5761481	0					
ANR	5761760	Callee	arith_rshift		5761481	0					
ANR	5761761	Identifier	arith_rshift		5761481	0					
ANR	5761762	ArgumentList	( fixed ) ( D * T )		5761481	1					
ANR	5761763	Argument	( fixed ) ( D * T )		5761481	0					
ANR	5761764	CastExpression	( fixed ) ( D * T )		5761481	0					
ANR	5761765	CastTarget	fixed		5761481	0					
ANR	5761766	MultiplicativeExpression	D * T		5761481	1		*			
ANR	5761767	Identifier	D		5761481	0					
ANR	5761768	Identifier	T		5761481	1					
ANR	5761769	Argument	2		5761481	1					
ANR	5761770	PrimaryExpression	2		5761481	0					
ANR	5761771	Identifier	y0		5761481	1					
ANR	5761772	ReturnType	static void		5761481	1					
ANR	5761773	Identifier	adjust_point_to_tangent		5761481	2					
ANR	5761774	ParameterList	"segment * pseg , const segment * next , const gs_fixed_point * p1"		5761481	3					
ANR	5761775	Parameter	segment * pseg	314:24:13204:13217	5761481	0	True				
ANR	5761776	ParameterType	segment *		5761481	0					
ANR	5761777	Identifier	pseg		5761481	1					
ANR	5761778	Parameter	const segment * next	314:40:13220:13239	5761481	1	True				
ANR	5761779	ParameterType	const segment *		5761481	0					
ANR	5761780	Identifier	next		5761481	1					
ANR	5761781	Parameter	const gs_fixed_point * p1	315:24:13266:13290	5761481	2	True				
ANR	5761782	ParameterType	const gs_fixed_point *		5761481	0					
ANR	5761783	Identifier	p1		5761481	1					
ANR	5761784	CFGEntryNode	ENTRY		5761481		True				
ANR	5761785	CFGExitNode	EXIT		5761481		True				
ANR	5761786	Symbol	next		5761481						
ANR	5761787	Symbol	p1		5761481						
ANR	5761788	Symbol	C		5761481						
ANR	5761789	Symbol	D		5761481						
ANR	5761790	Symbol	next -> pt		5761481						
ANR	5761791	Symbol	* next		5761481						
ANR	5761792	Symbol	DT		5761481						
ANR	5761793	Symbol	pseg		5761481						
ANR	5761794	Symbol	pseg -> pt		5761481						
ANR	5761795	Symbol	T		5761481						
ANR	5761796	Symbol	y0		5761481						
ANR	5761797	Symbol	fC		5761481						
ANR	5761798	Symbol	fD		5761481						
ANR	5761799	Symbol	arith_rshift		5761481						
ANR	5761800	Symbol	* p1		5761481						
ANR	5761801	Symbol	fixed2float		5761481						
ANR	5761802	Symbol	p1 -> y		5761481						
ANR	5761803	Symbol	p1 -> x		5761481						
ANR	5761804	Symbol	pseg -> pt . x		5761481						
ANR	5761805	Symbol	pseg -> pt . y		5761481						
ANR	5761806	Symbol	CT		5761481						
ANR	5761807	Symbol	next -> pt . y		5761481						
ANR	5761808	Symbol	next -> pt . x		5761481						
ANR	5761809	Symbol	* pseg		5761481						
ANR	5761810	Symbol	x0		5761481						
ANR	5761811	Function	gx_path__check_curves	365:0:14894:17231							
ANR	5761812	FunctionDef	"gx_path__check_curves (const gx_path * ppath , gx_path_copy_options options , fixed fixed_flat)"		5761811	0					
ANR	5761813	CompoundStatement		367:0:14992:17231	5761811	0					
ANR	5761814	IdentifierDeclStatement	const segment * pseg = ( const segment * ) ( ppath -> first_subpath ) ;	368:4:14998:15059	5761811	0	True				
ANR	5761815	IdentifierDecl	* pseg = ( const segment * ) ( ppath -> first_subpath )		5761811	0					
ANR	5761816	IdentifierDeclType	const segment *		5761811	0					
ANR	5761817	Identifier	pseg		5761811	1					
ANR	5761818	AssignmentExpression	* pseg = ( const segment * ) ( ppath -> first_subpath )		5761811	2		=			
ANR	5761819	Identifier	pseg		5761811	0					
ANR	5761820	CastExpression	( const segment * ) ( ppath -> first_subpath )		5761811	1					
ANR	5761821	CastTarget	const segment *		5761811	0					
ANR	5761822	PtrMemberAccess	ppath -> first_subpath		5761811	1					
ANR	5761823	Identifier	ppath		5761811	0					
ANR	5761824	Identifier	first_subpath		5761811	1					
ANR	5761825	IdentifierDeclStatement	gs_fixed_point pt0 ;	369:4:15065:15083	5761811	1	True				
ANR	5761826	IdentifierDecl	pt0		5761811	0					
ANR	5761827	IdentifierDeclType	gs_fixed_point		5761811	0					
ANR	5761828	Identifier	pt0		5761811	1					
ANR	5761829	ExpressionStatement	pt0 . x = pt0 . y = 0	371:4:15090:15107	5761811	2	True				
ANR	5761830	AssignmentExpression	pt0 . x = pt0 . y = 0		5761811	0		=			
ANR	5761831	MemberAccess	pt0 . x		5761811	0					
ANR	5761832	Identifier	pt0		5761811	0					
ANR	5761833	Identifier	x		5761811	1					
ANR	5761834	AssignmentExpression	pt0 . y = 0		5761811	1		=			
ANR	5761835	MemberAccess	pt0 . y		5761811	0					
ANR	5761836	Identifier	pt0		5761811	0					
ANR	5761837	Identifier	y		5761811	1					
ANR	5761838	PrimaryExpression	0		5761811	1					
ANR	5761839	WhileStatement	while ( pseg )		5761811	3					
ANR	5761840	Condition	pseg	372:11:15145:15148	5761811	0	True				
ANR	5761841	Identifier	pseg		5761811	0					
ANR	5761842	CompoundStatement		6:17:158:158	5761811	1					
ANR	5761843	SwitchStatement	switch ( pseg -> type )		5761811	0					
ANR	5761844	Condition	pseg -> type	373:16:15169:15178	5761811	0	True				
ANR	5761845	PtrMemberAccess	pseg -> type		5761811	0					
ANR	5761846	Identifier	pseg		5761811	0					
ANR	5761847	Identifier	type		5761811	1					
ANR	5761848	CompoundStatement		7:28:188:188	5761811	1					
ANR	5761849	Label	case s_start :	374:12:15195:15207	5761811	0	True				
ANR	5761850	Identifier	s_start		5761811	0					
ANR	5761851	CompoundStatement		10:20:254:297	5761811	1					
ANR	5761852	IdentifierDeclStatement	const subpath * psub = ( const subpath * ) pseg ;	376:20:15247:15290	5761811	0	True				
ANR	5761853	IdentifierDecl	* psub = ( const subpath * ) pseg		5761811	0					
ANR	5761854	IdentifierDeclType	const subpath *		5761811	0					
ANR	5761855	Identifier	psub		5761811	1					
ANR	5761856	AssignmentExpression	* psub = ( const subpath * ) pseg		5761811	2		=			
ANR	5761857	Identifier	psub		5761811	0					
ANR	5761858	CastExpression	( const subpath * ) pseg		5761811	1					
ANR	5761859	CastTarget	const subpath *		5761811	0					
ANR	5761860	Identifier	pseg		5761811	1					
ANR	5761861	IfStatement	if ( ! psub -> curve_count )		5761811	1					
ANR	5761862	Condition	! psub -> curve_count	379:24:15373:15390	5761811	0	True				
ANR	5761863	UnaryOperationExpression	! psub -> curve_count		5761811	0					
ANR	5761864	UnaryOperator	!		5761811	0					
ANR	5761865	PtrMemberAccess	psub -> curve_count		5761811	1					
ANR	5761866	Identifier	psub		5761811	0					
ANR	5761867	Identifier	curve_count		5761811	1					
ANR	5761868	ExpressionStatement	pseg = psub -> last	380:24:15417:15434	5761811	1	True				
ANR	5761869	AssignmentExpression	pseg = psub -> last		5761811	0		=			
ANR	5761870	Identifier	pseg		5761811	0					
ANR	5761871	PtrMemberAccess	psub -> last		5761811	1					
ANR	5761872	Identifier	psub		5761811	0					
ANR	5761873	Identifier	last		5761811	1					
ANR	5761874	BreakStatement	break ;	382:16:15470:15475	5761811	2	True				
ANR	5761875	Label	case s_line :	383:12:15489:15500	5761811	3	True				
ANR	5761876	Identifier	s_line		5761811	0					
ANR	5761877	Label	case s_gap :	384:12:15514:15524	5761811	4	True				
ANR	5761878	Identifier	s_gap		5761811	0					
ANR	5761879	IfStatement	"if ( gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y ) )"		5761811	5					
ANR	5761880	Condition	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"	385:20:15546:15663	5761811	0	True				
ANR	5761881	OrExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"		5761811	0		||			
ANR	5761882	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x )"		5761811	0					
ANR	5761883	Callee	gx_check_fixed_diff_overflow		5761811	0					
ANR	5761884	Identifier	gx_check_fixed_diff_overflow		5761811	0					
ANR	5761885	ArgumentList	pseg -> pt . x		5761811	1					
ANR	5761886	Argument	pseg -> pt . x		5761811	0					
ANR	5761887	MemberAccess	pseg -> pt . x		5761811	0					
ANR	5761888	PtrMemberAccess	pseg -> pt		5761811	0					
ANR	5761889	Identifier	pseg		5761811	0					
ANR	5761890	Identifier	pt		5761811	1					
ANR	5761891	Identifier	x		5761811	1					
ANR	5761892	Argument	pt0 . x		5761811	1					
ANR	5761893	MemberAccess	pt0 . x		5761811	0					
ANR	5761894	Identifier	pt0		5761811	0					
ANR	5761895	Identifier	x		5761811	1					
ANR	5761896	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"		5761811	1					
ANR	5761897	Callee	gx_check_fixed_diff_overflow		5761811	0					
ANR	5761898	Identifier	gx_check_fixed_diff_overflow		5761811	0					
ANR	5761899	ArgumentList	pseg -> pt . y		5761811	1					
ANR	5761900	Argument	pseg -> pt . y		5761811	0					
ANR	5761901	MemberAccess	pseg -> pt . y		5761811	0					
ANR	5761902	PtrMemberAccess	pseg -> pt		5761811	0					
ANR	5761903	Identifier	pseg		5761811	0					
ANR	5761904	Identifier	pt		5761811	1					
ANR	5761905	Identifier	y		5761811	1					
ANR	5761906	Argument	pt0 . y		5761811	1					
ANR	5761907	MemberAccess	pt0 . y		5761811	0					
ANR	5761908	Identifier	pt0		5761811	0					
ANR	5761909	Identifier	y		5761811	1					
ANR	5761910	ReturnStatement	return false ;	387:20:15686:15698	5761811	1	True				
ANR	5761911	Identifier	false		5761811	0					
ANR	5761912	BreakStatement	break ;	388:16:15716:15721	5761811	6	True				
ANR	5761913	Label	case s_curve :	389:12:15735:15747	5761811	7	True				
ANR	5761914	Identifier	s_curve		5761811	0					
ANR	5761915	CompoundStatement		25:20:794:847	5761811	8					
ANR	5761916	IdentifierDeclStatement	const curve_segment * pc = ( const curve_segment * ) pseg ;	391:20:15787:15840	5761811	0	True				
ANR	5761917	IdentifierDecl	* pc = ( const curve_segment * ) pseg		5761811	0					
ANR	5761918	IdentifierDeclType	const curve_segment *		5761811	0					
ANR	5761919	Identifier	pc		5761811	1					
ANR	5761920	AssignmentExpression	* pc = ( const curve_segment * ) pseg		5761811	2		=			
ANR	5761921	Identifier	pc		5761811	0					
ANR	5761922	CastExpression	( const curve_segment * ) pseg		5761811	1					
ANR	5761923	CastTarget	const curve_segment *		5761811	0					
ANR	5761924	Identifier	pseg		5761811	1					
ANR	5761925	IfStatement	if ( options & pco_monotonize )		5761811	1					
ANR	5761926	Condition	options & pco_monotonize	393:24:15867:15890	5761811	0	True				
ANR	5761927	BitAndExpression	options & pco_monotonize		5761811	0		&			
ANR	5761928	Identifier	options		5761811	0					
ANR	5761929	Identifier	pco_monotonize		5761811	1					
ANR	5761930	CompoundStatement		29:24:963:1084	5761811	1					
ANR	5761931	IdentifierDeclStatement	double t [ 2 ] ;	394:24:15919:15930	5761811	0	True				
ANR	5761932	IdentifierDecl	t [ 2 ]		5761811	0					
ANR	5761933	IdentifierDeclType	double [ 2 ]		5761811	0					
ANR	5761934	Identifier	t		5761811	1					
ANR	5761935	PrimaryExpression	2		5761811	2					
ANR	5761936	IdentifierDeclStatement	"int nz = gx_curve_monotonic_points ( pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , t ) ;"	395:24:15956:16077	5761811	1	True				
ANR	5761937	IdentifierDecl	"nz = gx_curve_monotonic_points ( pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , t )"		5761811	0					
ANR	5761938	IdentifierDeclType	int		5761811	0					
ANR	5761939	Identifier	nz		5761811	1					
ANR	5761940	AssignmentExpression	"nz = gx_curve_monotonic_points ( pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , t )"		5761811	2		=			
ANR	5761941	Identifier	nz		5761811	0					
ANR	5761942	CallExpression	"gx_curve_monotonic_points ( pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , t )"		5761811	1					
ANR	5761943	Callee	gx_curve_monotonic_points		5761811	0					
ANR	5761944	Identifier	gx_curve_monotonic_points		5761811	0					
ANR	5761945	ArgumentList	pt0 . y		5761811	1					
ANR	5761946	Argument	pt0 . y		5761811	0					
ANR	5761947	MemberAccess	pt0 . y		5761811	0					
ANR	5761948	Identifier	pt0		5761811	0					
ANR	5761949	Identifier	y		5761811	1					
ANR	5761950	Argument	pc -> p1 . y		5761811	1					
ANR	5761951	MemberAccess	pc -> p1 . y		5761811	0					
ANR	5761952	PtrMemberAccess	pc -> p1		5761811	0					
ANR	5761953	Identifier	pc		5761811	0					
ANR	5761954	Identifier	p1		5761811	1					
ANR	5761955	Identifier	y		5761811	1					
ANR	5761956	Argument	pc -> p2 . y		5761811	2					
ANR	5761957	MemberAccess	pc -> p2 . y		5761811	0					
ANR	5761958	PtrMemberAccess	pc -> p2		5761811	0					
ANR	5761959	Identifier	pc		5761811	0					
ANR	5761960	Identifier	p2		5761811	1					
ANR	5761961	Identifier	y		5761811	1					
ANR	5761962	Argument	pc -> pt . y		5761811	3					
ANR	5761963	MemberAccess	pc -> pt . y		5761811	0					
ANR	5761964	PtrMemberAccess	pc -> pt		5761811	0					
ANR	5761965	Identifier	pc		5761811	0					
ANR	5761966	Identifier	pt		5761811	1					
ANR	5761967	Identifier	y		5761811	1					
ANR	5761968	Argument	t		5761811	4					
ANR	5761969	Identifier	t		5761811	0					
ANR	5761970	IfStatement	if ( nz != 0 )		5761811	2					
ANR	5761971	Condition	nz != 0	398:28:16108:16114	5761811	0	True				
ANR	5761972	EqualityExpression	nz != 0		5761811	0		!=			
ANR	5761973	Identifier	nz		5761811	0					
ANR	5761974	PrimaryExpression	0		5761811	1					
ANR	5761975	ReturnStatement	return false ;	399:28:16145:16157	5761811	1	True				
ANR	5761976	Identifier	false		5761811	0					
ANR	5761977	ExpressionStatement	"nz = gx_curve_monotonic_points ( pt0 . x , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , t )"	400:24:16183:16300	5761811	3	True				
ANR	5761978	AssignmentExpression	"nz = gx_curve_monotonic_points ( pt0 . x , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , t )"		5761811	0		=			
ANR	5761979	Identifier	nz		5761811	0					
ANR	5761980	CallExpression	"gx_curve_monotonic_points ( pt0 . x , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , t )"		5761811	1					
ANR	5761981	Callee	gx_curve_monotonic_points		5761811	0					
ANR	5761982	Identifier	gx_curve_monotonic_points		5761811	0					
ANR	5761983	ArgumentList	pt0 . x		5761811	1					
ANR	5761984	Argument	pt0 . x		5761811	0					
ANR	5761985	MemberAccess	pt0 . x		5761811	0					
ANR	5761986	Identifier	pt0		5761811	0					
ANR	5761987	Identifier	x		5761811	1					
ANR	5761988	Argument	pc -> p1 . x		5761811	1					
ANR	5761989	MemberAccess	pc -> p1 . x		5761811	0					
ANR	5761990	PtrMemberAccess	pc -> p1		5761811	0					
ANR	5761991	Identifier	pc		5761811	0					
ANR	5761992	Identifier	p1		5761811	1					
ANR	5761993	Identifier	x		5761811	1					
ANR	5761994	Argument	pc -> p2 . x		5761811	2					
ANR	5761995	MemberAccess	pc -> p2 . x		5761811	0					
ANR	5761996	PtrMemberAccess	pc -> p2		5761811	0					
ANR	5761997	Identifier	pc		5761811	0					
ANR	5761998	Identifier	p2		5761811	1					
ANR	5761999	Identifier	x		5761811	1					
ANR	5762000	Argument	pc -> pt . x		5761811	3					
ANR	5762001	MemberAccess	pc -> pt . x		5761811	0					
ANR	5762002	PtrMemberAccess	pc -> pt		5761811	0					
ANR	5762003	Identifier	pc		5761811	0					
ANR	5762004	Identifier	pt		5761811	1					
ANR	5762005	Identifier	x		5761811	1					
ANR	5762006	Argument	t		5761811	4					
ANR	5762007	Identifier	t		5761811	0					
ANR	5762008	IfStatement	if ( nz != 0 )		5761811	4					
ANR	5762009	Condition	nz != 0	402:28:16330:16336	5761811	0	True				
ANR	5762010	EqualityExpression	nz != 0		5761811	0		!=			
ANR	5762011	Identifier	nz		5761811	0					
ANR	5762012	PrimaryExpression	0		5761811	1					
ANR	5762013	ReturnStatement	return false ;	403:28:16367:16379	5761811	1	True				
ANR	5762014	Identifier	false		5761811	0					
ANR	5762015	IfStatement	if ( options & pco_small_curves )		5761811	2					
ANR	5762016	Condition	options & pco_small_curves	405:24:16427:16452	5761811	0	True				
ANR	5762017	BitAndExpression	options & pco_small_curves		5761811	0		&			
ANR	5762018	Identifier	options		5761811	0					
ANR	5762019	Identifier	pco_small_curves		5761811	1					
ANR	5762020	CompoundStatement		41:24:1542:1601	5761811	1					
ANR	5762021	IdentifierDeclStatement	"fixed ax , bx , cx , ay , by , cy ;"	406:24:16481:16509	5761811	0	True				
ANR	5762022	IdentifierDecl	ax		5761811	0					
ANR	5762023	IdentifierDeclType	fixed		5761811	0					
ANR	5762024	Identifier	ax		5761811	1					
ANR	5762025	IdentifierDecl	bx		5761811	1					
ANR	5762026	IdentifierDeclType	fixed		5761811	0					
ANR	5762027	Identifier	bx		5761811	1					
ANR	5762028	IdentifierDecl	cx		5761811	2					
ANR	5762029	IdentifierDeclType	fixed		5761811	0					
ANR	5762030	Identifier	cx		5761811	1					
ANR	5762031	IdentifierDecl	ay		5761811	3					
ANR	5762032	IdentifierDeclType	fixed		5761811	0					
ANR	5762033	Identifier	ay		5761811	1					
ANR	5762034	IdentifierDecl	by		5761811	4					
ANR	5762035	IdentifierDeclType	fixed		5761811	0					
ANR	5762036	Identifier	by		5761811	1					
ANR	5762037	IdentifierDecl	cy		5761811	5					
ANR	5762038	IdentifierDeclType	fixed		5761811	0					
ANR	5762039	Identifier	cy		5761811	1					
ANR	5762040	IdentifierDeclStatement	"int k = gx_curve_log2_samples ( pt0 . x , pt0 . y , pc , fixed_flat ) ;"	407:24:16535:16594	5761811	1	True				
ANR	5762041	IdentifierDecl	"k = gx_curve_log2_samples ( pt0 . x , pt0 . y , pc , fixed_flat )"		5761811	0					
ANR	5762042	IdentifierDeclType	int		5761811	0					
ANR	5762043	Identifier	k		5761811	1					
ANR	5762044	AssignmentExpression	"k = gx_curve_log2_samples ( pt0 . x , pt0 . y , pc , fixed_flat )"		5761811	2		=			
ANR	5762045	Identifier	k		5761811	0					
ANR	5762046	CallExpression	"gx_curve_log2_samples ( pt0 . x , pt0 . y , pc , fixed_flat )"		5761811	1					
ANR	5762047	Callee	gx_curve_log2_samples		5761811	0					
ANR	5762048	Identifier	gx_curve_log2_samples		5761811	0					
ANR	5762049	ArgumentList	pt0 . x		5761811	1					
ANR	5762050	Argument	pt0 . x		5761811	0					
ANR	5762051	MemberAccess	pt0 . x		5761811	0					
ANR	5762052	Identifier	pt0		5761811	0					
ANR	5762053	Identifier	x		5761811	1					
ANR	5762054	Argument	pt0 . y		5761811	1					
ANR	5762055	MemberAccess	pt0 . y		5761811	0					
ANR	5762056	Identifier	pt0		5761811	0					
ANR	5762057	Identifier	y		5761811	1					
ANR	5762058	Argument	pc		5761811	2					
ANR	5762059	Identifier	pc		5761811	0					
ANR	5762060	Argument	fixed_flat		5761811	3					
ANR	5762061	Identifier	fixed_flat		5761811	0					
ANR	5762062	IfStatement	"if ( ! curve_coeffs_ranged ( pt0 . x , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , & ax , & bx , & cx , & ay , & by , & cy , k ) )"		5761811	2					
ANR	5762063	Condition	"! curve_coeffs_ranged ( pt0 . x , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , & ax , & bx , & cx , & ay , & by , & cy , k )"	409:27:16624:16814	5761811	0	True				
ANR	5762064	UnaryOperationExpression	"! curve_coeffs_ranged ( pt0 . x , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , & ax , & bx , & cx , & ay , & by , & cy , k )"		5761811	0					
ANR	5762065	UnaryOperator	!		5761811	0					
ANR	5762066	CallExpression	"curve_coeffs_ranged ( pt0 . x , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , & ax , & bx , & cx , & ay , & by , & cy , k )"		5761811	1					
ANR	5762067	Callee	curve_coeffs_ranged		5761811	0					
ANR	5762068	Identifier	curve_coeffs_ranged		5761811	0					
ANR	5762069	ArgumentList	pt0 . x		5761811	1					
ANR	5762070	Argument	pt0 . x		5761811	0					
ANR	5762071	MemberAccess	pt0 . x		5761811	0					
ANR	5762072	Identifier	pt0		5761811	0					
ANR	5762073	Identifier	x		5761811	1					
ANR	5762074	Argument	pc -> p1 . x		5761811	1					
ANR	5762075	MemberAccess	pc -> p1 . x		5761811	0					
ANR	5762076	PtrMemberAccess	pc -> p1		5761811	0					
ANR	5762077	Identifier	pc		5761811	0					
ANR	5762078	Identifier	p1		5761811	1					
ANR	5762079	Identifier	x		5761811	1					
ANR	5762080	Argument	pc -> p2 . x		5761811	2					
ANR	5762081	MemberAccess	pc -> p2 . x		5761811	0					
ANR	5762082	PtrMemberAccess	pc -> p2		5761811	0					
ANR	5762083	Identifier	pc		5761811	0					
ANR	5762084	Identifier	p2		5761811	1					
ANR	5762085	Identifier	x		5761811	1					
ANR	5762086	Argument	pc -> pt . x		5761811	3					
ANR	5762087	MemberAccess	pc -> pt . x		5761811	0					
ANR	5762088	PtrMemberAccess	pc -> pt		5761811	0					
ANR	5762089	Identifier	pc		5761811	0					
ANR	5762090	Identifier	pt		5761811	1					
ANR	5762091	Identifier	x		5761811	1					
ANR	5762092	Argument	pt0 . y		5761811	4					
ANR	5762093	MemberAccess	pt0 . y		5761811	0					
ANR	5762094	Identifier	pt0		5761811	0					
ANR	5762095	Identifier	y		5761811	1					
ANR	5762096	Argument	pc -> p1 . y		5761811	5					
ANR	5762097	MemberAccess	pc -> p1 . y		5761811	0					
ANR	5762098	PtrMemberAccess	pc -> p1		5761811	0					
ANR	5762099	Identifier	pc		5761811	0					
ANR	5762100	Identifier	p1		5761811	1					
ANR	5762101	Identifier	y		5761811	1					
ANR	5762102	Argument	pc -> p2 . y		5761811	6					
ANR	5762103	MemberAccess	pc -> p2 . y		5761811	0					
ANR	5762104	PtrMemberAccess	pc -> p2		5761811	0					
ANR	5762105	Identifier	pc		5761811	0					
ANR	5762106	Identifier	p2		5761811	1					
ANR	5762107	Identifier	y		5761811	1					
ANR	5762108	Argument	pc -> pt . y		5761811	7					
ANR	5762109	MemberAccess	pc -> pt . y		5761811	0					
ANR	5762110	PtrMemberAccess	pc -> pt		5761811	0					
ANR	5762111	Identifier	pc		5761811	0					
ANR	5762112	Identifier	pt		5761811	1					
ANR	5762113	Identifier	y		5761811	1					
ANR	5762114	Argument	& ax		5761811	8					
ANR	5762115	UnaryOperationExpression	& ax		5761811	0					
ANR	5762116	UnaryOperator	&		5761811	0					
ANR	5762117	Identifier	ax		5761811	1					
ANR	5762118	Argument	& bx		5761811	9					
ANR	5762119	UnaryOperationExpression	& bx		5761811	0					
ANR	5762120	UnaryOperator	&		5761811	0					
ANR	5762121	Identifier	bx		5761811	1					
ANR	5762122	Argument	& cx		5761811	10					
ANR	5762123	UnaryOperationExpression	& cx		5761811	0					
ANR	5762124	UnaryOperator	&		5761811	0					
ANR	5762125	Identifier	cx		5761811	1					
ANR	5762126	Argument	& ay		5761811	11					
ANR	5762127	UnaryOperationExpression	& ay		5761811	0					
ANR	5762128	UnaryOperator	&		5761811	0					
ANR	5762129	Identifier	ay		5761811	1					
ANR	5762130	Argument	& by		5761811	12					
ANR	5762131	UnaryOperationExpression	& by		5761811	0					
ANR	5762132	UnaryOperator	&		5761811	0					
ANR	5762133	Identifier	by		5761811	1					
ANR	5762134	Argument	& cy		5761811	13					
ANR	5762135	UnaryOperationExpression	& cy		5761811	0					
ANR	5762136	UnaryOperator	&		5761811	0					
ANR	5762137	Identifier	cy		5761811	1					
ANR	5762138	Argument	k		5761811	14					
ANR	5762139	Identifier	k		5761811	0					
ANR	5762140	ReturnStatement	return false ;	412:28:16845:16857	5761811	1	True				
ANR	5762141	Identifier	false		5761811	0					
ANR	5762142	IfStatement	"if ( gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y ) )"		5761811	3					
ANR	5762143	Condition	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"	413:24:16883:17004	5761811	0	True				
ANR	5762144	OrExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"		5761811	0		||			
ANR	5762145	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x )"		5761811	0					
ANR	5762146	Callee	gx_check_fixed_diff_overflow		5761811	0					
ANR	5762147	Identifier	gx_check_fixed_diff_overflow		5761811	0					
ANR	5762148	ArgumentList	pseg -> pt . x		5761811	1					
ANR	5762149	Argument	pseg -> pt . x		5761811	0					
ANR	5762150	MemberAccess	pseg -> pt . x		5761811	0					
ANR	5762151	PtrMemberAccess	pseg -> pt		5761811	0					
ANR	5762152	Identifier	pseg		5761811	0					
ANR	5762153	Identifier	pt		5761811	1					
ANR	5762154	Identifier	x		5761811	1					
ANR	5762155	Argument	pt0 . x		5761811	1					
ANR	5762156	MemberAccess	pt0 . x		5761811	0					
ANR	5762157	Identifier	pt0		5761811	0					
ANR	5762158	Identifier	x		5761811	1					
ANR	5762159	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"		5761811	1					
ANR	5762160	Callee	gx_check_fixed_diff_overflow		5761811	0					
ANR	5762161	Identifier	gx_check_fixed_diff_overflow		5761811	0					
ANR	5762162	ArgumentList	pseg -> pt . y		5761811	1					
ANR	5762163	Argument	pseg -> pt . y		5761811	0					
ANR	5762164	MemberAccess	pseg -> pt . y		5761811	0					
ANR	5762165	PtrMemberAccess	pseg -> pt		5761811	0					
ANR	5762166	Identifier	pseg		5761811	0					
ANR	5762167	Identifier	pt		5761811	1					
ANR	5762168	Identifier	y		5761811	1					
ANR	5762169	Argument	pt0 . y		5761811	1					
ANR	5762170	MemberAccess	pt0 . y		5761811	0					
ANR	5762171	Identifier	pt0		5761811	0					
ANR	5762172	Identifier	y		5761811	1					
ANR	5762173	ReturnStatement	return false ;	415:24:17031:17043	5761811	1	True				
ANR	5762174	Identifier	false		5761811	0					
ANR	5762175	BreakStatement	break ;	418:16:17101:17106	5761811	9	True				
ANR	5762176	Label	default :	419:12:17120:17127	5761811	10	True				
ANR	5762177	Identifier	default		5761811	0					
ANR	5762178	ExpressionStatement		420:16:17145:17145	5761811	11	True				
ANR	5762179	ExpressionStatement	pt0 = pseg -> pt	422:8:17165:17179	5761811	1	True				
ANR	5762180	AssignmentExpression	pt0 = pseg -> pt		5761811	0		=			
ANR	5762181	Identifier	pt0		5761811	0					
ANR	5762182	PtrMemberAccess	pseg -> pt		5761811	1					
ANR	5762183	Identifier	pseg		5761811	0					
ANR	5762184	Identifier	pt		5761811	1					
ANR	5762185	ExpressionStatement	pseg = pseg -> next	423:8:17189:17206	5761811	2	True				
ANR	5762186	AssignmentExpression	pseg = pseg -> next		5761811	0		=			
ANR	5762187	Identifier	pseg		5761811	0					
ANR	5762188	PtrMemberAccess	pseg -> next		5761811	1					
ANR	5762189	Identifier	pseg		5761811	0					
ANR	5762190	Identifier	next		5761811	1					
ANR	5762191	ReturnStatement	return true ;	425:4:17218:17229	5761811	4	True				
ANR	5762192	Identifier	true		5761811	0					
ANR	5762193	ReturnType	bool		5761811	1					
ANR	5762194	Identifier	gx_path__check_curves		5761811	2					
ANR	5762195	ParameterList	"const gx_path * ppath , gx_path_copy_options options , fixed fixed_flat"		5761811	3					
ANR	5762196	Parameter	const gx_path * ppath	366:22:14921:14941	5761811	0	True				
ANR	5762197	ParameterType	const gx_path *		5761811	0					
ANR	5762198	Identifier	ppath		5761811	1					
ANR	5762199	Parameter	gx_path_copy_options options	366:45:14944:14971	5761811	1	True				
ANR	5762200	ParameterType	gx_path_copy_options		5761811	0					
ANR	5762201	Identifier	options		5761811	1					
ANR	5762202	Parameter	fixed fixed_flat	366:75:14974:14989	5761811	2	True				
ANR	5762203	ParameterType	fixed		5761811	0					
ANR	5762204	Identifier	fixed_flat		5761811	1					
ANR	5762205	CFGEntryNode	ENTRY		5761811		True				
ANR	5762206	CFGExitNode	EXIT		5761811		True				
ANR	5762207	Symbol	& by		5761811						
ANR	5762208	Symbol	gx_curve_monotonic_points		5761811						
ANR	5762209	Symbol	& bx		5761811						
ANR	5762210	Symbol	pc -> p1 . y		5761811						
ANR	5762211	Symbol	pc -> p1 . x		5761811						
ANR	5762212	Symbol	pc -> pt . x		5761811						
ANR	5762213	Symbol	pc -> pt . y		5761811						
ANR	5762214	Symbol	pseg -> next		5761811						
ANR	5762215	Symbol	pc -> p2 . x		5761811						
ANR	5762216	Symbol	pc -> p2 . y		5761811						
ANR	5762217	Symbol	options		5761811						
ANR	5762218	Symbol	pc -> p2		5761811						
ANR	5762219	Symbol	pc -> p1		5761811						
ANR	5762220	Symbol	* ppath		5761811						
ANR	5762221	Symbol	& cy		5761811						
ANR	5762222	Symbol	fixed_flat		5761811						
ANR	5762223	Symbol	* psub		5761811						
ANR	5762224	Symbol	pseg -> pt . x		5761811						
ANR	5762225	Symbol	pseg -> pt . y		5761811						
ANR	5762226	Symbol	pt0		5761811						
ANR	5762227	Symbol	gx_curve_log2_samples		5761811						
ANR	5762228	Symbol	ax		5761811						
ANR	5762229	Symbol	* pseg		5761811						
ANR	5762230	Symbol	ay		5761811						
ANR	5762231	Symbol	true		5761811						
ANR	5762232	Symbol	* pc		5761811						
ANR	5762233	Symbol	& cx		5761811						
ANR	5762234	Symbol	psub -> last		5761811						
ANR	5762235	Symbol	pco_small_curves		5761811						
ANR	5762236	Symbol	ppath		5761811						
ANR	5762237	Symbol	ppath -> first_subpath		5761811						
ANR	5762238	Symbol	pt0 . y		5761811						
ANR	5762239	Symbol	nz		5761811						
ANR	5762240	Symbol	pt0 . x		5761811						
ANR	5762241	Symbol	gx_check_fixed_diff_overflow		5761811						
ANR	5762242	Symbol	pseg		5761811						
ANR	5762243	Symbol	pseg -> pt		5761811						
ANR	5762244	Symbol	curve_coeffs_ranged		5761811						
ANR	5762245	Symbol	pseg -> type		5761811						
ANR	5762246	Symbol	bx		5761811						
ANR	5762247	Symbol	by		5761811						
ANR	5762248	Symbol	pc -> pt		5761811						
ANR	5762249	Symbol	& ax		5761811						
ANR	5762250	Symbol	& ay		5761811						
ANR	5762251	Symbol	psub		5761811						
ANR	5762252	Symbol	psub -> curve_count		5761811						
ANR	5762253	Symbol	pco_monotonize		5761811						
ANR	5762254	Symbol	false		5761811						
ANR	5762255	Symbol	k		5761811						
ANR	5762256	Symbol	pc		5761811						
ANR	5762257	Symbol	t		5761811						
ANR	5762258	Symbol	cx		5761811						
ANR	5762259	Symbol	cy		5761811						
ANR	5762260	Function	gx_path_has_long_segments	435:0:17581:18177							
ANR	5762261	FunctionDef	gx_path_has_long_segments (const gx_path * ppath)		5762260	0					
ANR	5762262	CompoundStatement		437:0:17635:18177	5762260	0					
ANR	5762263	IdentifierDeclStatement	const segment * pseg = ( const segment * ) ( ppath -> first_subpath ) ;	438:4:17641:17702	5762260	0	True				
ANR	5762264	IdentifierDecl	* pseg = ( const segment * ) ( ppath -> first_subpath )		5762260	0					
ANR	5762265	IdentifierDeclType	const segment *		5762260	0					
ANR	5762266	Identifier	pseg		5762260	1					
ANR	5762267	AssignmentExpression	* pseg = ( const segment * ) ( ppath -> first_subpath )		5762260	2		=			
ANR	5762268	Identifier	pseg		5762260	0					
ANR	5762269	CastExpression	( const segment * ) ( ppath -> first_subpath )		5762260	1					
ANR	5762270	CastTarget	const segment *		5762260	0					
ANR	5762271	PtrMemberAccess	ppath -> first_subpath		5762260	1					
ANR	5762272	Identifier	ppath		5762260	0					
ANR	5762273	Identifier	first_subpath		5762260	1					
ANR	5762274	IdentifierDeclStatement	gs_fixed_point pt0 ;	439:4:17708:17726	5762260	1	True				
ANR	5762275	IdentifierDecl	pt0		5762260	0					
ANR	5762276	IdentifierDeclType	gs_fixed_point		5762260	0					
ANR	5762277	Identifier	pt0		5762260	1					
ANR	5762278	ExpressionStatement	pt0 . x = pt0 . y = 0	441:4:17733:17750	5762260	2	True				
ANR	5762279	AssignmentExpression	pt0 . x = pt0 . y = 0		5762260	0		=			
ANR	5762280	MemberAccess	pt0 . x		5762260	0					
ANR	5762281	Identifier	pt0		5762260	0					
ANR	5762282	Identifier	x		5762260	1					
ANR	5762283	AssignmentExpression	pt0 . y = 0		5762260	1		=			
ANR	5762284	MemberAccess	pt0 . y		5762260	0					
ANR	5762285	Identifier	pt0		5762260	0					
ANR	5762286	Identifier	y		5762260	1					
ANR	5762287	PrimaryExpression	0		5762260	1					
ANR	5762288	WhileStatement	while ( pseg )		5762260	3					
ANR	5762289	Condition	pseg	442:11:17788:17791	5762260	0	True				
ANR	5762290	Identifier	pseg		5762260	0					
ANR	5762291	CompoundStatement		6:17:158:158	5762260	1					
ANR	5762292	SwitchStatement	switch ( pseg -> type )		5762260	0					
ANR	5762293	Condition	pseg -> type	443:16:17812:17821	5762260	0	True				
ANR	5762294	PtrMemberAccess	pseg -> type		5762260	0					
ANR	5762295	Identifier	pseg		5762260	0					
ANR	5762296	Identifier	type		5762260	1					
ANR	5762297	CompoundStatement		7:28:188:188	5762260	1					
ANR	5762298	Label	case s_start :	444:12:17838:17850	5762260	0	True				
ANR	5762299	Identifier	s_start		5762260	0					
ANR	5762300	BreakStatement	break ;	445:16:17868:17873	5762260	1	True				
ANR	5762301	Label	default :	446:12:17887:17894	5762260	2	True				
ANR	5762302	Identifier	default		5762260	0					
ANR	5762303	IfStatement	"if ( gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y ) )"		5762260	3					
ANR	5762304	Condition	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"	447:20:17916:18033	5762260	0	True				
ANR	5762305	OrExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"		5762260	0		||			
ANR	5762306	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x )"		5762260	0					
ANR	5762307	Callee	gx_check_fixed_diff_overflow		5762260	0					
ANR	5762308	Identifier	gx_check_fixed_diff_overflow		5762260	0					
ANR	5762309	ArgumentList	pseg -> pt . x		5762260	1					
ANR	5762310	Argument	pseg -> pt . x		5762260	0					
ANR	5762311	MemberAccess	pseg -> pt . x		5762260	0					
ANR	5762312	PtrMemberAccess	pseg -> pt		5762260	0					
ANR	5762313	Identifier	pseg		5762260	0					
ANR	5762314	Identifier	pt		5762260	1					
ANR	5762315	Identifier	x		5762260	1					
ANR	5762316	Argument	pt0 . x		5762260	1					
ANR	5762317	MemberAccess	pt0 . x		5762260	0					
ANR	5762318	Identifier	pt0		5762260	0					
ANR	5762319	Identifier	x		5762260	1					
ANR	5762320	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"		5762260	1					
ANR	5762321	Callee	gx_check_fixed_diff_overflow		5762260	0					
ANR	5762322	Identifier	gx_check_fixed_diff_overflow		5762260	0					
ANR	5762323	ArgumentList	pseg -> pt . y		5762260	1					
ANR	5762324	Argument	pseg -> pt . y		5762260	0					
ANR	5762325	MemberAccess	pseg -> pt . y		5762260	0					
ANR	5762326	PtrMemberAccess	pseg -> pt		5762260	0					
ANR	5762327	Identifier	pseg		5762260	0					
ANR	5762328	Identifier	pt		5762260	1					
ANR	5762329	Identifier	y		5762260	1					
ANR	5762330	Argument	pt0 . y		5762260	1					
ANR	5762331	MemberAccess	pt0 . y		5762260	0					
ANR	5762332	Identifier	pt0		5762260	0					
ANR	5762333	Identifier	y		5762260	1					
ANR	5762334	ReturnStatement	return true ;	449:20:18056:18067	5762260	1	True				
ANR	5762335	Identifier	true		5762260	0					
ANR	5762336	BreakStatement	break ;	450:16:18085:18090	5762260	4	True				
ANR	5762337	ExpressionStatement	pt0 = pseg -> pt	452:8:18110:18124	5762260	1	True				
ANR	5762338	AssignmentExpression	pt0 = pseg -> pt		5762260	0		=			
ANR	5762339	Identifier	pt0		5762260	0					
ANR	5762340	PtrMemberAccess	pseg -> pt		5762260	1					
ANR	5762341	Identifier	pseg		5762260	0					
ANR	5762342	Identifier	pt		5762260	1					
ANR	5762343	ExpressionStatement	pseg = pseg -> next	453:8:18134:18151	5762260	2	True				
ANR	5762344	AssignmentExpression	pseg = pseg -> next		5762260	0		=			
ANR	5762345	Identifier	pseg		5762260	0					
ANR	5762346	PtrMemberAccess	pseg -> next		5762260	1					
ANR	5762347	Identifier	pseg		5762260	0					
ANR	5762348	Identifier	next		5762260	1					
ANR	5762349	ReturnStatement	return false ;	455:4:18163:18175	5762260	4	True				
ANR	5762350	Identifier	false		5762260	0					
ANR	5762351	ReturnType	bool		5762260	1					
ANR	5762352	Identifier	gx_path_has_long_segments		5762260	2					
ANR	5762353	ParameterList	const gx_path * ppath		5762260	3					
ANR	5762354	Parameter	const gx_path * ppath	436:26:17612:17632	5762260	0	True				
ANR	5762355	ParameterType	const gx_path *		5762260	0					
ANR	5762356	Identifier	ppath		5762260	1					
ANR	5762357	CFGEntryNode	ENTRY		5762260		True				
ANR	5762358	CFGExitNode	EXIT		5762260		True				
ANR	5762359	Symbol	* ppath		5762260						
ANR	5762360	Symbol	false		5762260						
ANR	5762361	Symbol	pseg -> pt . x		5762260						
ANR	5762362	Symbol	ppath		5762260						
ANR	5762363	Symbol	ppath -> first_subpath		5762260						
ANR	5762364	Symbol	pseg -> pt . y		5762260						
ANR	5762365	Symbol	pt0 . y		5762260						
ANR	5762366	Symbol	pt0		5762260						
ANR	5762367	Symbol	pt0 . x		5762260						
ANR	5762368	Symbol	gx_check_fixed_diff_overflow		5762260						
ANR	5762369	Symbol	pseg -> next		5762260						
ANR	5762370	Symbol	pseg		5762260						
ANR	5762371	Symbol	pseg -> pt		5762260						
ANR	5762372	Symbol	pseg -> type		5762260						
ANR	5762373	Symbol	* pseg		5762260						
ANR	5762374	Symbol	true		5762260						
ANR	5762375	Function	gx_curve_monotonize	460:0:18303:22229							
ANR	5762376	FunctionDef	"gx_curve_monotonize (gx_path * ppath , const curve_segment * pc)"		5762375	0					
ANR	5762377	CompoundStatement		462:0:18370:22229	5762375	0					
ANR	5762378	IdentifierDeclStatement	"fixed x0 = ppath -> position . x , y0 = ppath -> position . y ;"	463:4:18376:18428	5762375	0	True				
ANR	5762379	IdentifierDecl	x0 = ppath -> position . x		5762375	0					
ANR	5762380	IdentifierDeclType	fixed		5762375	0					
ANR	5762381	Identifier	x0		5762375	1					
ANR	5762382	AssignmentExpression	x0 = ppath -> position . x		5762375	2		=			
ANR	5762383	Identifier	x0		5762375	0					
ANR	5762384	MemberAccess	ppath -> position . x		5762375	1					
ANR	5762385	PtrMemberAccess	ppath -> position		5762375	0					
ANR	5762386	Identifier	ppath		5762375	0					
ANR	5762387	Identifier	position		5762375	1					
ANR	5762388	Identifier	x		5762375	1					
ANR	5762389	IdentifierDecl	y0 = ppath -> position . y		5762375	1					
ANR	5762390	IdentifierDeclType	fixed		5762375	0					
ANR	5762391	Identifier	y0		5762375	1					
ANR	5762392	AssignmentExpression	y0 = ppath -> position . y		5762375	2		=			
ANR	5762393	Identifier	y0		5762375	0					
ANR	5762394	MemberAccess	ppath -> position . y		5762375	1					
ANR	5762395	PtrMemberAccess	ppath -> position		5762375	0					
ANR	5762396	Identifier	ppath		5762375	0					
ANR	5762397	Identifier	position		5762375	1					
ANR	5762398	Identifier	y		5762375	1					
ANR	5762399	IdentifierDeclStatement	segment_notes notes = pc -> notes ;	464:4:18434:18465	5762375	1	True				
ANR	5762400	IdentifierDecl	notes = pc -> notes		5762375	0					
ANR	5762401	IdentifierDeclType	segment_notes		5762375	0					
ANR	5762402	Identifier	notes		5762375	1					
ANR	5762403	AssignmentExpression	notes = pc -> notes		5762375	2		=			
ANR	5762404	Identifier	notes		5762375	0					
ANR	5762405	PtrMemberAccess	pc -> notes		5762375	1					
ANR	5762406	Identifier	pc		5762375	0					
ANR	5762407	Identifier	notes		5762375	1					
ANR	5762408	IdentifierDeclStatement	"double t [ 5 ] , tt = 1 , tp ;"	465:4:18471:18494	5762375	2	True				
ANR	5762409	IdentifierDecl	t [ 5 ]		5762375	0					
ANR	5762410	IdentifierDeclType	double [ 5 ]		5762375	0					
ANR	5762411	Identifier	t		5762375	1					
ANR	5762412	PrimaryExpression	5		5762375	2					
ANR	5762413	IdentifierDecl	tt = 1		5762375	1					
ANR	5762414	IdentifierDeclType	double		5762375	0					
ANR	5762415	Identifier	tt		5762375	1					
ANR	5762416	AssignmentExpression	tt = 1		5762375	2		=			
ANR	5762417	Identifier	tt		5762375	0					
ANR	5762418	PrimaryExpression	1		5762375	1					
ANR	5762419	IdentifierDecl	tp		5762375	2					
ANR	5762420	IdentifierDeclType	double		5762375	0					
ANR	5762421	Identifier	tp		5762375	1					
ANR	5762422	IdentifierDeclStatement	int c [ 5 ] ;	466:4:18500:18508	5762375	3	True				
ANR	5762423	IdentifierDecl	c [ 5 ]		5762375	0					
ANR	5762424	IdentifierDeclType	int [ 5 ]		5762375	0					
ANR	5762425	Identifier	c		5762375	1					
ANR	5762426	PrimaryExpression	5		5762375	2					
ANR	5762427	IdentifierDeclStatement	"int n0 , n1 , n , i , j , k = 0 ;"	467:4:18514:18540	5762375	4	True				
ANR	5762428	IdentifierDecl	n0		5762375	0					
ANR	5762429	IdentifierDeclType	int		5762375	0					
ANR	5762430	Identifier	n0		5762375	1					
ANR	5762431	IdentifierDecl	n1		5762375	1					
ANR	5762432	IdentifierDeclType	int		5762375	0					
ANR	5762433	Identifier	n1		5762375	1					
ANR	5762434	IdentifierDecl	n		5762375	2					
ANR	5762435	IdentifierDeclType	int		5762375	0					
ANR	5762436	Identifier	n		5762375	1					
ANR	5762437	IdentifierDecl	i		5762375	3					
ANR	5762438	IdentifierDeclType	int		5762375	0					
ANR	5762439	Identifier	i		5762375	1					
ANR	5762440	IdentifierDecl	j		5762375	4					
ANR	5762441	IdentifierDeclType	int		5762375	0					
ANR	5762442	Identifier	j		5762375	1					
ANR	5762443	IdentifierDecl	k = 0		5762375	5					
ANR	5762444	IdentifierDeclType	int		5762375	0					
ANR	5762445	Identifier	k		5762375	1					
ANR	5762446	AssignmentExpression	k = 0		5762375	2		=			
ANR	5762447	Identifier	k		5762375	0					
ANR	5762448	PrimaryExpression	0		5762375	1					
ANR	5762449	IdentifierDeclStatement	"fixed ax , bx , cx , ay , by , cy , v01 , v12 ;"	468:4:18546:18584	5762375	5	True				
ANR	5762450	IdentifierDecl	ax		5762375	0					
ANR	5762451	IdentifierDeclType	fixed		5762375	0					
ANR	5762452	Identifier	ax		5762375	1					
ANR	5762453	IdentifierDecl	bx		5762375	1					
ANR	5762454	IdentifierDeclType	fixed		5762375	0					
ANR	5762455	Identifier	bx		5762375	1					
ANR	5762456	IdentifierDecl	cx		5762375	2					
ANR	5762457	IdentifierDeclType	fixed		5762375	0					
ANR	5762458	Identifier	cx		5762375	1					
ANR	5762459	IdentifierDecl	ay		5762375	3					
ANR	5762460	IdentifierDeclType	fixed		5762375	0					
ANR	5762461	Identifier	ay		5762375	1					
ANR	5762462	IdentifierDecl	by		5762375	4					
ANR	5762463	IdentifierDeclType	fixed		5762375	0					
ANR	5762464	Identifier	by		5762375	1					
ANR	5762465	IdentifierDecl	cy		5762375	5					
ANR	5762466	IdentifierDeclType	fixed		5762375	0					
ANR	5762467	Identifier	cy		5762375	1					
ANR	5762468	IdentifierDecl	v01		5762375	6					
ANR	5762469	IdentifierDeclType	fixed		5762375	0					
ANR	5762470	Identifier	v01		5762375	1					
ANR	5762471	IdentifierDecl	v12		5762375	7					
ANR	5762472	IdentifierDeclType	fixed		5762375	0					
ANR	5762473	Identifier	v12		5762375	1					
ANR	5762474	IdentifierDeclStatement	"fixed px , py , qx , qy , rx , ry , sx , sy ;"	469:4:18590:18626	5762375	6	True				
ANR	5762475	IdentifierDecl	px		5762375	0					
ANR	5762476	IdentifierDeclType	fixed		5762375	0					
ANR	5762477	Identifier	px		5762375	1					
ANR	5762478	IdentifierDecl	py		5762375	1					
ANR	5762479	IdentifierDeclType	fixed		5762375	0					
ANR	5762480	Identifier	py		5762375	1					
ANR	5762481	IdentifierDecl	qx		5762375	2					
ANR	5762482	IdentifierDeclType	fixed		5762375	0					
ANR	5762483	Identifier	qx		5762375	1					
ANR	5762484	IdentifierDecl	qy		5762375	3					
ANR	5762485	IdentifierDeclType	fixed		5762375	0					
ANR	5762486	Identifier	qy		5762375	1					
ANR	5762487	IdentifierDecl	rx		5762375	4					
ANR	5762488	IdentifierDeclType	fixed		5762375	0					
ANR	5762489	Identifier	rx		5762375	1					
ANR	5762490	IdentifierDecl	ry		5762375	5					
ANR	5762491	IdentifierDeclType	fixed		5762375	0					
ANR	5762492	Identifier	ry		5762375	1					
ANR	5762493	IdentifierDecl	sx		5762375	6					
ANR	5762494	IdentifierDeclType	fixed		5762375	0					
ANR	5762495	Identifier	sx		5762375	1					
ANR	5762496	IdentifierDecl	sy		5762375	7					
ANR	5762497	IdentifierDeclType	fixed		5762375	0					
ANR	5762498	Identifier	sy		5762375	1					
ANR	5762499	IdentifierDeclStatement	const double delta = 0.0000001 ;	470:4:18632:18662	5762375	7	True				
ANR	5762500	IdentifierDecl	delta = 0.0000001		5762375	0					
ANR	5762501	IdentifierDeclType	const double		5762375	0					
ANR	5762502	Identifier	delta		5762375	1					
ANR	5762503	AssignmentExpression	delta = 0.0000001		5762375	2		=			
ANR	5762504	Identifier	delta		5762375	0					
ANR	5762505	PrimaryExpression	0.0000001		5762375	1					
ANR	5762506	ExpressionStatement	"n0 = gx_curve_monotonic_points ( x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , t )"	473:4:18705:18772	5762375	8	True				
ANR	5762507	AssignmentExpression	"n0 = gx_curve_monotonic_points ( x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , t )"		5762375	0		=			
ANR	5762508	Identifier	n0		5762375	0					
ANR	5762509	CallExpression	"gx_curve_monotonic_points ( x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , t )"		5762375	1					
ANR	5762510	Callee	gx_curve_monotonic_points		5762375	0					
ANR	5762511	Identifier	gx_curve_monotonic_points		5762375	0					
ANR	5762512	ArgumentList	x0		5762375	1					
ANR	5762513	Argument	x0		5762375	0					
ANR	5762514	Identifier	x0		5762375	0					
ANR	5762515	Argument	pc -> p1 . x		5762375	1					
ANR	5762516	MemberAccess	pc -> p1 . x		5762375	0					
ANR	5762517	PtrMemberAccess	pc -> p1		5762375	0					
ANR	5762518	Identifier	pc		5762375	0					
ANR	5762519	Identifier	p1		5762375	1					
ANR	5762520	Identifier	x		5762375	1					
ANR	5762521	Argument	pc -> p2 . x		5762375	2					
ANR	5762522	MemberAccess	pc -> p2 . x		5762375	0					
ANR	5762523	PtrMemberAccess	pc -> p2		5762375	0					
ANR	5762524	Identifier	pc		5762375	0					
ANR	5762525	Identifier	p2		5762375	1					
ANR	5762526	Identifier	x		5762375	1					
ANR	5762527	Argument	pc -> pt . x		5762375	3					
ANR	5762528	MemberAccess	pc -> pt . x		5762375	0					
ANR	5762529	PtrMemberAccess	pc -> pt		5762375	0					
ANR	5762530	Identifier	pc		5762375	0					
ANR	5762531	Identifier	pt		5762375	1					
ANR	5762532	Identifier	x		5762375	1					
ANR	5762533	Argument	t		5762375	4					
ANR	5762534	Identifier	t		5762375	0					
ANR	5762535	ExpressionStatement	"n1 = gx_curve_monotonic_points ( y0 , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , t + n0 )"	474:4:18778:18850	5762375	9	True				
ANR	5762536	AssignmentExpression	"n1 = gx_curve_monotonic_points ( y0 , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , t + n0 )"		5762375	0		=			
ANR	5762537	Identifier	n1		5762375	0					
ANR	5762538	CallExpression	"gx_curve_monotonic_points ( y0 , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , t + n0 )"		5762375	1					
ANR	5762539	Callee	gx_curve_monotonic_points		5762375	0					
ANR	5762540	Identifier	gx_curve_monotonic_points		5762375	0					
ANR	5762541	ArgumentList	y0		5762375	1					
ANR	5762542	Argument	y0		5762375	0					
ANR	5762543	Identifier	y0		5762375	0					
ANR	5762544	Argument	pc -> p1 . y		5762375	1					
ANR	5762545	MemberAccess	pc -> p1 . y		5762375	0					
ANR	5762546	PtrMemberAccess	pc -> p1		5762375	0					
ANR	5762547	Identifier	pc		5762375	0					
ANR	5762548	Identifier	p1		5762375	1					
ANR	5762549	Identifier	y		5762375	1					
ANR	5762550	Argument	pc -> p2 . y		5762375	2					
ANR	5762551	MemberAccess	pc -> p2 . y		5762375	0					
ANR	5762552	PtrMemberAccess	pc -> p2		5762375	0					
ANR	5762553	Identifier	pc		5762375	0					
ANR	5762554	Identifier	p2		5762375	1					
ANR	5762555	Identifier	y		5762375	1					
ANR	5762556	Argument	pc -> pt . y		5762375	3					
ANR	5762557	MemberAccess	pc -> pt . y		5762375	0					
ANR	5762558	PtrMemberAccess	pc -> pt		5762375	0					
ANR	5762559	Identifier	pc		5762375	0					
ANR	5762560	Identifier	pt		5762375	1					
ANR	5762561	Identifier	y		5762375	1					
ANR	5762562	Argument	t + n0		5762375	4					
ANR	5762563	AdditiveExpression	t + n0		5762375	0		+			
ANR	5762564	Identifier	t		5762375	0					
ANR	5762565	Identifier	n0		5762375	1					
ANR	5762566	ExpressionStatement	n = n0 + n1	475:4:18856:18867	5762375	10	True				
ANR	5762567	AssignmentExpression	n = n0 + n1		5762375	0		=			
ANR	5762568	Identifier	n		5762375	0					
ANR	5762569	AdditiveExpression	n0 + n1		5762375	1		+			
ANR	5762570	Identifier	n0		5762375	0					
ANR	5762571	Identifier	n1		5762375	1					
ANR	5762572	IfStatement	if ( n == 0 )		5762375	11					
ANR	5762573	Condition	n == 0	476:8:18877:18882	5762375	0	True				
ANR	5762574	EqualityExpression	n == 0		5762375	0		==			
ANR	5762575	Identifier	n		5762375	0					
ANR	5762576	PrimaryExpression	0		5762375	1					
ANR	5762577	ReturnStatement	"return gx_path_add_curve_notes ( ppath , pc -> p1 . x , pc -> p1 . y , pc -> p2 . x , pc -> p2 . y , pc -> pt . x , pc -> pt . y , notes ) ;"	477:8:18893:19013	5762375	1	True				
ANR	5762578	CallExpression	"gx_path_add_curve_notes ( ppath , pc -> p1 . x , pc -> p1 . y , pc -> p2 . x , pc -> p2 . y , pc -> pt . x , pc -> pt . y , notes )"		5762375	0					
ANR	5762579	Callee	gx_path_add_curve_notes		5762375	0					
ANR	5762580	Identifier	gx_path_add_curve_notes		5762375	0					
ANR	5762581	ArgumentList	ppath		5762375	1					
ANR	5762582	Argument	ppath		5762375	0					
ANR	5762583	Identifier	ppath		5762375	0					
ANR	5762584	Argument	pc -> p1 . x		5762375	1					
ANR	5762585	MemberAccess	pc -> p1 . x		5762375	0					
ANR	5762586	PtrMemberAccess	pc -> p1		5762375	0					
ANR	5762587	Identifier	pc		5762375	0					
ANR	5762588	Identifier	p1		5762375	1					
ANR	5762589	Identifier	x		5762375	1					
ANR	5762590	Argument	pc -> p1 . y		5762375	2					
ANR	5762591	MemberAccess	pc -> p1 . y		5762375	0					
ANR	5762592	PtrMemberAccess	pc -> p1		5762375	0					
ANR	5762593	Identifier	pc		5762375	0					
ANR	5762594	Identifier	p1		5762375	1					
ANR	5762595	Identifier	y		5762375	1					
ANR	5762596	Argument	pc -> p2 . x		5762375	3					
ANR	5762597	MemberAccess	pc -> p2 . x		5762375	0					
ANR	5762598	PtrMemberAccess	pc -> p2		5762375	0					
ANR	5762599	Identifier	pc		5762375	0					
ANR	5762600	Identifier	p2		5762375	1					
ANR	5762601	Identifier	x		5762375	1					
ANR	5762602	Argument	pc -> p2 . y		5762375	4					
ANR	5762603	MemberAccess	pc -> p2 . y		5762375	0					
ANR	5762604	PtrMemberAccess	pc -> p2		5762375	0					
ANR	5762605	Identifier	pc		5762375	0					
ANR	5762606	Identifier	p2		5762375	1					
ANR	5762607	Identifier	y		5762375	1					
ANR	5762608	Argument	pc -> pt . x		5762375	5					
ANR	5762609	MemberAccess	pc -> pt . x		5762375	0					
ANR	5762610	PtrMemberAccess	pc -> pt		5762375	0					
ANR	5762611	Identifier	pc		5762375	0					
ANR	5762612	Identifier	pt		5762375	1					
ANR	5762613	Identifier	x		5762375	1					
ANR	5762614	Argument	pc -> pt . y		5762375	6					
ANR	5762615	MemberAccess	pc -> pt . y		5762375	0					
ANR	5762616	PtrMemberAccess	pc -> pt		5762375	0					
ANR	5762617	Identifier	pc		5762375	0					
ANR	5762618	Identifier	pt		5762375	1					
ANR	5762619	Identifier	y		5762375	1					
ANR	5762620	Argument	notes		5762375	7					
ANR	5762621	Identifier	notes		5762375	0					
ANR	5762622	IfStatement	if ( n0 > 0 )		5762375	12					
ANR	5762623	Condition	n0 > 0	479:8:19023:19028	5762375	0	True				
ANR	5762624	RelationalExpression	n0 > 0		5762375	0		>			
ANR	5762625	Identifier	n0		5762375	0					
ANR	5762626	PrimaryExpression	0		5762375	1					
ANR	5762627	ExpressionStatement	c [ 0 ] = 1	480:8:19039:19047	5762375	1	True				
ANR	5762628	AssignmentExpression	c [ 0 ] = 1		5762375	0		=			
ANR	5762629	ArrayIndexing	c [ 0 ]		5762375	0					
ANR	5762630	Identifier	c		5762375	0					
ANR	5762631	PrimaryExpression	0		5762375	1					
ANR	5762632	PrimaryExpression	1		5762375	1					
ANR	5762633	IfStatement	if ( n0 > 1 )		5762375	13					
ANR	5762634	Condition	n0 > 1	481:8:19057:19062	5762375	0	True				
ANR	5762635	RelationalExpression	n0 > 1		5762375	0		>			
ANR	5762636	Identifier	n0		5762375	0					
ANR	5762637	PrimaryExpression	1		5762375	1					
ANR	5762638	ExpressionStatement	c [ 1 ] = 1	482:8:19073:19081	5762375	1	True				
ANR	5762639	AssignmentExpression	c [ 1 ] = 1		5762375	0		=			
ANR	5762640	ArrayIndexing	c [ 1 ]		5762375	0					
ANR	5762641	Identifier	c		5762375	0					
ANR	5762642	PrimaryExpression	1		5762375	1					
ANR	5762643	PrimaryExpression	1		5762375	1					
ANR	5762644	IfStatement	if ( n1 > 0 )		5762375	14					
ANR	5762645	Condition	n1 > 0	483:8:19091:19096	5762375	0	True				
ANR	5762646	RelationalExpression	n1 > 0		5762375	0		>			
ANR	5762647	Identifier	n1		5762375	0					
ANR	5762648	PrimaryExpression	0		5762375	1					
ANR	5762649	ExpressionStatement	c [ n0 ] = 2	484:8:19107:19116	5762375	1	True				
ANR	5762650	AssignmentExpression	c [ n0 ] = 2		5762375	0		=			
ANR	5762651	ArrayIndexing	c [ n0 ]		5762375	0					
ANR	5762652	Identifier	c		5762375	0					
ANR	5762653	Identifier	n0		5762375	1					
ANR	5762654	PrimaryExpression	2		5762375	1					
ANR	5762655	IfStatement	if ( n1 > 1 )		5762375	15					
ANR	5762656	Condition	n1 > 1	485:8:19126:19131	5762375	0	True				
ANR	5762657	RelationalExpression	n1 > 1		5762375	0		>			
ANR	5762658	Identifier	n1		5762375	0					
ANR	5762659	PrimaryExpression	1		5762375	1					
ANR	5762660	ExpressionStatement	c [ n0 + 1 ] = 2	486:8:19142:19155	5762375	1	True				
ANR	5762661	AssignmentExpression	c [ n0 + 1 ] = 2		5762375	0		=			
ANR	5762662	ArrayIndexing	c [ n0 + 1 ]		5762375	0					
ANR	5762663	Identifier	c		5762375	0					
ANR	5762664	AdditiveExpression	n0 + 1		5762375	1		+			
ANR	5762665	Identifier	n0		5762375	0					
ANR	5762666	PrimaryExpression	1		5762375	1					
ANR	5762667	PrimaryExpression	2		5762375	1					
ANR	5762668	ForStatement	for ( i = 0 ; i < n ; i ++ )		5762375	16					
ANR	5762669	ForInit	i = 0 ;	488:9:19190:19195	5762375	0	True				
ANR	5762670	AssignmentExpression	i = 0		5762375	0		=			
ANR	5762671	Identifier	i		5762375	0					
ANR	5762672	PrimaryExpression	0		5762375	1					
ANR	5762673	Condition	i < n	488:16:19197:19201	5762375	1	True				
ANR	5762674	RelationalExpression	i < n		5762375	0		<			
ANR	5762675	Identifier	i		5762375	0					
ANR	5762676	Identifier	n		5762375	1					
ANR	5762677	PostIncDecOperationExpression	i ++	488:23:19204:19206	5762375	2	True				
ANR	5762678	Identifier	i		5762375	0					
ANR	5762679	IncDec	++		5762375	1					
ANR	5762680	ForStatement	for ( j = i + 1 ; j < n ; j ++ )		5762375	3					
ANR	5762681	ForInit	j = i + 1 ;	489:13:19222:19231	5762375	0	True				
ANR	5762682	AssignmentExpression	j = i + 1		5762375	0		=			
ANR	5762683	Identifier	j		5762375	0					
ANR	5762684	AdditiveExpression	i + 1		5762375	1		+			
ANR	5762685	Identifier	i		5762375	0					
ANR	5762686	PrimaryExpression	1		5762375	1					
ANR	5762687	Condition	j < n	489:24:19233:19237	5762375	1	True				
ANR	5762688	RelationalExpression	j < n		5762375	0		<			
ANR	5762689	Identifier	j		5762375	0					
ANR	5762690	Identifier	n		5762375	1					
ANR	5762691	PostIncDecOperationExpression	j ++	489:31:19240:19242	5762375	2	True				
ANR	5762692	Identifier	j		5762375	0					
ANR	5762693	IncDec	++		5762375	1					
ANR	5762694	IfStatement	if ( t [ i ] > t [ j ] )		5762375	3					
ANR	5762695	Condition	t [ i ] > t [ j ]	490:16:19261:19271	5762375	0	True				
ANR	5762696	RelationalExpression	t [ i ] > t [ j ]		5762375	0		>			
ANR	5762697	ArrayIndexing	t [ i ]		5762375	0					
ANR	5762698	Identifier	t		5762375	0					
ANR	5762699	Identifier	i		5762375	1					
ANR	5762700	ArrayIndexing	t [ j ]		5762375	1					
ANR	5762701	Identifier	t		5762375	0					
ANR	5762702	Identifier	j		5762375	1					
ANR	5762703	CompoundStatement		31:16:944:959	5762375	1					
ANR	5762704	IdentifierDeclStatement	int w ;	491:16:19292:19297	5762375	0	True				
ANR	5762705	IdentifierDecl	w		5762375	0					
ANR	5762706	IdentifierDeclType	int		5762375	0					
ANR	5762707	Identifier	w		5762375	1					
ANR	5762708	IdentifierDeclStatement	double v = t [ i ] ;	492:16:19315:19330	5762375	1	True				
ANR	5762709	IdentifierDecl	v = t [ i ]		5762375	0					
ANR	5762710	IdentifierDeclType	double		5762375	0					
ANR	5762711	Identifier	v		5762375	1					
ANR	5762712	AssignmentExpression	v = t [ i ]		5762375	2		=			
ANR	5762713	Identifier	v		5762375	0					
ANR	5762714	ArrayIndexing	t [ i ]		5762375	1					
ANR	5762715	Identifier	t		5762375	0					
ANR	5762716	Identifier	i		5762375	1					
ANR	5762717	ExpressionStatement	t [ i ] = t [ j ]	492:33:19332:19343	5762375	2	True				
ANR	5762718	AssignmentExpression	t [ i ] = t [ j ]		5762375	0		=			
ANR	5762719	ArrayIndexing	t [ i ]		5762375	0					
ANR	5762720	Identifier	t		5762375	0					
ANR	5762721	Identifier	i		5762375	1					
ANR	5762722	ArrayIndexing	t [ j ]		5762375	1					
ANR	5762723	Identifier	t		5762375	0					
ANR	5762724	Identifier	j		5762375	1					
ANR	5762725	ExpressionStatement	t [ j ] = v	492:46:19345:19353	5762375	3	True				
ANR	5762726	AssignmentExpression	t [ j ] = v		5762375	0		=			
ANR	5762727	ArrayIndexing	t [ j ]		5762375	0					
ANR	5762728	Identifier	t		5762375	0					
ANR	5762729	Identifier	j		5762375	1					
ANR	5762730	Identifier	v		5762375	1					
ANR	5762731	ExpressionStatement	w = c [ i ]	493:16:19371:19379	5762375	4	True				
ANR	5762732	AssignmentExpression	w = c [ i ]		5762375	0		=			
ANR	5762733	Identifier	w		5762375	0					
ANR	5762734	ArrayIndexing	c [ i ]		5762375	1					
ANR	5762735	Identifier	c		5762375	0					
ANR	5762736	Identifier	i		5762375	1					
ANR	5762737	ExpressionStatement	c [ i ] = c [ j ]	493:26:19381:19392	5762375	5	True				
ANR	5762738	AssignmentExpression	c [ i ] = c [ j ]		5762375	0		=			
ANR	5762739	ArrayIndexing	c [ i ]		5762375	0					
ANR	5762740	Identifier	c		5762375	0					
ANR	5762741	Identifier	i		5762375	1					
ANR	5762742	ArrayIndexing	c [ j ]		5762375	1					
ANR	5762743	Identifier	c		5762375	0					
ANR	5762744	Identifier	j		5762375	1					
ANR	5762745	ExpressionStatement	c [ j ] = w	493:39:19394:19402	5762375	6	True				
ANR	5762746	AssignmentExpression	c [ j ] = w		5762375	0		=			
ANR	5762747	ArrayIndexing	c [ j ]		5762375	0					
ANR	5762748	Identifier	c		5762375	0					
ANR	5762749	Identifier	j		5762375	1					
ANR	5762750	Identifier	w		5762375	1					
ANR	5762751	ForStatement	for ( k = 0 ; k < n ; k ++ )		5762375	17					
ANR	5762752	ForInit	k = 0 ;	496:9:19460:19465	5762375	0	True				
ANR	5762753	AssignmentExpression	k = 0		5762375	0		=			
ANR	5762754	Identifier	k		5762375	0					
ANR	5762755	PrimaryExpression	0		5762375	1					
ANR	5762756	Condition	k < n	496:16:19467:19471	5762375	1	True				
ANR	5762757	RelationalExpression	k < n		5762375	0		<			
ANR	5762758	Identifier	k		5762375	0					
ANR	5762759	Identifier	n		5762375	1					
ANR	5762760	PostIncDecOperationExpression	k ++	496:23:19474:19476	5762375	2	True				
ANR	5762761	Identifier	k		5762375	0					
ANR	5762762	IncDec	++		5762375	1					
ANR	5762763	IfStatement	if ( t [ k ] >= delta )		5762375	3					
ANR	5762764	Condition	t [ k ] >= delta	497:12:19491:19503	5762375	0	True				
ANR	5762765	RelationalExpression	t [ k ] >= delta		5762375	0		>=			
ANR	5762766	ArrayIndexing	t [ k ]		5762375	0					
ANR	5762767	Identifier	t		5762375	0					
ANR	5762768	Identifier	k		5762375	1					
ANR	5762769	Identifier	delta		5762375	1					
ANR	5762770	BreakStatement	break ;	498:12:19518:19523	5762375	1	True				
ANR	5762771	IfStatement	if ( t [ n - 1 ] > 1 - delta )		5762375	18					
ANR	5762772	Condition	t [ n - 1 ] > 1 - delta	500:8:19584:19603	5762375	0	True				
ANR	5762773	RelationalExpression	t [ n - 1 ] > 1 - delta		5762375	0		>			
ANR	5762774	ArrayIndexing	t [ n - 1 ]		5762375	0					
ANR	5762775	Identifier	t		5762375	0					
ANR	5762776	AdditiveExpression	n - 1		5762375	1		-			
ANR	5762777	Identifier	n		5762375	0					
ANR	5762778	PrimaryExpression	1		5762375	1					
ANR	5762779	AdditiveExpression	1 - delta		5762375	1		-			
ANR	5762780	PrimaryExpression	1		5762375	0					
ANR	5762781	Identifier	delta		5762375	1					
ANR	5762782	ExpressionStatement	n --	501:8:19614:19617	5762375	1	True				
ANR	5762783	PostIncDecOperationExpression	n --		5762375	0					
ANR	5762784	Identifier	n		5762375	0					
ANR	5762785	IncDec	--		5762375	1					
ANR	5762786	ForStatement	"for ( i = k + 1 , j = k ; i < n && t [ k ] < 1 - delta ; i ++ )"		5762375	19					
ANR	5762787	ForInit	"i = k + 1 , j = k ;"	502:9:19628:19644	5762375	0	True				
ANR	5762788	Expression	"i = k + 1 , j = k"		5762375	0					
ANR	5762789	AssignmentExpression	i = k + 1		5762375	0		=			
ANR	5762790	Identifier	i		5762375	0					
ANR	5762791	AdditiveExpression	k + 1		5762375	1		+			
ANR	5762792	Identifier	k		5762375	0					
ANR	5762793	PrimaryExpression	1		5762375	1					
ANR	5762794	AssignmentExpression	j = k		5762375	1		=			
ANR	5762795	Identifier	j		5762375	0					
ANR	5762796	Identifier	k		5762375	1					
ANR	5762797	Condition	i < n && t [ k ] < 1 - delta	502:27:19646:19670	5762375	1	True				
ANR	5762798	AndExpression	i < n && t [ k ] < 1 - delta		5762375	0		&&			
ANR	5762799	RelationalExpression	i < n		5762375	0		<			
ANR	5762800	Identifier	i		5762375	0					
ANR	5762801	Identifier	n		5762375	1					
ANR	5762802	RelationalExpression	t [ k ] < 1 - delta		5762375	1		<			
ANR	5762803	ArrayIndexing	t [ k ]		5762375	0					
ANR	5762804	Identifier	t		5762375	0					
ANR	5762805	Identifier	k		5762375	1					
ANR	5762806	AdditiveExpression	1 - delta		5762375	1		-			
ANR	5762807	PrimaryExpression	1		5762375	0					
ANR	5762808	Identifier	delta		5762375	1					
ANR	5762809	PostIncDecOperationExpression	i ++	502:54:19673:19675	5762375	2	True				
ANR	5762810	Identifier	i		5762375	0					
ANR	5762811	IncDec	++		5762375	1					
ANR	5762812	IfStatement	if ( any_abs ( t [ i ] - t [ j ] ) < delta )		5762375	3					
ANR	5762813	Condition	any_abs ( t [ i ] - t [ j ] ) < delta	503:12:19690:19717	5762375	0	True				
ANR	5762814	RelationalExpression	any_abs ( t [ i ] - t [ j ] ) < delta		5762375	0		<			
ANR	5762815	CallExpression	any_abs ( t [ i ] - t [ j ] )		5762375	0					
ANR	5762816	Callee	any_abs		5762375	0					
ANR	5762817	Identifier	any_abs		5762375	0					
ANR	5762818	ArgumentList	t [ i ] - t [ j ]		5762375	1					
ANR	5762819	Argument	t [ i ] - t [ j ]		5762375	0					
ANR	5762820	AdditiveExpression	t [ i ] - t [ j ]		5762375	0		-			
ANR	5762821	ArrayIndexing	t [ i ]		5762375	0					
ANR	5762822	Identifier	t		5762375	0					
ANR	5762823	Identifier	i		5762375	1					
ANR	5762824	ArrayIndexing	t [ j ]		5762375	1					
ANR	5762825	Identifier	t		5762375	0					
ANR	5762826	Identifier	j		5762375	1					
ANR	5762827	Identifier	delta		5762375	1					
ANR	5762828	CompoundStatement		42:42:1349:1349	5762375	1					
ANR	5762829	ExpressionStatement	t [ j ] = ( t [ j ] + t [ i ] ) / 2	504:12:19734:19758	5762375	0	True				
ANR	5762830	AssignmentExpression	t [ j ] = ( t [ j ] + t [ i ] ) / 2		5762375	0		=			
ANR	5762831	ArrayIndexing	t [ j ]		5762375	0					
ANR	5762832	Identifier	t		5762375	0					
ANR	5762833	Identifier	j		5762375	1					
ANR	5762834	MultiplicativeExpression	( t [ j ] + t [ i ] ) / 2		5762375	1		/			
ANR	5762835	AdditiveExpression	t [ j ] + t [ i ]		5762375	0		+			
ANR	5762836	ArrayIndexing	t [ j ]		5762375	0					
ANR	5762837	Identifier	t		5762375	0					
ANR	5762838	Identifier	j		5762375	1					
ANR	5762839	ArrayIndexing	t [ i ]		5762375	1					
ANR	5762840	Identifier	t		5762375	0					
ANR	5762841	Identifier	i		5762375	1					
ANR	5762842	PrimaryExpression	2		5762375	1					
ANR	5762843	ExpressionStatement	c [ j ] |= c [ i ]	505:12:19806:19818	5762375	1	True				
ANR	5762844	AssignmentExpression	c [ j ] |= c [ i ]		5762375	0		|=			
ANR	5762845	ArrayIndexing	c [ j ]		5762375	0					
ANR	5762846	Identifier	c		5762375	0					
ANR	5762847	Identifier	j		5762375	1					
ANR	5762848	ArrayIndexing	c [ i ]		5762375	1					
ANR	5762849	Identifier	c		5762375	0					
ANR	5762850	Identifier	i		5762375	1					
ANR	5762851	ElseStatement	else		5762375	0					
ANR	5762852	CompoundStatement		45:15:1464:1464	5762375	0					
ANR	5762853	ExpressionStatement	j ++	507:12:19849:19852	5762375	0	True				
ANR	5762854	PostIncDecOperationExpression	j ++		5762375	0					
ANR	5762855	Identifier	j		5762375	0					
ANR	5762856	IncDec	++		5762375	1					
ANR	5762857	ExpressionStatement	t [ j ] = t [ i ]	508:12:19866:19877	5762375	1	True				
ANR	5762858	AssignmentExpression	t [ j ] = t [ i ]		5762375	0		=			
ANR	5762859	ArrayIndexing	t [ j ]		5762375	0					
ANR	5762860	Identifier	t		5762375	0					
ANR	5762861	Identifier	j		5762375	1					
ANR	5762862	ArrayIndexing	t [ i ]		5762375	1					
ANR	5762863	Identifier	t		5762375	0					
ANR	5762864	Identifier	i		5762375	1					
ANR	5762865	ExpressionStatement	c [ j ] = c [ i ]	509:12:19891:19902	5762375	2	True				
ANR	5762866	AssignmentExpression	c [ j ] = c [ i ]		5762375	0		=			
ANR	5762867	ArrayIndexing	c [ j ]		5762375	0					
ANR	5762868	Identifier	c		5762375	0					
ANR	5762869	Identifier	j		5762375	1					
ANR	5762870	ArrayIndexing	c [ i ]		5762375	1					
ANR	5762871	Identifier	c		5762375	0					
ANR	5762872	Identifier	i		5762375	1					
ANR	5762873	ExpressionStatement	n = j + 1	511:4:19918:19927	5762375	20	True				
ANR	5762874	AssignmentExpression	n = j + 1		5762375	0		=			
ANR	5762875	Identifier	n		5762375	0					
ANR	5762876	AdditiveExpression	j + 1		5762375	1		+			
ANR	5762877	Identifier	j		5762375	0					
ANR	5762878	PrimaryExpression	1		5762375	1					
ANR	5762879	ExpressionStatement	"curve_points_to_coefficients ( x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , ax , bx , cx , v01 , v12 )"	513:4:19954:20038	5762375	21	True				
ANR	5762880	CallExpression	"curve_points_to_coefficients ( x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , ax , bx , cx , v01 , v12 )"		5762375	0					
ANR	5762881	Callee	curve_points_to_coefficients		5762375	0					
ANR	5762882	Identifier	curve_points_to_coefficients		5762375	0					
ANR	5762883	ArgumentList	x0		5762375	1					
ANR	5762884	Argument	x0		5762375	0					
ANR	5762885	Identifier	x0		5762375	0					
ANR	5762886	Argument	pc -> p1 . x		5762375	1					
ANR	5762887	MemberAccess	pc -> p1 . x		5762375	0					
ANR	5762888	PtrMemberAccess	pc -> p1		5762375	0					
ANR	5762889	Identifier	pc		5762375	0					
ANR	5762890	Identifier	p1		5762375	1					
ANR	5762891	Identifier	x		5762375	1					
ANR	5762892	Argument	pc -> p2 . x		5762375	2					
ANR	5762893	MemberAccess	pc -> p2 . x		5762375	0					
ANR	5762894	PtrMemberAccess	pc -> p2		5762375	0					
ANR	5762895	Identifier	pc		5762375	0					
ANR	5762896	Identifier	p2		5762375	1					
ANR	5762897	Identifier	x		5762375	1					
ANR	5762898	Argument	pc -> pt . x		5762375	3					
ANR	5762899	MemberAccess	pc -> pt . x		5762375	0					
ANR	5762900	PtrMemberAccess	pc -> pt		5762375	0					
ANR	5762901	Identifier	pc		5762375	0					
ANR	5762902	Identifier	pt		5762375	1					
ANR	5762903	Identifier	x		5762375	1					
ANR	5762904	Argument	ax		5762375	4					
ANR	5762905	Identifier	ax		5762375	0					
ANR	5762906	Argument	bx		5762375	5					
ANR	5762907	Identifier	bx		5762375	0					
ANR	5762908	Argument	cx		5762375	6					
ANR	5762909	Identifier	cx		5762375	0					
ANR	5762910	Argument	v01		5762375	7					
ANR	5762911	Identifier	v01		5762375	0					
ANR	5762912	Argument	v12		5762375	8					
ANR	5762913	Identifier	v12		5762375	0					
ANR	5762914	ExpressionStatement	"curve_points_to_coefficients ( y0 , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , ay , by , cy , v01 , v12 )"	514:4:20044:20128	5762375	22	True				
ANR	5762915	CallExpression	"curve_points_to_coefficients ( y0 , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , ay , by , cy , v01 , v12 )"		5762375	0					
ANR	5762916	Callee	curve_points_to_coefficients		5762375	0					
ANR	5762917	Identifier	curve_points_to_coefficients		5762375	0					
ANR	5762918	ArgumentList	y0		5762375	1					
ANR	5762919	Argument	y0		5762375	0					
ANR	5762920	Identifier	y0		5762375	0					
ANR	5762921	Argument	pc -> p1 . y		5762375	1					
ANR	5762922	MemberAccess	pc -> p1 . y		5762375	0					
ANR	5762923	PtrMemberAccess	pc -> p1		5762375	0					
ANR	5762924	Identifier	pc		5762375	0					
ANR	5762925	Identifier	p1		5762375	1					
ANR	5762926	Identifier	y		5762375	1					
ANR	5762927	Argument	pc -> p2 . y		5762375	2					
ANR	5762928	MemberAccess	pc -> p2 . y		5762375	0					
ANR	5762929	PtrMemberAccess	pc -> p2		5762375	0					
ANR	5762930	Identifier	pc		5762375	0					
ANR	5762931	Identifier	p2		5762375	1					
ANR	5762932	Identifier	y		5762375	1					
ANR	5762933	Argument	pc -> pt . y		5762375	3					
ANR	5762934	MemberAccess	pc -> pt . y		5762375	0					
ANR	5762935	PtrMemberAccess	pc -> pt		5762375	0					
ANR	5762936	Identifier	pc		5762375	0					
ANR	5762937	Identifier	pt		5762375	1					
ANR	5762938	Identifier	y		5762375	1					
ANR	5762939	Argument	ay		5762375	4					
ANR	5762940	Identifier	ay		5762375	0					
ANR	5762941	Argument	by		5762375	5					
ANR	5762942	Identifier	by		5762375	0					
ANR	5762943	Argument	cy		5762375	6					
ANR	5762944	Identifier	cy		5762375	0					
ANR	5762945	Argument	v01		5762375	7					
ANR	5762946	Identifier	v01		5762375	0					
ANR	5762947	Argument	v12		5762375	8					
ANR	5762948	Identifier	v12		5762375	0					
ANR	5762949	ExpressionStatement	"ax *= 3 , bx *= 2"	515:4:20134:20150	5762375	23	True				
ANR	5762950	Expression	"ax *= 3 , bx *= 2"		5762375	0					
ANR	5762951	AssignmentExpression	ax *= 3		5762375	0		*=			
ANR	5762952	Identifier	ax		5762375	0					
ANR	5762953	PrimaryExpression	3		5762375	1					
ANR	5762954	AssignmentExpression	bx *= 2		5762375	1		*=			
ANR	5762955	Identifier	bx		5762375	0					
ANR	5762956	PrimaryExpression	2		5762375	1					
ANR	5762957	ExpressionStatement	"ay *= 3 , by *= 2"	516:4:20194:20210	5762375	24	True				
ANR	5762958	Expression	"ay *= 3 , by *= 2"		5762375	0					
ANR	5762959	AssignmentExpression	ay *= 3		5762375	0		*=			
ANR	5762960	Identifier	ay		5762375	0					
ANR	5762961	PrimaryExpression	3		5762375	1					
ANR	5762962	AssignmentExpression	by *= 2		5762375	1		*=			
ANR	5762963	Identifier	by		5762375	0					
ANR	5762964	PrimaryExpression	2		5762375	1					
ANR	5762965	ExpressionStatement	px = x0	517:4:20216:20223	5762375	25	True				
ANR	5762966	AssignmentExpression	px = x0		5762375	0		=			
ANR	5762967	Identifier	px		5762375	0					
ANR	5762968	Identifier	x0		5762375	1					
ANR	5762969	ExpressionStatement	py = y0	518:4:20229:20236	5762375	26	True				
ANR	5762970	AssignmentExpression	py = y0		5762375	0		=			
ANR	5762971	Identifier	py		5762375	0					
ANR	5762972	Identifier	y0		5762375	1					
ANR	5762973	ExpressionStatement	qx = ( fixed ) ( ( pc -> p1 . x - px ) * t [ 0 ] + 0.5 )	519:4:20242:20284	5762375	27	True				
ANR	5762974	AssignmentExpression	qx = ( fixed ) ( ( pc -> p1 . x - px ) * t [ 0 ] + 0.5 )		5762375	0		=			
ANR	5762975	Identifier	qx		5762375	0					
ANR	5762976	CastExpression	( fixed ) ( ( pc -> p1 . x - px ) * t [ 0 ] + 0.5 )		5762375	1					
ANR	5762977	CastTarget	fixed		5762375	0					
ANR	5762978	AdditiveExpression	( pc -> p1 . x - px ) * t [ 0 ] + 0.5		5762375	1		+			
ANR	5762979	MultiplicativeExpression	( pc -> p1 . x - px ) * t [ 0 ]		5762375	0		*			
ANR	5762980	AdditiveExpression	pc -> p1 . x - px		5762375	0		-			
ANR	5762981	MemberAccess	pc -> p1 . x		5762375	0					
ANR	5762982	PtrMemberAccess	pc -> p1		5762375	0					
ANR	5762983	Identifier	pc		5762375	0					
ANR	5762984	Identifier	p1		5762375	1					
ANR	5762985	Identifier	x		5762375	1					
ANR	5762986	Identifier	px		5762375	1					
ANR	5762987	ArrayIndexing	t [ 0 ]		5762375	1					
ANR	5762988	Identifier	t		5762375	0					
ANR	5762989	PrimaryExpression	0		5762375	1					
ANR	5762990	PrimaryExpression	0.5		5762375	1					
ANR	5762991	ExpressionStatement	qy = ( fixed ) ( ( pc -> p1 . y - py ) * t [ 0 ] + 0.5 )	520:4:20290:20332	5762375	28	True				
ANR	5762992	AssignmentExpression	qy = ( fixed ) ( ( pc -> p1 . y - py ) * t [ 0 ] + 0.5 )		5762375	0		=			
ANR	5762993	Identifier	qy		5762375	0					
ANR	5762994	CastExpression	( fixed ) ( ( pc -> p1 . y - py ) * t [ 0 ] + 0.5 )		5762375	1					
ANR	5762995	CastTarget	fixed		5762375	0					
ANR	5762996	AdditiveExpression	( pc -> p1 . y - py ) * t [ 0 ] + 0.5		5762375	1		+			
ANR	5762997	MultiplicativeExpression	( pc -> p1 . y - py ) * t [ 0 ]		5762375	0		*			
ANR	5762998	AdditiveExpression	pc -> p1 . y - py		5762375	0		-			
ANR	5762999	MemberAccess	pc -> p1 . y		5762375	0					
ANR	5763000	PtrMemberAccess	pc -> p1		5762375	0					
ANR	5763001	Identifier	pc		5762375	0					
ANR	5763002	Identifier	p1		5762375	1					
ANR	5763003	Identifier	y		5762375	1					
ANR	5763004	Identifier	py		5762375	1					
ANR	5763005	ArrayIndexing	t [ 0 ]		5762375	1					
ANR	5763006	Identifier	t		5762375	0					
ANR	5763007	PrimaryExpression	0		5762375	1					
ANR	5763008	PrimaryExpression	0.5		5762375	1					
ANR	5763009	ExpressionStatement	tp = 0	521:4:20338:20344	5762375	29	True				
ANR	5763010	AssignmentExpression	tp = 0		5762375	0		=			
ANR	5763011	Identifier	tp		5762375	0					
ANR	5763012	PrimaryExpression	0		5762375	1					
ANR	5763013	ForStatement	for ( i = k ; i < n ; i ++ )		5762375	30					
ANR	5763014	ForInit	i = k ;	522:9:20355:20360	5762375	0	True				
ANR	5763015	AssignmentExpression	i = k		5762375	0		=			
ANR	5763016	Identifier	i		5762375	0					
ANR	5763017	Identifier	k		5762375	1					
ANR	5763018	Condition	i < n	522:16:20362:20366	5762375	1	True				
ANR	5763019	RelationalExpression	i < n		5762375	0		<			
ANR	5763020	Identifier	i		5762375	0					
ANR	5763021	Identifier	n		5762375	1					
ANR	5763022	PostIncDecOperationExpression	i ++	522:23:20369:20371	5762375	2	True				
ANR	5763023	Identifier	i		5762375	0					
ANR	5763024	IncDec	++		5762375	1					
ANR	5763025	CompoundStatement		71:8:2570:2578	5762375	3					
ANR	5763026	IdentifierDeclStatement	double ti = t [ i ] ;	523:8:20384:20400	5762375	0	True				
ANR	5763027	IdentifierDecl	ti = t [ i ]		5762375	0					
ANR	5763028	IdentifierDeclType	double		5762375	0					
ANR	5763029	Identifier	ti		5762375	1					
ANR	5763030	AssignmentExpression	ti = t [ i ]		5762375	2		=			
ANR	5763031	Identifier	ti		5762375	0					
ANR	5763032	ArrayIndexing	t [ i ]		5762375	1					
ANR	5763033	Identifier	t		5762375	0					
ANR	5763034	Identifier	i		5762375	1					
ANR	5763035	IdentifierDeclStatement	"double t2 = ti * ti , t3 = t2 * ti ;"	524:8:20410:20443	5762375	1	True				
ANR	5763036	IdentifierDecl	t2 = ti * ti		5762375	0					
ANR	5763037	IdentifierDeclType	double		5762375	0					
ANR	5763038	Identifier	t2		5762375	1					
ANR	5763039	AssignmentExpression	t2 = ti * ti		5762375	2		=			
ANR	5763040	Identifier	t2		5762375	0					
ANR	5763041	MultiplicativeExpression	ti * ti		5762375	1		*			
ANR	5763042	Identifier	ti		5762375	0					
ANR	5763043	Identifier	ti		5762375	1					
ANR	5763044	IdentifierDecl	t3 = t2 * ti		5762375	1					
ANR	5763045	IdentifierDeclType	double		5762375	0					
ANR	5763046	Identifier	t3		5762375	1					
ANR	5763047	AssignmentExpression	t3 = t2 * ti		5762375	2		=			
ANR	5763048	Identifier	t3		5762375	0					
ANR	5763049	MultiplicativeExpression	t2 * ti		5762375	1		*			
ANR	5763050	Identifier	t2		5762375	0					
ANR	5763051	Identifier	ti		5762375	1					
ANR	5763052	IdentifierDeclStatement	"double omt = 1 - ti , omt2 = omt * omt , omt3 = omt2 * omt ;"	525:8:20453:20509	5762375	2	True				
ANR	5763053	IdentifierDecl	omt = 1 - ti		5762375	0					
ANR	5763054	IdentifierDeclType	double		5762375	0					
ANR	5763055	Identifier	omt		5762375	1					
ANR	5763056	AssignmentExpression	omt = 1 - ti		5762375	2		=			
ANR	5763057	Identifier	omt		5762375	0					
ANR	5763058	AdditiveExpression	1 - ti		5762375	1		-			
ANR	5763059	PrimaryExpression	1		5762375	0					
ANR	5763060	Identifier	ti		5762375	1					
ANR	5763061	IdentifierDecl	omt2 = omt * omt		5762375	1					
ANR	5763062	IdentifierDeclType	double		5762375	0					
ANR	5763063	Identifier	omt2		5762375	1					
ANR	5763064	AssignmentExpression	omt2 = omt * omt		5762375	2		=			
ANR	5763065	Identifier	omt2		5762375	0					
ANR	5763066	MultiplicativeExpression	omt * omt		5762375	1		*			
ANR	5763067	Identifier	omt		5762375	0					
ANR	5763068	Identifier	omt		5762375	1					
ANR	5763069	IdentifierDecl	omt3 = omt2 * omt		5762375	2					
ANR	5763070	IdentifierDeclType	double		5762375	0					
ANR	5763071	Identifier	omt3		5762375	1					
ANR	5763072	AssignmentExpression	omt3 = omt2 * omt		5762375	2		=			
ANR	5763073	Identifier	omt3		5762375	0					
ANR	5763074	MultiplicativeExpression	omt2 * omt		5762375	1		*			
ANR	5763075	Identifier	omt2		5762375	0					
ANR	5763076	Identifier	omt		5762375	1					
ANR	5763077	IdentifierDeclStatement	double x = x0 * omt3 + 3 * pc -> p1 . x * omt2 * ti + 3 * pc -> p2 . x * omt * t2 + pc -> pt . x * t3 ;	526:8:20519:20608	5762375	3	True				
ANR	5763078	IdentifierDecl	x = x0 * omt3 + 3 * pc -> p1 . x * omt2 * ti + 3 * pc -> p2 . x * omt * t2 + pc -> pt . x * t3		5762375	0					
ANR	5763079	IdentifierDeclType	double		5762375	0					
ANR	5763080	Identifier	x		5762375	1					
ANR	5763081	AssignmentExpression	x = x0 * omt3 + 3 * pc -> p1 . x * omt2 * ti + 3 * pc -> p2 . x * omt * t2 + pc -> pt . x * t3		5762375	2		=			
ANR	5763082	Identifier	x		5762375	0					
ANR	5763083	AdditiveExpression	x0 * omt3 + 3 * pc -> p1 . x * omt2 * ti + 3 * pc -> p2 . x * omt * t2 + pc -> pt . x * t3		5762375	1		+			
ANR	5763084	MultiplicativeExpression	x0 * omt3		5762375	0		*			
ANR	5763085	Identifier	x0		5762375	0					
ANR	5763086	Identifier	omt3		5762375	1					
ANR	5763087	AdditiveExpression	3 * pc -> p1 . x * omt2 * ti + 3 * pc -> p2 . x * omt * t2 + pc -> pt . x * t3		5762375	1		+			
ANR	5763088	MultiplicativeExpression	3 * pc -> p1 . x * omt2 * ti		5762375	0		*			
ANR	5763089	PrimaryExpression	3		5762375	0					
ANR	5763090	MultiplicativeExpression	pc -> p1 . x * omt2 * ti		5762375	1		*			
ANR	5763091	MemberAccess	pc -> p1 . x		5762375	0					
ANR	5763092	PtrMemberAccess	pc -> p1		5762375	0					
ANR	5763093	Identifier	pc		5762375	0					
ANR	5763094	Identifier	p1		5762375	1					
ANR	5763095	Identifier	x		5762375	1					
ANR	5763096	MultiplicativeExpression	omt2 * ti		5762375	1		*			
ANR	5763097	Identifier	omt2		5762375	0					
ANR	5763098	Identifier	ti		5762375	1					
ANR	5763099	AdditiveExpression	3 * pc -> p2 . x * omt * t2 + pc -> pt . x * t3		5762375	1		+			
ANR	5763100	MultiplicativeExpression	3 * pc -> p2 . x * omt * t2		5762375	0		*			
ANR	5763101	PrimaryExpression	3		5762375	0					
ANR	5763102	MultiplicativeExpression	pc -> p2 . x * omt * t2		5762375	1		*			
ANR	5763103	MemberAccess	pc -> p2 . x		5762375	0					
ANR	5763104	PtrMemberAccess	pc -> p2		5762375	0					
ANR	5763105	Identifier	pc		5762375	0					
ANR	5763106	Identifier	p2		5762375	1					
ANR	5763107	Identifier	x		5762375	1					
ANR	5763108	MultiplicativeExpression	omt * t2		5762375	1		*			
ANR	5763109	Identifier	omt		5762375	0					
ANR	5763110	Identifier	t2		5762375	1					
ANR	5763111	MultiplicativeExpression	pc -> pt . x * t3		5762375	1		*			
ANR	5763112	MemberAccess	pc -> pt . x		5762375	0					
ANR	5763113	PtrMemberAccess	pc -> pt		5762375	0					
ANR	5763114	Identifier	pc		5762375	0					
ANR	5763115	Identifier	pt		5762375	1					
ANR	5763116	Identifier	x		5762375	1					
ANR	5763117	Identifier	t3		5762375	1					
ANR	5763118	IdentifierDeclStatement	double y = y0 * omt3 + 3 * pc -> p1 . y * omt2 * ti + 3 * pc -> p2 . y * omt * t2 + pc -> pt . y * t3 ;	527:8:20618:20707	5762375	4	True				
ANR	5763119	IdentifierDecl	y = y0 * omt3 + 3 * pc -> p1 . y * omt2 * ti + 3 * pc -> p2 . y * omt * t2 + pc -> pt . y * t3		5762375	0					
ANR	5763120	IdentifierDeclType	double		5762375	0					
ANR	5763121	Identifier	y		5762375	1					
ANR	5763122	AssignmentExpression	y = y0 * omt3 + 3 * pc -> p1 . y * omt2 * ti + 3 * pc -> p2 . y * omt * t2 + pc -> pt . y * t3		5762375	2		=			
ANR	5763123	Identifier	y		5762375	0					
ANR	5763124	AdditiveExpression	y0 * omt3 + 3 * pc -> p1 . y * omt2 * ti + 3 * pc -> p2 . y * omt * t2 + pc -> pt . y * t3		5762375	1		+			
ANR	5763125	MultiplicativeExpression	y0 * omt3		5762375	0		*			
ANR	5763126	Identifier	y0		5762375	0					
ANR	5763127	Identifier	omt3		5762375	1					
ANR	5763128	AdditiveExpression	3 * pc -> p1 . y * omt2 * ti + 3 * pc -> p2 . y * omt * t2 + pc -> pt . y * t3		5762375	1		+			
ANR	5763129	MultiplicativeExpression	3 * pc -> p1 . y * omt2 * ti		5762375	0		*			
ANR	5763130	PrimaryExpression	3		5762375	0					
ANR	5763131	MultiplicativeExpression	pc -> p1 . y * omt2 * ti		5762375	1		*			
ANR	5763132	MemberAccess	pc -> p1 . y		5762375	0					
ANR	5763133	PtrMemberAccess	pc -> p1		5762375	0					
ANR	5763134	Identifier	pc		5762375	0					
ANR	5763135	Identifier	p1		5762375	1					
ANR	5763136	Identifier	y		5762375	1					
ANR	5763137	MultiplicativeExpression	omt2 * ti		5762375	1		*			
ANR	5763138	Identifier	omt2		5762375	0					
ANR	5763139	Identifier	ti		5762375	1					
ANR	5763140	AdditiveExpression	3 * pc -> p2 . y * omt * t2 + pc -> pt . y * t3		5762375	1		+			
ANR	5763141	MultiplicativeExpression	3 * pc -> p2 . y * omt * t2		5762375	0		*			
ANR	5763142	PrimaryExpression	3		5762375	0					
ANR	5763143	MultiplicativeExpression	pc -> p2 . y * omt * t2		5762375	1		*			
ANR	5763144	MemberAccess	pc -> p2 . y		5762375	0					
ANR	5763145	PtrMemberAccess	pc -> p2		5762375	0					
ANR	5763146	Identifier	pc		5762375	0					
ANR	5763147	Identifier	p2		5762375	1					
ANR	5763148	Identifier	y		5762375	1					
ANR	5763149	MultiplicativeExpression	omt * t2		5762375	1		*			
ANR	5763150	Identifier	omt		5762375	0					
ANR	5763151	Identifier	t2		5762375	1					
ANR	5763152	MultiplicativeExpression	pc -> pt . y * t3		5762375	1		*			
ANR	5763153	MemberAccess	pc -> pt . y		5762375	0					
ANR	5763154	PtrMemberAccess	pc -> pt		5762375	0					
ANR	5763155	Identifier	pc		5762375	0					
ANR	5763156	Identifier	pt		5762375	1					
ANR	5763157	Identifier	y		5762375	1					
ANR	5763158	Identifier	t3		5762375	1					
ANR	5763159	IdentifierDeclStatement	double ddx = ( c [ i ] & 1 ? 0 : ax * t2 + bx * ti + cx ) ;	528:8:20717:20769	5762375	5	True				
ANR	5763160	IdentifierDecl	ddx = ( c [ i ] & 1 ? 0 : ax * t2 + bx * ti + cx )		5762375	0					
ANR	5763161	IdentifierDeclType	double		5762375	0					
ANR	5763162	Identifier	ddx		5762375	1					
ANR	5763163	AssignmentExpression	ddx = ( c [ i ] & 1 ? 0 : ax * t2 + bx * ti + cx )		5762375	2		=			
ANR	5763164	Identifier	ddx		5762375	0					
ANR	5763165	ConditionalExpression	c [ i ] & 1 ? 0 : ax * t2 + bx * ti + cx		5762375	1					
ANR	5763166	Condition	c [ i ] & 1		5762375	0					
ANR	5763167	BitAndExpression	c [ i ] & 1		5762375	0		&			
ANR	5763168	ArrayIndexing	c [ i ]		5762375	0					
ANR	5763169	Identifier	c		5762375	0					
ANR	5763170	Identifier	i		5762375	1					
ANR	5763171	PrimaryExpression	1		5762375	1					
ANR	5763172	PrimaryExpression	0		5762375	1					
ANR	5763173	AdditiveExpression	ax * t2 + bx * ti + cx		5762375	2		+			
ANR	5763174	MultiplicativeExpression	ax * t2		5762375	0		*			
ANR	5763175	Identifier	ax		5762375	0					
ANR	5763176	Identifier	t2		5762375	1					
ANR	5763177	AdditiveExpression	bx * ti + cx		5762375	1		+			
ANR	5763178	MultiplicativeExpression	bx * ti		5762375	0		*			
ANR	5763179	Identifier	bx		5762375	0					
ANR	5763180	Identifier	ti		5762375	1					
ANR	5763181	Identifier	cx		5762375	1					
ANR	5763182	IdentifierDeclStatement	double ddy = ( c [ i ] & 2 ? 0 : ay * t2 + by * ti + cy ) ;	529:8:20801:20853	5762375	6	True				
ANR	5763183	IdentifierDecl	ddy = ( c [ i ] & 2 ? 0 : ay * t2 + by * ti + cy )		5762375	0					
ANR	5763184	IdentifierDeclType	double		5762375	0					
ANR	5763185	Identifier	ddy		5762375	1					
ANR	5763186	AssignmentExpression	ddy = ( c [ i ] & 2 ? 0 : ay * t2 + by * ti + cy )		5762375	2		=			
ANR	5763187	Identifier	ddy		5762375	0					
ANR	5763188	ConditionalExpression	c [ i ] & 2 ? 0 : ay * t2 + by * ti + cy		5762375	1					
ANR	5763189	Condition	c [ i ] & 2		5762375	0					
ANR	5763190	BitAndExpression	c [ i ] & 2		5762375	0		&			
ANR	5763191	ArrayIndexing	c [ i ]		5762375	0					
ANR	5763192	Identifier	c		5762375	0					
ANR	5763193	Identifier	i		5762375	1					
ANR	5763194	PrimaryExpression	2		5762375	1					
ANR	5763195	PrimaryExpression	0		5762375	1					
ANR	5763196	AdditiveExpression	ay * t2 + by * ti + cy		5762375	2		+			
ANR	5763197	MultiplicativeExpression	ay * t2		5762375	0		*			
ANR	5763198	Identifier	ay		5762375	0					
ANR	5763199	Identifier	t2		5762375	1					
ANR	5763200	AdditiveExpression	by * ti + cy		5762375	1		+			
ANR	5763201	MultiplicativeExpression	by * ti		5762375	0		*			
ANR	5763202	Identifier	by		5762375	0					
ANR	5763203	Identifier	ti		5762375	1					
ANR	5763204	Identifier	cy		5762375	1					
ANR	5763205	IdentifierDeclStatement	fixed dx = ( fixed ) ( ddx + 0.5 ) ;	530:8:20863:20892	5762375	7	True				
ANR	5763206	IdentifierDecl	dx = ( fixed ) ( ddx + 0.5 )		5762375	0					
ANR	5763207	IdentifierDeclType	fixed		5762375	0					
ANR	5763208	Identifier	dx		5762375	1					
ANR	5763209	AssignmentExpression	dx = ( fixed ) ( ddx + 0.5 )		5762375	2		=			
ANR	5763210	Identifier	dx		5762375	0					
ANR	5763211	CastExpression	( fixed ) ( ddx + 0.5 )		5762375	1					
ANR	5763212	CastTarget	fixed		5762375	0					
ANR	5763213	AdditiveExpression	ddx + 0.5		5762375	1		+			
ANR	5763214	Identifier	ddx		5762375	0					
ANR	5763215	PrimaryExpression	0.5		5762375	1					
ANR	5763216	IdentifierDeclStatement	fixed dy = ( fixed ) ( ddy + 0.5 ) ;	531:8:20902:20931	5762375	8	True				
ANR	5763217	IdentifierDecl	dy = ( fixed ) ( ddy + 0.5 )		5762375	0					
ANR	5763218	IdentifierDeclType	fixed		5762375	0					
ANR	5763219	Identifier	dy		5762375	1					
ANR	5763220	AssignmentExpression	dy = ( fixed ) ( ddy + 0.5 )		5762375	2		=			
ANR	5763221	Identifier	dy		5762375	0					
ANR	5763222	CastExpression	( fixed ) ( ddy + 0.5 )		5762375	1					
ANR	5763223	CastTarget	fixed		5762375	0					
ANR	5763224	AdditiveExpression	ddy + 0.5		5762375	1		+			
ANR	5763225	Identifier	ddy		5762375	0					
ANR	5763226	PrimaryExpression	0.5		5762375	1					
ANR	5763227	IdentifierDeclStatement	int code ;	532:8:20941:20949	5762375	9	True				
ANR	5763228	IdentifierDecl	code		5762375	0					
ANR	5763229	IdentifierDeclType	int		5762375	0					
ANR	5763230	Identifier	code		5762375	1					
ANR	5763231	ExpressionStatement	tt = ( i + 1 < n ? t [ i + 1 ] : 1 ) - ti	534:8:20960:20996	5762375	10	True				
ANR	5763232	AssignmentExpression	tt = ( i + 1 < n ? t [ i + 1 ] : 1 ) - ti		5762375	0		=			
ANR	5763233	Identifier	tt		5762375	0					
ANR	5763234	AdditiveExpression	( i + 1 < n ? t [ i + 1 ] : 1 ) - ti		5762375	1		-			
ANR	5763235	ConditionalExpression	i + 1 < n ? t [ i + 1 ] : 1		5762375	0					
ANR	5763236	Condition	i + 1 < n		5762375	0					
ANR	5763237	RelationalExpression	i + 1 < n		5762375	0		<			
ANR	5763238	AdditiveExpression	i + 1		5762375	0		+			
ANR	5763239	Identifier	i		5762375	0					
ANR	5763240	PrimaryExpression	1		5762375	1					
ANR	5763241	Identifier	n		5762375	1					
ANR	5763242	ArrayIndexing	t [ i + 1 ]		5762375	1					
ANR	5763243	Identifier	t		5762375	0					
ANR	5763244	AdditiveExpression	i + 1		5762375	1		+			
ANR	5763245	Identifier	i		5762375	0					
ANR	5763246	PrimaryExpression	1		5762375	1					
ANR	5763247	PrimaryExpression	1		5762375	2					
ANR	5763248	Identifier	ti		5762375	1					
ANR	5763249	ExpressionStatement	rx = ( fixed ) ( dx * ( t [ i ] - tp ) / 3 + 0.5 )	535:8:21006:21046	5762375	11	True				
ANR	5763250	AssignmentExpression	rx = ( fixed ) ( dx * ( t [ i ] - tp ) / 3 + 0.5 )		5762375	0		=			
ANR	5763251	Identifier	rx		5762375	0					
ANR	5763252	CastExpression	( fixed ) ( dx * ( t [ i ] - tp ) / 3 + 0.5 )		5762375	1					
ANR	5763253	CastTarget	fixed		5762375	0					
ANR	5763254	AdditiveExpression	dx * ( t [ i ] - tp ) / 3 + 0.5		5762375	1		+			
ANR	5763255	MultiplicativeExpression	dx * ( t [ i ] - tp ) / 3		5762375	0		*			
ANR	5763256	Identifier	dx		5762375	0					
ANR	5763257	MultiplicativeExpression	( t [ i ] - tp ) / 3		5762375	1		/			
ANR	5763258	AdditiveExpression	t [ i ] - tp		5762375	0		-			
ANR	5763259	ArrayIndexing	t [ i ]		5762375	0					
ANR	5763260	Identifier	t		5762375	0					
ANR	5763261	Identifier	i		5762375	1					
ANR	5763262	Identifier	tp		5762375	1					
ANR	5763263	PrimaryExpression	3		5762375	1					
ANR	5763264	PrimaryExpression	0.5		5762375	1					
ANR	5763265	ExpressionStatement	ry = ( fixed ) ( dy * ( t [ i ] - tp ) / 3 + 0.5 )	536:8:21056:21096	5762375	12	True				
ANR	5763266	AssignmentExpression	ry = ( fixed ) ( dy * ( t [ i ] - tp ) / 3 + 0.5 )		5762375	0		=			
ANR	5763267	Identifier	ry		5762375	0					
ANR	5763268	CastExpression	( fixed ) ( dy * ( t [ i ] - tp ) / 3 + 0.5 )		5762375	1					
ANR	5763269	CastTarget	fixed		5762375	0					
ANR	5763270	AdditiveExpression	dy * ( t [ i ] - tp ) / 3 + 0.5		5762375	1		+			
ANR	5763271	MultiplicativeExpression	dy * ( t [ i ] - tp ) / 3		5762375	0		*			
ANR	5763272	Identifier	dy		5762375	0					
ANR	5763273	MultiplicativeExpression	( t [ i ] - tp ) / 3		5762375	1		/			
ANR	5763274	AdditiveExpression	t [ i ] - tp		5762375	0		-			
ANR	5763275	ArrayIndexing	t [ i ]		5762375	0					
ANR	5763276	Identifier	t		5762375	0					
ANR	5763277	Identifier	i		5762375	1					
ANR	5763278	Identifier	tp		5762375	1					
ANR	5763279	PrimaryExpression	3		5762375	1					
ANR	5763280	PrimaryExpression	0.5		5762375	1					
ANR	5763281	ExpressionStatement	sx = ( fixed ) ( x + 0.5 )	537:8:21106:21127	5762375	13	True				
ANR	5763282	AssignmentExpression	sx = ( fixed ) ( x + 0.5 )		5762375	0		=			
ANR	5763283	Identifier	sx		5762375	0					
ANR	5763284	CastExpression	( fixed ) ( x + 0.5 )		5762375	1					
ANR	5763285	CastTarget	fixed		5762375	0					
ANR	5763286	AdditiveExpression	x + 0.5		5762375	1		+			
ANR	5763287	Identifier	x		5762375	0					
ANR	5763288	PrimaryExpression	0.5		5762375	1					
ANR	5763289	ExpressionStatement	sy = ( fixed ) ( y + 0.5 )	538:8:21137:21158	5762375	14	True				
ANR	5763290	AssignmentExpression	sy = ( fixed ) ( y + 0.5 )		5762375	0		=			
ANR	5763291	Identifier	sy		5762375	0					
ANR	5763292	CastExpression	( fixed ) ( y + 0.5 )		5762375	1					
ANR	5763293	CastTarget	fixed		5762375	0					
ANR	5763294	AdditiveExpression	y + 0.5		5762375	1		+			
ANR	5763295	Identifier	y		5762375	0					
ANR	5763296	PrimaryExpression	0.5		5762375	1					
ANR	5763297	IfStatement	if ( ( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy < 0 )		5762375	15					
ANR	5763298	Condition	( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy < 0	540:12:21235:21285	5762375	0	True				
ANR	5763299	RelationalExpression	( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy < 0		5762375	0		<			
ANR	5763300	AdditiveExpression	( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy		5762375	0		+			
ANR	5763301	MultiplicativeExpression	( double ) ( sx - px ) * qx		5762375	0		*			
ANR	5763302	CastExpression	( double ) ( sx - px )		5762375	0					
ANR	5763303	CastTarget	double		5762375	0					
ANR	5763304	AdditiveExpression	sx - px		5762375	1		-			
ANR	5763305	Identifier	sx		5762375	0					
ANR	5763306	Identifier	px		5762375	1					
ANR	5763307	Identifier	qx		5762375	1					
ANR	5763308	MultiplicativeExpression	( double ) ( sy - py ) * qy		5762375	1		*			
ANR	5763309	CastExpression	( double ) ( sy - py )		5762375	0					
ANR	5763310	CastTarget	double		5762375	0					
ANR	5763311	AdditiveExpression	sy - py		5762375	1		-			
ANR	5763312	Identifier	sy		5762375	0					
ANR	5763313	Identifier	py		5762375	1					
ANR	5763314	Identifier	qy		5762375	1					
ANR	5763315	PrimaryExpression	0		5762375	1					
ANR	5763316	ExpressionStatement	"qx = - qx , qy = - qy"	541:12:21300:21318	5762375	1	True				
ANR	5763317	Expression	"qx = - qx , qy = - qy"		5762375	0					
ANR	5763318	AssignmentExpression	qx = - qx		5762375	0		=			
ANR	5763319	Identifier	qx		5762375	0					
ANR	5763320	UnaryOperationExpression	- qx		5762375	1					
ANR	5763321	UnaryOperator	-		5762375	0					
ANR	5763322	Identifier	qx		5762375	1					
ANR	5763323	AssignmentExpression	qy = - qy		5762375	1		=			
ANR	5763324	Identifier	qy		5762375	0					
ANR	5763325	UnaryOperationExpression	- qy		5762375	1					
ANR	5763326	UnaryOperator	-		5762375	0					
ANR	5763327	Identifier	qy		5762375	1					
ANR	5763328	IfStatement	if ( ( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry < 0 )		5762375	16					
ANR	5763329	Condition	( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry < 0	542:12:21332:21382	5762375	0	True				
ANR	5763330	RelationalExpression	( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry < 0		5762375	0		<			
ANR	5763331	AdditiveExpression	( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry		5762375	0		+			
ANR	5763332	MultiplicativeExpression	( double ) ( sx - px ) * rx		5762375	0		*			
ANR	5763333	CastExpression	( double ) ( sx - px )		5762375	0					
ANR	5763334	CastTarget	double		5762375	0					
ANR	5763335	AdditiveExpression	sx - px		5762375	1		-			
ANR	5763336	Identifier	sx		5762375	0					
ANR	5763337	Identifier	px		5762375	1					
ANR	5763338	Identifier	rx		5762375	1					
ANR	5763339	MultiplicativeExpression	( double ) ( sy - py ) * ry		5762375	1		*			
ANR	5763340	CastExpression	( double ) ( sy - py )		5762375	0					
ANR	5763341	CastTarget	double		5762375	0					
ANR	5763342	AdditiveExpression	sy - py		5762375	1		-			
ANR	5763343	Identifier	sy		5762375	0					
ANR	5763344	Identifier	py		5762375	1					
ANR	5763345	Identifier	ry		5762375	1					
ANR	5763346	PrimaryExpression	0		5762375	1					
ANR	5763347	ExpressionStatement	"rx = - rx , ry = - qy"	543:12:21397:21415	5762375	1	True				
ANR	5763348	Expression	"rx = - rx , ry = - qy"		5762375	0					
ANR	5763349	AssignmentExpression	rx = - rx		5762375	0		=			
ANR	5763350	Identifier	rx		5762375	0					
ANR	5763351	UnaryOperationExpression	- rx		5762375	1					
ANR	5763352	UnaryOperator	-		5762375	0					
ANR	5763353	Identifier	rx		5762375	1					
ANR	5763354	AssignmentExpression	ry = - qy		5762375	1		=			
ANR	5763355	Identifier	ry		5762375	0					
ANR	5763356	UnaryOperationExpression	- qy		5762375	1					
ANR	5763357	UnaryOperator	-		5762375	0					
ANR	5763358	Identifier	qy		5762375	1					
ANR	5763359	ExpressionStatement	"code = gx_path_add_curve_notes ( ppath , px + qx , py + qy , sx - rx , sy - ry , sx , sy , notes )"	545:8:21448:21536	5762375	17	True				
ANR	5763360	AssignmentExpression	"code = gx_path_add_curve_notes ( ppath , px + qx , py + qy , sx - rx , sy - ry , sx , sy , notes )"		5762375	0		=			
ANR	5763361	Identifier	code		5762375	0					
ANR	5763362	CallExpression	"gx_path_add_curve_notes ( ppath , px + qx , py + qy , sx - rx , sy - ry , sx , sy , notes )"		5762375	1					
ANR	5763363	Callee	gx_path_add_curve_notes		5762375	0					
ANR	5763364	Identifier	gx_path_add_curve_notes		5762375	0					
ANR	5763365	ArgumentList	ppath		5762375	1					
ANR	5763366	Argument	ppath		5762375	0					
ANR	5763367	Identifier	ppath		5762375	0					
ANR	5763368	Argument	px + qx		5762375	1					
ANR	5763369	AdditiveExpression	px + qx		5762375	0		+			
ANR	5763370	Identifier	px		5762375	0					
ANR	5763371	Identifier	qx		5762375	1					
ANR	5763372	Argument	py + qy		5762375	2					
ANR	5763373	AdditiveExpression	py + qy		5762375	0		+			
ANR	5763374	Identifier	py		5762375	0					
ANR	5763375	Identifier	qy		5762375	1					
ANR	5763376	Argument	sx - rx		5762375	3					
ANR	5763377	AdditiveExpression	sx - rx		5762375	0		-			
ANR	5763378	Identifier	sx		5762375	0					
ANR	5763379	Identifier	rx		5762375	1					
ANR	5763380	Argument	sy - ry		5762375	4					
ANR	5763381	AdditiveExpression	sy - ry		5762375	0		-			
ANR	5763382	Identifier	sy		5762375	0					
ANR	5763383	Identifier	ry		5762375	1					
ANR	5763384	Argument	sx		5762375	5					
ANR	5763385	Identifier	sx		5762375	0					
ANR	5763386	Argument	sy		5762375	6					
ANR	5763387	Identifier	sy		5762375	0					
ANR	5763388	Argument	notes		5762375	7					
ANR	5763389	Identifier	notes		5762375	0					
ANR	5763390	IfStatement	if ( code < 0 )		5762375	18					
ANR	5763391	Condition	code < 0	546:12:21550:21557	5762375	0	True				
ANR	5763392	RelationalExpression	code < 0		5762375	0		<			
ANR	5763393	Identifier	code		5762375	0					
ANR	5763394	PrimaryExpression	0		5762375	1					
ANR	5763395	ReturnStatement	return code ;	547:12:21572:21583	5762375	1	True				
ANR	5763396	Identifier	code		5762375	0					
ANR	5763397	ExpressionStatement	notes |= sn_not_first	548:8:21593:21614	5762375	19	True				
ANR	5763398	AssignmentExpression	notes |= sn_not_first		5762375	0		|=			
ANR	5763399	Identifier	notes		5762375	0					
ANR	5763400	Identifier	sn_not_first		5762375	1					
ANR	5763401	ExpressionStatement	px = sx	549:8:21624:21631	5762375	20	True				
ANR	5763402	AssignmentExpression	px = sx		5762375	0		=			
ANR	5763403	Identifier	px		5762375	0					
ANR	5763404	Identifier	sx		5762375	1					
ANR	5763405	ExpressionStatement	py = sy	550:8:21641:21648	5762375	21	True				
ANR	5763406	AssignmentExpression	py = sy		5762375	0		=			
ANR	5763407	Identifier	py		5762375	0					
ANR	5763408	Identifier	sy		5762375	1					
ANR	5763409	ExpressionStatement	qx = ( fixed ) ( dx * tt / 3 + 0.5 )	551:8:21658:21689	5762375	22	True				
ANR	5763410	AssignmentExpression	qx = ( fixed ) ( dx * tt / 3 + 0.5 )		5762375	0		=			
ANR	5763411	Identifier	qx		5762375	0					
ANR	5763412	CastExpression	( fixed ) ( dx * tt / 3 + 0.5 )		5762375	1					
ANR	5763413	CastTarget	fixed		5762375	0					
ANR	5763414	AdditiveExpression	dx * tt / 3 + 0.5		5762375	1		+			
ANR	5763415	MultiplicativeExpression	dx * tt / 3		5762375	0		*			
ANR	5763416	Identifier	dx		5762375	0					
ANR	5763417	MultiplicativeExpression	tt / 3		5762375	1		/			
ANR	5763418	Identifier	tt		5762375	0					
ANR	5763419	PrimaryExpression	3		5762375	1					
ANR	5763420	PrimaryExpression	0.5		5762375	1					
ANR	5763421	ExpressionStatement	qy = ( fixed ) ( dy * tt / 3 + 0.5 )	552:8:21699:21730	5762375	23	True				
ANR	5763422	AssignmentExpression	qy = ( fixed ) ( dy * tt / 3 + 0.5 )		5762375	0		=			
ANR	5763423	Identifier	qy		5762375	0					
ANR	5763424	CastExpression	( fixed ) ( dy * tt / 3 + 0.5 )		5762375	1					
ANR	5763425	CastTarget	fixed		5762375	0					
ANR	5763426	AdditiveExpression	dy * tt / 3 + 0.5		5762375	1		+			
ANR	5763427	MultiplicativeExpression	dy * tt / 3		5762375	0		*			
ANR	5763428	Identifier	dy		5762375	0					
ANR	5763429	MultiplicativeExpression	tt / 3		5762375	1		/			
ANR	5763430	Identifier	tt		5762375	0					
ANR	5763431	PrimaryExpression	3		5762375	1					
ANR	5763432	PrimaryExpression	0.5		5762375	1					
ANR	5763433	ExpressionStatement	tp = t [ i ]	553:8:21740:21749	5762375	24	True				
ANR	5763434	AssignmentExpression	tp = t [ i ]		5762375	0		=			
ANR	5763435	Identifier	tp		5762375	0					
ANR	5763436	ArrayIndexing	t [ i ]		5762375	1					
ANR	5763437	Identifier	t		5762375	0					
ANR	5763438	Identifier	i		5762375	1					
ANR	5763439	ExpressionStatement	sx = pc -> pt . x	555:4:21761:21774	5762375	31	True				
ANR	5763440	AssignmentExpression	sx = pc -> pt . x		5762375	0		=			
ANR	5763441	Identifier	sx		5762375	0					
ANR	5763442	MemberAccess	pc -> pt . x		5762375	1					
ANR	5763443	PtrMemberAccess	pc -> pt		5762375	0					
ANR	5763444	Identifier	pc		5762375	0					
ANR	5763445	Identifier	pt		5762375	1					
ANR	5763446	Identifier	x		5762375	1					
ANR	5763447	ExpressionStatement	sy = pc -> pt . y	556:4:21780:21793	5762375	32	True				
ANR	5763448	AssignmentExpression	sy = pc -> pt . y		5762375	0		=			
ANR	5763449	Identifier	sy		5762375	0					
ANR	5763450	MemberAccess	pc -> pt . y		5762375	1					
ANR	5763451	PtrMemberAccess	pc -> pt		5762375	0					
ANR	5763452	Identifier	pc		5762375	0					
ANR	5763453	Identifier	pt		5762375	1					
ANR	5763454	Identifier	y		5762375	1					
ANR	5763455	ExpressionStatement	rx = ( fixed ) ( ( pc -> pt . x - pc -> p2 . x ) * tt + 0.5 )	557:4:21799:21845	5762375	33	True				
ANR	5763456	AssignmentExpression	rx = ( fixed ) ( ( pc -> pt . x - pc -> p2 . x ) * tt + 0.5 )		5762375	0		=			
ANR	5763457	Identifier	rx		5762375	0					
ANR	5763458	CastExpression	( fixed ) ( ( pc -> pt . x - pc -> p2 . x ) * tt + 0.5 )		5762375	1					
ANR	5763459	CastTarget	fixed		5762375	0					
ANR	5763460	AdditiveExpression	( pc -> pt . x - pc -> p2 . x ) * tt + 0.5		5762375	1		+			
ANR	5763461	MultiplicativeExpression	( pc -> pt . x - pc -> p2 . x ) * tt		5762375	0		*			
ANR	5763462	AdditiveExpression	pc -> pt . x - pc -> p2 . x		5762375	0		-			
ANR	5763463	MemberAccess	pc -> pt . x		5762375	0					
ANR	5763464	PtrMemberAccess	pc -> pt		5762375	0					
ANR	5763465	Identifier	pc		5762375	0					
ANR	5763466	Identifier	pt		5762375	1					
ANR	5763467	Identifier	x		5762375	1					
ANR	5763468	MemberAccess	pc -> p2 . x		5762375	1					
ANR	5763469	PtrMemberAccess	pc -> p2		5762375	0					
ANR	5763470	Identifier	pc		5762375	0					
ANR	5763471	Identifier	p2		5762375	1					
ANR	5763472	Identifier	x		5762375	1					
ANR	5763473	Identifier	tt		5762375	1					
ANR	5763474	PrimaryExpression	0.5		5762375	1					
ANR	5763475	ExpressionStatement	ry = ( fixed ) ( ( pc -> pt . y - pc -> p2 . y ) * tt + 0.5 )	558:4:21851:21897	5762375	34	True				
ANR	5763476	AssignmentExpression	ry = ( fixed ) ( ( pc -> pt . y - pc -> p2 . y ) * tt + 0.5 )		5762375	0		=			
ANR	5763477	Identifier	ry		5762375	0					
ANR	5763478	CastExpression	( fixed ) ( ( pc -> pt . y - pc -> p2 . y ) * tt + 0.5 )		5762375	1					
ANR	5763479	CastTarget	fixed		5762375	0					
ANR	5763480	AdditiveExpression	( pc -> pt . y - pc -> p2 . y ) * tt + 0.5		5762375	1		+			
ANR	5763481	MultiplicativeExpression	( pc -> pt . y - pc -> p2 . y ) * tt		5762375	0		*			
ANR	5763482	AdditiveExpression	pc -> pt . y - pc -> p2 . y		5762375	0		-			
ANR	5763483	MemberAccess	pc -> pt . y		5762375	0					
ANR	5763484	PtrMemberAccess	pc -> pt		5762375	0					
ANR	5763485	Identifier	pc		5762375	0					
ANR	5763486	Identifier	pt		5762375	1					
ANR	5763487	Identifier	y		5762375	1					
ANR	5763488	MemberAccess	pc -> p2 . y		5762375	1					
ANR	5763489	PtrMemberAccess	pc -> p2		5762375	0					
ANR	5763490	Identifier	pc		5762375	0					
ANR	5763491	Identifier	p2		5762375	1					
ANR	5763492	Identifier	y		5762375	1					
ANR	5763493	Identifier	tt		5762375	1					
ANR	5763494	PrimaryExpression	0.5		5762375	1					
ANR	5763495	IfStatement	if ( ( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy < 0 )		5762375	35					
ANR	5763496	Condition	( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy < 0	560:8:21965:22015	5762375	0	True				
ANR	5763497	RelationalExpression	( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy < 0		5762375	0		<			
ANR	5763498	AdditiveExpression	( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy		5762375	0		+			
ANR	5763499	MultiplicativeExpression	( double ) ( sx - px ) * qx		5762375	0		*			
ANR	5763500	CastExpression	( double ) ( sx - px )		5762375	0					
ANR	5763501	CastTarget	double		5762375	0					
ANR	5763502	AdditiveExpression	sx - px		5762375	1		-			
ANR	5763503	Identifier	sx		5762375	0					
ANR	5763504	Identifier	px		5762375	1					
ANR	5763505	Identifier	qx		5762375	1					
ANR	5763506	MultiplicativeExpression	( double ) ( sy - py ) * qy		5762375	1		*			
ANR	5763507	CastExpression	( double ) ( sy - py )		5762375	0					
ANR	5763508	CastTarget	double		5762375	0					
ANR	5763509	AdditiveExpression	sy - py		5762375	1		-			
ANR	5763510	Identifier	sy		5762375	0					
ANR	5763511	Identifier	py		5762375	1					
ANR	5763512	Identifier	qy		5762375	1					
ANR	5763513	PrimaryExpression	0		5762375	1					
ANR	5763514	ExpressionStatement	"qx = - qx , qy = - qy"	561:8:22026:22044	5762375	1	True				
ANR	5763515	Expression	"qx = - qx , qy = - qy"		5762375	0					
ANR	5763516	AssignmentExpression	qx = - qx		5762375	0		=			
ANR	5763517	Identifier	qx		5762375	0					
ANR	5763518	UnaryOperationExpression	- qx		5762375	1					
ANR	5763519	UnaryOperator	-		5762375	0					
ANR	5763520	Identifier	qx		5762375	1					
ANR	5763521	AssignmentExpression	qy = - qy		5762375	1		=			
ANR	5763522	Identifier	qy		5762375	0					
ANR	5763523	UnaryOperationExpression	- qy		5762375	1					
ANR	5763524	UnaryOperator	-		5762375	0					
ANR	5763525	Identifier	qy		5762375	1					
ANR	5763526	IfStatement	if ( ( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry < 0 )		5762375	36					
ANR	5763527	Condition	( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry < 0	562:8:22054:22104	5762375	0	True				
ANR	5763528	RelationalExpression	( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry < 0		5762375	0		<			
ANR	5763529	AdditiveExpression	( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry		5762375	0		+			
ANR	5763530	MultiplicativeExpression	( double ) ( sx - px ) * rx		5762375	0		*			
ANR	5763531	CastExpression	( double ) ( sx - px )		5762375	0					
ANR	5763532	CastTarget	double		5762375	0					
ANR	5763533	AdditiveExpression	sx - px		5762375	1		-			
ANR	5763534	Identifier	sx		5762375	0					
ANR	5763535	Identifier	px		5762375	1					
ANR	5763536	Identifier	rx		5762375	1					
ANR	5763537	MultiplicativeExpression	( double ) ( sy - py ) * ry		5762375	1		*			
ANR	5763538	CastExpression	( double ) ( sy - py )		5762375	0					
ANR	5763539	CastTarget	double		5762375	0					
ANR	5763540	AdditiveExpression	sy - py		5762375	1		-			
ANR	5763541	Identifier	sy		5762375	0					
ANR	5763542	Identifier	py		5762375	1					
ANR	5763543	Identifier	ry		5762375	1					
ANR	5763544	PrimaryExpression	0		5762375	1					
ANR	5763545	ExpressionStatement	"rx = - rx , ry = - qy"	563:8:22115:22133	5762375	1	True				
ANR	5763546	Expression	"rx = - rx , ry = - qy"		5762375	0					
ANR	5763547	AssignmentExpression	rx = - rx		5762375	0		=			
ANR	5763548	Identifier	rx		5762375	0					
ANR	5763549	UnaryOperationExpression	- rx		5762375	1					
ANR	5763550	UnaryOperator	-		5762375	0					
ANR	5763551	Identifier	rx		5762375	1					
ANR	5763552	AssignmentExpression	ry = - qy		5762375	1		=			
ANR	5763553	Identifier	ry		5762375	0					
ANR	5763554	UnaryOperationExpression	- qy		5762375	1					
ANR	5763555	UnaryOperator	-		5762375	0					
ANR	5763556	Identifier	qy		5762375	1					
ANR	5763557	ReturnStatement	"return gx_path_add_curve_notes ( ppath , px + qx , py + qy , sx - rx , sy - ry , sx , sy , notes ) ;"	564:4:22139:22227	5762375	37	True				
ANR	5763558	CallExpression	"gx_path_add_curve_notes ( ppath , px + qx , py + qy , sx - rx , sy - ry , sx , sy , notes )"		5762375	0					
ANR	5763559	Callee	gx_path_add_curve_notes		5762375	0					
ANR	5763560	Identifier	gx_path_add_curve_notes		5762375	0					
ANR	5763561	ArgumentList	ppath		5762375	1					
ANR	5763562	Argument	ppath		5762375	0					
ANR	5763563	Identifier	ppath		5762375	0					
ANR	5763564	Argument	px + qx		5762375	1					
ANR	5763565	AdditiveExpression	px + qx		5762375	0		+			
ANR	5763566	Identifier	px		5762375	0					
ANR	5763567	Identifier	qx		5762375	1					
ANR	5763568	Argument	py + qy		5762375	2					
ANR	5763569	AdditiveExpression	py + qy		5762375	0		+			
ANR	5763570	Identifier	py		5762375	0					
ANR	5763571	Identifier	qy		5762375	1					
ANR	5763572	Argument	sx - rx		5762375	3					
ANR	5763573	AdditiveExpression	sx - rx		5762375	0		-			
ANR	5763574	Identifier	sx		5762375	0					
ANR	5763575	Identifier	rx		5762375	1					
ANR	5763576	Argument	sy - ry		5762375	4					
ANR	5763577	AdditiveExpression	sy - ry		5762375	0		-			
ANR	5763578	Identifier	sy		5762375	0					
ANR	5763579	Identifier	ry		5762375	1					
ANR	5763580	Argument	sx		5762375	5					
ANR	5763581	Identifier	sx		5762375	0					
ANR	5763582	Argument	sy		5762375	6					
ANR	5763583	Identifier	sy		5762375	0					
ANR	5763584	Argument	notes		5762375	7					
ANR	5763585	Identifier	notes		5762375	0					
ANR	5763586	ReturnType	int		5762375	1					
ANR	5763587	Identifier	gx_curve_monotonize		5762375	2					
ANR	5763588	ParameterList	"gx_path * ppath , const curve_segment * pc"		5762375	3					
ANR	5763589	Parameter	gx_path * ppath	461:20:18327:18341	5762375	0	True				
ANR	5763590	ParameterType	gx_path *		5762375	0					
ANR	5763591	Identifier	ppath		5762375	1					
ANR	5763592	Parameter	const curve_segment * pc	461:37:18344:18367	5762375	1	True				
ANR	5763593	ParameterType	const curve_segment *		5762375	0					
ANR	5763594	Identifier	pc		5762375	1					
ANR	5763595	CFGEntryNode	ENTRY		5762375		True				
ANR	5763596	CFGExitNode	EXIT		5762375		True				
ANR	5763597	Symbol	tt		5762375						
ANR	5763598	Symbol	gx_curve_monotonic_points		5762375						
ANR	5763599	Symbol	n0		5762375						
ANR	5763600	Symbol	notes		5762375						
ANR	5763601	Symbol	n1		5762375						
ANR	5763602	Symbol	pc -> p1 . y		5762375						
ANR	5763603	Symbol	pc -> p1 . x		5762375						
ANR	5763604	Symbol	px		5762375						
ANR	5763605	Symbol	delta		5762375						
ANR	5763606	Symbol	py		5762375						
ANR	5763607	Symbol	pc -> pt . x		5762375						
ANR	5763608	Symbol	pc -> pt . y		5762375						
ANR	5763609	Symbol	pc -> p2 . x		5762375						
ANR	5763610	Symbol	dx		5762375						
ANR	5763611	Symbol	pc -> p2 . y		5762375						
ANR	5763612	Symbol	dy		5762375						
ANR	5763613	Symbol	v12		5762375						
ANR	5763614	Symbol	pc -> p2		5762375						
ANR	5763615	Symbol	gx_path_add_curve_notes		5762375						
ANR	5763616	Symbol	pc -> p1		5762375						
ANR	5763617	Symbol	* ppath		5762375						
ANR	5763618	Symbol	qx		5762375						
ANR	5763619	Symbol	pc -> notes		5762375						
ANR	5763620	Symbol	qy		5762375						
ANR	5763621	Symbol	omt2		5762375						
ANR	5763622	Symbol	omt3		5762375						
ANR	5763623	Symbol	ppath -> position . x		5762375						
ANR	5763624	Symbol	* n0		5762375						
ANR	5763625	Symbol	ppath -> position . y		5762375						
ANR	5763626	Symbol	ax		5762375						
ANR	5763627	Symbol	x0		5762375						
ANR	5763628	Symbol	ay		5762375						
ANR	5763629	Symbol	* pc		5762375						
ANR	5763630	Symbol	t2		5762375						
ANR	5763631	Symbol	t3		5762375						
ANR	5763632	Symbol	code		5762375						
ANR	5763633	Symbol	rx		5762375						
ANR	5763634	Symbol	ry		5762375						
ANR	5763635	Symbol	ppath		5762375						
ANR	5763636	Symbol	bx		5762375						
ANR	5763637	Symbol	y0		5762375						
ANR	5763638	Symbol	by		5762375						
ANR	5763639	Symbol	omt		5762375						
ANR	5763640	Symbol	pc -> pt		5762375						
ANR	5763641	Symbol	any_abs		5762375						
ANR	5763642	Symbol	c		5762375						
ANR	5763643	Symbol	sx		5762375						
ANR	5763644	Symbol	sy		5762375						
ANR	5763645	Symbol	i		5762375						
ANR	5763646	Symbol	j		5762375						
ANR	5763647	Symbol	k		5762375						
ANR	5763648	Symbol	* c		5762375						
ANR	5763649	Symbol	n		5762375						
ANR	5763650	Symbol	pc		5762375						
ANR	5763651	Symbol	* i		5762375						
ANR	5763652	Symbol	t		5762375						
ANR	5763653	Symbol	* j		5762375						
ANR	5763654	Symbol	cx		5762375						
ANR	5763655	Symbol	* k		5762375						
ANR	5763656	Symbol	ti		5762375						
ANR	5763657	Symbol	v01		5762375						
ANR	5763658	Symbol	cy		5762375						
ANR	5763659	Symbol	v		5762375						
ANR	5763660	Symbol	w		5762375						
ANR	5763661	Symbol	* n		5762375						
ANR	5763662	Symbol	x		5762375						
ANR	5763663	Symbol	ddy		5762375						
ANR	5763664	Symbol	y		5762375						
ANR	5763665	Symbol	ddx		5762375						
ANR	5763666	Symbol	sn_not_first		5762375						
ANR	5763667	Symbol	ppath -> position		5762375						
ANR	5763668	Symbol	tp		5762375						
ANR	5763669	Symbol	* t		5762375						
ANR	5763670	Function	gx_curve_monotonic_points	574:0:22586:27450							
ANR	5763671	FunctionDef	"gx_curve_monotonic_points (fixed v0 , fixed v1 , fixed v2 , fixed v3 , double pst [ 2 ])"		5763670	0					
ANR	5763672	CompoundStatement		577:0:22697:27450	5763670	0					
ANR	5763673	IdentifierDeclStatement	"fixed v01 , v12 , a , b , c , b2 , a3 ;"	595:4:23466:23497	5763670	0	True				
ANR	5763674	IdentifierDecl	v01		5763670	0					
ANR	5763675	IdentifierDeclType	fixed		5763670	0					
ANR	5763676	Identifier	v01		5763670	1					
ANR	5763677	IdentifierDecl	v12		5763670	1					
ANR	5763678	IdentifierDeclType	fixed		5763670	0					
ANR	5763679	Identifier	v12		5763670	1					
ANR	5763680	IdentifierDecl	a		5763670	2					
ANR	5763681	IdentifierDeclType	fixed		5763670	0					
ANR	5763682	Identifier	a		5763670	1					
ANR	5763683	IdentifierDecl	b		5763670	3					
ANR	5763684	IdentifierDeclType	fixed		5763670	0					
ANR	5763685	Identifier	b		5763670	1					
ANR	5763686	IdentifierDecl	c		5763670	4					
ANR	5763687	IdentifierDeclType	fixed		5763670	0					
ANR	5763688	Identifier	c		5763670	1					
ANR	5763689	IdentifierDecl	b2		5763670	5					
ANR	5763690	IdentifierDeclType	fixed		5763670	0					
ANR	5763691	Identifier	b2		5763670	1					
ANR	5763692	IdentifierDecl	a3		5763670	6					
ANR	5763693	IdentifierDeclType	fixed		5763670	0					
ANR	5763694	Identifier	a3		5763670	1					
ANR	5763695	IdentifierDeclStatement	"fixed dv_end , b2abs , a3abs ;"	596:4:23503:23529	5763670	1	True				
ANR	5763696	IdentifierDecl	dv_end		5763670	0					
ANR	5763697	IdentifierDeclType	fixed		5763670	0					
ANR	5763698	Identifier	dv_end		5763670	1					
ANR	5763699	IdentifierDecl	b2abs		5763670	1					
ANR	5763700	IdentifierDeclType	fixed		5763670	0					
ANR	5763701	Identifier	b2abs		5763670	1					
ANR	5763702	IdentifierDecl	a3abs		5763670	2					
ANR	5763703	IdentifierDeclType	fixed		5763670	0					
ANR	5763704	Identifier	a3abs		5763670	1					
ANR	5763705	ExpressionStatement	"curve_points_to_coefficients ( v0 , v1 , v2 , v3 , a , b , c , v01 , v12 )"	598:4:23536:23599	5763670	2	True				
ANR	5763706	CallExpression	"curve_points_to_coefficients ( v0 , v1 , v2 , v3 , a , b , c , v01 , v12 )"		5763670	0					
ANR	5763707	Callee	curve_points_to_coefficients		5763670	0					
ANR	5763708	Identifier	curve_points_to_coefficients		5763670	0					
ANR	5763709	ArgumentList	v0		5763670	1					
ANR	5763710	Argument	v0		5763670	0					
ANR	5763711	Identifier	v0		5763670	0					
ANR	5763712	Argument	v1		5763670	1					
ANR	5763713	Identifier	v1		5763670	0					
ANR	5763714	Argument	v2		5763670	2					
ANR	5763715	Identifier	v2		5763670	0					
ANR	5763716	Argument	v3		5763670	3					
ANR	5763717	Identifier	v3		5763670	0					
ANR	5763718	Argument	a		5763670	4					
ANR	5763719	Identifier	a		5763670	0					
ANR	5763720	Argument	b		5763670	5					
ANR	5763721	Identifier	b		5763670	0					
ANR	5763722	Argument	c		5763670	6					
ANR	5763723	Identifier	c		5763670	0					
ANR	5763724	Argument	v01		5763670	7					
ANR	5763725	Identifier	v01		5763670	0					
ANR	5763726	Argument	v12		5763670	8					
ANR	5763727	Identifier	v12		5763670	0					
ANR	5763728	ExpressionStatement	b2 = b << 1	599:4:23605:23616	5763670	3	True				
ANR	5763729	AssignmentExpression	b2 = b << 1		5763670	0		=			
ANR	5763730	Identifier	b2		5763670	0					
ANR	5763731	ShiftExpression	b << 1		5763670	1		<<			
ANR	5763732	Identifier	b		5763670	0					
ANR	5763733	PrimaryExpression	1		5763670	1					
ANR	5763734	ExpressionStatement	a3 = ( a << 1 ) + a	600:4:23622:23639	5763670	4	True				
ANR	5763735	AssignmentExpression	a3 = ( a << 1 ) + a		5763670	0		=			
ANR	5763736	Identifier	a3		5763670	0					
ANR	5763737	AdditiveExpression	( a << 1 ) + a		5763670	1		+			
ANR	5763738	ShiftExpression	a << 1		5763670	0		<<			
ANR	5763739	Identifier	a		5763670	0					
ANR	5763740	PrimaryExpression	1		5763670	1					
ANR	5763741	Identifier	a		5763670	1					
ANR	5763742	IfStatement	if ( a == 0 )		5763670	5					
ANR	5763743	Condition	a == 0	605:8:23791:23796	5763670	0	True				
ANR	5763744	EqualityExpression	a == 0		5763670	0		==			
ANR	5763745	Identifier	a		5763670	0					
ANR	5763746	PrimaryExpression	0		5763670	1					
ANR	5763747	CompoundStatement		29:16:1101:1101	5763670	1					
ANR	5763748	IfStatement	if ( ( b ^ c ) < 0 && any_abs ( c ) < any_abs ( b2 ) && c != 0 )		5763670	0					
ANR	5763749	Condition	( b ^ c ) < 0 && any_abs ( c ) < any_abs ( b2 ) && c != 0	606:12:23813:23861	5763670	0	True				
ANR	5763750	AndExpression	( b ^ c ) < 0 && any_abs ( c ) < any_abs ( b2 ) && c != 0		5763670	0		&&			
ANR	5763751	RelationalExpression	( b ^ c ) < 0		5763670	0		<			
ANR	5763752	ExclusiveOrExpression	b ^ c		5763670	0		^			
ANR	5763753	Identifier	b		5763670	0					
ANR	5763754	Identifier	c		5763670	1					
ANR	5763755	PrimaryExpression	0		5763670	1					
ANR	5763756	AndExpression	any_abs ( c ) < any_abs ( b2 ) && c != 0		5763670	1		&&			
ANR	5763757	RelationalExpression	any_abs ( c ) < any_abs ( b2 )		5763670	0		<			
ANR	5763758	CallExpression	any_abs ( c )		5763670	0					
ANR	5763759	Callee	any_abs		5763670	0					
ANR	5763760	Identifier	any_abs		5763670	0					
ANR	5763761	ArgumentList	c		5763670	1					
ANR	5763762	Argument	c		5763670	0					
ANR	5763763	Identifier	c		5763670	0					
ANR	5763764	CallExpression	any_abs ( b2 )		5763670	1					
ANR	5763765	Callee	any_abs		5763670	0					
ANR	5763766	Identifier	any_abs		5763670	0					
ANR	5763767	ArgumentList	b2		5763670	1					
ANR	5763768	Argument	b2		5763670	0					
ANR	5763769	Identifier	b2		5763670	0					
ANR	5763770	EqualityExpression	c != 0		5763670	1		!=			
ANR	5763771	Identifier	c		5763670	0					
ANR	5763772	PrimaryExpression	0		5763670	1					
ANR	5763773	CompoundStatement		30:63:1166:1166	5763670	1					
ANR	5763774	ExpressionStatement	* pst = ( double ) ( - c ) / b2	607:12:23878:23902	5763670	0	True				
ANR	5763775	AssignmentExpression	* pst = ( double ) ( - c ) / b2		5763670	0		=			
ANR	5763776	UnaryOperationExpression	* pst		5763670	0					
ANR	5763777	UnaryOperator	*		5763670	0					
ANR	5763778	Identifier	pst		5763670	1					
ANR	5763779	MultiplicativeExpression	( double ) ( - c ) / b2		5763670	1		/			
ANR	5763780	CastExpression	( double ) ( - c )		5763670	0					
ANR	5763781	CastTarget	double		5763670	0					
ANR	5763782	UnaryOperationExpression	- c		5763670	1					
ANR	5763783	UnaryOperator	-		5763670	0					
ANR	5763784	Identifier	c		5763670	1					
ANR	5763785	Identifier	b2		5763670	1					
ANR	5763786	ReturnStatement	return 1 ;	608:12:23916:23924	5763670	1	True				
ANR	5763787	PrimaryExpression	1		5763670	0					
ANR	5763788	ElseStatement	else		5763670	0					
ANR	5763789	ReturnStatement	return 0 ;	610:12:23953:23961	5763670	0	True				
ANR	5763790	PrimaryExpression	0		5763670	0					
ANR	5763791	IfStatement	if ( c == 0 )		5763670	6					
ANR	5763792	Condition	c == 0	617:8:24188:24193	5763670	0	True				
ANR	5763793	EqualityExpression	c == 0		5763670	0		==			
ANR	5763794	Identifier	c		5763670	0					
ANR	5763795	PrimaryExpression	0		5763670	1					
ANR	5763796	CompoundStatement		41:16:1498:1498	5763670	1					
ANR	5763797	IfStatement	if ( ( a ^ b ) < 0 && any_abs ( b2 ) < any_abs ( a3 ) && b != 0 )		5763670	0					
ANR	5763798	Condition	( a ^ b ) < 0 && any_abs ( b2 ) < any_abs ( a3 ) && b != 0	618:12:24210:24259	5763670	0	True				
ANR	5763799	AndExpression	( a ^ b ) < 0 && any_abs ( b2 ) < any_abs ( a3 ) && b != 0		5763670	0		&&			
ANR	5763800	RelationalExpression	( a ^ b ) < 0		5763670	0		<			
ANR	5763801	ExclusiveOrExpression	a ^ b		5763670	0		^			
ANR	5763802	Identifier	a		5763670	0					
ANR	5763803	Identifier	b		5763670	1					
ANR	5763804	PrimaryExpression	0		5763670	1					
ANR	5763805	AndExpression	any_abs ( b2 ) < any_abs ( a3 ) && b != 0		5763670	1		&&			
ANR	5763806	RelationalExpression	any_abs ( b2 ) < any_abs ( a3 )		5763670	0		<			
ANR	5763807	CallExpression	any_abs ( b2 )		5763670	0					
ANR	5763808	Callee	any_abs		5763670	0					
ANR	5763809	Identifier	any_abs		5763670	0					
ANR	5763810	ArgumentList	b2		5763670	1					
ANR	5763811	Argument	b2		5763670	0					
ANR	5763812	Identifier	b2		5763670	0					
ANR	5763813	CallExpression	any_abs ( a3 )		5763670	1					
ANR	5763814	Callee	any_abs		5763670	0					
ANR	5763815	Identifier	any_abs		5763670	0					
ANR	5763816	ArgumentList	a3		5763670	1					
ANR	5763817	Argument	a3		5763670	0					
ANR	5763818	Identifier	a3		5763670	0					
ANR	5763819	EqualityExpression	b != 0		5763670	1		!=			
ANR	5763820	Identifier	b		5763670	0					
ANR	5763821	PrimaryExpression	0		5763670	1					
ANR	5763822	CompoundStatement		42:64:1564:1564	5763670	1					
ANR	5763823	ExpressionStatement	* pst = ( double ) ( - b2 ) / a3	619:12:24276:24301	5763670	0	True				
ANR	5763824	AssignmentExpression	* pst = ( double ) ( - b2 ) / a3		5763670	0		=			
ANR	5763825	UnaryOperationExpression	* pst		5763670	0					
ANR	5763826	UnaryOperator	*		5763670	0					
ANR	5763827	Identifier	pst		5763670	1					
ANR	5763828	MultiplicativeExpression	( double ) ( - b2 ) / a3		5763670	1		/			
ANR	5763829	CastExpression	( double ) ( - b2 )		5763670	0					
ANR	5763830	CastTarget	double		5763670	0					
ANR	5763831	UnaryOperationExpression	- b2		5763670	1					
ANR	5763832	UnaryOperator	-		5763670	0					
ANR	5763833	Identifier	b2		5763670	1					
ANR	5763834	Identifier	a3		5763670	1					
ANR	5763835	ReturnStatement	return 1 ;	620:12:24315:24323	5763670	1	True				
ANR	5763836	PrimaryExpression	1		5763670	0					
ANR	5763837	ElseStatement	else		5763670	0					
ANR	5763838	ReturnStatement	return 0 ;	622:12:24352:24360	5763670	0	True				
ANR	5763839	PrimaryExpression	0		5763670	0					
ANR	5763840	ElseStatement	else		5763670	0					
ANR	5763841	IfStatement	if ( ( dv_end = a3 + b2 + c ) == 0 )		5763670	0					
ANR	5763842	Condition	( dv_end = a3 + b2 + c ) == 0	630:13:24636:24662	5763670	0	True				
ANR	5763843	EqualityExpression	( dv_end = a3 + b2 + c ) == 0		5763670	0		==			
ANR	5763844	AssignmentExpression	dv_end = a3 + b2 + c		5763670	0		=			
ANR	5763845	Identifier	dv_end		5763670	0					
ANR	5763846	AdditiveExpression	a3 + b2 + c		5763670	1		+			
ANR	5763847	Identifier	a3		5763670	0					
ANR	5763848	AdditiveExpression	b2 + c		5763670	1		+			
ANR	5763849	Identifier	b2		5763670	0					
ANR	5763850	Identifier	c		5763670	1					
ANR	5763851	PrimaryExpression	0		5763670	1					
ANR	5763852	CompoundStatement		54:42:1967:1967	5763670	1					
ANR	5763853	IfStatement	if ( ( a ^ b ) < 0 && ( b2abs = any_abs ( b2 ) ) > ( a3abs = any_abs ( a3 ) ) && b2abs < a3abs << 1 )		5763670	0					
ANR	5763854	Condition	( a ^ b ) < 0 && ( b2abs = any_abs ( b2 ) ) > ( a3abs = any_abs ( a3 ) ) && b2abs < a3abs << 1	631:12:24679:24784	5763670	0	True				
ANR	5763855	AndExpression	( a ^ b ) < 0 && ( b2abs = any_abs ( b2 ) ) > ( a3abs = any_abs ( a3 ) ) && b2abs < a3abs << 1		5763670	0		&&			
ANR	5763856	RelationalExpression	( a ^ b ) < 0		5763670	0		<			
ANR	5763857	ExclusiveOrExpression	a ^ b		5763670	0		^			
ANR	5763858	Identifier	a		5763670	0					
ANR	5763859	Identifier	b		5763670	1					
ANR	5763860	PrimaryExpression	0		5763670	1					
ANR	5763861	AndExpression	( b2abs = any_abs ( b2 ) ) > ( a3abs = any_abs ( a3 ) ) && b2abs < a3abs << 1		5763670	1		&&			
ANR	5763862	RelationalExpression	( b2abs = any_abs ( b2 ) ) > ( a3abs = any_abs ( a3 ) )		5763670	0		>			
ANR	5763863	AssignmentExpression	b2abs = any_abs ( b2 )		5763670	0		=			
ANR	5763864	Identifier	b2abs		5763670	0					
ANR	5763865	CallExpression	any_abs ( b2 )		5763670	1					
ANR	5763866	Callee	any_abs		5763670	0					
ANR	5763867	Identifier	any_abs		5763670	0					
ANR	5763868	ArgumentList	b2		5763670	1					
ANR	5763869	Argument	b2		5763670	0					
ANR	5763870	Identifier	b2		5763670	0					
ANR	5763871	AssignmentExpression	a3abs = any_abs ( a3 )		5763670	1		=			
ANR	5763872	Identifier	a3abs		5763670	0					
ANR	5763873	CallExpression	any_abs ( a3 )		5763670	1					
ANR	5763874	Callee	any_abs		5763670	0					
ANR	5763875	Identifier	any_abs		5763670	0					
ANR	5763876	ArgumentList	a3		5763670	1					
ANR	5763877	Argument	a3		5763670	0					
ANR	5763878	Identifier	a3		5763670	0					
ANR	5763879	RelationalExpression	b2abs < a3abs << 1		5763670	1		<			
ANR	5763880	Identifier	b2abs		5763670	0					
ANR	5763881	ShiftExpression	a3abs << 1		5763670	1		<<			
ANR	5763882	Identifier	a3abs		5763670	0					
ANR	5763883	PrimaryExpression	1		5763670	1					
ANR	5763884	CompoundStatement		58:14:2102:2102	5763670	1					
ANR	5763885	ExpressionStatement	* pst = ( double ) ( - b2 - a3 ) / a3	635:12:24814:24844	5763670	0	True				
ANR	5763886	AssignmentExpression	* pst = ( double ) ( - b2 - a3 ) / a3		5763670	0		=			
ANR	5763887	UnaryOperationExpression	* pst		5763670	0					
ANR	5763888	UnaryOperator	*		5763670	0					
ANR	5763889	Identifier	pst		5763670	1					
ANR	5763890	MultiplicativeExpression	( double ) ( - b2 - a3 ) / a3		5763670	1		/			
ANR	5763891	CastExpression	( double ) ( - b2 - a3 )		5763670	0					
ANR	5763892	CastTarget	double		5763670	0					
ANR	5763893	AdditiveExpression	- b2 - a3		5763670	1		-			
ANR	5763894	UnaryOperationExpression	- b2		5763670	0					
ANR	5763895	UnaryOperator	-		5763670	0					
ANR	5763896	Identifier	b2		5763670	1					
ANR	5763897	Identifier	a3		5763670	1					
ANR	5763898	Identifier	a3		5763670	1					
ANR	5763899	ReturnStatement	return 1 ;	636:12:24858:24866	5763670	1	True				
ANR	5763900	PrimaryExpression	1		5763670	0					
ANR	5763901	ElseStatement	else		5763670	0					
ANR	5763902	ReturnStatement	return 0 ;	638:12:24895:24903	5763670	0	True				
ANR	5763903	PrimaryExpression	0		5763670	0					
ANR	5763904	ElseStatement	else		5763670	0					
ANR	5763905	IfStatement	if ( ( dv_end ^ c ) < 0 )		5763670	0					
ANR	5763906	Condition	( dv_end ^ c ) < 0	645:13:25125:25140	5763670	0	True				
ANR	5763907	RelationalExpression	( dv_end ^ c ) < 0		5763670	0		<			
ANR	5763908	ExclusiveOrExpression	dv_end ^ c		5763670	0		^			
ANR	5763909	Identifier	dv_end		5763670	0					
ANR	5763910	Identifier	c		5763670	1					
ANR	5763911	PrimaryExpression	0		5763670	1					
ANR	5763912	ExpressionStatement		645:30:25142:25142	5763670	1	True				
ANR	5763913	ElseStatement	else		5763670	0					
ANR	5763914	IfStatement	if ( ( a ^ b ) >= 0 )		5763670	0					
ANR	5763915	Condition	( a ^ b ) >= 0	651:13:25310:25321	5763670	0	True				
ANR	5763916	RelationalExpression	( a ^ b ) >= 0		5763670	0		>=			
ANR	5763917	ExclusiveOrExpression	a ^ b		5763670	0		^			
ANR	5763918	Identifier	a		5763670	0					
ANR	5763919	Identifier	b		5763670	1					
ANR	5763920	PrimaryExpression	0		5763670	1					
ANR	5763921	ReturnStatement	return 0 ;	652:8:25332:25340	5763670	1	True				
ANR	5763922	PrimaryExpression	0		5763670	0					
ANR	5763923	ElseStatement	else		5763670	0					
ANR	5763924	IfStatement	if ( any_abs ( b ) >= any_abs ( a3 ) )		5763670	0					
ANR	5763925	Condition	any_abs ( b ) >= any_abs ( a3 )	666:13:25954:25978	5763670	0	True				
ANR	5763926	RelationalExpression	any_abs ( b ) >= any_abs ( a3 )		5763670	0		>=			
ANR	5763927	CallExpression	any_abs ( b )		5763670	0					
ANR	5763928	Callee	any_abs		5763670	0					
ANR	5763929	Identifier	any_abs		5763670	0					
ANR	5763930	ArgumentList	b		5763670	1					
ANR	5763931	Argument	b		5763670	0					
ANR	5763932	Identifier	b		5763670	0					
ANR	5763933	CallExpression	any_abs ( a3 )		5763670	1					
ANR	5763934	Callee	any_abs		5763670	0					
ANR	5763935	Identifier	any_abs		5763670	0					
ANR	5763936	ArgumentList	a3		5763670	1					
ANR	5763937	Argument	a3		5763670	0					
ANR	5763938	Identifier	a3		5763670	0					
ANR	5763939	ReturnStatement	return 0 ;	667:8:25989:25997	5763670	1	True				
ANR	5763940	PrimaryExpression	0		5763670	0					
ANR	5763941	CompoundStatement		101:8:3663:3700	5763670	7					
ANR	5763942	IdentifierDeclStatement	double nbf = ( double ) ( - b ) ;	675:8:26293:26318	5763670	0	True				
ANR	5763943	IdentifierDecl	nbf = ( double ) ( - b )		5763670	0					
ANR	5763944	IdentifierDeclType	double		5763670	0					
ANR	5763945	Identifier	nbf		5763670	1					
ANR	5763946	AssignmentExpression	nbf = ( double ) ( - b )		5763670	2		=			
ANR	5763947	Identifier	nbf		5763670	0					
ANR	5763948	CastExpression	( double ) ( - b )		5763670	1					
ANR	5763949	CastTarget	double		5763670	0					
ANR	5763950	UnaryOperationExpression	- b		5763670	1					
ANR	5763951	UnaryOperator	-		5763670	0					
ANR	5763952	Identifier	b		5763670	1					
ANR	5763953	IdentifierDeclStatement	double a3f = ( double ) a3 ;	676:8:26328:26351	5763670	1	True				
ANR	5763954	IdentifierDecl	a3f = ( double ) a3		5763670	0					
ANR	5763955	IdentifierDeclType	double		5763670	0					
ANR	5763956	Identifier	a3f		5763670	1					
ANR	5763957	AssignmentExpression	a3f = ( double ) a3		5763670	2		=			
ANR	5763958	Identifier	a3f		5763670	0					
ANR	5763959	CastExpression	( double ) a3		5763670	1					
ANR	5763960	CastTarget	double		5763670	0					
ANR	5763961	Identifier	a3		5763670	1					
ANR	5763962	IdentifierDeclStatement	double radicand = nbf * nbf - a3f * c ;	677:8:26361:26398	5763670	2	True				
ANR	5763963	IdentifierDecl	radicand = nbf * nbf - a3f * c		5763670	0					
ANR	5763964	IdentifierDeclType	double		5763670	0					
ANR	5763965	Identifier	radicand		5763670	1					
ANR	5763966	AssignmentExpression	radicand = nbf * nbf - a3f * c		5763670	2		=			
ANR	5763967	Identifier	radicand		5763670	0					
ANR	5763968	AdditiveExpression	nbf * nbf - a3f * c		5763670	1		-			
ANR	5763969	MultiplicativeExpression	nbf * nbf		5763670	0		*			
ANR	5763970	Identifier	nbf		5763670	0					
ANR	5763971	Identifier	nbf		5763670	1					
ANR	5763972	MultiplicativeExpression	a3f * c		5763670	1		*			
ANR	5763973	Identifier	a3f		5763670	0					
ANR	5763974	Identifier	c		5763670	1					
ANR	5763975	IfStatement	if ( radicand < 0 )		5763670	3					
ANR	5763976	Condition	radicand < 0	679:12:26413:26424	5763670	0	True				
ANR	5763977	RelationalExpression	radicand < 0		5763670	0		<			
ANR	5763978	Identifier	radicand		5763670	0					
ANR	5763979	PrimaryExpression	0		5763670	1					
ANR	5763980	CompoundStatement		103:26:3729:3729	5763670	1					
ANR	5763981	ExpressionStatement	"if_debug1 ( '2' , ""[2]negative radicand = %g\\n"" , radicand )"	680:12:26441:26496	5763670	0	True				
ANR	5763982	CallExpression	"if_debug1 ( '2' , ""[2]negative radicand = %g\\n"" , radicand )"		5763670	0					
ANR	5763983	Callee	if_debug1		5763670	0					
ANR	5763984	Identifier	if_debug1		5763670	0					
ANR	5763985	ArgumentList	'2'		5763670	1					
ANR	5763986	Argument	'2'		5763670	0					
ANR	5763987	PrimaryExpression	'2'		5763670	0					
ANR	5763988	Argument	"""[2]negative radicand = %g\\n"""		5763670	1					
ANR	5763989	PrimaryExpression	"""[2]negative radicand = %g\\n"""		5763670	0					
ANR	5763990	Argument	radicand		5763670	2					
ANR	5763991	Identifier	radicand		5763670	0					
ANR	5763992	ReturnStatement	return 0 ;	681:12:26510:26518	5763670	1	True				
ANR	5763993	PrimaryExpression	0		5763670	0					
ANR	5763994	CompoundStatement		109:12:3916:3945	5763670	4					
ANR	5763995	IdentifierDeclStatement	double root = sqrt ( radicand ) ;	683:12:26544:26572	5763670	0	True				
ANR	5763996	IdentifierDecl	root = sqrt ( radicand )		5763670	0					
ANR	5763997	IdentifierDeclType	double		5763670	0					
ANR	5763998	Identifier	root		5763670	1					
ANR	5763999	AssignmentExpression	root = sqrt ( radicand )		5763670	2		=			
ANR	5764000	Identifier	root		5763670	0					
ANR	5764001	CallExpression	sqrt ( radicand )		5763670	1					
ANR	5764002	Callee	sqrt		5763670	0					
ANR	5764003	Identifier	sqrt		5763670	0					
ANR	5764004	ArgumentList	radicand		5763670	1					
ANR	5764005	Argument	radicand		5763670	0					
ANR	5764006	Identifier	radicand		5763670	0					
ANR	5764007	IdentifierDeclStatement	int nzeros = 0 ;	684:12:26586:26600	5763670	1	True				
ANR	5764008	IdentifierDecl	nzeros = 0		5763670	0					
ANR	5764009	IdentifierDeclType	int		5763670	0					
ANR	5764010	Identifier	nzeros		5763670	1					
ANR	5764011	AssignmentExpression	nzeros = 0		5763670	2		=			
ANR	5764012	Identifier	nzeros		5763670	0					
ANR	5764013	PrimaryExpression	0		5763670	1					
ANR	5764014	IdentifierDeclStatement	double z = ( nbf - root ) / a3f ;	685:12:26614:26643	5763670	2	True				
ANR	5764015	IdentifierDecl	z = ( nbf - root ) / a3f		5763670	0					
ANR	5764016	IdentifierDeclType	double		5763670	0					
ANR	5764017	Identifier	z		5763670	1					
ANR	5764018	AssignmentExpression	z = ( nbf - root ) / a3f		5763670	2		=			
ANR	5764019	Identifier	z		5763670	0					
ANR	5764020	MultiplicativeExpression	( nbf - root ) / a3f		5763670	1		/			
ANR	5764021	AdditiveExpression	nbf - root		5763670	0		-			
ANR	5764022	Identifier	nbf		5763670	0					
ANR	5764023	Identifier	root		5763670	1					
ANR	5764024	Identifier	a3f		5763670	1					
ANR	5764025	ExpressionStatement	"if_debug2 ( '2' , ""[2]zeros at %g, %g\\n"" , z , ( nbf + root ) / a3f )"	693:12:26923:26984	5763670	3	True				
ANR	5764026	CallExpression	"if_debug2 ( '2' , ""[2]zeros at %g, %g\\n"" , z , ( nbf + root ) / a3f )"		5763670	0					
ANR	5764027	Callee	if_debug2		5763670	0					
ANR	5764028	Identifier	if_debug2		5763670	0					
ANR	5764029	ArgumentList	'2'		5763670	1					
ANR	5764030	Argument	'2'		5763670	0					
ANR	5764031	PrimaryExpression	'2'		5763670	0					
ANR	5764032	Argument	"""[2]zeros at %g, %g\\n"""		5763670	1					
ANR	5764033	PrimaryExpression	"""[2]zeros at %g, %g\\n"""		5763670	0					
ANR	5764034	Argument	z		5763670	2					
ANR	5764035	Identifier	z		5763670	0					
ANR	5764036	Argument	( nbf + root ) / a3f		5763670	3					
ANR	5764037	MultiplicativeExpression	( nbf + root ) / a3f		5763670	0		/			
ANR	5764038	AdditiveExpression	nbf + root		5763670	0		+			
ANR	5764039	Identifier	nbf		5763670	0					
ANR	5764040	Identifier	root		5763670	1					
ANR	5764041	Identifier	a3f		5763670	1					
ANR	5764042	IfStatement	if ( z > 0 && z < 1 )		5763670	4					
ANR	5764043	Condition	z > 0 && z < 1	694:16:27002:27015	5763670	0	True				
ANR	5764044	AndExpression	z > 0 && z < 1		5763670	0		&&			
ANR	5764045	RelationalExpression	z > 0		5763670	0		>			
ANR	5764046	Identifier	z		5763670	0					
ANR	5764047	PrimaryExpression	0		5763670	1					
ANR	5764048	RelationalExpression	z < 1		5763670	1		<			
ANR	5764049	Identifier	z		5763670	0					
ANR	5764050	PrimaryExpression	1		5763670	1					
ANR	5764051	ExpressionStatement	"* pst = z , nzeros = 1"	695:16:27034:27054	5763670	1	True				
ANR	5764052	Expression	"* pst = z , nzeros = 1"		5763670	0					
ANR	5764053	AssignmentExpression	* pst = z		5763670	0		=			
ANR	5764054	UnaryOperationExpression	* pst		5763670	0					
ANR	5764055	UnaryOperator	*		5763670	0					
ANR	5764056	Identifier	pst		5763670	1					
ANR	5764057	Identifier	z		5763670	1					
ANR	5764058	AssignmentExpression	nzeros = 1		5763670	1		=			
ANR	5764059	Identifier	nzeros		5763670	0					
ANR	5764060	PrimaryExpression	1		5763670	1					
ANR	5764061	IfStatement	if ( root != 0 )		5763670	5					
ANR	5764062	Condition	root != 0	696:16:27072:27080	5763670	0	True				
ANR	5764063	EqualityExpression	root != 0		5763670	0		!=			
ANR	5764064	Identifier	root		5763670	0					
ANR	5764065	PrimaryExpression	0		5763670	1					
ANR	5764066	CompoundStatement		120:27:4385:4385	5763670	1					
ANR	5764067	ExpressionStatement	z = ( nbf + root ) / a3f	697:16:27101:27123	5763670	0	True				
ANR	5764068	AssignmentExpression	z = ( nbf + root ) / a3f		5763670	0		=			
ANR	5764069	Identifier	z		5763670	0					
ANR	5764070	MultiplicativeExpression	( nbf + root ) / a3f		5763670	1		/			
ANR	5764071	AdditiveExpression	nbf + root		5763670	0		+			
ANR	5764072	Identifier	nbf		5763670	0					
ANR	5764073	Identifier	root		5763670	1					
ANR	5764074	Identifier	a3f		5763670	1					
ANR	5764075	IfStatement	if ( z > 0 && z < 1 )		5763670	1					
ANR	5764076	Condition	z > 0 && z < 1	698:20:27145:27158	5763670	0	True				
ANR	5764077	AndExpression	z > 0 && z < 1		5763670	0		&&			
ANR	5764078	RelationalExpression	z > 0		5763670	0		>			
ANR	5764079	Identifier	z		5763670	0					
ANR	5764080	PrimaryExpression	0		5763670	1					
ANR	5764081	RelationalExpression	z < 1		5763670	1		<			
ANR	5764082	Identifier	z		5763670	0					
ANR	5764083	PrimaryExpression	1		5763670	1					
ANR	5764084	CompoundStatement		122:36:4463:4463	5763670	1					
ANR	5764085	IfStatement	if ( nzeros && a3f < 0 )		5763670	0					
ANR	5764086	Condition	nzeros && a3f < 0	699:24:27187:27203	5763670	0	True				
ANR	5764087	AndExpression	nzeros && a3f < 0		5763670	0		&&			
ANR	5764088	Identifier	nzeros		5763670	0					
ANR	5764089	RelationalExpression	a3f < 0		5763670	1		<			
ANR	5764090	Identifier	a3f		5763670	0					
ANR	5764091	PrimaryExpression	0		5763670	1					
ANR	5764092	ExpressionStatement	"pst [ 1 ] = * pst , * pst = z"	700:24:27254:27277	5763670	1	True				
ANR	5764093	Expression	"pst [ 1 ] = * pst , * pst = z"		5763670	0					
ANR	5764094	AssignmentExpression	pst [ 1 ] = * pst		5763670	0		=			
ANR	5764095	ArrayIndexing	pst [ 1 ]		5763670	0					
ANR	5764096	Identifier	pst		5763670	0					
ANR	5764097	PrimaryExpression	1		5763670	1					
ANR	5764098	UnaryOperationExpression	* pst		5763670	1					
ANR	5764099	UnaryOperator	*		5763670	0					
ANR	5764100	Identifier	pst		5763670	1					
ANR	5764101	AssignmentExpression	* pst = z		5763670	1		=			
ANR	5764102	UnaryOperationExpression	* pst		5763670	0					
ANR	5764103	UnaryOperator	*		5763670	0					
ANR	5764104	Identifier	pst		5763670	1					
ANR	5764105	Identifier	z		5763670	1					
ANR	5764106	ElseStatement	else		5763670	0					
ANR	5764107	ExpressionStatement	pst [ nzeros ] = z	702:24:27328:27343	5763670	0	True				
ANR	5764108	AssignmentExpression	pst [ nzeros ] = z		5763670	0		=			
ANR	5764109	ArrayIndexing	pst [ nzeros ]		5763670	0					
ANR	5764110	Identifier	pst		5763670	0					
ANR	5764111	Identifier	nzeros		5763670	1					
ANR	5764112	Identifier	z		5763670	1					
ANR	5764113	ExpressionStatement	nzeros ++	703:20:27365:27373	5763670	1	True				
ANR	5764114	PostIncDecOperationExpression	nzeros ++		5763670	0					
ANR	5764115	Identifier	nzeros		5763670	0					
ANR	5764116	IncDec	++		5763670	1					
ANR	5764117	ReturnStatement	return nzeros ;	706:12:27419:27432	5763670	6	True				
ANR	5764118	Identifier	nzeros		5763670	0					
ANR	5764119	ReturnType	int		5763670	1					
ANR	5764120	Identifier	gx_curve_monotonic_points		5763670	2					
ANR	5764121	ParameterList	"fixed v0 , fixed v1 , fixed v2 , fixed v3 , double pst [ 2 ]"		5763670	3					
ANR	5764122	Parameter	fixed v0	575:26:22616:22623	5763670	0	True				
ANR	5764123	ParameterType	fixed		5763670	0					
ANR	5764124	Identifier	v0		5763670	1					
ANR	5764125	Parameter	fixed v1	575:36:22626:22633	5763670	1	True				
ANR	5764126	ParameterType	fixed		5763670	0					
ANR	5764127	Identifier	v1		5763670	1					
ANR	5764128	Parameter	fixed v2	575:46:22636:22643	5763670	2	True				
ANR	5764129	ParameterType	fixed		5763670	0					
ANR	5764130	Identifier	v2		5763670	1					
ANR	5764131	Parameter	fixed v3	575:56:22646:22653	5763670	3	True				
ANR	5764132	ParameterType	fixed		5763670	0					
ANR	5764133	Identifier	v3		5763670	1					
ANR	5764134	Parameter	double pst [ 2 ]	576:26:22682:22694	5763670	4	True				
ANR	5764135	ParameterType	double [ 2 ]		5763670	0					
ANR	5764136	Identifier	pst		5763670	1					
ANR	5764137	CFGEntryNode	ENTRY		5763670		True				
ANR	5764138	CFGExitNode	EXIT		5763670		True				
ANR	5764139	Symbol	nzeros		5763670						
ANR	5764140	Symbol	* nzeros		5763670						
ANR	5764141	Symbol	pst		5763670						
ANR	5764142	Symbol	b2		5763670						
ANR	5764143	Symbol	radicand		5763670						
ANR	5764144	Symbol	sqrt		5763670						
ANR	5764145	Symbol	v12		5763670						
ANR	5764146	Symbol	root		5763670						
ANR	5764147	Symbol	any_abs		5763670						
ANR	5764148	Symbol	b2abs		5763670						
ANR	5764149	Symbol	a		5763670						
ANR	5764150	Symbol	b		5763670						
ANR	5764151	Symbol	c		5763670						
ANR	5764152	Symbol	a3abs		5763670						
ANR	5764153	Symbol	a3		5763670						
ANR	5764154	Symbol	nbf		5763670						
ANR	5764155	Symbol	a3f		5763670						
ANR	5764156	Symbol	v01		5763670						
ANR	5764157	Symbol	v0		5763670						
ANR	5764158	Symbol	z		5763670						
ANR	5764159	Symbol	v1		5763670						
ANR	5764160	Symbol	* pst		5763670						
ANR	5764161	Symbol	v2		5763670						
ANR	5764162	Symbol	v3		5763670						
ANR	5764163	Symbol	dv_end		5763670						
ANR	5764164	Function	find_contacting_segments	713:0:27539:30236							
ANR	5764165	FunctionDef	"find_contacting_segments (const subpath * sp0 , segment * sp0last , const subpath * sp1 , segment * sp1last , segment * * sc0 , segment * * sc1)"		5764164	0					
ANR	5764166	CompoundStatement		717:0:27732:30236	5764164	0					
ANR	5764167	IdentifierDeclStatement	"segment * s0 , * s1 ;"	718:4:27738:27754	5764164	0	True				
ANR	5764168	IdentifierDecl	* s0		5764164	0					
ANR	5764169	IdentifierDeclType	segment *		5764164	0					
ANR	5764170	Identifier	s0		5764164	1					
ANR	5764171	IdentifierDecl	* s1		5764164	1					
ANR	5764172	IdentifierDeclType	segment *		5764164	0					
ANR	5764173	Identifier	s1		5764164	1					
ANR	5764174	IdentifierDeclStatement	"const segment * s0s , * s1s ;"	719:4:27760:27784	5764164	1	True				
ANR	5764175	IdentifierDecl	* s0s		5764164	0					
ANR	5764176	IdentifierDeclType	const segment *		5764164	0					
ANR	5764177	Identifier	s0s		5764164	1					
ANR	5764178	IdentifierDecl	* s1s		5764164	1					
ANR	5764179	IdentifierDeclType	const segment *		5764164	0					
ANR	5764180	Identifier	s1s		5764164	1					
ANR	5764181	IdentifierDeclStatement	"int count0 , count1 , search_limit = 50 ;"	720:4:27790:27827	5764164	2	True				
ANR	5764182	IdentifierDecl	count0		5764164	0					
ANR	5764183	IdentifierDeclType	int		5764164	0					
ANR	5764184	Identifier	count0		5764164	1					
ANR	5764185	IdentifierDecl	count1		5764164	1					
ANR	5764186	IdentifierDeclType	int		5764164	0					
ANR	5764187	Identifier	count1		5764164	1					
ANR	5764188	IdentifierDecl	search_limit = 50		5764164	2					
ANR	5764189	IdentifierDeclType	int		5764164	0					
ANR	5764190	Identifier	search_limit		5764164	1					
ANR	5764191	AssignmentExpression	search_limit = 50		5764164	2		=			
ANR	5764192	Identifier	search_limit		5764164	0					
ANR	5764193	PrimaryExpression	50		5764164	1					
ANR	5764194	IdentifierDeclStatement	int min_length = fixed_1 * 1 ;	721:4:27833:27861	5764164	3	True				
ANR	5764195	IdentifierDecl	min_length = fixed_1 * 1		5764164	0					
ANR	5764196	IdentifierDeclType	int		5764164	0					
ANR	5764197	Identifier	min_length		5764164	1					
ANR	5764198	AssignmentExpression	min_length = fixed_1 * 1		5764164	2		=			
ANR	5764199	Identifier	min_length		5764164	0					
ANR	5764200	MultiplicativeExpression	fixed_1 * 1		5764164	1		*			
ANR	5764201	Identifier	fixed_1		5764164	0					
ANR	5764202	PrimaryExpression	1		5764164	1					
ANR	5764203	ForStatement	"for ( s0 = sp0last , count0 = 0 ; count0 < search_limit && s0 != ( segment * ) sp0 ; s0 = s0 -> prev , count0 ++ )"		5764164	4					
ANR	5764204	ForInit	"s0 = sp0last , count0 = 0 ;"	732:9:28447:28471	5764164	0	True				
ANR	5764205	Expression	"s0 = sp0last , count0 = 0"		5764164	0					
ANR	5764206	AssignmentExpression	s0 = sp0last		5764164	0		=			
ANR	5764207	Identifier	s0		5764164	0					
ANR	5764208	Identifier	sp0last		5764164	1					
ANR	5764209	AssignmentExpression	count0 = 0		5764164	1		=			
ANR	5764210	Identifier	count0		5764164	0					
ANR	5764211	PrimaryExpression	0		5764164	1					
ANR	5764212	Condition	count0 < search_limit && s0 != ( segment * ) sp0	732:35:28473:28517	5764164	1	True				
ANR	5764213	AndExpression	count0 < search_limit && s0 != ( segment * ) sp0		5764164	0		&&			
ANR	5764214	RelationalExpression	count0 < search_limit		5764164	0		<			
ANR	5764215	Identifier	count0		5764164	0					
ANR	5764216	Identifier	search_limit		5764164	1					
ANR	5764217	EqualityExpression	s0 != ( segment * ) sp0		5764164	1		!=			
ANR	5764218	Identifier	s0		5764164	0					
ANR	5764219	CastExpression	( segment * ) sp0		5764164	1					
ANR	5764220	CastTarget	segment *		5764164	0					
ANR	5764221	Identifier	sp0		5764164	1					
ANR	5764222	Expression	"s0 = s0 -> prev , count0 ++"	732:82:28520:28542	5764164	2	True				
ANR	5764223	AssignmentExpression	s0 = s0 -> prev		5764164	0		=			
ANR	5764224	Identifier	s0		5764164	0					
ANR	5764225	PtrMemberAccess	s0 -> prev		5764164	1					
ANR	5764226	Identifier	s0		5764164	0					
ANR	5764227	Identifier	prev		5764164	1					
ANR	5764228	PostIncDecOperationExpression	count0 ++		5764164	1					
ANR	5764229	Identifier	count0		5764164	0					
ANR	5764230	IncDec	++		5764164	1					
ANR	5764231	CompoundStatement		16:107:812:812	5764164	3					
ANR	5764232	ExpressionStatement	s0s = s0 -> prev	733:8:28555:28569	5764164	0	True				
ANR	5764233	AssignmentExpression	s0s = s0 -> prev		5764164	0		=			
ANR	5764234	Identifier	s0s		5764164	0					
ANR	5764235	PtrMemberAccess	s0 -> prev		5764164	1					
ANR	5764236	Identifier	s0		5764164	0					
ANR	5764237	Identifier	prev		5764164	1					
ANR	5764238	IfStatement	if ( ( s0 -> type == s_line || s0 -> type == s_gap ) && ( s0s -> pt . x == s0 -> pt . x || ( any_abs ( s0s -> pt . x - s0 -> pt . x ) == 1 && any_abs ( s0s -> pt . y - s0 -> pt . y ) > min_length ) ) )		5764164	1					
ANR	5764239	Condition	( s0 -> type == s_line || s0 -> type == s_gap ) && ( s0s -> pt . x == s0 -> pt . x || ( any_abs ( s0s -> pt . x - s0 -> pt . x ) == 1 && any_abs ( s0s -> pt . y - s0 -> pt . y ) > min_length ) )	734:12:28583:28775	5764164	0	True				
ANR	5764240	AndExpression	( s0 -> type == s_line || s0 -> type == s_gap ) && ( s0s -> pt . x == s0 -> pt . x || ( any_abs ( s0s -> pt . x - s0 -> pt . x ) == 1 && any_abs ( s0s -> pt . y - s0 -> pt . y ) > min_length ) )		5764164	0		&&			
ANR	5764241	OrExpression	s0 -> type == s_line || s0 -> type == s_gap		5764164	0		||			
ANR	5764242	EqualityExpression	s0 -> type == s_line		5764164	0		==			
ANR	5764243	PtrMemberAccess	s0 -> type		5764164	0					
ANR	5764244	Identifier	s0		5764164	0					
ANR	5764245	Identifier	type		5764164	1					
ANR	5764246	Identifier	s_line		5764164	1					
ANR	5764247	EqualityExpression	s0 -> type == s_gap		5764164	1		==			
ANR	5764248	PtrMemberAccess	s0 -> type		5764164	0					
ANR	5764249	Identifier	s0		5764164	0					
ANR	5764250	Identifier	type		5764164	1					
ANR	5764251	Identifier	s_gap		5764164	1					
ANR	5764252	OrExpression	s0s -> pt . x == s0 -> pt . x || ( any_abs ( s0s -> pt . x - s0 -> pt . x ) == 1 && any_abs ( s0s -> pt . y - s0 -> pt . y ) > min_length )		5764164	1		||			
ANR	5764253	EqualityExpression	s0s -> pt . x == s0 -> pt . x		5764164	0		==			
ANR	5764254	MemberAccess	s0s -> pt . x		5764164	0					
ANR	5764255	PtrMemberAccess	s0s -> pt		5764164	0					
ANR	5764256	Identifier	s0s		5764164	0					
ANR	5764257	Identifier	pt		5764164	1					
ANR	5764258	Identifier	x		5764164	1					
ANR	5764259	MemberAccess	s0 -> pt . x		5764164	1					
ANR	5764260	PtrMemberAccess	s0 -> pt		5764164	0					
ANR	5764261	Identifier	s0		5764164	0					
ANR	5764262	Identifier	pt		5764164	1					
ANR	5764263	Identifier	x		5764164	1					
ANR	5764264	AndExpression	any_abs ( s0s -> pt . x - s0 -> pt . x ) == 1 && any_abs ( s0s -> pt . y - s0 -> pt . y ) > min_length		5764164	1		&&			
ANR	5764265	EqualityExpression	any_abs ( s0s -> pt . x - s0 -> pt . x ) == 1		5764164	0		==			
ANR	5764266	CallExpression	any_abs ( s0s -> pt . x - s0 -> pt . x )		5764164	0					
ANR	5764267	Callee	any_abs		5764164	0					
ANR	5764268	Identifier	any_abs		5764164	0					
ANR	5764269	ArgumentList	s0s -> pt . x - s0 -> pt . x		5764164	1					
ANR	5764270	Argument	s0s -> pt . x - s0 -> pt . x		5764164	0					
ANR	5764271	AdditiveExpression	s0s -> pt . x - s0 -> pt . x		5764164	0		-			
ANR	5764272	MemberAccess	s0s -> pt . x		5764164	0					
ANR	5764273	PtrMemberAccess	s0s -> pt		5764164	0					
ANR	5764274	Identifier	s0s		5764164	0					
ANR	5764275	Identifier	pt		5764164	1					
ANR	5764276	Identifier	x		5764164	1					
ANR	5764277	MemberAccess	s0 -> pt . x		5764164	1					
ANR	5764278	PtrMemberAccess	s0 -> pt		5764164	0					
ANR	5764279	Identifier	s0		5764164	0					
ANR	5764280	Identifier	pt		5764164	1					
ANR	5764281	Identifier	x		5764164	1					
ANR	5764282	PrimaryExpression	1		5764164	1					
ANR	5764283	RelationalExpression	any_abs ( s0s -> pt . y - s0 -> pt . y ) > min_length		5764164	1		>			
ANR	5764284	CallExpression	any_abs ( s0s -> pt . y - s0 -> pt . y )		5764164	0					
ANR	5764285	Callee	any_abs		5764164	0					
ANR	5764286	Identifier	any_abs		5764164	0					
ANR	5764287	ArgumentList	s0s -> pt . y - s0 -> pt . y		5764164	1					
ANR	5764288	Argument	s0s -> pt . y - s0 -> pt . y		5764164	0					
ANR	5764289	AdditiveExpression	s0s -> pt . y - s0 -> pt . y		5764164	0		-			
ANR	5764290	MemberAccess	s0s -> pt . y		5764164	0					
ANR	5764291	PtrMemberAccess	s0s -> pt		5764164	0					
ANR	5764292	Identifier	s0s		5764164	0					
ANR	5764293	Identifier	pt		5764164	1					
ANR	5764294	Identifier	y		5764164	1					
ANR	5764295	MemberAccess	s0 -> pt . y		5764164	1					
ANR	5764296	PtrMemberAccess	s0 -> pt		5764164	0					
ANR	5764297	Identifier	s0		5764164	0					
ANR	5764298	Identifier	pt		5764164	1					
ANR	5764299	Identifier	y		5764164	1					
ANR	5764300	Identifier	min_length		5764164	1					
ANR	5764301	CompoundStatement		21:60:1045:1045	5764164	1					
ANR	5764302	ForStatement	"for ( s1 = sp1last , count1 = 0 ; count1 < search_limit && s1 != ( segment * ) sp1 ; s1 = s1 -> prev , count1 ++ )"		5764164	0					
ANR	5764303	ForInit	"s1 = sp1last , count1 = 0 ;"	738:17:28797:28821	5764164	0	True				
ANR	5764304	Expression	"s1 = sp1last , count1 = 0"		5764164	0					
ANR	5764305	AssignmentExpression	s1 = sp1last		5764164	0		=			
ANR	5764306	Identifier	s1		5764164	0					
ANR	5764307	Identifier	sp1last		5764164	1					
ANR	5764308	AssignmentExpression	count1 = 0		5764164	1		=			
ANR	5764309	Identifier	count1		5764164	0					
ANR	5764310	PrimaryExpression	0		5764164	1					
ANR	5764311	Condition	count1 < search_limit && s1 != ( segment * ) sp1	738:43:28823:28867	5764164	1	True				
ANR	5764312	AndExpression	count1 < search_limit && s1 != ( segment * ) sp1		5764164	0		&&			
ANR	5764313	RelationalExpression	count1 < search_limit		5764164	0		<			
ANR	5764314	Identifier	count1		5764164	0					
ANR	5764315	Identifier	search_limit		5764164	1					
ANR	5764316	EqualityExpression	s1 != ( segment * ) sp1		5764164	1		!=			
ANR	5764317	Identifier	s1		5764164	0					
ANR	5764318	CastExpression	( segment * ) sp1		5764164	1					
ANR	5764319	CastTarget	segment *		5764164	0					
ANR	5764320	Identifier	sp1		5764164	1					
ANR	5764321	Expression	"s1 = s1 -> prev , count1 ++"	738:90:28870:28892	5764164	2	True				
ANR	5764322	AssignmentExpression	s1 = s1 -> prev		5764164	0		=			
ANR	5764323	Identifier	s1		5764164	0					
ANR	5764324	PtrMemberAccess	s1 -> prev		5764164	1					
ANR	5764325	Identifier	s1		5764164	0					
ANR	5764326	Identifier	prev		5764164	1					
ANR	5764327	PostIncDecOperationExpression	count1 ++		5764164	1					
ANR	5764328	Identifier	count1		5764164	0					
ANR	5764329	IncDec	++		5764164	1					
ANR	5764330	CompoundStatement		22:115:1162:1162	5764164	3					
ANR	5764331	ExpressionStatement	s1s = s1 -> prev	739:16:28913:28927	5764164	0	True				
ANR	5764332	AssignmentExpression	s1s = s1 -> prev		5764164	0		=			
ANR	5764333	Identifier	s1s		5764164	0					
ANR	5764334	PtrMemberAccess	s1 -> prev		5764164	1					
ANR	5764335	Identifier	s1		5764164	0					
ANR	5764336	Identifier	prev		5764164	1					
ANR	5764337	IfStatement	if ( ( s1 -> type == s_line || s1 -> type == s_gap ) && ( s1s -> pt . x == s1 -> pt . x || ( any_abs ( s1s -> pt . x - s1 -> pt . x ) == 1 && any_abs ( s1s -> pt . y - s1 -> pt . y ) > min_length ) ) )		5764164	1					
ANR	5764338	Condition	( s1 -> type == s_line || s1 -> type == s_gap ) && ( s1s -> pt . x == s1 -> pt . x || ( any_abs ( s1s -> pt . x - s1 -> pt . x ) == 1 && any_abs ( s1s -> pt . y - s1 -> pt . y ) > min_length ) )	740:20:28949:29143	5764164	0	True				
ANR	5764339	AndExpression	( s1 -> type == s_line || s1 -> type == s_gap ) && ( s1s -> pt . x == s1 -> pt . x || ( any_abs ( s1s -> pt . x - s1 -> pt . x ) == 1 && any_abs ( s1s -> pt . y - s1 -> pt . y ) > min_length ) )		5764164	0		&&			
ANR	5764340	OrExpression	s1 -> type == s_line || s1 -> type == s_gap		5764164	0		||			
ANR	5764341	EqualityExpression	s1 -> type == s_line		5764164	0		==			
ANR	5764342	PtrMemberAccess	s1 -> type		5764164	0					
ANR	5764343	Identifier	s1		5764164	0					
ANR	5764344	Identifier	type		5764164	1					
ANR	5764345	Identifier	s_line		5764164	1					
ANR	5764346	EqualityExpression	s1 -> type == s_gap		5764164	1		==			
ANR	5764347	PtrMemberAccess	s1 -> type		5764164	0					
ANR	5764348	Identifier	s1		5764164	0					
ANR	5764349	Identifier	type		5764164	1					
ANR	5764350	Identifier	s_gap		5764164	1					
ANR	5764351	OrExpression	s1s -> pt . x == s1 -> pt . x || ( any_abs ( s1s -> pt . x - s1 -> pt . x ) == 1 && any_abs ( s1s -> pt . y - s1 -> pt . y ) > min_length )		5764164	1		||			
ANR	5764352	EqualityExpression	s1s -> pt . x == s1 -> pt . x		5764164	0		==			
ANR	5764353	MemberAccess	s1s -> pt . x		5764164	0					
ANR	5764354	PtrMemberAccess	s1s -> pt		5764164	0					
ANR	5764355	Identifier	s1s		5764164	0					
ANR	5764356	Identifier	pt		5764164	1					
ANR	5764357	Identifier	x		5764164	1					
ANR	5764358	MemberAccess	s1 -> pt . x		5764164	1					
ANR	5764359	PtrMemberAccess	s1 -> pt		5764164	0					
ANR	5764360	Identifier	s1		5764164	0					
ANR	5764361	Identifier	pt		5764164	1					
ANR	5764362	Identifier	x		5764164	1					
ANR	5764363	AndExpression	any_abs ( s1s -> pt . x - s1 -> pt . x ) == 1 && any_abs ( s1s -> pt . y - s1 -> pt . y ) > min_length		5764164	1		&&			
ANR	5764364	EqualityExpression	any_abs ( s1s -> pt . x - s1 -> pt . x ) == 1		5764164	0		==			
ANR	5764365	CallExpression	any_abs ( s1s -> pt . x - s1 -> pt . x )		5764164	0					
ANR	5764366	Callee	any_abs		5764164	0					
ANR	5764367	Identifier	any_abs		5764164	0					
ANR	5764368	ArgumentList	s1s -> pt . x - s1 -> pt . x		5764164	1					
ANR	5764369	Argument	s1s -> pt . x - s1 -> pt . x		5764164	0					
ANR	5764370	AdditiveExpression	s1s -> pt . x - s1 -> pt . x		5764164	0		-			
ANR	5764371	MemberAccess	s1s -> pt . x		5764164	0					
ANR	5764372	PtrMemberAccess	s1s -> pt		5764164	0					
ANR	5764373	Identifier	s1s		5764164	0					
ANR	5764374	Identifier	pt		5764164	1					
ANR	5764375	Identifier	x		5764164	1					
ANR	5764376	MemberAccess	s1 -> pt . x		5764164	1					
ANR	5764377	PtrMemberAccess	s1 -> pt		5764164	0					
ANR	5764378	Identifier	s1		5764164	0					
ANR	5764379	Identifier	pt		5764164	1					
ANR	5764380	Identifier	x		5764164	1					
ANR	5764381	PrimaryExpression	1		5764164	1					
ANR	5764382	RelationalExpression	any_abs ( s1s -> pt . y - s1 -> pt . y ) > min_length		5764164	1		>			
ANR	5764383	CallExpression	any_abs ( s1s -> pt . y - s1 -> pt . y )		5764164	0					
ANR	5764384	Callee	any_abs		5764164	0					
ANR	5764385	Identifier	any_abs		5764164	0					
ANR	5764386	ArgumentList	s1s -> pt . y - s1 -> pt . y		5764164	1					
ANR	5764387	Argument	s1s -> pt . y - s1 -> pt . y		5764164	0					
ANR	5764388	AdditiveExpression	s1s -> pt . y - s1 -> pt . y		5764164	0		-			
ANR	5764389	MemberAccess	s1s -> pt . y		5764164	0					
ANR	5764390	PtrMemberAccess	s1s -> pt		5764164	0					
ANR	5764391	Identifier	s1s		5764164	0					
ANR	5764392	Identifier	pt		5764164	1					
ANR	5764393	Identifier	y		5764164	1					
ANR	5764394	MemberAccess	s1 -> pt . y		5764164	1					
ANR	5764395	PtrMemberAccess	s1 -> pt		5764164	0					
ANR	5764396	Identifier	s1		5764164	0					
ANR	5764397	Identifier	pt		5764164	1					
ANR	5764398	Identifier	y		5764164	1					
ANR	5764399	Identifier	min_length		5764164	1					
ANR	5764400	CompoundStatement		26:106:1413:1413	5764164	1					
ANR	5764401	IfStatement	if ( s0s -> pt . x == s1s -> pt . x || s0 -> pt . x == s1 -> pt . x || s0 -> pt . x == s1s -> pt . x || s0s -> pt . x == s1 -> pt . x )		5764164	0					
ANR	5764402	Condition	s0s -> pt . x == s1s -> pt . x || s0 -> pt . x == s1 -> pt . x || s0 -> pt . x == s1s -> pt . x || s0s -> pt . x == s1 -> pt . x	743:24:29172:29267	5764164	0	True				
ANR	5764403	OrExpression	s0s -> pt . x == s1s -> pt . x || s0 -> pt . x == s1 -> pt . x || s0 -> pt . x == s1s -> pt . x || s0s -> pt . x == s1 -> pt . x		5764164	0		||			
ANR	5764404	EqualityExpression	s0s -> pt . x == s1s -> pt . x		5764164	0		==			
ANR	5764405	MemberAccess	s0s -> pt . x		5764164	0					
ANR	5764406	PtrMemberAccess	s0s -> pt		5764164	0					
ANR	5764407	Identifier	s0s		5764164	0					
ANR	5764408	Identifier	pt		5764164	1					
ANR	5764409	Identifier	x		5764164	1					
ANR	5764410	MemberAccess	s1s -> pt . x		5764164	1					
ANR	5764411	PtrMemberAccess	s1s -> pt		5764164	0					
ANR	5764412	Identifier	s1s		5764164	0					
ANR	5764413	Identifier	pt		5764164	1					
ANR	5764414	Identifier	x		5764164	1					
ANR	5764415	OrExpression	s0 -> pt . x == s1 -> pt . x || s0 -> pt . x == s1s -> pt . x || s0s -> pt . x == s1 -> pt . x		5764164	1		||			
ANR	5764416	EqualityExpression	s0 -> pt . x == s1 -> pt . x		5764164	0		==			
ANR	5764417	MemberAccess	s0 -> pt . x		5764164	0					
ANR	5764418	PtrMemberAccess	s0 -> pt		5764164	0					
ANR	5764419	Identifier	s0		5764164	0					
ANR	5764420	Identifier	pt		5764164	1					
ANR	5764421	Identifier	x		5764164	1					
ANR	5764422	MemberAccess	s1 -> pt . x		5764164	1					
ANR	5764423	PtrMemberAccess	s1 -> pt		5764164	0					
ANR	5764424	Identifier	s1		5764164	0					
ANR	5764425	Identifier	pt		5764164	1					
ANR	5764426	Identifier	x		5764164	1					
ANR	5764427	OrExpression	s0 -> pt . x == s1s -> pt . x || s0s -> pt . x == s1 -> pt . x		5764164	1		||			
ANR	5764428	EqualityExpression	s0 -> pt . x == s1s -> pt . x		5764164	0		==			
ANR	5764429	MemberAccess	s0 -> pt . x		5764164	0					
ANR	5764430	PtrMemberAccess	s0 -> pt		5764164	0					
ANR	5764431	Identifier	s0		5764164	0					
ANR	5764432	Identifier	pt		5764164	1					
ANR	5764433	Identifier	x		5764164	1					
ANR	5764434	MemberAccess	s1s -> pt . x		5764164	1					
ANR	5764435	PtrMemberAccess	s1s -> pt		5764164	0					
ANR	5764436	Identifier	s1s		5764164	0					
ANR	5764437	Identifier	pt		5764164	1					
ANR	5764438	Identifier	x		5764164	1					
ANR	5764439	EqualityExpression	s0s -> pt . x == s1 -> pt . x		5764164	1		==			
ANR	5764440	MemberAccess	s0s -> pt . x		5764164	0					
ANR	5764441	PtrMemberAccess	s0s -> pt		5764164	0					
ANR	5764442	Identifier	s0s		5764164	0					
ANR	5764443	Identifier	pt		5764164	1					
ANR	5764444	Identifier	x		5764164	1					
ANR	5764445	MemberAccess	s1 -> pt . x		5764164	1					
ANR	5764446	PtrMemberAccess	s1 -> pt		5764164	0					
ANR	5764447	Identifier	s1		5764164	0					
ANR	5764448	Identifier	pt		5764164	1					
ANR	5764449	Identifier	x		5764164	1					
ANR	5764450	CompoundStatement		27:122:1537:1537	5764164	1					
ANR	5764451	IfStatement	if ( s0s -> pt . y < s0 -> pt . y && s1s -> pt . y > s1 -> pt . y )		5764164	0					
ANR	5764452	Condition	s0s -> pt . y < s0 -> pt . y && s1s -> pt . y > s1 -> pt . y	744:28:29300:29343	5764164	0	True				
ANR	5764453	AndExpression	s0s -> pt . y < s0 -> pt . y && s1s -> pt . y > s1 -> pt . y		5764164	0		&&			
ANR	5764454	RelationalExpression	s0s -> pt . y < s0 -> pt . y		5764164	0		<			
ANR	5764455	MemberAccess	s0s -> pt . y		5764164	0					
ANR	5764456	PtrMemberAccess	s0s -> pt		5764164	0					
ANR	5764457	Identifier	s0s		5764164	0					
ANR	5764458	Identifier	pt		5764164	1					
ANR	5764459	Identifier	y		5764164	1					
ANR	5764460	MemberAccess	s0 -> pt . y		5764164	1					
ANR	5764461	PtrMemberAccess	s0 -> pt		5764164	0					
ANR	5764462	Identifier	s0		5764164	0					
ANR	5764463	Identifier	pt		5764164	1					
ANR	5764464	Identifier	y		5764164	1					
ANR	5764465	RelationalExpression	s1s -> pt . y > s1 -> pt . y		5764164	1		>			
ANR	5764466	MemberAccess	s1s -> pt . y		5764164	0					
ANR	5764467	PtrMemberAccess	s1s -> pt		5764164	0					
ANR	5764468	Identifier	s1s		5764164	0					
ANR	5764469	Identifier	pt		5764164	1					
ANR	5764470	Identifier	y		5764164	1					
ANR	5764471	MemberAccess	s1 -> pt . y		5764164	1					
ANR	5764472	PtrMemberAccess	s1 -> pt		5764164	0					
ANR	5764473	Identifier	s1		5764164	0					
ANR	5764474	Identifier	pt		5764164	1					
ANR	5764475	Identifier	y		5764164	1					
ANR	5764476	CompoundStatement		30:28:1708:1743	5764164	1					
ANR	5764477	IdentifierDeclStatement	"fixed y0 = max ( s0s -> pt . y , s1 -> pt . y ) ;"	745:28:29376:29411	5764164	0	True				
ANR	5764478	IdentifierDecl	"y0 = max ( s0s -> pt . y , s1 -> pt . y )"		5764164	0					
ANR	5764479	IdentifierDeclType	fixed		5764164	0					
ANR	5764480	Identifier	y0		5764164	1					
ANR	5764481	AssignmentExpression	"y0 = max ( s0s -> pt . y , s1 -> pt . y )"		5764164	2		=			
ANR	5764482	Identifier	y0		5764164	0					
ANR	5764483	CallExpression	"max ( s0s -> pt . y , s1 -> pt . y )"		5764164	1					
ANR	5764484	Callee	max		5764164	0					
ANR	5764485	Identifier	max		5764164	0					
ANR	5764486	ArgumentList	s0s -> pt . y		5764164	1					
ANR	5764487	Argument	s0s -> pt . y		5764164	0					
ANR	5764488	MemberAccess	s0s -> pt . y		5764164	0					
ANR	5764489	PtrMemberAccess	s0s -> pt		5764164	0					
ANR	5764490	Identifier	s0s		5764164	0					
ANR	5764491	Identifier	pt		5764164	1					
ANR	5764492	Identifier	y		5764164	1					
ANR	5764493	Argument	s1 -> pt . y		5764164	1					
ANR	5764494	MemberAccess	s1 -> pt . y		5764164	0					
ANR	5764495	PtrMemberAccess	s1 -> pt		5764164	0					
ANR	5764496	Identifier	s1		5764164	0					
ANR	5764497	Identifier	pt		5764164	1					
ANR	5764498	Identifier	y		5764164	1					
ANR	5764499	IdentifierDeclStatement	"fixed y1 = min ( s0 -> pt . y , s1s -> pt . y ) ;"	746:28:29441:29476	5764164	1	True				
ANR	5764500	IdentifierDecl	"y1 = min ( s0 -> pt . y , s1s -> pt . y )"		5764164	0					
ANR	5764501	IdentifierDeclType	fixed		5764164	0					
ANR	5764502	Identifier	y1		5764164	1					
ANR	5764503	AssignmentExpression	"y1 = min ( s0 -> pt . y , s1s -> pt . y )"		5764164	2		=			
ANR	5764504	Identifier	y1		5764164	0					
ANR	5764505	CallExpression	"min ( s0 -> pt . y , s1s -> pt . y )"		5764164	1					
ANR	5764506	Callee	min		5764164	0					
ANR	5764507	Identifier	min		5764164	0					
ANR	5764508	ArgumentList	s0 -> pt . y		5764164	1					
ANR	5764509	Argument	s0 -> pt . y		5764164	0					
ANR	5764510	MemberAccess	s0 -> pt . y		5764164	0					
ANR	5764511	PtrMemberAccess	s0 -> pt		5764164	0					
ANR	5764512	Identifier	s0		5764164	0					
ANR	5764513	Identifier	pt		5764164	1					
ANR	5764514	Identifier	y		5764164	1					
ANR	5764515	Argument	s1s -> pt . y		5764164	1					
ANR	5764516	MemberAccess	s1s -> pt . y		5764164	0					
ANR	5764517	PtrMemberAccess	s1s -> pt		5764164	0					
ANR	5764518	Identifier	s1s		5764164	0					
ANR	5764519	Identifier	pt		5764164	1					
ANR	5764520	Identifier	y		5764164	1					
ANR	5764521	IfStatement	if ( y0 <= y1 )		5764164	2					
ANR	5764522	Condition	y0 <= y1	748:32:29511:29518	5764164	0	True				
ANR	5764523	RelationalExpression	y0 <= y1		5764164	0		<=			
ANR	5764524	Identifier	y0		5764164	0					
ANR	5764525	Identifier	y1		5764164	1					
ANR	5764526	CompoundStatement		32:42:1788:1788	5764164	1					
ANR	5764527	ExpressionStatement	* sc0 = s0	749:32:29555:29564	5764164	0	True				
ANR	5764528	AssignmentExpression	* sc0 = s0		5764164	0		=			
ANR	5764529	UnaryOperationExpression	* sc0		5764164	0					
ANR	5764530	UnaryOperator	*		5764164	0					
ANR	5764531	Identifier	sc0		5764164	1					
ANR	5764532	Identifier	s0		5764164	1					
ANR	5764533	ExpressionStatement	* sc1 = s1	750:32:29598:29607	5764164	1	True				
ANR	5764534	AssignmentExpression	* sc1 = s1		5764164	0		=			
ANR	5764535	UnaryOperationExpression	* sc1		5764164	0					
ANR	5764536	UnaryOperator	*		5764164	0					
ANR	5764537	Identifier	sc1		5764164	1					
ANR	5764538	Identifier	s1		5764164	1					
ANR	5764539	ReturnStatement	return true ;	751:32:29641:29652	5764164	2	True				
ANR	5764540	Identifier	true		5764164	0					
ANR	5764541	IfStatement	if ( s0s -> pt . y > s0 -> pt . y && s1s -> pt . y < s1 -> pt . y )		5764164	1					
ANR	5764542	Condition	s0s -> pt . y > s0 -> pt . y && s1s -> pt . y < s1 -> pt . y	754:28:29738:29781	5764164	0	True				
ANR	5764543	AndExpression	s0s -> pt . y > s0 -> pt . y && s1s -> pt . y < s1 -> pt . y		5764164	0		&&			
ANR	5764544	RelationalExpression	s0s -> pt . y > s0 -> pt . y		5764164	0		>			
ANR	5764545	MemberAccess	s0s -> pt . y		5764164	0					
ANR	5764546	PtrMemberAccess	s0s -> pt		5764164	0					
ANR	5764547	Identifier	s0s		5764164	0					
ANR	5764548	Identifier	pt		5764164	1					
ANR	5764549	Identifier	y		5764164	1					
ANR	5764550	MemberAccess	s0 -> pt . y		5764164	1					
ANR	5764551	PtrMemberAccess	s0 -> pt		5764164	0					
ANR	5764552	Identifier	s0		5764164	0					
ANR	5764553	Identifier	pt		5764164	1					
ANR	5764554	Identifier	y		5764164	1					
ANR	5764555	RelationalExpression	s1s -> pt . y < s1 -> pt . y		5764164	1		<			
ANR	5764556	MemberAccess	s1s -> pt . y		5764164	0					
ANR	5764557	PtrMemberAccess	s1s -> pt		5764164	0					
ANR	5764558	Identifier	s1s		5764164	0					
ANR	5764559	Identifier	pt		5764164	1					
ANR	5764560	Identifier	y		5764164	1					
ANR	5764561	MemberAccess	s1 -> pt . y		5764164	1					
ANR	5764562	PtrMemberAccess	s1 -> pt		5764164	0					
ANR	5764563	Identifier	s1		5764164	0					
ANR	5764564	Identifier	pt		5764164	1					
ANR	5764565	Identifier	y		5764164	1					
ANR	5764566	CompoundStatement		40:28:2146:2181	5764164	1					
ANR	5764567	IdentifierDeclStatement	"fixed y0 = max ( s0 -> pt . y , s1s -> pt . y ) ;"	755:28:29814:29849	5764164	0	True				
ANR	5764568	IdentifierDecl	"y0 = max ( s0 -> pt . y , s1s -> pt . y )"		5764164	0					
ANR	5764569	IdentifierDeclType	fixed		5764164	0					
ANR	5764570	Identifier	y0		5764164	1					
ANR	5764571	AssignmentExpression	"y0 = max ( s0 -> pt . y , s1s -> pt . y )"		5764164	2		=			
ANR	5764572	Identifier	y0		5764164	0					
ANR	5764573	CallExpression	"max ( s0 -> pt . y , s1s -> pt . y )"		5764164	1					
ANR	5764574	Callee	max		5764164	0					
ANR	5764575	Identifier	max		5764164	0					
ANR	5764576	ArgumentList	s0 -> pt . y		5764164	1					
ANR	5764577	Argument	s0 -> pt . y		5764164	0					
ANR	5764578	MemberAccess	s0 -> pt . y		5764164	0					
ANR	5764579	PtrMemberAccess	s0 -> pt		5764164	0					
ANR	5764580	Identifier	s0		5764164	0					
ANR	5764581	Identifier	pt		5764164	1					
ANR	5764582	Identifier	y		5764164	1					
ANR	5764583	Argument	s1s -> pt . y		5764164	1					
ANR	5764584	MemberAccess	s1s -> pt . y		5764164	0					
ANR	5764585	PtrMemberAccess	s1s -> pt		5764164	0					
ANR	5764586	Identifier	s1s		5764164	0					
ANR	5764587	Identifier	pt		5764164	1					
ANR	5764588	Identifier	y		5764164	1					
ANR	5764589	IdentifierDeclStatement	"fixed y1 = min ( s0s -> pt . y , s1 -> pt . y ) ;"	756:28:29879:29914	5764164	1	True				
ANR	5764590	IdentifierDecl	"y1 = min ( s0s -> pt . y , s1 -> pt . y )"		5764164	0					
ANR	5764591	IdentifierDeclType	fixed		5764164	0					
ANR	5764592	Identifier	y1		5764164	1					
ANR	5764593	AssignmentExpression	"y1 = min ( s0s -> pt . y , s1 -> pt . y )"		5764164	2		=			
ANR	5764594	Identifier	y1		5764164	0					
ANR	5764595	CallExpression	"min ( s0s -> pt . y , s1 -> pt . y )"		5764164	1					
ANR	5764596	Callee	min		5764164	0					
ANR	5764597	Identifier	min		5764164	0					
ANR	5764598	ArgumentList	s0s -> pt . y		5764164	1					
ANR	5764599	Argument	s0s -> pt . y		5764164	0					
ANR	5764600	MemberAccess	s0s -> pt . y		5764164	0					
ANR	5764601	PtrMemberAccess	s0s -> pt		5764164	0					
ANR	5764602	Identifier	s0s		5764164	0					
ANR	5764603	Identifier	pt		5764164	1					
ANR	5764604	Identifier	y		5764164	1					
ANR	5764605	Argument	s1 -> pt . y		5764164	1					
ANR	5764606	MemberAccess	s1 -> pt . y		5764164	0					
ANR	5764607	PtrMemberAccess	s1 -> pt		5764164	0					
ANR	5764608	Identifier	s1		5764164	0					
ANR	5764609	Identifier	pt		5764164	1					
ANR	5764610	Identifier	y		5764164	1					
ANR	5764611	IfStatement	if ( y0 <= y1 )		5764164	2					
ANR	5764612	Condition	y0 <= y1	758:32:29949:29956	5764164	0	True				
ANR	5764613	RelationalExpression	y0 <= y1		5764164	0		<=			
ANR	5764614	Identifier	y0		5764164	0					
ANR	5764615	Identifier	y1		5764164	1					
ANR	5764616	CompoundStatement		42:42:2226:2226	5764164	1					
ANR	5764617	ExpressionStatement	* sc0 = s0	759:32:29993:30002	5764164	0	True				
ANR	5764618	AssignmentExpression	* sc0 = s0		5764164	0		=			
ANR	5764619	UnaryOperationExpression	* sc0		5764164	0					
ANR	5764620	UnaryOperator	*		5764164	0					
ANR	5764621	Identifier	sc0		5764164	1					
ANR	5764622	Identifier	s0		5764164	1					
ANR	5764623	ExpressionStatement	* sc1 = s1	760:32:30036:30045	5764164	1	True				
ANR	5764624	AssignmentExpression	* sc1 = s1		5764164	0		=			
ANR	5764625	UnaryOperationExpression	* sc1		5764164	0					
ANR	5764626	UnaryOperator	*		5764164	0					
ANR	5764627	Identifier	sc1		5764164	1					
ANR	5764628	Identifier	s1		5764164	1					
ANR	5764629	ReturnStatement	return true ;	761:32:30079:30090	5764164	2	True				
ANR	5764630	Identifier	true		5764164	0					
ANR	5764631	ReturnStatement	return false ;	769:4:30222:30234	5764164	5	True				
ANR	5764632	Identifier	false		5764164	0					
ANR	5764633	ReturnType	static bool		5764164	1					
ANR	5764634	Identifier	find_contacting_segments		5764164	2					
ANR	5764635	ParameterList	"const subpath * sp0 , segment * sp0last , const subpath * sp1 , segment * sp1last , segment * * sc0 , segment * * sc1"		5764164	3					
ANR	5764636	Parameter	const subpath * sp0	714:25:27576:27593	5764164	0	True				
ANR	5764637	ParameterType	const subpath *		5764164	0					
ANR	5764638	Identifier	sp0		5764164	1					
ANR	5764639	Parameter	segment * sp0last	714:45:27596:27611	5764164	1	True				
ANR	5764640	ParameterType	segment *		5764164	0					
ANR	5764641	Identifier	sp0last		5764164	1					
ANR	5764642	Parameter	const subpath * sp1	715:25:27639:27656	5764164	2	True				
ANR	5764643	ParameterType	const subpath *		5764164	0					
ANR	5764644	Identifier	sp1		5764164	1					
ANR	5764645	Parameter	segment * sp1last	715:45:27659:27674	5764164	3	True				
ANR	5764646	ParameterType	segment *		5764164	0					
ANR	5764647	Identifier	sp1last		5764164	1					
ANR	5764648	Parameter	segment * * sc0	716:25:27702:27714	5764164	4	True				
ANR	5764649	ParameterType	segment * *		5764164	0					
ANR	5764650	Identifier	sc0		5764164	1					
ANR	5764651	Parameter	segment * * sc1	716:40:27717:27729	5764164	5	True				
ANR	5764652	ParameterType	segment * *		5764164	0					
ANR	5764653	Identifier	sc1		5764164	1					
ANR	5764654	CFGEntryNode	ENTRY		5764164		True				
ANR	5764655	CFGExitNode	EXIT		5764164		True				
ANR	5764656	Symbol	count1		5764164						
ANR	5764657	Symbol	* s0		5764164						
ANR	5764658	Symbol	s1s -> pt . y		5764164						
ANR	5764659	Symbol	s1s -> pt . x		5764164						
ANR	5764660	Symbol	count0		5764164						
ANR	5764661	Symbol	* s1		5764164						
ANR	5764662	Symbol	* sc0		5764164						
ANR	5764663	Symbol	s0 -> prev		5764164						
ANR	5764664	Symbol	s_gap		5764164						
ANR	5764665	Symbol	* sc1		5764164						
ANR	5764666	Symbol	s1 -> pt . y		5764164						
ANR	5764667	Symbol	min		5764164						
ANR	5764668	Symbol	s1s		5764164						
ANR	5764669	Symbol	fixed_1		5764164						
ANR	5764670	Symbol	s0 -> pt		5764164						
ANR	5764671	Symbol	search_limit		5764164						
ANR	5764672	Symbol	y0		5764164						
ANR	5764673	Symbol	any_abs		5764164						
ANR	5764674	Symbol	y1		5764164						
ANR	5764675	Symbol	s0		5764164						
ANR	5764676	Symbol	s1 -> pt . x		5764164						
ANR	5764677	Symbol	s1		5764164						
ANR	5764678	Symbol	sc1		5764164						
ANR	5764679	Symbol	* s0s		5764164						
ANR	5764680	Symbol	sc0		5764164						
ANR	5764681	Symbol	min_length		5764164						
ANR	5764682	Symbol	max		5764164						
ANR	5764683	Symbol	false		5764164						
ANR	5764684	Symbol	s_line		5764164						
ANR	5764685	Symbol	sp0last		5764164						
ANR	5764686	Symbol	s0s -> pt . y		5764164						
ANR	5764687	Symbol	s0 -> type		5764164						
ANR	5764688	Symbol	sp0		5764164						
ANR	5764689	Symbol	s0s -> pt . x		5764164						
ANR	5764690	Symbol	s0 -> pt . y		5764164						
ANR	5764691	Symbol	s0 -> pt . x		5764164						
ANR	5764692	Symbol	sp1		5764164						
ANR	5764693	Symbol	s0s		5764164						
ANR	5764694	Symbol	true		5764164						
ANR	5764695	Symbol	s1 -> prev		5764164						
ANR	5764696	Symbol	sp1last		5764164						
ANR	5764697	Symbol	s1 -> pt		5764164						
ANR	5764698	Symbol	s1 -> type		5764164						
ANR	5764699	Symbol	s0s -> pt		5764164						
ANR	5764700	Symbol	s1s -> pt		5764164						
ANR	5764701	Symbol	* s1s		5764164						
ANR	5764702	Function	gx_path_merge_contacting_contours	772:0:30239:34262							
ANR	5764703	FunctionDef	gx_path_merge_contacting_contours (gx_path * ppath)		5764702	0					
ANR	5764704	CompoundStatement		774:0:30293:34262	5764702	0					
ANR	5764705	IdentifierDeclStatement	int window = 5 * 6 ;	779:4:30568:30632	5764702	0	True				
ANR	5764706	IdentifierDecl	window = 5 * 6		5764702	0					
ANR	5764707	IdentifierDeclType	int		5764702	0					
ANR	5764708	Identifier	window		5764702	1					
ANR	5764709	AssignmentExpression	window = 5 * 6		5764702	2		=			
ANR	5764710	Identifier	window		5764702	0					
ANR	5764711	MultiplicativeExpression	5 * 6		5764702	1		*			
ANR	5764712	PrimaryExpression	5		5764702	0					
ANR	5764713	PrimaryExpression	6		5764702	1					
ANR	5764714	IdentifierDeclStatement	subpath * sp0 = ppath -> segments -> contents . subpath_first ;	780:4:30638:30692	5764702	1	True				
ANR	5764715	IdentifierDecl	* sp0 = ppath -> segments -> contents . subpath_first		5764702	0					
ANR	5764716	IdentifierDeclType	subpath *		5764702	0					
ANR	5764717	Identifier	sp0		5764702	1					
ANR	5764718	AssignmentExpression	* sp0 = ppath -> segments -> contents . subpath_first		5764702	2		=			
ANR	5764719	Identifier	sp0		5764702	0					
ANR	5764720	MemberAccess	ppath -> segments -> contents . subpath_first		5764702	1					
ANR	5764721	PtrMemberAccess	ppath -> segments -> contents		5764702	0					
ANR	5764722	PtrMemberAccess	ppath -> segments		5764702	0					
ANR	5764723	Identifier	ppath		5764702	0					
ANR	5764724	Identifier	segments		5764702	1					
ANR	5764725	Identifier	contents		5764702	1					
ANR	5764726	Identifier	subpath_first		5764702	1					
ANR	5764727	ForStatement	for ( ; sp0 != NULL ; sp0 = ( subpath * ) sp0 -> last -> next )		5764702	2					
ANR	5764728	Condition	sp0 != NULL	782:11:30706:30716	5764702	0	True				
ANR	5764729	EqualityExpression	sp0 != NULL		5764702	0		!=			
ANR	5764730	Identifier	sp0		5764702	0					
ANR	5764731	Identifier	NULL		5764702	1					
ANR	5764732	AssignmentExpression	sp0 = ( subpath * ) sp0 -> last -> next	782:24:30719:30750	5764702	1	True	=			
ANR	5764733	Identifier	sp0		5764702	0					
ANR	5764734	CastExpression	( subpath * ) sp0 -> last -> next		5764702	1					
ANR	5764735	CastTarget	subpath *		5764702	0					
ANR	5764736	PtrMemberAccess	sp0 -> last -> next		5764702	1					
ANR	5764737	PtrMemberAccess	sp0 -> last		5764702	0					
ANR	5764738	Identifier	sp0		5764702	0					
ANR	5764739	Identifier	last		5764702	1					
ANR	5764740	Identifier	next		5764702	1					
ANR	5764741	CompoundStatement		13:8:594:603	5764702	2					
ANR	5764742	IdentifierDeclStatement	segment * sp0last = sp0 -> last ;	783:8:30763:30791	5764702	0	True				
ANR	5764743	IdentifierDecl	* sp0last = sp0 -> last		5764702	0					
ANR	5764744	IdentifierDeclType	segment *		5764702	0					
ANR	5764745	Identifier	sp0last		5764702	1					
ANR	5764746	AssignmentExpression	* sp0last = sp0 -> last		5764702	2		=			
ANR	5764747	Identifier	sp0last		5764702	0					
ANR	5764748	PtrMemberAccess	sp0 -> last		5764702	1					
ANR	5764749	Identifier	sp0		5764702	0					
ANR	5764750	Identifier	last		5764702	1					
ANR	5764751	IdentifierDeclStatement	"subpath * sp1 = ( subpath * ) sp0last -> next , * spnext ;"	784:8:30801:30849	5764702	1	True				
ANR	5764752	IdentifierDecl	* sp1 = ( subpath * ) sp0last -> next		5764702	0					
ANR	5764753	IdentifierDeclType	subpath *		5764702	0					
ANR	5764754	Identifier	sp1		5764702	1					
ANR	5764755	AssignmentExpression	* sp1 = ( subpath * ) sp0last -> next		5764702	2		=			
ANR	5764756	Identifier	sp1		5764702	0					
ANR	5764757	CastExpression	( subpath * ) sp0last -> next		5764702	1					
ANR	5764758	CastTarget	subpath *		5764702	0					
ANR	5764759	PtrMemberAccess	sp0last -> next		5764702	1					
ANR	5764760	Identifier	sp0last		5764702	0					
ANR	5764761	Identifier	next		5764702	1					
ANR	5764762	IdentifierDecl	* spnext		5764702	1					
ANR	5764763	IdentifierDeclType	subpath *		5764702	0					
ANR	5764764	Identifier	spnext		5764702	1					
ANR	5764765	IdentifierDeclStatement	subpath * sp1p = sp0 ;	785:8:30859:30878	5764702	2	True				
ANR	5764766	IdentifierDecl	* sp1p = sp0		5764702	0					
ANR	5764767	IdentifierDeclType	subpath *		5764702	0					
ANR	5764768	Identifier	sp1p		5764702	1					
ANR	5764769	AssignmentExpression	* sp1p = sp0		5764702	2		=			
ANR	5764770	Identifier	sp0		5764702	0					
ANR	5764771	Identifier	sp0		5764702	1					
ANR	5764772	IdentifierDeclStatement	int count ;	786:8:30888:30897	5764702	3	True				
ANR	5764773	IdentifierDecl	count		5764702	0					
ANR	5764774	IdentifierDeclType	int		5764702	0					
ANR	5764775	Identifier	count		5764702	1					
ANR	5764776	ForStatement	"for ( count = 0 ; sp1 != NULL && count < window ; sp1 = spnext , count ++ )"		5764702	4					
ANR	5764777	ForInit	count = 0 ;	788:13:30913:30922	5764702	0	True				
ANR	5764778	AssignmentExpression	count = 0		5764702	0		=			
ANR	5764779	Identifier	count		5764702	0					
ANR	5764780	PrimaryExpression	0		5764702	1					
ANR	5764781	Condition	sp1 != NULL && count < window	788:24:30924:30952	5764702	1	True				
ANR	5764782	AndExpression	sp1 != NULL && count < window		5764702	0		&&			
ANR	5764783	EqualityExpression	sp1 != NULL		5764702	0		!=			
ANR	5764784	Identifier	sp1		5764702	0					
ANR	5764785	Identifier	NULL		5764702	1					
ANR	5764786	RelationalExpression	count < window		5764702	1		<			
ANR	5764787	Identifier	count		5764702	0					
ANR	5764788	Identifier	window		5764702	1					
ANR	5764789	Expression	"sp1 = spnext , count ++"	788:55:30955:30975	5764702	2	True				
ANR	5764790	AssignmentExpression	sp1 = spnext		5764702	0		=			
ANR	5764791	Identifier	sp1		5764702	0					
ANR	5764792	Identifier	spnext		5764702	1					
ANR	5764793	PostIncDecOperationExpression	count ++		5764702	1					
ANR	5764794	Identifier	count		5764702	0					
ANR	5764795	IncDec	++		5764702	1					
ANR	5764796	CompoundStatement		17:12:740:770	5764702	3					
ANR	5764797	IdentifierDeclStatement	segment * sp1last = sp1 -> last ;	789:12:30992:31020	5764702	0	True				
ANR	5764798	IdentifierDecl	* sp1last = sp1 -> last		5764702	0					
ANR	5764799	IdentifierDeclType	segment *		5764702	0					
ANR	5764800	Identifier	sp1last		5764702	1					
ANR	5764801	AssignmentExpression	* sp1last = sp1 -> last		5764702	2		=			
ANR	5764802	Identifier	sp1last		5764702	0					
ANR	5764803	PtrMemberAccess	sp1 -> last		5764702	1					
ANR	5764804	Identifier	sp1		5764702	0					
ANR	5764805	Identifier	last		5764702	1					
ANR	5764806	IdentifierDeclStatement	"segment * sc0 , * sc1 , * old_first ;"	790:12:31034:31064	5764702	1	True				
ANR	5764807	IdentifierDecl	* sc0		5764702	0					
ANR	5764808	IdentifierDeclType	segment *		5764702	0					
ANR	5764809	Identifier	sc0		5764702	1					
ANR	5764810	IdentifierDecl	* sc1		5764702	1					
ANR	5764811	IdentifierDeclType	segment *		5764702	0					
ANR	5764812	Identifier	sc1		5764702	1					
ANR	5764813	IdentifierDecl	* old_first		5764702	2					
ANR	5764814	IdentifierDeclType	segment *		5764702	0					
ANR	5764815	Identifier	old_first		5764702	1					
ANR	5764816	ExpressionStatement	spnext = ( subpath * ) sp1last -> next	792:12:31079:31112	5764702	2	True				
ANR	5764817	AssignmentExpression	spnext = ( subpath * ) sp1last -> next		5764702	0		=			
ANR	5764818	Identifier	spnext		5764702	0					
ANR	5764819	CastExpression	( subpath * ) sp1last -> next		5764702	1					
ANR	5764820	CastTarget	subpath *		5764702	0					
ANR	5764821	PtrMemberAccess	sp1last -> next		5764702	1					
ANR	5764822	Identifier	sp1last		5764702	0					
ANR	5764823	Identifier	next		5764702	1					
ANR	5764824	IfStatement	"if ( find_contacting_segments ( sp0 , sp0last , sp1 , sp1last , & sc0 , & sc1 ) )"		5764702	3					
ANR	5764825	Condition	"find_contacting_segments ( sp0 , sp0last , sp1 , sp1last , & sc0 , & sc1 )"	793:16:31130:31193	5764702	0	True				
ANR	5764826	CallExpression	"find_contacting_segments ( sp0 , sp0last , sp1 , sp1last , & sc0 , & sc1 )"		5764702	0					
ANR	5764827	Callee	find_contacting_segments		5764702	0					
ANR	5764828	Identifier	find_contacting_segments		5764702	0					
ANR	5764829	ArgumentList	sp0		5764702	1					
ANR	5764830	Argument	sp0		5764702	0					
ANR	5764831	Identifier	sp0		5764702	0					
ANR	5764832	Argument	sp0last		5764702	1					
ANR	5764833	Identifier	sp0last		5764702	0					
ANR	5764834	Argument	sp1		5764702	2					
ANR	5764835	Identifier	sp1		5764702	0					
ANR	5764836	Argument	sp1last		5764702	3					
ANR	5764837	Identifier	sp1last		5764702	0					
ANR	5764838	Argument	& sc0		5764702	4					
ANR	5764839	UnaryOperationExpression	& sc0		5764702	0					
ANR	5764840	UnaryOperator	&		5764702	0					
ANR	5764841	Identifier	sc0		5764702	1					
ANR	5764842	Argument	& sc1		5764702	5					
ANR	5764843	UnaryOperationExpression	& sc1		5764702	0					
ANR	5764844	UnaryOperator	&		5764702	0					
ANR	5764845	Identifier	sc1		5764702	1					
ANR	5764846	CompoundStatement		20:82:902:902	5764702	1					
ANR	5764847	ExpressionStatement	sp1 -> prev -> next = sp1last -> next	795:16:31272:31303	5764702	0	True				
ANR	5764848	AssignmentExpression	sp1 -> prev -> next = sp1last -> next		5764702	0		=			
ANR	5764849	PtrMemberAccess	sp1 -> prev -> next		5764702	0					
ANR	5764850	PtrMemberAccess	sp1 -> prev		5764702	0					
ANR	5764851	Identifier	sp1		5764702	0					
ANR	5764852	Identifier	prev		5764702	1					
ANR	5764853	Identifier	next		5764702	1					
ANR	5764854	PtrMemberAccess	sp1last -> next		5764702	1					
ANR	5764855	Identifier	sp1last		5764702	0					
ANR	5764856	Identifier	next		5764702	1					
ANR	5764857	IfStatement	if ( sp1last -> next != NULL )		5764702	1					
ANR	5764858	Condition	sp1last -> next != NULL	796:20:31325:31345	5764702	0	True				
ANR	5764859	EqualityExpression	sp1last -> next != NULL		5764702	0		!=			
ANR	5764860	PtrMemberAccess	sp1last -> next		5764702	0					
ANR	5764861	Identifier	sp1last		5764702	0					
ANR	5764862	Identifier	next		5764702	1					
ANR	5764863	Identifier	NULL		5764702	1					
ANR	5764864	ExpressionStatement	sp1last -> next -> prev = sp1 -> prev	797:20:31368:31399	5764702	1	True				
ANR	5764865	AssignmentExpression	sp1last -> next -> prev = sp1 -> prev		5764702	0		=			
ANR	5764866	PtrMemberAccess	sp1last -> next -> prev		5764702	0					
ANR	5764867	PtrMemberAccess	sp1last -> next		5764702	0					
ANR	5764868	Identifier	sp1last		5764702	0					
ANR	5764869	Identifier	next		5764702	1					
ANR	5764870	Identifier	prev		5764702	1					
ANR	5764871	PtrMemberAccess	sp1 -> prev		5764702	1					
ANR	5764872	Identifier	sp1		5764702	0					
ANR	5764873	Identifier	prev		5764702	1					
ANR	5764874	ExpressionStatement	sp1 -> prev = 0	798:16:31417:31430	5764702	2	True				
ANR	5764875	AssignmentExpression	sp1 -> prev = 0		5764702	0		=			
ANR	5764876	PtrMemberAccess	sp1 -> prev		5764702	0					
ANR	5764877	Identifier	sp1		5764702	0					
ANR	5764878	Identifier	prev		5764702	1					
ANR	5764879	PrimaryExpression	0		5764702	1					
ANR	5764880	ExpressionStatement	sp1last -> next = 0	799:16:31448:31465	5764702	3	True				
ANR	5764881	AssignmentExpression	sp1last -> next = 0		5764702	0		=			
ANR	5764882	PtrMemberAccess	sp1last -> next		5764702	0					
ANR	5764883	Identifier	sp1last		5764702	0					
ANR	5764884	Identifier	next		5764702	1					
ANR	5764885	PrimaryExpression	0		5764702	1					
ANR	5764886	ExpressionStatement	old_first = sp1 -> next	800:16:31483:31504	5764702	4	True				
ANR	5764887	AssignmentExpression	old_first = sp1 -> next		5764702	0		=			
ANR	5764888	Identifier	old_first		5764702	0					
ANR	5764889	PtrMemberAccess	sp1 -> next		5764702	1					
ANR	5764890	Identifier	sp1		5764702	0					
ANR	5764891	Identifier	next		5764702	1					
ANR	5764892	IfStatement	if ( ppath -> segments -> contents . subpath_current == sp1 )		5764702	5					
ANR	5764893	Condition	ppath -> segments -> contents . subpath_current == sp1	802:20:31623:31670	5764702	0	True				
ANR	5764894	EqualityExpression	ppath -> segments -> contents . subpath_current == sp1		5764702	0		==			
ANR	5764895	MemberAccess	ppath -> segments -> contents . subpath_current		5764702	0					
ANR	5764896	PtrMemberAccess	ppath -> segments -> contents		5764702	0					
ANR	5764897	PtrMemberAccess	ppath -> segments		5764702	0					
ANR	5764898	Identifier	ppath		5764702	0					
ANR	5764899	Identifier	segments		5764702	1					
ANR	5764900	Identifier	contents		5764702	1					
ANR	5764901	Identifier	subpath_current		5764702	1					
ANR	5764902	Identifier	sp1		5764702	1					
ANR	5764903	CompoundStatement		29:70:1379:1379	5764702	1					
ANR	5764904	ExpressionStatement	ppath -> segments -> contents . subpath_current = sp1p	803:20:31695:31743	5764702	0	True				
ANR	5764905	AssignmentExpression	ppath -> segments -> contents . subpath_current = sp1p		5764702	0		=			
ANR	5764906	MemberAccess	ppath -> segments -> contents . subpath_current		5764702	0					
ANR	5764907	PtrMemberAccess	ppath -> segments -> contents		5764702	0					
ANR	5764908	PtrMemberAccess	ppath -> segments		5764702	0					
ANR	5764909	Identifier	ppath		5764702	0					
ANR	5764910	Identifier	segments		5764702	1					
ANR	5764911	Identifier	contents		5764702	1					
ANR	5764912	Identifier	subpath_current		5764702	1					
ANR	5764913	Identifier	sp1p		5764702	1					
ANR	5764914	IfStatement	if ( sp1last -> type == s_line_close )		5764702	6					
ANR	5764915	Condition	sp1last -> type == s_line_close	805:20:31783:31811	5764702	0	True				
ANR	5764916	EqualityExpression	sp1last -> type == s_line_close		5764702	0		==			
ANR	5764917	PtrMemberAccess	sp1last -> type		5764702	0					
ANR	5764918	Identifier	sp1last		5764702	0					
ANR	5764919	Identifier	type		5764702	1					
ANR	5764920	Identifier	s_line_close		5764702	1					
ANR	5764921	CompoundStatement		32:51:1520:1520	5764702	1					
ANR	5764922	ExpressionStatement	sp1last -> type = s_line	807:20:31929:31951	5764702	0	True				
ANR	5764923	AssignmentExpression	sp1last -> type = s_line		5764702	0		=			
ANR	5764924	PtrMemberAccess	sp1last -> type		5764702	0					
ANR	5764925	Identifier	sp1last		5764702	0					
ANR	5764926	Identifier	type		5764702	1					
ANR	5764927	Identifier	s_line		5764702	1					
ANR	5764928	ExpressionStatement	"gs_free_object ( gs_memory_stable ( ppath -> memory ) , sp1 , ""gx_path_merge_contacting_contours"" )"	809:20:32035:32124	5764702	1	True				
ANR	5764929	CallExpression	"gs_free_object ( gs_memory_stable ( ppath -> memory ) , sp1 , ""gx_path_merge_contacting_contours"" )"		5764702	0					
ANR	5764930	Callee	gs_free_object		5764702	0					
ANR	5764931	Identifier	gs_free_object		5764702	0					
ANR	5764932	ArgumentList	gs_memory_stable ( ppath -> memory )		5764702	1					
ANR	5764933	Argument	gs_memory_stable ( ppath -> memory )		5764702	0					
ANR	5764934	CallExpression	gs_memory_stable ( ppath -> memory )		5764702	0					
ANR	5764935	Callee	gs_memory_stable		5764702	0					
ANR	5764936	Identifier	gs_memory_stable		5764702	0					
ANR	5764937	ArgumentList	ppath -> memory		5764702	1					
ANR	5764938	Argument	ppath -> memory		5764702	0					
ANR	5764939	PtrMemberAccess	ppath -> memory		5764702	0					
ANR	5764940	Identifier	ppath		5764702	0					
ANR	5764941	Identifier	memory		5764702	1					
ANR	5764942	Argument	sp1		5764702	1					
ANR	5764943	Identifier	sp1		5764702	0					
ANR	5764944	Argument	"""gx_path_merge_contacting_contours"""		5764702	2					
ANR	5764945	PrimaryExpression	"""gx_path_merge_contacting_contours"""		5764702	0					
ANR	5764946	ElseStatement	else		5764702	0					
ANR	5764947	IfStatement	if ( sp1last -> pt . x == sp1 -> pt . x && sp1last -> pt . y == sp1 -> pt . y )		5764702	0					
ANR	5764948	Condition	sp1last -> pt . x == sp1 -> pt . x && sp1last -> pt . y == sp1 -> pt . y	810:27:32153:32208	5764702	0	True				
ANR	5764949	AndExpression	sp1last -> pt . x == sp1 -> pt . x && sp1last -> pt . y == sp1 -> pt . y		5764702	0		&&			
ANR	5764950	EqualityExpression	sp1last -> pt . x == sp1 -> pt . x		5764702	0		==			
ANR	5764951	MemberAccess	sp1last -> pt . x		5764702	0					
ANR	5764952	PtrMemberAccess	sp1last -> pt		5764702	0					
ANR	5764953	Identifier	sp1last		5764702	0					
ANR	5764954	Identifier	pt		5764702	1					
ANR	5764955	Identifier	x		5764702	1					
ANR	5764956	MemberAccess	sp1 -> pt . x		5764702	1					
ANR	5764957	PtrMemberAccess	sp1 -> pt		5764702	0					
ANR	5764958	Identifier	sp1		5764702	0					
ANR	5764959	Identifier	pt		5764702	1					
ANR	5764960	Identifier	x		5764702	1					
ANR	5764961	EqualityExpression	sp1last -> pt . y == sp1 -> pt . y		5764702	1		==			
ANR	5764962	MemberAccess	sp1last -> pt . y		5764702	0					
ANR	5764963	PtrMemberAccess	sp1last -> pt		5764702	0					
ANR	5764964	Identifier	sp1last		5764702	0					
ANR	5764965	Identifier	pt		5764702	1					
ANR	5764966	Identifier	y		5764702	1					
ANR	5764967	MemberAccess	sp1 -> pt . y		5764702	1					
ANR	5764968	PtrMemberAccess	sp1 -> pt		5764702	0					
ANR	5764969	Identifier	sp1		5764702	0					
ANR	5764970	Identifier	pt		5764702	1					
ANR	5764971	Identifier	y		5764702	1					
ANR	5764972	CompoundStatement		37:85:1917:1917	5764702	1					
ANR	5764973	ExpressionStatement	"gs_free_object ( gs_memory_stable ( ppath -> memory ) , sp1 , ""gx_path_merge_contacting_contours"" )"	813:20:32384:32473	5764702	0	True				
ANR	5764974	CallExpression	"gs_free_object ( gs_memory_stable ( ppath -> memory ) , sp1 , ""gx_path_merge_contacting_contours"" )"		5764702	0					
ANR	5764975	Callee	gs_free_object		5764702	0					
ANR	5764976	Identifier	gs_free_object		5764702	0					
ANR	5764977	ArgumentList	gs_memory_stable ( ppath -> memory )		5764702	1					
ANR	5764978	Argument	gs_memory_stable ( ppath -> memory )		5764702	0					
ANR	5764979	CallExpression	gs_memory_stable ( ppath -> memory )		5764702	0					
ANR	5764980	Callee	gs_memory_stable		5764702	0					
ANR	5764981	Identifier	gs_memory_stable		5764702	0					
ANR	5764982	ArgumentList	ppath -> memory		5764702	1					
ANR	5764983	Argument	ppath -> memory		5764702	0					
ANR	5764984	PtrMemberAccess	ppath -> memory		5764702	0					
ANR	5764985	Identifier	ppath		5764702	0					
ANR	5764986	Identifier	memory		5764702	1					
ANR	5764987	Argument	sp1		5764702	1					
ANR	5764988	Identifier	sp1		5764702	0					
ANR	5764989	Argument	"""gx_path_merge_contacting_contours"""		5764702	2					
ANR	5764990	PrimaryExpression	"""gx_path_merge_contacting_contours"""		5764702	0					
ANR	5764991	ElseStatement	else		5764702	0					
ANR	5764992	CompoundStatement		41:23:2204:2204	5764702	0					
ANR	5764993	ExpressionStatement	sp1 -> type = s_line	817:20:32664:32682	5764702	0	True				
ANR	5764994	AssignmentExpression	sp1 -> type = s_line		5764702	0		=			
ANR	5764995	PtrMemberAccess	sp1 -> type		5764702	0					
ANR	5764996	Identifier	sp1		5764702	0					
ANR	5764997	Identifier	type		5764702	1					
ANR	5764998	Identifier	s_line		5764702	1					
ANR	5764999	ExpressionStatement	sp1last -> next = ( segment * ) sp1	818:20:32704:32734	5764702	1	True				
ANR	5765000	AssignmentExpression	sp1last -> next = ( segment * ) sp1		5764702	0		=			
ANR	5765001	PtrMemberAccess	sp1last -> next		5764702	0					
ANR	5765002	Identifier	sp1last		5764702	0					
ANR	5765003	Identifier	next		5764702	1					
ANR	5765004	CastExpression	( segment * ) sp1		5764702	1					
ANR	5765005	CastTarget	segment *		5764702	0					
ANR	5765006	Identifier	sp1		5764702	1					
ANR	5765007	ExpressionStatement	sp1 -> next = NULL	819:20:32756:32772	5764702	2	True				
ANR	5765008	AssignmentExpression	sp1 -> next = NULL		5764702	0		=			
ANR	5765009	PtrMemberAccess	sp1 -> next		5764702	0					
ANR	5765010	Identifier	sp1		5764702	0					
ANR	5765011	Identifier	next		5764702	1					
ANR	5765012	Identifier	NULL		5764702	1					
ANR	5765013	ExpressionStatement	sp1 -> prev = sp1last	820:20:32794:32813	5764702	3	True				
ANR	5765014	AssignmentExpression	sp1 -> prev = sp1last		5764702	0		=			
ANR	5765015	PtrMemberAccess	sp1 -> prev		5764702	0					
ANR	5765016	Identifier	sp1		5764702	0					
ANR	5765017	Identifier	prev		5764702	1					
ANR	5765018	Identifier	sp1last		5764702	1					
ANR	5765019	ExpressionStatement	sp1 -> last = NULL	821:20:32835:32851	5764702	4	True				
ANR	5765020	AssignmentExpression	sp1 -> last = NULL		5764702	0		=			
ANR	5765021	PtrMemberAccess	sp1 -> last		5764702	0					
ANR	5765022	Identifier	sp1		5764702	0					
ANR	5765023	Identifier	last		5764702	1					
ANR	5765024	Identifier	NULL		5764702	1					
ANR	5765025	ExpressionStatement	sp1last = ( segment * ) sp1	822:20:32900:32924	5764702	5	True				
ANR	5765026	AssignmentExpression	sp1last = ( segment * ) sp1		5764702	0		=			
ANR	5765027	Identifier	sp1last		5764702	0					
ANR	5765028	CastExpression	( segment * ) sp1		5764702	1					
ANR	5765029	CastTarget	segment *		5764702	0					
ANR	5765030	Identifier	sp1		5764702	1					
ANR	5765031	ExpressionStatement	sp1 = 0	824:16:32960:32967	5764702	7	True				
ANR	5765032	AssignmentExpression	sp1 = 0		5764702	0		=			
ANR	5765033	Identifier	sp1		5764702	0					
ANR	5765034	PrimaryExpression	0		5764702	1					
ANR	5765035	CompoundStatement		53:16:2757:2757	5764702	8					
ANR	5765036	ExpressionStatement	sp1last -> next = old_first	827:20:33114:33139	5764702	0	True				
ANR	5765037	AssignmentExpression	sp1last -> next = old_first		5764702	0		=			
ANR	5765038	PtrMemberAccess	sp1last -> next		5764702	0					
ANR	5765039	Identifier	sp1last		5764702	0					
ANR	5765040	Identifier	next		5764702	1					
ANR	5765041	Identifier	old_first		5764702	1					
ANR	5765042	ExpressionStatement	old_first -> prev = sp1last	828:20:33161:33186	5764702	1	True				
ANR	5765043	AssignmentExpression	old_first -> prev = sp1last		5764702	0		=			
ANR	5765044	PtrMemberAccess	old_first -> prev		5764702	0					
ANR	5765045	Identifier	old_first		5764702	0					
ANR	5765046	Identifier	prev		5764702	1					
ANR	5765047	Identifier	sp1last		5764702	1					
ANR	5765048	ExpressionStatement	sp1last = sc1 -> prev	830:20:33254:33273	5764702	2	True				
ANR	5765049	AssignmentExpression	sp1last = sc1 -> prev		5764702	0		=			
ANR	5765050	Identifier	sp1last		5764702	0					
ANR	5765051	PtrMemberAccess	sc1 -> prev		5764702	1					
ANR	5765052	Identifier	sc1		5764702	0					
ANR	5765053	Identifier	prev		5764702	1					
ANR	5765054	ExpressionStatement	sc1 -> prev -> next = 0	831:20:33295:33314	5764702	3	True				
ANR	5765055	AssignmentExpression	sc1 -> prev -> next = 0		5764702	0		=			
ANR	5765056	PtrMemberAccess	sc1 -> prev -> next		5764702	0					
ANR	5765057	PtrMemberAccess	sc1 -> prev		5764702	0					
ANR	5765058	Identifier	sc1		5764702	0					
ANR	5765059	Identifier	prev		5764702	1					
ANR	5765060	Identifier	next		5764702	1					
ANR	5765061	PrimaryExpression	0		5764702	1					
ANR	5765062	ExpressionStatement	sc1 -> prev = 0	832:20:33336:33349	5764702	4	True				
ANR	5765063	AssignmentExpression	sc1 -> prev = 0		5764702	0		=			
ANR	5765064	PtrMemberAccess	sc1 -> prev		5764702	0					
ANR	5765065	Identifier	sc1		5764702	0					
ANR	5765066	Identifier	prev		5764702	1					
ANR	5765067	PrimaryExpression	0		5764702	1					
ANR	5765068	IfStatement	if ( ppath -> segments -> contents . subpath_current == sp1 )		5764702	5					
ANR	5765069	Condition	ppath -> segments -> contents . subpath_current == sp1	834:24:33451:33498	5764702	0	True				
ANR	5765070	EqualityExpression	ppath -> segments -> contents . subpath_current == sp1		5764702	0		==			
ANR	5765071	MemberAccess	ppath -> segments -> contents . subpath_current		5764702	0					
ANR	5765072	PtrMemberAccess	ppath -> segments -> contents		5764702	0					
ANR	5765073	PtrMemberAccess	ppath -> segments		5764702	0					
ANR	5765074	Identifier	ppath		5764702	0					
ANR	5765075	Identifier	segments		5764702	1					
ANR	5765076	Identifier	contents		5764702	1					
ANR	5765077	Identifier	subpath_current		5764702	1					
ANR	5765078	Identifier	sp1		5764702	1					
ANR	5765079	CompoundStatement		61:74:3207:3207	5764702	1					
ANR	5765080	ExpressionStatement	ppath -> segments -> contents . subpath_current = sp1p	835:24:33527:33575	5764702	0	True				
ANR	5765081	AssignmentExpression	ppath -> segments -> contents . subpath_current = sp1p		5764702	0		=			
ANR	5765082	MemberAccess	ppath -> segments -> contents . subpath_current		5764702	0					
ANR	5765083	PtrMemberAccess	ppath -> segments -> contents		5764702	0					
ANR	5765084	PtrMemberAccess	ppath -> segments		5764702	0					
ANR	5765085	Identifier	ppath		5764702	0					
ANR	5765086	Identifier	segments		5764702	1					
ANR	5765087	Identifier	contents		5764702	1					
ANR	5765088	Identifier	subpath_current		5764702	1					
ANR	5765089	Identifier	sp1p		5764702	1					
ANR	5765090	ExpressionStatement	"gs_free_object ( gs_memory_stable ( ppath -> memory ) , sp1 , ""gx_path_merge_contacting_contours"" )"	837:20:33619:33708	5764702	6	True				
ANR	5765091	CallExpression	"gs_free_object ( gs_memory_stable ( ppath -> memory ) , sp1 , ""gx_path_merge_contacting_contours"" )"		5764702	0					
ANR	5765092	Callee	gs_free_object		5764702	0					
ANR	5765093	Identifier	gs_free_object		5764702	0					
ANR	5765094	ArgumentList	gs_memory_stable ( ppath -> memory )		5764702	1					
ANR	5765095	Argument	gs_memory_stable ( ppath -> memory )		5764702	0					
ANR	5765096	CallExpression	gs_memory_stable ( ppath -> memory )		5764702	0					
ANR	5765097	Callee	gs_memory_stable		5764702	0					
ANR	5765098	Identifier	gs_memory_stable		5764702	0					
ANR	5765099	ArgumentList	ppath -> memory		5764702	1					
ANR	5765100	Argument	ppath -> memory		5764702	0					
ANR	5765101	PtrMemberAccess	ppath -> memory		5764702	0					
ANR	5765102	Identifier	ppath		5764702	0					
ANR	5765103	Identifier	memory		5764702	1					
ANR	5765104	Argument	sp1		5764702	1					
ANR	5765105	Identifier	sp1		5764702	0					
ANR	5765106	Argument	"""gx_path_merge_contacting_contours"""		5764702	2					
ANR	5765107	PrimaryExpression	"""gx_path_merge_contacting_contours"""		5764702	0					
ANR	5765108	ExpressionStatement	sp1 = 0	838:20:33730:33737	5764702	7	True				
ANR	5765109	AssignmentExpression	sp1 = 0		5764702	0		=			
ANR	5765110	Identifier	sp1		5764702	0					
ANR	5765111	PrimaryExpression	0		5764702	1					
ANR	5765112	ExpressionStatement	sc0 -> prev -> next = sc1	841:16:33861:33882	5764702	9	True				
ANR	5765113	AssignmentExpression	sc0 -> prev -> next = sc1		5764702	0		=			
ANR	5765114	PtrMemberAccess	sc0 -> prev -> next		5764702	0					
ANR	5765115	PtrMemberAccess	sc0 -> prev		5764702	0					
ANR	5765116	Identifier	sc0		5764702	0					
ANR	5765117	Identifier	prev		5764702	1					
ANR	5765118	Identifier	next		5764702	1					
ANR	5765119	Identifier	sc1		5764702	1					
ANR	5765120	ExpressionStatement	sc1 -> prev = sc0 -> prev	842:16:33900:33921	5764702	10	True				
ANR	5765121	AssignmentExpression	sc1 -> prev = sc0 -> prev		5764702	0		=			
ANR	5765122	PtrMemberAccess	sc1 -> prev		5764702	0					
ANR	5765123	Identifier	sc1		5764702	0					
ANR	5765124	Identifier	prev		5764702	1					
ANR	5765125	PtrMemberAccess	sc0 -> prev		5764702	1					
ANR	5765126	Identifier	sc0		5764702	0					
ANR	5765127	Identifier	prev		5764702	1					
ANR	5765128	ExpressionStatement	sp1last -> next = sc0	843:16:33939:33958	5764702	11	True				
ANR	5765129	AssignmentExpression	sp1last -> next = sc0		5764702	0		=			
ANR	5765130	PtrMemberAccess	sp1last -> next		5764702	0					
ANR	5765131	Identifier	sp1last		5764702	0					
ANR	5765132	Identifier	next		5764702	1					
ANR	5765133	Identifier	sc0		5764702	1					
ANR	5765134	ExpressionStatement	sc0 -> prev = sp1last	844:16:33976:33995	5764702	12	True				
ANR	5765135	AssignmentExpression	sc0 -> prev = sp1last		5764702	0		=			
ANR	5765136	PtrMemberAccess	sc0 -> prev		5764702	0					
ANR	5765137	Identifier	sc0		5764702	0					
ANR	5765138	Identifier	prev		5764702	1					
ANR	5765139	Identifier	sp1last		5764702	1					
ANR	5765140	ExpressionStatement	ppath -> subpath_count --	847:16:34161:34183	5764702	13	True				
ANR	5765141	PostIncDecOperationExpression	ppath -> subpath_count --		5764702	0					
ANR	5765142	PtrMemberAccess	ppath -> subpath_count		5764702	0					
ANR	5765143	Identifier	ppath		5764702	0					
ANR	5765144	Identifier	subpath_count		5764702	1					
ANR	5765145	IncDec	--		5764702	1					
ANR	5765146	ElseStatement	else		5764702	0					
ANR	5765147	ExpressionStatement	sp1p = sp1	849:16:34220:34230	5764702	0	True				
ANR	5765148	AssignmentExpression	sp1p = sp1		5764702	0		=			
ANR	5765149	Identifier	sp1p		5764702	0					
ANR	5765150	Identifier	sp1		5764702	1					
ANR	5765151	ReturnStatement	return 0 ;	852:4:34252:34260	5764702	3	True				
ANR	5765152	PrimaryExpression	0		5764702	0					
ANR	5765153	ReturnType	int		5764702	1					
ANR	5765154	Identifier	gx_path_merge_contacting_contours		5764702	2					
ANR	5765155	ParameterList	gx_path * ppath		5764702	3					
ANR	5765156	Parameter	gx_path * ppath	773:34:30277:30290	5764702	0	True				
ANR	5765157	ParameterType	gx_path *		5764702	0					
ANR	5765158	Identifier	ppath		5764702	1					
ANR	5765159	CFGEntryNode	ENTRY		5764702		True				
ANR	5765160	CFGExitNode	EXIT		5764702		True				
ANR	5765161	Symbol	* sc0 -> prev		5764702						
ANR	5765162	Symbol	ppath -> segments		5764702						
ANR	5765163	Symbol	* sc0		5764702						
ANR	5765164	Symbol	* sc1		5764702						
ANR	5765165	Symbol	sp1 -> next		5764702						
ANR	5765166	Symbol	ppath -> segments -> contents . subpath_current		5764702						
ANR	5765167	Symbol	sp1last -> type		5764702						
ANR	5765168	Symbol	* old_first		5764702						
ANR	5765169	Symbol	* sp0		5764702						
ANR	5765170	Symbol	old_first		5764702						
ANR	5765171	Symbol	* * sp1last		5764702						
ANR	5765172	Symbol	sc1 -> prev		5764702						
ANR	5765173	Symbol	* sp1		5764702						
ANR	5765174	Symbol	ppath -> segments -> contents		5764702						
ANR	5765175	Symbol	* ppath		5764702						
ANR	5765176	Symbol	NULL		5764702						
ANR	5765177	Symbol	sp1last -> next -> prev		5764702						
ANR	5765178	Symbol	sp1 -> pt		5764702						
ANR	5765179	Symbol	count		5764702						
ANR	5765180	Symbol	s_line_close		5764702						
ANR	5765181	Symbol	* sp1 -> prev		5764702						
ANR	5765182	Symbol	sp1 -> last		5764702						
ANR	5765183	Symbol	* * sc0		5764702						
ANR	5765184	Symbol	* * sc1		5764702						
ANR	5765185	Symbol	* * ppath		5764702						
ANR	5765186	Symbol	* sp1last -> next		5764702						
ANR	5765187	Symbol	sc1 -> prev -> next		5764702						
ANR	5765188	Symbol	& sc1		5764702						
ANR	5765189	Symbol	& sc0		5764702						
ANR	5765190	Symbol	ppath -> subpath_count		5764702						
ANR	5765191	Symbol	sp1 -> prev -> next		5764702						
ANR	5765192	Symbol	* sp0 -> last		5764702						
ANR	5765193	Symbol	* sp1last		5764702						
ANR	5765194	Symbol	old_first -> prev		5764702						
ANR	5765195	Symbol	sp1 -> type		5764702						
ANR	5765196	Symbol	* * sp0		5764702						
ANR	5765197	Symbol	find_contacting_segments		5764702						
ANR	5765198	Symbol	* * sp1		5764702						
ANR	5765199	Symbol	sp1p		5764702						
ANR	5765200	Symbol	ppath		5764702						
ANR	5765201	Symbol	spnext		5764702						
ANR	5765202	Symbol	sp1last -> next		5764702						
ANR	5765203	Symbol	sp0 -> last -> next		5764702						
ANR	5765204	Symbol	sc0 -> prev -> next		5764702						
ANR	5765205	Symbol	sp1last -> pt		5764702						
ANR	5765206	Symbol	sp0last -> next		5764702						
ANR	5765207	Symbol	sp1 -> prev		5764702						
ANR	5765208	Symbol	* sp0last		5764702						
ANR	5765209	Symbol	ppath -> memory		5764702						
ANR	5765210	Symbol	sc0 -> prev		5764702						
ANR	5765211	Symbol	* sc1 -> prev		5764702						
ANR	5765212	Symbol	sc1		5764702						
ANR	5765213	Symbol	sc0		5764702						
ANR	5765214	Symbol	sp0 -> last		5764702						
ANR	5765215	Symbol	s_line		5764702						
ANR	5765216	Symbol	gs_memory_stable		5764702						
ANR	5765217	Symbol	sp0last		5764702						
ANR	5765218	Symbol	* ppath -> segments		5764702						
ANR	5765219	Symbol	sp0		5764702						
ANR	5765220	Symbol	sp1		5764702						
ANR	5765221	Symbol	sp1last -> pt . x		5764702						
ANR	5765222	Symbol	ppath -> segments -> contents . subpath_first		5764702						
ANR	5765223	Symbol	sp1last		5764702						
ANR	5765224	Symbol	window		5764702						
ANR	5765225	Symbol	sp1 -> pt . x		5764702						
ANR	5765226	Symbol	sp1last -> pt . y		5764702						
ANR	5765227	Symbol	sp1 -> pt . y		5764702						
