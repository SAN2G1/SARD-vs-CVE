command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9352282	File	data/converged/CVE-2018-16863_ghostpdl/rastertoepson.c								
ANR	9352283	DeclStmt									
ANR	9352284	Decl							unsigned char	unsigned char * [ 6 ]	Planes
ANR	9352285	Decl							unsigned char	unsigned char *	CompBuffer
ANR	9352286	Decl							unsigned char	unsigned char * [ 2 ]	LineBuffers
ANR	9352287	DeclStmt									
ANR	9352288	Decl							int	int	Model
ANR	9352289	Decl							int	int	NumPlanes
ANR	9352290	Decl							int	int	Feed
ANR	9352291	Decl							int	int	EjectPage
ANR	9352292	DeclStmt									
ANR	9352293	Decl							int	int	DotBit
ANR	9352294	Decl							int	int	DotBytes
ANR	9352295	Decl							int	int	DotColumns
ANR	9352296	Decl							int	int	LineCount
ANR	9352297	Decl							int	int	EvenOffset
ANR	9352298	Decl							int	int	OddOffset
ANR	9352299	Decl							int	int	Shingling
ANR	9352300	Decl							int	int	Canceled
ANR	9352301	DeclStmt									
ANR	9352302	Decl							void	void ( void )	Setup
ANR	9352303	DeclStmt									
ANR	9352304	Decl							void	"void ( const ppd_file_t * ppd , const cups_page_header2_t * header )"	StartPage
ANR	9352305	DeclStmt									
ANR	9352306	Decl							void	void ( const cups_page_header2_t * header )	EndPage
ANR	9352307	DeclStmt									
ANR	9352308	Decl							void	void ( void )	Shutdown
ANR	9352309	DeclStmt									
ANR	9352310	Decl							void	void ( int sig )	CancelJob
ANR	9352311	DeclStmt									
ANR	9352312	Decl							void	"void ( const unsigned char * line , int length , int plane , int type , int xstep , int ystep )"	CompressData
ANR	9352313	DeclStmt									
ANR	9352314	Decl							void	void ( const cups_page_header2_t * header )	OutputLine
ANR	9352315	DeclStmt									
ANR	9352316	Decl							void	"void ( const cups_page_header2_t * header , int row )"	OutputRows
ANR	9352317	Function	Setup	102:0:2670:3074							
ANR	9352318	FunctionDef	Setup ()		9352317	0					
ANR	9352319	CompoundStatement		104:0:2687:3074	9352317	0					
ANR	9352320	IdentifierDeclStatement	const char * device_uri ;	105:2:2691:2713	9352317	0	True				
ANR	9352321	IdentifierDecl	* device_uri		9352317	0					
ANR	9352322	IdentifierDeclType	const char *		9352317	0					
ANR	9352323	Identifier	device_uri		9352317	1					
ANR	9352324	IfStatement	"if ( ( device_uri = getenv ( ""DEVICE_URI"" ) ) != NULL && strncmp ( device_uri , ""usb:"" , 4 ) == 0 && Model >= EPSON_ICOLOR )"		9352317	1					
ANR	9352325	Condition	"( device_uri = getenv ( ""DEVICE_URI"" ) ) != NULL && strncmp ( device_uri , ""usb:"" , 4 ) == 0 && Model >= EPSON_ICOLOR"	113:6:2890:3002	9352317	0	True				
ANR	9352326	AndExpression	"( device_uri = getenv ( ""DEVICE_URI"" ) ) != NULL && strncmp ( device_uri , ""usb:"" , 4 ) == 0 && Model >= EPSON_ICOLOR"		9352317	0		&&			
ANR	9352327	EqualityExpression	"( device_uri = getenv ( ""DEVICE_URI"" ) ) != NULL"		9352317	0		!=			
ANR	9352328	AssignmentExpression	"device_uri = getenv ( ""DEVICE_URI"" )"		9352317	0		=			
ANR	9352329	Identifier	device_uri		9352317	0					
ANR	9352330	CallExpression	"getenv ( ""DEVICE_URI"" )"		9352317	1					
ANR	9352331	Callee	getenv		9352317	0					
ANR	9352332	Identifier	getenv		9352317	0					
ANR	9352333	ArgumentList	"""DEVICE_URI"""		9352317	1					
ANR	9352334	Argument	"""DEVICE_URI"""		9352317	0					
ANR	9352335	PrimaryExpression	"""DEVICE_URI"""		9352317	0					
ANR	9352336	Identifier	NULL		9352317	1					
ANR	9352337	AndExpression	"strncmp ( device_uri , ""usb:"" , 4 ) == 0 && Model >= EPSON_ICOLOR"		9352317	1		&&			
ANR	9352338	EqualityExpression	"strncmp ( device_uri , ""usb:"" , 4 ) == 0"		9352317	0		==			
ANR	9352339	CallExpression	"strncmp ( device_uri , ""usb:"" , 4 )"		9352317	0					
ANR	9352340	Callee	strncmp		9352317	0					
ANR	9352341	Identifier	strncmp		9352317	0					
ANR	9352342	ArgumentList	device_uri		9352317	1					
ANR	9352343	Argument	device_uri		9352317	0					
ANR	9352344	Identifier	device_uri		9352317	0					
ANR	9352345	Argument	"""usb:"""		9352317	1					
ANR	9352346	PrimaryExpression	"""usb:"""		9352317	0					
ANR	9352347	Argument	4		9352317	2					
ANR	9352348	PrimaryExpression	4		9352317	0					
ANR	9352349	PrimaryExpression	0		9352317	1					
ANR	9352350	RelationalExpression	Model >= EPSON_ICOLOR		9352317	1		>=			
ANR	9352351	Identifier	Model		9352317	0					
ANR	9352352	Identifier	EPSON_ICOLOR		9352317	1					
ANR	9352353	ExpressionStatement	"pwrite ( ""\\000\\000\\000\\033\\001@EJL 1284.4\\n@EJL     \\n\\033@"" , 29 )"	115:4:3009:3072	9352317	1	True				
ANR	9352354	CallExpression	"pwrite ( ""\\000\\000\\000\\033\\001@EJL 1284.4\\n@EJL     \\n\\033@"" , 29 )"		9352317	0					
ANR	9352355	Callee	pwrite		9352317	0					
ANR	9352356	Identifier	pwrite		9352317	0					
ANR	9352357	ArgumentList	"""\\000\\000\\000\\033\\001@EJL 1284.4\\n@EJL     \\n\\033@"""		9352317	1					
ANR	9352358	Argument	"""\\000\\000\\000\\033\\001@EJL 1284.4\\n@EJL     \\n\\033@"""		9352317	0					
ANR	9352359	PrimaryExpression	"""\\000\\000\\000\\033\\001@EJL 1284.4\\n@EJL     \\n\\033@"""		9352317	0					
ANR	9352360	Argument	29		9352317	1					
ANR	9352361	PrimaryExpression	29		9352317	0					
ANR	9352362	ReturnType	void		9352317	1					
ANR	9352363	Identifier	Setup		9352317	2					
ANR	9352364	ParameterList			9352317	3					
ANR	9352365	CFGEntryNode	ENTRY		9352317		True				
ANR	9352366	CFGExitNode	EXIT		9352317		True				
ANR	9352367	Symbol	strncmp		9352317						
ANR	9352368	Symbol	NULL		9352317						
ANR	9352369	Symbol	device_uri		9352317						
ANR	9352370	Symbol	Model		9352317						
ANR	9352371	Symbol	EPSON_ICOLOR		9352317						
ANR	9352372	Symbol	getenv		9352317						
ANR	9352373	Function	StartPage	123:0:3131:7424							
ANR	9352374	FunctionDef	"StartPage (const ppd_file_t * ppd , const cups_page_header2_t * header)"		9352373	0					
ANR	9352375	CompoundStatement		127:0:3262:7424	9352373	0					
ANR	9352376	IdentifierDeclStatement	"int n , t ;"	128:2:3266:3274	9352373	0	True				
ANR	9352377	IdentifierDecl	n		9352373	0					
ANR	9352378	IdentifierDeclType	int		9352373	0					
ANR	9352379	Identifier	n		9352373	1					
ANR	9352380	IdentifierDecl	t		9352373	1					
ANR	9352381	IdentifierDeclType	int		9352373	0					
ANR	9352382	Identifier	t		9352373	1					
ANR	9352383	IdentifierDeclStatement	int plane ;	129:2:3295:3304	9352373	1	True				
ANR	9352384	IdentifierDecl	plane		9352373	0					
ANR	9352385	IdentifierDeclType	int		9352373	0					
ANR	9352386	Identifier	plane		9352373	1					
ANR	9352387	IfStatement	"if ( ppd && ppd -> nickname && strstr ( ppd -> nickname , ""OKIDATA"" ) != NULL )"		9352373	2					
ANR	9352388	Condition	"ppd && ppd -> nickname && strstr ( ppd -> nickname , ""OKIDATA"" ) != NULL"	136:6:3372:3435	9352373	0	True				
ANR	9352389	AndExpression	"ppd && ppd -> nickname && strstr ( ppd -> nickname , ""OKIDATA"" ) != NULL"		9352373	0		&&			
ANR	9352390	Identifier	ppd		9352373	0					
ANR	9352391	AndExpression	"ppd -> nickname && strstr ( ppd -> nickname , ""OKIDATA"" ) != NULL"		9352373	1		&&			
ANR	9352392	PtrMemberAccess	ppd -> nickname		9352373	0					
ANR	9352393	Identifier	ppd		9352373	0					
ANR	9352394	Identifier	nickname		9352373	1					
ANR	9352395	EqualityExpression	"strstr ( ppd -> nickname , ""OKIDATA"" ) != NULL"		9352373	1		!=			
ANR	9352396	CallExpression	"strstr ( ppd -> nickname , ""OKIDATA"" )"		9352373	0					
ANR	9352397	Callee	strstr		9352373	0					
ANR	9352398	Identifier	strstr		9352373	0					
ANR	9352399	ArgumentList	ppd -> nickname		9352373	1					
ANR	9352400	Argument	ppd -> nickname		9352373	0					
ANR	9352401	PtrMemberAccess	ppd -> nickname		9352373	0					
ANR	9352402	Identifier	ppd		9352373	0					
ANR	9352403	Identifier	nickname		9352373	1					
ANR	9352404	Argument	"""OKIDATA"""		9352373	1					
ANR	9352405	PrimaryExpression	"""OKIDATA"""		9352373	0					
ANR	9352406	Identifier	NULL		9352373	1					
ANR	9352407	ExpressionStatement	"printf ( ""\\033{A"" )"	137:4:3442:3458	9352373	1	True				
ANR	9352408	CallExpression	"printf ( ""\\033{A"" )"		9352373	0					
ANR	9352409	Callee	printf		9352373	0					
ANR	9352410	Identifier	printf		9352373	0					
ANR	9352411	ArgumentList	"""\\033{A"""		9352373	1					
ANR	9352412	Argument	"""\\033{A"""		9352373	0					
ANR	9352413	PrimaryExpression	"""\\033{A"""		9352373	0					
ANR	9352414	ExpressionStatement	"printf ( ""\\033@"" )"	139:2:3494:3509	9352373	3	True				
ANR	9352415	CallExpression	"printf ( ""\\033@"" )"		9352373	0					
ANR	9352416	Callee	printf		9352373	0					
ANR	9352417	Identifier	printf		9352373	0					
ANR	9352418	ArgumentList	"""\\033@"""		9352373	1					
ANR	9352419	Argument	"""\\033@"""		9352373	0					
ANR	9352420	PrimaryExpression	"""\\033@"""		9352373	0					
ANR	9352421	SwitchStatement	switch ( Model )		9352373	4					
ANR	9352422	Condition	Model	145:10:3578:3582	9352373	0	True				
ANR	9352423	Identifier	Model		9352373	0					
ANR	9352424	CompoundStatement		20:2:324:324	9352373	1					
ANR	9352425	Label	case EPSON_9PIN :	147:4:3593:3609	9352373	0	True				
ANR	9352426	Identifier	EPSON_9PIN		9352373	0					
ANR	9352427	Label	case EPSON_24PIN :	148:4:3615:3632	9352373	1	True				
ANR	9352428	Identifier	EPSON_24PIN		9352373	0					
ANR	9352429	ExpressionStatement	"printf ( ""\\033P\\022"" )"	149:8:3642:3661	9352373	2	True				
ANR	9352430	CallExpression	"printf ( ""\\033P\\022"" )"		9352373	0					
ANR	9352431	Callee	printf		9352373	0					
ANR	9352432	Identifier	printf		9352373	0					
ANR	9352433	ArgumentList	"""\\033P\\022"""		9352373	1					
ANR	9352434	Argument	"""\\033P\\022"""		9352373	0					
ANR	9352435	PrimaryExpression	"""\\033P\\022"""		9352373	0					
ANR	9352436	IfStatement	if ( header -> HWResolution [ 0 ] == 360 || header -> HWResolution [ 0 ] == 240 )		9352373	3					
ANR	9352437	Condition	header -> HWResolution [ 0 ] == 360 || header -> HWResolution [ 0 ] == 240	151:5:3687:3750	9352373	0	True				
ANR	9352438	OrExpression	header -> HWResolution [ 0 ] == 360 || header -> HWResolution [ 0 ] == 240		9352373	0		||			
ANR	9352439	EqualityExpression	header -> HWResolution [ 0 ] == 360		9352373	0		==			
ANR	9352440	ArrayIndexing	header -> HWResolution [ 0 ]		9352373	0					
ANR	9352441	PtrMemberAccess	header -> HWResolution		9352373	0					
ANR	9352442	Identifier	header		9352373	0					
ANR	9352443	Identifier	HWResolution		9352373	1					
ANR	9352444	PrimaryExpression	0		9352373	1					
ANR	9352445	PrimaryExpression	360		9352373	1					
ANR	9352446	EqualityExpression	header -> HWResolution [ 0 ] == 240		9352373	1		==			
ANR	9352447	ArrayIndexing	header -> HWResolution [ 0 ]		9352373	0					
ANR	9352448	PtrMemberAccess	header -> HWResolution		9352373	0					
ANR	9352449	Identifier	header		9352373	0					
ANR	9352450	Identifier	HWResolution		9352373	1					
ANR	9352451	PrimaryExpression	0		9352373	1					
ANR	9352452	PrimaryExpression	240		9352373	1					
ANR	9352453	CompoundStatement		26:1:491:491	9352373	1					
ANR	9352454	ExpressionStatement	"printf ( ""\\033x1"" )"	153:3:3759:3775	9352373	0	True				
ANR	9352455	CallExpression	"printf ( ""\\033x1"" )"		9352373	0					
ANR	9352456	Callee	printf		9352373	0					
ANR	9352457	Identifier	printf		9352373	0					
ANR	9352458	ArgumentList	"""\\033x1"""		9352373	1					
ANR	9352459	Argument	"""\\033x1"""		9352373	0					
ANR	9352460	PrimaryExpression	"""\\033x1"""		9352373	0					
ANR	9352461	ExpressionStatement	"printf ( ""\\033U1"" )"	154:3:3799:3815	9352373	1	True				
ANR	9352462	CallExpression	"printf ( ""\\033U1"" )"		9352373	0					
ANR	9352463	Callee	printf		9352373	0					
ANR	9352464	Identifier	printf		9352373	0					
ANR	9352465	ArgumentList	"""\\033U1"""		9352373	1					
ANR	9352466	Argument	"""\\033U1"""		9352373	0					
ANR	9352467	PrimaryExpression	"""\\033U1"""		9352373	0					
ANR	9352468	ElseStatement	else		9352373	0					
ANR	9352469	CompoundStatement		31:1:586:586	9352373	0					
ANR	9352470	ExpressionStatement	"printf ( ""\\033x0"" )"	158:3:3854:3870	9352373	0	True				
ANR	9352471	CallExpression	"printf ( ""\\033x0"" )"		9352373	0					
ANR	9352472	Callee	printf		9352373	0					
ANR	9352473	Identifier	printf		9352373	0					
ANR	9352474	ArgumentList	"""\\033x0"""		9352373	1					
ANR	9352475	Argument	"""\\033x0"""		9352373	0					
ANR	9352476	PrimaryExpression	"""\\033x0"""		9352373	0					
ANR	9352477	ExpressionStatement	"printf ( ""\\033U0"" )"	159:3:3897:3913	9352373	1	True				
ANR	9352478	CallExpression	"printf ( ""\\033U0"" )"		9352373	0					
ANR	9352479	Callee	printf		9352373	0					
ANR	9352480	Identifier	printf		9352373	0					
ANR	9352481	ArgumentList	"""\\033U0"""		9352373	1					
ANR	9352482	Argument	"""\\033U0"""		9352373	0					
ANR	9352483	PrimaryExpression	"""\\033U0"""		9352373	0					
ANR	9352484	ExpressionStatement	"printf ( ""\\033l%c\\033Q%c"" , 0 , ( int ) ( 10.0 * header -> PageSize [ 0 ] / 72.0 + 0.5 ) )"	162:1:3941:4057	9352373	4	True				
ANR	9352485	CallExpression	"printf ( ""\\033l%c\\033Q%c"" , 0 , ( int ) ( 10.0 * header -> PageSize [ 0 ] / 72.0 + 0.5 ) )"		9352373	0					
ANR	9352486	Callee	printf		9352373	0					
ANR	9352487	Identifier	printf		9352373	0					
ANR	9352488	ArgumentList	"""\\033l%c\\033Q%c"""		9352373	1					
ANR	9352489	Argument	"""\\033l%c\\033Q%c"""		9352373	0					
ANR	9352490	PrimaryExpression	"""\\033l%c\\033Q%c"""		9352373	0					
ANR	9352491	Argument	0		9352373	1					
ANR	9352492	PrimaryExpression	0		9352373	0					
ANR	9352493	Argument	( int ) ( 10.0 * header -> PageSize [ 0 ] / 72.0 + 0.5 )		9352373	2					
ANR	9352494	CastExpression	( int ) ( 10.0 * header -> PageSize [ 0 ] / 72.0 + 0.5 )		9352373	0					
ANR	9352495	CastTarget	int		9352373	0					
ANR	9352496	AdditiveExpression	10.0 * header -> PageSize [ 0 ] / 72.0 + 0.5		9352373	1		+			
ANR	9352497	MultiplicativeExpression	10.0 * header -> PageSize [ 0 ] / 72.0		9352373	0		*			
ANR	9352498	PrimaryExpression	10.0		9352373	0					
ANR	9352499	MultiplicativeExpression	header -> PageSize [ 0 ] / 72.0		9352373	1		/			
ANR	9352500	ArrayIndexing	header -> PageSize [ 0 ]		9352373	0					
ANR	9352501	PtrMemberAccess	header -> PageSize		9352373	0					
ANR	9352502	Identifier	header		9352373	0					
ANR	9352503	Identifier	PageSize		9352373	1					
ANR	9352504	PrimaryExpression	0		9352373	1					
ANR	9352505	PrimaryExpression	72.0		9352373	1					
ANR	9352506	PrimaryExpression	0.5		9352373	1					
ANR	9352507	ExpressionStatement	"printf ( ""\\033\\062\\033C%c"" , ( int ) ( header -> PageSize [ 1 ] / 12.0 + 0.5 ) )"	164:1:4060:4168	9352373	5	True				
ANR	9352508	CallExpression	"printf ( ""\\033\\062\\033C%c"" , ( int ) ( header -> PageSize [ 1 ] / 12.0 + 0.5 ) )"		9352373	0					
ANR	9352509	Callee	printf		9352373	0					
ANR	9352510	Identifier	printf		9352373	0					
ANR	9352511	ArgumentList	"""\\033\\062\\033C%c"""		9352373	1					
ANR	9352512	Argument	"""\\033\\062\\033C%c"""		9352373	0					
ANR	9352513	PrimaryExpression	"""\\033\\062\\033C%c"""		9352373	0					
ANR	9352514	Argument	( int ) ( header -> PageSize [ 1 ] / 12.0 + 0.5 )		9352373	1					
ANR	9352515	CastExpression	( int ) ( header -> PageSize [ 1 ] / 12.0 + 0.5 )		9352373	0					
ANR	9352516	CastTarget	int		9352373	0					
ANR	9352517	AdditiveExpression	header -> PageSize [ 1 ] / 12.0 + 0.5		9352373	1		+			
ANR	9352518	MultiplicativeExpression	header -> PageSize [ 1 ] / 12.0		9352373	0		/			
ANR	9352519	ArrayIndexing	header -> PageSize [ 1 ]		9352373	0					
ANR	9352520	PtrMemberAccess	header -> PageSize		9352373	0					
ANR	9352521	Identifier	header		9352373	0					
ANR	9352522	Identifier	PageSize		9352373	1					
ANR	9352523	PrimaryExpression	1		9352373	1					
ANR	9352524	PrimaryExpression	12.0		9352373	1					
ANR	9352525	PrimaryExpression	0.5		9352373	1					
ANR	9352526	ExpressionStatement	"printf ( ""\\033N%c"" , 0 )"	166:1:4171:4191	9352373	6	True				
ANR	9352527	CallExpression	"printf ( ""\\033N%c"" , 0 )"		9352373	0					
ANR	9352528	Callee	printf		9352373	0					
ANR	9352529	Identifier	printf		9352373	0					
ANR	9352530	ArgumentList	"""\\033N%c"""		9352373	1					
ANR	9352531	Argument	"""\\033N%c"""		9352373	0					
ANR	9352532	PrimaryExpression	"""\\033N%c"""		9352373	0					
ANR	9352533	Argument	0		9352373	1					
ANR	9352534	PrimaryExpression	0		9352373	0					
ANR	9352535	ExpressionStatement	"printf ( ""\\033O"" )"	167:8:4222:4237	9352373	7	True				
ANR	9352536	CallExpression	"printf ( ""\\033O"" )"		9352373	0					
ANR	9352537	Callee	printf		9352373	0					
ANR	9352538	Identifier	printf		9352373	0					
ANR	9352539	ArgumentList	"""\\033O"""		9352373	1					
ANR	9352540	Argument	"""\\033O"""		9352373	0					
ANR	9352541	PrimaryExpression	"""\\033O"""		9352373	0					
ANR	9352542	ExpressionStatement	DotBytes = header -> cupsRowCount / 8	173:8:4324:4361	9352373	8	True				
ANR	9352543	AssignmentExpression	DotBytes = header -> cupsRowCount / 8		9352373	0		=			
ANR	9352544	Identifier	DotBytes		9352373	0					
ANR	9352545	MultiplicativeExpression	header -> cupsRowCount / 8		9352373	1		/			
ANR	9352546	PtrMemberAccess	header -> cupsRowCount		9352373	0					
ANR	9352547	Identifier	header		9352373	0					
ANR	9352548	Identifier	cupsRowCount		9352373	1					
ANR	9352549	PrimaryExpression	8		9352373	1					
ANR	9352550	ExpressionStatement	DotColumns = header -> HWResolution [ 0 ] / 60	174:1:4364:4405	9352373	9	True				
ANR	9352551	AssignmentExpression	DotColumns = header -> HWResolution [ 0 ] / 60		9352373	0		=			
ANR	9352552	Identifier	DotColumns		9352373	0					
ANR	9352553	MultiplicativeExpression	header -> HWResolution [ 0 ] / 60		9352373	1		/			
ANR	9352554	ArrayIndexing	header -> HWResolution [ 0 ]		9352373	0					
ANR	9352555	PtrMemberAccess	header -> HWResolution		9352373	0					
ANR	9352556	Identifier	header		9352373	0					
ANR	9352557	Identifier	HWResolution		9352373	1					
ANR	9352558	PrimaryExpression	0		9352373	1					
ANR	9352559	PrimaryExpression	60		9352373	1					
ANR	9352560	ExpressionStatement	Shingling = 0	175:8:4415:4429	9352373	10	True				
ANR	9352561	AssignmentExpression	Shingling = 0		9352373	0		=			
ANR	9352562	Identifier	Shingling		9352373	0					
ANR	9352563	PrimaryExpression	0		9352373	1					
ANR	9352564	IfStatement	if ( Model == EPSON_9PIN )		9352373	11					
ANR	9352565	Condition	Model == EPSON_9PIN	177:12:4444:4462	9352373	0	True				
ANR	9352566	EqualityExpression	Model == EPSON_9PIN		9352373	0		==			
ANR	9352567	Identifier	Model		9352373	0					
ANR	9352568	Identifier	EPSON_9PIN		9352373	1					
ANR	9352569	ExpressionStatement	"printf ( ""\\033\\063\\030"" )"	178:3:4468:4490	9352373	1	True				
ANR	9352570	CallExpression	"printf ( ""\\033\\063\\030"" )"		9352373	0					
ANR	9352571	Callee	printf		9352373	0					
ANR	9352572	Identifier	printf		9352373	0					
ANR	9352573	ArgumentList	"""\\033\\063\\030"""		9352373	1					
ANR	9352574	Argument	"""\\033\\063\\030"""		9352373	0					
ANR	9352575	PrimaryExpression	"""\\033\\063\\030"""		9352373	0					
ANR	9352576	ElseStatement	else		9352373	0					
ANR	9352577	SwitchStatement	switch ( header -> HWResolution [ 0 ] )		9352373	0					
ANR	9352578	Condition	header -> HWResolution [ 0 ]	180:11:4529:4551	9352373	0	True				
ANR	9352579	ArrayIndexing	header -> HWResolution [ 0 ]		9352373	0					
ANR	9352580	PtrMemberAccess	header -> HWResolution		9352373	0					
ANR	9352581	Identifier	header		9352373	0					
ANR	9352582	Identifier	HWResolution		9352373	1					
ANR	9352583	PrimaryExpression	0		9352373	1					
ANR	9352584	CompoundStatement		55:3:1294:1294	9352373	1					
ANR	9352585	Label	case 60 :	182:5:4564:4571	9352373	0	True				
ANR	9352586	Label	case 120 :	183:5:4578:4587	9352373	1	True				
ANR	9352587	Label	case 240 :	184:5:4594:4603	9352373	2	True				
ANR	9352588	ExpressionStatement	"printf ( ""\\033\\063\\030"" )"	185:9:4614:4636	9352373	3	True				
ANR	9352589	CallExpression	"printf ( ""\\033\\063\\030"" )"		9352373	0					
ANR	9352590	Callee	printf		9352373	0					
ANR	9352591	Identifier	printf		9352373	0					
ANR	9352592	ArgumentList	"""\\033\\063\\030"""		9352373	1					
ANR	9352593	Argument	"""\\033\\063\\030"""		9352373	0					
ANR	9352594	PrimaryExpression	"""\\033\\063\\030"""		9352373	0					
ANR	9352595	BreakStatement	break ;	186:2:4660:4665	9352373	4	True				
ANR	9352596	Label	case 180 :	188:5:4673:4682	9352373	5	True				
ANR	9352597	Label	case 360 :	189:5:4689:4698	9352373	6	True				
ANR	9352598	ExpressionStatement	Shingling = 1	190:9:4709:4722	9352373	7	True				
ANR	9352599	AssignmentExpression	Shingling = 1		9352373	0		=			
ANR	9352600	Identifier	Shingling		9352373	0					
ANR	9352601	PrimaryExpression	1		9352373	1					
ANR	9352602	IfStatement	if ( header -> HWResolution [ 1 ] == 180 )		9352373	8					
ANR	9352603	Condition	header -> HWResolution [ 1 ] == 180	192:13:4738:4767	9352373	0	True				
ANR	9352604	EqualityExpression	header -> HWResolution [ 1 ] == 180		9352373	0		==			
ANR	9352605	ArrayIndexing	header -> HWResolution [ 1 ]		9352373	0					
ANR	9352606	PtrMemberAccess	header -> HWResolution		9352373	0					
ANR	9352607	Identifier	header		9352373	0					
ANR	9352608	Identifier	HWResolution		9352373	1					
ANR	9352609	PrimaryExpression	1		9352373	1					
ANR	9352610	PrimaryExpression	180		9352373	1					
ANR	9352611	ExpressionStatement	"printf ( ""\\033\\063\\010"" )"	193:11:4781:4803	9352373	1	True				
ANR	9352612	CallExpression	"printf ( ""\\033\\063\\010"" )"		9352373	0					
ANR	9352613	Callee	printf		9352373	0					
ANR	9352614	Identifier	printf		9352373	0					
ANR	9352615	ArgumentList	"""\\033\\063\\010"""		9352373	1					
ANR	9352616	Argument	"""\\033\\063\\010"""		9352373	0					
ANR	9352617	PrimaryExpression	"""\\033\\063\\010"""		9352373	0					
ANR	9352618	ElseStatement	else		9352373	0					
ANR	9352619	ExpressionStatement	"printf ( ""\\033+\\010"" )"	195:11:4842:4861	9352373	0	True				
ANR	9352620	CallExpression	"printf ( ""\\033+\\010"" )"		9352373	0					
ANR	9352621	Callee	printf		9352373	0					
ANR	9352622	Identifier	printf		9352373	0					
ANR	9352623	ArgumentList	"""\\033+\\010"""		9352373	1					
ANR	9352624	Argument	"""\\033+\\010"""		9352373	0					
ANR	9352625	PrimaryExpression	"""\\033+\\010"""		9352373	0					
ANR	9352626	BreakStatement	break ;	196:9:4892:4897	9352373	9	True				
ANR	9352627	BreakStatement	break ;	198:8:4912:4917	9352373	12	True				
ANR	9352628	Label	default :	200:4:4924:4932	9352373	13	True				
ANR	9352629	Identifier	default		9352373	0					
ANR	9352630	ExpressionStatement	"pwrite ( ""\\033(G\\001\\000\\001"" , 6 )"	205:1:4974:5005	9352373	14	True				
ANR	9352631	CallExpression	"pwrite ( ""\\033(G\\001\\000\\001"" , 6 )"		9352373	0					
ANR	9352632	Callee	pwrite		9352373	0					
ANR	9352633	Identifier	pwrite		9352373	0					
ANR	9352634	ArgumentList	"""\\033(G\\001\\000\\001"""		9352373	1					
ANR	9352635	Argument	"""\\033(G\\001\\000\\001"""		9352373	0					
ANR	9352636	PrimaryExpression	"""\\033(G\\001\\000\\001"""		9352373	0					
ANR	9352637	Argument	6		9352373	1					
ANR	9352638	PrimaryExpression	6		9352373	0					
ANR	9352639	IfStatement	if ( Model < EPSON_ICOLOR )		9352373	15					
ANR	9352640	Condition	Model < EPSON_ICOLOR	211:12:5080:5099	9352373	0	True				
ANR	9352641	RelationalExpression	Model < EPSON_ICOLOR		9352373	0		<			
ANR	9352642	Identifier	Model		9352373	0					
ANR	9352643	Identifier	EPSON_ICOLOR		9352373	1					
ANR	9352644	CompoundStatement		86:1:1840:1840	9352373	1					
ANR	9352645	ExpressionStatement	"pwrite ( ""\\033(U\\001\\000"" , 5 )"	213:3:5108:5135	9352373	0	True				
ANR	9352646	CallExpression	"pwrite ( ""\\033(U\\001\\000"" , 5 )"		9352373	0					
ANR	9352647	Callee	pwrite		9352373	0					
ANR	9352648	Identifier	pwrite		9352373	0					
ANR	9352649	ArgumentList	"""\\033(U\\001\\000"""		9352373	1					
ANR	9352650	Argument	"""\\033(U\\001\\000"""		9352373	0					
ANR	9352651	PrimaryExpression	"""\\033(U\\001\\000"""		9352373	0					
ANR	9352652	Argument	5		9352373	1					
ANR	9352653	PrimaryExpression	5		9352373	0					
ANR	9352654	ExpressionStatement	putchar ( 3600 / header -> HWResolution [ 1 ] )	214:3:5164:5203	9352373	1	True				
ANR	9352655	CallExpression	putchar ( 3600 / header -> HWResolution [ 1 ] )		9352373	0					
ANR	9352656	Callee	putchar		9352373	0					
ANR	9352657	Identifier	putchar		9352373	0					
ANR	9352658	ArgumentList	3600 / header -> HWResolution [ 1 ]		9352373	1					
ANR	9352659	Argument	3600 / header -> HWResolution [ 1 ]		9352373	0					
ANR	9352660	MultiplicativeExpression	3600 / header -> HWResolution [ 1 ]		9352373	0		/			
ANR	9352661	PrimaryExpression	3600		9352373	0					
ANR	9352662	ArrayIndexing	header -> HWResolution [ 1 ]		9352373	1					
ANR	9352663	PtrMemberAccess	header -> HWResolution		9352373	0					
ANR	9352664	Identifier	header		9352373	0					
ANR	9352665	Identifier	HWResolution		9352373	1					
ANR	9352666	PrimaryExpression	1		9352373	1					
ANR	9352667	ElseStatement	else		9352373	0					
ANR	9352668	CompoundStatement		91:1:1959:1959	9352373	0					
ANR	9352669	ExpressionStatement	"pwrite ( ""\\033(U\\005\\000"" , 5 )"	218:3:5227:5254	9352373	0	True				
ANR	9352670	CallExpression	"pwrite ( ""\\033(U\\005\\000"" , 5 )"		9352373	0					
ANR	9352671	Callee	pwrite		9352373	0					
ANR	9352672	Identifier	pwrite		9352373	0					
ANR	9352673	ArgumentList	"""\\033(U\\005\\000"""		9352373	1					
ANR	9352674	Argument	"""\\033(U\\005\\000"""		9352373	0					
ANR	9352675	PrimaryExpression	"""\\033(U\\005\\000"""		9352373	0					
ANR	9352676	Argument	5		9352373	1					
ANR	9352677	PrimaryExpression	5		9352373	0					
ANR	9352678	ExpressionStatement	putchar ( 1440 / header -> HWResolution [ 1 ] )	219:3:5259:5298	9352373	1	True				
ANR	9352679	CallExpression	putchar ( 1440 / header -> HWResolution [ 1 ] )		9352373	0					
ANR	9352680	Callee	putchar		9352373	0					
ANR	9352681	Identifier	putchar		9352373	0					
ANR	9352682	ArgumentList	1440 / header -> HWResolution [ 1 ]		9352373	1					
ANR	9352683	Argument	1440 / header -> HWResolution [ 1 ]		9352373	0					
ANR	9352684	MultiplicativeExpression	1440 / header -> HWResolution [ 1 ]		9352373	0		/			
ANR	9352685	PrimaryExpression	1440		9352373	0					
ANR	9352686	ArrayIndexing	header -> HWResolution [ 1 ]		9352373	1					
ANR	9352687	PtrMemberAccess	header -> HWResolution		9352373	0					
ANR	9352688	Identifier	header		9352373	0					
ANR	9352689	Identifier	HWResolution		9352373	1					
ANR	9352690	PrimaryExpression	1		9352373	1					
ANR	9352691	ExpressionStatement	putchar ( 1440 / header -> HWResolution [ 1 ] )	220:3:5303:5342	9352373	2	True				
ANR	9352692	CallExpression	putchar ( 1440 / header -> HWResolution [ 1 ] )		9352373	0					
ANR	9352693	Callee	putchar		9352373	0					
ANR	9352694	Identifier	putchar		9352373	0					
ANR	9352695	ArgumentList	1440 / header -> HWResolution [ 1 ]		9352373	1					
ANR	9352696	Argument	1440 / header -> HWResolution [ 1 ]		9352373	0					
ANR	9352697	MultiplicativeExpression	1440 / header -> HWResolution [ 1 ]		9352373	0		/			
ANR	9352698	PrimaryExpression	1440		9352373	0					
ANR	9352699	ArrayIndexing	header -> HWResolution [ 1 ]		9352373	1					
ANR	9352700	PtrMemberAccess	header -> HWResolution		9352373	0					
ANR	9352701	Identifier	header		9352373	0					
ANR	9352702	Identifier	HWResolution		9352373	1					
ANR	9352703	PrimaryExpression	1		9352373	1					
ANR	9352704	ExpressionStatement	putchar ( 1440 / header -> HWResolution [ 0 ] )	221:3:5347:5386	9352373	3	True				
ANR	9352705	CallExpression	putchar ( 1440 / header -> HWResolution [ 0 ] )		9352373	0					
ANR	9352706	Callee	putchar		9352373	0					
ANR	9352707	Identifier	putchar		9352373	0					
ANR	9352708	ArgumentList	1440 / header -> HWResolution [ 0 ]		9352373	1					
ANR	9352709	Argument	1440 / header -> HWResolution [ 0 ]		9352373	0					
ANR	9352710	MultiplicativeExpression	1440 / header -> HWResolution [ 0 ]		9352373	0		/			
ANR	9352711	PrimaryExpression	1440		9352373	0					
ANR	9352712	ArrayIndexing	header -> HWResolution [ 0 ]		9352373	1					
ANR	9352713	PtrMemberAccess	header -> HWResolution		9352373	0					
ANR	9352714	Identifier	header		9352373	0					
ANR	9352715	Identifier	HWResolution		9352373	1					
ANR	9352716	PrimaryExpression	0		9352373	1					
ANR	9352717	ExpressionStatement	putchar ( 0xa0 )	222:3:5391:5404	9352373	4	True				
ANR	9352718	CallExpression	putchar ( 0xa0 )		9352373	0					
ANR	9352719	Callee	putchar		9352373	0					
ANR	9352720	Identifier	putchar		9352373	0					
ANR	9352721	ArgumentList	0xa0		9352373	1					
ANR	9352722	Argument	0xa0		9352373	0					
ANR	9352723	PrimaryExpression	0xa0		9352373	0					
ANR	9352724	ExpressionStatement	putchar ( 0x05 )	223:3:5428:5441	9352373	5	True				
ANR	9352725	CallExpression	putchar ( 0x05 )		9352373	0					
ANR	9352726	Callee	putchar		9352373	0					
ANR	9352727	Identifier	putchar		9352373	0					
ANR	9352728	ArgumentList	0x05		9352373	1					
ANR	9352729	Argument	0x05		9352373	0					
ANR	9352730	PrimaryExpression	0x05		9352373	0					
ANR	9352731	ExpressionStatement	n = header -> PageSize [ 1 ] * header -> HWResolution [ 1 ] / 72.0	226:1:5448:5504	9352373	16	True				
ANR	9352732	AssignmentExpression	n = header -> PageSize [ 1 ] * header -> HWResolution [ 1 ] / 72.0		9352373	0		=			
ANR	9352733	Identifier	n		9352373	0					
ANR	9352734	MultiplicativeExpression	header -> PageSize [ 1 ] * header -> HWResolution [ 1 ] / 72.0		9352373	1		*			
ANR	9352735	ArrayIndexing	header -> PageSize [ 1 ]		9352373	0					
ANR	9352736	PtrMemberAccess	header -> PageSize		9352373	0					
ANR	9352737	Identifier	header		9352373	0					
ANR	9352738	Identifier	PageSize		9352373	1					
ANR	9352739	PrimaryExpression	1		9352373	1					
ANR	9352740	MultiplicativeExpression	header -> HWResolution [ 1 ] / 72.0		9352373	1		/			
ANR	9352741	ArrayIndexing	header -> HWResolution [ 1 ]		9352373	0					
ANR	9352742	PtrMemberAccess	header -> HWResolution		9352373	0					
ANR	9352743	Identifier	header		9352373	0					
ANR	9352744	Identifier	HWResolution		9352373	1					
ANR	9352745	PrimaryExpression	1		9352373	1					
ANR	9352746	PrimaryExpression	72.0		9352373	1					
ANR	9352747	ExpressionStatement	"pwrite ( ""\\033(C\\002\\000"" , 5 )"	228:1:5508:5535	9352373	17	True				
ANR	9352748	CallExpression	"pwrite ( ""\\033(C\\002\\000"" , 5 )"		9352373	0					
ANR	9352749	Callee	pwrite		9352373	0					
ANR	9352750	Identifier	pwrite		9352373	0					
ANR	9352751	ArgumentList	"""\\033(C\\002\\000"""		9352373	1					
ANR	9352752	Argument	"""\\033(C\\002\\000"""		9352373	0					
ANR	9352753	PrimaryExpression	"""\\033(C\\002\\000"""		9352373	0					
ANR	9352754	Argument	5		9352373	1					
ANR	9352755	PrimaryExpression	5		9352373	0					
ANR	9352756	ExpressionStatement	putchar ( n )	229:1:5557:5567	9352373	18	True				
ANR	9352757	CallExpression	putchar ( n )		9352373	0					
ANR	9352758	Callee	putchar		9352373	0					
ANR	9352759	Identifier	putchar		9352373	0					
ANR	9352760	ArgumentList	n		9352373	1					
ANR	9352761	Argument	n		9352373	0					
ANR	9352762	Identifier	n		9352373	0					
ANR	9352763	ExpressionStatement	putchar ( n >> 8 )	230:1:5570:5585	9352373	19	True				
ANR	9352764	CallExpression	putchar ( n >> 8 )		9352373	0					
ANR	9352765	Callee	putchar		9352373	0					
ANR	9352766	Identifier	putchar		9352373	0					
ANR	9352767	ArgumentList	n >> 8		9352373	1					
ANR	9352768	Argument	n >> 8		9352373	0					
ANR	9352769	ShiftExpression	n >> 8		9352373	0		>>			
ANR	9352770	Identifier	n		9352373	0					
ANR	9352771	PrimaryExpression	8		9352373	1					
ANR	9352772	IfStatement	if ( ppd )		9352373	20					
ANR	9352773	Condition	ppd	232:12:5600:5602	9352373	0	True				
ANR	9352774	Identifier	ppd		9352373	0					
ANR	9352775	ExpressionStatement	t = ( ppd -> sizes [ 1 ] . length - ppd -> sizes [ 1 ] . top ) * header -> HWResolution [ 1 ] / 72.0	233:3:5608:5694	9352373	1	True				
ANR	9352776	AssignmentExpression	t = ( ppd -> sizes [ 1 ] . length - ppd -> sizes [ 1 ] . top ) * header -> HWResolution [ 1 ] / 72.0		9352373	0		=			
ANR	9352777	Identifier	t		9352373	0					
ANR	9352778	MultiplicativeExpression	( ppd -> sizes [ 1 ] . length - ppd -> sizes [ 1 ] . top ) * header -> HWResolution [ 1 ] / 72.0		9352373	1		*			
ANR	9352779	AdditiveExpression	ppd -> sizes [ 1 ] . length - ppd -> sizes [ 1 ] . top		9352373	0		-			
ANR	9352780	MemberAccess	ppd -> sizes [ 1 ] . length		9352373	0					
ANR	9352781	ArrayIndexing	ppd -> sizes [ 1 ]		9352373	0					
ANR	9352782	PtrMemberAccess	ppd -> sizes		9352373	0					
ANR	9352783	Identifier	ppd		9352373	0					
ANR	9352784	Identifier	sizes		9352373	1					
ANR	9352785	PrimaryExpression	1		9352373	1					
ANR	9352786	Identifier	length		9352373	1					
ANR	9352787	MemberAccess	ppd -> sizes [ 1 ] . top		9352373	1					
ANR	9352788	ArrayIndexing	ppd -> sizes [ 1 ]		9352373	0					
ANR	9352789	PtrMemberAccess	ppd -> sizes		9352373	0					
ANR	9352790	Identifier	ppd		9352373	0					
ANR	9352791	Identifier	sizes		9352373	1					
ANR	9352792	PrimaryExpression	1		9352373	1					
ANR	9352793	Identifier	top		9352373	1					
ANR	9352794	MultiplicativeExpression	header -> HWResolution [ 1 ] / 72.0		9352373	1		/			
ANR	9352795	ArrayIndexing	header -> HWResolution [ 1 ]		9352373	0					
ANR	9352796	PtrMemberAccess	header -> HWResolution		9352373	0					
ANR	9352797	Identifier	header		9352373	0					
ANR	9352798	Identifier	HWResolution		9352373	1					
ANR	9352799	PrimaryExpression	1		9352373	1					
ANR	9352800	PrimaryExpression	72.0		9352373	1					
ANR	9352801	ElseStatement	else		9352373	0					
ANR	9352802	ExpressionStatement	t = 0	236:3:5712:5717	9352373	0	True				
ANR	9352803	AssignmentExpression	t = 0		9352373	0		=			
ANR	9352804	Identifier	t		9352373	0					
ANR	9352805	PrimaryExpression	0		9352373	1					
ANR	9352806	ExpressionStatement	"pwrite ( ""\\033(c\\004\\000"" , 5 )"	238:1:5721:5748	9352373	21	True				
ANR	9352807	CallExpression	"pwrite ( ""\\033(c\\004\\000"" , 5 )"		9352373	0					
ANR	9352808	Callee	pwrite		9352373	0					
ANR	9352809	Identifier	pwrite		9352373	0					
ANR	9352810	ArgumentList	"""\\033(c\\004\\000"""		9352373	1					
ANR	9352811	Argument	"""\\033(c\\004\\000"""		9352373	0					
ANR	9352812	PrimaryExpression	"""\\033(c\\004\\000"""		9352373	0					
ANR	9352813	Argument	5		9352373	1					
ANR	9352814	PrimaryExpression	5		9352373	0					
ANR	9352815	ExpressionStatement	putchar ( t )	239:1:5779:5789	9352373	22	True				
ANR	9352816	CallExpression	putchar ( t )		9352373	0					
ANR	9352817	Callee	putchar		9352373	0					
ANR	9352818	Identifier	putchar		9352373	0					
ANR	9352819	ArgumentList	t		9352373	1					
ANR	9352820	Argument	t		9352373	0					
ANR	9352821	Identifier	t		9352373	0					
ANR	9352822	ExpressionStatement	putchar ( t >> 8 )	240:1:5792:5807	9352373	23	True				
ANR	9352823	CallExpression	putchar ( t >> 8 )		9352373	0					
ANR	9352824	Callee	putchar		9352373	0					
ANR	9352825	Identifier	putchar		9352373	0					
ANR	9352826	ArgumentList	t >> 8		9352373	1					
ANR	9352827	Argument	t >> 8		9352373	0					
ANR	9352828	ShiftExpression	t >> 8		9352373	0		>>			
ANR	9352829	Identifier	t		9352373	0					
ANR	9352830	PrimaryExpression	8		9352373	1					
ANR	9352831	ExpressionStatement	putchar ( n )	241:1:5810:5820	9352373	24	True				
ANR	9352832	CallExpression	putchar ( n )		9352373	0					
ANR	9352833	Callee	putchar		9352373	0					
ANR	9352834	Identifier	putchar		9352373	0					
ANR	9352835	ArgumentList	n		9352373	1					
ANR	9352836	Argument	n		9352373	0					
ANR	9352837	Identifier	n		9352373	0					
ANR	9352838	ExpressionStatement	putchar ( n >> 8 )	242:1:5823:5838	9352373	25	True				
ANR	9352839	CallExpression	putchar ( n >> 8 )		9352373	0					
ANR	9352840	Callee	putchar		9352373	0					
ANR	9352841	Identifier	putchar		9352373	0					
ANR	9352842	ArgumentList	n >> 8		9352373	1					
ANR	9352843	Argument	n >> 8		9352373	0					
ANR	9352844	ShiftExpression	n >> 8		9352373	0		>>			
ANR	9352845	Identifier	n		9352373	0					
ANR	9352846	PrimaryExpression	8		9352373	1					
ANR	9352847	IfStatement	if ( header -> HWResolution [ 1 ] == 720 )		9352373	26					
ANR	9352848	Condition	header -> HWResolution [ 1 ] == 720	244:5:5846:5875	9352373	0	True				
ANR	9352849	EqualityExpression	header -> HWResolution [ 1 ] == 720		9352373	0		==			
ANR	9352850	ArrayIndexing	header -> HWResolution [ 1 ]		9352373	0					
ANR	9352851	PtrMemberAccess	header -> HWResolution		9352373	0					
ANR	9352852	Identifier	header		9352373	0					
ANR	9352853	Identifier	HWResolution		9352373	1					
ANR	9352854	PrimaryExpression	1		9352373	1					
ANR	9352855	PrimaryExpression	720		9352373	1					
ANR	9352856	CompoundStatement		119:1:2616:2616	9352373	1					
ANR	9352857	ExpressionStatement	"pwrite ( ""\\033(i\\001\\000\\001"" , 6 )"	246:3:5884:5915	9352373	0	True				
ANR	9352858	CallExpression	"pwrite ( ""\\033(i\\001\\000\\001"" , 6 )"		9352373	0					
ANR	9352859	Callee	pwrite		9352373	0					
ANR	9352860	Identifier	pwrite		9352373	0					
ANR	9352861	ArgumentList	"""\\033(i\\001\\000\\001"""		9352373	1					
ANR	9352862	Argument	"""\\033(i\\001\\000\\001"""		9352373	0					
ANR	9352863	PrimaryExpression	"""\\033(i\\001\\000\\001"""		9352373	0					
ANR	9352864	Argument	6		9352373	1					
ANR	9352865	PrimaryExpression	6		9352373	0					
ANR	9352866	ExpressionStatement	"pwrite ( ""\\033(e\\002\\000\\000\\001"" , 7 )"	247:3:5937:5972	9352373	1	True				
ANR	9352867	CallExpression	"pwrite ( ""\\033(e\\002\\000\\000\\001"" , 7 )"		9352373	0					
ANR	9352868	Callee	pwrite		9352373	0					
ANR	9352869	Identifier	pwrite		9352373	0					
ANR	9352870	ArgumentList	"""\\033(e\\002\\000\\000\\001"""		9352373	1					
ANR	9352871	Argument	"""\\033(e\\002\\000\\000\\001"""		9352373	0					
ANR	9352872	PrimaryExpression	"""\\033(e\\002\\000\\000\\001"""		9352373	0					
ANR	9352873	Argument	7		9352373	1					
ANR	9352874	PrimaryExpression	7		9352373	0					
ANR	9352875	ExpressionStatement	"pwrite ( ""\\033(V\\002\\000\\000\\000"" , 7 )"	250:1:5996:6031	9352373	27	True				
ANR	9352876	CallExpression	"pwrite ( ""\\033(V\\002\\000\\000\\000"" , 7 )"		9352373	0					
ANR	9352877	Callee	pwrite		9352373	0					
ANR	9352878	Identifier	pwrite		9352373	0					
ANR	9352879	ArgumentList	"""\\033(V\\002\\000\\000\\000"""		9352373	1					
ANR	9352880	Argument	"""\\033(V\\002\\000\\000\\000"""		9352373	0					
ANR	9352881	PrimaryExpression	"""\\033(V\\002\\000\\000\\000"""		9352373	0					
ANR	9352882	Argument	7		9352373	1					
ANR	9352883	PrimaryExpression	7		9352373	0					
ANR	9352884	ExpressionStatement	DotBytes = 0	252:8:6072:6086	9352373	28	True				
ANR	9352885	AssignmentExpression	DotBytes = 0		9352373	0		=			
ANR	9352886	Identifier	DotBytes		9352373	0					
ANR	9352887	PrimaryExpression	0		9352373	1					
ANR	9352888	ExpressionStatement	DotColumns = 0	253:1:6089:6103	9352373	29	True				
ANR	9352889	AssignmentExpression	DotColumns = 0		9352373	0		=			
ANR	9352890	Identifier	DotColumns		9352373	0					
ANR	9352891	PrimaryExpression	0		9352373	1					
ANR	9352892	ExpressionStatement	Shingling = 0	254:8:6113:6127	9352373	30	True				
ANR	9352893	AssignmentExpression	Shingling = 0		9352373	0		=			
ANR	9352894	Identifier	Shingling		9352373	0					
ANR	9352895	PrimaryExpression	0		9352373	1					
ANR	9352896	BreakStatement	break ;	255:8:6137:6142	9352373	31	True				
ANR	9352897	IfStatement	if ( header -> cupsColorSpace == CUPS_CSPACE_CMY )		9352373	5					
ANR	9352898	Condition	header -> cupsColorSpace == CUPS_CSPACE_CMY	262:6:6188:6228	9352373	0	True				
ANR	9352899	EqualityExpression	header -> cupsColorSpace == CUPS_CSPACE_CMY		9352373	0		==			
ANR	9352900	PtrMemberAccess	header -> cupsColorSpace		9352373	0					
ANR	9352901	Identifier	header		9352373	0					
ANR	9352902	Identifier	cupsColorSpace		9352373	1					
ANR	9352903	Identifier	CUPS_CSPACE_CMY		9352373	1					
ANR	9352904	ExpressionStatement	NumPlanes = 3	263:4:6235:6248	9352373	1	True				
ANR	9352905	AssignmentExpression	NumPlanes = 3		9352373	0		=			
ANR	9352906	Identifier	NumPlanes		9352373	0					
ANR	9352907	PrimaryExpression	3		9352373	1					
ANR	9352908	ElseStatement	else		9352373	0					
ANR	9352909	IfStatement	if ( header -> cupsColorSpace == CUPS_CSPACE_KCMY )		9352373	0					
ANR	9352910	Condition	header -> cupsColorSpace == CUPS_CSPACE_KCMY	264:11:6261:6302	9352373	0	True				
ANR	9352911	EqualityExpression	header -> cupsColorSpace == CUPS_CSPACE_KCMY		9352373	0		==			
ANR	9352912	PtrMemberAccess	header -> cupsColorSpace		9352373	0					
ANR	9352913	Identifier	header		9352373	0					
ANR	9352914	Identifier	cupsColorSpace		9352373	1					
ANR	9352915	Identifier	CUPS_CSPACE_KCMY		9352373	1					
ANR	9352916	ExpressionStatement	NumPlanes = 4	265:4:6309:6322	9352373	1	True				
ANR	9352917	AssignmentExpression	NumPlanes = 4		9352373	0		=			
ANR	9352918	Identifier	NumPlanes		9352373	0					
ANR	9352919	PrimaryExpression	4		9352373	1					
ANR	9352920	ElseStatement	else		9352373	0					
ANR	9352921	IfStatement	if ( header -> cupsColorSpace == CUPS_CSPACE_KCMYcm )		9352373	0					
ANR	9352922	Condition	header -> cupsColorSpace == CUPS_CSPACE_KCMYcm	266:11:6335:6378	9352373	0	True				
ANR	9352923	EqualityExpression	header -> cupsColorSpace == CUPS_CSPACE_KCMYcm		9352373	0		==			
ANR	9352924	PtrMemberAccess	header -> cupsColorSpace		9352373	0					
ANR	9352925	Identifier	header		9352373	0					
ANR	9352926	Identifier	cupsColorSpace		9352373	1					
ANR	9352927	Identifier	CUPS_CSPACE_KCMYcm		9352373	1					
ANR	9352928	ExpressionStatement	NumPlanes = 6	267:4:6385:6398	9352373	1	True				
ANR	9352929	AssignmentExpression	NumPlanes = 6		9352373	0		=			
ANR	9352930	Identifier	NumPlanes		9352373	0					
ANR	9352931	PrimaryExpression	6		9352373	1					
ANR	9352932	ElseStatement	else		9352373	0					
ANR	9352933	ExpressionStatement	NumPlanes = 1	269:4:6411:6424	9352373	0	True				
ANR	9352934	AssignmentExpression	NumPlanes = 1		9352373	0		=			
ANR	9352935	Identifier	NumPlanes		9352373	0					
ANR	9352936	PrimaryExpression	1		9352373	1					
ANR	9352937	ExpressionStatement	Feed = 0	271:2:6429:6437	9352373	6	True				
ANR	9352938	AssignmentExpression	Feed = 0		9352373	0		=			
ANR	9352939	Identifier	Feed		9352373	0					
ANR	9352940	PrimaryExpression	0		9352373	1					
ANR	9352941	IfStatement	if ( ( Planes [ 0 ] = malloc ( header -> cupsBytesPerLine ) ) == NULL )		9352373	7					
ANR	9352942	Condition	( Planes [ 0 ] = malloc ( header -> cupsBytesPerLine ) ) == NULL	277:6:6534:6587	9352373	0	True				
ANR	9352943	EqualityExpression	( Planes [ 0 ] = malloc ( header -> cupsBytesPerLine ) ) == NULL		9352373	0		==			
ANR	9352944	AssignmentExpression	Planes [ 0 ] = malloc ( header -> cupsBytesPerLine )		9352373	0		=			
ANR	9352945	ArrayIndexing	Planes [ 0 ]		9352373	0					
ANR	9352946	Identifier	Planes		9352373	0					
ANR	9352947	PrimaryExpression	0		9352373	1					
ANR	9352948	CallExpression	malloc ( header -> cupsBytesPerLine )		9352373	1					
ANR	9352949	Callee	malloc		9352373	0					
ANR	9352950	Identifier	malloc		9352373	0					
ANR	9352951	ArgumentList	header -> cupsBytesPerLine		9352373	1					
ANR	9352952	Argument	header -> cupsBytesPerLine		9352373	0					
ANR	9352953	PtrMemberAccess	header -> cupsBytesPerLine		9352373	0					
ANR	9352954	Identifier	header		9352373	0					
ANR	9352955	Identifier	cupsBytesPerLine		9352373	1					
ANR	9352956	Identifier	NULL		9352373	1					
ANR	9352957	CompoundStatement		152:2:3329:3329	9352373	1					
ANR	9352958	ExpressionStatement	"fputs ( ""ERROR: Unable to allocate memory\\n"" , stderr )"	279:4:6598:6649	9352373	0	True				
ANR	9352959	CallExpression	"fputs ( ""ERROR: Unable to allocate memory\\n"" , stderr )"		9352373	0					
ANR	9352960	Callee	fputs		9352373	0					
ANR	9352961	Identifier	fputs		9352373	0					
ANR	9352962	ArgumentList	"""ERROR: Unable to allocate memory\\n"""		9352373	1					
ANR	9352963	Argument	"""ERROR: Unable to allocate memory\\n"""		9352373	0					
ANR	9352964	PrimaryExpression	"""ERROR: Unable to allocate memory\\n"""		9352373	0					
ANR	9352965	Argument	stderr		9352373	1					
ANR	9352966	Identifier	stderr		9352373	0					
ANR	9352967	ExpressionStatement	exit ( 1 )	280:4:6655:6662	9352373	1	True				
ANR	9352968	CallExpression	exit ( 1 )		9352373	0					
ANR	9352969	Callee	exit		9352373	0					
ANR	9352970	Identifier	exit		9352373	0					
ANR	9352971	ArgumentList	1		9352373	1					
ANR	9352972	Argument	1		9352373	0					
ANR	9352973	PrimaryExpression	1		9352373	0					
ANR	9352974	ForStatement	for ( plane = 1 ; plane < NumPlanes ; plane ++ )		9352373	8					
ANR	9352975	ForInit	plane = 1 ;	283:7:6676:6685	9352373	0	True				
ANR	9352976	AssignmentExpression	plane = 1		9352373	0		=			
ANR	9352977	Identifier	plane		9352373	0					
ANR	9352978	PrimaryExpression	1		9352373	1					
ANR	9352979	Condition	plane < NumPlanes	283:18:6687:6703	9352373	1	True				
ANR	9352980	RelationalExpression	plane < NumPlanes		9352373	0		<			
ANR	9352981	Identifier	plane		9352373	0					
ANR	9352982	Identifier	NumPlanes		9352373	1					
ANR	9352983	PostIncDecOperationExpression	plane ++	283:37:6706:6713	9352373	2	True				
ANR	9352984	Identifier	plane		9352373	0					
ANR	9352985	IncDec	++		9352373	1					
ANR	9352986	ExpressionStatement	Planes [ plane ] = Planes [ 0 ] + plane * header -> cupsBytesPerLine / NumPlanes	284:4:6720:6792	9352373	3	True				
ANR	9352987	AssignmentExpression	Planes [ plane ] = Planes [ 0 ] + plane * header -> cupsBytesPerLine / NumPlanes		9352373	0		=			
ANR	9352988	ArrayIndexing	Planes [ plane ]		9352373	0					
ANR	9352989	Identifier	Planes		9352373	0					
ANR	9352990	Identifier	plane		9352373	1					
ANR	9352991	AdditiveExpression	Planes [ 0 ] + plane * header -> cupsBytesPerLine / NumPlanes		9352373	1		+			
ANR	9352992	ArrayIndexing	Planes [ 0 ]		9352373	0					
ANR	9352993	Identifier	Planes		9352373	0					
ANR	9352994	PrimaryExpression	0		9352373	1					
ANR	9352995	MultiplicativeExpression	plane * header -> cupsBytesPerLine / NumPlanes		9352373	1		*			
ANR	9352996	Identifier	plane		9352373	0					
ANR	9352997	MultiplicativeExpression	header -> cupsBytesPerLine / NumPlanes		9352373	1		/			
ANR	9352998	PtrMemberAccess	header -> cupsBytesPerLine		9352373	0					
ANR	9352999	Identifier	header		9352373	0					
ANR	9353000	Identifier	cupsBytesPerLine		9352373	1					
ANR	9353001	Identifier	NumPlanes		9352373	1					
ANR	9353002	IfStatement	if ( header -> cupsCompression || DotBytes )		9352373	9					
ANR	9353003	Condition	header -> cupsCompression || DotBytes	286:6:6801:6835	9352373	0	True				
ANR	9353004	OrExpression	header -> cupsCompression || DotBytes		9352373	0		||			
ANR	9353005	PtrMemberAccess	header -> cupsCompression		9352373	0					
ANR	9353006	Identifier	header		9352373	0					
ANR	9353007	Identifier	cupsCompression		9352373	1					
ANR	9353008	Identifier	DotBytes		9352373	1					
ANR	9353009	CompoundStatement		161:2:3577:3577	9352373	1					
ANR	9353010	IfStatement	"if ( ( CompBuffer = calloc ( 2 , header -> cupsWidth ) ) == NULL )"		9352373	0					
ANR	9353011	Condition	"( CompBuffer = calloc ( 2 , header -> cupsWidth ) ) == NULL"	288:8:6850:6900	9352373	0	True				
ANR	9353012	EqualityExpression	"( CompBuffer = calloc ( 2 , header -> cupsWidth ) ) == NULL"		9352373	0		==			
ANR	9353013	AssignmentExpression	"CompBuffer = calloc ( 2 , header -> cupsWidth )"		9352373	0		=			
ANR	9353014	Identifier	CompBuffer		9352373	0					
ANR	9353015	CallExpression	"calloc ( 2 , header -> cupsWidth )"		9352373	1					
ANR	9353016	Callee	calloc		9352373	0					
ANR	9353017	Identifier	calloc		9352373	0					
ANR	9353018	ArgumentList	2		9352373	1					
ANR	9353019	Argument	2		9352373	0					
ANR	9353020	PrimaryExpression	2		9352373	0					
ANR	9353021	Argument	header -> cupsWidth		9352373	1					
ANR	9353022	PtrMemberAccess	header -> cupsWidth		9352373	0					
ANR	9353023	Identifier	header		9352373	0					
ANR	9353024	Identifier	cupsWidth		9352373	1					
ANR	9353025	Identifier	NULL		9352373	1					
ANR	9353026	CompoundStatement		163:4:3644:3644	9352373	1					
ANR	9353027	ExpressionStatement	"fputs ( ""ERROR: Unable to allocate memory\\n"" , stderr )"	290:6:6915:6966	9352373	0	True				
ANR	9353028	CallExpression	"fputs ( ""ERROR: Unable to allocate memory\\n"" , stderr )"		9352373	0					
ANR	9353029	Callee	fputs		9352373	0					
ANR	9353030	Identifier	fputs		9352373	0					
ANR	9353031	ArgumentList	"""ERROR: Unable to allocate memory\\n"""		9352373	1					
ANR	9353032	Argument	"""ERROR: Unable to allocate memory\\n"""		9352373	0					
ANR	9353033	PrimaryExpression	"""ERROR: Unable to allocate memory\\n"""		9352373	0					
ANR	9353034	Argument	stderr		9352373	1					
ANR	9353035	Identifier	stderr		9352373	0					
ANR	9353036	ExpressionStatement	exit ( 1 )	291:6:6974:6981	9352373	1	True				
ANR	9353037	CallExpression	exit ( 1 )		9352373	0					
ANR	9353038	Callee	exit		9352373	0					
ANR	9353039	Identifier	exit		9352373	0					
ANR	9353040	ArgumentList	1		9352373	1					
ANR	9353041	Argument	1		9352373	0					
ANR	9353042	PrimaryExpression	1		9352373	0					
ANR	9353043	ElseStatement	else		9352373	0					
ANR	9353044	ExpressionStatement	CompBuffer = NULL	295:4:7004:7021	9352373	0	True				
ANR	9353045	AssignmentExpression	CompBuffer = NULL		9352373	0		=			
ANR	9353046	Identifier	CompBuffer		9352373	0					
ANR	9353047	Identifier	NULL		9352373	1					
ANR	9353048	IfStatement	if ( DotBytes )		9352373	10					
ANR	9353049	Condition	DotBytes	297:6:7030:7037	9352373	0	True				
ANR	9353050	Identifier	DotBytes		9352373	0					
ANR	9353051	CompoundStatement		172:2:3779:3779	9352373	1					
ANR	9353052	IfStatement	"if ( ( LineBuffers [ 0 ] = calloc ( DotBytes , header -> cupsWidth * ( Shingling + 1 ) ) ) == NULL )"		9352373	0					
ANR	9353053	Condition	"( LineBuffers [ 0 ] = calloc ( DotBytes , header -> cupsWidth * ( Shingling + 1 ) ) ) == NULL"	299:8:7052:7164	9352373	0	True				
ANR	9353054	EqualityExpression	"( LineBuffers [ 0 ] = calloc ( DotBytes , header -> cupsWidth * ( Shingling + 1 ) ) ) == NULL"		9352373	0		==			
ANR	9353055	AssignmentExpression	"LineBuffers [ 0 ] = calloc ( DotBytes , header -> cupsWidth * ( Shingling + 1 ) )"		9352373	0		=			
ANR	9353056	ArrayIndexing	LineBuffers [ 0 ]		9352373	0					
ANR	9353057	Identifier	LineBuffers		9352373	0					
ANR	9353058	PrimaryExpression	0		9352373	1					
ANR	9353059	CallExpression	"calloc ( DotBytes , header -> cupsWidth * ( Shingling + 1 ) )"		9352373	1					
ANR	9353060	Callee	calloc		9352373	0					
ANR	9353061	Identifier	calloc		9352373	0					
ANR	9353062	ArgumentList	DotBytes		9352373	1					
ANR	9353063	Argument	DotBytes		9352373	0					
ANR	9353064	Identifier	DotBytes		9352373	0					
ANR	9353065	Argument	header -> cupsWidth * ( Shingling + 1 )		9352373	1					
ANR	9353066	MultiplicativeExpression	header -> cupsWidth * ( Shingling + 1 )		9352373	0		*			
ANR	9353067	PtrMemberAccess	header -> cupsWidth		9352373	0					
ANR	9353068	Identifier	header		9352373	0					
ANR	9353069	Identifier	cupsWidth		9352373	1					
ANR	9353070	AdditiveExpression	Shingling + 1		9352373	1		+			
ANR	9353071	Identifier	Shingling		9352373	0					
ANR	9353072	PrimaryExpression	1		9352373	1					
ANR	9353073	Identifier	NULL		9352373	1					
ANR	9353074	CompoundStatement		175:4:3908:3908	9352373	1					
ANR	9353075	ExpressionStatement	"fputs ( ""ERROR: Unable to allocate memory\\n"" , stderr )"	302:6:7179:7230	9352373	0	True				
ANR	9353076	CallExpression	"fputs ( ""ERROR: Unable to allocate memory\\n"" , stderr )"		9352373	0					
ANR	9353077	Callee	fputs		9352373	0					
ANR	9353078	Identifier	fputs		9352373	0					
ANR	9353079	ArgumentList	"""ERROR: Unable to allocate memory\\n"""		9352373	1					
ANR	9353080	Argument	"""ERROR: Unable to allocate memory\\n"""		9352373	0					
ANR	9353081	PrimaryExpression	"""ERROR: Unable to allocate memory\\n"""		9352373	0					
ANR	9353082	Argument	stderr		9352373	1					
ANR	9353083	Identifier	stderr		9352373	0					
ANR	9353084	ExpressionStatement	exit ( 1 )	303:6:7238:7245	9352373	1	True				
ANR	9353085	CallExpression	exit ( 1 )		9352373	0					
ANR	9353086	Callee	exit		9352373	0					
ANR	9353087	Identifier	exit		9352373	0					
ANR	9353088	ArgumentList	1		9352373	1					
ANR	9353089	Argument	1		9352373	0					
ANR	9353090	PrimaryExpression	1		9352373	0					
ANR	9353091	ExpressionStatement	LineBuffers [ 1 ] = LineBuffers [ 0 ] + DotBytes * header -> cupsWidth	306:4:7258:7320	9352373	1	True				
ANR	9353092	AssignmentExpression	LineBuffers [ 1 ] = LineBuffers [ 0 ] + DotBytes * header -> cupsWidth		9352373	0		=			
ANR	9353093	ArrayIndexing	LineBuffers [ 1 ]		9352373	0					
ANR	9353094	Identifier	LineBuffers		9352373	0					
ANR	9353095	PrimaryExpression	1		9352373	1					
ANR	9353096	AdditiveExpression	LineBuffers [ 0 ] + DotBytes * header -> cupsWidth		9352373	1		+			
ANR	9353097	ArrayIndexing	LineBuffers [ 0 ]		9352373	0					
ANR	9353098	Identifier	LineBuffers		9352373	0					
ANR	9353099	PrimaryExpression	0		9352373	1					
ANR	9353100	MultiplicativeExpression	DotBytes * header -> cupsWidth		9352373	1		*			
ANR	9353101	Identifier	DotBytes		9352373	0					
ANR	9353102	PtrMemberAccess	header -> cupsWidth		9352373	1					
ANR	9353103	Identifier	header		9352373	0					
ANR	9353104	Identifier	cupsWidth		9352373	1					
ANR	9353105	ExpressionStatement	DotBit = 128	307:4:7326:7346	9352373	2	True				
ANR	9353106	AssignmentExpression	DotBit = 128		9352373	0		=			
ANR	9353107	Identifier	DotBit		9352373	0					
ANR	9353108	PrimaryExpression	128		9352373	1					
ANR	9353109	ExpressionStatement	LineCount = 0	308:4:7352:7370	9352373	3	True				
ANR	9353110	AssignmentExpression	LineCount = 0		9352373	0		=			
ANR	9353111	Identifier	LineCount		9352373	0					
ANR	9353112	PrimaryExpression	0		9352373	1					
ANR	9353113	ExpressionStatement	EvenOffset = 0	309:4:7376:7394	9352373	4	True				
ANR	9353114	AssignmentExpression	EvenOffset = 0		9352373	0		=			
ANR	9353115	Identifier	EvenOffset		9352373	0					
ANR	9353116	PrimaryExpression	0		9352373	1					
ANR	9353117	ExpressionStatement	OddOffset = 0	310:4:7400:7418	9352373	5	True				
ANR	9353118	AssignmentExpression	OddOffset = 0		9352373	0		=			
ANR	9353119	Identifier	OddOffset		9352373	0					
ANR	9353120	PrimaryExpression	0		9352373	1					
ANR	9353121	ReturnType	void		9352373	1					
ANR	9353122	Identifier	StartPage		9352373	2					
ANR	9353123	ParameterList	"const ppd_file_t * ppd , const cups_page_header2_t * header"		9352373	3					
ANR	9353124	Parameter	const ppd_file_t * ppd	125:4:3151:3179	9352373	0	True				
ANR	9353125	ParameterType	const ppd_file_t *		9352373	0					
ANR	9353126	Identifier	ppd		9352373	1					
ANR	9353127	Parameter	const cups_page_header2_t * header	126:4:3205:3237	9352373	1	True				
ANR	9353128	ParameterType	const cups_page_header2_t *		9352373	0					
ANR	9353129	Identifier	header		9352373	1					
ANR	9353130	CFGEntryNode	ENTRY		9352373		True				
ANR	9353131	CFGExitNode	EXIT		9352373		True				
ANR	9353132	Symbol	plane		9352373						
ANR	9353133	Symbol	LineCount		9352373						
ANR	9353134	Symbol	* ppd		9352373						
ANR	9353135	Symbol	Planes		9352373						
ANR	9353136	Symbol	* ppd -> sizes		9352373						
ANR	9353137	Symbol	CUPS_CSPACE_KCMYcm		9352373						
ANR	9353138	Symbol	OddOffset		9352373						
ANR	9353139	Symbol	Feed		9352373						
ANR	9353140	Symbol	NULL		9352373						
ANR	9353141	Symbol	CUPS_CSPACE_KCMY		9352373						
ANR	9353142	Symbol	header -> cupsWidth		9352373						
ANR	9353143	Symbol	stderr		9352373						
ANR	9353144	Symbol	* header		9352373						
ANR	9353145	Symbol	ppd -> sizes [ 1 ] . length		9352373						
ANR	9353146	Symbol	header -> cupsCompression		9352373						
ANR	9353147	Symbol	* Planes		9352373						
ANR	9353148	Symbol	DotBytes		9352373						
ANR	9353149	Symbol	strstr		9352373						
ANR	9353150	Symbol	* * ppd		9352373						
ANR	9353151	Symbol	header		9352373						
ANR	9353152	Symbol	header -> PageSize		9352373						
ANR	9353153	Symbol	header -> cupsRowCount		9352373						
ANR	9353154	Symbol	EPSON_ICOLOR		9352373						
ANR	9353155	Symbol	* header -> PageSize		9352373						
ANR	9353156	Symbol	calloc		9352373						
ANR	9353157	Symbol	* LineBuffers		9352373						
ANR	9353158	Symbol	header -> HWResolution		9352373						
ANR	9353159	Symbol	EvenOffset		9352373						
ANR	9353160	Symbol	header -> cupsBytesPerLine		9352373						
ANR	9353161	Symbol	* plane		9352373						
ANR	9353162	Symbol	EPSON_9PIN		9352373						
ANR	9353163	Symbol	malloc		9352373						
ANR	9353164	Symbol	ppd -> sizes		9352373						
ANR	9353165	Symbol	ppd		9352373						
ANR	9353166	Symbol	header -> cupsColorSpace		9352373						
ANR	9353167	Symbol	Shingling		9352373						
ANR	9353168	Symbol	ppd -> sizes [ 1 ] . top		9352373						
ANR	9353169	Symbol	ppd -> nickname		9352373						
ANR	9353170	Symbol	LineBuffers		9352373						
ANR	9353171	Symbol	n		9352373						
ANR	9353172	Symbol	NumPlanes		9352373						
ANR	9353173	Symbol	CompBuffer		9352373						
ANR	9353174	Symbol	* header -> HWResolution		9352373						
ANR	9353175	Symbol	* * header		9352373						
ANR	9353176	Symbol	t		9352373						
ANR	9353177	Symbol	Model		9352373						
ANR	9353178	Symbol	DotColumns		9352373						
ANR	9353179	Symbol	CUPS_CSPACE_CMY		9352373						
ANR	9353180	Symbol	DotBit		9352373						
ANR	9353181	Function	EndPage	319:0:7480:8162							
ANR	9353182	FunctionDef	EndPage (const cups_page_header2_t * header)		9353181	0					
ANR	9353183	CompoundStatement		322:0:7555:8162	9353181	0					
ANR	9353184	IfStatement	if ( DotBytes && header )		9353181	0					
ANR	9353185	Condition	DotBytes && header	323:6:7563:7580	9353181	0	True				
ANR	9353186	AndExpression	DotBytes && header		9353181	0		&&			
ANR	9353187	Identifier	DotBytes		9353181	0					
ANR	9353188	Identifier	header		9353181	1					
ANR	9353189	CompoundStatement		3:2:29:29	9353181	1					
ANR	9353190	IfStatement	if ( ! Shingling )		9353181	0					
ANR	9353191	Condition	! Shingling	329:8:7653:7662	9353181	0	True				
ANR	9353192	UnaryOperationExpression	! Shingling		9353181	0					
ANR	9353193	UnaryOperator	!		9353181	0					
ANR	9353194	Identifier	Shingling		9353181	1					
ANR	9353195	CompoundStatement		9:4:113:113	9353181	1					
ANR	9353196	IfStatement	if ( DotBit < 128 || EvenOffset )		9353181	0					
ANR	9353197	Condition	DotBit < 128 || EvenOffset	331:10:7681:7706	9353181	0	True				
ANR	9353198	OrExpression	DotBit < 128 || EvenOffset		9353181	0		||			
ANR	9353199	RelationalExpression	DotBit < 128		9353181	0		<			
ANR	9353200	Identifier	DotBit		9353181	0					
ANR	9353201	PrimaryExpression	128		9353181	1					
ANR	9353202	Identifier	EvenOffset		9353181	1					
ANR	9353203	ExpressionStatement	"OutputRows ( header , 0 )"	332:8:7717:7738	9353181	1	True				
ANR	9353204	CallExpression	"OutputRows ( header , 0 )"		9353181	0					
ANR	9353205	Callee	OutputRows		9353181	0					
ANR	9353206	Identifier	OutputRows		9353181	0					
ANR	9353207	ArgumentList	header		9353181	1					
ANR	9353208	Argument	header		9353181	0					
ANR	9353209	Identifier	header		9353181	0					
ANR	9353210	Argument	0		9353181	1					
ANR	9353211	PrimaryExpression	0		9353181	0					
ANR	9353212	ElseStatement	else		9353181	0					
ANR	9353213	IfStatement	if ( OddOffset > EvenOffset )		9353181	0					
ANR	9353214	Condition	OddOffset > EvenOffset	334:13:7759:7780	9353181	0	True				
ANR	9353215	RelationalExpression	OddOffset > EvenOffset		9353181	0		>			
ANR	9353216	Identifier	OddOffset		9353181	0					
ANR	9353217	Identifier	EvenOffset		9353181	1					
ANR	9353218	CompoundStatement		14:4:231:231	9353181	1					
ANR	9353219	ExpressionStatement	"OutputRows ( header , 1 )"	336:6:7795:7816	9353181	0	True				
ANR	9353220	CallExpression	"OutputRows ( header , 1 )"		9353181	0					
ANR	9353221	Callee	OutputRows		9353181	0					
ANR	9353222	Identifier	OutputRows		9353181	0					
ANR	9353223	ArgumentList	header		9353181	1					
ANR	9353224	Argument	header		9353181	0					
ANR	9353225	Identifier	header		9353181	0					
ANR	9353226	Argument	1		9353181	1					
ANR	9353227	PrimaryExpression	1		9353181	0					
ANR	9353228	ExpressionStatement	"OutputRows ( header , 0 )"	337:6:7824:7845	9353181	1	True				
ANR	9353229	CallExpression	"OutputRows ( header , 0 )"		9353181	0					
ANR	9353230	Callee	OutputRows		9353181	0					
ANR	9353231	Identifier	OutputRows		9353181	0					
ANR	9353232	ArgumentList	header		9353181	1					
ANR	9353233	Argument	header		9353181	0					
ANR	9353234	Identifier	header		9353181	0					
ANR	9353235	Argument	0		9353181	1					
ANR	9353236	PrimaryExpression	0		9353181	0					
ANR	9353237	ElseStatement	else		9353181	0					
ANR	9353238	CompoundStatement		19:4:310:310	9353181	0					
ANR	9353239	ExpressionStatement	"OutputRows ( header , 0 )"	341:6:7874:7895	9353181	0	True				
ANR	9353240	CallExpression	"OutputRows ( header , 0 )"		9353181	0					
ANR	9353241	Callee	OutputRows		9353181	0					
ANR	9353242	Identifier	OutputRows		9353181	0					
ANR	9353243	ArgumentList	header		9353181	1					
ANR	9353244	Argument	header		9353181	0					
ANR	9353245	Identifier	header		9353181	0					
ANR	9353246	Argument	0		9353181	1					
ANR	9353247	PrimaryExpression	0		9353181	0					
ANR	9353248	ExpressionStatement	"OutputRows ( header , 1 )"	342:6:7903:7924	9353181	1	True				
ANR	9353249	CallExpression	"OutputRows ( header , 1 )"		9353181	0					
ANR	9353250	Callee	OutputRows		9353181	0					
ANR	9353251	Identifier	OutputRows		9353181	0					
ANR	9353252	ArgumentList	header		9353181	1					
ANR	9353253	Argument	header		9353181	0					
ANR	9353254	Identifier	header		9353181	0					
ANR	9353255	Argument	1		9353181	1					
ANR	9353256	PrimaryExpression	1		9353181	0					
ANR	9353257	ExpressionStatement	putchar ( 12 )	350:2:7979:7990	9353181	1	True				
ANR	9353258	CallExpression	putchar ( 12 )		9353181	0					
ANR	9353259	Callee	putchar		9353181	0					
ANR	9353260	Identifier	putchar		9353181	0					
ANR	9353261	ArgumentList	12		9353181	1					
ANR	9353262	Argument	12		9353181	0					
ANR	9353263	PrimaryExpression	12		9353181	0					
ANR	9353264	ExpressionStatement	fflush ( stdout )	351:2:8013:8027	9353181	2	True				
ANR	9353265	CallExpression	fflush ( stdout )		9353181	0					
ANR	9353266	Callee	fflush		9353181	0					
ANR	9353267	Identifier	fflush		9353181	0					
ANR	9353268	ArgumentList	stdout		9353181	1					
ANR	9353269	Argument	stdout		9353181	0					
ANR	9353270	Identifier	stdout		9353181	0					
ANR	9353271	ExpressionStatement	free ( Planes [ 0 ] )	357:2:8061:8076	9353181	3	True				
ANR	9353272	CallExpression	free ( Planes [ 0 ] )		9353181	0					
ANR	9353273	Callee	free		9353181	0					
ANR	9353274	Identifier	free		9353181	0					
ANR	9353275	ArgumentList	Planes [ 0 ]		9353181	1					
ANR	9353276	Argument	Planes [ 0 ]		9353181	0					
ANR	9353277	ArrayIndexing	Planes [ 0 ]		9353181	0					
ANR	9353278	Identifier	Planes		9353181	0					
ANR	9353279	PrimaryExpression	0		9353181	1					
ANR	9353280	IfStatement	if ( CompBuffer )		9353181	4					
ANR	9353281	Condition	CompBuffer	359:6:8085:8094	9353181	0	True				
ANR	9353282	Identifier	CompBuffer		9353181	0					
ANR	9353283	ExpressionStatement	free ( CompBuffer )	360:4:8101:8117	9353181	1	True				
ANR	9353284	CallExpression	free ( CompBuffer )		9353181	0					
ANR	9353285	Callee	free		9353181	0					
ANR	9353286	Identifier	free		9353181	0					
ANR	9353287	ArgumentList	CompBuffer		9353181	1					
ANR	9353288	Argument	CompBuffer		9353181	0					
ANR	9353289	Identifier	CompBuffer		9353181	0					
ANR	9353290	IfStatement	if ( DotBytes )		9353181	5					
ANR	9353291	Condition	DotBytes	362:6:8126:8133	9353181	0	True				
ANR	9353292	Identifier	DotBytes		9353181	0					
ANR	9353293	ExpressionStatement	free ( LineBuffers [ 0 ] )	363:4:8140:8160	9353181	1	True				
ANR	9353294	CallExpression	free ( LineBuffers [ 0 ] )		9353181	0					
ANR	9353295	Callee	free		9353181	0					
ANR	9353296	Identifier	free		9353181	0					
ANR	9353297	ArgumentList	LineBuffers [ 0 ]		9353181	1					
ANR	9353298	Argument	LineBuffers [ 0 ]		9353181	0					
ANR	9353299	ArrayIndexing	LineBuffers [ 0 ]		9353181	0					
ANR	9353300	Identifier	LineBuffers		9353181	0					
ANR	9353301	PrimaryExpression	0		9353181	1					
ANR	9353302	ReturnType	void		9353181	1					
ANR	9353303	Identifier	EndPage		9353181	2					
ANR	9353304	ParameterList	const cups_page_header2_t * header		9353181	3					
ANR	9353305	Parameter	const cups_page_header2_t * header	321:4:7498:7530	9353181	0	True				
ANR	9353306	ParameterType	const cups_page_header2_t *		9353181	0					
ANR	9353307	Identifier	header		9353181	1					
ANR	9353308	CFGEntryNode	ENTRY		9353181		True				
ANR	9353309	CFGExitNode	EXIT		9353181		True				
ANR	9353310	Symbol	CompBuffer		9353181						
ANR	9353311	Symbol	* Planes		9353181						
ANR	9353312	Symbol	DotBytes		9353181						
ANR	9353313	Symbol	stdout		9353181						
ANR	9353314	Symbol	Planes		9353181						
ANR	9353315	Symbol	Shingling		9353181						
ANR	9353316	Symbol	header		9353181						
ANR	9353317	Symbol	EvenOffset		9353181						
ANR	9353318	Symbol	OddOffset		9353181						
ANR	9353319	Symbol	LineBuffers		9353181						
ANR	9353320	Symbol	DotBit		9353181						
ANR	9353321	Symbol	* LineBuffers		9353181						
ANR	9353322	Function	Shutdown	371:0:8214:8292							
ANR	9353323	FunctionDef	Shutdown ()		9353322	0					
ANR	9353324	CompoundStatement		373:0:8234:8292	9353322	0					
ANR	9353325	ExpressionStatement	"printf ( ""\\033@"" )"	378:2:8275:8290	9353322	0	True				
ANR	9353326	CallExpression	"printf ( ""\\033@"" )"		9353322	0					
ANR	9353327	Callee	printf		9353322	0					
ANR	9353328	Identifier	printf		9353322	0					
ANR	9353329	ArgumentList	"""\\033@"""		9353322	1					
ANR	9353330	Argument	"""\\033@"""		9353322	0					
ANR	9353331	PrimaryExpression	"""\\033@"""		9353322	0					
ANR	9353332	ReturnType	void		9353322	1					
ANR	9353333	Identifier	Shutdown		9353322	2					
ANR	9353334	ParameterList			9353322	3					
ANR	9353335	CFGEntryNode	ENTRY		9353322		True				
ANR	9353336	CFGExitNode	EXIT		9353322		True				
ANR	9353337	Function	CancelJob	386:0:8349:8424							
ANR	9353338	FunctionDef	CancelJob (int sig)		9353337	0					
ANR	9353339	CompoundStatement		388:0:8392:8424	9353337	0					
ANR	9353340	ExpressionStatement	( void ) sig	389:2:8396:8405	9353337	0	True				
ANR	9353341	CastExpression	( void ) sig		9353337	0					
ANR	9353342	CastTarget	void		9353337	0					
ANR	9353343	Identifier	sig		9353337	1					
ANR	9353344	ExpressionStatement	Canceled = 1	391:2:8410:8422	9353337	1	True				
ANR	9353345	AssignmentExpression	Canceled = 1		9353337	0		=			
ANR	9353346	Identifier	Canceled		9353337	0					
ANR	9353347	PrimaryExpression	1		9353337	1					
ANR	9353348	ReturnType	void		9353337	1					
ANR	9353349	Identifier	CancelJob		9353337	2					
ANR	9353350	ParameterList	int sig		9353337	3					
ANR	9353351	Parameter	int sig	387:10:8364:8370	9353337	0	True				
ANR	9353352	ParameterType	int		9353337	0					
ANR	9353353	Identifier	sig		9353337	1					
ANR	9353354	CFGEntryNode	ENTRY		9353337		True				
ANR	9353355	CFGExitNode	EXIT		9353337		True				
ANR	9353356	Symbol	sig		9353337						
ANR	9353357	Symbol	Canceled		9353337						
ANR	9353358	Function	CompressData	399:0:8487:12450							
ANR	9353359	FunctionDef	"CompressData (const unsigned char * line , int length , int plane , int type , int xstep , int ystep)"		9353358	0					
ANR	9353360	CompoundStatement		406:0:8854:12450	9353358	0					
ANR	9353361	IdentifierDeclStatement	"const unsigned char * line_ptr , * line_end , * start ;"	407:2:8858:8984	9353358	0	True				
ANR	9353362	IdentifierDecl	* line_ptr		9353358	0					
ANR	9353363	IdentifierDeclType	const unsigned char *		9353358	0					
ANR	9353364	Identifier	line_ptr		9353358	1					
ANR	9353365	IdentifierDecl	* line_end		9353358	1					
ANR	9353366	IdentifierDeclType	const unsigned char *		9353358	0					
ANR	9353367	Identifier	line_end		9353358	1					
ANR	9353368	IdentifierDecl	* start		9353358	2					
ANR	9353369	IdentifierDeclType	const unsigned char *		9353358	0					
ANR	9353370	Identifier	start		9353358	1					
ANR	9353371	IdentifierDeclStatement	"unsigned char * comp_ptr , temp ;"	410:2:9025:9101	9353358	1	True				
ANR	9353372	IdentifierDecl	* comp_ptr		9353358	0					
ANR	9353373	IdentifierDeclType	unsigned char *		9353358	0					
ANR	9353374	Identifier	comp_ptr		9353358	1					
ANR	9353375	IdentifierDecl	temp		9353358	1					
ANR	9353376	IdentifierDeclType	unsigned char		9353358	0					
ANR	9353377	Identifier	temp		9353358	1					
ANR	9353378	IdentifierDeclStatement	int count ;	412:2:9125:9145	9353358	2	True				
ANR	9353379	IdentifierDecl	count		9353358	0					
ANR	9353380	IdentifierDeclType	int		9353358	0					
ANR	9353381	Identifier	count		9353358	1					
ANR	9353382	Statement	static	413:2:9182:9187	9353358	3	True				
ANR	9353383	IdentifierDeclStatement	"int ctable [ 6 ] = { 0 , 2 , 1 , 4 , 18 , 17 } ;"	413:9:9189:9228	9353358	4	True				
ANR	9353384	IdentifierDecl	"ctable [ 6 ] = { 0 , 2 , 1 , 4 , 18 , 17 }"		9353358	0					
ANR	9353385	IdentifierDeclType	int [ 6 ]		9353358	0					
ANR	9353386	Identifier	ctable		9353358	1					
ANR	9353387	PrimaryExpression	6		9353358	2					
ANR	9353388	AssignmentExpression	"ctable [ 6 ] = { 0 , 2 , 1 , 4 , 18 , 17 }"		9353358	3		=			
ANR	9353389	Identifier	ctable		9353358	0					
ANR	9353390	InitializerList	0		9353358	1					
ANR	9353391	PrimaryExpression	0		9353358	0					
ANR	9353392	PrimaryExpression	2		9353358	1					
ANR	9353393	PrimaryExpression	1		9353358	2					
ANR	9353394	PrimaryExpression	4		9353358	3					
ANR	9353395	PrimaryExpression	18		9353358	4					
ANR	9353396	PrimaryExpression	17		9353358	5					
ANR	9353397	ExpressionStatement	line_ptr = line	421:2:9297:9312	9353358	5	True				
ANR	9353398	AssignmentExpression	line_ptr = line		9353358	0		=			
ANR	9353399	Identifier	line_ptr		9353358	0					
ANR	9353400	Identifier	line		9353358	1					
ANR	9353401	ExpressionStatement	line_end = line + length	422:2:9316:9340	9353358	6	True				
ANR	9353402	AssignmentExpression	line_end = line + length		9353358	0		=			
ANR	9353403	Identifier	line_end		9353358	0					
ANR	9353404	AdditiveExpression	line + length		9353358	1		+			
ANR	9353405	Identifier	line		9353358	0					
ANR	9353406	Identifier	length		9353358	1					
ANR	9353407	IfStatement	if ( ystep == 5 )		9353358	7					
ANR	9353408	Condition	ystep == 5	428:6:9400:9409	9353358	0	True				
ANR	9353409	EqualityExpression	ystep == 5		9353358	0		==			
ANR	9353410	Identifier	ystep		9353358	0					
ANR	9353411	PrimaryExpression	5		9353358	1					
ANR	9353412	CompoundStatement		24:2:559:559	9353358	1					
ANR	9353413	ForStatement	for ( comp_ptr = ( unsigned char * ) line ; comp_ptr < line_end ; )		9353358	0					
ANR	9353414	ForInit	comp_ptr = ( unsigned char * ) line ;	430:9:9425:9457	9353358	0	True				
ANR	9353415	AssignmentExpression	comp_ptr = ( unsigned char * ) line		9353358	0		=			
ANR	9353416	Identifier	comp_ptr		9353358	0					
ANR	9353417	CastExpression	( unsigned char * ) line		9353358	1					
ANR	9353418	CastTarget	unsigned char *		9353358	0					
ANR	9353419	Identifier	line		9353358	1					
ANR	9353420	Condition	comp_ptr < line_end	430:43:9459:9477	9353358	1	True				
ANR	9353421	RelationalExpression	comp_ptr < line_end		9353358	0		<			
ANR	9353422	Identifier	comp_ptr		9353358	0					
ANR	9353423	Identifier	line_end		9353358	1					
ANR	9353424	CompoundStatement		26:4:630:630	9353358	2					
ANR	9353425	ExpressionStatement	temp = * comp_ptr	436:6:9544:9560	9353358	0	True				
ANR	9353426	AssignmentExpression	temp = * comp_ptr		9353358	0		=			
ANR	9353427	Identifier	temp		9353358	0					
ANR	9353428	UnaryOperationExpression	* comp_ptr		9353358	1					
ANR	9353429	UnaryOperator	*		9353358	0					
ANR	9353430	Identifier	comp_ptr		9353358	1					
ANR	9353431	IfStatement	if ( ( temp & 0xc0 ) == 0xc0 )		9353358	1					
ANR	9353432	Condition	( temp & 0xc0 ) == 0xc0	442:10:9622:9642	9353358	0	True				
ANR	9353433	EqualityExpression	( temp & 0xc0 ) == 0xc0		9353358	0		==			
ANR	9353434	BitAndExpression	temp & 0xc0		9353358	0		&			
ANR	9353435	Identifier	temp		9353358	0					
ANR	9353436	PrimaryExpression	0xc0		9353358	1					
ANR	9353437	PrimaryExpression	0xc0		9353358	1					
ANR	9353438	ExpressionStatement	temp &= 0xbf	443:8:9653:9665	9353358	1	True				
ANR	9353439	AssignmentExpression	temp &= 0xbf		9353358	0		&=			
ANR	9353440	Identifier	temp		9353358	0					
ANR	9353441	PrimaryExpression	0xbf		9353358	1					
ANR	9353442	IfStatement	if ( ( temp & 0x60 ) == 0x60 )		9353358	2					
ANR	9353443	Condition	( temp & 0x60 ) == 0x60	444:10:9677:9697	9353358	0	True				
ANR	9353444	EqualityExpression	( temp & 0x60 ) == 0x60		9353358	0		==			
ANR	9353445	BitAndExpression	temp & 0x60		9353358	0		&			
ANR	9353446	Identifier	temp		9353358	0					
ANR	9353447	PrimaryExpression	0x60		9353358	1					
ANR	9353448	PrimaryExpression	0x60		9353358	1					
ANR	9353449	ExpressionStatement	temp &= 0xdf	445:8:9708:9720	9353358	1	True				
ANR	9353450	AssignmentExpression	temp &= 0xdf		9353358	0		&=			
ANR	9353451	Identifier	temp		9353358	0					
ANR	9353452	PrimaryExpression	0xdf		9353358	1					
ANR	9353453	IfStatement	if ( ( temp & 0x30 ) == 0x30 )		9353358	3					
ANR	9353454	Condition	( temp & 0x30 ) == 0x30	446:10:9732:9752	9353358	0	True				
ANR	9353455	EqualityExpression	( temp & 0x30 ) == 0x30		9353358	0		==			
ANR	9353456	BitAndExpression	temp & 0x30		9353358	0		&			
ANR	9353457	Identifier	temp		9353358	0					
ANR	9353458	PrimaryExpression	0x30		9353358	1					
ANR	9353459	PrimaryExpression	0x30		9353358	1					
ANR	9353460	ExpressionStatement	temp &= 0xef	447:8:9763:9775	9353358	1	True				
ANR	9353461	AssignmentExpression	temp &= 0xef		9353358	0		&=			
ANR	9353462	Identifier	temp		9353358	0					
ANR	9353463	PrimaryExpression	0xef		9353358	1					
ANR	9353464	IfStatement	if ( ( temp & 0x18 ) == 0x18 )		9353358	4					
ANR	9353465	Condition	( temp & 0x18 ) == 0x18	448:10:9787:9807	9353358	0	True				
ANR	9353466	EqualityExpression	( temp & 0x18 ) == 0x18		9353358	0		==			
ANR	9353467	BitAndExpression	temp & 0x18		9353358	0		&			
ANR	9353468	Identifier	temp		9353358	0					
ANR	9353469	PrimaryExpression	0x18		9353358	1					
ANR	9353470	PrimaryExpression	0x18		9353358	1					
ANR	9353471	ExpressionStatement	temp &= 0xf7	449:8:9818:9830	9353358	1	True				
ANR	9353472	AssignmentExpression	temp &= 0xf7		9353358	0		&=			
ANR	9353473	Identifier	temp		9353358	0					
ANR	9353474	PrimaryExpression	0xf7		9353358	1					
ANR	9353475	IfStatement	if ( ( temp & 0x0c ) == 0x0c )		9353358	5					
ANR	9353476	Condition	( temp & 0x0c ) == 0x0c	450:10:9842:9862	9353358	0	True				
ANR	9353477	EqualityExpression	( temp & 0x0c ) == 0x0c		9353358	0		==			
ANR	9353478	BitAndExpression	temp & 0x0c		9353358	0		&			
ANR	9353479	Identifier	temp		9353358	0					
ANR	9353480	PrimaryExpression	0x0c		9353358	1					
ANR	9353481	PrimaryExpression	0x0c		9353358	1					
ANR	9353482	ExpressionStatement	temp &= 0xfb	451:8:9873:9885	9353358	1	True				
ANR	9353483	AssignmentExpression	temp &= 0xfb		9353358	0		&=			
ANR	9353484	Identifier	temp		9353358	0					
ANR	9353485	PrimaryExpression	0xfb		9353358	1					
ANR	9353486	IfStatement	if ( ( temp & 0x06 ) == 0x06 )		9353358	6					
ANR	9353487	Condition	( temp & 0x06 ) == 0x06	452:10:9897:9917	9353358	0	True				
ANR	9353488	EqualityExpression	( temp & 0x06 ) == 0x06		9353358	0		==			
ANR	9353489	BitAndExpression	temp & 0x06		9353358	0		&			
ANR	9353490	Identifier	temp		9353358	0					
ANR	9353491	PrimaryExpression	0x06		9353358	1					
ANR	9353492	PrimaryExpression	0x06		9353358	1					
ANR	9353493	ExpressionStatement	temp &= 0xfd	453:8:9928:9940	9353358	1	True				
ANR	9353494	AssignmentExpression	temp &= 0xfd		9353358	0		&=			
ANR	9353495	Identifier	temp		9353358	0					
ANR	9353496	PrimaryExpression	0xfd		9353358	1					
ANR	9353497	IfStatement	if ( ( temp & 0x03 ) == 0x03 )		9353358	7					
ANR	9353498	Condition	( temp & 0x03 ) == 0x03	454:10:9952:9972	9353358	0	True				
ANR	9353499	EqualityExpression	( temp & 0x03 ) == 0x03		9353358	0		==			
ANR	9353500	BitAndExpression	temp & 0x03		9353358	0		&			
ANR	9353501	Identifier	temp		9353358	0					
ANR	9353502	PrimaryExpression	0x03		9353358	1					
ANR	9353503	PrimaryExpression	0x03		9353358	1					
ANR	9353504	ExpressionStatement	temp &= 0xfe	455:8:9983:9995	9353358	1	True				
ANR	9353505	AssignmentExpression	temp &= 0xfe		9353358	0		&=			
ANR	9353506	Identifier	temp		9353358	0					
ANR	9353507	PrimaryExpression	0xfe		9353358	1					
ANR	9353508	ExpressionStatement	* comp_ptr ++ = temp	457:6:10004:10022	9353358	8	True				
ANR	9353509	AssignmentExpression	* comp_ptr ++ = temp		9353358	0		=			
ANR	9353510	UnaryOperationExpression	* comp_ptr ++		9353358	0					
ANR	9353511	UnaryOperator	*		9353358	0					
ANR	9353512	PostIncDecOperationExpression	comp_ptr ++		9353358	1					
ANR	9353513	Identifier	comp_ptr		9353358	0					
ANR	9353514	IncDec	++		9353358	1					
ANR	9353515	Identifier	temp		9353358	1					
ANR	9353516	IfStatement	if ( ( temp & 0x01 ) && comp_ptr < line_end && * comp_ptr & 0x80 )		9353358	9					
ANR	9353517	Condition	( temp & 0x01 ) && comp_ptr < line_end && * comp_ptr & 0x80	464:10:10146:10201	9353358	0	True				
ANR	9353518	AndExpression	( temp & 0x01 ) && comp_ptr < line_end && * comp_ptr & 0x80		9353358	0		&&			
ANR	9353519	BitAndExpression	temp & 0x01		9353358	0		&			
ANR	9353520	Identifier	temp		9353358	0					
ANR	9353521	PrimaryExpression	0x01		9353358	1					
ANR	9353522	AndExpression	comp_ptr < line_end && * comp_ptr & 0x80		9353358	1		&&			
ANR	9353523	RelationalExpression	comp_ptr < line_end		9353358	0		<			
ANR	9353524	Identifier	comp_ptr		9353358	0					
ANR	9353525	Identifier	line_end		9353358	1					
ANR	9353526	BitAndExpression	* comp_ptr & 0x80		9353358	1		&			
ANR	9353527	UnaryOperationExpression	* comp_ptr		9353358	0					
ANR	9353528	UnaryOperator	*		9353358	0					
ANR	9353529	Identifier	comp_ptr		9353358	1					
ANR	9353530	PrimaryExpression	0x80		9353358	1					
ANR	9353531	ExpressionStatement	* comp_ptr &= 0x7f	465:8:10212:10229	9353358	1	True				
ANR	9353532	AssignmentExpression	* comp_ptr &= 0x7f		9353358	0		&=			
ANR	9353533	UnaryOperationExpression	* comp_ptr		9353358	0					
ANR	9353534	UnaryOperator	*		9353358	0					
ANR	9353535	Identifier	comp_ptr		9353358	1					
ANR	9353536	PrimaryExpression	0x7f		9353358	1					
ANR	9353537	SwitchStatement	switch ( type )		9353358	8					
ANR	9353538	Condition	type	469:10:10252:10255	9353358	0	True				
ANR	9353539	Identifier	type		9353358	0					
ANR	9353540	CompoundStatement		65:2:1405:1405	9353358	1					
ANR	9353541	Label	case 0 :	471:4:10266:10273	9353358	0	True				
ANR	9353542	BreakStatement	break ;	475:1:10314:10319	9353358	1	True				
ANR	9353543	Label	case 1 :	477:4:10326:10333	9353358	2	True				
ANR	9353544	ExpressionStatement	comp_ptr = CompBuffer	482:1:10398:10419	9353358	3	True				
ANR	9353545	AssignmentExpression	comp_ptr = CompBuffer		9353358	0		=			
ANR	9353546	Identifier	comp_ptr		9353358	0					
ANR	9353547	Identifier	CompBuffer		9353358	1					
ANR	9353548	WhileStatement	while ( line_ptr < line_end )		9353358	4					
ANR	9353549	Condition	line_ptr < line_end	484:8:10430:10448	9353358	0	True				
ANR	9353550	RelationalExpression	line_ptr < line_end		9353358	0		<			
ANR	9353551	Identifier	line_ptr		9353358	0					
ANR	9353552	Identifier	line_end		9353358	1					
ANR	9353553	CompoundStatement		80:1:1597:1597	9353358	1					
ANR	9353554	IfStatement	if ( ( line_ptr + 1 ) >= line_end )		9353358	0					
ANR	9353555	Condition	( line_ptr + 1 ) >= line_end	486:7:10461:10486	9353358	0	True				
ANR	9353556	RelationalExpression	( line_ptr + 1 ) >= line_end		9353358	0		>=			
ANR	9353557	AdditiveExpression	line_ptr + 1		9353358	0		+			
ANR	9353558	Identifier	line_ptr		9353358	0					
ANR	9353559	PrimaryExpression	1		9353358	1					
ANR	9353560	Identifier	line_end		9353358	1					
ANR	9353561	CompoundStatement		82:3:1637:1637	9353358	1					
ANR	9353562	ExpressionStatement	* comp_ptr ++ = 0x00	492:5:10548:10566	9353358	0	True				
ANR	9353563	AssignmentExpression	* comp_ptr ++ = 0x00		9353358	0		=			
ANR	9353564	UnaryOperationExpression	* comp_ptr ++		9353358	0					
ANR	9353565	UnaryOperator	*		9353358	0					
ANR	9353566	PostIncDecOperationExpression	comp_ptr ++		9353358	1					
ANR	9353567	Identifier	comp_ptr		9353358	0					
ANR	9353568	IncDec	++		9353358	1					
ANR	9353569	PrimaryExpression	0x00		9353358	1					
ANR	9353570	ExpressionStatement	* comp_ptr ++ = * line_ptr ++	493:5:10573:10598	9353358	1	True				
ANR	9353571	AssignmentExpression	* comp_ptr ++ = * line_ptr ++		9353358	0		=			
ANR	9353572	UnaryOperationExpression	* comp_ptr ++		9353358	0					
ANR	9353573	UnaryOperator	*		9353358	0					
ANR	9353574	PostIncDecOperationExpression	comp_ptr ++		9353358	1					
ANR	9353575	Identifier	comp_ptr		9353358	0					
ANR	9353576	IncDec	++		9353358	1					
ANR	9353577	UnaryOperationExpression	* line_ptr ++		9353358	1					
ANR	9353578	UnaryOperator	*		9353358	0					
ANR	9353579	PostIncDecOperationExpression	line_ptr ++		9353358	1					
ANR	9353580	Identifier	line_ptr		9353358	0					
ANR	9353581	IncDec	++		9353358	1					
ANR	9353582	ElseStatement	else		9353358	0					
ANR	9353583	IfStatement	if ( line_ptr [ 0 ] == line_ptr [ 1 ] )		9353358	0					
ANR	9353584	Condition	line_ptr [ 0 ] == line_ptr [ 1 ]	495:12:10617:10642	9353358	0	True				
ANR	9353585	EqualityExpression	line_ptr [ 0 ] == line_ptr [ 1 ]		9353358	0		==			
ANR	9353586	ArrayIndexing	line_ptr [ 0 ]		9353358	0					
ANR	9353587	Identifier	line_ptr		9353358	0					
ANR	9353588	PrimaryExpression	0		9353358	1					
ANR	9353589	ArrayIndexing	line_ptr [ 1 ]		9353358	1					
ANR	9353590	Identifier	line_ptr		9353358	0					
ANR	9353591	PrimaryExpression	1		9353358	1					
ANR	9353592	CompoundStatement		91:3:1793:1793	9353358	1					
ANR	9353593	ExpressionStatement	line_ptr ++	501:5:10699:10710	9353358	0	True				
ANR	9353594	PostIncDecOperationExpression	line_ptr ++		9353358	0					
ANR	9353595	Identifier	line_ptr		9353358	0					
ANR	9353596	IncDec	++		9353358	1					
ANR	9353597	ExpressionStatement	count = 2	502:5:10717:10726	9353358	1	True				
ANR	9353598	AssignmentExpression	count = 2		9353358	0		=			
ANR	9353599	Identifier	count		9353358	0					
ANR	9353600	PrimaryExpression	2		9353358	1					
ANR	9353601	WhileStatement	while ( line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] == line_ptr [ 1 ] && count < 127 )		9353358	2					
ANR	9353602	Condition	line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] == line_ptr [ 1 ] && count < 127	504:12:10741:10834	9353358	0	True				
ANR	9353603	AndExpression	line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] == line_ptr [ 1 ] && count < 127		9353358	0		&&			
ANR	9353604	RelationalExpression	line_ptr < ( line_end - 1 )		9353358	0		<			
ANR	9353605	Identifier	line_ptr		9353358	0					
ANR	9353606	AdditiveExpression	line_end - 1		9353358	1		-			
ANR	9353607	Identifier	line_end		9353358	0					
ANR	9353608	PrimaryExpression	1		9353358	1					
ANR	9353609	AndExpression	line_ptr [ 0 ] == line_ptr [ 1 ] && count < 127		9353358	1		&&			
ANR	9353610	EqualityExpression	line_ptr [ 0 ] == line_ptr [ 1 ]		9353358	0		==			
ANR	9353611	ArrayIndexing	line_ptr [ 0 ]		9353358	0					
ANR	9353612	Identifier	line_ptr		9353358	0					
ANR	9353613	PrimaryExpression	0		9353358	1					
ANR	9353614	ArrayIndexing	line_ptr [ 1 ]		9353358	1					
ANR	9353615	Identifier	line_ptr		9353358	0					
ANR	9353616	PrimaryExpression	1		9353358	1					
ANR	9353617	RelationalExpression	count < 127		9353358	1		<			
ANR	9353618	Identifier	count		9353358	0					
ANR	9353619	PrimaryExpression	127		9353358	1					
ANR	9353620	CompoundStatement		102:5:1987:1987	9353358	1					
ANR	9353621	ExpressionStatement	line_ptr ++	508:14:10858:10869	9353358	0	True				
ANR	9353622	PostIncDecOperationExpression	line_ptr ++		9353358	0					
ANR	9353623	Identifier	line_ptr		9353358	0					
ANR	9353624	IncDec	++		9353358	1					
ANR	9353625	ExpressionStatement	count ++	509:14:10885:10893	9353358	1	True				
ANR	9353626	PostIncDecOperationExpression	count ++		9353358	0					
ANR	9353627	Identifier	count		9353358	0					
ANR	9353628	IncDec	++		9353358	1					
ANR	9353629	ExpressionStatement	* comp_ptr ++ = 257 - count	512:5:10908:10933	9353358	3	True				
ANR	9353630	AssignmentExpression	* comp_ptr ++ = 257 - count		9353358	0		=			
ANR	9353631	UnaryOperationExpression	* comp_ptr ++		9353358	0					
ANR	9353632	UnaryOperator	*		9353358	0					
ANR	9353633	PostIncDecOperationExpression	comp_ptr ++		9353358	1					
ANR	9353634	Identifier	comp_ptr		9353358	0					
ANR	9353635	IncDec	++		9353358	1					
ANR	9353636	AdditiveExpression	257 - count		9353358	1		-			
ANR	9353637	PrimaryExpression	257		9353358	0					
ANR	9353638	Identifier	count		9353358	1					
ANR	9353639	ExpressionStatement	* comp_ptr ++ = * line_ptr ++	513:5:10940:10965	9353358	4	True				
ANR	9353640	AssignmentExpression	* comp_ptr ++ = * line_ptr ++		9353358	0		=			
ANR	9353641	UnaryOperationExpression	* comp_ptr ++		9353358	0					
ANR	9353642	UnaryOperator	*		9353358	0					
ANR	9353643	PostIncDecOperationExpression	comp_ptr ++		9353358	1					
ANR	9353644	Identifier	comp_ptr		9353358	0					
ANR	9353645	IncDec	++		9353358	1					
ANR	9353646	UnaryOperationExpression	* line_ptr ++		9353358	1					
ANR	9353647	UnaryOperator	*		9353358	0					
ANR	9353648	PostIncDecOperationExpression	line_ptr ++		9353358	1					
ANR	9353649	Identifier	line_ptr		9353358	0					
ANR	9353650	IncDec	++		9353358	1					
ANR	9353651	ElseStatement	else		9353358	0					
ANR	9353652	CompoundStatement		111:3:2128:2128	9353358	0					
ANR	9353653	ExpressionStatement	start = line_ptr	521:5:11038:11057	9353358	0	True				
ANR	9353654	AssignmentExpression	start = line_ptr		9353358	0		=			
ANR	9353655	Identifier	start		9353358	0					
ANR	9353656	Identifier	line_ptr		9353358	1					
ANR	9353657	ExpressionStatement	line_ptr ++	522:5:11064:11075	9353358	1	True				
ANR	9353658	PostIncDecOperationExpression	line_ptr ++		9353358	0					
ANR	9353659	Identifier	line_ptr		9353358	0					
ANR	9353660	IncDec	++		9353358	1					
ANR	9353661	ExpressionStatement	count = 1	523:5:11082:11094	9353358	2	True				
ANR	9353662	AssignmentExpression	count = 1		9353358	0		=			
ANR	9353663	Identifier	count		9353358	0					
ANR	9353664	PrimaryExpression	1		9353358	1					
ANR	9353665	WhileStatement	while ( line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] != line_ptr [ 1 ] && count < 127 )		9353358	3					
ANR	9353666	Condition	line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] != line_ptr [ 1 ] && count < 127	525:12:11109:11202	9353358	0	True				
ANR	9353667	AndExpression	line_ptr < ( line_end - 1 ) && line_ptr [ 0 ] != line_ptr [ 1 ] && count < 127		9353358	0		&&			
ANR	9353668	RelationalExpression	line_ptr < ( line_end - 1 )		9353358	0		<			
ANR	9353669	Identifier	line_ptr		9353358	0					
ANR	9353670	AdditiveExpression	line_end - 1		9353358	1		-			
ANR	9353671	Identifier	line_end		9353358	0					
ANR	9353672	PrimaryExpression	1		9353358	1					
ANR	9353673	AndExpression	line_ptr [ 0 ] != line_ptr [ 1 ] && count < 127		9353358	1		&&			
ANR	9353674	EqualityExpression	line_ptr [ 0 ] != line_ptr [ 1 ]		9353358	0		!=			
ANR	9353675	ArrayIndexing	line_ptr [ 0 ]		9353358	0					
ANR	9353676	Identifier	line_ptr		9353358	0					
ANR	9353677	PrimaryExpression	0		9353358	1					
ANR	9353678	ArrayIndexing	line_ptr [ 1 ]		9353358	1					
ANR	9353679	Identifier	line_ptr		9353358	0					
ANR	9353680	PrimaryExpression	1		9353358	1					
ANR	9353681	RelationalExpression	count < 127		9353358	1		<			
ANR	9353682	Identifier	count		9353358	0					
ANR	9353683	PrimaryExpression	127		9353358	1					
ANR	9353684	CompoundStatement		123:5:2355:2355	9353358	1					
ANR	9353685	ExpressionStatement	line_ptr ++	529:14:11226:11237	9353358	0	True				
ANR	9353686	PostIncDecOperationExpression	line_ptr ++		9353358	0					
ANR	9353687	Identifier	line_ptr		9353358	0					
ANR	9353688	IncDec	++		9353358	1					
ANR	9353689	ExpressionStatement	count ++	530:14:11253:11261	9353358	1	True				
ANR	9353690	PostIncDecOperationExpression	count ++		9353358	0					
ANR	9353691	Identifier	count		9353358	0					
ANR	9353692	IncDec	++		9353358	1					
ANR	9353693	ExpressionStatement	* comp_ptr ++ = count - 1	533:5:11276:11299	9353358	4	True				
ANR	9353694	AssignmentExpression	* comp_ptr ++ = count - 1		9353358	0		=			
ANR	9353695	UnaryOperationExpression	* comp_ptr ++		9353358	0					
ANR	9353696	UnaryOperator	*		9353358	0					
ANR	9353697	PostIncDecOperationExpression	comp_ptr ++		9353358	1					
ANR	9353698	Identifier	comp_ptr		9353358	0					
ANR	9353699	IncDec	++		9353358	1					
ANR	9353700	AdditiveExpression	count - 1		9353358	1		-			
ANR	9353701	Identifier	count		9353358	0					
ANR	9353702	PrimaryExpression	1		9353358	1					
ANR	9353703	ExpressionStatement	"memcpy ( comp_ptr , start , count )"	535:5:11307:11337	9353358	5	True				
ANR	9353704	CallExpression	"memcpy ( comp_ptr , start , count )"		9353358	0					
ANR	9353705	Callee	memcpy		9353358	0					
ANR	9353706	Identifier	memcpy		9353358	0					
ANR	9353707	ArgumentList	comp_ptr		9353358	1					
ANR	9353708	Argument	comp_ptr		9353358	0					
ANR	9353709	Identifier	comp_ptr		9353358	0					
ANR	9353710	Argument	start		9353358	1					
ANR	9353711	Identifier	start		9353358	0					
ANR	9353712	Argument	count		9353358	2					
ANR	9353713	Identifier	count		9353358	0					
ANR	9353714	ExpressionStatement	comp_ptr += count	536:5:11344:11361	9353358	6	True				
ANR	9353715	AssignmentExpression	comp_ptr += count		9353358	0		+=			
ANR	9353716	Identifier	comp_ptr		9353358	0					
ANR	9353717	Identifier	count		9353358	1					
ANR	9353718	ExpressionStatement	line_ptr = CompBuffer	540:8:11380:11401	9353358	5	True				
ANR	9353719	AssignmentExpression	line_ptr = CompBuffer		9353358	0		=			
ANR	9353720	Identifier	line_ptr		9353358	0					
ANR	9353721	Identifier	CompBuffer		9353358	1					
ANR	9353722	ExpressionStatement	line_end = comp_ptr	541:8:11411:11430	9353358	6	True				
ANR	9353723	AssignmentExpression	line_end = comp_ptr		9353358	0		=			
ANR	9353724	Identifier	line_end		9353358	0					
ANR	9353725	Identifier	comp_ptr		9353358	1					
ANR	9353726	BreakStatement	break ;	542:1:11433:11438	9353358	7	True				
ANR	9353727	ExpressionStatement	putchar ( 0x0d )	545:2:11447:11460	9353358	9	True				
ANR	9353728	CallExpression	putchar ( 0x0d )		9353358	0					
ANR	9353729	Callee	putchar		9353358	0					
ANR	9353730	Identifier	putchar		9353358	0					
ANR	9353731	ArgumentList	0x0d		9353358	1					
ANR	9353732	Argument	0x0d		9353358	0					
ANR	9353733	PrimaryExpression	0x0d		9353358	0					
ANR	9353734	IfStatement	if ( Model < EPSON_ICOLOR )		9353358	10					
ANR	9353735	Condition	Model < EPSON_ICOLOR	547:6:11508:11527	9353358	0	True				
ANR	9353736	RelationalExpression	Model < EPSON_ICOLOR		9353358	0		<			
ANR	9353737	Identifier	Model		9353358	0					
ANR	9353738	Identifier	EPSON_ICOLOR		9353358	1					
ANR	9353739	CompoundStatement		143:2:2677:2677	9353358	1					
ANR	9353740	IfStatement	if ( NumPlanes > 1 )		9353358	0					
ANR	9353741	Condition	NumPlanes > 1	553:8:11591:11603	9353358	0	True				
ANR	9353742	RelationalExpression	NumPlanes > 1		9353358	0		>			
ANR	9353743	Identifier	NumPlanes		9353358	0					
ANR	9353744	PrimaryExpression	1		9353358	1					
ANR	9353745	CompoundStatement		149:4:2755:2755	9353358	1					
ANR	9353746	IfStatement	if ( plane > 3 )		9353358	0					
ANR	9353747	Condition	plane > 3	559:10:11665:11673	9353358	0	True				
ANR	9353748	RelationalExpression	plane > 3		9353358	0		>			
ANR	9353749	Identifier	plane		9353358	0					
ANR	9353750	PrimaryExpression	3		9353358	1					
ANR	9353751	ExpressionStatement	"printf ( ""\\033(r%c%c%c%c"" , 2 , 0 , 1 , ctable [ plane ] & 15 )"	560:1:11677:11730	9353358	1	True				
ANR	9353752	CallExpression	"printf ( ""\\033(r%c%c%c%c"" , 2 , 0 , 1 , ctable [ plane ] & 15 )"		9353358	0					
ANR	9353753	Callee	printf		9353358	0					
ANR	9353754	Identifier	printf		9353358	0					
ANR	9353755	ArgumentList	"""\\033(r%c%c%c%c"""		9353358	1					
ANR	9353756	Argument	"""\\033(r%c%c%c%c"""		9353358	0					
ANR	9353757	PrimaryExpression	"""\\033(r%c%c%c%c"""		9353358	0					
ANR	9353758	Argument	2		9353358	1					
ANR	9353759	PrimaryExpression	2		9353358	0					
ANR	9353760	Argument	0		9353358	2					
ANR	9353761	PrimaryExpression	0		9353358	0					
ANR	9353762	Argument	1		9353358	3					
ANR	9353763	PrimaryExpression	1		9353358	0					
ANR	9353764	Argument	ctable [ plane ] & 15		9353358	4					
ANR	9353765	BitAndExpression	ctable [ plane ] & 15		9353358	0		&			
ANR	9353766	ArrayIndexing	ctable [ plane ]		9353358	0					
ANR	9353767	Identifier	ctable		9353358	0					
ANR	9353768	Identifier	plane		9353358	1					
ANR	9353769	PrimaryExpression	15		9353358	1					
ANR	9353770	ElseStatement	else		9353358	0					
ANR	9353771	IfStatement	if ( NumPlanes == 3 )		9353358	0					
ANR	9353772	Condition	NumPlanes == 3	562:15:11779:11792	9353358	0	True				
ANR	9353773	EqualityExpression	NumPlanes == 3		9353358	0		==			
ANR	9353774	Identifier	NumPlanes		9353358	0					
ANR	9353775	PrimaryExpression	3		9353358	1					
ANR	9353776	ExpressionStatement	"printf ( ""\\033r%c"" , ctable [ plane + 1 ] )"	563:1:11796:11832	9353358	1	True				
ANR	9353777	CallExpression	"printf ( ""\\033r%c"" , ctable [ plane + 1 ] )"		9353358	0					
ANR	9353778	Callee	printf		9353358	0					
ANR	9353779	Identifier	printf		9353358	0					
ANR	9353780	ArgumentList	"""\\033r%c"""		9353358	1					
ANR	9353781	Argument	"""\\033r%c"""		9353358	0					
ANR	9353782	PrimaryExpression	"""\\033r%c"""		9353358	0					
ANR	9353783	Argument	ctable [ plane + 1 ]		9353358	1					
ANR	9353784	ArrayIndexing	ctable [ plane + 1 ]		9353358	0					
ANR	9353785	Identifier	ctable		9353358	0					
ANR	9353786	AdditiveExpression	plane + 1		9353358	1		+			
ANR	9353787	Identifier	plane		9353358	0					
ANR	9353788	PrimaryExpression	1		9353358	1					
ANR	9353789	ElseStatement	else		9353358	0					
ANR	9353790	ExpressionStatement	"printf ( ""\\033r%c"" , ctable [ plane ] )"	566:1:11869:11901	9353358	0	True				
ANR	9353791	CallExpression	"printf ( ""\\033r%c"" , ctable [ plane ] )"		9353358	0					
ANR	9353792	Callee	printf		9353358	0					
ANR	9353793	Identifier	printf		9353358	0					
ANR	9353794	ArgumentList	"""\\033r%c"""		9353358	1					
ANR	9353795	Argument	"""\\033r%c"""		9353358	0					
ANR	9353796	PrimaryExpression	"""\\033r%c"""		9353358	0					
ANR	9353797	Argument	ctable [ plane ]		9353358	1					
ANR	9353798	ArrayIndexing	ctable [ plane ]		9353358	0					
ANR	9353799	Identifier	ctable		9353358	0					
ANR	9353800	Identifier	plane		9353358	1					
ANR	9353801	ExpressionStatement	length *= 8	573:4:11973:11984	9353358	1	True				
ANR	9353802	AssignmentExpression	length *= 8		9353358	0		*=			
ANR	9353803	Identifier	length		9353358	0					
ANR	9353804	PrimaryExpression	8		9353358	1					
ANR	9353805	ExpressionStatement	"printf ( ""\\033."" )"	574:4:11990:12005	9353358	2	True				
ANR	9353806	CallExpression	"printf ( ""\\033."" )"		9353358	0					
ANR	9353807	Callee	printf		9353358	0					
ANR	9353808	Identifier	printf		9353358	0					
ANR	9353809	ArgumentList	"""\\033."""		9353358	1					
ANR	9353810	Argument	"""\\033."""		9353358	0					
ANR	9353811	PrimaryExpression	"""\\033."""		9353358	0					
ANR	9353812	ExpressionStatement	putchar ( type )	575:4:12035:12048	9353358	3	True				
ANR	9353813	CallExpression	putchar ( type )		9353358	0					
ANR	9353814	Callee	putchar		9353358	0					
ANR	9353815	Identifier	putchar		9353358	0					
ANR	9353816	ArgumentList	type		9353358	1					
ANR	9353817	Argument	type		9353358	0					
ANR	9353818	Identifier	type		9353358	0					
ANR	9353819	ExpressionStatement	putchar ( ystep )	576:4:12054:12068	9353358	4	True				
ANR	9353820	CallExpression	putchar ( ystep )		9353358	0					
ANR	9353821	Callee	putchar		9353358	0					
ANR	9353822	Identifier	putchar		9353358	0					
ANR	9353823	ArgumentList	ystep		9353358	1					
ANR	9353824	Argument	ystep		9353358	0					
ANR	9353825	Identifier	ystep		9353358	0					
ANR	9353826	ExpressionStatement	putchar ( xstep )	577:4:12074:12088	9353358	5	True				
ANR	9353827	CallExpression	putchar ( xstep )		9353358	0					
ANR	9353828	Callee	putchar		9353358	0					
ANR	9353829	Identifier	putchar		9353358	0					
ANR	9353830	ArgumentList	xstep		9353358	1					
ANR	9353831	Argument	xstep		9353358	0					
ANR	9353832	Identifier	xstep		9353358	0					
ANR	9353833	ExpressionStatement	putchar ( 1 )	578:4:12094:12104	9353358	6	True				
ANR	9353834	CallExpression	putchar ( 1 )		9353358	0					
ANR	9353835	Callee	putchar		9353358	0					
ANR	9353836	Identifier	putchar		9353358	0					
ANR	9353837	ArgumentList	1		9353358	1					
ANR	9353838	Argument	1		9353358	0					
ANR	9353839	PrimaryExpression	1		9353358	0					
ANR	9353840	ExpressionStatement	putchar ( length )	579:4:12110:12125	9353358	7	True				
ANR	9353841	CallExpression	putchar ( length )		9353358	0					
ANR	9353842	Callee	putchar		9353358	0					
ANR	9353843	Identifier	putchar		9353358	0					
ANR	9353844	ArgumentList	length		9353358	1					
ANR	9353845	Argument	length		9353358	0					
ANR	9353846	Identifier	length		9353358	0					
ANR	9353847	ExpressionStatement	putchar ( length >> 8 )	580:4:12131:12151	9353358	8	True				
ANR	9353848	CallExpression	putchar ( length >> 8 )		9353358	0					
ANR	9353849	Callee	putchar		9353358	0					
ANR	9353850	Identifier	putchar		9353358	0					
ANR	9353851	ArgumentList	length >> 8		9353358	1					
ANR	9353852	Argument	length >> 8		9353358	0					
ANR	9353853	ShiftExpression	length >> 8		9353358	0		>>			
ANR	9353854	Identifier	length		9353358	0					
ANR	9353855	PrimaryExpression	8		9353358	1					
ANR	9353856	ElseStatement	else		9353358	0					
ANR	9353857	CompoundStatement		178:2:3311:3311	9353358	0					
ANR	9353858	ExpressionStatement	"printf ( ""\\033i"" )"	588:4:12221:12236	9353358	0	True				
ANR	9353859	CallExpression	"printf ( ""\\033i"" )"		9353358	0					
ANR	9353860	Callee	printf		9353358	0					
ANR	9353861	Identifier	printf		9353358	0					
ANR	9353862	ArgumentList	"""\\033i"""		9353358	1					
ANR	9353863	Argument	"""\\033i"""		9353358	0					
ANR	9353864	PrimaryExpression	"""\\033i"""		9353358	0					
ANR	9353865	ExpressionStatement	putchar ( ctable [ plane ] )	589:4:12242:12264	9353358	1	True				
ANR	9353866	CallExpression	putchar ( ctable [ plane ] )		9353358	0					
ANR	9353867	Callee	putchar		9353358	0					
ANR	9353868	Identifier	putchar		9353358	0					
ANR	9353869	ArgumentList	ctable [ plane ]		9353358	1					
ANR	9353870	Argument	ctable [ plane ]		9353358	0					
ANR	9353871	ArrayIndexing	ctable [ plane ]		9353358	0					
ANR	9353872	Identifier	ctable		9353358	0					
ANR	9353873	Identifier	plane		9353358	1					
ANR	9353874	ExpressionStatement	putchar ( type )	590:4:12270:12283	9353358	2	True				
ANR	9353875	CallExpression	putchar ( type )		9353358	0					
ANR	9353876	Callee	putchar		9353358	0					
ANR	9353877	Identifier	putchar		9353358	0					
ANR	9353878	ArgumentList	type		9353358	1					
ANR	9353879	Argument	type		9353358	0					
ANR	9353880	Identifier	type		9353358	0					
ANR	9353881	ExpressionStatement	putchar ( 1 )	591:4:12289:12299	9353358	3	True				
ANR	9353882	CallExpression	putchar ( 1 )		9353358	0					
ANR	9353883	Callee	putchar		9353358	0					
ANR	9353884	Identifier	putchar		9353358	0					
ANR	9353885	ArgumentList	1		9353358	1					
ANR	9353886	Argument	1		9353358	0					
ANR	9353887	PrimaryExpression	1		9353358	0					
ANR	9353888	ExpressionStatement	putchar ( length & 255 )	592:4:12305:12326	9353358	4	True				
ANR	9353889	CallExpression	putchar ( length & 255 )		9353358	0					
ANR	9353890	Callee	putchar		9353358	0					
ANR	9353891	Identifier	putchar		9353358	0					
ANR	9353892	ArgumentList	length & 255		9353358	1					
ANR	9353893	Argument	length & 255		9353358	0					
ANR	9353894	BitAndExpression	length & 255		9353358	0		&			
ANR	9353895	Identifier	length		9353358	0					
ANR	9353896	PrimaryExpression	255		9353358	1					
ANR	9353897	ExpressionStatement	putchar ( length >> 8 )	593:4:12332:12352	9353358	5	True				
ANR	9353898	CallExpression	putchar ( length >> 8 )		9353358	0					
ANR	9353899	Callee	putchar		9353358	0					
ANR	9353900	Identifier	putchar		9353358	0					
ANR	9353901	ArgumentList	length >> 8		9353358	1					
ANR	9353902	Argument	length >> 8		9353358	0					
ANR	9353903	ShiftExpression	length >> 8		9353358	0		>>			
ANR	9353904	Identifier	length		9353358	0					
ANR	9353905	PrimaryExpression	8		9353358	1					
ANR	9353906	ExpressionStatement	putchar ( 1 )	594:4:12358:12368	9353358	6	True				
ANR	9353907	CallExpression	putchar ( 1 )		9353358	0					
ANR	9353908	Callee	putchar		9353358	0					
ANR	9353909	Identifier	putchar		9353358	0					
ANR	9353910	ArgumentList	1		9353358	1					
ANR	9353911	Argument	1		9353358	0					
ANR	9353912	PrimaryExpression	1		9353358	0					
ANR	9353913	ExpressionStatement	putchar ( 0 )	595:4:12374:12384	9353358	7	True				
ANR	9353914	CallExpression	putchar ( 0 )		9353358	0					
ANR	9353915	Callee	putchar		9353358	0					
ANR	9353916	Identifier	putchar		9353358	0					
ANR	9353917	ArgumentList	0		9353358	1					
ANR	9353918	Argument	0		9353358	0					
ANR	9353919	PrimaryExpression	0		9353358	0					
ANR	9353920	ExpressionStatement	"pwrite ( line_ptr , line_end - line_ptr )"	598:2:12393:12430	9353358	11	True				
ANR	9353921	CallExpression	"pwrite ( line_ptr , line_end - line_ptr )"		9353358	0					
ANR	9353922	Callee	pwrite		9353358	0					
ANR	9353923	Identifier	pwrite		9353358	0					
ANR	9353924	ArgumentList	line_ptr		9353358	1					
ANR	9353925	Argument	line_ptr		9353358	0					
ANR	9353926	Identifier	line_ptr		9353358	0					
ANR	9353927	Argument	line_end - line_ptr		9353358	1					
ANR	9353928	AdditiveExpression	line_end - line_ptr		9353358	0		-			
ANR	9353929	Identifier	line_end		9353358	0					
ANR	9353930	Identifier	line_ptr		9353358	1					
ANR	9353931	ExpressionStatement	fflush ( stdout )	599:2:12434:12448	9353358	12	True				
ANR	9353932	CallExpression	fflush ( stdout )		9353358	0					
ANR	9353933	Callee	fflush		9353358	0					
ANR	9353934	Identifier	fflush		9353358	0					
ANR	9353935	ArgumentList	stdout		9353358	1					
ANR	9353936	Argument	stdout		9353358	0					
ANR	9353937	Identifier	stdout		9353358	0					
ANR	9353938	ReturnType	void		9353358	1					
ANR	9353939	Identifier	CompressData		9353358	2					
ANR	9353940	ParameterList	"const unsigned char * line , int length , int plane , int type , int xstep , int ystep"		9353358	3					
ANR	9353941	Parameter	const unsigned char * line	400:13:8505:8529	9353358	0	True				
ANR	9353942	ParameterType	const unsigned char *		9353358	0					
ANR	9353943	Identifier	line		9353358	1					
ANR	9353944	Parameter	int length	401:13:8572:8597	9353358	1	True				
ANR	9353945	ParameterType	int		9353358	0					
ANR	9353946	Identifier	length		9353358	1					
ANR	9353947	Parameter	int plane	402:6:8631:8655	9353358	2	True				
ANR	9353948	ParameterType	int		9353358	0					
ANR	9353949	Identifier	plane		9353358	1					
ANR	9353950	Parameter	int type	403:6:8686:8709	9353358	3	True				
ANR	9353951	ParameterType	int		9353358	0					
ANR	9353952	Identifier	type		9353358	1					
ANR	9353953	Parameter	int xstep	404:6:8748:8772	9353358	4	True				
ANR	9353954	ParameterType	int		9353358	0					
ANR	9353955	Identifier	xstep		9353358	1					
ANR	9353956	Parameter	int ystep	405:6:8804:8828	9353358	5	True				
ANR	9353957	ParameterType	int		9353358	0					
ANR	9353958	Identifier	ystep		9353358	1					
ANR	9353959	CFGEntryNode	ENTRY		9353358		True				
ANR	9353960	CFGExitNode	EXIT		9353358		True				
ANR	9353961	Symbol	plane		9353358						
ANR	9353962	Symbol	comp_ptr		9353358						
ANR	9353963	Symbol	* line_ptr		9353358						
ANR	9353964	Symbol	temp		9353358						
ANR	9353965	Symbol	stdout		9353358						
ANR	9353966	Symbol	* comp_ptr ++		9353358						
ANR	9353967	Symbol	line		9353358						
ANR	9353968	Symbol	length		9353358						
ANR	9353969	Symbol	start		9353358						
ANR	9353970	Symbol	count		9353358						
ANR	9353971	Symbol	EPSON_ICOLOR		9353358						
ANR	9353972	Symbol	ctable		9353358						
ANR	9353973	Symbol	type		9353358						
ANR	9353974	Symbol	* comp_ptr		9353358						
ANR	9353975	Symbol	line_end		9353358						
ANR	9353976	Symbol	CompBuffer		9353358						
ANR	9353977	Symbol	NumPlanes		9353358						
ANR	9353978	Symbol	xstep		9353358						
ANR	9353979	Symbol	* line_ptr ++		9353358						
ANR	9353980	Symbol	Model		9353358						
ANR	9353981	Symbol	* ctable		9353358						
ANR	9353982	Symbol	ystep		9353358						
ANR	9353983	Symbol	* plane		9353358						
ANR	9353984	Symbol	line_ptr		9353358						
ANR	9353985	Function	OutputLine	607:0:12509:15671							
ANR	9353986	FunctionDef	OutputLine (const cups_page_header2_t * header)		9353985	0					
ANR	9353987	CompoundStatement		610:0:12587:15671	9353985	0					
ANR	9353988	IfStatement	if ( header -> cupsRowCount )		9353985	0					
ANR	9353989	Condition	header -> cupsRowCount	611:6:12595:12614	9353985	0	True				
ANR	9353990	PtrMemberAccess	header -> cupsRowCount		9353985	0					
ANR	9353991	Identifier	header		9353985	0					
ANR	9353992	Identifier	cupsRowCount		9353985	1					
ANR	9353993	CompoundStatement		11:4:182:202	9353985	1					
ANR	9353994	IdentifierDeclStatement	int width ;	613:4:12625:12636	9353985	0	True				
ANR	9353995	IdentifierDecl	width		9353985	0					
ANR	9353996	IdentifierDeclType	int		9353985	0					
ANR	9353997	Identifier	width		9353985	1					
ANR	9353998	IdentifierDeclStatement	"unsigned char * tempptr , * evenptr , * oddptr ;"	614:4:12642:12689	9353985	1	True				
ANR	9353999	IdentifierDecl	* tempptr		9353985	0					
ANR	9354000	IdentifierDeclType	unsigned char *		9353985	0					
ANR	9354001	Identifier	tempptr		9353985	1					
ANR	9354002	IdentifierDecl	* evenptr		9353985	1					
ANR	9354003	IdentifierDeclType	unsigned char *		9353985	0					
ANR	9354004	Identifier	evenptr		9353985	1					
ANR	9354005	IdentifierDecl	* oddptr		9353985	2					
ANR	9354006	IdentifierDeclType	unsigned char *		9353985	0					
ANR	9354007	Identifier	oddptr		9353985	1					
ANR	9354008	Statement	register	617:4:12695:12702	9353985	2	True				
ANR	9354009	IdentifierDeclStatement	int x ;	617:13:12704:12709	9353985	3	True				
ANR	9354010	IdentifierDecl	x		9353985	0					
ANR	9354011	IdentifierDeclType	int		9353985	0					
ANR	9354012	Identifier	x		9353985	1					
ANR	9354013	IdentifierDeclStatement	unsigned char bit ;	618:4:12715:12732	9353985	4	True				
ANR	9354014	IdentifierDecl	bit		9353985	0					
ANR	9354015	IdentifierDeclType	unsigned char		9353985	0					
ANR	9354016	Identifier	bit		9353985	1					
ANR	9354017	IdentifierDeclStatement	const unsigned char * pixel ;	619:4:12738:12764	9353985	5	True				
ANR	9354018	IdentifierDecl	* pixel		9353985	0					
ANR	9354019	IdentifierDeclType	const unsigned char *		9353985	0					
ANR	9354020	Identifier	pixel		9353985	1					
ANR	9354021	IdentifierDeclStatement	unsigned char * temp ;	620:4:12770:12790	9353985	6	True				
ANR	9354022	IdentifierDecl	* temp		9353985	0					
ANR	9354023	IdentifierDeclType	unsigned char *		9353985	0					
ANR	9354024	Identifier	temp		9353985	1					
ANR	9354025	ForStatement	"for ( x = header -> cupsWidth , bit = 128 , pixel = Planes [ 0 ] , temp = CompBuffer ; x > 0 ; x -- , temp ++ )"		9353985	7					
ANR	9354026	ForInit	"x = header -> cupsWidth , bit = 128 , pixel = Planes [ 0 ] , temp = CompBuffer ;"	627:9:12892:12975	9353985	0	True				
ANR	9354027	Expression	"x = header -> cupsWidth , bit = 128 , pixel = Planes [ 0 ] , temp = CompBuffer"		9353985	0					
ANR	9354028	AssignmentExpression	x = header -> cupsWidth		9353985	0		=			
ANR	9354029	Identifier	x		9353985	0					
ANR	9354030	PtrMemberAccess	header -> cupsWidth		9353985	1					
ANR	9354031	Identifier	header		9353985	0					
ANR	9354032	Identifier	cupsWidth		9353985	1					
ANR	9354033	Expression	"bit = 128 , pixel = Planes [ 0 ] , temp = CompBuffer"		9353985	1					
ANR	9354034	AssignmentExpression	bit = 128		9353985	0		=			
ANR	9354035	Identifier	bit		9353985	0					
ANR	9354036	PrimaryExpression	128		9353985	1					
ANR	9354037	Expression	"pixel = Planes [ 0 ] , temp = CompBuffer"		9353985	1					
ANR	9354038	AssignmentExpression	pixel = Planes [ 0 ]		9353985	0		=			
ANR	9354039	Identifier	pixel		9353985	0					
ANR	9354040	ArrayIndexing	Planes [ 0 ]		9353985	1					
ANR	9354041	Identifier	Planes		9353985	0					
ANR	9354042	PrimaryExpression	0		9353985	1					
ANR	9354043	AssignmentExpression	temp = CompBuffer		9353985	1		=			
ANR	9354044	Identifier	temp		9353985	0					
ANR	9354045	Identifier	CompBuffer		9353985	1					
ANR	9354046	Condition	x > 0	629:2:12979:12983	9353985	1	True				
ANR	9354047	RelationalExpression	x > 0		9353985	0		>			
ANR	9354048	Identifier	x		9353985	0					
ANR	9354049	PrimaryExpression	0		9353985	1					
ANR	9354050	Expression	"x -- , temp ++"	630:2:12988:13000	9353985	2	True				
ANR	9354051	PostIncDecOperationExpression	x --		9353985	0					
ANR	9354052	Identifier	x		9353985	0					
ANR	9354053	IncDec	--		9353985	1					
ANR	9354054	PostIncDecOperationExpression	temp ++		9353985	1					
ANR	9354055	Identifier	temp		9353985	0					
ANR	9354056	IncDec	++		9353985	1					
ANR	9354057	CompoundStatement		22:4:419:419	9353985	3					
ANR	9354058	IfStatement	if ( * pixel & bit )		9353985	0					
ANR	9354059	Condition	* pixel & bit	632:10:13019:13030	9353985	0	True				
ANR	9354060	BitAndExpression	* pixel & bit		9353985	0		&			
ANR	9354061	UnaryOperationExpression	* pixel		9353985	0					
ANR	9354062	UnaryOperator	*		9353985	0					
ANR	9354063	Identifier	pixel		9353985	1					
ANR	9354064	Identifier	bit		9353985	1					
ANR	9354065	ExpressionStatement	* temp |= DotBit	633:8:13041:13056	9353985	1	True				
ANR	9354066	AssignmentExpression	* temp |= DotBit		9353985	0		|=			
ANR	9354067	UnaryOperationExpression	* temp		9353985	0					
ANR	9354068	UnaryOperator	*		9353985	0					
ANR	9354069	Identifier	temp		9353985	1					
ANR	9354070	Identifier	DotBit		9353985	1					
ANR	9354071	IfStatement	if ( bit > 1 )		9353985	1					
ANR	9354072	Condition	bit > 1	635:10:13069:13075	9353985	0	True				
ANR	9354073	RelationalExpression	bit > 1		9353985	0		>			
ANR	9354074	Identifier	bit		9353985	0					
ANR	9354075	PrimaryExpression	1		9353985	1					
ANR	9354076	ExpressionStatement	bit >>= 1	636:1:13079:13088	9353985	1	True				
ANR	9354077	AssignmentExpression	bit >>= 1		9353985	0		>>=			
ANR	9354078	Identifier	bit		9353985	0					
ANR	9354079	PrimaryExpression	1		9353985	1					
ANR	9354080	ElseStatement	else		9353985	0					
ANR	9354081	CompoundStatement		29:6:519:519	9353985	0					
ANR	9354082	ExpressionStatement	bit = 128	639:1:13110:13119	9353985	0	True				
ANR	9354083	AssignmentExpression	bit = 128		9353985	0		=			
ANR	9354084	Identifier	bit		9353985	0					
ANR	9354085	PrimaryExpression	128		9353985	1					
ANR	9354086	ExpressionStatement	pixel ++	640:1:13122:13130	9353985	1	True				
ANR	9354087	PostIncDecOperationExpression	pixel ++		9353985	0					
ANR	9354088	Identifier	pixel		9353985	0					
ANR	9354089	IncDec	++		9353985	1					
ANR	9354090	IfStatement	if ( DotBit > 1 )		9353985	8					
ANR	9354091	Condition	DotBit > 1	644:8:13155:13164	9353985	0	True				
ANR	9354092	RelationalExpression	DotBit > 1		9353985	0		>			
ANR	9354093	Identifier	DotBit		9353985	0					
ANR	9354094	PrimaryExpression	1		9353985	1					
ANR	9354095	ExpressionStatement	DotBit >>= 1	645:6:13173:13185	9353985	1	True				
ANR	9354096	AssignmentExpression	DotBit >>= 1		9353985	0		>>=			
ANR	9354097	Identifier	DotBit		9353985	0					
ANR	9354098	PrimaryExpression	1		9353985	1					
ANR	9354099	ElseStatement	else		9353985	0					
ANR	9354100	CompoundStatement		38:4:612:612	9353985	0					
ANR	9354101	IfStatement	if ( Shingling && LineCount != 0 )		9353985	0					
ANR	9354102	Condition	Shingling && LineCount != 0	652:10:13310:13336	9353985	0	True				
ANR	9354103	AndExpression	Shingling && LineCount != 0		9353985	0		&&			
ANR	9354104	Identifier	Shingling		9353985	0					
ANR	9354105	EqualityExpression	LineCount != 0		9353985	1		!=			
ANR	9354106	Identifier	LineCount		9353985	0					
ANR	9354107	PrimaryExpression	0		9353985	1					
ANR	9354108	CompoundStatement		44:6:757:757	9353985	1					
ANR	9354109	IfStatement	if ( LineCount & 1 )		9353985	0					
ANR	9354110	Condition	LineCount & 1	658:12:13413:13425	9353985	0	True				
ANR	9354111	BitAndExpression	LineCount & 1		9353985	0		&			
ANR	9354112	Identifier	LineCount		9353985	0					
ANR	9354113	PrimaryExpression	1		9353985	1					
ANR	9354114	CompoundStatement		50:8:848:848	9353985	1					
ANR	9354115	ExpressionStatement	evenptr = LineBuffers [ 1 ] + OddOffset	660:10:13448:13484	9353985	0	True				
ANR	9354116	AssignmentExpression	evenptr = LineBuffers [ 1 ] + OddOffset		9353985	0		=			
ANR	9354117	Identifier	evenptr		9353985	0					
ANR	9354118	AdditiveExpression	LineBuffers [ 1 ] + OddOffset		9353985	1		+			
ANR	9354119	ArrayIndexing	LineBuffers [ 1 ]		9353985	0					
ANR	9354120	Identifier	LineBuffers		9353985	0					
ANR	9354121	PrimaryExpression	1		9353985	1					
ANR	9354122	Identifier	OddOffset		9353985	1					
ANR	9354123	ExpressionStatement	oddptr = LineBuffers [ 0 ] + EvenOffset + DotBytes	661:10:13496:13544	9353985	1	True				
ANR	9354124	AssignmentExpression	oddptr = LineBuffers [ 0 ] + EvenOffset + DotBytes		9353985	0		=			
ANR	9354125	Identifier	oddptr		9353985	0					
ANR	9354126	AdditiveExpression	LineBuffers [ 0 ] + EvenOffset + DotBytes		9353985	1		+			
ANR	9354127	ArrayIndexing	LineBuffers [ 0 ]		9353985	0					
ANR	9354128	Identifier	LineBuffers		9353985	0					
ANR	9354129	PrimaryExpression	0		9353985	1					
ANR	9354130	AdditiveExpression	EvenOffset + DotBytes		9353985	1		+			
ANR	9354131	Identifier	EvenOffset		9353985	0					
ANR	9354132	Identifier	DotBytes		9353985	1					
ANR	9354133	ElseStatement	else		9353985	0					
ANR	9354134	CompoundStatement		55:8:989:989	9353985	0					
ANR	9354135	ExpressionStatement	evenptr = LineBuffers [ 0 ] + EvenOffset	665:10:13589:13626	9353985	0	True				
ANR	9354136	AssignmentExpression	evenptr = LineBuffers [ 0 ] + EvenOffset		9353985	0		=			
ANR	9354137	Identifier	evenptr		9353985	0					
ANR	9354138	AdditiveExpression	LineBuffers [ 0 ] + EvenOffset		9353985	1		+			
ANR	9354139	ArrayIndexing	LineBuffers [ 0 ]		9353985	0					
ANR	9354140	Identifier	LineBuffers		9353985	0					
ANR	9354141	PrimaryExpression	0		9353985	1					
ANR	9354142	Identifier	EvenOffset		9353985	1					
ANR	9354143	ExpressionStatement	oddptr = LineBuffers [ 1 ] + OddOffset + DotBytes	666:10:13638:13685	9353985	1	True				
ANR	9354144	AssignmentExpression	oddptr = LineBuffers [ 1 ] + OddOffset + DotBytes		9353985	0		=			
ANR	9354145	Identifier	oddptr		9353985	0					
ANR	9354146	AdditiveExpression	LineBuffers [ 1 ] + OddOffset + DotBytes		9353985	1		+			
ANR	9354147	ArrayIndexing	LineBuffers [ 1 ]		9353985	0					
ANR	9354148	Identifier	LineBuffers		9353985	0					
ANR	9354149	PrimaryExpression	1		9353985	1					
ANR	9354150	AdditiveExpression	OddOffset + DotBytes		9353985	1		+			
ANR	9354151	Identifier	OddOffset		9353985	0					
ANR	9354152	Identifier	DotBytes		9353985	1					
ANR	9354153	ForStatement	"for ( width = header -> cupsWidth , tempptr = CompBuffer ; width > 0 ; width -= 2 , tempptr += 2 , oddptr += DotBytes * 2 , evenptr += DotBytes * 2 )"		9353985	1					
ANR	9354154	ForInit	"width = header -> cupsWidth , tempptr = CompBuffer ;"	669:13:13711:13758	9353985	0	True				
ANR	9354155	Expression	"width = header -> cupsWidth , tempptr = CompBuffer"		9353985	0					
ANR	9354156	AssignmentExpression	width = header -> cupsWidth		9353985	0		=			
ANR	9354157	Identifier	width		9353985	0					
ANR	9354158	PtrMemberAccess	header -> cupsWidth		9353985	1					
ANR	9354159	Identifier	header		9353985	0					
ANR	9354160	Identifier	cupsWidth		9353985	1					
ANR	9354161	AssignmentExpression	tempptr = CompBuffer		9353985	1		=			
ANR	9354162	Identifier	tempptr		9353985	0					
ANR	9354163	Identifier	CompBuffer		9353985	1					
ANR	9354164	Condition	width > 0	670:13:13773:13781	9353985	1	True				
ANR	9354165	RelationalExpression	width > 0		9353985	0		>			
ANR	9354166	Identifier	width		9353985	0					
ANR	9354167	PrimaryExpression	0		9353985	1					
ANR	9354168	Expression	"width -= 2 , tempptr += 2 , oddptr += DotBytes * 2 , evenptr += DotBytes * 2"	671:13:13797:13879	9353985	2	True				
ANR	9354169	AssignmentExpression	width -= 2		9353985	0		-=			
ANR	9354170	Identifier	width		9353985	0					
ANR	9354171	PrimaryExpression	2		9353985	1					
ANR	9354172	Expression	"tempptr += 2 , oddptr += DotBytes * 2 , evenptr += DotBytes * 2"		9353985	1					
ANR	9354173	AssignmentExpression	tempptr += 2		9353985	0		+=			
ANR	9354174	Identifier	tempptr		9353985	0					
ANR	9354175	PrimaryExpression	2		9353985	1					
ANR	9354176	Expression	"oddptr += DotBytes * 2 , evenptr += DotBytes * 2"		9353985	1					
ANR	9354177	AssignmentExpression	oddptr += DotBytes * 2		9353985	0		+=			
ANR	9354178	Identifier	oddptr		9353985	0					
ANR	9354179	MultiplicativeExpression	DotBytes * 2		9353985	1		*			
ANR	9354180	Identifier	DotBytes		9353985	0					
ANR	9354181	PrimaryExpression	2		9353985	1					
ANR	9354182	AssignmentExpression	evenptr += DotBytes * 2		9353985	1		+=			
ANR	9354183	Identifier	evenptr		9353985	0					
ANR	9354184	MultiplicativeExpression	DotBytes * 2		9353985	1		*			
ANR	9354185	Identifier	DotBytes		9353985	0					
ANR	9354186	PrimaryExpression	2		9353985	1					
ANR	9354187	CompoundStatement		64:8:1302:1302	9353985	3					
ANR	9354188	ExpressionStatement	evenptr [ 0 ] = tempptr [ 0 ]	674:10:13902:13925	9353985	0	True				
ANR	9354189	AssignmentExpression	evenptr [ 0 ] = tempptr [ 0 ]		9353985	0		=			
ANR	9354190	ArrayIndexing	evenptr [ 0 ]		9353985	0					
ANR	9354191	Identifier	evenptr		9353985	0					
ANR	9354192	PrimaryExpression	0		9353985	1					
ANR	9354193	ArrayIndexing	tempptr [ 0 ]		9353985	1					
ANR	9354194	Identifier	tempptr		9353985	0					
ANR	9354195	PrimaryExpression	0		9353985	1					
ANR	9354196	ExpressionStatement	oddptr [ 0 ] = tempptr [ 1 ]	675:10:13937:13960	9353985	1	True				
ANR	9354197	AssignmentExpression	oddptr [ 0 ] = tempptr [ 1 ]		9353985	0		=			
ANR	9354198	ArrayIndexing	oddptr [ 0 ]		9353985	0					
ANR	9354199	Identifier	oddptr		9353985	0					
ANR	9354200	PrimaryExpression	0		9353985	1					
ANR	9354201	ArrayIndexing	tempptr [ 1 ]		9353985	1					
ANR	9354202	Identifier	tempptr		9353985	0					
ANR	9354203	PrimaryExpression	1		9353985	1					
ANR	9354204	ElseStatement	else		9353985	0					
ANR	9354205	CompoundStatement		70:6:1409:1409	9353985	0					
ANR	9354206	ForStatement	"for ( width = header -> cupsWidth , tempptr = CompBuffer , evenptr = LineBuffers [ 0 ] + EvenOffset ; width > 0 ; width -- , tempptr ++ , evenptr += DotBytes )"		9353985	0					
ANR	9354207	ForInit	"width = header -> cupsWidth , tempptr = CompBuffer , evenptr = LineBuffers [ 0 ] + EvenOffset ;"	684:13:14072:14175	9353985	0	True				
ANR	9354208	Expression	"width = header -> cupsWidth , tempptr = CompBuffer , evenptr = LineBuffers [ 0 ] + EvenOffset"		9353985	0					
ANR	9354209	AssignmentExpression	width = header -> cupsWidth		9353985	0		=			
ANR	9354210	Identifier	width		9353985	0					
ANR	9354211	PtrMemberAccess	header -> cupsWidth		9353985	1					
ANR	9354212	Identifier	header		9353985	0					
ANR	9354213	Identifier	cupsWidth		9353985	1					
ANR	9354214	Expression	"tempptr = CompBuffer , evenptr = LineBuffers [ 0 ] + EvenOffset"		9353985	1					
ANR	9354215	AssignmentExpression	tempptr = CompBuffer		9353985	0		=			
ANR	9354216	Identifier	tempptr		9353985	0					
ANR	9354217	Identifier	CompBuffer		9353985	1					
ANR	9354218	AssignmentExpression	evenptr = LineBuffers [ 0 ] + EvenOffset		9353985	1		=			
ANR	9354219	Identifier	evenptr		9353985	0					
ANR	9354220	AdditiveExpression	LineBuffers [ 0 ] + EvenOffset		9353985	1		+			
ANR	9354221	ArrayIndexing	LineBuffers [ 0 ]		9353985	0					
ANR	9354222	Identifier	LineBuffers		9353985	0					
ANR	9354223	PrimaryExpression	0		9353985	1					
ANR	9354224	Identifier	EvenOffset		9353985	1					
ANR	9354225	Condition	width > 0	686:13:14190:14198	9353985	1	True				
ANR	9354226	RelationalExpression	width > 0		9353985	0		>			
ANR	9354227	Identifier	width		9353985	0					
ANR	9354228	PrimaryExpression	0		9353985	1					
ANR	9354229	Expression	"width -- , tempptr ++ , evenptr += DotBytes"	687:13:14214:14254	9353985	2	True				
ANR	9354230	PostIncDecOperationExpression	width --		9353985	0					
ANR	9354231	Identifier	width		9353985	0					
ANR	9354232	IncDec	--		9353985	1					
ANR	9354233	Expression	"tempptr ++ , evenptr += DotBytes"		9353985	1					
ANR	9354234	PostIncDecOperationExpression	tempptr ++		9353985	0					
ANR	9354235	Identifier	tempptr		9353985	0					
ANR	9354236	IncDec	++		9353985	1					
ANR	9354237	AssignmentExpression	evenptr += DotBytes		9353985	1		+=			
ANR	9354238	Identifier	evenptr		9353985	0					
ANR	9354239	Identifier	DotBytes		9353985	1					
ANR	9354240	ExpressionStatement	* evenptr = tempptr [ 0 ]	688:10:14267:14288	9353985	3	True				
ANR	9354241	AssignmentExpression	* evenptr = tempptr [ 0 ]		9353985	0		=			
ANR	9354242	UnaryOperationExpression	* evenptr		9353985	0					
ANR	9354243	UnaryOperator	*		9353985	0					
ANR	9354244	Identifier	evenptr		9353985	1					
ANR	9354245	ArrayIndexing	tempptr [ 0 ]		9353985	1					
ANR	9354246	Identifier	tempptr		9353985	0					
ANR	9354247	PrimaryExpression	0		9353985	1					
ANR	9354248	IfStatement	if ( Shingling && LineCount != 0 )		9353985	1					
ANR	9354249	Condition	Shingling && LineCount != 0	691:10:14309:14335	9353985	0	True				
ANR	9354250	AndExpression	Shingling && LineCount != 0		9353985	0		&&			
ANR	9354251	Identifier	Shingling		9353985	0					
ANR	9354252	EqualityExpression	LineCount != 0		9353985	1		!=			
ANR	9354253	Identifier	LineCount		9353985	0					
ANR	9354254	PrimaryExpression	0		9353985	1					
ANR	9354255	CompoundStatement		83:6:1756:1756	9353985	1					
ANR	9354256	ExpressionStatement	EvenOffset ++	693:1:14347:14360	9353985	0	True				
ANR	9354257	PostIncDecOperationExpression	EvenOffset ++		9353985	0					
ANR	9354258	Identifier	EvenOffset		9353985	0					
ANR	9354259	IncDec	++		9353985	1					
ANR	9354260	ExpressionStatement	OddOffset ++	694:1:14363:14375	9353985	1	True				
ANR	9354261	PostIncDecOperationExpression	OddOffset ++		9353985	0					
ANR	9354262	Identifier	OddOffset		9353985	0					
ANR	9354263	IncDec	++		9353985	1					
ANR	9354264	IfStatement	if ( EvenOffset == DotBytes )		9353985	2					
ANR	9354265	Condition	EvenOffset == DotBytes	696:5:14383:14404	9353985	0	True				
ANR	9354266	EqualityExpression	EvenOffset == DotBytes		9353985	0		==			
ANR	9354267	Identifier	EvenOffset		9353985	0					
ANR	9354268	Identifier	DotBytes		9353985	1					
ANR	9354269	CompoundStatement		88:1:1820:1820	9353985	1					
ANR	9354270	ExpressionStatement	EvenOffset = 0	698:3:14413:14427	9353985	0	True				
ANR	9354271	AssignmentExpression	EvenOffset = 0		9353985	0		=			
ANR	9354272	Identifier	EvenOffset		9353985	0					
ANR	9354273	PrimaryExpression	0		9353985	1					
ANR	9354274	ExpressionStatement	"OutputRows ( header , 0 )"	699:3:14432:14453	9353985	1	True				
ANR	9354275	CallExpression	"OutputRows ( header , 0 )"		9353985	0					
ANR	9354276	Callee	OutputRows		9353985	0					
ANR	9354277	Identifier	OutputRows		9353985	0					
ANR	9354278	ArgumentList	header		9353985	1					
ANR	9354279	Argument	header		9353985	0					
ANR	9354280	Identifier	header		9353985	0					
ANR	9354281	Argument	0		9353985	1					
ANR	9354282	PrimaryExpression	0		9353985	0					
ANR	9354283	IfStatement	if ( OddOffset == DotBytes )		9353985	3					
ANR	9354284	Condition	OddOffset == DotBytes	702:5:14464:14484	9353985	0	True				
ANR	9354285	EqualityExpression	OddOffset == DotBytes		9353985	0		==			
ANR	9354286	Identifier	OddOffset		9353985	0					
ANR	9354287	Identifier	DotBytes		9353985	1					
ANR	9354288	CompoundStatement		94:1:1900:1900	9353985	1					
ANR	9354289	ExpressionStatement	OddOffset = 0	704:10:14500:14513	9353985	0	True				
ANR	9354290	AssignmentExpression	OddOffset = 0		9353985	0		=			
ANR	9354291	Identifier	OddOffset		9353985	0					
ANR	9354292	PrimaryExpression	0		9353985	1					
ANR	9354293	ExpressionStatement	"OutputRows ( header , 1 )"	705:3:14518:14539	9353985	1	True				
ANR	9354294	CallExpression	"OutputRows ( header , 1 )"		9353985	0					
ANR	9354295	Callee	OutputRows		9353985	0					
ANR	9354296	Identifier	OutputRows		9353985	0					
ANR	9354297	ArgumentList	header		9353985	1					
ANR	9354298	Argument	header		9353985	0					
ANR	9354299	Identifier	header		9353985	0					
ANR	9354300	Argument	1		9353985	1					
ANR	9354301	PrimaryExpression	1		9353985	0					
ANR	9354302	ElseStatement	else		9353985	0					
ANR	9354303	CompoundStatement		100:6:1981:1981	9353985	0					
ANR	9354304	ExpressionStatement	EvenOffset ++	710:1:14572:14585	9353985	0	True				
ANR	9354305	PostIncDecOperationExpression	EvenOffset ++		9353985	0					
ANR	9354306	Identifier	EvenOffset		9353985	0					
ANR	9354307	IncDec	++		9353985	1					
ANR	9354308	IfStatement	if ( EvenOffset == DotBytes )		9353985	1					
ANR	9354309	Condition	EvenOffset == DotBytes	712:5:14593:14614	9353985	0	True				
ANR	9354310	EqualityExpression	EvenOffset == DotBytes		9353985	0		==			
ANR	9354311	Identifier	EvenOffset		9353985	0					
ANR	9354312	Identifier	DotBytes		9353985	1					
ANR	9354313	CompoundStatement		104:1:2030:2030	9353985	1					
ANR	9354314	ExpressionStatement	EvenOffset = 0	714:10:14630:14644	9353985	0	True				
ANR	9354315	AssignmentExpression	EvenOffset = 0		9353985	0		=			
ANR	9354316	Identifier	EvenOffset		9353985	0					
ANR	9354317	PrimaryExpression	0		9353985	1					
ANR	9354318	ExpressionStatement	"OutputRows ( header , 0 )"	715:3:14649:14670	9353985	1	True				
ANR	9354319	CallExpression	"OutputRows ( header , 0 )"		9353985	0					
ANR	9354320	Callee	OutputRows		9353985	0					
ANR	9354321	Identifier	OutputRows		9353985	0					
ANR	9354322	ArgumentList	header		9353985	1					
ANR	9354323	Argument	header		9353985	0					
ANR	9354324	Identifier	header		9353985	0					
ANR	9354325	Argument	0		9353985	1					
ANR	9354326	PrimaryExpression	0		9353985	0					
ANR	9354327	ExpressionStatement	DotBit = 128	719:6:14690:14702	9353985	2	True				
ANR	9354328	AssignmentExpression	DotBit = 128		9353985	0		=			
ANR	9354329	Identifier	DotBit		9353985	0					
ANR	9354330	PrimaryExpression	128		9353985	1					
ANR	9354331	ExpressionStatement	LineCount ++	720:6:14710:14722	9353985	3	True				
ANR	9354332	PostIncDecOperationExpression	LineCount ++		9353985	0					
ANR	9354333	Identifier	LineCount		9353985	0					
ANR	9354334	IncDec	++		9353985	1					
ANR	9354335	ExpressionStatement	"memset ( CompBuffer , 0 , header -> cupsWidth )"	722:6:14731:14771	9353985	4	True				
ANR	9354336	CallExpression	"memset ( CompBuffer , 0 , header -> cupsWidth )"		9353985	0					
ANR	9354337	Callee	memset		9353985	0					
ANR	9354338	Identifier	memset		9353985	0					
ANR	9354339	ArgumentList	CompBuffer		9353985	1					
ANR	9354340	Argument	CompBuffer		9353985	0					
ANR	9354341	Identifier	CompBuffer		9353985	0					
ANR	9354342	Argument	0		9353985	1					
ANR	9354343	PrimaryExpression	0		9353985	0					
ANR	9354344	Argument	header -> cupsWidth		9353985	2					
ANR	9354345	PtrMemberAccess	header -> cupsWidth		9353985	0					
ANR	9354346	Identifier	header		9353985	0					
ANR	9354347	Identifier	cupsWidth		9353985	1					
ANR	9354348	ElseStatement	else		9353985	0					
ANR	9354349	CompoundStatement		120:4:2284:2300	9353985	0					
ANR	9354350	IdentifierDeclStatement	int plane ;	727:4:14798:14807	9353985	0	True				
ANR	9354351	IdentifierDecl	plane		9353985	0					
ANR	9354352	IdentifierDeclType	int		9353985	0					
ANR	9354353	Identifier	plane		9353985	1					
ANR	9354354	IdentifierDeclStatement	int bytes ;	728:4:14834:14843	9353985	1	True				
ANR	9354355	IdentifierDecl	bytes		9353985	0					
ANR	9354356	IdentifierDeclType	int		9353985	0					
ANR	9354357	Identifier	bytes		9353985	1					
ANR	9354358	IdentifierDeclStatement	"int xstep , ystep ;"	729:4:14872:14888	9353985	2	True				
ANR	9354359	IdentifierDecl	xstep		9353985	0					
ANR	9354360	IdentifierDeclType	int		9353985	0					
ANR	9354361	Identifier	xstep		9353985	1					
ANR	9354362	IdentifierDecl	ystep		9353985	1					
ANR	9354363	IdentifierDeclType	int		9353985	0					
ANR	9354364	Identifier	ystep		9353985	1					
ANR	9354365	ExpressionStatement	xstep = 3600 / header -> HWResolution [ 0 ]	736:4:14988:15026	9353985	3	True				
ANR	9354366	AssignmentExpression	xstep = 3600 / header -> HWResolution [ 0 ]		9353985	0		=			
ANR	9354367	Identifier	xstep		9353985	0					
ANR	9354368	MultiplicativeExpression	3600 / header -> HWResolution [ 0 ]		9353985	1		/			
ANR	9354369	PrimaryExpression	3600		9353985	0					
ANR	9354370	ArrayIndexing	header -> HWResolution [ 0 ]		9353985	1					
ANR	9354371	PtrMemberAccess	header -> HWResolution		9353985	0					
ANR	9354372	Identifier	header		9353985	0					
ANR	9354373	Identifier	HWResolution		9353985	1					
ANR	9354374	PrimaryExpression	0		9353985	1					
ANR	9354375	ExpressionStatement	ystep = 3600 / header -> HWResolution [ 1 ]	737:4:15032:15070	9353985	4	True				
ANR	9354376	AssignmentExpression	ystep = 3600 / header -> HWResolution [ 1 ]		9353985	0		=			
ANR	9354377	Identifier	ystep		9353985	0					
ANR	9354378	MultiplicativeExpression	3600 / header -> HWResolution [ 1 ]		9353985	1		/			
ANR	9354379	PrimaryExpression	3600		9353985	0					
ANR	9354380	ArrayIndexing	header -> HWResolution [ 1 ]		9353985	1					
ANR	9354381	PtrMemberAccess	header -> HWResolution		9353985	0					
ANR	9354382	Identifier	header		9353985	0					
ANR	9354383	Identifier	HWResolution		9353985	1					
ANR	9354384	PrimaryExpression	1		9353985	1					
ANR	9354385	ExpressionStatement	bytes = header -> cupsBytesPerLine / NumPlanes	738:4:15076:15120	9353985	5	True				
ANR	9354386	AssignmentExpression	bytes = header -> cupsBytesPerLine / NumPlanes		9353985	0		=			
ANR	9354387	Identifier	bytes		9353985	0					
ANR	9354388	MultiplicativeExpression	header -> cupsBytesPerLine / NumPlanes		9353985	1		/			
ANR	9354389	PtrMemberAccess	header -> cupsBytesPerLine		9353985	0					
ANR	9354390	Identifier	header		9353985	0					
ANR	9354391	Identifier	cupsBytesPerLine		9353985	1					
ANR	9354392	Identifier	NumPlanes		9353985	1					
ANR	9354393	ForStatement	for ( plane = 0 ; plane < NumPlanes ; plane ++ )		9353985	6					
ANR	9354394	ForInit	plane = 0 ;	740:9:15132:15141	9353985	0	True				
ANR	9354395	AssignmentExpression	plane = 0		9353985	0		=			
ANR	9354396	Identifier	plane		9353985	0					
ANR	9354397	PrimaryExpression	0		9353985	1					
ANR	9354398	Condition	plane < NumPlanes	740:20:15143:15159	9353985	1	True				
ANR	9354399	RelationalExpression	plane < NumPlanes		9353985	0		<			
ANR	9354400	Identifier	plane		9353985	0					
ANR	9354401	Identifier	NumPlanes		9353985	1					
ANR	9354402	PostIncDecOperationExpression	plane ++	740:39:15162:15169	9353985	2	True				
ANR	9354403	Identifier	plane		9353985	0					
ANR	9354404	IncDec	++		9353985	1					
ANR	9354405	CompoundStatement		132:4:2588:2588	9353985	3					
ANR	9354406	IfStatement	"if ( ! Planes [ plane ] [ 0 ] && memcmp ( Planes [ plane ] , Planes [ plane ] + 1 , bytes - 1 ) == 0 )"		9353985	0					
ANR	9354407	Condition	"! Planes [ plane ] [ 0 ] && memcmp ( Planes [ plane ] , Planes [ plane ] + 1 , bytes - 1 ) == 0"	746:10:15233:15319	9353985	0	True				
ANR	9354408	AndExpression	"! Planes [ plane ] [ 0 ] && memcmp ( Planes [ plane ] , Planes [ plane ] + 1 , bytes - 1 ) == 0"		9353985	0		&&			
ANR	9354409	UnaryOperationExpression	! Planes [ plane ] [ 0 ]		9353985	0					
ANR	9354410	UnaryOperator	!		9353985	0					
ANR	9354411	ArrayIndexing	Planes [ plane ] [ 0 ]		9353985	1					
ANR	9354412	ArrayIndexing	Planes [ plane ]		9353985	0					
ANR	9354413	Identifier	Planes		9353985	0					
ANR	9354414	Identifier	plane		9353985	1					
ANR	9354415	PrimaryExpression	0		9353985	1					
ANR	9354416	EqualityExpression	"memcmp ( Planes [ plane ] , Planes [ plane ] + 1 , bytes - 1 ) == 0"		9353985	1		==			
ANR	9354417	CallExpression	"memcmp ( Planes [ plane ] , Planes [ plane ] + 1 , bytes - 1 )"		9353985	0					
ANR	9354418	Callee	memcmp		9353985	0					
ANR	9354419	Identifier	memcmp		9353985	0					
ANR	9354420	ArgumentList	Planes [ plane ]		9353985	1					
ANR	9354421	Argument	Planes [ plane ]		9353985	0					
ANR	9354422	ArrayIndexing	Planes [ plane ]		9353985	0					
ANR	9354423	Identifier	Planes		9353985	0					
ANR	9354424	Identifier	plane		9353985	1					
ANR	9354425	Argument	Planes [ plane ] + 1		9353985	1					
ANR	9354426	AdditiveExpression	Planes [ plane ] + 1		9353985	0		+			
ANR	9354427	ArrayIndexing	Planes [ plane ]		9353985	0					
ANR	9354428	Identifier	Planes		9353985	0					
ANR	9354429	Identifier	plane		9353985	1					
ANR	9354430	PrimaryExpression	1		9353985	1					
ANR	9354431	Argument	bytes - 1		9353985	2					
ANR	9354432	AdditiveExpression	bytes - 1		9353985	0		-			
ANR	9354433	Identifier	bytes		9353985	0					
ANR	9354434	PrimaryExpression	1		9353985	1					
ANR	9354435	PrimaryExpression	0		9353985	1					
ANR	9354436	ContinueStatement	continue ;	748:1:15323:15331	9353985	1	True				
ANR	9354437	IfStatement	if ( Feed > 0 )		9353985	1					
ANR	9354438	Condition	Feed > 0	754:10:15401:15408	9353985	0	True				
ANR	9354439	RelationalExpression	Feed > 0		9353985	0		>			
ANR	9354440	Identifier	Feed		9353985	0					
ANR	9354441	PrimaryExpression	0		9353985	1					
ANR	9354442	CompoundStatement		146:6:2829:2829	9353985	1					
ANR	9354443	ExpressionStatement	"pwrite ( ""\\033(v\\002\\000"" , 5 )"	756:1:15420:15447	9353985	0	True				
ANR	9354444	CallExpression	"pwrite ( ""\\033(v\\002\\000"" , 5 )"		9353985	0					
ANR	9354445	Callee	pwrite		9353985	0					
ANR	9354446	Identifier	pwrite		9353985	0					
ANR	9354447	ArgumentList	"""\\033(v\\002\\000"""		9353985	1					
ANR	9354448	Argument	"""\\033(v\\002\\000"""		9353985	0					
ANR	9354449	PrimaryExpression	"""\\033(v\\002\\000"""		9353985	0					
ANR	9354450	Argument	5		9353985	1					
ANR	9354451	PrimaryExpression	5		9353985	0					
ANR	9354452	ExpressionStatement	putchar ( Feed )	757:1:15483:15496	9353985	1	True				
ANR	9354453	CallExpression	putchar ( Feed )		9353985	0					
ANR	9354454	Callee	putchar		9353985	0					
ANR	9354455	Identifier	putchar		9353985	0					
ANR	9354456	ArgumentList	Feed		9353985	1					
ANR	9354457	Argument	Feed		9353985	0					
ANR	9354458	Identifier	Feed		9353985	0					
ANR	9354459	ExpressionStatement	putchar ( Feed >> 8 )	758:1:15499:15517	9353985	2	True				
ANR	9354460	CallExpression	putchar ( Feed >> 8 )		9353985	0					
ANR	9354461	Callee	putchar		9353985	0					
ANR	9354462	Identifier	putchar		9353985	0					
ANR	9354463	ArgumentList	Feed >> 8		9353985	1					
ANR	9354464	Argument	Feed >> 8		9353985	0					
ANR	9354465	ShiftExpression	Feed >> 8		9353985	0		>>			
ANR	9354466	Identifier	Feed		9353985	0					
ANR	9354467	PrimaryExpression	8		9353985	1					
ANR	9354468	ExpressionStatement	Feed = 0	760:1:15521:15529	9353985	3	True				
ANR	9354469	AssignmentExpression	Feed = 0		9353985	0		=			
ANR	9354470	Identifier	Feed		9353985	0					
ANR	9354471	PrimaryExpression	0		9353985	1					
ANR	9354472	ExpressionStatement	"CompressData ( Planes [ plane ] , bytes , plane , header -> cupsCompression , xstep , ystep )"	763:6:15546:15645	9353985	2	True				
ANR	9354473	CallExpression	"CompressData ( Planes [ plane ] , bytes , plane , header -> cupsCompression , xstep , ystep )"		9353985	0					
ANR	9354474	Callee	CompressData		9353985	0					
ANR	9354475	Identifier	CompressData		9353985	0					
ANR	9354476	ArgumentList	Planes [ plane ]		9353985	1					
ANR	9354477	Argument	Planes [ plane ]		9353985	0					
ANR	9354478	ArrayIndexing	Planes [ plane ]		9353985	0					
ANR	9354479	Identifier	Planes		9353985	0					
ANR	9354480	Identifier	plane		9353985	1					
ANR	9354481	Argument	bytes		9353985	1					
ANR	9354482	Identifier	bytes		9353985	0					
ANR	9354483	Argument	plane		9353985	2					
ANR	9354484	Identifier	plane		9353985	0					
ANR	9354485	Argument	header -> cupsCompression		9353985	3					
ANR	9354486	PtrMemberAccess	header -> cupsCompression		9353985	0					
ANR	9354487	Identifier	header		9353985	0					
ANR	9354488	Identifier	cupsCompression		9353985	1					
ANR	9354489	Argument	xstep		9353985	4					
ANR	9354490	Identifier	xstep		9353985	0					
ANR	9354491	Argument	ystep		9353985	5					
ANR	9354492	Identifier	ystep		9353985	0					
ANR	9354493	ExpressionStatement	Feed ++	767:4:15658:15665	9353985	7	True				
ANR	9354494	PostIncDecOperationExpression	Feed ++		9353985	0					
ANR	9354495	Identifier	Feed		9353985	0					
ANR	9354496	IncDec	++		9353985	1					
ANR	9354497	ReturnType	void		9353985	1					
ANR	9354498	Identifier	OutputLine		9353985	2					
ANR	9354499	ParameterList	const cups_page_header2_t * header		9353985	3					
ANR	9354500	Parameter	const cups_page_header2_t * header	609:4:12530:12562	9353985	0	True				
ANR	9354501	ParameterType	const cups_page_header2_t *		9353985	0					
ANR	9354502	Identifier	header		9353985	1					
ANR	9354503	CFGEntryNode	ENTRY		9353985		True				
ANR	9354504	CFGExitNode	EXIT		9353985		True				
ANR	9354505	Symbol	header -> cupsRowCount		9353985						
ANR	9354506	Symbol	plane		9353985						
ANR	9354507	Symbol	oddptr		9353985						
ANR	9354508	Symbol	* oddptr		9353985						
ANR	9354509	Symbol	* evenptr		9353985						
ANR	9354510	Symbol	bit		9353985						
ANR	9354511	Symbol	LineCount		9353985						
ANR	9354512	Symbol	* LineBuffers		9353985						
ANR	9354513	Symbol	header -> HWResolution		9353985						
ANR	9354514	Symbol	memcmp		9353985						
ANR	9354515	Symbol	Planes		9353985						
ANR	9354516	Symbol	xstep		9353985						
ANR	9354517	Symbol	* * Planes		9353985						
ANR	9354518	Symbol	EvenOffset		9353985						
ANR	9354519	Symbol	ystep		9353985						
ANR	9354520	Symbol	header -> cupsBytesPerLine		9353985						
ANR	9354521	Symbol	* plane		9353985						
ANR	9354522	Symbol	pixel		9353985						
ANR	9354523	Symbol	OddOffset		9353985						
ANR	9354524	Symbol	Feed		9353985						
ANR	9354525	Symbol	evenptr		9353985						
ANR	9354526	Symbol	temp		9353985						
ANR	9354527	Symbol	header -> cupsWidth		9353985						
ANR	9354528	Symbol	* tempptr		9353985						
ANR	9354529	Symbol	Shingling		9353985						
ANR	9354530	Symbol	* pixel		9353985						
ANR	9354531	Symbol	LineBuffers		9353985						
ANR	9354532	Symbol	* * plane		9353985						
ANR	9354533	Symbol	* header		9353985						
ANR	9354534	Symbol	* temp		9353985						
ANR	9354535	Symbol	header -> cupsCompression		9353985						
ANR	9354536	Symbol	CompBuffer		9353985						
ANR	9354537	Symbol	NumPlanes		9353985						
ANR	9354538	Symbol	* Planes		9353985						
ANR	9354539	Symbol	* * header		9353985						
ANR	9354540	Symbol	* header -> HWResolution		9353985						
ANR	9354541	Symbol	DotBytes		9353985						
ANR	9354542	Symbol	bytes		9353985						
ANR	9354543	Symbol	width		9353985						
ANR	9354544	Symbol	x		9353985						
ANR	9354545	Symbol	header		9353985						
ANR	9354546	Symbol	tempptr		9353985						
ANR	9354547	Symbol	DotBit		9353985						
ANR	9354548	Function	OutputRows	776:0:15729:19355							
ANR	9354549	FunctionDef	"OutputRows (const cups_page_header2_t * header , int row)"		9354548	0					
ANR	9354550	CompoundStatement		780:0:15877:19355	9354548	0					
ANR	9354551	IdentifierDeclStatement	"unsigned i , n ;"	781:2:15881:15894	9354548	0	True				
ANR	9354552	IdentifierDecl	i		9354548	0					
ANR	9354553	IdentifierDeclType	unsigned		9354548	0					
ANR	9354554	Identifier	i		9354548	1					
ANR	9354555	IdentifierDecl	n		9354548	1					
ANR	9354556	IdentifierDeclType	unsigned		9354548	0					
ANR	9354557	Identifier	n		9354548	1					
ANR	9354558	IdentifierDeclStatement	"int dot_count , dot_min ;"	782:2:15919:15990	9354548	1	True				
ANR	9354559	IdentifierDecl	dot_count		9354548	0					
ANR	9354560	IdentifierDeclType	int		9354548	0					
ANR	9354561	Identifier	dot_count		9354548	1					
ANR	9354562	IdentifierDecl	dot_min		9354548	1					
ANR	9354563	IdentifierDeclType	int		9354548	0					
ANR	9354564	Identifier	dot_min		9354548	1					
ANR	9354565	IdentifierDeclStatement	"unsigned char * dot_ptr , * ptr ;"	784:2:16025:16084	9354548	2	True				
ANR	9354566	IdentifierDecl	* dot_ptr		9354548	0					
ANR	9354567	IdentifierDeclType	unsigned char *		9354548	0					
ANR	9354568	Identifier	dot_ptr		9354548	1					
ANR	9354569	IdentifierDecl	* ptr		9354548	1					
ANR	9354570	IdentifierDeclType	unsigned char *		9354548	0					
ANR	9354571	Identifier	ptr		9354548	1					
ANR	9354572	ExpressionStatement	dot_min = DotBytes * DotColumns	788:2:16111:16142	9354548	3	True				
ANR	9354573	AssignmentExpression	dot_min = DotBytes * DotColumns		9354548	0		=			
ANR	9354574	Identifier	dot_min		9354548	0					
ANR	9354575	MultiplicativeExpression	DotBytes * DotColumns		9354548	1		*			
ANR	9354576	Identifier	DotBytes		9354548	0					
ANR	9354577	Identifier	DotColumns		9354548	1					
ANR	9354578	IfStatement	"if ( LineBuffers [ row ] [ 0 ] != 0 || memcmp ( LineBuffers [ row ] , LineBuffers [ row ] + 1 , header -> cupsWidth * DotBytes - 1 ) )"		9354548	4					
ANR	9354579	Condition	"LineBuffers [ row ] [ 0 ] != 0 || memcmp ( LineBuffers [ row ] , LineBuffers [ row ] + 1 , header -> cupsWidth * DotBytes - 1 )"	790:6:16151:16277	9354548	0	True				
ANR	9354580	OrExpression	"LineBuffers [ row ] [ 0 ] != 0 || memcmp ( LineBuffers [ row ] , LineBuffers [ row ] + 1 , header -> cupsWidth * DotBytes - 1 )"		9354548	0		||			
ANR	9354581	EqualityExpression	LineBuffers [ row ] [ 0 ] != 0		9354548	0		!=			
ANR	9354582	ArrayIndexing	LineBuffers [ row ] [ 0 ]		9354548	0					
ANR	9354583	ArrayIndexing	LineBuffers [ row ]		9354548	0					
ANR	9354584	Identifier	LineBuffers		9354548	0					
ANR	9354585	Identifier	row		9354548	1					
ANR	9354586	PrimaryExpression	0		9354548	1					
ANR	9354587	PrimaryExpression	0		9354548	1					
ANR	9354588	CallExpression	"memcmp ( LineBuffers [ row ] , LineBuffers [ row ] + 1 , header -> cupsWidth * DotBytes - 1 )"		9354548	1					
ANR	9354589	Callee	memcmp		9354548	0					
ANR	9354590	Identifier	memcmp		9354548	0					
ANR	9354591	ArgumentList	LineBuffers [ row ]		9354548	1					
ANR	9354592	Argument	LineBuffers [ row ]		9354548	0					
ANR	9354593	ArrayIndexing	LineBuffers [ row ]		9354548	0					
ANR	9354594	Identifier	LineBuffers		9354548	0					
ANR	9354595	Identifier	row		9354548	1					
ANR	9354596	Argument	LineBuffers [ row ] + 1		9354548	1					
ANR	9354597	AdditiveExpression	LineBuffers [ row ] + 1		9354548	0		+			
ANR	9354598	ArrayIndexing	LineBuffers [ row ]		9354548	0					
ANR	9354599	Identifier	LineBuffers		9354548	0					
ANR	9354600	Identifier	row		9354548	1					
ANR	9354601	PrimaryExpression	1		9354548	1					
ANR	9354602	Argument	header -> cupsWidth * DotBytes - 1		9354548	2					
ANR	9354603	AdditiveExpression	header -> cupsWidth * DotBytes - 1		9354548	0		-			
ANR	9354604	MultiplicativeExpression	header -> cupsWidth * DotBytes		9354548	0		*			
ANR	9354605	PtrMemberAccess	header -> cupsWidth		9354548	0					
ANR	9354606	Identifier	header		9354548	0					
ANR	9354607	Identifier	cupsWidth		9354548	1					
ANR	9354608	Identifier	DotBytes		9354548	1					
ANR	9354609	PrimaryExpression	1		9354548	1					
ANR	9354610	CompoundStatement		14:2:404:404	9354548	1					
ANR	9354611	ExpressionStatement	i = 0	798:4:16330:16343	9354548	0	True				
ANR	9354612	AssignmentExpression	i = 0		9354548	0		=			
ANR	9354613	Identifier	i		9354548	0					
ANR	9354614	PrimaryExpression	0		9354548	1					
ANR	9354615	ExpressionStatement	dot_count = header -> cupsWidth * DotBytes	799:4:16349:16389	9354548	1	True				
ANR	9354616	AssignmentExpression	dot_count = header -> cupsWidth * DotBytes		9354548	0		=			
ANR	9354617	Identifier	dot_count		9354548	0					
ANR	9354618	MultiplicativeExpression	header -> cupsWidth * DotBytes		9354548	1		*			
ANR	9354619	PtrMemberAccess	header -> cupsWidth		9354548	0					
ANR	9354620	Identifier	header		9354548	0					
ANR	9354621	Identifier	cupsWidth		9354548	1					
ANR	9354622	Identifier	DotBytes		9354548	1					
ANR	9354623	ExpressionStatement	dot_ptr = LineBuffers [ row ]	800:4:16395:16423	9354548	2	True				
ANR	9354624	AssignmentExpression	dot_ptr = LineBuffers [ row ]		9354548	0		=			
ANR	9354625	Identifier	dot_ptr		9354548	0					
ANR	9354626	ArrayIndexing	LineBuffers [ row ]		9354548	1					
ANR	9354627	Identifier	LineBuffers		9354548	0					
ANR	9354628	Identifier	row		9354548	1					
ANR	9354629	WhileStatement	"while ( dot_count >= dot_min && dot_ptr [ 0 ] == 0 && memcmp ( dot_ptr , dot_ptr + 1 , dot_min - 1 ) == 0 )"		9354548	3					
ANR	9354630	Condition	"dot_count >= dot_min && dot_ptr [ 0 ] == 0 && memcmp ( dot_ptr , dot_ptr + 1 , dot_min - 1 ) == 0"	802:11:16437:16536	9354548	0	True				
ANR	9354631	AndExpression	"dot_count >= dot_min && dot_ptr [ 0 ] == 0 && memcmp ( dot_ptr , dot_ptr + 1 , dot_min - 1 ) == 0"		9354548	0		&&			
ANR	9354632	RelationalExpression	dot_count >= dot_min		9354548	0		>=			
ANR	9354633	Identifier	dot_count		9354548	0					
ANR	9354634	Identifier	dot_min		9354548	1					
ANR	9354635	AndExpression	"dot_ptr [ 0 ] == 0 && memcmp ( dot_ptr , dot_ptr + 1 , dot_min - 1 ) == 0"		9354548	1		&&			
ANR	9354636	EqualityExpression	dot_ptr [ 0 ] == 0		9354548	0		==			
ANR	9354637	ArrayIndexing	dot_ptr [ 0 ]		9354548	0					
ANR	9354638	Identifier	dot_ptr		9354548	0					
ANR	9354639	PrimaryExpression	0		9354548	1					
ANR	9354640	PrimaryExpression	0		9354548	1					
ANR	9354641	EqualityExpression	"memcmp ( dot_ptr , dot_ptr + 1 , dot_min - 1 ) == 0"		9354548	1		==			
ANR	9354642	CallExpression	"memcmp ( dot_ptr , dot_ptr + 1 , dot_min - 1 )"		9354548	0					
ANR	9354643	Callee	memcmp		9354548	0					
ANR	9354644	Identifier	memcmp		9354548	0					
ANR	9354645	ArgumentList	dot_ptr		9354548	1					
ANR	9354646	Argument	dot_ptr		9354548	0					
ANR	9354647	Identifier	dot_ptr		9354548	0					
ANR	9354648	Argument	dot_ptr + 1		9354548	1					
ANR	9354649	AdditiveExpression	dot_ptr + 1		9354548	0		+			
ANR	9354650	Identifier	dot_ptr		9354548	0					
ANR	9354651	PrimaryExpression	1		9354548	1					
ANR	9354652	Argument	dot_min - 1		9354548	2					
ANR	9354653	AdditiveExpression	dot_min - 1		9354548	0		-			
ANR	9354654	Identifier	dot_min		9354548	0					
ANR	9354655	PrimaryExpression	1		9354548	1					
ANR	9354656	PrimaryExpression	0		9354548	1					
ANR	9354657	CompoundStatement		25:4:665:665	9354548	1					
ANR	9354658	ExpressionStatement	i ++	805:6:16551:16563	9354548	0	True				
ANR	9354659	PostIncDecOperationExpression	i ++		9354548	0					
ANR	9354660	Identifier	i		9354548	0					
ANR	9354661	IncDec	++		9354548	1					
ANR	9354662	ExpressionStatement	dot_ptr += dot_min	806:6:16571:16591	9354548	1	True				
ANR	9354663	AssignmentExpression	dot_ptr += dot_min		9354548	0		+=			
ANR	9354664	Identifier	dot_ptr		9354548	0					
ANR	9354665	Identifier	dot_min		9354548	1					
ANR	9354666	ExpressionStatement	dot_count -= dot_min	807:6:16599:16619	9354548	2	True				
ANR	9354667	AssignmentExpression	dot_count -= dot_min		9354548	0		-=			
ANR	9354668	Identifier	dot_count		9354548	0					
ANR	9354669	Identifier	dot_min		9354548	1					
ANR	9354670	WhileStatement	"while ( dot_count >= dot_min && dot_ptr [ dot_count - dot_min ] == 0 && memcmp ( dot_ptr + dot_count - dot_min , dot_ptr + dot_count - dot_min + 1 , dot_min - 1 ) == 0 )"		9354548	4					
ANR	9354671	Condition	"dot_count >= dot_min && dot_ptr [ dot_count - dot_min ] == 0 && memcmp ( dot_ptr + dot_count - dot_min , dot_ptr + dot_count - dot_min + 1 , dot_min - 1 ) == 0"	814:11:16682:16854	9354548	0	True				
ANR	9354672	AndExpression	"dot_count >= dot_min && dot_ptr [ dot_count - dot_min ] == 0 && memcmp ( dot_ptr + dot_count - dot_min , dot_ptr + dot_count - dot_min + 1 , dot_min - 1 ) == 0"		9354548	0		&&			
ANR	9354673	RelationalExpression	dot_count >= dot_min		9354548	0		>=			
ANR	9354674	Identifier	dot_count		9354548	0					
ANR	9354675	Identifier	dot_min		9354548	1					
ANR	9354676	AndExpression	"dot_ptr [ dot_count - dot_min ] == 0 && memcmp ( dot_ptr + dot_count - dot_min , dot_ptr + dot_count - dot_min + 1 , dot_min - 1 ) == 0"		9354548	1		&&			
ANR	9354677	EqualityExpression	dot_ptr [ dot_count - dot_min ] == 0		9354548	0		==			
ANR	9354678	ArrayIndexing	dot_ptr [ dot_count - dot_min ]		9354548	0					
ANR	9354679	Identifier	dot_ptr		9354548	0					
ANR	9354680	AdditiveExpression	dot_count - dot_min		9354548	1		-			
ANR	9354681	Identifier	dot_count		9354548	0					
ANR	9354682	Identifier	dot_min		9354548	1					
ANR	9354683	PrimaryExpression	0		9354548	1					
ANR	9354684	EqualityExpression	"memcmp ( dot_ptr + dot_count - dot_min , dot_ptr + dot_count - dot_min + 1 , dot_min - 1 ) == 0"		9354548	1		==			
ANR	9354685	CallExpression	"memcmp ( dot_ptr + dot_count - dot_min , dot_ptr + dot_count - dot_min + 1 , dot_min - 1 )"		9354548	0					
ANR	9354686	Callee	memcmp		9354548	0					
ANR	9354687	Identifier	memcmp		9354548	0					
ANR	9354688	ArgumentList	dot_ptr + dot_count - dot_min		9354548	1					
ANR	9354689	Argument	dot_ptr + dot_count - dot_min		9354548	0					
ANR	9354690	AdditiveExpression	dot_ptr + dot_count - dot_min		9354548	0		+			
ANR	9354691	Identifier	dot_ptr		9354548	0					
ANR	9354692	AdditiveExpression	dot_count - dot_min		9354548	1		-			
ANR	9354693	Identifier	dot_count		9354548	0					
ANR	9354694	Identifier	dot_min		9354548	1					
ANR	9354695	Argument	dot_ptr + dot_count - dot_min + 1		9354548	1					
ANR	9354696	AdditiveExpression	dot_ptr + dot_count - dot_min + 1		9354548	0		+			
ANR	9354697	Identifier	dot_ptr		9354548	0					
ANR	9354698	AdditiveExpression	dot_count - dot_min + 1		9354548	1		-			
ANR	9354699	Identifier	dot_count		9354548	0					
ANR	9354700	AdditiveExpression	dot_min + 1		9354548	1		+			
ANR	9354701	Identifier	dot_min		9354548	0					
ANR	9354702	PrimaryExpression	1		9354548	1					
ANR	9354703	Argument	dot_min - 1		9354548	2					
ANR	9354704	AdditiveExpression	dot_min - 1		9354548	0		-			
ANR	9354705	Identifier	dot_min		9354548	0					
ANR	9354706	PrimaryExpression	1		9354548	1					
ANR	9354707	PrimaryExpression	0		9354548	1					
ANR	9354708	ExpressionStatement	dot_count -= dot_min	817:6:16863:16883	9354548	1	True				
ANR	9354709	AssignmentExpression	dot_count -= dot_min		9354548	0		-=			
ANR	9354710	Identifier	dot_count		9354548	0					
ANR	9354711	Identifier	dot_min		9354548	1					
ANR	9354712	IfStatement	if ( i == 0 )		9354548	5					
ANR	9354713	Condition	i == 0	823:8:16950:16955	9354548	0	True				
ANR	9354714	EqualityExpression	i == 0		9354548	0		==			
ANR	9354715	Identifier	i		9354548	0					
ANR	9354716	PrimaryExpression	0		9354548	1					
ANR	9354717	ExpressionStatement	putchar ( '\\r' )	824:6:16964:16977	9354548	1	True				
ANR	9354718	CallExpression	putchar ( '\\r' )		9354548	0					
ANR	9354719	Callee	putchar		9354548	0					
ANR	9354720	Identifier	putchar		9354548	0					
ANR	9354721	ArgumentList	'\\r'		9354548	1					
ANR	9354722	Argument	'\\r'		9354548	0					
ANR	9354723	PrimaryExpression	'\\r'		9354548	0					
ANR	9354724	ElseStatement	else		9354548	0					
ANR	9354725	CompoundStatement		47:4:1114:1114	9354548	0					
ANR	9354726	ExpressionStatement	putchar ( 0x1b )	827:6:17000:17013	9354548	0	True				
ANR	9354727	CallExpression	putchar ( 0x1b )		9354548	0					
ANR	9354728	Callee	putchar		9354548	0					
ANR	9354729	Identifier	putchar		9354548	0					
ANR	9354730	ArgumentList	0x1b		9354548	1					
ANR	9354731	Argument	0x1b		9354548	0					
ANR	9354732	PrimaryExpression	0x1b		9354548	0					
ANR	9354733	ExpressionStatement	putchar ( '$' )	828:6:17021:17033	9354548	1	True				
ANR	9354734	CallExpression	putchar ( '$' )		9354548	0					
ANR	9354735	Callee	putchar		9354548	0					
ANR	9354736	Identifier	putchar		9354548	0					
ANR	9354737	ArgumentList	'$'		9354548	1					
ANR	9354738	Argument	'$'		9354548	0					
ANR	9354739	PrimaryExpression	'$'		9354548	0					
ANR	9354740	ExpressionStatement	putchar ( i & 255 )	829:6:17041:17057	9354548	2	True				
ANR	9354741	CallExpression	putchar ( i & 255 )		9354548	0					
ANR	9354742	Callee	putchar		9354548	0					
ANR	9354743	Identifier	putchar		9354548	0					
ANR	9354744	ArgumentList	i & 255		9354548	1					
ANR	9354745	Argument	i & 255		9354548	0					
ANR	9354746	BitAndExpression	i & 255		9354548	0		&			
ANR	9354747	Identifier	i		9354548	0					
ANR	9354748	PrimaryExpression	255		9354548	1					
ANR	9354749	ExpressionStatement	putchar ( i >> 8 )	830:6:17065:17080	9354548	3	True				
ANR	9354750	CallExpression	putchar ( i >> 8 )		9354548	0					
ANR	9354751	Callee	putchar		9354548	0					
ANR	9354752	Identifier	putchar		9354548	0					
ANR	9354753	ArgumentList	i >> 8		9354548	1					
ANR	9354754	Argument	i >> 8		9354548	0					
ANR	9354755	ShiftExpression	i >> 8		9354548	0		>>			
ANR	9354756	Identifier	i		9354548	0					
ANR	9354757	PrimaryExpression	8		9354548	1					
ANR	9354758	ExpressionStatement	"printf ( ""\\033*"" )"	837:4:17152:17167	9354548	6	True				
ANR	9354759	CallExpression	"printf ( ""\\033*"" )"		9354548	0					
ANR	9354760	Callee	printf		9354548	0					
ANR	9354761	Identifier	printf		9354548	0					
ANR	9354762	ArgumentList	"""\\033*"""		9354548	1					
ANR	9354763	Argument	"""\\033*"""		9354548	0					
ANR	9354764	PrimaryExpression	"""\\033*"""		9354548	0					
ANR	9354765	SwitchStatement	switch ( header -> HWResolution [ 0 ] )		9354548	7					
ANR	9354766	Condition	header -> HWResolution [ 0 ]	838:12:17206:17228	9354548	0	True				
ANR	9354767	ArrayIndexing	header -> HWResolution [ 0 ]		9354548	0					
ANR	9354768	PtrMemberAccess	header -> HWResolution		9354548	0					
ANR	9354769	Identifier	header		9354548	0					
ANR	9354770	Identifier	HWResolution		9354548	1					
ANR	9354771	PrimaryExpression	0		9354548	1					
ANR	9354772	CompoundStatement		60:4:1357:1357	9354548	1					
ANR	9354773	Label	case 60 :	840:6:17243:17251	9354548	0	True				
ANR	9354774	ExpressionStatement	putchar ( 0 )	841:10:17286:17296	9354548	1	True				
ANR	9354775	CallExpression	putchar ( 0 )		9354548	0					
ANR	9354776	Callee	putchar		9354548	0					
ANR	9354777	Identifier	putchar		9354548	0					
ANR	9354778	ArgumentList	0		9354548	1					
ANR	9354779	Argument	0		9354548	0					
ANR	9354780	PrimaryExpression	0		9354548	0					
ANR	9354781	BreakStatement	break ;	842:10:17308:17313	9354548	2	True				
ANR	9354782	Label	case 120 :	843:6:17321:17330	9354548	3	True				
ANR	9354783	ExpressionStatement	putchar ( 1 )	844:10:17366:17376	9354548	4	True				
ANR	9354784	CallExpression	putchar ( 1 )		9354548	0					
ANR	9354785	Callee	putchar		9354548	0					
ANR	9354786	Identifier	putchar		9354548	0					
ANR	9354787	ArgumentList	1		9354548	1					
ANR	9354788	Argument	1		9354548	0					
ANR	9354789	PrimaryExpression	1		9354548	0					
ANR	9354790	BreakStatement	break ;	845:10:17388:17393	9354548	5	True				
ANR	9354791	Label	case 180 :	846:6:17401:17410	9354548	6	True				
ANR	9354792	ExpressionStatement	putchar ( 39 )	847:10:17440:17451	9354548	7	True				
ANR	9354793	CallExpression	putchar ( 39 )		9354548	0					
ANR	9354794	Callee	putchar		9354548	0					
ANR	9354795	Identifier	putchar		9354548	0					
ANR	9354796	ArgumentList	39		9354548	1					
ANR	9354797	Argument	39		9354548	0					
ANR	9354798	PrimaryExpression	39		9354548	0					
ANR	9354799	BreakStatement	break ;	848:10:17463:17468	9354548	8	True				
ANR	9354800	Label	case 240 :	849:6:17476:17485	9354548	9	True				
ANR	9354801	ExpressionStatement	putchar ( 3 )	850:10:17518:17528	9354548	10	True				
ANR	9354802	CallExpression	putchar ( 3 )		9354548	0					
ANR	9354803	Callee	putchar		9354548	0					
ANR	9354804	Identifier	putchar		9354548	0					
ANR	9354805	ArgumentList	3		9354548	1					
ANR	9354806	Argument	3		9354548	0					
ANR	9354807	PrimaryExpression	3		9354548	0					
ANR	9354808	BreakStatement	break ;	851:10:17540:17545	9354548	11	True				
ANR	9354809	Label	case 360 :	852:6:17553:17562	9354548	12	True				
ANR	9354810	IfStatement	if ( header -> HWResolution [ 1 ] == 180 )		9354548	13					
ANR	9354811	Condition	header -> HWResolution [ 1 ] == 180	853:7:17597:17626	9354548	0	True				
ANR	9354812	EqualityExpression	header -> HWResolution [ 1 ] == 180		9354548	0		==			
ANR	9354813	ArrayIndexing	header -> HWResolution [ 1 ]		9354548	0					
ANR	9354814	PtrMemberAccess	header -> HWResolution		9354548	0					
ANR	9354815	Identifier	header		9354548	0					
ANR	9354816	Identifier	HWResolution		9354548	1					
ANR	9354817	PrimaryExpression	1		9354548	1					
ANR	9354818	PrimaryExpression	180		9354548	1					
ANR	9354819	CompoundStatement		75:3:1754:1754	9354548	1					
ANR	9354820	IfStatement	if ( Shingling && LineCount != 0 )		9354548	0					
ANR	9354821	Condition	Shingling && LineCount != 0	855:16:17650:17676	9354548	0	True				
ANR	9354822	AndExpression	Shingling && LineCount != 0		9354548	0		&&			
ANR	9354823	Identifier	Shingling		9354548	0					
ANR	9354824	EqualityExpression	LineCount != 0		9354548	1		!=			
ANR	9354825	Identifier	LineCount		9354548	0					
ANR	9354826	PrimaryExpression	0		9354548	1					
ANR	9354827	ExpressionStatement	putchar ( 40 )	856:14:17693:17704	9354548	1	True				
ANR	9354828	CallExpression	putchar ( 40 )		9354548	0					
ANR	9354829	Callee	putchar		9354548	0					
ANR	9354830	Identifier	putchar		9354548	0					
ANR	9354831	ArgumentList	40		9354548	1					
ANR	9354832	Argument	40		9354548	0					
ANR	9354833	PrimaryExpression	40		9354548	0					
ANR	9354834	ElseStatement	else		9354548	0					
ANR	9354835	ExpressionStatement	putchar ( 41 )	858:14:17757:17768	9354548	0	True				
ANR	9354836	CallExpression	putchar ( 41 )		9354548	0					
ANR	9354837	Callee	putchar		9354548	0					
ANR	9354838	Identifier	putchar		9354548	0					
ANR	9354839	ArgumentList	41		9354548	1					
ANR	9354840	Argument	41		9354548	0					
ANR	9354841	PrimaryExpression	41		9354548	0					
ANR	9354842	ElseStatement	else		9354548	0					
ANR	9354843	CompoundStatement		82:10:1935:1935	9354548	0					
ANR	9354844	IfStatement	if ( Shingling && LineCount != 0 )		9354548	0					
ANR	9354845	Condition	Shingling && LineCount != 0	862:9:17824:17850	9354548	0	True				
ANR	9354846	AndExpression	Shingling && LineCount != 0		9354548	0		&&			
ANR	9354847	Identifier	Shingling		9354548	0					
ANR	9354848	EqualityExpression	LineCount != 0		9354548	1		!=			
ANR	9354849	Identifier	LineCount		9354548	0					
ANR	9354850	PrimaryExpression	0		9354548	1					
ANR	9354851	ExpressionStatement	putchar ( 72 )	863:14:17867:17878	9354548	1	True				
ANR	9354852	CallExpression	putchar ( 72 )		9354548	0					
ANR	9354853	Callee	putchar		9354548	0					
ANR	9354854	Identifier	putchar		9354548	0					
ANR	9354855	ArgumentList	72		9354548	1					
ANR	9354856	Argument	72		9354548	0					
ANR	9354857	PrimaryExpression	72		9354548	0					
ANR	9354858	ElseStatement	else		9354548	0					
ANR	9354859	ExpressionStatement	putchar ( 73 )	865:14:17931:17942	9354548	0	True				
ANR	9354860	CallExpression	putchar ( 73 )		9354548	0					
ANR	9354861	Callee	putchar		9354548	0					
ANR	9354862	Identifier	putchar		9354548	0					
ANR	9354863	ArgumentList	73		9354548	1					
ANR	9354864	Argument	73		9354548	0					
ANR	9354865	PrimaryExpression	73		9354548	0					
ANR	9354866	BreakStatement	break ;	867:10:17986:17991	9354548	14	True				
ANR	9354867	ExpressionStatement	n = ( unsigned ) dot_count / DotBytes	870:4:18004:18038	9354548	8	True				
ANR	9354868	AssignmentExpression	n = ( unsigned ) dot_count / DotBytes		9354548	0		=			
ANR	9354869	Identifier	n		9354548	0					
ANR	9354870	MultiplicativeExpression	( unsigned ) dot_count / DotBytes		9354548	1		/			
ANR	9354871	CastExpression	( unsigned ) dot_count		9354548	0					
ANR	9354872	CastTarget	unsigned		9354548	0					
ANR	9354873	Identifier	dot_count		9354548	1					
ANR	9354874	Identifier	DotBytes		9354548	1					
ANR	9354875	ExpressionStatement	putchar ( n & 255 )	871:4:18044:18060	9354548	9	True				
ANR	9354876	CallExpression	putchar ( n & 255 )		9354548	0					
ANR	9354877	Callee	putchar		9354548	0					
ANR	9354878	Identifier	putchar		9354548	0					
ANR	9354879	ArgumentList	n & 255		9354548	1					
ANR	9354880	Argument	n & 255		9354548	0					
ANR	9354881	BitAndExpression	n & 255		9354548	0		&			
ANR	9354882	Identifier	n		9354548	0					
ANR	9354883	PrimaryExpression	255		9354548	1					
ANR	9354884	ExpressionStatement	putchar ( n / 256 )	872:4:18066:18082	9354548	10	True				
ANR	9354885	CallExpression	putchar ( n / 256 )		9354548	0					
ANR	9354886	Callee	putchar		9354548	0					
ANR	9354887	Identifier	putchar		9354548	0					
ANR	9354888	ArgumentList	n / 256		9354548	1					
ANR	9354889	Argument	n / 256		9354548	0					
ANR	9354890	MultiplicativeExpression	n / 256		9354548	0		/			
ANR	9354891	Identifier	n		9354548	0					
ANR	9354892	PrimaryExpression	256		9354548	1					
ANR	9354893	IfStatement	if ( header -> HWResolution [ 0 ] == 120 || header -> HWResolution [ 0 ] == 240 )		9354548	11					
ANR	9354894	Condition	header -> HWResolution [ 0 ] == 120 || header -> HWResolution [ 0 ] == 240	878:8:18140:18211	9354548	0	True				
ANR	9354895	OrExpression	header -> HWResolution [ 0 ] == 120 || header -> HWResolution [ 0 ] == 240		9354548	0		||			
ANR	9354896	EqualityExpression	header -> HWResolution [ 0 ] == 120		9354548	0		==			
ANR	9354897	ArrayIndexing	header -> HWResolution [ 0 ]		9354548	0					
ANR	9354898	PtrMemberAccess	header -> HWResolution		9354548	0					
ANR	9354899	Identifier	header		9354548	0					
ANR	9354900	Identifier	HWResolution		9354548	1					
ANR	9354901	PrimaryExpression	0		9354548	1					
ANR	9354902	PrimaryExpression	120		9354548	1					
ANR	9354903	EqualityExpression	header -> HWResolution [ 0 ] == 240		9354548	1		==			
ANR	9354904	ArrayIndexing	header -> HWResolution [ 0 ]		9354548	0					
ANR	9354905	PtrMemberAccess	header -> HWResolution		9354548	0					
ANR	9354906	Identifier	header		9354548	0					
ANR	9354907	Identifier	HWResolution		9354548	1					
ANR	9354908	PrimaryExpression	0		9354548	1					
ANR	9354909	PrimaryExpression	240		9354548	1					
ANR	9354910	CompoundStatement		101:4:2340:2340	9354548	1					
ANR	9354911	ForStatement	"for ( n = dot_count / 2 , ptr = dot_ptr ; n > 0 ; n -- , ptr += 2 )"		9354548	0					
ANR	9354912	ForInit	"n = dot_count / 2 , ptr = dot_ptr ;"	885:11:18319:18351	9354548	0	True				
ANR	9354913	Expression	"n = dot_count / 2 , ptr = dot_ptr"		9354548	0					
ANR	9354914	AssignmentExpression	n = dot_count / 2		9354548	0		=			
ANR	9354915	Identifier	n		9354548	0					
ANR	9354916	MultiplicativeExpression	dot_count / 2		9354548	1		/			
ANR	9354917	Identifier	dot_count		9354548	0					
ANR	9354918	PrimaryExpression	2		9354548	1					
ANR	9354919	AssignmentExpression	ptr = dot_ptr		9354548	1		=			
ANR	9354920	Identifier	ptr		9354548	0					
ANR	9354921	Identifier	dot_ptr		9354548	1					
ANR	9354922	Condition	n > 0	885:45:18353:18357	9354548	1	True				
ANR	9354923	RelationalExpression	n > 0		9354548	0		>			
ANR	9354924	Identifier	n		9354548	0					
ANR	9354925	PrimaryExpression	0		9354548	1					
ANR	9354926	Expression	"n -- , ptr += 2"	885:52:18360:18373	9354548	2	True				
ANR	9354927	PostIncDecOperationExpression	n --		9354548	0					
ANR	9354928	Identifier	n		9354548	0					
ANR	9354929	IncDec	--		9354548	1					
ANR	9354930	AssignmentExpression	ptr += 2		9354548	1		+=			
ANR	9354931	Identifier	ptr		9354548	0					
ANR	9354932	PrimaryExpression	2		9354548	1					
ANR	9354933	CompoundStatement		107:6:2504:2504	9354548	3					
ANR	9354934	ExpressionStatement	putchar ( * ptr )	887:8:18392:18405	9354548	0	True				
ANR	9354935	CallExpression	putchar ( * ptr )		9354548	0					
ANR	9354936	Callee	putchar		9354548	0					
ANR	9354937	Identifier	putchar		9354548	0					
ANR	9354938	ArgumentList	* ptr		9354548	1					
ANR	9354939	Argument	* ptr		9354548	0					
ANR	9354940	UnaryOperationExpression	* ptr		9354548	0					
ANR	9354941	UnaryOperator	*		9354548	0					
ANR	9354942	Identifier	ptr		9354548	1					
ANR	9354943	ExpressionStatement	putchar ( 0 )	888:1:18408:18418	9354548	1	True				
ANR	9354944	CallExpression	putchar ( 0 )		9354548	0					
ANR	9354945	Callee	putchar		9354548	0					
ANR	9354946	Identifier	putchar		9354548	0					
ANR	9354947	ArgumentList	0		9354548	1					
ANR	9354948	Argument	0		9354548	0					
ANR	9354949	PrimaryExpression	0		9354548	0					
ANR	9354950	IfStatement	if ( i == 0 )		9354548	1					
ANR	9354951	Condition	i == 0	895:10:18511:18516	9354548	0	True				
ANR	9354952	EqualityExpression	i == 0		9354548	0		==			
ANR	9354953	Identifier	i		9354548	0					
ANR	9354954	PrimaryExpression	0		9354548	1					
ANR	9354955	ExpressionStatement	putchar ( '\\r' )	896:1:18520:18533	9354548	1	True				
ANR	9354956	CallExpression	putchar ( '\\r' )		9354548	0					
ANR	9354957	Callee	putchar		9354548	0					
ANR	9354958	Identifier	putchar		9354548	0					
ANR	9354959	ArgumentList	'\\r'		9354548	1					
ANR	9354960	Argument	'\\r'		9354548	0					
ANR	9354961	PrimaryExpression	'\\r'		9354548	0					
ANR	9354962	ElseStatement	else		9354548	0					
ANR	9354963	CompoundStatement		119:6:2674:2674	9354548	0					
ANR	9354964	ExpressionStatement	putchar ( 0x1b )	899:1:18555:18568	9354548	0	True				
ANR	9354965	CallExpression	putchar ( 0x1b )		9354548	0					
ANR	9354966	Callee	putchar		9354548	0					
ANR	9354967	Identifier	putchar		9354548	0					
ANR	9354968	ArgumentList	0x1b		9354548	1					
ANR	9354969	Argument	0x1b		9354548	0					
ANR	9354970	PrimaryExpression	0x1b		9354548	0					
ANR	9354971	ExpressionStatement	putchar ( '$' )	900:1:18571:18583	9354548	1	True				
ANR	9354972	CallExpression	putchar ( '$' )		9354548	0					
ANR	9354973	Callee	putchar		9354548	0					
ANR	9354974	Identifier	putchar		9354548	0					
ANR	9354975	ArgumentList	'$'		9354548	1					
ANR	9354976	Argument	'$'		9354548	0					
ANR	9354977	PrimaryExpression	'$'		9354548	0					
ANR	9354978	ExpressionStatement	putchar ( i & 255 )	901:1:18586:18602	9354548	2	True				
ANR	9354979	CallExpression	putchar ( i & 255 )		9354548	0					
ANR	9354980	Callee	putchar		9354548	0					
ANR	9354981	Identifier	putchar		9354548	0					
ANR	9354982	ArgumentList	i & 255		9354548	1					
ANR	9354983	Argument	i & 255		9354548	0					
ANR	9354984	BitAndExpression	i & 255		9354548	0		&			
ANR	9354985	Identifier	i		9354548	0					
ANR	9354986	PrimaryExpression	255		9354548	1					
ANR	9354987	ExpressionStatement	putchar ( i >> 8 )	902:1:18605:18620	9354548	3	True				
ANR	9354988	CallExpression	putchar ( i >> 8 )		9354548	0					
ANR	9354989	Callee	putchar		9354548	0					
ANR	9354990	Identifier	putchar		9354548	0					
ANR	9354991	ArgumentList	i >> 8		9354548	1					
ANR	9354992	Argument	i >> 8		9354548	0					
ANR	9354993	ShiftExpression	i >> 8		9354548	0		>>			
ANR	9354994	Identifier	i		9354548	0					
ANR	9354995	PrimaryExpression	8		9354548	1					
ANR	9354996	IfStatement	if ( header -> HWResolution [ 0 ] == 120 )		9354548	2					
ANR	9354997	Condition	header -> HWResolution [ 0 ] == 120	905:10:18641:18670	9354548	0	True				
ANR	9354998	EqualityExpression	header -> HWResolution [ 0 ] == 120		9354548	0		==			
ANR	9354999	ArrayIndexing	header -> HWResolution [ 0 ]		9354548	0					
ANR	9355000	PtrMemberAccess	header -> HWResolution		9354548	0					
ANR	9355001	Identifier	header		9354548	0					
ANR	9355002	Identifier	HWResolution		9354548	1					
ANR	9355003	PrimaryExpression	0		9354548	1					
ANR	9355004	PrimaryExpression	120		9354548	1					
ANR	9355005	ExpressionStatement	"printf ( ""\\033*\\001"" )"	906:7:18680:18699	9354548	1	True				
ANR	9355006	CallExpression	"printf ( ""\\033*\\001"" )"		9354548	0					
ANR	9355007	Callee	printf		9354548	0					
ANR	9355008	Identifier	printf		9354548	0					
ANR	9355009	ArgumentList	"""\\033*\\001"""		9354548	1					
ANR	9355010	Argument	"""\\033*\\001"""		9354548	0					
ANR	9355011	PrimaryExpression	"""\\033*\\001"""		9354548	0					
ANR	9355012	ElseStatement	else		9354548	0					
ANR	9355013	ExpressionStatement	"printf ( ""\\033*\\003"" )"	908:7:18743:18762	9354548	0	True				
ANR	9355014	CallExpression	"printf ( ""\\033*\\003"" )"		9354548	0					
ANR	9355015	Callee	printf		9354548	0					
ANR	9355016	Identifier	printf		9354548	0					
ANR	9355017	ArgumentList	"""\\033*\\003"""		9354548	1					
ANR	9355018	Argument	"""\\033*\\003"""		9354548	0					
ANR	9355019	PrimaryExpression	"""\\033*\\003"""		9354548	0					
ANR	9355020	ExpressionStatement	n = ( unsigned ) dot_count / DotBytes	910:6:18795:18829	9354548	3	True				
ANR	9355021	AssignmentExpression	n = ( unsigned ) dot_count / DotBytes		9354548	0		=			
ANR	9355022	Identifier	n		9354548	0					
ANR	9355023	MultiplicativeExpression	( unsigned ) dot_count / DotBytes		9354548	1		/			
ANR	9355024	CastExpression	( unsigned ) dot_count		9354548	0					
ANR	9355025	CastTarget	unsigned		9354548	0					
ANR	9355026	Identifier	dot_count		9354548	1					
ANR	9355027	Identifier	DotBytes		9354548	1					
ANR	9355028	ExpressionStatement	putchar ( n & 255 )	911:6:18837:18853	9354548	4	True				
ANR	9355029	CallExpression	putchar ( n & 255 )		9354548	0					
ANR	9355030	Callee	putchar		9354548	0					
ANR	9355031	Identifier	putchar		9354548	0					
ANR	9355032	ArgumentList	n & 255		9354548	1					
ANR	9355033	Argument	n & 255		9354548	0					
ANR	9355034	BitAndExpression	n & 255		9354548	0		&			
ANR	9355035	Identifier	n		9354548	0					
ANR	9355036	PrimaryExpression	255		9354548	1					
ANR	9355037	ExpressionStatement	putchar ( n / 256 )	912:6:18861:18877	9354548	5	True				
ANR	9355038	CallExpression	putchar ( n / 256 )		9354548	0					
ANR	9355039	Callee	putchar		9354548	0					
ANR	9355040	Identifier	putchar		9354548	0					
ANR	9355041	ArgumentList	n / 256		9354548	1					
ANR	9355042	Argument	n / 256		9354548	0					
ANR	9355043	MultiplicativeExpression	n / 256		9354548	0		/			
ANR	9355044	Identifier	n		9354548	0					
ANR	9355045	PrimaryExpression	256		9354548	1					
ANR	9355046	ForStatement	"for ( n = dot_count / 2 , ptr = dot_ptr + 1 ; n > 0 ; n -- , ptr += 2 )"		9354548	6					
ANR	9355047	ForInit	"n = dot_count / 2 , ptr = dot_ptr + 1 ;"	914:11:18891:18927	9354548	0	True				
ANR	9355048	Expression	"n = dot_count / 2 , ptr = dot_ptr + 1"		9354548	0					
ANR	9355049	AssignmentExpression	n = dot_count / 2		9354548	0		=			
ANR	9355050	Identifier	n		9354548	0					
ANR	9355051	MultiplicativeExpression	dot_count / 2		9354548	1		/			
ANR	9355052	Identifier	dot_count		9354548	0					
ANR	9355053	PrimaryExpression	2		9354548	1					
ANR	9355054	AssignmentExpression	ptr = dot_ptr + 1		9354548	1		=			
ANR	9355055	Identifier	ptr		9354548	0					
ANR	9355056	AdditiveExpression	dot_ptr + 1		9354548	1		+			
ANR	9355057	Identifier	dot_ptr		9354548	0					
ANR	9355058	PrimaryExpression	1		9354548	1					
ANR	9355059	Condition	n > 0	914:49:18929:18933	9354548	1	True				
ANR	9355060	RelationalExpression	n > 0		9354548	0		>			
ANR	9355061	Identifier	n		9354548	0					
ANR	9355062	PrimaryExpression	0		9354548	1					
ANR	9355063	Expression	"n -- , ptr += 2"	914:56:18936:18949	9354548	2	True				
ANR	9355064	PostIncDecOperationExpression	n --		9354548	0					
ANR	9355065	Identifier	n		9354548	0					
ANR	9355066	IncDec	--		9354548	1					
ANR	9355067	AssignmentExpression	ptr += 2		9354548	1		+=			
ANR	9355068	Identifier	ptr		9354548	0					
ANR	9355069	PrimaryExpression	2		9354548	1					
ANR	9355070	CompoundStatement		136:6:3080:3080	9354548	3					
ANR	9355071	ExpressionStatement	putchar ( 0 )	916:1:18961:18971	9354548	0	True				
ANR	9355072	CallExpression	putchar ( 0 )		9354548	0					
ANR	9355073	Callee	putchar		9354548	0					
ANR	9355074	Identifier	putchar		9354548	0					
ANR	9355075	ArgumentList	0		9354548	1					
ANR	9355076	Argument	0		9354548	0					
ANR	9355077	PrimaryExpression	0		9354548	0					
ANR	9355078	ExpressionStatement	putchar ( * ptr )	917:8:18981:18994	9354548	1	True				
ANR	9355079	CallExpression	putchar ( * ptr )		9354548	0					
ANR	9355080	Callee	putchar		9354548	0					
ANR	9355081	Identifier	putchar		9354548	0					
ANR	9355082	ArgumentList	* ptr		9354548	1					
ANR	9355083	Argument	* ptr		9354548	0					
ANR	9355084	UnaryOperationExpression	* ptr		9354548	0					
ANR	9355085	UnaryOperator	*		9354548	0					
ANR	9355086	Identifier	ptr		9354548	1					
ANR	9355087	ElseStatement	else		9354548	0					
ANR	9355088	ExpressionStatement	"pwrite ( dot_ptr , dot_count )"	921:6:19025:19051	9354548	0	True				
ANR	9355089	CallExpression	"pwrite ( dot_ptr , dot_count )"		9354548	0					
ANR	9355090	Callee	pwrite		9354548	0					
ANR	9355091	Identifier	pwrite		9354548	0					
ANR	9355092	ArgumentList	dot_ptr		9354548	1					
ANR	9355093	Argument	dot_ptr		9354548	0					
ANR	9355094	Identifier	dot_ptr		9354548	0					
ANR	9355095	Argument	dot_count		9354548	1					
ANR	9355096	Identifier	dot_count		9354548	0					
ANR	9355097	ExpressionStatement	putchar ( '\\n' )	928:2:19092:19105	9354548	5	True				
ANR	9355098	CallExpression	putchar ( '\\n' )		9354548	0					
ANR	9355099	Callee	putchar		9354548	0					
ANR	9355100	Identifier	putchar		9354548	0					
ANR	9355101	ArgumentList	'\\n'		9354548	1					
ANR	9355102	Argument	'\\n'		9354548	0					
ANR	9355103	PrimaryExpression	'\\n'		9354548	0					
ANR	9355104	IfStatement	if ( Shingling && row == 1 )		9354548	6					
ANR	9355105	Condition	Shingling && row == 1	930:6:19114:19134	9354548	0	True				
ANR	9355106	AndExpression	Shingling && row == 1		9354548	0		&&			
ANR	9355107	Identifier	Shingling		9354548	0					
ANR	9355108	EqualityExpression	row == 1		9354548	1		==			
ANR	9355109	Identifier	row		9354548	0					
ANR	9355110	PrimaryExpression	1		9354548	1					
ANR	9355111	CompoundStatement		152:2:3261:3261	9354548	1					
ANR	9355112	IfStatement	if ( header -> HWResolution [ 1 ] == 360 )		9354548	0					
ANR	9355113	Condition	header -> HWResolution [ 1 ] == 360	932:8:19149:19178	9354548	0	True				
ANR	9355114	EqualityExpression	header -> HWResolution [ 1 ] == 360		9354548	0		==			
ANR	9355115	ArrayIndexing	header -> HWResolution [ 1 ]		9354548	0					
ANR	9355116	PtrMemberAccess	header -> HWResolution		9354548	0					
ANR	9355117	Identifier	header		9354548	0					
ANR	9355118	Identifier	HWResolution		9354548	1					
ANR	9355119	PrimaryExpression	1		9354548	1					
ANR	9355120	PrimaryExpression	360		9354548	1					
ANR	9355121	ExpressionStatement	"printf ( ""\\n\\n\\n\\n"" )"	933:6:19187:19205	9354548	1	True				
ANR	9355122	CallExpression	"printf ( ""\\n\\n\\n\\n"" )"		9354548	0					
ANR	9355123	Callee	printf		9354548	0					
ANR	9355124	Identifier	printf		9354548	0					
ANR	9355125	ArgumentList	"""\\n\\n\\n\\n"""		9354548	1					
ANR	9355126	Argument	"""\\n\\n\\n\\n"""		9354548	0					
ANR	9355127	PrimaryExpression	"""\\n\\n\\n\\n"""		9354548	0					
ANR	9355128	ElseStatement	else		9354548	0					
ANR	9355129	ExpressionStatement	"printf ( ""\\n"" )"	935:6:19222:19234	9354548	0	True				
ANR	9355130	CallExpression	"printf ( ""\\n"" )"		9354548	0					
ANR	9355131	Callee	printf		9354548	0					
ANR	9355132	Identifier	printf		9354548	0					
ANR	9355133	ArgumentList	"""\\n"""		9354548	1					
ANR	9355134	Argument	"""\\n"""		9354548	0					
ANR	9355135	PrimaryExpression	"""\\n"""		9354548	0					
ANR	9355136	ExpressionStatement	fflush ( stdout )	938:2:19243:19257	9354548	7	True				
ANR	9355137	CallExpression	fflush ( stdout )		9354548	0					
ANR	9355138	Callee	fflush		9354548	0					
ANR	9355139	Identifier	fflush		9354548	0					
ANR	9355140	ArgumentList	stdout		9354548	1					
ANR	9355141	Argument	stdout		9354548	0					
ANR	9355142	Identifier	stdout		9354548	0					
ANR	9355143	ExpressionStatement	"memset ( LineBuffers [ row ] , 0 , header -> cupsWidth * DotBytes )"	944:2:19296:19353	9354548	8	True				
ANR	9355144	CallExpression	"memset ( LineBuffers [ row ] , 0 , header -> cupsWidth * DotBytes )"		9354548	0					
ANR	9355145	Callee	memset		9354548	0					
ANR	9355146	Identifier	memset		9354548	0					
ANR	9355147	ArgumentList	LineBuffers [ row ]		9354548	1					
ANR	9355148	Argument	LineBuffers [ row ]		9354548	0					
ANR	9355149	ArrayIndexing	LineBuffers [ row ]		9354548	0					
ANR	9355150	Identifier	LineBuffers		9354548	0					
ANR	9355151	Identifier	row		9354548	1					
ANR	9355152	Argument	0		9354548	1					
ANR	9355153	PrimaryExpression	0		9354548	0					
ANR	9355154	Argument	header -> cupsWidth * DotBytes		9354548	2					
ANR	9355155	MultiplicativeExpression	header -> cupsWidth * DotBytes		9354548	0		*			
ANR	9355156	PtrMemberAccess	header -> cupsWidth		9354548	0					
ANR	9355157	Identifier	header		9354548	0					
ANR	9355158	Identifier	cupsWidth		9354548	1					
ANR	9355159	Identifier	DotBytes		9354548	1					
ANR	9355160	ReturnType	void		9354548	1					
ANR	9355161	Identifier	OutputRows		9354548	2					
ANR	9355162	ParameterList	"const cups_page_header2_t * header , int row"		9354548	3					
ANR	9355163	Parameter	const cups_page_header2_t * header	778:4:15750:15782	9354548	0	True				
ANR	9355164	ParameterType	const cups_page_header2_t *		9354548	0					
ANR	9355165	Identifier	header		9354548	1					
ANR	9355166	Parameter	int row	779:4:15817:15844	9354548	1	True				
ANR	9355167	ParameterType	int		9354548	0					
ANR	9355168	Identifier	row		9354548	1					
ANR	9355169	CFGEntryNode	ENTRY		9354548		True				
ANR	9355170	CFGExitNode	EXIT		9354548		True				
ANR	9355171	Symbol	* row		9354548						
ANR	9355172	Symbol	* dot_count		9354548						
ANR	9355173	Symbol	stdout		9354548						
ANR	9355174	Symbol	* dot_ptr		9354548						
ANR	9355175	Symbol	LineCount		9354548						
ANR	9355176	Symbol	* LineBuffers		9354548						
ANR	9355177	Symbol	dot_ptr		9354548						
ANR	9355178	Symbol	header -> HWResolution		9354548						
ANR	9355179	Symbol	memcmp		9354548						
ANR	9355180	Symbol	* ptr		9354548						
ANR	9355181	Symbol	row		9354548						
ANR	9355182	Symbol	header -> cupsWidth		9354548						
ANR	9355183	Symbol	Shingling		9354548						
ANR	9355184	Symbol	i		9354548						
ANR	9355185	Symbol	dot_count		9354548						
ANR	9355186	Symbol	* * LineBuffers		9354548						
ANR	9355187	Symbol	LineBuffers		9354548						
ANR	9355188	Symbol	n		9354548						
ANR	9355189	Symbol	* * row		9354548						
ANR	9355190	Symbol	* header		9354548						
ANR	9355191	Symbol	* dot_min		9354548						
ANR	9355192	Symbol	ptr		9354548						
ANR	9355193	Symbol	* header -> HWResolution		9354548						
ANR	9355194	Symbol	* * header		9354548						
ANR	9355195	Symbol	DotBytes		9354548						
ANR	9355196	Symbol	dot_min		9354548						
ANR	9355197	Symbol	header		9354548						
ANR	9355198	Symbol	DotColumns		9354548						
ANR	9355199	Function	main	952:0:19418:23322							
ANR	9355200	FunctionDef	"main (int argc , char * argv [ ])"		9355199	0					
ANR	9355201	CompoundStatement		955:0:19564:23322	9355199	0					
ANR	9355202	IdentifierDeclStatement	int fd ;	956:2:19568:19576	9355199	0	True				
ANR	9355203	IdentifierDecl	fd		9355199	0					
ANR	9355204	IdentifierDeclType	int		9355199	0					
ANR	9355205	Identifier	fd		9355199	1					
ANR	9355206	IdentifierDeclStatement	cups_raster_t * ras ;	957:2:19603:19622	9355199	1	True				
ANR	9355207	IdentifierDecl	* ras		9355199	0					
ANR	9355208	IdentifierDeclType	cups_raster_t *		9355199	0					
ANR	9355209	Identifier	ras		9355199	1					
ANR	9355210	IdentifierDeclStatement	cups_page_header2_t header ;	958:2:19660:19686	9355199	2	True				
ANR	9355211	IdentifierDecl	header		9355199	0					
ANR	9355212	IdentifierDeclType	cups_page_header2_t		9355199	0					
ANR	9355213	Identifier	header		9355199	1					
ANR	9355214	IdentifierDeclStatement	ppd_file_t * ppd ;	959:2:19719:19735	9355199	3	True				
ANR	9355215	IdentifierDecl	* ppd		9355199	0					
ANR	9355216	IdentifierDeclType	ppd_file_t *		9355199	0					
ANR	9355217	Identifier	ppd		9355199	1					
ANR	9355218	IdentifierDeclStatement	int page ;	960:2:19755:19765	9355199	4	True				
ANR	9355219	IdentifierDecl	page		9355199	0					
ANR	9355220	IdentifierDeclType	int		9355199	0					
ANR	9355221	Identifier	page		9355199	1					
ANR	9355222	IdentifierDeclStatement	int y ;	961:2:19789:19796	9355199	5	True				
ANR	9355223	IdentifierDecl	y		9355199	0					
ANR	9355224	IdentifierDeclType	int		9355199	0					
ANR	9355225	Identifier	y		9355199	1					
ANR	9355226	IdentifierDeclStatement	struct sigaction action ;	963:2:19873:19896	9355199	6	True				
ANR	9355227	IdentifierDecl	action		9355199	0					
ANR	9355228	IdentifierDeclType	struct sigaction		9355199	0					
ANR	9355229	Identifier	action		9355199	1					
ANR	9355230	ExpressionStatement	"setbuf ( stderr , NULL )"	971:2:20039:20059	9355199	7	True				
ANR	9355231	CallExpression	"setbuf ( stderr , NULL )"		9355199	0					
ANR	9355232	Callee	setbuf		9355199	0					
ANR	9355233	Identifier	setbuf		9355199	0					
ANR	9355234	ArgumentList	stderr		9355199	1					
ANR	9355235	Argument	stderr		9355199	0					
ANR	9355236	Identifier	stderr		9355199	0					
ANR	9355237	Argument	NULL		9355199	1					
ANR	9355238	Identifier	NULL		9355199	0					
ANR	9355239	IfStatement	if ( argc < 6 || argc > 7 )		9355199	8					
ANR	9355240	Condition	argc < 6 || argc > 7	977:6:20104:20123	9355199	0	True				
ANR	9355241	OrExpression	argc < 6 || argc > 7		9355199	0		||			
ANR	9355242	RelationalExpression	argc < 6		9355199	0		<			
ANR	9355243	Identifier	argc		9355199	0					
ANR	9355244	PrimaryExpression	6		9355199	1					
ANR	9355245	RelationalExpression	argc > 7		9355199	1		>			
ANR	9355246	Identifier	argc		9355199	0					
ANR	9355247	PrimaryExpression	7		9355199	1					
ANR	9355248	CompoundStatement		24:2:563:563	9355199	1					
ANR	9355249	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""%s job-id user title copies options [file]"" ) , ""rastertoepson"" )"	984:4:20242:20395	9355199	0	True				
ANR	9355250	CallExpression	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""%s job-id user title copies options [file]"" ) , ""rastertoepson"" )"		9355199	0					
ANR	9355251	Callee	_cupsLangPrintFilter		9355199	0					
ANR	9355252	Identifier	_cupsLangPrintFilter		9355199	0					
ANR	9355253	ArgumentList	stderr		9355199	1					
ANR	9355254	Argument	stderr		9355199	0					
ANR	9355255	Identifier	stderr		9355199	0					
ANR	9355256	Argument	"""ERROR"""		9355199	1					
ANR	9355257	PrimaryExpression	"""ERROR"""		9355199	0					
ANR	9355258	Argument	"_ ( ""%s job-id user title copies options [file]"" )"		9355199	2					
ANR	9355259	CallExpression	"_ ( ""%s job-id user title copies options [file]"" )"		9355199	0					
ANR	9355260	Callee	_		9355199	0					
ANR	9355261	Identifier	_		9355199	0					
ANR	9355262	ArgumentList	"""%s job-id user title copies options [file]"""		9355199	1					
ANR	9355263	Argument	"""%s job-id user title copies options [file]"""		9355199	0					
ANR	9355264	PrimaryExpression	"""%s job-id user title copies options [file]"""		9355199	0					
ANR	9355265	Argument	"""rastertoepson"""		9355199	3					
ANR	9355266	PrimaryExpression	"""rastertoepson"""		9355199	0					
ANR	9355267	ReturnStatement	return ( 1 ) ;	987:4:20401:20411	9355199	1	True				
ANR	9355268	PrimaryExpression	1		9355199	0					
ANR	9355269	IfStatement	if ( argc == 7 )		9355199	9					
ANR	9355270	Condition	argc == 7	994:6:20462:20470	9355199	0	True				
ANR	9355271	EqualityExpression	argc == 7		9355199	0		==			
ANR	9355272	Identifier	argc		9355199	0					
ANR	9355273	PrimaryExpression	7		9355199	1					
ANR	9355274	CompoundStatement		41:2:910:910	9355199	1					
ANR	9355275	IfStatement	"if ( ( fd = open ( argv [ 6 ] , O_RDONLY ) ) == - 1 )"		9355199	0					
ANR	9355276	Condition	"( fd = open ( argv [ 6 ] , O_RDONLY ) ) == - 1"	996:8:20485:20520	9355199	0	True				
ANR	9355277	EqualityExpression	"( fd = open ( argv [ 6 ] , O_RDONLY ) ) == - 1"		9355199	0		==			
ANR	9355278	AssignmentExpression	"fd = open ( argv [ 6 ] , O_RDONLY )"		9355199	0		=			
ANR	9355279	Identifier	fd		9355199	0					
ANR	9355280	CallExpression	"open ( argv [ 6 ] , O_RDONLY )"		9355199	1					
ANR	9355281	Callee	open		9355199	0					
ANR	9355282	Identifier	open		9355199	0					
ANR	9355283	ArgumentList	argv [ 6 ]		9355199	1					
ANR	9355284	Argument	argv [ 6 ]		9355199	0					
ANR	9355285	ArrayIndexing	argv [ 6 ]		9355199	0					
ANR	9355286	Identifier	argv		9355199	0					
ANR	9355287	PrimaryExpression	6		9355199	1					
ANR	9355288	Argument	O_RDONLY		9355199	1					
ANR	9355289	Identifier	O_RDONLY		9355199	0					
ANR	9355290	UnaryOperationExpression	- 1		9355199	1					
ANR	9355291	UnaryOperator	-		9355199	0					
ANR	9355292	PrimaryExpression	1		9355199	1					
ANR	9355293	CompoundStatement		43:4:962:962	9355199	1					
ANR	9355294	ExpressionStatement	"_cupsLangPrintError ( ""ERROR"" , _ ( ""Unable to open raster file"" ) )"	998:6:20535:20596	9355199	0	True				
ANR	9355295	CallExpression	"_cupsLangPrintError ( ""ERROR"" , _ ( ""Unable to open raster file"" ) )"		9355199	0					
ANR	9355296	Callee	_cupsLangPrintError		9355199	0					
ANR	9355297	Identifier	_cupsLangPrintError		9355199	0					
ANR	9355298	ArgumentList	"""ERROR"""		9355199	1					
ANR	9355299	Argument	"""ERROR"""		9355199	0					
ANR	9355300	PrimaryExpression	"""ERROR"""		9355199	0					
ANR	9355301	Argument	"_ ( ""Unable to open raster file"" )"		9355199	1					
ANR	9355302	CallExpression	"_ ( ""Unable to open raster file"" )"		9355199	0					
ANR	9355303	Callee	_		9355199	0					
ANR	9355304	Identifier	_		9355199	0					
ANR	9355305	ArgumentList	"""Unable to open raster file"""		9355199	1					
ANR	9355306	Argument	"""Unable to open raster file"""		9355199	0					
ANR	9355307	PrimaryExpression	"""Unable to open raster file"""		9355199	0					
ANR	9355308	ExpressionStatement	sleep ( 1 )	999:6:20604:20612	9355199	1	True				
ANR	9355309	CallExpression	sleep ( 1 )		9355199	0					
ANR	9355310	Callee	sleep		9355199	0					
ANR	9355311	Identifier	sleep		9355199	0					
ANR	9355312	ArgumentList	1		9355199	1					
ANR	9355313	Argument	1		9355199	0					
ANR	9355314	PrimaryExpression	1		9355199	0					
ANR	9355315	ReturnStatement	return ( 1 ) ;	1000:6:20620:20630	9355199	2	True				
ANR	9355316	PrimaryExpression	1		9355199	0					
ANR	9355317	ElseStatement	else		9355199	0					
ANR	9355318	ExpressionStatement	fd = 0	1004:4:20653:20659	9355199	0	True				
ANR	9355319	AssignmentExpression	fd = 0		9355199	0		=			
ANR	9355320	Identifier	fd		9355199	0					
ANR	9355321	PrimaryExpression	0		9355199	1					
ANR	9355322	ExpressionStatement	"ras = cupsRasterOpen ( fd , CUPS_RASTER_READ )"	1006:2:20664:20706	9355199	10	True				
ANR	9355323	AssignmentExpression	"ras = cupsRasterOpen ( fd , CUPS_RASTER_READ )"		9355199	0		=			
ANR	9355324	Identifier	ras		9355199	0					
ANR	9355325	CallExpression	"cupsRasterOpen ( fd , CUPS_RASTER_READ )"		9355199	1					
ANR	9355326	Callee	cupsRasterOpen		9355199	0					
ANR	9355327	Identifier	cupsRasterOpen		9355199	0					
ANR	9355328	ArgumentList	fd		9355199	1					
ANR	9355329	Argument	fd		9355199	0					
ANR	9355330	Identifier	fd		9355199	0					
ANR	9355331	Argument	CUPS_RASTER_READ		9355199	1					
ANR	9355332	Identifier	CUPS_RASTER_READ		9355199	0					
ANR	9355333	ExpressionStatement	Canceled = 0	1013:2:20806:20818	9355199	11	True				
ANR	9355334	AssignmentExpression	Canceled = 0		9355199	0		=			
ANR	9355335	Identifier	Canceled		9355199	0					
ANR	9355336	PrimaryExpression	0		9355199	1					
ANR	9355337	ExpressionStatement	"sigset ( SIGTERM , CancelJob )"	1016:2:20894:20920	9355199	12	True				
ANR	9355338	CallExpression	"sigset ( SIGTERM , CancelJob )"		9355199	0					
ANR	9355339	Callee	sigset		9355199	0					
ANR	9355340	Identifier	sigset		9355199	0					
ANR	9355341	ArgumentList	SIGTERM		9355199	1					
ANR	9355342	Argument	SIGTERM		9355199	0					
ANR	9355343	Identifier	SIGTERM		9355199	0					
ANR	9355344	Argument	CancelJob		9355199	1					
ANR	9355345	Identifier	CancelJob		9355199	0					
ANR	9355346	ExpressionStatement	"ppd = ppdOpenFile ( getenv ( ""PPD"" ) )"	1031:2:21202:21234	9355199	13	True				
ANR	9355347	AssignmentExpression	"ppd = ppdOpenFile ( getenv ( ""PPD"" ) )"		9355199	0		=			
ANR	9355348	Identifier	ppd		9355199	0					
ANR	9355349	CallExpression	"ppdOpenFile ( getenv ( ""PPD"" ) )"		9355199	1					
ANR	9355350	Callee	ppdOpenFile		9355199	0					
ANR	9355351	Identifier	ppdOpenFile		9355199	0					
ANR	9355352	ArgumentList	"getenv ( ""PPD"" )"		9355199	1					
ANR	9355353	Argument	"getenv ( ""PPD"" )"		9355199	0					
ANR	9355354	CallExpression	"getenv ( ""PPD"" )"		9355199	0					
ANR	9355355	Callee	getenv		9355199	0					
ANR	9355356	Identifier	getenv		9355199	0					
ANR	9355357	ArgumentList	"""PPD"""		9355199	1					
ANR	9355358	Argument	"""PPD"""		9355199	0					
ANR	9355359	PrimaryExpression	"""PPD"""		9355199	0					
ANR	9355360	IfStatement	if ( ! ppd )		9355199	14					
ANR	9355361	Condition	! ppd	1032:6:21242:21245	9355199	0	True				
ANR	9355362	UnaryOperationExpression	! ppd		9355199	0					
ANR	9355363	UnaryOperator	!		9355199	0					
ANR	9355364	Identifier	ppd		9355199	1					
ANR	9355365	CompoundStatement		81:4:1733:1746	9355199	1					
ANR	9355366	IdentifierDeclStatement	ppd_status_t status ;	1034:4:21256:21275	9355199	0	True				
ANR	9355367	IdentifierDecl	status		9355199	0					
ANR	9355368	IdentifierDeclType	ppd_status_t		9355199	0					
ANR	9355369	Identifier	status		9355199	1					
ANR	9355370	IdentifierDeclStatement	int linenum ;	1035:4:21298:21311	9355199	1	True				
ANR	9355371	IdentifierDecl	linenum		9355199	0					
ANR	9355372	IdentifierDeclType	int		9355199	0					
ANR	9355373	Identifier	linenum		9355199	1					
ANR	9355374	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""The PPD file could not be opened."" ) )"	1037:4:21336:21438	9355199	2	True				
ANR	9355375	CallExpression	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""The PPD file could not be opened."" ) )"		9355199	0					
ANR	9355376	Callee	_cupsLangPrintFilter		9355199	0					
ANR	9355377	Identifier	_cupsLangPrintFilter		9355199	0					
ANR	9355378	ArgumentList	stderr		9355199	1					
ANR	9355379	Argument	stderr		9355199	0					
ANR	9355380	Identifier	stderr		9355199	0					
ANR	9355381	Argument	"""ERROR"""		9355199	1					
ANR	9355382	PrimaryExpression	"""ERROR"""		9355199	0					
ANR	9355383	Argument	"_ ( ""The PPD file could not be opened."" )"		9355199	2					
ANR	9355384	CallExpression	"_ ( ""The PPD file could not be opened."" )"		9355199	0					
ANR	9355385	Callee	_		9355199	0					
ANR	9355386	Identifier	_		9355199	0					
ANR	9355387	ArgumentList	"""The PPD file could not be opened."""		9355199	1					
ANR	9355388	Argument	"""The PPD file could not be opened."""		9355199	0					
ANR	9355389	PrimaryExpression	"""The PPD file could not be opened."""		9355199	0					
ANR	9355390	ExpressionStatement	status = ppdLastError ( & linenum )	1040:4:21445:21476	9355199	3	True				
ANR	9355391	AssignmentExpression	status = ppdLastError ( & linenum )		9355199	0		=			
ANR	9355392	Identifier	status		9355199	0					
ANR	9355393	CallExpression	ppdLastError ( & linenum )		9355199	1					
ANR	9355394	Callee	ppdLastError		9355199	0					
ANR	9355395	Identifier	ppdLastError		9355199	0					
ANR	9355396	ArgumentList	& linenum		9355199	1					
ANR	9355397	Argument	& linenum		9355199	0					
ANR	9355398	UnaryOperationExpression	& linenum		9355199	0					
ANR	9355399	UnaryOperator	&		9355199	0					
ANR	9355400	Identifier	linenum		9355199	1					
ANR	9355401	ExpressionStatement	"fprintf ( stderr , ""DEBUG: %s on line %d.\\n"" , ppdErrorString ( status ) , linenum )"	1042:4:21483:21558	9355199	4	True				
ANR	9355402	CallExpression	"fprintf ( stderr , ""DEBUG: %s on line %d.\\n"" , ppdErrorString ( status ) , linenum )"		9355199	0					
ANR	9355403	Callee	fprintf		9355199	0					
ANR	9355404	Identifier	fprintf		9355199	0					
ANR	9355405	ArgumentList	stderr		9355199	1					
ANR	9355406	Argument	stderr		9355199	0					
ANR	9355407	Identifier	stderr		9355199	0					
ANR	9355408	Argument	"""DEBUG: %s on line %d.\\n"""		9355199	1					
ANR	9355409	PrimaryExpression	"""DEBUG: %s on line %d.\\n"""		9355199	0					
ANR	9355410	Argument	ppdErrorString ( status )		9355199	2					
ANR	9355411	CallExpression	ppdErrorString ( status )		9355199	0					
ANR	9355412	Callee	ppdErrorString		9355199	0					
ANR	9355413	Identifier	ppdErrorString		9355199	0					
ANR	9355414	ArgumentList	status		9355199	1					
ANR	9355415	Argument	status		9355199	0					
ANR	9355416	Identifier	status		9355199	0					
ANR	9355417	Argument	linenum		9355199	3					
ANR	9355418	Identifier	linenum		9355199	0					
ANR	9355419	ReturnStatement	return ( 1 ) ;	1044:4:21565:21575	9355199	5	True				
ANR	9355420	PrimaryExpression	1		9355199	0					
ANR	9355421	ExpressionStatement	Model = ppd -> model_number	1047:2:21584:21609	9355199	15	True				
ANR	9355422	AssignmentExpression	Model = ppd -> model_number		9355199	0		=			
ANR	9355423	Identifier	Model		9355199	0					
ANR	9355424	PtrMemberAccess	ppd -> model_number		9355199	1					
ANR	9355425	Identifier	ppd		9355199	0					
ANR	9355426	Identifier	model_number		9355199	1					
ANR	9355427	ExpressionStatement	Setup ( )	1049:2:21614:21621	9355199	16	True				
ANR	9355428	CallExpression	Setup ( )		9355199	0					
ANR	9355429	Callee	Setup		9355199	0					
ANR	9355430	Identifier	Setup		9355199	0					
ANR	9355431	ArgumentList			9355199	1					
ANR	9355432	ExpressionStatement	page = 0	1055:2:21667:21675	9355199	17	True				
ANR	9355433	AssignmentExpression	page = 0		9355199	0		=			
ANR	9355434	Identifier	page		9355199	0					
ANR	9355435	PrimaryExpression	0		9355199	1					
ANR	9355436	WhileStatement	"while ( cupsRasterReadHeader2 ( ras , & header ) )"		9355199	18					
ANR	9355437	Condition	"cupsRasterReadHeader2 ( ras , & header )"	1057:9:21687:21721	9355199	0	True				
ANR	9355438	CallExpression	"cupsRasterReadHeader2 ( ras , & header )"		9355199	0					
ANR	9355439	Callee	cupsRasterReadHeader2		9355199	0					
ANR	9355440	Identifier	cupsRasterReadHeader2		9355199	0					
ANR	9355441	ArgumentList	ras		9355199	1					
ANR	9355442	Argument	ras		9355199	0					
ANR	9355443	Identifier	ras		9355199	0					
ANR	9355444	Argument	& header		9355199	1					
ANR	9355445	UnaryOperationExpression	& header		9355199	0					
ANR	9355446	UnaryOperator	&		9355199	0					
ANR	9355447	Identifier	header		9355199	1					
ANR	9355448	CompoundStatement		104:2:2161:2161	9355199	1					
ANR	9355449	IfStatement	if ( Canceled )		9355199	0					
ANR	9355450	Condition	Canceled	1063:8:21822:21829	9355199	0	True				
ANR	9355451	Identifier	Canceled		9355199	0					
ANR	9355452	BreakStatement	break ;	1064:6:21838:21843	9355199	1	True				
ANR	9355453	ExpressionStatement	page ++	1066:4:21850:21857	9355199	1	True				
ANR	9355454	PostIncDecOperationExpression	page ++		9355199	0					
ANR	9355455	Identifier	page		9355199	0					
ANR	9355456	IncDec	++		9355199	1					
ANR	9355457	ExpressionStatement	"fprintf ( stderr , ""PAGE: %d %d\\n"" , page , header . NumCopies )"	1068:4:21864:21920	9355199	2	True				
ANR	9355458	CallExpression	"fprintf ( stderr , ""PAGE: %d %d\\n"" , page , header . NumCopies )"		9355199	0					
ANR	9355459	Callee	fprintf		9355199	0					
ANR	9355460	Identifier	fprintf		9355199	0					
ANR	9355461	ArgumentList	stderr		9355199	1					
ANR	9355462	Argument	stderr		9355199	0					
ANR	9355463	Identifier	stderr		9355199	0					
ANR	9355464	Argument	"""PAGE: %d %d\\n"""		9355199	1					
ANR	9355465	PrimaryExpression	"""PAGE: %d %d\\n"""		9355199	0					
ANR	9355466	Argument	page		9355199	2					
ANR	9355467	Identifier	page		9355199	0					
ANR	9355468	Argument	header . NumCopies		9355199	3					
ANR	9355469	MemberAccess	header . NumCopies		9355199	0					
ANR	9355470	Identifier	header		9355199	0					
ANR	9355471	Identifier	NumCopies		9355199	1					
ANR	9355472	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Starting page %d."" ) , page )"	1069:4:21926:21992	9355199	3	True				
ANR	9355473	CallExpression	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Starting page %d."" ) , page )"		9355199	0					
ANR	9355474	Callee	_cupsLangPrintFilter		9355199	0					
ANR	9355475	Identifier	_cupsLangPrintFilter		9355199	0					
ANR	9355476	ArgumentList	stderr		9355199	1					
ANR	9355477	Argument	stderr		9355199	0					
ANR	9355478	Identifier	stderr		9355199	0					
ANR	9355479	Argument	"""INFO"""		9355199	1					
ANR	9355480	PrimaryExpression	"""INFO"""		9355199	0					
ANR	9355481	Argument	"_ ( ""Starting page %d."" )"		9355199	2					
ANR	9355482	CallExpression	"_ ( ""Starting page %d."" )"		9355199	0					
ANR	9355483	Callee	_		9355199	0					
ANR	9355484	Identifier	_		9355199	0					
ANR	9355485	ArgumentList	"""Starting page %d."""		9355199	1					
ANR	9355486	Argument	"""Starting page %d."""		9355199	0					
ANR	9355487	PrimaryExpression	"""Starting page %d."""		9355199	0					
ANR	9355488	Argument	page		9355199	3					
ANR	9355489	Identifier	page		9355199	0					
ANR	9355490	ExpressionStatement	"StartPage ( ppd , & header )"	1075:4:22037:22060	9355199	4	True				
ANR	9355491	CallExpression	"StartPage ( ppd , & header )"		9355199	0					
ANR	9355492	Callee	StartPage		9355199	0					
ANR	9355493	Identifier	StartPage		9355199	0					
ANR	9355494	ArgumentList	ppd		9355199	1					
ANR	9355495	Argument	ppd		9355199	0					
ANR	9355496	Identifier	ppd		9355199	0					
ANR	9355497	Argument	& header		9355199	1					
ANR	9355498	UnaryOperationExpression	& header		9355199	0					
ANR	9355499	UnaryOperator	&		9355199	0					
ANR	9355500	Identifier	header		9355199	1					
ANR	9355501	ForStatement	for ( y = 0 ; y < header . cupsHeight ; y ++ )		9355199	5					
ANR	9355502	ForInit	y = 0 ;	1081:9:22126:22131	9355199	0	True				
ANR	9355503	AssignmentExpression	y = 0		9355199	0		=			
ANR	9355504	Identifier	y		9355199	0					
ANR	9355505	PrimaryExpression	0		9355199	1					
ANR	9355506	Condition	y < header . cupsHeight	1081:16:22133:22153	9355199	1	True				
ANR	9355507	RelationalExpression	y < header . cupsHeight		9355199	0		<			
ANR	9355508	Identifier	y		9355199	0					
ANR	9355509	MemberAccess	header . cupsHeight		9355199	1					
ANR	9355510	Identifier	header		9355199	0					
ANR	9355511	Identifier	cupsHeight		9355199	1					
ANR	9355512	PostIncDecOperationExpression	y ++	1081:39:22156:22159	9355199	2	True				
ANR	9355513	Identifier	y		9355199	0					
ANR	9355514	IncDec	++		9355199	1					
ANR	9355515	CompoundStatement		128:4:2601:2601	9355199	3					
ANR	9355516	IfStatement	if ( Canceled )		9355199	0					
ANR	9355517	Condition	Canceled	1087:10:22252:22259	9355199	0	True				
ANR	9355518	Identifier	Canceled		9355199	0					
ANR	9355519	BreakStatement	break ;	1088:1:22263:22268	9355199	1	True				
ANR	9355520	IfStatement	if ( ( y & 127 ) == 0 )		9355199	1					
ANR	9355521	Condition	( y & 127 ) == 0	1090:10:22281:22294	9355199	0	True				
ANR	9355522	EqualityExpression	( y & 127 ) == 0		9355199	0		==			
ANR	9355523	BitAndExpression	y & 127		9355199	0		&			
ANR	9355524	Identifier	y		9355199	0					
ANR	9355525	PrimaryExpression	127		9355199	1					
ANR	9355526	PrimaryExpression	0		9355199	1					
ANR	9355527	CompoundStatement		137:6:2738:2738	9355199	1					
ANR	9355528	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Printing page %d, %d%% complete."" ) , page , 100 * y / header . cupsHeight )"	1092:8:22313:22453	9355199	0	True				
ANR	9355529	CallExpression	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Printing page %d, %d%% complete."" ) , page , 100 * y / header . cupsHeight )"		9355199	0					
ANR	9355530	Callee	_cupsLangPrintFilter		9355199	0					
ANR	9355531	Identifier	_cupsLangPrintFilter		9355199	0					
ANR	9355532	ArgumentList	stderr		9355199	1					
ANR	9355533	Argument	stderr		9355199	0					
ANR	9355534	Identifier	stderr		9355199	0					
ANR	9355535	Argument	"""INFO"""		9355199	1					
ANR	9355536	PrimaryExpression	"""INFO"""		9355199	0					
ANR	9355537	Argument	"_ ( ""Printing page %d, %d%% complete."" )"		9355199	2					
ANR	9355538	CallExpression	"_ ( ""Printing page %d, %d%% complete."" )"		9355199	0					
ANR	9355539	Callee	_		9355199	0					
ANR	9355540	Identifier	_		9355199	0					
ANR	9355541	ArgumentList	"""Printing page %d, %d%% complete."""		9355199	1					
ANR	9355542	Argument	"""Printing page %d, %d%% complete."""		9355199	0					
ANR	9355543	PrimaryExpression	"""Printing page %d, %d%% complete."""		9355199	0					
ANR	9355544	Argument	page		9355199	3					
ANR	9355545	Identifier	page		9355199	0					
ANR	9355546	Argument	100 * y / header . cupsHeight		9355199	4					
ANR	9355547	MultiplicativeExpression	100 * y / header . cupsHeight		9355199	0		*			
ANR	9355548	PrimaryExpression	100		9355199	0					
ANR	9355549	MultiplicativeExpression	y / header . cupsHeight		9355199	1		/			
ANR	9355550	Identifier	y		9355199	0					
ANR	9355551	MemberAccess	header . cupsHeight		9355199	1					
ANR	9355552	Identifier	header		9355199	0					
ANR	9355553	Identifier	cupsHeight		9355199	1					
ANR	9355554	ExpressionStatement	"fprintf ( stderr , ""ATTR: job-media-progress=%d\\n"" , 100 * y / header . cupsHeight )"	1095:8:22463:22542	9355199	1	True				
ANR	9355555	CallExpression	"fprintf ( stderr , ""ATTR: job-media-progress=%d\\n"" , 100 * y / header . cupsHeight )"		9355199	0					
ANR	9355556	Callee	fprintf		9355199	0					
ANR	9355557	Identifier	fprintf		9355199	0					
ANR	9355558	ArgumentList	stderr		9355199	1					
ANR	9355559	Argument	stderr		9355199	0					
ANR	9355560	Identifier	stderr		9355199	0					
ANR	9355561	Argument	"""ATTR: job-media-progress=%d\\n"""		9355199	1					
ANR	9355562	PrimaryExpression	"""ATTR: job-media-progress=%d\\n"""		9355199	0					
ANR	9355563	Argument	100 * y / header . cupsHeight		9355199	2					
ANR	9355564	MultiplicativeExpression	100 * y / header . cupsHeight		9355199	0		*			
ANR	9355565	PrimaryExpression	100		9355199	0					
ANR	9355566	MultiplicativeExpression	y / header . cupsHeight		9355199	1		/			
ANR	9355567	Identifier	y		9355199	0					
ANR	9355568	MemberAccess	header . cupsHeight		9355199	1					
ANR	9355569	Identifier	header		9355199	0					
ANR	9355570	Identifier	cupsHeight		9355199	1					
ANR	9355571	IfStatement	"if ( cupsRasterReadPixels ( ras , Planes [ 0 ] , header . cupsBytesPerLine ) < 1 )"		9355199	2					
ANR	9355572	Condition	"cupsRasterReadPixels ( ras , Planes [ 0 ] , header . cupsBytesPerLine ) < 1"	1103:10:22616:22680	9355199	0	True				
ANR	9355573	RelationalExpression	"cupsRasterReadPixels ( ras , Planes [ 0 ] , header . cupsBytesPerLine ) < 1"		9355199	0		<			
ANR	9355574	CallExpression	"cupsRasterReadPixels ( ras , Planes [ 0 ] , header . cupsBytesPerLine )"		9355199	0					
ANR	9355575	Callee	cupsRasterReadPixels		9355199	0					
ANR	9355576	Identifier	cupsRasterReadPixels		9355199	0					
ANR	9355577	ArgumentList	ras		9355199	1					
ANR	9355578	Argument	ras		9355199	0					
ANR	9355579	Identifier	ras		9355199	0					
ANR	9355580	Argument	Planes [ 0 ]		9355199	1					
ANR	9355581	ArrayIndexing	Planes [ 0 ]		9355199	0					
ANR	9355582	Identifier	Planes		9355199	0					
ANR	9355583	PrimaryExpression	0		9355199	1					
ANR	9355584	Argument	header . cupsBytesPerLine		9355199	2					
ANR	9355585	MemberAccess	header . cupsBytesPerLine		9355199	0					
ANR	9355586	Identifier	header		9355199	0					
ANR	9355587	Identifier	cupsBytesPerLine		9355199	1					
ANR	9355588	PrimaryExpression	1		9355199	1					
ANR	9355589	BreakStatement	break ;	1104:8:22691:22696	9355199	1	True				
ANR	9355590	ExpressionStatement	OutputLine ( & header )	1110:6:22758:22777	9355199	3	True				
ANR	9355591	CallExpression	OutputLine ( & header )		9355199	0					
ANR	9355592	Callee	OutputLine		9355199	0					
ANR	9355593	Identifier	OutputLine		9355199	0					
ANR	9355594	ArgumentList	& header		9355199	1					
ANR	9355595	Argument	& header		9355199	0					
ANR	9355596	UnaryOperationExpression	& header		9355199	0					
ANR	9355597	UnaryOperator	&		9355199	0					
ANR	9355598	Identifier	header		9355199	1					
ANR	9355599	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Finished page %d."" ) , page )"	1117:4:22828:22894	9355199	6	True				
ANR	9355600	CallExpression	"_cupsLangPrintFilter ( stderr , ""INFO"" , _ ( ""Finished page %d."" ) , page )"		9355199	0					
ANR	9355601	Callee	_cupsLangPrintFilter		9355199	0					
ANR	9355602	Identifier	_cupsLangPrintFilter		9355199	0					
ANR	9355603	ArgumentList	stderr		9355199	1					
ANR	9355604	Argument	stderr		9355199	0					
ANR	9355605	Identifier	stderr		9355199	0					
ANR	9355606	Argument	"""INFO"""		9355199	1					
ANR	9355607	PrimaryExpression	"""INFO"""		9355199	0					
ANR	9355608	Argument	"_ ( ""Finished page %d."" )"		9355199	2					
ANR	9355609	CallExpression	"_ ( ""Finished page %d."" )"		9355199	0					
ANR	9355610	Callee	_		9355199	0					
ANR	9355611	Identifier	_		9355199	0					
ANR	9355612	ArgumentList	"""Finished page %d."""		9355199	1					
ANR	9355613	Argument	"""Finished page %d."""		9355199	0					
ANR	9355614	PrimaryExpression	"""Finished page %d."""		9355199	0					
ANR	9355615	Argument	page		9355199	3					
ANR	9355616	Identifier	page		9355199	0					
ANR	9355617	ExpressionStatement	EndPage ( & header )	1119:4:22901:22917	9355199	7	True				
ANR	9355618	CallExpression	EndPage ( & header )		9355199	0					
ANR	9355619	Callee	EndPage		9355199	0					
ANR	9355620	Identifier	EndPage		9355199	0					
ANR	9355621	ArgumentList	& header		9355199	1					
ANR	9355622	Argument	& header		9355199	0					
ANR	9355623	UnaryOperationExpression	& header		9355199	0					
ANR	9355624	UnaryOperator	&		9355199	0					
ANR	9355625	Identifier	header		9355199	1					
ANR	9355626	IfStatement	if ( Canceled )		9355199	8					
ANR	9355627	Condition	Canceled	1121:8:22928:22935	9355199	0	True				
ANR	9355628	Identifier	Canceled		9355199	0					
ANR	9355629	BreakStatement	break ;	1122:6:22944:22949	9355199	1	True				
ANR	9355630	ExpressionStatement	Shutdown ( )	1129:2:22996:23006	9355199	19	True				
ANR	9355631	CallExpression	Shutdown ( )		9355199	0					
ANR	9355632	Callee	Shutdown		9355199	0					
ANR	9355633	Identifier	Shutdown		9355199	0					
ANR	9355634	ArgumentList			9355199	1					
ANR	9355635	ExpressionStatement	ppdClose ( ppd )	1131:2:23011:23024	9355199	20	True				
ANR	9355636	CallExpression	ppdClose ( ppd )		9355199	0					
ANR	9355637	Callee	ppdClose		9355199	0					
ANR	9355638	Identifier	ppdClose		9355199	0					
ANR	9355639	ArgumentList	ppd		9355199	1					
ANR	9355640	Argument	ppd		9355199	0					
ANR	9355641	Identifier	ppd		9355199	0					
ANR	9355642	ExpressionStatement	cupsRasterClose ( ras )	1137:2:23070:23090	9355199	21	True				
ANR	9355643	CallExpression	cupsRasterClose ( ras )		9355199	0					
ANR	9355644	Callee	cupsRasterClose		9355199	0					
ANR	9355645	Identifier	cupsRasterClose		9355199	0					
ANR	9355646	ArgumentList	ras		9355199	1					
ANR	9355647	Argument	ras		9355199	0					
ANR	9355648	Identifier	ras		9355199	0					
ANR	9355649	IfStatement	if ( fd != 0 )		9355199	22					
ANR	9355650	Condition	fd != 0	1138:6:23098:23104	9355199	0	True				
ANR	9355651	EqualityExpression	fd != 0		9355199	0		!=			
ANR	9355652	Identifier	fd		9355199	0					
ANR	9355653	PrimaryExpression	0		9355199	1					
ANR	9355654	ExpressionStatement	close ( fd )	1139:4:23111:23120	9355199	1	True				
ANR	9355655	CallExpression	close ( fd )		9355199	0					
ANR	9355656	Callee	close		9355199	0					
ANR	9355657	Identifier	close		9355199	0					
ANR	9355658	ArgumentList	fd		9355199	1					
ANR	9355659	Argument	fd		9355199	0					
ANR	9355660	Identifier	fd		9355199	0					
ANR	9355661	IfStatement	if ( page == 0 )		9355199	23					
ANR	9355662	Condition	page == 0	1145:6:23194:23202	9355199	0	True				
ANR	9355663	EqualityExpression	page == 0		9355199	0		==			
ANR	9355664	Identifier	page		9355199	0					
ANR	9355665	PrimaryExpression	0		9355199	1					
ANR	9355666	CompoundStatement		192:2:3642:3642	9355199	1					
ANR	9355667	ExpressionStatement	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""No pages were found."" ) )"	1147:4:23213:23277	9355199	0	True				
ANR	9355668	CallExpression	"_cupsLangPrintFilter ( stderr , ""ERROR"" , _ ( ""No pages were found."" ) )"		9355199	0					
ANR	9355669	Callee	_cupsLangPrintFilter		9355199	0					
ANR	9355670	Identifier	_cupsLangPrintFilter		9355199	0					
ANR	9355671	ArgumentList	stderr		9355199	1					
ANR	9355672	Argument	stderr		9355199	0					
ANR	9355673	Identifier	stderr		9355199	0					
ANR	9355674	Argument	"""ERROR"""		9355199	1					
ANR	9355675	PrimaryExpression	"""ERROR"""		9355199	0					
ANR	9355676	Argument	"_ ( ""No pages were found."" )"		9355199	2					
ANR	9355677	CallExpression	"_ ( ""No pages were found."" )"		9355199	0					
ANR	9355678	Callee	_		9355199	0					
ANR	9355679	Identifier	_		9355199	0					
ANR	9355680	ArgumentList	"""No pages were found."""		9355199	1					
ANR	9355681	Argument	"""No pages were found."""		9355199	0					
ANR	9355682	PrimaryExpression	"""No pages were found."""		9355199	0					
ANR	9355683	ReturnStatement	return ( 1 ) ;	1148:4:23283:23293	9355199	1	True				
ANR	9355684	PrimaryExpression	1		9355199	0					
ANR	9355685	ElseStatement	else		9355199	0					
ANR	9355686	ReturnStatement	return ( 0 ) ;	1151:4:23310:23320	9355199	0	True				
ANR	9355687	PrimaryExpression	0		9355199	0					
ANR	9355688	ReturnType	int		9355199	1					
ANR	9355689	Identifier	main		9355199	2					
ANR	9355690	ParameterList	"int argc , char * argv [ ]"		9355199	3					
ANR	9355691	Parameter	int argc	953:5:19453:19461	9355199	0	True				
ANR	9355692	ParameterType	int		9355199	0					
ANR	9355693	Identifier	argc		9355199	1					
ANR	9355694	Parameter	char * argv [ ]	954:5:19515:19526	9355199	1	True				
ANR	9355695	ParameterType	char * [ ]		9355199	0					
ANR	9355696	Identifier	argv		9355199	1					
ANR	9355697	CFGEntryNode	ENTRY		9355199		True				
ANR	9355698	CFGExitNode	EXIT		9355199		True				
ANR	9355699	Symbol	ppdOpenFile		9355199						
ANR	9355700	Symbol	& linenum		9355199						
ANR	9355701	Symbol	ppdErrorString		9355199						
ANR	9355702	Symbol	* argv		9355199						
ANR	9355703	Symbol	header . cupsBytesPerLine		9355199						
ANR	9355704	Symbol	argv		9355199						
ANR	9355705	Symbol	* ppd		9355199						
ANR	9355706	Symbol	ppd -> model_number		9355199						
ANR	9355707	Symbol	header . NumCopies		9355199						
ANR	9355708	Symbol	Planes		9355199						
ANR	9355709	Symbol	action		9355199						
ANR	9355710	Symbol	linenum		9355199						
ANR	9355711	Symbol	CancelJob		9355199						
ANR	9355712	Symbol	SIGTERM		9355199						
ANR	9355713	Symbol	CUPS_RASTER_READ		9355199						
ANR	9355714	Symbol	_		9355199						
ANR	9355715	Symbol	getenv		9355199						
ANR	9355716	Symbol	argc		9355199						
ANR	9355717	Symbol	NULL		9355199						
ANR	9355718	Symbol	ras		9355199						
ANR	9355719	Symbol	ppd		9355199						
ANR	9355720	Symbol	cupsRasterReadHeader2		9355199						
ANR	9355721	Symbol	stderr		9355199						
ANR	9355722	Symbol	& header		9355199						
ANR	9355723	Symbol	header . cupsHeight		9355199						
ANR	9355724	Symbol	* Planes		9355199						
ANR	9355725	Symbol	O_RDONLY		9355199						
ANR	9355726	Symbol	cupsRasterOpen		9355199						
ANR	9355727	Symbol	ppdLastError		9355199						
ANR	9355728	Symbol	Model		9355199						
ANR	9355729	Symbol	header		9355199						
ANR	9355730	Symbol	y		9355199						
ANR	9355731	Symbol	page		9355199						
ANR	9355732	Symbol	Canceled		9355199						
ANR	9355733	Symbol	fd		9355199						
ANR	9355734	Symbol	open		9355199						
ANR	9355735	Symbol	cupsRasterReadPixels		9355199						
ANR	9355736	Symbol	status		9355199						
