command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10959035	File	data/converged/CVE-2018-16863_ghostpdl/zchar.c								
ANR	10959036	DeclStmt									
ANR	10959037	Decl							bool	"bool ( const gs_memory_t * mem , const ref * , const ref * , ref * )"	map_glyph_to_char
ANR	10959038	DeclStmt									
ANR	10959039	Decl							int	int ( i_ctx_t * )	finish_show
ANR	10959040	DeclStmt									
ANR	10959041	Decl							int	int ( i_ctx_t * )	op_show_cleanup
ANR	10959042	DeclStmt									
ANR	10959043	Decl							int	"int ( i_ctx_t * , uint , double * )"	op_show_return_width
ANR	10959044	DeclStmt									
ANR	10959045	Decl							int	int ( i_ctx_t * i_ctx_p )	zawidthshow
ANR	10959046	DeclStmt									
ANR	10959047	Decl							int	int ( i_ctx_t * i_ctx_p )	zwidthshow
ANR	10959048	Function	zshow	56:0:1561:2077							
ANR	10959049	FunctionDef	zshow (i_ctx_t * i_ctx_p)		10959048	0					
ANR	10959050	CompoundStatement		58:0:1596:2077	10959048	0					
ANR	10959051	IdentifierDeclStatement	os_ptr op = osp ;	59:4:1602:1617	10959048	0	True				
ANR	10959052	IdentifierDecl	op = osp		10959048	0					
ANR	10959053	IdentifierDeclType	os_ptr		10959048	0					
ANR	10959054	Identifier	op		10959048	1					
ANR	10959055	AssignmentExpression	op = osp		10959048	2		=			
ANR	10959056	Identifier	osp		10959048	0					
ANR	10959057	Identifier	osp		10959048	1					
ANR	10959058	IdentifierDeclStatement	gs_text_enum_t * penum ;	60:4:1623:1644	10959048	1	True				
ANR	10959059	IdentifierDecl	* penum		10959048	0					
ANR	10959060	IdentifierDeclType	gs_text_enum_t *		10959048	0					
ANR	10959061	Identifier	penum		10959048	1					
ANR	10959062	IdentifierDeclStatement	"int code = op_show_setup ( i_ctx_p , op ) ;"	61:4:1650:1687	10959048	2	True				
ANR	10959063	IdentifierDecl	"code = op_show_setup ( i_ctx_p , op )"		10959048	0					
ANR	10959064	IdentifierDeclType	int		10959048	0					
ANR	10959065	Identifier	code		10959048	1					
ANR	10959066	AssignmentExpression	"code = op_show_setup ( i_ctx_p , op )"		10959048	2		=			
ANR	10959067	Identifier	code		10959048	0					
ANR	10959068	CallExpression	"op_show_setup ( i_ctx_p , op )"		10959048	1					
ANR	10959069	Callee	op_show_setup		10959048	0					
ANR	10959070	Identifier	op_show_setup		10959048	0					
ANR	10959071	ArgumentList	i_ctx_p		10959048	1					
ANR	10959072	Argument	i_ctx_p		10959048	0					
ANR	10959073	Identifier	i_ctx_p		10959048	0					
ANR	10959074	Argument	op		10959048	1					
ANR	10959075	Identifier	op		10959048	0					
ANR	10959076	IfStatement	"if ( code != 0 || ( code = gs_show_begin ( igs , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0 )"		10959048	3					
ANR	10959077	Condition	"code != 0 || ( code = gs_show_begin ( igs , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0"	63:8:1698:1801	10959048	0	True				
ANR	10959078	OrExpression	"code != 0 || ( code = gs_show_begin ( igs , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0"		10959048	0		||			
ANR	10959079	EqualityExpression	code != 0		10959048	0		!=			
ANR	10959080	Identifier	code		10959048	0					
ANR	10959081	PrimaryExpression	0		10959048	1					
ANR	10959082	RelationalExpression	"( code = gs_show_begin ( igs , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0"		10959048	1		<			
ANR	10959083	AssignmentExpression	"code = gs_show_begin ( igs , op -> value . bytes , r_size ( op ) , imemory_local , & penum )"		10959048	0		=			
ANR	10959084	Identifier	code		10959048	0					
ANR	10959085	CallExpression	"gs_show_begin ( igs , op -> value . bytes , r_size ( op ) , imemory_local , & penum )"		10959048	1					
ANR	10959086	Callee	gs_show_begin		10959048	0					
ANR	10959087	Identifier	gs_show_begin		10959048	0					
ANR	10959088	ArgumentList	igs		10959048	1					
ANR	10959089	Argument	igs		10959048	0					
ANR	10959090	Identifier	igs		10959048	0					
ANR	10959091	Argument	op -> value . bytes		10959048	1					
ANR	10959092	MemberAccess	op -> value . bytes		10959048	0					
ANR	10959093	PtrMemberAccess	op -> value		10959048	0					
ANR	10959094	Identifier	op		10959048	0					
ANR	10959095	Identifier	value		10959048	1					
ANR	10959096	Identifier	bytes		10959048	1					
ANR	10959097	Argument	r_size ( op )		10959048	2					
ANR	10959098	CallExpression	r_size ( op )		10959048	0					
ANR	10959099	Callee	r_size		10959048	0					
ANR	10959100	Identifier	r_size		10959048	0					
ANR	10959101	ArgumentList	op		10959048	1					
ANR	10959102	Argument	op		10959048	0					
ANR	10959103	Identifier	op		10959048	0					
ANR	10959104	Argument	imemory_local		10959048	3					
ANR	10959105	Identifier	imemory_local		10959048	0					
ANR	10959106	Argument	& penum		10959048	4					
ANR	10959107	UnaryOperationExpression	& penum		10959048	0					
ANR	10959108	UnaryOperator	&		10959048	0					
ANR	10959109	Identifier	penum		10959048	1					
ANR	10959110	PrimaryExpression	0		10959048	1					
ANR	10959111	ReturnStatement	return code ;	65:8:1812:1823	10959048	1	True				
ANR	10959112	Identifier	code		10959048	0					
ANR	10959113	ExpressionStatement	* ( op_proc_t * ) & penum -> enum_client_data = zshow	66:4:1829:1875	10959048	4	True				
ANR	10959114	AssignmentExpression	* ( op_proc_t * ) & penum -> enum_client_data = zshow		10959048	0		=			
ANR	10959115	UnaryOperationExpression	* ( op_proc_t * ) & penum -> enum_client_data		10959048	0					
ANR	10959116	UnaryOperator	*		10959048	0					
ANR	10959117	CastExpression	( op_proc_t * ) & penum -> enum_client_data		10959048	1					
ANR	10959118	CastTarget	op_proc_t *		10959048	0					
ANR	10959119	UnaryOperationExpression	& penum -> enum_client_data		10959048	1					
ANR	10959120	UnaryOperator	&		10959048	0					
ANR	10959121	PtrMemberAccess	penum -> enum_client_data		10959048	1					
ANR	10959122	Identifier	penum		10959048	0					
ANR	10959123	Identifier	enum_client_data		10959048	1					
ANR	10959124	Identifier	zshow		10959048	1					
ANR	10959125	IfStatement	"if ( ( code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_show ) ) < 0 )"		10959048	5					
ANR	10959126	Condition	"( code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_show ) ) < 0"	67:8:1885:1949	10959048	0	True				
ANR	10959127	RelationalExpression	"( code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_show ) ) < 0"		10959048	0		<			
ANR	10959128	AssignmentExpression	"code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_show )"		10959048	0		=			
ANR	10959129	Identifier	code		10959048	0					
ANR	10959130	CallExpression	"op_show_finish_setup ( i_ctx_p , penum , 1 , finish_show )"		10959048	1					
ANR	10959131	Callee	op_show_finish_setup		10959048	0					
ANR	10959132	Identifier	op_show_finish_setup		10959048	0					
ANR	10959133	ArgumentList	i_ctx_p		10959048	1					
ANR	10959134	Argument	i_ctx_p		10959048	0					
ANR	10959135	Identifier	i_ctx_p		10959048	0					
ANR	10959136	Argument	penum		10959048	1					
ANR	10959137	Identifier	penum		10959048	0					
ANR	10959138	Argument	1		10959048	2					
ANR	10959139	PrimaryExpression	1		10959048	0					
ANR	10959140	Argument	finish_show		10959048	3					
ANR	10959141	Identifier	finish_show		10959048	0					
ANR	10959142	PrimaryExpression	0		10959048	1					
ANR	10959143	CompoundStatement		10:75:355:355	10959048	1					
ANR	10959144	ExpressionStatement	"ifree_object ( penum , ""op_show_enum_setup"" )"	68:8:1962:2003	10959048	0	True				
ANR	10959145	CallExpression	"ifree_object ( penum , ""op_show_enum_setup"" )"		10959048	0					
ANR	10959146	Callee	ifree_object		10959048	0					
ANR	10959147	Identifier	ifree_object		10959048	0					
ANR	10959148	ArgumentList	penum		10959048	1					
ANR	10959149	Argument	penum		10959048	0					
ANR	10959150	Identifier	penum		10959048	0					
ANR	10959151	Argument	"""op_show_enum_setup"""		10959048	1					
ANR	10959152	PrimaryExpression	"""op_show_enum_setup"""		10959048	0					
ANR	10959153	ReturnStatement	return code ;	69:8:2013:2024	10959048	1	True				
ANR	10959154	Identifier	code		10959048	0					
ANR	10959155	ReturnStatement	"return op_show_continue_pop ( i_ctx_p , 1 ) ;"	71:4:2036:2075	10959048	6	True				
ANR	10959156	CallExpression	"op_show_continue_pop ( i_ctx_p , 1 )"		10959048	0					
ANR	10959157	Callee	op_show_continue_pop		10959048	0					
ANR	10959158	Identifier	op_show_continue_pop		10959048	0					
ANR	10959159	ArgumentList	i_ctx_p		10959048	1					
ANR	10959160	Argument	i_ctx_p		10959048	0					
ANR	10959161	Identifier	i_ctx_p		10959048	0					
ANR	10959162	Argument	1		10959048	1					
ANR	10959163	PrimaryExpression	1		10959048	0					
ANR	10959164	ReturnType	static int		10959048	1					
ANR	10959165	Identifier	zshow		10959048	2					
ANR	10959166	ParameterList	i_ctx_t * i_ctx_p		10959048	3					
ANR	10959167	Parameter	i_ctx_t * i_ctx_p	57:6:1578:1593	10959048	0	True				
ANR	10959168	ParameterType	i_ctx_t *		10959048	0					
ANR	10959169	Identifier	i_ctx_p		10959048	1					
ANR	10959170	CFGEntryNode	ENTRY		10959048		True				
ANR	10959171	CFGExitNode	EXIT		10959048		True				
ANR	10959172	Symbol	op		10959048						
ANR	10959173	Symbol	* penum		10959048						
ANR	10959174	Symbol	& penum -> enum_client_data		10959048						
ANR	10959175	Symbol	op_show_continue_pop		10959048						
ANR	10959176	Symbol	code		10959048						
ANR	10959177	Symbol	op_show_setup		10959048						
ANR	10959178	Symbol	* op		10959048						
ANR	10959179	Symbol	penum		10959048						
ANR	10959180	Symbol	osp		10959048						
ANR	10959181	Symbol	* ( op_proc_t * ) & penum -> enum_client_data		10959048						
ANR	10959182	Symbol	imemory_local		10959048						
ANR	10959183	Symbol	penum -> enum_client_data		10959048						
ANR	10959184	Symbol	igs		10959048						
ANR	10959185	Symbol	i_ctx_p		10959048						
ANR	10959186	Symbol	& penum		10959048						
ANR	10959187	Symbol	op -> value		10959048						
ANR	10959188	Symbol	op -> value . bytes		10959048						
ANR	10959189	Symbol	r_size		10959048						
ANR	10959190	Symbol	zshow		10959048						
ANR	10959191	Symbol	gs_show_begin		10959048						
ANR	10959192	Symbol	finish_show		10959048						
ANR	10959193	Symbol	op_show_finish_setup		10959048						
ANR	10959194	Function	zashow	75:0:2113:2718							
ANR	10959195	FunctionDef	zashow (i_ctx_t * i_ctx_p)		10959194	0					
ANR	10959196	CompoundStatement		77:0:2149:2718	10959194	0					
ANR	10959197	IdentifierDeclStatement	os_ptr op = osp ;	78:4:2155:2170	10959194	0	True				
ANR	10959198	IdentifierDecl	op = osp		10959194	0					
ANR	10959199	IdentifierDeclType	os_ptr		10959194	0					
ANR	10959200	Identifier	op		10959194	1					
ANR	10959201	AssignmentExpression	op = osp		10959194	2		=			
ANR	10959202	Identifier	osp		10959194	0					
ANR	10959203	Identifier	osp		10959194	1					
ANR	10959204	IdentifierDeclStatement	gs_text_enum_t * penum ;	79:4:2176:2197	10959194	1	True				
ANR	10959205	IdentifierDecl	* penum		10959194	0					
ANR	10959206	IdentifierDeclType	gs_text_enum_t *		10959194	0					
ANR	10959207	Identifier	penum		10959194	1					
ANR	10959208	IdentifierDeclStatement	double axy [ 2 ] ;	80:4:2203:2216	10959194	2	True				
ANR	10959209	IdentifierDecl	axy [ 2 ]		10959194	0					
ANR	10959210	IdentifierDeclType	double [ 2 ]		10959194	0					
ANR	10959211	Identifier	axy		10959194	1					
ANR	10959212	PrimaryExpression	2		10959194	2					
ANR	10959213	IdentifierDeclStatement	"int code = num_params ( op - 1 , 2 , axy ) ;"	81:4:2222:2259	10959194	3	True				
ANR	10959214	IdentifierDecl	"code = num_params ( op - 1 , 2 , axy )"		10959194	0					
ANR	10959215	IdentifierDeclType	int		10959194	0					
ANR	10959216	Identifier	code		10959194	1					
ANR	10959217	AssignmentExpression	"code = num_params ( op - 1 , 2 , axy )"		10959194	2		=			
ANR	10959218	Identifier	code		10959194	0					
ANR	10959219	CallExpression	"num_params ( op - 1 , 2 , axy )"		10959194	1					
ANR	10959220	Callee	num_params		10959194	0					
ANR	10959221	Identifier	num_params		10959194	0					
ANR	10959222	ArgumentList	op - 1		10959194	1					
ANR	10959223	Argument	op - 1		10959194	0					
ANR	10959224	AdditiveExpression	op - 1		10959194	0		-			
ANR	10959225	Identifier	op		10959194	0					
ANR	10959226	PrimaryExpression	1		10959194	1					
ANR	10959227	Argument	2		10959194	1					
ANR	10959228	PrimaryExpression	2		10959194	0					
ANR	10959229	Argument	axy		10959194	2					
ANR	10959230	Identifier	axy		10959194	0					
ANR	10959231	IfStatement	"if ( code < 0 || ( code = op_show_setup ( i_ctx_p , op ) ) != 0 || ( code = gs_ashow_begin ( igs , axy [ 0 ] , axy [ 1 ] , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0 )"		10959194	4					
ANR	10959232	Condition	"code < 0 || ( code = op_show_setup ( i_ctx_p , op ) ) != 0 || ( code = gs_ashow_begin ( igs , axy [ 0 ] , axy [ 1 ] , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0"	83:8:2270:2441	10959194	0	True				
ANR	10959233	OrExpression	"code < 0 || ( code = op_show_setup ( i_ctx_p , op ) ) != 0 || ( code = gs_ashow_begin ( igs , axy [ 0 ] , axy [ 1 ] , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0"		10959194	0		||			
ANR	10959234	RelationalExpression	code < 0		10959194	0		<			
ANR	10959235	Identifier	code		10959194	0					
ANR	10959236	PrimaryExpression	0		10959194	1					
ANR	10959237	OrExpression	"( code = op_show_setup ( i_ctx_p , op ) ) != 0 || ( code = gs_ashow_begin ( igs , axy [ 0 ] , axy [ 1 ] , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0"		10959194	1		||			
ANR	10959238	EqualityExpression	"( code = op_show_setup ( i_ctx_p , op ) ) != 0"		10959194	0		!=			
ANR	10959239	AssignmentExpression	"code = op_show_setup ( i_ctx_p , op )"		10959194	0		=			
ANR	10959240	Identifier	code		10959194	0					
ANR	10959241	CallExpression	"op_show_setup ( i_ctx_p , op )"		10959194	1					
ANR	10959242	Callee	op_show_setup		10959194	0					
ANR	10959243	Identifier	op_show_setup		10959194	0					
ANR	10959244	ArgumentList	i_ctx_p		10959194	1					
ANR	10959245	Argument	i_ctx_p		10959194	0					
ANR	10959246	Identifier	i_ctx_p		10959194	0					
ANR	10959247	Argument	op		10959194	1					
ANR	10959248	Identifier	op		10959194	0					
ANR	10959249	PrimaryExpression	0		10959194	1					
ANR	10959250	RelationalExpression	"( code = gs_ashow_begin ( igs , axy [ 0 ] , axy [ 1 ] , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0"		10959194	1		<			
ANR	10959251	AssignmentExpression	"code = gs_ashow_begin ( igs , axy [ 0 ] , axy [ 1 ] , op -> value . bytes , r_size ( op ) , imemory_local , & penum )"		10959194	0		=			
ANR	10959252	Identifier	code		10959194	0					
ANR	10959253	CallExpression	"gs_ashow_begin ( igs , axy [ 0 ] , axy [ 1 ] , op -> value . bytes , r_size ( op ) , imemory_local , & penum )"		10959194	1					
ANR	10959254	Callee	gs_ashow_begin		10959194	0					
ANR	10959255	Identifier	gs_ashow_begin		10959194	0					
ANR	10959256	ArgumentList	igs		10959194	1					
ANR	10959257	Argument	igs		10959194	0					
ANR	10959258	Identifier	igs		10959194	0					
ANR	10959259	Argument	axy [ 0 ]		10959194	1					
ANR	10959260	ArrayIndexing	axy [ 0 ]		10959194	0					
ANR	10959261	Identifier	axy		10959194	0					
ANR	10959262	PrimaryExpression	0		10959194	1					
ANR	10959263	Argument	axy [ 1 ]		10959194	2					
ANR	10959264	ArrayIndexing	axy [ 1 ]		10959194	0					
ANR	10959265	Identifier	axy		10959194	0					
ANR	10959266	PrimaryExpression	1		10959194	1					
ANR	10959267	Argument	op -> value . bytes		10959194	3					
ANR	10959268	MemberAccess	op -> value . bytes		10959194	0					
ANR	10959269	PtrMemberAccess	op -> value		10959194	0					
ANR	10959270	Identifier	op		10959194	0					
ANR	10959271	Identifier	value		10959194	1					
ANR	10959272	Identifier	bytes		10959194	1					
ANR	10959273	Argument	r_size ( op )		10959194	4					
ANR	10959274	CallExpression	r_size ( op )		10959194	0					
ANR	10959275	Callee	r_size		10959194	0					
ANR	10959276	Identifier	r_size		10959194	0					
ANR	10959277	ArgumentList	op		10959194	1					
ANR	10959278	Argument	op		10959194	0					
ANR	10959279	Identifier	op		10959194	0					
ANR	10959280	Argument	imemory_local		10959194	5					
ANR	10959281	Identifier	imemory_local		10959194	0					
ANR	10959282	Argument	& penum		10959194	6					
ANR	10959283	UnaryOperationExpression	& penum		10959194	0					
ANR	10959284	UnaryOperator	&		10959194	0					
ANR	10959285	Identifier	penum		10959194	1					
ANR	10959286	PrimaryExpression	0		10959194	1					
ANR	10959287	ReturnStatement	return code ;	86:8:2452:2463	10959194	1	True				
ANR	10959288	Identifier	code		10959194	0					
ANR	10959289	ExpressionStatement	* ( op_proc_t * ) & penum -> enum_client_data = zashow	87:4:2469:2516	10959194	5	True				
ANR	10959290	AssignmentExpression	* ( op_proc_t * ) & penum -> enum_client_data = zashow		10959194	0		=			
ANR	10959291	UnaryOperationExpression	* ( op_proc_t * ) & penum -> enum_client_data		10959194	0					
ANR	10959292	UnaryOperator	*		10959194	0					
ANR	10959293	CastExpression	( op_proc_t * ) & penum -> enum_client_data		10959194	1					
ANR	10959294	CastTarget	op_proc_t *		10959194	0					
ANR	10959295	UnaryOperationExpression	& penum -> enum_client_data		10959194	1					
ANR	10959296	UnaryOperator	&		10959194	0					
ANR	10959297	PtrMemberAccess	penum -> enum_client_data		10959194	1					
ANR	10959298	Identifier	penum		10959194	0					
ANR	10959299	Identifier	enum_client_data		10959194	1					
ANR	10959300	Identifier	zashow		10959194	1					
ANR	10959301	IfStatement	"if ( ( code = op_show_finish_setup ( i_ctx_p , penum , 3 , finish_show ) ) < 0 )"		10959194	6					
ANR	10959302	Condition	"( code = op_show_finish_setup ( i_ctx_p , penum , 3 , finish_show ) ) < 0"	88:8:2526:2590	10959194	0	True				
ANR	10959303	RelationalExpression	"( code = op_show_finish_setup ( i_ctx_p , penum , 3 , finish_show ) ) < 0"		10959194	0		<			
ANR	10959304	AssignmentExpression	"code = op_show_finish_setup ( i_ctx_p , penum , 3 , finish_show )"		10959194	0		=			
ANR	10959305	Identifier	code		10959194	0					
ANR	10959306	CallExpression	"op_show_finish_setup ( i_ctx_p , penum , 3 , finish_show )"		10959194	1					
ANR	10959307	Callee	op_show_finish_setup		10959194	0					
ANR	10959308	Identifier	op_show_finish_setup		10959194	0					
ANR	10959309	ArgumentList	i_ctx_p		10959194	1					
ANR	10959310	Argument	i_ctx_p		10959194	0					
ANR	10959311	Identifier	i_ctx_p		10959194	0					
ANR	10959312	Argument	penum		10959194	1					
ANR	10959313	Identifier	penum		10959194	0					
ANR	10959314	Argument	3		10959194	2					
ANR	10959315	PrimaryExpression	3		10959194	0					
ANR	10959316	Argument	finish_show		10959194	3					
ANR	10959317	Identifier	finish_show		10959194	0					
ANR	10959318	PrimaryExpression	0		10959194	1					
ANR	10959319	CompoundStatement		12:75:443:443	10959194	1					
ANR	10959320	ExpressionStatement	"ifree_object ( penum , ""op_show_enum_setup"" )"	89:8:2603:2644	10959194	0	True				
ANR	10959321	CallExpression	"ifree_object ( penum , ""op_show_enum_setup"" )"		10959194	0					
ANR	10959322	Callee	ifree_object		10959194	0					
ANR	10959323	Identifier	ifree_object		10959194	0					
ANR	10959324	ArgumentList	penum		10959194	1					
ANR	10959325	Argument	penum		10959194	0					
ANR	10959326	Identifier	penum		10959194	0					
ANR	10959327	Argument	"""op_show_enum_setup"""		10959194	1					
ANR	10959328	PrimaryExpression	"""op_show_enum_setup"""		10959194	0					
ANR	10959329	ReturnStatement	return code ;	90:8:2654:2665	10959194	1	True				
ANR	10959330	Identifier	code		10959194	0					
ANR	10959331	ReturnStatement	"return op_show_continue_pop ( i_ctx_p , 3 ) ;"	92:4:2677:2716	10959194	7	True				
ANR	10959332	CallExpression	"op_show_continue_pop ( i_ctx_p , 3 )"		10959194	0					
ANR	10959333	Callee	op_show_continue_pop		10959194	0					
ANR	10959334	Identifier	op_show_continue_pop		10959194	0					
ANR	10959335	ArgumentList	i_ctx_p		10959194	1					
ANR	10959336	Argument	i_ctx_p		10959194	0					
ANR	10959337	Identifier	i_ctx_p		10959194	0					
ANR	10959338	Argument	3		10959194	1					
ANR	10959339	PrimaryExpression	3		10959194	0					
ANR	10959340	ReturnType	static int		10959194	1					
ANR	10959341	Identifier	zashow		10959194	2					
ANR	10959342	ParameterList	i_ctx_t * i_ctx_p		10959194	3					
ANR	10959343	Parameter	i_ctx_t * i_ctx_p	76:7:2131:2146	10959194	0	True				
ANR	10959344	ParameterType	i_ctx_t *		10959194	0					
ANR	10959345	Identifier	i_ctx_p		10959194	1					
ANR	10959346	CFGEntryNode	ENTRY		10959194		True				
ANR	10959347	CFGExitNode	EXIT		10959194		True				
ANR	10959348	Symbol	* penum		10959194						
ANR	10959349	Symbol	& penum -> enum_client_data		10959194						
ANR	10959350	Symbol	op_show_continue_pop		10959194						
ANR	10959351	Symbol	code		10959194						
ANR	10959352	Symbol	* op		10959194						
ANR	10959353	Symbol	osp		10959194						
ANR	10959354	Symbol	num_params		10959194						
ANR	10959355	Symbol	penum -> enum_client_data		10959194						
ANR	10959356	Symbol	igs		10959194						
ANR	10959357	Symbol	& penum		10959194						
ANR	10959358	Symbol	op -> value		10959194						
ANR	10959359	Symbol	op -> value . bytes		10959194						
ANR	10959360	Symbol	r_size		10959194						
ANR	10959361	Symbol	zashow		10959194						
ANR	10959362	Symbol	op		10959194						
ANR	10959363	Symbol	axy		10959194						
ANR	10959364	Symbol	op_show_setup		10959194						
ANR	10959365	Symbol	penum		10959194						
ANR	10959366	Symbol	* ( op_proc_t * ) & penum -> enum_client_data		10959194						
ANR	10959367	Symbol	imemory_local		10959194						
ANR	10959368	Symbol	* axy		10959194						
ANR	10959369	Symbol	i_ctx_p		10959194						
ANR	10959370	Symbol	gs_ashow_begin		10959194						
ANR	10959371	Symbol	op_show_finish_setup		10959194						
ANR	10959372	Symbol	finish_show		10959194						
ANR	10959373	Function	widthshow_aux	95:0:2721:3968							
ANR	10959374	FunctionDef	"widthshow_aux (i_ctx_t * i_ctx_p , bool single_byte_space)"		10959373	0					
ANR	10959375	CompoundStatement		97:0:2788:3968	10959373	0					
ANR	10959376	IdentifierDeclStatement	os_ptr op = osp ;	98:4:2794:2809	10959373	0	True				
ANR	10959377	IdentifierDecl	op = osp		10959373	0					
ANR	10959378	IdentifierDeclType	os_ptr		10959373	0					
ANR	10959379	Identifier	op		10959373	1					
ANR	10959380	AssignmentExpression	op = osp		10959373	2		=			
ANR	10959381	Identifier	osp		10959373	0					
ANR	10959382	Identifier	osp		10959373	1					
ANR	10959383	IdentifierDeclStatement	gs_text_enum_t * penum ;	99:4:2815:2836	10959373	1	True				
ANR	10959384	IdentifierDecl	* penum		10959373	0					
ANR	10959385	IdentifierDeclType	gs_text_enum_t *		10959373	0					
ANR	10959386	Identifier	penum		10959373	1					
ANR	10959387	IdentifierDeclStatement	double cxy [ 2 ] ;	100:4:2842:2855	10959373	2	True				
ANR	10959388	IdentifierDecl	cxy [ 2 ]		10959373	0					
ANR	10959389	IdentifierDeclType	double [ 2 ]		10959373	0					
ANR	10959390	Identifier	cxy		10959373	1					
ANR	10959391	PrimaryExpression	2		10959373	2					
ANR	10959392	IdentifierDeclStatement	int code ;	101:4:2861:2869	10959373	3	True				
ANR	10959393	IdentifierDecl	code		10959373	0					
ANR	10959394	IdentifierDeclType	int		10959373	0					
ANR	10959395	Identifier	code		10959373	1					
ANR	10959396	IfStatement	"if ( ( code = op_show_setup ( i_ctx_p , op ) ) != 0 )"		10959373	4					
ANR	10959397	Condition	"( code = op_show_setup ( i_ctx_p , op ) ) != 0"	103:8:2880:2919	10959373	0	True				
ANR	10959398	EqualityExpression	"( code = op_show_setup ( i_ctx_p , op ) ) != 0"		10959373	0		!=			
ANR	10959399	AssignmentExpression	"code = op_show_setup ( i_ctx_p , op )"		10959373	0		=			
ANR	10959400	Identifier	code		10959373	0					
ANR	10959401	CallExpression	"op_show_setup ( i_ctx_p , op )"		10959373	1					
ANR	10959402	Callee	op_show_setup		10959373	0					
ANR	10959403	Identifier	op_show_setup		10959373	0					
ANR	10959404	ArgumentList	i_ctx_p		10959373	1					
ANR	10959405	Argument	i_ctx_p		10959373	0					
ANR	10959406	Identifier	i_ctx_p		10959373	0					
ANR	10959407	Argument	op		10959373	1					
ANR	10959408	Identifier	op		10959373	0					
ANR	10959409	PrimaryExpression	0		10959373	1					
ANR	10959410	ReturnStatement	return code ;	104:8:2931:2942	10959373	1	True				
ANR	10959411	Identifier	code		10959373	0					
ANR	10959412	ExpressionStatement	"check_type ( op [ - 1 ] , t_integer )"	105:4:2948:2977	10959373	5	True				
ANR	10959413	CallExpression	"check_type ( op [ - 1 ] , t_integer )"		10959373	0					
ANR	10959414	Callee	check_type		10959373	0					
ANR	10959415	Identifier	check_type		10959373	0					
ANR	10959416	ArgumentList	op [ - 1 ]		10959373	1					
ANR	10959417	Argument	op [ - 1 ]		10959373	0					
ANR	10959418	ArrayIndexing	op [ - 1 ]		10959373	0					
ANR	10959419	Identifier	op		10959373	0					
ANR	10959420	UnaryOperationExpression	- 1		10959373	1					
ANR	10959421	UnaryOperator	-		10959373	0					
ANR	10959422	PrimaryExpression	1		10959373	1					
ANR	10959423	Argument	t_integer		10959373	1					
ANR	10959424	Identifier	t_integer		10959373	0					
ANR	10959425	IfStatement	if ( gs_currentfont ( igs ) -> FontType == ft_composite )		10959373	6					
ANR	10959426	Condition	gs_currentfont ( igs ) -> FontType == ft_composite	106:8:2987:3031	10959373	0	True				
ANR	10959427	EqualityExpression	gs_currentfont ( igs ) -> FontType == ft_composite		10959373	0		==			
ANR	10959428	PtrMemberAccess	gs_currentfont ( igs ) -> FontType		10959373	0					
ANR	10959429	CallExpression	gs_currentfont ( igs )		10959373	0					
ANR	10959430	Callee	gs_currentfont		10959373	0					
ANR	10959431	Identifier	gs_currentfont		10959373	0					
ANR	10959432	ArgumentList	igs		10959373	1					
ANR	10959433	Argument	igs		10959373	0					
ANR	10959434	Identifier	igs		10959373	0					
ANR	10959435	Identifier	FontType		10959373	1					
ANR	10959436	Identifier	ft_composite		10959373	1					
ANR	10959437	CompoundStatement		10:55:245:245	10959373	1					
ANR	10959438	IfStatement	if ( ( gs_char ) ( op [ - 1 ] . value . intval ) != op [ - 1 ] . value . intval )		10959373	0					
ANR	10959439	Condition	( gs_char ) ( op [ - 1 ] . value . intval ) != op [ - 1 ] . value . intval	107:12:3048:3101	10959373	0	True				
ANR	10959440	EqualityExpression	( gs_char ) ( op [ - 1 ] . value . intval ) != op [ - 1 ] . value . intval		10959373	0		!=			
ANR	10959441	CastExpression	( gs_char ) ( op [ - 1 ] . value . intval )		10959373	0					
ANR	10959442	CastTarget	gs_char		10959373	0					
ANR	10959443	MemberAccess	op [ - 1 ] . value . intval		10959373	1					
ANR	10959444	MemberAccess	op [ - 1 ] . value		10959373	0					
ANR	10959445	ArrayIndexing	op [ - 1 ]		10959373	0					
ANR	10959446	Identifier	op		10959373	0					
ANR	10959447	UnaryOperationExpression	- 1		10959373	1					
ANR	10959448	UnaryOperator	-		10959373	0					
ANR	10959449	PrimaryExpression	1		10959373	1					
ANR	10959450	Identifier	value		10959373	1					
ANR	10959451	Identifier	intval		10959373	1					
ANR	10959452	MemberAccess	op [ - 1 ] . value . intval		10959373	1					
ANR	10959453	MemberAccess	op [ - 1 ] . value		10959373	0					
ANR	10959454	ArrayIndexing	op [ - 1 ]		10959373	0					
ANR	10959455	Identifier	op		10959373	0					
ANR	10959456	UnaryOperationExpression	- 1		10959373	1					
ANR	10959457	UnaryOperator	-		10959373	0					
ANR	10959458	PrimaryExpression	1		10959373	1					
ANR	10959459	Identifier	value		10959373	1					
ANR	10959460	Identifier	intval		10959373	1					
ANR	10959461	ExpressionStatement	return_error ( gs_error_rangecheck )	108:12:3116:3149	10959373	1	True				
ANR	10959462	CallExpression	return_error ( gs_error_rangecheck )		10959373	0					
ANR	10959463	Callee	return_error		10959373	0					
ANR	10959464	Identifier	return_error		10959373	0					
ANR	10959465	ArgumentList	gs_error_rangecheck		10959373	1					
ANR	10959466	Argument	gs_error_rangecheck		10959373	0					
ANR	10959467	Identifier	gs_error_rangecheck		10959373	0					
ANR	10959468	ElseStatement	else		10959373	0					
ANR	10959469	CompoundStatement		13:11:373:373	10959373	0					
ANR	10959470	IfStatement	if ( op [ - 1 ] . value . intval < 0 || op [ - 1 ] . value . intval > 255 )		10959373	0					
ANR	10959471	Condition	op [ - 1 ] . value . intval < 0 || op [ - 1 ] . value . intval > 255	110:12:3176:3227	10959373	0	True				
ANR	10959472	OrExpression	op [ - 1 ] . value . intval < 0 || op [ - 1 ] . value . intval > 255		10959373	0		||			
ANR	10959473	RelationalExpression	op [ - 1 ] . value . intval < 0		10959373	0		<			
ANR	10959474	MemberAccess	op [ - 1 ] . value . intval		10959373	0					
ANR	10959475	MemberAccess	op [ - 1 ] . value		10959373	0					
ANR	10959476	ArrayIndexing	op [ - 1 ]		10959373	0					
ANR	10959477	Identifier	op		10959373	0					
ANR	10959478	UnaryOperationExpression	- 1		10959373	1					
ANR	10959479	UnaryOperator	-		10959373	0					
ANR	10959480	PrimaryExpression	1		10959373	1					
ANR	10959481	Identifier	value		10959373	1					
ANR	10959482	Identifier	intval		10959373	1					
ANR	10959483	PrimaryExpression	0		10959373	1					
ANR	10959484	RelationalExpression	op [ - 1 ] . value . intval > 255		10959373	1		>			
ANR	10959485	MemberAccess	op [ - 1 ] . value . intval		10959373	0					
ANR	10959486	MemberAccess	op [ - 1 ] . value		10959373	0					
ANR	10959487	ArrayIndexing	op [ - 1 ]		10959373	0					
ANR	10959488	Identifier	op		10959373	0					
ANR	10959489	UnaryOperationExpression	- 1		10959373	1					
ANR	10959490	UnaryOperator	-		10959373	0					
ANR	10959491	PrimaryExpression	1		10959373	1					
ANR	10959492	Identifier	value		10959373	1					
ANR	10959493	Identifier	intval		10959373	1					
ANR	10959494	PrimaryExpression	255		10959373	1					
ANR	10959495	ExpressionStatement	return_error ( gs_error_rangecheck )	111:12:3242:3275	10959373	1	True				
ANR	10959496	CallExpression	return_error ( gs_error_rangecheck )		10959373	0					
ANR	10959497	Callee	return_error		10959373	0					
ANR	10959498	Identifier	return_error		10959373	0					
ANR	10959499	ArgumentList	gs_error_rangecheck		10959373	1					
ANR	10959500	Argument	gs_error_rangecheck		10959373	0					
ANR	10959501	Identifier	gs_error_rangecheck		10959373	0					
ANR	10959502	IfStatement	"if ( ( code = num_params ( op - 2 , 2 , cxy ) ) < 0 )"		10959373	7					
ANR	10959503	Condition	"( code = num_params ( op - 2 , 2 , cxy ) ) < 0"	113:8:3320:3358	10959373	0	True				
ANR	10959504	RelationalExpression	"( code = num_params ( op - 2 , 2 , cxy ) ) < 0"		10959373	0		<			
ANR	10959505	AssignmentExpression	"code = num_params ( op - 2 , 2 , cxy )"		10959373	0		=			
ANR	10959506	Identifier	code		10959373	0					
ANR	10959507	CallExpression	"num_params ( op - 2 , 2 , cxy )"		10959373	1					
ANR	10959508	Callee	num_params		10959373	0					
ANR	10959509	Identifier	num_params		10959373	0					
ANR	10959510	ArgumentList	op - 2		10959373	1					
ANR	10959511	Argument	op - 2		10959373	0					
ANR	10959512	AdditiveExpression	op - 2		10959373	0		-			
ANR	10959513	Identifier	op		10959373	0					
ANR	10959514	PrimaryExpression	2		10959373	1					
ANR	10959515	Argument	2		10959373	1					
ANR	10959516	PrimaryExpression	2		10959373	0					
ANR	10959517	Argument	cxy		10959373	2					
ANR	10959518	Identifier	cxy		10959373	0					
ANR	10959519	PrimaryExpression	0		10959373	1					
ANR	10959520	ReturnStatement	return code ;	114:8:3370:3381	10959373	1	True				
ANR	10959521	Identifier	code		10959373	0					
ANR	10959522	IfStatement	"if ( ( code = gs_widthshow_begin ( igs , cxy [ 0 ] , cxy [ 1 ] , ( gs_char ) op [ - 1 ] . value . intval , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0 )"		10959373	8					
ANR	10959523	Condition	"( code = gs_widthshow_begin ( igs , cxy [ 0 ] , cxy [ 1 ] , ( gs_char ) op [ - 1 ] . value . intval , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0"	115:8:3391:3630	10959373	0	True				
ANR	10959524	RelationalExpression	"( code = gs_widthshow_begin ( igs , cxy [ 0 ] , cxy [ 1 ] , ( gs_char ) op [ - 1 ] . value . intval , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0"		10959373	0		<			
ANR	10959525	AssignmentExpression	"code = gs_widthshow_begin ( igs , cxy [ 0 ] , cxy [ 1 ] , ( gs_char ) op [ - 1 ] . value . intval , op -> value . bytes , r_size ( op ) , imemory_local , & penum )"		10959373	0		=			
ANR	10959526	Identifier	code		10959373	0					
ANR	10959527	CallExpression	"gs_widthshow_begin ( igs , cxy [ 0 ] , cxy [ 1 ] , ( gs_char ) op [ - 1 ] . value . intval , op -> value . bytes , r_size ( op ) , imemory_local , & penum )"		10959373	1					
ANR	10959528	Callee	gs_widthshow_begin		10959373	0					
ANR	10959529	Identifier	gs_widthshow_begin		10959373	0					
ANR	10959530	ArgumentList	igs		10959373	1					
ANR	10959531	Argument	igs		10959373	0					
ANR	10959532	Identifier	igs		10959373	0					
ANR	10959533	Argument	cxy [ 0 ]		10959373	1					
ANR	10959534	ArrayIndexing	cxy [ 0 ]		10959373	0					
ANR	10959535	Identifier	cxy		10959373	0					
ANR	10959536	PrimaryExpression	0		10959373	1					
ANR	10959537	Argument	cxy [ 1 ]		10959373	2					
ANR	10959538	ArrayIndexing	cxy [ 1 ]		10959373	0					
ANR	10959539	Identifier	cxy		10959373	0					
ANR	10959540	PrimaryExpression	1		10959373	1					
ANR	10959541	Argument	( gs_char ) op [ - 1 ] . value . intval		10959373	3					
ANR	10959542	CastExpression	( gs_char ) op [ - 1 ] . value . intval		10959373	0					
ANR	10959543	CastTarget	gs_char		10959373	0					
ANR	10959544	MemberAccess	op [ - 1 ] . value . intval		10959373	1					
ANR	10959545	MemberAccess	op [ - 1 ] . value		10959373	0					
ANR	10959546	ArrayIndexing	op [ - 1 ]		10959373	0					
ANR	10959547	Identifier	op		10959373	0					
ANR	10959548	UnaryOperationExpression	- 1		10959373	1					
ANR	10959549	UnaryOperator	-		10959373	0					
ANR	10959550	PrimaryExpression	1		10959373	1					
ANR	10959551	Identifier	value		10959373	1					
ANR	10959552	Identifier	intval		10959373	1					
ANR	10959553	Argument	op -> value . bytes		10959373	4					
ANR	10959554	MemberAccess	op -> value . bytes		10959373	0					
ANR	10959555	PtrMemberAccess	op -> value		10959373	0					
ANR	10959556	Identifier	op		10959373	0					
ANR	10959557	Identifier	value		10959373	1					
ANR	10959558	Identifier	bytes		10959373	1					
ANR	10959559	Argument	r_size ( op )		10959373	5					
ANR	10959560	CallExpression	r_size ( op )		10959373	0					
ANR	10959561	Callee	r_size		10959373	0					
ANR	10959562	Identifier	r_size		10959373	0					
ANR	10959563	ArgumentList	op		10959373	1					
ANR	10959564	Argument	op		10959373	0					
ANR	10959565	Identifier	op		10959373	0					
ANR	10959566	Argument	imemory_local		10959373	6					
ANR	10959567	Identifier	imemory_local		10959373	0					
ANR	10959568	Argument	& penum		10959373	7					
ANR	10959569	UnaryOperationExpression	& penum		10959373	0					
ANR	10959570	UnaryOperator	&		10959373	0					
ANR	10959571	Identifier	penum		10959373	1					
ANR	10959572	PrimaryExpression	0		10959373	1					
ANR	10959573	ReturnStatement	return code ;	119:8:3641:3652	10959373	1	True				
ANR	10959574	Identifier	code		10959373	0					
ANR	10959575	ExpressionStatement	* ( op_proc_t * ) & penum -> enum_client_data = zwidthshow	120:4:3658:3709	10959373	9	True				
ANR	10959576	AssignmentExpression	* ( op_proc_t * ) & penum -> enum_client_data = zwidthshow		10959373	0		=			
ANR	10959577	UnaryOperationExpression	* ( op_proc_t * ) & penum -> enum_client_data		10959373	0					
ANR	10959578	UnaryOperator	*		10959373	0					
ANR	10959579	CastExpression	( op_proc_t * ) & penum -> enum_client_data		10959373	1					
ANR	10959580	CastTarget	op_proc_t *		10959373	0					
ANR	10959581	UnaryOperationExpression	& penum -> enum_client_data		10959373	1					
ANR	10959582	UnaryOperator	&		10959373	0					
ANR	10959583	PtrMemberAccess	penum -> enum_client_data		10959373	1					
ANR	10959584	Identifier	penum		10959373	0					
ANR	10959585	Identifier	enum_client_data		10959373	1					
ANR	10959586	Identifier	zwidthshow		10959373	1					
ANR	10959587	ExpressionStatement	penum -> single_byte_space = single_byte_space	122:4:3716:3760	10959373	10	True				
ANR	10959588	AssignmentExpression	penum -> single_byte_space = single_byte_space		10959373	0		=			
ANR	10959589	PtrMemberAccess	penum -> single_byte_space		10959373	0					
ANR	10959590	Identifier	penum		10959373	0					
ANR	10959591	Identifier	single_byte_space		10959373	1					
ANR	10959592	Identifier	single_byte_space		10959373	1					
ANR	10959593	IfStatement	"if ( ( code = op_show_finish_setup ( i_ctx_p , penum , 4 , finish_show ) ) < 0 )"		10959373	11					
ANR	10959594	Condition	"( code = op_show_finish_setup ( i_ctx_p , penum , 4 , finish_show ) ) < 0"	124:8:3775:3839	10959373	0	True				
ANR	10959595	RelationalExpression	"( code = op_show_finish_setup ( i_ctx_p , penum , 4 , finish_show ) ) < 0"		10959373	0		<			
ANR	10959596	AssignmentExpression	"code = op_show_finish_setup ( i_ctx_p , penum , 4 , finish_show )"		10959373	0		=			
ANR	10959597	Identifier	code		10959373	0					
ANR	10959598	CallExpression	"op_show_finish_setup ( i_ctx_p , penum , 4 , finish_show )"		10959373	1					
ANR	10959599	Callee	op_show_finish_setup		10959373	0					
ANR	10959600	Identifier	op_show_finish_setup		10959373	0					
ANR	10959601	ArgumentList	i_ctx_p		10959373	1					
ANR	10959602	Argument	i_ctx_p		10959373	0					
ANR	10959603	Identifier	i_ctx_p		10959373	0					
ANR	10959604	Argument	penum		10959373	1					
ANR	10959605	Identifier	penum		10959373	0					
ANR	10959606	Argument	4		10959373	2					
ANR	10959607	PrimaryExpression	4		10959373	0					
ANR	10959608	Argument	finish_show		10959373	3					
ANR	10959609	Identifier	finish_show		10959373	0					
ANR	10959610	PrimaryExpression	0		10959373	1					
ANR	10959611	CompoundStatement		28:75:1053:1053	10959373	1					
ANR	10959612	ExpressionStatement	"ifree_object ( penum , ""op_show_enum_setup"" )"	125:8:3852:3893	10959373	0	True				
ANR	10959613	CallExpression	"ifree_object ( penum , ""op_show_enum_setup"" )"		10959373	0					
ANR	10959614	Callee	ifree_object		10959373	0					
ANR	10959615	Identifier	ifree_object		10959373	0					
ANR	10959616	ArgumentList	penum		10959373	1					
ANR	10959617	Argument	penum		10959373	0					
ANR	10959618	Identifier	penum		10959373	0					
ANR	10959619	Argument	"""op_show_enum_setup"""		10959373	1					
ANR	10959620	PrimaryExpression	"""op_show_enum_setup"""		10959373	0					
ANR	10959621	ReturnStatement	return code ;	126:8:3903:3914	10959373	1	True				
ANR	10959622	Identifier	code		10959373	0					
ANR	10959623	ReturnStatement	"return op_show_continue_pop ( i_ctx_p , 4 ) ;"	129:4:3927:3966	10959373	12	True				
ANR	10959624	CallExpression	"op_show_continue_pop ( i_ctx_p , 4 )"		10959373	0					
ANR	10959625	Callee	op_show_continue_pop		10959373	0					
ANR	10959626	Identifier	op_show_continue_pop		10959373	0					
ANR	10959627	ArgumentList	i_ctx_p		10959373	1					
ANR	10959628	Argument	i_ctx_p		10959373	0					
ANR	10959629	Identifier	i_ctx_p		10959373	0					
ANR	10959630	Argument	4		10959373	1					
ANR	10959631	PrimaryExpression	4		10959373	0					
ANR	10959632	ReturnType	static int		10959373	1					
ANR	10959633	Identifier	widthshow_aux		10959373	2					
ANR	10959634	ParameterList	"i_ctx_t * i_ctx_p , bool single_byte_space"		10959373	3					
ANR	10959635	Parameter	i_ctx_t * i_ctx_p	96:14:2746:2761	10959373	0	True				
ANR	10959636	ParameterType	i_ctx_t *		10959373	0					
ANR	10959637	Identifier	i_ctx_p		10959373	1					
ANR	10959638	Parameter	bool single_byte_space	96:32:2764:2785	10959373	1	True				
ANR	10959639	ParameterType	bool		10959373	0					
ANR	10959640	Identifier	single_byte_space		10959373	1					
ANR	10959641	CFGEntryNode	ENTRY		10959373		True				
ANR	10959642	CFGExitNode	EXIT		10959373		True				
ANR	10959643	Symbol	* penum		10959373						
ANR	10959644	Symbol	& penum -> enum_client_data		10959373						
ANR	10959645	Symbol	op_show_continue_pop		10959373						
ANR	10959646	Symbol	code		10959373						
ANR	10959647	Symbol	* op		10959373						
ANR	10959648	Symbol	gs_error_rangecheck		10959373						
ANR	10959649	Symbol	gs_currentfont ( igs ) -> FontType		10959373						
ANR	10959650	Symbol	op [ - 1 ] . value		10959373						
ANR	10959651	Symbol	gs_widthshow_begin		10959373						
ANR	10959652	Symbol	osp		10959373						
ANR	10959653	Symbol	num_params		10959373						
ANR	10959654	Symbol	penum -> enum_client_data		10959373						
ANR	10959655	Symbol	penum -> single_byte_space		10959373						
ANR	10959656	Symbol	igs		10959373						
ANR	10959657	Symbol	* gs_currentfont		10959373						
ANR	10959658	Symbol	op [ - 1 ] . value . intval		10959373						
ANR	10959659	Symbol	op -> value		10959373						
ANR	10959660	Symbol	& penum		10959373						
ANR	10959661	Symbol	gs_currentfont		10959373						
ANR	10959662	Symbol	r_size		10959373						
ANR	10959663	Symbol	op -> value . bytes		10959373						
ANR	10959664	Symbol	op		10959373						
ANR	10959665	Symbol	op_show_setup		10959373						
ANR	10959666	Symbol	cxy		10959373						
ANR	10959667	Symbol	penum		10959373						
ANR	10959668	Symbol	ft_composite		10959373						
ANR	10959669	Symbol	* ( op_proc_t * ) & penum -> enum_client_data		10959373						
ANR	10959670	Symbol	imemory_local		10959373						
ANR	10959671	Symbol	* cxy		10959373						
ANR	10959672	Symbol	zwidthshow		10959373						
ANR	10959673	Symbol	t_integer		10959373						
ANR	10959674	Symbol	i_ctx_p		10959373						
ANR	10959675	Symbol	single_byte_space		10959373						
ANR	10959676	Symbol	op_show_finish_setup		10959373						
ANR	10959677	Symbol	finish_show		10959373						
ANR	10959678	Function	zwidthshow	133:0:4015:4100							
ANR	10959679	FunctionDef	zwidthshow (i_ctx_t * i_ctx_p)		10959678	0					
ANR	10959680	CompoundStatement		135:0:4055:4100	10959678	0					
ANR	10959681	ReturnStatement	"return ( widthshow_aux ( i_ctx_p , false ) ) ;"	136:4:4061:4098	10959678	0	True				
ANR	10959682	CallExpression	"widthshow_aux ( i_ctx_p , false )"		10959678	0					
ANR	10959683	Callee	widthshow_aux		10959678	0					
ANR	10959684	Identifier	widthshow_aux		10959678	0					
ANR	10959685	ArgumentList	i_ctx_p		10959678	1					
ANR	10959686	Argument	i_ctx_p		10959678	0					
ANR	10959687	Identifier	i_ctx_p		10959678	0					
ANR	10959688	Argument	false		10959678	1					
ANR	10959689	Identifier	false		10959678	0					
ANR	10959690	ReturnType	static int		10959678	1					
ANR	10959691	Identifier	zwidthshow		10959678	2					
ANR	10959692	ParameterList	i_ctx_t * i_ctx_p		10959678	3					
ANR	10959693	Parameter	i_ctx_t * i_ctx_p	134:11:4037:4052	10959678	0	True				
ANR	10959694	ParameterType	i_ctx_t *		10959678	0					
ANR	10959695	Identifier	i_ctx_p		10959678	1					
ANR	10959696	CFGEntryNode	ENTRY		10959678		True				
ANR	10959697	CFGExitNode	EXIT		10959678		True				
ANR	10959698	Symbol	i_ctx_p		10959678						
ANR	10959699	Symbol	false		10959678						
ANR	10959700	Symbol	widthshow_aux		10959678						
ANR	10959701	Function	zpdfwidthshow	152:0:4713:4800							
ANR	10959702	FunctionDef	zpdfwidthshow (i_ctx_t * i_ctx_p)		10959701	0					
ANR	10959703	CompoundStatement		154:0:4756:4800	10959701	0					
ANR	10959704	ReturnStatement	"return ( widthshow_aux ( i_ctx_p , true ) ) ;"	155:4:4762:4798	10959701	0	True				
ANR	10959705	CallExpression	"widthshow_aux ( i_ctx_p , true )"		10959701	0					
ANR	10959706	Callee	widthshow_aux		10959701	0					
ANR	10959707	Identifier	widthshow_aux		10959701	0					
ANR	10959708	ArgumentList	i_ctx_p		10959701	1					
ANR	10959709	Argument	i_ctx_p		10959701	0					
ANR	10959710	Identifier	i_ctx_p		10959701	0					
ANR	10959711	Argument	true		10959701	1					
ANR	10959712	Identifier	true		10959701	0					
ANR	10959713	ReturnType	static int		10959701	1					
ANR	10959714	Identifier	zpdfwidthshow		10959701	2					
ANR	10959715	ParameterList	i_ctx_t * i_ctx_p		10959701	3					
ANR	10959716	Parameter	i_ctx_t * i_ctx_p	153:14:4738:4753	10959701	0	True				
ANR	10959717	ParameterType	i_ctx_t *		10959701	0					
ANR	10959718	Identifier	i_ctx_p		10959701	1					
ANR	10959719	CFGEntryNode	ENTRY		10959701		True				
ANR	10959720	CFGExitNode	EXIT		10959701		True				
ANR	10959721	Symbol	i_ctx_p		10959701						
ANR	10959722	Symbol	true		10959701						
ANR	10959723	Symbol	widthshow_aux		10959701						
ANR	10959724	Function	awidthshow_aux	158:0:4803:6187							
ANR	10959725	FunctionDef	"awidthshow_aux (i_ctx_t * i_ctx_p , bool single_byte_space)"		10959724	0					
ANR	10959726	CompoundStatement		160:0:4871:6187	10959724	0					
ANR	10959727	IdentifierDeclStatement	os_ptr op = osp ;	161:4:4877:4892	10959724	0	True				
ANR	10959728	IdentifierDecl	op = osp		10959724	0					
ANR	10959729	IdentifierDeclType	os_ptr		10959724	0					
ANR	10959730	Identifier	op		10959724	1					
ANR	10959731	AssignmentExpression	op = osp		10959724	2		=			
ANR	10959732	Identifier	osp		10959724	0					
ANR	10959733	Identifier	osp		10959724	1					
ANR	10959734	IdentifierDeclStatement	gs_text_enum_t * penum ;	162:4:4898:4919	10959724	1	True				
ANR	10959735	IdentifierDecl	* penum		10959724	0					
ANR	10959736	IdentifierDeclType	gs_text_enum_t *		10959724	0					
ANR	10959737	Identifier	penum		10959724	1					
ANR	10959738	IdentifierDeclStatement	"double cxy [ 2 ] , axy [ 2 ] ;"	163:4:4925:4946	10959724	2	True				
ANR	10959739	IdentifierDecl	cxy [ 2 ]		10959724	0					
ANR	10959740	IdentifierDeclType	double [ 2 ]		10959724	0					
ANR	10959741	Identifier	cxy		10959724	1					
ANR	10959742	PrimaryExpression	2		10959724	2					
ANR	10959743	IdentifierDecl	axy [ 2 ]		10959724	1					
ANR	10959744	IdentifierDeclType	double [ 2 ]		10959724	0					
ANR	10959745	Identifier	axy		10959724	1					
ANR	10959746	PrimaryExpression	2		10959724	2					
ANR	10959747	IdentifierDeclStatement	int code ;	164:4:4952:4960	10959724	3	True				
ANR	10959748	IdentifierDecl	code		10959724	0					
ANR	10959749	IdentifierDeclType	int		10959724	0					
ANR	10959750	Identifier	code		10959724	1					
ANR	10959751	IfStatement	"if ( ( code = op_show_setup ( i_ctx_p , op ) ) != 0 )"		10959724	4					
ANR	10959752	Condition	"( code = op_show_setup ( i_ctx_p , op ) ) != 0"	166:8:4971:5010	10959724	0	True				
ANR	10959753	EqualityExpression	"( code = op_show_setup ( i_ctx_p , op ) ) != 0"		10959724	0		!=			
ANR	10959754	AssignmentExpression	"code = op_show_setup ( i_ctx_p , op )"		10959724	0		=			
ANR	10959755	Identifier	code		10959724	0					
ANR	10959756	CallExpression	"op_show_setup ( i_ctx_p , op )"		10959724	1					
ANR	10959757	Callee	op_show_setup		10959724	0					
ANR	10959758	Identifier	op_show_setup		10959724	0					
ANR	10959759	ArgumentList	i_ctx_p		10959724	1					
ANR	10959760	Argument	i_ctx_p		10959724	0					
ANR	10959761	Identifier	i_ctx_p		10959724	0					
ANR	10959762	Argument	op		10959724	1					
ANR	10959763	Identifier	op		10959724	0					
ANR	10959764	PrimaryExpression	0		10959724	1					
ANR	10959765	ReturnStatement	return code ;	167:8:5022:5033	10959724	1	True				
ANR	10959766	Identifier	code		10959724	0					
ANR	10959767	IfStatement	"if ( ( code = num_params ( op - 1 , 2 , axy ) ) < 0 )"		10959724	5					
ANR	10959768	Condition	"( code = num_params ( op - 1 , 2 , axy ) ) < 0"	168:8:5043:5081	10959724	0	True				
ANR	10959769	RelationalExpression	"( code = num_params ( op - 1 , 2 , axy ) ) < 0"		10959724	0		<			
ANR	10959770	AssignmentExpression	"code = num_params ( op - 1 , 2 , axy )"		10959724	0		=			
ANR	10959771	Identifier	code		10959724	0					
ANR	10959772	CallExpression	"num_params ( op - 1 , 2 , axy )"		10959724	1					
ANR	10959773	Callee	num_params		10959724	0					
ANR	10959774	Identifier	num_params		10959724	0					
ANR	10959775	ArgumentList	op - 1		10959724	1					
ANR	10959776	Argument	op - 1		10959724	0					
ANR	10959777	AdditiveExpression	op - 1		10959724	0		-			
ANR	10959778	Identifier	op		10959724	0					
ANR	10959779	PrimaryExpression	1		10959724	1					
ANR	10959780	Argument	2		10959724	1					
ANR	10959781	PrimaryExpression	2		10959724	0					
ANR	10959782	Argument	axy		10959724	2					
ANR	10959783	Identifier	axy		10959724	0					
ANR	10959784	PrimaryExpression	0		10959724	1					
ANR	10959785	ReturnStatement	return code ;	169:8:5093:5104	10959724	1	True				
ANR	10959786	Identifier	code		10959724	0					
ANR	10959787	ExpressionStatement	"check_type ( op [ - 3 ] , t_integer )"	170:4:5110:5139	10959724	6	True				
ANR	10959788	CallExpression	"check_type ( op [ - 3 ] , t_integer )"		10959724	0					
ANR	10959789	Callee	check_type		10959724	0					
ANR	10959790	Identifier	check_type		10959724	0					
ANR	10959791	ArgumentList	op [ - 3 ]		10959724	1					
ANR	10959792	Argument	op [ - 3 ]		10959724	0					
ANR	10959793	ArrayIndexing	op [ - 3 ]		10959724	0					
ANR	10959794	Identifier	op		10959724	0					
ANR	10959795	UnaryOperationExpression	- 3		10959724	1					
ANR	10959796	UnaryOperator	-		10959724	0					
ANR	10959797	PrimaryExpression	3		10959724	1					
ANR	10959798	Argument	t_integer		10959724	1					
ANR	10959799	Identifier	t_integer		10959724	0					
ANR	10959800	IfStatement	if ( gs_currentfont ( igs ) -> FontType == ft_composite )		10959724	7					
ANR	10959801	Condition	gs_currentfont ( igs ) -> FontType == ft_composite	171:8:5149:5193	10959724	0	True				
ANR	10959802	EqualityExpression	gs_currentfont ( igs ) -> FontType == ft_composite		10959724	0		==			
ANR	10959803	PtrMemberAccess	gs_currentfont ( igs ) -> FontType		10959724	0					
ANR	10959804	CallExpression	gs_currentfont ( igs )		10959724	0					
ANR	10959805	Callee	gs_currentfont		10959724	0					
ANR	10959806	Identifier	gs_currentfont		10959724	0					
ANR	10959807	ArgumentList	igs		10959724	1					
ANR	10959808	Argument	igs		10959724	0					
ANR	10959809	Identifier	igs		10959724	0					
ANR	10959810	Identifier	FontType		10959724	1					
ANR	10959811	Identifier	ft_composite		10959724	1					
ANR	10959812	CompoundStatement		12:55:324:324	10959724	1					
ANR	10959813	IfStatement	if ( ( gs_char ) ( op [ - 3 ] . value . intval ) != op [ - 3 ] . value . intval )		10959724	0					
ANR	10959814	Condition	( gs_char ) ( op [ - 3 ] . value . intval ) != op [ - 3 ] . value . intval	172:12:5210:5263	10959724	0	True				
ANR	10959815	EqualityExpression	( gs_char ) ( op [ - 3 ] . value . intval ) != op [ - 3 ] . value . intval		10959724	0		!=			
ANR	10959816	CastExpression	( gs_char ) ( op [ - 3 ] . value . intval )		10959724	0					
ANR	10959817	CastTarget	gs_char		10959724	0					
ANR	10959818	MemberAccess	op [ - 3 ] . value . intval		10959724	1					
ANR	10959819	MemberAccess	op [ - 3 ] . value		10959724	0					
ANR	10959820	ArrayIndexing	op [ - 3 ]		10959724	0					
ANR	10959821	Identifier	op		10959724	0					
ANR	10959822	UnaryOperationExpression	- 3		10959724	1					
ANR	10959823	UnaryOperator	-		10959724	0					
ANR	10959824	PrimaryExpression	3		10959724	1					
ANR	10959825	Identifier	value		10959724	1					
ANR	10959826	Identifier	intval		10959724	1					
ANR	10959827	MemberAccess	op [ - 3 ] . value . intval		10959724	1					
ANR	10959828	MemberAccess	op [ - 3 ] . value		10959724	0					
ANR	10959829	ArrayIndexing	op [ - 3 ]		10959724	0					
ANR	10959830	Identifier	op		10959724	0					
ANR	10959831	UnaryOperationExpression	- 3		10959724	1					
ANR	10959832	UnaryOperator	-		10959724	0					
ANR	10959833	PrimaryExpression	3		10959724	1					
ANR	10959834	Identifier	value		10959724	1					
ANR	10959835	Identifier	intval		10959724	1					
ANR	10959836	ExpressionStatement	return_error ( gs_error_rangecheck )	173:12:5278:5311	10959724	1	True				
ANR	10959837	CallExpression	return_error ( gs_error_rangecheck )		10959724	0					
ANR	10959838	Callee	return_error		10959724	0					
ANR	10959839	Identifier	return_error		10959724	0					
ANR	10959840	ArgumentList	gs_error_rangecheck		10959724	1					
ANR	10959841	Argument	gs_error_rangecheck		10959724	0					
ANR	10959842	Identifier	gs_error_rangecheck		10959724	0					
ANR	10959843	ElseStatement	else		10959724	0					
ANR	10959844	CompoundStatement		15:11:452:452	10959724	0					
ANR	10959845	IfStatement	if ( op [ - 3 ] . value . intval < 0 || op [ - 3 ] . value . intval > 255 )		10959724	0					
ANR	10959846	Condition	op [ - 3 ] . value . intval < 0 || op [ - 3 ] . value . intval > 255	175:12:5338:5389	10959724	0	True				
ANR	10959847	OrExpression	op [ - 3 ] . value . intval < 0 || op [ - 3 ] . value . intval > 255		10959724	0		||			
ANR	10959848	RelationalExpression	op [ - 3 ] . value . intval < 0		10959724	0		<			
ANR	10959849	MemberAccess	op [ - 3 ] . value . intval		10959724	0					
ANR	10959850	MemberAccess	op [ - 3 ] . value		10959724	0					
ANR	10959851	ArrayIndexing	op [ - 3 ]		10959724	0					
ANR	10959852	Identifier	op		10959724	0					
ANR	10959853	UnaryOperationExpression	- 3		10959724	1					
ANR	10959854	UnaryOperator	-		10959724	0					
ANR	10959855	PrimaryExpression	3		10959724	1					
ANR	10959856	Identifier	value		10959724	1					
ANR	10959857	Identifier	intval		10959724	1					
ANR	10959858	PrimaryExpression	0		10959724	1					
ANR	10959859	RelationalExpression	op [ - 3 ] . value . intval > 255		10959724	1		>			
ANR	10959860	MemberAccess	op [ - 3 ] . value . intval		10959724	0					
ANR	10959861	MemberAccess	op [ - 3 ] . value		10959724	0					
ANR	10959862	ArrayIndexing	op [ - 3 ]		10959724	0					
ANR	10959863	Identifier	op		10959724	0					
ANR	10959864	UnaryOperationExpression	- 3		10959724	1					
ANR	10959865	UnaryOperator	-		10959724	0					
ANR	10959866	PrimaryExpression	3		10959724	1					
ANR	10959867	Identifier	value		10959724	1					
ANR	10959868	Identifier	intval		10959724	1					
ANR	10959869	PrimaryExpression	255		10959724	1					
ANR	10959870	ExpressionStatement	return_error ( gs_error_rangecheck )	176:12:5404:5437	10959724	1	True				
ANR	10959871	CallExpression	return_error ( gs_error_rangecheck )		10959724	0					
ANR	10959872	Callee	return_error		10959724	0					
ANR	10959873	Identifier	return_error		10959724	0					
ANR	10959874	ArgumentList	gs_error_rangecheck		10959724	1					
ANR	10959875	Argument	gs_error_rangecheck		10959724	0					
ANR	10959876	Identifier	gs_error_rangecheck		10959724	0					
ANR	10959877	IfStatement	"if ( ( code = num_params ( op - 4 , 2 , cxy ) ) < 0 )"		10959724	8					
ANR	10959878	Condition	"( code = num_params ( op - 4 , 2 , cxy ) ) < 0"	178:8:5482:5520	10959724	0	True				
ANR	10959879	RelationalExpression	"( code = num_params ( op - 4 , 2 , cxy ) ) < 0"		10959724	0		<			
ANR	10959880	AssignmentExpression	"code = num_params ( op - 4 , 2 , cxy )"		10959724	0		=			
ANR	10959881	Identifier	code		10959724	0					
ANR	10959882	CallExpression	"num_params ( op - 4 , 2 , cxy )"		10959724	1					
ANR	10959883	Callee	num_params		10959724	0					
ANR	10959884	Identifier	num_params		10959724	0					
ANR	10959885	ArgumentList	op - 4		10959724	1					
ANR	10959886	Argument	op - 4		10959724	0					
ANR	10959887	AdditiveExpression	op - 4		10959724	0		-			
ANR	10959888	Identifier	op		10959724	0					
ANR	10959889	PrimaryExpression	4		10959724	1					
ANR	10959890	Argument	2		10959724	1					
ANR	10959891	PrimaryExpression	2		10959724	0					
ANR	10959892	Argument	cxy		10959724	2					
ANR	10959893	Identifier	cxy		10959724	0					
ANR	10959894	PrimaryExpression	0		10959724	1					
ANR	10959895	ReturnStatement	return code ;	179:8:5532:5543	10959724	1	True				
ANR	10959896	Identifier	code		10959724	0					
ANR	10959897	IfStatement	"if ( ( code = gs_awidthshow_begin ( igs , cxy [ 0 ] , cxy [ 1 ] , ( gs_char ) op [ - 3 ] . value . intval , axy [ 0 ] , axy [ 1 ] , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0 )"		10959724	9					
ANR	10959898	Condition	"( code = gs_awidthshow_begin ( igs , cxy [ 0 ] , cxy [ 1 ] , ( gs_char ) op [ - 3 ] . value . intval , axy [ 0 ] , axy [ 1 ] , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0"	180:8:5553:5848	10959724	0	True				
ANR	10959899	RelationalExpression	"( code = gs_awidthshow_begin ( igs , cxy [ 0 ] , cxy [ 1 ] , ( gs_char ) op [ - 3 ] . value . intval , axy [ 0 ] , axy [ 1 ] , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0"		10959724	0		<			
ANR	10959900	AssignmentExpression	"code = gs_awidthshow_begin ( igs , cxy [ 0 ] , cxy [ 1 ] , ( gs_char ) op [ - 3 ] . value . intval , axy [ 0 ] , axy [ 1 ] , op -> value . bytes , r_size ( op ) , imemory_local , & penum )"		10959724	0		=			
ANR	10959901	Identifier	code		10959724	0					
ANR	10959902	CallExpression	"gs_awidthshow_begin ( igs , cxy [ 0 ] , cxy [ 1 ] , ( gs_char ) op [ - 3 ] . value . intval , axy [ 0 ] , axy [ 1 ] , op -> value . bytes , r_size ( op ) , imemory_local , & penum )"		10959724	1					
ANR	10959903	Callee	gs_awidthshow_begin		10959724	0					
ANR	10959904	Identifier	gs_awidthshow_begin		10959724	0					
ANR	10959905	ArgumentList	igs		10959724	1					
ANR	10959906	Argument	igs		10959724	0					
ANR	10959907	Identifier	igs		10959724	0					
ANR	10959908	Argument	cxy [ 0 ]		10959724	1					
ANR	10959909	ArrayIndexing	cxy [ 0 ]		10959724	0					
ANR	10959910	Identifier	cxy		10959724	0					
ANR	10959911	PrimaryExpression	0		10959724	1					
ANR	10959912	Argument	cxy [ 1 ]		10959724	2					
ANR	10959913	ArrayIndexing	cxy [ 1 ]		10959724	0					
ANR	10959914	Identifier	cxy		10959724	0					
ANR	10959915	PrimaryExpression	1		10959724	1					
ANR	10959916	Argument	( gs_char ) op [ - 3 ] . value . intval		10959724	3					
ANR	10959917	CastExpression	( gs_char ) op [ - 3 ] . value . intval		10959724	0					
ANR	10959918	CastTarget	gs_char		10959724	0					
ANR	10959919	MemberAccess	op [ - 3 ] . value . intval		10959724	1					
ANR	10959920	MemberAccess	op [ - 3 ] . value		10959724	0					
ANR	10959921	ArrayIndexing	op [ - 3 ]		10959724	0					
ANR	10959922	Identifier	op		10959724	0					
ANR	10959923	UnaryOperationExpression	- 3		10959724	1					
ANR	10959924	UnaryOperator	-		10959724	0					
ANR	10959925	PrimaryExpression	3		10959724	1					
ANR	10959926	Identifier	value		10959724	1					
ANR	10959927	Identifier	intval		10959724	1					
ANR	10959928	Argument	axy [ 0 ]		10959724	4					
ANR	10959929	ArrayIndexing	axy [ 0 ]		10959724	0					
ANR	10959930	Identifier	axy		10959724	0					
ANR	10959931	PrimaryExpression	0		10959724	1					
ANR	10959932	Argument	axy [ 1 ]		10959724	5					
ANR	10959933	ArrayIndexing	axy [ 1 ]		10959724	0					
ANR	10959934	Identifier	axy		10959724	0					
ANR	10959935	PrimaryExpression	1		10959724	1					
ANR	10959936	Argument	op -> value . bytes		10959724	6					
ANR	10959937	MemberAccess	op -> value . bytes		10959724	0					
ANR	10959938	PtrMemberAccess	op -> value		10959724	0					
ANR	10959939	Identifier	op		10959724	0					
ANR	10959940	Identifier	value		10959724	1					
ANR	10959941	Identifier	bytes		10959724	1					
ANR	10959942	Argument	r_size ( op )		10959724	7					
ANR	10959943	CallExpression	r_size ( op )		10959724	0					
ANR	10959944	Callee	r_size		10959724	0					
ANR	10959945	Identifier	r_size		10959724	0					
ANR	10959946	ArgumentList	op		10959724	1					
ANR	10959947	Argument	op		10959724	0					
ANR	10959948	Identifier	op		10959724	0					
ANR	10959949	Argument	imemory_local		10959724	8					
ANR	10959950	Identifier	imemory_local		10959724	0					
ANR	10959951	Argument	& penum		10959724	9					
ANR	10959952	UnaryOperationExpression	& penum		10959724	0					
ANR	10959953	UnaryOperator	&		10959724	0					
ANR	10959954	Identifier	penum		10959724	1					
ANR	10959955	PrimaryExpression	0		10959724	1					
ANR	10959956	ReturnStatement	return code ;	185:8:5859:5870	10959724	1	True				
ANR	10959957	Identifier	code		10959724	0					
ANR	10959958	ExpressionStatement	* ( op_proc_t * ) & penum -> enum_client_data = zawidthshow	186:4:5876:5928	10959724	10	True				
ANR	10959959	AssignmentExpression	* ( op_proc_t * ) & penum -> enum_client_data = zawidthshow		10959724	0		=			
ANR	10959960	UnaryOperationExpression	* ( op_proc_t * ) & penum -> enum_client_data		10959724	0					
ANR	10959961	UnaryOperator	*		10959724	0					
ANR	10959962	CastExpression	( op_proc_t * ) & penum -> enum_client_data		10959724	1					
ANR	10959963	CastTarget	op_proc_t *		10959724	0					
ANR	10959964	UnaryOperationExpression	& penum -> enum_client_data		10959724	1					
ANR	10959965	UnaryOperator	&		10959724	0					
ANR	10959966	PtrMemberAccess	penum -> enum_client_data		10959724	1					
ANR	10959967	Identifier	penum		10959724	0					
ANR	10959968	Identifier	enum_client_data		10959724	1					
ANR	10959969	Identifier	zawidthshow		10959724	1					
ANR	10959970	ExpressionStatement	penum -> single_byte_space = single_byte_space	188:4:5935:5979	10959724	11	True				
ANR	10959971	AssignmentExpression	penum -> single_byte_space = single_byte_space		10959724	0		=			
ANR	10959972	PtrMemberAccess	penum -> single_byte_space		10959724	0					
ANR	10959973	Identifier	penum		10959724	0					
ANR	10959974	Identifier	single_byte_space		10959724	1					
ANR	10959975	Identifier	single_byte_space		10959724	1					
ANR	10959976	IfStatement	"if ( ( code = op_show_finish_setup ( i_ctx_p , penum , 6 , finish_show ) ) < 0 )"		10959724	12					
ANR	10959977	Condition	"( code = op_show_finish_setup ( i_ctx_p , penum , 6 , finish_show ) ) < 0"	190:8:5994:6058	10959724	0	True				
ANR	10959978	RelationalExpression	"( code = op_show_finish_setup ( i_ctx_p , penum , 6 , finish_show ) ) < 0"		10959724	0		<			
ANR	10959979	AssignmentExpression	"code = op_show_finish_setup ( i_ctx_p , penum , 6 , finish_show )"		10959724	0		=			
ANR	10959980	Identifier	code		10959724	0					
ANR	10959981	CallExpression	"op_show_finish_setup ( i_ctx_p , penum , 6 , finish_show )"		10959724	1					
ANR	10959982	Callee	op_show_finish_setup		10959724	0					
ANR	10959983	Identifier	op_show_finish_setup		10959724	0					
ANR	10959984	ArgumentList	i_ctx_p		10959724	1					
ANR	10959985	Argument	i_ctx_p		10959724	0					
ANR	10959986	Identifier	i_ctx_p		10959724	0					
ANR	10959987	Argument	penum		10959724	1					
ANR	10959988	Identifier	penum		10959724	0					
ANR	10959989	Argument	6		10959724	2					
ANR	10959990	PrimaryExpression	6		10959724	0					
ANR	10959991	Argument	finish_show		10959724	3					
ANR	10959992	Identifier	finish_show		10959724	0					
ANR	10959993	PrimaryExpression	0		10959724	1					
ANR	10959994	CompoundStatement		31:75:1189:1189	10959724	1					
ANR	10959995	ExpressionStatement	"ifree_object ( penum , ""op_show_enum_setup"" )"	191:8:6071:6112	10959724	0	True				
ANR	10959996	CallExpression	"ifree_object ( penum , ""op_show_enum_setup"" )"		10959724	0					
ANR	10959997	Callee	ifree_object		10959724	0					
ANR	10959998	Identifier	ifree_object		10959724	0					
ANR	10959999	ArgumentList	penum		10959724	1					
ANR	10960000	Argument	penum		10959724	0					
ANR	10960001	Identifier	penum		10959724	0					
ANR	10960002	Argument	"""op_show_enum_setup"""		10959724	1					
ANR	10960003	PrimaryExpression	"""op_show_enum_setup"""		10959724	0					
ANR	10960004	ReturnStatement	return code ;	192:8:6122:6133	10959724	1	True				
ANR	10960005	Identifier	code		10959724	0					
ANR	10960006	ReturnStatement	"return op_show_continue_pop ( i_ctx_p , 6 ) ;"	195:4:6146:6185	10959724	13	True				
ANR	10960007	CallExpression	"op_show_continue_pop ( i_ctx_p , 6 )"		10959724	0					
ANR	10960008	Callee	op_show_continue_pop		10959724	0					
ANR	10960009	Identifier	op_show_continue_pop		10959724	0					
ANR	10960010	ArgumentList	i_ctx_p		10959724	1					
ANR	10960011	Argument	i_ctx_p		10959724	0					
ANR	10960012	Identifier	i_ctx_p		10959724	0					
ANR	10960013	Argument	6		10959724	1					
ANR	10960014	PrimaryExpression	6		10959724	0					
ANR	10960015	ReturnType	static int		10959724	1					
ANR	10960016	Identifier	awidthshow_aux		10959724	2					
ANR	10960017	ParameterList	"i_ctx_t * i_ctx_p , bool single_byte_space"		10959724	3					
ANR	10960018	Parameter	i_ctx_t * i_ctx_p	159:15:4829:4844	10959724	0	True				
ANR	10960019	ParameterType	i_ctx_t *		10959724	0					
ANR	10960020	Identifier	i_ctx_p		10959724	1					
ANR	10960021	Parameter	bool single_byte_space	159:33:4847:4868	10959724	1	True				
ANR	10960022	ParameterType	bool		10959724	0					
ANR	10960023	Identifier	single_byte_space		10959724	1					
ANR	10960024	CFGEntryNode	ENTRY		10959724		True				
ANR	10960025	CFGExitNode	EXIT		10959724		True				
ANR	10960026	Symbol	* penum		10959724						
ANR	10960027	Symbol	& penum -> enum_client_data		10959724						
ANR	10960028	Symbol	op_show_continue_pop		10959724						
ANR	10960029	Symbol	code		10959724						
ANR	10960030	Symbol	* op		10959724						
ANR	10960031	Symbol	gs_error_rangecheck		10959724						
ANR	10960032	Symbol	gs_currentfont ( igs ) -> FontType		10959724						
ANR	10960033	Symbol	gs_awidthshow_begin		10959724						
ANR	10960034	Symbol	osp		10959724						
ANR	10960035	Symbol	num_params		10959724						
ANR	10960036	Symbol	penum -> enum_client_data		10959724						
ANR	10960037	Symbol	penum -> single_byte_space		10959724						
ANR	10960038	Symbol	igs		10959724						
ANR	10960039	Symbol	* gs_currentfont		10959724						
ANR	10960040	Symbol	& penum		10959724						
ANR	10960041	Symbol	op -> value		10959724						
ANR	10960042	Symbol	gs_currentfont		10959724						
ANR	10960043	Symbol	op [ - 3 ] . value . intval		10959724						
ANR	10960044	Symbol	r_size		10959724						
ANR	10960045	Symbol	op -> value . bytes		10959724						
ANR	10960046	Symbol	op		10959724						
ANR	10960047	Symbol	axy		10959724						
ANR	10960048	Symbol	op_show_setup		10959724						
ANR	10960049	Symbol	cxy		10959724						
ANR	10960050	Symbol	penum		10959724						
ANR	10960051	Symbol	ft_composite		10959724						
ANR	10960052	Symbol	* ( op_proc_t * ) & penum -> enum_client_data		10959724						
ANR	10960053	Symbol	op [ - 3 ] . value		10959724						
ANR	10960054	Symbol	zawidthshow		10959724						
ANR	10960055	Symbol	imemory_local		10959724						
ANR	10960056	Symbol	* cxy		10959724						
ANR	10960057	Symbol	* axy		10959724						
ANR	10960058	Symbol	t_integer		10959724						
ANR	10960059	Symbol	i_ctx_p		10959724						
ANR	10960060	Symbol	single_byte_space		10959724						
ANR	10960061	Symbol	op_show_finish_setup		10959724						
ANR	10960062	Symbol	finish_show		10959724						
ANR	10960063	Function	zawidthshow	199:0:6245:6332							
ANR	10960064	FunctionDef	zawidthshow (i_ctx_t * i_ctx_p)		10960063	0					
ANR	10960065	CompoundStatement		201:0:6286:6332	10960063	0					
ANR	10960066	ReturnStatement	"return ( awidthshow_aux ( i_ctx_p , false ) ) ;"	202:4:6292:6330	10960063	0	True				
ANR	10960067	CallExpression	"awidthshow_aux ( i_ctx_p , false )"		10960063	0					
ANR	10960068	Callee	awidthshow_aux		10960063	0					
ANR	10960069	Identifier	awidthshow_aux		10960063	0					
ANR	10960070	ArgumentList	i_ctx_p		10960063	1					
ANR	10960071	Argument	i_ctx_p		10960063	0					
ANR	10960072	Identifier	i_ctx_p		10960063	0					
ANR	10960073	Argument	false		10960063	1					
ANR	10960074	Identifier	false		10960063	0					
ANR	10960075	ReturnType	static int		10960063	1					
ANR	10960076	Identifier	zawidthshow		10960063	2					
ANR	10960077	ParameterList	i_ctx_t * i_ctx_p		10960063	3					
ANR	10960078	Parameter	i_ctx_t * i_ctx_p	200:12:6268:6283	10960063	0	True				
ANR	10960079	ParameterType	i_ctx_t *		10960063	0					
ANR	10960080	Identifier	i_ctx_p		10960063	1					
ANR	10960081	CFGEntryNode	ENTRY		10960063		True				
ANR	10960082	CFGExitNode	EXIT		10960063		True				
ANR	10960083	Symbol	i_ctx_p		10960063						
ANR	10960084	Symbol	false		10960063						
ANR	10960085	Symbol	awidthshow_aux		10960063						
ANR	10960086	Function	zpdfawidthshow	206:0:6394:6483							
ANR	10960087	FunctionDef	zpdfawidthshow (i_ctx_t * i_ctx_p)		10960086	0					
ANR	10960088	CompoundStatement		208:0:6438:6483	10960086	0					
ANR	10960089	ReturnStatement	"return ( awidthshow_aux ( i_ctx_p , true ) ) ;"	209:4:6444:6481	10960086	0	True				
ANR	10960090	CallExpression	"awidthshow_aux ( i_ctx_p , true )"		10960086	0					
ANR	10960091	Callee	awidthshow_aux		10960086	0					
ANR	10960092	Identifier	awidthshow_aux		10960086	0					
ANR	10960093	ArgumentList	i_ctx_p		10960086	1					
ANR	10960094	Argument	i_ctx_p		10960086	0					
ANR	10960095	Identifier	i_ctx_p		10960086	0					
ANR	10960096	Argument	true		10960086	1					
ANR	10960097	Identifier	true		10960086	0					
ANR	10960098	ReturnType	static int		10960086	1					
ANR	10960099	Identifier	zpdfawidthshow		10960086	2					
ANR	10960100	ParameterList	i_ctx_t * i_ctx_p		10960086	3					
ANR	10960101	Parameter	i_ctx_t * i_ctx_p	207:15:6420:6435	10960086	0	True				
ANR	10960102	ParameterType	i_ctx_t *		10960086	0					
ANR	10960103	Identifier	i_ctx_p		10960086	1					
ANR	10960104	CFGEntryNode	ENTRY		10960086		True				
ANR	10960105	CFGExitNode	EXIT		10960086		True				
ANR	10960106	Symbol	i_ctx_p		10960086						
ANR	10960107	Symbol	true		10960086						
ANR	10960108	Symbol	awidthshow_aux		10960086						
ANR	10960109	Function	zkshow	213:0:6516:7467							
ANR	10960110	FunctionDef	zkshow (i_ctx_t * i_ctx_p)		10960109	0					
ANR	10960111	CompoundStatement		215:0:6552:7467	10960109	0					
ANR	10960112	IdentifierDeclStatement	os_ptr op = osp ;	216:4:6558:6573	10960109	0	True				
ANR	10960113	IdentifierDecl	op = osp		10960109	0					
ANR	10960114	IdentifierDeclType	os_ptr		10960109	0					
ANR	10960115	Identifier	op		10960109	1					
ANR	10960116	AssignmentExpression	op = osp		10960109	2		=			
ANR	10960117	Identifier	osp		10960109	0					
ANR	10960118	Identifier	osp		10960109	1					
ANR	10960119	IdentifierDeclStatement	gs_text_enum_t * penum ;	217:4:6579:6600	10960109	1	True				
ANR	10960120	IdentifierDecl	* penum		10960109	0					
ANR	10960121	IdentifierDeclType	gs_text_enum_t *		10960109	0					
ANR	10960122	Identifier	penum		10960109	1					
ANR	10960123	IdentifierDeclStatement	int code ;	218:4:6606:6614	10960109	2	True				
ANR	10960124	IdentifierDecl	code		10960109	0					
ANR	10960125	IdentifierDeclType	int		10960109	0					
ANR	10960126	Identifier	code		10960109	1					
ANR	10960127	ExpressionStatement	"check_read_type ( * op , t_string )"	220:4:6621:6651	10960109	3	True				
ANR	10960128	CallExpression	"check_read_type ( * op , t_string )"		10960109	0					
ANR	10960129	Callee	check_read_type		10960109	0					
ANR	10960130	Identifier	check_read_type		10960109	0					
ANR	10960131	ArgumentList	* op		10960109	1					
ANR	10960132	Argument	* op		10960109	0					
ANR	10960133	UnaryOperationExpression	* op		10960109	0					
ANR	10960134	UnaryOperator	*		10960109	0					
ANR	10960135	Identifier	op		10960109	1					
ANR	10960136	Argument	t_string		10960109	1					
ANR	10960137	Identifier	t_string		10960109	0					
ANR	10960138	ExpressionStatement	check_proc ( op [ - 1 ] )	221:4:6657:6675	10960109	4	True				
ANR	10960139	CallExpression	check_proc ( op [ - 1 ] )		10960109	0					
ANR	10960140	Callee	check_proc		10960109	0					
ANR	10960141	Identifier	check_proc		10960109	0					
ANR	10960142	ArgumentList	op [ - 1 ]		10960109	1					
ANR	10960143	Argument	op [ - 1 ]		10960109	0					
ANR	10960144	ArrayIndexing	op [ - 1 ]		10960109	0					
ANR	10960145	Identifier	op		10960109	0					
ANR	10960146	UnaryOperationExpression	- 1		10960109	1					
ANR	10960147	UnaryOperator	-		10960109	0					
ANR	10960148	PrimaryExpression	1		10960109	1					
ANR	10960149	IfStatement	if ( gs_currentfont ( igs ) -> FontType == ft_composite )		10960109	5					
ANR	10960150	Condition	gs_currentfont ( igs ) -> FontType == ft_composite	227:8:6880:6924	10960109	0	True				
ANR	10960151	EqualityExpression	gs_currentfont ( igs ) -> FontType == ft_composite		10960109	0		==			
ANR	10960152	PtrMemberAccess	gs_currentfont ( igs ) -> FontType		10960109	0					
ANR	10960153	CallExpression	gs_currentfont ( igs )		10960109	0					
ANR	10960154	Callee	gs_currentfont		10960109	0					
ANR	10960155	Identifier	gs_currentfont		10960109	0					
ANR	10960156	ArgumentList	igs		10960109	1					
ANR	10960157	Argument	igs		10960109	0					
ANR	10960158	Identifier	igs		10960109	0					
ANR	10960159	Identifier	FontType		10960109	1					
ANR	10960160	Identifier	ft_composite		10960109	1					
ANR	10960161	ExpressionStatement	return_error ( gs_error_invalidfont )	228:8:6935:6969	10960109	1	True				
ANR	10960162	CallExpression	return_error ( gs_error_invalidfont )		10960109	0					
ANR	10960163	Callee	return_error		10960109	0					
ANR	10960164	Identifier	return_error		10960109	0					
ANR	10960165	ArgumentList	gs_error_invalidfont		10960109	1					
ANR	10960166	Argument	gs_error_invalidfont		10960109	0					
ANR	10960167	Identifier	gs_error_invalidfont		10960109	0					
ANR	10960168	IfStatement	"if ( ( code = op_show_setup ( i_ctx_p , op ) ) != 0 || ( code = gs_kshow_begin ( igs , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0 )"		10960109	6					
ANR	10960169	Condition	"( code = op_show_setup ( i_ctx_p , op ) ) != 0 || ( code = gs_kshow_begin ( igs , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0"	229:8:6979:7145	10960109	0	True				
ANR	10960170	OrExpression	"( code = op_show_setup ( i_ctx_p , op ) ) != 0 || ( code = gs_kshow_begin ( igs , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0"		10960109	0		||			
ANR	10960171	EqualityExpression	"( code = op_show_setup ( i_ctx_p , op ) ) != 0"		10960109	0		!=			
ANR	10960172	AssignmentExpression	"code = op_show_setup ( i_ctx_p , op )"		10960109	0		=			
ANR	10960173	Identifier	code		10960109	0					
ANR	10960174	CallExpression	"op_show_setup ( i_ctx_p , op )"		10960109	1					
ANR	10960175	Callee	op_show_setup		10960109	0					
ANR	10960176	Identifier	op_show_setup		10960109	0					
ANR	10960177	ArgumentList	i_ctx_p		10960109	1					
ANR	10960178	Argument	i_ctx_p		10960109	0					
ANR	10960179	Identifier	i_ctx_p		10960109	0					
ANR	10960180	Argument	op		10960109	1					
ANR	10960181	Identifier	op		10960109	0					
ANR	10960182	PrimaryExpression	0		10960109	1					
ANR	10960183	RelationalExpression	"( code = gs_kshow_begin ( igs , op -> value . bytes , r_size ( op ) , imemory_local , & penum ) ) < 0"		10960109	1		<			
ANR	10960184	AssignmentExpression	"code = gs_kshow_begin ( igs , op -> value . bytes , r_size ( op ) , imemory_local , & penum )"		10960109	0		=			
ANR	10960185	Identifier	code		10960109	0					
ANR	10960186	CallExpression	"gs_kshow_begin ( igs , op -> value . bytes , r_size ( op ) , imemory_local , & penum )"		10960109	1					
ANR	10960187	Callee	gs_kshow_begin		10960109	0					
ANR	10960188	Identifier	gs_kshow_begin		10960109	0					
ANR	10960189	ArgumentList	igs		10960109	1					
ANR	10960190	Argument	igs		10960109	0					
ANR	10960191	Identifier	igs		10960109	0					
ANR	10960192	Argument	op -> value . bytes		10960109	1					
ANR	10960193	MemberAccess	op -> value . bytes		10960109	0					
ANR	10960194	PtrMemberAccess	op -> value		10960109	0					
ANR	10960195	Identifier	op		10960109	0					
ANR	10960196	Identifier	value		10960109	1					
ANR	10960197	Identifier	bytes		10960109	1					
ANR	10960198	Argument	r_size ( op )		10960109	2					
ANR	10960199	CallExpression	r_size ( op )		10960109	0					
ANR	10960200	Callee	r_size		10960109	0					
ANR	10960201	Identifier	r_size		10960109	0					
ANR	10960202	ArgumentList	op		10960109	1					
ANR	10960203	Argument	op		10960109	0					
ANR	10960204	Identifier	op		10960109	0					
ANR	10960205	Argument	imemory_local		10960109	3					
ANR	10960206	Identifier	imemory_local		10960109	0					
ANR	10960207	Argument	& penum		10960109	4					
ANR	10960208	UnaryOperationExpression	& penum		10960109	0					
ANR	10960209	UnaryOperator	&		10960109	0					
ANR	10960210	Identifier	penum		10960109	1					
ANR	10960211	PrimaryExpression	0		10960109	1					
ANR	10960212	ReturnStatement	return code ;	232:8:7156:7167	10960109	1	True				
ANR	10960213	Identifier	code		10960109	0					
ANR	10960214	ExpressionStatement	* ( op_proc_t * ) & penum -> enum_client_data = zkshow	233:4:7173:7220	10960109	7	True				
ANR	10960215	AssignmentExpression	* ( op_proc_t * ) & penum -> enum_client_data = zkshow		10960109	0		=			
ANR	10960216	UnaryOperationExpression	* ( op_proc_t * ) & penum -> enum_client_data		10960109	0					
ANR	10960217	UnaryOperator	*		10960109	0					
ANR	10960218	CastExpression	( op_proc_t * ) & penum -> enum_client_data		10960109	1					
ANR	10960219	CastTarget	op_proc_t *		10960109	0					
ANR	10960220	UnaryOperationExpression	& penum -> enum_client_data		10960109	1					
ANR	10960221	UnaryOperator	&		10960109	0					
ANR	10960222	PtrMemberAccess	penum -> enum_client_data		10960109	1					
ANR	10960223	Identifier	penum		10960109	0					
ANR	10960224	Identifier	enum_client_data		10960109	1					
ANR	10960225	Identifier	zkshow		10960109	1					
ANR	10960226	IfStatement	"if ( ( code = op_show_finish_setup ( i_ctx_p , penum , 2 , finish_show ) ) < 0 )"		10960109	8					
ANR	10960227	Condition	"( code = op_show_finish_setup ( i_ctx_p , penum , 2 , finish_show ) ) < 0"	234:8:7230:7294	10960109	0	True				
ANR	10960228	RelationalExpression	"( code = op_show_finish_setup ( i_ctx_p , penum , 2 , finish_show ) ) < 0"		10960109	0		<			
ANR	10960229	AssignmentExpression	"code = op_show_finish_setup ( i_ctx_p , penum , 2 , finish_show )"		10960109	0		=			
ANR	10960230	Identifier	code		10960109	0					
ANR	10960231	CallExpression	"op_show_finish_setup ( i_ctx_p , penum , 2 , finish_show )"		10960109	1					
ANR	10960232	Callee	op_show_finish_setup		10960109	0					
ANR	10960233	Identifier	op_show_finish_setup		10960109	0					
ANR	10960234	ArgumentList	i_ctx_p		10960109	1					
ANR	10960235	Argument	i_ctx_p		10960109	0					
ANR	10960236	Identifier	i_ctx_p		10960109	0					
ANR	10960237	Argument	penum		10960109	1					
ANR	10960238	Identifier	penum		10960109	0					
ANR	10960239	Argument	2		10960109	2					
ANR	10960240	PrimaryExpression	2		10960109	0					
ANR	10960241	Argument	finish_show		10960109	3					
ANR	10960242	Identifier	finish_show		10960109	0					
ANR	10960243	PrimaryExpression	0		10960109	1					
ANR	10960244	CompoundStatement		20:75:744:744	10960109	1					
ANR	10960245	ExpressionStatement	"ifree_object ( penum , ""op_show_enum_setup"" )"	235:8:7307:7348	10960109	0	True				
ANR	10960246	CallExpression	"ifree_object ( penum , ""op_show_enum_setup"" )"		10960109	0					
ANR	10960247	Callee	ifree_object		10960109	0					
ANR	10960248	Identifier	ifree_object		10960109	0					
ANR	10960249	ArgumentList	penum		10960109	1					
ANR	10960250	Argument	penum		10960109	0					
ANR	10960251	Identifier	penum		10960109	0					
ANR	10960252	Argument	"""op_show_enum_setup"""		10960109	1					
ANR	10960253	PrimaryExpression	"""op_show_enum_setup"""		10960109	0					
ANR	10960254	ReturnStatement	return code ;	236:8:7358:7369	10960109	1	True				
ANR	10960255	Identifier	code		10960109	0					
ANR	10960256	ExpressionStatement	sslot = op [ - 1 ]	238:4:7381:7395	10960109	9	True				
ANR	10960257	AssignmentExpression	sslot = op [ - 1 ]		10960109	0		=			
ANR	10960258	Identifier	sslot		10960109	0					
ANR	10960259	ArrayIndexing	op [ - 1 ]		10960109	1					
ANR	10960260	Identifier	op		10960109	0					
ANR	10960261	UnaryOperationExpression	- 1		10960109	1					
ANR	10960262	UnaryOperator	-		10960109	0					
ANR	10960263	PrimaryExpression	1		10960109	1					
ANR	10960264	ReturnStatement	"return op_show_continue_pop ( i_ctx_p , 2 ) ;"	239:4:7426:7465	10960109	10	True				
ANR	10960265	CallExpression	"op_show_continue_pop ( i_ctx_p , 2 )"		10960109	0					
ANR	10960266	Callee	op_show_continue_pop		10960109	0					
ANR	10960267	Identifier	op_show_continue_pop		10960109	0					
ANR	10960268	ArgumentList	i_ctx_p		10960109	1					
ANR	10960269	Argument	i_ctx_p		10960109	0					
ANR	10960270	Identifier	i_ctx_p		10960109	0					
ANR	10960271	Argument	2		10960109	1					
ANR	10960272	PrimaryExpression	2		10960109	0					
ANR	10960273	ReturnType	static int		10960109	1					
ANR	10960274	Identifier	zkshow		10960109	2					
ANR	10960275	ParameterList	i_ctx_t * i_ctx_p		10960109	3					
ANR	10960276	Parameter	i_ctx_t * i_ctx_p	214:7:6534:6549	10960109	0	True				
ANR	10960277	ParameterType	i_ctx_t *		10960109	0					
ANR	10960278	Identifier	i_ctx_p		10960109	1					
ANR	10960279	CFGEntryNode	ENTRY		10960109		True				
ANR	10960280	CFGExitNode	EXIT		10960109		True				
ANR	10960281	Symbol	gs_kshow_begin		10960109						
ANR	10960282	Symbol	* penum		10960109						
ANR	10960283	Symbol	& penum -> enum_client_data		10960109						
ANR	10960284	Symbol	op_show_continue_pop		10960109						
ANR	10960285	Symbol	code		10960109						
ANR	10960286	Symbol	* op		10960109						
ANR	10960287	Symbol	gs_currentfont ( igs ) -> FontType		10960109						
ANR	10960288	Symbol	osp		10960109						
ANR	10960289	Symbol	penum -> enum_client_data		10960109						
ANR	10960290	Symbol	igs		10960109						
ANR	10960291	Symbol	* gs_currentfont		10960109						
ANR	10960292	Symbol	op -> value		10960109						
ANR	10960293	Symbol	& penum		10960109						
ANR	10960294	Symbol	gs_currentfont		10960109						
ANR	10960295	Symbol	r_size		10960109						
ANR	10960296	Symbol	op -> value . bytes		10960109						
ANR	10960297	Symbol	gs_error_invalidfont		10960109						
ANR	10960298	Symbol	op		10960109						
ANR	10960299	Symbol	op_show_setup		10960109						
ANR	10960300	Symbol	zkshow		10960109						
ANR	10960301	Symbol	penum		10960109						
ANR	10960302	Symbol	ft_composite		10960109						
ANR	10960303	Symbol	* ( op_proc_t * ) & penum -> enum_client_data		10960109						
ANR	10960304	Symbol	t_string		10960109						
ANR	10960305	Symbol	imemory_local		10960109						
ANR	10960306	Symbol	i_ctx_p		10960109						
ANR	10960307	Symbol	sslot		10960109						
ANR	10960308	Symbol	finish_show		10960109						
ANR	10960309	Symbol	op_show_finish_setup		10960109						
ANR	10960310	Function	finish_show	244:0:7560:7617							
ANR	10960311	FunctionDef	finish_show (i_ctx_t * i_ctx_p)		10960310	0					
ANR	10960312	CompoundStatement		246:0:7601:7617	10960310	0					
ANR	10960313	ReturnStatement	return 0 ;	247:4:7607:7615	10960310	0	True				
ANR	10960314	PrimaryExpression	0		10960310	0					
ANR	10960315	ReturnType	static int		10960310	1					
ANR	10960316	Identifier	finish_show		10960310	2					
ANR	10960317	ParameterList	i_ctx_t * i_ctx_p		10960310	3					
ANR	10960318	Parameter	i_ctx_t * i_ctx_p	245:12:7583:7598	10960310	0	True				
ANR	10960319	ParameterType	i_ctx_t *		10960310	0					
ANR	10960320	Identifier	i_ctx_p		10960310	1					
ANR	10960321	CFGEntryNode	ENTRY		10960310		True				
ANR	10960322	CFGExitNode	EXIT		10960310		True				
ANR	10960323	Symbol	i_ctx_p		10960310						
ANR	10960324	Function	zstringwidth	251:0:7657:8232							
ANR	10960325	FunctionDef	zstringwidth (i_ctx_t * i_ctx_p)		10960324	0					
ANR	10960326	CompoundStatement		253:0:7699:8232	10960324	0					
ANR	10960327	IdentifierDeclStatement	os_ptr op = osp ;	254:4:7705:7720	10960324	0	True				
ANR	10960328	IdentifierDecl	op = osp		10960324	0					
ANR	10960329	IdentifierDeclType	os_ptr		10960324	0					
ANR	10960330	Identifier	op		10960324	1					
ANR	10960331	AssignmentExpression	op = osp		10960324	2		=			
ANR	10960332	Identifier	osp		10960324	0					
ANR	10960333	Identifier	osp		10960324	1					
ANR	10960334	IdentifierDeclStatement	gs_text_enum_t * penum ;	255:4:7726:7747	10960324	1	True				
ANR	10960335	IdentifierDecl	* penum		10960324	0					
ANR	10960336	IdentifierDeclType	gs_text_enum_t *		10960324	0					
ANR	10960337	Identifier	penum		10960324	1					
ANR	10960338	IdentifierDeclStatement	"int code = op_show_setup ( i_ctx_p , op ) ;"	256:4:7753:7790	10960324	2	True				
ANR	10960339	IdentifierDecl	"code = op_show_setup ( i_ctx_p , op )"		10960324	0					
ANR	10960340	IdentifierDeclType	int		10960324	0					
ANR	10960341	Identifier	code		10960324	1					
ANR	10960342	AssignmentExpression	"code = op_show_setup ( i_ctx_p , op )"		10960324	2		=			
ANR	10960343	Identifier	code		10960324	0					
ANR	10960344	CallExpression	"op_show_setup ( i_ctx_p , op )"		10960324	1					
ANR	10960345	Callee	op_show_setup		10960324	0					
ANR	10960346	Identifier	op_show_setup		10960324	0					
ANR	10960347	ArgumentList	i_ctx_p		10960324	1					
ANR	10960348	Argument	i_ctx_p		10960324	0					
ANR	10960349	Identifier	i_ctx_p		10960324	0					
ANR	10960350	Argument	op		10960324	1					
ANR	10960351	Identifier	op		10960324	0					
ANR	10960352	IfStatement	"if ( code != 0 || ( code = gs_stringwidth_begin ( igs , op -> value . bytes , r_size ( op ) , imemory , & penum ) ) < 0 )"		10960324	3					
ANR	10960353	Condition	"code != 0 || ( code = gs_stringwidth_begin ( igs , op -> value . bytes , r_size ( op ) , imemory , & penum ) ) < 0"	258:8:7801:7942	10960324	0	True				
ANR	10960354	OrExpression	"code != 0 || ( code = gs_stringwidth_begin ( igs , op -> value . bytes , r_size ( op ) , imemory , & penum ) ) < 0"		10960324	0		||			
ANR	10960355	EqualityExpression	code != 0		10960324	0		!=			
ANR	10960356	Identifier	code		10960324	0					
ANR	10960357	PrimaryExpression	0		10960324	1					
ANR	10960358	RelationalExpression	"( code = gs_stringwidth_begin ( igs , op -> value . bytes , r_size ( op ) , imemory , & penum ) ) < 0"		10960324	1		<			
ANR	10960359	AssignmentExpression	"code = gs_stringwidth_begin ( igs , op -> value . bytes , r_size ( op ) , imemory , & penum )"		10960324	0		=			
ANR	10960360	Identifier	code		10960324	0					
ANR	10960361	CallExpression	"gs_stringwidth_begin ( igs , op -> value . bytes , r_size ( op ) , imemory , & penum )"		10960324	1					
ANR	10960362	Callee	gs_stringwidth_begin		10960324	0					
ANR	10960363	Identifier	gs_stringwidth_begin		10960324	0					
ANR	10960364	ArgumentList	igs		10960324	1					
ANR	10960365	Argument	igs		10960324	0					
ANR	10960366	Identifier	igs		10960324	0					
ANR	10960367	Argument	op -> value . bytes		10960324	1					
ANR	10960368	MemberAccess	op -> value . bytes		10960324	0					
ANR	10960369	PtrMemberAccess	op -> value		10960324	0					
ANR	10960370	Identifier	op		10960324	0					
ANR	10960371	Identifier	value		10960324	1					
ANR	10960372	Identifier	bytes		10960324	1					
ANR	10960373	Argument	r_size ( op )		10960324	2					
ANR	10960374	CallExpression	r_size ( op )		10960324	0					
ANR	10960375	Callee	r_size		10960324	0					
ANR	10960376	Identifier	r_size		10960324	0					
ANR	10960377	ArgumentList	op		10960324	1					
ANR	10960378	Argument	op		10960324	0					
ANR	10960379	Identifier	op		10960324	0					
ANR	10960380	Argument	imemory		10960324	3					
ANR	10960381	Identifier	imemory		10960324	0					
ANR	10960382	Argument	& penum		10960324	4					
ANR	10960383	UnaryOperationExpression	& penum		10960324	0					
ANR	10960384	UnaryOperator	&		10960324	0					
ANR	10960385	Identifier	penum		10960324	1					
ANR	10960386	PrimaryExpression	0		10960324	1					
ANR	10960387	ReturnStatement	return code ;	261:8:7953:7964	10960324	1	True				
ANR	10960388	Identifier	code		10960324	0					
ANR	10960389	ExpressionStatement	* ( op_proc_t * ) & penum -> enum_client_data = zstringwidth	262:4:7970:8023	10960324	4	True				
ANR	10960390	AssignmentExpression	* ( op_proc_t * ) & penum -> enum_client_data = zstringwidth		10960324	0		=			
ANR	10960391	UnaryOperationExpression	* ( op_proc_t * ) & penum -> enum_client_data		10960324	0					
ANR	10960392	UnaryOperator	*		10960324	0					
ANR	10960393	CastExpression	( op_proc_t * ) & penum -> enum_client_data		10960324	1					
ANR	10960394	CastTarget	op_proc_t *		10960324	0					
ANR	10960395	UnaryOperationExpression	& penum -> enum_client_data		10960324	1					
ANR	10960396	UnaryOperator	&		10960324	0					
ANR	10960397	PtrMemberAccess	penum -> enum_client_data		10960324	1					
ANR	10960398	Identifier	penum		10960324	0					
ANR	10960399	Identifier	enum_client_data		10960324	1					
ANR	10960400	Identifier	zstringwidth		10960324	1					
ANR	10960401	IfStatement	"if ( ( code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_stringwidth ) ) < 0 )"		10960324	5					
ANR	10960402	Condition	"( code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_stringwidth ) ) < 0"	263:8:8033:8104	10960324	0	True				
ANR	10960403	RelationalExpression	"( code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_stringwidth ) ) < 0"		10960324	0		<			
ANR	10960404	AssignmentExpression	"code = op_show_finish_setup ( i_ctx_p , penum , 1 , finish_stringwidth )"		10960324	0		=			
ANR	10960405	Identifier	code		10960324	0					
ANR	10960406	CallExpression	"op_show_finish_setup ( i_ctx_p , penum , 1 , finish_stringwidth )"		10960324	1					
ANR	10960407	Callee	op_show_finish_setup		10960324	0					
ANR	10960408	Identifier	op_show_finish_setup		10960324	0					
ANR	10960409	ArgumentList	i_ctx_p		10960324	1					
ANR	10960410	Argument	i_ctx_p		10960324	0					
ANR	10960411	Identifier	i_ctx_p		10960324	0					
ANR	10960412	Argument	penum		10960324	1					
ANR	10960413	Identifier	penum		10960324	0					
ANR	10960414	Argument	1		10960324	2					
ANR	10960415	PrimaryExpression	1		10960324	0					
ANR	10960416	Argument	finish_stringwidth		10960324	3					
ANR	10960417	Identifier	finish_stringwidth		10960324	0					
ANR	10960418	PrimaryExpression	0		10960324	1					
ANR	10960419	CompoundStatement		11:82:407:407	10960324	1					
ANR	10960420	ExpressionStatement	"ifree_object ( penum , ""op_show_enum_setup"" )"	264:8:8117:8158	10960324	0	True				
ANR	10960421	CallExpression	"ifree_object ( penum , ""op_show_enum_setup"" )"		10960324	0					
ANR	10960422	Callee	ifree_object		10960324	0					
ANR	10960423	Identifier	ifree_object		10960324	0					
ANR	10960424	ArgumentList	penum		10960324	1					
ANR	10960425	Argument	penum		10960324	0					
ANR	10960426	Identifier	penum		10960324	0					
ANR	10960427	Argument	"""op_show_enum_setup"""		10960324	1					
ANR	10960428	PrimaryExpression	"""op_show_enum_setup"""		10960324	0					
ANR	10960429	ReturnStatement	return code ;	265:8:8168:8179	10960324	1	True				
ANR	10960430	Identifier	code		10960324	0					
ANR	10960431	ReturnStatement	"return op_show_continue_pop ( i_ctx_p , 1 ) ;"	267:4:8191:8230	10960324	6	True				
ANR	10960432	CallExpression	"op_show_continue_pop ( i_ctx_p , 1 )"		10960324	0					
ANR	10960433	Callee	op_show_continue_pop		10960324	0					
ANR	10960434	Identifier	op_show_continue_pop		10960324	0					
ANR	10960435	ArgumentList	i_ctx_p		10960324	1					
ANR	10960436	Argument	i_ctx_p		10960324	0					
ANR	10960437	Identifier	i_ctx_p		10960324	0					
ANR	10960438	Argument	1		10960324	1					
ANR	10960439	PrimaryExpression	1		10960324	0					
ANR	10960440	ReturnType	static int		10960324	1					
ANR	10960441	Identifier	zstringwidth		10960324	2					
ANR	10960442	ParameterList	i_ctx_t * i_ctx_p		10960324	3					
ANR	10960443	Parameter	i_ctx_t * i_ctx_p	252:13:7681:7696	10960324	0	True				
ANR	10960444	ParameterType	i_ctx_t *		10960324	0					
ANR	10960445	Identifier	i_ctx_p		10960324	1					
ANR	10960446	CFGEntryNode	ENTRY		10960324		True				
ANR	10960447	CFGExitNode	EXIT		10960324		True				
ANR	10960448	Symbol	op		10960324						
ANR	10960449	Symbol	* penum		10960324						
ANR	10960450	Symbol	& penum -> enum_client_data		10960324						
ANR	10960451	Symbol	op_show_continue_pop		10960324						
ANR	10960452	Symbol	code		10960324						
ANR	10960453	Symbol	op_show_setup		10960324						
ANR	10960454	Symbol	gs_stringwidth_begin		10960324						
ANR	10960455	Symbol	* op		10960324						
ANR	10960456	Symbol	penum		10960324						
ANR	10960457	Symbol	osp		10960324						
ANR	10960458	Symbol	finish_stringwidth		10960324						
ANR	10960459	Symbol	* ( op_proc_t * ) & penum -> enum_client_data		10960324						
ANR	10960460	Symbol	penum -> enum_client_data		10960324						
ANR	10960461	Symbol	igs		10960324						
ANR	10960462	Symbol	zstringwidth		10960324						
ANR	10960463	Symbol	i_ctx_p		10960324						
ANR	10960464	Symbol	& penum		10960324						
ANR	10960465	Symbol	op -> value		10960324						
ANR	10960466	Symbol	r_size		10960324						
ANR	10960467	Symbol	op -> value . bytes		10960324						
ANR	10960468	Symbol	imemory		10960324						
ANR	10960469	Symbol	op_show_finish_setup		10960324						
ANR	10960470	Function	finish_stringwidth	272:0:8367:8579							
ANR	10960471	FunctionDef	finish_stringwidth (i_ctx_t * i_ctx_p)		10960470	0					
ANR	10960472	CompoundStatement		274:0:8408:8579	10960470	0					
ANR	10960473	IdentifierDeclStatement	os_ptr op = osp ;	275:4:8414:8429	10960470	0	True				
ANR	10960474	IdentifierDecl	op = osp		10960470	0					
ANR	10960475	IdentifierDeclType	os_ptr		10960470	0					
ANR	10960476	Identifier	op		10960470	1					
ANR	10960477	AssignmentExpression	op = osp		10960470	2		=			
ANR	10960478	Identifier	osp		10960470	0					
ANR	10960479	Identifier	osp		10960470	1					
ANR	10960480	IdentifierDeclStatement	gs_point width ;	276:4:8435:8449	10960470	1	True				
ANR	10960481	IdentifierDecl	width		10960470	0					
ANR	10960482	IdentifierDeclType	gs_point		10960470	0					
ANR	10960483	Identifier	width		10960470	1					
ANR	10960484	ExpressionStatement	"gs_text_total_width ( senum , & width )"	278:4:8456:8490	10960470	2	True				
ANR	10960485	CallExpression	"gs_text_total_width ( senum , & width )"		10960470	0					
ANR	10960486	Callee	gs_text_total_width		10960470	0					
ANR	10960487	Identifier	gs_text_total_width		10960470	0					
ANR	10960488	ArgumentList	senum		10960470	1					
ANR	10960489	Argument	senum		10960470	0					
ANR	10960490	Identifier	senum		10960470	0					
ANR	10960491	Argument	& width		10960470	1					
ANR	10960492	UnaryOperationExpression	& width		10960470	0					
ANR	10960493	UnaryOperator	&		10960470	0					
ANR	10960494	Identifier	width		10960470	1					
ANR	10960495	ExpressionStatement	push ( 2 )	279:4:8496:8503	10960470	3	True				
ANR	10960496	CallExpression	push ( 2 )		10960470	0					
ANR	10960497	Callee	push		10960470	0					
ANR	10960498	Identifier	push		10960470	0					
ANR	10960499	ArgumentList	2		10960470	1					
ANR	10960500	Argument	2		10960470	0					
ANR	10960501	PrimaryExpression	2		10960470	0					
ANR	10960502	ExpressionStatement	"make_real ( op - 1 , width . x )"	280:4:8509:8535	10960470	4	True				
ANR	10960503	CallExpression	"make_real ( op - 1 , width . x )"		10960470	0					
ANR	10960504	Callee	make_real		10960470	0					
ANR	10960505	Identifier	make_real		10960470	0					
ANR	10960506	ArgumentList	op - 1		10960470	1					
ANR	10960507	Argument	op - 1		10960470	0					
ANR	10960508	AdditiveExpression	op - 1		10960470	0		-			
ANR	10960509	Identifier	op		10960470	0					
ANR	10960510	PrimaryExpression	1		10960470	1					
ANR	10960511	Argument	width . x		10960470	1					
ANR	10960512	MemberAccess	width . x		10960470	0					
ANR	10960513	Identifier	width		10960470	0					
ANR	10960514	Identifier	x		10960470	1					
ANR	10960515	ExpressionStatement	"make_real ( op , width . y )"	281:4:8541:8563	10960470	5	True				
ANR	10960516	CallExpression	"make_real ( op , width . y )"		10960470	0					
ANR	10960517	Callee	make_real		10960470	0					
ANR	10960518	Identifier	make_real		10960470	0					
ANR	10960519	ArgumentList	op		10960470	1					
ANR	10960520	Argument	op		10960470	0					
ANR	10960521	Identifier	op		10960470	0					
ANR	10960522	Argument	width . y		10960470	1					
ANR	10960523	MemberAccess	width . y		10960470	0					
ANR	10960524	Identifier	width		10960470	0					
ANR	10960525	Identifier	y		10960470	1					
ANR	10960526	ReturnStatement	return 0 ;	282:4:8569:8577	10960470	6	True				
ANR	10960527	PrimaryExpression	0		10960470	0					
ANR	10960528	ReturnType	int		10960470	1					
ANR	10960529	Identifier	finish_stringwidth		10960470	2					
ANR	10960530	ParameterList	i_ctx_t * i_ctx_p		10960470	3					
ANR	10960531	Parameter	i_ctx_t * i_ctx_p	273:19:8390:8405	10960470	0	True				
ANR	10960532	ParameterType	i_ctx_t *		10960470	0					
ANR	10960533	Identifier	i_ctx_p		10960470	1					
ANR	10960534	CFGEntryNode	ENTRY		10960470		True				
ANR	10960535	CFGExitNode	EXIT		10960470		True				
ANR	10960536	Symbol	senum		10960470						
ANR	10960537	Symbol	op		10960470						
ANR	10960538	Symbol	i_ctx_p		10960470						
ANR	10960539	Symbol	width		10960470						
ANR	10960540	Symbol	width . y		10960470						
ANR	10960541	Symbol	width . x		10960470						
ANR	10960542	Symbol	& width		10960470						
ANR	10960543	Symbol	osp		10960470						
ANR	10960544	Function	zchar_path	286:0:8631:9369							
ANR	10960545	FunctionDef	"zchar_path (i_ctx_t * i_ctx_p , op_proc_t proc , int ( * begin ) ( gs_gstate * , const byte * , uint , bool , gs_memory_t * , gs_text_enum_t * * ))"		10960544	0					
ANR	10960546	CompoundStatement		290:0:8809:9369	10960544	0					
ANR	10960547	IdentifierDeclStatement	os_ptr op = osp ;	291:4:8815:8830	10960544	0	True				
ANR	10960548	IdentifierDecl	op = osp		10960544	0					
ANR	10960549	IdentifierDeclType	os_ptr		10960544	0					
ANR	10960550	Identifier	op		10960544	1					
ANR	10960551	AssignmentExpression	op = osp		10960544	2		=			
ANR	10960552	Identifier	osp		10960544	0					
ANR	10960553	Identifier	osp		10960544	1					
ANR	10960554	IdentifierDeclStatement	gs_text_enum_t * penum ;	292:4:8836:8857	10960544	1	True				
ANR	10960555	IdentifierDecl	* penum		10960544	0					
ANR	10960556	IdentifierDeclType	gs_text_enum_t *		10960544	0					
ANR	10960557	Identifier	penum		10960544	1					
ANR	10960558	IdentifierDeclStatement	int code ;	293:4:8863:8871	10960544	2	True				
ANR	10960559	IdentifierDecl	code		10960544	0					
ANR	10960560	IdentifierDeclType	int		10960544	0					
ANR	10960561	Identifier	code		10960544	1					
ANR	10960562	ExpressionStatement	"check_type ( * op , t_boolean )"	295:4:8878:8904	10960544	3	True				
ANR	10960563	CallExpression	"check_type ( * op , t_boolean )"		10960544	0					
ANR	10960564	Callee	check_type		10960544	0					
ANR	10960565	Identifier	check_type		10960544	0					
ANR	10960566	ArgumentList	* op		10960544	1					
ANR	10960567	Argument	* op		10960544	0					
ANR	10960568	UnaryOperationExpression	* op		10960544	0					
ANR	10960569	UnaryOperator	*		10960544	0					
ANR	10960570	Identifier	op		10960544	1					
ANR	10960571	Argument	t_boolean		10960544	1					
ANR	10960572	Identifier	t_boolean		10960544	0					
ANR	10960573	ExpressionStatement	"code = op_show_setup ( i_ctx_p , op - 1 )"	296:4:8910:8947	10960544	4	True				
ANR	10960574	AssignmentExpression	"code = op_show_setup ( i_ctx_p , op - 1 )"		10960544	0		=			
ANR	10960575	Identifier	code		10960544	0					
ANR	10960576	CallExpression	"op_show_setup ( i_ctx_p , op - 1 )"		10960544	1					
ANR	10960577	Callee	op_show_setup		10960544	0					
ANR	10960578	Identifier	op_show_setup		10960544	0					
ANR	10960579	ArgumentList	i_ctx_p		10960544	1					
ANR	10960580	Argument	i_ctx_p		10960544	0					
ANR	10960581	Identifier	i_ctx_p		10960544	0					
ANR	10960582	Argument	op - 1		10960544	1					
ANR	10960583	AdditiveExpression	op - 1		10960544	0		-			
ANR	10960584	Identifier	op		10960544	0					
ANR	10960585	PrimaryExpression	1		10960544	1					
ANR	10960586	IfStatement	"if ( code != 0 || ( code = begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , op -> value . boolval , imemory , & penum ) ) < 0 )"		10960544	5					
ANR	10960587	Condition	"code != 0 || ( code = begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , op -> value . boolval , imemory , & penum ) ) < 0"	297:8:8957:9094	10960544	0	True				
ANR	10960588	OrExpression	"code != 0 || ( code = begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , op -> value . boolval , imemory , & penum ) ) < 0"		10960544	0		||			
ANR	10960589	EqualityExpression	code != 0		10960544	0		!=			
ANR	10960590	Identifier	code		10960544	0					
ANR	10960591	PrimaryExpression	0		10960544	1					
ANR	10960592	RelationalExpression	"( code = begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , op -> value . boolval , imemory , & penum ) ) < 0"		10960544	1		<			
ANR	10960593	AssignmentExpression	"code = begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , op -> value . boolval , imemory , & penum )"		10960544	0		=			
ANR	10960594	Identifier	code		10960544	0					
ANR	10960595	CallExpression	"begin ( igs , op [ - 1 ] . value . bytes , r_size ( op - 1 ) , op -> value . boolval , imemory , & penum )"		10960544	1					
ANR	10960596	Callee	begin		10960544	0					
ANR	10960597	Identifier	begin		10960544	0					
ANR	10960598	ArgumentList	igs		10960544	1					
ANR	10960599	Argument	igs		10960544	0					
ANR	10960600	Identifier	igs		10960544	0					
ANR	10960601	Argument	op [ - 1 ] . value . bytes		10960544	1					
ANR	10960602	MemberAccess	op [ - 1 ] . value . bytes		10960544	0					
ANR	10960603	MemberAccess	op [ - 1 ] . value		10960544	0					
ANR	10960604	ArrayIndexing	op [ - 1 ]		10960544	0					
ANR	10960605	Identifier	op		10960544	0					
ANR	10960606	UnaryOperationExpression	- 1		10960544	1					
ANR	10960607	UnaryOperator	-		10960544	0					
ANR	10960608	PrimaryExpression	1		10960544	1					
ANR	10960609	Identifier	value		10960544	1					
ANR	10960610	Identifier	bytes		10960544	1					
ANR	10960611	Argument	r_size ( op - 1 )		10960544	2					
ANR	10960612	CallExpression	r_size ( op - 1 )		10960544	0					
ANR	10960613	Callee	r_size		10960544	0					
ANR	10960614	Identifier	r_size		10960544	0					
ANR	10960615	ArgumentList	op - 1		10960544	1					
ANR	10960616	Argument	op - 1		10960544	0					
ANR	10960617	AdditiveExpression	op - 1		10960544	0		-			
ANR	10960618	Identifier	op		10960544	0					
ANR	10960619	PrimaryExpression	1		10960544	1					
ANR	10960620	Argument	op -> value . boolval		10960544	3					
ANR	10960621	MemberAccess	op -> value . boolval		10960544	0					
ANR	10960622	PtrMemberAccess	op -> value		10960544	0					
ANR	10960623	Identifier	op		10960544	0					
ANR	10960624	Identifier	value		10960544	1					
ANR	10960625	Identifier	boolval		10960544	1					
ANR	10960626	Argument	imemory		10960544	4					
ANR	10960627	Identifier	imemory		10960544	0					
ANR	10960628	Argument	& penum		10960544	5					
ANR	10960629	UnaryOperationExpression	& penum		10960544	0					
ANR	10960630	UnaryOperator	&		10960544	0					
ANR	10960631	Identifier	penum		10960544	1					
ANR	10960632	PrimaryExpression	0		10960544	1					
ANR	10960633	ReturnStatement	return code ;	300:8:9105:9116	10960544	1	True				
ANR	10960634	Identifier	code		10960544	0					
ANR	10960635	ExpressionStatement	* ( op_proc_t * ) & penum -> enum_client_data = proc	301:4:9122:9167	10960544	6	True				
ANR	10960636	AssignmentExpression	* ( op_proc_t * ) & penum -> enum_client_data = proc		10960544	0		=			
ANR	10960637	UnaryOperationExpression	* ( op_proc_t * ) & penum -> enum_client_data		10960544	0					
ANR	10960638	UnaryOperator	*		10960544	0					
ANR	10960639	CastExpression	( op_proc_t * ) & penum -> enum_client_data		10960544	1					
ANR	10960640	CastTarget	op_proc_t *		10960544	0					
ANR	10960641	UnaryOperationExpression	& penum -> enum_client_data		10960544	1					
ANR	10960642	UnaryOperator	&		10960544	0					
ANR	10960643	PtrMemberAccess	penum -> enum_client_data		10960544	1					
ANR	10960644	Identifier	penum		10960544	0					
ANR	10960645	Identifier	enum_client_data		10960544	1					
ANR	10960646	Identifier	proc		10960544	1					
ANR	10960647	IfStatement	"if ( ( code = op_show_finish_setup ( i_ctx_p , penum , 2 , finish_show ) ) < 0 )"		10960544	7					
ANR	10960648	Condition	"( code = op_show_finish_setup ( i_ctx_p , penum , 2 , finish_show ) ) < 0"	302:8:9177:9241	10960544	0	True				
ANR	10960649	RelationalExpression	"( code = op_show_finish_setup ( i_ctx_p , penum , 2 , finish_show ) ) < 0"		10960544	0		<			
ANR	10960650	AssignmentExpression	"code = op_show_finish_setup ( i_ctx_p , penum , 2 , finish_show )"		10960544	0		=			
ANR	10960651	Identifier	code		10960544	0					
ANR	10960652	CallExpression	"op_show_finish_setup ( i_ctx_p , penum , 2 , finish_show )"		10960544	1					
ANR	10960653	Callee	op_show_finish_setup		10960544	0					
ANR	10960654	Identifier	op_show_finish_setup		10960544	0					
ANR	10960655	ArgumentList	i_ctx_p		10960544	1					
ANR	10960656	Argument	i_ctx_p		10960544	0					
ANR	10960657	Identifier	i_ctx_p		10960544	0					
ANR	10960658	Argument	penum		10960544	1					
ANR	10960659	Identifier	penum		10960544	0					
ANR	10960660	Argument	2		10960544	2					
ANR	10960661	PrimaryExpression	2		10960544	0					
ANR	10960662	Argument	finish_show		10960544	3					
ANR	10960663	Identifier	finish_show		10960544	0					
ANR	10960664	PrimaryExpression	0		10960544	1					
ANR	10960665	CompoundStatement		13:75:434:434	10960544	1					
ANR	10960666	ExpressionStatement	"ifree_object ( penum , ""op_show_enum_setup"" )"	303:8:9254:9295	10960544	0	True				
ANR	10960667	CallExpression	"ifree_object ( penum , ""op_show_enum_setup"" )"		10960544	0					
ANR	10960668	Callee	ifree_object		10960544	0					
ANR	10960669	Identifier	ifree_object		10960544	0					
ANR	10960670	ArgumentList	penum		10960544	1					
ANR	10960671	Argument	penum		10960544	0					
ANR	10960672	Identifier	penum		10960544	0					
ANR	10960673	Argument	"""op_show_enum_setup"""		10960544	1					
ANR	10960674	PrimaryExpression	"""op_show_enum_setup"""		10960544	0					
ANR	10960675	ReturnStatement	return code ;	304:8:9305:9316	10960544	1	True				
ANR	10960676	Identifier	code		10960544	0					
ANR	10960677	ReturnStatement	"return op_show_continue_pop ( i_ctx_p , 2 ) ;"	306:4:9328:9367	10960544	8	True				
ANR	10960678	CallExpression	"op_show_continue_pop ( i_ctx_p , 2 )"		10960544	0					
ANR	10960679	Callee	op_show_continue_pop		10960544	0					
ANR	10960680	Identifier	op_show_continue_pop		10960544	0					
ANR	10960681	ArgumentList	i_ctx_p		10960544	1					
ANR	10960682	Argument	i_ctx_p		10960544	0					
ANR	10960683	Identifier	i_ctx_p		10960544	0					
ANR	10960684	Argument	2		10960544	1					
ANR	10960685	PrimaryExpression	2		10960544	0					
ANR	10960686	ReturnType	static int		10960544	1					
ANR	10960687	Identifier	zchar_path		10960544	2					
ANR	10960688	ParameterList	"i_ctx_t * i_ctx_p , op_proc_t proc , int ( * begin ) ( gs_gstate * , const byte * , uint , bool , gs_memory_t * , gs_text_enum_t * * )"		10960544	3					
ANR	10960689	Parameter	i_ctx_t * i_ctx_p	287:11:8653:8668	10960544	0	True				
ANR	10960690	ParameterType	i_ctx_t *		10960544	0					
ANR	10960691	Identifier	i_ctx_p		10960544	1					
ANR	10960692	Parameter	op_proc_t proc	287:29:8671:8684	10960544	1	True				
ANR	10960693	ParameterType	op_proc_t		10960544	0					
ANR	10960694	Identifier	proc		10960544	1					
ANR	10960695	Parameter	"int ( * begin ) ( gs_gstate * , const byte * , uint , bool , gs_memory_t * , gs_text_enum_t * * )"	288:11:8698:8806	10960544	2	True				
ANR	10960696	ParameterType	"(( gs_gstate * , const byte * , uint , bool , gs_memory_t * , gs_text_enum_t * * ) int) *"		10960544	0					
ANR	10960697	Identifier	begin		10960544	1					
ANR	10960698	CFGEntryNode	ENTRY		10960544		True				
ANR	10960699	CFGExitNode	EXIT		10960544		True				
ANR	10960700	Symbol	* penum		10960544						
ANR	10960701	Symbol	& penum -> enum_client_data		10960544						
ANR	10960702	Symbol	op_show_continue_pop		10960544						
ANR	10960703	Symbol	code		10960544						
ANR	10960704	Symbol	* op		10960544						
ANR	10960705	Symbol	op [ - 1 ] . value		10960544						
ANR	10960706	Symbol	op -> value . boolval		10960544						
ANR	10960707	Symbol	osp		10960544						
ANR	10960708	Symbol	penum -> enum_client_data		10960544						
ANR	10960709	Symbol	igs		10960544						
ANR	10960710	Symbol	op -> value		10960544						
ANR	10960711	Symbol	& penum		10960544						
ANR	10960712	Symbol	r_size		10960544						
ANR	10960713	Symbol	imemory		10960544						
ANR	10960714	Symbol	op [ - 1 ] . value . bytes		10960544						
ANR	10960715	Symbol	op		10960544						
ANR	10960716	Symbol	proc		10960544						
ANR	10960717	Symbol	op_show_setup		10960544						
ANR	10960718	Symbol	penum		10960544						
ANR	10960719	Symbol	* ( op_proc_t * ) & penum -> enum_client_data		10960544						
ANR	10960720	Symbol	t_boolean		10960544						
ANR	10960721	Symbol	i_ctx_p		10960544						
ANR	10960722	Symbol	begin		10960544						
ANR	10960723	Symbol	finish_show		10960544						
ANR	10960724	Symbol	op_show_finish_setup		10960544						
ANR	10960725	Function	zcharpath	309:0:9412:9515							
ANR	10960726	FunctionDef	zcharpath (i_ctx_t * i_ctx_p)		10960725	0					
ANR	10960727	CompoundStatement		311:0:9451:9515	10960725	0					
ANR	10960728	ReturnStatement	"return zchar_path ( i_ctx_p , zcharpath , gs_charpath_begin ) ;"	312:4:9457:9513	10960725	0	True				
ANR	10960729	CallExpression	"zchar_path ( i_ctx_p , zcharpath , gs_charpath_begin )"		10960725	0					
ANR	10960730	Callee	zchar_path		10960725	0					
ANR	10960731	Identifier	zchar_path		10960725	0					
ANR	10960732	ArgumentList	i_ctx_p		10960725	1					
ANR	10960733	Argument	i_ctx_p		10960725	0					
ANR	10960734	Identifier	i_ctx_p		10960725	0					
ANR	10960735	Argument	zcharpath		10960725	1					
ANR	10960736	Identifier	zcharpath		10960725	0					
ANR	10960737	Argument	gs_charpath_begin		10960725	2					
ANR	10960738	Identifier	gs_charpath_begin		10960725	0					
ANR	10960739	ReturnType	static int		10960725	1					
ANR	10960740	Identifier	zcharpath		10960725	2					
ANR	10960741	ParameterList	i_ctx_t * i_ctx_p		10960725	3					
ANR	10960742	Parameter	i_ctx_t * i_ctx_p	310:10:9433:9448	10960725	0	True				
ANR	10960743	ParameterType	i_ctx_t *		10960725	0					
ANR	10960744	Identifier	i_ctx_p		10960725	1					
ANR	10960745	CFGEntryNode	ENTRY		10960725		True				
ANR	10960746	CFGExitNode	EXIT		10960725		True				
ANR	10960747	Symbol	zchar_path		10960725						
ANR	10960748	Symbol	i_ctx_p		10960725						
ANR	10960749	Symbol	gs_charpath_begin		10960725						
ANR	10960750	Symbol	zcharpath		10960725						
ANR	10960751	Function	zcharboxpath	315:0:9558:9670							
ANR	10960752	FunctionDef	zcharboxpath (i_ctx_t * i_ctx_p)		10960751	0					
ANR	10960753	CompoundStatement		317:0:9600:9670	10960751	0					
ANR	10960754	ReturnStatement	"return zchar_path ( i_ctx_p , zcharboxpath , gs_charboxpath_begin ) ;"	318:4:9606:9668	10960751	0	True				
ANR	10960755	CallExpression	"zchar_path ( i_ctx_p , zcharboxpath , gs_charboxpath_begin )"		10960751	0					
ANR	10960756	Callee	zchar_path		10960751	0					
ANR	10960757	Identifier	zchar_path		10960751	0					
ANR	10960758	ArgumentList	i_ctx_p		10960751	1					
ANR	10960759	Argument	i_ctx_p		10960751	0					
ANR	10960760	Identifier	i_ctx_p		10960751	0					
ANR	10960761	Argument	zcharboxpath		10960751	1					
ANR	10960762	Identifier	zcharboxpath		10960751	0					
ANR	10960763	Argument	gs_charboxpath_begin		10960751	2					
ANR	10960764	Identifier	gs_charboxpath_begin		10960751	0					
ANR	10960765	ReturnType	static int		10960751	1					
ANR	10960766	Identifier	zcharboxpath		10960751	2					
ANR	10960767	ParameterList	i_ctx_t * i_ctx_p		10960751	3					
ANR	10960768	Parameter	i_ctx_t * i_ctx_p	316:13:9582:9597	10960751	0	True				
ANR	10960769	ParameterType	i_ctx_t *		10960751	0					
ANR	10960770	Identifier	i_ctx_p		10960751	1					
ANR	10960771	CFGEntryNode	ENTRY		10960751		True				
ANR	10960772	CFGExitNode	EXIT		10960751		True				
ANR	10960773	Symbol	zchar_path		10960751						
ANR	10960774	Symbol	i_ctx_p		10960751						
ANR	10960775	Symbol	gs_charboxpath_begin		10960751						
ANR	10960776	Symbol	zcharboxpath		10960751						
ANR	10960777	Function	zsetcachedevice	322:0:9730:10267							
ANR	10960778	FunctionDef	zsetcachedevice (i_ctx_t * i_ctx_p)		10960777	0					
ANR	10960779	CompoundStatement		324:0:9768:10267	10960777	0					
ANR	10960780	IdentifierDeclStatement	os_ptr op = osp ;	325:4:9774:9789	10960777	0	True				
ANR	10960781	IdentifierDecl	op = osp		10960777	0					
ANR	10960782	IdentifierDeclType	os_ptr		10960777	0					
ANR	10960783	Identifier	op		10960777	1					
ANR	10960784	AssignmentExpression	op = osp		10960777	2		=			
ANR	10960785	Identifier	osp		10960777	0					
ANR	10960786	Identifier	osp		10960777	1					
ANR	10960787	IdentifierDeclStatement	double wbox [ 6 ] ;	326:4:9795:9809	10960777	1	True				
ANR	10960788	IdentifierDecl	wbox [ 6 ]		10960777	0					
ANR	10960789	IdentifierDeclType	double [ 6 ]		10960777	0					
ANR	10960790	Identifier	wbox		10960777	1					
ANR	10960791	PrimaryExpression	6		10960777	2					
ANR	10960792	IdentifierDeclStatement	gs_text_enum_t * penum = op_show_find ( i_ctx_p ) ;	327:4:9815:9860	10960777	2	True				
ANR	10960793	IdentifierDecl	* penum = op_show_find ( i_ctx_p )		10960777	0					
ANR	10960794	IdentifierDeclType	gs_text_enum_t *		10960777	0					
ANR	10960795	Identifier	penum		10960777	1					
ANR	10960796	AssignmentExpression	* penum = op_show_find ( i_ctx_p )		10960777	2		=			
ANR	10960797	Identifier	penum		10960777	0					
ANR	10960798	CallExpression	op_show_find ( i_ctx_p )		10960777	1					
ANR	10960799	Callee	op_show_find		10960777	0					
ANR	10960800	Identifier	op_show_find		10960777	0					
ANR	10960801	ArgumentList	i_ctx_p		10960777	1					
ANR	10960802	Argument	i_ctx_p		10960777	0					
ANR	10960803	Identifier	i_ctx_p		10960777	0					
ANR	10960804	IdentifierDeclStatement	"int code = num_params ( op , 6 , wbox ) ;"	328:4:9866:9900	10960777	3	True				
ANR	10960805	IdentifierDecl	"code = num_params ( op , 6 , wbox )"		10960777	0					
ANR	10960806	IdentifierDeclType	int		10960777	0					
ANR	10960807	Identifier	code		10960777	1					
ANR	10960808	AssignmentExpression	"code = num_params ( op , 6 , wbox )"		10960777	2		=			
ANR	10960809	Identifier	code		10960777	0					
ANR	10960810	CallExpression	"num_params ( op , 6 , wbox )"		10960777	1					
ANR	10960811	Callee	num_params		10960777	0					
ANR	10960812	Identifier	num_params		10960777	0					
ANR	10960813	ArgumentList	op		10960777	1					
ANR	10960814	Argument	op		10960777	0					
ANR	10960815	Identifier	op		10960777	0					
ANR	10960816	Argument	6		10960777	1					
ANR	10960817	PrimaryExpression	6		10960777	0					
ANR	10960818	Argument	wbox		10960777	2					
ANR	10960819	Identifier	wbox		10960777	0					
ANR	10960820	IfStatement	if ( penum == 0 )		10960777	4					
ANR	10960821	Condition	penum == 0	330:8:9911:9920	10960777	0	True				
ANR	10960822	EqualityExpression	penum == 0		10960777	0		==			
ANR	10960823	Identifier	penum		10960777	0					
ANR	10960824	PrimaryExpression	0		10960777	1					
ANR	10960825	ExpressionStatement	return_error ( gs_error_undefined )	331:8:9931:9963	10960777	1	True				
ANR	10960826	CallExpression	return_error ( gs_error_undefined )		10960777	0					
ANR	10960827	Callee	return_error		10960777	0					
ANR	10960828	Identifier	return_error		10960777	0					
ANR	10960829	ArgumentList	gs_error_undefined		10960777	1					
ANR	10960830	Argument	gs_error_undefined		10960777	0					
ANR	10960831	Identifier	gs_error_undefined		10960777	0					
ANR	10960832	IfStatement	if ( code < 0 )		10960777	5					
ANR	10960833	Condition	code < 0	332:8:9973:9980	10960777	0	True				
ANR	10960834	RelationalExpression	code < 0		10960777	0		<			
ANR	10960835	Identifier	code		10960777	0					
ANR	10960836	PrimaryExpression	0		10960777	1					
ANR	10960837	ReturnStatement	return code ;	333:8:9991:10002	10960777	1	True				
ANR	10960838	Identifier	code		10960777	0					
ANR	10960839	IfStatement	if ( zchar_show_width_only ( penum ) )		10960777	6					
ANR	10960840	Condition	zchar_show_width_only ( penum )	334:8:10012:10039	10960777	0	True				
ANR	10960841	CallExpression	zchar_show_width_only ( penum )		10960777	0					
ANR	10960842	Callee	zchar_show_width_only		10960777	0					
ANR	10960843	Identifier	zchar_show_width_only		10960777	0					
ANR	10960844	ArgumentList	penum		10960777	1					
ANR	10960845	Argument	penum		10960777	0					
ANR	10960846	Identifier	penum		10960777	0					
ANR	10960847	ReturnStatement	"return op_show_return_width ( i_ctx_p , 6 , & wbox [ 0 ] ) ;"	335:8:10050:10099	10960777	1	True				
ANR	10960848	CallExpression	"op_show_return_width ( i_ctx_p , 6 , & wbox [ 0 ] )"		10960777	0					
ANR	10960849	Callee	op_show_return_width		10960777	0					
ANR	10960850	Identifier	op_show_return_width		10960777	0					
ANR	10960851	ArgumentList	i_ctx_p		10960777	1					
ANR	10960852	Argument	i_ctx_p		10960777	0					
ANR	10960853	Identifier	i_ctx_p		10960777	0					
ANR	10960854	Argument	6		10960777	1					
ANR	10960855	PrimaryExpression	6		10960777	0					
ANR	10960856	Argument	& wbox [ 0 ]		10960777	2					
ANR	10960857	UnaryOperationExpression	& wbox [ 0 ]		10960777	0					
ANR	10960858	UnaryOperator	&		10960777	0					
ANR	10960859	ArrayIndexing	wbox [ 0 ]		10960777	1					
ANR	10960860	Identifier	wbox		10960777	0					
ANR	10960861	PrimaryExpression	0		10960777	1					
ANR	10960862	ExpressionStatement	"code = gs_text_setcachedevice ( penum , wbox )"	336:4:10105:10147	10960777	7	True				
ANR	10960863	AssignmentExpression	"code = gs_text_setcachedevice ( penum , wbox )"		10960777	0		=			
ANR	10960864	Identifier	code		10960777	0					
ANR	10960865	CallExpression	"gs_text_setcachedevice ( penum , wbox )"		10960777	1					
ANR	10960866	Callee	gs_text_setcachedevice		10960777	0					
ANR	10960867	Identifier	gs_text_setcachedevice		10960777	0					
ANR	10960868	ArgumentList	penum		10960777	1					
ANR	10960869	Argument	penum		10960777	0					
ANR	10960870	Identifier	penum		10960777	0					
ANR	10960871	Argument	wbox		10960777	1					
ANR	10960872	Identifier	wbox		10960777	0					
ANR	10960873	IfStatement	if ( code < 0 )		10960777	8					
ANR	10960874	Condition	code < 0	337:8:10157:10164	10960777	0	True				
ANR	10960875	RelationalExpression	code < 0		10960777	0		<			
ANR	10960876	Identifier	code		10960777	0					
ANR	10960877	PrimaryExpression	0		10960777	1					
ANR	10960878	ReturnStatement	return code ;	338:8:10175:10186	10960777	1	True				
ANR	10960879	Identifier	code		10960777	0					
ANR	10960880	ExpressionStatement	pop ( 6 )	339:4:10192:10198	10960777	9	True				
ANR	10960881	CallExpression	pop ( 6 )		10960777	0					
ANR	10960882	Callee	pop		10960777	0					
ANR	10960883	Identifier	pop		10960777	0					
ANR	10960884	ArgumentList	6		10960777	1					
ANR	10960885	Argument	6		10960777	0					
ANR	10960886	PrimaryExpression	6		10960777	0					
ANR	10960887	IfStatement	if ( code == 1 )		10960777	10					
ANR	10960888	Condition	code == 1	340:8:10208:10216	10960777	0	True				
ANR	10960889	EqualityExpression	code == 1		10960777	0		==			
ANR	10960890	Identifier	code		10960777	0					
ANR	10960891	PrimaryExpression	1		10960777	1					
ANR	10960892	ExpressionStatement	clear_pagedevice ( istate )	341:8:10227:10251	10960777	1	True				
ANR	10960893	CallExpression	clear_pagedevice ( istate )		10960777	0					
ANR	10960894	Callee	clear_pagedevice		10960777	0					
ANR	10960895	Identifier	clear_pagedevice		10960777	0					
ANR	10960896	ArgumentList	istate		10960777	1					
ANR	10960897	Argument	istate		10960777	0					
ANR	10960898	Identifier	istate		10960777	0					
ANR	10960899	ReturnStatement	return 0 ;	342:4:10257:10265	10960777	11	True				
ANR	10960900	PrimaryExpression	0		10960777	0					
ANR	10960901	ReturnType	int		10960777	1					
ANR	10960902	Identifier	zsetcachedevice		10960777	2					
ANR	10960903	ParameterList	i_ctx_t * i_ctx_p		10960777	3					
ANR	10960904	Parameter	i_ctx_t * i_ctx_p	323:16:9750:9765	10960777	0	True				
ANR	10960905	ParameterType	i_ctx_t *		10960777	0					
ANR	10960906	Identifier	i_ctx_p		10960777	1					
ANR	10960907	CFGEntryNode	ENTRY		10960777		True				
ANR	10960908	CFGExitNode	EXIT		10960777		True				
ANR	10960909	Symbol	op_show_find		10960777						
ANR	10960910	Symbol	op		10960777						
ANR	10960911	Symbol	wbox		10960777						
ANR	10960912	Symbol	code		10960777						
ANR	10960913	Symbol	penum		10960777						
ANR	10960914	Symbol	gs_error_undefined		10960777						
ANR	10960915	Symbol	zchar_show_width_only		10960777						
ANR	10960916	Symbol	op_show_return_width		10960777						
ANR	10960917	Symbol	osp		10960777						
ANR	10960918	Symbol	num_params		10960777						
ANR	10960919	Symbol	i_ctx_p		10960777						
ANR	10960920	Symbol	gs_text_setcachedevice		10960777						
ANR	10960921	Symbol	istate		10960777						
ANR	10960922	Function	zsetcachedevice2	346:0:10352:11007							
ANR	10960923	FunctionDef	zsetcachedevice2 (i_ctx_t * i_ctx_p)		10960922	0					
ANR	10960924	CompoundStatement		348:0:10391:11007	10960922	0					
ANR	10960925	IdentifierDeclStatement	os_ptr op = osp ;	349:4:10397:10412	10960922	0	True				
ANR	10960926	IdentifierDecl	op = osp		10960922	0					
ANR	10960927	IdentifierDeclType	os_ptr		10960922	0					
ANR	10960928	Identifier	op		10960922	1					
ANR	10960929	AssignmentExpression	op = osp		10960922	2		=			
ANR	10960930	Identifier	osp		10960922	0					
ANR	10960931	Identifier	osp		10960922	1					
ANR	10960932	IdentifierDeclStatement	double wbox [ 10 ] ;	350:4:10418:10433	10960922	1	True				
ANR	10960933	IdentifierDecl	wbox [ 10 ]		10960922	0					
ANR	10960934	IdentifierDeclType	double [ 10 ]		10960922	0					
ANR	10960935	Identifier	wbox		10960922	1					
ANR	10960936	PrimaryExpression	10		10960922	2					
ANR	10960937	IdentifierDeclStatement	gs_text_enum_t * penum = op_show_find ( i_ctx_p ) ;	351:4:10439:10484	10960922	2	True				
ANR	10960938	IdentifierDecl	* penum = op_show_find ( i_ctx_p )		10960922	0					
ANR	10960939	IdentifierDeclType	gs_text_enum_t *		10960922	0					
ANR	10960940	Identifier	penum		10960922	1					
ANR	10960941	AssignmentExpression	* penum = op_show_find ( i_ctx_p )		10960922	2		=			
ANR	10960942	Identifier	penum		10960922	0					
ANR	10960943	CallExpression	op_show_find ( i_ctx_p )		10960922	1					
ANR	10960944	Callee	op_show_find		10960922	0					
ANR	10960945	Identifier	op_show_find		10960922	0					
ANR	10960946	ArgumentList	i_ctx_p		10960922	1					
ANR	10960947	Argument	i_ctx_p		10960922	0					
ANR	10960948	Identifier	i_ctx_p		10960922	0					
ANR	10960949	IdentifierDeclStatement	"int code = num_params ( op , 10 , wbox ) ;"	352:4:10490:10525	10960922	3	True				
ANR	10960950	IdentifierDecl	"code = num_params ( op , 10 , wbox )"		10960922	0					
ANR	10960951	IdentifierDeclType	int		10960922	0					
ANR	10960952	Identifier	code		10960922	1					
ANR	10960953	AssignmentExpression	"code = num_params ( op , 10 , wbox )"		10960922	2		=			
ANR	10960954	Identifier	code		10960922	0					
ANR	10960955	CallExpression	"num_params ( op , 10 , wbox )"		10960922	1					
ANR	10960956	Callee	num_params		10960922	0					
ANR	10960957	Identifier	num_params		10960922	0					
ANR	10960958	ArgumentList	op		10960922	1					
ANR	10960959	Argument	op		10960922	0					
ANR	10960960	Identifier	op		10960922	0					
ANR	10960961	Argument	10		10960922	1					
ANR	10960962	PrimaryExpression	10		10960922	0					
ANR	10960963	Argument	wbox		10960922	2					
ANR	10960964	Identifier	wbox		10960922	0					
ANR	10960965	IfStatement	if ( penum == 0 )		10960922	4					
ANR	10960966	Condition	penum == 0	354:8:10536:10545	10960922	0	True				
ANR	10960967	EqualityExpression	penum == 0		10960922	0		==			
ANR	10960968	Identifier	penum		10960922	0					
ANR	10960969	PrimaryExpression	0		10960922	1					
ANR	10960970	ExpressionStatement	return_error ( gs_error_undefined )	355:8:10556:10588	10960922	1	True				
ANR	10960971	CallExpression	return_error ( gs_error_undefined )		10960922	0					
ANR	10960972	Callee	return_error		10960922	0					
ANR	10960973	Identifier	return_error		10960922	0					
ANR	10960974	ArgumentList	gs_error_undefined		10960922	1					
ANR	10960975	Argument	gs_error_undefined		10960922	0					
ANR	10960976	Identifier	gs_error_undefined		10960922	0					
ANR	10960977	IfStatement	if ( code < 0 )		10960922	5					
ANR	10960978	Condition	code < 0	356:8:10598:10605	10960922	0	True				
ANR	10960979	RelationalExpression	code < 0		10960922	0		<			
ANR	10960980	Identifier	code		10960922	0					
ANR	10960981	PrimaryExpression	0		10960922	1					
ANR	10960982	ReturnStatement	return code ;	357:8:10616:10627	10960922	1	True				
ANR	10960983	Identifier	code		10960922	0					
ANR	10960984	IfStatement	if ( zchar_show_width_only ( penum ) )		10960922	6					
ANR	10960985	Condition	zchar_show_width_only ( penum )	358:8:10637:10664	10960922	0	True				
ANR	10960986	CallExpression	zchar_show_width_only ( penum )		10960922	0					
ANR	10960987	Callee	zchar_show_width_only		10960922	0					
ANR	10960988	Identifier	zchar_show_width_only		10960922	0					
ANR	10960989	ArgumentList	penum		10960922	1					
ANR	10960990	Argument	penum		10960922	0					
ANR	10960991	Identifier	penum		10960922	0					
ANR	10960992	ReturnStatement	"return op_show_return_width ( i_ctx_p , 10 , ( gs_rootfont ( igs ) -> WMode ? & wbox [ 6 ] : & wbox [ 0 ] ) ) ;"	359:8:10675:10837	10960922	1	True				
ANR	10960993	CallExpression	"op_show_return_width ( i_ctx_p , 10 , ( gs_rootfont ( igs ) -> WMode ? & wbox [ 6 ] : & wbox [ 0 ] ) )"		10960922	0					
ANR	10960994	Callee	op_show_return_width		10960922	0					
ANR	10960995	Identifier	op_show_return_width		10960922	0					
ANR	10960996	ArgumentList	i_ctx_p		10960922	1					
ANR	10960997	Argument	i_ctx_p		10960922	0					
ANR	10960998	Identifier	i_ctx_p		10960922	0					
ANR	10960999	Argument	10		10960922	1					
ANR	10961000	PrimaryExpression	10		10960922	0					
ANR	10961001	Argument	gs_rootfont ( igs ) -> WMode ? & wbox [ 6 ] : & wbox [ 0 ]		10960922	2					
ANR	10961002	ConditionalExpression	gs_rootfont ( igs ) -> WMode ? & wbox [ 6 ] : & wbox [ 0 ]		10960922	0					
ANR	10961003	Condition	gs_rootfont ( igs ) -> WMode		10960922	0					
ANR	10961004	PtrMemberAccess	gs_rootfont ( igs ) -> WMode		10960922	0					
ANR	10961005	CallExpression	gs_rootfont ( igs )		10960922	0					
ANR	10961006	Callee	gs_rootfont		10960922	0					
ANR	10961007	Identifier	gs_rootfont		10960922	0					
ANR	10961008	ArgumentList	igs		10960922	1					
ANR	10961009	Argument	igs		10960922	0					
ANR	10961010	Identifier	igs		10960922	0					
ANR	10961011	Identifier	WMode		10960922	1					
ANR	10961012	UnaryOperationExpression	& wbox [ 6 ]		10960922	1					
ANR	10961013	UnaryOperator	&		10960922	0					
ANR	10961014	ArrayIndexing	wbox [ 6 ]		10960922	1					
ANR	10961015	Identifier	wbox		10960922	0					
ANR	10961016	PrimaryExpression	6		10960922	1					
ANR	10961017	UnaryOperationExpression	& wbox [ 0 ]		10960922	2					
ANR	10961018	UnaryOperator	&		10960922	0					
ANR	10961019	ArrayIndexing	wbox [ 0 ]		10960922	1					
ANR	10961020	Identifier	wbox		10960922	0					
ANR	10961021	PrimaryExpression	0		10960922	1					
ANR	10961022	ExpressionStatement	"code = gs_text_setcachedevice2 ( penum , wbox )"	362:4:10843:10886	10960922	7	True				
ANR	10961023	AssignmentExpression	"code = gs_text_setcachedevice2 ( penum , wbox )"		10960922	0		=			
ANR	10961024	Identifier	code		10960922	0					
ANR	10961025	CallExpression	"gs_text_setcachedevice2 ( penum , wbox )"		10960922	1					
ANR	10961026	Callee	gs_text_setcachedevice2		10960922	0					
ANR	10961027	Identifier	gs_text_setcachedevice2		10960922	0					
ANR	10961028	ArgumentList	penum		10960922	1					
ANR	10961029	Argument	penum		10960922	0					
ANR	10961030	Identifier	penum		10960922	0					
ANR	10961031	Argument	wbox		10960922	1					
ANR	10961032	Identifier	wbox		10960922	0					
ANR	10961033	IfStatement	if ( code < 0 )		10960922	8					
ANR	10961034	Condition	code < 0	363:8:10896:10903	10960922	0	True				
ANR	10961035	RelationalExpression	code < 0		10960922	0		<			
ANR	10961036	Identifier	code		10960922	0					
ANR	10961037	PrimaryExpression	0		10960922	1					
ANR	10961038	ReturnStatement	return code ;	364:8:10914:10925	10960922	1	True				
ANR	10961039	Identifier	code		10960922	0					
ANR	10961040	ExpressionStatement	pop ( 10 )	365:4:10931:10938	10960922	9	True				
ANR	10961041	CallExpression	pop ( 10 )		10960922	0					
ANR	10961042	Callee	pop		10960922	0					
ANR	10961043	Identifier	pop		10960922	0					
ANR	10961044	ArgumentList	10		10960922	1					
ANR	10961045	Argument	10		10960922	0					
ANR	10961046	PrimaryExpression	10		10960922	0					
ANR	10961047	IfStatement	if ( code == 1 )		10960922	10					
ANR	10961048	Condition	code == 1	366:8:10948:10956	10960922	0	True				
ANR	10961049	EqualityExpression	code == 1		10960922	0		==			
ANR	10961050	Identifier	code		10960922	0					
ANR	10961051	PrimaryExpression	1		10960922	1					
ANR	10961052	ExpressionStatement	clear_pagedevice ( istate )	367:8:10967:10991	10960922	1	True				
ANR	10961053	CallExpression	clear_pagedevice ( istate )		10960922	0					
ANR	10961054	Callee	clear_pagedevice		10960922	0					
ANR	10961055	Identifier	clear_pagedevice		10960922	0					
ANR	10961056	ArgumentList	istate		10960922	1					
ANR	10961057	Argument	istate		10960922	0					
ANR	10961058	Identifier	istate		10960922	0					
ANR	10961059	ReturnStatement	return 0 ;	368:4:10997:11005	10960922	11	True				
ANR	10961060	PrimaryExpression	0		10960922	0					
ANR	10961061	ReturnType	int		10960922	1					
ANR	10961062	Identifier	zsetcachedevice2		10960922	2					
ANR	10961063	ParameterList	i_ctx_t * i_ctx_p		10960922	3					
ANR	10961064	Parameter	i_ctx_t * i_ctx_p	347:17:10373:10388	10960922	0	True				
ANR	10961065	ParameterType	i_ctx_t *		10960922	0					
ANR	10961066	Identifier	i_ctx_p		10960922	1					
ANR	10961067	CFGEntryNode	ENTRY		10960922		True				
ANR	10961068	CFGExitNode	EXIT		10960922		True				
ANR	10961069	Symbol	op_show_find		10960922						
ANR	10961070	Symbol	op		10960922						
ANR	10961071	Symbol	wbox		10960922						
ANR	10961072	Symbol	code		10960922						
ANR	10961073	Symbol	penum		10960922						
ANR	10961074	Symbol	gs_error_undefined		10960922						
ANR	10961075	Symbol	zchar_show_width_only		10960922						
ANR	10961076	Symbol	op_show_return_width		10960922						
ANR	10961077	Symbol	osp		10960922						
ANR	10961078	Symbol	num_params		10960922						
ANR	10961079	Symbol	igs		10960922						
ANR	10961080	Symbol	i_ctx_p		10960922						
ANR	10961081	Symbol	gs_rootfont		10960922						
ANR	10961082	Symbol	gs_rootfont ( igs ) -> WMode		10960922						
ANR	10961083	Symbol	* gs_rootfont		10960922						
ANR	10961084	Symbol	gs_text_setcachedevice2		10960922						
ANR	10961085	Symbol	istate		10960922						
ANR	10961086	Function	zsetcharwidth	372:0:11041:11532							
ANR	10961087	FunctionDef	zsetcharwidth (i_ctx_t * i_ctx_p)		10961086	0					
ANR	10961088	CompoundStatement		374:0:11084:11532	10961086	0					
ANR	10961089	IdentifierDeclStatement	os_ptr op = osp ;	375:4:11090:11105	10961086	0	True				
ANR	10961090	IdentifierDecl	op = osp		10961086	0					
ANR	10961091	IdentifierDeclType	os_ptr		10961086	0					
ANR	10961092	Identifier	op		10961086	1					
ANR	10961093	AssignmentExpression	op = osp		10961086	2		=			
ANR	10961094	Identifier	osp		10961086	0					
ANR	10961095	Identifier	osp		10961086	1					
ANR	10961096	IdentifierDeclStatement	double width [ 2 ] ;	376:4:11111:11126	10961086	1	True				
ANR	10961097	IdentifierDecl	width [ 2 ]		10961086	0					
ANR	10961098	IdentifierDeclType	double [ 2 ]		10961086	0					
ANR	10961099	Identifier	width		10961086	1					
ANR	10961100	PrimaryExpression	2		10961086	2					
ANR	10961101	IdentifierDeclStatement	gs_text_enum_t * penum = op_show_find ( i_ctx_p ) ;	377:4:11132:11177	10961086	2	True				
ANR	10961102	IdentifierDecl	* penum = op_show_find ( i_ctx_p )		10961086	0					
ANR	10961103	IdentifierDeclType	gs_text_enum_t *		10961086	0					
ANR	10961104	Identifier	penum		10961086	1					
ANR	10961105	AssignmentExpression	* penum = op_show_find ( i_ctx_p )		10961086	2		=			
ANR	10961106	Identifier	penum		10961086	0					
ANR	10961107	CallExpression	op_show_find ( i_ctx_p )		10961086	1					
ANR	10961108	Callee	op_show_find		10961086	0					
ANR	10961109	Identifier	op_show_find		10961086	0					
ANR	10961110	ArgumentList	i_ctx_p		10961086	1					
ANR	10961111	Argument	i_ctx_p		10961086	0					
ANR	10961112	Identifier	i_ctx_p		10961086	0					
ANR	10961113	IdentifierDeclStatement	"int code = num_params ( op , 2 , width ) ;"	378:4:11183:11218	10961086	3	True				
ANR	10961114	IdentifierDecl	"code = num_params ( op , 2 , width )"		10961086	0					
ANR	10961115	IdentifierDeclType	int		10961086	0					
ANR	10961116	Identifier	code		10961086	1					
ANR	10961117	AssignmentExpression	"code = num_params ( op , 2 , width )"		10961086	2		=			
ANR	10961118	Identifier	code		10961086	0					
ANR	10961119	CallExpression	"num_params ( op , 2 , width )"		10961086	1					
ANR	10961120	Callee	num_params		10961086	0					
ANR	10961121	Identifier	num_params		10961086	0					
ANR	10961122	ArgumentList	op		10961086	1					
ANR	10961123	Argument	op		10961086	0					
ANR	10961124	Identifier	op		10961086	0					
ANR	10961125	Argument	2		10961086	1					
ANR	10961126	PrimaryExpression	2		10961086	0					
ANR	10961127	Argument	width		10961086	2					
ANR	10961128	Identifier	width		10961086	0					
ANR	10961129	IfStatement	if ( penum == 0 )		10961086	4					
ANR	10961130	Condition	penum == 0	380:8:11229:11238	10961086	0	True				
ANR	10961131	EqualityExpression	penum == 0		10961086	0		==			
ANR	10961132	Identifier	penum		10961086	0					
ANR	10961133	PrimaryExpression	0		10961086	1					
ANR	10961134	ExpressionStatement	return_error ( gs_error_undefined )	381:8:11249:11281	10961086	1	True				
ANR	10961135	CallExpression	return_error ( gs_error_undefined )		10961086	0					
ANR	10961136	Callee	return_error		10961086	0					
ANR	10961137	Identifier	return_error		10961086	0					
ANR	10961138	ArgumentList	gs_error_undefined		10961086	1					
ANR	10961139	Argument	gs_error_undefined		10961086	0					
ANR	10961140	Identifier	gs_error_undefined		10961086	0					
ANR	10961141	IfStatement	if ( code < 0 )		10961086	5					
ANR	10961142	Condition	code < 0	382:8:11291:11298	10961086	0	True				
ANR	10961143	RelationalExpression	code < 0		10961086	0		<			
ANR	10961144	Identifier	code		10961086	0					
ANR	10961145	PrimaryExpression	0		10961086	1					
ANR	10961146	ReturnStatement	return code ;	383:8:11309:11320	10961086	1	True				
ANR	10961147	Identifier	code		10961086	0					
ANR	10961148	IfStatement	if ( zchar_show_width_only ( penum ) )		10961086	6					
ANR	10961149	Condition	zchar_show_width_only ( penum )	384:8:11330:11357	10961086	0	True				
ANR	10961150	CallExpression	zchar_show_width_only ( penum )		10961086	0					
ANR	10961151	Callee	zchar_show_width_only		10961086	0					
ANR	10961152	Identifier	zchar_show_width_only		10961086	0					
ANR	10961153	ArgumentList	penum		10961086	1					
ANR	10961154	Argument	penum		10961086	0					
ANR	10961155	Identifier	penum		10961086	0					
ANR	10961156	ReturnStatement	"return op_show_return_width ( i_ctx_p , 2 , & width [ 0 ] ) ;"	385:8:11368:11418	10961086	1	True				
ANR	10961157	CallExpression	"op_show_return_width ( i_ctx_p , 2 , & width [ 0 ] )"		10961086	0					
ANR	10961158	Callee	op_show_return_width		10961086	0					
ANR	10961159	Identifier	op_show_return_width		10961086	0					
ANR	10961160	ArgumentList	i_ctx_p		10961086	1					
ANR	10961161	Argument	i_ctx_p		10961086	0					
ANR	10961162	Identifier	i_ctx_p		10961086	0					
ANR	10961163	Argument	2		10961086	1					
ANR	10961164	PrimaryExpression	2		10961086	0					
ANR	10961165	Argument	& width [ 0 ]		10961086	2					
ANR	10961166	UnaryOperationExpression	& width [ 0 ]		10961086	0					
ANR	10961167	UnaryOperator	&		10961086	0					
ANR	10961168	ArrayIndexing	width [ 0 ]		10961086	1					
ANR	10961169	Identifier	width		10961086	0					
ANR	10961170	PrimaryExpression	0		10961086	1					
ANR	10961171	ExpressionStatement	"code = gs_text_setcharwidth ( penum , width )"	386:4:11424:11465	10961086	7	True				
ANR	10961172	AssignmentExpression	"code = gs_text_setcharwidth ( penum , width )"		10961086	0		=			
ANR	10961173	Identifier	code		10961086	0					
ANR	10961174	CallExpression	"gs_text_setcharwidth ( penum , width )"		10961086	1					
ANR	10961175	Callee	gs_text_setcharwidth		10961086	0					
ANR	10961176	Identifier	gs_text_setcharwidth		10961086	0					
ANR	10961177	ArgumentList	penum		10961086	1					
ANR	10961178	Argument	penum		10961086	0					
ANR	10961179	Identifier	penum		10961086	0					
ANR	10961180	Argument	width		10961086	1					
ANR	10961181	Identifier	width		10961086	0					
ANR	10961182	IfStatement	if ( code < 0 )		10961086	8					
ANR	10961183	Condition	code < 0	387:8:11475:11482	10961086	0	True				
ANR	10961184	RelationalExpression	code < 0		10961086	0		<			
ANR	10961185	Identifier	code		10961086	0					
ANR	10961186	PrimaryExpression	0		10961086	1					
ANR	10961187	ReturnStatement	return code ;	388:8:11493:11504	10961086	1	True				
ANR	10961188	Identifier	code		10961086	0					
ANR	10961189	ExpressionStatement	pop ( 2 )	389:4:11510:11516	10961086	9	True				
ANR	10961190	CallExpression	pop ( 2 )		10961086	0					
ANR	10961191	Callee	pop		10961086	0					
ANR	10961192	Identifier	pop		10961086	0					
ANR	10961193	ArgumentList	2		10961086	1					
ANR	10961194	Argument	2		10961086	0					
ANR	10961195	PrimaryExpression	2		10961086	0					
ANR	10961196	ReturnStatement	return 0 ;	390:4:11522:11530	10961086	10	True				
ANR	10961197	PrimaryExpression	0		10961086	0					
ANR	10961198	ReturnType	static int		10961086	1					
ANR	10961199	Identifier	zsetcharwidth		10961086	2					
ANR	10961200	ParameterList	i_ctx_t * i_ctx_p		10961086	3					
ANR	10961201	Parameter	i_ctx_t * i_ctx_p	373:14:11066:11081	10961086	0	True				
ANR	10961202	ParameterType	i_ctx_t *		10961086	0					
ANR	10961203	Identifier	i_ctx_p		10961086	1					
ANR	10961204	CFGEntryNode	ENTRY		10961086		True				
ANR	10961205	CFGExitNode	EXIT		10961086		True				
ANR	10961206	Symbol	op_show_find		10961086						
ANR	10961207	Symbol	op		10961086						
ANR	10961208	Symbol	code		10961086						
ANR	10961209	Symbol	i_ctx_p		10961086						
ANR	10961210	Symbol	gs_text_setcharwidth		10961086						
ANR	10961211	Symbol	width		10961086						
ANR	10961212	Symbol	penum		10961086						
ANR	10961213	Symbol	gs_error_undefined		10961086						
ANR	10961214	Symbol	zchar_show_width_only		10961086						
ANR	10961215	Symbol	op_show_return_width		10961086						
ANR	10961216	Symbol	osp		10961086						
ANR	10961217	Symbol	num_params		10961086						
ANR	10961218	Function	zfontbbox	395:0:11620:12082							
ANR	10961219	FunctionDef	zfontbbox (i_ctx_t * i_ctx_p)		10961218	0					
ANR	10961220	CompoundStatement		397:0:11659:12082	10961218	0					
ANR	10961221	IdentifierDeclStatement	os_ptr op = osp ;	398:4:11665:11680	10961218	0	True				
ANR	10961222	IdentifierDecl	op = osp		10961218	0					
ANR	10961223	IdentifierDeclType	os_ptr		10961218	0					
ANR	10961224	Identifier	op		10961218	1					
ANR	10961225	AssignmentExpression	op = osp		10961218	2		=			
ANR	10961226	Identifier	osp		10961218	0					
ANR	10961227	Identifier	osp		10961218	1					
ANR	10961228	IdentifierDeclStatement	double bbox [ 4 ] ;	399:4:11686:11700	10961218	1	True				
ANR	10961229	IdentifierDecl	bbox [ 4 ]		10961218	0					
ANR	10961230	IdentifierDeclType	double [ 4 ]		10961218	0					
ANR	10961231	Identifier	bbox		10961218	1					
ANR	10961232	PrimaryExpression	4		10961218	2					
ANR	10961233	IdentifierDeclStatement	int code ;	400:4:11706:11714	10961218	2	True				
ANR	10961234	IdentifierDecl	code		10961218	0					
ANR	10961235	IdentifierDeclType	int		10961218	0					
ANR	10961236	Identifier	code		10961218	1					
ANR	10961237	ExpressionStatement	"check_type ( * op , t_dictionary )"	402:4:11721:11750	10961218	3	True				
ANR	10961238	CallExpression	"check_type ( * op , t_dictionary )"		10961218	0					
ANR	10961239	Callee	check_type		10961218	0					
ANR	10961240	Identifier	check_type		10961218	0					
ANR	10961241	ArgumentList	* op		10961218	1					
ANR	10961242	Argument	* op		10961218	0					
ANR	10961243	UnaryOperationExpression	* op		10961218	0					
ANR	10961244	UnaryOperator	*		10961218	0					
ANR	10961245	Identifier	op		10961218	1					
ANR	10961246	Argument	t_dictionary		10961218	1					
ANR	10961247	Identifier	t_dictionary		10961218	0					
ANR	10961248	ExpressionStatement	check_dict_read ( * op )	403:4:11756:11776	10961218	4	True				
ANR	10961249	CallExpression	check_dict_read ( * op )		10961218	0					
ANR	10961250	Callee	check_dict_read		10961218	0					
ANR	10961251	Identifier	check_dict_read		10961218	0					
ANR	10961252	ArgumentList	* op		10961218	1					
ANR	10961253	Argument	* op		10961218	0					
ANR	10961254	UnaryOperationExpression	* op		10961218	0					
ANR	10961255	UnaryOperator	*		10961218	0					
ANR	10961256	Identifier	op		10961218	1					
ANR	10961257	ExpressionStatement	"code = font_bbox_param ( imemory , op , bbox )"	404:4:11782:11823	10961218	5	True				
ANR	10961258	AssignmentExpression	"code = font_bbox_param ( imemory , op , bbox )"		10961218	0		=			
ANR	10961259	Identifier	code		10961218	0					
ANR	10961260	CallExpression	"font_bbox_param ( imemory , op , bbox )"		10961218	1					
ANR	10961261	Callee	font_bbox_param		10961218	0					
ANR	10961262	Identifier	font_bbox_param		10961218	0					
ANR	10961263	ArgumentList	imemory		10961218	1					
ANR	10961264	Argument	imemory		10961218	0					
ANR	10961265	Identifier	imemory		10961218	0					
ANR	10961266	Argument	op		10961218	1					
ANR	10961267	Identifier	op		10961218	0					
ANR	10961268	Argument	bbox		10961218	2					
ANR	10961269	Identifier	bbox		10961218	0					
ANR	10961270	IfStatement	if ( code < 0 )		10961218	6					
ANR	10961271	Condition	code < 0	405:8:11833:11840	10961218	0	True				
ANR	10961272	RelationalExpression	code < 0		10961218	0		<			
ANR	10961273	Identifier	code		10961218	0					
ANR	10961274	PrimaryExpression	0		10961218	1					
ANR	10961275	ReturnStatement	return code ;	406:8:11851:11862	10961218	1	True				
ANR	10961276	Identifier	code		10961218	0					
ANR	10961277	IfStatement	if ( bbox [ 0 ] < bbox [ 2 ] && bbox [ 1 ] < bbox [ 3 ] )		10961218	7					
ANR	10961278	Condition	bbox [ 0 ] < bbox [ 2 ] && bbox [ 1 ] < bbox [ 3 ]	407:8:11872:11909	10961218	0	True				
ANR	10961279	AndExpression	bbox [ 0 ] < bbox [ 2 ] && bbox [ 1 ] < bbox [ 3 ]		10961218	0		&&			
ANR	10961280	RelationalExpression	bbox [ 0 ] < bbox [ 2 ]		10961218	0		<			
ANR	10961281	ArrayIndexing	bbox [ 0 ]		10961218	0					
ANR	10961282	Identifier	bbox		10961218	0					
ANR	10961283	PrimaryExpression	0		10961218	1					
ANR	10961284	ArrayIndexing	bbox [ 2 ]		10961218	1					
ANR	10961285	Identifier	bbox		10961218	0					
ANR	10961286	PrimaryExpression	2		10961218	1					
ANR	10961287	RelationalExpression	bbox [ 1 ] < bbox [ 3 ]		10961218	1		<			
ANR	10961288	ArrayIndexing	bbox [ 1 ]		10961218	0					
ANR	10961289	Identifier	bbox		10961218	0					
ANR	10961290	PrimaryExpression	1		10961218	1					
ANR	10961291	ArrayIndexing	bbox [ 3 ]		10961218	1					
ANR	10961292	Identifier	bbox		10961218	0					
ANR	10961293	PrimaryExpression	3		10961218	1					
ANR	10961294	CompoundStatement		11:48:252:252	10961218	1					
ANR	10961295	ExpressionStatement	push ( 4 )	408:8:11922:11929	10961218	0	True				
ANR	10961296	CallExpression	push ( 4 )		10961218	0					
ANR	10961297	Callee	push		10961218	0					
ANR	10961298	Identifier	push		10961218	0					
ANR	10961299	ArgumentList	4		10961218	1					
ANR	10961300	Argument	4		10961218	0					
ANR	10961301	PrimaryExpression	4		10961218	0					
ANR	10961302	ExpressionStatement	"make_reals ( op - 4 , bbox , 4 )"	409:8:11939:11966	10961218	1	True				
ANR	10961303	CallExpression	"make_reals ( op - 4 , bbox , 4 )"		10961218	0					
ANR	10961304	Callee	make_reals		10961218	0					
ANR	10961305	Identifier	make_reals		10961218	0					
ANR	10961306	ArgumentList	op - 4		10961218	1					
ANR	10961307	Argument	op - 4		10961218	0					
ANR	10961308	AdditiveExpression	op - 4		10961218	0		-			
ANR	10961309	Identifier	op		10961218	0					
ANR	10961310	PrimaryExpression	4		10961218	1					
ANR	10961311	Argument	bbox		10961218	1					
ANR	10961312	Identifier	bbox		10961218	0					
ANR	10961313	Argument	4		10961218	2					
ANR	10961314	PrimaryExpression	4		10961218	0					
ANR	10961315	ExpressionStatement	make_true ( op )	410:8:11976:11989	10961218	2	True				
ANR	10961316	CallExpression	make_true ( op )		10961218	0					
ANR	10961317	Callee	make_true		10961218	0					
ANR	10961318	Identifier	make_true		10961218	0					
ANR	10961319	ArgumentList	op		10961218	1					
ANR	10961320	Argument	op		10961218	0					
ANR	10961321	Identifier	op		10961218	0					
ANR	10961322	ElseStatement	else		10961218	0					
ANR	10961323	CompoundStatement		15:11:342:342	10961218	0					
ANR	10961324	ExpressionStatement	make_false ( op )	412:8:12046:12060	10961218	0	True				
ANR	10961325	CallExpression	make_false ( op )		10961218	0					
ANR	10961326	Callee	make_false		10961218	0					
ANR	10961327	Identifier	make_false		10961218	0					
ANR	10961328	ArgumentList	op		10961218	1					
ANR	10961329	Argument	op		10961218	0					
ANR	10961330	Identifier	op		10961218	0					
ANR	10961331	ReturnStatement	return 0 ;	414:4:12072:12080	10961218	8	True				
ANR	10961332	PrimaryExpression	0		10961218	0					
ANR	10961333	ReturnType	static int		10961218	1					
ANR	10961334	Identifier	zfontbbox		10961218	2					
ANR	10961335	ParameterList	i_ctx_t * i_ctx_p		10961218	3					
ANR	10961336	Parameter	i_ctx_t * i_ctx_p	396:10:11641:11656	10961218	0	True				
ANR	10961337	ParameterType	i_ctx_t *		10961218	0					
ANR	10961338	Identifier	i_ctx_p		10961218	1					
ANR	10961339	CFGEntryNode	ENTRY		10961218		True				
ANR	10961340	CFGExitNode	EXIT		10961218		True				
ANR	10961341	Symbol	op		10961218						
ANR	10961342	Symbol	code		10961218						
ANR	10961343	Symbol	t_dictionary		10961218						
ANR	10961344	Symbol	* bbox		10961218						
ANR	10961345	Symbol	* op		10961218						
ANR	10961346	Symbol	font_bbox_param		10961218						
ANR	10961347	Symbol	i_ctx_p		10961218						
ANR	10961348	Symbol	bbox		10961218						
ANR	10961349	Symbol	imemory		10961218						
ANR	10961350	Symbol	osp		10961218						
ANR	10961351	Function	zincachedevice	421:0:12258:12395							
ANR	10961352	FunctionDef	zincachedevice (i_ctx_t * i_ctx_p)		10961351	0					
ANR	10961353	CompoundStatement		423:0:12302:12395	10961351	0					
ANR	10961354	IdentifierDeclStatement	os_ptr op = osp ;	424:4:12308:12323	10961351	0	True				
ANR	10961355	IdentifierDecl	op = osp		10961351	0					
ANR	10961356	IdentifierDeclType	os_ptr		10961351	0					
ANR	10961357	Identifier	op		10961351	1					
ANR	10961358	AssignmentExpression	op = osp		10961351	2		=			
ANR	10961359	Identifier	osp		10961351	0					
ANR	10961360	Identifier	osp		10961351	1					
ANR	10961361	ExpressionStatement	push ( 1 )	426:4:12330:12337	10961351	1	True				
ANR	10961362	CallExpression	push ( 1 )		10961351	0					
ANR	10961363	Callee	push		10961351	0					
ANR	10961364	Identifier	push		10961351	0					
ANR	10961365	ArgumentList	1		10961351	1					
ANR	10961366	Argument	1		10961351	0					
ANR	10961367	PrimaryExpression	1		10961351	0					
ANR	10961368	ExpressionStatement	"make_bool ( op , ! ! igs -> in_cachedevice )"	427:4:12343:12379	10961351	2	True				
ANR	10961369	CallExpression	"make_bool ( op , ! ! igs -> in_cachedevice )"		10961351	0					
ANR	10961370	Callee	make_bool		10961351	0					
ANR	10961371	Identifier	make_bool		10961351	0					
ANR	10961372	ArgumentList	op		10961351	1					
ANR	10961373	Argument	op		10961351	0					
ANR	10961374	Identifier	op		10961351	0					
ANR	10961375	Argument	! ! igs -> in_cachedevice		10961351	1					
ANR	10961376	UnaryOperationExpression	! ! igs -> in_cachedevice		10961351	0					
ANR	10961377	UnaryOperator	!		10961351	0					
ANR	10961378	UnaryOperationExpression	! igs -> in_cachedevice		10961351	1					
ANR	10961379	UnaryOperator	!		10961351	0					
ANR	10961380	PtrMemberAccess	igs -> in_cachedevice		10961351	1					
ANR	10961381	Identifier	igs		10961351	0					
ANR	10961382	Identifier	in_cachedevice		10961351	1					
ANR	10961383	ReturnStatement	return 0 ;	428:4:12385:12393	10961351	3	True				
ANR	10961384	PrimaryExpression	0		10961351	0					
ANR	10961385	ReturnType	static int		10961351	1					
ANR	10961386	Identifier	zincachedevice		10961351	2					
ANR	10961387	ParameterList	i_ctx_t * i_ctx_p		10961351	3					
ANR	10961388	Parameter	i_ctx_t * i_ctx_p	422:15:12284:12299	10961351	0	True				
ANR	10961389	ParameterType	i_ctx_t *		10961351	0					
ANR	10961390	Identifier	i_ctx_p		10961351	1					
ANR	10961391	CFGEntryNode	ENTRY		10961351		True				
ANR	10961392	CFGExitNode	EXIT		10961351		True				
ANR	10961393	Symbol	* igs		10961351						
ANR	10961394	Symbol	op		10961351						
ANR	10961395	Symbol	igs		10961351						
ANR	10961396	Symbol	i_ctx_p		10961351						
ANR	10961397	Symbol	igs -> in_cachedevice		10961351						
ANR	10961398	Symbol	osp		10961351						
ANR	10961399	DeclStmt									
ANR	10961400	Decl							const op_def	const op_def [ ]	zchar_a_op_defs
ANR	10961401	DeclStmt									
ANR	10961402	Decl							const op_def	const op_def [ ]	zchar_b_op_defs
ANR	10961403	Function	glyph_ref	469:0:13397:13601							
ANR	10961404	FunctionDef	"glyph_ref (const gs_memory_t * mem , gs_glyph glyph , ref * gref)"		10961403	0					
ANR	10961405	CompoundStatement		471:0:13464:13601	10961403	0					
ANR	10961406	IfStatement	if ( glyph < GS_MIN_CID_GLYPH )		10961403	0					
ANR	10961407	Condition	glyph < GS_MIN_CID_GLYPH	472:8:13474:13497	10961403	0	True				
ANR	10961408	RelationalExpression	glyph < GS_MIN_CID_GLYPH		10961403	0		<			
ANR	10961409	Identifier	glyph		10961403	0					
ANR	10961410	Identifier	GS_MIN_CID_GLYPH		10961403	1					
ANR	10961411	ExpressionStatement	"name_index_ref ( mem , glyph , gref )"	473:8:13508:13540	10961403	1	True				
ANR	10961412	CallExpression	"name_index_ref ( mem , glyph , gref )"		10961403	0					
ANR	10961413	Callee	name_index_ref		10961403	0					
ANR	10961414	Identifier	name_index_ref		10961403	0					
ANR	10961415	ArgumentList	mem		10961403	1					
ANR	10961416	Argument	mem		10961403	0					
ANR	10961417	Identifier	mem		10961403	0					
ANR	10961418	Argument	glyph		10961403	1					
ANR	10961419	Identifier	glyph		10961403	0					
ANR	10961420	Argument	gref		10961403	2					
ANR	10961421	Identifier	gref		10961403	0					
ANR	10961422	ElseStatement	else		10961403	0					
ANR	10961423	ExpressionStatement	"make_int ( gref , glyph - GS_MIN_CID_GLYPH )"	475:8:13559:13599	10961403	0	True				
ANR	10961424	CallExpression	"make_int ( gref , glyph - GS_MIN_CID_GLYPH )"		10961403	0					
ANR	10961425	Callee	make_int		10961403	0					
ANR	10961426	Identifier	make_int		10961403	0					
ANR	10961427	ArgumentList	gref		10961403	1					
ANR	10961428	Argument	gref		10961403	0					
ANR	10961429	Identifier	gref		10961403	0					
ANR	10961430	Argument	glyph - GS_MIN_CID_GLYPH		10961403	1					
ANR	10961431	AdditiveExpression	glyph - GS_MIN_CID_GLYPH		10961403	0		-			
ANR	10961432	Identifier	glyph		10961403	0					
ANR	10961433	Identifier	GS_MIN_CID_GLYPH		10961403	1					
ANR	10961434	ReturnType	void		10961403	1					
ANR	10961435	Identifier	glyph_ref		10961403	2					
ANR	10961436	ParameterList	"const gs_memory_t * mem , gs_glyph glyph , ref * gref"		10961403	3					
ANR	10961437	Parameter	const gs_memory_t * mem	470:10:13412:13433	10961403	0	True				
ANR	10961438	ParameterType	const gs_memory_t *		10961403	0					
ANR	10961439	Identifier	mem		10961403	1					
ANR	10961440	Parameter	gs_glyph glyph	470:34:13436:13449	10961403	1	True				
ANR	10961441	ParameterType	gs_glyph		10961403	0					
ANR	10961442	Identifier	glyph		10961403	1					
ANR	10961443	Parameter	ref * gref	470:50:13452:13461	10961403	2	True				
ANR	10961444	ParameterType	ref *		10961403	0					
ANR	10961445	Identifier	gref		10961403	1					
ANR	10961446	CFGEntryNode	ENTRY		10961403		True				
ANR	10961447	CFGExitNode	EXIT		10961403		True				
ANR	10961448	Symbol	glyph		10961403						
ANR	10961449	Symbol	mem		10961403						
ANR	10961450	Symbol	gref		10961403						
ANR	10961451	Symbol	GS_MIN_CID_GLYPH		10961403						
ANR	10961452	Function	op_show_setup	480:0:13683:13808							
ANR	10961453	FunctionDef	"op_show_setup (i_ctx_t * i_ctx_p , os_ptr op)"		10961452	0					
ANR	10961454	CompoundStatement		482:0:13730:13808	10961452	0					
ANR	10961455	ExpressionStatement	"check_read_type ( * op , t_string )"	483:4:13736:13766	10961452	0	True				
ANR	10961456	CallExpression	"check_read_type ( * op , t_string )"		10961452	0					
ANR	10961457	Callee	check_read_type		10961452	0					
ANR	10961458	Identifier	check_read_type		10961452	0					
ANR	10961459	ArgumentList	* op		10961452	1					
ANR	10961460	Argument	* op		10961452	0					
ANR	10961461	UnaryOperationExpression	* op		10961452	0					
ANR	10961462	UnaryOperator	*		10961452	0					
ANR	10961463	Identifier	op		10961452	1					
ANR	10961464	Argument	t_string		10961452	1					
ANR	10961465	Identifier	t_string		10961452	0					
ANR	10961466	ReturnStatement	return op_show_enum_setup ( i_ctx_p ) ;	484:4:13772:13806	10961452	1	True				
ANR	10961467	CallExpression	op_show_enum_setup ( i_ctx_p )		10961452	0					
ANR	10961468	Callee	op_show_enum_setup		10961452	0					
ANR	10961469	Identifier	op_show_enum_setup		10961452	0					
ANR	10961470	ArgumentList	i_ctx_p		10961452	1					
ANR	10961471	Argument	i_ctx_p		10961452	0					
ANR	10961472	Identifier	i_ctx_p		10961452	0					
ANR	10961473	ReturnType	int		10961452	1					
ANR	10961474	Identifier	op_show_setup		10961452	2					
ANR	10961475	ParameterList	"i_ctx_t * i_ctx_p , os_ptr op"		10961452	3					
ANR	10961476	Parameter	i_ctx_t * i_ctx_p	481:14:13701:13716	10961452	0	True				
ANR	10961477	ParameterType	i_ctx_t *		10961452	0					
ANR	10961478	Identifier	i_ctx_p		10961452	1					
ANR	10961479	Parameter	os_ptr op	481:32:13719:13727	10961452	1	True				
ANR	10961480	ParameterType	os_ptr		10961452	0					
ANR	10961481	Identifier	op		10961452	1					
ANR	10961482	CFGEntryNode	ENTRY		10961452		True				
ANR	10961483	CFGExitNode	EXIT		10961452		True				
ANR	10961484	Symbol	op		10961452						
ANR	10961485	Symbol	t_string		10961452						
ANR	10961486	Symbol	op_show_enum_setup		10961452						
ANR	10961487	Symbol	* op		10961452						
ANR	10961488	Symbol	i_ctx_p		10961452						
ANR	10961489	Function	op_show_enum_setup	486:0:13810:13899							
ANR	10961490	FunctionDef	op_show_enum_setup (i_ctx_t * i_ctx_p)		10961489	0					
ANR	10961491	CompoundStatement		488:0:13851:13899	10961489	0					
ANR	10961492	ExpressionStatement	check_estack ( snumpush + 2 )	489:4:13857:13883	10961489	0	True				
ANR	10961493	CallExpression	check_estack ( snumpush + 2 )		10961489	0					
ANR	10961494	Callee	check_estack		10961489	0					
ANR	10961495	Identifier	check_estack		10961489	0					
ANR	10961496	ArgumentList	snumpush + 2		10961489	1					
ANR	10961497	Argument	snumpush + 2		10961489	0					
ANR	10961498	AdditiveExpression	snumpush + 2		10961489	0		+			
ANR	10961499	Identifier	snumpush		10961489	0					
ANR	10961500	PrimaryExpression	2		10961489	1					
ANR	10961501	ReturnStatement	return 0 ;	490:4:13889:13897	10961489	1	True				
ANR	10961502	PrimaryExpression	0		10961489	0					
ANR	10961503	ReturnType	int		10961489	1					
ANR	10961504	Identifier	op_show_enum_setup		10961489	2					
ANR	10961505	ParameterList	i_ctx_t * i_ctx_p		10961489	3					
ANR	10961506	Parameter	i_ctx_t * i_ctx_p	487:19:13833:13848	10961489	0	True				
ANR	10961507	ParameterType	i_ctx_t *		10961489	0					
ANR	10961508	Identifier	i_ctx_p		10961489	1					
ANR	10961509	CFGEntryNode	ENTRY		10961489		True				
ANR	10961510	CFGExitNode	EXIT		10961489		True				
ANR	10961511	Symbol	i_ctx_p		10961489						
ANR	10961512	Symbol	snumpush		10961489						
ANR	10961513	Function	op_show_finish_setup	494:0:13943:17060							
ANR	10961514	FunctionDef	"op_show_finish_setup (i_ctx_t * i_ctx_p , gs_text_enum_t * penum , int npop , op_proc_t endproc)"		10961513	0					
ANR	10961515	CompoundStatement		497:0:14081:17060	10961513	0					
ANR	10961516	IdentifierDeclStatement	gs_text_enum_t * osenum = op_show_find ( i_ctx_p ) ;	498:4:14087:14133	10961513	0	True				
ANR	10961517	IdentifierDecl	* osenum = op_show_find ( i_ctx_p )		10961513	0					
ANR	10961518	IdentifierDeclType	gs_text_enum_t *		10961513	0					
ANR	10961519	Identifier	osenum		10961513	1					
ANR	10961520	AssignmentExpression	* osenum = op_show_find ( i_ctx_p )		10961513	2		=			
ANR	10961521	Identifier	osenum		10961513	0					
ANR	10961522	CallExpression	op_show_find ( i_ctx_p )		10961513	1					
ANR	10961523	Callee	op_show_find		10961513	0					
ANR	10961524	Identifier	op_show_find		10961513	0					
ANR	10961525	ArgumentList	i_ctx_p		10961513	1					
ANR	10961526	Argument	i_ctx_p		10961513	0					
ANR	10961527	Identifier	i_ctx_p		10961513	0					
ANR	10961528	IdentifierDeclStatement	es_ptr ep = esp + snumpush ;	499:4:14139:14165	10961513	1	True				
ANR	10961529	IdentifierDecl	ep = esp + snumpush		10961513	0					
ANR	10961530	IdentifierDeclType	es_ptr		10961513	0					
ANR	10961531	Identifier	ep		10961513	1					
ANR	10961532	AssignmentExpression	ep = esp + snumpush		10961513	2		=			
ANR	10961533	Identifier	ep		10961513	0					
ANR	10961534	AdditiveExpression	esp + snumpush		10961513	1		+			
ANR	10961535	Identifier	esp		10961513	0					
ANR	10961536	Identifier	snumpush		10961513	1					
ANR	10961537	IdentifierDeclStatement	gs_glyph glyph ;	500:4:14171:14185	10961513	2	True				
ANR	10961538	IdentifierDecl	glyph		10961513	0					
ANR	10961539	IdentifierDeclType	gs_glyph		10961513	0					
ANR	10961540	Identifier	glyph		10961513	1					
ANR	10961541	IfStatement	if ( gs_currentcpsimode ( igs -> memory ) )		10961513	3					
ANR	10961542	Condition	gs_currentcpsimode ( igs -> memory )	502:8:14196:14226	10961513	0	True				
ANR	10961543	CallExpression	gs_currentcpsimode ( igs -> memory )		10961513	0					
ANR	10961544	Callee	gs_currentcpsimode		10961513	0					
ANR	10961545	Identifier	gs_currentcpsimode		10961513	0					
ANR	10961546	ArgumentList	igs -> memory		10961513	1					
ANR	10961547	Argument	igs -> memory		10961513	0					
ANR	10961548	PtrMemberAccess	igs -> memory		10961513	0					
ANR	10961549	Identifier	igs		10961513	0					
ANR	10961550	Identifier	memory		10961513	1					
ANR	10961551	CompoundStatement		10:8:345:416	10961513	1					
ANR	10961552	IdentifierDeclStatement	"int code = gs_text_count_chars ( igs , gs_get_text_params ( penum ) , imemory ) ;"	506:8:14427:14498	10961513	0	True				
ANR	10961553	IdentifierDecl	"code = gs_text_count_chars ( igs , gs_get_text_params ( penum ) , imemory )"		10961513	0					
ANR	10961554	IdentifierDeclType	int		10961513	0					
ANR	10961555	Identifier	code		10961513	1					
ANR	10961556	AssignmentExpression	"code = gs_text_count_chars ( igs , gs_get_text_params ( penum ) , imemory )"		10961513	2		=			
ANR	10961557	Identifier	code		10961513	0					
ANR	10961558	CallExpression	"gs_text_count_chars ( igs , gs_get_text_params ( penum ) , imemory )"		10961513	1					
ANR	10961559	Callee	gs_text_count_chars		10961513	0					
ANR	10961560	Identifier	gs_text_count_chars		10961513	0					
ANR	10961561	ArgumentList	igs		10961513	1					
ANR	10961562	Argument	igs		10961513	0					
ANR	10961563	Identifier	igs		10961513	0					
ANR	10961564	Argument	gs_get_text_params ( penum )		10961513	1					
ANR	10961565	CallExpression	gs_get_text_params ( penum )		10961513	0					
ANR	10961566	Callee	gs_get_text_params		10961513	0					
ANR	10961567	Identifier	gs_get_text_params		10961513	0					
ANR	10961568	ArgumentList	penum		10961513	1					
ANR	10961569	Argument	penum		10961513	0					
ANR	10961570	Identifier	penum		10961513	0					
ANR	10961571	Argument	imemory		10961513	2					
ANR	10961572	Identifier	imemory		10961513	0					
ANR	10961573	IfStatement	if ( code < 0 )		10961513	1					
ANR	10961574	Condition	code < 0	508:12:14513:14520	10961513	0	True				
ANR	10961575	RelationalExpression	code < 0		10961513	0		<			
ANR	10961576	Identifier	code		10961513	0					
ANR	10961577	PrimaryExpression	0		10961513	1					
ANR	10961578	ReturnStatement	return code ;	509:12:14535:14546	10961513	1	True				
ANR	10961579	Identifier	code		10961513	0					
ANR	10961580	IfStatement	"if ( osenum && SHOW_IS_ALL_OF ( osenum , TEXT_FROM_STRING | TEXT_DO_NONE | TEXT_INTERVENE ) && SHOW_IS_ALL_OF ( penum , TEXT_FROM_STRING | TEXT_RETURN_WIDTH ) && ( glyph = gs_text_current_glyph ( osenum ) ) != GS_NO_GLYPH && glyph >= GS_MIN_CID_GLYPH && gs_default_same_font ( gs_text_current_font ( osenum ) , gs_text_current_font ( penum ) , true ) )"		10961513	4					
ANR	10961581	Condition	"osenum && SHOW_IS_ALL_OF ( osenum , TEXT_FROM_STRING | TEXT_DO_NONE | TEXT_INTERVENE ) && SHOW_IS_ALL_OF ( penum , TEXT_FROM_STRING | TEXT_RETURN_WIDTH ) && ( glyph = gs_text_current_glyph ( osenum ) ) != GS_NO_GLYPH && glyph >= GS_MIN_CID_GLYPH && gs_default_same_font ( gs_text_current_font ( osenum ) , gs_text_current_font ( penum ) , true )"	515:8:14713:15278	10961513	0	True				
ANR	10961582	AndExpression	"osenum && SHOW_IS_ALL_OF ( osenum , TEXT_FROM_STRING | TEXT_DO_NONE | TEXT_INTERVENE ) && SHOW_IS_ALL_OF ( penum , TEXT_FROM_STRING | TEXT_RETURN_WIDTH ) && ( glyph = gs_text_current_glyph ( osenum ) ) != GS_NO_GLYPH && glyph >= GS_MIN_CID_GLYPH && gs_default_same_font ( gs_text_current_font ( osenum ) , gs_text_current_font ( penum ) , true )"		10961513	0		&&			
ANR	10961583	Identifier	osenum		10961513	0					
ANR	10961584	AndExpression	"SHOW_IS_ALL_OF ( osenum , TEXT_FROM_STRING | TEXT_DO_NONE | TEXT_INTERVENE ) && SHOW_IS_ALL_OF ( penum , TEXT_FROM_STRING | TEXT_RETURN_WIDTH ) && ( glyph = gs_text_current_glyph ( osenum ) ) != GS_NO_GLYPH && glyph >= GS_MIN_CID_GLYPH && gs_default_same_font ( gs_text_current_font ( osenum ) , gs_text_current_font ( penum ) , true )"		10961513	1		&&			
ANR	10961585	CallExpression	"SHOW_IS_ALL_OF ( osenum , TEXT_FROM_STRING | TEXT_DO_NONE | TEXT_INTERVENE )"		10961513	0					
ANR	10961586	Callee	SHOW_IS_ALL_OF		10961513	0					
ANR	10961587	Identifier	SHOW_IS_ALL_OF		10961513	0					
ANR	10961588	ArgumentList	osenum		10961513	1					
ANR	10961589	Argument	osenum		10961513	0					
ANR	10961590	Identifier	osenum		10961513	0					
ANR	10961591	Argument	TEXT_FROM_STRING | TEXT_DO_NONE | TEXT_INTERVENE		10961513	1					
ANR	10961592	InclusiveOrExpression	TEXT_FROM_STRING | TEXT_DO_NONE | TEXT_INTERVENE		10961513	0		|			
ANR	10961593	Identifier	TEXT_FROM_STRING		10961513	0					
ANR	10961594	InclusiveOrExpression	TEXT_DO_NONE | TEXT_INTERVENE		10961513	1		|			
ANR	10961595	Identifier	TEXT_DO_NONE		10961513	0					
ANR	10961596	Identifier	TEXT_INTERVENE		10961513	1					
ANR	10961597	AndExpression	"SHOW_IS_ALL_OF ( penum , TEXT_FROM_STRING | TEXT_RETURN_WIDTH ) && ( glyph = gs_text_current_glyph ( osenum ) ) != GS_NO_GLYPH && glyph >= GS_MIN_CID_GLYPH && gs_default_same_font ( gs_text_current_font ( osenum ) , gs_text_current_font ( penum ) , true )"		10961513	1		&&			
ANR	10961598	CallExpression	"SHOW_IS_ALL_OF ( penum , TEXT_FROM_STRING | TEXT_RETURN_WIDTH )"		10961513	0					
ANR	10961599	Callee	SHOW_IS_ALL_OF		10961513	0					
ANR	10961600	Identifier	SHOW_IS_ALL_OF		10961513	0					
ANR	10961601	ArgumentList	penum		10961513	1					
ANR	10961602	Argument	penum		10961513	0					
ANR	10961603	Identifier	penum		10961513	0					
ANR	10961604	Argument	TEXT_FROM_STRING | TEXT_RETURN_WIDTH		10961513	1					
ANR	10961605	InclusiveOrExpression	TEXT_FROM_STRING | TEXT_RETURN_WIDTH		10961513	0		|			
ANR	10961606	Identifier	TEXT_FROM_STRING		10961513	0					
ANR	10961607	Identifier	TEXT_RETURN_WIDTH		10961513	1					
ANR	10961608	AndExpression	"( glyph = gs_text_current_glyph ( osenum ) ) != GS_NO_GLYPH && glyph >= GS_MIN_CID_GLYPH && gs_default_same_font ( gs_text_current_font ( osenum ) , gs_text_current_font ( penum ) , true )"		10961513	1		&&			
ANR	10961609	EqualityExpression	( glyph = gs_text_current_glyph ( osenum ) ) != GS_NO_GLYPH		10961513	0		!=			
ANR	10961610	AssignmentExpression	glyph = gs_text_current_glyph ( osenum )		10961513	0		=			
ANR	10961611	Identifier	glyph		10961513	0					
ANR	10961612	CallExpression	gs_text_current_glyph ( osenum )		10961513	1					
ANR	10961613	Callee	gs_text_current_glyph		10961513	0					
ANR	10961614	Identifier	gs_text_current_glyph		10961513	0					
ANR	10961615	ArgumentList	osenum		10961513	1					
ANR	10961616	Argument	osenum		10961513	0					
ANR	10961617	Identifier	osenum		10961513	0					
ANR	10961618	Identifier	GS_NO_GLYPH		10961513	1					
ANR	10961619	AndExpression	"glyph >= GS_MIN_CID_GLYPH && gs_default_same_font ( gs_text_current_font ( osenum ) , gs_text_current_font ( penum ) , true )"		10961513	1		&&			
ANR	10961620	RelationalExpression	glyph >= GS_MIN_CID_GLYPH		10961513	0		>=			
ANR	10961621	Identifier	glyph		10961513	0					
ANR	10961622	Identifier	GS_MIN_CID_GLYPH		10961513	1					
ANR	10961623	CallExpression	"gs_default_same_font ( gs_text_current_font ( osenum ) , gs_text_current_font ( penum ) , true )"		10961513	1					
ANR	10961624	Callee	gs_default_same_font		10961513	0					
ANR	10961625	Identifier	gs_default_same_font		10961513	0					
ANR	10961626	ArgumentList	gs_text_current_font ( osenum )		10961513	1					
ANR	10961627	Argument	gs_text_current_font ( osenum )		10961513	0					
ANR	10961628	CallExpression	gs_text_current_font ( osenum )		10961513	0					
ANR	10961629	Callee	gs_text_current_font		10961513	0					
ANR	10961630	Identifier	gs_text_current_font		10961513	0					
ANR	10961631	ArgumentList	osenum		10961513	1					
ANR	10961632	Argument	osenum		10961513	0					
ANR	10961633	Identifier	osenum		10961513	0					
ANR	10961634	Argument	gs_text_current_font ( penum )		10961513	1					
ANR	10961635	CallExpression	gs_text_current_font ( penum )		10961513	0					
ANR	10961636	Callee	gs_text_current_font		10961513	0					
ANR	10961637	Identifier	gs_text_current_font		10961513	0					
ANR	10961638	ArgumentList	penum		10961513	1					
ANR	10961639	Argument	penum		10961513	0					
ANR	10961640	Identifier	penum		10961513	0					
ANR	10961641	Argument	true		10961513	2					
ANR	10961642	Identifier	true		10961513	0					
ANR	10961643	CompoundStatement		31:8:1218:1239	10961513	1					
ANR	10961644	IdentifierDeclStatement	gs_text_params_t text ;	527:8:15300:15321	10961513	0	True				
ANR	10961645	IdentifierDecl	text		10961513	0					
ANR	10961646	IdentifierDeclType	gs_text_params_t		10961513	0					
ANR	10961647	Identifier	text		10961513	1					
ANR	10961648	IfStatement	if ( ! ( penum -> text . size == 1 && penum -> text . data . bytes [ 0 ] == ( gs_text_current_char ( osenum ) & 0xff ) ) )		10961513	1					
ANR	10961649	Condition	! ( penum -> text . size == 1 && penum -> text . data . bytes [ 0 ] == ( gs_text_current_char ( osenum ) & 0xff ) )	529:12:15336:15459	10961513	0	True				
ANR	10961650	UnaryOperationExpression	! ( penum -> text . size == 1 && penum -> text . data . bytes [ 0 ] == ( gs_text_current_char ( osenum ) & 0xff ) )		10961513	0					
ANR	10961651	UnaryOperator	!		10961513	0					
ANR	10961652	AndExpression	penum -> text . size == 1 && penum -> text . data . bytes [ 0 ] == ( gs_text_current_char ( osenum ) & 0xff )		10961513	1		&&			
ANR	10961653	EqualityExpression	penum -> text . size == 1		10961513	0		==			
ANR	10961654	MemberAccess	penum -> text . size		10961513	0					
ANR	10961655	PtrMemberAccess	penum -> text		10961513	0					
ANR	10961656	Identifier	penum		10961513	0					
ANR	10961657	Identifier	text		10961513	1					
ANR	10961658	Identifier	size		10961513	1					
ANR	10961659	PrimaryExpression	1		10961513	1					
ANR	10961660	EqualityExpression	penum -> text . data . bytes [ 0 ] == ( gs_text_current_char ( osenum ) & 0xff )		10961513	1		==			
ANR	10961661	ArrayIndexing	penum -> text . data . bytes [ 0 ]		10961513	0					
ANR	10961662	MemberAccess	penum -> text . data . bytes		10961513	0					
ANR	10961663	MemberAccess	penum -> text . data		10961513	0					
ANR	10961664	PtrMemberAccess	penum -> text		10961513	0					
ANR	10961665	Identifier	penum		10961513	0					
ANR	10961666	Identifier	text		10961513	1					
ANR	10961667	Identifier	data		10961513	1					
ANR	10961668	Identifier	bytes		10961513	1					
ANR	10961669	PrimaryExpression	0		10961513	1					
ANR	10961670	BitAndExpression	gs_text_current_char ( osenum ) & 0xff		10961513	1		&			
ANR	10961671	CallExpression	gs_text_current_char ( osenum )		10961513	0					
ANR	10961672	Callee	gs_text_current_char		10961513	0					
ANR	10961673	Identifier	gs_text_current_char		10961513	0					
ANR	10961674	ArgumentList	osenum		10961513	1					
ANR	10961675	Argument	osenum		10961513	0					
ANR	10961676	Identifier	osenum		10961513	0					
ANR	10961677	PrimaryExpression	0xff		10961513	1					
ANR	10961678	ExpressionStatement	return_error ( gs_error_rangecheck )	533:12:15487:15520	10961513	1	True				
ANR	10961679	CallExpression	return_error ( gs_error_rangecheck )		10961513	0					
ANR	10961680	Callee	return_error		10961513	0					
ANR	10961681	Identifier	return_error		10961513	0					
ANR	10961682	ArgumentList	gs_error_rangecheck		10961513	1					
ANR	10961683	Argument	gs_error_rangecheck		10961513	0					
ANR	10961684	Identifier	gs_error_rangecheck		10961513	0					
ANR	10961685	ExpressionStatement	text = penum -> text	534:8:15530:15548	10961513	2	True				
ANR	10961686	AssignmentExpression	text = penum -> text		10961513	0		=			
ANR	10961687	Identifier	text		10961513	0					
ANR	10961688	PtrMemberAccess	penum -> text		10961513	1					
ANR	10961689	Identifier	penum		10961513	0					
ANR	10961690	Identifier	text		10961513	1					
ANR	10961691	ExpressionStatement	text . operation = ( text . operation & ~ ( TEXT_FROM_STRING | TEXT_FROM_BYTES | TEXT_FROM_CHARS | TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_CHAR ) ) | TEXT_FROM_SINGLE_GLYPH	535:8:15558:15769	10961513	3	True				
ANR	10961692	AssignmentExpression	text . operation = ( text . operation & ~ ( TEXT_FROM_STRING | TEXT_FROM_BYTES | TEXT_FROM_CHARS | TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_CHAR ) ) | TEXT_FROM_SINGLE_GLYPH		10961513	0		=			
ANR	10961693	MemberAccess	text . operation		10961513	0					
ANR	10961694	Identifier	text		10961513	0					
ANR	10961695	Identifier	operation		10961513	1					
ANR	10961696	InclusiveOrExpression	( text . operation & ~ ( TEXT_FROM_STRING | TEXT_FROM_BYTES | TEXT_FROM_CHARS | TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_CHAR ) ) | TEXT_FROM_SINGLE_GLYPH		10961513	1		|			
ANR	10961697	BitAndExpression	text . operation & ~ ( TEXT_FROM_STRING | TEXT_FROM_BYTES | TEXT_FROM_CHARS | TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_CHAR )		10961513	0		&			
ANR	10961698	MemberAccess	text . operation		10961513	0					
ANR	10961699	Identifier	text		10961513	0					
ANR	10961700	Identifier	operation		10961513	1					
ANR	10961701	UnaryOperationExpression	~ ( TEXT_FROM_STRING | TEXT_FROM_BYTES | TEXT_FROM_CHARS | TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_CHAR )		10961513	1					
ANR	10961702	UnaryOperator	~		10961513	0					
ANR	10961703	InclusiveOrExpression	TEXT_FROM_STRING | TEXT_FROM_BYTES | TEXT_FROM_CHARS | TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_CHAR		10961513	1		|			
ANR	10961704	Identifier	TEXT_FROM_STRING		10961513	0					
ANR	10961705	InclusiveOrExpression	TEXT_FROM_BYTES | TEXT_FROM_CHARS | TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_CHAR		10961513	1		|			
ANR	10961706	Identifier	TEXT_FROM_BYTES		10961513	0					
ANR	10961707	InclusiveOrExpression	TEXT_FROM_CHARS | TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_CHAR		10961513	1		|			
ANR	10961708	Identifier	TEXT_FROM_CHARS		10961513	0					
ANR	10961709	InclusiveOrExpression	TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_CHAR		10961513	1		|			
ANR	10961710	Identifier	TEXT_FROM_GLYPHS		10961513	0					
ANR	10961711	Identifier	TEXT_FROM_SINGLE_CHAR		10961513	1					
ANR	10961712	Identifier	TEXT_FROM_SINGLE_GLYPH		10961513	1					
ANR	10961713	ExpressionStatement	text . data . d_glyph = glyph	540:8:15779:15804	10961513	4	True				
ANR	10961714	AssignmentExpression	text . data . d_glyph = glyph		10961513	0		=			
ANR	10961715	MemberAccess	text . data . d_glyph		10961513	0					
ANR	10961716	MemberAccess	text . data		10961513	0					
ANR	10961717	Identifier	text		10961513	0					
ANR	10961718	Identifier	data		10961513	1					
ANR	10961719	Identifier	d_glyph		10961513	1					
ANR	10961720	Identifier	glyph		10961513	1					
ANR	10961721	ExpressionStatement	text . size = 1	541:8:15814:15827	10961513	5	True				
ANR	10961722	AssignmentExpression	text . size = 1		10961513	0		=			
ANR	10961723	MemberAccess	text . size		10961513	0					
ANR	10961724	Identifier	text		10961513	0					
ANR	10961725	Identifier	size		10961513	1					
ANR	10961726	PrimaryExpression	1		10961513	1					
ANR	10961727	ExpressionStatement	"gs_text_restart ( penum , & text )"	542:8:15837:15866	10961513	6	True				
ANR	10961728	CallExpression	"gs_text_restart ( penum , & text )"		10961513	0					
ANR	10961729	Callee	gs_text_restart		10961513	0					
ANR	10961730	Identifier	gs_text_restart		10961513	0					
ANR	10961731	ArgumentList	penum		10961513	1					
ANR	10961732	Argument	penum		10961513	0					
ANR	10961733	Identifier	penum		10961513	0					
ANR	10961734	Argument	& text		10961513	1					
ANR	10961735	UnaryOperationExpression	& text		10961513	0					
ANR	10961736	UnaryOperator	&		10961513	0					
ANR	10961737	Identifier	text		10961513	1					
ANR	10961738	IfStatement	if ( osenum && osenum -> current_font -> FontType == ft_user_defined && osenum -> orig_font -> FontType == ft_composite && ( ( const gs_font_type0 * ) osenum -> orig_font ) -> data . FMapType == fmap_CMap )		10961513	5					
ANR	10961739	Condition	osenum && osenum -> current_font -> FontType == ft_user_defined && osenum -> orig_font -> FontType == ft_composite && ( ( const gs_font_type0 * ) osenum -> orig_font ) -> data . FMapType == fmap_CMap	544:8:15882:16077	10961513	0	True				
ANR	10961740	AndExpression	osenum && osenum -> current_font -> FontType == ft_user_defined && osenum -> orig_font -> FontType == ft_composite && ( ( const gs_font_type0 * ) osenum -> orig_font ) -> data . FMapType == fmap_CMap		10961513	0		&&			
ANR	10961741	Identifier	osenum		10961513	0					
ANR	10961742	AndExpression	osenum -> current_font -> FontType == ft_user_defined && osenum -> orig_font -> FontType == ft_composite && ( ( const gs_font_type0 * ) osenum -> orig_font ) -> data . FMapType == fmap_CMap		10961513	1		&&			
ANR	10961743	EqualityExpression	osenum -> current_font -> FontType == ft_user_defined		10961513	0		==			
ANR	10961744	PtrMemberAccess	osenum -> current_font -> FontType		10961513	0					
ANR	10961745	PtrMemberAccess	osenum -> current_font		10961513	0					
ANR	10961746	Identifier	osenum		10961513	0					
ANR	10961747	Identifier	current_font		10961513	1					
ANR	10961748	Identifier	FontType		10961513	1					
ANR	10961749	Identifier	ft_user_defined		10961513	1					
ANR	10961750	AndExpression	osenum -> orig_font -> FontType == ft_composite && ( ( const gs_font_type0 * ) osenum -> orig_font ) -> data . FMapType == fmap_CMap		10961513	1		&&			
ANR	10961751	EqualityExpression	osenum -> orig_font -> FontType == ft_composite		10961513	0		==			
ANR	10961752	PtrMemberAccess	osenum -> orig_font -> FontType		10961513	0					
ANR	10961753	PtrMemberAccess	osenum -> orig_font		10961513	0					
ANR	10961754	Identifier	osenum		10961513	0					
ANR	10961755	Identifier	orig_font		10961513	1					
ANR	10961756	Identifier	FontType		10961513	1					
ANR	10961757	Identifier	ft_composite		10961513	1					
ANR	10961758	EqualityExpression	( ( const gs_font_type0 * ) osenum -> orig_font ) -> data . FMapType == fmap_CMap		10961513	1		==			
ANR	10961759	MemberAccess	( ( const gs_font_type0 * ) osenum -> orig_font ) -> data . FMapType		10961513	0					
ANR	10961760	PtrMemberAccess	( ( const gs_font_type0 * ) osenum -> orig_font ) -> data		10961513	0					
ANR	10961761	CastExpression	( const gs_font_type0 * ) osenum -> orig_font		10961513	0					
ANR	10961762	CastTarget	const gs_font_type0 *		10961513	0					
ANR	10961763	PtrMemberAccess	osenum -> orig_font		10961513	1					
ANR	10961764	Identifier	osenum		10961513	0					
ANR	10961765	Identifier	orig_font		10961513	1					
ANR	10961766	Identifier	data		10961513	1					
ANR	10961767	Identifier	FMapType		10961513	1					
ANR	10961768	Identifier	fmap_CMap		10961513	1					
ANR	10961769	CompoundStatement		50:80:1998:1998	10961513	1					
ANR	10961770	ExpressionStatement	penum -> outer_CID = osenum -> returned . current_glyph	548:8:16163:16212	10961513	0	True				
ANR	10961771	AssignmentExpression	penum -> outer_CID = osenum -> returned . current_glyph		10961513	0		=			
ANR	10961772	PtrMemberAccess	penum -> outer_CID		10961513	0					
ANR	10961773	Identifier	penum		10961513	0					
ANR	10961774	Identifier	outer_CID		10961513	1					
ANR	10961775	MemberAccess	osenum -> returned . current_glyph		10961513	1					
ANR	10961776	PtrMemberAccess	osenum -> returned		10961513	0					
ANR	10961777	Identifier	osenum		10961513	0					
ANR	10961778	Identifier	returned		10961513	1					
ANR	10961779	Identifier	current_glyph		10961513	1					
ANR	10961780	IfStatement	if ( osenum == NULL && ! ( penum -> text . operation & ( TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_GLYPH ) ) )		10961513	6					
ANR	10961781	Condition	osenum == NULL && ! ( penum -> text . operation & ( TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_GLYPH ) )	550:8:16228:16315	10961513	0	True				
ANR	10961782	AndExpression	osenum == NULL && ! ( penum -> text . operation & ( TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_GLYPH ) )		10961513	0		&&			
ANR	10961783	EqualityExpression	osenum == NULL		10961513	0		==			
ANR	10961784	Identifier	osenum		10961513	0					
ANR	10961785	Identifier	NULL		10961513	1					
ANR	10961786	UnaryOperationExpression	! ( penum -> text . operation & ( TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_GLYPH ) )		10961513	1					
ANR	10961787	UnaryOperator	!		10961513	0					
ANR	10961788	BitAndExpression	penum -> text . operation & ( TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_GLYPH )		10961513	1		&			
ANR	10961789	MemberAccess	penum -> text . operation		10961513	0					
ANR	10961790	PtrMemberAccess	penum -> text		10961513	0					
ANR	10961791	Identifier	penum		10961513	0					
ANR	10961792	Identifier	text		10961513	1					
ANR	10961793	Identifier	operation		10961513	1					
ANR	10961794	InclusiveOrExpression	TEXT_FROM_GLYPHS | TEXT_FROM_SINGLE_GLYPH		10961513	1		|			
ANR	10961795	Identifier	TEXT_FROM_GLYPHS		10961513	0					
ANR	10961796	Identifier	TEXT_FROM_SINGLE_GLYPH		10961513	1					
ANR	10961797	CompoundStatement		55:8:2246:2279	10961513	1					
ANR	10961798	IdentifierDeclStatement	int ft = igs -> root_font -> FontType ;	551:8:16328:16361	10961513	0	True				
ANR	10961799	IdentifierDecl	ft = igs -> root_font -> FontType		10961513	0					
ANR	10961800	IdentifierDeclType	int		10961513	0					
ANR	10961801	Identifier	ft		10961513	1					
ANR	10961802	AssignmentExpression	ft = igs -> root_font -> FontType		10961513	2		=			
ANR	10961803	Identifier	ft		10961513	0					
ANR	10961804	PtrMemberAccess	igs -> root_font -> FontType		10961513	1					
ANR	10961805	PtrMemberAccess	igs -> root_font		10961513	0					
ANR	10961806	Identifier	igs		10961513	0					
ANR	10961807	Identifier	root_font		10961513	1					
ANR	10961808	Identifier	FontType		10961513	1					
ANR	10961809	IfStatement	if ( ( ft >= ft_CID_encrypted && ft <= ft_CID_TrueType ) || ft == ft_CID_bitmap )		10961513	1					
ANR	10961810	Condition	( ft >= ft_CID_encrypted && ft <= ft_CID_TrueType ) || ft == ft_CID_bitmap	553:12:16376:16447	10961513	0	True				
ANR	10961811	OrExpression	( ft >= ft_CID_encrypted && ft <= ft_CID_TrueType ) || ft == ft_CID_bitmap		10961513	0		||			
ANR	10961812	AndExpression	ft >= ft_CID_encrypted && ft <= ft_CID_TrueType		10961513	0		&&			
ANR	10961813	RelationalExpression	ft >= ft_CID_encrypted		10961513	0		>=			
ANR	10961814	Identifier	ft		10961513	0					
ANR	10961815	Identifier	ft_CID_encrypted		10961513	1					
ANR	10961816	RelationalExpression	ft <= ft_CID_TrueType		10961513	1		<=			
ANR	10961817	Identifier	ft		10961513	0					
ANR	10961818	Identifier	ft_CID_TrueType		10961513	1					
ANR	10961819	EqualityExpression	ft == ft_CID_bitmap		10961513	1		==			
ANR	10961820	Identifier	ft		10961513	0					
ANR	10961821	Identifier	ft_CID_bitmap		10961513	1					
ANR	10961822	ExpressionStatement	return_error ( gs_error_typecheck )	554:12:16462:16494	10961513	1	True				
ANR	10961823	CallExpression	return_error ( gs_error_typecheck )		10961513	0					
ANR	10961824	Callee	return_error		10961513	0					
ANR	10961825	Identifier	return_error		10961513	0					
ANR	10961826	ArgumentList	gs_error_typecheck		10961513	1					
ANR	10961827	Argument	gs_error_typecheck		10961513	0					
ANR	10961828	Identifier	gs_error_typecheck		10961513	0					
ANR	10961829	ExpressionStatement	"make_mark_estack ( ep - ( snumpush - 1 ) , es_show , op_show_cleanup )"	556:4:16506:16569	10961513	7	True				
ANR	10961830	CallExpression	"make_mark_estack ( ep - ( snumpush - 1 ) , es_show , op_show_cleanup )"		10961513	0					
ANR	10961831	Callee	make_mark_estack		10961513	0					
ANR	10961832	Identifier	make_mark_estack		10961513	0					
ANR	10961833	ArgumentList	ep - ( snumpush - 1 )		10961513	1					
ANR	10961834	Argument	ep - ( snumpush - 1 )		10961513	0					
ANR	10961835	AdditiveExpression	ep - ( snumpush - 1 )		10961513	0		-			
ANR	10961836	Identifier	ep		10961513	0					
ANR	10961837	AdditiveExpression	snumpush - 1		10961513	1		-			
ANR	10961838	Identifier	snumpush		10961513	0					
ANR	10961839	PrimaryExpression	1		10961513	1					
ANR	10961840	Argument	es_show		10961513	1					
ANR	10961841	Identifier	es_show		10961513	0					
ANR	10961842	Argument	op_show_cleanup		10961513	2					
ANR	10961843	Identifier	op_show_cleanup		10961513	0					
ANR	10961844	IfStatement	if ( endproc == NULL )		10961513	8					
ANR	10961845	Condition	endproc == NULL	557:8:16579:16593	10961513	0	True				
ANR	10961846	EqualityExpression	endproc == NULL		10961513	0		==			
ANR	10961847	Identifier	endproc		10961513	0					
ANR	10961848	Identifier	NULL		10961513	1					
ANR	10961849	ExpressionStatement	endproc = finish_show	558:8:16604:16625	10961513	1	True				
ANR	10961850	AssignmentExpression	endproc = finish_show		10961513	0		=			
ANR	10961851	Identifier	endproc		10961513	0					
ANR	10961852	Identifier	finish_show		10961513	1					
ANR	10961853	ExpressionStatement	make_null ( & esslot ( ep ) )	559:4:16631:16653	10961513	9	True				
ANR	10961854	CallExpression	make_null ( & esslot ( ep ) )		10961513	0					
ANR	10961855	Callee	make_null		10961513	0					
ANR	10961856	Identifier	make_null		10961513	0					
ANR	10961857	ArgumentList	& esslot ( ep )		10961513	1					
ANR	10961858	Argument	& esslot ( ep )		10961513	0					
ANR	10961859	UnaryOperationExpression	& esslot ( ep )		10961513	0					
ANR	10961860	UnaryOperator	&		10961513	0					
ANR	10961861	CallExpression	esslot ( ep )		10961513	1					
ANR	10961862	Callee	esslot		10961513	0					
ANR	10961863	Identifier	esslot		10961513	0					
ANR	10961864	ArgumentList	ep		10961513	1					
ANR	10961865	Argument	ep		10961513	0					
ANR	10961866	Identifier	ep		10961513	0					
ANR	10961867	ExpressionStatement	"make_int ( & esodepth ( ep ) , ref_stack_count_inline ( & o_stack ) - npop )"	560:4:16659:16723	10961513	10	True				
ANR	10961868	CallExpression	"make_int ( & esodepth ( ep ) , ref_stack_count_inline ( & o_stack ) - npop )"		10961513	0					
ANR	10961869	Callee	make_int		10961513	0					
ANR	10961870	Identifier	make_int		10961513	0					
ANR	10961871	ArgumentList	& esodepth ( ep )		10961513	1					
ANR	10961872	Argument	& esodepth ( ep )		10961513	0					
ANR	10961873	UnaryOperationExpression	& esodepth ( ep )		10961513	0					
ANR	10961874	UnaryOperator	&		10961513	0					
ANR	10961875	CallExpression	esodepth ( ep )		10961513	1					
ANR	10961876	Callee	esodepth		10961513	0					
ANR	10961877	Identifier	esodepth		10961513	0					
ANR	10961878	ArgumentList	ep		10961513	1					
ANR	10961879	Argument	ep		10961513	0					
ANR	10961880	Identifier	ep		10961513	0					
ANR	10961881	Argument	ref_stack_count_inline ( & o_stack ) - npop		10961513	1					
ANR	10961882	AdditiveExpression	ref_stack_count_inline ( & o_stack ) - npop		10961513	0		-			
ANR	10961883	CallExpression	ref_stack_count_inline ( & o_stack )		10961513	0					
ANR	10961884	Callee	ref_stack_count_inline		10961513	0					
ANR	10961885	Identifier	ref_stack_count_inline		10961513	0					
ANR	10961886	ArgumentList	& o_stack		10961513	1					
ANR	10961887	Argument	& o_stack		10961513	0					
ANR	10961888	UnaryOperationExpression	& o_stack		10961513	0					
ANR	10961889	UnaryOperator	&		10961513	0					
ANR	10961890	Identifier	o_stack		10961513	1					
ANR	10961891	Identifier	npop		10961513	1					
ANR	10961892	ExpressionStatement	"make_int ( & esddepth ( ep ) , ref_stack_count_inline ( & d_stack ) )"	561:4:16756:16813	10961513	11	True				
ANR	10961893	CallExpression	"make_int ( & esddepth ( ep ) , ref_stack_count_inline ( & d_stack ) )"		10961513	0					
ANR	10961894	Callee	make_int		10961513	0					
ANR	10961895	Identifier	make_int		10961513	0					
ANR	10961896	ArgumentList	& esddepth ( ep )		10961513	1					
ANR	10961897	Argument	& esddepth ( ep )		10961513	0					
ANR	10961898	UnaryOperationExpression	& esddepth ( ep )		10961513	0					
ANR	10961899	UnaryOperator	&		10961513	0					
ANR	10961900	CallExpression	esddepth ( ep )		10961513	1					
ANR	10961901	Callee	esddepth		10961513	0					
ANR	10961902	Identifier	esddepth		10961513	0					
ANR	10961903	ArgumentList	ep		10961513	1					
ANR	10961904	Argument	ep		10961513	0					
ANR	10961905	Identifier	ep		10961513	0					
ANR	10961906	Argument	ref_stack_count_inline ( & d_stack )		10961513	1					
ANR	10961907	CallExpression	ref_stack_count_inline ( & d_stack )		10961513	0					
ANR	10961908	Callee	ref_stack_count_inline		10961513	0					
ANR	10961909	Identifier	ref_stack_count_inline		10961513	0					
ANR	10961910	ArgumentList	& d_stack		10961513	1					
ANR	10961911	Argument	& d_stack		10961513	0					
ANR	10961912	UnaryOperationExpression	& d_stack		10961513	0					
ANR	10961913	UnaryOperator	&		10961513	0					
ANR	10961914	Identifier	d_stack		10961513	1					
ANR	10961915	ExpressionStatement	"make_int ( & esgslevel ( ep ) , igs -> level )"	562:4:16861:16897	10961513	12	True				
ANR	10961916	CallExpression	"make_int ( & esgslevel ( ep ) , igs -> level )"		10961513	0					
ANR	10961917	Callee	make_int		10961513	0					
ANR	10961918	Identifier	make_int		10961513	0					
ANR	10961919	ArgumentList	& esgslevel ( ep )		10961513	1					
ANR	10961920	Argument	& esgslevel ( ep )		10961513	0					
ANR	10961921	UnaryOperationExpression	& esgslevel ( ep )		10961513	0					
ANR	10961922	UnaryOperator	&		10961513	0					
ANR	10961923	CallExpression	esgslevel ( ep )		10961513	1					
ANR	10961924	Callee	esgslevel		10961513	0					
ANR	10961925	Identifier	esgslevel		10961513	0					
ANR	10961926	ArgumentList	ep		10961513	1					
ANR	10961927	Argument	ep		10961513	0					
ANR	10961928	Identifier	ep		10961513	0					
ANR	10961929	Argument	igs -> level		10961513	1					
ANR	10961930	PtrMemberAccess	igs -> level		10961513	0					
ANR	10961931	Identifier	igs		10961513	0					
ANR	10961932	Identifier	level		10961513	1					
ANR	10961933	ExpressionStatement	make_null ( & essfont ( ep ) )	563:4:16903:16926	10961513	13	True				
ANR	10961934	CallExpression	make_null ( & essfont ( ep ) )		10961513	0					
ANR	10961935	Callee	make_null		10961513	0					
ANR	10961936	Identifier	make_null		10961513	0					
ANR	10961937	ArgumentList	& essfont ( ep )		10961513	1					
ANR	10961938	Argument	& essfont ( ep )		10961513	0					
ANR	10961939	UnaryOperationExpression	& essfont ( ep )		10961513	0					
ANR	10961940	UnaryOperator	&		10961513	0					
ANR	10961941	CallExpression	essfont ( ep )		10961513	1					
ANR	10961942	Callee	essfont		10961513	0					
ANR	10961943	Identifier	essfont		10961513	0					
ANR	10961944	ArgumentList	ep		10961513	1					
ANR	10961945	Argument	ep		10961513	0					
ANR	10961946	Identifier	ep		10961513	0					
ANR	10961947	ExpressionStatement	make_null ( & esrfont ( ep ) )	564:4:16932:16955	10961513	14	True				
ANR	10961948	CallExpression	make_null ( & esrfont ( ep ) )		10961513	0					
ANR	10961949	Callee	make_null		10961513	0					
ANR	10961950	Identifier	make_null		10961513	0					
ANR	10961951	ArgumentList	& esrfont ( ep )		10961513	1					
ANR	10961952	Argument	& esrfont ( ep )		10961513	0					
ANR	10961953	UnaryOperationExpression	& esrfont ( ep )		10961513	0					
ANR	10961954	UnaryOperator	&		10961513	0					
ANR	10961955	CallExpression	esrfont ( ep )		10961513	1					
ANR	10961956	Callee	esrfont		10961513	0					
ANR	10961957	Identifier	esrfont		10961513	0					
ANR	10961958	ArgumentList	ep		10961513	1					
ANR	10961959	Argument	ep		10961513	0					
ANR	10961960	Identifier	ep		10961513	0					
ANR	10961961	ExpressionStatement	"make_op_estack ( & eseproc ( ep ) , endproc )"	565:4:16961:16998	10961513	15	True				
ANR	10961962	CallExpression	"make_op_estack ( & eseproc ( ep ) , endproc )"		10961513	0					
ANR	10961963	Callee	make_op_estack		10961513	0					
ANR	10961964	Identifier	make_op_estack		10961513	0					
ANR	10961965	ArgumentList	& eseproc ( ep )		10961513	1					
ANR	10961966	Argument	& eseproc ( ep )		10961513	0					
ANR	10961967	UnaryOperationExpression	& eseproc ( ep )		10961513	0					
ANR	10961968	UnaryOperator	&		10961513	0					
ANR	10961969	CallExpression	eseproc ( ep )		10961513	1					
ANR	10961970	Callee	eseproc		10961513	0					
ANR	10961971	Identifier	eseproc		10961513	0					
ANR	10961972	ArgumentList	ep		10961513	1					
ANR	10961973	Argument	ep		10961513	0					
ANR	10961974	Identifier	ep		10961513	0					
ANR	10961975	Argument	endproc		10961513	1					
ANR	10961976	Identifier	endproc		10961513	0					
ANR	10961977	ExpressionStatement	"make_istruct ( ep , 0 , penum )"	566:4:17004:17030	10961513	16	True				
ANR	10961978	CallExpression	"make_istruct ( ep , 0 , penum )"		10961513	0					
ANR	10961979	Callee	make_istruct		10961513	0					
ANR	10961980	Identifier	make_istruct		10961513	0					
ANR	10961981	ArgumentList	ep		10961513	1					
ANR	10961982	Argument	ep		10961513	0					
ANR	10961983	Identifier	ep		10961513	0					
ANR	10961984	Argument	0		10961513	1					
ANR	10961985	PrimaryExpression	0		10961513	0					
ANR	10961986	Argument	penum		10961513	2					
ANR	10961987	Identifier	penum		10961513	0					
ANR	10961988	ExpressionStatement	esp = ep	567:4:17036:17044	10961513	17	True				
ANR	10961989	AssignmentExpression	esp = ep		10961513	0		=			
ANR	10961990	Identifier	esp		10961513	0					
ANR	10961991	Identifier	ep		10961513	1					
ANR	10961992	ReturnStatement	return 0 ;	568:4:17050:17058	10961513	18	True				
ANR	10961993	PrimaryExpression	0		10961513	0					
ANR	10961994	ReturnType	int		10961513	1					
ANR	10961995	Identifier	op_show_finish_setup		10961513	2					
ANR	10961996	ParameterList	"i_ctx_t * i_ctx_p , gs_text_enum_t * penum , int npop , op_proc_t endproc"		10961513	3					
ANR	10961997	Parameter	i_ctx_t * i_ctx_p	495:21:13968:13983	10961513	0	True				
ANR	10961998	ParameterType	i_ctx_t *		10961513	0					
ANR	10961999	Identifier	i_ctx_p		10961513	1					
ANR	10962000	Parameter	gs_text_enum_t * penum	495:39:13986:14007	10961513	1	True				
ANR	10962001	ParameterType	gs_text_enum_t *		10961513	0					
ANR	10962002	Identifier	penum		10961513	1					
ANR	10962003	Parameter	int npop	495:63:14010:14017	10961513	2	True				
ANR	10962004	ParameterType	int		10961513	0					
ANR	10962005	Identifier	npop		10961513	1					
ANR	10962006	Parameter	op_proc_t endproc	496:21:14041:14057	10961513	3	True				
ANR	10962007	ParameterType	op_proc_t		10961513	0					
ANR	10962008	Identifier	endproc		10961513	1					
ANR	10962009	CFGEntryNode	ENTRY		10961513		True				
ANR	10962010	CFGExitNode	EXIT		10961513		True				
ANR	10962011	Symbol	op_show_find		10961513						
ANR	10962012	Symbol	igs -> level		10961513						
ANR	10962013	Symbol	TEXT_FROM_SINGLE_GLYPH		10961513						
ANR	10962014	Symbol	penum -> text . data . bytes		10961513						
ANR	10962015	Symbol	esp		10961513						
ANR	10962016	Symbol	gs_error_rangecheck		10961513						
ANR	10962017	Symbol	ref_stack_count_inline		10961513						
ANR	10962018	Symbol	osenum -> current_font		10961513						
ANR	10962019	Symbol	SHOW_IS_ALL_OF		10961513						
ANR	10962020	Symbol	osenum		10961513						
ANR	10962021	Symbol	& esrfont		10961513						
ANR	10962022	Symbol	npop		10961513						
ANR	10962023	Symbol	* * osenum		10961513						
ANR	10962024	Symbol	igs		10961513						
ANR	10962025	Symbol	text . operation		10961513						
ANR	10962026	Symbol	text . data . d_glyph		10961513						
ANR	10962027	Symbol	& d_stack		10961513						
ANR	10962028	Symbol	gs_get_text_params		10961513						
ANR	10962029	Symbol	imemory		10961513						
ANR	10962030	Symbol	text		10961513						
ANR	10962031	Symbol	* osenum -> orig_font		10961513						
ANR	10962032	Symbol	GS_MIN_CID_GLYPH		10961513						
ANR	10962033	Symbol	TEXT_FROM_CHARS		10961513						
ANR	10962034	Symbol	* * penum		10961513						
ANR	10962035	Symbol	TEXT_RETURN_WIDTH		10961513						
ANR	10962036	Symbol	NULL		10961513						
ANR	10962037	Symbol	* penum -> text . data . bytes		10961513						
ANR	10962038	Symbol	penum		10961513						
ANR	10962039	Symbol	ep		10961513						
ANR	10962040	Symbol	gs_text_current_glyph		10961513						
ANR	10962041	Symbol	osenum -> orig_font		10961513						
ANR	10962042	Symbol	ft_CID_TrueType		10961513						
ANR	10962043	Symbol	i_ctx_p		10961513						
ANR	10962044	Symbol	& text		10961513						
ANR	10962045	Symbol	true		10961513						
ANR	10962046	Symbol	igs -> memory		10961513						
ANR	10962047	Symbol	osenum -> orig_font -> FontType		10961513						
ANR	10962048	Symbol	TEXT_FROM_SINGLE_CHAR		10961513						
ANR	10962049	Symbol	snumpush		10961513						
ANR	10962050	Symbol	* osenum		10961513						
ANR	10962051	Symbol	igs -> root_font		10961513						
ANR	10962052	Symbol	& essfont		10961513						
ANR	10962053	Symbol	* igs		10961513						
ANR	10962054	Symbol	text . data		10961513						
ANR	10962055	Symbol	* penum		10961513						
ANR	10962056	Symbol	penum -> text . operation		10961513						
ANR	10962057	Symbol	code		10961513						
ANR	10962058	Symbol	ft_CID_bitmap		10961513						
ANR	10962059	Symbol	penum -> text		10961513						
ANR	10962060	Symbol	ft_CID_encrypted		10961513						
ANR	10962061	Symbol	op_show_cleanup		10961513						
ANR	10962062	Symbol	& esddepth		10961513						
ANR	10962063	Symbol	* penum -> text . data		10961513						
ANR	10962064	Symbol	osenum -> current_font -> FontType		10961513						
ANR	10962065	Symbol	ft		10961513						
ANR	10962066	Symbol	& esodepth		10961513						
ANR	10962067	Symbol	gs_default_same_font		10961513						
ANR	10962068	Symbol	gs_error_typecheck		10961513						
ANR	10962069	Symbol	gs_currentcpsimode		10961513						
ANR	10962070	Symbol	gs_text_current_char		10961513						
ANR	10962071	Symbol	TEXT_FROM_BYTES		10961513						
ANR	10962072	Symbol	TEXT_INTERVENE		10961513						
ANR	10962073	Symbol	gs_text_current_font		10961513						
ANR	10962074	Symbol	fmap_CMap		10961513						
ANR	10962075	Symbol	TEXT_FROM_STRING		10961513						
ANR	10962076	Symbol	TEXT_DO_NONE		10961513						
ANR	10962077	Symbol	osenum -> returned		10961513						
ANR	10962078	Symbol	* igs -> root_font		10961513						
ANR	10962079	Symbol	gs_text_count_chars		10961513						
ANR	10962080	Symbol	igs -> root_font -> FontType		10961513						
ANR	10962081	Symbol	penum -> text . size		10961513						
ANR	10962082	Symbol	penum -> outer_CID		10961513						
ANR	10962083	Symbol	* penum -> text		10961513						
ANR	10962084	Symbol	* * igs		10961513						
ANR	10962085	Symbol	TEXT_FROM_GLYPHS		10961513						
ANR	10962086	Symbol	ft_composite		10961513						
ANR	10962087	Symbol	es_show		10961513						
ANR	10962088	Symbol	( ( const gs_font_type0 * ) osenum -> orig_font ) -> data		10961513						
ANR	10962089	Symbol	( ( const gs_font_type0 * ) osenum -> orig_font ) -> data . FMapType		10961513						
ANR	10962090	Symbol	text . size		10961513						
ANR	10962091	Symbol	osenum -> returned . current_glyph		10961513						
ANR	10962092	Symbol	endproc		10961513						
ANR	10962093	Symbol	glyph		10961513						
ANR	10962094	Symbol	GS_NO_GLYPH		10961513						
ANR	10962095	Symbol	penum -> text . data		10961513						
ANR	10962096	Symbol	ft_user_defined		10961513						
ANR	10962097	Symbol	& o_stack		10961513						
ANR	10962098	Symbol	& eseproc		10961513						
ANR	10962099	Symbol	& esgslevel		10961513						
ANR	10962100	Symbol	* osenum -> current_font		10961513						
ANR	10962101	Symbol	& esslot		10961513						
ANR	10962102	Symbol	finish_show		10961513						
ANR	10962103	Function	op_show_continue	572:0:17116:17325							
ANR	10962104	FunctionDef	op_show_continue (i_ctx_t * i_ctx_p)		10962103	0					
ANR	10962105	CompoundStatement		574:0:17155:17325	10962103	0					
ANR	10962106	IdentifierDeclStatement	"int code = gs_text_update_dev_color ( igs , senum ) ;"	575:4:17161:17208	10962103	0	True				
ANR	10962107	IdentifierDecl	"code = gs_text_update_dev_color ( igs , senum )"		10962103	0					
ANR	10962108	IdentifierDeclType	int		10962103	0					
ANR	10962109	Identifier	code		10962103	1					
ANR	10962110	AssignmentExpression	"code = gs_text_update_dev_color ( igs , senum )"		10962103	2		=			
ANR	10962111	Identifier	code		10962103	0					
ANR	10962112	CallExpression	"gs_text_update_dev_color ( igs , senum )"		10962103	1					
ANR	10962113	Callee	gs_text_update_dev_color		10962103	0					
ANR	10962114	Identifier	gs_text_update_dev_color		10962103	0					
ANR	10962115	ArgumentList	igs		10962103	1					
ANR	10962116	Argument	igs		10962103	0					
ANR	10962117	Identifier	igs		10962103	0					
ANR	10962118	Argument	senum		10962103	1					
ANR	10962119	Identifier	senum		10962103	0					
ANR	10962120	IfStatement	if ( code >= 0 )		10962103	1					
ANR	10962121	Condition	code >= 0	577:8:17219:17227	10962103	0	True				
ANR	10962122	RelationalExpression	code >= 0		10962103	0		>=			
ANR	10962123	Identifier	code		10962103	0					
ANR	10962124	PrimaryExpression	0		10962103	1					
ANR	10962125	ExpressionStatement	"code = op_show_continue_dispatch ( i_ctx_p , 0 , gs_text_process ( senum ) )"	578:8:17238:17306	10962103	1	True				
ANR	10962126	AssignmentExpression	"code = op_show_continue_dispatch ( i_ctx_p , 0 , gs_text_process ( senum ) )"		10962103	0		=			
ANR	10962127	Identifier	code		10962103	0					
ANR	10962128	CallExpression	"op_show_continue_dispatch ( i_ctx_p , 0 , gs_text_process ( senum ) )"		10962103	1					
ANR	10962129	Callee	op_show_continue_dispatch		10962103	0					
ANR	10962130	Identifier	op_show_continue_dispatch		10962103	0					
ANR	10962131	ArgumentList	i_ctx_p		10962103	1					
ANR	10962132	Argument	i_ctx_p		10962103	0					
ANR	10962133	Identifier	i_ctx_p		10962103	0					
ANR	10962134	Argument	0		10962103	1					
ANR	10962135	PrimaryExpression	0		10962103	0					
ANR	10962136	Argument	gs_text_process ( senum )		10962103	2					
ANR	10962137	CallExpression	gs_text_process ( senum )		10962103	0					
ANR	10962138	Callee	gs_text_process		10962103	0					
ANR	10962139	Identifier	gs_text_process		10962103	0					
ANR	10962140	ArgumentList	senum		10962103	1					
ANR	10962141	Argument	senum		10962103	0					
ANR	10962142	Identifier	senum		10962103	0					
ANR	10962143	ReturnStatement	return code ;	579:4:17312:17323	10962103	2	True				
ANR	10962144	Identifier	code		10962103	0					
ANR	10962145	ReturnType	int		10962103	1					
ANR	10962146	Identifier	op_show_continue		10962103	2					
ANR	10962147	ParameterList	i_ctx_t * i_ctx_p		10962103	3					
ANR	10962148	Parameter	i_ctx_t * i_ctx_p	573:17:17137:17152	10962103	0	True				
ANR	10962149	ParameterType	i_ctx_t *		10962103	0					
ANR	10962150	Identifier	i_ctx_p		10962103	1					
ANR	10962151	CFGEntryNode	ENTRY		10962103		True				
ANR	10962152	CFGExitNode	EXIT		10962103		True				
ANR	10962153	Symbol	senum		10962103						
ANR	10962154	Symbol	gs_text_update_dev_color		10962103						
ANR	10962155	Symbol	code		10962103						
ANR	10962156	Symbol	igs		10962103						
ANR	10962157	Symbol	i_ctx_p		10962103						
ANR	10962158	Symbol	op_show_continue_dispatch		10962103						
ANR	10962159	Symbol	gs_text_process		10962103						
ANR	10962160	Function	op_show_continue_pop	581:0:17327:17459							
ANR	10962161	FunctionDef	"op_show_continue_pop (i_ctx_t * i_ctx_p , int npop)"		10962160	0					
ANR	10962162	CompoundStatement		583:0:17380:17459	10962160	0					
ANR	10962163	ReturnStatement	"return op_show_continue_dispatch ( i_ctx_p , npop , gs_text_process ( senum ) ) ;"	584:4:17386:17457	10962160	0	True				
ANR	10962164	CallExpression	"op_show_continue_dispatch ( i_ctx_p , npop , gs_text_process ( senum ) )"		10962160	0					
ANR	10962165	Callee	op_show_continue_dispatch		10962160	0					
ANR	10962166	Identifier	op_show_continue_dispatch		10962160	0					
ANR	10962167	ArgumentList	i_ctx_p		10962160	1					
ANR	10962168	Argument	i_ctx_p		10962160	0					
ANR	10962169	Identifier	i_ctx_p		10962160	0					
ANR	10962170	Argument	npop		10962160	1					
ANR	10962171	Identifier	npop		10962160	0					
ANR	10962172	Argument	gs_text_process ( senum )		10962160	2					
ANR	10962173	CallExpression	gs_text_process ( senum )		10962160	0					
ANR	10962174	Callee	gs_text_process		10962160	0					
ANR	10962175	Identifier	gs_text_process		10962160	0					
ANR	10962176	ArgumentList	senum		10962160	1					
ANR	10962177	Argument	senum		10962160	0					
ANR	10962178	Identifier	senum		10962160	0					
ANR	10962179	ReturnType	int		10962160	1					
ANR	10962180	Identifier	op_show_continue_pop		10962160	2					
ANR	10962181	ParameterList	"i_ctx_t * i_ctx_p , int npop"		10962160	3					
ANR	10962182	Parameter	i_ctx_t * i_ctx_p	582:21:17352:17367	10962160	0	True				
ANR	10962183	ParameterType	i_ctx_t *		10962160	0					
ANR	10962184	Identifier	i_ctx_p		10962160	1					
ANR	10962185	Parameter	int npop	582:39:17370:17377	10962160	1	True				
ANR	10962186	ParameterType	int		10962160	0					
ANR	10962187	Identifier	npop		10962160	1					
ANR	10962188	CFGEntryNode	ENTRY		10962160		True				
ANR	10962189	CFGExitNode	EXIT		10962160		True				
ANR	10962190	Symbol	npop		10962160						
ANR	10962191	Symbol	senum		10962160						
ANR	10962192	Symbol	i_ctx_p		10962160						
ANR	10962193	Symbol	op_show_continue_dispatch		10962160						
ANR	10962194	Symbol	gs_text_process		10962160						
ANR	10962195	Function	op_show_continue_dispatch	592:0:17732:24114							
ANR	10962196	FunctionDef	"op_show_continue_dispatch (i_ctx_t * i_ctx_p , int npop , int code)"		10962195	0					
ANR	10962197	CompoundStatement		594:0:17800:24114	10962195	0					
ANR	10962198	IdentifierDeclStatement	os_ptr op = osp - npop ;	595:4:17806:17828	10962195	0	True				
ANR	10962199	IdentifierDecl	op = osp - npop		10962195	0					
ANR	10962200	IdentifierDeclType	os_ptr		10962195	0					
ANR	10962201	Identifier	op		10962195	1					
ANR	10962202	AssignmentExpression	op = osp - npop		10962195	2		=			
ANR	10962203	Identifier	op		10962195	0					
ANR	10962204	AdditiveExpression	osp - npop		10962195	1		-			
ANR	10962205	Identifier	osp		10962195	0					
ANR	10962206	Identifier	npop		10962195	1					
ANR	10962207	IdentifierDeclStatement	gs_text_enum_t * penum = senum ;	596:4:17834:17863	10962195	1	True				
ANR	10962208	IdentifierDecl	* penum = senum		10962195	0					
ANR	10962209	IdentifierDeclType	gs_text_enum_t *		10962195	0					
ANR	10962210	Identifier	penum		10962195	1					
ANR	10962211	AssignmentExpression	* penum = senum		10962195	2		=			
ANR	10962212	Identifier	senum		10962195	0					
ANR	10962213	Identifier	senum		10962195	1					
ANR	10962214	SwitchStatement	switch ( code )		10962195	2					
ANR	10962215	Condition	code	598:12:17878:17881	10962195	0	True				
ANR	10962216	Identifier	code		10962195	0					
ANR	10962217	CompoundStatement		5:18:83:83	10962195	1					
ANR	10962218	Label	case 0 :	599:8:17894:17900	10962195	0	True				
ANR	10962219	CompoundStatement		7:12:131:152	10962195	1					
ANR	10962220	IdentifierDeclStatement	os_ptr save_osp = osp ;	600:12:17932:17953	10962195	0	True				
ANR	10962221	IdentifierDecl	save_osp = osp		10962195	0					
ANR	10962222	IdentifierDeclType	os_ptr		10962195	0					
ANR	10962223	Identifier	save_osp		10962195	1					
ANR	10962224	AssignmentExpression	save_osp = osp		10962195	2		=			
ANR	10962225	Identifier	osp		10962195	0					
ANR	10962226	Identifier	osp		10962195	1					
ANR	10962227	ExpressionStatement	osp = op	602:12:17968:17976	10962195	1	True				
ANR	10962228	AssignmentExpression	osp = op		10962195	0		=			
ANR	10962229	Identifier	osp		10962195	0					
ANR	10962230	Identifier	op		10962195	1					
ANR	10962231	ExpressionStatement	code = ( * real_opproc ( & seproc ) ) ( i_ctx_p )	603:12:17990:18030	10962195	2	True				
ANR	10962232	AssignmentExpression	code = ( * real_opproc ( & seproc ) ) ( i_ctx_p )		10962195	0		=			
ANR	10962233	Identifier	code		10962195	0					
ANR	10962234	CallExpression	( * real_opproc ( & seproc ) ) ( i_ctx_p )		10962195	1					
ANR	10962235	Callee	* real_opproc ( & seproc )		10962195	0					
ANR	10962236	UnaryOperationExpression	* real_opproc ( & seproc )		10962195	0					
ANR	10962237	UnaryOperator	*		10962195	0					
ANR	10962238	CallExpression	real_opproc ( & seproc )		10962195	1					
ANR	10962239	Callee	real_opproc		10962195	0					
ANR	10962240	Identifier	real_opproc		10962195	0					
ANR	10962241	ArgumentList	& seproc		10962195	1					
ANR	10962242	Argument	& seproc		10962195	0					
ANR	10962243	UnaryOperationExpression	& seproc		10962195	0					
ANR	10962244	UnaryOperator	&		10962195	0					
ANR	10962245	Identifier	seproc		10962195	1					
ANR	10962246	ArgumentList	i_ctx_p		10962195	1					
ANR	10962247	Argument	i_ctx_p		10962195	0					
ANR	10962248	Identifier	i_ctx_p		10962195	0					
ANR	10962249	ExpressionStatement	"op_show_free ( i_ctx_p , code )"	604:12:18044:18071	10962195	3	True				
ANR	10962250	CallExpression	"op_show_free ( i_ctx_p , code )"		10962195	0					
ANR	10962251	Callee	op_show_free		10962195	0					
ANR	10962252	Identifier	op_show_free		10962195	0					
ANR	10962253	ArgumentList	i_ctx_p		10962195	1					
ANR	10962254	Argument	i_ctx_p		10962195	0					
ANR	10962255	Identifier	i_ctx_p		10962195	0					
ANR	10962256	Argument	code		10962195	1					
ANR	10962257	Identifier	code		10962195	0					
ANR	10962258	IfStatement	if ( code < 0 )		10962195	4					
ANR	10962259	Condition	code < 0	605:16:18089:18096	10962195	0	True				
ANR	10962260	RelationalExpression	code < 0		10962195	0		<			
ANR	10962261	Identifier	code		10962195	0					
ANR	10962262	PrimaryExpression	0		10962195	1					
ANR	10962263	CompoundStatement		12:26:298:298	10962195	1					
ANR	10962264	ExpressionStatement	osp = save_osp	606:16:18117:18131	10962195	0	True				
ANR	10962265	AssignmentExpression	osp = save_osp		10962195	0		=			
ANR	10962266	Identifier	osp		10962195	0					
ANR	10962267	Identifier	save_osp		10962195	1					
ANR	10962268	ReturnStatement	return code ;	607:16:18149:18160	10962195	1	True				
ANR	10962269	Identifier	code		10962195	0					
ANR	10962270	ReturnStatement	return o_pop_estack ;	609:12:18188:18207	10962195	5	True				
ANR	10962271	Identifier	o_pop_estack		10962195	0					
ANR	10962272	Label	case TEXT_PROCESS_INTERVENE :	611:8:18227:18254	10962195	2	True				
ANR	10962273	Identifier	TEXT_PROCESS_INTERVENE		10962195	0					
ANR	10962274	CompoundStatement		19:12:469:488	10962195	3					
ANR	10962275	IdentifierDeclStatement	ref * pslot = & sslot ;	612:12:18270:18289	10962195	0	True				
ANR	10962276	IdentifierDecl	* pslot = & sslot		10962195	0					
ANR	10962277	IdentifierDeclType	ref *		10962195	0					
ANR	10962278	Identifier	pslot		10962195	1					
ANR	10962279	AssignmentExpression	* pslot = & sslot		10962195	2		=			
ANR	10962280	Identifier	pslot		10962195	0					
ANR	10962281	UnaryOperationExpression	& sslot		10962195	1					
ANR	10962282	UnaryOperator	&		10962195	0					
ANR	10962283	Identifier	sslot		10962195	1					
ANR	10962284	ExpressionStatement	push ( 2 )	614:12:18330:18337	10962195	1	True				
ANR	10962285	CallExpression	push ( 2 )		10962195	0					
ANR	10962286	Callee	push		10962195	0					
ANR	10962287	Identifier	push		10962195	0					
ANR	10962288	ArgumentList	2		10962195	1					
ANR	10962289	Argument	2		10962195	0					
ANR	10962290	PrimaryExpression	2		10962195	0					
ANR	10962291	ExpressionStatement	"make_int ( op - 1 , gs_text_current_char ( penum ) )"	615:12:18351:18396	10962195	2	True				
ANR	10962292	CallExpression	"make_int ( op - 1 , gs_text_current_char ( penum ) )"		10962195	0					
ANR	10962293	Callee	make_int		10962195	0					
ANR	10962294	Identifier	make_int		10962195	0					
ANR	10962295	ArgumentList	op - 1		10962195	1					
ANR	10962296	Argument	op - 1		10962195	0					
ANR	10962297	AdditiveExpression	op - 1		10962195	0		-			
ANR	10962298	Identifier	op		10962195	0					
ANR	10962299	PrimaryExpression	1		10962195	1					
ANR	10962300	Argument	gs_text_current_char ( penum )		10962195	1					
ANR	10962301	CallExpression	gs_text_current_char ( penum )		10962195	0					
ANR	10962302	Callee	gs_text_current_char		10962195	0					
ANR	10962303	Identifier	gs_text_current_char		10962195	0					
ANR	10962304	ArgumentList	penum		10962195	1					
ANR	10962305	Argument	penum		10962195	0					
ANR	10962306	Identifier	penum		10962195	0					
ANR	10962307	ExpressionStatement	"make_int ( op , gs_text_next_char ( penum ) )"	616:12:18430:18468	10962195	3	True				
ANR	10962308	CallExpression	"make_int ( op , gs_text_next_char ( penum ) )"		10962195	0					
ANR	10962309	Callee	make_int		10962195	0					
ANR	10962310	Identifier	make_int		10962195	0					
ANR	10962311	ArgumentList	op		10962195	1					
ANR	10962312	Argument	op		10962195	0					
ANR	10962313	Identifier	op		10962195	0					
ANR	10962314	Argument	gs_text_next_char ( penum )		10962195	1					
ANR	10962315	CallExpression	gs_text_next_char ( penum )		10962195	0					
ANR	10962316	Callee	gs_text_next_char		10962195	0					
ANR	10962317	Identifier	gs_text_next_char		10962195	0					
ANR	10962318	ArgumentList	penum		10962195	1					
ANR	10962319	Argument	penum		10962195	0					
ANR	10962320	Identifier	penum		10962195	0					
ANR	10962321	ExpressionStatement	push_op_estack ( op_show_continue )	617:12:18482:18514	10962195	4	True				
ANR	10962322	CallExpression	push_op_estack ( op_show_continue )		10962195	0					
ANR	10962323	Callee	push_op_estack		10962195	0					
ANR	10962324	Identifier	push_op_estack		10962195	0					
ANR	10962325	ArgumentList	op_show_continue		10962195	1					
ANR	10962326	Argument	op_show_continue		10962195	0					
ANR	10962327	Identifier	op_show_continue		10962195	0					
ANR	10962328	ExpressionStatement	* ++ esp = * pslot	618:12:18557:18572	10962195	5	True				
ANR	10962329	AssignmentExpression	* ++ esp = * pslot		10962195	0		=			
ANR	10962330	UnaryOperationExpression	* ++ esp		10962195	0					
ANR	10962331	UnaryOperator	*		10962195	0					
ANR	10962332	UnaryExpression	++ esp		10962195	1					
ANR	10962333	IncDec	++		10962195	0					
ANR	10962334	Identifier	esp		10962195	1					
ANR	10962335	UnaryOperationExpression	* pslot		10962195	1					
ANR	10962336	UnaryOperator	*		10962195	0					
ANR	10962337	Identifier	pslot		10962195	1					
ANR	10962338	ReturnStatement	return o_push_estack ;	619:12:18610:18630	10962195	6	True				
ANR	10962339	Identifier	o_push_estack		10962195	0					
ANR	10962340	Label	case TEXT_PROCESS_RENDER :	621:8:18650:18674	10962195	4	True				
ANR	10962341	Identifier	TEXT_PROCESS_RENDER		10962195	0					
ANR	10962342	CompoundStatement		32:12:1045:1090	10962195	5					
ANR	10962343	IdentifierDeclStatement	gs_font * pfont = gs_currentfont ( igs ) ;	622:12:18690:18726	10962195	0	True				
ANR	10962344	IdentifierDecl	* pfont = gs_currentfont ( igs )		10962195	0					
ANR	10962345	IdentifierDeclType	gs_font *		10962195	0					
ANR	10962346	Identifier	pfont		10962195	1					
ANR	10962347	AssignmentExpression	* pfont = gs_currentfont ( igs )		10962195	2		=			
ANR	10962348	Identifier	pfont		10962195	0					
ANR	10962349	CallExpression	gs_currentfont ( igs )		10962195	1					
ANR	10962350	Callee	gs_currentfont		10962195	0					
ANR	10962351	Identifier	gs_currentfont		10962195	0					
ANR	10962352	ArgumentList	igs		10962195	1					
ANR	10962353	Argument	igs		10962195	0					
ANR	10962354	Identifier	igs		10962195	0					
ANR	10962355	IdentifierDeclStatement	font_data * pfdata = pfont_data ( pfont ) ;	623:12:18740:18777	10962195	1	True				
ANR	10962356	IdentifierDecl	* pfdata = pfont_data ( pfont )		10962195	0					
ANR	10962357	IdentifierDeclType	font_data *		10962195	0					
ANR	10962358	Identifier	pfdata		10962195	1					
ANR	10962359	AssignmentExpression	* pfdata = pfont_data ( pfont )		10962195	2		=			
ANR	10962360	Identifier	pfdata		10962195	0					
ANR	10962361	CallExpression	pfont_data ( pfont )		10962195	1					
ANR	10962362	Callee	pfont_data		10962195	0					
ANR	10962363	Identifier	pfont_data		10962195	0					
ANR	10962364	ArgumentList	pfont		10962195	1					
ANR	10962365	Argument	pfont		10962195	0					
ANR	10962366	Identifier	pfont		10962195	0					
ANR	10962367	IdentifierDeclStatement	gs_char chr = gs_text_current_char ( penum ) ;	624:12:18791:18832	10962195	2	True				
ANR	10962368	IdentifierDecl	chr = gs_text_current_char ( penum )		10962195	0					
ANR	10962369	IdentifierDeclType	gs_char		10962195	0					
ANR	10962370	Identifier	chr		10962195	1					
ANR	10962371	AssignmentExpression	chr = gs_text_current_char ( penum )		10962195	2		=			
ANR	10962372	Identifier	chr		10962195	0					
ANR	10962373	CallExpression	gs_text_current_char ( penum )		10962195	1					
ANR	10962374	Callee	gs_text_current_char		10962195	0					
ANR	10962375	Identifier	gs_text_current_char		10962195	0					
ANR	10962376	ArgumentList	penum		10962195	1					
ANR	10962377	Argument	penum		10962195	0					
ANR	10962378	Identifier	penum		10962195	0					
ANR	10962379	IdentifierDeclStatement	gs_glyph glyph = gs_text_current_glyph ( penum ) ;	625:12:18846:18891	10962195	3	True				
ANR	10962380	IdentifierDecl	glyph = gs_text_current_glyph ( penum )		10962195	0					
ANR	10962381	IdentifierDeclType	gs_glyph		10962195	0					
ANR	10962382	Identifier	glyph		10962195	1					
ANR	10962383	AssignmentExpression	glyph = gs_text_current_glyph ( penum )		10962195	2		=			
ANR	10962384	Identifier	glyph		10962195	0					
ANR	10962385	CallExpression	gs_text_current_glyph ( penum )		10962195	1					
ANR	10962386	Callee	gs_text_current_glyph		10962195	0					
ANR	10962387	Identifier	gs_text_current_glyph		10962195	0					
ANR	10962388	ArgumentList	penum		10962195	1					
ANR	10962389	Argument	penum		10962195	0					
ANR	10962390	Identifier	penum		10962195	0					
ANR	10962391	ExpressionStatement	push ( 2 )	627:12:18906:18913	10962195	4	True				
ANR	10962392	CallExpression	push ( 2 )		10962195	0					
ANR	10962393	Callee	push		10962195	0					
ANR	10962394	Identifier	push		10962195	0					
ANR	10962395	ArgumentList	2		10962195	1					
ANR	10962396	Argument	2		10962195	0					
ANR	10962397	PrimaryExpression	2		10962195	0					
ANR	10962398	ExpressionStatement	op [ - 1 ] = pfdata -> dict	628:12:18927:18948	10962195	5	True				
ANR	10962399	AssignmentExpression	op [ - 1 ] = pfdata -> dict		10962195	0		=			
ANR	10962400	ArrayIndexing	op [ - 1 ]		10962195	0					
ANR	10962401	Identifier	op		10962195	0					
ANR	10962402	UnaryOperationExpression	- 1		10962195	1					
ANR	10962403	UnaryOperator	-		10962195	0					
ANR	10962404	PrimaryExpression	1		10962195	1					
ANR	10962405	PtrMemberAccess	pfdata -> dict		10962195	1					
ANR	10962406	Identifier	pfdata		10962195	0					
ANR	10962407	Identifier	dict		10962195	1					
ANR	10962408	IfStatement	if ( pfont -> FontType == ft_user_defined )		10962195	6					
ANR	10962409	Condition	pfont -> FontType == ft_user_defined	639:16:19599:19632	10962195	0	True				
ANR	10962410	EqualityExpression	pfont -> FontType == ft_user_defined		10962195	0		==			
ANR	10962411	PtrMemberAccess	pfont -> FontType		10962195	0					
ANR	10962412	Identifier	pfont		10962195	0					
ANR	10962413	Identifier	FontType		10962195	1					
ANR	10962414	Identifier	ft_user_defined		10962195	1					
ANR	10962415	CompoundStatement		46:52:1834:1834	10962195	1					
ANR	10962416	IfStatement	"if ( level2_enabled && ! r_has_type ( & pfdata -> BuildGlyph , t_null ) && glyph != GS_NO_GLYPH )"		10962195	0					
ANR	10962417	Condition	"level2_enabled && ! r_has_type ( & pfdata -> BuildGlyph , t_null ) && glyph != GS_NO_GLYPH"	641:20:19711:19832	10962195	0	True				
ANR	10962418	AndExpression	"level2_enabled && ! r_has_type ( & pfdata -> BuildGlyph , t_null ) && glyph != GS_NO_GLYPH"		10962195	0		&&			
ANR	10962419	Identifier	level2_enabled		10962195	0					
ANR	10962420	AndExpression	"! r_has_type ( & pfdata -> BuildGlyph , t_null ) && glyph != GS_NO_GLYPH"		10962195	1		&&			
ANR	10962421	UnaryOperationExpression	"! r_has_type ( & pfdata -> BuildGlyph , t_null )"		10962195	0					
ANR	10962422	UnaryOperator	!		10962195	0					
ANR	10962423	CallExpression	"r_has_type ( & pfdata -> BuildGlyph , t_null )"		10962195	1					
ANR	10962424	Callee	r_has_type		10962195	0					
ANR	10962425	Identifier	r_has_type		10962195	0					
ANR	10962426	ArgumentList	& pfdata -> BuildGlyph		10962195	1					
ANR	10962427	Argument	& pfdata -> BuildGlyph		10962195	0					
ANR	10962428	UnaryOperationExpression	& pfdata -> BuildGlyph		10962195	0					
ANR	10962429	UnaryOperator	&		10962195	0					
ANR	10962430	PtrMemberAccess	pfdata -> BuildGlyph		10962195	1					
ANR	10962431	Identifier	pfdata		10962195	0					
ANR	10962432	Identifier	BuildGlyph		10962195	1					
ANR	10962433	Argument	t_null		10962195	1					
ANR	10962434	Identifier	t_null		10962195	0					
ANR	10962435	EqualityExpression	glyph != GS_NO_GLYPH		10962195	1		!=			
ANR	10962436	Identifier	glyph		10962195	0					
ANR	10962437	Identifier	GS_NO_GLYPH		10962195	1					
ANR	10962438	CompoundStatement		51:22:2055:2055	10962195	1					
ANR	10962439	ExpressionStatement	"glyph_ref ( imemory , glyph , op )"	645:20:19878:19907	10962195	0	True				
ANR	10962440	CallExpression	"glyph_ref ( imemory , glyph , op )"		10962195	0					
ANR	10962441	Callee	glyph_ref		10962195	0					
ANR	10962442	Identifier	glyph_ref		10962195	0					
ANR	10962443	ArgumentList	imemory		10962195	1					
ANR	10962444	Argument	imemory		10962195	0					
ANR	10962445	Identifier	imemory		10962195	0					
ANR	10962446	Argument	glyph		10962195	1					
ANR	10962447	Identifier	glyph		10962195	0					
ANR	10962448	Argument	op		10962195	2					
ANR	10962449	Identifier	op		10962195	0					
ANR	10962450	ExpressionStatement	esp [ 2 ] = pfdata -> BuildGlyph	646:20:19929:19956	10962195	1	True				
ANR	10962451	AssignmentExpression	esp [ 2 ] = pfdata -> BuildGlyph		10962195	0		=			
ANR	10962452	ArrayIndexing	esp [ 2 ]		10962195	0					
ANR	10962453	Identifier	esp		10962195	0					
ANR	10962454	PrimaryExpression	2		10962195	1					
ANR	10962455	PtrMemberAccess	pfdata -> BuildGlyph		10962195	1					
ANR	10962456	Identifier	pfdata		10962195	0					
ANR	10962457	Identifier	BuildGlyph		10962195	1					
ANR	10962458	ElseStatement	else		10962195	0					
ANR	10962459	IfStatement	"if ( r_has_type ( & pfdata -> BuildChar , t_null ) )"		10962195	0					
ANR	10962460	Condition	"r_has_type ( & pfdata -> BuildChar , t_null )"	647:27:19985:20022	10962195	0	True				
ANR	10962461	CallExpression	"r_has_type ( & pfdata -> BuildChar , t_null )"		10962195	0					
ANR	10962462	Callee	r_has_type		10962195	0					
ANR	10962463	Identifier	r_has_type		10962195	0					
ANR	10962464	ArgumentList	& pfdata -> BuildChar		10962195	1					
ANR	10962465	Argument	& pfdata -> BuildChar		10962195	0					
ANR	10962466	UnaryOperationExpression	& pfdata -> BuildChar		10962195	0					
ANR	10962467	UnaryOperator	&		10962195	0					
ANR	10962468	PtrMemberAccess	pfdata -> BuildChar		10962195	1					
ANR	10962469	Identifier	pfdata		10962195	0					
ANR	10962470	Identifier	BuildChar		10962195	1					
ANR	10962471	Argument	t_null		10962195	1					
ANR	10962472	Identifier	t_null		10962195	0					
ANR	10962473	GotoStatement	goto err ;	648:20:20045:20053	10962195	1	True				
ANR	10962474	Identifier	err		10962195	0					
ANR	10962475	ElseStatement	else		10962195	0					
ANR	10962476	IfStatement	if ( chr == gs_no_char )		10962195	0					
ANR	10962477	Condition	chr == gs_no_char	649:25:20080:20096	10962195	0	True				
ANR	10962478	EqualityExpression	chr == gs_no_char		10962195	0		==			
ANR	10962479	Identifier	chr		10962195	0					
ANR	10962480	Identifier	gs_no_char		10962195	1					
ANR	10962481	CompoundStatement		60:20:2460:2500	10962195	1					
ANR	10962482	IdentifierDeclStatement	ref gref ;	652:20:20231:20239	10962195	0	True				
ANR	10962483	IdentifierDecl	gref		10962195	0					
ANR	10962484	IdentifierDeclType	ref		10962195	0					
ANR	10962485	Identifier	gref		10962195	1					
ANR	10962486	IdentifierDeclStatement	const ref * pencoding = & pfdata -> Encoding ;	653:20:20261:20301	10962195	1	True				
ANR	10962487	IdentifierDecl	* pencoding = & pfdata -> Encoding		10962195	0					
ANR	10962488	IdentifierDeclType	const ref *		10962195	0					
ANR	10962489	Identifier	pencoding		10962195	1					
ANR	10962490	AssignmentExpression	* pencoding = & pfdata -> Encoding		10962195	2		=			
ANR	10962491	Identifier	pencoding		10962195	0					
ANR	10962492	UnaryOperationExpression	& pfdata -> Encoding		10962195	1					
ANR	10962493	UnaryOperator	&		10962195	0					
ANR	10962494	PtrMemberAccess	pfdata -> Encoding		10962195	1					
ANR	10962495	Identifier	pfdata		10962195	0					
ANR	10962496	Identifier	Encoding		10962195	1					
ANR	10962497	ExpressionStatement	"glyph_ref ( imemory , glyph , & gref )"	655:20:20324:20356	10962195	2	True				
ANR	10962498	CallExpression	"glyph_ref ( imemory , glyph , & gref )"		10962195	0					
ANR	10962499	Callee	glyph_ref		10962195	0					
ANR	10962500	Identifier	glyph_ref		10962195	0					
ANR	10962501	ArgumentList	imemory		10962195	1					
ANR	10962502	Argument	imemory		10962195	0					
ANR	10962503	Identifier	imemory		10962195	0					
ANR	10962504	Argument	glyph		10962195	1					
ANR	10962505	Identifier	glyph		10962195	0					
ANR	10962506	Argument	& gref		10962195	2					
ANR	10962507	UnaryOperationExpression	& gref		10962195	0					
ANR	10962508	UnaryOperator	&		10962195	0					
ANR	10962509	Identifier	gref		10962195	1					
ANR	10962510	IfStatement	"if ( ! map_glyph_to_char ( imemory , & gref , pencoding , ( ref * ) op ) )"		10962195	3					
ANR	10962511	Condition	"! map_glyph_to_char ( imemory , & gref , pencoding , ( ref * ) op )"	656:24:20382:20481	10962195	0	True				
ANR	10962512	UnaryOperationExpression	"! map_glyph_to_char ( imemory , & gref , pencoding , ( ref * ) op )"		10962195	0					
ANR	10962513	UnaryOperator	!		10962195	0					
ANR	10962514	CallExpression	"map_glyph_to_char ( imemory , & gref , pencoding , ( ref * ) op )"		10962195	1					
ANR	10962515	Callee	map_glyph_to_char		10962195	0					
ANR	10962516	Identifier	map_glyph_to_char		10962195	0					
ANR	10962517	ArgumentList	imemory		10962195	1					
ANR	10962518	Argument	imemory		10962195	0					
ANR	10962519	Identifier	imemory		10962195	0					
ANR	10962520	Argument	& gref		10962195	1					
ANR	10962521	UnaryOperationExpression	& gref		10962195	0					
ANR	10962522	UnaryOperator	&		10962195	0					
ANR	10962523	Identifier	gref		10962195	1					
ANR	10962524	Argument	pencoding		10962195	2					
ANR	10962525	Identifier	pencoding		10962195	0					
ANR	10962526	Argument	( ref * ) op		10962195	3					
ANR	10962527	CastExpression	( ref * ) op		10962195	0					
ANR	10962528	CastTarget	ref *		10962195	0					
ANR	10962529	Identifier	op		10962195	1					
ANR	10962530	CompoundStatement		65:26:2708:2708	10962195	1					
ANR	10962531	ExpressionStatement	"name_enter_string ( imemory , "".notdef"" , & gref )"	659:24:20564:20608	10962195	0	True				
ANR	10962532	CallExpression	"name_enter_string ( imemory , "".notdef"" , & gref )"		10962195	0					
ANR	10962533	Callee	name_enter_string		10962195	0					
ANR	10962534	Identifier	name_enter_string		10962195	0					
ANR	10962535	ArgumentList	imemory		10962195	1					
ANR	10962536	Argument	imemory		10962195	0					
ANR	10962537	Identifier	imemory		10962195	0					
ANR	10962538	Argument	""".notdef"""		10962195	1					
ANR	10962539	PrimaryExpression	""".notdef"""		10962195	0					
ANR	10962540	Argument	& gref		10962195	2					
ANR	10962541	UnaryOperationExpression	& gref		10962195	0					
ANR	10962542	UnaryOperator	&		10962195	0					
ANR	10962543	Identifier	gref		10962195	1					
ANR	10962544	IfStatement	"if ( ! map_glyph_to_char ( imemory , & gref , pencoding , ( ref * ) op ) )"		10962195	1					
ANR	10962545	Condition	"! map_glyph_to_char ( imemory , & gref , pencoding , ( ref * ) op )"	660:28:20638:20788	10962195	0	True				
ANR	10962546	UnaryOperationExpression	"! map_glyph_to_char ( imemory , & gref , pencoding , ( ref * ) op )"		10962195	0					
ANR	10962547	UnaryOperator	!		10962195	0					
ANR	10962548	CallExpression	"map_glyph_to_char ( imemory , & gref , pencoding , ( ref * ) op )"		10962195	1					
ANR	10962549	Callee	map_glyph_to_char		10962195	0					
ANR	10962550	Identifier	map_glyph_to_char		10962195	0					
ANR	10962551	ArgumentList	imemory		10962195	1					
ANR	10962552	Argument	imemory		10962195	0					
ANR	10962553	Identifier	imemory		10962195	0					
ANR	10962554	Argument	& gref		10962195	1					
ANR	10962555	UnaryOperationExpression	& gref		10962195	0					
ANR	10962556	UnaryOperator	&		10962195	0					
ANR	10962557	Identifier	gref		10962195	1					
ANR	10962558	Argument	pencoding		10962195	2					
ANR	10962559	Identifier	pencoding		10962195	0					
ANR	10962560	Argument	( ref * ) op		10962195	3					
ANR	10962561	CastExpression	( ref * ) op		10962195	0					
ANR	10962562	CastTarget	ref *		10962195	0					
ANR	10962563	Identifier	op		10962195	1					
ANR	10962564	GotoStatement	goto err ;	664:28:20848:20856	10962195	1	True				
ANR	10962565	Identifier	err		10962195	0					
ANR	10962566	ExpressionStatement	esp [ 2 ] = pfdata -> BuildChar	666:20:20900:20926	10962195	4	True				
ANR	10962567	AssignmentExpression	esp [ 2 ] = pfdata -> BuildChar		10962195	0		=			
ANR	10962568	ArrayIndexing	esp [ 2 ]		10962195	0					
ANR	10962569	Identifier	esp		10962195	0					
ANR	10962570	PrimaryExpression	2		10962195	1					
ANR	10962571	PtrMemberAccess	pfdata -> BuildChar		10962195	1					
ANR	10962572	Identifier	pfdata		10962195	0					
ANR	10962573	Identifier	BuildChar		10962195	1					
ANR	10962574	ElseStatement	else		10962195	0					
ANR	10962575	CompoundStatement		74:23:3150:3150	10962195	0					
ANR	10962576	ExpressionStatement	"make_int ( op , chr & 0xff )"	668:20:20973:20997	10962195	0	True				
ANR	10962577	CallExpression	"make_int ( op , chr & 0xff )"		10962195	0					
ANR	10962578	Callee	make_int		10962195	0					
ANR	10962579	Identifier	make_int		10962195	0					
ANR	10962580	ArgumentList	op		10962195	1					
ANR	10962581	Argument	op		10962195	0					
ANR	10962582	Identifier	op		10962195	0					
ANR	10962583	Argument	chr & 0xff		10962195	1					
ANR	10962584	BitAndExpression	chr & 0xff		10962195	0		&			
ANR	10962585	Identifier	chr		10962195	0					
ANR	10962586	PrimaryExpression	0xff		10962195	1					
ANR	10962587	ExpressionStatement	esp [ 2 ] = pfdata -> BuildChar	669:20:21019:21045	10962195	1	True				
ANR	10962588	AssignmentExpression	esp [ 2 ] = pfdata -> BuildChar		10962195	0		=			
ANR	10962589	ArrayIndexing	esp [ 2 ]		10962195	0					
ANR	10962590	Identifier	esp		10962195	0					
ANR	10962591	PrimaryExpression	2		10962195	1					
ANR	10962592	PtrMemberAccess	pfdata -> BuildChar		10962195	1					
ANR	10962593	Identifier	pfdata		10962195	0					
ANR	10962594	Identifier	BuildChar		10962195	1					
ANR	10962595	ElseStatement	else		10962195	0					
ANR	10962596	CompoundStatement		85:16:3605:3619	10962195	0					
ANR	10962597	IdentifierDeclStatement	"ref eref , gref ;"	678:16:21406:21420	10962195	0	True				
ANR	10962598	IdentifierDecl	eref		10962195	0					
ANR	10962599	IdentifierDeclType	ref		10962195	0					
ANR	10962600	Identifier	eref		10962195	1					
ANR	10962601	IdentifierDecl	gref		10962195	1					
ANR	10962602	IdentifierDeclType	ref		10962195	0					
ANR	10962603	Identifier	gref		10962195	1					
ANR	10962604	IfStatement	"if ( chr != gs_no_char && ! r_has_type ( & pfdata -> BuildChar , t_null ) && ( glyph == GS_NO_GLYPH || ( ! r_has_type ( & pfdata -> Encoding , t_null ) && array_get ( imemory , & pfdata -> Encoding , ( long ) ( chr & 0xff ) , & eref ) >= 0 && ( glyph_ref ( imemory , glyph , & gref ) , obj_eq ( imemory , & gref , & eref ) ) ) ) )"		10962195	1					
ANR	10962605	Condition	"chr != gs_no_char && ! r_has_type ( & pfdata -> BuildChar , t_null ) && ( glyph == GS_NO_GLYPH || ( ! r_has_type ( & pfdata -> Encoding , t_null ) && array_get ( imemory , & pfdata -> Encoding , ( long ) ( chr & 0xff ) , & eref ) >= 0 && ( glyph_ref ( imemory , glyph , & gref ) , obj_eq ( imemory , & gref , & eref ) ) ) )"	680:20:21443:21820	10962195	0	True				
ANR	10962606	AndExpression	"chr != gs_no_char && ! r_has_type ( & pfdata -> BuildChar , t_null ) && ( glyph == GS_NO_GLYPH || ( ! r_has_type ( & pfdata -> Encoding , t_null ) && array_get ( imemory , & pfdata -> Encoding , ( long ) ( chr & 0xff ) , & eref ) >= 0 && ( glyph_ref ( imemory , glyph , & gref ) , obj_eq ( imemory , & gref , & eref ) ) ) )"		10962195	0		&&			
ANR	10962607	EqualityExpression	chr != gs_no_char		10962195	0		!=			
ANR	10962608	Identifier	chr		10962195	0					
ANR	10962609	Identifier	gs_no_char		10962195	1					
ANR	10962610	AndExpression	"! r_has_type ( & pfdata -> BuildChar , t_null ) && ( glyph == GS_NO_GLYPH || ( ! r_has_type ( & pfdata -> Encoding , t_null ) && array_get ( imemory , & pfdata -> Encoding , ( long ) ( chr & 0xff ) , & eref ) >= 0 && ( glyph_ref ( imemory , glyph , & gref ) , obj_eq ( imemory , & gref , & eref ) ) ) )"		10962195	1		&&			
ANR	10962611	UnaryOperationExpression	"! r_has_type ( & pfdata -> BuildChar , t_null )"		10962195	0					
ANR	10962612	UnaryOperator	!		10962195	0					
ANR	10962613	CallExpression	"r_has_type ( & pfdata -> BuildChar , t_null )"		10962195	1					
ANR	10962614	Callee	r_has_type		10962195	0					
ANR	10962615	Identifier	r_has_type		10962195	0					
ANR	10962616	ArgumentList	& pfdata -> BuildChar		10962195	1					
ANR	10962617	Argument	& pfdata -> BuildChar		10962195	0					
ANR	10962618	UnaryOperationExpression	& pfdata -> BuildChar		10962195	0					
ANR	10962619	UnaryOperator	&		10962195	0					
ANR	10962620	PtrMemberAccess	pfdata -> BuildChar		10962195	1					
ANR	10962621	Identifier	pfdata		10962195	0					
ANR	10962622	Identifier	BuildChar		10962195	1					
ANR	10962623	Argument	t_null		10962195	1					
ANR	10962624	Identifier	t_null		10962195	0					
ANR	10962625	OrExpression	"glyph == GS_NO_GLYPH || ( ! r_has_type ( & pfdata -> Encoding , t_null ) && array_get ( imemory , & pfdata -> Encoding , ( long ) ( chr & 0xff ) , & eref ) >= 0 && ( glyph_ref ( imemory , glyph , & gref ) , obj_eq ( imemory , & gref , & eref ) ) )"		10962195	1		||			
ANR	10962626	EqualityExpression	glyph == GS_NO_GLYPH		10962195	0		==			
ANR	10962627	Identifier	glyph		10962195	0					
ANR	10962628	Identifier	GS_NO_GLYPH		10962195	1					
ANR	10962629	AndExpression	"! r_has_type ( & pfdata -> Encoding , t_null ) && array_get ( imemory , & pfdata -> Encoding , ( long ) ( chr & 0xff ) , & eref ) >= 0 && ( glyph_ref ( imemory , glyph , & gref ) , obj_eq ( imemory , & gref , & eref ) )"		10962195	1		&&			
ANR	10962630	UnaryOperationExpression	"! r_has_type ( & pfdata -> Encoding , t_null )"		10962195	0					
ANR	10962631	UnaryOperator	!		10962195	0					
ANR	10962632	CallExpression	"r_has_type ( & pfdata -> Encoding , t_null )"		10962195	1					
ANR	10962633	Callee	r_has_type		10962195	0					
ANR	10962634	Identifier	r_has_type		10962195	0					
ANR	10962635	ArgumentList	& pfdata -> Encoding		10962195	1					
ANR	10962636	Argument	& pfdata -> Encoding		10962195	0					
ANR	10962637	UnaryOperationExpression	& pfdata -> Encoding		10962195	0					
ANR	10962638	UnaryOperator	&		10962195	0					
ANR	10962639	PtrMemberAccess	pfdata -> Encoding		10962195	1					
ANR	10962640	Identifier	pfdata		10962195	0					
ANR	10962641	Identifier	Encoding		10962195	1					
ANR	10962642	Argument	t_null		10962195	1					
ANR	10962643	Identifier	t_null		10962195	0					
ANR	10962644	AndExpression	"array_get ( imemory , & pfdata -> Encoding , ( long ) ( chr & 0xff ) , & eref ) >= 0 && ( glyph_ref ( imemory , glyph , & gref ) , obj_eq ( imemory , & gref , & eref ) )"		10962195	1		&&			
ANR	10962645	RelationalExpression	"array_get ( imemory , & pfdata -> Encoding , ( long ) ( chr & 0xff ) , & eref ) >= 0"		10962195	0		>=			
ANR	10962646	CallExpression	"array_get ( imemory , & pfdata -> Encoding , ( long ) ( chr & 0xff ) , & eref )"		10962195	0					
ANR	10962647	Callee	array_get		10962195	0					
ANR	10962648	Identifier	array_get		10962195	0					
ANR	10962649	ArgumentList	imemory		10962195	1					
ANR	10962650	Argument	imemory		10962195	0					
ANR	10962651	Identifier	imemory		10962195	0					
ANR	10962652	Argument	& pfdata -> Encoding		10962195	1					
ANR	10962653	UnaryOperationExpression	& pfdata -> Encoding		10962195	0					
ANR	10962654	UnaryOperator	&		10962195	0					
ANR	10962655	PtrMemberAccess	pfdata -> Encoding		10962195	1					
ANR	10962656	Identifier	pfdata		10962195	0					
ANR	10962657	Identifier	Encoding		10962195	1					
ANR	10962658	Argument	( long ) ( chr & 0xff )		10962195	2					
ANR	10962659	CastExpression	( long ) ( chr & 0xff )		10962195	0					
ANR	10962660	CastTarget	long		10962195	0					
ANR	10962661	BitAndExpression	chr & 0xff		10962195	1		&			
ANR	10962662	Identifier	chr		10962195	0					
ANR	10962663	PrimaryExpression	0xff		10962195	1					
ANR	10962664	Argument	& eref		10962195	3					
ANR	10962665	UnaryOperationExpression	& eref		10962195	0					
ANR	10962666	UnaryOperator	&		10962195	0					
ANR	10962667	Identifier	eref		10962195	1					
ANR	10962668	PrimaryExpression	0		10962195	1					
ANR	10962669	Expression	"glyph_ref ( imemory , glyph , & gref ) , obj_eq ( imemory , & gref , & eref )"		10962195	1					
ANR	10962670	CallExpression	"glyph_ref ( imemory , glyph , & gref )"		10962195	0					
ANR	10962671	Callee	glyph_ref		10962195	0					
ANR	10962672	Identifier	glyph_ref		10962195	0					
ANR	10962673	ArgumentList	imemory		10962195	1					
ANR	10962674	Argument	imemory		10962195	0					
ANR	10962675	Identifier	imemory		10962195	0					
ANR	10962676	Argument	glyph		10962195	1					
ANR	10962677	Identifier	glyph		10962195	0					
ANR	10962678	Argument	& gref		10962195	2					
ANR	10962679	UnaryOperationExpression	& gref		10962195	0					
ANR	10962680	UnaryOperator	&		10962195	0					
ANR	10962681	Identifier	gref		10962195	1					
ANR	10962682	CallExpression	"obj_eq ( imemory , & gref , & eref )"		10962195	1					
ANR	10962683	Callee	obj_eq		10962195	0					
ANR	10962684	Identifier	obj_eq		10962195	0					
ANR	10962685	ArgumentList	imemory		10962195	1					
ANR	10962686	Argument	imemory		10962195	0					
ANR	10962687	Identifier	imemory		10962195	0					
ANR	10962688	Argument	& gref		10962195	1					
ANR	10962689	UnaryOperationExpression	& gref		10962195	0					
ANR	10962690	UnaryOperator	&		10962195	0					
ANR	10962691	Identifier	gref		10962195	1					
ANR	10962692	Argument	& eref		10962195	2					
ANR	10962693	UnaryOperationExpression	& eref		10962195	0					
ANR	10962694	UnaryOperator	&		10962195	0					
ANR	10962695	Identifier	eref		10962195	1					
ANR	10962696	CompoundStatement		93:22:4043:4043	10962195	1					
ANR	10962697	ExpressionStatement	"make_int ( op , chr & 0xff )"	687:20:21866:21890	10962195	0	True				
ANR	10962698	CallExpression	"make_int ( op , chr & 0xff )"		10962195	0					
ANR	10962699	Callee	make_int		10962195	0					
ANR	10962700	Identifier	make_int		10962195	0					
ANR	10962701	ArgumentList	op		10962195	1					
ANR	10962702	Argument	op		10962195	0					
ANR	10962703	Identifier	op		10962195	0					
ANR	10962704	Argument	chr & 0xff		10962195	1					
ANR	10962705	BitAndExpression	chr & 0xff		10962195	0		&			
ANR	10962706	Identifier	chr		10962195	0					
ANR	10962707	PrimaryExpression	0xff		10962195	1					
ANR	10962708	ExpressionStatement	esp [ 2 ] = pfdata -> BuildChar	688:20:21912:21938	10962195	1	True				
ANR	10962709	AssignmentExpression	esp [ 2 ] = pfdata -> BuildChar		10962195	0		=			
ANR	10962710	ArrayIndexing	esp [ 2 ]		10962195	0					
ANR	10962711	Identifier	esp		10962195	0					
ANR	10962712	PrimaryExpression	2		10962195	1					
ANR	10962713	PtrMemberAccess	pfdata -> BuildChar		10962195	1					
ANR	10962714	Identifier	pfdata		10962195	0					
ANR	10962715	Identifier	BuildChar		10962195	1					
ANR	10962716	ElseStatement	else		10962195	0					
ANR	10962717	CompoundStatement		96:23:4162:4162	10962195	0					
ANR	10962718	IfStatement	if ( glyph == GS_NO_GLYPH )		10962195	0					
ANR	10962719	Condition	glyph == GS_NO_GLYPH	691:24:22065:22084	10962195	0	True				
ANR	10962720	EqualityExpression	glyph == GS_NO_GLYPH		10962195	0		==			
ANR	10962721	Identifier	glyph		10962195	0					
ANR	10962722	Identifier	GS_NO_GLYPH		10962195	1					
ANR	10962723	ExpressionStatement	"make_int ( op , 0 )"	692:24:22111:22126	10962195	1	True				
ANR	10962724	CallExpression	"make_int ( op , 0 )"		10962195	0					
ANR	10962725	Callee	make_int		10962195	0					
ANR	10962726	Identifier	make_int		10962195	0					
ANR	10962727	ArgumentList	op		10962195	1					
ANR	10962728	Argument	op		10962195	0					
ANR	10962729	Identifier	op		10962195	0					
ANR	10962730	Argument	0		10962195	1					
ANR	10962731	PrimaryExpression	0		10962195	0					
ANR	10962732	ElseStatement	else		10962195	0					
ANR	10962733	ExpressionStatement	"glyph_ref ( imemory , glyph , op )"	694:24:22177:22206	10962195	0	True				
ANR	10962734	CallExpression	"glyph_ref ( imemory , glyph , op )"		10962195	0					
ANR	10962735	Callee	glyph_ref		10962195	0					
ANR	10962736	Identifier	glyph_ref		10962195	0					
ANR	10962737	ArgumentList	imemory		10962195	1					
ANR	10962738	Argument	imemory		10962195	0					
ANR	10962739	Identifier	imemory		10962195	0					
ANR	10962740	Argument	glyph		10962195	1					
ANR	10962741	Identifier	glyph		10962195	0					
ANR	10962742	Argument	op		10962195	2					
ANR	10962743	Identifier	op		10962195	0					
ANR	10962744	ExpressionStatement	esp [ 2 ] = pfdata -> BuildGlyph	695:20:22228:22255	10962195	1	True				
ANR	10962745	AssignmentExpression	esp [ 2 ] = pfdata -> BuildGlyph		10962195	0		=			
ANR	10962746	ArrayIndexing	esp [ 2 ]		10962195	0					
ANR	10962747	Identifier	esp		10962195	0					
ANR	10962748	PrimaryExpression	2		10962195	1					
ANR	10962749	PtrMemberAccess	pfdata -> BuildGlyph		10962195	1					
ANR	10962750	Identifier	pfdata		10962195	0					
ANR	10962751	Identifier	BuildGlyph		10962195	1					
ANR	10962752	ExpressionStatement	sodepth . value . intval = ref_stack_count ( & o_stack ) - 2	699:12:22362:22414	10962195	7	True				
ANR	10962753	AssignmentExpression	sodepth . value . intval = ref_stack_count ( & o_stack ) - 2		10962195	0		=			
ANR	10962754	MemberAccess	sodepth . value . intval		10962195	0					
ANR	10962755	MemberAccess	sodepth . value		10962195	0					
ANR	10962756	Identifier	sodepth		10962195	0					
ANR	10962757	Identifier	value		10962195	1					
ANR	10962758	Identifier	intval		10962195	1					
ANR	10962759	AdditiveExpression	ref_stack_count ( & o_stack ) - 2		10962195	1		-			
ANR	10962760	CallExpression	ref_stack_count ( & o_stack )		10962195	0					
ANR	10962761	Callee	ref_stack_count		10962195	0					
ANR	10962762	Identifier	ref_stack_count		10962195	0					
ANR	10962763	ArgumentList	& o_stack		10962195	1					
ANR	10962764	Argument	& o_stack		10962195	0					
ANR	10962765	UnaryOperationExpression	& o_stack		10962195	0					
ANR	10962766	UnaryOperator	&		10962195	0					
ANR	10962767	Identifier	o_stack		10962195	1					
ANR	10962768	PrimaryExpression	2		10962195	1					
ANR	10962769	ExpressionStatement	sddepth . value . intval = ref_stack_count ( & d_stack )	700:12:22428:22476	10962195	8	True				
ANR	10962770	AssignmentExpression	sddepth . value . intval = ref_stack_count ( & d_stack )		10962195	0		=			
ANR	10962771	MemberAccess	sddepth . value . intval		10962195	0					
ANR	10962772	MemberAccess	sddepth . value		10962195	0					
ANR	10962773	Identifier	sddepth		10962195	0					
ANR	10962774	Identifier	value		10962195	1					
ANR	10962775	Identifier	intval		10962195	1					
ANR	10962776	CallExpression	ref_stack_count ( & d_stack )		10962195	1					
ANR	10962777	Callee	ref_stack_count		10962195	0					
ANR	10962778	Identifier	ref_stack_count		10962195	0					
ANR	10962779	ArgumentList	& d_stack		10962195	1					
ANR	10962780	Argument	& d_stack		10962195	0					
ANR	10962781	UnaryOperationExpression	& d_stack		10962195	0					
ANR	10962782	UnaryOperator	&		10962195	0					
ANR	10962783	Identifier	d_stack		10962195	1					
ANR	10962784	ExpressionStatement	push_op_estack ( op_show_continue )	701:12:22490:22522	10962195	9	True				
ANR	10962785	CallExpression	push_op_estack ( op_show_continue )		10962195	0					
ANR	10962786	Callee	push_op_estack		10962195	0					
ANR	10962787	Identifier	push_op_estack		10962195	0					
ANR	10962788	ArgumentList	op_show_continue		10962195	1					
ANR	10962789	Argument	op_show_continue		10962195	0					
ANR	10962790	Identifier	op_show_continue		10962195	0					
ANR	10962791	ExpressionStatement	++ esp	702:12:22536:22541	10962195	10	True				
ANR	10962792	UnaryExpression	++ esp		10962195	0					
ANR	10962793	IncDec	++		10962195	0					
ANR	10962794	Identifier	esp		10962195	1					
ANR	10962795	ReturnStatement	return o_push_estack ;	703:12:22596:22616	10962195	11	True				
ANR	10962796	Identifier	o_push_estack		10962195	0					
ANR	10962797	Label	case TEXT_PROCESS_CDEVPROC :	705:8:22636:22662	10962195	6	True				
ANR	10962798	Identifier	TEXT_PROCESS_CDEVPROC		10962195	0					
ANR	10962799	CompoundStatement		117:16:5090:5098	10962195	7					
ANR	10962800	IdentifierDeclStatement	gs_font * pfont = penum -> current_font ;	706:16:22680:22716	10962195	0	True				
ANR	10962801	IdentifierDecl	* pfont = penum -> current_font		10962195	0					
ANR	10962802	IdentifierDeclType	gs_font *		10962195	0					
ANR	10962803	Identifier	pfont		10962195	1					
ANR	10962804	AssignmentExpression	* pfont = penum -> current_font		10962195	2		=			
ANR	10962805	Identifier	pfont		10962195	0					
ANR	10962806	PtrMemberAccess	penum -> current_font		10962195	1					
ANR	10962807	Identifier	penum		10962195	0					
ANR	10962808	Identifier	current_font		10962195	1					
ANR	10962809	IdentifierDeclStatement	ref cnref ;	707:16:22734:22743	10962195	1	True				
ANR	10962810	IdentifierDecl	cnref		10962195	0					
ANR	10962811	IdentifierDeclType	ref		10962195	0					
ANR	10962812	Identifier	cnref		10962195	1					
ANR	10962813	IdentifierDeclStatement	"op_proc_t cont = op_show_continue , exec_cont = 0 ;"	708:16:22761:22809	10962195	2	True				
ANR	10962814	IdentifierDecl	cont = op_show_continue		10962195	0					
ANR	10962815	IdentifierDeclType	op_proc_t		10962195	0					
ANR	10962816	Identifier	cont		10962195	1					
ANR	10962817	AssignmentExpression	cont = op_show_continue		10962195	2		=			
ANR	10962818	Identifier	op_show_continue		10962195	0					
ANR	10962819	Identifier	op_show_continue		10962195	1					
ANR	10962820	IdentifierDecl	exec_cont = 0		10962195	1					
ANR	10962821	IdentifierDeclType	op_proc_t		10962195	0					
ANR	10962822	Identifier	exec_cont		10962195	1					
ANR	10962823	AssignmentExpression	exec_cont = 0		10962195	2		=			
ANR	10962824	Identifier	exec_cont		10962195	0					
ANR	10962825	PrimaryExpression	0		10962195	1					
ANR	10962826	IdentifierDeclStatement	gs_glyph glyph = penum -> returned . current_glyph ;	709:16:22827:22873	10962195	3	True				
ANR	10962827	IdentifierDecl	glyph = penum -> returned . current_glyph		10962195	0					
ANR	10962828	IdentifierDeclType	gs_glyph		10962195	0					
ANR	10962829	Identifier	glyph		10962195	1					
ANR	10962830	AssignmentExpression	glyph = penum -> returned . current_glyph		10962195	2		=			
ANR	10962831	Identifier	glyph		10962195	0					
ANR	10962832	MemberAccess	penum -> returned . current_glyph		10962195	1					
ANR	10962833	PtrMemberAccess	penum -> returned		10962195	0					
ANR	10962834	Identifier	penum		10962195	0					
ANR	10962835	Identifier	returned		10962195	1					
ANR	10962836	Identifier	current_glyph		10962195	1					
ANR	10962837	IdentifierDeclStatement	int code ;	710:16:22891:22899	10962195	4	True				
ANR	10962838	IdentifierDecl	code		10962195	0					
ANR	10962839	IdentifierDeclType	int		10962195	0					
ANR	10962840	Identifier	code		10962195	1					
ANR	10962841	ExpressionStatement	pop ( npop )	712:16:22918:22927	10962195	5	True				
ANR	10962842	CallExpression	pop ( npop )		10962195	0					
ANR	10962843	Callee	pop		10962195	0					
ANR	10962844	Identifier	pop		10962195	0					
ANR	10962845	ArgumentList	npop		10962195	1					
ANR	10962846	Argument	npop		10962195	0					
ANR	10962847	Identifier	npop		10962195	0					
ANR	10962848	ExpressionStatement	op = osp	713:16:22945:22953	10962195	6	True				
ANR	10962849	AssignmentExpression	op = osp		10962195	0		=			
ANR	10962850	Identifier	op		10962195	0					
ANR	10962851	Identifier	osp		10962195	1					
ANR	10962852	ExpressionStatement	"glyph_ref ( imemory , glyph , & cnref )"	714:16:22971:23004	10962195	7	True				
ANR	10962853	CallExpression	"glyph_ref ( imemory , glyph , & cnref )"		10962195	0					
ANR	10962854	Callee	glyph_ref		10962195	0					
ANR	10962855	Identifier	glyph_ref		10962195	0					
ANR	10962856	ArgumentList	imemory		10962195	1					
ANR	10962857	Argument	imemory		10962195	0					
ANR	10962858	Identifier	imemory		10962195	0					
ANR	10962859	Argument	glyph		10962195	1					
ANR	10962860	Identifier	glyph		10962195	0					
ANR	10962861	Argument	& cnref		10962195	2					
ANR	10962862	UnaryOperationExpression	& cnref		10962195	0					
ANR	10962863	UnaryOperator	&		10962195	0					
ANR	10962864	Identifier	cnref		10962195	1					
ANR	10962865	IfStatement	if ( pfont -> FontType == ft_CID_TrueType )		10962195	8					
ANR	10962866	Condition	pfont -> FontType == ft_CID_TrueType	715:20:23026:23059	10962195	0	True				
ANR	10962867	EqualityExpression	pfont -> FontType == ft_CID_TrueType		10962195	0		==			
ANR	10962868	PtrMemberAccess	pfont -> FontType		10962195	0					
ANR	10962869	Identifier	pfont		10962195	0					
ANR	10962870	Identifier	FontType		10962195	1					
ANR	10962871	Identifier	ft_CID_TrueType		10962195	1					
ANR	10962872	CompoundStatement		124:20:5354:5418	10962195	1					
ANR	10962873	IdentifierDeclStatement	gs_font_type42 * pfont42 = ( gs_font_type42 * ) pfont ;	716:20:23084:23133	10962195	0	True				
ANR	10962874	IdentifierDecl	* pfont42 = ( gs_font_type42 * ) pfont		10962195	0					
ANR	10962875	IdentifierDeclType	gs_font_type42 *		10962195	0					
ANR	10962876	Identifier	pfont42		10962195	1					
ANR	10962877	AssignmentExpression	* pfont42 = ( gs_font_type42 * ) pfont		10962195	2		=			
ANR	10962878	Identifier	pfont42		10962195	0					
ANR	10962879	CastExpression	( gs_font_type42 * ) pfont		10962195	1					
ANR	10962880	CastTarget	gs_font_type42 *		10962195	0					
ANR	10962881	Identifier	pfont		10962195	1					
ANR	10962882	IdentifierDeclStatement	"uint glyph_index = pfont42 -> data . get_glyph_index ( pfont42 , glyph ) ;"	717:20:23155:23219	10962195	1	True				
ANR	10962883	IdentifierDecl	"glyph_index = pfont42 -> data . get_glyph_index ( pfont42 , glyph )"		10962195	0					
ANR	10962884	IdentifierDeclType	uint		10962195	0					
ANR	10962885	Identifier	glyph_index		10962195	1					
ANR	10962886	AssignmentExpression	"glyph_index = pfont42 -> data . get_glyph_index ( pfont42 , glyph )"		10962195	2		=			
ANR	10962887	Identifier	glyph_index		10962195	0					
ANR	10962888	CallExpression	"pfont42 -> data . get_glyph_index ( pfont42 , glyph )"		10962195	1					
ANR	10962889	Callee	pfont42 -> data . get_glyph_index		10962195	0					
ANR	10962890	MemberAccess	pfont42 -> data . get_glyph_index		10962195	0					
ANR	10962891	PtrMemberAccess	pfont42 -> data		10962195	0					
ANR	10962892	Identifier	pfont42		10962195	0					
ANR	10962893	Identifier	data		10962195	1					
ANR	10962894	Identifier	get_glyph_index		10962195	1					
ANR	10962895	ArgumentList	pfont42		10962195	1					
ANR	10962896	Argument	pfont42		10962195	0					
ANR	10962897	Identifier	pfont42		10962195	0					
ANR	10962898	Argument	glyph		10962195	1					
ANR	10962899	Identifier	glyph		10962195	0					
ANR	10962900	ExpressionStatement	"code = zchar42_set_cache ( i_ctx_p , ( gs_font_base * ) pfont42 , & cnref , glyph_index , cont , & exec_cont )"	719:20:23242:23375	10962195	2	True				
ANR	10962901	AssignmentExpression	"code = zchar42_set_cache ( i_ctx_p , ( gs_font_base * ) pfont42 , & cnref , glyph_index , cont , & exec_cont )"		10962195	0		=			
ANR	10962902	Identifier	code		10962195	0					
ANR	10962903	CallExpression	"zchar42_set_cache ( i_ctx_p , ( gs_font_base * ) pfont42 , & cnref , glyph_index , cont , & exec_cont )"		10962195	1					
ANR	10962904	Callee	zchar42_set_cache		10962195	0					
ANR	10962905	Identifier	zchar42_set_cache		10962195	0					
ANR	10962906	ArgumentList	i_ctx_p		10962195	1					
ANR	10962907	Argument	i_ctx_p		10962195	0					
ANR	10962908	Identifier	i_ctx_p		10962195	0					
ANR	10962909	Argument	( gs_font_base * ) pfont42		10962195	1					
ANR	10962910	CastExpression	( gs_font_base * ) pfont42		10962195	0					
ANR	10962911	CastTarget	gs_font_base *		10962195	0					
ANR	10962912	Identifier	pfont42		10962195	1					
ANR	10962913	Argument	& cnref		10962195	2					
ANR	10962914	UnaryOperationExpression	& cnref		10962195	0					
ANR	10962915	UnaryOperator	&		10962195	0					
ANR	10962916	Identifier	cnref		10962195	1					
ANR	10962917	Argument	glyph_index		10962195	3					
ANR	10962918	Identifier	glyph_index		10962195	0					
ANR	10962919	Argument	cont		10962195	4					
ANR	10962920	Identifier	cont		10962195	0					
ANR	10962921	Argument	& exec_cont		10962195	5					
ANR	10962922	UnaryOperationExpression	& exec_cont		10962195	0					
ANR	10962923	UnaryOperator	&		10962195	0					
ANR	10962924	Identifier	exec_cont		10962195	1					
ANR	10962925	ElseStatement	else		10962195	0					
ANR	10962926	IfStatement	if ( pfont -> FontType == ft_CID_encrypted )		10962195	0					
ANR	10962927	Condition	pfont -> FontType == ft_CID_encrypted	721:27:23404:23438	10962195	0	True				
ANR	10962928	EqualityExpression	pfont -> FontType == ft_CID_encrypted		10962195	0		==			
ANR	10962929	PtrMemberAccess	pfont -> FontType		10962195	0					
ANR	10962930	Identifier	pfont		10962195	0					
ANR	10962931	Identifier	FontType		10962195	1					
ANR	10962932	Identifier	ft_CID_encrypted		10962195	1					
ANR	10962933	ExpressionStatement	"code = z1_set_cache ( i_ctx_p , ( gs_font_base * ) pfont , & cnref , glyph , cont , & exec_cont )"	722:20:23461:23581	10962195	1	True				
ANR	10962934	AssignmentExpression	"code = z1_set_cache ( i_ctx_p , ( gs_font_base * ) pfont , & cnref , glyph , cont , & exec_cont )"		10962195	0		=			
ANR	10962935	Identifier	code		10962195	0					
ANR	10962936	CallExpression	"z1_set_cache ( i_ctx_p , ( gs_font_base * ) pfont , & cnref , glyph , cont , & exec_cont )"		10962195	1					
ANR	10962937	Callee	z1_set_cache		10962195	0					
ANR	10962938	Identifier	z1_set_cache		10962195	0					
ANR	10962939	ArgumentList	i_ctx_p		10962195	1					
ANR	10962940	Argument	i_ctx_p		10962195	0					
ANR	10962941	Identifier	i_ctx_p		10962195	0					
ANR	10962942	Argument	( gs_font_base * ) pfont		10962195	1					
ANR	10962943	CastExpression	( gs_font_base * ) pfont		10962195	0					
ANR	10962944	CastTarget	gs_font_base *		10962195	0					
ANR	10962945	Identifier	pfont		10962195	1					
ANR	10962946	Argument	& cnref		10962195	2					
ANR	10962947	UnaryOperationExpression	& cnref		10962195	0					
ANR	10962948	UnaryOperator	&		10962195	0					
ANR	10962949	Identifier	cnref		10962195	1					
ANR	10962950	Argument	glyph		10962195	3					
ANR	10962951	Identifier	glyph		10962195	0					
ANR	10962952	Argument	cont		10962195	4					
ANR	10962953	Identifier	cont		10962195	0					
ANR	10962954	Argument	& exec_cont		10962195	5					
ANR	10962955	UnaryOperationExpression	& exec_cont		10962195	0					
ANR	10962956	UnaryOperator	&		10962195	0					
ANR	10962957	Identifier	exec_cont		10962195	1					
ANR	10962958	ElseStatement	else		10962195	0					
ANR	10962959	ExpressionStatement	code = gs_note_error ( gs_error_unregistered )	725:20:23624:23667	10962195	0	True				
ANR	10962960	AssignmentExpression	code = gs_note_error ( gs_error_unregistered )		10962195	0		=			
ANR	10962961	Identifier	code		10962195	0					
ANR	10962962	CallExpression	gs_note_error ( gs_error_unregistered )		10962195	1					
ANR	10962963	Callee	gs_note_error		10962195	0					
ANR	10962964	Identifier	gs_note_error		10962195	0					
ANR	10962965	ArgumentList	gs_error_unregistered		10962195	1					
ANR	10962966	Argument	gs_error_unregistered		10962195	0					
ANR	10962967	Identifier	gs_error_unregistered		10962195	0					
ANR	10962968	IfStatement	if ( exec_cont != 0 )		10962195	9					
ANR	10962969	Condition	exec_cont != 0	726:20:23710:23723	10962195	0	True				
ANR	10962970	EqualityExpression	exec_cont != 0		10962195	0		!=			
ANR	10962971	Identifier	exec_cont		10962195	0					
ANR	10962972	PrimaryExpression	0		10962195	1					
ANR	10962973	ExpressionStatement	code = gs_note_error ( gs_error_unregistered )	727:20:23746:23789	10962195	1	True				
ANR	10962974	AssignmentExpression	code = gs_note_error ( gs_error_unregistered )		10962195	0		=			
ANR	10962975	Identifier	code		10962195	0					
ANR	10962976	CallExpression	gs_note_error ( gs_error_unregistered )		10962195	1					
ANR	10962977	Callee	gs_note_error		10962195	0					
ANR	10962978	Identifier	gs_note_error		10962195	0					
ANR	10962979	ArgumentList	gs_error_unregistered		10962195	1					
ANR	10962980	Argument	gs_error_unregistered		10962195	0					
ANR	10962981	Identifier	gs_error_unregistered		10962195	0					
ANR	10962982	IfStatement	if ( code < 0 )		10962195	10					
ANR	10962983	Condition	code < 0	728:20:23834:23841	10962195	0	True				
ANR	10962984	RelationalExpression	code < 0		10962195	0		<			
ANR	10962985	Identifier	code		10962195	0					
ANR	10962986	PrimaryExpression	0		10962195	1					
ANR	10962987	GotoStatement	goto err ;	729:18:23862:23870	10962195	1	True				
ANR	10962988	Identifier	err		10962195	0					
ANR	10962989	ElseStatement	else		10962195	0					
ANR	10962990	ReturnStatement	return code ;	731:18:23911:23922	10962195	0	True				
ANR	10962991	Identifier	code		10962195	0					
ANR	10962992	Label	default :	733:8:23946:23953	10962195	8	True				
ANR	10962993	Identifier	default		10962195	0					
ANR	10962994	Label	err :	734:0:23968:23971	10962195	9	True				
ANR	10962995	Identifier	err		10962195	0					
ANR	10962996	IfStatement	if ( code >= 0 )		10962195	10					
ANR	10962997	Condition	code >= 0	735:16:23989:23997	10962195	0	True				
ANR	10962998	RelationalExpression	code >= 0		10962195	0		>=			
ANR	10962999	Identifier	code		10962195	0					
ANR	10963000	PrimaryExpression	0		10962195	1					
ANR	10963001	ExpressionStatement	code = gs_note_error ( gs_error_invalidfont )	736:16:24016:24058	10962195	1	True				
ANR	10963002	AssignmentExpression	code = gs_note_error ( gs_error_invalidfont )		10962195	0		=			
ANR	10963003	Identifier	code		10962195	0					
ANR	10963004	CallExpression	gs_note_error ( gs_error_invalidfont )		10962195	1					
ANR	10963005	Callee	gs_note_error		10962195	0					
ANR	10963006	Identifier	gs_note_error		10962195	0					
ANR	10963007	ArgumentList	gs_error_invalidfont		10962195	1					
ANR	10963008	Argument	gs_error_invalidfont		10962195	0					
ANR	10963009	Identifier	gs_error_invalidfont		10962195	0					
ANR	10963010	ReturnStatement	"return op_show_free ( i_ctx_p , code ) ;"	737:12:24072:24106	10962195	11	True				
ANR	10963011	CallExpression	"op_show_free ( i_ctx_p , code )"		10962195	0					
ANR	10963012	Callee	op_show_free		10962195	0					
ANR	10963013	Identifier	op_show_free		10962195	0					
ANR	10963014	ArgumentList	i_ctx_p		10962195	1					
ANR	10963015	Argument	i_ctx_p		10962195	0					
ANR	10963016	Identifier	i_ctx_p		10962195	0					
ANR	10963017	Argument	code		10962195	1					
ANR	10963018	Identifier	code		10962195	0					
ANR	10963019	ReturnType	int		10962195	1					
ANR	10963020	Identifier	op_show_continue_dispatch		10962195	2					
ANR	10963021	ParameterList	"i_ctx_t * i_ctx_p , int npop , int code"		10962195	3					
ANR	10963022	Parameter	i_ctx_t * i_ctx_p	593:26:17762:17777	10962195	0	True				
ANR	10963023	ParameterType	i_ctx_t *		10962195	0					
ANR	10963024	Identifier	i_ctx_p		10962195	1					
ANR	10963025	Parameter	int npop	593:44:17780:17787	10962195	1	True				
ANR	10963026	ParameterType	int		10962195	0					
ANR	10963027	Identifier	npop		10962195	1					
ANR	10963028	Parameter	int code	593:54:17790:17797	10962195	2	True				
ANR	10963029	ParameterType	int		10962195	0					
ANR	10963030	Identifier	code		10962195	1					
ANR	10963031	CFGEntryNode	ENTRY		10962195		True				
ANR	10963032	CFGExitNode	EXIT		10962195		True				
ANR	10963033	Symbol	& eref		10962195						
ANR	10963034	Symbol	esp		10962195						
ANR	10963035	Symbol	pfont42 -> data . get_glyph_index		10962195						
ANR	10963036	Symbol	* op		10962195						
ANR	10963037	Symbol	glyph_index		10962195						
ANR	10963038	Symbol	sddepth . value . intval		10962195						
ANR	10963039	Symbol	& pfdata -> BuildGlyph		10962195						
ANR	10963040	Symbol	osp		10962195						
ANR	10963041	Symbol	pslot		10962195						
ANR	10963042	Symbol	real_opproc		10962195						
ANR	10963043	Symbol	npop		10962195						
ANR	10963044	Symbol	penum -> returned		10962195						
ANR	10963045	Symbol	r_has_type		10962195						
ANR	10963046	Symbol	t_null		10962195						
ANR	10963047	Symbol	& pfdata -> Encoding		10962195						
ANR	10963048	Symbol	igs		10962195						
ANR	10963049	Symbol	gs_currentfont		10962195						
ANR	10963050	Symbol	sddepth . value		10962195						
ANR	10963051	Symbol	& d_stack		10962195						
ANR	10963052	Symbol	* real_opproc ( & seproc )		10962195						
ANR	10963053	Symbol	imemory		10962195						
ANR	10963054	Symbol	exec_cont		10962195						
ANR	10963055	Symbol	cont		10962195						
ANR	10963056	Symbol	pfdata -> dict		10962195						
ANR	10963057	Symbol	& cnref		10962195						
ANR	10963058	Symbol	eref		10962195						
ANR	10963059	Symbol	& sslot		10962195						
ANR	10963060	Symbol	penum		10962195						
ANR	10963061	Symbol	* real_opproc		10962195						
ANR	10963062	Symbol	sodepth . value		10962195						
ANR	10963063	Symbol	chr		10962195						
ANR	10963064	Symbol	pencoding		10962195						
ANR	10963065	Symbol	gs_text_current_glyph		10962195						
ANR	10963066	Symbol	map_glyph_to_char		10962195						
ANR	10963067	Symbol	save_osp		10962195						
ANR	10963068	Symbol	ft_CID_TrueType		10962195						
ANR	10963069	Symbol	i_ctx_p		10962195						
ANR	10963070	Symbol	ref_stack_count		10962195						
ANR	10963071	Symbol	* pslot		10962195						
ANR	10963072	Symbol	penum -> returned . current_glyph		10962195						
ANR	10963073	Symbol	zchar42_set_cache		10962195						
ANR	10963074	Symbol	op_show_continue		10962195						
ANR	10963075	Symbol	pfdata -> BuildChar		10962195						
ANR	10963076	Symbol	* penum		10962195						
ANR	10963077	Symbol	gs_error_unregistered		10962195						
ANR	10963078	Symbol	code		10962195						
ANR	10963079	Symbol	ft_CID_encrypted		10962195						
ANR	10963080	Symbol	z1_set_cache		10962195						
ANR	10963081	Symbol	o_pop_estack		10962195						
ANR	10963082	Symbol	pfdata		10962195						
ANR	10963083	Symbol	& gref		10962195						
ANR	10963084	Symbol	op_show_free		10962195						
ANR	10963085	Symbol	sddepth		10962195						
ANR	10963086	Symbol	pfont42 -> data		10962195						
ANR	10963087	Symbol	penum -> current_font		10962195						
ANR	10963088	Symbol	* esp		10962195						
ANR	10963089	Symbol	pfont -> FontType		10962195						
ANR	10963090	Symbol	gs_text_current_char		10962195						
ANR	10963091	Symbol	& seproc		10962195						
ANR	10963092	Symbol	pfdata -> BuildGlyph		10962195						
ANR	10963093	Symbol	gs_no_char		10962195						
ANR	10963094	Symbol	gs_error_invalidfont		10962195						
ANR	10963095	Symbol	glyph_ref		10962195						
ANR	10963096	Symbol	o_push_estack		10962195						
ANR	10963097	Symbol	& pfdata -> BuildChar		10962195						
ANR	10963098	Symbol	sodepth		10962195						
ANR	10963099	Symbol	op		10962195						
ANR	10963100	Symbol	sodepth . value . intval		10962195						
ANR	10963101	Symbol	pfont		10962195						
ANR	10963102	Symbol	pfont42		10962195						
ANR	10963103	Symbol	array_get		10962195						
ANR	10963104	Symbol	level2_enabled		10962195						
ANR	10963105	Symbol	gs_text_next_char		10962195						
ANR	10963106	Symbol	cnref		10962195						
ANR	10963107	Symbol	senum		10962195						
ANR	10963108	Symbol	* pfont42		10962195						
ANR	10963109	Symbol	glyph		10962195						
ANR	10963110	Symbol	* pfont		10962195						
ANR	10963111	Symbol	GS_NO_GLYPH		10962195						
ANR	10963112	Symbol	gs_note_error		10962195						
ANR	10963113	Symbol	ft_user_defined		10962195						
ANR	10963114	Symbol	obj_eq		10962195						
ANR	10963115	Symbol	* pfdata		10962195						
ANR	10963116	Symbol	& o_stack		10962195						
ANR	10963117	Symbol	& exec_cont		10962195						
ANR	10963118	Symbol	pfont_data		10962195						
ANR	10963119	Symbol	gref		10962195						
ANR	10963120	Symbol	* ++ esp		10962195						
ANR	10963121	Function	map_glyph_to_char	741:0:24182:24575							
ANR	10963122	FunctionDef	"map_glyph_to_char (const gs_memory_t * mem , const ref * pgref , const ref * pencoding , ref * pch)"		10963121	0					
ANR	10963123	CompoundStatement		743:0:24289:24575	10963121	0					
ANR	10963124	IdentifierDeclStatement	uint esize = r_size ( pencoding ) ;	744:4:24295:24325	10963121	0	True				
ANR	10963125	IdentifierDecl	esize = r_size ( pencoding )		10963121	0					
ANR	10963126	IdentifierDeclType	uint		10963121	0					
ANR	10963127	Identifier	esize		10963121	1					
ANR	10963128	AssignmentExpression	esize = r_size ( pencoding )		10963121	2		=			
ANR	10963129	Identifier	esize		10963121	0					
ANR	10963130	CallExpression	r_size ( pencoding )		10963121	1					
ANR	10963131	Callee	r_size		10963121	0					
ANR	10963132	Identifier	r_size		10963121	0					
ANR	10963133	ArgumentList	pencoding		10963121	1					
ANR	10963134	Argument	pencoding		10963121	0					
ANR	10963135	Identifier	pencoding		10963121	0					
ANR	10963136	IdentifierDeclStatement	uint ch ;	745:4:24331:24338	10963121	1	True				
ANR	10963137	IdentifierDecl	ch		10963121	0					
ANR	10963138	IdentifierDeclType	uint		10963121	0					
ANR	10963139	Identifier	ch		10963121	1					
ANR	10963140	IdentifierDeclStatement	ref eref ;	746:4:24344:24352	10963121	2	True				
ANR	10963141	IdentifierDecl	eref		10963121	0					
ANR	10963142	IdentifierDeclType	ref		10963121	0					
ANR	10963143	Identifier	eref		10963121	1					
ANR	10963144	ForStatement	for ( ch = 0 ; ch < esize ; ch ++ )		10963121	3					
ANR	10963145	ForInit	ch = 0 ;	748:9:24364:24370	10963121	0	True				
ANR	10963146	AssignmentExpression	ch = 0		10963121	0		=			
ANR	10963147	Identifier	ch		10963121	0					
ANR	10963148	PrimaryExpression	0		10963121	1					
ANR	10963149	Condition	ch < esize	748:17:24372:24381	10963121	1	True				
ANR	10963150	RelationalExpression	ch < esize		10963121	0		<			
ANR	10963151	Identifier	ch		10963121	0					
ANR	10963152	Identifier	esize		10963121	1					
ANR	10963153	PostIncDecOperationExpression	ch ++	748:29:24384:24387	10963121	2	True				
ANR	10963154	Identifier	ch		10963121	0					
ANR	10963155	IncDec	++		10963121	1					
ANR	10963156	CompoundStatement		6:35:100:100	10963121	3					
ANR	10963157	ExpressionStatement	"array_get ( mem , pencoding , ( long ) ch , & eref )"	749:8:24400:24442	10963121	0	True				
ANR	10963158	CallExpression	"array_get ( mem , pencoding , ( long ) ch , & eref )"		10963121	0					
ANR	10963159	Callee	array_get		10963121	0					
ANR	10963160	Identifier	array_get		10963121	0					
ANR	10963161	ArgumentList	mem		10963121	1					
ANR	10963162	Argument	mem		10963121	0					
ANR	10963163	Identifier	mem		10963121	0					
ANR	10963164	Argument	pencoding		10963121	1					
ANR	10963165	Identifier	pencoding		10963121	0					
ANR	10963166	Argument	( long ) ch		10963121	2					
ANR	10963167	CastExpression	( long ) ch		10963121	0					
ANR	10963168	CastTarget	long		10963121	0					
ANR	10963169	Identifier	ch		10963121	1					
ANR	10963170	Argument	& eref		10963121	3					
ANR	10963171	UnaryOperationExpression	& eref		10963121	0					
ANR	10963172	UnaryOperator	&		10963121	0					
ANR	10963173	Identifier	eref		10963121	1					
ANR	10963174	IfStatement	"if ( obj_eq ( mem , pgref , & eref ) )"		10963121	1					
ANR	10963175	Condition	"obj_eq ( mem , pgref , & eref )"	750:12:24456:24480	10963121	0	True				
ANR	10963176	CallExpression	"obj_eq ( mem , pgref , & eref )"		10963121	0					
ANR	10963177	Callee	obj_eq		10963121	0					
ANR	10963178	Identifier	obj_eq		10963121	0					
ANR	10963179	ArgumentList	mem		10963121	1					
ANR	10963180	Argument	mem		10963121	0					
ANR	10963181	Identifier	mem		10963121	0					
ANR	10963182	Argument	pgref		10963121	1					
ANR	10963183	Identifier	pgref		10963121	0					
ANR	10963184	Argument	& eref		10963121	2					
ANR	10963185	UnaryOperationExpression	& eref		10963121	0					
ANR	10963186	UnaryOperator	&		10963121	0					
ANR	10963187	Identifier	eref		10963121	1					
ANR	10963188	CompoundStatement		8:39:193:193	10963121	1					
ANR	10963189	ExpressionStatement	"make_int ( pch , ch )"	751:12:24497:24514	10963121	0	True				
ANR	10963190	CallExpression	"make_int ( pch , ch )"		10963121	0					
ANR	10963191	Callee	make_int		10963121	0					
ANR	10963192	Identifier	make_int		10963121	0					
ANR	10963193	ArgumentList	pch		10963121	1					
ANR	10963194	Argument	pch		10963121	0					
ANR	10963195	Identifier	pch		10963121	0					
ANR	10963196	Argument	ch		10963121	1					
ANR	10963197	Identifier	ch		10963121	0					
ANR	10963198	ReturnStatement	return true ;	752:12:24528:24539	10963121	1	True				
ANR	10963199	Identifier	true		10963121	0					
ANR	10963200	ReturnStatement	return false ;	755:4:24561:24573	10963121	4	True				
ANR	10963201	Identifier	false		10963121	0					
ANR	10963202	ReturnType	static bool		10963121	1					
ANR	10963203	Identifier	map_glyph_to_char		10963121	2					
ANR	10963204	ParameterList	"const gs_memory_t * mem , const ref * pgref , const ref * pencoding , ref * pch"		10963121	3					
ANR	10963205	Parameter	const gs_memory_t * mem	742:18:24212:24233	10963121	0	True				
ANR	10963206	ParameterType	const gs_memory_t *		10963121	0					
ANR	10963207	Identifier	mem		10963121	1					
ANR	10963208	Parameter	const ref * pgref	742:42:24236:24252	10963121	1	True				
ANR	10963209	ParameterType	const ref *		10963121	0					
ANR	10963210	Identifier	pgref		10963121	1					
ANR	10963211	Parameter	const ref * pencoding	742:61:24255:24275	10963121	2	True				
ANR	10963212	ParameterType	const ref *		10963121	0					
ANR	10963213	Identifier	pencoding		10963121	1					
ANR	10963214	Parameter	ref * pch	742:84:24278:24286	10963121	3	True				
ANR	10963215	ParameterType	ref *		10963121	0					
ANR	10963216	Identifier	pch		10963121	1					
ANR	10963217	CFGEntryNode	ENTRY		10963121		True				
ANR	10963218	CFGExitNode	EXIT		10963121		True				
ANR	10963219	Symbol	eref		10963121						
ANR	10963220	Symbol	& eref		10963121						
ANR	10963221	Symbol	esize		10963121						
ANR	10963222	Symbol	mem		10963121						
ANR	10963223	Symbol	pch		10963121						
ANR	10963224	Symbol	obj_eq		10963121						
ANR	10963225	Symbol	ch		10963121						
ANR	10963226	Symbol	pgref		10963121						
ANR	10963227	Symbol	r_size		10963121						
ANR	10963228	Symbol	true		10963121						
ANR	10963229	Symbol	false		10963121						
ANR	10963230	Symbol	pencoding		10963121						
ANR	10963231	Function	op_show_find_index	760:0:24694:25155							
ANR	10963232	FunctionDef	op_show_find_index (i_ctx_t * i_ctx_p)		10963231	0					
ANR	10963233	CompoundStatement		762:0:24743:25155	10963231	0					
ANR	10963234	IdentifierDeclStatement	ref_stack_enum_t rsenum ;	763:4:24749:24772	10963231	0	True				
ANR	10963235	IdentifierDecl	rsenum		10963231	0					
ANR	10963236	IdentifierDeclType	ref_stack_enum_t		10963231	0					
ANR	10963237	Identifier	rsenum		10963231	1					
ANR	10963238	IdentifierDeclStatement	uint count = 0 ;	764:4:24778:24792	10963231	1	True				
ANR	10963239	IdentifierDecl	count = 0		10963231	0					
ANR	10963240	IdentifierDeclType	uint		10963231	0					
ANR	10963241	Identifier	count		10963231	1					
ANR	10963242	AssignmentExpression	count = 0		10963231	2		=			
ANR	10963243	Identifier	count		10963231	0					
ANR	10963244	PrimaryExpression	0		10963231	1					
ANR	10963245	ExpressionStatement	"ref_stack_enum_begin ( & rsenum , & e_stack )"	766:4:24799:24838	10963231	2	True				
ANR	10963246	CallExpression	"ref_stack_enum_begin ( & rsenum , & e_stack )"		10963231	0					
ANR	10963247	Callee	ref_stack_enum_begin		10963231	0					
ANR	10963248	Identifier	ref_stack_enum_begin		10963231	0					
ANR	10963249	ArgumentList	& rsenum		10963231	1					
ANR	10963250	Argument	& rsenum		10963231	0					
ANR	10963251	UnaryOperationExpression	& rsenum		10963231	0					
ANR	10963252	UnaryOperator	&		10963231	0					
ANR	10963253	Identifier	rsenum		10963231	1					
ANR	10963254	Argument	& e_stack		10963231	1					
ANR	10963255	UnaryOperationExpression	& e_stack		10963231	0					
ANR	10963256	UnaryOperator	&		10963231	0					
ANR	10963257	Identifier	e_stack		10963231	1					
ANR	10963258	DoStatement	do		10963231	3					
ANR	10963259	CompoundStatement		8:8:145:168	10963231	0					
ANR	10963260	IdentifierDeclStatement	es_ptr ep = rsenum . ptr ;	768:8:24857:24879	10963231	0	True				
ANR	10963261	IdentifierDecl	ep = rsenum . ptr		10963231	0					
ANR	10963262	IdentifierDeclType	es_ptr		10963231	0					
ANR	10963263	Identifier	ep		10963231	1					
ANR	10963264	AssignmentExpression	ep = rsenum . ptr		10963231	2		=			
ANR	10963265	Identifier	ep		10963231	0					
ANR	10963266	MemberAccess	rsenum . ptr		10963231	1					
ANR	10963267	Identifier	rsenum		10963231	0					
ANR	10963268	Identifier	ptr		10963231	1					
ANR	10963269	IdentifierDeclStatement	uint size = rsenum . size ;	769:8:24889:24912	10963231	1	True				
ANR	10963270	IdentifierDecl	size = rsenum . size		10963231	0					
ANR	10963271	IdentifierDeclType	uint		10963231	0					
ANR	10963272	Identifier	size		10963231	1					
ANR	10963273	AssignmentExpression	size = rsenum . size		10963231	2		=			
ANR	10963274	Identifier	size		10963231	0					
ANR	10963275	MemberAccess	rsenum . size		10963231	1					
ANR	10963276	Identifier	rsenum		10963231	0					
ANR	10963277	Identifier	size		10963231	1					
ANR	10963278	ForStatement	"for ( ep += size - 1 ; size != 0 ; size -- , ep -- , count ++ )"		10963231	2					
ANR	10963279	ForInit	ep += size - 1 ;	771:13:24928:24942	10963231	0	True				
ANR	10963280	AssignmentExpression	ep += size - 1		10963231	0		+=			
ANR	10963281	Identifier	ep		10963231	0					
ANR	10963282	AdditiveExpression	size - 1		10963231	1		-			
ANR	10963283	Identifier	size		10963231	0					
ANR	10963284	PrimaryExpression	1		10963231	1					
ANR	10963285	Condition	size != 0	771:29:24944:24952	10963231	1	True				
ANR	10963286	EqualityExpression	size != 0		10963231	0		!=			
ANR	10963287	Identifier	size		10963231	0					
ANR	10963288	PrimaryExpression	0		10963231	1					
ANR	10963289	Expression	"size -- , ep -- , count ++"	771:40:24955:24975	10963231	2	True				
ANR	10963290	PostIncDecOperationExpression	size --		10963231	0					
ANR	10963291	Identifier	size		10963231	0					
ANR	10963292	IncDec	--		10963231	1					
ANR	10963293	Expression	"ep -- , count ++"		10963231	1					
ANR	10963294	PostIncDecOperationExpression	ep --		10963231	0					
ANR	10963295	Identifier	ep		10963231	0					
ANR	10963296	IncDec	--		10963231	1					
ANR	10963297	PostIncDecOperationExpression	count ++		10963231	1					
ANR	10963298	Identifier	count		10963231	0					
ANR	10963299	IncDec	++		10963231	1					
ANR	10963300	IfStatement	if ( r_is_estack_mark ( ep ) && estack_mark_index ( ep ) == es_show )		10963231	3					
ANR	10963301	Condition	r_is_estack_mark ( ep ) && estack_mark_index ( ep ) == es_show	772:16:24994:25049	10963231	0	True				
ANR	10963302	AndExpression	r_is_estack_mark ( ep ) && estack_mark_index ( ep ) == es_show		10963231	0		&&			
ANR	10963303	CallExpression	r_is_estack_mark ( ep )		10963231	0					
ANR	10963304	Callee	r_is_estack_mark		10963231	0					
ANR	10963305	Identifier	r_is_estack_mark		10963231	0					
ANR	10963306	ArgumentList	ep		10963231	1					
ANR	10963307	Argument	ep		10963231	0					
ANR	10963308	Identifier	ep		10963231	0					
ANR	10963309	EqualityExpression	estack_mark_index ( ep ) == es_show		10963231	1		==			
ANR	10963310	CallExpression	estack_mark_index ( ep )		10963231	0					
ANR	10963311	Callee	estack_mark_index		10963231	0					
ANR	10963312	Identifier	estack_mark_index		10963231	0					
ANR	10963313	ArgumentList	ep		10963231	1					
ANR	10963314	Argument	ep		10963231	0					
ANR	10963315	Identifier	ep		10963231	0					
ANR	10963316	Identifier	es_show		10963231	1					
ANR	10963317	ReturnStatement	return count ;	773:16:25068:25080	10963231	1	True				
ANR	10963318	Identifier	count		10963231	0					
ANR	10963319	Condition	ref_stack_enum_next ( & rsenum )	774:13:25095:25122	10963231	1	True				
ANR	10963320	CallExpression	ref_stack_enum_next ( & rsenum )		10963231	0					
ANR	10963321	Callee	ref_stack_enum_next		10963231	0					
ANR	10963322	Identifier	ref_stack_enum_next		10963231	0					
ANR	10963323	ArgumentList	& rsenum		10963231	1					
ANR	10963324	Argument	& rsenum		10963231	0					
ANR	10963325	UnaryOperationExpression	& rsenum		10963231	0					
ANR	10963326	UnaryOperator	&		10963231	0					
ANR	10963327	Identifier	rsenum		10963231	1					
ANR	10963328	ReturnStatement	return 0 ;	775:4:25130:25138	10963231	4	True				
ANR	10963329	PrimaryExpression	0		10963231	0					
ANR	10963330	ReturnType	static uint		10963231	1					
ANR	10963331	Identifier	op_show_find_index		10963231	2					
ANR	10963332	ParameterList	i_ctx_t * i_ctx_p		10963231	3					
ANR	10963333	Parameter	i_ctx_t * i_ctx_p	761:19:24725:24740	10963231	0	True				
ANR	10963334	ParameterType	i_ctx_t *		10963231	0					
ANR	10963335	Identifier	i_ctx_p		10963231	1					
ANR	10963336	CFGEntryNode	ENTRY		10963231		True				
ANR	10963337	CFGExitNode	EXIT		10963231		True				
ANR	10963338	Symbol	rsenum . ptr		10963231						
ANR	10963339	Symbol	rsenum . size		10963231						
ANR	10963340	Symbol	count		10963231						
ANR	10963341	Symbol	ref_stack_enum_next		10963231						
ANR	10963342	Symbol	estack_mark_index		10963231						
ANR	10963343	Symbol	ep		10963231						
ANR	10963344	Symbol	es_show		10963231						
ANR	10963345	Symbol	rsenum		10963231						
ANR	10963346	Symbol	size		10963231						
ANR	10963347	Symbol	i_ctx_p		10963231						
ANR	10963348	Symbol	r_is_estack_mark		10963231						
ANR	10963349	Symbol	& rsenum		10963231						
ANR	10963350	Symbol	& e_stack		10963231						
ANR	10963351	Function	op_show_find	779:0:25213:25465							
ANR	10963352	FunctionDef	op_show_find (i_ctx_t * i_ctx_p)		10963351	0					
ANR	10963353	CompoundStatement		781:0:25261:25465	10963351	0					
ANR	10963354	IdentifierDeclStatement	uint index = op_show_find_index ( i_ctx_p ) ;	782:4:25267:25307	10963351	0	True				
ANR	10963355	IdentifierDecl	index = op_show_find_index ( i_ctx_p )		10963351	0					
ANR	10963356	IdentifierDeclType	uint		10963351	0					
ANR	10963357	Identifier	index		10963351	1					
ANR	10963358	AssignmentExpression	index = op_show_find_index ( i_ctx_p )		10963351	2		=			
ANR	10963359	Identifier	index		10963351	0					
ANR	10963360	CallExpression	op_show_find_index ( i_ctx_p )		10963351	1					
ANR	10963361	Callee	op_show_find_index		10963351	0					
ANR	10963362	Identifier	op_show_find_index		10963351	0					
ANR	10963363	ArgumentList	i_ctx_p		10963351	1					
ANR	10963364	Argument	i_ctx_p		10963351	0					
ANR	10963365	Identifier	i_ctx_p		10963351	0					
ANR	10963366	IfStatement	if ( index == 0 )		10963351	1					
ANR	10963367	Condition	index == 0	784:8:25318:25327	10963351	0	True				
ANR	10963368	EqualityExpression	index == 0		10963351	0		==			
ANR	10963369	Identifier	index		10963351	0					
ANR	10963370	PrimaryExpression	0		10963351	1					
ANR	10963371	ReturnStatement	return 0 ;	785:8:25338:25346	10963351	1	True				
ANR	10963372	PrimaryExpression	0		10963351	0					
ANR	10963373	ReturnStatement	"return r_ptr ( ref_stack_index ( & e_stack , index - ( snumpush - 1 ) ) , gs_text_enum_t ) ;"	786:4:25367:25463	10963351	2	True				
ANR	10963374	CallExpression	"r_ptr ( ref_stack_index ( & e_stack , index - ( snumpush - 1 ) ) , gs_text_enum_t )"		10963351	0					
ANR	10963375	Callee	r_ptr		10963351	0					
ANR	10963376	Identifier	r_ptr		10963351	0					
ANR	10963377	ArgumentList	"ref_stack_index ( & e_stack , index - ( snumpush - 1 ) )"		10963351	1					
ANR	10963378	Argument	"ref_stack_index ( & e_stack , index - ( snumpush - 1 ) )"		10963351	0					
ANR	10963379	CallExpression	"ref_stack_index ( & e_stack , index - ( snumpush - 1 ) )"		10963351	0					
ANR	10963380	Callee	ref_stack_index		10963351	0					
ANR	10963381	Identifier	ref_stack_index		10963351	0					
ANR	10963382	ArgumentList	& e_stack		10963351	1					
ANR	10963383	Argument	& e_stack		10963351	0					
ANR	10963384	UnaryOperationExpression	& e_stack		10963351	0					
ANR	10963385	UnaryOperator	&		10963351	0					
ANR	10963386	Identifier	e_stack		10963351	1					
ANR	10963387	Argument	index - ( snumpush - 1 )		10963351	1					
ANR	10963388	AdditiveExpression	index - ( snumpush - 1 )		10963351	0		-			
ANR	10963389	Identifier	index		10963351	0					
ANR	10963390	AdditiveExpression	snumpush - 1		10963351	1		-			
ANR	10963391	Identifier	snumpush		10963351	0					
ANR	10963392	PrimaryExpression	1		10963351	1					
ANR	10963393	Argument	gs_text_enum_t		10963351	1					
ANR	10963394	Identifier	gs_text_enum_t		10963351	0					
ANR	10963395	ReturnType	gs_text_enum_t *		10963351	1					
ANR	10963396	Identifier	op_show_find		10963351	2					
ANR	10963397	ParameterList	i_ctx_t * i_ctx_p		10963351	3					
ANR	10963398	Parameter	i_ctx_t * i_ctx_p	780:13:25243:25258	10963351	0	True				
ANR	10963399	ParameterType	i_ctx_t *		10963351	0					
ANR	10963400	Identifier	i_ctx_p		10963351	1					
ANR	10963401	CFGEntryNode	ENTRY		10963351		True				
ANR	10963402	CFGExitNode	EXIT		10963351		True				
ANR	10963403	Symbol	ref_stack_index		10963351						
ANR	10963404	Symbol	r_ptr		10963351						
ANR	10963405	Symbol	i_ctx_p		10963351						
ANR	10963406	Symbol	index		10963351						
ANR	10963407	Symbol	op_show_find_index		10963351						
ANR	10963408	Symbol	gs_text_enum_t		10963351						
ANR	10963409	Symbol	snumpush		10963351						
ANR	10963410	Symbol	& e_stack		10963351						
ANR	10963411	Function	zchar_show_width_only	797:0:25771:26141							
ANR	10963412	FunctionDef	zchar_show_width_only (const gs_text_enum_t * penum)		10963411	0					
ANR	10963413	CompoundStatement		799:0:25828:26141	10963411	0					
ANR	10963414	IfStatement	if ( ! gs_text_is_width_only ( penum ) )		10963411	0					
ANR	10963415	Condition	! gs_text_is_width_only ( penum )	800:8:25838:25866	10963411	0	True				
ANR	10963416	UnaryOperationExpression	! gs_text_is_width_only ( penum )		10963411	0					
ANR	10963417	UnaryOperator	!		10963411	0					
ANR	10963418	CallExpression	gs_text_is_width_only ( penum )		10963411	1					
ANR	10963419	Callee	gs_text_is_width_only		10963411	0					
ANR	10963420	Identifier	gs_text_is_width_only		10963411	0					
ANR	10963421	ArgumentList	penum		10963411	1					
ANR	10963422	Argument	penum		10963411	0					
ANR	10963423	Identifier	penum		10963411	0					
ANR	10963424	ReturnStatement	return false ;	801:8:25877:25889	10963411	1	True				
ANR	10963425	Identifier	false		10963411	0					
ANR	10963426	SwitchStatement	switch ( penum -> orig_font -> FontType )		10963411	1					
ANR	10963427	Condition	penum -> orig_font -> FontType	802:12:25903:25928	10963411	0	True				
ANR	10963428	PtrMemberAccess	penum -> orig_font -> FontType		10963411	0					
ANR	10963429	PtrMemberAccess	penum -> orig_font		10963411	0					
ANR	10963430	Identifier	penum		10963411	0					
ANR	10963431	Identifier	orig_font		10963411	1					
ANR	10963432	Identifier	FontType		10963411	1					
ANR	10963433	CompoundStatement		4:40:102:102	10963411	1					
ANR	10963434	Label	case ft_encrypted :	803:4:25937:25954	10963411	0	True				
ANR	10963435	Identifier	ft_encrypted		10963411	0					
ANR	10963436	Label	case ft_encrypted2 :	804:4:25960:25978	10963411	1	True				
ANR	10963437	Identifier	ft_encrypted2		10963411	0					
ANR	10963438	Label	case ft_CID_encrypted :	805:4:25984:26005	10963411	2	True				
ANR	10963439	Identifier	ft_CID_encrypted		10963411	0					
ANR	10963440	Label	case ft_CID_TrueType :	806:4:26011:26031	10963411	3	True				
ANR	10963441	Identifier	ft_CID_TrueType		10963411	0					
ANR	10963442	Label	case ft_CID_bitmap :	807:4:26037:26055	10963411	4	True				
ANR	10963443	Identifier	ft_CID_bitmap		10963411	0					
ANR	10963444	Label	case ft_TrueType :	808:4:26061:26077	10963411	5	True				
ANR	10963445	Identifier	ft_TrueType		10963411	0					
ANR	10963446	ReturnStatement	return true ;	809:8:26087:26098	10963411	6	True				
ANR	10963447	Identifier	true		10963411	0					
ANR	10963448	Label	default :	810:4:26104:26111	10963411	7	True				
ANR	10963449	Identifier	default		10963411	0					
ANR	10963450	ReturnStatement	return false ;	811:8:26121:26133	10963411	8	True				
ANR	10963451	Identifier	false		10963411	0					
ANR	10963452	ReturnType	bool		10963411	1					
ANR	10963453	Identifier	zchar_show_width_only		10963411	2					
ANR	10963454	ParameterList	const gs_text_enum_t * penum		10963411	3					
ANR	10963455	Parameter	const gs_text_enum_t * penum	798:22:25798:25825	10963411	0	True				
ANR	10963456	ParameterType	const gs_text_enum_t *		10963411	0					
ANR	10963457	Identifier	penum		10963411	1					
ANR	10963458	CFGEntryNode	ENTRY		10963411		True				
ANR	10963459	CFGExitNode	EXIT		10963411		True				
ANR	10963460	Symbol	* penum		10963411						
ANR	10963461	Symbol	penum -> orig_font -> FontType		10963411						
ANR	10963462	Symbol	gs_text_is_width_only		10963411						
ANR	10963463	Symbol	penum		10963411						
ANR	10963464	Symbol	false		10963411						
ANR	10963465	Symbol	penum -> orig_font		10963411						
ANR	10963466	Symbol	true		10963411						
ANR	10963467	Symbol	* penum -> orig_font		10963411						
ANR	10963468	Symbol	* * penum		10963411						
ANR	10963469	Function	op_show_return_width	819:0:26382:27428							
ANR	10963470	FunctionDef	"op_show_return_width (i_ctx_t * i_ctx_p , uint npop , double * pwidth)"		10963469	0					
ANR	10963471	CompoundStatement		821:0:26459:27428	10963469	0					
ANR	10963472	IdentifierDeclStatement	uint index = op_show_find_index ( i_ctx_p ) ;	822:4:26465:26505	10963469	0	True				
ANR	10963473	IdentifierDecl	index = op_show_find_index ( i_ctx_p )		10963469	0					
ANR	10963474	IdentifierDeclType	uint		10963469	0					
ANR	10963475	Identifier	index		10963469	1					
ANR	10963476	AssignmentExpression	index = op_show_find_index ( i_ctx_p )		10963469	2		=			
ANR	10963477	Identifier	index		10963469	0					
ANR	10963478	CallExpression	op_show_find_index ( i_ctx_p )		10963469	1					
ANR	10963479	Callee	op_show_find_index		10963469	0					
ANR	10963480	Identifier	op_show_find_index		10963469	0					
ANR	10963481	ArgumentList	i_ctx_p		10963469	1					
ANR	10963482	Argument	i_ctx_p		10963469	0					
ANR	10963483	Identifier	i_ctx_p		10963469	0					
ANR	10963484	IdentifierDeclStatement	"es_ptr ep = ( es_ptr ) ref_stack_index ( & e_stack , index - ( snumpush - 1 ) ) ;"	823:4:26511:26581	10963469	1	True				
ANR	10963485	IdentifierDecl	"ep = ( es_ptr ) ref_stack_index ( & e_stack , index - ( snumpush - 1 ) )"		10963469	0					
ANR	10963486	IdentifierDeclType	es_ptr		10963469	0					
ANR	10963487	Identifier	ep		10963469	1					
ANR	10963488	AssignmentExpression	"ep = ( es_ptr ) ref_stack_index ( & e_stack , index - ( snumpush - 1 ) )"		10963469	2		=			
ANR	10963489	Identifier	ep		10963469	0					
ANR	10963490	CastExpression	"( es_ptr ) ref_stack_index ( & e_stack , index - ( snumpush - 1 ) )"		10963469	1					
ANR	10963491	CastTarget	es_ptr		10963469	0					
ANR	10963492	CallExpression	"ref_stack_index ( & e_stack , index - ( snumpush - 1 ) )"		10963469	1					
ANR	10963493	Callee	ref_stack_index		10963469	0					
ANR	10963494	Identifier	ref_stack_index		10963469	0					
ANR	10963495	ArgumentList	& e_stack		10963469	1					
ANR	10963496	Argument	& e_stack		10963469	0					
ANR	10963497	UnaryOperationExpression	& e_stack		10963469	0					
ANR	10963498	UnaryOperator	&		10963469	0					
ANR	10963499	Identifier	e_stack		10963469	1					
ANR	10963500	Argument	index - ( snumpush - 1 )		10963469	1					
ANR	10963501	AdditiveExpression	index - ( snumpush - 1 )		10963469	0		-			
ANR	10963502	Identifier	index		10963469	0					
ANR	10963503	AdditiveExpression	snumpush - 1		10963469	1		-			
ANR	10963504	Identifier	snumpush		10963469	0					
ANR	10963505	PrimaryExpression	1		10963469	1					
ANR	10963506	IdentifierDeclStatement	"int code = gs_text_setcharwidth ( esenum ( ep ) , pwidth ) ;"	824:4:26587:26638	10963469	2	True				
ANR	10963507	IdentifierDecl	"code = gs_text_setcharwidth ( esenum ( ep ) , pwidth )"		10963469	0					
ANR	10963508	IdentifierDeclType	int		10963469	0					
ANR	10963509	Identifier	code		10963469	1					
ANR	10963510	AssignmentExpression	"code = gs_text_setcharwidth ( esenum ( ep ) , pwidth )"		10963469	2		=			
ANR	10963511	Identifier	code		10963469	0					
ANR	10963512	CallExpression	"gs_text_setcharwidth ( esenum ( ep ) , pwidth )"		10963469	1					
ANR	10963513	Callee	gs_text_setcharwidth		10963469	0					
ANR	10963514	Identifier	gs_text_setcharwidth		10963469	0					
ANR	10963515	ArgumentList	esenum ( ep )		10963469	1					
ANR	10963516	Argument	esenum ( ep )		10963469	0					
ANR	10963517	CallExpression	esenum ( ep )		10963469	0					
ANR	10963518	Callee	esenum		10963469	0					
ANR	10963519	Identifier	esenum		10963469	0					
ANR	10963520	ArgumentList	ep		10963469	1					
ANR	10963521	Argument	ep		10963469	0					
ANR	10963522	Identifier	ep		10963469	0					
ANR	10963523	Argument	pwidth		10963469	1					
ANR	10963524	Identifier	pwidth		10963469	0					
ANR	10963525	IdentifierDeclStatement	"uint ocount , dsaved , dcount ;"	825:4:26644:26671	10963469	3	True				
ANR	10963526	IdentifierDecl	ocount		10963469	0					
ANR	10963527	IdentifierDeclType	uint		10963469	0					
ANR	10963528	Identifier	ocount		10963469	1					
ANR	10963529	IdentifierDecl	dsaved		10963469	1					
ANR	10963530	IdentifierDeclType	uint		10963469	0					
ANR	10963531	Identifier	dsaved		10963469	1					
ANR	10963532	IdentifierDecl	dcount		10963469	2					
ANR	10963533	IdentifierDeclType	uint		10963469	0					
ANR	10963534	Identifier	dcount		10963469	1					
ANR	10963535	IfStatement	if ( code < 0 )		10963469	4					
ANR	10963536	Condition	code < 0	827:8:26682:26689	10963469	0	True				
ANR	10963537	RelationalExpression	code < 0		10963469	0		<			
ANR	10963538	Identifier	code		10963469	0					
ANR	10963539	PrimaryExpression	0		10963469	1					
ANR	10963540	ReturnStatement	return code ;	828:8:26700:26711	10963469	1	True				
ANR	10963541	Identifier	code		10963469	0					
ANR	10963542	ExpressionStatement	ocount = ref_stack_count ( & o_stack ) - ( uint ) esodepth ( ep ) . value . intval	830:4:26770:26839	10963469	5	True				
ANR	10963543	AssignmentExpression	ocount = ref_stack_count ( & o_stack ) - ( uint ) esodepth ( ep ) . value . intval		10963469	0		=			
ANR	10963544	Identifier	ocount		10963469	0					
ANR	10963545	AdditiveExpression	ref_stack_count ( & o_stack ) - ( uint ) esodepth ( ep ) . value . intval		10963469	1		-			
ANR	10963546	CallExpression	ref_stack_count ( & o_stack )		10963469	0					
ANR	10963547	Callee	ref_stack_count		10963469	0					
ANR	10963548	Identifier	ref_stack_count		10963469	0					
ANR	10963549	ArgumentList	& o_stack		10963469	1					
ANR	10963550	Argument	& o_stack		10963469	0					
ANR	10963551	UnaryOperationExpression	& o_stack		10963469	0					
ANR	10963552	UnaryOperator	&		10963469	0					
ANR	10963553	Identifier	o_stack		10963469	1					
ANR	10963554	CastExpression	( uint ) esodepth ( ep ) . value . intval		10963469	1					
ANR	10963555	CastTarget	uint		10963469	0					
ANR	10963556	MemberAccess	esodepth ( ep ) . value . intval		10963469	1					
ANR	10963557	MemberAccess	esodepth ( ep ) . value		10963469	0					
ANR	10963558	CallExpression	esodepth ( ep )		10963469	0					
ANR	10963559	Callee	esodepth		10963469	0					
ANR	10963560	Identifier	esodepth		10963469	0					
ANR	10963561	ArgumentList	ep		10963469	1					
ANR	10963562	Argument	ep		10963469	0					
ANR	10963563	Identifier	ep		10963469	0					
ANR	10963564	Identifier	value		10963469	1					
ANR	10963565	Identifier	intval		10963469	1					
ANR	10963566	IfStatement	if ( ocount < npop )		10963469	6					
ANR	10963567	Condition	ocount < npop	831:8:26849:26861	10963469	0	True				
ANR	10963568	RelationalExpression	ocount < npop		10963469	0		<			
ANR	10963569	Identifier	ocount		10963469	0					
ANR	10963570	Identifier	npop		10963469	1					
ANR	10963571	ExpressionStatement	return_error ( gs_error_stackunderflow )	832:8:26872:26909	10963469	1	True				
ANR	10963572	CallExpression	return_error ( gs_error_stackunderflow )		10963469	0					
ANR	10963573	Callee	return_error		10963469	0					
ANR	10963574	Identifier	return_error		10963469	0					
ANR	10963575	ArgumentList	gs_error_stackunderflow		10963469	1					
ANR	10963576	Argument	gs_error_stackunderflow		10963469	0					
ANR	10963577	Identifier	gs_error_stackunderflow		10963469	0					
ANR	10963578	ExpressionStatement	dsaved = ( uint ) esddepth ( ep ) . value . intval	833:4:26915:26956	10963469	7	True				
ANR	10963579	AssignmentExpression	dsaved = ( uint ) esddepth ( ep ) . value . intval		10963469	0		=			
ANR	10963580	Identifier	dsaved		10963469	0					
ANR	10963581	CastExpression	( uint ) esddepth ( ep ) . value . intval		10963469	1					
ANR	10963582	CastTarget	uint		10963469	0					
ANR	10963583	MemberAccess	esddepth ( ep ) . value . intval		10963469	1					
ANR	10963584	MemberAccess	esddepth ( ep ) . value		10963469	0					
ANR	10963585	CallExpression	esddepth ( ep )		10963469	0					
ANR	10963586	Callee	esddepth		10963469	0					
ANR	10963587	Identifier	esddepth		10963469	0					
ANR	10963588	ArgumentList	ep		10963469	1					
ANR	10963589	Argument	ep		10963469	0					
ANR	10963590	Identifier	ep		10963469	0					
ANR	10963591	Identifier	value		10963469	1					
ANR	10963592	Identifier	intval		10963469	1					
ANR	10963593	ExpressionStatement	dcount = ref_stack_count ( & d_stack )	834:4:26962:26996	10963469	8	True				
ANR	10963594	AssignmentExpression	dcount = ref_stack_count ( & d_stack )		10963469	0		=			
ANR	10963595	Identifier	dcount		10963469	0					
ANR	10963596	CallExpression	ref_stack_count ( & d_stack )		10963469	1					
ANR	10963597	Callee	ref_stack_count		10963469	0					
ANR	10963598	Identifier	ref_stack_count		10963469	0					
ANR	10963599	ArgumentList	& d_stack		10963469	1					
ANR	10963600	Argument	& d_stack		10963469	0					
ANR	10963601	UnaryOperationExpression	& d_stack		10963469	0					
ANR	10963602	UnaryOperator	&		10963469	0					
ANR	10963603	Identifier	d_stack		10963469	1					
ANR	10963604	IfStatement	if ( dcount < dsaved )		10963469	9					
ANR	10963605	Condition	dcount < dsaved	835:8:27006:27020	10963469	0	True				
ANR	10963606	RelationalExpression	dcount < dsaved		10963469	0		<			
ANR	10963607	Identifier	dcount		10963469	0					
ANR	10963608	Identifier	dsaved		10963469	1					
ANR	10963609	ExpressionStatement	return_error ( gs_error_dictstackunderflow )	836:8:27031:27072	10963469	1	True				
ANR	10963610	CallExpression	return_error ( gs_error_dictstackunderflow )		10963469	0					
ANR	10963611	Callee	return_error		10963469	0					
ANR	10963612	Identifier	return_error		10963469	0					
ANR	10963613	ArgumentList	gs_error_dictstackunderflow		10963469	1					
ANR	10963614	Argument	gs_error_dictstackunderflow		10963469	0					
ANR	10963615	Identifier	gs_error_dictstackunderflow		10963469	0					
ANR	10963616	WhileStatement	while ( dcount > dsaved )		10963469	10					
ANR	10963617	Condition	dcount > dsaved	837:11:27085:27099	10963469	0	True				
ANR	10963618	RelationalExpression	dcount > dsaved		10963469	0		>			
ANR	10963619	Identifier	dcount		10963469	0					
ANR	10963620	Identifier	dsaved		10963469	1					
ANR	10963621	CompoundStatement		17:28:642:642	10963469	1					
ANR	10963622	ExpressionStatement	code = zend ( i_ctx_p )	838:8:27112:27132	10963469	0	True				
ANR	10963623	AssignmentExpression	code = zend ( i_ctx_p )		10963469	0		=			
ANR	10963624	Identifier	code		10963469	0					
ANR	10963625	CallExpression	zend ( i_ctx_p )		10963469	1					
ANR	10963626	Callee	zend		10963469	0					
ANR	10963627	Identifier	zend		10963469	0					
ANR	10963628	ArgumentList	i_ctx_p		10963469	1					
ANR	10963629	Argument	i_ctx_p		10963469	0					
ANR	10963630	Identifier	i_ctx_p		10963469	0					
ANR	10963631	IfStatement	if ( code < 0 )		10963469	1					
ANR	10963632	Condition	code < 0	839:12:27146:27153	10963469	0	True				
ANR	10963633	RelationalExpression	code < 0		10963469	0		<			
ANR	10963634	Identifier	code		10963469	0					
ANR	10963635	PrimaryExpression	0		10963469	1					
ANR	10963636	ReturnStatement	return code ;	840:12:27168:27179	10963469	1	True				
ANR	10963637	Identifier	code		10963469	0					
ANR	10963638	ExpressionStatement	dcount --	841:8:27189:27197	10963469	2	True				
ANR	10963639	PostIncDecOperationExpression	dcount --		10963469	0					
ANR	10963640	Identifier	dcount		10963469	0					
ANR	10963641	IncDec	--		10963469	1					
ANR	10963642	ExpressionStatement	"ref_stack_pop ( & o_stack , ocount )"	843:4:27209:27240	10963469	11	True				
ANR	10963643	CallExpression	"ref_stack_pop ( & o_stack , ocount )"		10963469	0					
ANR	10963644	Callee	ref_stack_pop		10963469	0					
ANR	10963645	Identifier	ref_stack_pop		10963469	0					
ANR	10963646	ArgumentList	& o_stack		10963469	1					
ANR	10963647	Argument	& o_stack		10963469	0					
ANR	10963648	UnaryOperationExpression	& o_stack		10963469	0					
ANR	10963649	UnaryOperator	&		10963469	0					
ANR	10963650	Identifier	o_stack		10963469	1					
ANR	10963651	Argument	ocount		10963469	1					
ANR	10963652	Identifier	ocount		10963469	0					
ANR	10963653	ExpressionStatement	"pop_estack ( i_ctx_p , index - snumpush )"	846:4:27364:27401	10963469	12	True				
ANR	10963654	CallExpression	"pop_estack ( i_ctx_p , index - snumpush )"		10963469	0					
ANR	10963655	Callee	pop_estack		10963469	0					
ANR	10963656	Identifier	pop_estack		10963469	0					
ANR	10963657	ArgumentList	i_ctx_p		10963469	1					
ANR	10963658	Argument	i_ctx_p		10963469	0					
ANR	10963659	Identifier	i_ctx_p		10963469	0					
ANR	10963660	Argument	index - snumpush		10963469	1					
ANR	10963661	AdditiveExpression	index - snumpush		10963469	0		-			
ANR	10963662	Identifier	index		10963469	0					
ANR	10963663	Identifier	snumpush		10963469	1					
ANR	10963664	ReturnStatement	return o_pop_estack ;	847:4:27407:27426	10963469	13	True				
ANR	10963665	Identifier	o_pop_estack		10963469	0					
ANR	10963666	ReturnType	static int		10963469	1					
ANR	10963667	Identifier	op_show_return_width		10963469	2					
ANR	10963668	ParameterList	"i_ctx_t * i_ctx_p , uint npop , double * pwidth"		10963469	3					
ANR	10963669	Parameter	i_ctx_t * i_ctx_p	820:21:26414:26429	10963469	0	True				
ANR	10963670	ParameterType	i_ctx_t *		10963469	0					
ANR	10963671	Identifier	i_ctx_p		10963469	1					
ANR	10963672	Parameter	uint npop	820:39:26432:26440	10963469	1	True				
ANR	10963673	ParameterType	uint		10963469	0					
ANR	10963674	Identifier	npop		10963469	1					
ANR	10963675	Parameter	double * pwidth	820:50:26443:26456	10963469	2	True				
ANR	10963676	ParameterType	double *		10963469	0					
ANR	10963677	Identifier	pwidth		10963469	1					
ANR	10963678	CFGEntryNode	ENTRY		10963469		True				
ANR	10963679	CFGExitNode	EXIT		10963469		True				
ANR	10963680	Symbol	ref_stack_index		10963469						
ANR	10963681	Symbol	code		10963469						
ANR	10963682	Symbol	dsaved		10963469						
ANR	10963683	Symbol	gs_text_setcharwidth		10963469						
ANR	10963684	Symbol	pwidth		10963469						
ANR	10963685	Symbol	o_pop_estack		10963469						
ANR	10963686	Symbol	op_show_find_index		10963469						
ANR	10963687	Symbol	npop		10963469						
ANR	10963688	Symbol	ocount		10963469						
ANR	10963689	Symbol	esddepth ( ep ) . value		10963469						
ANR	10963690	Symbol	esddepth ( ep ) . value . intval		10963469						
ANR	10963691	Symbol	esddepth		10963469						
ANR	10963692	Symbol	& d_stack		10963469						
ANR	10963693	Symbol	zend		10963469						
ANR	10963694	Symbol	dcount		10963469						
ANR	10963695	Symbol	esodepth ( ep ) . value . intval		10963469						
ANR	10963696	Symbol	index		10963469						
ANR	10963697	Symbol	ep		10963469						
ANR	10963698	Symbol	esenum		10963469						
ANR	10963699	Symbol	gs_error_stackunderflow		10963469						
ANR	10963700	Symbol	i_ctx_p		10963469						
ANR	10963701	Symbol	& o_stack		10963469						
ANR	10963702	Symbol	esodepth ( ep ) . value		10963469						
ANR	10963703	Symbol	ref_stack_count		10963469						
ANR	10963704	Symbol	esodepth		10963469						
ANR	10963705	Symbol	snumpush		10963469						
ANR	10963706	Symbol	& e_stack		10963469						
ANR	10963707	Symbol	gs_error_dictstackunderflow		10963469						
ANR	10963708	Function	op_show_restore	854:0:27579:29777							
ANR	10963709	FunctionDef	"op_show_restore (i_ctx_t * i_ctx_p , bool for_error)"		10963708	0					
ANR	10963710	CompoundStatement		856:0:27640:29777	10963708	0					
ANR	10963711	Statement	register	857:4:27646:27653	10963708	0	True				
ANR	10963712	IdentifierDeclStatement	es_ptr ep = esp + snumpush ;	857:13:27655:27681	10963708	1	True				
ANR	10963713	IdentifierDecl	ep = esp + snumpush		10963708	0					
ANR	10963714	IdentifierDeclType	es_ptr		10963708	0					
ANR	10963715	Identifier	ep		10963708	1					
ANR	10963716	AssignmentExpression	ep = esp + snumpush		10963708	2		=			
ANR	10963717	Identifier	ep		10963708	0					
ANR	10963718	AdditiveExpression	esp + snumpush		10963708	1		+			
ANR	10963719	Identifier	esp		10963708	0					
ANR	10963720	Identifier	snumpush		10963708	1					
ANR	10963721	IdentifierDeclStatement	gs_text_enum_t * penum = esenum ( ep ) ;	858:4:27687:27721	10963708	2	True				
ANR	10963722	IdentifierDecl	* penum = esenum ( ep )		10963708	0					
ANR	10963723	IdentifierDeclType	gs_text_enum_t *		10963708	0					
ANR	10963724	Identifier	penum		10963708	1					
ANR	10963725	AssignmentExpression	* penum = esenum ( ep )		10963708	2		=			
ANR	10963726	Identifier	penum		10963708	0					
ANR	10963727	CallExpression	esenum ( ep )		10963708	1					
ANR	10963728	Callee	esenum		10963708	0					
ANR	10963729	Identifier	esenum		10963708	0					
ANR	10963730	ArgumentList	ep		10963708	1					
ANR	10963731	Argument	ep		10963708	0					
ANR	10963732	Identifier	ep		10963708	0					
ANR	10963733	IdentifierDeclStatement	int saved_level = esgslevel ( ep ) . value . intval ;	859:4:27727:27771	10963708	3	True				
ANR	10963734	IdentifierDecl	saved_level = esgslevel ( ep ) . value . intval		10963708	0					
ANR	10963735	IdentifierDeclType	int		10963708	0					
ANR	10963736	Identifier	saved_level		10963708	1					
ANR	10963737	AssignmentExpression	saved_level = esgslevel ( ep ) . value . intval		10963708	2		=			
ANR	10963738	Identifier	saved_level		10963708	0					
ANR	10963739	MemberAccess	esgslevel ( ep ) . value . intval		10963708	1					
ANR	10963740	MemberAccess	esgslevel ( ep ) . value		10963708	0					
ANR	10963741	CallExpression	esgslevel ( ep )		10963708	0					
ANR	10963742	Callee	esgslevel		10963708	0					
ANR	10963743	Identifier	esgslevel		10963708	0					
ANR	10963744	ArgumentList	ep		10963708	1					
ANR	10963745	Argument	ep		10963708	0					
ANR	10963746	Identifier	ep		10963708	0					
ANR	10963747	Identifier	value		10963708	1					
ANR	10963748	Identifier	intval		10963708	1					
ANR	10963749	IdentifierDeclStatement	int code = 0 ;	860:4:27777:27789	10963708	4	True				
ANR	10963750	IdentifierDecl	code = 0		10963708	0					
ANR	10963751	IdentifierDeclType	int		10963708	0					
ANR	10963752	Identifier	code		10963708	1					
ANR	10963753	AssignmentExpression	code = 0		10963708	2		=			
ANR	10963754	Identifier	code		10963708	0					
ANR	10963755	PrimaryExpression	0		10963708	1					
ANR	10963756	IfStatement	if ( for_error )		10963708	5					
ANR	10963757	Condition	for_error	862:8:27800:27808	10963708	0	True				
ANR	10963758	Identifier	for_error		10963708	0					
ANR	10963759	CompoundStatement		11:8:348:386	10963708	1					
ANR	10963760	Statement	CPSI	864:9:27876:27879	10963708	0	True				
ANR	10963761	Statement	doesn	864:14:27881:27885	10963708	1	True				
ANR	10963762	Statement	t	864:20:27887:27887	10963708	2	True				
ANR	10963763	Statement	remove	864:22:27889:27894	10963708	3	True				
ANR	10963764	Statement	cshow	864:29:27896:27900	10963708	4	True				
ANR	10963765	Statement	","	864:34:27901:27901	10963708	5	True				
ANR	10963766	Statement	kshow	864:36:27903:27907	10963708	6	True				
ANR	10963767	Statement	proc	864:42:27909:27912	10963708	7	True				
ANR	10963768	Statement	operands	864:47:27914:27921	10963708	8	True				
ANR	10963769	Statement	.	864:55:27922:27922	10963708	9	True				
ANR	10963770	Statement	*	864:57:27924:27924	10963708	10	True				
ANR	10963771	Statement	/	864:58:27925:27925	10963708	11	True				
ANR	10963772	IdentifierDeclStatement	uint saved_count = esodepth ( ep ) . value . intval ;	865:8:27935:27979	10963708	12	True				
ANR	10963773	IdentifierDecl	saved_count = esodepth ( ep ) . value . intval		10963708	0					
ANR	10963774	IdentifierDeclType	uint		10963708	0					
ANR	10963775	Identifier	saved_count		10963708	1					
ANR	10963776	AssignmentExpression	saved_count = esodepth ( ep ) . value . intval		10963708	2		=			
ANR	10963777	Identifier	saved_count		10963708	0					
ANR	10963778	MemberAccess	esodepth ( ep ) . value . intval		10963708	1					
ANR	10963779	MemberAccess	esodepth ( ep ) . value		10963708	0					
ANR	10963780	CallExpression	esodepth ( ep )		10963708	0					
ANR	10963781	Callee	esodepth		10963708	0					
ANR	10963782	Identifier	esodepth		10963708	0					
ANR	10963783	ArgumentList	ep		10963708	1					
ANR	10963784	Argument	ep		10963708	0					
ANR	10963785	Identifier	ep		10963708	0					
ANR	10963786	Identifier	value		10963708	1					
ANR	10963787	Identifier	intval		10963708	1					
ANR	10963788	IdentifierDeclStatement	uint count = ref_stack_count ( & o_stack ) ;	866:8:27989:28027	10963708	13	True				
ANR	10963789	IdentifierDecl	count = ref_stack_count ( & o_stack )		10963708	0					
ANR	10963790	IdentifierDeclType	uint		10963708	0					
ANR	10963791	Identifier	count		10963708	1					
ANR	10963792	AssignmentExpression	count = ref_stack_count ( & o_stack )		10963708	2		=			
ANR	10963793	Identifier	count		10963708	0					
ANR	10963794	CallExpression	ref_stack_count ( & o_stack )		10963708	1					
ANR	10963795	Callee	ref_stack_count		10963708	0					
ANR	10963796	Identifier	ref_stack_count		10963708	0					
ANR	10963797	ArgumentList	& o_stack		10963708	1					
ANR	10963798	Argument	& o_stack		10963708	0					
ANR	10963799	UnaryOperationExpression	& o_stack		10963708	0					
ANR	10963800	UnaryOperator	&		10963708	0					
ANR	10963801	Identifier	o_stack		10963708	1					
ANR	10963802	IfStatement	if ( count > saved_count )		10963708	14					
ANR	10963803	Condition	count > saved_count	868:12:28042:28060	10963708	0	True				
ANR	10963804	RelationalExpression	count > saved_count		10963708	0		>			
ANR	10963805	Identifier	count		10963708	0					
ANR	10963806	Identifier	saved_count		10963708	1					
ANR	10963807	ExpressionStatement	"ref_stack_pop ( & o_stack , count - saved_count )"	869:12:28104:28148	10963708	1	True				
ANR	10963808	CallExpression	"ref_stack_pop ( & o_stack , count - saved_count )"		10963708	0					
ANR	10963809	Callee	ref_stack_pop		10963708	0					
ANR	10963810	Identifier	ref_stack_pop		10963708	0					
ANR	10963811	ArgumentList	& o_stack		10963708	1					
ANR	10963812	Argument	& o_stack		10963708	0					
ANR	10963813	UnaryOperationExpression	& o_stack		10963708	0					
ANR	10963814	UnaryOperator	&		10963708	0					
ANR	10963815	Identifier	o_stack		10963708	1					
ANR	10963816	Argument	count - saved_count		10963708	1					
ANR	10963817	AdditiveExpression	count - saved_count		10963708	0		-			
ANR	10963818	Identifier	count		10963708	0					
ANR	10963819	Identifier	saved_count		10963708	1					
ANR	10963820	IfStatement	if ( ep [ 1 ] . value . opproc == op_show_continue && penum -> enum_client_data != NULL )		10963708	15					
ANR	10963821	Condition	ep [ 1 ] . value . opproc == op_show_continue && penum -> enum_client_data != NULL	871:12:28169:28241	10963708	0	True				
ANR	10963822	AndExpression	ep [ 1 ] . value . opproc == op_show_continue && penum -> enum_client_data != NULL		10963708	0		&&			
ANR	10963823	EqualityExpression	ep [ 1 ] . value . opproc == op_show_continue		10963708	0		==			
ANR	10963824	MemberAccess	ep [ 1 ] . value . opproc		10963708	0					
ANR	10963825	MemberAccess	ep [ 1 ] . value		10963708	0					
ANR	10963826	ArrayIndexing	ep [ 1 ]		10963708	0					
ANR	10963827	Identifier	ep		10963708	0					
ANR	10963828	PrimaryExpression	1		10963708	1					
ANR	10963829	Identifier	value		10963708	1					
ANR	10963830	Identifier	opproc		10963708	1					
ANR	10963831	Identifier	op_show_continue		10963708	1					
ANR	10963832	EqualityExpression	penum -> enum_client_data != NULL		10963708	1		!=			
ANR	10963833	PtrMemberAccess	penum -> enum_client_data		10963708	0					
ANR	10963834	Identifier	penum		10963708	0					
ANR	10963835	Identifier	enum_client_data		10963708	1					
ANR	10963836	Identifier	NULL		10963708	1					
ANR	10963837	CompoundStatement		18:12:705:719	10963708	1					
ANR	10963838	IdentifierDeclStatement	op_proc_t proc ;	873:12:28346:28360	10963708	0	True				
ANR	10963839	IdentifierDecl	proc		10963708	0					
ANR	10963840	IdentifierDeclType	op_proc_t		10963708	0					
ANR	10963841	Identifier	proc		10963708	1					
ANR	10963842	ExpressionStatement	* ( void * * ) & proc = penum -> enum_client_data	875:12:28375:28416	10963708	1	True				
ANR	10963843	AssignmentExpression	* ( void * * ) & proc = penum -> enum_client_data		10963708	0		=			
ANR	10963844	UnaryOperationExpression	* ( void * * ) & proc		10963708	0					
ANR	10963845	UnaryOperator	*		10963708	0					
ANR	10963846	CastExpression	( void * * ) & proc		10963708	1					
ANR	10963847	CastTarget	void * *		10963708	0					
ANR	10963848	UnaryOperationExpression	& proc		10963708	1					
ANR	10963849	UnaryOperator	&		10963708	0					
ANR	10963850	Identifier	proc		10963708	1					
ANR	10963851	PtrMemberAccess	penum -> enum_client_data		10963708	1					
ANR	10963852	Identifier	penum		10963708	0					
ANR	10963853	Identifier	enum_client_data		10963708	1					
ANR	10963854	ExpressionStatement	"make_op_estack ( ep + 1 , proc )"	876:12:28430:28458	10963708	2	True				
ANR	10963855	CallExpression	"make_op_estack ( ep + 1 , proc )"		10963708	0					
ANR	10963856	Callee	make_op_estack		10963708	0					
ANR	10963857	Identifier	make_op_estack		10963708	0					
ANR	10963858	ArgumentList	ep + 1		10963708	1					
ANR	10963859	Argument	ep + 1		10963708	0					
ANR	10963860	AdditiveExpression	ep + 1		10963708	0		+			
ANR	10963861	Identifier	ep		10963708	0					
ANR	10963862	PrimaryExpression	1		10963708	1					
ANR	10963863	Argument	proc		10963708	1					
ANR	10963864	Identifier	proc		10963708	0					
ANR	10963865	IfStatement	if ( SHOW_IS_STRINGWIDTH ( penum ) && igs -> text_rendering_mode != 3 )		10963708	6					
ANR	10963866	Condition	SHOW_IS_STRINGWIDTH ( penum ) && igs -> text_rendering_mode != 3	879:8:28484:28542	10963708	0	True				
ANR	10963867	AndExpression	SHOW_IS_STRINGWIDTH ( penum ) && igs -> text_rendering_mode != 3		10963708	0		&&			
ANR	10963868	CallExpression	SHOW_IS_STRINGWIDTH ( penum )		10963708	0					
ANR	10963869	Callee	SHOW_IS_STRINGWIDTH		10963708	0					
ANR	10963870	Identifier	SHOW_IS_STRINGWIDTH		10963708	0					
ANR	10963871	ArgumentList	penum		10963708	1					
ANR	10963872	Argument	penum		10963708	0					
ANR	10963873	Identifier	penum		10963708	0					
ANR	10963874	EqualityExpression	igs -> text_rendering_mode != 3		10963708	1		!=			
ANR	10963875	PtrMemberAccess	igs -> text_rendering_mode		10963708	0					
ANR	10963876	Identifier	igs		10963708	0					
ANR	10963877	Identifier	text_rendering_mode		10963708	1					
ANR	10963878	PrimaryExpression	3		10963708	1					
ANR	10963879	CompoundStatement		24:69:904:904	10963708	1					
ANR	10963880	ExpressionStatement	-- saved_level	881:8:28601:28614	10963708	0	True				
ANR	10963881	UnaryExpression	-- saved_level		10963708	0					
ANR	10963882	IncDec	--		10963708	0					
ANR	10963883	Identifier	saved_level		10963708	1					
ANR	10963884	IfStatement	if ( penum -> text . operation & TEXT_REPLACE_WIDTHS )		10963708	7					
ANR	10963885	Condition	penum -> text . operation & TEXT_REPLACE_WIDTHS	883:8:28630:28672	10963708	0	True				
ANR	10963886	BitAndExpression	penum -> text . operation & TEXT_REPLACE_WIDTHS		10963708	0		&			
ANR	10963887	MemberAccess	penum -> text . operation		10963708	0					
ANR	10963888	PtrMemberAccess	penum -> text		10963708	0					
ANR	10963889	Identifier	penum		10963708	0					
ANR	10963890	Identifier	text		10963708	1					
ANR	10963891	Identifier	operation		10963708	1					
ANR	10963892	Identifier	TEXT_REPLACE_WIDTHS		10963708	1					
ANR	10963893	CompoundStatement		28:53:1034:1034	10963708	1					
ANR	10963894	ExpressionStatement	"gs_free_const_object ( penum -> memory , penum -> text . y_widths , ""y_widths"" )"	884:8:28685:28754	10963708	0	True				
ANR	10963895	CallExpression	"gs_free_const_object ( penum -> memory , penum -> text . y_widths , ""y_widths"" )"		10963708	0					
ANR	10963896	Callee	gs_free_const_object		10963708	0					
ANR	10963897	Identifier	gs_free_const_object		10963708	0					
ANR	10963898	ArgumentList	penum -> memory		10963708	1					
ANR	10963899	Argument	penum -> memory		10963708	0					
ANR	10963900	PtrMemberAccess	penum -> memory		10963708	0					
ANR	10963901	Identifier	penum		10963708	0					
ANR	10963902	Identifier	memory		10963708	1					
ANR	10963903	Argument	penum -> text . y_widths		10963708	1					
ANR	10963904	MemberAccess	penum -> text . y_widths		10963708	0					
ANR	10963905	PtrMemberAccess	penum -> text		10963708	0					
ANR	10963906	Identifier	penum		10963708	0					
ANR	10963907	Identifier	text		10963708	1					
ANR	10963908	Identifier	y_widths		10963708	1					
ANR	10963909	Argument	"""y_widths"""		10963708	2					
ANR	10963910	PrimaryExpression	"""y_widths"""		10963708	0					
ANR	10963911	IfStatement	if ( penum -> text . x_widths != penum -> text . y_widths )		10963708	1					
ANR	10963912	Condition	penum -> text . x_widths != penum -> text . y_widths	885:12:28768:28811	10963708	0	True				
ANR	10963913	EqualityExpression	penum -> text . x_widths != penum -> text . y_widths		10963708	0		!=			
ANR	10963914	MemberAccess	penum -> text . x_widths		10963708	0					
ANR	10963915	PtrMemberAccess	penum -> text		10963708	0					
ANR	10963916	Identifier	penum		10963708	0					
ANR	10963917	Identifier	text		10963708	1					
ANR	10963918	Identifier	x_widths		10963708	1					
ANR	10963919	MemberAccess	penum -> text . y_widths		10963708	1					
ANR	10963920	PtrMemberAccess	penum -> text		10963708	0					
ANR	10963921	Identifier	penum		10963708	0					
ANR	10963922	Identifier	text		10963708	1					
ANR	10963923	Identifier	y_widths		10963708	1					
ANR	10963924	ExpressionStatement	"gs_free_const_object ( penum -> memory , penum -> text . x_widths , ""x_widths"" )"	886:12:28826:28895	10963708	1	True				
ANR	10963925	CallExpression	"gs_free_const_object ( penum -> memory , penum -> text . x_widths , ""x_widths"" )"		10963708	0					
ANR	10963926	Callee	gs_free_const_object		10963708	0					
ANR	10963927	Identifier	gs_free_const_object		10963708	0					
ANR	10963928	ArgumentList	penum -> memory		10963708	1					
ANR	10963929	Argument	penum -> memory		10963708	0					
ANR	10963930	PtrMemberAccess	penum -> memory		10963708	0					
ANR	10963931	Identifier	penum		10963708	0					
ANR	10963932	Identifier	memory		10963708	1					
ANR	10963933	Argument	penum -> text . x_widths		10963708	1					
ANR	10963934	MemberAccess	penum -> text . x_widths		10963708	0					
ANR	10963935	PtrMemberAccess	penum -> text		10963708	0					
ANR	10963936	Identifier	penum		10963708	0					
ANR	10963937	Identifier	text		10963708	1					
ANR	10963938	Identifier	x_widths		10963708	1					
ANR	10963939	Argument	"""x_widths"""		10963708	2					
ANR	10963940	PrimaryExpression	"""x_widths"""		10963708	0					
ANR	10963941	ExpressionStatement	"gs_set_currentfont ( igs , penum -> orig_font )"	895:4:29291:29332	10963708	8	True				
ANR	10963942	CallExpression	"gs_set_currentfont ( igs , penum -> orig_font )"		10963708	0					
ANR	10963943	Callee	gs_set_currentfont		10963708	0					
ANR	10963944	Identifier	gs_set_currentfont		10963708	0					
ANR	10963945	ArgumentList	igs		10963708	1					
ANR	10963946	Argument	igs		10963708	0					
ANR	10963947	Identifier	igs		10963708	0					
ANR	10963948	Argument	penum -> orig_font		10963708	1					
ANR	10963949	PtrMemberAccess	penum -> orig_font		10963708	0					
ANR	10963950	Identifier	penum		10963708	0					
ANR	10963951	Identifier	orig_font		10963708	1					
ANR	10963952	WhileStatement	while ( igs -> level > saved_level && code >= 0 )		10963708	9					
ANR	10963953	Condition	igs -> level > saved_level && code >= 0	896:11:29345:29381	10963708	0	True				
ANR	10963954	AndExpression	igs -> level > saved_level && code >= 0		10963708	0		&&			
ANR	10963955	RelationalExpression	igs -> level > saved_level		10963708	0		>			
ANR	10963956	PtrMemberAccess	igs -> level		10963708	0					
ANR	10963957	Identifier	igs		10963708	0					
ANR	10963958	Identifier	level		10963708	1					
ANR	10963959	Identifier	saved_level		10963708	1					
ANR	10963960	RelationalExpression	code >= 0		10963708	1		>=			
ANR	10963961	Identifier	code		10963708	0					
ANR	10963962	PrimaryExpression	0		10963708	1					
ANR	10963963	CompoundStatement		41:50:1743:1743	10963708	1					
ANR	10963964	IfStatement	if ( igs -> saved == 0 || igs -> saved -> saved == 0 )		10963708	0					
ANR	10963965	Condition	igs -> saved == 0 || igs -> saved -> saved == 0	897:12:29398:29438	10963708	0	True				
ANR	10963966	OrExpression	igs -> saved == 0 || igs -> saved -> saved == 0		10963708	0		||			
ANR	10963967	EqualityExpression	igs -> saved == 0		10963708	0		==			
ANR	10963968	PtrMemberAccess	igs -> saved		10963708	0					
ANR	10963969	Identifier	igs		10963708	0					
ANR	10963970	Identifier	saved		10963708	1					
ANR	10963971	PrimaryExpression	0		10963708	1					
ANR	10963972	EqualityExpression	igs -> saved -> saved == 0		10963708	1		==			
ANR	10963973	PtrMemberAccess	igs -> saved -> saved		10963708	0					
ANR	10963974	PtrMemberAccess	igs -> saved		10963708	0					
ANR	10963975	Identifier	igs		10963708	0					
ANR	10963976	Identifier	saved		10963708	1					
ANR	10963977	Identifier	saved		10963708	1					
ANR	10963978	PrimaryExpression	0		10963708	1					
ANR	10963979	CompoundStatement		42:55:1800:1800	10963708	1					
ANR	10963980	ExpressionStatement	code = gs_note_error ( gs_error_Fatal )	902:12:29617:29653	10963708	0	True				
ANR	10963981	AssignmentExpression	code = gs_note_error ( gs_error_Fatal )		10963708	0		=			
ANR	10963982	Identifier	code		10963708	0					
ANR	10963983	CallExpression	gs_note_error ( gs_error_Fatal )		10963708	1					
ANR	10963984	Callee	gs_note_error		10963708	0					
ANR	10963985	Identifier	gs_note_error		10963708	0					
ANR	10963986	ArgumentList	gs_error_Fatal		10963708	1					
ANR	10963987	Argument	gs_error_Fatal		10963708	0					
ANR	10963988	Identifier	gs_error_Fatal		10963708	0					
ANR	10963989	ElseStatement	else		10963708	0					
ANR	10963990	ExpressionStatement	code = gs_grestore ( igs )	904:12:29682:29705	10963708	0	True				
ANR	10963991	AssignmentExpression	code = gs_grestore ( igs )		10963708	0		=			
ANR	10963992	Identifier	code		10963708	0					
ANR	10963993	CallExpression	gs_grestore ( igs )		10963708	1					
ANR	10963994	Callee	gs_grestore		10963708	0					
ANR	10963995	Identifier	gs_grestore		10963708	0					
ANR	10963996	ArgumentList	igs		10963708	1					
ANR	10963997	Argument	igs		10963708	0					
ANR	10963998	Identifier	igs		10963708	0					
ANR	10963999	ExpressionStatement	"gs_text_release ( penum , ""op_show_restore"" )"	906:4:29717:29758	10963708	10	True				
ANR	10964000	CallExpression	"gs_text_release ( penum , ""op_show_restore"" )"		10963708	0					
ANR	10964001	Callee	gs_text_release		10963708	0					
ANR	10964002	Identifier	gs_text_release		10963708	0					
ANR	10964003	ArgumentList	penum		10963708	1					
ANR	10964004	Argument	penum		10963708	0					
ANR	10964005	Identifier	penum		10963708	0					
ANR	10964006	Argument	"""op_show_restore"""		10963708	1					
ANR	10964007	PrimaryExpression	"""op_show_restore"""		10963708	0					
ANR	10964008	ReturnStatement	return code ;	907:4:29764:29775	10963708	11	True				
ANR	10964009	Identifier	code		10963708	0					
ANR	10964010	ReturnType	static int		10963708	1					
ANR	10964011	Identifier	op_show_restore		10963708	2					
ANR	10964012	ParameterList	"i_ctx_t * i_ctx_p , bool for_error"		10963708	3					
ANR	10964013	Parameter	i_ctx_t * i_ctx_p	855:16:27606:27621	10963708	0	True				
ANR	10964014	ParameterType	i_ctx_t *		10963708	0					
ANR	10964015	Identifier	i_ctx_p		10963708	1					
ANR	10964016	Parameter	bool for_error	855:34:27624:27637	10963708	1	True				
ANR	10964017	ParameterType	bool		10963708	0					
ANR	10964018	Identifier	for_error		10963708	1					
ANR	10964019	CFGEntryNode	ENTRY		10963708		True				
ANR	10964020	CFGExitNode	EXIT		10963708		True				
ANR	10964021	Symbol	* igs		10963708						
ANR	10964022	Symbol	igs -> level		10963708						
ANR	10964023	Symbol	* penum		10963708						
ANR	10964024	Symbol	penum -> text . operation		10963708						
ANR	10964025	Symbol	esp		10963708						
ANR	10964026	Symbol	code		10963708						
ANR	10964027	Symbol	penum -> memory		10963708						
ANR	10964028	Symbol	igs -> saved -> saved		10963708						
ANR	10964029	Symbol	* ( void * * ) & proc		10963708						
ANR	10964030	Symbol	penum -> text		10963708						
ANR	10964031	Symbol	esgslevel		10963708						
ANR	10964032	Symbol	gs_grestore		10963708						
ANR	10964033	Symbol	esgslevel ( ep ) . value . intval		10963708						
ANR	10964034	Symbol	penum -> enum_client_data		10963708						
ANR	10964035	Symbol	SHOW_IS_STRINGWIDTH		10963708						
ANR	10964036	Symbol	saved_level		10963708						
ANR	10964037	Symbol	igs		10963708						
ANR	10964038	Symbol	penum -> orig_font		10963708						
ANR	10964039	Symbol	for_error		10963708						
ANR	10964040	Symbol	* igs -> saved		10963708						
ANR	10964041	Symbol	& proc		10963708						
ANR	10964042	Symbol	gs_error_Fatal		10963708						
ANR	10964043	Symbol	proc		10963708						
ANR	10964044	Symbol	igs -> saved		10963708						
ANR	10964045	Symbol	NULL		10963708						
ANR	10964046	Symbol	esodepth ( ep ) . value . intval		10963708						
ANR	10964047	Symbol	penum		10963708						
ANR	10964048	Symbol	count		10963708						
ANR	10964049	Symbol	* * igs		10963708						
ANR	10964050	Symbol	ep		10963708						
ANR	10964051	Symbol	igs -> text_rendering_mode		10963708						
ANR	10964052	Symbol	penum -> text . x_widths		10963708						
ANR	10964053	Symbol	esenum		10963708						
ANR	10964054	Symbol	* ep		10963708						
ANR	10964055	Symbol	penum -> text . y_widths		10963708						
ANR	10964056	Symbol	gs_note_error		10963708						
ANR	10964057	Symbol	saved_count		10963708						
ANR	10964058	Symbol	ep [ 1 ] . value . opproc		10963708						
ANR	10964059	Symbol	i_ctx_p		10963708						
ANR	10964060	Symbol	& o_stack		10963708						
ANR	10964061	Symbol	esodepth ( ep ) . value		10963708						
ANR	10964062	Symbol	ref_stack_count		10963708						
ANR	10964063	Symbol	ep [ 1 ] . value		10963708						
ANR	10964064	Symbol	esodepth		10963708						
ANR	10964065	Symbol	TEXT_REPLACE_WIDTHS		10963708						
ANR	10964066	Symbol	snumpush		10963708						
ANR	10964067	Symbol	op_show_continue		10963708						
ANR	10964068	Symbol	esgslevel ( ep ) . value		10963708						
ANR	10964069	Function	op_show_cleanup	910:0:29810:29900							
ANR	10964070	FunctionDef	op_show_cleanup (i_ctx_t * i_ctx_p)		10964069	0					
ANR	10964071	CompoundStatement		912:0:29855:29900	10964069	0					
ANR	10964072	ReturnStatement	"return op_show_restore ( i_ctx_p , true ) ;"	913:4:29861:29898	10964069	0	True				
ANR	10964073	CallExpression	"op_show_restore ( i_ctx_p , true )"		10964069	0					
ANR	10964074	Callee	op_show_restore		10964069	0					
ANR	10964075	Identifier	op_show_restore		10964069	0					
ANR	10964076	ArgumentList	i_ctx_p		10964069	1					
ANR	10964077	Argument	i_ctx_p		10964069	0					
ANR	10964078	Identifier	i_ctx_p		10964069	0					
ANR	10964079	Argument	true		10964069	1					
ANR	10964080	Identifier	true		10964069	0					
ANR	10964081	ReturnType	static int		10964069	1					
ANR	10964082	Identifier	op_show_cleanup		10964069	2					
ANR	10964083	ParameterList	i_ctx_t * i_ctx_p		10964069	3					
ANR	10964084	Parameter	i_ctx_t * i_ctx_p	911:16:29837:29852	10964069	0	True				
ANR	10964085	ParameterType	i_ctx_t *		10964069	0					
ANR	10964086	Identifier	i_ctx_p		10964069	1					
ANR	10964087	CFGEntryNode	ENTRY		10964069		True				
ANR	10964088	CFGExitNode	EXIT		10964069		True				
ANR	10964089	Symbol	i_ctx_p		10964069						
ANR	10964090	Symbol	op_show_restore		10964069						
ANR	10964091	Symbol	true		10964069						
ANR	10964092	Function	op_show_free	916:0:29956:30127							
ANR	10964093	FunctionDef	"op_show_free (i_ctx_t * i_ctx_p , int code)"		10964092	0					
ANR	10964094	CompoundStatement		918:0:30001:30127	10964092	0					
ANR	10964095	IdentifierDeclStatement	int rcode ;	919:4:30007:30016	10964092	0	True				
ANR	10964096	IdentifierDecl	rcode		10964092	0					
ANR	10964097	IdentifierDeclType	int		10964092	0					
ANR	10964098	Identifier	rcode		10964092	1					
ANR	10964099	ExpressionStatement	esp -= snumpush	921:4:30023:30038	10964092	1	True				
ANR	10964100	AssignmentExpression	esp -= snumpush		10964092	0		-=			
ANR	10964101	Identifier	esp		10964092	0					
ANR	10964102	Identifier	snumpush		10964092	1					
ANR	10964103	ExpressionStatement	"rcode = op_show_restore ( i_ctx_p , code < 0 )"	922:4:30044:30086	10964092	2	True				
ANR	10964104	AssignmentExpression	"rcode = op_show_restore ( i_ctx_p , code < 0 )"		10964092	0		=			
ANR	10964105	Identifier	rcode		10964092	0					
ANR	10964106	CallExpression	"op_show_restore ( i_ctx_p , code < 0 )"		10964092	1					
ANR	10964107	Callee	op_show_restore		10964092	0					
ANR	10964108	Identifier	op_show_restore		10964092	0					
ANR	10964109	ArgumentList	i_ctx_p		10964092	1					
ANR	10964110	Argument	i_ctx_p		10964092	0					
ANR	10964111	Identifier	i_ctx_p		10964092	0					
ANR	10964112	Argument	code < 0		10964092	1					
ANR	10964113	RelationalExpression	code < 0		10964092	0		<			
ANR	10964114	Identifier	code		10964092	0					
ANR	10964115	PrimaryExpression	0		10964092	1					
ANR	10964116	ReturnStatement	return ( rcode < 0 ? rcode : code ) ;	923:4:30092:30125	10964092	3	True				
ANR	10964117	ConditionalExpression	rcode < 0 ? rcode : code		10964092	0					
ANR	10964118	Condition	rcode < 0		10964092	0					
ANR	10964119	RelationalExpression	rcode < 0		10964092	0		<			
ANR	10964120	Identifier	rcode		10964092	0					
ANR	10964121	PrimaryExpression	0		10964092	1					
ANR	10964122	Identifier	rcode		10964092	1					
ANR	10964123	Identifier	code		10964092	2					
ANR	10964124	ReturnType	int		10964092	1					
ANR	10964125	Identifier	op_show_free		10964092	2					
ANR	10964126	ParameterList	"i_ctx_t * i_ctx_p , int code"		10964092	3					
ANR	10964127	Parameter	i_ctx_t * i_ctx_p	917:13:29973:29988	10964092	0	True				
ANR	10964128	ParameterType	i_ctx_t *		10964092	0					
ANR	10964129	Identifier	i_ctx_p		10964092	1					
ANR	10964130	Parameter	int code	917:31:29991:29998	10964092	1	True				
ANR	10964131	ParameterType	int		10964092	0					
ANR	10964132	Identifier	code		10964092	1					
ANR	10964133	CFGEntryNode	ENTRY		10964092		True				
ANR	10964134	CFGExitNode	EXIT		10964092		True				
ANR	10964135	Symbol	code		10964092						
ANR	10964136	Symbol	esp		10964092						
ANR	10964137	Symbol	i_ctx_p		10964092						
ANR	10964138	Symbol	op_show_restore		10964092						
ANR	10964139	Symbol	rcode		10964092						
ANR	10964140	Symbol	snumpush		10964092						
ANR	10964141	Function	font_bbox_param	927:0:30185:31792							
ANR	10964142	FunctionDef	"font_bbox_param (const gs_memory_t * mem , const ref * pfdict , double bbox [ 4 ])"		10964141	0					
ANR	10964143	CompoundStatement		929:0:30265:31792	10964141	0					
ANR	10964144	IdentifierDeclStatement	ref * pbbox ;	930:4:30271:30281	10964141	0	True				
ANR	10964145	IdentifierDecl	* pbbox		10964141	0					
ANR	10964146	IdentifierDeclType	ref *		10964141	0					
ANR	10964147	Identifier	pbbox		10964141	1					
ANR	10964148	ExpressionStatement	bbox [ 0 ] = bbox [ 1 ] = bbox [ 2 ] = bbox [ 3 ] = 0.0	940:4:30673:30716	10964141	1	True				
ANR	10964149	AssignmentExpression	bbox [ 0 ] = bbox [ 1 ] = bbox [ 2 ] = bbox [ 3 ] = 0.0		10964141	0		=			
ANR	10964150	ArrayIndexing	bbox [ 0 ]		10964141	0					
ANR	10964151	Identifier	bbox		10964141	0					
ANR	10964152	PrimaryExpression	0		10964141	1					
ANR	10964153	AssignmentExpression	bbox [ 1 ] = bbox [ 2 ] = bbox [ 3 ] = 0.0		10964141	1		=			
ANR	10964154	ArrayIndexing	bbox [ 1 ]		10964141	0					
ANR	10964155	Identifier	bbox		10964141	0					
ANR	10964156	PrimaryExpression	1		10964141	1					
ANR	10964157	AssignmentExpression	bbox [ 2 ] = bbox [ 3 ] = 0.0		10964141	1		=			
ANR	10964158	ArrayIndexing	bbox [ 2 ]		10964141	0					
ANR	10964159	Identifier	bbox		10964141	0					
ANR	10964160	PrimaryExpression	2		10964141	1					
ANR	10964161	AssignmentExpression	bbox [ 3 ] = 0.0		10964141	1		=			
ANR	10964162	ArrayIndexing	bbox [ 3 ]		10964141	0					
ANR	10964163	Identifier	bbox		10964141	0					
ANR	10964164	PrimaryExpression	3		10964141	1					
ANR	10964165	PrimaryExpression	0.0		10964141	1					
ANR	10964166	IfStatement	"if ( dict_find_string ( pfdict , ""FontBBox"" , & pbbox ) > 0 )"		10964141	2					
ANR	10964167	Condition	"dict_find_string ( pfdict , ""FontBBox"" , & pbbox ) > 0"	941:8:30726:30773	10964141	0	True				
ANR	10964168	RelationalExpression	"dict_find_string ( pfdict , ""FontBBox"" , & pbbox ) > 0"		10964141	0		>			
ANR	10964169	CallExpression	"dict_find_string ( pfdict , ""FontBBox"" , & pbbox )"		10964141	0					
ANR	10964170	Callee	dict_find_string		10964141	0					
ANR	10964171	Identifier	dict_find_string		10964141	0					
ANR	10964172	ArgumentList	pfdict		10964141	1					
ANR	10964173	Argument	pfdict		10964141	0					
ANR	10964174	Identifier	pfdict		10964141	0					
ANR	10964175	Argument	"""FontBBox"""		10964141	1					
ANR	10964176	PrimaryExpression	"""FontBBox"""		10964141	0					
ANR	10964177	Argument	& pbbox		10964141	2					
ANR	10964178	UnaryOperationExpression	& pbbox		10964141	0					
ANR	10964179	UnaryOperator	&		10964141	0					
ANR	10964180	Identifier	pbbox		10964141	1					
ANR	10964181	PrimaryExpression	0		10964141	1					
ANR	10964182	CompoundStatement		13:58:510:510	10964141	1					
ANR	10964183	IfStatement	if ( ! r_is_array ( pbbox ) )		10964141	0					
ANR	10964184	Condition	! r_is_array ( pbbox )	942:12:30790:30807	10964141	0	True				
ANR	10964185	UnaryOperationExpression	! r_is_array ( pbbox )		10964141	0					
ANR	10964186	UnaryOperator	!		10964141	0					
ANR	10964187	CallExpression	r_is_array ( pbbox )		10964141	1					
ANR	10964188	Callee	r_is_array		10964141	0					
ANR	10964189	Identifier	r_is_array		10964141	0					
ANR	10964190	ArgumentList	pbbox		10964141	1					
ANR	10964191	Argument	pbbox		10964141	0					
ANR	10964192	Identifier	pbbox		10964141	0					
ANR	10964193	ExpressionStatement	return_error ( gs_error_typecheck )	943:12:30822:30854	10964141	1	True				
ANR	10964194	CallExpression	return_error ( gs_error_typecheck )		10964141	0					
ANR	10964195	Callee	return_error		10964141	0					
ANR	10964196	Identifier	return_error		10964141	0					
ANR	10964197	ArgumentList	gs_error_typecheck		10964141	1					
ANR	10964198	Argument	gs_error_typecheck		10964141	0					
ANR	10964199	Identifier	gs_error_typecheck		10964141	0					
ANR	10964200	IfStatement	if ( r_size ( pbbox ) == 4 )		10964141	1					
ANR	10964201	Condition	r_size ( pbbox ) == 4	944:12:30868:30885	10964141	0	True				
ANR	10964202	EqualityExpression	r_size ( pbbox ) == 4		10964141	0		==			
ANR	10964203	CallExpression	r_size ( pbbox )		10964141	0					
ANR	10964204	Callee	r_size		10964141	0					
ANR	10964205	Identifier	r_size		10964141	0					
ANR	10964206	ArgumentList	pbbox		10964141	1					
ANR	10964207	Argument	pbbox		10964141	0					
ANR	10964208	Identifier	pbbox		10964141	0					
ANR	10964209	PrimaryExpression	4		10964141	1					
ANR	10964210	CompoundStatement		22:12:791:817	10964141	1					
ANR	10964211	IdentifierDeclStatement	const ref_packed * pbe = pbbox -> value . packed ;	945:12:30902:30945	10964141	0	True				
ANR	10964212	IdentifierDecl	* pbe = pbbox -> value . packed		10964141	0					
ANR	10964213	IdentifierDeclType	const ref_packed *		10964141	0					
ANR	10964214	Identifier	pbe		10964141	1					
ANR	10964215	AssignmentExpression	* pbe = pbbox -> value . packed		10964141	2		=			
ANR	10964216	Identifier	pbe		10964141	0					
ANR	10964217	MemberAccess	pbbox -> value . packed		10964141	1					
ANR	10964218	PtrMemberAccess	pbbox -> value		10964141	0					
ANR	10964219	Identifier	pbbox		10964141	0					
ANR	10964220	Identifier	value		10964141	1					
ANR	10964221	Identifier	packed		10964141	1					
ANR	10964222	IdentifierDeclStatement	ref rbe [ 4 ] ;	946:12:30959:30969	10964141	1	True				
ANR	10964223	IdentifierDecl	rbe [ 4 ]		10964141	0					
ANR	10964224	IdentifierDeclType	ref [ 4 ]		10964141	0					
ANR	10964225	Identifier	rbe		10964141	1					
ANR	10964226	PrimaryExpression	4		10964141	2					
ANR	10964227	IdentifierDeclStatement	int i ;	947:12:30983:30988	10964141	2	True				
ANR	10964228	IdentifierDecl	i		10964141	0					
ANR	10964229	IdentifierDeclType	int		10964141	0					
ANR	10964230	Identifier	i		10964141	1					
ANR	10964231	IdentifierDeclStatement	int code ;	948:12:31002:31010	10964141	3	True				
ANR	10964232	IdentifierDecl	code		10964141	0					
ANR	10964233	IdentifierDeclType	int		10964141	0					
ANR	10964234	Identifier	code		10964141	1					
ANR	10964235	IdentifierDeclStatement	"float dx , dy , ratio ;"	949:12:31024:31043	10964141	4	True				
ANR	10964236	IdentifierDecl	dx		10964141	0					
ANR	10964237	IdentifierDeclType	float		10964141	0					
ANR	10964238	Identifier	dx		10964141	1					
ANR	10964239	IdentifierDecl	dy		10964141	1					
ANR	10964240	IdentifierDeclType	float		10964141	0					
ANR	10964241	Identifier	dy		10964141	1					
ANR	10964242	IdentifierDecl	ratio		10964141	2					
ANR	10964243	IdentifierDeclType	float		10964141	0					
ANR	10964244	Identifier	ratio		10964141	1					
ANR	10964245	IdentifierDeclStatement	const float max_ratio = 12 ;	950:12:31057:31083	10964141	5	True				
ANR	10964246	IdentifierDecl	max_ratio = 12		10964141	0					
ANR	10964247	IdentifierDeclType	const float		10964141	0					
ANR	10964248	Identifier	max_ratio		10964141	1					
ANR	10964249	AssignmentExpression	max_ratio = 12		10964141	2		=			
ANR	10964250	Identifier	max_ratio		10964141	0					
ANR	10964251	PrimaryExpression	12		10964141	1					
ANR	10964252	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		10964141	6					
ANR	10964253	ForInit	i = 0 ;	952:17:31130:31135	10964141	0	True				
ANR	10964254	AssignmentExpression	i = 0		10964141	0		=			
ANR	10964255	Identifier	i		10964141	0					
ANR	10964256	PrimaryExpression	0		10964141	1					
ANR	10964257	Condition	i < 4	952:24:31137:31141	10964141	1	True				
ANR	10964258	RelationalExpression	i < 4		10964141	0		<			
ANR	10964259	Identifier	i		10964141	0					
ANR	10964260	PrimaryExpression	4		10964141	1					
ANR	10964261	PostIncDecOperationExpression	i ++	952:31:31144:31146	10964141	2	True				
ANR	10964262	Identifier	i		10964141	0					
ANR	10964263	IncDec	++		10964141	1					
ANR	10964264	CompoundStatement		24:36:883:883	10964141	3					
ANR	10964265	ExpressionStatement	"packed_get ( mem , pbe , rbe + i )"	953:16:31167:31196	10964141	0	True				
ANR	10964266	CallExpression	"packed_get ( mem , pbe , rbe + i )"		10964141	0					
ANR	10964267	Callee	packed_get		10964141	0					
ANR	10964268	Identifier	packed_get		10964141	0					
ANR	10964269	ArgumentList	mem		10964141	1					
ANR	10964270	Argument	mem		10964141	0					
ANR	10964271	Identifier	mem		10964141	0					
ANR	10964272	Argument	pbe		10964141	1					
ANR	10964273	Identifier	pbe		10964141	0					
ANR	10964274	Argument	rbe + i		10964141	2					
ANR	10964275	AdditiveExpression	rbe + i		10964141	0		+			
ANR	10964276	Identifier	rbe		10964141	0					
ANR	10964277	Identifier	i		10964141	1					
ANR	10964278	ExpressionStatement	pbe = packed_next ( pbe )	954:16:31214:31236	10964141	1	True				
ANR	10964279	AssignmentExpression	pbe = packed_next ( pbe )		10964141	0		=			
ANR	10964280	Identifier	pbe		10964141	0					
ANR	10964281	CallExpression	packed_next ( pbe )		10964141	1					
ANR	10964282	Callee	packed_next		10964141	0					
ANR	10964283	Identifier	packed_next		10964141	0					
ANR	10964284	ArgumentList	pbe		10964141	1					
ANR	10964285	Argument	pbe		10964141	0					
ANR	10964286	Identifier	pbe		10964141	0					
ANR	10964287	IfStatement	"if ( ( code = num_params ( rbe + 3 , 4 , bbox ) ) < 0 )"		10964141	7					
ANR	10964288	Condition	"( code = num_params ( rbe + 3 , 4 , bbox ) ) < 0"	956:16:31268:31308	10964141	0	True				
ANR	10964289	RelationalExpression	"( code = num_params ( rbe + 3 , 4 , bbox ) ) < 0"		10964141	0		<			
ANR	10964290	AssignmentExpression	"code = num_params ( rbe + 3 , 4 , bbox )"		10964141	0		=			
ANR	10964291	Identifier	code		10964141	0					
ANR	10964292	CallExpression	"num_params ( rbe + 3 , 4 , bbox )"		10964141	1					
ANR	10964293	Callee	num_params		10964141	0					
ANR	10964294	Identifier	num_params		10964141	0					
ANR	10964295	ArgumentList	rbe + 3		10964141	1					
ANR	10964296	Argument	rbe + 3		10964141	0					
ANR	10964297	AdditiveExpression	rbe + 3		10964141	0		+			
ANR	10964298	Identifier	rbe		10964141	0					
ANR	10964299	PrimaryExpression	3		10964141	1					
ANR	10964300	Argument	4		10964141	1					
ANR	10964301	PrimaryExpression	4		10964141	0					
ANR	10964302	Argument	bbox		10964141	2					
ANR	10964303	Identifier	bbox		10964141	0					
ANR	10964304	PrimaryExpression	0		10964141	1					
ANR	10964305	ReturnStatement	return code ;	957:16:31327:31338	10964141	1	True				
ANR	10964306	Identifier	code		10964141	0					
ANR	10964307	ExpressionStatement	dx = bbox [ 2 ] - bbox [ 0 ]	959:12:31399:31421	10964141	8	True				
ANR	10964308	AssignmentExpression	dx = bbox [ 2 ] - bbox [ 0 ]		10964141	0		=			
ANR	10964309	Identifier	dx		10964141	0					
ANR	10964310	AdditiveExpression	bbox [ 2 ] - bbox [ 0 ]		10964141	1		-			
ANR	10964311	ArrayIndexing	bbox [ 2 ]		10964141	0					
ANR	10964312	Identifier	bbox		10964141	0					
ANR	10964313	PrimaryExpression	2		10964141	1					
ANR	10964314	ArrayIndexing	bbox [ 0 ]		10964141	1					
ANR	10964315	Identifier	bbox		10964141	0					
ANR	10964316	PrimaryExpression	0		10964141	1					
ANR	10964317	ExpressionStatement	dy = bbox [ 3 ] - bbox [ 1 ]	960:12:31435:31457	10964141	9	True				
ANR	10964318	AssignmentExpression	dy = bbox [ 3 ] - bbox [ 1 ]		10964141	0		=			
ANR	10964319	Identifier	dy		10964141	0					
ANR	10964320	AdditiveExpression	bbox [ 3 ] - bbox [ 1 ]		10964141	1		-			
ANR	10964321	ArrayIndexing	bbox [ 3 ]		10964141	0					
ANR	10964322	Identifier	bbox		10964141	0					
ANR	10964323	PrimaryExpression	3		10964141	1					
ANR	10964324	ArrayIndexing	bbox [ 1 ]		10964141	1					
ANR	10964325	Identifier	bbox		10964141	0					
ANR	10964326	PrimaryExpression	1		10964141	1					
ANR	10964327	IfStatement	if ( dx <= 0 || dy <= 0 || ( ratio = dy / dx ) < 1 / max_ratio || ratio > max_ratio )		10964141	10					
ANR	10964328	Condition	dx <= 0 || dy <= 0 || ( ratio = dy / dx ) < 1 / max_ratio || ratio > max_ratio	961:16:31475:31566	10964141	0	True				
ANR	10964329	OrExpression	dx <= 0 || dy <= 0 || ( ratio = dy / dx ) < 1 / max_ratio || ratio > max_ratio		10964141	0		||			
ANR	10964330	RelationalExpression	dx <= 0		10964141	0		<=			
ANR	10964331	Identifier	dx		10964141	0					
ANR	10964332	PrimaryExpression	0		10964141	1					
ANR	10964333	OrExpression	dy <= 0 || ( ratio = dy / dx ) < 1 / max_ratio || ratio > max_ratio		10964141	1		||			
ANR	10964334	RelationalExpression	dy <= 0		10964141	0		<=			
ANR	10964335	Identifier	dy		10964141	0					
ANR	10964336	PrimaryExpression	0		10964141	1					
ANR	10964337	OrExpression	( ratio = dy / dx ) < 1 / max_ratio || ratio > max_ratio		10964141	1		||			
ANR	10964338	RelationalExpression	( ratio = dy / dx ) < 1 / max_ratio		10964141	0		<			
ANR	10964339	AssignmentExpression	ratio = dy / dx		10964141	0		=			
ANR	10964340	Identifier	ratio		10964141	0					
ANR	10964341	MultiplicativeExpression	dy / dx		10964141	1		/			
ANR	10964342	Identifier	dy		10964141	0					
ANR	10964343	Identifier	dx		10964141	1					
ANR	10964344	MultiplicativeExpression	1 / max_ratio		10964141	1		/			
ANR	10964345	PrimaryExpression	1		10964141	0					
ANR	10964346	Identifier	max_ratio		10964141	1					
ANR	10964347	RelationalExpression	ratio > max_ratio		10964141	1		>			
ANR	10964348	Identifier	ratio		10964141	0					
ANR	10964349	Identifier	max_ratio		10964141	1					
ANR	10964350	ExpressionStatement	bbox [ 0 ] = bbox [ 1 ] = bbox [ 2 ] = bbox [ 3 ] = 0.0	964:16:31602:31645	10964141	1	True				
ANR	10964351	AssignmentExpression	bbox [ 0 ] = bbox [ 1 ] = bbox [ 2 ] = bbox [ 3 ] = 0.0		10964141	0		=			
ANR	10964352	ArrayIndexing	bbox [ 0 ]		10964141	0					
ANR	10964353	Identifier	bbox		10964141	0					
ANR	10964354	PrimaryExpression	0		10964141	1					
ANR	10964355	AssignmentExpression	bbox [ 1 ] = bbox [ 2 ] = bbox [ 3 ] = 0.0		10964141	1		=			
ANR	10964356	ArrayIndexing	bbox [ 1 ]		10964141	0					
ANR	10964357	Identifier	bbox		10964141	0					
ANR	10964358	PrimaryExpression	1		10964141	1					
ANR	10964359	AssignmentExpression	bbox [ 2 ] = bbox [ 3 ] = 0.0		10964141	1		=			
ANR	10964360	ArrayIndexing	bbox [ 2 ]		10964141	0					
ANR	10964361	Identifier	bbox		10964141	0					
ANR	10964362	PrimaryExpression	2		10964141	1					
ANR	10964363	AssignmentExpression	bbox [ 3 ] = 0.0		10964141	1		=			
ANR	10964364	ArrayIndexing	bbox [ 3 ]		10964141	0					
ANR	10964365	Identifier	bbox		10964141	0					
ANR	10964366	PrimaryExpression	3		10964141	1					
ANR	10964367	PrimaryExpression	0.0		10964141	1					
ANR	10964368	ElseStatement	else		10964141	0					
ANR	10964369	IfStatement	if ( gs_currentcpsimode ( mem ) )		10964141	0					
ANR	10964370	Condition	gs_currentcpsimode ( mem )	966:15:31672:31694	10964141	0	True				
ANR	10964371	CallExpression	gs_currentcpsimode ( mem )		10964141	0					
ANR	10964372	Callee	gs_currentcpsimode		10964141	0					
ANR	10964373	Identifier	gs_currentcpsimode		10964141	0					
ANR	10964374	ArgumentList	mem		10964141	1					
ANR	10964375	Argument	mem		10964141	0					
ANR	10964376	Identifier	mem		10964141	0					
ANR	10964377	CompoundStatement		38:40:1431:1431	10964141	1					
ANR	10964378	ExpressionStatement	return_error ( gs_error_invalidfont )	967:8:31707:31741	10964141	0	True				
ANR	10964379	CallExpression	return_error ( gs_error_invalidfont )		10964141	0					
ANR	10964380	Callee	return_error		10964141	0					
ANR	10964381	Identifier	return_error		10964141	0					
ANR	10964382	ArgumentList	gs_error_invalidfont		10964141	1					
ANR	10964383	Argument	gs_error_invalidfont		10964141	0					
ANR	10964384	Identifier	gs_error_invalidfont		10964141	0					
ANR	10964385	ReturnStatement	return 0 ;	969:4:31782:31790	10964141	3	True				
ANR	10964386	PrimaryExpression	0		10964141	0					
ANR	10964387	ReturnType	int		10964141	1					
ANR	10964388	Identifier	font_bbox_param		10964141	2					
ANR	10964389	ParameterList	"const gs_memory_t * mem , const ref * pfdict , double bbox [ 4 ]"		10964141	3					
ANR	10964390	Parameter	const gs_memory_t * mem	928:16:30205:30226	10964141	0	True				
ANR	10964391	ParameterType	const gs_memory_t *		10964141	0					
ANR	10964392	Identifier	mem		10964141	1					
ANR	10964393	Parameter	const ref * pfdict	928:40:30229:30246	10964141	1	True				
ANR	10964394	ParameterType	const ref *		10964141	0					
ANR	10964395	Identifier	pfdict		10964141	1					
ANR	10964396	Parameter	double bbox [ 4 ]	928:60:30249:30262	10964141	2	True				
ANR	10964397	ParameterType	double [ 4 ]		10964141	0					
ANR	10964398	Identifier	bbox		10964141	1					
ANR	10964399	CFGEntryNode	ENTRY		10964141		True				
ANR	10964400	CFGExitNode	EXIT		10964141		True				
ANR	10964401	Symbol	pbbox		10964141						
ANR	10964402	Symbol	max_ratio		10964141						
ANR	10964403	Symbol	* bbox		10964141						
ANR	10964404	Symbol	code		10964141						
ANR	10964405	Symbol	packed_next		10964141						
ANR	10964406	Symbol	pfdict		10964141						
ANR	10964407	Symbol	bbox		10964141						
ANR	10964408	Symbol	num_params		10964141						
ANR	10964409	Symbol	gs_error_typecheck		10964141						
ANR	10964410	Symbol	gs_currentcpsimode		10964141						
ANR	10964411	Symbol	mem		10964141						
ANR	10964412	Symbol	dx		10964141						
ANR	10964413	Symbol	dy		10964141						
ANR	10964414	Symbol	r_size		10964141						
ANR	10964415	Symbol	pbbox -> value . packed		10964141						
ANR	10964416	Symbol	* pbbox		10964141						
ANR	10964417	Symbol	pbbox -> value		10964141						
ANR	10964418	Symbol	gs_error_invalidfont		10964141						
ANR	10964419	Symbol	dict_find_string		10964141						
ANR	10964420	Symbol	i		10964141						
ANR	10964421	Symbol	pbe		10964141						
ANR	10964422	Symbol	rbe		10964141						
ANR	10964423	Symbol	r_is_array		10964141						
ANR	10964424	Symbol	& pbbox		10964141						
ANR	10964425	Symbol	ratio		10964141						
