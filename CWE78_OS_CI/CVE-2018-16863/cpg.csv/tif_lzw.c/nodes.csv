command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9875879	File	data/converged/CVE-2018-16863_ghostpdl/tif_lzw.c								
ANR	9875880	ClassDef	<unnamed>	91:8:3725:4193							
ANR	9875881	DeclStmt									
ANR	9875882	Decl							TIFFPredictorState	TIFFPredictorState	predict
ANR	9875883	DeclStmt									
ANR	9875884	Decl							unsigned short	unsigned short	nbits
ANR	9875885	DeclStmt									
ANR	9875886	Decl							unsigned short	unsigned short	maxcode
ANR	9875887	DeclStmt									
ANR	9875888	Decl							unsigned short	unsigned short	free_ent
ANR	9875889	DeclStmt									
ANR	9875890	Decl							unsigned long	unsigned long	nextdata
ANR	9875891	DeclStmt									
ANR	9875892	Decl							long	long	nextbits
ANR	9875893	DeclStmt									
ANR	9875894	Decl							int	int	rw_mode
ANR	9875895	DeclStmt									
ANR	9875896	Decl									LZWBaseState
ANR	9875897	DeclStmt									
ANR	9875898	Decl							uint16	uint16	hcode_t
ANR	9875899	ClassDef	<unnamed>	113:8:4479:4523							
ANR	9875900	DeclStmt									
ANR	9875901	Decl							long	long	hash
ANR	9875902	DeclStmt									
ANR	9875903	Decl							hcode_t	hcode_t	code
ANR	9875904	DeclStmt									
ANR	9875905	Decl									hash_t
ANR	9875906	ClassDef	code_ent	121:8:4569:4777							
ANR	9875907	DeclStmt									
ANR	9875908	Decl							struct code_ent	struct code_ent *	next
ANR	9875909	DeclStmt									
ANR	9875910	Decl							unsigned short	unsigned short	length
ANR	9875911	DeclStmt									
ANR	9875912	Decl							unsigned char	unsigned char	value
ANR	9875913	DeclStmt									
ANR	9875914	Decl							unsigned char	unsigned char	firstchar
ANR	9875915	DeclStmt									
ANR	9875916	Decl							code_ent	code_ent	code_t
ANR	9875917	DeclStmt									
ANR	9875918	Decl							"int ( * ) ( TIFF * , uint8 * , tmsize_t , uint16 )"	"int ( * ) ( TIFF * , uint8 * , tmsize_t , uint16 )"	decodeFunc
ANR	9875919	ClassDef	<unnamed>	130:8:4849:5927							
ANR	9875920	DeclStmt									
ANR	9875921	Decl							LZWBaseState	LZWBaseState	base
ANR	9875922	DeclStmt									
ANR	9875923	Decl							long	long	dec_nbitsmask
ANR	9875924	DeclStmt									
ANR	9875925	Decl							long	long	dec_restart
ANR	9875926	DeclStmt									
ANR	9875927	Decl							uint64	uint64	dec_bitsleft
ANR	9875928	DeclStmt									
ANR	9875929	Decl							decodeFunc	decodeFunc	dec_decode
ANR	9875930	DeclStmt									
ANR	9875931	Decl							code_t	code_t *	dec_codep
ANR	9875932	DeclStmt									
ANR	9875933	Decl							code_t	code_t *	dec_oldcodep
ANR	9875934	DeclStmt									
ANR	9875935	Decl							code_t	code_t *	dec_free_entp
ANR	9875936	DeclStmt									
ANR	9875937	Decl							code_t	code_t *	dec_maxcodep
ANR	9875938	DeclStmt									
ANR	9875939	Decl							code_t	code_t *	dec_codetab
ANR	9875940	DeclStmt									
ANR	9875941	Decl							int	int	enc_oldcode
ANR	9875942	DeclStmt									
ANR	9875943	Decl							long	long	enc_checkpoint
ANR	9875944	DeclStmt									
ANR	9875945	Decl							long	long	enc_ratio
ANR	9875946	DeclStmt									
ANR	9875947	Decl							long	long	enc_incount
ANR	9875948	DeclStmt									
ANR	9875949	Decl							long	long	enc_outcount
ANR	9875950	DeclStmt									
ANR	9875951	Decl							uint8	uint8 *	enc_rawlimit
ANR	9875952	DeclStmt									
ANR	9875953	Decl							hash_t	hash_t *	enc_hashtab
ANR	9875954	DeclStmt									
ANR	9875955	Decl									LZWCodecState
ANR	9875956	DeclStmt									
ANR	9875957	Decl							int	"int ( TIFF * tif , uint8 * op0 , tmsize_t occ0 , uint16 s )"	LZWDecode
ANR	9875958	DeclStmt									
ANR	9875959	Decl							int	"int ( TIFF * tif , uint8 * op0 , tmsize_t occ0 , uint16 s )"	LZWDecodeCompat
ANR	9875960	DeclStmt									
ANR	9875961	Decl							void	void ( LZWCodecState * )	cl_hash
ANR	9875962	Function	LZWFixupTags	191:0:6908:6971							
ANR	9875963	FunctionDef	LZWFixupTags (TIFF * tif)		9875962	0					
ANR	9875964	CompoundStatement		193:0:6943:6971	9875962	0					
ANR	9875965	ExpressionStatement	( void ) tif	194:1:6946:6956	9875962	0	True				
ANR	9875966	CastExpression	( void ) tif		9875962	0					
ANR	9875967	CastTarget	void		9875962	0					
ANR	9875968	Identifier	tif		9875962	1					
ANR	9875969	ReturnStatement	return ( 1 ) ;	195:1:6959:6969	9875962	1	True				
ANR	9875970	PrimaryExpression	1		9875962	0					
ANR	9875971	ReturnType	static int		9875962	1					
ANR	9875972	Identifier	LZWFixupTags		9875962	2					
ANR	9875973	ParameterList	TIFF * tif		9875962	3					
ANR	9875974	Parameter	TIFF * tif	192:13:6932:6940	9875962	0	True				
ANR	9875975	ParameterType	TIFF *		9875962	0					
ANR	9875976	Identifier	tif		9875962	1					
ANR	9875977	CFGEntryNode	ENTRY		9875962		True				
ANR	9875978	CFGExitNode	EXIT		9875962		True				
ANR	9875979	Symbol	tif		9875962						
ANR	9875980	Function	LZWSetupDecode	198:0:6974:8311							
ANR	9875981	FunctionDef	LZWSetupDecode (TIFF * tif)		9875980	0					
ANR	9875982	CompoundStatement		200:0:7011:8311	9875980	0					
ANR	9875983	Statement	static	201:1:7014:7019	9875980	0	True				
ANR	9875984	IdentifierDeclStatement	"const char module [ ] = ""LZWSetupDecode"" ;"	201:8:7021:7059	9875980	1	True				
ANR	9875985	IdentifierDecl	"module [ ] = ""LZWSetupDecode"""		9875980	0					
ANR	9875986	IdentifierDeclType	const char [ ]		9875980	0					
ANR	9875987	Identifier	module		9875980	1					
ANR	9875988	AssignmentExpression	"module [ ] = ""LZWSetupDecode"""		9875980	2		=			
ANR	9875989	Identifier	module		9875980	0					
ANR	9875990	PrimaryExpression	"""LZWSetupDecode"""		9875980	1					
ANR	9875991	IdentifierDeclStatement	LZWCodecState * sp = DecoderState ( tif ) ;	202:1:7062:7099	9875980	2	True				
ANR	9875992	IdentifierDecl	* sp = DecoderState ( tif )		9875980	0					
ANR	9875993	IdentifierDeclType	LZWCodecState *		9875980	0					
ANR	9875994	Identifier	sp		9875980	1					
ANR	9875995	AssignmentExpression	* sp = DecoderState ( tif )		9875980	2		=			
ANR	9875996	Identifier	sp		9875980	0					
ANR	9875997	CallExpression	DecoderState ( tif )		9875980	1					
ANR	9875998	Callee	DecoderState		9875980	0					
ANR	9875999	Identifier	DecoderState		9875980	0					
ANR	9876000	ArgumentList	tif		9875980	1					
ANR	9876001	Argument	tif		9875980	0					
ANR	9876002	Identifier	tif		9875980	0					
ANR	9876003	IdentifierDeclStatement	int code ;	203:1:7102:7110	9875980	3	True				
ANR	9876004	IdentifierDecl	code		9875980	0					
ANR	9876005	IdentifierDeclType	int		9875980	0					
ANR	9876006	Identifier	code		9875980	1					
ANR	9876007	IfStatement	if ( sp == NULL )		9875980	4					
ANR	9876008	Condition	sp == NULL	205:5:7118:7127	9875980	0	True				
ANR	9876009	EqualityExpression	sp == NULL		9875980	0		==			
ANR	9876010	Identifier	sp		9875980	0					
ANR	9876011	Identifier	NULL		9875980	1					
ANR	9876012	CompoundStatement		7:1:120:120	9875980	1					
ANR	9876013	ExpressionStatement	tif -> tif_data = ( uint8 * ) _TIFFmalloc ( sizeof ( LZWCodecState ) )	211:2:7223:7282	9875980	0	True				
ANR	9876014	AssignmentExpression	tif -> tif_data = ( uint8 * ) _TIFFmalloc ( sizeof ( LZWCodecState ) )		9875980	0		=			
ANR	9876015	PtrMemberAccess	tif -> tif_data		9875980	0					
ANR	9876016	Identifier	tif		9875980	0					
ANR	9876017	Identifier	tif_data		9875980	1					
ANR	9876018	CastExpression	( uint8 * ) _TIFFmalloc ( sizeof ( LZWCodecState ) )		9875980	1					
ANR	9876019	CastTarget	uint8 *		9875980	0					
ANR	9876020	CallExpression	_TIFFmalloc ( sizeof ( LZWCodecState ) )		9875980	1					
ANR	9876021	Callee	_TIFFmalloc		9875980	0					
ANR	9876022	Identifier	_TIFFmalloc		9875980	0					
ANR	9876023	ArgumentList	sizeof ( LZWCodecState )		9875980	1					
ANR	9876024	Argument	sizeof ( LZWCodecState )		9875980	0					
ANR	9876025	SizeofExpression	sizeof ( LZWCodecState )		9875980	0					
ANR	9876026	Sizeof	sizeof		9875980	0					
ANR	9876027	SizeofOperand	LZWCodecState		9875980	1					
ANR	9876028	IfStatement	if ( tif -> tif_data == NULL )		9875980	1					
ANR	9876029	Condition	tif -> tif_data == NULL	212:6:7290:7310	9875980	0	True				
ANR	9876030	EqualityExpression	tif -> tif_data == NULL		9875980	0		==			
ANR	9876031	PtrMemberAccess	tif -> tif_data		9875980	0					
ANR	9876032	Identifier	tif		9875980	0					
ANR	9876033	Identifier	tif_data		9875980	1					
ANR	9876034	Identifier	NULL		9875980	1					
ANR	9876035	CompoundStatement		14:2:303:303	9875980	1					
ANR	9876036	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for LZW state block"" )"	214:3:7320:7393	9875980	0	True				
ANR	9876037	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for LZW state block"" )"		9875980	0					
ANR	9876038	Callee	TIFFErrorExt		9875980	0					
ANR	9876039	Identifier	TIFFErrorExt		9875980	0					
ANR	9876040	ArgumentList	tif -> tif_clientdata		9875980	1					
ANR	9876041	Argument	tif -> tif_clientdata		9875980	0					
ANR	9876042	PtrMemberAccess	tif -> tif_clientdata		9875980	0					
ANR	9876043	Identifier	tif		9875980	0					
ANR	9876044	Identifier	tif_clientdata		9875980	1					
ANR	9876045	Argument	module		9875980	1					
ANR	9876046	Identifier	module		9875980	0					
ANR	9876047	Argument	"""No space for LZW state block"""		9875980	2					
ANR	9876048	PrimaryExpression	"""No space for LZW state block"""		9875980	0					
ANR	9876049	ReturnStatement	return ( 0 ) ;	215:3:7398:7408	9875980	1	True				
ANR	9876050	PrimaryExpression	0		9875980	0					
ANR	9876051	ExpressionStatement	DecoderState ( tif ) -> dec_codetab = NULL	218:2:7417:7454	9875980	2	True				
ANR	9876052	AssignmentExpression	DecoderState ( tif ) -> dec_codetab = NULL		9875980	0		=			
ANR	9876053	PtrMemberAccess	DecoderState ( tif ) -> dec_codetab		9875980	0					
ANR	9876054	CallExpression	DecoderState ( tif )		9875980	0					
ANR	9876055	Callee	DecoderState		9875980	0					
ANR	9876056	Identifier	DecoderState		9875980	0					
ANR	9876057	ArgumentList	tif		9875980	1					
ANR	9876058	Argument	tif		9875980	0					
ANR	9876059	Identifier	tif		9875980	0					
ANR	9876060	Identifier	dec_codetab		9875980	1					
ANR	9876061	Identifier	NULL		9875980	1					
ANR	9876062	ExpressionStatement	DecoderState ( tif ) -> dec_decode = NULL	219:2:7458:7494	9875980	3	True				
ANR	9876063	AssignmentExpression	DecoderState ( tif ) -> dec_decode = NULL		9875980	0		=			
ANR	9876064	PtrMemberAccess	DecoderState ( tif ) -> dec_decode		9875980	0					
ANR	9876065	CallExpression	DecoderState ( tif )		9875980	0					
ANR	9876066	Callee	DecoderState		9875980	0					
ANR	9876067	Identifier	DecoderState		9875980	0					
ANR	9876068	ArgumentList	tif		9875980	1					
ANR	9876069	Argument	tif		9875980	0					
ANR	9876070	Identifier	tif		9875980	0					
ANR	9876071	Identifier	dec_decode		9875980	1					
ANR	9876072	Identifier	NULL		9875980	1					
ANR	9876073	ExpressionStatement	( void ) TIFFPredictorInit ( tif )	224:2:7538:7567	9875980	4	True				
ANR	9876074	CastExpression	( void ) TIFFPredictorInit ( tif )		9875980	0					
ANR	9876075	CastTarget	void		9875980	0					
ANR	9876076	CallExpression	TIFFPredictorInit ( tif )		9875980	1					
ANR	9876077	Callee	TIFFPredictorInit		9875980	0					
ANR	9876078	Identifier	TIFFPredictorInit		9875980	0					
ANR	9876079	ArgumentList	tif		9875980	1					
ANR	9876080	Argument	tif		9875980	0					
ANR	9876081	Identifier	tif		9875980	0					
ANR	9876082	ExpressionStatement	sp = DecoderState ( tif )	226:2:7572:7594	9875980	5	True				
ANR	9876083	AssignmentExpression	sp = DecoderState ( tif )		9875980	0		=			
ANR	9876084	Identifier	sp		9875980	0					
ANR	9876085	CallExpression	DecoderState ( tif )		9875980	1					
ANR	9876086	Callee	DecoderState		9875980	0					
ANR	9876087	Identifier	DecoderState		9875980	0					
ANR	9876088	ArgumentList	tif		9875980	1					
ANR	9876089	Argument	tif		9875980	0					
ANR	9876090	Identifier	tif		9875980	0					
ANR	9876091	ExpressionStatement	assert ( sp != NULL )	229:1:7601:7619	9875980	5	True				
ANR	9876092	CallExpression	assert ( sp != NULL )		9875980	0					
ANR	9876093	Callee	assert		9875980	0					
ANR	9876094	Identifier	assert		9875980	0					
ANR	9876095	ArgumentList	sp != NULL		9875980	1					
ANR	9876096	Argument	sp != NULL		9875980	0					
ANR	9876097	EqualityExpression	sp != NULL		9875980	0		!=			
ANR	9876098	Identifier	sp		9875980	0					
ANR	9876099	Identifier	NULL		9875980	1					
ANR	9876100	IfStatement	if ( sp -> dec_codetab == NULL )		9875980	6					
ANR	9876101	Condition	sp -> dec_codetab == NULL	231:5:7627:7649	9875980	0	True				
ANR	9876102	EqualityExpression	sp -> dec_codetab == NULL		9875980	0		==			
ANR	9876103	PtrMemberAccess	sp -> dec_codetab		9875980	0					
ANR	9876104	Identifier	sp		9875980	0					
ANR	9876105	Identifier	dec_codetab		9875980	1					
ANR	9876106	Identifier	NULL		9875980	1					
ANR	9876107	CompoundStatement		32:30:640:640	9875980	1					
ANR	9876108	ExpressionStatement	sp -> dec_codetab = ( code_t * ) _TIFFmalloc ( CSIZE * sizeof ( code_t ) )	232:2:7656:7717	9875980	0	True				
ANR	9876109	AssignmentExpression	sp -> dec_codetab = ( code_t * ) _TIFFmalloc ( CSIZE * sizeof ( code_t ) )		9875980	0		=			
ANR	9876110	PtrMemberAccess	sp -> dec_codetab		9875980	0					
ANR	9876111	Identifier	sp		9875980	0					
ANR	9876112	Identifier	dec_codetab		9875980	1					
ANR	9876113	CastExpression	( code_t * ) _TIFFmalloc ( CSIZE * sizeof ( code_t ) )		9875980	1					
ANR	9876114	CastTarget	code_t *		9875980	0					
ANR	9876115	CallExpression	_TIFFmalloc ( CSIZE * sizeof ( code_t ) )		9875980	1					
ANR	9876116	Callee	_TIFFmalloc		9875980	0					
ANR	9876117	Identifier	_TIFFmalloc		9875980	0					
ANR	9876118	ArgumentList	CSIZE * sizeof ( code_t )		9875980	1					
ANR	9876119	Argument	CSIZE * sizeof ( code_t )		9875980	0					
ANR	9876120	MultiplicativeExpression	CSIZE * sizeof ( code_t )		9875980	0		*			
ANR	9876121	Identifier	CSIZE		9875980	0					
ANR	9876122	SizeofExpression	sizeof ( code_t )		9875980	1					
ANR	9876123	Sizeof	sizeof		9875980	0					
ANR	9876124	SizeofOperand	code_t		9875980	1					
ANR	9876125	IfStatement	if ( sp -> dec_codetab == NULL )		9875980	1					
ANR	9876126	Condition	sp -> dec_codetab == NULL	233:6:7725:7747	9875980	0	True				
ANR	9876127	EqualityExpression	sp -> dec_codetab == NULL		9875980	0		==			
ANR	9876128	PtrMemberAccess	sp -> dec_codetab		9875980	0					
ANR	9876129	Identifier	sp		9875980	0					
ANR	9876130	Identifier	dec_codetab		9875980	1					
ANR	9876131	Identifier	NULL		9875980	1					
ANR	9876132	CompoundStatement		34:31:738:738	9875980	1					
ANR	9876133	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for LZW code table"" )"	234:3:7755:7836	9875980	0	True				
ANR	9876134	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for LZW code table"" )"		9875980	0					
ANR	9876135	Callee	TIFFErrorExt		9875980	0					
ANR	9876136	Identifier	TIFFErrorExt		9875980	0					
ANR	9876137	ArgumentList	tif -> tif_clientdata		9875980	1					
ANR	9876138	Argument	tif -> tif_clientdata		9875980	0					
ANR	9876139	PtrMemberAccess	tif -> tif_clientdata		9875980	0					
ANR	9876140	Identifier	tif		9875980	0					
ANR	9876141	Identifier	tif_clientdata		9875980	1					
ANR	9876142	Argument	module		9875980	1					
ANR	9876143	Identifier	module		9875980	0					
ANR	9876144	Argument	"""No space for LZW code table"""		9875980	2					
ANR	9876145	PrimaryExpression	"""No space for LZW code table"""		9875980	0					
ANR	9876146	ReturnStatement	return ( 0 ) ;	236:3:7841:7851	9875980	1	True				
ANR	9876147	PrimaryExpression	0		9875980	0					
ANR	9876148	ExpressionStatement	code = 255	241:2:7895:7905	9875980	2	True				
ANR	9876149	AssignmentExpression	code = 255		9875980	0		=			
ANR	9876150	Identifier	code		9875980	0					
ANR	9876151	PrimaryExpression	255		9875980	1					
ANR	9876152	DoStatement	do		9875980	3					
ANR	9876153	CompoundStatement		43:5:900:900	9875980	0					
ANR	9876154	ExpressionStatement	sp -> dec_codetab [ code ] . value = ( unsigned char ) code	243:3:7917:7966	9875980	0	True				
ANR	9876155	AssignmentExpression	sp -> dec_codetab [ code ] . value = ( unsigned char ) code		9875980	0		=			
ANR	9876156	MemberAccess	sp -> dec_codetab [ code ] . value		9875980	0					
ANR	9876157	ArrayIndexing	sp -> dec_codetab [ code ]		9875980	0					
ANR	9876158	PtrMemberAccess	sp -> dec_codetab		9875980	0					
ANR	9876159	Identifier	sp		9875980	0					
ANR	9876160	Identifier	dec_codetab		9875980	1					
ANR	9876161	Identifier	code		9875980	1					
ANR	9876162	Identifier	value		9875980	1					
ANR	9876163	CastExpression	( unsigned char ) code		9875980	1					
ANR	9876164	CastTarget	unsigned char		9875980	0					
ANR	9876165	Identifier	code		9875980	1					
ANR	9876166	ExpressionStatement	sp -> dec_codetab [ code ] . firstchar = ( unsigned char ) code	244:3:7971:8024	9875980	1	True				
ANR	9876167	AssignmentExpression	sp -> dec_codetab [ code ] . firstchar = ( unsigned char ) code		9875980	0		=			
ANR	9876168	MemberAccess	sp -> dec_codetab [ code ] . firstchar		9875980	0					
ANR	9876169	ArrayIndexing	sp -> dec_codetab [ code ]		9875980	0					
ANR	9876170	PtrMemberAccess	sp -> dec_codetab		9875980	0					
ANR	9876171	Identifier	sp		9875980	0					
ANR	9876172	Identifier	dec_codetab		9875980	1					
ANR	9876173	Identifier	code		9875980	1					
ANR	9876174	Identifier	firstchar		9875980	1					
ANR	9876175	CastExpression	( unsigned char ) code		9875980	1					
ANR	9876176	CastTarget	unsigned char		9875980	0					
ANR	9876177	Identifier	code		9875980	1					
ANR	9876178	ExpressionStatement	sp -> dec_codetab [ code ] . length = 1	245:3:8029:8061	9875980	2	True				
ANR	9876179	AssignmentExpression	sp -> dec_codetab [ code ] . length = 1		9875980	0		=			
ANR	9876180	MemberAccess	sp -> dec_codetab [ code ] . length		9875980	0					
ANR	9876181	ArrayIndexing	sp -> dec_codetab [ code ]		9875980	0					
ANR	9876182	PtrMemberAccess	sp -> dec_codetab		9875980	0					
ANR	9876183	Identifier	sp		9875980	0					
ANR	9876184	Identifier	dec_codetab		9875980	1					
ANR	9876185	Identifier	code		9875980	1					
ANR	9876186	Identifier	length		9875980	1					
ANR	9876187	PrimaryExpression	1		9875980	1					
ANR	9876188	ExpressionStatement	sp -> dec_codetab [ code ] . next = NULL	246:3:8066:8099	9875980	3	True				
ANR	9876189	AssignmentExpression	sp -> dec_codetab [ code ] . next = NULL		9875980	0		=			
ANR	9876190	MemberAccess	sp -> dec_codetab [ code ] . next		9875980	0					
ANR	9876191	ArrayIndexing	sp -> dec_codetab [ code ]		9875980	0					
ANR	9876192	PtrMemberAccess	sp -> dec_codetab		9875980	0					
ANR	9876193	Identifier	sp		9875980	0					
ANR	9876194	Identifier	dec_codetab		9875980	1					
ANR	9876195	Identifier	code		9875980	1					
ANR	9876196	Identifier	next		9875980	1					
ANR	9876197	Identifier	NULL		9875980	1					
ANR	9876198	Condition	code --	247:11:8112:8117	9875980	1	True				
ANR	9876199	PostIncDecOperationExpression	code --		9875980	0					
ANR	9876200	Identifier	code		9875980	0					
ANR	9876201	IncDec	--		9875980	1					
ANR	9876202	ExpressionStatement	"_TIFFmemset ( & sp -> dec_codetab [ CODE_CLEAR ] , 0 , ( CODE_FIRST - CODE_CLEAR ) * sizeof ( code_t ) )"	251:17:8196:8293	9875980	4	True				
ANR	9876203	CallExpression	"_TIFFmemset ( & sp -> dec_codetab [ CODE_CLEAR ] , 0 , ( CODE_FIRST - CODE_CLEAR ) * sizeof ( code_t ) )"		9875980	0					
ANR	9876204	Callee	_TIFFmemset		9875980	0					
ANR	9876205	Identifier	_TIFFmemset		9875980	0					
ANR	9876206	ArgumentList	& sp -> dec_codetab [ CODE_CLEAR ]		9875980	1					
ANR	9876207	Argument	& sp -> dec_codetab [ CODE_CLEAR ]		9875980	0					
ANR	9876208	UnaryOperationExpression	& sp -> dec_codetab [ CODE_CLEAR ]		9875980	0					
ANR	9876209	UnaryOperator	&		9875980	0					
ANR	9876210	ArrayIndexing	sp -> dec_codetab [ CODE_CLEAR ]		9875980	1					
ANR	9876211	PtrMemberAccess	sp -> dec_codetab		9875980	0					
ANR	9876212	Identifier	sp		9875980	0					
ANR	9876213	Identifier	dec_codetab		9875980	1					
ANR	9876214	Identifier	CODE_CLEAR		9875980	1					
ANR	9876215	Argument	0		9875980	1					
ANR	9876216	PrimaryExpression	0		9875980	0					
ANR	9876217	Argument	( CODE_FIRST - CODE_CLEAR ) * sizeof ( code_t )		9875980	2					
ANR	9876218	MultiplicativeExpression	( CODE_FIRST - CODE_CLEAR ) * sizeof ( code_t )		9875980	0		*			
ANR	9876219	AdditiveExpression	CODE_FIRST - CODE_CLEAR		9875980	0		-			
ANR	9876220	Identifier	CODE_FIRST		9875980	0					
ANR	9876221	Identifier	CODE_CLEAR		9875980	1					
ANR	9876222	SizeofExpression	sizeof ( code_t )		9875980	1					
ANR	9876223	Sizeof	sizeof		9875980	0					
ANR	9876224	SizeofOperand	code_t		9875980	1					
ANR	9876225	ReturnStatement	return ( 1 ) ;	254:1:8299:8309	9875980	7	True				
ANR	9876226	PrimaryExpression	1		9875980	0					
ANR	9876227	ReturnType	static int		9875980	1					
ANR	9876228	Identifier	LZWSetupDecode		9875980	2					
ANR	9876229	ParameterList	TIFF * tif		9875980	3					
ANR	9876230	Parameter	TIFF * tif	199:15:7000:7008	9875980	0	True				
ANR	9876231	ParameterType	TIFF *		9875980	0					
ANR	9876232	Identifier	tif		9875980	1					
ANR	9876233	CFGEntryNode	ENTRY		9875980		True				
ANR	9876234	CFGExitNode	EXIT		9875980		True				
ANR	9876235	Symbol	* sp		9875980						
ANR	9876236	Symbol	code		9875980						
ANR	9876237	Symbol	sp -> dec_codetab [ code ] . firstchar		9875980						
ANR	9876238	Symbol	* * sp		9875980						
ANR	9876239	Symbol	sp -> dec_codetab		9875980						
ANR	9876240	Symbol	tif		9875980						
ANR	9876241	Symbol	sp -> dec_codetab [ code ] . value		9875980						
ANR	9876242	Symbol	CSIZE		9875980						
ANR	9876243	Symbol	DecoderState		9875980						
ANR	9876244	Symbol	sp -> dec_codetab [ code ] . length		9875980						
ANR	9876245	Symbol	sp -> dec_codetab [ code ] . next		9875980						
ANR	9876246	Symbol	sp		9875980						
ANR	9876247	Symbol	tif -> tif_data		9875980						
ANR	9876248	Symbol	* DecoderState		9875980						
ANR	9876249	Symbol	NULL		9875980						
ANR	9876250	Symbol	DecoderState ( tif ) -> dec_decode		9875980						
ANR	9876251	Symbol	module		9875980						
ANR	9876252	Symbol	DecoderState ( tif ) -> dec_codetab		9875980						
ANR	9876253	Symbol	* sp -> dec_codetab		9875980						
ANR	9876254	Symbol	tif -> tif_clientdata		9875980						
ANR	9876255	Symbol	CODE_FIRST		9875980						
ANR	9876256	Symbol	_TIFFmalloc		9875980						
ANR	9876257	Symbol	* tif		9875980						
ANR	9876258	Symbol	* code		9875980						
ANR	9876259	Symbol	CODE_CLEAR		9875980						
ANR	9876260	Function	LZWPreDecode	260:0:8358:10554							
ANR	9876261	FunctionDef	"LZWPreDecode (TIFF * tif , uint16 s)"		9876260	0					
ANR	9876262	CompoundStatement		262:0:8403:10554	9876260	0					
ANR	9876263	Statement	static	263:1:8406:8411	9876260	0	True				
ANR	9876264	IdentifierDeclStatement	"const char module [ ] = ""LZWPreDecode"" ;"	263:8:8413:8449	9876260	1	True				
ANR	9876265	IdentifierDecl	"module [ ] = ""LZWPreDecode"""		9876260	0					
ANR	9876266	IdentifierDeclType	const char [ ]		9876260	0					
ANR	9876267	Identifier	module		9876260	1					
ANR	9876268	AssignmentExpression	"module [ ] = ""LZWPreDecode"""		9876260	2		=			
ANR	9876269	Identifier	module		9876260	0					
ANR	9876270	PrimaryExpression	"""LZWPreDecode"""		9876260	1					
ANR	9876271	IdentifierDeclStatement	LZWCodecState * sp = DecoderState ( tif ) ;	264:1:8452:8489	9876260	2	True				
ANR	9876272	IdentifierDecl	* sp = DecoderState ( tif )		9876260	0					
ANR	9876273	IdentifierDeclType	LZWCodecState *		9876260	0					
ANR	9876274	Identifier	sp		9876260	1					
ANR	9876275	AssignmentExpression	* sp = DecoderState ( tif )		9876260	2		=			
ANR	9876276	Identifier	sp		9876260	0					
ANR	9876277	CallExpression	DecoderState ( tif )		9876260	1					
ANR	9876278	Callee	DecoderState		9876260	0					
ANR	9876279	Identifier	DecoderState		9876260	0					
ANR	9876280	ArgumentList	tif		9876260	1					
ANR	9876281	Argument	tif		9876260	0					
ANR	9876282	Identifier	tif		9876260	0					
ANR	9876283	ExpressionStatement	( void ) s	266:1:8493:8501	9876260	3	True				
ANR	9876284	CastExpression	( void ) s		9876260	0					
ANR	9876285	CastTarget	void		9876260	0					
ANR	9876286	Identifier	s		9876260	1					
ANR	9876287	ExpressionStatement	assert ( sp != NULL )	267:1:8504:8522	9876260	4	True				
ANR	9876288	CallExpression	assert ( sp != NULL )		9876260	0					
ANR	9876289	Callee	assert		9876260	0					
ANR	9876290	Identifier	assert		9876260	0					
ANR	9876291	ArgumentList	sp != NULL		9876260	1					
ANR	9876292	Argument	sp != NULL		9876260	0					
ANR	9876293	EqualityExpression	sp != NULL		9876260	0		!=			
ANR	9876294	Identifier	sp		9876260	0					
ANR	9876295	Identifier	NULL		9876260	1					
ANR	9876296	IfStatement	if ( sp -> dec_codetab == NULL )		9876260	5					
ANR	9876297	Condition	sp -> dec_codetab == NULL	268:5:8529:8551	9876260	0	True				
ANR	9876298	EqualityExpression	sp -> dec_codetab == NULL		9876260	0		==			
ANR	9876299	PtrMemberAccess	sp -> dec_codetab		9876260	0					
ANR	9876300	Identifier	sp		9876260	0					
ANR	9876301	Identifier	dec_codetab		9876260	1					
ANR	9876302	Identifier	NULL		9876260	1					
ANR	9876303	CompoundStatement		8:8:159:159	9876260	1					
ANR	9876304	ExpressionStatement	tif -> tif_setupdecode ( tif )	270:12:8577:8604	9876260	0	True				
ANR	9876305	CallExpression	tif -> tif_setupdecode ( tif )		9876260	0					
ANR	9876306	Callee	tif -> tif_setupdecode		9876260	0					
ANR	9876307	PtrMemberAccess	tif -> tif_setupdecode		9876260	0					
ANR	9876308	Identifier	tif		9876260	0					
ANR	9876309	Identifier	tif_setupdecode		9876260	1					
ANR	9876310	ArgumentList	tif		9876260	1					
ANR	9876311	Argument	tif		9876260	0					
ANR	9876312	Identifier	tif		9876260	0					
ANR	9876313	IfStatement	if ( sp -> dec_codetab == NULL )		9876260	1					
ANR	9876314	Condition	sp -> dec_codetab == NULL	271:9:8615:8637	9876260	0	True				
ANR	9876315	EqualityExpression	sp -> dec_codetab == NULL		9876260	0		==			
ANR	9876316	PtrMemberAccess	sp -> dec_codetab		9876260	0					
ANR	9876317	Identifier	sp		9876260	0					
ANR	9876318	Identifier	dec_codetab		9876260	1					
ANR	9876319	Identifier	NULL		9876260	1					
ANR	9876320	ReturnStatement	return ( 0 ) ;	272:2:8643:8653	9876260	1	True				
ANR	9876321	PrimaryExpression	0		9876260	0					
ANR	9876322	IfStatement	if ( tif -> tif_rawcc >= 2 && tif -> tif_rawdata [ 0 ] == 0 && ( tif -> tif_rawdata [ 1 ] & 0x1 ) )		9876260	6					
ANR	9876323	Condition	tif -> tif_rawcc >= 2 && tif -> tif_rawdata [ 0 ] == 0 && ( tif -> tif_rawdata [ 1 ] & 0x1 )	278:5:8718:8800	9876260	0	True				
ANR	9876324	AndExpression	tif -> tif_rawcc >= 2 && tif -> tif_rawdata [ 0 ] == 0 && ( tif -> tif_rawdata [ 1 ] & 0x1 )		9876260	0		&&			
ANR	9876325	RelationalExpression	tif -> tif_rawcc >= 2		9876260	0		>=			
ANR	9876326	PtrMemberAccess	tif -> tif_rawcc		9876260	0					
ANR	9876327	Identifier	tif		9876260	0					
ANR	9876328	Identifier	tif_rawcc		9876260	1					
ANR	9876329	PrimaryExpression	2		9876260	1					
ANR	9876330	AndExpression	tif -> tif_rawdata [ 0 ] == 0 && ( tif -> tif_rawdata [ 1 ] & 0x1 )		9876260	1		&&			
ANR	9876331	EqualityExpression	tif -> tif_rawdata [ 0 ] == 0		9876260	0		==			
ANR	9876332	ArrayIndexing	tif -> tif_rawdata [ 0 ]		9876260	0					
ANR	9876333	PtrMemberAccess	tif -> tif_rawdata		9876260	0					
ANR	9876334	Identifier	tif		9876260	0					
ANR	9876335	Identifier	tif_rawdata		9876260	1					
ANR	9876336	PrimaryExpression	0		9876260	1					
ANR	9876337	PrimaryExpression	0		9876260	1					
ANR	9876338	BitAndExpression	tif -> tif_rawdata [ 1 ] & 0x1		9876260	1		&			
ANR	9876339	ArrayIndexing	tif -> tif_rawdata [ 1 ]		9876260	0					
ANR	9876340	PtrMemberAccess	tif -> tif_rawdata		9876260	0					
ANR	9876341	Identifier	tif		9876260	0					
ANR	9876342	Identifier	tif_rawdata		9876260	1					
ANR	9876343	PrimaryExpression	1		9876260	1					
ANR	9876344	PrimaryExpression	0x1		9876260	1					
ANR	9876345	CompoundStatement		18:62:399:399	9876260	1					
ANR	9876346	IfStatement	if ( ! sp -> dec_decode )		9876260	0					
ANR	9876347	Condition	! sp -> dec_decode	281:6:8829:8843	9876260	0	True				
ANR	9876348	UnaryOperationExpression	! sp -> dec_decode		9876260	0					
ANR	9876349	UnaryOperator	!		9876260	0					
ANR	9876350	PtrMemberAccess	sp -> dec_decode		9876260	1					
ANR	9876351	Identifier	sp		9876260	0					
ANR	9876352	Identifier	dec_decode		9876260	1					
ANR	9876353	CompoundStatement		20:23:442:442	9876260	1					
ANR	9876354	ExpressionStatement	"TIFFWarningExt ( tif -> tif_clientdata , module , ""Old-style LZW codes, convert file"" )"	282:3:8851:8938	9876260	0	True				
ANR	9876355	CallExpression	"TIFFWarningExt ( tif -> tif_clientdata , module , ""Old-style LZW codes, convert file"" )"		9876260	0					
ANR	9876356	Callee	TIFFWarningExt		9876260	0					
ANR	9876357	Identifier	TIFFWarningExt		9876260	0					
ANR	9876358	ArgumentList	tif -> tif_clientdata		9876260	1					
ANR	9876359	Argument	tif -> tif_clientdata		9876260	0					
ANR	9876360	PtrMemberAccess	tif -> tif_clientdata		9876260	0					
ANR	9876361	Identifier	tif		9876260	0					
ANR	9876362	Identifier	tif_clientdata		9876260	1					
ANR	9876363	Argument	module		9876260	1					
ANR	9876364	Identifier	module		9876260	0					
ANR	9876365	Argument	"""Old-style LZW codes, convert file"""		9876260	2					
ANR	9876366	PrimaryExpression	"""Old-style LZW codes, convert file"""		9876260	0					
ANR	9876367	ExpressionStatement	tif -> tif_decoderow = LZWDecodeCompat	291:3:9172:9208	9876260	1	True				
ANR	9876368	AssignmentExpression	tif -> tif_decoderow = LZWDecodeCompat		9876260	0		=			
ANR	9876369	PtrMemberAccess	tif -> tif_decoderow		9876260	0					
ANR	9876370	Identifier	tif		9876260	0					
ANR	9876371	Identifier	tif_decoderow		9876260	1					
ANR	9876372	Identifier	LZWDecodeCompat		9876260	1					
ANR	9876373	ExpressionStatement	tif -> tif_decodestrip = LZWDecodeCompat	292:3:9213:9251	9876260	2	True				
ANR	9876374	AssignmentExpression	tif -> tif_decodestrip = LZWDecodeCompat		9876260	0		=			
ANR	9876375	PtrMemberAccess	tif -> tif_decodestrip		9876260	0					
ANR	9876376	Identifier	tif		9876260	0					
ANR	9876377	Identifier	tif_decodestrip		9876260	1					
ANR	9876378	Identifier	LZWDecodeCompat		9876260	1					
ANR	9876379	ExpressionStatement	tif -> tif_decodetile = LZWDecodeCompat	293:3:9256:9293	9876260	3	True				
ANR	9876380	AssignmentExpression	tif -> tif_decodetile = LZWDecodeCompat		9876260	0		=			
ANR	9876381	PtrMemberAccess	tif -> tif_decodetile		9876260	0					
ANR	9876382	Identifier	tif		9876260	0					
ANR	9876383	Identifier	tif_decodetile		9876260	1					
ANR	9876384	Identifier	LZWDecodeCompat		9876260	1					
ANR	9876385	ExpressionStatement	( * tif -> tif_setupdecode ) ( tif )	299:3:9444:9472	9876260	4	True				
ANR	9876386	CallExpression	( * tif -> tif_setupdecode ) ( tif )		9876260	0					
ANR	9876387	Callee	* tif -> tif_setupdecode		9876260	0					
ANR	9876388	UnaryOperationExpression	* tif -> tif_setupdecode		9876260	0					
ANR	9876389	UnaryOperator	*		9876260	0					
ANR	9876390	PtrMemberAccess	tif -> tif_setupdecode		9876260	1					
ANR	9876391	Identifier	tif		9876260	0					
ANR	9876392	Identifier	tif_setupdecode		9876260	1					
ANR	9876393	ArgumentList	tif		9876260	1					
ANR	9876394	Argument	tif		9876260	0					
ANR	9876395	Identifier	tif		9876260	0					
ANR	9876396	ExpressionStatement	sp -> dec_decode = LZWDecodeCompat	300:3:9477:9509	9876260	5	True				
ANR	9876397	AssignmentExpression	sp -> dec_decode = LZWDecodeCompat		9876260	0		=			
ANR	9876398	PtrMemberAccess	sp -> dec_decode		9876260	0					
ANR	9876399	Identifier	sp		9876260	0					
ANR	9876400	Identifier	dec_decode		9876260	1					
ANR	9876401	Identifier	LZWDecodeCompat		9876260	1					
ANR	9876402	ExpressionStatement	sp -> lzw_maxcode = MAXCODE ( BITS_MIN )	302:2:9517:9552	9876260	1	True				
ANR	9876403	AssignmentExpression	sp -> lzw_maxcode = MAXCODE ( BITS_MIN )		9876260	0		=			
ANR	9876404	PtrMemberAccess	sp -> lzw_maxcode		9876260	0					
ANR	9876405	Identifier	sp		9876260	0					
ANR	9876406	Identifier	lzw_maxcode		9876260	1					
ANR	9876407	CallExpression	MAXCODE ( BITS_MIN )		9876260	1					
ANR	9876408	Callee	MAXCODE		9876260	0					
ANR	9876409	Identifier	MAXCODE		9876260	0					
ANR	9876410	ArgumentList	BITS_MIN		9876260	1					
ANR	9876411	Argument	BITS_MIN		9876260	0					
ANR	9876412	Identifier	BITS_MIN		9876260	0					
ANR	9876413	ElseStatement	else		9876260	0					
ANR	9876414	CompoundStatement		50:8:1370:1370	9876260	0					
ANR	9876415	ExpressionStatement	sp -> lzw_maxcode = MAXCODE ( BITS_MIN ) - 1	312:2:9778:9815	9876260	0	True				
ANR	9876416	AssignmentExpression	sp -> lzw_maxcode = MAXCODE ( BITS_MIN ) - 1		9876260	0		=			
ANR	9876417	PtrMemberAccess	sp -> lzw_maxcode		9876260	0					
ANR	9876418	Identifier	sp		9876260	0					
ANR	9876419	Identifier	lzw_maxcode		9876260	1					
ANR	9876420	AdditiveExpression	MAXCODE ( BITS_MIN ) - 1		9876260	1		-			
ANR	9876421	CallExpression	MAXCODE ( BITS_MIN )		9876260	0					
ANR	9876422	Callee	MAXCODE		9876260	0					
ANR	9876423	Identifier	MAXCODE		9876260	0					
ANR	9876424	ArgumentList	BITS_MIN		9876260	1					
ANR	9876425	Argument	BITS_MIN		9876260	0					
ANR	9876426	Identifier	BITS_MIN		9876260	0					
ANR	9876427	PrimaryExpression	1		9876260	1					
ANR	9876428	ExpressionStatement	sp -> dec_decode = LZWDecode	313:2:9819:9845	9876260	1	True				
ANR	9876429	AssignmentExpression	sp -> dec_decode = LZWDecode		9876260	0		=			
ANR	9876430	PtrMemberAccess	sp -> dec_decode		9876260	0					
ANR	9876431	Identifier	sp		9876260	0					
ANR	9876432	Identifier	dec_decode		9876260	1					
ANR	9876433	Identifier	LZWDecode		9876260	1					
ANR	9876434	ExpressionStatement	sp -> lzw_nbits = BITS_MIN	315:1:9851:9875	9876260	7	True				
ANR	9876435	AssignmentExpression	sp -> lzw_nbits = BITS_MIN		9876260	0		=			
ANR	9876436	PtrMemberAccess	sp -> lzw_nbits		9876260	0					
ANR	9876437	Identifier	sp		9876260	0					
ANR	9876438	Identifier	lzw_nbits		9876260	1					
ANR	9876439	Identifier	BITS_MIN		9876260	1					
ANR	9876440	ExpressionStatement	sp -> lzw_nextbits = 0	316:1:9878:9898	9876260	8	True				
ANR	9876441	AssignmentExpression	sp -> lzw_nextbits = 0		9876260	0		=			
ANR	9876442	PtrMemberAccess	sp -> lzw_nextbits		9876260	0					
ANR	9876443	Identifier	sp		9876260	0					
ANR	9876444	Identifier	lzw_nextbits		9876260	1					
ANR	9876445	PrimaryExpression	0		9876260	1					
ANR	9876446	ExpressionStatement	sp -> lzw_nextdata = 0	317:1:9901:9921	9876260	9	True				
ANR	9876447	AssignmentExpression	sp -> lzw_nextdata = 0		9876260	0		=			
ANR	9876448	PtrMemberAccess	sp -> lzw_nextdata		9876260	0					
ANR	9876449	Identifier	sp		9876260	0					
ANR	9876450	Identifier	lzw_nextdata		9876260	1					
ANR	9876451	PrimaryExpression	0		9876260	1					
ANR	9876452	ExpressionStatement	sp -> dec_restart = 0	319:1:9925:9944	9876260	10	True				
ANR	9876453	AssignmentExpression	sp -> dec_restart = 0		9876260	0		=			
ANR	9876454	PtrMemberAccess	sp -> dec_restart		9876260	0					
ANR	9876455	Identifier	sp		9876260	0					
ANR	9876456	Identifier	dec_restart		9876260	1					
ANR	9876457	PrimaryExpression	0		9876260	1					
ANR	9876458	ExpressionStatement	sp -> dec_nbitsmask = MAXCODE ( BITS_MIN )	320:1:9947:9984	9876260	11	True				
ANR	9876459	AssignmentExpression	sp -> dec_nbitsmask = MAXCODE ( BITS_MIN )		9876260	0		=			
ANR	9876460	PtrMemberAccess	sp -> dec_nbitsmask		9876260	0					
ANR	9876461	Identifier	sp		9876260	0					
ANR	9876462	Identifier	dec_nbitsmask		9876260	1					
ANR	9876463	CallExpression	MAXCODE ( BITS_MIN )		9876260	1					
ANR	9876464	Callee	MAXCODE		9876260	0					
ANR	9876465	Identifier	MAXCODE		9876260	0					
ANR	9876466	ArgumentList	BITS_MIN		9876260	1					
ANR	9876467	Argument	BITS_MIN		9876260	0					
ANR	9876468	Identifier	BITS_MIN		9876260	0					
ANR	9876469	ExpressionStatement	sp -> dec_bitsleft = 0	322:1:10007:10027	9876260	12	True				
ANR	9876470	AssignmentExpression	sp -> dec_bitsleft = 0		9876260	0		=			
ANR	9876471	PtrMemberAccess	sp -> dec_bitsleft		9876260	0					
ANR	9876472	Identifier	sp		9876260	0					
ANR	9876473	Identifier	dec_bitsleft		9876260	1					
ANR	9876474	PrimaryExpression	0		9876260	1					
ANR	9876475	ExpressionStatement	sp -> dec_free_entp = sp -> dec_codetab + CODE_FIRST	324:1:10037:10085	9876260	13	True				
ANR	9876476	AssignmentExpression	sp -> dec_free_entp = sp -> dec_codetab + CODE_FIRST		9876260	0		=			
ANR	9876477	PtrMemberAccess	sp -> dec_free_entp		9876260	0					
ANR	9876478	Identifier	sp		9876260	0					
ANR	9876479	Identifier	dec_free_entp		9876260	1					
ANR	9876480	AdditiveExpression	sp -> dec_codetab + CODE_FIRST		9876260	1		+			
ANR	9876481	PtrMemberAccess	sp -> dec_codetab		9876260	0					
ANR	9876482	Identifier	sp		9876260	0					
ANR	9876483	Identifier	dec_codetab		9876260	1					
ANR	9876484	Identifier	CODE_FIRST		9876260	1					
ANR	9876485	ExpressionStatement	"_TIFFmemset ( sp -> dec_free_entp , 0 , ( CSIZE - CODE_FIRST ) * sizeof ( code_t ) )"	332:1:10369:10438	9876260	14	True				
ANR	9876486	CallExpression	"_TIFFmemset ( sp -> dec_free_entp , 0 , ( CSIZE - CODE_FIRST ) * sizeof ( code_t ) )"		9876260	0					
ANR	9876487	Callee	_TIFFmemset		9876260	0					
ANR	9876488	Identifier	_TIFFmemset		9876260	0					
ANR	9876489	ArgumentList	sp -> dec_free_entp		9876260	1					
ANR	9876490	Argument	sp -> dec_free_entp		9876260	0					
ANR	9876491	PtrMemberAccess	sp -> dec_free_entp		9876260	0					
ANR	9876492	Identifier	sp		9876260	0					
ANR	9876493	Identifier	dec_free_entp		9876260	1					
ANR	9876494	Argument	0		9876260	1					
ANR	9876495	PrimaryExpression	0		9876260	0					
ANR	9876496	Argument	( CSIZE - CODE_FIRST ) * sizeof ( code_t )		9876260	2					
ANR	9876497	MultiplicativeExpression	( CSIZE - CODE_FIRST ) * sizeof ( code_t )		9876260	0		*			
ANR	9876498	AdditiveExpression	CSIZE - CODE_FIRST		9876260	0		-			
ANR	9876499	Identifier	CSIZE		9876260	0					
ANR	9876500	Identifier	CODE_FIRST		9876260	1					
ANR	9876501	SizeofExpression	sizeof ( code_t )		9876260	1					
ANR	9876502	Sizeof	sizeof		9876260	0					
ANR	9876503	SizeofOperand	code_t		9876260	1					
ANR	9876504	ExpressionStatement	sp -> dec_oldcodep = & sp -> dec_codetab [ - 1 ]	333:1:10441:10480	9876260	15	True				
ANR	9876505	AssignmentExpression	sp -> dec_oldcodep = & sp -> dec_codetab [ - 1 ]		9876260	0		=			
ANR	9876506	PtrMemberAccess	sp -> dec_oldcodep		9876260	0					
ANR	9876507	Identifier	sp		9876260	0					
ANR	9876508	Identifier	dec_oldcodep		9876260	1					
ANR	9876509	UnaryOperationExpression	& sp -> dec_codetab [ - 1 ]		9876260	1					
ANR	9876510	UnaryOperator	&		9876260	0					
ANR	9876511	ArrayIndexing	sp -> dec_codetab [ - 1 ]		9876260	1					
ANR	9876512	PtrMemberAccess	sp -> dec_codetab		9876260	0					
ANR	9876513	Identifier	sp		9876260	0					
ANR	9876514	Identifier	dec_codetab		9876260	1					
ANR	9876515	UnaryOperationExpression	- 1		9876260	1					
ANR	9876516	UnaryOperator	-		9876260	0					
ANR	9876517	PrimaryExpression	1		9876260	1					
ANR	9876518	ExpressionStatement	sp -> dec_maxcodep = & sp -> dec_codetab [ sp -> dec_nbitsmask - 1 ]	334:1:10483:10539	9876260	16	True				
ANR	9876519	AssignmentExpression	sp -> dec_maxcodep = & sp -> dec_codetab [ sp -> dec_nbitsmask - 1 ]		9876260	0		=			
ANR	9876520	PtrMemberAccess	sp -> dec_maxcodep		9876260	0					
ANR	9876521	Identifier	sp		9876260	0					
ANR	9876522	Identifier	dec_maxcodep		9876260	1					
ANR	9876523	UnaryOperationExpression	& sp -> dec_codetab [ sp -> dec_nbitsmask - 1 ]		9876260	1					
ANR	9876524	UnaryOperator	&		9876260	0					
ANR	9876525	ArrayIndexing	sp -> dec_codetab [ sp -> dec_nbitsmask - 1 ]		9876260	1					
ANR	9876526	PtrMemberAccess	sp -> dec_codetab		9876260	0					
ANR	9876527	Identifier	sp		9876260	0					
ANR	9876528	Identifier	dec_codetab		9876260	1					
ANR	9876529	AdditiveExpression	sp -> dec_nbitsmask - 1		9876260	1		-			
ANR	9876530	PtrMemberAccess	sp -> dec_nbitsmask		9876260	0					
ANR	9876531	Identifier	sp		9876260	0					
ANR	9876532	Identifier	dec_nbitsmask		9876260	1					
ANR	9876533	PrimaryExpression	1		9876260	1					
ANR	9876534	ReturnStatement	return ( 1 ) ;	335:1:10542:10552	9876260	17	True				
ANR	9876535	PrimaryExpression	1		9876260	0					
ANR	9876536	ReturnType	static int		9876260	1					
ANR	9876537	Identifier	LZWPreDecode		9876260	2					
ANR	9876538	ParameterList	"TIFF * tif , uint16 s"		9876260	3					
ANR	9876539	Parameter	TIFF * tif	261:13:8382:8390	9876260	0	True				
ANR	9876540	ParameterType	TIFF *		9876260	0					
ANR	9876541	Identifier	tif		9876260	1					
ANR	9876542	Parameter	uint16 s	261:24:8393:8400	9876260	1	True				
ANR	9876543	ParameterType	uint16		9876260	0					
ANR	9876544	Identifier	s		9876260	1					
ANR	9876545	CFGEntryNode	ENTRY		9876260		True				
ANR	9876546	CFGExitNode	EXIT		9876260		True				
ANR	9876547	Symbol	* sp		9876260						
ANR	9876548	Symbol	sp -> lzw_nbits		9876260						
ANR	9876549	Symbol	sp -> lzw_maxcode		9876260						
ANR	9876550	Symbol	sp -> dec_nbitsmask		9876260						
ANR	9876551	Symbol	sp -> dec_codetab		9876260						
ANR	9876552	Symbol	tif		9876260						
ANR	9876553	Symbol	tif -> tif_rawcc		9876260						
ANR	9876554	Symbol	CSIZE		9876260						
ANR	9876555	Symbol	MAXCODE		9876260						
ANR	9876556	Symbol	DecoderState		9876260						
ANR	9876557	Symbol	LZWDecode		9876260						
ANR	9876558	Symbol	tif -> tif_setupdecode		9876260						
ANR	9876559	Symbol	sp -> dec_maxcodep		9876260						
ANR	9876560	Symbol	tif -> tif_decoderow		9876260						
ANR	9876561	Symbol	tif -> tif_decodetile		9876260						
ANR	9876562	Symbol	sp -> lzw_nextdata		9876260						
ANR	9876563	Symbol	sp		9876260						
ANR	9876564	Symbol	tif -> tif_decodestrip		9876260						
ANR	9876565	Symbol	NULL		9876260						
ANR	9876566	Symbol	* * tif		9876260						
ANR	9876567	Symbol	module		9876260						
ANR	9876568	Symbol	* tif -> tif_rawdata		9876260						
ANR	9876569	Symbol	sp -> dec_decode		9876260						
ANR	9876570	Symbol	tif -> tif_clientdata		9876260						
ANR	9876571	Symbol	BITS_MIN		9876260						
ANR	9876572	Symbol	sp -> dec_bitsleft		9876260						
ANR	9876573	Symbol	s		9876260						
ANR	9876574	Symbol	CODE_FIRST		9876260						
ANR	9876575	Symbol	LZWDecodeCompat		9876260						
ANR	9876576	Symbol	sp -> lzw_nextbits		9876260						
ANR	9876577	Symbol	* tif		9876260						
ANR	9876578	Symbol	sp -> dec_restart		9876260						
ANR	9876579	Symbol	sp -> dec_free_entp		9876260						
ANR	9876580	Symbol	sp -> dec_oldcodep		9876260						
ANR	9876581	Symbol	tif -> tif_rawdata		9876260						
ANR	9876582	Function	codeLoop	352:0:10897:11074							
ANR	9876583	FunctionDef	"codeLoop (TIFF * tif , const char * module)"		9876582	0					
ANR	9876584	CompoundStatement		354:0:10949:11074	9876582	0					
ANR	9876585	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Bogus encoding, loop in the code table; scanline %d"" , tif -> tif_row )"	355:1:10952:11072	9876582	0	True				
ANR	9876586	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Bogus encoding, loop in the code table; scanline %d"" , tif -> tif_row )"		9876582	0					
ANR	9876587	Callee	TIFFErrorExt		9876582	0					
ANR	9876588	Identifier	TIFFErrorExt		9876582	0					
ANR	9876589	ArgumentList	tif -> tif_clientdata		9876582	1					
ANR	9876590	Argument	tif -> tif_clientdata		9876582	0					
ANR	9876591	PtrMemberAccess	tif -> tif_clientdata		9876582	0					
ANR	9876592	Identifier	tif		9876582	0					
ANR	9876593	Identifier	tif_clientdata		9876582	1					
ANR	9876594	Argument	module		9876582	1					
ANR	9876595	Identifier	module		9876582	0					
ANR	9876596	Argument	"""Bogus encoding, loop in the code table; scanline %d"""		9876582	2					
ANR	9876597	PrimaryExpression	"""Bogus encoding, loop in the code table; scanline %d"""		9876582	0					
ANR	9876598	Argument	tif -> tif_row		9876582	3					
ANR	9876599	PtrMemberAccess	tif -> tif_row		9876582	0					
ANR	9876600	Identifier	tif		9876582	0					
ANR	9876601	Identifier	tif_row		9876582	1					
ANR	9876602	ReturnType	static void		9876582	1					
ANR	9876603	Identifier	codeLoop		9876582	2					
ANR	9876604	ParameterList	"TIFF * tif , const char * module"		9876582	3					
ANR	9876605	Parameter	TIFF * tif	353:9:10918:10926	9876582	0	True				
ANR	9876606	ParameterType	TIFF *		9876582	0					
ANR	9876607	Identifier	tif		9876582	1					
ANR	9876608	Parameter	const char * module	353:20:10929:10946	9876582	1	True				
ANR	9876609	ParameterType	const char *		9876582	0					
ANR	9876610	Identifier	module		9876582	1					
ANR	9876611	CFGEntryNode	ENTRY		9876582		True				
ANR	9876612	CFGExitNode	EXIT		9876582		True				
ANR	9876613	Symbol	tif		9876582						
ANR	9876614	Symbol	module		9876582						
ANR	9876615	Symbol	tif -> tif_row		9876582						
ANR	9876616	Symbol	* tif		9876582						
ANR	9876617	Symbol	tif -> tif_clientdata		9876582						
ANR	9876618	Function	LZWDecode	360:0:11077:16573							
ANR	9876619	FunctionDef	"LZWDecode (TIFF * tif , uint8 * op0 , tmsize_t occ0 , uint16 s)"		9876618	0					
ANR	9876620	CompoundStatement		362:0:11146:16573	9876618	0					
ANR	9876621	Statement	static	363:1:11149:11154	9876618	0	True				
ANR	9876622	IdentifierDeclStatement	"const char module [ ] = ""LZWDecode"" ;"	363:8:11156:11189	9876618	1	True				
ANR	9876623	IdentifierDecl	"module [ ] = ""LZWDecode"""		9876618	0					
ANR	9876624	IdentifierDeclType	const char [ ]		9876618	0					
ANR	9876625	Identifier	module		9876618	1					
ANR	9876626	AssignmentExpression	"module [ ] = ""LZWDecode"""		9876618	2		=			
ANR	9876627	Identifier	module		9876618	0					
ANR	9876628	PrimaryExpression	"""LZWDecode"""		9876618	1					
ANR	9876629	IdentifierDeclStatement	LZWCodecState * sp = DecoderState ( tif ) ;	364:1:11192:11229	9876618	2	True				
ANR	9876630	IdentifierDecl	* sp = DecoderState ( tif )		9876618	0					
ANR	9876631	IdentifierDeclType	LZWCodecState *		9876618	0					
ANR	9876632	Identifier	sp		9876618	1					
ANR	9876633	AssignmentExpression	* sp = DecoderState ( tif )		9876618	2		=			
ANR	9876634	Identifier	sp		9876618	0					
ANR	9876635	CallExpression	DecoderState ( tif )		9876618	1					
ANR	9876636	Callee	DecoderState		9876618	0					
ANR	9876637	Identifier	DecoderState		9876618	0					
ANR	9876638	ArgumentList	tif		9876618	1					
ANR	9876639	Argument	tif		9876618	0					
ANR	9876640	Identifier	tif		9876618	0					
ANR	9876641	IdentifierDeclStatement	char * op = ( char * ) op0 ;	365:1:11232:11254	9876618	3	True				
ANR	9876642	IdentifierDecl	* op = ( char * ) op0		9876618	0					
ANR	9876643	IdentifierDeclType	char *		9876618	0					
ANR	9876644	Identifier	op		9876618	1					
ANR	9876645	AssignmentExpression	* op = ( char * ) op0		9876618	2		=			
ANR	9876646	Identifier	op		9876618	0					
ANR	9876647	CastExpression	( char * ) op0		9876618	1					
ANR	9876648	CastTarget	char *		9876618	0					
ANR	9876649	Identifier	op0		9876618	1					
ANR	9876650	IdentifierDeclStatement	long occ = ( long ) occ0 ;	366:1:11257:11279	9876618	4	True				
ANR	9876651	IdentifierDecl	occ = ( long ) occ0		9876618	0					
ANR	9876652	IdentifierDeclType	long		9876618	0					
ANR	9876653	Identifier	occ		9876618	1					
ANR	9876654	AssignmentExpression	occ = ( long ) occ0		9876618	2		=			
ANR	9876655	Identifier	occ		9876618	0					
ANR	9876656	CastExpression	( long ) occ0		9876618	1					
ANR	9876657	CastTarget	long		9876618	0					
ANR	9876658	Identifier	occ0		9876618	1					
ANR	9876659	IdentifierDeclStatement	char * tp ;	367:1:11282:11290	9876618	5	True				
ANR	9876660	IdentifierDecl	* tp		9876618	0					
ANR	9876661	IdentifierDeclType	char *		9876618	0					
ANR	9876662	Identifier	tp		9876618	1					
ANR	9876663	IdentifierDeclStatement	unsigned char * bp ;	368:1:11293:11310	9876618	6	True				
ANR	9876664	IdentifierDecl	* bp		9876618	0					
ANR	9876665	IdentifierDeclType	unsigned char *		9876618	0					
ANR	9876666	Identifier	bp		9876618	1					
ANR	9876667	IdentifierDeclStatement	hcode_t code ;	369:1:11313:11325	9876618	7	True				
ANR	9876668	IdentifierDecl	code		9876618	0					
ANR	9876669	IdentifierDeclType	hcode_t		9876618	0					
ANR	9876670	Identifier	code		9876618	1					
ANR	9876671	IdentifierDeclStatement	int len ;	370:1:11328:11335	9876618	8	True				
ANR	9876672	IdentifierDecl	len		9876618	0					
ANR	9876673	IdentifierDeclType	int		9876618	0					
ANR	9876674	Identifier	len		9876618	1					
ANR	9876675	IdentifierDeclStatement	"long nbits , nextbits , nbitsmask ;"	371:1:11338:11369	9876618	9	True				
ANR	9876676	IdentifierDecl	nbits		9876618	0					
ANR	9876677	IdentifierDeclType	long		9876618	0					
ANR	9876678	Identifier	nbits		9876618	1					
ANR	9876679	IdentifierDecl	nextbits		9876618	1					
ANR	9876680	IdentifierDeclType	long		9876618	0					
ANR	9876681	Identifier	nextbits		9876618	1					
ANR	9876682	IdentifierDecl	nbitsmask		9876618	2					
ANR	9876683	IdentifierDeclType	long		9876618	0					
ANR	9876684	Identifier	nbitsmask		9876618	1					
ANR	9876685	IdentifierDeclStatement	unsigned long nextdata ;	372:8:11379:11401	9876618	10	True				
ANR	9876686	IdentifierDecl	nextdata		9876618	0					
ANR	9876687	IdentifierDeclType	unsigned long		9876618	0					
ANR	9876688	Identifier	nextdata		9876618	1					
ANR	9876689	IdentifierDeclStatement	"code_t * codep , * free_entp , * maxcodep , * oldcodep ;"	373:1:11404:11451	9876618	11	True				
ANR	9876690	IdentifierDecl	* codep		9876618	0					
ANR	9876691	IdentifierDeclType	code_t *		9876618	0					
ANR	9876692	Identifier	codep		9876618	1					
ANR	9876693	IdentifierDecl	* free_entp		9876618	1					
ANR	9876694	IdentifierDeclType	code_t *		9876618	0					
ANR	9876695	Identifier	free_entp		9876618	1					
ANR	9876696	IdentifierDecl	* maxcodep		9876618	2					
ANR	9876697	IdentifierDeclType	code_t *		9876618	0					
ANR	9876698	Identifier	maxcodep		9876618	1					
ANR	9876699	IdentifierDecl	* oldcodep		9876618	3					
ANR	9876700	IdentifierDeclType	code_t *		9876618	0					
ANR	9876701	Identifier	oldcodep		9876618	1					
ANR	9876702	ExpressionStatement	( void ) s	375:1:11455:11463	9876618	12	True				
ANR	9876703	CastExpression	( void ) s		9876618	0					
ANR	9876704	CastTarget	void		9876618	0					
ANR	9876705	Identifier	s		9876618	1					
ANR	9876706	ExpressionStatement	assert ( sp != NULL )	376:1:11466:11484	9876618	13	True				
ANR	9876707	CallExpression	assert ( sp != NULL )		9876618	0					
ANR	9876708	Callee	assert		9876618	0					
ANR	9876709	Identifier	assert		9876618	0					
ANR	9876710	ArgumentList	sp != NULL		9876618	1					
ANR	9876711	Argument	sp != NULL		9876618	0					
ANR	9876712	EqualityExpression	sp != NULL		9876618	0		!=			
ANR	9876713	Identifier	sp		9876618	0					
ANR	9876714	Identifier	NULL		9876618	1					
ANR	9876715	ExpressionStatement	assert ( sp -> dec_codetab != NULL )	377:8:11494:11525	9876618	14	True				
ANR	9876716	CallExpression	assert ( sp -> dec_codetab != NULL )		9876618	0					
ANR	9876717	Callee	assert		9876618	0					
ANR	9876718	Identifier	assert		9876618	0					
ANR	9876719	ArgumentList	sp -> dec_codetab != NULL		9876618	1					
ANR	9876720	Argument	sp -> dec_codetab != NULL		9876618	0					
ANR	9876721	EqualityExpression	sp -> dec_codetab != NULL		9876618	0		!=			
ANR	9876722	PtrMemberAccess	sp -> dec_codetab		9876618	0					
ANR	9876723	Identifier	sp		9876618	0					
ANR	9876724	Identifier	dec_codetab		9876618	1					
ANR	9876725	Identifier	NULL		9876618	1					
ANR	9876726	IfStatement	if ( ( tmsize_t ) occ != occ0 )		9876618	15					
ANR	9876727	Condition	( tmsize_t ) occ != occ0	382:5:11580:11601	9876618	0	True				
ANR	9876728	EqualityExpression	( tmsize_t ) occ != occ0		9876618	0		!=			
ANR	9876729	CastExpression	( tmsize_t ) occ		9876618	0					
ANR	9876730	CastTarget	tmsize_t		9876618	0					
ANR	9876731	Identifier	occ		9876618	1					
ANR	9876732	Identifier	occ0		9876618	1					
ANR	9876733	ReturnStatement	return ( 0 ) ;	383:9:11613:11623	9876618	1	True				
ANR	9876734	PrimaryExpression	0		9876618	0					
ANR	9876735	IfStatement	if ( sp -> dec_restart )		9876618	16					
ANR	9876736	Condition	sp -> dec_restart	387:5:11681:11695	9876618	0	True				
ANR	9876737	PtrMemberAccess	sp -> dec_restart		9876618	0					
ANR	9876738	Identifier	sp		9876618	0					
ANR	9876739	Identifier	dec_restart		9876618	1					
ANR	9876740	CompoundStatement		27:2:555:567	9876618	1					
ANR	9876741	IdentifierDeclStatement	long residue ;	388:2:11702:11714	9876618	0	True				
ANR	9876742	IdentifierDecl	residue		9876618	0					
ANR	9876743	IdentifierDeclType	long		9876618	0					
ANR	9876744	Identifier	residue		9876618	1					
ANR	9876745	ExpressionStatement	codep = sp -> dec_codep	390:2:11719:11740	9876618	1	True				
ANR	9876746	AssignmentExpression	codep = sp -> dec_codep		9876618	0		=			
ANR	9876747	Identifier	codep		9876618	0					
ANR	9876748	PtrMemberAccess	sp -> dec_codep		9876618	1					
ANR	9876749	Identifier	sp		9876618	0					
ANR	9876750	Identifier	dec_codep		9876618	1					
ANR	9876751	ExpressionStatement	residue = codep -> length - sp -> dec_restart	391:2:11744:11785	9876618	2	True				
ANR	9876752	AssignmentExpression	residue = codep -> length - sp -> dec_restart		9876618	0		=			
ANR	9876753	Identifier	residue		9876618	0					
ANR	9876754	AdditiveExpression	codep -> length - sp -> dec_restart		9876618	1		-			
ANR	9876755	PtrMemberAccess	codep -> length		9876618	0					
ANR	9876756	Identifier	codep		9876618	0					
ANR	9876757	Identifier	length		9876618	1					
ANR	9876758	PtrMemberAccess	sp -> dec_restart		9876618	1					
ANR	9876759	Identifier	sp		9876618	0					
ANR	9876760	Identifier	dec_restart		9876618	1					
ANR	9876761	IfStatement	if ( residue > occ )		9876618	3					
ANR	9876762	Condition	residue > occ	392:6:11793:11805	9876618	0	True				
ANR	9876763	RelationalExpression	residue > occ		9876618	0		>			
ANR	9876764	Identifier	residue		9876618	0					
ANR	9876765	Identifier	occ		9876618	1					
ANR	9876766	CompoundStatement		31:21:661:661	9876618	1					
ANR	9876767	ExpressionStatement	sp -> dec_restart += occ	399:3:12017:12039	9876618	0	True				
ANR	9876768	AssignmentExpression	sp -> dec_restart += occ		9876618	0		+=			
ANR	9876769	PtrMemberAccess	sp -> dec_restart		9876618	0					
ANR	9876770	Identifier	sp		9876618	0					
ANR	9876771	Identifier	dec_restart		9876618	1					
ANR	9876772	Identifier	occ		9876618	1					
ANR	9876773	DoStatement	do		9876618	1					
ANR	9876774	CompoundStatement		39:6:900:900	9876618	0					
ANR	9876775	ExpressionStatement	codep = codep -> next	401:4:12053:12072	9876618	0	True				
ANR	9876776	AssignmentExpression	codep = codep -> next		9876618	0		=			
ANR	9876777	Identifier	codep		9876618	0					
ANR	9876778	PtrMemberAccess	codep -> next		9876618	1					
ANR	9876779	Identifier	codep		9876618	0					
ANR	9876780	Identifier	next		9876618	1					
ANR	9876781	Condition	-- residue > occ && codep	402:12:12086:12109	9876618	1	True				
ANR	9876782	AndExpression	-- residue > occ && codep		9876618	0		&&			
ANR	9876783	RelationalExpression	-- residue > occ		9876618	0		>			
ANR	9876784	UnaryExpression	-- residue		9876618	0					
ANR	9876785	IncDec	--		9876618	0					
ANR	9876786	Identifier	residue		9876618	1					
ANR	9876787	Identifier	occ		9876618	1					
ANR	9876788	Identifier	codep		9876618	1					
ANR	9876789	IfStatement	if ( codep )		9876618	2					
ANR	9876790	Condition	codep	403:7:12120:12124	9876618	0	True				
ANR	9876791	Identifier	codep		9876618	0					
ANR	9876792	CompoundStatement		42:14:980:980	9876618	1					
ANR	9876793	ExpressionStatement	tp = op + occ	404:4:12133:12146	9876618	0	True				
ANR	9876794	AssignmentExpression	tp = op + occ		9876618	0		=			
ANR	9876795	Identifier	tp		9876618	0					
ANR	9876796	AdditiveExpression	op + occ		9876618	1		+			
ANR	9876797	Identifier	op		9876618	0					
ANR	9876798	Identifier	occ		9876618	1					
ANR	9876799	DoStatement	do		9876618	1					
ANR	9876800	CompoundStatement		44:7:1008:1008	9876618	0					
ANR	9876801	ExpressionStatement	* -- tp = codep -> value	406:5:12162:12182	9876618	0	True				
ANR	9876802	AssignmentExpression	* -- tp = codep -> value		9876618	0		=			
ANR	9876803	UnaryOperationExpression	* -- tp		9876618	0					
ANR	9876804	UnaryOperator	*		9876618	0					
ANR	9876805	UnaryExpression	-- tp		9876618	1					
ANR	9876806	IncDec	--		9876618	0					
ANR	9876807	Identifier	tp		9876618	1					
ANR	9876808	PtrMemberAccess	codep -> value		9876618	1					
ANR	9876809	Identifier	codep		9876618	0					
ANR	9876810	Identifier	value		9876618	1					
ANR	9876811	ExpressionStatement	codep = codep -> next	407:5:12189:12208	9876618	1	True				
ANR	9876812	AssignmentExpression	codep = codep -> next		9876618	0		=			
ANR	9876813	Identifier	codep		9876618	0					
ANR	9876814	PtrMemberAccess	codep -> next		9876618	1					
ANR	9876815	Identifier	codep		9876618	0					
ANR	9876816	Identifier	next		9876618	1					
ANR	9876817	Condition	-- occ && codep	408:13:12223:12236	9876618	1	True				
ANR	9876818	AndExpression	-- occ && codep		9876618	0		&&			
ANR	9876819	UnaryExpression	-- occ		9876618	0					
ANR	9876820	IncDec	--		9876618	0					
ANR	9876821	Identifier	occ		9876618	1					
ANR	9876822	Identifier	codep		9876618	1					
ANR	9876823	ReturnStatement	return ( 1 ) ;	410:3:12248:12258	9876618	3	True				
ANR	9876824	PrimaryExpression	1		9876618	0					
ANR	9876825	ExpressionStatement	op += residue	415:2:12333:12346	9876618	4	True				
ANR	9876826	AssignmentExpression	op += residue		9876618	0		+=			
ANR	9876827	Identifier	op		9876618	0					
ANR	9876828	Identifier	residue		9876618	1					
ANR	9876829	ExpressionStatement	occ -= residue	416:2:12350:12364	9876618	5	True				
ANR	9876830	AssignmentExpression	occ -= residue		9876618	0		-=			
ANR	9876831	Identifier	occ		9876618	0					
ANR	9876832	Identifier	residue		9876618	1					
ANR	9876833	ExpressionStatement	tp = op	417:2:12368:12375	9876618	6	True				
ANR	9876834	AssignmentExpression	tp = op		9876618	0		=			
ANR	9876835	Identifier	tp		9876618	0					
ANR	9876836	Identifier	op		9876618	1					
ANR	9876837	DoStatement	do		9876618	7					
ANR	9876838	CompoundStatement		58:3:1240:1245	9876618	0					
ANR	9876839	IdentifierDeclStatement	int t ;	419:3:12387:12392	9876618	0	True				
ANR	9876840	IdentifierDecl	t		9876618	0					
ANR	9876841	IdentifierDeclType	int		9876618	0					
ANR	9876842	Identifier	t		9876618	1					
ANR	9876843	ExpressionStatement	-- tp	420:3:12397:12401	9876618	1	True				
ANR	9876844	UnaryExpression	-- tp		9876618	0					
ANR	9876845	IncDec	--		9876618	0					
ANR	9876846	Identifier	tp		9876618	1					
ANR	9876847	ExpressionStatement	t = codep -> value	421:3:12406:12422	9876618	2	True				
ANR	9876848	AssignmentExpression	t = codep -> value		9876618	0		=			
ANR	9876849	Identifier	t		9876618	0					
ANR	9876850	PtrMemberAccess	codep -> value		9876618	1					
ANR	9876851	Identifier	codep		9876618	0					
ANR	9876852	Identifier	value		9876618	1					
ANR	9876853	ExpressionStatement	codep = codep -> next	422:3:12427:12446	9876618	3	True				
ANR	9876854	AssignmentExpression	codep = codep -> next		9876618	0		=			
ANR	9876855	Identifier	codep		9876618	0					
ANR	9876856	PtrMemberAccess	codep -> next		9876618	1					
ANR	9876857	Identifier	codep		9876618	0					
ANR	9876858	Identifier	next		9876618	1					
ANR	9876859	ExpressionStatement	* tp = ( char ) t	423:3:12451:12464	9876618	4	True				
ANR	9876860	AssignmentExpression	* tp = ( char ) t		9876618	0		=			
ANR	9876861	UnaryOperationExpression	* tp		9876618	0					
ANR	9876862	UnaryOperator	*		9876618	0					
ANR	9876863	Identifier	tp		9876618	1					
ANR	9876864	CastExpression	( char ) t		9876618	1					
ANR	9876865	CastTarget	char		9876618	0					
ANR	9876866	Identifier	t		9876618	1					
ANR	9876867	Condition	-- residue && codep	424:11:12477:12494	9876618	1	True				
ANR	9876868	AndExpression	-- residue && codep		9876618	0		&&			
ANR	9876869	UnaryExpression	-- residue		9876618	0					
ANR	9876870	IncDec	--		9876618	0					
ANR	9876871	Identifier	residue		9876618	1					
ANR	9876872	Identifier	codep		9876618	1					
ANR	9876873	ExpressionStatement	sp -> dec_restart = 0	425:2:12500:12519	9876618	8	True				
ANR	9876874	AssignmentExpression	sp -> dec_restart = 0		9876618	0		=			
ANR	9876875	PtrMemberAccess	sp -> dec_restart		9876618	0					
ANR	9876876	Identifier	sp		9876618	0					
ANR	9876877	Identifier	dec_restart		9876618	1					
ANR	9876878	PrimaryExpression	0		9876618	1					
ANR	9876879	ExpressionStatement	bp = ( unsigned char * ) tif -> tif_rawcp	428:1:12526:12562	9876618	17	True				
ANR	9876880	AssignmentExpression	bp = ( unsigned char * ) tif -> tif_rawcp		9876618	0		=			
ANR	9876881	Identifier	bp		9876618	0					
ANR	9876882	CastExpression	( unsigned char * ) tif -> tif_rawcp		9876618	1					
ANR	9876883	CastTarget	unsigned char *		9876618	0					
ANR	9876884	PtrMemberAccess	tif -> tif_rawcp		9876618	1					
ANR	9876885	Identifier	tif		9876618	0					
ANR	9876886	Identifier	tif_rawcp		9876618	1					
ANR	9876887	ExpressionStatement	sp -> dec_bitsleft = ( ( ( uint64 ) tif -> tif_rawcc ) << 3 )	430:1:12585:12635	9876618	18	True				
ANR	9876888	AssignmentExpression	sp -> dec_bitsleft = ( ( ( uint64 ) tif -> tif_rawcc ) << 3 )		9876618	0		=			
ANR	9876889	PtrMemberAccess	sp -> dec_bitsleft		9876618	0					
ANR	9876890	Identifier	sp		9876618	0					
ANR	9876891	Identifier	dec_bitsleft		9876618	1					
ANR	9876892	ShiftExpression	( ( uint64 ) tif -> tif_rawcc ) << 3		9876618	1		<<			
ANR	9876893	CastExpression	( uint64 ) tif -> tif_rawcc		9876618	0					
ANR	9876894	CastTarget	uint64		9876618	0					
ANR	9876895	PtrMemberAccess	tif -> tif_rawcc		9876618	1					
ANR	9876896	Identifier	tif		9876618	0					
ANR	9876897	Identifier	tif_rawcc		9876618	1					
ANR	9876898	PrimaryExpression	3		9876618	1					
ANR	9876899	ExpressionStatement	nbits = sp -> lzw_nbits	432:1:12645:12666	9876618	19	True				
ANR	9876900	AssignmentExpression	nbits = sp -> lzw_nbits		9876618	0		=			
ANR	9876901	Identifier	nbits		9876618	0					
ANR	9876902	PtrMemberAccess	sp -> lzw_nbits		9876618	1					
ANR	9876903	Identifier	sp		9876618	0					
ANR	9876904	Identifier	lzw_nbits		9876618	1					
ANR	9876905	ExpressionStatement	nextdata = sp -> lzw_nextdata	433:1:12669:12696	9876618	20	True				
ANR	9876906	AssignmentExpression	nextdata = sp -> lzw_nextdata		9876618	0		=			
ANR	9876907	Identifier	nextdata		9876618	0					
ANR	9876908	PtrMemberAccess	sp -> lzw_nextdata		9876618	1					
ANR	9876909	Identifier	sp		9876618	0					
ANR	9876910	Identifier	lzw_nextdata		9876618	1					
ANR	9876911	ExpressionStatement	nextbits = sp -> lzw_nextbits	434:1:12699:12726	9876618	21	True				
ANR	9876912	AssignmentExpression	nextbits = sp -> lzw_nextbits		9876618	0		=			
ANR	9876913	Identifier	nextbits		9876618	0					
ANR	9876914	PtrMemberAccess	sp -> lzw_nextbits		9876618	1					
ANR	9876915	Identifier	sp		9876618	0					
ANR	9876916	Identifier	lzw_nextbits		9876618	1					
ANR	9876917	ExpressionStatement	nbitsmask = sp -> dec_nbitsmask	435:1:12729:12758	9876618	22	True				
ANR	9876918	AssignmentExpression	nbitsmask = sp -> dec_nbitsmask		9876618	0		=			
ANR	9876919	Identifier	nbitsmask		9876618	0					
ANR	9876920	PtrMemberAccess	sp -> dec_nbitsmask		9876618	1					
ANR	9876921	Identifier	sp		9876618	0					
ANR	9876922	Identifier	dec_nbitsmask		9876618	1					
ANR	9876923	ExpressionStatement	oldcodep = sp -> dec_oldcodep	436:1:12761:12788	9876618	23	True				
ANR	9876924	AssignmentExpression	oldcodep = sp -> dec_oldcodep		9876618	0		=			
ANR	9876925	Identifier	oldcodep		9876618	0					
ANR	9876926	PtrMemberAccess	sp -> dec_oldcodep		9876618	1					
ANR	9876927	Identifier	sp		9876618	0					
ANR	9876928	Identifier	dec_oldcodep		9876618	1					
ANR	9876929	ExpressionStatement	free_entp = sp -> dec_free_entp	437:1:12791:12820	9876618	24	True				
ANR	9876930	AssignmentExpression	free_entp = sp -> dec_free_entp		9876618	0		=			
ANR	9876931	Identifier	free_entp		9876618	0					
ANR	9876932	PtrMemberAccess	sp -> dec_free_entp		9876618	1					
ANR	9876933	Identifier	sp		9876618	0					
ANR	9876934	Identifier	dec_free_entp		9876618	1					
ANR	9876935	ExpressionStatement	maxcodep = sp -> dec_maxcodep	438:1:12823:12850	9876618	25	True				
ANR	9876936	AssignmentExpression	maxcodep = sp -> dec_maxcodep		9876618	0		=			
ANR	9876937	Identifier	maxcodep		9876618	0					
ANR	9876938	PtrMemberAccess	sp -> dec_maxcodep		9876618	1					
ANR	9876939	Identifier	sp		9876618	0					
ANR	9876940	Identifier	dec_maxcodep		9876618	1					
ANR	9876941	WhileStatement	while ( occ > 0 )		9876618	26					
ANR	9876942	Condition	occ > 0	440:8:12861:12867	9876618	0	True				
ANR	9876943	RelationalExpression	occ > 0		9876618	0		>			
ANR	9876944	Identifier	occ		9876618	0					
ANR	9876945	PrimaryExpression	0		9876618	1					
ANR	9876946	CompoundStatement		79:17:1723:1723	9876618	1					
ANR	9876947	ExpressionStatement	"NextCode ( tif , sp , bp , code , GetNextCode )"	441:2:12874:12914	9876618	0	True				
ANR	9876948	CallExpression	"NextCode ( tif , sp , bp , code , GetNextCode )"		9876618	0					
ANR	9876949	Callee	NextCode		9876618	0					
ANR	9876950	Identifier	NextCode		9876618	0					
ANR	9876951	ArgumentList	tif		9876618	1					
ANR	9876952	Argument	tif		9876618	0					
ANR	9876953	Identifier	tif		9876618	0					
ANR	9876954	Argument	sp		9876618	1					
ANR	9876955	Identifier	sp		9876618	0					
ANR	9876956	Argument	bp		9876618	2					
ANR	9876957	Identifier	bp		9876618	0					
ANR	9876958	Argument	code		9876618	3					
ANR	9876959	Identifier	code		9876618	0					
ANR	9876960	Argument	GetNextCode		9876618	4					
ANR	9876961	Identifier	GetNextCode		9876618	0					
ANR	9876962	IfStatement	if ( code == CODE_EOI )		9876618	1					
ANR	9876963	Condition	code == CODE_EOI	442:6:12922:12937	9876618	0	True				
ANR	9876964	EqualityExpression	code == CODE_EOI		9876618	0		==			
ANR	9876965	Identifier	code		9876618	0					
ANR	9876966	Identifier	CODE_EOI		9876618	1					
ANR	9876967	BreakStatement	break ;	443:3:12943:12948	9876618	1	True				
ANR	9876968	IfStatement	if ( code == CODE_CLEAR )		9876618	2					
ANR	9876969	Condition	code == CODE_CLEAR	444:6:12956:12973	9876618	0	True				
ANR	9876970	EqualityExpression	code == CODE_CLEAR		9876618	0		==			
ANR	9876971	Identifier	code		9876618	0					
ANR	9876972	Identifier	CODE_CLEAR		9876618	1					
ANR	9876973	CompoundStatement		83:26:1829:1829	9876618	1					
ANR	9876974	DoStatement	do		9876618	0					
ANR	9876975	CompoundStatement		84:6:1837:1837	9876618	0					
ANR	9876976	ExpressionStatement	free_entp = sp -> dec_codetab + CODE_FIRST	446:4:12990:13030	9876618	0	True				
ANR	9876977	AssignmentExpression	free_entp = sp -> dec_codetab + CODE_FIRST		9876618	0		=			
ANR	9876978	Identifier	free_entp		9876618	0					
ANR	9876979	AdditiveExpression	sp -> dec_codetab + CODE_FIRST		9876618	1		+			
ANR	9876980	PtrMemberAccess	sp -> dec_codetab		9876618	0					
ANR	9876981	Identifier	sp		9876618	0					
ANR	9876982	Identifier	dec_codetab		9876618	1					
ANR	9876983	Identifier	CODE_FIRST		9876618	1					
ANR	9876984	ExpressionStatement	"_TIFFmemset ( free_entp , 0 , ( CSIZE - CODE_FIRST ) * sizeof ( code_t ) )"	447:4:13036:13110	9876618	1	True				
ANR	9876985	CallExpression	"_TIFFmemset ( free_entp , 0 , ( CSIZE - CODE_FIRST ) * sizeof ( code_t ) )"		9876618	0					
ANR	9876986	Callee	_TIFFmemset		9876618	0					
ANR	9876987	Identifier	_TIFFmemset		9876618	0					
ANR	9876988	ArgumentList	free_entp		9876618	1					
ANR	9876989	Argument	free_entp		9876618	0					
ANR	9876990	Identifier	free_entp		9876618	0					
ANR	9876991	Argument	0		9876618	1					
ANR	9876992	PrimaryExpression	0		9876618	0					
ANR	9876993	Argument	( CSIZE - CODE_FIRST ) * sizeof ( code_t )		9876618	2					
ANR	9876994	MultiplicativeExpression	( CSIZE - CODE_FIRST ) * sizeof ( code_t )		9876618	0		*			
ANR	9876995	AdditiveExpression	CSIZE - CODE_FIRST		9876618	0		-			
ANR	9876996	Identifier	CSIZE		9876618	0					
ANR	9876997	Identifier	CODE_FIRST		9876618	1					
ANR	9876998	SizeofExpression	sizeof ( code_t )		9876618	1					
ANR	9876999	Sizeof	sizeof		9876618	0					
ANR	9877000	SizeofOperand	code_t		9876618	1					
ANR	9877001	ExpressionStatement	nbits = BITS_MIN	449:4:13116:13132	9876618	2	True				
ANR	9877002	AssignmentExpression	nbits = BITS_MIN		9876618	0		=			
ANR	9877003	Identifier	nbits		9876618	0					
ANR	9877004	Identifier	BITS_MIN		9876618	1					
ANR	9877005	ExpressionStatement	nbitsmask = MAXCODE ( BITS_MIN )	450:4:13138:13167	9876618	3	True				
ANR	9877006	AssignmentExpression	nbitsmask = MAXCODE ( BITS_MIN )		9876618	0		=			
ANR	9877007	Identifier	nbitsmask		9876618	0					
ANR	9877008	CallExpression	MAXCODE ( BITS_MIN )		9876618	1					
ANR	9877009	Callee	MAXCODE		9876618	0					
ANR	9877010	Identifier	MAXCODE		9876618	0					
ANR	9877011	ArgumentList	BITS_MIN		9876618	1					
ANR	9877012	Argument	BITS_MIN		9876618	0					
ANR	9877013	Identifier	BITS_MIN		9876618	0					
ANR	9877014	ExpressionStatement	maxcodep = sp -> dec_codetab + nbitsmask - 1	451:4:13173:13213	9876618	4	True				
ANR	9877015	AssignmentExpression	maxcodep = sp -> dec_codetab + nbitsmask - 1		9876618	0		=			
ANR	9877016	Identifier	maxcodep		9876618	0					
ANR	9877017	AdditiveExpression	sp -> dec_codetab + nbitsmask - 1		9876618	1		+			
ANR	9877018	PtrMemberAccess	sp -> dec_codetab		9876618	0					
ANR	9877019	Identifier	sp		9876618	0					
ANR	9877020	Identifier	dec_codetab		9876618	1					
ANR	9877021	AdditiveExpression	nbitsmask - 1		9876618	1		-			
ANR	9877022	Identifier	nbitsmask		9876618	0					
ANR	9877023	PrimaryExpression	1		9876618	1					
ANR	9877024	ExpressionStatement	"NextCode ( tif , sp , bp , code , GetNextCode )"	452:4:13219:13259	9876618	5	True				
ANR	9877025	CallExpression	"NextCode ( tif , sp , bp , code , GetNextCode )"		9876618	0					
ANR	9877026	Callee	NextCode		9876618	0					
ANR	9877027	Identifier	NextCode		9876618	0					
ANR	9877028	ArgumentList	tif		9876618	1					
ANR	9877029	Argument	tif		9876618	0					
ANR	9877030	Identifier	tif		9876618	0					
ANR	9877031	Argument	sp		9876618	1					
ANR	9877032	Identifier	sp		9876618	0					
ANR	9877033	Argument	bp		9876618	2					
ANR	9877034	Identifier	bp		9876618	0					
ANR	9877035	Argument	code		9876618	3					
ANR	9877036	Identifier	code		9876618	0					
ANR	9877037	Argument	GetNextCode		9876618	4					
ANR	9877038	Identifier	GetNextCode		9876618	0					
ANR	9877039	Condition	code == CODE_CLEAR	453:12:13273:13290	9876618	1	True				
ANR	9877040	EqualityExpression	code == CODE_CLEAR		9876618	0		==			
ANR	9877041	Identifier	code		9876618	0					
ANR	9877042	Identifier	CODE_CLEAR		9876618	1					
ANR	9877043	IfStatement	if ( code == CODE_EOI )		9876618	1					
ANR	9877044	Condition	code == CODE_EOI	454:7:13336:13351	9876618	0	True				
ANR	9877045	EqualityExpression	code == CODE_EOI		9876618	0		==			
ANR	9877046	Identifier	code		9876618	0					
ANR	9877047	Identifier	CODE_EOI		9876618	1					
ANR	9877048	BreakStatement	break ;	455:4:13358:13363	9876618	1	True				
ANR	9877049	IfStatement	if ( code > CODE_CLEAR )		9876618	2					
ANR	9877050	Condition	code > CODE_CLEAR	456:7:13372:13388	9876618	0	True				
ANR	9877051	RelationalExpression	code > CODE_CLEAR		9876618	0		>			
ANR	9877052	Identifier	code		9876618	0					
ANR	9877053	Identifier	CODE_CLEAR		9876618	1					
ANR	9877054	CompoundStatement		95:26:2244:2244	9876618	1					
ANR	9877055	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , tif -> tif_name , ""LZWDecode: Corrupted LZW table at scanline %d"" , tif -> tif_row )"	457:4:13397:13522	9876618	0	True				
ANR	9877056	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , tif -> tif_name , ""LZWDecode: Corrupted LZW table at scanline %d"" , tif -> tif_row )"		9876618	0					
ANR	9877057	Callee	TIFFErrorExt		9876618	0					
ANR	9877058	Identifier	TIFFErrorExt		9876618	0					
ANR	9877059	ArgumentList	tif -> tif_clientdata		9876618	1					
ANR	9877060	Argument	tif -> tif_clientdata		9876618	0					
ANR	9877061	PtrMemberAccess	tif -> tif_clientdata		9876618	0					
ANR	9877062	Identifier	tif		9876618	0					
ANR	9877063	Identifier	tif_clientdata		9876618	1					
ANR	9877064	Argument	tif -> tif_name		9876618	1					
ANR	9877065	PtrMemberAccess	tif -> tif_name		9876618	0					
ANR	9877066	Identifier	tif		9876618	0					
ANR	9877067	Identifier	tif_name		9876618	1					
ANR	9877068	Argument	"""LZWDecode: Corrupted LZW table at scanline %d"""		9876618	2					
ANR	9877069	PrimaryExpression	"""LZWDecode: Corrupted LZW table at scanline %d"""		9876618	0					
ANR	9877070	Argument	tif -> tif_row		9876618	3					
ANR	9877071	PtrMemberAccess	tif -> tif_row		9876618	0					
ANR	9877072	Identifier	tif		9876618	0					
ANR	9877073	Identifier	tif_row		9876618	1					
ANR	9877074	ReturnStatement	return ( 0 ) ;	460:4:13528:13538	9876618	1	True				
ANR	9877075	PrimaryExpression	0		9876618	0					
ANR	9877076	ExpressionStatement	* op ++ = ( char ) code	462:3:13548:13566	9876618	3	True				
ANR	9877077	AssignmentExpression	* op ++ = ( char ) code		9876618	0		=			
ANR	9877078	UnaryOperationExpression	* op ++		9876618	0					
ANR	9877079	UnaryOperator	*		9876618	0					
ANR	9877080	PostIncDecOperationExpression	op ++		9876618	1					
ANR	9877081	Identifier	op		9876618	0					
ANR	9877082	IncDec	++		9876618	1					
ANR	9877083	CastExpression	( char ) code		9876618	1					
ANR	9877084	CastTarget	char		9876618	0					
ANR	9877085	Identifier	code		9876618	1					
ANR	9877086	ExpressionStatement	occ --	463:3:13571:13576	9876618	4	True				
ANR	9877087	PostIncDecOperationExpression	occ --		9876618	0					
ANR	9877088	Identifier	occ		9876618	0					
ANR	9877089	IncDec	--		9876618	1					
ANR	9877090	ExpressionStatement	oldcodep = sp -> dec_codetab + code	464:3:13581:13614	9876618	5	True				
ANR	9877091	AssignmentExpression	oldcodep = sp -> dec_codetab + code		9876618	0		=			
ANR	9877092	Identifier	oldcodep		9876618	0					
ANR	9877093	AdditiveExpression	sp -> dec_codetab + code		9876618	1		+			
ANR	9877094	PtrMemberAccess	sp -> dec_codetab		9876618	0					
ANR	9877095	Identifier	sp		9876618	0					
ANR	9877096	Identifier	dec_codetab		9876618	1					
ANR	9877097	Identifier	code		9876618	1					
ANR	9877098	ContinueStatement	continue ;	465:3:13619:13627	9876618	6	True				
ANR	9877099	ExpressionStatement	codep = sp -> dec_codetab + code	467:2:13635:13665	9876618	3	True				
ANR	9877100	AssignmentExpression	codep = sp -> dec_codetab + code		9876618	0		=			
ANR	9877101	Identifier	codep		9876618	0					
ANR	9877102	AdditiveExpression	sp -> dec_codetab + code		9876618	1		+			
ANR	9877103	PtrMemberAccess	sp -> dec_codetab		9876618	0					
ANR	9877104	Identifier	sp		9876618	0					
ANR	9877105	Identifier	dec_codetab		9876618	1					
ANR	9877106	Identifier	code		9876618	1					
ANR	9877107	IfStatement	if ( free_entp < & sp -> dec_codetab [ 0 ] || free_entp >= & sp -> dec_codetab [ CSIZE ] )		9876618	4					
ANR	9877108	Condition	free_entp < & sp -> dec_codetab [ 0 ] || free_entp >= & sp -> dec_codetab [ CSIZE ]	472:6:13727:13803	9876618	0	True				
ANR	9877109	OrExpression	free_entp < & sp -> dec_codetab [ 0 ] || free_entp >= & sp -> dec_codetab [ CSIZE ]		9876618	0		||			
ANR	9877110	RelationalExpression	free_entp < & sp -> dec_codetab [ 0 ]		9876618	0		<			
ANR	9877111	Identifier	free_entp		9876618	0					
ANR	9877112	UnaryOperationExpression	& sp -> dec_codetab [ 0 ]		9876618	1					
ANR	9877113	UnaryOperator	&		9876618	0					
ANR	9877114	ArrayIndexing	sp -> dec_codetab [ 0 ]		9876618	1					
ANR	9877115	PtrMemberAccess	sp -> dec_codetab		9876618	0					
ANR	9877116	Identifier	sp		9876618	0					
ANR	9877117	Identifier	dec_codetab		9876618	1					
ANR	9877118	PrimaryExpression	0		9876618	1					
ANR	9877119	RelationalExpression	free_entp >= & sp -> dec_codetab [ CSIZE ]		9876618	1		>=			
ANR	9877120	Identifier	free_entp		9876618	0					
ANR	9877121	UnaryOperationExpression	& sp -> dec_codetab [ CSIZE ]		9876618	1					
ANR	9877122	UnaryOperator	&		9876618	0					
ANR	9877123	ArrayIndexing	sp -> dec_codetab [ CSIZE ]		9876618	1					
ANR	9877124	PtrMemberAccess	sp -> dec_codetab		9876618	0					
ANR	9877125	Identifier	sp		9876618	0					
ANR	9877126	Identifier	dec_codetab		9876618	1					
ANR	9877127	Identifier	CSIZE		9876618	1					
ANR	9877128	CompoundStatement		112:44:2659:2659	9876618	1					
ANR	9877129	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Corrupted LZW table at scanline %d"" , tif -> tif_row )"	474:3:13811:13918	9876618	0	True				
ANR	9877130	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Corrupted LZW table at scanline %d"" , tif -> tif_row )"		9876618	0					
ANR	9877131	Callee	TIFFErrorExt		9876618	0					
ANR	9877132	Identifier	TIFFErrorExt		9876618	0					
ANR	9877133	ArgumentList	tif -> tif_clientdata		9876618	1					
ANR	9877134	Argument	tif -> tif_clientdata		9876618	0					
ANR	9877135	PtrMemberAccess	tif -> tif_clientdata		9876618	0					
ANR	9877136	Identifier	tif		9876618	0					
ANR	9877137	Identifier	tif_clientdata		9876618	1					
ANR	9877138	Argument	module		9876618	1					
ANR	9877139	Identifier	module		9876618	0					
ANR	9877140	Argument	"""Corrupted LZW table at scanline %d"""		9876618	2					
ANR	9877141	PrimaryExpression	"""Corrupted LZW table at scanline %d"""		9876618	0					
ANR	9877142	Argument	tif -> tif_row		9876618	3					
ANR	9877143	PtrMemberAccess	tif -> tif_row		9876618	0					
ANR	9877144	Identifier	tif		9876618	0					
ANR	9877145	Identifier	tif_row		9876618	1					
ANR	9877146	ReturnStatement	return ( 0 ) ;	477:3:13923:13933	9876618	1	True				
ANR	9877147	PrimaryExpression	0		9876618	0					
ANR	9877148	ExpressionStatement	free_entp -> next = oldcodep	480:2:13942:13968	9876618	5	True				
ANR	9877149	AssignmentExpression	free_entp -> next = oldcodep		9876618	0		=			
ANR	9877150	PtrMemberAccess	free_entp -> next		9876618	0					
ANR	9877151	Identifier	free_entp		9876618	0					
ANR	9877152	Identifier	next		9876618	1					
ANR	9877153	Identifier	oldcodep		9876618	1					
ANR	9877154	IfStatement	if ( free_entp -> next < & sp -> dec_codetab [ 0 ] || free_entp -> next >= & sp -> dec_codetab [ CSIZE ] )		9876618	6					
ANR	9877155	Condition	free_entp -> next < & sp -> dec_codetab [ 0 ] || free_entp -> next >= & sp -> dec_codetab [ CSIZE ]	481:6:13976:14064	9876618	0	True				
ANR	9877156	OrExpression	free_entp -> next < & sp -> dec_codetab [ 0 ] || free_entp -> next >= & sp -> dec_codetab [ CSIZE ]		9876618	0		||			
ANR	9877157	RelationalExpression	free_entp -> next < & sp -> dec_codetab [ 0 ]		9876618	0		<			
ANR	9877158	PtrMemberAccess	free_entp -> next		9876618	0					
ANR	9877159	Identifier	free_entp		9876618	0					
ANR	9877160	Identifier	next		9876618	1					
ANR	9877161	UnaryOperationExpression	& sp -> dec_codetab [ 0 ]		9876618	1					
ANR	9877162	UnaryOperator	&		9876618	0					
ANR	9877163	ArrayIndexing	sp -> dec_codetab [ 0 ]		9876618	1					
ANR	9877164	PtrMemberAccess	sp -> dec_codetab		9876618	0					
ANR	9877165	Identifier	sp		9876618	0					
ANR	9877166	Identifier	dec_codetab		9876618	1					
ANR	9877167	PrimaryExpression	0		9876618	1					
ANR	9877168	RelationalExpression	free_entp -> next >= & sp -> dec_codetab [ CSIZE ]		9876618	1		>=			
ANR	9877169	PtrMemberAccess	free_entp -> next		9876618	0					
ANR	9877170	Identifier	free_entp		9876618	0					
ANR	9877171	Identifier	next		9876618	1					
ANR	9877172	UnaryOperationExpression	& sp -> dec_codetab [ CSIZE ]		9876618	1					
ANR	9877173	UnaryOperator	&		9876618	0					
ANR	9877174	ArrayIndexing	sp -> dec_codetab [ CSIZE ]		9876618	1					
ANR	9877175	PtrMemberAccess	sp -> dec_codetab		9876618	0					
ANR	9877176	Identifier	sp		9876618	0					
ANR	9877177	Identifier	dec_codetab		9876618	1					
ANR	9877178	Identifier	CSIZE		9876618	1					
ANR	9877179	CompoundStatement		121:50:2920:2920	9876618	1					
ANR	9877180	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Corrupted LZW table at scanline %d"" , tif -> tif_row )"	483:3:14072:14179	9876618	0	True				
ANR	9877181	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Corrupted LZW table at scanline %d"" , tif -> tif_row )"		9876618	0					
ANR	9877182	Callee	TIFFErrorExt		9876618	0					
ANR	9877183	Identifier	TIFFErrorExt		9876618	0					
ANR	9877184	ArgumentList	tif -> tif_clientdata		9876618	1					
ANR	9877185	Argument	tif -> tif_clientdata		9876618	0					
ANR	9877186	PtrMemberAccess	tif -> tif_clientdata		9876618	0					
ANR	9877187	Identifier	tif		9876618	0					
ANR	9877188	Identifier	tif_clientdata		9876618	1					
ANR	9877189	Argument	module		9876618	1					
ANR	9877190	Identifier	module		9876618	0					
ANR	9877191	Argument	"""Corrupted LZW table at scanline %d"""		9876618	2					
ANR	9877192	PrimaryExpression	"""Corrupted LZW table at scanline %d"""		9876618	0					
ANR	9877193	Argument	tif -> tif_row		9876618	3					
ANR	9877194	PtrMemberAccess	tif -> tif_row		9876618	0					
ANR	9877195	Identifier	tif		9876618	0					
ANR	9877196	Identifier	tif_row		9876618	1					
ANR	9877197	ReturnStatement	return ( 0 ) ;	486:3:14184:14194	9876618	1	True				
ANR	9877198	PrimaryExpression	0		9876618	0					
ANR	9877199	ExpressionStatement	free_entp -> firstchar = free_entp -> next -> firstchar	488:2:14202:14251	9876618	7	True				
ANR	9877200	AssignmentExpression	free_entp -> firstchar = free_entp -> next -> firstchar		9876618	0		=			
ANR	9877201	PtrMemberAccess	free_entp -> firstchar		9876618	0					
ANR	9877202	Identifier	free_entp		9876618	0					
ANR	9877203	Identifier	firstchar		9876618	1					
ANR	9877204	PtrMemberAccess	free_entp -> next -> firstchar		9876618	1					
ANR	9877205	PtrMemberAccess	free_entp -> next		9876618	0					
ANR	9877206	Identifier	free_entp		9876618	0					
ANR	9877207	Identifier	next		9876618	1					
ANR	9877208	Identifier	firstchar		9876618	1					
ANR	9877209	ExpressionStatement	free_entp -> length = free_entp -> next -> length + 1	489:2:14255:14300	9876618	8	True				
ANR	9877210	AssignmentExpression	free_entp -> length = free_entp -> next -> length + 1		9876618	0		=			
ANR	9877211	PtrMemberAccess	free_entp -> length		9876618	0					
ANR	9877212	Identifier	free_entp		9876618	0					
ANR	9877213	Identifier	length		9876618	1					
ANR	9877214	AdditiveExpression	free_entp -> next -> length + 1		9876618	1		+			
ANR	9877215	PtrMemberAccess	free_entp -> next -> length		9876618	0					
ANR	9877216	PtrMemberAccess	free_entp -> next		9876618	0					
ANR	9877217	Identifier	free_entp		9876618	0					
ANR	9877218	Identifier	next		9876618	1					
ANR	9877219	Identifier	length		9876618	1					
ANR	9877220	PrimaryExpression	1		9876618	1					
ANR	9877221	ExpressionStatement	free_entp -> value = ( codep < free_entp ) ? codep -> firstchar : free_entp -> firstchar	490:2:14304:14390	9876618	9	True				
ANR	9877222	AssignmentExpression	free_entp -> value = ( codep < free_entp ) ? codep -> firstchar : free_entp -> firstchar		9876618	0		=			
ANR	9877223	PtrMemberAccess	free_entp -> value		9876618	0					
ANR	9877224	Identifier	free_entp		9876618	0					
ANR	9877225	Identifier	value		9876618	1					
ANR	9877226	ConditionalExpression	( codep < free_entp ) ? codep -> firstchar : free_entp -> firstchar		9876618	1					
ANR	9877227	Condition	codep < free_entp		9876618	0					
ANR	9877228	RelationalExpression	codep < free_entp		9876618	0		<			
ANR	9877229	Identifier	codep		9876618	0					
ANR	9877230	Identifier	free_entp		9876618	1					
ANR	9877231	PtrMemberAccess	codep -> firstchar		9876618	1					
ANR	9877232	Identifier	codep		9876618	0					
ANR	9877233	Identifier	firstchar		9876618	1					
ANR	9877234	PtrMemberAccess	free_entp -> firstchar		9876618	2					
ANR	9877235	Identifier	free_entp		9876618	0					
ANR	9877236	Identifier	firstchar		9876618	1					
ANR	9877237	IfStatement	if ( ++ free_entp > maxcodep )		9876618	10					
ANR	9877238	Condition	++ free_entp > maxcodep	492:6:14398:14419	9876618	0	True				
ANR	9877239	RelationalExpression	++ free_entp > maxcodep		9876618	0		>			
ANR	9877240	UnaryExpression	++ free_entp		9876618	0					
ANR	9877241	IncDec	++		9876618	0					
ANR	9877242	Identifier	free_entp		9876618	1					
ANR	9877243	Identifier	maxcodep		9876618	1					
ANR	9877244	CompoundStatement		131:30:3275:3275	9876618	1					
ANR	9877245	IfStatement	if ( ++ nbits > BITS_MAX )		9876618	0					
ANR	9877246	Condition	++ nbits > BITS_MAX	493:7:14431:14448	9876618	0	True				
ANR	9877247	RelationalExpression	++ nbits > BITS_MAX		9876618	0		>			
ANR	9877248	UnaryExpression	++ nbits		9876618	0					
ANR	9877249	IncDec	++		9876618	0					
ANR	9877250	Identifier	nbits		9876618	1					
ANR	9877251	Identifier	BITS_MAX		9876618	1					
ANR	9877252	ExpressionStatement	nbits = BITS_MAX	494:4:14480:14496	9876618	1	True				
ANR	9877253	AssignmentExpression	nbits = BITS_MAX		9876618	0		=			
ANR	9877254	Identifier	nbits		9876618	0					
ANR	9877255	Identifier	BITS_MAX		9876618	1					
ANR	9877256	ExpressionStatement	nbitsmask = MAXCODE ( nbits )	495:3:14501:14527	9876618	1	True				
ANR	9877257	AssignmentExpression	nbitsmask = MAXCODE ( nbits )		9876618	0		=			
ANR	9877258	Identifier	nbitsmask		9876618	0					
ANR	9877259	CallExpression	MAXCODE ( nbits )		9876618	1					
ANR	9877260	Callee	MAXCODE		9876618	0					
ANR	9877261	Identifier	MAXCODE		9876618	0					
ANR	9877262	ArgumentList	nbits		9876618	1					
ANR	9877263	Argument	nbits		9876618	0					
ANR	9877264	Identifier	nbits		9876618	0					
ANR	9877265	ExpressionStatement	maxcodep = sp -> dec_codetab + nbitsmask - 1	496:3:14532:14572	9876618	2	True				
ANR	9877266	AssignmentExpression	maxcodep = sp -> dec_codetab + nbitsmask - 1		9876618	0		=			
ANR	9877267	Identifier	maxcodep		9876618	0					
ANR	9877268	AdditiveExpression	sp -> dec_codetab + nbitsmask - 1		9876618	1		+			
ANR	9877269	PtrMemberAccess	sp -> dec_codetab		9876618	0					
ANR	9877270	Identifier	sp		9876618	0					
ANR	9877271	Identifier	dec_codetab		9876618	1					
ANR	9877272	AdditiveExpression	nbitsmask - 1		9876618	1		-			
ANR	9877273	Identifier	nbitsmask		9876618	0					
ANR	9877274	PrimaryExpression	1		9876618	1					
ANR	9877275	ExpressionStatement	oldcodep = codep	498:2:14580:14596	9876618	11	True				
ANR	9877276	AssignmentExpression	oldcodep = codep		9876618	0		=			
ANR	9877277	Identifier	oldcodep		9876618	0					
ANR	9877278	Identifier	codep		9876618	1					
ANR	9877279	IfStatement	if ( code >= 256 )		9876618	12					
ANR	9877280	Condition	code >= 256	499:6:14604:14614	9876618	0	True				
ANR	9877281	RelationalExpression	code >= 256		9876618	0		>=			
ANR	9877282	Identifier	code		9876618	0					
ANR	9877283	PrimaryExpression	256		9876618	1					
ANR	9877284	CompoundStatement		138:19:3470:3470	9876618	1					
ANR	9877285	IfStatement	if ( codep -> length == 0 )		9876618	0					
ANR	9877286	Condition	codep -> length == 0	504:6:14723:14740	9876618	0	True				
ANR	9877287	EqualityExpression	codep -> length == 0		9876618	0		==			
ANR	9877288	PtrMemberAccess	codep -> length		9876618	0					
ANR	9877289	Identifier	codep		9876618	0					
ANR	9877290	Identifier	length		9876618	1					
ANR	9877291	PrimaryExpression	0		9876618	1					
ANR	9877292	CompoundStatement		143:26:3596:3596	9876618	1					
ANR	9877293	Statement	TIFFErrorExt	505:4:14749:14760	9876618	0	True				
ANR	9877294	Statement	(	505:16:14761:14761	9876618	1	True				
ANR	9877295	Statement	tif	505:17:14762:14764	9876618	2	True				
ANR	9877296	Statement	->	505:20:14765:14766	9876618	3	True				
ANR	9877297	Statement	tif_clientdata	505:22:14767:14780	9876618	4	True				
ANR	9877298	Statement	","	505:36:14781:14781	9876618	5	True				
ANR	9877299	Statement	module	505:38:14783:14788	9876618	6	True				
ANR	9877300	Statement	","	505:44:14789:14789	9876618	7	True				
ANR	9877301	Statement	"""Wrong length of decoded string: """	506:8:14799:14832	9876618	8	True				
ANR	9877302	Statement	"""data probably corrupted at scanline %d"""	507:8:14842:14881	9876618	9	True				
ANR	9877303	Statement	","	507:48:14882:14882	9876618	10	True				
ANR	9877304	Statement	tif	508:8:14892:14894	9876618	11	True				
ANR	9877305	Statement	->	508:11:14895:14896	9876618	12	True				
ANR	9877306	Statement	tif_row	508:13:14897:14903	9876618	13	True				
ANR	9877307	Statement	)	508:20:14904:14904	9876618	14	True				
ANR	9877308	ExpressionStatement		508:21:14905:14905	9876618	15	True				
ANR	9877309	ReturnStatement	return ( 0 ) ;	509:4:14911:14921	9876618	16	True				
ANR	9877310	PrimaryExpression	0		9876618	0					
ANR	9877311	IfStatement	if ( codep -> length > occ )		9876618	1					
ANR	9877312	Condition	codep -> length > occ	511:7:14935:14953	9876618	0	True				
ANR	9877313	RelationalExpression	codep -> length > occ		9876618	0		>			
ANR	9877314	PtrMemberAccess	codep -> length		9876618	0					
ANR	9877315	Identifier	codep		9876618	0					
ANR	9877316	Identifier	length		9876618	1					
ANR	9877317	Identifier	occ		9876618	1					
ANR	9877318	CompoundStatement		150:28:3809:3809	9876618	1					
ANR	9877319	ExpressionStatement	sp -> dec_codep = codep	518:4:15152:15173	9876618	0	True				
ANR	9877320	AssignmentExpression	sp -> dec_codep = codep		9876618	0		=			
ANR	9877321	PtrMemberAccess	sp -> dec_codep		9876618	0					
ANR	9877322	Identifier	sp		9876618	0					
ANR	9877323	Identifier	dec_codep		9876618	1					
ANR	9877324	Identifier	codep		9876618	1					
ANR	9877325	DoStatement	do		9876618	1					
ANR	9877326	CompoundStatement		158:7:4035:4035	9876618	0					
ANR	9877327	ExpressionStatement	codep = codep -> next	520:5:15189:15208	9876618	0	True				
ANR	9877328	AssignmentExpression	codep = codep -> next		9876618	0		=			
ANR	9877329	Identifier	codep		9876618	0					
ANR	9877330	PtrMemberAccess	codep -> next		9876618	1					
ANR	9877331	Identifier	codep		9876618	0					
ANR	9877332	Identifier	next		9876618	1					
ANR	9877333	Condition	codep && codep -> length > occ	521:13:15223:15250	9876618	1	True				
ANR	9877334	AndExpression	codep && codep -> length > occ		9876618	0		&&			
ANR	9877335	Identifier	codep		9876618	0					
ANR	9877336	RelationalExpression	codep -> length > occ		9876618	1		>			
ANR	9877337	PtrMemberAccess	codep -> length		9876618	0					
ANR	9877338	Identifier	codep		9876618	0					
ANR	9877339	Identifier	length		9876618	1					
ANR	9877340	Identifier	occ		9876618	1					
ANR	9877341	IfStatement	if ( codep )		9876618	2					
ANR	9877342	Condition	codep	522:8:15262:15266	9876618	0	True				
ANR	9877343	Identifier	codep		9876618	0					
ANR	9877344	CompoundStatement		161:15:4122:4122	9876618	1					
ANR	9877345	ExpressionStatement	sp -> dec_restart = ( long ) occ	523:5:15276:15303	9876618	0	True				
ANR	9877346	AssignmentExpression	sp -> dec_restart = ( long ) occ		9876618	0		=			
ANR	9877347	PtrMemberAccess	sp -> dec_restart		9876618	0					
ANR	9877348	Identifier	sp		9876618	0					
ANR	9877349	Identifier	dec_restart		9876618	1					
ANR	9877350	CastExpression	( long ) occ		9876618	1					
ANR	9877351	CastTarget	long		9876618	0					
ANR	9877352	Identifier	occ		9876618	1					
ANR	9877353	ExpressionStatement	tp = op + occ	524:5:15310:15323	9876618	1	True				
ANR	9877354	AssignmentExpression	tp = op + occ		9876618	0		=			
ANR	9877355	Identifier	tp		9876618	0					
ANR	9877356	AdditiveExpression	op + occ		9876618	1		+			
ANR	9877357	Identifier	op		9876618	0					
ANR	9877358	Identifier	occ		9876618	1					
ANR	9877359	DoStatement	do		9876618	2					
ANR	9877360	CompoundStatement		164:9:4187:4187	9876618	0					
ANR	9877361	ExpressionStatement	* -- tp = codep -> value	526:6:15342:15362	9876618	0	True				
ANR	9877362	AssignmentExpression	* -- tp = codep -> value		9876618	0		=			
ANR	9877363	UnaryOperationExpression	* -- tp		9876618	0					
ANR	9877364	UnaryOperator	*		9876618	0					
ANR	9877365	UnaryExpression	-- tp		9876618	1					
ANR	9877366	IncDec	--		9876618	0					
ANR	9877367	Identifier	tp		9876618	1					
ANR	9877368	PtrMemberAccess	codep -> value		9876618	1					
ANR	9877369	Identifier	codep		9876618	0					
ANR	9877370	Identifier	value		9876618	1					
ANR	9877371	ExpressionStatement	codep = codep -> next	527:6:15370:15389	9876618	1	True				
ANR	9877372	AssignmentExpression	codep = codep -> next		9876618	0		=			
ANR	9877373	Identifier	codep		9876618	0					
ANR	9877374	PtrMemberAccess	codep -> next		9876618	1					
ANR	9877375	Identifier	codep		9876618	0					
ANR	9877376	Identifier	next		9876618	1					
ANR	9877377	Condition	-- occ && codep	528:15:15406:15419	9876618	1	True				
ANR	9877378	AndExpression	-- occ && codep		9876618	0		&&			
ANR	9877379	UnaryExpression	-- occ		9876618	0					
ANR	9877380	IncDec	--		9876618	0					
ANR	9877381	Identifier	occ		9876618	1					
ANR	9877382	Identifier	codep		9876618	1					
ANR	9877383	IfStatement	if ( codep )		9876618	3					
ANR	9877384	Condition	codep	529:9:15432:15436	9876618	0	True				
ANR	9877385	Identifier	codep		9876618	0					
ANR	9877386	ExpressionStatement	"codeLoop ( tif , module )"	530:6:15445:15466	9876618	1	True				
ANR	9877387	CallExpression	"codeLoop ( tif , module )"		9876618	0					
ANR	9877388	Callee	codeLoop		9876618	0					
ANR	9877389	Identifier	codeLoop		9876618	0					
ANR	9877390	ArgumentList	tif		9876618	1					
ANR	9877391	Argument	tif		9876618	0					
ANR	9877392	Identifier	tif		9876618	0					
ANR	9877393	Argument	module		9876618	1					
ANR	9877394	Identifier	module		9876618	0					
ANR	9877395	BreakStatement	break ;	532:4:15478:15483	9876618	3	True				
ANR	9877396	ExpressionStatement	len = codep -> length	534:3:15493:15512	9876618	2	True				
ANR	9877397	AssignmentExpression	len = codep -> length		9876618	0		=			
ANR	9877398	Identifier	len		9876618	0					
ANR	9877399	PtrMemberAccess	codep -> length		9876618	1					
ANR	9877400	Identifier	codep		9876618	0					
ANR	9877401	Identifier	length		9876618	1					
ANR	9877402	ExpressionStatement	tp = op + len	535:3:15517:15530	9876618	3	True				
ANR	9877403	AssignmentExpression	tp = op + len		9876618	0		=			
ANR	9877404	Identifier	tp		9876618	0					
ANR	9877405	AdditiveExpression	op + len		9876618	1		+			
ANR	9877406	Identifier	op		9876618	0					
ANR	9877407	Identifier	len		9876618	1					
ANR	9877408	DoStatement	do		9876618	4					
ANR	9877409	CompoundStatement		176:4:4397:4402	9876618	0					
ANR	9877410	IdentifierDeclStatement	int t ;	537:4:15544:15549	9876618	0	True				
ANR	9877411	IdentifierDecl	t		9876618	0					
ANR	9877412	IdentifierDeclType	int		9876618	0					
ANR	9877413	Identifier	t		9876618	1					
ANR	9877414	ExpressionStatement	-- tp	538:4:15555:15559	9876618	1	True				
ANR	9877415	UnaryExpression	-- tp		9876618	0					
ANR	9877416	IncDec	--		9876618	0					
ANR	9877417	Identifier	tp		9876618	1					
ANR	9877418	ExpressionStatement	t = codep -> value	539:4:15565:15581	9876618	2	True				
ANR	9877419	AssignmentExpression	t = codep -> value		9876618	0		=			
ANR	9877420	Identifier	t		9876618	0					
ANR	9877421	PtrMemberAccess	codep -> value		9876618	1					
ANR	9877422	Identifier	codep		9876618	0					
ANR	9877423	Identifier	value		9876618	1					
ANR	9877424	ExpressionStatement	codep = codep -> next	540:4:15587:15606	9876618	3	True				
ANR	9877425	AssignmentExpression	codep = codep -> next		9876618	0		=			
ANR	9877426	Identifier	codep		9876618	0					
ANR	9877427	PtrMemberAccess	codep -> next		9876618	1					
ANR	9877428	Identifier	codep		9876618	0					
ANR	9877429	Identifier	next		9876618	1					
ANR	9877430	ExpressionStatement	* tp = ( char ) t	541:4:15612:15625	9876618	4	True				
ANR	9877431	AssignmentExpression	* tp = ( char ) t		9876618	0		=			
ANR	9877432	UnaryOperationExpression	* tp		9876618	0					
ANR	9877433	UnaryOperator	*		9876618	0					
ANR	9877434	Identifier	tp		9876618	1					
ANR	9877435	CastExpression	( char ) t		9876618	1					
ANR	9877436	CastTarget	char		9876618	0					
ANR	9877437	Identifier	t		9876618	1					
ANR	9877438	Condition	codep && tp > op	542:12:15639:15654	9876618	1	True				
ANR	9877439	AndExpression	codep && tp > op		9876618	0		&&			
ANR	9877440	Identifier	codep		9876618	0					
ANR	9877441	RelationalExpression	tp > op		9876618	1		>			
ANR	9877442	Identifier	tp		9876618	0					
ANR	9877443	Identifier	op		9876618	1					
ANR	9877444	IfStatement	if ( codep )		9876618	5					
ANR	9877445	Condition	codep	543:7:15665:15669	9876618	0	True				
ANR	9877446	Identifier	codep		9876618	0					
ANR	9877447	CompoundStatement		182:14:4525:4525	9876618	1					
ANR	9877448	ExpressionStatement	"codeLoop ( tif , module )"	544:7:15681:15702	9876618	0	True				
ANR	9877449	CallExpression	"codeLoop ( tif , module )"		9876618	0					
ANR	9877450	Callee	codeLoop		9876618	0					
ANR	9877451	Identifier	codeLoop		9876618	0					
ANR	9877452	ArgumentList	tif		9876618	1					
ANR	9877453	Argument	tif		9876618	0					
ANR	9877454	Identifier	tif		9876618	0					
ANR	9877455	Argument	module		9876618	1					
ANR	9877456	Identifier	module		9876618	0					
ANR	9877457	BreakStatement	break ;	545:7:15711:15716	9876618	1	True				
ANR	9877458	ExpressionStatement	assert ( occ >= len )	547:3:15726:15744	9876618	6	True				
ANR	9877459	CallExpression	assert ( occ >= len )		9876618	0					
ANR	9877460	Callee	assert		9876618	0					
ANR	9877461	Identifier	assert		9876618	0					
ANR	9877462	ArgumentList	occ >= len		9876618	1					
ANR	9877463	Argument	occ >= len		9876618	0					
ANR	9877464	RelationalExpression	occ >= len		9876618	0		>=			
ANR	9877465	Identifier	occ		9876618	0					
ANR	9877466	Identifier	len		9876618	1					
ANR	9877467	ExpressionStatement	op += len	548:3:15749:15758	9876618	7	True				
ANR	9877468	AssignmentExpression	op += len		9876618	0		+=			
ANR	9877469	Identifier	op		9876618	0					
ANR	9877470	Identifier	len		9876618	1					
ANR	9877471	ExpressionStatement	occ -= len	549:3:15763:15773	9876618	8	True				
ANR	9877472	AssignmentExpression	occ -= len		9876618	0		-=			
ANR	9877473	Identifier	occ		9876618	0					
ANR	9877474	Identifier	len		9876618	1					
ANR	9877475	ElseStatement	else		9876618	0					
ANR	9877476	CompoundStatement		189:9:4637:4637	9876618	0					
ANR	9877477	ExpressionStatement	* op ++ = ( char ) code	551:3:15789:15807	9876618	0	True				
ANR	9877478	AssignmentExpression	* op ++ = ( char ) code		9876618	0		=			
ANR	9877479	UnaryOperationExpression	* op ++		9876618	0					
ANR	9877480	UnaryOperator	*		9876618	0					
ANR	9877481	PostIncDecOperationExpression	op ++		9876618	1					
ANR	9877482	Identifier	op		9876618	0					
ANR	9877483	IncDec	++		9876618	1					
ANR	9877484	CastExpression	( char ) code		9876618	1					
ANR	9877485	CastTarget	char		9876618	0					
ANR	9877486	Identifier	code		9876618	1					
ANR	9877487	ExpressionStatement	occ --	552:3:15812:15817	9876618	1	True				
ANR	9877488	PostIncDecOperationExpression	occ --		9876618	0					
ANR	9877489	Identifier	occ		9876618	0					
ANR	9877490	IncDec	--		9876618	1					
ANR	9877491	ExpressionStatement	tif -> tif_rawcc -= ( tmsize_t ) ( ( uint8 * ) bp - tif -> tif_rawcp )	556:1:15828:15888	9876618	27	True				
ANR	9877492	AssignmentExpression	tif -> tif_rawcc -= ( tmsize_t ) ( ( uint8 * ) bp - tif -> tif_rawcp )		9876618	0		-=			
ANR	9877493	PtrMemberAccess	tif -> tif_rawcc		9876618	0					
ANR	9877494	Identifier	tif		9876618	0					
ANR	9877495	Identifier	tif_rawcc		9876618	1					
ANR	9877496	CastExpression	( tmsize_t ) ( ( uint8 * ) bp - tif -> tif_rawcp )		9876618	1					
ANR	9877497	CastTarget	tmsize_t		9876618	0					
ANR	9877498	AdditiveExpression	( uint8 * ) bp - tif -> tif_rawcp		9876618	1		-			
ANR	9877499	CastExpression	( uint8 * ) bp		9876618	0					
ANR	9877500	CastTarget	uint8 *		9876618	0					
ANR	9877501	Identifier	bp		9876618	1					
ANR	9877502	PtrMemberAccess	tif -> tif_rawcp		9876618	1					
ANR	9877503	Identifier	tif		9876618	0					
ANR	9877504	Identifier	tif_rawcp		9876618	1					
ANR	9877505	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	557:1:15891:15919	9876618	28	True				
ANR	9877506	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		9876618	0		=			
ANR	9877507	PtrMemberAccess	tif -> tif_rawcp		9876618	0					
ANR	9877508	Identifier	tif		9876618	0					
ANR	9877509	Identifier	tif_rawcp		9876618	1					
ANR	9877510	CastExpression	( uint8 * ) bp		9876618	1					
ANR	9877511	CastTarget	uint8 *		9876618	0					
ANR	9877512	Identifier	bp		9876618	1					
ANR	9877513	ExpressionStatement	sp -> lzw_nbits = ( unsigned short ) nbits	558:1:15922:15960	9876618	29	True				
ANR	9877514	AssignmentExpression	sp -> lzw_nbits = ( unsigned short ) nbits		9876618	0		=			
ANR	9877515	PtrMemberAccess	sp -> lzw_nbits		9876618	0					
ANR	9877516	Identifier	sp		9876618	0					
ANR	9877517	Identifier	lzw_nbits		9876618	1					
ANR	9877518	CastExpression	( unsigned short ) nbits		9876618	1					
ANR	9877519	CastTarget	unsigned short		9876618	0					
ANR	9877520	Identifier	nbits		9876618	1					
ANR	9877521	ExpressionStatement	sp -> lzw_nextdata = nextdata	559:1:15963:15990	9876618	30	True				
ANR	9877522	AssignmentExpression	sp -> lzw_nextdata = nextdata		9876618	0		=			
ANR	9877523	PtrMemberAccess	sp -> lzw_nextdata		9876618	0					
ANR	9877524	Identifier	sp		9876618	0					
ANR	9877525	Identifier	lzw_nextdata		9876618	1					
ANR	9877526	Identifier	nextdata		9876618	1					
ANR	9877527	ExpressionStatement	sp -> lzw_nextbits = nextbits	560:1:15993:16020	9876618	31	True				
ANR	9877528	AssignmentExpression	sp -> lzw_nextbits = nextbits		9876618	0		=			
ANR	9877529	PtrMemberAccess	sp -> lzw_nextbits		9876618	0					
ANR	9877530	Identifier	sp		9876618	0					
ANR	9877531	Identifier	lzw_nextbits		9876618	1					
ANR	9877532	Identifier	nextbits		9876618	1					
ANR	9877533	ExpressionStatement	sp -> dec_nbitsmask = nbitsmask	561:1:16023:16052	9876618	32	True				
ANR	9877534	AssignmentExpression	sp -> dec_nbitsmask = nbitsmask		9876618	0		=			
ANR	9877535	PtrMemberAccess	sp -> dec_nbitsmask		9876618	0					
ANR	9877536	Identifier	sp		9876618	0					
ANR	9877537	Identifier	dec_nbitsmask		9876618	1					
ANR	9877538	Identifier	nbitsmask		9876618	1					
ANR	9877539	ExpressionStatement	sp -> dec_oldcodep = oldcodep	562:1:16055:16082	9876618	33	True				
ANR	9877540	AssignmentExpression	sp -> dec_oldcodep = oldcodep		9876618	0		=			
ANR	9877541	PtrMemberAccess	sp -> dec_oldcodep		9876618	0					
ANR	9877542	Identifier	sp		9876618	0					
ANR	9877543	Identifier	dec_oldcodep		9876618	1					
ANR	9877544	Identifier	oldcodep		9876618	1					
ANR	9877545	ExpressionStatement	sp -> dec_free_entp = free_entp	563:1:16085:16114	9876618	34	True				
ANR	9877546	AssignmentExpression	sp -> dec_free_entp = free_entp		9876618	0		=			
ANR	9877547	PtrMemberAccess	sp -> dec_free_entp		9876618	0					
ANR	9877548	Identifier	sp		9876618	0					
ANR	9877549	Identifier	dec_free_entp		9876618	1					
ANR	9877550	Identifier	free_entp		9876618	1					
ANR	9877551	ExpressionStatement	sp -> dec_maxcodep = maxcodep	564:1:16117:16144	9876618	35	True				
ANR	9877552	AssignmentExpression	sp -> dec_maxcodep = maxcodep		9876618	0		=			
ANR	9877553	PtrMemberAccess	sp -> dec_maxcodep		9876618	0					
ANR	9877554	Identifier	sp		9876618	0					
ANR	9877555	Identifier	dec_maxcodep		9876618	1					
ANR	9877556	Identifier	maxcodep		9876618	1					
ANR	9877557	IfStatement	if ( occ > 0 )		9876618	36					
ANR	9877558	Condition	occ > 0	566:5:16152:16158	9876618	0	True				
ANR	9877559	RelationalExpression	occ > 0		9876618	0		>			
ANR	9877560	Identifier	occ		9876618	0					
ANR	9877561	PrimaryExpression	0		9876618	1					
ANR	9877562	CompoundStatement		205:14:5014:5014	9876618	1					
ANR	9877563	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at scanline %d (short %I64d bytes)"" , tif -> tif_row , ( unsigned __int64 ) occ )"	568:2:16235:16379	9876618	0	True				
ANR	9877564	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at scanline %d (short %I64d bytes)"" , tif -> tif_row , ( unsigned __int64 ) occ )"		9876618	0					
ANR	9877565	Callee	TIFFErrorExt		9876618	0					
ANR	9877566	Identifier	TIFFErrorExt		9876618	0					
ANR	9877567	ArgumentList	tif -> tif_clientdata		9876618	1					
ANR	9877568	Argument	tif -> tif_clientdata		9876618	0					
ANR	9877569	PtrMemberAccess	tif -> tif_clientdata		9876618	0					
ANR	9877570	Identifier	tif		9876618	0					
ANR	9877571	Identifier	tif_clientdata		9876618	1					
ANR	9877572	Argument	module		9876618	1					
ANR	9877573	Identifier	module		9876618	0					
ANR	9877574	Argument	"""Not enough data at scanline %d (short %I64d bytes)"""		9876618	2					
ANR	9877575	PrimaryExpression	"""Not enough data at scanline %d (short %I64d bytes)"""		9876618	0					
ANR	9877576	Argument	tif -> tif_row		9876618	3					
ANR	9877577	PtrMemberAccess	tif -> tif_row		9876618	0					
ANR	9877578	Identifier	tif		9876618	0					
ANR	9877579	Identifier	tif_row		9876618	1					
ANR	9877580	Argument	( unsigned __int64 ) occ		9876618	4					
ANR	9877581	CastExpression	( unsigned __int64 ) occ		9876618	0					
ANR	9877582	CastTarget	unsigned __int64		9876618	0					
ANR	9877583	Identifier	occ		9876618	1					
ANR	9877584	ReturnStatement	return ( 0 ) ;	576:2:16545:16555	9876618	1	True				
ANR	9877585	PrimaryExpression	0		9876618	0					
ANR	9877586	ReturnStatement	return ( 1 ) ;	578:1:16561:16571	9876618	37	True				
ANR	9877587	PrimaryExpression	1		9876618	0					
ANR	9877588	ReturnType	static int		9876618	1					
ANR	9877589	Identifier	LZWDecode		9876618	2					
ANR	9877590	ParameterList	"TIFF * tif , uint8 * op0 , tmsize_t occ0 , uint16 s"		9876618	3					
ANR	9877591	Parameter	TIFF * tif	361:10:11098:11106	9876618	0	True				
ANR	9877592	ParameterType	TIFF *		9876618	0					
ANR	9877593	Identifier	tif		9876618	1					
ANR	9877594	Parameter	uint8 * op0	361:21:11109:11118	9876618	1	True				
ANR	9877595	ParameterType	uint8 *		9876618	0					
ANR	9877596	Identifier	op0		9876618	1					
ANR	9877597	Parameter	tmsize_t occ0	361:33:11121:11133	9876618	2	True				
ANR	9877598	ParameterType	tmsize_t		9876618	0					
ANR	9877599	Identifier	occ0		9876618	1					
ANR	9877600	Parameter	uint16 s	361:48:11136:11143	9876618	3	True				
ANR	9877601	ParameterType	uint16		9876618	0					
ANR	9877602	Identifier	s		9876618	1					
ANR	9877603	CFGEntryNode	ENTRY		9876618		True				
ANR	9877604	CFGExitNode	EXIT		9876618		True				
ANR	9877605	Symbol	* sp		9876618						
ANR	9877606	Symbol	codep		9876618						
ANR	9877607	Symbol	sp -> dec_nbitsmask		9876618						
ANR	9877608	Symbol	sp -> dec_codetab		9876618						
ANR	9877609	Symbol	occ		9876618						
ANR	9877610	Symbol	tif		9876618						
ANR	9877611	Symbol	tif -> tif_rawcc		9876618						
ANR	9877612	Symbol	CSIZE		9876618						
ANR	9877613	Symbol	codep -> length		9876618						
ANR	9877614	Symbol	MAXCODE		9876618						
ANR	9877615	Symbol	len		9876618						
ANR	9877616	Symbol	nextbits		9876618						
ANR	9877617	Symbol	sp -> dec_maxcodep		9876618						
ANR	9877618	Symbol	free_entp -> next -> length		9876618						
ANR	9877619	Symbol	sp -> lzw_nextdata		9876618						
ANR	9877620	Symbol	codep -> value		9876618						
ANR	9877621	Symbol	* tp		9876618						
ANR	9877622	Symbol	NULL		9876618						
ANR	9877623	Symbol	module		9876618						
ANR	9877624	Symbol	free_entp -> length		9876618						
ANR	9877625	Symbol	* codep		9876618						
ANR	9877626	Symbol	tif -> tif_row		9876618						
ANR	9877627	Symbol	tif -> tif_rawcp		9876618						
ANR	9877628	Symbol	free_entp -> value		9876618						
ANR	9877629	Symbol	BITS_MIN		9876618						
ANR	9877630	Symbol	occ0		9876618						
ANR	9877631	Symbol	sp -> dec_bitsleft		9876618						
ANR	9877632	Symbol	tif -> tif_name		9876618						
ANR	9877633	Symbol	* free_entp		9876618						
ANR	9877634	Symbol	maxcodep		9876618						
ANR	9877635	Symbol	sp -> lzw_nextbits		9876618						
ANR	9877636	Symbol	* op ++		9876618						
ANR	9877637	Symbol	sp -> dec_restart		9876618						
ANR	9877638	Symbol	sp -> dec_free_entp		9876618						
ANR	9877639	Symbol	* free_entp -> next		9876618						
ANR	9877640	Symbol	free_entp -> next -> firstchar		9876618						
ANR	9877641	Symbol	BITS_MAX		9876618						
ANR	9877642	Symbol	code		9876618						
ANR	9877643	Symbol	sp -> lzw_nbits		9876618						
ANR	9877644	Symbol	nbits		9876618						
ANR	9877645	Symbol	bp		9876618						
ANR	9877646	Symbol	oldcodep		9876618						
ANR	9877647	Symbol	DecoderState		9876618						
ANR	9877648	Symbol	codep -> next		9876618						
ANR	9877649	Symbol	sp		9876618						
ANR	9877650	Symbol	op		9876618						
ANR	9877651	Symbol	nbitsmask		9876618						
ANR	9877652	Symbol	* * free_entp		9876618						
ANR	9877653	Symbol	* -- tp		9876618						
ANR	9877654	Symbol	op0		9876618						
ANR	9877655	Symbol	residue		9876618						
ANR	9877656	Symbol	tif -> tif_clientdata		9876618						
ANR	9877657	Symbol	nextdata		9876618						
ANR	9877658	Symbol	CODE_EOI		9876618						
ANR	9877659	Symbol	codep -> firstchar		9876618						
ANR	9877660	Symbol	s		9876618						
ANR	9877661	Symbol	CODE_FIRST		9876618						
ANR	9877662	Symbol	t		9876618						
ANR	9877663	Symbol	GetNextCode		9876618						
ANR	9877664	Symbol	sp -> dec_codep		9876618						
ANR	9877665	Symbol	free_entp		9876618						
ANR	9877666	Symbol	* tif		9876618						
ANR	9877667	Symbol	tp		9876618						
ANR	9877668	Symbol	sp -> dec_oldcodep		9876618						
ANR	9877669	Symbol	free_entp -> next		9876618						
ANR	9877670	Symbol	free_entp -> firstchar		9876618						
ANR	9877671	Symbol	CODE_CLEAR		9876618						
ANR	9877672	Function	LZWDecodeCompat	597:0:16983:22112							
ANR	9877673	FunctionDef	"LZWDecodeCompat (TIFF * tif , uint8 * op0 , tmsize_t occ0 , uint16 s)"		9877672	0					
ANR	9877674	CompoundStatement		599:0:17058:22112	9877672	0					
ANR	9877675	Statement	static	600:1:17061:17066	9877672	0	True				
ANR	9877676	IdentifierDeclStatement	"const char module [ ] = ""LZWDecodeCompat"" ;"	600:8:17068:17107	9877672	1	True				
ANR	9877677	IdentifierDecl	"module [ ] = ""LZWDecodeCompat"""		9877672	0					
ANR	9877678	IdentifierDeclType	const char [ ]		9877672	0					
ANR	9877679	Identifier	module		9877672	1					
ANR	9877680	AssignmentExpression	"module [ ] = ""LZWDecodeCompat"""		9877672	2		=			
ANR	9877681	Identifier	module		9877672	0					
ANR	9877682	PrimaryExpression	"""LZWDecodeCompat"""		9877672	1					
ANR	9877683	IdentifierDeclStatement	LZWCodecState * sp = DecoderState ( tif ) ;	601:1:17110:17147	9877672	2	True				
ANR	9877684	IdentifierDecl	* sp = DecoderState ( tif )		9877672	0					
ANR	9877685	IdentifierDeclType	LZWCodecState *		9877672	0					
ANR	9877686	Identifier	sp		9877672	1					
ANR	9877687	AssignmentExpression	* sp = DecoderState ( tif )		9877672	2		=			
ANR	9877688	Identifier	sp		9877672	0					
ANR	9877689	CallExpression	DecoderState ( tif )		9877672	1					
ANR	9877690	Callee	DecoderState		9877672	0					
ANR	9877691	Identifier	DecoderState		9877672	0					
ANR	9877692	ArgumentList	tif		9877672	1					
ANR	9877693	Argument	tif		9877672	0					
ANR	9877694	Identifier	tif		9877672	0					
ANR	9877695	IdentifierDeclStatement	char * op = ( char * ) op0 ;	602:1:17150:17172	9877672	3	True				
ANR	9877696	IdentifierDecl	* op = ( char * ) op0		9877672	0					
ANR	9877697	IdentifierDeclType	char *		9877672	0					
ANR	9877698	Identifier	op		9877672	1					
ANR	9877699	AssignmentExpression	* op = ( char * ) op0		9877672	2		=			
ANR	9877700	Identifier	op		9877672	0					
ANR	9877701	CastExpression	( char * ) op0		9877672	1					
ANR	9877702	CastTarget	char *		9877672	0					
ANR	9877703	Identifier	op0		9877672	1					
ANR	9877704	IdentifierDeclStatement	long occ = ( long ) occ0 ;	603:1:17175:17197	9877672	4	True				
ANR	9877705	IdentifierDecl	occ = ( long ) occ0		9877672	0					
ANR	9877706	IdentifierDeclType	long		9877672	0					
ANR	9877707	Identifier	occ		9877672	1					
ANR	9877708	AssignmentExpression	occ = ( long ) occ0		9877672	2		=			
ANR	9877709	Identifier	occ		9877672	0					
ANR	9877710	CastExpression	( long ) occ0		9877672	1					
ANR	9877711	CastTarget	long		9877672	0					
ANR	9877712	Identifier	occ0		9877672	1					
ANR	9877713	IdentifierDeclStatement	char * tp ;	604:1:17200:17208	9877672	5	True				
ANR	9877714	IdentifierDecl	* tp		9877672	0					
ANR	9877715	IdentifierDeclType	char *		9877672	0					
ANR	9877716	Identifier	tp		9877672	1					
ANR	9877717	IdentifierDeclStatement	unsigned char * bp ;	605:1:17211:17228	9877672	6	True				
ANR	9877718	IdentifierDecl	* bp		9877672	0					
ANR	9877719	IdentifierDeclType	unsigned char *		9877672	0					
ANR	9877720	Identifier	bp		9877672	1					
ANR	9877721	IdentifierDeclStatement	"int code , nbits ;"	606:1:17231:17246	9877672	7	True				
ANR	9877722	IdentifierDecl	code		9877672	0					
ANR	9877723	IdentifierDeclType	int		9877672	0					
ANR	9877724	Identifier	code		9877672	1					
ANR	9877725	IdentifierDecl	nbits		9877672	1					
ANR	9877726	IdentifierDeclType	int		9877672	0					
ANR	9877727	Identifier	nbits		9877672	1					
ANR	9877728	IdentifierDeclStatement	"long nextbits , nextdata , nbitsmask ;"	607:1:17249:17283	9877672	8	True				
ANR	9877729	IdentifierDecl	nextbits		9877672	0					
ANR	9877730	IdentifierDeclType	long		9877672	0					
ANR	9877731	Identifier	nextbits		9877672	1					
ANR	9877732	IdentifierDecl	nextdata		9877672	1					
ANR	9877733	IdentifierDeclType	long		9877672	0					
ANR	9877734	Identifier	nextdata		9877672	1					
ANR	9877735	IdentifierDecl	nbitsmask		9877672	2					
ANR	9877736	IdentifierDeclType	long		9877672	0					
ANR	9877737	Identifier	nbitsmask		9877672	1					
ANR	9877738	IdentifierDeclStatement	"code_t * codep , * free_entp , * maxcodep , * oldcodep ;"	608:1:17286:17333	9877672	9	True				
ANR	9877739	IdentifierDecl	* codep		9877672	0					
ANR	9877740	IdentifierDeclType	code_t *		9877672	0					
ANR	9877741	Identifier	codep		9877672	1					
ANR	9877742	IdentifierDecl	* free_entp		9877672	1					
ANR	9877743	IdentifierDeclType	code_t *		9877672	0					
ANR	9877744	Identifier	free_entp		9877672	1					
ANR	9877745	IdentifierDecl	* maxcodep		9877672	2					
ANR	9877746	IdentifierDeclType	code_t *		9877672	0					
ANR	9877747	Identifier	maxcodep		9877672	1					
ANR	9877748	IdentifierDecl	* oldcodep		9877672	3					
ANR	9877749	IdentifierDeclType	code_t *		9877672	0					
ANR	9877750	Identifier	oldcodep		9877672	1					
ANR	9877751	ExpressionStatement	( void ) s	610:1:17337:17345	9877672	10	True				
ANR	9877752	CastExpression	( void ) s		9877672	0					
ANR	9877753	CastTarget	void		9877672	0					
ANR	9877754	Identifier	s		9877672	1					
ANR	9877755	ExpressionStatement	assert ( sp != NULL )	611:1:17348:17366	9877672	11	True				
ANR	9877756	CallExpression	assert ( sp != NULL )		9877672	0					
ANR	9877757	Callee	assert		9877672	0					
ANR	9877758	Identifier	assert		9877672	0					
ANR	9877759	ArgumentList	sp != NULL		9877672	1					
ANR	9877760	Argument	sp != NULL		9877672	0					
ANR	9877761	EqualityExpression	sp != NULL		9877672	0		!=			
ANR	9877762	Identifier	sp		9877672	0					
ANR	9877763	Identifier	NULL		9877672	1					
ANR	9877764	IfStatement	if ( ( tmsize_t ) occ != occ0 )		9877672	12					
ANR	9877765	Condition	( tmsize_t ) occ != occ0	616:5:17421:17442	9877672	0	True				
ANR	9877766	EqualityExpression	( tmsize_t ) occ != occ0		9877672	0		!=			
ANR	9877767	CastExpression	( tmsize_t ) occ		9877672	0					
ANR	9877768	CastTarget	tmsize_t		9877672	0					
ANR	9877769	Identifier	occ		9877672	1					
ANR	9877770	Identifier	occ0		9877672	1					
ANR	9877771	ReturnStatement	return ( 0 ) ;	617:9:17454:17464	9877672	1	True				
ANR	9877772	PrimaryExpression	0		9877672	0					
ANR	9877773	IfStatement	if ( sp -> dec_restart )		9877672	13					
ANR	9877774	Condition	sp -> dec_restart	622:5:17523:17537	9877672	0	True				
ANR	9877775	PtrMemberAccess	sp -> dec_restart		9877672	0					
ANR	9877776	Identifier	sp		9877672	0					
ANR	9877777	Identifier	dec_restart		9877672	1					
ANR	9877778	CompoundStatement		25:2:485:497	9877672	1					
ANR	9877779	IdentifierDeclStatement	long residue ;	623:2:17544:17556	9877672	0	True				
ANR	9877780	IdentifierDecl	residue		9877672	0					
ANR	9877781	IdentifierDeclType	long		9877672	0					
ANR	9877782	Identifier	residue		9877672	1					
ANR	9877783	ExpressionStatement	codep = sp -> dec_codep	625:2:17561:17582	9877672	1	True				
ANR	9877784	AssignmentExpression	codep = sp -> dec_codep		9877672	0		=			
ANR	9877785	Identifier	codep		9877672	0					
ANR	9877786	PtrMemberAccess	sp -> dec_codep		9877672	1					
ANR	9877787	Identifier	sp		9877672	0					
ANR	9877788	Identifier	dec_codep		9877672	1					
ANR	9877789	ExpressionStatement	residue = codep -> length - sp -> dec_restart	626:2:17586:17627	9877672	2	True				
ANR	9877790	AssignmentExpression	residue = codep -> length - sp -> dec_restart		9877672	0		=			
ANR	9877791	Identifier	residue		9877672	0					
ANR	9877792	AdditiveExpression	codep -> length - sp -> dec_restart		9877672	1		-			
ANR	9877793	PtrMemberAccess	codep -> length		9877672	0					
ANR	9877794	Identifier	codep		9877672	0					
ANR	9877795	Identifier	length		9877672	1					
ANR	9877796	PtrMemberAccess	sp -> dec_restart		9877672	1					
ANR	9877797	Identifier	sp		9877672	0					
ANR	9877798	Identifier	dec_restart		9877672	1					
ANR	9877799	IfStatement	if ( residue > occ )		9877672	3					
ANR	9877800	Condition	residue > occ	627:6:17635:17647	9877672	0	True				
ANR	9877801	RelationalExpression	residue > occ		9877672	0		>			
ANR	9877802	Identifier	residue		9877672	0					
ANR	9877803	Identifier	occ		9877672	1					
ANR	9877804	CompoundStatement		29:21:591:591	9877672	1					
ANR	9877805	ExpressionStatement	sp -> dec_restart += occ	634:3:17859:17881	9877672	0	True				
ANR	9877806	AssignmentExpression	sp -> dec_restart += occ		9877672	0		+=			
ANR	9877807	PtrMemberAccess	sp -> dec_restart		9877672	0					
ANR	9877808	Identifier	sp		9877672	0					
ANR	9877809	Identifier	dec_restart		9877672	1					
ANR	9877810	Identifier	occ		9877672	1					
ANR	9877811	DoStatement	do		9877672	1					
ANR	9877812	CompoundStatement		37:6:830:830	9877672	0					
ANR	9877813	ExpressionStatement	codep = codep -> next	636:4:17895:17914	9877672	0	True				
ANR	9877814	AssignmentExpression	codep = codep -> next		9877672	0		=			
ANR	9877815	Identifier	codep		9877672	0					
ANR	9877816	PtrMemberAccess	codep -> next		9877672	1					
ANR	9877817	Identifier	codep		9877672	0					
ANR	9877818	Identifier	next		9877672	1					
ANR	9877819	Condition	-- residue > occ	637:12:17928:17942	9877672	1	True				
ANR	9877820	RelationalExpression	-- residue > occ		9877672	0		>			
ANR	9877821	UnaryExpression	-- residue		9877672	0					
ANR	9877822	IncDec	--		9877672	0					
ANR	9877823	Identifier	residue		9877672	1					
ANR	9877824	Identifier	occ		9877672	1					
ANR	9877825	ExpressionStatement	tp = op + occ	638:3:17949:17962	9877672	2	True				
ANR	9877826	AssignmentExpression	tp = op + occ		9877672	0		=			
ANR	9877827	Identifier	tp		9877672	0					
ANR	9877828	AdditiveExpression	op + occ		9877672	1		+			
ANR	9877829	Identifier	op		9877672	0					
ANR	9877830	Identifier	occ		9877672	1					
ANR	9877831	DoStatement	do		9877672	3					
ANR	9877832	CompoundStatement		41:6:911:911	9877672	0					
ANR	9877833	ExpressionStatement	* -- tp = codep -> value	640:4:17976:17996	9877672	0	True				
ANR	9877834	AssignmentExpression	* -- tp = codep -> value		9877672	0		=			
ANR	9877835	UnaryOperationExpression	* -- tp		9877672	0					
ANR	9877836	UnaryOperator	*		9877672	0					
ANR	9877837	UnaryExpression	-- tp		9877672	1					
ANR	9877838	IncDec	--		9877672	0					
ANR	9877839	Identifier	tp		9877672	1					
ANR	9877840	PtrMemberAccess	codep -> value		9877672	1					
ANR	9877841	Identifier	codep		9877672	0					
ANR	9877842	Identifier	value		9877672	1					
ANR	9877843	ExpressionStatement	codep = codep -> next	641:4:18002:18021	9877672	1	True				
ANR	9877844	AssignmentExpression	codep = codep -> next		9877672	0		=			
ANR	9877845	Identifier	codep		9877672	0					
ANR	9877846	PtrMemberAccess	codep -> next		9877672	1					
ANR	9877847	Identifier	codep		9877672	0					
ANR	9877848	Identifier	next		9877672	1					
ANR	9877849	Condition	-- occ	642:12:18035:18039	9877672	1	True				
ANR	9877850	UnaryExpression	-- occ		9877672	0					
ANR	9877851	IncDec	--		9877672	0					
ANR	9877852	Identifier	occ		9877672	1					
ANR	9877853	ReturnStatement	return ( 1 ) ;	643:3:18046:18056	9877672	4	True				
ANR	9877854	PrimaryExpression	1		9877672	0					
ANR	9877855	ExpressionStatement	op += residue	648:2:18131:18144	9877672	4	True				
ANR	9877856	AssignmentExpression	op += residue		9877672	0		+=			
ANR	9877857	Identifier	op		9877672	0					
ANR	9877858	Identifier	residue		9877672	1					
ANR	9877859	ExpressionStatement	occ -= residue	649:2:18148:18162	9877672	5	True				
ANR	9877860	AssignmentExpression	occ -= residue		9877672	0		-=			
ANR	9877861	Identifier	occ		9877672	0					
ANR	9877862	Identifier	residue		9877672	1					
ANR	9877863	ExpressionStatement	tp = op	650:2:18166:18173	9877672	6	True				
ANR	9877864	AssignmentExpression	tp = op		9877672	0		=			
ANR	9877865	Identifier	tp		9877672	0					
ANR	9877866	Identifier	op		9877672	1					
ANR	9877867	DoStatement	do		9877672	7					
ANR	9877868	CompoundStatement		53:5:1121:1121	9877672	0					
ANR	9877869	ExpressionStatement	* -- tp = codep -> value	652:3:18185:18205	9877672	0	True				
ANR	9877870	AssignmentExpression	* -- tp = codep -> value		9877672	0		=			
ANR	9877871	UnaryOperationExpression	* -- tp		9877672	0					
ANR	9877872	UnaryOperator	*		9877672	0					
ANR	9877873	UnaryExpression	-- tp		9877672	1					
ANR	9877874	IncDec	--		9877672	0					
ANR	9877875	Identifier	tp		9877672	1					
ANR	9877876	PtrMemberAccess	codep -> value		9877672	1					
ANR	9877877	Identifier	codep		9877672	0					
ANR	9877878	Identifier	value		9877672	1					
ANR	9877879	ExpressionStatement	codep = codep -> next	653:3:18210:18229	9877672	1	True				
ANR	9877880	AssignmentExpression	codep = codep -> next		9877672	0		=			
ANR	9877881	Identifier	codep		9877672	0					
ANR	9877882	PtrMemberAccess	codep -> next		9877672	1					
ANR	9877883	Identifier	codep		9877672	0					
ANR	9877884	Identifier	next		9877672	1					
ANR	9877885	Condition	-- residue	654:11:18242:18250	9877672	1	True				
ANR	9877886	UnaryExpression	-- residue		9877672	0					
ANR	9877887	IncDec	--		9877672	0					
ANR	9877888	Identifier	residue		9877672	1					
ANR	9877889	ExpressionStatement	sp -> dec_restart = 0	655:2:18256:18275	9877672	8	True				
ANR	9877890	AssignmentExpression	sp -> dec_restart = 0		9877672	0		=			
ANR	9877891	PtrMemberAccess	sp -> dec_restart		9877672	0					
ANR	9877892	Identifier	sp		9877672	0					
ANR	9877893	Identifier	dec_restart		9877672	1					
ANR	9877894	PrimaryExpression	0		9877672	1					
ANR	9877895	ExpressionStatement	bp = ( unsigned char * ) tif -> tif_rawcp	658:1:18282:18318	9877672	14	True				
ANR	9877896	AssignmentExpression	bp = ( unsigned char * ) tif -> tif_rawcp		9877672	0		=			
ANR	9877897	Identifier	bp		9877672	0					
ANR	9877898	CastExpression	( unsigned char * ) tif -> tif_rawcp		9877672	1					
ANR	9877899	CastTarget	unsigned char *		9877672	0					
ANR	9877900	PtrMemberAccess	tif -> tif_rawcp		9877672	1					
ANR	9877901	Identifier	tif		9877672	0					
ANR	9877902	Identifier	tif_rawcp		9877672	1					
ANR	9877903	ExpressionStatement	sp -> dec_bitsleft = ( ( ( uint64 ) tif -> tif_rawcc ) << 3 )	660:1:18341:18391	9877672	15	True				
ANR	9877904	AssignmentExpression	sp -> dec_bitsleft = ( ( ( uint64 ) tif -> tif_rawcc ) << 3 )		9877672	0		=			
ANR	9877905	PtrMemberAccess	sp -> dec_bitsleft		9877672	0					
ANR	9877906	Identifier	sp		9877672	0					
ANR	9877907	Identifier	dec_bitsleft		9877672	1					
ANR	9877908	ShiftExpression	( ( uint64 ) tif -> tif_rawcc ) << 3		9877672	1		<<			
ANR	9877909	CastExpression	( uint64 ) tif -> tif_rawcc		9877672	0					
ANR	9877910	CastTarget	uint64		9877672	0					
ANR	9877911	PtrMemberAccess	tif -> tif_rawcc		9877672	1					
ANR	9877912	Identifier	tif		9877672	0					
ANR	9877913	Identifier	tif_rawcc		9877672	1					
ANR	9877914	PrimaryExpression	3		9877672	1					
ANR	9877915	ExpressionStatement	nbits = sp -> lzw_nbits	662:1:18401:18422	9877672	16	True				
ANR	9877916	AssignmentExpression	nbits = sp -> lzw_nbits		9877672	0		=			
ANR	9877917	Identifier	nbits		9877672	0					
ANR	9877918	PtrMemberAccess	sp -> lzw_nbits		9877672	1					
ANR	9877919	Identifier	sp		9877672	0					
ANR	9877920	Identifier	lzw_nbits		9877672	1					
ANR	9877921	ExpressionStatement	nextdata = sp -> lzw_nextdata	663:1:18425:18452	9877672	17	True				
ANR	9877922	AssignmentExpression	nextdata = sp -> lzw_nextdata		9877672	0		=			
ANR	9877923	Identifier	nextdata		9877672	0					
ANR	9877924	PtrMemberAccess	sp -> lzw_nextdata		9877672	1					
ANR	9877925	Identifier	sp		9877672	0					
ANR	9877926	Identifier	lzw_nextdata		9877672	1					
ANR	9877927	ExpressionStatement	nextbits = sp -> lzw_nextbits	664:1:18455:18482	9877672	18	True				
ANR	9877928	AssignmentExpression	nextbits = sp -> lzw_nextbits		9877672	0		=			
ANR	9877929	Identifier	nextbits		9877672	0					
ANR	9877930	PtrMemberAccess	sp -> lzw_nextbits		9877672	1					
ANR	9877931	Identifier	sp		9877672	0					
ANR	9877932	Identifier	lzw_nextbits		9877672	1					
ANR	9877933	ExpressionStatement	nbitsmask = sp -> dec_nbitsmask	665:1:18485:18514	9877672	19	True				
ANR	9877934	AssignmentExpression	nbitsmask = sp -> dec_nbitsmask		9877672	0		=			
ANR	9877935	Identifier	nbitsmask		9877672	0					
ANR	9877936	PtrMemberAccess	sp -> dec_nbitsmask		9877672	1					
ANR	9877937	Identifier	sp		9877672	0					
ANR	9877938	Identifier	dec_nbitsmask		9877672	1					
ANR	9877939	ExpressionStatement	oldcodep = sp -> dec_oldcodep	666:1:18517:18544	9877672	20	True				
ANR	9877940	AssignmentExpression	oldcodep = sp -> dec_oldcodep		9877672	0		=			
ANR	9877941	Identifier	oldcodep		9877672	0					
ANR	9877942	PtrMemberAccess	sp -> dec_oldcodep		9877672	1					
ANR	9877943	Identifier	sp		9877672	0					
ANR	9877944	Identifier	dec_oldcodep		9877672	1					
ANR	9877945	ExpressionStatement	free_entp = sp -> dec_free_entp	667:1:18547:18576	9877672	21	True				
ANR	9877946	AssignmentExpression	free_entp = sp -> dec_free_entp		9877672	0		=			
ANR	9877947	Identifier	free_entp		9877672	0					
ANR	9877948	PtrMemberAccess	sp -> dec_free_entp		9877672	1					
ANR	9877949	Identifier	sp		9877672	0					
ANR	9877950	Identifier	dec_free_entp		9877672	1					
ANR	9877951	ExpressionStatement	maxcodep = sp -> dec_maxcodep	668:1:18579:18606	9877672	22	True				
ANR	9877952	AssignmentExpression	maxcodep = sp -> dec_maxcodep		9877672	0		=			
ANR	9877953	Identifier	maxcodep		9877672	0					
ANR	9877954	PtrMemberAccess	sp -> dec_maxcodep		9877672	1					
ANR	9877955	Identifier	sp		9877672	0					
ANR	9877956	Identifier	dec_maxcodep		9877672	1					
ANR	9877957	WhileStatement	while ( occ > 0 )		9877672	23					
ANR	9877958	Condition	occ > 0	670:8:18617:18623	9877672	0	True				
ANR	9877959	RelationalExpression	occ > 0		9877672	0		>			
ANR	9877960	Identifier	occ		9877672	0					
ANR	9877961	PrimaryExpression	0		9877672	1					
ANR	9877962	CompoundStatement		72:17:1567:1567	9877672	1					
ANR	9877963	ExpressionStatement	"NextCode ( tif , sp , bp , code , GetNextCodeCompat )"	671:2:18630:18676	9877672	0	True				
ANR	9877964	CallExpression	"NextCode ( tif , sp , bp , code , GetNextCodeCompat )"		9877672	0					
ANR	9877965	Callee	NextCode		9877672	0					
ANR	9877966	Identifier	NextCode		9877672	0					
ANR	9877967	ArgumentList	tif		9877672	1					
ANR	9877968	Argument	tif		9877672	0					
ANR	9877969	Identifier	tif		9877672	0					
ANR	9877970	Argument	sp		9877672	1					
ANR	9877971	Identifier	sp		9877672	0					
ANR	9877972	Argument	bp		9877672	2					
ANR	9877973	Identifier	bp		9877672	0					
ANR	9877974	Argument	code		9877672	3					
ANR	9877975	Identifier	code		9877672	0					
ANR	9877976	Argument	GetNextCodeCompat		9877672	4					
ANR	9877977	Identifier	GetNextCodeCompat		9877672	0					
ANR	9877978	IfStatement	if ( code == CODE_EOI )		9877672	1					
ANR	9877979	Condition	code == CODE_EOI	672:6:18684:18699	9877672	0	True				
ANR	9877980	EqualityExpression	code == CODE_EOI		9877672	0		==			
ANR	9877981	Identifier	code		9877672	0					
ANR	9877982	Identifier	CODE_EOI		9877672	1					
ANR	9877983	BreakStatement	break ;	673:3:18705:18710	9877672	1	True				
ANR	9877984	IfStatement	if ( code == CODE_CLEAR )		9877672	2					
ANR	9877985	Condition	code == CODE_CLEAR	674:6:18718:18735	9877672	0	True				
ANR	9877986	EqualityExpression	code == CODE_CLEAR		9877672	0		==			
ANR	9877987	Identifier	code		9877672	0					
ANR	9877988	Identifier	CODE_CLEAR		9877672	1					
ANR	9877989	CompoundStatement		76:26:1679:1679	9877672	1					
ANR	9877990	DoStatement	do		9877672	0					
ANR	9877991	CompoundStatement		77:6:1687:1687	9877672	0					
ANR	9877992	ExpressionStatement	free_entp = sp -> dec_codetab + CODE_FIRST	676:4:18752:18792	9877672	0	True				
ANR	9877993	AssignmentExpression	free_entp = sp -> dec_codetab + CODE_FIRST		9877672	0		=			
ANR	9877994	Identifier	free_entp		9877672	0					
ANR	9877995	AdditiveExpression	sp -> dec_codetab + CODE_FIRST		9877672	1		+			
ANR	9877996	PtrMemberAccess	sp -> dec_codetab		9877672	0					
ANR	9877997	Identifier	sp		9877672	0					
ANR	9877998	Identifier	dec_codetab		9877672	1					
ANR	9877999	Identifier	CODE_FIRST		9877672	1					
ANR	9878000	ExpressionStatement	"_TIFFmemset ( free_entp , 0 , ( CSIZE - CODE_FIRST ) * sizeof ( code_t ) )"	677:4:18798:18872	9877672	1	True				
ANR	9878001	CallExpression	"_TIFFmemset ( free_entp , 0 , ( CSIZE - CODE_FIRST ) * sizeof ( code_t ) )"		9877672	0					
ANR	9878002	Callee	_TIFFmemset		9877672	0					
ANR	9878003	Identifier	_TIFFmemset		9877672	0					
ANR	9878004	ArgumentList	free_entp		9877672	1					
ANR	9878005	Argument	free_entp		9877672	0					
ANR	9878006	Identifier	free_entp		9877672	0					
ANR	9878007	Argument	0		9877672	1					
ANR	9878008	PrimaryExpression	0		9877672	0					
ANR	9878009	Argument	( CSIZE - CODE_FIRST ) * sizeof ( code_t )		9877672	2					
ANR	9878010	MultiplicativeExpression	( CSIZE - CODE_FIRST ) * sizeof ( code_t )		9877672	0		*			
ANR	9878011	AdditiveExpression	CSIZE - CODE_FIRST		9877672	0		-			
ANR	9878012	Identifier	CSIZE		9877672	0					
ANR	9878013	Identifier	CODE_FIRST		9877672	1					
ANR	9878014	SizeofExpression	sizeof ( code_t )		9877672	1					
ANR	9878015	Sizeof	sizeof		9877672	0					
ANR	9878016	SizeofOperand	code_t		9877672	1					
ANR	9878017	ExpressionStatement	nbits = BITS_MIN	679:4:18878:18894	9877672	2	True				
ANR	9878018	AssignmentExpression	nbits = BITS_MIN		9877672	0		=			
ANR	9878019	Identifier	nbits		9877672	0					
ANR	9878020	Identifier	BITS_MIN		9877672	1					
ANR	9878021	ExpressionStatement	nbitsmask = MAXCODE ( BITS_MIN )	680:4:18900:18929	9877672	3	True				
ANR	9878022	AssignmentExpression	nbitsmask = MAXCODE ( BITS_MIN )		9877672	0		=			
ANR	9878023	Identifier	nbitsmask		9877672	0					
ANR	9878024	CallExpression	MAXCODE ( BITS_MIN )		9877672	1					
ANR	9878025	Callee	MAXCODE		9877672	0					
ANR	9878026	Identifier	MAXCODE		9877672	0					
ANR	9878027	ArgumentList	BITS_MIN		9877672	1					
ANR	9878028	Argument	BITS_MIN		9877672	0					
ANR	9878029	Identifier	BITS_MIN		9877672	0					
ANR	9878030	ExpressionStatement	maxcodep = sp -> dec_codetab + nbitsmask	681:4:18935:18973	9877672	4	True				
ANR	9878031	AssignmentExpression	maxcodep = sp -> dec_codetab + nbitsmask		9877672	0		=			
ANR	9878032	Identifier	maxcodep		9877672	0					
ANR	9878033	AdditiveExpression	sp -> dec_codetab + nbitsmask		9877672	1		+			
ANR	9878034	PtrMemberAccess	sp -> dec_codetab		9877672	0					
ANR	9878035	Identifier	sp		9877672	0					
ANR	9878036	Identifier	dec_codetab		9877672	1					
ANR	9878037	Identifier	nbitsmask		9877672	1					
ANR	9878038	ExpressionStatement	"NextCode ( tif , sp , bp , code , GetNextCodeCompat )"	682:4:18979:19025	9877672	5	True				
ANR	9878039	CallExpression	"NextCode ( tif , sp , bp , code , GetNextCodeCompat )"		9877672	0					
ANR	9878040	Callee	NextCode		9877672	0					
ANR	9878041	Identifier	NextCode		9877672	0					
ANR	9878042	ArgumentList	tif		9877672	1					
ANR	9878043	Argument	tif		9877672	0					
ANR	9878044	Identifier	tif		9877672	0					
ANR	9878045	Argument	sp		9877672	1					
ANR	9878046	Identifier	sp		9877672	0					
ANR	9878047	Argument	bp		9877672	2					
ANR	9878048	Identifier	bp		9877672	0					
ANR	9878049	Argument	code		9877672	3					
ANR	9878050	Identifier	code		9877672	0					
ANR	9878051	Argument	GetNextCodeCompat		9877672	4					
ANR	9878052	Identifier	GetNextCodeCompat		9877672	0					
ANR	9878053	Condition	code == CODE_CLEAR	683:12:19039:19056	9877672	1	True				
ANR	9878054	EqualityExpression	code == CODE_CLEAR		9877672	0		==			
ANR	9878055	Identifier	code		9877672	0					
ANR	9878056	Identifier	CODE_CLEAR		9877672	1					
ANR	9878057	IfStatement	if ( code == CODE_EOI )		9877672	1					
ANR	9878058	Condition	code == CODE_EOI	684:7:19102:19117	9877672	0	True				
ANR	9878059	EqualityExpression	code == CODE_EOI		9877672	0		==			
ANR	9878060	Identifier	code		9877672	0					
ANR	9878061	Identifier	CODE_EOI		9877672	1					
ANR	9878062	BreakStatement	break ;	685:4:19124:19129	9877672	1	True				
ANR	9878063	IfStatement	if ( code > CODE_CLEAR )		9877672	2					
ANR	9878064	Condition	code > CODE_CLEAR	686:7:19138:19154	9877672	0	True				
ANR	9878065	RelationalExpression	code > CODE_CLEAR		9877672	0		>			
ANR	9878066	Identifier	code		9877672	0					
ANR	9878067	Identifier	CODE_CLEAR		9877672	1					
ANR	9878068	CompoundStatement		88:26:2098:2098	9877672	1					
ANR	9878069	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , tif -> tif_name , ""LZWDecode: Corrupted LZW table at scanline %d"" , tif -> tif_row )"	687:4:19163:19288	9877672	0	True				
ANR	9878070	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , tif -> tif_name , ""LZWDecode: Corrupted LZW table at scanline %d"" , tif -> tif_row )"		9877672	0					
ANR	9878071	Callee	TIFFErrorExt		9877672	0					
ANR	9878072	Identifier	TIFFErrorExt		9877672	0					
ANR	9878073	ArgumentList	tif -> tif_clientdata		9877672	1					
ANR	9878074	Argument	tif -> tif_clientdata		9877672	0					
ANR	9878075	PtrMemberAccess	tif -> tif_clientdata		9877672	0					
ANR	9878076	Identifier	tif		9877672	0					
ANR	9878077	Identifier	tif_clientdata		9877672	1					
ANR	9878078	Argument	tif -> tif_name		9877672	1					
ANR	9878079	PtrMemberAccess	tif -> tif_name		9877672	0					
ANR	9878080	Identifier	tif		9877672	0					
ANR	9878081	Identifier	tif_name		9877672	1					
ANR	9878082	Argument	"""LZWDecode: Corrupted LZW table at scanline %d"""		9877672	2					
ANR	9878083	PrimaryExpression	"""LZWDecode: Corrupted LZW table at scanline %d"""		9877672	0					
ANR	9878084	Argument	tif -> tif_row		9877672	3					
ANR	9878085	PtrMemberAccess	tif -> tif_row		9877672	0					
ANR	9878086	Identifier	tif		9877672	0					
ANR	9878087	Identifier	tif_row		9877672	1					
ANR	9878088	ReturnStatement	return ( 0 ) ;	690:4:19294:19304	9877672	1	True				
ANR	9878089	PrimaryExpression	0		9877672	0					
ANR	9878090	ExpressionStatement	* op ++ = ( char ) code	692:3:19314:19332	9877672	3	True				
ANR	9878091	AssignmentExpression	* op ++ = ( char ) code		9877672	0		=			
ANR	9878092	UnaryOperationExpression	* op ++		9877672	0					
ANR	9878093	UnaryOperator	*		9877672	0					
ANR	9878094	PostIncDecOperationExpression	op ++		9877672	1					
ANR	9878095	Identifier	op		9877672	0					
ANR	9878096	IncDec	++		9877672	1					
ANR	9878097	CastExpression	( char ) code		9877672	1					
ANR	9878098	CastTarget	char		9877672	0					
ANR	9878099	Identifier	code		9877672	1					
ANR	9878100	ExpressionStatement	occ --	693:3:19337:19342	9877672	4	True				
ANR	9878101	PostIncDecOperationExpression	occ --		9877672	0					
ANR	9878102	Identifier	occ		9877672	0					
ANR	9878103	IncDec	--		9877672	1					
ANR	9878104	ExpressionStatement	oldcodep = sp -> dec_codetab + code	694:3:19347:19380	9877672	5	True				
ANR	9878105	AssignmentExpression	oldcodep = sp -> dec_codetab + code		9877672	0		=			
ANR	9878106	Identifier	oldcodep		9877672	0					
ANR	9878107	AdditiveExpression	sp -> dec_codetab + code		9877672	1		+			
ANR	9878108	PtrMemberAccess	sp -> dec_codetab		9877672	0					
ANR	9878109	Identifier	sp		9877672	0					
ANR	9878110	Identifier	dec_codetab		9877672	1					
ANR	9878111	Identifier	code		9877672	1					
ANR	9878112	ContinueStatement	continue ;	695:3:19385:19393	9877672	6	True				
ANR	9878113	ExpressionStatement	codep = sp -> dec_codetab + code	697:2:19401:19431	9877672	3	True				
ANR	9878114	AssignmentExpression	codep = sp -> dec_codetab + code		9877672	0		=			
ANR	9878115	Identifier	codep		9877672	0					
ANR	9878116	AdditiveExpression	sp -> dec_codetab + code		9877672	1		+			
ANR	9878117	PtrMemberAccess	sp -> dec_codetab		9877672	0					
ANR	9878118	Identifier	sp		9877672	0					
ANR	9878119	Identifier	dec_codetab		9877672	1					
ANR	9878120	Identifier	code		9877672	1					
ANR	9878121	IfStatement	if ( free_entp < & sp -> dec_codetab [ 0 ] || free_entp >= & sp -> dec_codetab [ CSIZE ] )		9877672	4					
ANR	9878122	Condition	free_entp < & sp -> dec_codetab [ 0 ] || free_entp >= & sp -> dec_codetab [ CSIZE ]	702:6:19493:19569	9877672	0	True				
ANR	9878123	OrExpression	free_entp < & sp -> dec_codetab [ 0 ] || free_entp >= & sp -> dec_codetab [ CSIZE ]		9877672	0		||			
ANR	9878124	RelationalExpression	free_entp < & sp -> dec_codetab [ 0 ]		9877672	0		<			
ANR	9878125	Identifier	free_entp		9877672	0					
ANR	9878126	UnaryOperationExpression	& sp -> dec_codetab [ 0 ]		9877672	1					
ANR	9878127	UnaryOperator	&		9877672	0					
ANR	9878128	ArrayIndexing	sp -> dec_codetab [ 0 ]		9877672	1					
ANR	9878129	PtrMemberAccess	sp -> dec_codetab		9877672	0					
ANR	9878130	Identifier	sp		9877672	0					
ANR	9878131	Identifier	dec_codetab		9877672	1					
ANR	9878132	PrimaryExpression	0		9877672	1					
ANR	9878133	RelationalExpression	free_entp >= & sp -> dec_codetab [ CSIZE ]		9877672	1		>=			
ANR	9878134	Identifier	free_entp		9877672	0					
ANR	9878135	UnaryOperationExpression	& sp -> dec_codetab [ CSIZE ]		9877672	1					
ANR	9878136	UnaryOperator	&		9877672	0					
ANR	9878137	ArrayIndexing	sp -> dec_codetab [ CSIZE ]		9877672	1					
ANR	9878138	PtrMemberAccess	sp -> dec_codetab		9877672	0					
ANR	9878139	Identifier	sp		9877672	0					
ANR	9878140	Identifier	dec_codetab		9877672	1					
ANR	9878141	Identifier	CSIZE		9877672	1					
ANR	9878142	CompoundStatement		105:44:2513:2513	9877672	1					
ANR	9878143	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Corrupted LZW table at scanline %d"" , tif -> tif_row )"	704:3:19577:19677	9877672	0	True				
ANR	9878144	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Corrupted LZW table at scanline %d"" , tif -> tif_row )"		9877672	0					
ANR	9878145	Callee	TIFFErrorExt		9877672	0					
ANR	9878146	Identifier	TIFFErrorExt		9877672	0					
ANR	9878147	ArgumentList	tif -> tif_clientdata		9877672	1					
ANR	9878148	Argument	tif -> tif_clientdata		9877672	0					
ANR	9878149	PtrMemberAccess	tif -> tif_clientdata		9877672	0					
ANR	9878150	Identifier	tif		9877672	0					
ANR	9878151	Identifier	tif_clientdata		9877672	1					
ANR	9878152	Argument	module		9877672	1					
ANR	9878153	Identifier	module		9877672	0					
ANR	9878154	Argument	"""Corrupted LZW table at scanline %d"""		9877672	2					
ANR	9878155	PrimaryExpression	"""Corrupted LZW table at scanline %d"""		9877672	0					
ANR	9878156	Argument	tif -> tif_row		9877672	3					
ANR	9878157	PtrMemberAccess	tif -> tif_row		9877672	0					
ANR	9878158	Identifier	tif		9877672	0					
ANR	9878159	Identifier	tif_row		9877672	1					
ANR	9878160	ReturnStatement	return ( 0 ) ;	706:3:19682:19692	9877672	1	True				
ANR	9878161	PrimaryExpression	0		9877672	0					
ANR	9878162	ExpressionStatement	free_entp -> next = oldcodep	709:2:19701:19727	9877672	5	True				
ANR	9878163	AssignmentExpression	free_entp -> next = oldcodep		9877672	0		=			
ANR	9878164	PtrMemberAccess	free_entp -> next		9877672	0					
ANR	9878165	Identifier	free_entp		9877672	0					
ANR	9878166	Identifier	next		9877672	1					
ANR	9878167	Identifier	oldcodep		9877672	1					
ANR	9878168	IfStatement	if ( free_entp -> next < & sp -> dec_codetab [ 0 ] || free_entp -> next >= & sp -> dec_codetab [ CSIZE ] )		9877672	6					
ANR	9878169	Condition	free_entp -> next < & sp -> dec_codetab [ 0 ] || free_entp -> next >= & sp -> dec_codetab [ CSIZE ]	710:6:19735:19823	9877672	0	True				
ANR	9878170	OrExpression	free_entp -> next < & sp -> dec_codetab [ 0 ] || free_entp -> next >= & sp -> dec_codetab [ CSIZE ]		9877672	0		||			
ANR	9878171	RelationalExpression	free_entp -> next < & sp -> dec_codetab [ 0 ]		9877672	0		<			
ANR	9878172	PtrMemberAccess	free_entp -> next		9877672	0					
ANR	9878173	Identifier	free_entp		9877672	0					
ANR	9878174	Identifier	next		9877672	1					
ANR	9878175	UnaryOperationExpression	& sp -> dec_codetab [ 0 ]		9877672	1					
ANR	9878176	UnaryOperator	&		9877672	0					
ANR	9878177	ArrayIndexing	sp -> dec_codetab [ 0 ]		9877672	1					
ANR	9878178	PtrMemberAccess	sp -> dec_codetab		9877672	0					
ANR	9878179	Identifier	sp		9877672	0					
ANR	9878180	Identifier	dec_codetab		9877672	1					
ANR	9878181	PrimaryExpression	0		9877672	1					
ANR	9878182	RelationalExpression	free_entp -> next >= & sp -> dec_codetab [ CSIZE ]		9877672	1		>=			
ANR	9878183	PtrMemberAccess	free_entp -> next		9877672	0					
ANR	9878184	Identifier	free_entp		9877672	0					
ANR	9878185	Identifier	next		9877672	1					
ANR	9878186	UnaryOperationExpression	& sp -> dec_codetab [ CSIZE ]		9877672	1					
ANR	9878187	UnaryOperator	&		9877672	0					
ANR	9878188	ArrayIndexing	sp -> dec_codetab [ CSIZE ]		9877672	1					
ANR	9878189	PtrMemberAccess	sp -> dec_codetab		9877672	0					
ANR	9878190	Identifier	sp		9877672	0					
ANR	9878191	Identifier	dec_codetab		9877672	1					
ANR	9878192	Identifier	CSIZE		9877672	1					
ANR	9878193	CompoundStatement		113:50:2767:2767	9877672	1					
ANR	9878194	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Corrupted LZW table at scanline %d"" , tif -> tif_row )"	712:3:19831:19931	9877672	0	True				
ANR	9878195	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Corrupted LZW table at scanline %d"" , tif -> tif_row )"		9877672	0					
ANR	9878196	Callee	TIFFErrorExt		9877672	0					
ANR	9878197	Identifier	TIFFErrorExt		9877672	0					
ANR	9878198	ArgumentList	tif -> tif_clientdata		9877672	1					
ANR	9878199	Argument	tif -> tif_clientdata		9877672	0					
ANR	9878200	PtrMemberAccess	tif -> tif_clientdata		9877672	0					
ANR	9878201	Identifier	tif		9877672	0					
ANR	9878202	Identifier	tif_clientdata		9877672	1					
ANR	9878203	Argument	module		9877672	1					
ANR	9878204	Identifier	module		9877672	0					
ANR	9878205	Argument	"""Corrupted LZW table at scanline %d"""		9877672	2					
ANR	9878206	PrimaryExpression	"""Corrupted LZW table at scanline %d"""		9877672	0					
ANR	9878207	Argument	tif -> tif_row		9877672	3					
ANR	9878208	PtrMemberAccess	tif -> tif_row		9877672	0					
ANR	9878209	Identifier	tif		9877672	0					
ANR	9878210	Identifier	tif_row		9877672	1					
ANR	9878211	ReturnStatement	return ( 0 ) ;	714:3:19936:19946	9877672	1	True				
ANR	9878212	PrimaryExpression	0		9877672	0					
ANR	9878213	ExpressionStatement	free_entp -> firstchar = free_entp -> next -> firstchar	716:2:19954:20003	9877672	7	True				
ANR	9878214	AssignmentExpression	free_entp -> firstchar = free_entp -> next -> firstchar		9877672	0		=			
ANR	9878215	PtrMemberAccess	free_entp -> firstchar		9877672	0					
ANR	9878216	Identifier	free_entp		9877672	0					
ANR	9878217	Identifier	firstchar		9877672	1					
ANR	9878218	PtrMemberAccess	free_entp -> next -> firstchar		9877672	1					
ANR	9878219	PtrMemberAccess	free_entp -> next		9877672	0					
ANR	9878220	Identifier	free_entp		9877672	0					
ANR	9878221	Identifier	next		9877672	1					
ANR	9878222	Identifier	firstchar		9877672	1					
ANR	9878223	ExpressionStatement	free_entp -> length = free_entp -> next -> length + 1	717:2:20007:20052	9877672	8	True				
ANR	9878224	AssignmentExpression	free_entp -> length = free_entp -> next -> length + 1		9877672	0		=			
ANR	9878225	PtrMemberAccess	free_entp -> length		9877672	0					
ANR	9878226	Identifier	free_entp		9877672	0					
ANR	9878227	Identifier	length		9877672	1					
ANR	9878228	AdditiveExpression	free_entp -> next -> length + 1		9877672	1		+			
ANR	9878229	PtrMemberAccess	free_entp -> next -> length		9877672	0					
ANR	9878230	PtrMemberAccess	free_entp -> next		9877672	0					
ANR	9878231	Identifier	free_entp		9877672	0					
ANR	9878232	Identifier	next		9877672	1					
ANR	9878233	Identifier	length		9877672	1					
ANR	9878234	PrimaryExpression	1		9877672	1					
ANR	9878235	ExpressionStatement	free_entp -> value = ( codep < free_entp ) ? codep -> firstchar : free_entp -> firstchar	718:2:20056:20142	9877672	9	True				
ANR	9878236	AssignmentExpression	free_entp -> value = ( codep < free_entp ) ? codep -> firstchar : free_entp -> firstchar		9877672	0		=			
ANR	9878237	PtrMemberAccess	free_entp -> value		9877672	0					
ANR	9878238	Identifier	free_entp		9877672	0					
ANR	9878239	Identifier	value		9877672	1					
ANR	9878240	ConditionalExpression	( codep < free_entp ) ? codep -> firstchar : free_entp -> firstchar		9877672	1					
ANR	9878241	Condition	codep < free_entp		9877672	0					
ANR	9878242	RelationalExpression	codep < free_entp		9877672	0		<			
ANR	9878243	Identifier	codep		9877672	0					
ANR	9878244	Identifier	free_entp		9877672	1					
ANR	9878245	PtrMemberAccess	codep -> firstchar		9877672	1					
ANR	9878246	Identifier	codep		9877672	0					
ANR	9878247	Identifier	firstchar		9877672	1					
ANR	9878248	PtrMemberAccess	free_entp -> firstchar		9877672	2					
ANR	9878249	Identifier	free_entp		9877672	0					
ANR	9878250	Identifier	firstchar		9877672	1					
ANR	9878251	IfStatement	if ( ++ free_entp > maxcodep )		9877672	10					
ANR	9878252	Condition	++ free_entp > maxcodep	720:6:20150:20171	9877672	0	True				
ANR	9878253	RelationalExpression	++ free_entp > maxcodep		9877672	0		>			
ANR	9878254	UnaryExpression	++ free_entp		9877672	0					
ANR	9878255	IncDec	++		9877672	0					
ANR	9878256	Identifier	free_entp		9877672	1					
ANR	9878257	Identifier	maxcodep		9877672	1					
ANR	9878258	CompoundStatement		122:30:3115:3115	9877672	1					
ANR	9878259	IfStatement	if ( ++ nbits > BITS_MAX )		9877672	0					
ANR	9878260	Condition	++ nbits > BITS_MAX	721:7:20183:20200	9877672	0	True				
ANR	9878261	RelationalExpression	++ nbits > BITS_MAX		9877672	0		>			
ANR	9878262	UnaryExpression	++ nbits		9877672	0					
ANR	9878263	IncDec	++		9877672	0					
ANR	9878264	Identifier	nbits		9877672	1					
ANR	9878265	Identifier	BITS_MAX		9877672	1					
ANR	9878266	ExpressionStatement	nbits = BITS_MAX	722:4:20232:20248	9877672	1	True				
ANR	9878267	AssignmentExpression	nbits = BITS_MAX		9877672	0		=			
ANR	9878268	Identifier	nbits		9877672	0					
ANR	9878269	Identifier	BITS_MAX		9877672	1					
ANR	9878270	ExpressionStatement	nbitsmask = MAXCODE ( nbits )	723:3:20253:20279	9877672	1	True				
ANR	9878271	AssignmentExpression	nbitsmask = MAXCODE ( nbits )		9877672	0		=			
ANR	9878272	Identifier	nbitsmask		9877672	0					
ANR	9878273	CallExpression	MAXCODE ( nbits )		9877672	1					
ANR	9878274	Callee	MAXCODE		9877672	0					
ANR	9878275	Identifier	MAXCODE		9877672	0					
ANR	9878276	ArgumentList	nbits		9877672	1					
ANR	9878277	Argument	nbits		9877672	0					
ANR	9878278	Identifier	nbits		9877672	0					
ANR	9878279	ExpressionStatement	maxcodep = sp -> dec_codetab + nbitsmask	724:3:20284:20322	9877672	2	True				
ANR	9878280	AssignmentExpression	maxcodep = sp -> dec_codetab + nbitsmask		9877672	0		=			
ANR	9878281	Identifier	maxcodep		9877672	0					
ANR	9878282	AdditiveExpression	sp -> dec_codetab + nbitsmask		9877672	1		+			
ANR	9878283	PtrMemberAccess	sp -> dec_codetab		9877672	0					
ANR	9878284	Identifier	sp		9877672	0					
ANR	9878285	Identifier	dec_codetab		9877672	1					
ANR	9878286	Identifier	nbitsmask		9877672	1					
ANR	9878287	ExpressionStatement	oldcodep = codep	726:2:20330:20346	9877672	11	True				
ANR	9878288	AssignmentExpression	oldcodep = codep		9877672	0		=			
ANR	9878289	Identifier	oldcodep		9877672	0					
ANR	9878290	Identifier	codep		9877672	1					
ANR	9878291	IfStatement	if ( code >= 256 )		9877672	12					
ANR	9878292	Condition	code >= 256	727:6:20354:20364	9877672	0	True				
ANR	9878293	RelationalExpression	code >= 256		9877672	0		>=			
ANR	9878294	Identifier	code		9877672	0					
ANR	9878295	PrimaryExpression	256		9877672	1					
ANR	9878296	CompoundStatement		129:19:3308:3308	9877672	1					
ANR	9878297	IfStatement	if ( codep -> length == 0 )		9877672	0					
ANR	9878298	Condition	codep -> length == 0	732:6:20473:20490	9877672	0	True				
ANR	9878299	EqualityExpression	codep -> length == 0		9877672	0		==			
ANR	9878300	PtrMemberAccess	codep -> length		9877672	0					
ANR	9878301	Identifier	codep		9877672	0					
ANR	9878302	Identifier	length		9877672	1					
ANR	9878303	PrimaryExpression	0		9877672	1					
ANR	9878304	CompoundStatement		134:26:3434:3434	9877672	1					
ANR	9878305	Statement	TIFFErrorExt	733:4:20499:20510	9877672	0	True				
ANR	9878306	Statement	(	733:16:20511:20511	9877672	1	True				
ANR	9878307	Statement	tif	733:17:20512:20514	9877672	2	True				
ANR	9878308	Statement	->	733:20:20515:20516	9877672	3	True				
ANR	9878309	Statement	tif_clientdata	733:22:20517:20530	9877672	4	True				
ANR	9878310	Statement	","	733:36:20531:20531	9877672	5	True				
ANR	9878311	Statement	module	733:38:20533:20538	9877672	6	True				
ANR	9878312	Statement	","	733:44:20539:20539	9877672	7	True				
ANR	9878313	Statement	"""Wrong length of decoded """	734:8:20549:20574	9877672	8	True				
ANR	9878314	Statement	"""string: data probably corrupted at scanline %d"""	735:8:20584:20631	9877672	9	True				
ANR	9878315	Statement	","	735:56:20632:20632	9877672	10	True				
ANR	9878316	Statement	tif	736:8:20642:20644	9877672	11	True				
ANR	9878317	Statement	->	736:11:20645:20646	9877672	12	True				
ANR	9878318	Statement	tif_row	736:13:20647:20653	9877672	13	True				
ANR	9878319	Statement	)	736:20:20654:20654	9877672	14	True				
ANR	9878320	ExpressionStatement		736:21:20655:20655	9877672	15	True				
ANR	9878321	ReturnStatement	return ( 0 ) ;	737:4:20661:20671	9877672	16	True				
ANR	9878322	PrimaryExpression	0		9877672	0					
ANR	9878323	IfStatement	if ( codep -> length > occ )		9877672	1					
ANR	9878324	Condition	codep -> length > occ	739:7:20685:20703	9877672	0	True				
ANR	9878325	RelationalExpression	codep -> length > occ		9877672	0		>			
ANR	9878326	PtrMemberAccess	codep -> length		9877672	0					
ANR	9878327	Identifier	codep		9877672	0					
ANR	9878328	Identifier	length		9877672	1					
ANR	9878329	Identifier	occ		9877672	1					
ANR	9878330	CompoundStatement		141:28:3647:3647	9877672	1					
ANR	9878331	ExpressionStatement	sp -> dec_codep = codep	746:4:20902:20923	9877672	0	True				
ANR	9878332	AssignmentExpression	sp -> dec_codep = codep		9877672	0		=			
ANR	9878333	PtrMemberAccess	sp -> dec_codep		9877672	0					
ANR	9878334	Identifier	sp		9877672	0					
ANR	9878335	Identifier	dec_codep		9877672	1					
ANR	9878336	Identifier	codep		9877672	1					
ANR	9878337	DoStatement	do		9877672	1					
ANR	9878338	CompoundStatement		149:7:3873:3873	9877672	0					
ANR	9878339	ExpressionStatement	codep = codep -> next	748:5:20939:20958	9877672	0	True				
ANR	9878340	AssignmentExpression	codep = codep -> next		9877672	0		=			
ANR	9878341	Identifier	codep		9877672	0					
ANR	9878342	PtrMemberAccess	codep -> next		9877672	1					
ANR	9878343	Identifier	codep		9877672	0					
ANR	9878344	Identifier	next		9877672	1					
ANR	9878345	Condition	codep -> length > occ	749:13:20973:20991	9877672	1	True				
ANR	9878346	RelationalExpression	codep -> length > occ		9877672	0		>			
ANR	9878347	PtrMemberAccess	codep -> length		9877672	0					
ANR	9878348	Identifier	codep		9877672	0					
ANR	9878349	Identifier	length		9877672	1					
ANR	9878350	Identifier	occ		9877672	1					
ANR	9878351	ExpressionStatement	sp -> dec_restart = occ	750:4:20999:21020	9877672	2	True				
ANR	9878352	AssignmentExpression	sp -> dec_restart = occ		9877672	0		=			
ANR	9878353	PtrMemberAccess	sp -> dec_restart		9877672	0					
ANR	9878354	Identifier	sp		9877672	0					
ANR	9878355	Identifier	dec_restart		9877672	1					
ANR	9878356	Identifier	occ		9877672	1					
ANR	9878357	ExpressionStatement	tp = op + occ	751:4:21026:21039	9877672	3	True				
ANR	9878358	AssignmentExpression	tp = op + occ		9877672	0		=			
ANR	9878359	Identifier	tp		9877672	0					
ANR	9878360	AdditiveExpression	op + occ		9877672	1		+			
ANR	9878361	Identifier	op		9877672	0					
ANR	9878362	Identifier	occ		9877672	1					
ANR	9878363	DoStatement	do		9877672	4					
ANR	9878364	CompoundStatement		154:8:3990:3990	9877672	0					
ANR	9878365	ExpressionStatement	* -- tp = codep -> value	753:5:21056:21076	9877672	0	True				
ANR	9878366	AssignmentExpression	* -- tp = codep -> value		9877672	0		=			
ANR	9878367	UnaryOperationExpression	* -- tp		9877672	0					
ANR	9878368	UnaryOperator	*		9877672	0					
ANR	9878369	UnaryExpression	-- tp		9877672	1					
ANR	9878370	IncDec	--		9877672	0					
ANR	9878371	Identifier	tp		9877672	1					
ANR	9878372	PtrMemberAccess	codep -> value		9877672	1					
ANR	9878373	Identifier	codep		9877672	0					
ANR	9878374	Identifier	value		9877672	1					
ANR	9878375	ExpressionStatement	codep = codep -> next	754:5:21083:21102	9877672	1	True				
ANR	9878376	AssignmentExpression	codep = codep -> next		9877672	0		=			
ANR	9878377	Identifier	codep		9877672	0					
ANR	9878378	PtrMemberAccess	codep -> next		9877672	1					
ANR	9878379	Identifier	codep		9877672	0					
ANR	9878380	Identifier	next		9877672	1					
ANR	9878381	Condition	-- occ	755:14:21118:21122	9877672	1	True				
ANR	9878382	UnaryExpression	-- occ		9877672	0					
ANR	9878383	IncDec	--		9877672	0					
ANR	9878384	Identifier	occ		9877672	1					
ANR	9878385	BreakStatement	break ;	756:4:21130:21135	9877672	5	True				
ANR	9878386	ExpressionStatement	assert ( occ >= codep -> length )	758:3:21145:21173	9877672	2	True				
ANR	9878387	CallExpression	assert ( occ >= codep -> length )		9877672	0					
ANR	9878388	Callee	assert		9877672	0					
ANR	9878389	Identifier	assert		9877672	0					
ANR	9878390	ArgumentList	occ >= codep -> length		9877672	1					
ANR	9878391	Argument	occ >= codep -> length		9877672	0					
ANR	9878392	RelationalExpression	occ >= codep -> length		9877672	0		>=			
ANR	9878393	Identifier	occ		9877672	0					
ANR	9878394	PtrMemberAccess	codep -> length		9877672	1					
ANR	9878395	Identifier	codep		9877672	0					
ANR	9878396	Identifier	length		9877672	1					
ANR	9878397	ExpressionStatement	op += codep -> length	759:3:21178:21197	9877672	3	True				
ANR	9878398	AssignmentExpression	op += codep -> length		9877672	0		+=			
ANR	9878399	Identifier	op		9877672	0					
ANR	9878400	PtrMemberAccess	codep -> length		9877672	1					
ANR	9878401	Identifier	codep		9877672	0					
ANR	9878402	Identifier	length		9877672	1					
ANR	9878403	ExpressionStatement	occ -= codep -> length	760:3:21202:21222	9877672	4	True				
ANR	9878404	AssignmentExpression	occ -= codep -> length		9877672	0		-=			
ANR	9878405	Identifier	occ		9877672	0					
ANR	9878406	PtrMemberAccess	codep -> length		9877672	1					
ANR	9878407	Identifier	codep		9877672	0					
ANR	9878408	Identifier	length		9877672	1					
ANR	9878409	ExpressionStatement	tp = op	761:3:21227:21234	9877672	5	True				
ANR	9878410	AssignmentExpression	tp = op		9877672	0		=			
ANR	9878411	Identifier	tp		9877672	0					
ANR	9878412	Identifier	op		9877672	1					
ANR	9878413	DoStatement	do		9877672	6					
ANR	9878414	CompoundStatement		164:6:4183:4183	9877672	0					
ANR	9878415	ExpressionStatement	* -- tp = codep -> value	763:4:21248:21268	9877672	0	True				
ANR	9878416	AssignmentExpression	* -- tp = codep -> value		9877672	0		=			
ANR	9878417	UnaryOperationExpression	* -- tp		9877672	0					
ANR	9878418	UnaryOperator	*		9877672	0					
ANR	9878419	UnaryExpression	-- tp		9877672	1					
ANR	9878420	IncDec	--		9877672	0					
ANR	9878421	Identifier	tp		9877672	1					
ANR	9878422	PtrMemberAccess	codep -> value		9877672	1					
ANR	9878423	Identifier	codep		9877672	0					
ANR	9878424	Identifier	value		9877672	1					
ANR	9878425	Condition	( codep = codep -> next ) != NULL	764:12:21282:21310	9877672	1	True				
ANR	9878426	EqualityExpression	( codep = codep -> next ) != NULL		9877672	0		!=			
ANR	9878427	AssignmentExpression	codep = codep -> next		9877672	0		=			
ANR	9878428	Identifier	codep		9877672	0					
ANR	9878429	PtrMemberAccess	codep -> next		9877672	1					
ANR	9878430	Identifier	codep		9877672	0					
ANR	9878431	Identifier	next		9877672	1					
ANR	9878432	Identifier	NULL		9877672	1					
ANR	9878433	ElseStatement	else		9877672	0					
ANR	9878434	CompoundStatement		167:9:4265:4265	9877672	0					
ANR	9878435	ExpressionStatement	* op ++ = ( char ) code	766:3:21329:21347	9877672	0	True				
ANR	9878436	AssignmentExpression	* op ++ = ( char ) code		9877672	0		=			
ANR	9878437	UnaryOperationExpression	* op ++		9877672	0					
ANR	9878438	UnaryOperator	*		9877672	0					
ANR	9878439	PostIncDecOperationExpression	op ++		9877672	1					
ANR	9878440	Identifier	op		9877672	0					
ANR	9878441	IncDec	++		9877672	1					
ANR	9878442	CastExpression	( char ) code		9877672	1					
ANR	9878443	CastTarget	char		9877672	0					
ANR	9878444	Identifier	code		9877672	1					
ANR	9878445	ExpressionStatement	occ --	767:3:21352:21357	9877672	1	True				
ANR	9878446	PostIncDecOperationExpression	occ --		9877672	0					
ANR	9878447	Identifier	occ		9877672	0					
ANR	9878448	IncDec	--		9877672	1					
ANR	9878449	ExpressionStatement	tif -> tif_rawcc -= ( tmsize_t ) ( ( uint8 * ) bp - tif -> tif_rawcp )	771:1:21368:21428	9877672	24	True				
ANR	9878450	AssignmentExpression	tif -> tif_rawcc -= ( tmsize_t ) ( ( uint8 * ) bp - tif -> tif_rawcp )		9877672	0		-=			
ANR	9878451	PtrMemberAccess	tif -> tif_rawcc		9877672	0					
ANR	9878452	Identifier	tif		9877672	0					
ANR	9878453	Identifier	tif_rawcc		9877672	1					
ANR	9878454	CastExpression	( tmsize_t ) ( ( uint8 * ) bp - tif -> tif_rawcp )		9877672	1					
ANR	9878455	CastTarget	tmsize_t		9877672	0					
ANR	9878456	AdditiveExpression	( uint8 * ) bp - tif -> tif_rawcp		9877672	1		-			
ANR	9878457	CastExpression	( uint8 * ) bp		9877672	0					
ANR	9878458	CastTarget	uint8 *		9877672	0					
ANR	9878459	Identifier	bp		9877672	1					
ANR	9878460	PtrMemberAccess	tif -> tif_rawcp		9877672	1					
ANR	9878461	Identifier	tif		9877672	0					
ANR	9878462	Identifier	tif_rawcp		9877672	1					
ANR	9878463	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	772:1:21431:21459	9877672	25	True				
ANR	9878464	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		9877672	0		=			
ANR	9878465	PtrMemberAccess	tif -> tif_rawcp		9877672	0					
ANR	9878466	Identifier	tif		9877672	0					
ANR	9878467	Identifier	tif_rawcp		9877672	1					
ANR	9878468	CastExpression	( uint8 * ) bp		9877672	1					
ANR	9878469	CastTarget	uint8 *		9877672	0					
ANR	9878470	Identifier	bp		9877672	1					
ANR	9878471	ExpressionStatement	sp -> lzw_nbits = ( unsigned short ) nbits	773:1:21462:21499	9877672	26	True				
ANR	9878472	AssignmentExpression	sp -> lzw_nbits = ( unsigned short ) nbits		9877672	0		=			
ANR	9878473	PtrMemberAccess	sp -> lzw_nbits		9877672	0					
ANR	9878474	Identifier	sp		9877672	0					
ANR	9878475	Identifier	lzw_nbits		9877672	1					
ANR	9878476	CastExpression	( unsigned short ) nbits		9877672	1					
ANR	9878477	CastTarget	unsigned short		9877672	0					
ANR	9878478	Identifier	nbits		9877672	1					
ANR	9878479	ExpressionStatement	sp -> lzw_nextdata = nextdata	774:1:21502:21529	9877672	27	True				
ANR	9878480	AssignmentExpression	sp -> lzw_nextdata = nextdata		9877672	0		=			
ANR	9878481	PtrMemberAccess	sp -> lzw_nextdata		9877672	0					
ANR	9878482	Identifier	sp		9877672	0					
ANR	9878483	Identifier	lzw_nextdata		9877672	1					
ANR	9878484	Identifier	nextdata		9877672	1					
ANR	9878485	ExpressionStatement	sp -> lzw_nextbits = nextbits	775:1:21532:21559	9877672	28	True				
ANR	9878486	AssignmentExpression	sp -> lzw_nextbits = nextbits		9877672	0		=			
ANR	9878487	PtrMemberAccess	sp -> lzw_nextbits		9877672	0					
ANR	9878488	Identifier	sp		9877672	0					
ANR	9878489	Identifier	lzw_nextbits		9877672	1					
ANR	9878490	Identifier	nextbits		9877672	1					
ANR	9878491	ExpressionStatement	sp -> dec_nbitsmask = nbitsmask	776:1:21562:21591	9877672	29	True				
ANR	9878492	AssignmentExpression	sp -> dec_nbitsmask = nbitsmask		9877672	0		=			
ANR	9878493	PtrMemberAccess	sp -> dec_nbitsmask		9877672	0					
ANR	9878494	Identifier	sp		9877672	0					
ANR	9878495	Identifier	dec_nbitsmask		9877672	1					
ANR	9878496	Identifier	nbitsmask		9877672	1					
ANR	9878497	ExpressionStatement	sp -> dec_oldcodep = oldcodep	777:1:21594:21621	9877672	30	True				
ANR	9878498	AssignmentExpression	sp -> dec_oldcodep = oldcodep		9877672	0		=			
ANR	9878499	PtrMemberAccess	sp -> dec_oldcodep		9877672	0					
ANR	9878500	Identifier	sp		9877672	0					
ANR	9878501	Identifier	dec_oldcodep		9877672	1					
ANR	9878502	Identifier	oldcodep		9877672	1					
ANR	9878503	ExpressionStatement	sp -> dec_free_entp = free_entp	778:1:21624:21653	9877672	31	True				
ANR	9878504	AssignmentExpression	sp -> dec_free_entp = free_entp		9877672	0		=			
ANR	9878505	PtrMemberAccess	sp -> dec_free_entp		9877672	0					
ANR	9878506	Identifier	sp		9877672	0					
ANR	9878507	Identifier	dec_free_entp		9877672	1					
ANR	9878508	Identifier	free_entp		9877672	1					
ANR	9878509	ExpressionStatement	sp -> dec_maxcodep = maxcodep	779:1:21656:21683	9877672	32	True				
ANR	9878510	AssignmentExpression	sp -> dec_maxcodep = maxcodep		9877672	0		=			
ANR	9878511	PtrMemberAccess	sp -> dec_maxcodep		9877672	0					
ANR	9878512	Identifier	sp		9877672	0					
ANR	9878513	Identifier	dec_maxcodep		9877672	1					
ANR	9878514	Identifier	maxcodep		9877672	1					
ANR	9878515	IfStatement	if ( occ > 0 )		9877672	33					
ANR	9878516	Condition	occ > 0	781:5:21691:21697	9877672	0	True				
ANR	9878517	RelationalExpression	occ > 0		9877672	0		>			
ANR	9878518	Identifier	occ		9877672	0					
ANR	9878519	PrimaryExpression	0		9877672	1					
ANR	9878520	CompoundStatement		183:14:4641:4641	9877672	1					
ANR	9878521	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at scanline %d (short %I64d bytes)"" , tif -> tif_row , ( unsigned __int64 ) occ )"	783:2:21774:21918	9877672	0	True				
ANR	9878522	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at scanline %d (short %I64d bytes)"" , tif -> tif_row , ( unsigned __int64 ) occ )"		9877672	0					
ANR	9878523	Callee	TIFFErrorExt		9877672	0					
ANR	9878524	Identifier	TIFFErrorExt		9877672	0					
ANR	9878525	ArgumentList	tif -> tif_clientdata		9877672	1					
ANR	9878526	Argument	tif -> tif_clientdata		9877672	0					
ANR	9878527	PtrMemberAccess	tif -> tif_clientdata		9877672	0					
ANR	9878528	Identifier	tif		9877672	0					
ANR	9878529	Identifier	tif_clientdata		9877672	1					
ANR	9878530	Argument	module		9877672	1					
ANR	9878531	Identifier	module		9877672	0					
ANR	9878532	Argument	"""Not enough data at scanline %d (short %I64d bytes)"""		9877672	2					
ANR	9878533	PrimaryExpression	"""Not enough data at scanline %d (short %I64d bytes)"""		9877672	0					
ANR	9878534	Argument	tif -> tif_row		9877672	3					
ANR	9878535	PtrMemberAccess	tif -> tif_row		9877672	0					
ANR	9878536	Identifier	tif		9877672	0					
ANR	9878537	Identifier	tif_row		9877672	1					
ANR	9878538	Argument	( unsigned __int64 ) occ		9877672	4					
ANR	9878539	CastExpression	( unsigned __int64 ) occ		9877672	0					
ANR	9878540	CastTarget	unsigned __int64		9877672	0					
ANR	9878541	Identifier	occ		9877672	1					
ANR	9878542	ReturnStatement	return ( 0 ) ;	791:2:22084:22094	9877672	1	True				
ANR	9878543	PrimaryExpression	0		9877672	0					
ANR	9878544	ReturnStatement	return ( 1 ) ;	793:1:22100:22110	9877672	34	True				
ANR	9878545	PrimaryExpression	1		9877672	0					
ANR	9878546	ReturnType	static int		9877672	1					
ANR	9878547	Identifier	LZWDecodeCompat		9877672	2					
ANR	9878548	ParameterList	"TIFF * tif , uint8 * op0 , tmsize_t occ0 , uint16 s"		9877672	3					
ANR	9878549	Parameter	TIFF * tif	598:16:17010:17018	9877672	0	True				
ANR	9878550	ParameterType	TIFF *		9877672	0					
ANR	9878551	Identifier	tif		9877672	1					
ANR	9878552	Parameter	uint8 * op0	598:27:17021:17030	9877672	1	True				
ANR	9878553	ParameterType	uint8 *		9877672	0					
ANR	9878554	Identifier	op0		9877672	1					
ANR	9878555	Parameter	tmsize_t occ0	598:39:17033:17045	9877672	2	True				
ANR	9878556	ParameterType	tmsize_t		9877672	0					
ANR	9878557	Identifier	occ0		9877672	1					
ANR	9878558	Parameter	uint16 s	598:54:17048:17055	9877672	3	True				
ANR	9878559	ParameterType	uint16		9877672	0					
ANR	9878560	Identifier	s		9877672	1					
ANR	9878561	CFGEntryNode	ENTRY		9877672		True				
ANR	9878562	CFGExitNode	EXIT		9877672		True				
ANR	9878563	Symbol	* sp		9877672						
ANR	9878564	Symbol	codep		9877672						
ANR	9878565	Symbol	sp -> dec_nbitsmask		9877672						
ANR	9878566	Symbol	sp -> dec_codetab		9877672						
ANR	9878567	Symbol	occ		9877672						
ANR	9878568	Symbol	tif		9877672						
ANR	9878569	Symbol	tif -> tif_rawcc		9877672						
ANR	9878570	Symbol	CSIZE		9877672						
ANR	9878571	Symbol	codep -> length		9877672						
ANR	9878572	Symbol	MAXCODE		9877672						
ANR	9878573	Symbol	nextbits		9877672						
ANR	9878574	Symbol	sp -> dec_maxcodep		9877672						
ANR	9878575	Symbol	free_entp -> next -> length		9877672						
ANR	9878576	Symbol	sp -> lzw_nextdata		9877672						
ANR	9878577	Symbol	codep -> value		9877672						
ANR	9878578	Symbol	* tp		9877672						
ANR	9878579	Symbol	NULL		9877672						
ANR	9878580	Symbol	module		9877672						
ANR	9878581	Symbol	free_entp -> length		9877672						
ANR	9878582	Symbol	* codep		9877672						
ANR	9878583	Symbol	tif -> tif_row		9877672						
ANR	9878584	Symbol	tif -> tif_rawcp		9877672						
ANR	9878585	Symbol	free_entp -> value		9877672						
ANR	9878586	Symbol	BITS_MIN		9877672						
ANR	9878587	Symbol	occ0		9877672						
ANR	9878588	Symbol	sp -> dec_bitsleft		9877672						
ANR	9878589	Symbol	tif -> tif_name		9877672						
ANR	9878590	Symbol	* free_entp		9877672						
ANR	9878591	Symbol	maxcodep		9877672						
ANR	9878592	Symbol	sp -> lzw_nextbits		9877672						
ANR	9878593	Symbol	* op ++		9877672						
ANR	9878594	Symbol	sp -> dec_restart		9877672						
ANR	9878595	Symbol	sp -> dec_free_entp		9877672						
ANR	9878596	Symbol	* free_entp -> next		9877672						
ANR	9878597	Symbol	free_entp -> next -> firstchar		9877672						
ANR	9878598	Symbol	BITS_MAX		9877672						
ANR	9878599	Symbol	code		9877672						
ANR	9878600	Symbol	sp -> lzw_nbits		9877672						
ANR	9878601	Symbol	nbits		9877672						
ANR	9878602	Symbol	bp		9877672						
ANR	9878603	Symbol	oldcodep		9877672						
ANR	9878604	Symbol	DecoderState		9877672						
ANR	9878605	Symbol	codep -> next		9877672						
ANR	9878606	Symbol	sp		9877672						
ANR	9878607	Symbol	op		9877672						
ANR	9878608	Symbol	nbitsmask		9877672						
ANR	9878609	Symbol	* * free_entp		9877672						
ANR	9878610	Symbol	* -- tp		9877672						
ANR	9878611	Symbol	GetNextCodeCompat		9877672						
ANR	9878612	Symbol	op0		9877672						
ANR	9878613	Symbol	residue		9877672						
ANR	9878614	Symbol	tif -> tif_clientdata		9877672						
ANR	9878615	Symbol	nextdata		9877672						
ANR	9878616	Symbol	CODE_EOI		9877672						
ANR	9878617	Symbol	codep -> firstchar		9877672						
ANR	9878618	Symbol	s		9877672						
ANR	9878619	Symbol	CODE_FIRST		9877672						
ANR	9878620	Symbol	sp -> dec_codep		9877672						
ANR	9878621	Symbol	free_entp		9877672						
ANR	9878622	Symbol	* tif		9877672						
ANR	9878623	Symbol	tp		9877672						
ANR	9878624	Symbol	sp -> dec_oldcodep		9877672						
ANR	9878625	Symbol	free_entp -> next		9877672						
ANR	9878626	Symbol	free_entp -> firstchar		9877672						
ANR	9878627	Symbol	CODE_CLEAR		9877672						
ANR	9878628	Function	LZWSetupEncode	801:0:22164:22524							
ANR	9878629	FunctionDef	LZWSetupEncode (TIFF * tif)		9878628	0					
ANR	9878630	CompoundStatement		803:0:22201:22524	9878628	0					
ANR	9878631	Statement	static	804:1:22204:22209	9878628	0	True				
ANR	9878632	IdentifierDeclStatement	"const char module [ ] = ""LZWSetupEncode"" ;"	804:8:22211:22249	9878628	1	True				
ANR	9878633	IdentifierDecl	"module [ ] = ""LZWSetupEncode"""		9878628	0					
ANR	9878634	IdentifierDeclType	const char [ ]		9878628	0					
ANR	9878635	Identifier	module		9878628	1					
ANR	9878636	AssignmentExpression	"module [ ] = ""LZWSetupEncode"""		9878628	2		=			
ANR	9878637	Identifier	module		9878628	0					
ANR	9878638	PrimaryExpression	"""LZWSetupEncode"""		9878628	1					
ANR	9878639	IdentifierDeclStatement	LZWCodecState * sp = EncoderState ( tif ) ;	805:1:22252:22289	9878628	2	True				
ANR	9878640	IdentifierDecl	* sp = EncoderState ( tif )		9878628	0					
ANR	9878641	IdentifierDeclType	LZWCodecState *		9878628	0					
ANR	9878642	Identifier	sp		9878628	1					
ANR	9878643	AssignmentExpression	* sp = EncoderState ( tif )		9878628	2		=			
ANR	9878644	Identifier	sp		9878628	0					
ANR	9878645	CallExpression	EncoderState ( tif )		9878628	1					
ANR	9878646	Callee	EncoderState		9878628	0					
ANR	9878647	Identifier	EncoderState		9878628	0					
ANR	9878648	ArgumentList	tif		9878628	1					
ANR	9878649	Argument	tif		9878628	0					
ANR	9878650	Identifier	tif		9878628	0					
ANR	9878651	ExpressionStatement	assert ( sp != NULL )	807:1:22293:22311	9878628	3	True				
ANR	9878652	CallExpression	assert ( sp != NULL )		9878628	0					
ANR	9878653	Callee	assert		9878628	0					
ANR	9878654	Identifier	assert		9878628	0					
ANR	9878655	ArgumentList	sp != NULL		9878628	1					
ANR	9878656	Argument	sp != NULL		9878628	0					
ANR	9878657	EqualityExpression	sp != NULL		9878628	0		!=			
ANR	9878658	Identifier	sp		9878628	0					
ANR	9878659	Identifier	NULL		9878628	1					
ANR	9878660	ExpressionStatement	sp -> enc_hashtab = ( hash_t * ) _TIFFmalloc ( HSIZE * sizeof ( hash_t ) )	808:1:22314:22376	9878628	4	True				
ANR	9878661	AssignmentExpression	sp -> enc_hashtab = ( hash_t * ) _TIFFmalloc ( HSIZE * sizeof ( hash_t ) )		9878628	0		=			
ANR	9878662	PtrMemberAccess	sp -> enc_hashtab		9878628	0					
ANR	9878663	Identifier	sp		9878628	0					
ANR	9878664	Identifier	enc_hashtab		9878628	1					
ANR	9878665	CastExpression	( hash_t * ) _TIFFmalloc ( HSIZE * sizeof ( hash_t ) )		9878628	1					
ANR	9878666	CastTarget	hash_t *		9878628	0					
ANR	9878667	CallExpression	_TIFFmalloc ( HSIZE * sizeof ( hash_t ) )		9878628	1					
ANR	9878668	Callee	_TIFFmalloc		9878628	0					
ANR	9878669	Identifier	_TIFFmalloc		9878628	0					
ANR	9878670	ArgumentList	HSIZE * sizeof ( hash_t )		9878628	1					
ANR	9878671	Argument	HSIZE * sizeof ( hash_t )		9878628	0					
ANR	9878672	MultiplicativeExpression	HSIZE * sizeof ( hash_t )		9878628	0		*			
ANR	9878673	Identifier	HSIZE		9878628	0					
ANR	9878674	SizeofExpression	sizeof ( hash_t )		9878628	1					
ANR	9878675	Sizeof	sizeof		9878628	0					
ANR	9878676	SizeofOperand	hash_t		9878628	1					
ANR	9878677	IfStatement	if ( sp -> enc_hashtab == NULL )		9878628	5					
ANR	9878678	Condition	sp -> enc_hashtab == NULL	809:5:22383:22405	9878628	0	True				
ANR	9878679	EqualityExpression	sp -> enc_hashtab == NULL		9878628	0		==			
ANR	9878680	PtrMemberAccess	sp -> enc_hashtab		9878628	0					
ANR	9878681	Identifier	sp		9878628	0					
ANR	9878682	Identifier	enc_hashtab		9878628	1					
ANR	9878683	Identifier	NULL		9878628	1					
ANR	9878684	CompoundStatement		7:30:206:206	9878628	1					
ANR	9878685	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for LZW hash table"" )"	810:2:22412:22492	9878628	0	True				
ANR	9878686	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for LZW hash table"" )"		9878628	0					
ANR	9878687	Callee	TIFFErrorExt		9878628	0					
ANR	9878688	Identifier	TIFFErrorExt		9878628	0					
ANR	9878689	ArgumentList	tif -> tif_clientdata		9878628	1					
ANR	9878690	Argument	tif -> tif_clientdata		9878628	0					
ANR	9878691	PtrMemberAccess	tif -> tif_clientdata		9878628	0					
ANR	9878692	Identifier	tif		9878628	0					
ANR	9878693	Identifier	tif_clientdata		9878628	1					
ANR	9878694	Argument	module		9878628	1					
ANR	9878695	Identifier	module		9878628	0					
ANR	9878696	Argument	"""No space for LZW hash table"""		9878628	2					
ANR	9878697	PrimaryExpression	"""No space for LZW hash table"""		9878628	0					
ANR	9878698	ReturnStatement	return ( 0 ) ;	812:2:22496:22506	9878628	1	True				
ANR	9878699	PrimaryExpression	0		9878628	0					
ANR	9878700	ReturnStatement	return ( 1 ) ;	814:1:22512:22522	9878628	6	True				
ANR	9878701	PrimaryExpression	1		9878628	0					
ANR	9878702	ReturnType	static int		9878628	1					
ANR	9878703	Identifier	LZWSetupEncode		9878628	2					
ANR	9878704	ParameterList	TIFF * tif		9878628	3					
ANR	9878705	Parameter	TIFF * tif	802:15:22190:22198	9878628	0	True				
ANR	9878706	ParameterType	TIFF *		9878628	0					
ANR	9878707	Identifier	tif		9878628	1					
ANR	9878708	CFGEntryNode	ENTRY		9878628		True				
ANR	9878709	CFGExitNode	EXIT		9878628		True				
ANR	9878710	Symbol	tif		9878628						
ANR	9878711	Symbol	* sp		9878628						
ANR	9878712	Symbol	EncoderState		9878628						
ANR	9878713	Symbol	NULL		9878628						
ANR	9878714	Symbol	HSIZE		9878628						
ANR	9878715	Symbol	module		9878628						
ANR	9878716	Symbol	_TIFFmalloc		9878628						
ANR	9878717	Symbol	sp -> enc_hashtab		9878628						
ANR	9878718	Symbol	* tif		9878628						
ANR	9878719	Symbol	sp		9878628						
ANR	9878720	Symbol	tif -> tif_clientdata		9878628						
ANR	9878721	Function	LZWPreEncode	820:0:22583:23334							
ANR	9878722	FunctionDef	"LZWPreEncode (TIFF * tif , uint16 s)"		9878721	0					
ANR	9878723	CompoundStatement		822:0:22628:23334	9878721	0					
ANR	9878724	IdentifierDeclStatement	LZWCodecState * sp = EncoderState ( tif ) ;	823:1:22631:22668	9878721	0	True				
ANR	9878725	IdentifierDecl	* sp = EncoderState ( tif )		9878721	0					
ANR	9878726	IdentifierDeclType	LZWCodecState *		9878721	0					
ANR	9878727	Identifier	sp		9878721	1					
ANR	9878728	AssignmentExpression	* sp = EncoderState ( tif )		9878721	2		=			
ANR	9878729	Identifier	sp		9878721	0					
ANR	9878730	CallExpression	EncoderState ( tif )		9878721	1					
ANR	9878731	Callee	EncoderState		9878721	0					
ANR	9878732	Identifier	EncoderState		9878721	0					
ANR	9878733	ArgumentList	tif		9878721	1					
ANR	9878734	Argument	tif		9878721	0					
ANR	9878735	Identifier	tif		9878721	0					
ANR	9878736	ExpressionStatement	( void ) s	825:1:22672:22680	9878721	1	True				
ANR	9878737	CastExpression	( void ) s		9878721	0					
ANR	9878738	CastTarget	void		9878721	0					
ANR	9878739	Identifier	s		9878721	1					
ANR	9878740	ExpressionStatement	assert ( sp != NULL )	826:1:22683:22701	9878721	2	True				
ANR	9878741	CallExpression	assert ( sp != NULL )		9878721	0					
ANR	9878742	Callee	assert		9878721	0					
ANR	9878743	Identifier	assert		9878721	0					
ANR	9878744	ArgumentList	sp != NULL		9878721	1					
ANR	9878745	Argument	sp != NULL		9878721	0					
ANR	9878746	EqualityExpression	sp != NULL		9878721	0		!=			
ANR	9878747	Identifier	sp		9878721	0					
ANR	9878748	Identifier	NULL		9878721	1					
ANR	9878749	IfStatement	if ( sp -> enc_hashtab == NULL )		9878721	3					
ANR	9878750	Condition	sp -> enc_hashtab == NULL	828:5:22709:22731	9878721	0	True				
ANR	9878751	EqualityExpression	sp -> enc_hashtab == NULL		9878721	0		==			
ANR	9878752	PtrMemberAccess	sp -> enc_hashtab		9878721	0					
ANR	9878753	Identifier	sp		9878721	0					
ANR	9878754	Identifier	enc_hashtab		9878721	1					
ANR	9878755	Identifier	NULL		9878721	1					
ANR	9878756	CompoundStatement		8:8:114:114	9878721	1					
ANR	9878757	ExpressionStatement	tif -> tif_setupencode ( tif )	830:12:22757:22784	9878721	0	True				
ANR	9878758	CallExpression	tif -> tif_setupencode ( tif )		9878721	0					
ANR	9878759	Callee	tif -> tif_setupencode		9878721	0					
ANR	9878760	PtrMemberAccess	tif -> tif_setupencode		9878721	0					
ANR	9878761	Identifier	tif		9878721	0					
ANR	9878762	Identifier	tif_setupencode		9878721	1					
ANR	9878763	ArgumentList	tif		9878721	1					
ANR	9878764	Argument	tif		9878721	0					
ANR	9878765	Identifier	tif		9878721	0					
ANR	9878766	ExpressionStatement	sp -> lzw_nbits = BITS_MIN	833:1:22798:22822	9878721	4	True				
ANR	9878767	AssignmentExpression	sp -> lzw_nbits = BITS_MIN		9878721	0		=			
ANR	9878768	PtrMemberAccess	sp -> lzw_nbits		9878721	0					
ANR	9878769	Identifier	sp		9878721	0					
ANR	9878770	Identifier	lzw_nbits		9878721	1					
ANR	9878771	Identifier	BITS_MIN		9878721	1					
ANR	9878772	ExpressionStatement	sp -> lzw_maxcode = MAXCODE ( BITS_MIN )	834:1:22825:22860	9878721	5	True				
ANR	9878773	AssignmentExpression	sp -> lzw_maxcode = MAXCODE ( BITS_MIN )		9878721	0		=			
ANR	9878774	PtrMemberAccess	sp -> lzw_maxcode		9878721	0					
ANR	9878775	Identifier	sp		9878721	0					
ANR	9878776	Identifier	lzw_maxcode		9878721	1					
ANR	9878777	CallExpression	MAXCODE ( BITS_MIN )		9878721	1					
ANR	9878778	Callee	MAXCODE		9878721	0					
ANR	9878779	Identifier	MAXCODE		9878721	0					
ANR	9878780	ArgumentList	BITS_MIN		9878721	1					
ANR	9878781	Argument	BITS_MIN		9878721	0					
ANR	9878782	Identifier	BITS_MIN		9878721	0					
ANR	9878783	ExpressionStatement	sp -> lzw_free_ent = CODE_FIRST	835:1:22863:22892	9878721	6	True				
ANR	9878784	AssignmentExpression	sp -> lzw_free_ent = CODE_FIRST		9878721	0		=			
ANR	9878785	PtrMemberAccess	sp -> lzw_free_ent		9878721	0					
ANR	9878786	Identifier	sp		9878721	0					
ANR	9878787	Identifier	lzw_free_ent		9878721	1					
ANR	9878788	Identifier	CODE_FIRST		9878721	1					
ANR	9878789	ExpressionStatement	sp -> lzw_nextbits = 0	836:1:22895:22915	9878721	7	True				
ANR	9878790	AssignmentExpression	sp -> lzw_nextbits = 0		9878721	0		=			
ANR	9878791	PtrMemberAccess	sp -> lzw_nextbits		9878721	0					
ANR	9878792	Identifier	sp		9878721	0					
ANR	9878793	Identifier	lzw_nextbits		9878721	1					
ANR	9878794	PrimaryExpression	0		9878721	1					
ANR	9878795	ExpressionStatement	sp -> lzw_nextdata = 0	837:1:22918:22938	9878721	8	True				
ANR	9878796	AssignmentExpression	sp -> lzw_nextdata = 0		9878721	0		=			
ANR	9878797	PtrMemberAccess	sp -> lzw_nextdata		9878721	0					
ANR	9878798	Identifier	sp		9878721	0					
ANR	9878799	Identifier	lzw_nextdata		9878721	1					
ANR	9878800	PrimaryExpression	0		9878721	1					
ANR	9878801	ExpressionStatement	sp -> enc_checkpoint = CHECK_GAP	838:1:22941:22971	9878721	9	True				
ANR	9878802	AssignmentExpression	sp -> enc_checkpoint = CHECK_GAP		9878721	0		=			
ANR	9878803	PtrMemberAccess	sp -> enc_checkpoint		9878721	0					
ANR	9878804	Identifier	sp		9878721	0					
ANR	9878805	Identifier	enc_checkpoint		9878721	1					
ANR	9878806	Identifier	CHECK_GAP		9878721	1					
ANR	9878807	ExpressionStatement	sp -> enc_ratio = 0	839:1:22974:22991	9878721	10	True				
ANR	9878808	AssignmentExpression	sp -> enc_ratio = 0		9878721	0		=			
ANR	9878809	PtrMemberAccess	sp -> enc_ratio		9878721	0					
ANR	9878810	Identifier	sp		9878721	0					
ANR	9878811	Identifier	enc_ratio		9878721	1					
ANR	9878812	PrimaryExpression	0		9878721	1					
ANR	9878813	ExpressionStatement	sp -> enc_incount = 0	840:1:22994:23013	9878721	11	True				
ANR	9878814	AssignmentExpression	sp -> enc_incount = 0		9878721	0		=			
ANR	9878815	PtrMemberAccess	sp -> enc_incount		9878721	0					
ANR	9878816	Identifier	sp		9878721	0					
ANR	9878817	Identifier	enc_incount		9878721	1					
ANR	9878818	PrimaryExpression	0		9878721	1					
ANR	9878819	ExpressionStatement	sp -> enc_outcount = 0	841:1:23016:23036	9878721	12	True				
ANR	9878820	AssignmentExpression	sp -> enc_outcount = 0		9878721	0		=			
ANR	9878821	PtrMemberAccess	sp -> enc_outcount		9878721	0					
ANR	9878822	Identifier	sp		9878721	0					
ANR	9878823	Identifier	enc_outcount		9878721	1					
ANR	9878824	PrimaryExpression	0		9878721	1					
ANR	9878825	ExpressionStatement	sp -> enc_rawlimit = tif -> tif_rawdata + tif -> tif_rawdatasize - 1 - 4	846:1:23144:23208	9878721	13	True				
ANR	9878826	AssignmentExpression	sp -> enc_rawlimit = tif -> tif_rawdata + tif -> tif_rawdatasize - 1 - 4		9878721	0		=			
ANR	9878827	PtrMemberAccess	sp -> enc_rawlimit		9878721	0					
ANR	9878828	Identifier	sp		9878721	0					
ANR	9878829	Identifier	enc_rawlimit		9878721	1					
ANR	9878830	AdditiveExpression	tif -> tif_rawdata + tif -> tif_rawdatasize - 1 - 4		9878721	1		+			
ANR	9878831	PtrMemberAccess	tif -> tif_rawdata		9878721	0					
ANR	9878832	Identifier	tif		9878721	0					
ANR	9878833	Identifier	tif_rawdata		9878721	1					
ANR	9878834	AdditiveExpression	tif -> tif_rawdatasize - 1 - 4		9878721	1		-			
ANR	9878835	PtrMemberAccess	tif -> tif_rawdatasize		9878721	0					
ANR	9878836	Identifier	tif		9878721	0					
ANR	9878837	Identifier	tif_rawdatasize		9878721	1					
ANR	9878838	AdditiveExpression	1 - 4		9878721	1		-			
ANR	9878839	PrimaryExpression	1		9878721	0					
ANR	9878840	PrimaryExpression	4		9878721	1					
ANR	9878841	ExpressionStatement	cl_hash ( sp )	847:1:23211:23222	9878721	14	True				
ANR	9878842	CallExpression	cl_hash ( sp )		9878721	0					
ANR	9878843	Callee	cl_hash		9878721	0					
ANR	9878844	Identifier	cl_hash		9878721	0					
ANR	9878845	ArgumentList	sp		9878721	1					
ANR	9878846	Argument	sp		9878721	0					
ANR	9878847	Identifier	sp		9878721	0					
ANR	9878848	ExpressionStatement	sp -> enc_oldcode = ( hcode_t ) - 1	848:1:23249:23279	9878721	15	True				
ANR	9878849	AssignmentExpression	sp -> enc_oldcode = ( hcode_t ) - 1		9878721	0		=			
ANR	9878850	PtrMemberAccess	sp -> enc_oldcode		9878721	0					
ANR	9878851	Identifier	sp		9878721	0					
ANR	9878852	Identifier	enc_oldcode		9878721	1					
ANR	9878853	CastExpression	( hcode_t ) - 1		9878721	1					
ANR	9878854	CastTarget	hcode_t		9878721	0					
ANR	9878855	UnaryOperationExpression	- 1		9878721	1					
ANR	9878856	UnaryOperator	-		9878721	0					
ANR	9878857	PrimaryExpression	1		9878721	1					
ANR	9878858	ReturnStatement	return ( 1 ) ;	849:1:23322:23332	9878721	16	True				
ANR	9878859	PrimaryExpression	1		9878721	0					
ANR	9878860	ReturnType	static int		9878721	1					
ANR	9878861	Identifier	LZWPreEncode		9878721	2					
ANR	9878862	ParameterList	"TIFF * tif , uint16 s"		9878721	3					
ANR	9878863	Parameter	TIFF * tif	821:13:22607:22615	9878721	0	True				
ANR	9878864	ParameterType	TIFF *		9878721	0					
ANR	9878865	Identifier	tif		9878721	1					
ANR	9878866	Parameter	uint16 s	821:24:22618:22625	9878721	1	True				
ANR	9878867	ParameterType	uint16		9878721	0					
ANR	9878868	Identifier	s		9878721	1					
ANR	9878869	CFGEntryNode	ENTRY		9878721		True				
ANR	9878870	CFGExitNode	EXIT		9878721		True				
ANR	9878871	Symbol	* sp		9878721						
ANR	9878872	Symbol	sp -> lzw_nbits		9878721						
ANR	9878873	Symbol	sp -> lzw_maxcode		9878721						
ANR	9878874	Symbol	sp -> enc_ratio		9878721						
ANR	9878875	Symbol	sp -> enc_outcount		9878721						
ANR	9878876	Symbol	sp -> enc_hashtab		9878721						
ANR	9878877	Symbol	sp -> enc_incount		9878721						
ANR	9878878	Symbol	tif		9878721						
ANR	9878879	Symbol	MAXCODE		9878721						
ANR	9878880	Symbol	sp -> lzw_nextdata		9878721						
ANR	9878881	Symbol	sp		9878721						
ANR	9878882	Symbol	EncoderState		9878721						
ANR	9878883	Symbol	NULL		9878721						
ANR	9878884	Symbol	sp -> enc_checkpoint		9878721						
ANR	9878885	Symbol	BITS_MIN		9878721						
ANR	9878886	Symbol	sp -> lzw_free_ent		9878721						
ANR	9878887	Symbol	CHECK_GAP		9878721						
ANR	9878888	Symbol	s		9878721						
ANR	9878889	Symbol	CODE_FIRST		9878721						
ANR	9878890	Symbol	tif -> tif_rawdatasize		9878721						
ANR	9878891	Symbol	sp -> lzw_nextbits		9878721						
ANR	9878892	Symbol	sp -> enc_rawlimit		9878721						
ANR	9878893	Symbol	* tif		9878721						
ANR	9878894	Symbol	sp -> enc_oldcode		9878721						
ANR	9878895	Symbol	tif -> tif_rawdata		9878721						
ANR	9878896	Function	LZWEncode	887:0:24607:28423							
ANR	9878897	FunctionDef	"LZWEncode (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		9878896	0					
ANR	9878898	CompoundStatement		889:0:24673:28423	9878896	0					
ANR	9878899	Statement	register	890:1:24676:24683	9878896	0	True				
ANR	9878900	IdentifierDeclStatement	LZWCodecState * sp = EncoderState ( tif ) ;	890:10:24685:24722	9878896	1	True				
ANR	9878901	IdentifierDecl	* sp = EncoderState ( tif )		9878896	0					
ANR	9878902	IdentifierDeclType	LZWCodecState *		9878896	0					
ANR	9878903	Identifier	sp		9878896	1					
ANR	9878904	AssignmentExpression	* sp = EncoderState ( tif )		9878896	2		=			
ANR	9878905	Identifier	sp		9878896	0					
ANR	9878906	CallExpression	EncoderState ( tif )		9878896	1					
ANR	9878907	Callee	EncoderState		9878896	0					
ANR	9878908	Identifier	EncoderState		9878896	0					
ANR	9878909	ArgumentList	tif		9878896	1					
ANR	9878910	Argument	tif		9878896	0					
ANR	9878911	Identifier	tif		9878896	0					
ANR	9878912	Statement	register	891:1:24725:24732	9878896	2	True				
ANR	9878913	IdentifierDeclStatement	long fcode ;	891:10:24734:24744	9878896	3	True				
ANR	9878914	IdentifierDecl	fcode		9878896	0					
ANR	9878915	IdentifierDeclType	long		9878896	0					
ANR	9878916	Identifier	fcode		9878896	1					
ANR	9878917	Statement	register	892:1:24747:24754	9878896	4	True				
ANR	9878918	IdentifierDeclStatement	hash_t * hp ;	892:10:24756:24766	9878896	5	True				
ANR	9878919	IdentifierDecl	* hp		9878896	0					
ANR	9878920	IdentifierDeclType	hash_t *		9878896	0					
ANR	9878921	Identifier	hp		9878896	1					
ANR	9878922	Statement	register	893:1:24769:24776	9878896	6	True				
ANR	9878923	IdentifierDeclStatement	"int h , c ;"	893:10:24778:24786	9878896	7	True				
ANR	9878924	IdentifierDecl	h		9878896	0					
ANR	9878925	IdentifierDeclType	int		9878896	0					
ANR	9878926	Identifier	h		9878896	1					
ANR	9878927	IdentifierDecl	c		9878896	1					
ANR	9878928	IdentifierDeclType	int		9878896	0					
ANR	9878929	Identifier	c		9878896	1					
ANR	9878930	IdentifierDeclStatement	hcode_t ent ;	894:1:24789:24800	9878896	8	True				
ANR	9878931	IdentifierDecl	ent		9878896	0					
ANR	9878932	IdentifierDeclType	hcode_t		9878896	0					
ANR	9878933	Identifier	ent		9878896	1					
ANR	9878934	IdentifierDeclStatement	long disp ;	895:1:24803:24812	9878896	9	True				
ANR	9878935	IdentifierDecl	disp		9878896	0					
ANR	9878936	IdentifierDeclType	long		9878896	0					
ANR	9878937	Identifier	disp		9878896	1					
ANR	9878938	IdentifierDeclStatement	"long incount , outcount , checkpoint ;"	896:1:24815:24849	9878896	10	True				
ANR	9878939	IdentifierDecl	incount		9878896	0					
ANR	9878940	IdentifierDeclType	long		9878896	0					
ANR	9878941	Identifier	incount		9878896	1					
ANR	9878942	IdentifierDecl	outcount		9878896	1					
ANR	9878943	IdentifierDeclType	long		9878896	0					
ANR	9878944	Identifier	outcount		9878896	1					
ANR	9878945	IdentifierDecl	checkpoint		9878896	2					
ANR	9878946	IdentifierDeclType	long		9878896	0					
ANR	9878947	Identifier	checkpoint		9878896	1					
ANR	9878948	IdentifierDeclStatement	unsigned long nextdata ;	897:1:24852:24874	9878896	11	True				
ANR	9878949	IdentifierDecl	nextdata		9878896	0					
ANR	9878950	IdentifierDeclType	unsigned long		9878896	0					
ANR	9878951	Identifier	nextdata		9878896	1					
ANR	9878952	IdentifierDeclStatement	long nextbits ;	898:8:24884:24897	9878896	12	True				
ANR	9878953	IdentifierDecl	nextbits		9878896	0					
ANR	9878954	IdentifierDeclType	long		9878896	0					
ANR	9878955	Identifier	nextbits		9878896	1					
ANR	9878956	IdentifierDeclStatement	"int free_ent , maxcode , nbits ;"	899:1:24900:24928	9878896	13	True				
ANR	9878957	IdentifierDecl	free_ent		9878896	0					
ANR	9878958	IdentifierDeclType	int		9878896	0					
ANR	9878959	Identifier	free_ent		9878896	1					
ANR	9878960	IdentifierDecl	maxcode		9878896	1					
ANR	9878961	IdentifierDeclType	int		9878896	0					
ANR	9878962	Identifier	maxcode		9878896	1					
ANR	9878963	IdentifierDecl	nbits		9878896	2					
ANR	9878964	IdentifierDeclType	int		9878896	0					
ANR	9878965	Identifier	nbits		9878896	1					
ANR	9878966	IdentifierDeclStatement	uint8 * op ;	900:1:24931:24940	9878896	14	True				
ANR	9878967	IdentifierDecl	* op		9878896	0					
ANR	9878968	IdentifierDeclType	uint8 *		9878896	0					
ANR	9878969	Identifier	op		9878896	1					
ANR	9878970	IdentifierDeclStatement	uint8 * limit ;	901:1:24943:24955	9878896	15	True				
ANR	9878971	IdentifierDecl	* limit		9878896	0					
ANR	9878972	IdentifierDeclType	uint8 *		9878896	0					
ANR	9878973	Identifier	limit		9878896	1					
ANR	9878974	ExpressionStatement	( void ) s	903:1:24959:24967	9878896	16	True				
ANR	9878975	CastExpression	( void ) s		9878896	0					
ANR	9878976	CastTarget	void		9878896	0					
ANR	9878977	Identifier	s		9878896	1					
ANR	9878978	IfStatement	if ( sp == NULL )		9878896	17					
ANR	9878979	Condition	sp == NULL	904:5:24974:24983	9878896	0	True				
ANR	9878980	EqualityExpression	sp == NULL		9878896	0		==			
ANR	9878981	Identifier	sp		9878896	0					
ANR	9878982	Identifier	NULL		9878896	1					
ANR	9878983	ReturnStatement	return ( 0 ) ;	905:2:24988:24998	9878896	1	True				
ANR	9878984	PrimaryExpression	0		9878896	0					
ANR	9878985	ExpressionStatement	assert ( sp -> enc_hashtab != NULL )	907:8:25009:25040	9878896	18	True				
ANR	9878986	CallExpression	assert ( sp -> enc_hashtab != NULL )		9878896	0					
ANR	9878987	Callee	assert		9878896	0					
ANR	9878988	Identifier	assert		9878896	0					
ANR	9878989	ArgumentList	sp -> enc_hashtab != NULL		9878896	1					
ANR	9878990	Argument	sp -> enc_hashtab != NULL		9878896	0					
ANR	9878991	EqualityExpression	sp -> enc_hashtab != NULL		9878896	0		!=			
ANR	9878992	PtrMemberAccess	sp -> enc_hashtab		9878896	0					
ANR	9878993	Identifier	sp		9878896	0					
ANR	9878994	Identifier	enc_hashtab		9878896	1					
ANR	9878995	Identifier	NULL		9878896	1					
ANR	9878996	ExpressionStatement	incount = sp -> enc_incount	912:1:25075:25100	9878896	19	True				
ANR	9878997	AssignmentExpression	incount = sp -> enc_incount		9878896	0		=			
ANR	9878998	Identifier	incount		9878896	0					
ANR	9878999	PtrMemberAccess	sp -> enc_incount		9878896	1					
ANR	9879000	Identifier	sp		9878896	0					
ANR	9879001	Identifier	enc_incount		9878896	1					
ANR	9879002	ExpressionStatement	outcount = sp -> enc_outcount	913:1:25103:25130	9878896	20	True				
ANR	9879003	AssignmentExpression	outcount = sp -> enc_outcount		9878896	0		=			
ANR	9879004	Identifier	outcount		9878896	0					
ANR	9879005	PtrMemberAccess	sp -> enc_outcount		9878896	1					
ANR	9879006	Identifier	sp		9878896	0					
ANR	9879007	Identifier	enc_outcount		9878896	1					
ANR	9879008	ExpressionStatement	checkpoint = sp -> enc_checkpoint	914:1:25133:25164	9878896	21	True				
ANR	9879009	AssignmentExpression	checkpoint = sp -> enc_checkpoint		9878896	0		=			
ANR	9879010	Identifier	checkpoint		9878896	0					
ANR	9879011	PtrMemberAccess	sp -> enc_checkpoint		9878896	1					
ANR	9879012	Identifier	sp		9878896	0					
ANR	9879013	Identifier	enc_checkpoint		9878896	1					
ANR	9879014	ExpressionStatement	nextdata = sp -> lzw_nextdata	915:1:25167:25194	9878896	22	True				
ANR	9879015	AssignmentExpression	nextdata = sp -> lzw_nextdata		9878896	0		=			
ANR	9879016	Identifier	nextdata		9878896	0					
ANR	9879017	PtrMemberAccess	sp -> lzw_nextdata		9878896	1					
ANR	9879018	Identifier	sp		9878896	0					
ANR	9879019	Identifier	lzw_nextdata		9878896	1					
ANR	9879020	ExpressionStatement	nextbits = sp -> lzw_nextbits	916:1:25197:25224	9878896	23	True				
ANR	9879021	AssignmentExpression	nextbits = sp -> lzw_nextbits		9878896	0		=			
ANR	9879022	Identifier	nextbits		9878896	0					
ANR	9879023	PtrMemberAccess	sp -> lzw_nextbits		9878896	1					
ANR	9879024	Identifier	sp		9878896	0					
ANR	9879025	Identifier	lzw_nextbits		9878896	1					
ANR	9879026	ExpressionStatement	free_ent = sp -> lzw_free_ent	917:1:25227:25254	9878896	24	True				
ANR	9879027	AssignmentExpression	free_ent = sp -> lzw_free_ent		9878896	0		=			
ANR	9879028	Identifier	free_ent		9878896	0					
ANR	9879029	PtrMemberAccess	sp -> lzw_free_ent		9878896	1					
ANR	9879030	Identifier	sp		9878896	0					
ANR	9879031	Identifier	lzw_free_ent		9878896	1					
ANR	9879032	ExpressionStatement	maxcode = sp -> lzw_maxcode	918:1:25257:25282	9878896	25	True				
ANR	9879033	AssignmentExpression	maxcode = sp -> lzw_maxcode		9878896	0		=			
ANR	9879034	Identifier	maxcode		9878896	0					
ANR	9879035	PtrMemberAccess	sp -> lzw_maxcode		9878896	1					
ANR	9879036	Identifier	sp		9878896	0					
ANR	9879037	Identifier	lzw_maxcode		9878896	1					
ANR	9879038	ExpressionStatement	nbits = sp -> lzw_nbits	919:1:25285:25306	9878896	26	True				
ANR	9879039	AssignmentExpression	nbits = sp -> lzw_nbits		9878896	0		=			
ANR	9879040	Identifier	nbits		9878896	0					
ANR	9879041	PtrMemberAccess	sp -> lzw_nbits		9878896	1					
ANR	9879042	Identifier	sp		9878896	0					
ANR	9879043	Identifier	lzw_nbits		9878896	1					
ANR	9879044	ExpressionStatement	op = tif -> tif_rawcp	920:1:25309:25328	9878896	27	True				
ANR	9879045	AssignmentExpression	op = tif -> tif_rawcp		9878896	0		=			
ANR	9879046	Identifier	op		9878896	0					
ANR	9879047	PtrMemberAccess	tif -> tif_rawcp		9878896	1					
ANR	9879048	Identifier	tif		9878896	0					
ANR	9879049	Identifier	tif_rawcp		9878896	1					
ANR	9879050	ExpressionStatement	limit = sp -> enc_rawlimit	921:1:25331:25355	9878896	28	True				
ANR	9879051	AssignmentExpression	limit = sp -> enc_rawlimit		9878896	0		=			
ANR	9879052	Identifier	limit		9878896	0					
ANR	9879053	PtrMemberAccess	sp -> enc_rawlimit		9878896	1					
ANR	9879054	Identifier	sp		9878896	0					
ANR	9879055	Identifier	enc_rawlimit		9878896	1					
ANR	9879056	ExpressionStatement	ent = ( hcode_t ) sp -> enc_oldcode	922:1:25358:25388	9878896	29	True				
ANR	9879057	AssignmentExpression	ent = ( hcode_t ) sp -> enc_oldcode		9878896	0		=			
ANR	9879058	Identifier	ent		9878896	0					
ANR	9879059	CastExpression	( hcode_t ) sp -> enc_oldcode		9878896	1					
ANR	9879060	CastTarget	hcode_t		9878896	0					
ANR	9879061	PtrMemberAccess	sp -> enc_oldcode		9878896	1					
ANR	9879062	Identifier	sp		9878896	0					
ANR	9879063	Identifier	enc_oldcode		9878896	1					
ANR	9879064	IfStatement	if ( ent == ( hcode_t ) - 1 && cc > 0 )		9878896	30					
ANR	9879065	Condition	ent == ( hcode_t ) - 1 && cc > 0	924:5:25396:25424	9878896	0	True				
ANR	9879066	AndExpression	ent == ( hcode_t ) - 1 && cc > 0		9878896	0		&&			
ANR	9879067	EqualityExpression	ent == ( hcode_t ) - 1		9878896	0		==			
ANR	9879068	Identifier	ent		9878896	0					
ANR	9879069	CastExpression	( hcode_t ) - 1		9878896	1					
ANR	9879070	CastTarget	hcode_t		9878896	0					
ANR	9879071	UnaryOperationExpression	- 1		9878896	1					
ANR	9879072	UnaryOperator	-		9878896	0					
ANR	9879073	PrimaryExpression	1		9878896	1					
ANR	9879074	RelationalExpression	cc > 0		9878896	1		>			
ANR	9879075	Identifier	cc		9878896	0					
ANR	9879076	PrimaryExpression	0		9878896	1					
ANR	9879077	CompoundStatement		36:36:753:753	9878896	1					
ANR	9879078	ExpressionStatement	"PutNextCode ( op , CODE_CLEAR )"	930:2:25582:25609	9878896	0	True				
ANR	9879079	CallExpression	"PutNextCode ( op , CODE_CLEAR )"		9878896	0					
ANR	9879080	Callee	PutNextCode		9878896	0					
ANR	9879081	Identifier	PutNextCode		9878896	0					
ANR	9879082	ArgumentList	op		9878896	1					
ANR	9879083	Argument	op		9878896	0					
ANR	9879084	Identifier	op		9878896	0					
ANR	9879085	Argument	CODE_CLEAR		9878896	1					
ANR	9879086	Identifier	CODE_CLEAR		9878896	0					
ANR	9879087	ExpressionStatement	ent = * bp ++	931:2:25613:25624	9878896	1	True				
ANR	9879088	AssignmentExpression	ent = * bp ++		9878896	0		=			
ANR	9879089	Identifier	ent		9878896	0					
ANR	9879090	UnaryOperationExpression	* bp ++		9878896	1					
ANR	9879091	UnaryOperator	*		9878896	0					
ANR	9879092	PostIncDecOperationExpression	bp ++		9878896	1					
ANR	9879093	Identifier	bp		9878896	0					
ANR	9879094	IncDec	++		9878896	1					
ANR	9879095	ExpressionStatement	cc --	931:15:25626:25630	9878896	2	True				
ANR	9879096	PostIncDecOperationExpression	cc --		9878896	0					
ANR	9879097	Identifier	cc		9878896	0					
ANR	9879098	IncDec	--		9878896	1					
ANR	9879099	ExpressionStatement	incount ++	931:21:25632:25641	9878896	3	True				
ANR	9879100	PostIncDecOperationExpression	incount ++		9878896	0					
ANR	9879101	Identifier	incount		9878896	0					
ANR	9879102	IncDec	++		9878896	1					
ANR	9879103	WhileStatement	while ( cc > 0 )		9878896	31					
ANR	9879104	Condition	cc > 0	933:8:25654:25659	9878896	0	True				
ANR	9879105	RelationalExpression	cc > 0		9878896	0		>			
ANR	9879106	Identifier	cc		9878896	0					
ANR	9879107	PrimaryExpression	0		9878896	1					
ANR	9879108	CompoundStatement		45:16:988:988	9878896	1					
ANR	9879109	ExpressionStatement	c = * bp ++	934:2:25666:25675	9878896	0	True				
ANR	9879110	AssignmentExpression	c = * bp ++		9878896	0		=			
ANR	9879111	Identifier	c		9878896	0					
ANR	9879112	UnaryOperationExpression	* bp ++		9878896	1					
ANR	9879113	UnaryOperator	*		9878896	0					
ANR	9879114	PostIncDecOperationExpression	bp ++		9878896	1					
ANR	9879115	Identifier	bp		9878896	0					
ANR	9879116	IncDec	++		9878896	1					
ANR	9879117	ExpressionStatement	cc --	934:13:25677:25681	9878896	1	True				
ANR	9879118	PostIncDecOperationExpression	cc --		9878896	0					
ANR	9879119	Identifier	cc		9878896	0					
ANR	9879120	IncDec	--		9878896	1					
ANR	9879121	ExpressionStatement	incount ++	934:19:25683:25692	9878896	2	True				
ANR	9879122	PostIncDecOperationExpression	incount ++		9878896	0					
ANR	9879123	Identifier	incount		9878896	0					
ANR	9879124	IncDec	++		9878896	1					
ANR	9879125	ExpressionStatement	fcode = ( ( long ) c << BITS_MAX ) + ent	935:2:25696:25731	9878896	3	True				
ANR	9879126	AssignmentExpression	fcode = ( ( long ) c << BITS_MAX ) + ent		9878896	0		=			
ANR	9879127	Identifier	fcode		9878896	0					
ANR	9879128	AdditiveExpression	( ( long ) c << BITS_MAX ) + ent		9878896	1		+			
ANR	9879129	ShiftExpression	( long ) c << BITS_MAX		9878896	0		<<			
ANR	9879130	CastExpression	( long ) c		9878896	0					
ANR	9879131	CastTarget	long		9878896	0					
ANR	9879132	Identifier	c		9878896	1					
ANR	9879133	Identifier	BITS_MAX		9878896	1					
ANR	9879134	Identifier	ent		9878896	1					
ANR	9879135	ExpressionStatement	h = ( c << HSHIFT ) ^ ent	936:2:25735:25758	9878896	4	True				
ANR	9879136	AssignmentExpression	h = ( c << HSHIFT ) ^ ent		9878896	0		=			
ANR	9879137	Identifier	h		9878896	0					
ANR	9879138	ExclusiveOrExpression	( c << HSHIFT ) ^ ent		9878896	1		^			
ANR	9879139	ShiftExpression	c << HSHIFT		9878896	0		<<			
ANR	9879140	Identifier	c		9878896	0					
ANR	9879141	Identifier	HSHIFT		9878896	1					
ANR	9879142	Identifier	ent		9878896	1					
ANR	9879143	IfStatement	if ( h >= HSIZE )		9878896	5					
ANR	9879144	Condition	h >= HSIZE	941:6:25850:25859	9878896	0	True				
ANR	9879145	RelationalExpression	h >= HSIZE		9878896	0		>=			
ANR	9879146	Identifier	h		9878896	0					
ANR	9879147	Identifier	HSIZE		9878896	1					
ANR	9879148	ExpressionStatement	h -= HSIZE	942:3:25865:25875	9878896	1	True				
ANR	9879149	AssignmentExpression	h -= HSIZE		9878896	0		-=			
ANR	9879150	Identifier	h		9878896	0					
ANR	9879151	Identifier	HSIZE		9878896	1					
ANR	9879152	ExpressionStatement	hp = & sp -> enc_hashtab [ h ]	944:2:25886:25910	9878896	6	True				
ANR	9879153	AssignmentExpression	hp = & sp -> enc_hashtab [ h ]		9878896	0		=			
ANR	9879154	Identifier	hp		9878896	0					
ANR	9879155	UnaryOperationExpression	& sp -> enc_hashtab [ h ]		9878896	1					
ANR	9879156	UnaryOperator	&		9878896	0					
ANR	9879157	ArrayIndexing	sp -> enc_hashtab [ h ]		9878896	1					
ANR	9879158	PtrMemberAccess	sp -> enc_hashtab		9878896	0					
ANR	9879159	Identifier	sp		9878896	0					
ANR	9879160	Identifier	enc_hashtab		9878896	1					
ANR	9879161	Identifier	h		9878896	1					
ANR	9879162	IfStatement	if ( hp -> hash == fcode )		9878896	7					
ANR	9879163	Condition	hp -> hash == fcode	945:6:25918:25934	9878896	0	True				
ANR	9879164	EqualityExpression	hp -> hash == fcode		9878896	0		==			
ANR	9879165	PtrMemberAccess	hp -> hash		9878896	0					
ANR	9879166	Identifier	hp		9878896	0					
ANR	9879167	Identifier	hash		9878896	1					
ANR	9879168	Identifier	fcode		9878896	1					
ANR	9879169	CompoundStatement		57:25:1263:1263	9878896	1					
ANR	9879170	ExpressionStatement	ent = hp -> code	946:3:25942:25956	9878896	0	True				
ANR	9879171	AssignmentExpression	ent = hp -> code		9878896	0		=			
ANR	9879172	Identifier	ent		9878896	0					
ANR	9879173	PtrMemberAccess	hp -> code		9878896	1					
ANR	9879174	Identifier	hp		9878896	0					
ANR	9879175	Identifier	code		9878896	1					
ANR	9879176	ContinueStatement	continue ;	947:3:25961:25969	9878896	1	True				
ANR	9879177	IfStatement	if ( hp -> hash >= 0 )		9878896	8					
ANR	9879178	Condition	hp -> hash >= 0	949:6:25981:25993	9878896	0	True				
ANR	9879179	RelationalExpression	hp -> hash >= 0		9878896	0		>=			
ANR	9879180	PtrMemberAccess	hp -> hash		9878896	0					
ANR	9879181	Identifier	hp		9878896	0					
ANR	9879182	Identifier	hash		9878896	1					
ANR	9879183	PrimaryExpression	0		9878896	1					
ANR	9879184	CompoundStatement		61:21:1322:1322	9878896	1					
ANR	9879185	ExpressionStatement	disp = HSIZE - h	953:3:26063:26079	9878896	0	True				
ANR	9879186	AssignmentExpression	disp = HSIZE - h		9878896	0		=			
ANR	9879187	Identifier	disp		9878896	0					
ANR	9879188	AdditiveExpression	HSIZE - h		9878896	1		-			
ANR	9879189	Identifier	HSIZE		9878896	0					
ANR	9879190	Identifier	h		9878896	1					
ANR	9879191	IfStatement	if ( h == 0 )		9878896	1					
ANR	9879192	Condition	h == 0	954:7:26088:26093	9878896	0	True				
ANR	9879193	EqualityExpression	h == 0		9878896	0		==			
ANR	9879194	Identifier	h		9878896	0					
ANR	9879195	PrimaryExpression	0		9878896	1					
ANR	9879196	ExpressionStatement	disp = 1	955:4:26100:26108	9878896	1	True				
ANR	9879197	AssignmentExpression	disp = 1		9878896	0		=			
ANR	9879198	Identifier	disp		9878896	0					
ANR	9879199	PrimaryExpression	1		9878896	1					
ANR	9879200	DoStatement	do		9878896	2					
ANR	9879201	CompoundStatement		68:6:1442:1442	9878896	0					
ANR	9879202	IfStatement	if ( ( h -= disp ) < 0 )		9878896	0					
ANR	9879203	Condition	( h -= disp ) < 0	961:8:26226:26240	9878896	0	True				
ANR	9879204	RelationalExpression	( h -= disp ) < 0		9878896	0		<			
ANR	9879205	AssignmentExpression	h -= disp		9878896	0		-=			
ANR	9879206	Identifier	h		9878896	0					
ANR	9879207	Identifier	disp		9878896	1					
ANR	9879208	PrimaryExpression	0		9878896	1					
ANR	9879209	ExpressionStatement	h += HSIZE	962:5:26248:26258	9878896	1	True				
ANR	9879210	AssignmentExpression	h += HSIZE		9878896	0		+=			
ANR	9879211	Identifier	h		9878896	0					
ANR	9879212	Identifier	HSIZE		9878896	1					
ANR	9879213	ExpressionStatement	hp = & sp -> enc_hashtab [ h ]	963:4:26264:26288	9878896	1	True				
ANR	9879214	AssignmentExpression	hp = & sp -> enc_hashtab [ h ]		9878896	0		=			
ANR	9879215	Identifier	hp		9878896	0					
ANR	9879216	UnaryOperationExpression	& sp -> enc_hashtab [ h ]		9878896	1					
ANR	9879217	UnaryOperator	&		9878896	0					
ANR	9879218	ArrayIndexing	sp -> enc_hashtab [ h ]		9878896	1					
ANR	9879219	PtrMemberAccess	sp -> enc_hashtab		9878896	0					
ANR	9879220	Identifier	sp		9878896	0					
ANR	9879221	Identifier	enc_hashtab		9878896	1					
ANR	9879222	Identifier	h		9878896	1					
ANR	9879223	IfStatement	if ( hp -> hash == fcode )		9878896	2					
ANR	9879224	Condition	hp -> hash == fcode	964:8:26298:26314	9878896	0	True				
ANR	9879225	EqualityExpression	hp -> hash == fcode		9878896	0		==			
ANR	9879226	PtrMemberAccess	hp -> hash		9878896	0					
ANR	9879227	Identifier	hp		9878896	0					
ANR	9879228	Identifier	hash		9878896	1					
ANR	9879229	Identifier	fcode		9878896	1					
ANR	9879230	CompoundStatement		76:27:1643:1643	9878896	1					
ANR	9879231	ExpressionStatement	ent = hp -> code	965:5:26324:26338	9878896	0	True				
ANR	9879232	AssignmentExpression	ent = hp -> code		9878896	0		=			
ANR	9879233	Identifier	ent		9878896	0					
ANR	9879234	PtrMemberAccess	hp -> code		9878896	1					
ANR	9879235	Identifier	hp		9878896	0					
ANR	9879236	Identifier	code		9878896	1					
ANR	9879237	GotoStatement	goto hit ;	966:5:26345:26353	9878896	1	True				
ANR	9879238	Identifier	hit		9878896	0					
ANR	9879239	Condition	hp -> hash >= 0	968:12:26373:26385	9878896	1	True				
ANR	9879240	RelationalExpression	hp -> hash >= 0		9878896	0		>=			
ANR	9879241	PtrMemberAccess	hp -> hash		9878896	0					
ANR	9879242	Identifier	hp		9878896	0					
ANR	9879243	Identifier	hash		9878896	1					
ANR	9879244	PrimaryExpression	0		9878896	1					
ANR	9879245	IfStatement	if ( op > limit )		9878896	9					
ANR	9879246	Condition	op > limit	979:6:26680:26689	9878896	0	True				
ANR	9879247	RelationalExpression	op > limit		9878896	0		>			
ANR	9879248	Identifier	op		9878896	0					
ANR	9879249	Identifier	limit		9878896	1					
ANR	9879250	CompoundStatement		91:18:2018:2018	9878896	1					
ANR	9879251	ExpressionStatement	tif -> tif_rawcc = ( tmsize_t ) ( op - tif -> tif_rawdata )	980:3:26697:26747	9878896	0	True				
ANR	9879252	AssignmentExpression	tif -> tif_rawcc = ( tmsize_t ) ( op - tif -> tif_rawdata )		9878896	0		=			
ANR	9879253	PtrMemberAccess	tif -> tif_rawcc		9878896	0					
ANR	9879254	Identifier	tif		9878896	0					
ANR	9879255	Identifier	tif_rawcc		9878896	1					
ANR	9879256	CastExpression	( tmsize_t ) ( op - tif -> tif_rawdata )		9878896	1					
ANR	9879257	CastTarget	tmsize_t		9878896	0					
ANR	9879258	AdditiveExpression	op - tif -> tif_rawdata		9878896	1		-			
ANR	9879259	Identifier	op		9878896	0					
ANR	9879260	PtrMemberAccess	tif -> tif_rawdata		9878896	1					
ANR	9879261	Identifier	tif		9878896	0					
ANR	9879262	Identifier	tif_rawdata		9878896	1					
ANR	9879263	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		9878896	1					
ANR	9879264	Condition	! TIFFFlushData1 ( tif )	981:7:26756:26775	9878896	0	True				
ANR	9879265	UnaryOperationExpression	! TIFFFlushData1 ( tif )		9878896	0					
ANR	9879266	UnaryOperator	!		9878896	0					
ANR	9879267	CallExpression	TIFFFlushData1 ( tif )		9878896	1					
ANR	9879268	Callee	TIFFFlushData1		9878896	0					
ANR	9879269	Identifier	TIFFFlushData1		9878896	0					
ANR	9879270	ArgumentList	tif		9878896	1					
ANR	9879271	Argument	tif		9878896	0					
ANR	9879272	Identifier	tif		9878896	0					
ANR	9879273	ReturnStatement	return 0 ;	982:28:26807:26815	9878896	1	True				
ANR	9879274	PrimaryExpression	0		9878896	0					
ANR	9879275	ExpressionStatement	op = tif -> tif_rawdata	983:3:26820:26841	9878896	2	True				
ANR	9879276	AssignmentExpression	op = tif -> tif_rawdata		9878896	0		=			
ANR	9879277	Identifier	op		9878896	0					
ANR	9879278	PtrMemberAccess	tif -> tif_rawdata		9878896	1					
ANR	9879279	Identifier	tif		9878896	0					
ANR	9879280	Identifier	tif_rawdata		9878896	1					
ANR	9879281	ExpressionStatement	"PutNextCode ( op , ent )"	985:2:26849:26869	9878896	10	True				
ANR	9879282	CallExpression	"PutNextCode ( op , ent )"		9878896	0					
ANR	9879283	Callee	PutNextCode		9878896	0					
ANR	9879284	Identifier	PutNextCode		9878896	0					
ANR	9879285	ArgumentList	op		9878896	1					
ANR	9879286	Argument	op		9878896	0					
ANR	9879287	Identifier	op		9878896	0					
ANR	9879288	Argument	ent		9878896	1					
ANR	9879289	Identifier	ent		9878896	0					
ANR	9879290	ExpressionStatement	ent = ( hcode_t ) c	986:2:26873:26889	9878896	11	True				
ANR	9879291	AssignmentExpression	ent = ( hcode_t ) c		9878896	0		=			
ANR	9879292	Identifier	ent		9878896	0					
ANR	9879293	CastExpression	( hcode_t ) c		9878896	1					
ANR	9879294	CastTarget	hcode_t		9878896	0					
ANR	9879295	Identifier	c		9878896	1					
ANR	9879296	ExpressionStatement	hp -> code = ( hcode_t ) ( free_ent ++ )	987:2:26893:26925	9878896	12	True				
ANR	9879297	AssignmentExpression	hp -> code = ( hcode_t ) ( free_ent ++ )		9878896	0		=			
ANR	9879298	PtrMemberAccess	hp -> code		9878896	0					
ANR	9879299	Identifier	hp		9878896	0					
ANR	9879300	Identifier	code		9878896	1					
ANR	9879301	CastExpression	( hcode_t ) ( free_ent ++ )		9878896	1					
ANR	9879302	CastTarget	hcode_t		9878896	0					
ANR	9879303	PostIncDecOperationExpression	free_ent ++		9878896	1					
ANR	9879304	Identifier	free_ent		9878896	0					
ANR	9879305	IncDec	++		9878896	1					
ANR	9879306	ExpressionStatement	hp -> hash = fcode	988:2:26929:26945	9878896	13	True				
ANR	9879307	AssignmentExpression	hp -> hash = fcode		9878896	0		=			
ANR	9879308	PtrMemberAccess	hp -> hash		9878896	0					
ANR	9879309	Identifier	hp		9878896	0					
ANR	9879310	Identifier	hash		9878896	1					
ANR	9879311	Identifier	fcode		9878896	1					
ANR	9879312	IfStatement	if ( free_ent == CODE_MAX - 1 )		9878896	14					
ANR	9879313	Condition	free_ent == CODE_MAX - 1	989:6:26953:26974	9878896	0	True				
ANR	9879314	EqualityExpression	free_ent == CODE_MAX - 1		9878896	0		==			
ANR	9879315	Identifier	free_ent		9878896	0					
ANR	9879316	AdditiveExpression	CODE_MAX - 1		9878896	1		-			
ANR	9879317	Identifier	CODE_MAX		9878896	0					
ANR	9879318	PrimaryExpression	1		9878896	1					
ANR	9879319	CompoundStatement		101:30:2303:2303	9878896	1					
ANR	9879320	ExpressionStatement	cl_hash ( sp )	991:3:27032:27043	9878896	0	True				
ANR	9879321	CallExpression	cl_hash ( sp )		9878896	0					
ANR	9879322	Callee	cl_hash		9878896	0					
ANR	9879323	Identifier	cl_hash		9878896	0					
ANR	9879324	ArgumentList	sp		9878896	1					
ANR	9879325	Argument	sp		9878896	0					
ANR	9879326	Identifier	sp		9878896	0					
ANR	9879327	ExpressionStatement	sp -> enc_ratio = 0	992:3:27048:27065	9878896	1	True				
ANR	9879328	AssignmentExpression	sp -> enc_ratio = 0		9878896	0		=			
ANR	9879329	PtrMemberAccess	sp -> enc_ratio		9878896	0					
ANR	9879330	Identifier	sp		9878896	0					
ANR	9879331	Identifier	enc_ratio		9878896	1					
ANR	9879332	PrimaryExpression	0		9878896	1					
ANR	9879333	ExpressionStatement	incount = 0	993:3:27070:27081	9878896	2	True				
ANR	9879334	AssignmentExpression	incount = 0		9878896	0		=			
ANR	9879335	Identifier	incount		9878896	0					
ANR	9879336	PrimaryExpression	0		9878896	1					
ANR	9879337	ExpressionStatement	outcount = 0	994:3:27086:27098	9878896	3	True				
ANR	9879338	AssignmentExpression	outcount = 0		9878896	0		=			
ANR	9879339	Identifier	outcount		9878896	0					
ANR	9879340	PrimaryExpression	0		9878896	1					
ANR	9879341	ExpressionStatement	free_ent = CODE_FIRST	995:3:27103:27124	9878896	4	True				
ANR	9879342	AssignmentExpression	free_ent = CODE_FIRST		9878896	0		=			
ANR	9879343	Identifier	free_ent		9878896	0					
ANR	9879344	Identifier	CODE_FIRST		9878896	1					
ANR	9879345	ExpressionStatement	"PutNextCode ( op , CODE_CLEAR )"	996:3:27129:27156	9878896	5	True				
ANR	9879346	CallExpression	"PutNextCode ( op , CODE_CLEAR )"		9878896	0					
ANR	9879347	Callee	PutNextCode		9878896	0					
ANR	9879348	Identifier	PutNextCode		9878896	0					
ANR	9879349	ArgumentList	op		9878896	1					
ANR	9879350	Argument	op		9878896	0					
ANR	9879351	Identifier	op		9878896	0					
ANR	9879352	Argument	CODE_CLEAR		9878896	1					
ANR	9879353	Identifier	CODE_CLEAR		9878896	0					
ANR	9879354	ExpressionStatement	nbits = BITS_MIN	997:3:27161:27177	9878896	6	True				
ANR	9879355	AssignmentExpression	nbits = BITS_MIN		9878896	0		=			
ANR	9879356	Identifier	nbits		9878896	0					
ANR	9879357	Identifier	BITS_MIN		9878896	1					
ANR	9879358	ExpressionStatement	maxcode = MAXCODE ( BITS_MIN )	998:3:27182:27209	9878896	7	True				
ANR	9879359	AssignmentExpression	maxcode = MAXCODE ( BITS_MIN )		9878896	0		=			
ANR	9879360	Identifier	maxcode		9878896	0					
ANR	9879361	CallExpression	MAXCODE ( BITS_MIN )		9878896	1					
ANR	9879362	Callee	MAXCODE		9878896	0					
ANR	9879363	Identifier	MAXCODE		9878896	0					
ANR	9879364	ArgumentList	BITS_MIN		9878896	1					
ANR	9879365	Argument	BITS_MIN		9878896	0					
ANR	9879366	Identifier	BITS_MIN		9878896	0					
ANR	9879367	ElseStatement	else		9878896	0					
ANR	9879368	CompoundStatement		111:9:2546:2546	9878896	0					
ANR	9879369	IfStatement	if ( free_ent > maxcode )		9878896	0					
ANR	9879370	Condition	free_ent > maxcode	1004:7:27345:27362	9878896	0	True				
ANR	9879371	RelationalExpression	free_ent > maxcode		9878896	0		>			
ANR	9879372	Identifier	free_ent		9878896	0					
ANR	9879373	Identifier	maxcode		9878896	1					
ANR	9879374	CompoundStatement		116:27:2691:2691	9878896	1					
ANR	9879375	ExpressionStatement	nbits ++	1005:4:27371:27378	9878896	0	True				
ANR	9879376	PostIncDecOperationExpression	nbits ++		9878896	0					
ANR	9879377	Identifier	nbits		9878896	0					
ANR	9879378	IncDec	++		9878896	1					
ANR	9879379	ExpressionStatement	assert ( nbits <= BITS_MAX )	1006:4:27384:27409	9878896	1	True				
ANR	9879380	CallExpression	assert ( nbits <= BITS_MAX )		9878896	0					
ANR	9879381	Callee	assert		9878896	0					
ANR	9879382	Identifier	assert		9878896	0					
ANR	9879383	ArgumentList	nbits <= BITS_MAX		9878896	1					
ANR	9879384	Argument	nbits <= BITS_MAX		9878896	0					
ANR	9879385	RelationalExpression	nbits <= BITS_MAX		9878896	0		<=			
ANR	9879386	Identifier	nbits		9878896	0					
ANR	9879387	Identifier	BITS_MAX		9878896	1					
ANR	9879388	ExpressionStatement	maxcode = ( int ) MAXCODE ( nbits )	1007:4:27415:27445	9878896	2	True				
ANR	9879389	AssignmentExpression	maxcode = ( int ) MAXCODE ( nbits )		9878896	0		=			
ANR	9879390	Identifier	maxcode		9878896	0					
ANR	9879391	CastExpression	( int ) MAXCODE ( nbits )		9878896	1					
ANR	9879392	CastTarget	int		9878896	0					
ANR	9879393	CallExpression	MAXCODE ( nbits )		9878896	1					
ANR	9879394	Callee	MAXCODE		9878896	0					
ANR	9879395	Identifier	MAXCODE		9878896	0					
ANR	9879396	ArgumentList	nbits		9878896	1					
ANR	9879397	Argument	nbits		9878896	0					
ANR	9879398	Identifier	nbits		9878896	0					
ANR	9879399	ElseStatement	else		9878896	0					
ANR	9879400	IfStatement	if ( incount >= checkpoint )		9878896	0					
ANR	9879401	Condition	incount >= checkpoint	1008:14:27461:27481	9878896	0	True				
ANR	9879402	RelationalExpression	incount >= checkpoint		9878896	0		>=			
ANR	9879403	Identifier	incount		9878896	0					
ANR	9879404	Identifier	checkpoint		9878896	1					
ANR	9879405	CompoundStatement		121:4:2816:2824	9878896	1					
ANR	9879406	IdentifierDeclStatement	long rat ;	1009:4:27490:27498	9878896	0	True				
ANR	9879407	IdentifierDecl	rat		9878896	0					
ANR	9879408	IdentifierDeclType	long		9878896	0					
ANR	9879409	Identifier	rat		9878896	1					
ANR	9879410	ExpressionStatement	checkpoint = incount + CHECK_GAP	1016:4:27701:27731	9878896	1	True				
ANR	9879411	AssignmentExpression	checkpoint = incount + CHECK_GAP		9878896	0		=			
ANR	9879412	Identifier	checkpoint		9878896	0					
ANR	9879413	AdditiveExpression	incount + CHECK_GAP		9878896	1		+			
ANR	9879414	Identifier	incount		9878896	0					
ANR	9879415	Identifier	CHECK_GAP		9878896	1					
ANR	9879416	ExpressionStatement	"CALCRATIO ( sp , rat )"	1017:4:27737:27755	9878896	2	True				
ANR	9879417	CallExpression	"CALCRATIO ( sp , rat )"		9878896	0					
ANR	9879418	Callee	CALCRATIO		9878896	0					
ANR	9879419	Identifier	CALCRATIO		9878896	0					
ANR	9879420	ArgumentList	sp		9878896	1					
ANR	9879421	Argument	sp		9878896	0					
ANR	9879422	Identifier	sp		9878896	0					
ANR	9879423	Argument	rat		9878896	1					
ANR	9879424	Identifier	rat		9878896	0					
ANR	9879425	IfStatement	if ( rat <= sp -> enc_ratio )		9878896	3					
ANR	9879426	Condition	rat <= sp -> enc_ratio	1018:8:27765:27784	9878896	0	True				
ANR	9879427	RelationalExpression	rat <= sp -> enc_ratio		9878896	0		<=			
ANR	9879428	Identifier	rat		9878896	0					
ANR	9879429	PtrMemberAccess	sp -> enc_ratio		9878896	1					
ANR	9879430	Identifier	sp		9878896	0					
ANR	9879431	Identifier	enc_ratio		9878896	1					
ANR	9879432	CompoundStatement		130:30:3113:3113	9878896	1					
ANR	9879433	ExpressionStatement	cl_hash ( sp )	1019:5:27794:27805	9878896	0	True				
ANR	9879434	CallExpression	cl_hash ( sp )		9878896	0					
ANR	9879435	Callee	cl_hash		9878896	0					
ANR	9879436	Identifier	cl_hash		9878896	0					
ANR	9879437	ArgumentList	sp		9878896	1					
ANR	9879438	Argument	sp		9878896	0					
ANR	9879439	Identifier	sp		9878896	0					
ANR	9879440	ExpressionStatement	sp -> enc_ratio = 0	1020:5:27812:27829	9878896	1	True				
ANR	9879441	AssignmentExpression	sp -> enc_ratio = 0		9878896	0		=			
ANR	9879442	PtrMemberAccess	sp -> enc_ratio		9878896	0					
ANR	9879443	Identifier	sp		9878896	0					
ANR	9879444	Identifier	enc_ratio		9878896	1					
ANR	9879445	PrimaryExpression	0		9878896	1					
ANR	9879446	ExpressionStatement	incount = 0	1021:5:27836:27847	9878896	2	True				
ANR	9879447	AssignmentExpression	incount = 0		9878896	0		=			
ANR	9879448	Identifier	incount		9878896	0					
ANR	9879449	PrimaryExpression	0		9878896	1					
ANR	9879450	ExpressionStatement	outcount = 0	1022:5:27854:27866	9878896	3	True				
ANR	9879451	AssignmentExpression	outcount = 0		9878896	0		=			
ANR	9879452	Identifier	outcount		9878896	0					
ANR	9879453	PrimaryExpression	0		9878896	1					
ANR	9879454	ExpressionStatement	free_ent = CODE_FIRST	1023:5:27873:27894	9878896	4	True				
ANR	9879455	AssignmentExpression	free_ent = CODE_FIRST		9878896	0		=			
ANR	9879456	Identifier	free_ent		9878896	0					
ANR	9879457	Identifier	CODE_FIRST		9878896	1					
ANR	9879458	ExpressionStatement	"PutNextCode ( op , CODE_CLEAR )"	1024:5:27901:27928	9878896	5	True				
ANR	9879459	CallExpression	"PutNextCode ( op , CODE_CLEAR )"		9878896	0					
ANR	9879460	Callee	PutNextCode		9878896	0					
ANR	9879461	Identifier	PutNextCode		9878896	0					
ANR	9879462	ArgumentList	op		9878896	1					
ANR	9879463	Argument	op		9878896	0					
ANR	9879464	Identifier	op		9878896	0					
ANR	9879465	Argument	CODE_CLEAR		9878896	1					
ANR	9879466	Identifier	CODE_CLEAR		9878896	0					
ANR	9879467	ExpressionStatement	nbits = BITS_MIN	1025:5:27935:27951	9878896	6	True				
ANR	9879468	AssignmentExpression	nbits = BITS_MIN		9878896	0		=			
ANR	9879469	Identifier	nbits		9878896	0					
ANR	9879470	Identifier	BITS_MIN		9878896	1					
ANR	9879471	ExpressionStatement	maxcode = MAXCODE ( BITS_MIN )	1026:5:27958:27985	9878896	7	True				
ANR	9879472	AssignmentExpression	maxcode = MAXCODE ( BITS_MIN )		9878896	0		=			
ANR	9879473	Identifier	maxcode		9878896	0					
ANR	9879474	CallExpression	MAXCODE ( BITS_MIN )		9878896	1					
ANR	9879475	Callee	MAXCODE		9878896	0					
ANR	9879476	Identifier	MAXCODE		9878896	0					
ANR	9879477	ArgumentList	BITS_MIN		9878896	1					
ANR	9879478	Argument	BITS_MIN		9878896	0					
ANR	9879479	Identifier	BITS_MIN		9878896	0					
ANR	9879480	ElseStatement	else		9878896	0					
ANR	9879481	ExpressionStatement	sp -> enc_ratio = rat	1028:5:28003:28022	9878896	0	True				
ANR	9879482	AssignmentExpression	sp -> enc_ratio = rat		9878896	0		=			
ANR	9879483	PtrMemberAccess	sp -> enc_ratio		9878896	0					
ANR	9879484	Identifier	sp		9878896	0					
ANR	9879485	Identifier	enc_ratio		9878896	1					
ANR	9879486	Identifier	rat		9878896	1					
ANR	9879487	Label	hit :	1031:1:28034:28037	9878896	15	True				
ANR	9879488	Identifier	hit		9878896	0					
ANR	9879489	ExpressionStatement		1032:2:28041:28041	9878896	16	True				
ANR	9879490	ExpressionStatement	sp -> enc_incount = incount	1038:1:28083:28108	9878896	32	True				
ANR	9879491	AssignmentExpression	sp -> enc_incount = incount		9878896	0		=			
ANR	9879492	PtrMemberAccess	sp -> enc_incount		9878896	0					
ANR	9879493	Identifier	sp		9878896	0					
ANR	9879494	Identifier	enc_incount		9878896	1					
ANR	9879495	Identifier	incount		9878896	1					
ANR	9879496	ExpressionStatement	sp -> enc_outcount = outcount	1039:1:28111:28138	9878896	33	True				
ANR	9879497	AssignmentExpression	sp -> enc_outcount = outcount		9878896	0		=			
ANR	9879498	PtrMemberAccess	sp -> enc_outcount		9878896	0					
ANR	9879499	Identifier	sp		9878896	0					
ANR	9879500	Identifier	enc_outcount		9878896	1					
ANR	9879501	Identifier	outcount		9878896	1					
ANR	9879502	ExpressionStatement	sp -> enc_checkpoint = checkpoint	1040:1:28141:28172	9878896	34	True				
ANR	9879503	AssignmentExpression	sp -> enc_checkpoint = checkpoint		9878896	0		=			
ANR	9879504	PtrMemberAccess	sp -> enc_checkpoint		9878896	0					
ANR	9879505	Identifier	sp		9878896	0					
ANR	9879506	Identifier	enc_checkpoint		9878896	1					
ANR	9879507	Identifier	checkpoint		9878896	1					
ANR	9879508	ExpressionStatement	sp -> enc_oldcode = ent	1041:1:28175:28196	9878896	35	True				
ANR	9879509	AssignmentExpression	sp -> enc_oldcode = ent		9878896	0		=			
ANR	9879510	PtrMemberAccess	sp -> enc_oldcode		9878896	0					
ANR	9879511	Identifier	sp		9878896	0					
ANR	9879512	Identifier	enc_oldcode		9878896	1					
ANR	9879513	Identifier	ent		9878896	1					
ANR	9879514	ExpressionStatement	sp -> lzw_nextdata = nextdata	1042:1:28199:28226	9878896	36	True				
ANR	9879515	AssignmentExpression	sp -> lzw_nextdata = nextdata		9878896	0		=			
ANR	9879516	PtrMemberAccess	sp -> lzw_nextdata		9878896	0					
ANR	9879517	Identifier	sp		9878896	0					
ANR	9879518	Identifier	lzw_nextdata		9878896	1					
ANR	9879519	Identifier	nextdata		9878896	1					
ANR	9879520	ExpressionStatement	sp -> lzw_nextbits = nextbits	1043:1:28229:28256	9878896	37	True				
ANR	9879521	AssignmentExpression	sp -> lzw_nextbits = nextbits		9878896	0		=			
ANR	9879522	PtrMemberAccess	sp -> lzw_nextbits		9878896	0					
ANR	9879523	Identifier	sp		9878896	0					
ANR	9879524	Identifier	lzw_nextbits		9878896	1					
ANR	9879525	Identifier	nextbits		9878896	1					
ANR	9879526	ExpressionStatement	sp -> lzw_free_ent = ( unsigned short ) free_ent	1044:1:28259:28302	9878896	38	True				
ANR	9879527	AssignmentExpression	sp -> lzw_free_ent = ( unsigned short ) free_ent		9878896	0		=			
ANR	9879528	PtrMemberAccess	sp -> lzw_free_ent		9878896	0					
ANR	9879529	Identifier	sp		9878896	0					
ANR	9879530	Identifier	lzw_free_ent		9878896	1					
ANR	9879531	CastExpression	( unsigned short ) free_ent		9878896	1					
ANR	9879532	CastTarget	unsigned short		9878896	0					
ANR	9879533	Identifier	free_ent		9878896	1					
ANR	9879534	ExpressionStatement	sp -> lzw_maxcode = ( unsigned short ) maxcode	1045:1:28305:28346	9878896	39	True				
ANR	9879535	AssignmentExpression	sp -> lzw_maxcode = ( unsigned short ) maxcode		9878896	0		=			
ANR	9879536	PtrMemberAccess	sp -> lzw_maxcode		9878896	0					
ANR	9879537	Identifier	sp		9878896	0					
ANR	9879538	Identifier	lzw_maxcode		9878896	1					
ANR	9879539	CastExpression	( unsigned short ) maxcode		9878896	1					
ANR	9879540	CastTarget	unsigned short		9878896	0					
ANR	9879541	Identifier	maxcode		9878896	1					
ANR	9879542	ExpressionStatement	sp -> lzw_nbits = ( unsigned short ) nbits	1046:1:28349:28386	9878896	40	True				
ANR	9879543	AssignmentExpression	sp -> lzw_nbits = ( unsigned short ) nbits		9878896	0		=			
ANR	9879544	PtrMemberAccess	sp -> lzw_nbits		9878896	0					
ANR	9879545	Identifier	sp		9878896	0					
ANR	9879546	Identifier	lzw_nbits		9878896	1					
ANR	9879547	CastExpression	( unsigned short ) nbits		9878896	1					
ANR	9879548	CastTarget	unsigned short		9878896	0					
ANR	9879549	Identifier	nbits		9878896	1					
ANR	9879550	ExpressionStatement	tif -> tif_rawcp = op	1047:1:28389:28408	9878896	41	True				
ANR	9879551	AssignmentExpression	tif -> tif_rawcp = op		9878896	0		=			
ANR	9879552	PtrMemberAccess	tif -> tif_rawcp		9878896	0					
ANR	9879553	Identifier	tif		9878896	0					
ANR	9879554	Identifier	tif_rawcp		9878896	1					
ANR	9879555	Identifier	op		9878896	1					
ANR	9879556	ReturnStatement	return ( 1 ) ;	1048:1:28411:28421	9878896	42	True				
ANR	9879557	PrimaryExpression	1		9878896	0					
ANR	9879558	ReturnType	static int		9878896	1					
ANR	9879559	Identifier	LZWEncode		9878896	2					
ANR	9879560	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		9878896	3					
ANR	9879561	Parameter	TIFF * tif	888:10:24628:24636	9878896	0	True				
ANR	9879562	ParameterType	TIFF *		9878896	0					
ANR	9879563	Identifier	tif		9878896	1					
ANR	9879564	Parameter	uint8 * bp	888:21:24639:24647	9878896	1	True				
ANR	9879565	ParameterType	uint8 *		9878896	0					
ANR	9879566	Identifier	bp		9878896	1					
ANR	9879567	Parameter	tmsize_t cc	888:32:24650:24660	9878896	2	True				
ANR	9879568	ParameterType	tmsize_t		9878896	0					
ANR	9879569	Identifier	cc		9878896	1					
ANR	9879570	Parameter	uint16 s	888:45:24663:24670	9878896	3	True				
ANR	9879571	ParameterType	uint16		9878896	0					
ANR	9879572	Identifier	s		9878896	1					
ANR	9879573	CFGEntryNode	ENTRY		9878896		True				
ANR	9879574	CFGExitNode	EXIT		9878896		True				
ANR	9879575	Symbol	checkpoint		9878896						
ANR	9879576	Symbol	* sp		9878896						
ANR	9879577	Symbol	* bp ++		9878896						
ANR	9879578	Symbol	sp -> enc_ratio		9878896						
ANR	9879579	Symbol	maxcode		9878896						
ANR	9879580	Symbol	hp		9878896						
ANR	9879581	Symbol	HSHIFT		9878896						
ANR	9879582	Symbol	disp		9878896						
ANR	9879583	Symbol	CODE_MAX		9878896						
ANR	9879584	Symbol	tif		9878896						
ANR	9879585	Symbol	tif -> tif_rawcc		9878896						
ANR	9879586	Symbol	MAXCODE		9878896						
ANR	9879587	Symbol	nextbits		9878896						
ANR	9879588	Symbol	TIFFFlushData1		9878896						
ANR	9879589	Symbol	limit		9878896						
ANR	9879590	Symbol	sp -> lzw_nextdata		9878896						
ANR	9879591	Symbol	fcode		9878896						
ANR	9879592	Symbol	EncoderState		9878896						
ANR	9879593	Symbol	hp -> hash		9878896						
ANR	9879594	Symbol	NULL		9878896						
ANR	9879595	Symbol	rat		9878896						
ANR	9879596	Symbol	sp -> enc_checkpoint		9878896						
ANR	9879597	Symbol	tif -> tif_rawcp		9878896						
ANR	9879598	Symbol	* hp		9878896						
ANR	9879599	Symbol	sp -> lzw_free_ent		9878896						
ANR	9879600	Symbol	BITS_MIN		9878896						
ANR	9879601	Symbol	CHECK_GAP		9878896						
ANR	9879602	Symbol	sp -> lzw_nextbits		9878896						
ANR	9879603	Symbol	sp -> enc_rawlimit		9878896						
ANR	9879604	Symbol	tif -> tif_rawdata		9878896						
ANR	9879605	Symbol	incount		9878896						
ANR	9879606	Symbol	BITS_MAX		9878896						
ANR	9879607	Symbol	sp -> lzw_nbits		9878896						
ANR	9879608	Symbol	sp -> lzw_maxcode		9878896						
ANR	9879609	Symbol	hp -> code		9878896						
ANR	9879610	Symbol	nbits		9878896						
ANR	9879611	Symbol	sp -> enc_outcount		9878896						
ANR	9879612	Symbol	free_ent		9878896						
ANR	9879613	Symbol	sp -> enc_hashtab		9878896						
ANR	9879614	Symbol	sp -> enc_incount		9878896						
ANR	9879615	Symbol	bp		9878896						
ANR	9879616	Symbol	HSIZE		9878896						
ANR	9879617	Symbol	sp		9878896						
ANR	9879618	Symbol	cc		9878896						
ANR	9879619	Symbol	op		9878896						
ANR	9879620	Symbol	c		9878896						
ANR	9879621	Symbol	h		9878896						
ANR	9879622	Symbol	ent		9878896						
ANR	9879623	Symbol	nextdata		9878896						
ANR	9879624	Symbol	s		9878896						
ANR	9879625	Symbol	CODE_FIRST		9878896						
ANR	9879626	Symbol	outcount		9878896						
ANR	9879627	Symbol	* tif		9878896						
ANR	9879628	Symbol	sp -> enc_oldcode		9878896						
ANR	9879629	Symbol	CODE_CLEAR		9878896						
ANR	9879630	Function	LZWPostEncode	1055:0:28538:30082							
ANR	9879631	FunctionDef	LZWPostEncode (TIFF * tif)		9879630	0					
ANR	9879632	CompoundStatement		1057:0:28574:30082	9879630	0					
ANR	9879633	Statement	register	1058:1:28577:28584	9879630	0	True				
ANR	9879634	IdentifierDeclStatement	LZWCodecState * sp = EncoderState ( tif ) ;	1058:10:28586:28623	9879630	1	True				
ANR	9879635	IdentifierDecl	* sp = EncoderState ( tif )		9879630	0					
ANR	9879636	IdentifierDeclType	LZWCodecState *		9879630	0					
ANR	9879637	Identifier	sp		9879630	1					
ANR	9879638	AssignmentExpression	* sp = EncoderState ( tif )		9879630	2		=			
ANR	9879639	Identifier	sp		9879630	0					
ANR	9879640	CallExpression	EncoderState ( tif )		9879630	1					
ANR	9879641	Callee	EncoderState		9879630	0					
ANR	9879642	Identifier	EncoderState		9879630	0					
ANR	9879643	ArgumentList	tif		9879630	1					
ANR	9879644	Argument	tif		9879630	0					
ANR	9879645	Identifier	tif		9879630	0					
ANR	9879646	IdentifierDeclStatement	uint8 * op = tif -> tif_rawcp ;	1059:1:28626:28652	9879630	2	True				
ANR	9879647	IdentifierDecl	* op = tif -> tif_rawcp		9879630	0					
ANR	9879648	IdentifierDeclType	uint8 *		9879630	0					
ANR	9879649	Identifier	op		9879630	1					
ANR	9879650	AssignmentExpression	* op = tif -> tif_rawcp		9879630	2		=			
ANR	9879651	Identifier	op		9879630	0					
ANR	9879652	PtrMemberAccess	tif -> tif_rawcp		9879630	1					
ANR	9879653	Identifier	tif		9879630	0					
ANR	9879654	Identifier	tif_rawcp		9879630	1					
ANR	9879655	IdentifierDeclStatement	long nextbits = sp -> lzw_nextbits ;	1060:1:28655:28687	9879630	3	True				
ANR	9879656	IdentifierDecl	nextbits = sp -> lzw_nextbits		9879630	0					
ANR	9879657	IdentifierDeclType	long		9879630	0					
ANR	9879658	Identifier	nextbits		9879630	1					
ANR	9879659	AssignmentExpression	nextbits = sp -> lzw_nextbits		9879630	2		=			
ANR	9879660	Identifier	nextbits		9879630	0					
ANR	9879661	PtrMemberAccess	sp -> lzw_nextbits		9879630	1					
ANR	9879662	Identifier	sp		9879630	0					
ANR	9879663	Identifier	lzw_nextbits		9879630	1					
ANR	9879664	IdentifierDeclStatement	unsigned long nextdata = sp -> lzw_nextdata ;	1061:1:28690:28731	9879630	4	True				
ANR	9879665	IdentifierDecl	nextdata = sp -> lzw_nextdata		9879630	0					
ANR	9879666	IdentifierDeclType	unsigned long		9879630	0					
ANR	9879667	Identifier	nextdata		9879630	1					
ANR	9879668	AssignmentExpression	nextdata = sp -> lzw_nextdata		9879630	2		=			
ANR	9879669	Identifier	nextdata		9879630	0					
ANR	9879670	PtrMemberAccess	sp -> lzw_nextdata		9879630	1					
ANR	9879671	Identifier	sp		9879630	0					
ANR	9879672	Identifier	lzw_nextdata		9879630	1					
ANR	9879673	IdentifierDeclStatement	long outcount = sp -> enc_outcount ;	1062:1:28734:28766	9879630	5	True				
ANR	9879674	IdentifierDecl	outcount = sp -> enc_outcount		9879630	0					
ANR	9879675	IdentifierDeclType	long		9879630	0					
ANR	9879676	Identifier	outcount		9879630	1					
ANR	9879677	AssignmentExpression	outcount = sp -> enc_outcount		9879630	2		=			
ANR	9879678	Identifier	outcount		9879630	0					
ANR	9879679	PtrMemberAccess	sp -> enc_outcount		9879630	1					
ANR	9879680	Identifier	sp		9879630	0					
ANR	9879681	Identifier	enc_outcount		9879630	1					
ANR	9879682	IdentifierDeclStatement	int nbits = sp -> lzw_nbits ;	1063:1:28769:28794	9879630	6	True				
ANR	9879683	IdentifierDecl	nbits = sp -> lzw_nbits		9879630	0					
ANR	9879684	IdentifierDeclType	int		9879630	0					
ANR	9879685	Identifier	nbits		9879630	1					
ANR	9879686	AssignmentExpression	nbits = sp -> lzw_nbits		9879630	2		=			
ANR	9879687	Identifier	nbits		9879630	0					
ANR	9879688	PtrMemberAccess	sp -> lzw_nbits		9879630	1					
ANR	9879689	Identifier	sp		9879630	0					
ANR	9879690	Identifier	lzw_nbits		9879630	1					
ANR	9879691	IfStatement	if ( op > sp -> enc_rawlimit )		9879630	7					
ANR	9879692	Condition	op > sp -> enc_rawlimit	1065:5:28802:28822	9879630	0	True				
ANR	9879693	RelationalExpression	op > sp -> enc_rawlimit		9879630	0		>			
ANR	9879694	Identifier	op		9879630	0					
ANR	9879695	PtrMemberAccess	sp -> enc_rawlimit		9879630	1					
ANR	9879696	Identifier	sp		9879630	0					
ANR	9879697	Identifier	enc_rawlimit		9879630	1					
ANR	9879698	CompoundStatement		9:28:250:250	9879630	1					
ANR	9879699	ExpressionStatement	tif -> tif_rawcc = ( tmsize_t ) ( op - tif -> tif_rawdata )	1066:2:28829:28879	9879630	0	True				
ANR	9879700	AssignmentExpression	tif -> tif_rawcc = ( tmsize_t ) ( op - tif -> tif_rawdata )		9879630	0		=			
ANR	9879701	PtrMemberAccess	tif -> tif_rawcc		9879630	0					
ANR	9879702	Identifier	tif		9879630	0					
ANR	9879703	Identifier	tif_rawcc		9879630	1					
ANR	9879704	CastExpression	( tmsize_t ) ( op - tif -> tif_rawdata )		9879630	1					
ANR	9879705	CastTarget	tmsize_t		9879630	0					
ANR	9879706	AdditiveExpression	op - tif -> tif_rawdata		9879630	1		-			
ANR	9879707	Identifier	op		9879630	0					
ANR	9879708	PtrMemberAccess	tif -> tif_rawdata		9879630	1					
ANR	9879709	Identifier	tif		9879630	0					
ANR	9879710	Identifier	tif_rawdata		9879630	1					
ANR	9879711	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		9879630	1					
ANR	9879712	Condition	! TIFFFlushData1 ( tif )	1067:6:28887:28906	9879630	0	True				
ANR	9879713	UnaryOperationExpression	! TIFFFlushData1 ( tif )		9879630	0					
ANR	9879714	UnaryOperator	!		9879630	0					
ANR	9879715	CallExpression	TIFFFlushData1 ( tif )		9879630	1					
ANR	9879716	Callee	TIFFFlushData1		9879630	0					
ANR	9879717	Identifier	TIFFFlushData1		9879630	0					
ANR	9879718	ArgumentList	tif		9879630	1					
ANR	9879719	Argument	tif		9879630	0					
ANR	9879720	Identifier	tif		9879630	0					
ANR	9879721	ReturnStatement	return 0 ;	1068:20:28930:28938	9879630	1	True				
ANR	9879722	PrimaryExpression	0		9879630	0					
ANR	9879723	ExpressionStatement	op = tif -> tif_rawdata	1069:2:28942:28963	9879630	2	True				
ANR	9879724	AssignmentExpression	op = tif -> tif_rawdata		9879630	0		=			
ANR	9879725	Identifier	op		9879630	0					
ANR	9879726	PtrMemberAccess	tif -> tif_rawdata		9879630	1					
ANR	9879727	Identifier	tif		9879630	0					
ANR	9879728	Identifier	tif_rawdata		9879630	1					
ANR	9879729	IfStatement	if ( sp -> enc_oldcode != ( hcode_t ) - 1 )		9879630	8					
ANR	9879730	Condition	sp -> enc_oldcode != ( hcode_t ) - 1	1071:5:28973:29003	9879630	0	True				
ANR	9879731	EqualityExpression	sp -> enc_oldcode != ( hcode_t ) - 1		9879630	0		!=			
ANR	9879732	PtrMemberAccess	sp -> enc_oldcode		9879630	0					
ANR	9879733	Identifier	sp		9879630	0					
ANR	9879734	Identifier	enc_oldcode		9879630	1					
ANR	9879735	CastExpression	( hcode_t ) - 1		9879630	1					
ANR	9879736	CastTarget	hcode_t		9879630	0					
ANR	9879737	UnaryOperationExpression	- 1		9879630	1					
ANR	9879738	UnaryOperator	-		9879630	0					
ANR	9879739	PrimaryExpression	1		9879630	1					
ANR	9879740	CompoundStatement		16:16:449:480	9879630	1					
ANR	9879741	IdentifierDeclStatement	int free_ent = sp -> lzw_free_ent ;	1072:16:29024:29055	9879630	0	True				
ANR	9879742	IdentifierDecl	free_ent = sp -> lzw_free_ent		9879630	0					
ANR	9879743	IdentifierDeclType	int		9879630	0					
ANR	9879744	Identifier	free_ent		9879630	1					
ANR	9879745	AssignmentExpression	free_ent = sp -> lzw_free_ent		9879630	2		=			
ANR	9879746	Identifier	free_ent		9879630	0					
ANR	9879747	PtrMemberAccess	sp -> lzw_free_ent		9879630	1					
ANR	9879748	Identifier	sp		9879630	0					
ANR	9879749	Identifier	lzw_free_ent		9879630	1					
ANR	9879750	ExpressionStatement	"PutNextCode ( op , sp -> enc_oldcode )"	1074:2:29060:29092	9879630	1	True				
ANR	9879751	CallExpression	"PutNextCode ( op , sp -> enc_oldcode )"		9879630	0					
ANR	9879752	Callee	PutNextCode		9879630	0					
ANR	9879753	Identifier	PutNextCode		9879630	0					
ANR	9879754	ArgumentList	op		9879630	1					
ANR	9879755	Argument	op		9879630	0					
ANR	9879756	Identifier	op		9879630	0					
ANR	9879757	Argument	sp -> enc_oldcode		9879630	1					
ANR	9879758	PtrMemberAccess	sp -> enc_oldcode		9879630	0					
ANR	9879759	Identifier	sp		9879630	0					
ANR	9879760	Identifier	enc_oldcode		9879630	1					
ANR	9879761	ExpressionStatement	sp -> enc_oldcode = ( hcode_t ) - 1	1075:2:29096:29126	9879630	2	True				
ANR	9879762	AssignmentExpression	sp -> enc_oldcode = ( hcode_t ) - 1		9879630	0		=			
ANR	9879763	PtrMemberAccess	sp -> enc_oldcode		9879630	0					
ANR	9879764	Identifier	sp		9879630	0					
ANR	9879765	Identifier	enc_oldcode		9879630	1					
ANR	9879766	CastExpression	( hcode_t ) - 1		9879630	1					
ANR	9879767	CastTarget	hcode_t		9879630	0					
ANR	9879768	UnaryOperationExpression	- 1		9879630	1					
ANR	9879769	UnaryOperator	-		9879630	0					
ANR	9879770	PrimaryExpression	1		9879630	1					
ANR	9879771	ExpressionStatement	free_ent ++	1076:16:29144:29155	9879630	3	True				
ANR	9879772	PostIncDecOperationExpression	free_ent ++		9879630	0					
ANR	9879773	Identifier	free_ent		9879630	0					
ANR	9879774	IncDec	++		9879630	1					
ANR	9879775	IfStatement	if ( free_ent == CODE_MAX - 1 )		9879630	4					
ANR	9879776	Condition	free_ent == CODE_MAX - 1	1078:20:29178:29199	9879630	0	True				
ANR	9879777	EqualityExpression	free_ent == CODE_MAX - 1		9879630	0		==			
ANR	9879778	Identifier	free_ent		9879630	0					
ANR	9879779	AdditiveExpression	CODE_MAX - 1		9879630	1		-			
ANR	9879780	Identifier	CODE_MAX		9879630	0					
ANR	9879781	PrimaryExpression	1		9879630	1					
ANR	9879782	CompoundStatement		22:44:627:627	9879630	1					
ANR	9879783	ExpressionStatement	outcount = 0	1080:24:29299:29311	9879630	0	True				
ANR	9879784	AssignmentExpression	outcount = 0		9879630	0		=			
ANR	9879785	Identifier	outcount		9879630	0					
ANR	9879786	PrimaryExpression	0		9879630	1					
ANR	9879787	ExpressionStatement	"PutNextCode ( op , CODE_CLEAR )"	1081:24:29337:29364	9879630	1	True				
ANR	9879788	CallExpression	"PutNextCode ( op , CODE_CLEAR )"		9879630	0					
ANR	9879789	Callee	PutNextCode		9879630	0					
ANR	9879790	Identifier	PutNextCode		9879630	0					
ANR	9879791	ArgumentList	op		9879630	1					
ANR	9879792	Argument	op		9879630	0					
ANR	9879793	Identifier	op		9879630	0					
ANR	9879794	Argument	CODE_CLEAR		9879630	1					
ANR	9879795	Identifier	CODE_CLEAR		9879630	0					
ANR	9879796	ExpressionStatement	nbits = BITS_MIN	1082:24:29390:29406	9879630	2	True				
ANR	9879797	AssignmentExpression	nbits = BITS_MIN		9879630	0		=			
ANR	9879798	Identifier	nbits		9879630	0					
ANR	9879799	Identifier	BITS_MIN		9879630	1					
ANR	9879800	ElseStatement	else		9879630	0					
ANR	9879801	CompoundStatement		27:23:856:856	9879630	0					
ANR	9879802	IfStatement	if ( free_ent > sp -> lzw_maxcode )		9879630	0					
ANR	9879803	Condition	free_ent > sp -> lzw_maxcode	1088:28:29658:29683	9879630	0	True				
ANR	9879804	RelationalExpression	free_ent > sp -> lzw_maxcode		9879630	0		>			
ANR	9879805	Identifier	free_ent		9879630	0					
ANR	9879806	PtrMemberAccess	sp -> lzw_maxcode		9879630	1					
ANR	9879807	Identifier	sp		9879630	0					
ANR	9879808	Identifier	lzw_maxcode		9879630	1					
ANR	9879809	CompoundStatement		32:56:1111:1111	9879630	1					
ANR	9879810	ExpressionStatement	nbits ++	1089:32:29720:29727	9879630	0	True				
ANR	9879811	PostIncDecOperationExpression	nbits ++		9879630	0					
ANR	9879812	Identifier	nbits		9879630	0					
ANR	9879813	IncDec	++		9879630	1					
ANR	9879814	ExpressionStatement	assert ( nbits <= BITS_MAX )	1090:32:29761:29786	9879630	1	True				
ANR	9879815	CallExpression	assert ( nbits <= BITS_MAX )		9879630	0					
ANR	9879816	Callee	assert		9879630	0					
ANR	9879817	Identifier	assert		9879630	0					
ANR	9879818	ArgumentList	nbits <= BITS_MAX		9879630	1					
ANR	9879819	Argument	nbits <= BITS_MAX		9879630	0					
ANR	9879820	RelationalExpression	nbits <= BITS_MAX		9879630	0		<=			
ANR	9879821	Identifier	nbits		9879630	0					
ANR	9879822	Identifier	BITS_MAX		9879630	1					
ANR	9879823	ExpressionStatement	"PutNextCode ( op , CODE_EOI )"	1094:1:29836:29861	9879630	9	True				
ANR	9879824	CallExpression	"PutNextCode ( op , CODE_EOI )"		9879630	0					
ANR	9879825	Callee	PutNextCode		9879630	0					
ANR	9879826	Identifier	PutNextCode		9879630	0					
ANR	9879827	ArgumentList	op		9879630	1					
ANR	9879828	Argument	op		9879630	0					
ANR	9879829	Identifier	op		9879630	0					
ANR	9879830	Argument	CODE_EOI		9879630	1					
ANR	9879831	Identifier	CODE_EOI		9879630	0					
ANR	9879832	IfStatement	if ( nextbits > 0 )		9879630	10					
ANR	9879833	Condition	nextbits > 0	1096:5:29941:29952	9879630	0	True				
ANR	9879834	RelationalExpression	nextbits > 0		9879630	0		>			
ANR	9879835	Identifier	nextbits		9879630	0					
ANR	9879836	PrimaryExpression	0		9879630	1					
ANR	9879837	ExpressionStatement	* op ++ = ( unsigned char ) ( ( nextdata << ( 8 - nextbits ) ) & 0xff )	1097:2:29958:30014	9879630	1	True				
ANR	9879838	AssignmentExpression	* op ++ = ( unsigned char ) ( ( nextdata << ( 8 - nextbits ) ) & 0xff )		9879630	0		=			
ANR	9879839	UnaryOperationExpression	* op ++		9879630	0					
ANR	9879840	UnaryOperator	*		9879630	0					
ANR	9879841	PostIncDecOperationExpression	op ++		9879630	1					
ANR	9879842	Identifier	op		9879630	0					
ANR	9879843	IncDec	++		9879630	1					
ANR	9879844	CastExpression	( unsigned char ) ( ( nextdata << ( 8 - nextbits ) ) & 0xff )		9879630	1					
ANR	9879845	CastTarget	unsigned char		9879630	0					
ANR	9879846	BitAndExpression	( nextdata << ( 8 - nextbits ) ) & 0xff		9879630	1		&			
ANR	9879847	ShiftExpression	nextdata << ( 8 - nextbits )		9879630	0		<<			
ANR	9879848	Identifier	nextdata		9879630	0					
ANR	9879849	AdditiveExpression	8 - nextbits		9879630	1		-			
ANR	9879850	PrimaryExpression	8		9879630	0					
ANR	9879851	Identifier	nextbits		9879630	1					
ANR	9879852	PrimaryExpression	0xff		9879630	1					
ANR	9879853	ExpressionStatement	tif -> tif_rawcc = ( tmsize_t ) ( op - tif -> tif_rawdata )	1098:1:30017:30067	9879630	11	True				
ANR	9879854	AssignmentExpression	tif -> tif_rawcc = ( tmsize_t ) ( op - tif -> tif_rawdata )		9879630	0		=			
ANR	9879855	PtrMemberAccess	tif -> tif_rawcc		9879630	0					
ANR	9879856	Identifier	tif		9879630	0					
ANR	9879857	Identifier	tif_rawcc		9879630	1					
ANR	9879858	CastExpression	( tmsize_t ) ( op - tif -> tif_rawdata )		9879630	1					
ANR	9879859	CastTarget	tmsize_t		9879630	0					
ANR	9879860	AdditiveExpression	op - tif -> tif_rawdata		9879630	1		-			
ANR	9879861	Identifier	op		9879630	0					
ANR	9879862	PtrMemberAccess	tif -> tif_rawdata		9879630	1					
ANR	9879863	Identifier	tif		9879630	0					
ANR	9879864	Identifier	tif_rawdata		9879630	1					
ANR	9879865	ReturnStatement	return ( 1 ) ;	1099:1:30070:30080	9879630	12	True				
ANR	9879866	PrimaryExpression	1		9879630	0					
ANR	9879867	ReturnType	static int		9879630	1					
ANR	9879868	Identifier	LZWPostEncode		9879630	2					
ANR	9879869	ParameterList	TIFF * tif		9879630	3					
ANR	9879870	Parameter	TIFF * tif	1056:14:28563:28571	9879630	0	True				
ANR	9879871	ParameterType	TIFF *		9879630	0					
ANR	9879872	Identifier	tif		9879630	1					
ANR	9879873	CFGEntryNode	ENTRY		9879630		True				
ANR	9879874	CFGExitNode	EXIT		9879630		True				
ANR	9879875	Symbol	* sp		9879630						
ANR	9879876	Symbol	BITS_MAX		9879630						
ANR	9879877	Symbol	sp -> lzw_nbits		9879630						
ANR	9879878	Symbol	sp -> lzw_maxcode		9879630						
ANR	9879879	Symbol	sp -> enc_outcount		9879630						
ANR	9879880	Symbol	nbits		9879630						
ANR	9879881	Symbol	free_ent		9879630						
ANR	9879882	Symbol	CODE_MAX		9879630						
ANR	9879883	Symbol	tif		9879630						
ANR	9879884	Symbol	tif -> tif_rawcc		9879630						
ANR	9879885	Symbol	nextbits		9879630						
ANR	9879886	Symbol	TIFFFlushData1		9879630						
ANR	9879887	Symbol	sp -> lzw_nextdata		9879630						
ANR	9879888	Symbol	sp		9879630						
ANR	9879889	Symbol	EncoderState		9879630						
ANR	9879890	Symbol	op		9879630						
ANR	9879891	Symbol	tif -> tif_rawcp		9879630						
ANR	9879892	Symbol	nextdata		9879630						
ANR	9879893	Symbol	sp -> lzw_free_ent		9879630						
ANR	9879894	Symbol	BITS_MIN		9879630						
ANR	9879895	Symbol	CODE_EOI		9879630						
ANR	9879896	Symbol	outcount		9879630						
ANR	9879897	Symbol	sp -> lzw_nextbits		9879630						
ANR	9879898	Symbol	sp -> enc_rawlimit		9879630						
ANR	9879899	Symbol	* op ++		9879630						
ANR	9879900	Symbol	* tif		9879630						
ANR	9879901	Symbol	sp -> enc_oldcode		9879630						
ANR	9879902	Symbol	tif -> tif_rawdata		9879630						
ANR	9879903	Symbol	CODE_CLEAR		9879630						
ANR	9879904	Function	cl_hash	1105:0:30122:30497							
ANR	9879905	FunctionDef	cl_hash (LZWCodecState * sp)		9879904	0					
ANR	9879906	CompoundStatement		1107:0:30161:30497	9879904	0					
ANR	9879907	Statement	register	1108:1:30164:30171	9879904	0	True				
ANR	9879908	IdentifierDeclStatement	hash_t * hp = & sp -> enc_hashtab [ HSIZE - 1 ] ;	1108:10:30173:30211	9879904	1	True				
ANR	9879909	IdentifierDecl	* hp = & sp -> enc_hashtab [ HSIZE - 1 ]		9879904	0					
ANR	9879910	IdentifierDeclType	hash_t *		9879904	0					
ANR	9879911	Identifier	hp		9879904	1					
ANR	9879912	AssignmentExpression	* hp = & sp -> enc_hashtab [ HSIZE - 1 ]		9879904	2		=			
ANR	9879913	Identifier	hp		9879904	0					
ANR	9879914	UnaryOperationExpression	& sp -> enc_hashtab [ HSIZE - 1 ]		9879904	1					
ANR	9879915	UnaryOperator	&		9879904	0					
ANR	9879916	ArrayIndexing	sp -> enc_hashtab [ HSIZE - 1 ]		9879904	1					
ANR	9879917	PtrMemberAccess	sp -> enc_hashtab		9879904	0					
ANR	9879918	Identifier	sp		9879904	0					
ANR	9879919	Identifier	enc_hashtab		9879904	1					
ANR	9879920	AdditiveExpression	HSIZE - 1		9879904	1		-			
ANR	9879921	Identifier	HSIZE		9879904	0					
ANR	9879922	PrimaryExpression	1		9879904	1					
ANR	9879923	Statement	register	1109:1:30214:30221	9879904	2	True				
ANR	9879924	IdentifierDeclStatement	long i = HSIZE - 8 ;	1109:10:30223:30239	9879904	3	True				
ANR	9879925	IdentifierDecl	i = HSIZE - 8		9879904	0					
ANR	9879926	IdentifierDeclType	long		9879904	0					
ANR	9879927	Identifier	i		9879904	1					
ANR	9879928	AssignmentExpression	i = HSIZE - 8		9879904	2		=			
ANR	9879929	Identifier	i		9879904	0					
ANR	9879930	AdditiveExpression	HSIZE - 8		9879904	1		-			
ANR	9879931	Identifier	HSIZE		9879904	0					
ANR	9879932	PrimaryExpression	8		9879904	1					
ANR	9879933	DoStatement	do		9879904	4					
ANR	9879934	CompoundStatement		5:4:84:84	9879904	0					
ANR	9879935	ExpressionStatement	i -= 8	1112:2:30250:30256	9879904	0	True				
ANR	9879936	AssignmentExpression	i -= 8		9879904	0		-=			
ANR	9879937	Identifier	i		9879904	0					
ANR	9879938	PrimaryExpression	8		9879904	1					
ANR	9879939	ExpressionStatement	hp [ - 7 ] . hash = - 1	1113:2:30260:30276	9879904	1	True				
ANR	9879940	AssignmentExpression	hp [ - 7 ] . hash = - 1		9879904	0		=			
ANR	9879941	MemberAccess	hp [ - 7 ] . hash		9879904	0					
ANR	9879942	ArrayIndexing	hp [ - 7 ]		9879904	0					
ANR	9879943	Identifier	hp		9879904	0					
ANR	9879944	UnaryOperationExpression	- 7		9879904	1					
ANR	9879945	UnaryOperator	-		9879904	0					
ANR	9879946	PrimaryExpression	7		9879904	1					
ANR	9879947	Identifier	hash		9879904	1					
ANR	9879948	UnaryOperationExpression	- 1		9879904	1					
ANR	9879949	UnaryOperator	-		9879904	0					
ANR	9879950	PrimaryExpression	1		9879904	1					
ANR	9879951	ExpressionStatement	hp [ - 6 ] . hash = - 1	1114:2:30280:30296	9879904	2	True				
ANR	9879952	AssignmentExpression	hp [ - 6 ] . hash = - 1		9879904	0		=			
ANR	9879953	MemberAccess	hp [ - 6 ] . hash		9879904	0					
ANR	9879954	ArrayIndexing	hp [ - 6 ]		9879904	0					
ANR	9879955	Identifier	hp		9879904	0					
ANR	9879956	UnaryOperationExpression	- 6		9879904	1					
ANR	9879957	UnaryOperator	-		9879904	0					
ANR	9879958	PrimaryExpression	6		9879904	1					
ANR	9879959	Identifier	hash		9879904	1					
ANR	9879960	UnaryOperationExpression	- 1		9879904	1					
ANR	9879961	UnaryOperator	-		9879904	0					
ANR	9879962	PrimaryExpression	1		9879904	1					
ANR	9879963	ExpressionStatement	hp [ - 5 ] . hash = - 1	1115:2:30300:30316	9879904	3	True				
ANR	9879964	AssignmentExpression	hp [ - 5 ] . hash = - 1		9879904	0		=			
ANR	9879965	MemberAccess	hp [ - 5 ] . hash		9879904	0					
ANR	9879966	ArrayIndexing	hp [ - 5 ]		9879904	0					
ANR	9879967	Identifier	hp		9879904	0					
ANR	9879968	UnaryOperationExpression	- 5		9879904	1					
ANR	9879969	UnaryOperator	-		9879904	0					
ANR	9879970	PrimaryExpression	5		9879904	1					
ANR	9879971	Identifier	hash		9879904	1					
ANR	9879972	UnaryOperationExpression	- 1		9879904	1					
ANR	9879973	UnaryOperator	-		9879904	0					
ANR	9879974	PrimaryExpression	1		9879904	1					
ANR	9879975	ExpressionStatement	hp [ - 4 ] . hash = - 1	1116:2:30320:30336	9879904	4	True				
ANR	9879976	AssignmentExpression	hp [ - 4 ] . hash = - 1		9879904	0		=			
ANR	9879977	MemberAccess	hp [ - 4 ] . hash		9879904	0					
ANR	9879978	ArrayIndexing	hp [ - 4 ]		9879904	0					
ANR	9879979	Identifier	hp		9879904	0					
ANR	9879980	UnaryOperationExpression	- 4		9879904	1					
ANR	9879981	UnaryOperator	-		9879904	0					
ANR	9879982	PrimaryExpression	4		9879904	1					
ANR	9879983	Identifier	hash		9879904	1					
ANR	9879984	UnaryOperationExpression	- 1		9879904	1					
ANR	9879985	UnaryOperator	-		9879904	0					
ANR	9879986	PrimaryExpression	1		9879904	1					
ANR	9879987	ExpressionStatement	hp [ - 3 ] . hash = - 1	1117:2:30340:30356	9879904	5	True				
ANR	9879988	AssignmentExpression	hp [ - 3 ] . hash = - 1		9879904	0		=			
ANR	9879989	MemberAccess	hp [ - 3 ] . hash		9879904	0					
ANR	9879990	ArrayIndexing	hp [ - 3 ]		9879904	0					
ANR	9879991	Identifier	hp		9879904	0					
ANR	9879992	UnaryOperationExpression	- 3		9879904	1					
ANR	9879993	UnaryOperator	-		9879904	0					
ANR	9879994	PrimaryExpression	3		9879904	1					
ANR	9879995	Identifier	hash		9879904	1					
ANR	9879996	UnaryOperationExpression	- 1		9879904	1					
ANR	9879997	UnaryOperator	-		9879904	0					
ANR	9879998	PrimaryExpression	1		9879904	1					
ANR	9879999	ExpressionStatement	hp [ - 2 ] . hash = - 1	1118:2:30360:30376	9879904	6	True				
ANR	9880000	AssignmentExpression	hp [ - 2 ] . hash = - 1		9879904	0		=			
ANR	9880001	MemberAccess	hp [ - 2 ] . hash		9879904	0					
ANR	9880002	ArrayIndexing	hp [ - 2 ]		9879904	0					
ANR	9880003	Identifier	hp		9879904	0					
ANR	9880004	UnaryOperationExpression	- 2		9879904	1					
ANR	9880005	UnaryOperator	-		9879904	0					
ANR	9880006	PrimaryExpression	2		9879904	1					
ANR	9880007	Identifier	hash		9879904	1					
ANR	9880008	UnaryOperationExpression	- 1		9879904	1					
ANR	9880009	UnaryOperator	-		9879904	0					
ANR	9880010	PrimaryExpression	1		9879904	1					
ANR	9880011	ExpressionStatement	hp [ - 1 ] . hash = - 1	1119:2:30380:30396	9879904	7	True				
ANR	9880012	AssignmentExpression	hp [ - 1 ] . hash = - 1		9879904	0		=			
ANR	9880013	MemberAccess	hp [ - 1 ] . hash		9879904	0					
ANR	9880014	ArrayIndexing	hp [ - 1 ]		9879904	0					
ANR	9880015	Identifier	hp		9879904	0					
ANR	9880016	UnaryOperationExpression	- 1		9879904	1					
ANR	9880017	UnaryOperator	-		9879904	0					
ANR	9880018	PrimaryExpression	1		9879904	1					
ANR	9880019	Identifier	hash		9879904	1					
ANR	9880020	UnaryOperationExpression	- 1		9879904	1					
ANR	9880021	UnaryOperator	-		9879904	0					
ANR	9880022	PrimaryExpression	1		9879904	1					
ANR	9880023	ExpressionStatement	hp [ 0 ] . hash = - 1	1120:2:30400:30416	9879904	8	True				
ANR	9880024	AssignmentExpression	hp [ 0 ] . hash = - 1		9879904	0		=			
ANR	9880025	MemberAccess	hp [ 0 ] . hash		9879904	0					
ANR	9880026	ArrayIndexing	hp [ 0 ]		9879904	0					
ANR	9880027	Identifier	hp		9879904	0					
ANR	9880028	PrimaryExpression	0		9879904	1					
ANR	9880029	Identifier	hash		9879904	1					
ANR	9880030	UnaryOperationExpression	- 1		9879904	1					
ANR	9880031	UnaryOperator	-		9879904	0					
ANR	9880032	PrimaryExpression	1		9879904	1					
ANR	9880033	ExpressionStatement	hp -= 8	1121:2:30420:30427	9879904	9	True				
ANR	9880034	AssignmentExpression	hp -= 8		9879904	0		-=			
ANR	9880035	Identifier	hp		9879904	0					
ANR	9880036	PrimaryExpression	8		9879904	1					
ANR	9880037	Condition	i >= 0	1122:10:30439:30444	9879904	1	True				
ANR	9880038	RelationalExpression	i >= 0		9879904	0		>=			
ANR	9880039	Identifier	i		9879904	0					
ANR	9880040	PrimaryExpression	0		9879904	1					
ANR	9880041	ForStatement	"for ( i += 8 ; i > 0 ; i -- , hp -- )"		9879904	5					
ANR	9880042	ForInit	i += 8 ;	1123:6:30454:30460	9879904	0	True				
ANR	9880043	AssignmentExpression	i += 8		9879904	0		+=			
ANR	9880044	Identifier	i		9879904	0					
ANR	9880045	PrimaryExpression	8		9879904	1					
ANR	9880046	Condition	i > 0	1123:14:30462:30466	9879904	1	True				
ANR	9880047	RelationalExpression	i > 0		9879904	0		>			
ANR	9880048	Identifier	i		9879904	0					
ANR	9880049	PrimaryExpression	0		9879904	1					
ANR	9880050	Expression	"i -- , hp --"	1123:21:30469:30477	9879904	2	True				
ANR	9880051	PostIncDecOperationExpression	i --		9879904	0					
ANR	9880052	Identifier	i		9879904	0					
ANR	9880053	IncDec	--		9879904	1					
ANR	9880054	PostIncDecOperationExpression	hp --		9879904	1					
ANR	9880055	Identifier	hp		9879904	0					
ANR	9880056	IncDec	--		9879904	1					
ANR	9880057	ExpressionStatement	hp -> hash = - 1	1124:2:30482:30495	9879904	3	True				
ANR	9880058	AssignmentExpression	hp -> hash = - 1		9879904	0		=			
ANR	9880059	PtrMemberAccess	hp -> hash		9879904	0					
ANR	9880060	Identifier	hp		9879904	0					
ANR	9880061	Identifier	hash		9879904	1					
ANR	9880062	UnaryOperationExpression	- 1		9879904	1					
ANR	9880063	UnaryOperator	-		9879904	0					
ANR	9880064	PrimaryExpression	1		9879904	1					
ANR	9880065	ReturnType	static void		9879904	1					
ANR	9880066	Identifier	cl_hash		9879904	2					
ANR	9880067	ParameterList	LZWCodecState * sp		9879904	3					
ANR	9880068	Parameter	LZWCodecState * sp	1106:8:30142:30158	9879904	0	True				
ANR	9880069	ParameterType	LZWCodecState *		9879904	0					
ANR	9880070	Identifier	sp		9879904	1					
ANR	9880071	CFGEntryNode	ENTRY		9879904		True				
ANR	9880072	CFGExitNode	EXIT		9879904		True				
ANR	9880073	Symbol	* sp		9879904						
ANR	9880074	Symbol	hp -> hash		9879904						
ANR	9880075	Symbol	hp [ - 6 ] . hash		9879904						
ANR	9880076	Symbol	hp		9879904						
ANR	9880077	Symbol	i		9879904						
ANR	9880078	Symbol	sp -> enc_hashtab		9879904						
ANR	9880079	Symbol	hp [ - 5 ] . hash		9879904						
ANR	9880080	Symbol	* hp		9879904						
ANR	9880081	Symbol	hp [ - 1 ] . hash		9879904						
ANR	9880082	Symbol	hp [ 0 ] . hash		9879904						
ANR	9880083	Symbol	HSIZE		9879904						
ANR	9880084	Symbol	hp [ - 2 ] . hash		9879904						
ANR	9880085	Symbol	hp [ - 4 ] . hash		9879904						
ANR	9880086	Symbol	hp [ - 7 ] . hash		9879904						
ANR	9880087	Symbol	sp		9879904						
ANR	9880088	Symbol	hp [ - 3 ] . hash		9879904						
ANR	9880089	Function	LZWCleanup	1127:0:30500:30857							
ANR	9880090	FunctionDef	LZWCleanup (TIFF * tif)		9880089	0					
ANR	9880091	CompoundStatement		1129:0:30534:30857	9880089	0					
ANR	9880092	ExpressionStatement	( void ) TIFFPredictorCleanup ( tif )	1130:1:30537:30568	9880089	0	True				
ANR	9880093	CastExpression	( void ) TIFFPredictorCleanup ( tif )		9880089	0					
ANR	9880094	CastTarget	void		9880089	0					
ANR	9880095	CallExpression	TIFFPredictorCleanup ( tif )		9880089	1					
ANR	9880096	Callee	TIFFPredictorCleanup		9880089	0					
ANR	9880097	Identifier	TIFFPredictorCleanup		9880089	0					
ANR	9880098	ArgumentList	tif		9880089	1					
ANR	9880099	Argument	tif		9880089	0					
ANR	9880100	Identifier	tif		9880089	0					
ANR	9880101	ExpressionStatement	assert ( tif -> tif_data != 0 )	1132:1:30572:30598	9880089	1	True				
ANR	9880102	CallExpression	assert ( tif -> tif_data != 0 )		9880089	0					
ANR	9880103	Callee	assert		9880089	0					
ANR	9880104	Identifier	assert		9880089	0					
ANR	9880105	ArgumentList	tif -> tif_data != 0		9880089	1					
ANR	9880106	Argument	tif -> tif_data != 0		9880089	0					
ANR	9880107	EqualityExpression	tif -> tif_data != 0		9880089	0		!=			
ANR	9880108	PtrMemberAccess	tif -> tif_data		9880089	0					
ANR	9880109	Identifier	tif		9880089	0					
ANR	9880110	Identifier	tif_data		9880089	1					
ANR	9880111	PrimaryExpression	0		9880089	1					
ANR	9880112	IfStatement	if ( DecoderState ( tif ) -> dec_codetab )		9880089	2					
ANR	9880113	Condition	DecoderState ( tif ) -> dec_codetab	1134:5:30606:30635	9880089	0	True				
ANR	9880114	PtrMemberAccess	DecoderState ( tif ) -> dec_codetab		9880089	0					
ANR	9880115	CallExpression	DecoderState ( tif )		9880089	0					
ANR	9880116	Callee	DecoderState		9880089	0					
ANR	9880117	Identifier	DecoderState		9880089	0					
ANR	9880118	ArgumentList	tif		9880089	1					
ANR	9880119	Argument	tif		9880089	0					
ANR	9880120	Identifier	tif		9880089	0					
ANR	9880121	Identifier	dec_codetab		9880089	1					
ANR	9880122	ExpressionStatement	_TIFFfree ( DecoderState ( tif ) -> dec_codetab )	1135:2:30640:30681	9880089	1	True				
ANR	9880123	CallExpression	_TIFFfree ( DecoderState ( tif ) -> dec_codetab )		9880089	0					
ANR	9880124	Callee	_TIFFfree		9880089	0					
ANR	9880125	Identifier	_TIFFfree		9880089	0					
ANR	9880126	ArgumentList	DecoderState ( tif ) -> dec_codetab		9880089	1					
ANR	9880127	Argument	DecoderState ( tif ) -> dec_codetab		9880089	0					
ANR	9880128	PtrMemberAccess	DecoderState ( tif ) -> dec_codetab		9880089	0					
ANR	9880129	CallExpression	DecoderState ( tif )		9880089	0					
ANR	9880130	Callee	DecoderState		9880089	0					
ANR	9880131	Identifier	DecoderState		9880089	0					
ANR	9880132	ArgumentList	tif		9880089	1					
ANR	9880133	Argument	tif		9880089	0					
ANR	9880134	Identifier	tif		9880089	0					
ANR	9880135	Identifier	dec_codetab		9880089	1					
ANR	9880136	IfStatement	if ( EncoderState ( tif ) -> enc_hashtab )		9880089	3					
ANR	9880137	Condition	EncoderState ( tif ) -> enc_hashtab	1137:5:30689:30718	9880089	0	True				
ANR	9880138	PtrMemberAccess	EncoderState ( tif ) -> enc_hashtab		9880089	0					
ANR	9880139	CallExpression	EncoderState ( tif )		9880089	0					
ANR	9880140	Callee	EncoderState		9880089	0					
ANR	9880141	Identifier	EncoderState		9880089	0					
ANR	9880142	ArgumentList	tif		9880089	1					
ANR	9880143	Argument	tif		9880089	0					
ANR	9880144	Identifier	tif		9880089	0					
ANR	9880145	Identifier	enc_hashtab		9880089	1					
ANR	9880146	ExpressionStatement	_TIFFfree ( EncoderState ( tif ) -> enc_hashtab )	1138:2:30723:30764	9880089	1	True				
ANR	9880147	CallExpression	_TIFFfree ( EncoderState ( tif ) -> enc_hashtab )		9880089	0					
ANR	9880148	Callee	_TIFFfree		9880089	0					
ANR	9880149	Identifier	_TIFFfree		9880089	0					
ANR	9880150	ArgumentList	EncoderState ( tif ) -> enc_hashtab		9880089	1					
ANR	9880151	Argument	EncoderState ( tif ) -> enc_hashtab		9880089	0					
ANR	9880152	PtrMemberAccess	EncoderState ( tif ) -> enc_hashtab		9880089	0					
ANR	9880153	CallExpression	EncoderState ( tif )		9880089	0					
ANR	9880154	Callee	EncoderState		9880089	0					
ANR	9880155	Identifier	EncoderState		9880089	0					
ANR	9880156	ArgumentList	tif		9880089	1					
ANR	9880157	Argument	tif		9880089	0					
ANR	9880158	Identifier	tif		9880089	0					
ANR	9880159	Identifier	enc_hashtab		9880089	1					
ANR	9880160	ExpressionStatement	_TIFFfree ( tif -> tif_data )	1140:1:30768:30792	9880089	4	True				
ANR	9880161	CallExpression	_TIFFfree ( tif -> tif_data )		9880089	0					
ANR	9880162	Callee	_TIFFfree		9880089	0					
ANR	9880163	Identifier	_TIFFfree		9880089	0					
ANR	9880164	ArgumentList	tif -> tif_data		9880089	1					
ANR	9880165	Argument	tif -> tif_data		9880089	0					
ANR	9880166	PtrMemberAccess	tif -> tif_data		9880089	0					
ANR	9880167	Identifier	tif		9880089	0					
ANR	9880168	Identifier	tif_data		9880089	1					
ANR	9880169	ExpressionStatement	tif -> tif_data = NULL	1141:1:30795:30815	9880089	5	True				
ANR	9880170	AssignmentExpression	tif -> tif_data = NULL		9880089	0		=			
ANR	9880171	PtrMemberAccess	tif -> tif_data		9880089	0					
ANR	9880172	Identifier	tif		9880089	0					
ANR	9880173	Identifier	tif_data		9880089	1					
ANR	9880174	Identifier	NULL		9880089	1					
ANR	9880175	ExpressionStatement	_TIFFSetDefaultCompressionState ( tif )	1143:1:30819:30855	9880089	6	True				
ANR	9880176	CallExpression	_TIFFSetDefaultCompressionState ( tif )		9880089	0					
ANR	9880177	Callee	_TIFFSetDefaultCompressionState		9880089	0					
ANR	9880178	Identifier	_TIFFSetDefaultCompressionState		9880089	0					
ANR	9880179	ArgumentList	tif		9880089	1					
ANR	9880180	Argument	tif		9880089	0					
ANR	9880181	Identifier	tif		9880089	0					
ANR	9880182	ReturnType	static void		9880089	1					
ANR	9880183	Identifier	LZWCleanup		9880089	2					
ANR	9880184	ParameterList	TIFF * tif		9880089	3					
ANR	9880185	Parameter	TIFF * tif	1128:11:30523:30531	9880089	0	True				
ANR	9880186	ParameterType	TIFF *		9880089	0					
ANR	9880187	Identifier	tif		9880089	1					
ANR	9880188	CFGEntryNode	ENTRY		9880089		True				
ANR	9880189	CFGExitNode	EXIT		9880089		True				
ANR	9880190	Symbol	tif		9880089						
ANR	9880191	Symbol	EncoderState		9880089						
ANR	9880192	Symbol	* EncoderState		9880089						
ANR	9880193	Symbol	NULL		9880089						
ANR	9880194	Symbol	DecoderState		9880089						
ANR	9880195	Symbol	EncoderState ( tif ) -> enc_hashtab		9880089						
ANR	9880196	Symbol	DecoderState ( tif ) -> dec_codetab		9880089						
ANR	9880197	Symbol	* tif		9880089						
ANR	9880198	Symbol	tif -> tif_data		9880089						
ANR	9880199	Symbol	* DecoderState		9880089						
ANR	9880200	Function	TIFFInitLZW	1146:0:30860:32015							
ANR	9880201	FunctionDef	"TIFFInitLZW (TIFF * tif , int scheme)"		9880200	0					
ANR	9880202	CompoundStatement		1148:0:30899:32015	9880200	0					
ANR	9880203	Statement	static	1149:1:30902:30907	9880200	0	True				
ANR	9880204	IdentifierDeclStatement	"const char module [ ] = ""TIFFInitLZW"" ;"	1149:8:30909:30944	9880200	1	True				
ANR	9880205	IdentifierDecl	"module [ ] = ""TIFFInitLZW"""		9880200	0					
ANR	9880206	IdentifierDeclType	const char [ ]		9880200	0					
ANR	9880207	Identifier	module		9880200	1					
ANR	9880208	AssignmentExpression	"module [ ] = ""TIFFInitLZW"""		9880200	2		=			
ANR	9880209	Identifier	module		9880200	0					
ANR	9880210	PrimaryExpression	"""TIFFInitLZW"""		9880200	1					
ANR	9880211	ExpressionStatement	assert ( scheme == COMPRESSION_LZW )	1150:1:30947:30980	9880200	2	True				
ANR	9880212	CallExpression	assert ( scheme == COMPRESSION_LZW )		9880200	0					
ANR	9880213	Callee	assert		9880200	0					
ANR	9880214	Identifier	assert		9880200	0					
ANR	9880215	ArgumentList	scheme == COMPRESSION_LZW		9880200	1					
ANR	9880216	Argument	scheme == COMPRESSION_LZW		9880200	0					
ANR	9880217	EqualityExpression	scheme == COMPRESSION_LZW		9880200	0		==			
ANR	9880218	Identifier	scheme		9880200	0					
ANR	9880219	Identifier	COMPRESSION_LZW		9880200	1					
ANR	9880220	ExpressionStatement	tif -> tif_data = ( uint8 * ) _TIFFmalloc ( sizeof ( LZWCodecState ) )	1154:1:31063:31123	9880200	3	True				
ANR	9880221	AssignmentExpression	tif -> tif_data = ( uint8 * ) _TIFFmalloc ( sizeof ( LZWCodecState ) )		9880200	0		=			
ANR	9880222	PtrMemberAccess	tif -> tif_data		9880200	0					
ANR	9880223	Identifier	tif		9880200	0					
ANR	9880224	Identifier	tif_data		9880200	1					
ANR	9880225	CastExpression	( uint8 * ) _TIFFmalloc ( sizeof ( LZWCodecState ) )		9880200	1					
ANR	9880226	CastTarget	uint8 *		9880200	0					
ANR	9880227	CallExpression	_TIFFmalloc ( sizeof ( LZWCodecState ) )		9880200	1					
ANR	9880228	Callee	_TIFFmalloc		9880200	0					
ANR	9880229	Identifier	_TIFFmalloc		9880200	0					
ANR	9880230	ArgumentList	sizeof ( LZWCodecState )		9880200	1					
ANR	9880231	Argument	sizeof ( LZWCodecState )		9880200	0					
ANR	9880232	SizeofExpression	sizeof ( LZWCodecState )		9880200	0					
ANR	9880233	Sizeof	sizeof		9880200	0					
ANR	9880234	SizeofOperand	LZWCodecState		9880200	1					
ANR	9880235	IfStatement	if ( tif -> tif_data == NULL )		9880200	4					
ANR	9880236	Condition	tif -> tif_data == NULL	1155:5:31130:31150	9880200	0	True				
ANR	9880237	EqualityExpression	tif -> tif_data == NULL		9880200	0		==			
ANR	9880238	PtrMemberAccess	tif -> tif_data		9880200	0					
ANR	9880239	Identifier	tif		9880200	0					
ANR	9880240	Identifier	tif_data		9880200	1					
ANR	9880241	Identifier	NULL		9880200	1					
ANR	9880242	GotoStatement	goto bad ;	1156:2:31155:31163	9880200	1	True				
ANR	9880243	Identifier	bad		9880200	0					
ANR	9880244	ExpressionStatement	DecoderState ( tif ) -> dec_codetab = NULL	1157:1:31166:31203	9880200	5	True				
ANR	9880245	AssignmentExpression	DecoderState ( tif ) -> dec_codetab = NULL		9880200	0		=			
ANR	9880246	PtrMemberAccess	DecoderState ( tif ) -> dec_codetab		9880200	0					
ANR	9880247	CallExpression	DecoderState ( tif )		9880200	0					
ANR	9880248	Callee	DecoderState		9880200	0					
ANR	9880249	Identifier	DecoderState		9880200	0					
ANR	9880250	ArgumentList	tif		9880200	1					
ANR	9880251	Argument	tif		9880200	0					
ANR	9880252	Identifier	tif		9880200	0					
ANR	9880253	Identifier	dec_codetab		9880200	1					
ANR	9880254	Identifier	NULL		9880200	1					
ANR	9880255	ExpressionStatement	DecoderState ( tif ) -> dec_decode = NULL	1158:1:31206:31242	9880200	6	True				
ANR	9880256	AssignmentExpression	DecoderState ( tif ) -> dec_decode = NULL		9880200	0		=			
ANR	9880257	PtrMemberAccess	DecoderState ( tif ) -> dec_decode		9880200	0					
ANR	9880258	CallExpression	DecoderState ( tif )		9880200	0					
ANR	9880259	Callee	DecoderState		9880200	0					
ANR	9880260	Identifier	DecoderState		9880200	0					
ANR	9880261	ArgumentList	tif		9880200	1					
ANR	9880262	Argument	tif		9880200	0					
ANR	9880263	Identifier	tif		9880200	0					
ANR	9880264	Identifier	dec_decode		9880200	1					
ANR	9880265	Identifier	NULL		9880200	1					
ANR	9880266	ExpressionStatement	EncoderState ( tif ) -> enc_hashtab = NULL	1159:1:31245:31282	9880200	7	True				
ANR	9880267	AssignmentExpression	EncoderState ( tif ) -> enc_hashtab = NULL		9880200	0		=			
ANR	9880268	PtrMemberAccess	EncoderState ( tif ) -> enc_hashtab		9880200	0					
ANR	9880269	CallExpression	EncoderState ( tif )		9880200	0					
ANR	9880270	Callee	EncoderState		9880200	0					
ANR	9880271	Identifier	EncoderState		9880200	0					
ANR	9880272	ArgumentList	tif		9880200	1					
ANR	9880273	Argument	tif		9880200	0					
ANR	9880274	Identifier	tif		9880200	0					
ANR	9880275	Identifier	enc_hashtab		9880200	1					
ANR	9880276	Identifier	NULL		9880200	1					
ANR	9880277	ExpressionStatement	LZWState ( tif ) -> rw_mode = tif -> tif_mode	1160:8:31292:31330	9880200	8	True				
ANR	9880278	AssignmentExpression	LZWState ( tif ) -> rw_mode = tif -> tif_mode		9880200	0		=			
ANR	9880279	PtrMemberAccess	LZWState ( tif ) -> rw_mode		9880200	0					
ANR	9880280	CallExpression	LZWState ( tif )		9880200	0					
ANR	9880281	Callee	LZWState		9880200	0					
ANR	9880282	Identifier	LZWState		9880200	0					
ANR	9880283	ArgumentList	tif		9880200	1					
ANR	9880284	Argument	tif		9880200	0					
ANR	9880285	Identifier	tif		9880200	0					
ANR	9880286	Identifier	rw_mode		9880200	1					
ANR	9880287	PtrMemberAccess	tif -> tif_mode		9880200	1					
ANR	9880288	Identifier	tif		9880200	0					
ANR	9880289	Identifier	tif_mode		9880200	1					
ANR	9880290	ExpressionStatement	tif -> tif_fixuptags = LZWFixupTags	1165:1:31370:31403	9880200	9	True				
ANR	9880291	AssignmentExpression	tif -> tif_fixuptags = LZWFixupTags		9880200	0		=			
ANR	9880292	PtrMemberAccess	tif -> tif_fixuptags		9880200	0					
ANR	9880293	Identifier	tif		9880200	0					
ANR	9880294	Identifier	tif_fixuptags		9880200	1					
ANR	9880295	Identifier	LZWFixupTags		9880200	1					
ANR	9880296	ExpressionStatement	tif -> tif_setupdecode = LZWSetupDecode	1166:1:31407:31444	9880200	10	True				
ANR	9880297	AssignmentExpression	tif -> tif_setupdecode = LZWSetupDecode		9880200	0		=			
ANR	9880298	PtrMemberAccess	tif -> tif_setupdecode		9880200	0					
ANR	9880299	Identifier	tif		9880200	0					
ANR	9880300	Identifier	tif_setupdecode		9880200	1					
ANR	9880301	Identifier	LZWSetupDecode		9880200	1					
ANR	9880302	ExpressionStatement	tif -> tif_predecode = LZWPreDecode	1167:1:31447:31480	9880200	11	True				
ANR	9880303	AssignmentExpression	tif -> tif_predecode = LZWPreDecode		9880200	0		=			
ANR	9880304	PtrMemberAccess	tif -> tif_predecode		9880200	0					
ANR	9880305	Identifier	tif		9880200	0					
ANR	9880306	Identifier	tif_predecode		9880200	1					
ANR	9880307	Identifier	LZWPreDecode		9880200	1					
ANR	9880308	ExpressionStatement	tif -> tif_decoderow = LZWDecode	1168:1:31483:31513	9880200	12	True				
ANR	9880309	AssignmentExpression	tif -> tif_decoderow = LZWDecode		9880200	0		=			
ANR	9880310	PtrMemberAccess	tif -> tif_decoderow		9880200	0					
ANR	9880311	Identifier	tif		9880200	0					
ANR	9880312	Identifier	tif_decoderow		9880200	1					
ANR	9880313	Identifier	LZWDecode		9880200	1					
ANR	9880314	ExpressionStatement	tif -> tif_decodestrip = LZWDecode	1169:1:31516:31548	9880200	13	True				
ANR	9880315	AssignmentExpression	tif -> tif_decodestrip = LZWDecode		9880200	0		=			
ANR	9880316	PtrMemberAccess	tif -> tif_decodestrip		9880200	0					
ANR	9880317	Identifier	tif		9880200	0					
ANR	9880318	Identifier	tif_decodestrip		9880200	1					
ANR	9880319	Identifier	LZWDecode		9880200	1					
ANR	9880320	ExpressionStatement	tif -> tif_decodetile = LZWDecode	1170:1:31551:31582	9880200	14	True				
ANR	9880321	AssignmentExpression	tif -> tif_decodetile = LZWDecode		9880200	0		=			
ANR	9880322	PtrMemberAccess	tif -> tif_decodetile		9880200	0					
ANR	9880323	Identifier	tif		9880200	0					
ANR	9880324	Identifier	tif_decodetile		9880200	1					
ANR	9880325	Identifier	LZWDecode		9880200	1					
ANR	9880326	ExpressionStatement	tif -> tif_setupencode = LZWSetupEncode	1171:1:31585:31622	9880200	15	True				
ANR	9880327	AssignmentExpression	tif -> tif_setupencode = LZWSetupEncode		9880200	0		=			
ANR	9880328	PtrMemberAccess	tif -> tif_setupencode		9880200	0					
ANR	9880329	Identifier	tif		9880200	0					
ANR	9880330	Identifier	tif_setupencode		9880200	1					
ANR	9880331	Identifier	LZWSetupEncode		9880200	1					
ANR	9880332	ExpressionStatement	tif -> tif_preencode = LZWPreEncode	1172:1:31625:31658	9880200	16	True				
ANR	9880333	AssignmentExpression	tif -> tif_preencode = LZWPreEncode		9880200	0		=			
ANR	9880334	PtrMemberAccess	tif -> tif_preencode		9880200	0					
ANR	9880335	Identifier	tif		9880200	0					
ANR	9880336	Identifier	tif_preencode		9880200	1					
ANR	9880337	Identifier	LZWPreEncode		9880200	1					
ANR	9880338	ExpressionStatement	tif -> tif_postencode = LZWPostEncode	1173:1:31661:31696	9880200	17	True				
ANR	9880339	AssignmentExpression	tif -> tif_postencode = LZWPostEncode		9880200	0		=			
ANR	9880340	PtrMemberAccess	tif -> tif_postencode		9880200	0					
ANR	9880341	Identifier	tif		9880200	0					
ANR	9880342	Identifier	tif_postencode		9880200	1					
ANR	9880343	Identifier	LZWPostEncode		9880200	1					
ANR	9880344	ExpressionStatement	tif -> tif_encoderow = LZWEncode	1174:1:31699:31729	9880200	18	True				
ANR	9880345	AssignmentExpression	tif -> tif_encoderow = LZWEncode		9880200	0		=			
ANR	9880346	PtrMemberAccess	tif -> tif_encoderow		9880200	0					
ANR	9880347	Identifier	tif		9880200	0					
ANR	9880348	Identifier	tif_encoderow		9880200	1					
ANR	9880349	Identifier	LZWEncode		9880200	1					
ANR	9880350	ExpressionStatement	tif -> tif_encodestrip = LZWEncode	1175:1:31732:31764	9880200	19	True				
ANR	9880351	AssignmentExpression	tif -> tif_encodestrip = LZWEncode		9880200	0		=			
ANR	9880352	PtrMemberAccess	tif -> tif_encodestrip		9880200	0					
ANR	9880353	Identifier	tif		9880200	0					
ANR	9880354	Identifier	tif_encodestrip		9880200	1					
ANR	9880355	Identifier	LZWEncode		9880200	1					
ANR	9880356	ExpressionStatement	tif -> tif_encodetile = LZWEncode	1176:1:31767:31798	9880200	20	True				
ANR	9880357	AssignmentExpression	tif -> tif_encodetile = LZWEncode		9880200	0		=			
ANR	9880358	PtrMemberAccess	tif -> tif_encodetile		9880200	0					
ANR	9880359	Identifier	tif		9880200	0					
ANR	9880360	Identifier	tif_encodetile		9880200	1					
ANR	9880361	Identifier	LZWEncode		9880200	1					
ANR	9880362	ExpressionStatement	tif -> tif_cleanup = LZWCleanup	1177:1:31801:31830	9880200	21	True				
ANR	9880363	AssignmentExpression	tif -> tif_cleanup = LZWCleanup		9880200	0		=			
ANR	9880364	PtrMemberAccess	tif -> tif_cleanup		9880200	0					
ANR	9880365	Identifier	tif		9880200	0					
ANR	9880366	Identifier	tif_cleanup		9880200	1					
ANR	9880367	Identifier	LZWCleanup		9880200	1					
ANR	9880368	ExpressionStatement	( void ) TIFFPredictorInit ( tif )	1181:1:31869:31898	9880200	22	True				
ANR	9880369	CastExpression	( void ) TIFFPredictorInit ( tif )		9880200	0					
ANR	9880370	CastTarget	void		9880200	0					
ANR	9880371	CallExpression	TIFFPredictorInit ( tif )		9880200	1					
ANR	9880372	Callee	TIFFPredictorInit		9880200	0					
ANR	9880373	Identifier	TIFFPredictorInit		9880200	0					
ANR	9880374	ArgumentList	tif		9880200	1					
ANR	9880375	Argument	tif		9880200	0					
ANR	9880376	Identifier	tif		9880200	0					
ANR	9880377	ReturnStatement	return ( 1 ) ;	1182:1:31901:31911	9880200	23	True				
ANR	9880378	PrimaryExpression	1		9880200	0					
ANR	9880379	Label	bad :	1183:0:31913:31916	9880200	24	True				
ANR	9880380	Identifier	bad		9880200	0					
ANR	9880381	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for LZW state block"" )"	1184:1:31919:32000	9880200	25	True				
ANR	9880382	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for LZW state block"" )"		9880200	0					
ANR	9880383	Callee	TIFFErrorExt		9880200	0					
ANR	9880384	Identifier	TIFFErrorExt		9880200	0					
ANR	9880385	ArgumentList	tif -> tif_clientdata		9880200	1					
ANR	9880386	Argument	tif -> tif_clientdata		9880200	0					
ANR	9880387	PtrMemberAccess	tif -> tif_clientdata		9880200	0					
ANR	9880388	Identifier	tif		9880200	0					
ANR	9880389	Identifier	tif_clientdata		9880200	1					
ANR	9880390	Argument	module		9880200	1					
ANR	9880391	Identifier	module		9880200	0					
ANR	9880392	Argument	"""No space for LZW state block"""		9880200	2					
ANR	9880393	PrimaryExpression	"""No space for LZW state block"""		9880200	0					
ANR	9880394	ReturnStatement	return ( 0 ) ;	1186:1:32003:32013	9880200	26	True				
ANR	9880395	PrimaryExpression	0		9880200	0					
ANR	9880396	ReturnType	int		9880200	1					
ANR	9880397	Identifier	TIFFInitLZW		9880200	2					
ANR	9880398	ParameterList	"TIFF * tif , int scheme"		9880200	3					
ANR	9880399	Parameter	TIFF * tif	1147:12:30876:30884	9880200	0	True				
ANR	9880400	ParameterType	TIFF *		9880200	0					
ANR	9880401	Identifier	tif		9880200	1					
ANR	9880402	Parameter	int scheme	1147:23:30887:30896	9880200	1	True				
ANR	9880403	ParameterType	int		9880200	0					
ANR	9880404	Identifier	scheme		9880200	1					
ANR	9880405	CFGEntryNode	ENTRY		9880200		True				
ANR	9880406	CFGExitNode	EXIT		9880200		True				
ANR	9880407	Symbol	LZWPreEncode		9880200						
ANR	9880408	Symbol	tif -> tif_encoderow		9880200						
ANR	9880409	Symbol	scheme		9880200						
ANR	9880410	Symbol	tif -> tif_encodestrip		9880200						
ANR	9880411	Symbol	tif -> tif_postencode		9880200						
ANR	9880412	Symbol	LZWEncode		9880200						
ANR	9880413	Symbol	LZWState		9880200						
ANR	9880414	Symbol	LZWState ( tif ) -> rw_mode		9880200						
ANR	9880415	Symbol	tif		9880200						
ANR	9880416	Symbol	tif -> tif_cleanup		9880200						
ANR	9880417	Symbol	DecoderState		9880200						
ANR	9880418	Symbol	LZWSetupDecode		9880200						
ANR	9880419	Symbol	LZWDecode		9880200						
ANR	9880420	Symbol	LZWPostEncode		9880200						
ANR	9880421	Symbol	tif -> tif_fixuptags		9880200						
ANR	9880422	Symbol	tif -> tif_setupdecode		9880200						
ANR	9880423	Symbol	tif -> tif_preencode		9880200						
ANR	9880424	Symbol	tif -> tif_mode		9880200						
ANR	9880425	Symbol	tif -> tif_decoderow		9880200						
ANR	9880426	Symbol	tif -> tif_decodetile		9880200						
ANR	9880427	Symbol	* LZWState		9880200						
ANR	9880428	Symbol	tif -> tif_data		9880200						
ANR	9880429	Symbol	tif -> tif_decodestrip		9880200						
ANR	9880430	Symbol	* DecoderState		9880200						
ANR	9880431	Symbol	EncoderState		9880200						
ANR	9880432	Symbol	NULL		9880200						
ANR	9880433	Symbol	DecoderState ( tif ) -> dec_decode		9880200						
ANR	9880434	Symbol	COMPRESSION_LZW		9880200						
ANR	9880435	Symbol	module		9880200						
ANR	9880436	Symbol	DecoderState ( tif ) -> dec_codetab		9880200						
ANR	9880437	Symbol	LZWSetupEncode		9880200						
ANR	9880438	Symbol	LZWFixupTags		9880200						
ANR	9880439	Symbol	tif -> tif_clientdata		9880200						
ANR	9880440	Symbol	tif -> tif_encodetile		9880200						
ANR	9880441	Symbol	tif -> tif_setupencode		9880200						
ANR	9880442	Symbol	* EncoderState		9880200						
ANR	9880443	Symbol	EncoderState ( tif ) -> enc_hashtab		9880200						
ANR	9880444	Symbol	LZWPreDecode		9880200						
ANR	9880445	Symbol	_TIFFmalloc		9880200						
ANR	9880446	Symbol	LZWCleanup		9880200						
ANR	9880447	Symbol	* tif		9880200						
ANR	9880448	Symbol	tif -> tif_predecode		9880200						
