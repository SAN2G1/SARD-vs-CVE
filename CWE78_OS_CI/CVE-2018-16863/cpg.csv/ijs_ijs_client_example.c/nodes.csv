command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6001259	File	data/converged/CVE-2018-16863_ghostpdl/ijs_ijs_client_example.c								
ANR	6001260	Function	example_list_params	31:0:1241:2065							
ANR	6001261	FunctionDef	example_list_params (IjsClientCtx * ctx)		6001260	0					
ANR	6001262	CompoundStatement		33:0:1292:2065	6001260	0					
ANR	6001263	IdentifierDeclStatement	int status = 0 ;	34:2:1296:1310	6001260	0	True				
ANR	6001264	IdentifierDecl	status = 0		6001260	0					
ANR	6001265	IdentifierDeclType	int		6001260	0					
ANR	6001266	Identifier	status		6001260	1					
ANR	6001267	AssignmentExpression	status = 0		6001260	2		=			
ANR	6001268	Identifier	status		6001260	0					
ANR	6001269	PrimaryExpression	0		6001260	1					
ANR	6001270	IdentifierDeclStatement	char buf [ 4096 ] ;	35:2:1314:1328	6001260	1	True				
ANR	6001271	IdentifierDecl	buf [ 4096 ]		6001260	0					
ANR	6001272	IdentifierDeclType	char [ 4096 ]		6001260	0					
ANR	6001273	Identifier	buf		6001260	1					
ANR	6001274	PrimaryExpression	4096		6001260	2					
ANR	6001275	IdentifierDeclStatement	char ebuf [ 4096 ] ;	36:2:1332:1347	6001260	2	True				
ANR	6001276	IdentifierDecl	ebuf [ 4096 ]		6001260	0					
ANR	6001277	IdentifierDeclType	char [ 4096 ]		6001260	0					
ANR	6001278	Identifier	ebuf		6001260	1					
ANR	6001279	PrimaryExpression	4096		6001260	2					
ANR	6001280	IdentifierDeclStatement	char * p ;	37:2:1351:1358	6001260	3	True				
ANR	6001281	IdentifierDecl	* p		6001260	0					
ANR	6001282	IdentifierDeclType	char *		6001260	0					
ANR	6001283	Identifier	p		6001260	1					
ANR	6001284	ExpressionStatement	"status = ijs_client_list_params ( ctx , 0 , buf , sizeof ( buf ) - 1 )"	38:2:1362:1424	6001260	4	True				
ANR	6001285	AssignmentExpression	"status = ijs_client_list_params ( ctx , 0 , buf , sizeof ( buf ) - 1 )"		6001260	0		=			
ANR	6001286	Identifier	status		6001260	0					
ANR	6001287	CallExpression	"ijs_client_list_params ( ctx , 0 , buf , sizeof ( buf ) - 1 )"		6001260	1					
ANR	6001288	Callee	ijs_client_list_params		6001260	0					
ANR	6001289	Identifier	ijs_client_list_params		6001260	0					
ANR	6001290	ArgumentList	ctx		6001260	1					
ANR	6001291	Argument	ctx		6001260	0					
ANR	6001292	Identifier	ctx		6001260	0					
ANR	6001293	Argument	0		6001260	1					
ANR	6001294	PrimaryExpression	0		6001260	0					
ANR	6001295	Argument	buf		6001260	2					
ANR	6001296	Identifier	buf		6001260	0					
ANR	6001297	Argument	sizeof ( buf ) - 1		6001260	3					
ANR	6001298	AdditiveExpression	sizeof ( buf ) - 1		6001260	0		-			
ANR	6001299	SizeofExpression	sizeof ( buf )		6001260	0					
ANR	6001300	Sizeof	sizeof		6001260	0					
ANR	6001301	SizeofOperand	buf		6001260	1					
ANR	6001302	PrimaryExpression	1		6001260	1					
ANR	6001303	IfStatement	if ( status >= 0 )		6001260	5					
ANR	6001304	Condition	status >= 0	39:6:1432:1442	6001260	0	True				
ANR	6001305	RelationalExpression	status >= 0		6001260	0		>=			
ANR	6001306	Identifier	status		6001260	0					
ANR	6001307	PrimaryExpression	0		6001260	1					
ANR	6001308	CompoundStatement		8:4:156:156	6001260	1					
ANR	6001309	ExpressionStatement	buf [ status ] = 0	41:6:1457:1472	6001260	0	True				
ANR	6001310	AssignmentExpression	buf [ status ] = 0		6001260	0		=			
ANR	6001311	ArrayIndexing	buf [ status ]		6001260	0					
ANR	6001312	Identifier	buf		6001260	0					
ANR	6001313	Identifier	status		6001260	1					
ANR	6001314	PrimaryExpression	0		6001260	1					
ANR	6001315	ExpressionStatement	"fprintf ( stderr , ""settable params: %s\\n"" , buf )"	42:6:1480:1526	6001260	1	True				
ANR	6001316	CallExpression	"fprintf ( stderr , ""settable params: %s\\n"" , buf )"		6001260	0					
ANR	6001317	Callee	fprintf		6001260	0					
ANR	6001318	Identifier	fprintf		6001260	0					
ANR	6001319	ArgumentList	stderr		6001260	1					
ANR	6001320	Argument	stderr		6001260	0					
ANR	6001321	Identifier	stderr		6001260	0					
ANR	6001322	Argument	"""settable params: %s\\n"""		6001260	1					
ANR	6001323	PrimaryExpression	"""settable params: %s\\n"""		6001260	0					
ANR	6001324	Argument	buf		6001260	2					
ANR	6001325	Identifier	buf		6001260	0					
ANR	6001326	ExpressionStatement	"p = strtok ( buf , "","" )"	43:6:1534:1554	6001260	2	True				
ANR	6001327	AssignmentExpression	"p = strtok ( buf , "","" )"		6001260	0		=			
ANR	6001328	Identifier	p		6001260	0					
ANR	6001329	CallExpression	"strtok ( buf , "","" )"		6001260	1					
ANR	6001330	Callee	strtok		6001260	0					
ANR	6001331	Identifier	strtok		6001260	0					
ANR	6001332	ArgumentList	buf		6001260	1					
ANR	6001333	Argument	buf		6001260	0					
ANR	6001334	Identifier	buf		6001260	0					
ANR	6001335	Argument	""","""		6001260	1					
ANR	6001336	PrimaryExpression	""","""		6001260	0					
ANR	6001337	WhileStatement	while ( p )		6001260	3					
ANR	6001338	Condition	p	44:13:1569:1569	6001260	0	True				
ANR	6001339	Identifier	p		6001260	0					
ANR	6001340	CompoundStatement		13:8:287:287	6001260	1					
ANR	6001341	ExpressionStatement	"status = ijs_client_enum_param ( ctx , 0 , p , ebuf , sizeof ( ebuf ) - 1 )"	46:10:1592:1658	6001260	0	True				
ANR	6001342	AssignmentExpression	"status = ijs_client_enum_param ( ctx , 0 , p , ebuf , sizeof ( ebuf ) - 1 )"		6001260	0		=			
ANR	6001343	Identifier	status		6001260	0					
ANR	6001344	CallExpression	"ijs_client_enum_param ( ctx , 0 , p , ebuf , sizeof ( ebuf ) - 1 )"		6001260	1					
ANR	6001345	Callee	ijs_client_enum_param		6001260	0					
ANR	6001346	Identifier	ijs_client_enum_param		6001260	0					
ANR	6001347	ArgumentList	ctx		6001260	1					
ANR	6001348	Argument	ctx		6001260	0					
ANR	6001349	Identifier	ctx		6001260	0					
ANR	6001350	Argument	0		6001260	1					
ANR	6001351	PrimaryExpression	0		6001260	0					
ANR	6001352	Argument	p		6001260	2					
ANR	6001353	Identifier	p		6001260	0					
ANR	6001354	Argument	ebuf		6001260	3					
ANR	6001355	Identifier	ebuf		6001260	0					
ANR	6001356	Argument	sizeof ( ebuf ) - 1		6001260	4					
ANR	6001357	AdditiveExpression	sizeof ( ebuf ) - 1		6001260	0		-			
ANR	6001358	SizeofExpression	sizeof ( ebuf )		6001260	0					
ANR	6001359	Sizeof	sizeof		6001260	0					
ANR	6001360	SizeofOperand	ebuf		6001260	1					
ANR	6001361	PrimaryExpression	1		6001260	1					
ANR	6001362	IfStatement	if ( status >= 0 )		6001260	1					
ANR	6001363	Condition	status >= 0	47:14:1674:1684	6001260	0	True				
ANR	6001364	RelationalExpression	status >= 0		6001260	0		>=			
ANR	6001365	Identifier	status		6001260	0					
ANR	6001366	PrimaryExpression	0		6001260	1					
ANR	6001367	CompoundStatement		16:12:406:406	6001260	1					
ANR	6001368	ExpressionStatement	ebuf [ status ] = 0	49:14:1715:1731	6001260	0	True				
ANR	6001369	AssignmentExpression	ebuf [ status ] = 0		6001260	0		=			
ANR	6001370	ArrayIndexing	ebuf [ status ]		6001260	0					
ANR	6001371	Identifier	ebuf		6001260	0					
ANR	6001372	Identifier	status		6001260	1					
ANR	6001373	PrimaryExpression	0		6001260	1					
ANR	6001374	ExpressionStatement	"fprintf ( stderr , ""  %s: %s\\n"" , p , ebuf )"	50:14:1747:1786	6001260	1	True				
ANR	6001375	CallExpression	"fprintf ( stderr , ""  %s: %s\\n"" , p , ebuf )"		6001260	0					
ANR	6001376	Callee	fprintf		6001260	0					
ANR	6001377	Identifier	fprintf		6001260	0					
ANR	6001378	ArgumentList	stderr		6001260	1					
ANR	6001379	Argument	stderr		6001260	0					
ANR	6001380	Identifier	stderr		6001260	0					
ANR	6001381	Argument	"""  %s: %s\\n"""		6001260	1					
ANR	6001382	PrimaryExpression	"""  %s: %s\\n"""		6001260	0					
ANR	6001383	Argument	p		6001260	2					
ANR	6001384	Identifier	p		6001260	0					
ANR	6001385	Argument	ebuf		6001260	3					
ANR	6001386	Identifier	ebuf		6001260	0					
ANR	6001387	ElseStatement	else		6001260	0					
ANR	6001388	CompoundStatement		21:12:536:536	6001260	0					
ANR	6001389	ExpressionStatement	"fprintf ( stderr , ""Error %d getting param %s\\n"" , status , p )"	54:14:1845:1903	6001260	0	True				
ANR	6001390	CallExpression	"fprintf ( stderr , ""Error %d getting param %s\\n"" , status , p )"		6001260	0					
ANR	6001391	Callee	fprintf		6001260	0					
ANR	6001392	Identifier	fprintf		6001260	0					
ANR	6001393	ArgumentList	stderr		6001260	1					
ANR	6001394	Argument	stderr		6001260	0					
ANR	6001395	Identifier	stderr		6001260	0					
ANR	6001396	Argument	"""Error %d getting param %s\\n"""		6001260	1					
ANR	6001397	PrimaryExpression	"""Error %d getting param %s\\n"""		6001260	0					
ANR	6001398	Argument	status		6001260	2					
ANR	6001399	Identifier	status		6001260	0					
ANR	6001400	Argument	p		6001260	3					
ANR	6001401	Identifier	p		6001260	0					
ANR	6001402	ExpressionStatement	"p = strtok ( NULL , "","" )"	56:10:1929:1950	6001260	2	True				
ANR	6001403	AssignmentExpression	"p = strtok ( NULL , "","" )"		6001260	0		=			
ANR	6001404	Identifier	p		6001260	0					
ANR	6001405	CallExpression	"strtok ( NULL , "","" )"		6001260	1					
ANR	6001406	Callee	strtok		6001260	0					
ANR	6001407	Identifier	strtok		6001260	0					
ANR	6001408	ArgumentList	NULL		6001260	1					
ANR	6001409	Argument	NULL		6001260	0					
ANR	6001410	Identifier	NULL		6001260	0					
ANR	6001411	Argument	""","""		6001260	1					
ANR	6001412	PrimaryExpression	""","""		6001260	0					
ANR	6001413	ElseStatement	else		6001260	0					
ANR	6001414	CompoundStatement		28:4:686:686	6001260	0					
ANR	6001415	ExpressionStatement	"fprintf ( stderr , ""Error %d listing params\\n"" , status )"	61:6:1987:2040	6001260	0	True				
ANR	6001416	CallExpression	"fprintf ( stderr , ""Error %d listing params\\n"" , status )"		6001260	0					
ANR	6001417	Callee	fprintf		6001260	0					
ANR	6001418	Identifier	fprintf		6001260	0					
ANR	6001419	ArgumentList	stderr		6001260	1					
ANR	6001420	Argument	stderr		6001260	0					
ANR	6001421	Identifier	stderr		6001260	0					
ANR	6001422	Argument	"""Error %d listing params\\n"""		6001260	1					
ANR	6001423	PrimaryExpression	"""Error %d listing params\\n"""		6001260	0					
ANR	6001424	Argument	status		6001260	2					
ANR	6001425	Identifier	status		6001260	0					
ANR	6001426	ReturnStatement	return status ;	63:2:2050:2063	6001260	6	True				
ANR	6001427	Identifier	status		6001260	0					
ANR	6001428	ReturnType	static int		6001260	1					
ANR	6001429	Identifier	example_list_params		6001260	2					
ANR	6001430	ParameterList	IjsClientCtx * ctx		6001260	3					
ANR	6001431	Parameter	IjsClientCtx * ctx	32:21:1273:1289	6001260	0	True				
ANR	6001432	ParameterType	IjsClientCtx *		6001260	0					
ANR	6001433	Identifier	ctx		6001260	1					
ANR	6001434	CFGEntryNode	ENTRY		6001260		True				
ANR	6001435	CFGExitNode	EXIT		6001260		True				
ANR	6001436	Symbol	ijs_client_enum_param		6001260						
ANR	6001437	Symbol	ebuf		6001260						
ANR	6001438	Symbol	* buf		6001260						
ANR	6001439	Symbol	NULL		6001260						
ANR	6001440	Symbol	ctx		6001260						
ANR	6001441	Symbol	ijs_client_list_params		6001260						
ANR	6001442	Symbol	strtok		6001260						
ANR	6001443	Symbol	stderr		6001260						
ANR	6001444	Symbol	* status		6001260						
ANR	6001445	Symbol	p		6001260						
ANR	6001446	Symbol	buf		6001260						
ANR	6001447	Symbol	* ebuf		6001260						
ANR	6001448	Symbol	status		6001260						
ANR	6001449	Function	send_pnm_file	66:0:2068:4363							
ANR	6001450	FunctionDef	"send_pnm_file (IjsClientCtx * ctx , FILE * f , int xres , int yres)"		6001449	0					
ANR	6001451	CompoundStatement		68:0:2142:4363	6001449	0					
ANR	6001452	IdentifierDeclStatement	"int width , height ;"	69:2:2146:2163	6001449	0	True				
ANR	6001453	IdentifierDecl	width		6001449	0					
ANR	6001454	IdentifierDeclType	int		6001449	0					
ANR	6001455	Identifier	width		6001449	1					
ANR	6001456	IdentifierDecl	height		6001449	1					
ANR	6001457	IdentifierDeclType	int		6001449	0					
ANR	6001458	Identifier	height		6001449	1					
ANR	6001459	IdentifierDeclStatement	"char * lp , type ;"	70:2:2167:2181	6001449	1	True				
ANR	6001460	IdentifierDecl	* lp		6001449	0					
ANR	6001461	IdentifierDeclType	char *		6001449	0					
ANR	6001462	Identifier	lp		6001449	1					
ANR	6001463	IdentifierDecl	type		6001449	1					
ANR	6001464	IdentifierDeclType	char		6001449	0					
ANR	6001465	Identifier	type		6001449	1					
ANR	6001466	IdentifierDeclStatement	"int total_bytes , bytes_left ;"	71:2:2185:2212	6001449	2	True				
ANR	6001467	IdentifierDecl	total_bytes		6001449	0					
ANR	6001468	IdentifierDeclType	int		6001449	0					
ANR	6001469	Identifier	total_bytes		6001449	1					
ANR	6001470	IdentifierDecl	bytes_left		6001449	1					
ANR	6001471	IdentifierDeclType	int		6001449	0					
ANR	6001472	Identifier	bytes_left		6001449	1					
ANR	6001473	IdentifierDeclStatement	"int n_chan , bps ;"	72:2:2216:2231	6001449	3	True				
ANR	6001474	IdentifierDecl	n_chan		6001449	0					
ANR	6001475	IdentifierDeclType	int		6001449	0					
ANR	6001476	Identifier	n_chan		6001449	1					
ANR	6001477	IdentifierDecl	bps		6001449	1					
ANR	6001478	IdentifierDeclType	int		6001449	0					
ANR	6001479	Identifier	bps		6001449	1					
ANR	6001480	IdentifierDeclStatement	char buf [ 4096 ] ;	73:2:2235:2249	6001449	4	True				
ANR	6001481	IdentifierDecl	buf [ 4096 ]		6001449	0					
ANR	6001482	IdentifierDeclType	char [ 4096 ]		6001449	0					
ANR	6001483	Identifier	buf		6001449	1					
ANR	6001484	PrimaryExpression	4096		6001449	2					
ANR	6001485	IdentifierDeclStatement	int status = 0 ;	74:2:2253:2267	6001449	5	True				
ANR	6001486	IdentifierDecl	status = 0		6001449	0					
ANR	6001487	IdentifierDeclType	int		6001449	0					
ANR	6001488	Identifier	status		6001449	1					
ANR	6001489	AssignmentExpression	status = 0		6001449	2		=			
ANR	6001490	Identifier	status		6001449	0					
ANR	6001491	PrimaryExpression	0		6001449	1					
ANR	6001492	ExpressionStatement	"lp = fgets ( buf , sizeof ( buf ) , f )"	76:2:2272:2304	6001449	6	True				
ANR	6001493	AssignmentExpression	"lp = fgets ( buf , sizeof ( buf ) , f )"		6001449	0		=			
ANR	6001494	Identifier	lp		6001449	0					
ANR	6001495	CallExpression	"fgets ( buf , sizeof ( buf ) , f )"		6001449	1					
ANR	6001496	Callee	fgets		6001449	0					
ANR	6001497	Identifier	fgets		6001449	0					
ANR	6001498	ArgumentList	buf		6001449	1					
ANR	6001499	Argument	buf		6001449	0					
ANR	6001500	Identifier	buf		6001449	0					
ANR	6001501	Argument	sizeof ( buf )		6001449	1					
ANR	6001502	SizeofExpression	sizeof ( buf )		6001449	0					
ANR	6001503	Sizeof	sizeof		6001449	0					
ANR	6001504	SizeofOperand	buf		6001449	1					
ANR	6001505	Argument	f		6001449	2					
ANR	6001506	Identifier	f		6001449	0					
ANR	6001507	IfStatement	if ( lp == NULL )		6001449	7					
ANR	6001508	Condition	lp == NULL	77:6:2312:2321	6001449	0	True				
ANR	6001509	EqualityExpression	lp == NULL		6001449	0		==			
ANR	6001510	Identifier	lp		6001449	0					
ANR	6001511	Identifier	NULL		6001449	1					
ANR	6001512	CompoundStatement		11:4:185:185	6001449	1					
ANR	6001513	ExpressionStatement	"fprintf ( stderr , ""error reading file\\n"" )"	79:6:2336:2376	6001449	0	True				
ANR	6001514	CallExpression	"fprintf ( stderr , ""error reading file\\n"" )"		6001449	0					
ANR	6001515	Callee	fprintf		6001449	0					
ANR	6001516	Identifier	fprintf		6001449	0					
ANR	6001517	ArgumentList	stderr		6001449	1					
ANR	6001518	Argument	stderr		6001449	0					
ANR	6001519	Identifier	stderr		6001449	0					
ANR	6001520	Argument	"""error reading file\\n"""		6001449	1					
ANR	6001521	PrimaryExpression	"""error reading file\\n"""		6001449	0					
ANR	6001522	ReturnStatement	return 1 ;	80:6:2384:2392	6001449	1	True				
ANR	6001523	PrimaryExpression	1		6001449	0					
ANR	6001524	IfStatement	if ( lp [ 0 ] != 'P' || lp [ 1 ] < '4' || lp [ 1 ] > '6' )		6001449	8					
ANR	6001525	Condition	lp [ 0 ] != 'P' || lp [ 1 ] < '4' || lp [ 1 ] > '6'	82:6:2406:2447	6001449	0	True				
ANR	6001526	OrExpression	lp [ 0 ] != 'P' || lp [ 1 ] < '4' || lp [ 1 ] > '6'		6001449	0		||			
ANR	6001527	EqualityExpression	lp [ 0 ] != 'P'		6001449	0		!=			
ANR	6001528	ArrayIndexing	lp [ 0 ]		6001449	0					
ANR	6001529	Identifier	lp		6001449	0					
ANR	6001530	PrimaryExpression	0		6001449	1					
ANR	6001531	PrimaryExpression	'P'		6001449	1					
ANR	6001532	OrExpression	lp [ 1 ] < '4' || lp [ 1 ] > '6'		6001449	1		||			
ANR	6001533	RelationalExpression	lp [ 1 ] < '4'		6001449	0		<			
ANR	6001534	ArrayIndexing	lp [ 1 ]		6001449	0					
ANR	6001535	Identifier	lp		6001449	0					
ANR	6001536	PrimaryExpression	1		6001449	1					
ANR	6001537	PrimaryExpression	'4'		6001449	1					
ANR	6001538	RelationalExpression	lp [ 1 ] > '6'		6001449	1		>			
ANR	6001539	ArrayIndexing	lp [ 1 ]		6001449	0					
ANR	6001540	Identifier	lp		6001449	0					
ANR	6001541	PrimaryExpression	1		6001449	1					
ANR	6001542	PrimaryExpression	'6'		6001449	1					
ANR	6001543	CompoundStatement		16:4:311:311	6001449	1					
ANR	6001544	ExpressionStatement	"fprintf ( stderr , ""need pnmraw file\\n"" )"	84:6:2462:2500	6001449	0	True				
ANR	6001545	CallExpression	"fprintf ( stderr , ""need pnmraw file\\n"" )"		6001449	0					
ANR	6001546	Callee	fprintf		6001449	0					
ANR	6001547	Identifier	fprintf		6001449	0					
ANR	6001548	ArgumentList	stderr		6001449	1					
ANR	6001549	Argument	stderr		6001449	0					
ANR	6001550	Identifier	stderr		6001449	0					
ANR	6001551	Argument	"""need pnmraw file\\n"""		6001449	1					
ANR	6001552	PrimaryExpression	"""need pnmraw file\\n"""		6001449	0					
ANR	6001553	ReturnStatement	return 1 ;	85:6:2508:2516	6001449	1	True				
ANR	6001554	PrimaryExpression	1		6001449	0					
ANR	6001555	ExpressionStatement	type = lp [ 1 ]	87:2:2526:2538	6001449	9	True				
ANR	6001556	AssignmentExpression	type = lp [ 1 ]		6001449	0		=			
ANR	6001557	Identifier	type		6001449	0					
ANR	6001558	ArrayIndexing	lp [ 1 ]		6001449	1					
ANR	6001559	Identifier	lp		6001449	0					
ANR	6001560	PrimaryExpression	1		6001449	1					
ANR	6001561	DoStatement	do		6001449	10					
ANR	6001562	CompoundStatement		22:4:406:406	6001449	0					
ANR	6001563	ExpressionStatement	"lp = fgets ( buf , sizeof ( buf ) , f )"	90:6:2557:2589	6001449	0	True				
ANR	6001564	AssignmentExpression	"lp = fgets ( buf , sizeof ( buf ) , f )"		6001449	0		=			
ANR	6001565	Identifier	lp		6001449	0					
ANR	6001566	CallExpression	"fgets ( buf , sizeof ( buf ) , f )"		6001449	1					
ANR	6001567	Callee	fgets		6001449	0					
ANR	6001568	Identifier	fgets		6001449	0					
ANR	6001569	ArgumentList	buf		6001449	1					
ANR	6001570	Argument	buf		6001449	0					
ANR	6001571	Identifier	buf		6001449	0					
ANR	6001572	Argument	sizeof ( buf )		6001449	1					
ANR	6001573	SizeofExpression	sizeof ( buf )		6001449	0					
ANR	6001574	Sizeof	sizeof		6001449	0					
ANR	6001575	SizeofOperand	buf		6001449	1					
ANR	6001576	Argument	f		6001449	2					
ANR	6001577	Identifier	f		6001449	0					
ANR	6001578	Condition	lp != NULL && lp [ 0 ] == '#'	92:9:2606:2631	6001449	1	True				
ANR	6001579	AndExpression	lp != NULL && lp [ 0 ] == '#'		6001449	0		&&			
ANR	6001580	EqualityExpression	lp != NULL		6001449	0		!=			
ANR	6001581	Identifier	lp		6001449	0					
ANR	6001582	Identifier	NULL		6001449	1					
ANR	6001583	EqualityExpression	lp [ 0 ] == '#'		6001449	1		==			
ANR	6001584	ArrayIndexing	lp [ 0 ]		6001449	0					
ANR	6001585	Identifier	lp		6001449	0					
ANR	6001586	PrimaryExpression	0		6001449	1					
ANR	6001587	PrimaryExpression	'#'		6001449	1					
ANR	6001588	IfStatement	"if ( sscanf ( lp , ""%d %d"" , & width , & height ) != 2 )"		6001449	11					
ANR	6001589	Condition	"sscanf ( lp , ""%d %d"" , & width , & height ) != 2"	93:6:2641:2682	6001449	0	True				
ANR	6001590	EqualityExpression	"sscanf ( lp , ""%d %d"" , & width , & height ) != 2"		6001449	0		!=			
ANR	6001591	CallExpression	"sscanf ( lp , ""%d %d"" , & width , & height )"		6001449	0					
ANR	6001592	Callee	sscanf		6001449	0					
ANR	6001593	Identifier	sscanf		6001449	0					
ANR	6001594	ArgumentList	lp		6001449	1					
ANR	6001595	Argument	lp		6001449	0					
ANR	6001596	Identifier	lp		6001449	0					
ANR	6001597	Argument	"""%d %d"""		6001449	1					
ANR	6001598	PrimaryExpression	"""%d %d"""		6001449	0					
ANR	6001599	Argument	& width		6001449	2					
ANR	6001600	UnaryOperationExpression	& width		6001449	0					
ANR	6001601	UnaryOperator	&		6001449	0					
ANR	6001602	Identifier	width		6001449	1					
ANR	6001603	Argument	& height		6001449	3					
ANR	6001604	UnaryOperationExpression	& height		6001449	0					
ANR	6001605	UnaryOperator	&		6001449	0					
ANR	6001606	Identifier	height		6001449	1					
ANR	6001607	PrimaryExpression	2		6001449	1					
ANR	6001608	CompoundStatement		27:4:546:546	6001449	1					
ANR	6001609	ExpressionStatement	"fprintf ( stderr , ""format error\\n"" )"	95:6:2697:2731	6001449	0	True				
ANR	6001610	CallExpression	"fprintf ( stderr , ""format error\\n"" )"		6001449	0					
ANR	6001611	Callee	fprintf		6001449	0					
ANR	6001612	Identifier	fprintf		6001449	0					
ANR	6001613	ArgumentList	stderr		6001449	1					
ANR	6001614	Argument	stderr		6001449	0					
ANR	6001615	Identifier	stderr		6001449	0					
ANR	6001616	Argument	"""format error\\n"""		6001449	1					
ANR	6001617	PrimaryExpression	"""format error\\n"""		6001449	0					
ANR	6001618	ReturnStatement	return 1 ;	96:6:2739:2747	6001449	1	True				
ANR	6001619	PrimaryExpression	1		6001449	0					
ANR	6001620	IfStatement	if ( type >= '5' )		6001449	12					
ANR	6001621	Condition	type >= '5'	98:6:2761:2771	6001449	0	True				
ANR	6001622	RelationalExpression	type >= '5'		6001449	0		>=			
ANR	6001623	Identifier	type		6001449	0					
ANR	6001624	PrimaryExpression	'5'		6001449	1					
ANR	6001625	CompoundStatement		32:4:635:635	6001449	1					
ANR	6001626	DoStatement	do		6001449	0					
ANR	6001627	CompoundStatement		35:8:677:677	6001449	0					
ANR	6001628	ExpressionStatement	"lp = fgets ( buf , sizeof ( buf ) , f )"	103:10:2832:2864	6001449	0	True				
ANR	6001629	AssignmentExpression	"lp = fgets ( buf , sizeof ( buf ) , f )"		6001449	0		=			
ANR	6001630	Identifier	lp		6001449	0					
ANR	6001631	CallExpression	"fgets ( buf , sizeof ( buf ) , f )"		6001449	1					
ANR	6001632	Callee	fgets		6001449	0					
ANR	6001633	Identifier	fgets		6001449	0					
ANR	6001634	ArgumentList	buf		6001449	1					
ANR	6001635	Argument	buf		6001449	0					
ANR	6001636	Identifier	buf		6001449	0					
ANR	6001637	Argument	sizeof ( buf )		6001449	1					
ANR	6001638	SizeofExpression	sizeof ( buf )		6001449	0					
ANR	6001639	Sizeof	sizeof		6001449	0					
ANR	6001640	SizeofOperand	buf		6001449	1					
ANR	6001641	Argument	f		6001449	2					
ANR	6001642	Identifier	f		6001449	0					
ANR	6001643	Condition	lp != NULL && lp [ 0 ] == '#'	105:13:2889:2914	6001449	1	True				
ANR	6001644	AndExpression	lp != NULL && lp [ 0 ] == '#'		6001449	0		&&			
ANR	6001645	EqualityExpression	lp != NULL		6001449	0		!=			
ANR	6001646	Identifier	lp		6001449	0					
ANR	6001647	Identifier	NULL		6001449	1					
ANR	6001648	EqualityExpression	lp [ 0 ] == '#'		6001449	1		==			
ANR	6001649	ArrayIndexing	lp [ 0 ]		6001449	0					
ANR	6001650	Identifier	lp		6001449	0					
ANR	6001651	PrimaryExpression	0		6001449	1					
ANR	6001652	PrimaryExpression	'#'		6001449	1					
ANR	6001653	ExpressionStatement	n_chan = ( type == '6' ) ? 3 : 1	108:2:2927:2957	6001449	13	True				
ANR	6001654	AssignmentExpression	n_chan = ( type == '6' ) ? 3 : 1		6001449	0		=			
ANR	6001655	Identifier	n_chan		6001449	0					
ANR	6001656	ConditionalExpression	( type == '6' ) ? 3 : 1		6001449	1					
ANR	6001657	Condition	type == '6'		6001449	0					
ANR	6001658	EqualityExpression	type == '6'		6001449	0		==			
ANR	6001659	Identifier	type		6001449	0					
ANR	6001660	PrimaryExpression	'6'		6001449	1					
ANR	6001661	PrimaryExpression	3		6001449	1					
ANR	6001662	PrimaryExpression	1		6001449	2					
ANR	6001663	ExpressionStatement	bps = ( type == '4' ) ? 1 : 8	109:2:2961:2988	6001449	14	True				
ANR	6001664	AssignmentExpression	bps = ( type == '4' ) ? 1 : 8		6001449	0		=			
ANR	6001665	Identifier	bps		6001449	0					
ANR	6001666	ConditionalExpression	( type == '4' ) ? 1 : 8		6001449	1					
ANR	6001667	Condition	type == '4'		6001449	0					
ANR	6001668	EqualityExpression	type == '4'		6001449	0		==			
ANR	6001669	Identifier	type		6001449	0					
ANR	6001670	PrimaryExpression	'4'		6001449	1					
ANR	6001671	PrimaryExpression	1		6001449	1					
ANR	6001672	PrimaryExpression	8		6001449	2					
ANR	6001673	ExpressionStatement	"sprintf ( buf , ""%d"" , n_chan )"	113:2:3078:3105	6001449	15	True				
ANR	6001674	CallExpression	"sprintf ( buf , ""%d"" , n_chan )"		6001449	0					
ANR	6001675	Callee	sprintf		6001449	0					
ANR	6001676	Identifier	sprintf		6001449	0					
ANR	6001677	ArgumentList	buf		6001449	1					
ANR	6001678	Argument	buf		6001449	0					
ANR	6001679	Identifier	buf		6001449	0					
ANR	6001680	Argument	"""%d"""		6001449	1					
ANR	6001681	PrimaryExpression	"""%d"""		6001449	0					
ANR	6001682	Argument	n_chan		6001449	2					
ANR	6001683	Identifier	n_chan		6001449	0					
ANR	6001684	ExpressionStatement	"ijs_client_set_param ( ctx , 0 , ""NumChan"" , buf , strlen ( buf ) )"	114:2:3109:3168	6001449	16	True				
ANR	6001685	CallExpression	"ijs_client_set_param ( ctx , 0 , ""NumChan"" , buf , strlen ( buf ) )"		6001449	0					
ANR	6001686	Callee	ijs_client_set_param		6001449	0					
ANR	6001687	Identifier	ijs_client_set_param		6001449	0					
ANR	6001688	ArgumentList	ctx		6001449	1					
ANR	6001689	Argument	ctx		6001449	0					
ANR	6001690	Identifier	ctx		6001449	0					
ANR	6001691	Argument	0		6001449	1					
ANR	6001692	PrimaryExpression	0		6001449	0					
ANR	6001693	Argument	"""NumChan"""		6001449	2					
ANR	6001694	PrimaryExpression	"""NumChan"""		6001449	0					
ANR	6001695	Argument	buf		6001449	3					
ANR	6001696	Identifier	buf		6001449	0					
ANR	6001697	Argument	strlen ( buf )		6001449	4					
ANR	6001698	CallExpression	strlen ( buf )		6001449	0					
ANR	6001699	Callee	strlen		6001449	0					
ANR	6001700	Identifier	strlen		6001449	0					
ANR	6001701	ArgumentList	buf		6001449	1					
ANR	6001702	Argument	buf		6001449	0					
ANR	6001703	Identifier	buf		6001449	0					
ANR	6001704	ExpressionStatement	"sprintf ( buf , ""%d"" , bps )"	115:2:3172:3196	6001449	17	True				
ANR	6001705	CallExpression	"sprintf ( buf , ""%d"" , bps )"		6001449	0					
ANR	6001706	Callee	sprintf		6001449	0					
ANR	6001707	Identifier	sprintf		6001449	0					
ANR	6001708	ArgumentList	buf		6001449	1					
ANR	6001709	Argument	buf		6001449	0					
ANR	6001710	Identifier	buf		6001449	0					
ANR	6001711	Argument	"""%d"""		6001449	1					
ANR	6001712	PrimaryExpression	"""%d"""		6001449	0					
ANR	6001713	Argument	bps		6001449	2					
ANR	6001714	Identifier	bps		6001449	0					
ANR	6001715	ExpressionStatement	"ijs_client_set_param ( ctx , 0 , ""BitsPerSample"" , buf , strlen ( buf ) )"	116:2:3200:3265	6001449	18	True				
ANR	6001716	CallExpression	"ijs_client_set_param ( ctx , 0 , ""BitsPerSample"" , buf , strlen ( buf ) )"		6001449	0					
ANR	6001717	Callee	ijs_client_set_param		6001449	0					
ANR	6001718	Identifier	ijs_client_set_param		6001449	0					
ANR	6001719	ArgumentList	ctx		6001449	1					
ANR	6001720	Argument	ctx		6001449	0					
ANR	6001721	Identifier	ctx		6001449	0					
ANR	6001722	Argument	0		6001449	1					
ANR	6001723	PrimaryExpression	0		6001449	0					
ANR	6001724	Argument	"""BitsPerSample"""		6001449	2					
ANR	6001725	PrimaryExpression	"""BitsPerSample"""		6001449	0					
ANR	6001726	Argument	buf		6001449	3					
ANR	6001727	Identifier	buf		6001449	0					
ANR	6001728	Argument	strlen ( buf )		6001449	4					
ANR	6001729	CallExpression	strlen ( buf )		6001449	0					
ANR	6001730	Callee	strlen		6001449	0					
ANR	6001731	Identifier	strlen		6001449	0					
ANR	6001732	ArgumentList	buf		6001449	1					
ANR	6001733	Argument	buf		6001449	0					
ANR	6001734	Identifier	buf		6001449	0					
ANR	6001735	ExpressionStatement	"strcpy ( buf , ( n_chan == 3 ) ? ""DeviceRGB"" : ""DeviceGray"" )"	117:2:3269:3325	6001449	19	True				
ANR	6001736	CallExpression	"strcpy ( buf , ( n_chan == 3 ) ? ""DeviceRGB"" : ""DeviceGray"" )"		6001449	0					
ANR	6001737	Callee	strcpy		6001449	0					
ANR	6001738	Identifier	strcpy		6001449	0					
ANR	6001739	ArgumentList	buf		6001449	1					
ANR	6001740	Argument	buf		6001449	0					
ANR	6001741	Identifier	buf		6001449	0					
ANR	6001742	Argument	"( n_chan == 3 ) ? ""DeviceRGB"" : ""DeviceGray"""		6001449	1					
ANR	6001743	ConditionalExpression	"( n_chan == 3 ) ? ""DeviceRGB"" : ""DeviceGray"""		6001449	0					
ANR	6001744	Condition	n_chan == 3		6001449	0					
ANR	6001745	EqualityExpression	n_chan == 3		6001449	0		==			
ANR	6001746	Identifier	n_chan		6001449	0					
ANR	6001747	PrimaryExpression	3		6001449	1					
ANR	6001748	PrimaryExpression	"""DeviceRGB"""		6001449	1					
ANR	6001749	PrimaryExpression	"""DeviceGray"""		6001449	2					
ANR	6001750	ExpressionStatement	"ijs_client_set_param ( ctx , 0 , ""ColorSpace"" , buf , strlen ( buf ) )"	118:2:3329:3391	6001449	20	True				
ANR	6001751	CallExpression	"ijs_client_set_param ( ctx , 0 , ""ColorSpace"" , buf , strlen ( buf ) )"		6001449	0					
ANR	6001752	Callee	ijs_client_set_param		6001449	0					
ANR	6001753	Identifier	ijs_client_set_param		6001449	0					
ANR	6001754	ArgumentList	ctx		6001449	1					
ANR	6001755	Argument	ctx		6001449	0					
ANR	6001756	Identifier	ctx		6001449	0					
ANR	6001757	Argument	0		6001449	1					
ANR	6001758	PrimaryExpression	0		6001449	0					
ANR	6001759	Argument	"""ColorSpace"""		6001449	2					
ANR	6001760	PrimaryExpression	"""ColorSpace"""		6001449	0					
ANR	6001761	Argument	buf		6001449	3					
ANR	6001762	Identifier	buf		6001449	0					
ANR	6001763	Argument	strlen ( buf )		6001449	4					
ANR	6001764	CallExpression	strlen ( buf )		6001449	0					
ANR	6001765	Callee	strlen		6001449	0					
ANR	6001766	Identifier	strlen		6001449	0					
ANR	6001767	ArgumentList	buf		6001449	1					
ANR	6001768	Argument	buf		6001449	0					
ANR	6001769	Identifier	buf		6001449	0					
ANR	6001770	ExpressionStatement	"sprintf ( buf , ""%d"" , width )"	119:2:3395:3421	6001449	21	True				
ANR	6001771	CallExpression	"sprintf ( buf , ""%d"" , width )"		6001449	0					
ANR	6001772	Callee	sprintf		6001449	0					
ANR	6001773	Identifier	sprintf		6001449	0					
ANR	6001774	ArgumentList	buf		6001449	1					
ANR	6001775	Argument	buf		6001449	0					
ANR	6001776	Identifier	buf		6001449	0					
ANR	6001777	Argument	"""%d"""		6001449	1					
ANR	6001778	PrimaryExpression	"""%d"""		6001449	0					
ANR	6001779	Argument	width		6001449	2					
ANR	6001780	Identifier	width		6001449	0					
ANR	6001781	ExpressionStatement	"ijs_client_set_param ( ctx , 0 , ""Width"" , buf , strlen ( buf ) )"	120:2:3425:3482	6001449	22	True				
ANR	6001782	CallExpression	"ijs_client_set_param ( ctx , 0 , ""Width"" , buf , strlen ( buf ) )"		6001449	0					
ANR	6001783	Callee	ijs_client_set_param		6001449	0					
ANR	6001784	Identifier	ijs_client_set_param		6001449	0					
ANR	6001785	ArgumentList	ctx		6001449	1					
ANR	6001786	Argument	ctx		6001449	0					
ANR	6001787	Identifier	ctx		6001449	0					
ANR	6001788	Argument	0		6001449	1					
ANR	6001789	PrimaryExpression	0		6001449	0					
ANR	6001790	Argument	"""Width"""		6001449	2					
ANR	6001791	PrimaryExpression	"""Width"""		6001449	0					
ANR	6001792	Argument	buf		6001449	3					
ANR	6001793	Identifier	buf		6001449	0					
ANR	6001794	Argument	strlen ( buf )		6001449	4					
ANR	6001795	CallExpression	strlen ( buf )		6001449	0					
ANR	6001796	Callee	strlen		6001449	0					
ANR	6001797	Identifier	strlen		6001449	0					
ANR	6001798	ArgumentList	buf		6001449	1					
ANR	6001799	Argument	buf		6001449	0					
ANR	6001800	Identifier	buf		6001449	0					
ANR	6001801	ExpressionStatement	"sprintf ( buf , ""%d"" , height )"	121:2:3486:3513	6001449	23	True				
ANR	6001802	CallExpression	"sprintf ( buf , ""%d"" , height )"		6001449	0					
ANR	6001803	Callee	sprintf		6001449	0					
ANR	6001804	Identifier	sprintf		6001449	0					
ANR	6001805	ArgumentList	buf		6001449	1					
ANR	6001806	Argument	buf		6001449	0					
ANR	6001807	Identifier	buf		6001449	0					
ANR	6001808	Argument	"""%d"""		6001449	1					
ANR	6001809	PrimaryExpression	"""%d"""		6001449	0					
ANR	6001810	Argument	height		6001449	2					
ANR	6001811	Identifier	height		6001449	0					
ANR	6001812	ExpressionStatement	"ijs_client_set_param ( ctx , 0 , ""Height"" , buf , strlen ( buf ) )"	122:2:3517:3575	6001449	24	True				
ANR	6001813	CallExpression	"ijs_client_set_param ( ctx , 0 , ""Height"" , buf , strlen ( buf ) )"		6001449	0					
ANR	6001814	Callee	ijs_client_set_param		6001449	0					
ANR	6001815	Identifier	ijs_client_set_param		6001449	0					
ANR	6001816	ArgumentList	ctx		6001449	1					
ANR	6001817	Argument	ctx		6001449	0					
ANR	6001818	Identifier	ctx		6001449	0					
ANR	6001819	Argument	0		6001449	1					
ANR	6001820	PrimaryExpression	0		6001449	0					
ANR	6001821	Argument	"""Height"""		6001449	2					
ANR	6001822	PrimaryExpression	"""Height"""		6001449	0					
ANR	6001823	Argument	buf		6001449	3					
ANR	6001824	Identifier	buf		6001449	0					
ANR	6001825	Argument	strlen ( buf )		6001449	4					
ANR	6001826	CallExpression	strlen ( buf )		6001449	0					
ANR	6001827	Callee	strlen		6001449	0					
ANR	6001828	Identifier	strlen		6001449	0					
ANR	6001829	ArgumentList	buf		6001449	1					
ANR	6001830	Argument	buf		6001449	0					
ANR	6001831	Identifier	buf		6001449	0					
ANR	6001832	ExpressionStatement	"sprintf ( buf , ""%dx%d"" , xres , yres )"	123:2:3579:3613	6001449	25	True				
ANR	6001833	CallExpression	"sprintf ( buf , ""%dx%d"" , xres , yres )"		6001449	0					
ANR	6001834	Callee	sprintf		6001449	0					
ANR	6001835	Identifier	sprintf		6001449	0					
ANR	6001836	ArgumentList	buf		6001449	1					
ANR	6001837	Argument	buf		6001449	0					
ANR	6001838	Identifier	buf		6001449	0					
ANR	6001839	Argument	"""%dx%d"""		6001449	1					
ANR	6001840	PrimaryExpression	"""%dx%d"""		6001449	0					
ANR	6001841	Argument	xres		6001449	2					
ANR	6001842	Identifier	xres		6001449	0					
ANR	6001843	Argument	yres		6001449	3					
ANR	6001844	Identifier	yres		6001449	0					
ANR	6001845	ExpressionStatement	"ijs_client_set_param ( ctx , 0 , ""Dpi"" , buf , strlen ( buf ) )"	124:2:3617:3672	6001449	26	True				
ANR	6001846	CallExpression	"ijs_client_set_param ( ctx , 0 , ""Dpi"" , buf , strlen ( buf ) )"		6001449	0					
ANR	6001847	Callee	ijs_client_set_param		6001449	0					
ANR	6001848	Identifier	ijs_client_set_param		6001449	0					
ANR	6001849	ArgumentList	ctx		6001449	1					
ANR	6001850	Argument	ctx		6001449	0					
ANR	6001851	Identifier	ctx		6001449	0					
ANR	6001852	Argument	0		6001449	1					
ANR	6001853	PrimaryExpression	0		6001449	0					
ANR	6001854	Argument	"""Dpi"""		6001449	2					
ANR	6001855	PrimaryExpression	"""Dpi"""		6001449	0					
ANR	6001856	Argument	buf		6001449	3					
ANR	6001857	Identifier	buf		6001449	0					
ANR	6001858	Argument	strlen ( buf )		6001449	4					
ANR	6001859	CallExpression	strlen ( buf )		6001449	0					
ANR	6001860	Callee	strlen		6001449	0					
ANR	6001861	Identifier	strlen		6001449	0					
ANR	6001862	ArgumentList	buf		6001449	1					
ANR	6001863	Argument	buf		6001449	0					
ANR	6001864	Identifier	buf		6001449	0					
ANR	6001865	ExpressionStatement	"ijs_client_begin_page ( ctx , 0 )"	126:2:3677:3707	6001449	27	True				
ANR	6001866	CallExpression	"ijs_client_begin_page ( ctx , 0 )"		6001449	0					
ANR	6001867	Callee	ijs_client_begin_page		6001449	0					
ANR	6001868	Identifier	ijs_client_begin_page		6001449	0					
ANR	6001869	ArgumentList	ctx		6001449	1					
ANR	6001870	Argument	ctx		6001449	0					
ANR	6001871	Identifier	ctx		6001449	0					
ANR	6001872	Argument	0		6001449	1					
ANR	6001873	PrimaryExpression	0		6001449	0					
ANR	6001874	ExpressionStatement	total_bytes = ( ( n_chan * bps * width + 7 ) >> 3 ) * height	128:2:3712:3768	6001449	28	True				
ANR	6001875	AssignmentExpression	total_bytes = ( ( n_chan * bps * width + 7 ) >> 3 ) * height		6001449	0		=			
ANR	6001876	Identifier	total_bytes		6001449	0					
ANR	6001877	MultiplicativeExpression	( ( n_chan * bps * width + 7 ) >> 3 ) * height		6001449	1		*			
ANR	6001878	ShiftExpression	( n_chan * bps * width + 7 ) >> 3		6001449	0		>>			
ANR	6001879	AdditiveExpression	n_chan * bps * width + 7		6001449	0		+			
ANR	6001880	MultiplicativeExpression	n_chan * bps * width		6001449	0		*			
ANR	6001881	Identifier	n_chan		6001449	0					
ANR	6001882	MultiplicativeExpression	bps * width		6001449	1		*			
ANR	6001883	Identifier	bps		6001449	0					
ANR	6001884	Identifier	width		6001449	1					
ANR	6001885	PrimaryExpression	7		6001449	1					
ANR	6001886	PrimaryExpression	3		6001449	1					
ANR	6001887	Identifier	height		6001449	1					
ANR	6001888	ExpressionStatement	bytes_left = total_bytes	129:2:3772:3796	6001449	29	True				
ANR	6001889	AssignmentExpression	bytes_left = total_bytes		6001449	0		=			
ANR	6001890	Identifier	bytes_left		6001449	0					
ANR	6001891	Identifier	total_bytes		6001449	1					
ANR	6001892	WhileStatement	while ( bytes_left )		6001449	30					
ANR	6001893	Condition	bytes_left	130:9:3807:3816	6001449	0	True				
ANR	6001894	Identifier	bytes_left		6001449	0					
ANR	6001895	CompoundStatement		65:6:1688:1712	6001449	1					
ANR	6001896	IdentifierDeclStatement	int n_bytes = bytes_left ;	132:6:3831:3855	6001449	0	True				
ANR	6001897	IdentifierDecl	n_bytes = bytes_left		6001449	0					
ANR	6001898	IdentifierDeclType	int		6001449	0					
ANR	6001899	Identifier	n_bytes		6001449	1					
ANR	6001900	AssignmentExpression	n_bytes = bytes_left		6001449	2		=			
ANR	6001901	Identifier	bytes_left		6001449	0					
ANR	6001902	Identifier	bytes_left		6001449	1					
ANR	6001903	IfStatement	if ( n_bytes > sizeof ( buf ) )		6001449	1					
ANR	6001904	Condition	n_bytes > sizeof ( buf )	133:10:3867:3887	6001449	0	True				
ANR	6001905	RelationalExpression	n_bytes > sizeof ( buf )		6001449	0		>			
ANR	6001906	Identifier	n_bytes		6001449	0					
ANR	6001907	SizeofExpression	sizeof ( buf )		6001449	1					
ANR	6001908	Sizeof	sizeof		6001449	0					
ANR	6001909	SizeofOperand	buf		6001449	1					
ANR	6001910	ExpressionStatement	n_bytes = sizeof ( buf )	134:8:3898:3919	6001449	1	True				
ANR	6001911	AssignmentExpression	n_bytes = sizeof ( buf )		6001449	0		=			
ANR	6001912	Identifier	n_bytes		6001449	0					
ANR	6001913	SizeofExpression	sizeof ( buf )		6001449	1					
ANR	6001914	Sizeof	sizeof		6001449	0					
ANR	6001915	SizeofOperand	buf		6001449	1					
ANR	6001916	ExpressionStatement	"fread ( buf , 1 , n_bytes , f )"	135:6:3927:3953	6001449	2	True				
ANR	6001917	CallExpression	"fread ( buf , 1 , n_bytes , f )"		6001449	0					
ANR	6001918	Callee	fread		6001449	0					
ANR	6001919	Identifier	fread		6001449	0					
ANR	6001920	ArgumentList	buf		6001449	1					
ANR	6001921	Argument	buf		6001449	0					
ANR	6001922	Identifier	buf		6001449	0					
ANR	6001923	Argument	1		6001449	1					
ANR	6001924	PrimaryExpression	1		6001449	0					
ANR	6001925	Argument	n_bytes		6001449	2					
ANR	6001926	Identifier	n_bytes		6001449	0					
ANR	6001927	Argument	f		6001449	3					
ANR	6001928	Identifier	f		6001449	0					
ANR	6001929	IfStatement	if ( type == '4' )		6001449	3					
ANR	6001930	Condition	type == '4'	136:10:3989:3999	6001449	0	True				
ANR	6001931	EqualityExpression	type == '4'		6001449	0		==			
ANR	6001932	Identifier	type		6001449	0					
ANR	6001933	PrimaryExpression	'4'		6001449	1					
ANR	6001934	CompoundStatement		72:10:1951:1956	6001449	1					
ANR	6001935	IdentifierDeclStatement	int i ;	139:10:4094:4099	6001449	0	True				
ANR	6001936	IdentifierDecl	i		6001449	0					
ANR	6001937	IdentifierDeclType	int		6001449	0					
ANR	6001938	Identifier	i		6001449	1					
ANR	6001939	ForStatement	for ( i = 0 ; i < n_bytes ; i ++ )		6001449	1					
ANR	6001940	ForInit	i = 0 ;	140:15:4116:4121	6001449	0	True				
ANR	6001941	AssignmentExpression	i = 0		6001449	0		=			
ANR	6001942	Identifier	i		6001449	0					
ANR	6001943	PrimaryExpression	0		6001449	1					
ANR	6001944	Condition	i < n_bytes	140:22:4123:4133	6001449	1	True				
ANR	6001945	RelationalExpression	i < n_bytes		6001449	0		<			
ANR	6001946	Identifier	i		6001449	0					
ANR	6001947	Identifier	n_bytes		6001449	1					
ANR	6001948	PostIncDecOperationExpression	i ++	140:35:4136:4138	6001449	2	True				
ANR	6001949	Identifier	i		6001449	0					
ANR	6001950	IncDec	++		6001449	1					
ANR	6001951	ExpressionStatement	buf [ i ] ^= 0xff	141:12:4153:4167	6001449	3	True				
ANR	6001952	AssignmentExpression	buf [ i ] ^= 0xff		6001449	0		^=			
ANR	6001953	ArrayIndexing	buf [ i ]		6001449	0					
ANR	6001954	Identifier	buf		6001449	0					
ANR	6001955	Identifier	i		6001449	1					
ANR	6001956	PrimaryExpression	0xff		6001449	1					
ANR	6001957	ExpressionStatement	"status = ijs_client_send_data_wait ( ctx , 0 , buf , n_bytes )"	143:6:4185:4242	6001449	4	True				
ANR	6001958	AssignmentExpression	"status = ijs_client_send_data_wait ( ctx , 0 , buf , n_bytes )"		6001449	0		=			
ANR	6001959	Identifier	status		6001449	0					
ANR	6001960	CallExpression	"ijs_client_send_data_wait ( ctx , 0 , buf , n_bytes )"		6001449	1					
ANR	6001961	Callee	ijs_client_send_data_wait		6001449	0					
ANR	6001962	Identifier	ijs_client_send_data_wait		6001449	0					
ANR	6001963	ArgumentList	ctx		6001449	1					
ANR	6001964	Argument	ctx		6001449	0					
ANR	6001965	Identifier	ctx		6001449	0					
ANR	6001966	Argument	0		6001449	1					
ANR	6001967	PrimaryExpression	0		6001449	0					
ANR	6001968	Argument	buf		6001449	2					
ANR	6001969	Identifier	buf		6001449	0					
ANR	6001970	Argument	n_bytes		6001449	3					
ANR	6001971	Identifier	n_bytes		6001449	0					
ANR	6001972	IfStatement	if ( status )		6001449	5					
ANR	6001973	Condition	status	144:10:4254:4259	6001449	0	True				
ANR	6001974	Identifier	status		6001449	0					
ANR	6001975	BreakStatement	break ;	145:8:4270:4275	6001449	1	True				
ANR	6001976	ExpressionStatement	bytes_left -= n_bytes	146:6:4283:4304	6001449	6	True				
ANR	6001977	AssignmentExpression	bytes_left -= n_bytes		6001449	0		-=			
ANR	6001978	Identifier	bytes_left		6001449	0					
ANR	6001979	Identifier	n_bytes		6001449	1					
ANR	6001980	ExpressionStatement	"ijs_client_end_page ( ctx , 0 )"	149:2:4315:4343	6001449	31	True				
ANR	6001981	CallExpression	"ijs_client_end_page ( ctx , 0 )"		6001449	0					
ANR	6001982	Callee	ijs_client_end_page		6001449	0					
ANR	6001983	Identifier	ijs_client_end_page		6001449	0					
ANR	6001984	ArgumentList	ctx		6001449	1					
ANR	6001985	Argument	ctx		6001449	0					
ANR	6001986	Identifier	ctx		6001449	0					
ANR	6001987	Argument	0		6001449	1					
ANR	6001988	PrimaryExpression	0		6001449	0					
ANR	6001989	ReturnStatement	return status ;	151:2:4348:4361	6001449	32	True				
ANR	6001990	Identifier	status		6001449	0					
ANR	6001991	ReturnType	static int		6001449	1					
ANR	6001992	Identifier	send_pnm_file		6001449	2					
ANR	6001993	ParameterList	"IjsClientCtx * ctx , FILE * f , int xres , int yres"		6001449	3					
ANR	6001994	Parameter	IjsClientCtx * ctx	67:15:2094:2110	6001449	0	True				
ANR	6001995	ParameterType	IjsClientCtx *		6001449	0					
ANR	6001996	Identifier	ctx		6001449	1					
ANR	6001997	Parameter	FILE * f	67:34:2113:2119	6001449	1	True				
ANR	6001998	ParameterType	FILE *		6001449	0					
ANR	6001999	Identifier	f		6001449	1					
ANR	6002000	Parameter	int xres	67:43:2122:2129	6001449	2	True				
ANR	6002001	ParameterType	int		6001449	0					
ANR	6002002	Identifier	xres		6001449	1					
ANR	6002003	Parameter	int yres	67:53:2132:2139	6001449	3	True				
ANR	6002004	ParameterType	int		6001449	0					
ANR	6002005	Identifier	yres		6001449	1					
ANR	6002006	CFGEntryNode	ENTRY		6001449		True				
ANR	6002007	CFGExitNode	EXIT		6001449		True				
ANR	6002008	Symbol	lp		6001449						
ANR	6002009	Symbol	& width		6001449						
ANR	6002010	Symbol	type		6001449						
ANR	6002011	Symbol	& height		6001449						
ANR	6002012	Symbol	fgets		6001449						
ANR	6002013	Symbol	ijs_client_send_data_wait		6001449						
ANR	6002014	Symbol	xres		6001449						
ANR	6002015	Symbol	strlen		6001449						
ANR	6002016	Symbol	total_bytes		6001449						
ANR	6002017	Symbol	n_chan		6001449						
ANR	6002018	Symbol	height		6001449						
ANR	6002019	Symbol	* buf		6001449						
ANR	6002020	Symbol	NULL		6001449						
ANR	6002021	Symbol	bps		6001449						
ANR	6002022	Symbol	bytes_left		6001449						
ANR	6002023	Symbol	ctx		6001449						
ANR	6002024	Symbol	f		6001449						
ANR	6002025	Symbol	* lp		6001449						
ANR	6002026	Symbol	i		6001449						
ANR	6002027	Symbol	stderr		6001449						
ANR	6002028	Symbol	buf		6001449						
ANR	6002029	Symbol	* i		6001449						
ANR	6002030	Symbol	sscanf		6001449						
ANR	6002031	Symbol	width		6001449						
ANR	6002032	Symbol	n_bytes		6001449						
ANR	6002033	Symbol	yres		6001449						
ANR	6002034	Symbol	status		6001449						
ANR	6002035	Function	verify_context	154:0:4366:4530							
ANR	6002036	FunctionDef	verify_context (IjsClientCtx * ctx)		6002035	0					
ANR	6002037	CompoundStatement		156:0:4413:4530	6002035	0					
ANR	6002038	IfStatement	if ( ctx == NULL )		6002035	0					
ANR	6002039	Condition	ctx == NULL	157:6:4421:4431	6002035	0	True				
ANR	6002040	EqualityExpression	ctx == NULL		6002035	0		==			
ANR	6002041	Identifier	ctx		6002035	0					
ANR	6002042	Identifier	NULL		6002035	1					
ANR	6002043	CompoundStatement		3:4:24:24	6002035	1					
ANR	6002044	ExpressionStatement	"fprintf ( stderr , ""Must specify valid server with -s flag\\n"" )"	159:6:4446:4506	6002035	0	True				
ANR	6002045	CallExpression	"fprintf ( stderr , ""Must specify valid server with -s flag\\n"" )"		6002035	0					
ANR	6002046	Callee	fprintf		6002035	0					
ANR	6002047	Identifier	fprintf		6002035	0					
ANR	6002048	ArgumentList	stderr		6002035	1					
ANR	6002049	Argument	stderr		6002035	0					
ANR	6002050	Identifier	stderr		6002035	0					
ANR	6002051	Argument	"""Must specify valid server with -s flag\\n"""		6002035	1					
ANR	6002052	PrimaryExpression	"""Must specify valid server with -s flag\\n"""		6002035	0					
ANR	6002053	ExpressionStatement	exit ( 1 )	160:6:4514:4522	6002035	1	True				
ANR	6002054	CallExpression	exit ( 1 )		6002035	0					
ANR	6002055	Callee	exit		6002035	0					
ANR	6002056	Identifier	exit		6002035	0					
ANR	6002057	ArgumentList	1		6002035	1					
ANR	6002058	Argument	1		6002035	0					
ANR	6002059	PrimaryExpression	1		6002035	0					
ANR	6002060	ReturnType	static void		6002035	1					
ANR	6002061	Identifier	verify_context		6002035	2					
ANR	6002062	ParameterList	IjsClientCtx * ctx		6002035	3					
ANR	6002063	Parameter	IjsClientCtx * ctx	155:16:4394:4410	6002035	0	True				
ANR	6002064	ParameterType	IjsClientCtx *		6002035	0					
ANR	6002065	Identifier	ctx		6002035	1					
ANR	6002066	CFGEntryNode	ENTRY		6002035		True				
ANR	6002067	CFGExitNode	EXIT		6002035		True				
ANR	6002068	Symbol	NULL		6002035						
ANR	6002069	Symbol	ctx		6002035						
ANR	6002070	Symbol	stderr		6002035						
ANR	6002071	Function	param_usage	164:0:4533:4645							
ANR	6002072	FunctionDef	param_usage ()		6002071	0					
ANR	6002073	CompoundStatement		166:0:4564:4645	6002071	0					
ANR	6002074	ExpressionStatement	"fprintf ( stderr , ""parameter list must be in key=value, key=value format\\n"" )"	167:2:4568:4643	6002071	0	True				
ANR	6002075	CallExpression	"fprintf ( stderr , ""parameter list must be in key=value, key=value format\\n"" )"		6002071	0					
ANR	6002076	Callee	fprintf		6002071	0					
ANR	6002077	Identifier	fprintf		6002071	0					
ANR	6002078	ArgumentList	stderr		6002071	1					
ANR	6002079	Argument	stderr		6002071	0					
ANR	6002080	Identifier	stderr		6002071	0					
ANR	6002081	Argument	"""parameter list must be in key=value, key=value format\\n"""		6002071	1					
ANR	6002082	PrimaryExpression	"""parameter list must be in key=value, key=value format\\n"""		6002071	0					
ANR	6002083	ReturnType	static void		6002071	1					
ANR	6002084	Identifier	param_usage		6002071	2					
ANR	6002085	ParameterList			6002071	3					
ANR	6002086	CFGEntryNode	ENTRY		6002071		True				
ANR	6002087	CFGExitNode	EXIT		6002071		True				
ANR	6002088	Symbol	stderr		6002071						
ANR	6002089	Function	example_set_params	170:0:4648:6324							
ANR	6002090	FunctionDef	"example_set_params (IjsClientCtx * ctx , const char * arg)"		6002089	0					
ANR	6002091	CompoundStatement		172:0:4716:6324	6002089	0					
ANR	6002092	IdentifierDeclStatement	int code ;	173:2:4720:4728	6002089	0	True				
ANR	6002093	IdentifierDecl	code		6002089	0					
ANR	6002094	IdentifierDeclType	int		6002089	0					
ANR	6002095	Identifier	code		6002089	1					
ANR	6002096	IdentifierDeclStatement	"int i , inext ;"	174:2:4732:4744	6002089	1	True				
ANR	6002097	IdentifierDecl	i		6002089	0					
ANR	6002098	IdentifierDeclType	int		6002089	0					
ANR	6002099	Identifier	i		6002089	1					
ANR	6002100	IdentifierDecl	inext		6002089	1					
ANR	6002101	IdentifierDeclType	int		6002089	0					
ANR	6002102	Identifier	inext		6002089	1					
ANR	6002103	IdentifierDeclStatement	char key [ 256 ] ;	175:2:4748:4761	6002089	2	True				
ANR	6002104	IdentifierDecl	key [ 256 ]		6002089	0					
ANR	6002105	IdentifierDeclType	char [ 256 ]		6002089	0					
ANR	6002106	Identifier	key		6002089	1					
ANR	6002107	PrimaryExpression	256		6002089	2					
ANR	6002108	IdentifierDeclStatement	char buf [ 4096 ] ;	176:2:4765:4779	6002089	3	True				
ANR	6002109	IdentifierDecl	buf [ 4096 ]		6002089	0					
ANR	6002110	IdentifierDeclType	char [ 4096 ]		6002089	0					
ANR	6002111	Identifier	buf		6002089	1					
ANR	6002112	PrimaryExpression	4096		6002089	2					
ANR	6002113	IdentifierDeclStatement	int buf_ix ;	177:2:4783:4793	6002089	4	True				
ANR	6002114	IdentifierDecl	buf_ix		6002089	0					
ANR	6002115	IdentifierDeclType	int		6002089	0					
ANR	6002116	Identifier	buf_ix		6002089	1					
ANR	6002117	ForStatement	for ( i = 0 ; arg [ i ] != 0 ; i = inext )		6002089	5					
ANR	6002118	ForInit	i = 0 ;	179:7:4803:4808	6002089	0	True				
ANR	6002119	AssignmentExpression	i = 0		6002089	0		=			
ANR	6002120	Identifier	i		6002089	0					
ANR	6002121	PrimaryExpression	0		6002089	1					
ANR	6002122	Condition	arg [ i ] != 0	179:14:4810:4820	6002089	1	True				
ANR	6002123	EqualityExpression	arg [ i ] != 0		6002089	0		!=			
ANR	6002124	ArrayIndexing	arg [ i ]		6002089	0					
ANR	6002125	Identifier	arg		6002089	0					
ANR	6002126	Identifier	i		6002089	1					
ANR	6002127	PrimaryExpression	0		6002089	1					
ANR	6002128	AssignmentExpression	i = inext	179:27:4823:4831	6002089	2	True	=			
ANR	6002129	Identifier	i		6002089	0					
ANR	6002130	Identifier	inext		6002089	1					
ANR	6002131	CompoundStatement		11:6:156:168	6002089	3					
ANR	6002132	IdentifierDeclStatement	"int ibeg , ieq , iend ;"	181:6:4846:4865	6002089	0	True				
ANR	6002133	IdentifierDecl	ibeg		6002089	0					
ANR	6002134	IdentifierDeclType	int		6002089	0					
ANR	6002135	Identifier	ibeg		6002089	1					
ANR	6002136	IdentifierDecl	ieq		6002089	1					
ANR	6002137	IdentifierDeclType	int		6002089	0					
ANR	6002138	Identifier	ieq		6002089	1					
ANR	6002139	IdentifierDecl	iend		6002089	2					
ANR	6002140	IdentifierDeclType	int		6002089	0					
ANR	6002141	Identifier	iend		6002089	1					
ANR	6002142	IdentifierDeclStatement	int key_size ;	182:6:4873:4885	6002089	1	True				
ANR	6002143	IdentifierDecl	key_size		6002089	0					
ANR	6002144	IdentifierDeclType	int		6002089	0					
ANR	6002145	Identifier	key_size		6002089	1					
ANR	6002146	ForStatement	for ( ibeg = i ; arg [ ibeg ] == ' ' ; ibeg ++ )		6002089	2					
ANR	6002147	ForInit	ibeg = i ;	184:11:4899:4907	6002089	0	True				
ANR	6002148	AssignmentExpression	ibeg = i		6002089	0		=			
ANR	6002149	Identifier	ibeg		6002089	0					
ANR	6002150	Identifier	i		6002089	1					
ANR	6002151	Condition	arg [ ibeg ] == ' '	184:21:4909:4924	6002089	1	True				
ANR	6002152	EqualityExpression	arg [ ibeg ] == ' '		6002089	0		==			
ANR	6002153	ArrayIndexing	arg [ ibeg ]		6002089	0					
ANR	6002154	Identifier	arg		6002089	0					
ANR	6002155	Identifier	ibeg		6002089	1					
ANR	6002156	PrimaryExpression	' '		6002089	1					
ANR	6002157	PostIncDecOperationExpression	ibeg ++	184:39:4927:4932	6002089	2	True				
ANR	6002158	Identifier	ibeg		6002089	0					
ANR	6002159	IncDec	++		6002089	1					
ANR	6002160	ExpressionStatement		184:46:4934:4934	6002089	3	True				
ANR	6002161	ForStatement	for ( ieq = ibeg ; arg [ ieq ] != 0 ; ieq ++ )		6002089	3					
ANR	6002162	ForInit	ieq = ibeg ;	186:11:4948:4958	6002089	0	True				
ANR	6002163	AssignmentExpression	ieq = ibeg		6002089	0		=			
ANR	6002164	Identifier	ieq		6002089	0					
ANR	6002165	Identifier	ibeg		6002089	1					
ANR	6002166	Condition	arg [ ieq ] != 0	186:23:4960:4972	6002089	1	True				
ANR	6002167	EqualityExpression	arg [ ieq ] != 0		6002089	0		!=			
ANR	6002168	ArrayIndexing	arg [ ieq ]		6002089	0					
ANR	6002169	Identifier	arg		6002089	0					
ANR	6002170	Identifier	ieq		6002089	1					
ANR	6002171	PrimaryExpression	0		6002089	1					
ANR	6002172	PostIncDecOperationExpression	ieq ++	186:38:4975:4979	6002089	2	True				
ANR	6002173	Identifier	ieq		6002089	0					
ANR	6002174	IncDec	++		6002089	1					
ANR	6002175	CompoundStatement		16:8:273:273	6002089	3					
ANR	6002176	IfStatement	if ( arg [ ieq ] == '=' )		6002089	0					
ANR	6002177	Condition	arg [ ieq ] == '='	188:14:5006:5020	6002089	0	True				
ANR	6002178	EqualityExpression	arg [ ieq ] == '='		6002089	0		==			
ANR	6002179	ArrayIndexing	arg [ ieq ]		6002089	0					
ANR	6002180	Identifier	arg		6002089	0					
ANR	6002181	Identifier	ieq		6002089	1					
ANR	6002182	PrimaryExpression	'='		6002089	1					
ANR	6002183	BreakStatement	break ;	189:12:5035:5040	6002089	1	True				
ANR	6002184	IfStatement	if ( arg [ ieq ] == 0 )		6002089	4					
ANR	6002185	Condition	arg [ ieq ] == 0	191:10:5062:5074	6002089	0	True				
ANR	6002186	EqualityExpression	arg [ ieq ] == 0		6002089	0		==			
ANR	6002187	ArrayIndexing	arg [ ieq ]		6002089	0					
ANR	6002188	Identifier	arg		6002089	0					
ANR	6002189	Identifier	ieq		6002089	1					
ANR	6002190	PrimaryExpression	0		6002089	1					
ANR	6002191	CompoundStatement		21:8:368:368	6002089	1					
ANR	6002192	ExpressionStatement	param_usage ( )	193:10:5097:5111	6002089	0	True				
ANR	6002193	CallExpression	param_usage ( )		6002089	0					
ANR	6002194	Callee	param_usage		6002089	0					
ANR	6002195	Identifier	param_usage		6002089	0					
ANR	6002196	ArgumentList			6002089	1					
ANR	6002197	ReturnStatement	return ;	194:10:5123:5129	6002089	1	True				
ANR	6002198	ForStatement	for ( iend = ieq ; iend >= ibeg ; iend -- )		6002089	5					
ANR	6002199	ForInit	iend = ieq ;	196:11:5152:5162	6002089	0	True				
ANR	6002200	AssignmentExpression	iend = ieq		6002089	0		=			
ANR	6002201	Identifier	iend		6002089	0					
ANR	6002202	Identifier	ieq		6002089	1					
ANR	6002203	Condition	iend >= ibeg	196:23:5164:5175	6002089	1	True				
ANR	6002204	RelationalExpression	iend >= ibeg		6002089	0		>=			
ANR	6002205	Identifier	iend		6002089	0					
ANR	6002206	Identifier	ibeg		6002089	1					
ANR	6002207	PostIncDecOperationExpression	iend --	196:37:5178:5183	6002089	2	True				
ANR	6002208	Identifier	iend		6002089	0					
ANR	6002209	IncDec	--		6002089	1					
ANR	6002210	IfStatement	if ( arg [ iend - 1 ] != ' ' )		6002089	3					
ANR	6002211	Condition	arg [ iend - 1 ] != ' '	197:12:5198:5217	6002089	0	True				
ANR	6002212	EqualityExpression	arg [ iend - 1 ] != ' '		6002089	0		!=			
ANR	6002213	ArrayIndexing	arg [ iend - 1 ]		6002089	0					
ANR	6002214	Identifier	arg		6002089	0					
ANR	6002215	AdditiveExpression	iend - 1		6002089	1		-			
ANR	6002216	Identifier	iend		6002089	0					
ANR	6002217	PrimaryExpression	1		6002089	1					
ANR	6002218	PrimaryExpression	' '		6002089	1					
ANR	6002219	BreakStatement	break ;	198:10:5230:5235	6002089	1	True				
ANR	6002220	IfStatement	if ( iend == ibeg )		6002089	6					
ANR	6002221	Condition	iend == ibeg	199:10:5247:5258	6002089	0	True				
ANR	6002222	EqualityExpression	iend == ibeg		6002089	0		==			
ANR	6002223	Identifier	iend		6002089	0					
ANR	6002224	Identifier	ibeg		6002089	1					
ANR	6002225	CompoundStatement		29:8:552:552	6002089	1					
ANR	6002226	ExpressionStatement	param_usage ( )	201:10:5281:5295	6002089	0	True				
ANR	6002227	CallExpression	param_usage ( )		6002089	0					
ANR	6002228	Callee	param_usage		6002089	0					
ANR	6002229	Identifier	param_usage		6002089	0					
ANR	6002230	ArgumentList			6002089	1					
ANR	6002231	ReturnStatement	return ;	202:10:5307:5313	6002089	1	True				
ANR	6002232	ExpressionStatement	key_size = iend - ibeg	204:6:5331:5353	6002089	7	True				
ANR	6002233	AssignmentExpression	key_size = iend - ibeg		6002089	0		=			
ANR	6002234	Identifier	key_size		6002089	0					
ANR	6002235	AdditiveExpression	iend - ibeg		6002089	1		-			
ANR	6002236	Identifier	iend		6002089	0					
ANR	6002237	Identifier	ibeg		6002089	1					
ANR	6002238	IfStatement	if ( key_size + 1 > sizeof ( key ) )		6002089	8					
ANR	6002239	Condition	key_size + 1 > sizeof ( key )	205:10:5365:5390	6002089	0	True				
ANR	6002240	RelationalExpression	key_size + 1 > sizeof ( key )		6002089	0		>			
ANR	6002241	AdditiveExpression	key_size + 1		6002089	0		+			
ANR	6002242	Identifier	key_size		6002089	0					
ANR	6002243	PrimaryExpression	1		6002089	1					
ANR	6002244	SizeofExpression	sizeof ( key )		6002089	1					
ANR	6002245	Sizeof	sizeof		6002089	0					
ANR	6002246	SizeofOperand	key		6002089	1					
ANR	6002247	CompoundStatement		35:8:684:684	6002089	1					
ANR	6002248	ExpressionStatement	"fprintf ( stderr , ""Key exceeds %d bytes\\n"" , sizeof ( key ) )"	207:10:5413:5468	6002089	0	True				
ANR	6002249	CallExpression	"fprintf ( stderr , ""Key exceeds %d bytes\\n"" , sizeof ( key ) )"		6002089	0					
ANR	6002250	Callee	fprintf		6002089	0					
ANR	6002251	Identifier	fprintf		6002089	0					
ANR	6002252	ArgumentList	stderr		6002089	1					
ANR	6002253	Argument	stderr		6002089	0					
ANR	6002254	Identifier	stderr		6002089	0					
ANR	6002255	Argument	"""Key exceeds %d bytes\\n"""		6002089	1					
ANR	6002256	PrimaryExpression	"""Key exceeds %d bytes\\n"""		6002089	0					
ANR	6002257	Argument	sizeof ( key )		6002089	2					
ANR	6002258	SizeofExpression	sizeof ( key )		6002089	0					
ANR	6002259	Sizeof	sizeof		6002089	0					
ANR	6002260	SizeofOperand	key		6002089	1					
ANR	6002261	ReturnStatement	return ;	208:10:5480:5486	6002089	1	True				
ANR	6002262	ExpressionStatement	"memcpy ( key , arg + ibeg , key_size )"	210:6:5504:5538	6002089	9	True				
ANR	6002263	CallExpression	"memcpy ( key , arg + ibeg , key_size )"		6002089	0					
ANR	6002264	Callee	memcpy		6002089	0					
ANR	6002265	Identifier	memcpy		6002089	0					
ANR	6002266	ArgumentList	key		6002089	1					
ANR	6002267	Argument	key		6002089	0					
ANR	6002268	Identifier	key		6002089	0					
ANR	6002269	Argument	arg + ibeg		6002089	1					
ANR	6002270	AdditiveExpression	arg + ibeg		6002089	0		+			
ANR	6002271	Identifier	arg		6002089	0					
ANR	6002272	Identifier	ibeg		6002089	1					
ANR	6002273	Argument	key_size		6002089	2					
ANR	6002274	Identifier	key_size		6002089	0					
ANR	6002275	ExpressionStatement	key [ key_size ] = 0	211:6:5546:5563	6002089	10	True				
ANR	6002276	AssignmentExpression	key [ key_size ] = 0		6002089	0		=			
ANR	6002277	ArrayIndexing	key [ key_size ]		6002089	0					
ANR	6002278	Identifier	key		6002089	0					
ANR	6002279	Identifier	key_size		6002089	1					
ANR	6002280	PrimaryExpression	0		6002089	1					
ANR	6002281	ExpressionStatement	buf_ix = 0	212:6:5571:5581	6002089	11	True				
ANR	6002282	AssignmentExpression	buf_ix = 0		6002089	0		=			
ANR	6002283	Identifier	buf_ix		6002089	0					
ANR	6002284	PrimaryExpression	0		6002089	1					
ANR	6002285	ForStatement	for ( i = ieq + 1 ; arg [ i ] == ' ' ; i ++ )		6002089	12					
ANR	6002286	ForInit	i = ieq + 1 ;	213:11:5594:5605	6002089	0	True				
ANR	6002287	AssignmentExpression	i = ieq + 1		6002089	0		=			
ANR	6002288	Identifier	i		6002089	0					
ANR	6002289	AdditiveExpression	ieq + 1		6002089	1		+			
ANR	6002290	Identifier	ieq		6002089	0					
ANR	6002291	PrimaryExpression	1		6002089	1					
ANR	6002292	Condition	arg [ i ] == ' '	213:24:5607:5619	6002089	1	True				
ANR	6002293	EqualityExpression	arg [ i ] == ' '		6002089	0		==			
ANR	6002294	ArrayIndexing	arg [ i ]		6002089	0					
ANR	6002295	Identifier	arg		6002089	0					
ANR	6002296	Identifier	i		6002089	1					
ANR	6002297	PrimaryExpression	' '		6002089	1					
ANR	6002298	PostIncDecOperationExpression	i ++	213:39:5622:5624	6002089	2	True				
ANR	6002299	Identifier	i		6002089	0					
ANR	6002300	IncDec	++		6002089	1					
ANR	6002301	ExpressionStatement		213:43:5626:5626	6002089	3	True				
ANR	6002302	ForStatement	for ( ; arg [ i ] != 0 ; i ++ )		6002089	13					
ANR	6002303	Condition	arg [ i ] != 0	214:13:5641:5651	6002089	0	True				
ANR	6002304	EqualityExpression	arg [ i ] != 0		6002089	0		!=			
ANR	6002305	ArrayIndexing	arg [ i ]		6002089	0					
ANR	6002306	Identifier	arg		6002089	0					
ANR	6002307	Identifier	i		6002089	1					
ANR	6002308	PrimaryExpression	0		6002089	1					
ANR	6002309	PostIncDecOperationExpression	i ++	214:26:5654:5656	6002089	1	True				
ANR	6002310	Identifier	i		6002089	0					
ANR	6002311	IncDec	++		6002089	1					
ANR	6002312	CompoundStatement		44:8:950:950	6002089	2					
ANR	6002313	IfStatement	"if ( arg [ i ] == ',' )"		6002089	0					
ANR	6002314	Condition	"arg [ i ] == ','"	216:14:5683:5695	6002089	0	True				
ANR	6002315	EqualityExpression	"arg [ i ] == ','"		6002089	0		==			
ANR	6002316	ArrayIndexing	arg [ i ]		6002089	0					
ANR	6002317	Identifier	arg		6002089	0					
ANR	6002318	Identifier	i		6002089	1					
ANR	6002319	PrimaryExpression	"','"		6002089	1					
ANR	6002320	BreakStatement	break ;	217:12:5710:5715	6002089	1	True				
ANR	6002321	IfStatement	if ( buf_ix == sizeof ( buf ) )		6002089	1					
ANR	6002322	Condition	buf_ix == sizeof ( buf )	218:14:5731:5751	6002089	0	True				
ANR	6002323	EqualityExpression	buf_ix == sizeof ( buf )		6002089	0		==			
ANR	6002324	Identifier	buf_ix		6002089	0					
ANR	6002325	SizeofExpression	sizeof ( buf )		6002089	1					
ANR	6002326	Sizeof	sizeof		6002089	0					
ANR	6002327	SizeofOperand	buf		6002089	1					
ANR	6002328	CompoundStatement		48:12:1049:1049	6002089	1					
ANR	6002329	ExpressionStatement	"fprintf ( stderr , ""Value for %s exceeds %d bytes\\n"" , key , sizeof ( buf ) )"	220:14:5782:5874	6002089	0	True				
ANR	6002330	CallExpression	"fprintf ( stderr , ""Value for %s exceeds %d bytes\\n"" , key , sizeof ( buf ) )"		6002089	0					
ANR	6002331	Callee	fprintf		6002089	0					
ANR	6002332	Identifier	fprintf		6002089	0					
ANR	6002333	ArgumentList	stderr		6002089	1					
ANR	6002334	Argument	stderr		6002089	0					
ANR	6002335	Identifier	stderr		6002089	0					
ANR	6002336	Argument	"""Value for %s exceeds %d bytes\\n"""		6002089	1					
ANR	6002337	PrimaryExpression	"""Value for %s exceeds %d bytes\\n"""		6002089	0					
ANR	6002338	Argument	key		6002089	2					
ANR	6002339	Identifier	key		6002089	0					
ANR	6002340	Argument	sizeof ( buf )		6002089	3					
ANR	6002341	SizeofExpression	sizeof ( buf )		6002089	0					
ANR	6002342	Sizeof	sizeof		6002089	0					
ANR	6002343	SizeofOperand	buf		6002089	1					
ANR	6002344	ReturnStatement	return ;	222:14:5890:5896	6002089	1	True				
ANR	6002345	IfStatement	if ( arg [ i ] == '\\\\' && arg [ i + 1 ] != 0 )		6002089	2					
ANR	6002346	Condition	arg [ i ] == '\\\\' && arg [ i + 1 ] != 0	224:14:5926:5958	6002089	0	True				
ANR	6002347	AndExpression	arg [ i ] == '\\\\' && arg [ i + 1 ] != 0		6002089	0		&&			
ANR	6002348	EqualityExpression	arg [ i ] == '\\\\'		6002089	0		==			
ANR	6002349	ArrayIndexing	arg [ i ]		6002089	0					
ANR	6002350	Identifier	arg		6002089	0					
ANR	6002351	Identifier	i		6002089	1					
ANR	6002352	PrimaryExpression	'\\\\'		6002089	1					
ANR	6002353	EqualityExpression	arg [ i + 1 ] != 0		6002089	1		!=			
ANR	6002354	ArrayIndexing	arg [ i + 1 ]		6002089	0					
ANR	6002355	Identifier	arg		6002089	0					
ANR	6002356	AdditiveExpression	i + 1		6002089	1		+			
ANR	6002357	Identifier	i		6002089	0					
ANR	6002358	PrimaryExpression	1		6002089	1					
ANR	6002359	PrimaryExpression	0		6002089	1					
ANR	6002360	ExpressionStatement	buf [ buf_ix ++ ] = arg [ ++ i ]	225:12:5973:5997	6002089	1	True				
ANR	6002361	AssignmentExpression	buf [ buf_ix ++ ] = arg [ ++ i ]		6002089	0		=			
ANR	6002362	ArrayIndexing	buf [ buf_ix ++ ]		6002089	0					
ANR	6002363	Identifier	buf		6002089	0					
ANR	6002364	PostIncDecOperationExpression	buf_ix ++		6002089	1					
ANR	6002365	Identifier	buf_ix		6002089	0					
ANR	6002366	IncDec	++		6002089	1					
ANR	6002367	ArrayIndexing	arg [ ++ i ]		6002089	1					
ANR	6002368	Identifier	arg		6002089	0					
ANR	6002369	UnaryExpression	++ i		6002089	1					
ANR	6002370	IncDec	++		6002089	0					
ANR	6002371	Identifier	i		6002089	1					
ANR	6002372	ElseStatement	else		6002089	0					
ANR	6002373	ExpressionStatement	buf [ buf_ix ++ ] = arg [ i ]	227:12:6026:6048	6002089	0	True				
ANR	6002374	AssignmentExpression	buf [ buf_ix ++ ] = arg [ i ]		6002089	0		=			
ANR	6002375	ArrayIndexing	buf [ buf_ix ++ ]		6002089	0					
ANR	6002376	Identifier	buf		6002089	0					
ANR	6002377	PostIncDecOperationExpression	buf_ix ++		6002089	1					
ANR	6002378	Identifier	buf_ix		6002089	0					
ANR	6002379	IncDec	++		6002089	1					
ANR	6002380	ArrayIndexing	arg [ i ]		6002089	1					
ANR	6002381	Identifier	arg		6002089	0					
ANR	6002382	Identifier	i		6002089	1					
ANR	6002383	IfStatement	"if ( arg [ i ] == ',' )"		6002089	14					
ANR	6002384	Condition	"arg [ i ] == ','"	229:10:6070:6082	6002089	0	True				
ANR	6002385	EqualityExpression	"arg [ i ] == ','"		6002089	0		==			
ANR	6002386	ArrayIndexing	arg [ i ]		6002089	0					
ANR	6002387	Identifier	arg		6002089	0					
ANR	6002388	Identifier	i		6002089	1					
ANR	6002389	PrimaryExpression	"','"		6002089	1					
ANR	6002390	ExpressionStatement	inext = i + 1	230:8:6093:6106	6002089	1	True				
ANR	6002391	AssignmentExpression	inext = i + 1		6002089	0		=			
ANR	6002392	Identifier	inext		6002089	0					
ANR	6002393	AdditiveExpression	i + 1		6002089	1		+			
ANR	6002394	Identifier	i		6002089	0					
ANR	6002395	PrimaryExpression	1		6002089	1					
ANR	6002396	ElseStatement	else		6002089	0					
ANR	6002397	ExpressionStatement	inext = i	232:8:6127:6136	6002089	0	True				
ANR	6002398	AssignmentExpression	inext = i		6002089	0		=			
ANR	6002399	Identifier	inext		6002089	0					
ANR	6002400	Identifier	i		6002089	1					
ANR	6002401	ExpressionStatement	"code = ijs_client_set_param ( ctx , 0 , key , buf , buf_ix )"	233:6:6144:6198	6002089	15	True				
ANR	6002402	AssignmentExpression	"code = ijs_client_set_param ( ctx , 0 , key , buf , buf_ix )"		6002089	0		=			
ANR	6002403	Identifier	code		6002089	0					
ANR	6002404	CallExpression	"ijs_client_set_param ( ctx , 0 , key , buf , buf_ix )"		6002089	1					
ANR	6002405	Callee	ijs_client_set_param		6002089	0					
ANR	6002406	Identifier	ijs_client_set_param		6002089	0					
ANR	6002407	ArgumentList	ctx		6002089	1					
ANR	6002408	Argument	ctx		6002089	0					
ANR	6002409	Identifier	ctx		6002089	0					
ANR	6002410	Argument	0		6002089	1					
ANR	6002411	PrimaryExpression	0		6002089	0					
ANR	6002412	Argument	key		6002089	2					
ANR	6002413	Identifier	key		6002089	0					
ANR	6002414	Argument	buf		6002089	3					
ANR	6002415	Identifier	buf		6002089	0					
ANR	6002416	Argument	buf_ix		6002089	4					
ANR	6002417	Identifier	buf_ix		6002089	0					
ANR	6002418	IfStatement	if ( code < 0 )		6002089	16					
ANR	6002419	Condition	code < 0	234:10:6210:6217	6002089	0	True				
ANR	6002420	RelationalExpression	code < 0		6002089	0		<			
ANR	6002421	Identifier	code		6002089	0					
ANR	6002422	PrimaryExpression	0		6002089	1					
ANR	6002423	ExpressionStatement	"fprintf ( stderr , ""Warning: error %d setting parameter %s\\n"" , code , key )"	235:8:6228:6316	6002089	1	True				
ANR	6002424	CallExpression	"fprintf ( stderr , ""Warning: error %d setting parameter %s\\n"" , code , key )"		6002089	0					
ANR	6002425	Callee	fprintf		6002089	0					
ANR	6002426	Identifier	fprintf		6002089	0					
ANR	6002427	ArgumentList	stderr		6002089	1					
ANR	6002428	Argument	stderr		6002089	0					
ANR	6002429	Identifier	stderr		6002089	0					
ANR	6002430	Argument	"""Warning: error %d setting parameter %s\\n"""		6002089	1					
ANR	6002431	PrimaryExpression	"""Warning: error %d setting parameter %s\\n"""		6002089	0					
ANR	6002432	Argument	code		6002089	2					
ANR	6002433	Identifier	code		6002089	0					
ANR	6002434	Argument	key		6002089	3					
ANR	6002435	Identifier	key		6002089	0					
ANR	6002436	ReturnType	static void		6002089	1					
ANR	6002437	Identifier	example_set_params		6002089	2					
ANR	6002438	ParameterList	"IjsClientCtx * ctx , const char * arg"		6002089	3					
ANR	6002439	Parameter	IjsClientCtx * ctx	171:20:4680:4696	6002089	0	True				
ANR	6002440	ParameterType	IjsClientCtx *		6002089	0					
ANR	6002441	Identifier	ctx		6002089	1					
ANR	6002442	Parameter	const char * arg	171:39:4699:4713	6002089	1	True				
ANR	6002443	ParameterType	const char *		6002089	0					
ANR	6002444	Identifier	arg		6002089	1					
ANR	6002445	CFGEntryNode	ENTRY		6002089		True				
ANR	6002446	CFGExitNode	EXIT		6002089		True				
ANR	6002447	Symbol	buf_ix		6002089						
ANR	6002448	Symbol	* ieq		6002089						
ANR	6002449	Symbol	* buf		6002089						
ANR	6002450	Symbol	code		6002089						
ANR	6002451	Symbol	iend		6002089						
ANR	6002452	Symbol	ctx		6002089						
ANR	6002453	Symbol	inext		6002089						
ANR	6002454	Symbol	i		6002089						
ANR	6002455	Symbol	* key		6002089						
ANR	6002456	Symbol	ibeg		6002089						
ANR	6002457	Symbol	stderr		6002089						
ANR	6002458	Symbol	* ibeg		6002089						
ANR	6002459	Symbol	* key_size		6002089						
ANR	6002460	Symbol	buf		6002089						
ANR	6002461	Symbol	* i		6002089						
ANR	6002462	Symbol	ieq		6002089						
ANR	6002463	Symbol	arg		6002089						
ANR	6002464	Symbol	* iend		6002089						
ANR	6002465	Symbol	ijs_client_set_param		6002089						
ANR	6002466	Symbol	key		6002089						
ANR	6002467	Symbol	* arg		6002089						
ANR	6002468	Symbol	key_size		6002089						
ANR	6002469	Function	example_get_param	240:0:6327:6701							
ANR	6002470	FunctionDef	"example_get_param (IjsClientCtx * ctx , const char * arg)"		6002469	0					
ANR	6002471	CompoundStatement		242:0:6394:6701	6002469	0					
ANR	6002472	IdentifierDeclStatement	char buf [ 4096 ] ;	243:2:6398:6412	6002469	0	True				
ANR	6002473	IdentifierDecl	buf [ 4096 ]		6002469	0					
ANR	6002474	IdentifierDeclType	char [ 4096 ]		6002469	0					
ANR	6002475	Identifier	buf		6002469	1					
ANR	6002476	PrimaryExpression	4096		6002469	2					
ANR	6002477	IdentifierDeclStatement	int status ;	244:2:6416:6426	6002469	1	True				
ANR	6002478	IdentifierDecl	status		6002469	0					
ANR	6002479	IdentifierDeclType	int		6002469	0					
ANR	6002480	Identifier	status		6002469	1					
ANR	6002481	ExpressionStatement	"status = ijs_client_get_param ( ctx , 0 , arg , buf , sizeof ( buf ) - 1 )"	246:2:6431:6496	6002469	2	True				
ANR	6002482	AssignmentExpression	"status = ijs_client_get_param ( ctx , 0 , arg , buf , sizeof ( buf ) - 1 )"		6002469	0		=			
ANR	6002483	Identifier	status		6002469	0					
ANR	6002484	CallExpression	"ijs_client_get_param ( ctx , 0 , arg , buf , sizeof ( buf ) - 1 )"		6002469	1					
ANR	6002485	Callee	ijs_client_get_param		6002469	0					
ANR	6002486	Identifier	ijs_client_get_param		6002469	0					
ANR	6002487	ArgumentList	ctx		6002469	1					
ANR	6002488	Argument	ctx		6002469	0					
ANR	6002489	Identifier	ctx		6002469	0					
ANR	6002490	Argument	0		6002469	1					
ANR	6002491	PrimaryExpression	0		6002469	0					
ANR	6002492	Argument	arg		6002469	2					
ANR	6002493	Identifier	arg		6002469	0					
ANR	6002494	Argument	buf		6002469	3					
ANR	6002495	Identifier	buf		6002469	0					
ANR	6002496	Argument	sizeof ( buf ) - 1		6002469	4					
ANR	6002497	AdditiveExpression	sizeof ( buf ) - 1		6002469	0		-			
ANR	6002498	SizeofExpression	sizeof ( buf )		6002469	0					
ANR	6002499	Sizeof	sizeof		6002469	0					
ANR	6002500	SizeofOperand	buf		6002469	1					
ANR	6002501	PrimaryExpression	1		6002469	1					
ANR	6002502	IfStatement	if ( status >= 0 )		6002469	3					
ANR	6002503	Condition	status >= 0	247:6:6504:6514	6002469	0	True				
ANR	6002504	RelationalExpression	status >= 0		6002469	0		>=			
ANR	6002505	Identifier	status		6002469	0					
ANR	6002506	PrimaryExpression	0		6002469	1					
ANR	6002507	CompoundStatement		7:4:126:126	6002469	1					
ANR	6002508	ExpressionStatement	buf [ status ] = 0	249:6:6529:6544	6002469	0	True				
ANR	6002509	AssignmentExpression	buf [ status ] = 0		6002469	0		=			
ANR	6002510	ArrayIndexing	buf [ status ]		6002469	0					
ANR	6002511	Identifier	buf		6002469	0					
ANR	6002512	Identifier	status		6002469	1					
ANR	6002513	PrimaryExpression	0		6002469	1					
ANR	6002514	ExpressionStatement	"fprintf ( stderr , ""value of param %s = %s\\n"" , arg , buf )"	250:6:6552:6606	6002469	1	True				
ANR	6002515	CallExpression	"fprintf ( stderr , ""value of param %s = %s\\n"" , arg , buf )"		6002469	0					
ANR	6002516	Callee	fprintf		6002469	0					
ANR	6002517	Identifier	fprintf		6002469	0					
ANR	6002518	ArgumentList	stderr		6002469	1					
ANR	6002519	Argument	stderr		6002469	0					
ANR	6002520	Identifier	stderr		6002469	0					
ANR	6002521	Argument	"""value of param %s = %s\\n"""		6002469	1					
ANR	6002522	PrimaryExpression	"""value of param %s = %s\\n"""		6002469	0					
ANR	6002523	Argument	arg		6002469	2					
ANR	6002524	Identifier	arg		6002469	0					
ANR	6002525	Argument	buf		6002469	3					
ANR	6002526	Identifier	buf		6002469	0					
ANR	6002527	ElseStatement	else		6002469	0					
ANR	6002528	CompoundStatement		12:4:230:230	6002469	0					
ANR	6002529	ExpressionStatement	"fprintf ( stderr , ""Error %d getting param %s\\n"" , status , arg )"	254:6:6633:6693	6002469	0	True				
ANR	6002530	CallExpression	"fprintf ( stderr , ""Error %d getting param %s\\n"" , status , arg )"		6002469	0					
ANR	6002531	Callee	fprintf		6002469	0					
ANR	6002532	Identifier	fprintf		6002469	0					
ANR	6002533	ArgumentList	stderr		6002469	1					
ANR	6002534	Argument	stderr		6002469	0					
ANR	6002535	Identifier	stderr		6002469	0					
ANR	6002536	Argument	"""Error %d getting param %s\\n"""		6002469	1					
ANR	6002537	PrimaryExpression	"""Error %d getting param %s\\n"""		6002469	0					
ANR	6002538	Argument	status		6002469	2					
ANR	6002539	Identifier	status		6002469	0					
ANR	6002540	Argument	arg		6002469	3					
ANR	6002541	Identifier	arg		6002469	0					
ANR	6002542	ReturnType	static void		6002469	1					
ANR	6002543	Identifier	example_get_param		6002469	2					
ANR	6002544	ParameterList	"IjsClientCtx * ctx , const char * arg"		6002469	3					
ANR	6002545	Parameter	IjsClientCtx * ctx	241:19:6358:6374	6002469	0	True				
ANR	6002546	ParameterType	IjsClientCtx *		6002469	0					
ANR	6002547	Identifier	ctx		6002469	1					
ANR	6002548	Parameter	const char * arg	241:38:6377:6391	6002469	1	True				
ANR	6002549	ParameterType	const char *		6002469	0					
ANR	6002550	Identifier	arg		6002469	1					
ANR	6002551	CFGEntryNode	ENTRY		6002469		True				
ANR	6002552	CFGExitNode	EXIT		6002469		True				
ANR	6002553	Symbol	buf		6002469						
ANR	6002554	Symbol	ijs_client_get_param		6002469						
ANR	6002555	Symbol	* buf		6002469						
ANR	6002556	Symbol	ctx		6002469						
ANR	6002557	Symbol	arg		6002469						
ANR	6002558	Symbol	stderr		6002469						
ANR	6002559	Symbol	* status		6002469						
ANR	6002560	Symbol	status		6002469						
ANR	6002561	Function	example_enum_param	258:0:6704:7085							
ANR	6002562	FunctionDef	"example_enum_param (IjsClientCtx * ctx , const char * arg)"		6002561	0					
ANR	6002563	CompoundStatement		260:0:6772:7085	6002561	0					
ANR	6002564	IdentifierDeclStatement	char buf [ 4096 ] ;	261:2:6776:6790	6002561	0	True				
ANR	6002565	IdentifierDecl	buf [ 4096 ]		6002561	0					
ANR	6002566	IdentifierDeclType	char [ 4096 ]		6002561	0					
ANR	6002567	Identifier	buf		6002561	1					
ANR	6002568	PrimaryExpression	4096		6002561	2					
ANR	6002569	IdentifierDeclStatement	int status ;	262:2:6794:6804	6002561	1	True				
ANR	6002570	IdentifierDecl	status		6002561	0					
ANR	6002571	IdentifierDeclType	int		6002561	0					
ANR	6002572	Identifier	status		6002561	1					
ANR	6002573	ExpressionStatement	"status = ijs_client_enum_param ( ctx , 0 , arg , buf , sizeof ( buf ) - 1 )"	264:2:6809:6875	6002561	2	True				
ANR	6002574	AssignmentExpression	"status = ijs_client_enum_param ( ctx , 0 , arg , buf , sizeof ( buf ) - 1 )"		6002561	0		=			
ANR	6002575	Identifier	status		6002561	0					
ANR	6002576	CallExpression	"ijs_client_enum_param ( ctx , 0 , arg , buf , sizeof ( buf ) - 1 )"		6002561	1					
ANR	6002577	Callee	ijs_client_enum_param		6002561	0					
ANR	6002578	Identifier	ijs_client_enum_param		6002561	0					
ANR	6002579	ArgumentList	ctx		6002561	1					
ANR	6002580	Argument	ctx		6002561	0					
ANR	6002581	Identifier	ctx		6002561	0					
ANR	6002582	Argument	0		6002561	1					
ANR	6002583	PrimaryExpression	0		6002561	0					
ANR	6002584	Argument	arg		6002561	2					
ANR	6002585	Identifier	arg		6002561	0					
ANR	6002586	Argument	buf		6002561	3					
ANR	6002587	Identifier	buf		6002561	0					
ANR	6002588	Argument	sizeof ( buf ) - 1		6002561	4					
ANR	6002589	AdditiveExpression	sizeof ( buf ) - 1		6002561	0		-			
ANR	6002590	SizeofExpression	sizeof ( buf )		6002561	0					
ANR	6002591	Sizeof	sizeof		6002561	0					
ANR	6002592	SizeofOperand	buf		6002561	1					
ANR	6002593	PrimaryExpression	1		6002561	1					
ANR	6002594	IfStatement	if ( status >= 0 )		6002561	3					
ANR	6002595	Condition	status >= 0	265:6:6883:6893	6002561	0	True				
ANR	6002596	RelationalExpression	status >= 0		6002561	0		>=			
ANR	6002597	Identifier	status		6002561	0					
ANR	6002598	PrimaryExpression	0		6002561	1					
ANR	6002599	CompoundStatement		7:4:127:127	6002561	1					
ANR	6002600	ExpressionStatement	buf [ status ] = 0	267:6:6908:6923	6002561	0	True				
ANR	6002601	AssignmentExpression	buf [ status ] = 0		6002561	0		=			
ANR	6002602	ArrayIndexing	buf [ status ]		6002561	0					
ANR	6002603	Identifier	buf		6002561	0					
ANR	6002604	Identifier	status		6002561	1					
ANR	6002605	PrimaryExpression	0		6002561	1					
ANR	6002606	ExpressionStatement	"fprintf ( stderr , ""enumeration of param %s: %s\\n"" , arg , buf )"	268:6:6931:6990	6002561	1	True				
ANR	6002607	CallExpression	"fprintf ( stderr , ""enumeration of param %s: %s\\n"" , arg , buf )"		6002561	0					
ANR	6002608	Callee	fprintf		6002561	0					
ANR	6002609	Identifier	fprintf		6002561	0					
ANR	6002610	ArgumentList	stderr		6002561	1					
ANR	6002611	Argument	stderr		6002561	0					
ANR	6002612	Identifier	stderr		6002561	0					
ANR	6002613	Argument	"""enumeration of param %s: %s\\n"""		6002561	1					
ANR	6002614	PrimaryExpression	"""enumeration of param %s: %s\\n"""		6002561	0					
ANR	6002615	Argument	arg		6002561	2					
ANR	6002616	Identifier	arg		6002561	0					
ANR	6002617	Argument	buf		6002561	3					
ANR	6002618	Identifier	buf		6002561	0					
ANR	6002619	ElseStatement	else		6002561	0					
ANR	6002620	CompoundStatement		12:4:236:236	6002561	0					
ANR	6002621	ExpressionStatement	"fprintf ( stderr , ""Error %d getting param %s\\n"" , status , arg )"	272:6:7017:7077	6002561	0	True				
ANR	6002622	CallExpression	"fprintf ( stderr , ""Error %d getting param %s\\n"" , status , arg )"		6002561	0					
ANR	6002623	Callee	fprintf		6002561	0					
ANR	6002624	Identifier	fprintf		6002561	0					
ANR	6002625	ArgumentList	stderr		6002561	1					
ANR	6002626	Argument	stderr		6002561	0					
ANR	6002627	Identifier	stderr		6002561	0					
ANR	6002628	Argument	"""Error %d getting param %s\\n"""		6002561	1					
ANR	6002629	PrimaryExpression	"""Error %d getting param %s\\n"""		6002561	0					
ANR	6002630	Argument	status		6002561	2					
ANR	6002631	Identifier	status		6002561	0					
ANR	6002632	Argument	arg		6002561	3					
ANR	6002633	Identifier	arg		6002561	0					
ANR	6002634	ReturnType	static void		6002561	1					
ANR	6002635	Identifier	example_enum_param		6002561	2					
ANR	6002636	ParameterList	"IjsClientCtx * ctx , const char * arg"		6002561	3					
ANR	6002637	Parameter	IjsClientCtx * ctx	259:20:6736:6752	6002561	0	True				
ANR	6002638	ParameterType	IjsClientCtx *		6002561	0					
ANR	6002639	Identifier	ctx		6002561	1					
ANR	6002640	Parameter	const char * arg	259:39:6755:6769	6002561	1	True				
ANR	6002641	ParameterType	const char *		6002561	0					
ANR	6002642	Identifier	arg		6002561	1					
ANR	6002643	CFGEntryNode	ENTRY		6002561		True				
ANR	6002644	CFGExitNode	EXIT		6002561		True				
ANR	6002645	Symbol	ijs_client_enum_param		6002561						
ANR	6002646	Symbol	buf		6002561						
ANR	6002647	Symbol	* buf		6002561						
ANR	6002648	Symbol	ctx		6002561						
ANR	6002649	Symbol	arg		6002561						
ANR	6002650	Symbol	stderr		6002561						
ANR	6002651	Symbol	* status		6002561						
ANR	6002652	Symbol	status		6002561						
ANR	6002653	Function	get_arg	276:0:7088:7318							
ANR	6002654	FunctionDef	"get_arg (int argc , char * * argv , int * pi , const char * arg)"		6002653	0					
ANR	6002655	CompoundStatement		278:0:7166:7318	6002653	0					
ANR	6002656	IfStatement	if ( arg [ 0 ] != 0 )		6002653	0					
ANR	6002657	Condition	arg [ 0 ] != 0	279:6:7174:7184	6002653	0	True				
ANR	6002658	EqualityExpression	arg [ 0 ] != 0		6002653	0		!=			
ANR	6002659	ArrayIndexing	arg [ 0 ]		6002653	0					
ANR	6002660	Identifier	arg		6002653	0					
ANR	6002661	PrimaryExpression	0		6002653	1					
ANR	6002662	PrimaryExpression	0		6002653	1					
ANR	6002663	ReturnStatement	return arg ;	280:4:7191:7201	6002653	1	True				
ANR	6002664	Identifier	arg		6002653	0					
ANR	6002665	ElseStatement	else		6002653	0					
ANR	6002666	CompoundStatement		5:4:47:47	6002653	0					
ANR	6002667	ExpressionStatement	( * pi ) ++	283:6:7222:7229	6002653	0	True				
ANR	6002668	PostIncDecOperationExpression	( * pi ) ++		6002653	0					
ANR	6002669	UnaryOperationExpression	* pi		6002653	0					
ANR	6002670	UnaryOperator	*		6002653	0					
ANR	6002671	Identifier	pi		6002653	1					
ANR	6002672	IncDec	++		6002653	1					
ANR	6002673	IfStatement	if ( * pi == argc )		6002653	1					
ANR	6002674	Condition	* pi == argc	284:10:7241:7251	6002653	0	True				
ANR	6002675	EqualityExpression	* pi == argc		6002653	0		==			
ANR	6002676	UnaryOperationExpression	* pi		6002653	0					
ANR	6002677	UnaryOperator	*		6002653	0					
ANR	6002678	Identifier	pi		6002653	1					
ANR	6002679	Identifier	argc		6002653	1					
ANR	6002680	ReturnStatement	return NULL ;	285:8:7262:7273	6002653	1	True				
ANR	6002681	Identifier	NULL		6002653	0					
ANR	6002682	ElseStatement	else		6002653	0					
ANR	6002683	ReturnStatement	return argv [ * pi ] ;	287:8:7294:7310	6002653	0	True				
ANR	6002684	ArrayIndexing	argv [ * pi ]		6002653	0					
ANR	6002685	Identifier	argv		6002653	0					
ANR	6002686	UnaryOperationExpression	* pi		6002653	1					
ANR	6002687	UnaryOperator	*		6002653	0					
ANR	6002688	Identifier	pi		6002653	1					
ANR	6002689	ReturnType	static const char *		6002653	1					
ANR	6002690	Identifier	get_arg		6002653	2					
ANR	6002691	ParameterList	"int argc , char * * argv , int * pi , const char * arg"		6002653	3					
ANR	6002692	Parameter	int argc	277:9:7117:7124	6002653	0	True				
ANR	6002693	ParameterType	int		6002653	0					
ANR	6002694	Identifier	argc		6002653	1					
ANR	6002695	Parameter	char * * argv	277:19:7127:7137	6002653	1	True				
ANR	6002696	ParameterType	char * *		6002653	0					
ANR	6002697	Identifier	argv		6002653	1					
ANR	6002698	Parameter	int * pi	277:32:7140:7146	6002653	2	True				
ANR	6002699	ParameterType	int *		6002653	0					
ANR	6002700	Identifier	pi		6002653	1					
ANR	6002701	Parameter	const char * arg	277:41:7149:7163	6002653	3	True				
ANR	6002702	ParameterType	const char *		6002653	0					
ANR	6002703	Identifier	arg		6002653	1					
ANR	6002704	CFGEntryNode	ENTRY		6002653		True				
ANR	6002705	CFGExitNode	EXIT		6002653		True				
ANR	6002706	Symbol	argc		6002653						
ANR	6002707	Symbol	NULL		6002653						
ANR	6002708	Symbol	arg		6002653						
ANR	6002709	Symbol	* * pi		6002653						
ANR	6002710	Symbol	pi		6002653						
ANR	6002711	Symbol	* argv		6002653						
ANR	6002712	Symbol	* pi		6002653						
ANR	6002713	Symbol	argv		6002653						
ANR	6002714	Symbol	* arg		6002653						
ANR	6002715	Function	main	291:0:7321:9655							
ANR	6002716	FunctionDef	"main (int argc , char * * argv)"		6002715	0					
ANR	6002717	CompoundStatement		293:0:7354:9655	6002715	0					
ANR	6002718	IdentifierDeclStatement	IjsClientCtx * ctx ;	294:2:7358:7375	6002715	0	True				
ANR	6002719	IdentifierDecl	* ctx		6002715	0					
ANR	6002720	IdentifierDeclType	IjsClientCtx *		6002715	0					
ANR	6002721	Identifier	ctx		6002715	1					
ANR	6002722	IdentifierDeclStatement	int i ;	295:2:7379:7384	6002715	1	True				
ANR	6002723	IdentifierDecl	i		6002715	0					
ANR	6002724	IdentifierDeclType	int		6002715	0					
ANR	6002725	Identifier	i		6002715	1					
ANR	6002726	IdentifierDeclStatement	"int xres = 300 , yres = 300 ;"	296:2:7388:7414	6002715	2	True				
ANR	6002727	IdentifierDecl	xres = 300		6002715	0					
ANR	6002728	IdentifierDeclType	int		6002715	0					
ANR	6002729	Identifier	xres		6002715	1					
ANR	6002730	AssignmentExpression	xres = 300		6002715	2		=			
ANR	6002731	Identifier	xres		6002715	0					
ANR	6002732	PrimaryExpression	300		6002715	1					
ANR	6002733	IdentifierDecl	yres = 300		6002715	1					
ANR	6002734	IdentifierDeclType	int		6002715	0					
ANR	6002735	Identifier	yres		6002715	1					
ANR	6002736	AssignmentExpression	yres = 300		6002715	2		=			
ANR	6002737	Identifier	yres		6002715	0					
ANR	6002738	PrimaryExpression	300		6002715	1					
ANR	6002739	ExpressionStatement	ctx = NULL	298:2:7419:7429	6002715	3	True				
ANR	6002740	AssignmentExpression	ctx = NULL		6002715	0		=			
ANR	6002741	Identifier	ctx		6002715	0					
ANR	6002742	Identifier	NULL		6002715	1					
ANR	6002743	ForStatement	for ( i = 1 ; i < argc ; i ++ )		6002715	4					
ANR	6002744	ForInit	i = 1 ;	300:7:7439:7444	6002715	0	True				
ANR	6002745	AssignmentExpression	i = 1		6002715	0		=			
ANR	6002746	Identifier	i		6002715	0					
ANR	6002747	PrimaryExpression	1		6002715	1					
ANR	6002748	Condition	i < argc	300:14:7446:7453	6002715	1	True				
ANR	6002749	RelationalExpression	i < argc		6002715	0		<			
ANR	6002750	Identifier	i		6002715	0					
ANR	6002751	Identifier	argc		6002715	1					
ANR	6002752	PostIncDecOperationExpression	i ++	300:24:7456:7458	6002715	2	True				
ANR	6002753	Identifier	i		6002715	0					
ANR	6002754	IncDec	++		6002715	1					
ANR	6002755	CompoundStatement		10:6:118:143	6002715	3					
ANR	6002756	IdentifierDeclStatement	const char * arg = argv [ i ] ;	302:6:7473:7498	6002715	0	True				
ANR	6002757	IdentifierDecl	* arg = argv [ i ]		6002715	0					
ANR	6002758	IdentifierDeclType	const char *		6002715	0					
ANR	6002759	Identifier	arg		6002715	1					
ANR	6002760	AssignmentExpression	* arg = argv [ i ]		6002715	2		=			
ANR	6002761	Identifier	arg		6002715	0					
ANR	6002762	ArrayIndexing	argv [ i ]		6002715	1					
ANR	6002763	Identifier	argv		6002715	0					
ANR	6002764	Identifier	i		6002715	1					
ANR	6002765	IfStatement	if ( arg [ 0 ] == '-' )		6002715	1					
ANR	6002766	Condition	arg [ 0 ] == '-'	304:10:7511:7523	6002715	0	True				
ANR	6002767	EqualityExpression	arg [ 0 ] == '-'		6002715	0		==			
ANR	6002768	ArrayIndexing	arg [ 0 ]		6002715	0					
ANR	6002769	Identifier	arg		6002715	0					
ANR	6002770	PrimaryExpression	0		6002715	1					
ANR	6002771	PrimaryExpression	'-'		6002715	1					
ANR	6002772	CompoundStatement		13:8:179:179	6002715	1					
ANR	6002773	SwitchStatement	switch ( arg [ 1 ] )		6002715	0					
ANR	6002774	Condition	arg [ 1 ]	306:18:7554:7559	6002715	0	True				
ANR	6002775	ArrayIndexing	arg [ 1 ]		6002715	0					
ANR	6002776	Identifier	arg		6002715	0					
ANR	6002777	PrimaryExpression	1		6002715	1					
ANR	6002778	CompoundStatement		15:12:219:219	6002715	1					
ANR	6002779	Label	case 'r' :	308:12:7588:7597	6002715	0	True				
ANR	6002780	CompoundStatement		18:16:276:286	6002715	1					
ANR	6002781	IdentifierDeclStatement	char * tail ;	310:16:7631:7641	6002715	0	True				
ANR	6002782	IdentifierDecl	* tail		6002715	0					
ANR	6002783	IdentifierDeclType	char *		6002715	0					
ANR	6002784	Identifier	tail		6002715	1					
ANR	6002785	ExpressionStatement	"arg = get_arg ( argc , argv , & i , arg + 2 )"	312:16:7660:7699	6002715	1	True				
ANR	6002786	AssignmentExpression	"arg = get_arg ( argc , argv , & i , arg + 2 )"		6002715	0		=			
ANR	6002787	Identifier	arg		6002715	0					
ANR	6002788	CallExpression	"get_arg ( argc , argv , & i , arg + 2 )"		6002715	1					
ANR	6002789	Callee	get_arg		6002715	0					
ANR	6002790	Identifier	get_arg		6002715	0					
ANR	6002791	ArgumentList	argc		6002715	1					
ANR	6002792	Argument	argc		6002715	0					
ANR	6002793	Identifier	argc		6002715	0					
ANR	6002794	Argument	argv		6002715	1					
ANR	6002795	Identifier	argv		6002715	0					
ANR	6002796	Argument	& i		6002715	2					
ANR	6002797	UnaryOperationExpression	& i		6002715	0					
ANR	6002798	UnaryOperator	&		6002715	0					
ANR	6002799	Identifier	i		6002715	1					
ANR	6002800	Argument	arg + 2		6002715	3					
ANR	6002801	AdditiveExpression	arg + 2		6002715	0		+			
ANR	6002802	Identifier	arg		6002715	0					
ANR	6002803	PrimaryExpression	2		6002715	1					
ANR	6002804	ExpressionStatement	"xres = strtol ( arg , & tail , 10 )"	313:16:7717:7747	6002715	2	True				
ANR	6002805	AssignmentExpression	"xres = strtol ( arg , & tail , 10 )"		6002715	0		=			
ANR	6002806	Identifier	xres		6002715	0					
ANR	6002807	CallExpression	"strtol ( arg , & tail , 10 )"		6002715	1					
ANR	6002808	Callee	strtol		6002715	0					
ANR	6002809	Identifier	strtol		6002715	0					
ANR	6002810	ArgumentList	arg		6002715	1					
ANR	6002811	Argument	arg		6002715	0					
ANR	6002812	Identifier	arg		6002715	0					
ANR	6002813	Argument	& tail		6002715	1					
ANR	6002814	UnaryOperationExpression	& tail		6002715	0					
ANR	6002815	UnaryOperator	&		6002715	0					
ANR	6002816	Identifier	tail		6002715	1					
ANR	6002817	Argument	10		6002715	2					
ANR	6002818	PrimaryExpression	10		6002715	0					
ANR	6002819	IfStatement	if ( tail [ 0 ] == 0 )		6002715	3					
ANR	6002820	Condition	tail [ 0 ] == 0	314:20:7769:7780	6002715	0	True				
ANR	6002821	EqualityExpression	tail [ 0 ] == 0		6002715	0		==			
ANR	6002822	ArrayIndexing	tail [ 0 ]		6002715	0					
ANR	6002823	Identifier	tail		6002715	0					
ANR	6002824	PrimaryExpression	0		6002715	1					
ANR	6002825	PrimaryExpression	0		6002715	1					
ANR	6002826	ExpressionStatement	yres = xres	315:18:7801:7812	6002715	1	True				
ANR	6002827	AssignmentExpression	yres = xres		6002715	0		=			
ANR	6002828	Identifier	yres		6002715	0					
ANR	6002829	Identifier	xres		6002715	1					
ANR	6002830	ElseStatement	else		6002715	0					
ANR	6002831	IfStatement	if ( tail [ 0 ] == 'x' )		6002715	0					
ANR	6002832	Condition	tail [ 0 ] == 'x'	316:25:7839:7852	6002715	0	True				
ANR	6002833	EqualityExpression	tail [ 0 ] == 'x'		6002715	0		==			
ANR	6002834	ArrayIndexing	tail [ 0 ]		6002715	0					
ANR	6002835	Identifier	tail		6002715	0					
ANR	6002836	PrimaryExpression	0		6002715	1					
ANR	6002837	PrimaryExpression	'x'		6002715	1					
ANR	6002838	ExpressionStatement	"yres = strtol ( tail + 1 , & tail , 10 )"	317:18:7873:7908	6002715	1	True				
ANR	6002839	AssignmentExpression	"yres = strtol ( tail + 1 , & tail , 10 )"		6002715	0		=			
ANR	6002840	Identifier	yres		6002715	0					
ANR	6002841	CallExpression	"strtol ( tail + 1 , & tail , 10 )"		6002715	1					
ANR	6002842	Callee	strtol		6002715	0					
ANR	6002843	Identifier	strtol		6002715	0					
ANR	6002844	ArgumentList	tail + 1		6002715	1					
ANR	6002845	Argument	tail + 1		6002715	0					
ANR	6002846	AdditiveExpression	tail + 1		6002715	0		+			
ANR	6002847	Identifier	tail		6002715	0					
ANR	6002848	PrimaryExpression	1		6002715	1					
ANR	6002849	Argument	& tail		6002715	1					
ANR	6002850	UnaryOperationExpression	& tail		6002715	0					
ANR	6002851	UnaryOperator	&		6002715	0					
ANR	6002852	Identifier	tail		6002715	1					
ANR	6002853	Argument	10		6002715	2					
ANR	6002854	PrimaryExpression	10		6002715	0					
ANR	6002855	BreakStatement	break ;	319:14:7940:7945	6002715	2	True				
ANR	6002856	Label	case 's' :	320:12:7959:7967	6002715	3	True				
ANR	6002857	ExpressionStatement	"arg = get_arg ( argc , argv , & i , arg + 2 )"	321:14:7983:8022	6002715	4	True				
ANR	6002858	AssignmentExpression	"arg = get_arg ( argc , argv , & i , arg + 2 )"		6002715	0		=			
ANR	6002859	Identifier	arg		6002715	0					
ANR	6002860	CallExpression	"get_arg ( argc , argv , & i , arg + 2 )"		6002715	1					
ANR	6002861	Callee	get_arg		6002715	0					
ANR	6002862	Identifier	get_arg		6002715	0					
ANR	6002863	ArgumentList	argc		6002715	1					
ANR	6002864	Argument	argc		6002715	0					
ANR	6002865	Identifier	argc		6002715	0					
ANR	6002866	Argument	argv		6002715	1					
ANR	6002867	Identifier	argv		6002715	0					
ANR	6002868	Argument	& i		6002715	2					
ANR	6002869	UnaryOperationExpression	& i		6002715	0					
ANR	6002870	UnaryOperator	&		6002715	0					
ANR	6002871	Identifier	i		6002715	1					
ANR	6002872	Argument	arg + 2		6002715	3					
ANR	6002873	AdditiveExpression	arg + 2		6002715	0		+			
ANR	6002874	Identifier	arg		6002715	0					
ANR	6002875	PrimaryExpression	2		6002715	1					
ANR	6002876	ExpressionStatement	ctx = ijs_invoke_server ( arg )	322:14:8038:8067	6002715	5	True				
ANR	6002877	AssignmentExpression	ctx = ijs_invoke_server ( arg )		6002715	0		=			
ANR	6002878	Identifier	ctx		6002715	0					
ANR	6002879	CallExpression	ijs_invoke_server ( arg )		6002715	1					
ANR	6002880	Callee	ijs_invoke_server		6002715	0					
ANR	6002881	Identifier	ijs_invoke_server		6002715	0					
ANR	6002882	ArgumentList	arg		6002715	1					
ANR	6002883	Argument	arg		6002715	0					
ANR	6002884	Identifier	arg		6002715	0					
ANR	6002885	IfStatement	if ( ! ctx )		6002715	6					
ANR	6002886	Condition	! ctx	323:18:8087:8090	6002715	0	True				
ANR	6002887	UnaryOperationExpression	! ctx		6002715	0					
ANR	6002888	UnaryOperator	!		6002715	0					
ANR	6002889	Identifier	ctx		6002715	1					
ANR	6002890	CompoundStatement		31:24:738:738	6002715	1					
ANR	6002891	ExpressionStatement	"fprintf ( stderr , ""ijs_invoke_server %s failed\\n"" , arg )"	324:16:8111:8165	6002715	0	True				
ANR	6002892	CallExpression	"fprintf ( stderr , ""ijs_invoke_server %s failed\\n"" , arg )"		6002715	0					
ANR	6002893	Callee	fprintf		6002715	0					
ANR	6002894	Identifier	fprintf		6002715	0					
ANR	6002895	ArgumentList	stderr		6002715	1					
ANR	6002896	Argument	stderr		6002715	0					
ANR	6002897	Identifier	stderr		6002715	0					
ANR	6002898	Argument	"""ijs_invoke_server %s failed\\n"""		6002715	1					
ANR	6002899	PrimaryExpression	"""ijs_invoke_server %s failed\\n"""		6002715	0					
ANR	6002900	Argument	arg		6002715	2					
ANR	6002901	Identifier	arg		6002715	0					
ANR	6002902	ReturnStatement	return 1 ;	325:16:8183:8191	6002715	1	True				
ANR	6002903	PrimaryExpression	1		6002715	0					
ANR	6002904	ExpressionStatement	ijs_client_open ( ctx )	327:14:8223:8244	6002715	7	True				
ANR	6002905	CallExpression	ijs_client_open ( ctx )		6002715	0					
ANR	6002906	Callee	ijs_client_open		6002715	0					
ANR	6002907	Identifier	ijs_client_open		6002715	0					
ANR	6002908	ArgumentList	ctx		6002715	1					
ANR	6002909	Argument	ctx		6002715	0					
ANR	6002910	Identifier	ctx		6002715	0					
ANR	6002911	ExpressionStatement	"ijs_client_begin_job ( ctx , 0 )"	328:14:8260:8289	6002715	8	True				
ANR	6002912	CallExpression	"ijs_client_begin_job ( ctx , 0 )"		6002715	0					
ANR	6002913	Callee	ijs_client_begin_job		6002715	0					
ANR	6002914	Identifier	ijs_client_begin_job		6002715	0					
ANR	6002915	ArgumentList	ctx		6002715	1					
ANR	6002916	Argument	ctx		6002715	0					
ANR	6002917	Identifier	ctx		6002715	0					
ANR	6002918	Argument	0		6002715	1					
ANR	6002919	PrimaryExpression	0		6002715	0					
ANR	6002920	BreakStatement	break ;	329:14:8305:8310	6002715	9	True				
ANR	6002921	Label	case 'p' :	330:12:8324:8332	6002715	10	True				
ANR	6002922	ExpressionStatement	"arg = get_arg ( argc , argv , & i , arg + 2 )"	331:14:8348:8387	6002715	11	True				
ANR	6002923	AssignmentExpression	"arg = get_arg ( argc , argv , & i , arg + 2 )"		6002715	0		=			
ANR	6002924	Identifier	arg		6002715	0					
ANR	6002925	CallExpression	"get_arg ( argc , argv , & i , arg + 2 )"		6002715	1					
ANR	6002926	Callee	get_arg		6002715	0					
ANR	6002927	Identifier	get_arg		6002715	0					
ANR	6002928	ArgumentList	argc		6002715	1					
ANR	6002929	Argument	argc		6002715	0					
ANR	6002930	Identifier	argc		6002715	0					
ANR	6002931	Argument	argv		6002715	1					
ANR	6002932	Identifier	argv		6002715	0					
ANR	6002933	Argument	& i		6002715	2					
ANR	6002934	UnaryOperationExpression	& i		6002715	0					
ANR	6002935	UnaryOperator	&		6002715	0					
ANR	6002936	Identifier	i		6002715	1					
ANR	6002937	Argument	arg + 2		6002715	3					
ANR	6002938	AdditiveExpression	arg + 2		6002715	0		+			
ANR	6002939	Identifier	arg		6002715	0					
ANR	6002940	PrimaryExpression	2		6002715	1					
ANR	6002941	ExpressionStatement	verify_context ( ctx )	332:14:8403:8423	6002715	12	True				
ANR	6002942	CallExpression	verify_context ( ctx )		6002715	0					
ANR	6002943	Callee	verify_context		6002715	0					
ANR	6002944	Identifier	verify_context		6002715	0					
ANR	6002945	ArgumentList	ctx		6002715	1					
ANR	6002946	Argument	ctx		6002715	0					
ANR	6002947	Identifier	ctx		6002715	0					
ANR	6002948	ExpressionStatement	"example_set_params ( ctx , arg )"	333:14:8439:8468	6002715	13	True				
ANR	6002949	CallExpression	"example_set_params ( ctx , arg )"		6002715	0					
ANR	6002950	Callee	example_set_params		6002715	0					
ANR	6002951	Identifier	example_set_params		6002715	0					
ANR	6002952	ArgumentList	ctx		6002715	1					
ANR	6002953	Argument	ctx		6002715	0					
ANR	6002954	Identifier	ctx		6002715	0					
ANR	6002955	Argument	arg		6002715	1					
ANR	6002956	Identifier	arg		6002715	0					
ANR	6002957	BreakStatement	break ;	334:14:8484:8489	6002715	14	True				
ANR	6002958	Label	case 'g' :	335:12:8503:8511	6002715	15	True				
ANR	6002959	ExpressionStatement	"arg = get_arg ( argc , argv , & i , arg + 2 )"	336:14:8527:8566	6002715	16	True				
ANR	6002960	AssignmentExpression	"arg = get_arg ( argc , argv , & i , arg + 2 )"		6002715	0		=			
ANR	6002961	Identifier	arg		6002715	0					
ANR	6002962	CallExpression	"get_arg ( argc , argv , & i , arg + 2 )"		6002715	1					
ANR	6002963	Callee	get_arg		6002715	0					
ANR	6002964	Identifier	get_arg		6002715	0					
ANR	6002965	ArgumentList	argc		6002715	1					
ANR	6002966	Argument	argc		6002715	0					
ANR	6002967	Identifier	argc		6002715	0					
ANR	6002968	Argument	argv		6002715	1					
ANR	6002969	Identifier	argv		6002715	0					
ANR	6002970	Argument	& i		6002715	2					
ANR	6002971	UnaryOperationExpression	& i		6002715	0					
ANR	6002972	UnaryOperator	&		6002715	0					
ANR	6002973	Identifier	i		6002715	1					
ANR	6002974	Argument	arg + 2		6002715	3					
ANR	6002975	AdditiveExpression	arg + 2		6002715	0		+			
ANR	6002976	Identifier	arg		6002715	0					
ANR	6002977	PrimaryExpression	2		6002715	1					
ANR	6002978	ExpressionStatement	verify_context ( ctx )	337:14:8582:8602	6002715	17	True				
ANR	6002979	CallExpression	verify_context ( ctx )		6002715	0					
ANR	6002980	Callee	verify_context		6002715	0					
ANR	6002981	Identifier	verify_context		6002715	0					
ANR	6002982	ArgumentList	ctx		6002715	1					
ANR	6002983	Argument	ctx		6002715	0					
ANR	6002984	Identifier	ctx		6002715	0					
ANR	6002985	ExpressionStatement	"example_get_param ( ctx , arg )"	338:14:8618:8646	6002715	18	True				
ANR	6002986	CallExpression	"example_get_param ( ctx , arg )"		6002715	0					
ANR	6002987	Callee	example_get_param		6002715	0					
ANR	6002988	Identifier	example_get_param		6002715	0					
ANR	6002989	ArgumentList	ctx		6002715	1					
ANR	6002990	Argument	ctx		6002715	0					
ANR	6002991	Identifier	ctx		6002715	0					
ANR	6002992	Argument	arg		6002715	1					
ANR	6002993	Identifier	arg		6002715	0					
ANR	6002994	BreakStatement	break ;	339:14:8662:8667	6002715	19	True				
ANR	6002995	Label	case 'e' :	340:12:8681:8689	6002715	20	True				
ANR	6002996	ExpressionStatement	"arg = get_arg ( argc , argv , & i , arg + 2 )"	341:14:8705:8744	6002715	21	True				
ANR	6002997	AssignmentExpression	"arg = get_arg ( argc , argv , & i , arg + 2 )"		6002715	0		=			
ANR	6002998	Identifier	arg		6002715	0					
ANR	6002999	CallExpression	"get_arg ( argc , argv , & i , arg + 2 )"		6002715	1					
ANR	6003000	Callee	get_arg		6002715	0					
ANR	6003001	Identifier	get_arg		6002715	0					
ANR	6003002	ArgumentList	argc		6002715	1					
ANR	6003003	Argument	argc		6002715	0					
ANR	6003004	Identifier	argc		6002715	0					
ANR	6003005	Argument	argv		6002715	1					
ANR	6003006	Identifier	argv		6002715	0					
ANR	6003007	Argument	& i		6002715	2					
ANR	6003008	UnaryOperationExpression	& i		6002715	0					
ANR	6003009	UnaryOperator	&		6002715	0					
ANR	6003010	Identifier	i		6002715	1					
ANR	6003011	Argument	arg + 2		6002715	3					
ANR	6003012	AdditiveExpression	arg + 2		6002715	0		+			
ANR	6003013	Identifier	arg		6002715	0					
ANR	6003014	PrimaryExpression	2		6002715	1					
ANR	6003015	ExpressionStatement	verify_context ( ctx )	342:14:8760:8780	6002715	22	True				
ANR	6003016	CallExpression	verify_context ( ctx )		6002715	0					
ANR	6003017	Callee	verify_context		6002715	0					
ANR	6003018	Identifier	verify_context		6002715	0					
ANR	6003019	ArgumentList	ctx		6002715	1					
ANR	6003020	Argument	ctx		6002715	0					
ANR	6003021	Identifier	ctx		6002715	0					
ANR	6003022	ExpressionStatement	"example_enum_param ( ctx , arg )"	343:14:8796:8825	6002715	23	True				
ANR	6003023	CallExpression	"example_enum_param ( ctx , arg )"		6002715	0					
ANR	6003024	Callee	example_enum_param		6002715	0					
ANR	6003025	Identifier	example_enum_param		6002715	0					
ANR	6003026	ArgumentList	ctx		6002715	1					
ANR	6003027	Argument	ctx		6002715	0					
ANR	6003028	Identifier	ctx		6002715	0					
ANR	6003029	Argument	arg		6002715	1					
ANR	6003030	Identifier	arg		6002715	0					
ANR	6003031	BreakStatement	break ;	344:14:8841:8846	6002715	24	True				
ANR	6003032	Label	case 'l' :	345:12:8860:8868	6002715	25	True				
ANR	6003033	ExpressionStatement	verify_context ( ctx )	346:14:8884:8904	6002715	26	True				
ANR	6003034	CallExpression	verify_context ( ctx )		6002715	0					
ANR	6003035	Callee	verify_context		6002715	0					
ANR	6003036	Identifier	verify_context		6002715	0					
ANR	6003037	ArgumentList	ctx		6002715	1					
ANR	6003038	Argument	ctx		6002715	0					
ANR	6003039	Identifier	ctx		6002715	0					
ANR	6003040	ExpressionStatement	example_list_params ( ctx )	347:14:8920:8945	6002715	27	True				
ANR	6003041	CallExpression	example_list_params ( ctx )		6002715	0					
ANR	6003042	Callee	example_list_params		6002715	0					
ANR	6003043	Identifier	example_list_params		6002715	0					
ANR	6003044	ArgumentList	ctx		6002715	1					
ANR	6003045	Argument	ctx		6002715	0					
ANR	6003046	Identifier	ctx		6002715	0					
ANR	6003047	BreakStatement	break ;	348:14:8961:8966	6002715	28	True				
ANR	6003048	Label	case 0 :	349:12:8980:8986	6002715	29	True				
ANR	6003049	ExpressionStatement	verify_context ( ctx )	350:14:9002:9022	6002715	30	True				
ANR	6003050	CallExpression	verify_context ( ctx )		6002715	0					
ANR	6003051	Callee	verify_context		6002715	0					
ANR	6003052	Identifier	verify_context		6002715	0					
ANR	6003053	ArgumentList	ctx		6002715	1					
ANR	6003054	Argument	ctx		6002715	0					
ANR	6003055	Identifier	ctx		6002715	0					
ANR	6003056	ExpressionStatement	"send_pnm_file ( ctx , stdin , xres , yres )"	351:14:9038:9076	6002715	31	True				
ANR	6003057	CallExpression	"send_pnm_file ( ctx , stdin , xres , yres )"		6002715	0					
ANR	6003058	Callee	send_pnm_file		6002715	0					
ANR	6003059	Identifier	send_pnm_file		6002715	0					
ANR	6003060	ArgumentList	ctx		6002715	1					
ANR	6003061	Argument	ctx		6002715	0					
ANR	6003062	Identifier	ctx		6002715	0					
ANR	6003063	Argument	stdin		6002715	1					
ANR	6003064	Identifier	stdin		6002715	0					
ANR	6003065	Argument	xres		6002715	2					
ANR	6003066	Identifier	xres		6002715	0					
ANR	6003067	Argument	yres		6002715	3					
ANR	6003068	Identifier	yres		6002715	0					
ANR	6003069	BreakStatement	break ;	352:14:9092:9097	6002715	32	True				
ANR	6003070	ElseStatement	else		6002715	0					
ANR	6003071	CompoundStatement		65:10:1799:1826	6002715	0					
ANR	6003072	IdentifierDeclStatement	"FILE * f = fopen ( arg , ""rb"" ) ;"	357:10:9154:9181	6002715	0	True				
ANR	6003073	IdentifierDecl	"* f = fopen ( arg , ""rb"" )"		6002715	0					
ANR	6003074	IdentifierDeclType	FILE *		6002715	0					
ANR	6003075	Identifier	f		6002715	1					
ANR	6003076	AssignmentExpression	"* f = fopen ( arg , ""rb"" )"		6002715	2		=			
ANR	6003077	Identifier	f		6002715	0					
ANR	6003078	CallExpression	"fopen ( arg , ""rb"" )"		6002715	1					
ANR	6003079	Callee	fopen		6002715	0					
ANR	6003080	Identifier	fopen		6002715	0					
ANR	6003081	ArgumentList	arg		6002715	1					
ANR	6003082	Argument	arg		6002715	0					
ANR	6003083	Identifier	arg		6002715	0					
ANR	6003084	Argument	"""rb"""		6002715	1					
ANR	6003085	PrimaryExpression	"""rb"""		6002715	0					
ANR	6003086	IfStatement	if ( f == NULL )		6002715	1					
ANR	6003087	Condition	f == NULL	359:14:9198:9206	6002715	0	True				
ANR	6003088	EqualityExpression	f == NULL		6002715	0		==			
ANR	6003089	Identifier	f		6002715	0					
ANR	6003090	Identifier	NULL		6002715	1					
ANR	6003091	CompoundStatement		68:12:1866:1866	6002715	1					
ANR	6003092	ExpressionStatement	"fprintf ( stderr , ""error opening %s\\n"" , arg )"	361:14:9237:9280	6002715	0	True				
ANR	6003093	CallExpression	"fprintf ( stderr , ""error opening %s\\n"" , arg )"		6002715	0					
ANR	6003094	Callee	fprintf		6002715	0					
ANR	6003095	Identifier	fprintf		6002715	0					
ANR	6003096	ArgumentList	stderr		6002715	1					
ANR	6003097	Argument	stderr		6002715	0					
ANR	6003098	Identifier	stderr		6002715	0					
ANR	6003099	Argument	"""error opening %s\\n"""		6002715	1					
ANR	6003100	PrimaryExpression	"""error opening %s\\n"""		6002715	0					
ANR	6003101	Argument	arg		6002715	2					
ANR	6003102	Identifier	arg		6002715	0					
ANR	6003103	ReturnStatement	return 1 ;	362:14:9296:9304	6002715	1	True				
ANR	6003104	PrimaryExpression	1		6002715	0					
ANR	6003105	ExpressionStatement	verify_context ( ctx )	364:10:9330:9350	6002715	2	True				
ANR	6003106	CallExpression	verify_context ( ctx )		6002715	0					
ANR	6003107	Callee	verify_context		6002715	0					
ANR	6003108	Identifier	verify_context		6002715	0					
ANR	6003109	ArgumentList	ctx		6002715	1					
ANR	6003110	Argument	ctx		6002715	0					
ANR	6003111	Identifier	ctx		6002715	0					
ANR	6003112	ExpressionStatement	"send_pnm_file ( ctx , f , xres , yres )"	365:10:9362:9396	6002715	3	True				
ANR	6003113	CallExpression	"send_pnm_file ( ctx , f , xres , yres )"		6002715	0					
ANR	6003114	Callee	send_pnm_file		6002715	0					
ANR	6003115	Identifier	send_pnm_file		6002715	0					
ANR	6003116	ArgumentList	ctx		6002715	1					
ANR	6003117	Argument	ctx		6002715	0					
ANR	6003118	Identifier	ctx		6002715	0					
ANR	6003119	Argument	f		6002715	1					
ANR	6003120	Identifier	f		6002715	0					
ANR	6003121	Argument	xres		6002715	2					
ANR	6003122	Identifier	xres		6002715	0					
ANR	6003123	Argument	yres		6002715	3					
ANR	6003124	Identifier	yres		6002715	0					
ANR	6003125	ExpressionStatement	fclose ( f )	366:10:9408:9418	6002715	4	True				
ANR	6003126	CallExpression	fclose ( f )		6002715	0					
ANR	6003127	Callee	fclose		6002715	0					
ANR	6003128	Identifier	fclose		6002715	0					
ANR	6003129	ArgumentList	f		6002715	1					
ANR	6003130	Argument	f		6002715	0					
ANR	6003131	Identifier	f		6002715	0					
ANR	6003132	ExpressionStatement	verify_context ( ctx )	370:2:9439:9459	6002715	5	True				
ANR	6003133	CallExpression	verify_context ( ctx )		6002715	0					
ANR	6003134	Callee	verify_context		6002715	0					
ANR	6003135	Identifier	verify_context		6002715	0					
ANR	6003136	ArgumentList	ctx		6002715	1					
ANR	6003137	Argument	ctx		6002715	0					
ANR	6003138	Identifier	ctx		6002715	0					
ANR	6003139	ExpressionStatement	"ijs_client_end_job ( ctx , 0 )"	372:2:9464:9491	6002715	6	True				
ANR	6003140	CallExpression	"ijs_client_end_job ( ctx , 0 )"		6002715	0					
ANR	6003141	Callee	ijs_client_end_job		6002715	0					
ANR	6003142	Identifier	ijs_client_end_job		6002715	0					
ANR	6003143	ArgumentList	ctx		6002715	1					
ANR	6003144	Argument	ctx		6002715	0					
ANR	6003145	Identifier	ctx		6002715	0					
ANR	6003146	Argument	0		6002715	1					
ANR	6003147	PrimaryExpression	0		6002715	0					
ANR	6003148	ExpressionStatement	ijs_client_close ( ctx )	373:2:9495:9517	6002715	7	True				
ANR	6003149	CallExpression	ijs_client_close ( ctx )		6002715	0					
ANR	6003150	Callee	ijs_client_close		6002715	0					
ANR	6003151	Identifier	ijs_client_close		6002715	0					
ANR	6003152	ArgumentList	ctx		6002715	1					
ANR	6003153	Argument	ctx		6002715	0					
ANR	6003154	Identifier	ctx		6002715	0					
ANR	6003155	ExpressionStatement	"ijs_client_begin_cmd ( ctx , IJS_CMD_EXIT )"	376:2:9566:9606	6002715	8	True				
ANR	6003156	CallExpression	"ijs_client_begin_cmd ( ctx , IJS_CMD_EXIT )"		6002715	0					
ANR	6003157	Callee	ijs_client_begin_cmd		6002715	0					
ANR	6003158	Identifier	ijs_client_begin_cmd		6002715	0					
ANR	6003159	ArgumentList	ctx		6002715	1					
ANR	6003160	Argument	ctx		6002715	0					
ANR	6003161	Identifier	ctx		6002715	0					
ANR	6003162	Argument	IJS_CMD_EXIT		6002715	1					
ANR	6003163	Identifier	IJS_CMD_EXIT		6002715	0					
ANR	6003164	ExpressionStatement	ijs_client_send_cmd_wait ( ctx )	377:2:9610:9640	6002715	9	True				
ANR	6003165	CallExpression	ijs_client_send_cmd_wait ( ctx )		6002715	0					
ANR	6003166	Callee	ijs_client_send_cmd_wait		6002715	0					
ANR	6003167	Identifier	ijs_client_send_cmd_wait		6002715	0					
ANR	6003168	ArgumentList	ctx		6002715	1					
ANR	6003169	Argument	ctx		6002715	0					
ANR	6003170	Identifier	ctx		6002715	0					
ANR	6003171	ReturnStatement	return 0 ;	379:2:9645:9653	6002715	10	True				
ANR	6003172	PrimaryExpression	0		6002715	0					
ANR	6003173	ReturnType	int		6002715	1					
ANR	6003174	Identifier	main		6002715	2					
ANR	6003175	ParameterList	"int argc , char * * argv"		6002715	3					
ANR	6003176	Parameter	int argc	292:6:7331:7338	6002715	0	True				
ANR	6003177	ParameterType	int		6002715	0					
ANR	6003178	Identifier	argc		6002715	1					
ANR	6003179	Parameter	char * * argv	292:16:7341:7351	6002715	1	True				
ANR	6003180	ParameterType	char * *		6002715	0					
ANR	6003181	Identifier	argv		6002715	1					
ANR	6003182	CFGEntryNode	ENTRY		6002715		True				
ANR	6003183	CFGExitNode	EXIT		6002715		True				
ANR	6003184	Symbol	argc		6002715						
ANR	6003185	Symbol	fopen		6002715						
ANR	6003186	Symbol	* tail		6002715						
ANR	6003187	Symbol	stdin		6002715						
ANR	6003188	Symbol	NULL		6002715						
ANR	6003189	Symbol	ctx		6002715						
ANR	6003190	Symbol	tail		6002715						
ANR	6003191	Symbol	f		6002715						
ANR	6003192	Symbol	get_arg		6002715						
ANR	6003193	Symbol	i		6002715						
ANR	6003194	Symbol	* argv		6002715						
ANR	6003195	Symbol	stderr		6002715						
ANR	6003196	Symbol	argv		6002715						
ANR	6003197	Symbol	& i		6002715						
ANR	6003198	Symbol	xres		6002715						
ANR	6003199	Symbol	* i		6002715						
ANR	6003200	Symbol	strtol		6002715						
ANR	6003201	Symbol	ijs_invoke_server		6002715						
ANR	6003202	Symbol	arg		6002715						
ANR	6003203	Symbol	& tail		6002715						
ANR	6003204	Symbol	IJS_CMD_EXIT		6002715						
ANR	6003205	Symbol	yres		6002715						
ANR	6003206	Symbol	* arg		6002715						
