command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5577979	File	data/converged/CVE-2018-16863_ghostpdl/gxfapiu.c								
ANR	5577980	DeclStmt									
ANR	5577981	Decl							gs_memory_t	gs_memory_t *	gs_mem_ctx
ANR	5577982	Function	stub_PCLEO_charptr	56:0:1534:1621							
ANR	5577983	FunctionDef	"stub_PCLEO_charptr (FSP LPUB8 pfont_hdr , UW16 sym_code)"		5577982	0					
ANR	5577984	CompoundStatement		58:0:1602:1621	5577982	0					
ANR	5577985	ReturnStatement	return NULL ;	59:4:1608:1619	5577982	0	True				
ANR	5577986	Identifier	NULL		5577982	0					
ANR	5577987	ReturnType	static LPUB8		5577982	1					
ANR	5577988	Identifier	stub_PCLEO_charptr		5577982	2					
ANR	5577989	ParameterList	"FSP LPUB8 pfont_hdr , UW16 sym_code"		5577982	3					
ANR	5577990	Parameter	FSP LPUB8 pfont_hdr	57:19:1566:1584	5577982	0	True				
ANR	5577991	ParameterType	FSP LPUB8		5577982	0					
ANR	5577992	Identifier	pfont_hdr		5577982	1					
ANR	5577993	Parameter	UW16 sym_code	57:40:1587:1599	5577982	1	True				
ANR	5577994	ParameterType	UW16		5577982	0					
ANR	5577995	Identifier	sym_code		5577982	1					
ANR	5577996	CFGEntryNode	ENTRY		5577982		True				
ANR	5577997	CFGExitNode	EXIT		5577982		True				
ANR	5577998	Symbol	NULL		5577982						
ANR	5577999	Symbol	pfont_hdr		5577982						
ANR	5578000	Symbol	sym_code		5577982						
ANR	5578001	Function	stub_PCLchId2ptr	62:0:1624:1688							
ANR	5578002	FunctionDef	stub_PCLchId2ptr (FSP UW16 chId)		5578001	0					
ANR	5578003	CompoundStatement		64:0:1669:1688	5578001	0					
ANR	5578004	ReturnStatement	return NULL ;	65:4:1675:1686	5578001	0	True				
ANR	5578005	Identifier	NULL		5578001	0					
ANR	5578006	ReturnType	static LPUB8		5578001	1					
ANR	5578007	Identifier	stub_PCLchId2ptr		5578001	2					
ANR	5578008	ParameterList	FSP UW16 chId		5578001	3					
ANR	5578009	Parameter	FSP UW16 chId	63:17:1654:1666	5578001	0	True				
ANR	5578010	ParameterType	FSP UW16		5578001	0					
ANR	5578011	Identifier	chId		5578001	1					
ANR	5578012	CFGEntryNode	ENTRY		5578001		True				
ANR	5578013	CFGExitNode	EXIT		5578001		True				
ANR	5578014	Symbol	NULL		5578001						
ANR	5578015	Symbol	chId		5578001						
ANR	5578016	Function	stub_PCLglyphID2Ptr	68:0:1691:1761							
ANR	5578017	FunctionDef	stub_PCLglyphID2Ptr (FSP UW16 glyphID)		5578016	0					
ANR	5578018	CompoundStatement		70:0:1742:1761	5578016	0					
ANR	5578019	ReturnStatement	return NULL ;	71:4:1748:1759	5578016	0	True				
ANR	5578020	Identifier	NULL		5578016	0					
ANR	5578021	ReturnType	static LPUB8		5578016	1					
ANR	5578022	Identifier	stub_PCLglyphID2Ptr		5578016	2					
ANR	5578023	ParameterList	FSP UW16 glyphID		5578016	3					
ANR	5578024	Parameter	FSP UW16 glyphID	69:20:1724:1739	5578016	0	True				
ANR	5578025	ParameterType	FSP UW16		5578016	0					
ANR	5578026	Identifier	glyphID		5578016	1					
ANR	5578027	CFGEntryNode	ENTRY		5578016		True				
ANR	5578028	CFGExitNode	EXIT		5578016		True				
ANR	5578029	Symbol	NULL		5578016						
ANR	5578030	Symbol	glyphID		5578016						
ANR	5578031	DeclStmt									
ANR	5578032	Decl							const SW16	const SW16	trace_sw
ANR	5578033	DeclStmt									
ANR	5578034	Decl							"LPUB8 ( * ) ( FSP LPUB8 pfont_hdr , UW16 sym_code )"	"LPUB8 ( * ) ( FSP LPUB8 pfont_hdr , UW16 sym_code )"	m_PCLEO_charptr
ANR	5578035	DeclStmt									
ANR	5578036	Decl							LPUB8 ( * ) ( FSP UW16 chId )	LPUB8 ( * ) ( FSP UW16 chId )	m_PCLchId2ptr
ANR	5578037	DeclStmt									
ANR	5578038	Decl							LPUB8 ( * ) ( FSP UW16 glyphID )	LPUB8 ( * ) ( FSP UW16 glyphID )	m_PCLglyphID2Ptr
ANR	5578039	DeclStmt									
ANR	5578040	Decl							fco_list_elem	fco_list_elem [ MAX_STATIC_FCO_COUNT ]	static_fco_list
ANR	5578041	DeclStmt									
ANR	5578042	Decl							int	int	static_fco_count
ANR	5578043	DeclStmt									
ANR	5578044	Decl							bool	bool	ufst_initialized
ANR	5578045	Function	PCLEO_charptr	97:0:2586:2697							
ANR	5578046	FunctionDef	"PCLEO_charptr (FSP LPUB8 pfont_hdr , UW16 sym_code)"		5578045	0					
ANR	5578047	CompoundStatement		99:0:2642:2697	5578045	0					
ANR	5578048	Statement	return	100:4:2648:2653	5578045	0	True				
ANR	5578049	Statement	m_PCLEO_charptr	100:11:2655:2669	5578045	1	True				
ANR	5578050	Statement	(	100:26:2670:2670	5578045	2	True				
ANR	5578051	Statement	FSA	100:27:2671:2673	5578045	3	True				
ANR	5578052	Statement	pfont_hdr	100:31:2675:2683	5578045	4	True				
ANR	5578053	Statement	","	100:40:2684:2684	5578045	5	True				
ANR	5578054	Statement	sym_code	100:42:2686:2693	5578045	6	True				
ANR	5578055	Statement	)	100:50:2694:2694	5578045	7	True				
ANR	5578056	ExpressionStatement		100:51:2695:2695	5578045	8	True				
ANR	5578057	ReturnType	LPUB8		5578045	1					
ANR	5578058	Identifier	PCLEO_charptr		5578045	2					
ANR	5578059	ParameterList	"FSP LPUB8 pfont_hdr , UW16 sym_code"		5578045	3					
ANR	5578060	Parameter	FSP LPUB8 pfont_hdr	98:14:2606:2624	5578045	0	True				
ANR	5578061	ParameterType	FSP LPUB8		5578045	0					
ANR	5578062	Identifier	pfont_hdr		5578045	1					
ANR	5578063	Parameter	UW16 sym_code	98:35:2627:2639	5578045	1	True				
ANR	5578064	ParameterType	UW16		5578045	0					
ANR	5578065	Identifier	sym_code		5578045	1					
ANR	5578066	CFGEntryNode	ENTRY		5578045		True				
ANR	5578067	CFGExitNode	EXIT		5578045		True				
ANR	5578068	Symbol	pfont_hdr		5578045						
ANR	5578069	Symbol	sym_code		5578045						
ANR	5578070	Function	PCLchId2ptr	103:0:2700:2771							
ANR	5578071	FunctionDef	PCLchId2ptr (FSP UW16 chId)		5578070	0					
ANR	5578072	CompoundStatement		105:0:2733:2771	5578070	0					
ANR	5578073	Statement	return	106:4:2739:2744	5578070	0	True				
ANR	5578074	Statement	m_PCLchId2ptr	106:11:2746:2758	5578070	1	True				
ANR	5578075	Statement	(	106:24:2759:2759	5578070	2	True				
ANR	5578076	Statement	FSA	106:25:2760:2762	5578070	3	True				
ANR	5578077	Statement	chId	106:29:2764:2767	5578070	4	True				
ANR	5578078	Statement	)	106:33:2768:2768	5578070	5	True				
ANR	5578079	ExpressionStatement		106:34:2769:2769	5578070	6	True				
ANR	5578080	ReturnType	LPUB8		5578070	1					
ANR	5578081	Identifier	PCLchId2ptr		5578070	2					
ANR	5578082	ParameterList	FSP UW16 chId		5578070	3					
ANR	5578083	Parameter	FSP UW16 chId	104:12:2718:2730	5578070	0	True				
ANR	5578084	ParameterType	FSP UW16		5578070	0					
ANR	5578085	Identifier	chId		5578070	1					
ANR	5578086	CFGEntryNode	ENTRY		5578070		True				
ANR	5578087	CFGExitNode	EXIT		5578070		True				
ANR	5578088	Symbol	chId		5578070						
ANR	5578089	Function	PCLglyphID2Ptr	109:0:2774:2857							
ANR	5578090	FunctionDef	PCLglyphID2Ptr (FSP UW16 glyphID)		5578089	0					
ANR	5578091	CompoundStatement		111:0:2813:2857	5578089	0					
ANR	5578092	Statement	return	112:4:2819:2824	5578089	0	True				
ANR	5578093	Statement	m_PCLglyphID2Ptr	112:11:2826:2841	5578089	1	True				
ANR	5578094	Statement	(	112:27:2842:2842	5578089	2	True				
ANR	5578095	Statement	FSA	112:28:2843:2845	5578089	3	True				
ANR	5578096	Statement	glyphID	112:32:2847:2853	5578089	4	True				
ANR	5578097	Statement	)	112:39:2854:2854	5578089	5	True				
ANR	5578098	ExpressionStatement		112:40:2855:2855	5578089	6	True				
ANR	5578099	ReturnType	LPUB8		5578089	1					
ANR	5578100	Identifier	PCLglyphID2Ptr		5578089	2					
ANR	5578101	ParameterList	FSP UW16 glyphID		5578089	3					
ANR	5578102	Parameter	FSP UW16 glyphID	110:15:2795:2810	5578089	0	True				
ANR	5578103	ParameterType	FSP UW16		5578089	0					
ANR	5578104	Identifier	glyphID		5578089	1					
ANR	5578105	CFGEntryNode	ENTRY		5578089		True				
ANR	5578106	CFGExitNode	EXIT		5578089		True				
ANR	5578107	Symbol	glyphID		5578089						
ANR	5578108	Function	FAPIU_fopen	116:0:2894:3035							
ANR	5578109	FunctionDef	"FAPIU_fopen (char * path , char * mode)"		5578108	0					
ANR	5578110	CompoundStatement		118:0:2937:3035	5578108	0					
ANR	5578111	IfStatement	if ( ! gs_mem_ctx )		5578108	0					
ANR	5578112	Condition	! gs_mem_ctx	119:8:2947:2957	5578108	0	True				
ANR	5578113	UnaryOperationExpression	! gs_mem_ctx		5578108	0					
ANR	5578114	UnaryOperator	!		5578108	0					
ANR	5578115	Identifier	gs_mem_ctx		5578108	1					
ANR	5578116	ReturnStatement	return NULL ;	120:8:2968:2979	5578108	1	True				
ANR	5578117	Identifier	NULL		5578108	0					
ANR	5578118	ReturnStatement	"return ( ( void * ) sfopen ( path , mode , gs_mem_ctx ) ) ;"	122:4:2986:3033	5578108	1	True				
ANR	5578119	CastExpression	"( void * ) sfopen ( path , mode , gs_mem_ctx )"		5578108	0					
ANR	5578120	CastTarget	void *		5578108	0					
ANR	5578121	CallExpression	"sfopen ( path , mode , gs_mem_ctx )"		5578108	1					
ANR	5578122	Callee	sfopen		5578108	0					
ANR	5578123	Identifier	sfopen		5578108	0					
ANR	5578124	ArgumentList	path		5578108	1					
ANR	5578125	Argument	path		5578108	0					
ANR	5578126	Identifier	path		5578108	0					
ANR	5578127	Argument	mode		5578108	1					
ANR	5578128	Identifier	mode		5578108	0					
ANR	5578129	Argument	gs_mem_ctx		5578108	2					
ANR	5578130	Identifier	gs_mem_ctx		5578108	0					
ANR	5578131	ReturnType	void *		5578108	1					
ANR	5578132	Identifier	FAPIU_fopen		5578108	2					
ANR	5578133	ParameterList	"char * path , char * mode"		5578108	3					
ANR	5578134	Parameter	char * path	117:12:2913:2922	5578108	0	True				
ANR	5578135	ParameterType	char *		5578108	0					
ANR	5578136	Identifier	path		5578108	1					
ANR	5578137	Parameter	char * mode	117:24:2925:2934	5578108	1	True				
ANR	5578138	ParameterType	char *		5578108	0					
ANR	5578139	Identifier	mode		5578108	1					
ANR	5578140	CFGEntryNode	ENTRY		5578108		True				
ANR	5578141	CFGExitNode	EXIT		5578108		True				
ANR	5578142	Symbol	mode		5578108						
ANR	5578143	Symbol	path		5578108						
ANR	5578144	Symbol	NULL		5578108						
ANR	5578145	Symbol	sfopen		5578108						
ANR	5578146	Symbol	gs_mem_ctx		5578108						
ANR	5578147	Function	FAPIU_fread	125:0:3038:3152							
ANR	5578148	FunctionDef	"FAPIU_fread (void * ptr , int size , int count , void * s)"		5578147	0					
ANR	5578149	CompoundStatement		127:0:3095:3152	5578147	0					
ANR	5578150	ReturnStatement	"return ( sfread ( ptr , size , count , ( stream * ) ( s ) ) ) ;"	128:4:3101:3150	5578147	0	True				
ANR	5578151	CallExpression	"sfread ( ptr , size , count , ( stream * ) ( s ) )"		5578147	0					
ANR	5578152	Callee	sfread		5578147	0					
ANR	5578153	Identifier	sfread		5578147	0					
ANR	5578154	ArgumentList	ptr		5578147	1					
ANR	5578155	Argument	ptr		5578147	0					
ANR	5578156	Identifier	ptr		5578147	0					
ANR	5578157	Argument	size		5578147	1					
ANR	5578158	Identifier	size		5578147	0					
ANR	5578159	Argument	count		5578147	2					
ANR	5578160	Identifier	count		5578147	0					
ANR	5578161	Argument	( stream * ) ( s )		5578147	3					
ANR	5578162	CastExpression	( stream * ) ( s )		5578147	0					
ANR	5578163	CastTarget	stream *		5578147	0					
ANR	5578164	Identifier	s		5578147	1					
ANR	5578165	ReturnType	int		5578147	1					
ANR	5578166	Identifier	FAPIU_fread		5578147	2					
ANR	5578167	ParameterList	"void * ptr , int size , int count , void * s"		5578147	3					
ANR	5578168	Parameter	void * ptr	126:12:3054:3062	5578147	0	True				
ANR	5578169	ParameterType	void *		5578147	0					
ANR	5578170	Identifier	ptr		5578147	1					
ANR	5578171	Parameter	int size	126:23:3065:3072	5578147	1	True				
ANR	5578172	ParameterType	int		5578147	0					
ANR	5578173	Identifier	size		5578147	1					
ANR	5578174	Parameter	int count	126:33:3075:3083	5578147	2	True				
ANR	5578175	ParameterType	int		5578147	0					
ANR	5578176	Identifier	count		5578147	1					
ANR	5578177	Parameter	void * s	126:44:3086:3092	5578147	3	True				
ANR	5578178	ParameterType	void *		5578147	0					
ANR	5578179	Identifier	s		5578147	1					
ANR	5578180	CFGEntryNode	ENTRY		5578147		True				
ANR	5578181	CFGExitNode	EXIT		5578147		True				
ANR	5578182	Symbol	s		5578147						
ANR	5578183	Symbol	size		5578147						
ANR	5578184	Symbol	count		5578147						
ANR	5578185	Symbol	sfread		5578147						
ANR	5578186	Symbol	ptr		5578147						
ANR	5578187	Function	FAPIU_fgetc	131:0:3155:3219							
ANR	5578188	FunctionDef	FAPIU_fgetc (void * s)		5578187	0					
ANR	5578189	CompoundStatement		133:0:3180:3219	5578187	0					
ANR	5578190	ReturnStatement	return ( sfgetc ( ( stream * ) ( s ) ) ) ;	134:4:3186:3217	5578187	0	True				
ANR	5578191	CallExpression	sfgetc ( ( stream * ) ( s ) )		5578187	0					
ANR	5578192	Callee	sfgetc		5578187	0					
ANR	5578193	Identifier	sfgetc		5578187	0					
ANR	5578194	ArgumentList	( stream * ) ( s )		5578187	1					
ANR	5578195	Argument	( stream * ) ( s )		5578187	0					
ANR	5578196	CastExpression	( stream * ) ( s )		5578187	0					
ANR	5578197	CastTarget	stream *		5578187	0					
ANR	5578198	Identifier	s		5578187	1					
ANR	5578199	ReturnType	int		5578187	1					
ANR	5578200	Identifier	FAPIU_fgetc		5578187	2					
ANR	5578201	ParameterList	void * s		5578187	3					
ANR	5578202	Parameter	void * s	132:12:3171:3177	5578187	0	True				
ANR	5578203	ParameterType	void *		5578187	0					
ANR	5578204	Identifier	s		5578187	1					
ANR	5578205	CFGEntryNode	ENTRY		5578187		True				
ANR	5578206	CFGExitNode	EXIT		5578187		True				
ANR	5578207	Symbol	s		5578187						
ANR	5578208	Symbol	sfgetc		5578187						
ANR	5578209	Function	FAPIU_fseek	137:0:3222:3326							
ANR	5578210	FunctionDef	"FAPIU_fseek (void * s , int offset , int whence)"		5578209	0					
ANR	5578211	CompoundStatement		139:0:3271:3326	5578209	0					
ANR	5578212	ReturnStatement	"return ( sfseek ( ( stream * ) ( s ) , offset , whence ) ) ;"	140:4:3277:3324	5578209	0	True				
ANR	5578213	CallExpression	"sfseek ( ( stream * ) ( s ) , offset , whence )"		5578209	0					
ANR	5578214	Callee	sfseek		5578209	0					
ANR	5578215	Identifier	sfseek		5578209	0					
ANR	5578216	ArgumentList	( stream * ) ( s )		5578209	1					
ANR	5578217	Argument	( stream * ) ( s )		5578209	0					
ANR	5578218	CastExpression	( stream * ) ( s )		5578209	0					
ANR	5578219	CastTarget	stream *		5578209	0					
ANR	5578220	Identifier	s		5578209	1					
ANR	5578221	Argument	offset		5578209	1					
ANR	5578222	Identifier	offset		5578209	0					
ANR	5578223	Argument	whence		5578209	2					
ANR	5578224	Identifier	whence		5578209	0					
ANR	5578225	ReturnType	int		5578209	1					
ANR	5578226	Identifier	FAPIU_fseek		5578209	2					
ANR	5578227	ParameterList	"void * s , int offset , int whence"		5578209	3					
ANR	5578228	Parameter	void * s	138:12:3238:3244	5578209	0	True				
ANR	5578229	ParameterType	void *		5578209	0					
ANR	5578230	Identifier	s		5578209	1					
ANR	5578231	Parameter	int offset	138:21:3247:3256	5578209	1	True				
ANR	5578232	ParameterType	int		5578209	0					
ANR	5578233	Identifier	offset		5578209	1					
ANR	5578234	Parameter	int whence	138:33:3259:3268	5578209	2	True				
ANR	5578235	ParameterType	int		5578209	0					
ANR	5578236	Identifier	whence		5578209	1					
ANR	5578237	CFGEntryNode	ENTRY		5578209		True				
ANR	5578238	CFGExitNode	EXIT		5578209		True				
ANR	5578239	Symbol	s		5578209						
ANR	5578240	Symbol	offset		5578209						
ANR	5578241	Symbol	whence		5578209						
ANR	5578242	Symbol	sfseek		5578209						
ANR	5578243	Function	FAPIU_frewind	143:0:3329:3396							
ANR	5578244	FunctionDef	FAPIU_frewind (void * s)		5578243	0					
ANR	5578245	CompoundStatement		145:0:3356:3396	5578243	0					
ANR	5578246	ReturnStatement	return ( srewind ( ( stream * ) ( s ) ) ) ;	146:4:3362:3394	5578243	0	True				
ANR	5578247	CallExpression	srewind ( ( stream * ) ( s ) )		5578243	0					
ANR	5578248	Callee	srewind		5578243	0					
ANR	5578249	Identifier	srewind		5578243	0					
ANR	5578250	ArgumentList	( stream * ) ( s )		5578243	1					
ANR	5578251	Argument	( stream * ) ( s )		5578243	0					
ANR	5578252	CastExpression	( stream * ) ( s )		5578243	0					
ANR	5578253	CastTarget	stream *		5578243	0					
ANR	5578254	Identifier	s		5578243	1					
ANR	5578255	ReturnType	int		5578243	1					
ANR	5578256	Identifier	FAPIU_frewind		5578243	2					
ANR	5578257	ParameterList	void * s		5578243	3					
ANR	5578258	Parameter	void * s	144:14:3347:3353	5578243	0	True				
ANR	5578259	ParameterType	void *		5578243	0					
ANR	5578260	Identifier	s		5578243	1					
ANR	5578261	CFGEntryNode	ENTRY		5578243		True				
ANR	5578262	CFGExitNode	EXIT		5578243		True				
ANR	5578263	Symbol	srewind		5578243						
ANR	5578264	Symbol	s		5578243						
ANR	5578265	Function	FAPIU_ftell	149:0:3399:3463							
ANR	5578266	FunctionDef	FAPIU_ftell (void * s)		5578265	0					
ANR	5578267	CompoundStatement		151:0:3424:3463	5578265	0					
ANR	5578268	ReturnStatement	return ( sftell ( ( stream * ) ( s ) ) ) ;	152:4:3430:3461	5578265	0	True				
ANR	5578269	CallExpression	sftell ( ( stream * ) ( s ) )		5578265	0					
ANR	5578270	Callee	sftell		5578265	0					
ANR	5578271	Identifier	sftell		5578265	0					
ANR	5578272	ArgumentList	( stream * ) ( s )		5578265	1					
ANR	5578273	Argument	( stream * ) ( s )		5578265	0					
ANR	5578274	CastExpression	( stream * ) ( s )		5578265	0					
ANR	5578275	CastTarget	stream *		5578265	0					
ANR	5578276	Identifier	s		5578265	1					
ANR	5578277	ReturnType	int		5578265	1					
ANR	5578278	Identifier	FAPIU_ftell		5578265	2					
ANR	5578279	ParameterList	void * s		5578265	3					
ANR	5578280	Parameter	void * s	150:12:3415:3421	5578265	0	True				
ANR	5578281	ParameterType	void *		5578265	0					
ANR	5578282	Identifier	s		5578265	1					
ANR	5578283	CFGEntryNode	ENTRY		5578265		True				
ANR	5578284	CFGExitNode	EXIT		5578265		True				
ANR	5578285	Symbol	s		5578265						
ANR	5578286	Symbol	sftell		5578265						
ANR	5578287	Function	FAPIU_feof	155:0:3466:3528							
ANR	5578288	FunctionDef	FAPIU_feof (void * s)		5578287	0					
ANR	5578289	CompoundStatement		157:0:3490:3528	5578287	0					
ANR	5578290	ReturnStatement	return ( sfeof ( ( stream * ) ( s ) ) ) ;	158:4:3496:3526	5578287	0	True				
ANR	5578291	CallExpression	sfeof ( ( stream * ) ( s ) )		5578287	0					
ANR	5578292	Callee	sfeof		5578287	0					
ANR	5578293	Identifier	sfeof		5578287	0					
ANR	5578294	ArgumentList	( stream * ) ( s )		5578287	1					
ANR	5578295	Argument	( stream * ) ( s )		5578287	0					
ANR	5578296	CastExpression	( stream * ) ( s )		5578287	0					
ANR	5578297	CastTarget	stream *		5578287	0					
ANR	5578298	Identifier	s		5578287	1					
ANR	5578299	ReturnType	int		5578287	1					
ANR	5578300	Identifier	FAPIU_feof		5578287	2					
ANR	5578301	ParameterList	void * s		5578287	3					
ANR	5578302	Parameter	void * s	156:11:3481:3487	5578287	0	True				
ANR	5578303	ParameterType	void *		5578287	0					
ANR	5578304	Identifier	s		5578287	1					
ANR	5578305	CFGEntryNode	ENTRY		5578287		True				
ANR	5578306	CFGExitNode	EXIT		5578287		True				
ANR	5578307	Symbol	s		5578287						
ANR	5578308	Symbol	sfeof		5578287						
ANR	5578309	Function	FAPIU_ferror	161:0:3531:3597							
ANR	5578310	FunctionDef	FAPIU_ferror (void * s)		5578309	0					
ANR	5578311	CompoundStatement		163:0:3557:3597	5578309	0					
ANR	5578312	ReturnStatement	return ( sferror ( ( stream * ) ( s ) ) ) ;	164:4:3563:3595	5578309	0	True				
ANR	5578313	CallExpression	sferror ( ( stream * ) ( s ) )		5578309	0					
ANR	5578314	Callee	sferror		5578309	0					
ANR	5578315	Identifier	sferror		5578309	0					
ANR	5578316	ArgumentList	( stream * ) ( s )		5578309	1					
ANR	5578317	Argument	( stream * ) ( s )		5578309	0					
ANR	5578318	CastExpression	( stream * ) ( s )		5578309	0					
ANR	5578319	CastTarget	stream *		5578309	0					
ANR	5578320	Identifier	s		5578309	1					
ANR	5578321	ReturnType	int		5578309	1					
ANR	5578322	Identifier	FAPIU_ferror		5578309	2					
ANR	5578323	ParameterList	void * s		5578309	3					
ANR	5578324	Parameter	void * s	162:13:3548:3554	5578309	0	True				
ANR	5578325	ParameterType	void *		5578309	0					
ANR	5578326	Identifier	s		5578309	1					
ANR	5578327	CFGEntryNode	ENTRY		5578309		True				
ANR	5578328	CFGExitNode	EXIT		5578309		True				
ANR	5578329	Symbol	s		5578309						
ANR	5578330	Symbol	sferror		5578309						
ANR	5578331	Function	FAPIU_fclose	167:0:3600:3666							
ANR	5578332	FunctionDef	FAPIU_fclose (void * s)		5578331	0					
ANR	5578333	CompoundStatement		169:0:3626:3666	5578331	0					
ANR	5578334	ReturnStatement	return ( sfclose ( ( stream * ) ( s ) ) ) ;	170:4:3632:3664	5578331	0	True				
ANR	5578335	CallExpression	sfclose ( ( stream * ) ( s ) )		5578331	0					
ANR	5578336	Callee	sfclose		5578331	0					
ANR	5578337	Identifier	sfclose		5578331	0					
ANR	5578338	ArgumentList	( stream * ) ( s )		5578331	1					
ANR	5578339	Argument	( stream * ) ( s )		5578331	0					
ANR	5578340	CastExpression	( stream * ) ( s )		5578331	0					
ANR	5578341	CastTarget	stream *		5578331	0					
ANR	5578342	Identifier	s		5578331	1					
ANR	5578343	ReturnType	int		5578331	1					
ANR	5578344	Identifier	FAPIU_fclose		5578331	2					
ANR	5578345	ParameterList	void * s		5578331	3					
ANR	5578346	Parameter	void * s	168:13:3617:3623	5578331	0	True				
ANR	5578347	ParameterType	void *		5578331	0					
ANR	5578348	Identifier	s		5578331	1					
ANR	5578349	CFGEntryNode	ENTRY		5578331		True				
ANR	5578350	CFGExitNode	EXIT		5578331		True				
ANR	5578351	Symbol	s		5578331						
ANR	5578352	Symbol	sfclose		5578331						
ANR	5578353	Function	FAPIU_open	173:0:3669:3902							
ANR	5578354	FunctionDef	"FAPIU_open (char * path , int mode)"		5578353	0					
ANR	5578355	CompoundStatement		175:0:3709:3902	5578353	0					
ANR	5578356	IdentifierDeclStatement	void * s ;	176:4:3715:3722	5578353	0	True				
ANR	5578357	IdentifierDecl	* s		5578353	0					
ANR	5578358	IdentifierDeclType	void *		5578353	0					
ANR	5578359	Identifier	s		5578353	1					
ANR	5578360	IfStatement	if ( ! gs_mem_ctx )		5578353	1					
ANR	5578361	Condition	! gs_mem_ctx	178:8:3733:3743	5578353	0	True				
ANR	5578362	UnaryOperationExpression	! gs_mem_ctx		5578353	0					
ANR	5578363	UnaryOperator	!		5578353	0					
ANR	5578364	Identifier	gs_mem_ctx		5578353	1					
ANR	5578365	ReturnStatement	return ( void * ) - 1 ;	179:8:3754:3771	5578353	1	True				
ANR	5578366	CastExpression	( void * ) - 1		5578353	0					
ANR	5578367	CastTarget	void *		5578353	0					
ANR	5578368	UnaryOperationExpression	- 1		5578353	1					
ANR	5578369	UnaryOperator	-		5578353	0					
ANR	5578370	PrimaryExpression	1		5578353	1					
ANR	5578371	ExpressionStatement	"s = sfopen ( path , ""r+"" , gs_mem_ctx )"	182:4:3813:3847	5578353	2	True				
ANR	5578372	AssignmentExpression	"s = sfopen ( path , ""r+"" , gs_mem_ctx )"		5578353	0		=			
ANR	5578373	Identifier	s		5578353	0					
ANR	5578374	CallExpression	"sfopen ( path , ""r+"" , gs_mem_ctx )"		5578353	1					
ANR	5578375	Callee	sfopen		5578353	0					
ANR	5578376	Identifier	sfopen		5578353	0					
ANR	5578377	ArgumentList	path		5578353	1					
ANR	5578378	Argument	path		5578353	0					
ANR	5578379	Identifier	path		5578353	0					
ANR	5578380	Argument	"""r+"""		5578353	1					
ANR	5578381	PrimaryExpression	"""r+"""		5578353	0					
ANR	5578382	Argument	gs_mem_ctx		5578353	2					
ANR	5578383	Identifier	gs_mem_ctx		5578353	0					
ANR	5578384	IfStatement	if ( ! s )		5578353	3					
ANR	5578385	Condition	! s	183:8:3857:3858	5578353	0	True				
ANR	5578386	UnaryOperationExpression	! s		5578353	0					
ANR	5578387	UnaryOperator	!		5578353	0					
ANR	5578388	Identifier	s		5578353	1					
ANR	5578389	ExpressionStatement	s = ( void * ) - 1	184:8:3869:3883	5578353	1	True				
ANR	5578390	AssignmentExpression	s = ( void * ) - 1		5578353	0		=			
ANR	5578391	Identifier	s		5578353	0					
ANR	5578392	CastExpression	( void * ) - 1		5578353	1					
ANR	5578393	CastTarget	void *		5578353	0					
ANR	5578394	UnaryOperationExpression	- 1		5578353	1					
ANR	5578395	UnaryOperator	-		5578353	0					
ANR	5578396	PrimaryExpression	1		5578353	1					
ANR	5578397	ReturnStatement	return ( s ) ;	186:4:3890:3900	5578353	4	True				
ANR	5578398	Identifier	s		5578353	0					
ANR	5578399	ReturnType	void *		5578353	1					
ANR	5578400	Identifier	FAPIU_open		5578353	2					
ANR	5578401	ParameterList	"char * path , int mode"		5578353	3					
ANR	5578402	Parameter	char * path	174:11:3687:3696	5578353	0	True				
ANR	5578403	ParameterType	char *		5578353	0					
ANR	5578404	Identifier	path		5578353	1					
ANR	5578405	Parameter	int mode	174:23:3699:3706	5578353	1	True				
ANR	5578406	ParameterType	int		5578353	0					
ANR	5578407	Identifier	mode		5578353	1					
ANR	5578408	CFGEntryNode	ENTRY		5578353		True				
ANR	5578409	CFGExitNode	EXIT		5578353		True				
ANR	5578410	Symbol	mode		5578353						
ANR	5578411	Symbol	path		5578353						
ANR	5578412	Symbol	s		5578353						
ANR	5578413	Symbol	sfopen		5578353						
ANR	5578414	Symbol	gs_mem_ctx		5578353						
ANR	5578415	Function	FAPIU_read	189:0:3905:4005							
ANR	5578416	FunctionDef	"FAPIU_read (void * s , void * ptr , int count)"		5578415	0					
ANR	5578417	CompoundStatement		191:0:3951:4005	5578415	0					
ANR	5578418	ReturnStatement	"return ( sfread ( ptr , 1 , count , ( stream * ) ( s ) ) ) ;"	192:4:3957:4003	5578415	0	True				
ANR	5578419	CallExpression	"sfread ( ptr , 1 , count , ( stream * ) ( s ) )"		5578415	0					
ANR	5578420	Callee	sfread		5578415	0					
ANR	5578421	Identifier	sfread		5578415	0					
ANR	5578422	ArgumentList	ptr		5578415	1					
ANR	5578423	Argument	ptr		5578415	0					
ANR	5578424	Identifier	ptr		5578415	0					
ANR	5578425	Argument	1		5578415	1					
ANR	5578426	PrimaryExpression	1		5578415	0					
ANR	5578427	Argument	count		5578415	2					
ANR	5578428	Identifier	count		5578415	0					
ANR	5578429	Argument	( stream * ) ( s )		5578415	3					
ANR	5578430	CastExpression	( stream * ) ( s )		5578415	0					
ANR	5578431	CastTarget	stream *		5578415	0					
ANR	5578432	Identifier	s		5578415	1					
ANR	5578433	ReturnType	int		5578415	1					
ANR	5578434	Identifier	FAPIU_read		5578415	2					
ANR	5578435	ParameterList	"void * s , void * ptr , int count"		5578415	3					
ANR	5578436	Parameter	void * s	190:11:3920:3926	5578415	0	True				
ANR	5578437	ParameterType	void *		5578415	0					
ANR	5578438	Identifier	s		5578415	1					
ANR	5578439	Parameter	void * ptr	190:20:3929:3937	5578415	1	True				
ANR	5578440	ParameterType	void *		5578415	0					
ANR	5578441	Identifier	ptr		5578415	1					
ANR	5578442	Parameter	int count	190:31:3940:3948	5578415	2	True				
ANR	5578443	ParameterType	int		5578415	0					
ANR	5578444	Identifier	count		5578415	1					
ANR	5578445	CFGEntryNode	ENTRY		5578415		True				
ANR	5578446	CFGExitNode	EXIT		5578415		True				
ANR	5578447	Symbol	s		5578415						
ANR	5578448	Symbol	count		5578415						
ANR	5578449	Symbol	sfread		5578415						
ANR	5578450	Symbol	ptr		5578415						
ANR	5578451	Function	FAPIU_lseek	195:0:4008:4170							
ANR	5578452	FunctionDef	"FAPIU_lseek (void * s , int offset , int whence)"		5578451	0					
ANR	5578453	CompoundStatement		197:0:4057:4170	5578451	0					
ANR	5578454	IdentifierDeclStatement	"int pos = sfseek ( s , offset , whence ) ;"	198:4:4063:4098	5578451	0	True				
ANR	5578455	IdentifierDecl	"pos = sfseek ( s , offset , whence )"		5578451	0					
ANR	5578456	IdentifierDeclType	int		5578451	0					
ANR	5578457	Identifier	pos		5578451	1					
ANR	5578458	AssignmentExpression	"pos = sfseek ( s , offset , whence )"		5578451	2		=			
ANR	5578459	Identifier	pos		5578451	0					
ANR	5578460	CallExpression	"sfseek ( s , offset , whence )"		5578451	1					
ANR	5578461	Callee	sfseek		5578451	0					
ANR	5578462	Identifier	sfseek		5578451	0					
ANR	5578463	ArgumentList	s		5578451	1					
ANR	5578464	Argument	s		5578451	0					
ANR	5578465	Identifier	s		5578451	0					
ANR	5578466	Argument	offset		5578451	1					
ANR	5578467	Identifier	offset		5578451	0					
ANR	5578468	Argument	whence		5578451	2					
ANR	5578469	Identifier	whence		5578451	0					
ANR	5578470	IfStatement	if ( pos >= 0 )		5578451	1					
ANR	5578471	Condition	pos >= 0	200:8:4109:4116	5578451	0	True				
ANR	5578472	RelationalExpression	pos >= 0		5578451	0		>=			
ANR	5578473	Identifier	pos		5578451	0					
ANR	5578474	PrimaryExpression	0		5578451	1					
ANR	5578475	CompoundStatement		4:18:61:61	5578451	1					
ANR	5578476	ExpressionStatement	pos = sftell ( s )	201:8:4129:4144	5578451	0	True				
ANR	5578477	AssignmentExpression	pos = sftell ( s )		5578451	0		=			
ANR	5578478	Identifier	pos		5578451	0					
ANR	5578479	CallExpression	sftell ( s )		5578451	1					
ANR	5578480	Callee	sftell		5578451	0					
ANR	5578481	Identifier	sftell		5578451	0					
ANR	5578482	ArgumentList	s		5578451	1					
ANR	5578483	Argument	s		5578451	0					
ANR	5578484	Identifier	s		5578451	0					
ANR	5578485	ReturnStatement	return ( pos ) ;	203:4:4156:4168	5578451	2	True				
ANR	5578486	Identifier	pos		5578451	0					
ANR	5578487	ReturnType	int		5578451	1					
ANR	5578488	Identifier	FAPIU_lseek		5578451	2					
ANR	5578489	ParameterList	"void * s , int offset , int whence"		5578451	3					
ANR	5578490	Parameter	void * s	196:12:4024:4030	5578451	0	True				
ANR	5578491	ParameterType	void *		5578451	0					
ANR	5578492	Identifier	s		5578451	1					
ANR	5578493	Parameter	int offset	196:21:4033:4042	5578451	1	True				
ANR	5578494	ParameterType	int		5578451	0					
ANR	5578495	Identifier	offset		5578451	1					
ANR	5578496	Parameter	int whence	196:33:4045:4054	5578451	2	True				
ANR	5578497	ParameterType	int		5578451	0					
ANR	5578498	Identifier	whence		5578451	1					
ANR	5578499	CFGEntryNode	ENTRY		5578451		True				
ANR	5578500	CFGExitNode	EXIT		5578451		True				
ANR	5578501	Symbol	s		5578451						
ANR	5578502	Symbol	offset		5578451						
ANR	5578503	Symbol	sftell		5578451						
ANR	5578504	Symbol	whence		5578451						
ANR	5578505	Symbol	pos		5578451						
ANR	5578506	Symbol	sfseek		5578451						
ANR	5578507	Function	fapi_ufseek	206:0:4173:4339							
ANR	5578508	FunctionDef	"fapi_ufseek (stream * s , long offset , int whence)"		5578507	0					
ANR	5578509	CompoundStatement		208:0:4226:4339	5578507	0					
ANR	5578510	IdentifierDeclStatement	"int pos = sfseek ( s , offset , whence ) ;"	209:4:4232:4267	5578507	0	True				
ANR	5578511	IdentifierDecl	"pos = sfseek ( s , offset , whence )"		5578507	0					
ANR	5578512	IdentifierDeclType	int		5578507	0					
ANR	5578513	Identifier	pos		5578507	1					
ANR	5578514	AssignmentExpression	"pos = sfseek ( s , offset , whence )"		5578507	2		=			
ANR	5578515	Identifier	pos		5578507	0					
ANR	5578516	CallExpression	"sfseek ( s , offset , whence )"		5578507	1					
ANR	5578517	Callee	sfseek		5578507	0					
ANR	5578518	Identifier	sfseek		5578507	0					
ANR	5578519	ArgumentList	s		5578507	1					
ANR	5578520	Argument	s		5578507	0					
ANR	5578521	Identifier	s		5578507	0					
ANR	5578522	Argument	offset		5578507	1					
ANR	5578523	Identifier	offset		5578507	0					
ANR	5578524	Argument	whence		5578507	2					
ANR	5578525	Identifier	whence		5578507	0					
ANR	5578526	IfStatement	if ( pos >= 0 )		5578507	1					
ANR	5578527	Condition	pos >= 0	211:8:4278:4285	5578507	0	True				
ANR	5578528	RelationalExpression	pos >= 0		5578507	0		>=			
ANR	5578529	Identifier	pos		5578507	0					
ANR	5578530	PrimaryExpression	0		5578507	1					
ANR	5578531	CompoundStatement		4:18:61:61	5578507	1					
ANR	5578532	ExpressionStatement	pos = sftell ( s )	212:8:4298:4313	5578507	0	True				
ANR	5578533	AssignmentExpression	pos = sftell ( s )		5578507	0		=			
ANR	5578534	Identifier	pos		5578507	0					
ANR	5578535	CallExpression	sftell ( s )		5578507	1					
ANR	5578536	Callee	sftell		5578507	0					
ANR	5578537	Identifier	sftell		5578507	0					
ANR	5578538	ArgumentList	s		5578507	1					
ANR	5578539	Argument	s		5578507	0					
ANR	5578540	Identifier	s		5578507	0					
ANR	5578541	ReturnStatement	return ( pos ) ;	214:4:4325:4337	5578507	2	True				
ANR	5578542	Identifier	pos		5578507	0					
ANR	5578543	ReturnType	int		5578507	1					
ANR	5578544	Identifier	fapi_ufseek		5578507	2					
ANR	5578545	ParameterList	"stream * s , long offset , int whence"		5578507	3					
ANR	5578546	Parameter	stream * s	207:12:4189:4198	5578507	0	True				
ANR	5578547	ParameterType	stream *		5578507	0					
ANR	5578548	Identifier	s		5578507	1					
ANR	5578549	Parameter	long offset	207:24:4201:4211	5578507	1	True				
ANR	5578550	ParameterType	long		5578507	0					
ANR	5578551	Identifier	offset		5578507	1					
ANR	5578552	Parameter	int whence	207:37:4214:4223	5578507	2	True				
ANR	5578553	ParameterType	int		5578507	0					
ANR	5578554	Identifier	whence		5578507	1					
ANR	5578555	CFGEntryNode	ENTRY		5578507		True				
ANR	5578556	CFGExitNode	EXIT		5578507		True				
ANR	5578557	Symbol	s		5578507						
ANR	5578558	Symbol	offset		5578507						
ANR	5578559	Symbol	sftell		5578507						
ANR	5578560	Symbol	whence		5578507						
ANR	5578561	Symbol	pos		5578507						
ANR	5578562	Symbol	sfseek		5578507						
ANR	5578563	Function	FAPIU_close	217:0:4342:4407							
ANR	5578564	FunctionDef	FAPIU_close (void * s)		5578563	0					
ANR	5578565	CompoundStatement		219:0:4367:4407	5578563	0					
ANR	5578566	ReturnStatement	return ( sfclose ( ( stream * ) ( s ) ) ) ;	220:4:4373:4405	5578563	0	True				
ANR	5578567	CallExpression	sfclose ( ( stream * ) ( s ) )		5578563	0					
ANR	5578568	Callee	sfclose		5578563	0					
ANR	5578569	Identifier	sfclose		5578563	0					
ANR	5578570	ArgumentList	( stream * ) ( s )		5578563	1					
ANR	5578571	Argument	( stream * ) ( s )		5578563	0					
ANR	5578572	CastExpression	( stream * ) ( s )		5578563	0					
ANR	5578573	CastTarget	stream *		5578563	0					
ANR	5578574	Identifier	s		5578563	1					
ANR	5578575	ReturnType	int		5578563	1					
ANR	5578576	Identifier	FAPIU_close		5578563	2					
ANR	5578577	ParameterList	void * s		5578563	3					
ANR	5578578	Parameter	void * s	218:12:4358:4364	5578563	0	True				
ANR	5578579	ParameterType	void *		5578563	0					
ANR	5578580	Identifier	s		5578563	1					
ANR	5578581	CFGEntryNode	ENTRY		5578563		True				
ANR	5578582	CFGExitNode	EXIT		5578563		True				
ANR	5578583	Symbol	s		5578563						
ANR	5578584	Symbol	sfclose		5578563						
ANR	5578585	DeclStmt									
ANR	5578586	Decl							uint	uint	cache_pool
ANR	5578587	DeclStmt									
ANR	5578588	Decl							uint	uint	buffer_pool
ANR	5578589	DeclStmt									
ANR	5578590	Decl							uint	uint	chargen_pool
ANR	5578591	DeclStmt									
ANR	5578592	Decl							unsigned long	unsigned long	curmem
ANR	5578593	DeclStmt									
ANR	5578594	Decl							unsigned long	unsigned long	maxmem
ANR	5578595	Function	MEMalloc	249:0:5088:5958							
ANR	5578596	FunctionDef	"MEMalloc (FSP UW16 pool , SL32 size)"		5578595	0					
ANR	5578597	CompoundStatement		251:0:5141:5958	5578595	0					
ANR	5578598	IdentifierDeclStatement	char * ptr ;	253:4:5148:5157	5578595	0	True				
ANR	5578599	IdentifierDecl	* ptr		5578595	0					
ANR	5578600	IdentifierDeclType	char *		5578595	0					
ANR	5578601	Identifier	ptr		5578595	1					
ANR	5578602	IfStatement	if ( if_state . pserver -> mem_avail [ pool ] < size )		5578595	1					
ANR	5578603	Condition	if_state . pserver -> mem_avail [ pool ] < size	255:7:5167:5206	5578595	0	True				
ANR	5578604	RelationalExpression	if_state . pserver -> mem_avail [ pool ] < size		5578595	0		<			
ANR	5578605	ArrayIndexing	if_state . pserver -> mem_avail [ pool ]		5578595	0					
ANR	5578606	PtrMemberAccess	if_state . pserver -> mem_avail		5578595	0					
ANR	5578607	MemberAccess	if_state . pserver		5578595	0					
ANR	5578608	Identifier	if_state		5578595	0					
ANR	5578609	Identifier	pserver		5578595	1					
ANR	5578610	Identifier	mem_avail		5578595	1					
ANR	5578611	Identifier	pool		5578595	1					
ANR	5578612	Identifier	size		5578595	1					
ANR	5578613	ReturnStatement	return ( MEM_HANDLE ) 0 ;	256:8:5217:5237	5578595	1	True				
ANR	5578614	CastExpression	( MEM_HANDLE ) 0		5578595	0					
ANR	5578615	CastTarget	MEM_HANDLE		5578595	0					
ANR	5578616	PrimaryExpression	0		5578595	1					
ANR	5578617	IdentifierDeclStatement	char * ptr2 ;	259:4:5269:5279	5578595	2	True				
ANR	5578618	IdentifierDecl	* ptr2		5578595	0					
ANR	5578619	IdentifierDeclType	char *		5578595	0					
ANR	5578620	Identifier	ptr2		5578595	1					
ANR	5578621	ExpressionStatement	size += sizeof ( long ) + 2 * sizeof ( void * )	261:4:5286:5327	5578595	3	True				
ANR	5578622	AssignmentExpression	size += sizeof ( long ) + 2 * sizeof ( void * )		5578595	0		+=			
ANR	5578623	Identifier	size		5578595	0					
ANR	5578624	AdditiveExpression	sizeof ( long ) + 2 * sizeof ( void * )		5578595	1		+			
ANR	5578625	SizeofExpression	sizeof ( long )		5578595	0					
ANR	5578626	Sizeof	sizeof		5578595	0					
ANR	5578627	SizeofOperand	long		5578595	1					
ANR	5578628	MultiplicativeExpression	2 * sizeof ( void * )		5578595	1		*			
ANR	5578629	PrimaryExpression	2		5578595	0					
ANR	5578630	SizeofExpression	sizeof ( void * )		5578595	1					
ANR	5578631	Sizeof	sizeof		5578595	0					
ANR	5578632	SizeofOperand	void *		5578595	1					
ANR	5578633	ExpressionStatement	size += sizeof ( long )	264:4:5341:5361	5578595	4	True				
ANR	5578634	AssignmentExpression	size += sizeof ( long )		5578595	0		+=			
ANR	5578635	Identifier	size		5578595	0					
ANR	5578636	SizeofExpression	sizeof ( long )		5578595	1					
ANR	5578637	Sizeof	sizeof		5578595	0					
ANR	5578638	SizeofOperand	long		5578595	1					
ANR	5578639	ExpressionStatement	"ptr = gs_malloc ( gs_mem_ctx , size , 1 , ""UFST MEMalloc"" )"	265:4:5367:5420	5578595	5	True				
ANR	5578640	AssignmentExpression	"ptr = gs_malloc ( gs_mem_ctx , size , 1 , ""UFST MEMalloc"" )"		5578595	0		=			
ANR	5578641	Identifier	ptr		5578595	0					
ANR	5578642	CallExpression	"gs_malloc ( gs_mem_ctx , size , 1 , ""UFST MEMalloc"" )"		5578595	1					
ANR	5578643	Callee	gs_malloc		5578595	0					
ANR	5578644	Identifier	gs_malloc		5578595	0					
ANR	5578645	ArgumentList	gs_mem_ctx		5578595	1					
ANR	5578646	Argument	gs_mem_ctx		5578595	0					
ANR	5578647	Identifier	gs_mem_ctx		5578595	0					
ANR	5578648	Argument	size		5578595	1					
ANR	5578649	Identifier	size		5578595	0					
ANR	5578650	Argument	1		5578595	2					
ANR	5578651	PrimaryExpression	1		5578595	0					
ANR	5578652	Argument	"""UFST MEMalloc"""		5578595	3					
ANR	5578653	PrimaryExpression	"""UFST MEMalloc"""		5578595	0					
ANR	5578654	IfStatement	if ( ! ptr )		5578595	6					
ANR	5578655	Condition	! ptr	266:8:5430:5433	5578595	0	True				
ANR	5578656	UnaryOperationExpression	! ptr		5578595	0					
ANR	5578657	UnaryOperator	!		5578595	0					
ANR	5578658	Identifier	ptr		5578595	1					
ANR	5578659	CompoundStatement		16:14:294:294	5578595	1					
ANR	5578660	ReturnStatement	return ( NIL_MH ) ;	267:8:5446:5461	5578595	0	True				
ANR	5578661	Identifier	NIL_MH		5578595	0					
ANR	5578662	ElseStatement	else		5578595	0					
ANR	5578663	CompoundStatement		19:9:336:336	5578595	0					
ANR	5578664	ExpressionStatement	* ( ( long * ) ptr ) = size	270:8:5488:5509	5578595	0	True				
ANR	5578665	AssignmentExpression	* ( ( long * ) ptr ) = size		5578595	0		=			
ANR	5578666	UnaryOperationExpression	* ( ( long * ) ptr )		5578595	0					
ANR	5578667	UnaryOperator	*		5578595	0					
ANR	5578668	CastExpression	( long * ) ptr		5578595	1					
ANR	5578669	CastTarget	long *		5578595	0					
ANR	5578670	Identifier	ptr		5578595	1					
ANR	5578671	Identifier	size		5578595	1					
ANR	5578672	ExpressionStatement	* ( ( long * ) ( ptr + size - sizeof ( long ) ) ) = size	273:8:5545:5590	5578595	1	True				
ANR	5578673	AssignmentExpression	* ( ( long * ) ( ptr + size - sizeof ( long ) ) ) = size		5578595	0		=			
ANR	5578674	UnaryOperationExpression	* ( ( long * ) ( ptr + size - sizeof ( long ) ) )		5578595	0					
ANR	5578675	UnaryOperator	*		5578595	0					
ANR	5578676	CastExpression	( long * ) ( ptr + size - sizeof ( long ) )		5578595	1					
ANR	5578677	CastTarget	long *		5578595	0					
ANR	5578678	AdditiveExpression	ptr + size - sizeof ( long )		5578595	1		+			
ANR	5578679	Identifier	ptr		5578595	0					
ANR	5578680	AdditiveExpression	size - sizeof ( long )		5578595	1		-			
ANR	5578681	Identifier	size		5578595	0					
ANR	5578682	SizeofExpression	sizeof ( long )		5578595	1					
ANR	5578683	Sizeof	sizeof		5578595	0					
ANR	5578684	SizeofOperand	long		5578595	1					
ANR	5578685	Identifier	size		5578595	1					
ANR	5578686	ExpressionStatement	ptr2 = ptr	274:8:5600:5610	5578595	2	True				
ANR	5578687	AssignmentExpression	ptr2 = ptr		5578595	0		=			
ANR	5578688	Identifier	ptr2		5578595	0					
ANR	5578689	Identifier	ptr		5578595	1					
ANR	5578690	ExpressionStatement	ptr += sizeof ( long )	277:8:5628:5647	5578595	3	True				
ANR	5578691	AssignmentExpression	ptr += sizeof ( long )		5578595	0		+=			
ANR	5578692	Identifier	ptr		5578595	0					
ANR	5578693	SizeofExpression	sizeof ( long )		5578595	1					
ANR	5578694	Sizeof	sizeof		5578595	0					
ANR	5578695	SizeofOperand	long		5578595	1					
ANR	5578696	IfStatement	if ( ( curmem += size ) > maxmem )		5578595	4					
ANR	5578697	Condition	( curmem += size ) > maxmem	280:12:5687:5711	5578595	0	True				
ANR	5578698	RelationalExpression	( curmem += size ) > maxmem		5578595	0		>			
ANR	5578699	AssignmentExpression	curmem += size		5578595	0		+=			
ANR	5578700	Identifier	curmem		5578595	0					
ANR	5578701	Identifier	size		5578595	1					
ANR	5578702	Identifier	maxmem		5578595	1					
ANR	5578703	CompoundStatement		30:39:572:572	5578595	1					
ANR	5578704	ExpressionStatement	maxmem = curmem	281:12:5728:5743	5578595	0	True				
ANR	5578705	AssignmentExpression	maxmem = curmem		5578595	0		=			
ANR	5578706	Identifier	maxmem		5578595	0					
ANR	5578707	Identifier	curmem		5578595	1					
ANR	5578708	ExpressionStatement	size -= 2 * sizeof ( long )	283:8:5763:5787	5578595	5	True				
ANR	5578709	AssignmentExpression	size -= 2 * sizeof ( long )		5578595	0		-=			
ANR	5578710	Identifier	size		5578595	0					
ANR	5578711	MultiplicativeExpression	2 * sizeof ( long )		5578595	1		*			
ANR	5578712	PrimaryExpression	2		5578595	0					
ANR	5578713	SizeofExpression	sizeof ( long )		5578595	1					
ANR	5578714	Sizeof	sizeof		5578595	0					
ANR	5578715	SizeofOperand	long		5578595	1					
ANR	5578716	ExpressionStatement	* ( ( char * ) ptr ) = ptr2	284:8:5797:5818	5578595	6	True				
ANR	5578717	AssignmentExpression	* ( ( char * ) ptr ) = ptr2		5578595	0		=			
ANR	5578718	UnaryOperationExpression	* ( ( char * ) ptr )		5578595	0					
ANR	5578719	UnaryOperator	*		5578595	0					
ANR	5578720	CastExpression	( char * ) ptr		5578595	1					
ANR	5578721	CastTarget	char *		5578595	0					
ANR	5578722	Identifier	ptr		5578595	1					
ANR	5578723	Identifier	ptr2		5578595	1					
ANR	5578724	ExpressionStatement	* ( ( char * ) ( ptr + size - sizeof ( void * ) ) ) = ptr2	285:8:5828:5875	5578595	7	True				
ANR	5578725	AssignmentExpression	* ( ( char * ) ( ptr + size - sizeof ( void * ) ) ) = ptr2		5578595	0		=			
ANR	5578726	UnaryOperationExpression	* ( ( char * ) ( ptr + size - sizeof ( void * ) ) )		5578595	0					
ANR	5578727	UnaryOperator	*		5578595	0					
ANR	5578728	CastExpression	( char * ) ( ptr + size - sizeof ( void * ) )		5578595	1					
ANR	5578729	CastTarget	char *		5578595	0					
ANR	5578730	AdditiveExpression	ptr + size - sizeof ( void * )		5578595	1		+			
ANR	5578731	Identifier	ptr		5578595	0					
ANR	5578732	AdditiveExpression	size - sizeof ( void * )		5578595	1		-			
ANR	5578733	Identifier	size		5578595	0					
ANR	5578734	SizeofExpression	sizeof ( void * )		5578595	1					
ANR	5578735	Sizeof	sizeof		5578595	0					
ANR	5578736	SizeofOperand	void *		5578595	1					
ANR	5578737	Identifier	ptr2		5578595	1					
ANR	5578738	ExpressionStatement	ptr += sizeof ( char * )	286:8:5885:5906	5578595	8	True				
ANR	5578739	AssignmentExpression	ptr += sizeof ( char * )		5578595	0		+=			
ANR	5578740	Identifier	ptr		5578595	0					
ANR	5578741	SizeofExpression	sizeof ( char * )		5578595	1					
ANR	5578742	Sizeof	sizeof		5578595	0					
ANR	5578743	SizeofOperand	char *		5578595	1					
ANR	5578744	ReturnStatement	return ( ( MEM_HANDLE ) ptr ) ;	290:8:5925:5950	5578595	9	True				
ANR	5578745	CastExpression	( MEM_HANDLE ) ptr		5578595	0					
ANR	5578746	CastTarget	MEM_HANDLE		5578595	0					
ANR	5578747	Identifier	ptr		5578595	1					
ANR	5578748	ReturnType	GLOBAL MEM_HANDLE		5578595	1					
ANR	5578749	Identifier	MEMalloc		5578595	2					
ANR	5578750	ParameterList	"FSP UW16 pool , SL32 size"		5578595	3					
ANR	5578751	Parameter	FSP UW16 pool	250:9:5115:5127	5578595	0	True				
ANR	5578752	ParameterType	FSP UW16		5578595	0					
ANR	5578753	Identifier	pool		5578595	1					
ANR	5578754	Parameter	SL32 size	250:24:5130:5138	5578595	1	True				
ANR	5578755	ParameterType	SL32		5578595	0					
ANR	5578756	Identifier	size		5578595	1					
ANR	5578757	CFGEntryNode	ENTRY		5578595		True				
ANR	5578758	CFGExitNode	EXIT		5578595		True				
ANR	5578759	Symbol	if_state . pserver		5578595						
ANR	5578760	Symbol	curmem		5578595						
ANR	5578761	Symbol	* * if_state . pserver		5578595						
ANR	5578762	Symbol	pool		5578595						
ANR	5578763	Symbol	NIL_MH		5578595						
ANR	5578764	Symbol	gs_mem_ctx		5578595						
ANR	5578765	Symbol	* ( ( char * ) ptr )		5578595						
ANR	5578766	Symbol	ptr		5578595						
ANR	5578767	Symbol	* * if_state		5578595						
ANR	5578768	Symbol	* if_state . pserver		5578595						
ANR	5578769	Symbol	* if_state . pserver -> mem_avail		5578595						
ANR	5578770	Symbol	ptr2		5578595						
ANR	5578771	Symbol	* ( ( long * ) ( ptr + size - sizeof ( long ) ) )		5578595						
ANR	5578772	Symbol	if_state		5578595						
ANR	5578773	Symbol	* pool		5578595						
ANR	5578774	Symbol	if_state . pserver -> mem_avail		5578595						
ANR	5578775	Symbol	gs_malloc		5578595						
ANR	5578776	Symbol	* size		5578595						
ANR	5578777	Symbol	* ( ( char * ) ( ptr + size - sizeof ( void * ) ) )		5578595						
ANR	5578778	Symbol	size		5578595						
ANR	5578779	Symbol	* ( ( long * ) ptr )		5578595						
ANR	5578780	Symbol	* ptr		5578595						
ANR	5578781	Symbol	* if_state		5578595						
ANR	5578782	Symbol	maxmem		5578595						
ANR	5578783	Function	MEMfree	294:0:5961:6735							
ANR	5578784	FunctionDef	"MEMfree (FSP UW16 pool , MEM_HANDLE ptr0)"		5578783	0					
ANR	5578785	CompoundStatement		296:0:6013:6735	5578783	0					
ANR	5578786	IdentifierDeclStatement	int size = 0 ;	297:4:6019:6031	5578783	0	True				
ANR	5578787	IdentifierDecl	size = 0		5578783	0					
ANR	5578788	IdentifierDeclType	int		5578783	0					
ANR	5578789	Identifier	size		5578783	1					
ANR	5578790	AssignmentExpression	size = 0		5578783	2		=			
ANR	5578791	Identifier	size		5578783	0					
ANR	5578792	PrimaryExpression	0		5578783	1					
ANR	5578793	IdentifierDeclStatement	void * ptr1 ;	298:4:6037:6047	5578783	1	True				
ANR	5578794	IdentifierDecl	* ptr1		5578783	0					
ANR	5578795	IdentifierDeclType	void *		5578783	0					
ANR	5578796	Identifier	ptr1		5578783	1					
ANR	5578797	IdentifierDeclStatement	char * ptr = ( char * ) ptr0 ;	299:4:6053:6077	5578783	2	True				
ANR	5578798	IdentifierDecl	* ptr = ( char * ) ptr0		5578783	0					
ANR	5578799	IdentifierDeclType	char *		5578783	0					
ANR	5578800	Identifier	ptr		5578783	1					
ANR	5578801	AssignmentExpression	* ptr = ( char * ) ptr0		5578783	2		=			
ANR	5578802	Identifier	ptr		5578783	0					
ANR	5578803	CastExpression	( char * ) ptr0		5578783	1					
ANR	5578804	CastTarget	char *		5578783	0					
ANR	5578805	Identifier	ptr0		5578783	1					
ANR	5578806	IdentifierDeclStatement	int size1 ;	302:4:6109:6118	5578783	3	True				
ANR	5578807	IdentifierDecl	size1		5578783	0					
ANR	5578808	IdentifierDeclType	int		5578783	0					
ANR	5578809	Identifier	size1		5578783	1					
ANR	5578810	IdentifierDeclStatement	void * ptr2 ;	303:4:6124:6134	5578783	4	True				
ANR	5578811	IdentifierDecl	* ptr2		5578783	0					
ANR	5578812	IdentifierDeclType	void *		5578783	0					
ANR	5578813	Identifier	ptr2		5578783	1					
ANR	5578814	ExpressionStatement	size = sizeof ( void * )	305:4:6141:6162	5578783	5	True				
ANR	5578815	AssignmentExpression	size = sizeof ( void * )		5578783	0		=			
ANR	5578816	Identifier	size		5578783	0					
ANR	5578817	SizeofExpression	sizeof ( void * )		5578783	1					
ANR	5578818	Sizeof	sizeof		5578783	0					
ANR	5578819	SizeofOperand	void *		5578783	1					
ANR	5578820	IfStatement	if ( ! ptr )		5578783	6					
ANR	5578821	Condition	! ptr	308:8:6180:6183	5578783	0	True				
ANR	5578822	UnaryOperationExpression	! ptr		5578783	0					
ANR	5578823	UnaryOperator	!		5578783	0					
ANR	5578824	Identifier	ptr		5578783	1					
ANR	5578825	CompoundStatement		13:14:172:172	5578783	1					
ANR	5578826	ReturnStatement	return ;	309:8:6196:6202	5578783	0	True				
ANR	5578827	ExpressionStatement	ptr -= ( sizeof ( long ) + size )	312:4:6215:6243	5578783	7	True				
ANR	5578828	AssignmentExpression	ptr -= ( sizeof ( long ) + size )		5578783	0		-=			
ANR	5578829	Identifier	ptr		5578783	0					
ANR	5578830	AdditiveExpression	sizeof ( long ) + size		5578783	1		+			
ANR	5578831	SizeofExpression	sizeof ( long )		5578783	0					
ANR	5578832	Sizeof	sizeof		5578783	0					
ANR	5578833	SizeofOperand	long		5578783	1					
ANR	5578834	Identifier	size		5578783	1					
ANR	5578835	ExpressionStatement	size = * ( ( long * ) ptr )	313:4:6249:6270	5578783	8	True				
ANR	5578836	AssignmentExpression	size = * ( ( long * ) ptr )		5578783	0		=			
ANR	5578837	Identifier	size		5578783	0					
ANR	5578838	UnaryOperationExpression	* ( ( long * ) ptr )		5578783	1					
ANR	5578839	UnaryOperator	*		5578783	0					
ANR	5578840	CastExpression	( long * ) ptr		5578783	1					
ANR	5578841	CastTarget	long *		5578783	0					
ANR	5578842	Identifier	ptr		5578783	1					
ANR	5578843	ExpressionStatement	ptr1 = ptr	316:4:6302:6312	5578783	9	True				
ANR	5578844	AssignmentExpression	ptr1 = ptr		5578783	0		=			
ANR	5578845	Identifier	ptr1		5578783	0					
ANR	5578846	Identifier	ptr		5578783	1					
ANR	5578847	ExpressionStatement	size1 = size	317:4:6318:6330	5578783	10	True				
ANR	5578848	AssignmentExpression	size1 = size		5578783	0		=			
ANR	5578849	Identifier	size1		5578783	0					
ANR	5578850	Identifier	size		5578783	1					
ANR	5578851	ExpressionStatement	curmem -= size	318:4:6336:6350	5578783	11	True				
ANR	5578852	AssignmentExpression	curmem -= size		5578783	0		-=			
ANR	5578853	Identifier	curmem		5578783	0					
ANR	5578854	Identifier	size		5578783	1					
ANR	5578855	IfStatement	if ( size1 != * ( ( long * ) ( ptr + size - sizeof ( long ) ) ) )		5578783	12					
ANR	5578856	Condition	size1 != * ( ( long * ) ( ptr + size - sizeof ( long ) ) )	320:8:6361:6407	5578783	0	True				
ANR	5578857	EqualityExpression	size1 != * ( ( long * ) ( ptr + size - sizeof ( long ) ) )		5578783	0		!=			
ANR	5578858	Identifier	size1		5578783	0					
ANR	5578859	UnaryOperationExpression	* ( ( long * ) ( ptr + size - sizeof ( long ) ) )		5578783	1					
ANR	5578860	UnaryOperator	*		5578783	0					
ANR	5578861	CastExpression	( long * ) ( ptr + size - sizeof ( long ) )		5578783	1					
ANR	5578862	CastTarget	long *		5578783	0					
ANR	5578863	AdditiveExpression	ptr + size - sizeof ( long )		5578783	1		+			
ANR	5578864	Identifier	ptr		5578783	0					
ANR	5578865	AdditiveExpression	size - sizeof ( long )		5578783	1		-			
ANR	5578866	Identifier	size		5578783	0					
ANR	5578867	SizeofExpression	sizeof ( long )		5578783	1					
ANR	5578868	Sizeof	sizeof		5578783	0					
ANR	5578869	SizeofOperand	long		5578783	1					
ANR	5578870	CompoundStatement		25:57:396:396	5578783	1					
ANR	5578871	ExpressionStatement	"dprintf ( ""Memory length corrupt!\\n"" )"	321:8:6420:6455	5578783	0	True				
ANR	5578872	CallExpression	"dprintf ( ""Memory length corrupt!\\n"" )"		5578783	0					
ANR	5578873	Callee	dprintf		5578783	0					
ANR	5578874	Identifier	dprintf		5578783	0					
ANR	5578875	ArgumentList	"""Memory length corrupt!\\n"""		5578783	1					
ANR	5578876	Argument	"""Memory length corrupt!\\n"""		5578783	0					
ANR	5578877	PrimaryExpression	"""Memory length corrupt!\\n"""		5578783	0					
ANR	5578878	ExpressionStatement	ptr1 += sizeof ( long )	324:4:6468:6488	5578783	13	True				
ANR	5578879	AssignmentExpression	ptr1 += sizeof ( long )		5578783	0		+=			
ANR	5578880	Identifier	ptr1		5578783	0					
ANR	5578881	SizeofExpression	sizeof ( long )		5578783	1					
ANR	5578882	Sizeof	sizeof		5578783	0					
ANR	5578883	SizeofOperand	long		5578783	1					
ANR	5578884	ExpressionStatement	size1 -= sizeof ( long )	325:4:6494:6515	5578783	14	True				
ANR	5578885	AssignmentExpression	size1 -= sizeof ( long )		5578783	0		-=			
ANR	5578886	Identifier	size1		5578783	0					
ANR	5578887	SizeofExpression	sizeof ( long )		5578783	1					
ANR	5578888	Sizeof	sizeof		5578783	0					
ANR	5578889	SizeofOperand	long		5578783	1					
ANR	5578890	IfStatement	if ( * ( ( char * ) ptr ) != * ( ( char * ) ( ptr + size - sizeof ( void * ) ) ) )		5578783	15					
ANR	5578891	Condition	* ( ( char * ) ptr ) != * ( ( char * ) ( ptr + size - sizeof ( void * ) ) )	326:8:6525:6582	5578783	0	True				
ANR	5578892	EqualityExpression	* ( ( char * ) ptr ) != * ( ( char * ) ( ptr + size - sizeof ( void * ) ) )		5578783	0		!=			
ANR	5578893	UnaryOperationExpression	* ( ( char * ) ptr )		5578783	0					
ANR	5578894	UnaryOperator	*		5578783	0					
ANR	5578895	CastExpression	( char * ) ptr		5578783	1					
ANR	5578896	CastTarget	char *		5578783	0					
ANR	5578897	Identifier	ptr		5578783	1					
ANR	5578898	UnaryOperationExpression	* ( ( char * ) ( ptr + size - sizeof ( void * ) ) )		5578783	1					
ANR	5578899	UnaryOperator	*		5578783	0					
ANR	5578900	CastExpression	( char * ) ( ptr + size - sizeof ( void * ) )		5578783	1					
ANR	5578901	CastTarget	char *		5578783	0					
ANR	5578902	AdditiveExpression	ptr + size - sizeof ( void * )		5578783	1		+			
ANR	5578903	Identifier	ptr		5578783	0					
ANR	5578904	AdditiveExpression	size - sizeof ( void * )		5578783	1		-			
ANR	5578905	Identifier	size		5578783	0					
ANR	5578906	SizeofExpression	sizeof ( void * )		5578783	1					
ANR	5578907	Sizeof	sizeof		5578783	0					
ANR	5578908	SizeofOperand	void *		5578783	1					
ANR	5578909	CompoundStatement		31:68:571:571	5578783	1					
ANR	5578910	ExpressionStatement	"dprintf ( ""Memory pointer record corrupt!\\n"" )"	327:8:6595:6638	5578783	0	True				
ANR	5578911	CallExpression	"dprintf ( ""Memory pointer record corrupt!\\n"" )"		5578783	0					
ANR	5578912	Callee	dprintf		5578783	0					
ANR	5578913	Identifier	dprintf		5578783	0					
ANR	5578914	ArgumentList	"""Memory pointer record corrupt!\\n"""		5578783	1					
ANR	5578915	Argument	"""Memory pointer record corrupt!\\n"""		5578783	0					
ANR	5578916	PrimaryExpression	"""Memory pointer record corrupt!\\n"""		5578783	0					
ANR	5578917	ExpressionStatement	"memset ( ptr , 0x00 , size )"	331:4:6658:6681	5578783	16	True				
ANR	5578918	CallExpression	"memset ( ptr , 0x00 , size )"		5578783	0					
ANR	5578919	Callee	memset		5578783	0					
ANR	5578920	Identifier	memset		5578783	0					
ANR	5578921	ArgumentList	ptr		5578783	1					
ANR	5578922	Argument	ptr		5578783	0					
ANR	5578923	Identifier	ptr		5578783	0					
ANR	5578924	Argument	0x00		5578783	1					
ANR	5578925	PrimaryExpression	0x00		5578783	0					
ANR	5578926	Argument	size		5578783	2					
ANR	5578927	Identifier	size		5578783	0					
ANR	5578928	ExpressionStatement	"gs_free ( gs_mem_ctx , ptr , 0 , 0 , ""UFST MEMfree"" )"	332:4:6687:6733	5578783	17	True				
ANR	5578929	CallExpression	"gs_free ( gs_mem_ctx , ptr , 0 , 0 , ""UFST MEMfree"" )"		5578783	0					
ANR	5578930	Callee	gs_free		5578783	0					
ANR	5578931	Identifier	gs_free		5578783	0					
ANR	5578932	ArgumentList	gs_mem_ctx		5578783	1					
ANR	5578933	Argument	gs_mem_ctx		5578783	0					
ANR	5578934	Identifier	gs_mem_ctx		5578783	0					
ANR	5578935	Argument	ptr		5578783	1					
ANR	5578936	Identifier	ptr		5578783	0					
ANR	5578937	Argument	0		5578783	2					
ANR	5578938	PrimaryExpression	0		5578783	0					
ANR	5578939	Argument	0		5578783	3					
ANR	5578940	PrimaryExpression	0		5578783	0					
ANR	5578941	Argument	"""UFST MEMfree"""		5578783	4					
ANR	5578942	PrimaryExpression	"""UFST MEMfree"""		5578783	0					
ANR	5578943	ReturnType	GLOBAL VOID		5578783	1					
ANR	5578944	Identifier	MEMfree		5578783	2					
ANR	5578945	ParameterList	"FSP UW16 pool , MEM_HANDLE ptr0"		5578783	3					
ANR	5578946	Parameter	FSP UW16 pool	295:8:5981:5993	5578783	0	True				
ANR	5578947	ParameterType	FSP UW16		5578783	0					
ANR	5578948	Identifier	pool		5578783	1					
ANR	5578949	Parameter	MEM_HANDLE ptr0	295:23:5996:6010	5578783	1	True				
ANR	5578950	ParameterType	MEM_HANDLE		5578783	0					
ANR	5578951	Identifier	ptr0		5578783	1					
ANR	5578952	CFGEntryNode	ENTRY		5578783		True				
ANR	5578953	CFGExitNode	EXIT		5578783		True				
ANR	5578954	Symbol	curmem		5578783						
ANR	5578955	Symbol	pool		5578783						
ANR	5578956	Symbol	gs_mem_ctx		5578783						
ANR	5578957	Symbol	* ( ( char * ) ptr )		5578783						
ANR	5578958	Symbol	ptr		5578783						
ANR	5578959	Symbol	ptr2		5578783						
ANR	5578960	Symbol	* ( ( long * ) ( ptr + size - sizeof ( long ) ) )		5578783						
ANR	5578961	Symbol	* size		5578783						
ANR	5578962	Symbol	* ( ( char * ) ( ptr + size - sizeof ( void * ) ) )		5578783						
ANR	5578963	Symbol	size		5578783						
ANR	5578964	Symbol	ptr0		5578783						
ANR	5578965	Symbol	size1		5578783						
ANR	5578966	Symbol	ptr1		5578783						
ANR	5578967	Symbol	* ( ( long * ) ptr )		5578783						
ANR	5578968	Symbol	* ptr		5578783						
ANR	5578969	Function	gx_set_UFST_Callbacks	346:0:7190:7715							
ANR	5578970	FunctionDef	"gx_set_UFST_Callbacks (LPUB8 ( * p_PCLEO_charptr ) ( FSP LPUB8 pfont_hdr , UW16 sym_code ) , LPUB8 ( * p_PCLchId2ptr ) ( FSP UW16 chId ) , LPUB8 ( * p_PCLglyphID2Ptr ) ( FSP UW16 glyphID ))"		5578969	0					
ANR	5578971	CompoundStatement		351:0:7429:7715	5578969	0					
ANR	5578972	ExpressionStatement	m_PCLEO_charptr = ( p_PCLEO_charptr != NULL ? p_PCLEO_charptr : stub_PCLEO_charptr )	352:4:7435:7525	5578969	0	True				
ANR	5578973	AssignmentExpression	m_PCLEO_charptr = ( p_PCLEO_charptr != NULL ? p_PCLEO_charptr : stub_PCLEO_charptr )		5578969	0		=			
ANR	5578974	Identifier	m_PCLEO_charptr		5578969	0					
ANR	5578975	ConditionalExpression	p_PCLEO_charptr != NULL ? p_PCLEO_charptr : stub_PCLEO_charptr		5578969	1					
ANR	5578976	Condition	p_PCLEO_charptr != NULL		5578969	0					
ANR	5578977	EqualityExpression	p_PCLEO_charptr != NULL		5578969	0		!=			
ANR	5578978	Identifier	p_PCLEO_charptr		5578969	0					
ANR	5578979	Identifier	NULL		5578969	1					
ANR	5578980	Identifier	p_PCLEO_charptr		5578969	1					
ANR	5578981	Identifier	stub_PCLEO_charptr		5578969	2					
ANR	5578982	ExpressionStatement	m_PCLchId2ptr = ( p_PCLchId2ptr != NULL ? p_PCLchId2ptr : stub_PCLchId2ptr )	354:4:7531:7613	5578969	1	True				
ANR	5578983	AssignmentExpression	m_PCLchId2ptr = ( p_PCLchId2ptr != NULL ? p_PCLchId2ptr : stub_PCLchId2ptr )		5578969	0		=			
ANR	5578984	Identifier	m_PCLchId2ptr		5578969	0					
ANR	5578985	ConditionalExpression	p_PCLchId2ptr != NULL ? p_PCLchId2ptr : stub_PCLchId2ptr		5578969	1					
ANR	5578986	Condition	p_PCLchId2ptr != NULL		5578969	0					
ANR	5578987	EqualityExpression	p_PCLchId2ptr != NULL		5578969	0		!=			
ANR	5578988	Identifier	p_PCLchId2ptr		5578969	0					
ANR	5578989	Identifier	NULL		5578969	1					
ANR	5578990	Identifier	p_PCLchId2ptr		5578969	1					
ANR	5578991	Identifier	stub_PCLchId2ptr		5578969	2					
ANR	5578992	ExpressionStatement	m_PCLglyphID2Ptr = ( p_PCLglyphID2Ptr != NULL ? p_PCLglyphID2Ptr : stub_PCLglyphID2Ptr )	356:4:7619:7713	5578969	2	True				
ANR	5578993	AssignmentExpression	m_PCLglyphID2Ptr = ( p_PCLglyphID2Ptr != NULL ? p_PCLglyphID2Ptr : stub_PCLglyphID2Ptr )		5578969	0		=			
ANR	5578994	Identifier	m_PCLglyphID2Ptr		5578969	0					
ANR	5578995	ConditionalExpression	p_PCLglyphID2Ptr != NULL ? p_PCLglyphID2Ptr : stub_PCLglyphID2Ptr		5578969	1					
ANR	5578996	Condition	p_PCLglyphID2Ptr != NULL		5578969	0					
ANR	5578997	EqualityExpression	p_PCLglyphID2Ptr != NULL		5578969	0		!=			
ANR	5578998	Identifier	p_PCLglyphID2Ptr		5578969	0					
ANR	5578999	Identifier	NULL		5578969	1					
ANR	5579000	Identifier	p_PCLglyphID2Ptr		5578969	1					
ANR	5579001	Identifier	stub_PCLglyphID2Ptr		5578969	2					
ANR	5579002	ReturnType	void		5578969	1					
ANR	5579003	Identifier	gx_set_UFST_Callbacks		5578969	2					
ANR	5579004	ParameterList	"LPUB8 ( * p_PCLEO_charptr ) ( FSP LPUB8 pfont_hdr , UW16 sym_code ) , LPUB8 ( * p_PCLchId2ptr ) ( FSP UW16 chId ) , LPUB8 ( * p_PCLglyphID2Ptr ) ( FSP UW16 glyphID )"		5578969	3					
ANR	5579005	Parameter	"LPUB8 ( * p_PCLEO_charptr ) ( FSP LPUB8 pfont_hdr , UW16 sym_code )"	347:22:7217:7298	5578969	0	True				
ANR	5579006	ParameterType	"(( FSP LPUB8 pfont_hdr , UW16 sym_code ) LPUB8) *"		5578969	0					
ANR	5579007	Identifier	p_PCLEO_charptr		5578969	1					
ANR	5579008	Parameter	LPUB8 ( * p_PCLchId2ptr ) ( FSP UW16 chId )	349:22:7323:7359	5578969	1	True				
ANR	5579009	ParameterType	(( FSP UW16 chId ) LPUB8) *		5578969	0					
ANR	5579010	Identifier	p_PCLchId2ptr		5578969	1					
ANR	5579011	Parameter	LPUB8 ( * p_PCLglyphID2Ptr ) ( FSP UW16 glyphID )	350:22:7384:7426	5578969	2	True				
ANR	5579012	ParameterType	(( FSP UW16 glyphID ) LPUB8) *		5578969	0					
ANR	5579013	Identifier	p_PCLglyphID2Ptr		5578969	1					
ANR	5579014	CFGEntryNode	ENTRY		5578969		True				
ANR	5579015	CFGExitNode	EXIT		5578969		True				
ANR	5579016	Symbol	NULL		5578969						
ANR	5579017	Symbol	p_PCLEO_charptr		5578969						
ANR	5579018	Symbol	m_PCLglyphID2Ptr		5578969						
ANR	5579019	Symbol	stub_PCLglyphID2Ptr		5578969						
ANR	5579020	Symbol	p_PCLglyphID2Ptr		5578969						
ANR	5579021	Symbol	stub_PCLchId2ptr		5578969						
ANR	5579022	Symbol	m_PCLEO_charptr		5578969						
ANR	5579023	Symbol	m_PCLchId2ptr		5578969						
ANR	5579024	Symbol	p_PCLchId2ptr		5578969						
ANR	5579025	Symbol	stub_PCLEO_charptr		5578969						
ANR	5579026	Function	gx_UFST_init	368:0:8003:9316							
ANR	5579027	FunctionDef	"gx_UFST_init (gs_memory_t * mem , const UB8 * ufst_root_dir)"		5579026	0					
ANR	5579028	CompoundStatement		370:0:8066:9316	5579026	0					
ANR	5579029	IdentifierDeclStatement	IFCONFIG config_block ;	371:4:8072:8093	5579026	0	True				
ANR	5579030	IdentifierDecl	config_block		5579026	0					
ANR	5579031	IdentifierDeclType	IFCONFIG		5579026	0					
ANR	5579032	Identifier	config_block		5579026	1					
ANR	5579033	IdentifierDeclStatement	int status ;	372:4:8099:8109	5579026	1	True				
ANR	5579034	IdentifierDecl	status		5579026	0					
ANR	5579035	IdentifierDeclType	int		5579026	0					
ANR	5579036	Identifier	status		5579026	1					
ANR	5579037	IfStatement	if ( ufst_initialized )		5579026	2					
ANR	5579038	Condition	ufst_initialized	375:8:8140:8155	5579026	0	True				
ANR	5579039	Identifier	ufst_initialized		5579026	0					
ANR	5579040	ReturnStatement	return 0 ;	376:8:8166:8174	5579026	1	True				
ANR	5579041	PrimaryExpression	0		5579026	0					
ANR	5579042	ExpressionStatement	gs_mem_ctx = mem	377:4:8180:8196	5579026	3	True				
ANR	5579043	AssignmentExpression	gs_mem_ctx = mem		5579026	0		=			
ANR	5579044	Identifier	gs_mem_ctx		5579026	0					
ANR	5579045	Identifier	mem		5579026	1					
ANR	5579046	ExpressionStatement	"strcpy ( config_block . ufstPath , ufst_root_dir )"	379:4:8209:8253	5579026	4	True				
ANR	5579047	CallExpression	"strcpy ( config_block . ufstPath , ufst_root_dir )"		5579026	0					
ANR	5579048	Callee	strcpy		5579026	0					
ANR	5579049	Identifier	strcpy		5579026	0					
ANR	5579050	ArgumentList	config_block . ufstPath		5579026	1					
ANR	5579051	Argument	config_block . ufstPath		5579026	0					
ANR	5579052	MemberAccess	config_block . ufstPath		5579026	0					
ANR	5579053	Identifier	config_block		5579026	0					
ANR	5579054	Identifier	ufstPath		5579026	1					
ANR	5579055	Argument	ufst_root_dir		5579026	1					
ANR	5579056	Identifier	ufst_root_dir		5579026	0					
ANR	5579057	ExpressionStatement	"strcpy ( config_block . typePath , ufst_root_dir )"	380:4:8259:8303	5579026	5	True				
ANR	5579058	CallExpression	"strcpy ( config_block . typePath , ufst_root_dir )"		5579026	0					
ANR	5579059	Callee	strcpy		5579026	0					
ANR	5579060	Identifier	strcpy		5579026	0					
ANR	5579061	ArgumentList	config_block . typePath		5579026	1					
ANR	5579062	Argument	config_block . typePath		5579026	0					
ANR	5579063	MemberAccess	config_block . typePath		5579026	0					
ANR	5579064	Identifier	config_block		5579026	0					
ANR	5579065	Identifier	typePath		5579026	1					
ANR	5579066	Argument	ufst_root_dir		5579026	1					
ANR	5579067	Identifier	ufst_root_dir		5579026	0					
ANR	5579068	ExpressionStatement	config_block . num_files = MAX_OPEN_LIBRARIES	381:4:8309:8352	5579026	6	True				
ANR	5579069	AssignmentExpression	config_block . num_files = MAX_OPEN_LIBRARIES		5579026	0		=			
ANR	5579070	MemberAccess	config_block . num_files		5579026	0					
ANR	5579071	Identifier	config_block		5579026	0					
ANR	5579072	Identifier	num_files		5579026	1					
ANR	5579073	Identifier	MAX_OPEN_LIBRARIES		5579026	1					
ANR	5579074	ExpressionStatement	config_block . bit_map_width = BITMAP_WIDTH	382:4:8394:8435	5579026	7	True				
ANR	5579075	AssignmentExpression	config_block . bit_map_width = BITMAP_WIDTH		5579026	0		=			
ANR	5579076	MemberAccess	config_block . bit_map_width		5579026	0					
ANR	5579077	Identifier	config_block		5579026	0					
ANR	5579078	Identifier	bit_map_width		5579026	1					
ANR	5579079	Identifier	BITMAP_WIDTH		5579026	1					
ANR	5579080	ExpressionStatement	config_block . typePath [ 0 ] = 0	386:4:8613:8641	5579026	8	True				
ANR	5579081	AssignmentExpression	config_block . typePath [ 0 ] = 0		5579026	0		=			
ANR	5579082	ArrayIndexing	config_block . typePath [ 0 ]		5579026	0					
ANR	5579083	MemberAccess	config_block . typePath		5579026	0					
ANR	5579084	Identifier	config_block		5579026	0					
ANR	5579085	Identifier	typePath		5579026	1					
ANR	5579086	PrimaryExpression	0		5579026	1					
ANR	5579087	PrimaryExpression	0		5579026	1					
ANR	5579088	IfStatement	if ( ( status = CGIFinit ( FSA0 ) ) != 0 )		5579026	9					
ANR	5579089	Condition	( status = CGIFinit ( FSA0 ) ) != 0	388:8:8652:8681	5579026	0	True				
ANR	5579090	EqualityExpression	( status = CGIFinit ( FSA0 ) ) != 0		5579026	0		!=			
ANR	5579091	AssignmentExpression	status = CGIFinit ( FSA0 )		5579026	0		=			
ANR	5579092	Identifier	status		5579026	0					
ANR	5579093	CallExpression	CGIFinit ( FSA0 )		5579026	1					
ANR	5579094	Callee	CGIFinit		5579026	0					
ANR	5579095	Identifier	CGIFinit		5579026	0					
ANR	5579096	ArgumentList	FSA0		5579026	1					
ANR	5579097	Argument	FSA0		5579026	0					
ANR	5579098	Identifier	FSA0		5579026	0					
ANR	5579099	PrimaryExpression	0		5579026	1					
ANR	5579100	CompoundStatement		19:40:617:617	5579026	1					
ANR	5579101	ExpressionStatement	"dmprintf1 ( mem , ""CGIFinit() error: %d\\n"" , status )"	389:8:8694:8742	5579026	0	True				
ANR	5579102	CallExpression	"dmprintf1 ( mem , ""CGIFinit() error: %d\\n"" , status )"		5579026	0					
ANR	5579103	Callee	dmprintf1		5579026	0					
ANR	5579104	Identifier	dmprintf1		5579026	0					
ANR	5579105	ArgumentList	mem		5579026	1					
ANR	5579106	Argument	mem		5579026	0					
ANR	5579107	Identifier	mem		5579026	0					
ANR	5579108	Argument	"""CGIFinit() error: %d\\n"""		5579026	1					
ANR	5579109	PrimaryExpression	"""CGIFinit() error: %d\\n"""		5579026	0					
ANR	5579110	Argument	status		5579026	2					
ANR	5579111	Identifier	status		5579026	0					
ANR	5579112	ExpressionStatement	gs_mem_ctx = NULL	390:8:8752:8769	5579026	1	True				
ANR	5579113	AssignmentExpression	gs_mem_ctx = NULL		5579026	0		=			
ANR	5579114	Identifier	gs_mem_ctx		5579026	0					
ANR	5579115	Identifier	NULL		5579026	1					
ANR	5579116	ReturnStatement	return status ;	391:8:8779:8792	5579026	2	True				
ANR	5579117	Identifier	status		5579026	0					
ANR	5579118	IfStatement	if ( ( status = CGIFconfig ( FSA & config_block ) ) != 0 )		5579026	10					
ANR	5579119	Condition	( status = CGIFconfig ( FSA & config_block ) ) != 0	393:8:8808:8852	5579026	0	True				
ANR	5579120	EqualityExpression	( status = CGIFconfig ( FSA & config_block ) ) != 0		5579026	0		!=			
ANR	5579121	AssignmentExpression	status = CGIFconfig ( FSA & config_block )		5579026	0		=			
ANR	5579122	Identifier	status		5579026	0					
ANR	5579123	CallExpression	CGIFconfig ( FSA & config_block )		5579026	1					
ANR	5579124	Callee	CGIFconfig		5579026	0					
ANR	5579125	Identifier	CGIFconfig		5579026	0					
ANR	5579126	ArgumentList	FSA & config_block		5579026	1					
ANR	5579127	Argument	FSA & config_block		5579026	0					
ANR	5579128	BitAndExpression	FSA & config_block		5579026	0		&			
ANR	5579129	Identifier	FSA		5579026	0					
ANR	5579130	Identifier	config_block		5579026	1					
ANR	5579131	PrimaryExpression	0		5579026	1					
ANR	5579132	CompoundStatement		24:55:788:788	5579026	1					
ANR	5579133	ExpressionStatement	"dmprintf1 ( mem , ""CGIFconfig() error: %d\\n"" , status )"	394:8:8865:8915	5579026	0	True				
ANR	5579134	CallExpression	"dmprintf1 ( mem , ""CGIFconfig() error: %d\\n"" , status )"		5579026	0					
ANR	5579135	Callee	dmprintf1		5579026	0					
ANR	5579136	Identifier	dmprintf1		5579026	0					
ANR	5579137	ArgumentList	mem		5579026	1					
ANR	5579138	Argument	mem		5579026	0					
ANR	5579139	Identifier	mem		5579026	0					
ANR	5579140	Argument	"""CGIFconfig() error: %d\\n"""		5579026	1					
ANR	5579141	PrimaryExpression	"""CGIFconfig() error: %d\\n"""		5579026	0					
ANR	5579142	Argument	status		5579026	2					
ANR	5579143	Identifier	status		5579026	0					
ANR	5579144	ExpressionStatement	gs_mem_ctx = NULL	395:8:8925:8942	5579026	1	True				
ANR	5579145	AssignmentExpression	gs_mem_ctx = NULL		5579026	0		=			
ANR	5579146	Identifier	gs_mem_ctx		5579026	0					
ANR	5579147	Identifier	NULL		5579026	1					
ANR	5579148	ReturnStatement	return status ;	396:8:8952:8965	5579026	2	True				
ANR	5579149	Identifier	status		5579026	0					
ANR	5579150	Statement	CGIFfont_access	398:4:8977:8991	5579026	11	True				
ANR	5579151	Statement	(	398:19:8992:8992	5579026	12	True				
ANR	5579152	Statement	FSA	398:20:8993:8995	5579026	13	True				
ANR	5579153	Statement	DISK_ACCESS	398:24:8997:9007	5579026	14	True				
ANR	5579154	Statement	)	398:35:9008:9008	5579026	15	True				
ANR	5579155	ExpressionStatement		398:36:9009:9009	5579026	16	True				
ANR	5579156	IfStatement	if ( ( status = CGIFenter ( FSA0 ) ) != 0 )		5579026	17					
ANR	5579157	Condition	( status = CGIFenter ( FSA0 ) ) != 0	399:8:9019:9049	5579026	0	True				
ANR	5579158	EqualityExpression	( status = CGIFenter ( FSA0 ) ) != 0		5579026	0		!=			
ANR	5579159	AssignmentExpression	status = CGIFenter ( FSA0 )		5579026	0		=			
ANR	5579160	Identifier	status		5579026	0					
ANR	5579161	CallExpression	CGIFenter ( FSA0 )		5579026	1					
ANR	5579162	Callee	CGIFenter		5579026	0					
ANR	5579163	Identifier	CGIFenter		5579026	0					
ANR	5579164	ArgumentList	FSA0		5579026	1					
ANR	5579165	Argument	FSA0		5579026	0					
ANR	5579166	Identifier	FSA0		5579026	0					
ANR	5579167	PrimaryExpression	0		5579026	1					
ANR	5579168	CompoundStatement		30:41:985:985	5579026	1					
ANR	5579169	ExpressionStatement	"dmprintf1 ( mem , ""CGIFenter() error: %u\\n"" , status )"	400:8:9062:9110	5579026	0	True				
ANR	5579170	CallExpression	"dmprintf1 ( mem , ""CGIFenter() error: %u\\n"" , status )"		5579026	0					
ANR	5579171	Callee	dmprintf1		5579026	0					
ANR	5579172	Identifier	dmprintf1		5579026	0					
ANR	5579173	ArgumentList	mem		5579026	1					
ANR	5579174	Argument	mem		5579026	0					
ANR	5579175	Identifier	mem		5579026	0					
ANR	5579176	Argument	"""CGIFenter() error: %u\\n"""		5579026	1					
ANR	5579177	PrimaryExpression	"""CGIFenter() error: %u\\n"""		5579026	0					
ANR	5579178	Argument	status		5579026	2					
ANR	5579179	Identifier	status		5579026	0					
ANR	5579180	ExpressionStatement	gs_mem_ctx = NULL	401:8:9120:9137	5579026	1	True				
ANR	5579181	AssignmentExpression	gs_mem_ctx = NULL		5579026	0		=			
ANR	5579182	Identifier	gs_mem_ctx		5579026	0					
ANR	5579183	Identifier	NULL		5579026	1					
ANR	5579184	ReturnStatement	return status ;	402:8:9147:9160	5579026	2	True				
ANR	5579185	Identifier	status		5579026	0					
ANR	5579186	ExpressionStatement	ufst_initialized = TRUE	405:4:9192:9215	5579026	18	True				
ANR	5579187	AssignmentExpression	ufst_initialized = TRUE		5579026	0		=			
ANR	5579188	Identifier	ufst_initialized		5579026	0					
ANR	5579189	Identifier	TRUE		5579026	1					
ANR	5579190	ReturnStatement	return 1 ;	407:4:9228:9236	5579026	19	True				
ANR	5579191	PrimaryExpression	1		5579026	0					
ANR	5579192	ReturnType	int		5579026	1					
ANR	5579193	Identifier	gx_UFST_init		5579026	2					
ANR	5579194	ParameterList	"gs_memory_t * mem , const UB8 * ufst_root_dir"		5579026	3					
ANR	5579195	Parameter	gs_memory_t * mem	369:13:8020:8036	5579026	0	True				
ANR	5579196	ParameterType	gs_memory_t *		5579026	0					
ANR	5579197	Identifier	mem		5579026	1					
ANR	5579198	Parameter	const UB8 * ufst_root_dir	369:32:8039:8063	5579026	1	True				
ANR	5579199	ParameterType	const UB8 *		5579026	0					
ANR	5579200	Identifier	ufst_root_dir		5579026	1					
ANR	5579201	CFGEntryNode	ENTRY		5579026		True				
ANR	5579202	CFGExitNode	EXIT		5579026		True				
ANR	5579203	Symbol	config_block . ufstPath		5579026						
ANR	5579204	Symbol	* config_block		5579026						
ANR	5579205	Symbol	NULL		5579026						
ANR	5579206	Symbol	config_block . bit_map_width		5579026						
ANR	5579207	Symbol	TRUE		5579026						
ANR	5579208	Symbol	gs_mem_ctx		5579026						
ANR	5579209	Symbol	MAX_OPEN_LIBRARIES		5579026						
ANR	5579210	Symbol	CGIFenter		5579026						
ANR	5579211	Symbol	BITMAP_WIDTH		5579026						
ANR	5579212	Symbol	config_block		5579026						
ANR	5579213	Symbol	config_block . num_files		5579026						
ANR	5579214	Symbol	mem		5579026						
ANR	5579215	Symbol	FSA		5579026						
ANR	5579216	Symbol	ufst_initialized		5579026						
ANR	5579217	Symbol	* config_block . typePath		5579026						
ANR	5579218	Symbol	CGIFinit		5579026						
ANR	5579219	Symbol	ufst_root_dir		5579026						
ANR	5579220	Symbol	FSA0		5579026						
ANR	5579221	Symbol	config_block . typePath		5579026						
ANR	5579222	Symbol	status		5579026						
ANR	5579223	Symbol	CGIFconfig		5579026						
ANR	5579224	Function	gx_UFST_fini	410:0:9319:9458							
ANR	5579225	FunctionDef	gx_UFST_fini ()		5579224	0					
ANR	5579226	CompoundStatement		412:0:9342:9458	5579224	0					
ANR	5579227	ExpressionStatement	CGIFexit ( FSA0 )	413:4:9348:9362	5579224	0	True				
ANR	5579228	CallExpression	CGIFexit ( FSA0 )		5579224	0					
ANR	5579229	Callee	CGIFexit		5579224	0					
ANR	5579230	Identifier	CGIFexit		5579224	0					
ANR	5579231	ArgumentList	FSA0		5579224	1					
ANR	5579232	Argument	FSA0		5579224	0					
ANR	5579233	Identifier	FSA0		5579224	0					
ANR	5579234	ExpressionStatement	ufst_initialized = FALSE	415:4:9388:9412	5579224	1	True				
ANR	5579235	AssignmentExpression	ufst_initialized = FALSE		5579224	0		=			
ANR	5579236	Identifier	ufst_initialized		5579224	0					
ANR	5579237	Identifier	FALSE		5579224	1					
ANR	5579238	ExpressionStatement	gs_mem_ctx = NULL	416:4:9418:9435	5579224	2	True				
ANR	5579239	AssignmentExpression	gs_mem_ctx = NULL		5579224	0		=			
ANR	5579240	Identifier	gs_mem_ctx		5579224	0					
ANR	5579241	Identifier	NULL		5579224	1					
ANR	5579242	ReturnStatement	return 0 ;	418:4:9448:9456	5579224	3	True				
ANR	5579243	PrimaryExpression	0		5579224	0					
ANR	5579244	ReturnType	int		5579224	1					
ANR	5579245	Identifier	gx_UFST_fini		5579224	2					
ANR	5579246	ParameterList			5579224	3					
ANR	5579247	CFGEntryNode	ENTRY		5579224		True				
ANR	5579248	CFGExitNode	EXIT		5579224		True				
ANR	5579249	Symbol	NULL		5579224						
ANR	5579250	Symbol	ufst_initialized		5579224						
ANR	5579251	Symbol	FALSE		5579224						
ANR	5579252	Symbol	FSA0		5579224						
ANR	5579253	Symbol	gs_mem_ctx		5579224						
ANR	5579254	Function	gx_UFST_find_static_fco	423:0:9534:9810							
ANR	5579255	FunctionDef	gx_UFST_find_static_fco (const char * font_file_path)		5579254	0					
ANR	5579256	CompoundStatement		425:0:9602:9810	5579254	0					
ANR	5579257	IdentifierDeclStatement	int i ;	427:4:9628:9633	5579254	0	True				
ANR	5579258	IdentifierDecl	i		5579254	0					
ANR	5579259	IdentifierDeclType	int		5579254	0					
ANR	5579260	Identifier	i		5579254	1					
ANR	5579261	ForStatement	for ( i = 0 ; i < static_fco_count ; i ++ )		5579254	1					
ANR	5579262	ForInit	i = 0 ;	429:9:9645:9650	5579254	0	True				
ANR	5579263	AssignmentExpression	i = 0		5579254	0		=			
ANR	5579264	Identifier	i		5579254	0					
ANR	5579265	PrimaryExpression	0		5579254	1					
ANR	5579266	Condition	i < static_fco_count	429:16:9652:9671	5579254	1	True				
ANR	5579267	RelationalExpression	i < static_fco_count		5579254	0		<			
ANR	5579268	Identifier	i		5579254	0					
ANR	5579269	Identifier	static_fco_count		5579254	1					
ANR	5579270	PostIncDecOperationExpression	i ++	429:38:9674:9676	5579254	2	True				
ANR	5579271	Identifier	i		5579254	0					
ANR	5579272	IncDec	++		5579254	1					
ANR	5579273	IfStatement	"if ( ! strcmp ( static_fco_list [ i ] . file_path , font_file_path ) )"		5579254	3					
ANR	5579274	Condition	"! strcmp ( static_fco_list [ i ] . file_path , font_file_path )"	430:12:9691:9743	5579254	0	True				
ANR	5579275	UnaryOperationExpression	"! strcmp ( static_fco_list [ i ] . file_path , font_file_path )"		5579254	0					
ANR	5579276	UnaryOperator	!		5579254	0					
ANR	5579277	CallExpression	"strcmp ( static_fco_list [ i ] . file_path , font_file_path )"		5579254	1					
ANR	5579278	Callee	strcmp		5579254	0					
ANR	5579279	Identifier	strcmp		5579254	0					
ANR	5579280	ArgumentList	static_fco_list [ i ] . file_path		5579254	1					
ANR	5579281	Argument	static_fco_list [ i ] . file_path		5579254	0					
ANR	5579282	MemberAccess	static_fco_list [ i ] . file_path		5579254	0					
ANR	5579283	ArrayIndexing	static_fco_list [ i ]		5579254	0					
ANR	5579284	Identifier	static_fco_list		5579254	0					
ANR	5579285	Identifier	i		5579254	1					
ANR	5579286	Identifier	file_path		5579254	1					
ANR	5579287	Argument	font_file_path		5579254	1					
ANR	5579288	Identifier	font_file_path		5579254	0					
ANR	5579289	ReturnStatement	return & static_fco_list [ i ] ;	431:12:9758:9784	5579254	1	True				
ANR	5579290	UnaryOperationExpression	& static_fco_list [ i ]		5579254	0					
ANR	5579291	UnaryOperator	&		5579254	0					
ANR	5579292	ArrayIndexing	static_fco_list [ i ]		5579254	1					
ANR	5579293	Identifier	static_fco_list		5579254	0					
ANR	5579294	Identifier	i		5579254	1					
ANR	5579295	ReturnStatement	return NULL ;	433:4:9797:9808	5579254	2	True				
ANR	5579296	Identifier	NULL		5579254	0					
ANR	5579297	ReturnType	fco_list_elem *		5579254	1					
ANR	5579298	Identifier	gx_UFST_find_static_fco		5579254	2					
ANR	5579299	ParameterList	const char * font_file_path		5579254	3					
ANR	5579300	Parameter	const char * font_file_path	424:24:9574:9599	5579254	0	True				
ANR	5579301	ParameterType	const char *		5579254	0					
ANR	5579302	Identifier	font_file_path		5579254	1					
ANR	5579303	CFGEntryNode	ENTRY		5579254		True				
ANR	5579304	CFGExitNode	EXIT		5579254		True				
ANR	5579305	Symbol	strcmp		5579254						
ANR	5579306	Symbol	* i		5579254						
ANR	5579307	Symbol	NULL		5579254						
ANR	5579308	Symbol	font_file_path		5579254						
ANR	5579309	Symbol	* static_fco_list		5579254						
ANR	5579310	Symbol	i		5579254						
ANR	5579311	Symbol	static_fco_list		5579254						
ANR	5579312	Symbol	static_fco_count		5579254						
ANR	5579313	Symbol	static_fco_list [ i ] . file_path		5579254						
ANR	5579314	Function	gx_UFST_find_static_fco_handle	436:0:9813:10069							
ANR	5579315	FunctionDef	gx_UFST_find_static_fco_handle (SW16 fcHandle)		5579314	0					
ANR	5579316	CompoundStatement		438:0:9875:10069	5579314	0					
ANR	5579317	IdentifierDeclStatement	int i ;	440:4:9901:9906	5579314	0	True				
ANR	5579318	IdentifierDecl	i		5579314	0					
ANR	5579319	IdentifierDeclType	int		5579314	0					
ANR	5579320	Identifier	i		5579314	1					
ANR	5579321	ForStatement	for ( i = 0 ; i < static_fco_count ; i ++ )		5579314	1					
ANR	5579322	ForInit	i = 0 ;	442:9:9918:9923	5579314	0	True				
ANR	5579323	AssignmentExpression	i = 0		5579314	0		=			
ANR	5579324	Identifier	i		5579314	0					
ANR	5579325	PrimaryExpression	0		5579314	1					
ANR	5579326	Condition	i < static_fco_count	442:16:9925:9944	5579314	1	True				
ANR	5579327	RelationalExpression	i < static_fco_count		5579314	0		<			
ANR	5579328	Identifier	i		5579314	0					
ANR	5579329	Identifier	static_fco_count		5579314	1					
ANR	5579330	PostIncDecOperationExpression	i ++	442:38:9947:9949	5579314	2	True				
ANR	5579331	Identifier	i		5579314	0					
ANR	5579332	IncDec	++		5579314	1					
ANR	5579333	IfStatement	if ( static_fco_list [ i ] . fcHandle == fcHandle )		5579314	3					
ANR	5579334	Condition	static_fco_list [ i ] . fcHandle == fcHandle	443:12:9964:10002	5579314	0	True				
ANR	5579335	EqualityExpression	static_fco_list [ i ] . fcHandle == fcHandle		5579314	0		==			
ANR	5579336	MemberAccess	static_fco_list [ i ] . fcHandle		5579314	0					
ANR	5579337	ArrayIndexing	static_fco_list [ i ]		5579314	0					
ANR	5579338	Identifier	static_fco_list		5579314	0					
ANR	5579339	Identifier	i		5579314	1					
ANR	5579340	Identifier	fcHandle		5579314	1					
ANR	5579341	Identifier	fcHandle		5579314	1					
ANR	5579342	ReturnStatement	return & static_fco_list [ i ] ;	444:12:10017:10043	5579314	1	True				
ANR	5579343	UnaryOperationExpression	& static_fco_list [ i ]		5579314	0					
ANR	5579344	UnaryOperator	&		5579314	0					
ANR	5579345	ArrayIndexing	static_fco_list [ i ]		5579314	1					
ANR	5579346	Identifier	static_fco_list		5579314	0					
ANR	5579347	Identifier	i		5579314	1					
ANR	5579348	ReturnStatement	return NULL ;	446:4:10056:10067	5579314	2	True				
ANR	5579349	Identifier	NULL		5579314	0					
ANR	5579350	ReturnType	fco_list_elem *		5579314	1					
ANR	5579351	Identifier	gx_UFST_find_static_fco_handle		5579314	2					
ANR	5579352	ParameterList	SW16 fcHandle		5579314	3					
ANR	5579353	Parameter	SW16 fcHandle	437:31:9860:9872	5579314	0	True				
ANR	5579354	ParameterType	SW16		5579314	0					
ANR	5579355	Identifier	fcHandle		5579314	1					
ANR	5579356	CFGEntryNode	ENTRY		5579314		True				
ANR	5579357	CFGExitNode	EXIT		5579314		True				
ANR	5579358	Symbol	* i		5579314						
ANR	5579359	Symbol	NULL		5579314						
ANR	5579360	Symbol	static_fco_list [ i ] . fcHandle		5579314						
ANR	5579361	Symbol	* static_fco_list		5579314						
ANR	5579362	Symbol	i		5579314						
ANR	5579363	Symbol	static_fco_list		5579314						
ANR	5579364	Symbol	static_fco_count		5579314						
ANR	5579365	Symbol	fcHandle		5579314						
ANR	5579366	Function	gx_UFST_find_fco_handle_by_name	449:0:10072:10290							
ANR	5579367	FunctionDef	gx_UFST_find_fco_handle_by_name (const char * font_file_path)		5579366	0					
ANR	5579368	CompoundStatement		451:0:10137:10290	5579366	0					
ANR	5579369	IdentifierDeclStatement	fco_list_elem * fco = gx_UFST_find_static_fco ( font_file_path ) ;	453:4:10163:10223	5579366	0	True				
ANR	5579370	IdentifierDecl	* fco = gx_UFST_find_static_fco ( font_file_path )		5579366	0					
ANR	5579371	IdentifierDeclType	fco_list_elem *		5579366	0					
ANR	5579372	Identifier	fco		5579366	1					
ANR	5579373	AssignmentExpression	* fco = gx_UFST_find_static_fco ( font_file_path )		5579366	2		=			
ANR	5579374	Identifier	fco		5579366	0					
ANR	5579375	CallExpression	gx_UFST_find_static_fco ( font_file_path )		5579366	1					
ANR	5579376	Callee	gx_UFST_find_static_fco		5579366	0					
ANR	5579377	Identifier	gx_UFST_find_static_fco		5579366	0					
ANR	5579378	ArgumentList	font_file_path		5579366	1					
ANR	5579379	Argument	font_file_path		5579366	0					
ANR	5579380	Identifier	font_file_path		5579366	0					
ANR	5579381	IfStatement	if ( fco )		5579366	1					
ANR	5579382	Condition	fco	455:8:10234:10236	5579366	0	True				
ANR	5579383	Identifier	fco		5579366	0					
ANR	5579384	ReturnStatement	return fco -> fcHandle ;	456:8:10247:10267	5579366	1	True				
ANR	5579385	PtrMemberAccess	fco -> fcHandle		5579366	0					
ANR	5579386	Identifier	fco		5579366	0					
ANR	5579387	Identifier	fcHandle		5579366	1					
ANR	5579388	ReturnStatement	return 0 ;	457:4:10273:10281	5579366	2	True				
ANR	5579389	PrimaryExpression	0		5579366	0					
ANR	5579390	ReturnType	SW16		5579366	1					
ANR	5579391	Identifier	gx_UFST_find_fco_handle_by_name		5579366	2					
ANR	5579392	ParameterList	const char * font_file_path		5579366	3					
ANR	5579393	Parameter	const char * font_file_path	450:32:10109:10134	5579366	0	True				
ANR	5579394	ParameterType	const char *		5579366	0					
ANR	5579395	Identifier	font_file_path		5579366	1					
ANR	5579396	CFGEntryNode	ENTRY		5579366		True				
ANR	5579397	CFGExitNode	EXIT		5579366		True				
ANR	5579398	Symbol	gx_UFST_find_static_fco		5579366						
ANR	5579399	Symbol	fco		5579366						
ANR	5579400	Symbol	* fco		5579366						
ANR	5579401	Symbol	font_file_path		5579366						
ANR	5579402	Symbol	fco -> fcHandle		5579366						
ANR	5579403	Function	gx_UFST_open_static_fco	461:0:10293:11084							
ANR	5579404	FunctionDef	"gx_UFST_open_static_fco (const char * font_file_path , SW16 * result_fcHandle)"		5579403	0					
ANR	5579405	CompoundStatement		463:0:10374:11084	5579403	0					
ANR	5579406	IdentifierDeclStatement	SW16 fcHandle ;	465:4:10400:10413	5579403	0	True				
ANR	5579407	IdentifierDecl	fcHandle		5579403	0					
ANR	5579408	IdentifierDeclType	SW16		5579403	0					
ANR	5579409	Identifier	fcHandle		5579403	1					
ANR	5579410	IdentifierDeclStatement	UW16 code ;	466:4:10419:10428	5579403	1	True				
ANR	5579411	IdentifierDecl	code		5579403	0					
ANR	5579412	IdentifierDeclType	UW16		5579403	0					
ANR	5579413	Identifier	code		5579403	1					
ANR	5579414	IdentifierDeclStatement	fco_list_elem * e ;	467:4:10434:10450	5579403	2	True				
ANR	5579415	IdentifierDecl	* e		5579403	0					
ANR	5579416	IdentifierDeclType	fco_list_elem *		5579403	0					
ANR	5579417	Identifier	e		5579403	1					
ANR	5579418	IfStatement	if ( static_fco_count >= MAX_STATIC_FCO_COUNT )		5579403	3					
ANR	5579419	Condition	static_fco_count >= MAX_STATIC_FCO_COUNT	469:8:10461:10500	5579403	0	True				
ANR	5579420	RelationalExpression	static_fco_count >= MAX_STATIC_FCO_COUNT		5579403	0		>=			
ANR	5579421	Identifier	static_fco_count		5579403	0					
ANR	5579422	Identifier	MAX_STATIC_FCO_COUNT		5579403	1					
ANR	5579423	ReturnStatement	return ERR_fco_NoMem ;	470:8:10511:10531	5579403	1	True				
ANR	5579424	Identifier	ERR_fco_NoMem		5579403	0					
ANR	5579425	Statement	code	471:4:10537:10540	5579403	4	True				
ANR	5579426	Statement	=	471:9:10542:10542	5579403	5	True				
ANR	5579427	Statement	CGIFfco_Open	471:11:10544:10555	5579403	6	True				
ANR	5579428	Statement	(	471:23:10556:10556	5579403	7	True				
ANR	5579429	Statement	FSA	471:24:10557:10559	5579403	8	True				
ANR	5579430	Statement	(	471:27:10560:10560	5579403	9	True				
ANR	5579431	Statement	UB8	471:28:10561:10563	5579403	10	True				
ANR	5579432	Statement	*	471:32:10565:10565	5579403	11	True				
ANR	5579433	Statement	)	471:33:10566:10566	5579403	12	True				
ANR	5579434	Statement	font_file_path	471:35:10568:10581	5579403	13	True				
ANR	5579435	Statement	","	471:49:10582:10582	5579403	14	True				
ANR	5579436	Statement	&	471:51:10584:10584	5579403	15	True				
ANR	5579437	Statement	fcHandle	471:52:10585:10592	5579403	16	True				
ANR	5579438	Statement	)	471:60:10593:10593	5579403	17	True				
ANR	5579439	ExpressionStatement		471:61:10594:10594	5579403	18	True				
ANR	5579440	IfStatement	if ( code != 0 )		5579403	19					
ANR	5579441	Condition	code != 0	472:8:10604:10612	5579403	0	True				
ANR	5579442	EqualityExpression	code != 0		5579403	0		!=			
ANR	5579443	Identifier	code		5579403	0					
ANR	5579444	PrimaryExpression	0		5579403	1					
ANR	5579445	ReturnStatement	return code ;	473:8:10623:10634	5579403	1	True				
ANR	5579446	Identifier	code		5579403	0					
ANR	5579447	ExpressionStatement	e = & static_fco_list [ static_fco_count ]	474:4:10640:10678	5579403	20	True				
ANR	5579448	AssignmentExpression	e = & static_fco_list [ static_fco_count ]		5579403	0		=			
ANR	5579449	Identifier	e		5579403	0					
ANR	5579450	UnaryOperationExpression	& static_fco_list [ static_fco_count ]		5579403	1					
ANR	5579451	UnaryOperator	&		5579403	0					
ANR	5579452	ArrayIndexing	static_fco_list [ static_fco_count ]		5579403	1					
ANR	5579453	Identifier	static_fco_list		5579403	0					
ANR	5579454	Identifier	static_fco_count		5579403	1					
ANR	5579455	ExpressionStatement	"strncpy ( static_fco_paths [ static_fco_count ] , font_file_path , sizeof ( static_fco_paths [ static_fco_count ] ) )"	475:4:10684:10799	5579403	21	True				
ANR	5579456	CallExpression	"strncpy ( static_fco_paths [ static_fco_count ] , font_file_path , sizeof ( static_fco_paths [ static_fco_count ] ) )"		5579403	0					
ANR	5579457	Callee	strncpy		5579403	0					
ANR	5579458	Identifier	strncpy		5579403	0					
ANR	5579459	ArgumentList	static_fco_paths [ static_fco_count ]		5579403	1					
ANR	5579460	Argument	static_fco_paths [ static_fco_count ]		5579403	0					
ANR	5579461	ArrayIndexing	static_fco_paths [ static_fco_count ]		5579403	0					
ANR	5579462	Identifier	static_fco_paths		5579403	0					
ANR	5579463	Identifier	static_fco_count		5579403	1					
ANR	5579464	Argument	font_file_path		5579403	1					
ANR	5579465	Identifier	font_file_path		5579403	0					
ANR	5579466	Argument	sizeof ( static_fco_paths [ static_fco_count ] )		5579403	2					
ANR	5579467	SizeofExpression	sizeof ( static_fco_paths [ static_fco_count ] )		5579403	0					
ANR	5579468	Sizeof	sizeof		5579403	0					
ANR	5579469	ArrayIndexing	static_fco_paths [ static_fco_count ]		5579403	1					
ANR	5579470	Identifier	static_fco_paths		5579403	0					
ANR	5579471	Identifier	static_fco_count		5579403	1					
ANR	5579472	ExpressionStatement	e -> file_path = static_fco_paths [ static_fco_count ]	477:4:10805:10854	5579403	22	True				
ANR	5579473	AssignmentExpression	e -> file_path = static_fco_paths [ static_fco_count ]		5579403	0		=			
ANR	5579474	PtrMemberAccess	e -> file_path		5579403	0					
ANR	5579475	Identifier	e		5579403	0					
ANR	5579476	Identifier	file_path		5579403	1					
ANR	5579477	ArrayIndexing	static_fco_paths [ static_fco_count ]		5579403	1					
ANR	5579478	Identifier	static_fco_paths		5579403	0					
ANR	5579479	Identifier	static_fco_count		5579403	1					
ANR	5579480	ExpressionStatement	e -> fcHandle = fcHandle	478:4:10860:10882	5579403	23	True				
ANR	5579481	AssignmentExpression	e -> fcHandle = fcHandle		5579403	0		=			
ANR	5579482	PtrMemberAccess	e -> fcHandle		5579403	0					
ANR	5579483	Identifier	e		5579403	0					
ANR	5579484	Identifier	fcHandle		5579403	1					
ANR	5579485	Identifier	fcHandle		5579403	1					
ANR	5579486	ExpressionStatement	e -> open_count = - 1	479:4:10888:10906	5579403	24	True				
ANR	5579487	AssignmentExpression	e -> open_count = - 1		5579403	0		=			
ANR	5579488	PtrMemberAccess	e -> open_count		5579403	0					
ANR	5579489	Identifier	e		5579403	0					
ANR	5579490	Identifier	open_count		5579403	1					
ANR	5579491	UnaryOperationExpression	- 1		5579403	1					
ANR	5579492	UnaryOperator	-		5579403	0					
ANR	5579493	PrimaryExpression	1		5579403	1					
ANR	5579494	ExpressionStatement	static_fco_count ++	480:4:10950:10968	5579403	25	True				
ANR	5579495	PostIncDecOperationExpression	static_fco_count ++		5579403	0					
ANR	5579496	Identifier	static_fco_count		5579403	0					
ANR	5579497	IncDec	++		5579403	1					
ANR	5579498	ExpressionStatement	* result_fcHandle = fcHandle	481:4:10974:11001	5579403	26	True				
ANR	5579499	AssignmentExpression	* result_fcHandle = fcHandle		5579403	0		=			
ANR	5579500	UnaryOperationExpression	* result_fcHandle		5579403	0					
ANR	5579501	UnaryOperator	*		5579403	0					
ANR	5579502	Identifier	result_fcHandle		5579403	1					
ANR	5579503	Identifier	fcHandle		5579403	1					
ANR	5579504	ReturnStatement	return 0 ;	482:4:11007:11015	5579403	27	True				
ANR	5579505	PrimaryExpression	0		5579403	0					
ANR	5579506	ReturnType	UW16		5579403	1					
ANR	5579507	Identifier	gx_UFST_open_static_fco		5579403	2					
ANR	5579508	ParameterList	"const char * font_file_path , SW16 * result_fcHandle"		5579403	3					
ANR	5579509	Parameter	const char * font_file_path	462:24:10322:10347	5579403	0	True				
ANR	5579510	ParameterType	const char *		5579403	0					
ANR	5579511	Identifier	font_file_path		5579403	1					
ANR	5579512	Parameter	SW16 * result_fcHandle	462:52:10350:10371	5579403	1	True				
ANR	5579513	ParameterType	SW16 *		5579403	0					
ANR	5579514	Identifier	result_fcHandle		5579403	1					
ANR	5579515	CFGEntryNode	ENTRY		5579403		True				
ANR	5579516	CFGExitNode	EXIT		5579403		True				
ANR	5579517	Symbol	e -> fcHandle		5579403						
ANR	5579518	Symbol	e -> file_path		5579403						
ANR	5579519	Symbol	code		5579403						
ANR	5579520	Symbol	* static_fco_count		5579403						
ANR	5579521	Symbol	e		5579403						
ANR	5579522	Symbol	static_fco_count		5579403						
ANR	5579523	Symbol	ERR_fco_NoMem		5579403						
ANR	5579524	Symbol	fcHandle		5579403						
ANR	5579525	Symbol	* e		5579403						
ANR	5579526	Symbol	e -> open_count		5579403						
ANR	5579527	Symbol	MAX_STATIC_FCO_COUNT		5579403						
ANR	5579528	Symbol	* static_fco_paths		5579403						
ANR	5579529	Symbol	result_fcHandle		5579403						
ANR	5579530	Symbol	font_file_path		5579403						
ANR	5579531	Symbol	static_fco_list		5579403						
ANR	5579532	Symbol	static_fco_paths		5579403						
ANR	5579533	Symbol	* result_fcHandle		5579403						
ANR	5579534	Function	gx_UFST_close_static_fco	489:0:11087:11584							
ANR	5579535	FunctionDef	gx_UFST_close_static_fco (SW16 fcHandle)		5579534	0					
ANR	5579536	CompoundStatement		491:0:11132:11584	5579534	0					
ANR	5579537	IdentifierDeclStatement	int i ;	493:4:11158:11163	5579534	0	True				
ANR	5579538	IdentifierDecl	i		5579534	0					
ANR	5579539	IdentifierDeclType	int		5579534	0					
ANR	5579540	Identifier	i		5579534	1					
ANR	5579541	ForStatement	for ( i = 0 ; i < static_fco_count ; i ++ )		5579534	1					
ANR	5579542	ForInit	i = 0 ;	495:9:11175:11180	5579534	0	True				
ANR	5579543	AssignmentExpression	i = 0		5579534	0		=			
ANR	5579544	Identifier	i		5579534	0					
ANR	5579545	PrimaryExpression	0		5579534	1					
ANR	5579546	Condition	i < static_fco_count	495:16:11182:11201	5579534	1	True				
ANR	5579547	RelationalExpression	i < static_fco_count		5579534	0		<			
ANR	5579548	Identifier	i		5579534	0					
ANR	5579549	Identifier	static_fco_count		5579534	1					
ANR	5579550	PostIncDecOperationExpression	i ++	495:38:11204:11206	5579534	2	True				
ANR	5579551	Identifier	i		5579534	0					
ANR	5579552	IncDec	++		5579534	1					
ANR	5579553	IfStatement	if ( static_fco_list [ i ] . fcHandle == fcHandle )		5579534	3					
ANR	5579554	Condition	static_fco_list [ i ] . fcHandle == fcHandle	496:12:11221:11259	5579534	0	True				
ANR	5579555	EqualityExpression	static_fco_list [ i ] . fcHandle == fcHandle		5579534	0		==			
ANR	5579556	MemberAccess	static_fco_list [ i ] . fcHandle		5579534	0					
ANR	5579557	ArrayIndexing	static_fco_list [ i ]		5579534	0					
ANR	5579558	Identifier	static_fco_list		5579534	0					
ANR	5579559	Identifier	i		5579534	1					
ANR	5579560	Identifier	fcHandle		5579534	1					
ANR	5579561	Identifier	fcHandle		5579534	1					
ANR	5579562	BreakStatement	break ;	497:12:11274:11279	5579534	1	True				
ANR	5579563	IfStatement	if ( i >= static_fco_count )		5579534	2					
ANR	5579564	Condition	i >= static_fco_count	498:8:11289:11309	5579534	0	True				
ANR	5579565	RelationalExpression	i >= static_fco_count		5579534	0		>=			
ANR	5579566	Identifier	i		5579534	0					
ANR	5579567	Identifier	static_fco_count		5579534	1					
ANR	5579568	ReturnStatement	return ERR_fco_NoMem ;	499:8:11320:11340	5579534	1	True				
ANR	5579569	Identifier	ERR_fco_NoMem		5579534	0					
ANR	5579570	Statement	CGIFfco_Close	500:4:11346:11358	5579534	3	True				
ANR	5579571	Statement	(	500:17:11359:11359	5579534	4	True				
ANR	5579572	Statement	FSA	500:18:11360:11362	5579534	5	True				
ANR	5579573	Statement	fcHandle	500:22:11364:11371	5579534	6	True				
ANR	5579574	Statement	)	500:30:11372:11372	5579534	7	True				
ANR	5579575	ExpressionStatement		500:31:11373:11373	5579534	8	True				
ANR	5579576	ForStatement	for ( i ++ ; i < static_fco_count ; i ++ )		5579534	9					
ANR	5579577	ForInit	i ++ ;	501:9:11384:11387	5579534	0	True				
ANR	5579578	PostIncDecOperationExpression	i ++		5579534	0					
ANR	5579579	Identifier	i		5579534	0					
ANR	5579580	IncDec	++		5579534	1					
ANR	5579581	Condition	i < static_fco_count	501:14:11389:11408	5579534	1	True				
ANR	5579582	RelationalExpression	i < static_fco_count		5579534	0		<			
ANR	5579583	Identifier	i		5579534	0					
ANR	5579584	Identifier	static_fco_count		5579534	1					
ANR	5579585	PostIncDecOperationExpression	i ++	501:36:11411:11413	5579534	2	True				
ANR	5579586	Identifier	i		5579534	0					
ANR	5579587	IncDec	++		5579534	1					
ANR	5579588	CompoundStatement		11:41:283:283	5579534	3					
ANR	5579589	ExpressionStatement	static_fco_list [ i - 1 ] = static_fco_list [ i ]	502:8:11426:11469	5579534	0	True				
ANR	5579590	AssignmentExpression	static_fco_list [ i - 1 ] = static_fco_list [ i ]		5579534	0		=			
ANR	5579591	ArrayIndexing	static_fco_list [ i - 1 ]		5579534	0					
ANR	5579592	Identifier	static_fco_list		5579534	0					
ANR	5579593	AdditiveExpression	i - 1		5579534	1		-			
ANR	5579594	Identifier	i		5579534	0					
ANR	5579595	PrimaryExpression	1		5579534	1					
ANR	5579596	ArrayIndexing	static_fco_list [ i ]		5579534	1					
ANR	5579597	Identifier	static_fco_list		5579534	0					
ANR	5579598	Identifier	i		5579534	1					
ANR	5579599	ExpressionStatement	"strcpy ( static_fco_paths [ i - 1 ] , static_fco_paths [ i ] )"	503:8:11479:11531	5579534	1	True				
ANR	5579600	CallExpression	"strcpy ( static_fco_paths [ i - 1 ] , static_fco_paths [ i ] )"		5579534	0					
ANR	5579601	Callee	strcpy		5579534	0					
ANR	5579602	Identifier	strcpy		5579534	0					
ANR	5579603	ArgumentList	static_fco_paths [ i - 1 ]		5579534	1					
ANR	5579604	Argument	static_fco_paths [ i - 1 ]		5579534	0					
ANR	5579605	ArrayIndexing	static_fco_paths [ i - 1 ]		5579534	0					
ANR	5579606	Identifier	static_fco_paths		5579534	0					
ANR	5579607	AdditiveExpression	i - 1		5579534	1		-			
ANR	5579608	Identifier	i		5579534	0					
ANR	5579609	PrimaryExpression	1		5579534	1					
ANR	5579610	Argument	static_fco_paths [ i ]		5579534	1					
ANR	5579611	ArrayIndexing	static_fco_paths [ i ]		5579534	0					
ANR	5579612	Identifier	static_fco_paths		5579534	0					
ANR	5579613	Identifier	i		5579534	1					
ANR	5579614	ExpressionStatement	static_fco_count --	505:4:11543:11561	5579534	10	True				
ANR	5579615	PostIncDecOperationExpression	static_fco_count --		5579534	0					
ANR	5579616	Identifier	static_fco_count		5579534	0					
ANR	5579617	IncDec	--		5579534	1					
ANR	5579618	ReturnStatement	return 0 ;	507:4:11574:11582	5579534	11	True				
ANR	5579619	PrimaryExpression	0		5579534	0					
ANR	5579620	ReturnType	UW16		5579534	1					
ANR	5579621	Identifier	gx_UFST_close_static_fco		5579534	2					
ANR	5579622	ParameterList	SW16 fcHandle		5579534	3					
ANR	5579623	Parameter	SW16 fcHandle	490:25:11117:11129	5579534	0	True				
ANR	5579624	ParameterType	SW16		5579534	0					
ANR	5579625	Identifier	fcHandle		5579534	1					
ANR	5579626	CFGEntryNode	ENTRY		5579534		True				
ANR	5579627	CFGExitNode	EXIT		5579534		True				
ANR	5579628	Symbol	* i		5579534						
ANR	5579629	Symbol	* static_fco_paths		5579534						
ANR	5579630	Symbol	static_fco_list [ i ] . fcHandle		5579534						
ANR	5579631	Symbol	* static_fco_list		5579534						
ANR	5579632	Symbol	i		5579534						
ANR	5579633	Symbol	static_fco_list		5579534						
ANR	5579634	Symbol	static_fco_paths		5579534						
ANR	5579635	Symbol	static_fco_count		5579534						
ANR	5579636	Symbol	ERR_fco_NoMem		5579534						
ANR	5579637	Symbol	fcHandle		5579534						
ANR	5579638	Function	gx_UFST_close_static_fcos	510:0:11587:11742							
ANR	5579639	FunctionDef	gx_UFST_close_static_fcos ()		5579638	0					
ANR	5579640	CompoundStatement		512:0:11620:11742	5579638	0					
ANR	5579641	ForStatement	for ( ; static_fco_count ; )		5579638	0					
ANR	5579642	Condition	static_fco_count	514:11:11653:11668	5579638	0	True				
ANR	5579643	Identifier	static_fco_count		5579638	0					
ANR	5579644	ExpressionStatement	gx_UFST_close_static_fco ( static_fco_list [ 0 ] . fcHandle )	515:8:11680:11733	5579638	1	True				
ANR	5579645	CallExpression	gx_UFST_close_static_fco ( static_fco_list [ 0 ] . fcHandle )		5579638	0					
ANR	5579646	Callee	gx_UFST_close_static_fco		5579638	0					
ANR	5579647	Identifier	gx_UFST_close_static_fco		5579638	0					
ANR	5579648	ArgumentList	static_fco_list [ 0 ] . fcHandle		5579638	1					
ANR	5579649	Argument	static_fco_list [ 0 ] . fcHandle		5579638	0					
ANR	5579650	MemberAccess	static_fco_list [ 0 ] . fcHandle		5579638	0					
ANR	5579651	ArrayIndexing	static_fco_list [ 0 ]		5579638	0					
ANR	5579652	Identifier	static_fco_list		5579638	0					
ANR	5579653	PrimaryExpression	0		5579638	1					
ANR	5579654	Identifier	fcHandle		5579638	1					
ANR	5579655	ReturnType	void		5579638	1					
ANR	5579656	Identifier	gx_UFST_close_static_fcos		5579638	2					
ANR	5579657	ParameterList			5579638	3					
ANR	5579658	CFGEntryNode	ENTRY		5579638		True				
ANR	5579659	CFGExitNode	EXIT		5579638		True				
ANR	5579660	Symbol	* static_fco_list		5579638						
ANR	5579661	Symbol	static_fco_list		5579638						
ANR	5579662	Symbol	static_fco_count		5579638						
ANR	5579663	Symbol	static_fco_list [ 0 ] . fcHandle		5579638						
ANR	5579664	Function	BLACKPIX	525:0:11970:12025							
ANR	5579665	FunctionDef	"BLACKPIX (FSP SW16 x , SW16 y)"		5579664	0					
ANR	5579666	CompoundStatement		527:0:12011:12025	5579664	0					
ANR	5579667	ReturnStatement	return ;	528:4:12017:12023	5579664	0	True				
ANR	5579668	ReturnType	GLOBAL VOID		5579664	1					
ANR	5579669	Identifier	BLACKPIX		5579664	2					
ANR	5579670	ParameterList	"FSP SW16 x , SW16 y"		5579664	3					
ANR	5579671	Parameter	FSP SW16 x	526:9:11991:12000	5579664	0	True				
ANR	5579672	ParameterType	FSP SW16		5579664	0					
ANR	5579673	Identifier	x		5579664	1					
ANR	5579674	Parameter	SW16 y	526:21:12003:12008	5579664	1	True				
ANR	5579675	ParameterType	SW16		5579664	0					
ANR	5579676	Identifier	y		5579664	1					
ANR	5579677	CFGEntryNode	ENTRY		5579664		True				
ANR	5579678	CFGExitNode	EXIT		5579664		True				
ANR	5579679	Symbol	x		5579664						
ANR	5579680	Symbol	y		5579664						
ANR	5579681	Function	GRAYPIX	536:0:12237:12299							
ANR	5579682	FunctionDef	"GRAYPIX (FSP SW16 x , SW16 y , SW16 v)"		5579681	0					
ANR	5579683	CompoundStatement		538:0:12285:12299	5579681	0					
ANR	5579684	ReturnStatement	return ;	539:4:12291:12297	5579681	0	True				
ANR	5579685	ReturnType	GLOBAL VOID		5579681	1					
ANR	5579686	Identifier	GRAYPIX		5579681	2					
ANR	5579687	ParameterList	"FSP SW16 x , SW16 y , SW16 v"		5579681	3					
ANR	5579688	Parameter	FSP SW16 x	537:8:12257:12266	5579681	0	True				
ANR	5579689	ParameterType	FSP SW16		5579681	0					
ANR	5579690	Identifier	x		5579681	1					
ANR	5579691	Parameter	SW16 y	537:20:12269:12274	5579681	1	True				
ANR	5579692	ParameterType	SW16		5579681	0					
ANR	5579693	Identifier	y		5579681	1					
ANR	5579694	Parameter	SW16 v	537:28:12277:12282	5579681	2	True				
ANR	5579695	ParameterType	SW16		5579681	0					
ANR	5579696	Identifier	v		5579681	1					
ANR	5579697	CFGEntryNode	ENTRY		5579681		True				
ANR	5579698	CFGExitNode	EXIT		5579681		True				
ANR	5579699	Symbol	v		5579681						
ANR	5579700	Symbol	x		5579681						
ANR	5579701	Symbol	y		5579681						
