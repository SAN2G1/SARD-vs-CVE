command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6747221	File	data/converged/CVE-2018-16863_ghostpdl/jpegxr_file.c								
ANR	6747222	ClassDef	context	68:8:2411:4054							
ANR	6747223	DeclStmt									
ANR	6747224	Decl							const char	const char *	name
ANR	6747225	DeclStmt									
ANR	6747226	Decl							int	int	wid
ANR	6747227	DeclStmt									
ANR	6747228	Decl							int	int	hei
ANR	6747229	DeclStmt									
ANR	6747230	Decl							int	int	ncomp
ANR	6747231	DeclStmt									
ANR	6747232	Decl							int	int	bpi
ANR	6747233	DeclStmt									
ANR	6747234	Decl							int	int	ycc_bd10_flag
ANR	6747235	DeclStmt									
ANR	6747236	Decl							int	int	ycc_format
ANR	6747237	DeclStmt									
ANR	6747238	Decl							short	short	sf
ANR	6747239	DeclStmt									
ANR	6747240	Decl							int	int	format
ANR	6747241	DeclStmt									
ANR	6747242	Decl							FILE	FILE *	file
ANR	6747243	DeclStmt									
ANR	6747244	Decl							void	void *	buf
ANR	6747245	DeclStmt									
ANR	6747246	Decl							int	int	my
ANR	6747247	DeclStmt									
ANR	6747248	Decl							int	int	nstrips
ANR	6747249	DeclStmt									
ANR	6747250	Decl							int	int	strip
ANR	6747251	DeclStmt									
ANR	6747252	Decl							int	int	nlines
ANR	6747253	DeclStmt									
ANR	6747254	Decl							int	int	line
ANR	6747255	DeclStmt									
ANR	6747256	Decl							short	short	photometric
ANR	6747257	DeclStmt									
ANR	6747258	Decl							uint32_t	uint32_t	offoff
ANR	6747259	DeclStmt									
ANR	6747260	Decl							int	int	padBytes
ANR	6747261	DeclStmt									
ANR	6747262	Decl							int	int	alpha
ANR	6747263	DeclStmt									
ANR	6747264	Decl							unsigned int	unsigned int	isBgr
ANR	6747265	DeclStmt									
ANR	6747266	Decl							int	int	top_pad
ANR	6747267	DeclStmt									
ANR	6747268	Decl							int	int	top_pad_remaining
ANR	6747269	DeclStmt									
ANR	6747270	Decl							int	int	left_pad
ANR	6747271	DeclStmt									
ANR	6747272	Decl							context	context	context
ANR	6747273	Function	error	105:0:4057:4267							
ANR	6747274	FunctionDef	error (char * format)		6747273	0					
ANR	6747275	CompoundStatement		106:0:4093:4267	6747273	0					
ANR	6747276	IdentifierDeclStatement	va_list args ;	107:4:4099:4111	6747273	0	True				
ANR	6747277	IdentifierDecl	args		6747273	0					
ANR	6747278	IdentifierDeclType	va_list		6747273	0					
ANR	6747279	Identifier	args		6747273	1					
ANR	6747280	ExpressionStatement	"fprintf ( stderr , ""Error: "" )"	108:4:4117:4143	6747273	1	True				
ANR	6747281	CallExpression	"fprintf ( stderr , ""Error: "" )"		6747273	0					
ANR	6747282	Callee	fprintf		6747273	0					
ANR	6747283	Identifier	fprintf		6747273	0					
ANR	6747284	ArgumentList	stderr		6747273	1					
ANR	6747285	Argument	stderr		6747273	0					
ANR	6747286	Identifier	stderr		6747273	0					
ANR	6747287	Argument	"""Error: """		6747273	1					
ANR	6747288	PrimaryExpression	"""Error: """		6747273	0					
ANR	6747289	ExpressionStatement	"va_start ( args , format )"	109:4:4149:4171	6747273	2	True				
ANR	6747290	CallExpression	"va_start ( args , format )"		6747273	0					
ANR	6747291	Callee	va_start		6747273	0					
ANR	6747292	Identifier	va_start		6747273	0					
ANR	6747293	ArgumentList	args		6747273	1					
ANR	6747294	Argument	args		6747273	0					
ANR	6747295	Identifier	args		6747273	0					
ANR	6747296	Argument	format		6747273	1					
ANR	6747297	Identifier	format		6747273	0					
ANR	6747298	ExpressionStatement	"vfprintf ( stderr , format , args )"	110:4:4177:4207	6747273	3	True				
ANR	6747299	CallExpression	"vfprintf ( stderr , format , args )"		6747273	0					
ANR	6747300	Callee	vfprintf		6747273	0					
ANR	6747301	Identifier	vfprintf		6747273	0					
ANR	6747302	ArgumentList	stderr		6747273	1					
ANR	6747303	Argument	stderr		6747273	0					
ANR	6747304	Identifier	stderr		6747273	0					
ANR	6747305	Argument	format		6747273	1					
ANR	6747306	Identifier	format		6747273	0					
ANR	6747307	Argument	args		6747273	2					
ANR	6747308	Identifier	args		6747273	0					
ANR	6747309	ExpressionStatement	va_end ( args )	111:4:4213:4225	6747273	4	True				
ANR	6747310	CallExpression	va_end ( args )		6747273	0					
ANR	6747311	Callee	va_end		6747273	0					
ANR	6747312	Identifier	va_end		6747273	0					
ANR	6747313	ArgumentList	args		6747273	1					
ANR	6747314	Argument	args		6747273	0					
ANR	6747315	Identifier	args		6747273	0					
ANR	6747316	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	112:4:4231:4252	6747273	5	True				
ANR	6747317	CallExpression	"fprintf ( stderr , ""\\n"" )"		6747273	0					
ANR	6747318	Callee	fprintf		6747273	0					
ANR	6747319	Identifier	fprintf		6747273	0					
ANR	6747320	ArgumentList	stderr		6747273	1					
ANR	6747321	Argument	stderr		6747273	0					
ANR	6747322	Identifier	stderr		6747273	0					
ANR	6747323	Argument	"""\\n"""		6747273	1					
ANR	6747324	PrimaryExpression	"""\\n"""		6747273	0					
ANR	6747325	ExpressionStatement	abort ( )	113:4:4258:4265	6747273	6	True				
ANR	6747326	CallExpression	abort ( )		6747273	0					
ANR	6747327	Callee	abort		6747273	0					
ANR	6747328	Identifier	abort		6747273	0					
ANR	6747329	ArgumentList			6747273	1					
ANR	6747330	ReturnType	static void		6747273	1					
ANR	6747331	Identifier	error		6747273	2					
ANR	6747332	ParameterList	char * format		6747273	3					
ANR	6747333	Parameter	char * format	105:18:4075:4086	6747273	0	True				
ANR	6747334	ParameterType	char *		6747273	0					
ANR	6747335	Identifier	format		6747273	1					
ANR	6747336	CFGEntryNode	ENTRY		6747273		True				
ANR	6747337	CFGExitNode	EXIT		6747273		True				
ANR	6747338	Symbol	args		6747273						
ANR	6747339	Symbol	format		6747273						
ANR	6747340	Symbol	stderr		6747273						
ANR	6747341	Function	isOutputYUV444	118:0:4305:4791							
ANR	6747342	FunctionDef	isOutputYUV444 (jxr_image_t image)		6747341	0					
ANR	6747343	CompoundStatement		119:0:4352:4791	6747341	0					
ANR	6747344	SwitchStatement	switch ( jxr_get_pixel_format ( image ) )		6747341	0					
ANR	6747345	Condition	jxr_get_pixel_format ( image )	120:13:4367:4393	6747341	0	True				
ANR	6747346	CallExpression	jxr_get_pixel_format ( image )		6747341	0					
ANR	6747347	Callee	jxr_get_pixel_format		6747341	0					
ANR	6747348	Identifier	jxr_get_pixel_format		6747341	0					
ANR	6747349	ArgumentList	image		6747341	1					
ANR	6747350	Argument	image		6747341	0					
ANR	6747351	Identifier	image		6747341	0					
ANR	6747352	CompoundStatement		3:5:48:48	6747341	1					
ANR	6747353	Label	case JXRC_FMT_24bppYCC444 :	122:8:4411:4436	6747341	0	True				
ANR	6747354	Identifier	JXRC_FMT_24bppYCC444		6747341	0					
ANR	6747355	Label	case JXRC_FMT_30bppYCC444 :	123:8:4446:4471	6747341	1	True				
ANR	6747356	Identifier	JXRC_FMT_30bppYCC444		6747341	0					
ANR	6747357	Label	case JXRC_FMT_48bppYCC444 :	124:8:4481:4506	6747341	2	True				
ANR	6747358	Identifier	JXRC_FMT_48bppYCC444		6747341	0					
ANR	6747359	Label	case JXRC_FMT_48bppYCC444FixedPoint :	125:8:4516:4551	6747341	3	True				
ANR	6747360	Identifier	JXRC_FMT_48bppYCC444FixedPoint		6747341	0					
ANR	6747361	Label	case JXRC_FMT_32bppYCC444Alpha :	126:8:4561:4591	6747341	4	True				
ANR	6747362	Identifier	JXRC_FMT_32bppYCC444Alpha		6747341	0					
ANR	6747363	Label	case JXRC_FMT_40bppYCC444Alpha :	127:8:4601:4631	6747341	5	True				
ANR	6747364	Identifier	JXRC_FMT_40bppYCC444Alpha		6747341	0					
ANR	6747365	Label	case JXRC_FMT_64bppYCC444Alpha :	128:8:4641:4671	6747341	6	True				
ANR	6747366	Identifier	JXRC_FMT_64bppYCC444Alpha		6747341	0					
ANR	6747367	Label	case JXRC_FMT_64bppYCC444AlphaFixedPoint :	129:8:4681:4721	6747341	7	True				
ANR	6747368	Identifier	JXRC_FMT_64bppYCC444AlphaFixedPoint		6747341	0					
ANR	6747369	ReturnStatement	return 1 ;	130:12:4735:4743	6747341	8	True				
ANR	6747370	PrimaryExpression	1		6747341	0					
ANR	6747371	Label	default :	131:8:4753:4760	6747341	9	True				
ANR	6747372	Identifier	default		6747341	0					
ANR	6747373	ReturnStatement	return 0 ;	132:12:4774:4782	6747341	10	True				
ANR	6747374	PrimaryExpression	0		6747341	0					
ANR	6747375	ReturnType	unsigned int		6747341	1					
ANR	6747376	Identifier	isOutputYUV444		6747341	2					
ANR	6747377	ParameterList	jxr_image_t image		6747341	3					
ANR	6747378	Parameter	jxr_image_t image	118:28:4333:4349	6747341	0	True				
ANR	6747379	ParameterType	jxr_image_t		6747341	0					
ANR	6747380	Identifier	image		6747341	1					
ANR	6747381	CFGEntryNode	ENTRY		6747341		True				
ANR	6747382	CFGExitNode	EXIT		6747341		True				
ANR	6747383	Symbol	image		6747341						
ANR	6747384	Symbol	jxr_get_pixel_format		6747341						
ANR	6747385	Function	isOutputYUV422	136:0:4794:5185							
ANR	6747386	FunctionDef	isOutputYUV422 (jxr_image_t image)		6747385	0					
ANR	6747387	CompoundStatement		137:0:4841:5185	6747385	0					
ANR	6747388	SwitchStatement	switch ( jxr_get_pixel_format ( image ) )		6747385	0					
ANR	6747389	Condition	jxr_get_pixel_format ( image )	138:13:4856:4882	6747385	0	True				
ANR	6747390	CallExpression	jxr_get_pixel_format ( image )		6747385	0					
ANR	6747391	Callee	jxr_get_pixel_format		6747385	0					
ANR	6747392	Identifier	jxr_get_pixel_format		6747385	0					
ANR	6747393	ArgumentList	image		6747385	1					
ANR	6747394	Argument	image		6747385	0					
ANR	6747395	Identifier	image		6747385	0					
ANR	6747396	CompoundStatement		3:5:48:48	6747385	1					
ANR	6747397	Label	case JXRC_FMT_16bppYCC422 :	140:8:4900:4925	6747385	0	True				
ANR	6747398	Identifier	JXRC_FMT_16bppYCC422		6747385	0					
ANR	6747399	Label	case JXRC_FMT_20bppYCC422 :	141:8:4935:4960	6747385	1	True				
ANR	6747400	Identifier	JXRC_FMT_20bppYCC422		6747385	0					
ANR	6747401	Label	case JXRC_FMT_32bppYCC422 :	142:8:4970:4995	6747385	2	True				
ANR	6747402	Identifier	JXRC_FMT_32bppYCC422		6747385	0					
ANR	6747403	Label	case JXRC_FMT_24bppYCC422Alpha :	143:8:5005:5035	6747385	3	True				
ANR	6747404	Identifier	JXRC_FMT_24bppYCC422Alpha		6747385	0					
ANR	6747405	Label	case JXRC_FMT_30bppYCC422Alpha :	144:8:5045:5075	6747385	4	True				
ANR	6747406	Identifier	JXRC_FMT_30bppYCC422Alpha		6747385	0					
ANR	6747407	Label	case JXRC_FMT_48bppYCC422Alpha :	145:8:5085:5115	6747385	5	True				
ANR	6747408	Identifier	JXRC_FMT_48bppYCC422Alpha		6747385	0					
ANR	6747409	ReturnStatement	return 1 ;	146:12:5129:5137	6747385	6	True				
ANR	6747410	PrimaryExpression	1		6747385	0					
ANR	6747411	Label	default :	147:8:5147:5154	6747385	7	True				
ANR	6747412	Identifier	default		6747385	0					
ANR	6747413	ReturnStatement	return 0 ;	148:12:5168:5176	6747385	8	True				
ANR	6747414	PrimaryExpression	0		6747385	0					
ANR	6747415	ReturnType	unsigned int		6747385	1					
ANR	6747416	Identifier	isOutputYUV422		6747385	2					
ANR	6747417	ParameterList	jxr_image_t image		6747385	3					
ANR	6747418	Parameter	jxr_image_t image	136:28:4822:4838	6747385	0	True				
ANR	6747419	ParameterType	jxr_image_t		6747385	0					
ANR	6747420	Identifier	image		6747385	1					
ANR	6747421	CFGEntryNode	ENTRY		6747385		True				
ANR	6747422	CFGExitNode	EXIT		6747385		True				
ANR	6747423	Symbol	image		6747385						
ANR	6747424	Symbol	jxr_get_pixel_format		6747385						
ANR	6747425	Function	isOutputYUV420	152:0:5188:5428							
ANR	6747426	FunctionDef	isOutputYUV420 (jxr_image_t image)		6747425	0					
ANR	6747427	CompoundStatement		153:0:5235:5428	6747425	0					
ANR	6747428	SwitchStatement	switch ( jxr_get_pixel_format ( image ) )		6747425	0					
ANR	6747429	Condition	jxr_get_pixel_format ( image )	154:13:5250:5276	6747425	0	True				
ANR	6747430	CallExpression	jxr_get_pixel_format ( image )		6747425	0					
ANR	6747431	Callee	jxr_get_pixel_format		6747425	0					
ANR	6747432	Identifier	jxr_get_pixel_format		6747425	0					
ANR	6747433	ArgumentList	image		6747425	1					
ANR	6747434	Argument	image		6747425	0					
ANR	6747435	Identifier	image		6747425	0					
ANR	6747436	CompoundStatement		3:5:48:48	6747425	1					
ANR	6747437	Label	case JXRC_FMT_12bppYCC420 :	156:8:5294:5319	6747425	0	True				
ANR	6747438	Identifier	JXRC_FMT_12bppYCC420		6747425	0					
ANR	6747439	Label	case JXRC_FMT_20bppYCC420Alpha :	157:8:5329:5359	6747425	1	True				
ANR	6747440	Identifier	JXRC_FMT_20bppYCC420Alpha		6747425	0					
ANR	6747441	ReturnStatement	return 1 ;	158:11:5372:5380	6747425	2	True				
ANR	6747442	PrimaryExpression	1		6747425	0					
ANR	6747443	Label	default :	159:8:5390:5397	6747425	3	True				
ANR	6747444	Identifier	default		6747425	0					
ANR	6747445	ReturnStatement	return 0 ;	160:12:5411:5419	6747425	4	True				
ANR	6747446	PrimaryExpression	0		6747425	0					
ANR	6747447	ReturnType	unsigned int		6747425	1					
ANR	6747448	Identifier	isOutputYUV420		6747425	2					
ANR	6747449	ParameterList	jxr_image_t image		6747425	3					
ANR	6747450	Parameter	jxr_image_t image	152:28:5216:5232	6747425	0	True				
ANR	6747451	ParameterType	jxr_image_t		6747425	0					
ANR	6747452	Identifier	image		6747425	1					
ANR	6747453	CFGEntryNode	ENTRY		6747425		True				
ANR	6747454	CFGExitNode	EXIT		6747425		True				
ANR	6747455	Symbol	image		6747425						
ANR	6747456	Symbol	jxr_get_pixel_format		6747425						
ANR	6747457	Function	isOutputCMYKDirect	164:0:5431:5753							
ANR	6747458	FunctionDef	isOutputCMYKDirect (jxr_image_t image)		6747457	0					
ANR	6747459	CompoundStatement		165:0:5482:5753	6747457	0					
ANR	6747460	SwitchStatement	switch ( jxr_get_pixel_format ( image ) )		6747457	0					
ANR	6747461	Condition	jxr_get_pixel_format ( image )	166:13:5497:5523	6747457	0	True				
ANR	6747462	CallExpression	jxr_get_pixel_format ( image )		6747457	0					
ANR	6747463	Callee	jxr_get_pixel_format		6747457	0					
ANR	6747464	Identifier	jxr_get_pixel_format		6747457	0					
ANR	6747465	ArgumentList	image		6747457	1					
ANR	6747466	Argument	image		6747457	0					
ANR	6747467	Identifier	image		6747457	0					
ANR	6747468	CompoundStatement		3:5:48:48	6747457	1					
ANR	6747469	Label	case JXRC_FMT_32bppCMYKDIRECT :	168:5:5538:5567	6747457	0	True				
ANR	6747470	Identifier	JXRC_FMT_32bppCMYKDIRECT		6747457	0					
ANR	6747471	Label	case JXRC_FMT_64bppCMYKDIRECT :	169:5:5574:5603	6747457	1	True				
ANR	6747472	Identifier	JXRC_FMT_64bppCMYKDIRECT		6747457	0					
ANR	6747473	Label	case JXRC_FMT_40bppCMYKDIRECTAlpha :	170:5:5610:5644	6747457	2	True				
ANR	6747474	Identifier	JXRC_FMT_40bppCMYKDIRECTAlpha		6747457	0					
ANR	6747475	Label	case JXRC_FMT_80bppCMYKDIRECTAlpha :	171:5:5651:5685	6747457	3	True				
ANR	6747476	Identifier	JXRC_FMT_80bppCMYKDIRECTAlpha		6747457	0					
ANR	6747477	ReturnStatement	return 1 ;	172:9:5696:5704	6747457	4	True				
ANR	6747478	PrimaryExpression	1		6747457	0					
ANR	6747479	Label	default :	173:5:5711:5718	6747457	5	True				
ANR	6747480	Identifier	default		6747457	0					
ANR	6747481	ReturnStatement	return 0 ;	174:12:5736:5744	6747457	6	True				
ANR	6747482	PrimaryExpression	0		6747457	0					
ANR	6747483	ReturnType	unsigned int		6747457	1					
ANR	6747484	Identifier	isOutputCMYKDirect		6747457	2					
ANR	6747485	ParameterList	jxr_image_t image		6747457	3					
ANR	6747486	Parameter	jxr_image_t image	164:32:5463:5479	6747457	0	True				
ANR	6747487	ParameterType	jxr_image_t		6747457	0					
ANR	6747488	Identifier	image		6747457	1					
ANR	6747489	CFGEntryNode	ENTRY		6747457		True				
ANR	6747490	CFGExitNode	EXIT		6747457		True				
ANR	6747491	Symbol	image		6747457						
ANR	6747492	Symbol	jxr_get_pixel_format		6747457						
ANR	6747493	Function	read_data	180:0:5788:5989							
ANR	6747494	FunctionDef	"read_data (context * con , void * buf , int size , int count)"		6747493	0					
ANR	6747495	CompoundStatement		181:0:5856:5989	6747493	0					
ANR	6747496	IdentifierDeclStatement	"size_t rc = fread ( buf , size , count , con -> file ) ;"	182:4:5862:5908	6747493	0	True				
ANR	6747497	IdentifierDecl	"rc = fread ( buf , size , count , con -> file )"		6747493	0					
ANR	6747498	IdentifierDeclType	size_t		6747493	0					
ANR	6747499	Identifier	rc		6747493	1					
ANR	6747500	AssignmentExpression	"rc = fread ( buf , size , count , con -> file )"		6747493	2		=			
ANR	6747501	Identifier	rc		6747493	0					
ANR	6747502	CallExpression	"fread ( buf , size , count , con -> file )"		6747493	1					
ANR	6747503	Callee	fread		6747493	0					
ANR	6747504	Identifier	fread		6747493	0					
ANR	6747505	ArgumentList	buf		6747493	1					
ANR	6747506	Argument	buf		6747493	0					
ANR	6747507	Identifier	buf		6747493	0					
ANR	6747508	Argument	size		6747493	1					
ANR	6747509	Identifier	size		6747493	0					
ANR	6747510	Argument	count		6747493	2					
ANR	6747511	Identifier	count		6747493	0					
ANR	6747512	Argument	con -> file		6747493	3					
ANR	6747513	PtrMemberAccess	con -> file		6747493	0					
ANR	6747514	Identifier	con		6747493	0					
ANR	6747515	Identifier	file		6747493	1					
ANR	6747516	IfStatement	if ( rc != count )		6747493	1					
ANR	6747517	Condition	rc != count	183:8:5918:5926	6747493	0	True				
ANR	6747518	EqualityExpression	rc != count		6747493	0		!=			
ANR	6747519	Identifier	rc		6747493	0					
ANR	6747520	Identifier	count		6747493	1					
ANR	6747521	ExpressionStatement	"error ( ""premature EOF in input file %s"" , con -> name )"	184:8:5937:5987	6747493	1	True				
ANR	6747522	CallExpression	"error ( ""premature EOF in input file %s"" , con -> name )"		6747493	0					
ANR	6747523	Callee	error		6747493	0					
ANR	6747524	Identifier	error		6747493	0					
ANR	6747525	ArgumentList	"""premature EOF in input file %s"""		6747493	1					
ANR	6747526	Argument	"""premature EOF in input file %s"""		6747493	0					
ANR	6747527	PrimaryExpression	"""premature EOF in input file %s"""		6747493	0					
ANR	6747528	Argument	con -> name		6747493	1					
ANR	6747529	PtrMemberAccess	con -> name		6747493	0					
ANR	6747530	Identifier	con		6747493	0					
ANR	6747531	Identifier	name		6747493	1					
ANR	6747532	ReturnType	static void		6747493	1					
ANR	6747533	Identifier	read_data		6747493	2					
ANR	6747534	ParameterList	"context * con , void * buf , int size , int count"		6747493	3					
ANR	6747535	Parameter	context * con	180:22:5810:5821	6747493	0	True				
ANR	6747536	ParameterType	context *		6747493	0					
ANR	6747537	Identifier	con		6747493	1					
ANR	6747538	Parameter	void * buf	180:36:5824:5832	6747493	1	True				
ANR	6747539	ParameterType	void *		6747493	0					
ANR	6747540	Identifier	buf		6747493	1					
ANR	6747541	Parameter	int size	180:47:5835:5842	6747493	2	True				
ANR	6747542	ParameterType	int		6747493	0					
ANR	6747543	Identifier	size		6747493	1					
ANR	6747544	Parameter	int count	180:57:5845:5853	6747493	3	True				
ANR	6747545	ParameterType	int		6747493	0					
ANR	6747546	Identifier	count		6747493	1					
ANR	6747547	CFGEntryNode	ENTRY		6747493		True				
ANR	6747548	CFGExitNode	EXIT		6747493		True				
ANR	6747549	Symbol	rc		6747493						
ANR	6747550	Symbol	buf		6747493						
ANR	6747551	Symbol	con		6747493						
ANR	6747552	Symbol	con -> file		6747493						
ANR	6747553	Symbol	* con		6747493						
ANR	6747554	Symbol	size		6747493						
ANR	6747555	Symbol	count		6747493						
ANR	6747556	Symbol	con -> name		6747493						
ANR	6747557	Symbol	fread		6747493						
ANR	6747558	Function	read_uint8	187:0:5992:6098							
ANR	6747559	FunctionDef	"read_uint8 (context * con , uint8_t * buf , int count)"		6747558	0					
ANR	6747560	CompoundStatement		188:0:6061:6098	6747558	0					
ANR	6747561	ExpressionStatement	"read_data ( con , buf , 1 , count )"	189:4:6067:6096	6747558	0	True				
ANR	6747562	CallExpression	"read_data ( con , buf , 1 , count )"		6747558	0					
ANR	6747563	Callee	read_data		6747558	0					
ANR	6747564	Identifier	read_data		6747558	0					
ANR	6747565	ArgumentList	con		6747558	1					
ANR	6747566	Argument	con		6747558	0					
ANR	6747567	Identifier	con		6747558	0					
ANR	6747568	Argument	buf		6747558	1					
ANR	6747569	Identifier	buf		6747558	0					
ANR	6747570	Argument	1		6747558	2					
ANR	6747571	PrimaryExpression	1		6747558	0					
ANR	6747572	Argument	count		6747558	3					
ANR	6747573	Identifier	count		6747558	0					
ANR	6747574	ReturnType	static inline void		6747558	1					
ANR	6747575	Identifier	read_uint8		6747558	2					
ANR	6747576	ParameterList	"context * con , uint8_t * buf , int count"		6747558	3					
ANR	6747577	Parameter	context * con	187:30:6022:6033	6747558	0	True				
ANR	6747578	ParameterType	context *		6747558	0					
ANR	6747579	Identifier	con		6747558	1					
ANR	6747580	Parameter	uint8_t * buf	187:44:6036:6047	6747558	1	True				
ANR	6747581	ParameterType	uint8_t *		6747558	0					
ANR	6747582	Identifier	buf		6747558	1					
ANR	6747583	Parameter	int count	187:58:6050:6058	6747558	2	True				
ANR	6747584	ParameterType	int		6747558	0					
ANR	6747585	Identifier	count		6747558	1					
ANR	6747586	CFGEntryNode	ENTRY		6747558		True				
ANR	6747587	CFGExitNode	EXIT		6747558		True				
ANR	6747588	Symbol	buf		6747558						
ANR	6747589	Symbol	con		6747558						
ANR	6747590	Symbol	count		6747558						
ANR	6747591	Function	read_uint16	192:0:6101:6358							
ANR	6747592	FunctionDef	"read_uint16 (context * con , uint16_t * buf , int count)"		6747591	0					
ANR	6747593	CompoundStatement		193:0:6165:6358	6747591	0					
ANR	6747594	ExpressionStatement	"read_data ( con , buf , 2 , count )"	194:4:6171:6200	6747591	0	True				
ANR	6747595	CallExpression	"read_data ( con , buf , 2 , count )"		6747591	0					
ANR	6747596	Callee	read_data		6747591	0					
ANR	6747597	Identifier	read_data		6747591	0					
ANR	6747598	ArgumentList	con		6747591	1					
ANR	6747599	Argument	con		6747591	0					
ANR	6747600	Identifier	con		6747591	0					
ANR	6747601	Argument	buf		6747591	1					
ANR	6747602	Identifier	buf		6747591	0					
ANR	6747603	Argument	2		6747591	2					
ANR	6747604	PrimaryExpression	2		6747591	0					
ANR	6747605	Argument	count		6747591	3					
ANR	6747606	Identifier	count		6747591	0					
ANR	6747607	IfStatement	if ( con -> swap )		6747591	1					
ANR	6747608	Condition	con -> swap	195:8:6210:6218	6747591	0	True				
ANR	6747609	PtrMemberAccess	con -> swap		6747591	0					
ANR	6747610	Identifier	con		6747591	0					
ANR	6747611	Identifier	swap		6747591	1					
ANR	6747612	CompoundStatement		4:8:65:85	6747591	1					
ANR	6747613	IdentifierDeclStatement	"uint8_t * p , * plim , t ;"	196:8:6231:6251	6747591	0	True				
ANR	6747614	IdentifierDecl	* p		6747591	0					
ANR	6747615	IdentifierDeclType	uint8_t *		6747591	0					
ANR	6747616	Identifier	p		6747591	1					
ANR	6747617	IdentifierDecl	* plim		6747591	1					
ANR	6747618	IdentifierDeclType	uint8_t *		6747591	0					
ANR	6747619	Identifier	plim		6747591	1					
ANR	6747620	IdentifierDecl	t		6747591	2					
ANR	6747621	IdentifierDeclType	uint8_t		6747591	0					
ANR	6747622	Identifier	t		6747591	1					
ANR	6747623	ForStatement	"for ( p = ( uint8_t * ) buf , plim = p + count * 2 ; p < plim ; p += 2 )"		6747591	1					
ANR	6747624	ForInit	"p = ( uint8_t * ) buf , plim = p + count * 2 ;"	197:13:6266:6297	6747591	0	True				
ANR	6747625	Expression	"p = ( uint8_t * ) buf , plim = p + count * 2"		6747591	0					
ANR	6747626	AssignmentExpression	p = ( uint8_t * ) buf		6747591	0		=			
ANR	6747627	Identifier	p		6747591	0					
ANR	6747628	CastExpression	( uint8_t * ) buf		6747591	1					
ANR	6747629	CastTarget	uint8_t *		6747591	0					
ANR	6747630	Identifier	buf		6747591	1					
ANR	6747631	AssignmentExpression	plim = p + count * 2		6747591	1		=			
ANR	6747632	Identifier	plim		6747591	0					
ANR	6747633	AdditiveExpression	p + count * 2		6747591	1		+			
ANR	6747634	Identifier	p		6747591	0					
ANR	6747635	MultiplicativeExpression	count * 2		6747591	1		*			
ANR	6747636	Identifier	count		6747591	0					
ANR	6747637	PrimaryExpression	2		6747591	1					
ANR	6747638	Condition	p < plim	197:46:6299:6304	6747591	1	True				
ANR	6747639	RelationalExpression	p < plim		6747591	0		<			
ANR	6747640	Identifier	p		6747591	0					
ANR	6747641	Identifier	plim		6747591	1					
ANR	6747642	AssignmentExpression	p += 2	197:54:6307:6310	6747591	2	True	+=			
ANR	6747643	Identifier	p		6747591	0					
ANR	6747644	PrimaryExpression	2		6747591	1					
ANR	6747645	ExpressionStatement	"t = p [ 0 ] , p [ 0 ] = p [ 1 ] , p [ 1 ] = t"	198:12:6325:6350	6747591	3	True				
ANR	6747646	Expression	"t = p [ 0 ] , p [ 0 ] = p [ 1 ] , p [ 1 ] = t"		6747591	0					
ANR	6747647	AssignmentExpression	t = p [ 0 ]		6747591	0		=			
ANR	6747648	Identifier	t		6747591	0					
ANR	6747649	ArrayIndexing	p [ 0 ]		6747591	1					
ANR	6747650	Identifier	p		6747591	0					
ANR	6747651	PrimaryExpression	0		6747591	1					
ANR	6747652	Expression	"p [ 0 ] = p [ 1 ] , p [ 1 ] = t"		6747591	1					
ANR	6747653	AssignmentExpression	p [ 0 ] = p [ 1 ]		6747591	0		=			
ANR	6747654	ArrayIndexing	p [ 0 ]		6747591	0					
ANR	6747655	Identifier	p		6747591	0					
ANR	6747656	PrimaryExpression	0		6747591	1					
ANR	6747657	ArrayIndexing	p [ 1 ]		6747591	1					
ANR	6747658	Identifier	p		6747591	0					
ANR	6747659	PrimaryExpression	1		6747591	1					
ANR	6747660	AssignmentExpression	p [ 1 ] = t		6747591	1		=			
ANR	6747661	ArrayIndexing	p [ 1 ]		6747591	0					
ANR	6747662	Identifier	p		6747591	0					
ANR	6747663	PrimaryExpression	1		6747591	1					
ANR	6747664	Identifier	t		6747591	1					
ANR	6747665	ReturnType	static void		6747591	1					
ANR	6747666	Identifier	read_uint16		6747591	2					
ANR	6747667	ParameterList	"context * con , uint16_t * buf , int count"		6747591	3					
ANR	6747668	Parameter	context * con	192:24:6125:6136	6747591	0	True				
ANR	6747669	ParameterType	context *		6747591	0					
ANR	6747670	Identifier	con		6747591	1					
ANR	6747671	Parameter	uint16_t * buf	192:38:6139:6151	6747591	1	True				
ANR	6747672	ParameterType	uint16_t *		6747591	0					
ANR	6747673	Identifier	buf		6747591	1					
ANR	6747674	Parameter	int count	192:53:6154:6162	6747591	2	True				
ANR	6747675	ParameterType	int		6747591	0					
ANR	6747676	Identifier	count		6747591	1					
ANR	6747677	CFGEntryNode	ENTRY		6747591		True				
ANR	6747678	CFGExitNode	EXIT		6747591		True				
ANR	6747679	Symbol	con -> swap		6747591						
ANR	6747680	Symbol	p		6747591						
ANR	6747681	Symbol	buf		6747591						
ANR	6747682	Symbol	con		6747591						
ANR	6747683	Symbol	* con		6747591						
ANR	6747684	Symbol	plim		6747591						
ANR	6747685	Symbol	t		6747591						
ANR	6747686	Symbol	count		6747591						
ANR	6747687	Symbol	* p		6747591						
ANR	6747688	Function	read_uint32	202:0:6361:6645							
ANR	6747689	FunctionDef	"read_uint32 (context * con , uint32_t * buf , int count)"		6747688	0					
ANR	6747690	CompoundStatement		203:0:6425:6645	6747688	0					
ANR	6747691	ExpressionStatement	"read_data ( con , buf , 4 , count )"	204:4:6431:6460	6747688	0	True				
ANR	6747692	CallExpression	"read_data ( con , buf , 4 , count )"		6747688	0					
ANR	6747693	Callee	read_data		6747688	0					
ANR	6747694	Identifier	read_data		6747688	0					
ANR	6747695	ArgumentList	con		6747688	1					
ANR	6747696	Argument	con		6747688	0					
ANR	6747697	Identifier	con		6747688	0					
ANR	6747698	Argument	buf		6747688	1					
ANR	6747699	Identifier	buf		6747688	0					
ANR	6747700	Argument	4		6747688	2					
ANR	6747701	PrimaryExpression	4		6747688	0					
ANR	6747702	Argument	count		6747688	3					
ANR	6747703	Identifier	count		6747688	0					
ANR	6747704	IfStatement	if ( con -> swap )		6747688	1					
ANR	6747705	Condition	con -> swap	205:8:6470:6478	6747688	0	True				
ANR	6747706	PtrMemberAccess	con -> swap		6747688	0					
ANR	6747707	Identifier	con		6747688	0					
ANR	6747708	Identifier	swap		6747688	1					
ANR	6747709	CompoundStatement		4:8:65:85	6747688	1					
ANR	6747710	IdentifierDeclStatement	"uint8_t * p , * plim , t ;"	206:8:6491:6511	6747688	0	True				
ANR	6747711	IdentifierDecl	* p		6747688	0					
ANR	6747712	IdentifierDeclType	uint8_t *		6747688	0					
ANR	6747713	Identifier	p		6747688	1					
ANR	6747714	IdentifierDecl	* plim		6747688	1					
ANR	6747715	IdentifierDeclType	uint8_t *		6747688	0					
ANR	6747716	Identifier	plim		6747688	1					
ANR	6747717	IdentifierDecl	t		6747688	2					
ANR	6747718	IdentifierDeclType	uint8_t		6747688	0					
ANR	6747719	Identifier	t		6747688	1					
ANR	6747720	ForStatement	"for ( p = ( uint8_t * ) buf , plim = p + count * 4 ; p < plim ; p += 4 )"		6747688	1					
ANR	6747721	ForInit	"p = ( uint8_t * ) buf , plim = p + count * 4 ;"	207:13:6526:6557	6747688	0	True				
ANR	6747722	Expression	"p = ( uint8_t * ) buf , plim = p + count * 4"		6747688	0					
ANR	6747723	AssignmentExpression	p = ( uint8_t * ) buf		6747688	0		=			
ANR	6747724	Identifier	p		6747688	0					
ANR	6747725	CastExpression	( uint8_t * ) buf		6747688	1					
ANR	6747726	CastTarget	uint8_t *		6747688	0					
ANR	6747727	Identifier	buf		6747688	1					
ANR	6747728	AssignmentExpression	plim = p + count * 4		6747688	1		=			
ANR	6747729	Identifier	plim		6747688	0					
ANR	6747730	AdditiveExpression	p + count * 4		6747688	1		+			
ANR	6747731	Identifier	p		6747688	0					
ANR	6747732	MultiplicativeExpression	count * 4		6747688	1		*			
ANR	6747733	Identifier	count		6747688	0					
ANR	6747734	PrimaryExpression	4		6747688	1					
ANR	6747735	Condition	p < plim	207:46:6559:6564	6747688	1	True				
ANR	6747736	RelationalExpression	p < plim		6747688	0		<			
ANR	6747737	Identifier	p		6747688	0					
ANR	6747738	Identifier	plim		6747688	1					
ANR	6747739	AssignmentExpression	p += 4	207:54:6567:6570	6747688	2	True	+=			
ANR	6747740	Identifier	p		6747688	0					
ANR	6747741	PrimaryExpression	4		6747688	1					
ANR	6747742	ExpressionStatement	"t = p [ 0 ] , p [ 0 ] = p [ 3 ] , p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"	208:12:6585:6637	6747688	3	True				
ANR	6747743	Expression	"t = p [ 0 ] , p [ 0 ] = p [ 3 ] , p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		6747688	0					
ANR	6747744	AssignmentExpression	t = p [ 0 ]		6747688	0		=			
ANR	6747745	Identifier	t		6747688	0					
ANR	6747746	ArrayIndexing	p [ 0 ]		6747688	1					
ANR	6747747	Identifier	p		6747688	0					
ANR	6747748	PrimaryExpression	0		6747688	1					
ANR	6747749	Expression	"p [ 0 ] = p [ 3 ] , p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		6747688	1					
ANR	6747750	AssignmentExpression	p [ 0 ] = p [ 3 ]		6747688	0		=			
ANR	6747751	ArrayIndexing	p [ 0 ]		6747688	0					
ANR	6747752	Identifier	p		6747688	0					
ANR	6747753	PrimaryExpression	0		6747688	1					
ANR	6747754	ArrayIndexing	p [ 3 ]		6747688	1					
ANR	6747755	Identifier	p		6747688	0					
ANR	6747756	PrimaryExpression	3		6747688	1					
ANR	6747757	Expression	"p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		6747688	1					
ANR	6747758	AssignmentExpression	p [ 3 ] = t		6747688	0		=			
ANR	6747759	ArrayIndexing	p [ 3 ]		6747688	0					
ANR	6747760	Identifier	p		6747688	0					
ANR	6747761	PrimaryExpression	3		6747688	1					
ANR	6747762	Identifier	t		6747688	1					
ANR	6747763	Expression	"t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		6747688	1					
ANR	6747764	AssignmentExpression	t = p [ 1 ]		6747688	0		=			
ANR	6747765	Identifier	t		6747688	0					
ANR	6747766	ArrayIndexing	p [ 1 ]		6747688	1					
ANR	6747767	Identifier	p		6747688	0					
ANR	6747768	PrimaryExpression	1		6747688	1					
ANR	6747769	Expression	"p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		6747688	1					
ANR	6747770	AssignmentExpression	p [ 1 ] = p [ 2 ]		6747688	0		=			
ANR	6747771	ArrayIndexing	p [ 1 ]		6747688	0					
ANR	6747772	Identifier	p		6747688	0					
ANR	6747773	PrimaryExpression	1		6747688	1					
ANR	6747774	ArrayIndexing	p [ 2 ]		6747688	1					
ANR	6747775	Identifier	p		6747688	0					
ANR	6747776	PrimaryExpression	2		6747688	1					
ANR	6747777	AssignmentExpression	p [ 2 ] = t		6747688	1		=			
ANR	6747778	ArrayIndexing	p [ 2 ]		6747688	0					
ANR	6747779	Identifier	p		6747688	0					
ANR	6747780	PrimaryExpression	2		6747688	1					
ANR	6747781	Identifier	t		6747688	1					
ANR	6747782	ReturnType	static void		6747688	1					
ANR	6747783	Identifier	read_uint32		6747688	2					
ANR	6747784	ParameterList	"context * con , uint32_t * buf , int count"		6747688	3					
ANR	6747785	Parameter	context * con	202:24:6385:6396	6747688	0	True				
ANR	6747786	ParameterType	context *		6747688	0					
ANR	6747787	Identifier	con		6747688	1					
ANR	6747788	Parameter	uint32_t * buf	202:38:6399:6411	6747688	1	True				
ANR	6747789	ParameterType	uint32_t *		6747688	0					
ANR	6747790	Identifier	buf		6747688	1					
ANR	6747791	Parameter	int count	202:53:6414:6422	6747688	2	True				
ANR	6747792	ParameterType	int		6747688	0					
ANR	6747793	Identifier	count		6747688	1					
ANR	6747794	CFGEntryNode	ENTRY		6747688		True				
ANR	6747795	CFGExitNode	EXIT		6747688		True				
ANR	6747796	Symbol	con -> swap		6747688						
ANR	6747797	Symbol	p		6747688						
ANR	6747798	Symbol	buf		6747688						
ANR	6747799	Symbol	con		6747688						
ANR	6747800	Symbol	* con		6747688						
ANR	6747801	Symbol	t		6747688						
ANR	6747802	Symbol	plim		6747688						
ANR	6747803	Symbol	count		6747688						
ANR	6747804	Symbol	* p		6747688						
ANR	6747805	Function	get_uint8	212:0:6648:6753							
ANR	6747806	FunctionDef	get_uint8 (context * con)		6747805	0					
ANR	6747807	CompoundStatement		213:0:6694:6753	6747805	0					
ANR	6747808	IdentifierDeclStatement	uint8_t c ;	214:4:6700:6709	6747805	0	True				
ANR	6747809	IdentifierDecl	c		6747805	0					
ANR	6747810	IdentifierDeclType	uint8_t		6747805	0					
ANR	6747811	Identifier	c		6747805	1					
ANR	6747812	ExpressionStatement	"read_uint8 ( con , & c , 1 )"	215:4:6715:6737	6747805	1	True				
ANR	6747813	CallExpression	"read_uint8 ( con , & c , 1 )"		6747805	0					
ANR	6747814	Callee	read_uint8		6747805	0					
ANR	6747815	Identifier	read_uint8		6747805	0					
ANR	6747816	ArgumentList	con		6747805	1					
ANR	6747817	Argument	con		6747805	0					
ANR	6747818	Identifier	con		6747805	0					
ANR	6747819	Argument	& c		6747805	1					
ANR	6747820	UnaryOperationExpression	& c		6747805	0					
ANR	6747821	UnaryOperator	&		6747805	0					
ANR	6747822	Identifier	c		6747805	1					
ANR	6747823	Argument	1		6747805	2					
ANR	6747824	PrimaryExpression	1		6747805	0					
ANR	6747825	ReturnStatement	return c ;	216:4:6743:6751	6747805	2	True				
ANR	6747826	Identifier	c		6747805	0					
ANR	6747827	ReturnType	static inline uint8_t		6747805	1					
ANR	6747828	Identifier	get_uint8		6747805	2					
ANR	6747829	ParameterList	context * con		6747805	3					
ANR	6747830	Parameter	context * con	212:32:6680:6691	6747805	0	True				
ANR	6747831	ParameterType	context *		6747805	0					
ANR	6747832	Identifier	con		6747805	1					
ANR	6747833	CFGEntryNode	ENTRY		6747805		True				
ANR	6747834	CFGExitNode	EXIT		6747805		True				
ANR	6747835	Symbol	con		6747805						
ANR	6747836	Symbol	c		6747805						
ANR	6747837	Symbol	& c		6747805						
ANR	6747838	Function	get_uint16	219:0:6756:6865							
ANR	6747839	FunctionDef	get_uint16 (context * con)		6747838	0					
ANR	6747840	CompoundStatement		220:0:6804:6865	6747838	0					
ANR	6747841	IdentifierDeclStatement	uint16_t c ;	221:4:6810:6820	6747838	0	True				
ANR	6747842	IdentifierDecl	c		6747838	0					
ANR	6747843	IdentifierDeclType	uint16_t		6747838	0					
ANR	6747844	Identifier	c		6747838	1					
ANR	6747845	ExpressionStatement	"read_uint16 ( con , & c , 1 )"	222:4:6826:6849	6747838	1	True				
ANR	6747846	CallExpression	"read_uint16 ( con , & c , 1 )"		6747838	0					
ANR	6747847	Callee	read_uint16		6747838	0					
ANR	6747848	Identifier	read_uint16		6747838	0					
ANR	6747849	ArgumentList	con		6747838	1					
ANR	6747850	Argument	con		6747838	0					
ANR	6747851	Identifier	con		6747838	0					
ANR	6747852	Argument	& c		6747838	1					
ANR	6747853	UnaryOperationExpression	& c		6747838	0					
ANR	6747854	UnaryOperator	&		6747838	0					
ANR	6747855	Identifier	c		6747838	1					
ANR	6747856	Argument	1		6747838	2					
ANR	6747857	PrimaryExpression	1		6747838	0					
ANR	6747858	ReturnStatement	return c ;	223:4:6855:6863	6747838	2	True				
ANR	6747859	Identifier	c		6747838	0					
ANR	6747860	ReturnType	static inline uint16_t		6747838	1					
ANR	6747861	Identifier	get_uint16		6747838	2					
ANR	6747862	ParameterList	context * con		6747838	3					
ANR	6747863	Parameter	context * con	219:34:6790:6801	6747838	0	True				
ANR	6747864	ParameterType	context *		6747838	0					
ANR	6747865	Identifier	con		6747838	1					
ANR	6747866	CFGEntryNode	ENTRY		6747838		True				
ANR	6747867	CFGExitNode	EXIT		6747838		True				
ANR	6747868	Symbol	con		6747838						
ANR	6747869	Symbol	c		6747838						
ANR	6747870	Symbol	& c		6747838						
ANR	6747871	Function	get_uint32	226:0:6868:6977							
ANR	6747872	FunctionDef	get_uint32 (context * con)		6747871	0					
ANR	6747873	CompoundStatement		227:0:6916:6977	6747871	0					
ANR	6747874	IdentifierDeclStatement	uint32_t c ;	228:4:6922:6932	6747871	0	True				
ANR	6747875	IdentifierDecl	c		6747871	0					
ANR	6747876	IdentifierDeclType	uint32_t		6747871	0					
ANR	6747877	Identifier	c		6747871	1					
ANR	6747878	ExpressionStatement	"read_uint32 ( con , & c , 1 )"	229:4:6938:6961	6747871	1	True				
ANR	6747879	CallExpression	"read_uint32 ( con , & c , 1 )"		6747871	0					
ANR	6747880	Callee	read_uint32		6747871	0					
ANR	6747881	Identifier	read_uint32		6747871	0					
ANR	6747882	ArgumentList	con		6747871	1					
ANR	6747883	Argument	con		6747871	0					
ANR	6747884	Identifier	con		6747871	0					
ANR	6747885	Argument	& c		6747871	1					
ANR	6747886	UnaryOperationExpression	& c		6747871	0					
ANR	6747887	UnaryOperator	&		6747871	0					
ANR	6747888	Identifier	c		6747871	1					
ANR	6747889	Argument	1		6747871	2					
ANR	6747890	PrimaryExpression	1		6747871	0					
ANR	6747891	ReturnStatement	return c ;	230:4:6967:6975	6747871	2	True				
ANR	6747892	Identifier	c		6747871	0					
ANR	6747893	ReturnType	static inline uint32_t		6747871	1					
ANR	6747894	Identifier	get_uint32		6747871	2					
ANR	6747895	ParameterList	context * con		6747871	3					
ANR	6747896	Parameter	context * con	226:34:6902:6913	6747871	0	True				
ANR	6747897	ParameterType	context *		6747871	0					
ANR	6747898	Identifier	con		6747871	1					
ANR	6747899	CFGEntryNode	ENTRY		6747871		True				
ANR	6747900	CFGExitNode	EXIT		6747871		True				
ANR	6747901	Symbol	con		6747871						
ANR	6747902	Symbol	c		6747871						
ANR	6747903	Symbol	& c		6747871						
ANR	6747904	Function	seek_file	233:0:6980:7181							
ANR	6747905	FunctionDef	"seek_file (context * con , long offset , int whence)"		6747904	0					
ANR	6747906	CompoundStatement		234:0:7041:7181	6747904	0					
ANR	6747907	IdentifierDeclStatement	"int rc = fseek ( con -> file , offset , whence ) ;"	235:4:7047:7088	6747904	0	True				
ANR	6747908	IdentifierDecl	"rc = fseek ( con -> file , offset , whence )"		6747904	0					
ANR	6747909	IdentifierDeclType	int		6747904	0					
ANR	6747910	Identifier	rc		6747904	1					
ANR	6747911	AssignmentExpression	"rc = fseek ( con -> file , offset , whence )"		6747904	2		=			
ANR	6747912	Identifier	rc		6747904	0					
ANR	6747913	CallExpression	"fseek ( con -> file , offset , whence )"		6747904	1					
ANR	6747914	Callee	fseek		6747904	0					
ANR	6747915	Identifier	fseek		6747904	0					
ANR	6747916	ArgumentList	con -> file		6747904	1					
ANR	6747917	Argument	con -> file		6747904	0					
ANR	6747918	PtrMemberAccess	con -> file		6747904	0					
ANR	6747919	Identifier	con		6747904	0					
ANR	6747920	Identifier	file		6747904	1					
ANR	6747921	Argument	offset		6747904	1					
ANR	6747922	Identifier	offset		6747904	0					
ANR	6747923	Argument	whence		6747904	2					
ANR	6747924	Identifier	whence		6747904	0					
ANR	6747925	IfStatement	if ( rc != 0 )		6747904	1					
ANR	6747926	Condition	rc != 0	236:8:7098:7102	6747904	0	True				
ANR	6747927	EqualityExpression	rc != 0		6747904	0		!=			
ANR	6747928	Identifier	rc		6747904	0					
ANR	6747929	PrimaryExpression	0		6747904	1					
ANR	6747930	ExpressionStatement	"error ( ""cannot seek to desired offset in input file %s"" , con -> name )"	237:8:7113:7179	6747904	1	True				
ANR	6747931	CallExpression	"error ( ""cannot seek to desired offset in input file %s"" , con -> name )"		6747904	0					
ANR	6747932	Callee	error		6747904	0					
ANR	6747933	Identifier	error		6747904	0					
ANR	6747934	ArgumentList	"""cannot seek to desired offset in input file %s"""		6747904	1					
ANR	6747935	Argument	"""cannot seek to desired offset in input file %s"""		6747904	0					
ANR	6747936	PrimaryExpression	"""cannot seek to desired offset in input file %s"""		6747904	0					
ANR	6747937	Argument	con -> name		6747904	1					
ANR	6747938	PtrMemberAccess	con -> name		6747904	0					
ANR	6747939	Identifier	con		6747904	0					
ANR	6747940	Identifier	name		6747904	1					
ANR	6747941	ReturnType	static void		6747904	1					
ANR	6747942	Identifier	seek_file		6747904	2					
ANR	6747943	ParameterList	"context * con , long offset , int whence"		6747904	3					
ANR	6747944	Parameter	context * con	233:22:7002:7013	6747904	0	True				
ANR	6747945	ParameterType	context *		6747904	0					
ANR	6747946	Identifier	con		6747904	1					
ANR	6747947	Parameter	long offset	233:36:7016:7026	6747904	1	True				
ANR	6747948	ParameterType	long		6747904	0					
ANR	6747949	Identifier	offset		6747904	1					
ANR	6747950	Parameter	int whence	233:49:7029:7038	6747904	2	True				
ANR	6747951	ParameterType	int		6747904	0					
ANR	6747952	Identifier	whence		6747904	1					
ANR	6747953	CFGEntryNode	ENTRY		6747904		True				
ANR	6747954	CFGExitNode	EXIT		6747904		True				
ANR	6747955	Symbol	rc		6747904						
ANR	6747956	Symbol	con		6747904						
ANR	6747957	Symbol	con -> file		6747904						
ANR	6747958	Symbol	* con		6747904						
ANR	6747959	Symbol	offset		6747904						
ANR	6747960	Symbol	whence		6747904						
ANR	6747961	Symbol	fseek		6747904						
ANR	6747962	Symbol	con -> name		6747904						
ANR	6747963	Function	write_data	242:0:7216:7428							
ANR	6747964	FunctionDef	"write_data (context * con , const void * buf , int size , int count)"		6747963	0					
ANR	6747965	CompoundStatement		243:0:7291:7428	6747963	0					
ANR	6747966	IdentifierDeclStatement	"size_t rc = fwrite ( buf , size , count , con -> file ) ;"	244:4:7297:7344	6747963	0	True				
ANR	6747967	IdentifierDecl	"rc = fwrite ( buf , size , count , con -> file )"		6747963	0					
ANR	6747968	IdentifierDeclType	size_t		6747963	0					
ANR	6747969	Identifier	rc		6747963	1					
ANR	6747970	AssignmentExpression	"rc = fwrite ( buf , size , count , con -> file )"		6747963	2		=			
ANR	6747971	Identifier	rc		6747963	0					
ANR	6747972	CallExpression	"fwrite ( buf , size , count , con -> file )"		6747963	1					
ANR	6747973	Callee	fwrite		6747963	0					
ANR	6747974	Identifier	fwrite		6747963	0					
ANR	6747975	ArgumentList	buf		6747963	1					
ANR	6747976	Argument	buf		6747963	0					
ANR	6747977	Identifier	buf		6747963	0					
ANR	6747978	Argument	size		6747963	1					
ANR	6747979	Identifier	size		6747963	0					
ANR	6747980	Argument	count		6747963	2					
ANR	6747981	Identifier	count		6747963	0					
ANR	6747982	Argument	con -> file		6747963	3					
ANR	6747983	PtrMemberAccess	con -> file		6747963	0					
ANR	6747984	Identifier	con		6747963	0					
ANR	6747985	Identifier	file		6747963	1					
ANR	6747986	IfStatement	if ( rc != count )		6747963	1					
ANR	6747987	Condition	rc != count	245:8:7354:7362	6747963	0	True				
ANR	6747988	EqualityExpression	rc != count		6747963	0		!=			
ANR	6747989	Identifier	rc		6747963	0					
ANR	6747990	Identifier	count		6747963	1					
ANR	6747991	ExpressionStatement	"error ( ""unable to write to output file %s"" , con -> name )"	246:8:7373:7426	6747963	1	True				
ANR	6747992	CallExpression	"error ( ""unable to write to output file %s"" , con -> name )"		6747963	0					
ANR	6747993	Callee	error		6747963	0					
ANR	6747994	Identifier	error		6747963	0					
ANR	6747995	ArgumentList	"""unable to write to output file %s"""		6747963	1					
ANR	6747996	Argument	"""unable to write to output file %s"""		6747963	0					
ANR	6747997	PrimaryExpression	"""unable to write to output file %s"""		6747963	0					
ANR	6747998	Argument	con -> name		6747963	1					
ANR	6747999	PtrMemberAccess	con -> name		6747963	0					
ANR	6748000	Identifier	con		6747963	0					
ANR	6748001	Identifier	name		6747963	1					
ANR	6748002	ReturnType	static void		6747963	1					
ANR	6748003	Identifier	write_data		6747963	2					
ANR	6748004	ParameterList	"context * con , const void * buf , int size , int count"		6747963	3					
ANR	6748005	Parameter	context * con	242:23:7239:7250	6747963	0	True				
ANR	6748006	ParameterType	context *		6747963	0					
ANR	6748007	Identifier	con		6747963	1					
ANR	6748008	Parameter	const void * buf	242:37:7253:7267	6747963	1	True				
ANR	6748009	ParameterType	const void *		6747963	0					
ANR	6748010	Identifier	buf		6747963	1					
ANR	6748011	Parameter	int size	242:54:7270:7277	6747963	2	True				
ANR	6748012	ParameterType	int		6747963	0					
ANR	6748013	Identifier	size		6747963	1					
ANR	6748014	Parameter	int count	242:64:7280:7288	6747963	3	True				
ANR	6748015	ParameterType	int		6747963	0					
ANR	6748016	Identifier	count		6747963	1					
ANR	6748017	CFGEntryNode	ENTRY		6747963		True				
ANR	6748018	CFGExitNode	EXIT		6747963		True				
ANR	6748019	Symbol	rc		6747963						
ANR	6748020	Symbol	buf		6747963						
ANR	6748021	Symbol	con		6747963						
ANR	6748022	Symbol	con -> file		6747963						
ANR	6748023	Symbol	* con		6747963						
ANR	6748024	Symbol	size		6747963						
ANR	6748025	Symbol	count		6747963						
ANR	6748026	Symbol	fwrite		6747963						
ANR	6748027	Symbol	con -> name		6747963						
ANR	6748028	Function	write_uint8	249:0:7431:7545							
ANR	6748029	FunctionDef	"write_uint8 (context * con , const uint8_t * buf , int count)"		6748028	0					
ANR	6748030	CompoundStatement		250:0:7507:7545	6748028	0					
ANR	6748031	ExpressionStatement	"write_data ( con , buf , 1 , count )"	251:4:7513:7543	6748028	0	True				
ANR	6748032	CallExpression	"write_data ( con , buf , 1 , count )"		6748028	0					
ANR	6748033	Callee	write_data		6748028	0					
ANR	6748034	Identifier	write_data		6748028	0					
ANR	6748035	ArgumentList	con		6748028	1					
ANR	6748036	Argument	con		6748028	0					
ANR	6748037	Identifier	con		6748028	0					
ANR	6748038	Argument	buf		6748028	1					
ANR	6748039	Identifier	buf		6748028	0					
ANR	6748040	Argument	1		6748028	2					
ANR	6748041	PrimaryExpression	1		6748028	0					
ANR	6748042	Argument	count		6748028	3					
ANR	6748043	Identifier	count		6748028	0					
ANR	6748044	ReturnType	static inline void		6748028	1					
ANR	6748045	Identifier	write_uint8		6748028	2					
ANR	6748046	ParameterList	"context * con , const uint8_t * buf , int count"		6748028	3					
ANR	6748047	Parameter	context * con	249:31:7462:7473	6748028	0	True				
ANR	6748048	ParameterType	context *		6748028	0					
ANR	6748049	Identifier	con		6748028	1					
ANR	6748050	Parameter	const uint8_t * buf	249:45:7476:7493	6748028	1	True				
ANR	6748051	ParameterType	const uint8_t *		6748028	0					
ANR	6748052	Identifier	buf		6748028	1					
ANR	6748053	Parameter	int count	249:65:7496:7504	6748028	2	True				
ANR	6748054	ParameterType	int		6748028	0					
ANR	6748055	Identifier	count		6748028	1					
ANR	6748056	CFGEntryNode	ENTRY		6748028		True				
ANR	6748057	CFGExitNode	EXIT		6748028		True				
ANR	6748058	Symbol	buf		6748028						
ANR	6748059	Symbol	con		6748028						
ANR	6748060	Symbol	count		6748028						
ANR	6748061	Function	write_uint16	254:0:7548:7821							
ANR	6748062	FunctionDef	"write_uint16 (context * con , uint16_t * buf , int count)"		6748061	0					
ANR	6748063	CompoundStatement		255:0:7613:7821	6748061	0					
ANR	6748064	IfStatement	if ( con -> swap )		6748061	0					
ANR	6748065	Condition	con -> swap	256:8:7623:7631	6748061	0	True				
ANR	6748066	PtrMemberAccess	con -> swap		6748061	0					
ANR	6748067	Identifier	con		6748061	0					
ANR	6748068	Identifier	swap		6748061	1					
ANR	6748069	CompoundStatement		3:8:50:67	6748061	1					
ANR	6748070	IdentifierDeclStatement	"char * p , * plim , t ;"	257:8:7664:7681	6748061	0	True				
ANR	6748071	IdentifierDecl	* p		6748061	0					
ANR	6748072	IdentifierDeclType	char *		6748061	0					
ANR	6748073	Identifier	p		6748061	1					
ANR	6748074	IdentifierDecl	* plim		6748061	1					
ANR	6748075	IdentifierDeclType	char *		6748061	0					
ANR	6748076	Identifier	plim		6748061	1					
ANR	6748077	IdentifierDecl	t		6748061	2					
ANR	6748078	IdentifierDeclType	char		6748061	0					
ANR	6748079	Identifier	t		6748061	1					
ANR	6748080	ForStatement	"for ( p = ( char * ) buf , plim = p + count * 2 ; p < plim ; p += 2 )"		6748061	1					
ANR	6748081	ForInit	"p = ( char * ) buf , plim = p + count * 2 ;"	258:13:7696:7724	6748061	0	True				
ANR	6748082	Expression	"p = ( char * ) buf , plim = p + count * 2"		6748061	0					
ANR	6748083	AssignmentExpression	p = ( char * ) buf		6748061	0		=			
ANR	6748084	Identifier	p		6748061	0					
ANR	6748085	CastExpression	( char * ) buf		6748061	1					
ANR	6748086	CastTarget	char *		6748061	0					
ANR	6748087	Identifier	buf		6748061	1					
ANR	6748088	AssignmentExpression	plim = p + count * 2		6748061	1		=			
ANR	6748089	Identifier	plim		6748061	0					
ANR	6748090	AdditiveExpression	p + count * 2		6748061	1		+			
ANR	6748091	Identifier	p		6748061	0					
ANR	6748092	MultiplicativeExpression	count * 2		6748061	1		*			
ANR	6748093	Identifier	count		6748061	0					
ANR	6748094	PrimaryExpression	2		6748061	1					
ANR	6748095	Condition	p < plim	258:43:7726:7731	6748061	1	True				
ANR	6748096	RelationalExpression	p < plim		6748061	0		<			
ANR	6748097	Identifier	p		6748061	0					
ANR	6748098	Identifier	plim		6748061	1					
ANR	6748099	AssignmentExpression	p += 2	258:51:7734:7737	6748061	2	True	+=			
ANR	6748100	Identifier	p		6748061	0					
ANR	6748101	PrimaryExpression	2		6748061	1					
ANR	6748102	ExpressionStatement	"t = p [ 0 ] , p [ 0 ] = p [ 1 ] , p [ 1 ] = t"	259:12:7752:7777	6748061	3	True				
ANR	6748103	Expression	"t = p [ 0 ] , p [ 0 ] = p [ 1 ] , p [ 1 ] = t"		6748061	0					
ANR	6748104	AssignmentExpression	t = p [ 0 ]		6748061	0		=			
ANR	6748105	Identifier	t		6748061	0					
ANR	6748106	ArrayIndexing	p [ 0 ]		6748061	1					
ANR	6748107	Identifier	p		6748061	0					
ANR	6748108	PrimaryExpression	0		6748061	1					
ANR	6748109	Expression	"p [ 0 ] = p [ 1 ] , p [ 1 ] = t"		6748061	1					
ANR	6748110	AssignmentExpression	p [ 0 ] = p [ 1 ]		6748061	0		=			
ANR	6748111	ArrayIndexing	p [ 0 ]		6748061	0					
ANR	6748112	Identifier	p		6748061	0					
ANR	6748113	PrimaryExpression	0		6748061	1					
ANR	6748114	ArrayIndexing	p [ 1 ]		6748061	1					
ANR	6748115	Identifier	p		6748061	0					
ANR	6748116	PrimaryExpression	1		6748061	1					
ANR	6748117	AssignmentExpression	p [ 1 ] = t		6748061	1		=			
ANR	6748118	ArrayIndexing	p [ 1 ]		6748061	0					
ANR	6748119	Identifier	p		6748061	0					
ANR	6748120	PrimaryExpression	1		6748061	1					
ANR	6748121	Identifier	t		6748061	1					
ANR	6748122	ExpressionStatement	"write_data ( con , buf , 2 , count )"	261:4:7789:7819	6748061	1	True				
ANR	6748123	CallExpression	"write_data ( con , buf , 2 , count )"		6748061	0					
ANR	6748124	Callee	write_data		6748061	0					
ANR	6748125	Identifier	write_data		6748061	0					
ANR	6748126	ArgumentList	con		6748061	1					
ANR	6748127	Argument	con		6748061	0					
ANR	6748128	Identifier	con		6748061	0					
ANR	6748129	Argument	buf		6748061	1					
ANR	6748130	Identifier	buf		6748061	0					
ANR	6748131	Argument	2		6748061	2					
ANR	6748132	PrimaryExpression	2		6748061	0					
ANR	6748133	Argument	count		6748061	3					
ANR	6748134	Identifier	count		6748061	0					
ANR	6748135	ReturnType	static void		6748061	1					
ANR	6748136	Identifier	write_uint16		6748061	2					
ANR	6748137	ParameterList	"context * con , uint16_t * buf , int count"		6748061	3					
ANR	6748138	Parameter	context * con	254:25:7573:7584	6748061	0	True				
ANR	6748139	ParameterType	context *		6748061	0					
ANR	6748140	Identifier	con		6748061	1					
ANR	6748141	Parameter	uint16_t * buf	254:39:7587:7599	6748061	1	True				
ANR	6748142	ParameterType	uint16_t *		6748061	0					
ANR	6748143	Identifier	buf		6748061	1					
ANR	6748144	Parameter	int count	254:54:7602:7610	6748061	2	True				
ANR	6748145	ParameterType	int		6748061	0					
ANR	6748146	Identifier	count		6748061	1					
ANR	6748147	CFGEntryNode	ENTRY		6748061		True				
ANR	6748148	CFGExitNode	EXIT		6748061		True				
ANR	6748149	Symbol	con -> swap		6748061						
ANR	6748150	Symbol	p		6748061						
ANR	6748151	Symbol	buf		6748061						
ANR	6748152	Symbol	con		6748061						
ANR	6748153	Symbol	* con		6748061						
ANR	6748154	Symbol	plim		6748061						
ANR	6748155	Symbol	t		6748061						
ANR	6748156	Symbol	count		6748061						
ANR	6748157	Symbol	* p		6748061						
ANR	6748158	Function	write_uint32	264:0:7824:8124							
ANR	6748159	FunctionDef	"write_uint32 (context * con , uint32_t * buf , int count)"		6748158	0					
ANR	6748160	CompoundStatement		265:0:7889:8124	6748158	0					
ANR	6748161	IfStatement	if ( con -> swap )		6748158	0					
ANR	6748162	Condition	con -> swap	266:8:7899:7907	6748158	0	True				
ANR	6748163	PtrMemberAccess	con -> swap		6748158	0					
ANR	6748164	Identifier	con		6748158	0					
ANR	6748165	Identifier	swap		6748158	1					
ANR	6748166	CompoundStatement		3:8:50:67	6748158	1					
ANR	6748167	IdentifierDeclStatement	"char * p , * plim , t ;"	267:8:7940:7957	6748158	0	True				
ANR	6748168	IdentifierDecl	* p		6748158	0					
ANR	6748169	IdentifierDeclType	char *		6748158	0					
ANR	6748170	Identifier	p		6748158	1					
ANR	6748171	IdentifierDecl	* plim		6748158	1					
ANR	6748172	IdentifierDeclType	char *		6748158	0					
ANR	6748173	Identifier	plim		6748158	1					
ANR	6748174	IdentifierDecl	t		6748158	2					
ANR	6748175	IdentifierDeclType	char		6748158	0					
ANR	6748176	Identifier	t		6748158	1					
ANR	6748177	ForStatement	"for ( p = ( char * ) buf , plim = p + count * 4 ; p < plim ; p += 4 )"		6748158	1					
ANR	6748178	ForInit	"p = ( char * ) buf , plim = p + count * 4 ;"	268:13:7972:8000	6748158	0	True				
ANR	6748179	Expression	"p = ( char * ) buf , plim = p + count * 4"		6748158	0					
ANR	6748180	AssignmentExpression	p = ( char * ) buf		6748158	0		=			
ANR	6748181	Identifier	p		6748158	0					
ANR	6748182	CastExpression	( char * ) buf		6748158	1					
ANR	6748183	CastTarget	char *		6748158	0					
ANR	6748184	Identifier	buf		6748158	1					
ANR	6748185	AssignmentExpression	plim = p + count * 4		6748158	1		=			
ANR	6748186	Identifier	plim		6748158	0					
ANR	6748187	AdditiveExpression	p + count * 4		6748158	1		+			
ANR	6748188	Identifier	p		6748158	0					
ANR	6748189	MultiplicativeExpression	count * 4		6748158	1		*			
ANR	6748190	Identifier	count		6748158	0					
ANR	6748191	PrimaryExpression	4		6748158	1					
ANR	6748192	Condition	p < plim	268:43:8002:8007	6748158	1	True				
ANR	6748193	RelationalExpression	p < plim		6748158	0		<			
ANR	6748194	Identifier	p		6748158	0					
ANR	6748195	Identifier	plim		6748158	1					
ANR	6748196	AssignmentExpression	p += 4	268:51:8010:8013	6748158	2	True	+=			
ANR	6748197	Identifier	p		6748158	0					
ANR	6748198	PrimaryExpression	4		6748158	1					
ANR	6748199	ExpressionStatement	"t = p [ 0 ] , p [ 0 ] = p [ 3 ] , p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"	269:12:8028:8080	6748158	3	True				
ANR	6748200	Expression	"t = p [ 0 ] , p [ 0 ] = p [ 3 ] , p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		6748158	0					
ANR	6748201	AssignmentExpression	t = p [ 0 ]		6748158	0		=			
ANR	6748202	Identifier	t		6748158	0					
ANR	6748203	ArrayIndexing	p [ 0 ]		6748158	1					
ANR	6748204	Identifier	p		6748158	0					
ANR	6748205	PrimaryExpression	0		6748158	1					
ANR	6748206	Expression	"p [ 0 ] = p [ 3 ] , p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		6748158	1					
ANR	6748207	AssignmentExpression	p [ 0 ] = p [ 3 ]		6748158	0		=			
ANR	6748208	ArrayIndexing	p [ 0 ]		6748158	0					
ANR	6748209	Identifier	p		6748158	0					
ANR	6748210	PrimaryExpression	0		6748158	1					
ANR	6748211	ArrayIndexing	p [ 3 ]		6748158	1					
ANR	6748212	Identifier	p		6748158	0					
ANR	6748213	PrimaryExpression	3		6748158	1					
ANR	6748214	Expression	"p [ 3 ] = t , t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		6748158	1					
ANR	6748215	AssignmentExpression	p [ 3 ] = t		6748158	0		=			
ANR	6748216	ArrayIndexing	p [ 3 ]		6748158	0					
ANR	6748217	Identifier	p		6748158	0					
ANR	6748218	PrimaryExpression	3		6748158	1					
ANR	6748219	Identifier	t		6748158	1					
ANR	6748220	Expression	"t = p [ 1 ] , p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		6748158	1					
ANR	6748221	AssignmentExpression	t = p [ 1 ]		6748158	0		=			
ANR	6748222	Identifier	t		6748158	0					
ANR	6748223	ArrayIndexing	p [ 1 ]		6748158	1					
ANR	6748224	Identifier	p		6748158	0					
ANR	6748225	PrimaryExpression	1		6748158	1					
ANR	6748226	Expression	"p [ 1 ] = p [ 2 ] , p [ 2 ] = t"		6748158	1					
ANR	6748227	AssignmentExpression	p [ 1 ] = p [ 2 ]		6748158	0		=			
ANR	6748228	ArrayIndexing	p [ 1 ]		6748158	0					
ANR	6748229	Identifier	p		6748158	0					
ANR	6748230	PrimaryExpression	1		6748158	1					
ANR	6748231	ArrayIndexing	p [ 2 ]		6748158	1					
ANR	6748232	Identifier	p		6748158	0					
ANR	6748233	PrimaryExpression	2		6748158	1					
ANR	6748234	AssignmentExpression	p [ 2 ] = t		6748158	1		=			
ANR	6748235	ArrayIndexing	p [ 2 ]		6748158	0					
ANR	6748236	Identifier	p		6748158	0					
ANR	6748237	PrimaryExpression	2		6748158	1					
ANR	6748238	Identifier	t		6748158	1					
ANR	6748239	ExpressionStatement	"write_data ( con , buf , 4 , count )"	271:4:8092:8122	6748158	1	True				
ANR	6748240	CallExpression	"write_data ( con , buf , 4 , count )"		6748158	0					
ANR	6748241	Callee	write_data		6748158	0					
ANR	6748242	Identifier	write_data		6748158	0					
ANR	6748243	ArgumentList	con		6748158	1					
ANR	6748244	Argument	con		6748158	0					
ANR	6748245	Identifier	con		6748158	0					
ANR	6748246	Argument	buf		6748158	1					
ANR	6748247	Identifier	buf		6748158	0					
ANR	6748248	Argument	4		6748158	2					
ANR	6748249	PrimaryExpression	4		6748158	0					
ANR	6748250	Argument	count		6748158	3					
ANR	6748251	Identifier	count		6748158	0					
ANR	6748252	ReturnType	static void		6748158	1					
ANR	6748253	Identifier	write_uint32		6748158	2					
ANR	6748254	ParameterList	"context * con , uint32_t * buf , int count"		6748158	3					
ANR	6748255	Parameter	context * con	264:25:7849:7860	6748158	0	True				
ANR	6748256	ParameterType	context *		6748158	0					
ANR	6748257	Identifier	con		6748158	1					
ANR	6748258	Parameter	uint32_t * buf	264:39:7863:7875	6748158	1	True				
ANR	6748259	ParameterType	uint32_t *		6748158	0					
ANR	6748260	Identifier	buf		6748158	1					
ANR	6748261	Parameter	int count	264:54:7878:7886	6748158	2	True				
ANR	6748262	ParameterType	int		6748158	0					
ANR	6748263	Identifier	count		6748158	1					
ANR	6748264	CFGEntryNode	ENTRY		6748158		True				
ANR	6748265	CFGExitNode	EXIT		6748158		True				
ANR	6748266	Symbol	con -> swap		6748158						
ANR	6748267	Symbol	p		6748158						
ANR	6748268	Symbol	buf		6748158						
ANR	6748269	Symbol	con		6748158						
ANR	6748270	Symbol	* con		6748158						
ANR	6748271	Symbol	plim		6748158						
ANR	6748272	Symbol	t		6748158						
ANR	6748273	Symbol	count		6748158						
ANR	6748274	Symbol	* p		6748158						
ANR	6748275	Function	put_uint8	274:0:8127:8226							
ANR	6748276	FunctionDef	"put_uint8 (context * con , const uint8_t value)"		6748275	0					
ANR	6748277	CompoundStatement		275:0:8191:8226	6748275	0					
ANR	6748278	ExpressionStatement	"write_uint8 ( con , & value , 1 )"	276:4:8197:8224	6748275	0	True				
ANR	6748279	CallExpression	"write_uint8 ( con , & value , 1 )"		6748275	0					
ANR	6748280	Callee	write_uint8		6748275	0					
ANR	6748281	Identifier	write_uint8		6748275	0					
ANR	6748282	ArgumentList	con		6748275	1					
ANR	6748283	Argument	con		6748275	0					
ANR	6748284	Identifier	con		6748275	0					
ANR	6748285	Argument	& value		6748275	1					
ANR	6748286	UnaryOperationExpression	& value		6748275	0					
ANR	6748287	UnaryOperator	&		6748275	0					
ANR	6748288	Identifier	value		6748275	1					
ANR	6748289	Argument	1		6748275	2					
ANR	6748290	PrimaryExpression	1		6748275	0					
ANR	6748291	ReturnType	static inline void		6748275	1					
ANR	6748292	Identifier	put_uint8		6748275	2					
ANR	6748293	ParameterList	"context * con , const uint8_t value"		6748275	3					
ANR	6748294	Parameter	context * con	274:29:8156:8167	6748275	0	True				
ANR	6748295	ParameterType	context *		6748275	0					
ANR	6748296	Identifier	con		6748275	1					
ANR	6748297	Parameter	const uint8_t value	274:43:8170:8188	6748275	1	True				
ANR	6748298	ParameterType	const uint8_t		6748275	0					
ANR	6748299	Identifier	value		6748275	1					
ANR	6748300	CFGEntryNode	ENTRY		6748275		True				
ANR	6748301	CFGExitNode	EXIT		6748275		True				
ANR	6748302	Symbol	con		6748275						
ANR	6748303	Symbol	& value		6748275						
ANR	6748304	Symbol	value		6748275						
ANR	6748305	Function	put_uint16	279:0:8229:8355							
ANR	6748306	FunctionDef	"put_uint16 (context * con , const uint16_t value)"		6748305	0					
ANR	6748307	CompoundStatement		280:0:8295:8355	6748305	0					
ANR	6748308	IdentifierDeclStatement	uint16_t buf = value ;	281:4:8301:8321	6748305	0	True				
ANR	6748309	IdentifierDecl	buf = value		6748305	0					
ANR	6748310	IdentifierDeclType	uint16_t		6748305	0					
ANR	6748311	Identifier	buf		6748305	1					
ANR	6748312	AssignmentExpression	buf = value		6748305	2		=			
ANR	6748313	Identifier	value		6748305	0					
ANR	6748314	Identifier	value		6748305	1					
ANR	6748315	ExpressionStatement	"write_uint16 ( con , & buf , 1 )"	282:4:8327:8353	6748305	1	True				
ANR	6748316	CallExpression	"write_uint16 ( con , & buf , 1 )"		6748305	0					
ANR	6748317	Callee	write_uint16		6748305	0					
ANR	6748318	Identifier	write_uint16		6748305	0					
ANR	6748319	ArgumentList	con		6748305	1					
ANR	6748320	Argument	con		6748305	0					
ANR	6748321	Identifier	con		6748305	0					
ANR	6748322	Argument	& buf		6748305	1					
ANR	6748323	UnaryOperationExpression	& buf		6748305	0					
ANR	6748324	UnaryOperator	&		6748305	0					
ANR	6748325	Identifier	buf		6748305	1					
ANR	6748326	Argument	1		6748305	2					
ANR	6748327	PrimaryExpression	1		6748305	0					
ANR	6748328	ReturnType	static inline void		6748305	1					
ANR	6748329	Identifier	put_uint16		6748305	2					
ANR	6748330	ParameterList	"context * con , const uint16_t value"		6748305	3					
ANR	6748331	Parameter	context * con	279:30:8259:8270	6748305	0	True				
ANR	6748332	ParameterType	context *		6748305	0					
ANR	6748333	Identifier	con		6748305	1					
ANR	6748334	Parameter	const uint16_t value	279:44:8273:8292	6748305	1	True				
ANR	6748335	ParameterType	const uint16_t		6748305	0					
ANR	6748336	Identifier	value		6748305	1					
ANR	6748337	CFGEntryNode	ENTRY		6748305		True				
ANR	6748338	CFGExitNode	EXIT		6748305		True				
ANR	6748339	Symbol	buf		6748305						
ANR	6748340	Symbol	con		6748305						
ANR	6748341	Symbol	value		6748305						
ANR	6748342	Symbol	& buf		6748305						
ANR	6748343	Function	put_uint32	285:0:8358:8484							
ANR	6748344	FunctionDef	"put_uint32 (context * con , const uint32_t value)"		6748343	0					
ANR	6748345	CompoundStatement		286:0:8424:8484	6748343	0					
ANR	6748346	IdentifierDeclStatement	uint32_t buf = value ;	287:4:8430:8450	6748343	0	True				
ANR	6748347	IdentifierDecl	buf = value		6748343	0					
ANR	6748348	IdentifierDeclType	uint32_t		6748343	0					
ANR	6748349	Identifier	buf		6748343	1					
ANR	6748350	AssignmentExpression	buf = value		6748343	2		=			
ANR	6748351	Identifier	value		6748343	0					
ANR	6748352	Identifier	value		6748343	1					
ANR	6748353	ExpressionStatement	"write_uint32 ( con , & buf , 1 )"	288:4:8456:8482	6748343	1	True				
ANR	6748354	CallExpression	"write_uint32 ( con , & buf , 1 )"		6748343	0					
ANR	6748355	Callee	write_uint32		6748343	0					
ANR	6748356	Identifier	write_uint32		6748343	0					
ANR	6748357	ArgumentList	con		6748343	1					
ANR	6748358	Argument	con		6748343	0					
ANR	6748359	Identifier	con		6748343	0					
ANR	6748360	Argument	& buf		6748343	1					
ANR	6748361	UnaryOperationExpression	& buf		6748343	0					
ANR	6748362	UnaryOperator	&		6748343	0					
ANR	6748363	Identifier	buf		6748343	1					
ANR	6748364	Argument	1		6748343	2					
ANR	6748365	PrimaryExpression	1		6748343	0					
ANR	6748366	ReturnType	static inline void		6748343	1					
ANR	6748367	Identifier	put_uint32		6748343	2					
ANR	6748368	ParameterList	"context * con , const uint32_t value"		6748343	3					
ANR	6748369	Parameter	context * con	285:30:8388:8399	6748343	0	True				
ANR	6748370	ParameterType	context *		6748343	0					
ANR	6748371	Identifier	con		6748343	1					
ANR	6748372	Parameter	const uint32_t value	285:44:8402:8421	6748343	1	True				
ANR	6748373	ParameterType	const uint32_t		6748343	0					
ANR	6748374	Identifier	value		6748343	1					
ANR	6748375	CFGEntryNode	ENTRY		6748343		True				
ANR	6748376	CFGExitNode	EXIT		6748343		True				
ANR	6748377	Symbol	buf		6748343						
ANR	6748378	Symbol	con		6748343						
ANR	6748379	Symbol	value		6748343						
ANR	6748380	Symbol	& buf		6748343						
ANR	6748381	Function	read_pnm_number	293:0:8522:9100							
ANR	6748382	FunctionDef	read_pnm_number (context * con)		6748381	0					
ANR	6748383	CompoundStatement		294:0:8568:9100	6748381	0					
ANR	6748384	IdentifierDeclStatement	int c ;	295:4:8574:8579	6748381	0	True				
ANR	6748385	IdentifierDecl	c		6748381	0					
ANR	6748386	IdentifierDeclType	int		6748381	0					
ANR	6748387	Identifier	c		6748381	1					
ANR	6748388	IdentifierDeclStatement	unsigned n = 0 ;	296:4:8585:8597	6748381	1	True				
ANR	6748389	IdentifierDecl	n = 0		6748381	0					
ANR	6748390	IdentifierDeclType	unsigned		6748381	0					
ANR	6748391	Identifier	n		6748381	1					
ANR	6748392	AssignmentExpression	n = 0		6748381	2		=			
ANR	6748393	Identifier	n		6748381	0					
ANR	6748394	PrimaryExpression	0		6748381	1					
ANR	6748395	WhileStatement	while ( 1 )		6748381	2					
ANR	6748396	Condition	1	298:11:8611:8611	6748381	0	True				
ANR	6748397	PrimaryExpression	1		6748381	0					
ANR	6748398	CompoundStatement		5:14:45:45	6748381	1					
ANR	6748399	ExpressionStatement	c = get_uint8 ( con )	299:8:8624:8642	6748381	0	True				
ANR	6748400	AssignmentExpression	c = get_uint8 ( con )		6748381	0		=			
ANR	6748401	Identifier	c		6748381	0					
ANR	6748402	CallExpression	get_uint8 ( con )		6748381	1					
ANR	6748403	Callee	get_uint8		6748381	0					
ANR	6748404	Identifier	get_uint8		6748381	0					
ANR	6748405	ArgumentList	con		6748381	1					
ANR	6748406	Argument	con		6748381	0					
ANR	6748407	Identifier	con		6748381	0					
ANR	6748408	IfStatement	if ( c == '#' )		6748381	1					
ANR	6748409	Condition	c == '#'	300:12:8656:8661	6748381	0	True				
ANR	6748410	EqualityExpression	c == '#'		6748381	0		==			
ANR	6748411	Identifier	c		6748381	0					
ANR	6748412	PrimaryExpression	'#'		6748381	1					
ANR	6748413	WhileStatement	while ( get_uint8 ( con ) != '\\n' )		6748381	1					
ANR	6748414	Condition	get_uint8 ( con ) != '\\n'	301:19:8683:8702	6748381	0	True				
ANR	6748415	EqualityExpression	get_uint8 ( con ) != '\\n'		6748381	0		!=			
ANR	6748416	CallExpression	get_uint8 ( con )		6748381	0					
ANR	6748417	Callee	get_uint8		6748381	0					
ANR	6748418	Identifier	get_uint8		6748381	0					
ANR	6748419	ArgumentList	con		6748381	1					
ANR	6748420	Argument	con		6748381	0					
ANR	6748421	Identifier	con		6748381	0					
ANR	6748422	PrimaryExpression	'\\n'		6748381	1					
ANR	6748423	ExpressionStatement		301:40:8704:8704	6748381	1	True				
ANR	6748424	ElseStatement	else		6748381	0					
ANR	6748425	IfStatement	if ( isdigit ( c ) )		6748381	0					
ANR	6748426	Condition	isdigit ( c )	302:17:8723:8732	6748381	0	True				
ANR	6748427	CallExpression	isdigit ( c )		6748381	0					
ANR	6748428	Callee	isdigit		6748381	0					
ANR	6748429	Identifier	isdigit		6748381	0					
ANR	6748430	ArgumentList	c		6748381	1					
ANR	6748431	Argument	c		6748381	0					
ANR	6748432	Identifier	c		6748381	0					
ANR	6748433	BreakStatement	break ;	302:29:8735:8740	6748381	1	True				
ANR	6748434	ElseStatement	else		6748381	0					
ANR	6748435	IfStatement	if ( ! isspace ( c ) )		6748381	0					
ANR	6748436	Condition	! isspace ( c )	303:17:8759:8769	6748381	0	True				
ANR	6748437	UnaryOperationExpression	! isspace ( c )		6748381	0					
ANR	6748438	UnaryOperator	!		6748381	0					
ANR	6748439	CallExpression	isspace ( c )		6748381	1					
ANR	6748440	Callee	isspace		6748381	0					
ANR	6748441	Identifier	isspace		6748381	0					
ANR	6748442	ArgumentList	c		6748381	1					
ANR	6748443	Argument	c		6748381	0					
ANR	6748444	Identifier	c		6748381	0					
ANR	6748445	ExpressionStatement	"error ( ""unexpected character 0x%02x (%c) found in PNM file %s"" , c , c , con -> name )"	304:12:8784:8863	6748381	1	True				
ANR	6748446	CallExpression	"error ( ""unexpected character 0x%02x (%c) found in PNM file %s"" , c , c , con -> name )"		6748381	0					
ANR	6748447	Callee	error		6748381	0					
ANR	6748448	Identifier	error		6748381	0					
ANR	6748449	ArgumentList	"""unexpected character 0x%02x (%c) found in PNM file %s"""		6748381	1					
ANR	6748450	Argument	"""unexpected character 0x%02x (%c) found in PNM file %s"""		6748381	0					
ANR	6748451	PrimaryExpression	"""unexpected character 0x%02x (%c) found in PNM file %s"""		6748381	0					
ANR	6748452	Argument	c		6748381	1					
ANR	6748453	Identifier	c		6748381	0					
ANR	6748454	Argument	c		6748381	2					
ANR	6748455	Identifier	c		6748381	0					
ANR	6748456	Argument	con -> name		6748381	3					
ANR	6748457	PtrMemberAccess	con -> name		6748381	0					
ANR	6748458	Identifier	con		6748381	0					
ANR	6748459	Identifier	name		6748381	1					
ANR	6748460	DoStatement	do		6748381	3					
ANR	6748461	CompoundStatement		13:7:309:309	6748381	0					
ANR	6748462	ExpressionStatement	n = 10 * n + c - '0'	307:8:8888:8902	6748381	0	True				
ANR	6748463	AssignmentExpression	n = 10 * n + c - '0'		6748381	0		=			
ANR	6748464	Identifier	n		6748381	0					
ANR	6748465	AdditiveExpression	10 * n + c - '0'		6748381	1		+			
ANR	6748466	MultiplicativeExpression	10 * n		6748381	0		*			
ANR	6748467	PrimaryExpression	10		6748381	0					
ANR	6748468	Identifier	n		6748381	1					
ANR	6748469	AdditiveExpression	c - '0'		6748381	1		-			
ANR	6748470	Identifier	c		6748381	0					
ANR	6748471	PrimaryExpression	'0'		6748381	1					
ANR	6748472	ExpressionStatement	c = get_uint8 ( con )	308:8:8912:8930	6748381	1	True				
ANR	6748473	AssignmentExpression	c = get_uint8 ( con )		6748381	0		=			
ANR	6748474	Identifier	c		6748381	0					
ANR	6748475	CallExpression	get_uint8 ( con )		6748381	1					
ANR	6748476	Callee	get_uint8		6748381	0					
ANR	6748477	Identifier	get_uint8		6748381	0					
ANR	6748478	ArgumentList	con		6748381	1					
ANR	6748479	Argument	con		6748381	0					
ANR	6748480	Identifier	con		6748381	0					
ANR	6748481	Condition	isdigit ( c )	310:11:8949:8958	6748381	1	True				
ANR	6748482	CallExpression	isdigit ( c )		6748381	0					
ANR	6748483	Callee	isdigit		6748381	0					
ANR	6748484	Identifier	isdigit		6748381	0					
ANR	6748485	ArgumentList	c		6748381	1					
ANR	6748486	Argument	c		6748381	0					
ANR	6748487	Identifier	c		6748381	0					
ANR	6748488	IfStatement	if ( ! isspace ( c ) )		6748381	4					
ANR	6748489	Condition	! isspace ( c )	311:8:8970:8980	6748381	0	True				
ANR	6748490	UnaryOperationExpression	! isspace ( c )		6748381	0					
ANR	6748491	UnaryOperator	!		6748381	0					
ANR	6748492	CallExpression	isspace ( c )		6748381	1					
ANR	6748493	Callee	isspace		6748381	0					
ANR	6748494	Identifier	isspace		6748381	0					
ANR	6748495	ArgumentList	c		6748381	1					
ANR	6748496	Argument	c		6748381	0					
ANR	6748497	Identifier	c		6748381	0					
ANR	6748498	ExpressionStatement	"error ( ""unexpected character 0x%02x (%c) following max value in PNM file %s"" , c , c , con -> name )"	312:8:8991:9084	6748381	1	True				
ANR	6748499	CallExpression	"error ( ""unexpected character 0x%02x (%c) following max value in PNM file %s"" , c , c , con -> name )"		6748381	0					
ANR	6748500	Callee	error		6748381	0					
ANR	6748501	Identifier	error		6748381	0					
ANR	6748502	ArgumentList	"""unexpected character 0x%02x (%c) following max value in PNM file %s"""		6748381	1					
ANR	6748503	Argument	"""unexpected character 0x%02x (%c) following max value in PNM file %s"""		6748381	0					
ANR	6748504	PrimaryExpression	"""unexpected character 0x%02x (%c) following max value in PNM file %s"""		6748381	0					
ANR	6748505	Argument	c		6748381	1					
ANR	6748506	Identifier	c		6748381	0					
ANR	6748507	Argument	c		6748381	2					
ANR	6748508	Identifier	c		6748381	0					
ANR	6748509	Argument	con -> name		6748381	3					
ANR	6748510	PtrMemberAccess	con -> name		6748381	0					
ANR	6748511	Identifier	con		6748381	0					
ANR	6748512	Identifier	name		6748381	1					
ANR	6748513	ReturnStatement	return n ;	313:4:9090:9098	6748381	5	True				
ANR	6748514	Identifier	n		6748381	0					
ANR	6748515	ReturnType	static unsigned		6748381	1					
ANR	6748516	Identifier	read_pnm_number		6748381	2					
ANR	6748517	ParameterList	context * con		6748381	3					
ANR	6748518	Parameter	context * con	293:32:8554:8565	6748381	0	True				
ANR	6748519	ParameterType	context *		6748381	0					
ANR	6748520	Identifier	con		6748381	1					
ANR	6748521	CFGEntryNode	ENTRY		6748381		True				
ANR	6748522	CFGExitNode	EXIT		6748381		True				
ANR	6748523	Symbol	con		6748381						
ANR	6748524	Symbol	c		6748381						
ANR	6748525	Symbol	* con		6748381						
ANR	6748526	Symbol	get_uint8		6748381						
ANR	6748527	Symbol	isspace		6748381						
ANR	6748528	Symbol	isdigit		6748381						
ANR	6748529	Symbol	con -> name		6748381						
ANR	6748530	Symbol	n		6748381						
ANR	6748531	Function	open_pnm_input_file	316:0:9103:10267							
ANR	6748532	FunctionDef	open_pnm_input_file (context * con)		6748531	0					
ANR	6748533	CompoundStatement		317:0:9149:10267	6748531	0					
ANR	6748534	IdentifierDeclStatement	"int c , max , one = 1 ;"	318:4:9155:9172	6748531	0	True				
ANR	6748535	IdentifierDecl	c		6748531	0					
ANR	6748536	IdentifierDeclType	int		6748531	0					
ANR	6748537	Identifier	c		6748531	1					
ANR	6748538	IdentifierDecl	max		6748531	1					
ANR	6748539	IdentifierDeclType	int		6748531	0					
ANR	6748540	Identifier	max		6748531	1					
ANR	6748541	IdentifierDecl	one = 1		6748531	2					
ANR	6748542	IdentifierDeclType	int		6748531	0					
ANR	6748543	Identifier	one		6748531	1					
ANR	6748544	AssignmentExpression	one = 1		6748531	2		=			
ANR	6748545	Identifier	one		6748531	0					
ANR	6748546	PrimaryExpression	1		6748531	1					
ANR	6748547	ExpressionStatement	rewind ( con -> file )	320:4:9179:9196	6748531	1	True				
ANR	6748548	CallExpression	rewind ( con -> file )		6748531	0					
ANR	6748549	Callee	rewind		6748531	0					
ANR	6748550	Identifier	rewind		6748531	0					
ANR	6748551	ArgumentList	con -> file		6748531	1					
ANR	6748552	Argument	con -> file		6748531	0					
ANR	6748553	PtrMemberAccess	con -> file		6748531	0					
ANR	6748554	Identifier	con		6748531	0					
ANR	6748555	Identifier	file		6748531	1					
ANR	6748556	ExpressionStatement	c = get_uint8 ( con )	321:4:9202:9218	6748531	2	True				
ANR	6748557	AssignmentExpression	c = get_uint8 ( con )		6748531	0		=			
ANR	6748558	Identifier	c		6748531	0					
ANR	6748559	CallExpression	get_uint8 ( con )		6748531	1					
ANR	6748560	Callee	get_uint8		6748531	0					
ANR	6748561	Identifier	get_uint8		6748531	0					
ANR	6748562	ArgumentList	con		6748531	1					
ANR	6748563	Argument	con		6748531	0					
ANR	6748564	Identifier	con		6748531	0					
ANR	6748565	IfStatement	if ( c != 'P' )		6748531	3					
ANR	6748566	Condition	c != 'P'	322:8:9228:9233	6748531	0	True				
ANR	6748567	EqualityExpression	c != 'P'		6748531	0		!=			
ANR	6748568	Identifier	c		6748531	0					
ANR	6748569	PrimaryExpression	'P'		6748531	1					
ANR	6748570	ExpressionStatement	"error ( ""unexpected character 0x%02x (%c) at start of PNM file %s"" , c , c , con -> name )"	323:8:9244:9326	6748531	1	True				
ANR	6748571	CallExpression	"error ( ""unexpected character 0x%02x (%c) at start of PNM file %s"" , c , c , con -> name )"		6748531	0					
ANR	6748572	Callee	error		6748531	0					
ANR	6748573	Identifier	error		6748531	0					
ANR	6748574	ArgumentList	"""unexpected character 0x%02x (%c) at start of PNM file %s"""		6748531	1					
ANR	6748575	Argument	"""unexpected character 0x%02x (%c) at start of PNM file %s"""		6748531	0					
ANR	6748576	PrimaryExpression	"""unexpected character 0x%02x (%c) at start of PNM file %s"""		6748531	0					
ANR	6748577	Argument	c		6748531	1					
ANR	6748578	Identifier	c		6748531	0					
ANR	6748579	Argument	c		6748531	2					
ANR	6748580	Identifier	c		6748531	0					
ANR	6748581	Argument	con -> name		6748531	3					
ANR	6748582	PtrMemberAccess	con -> name		6748531	0					
ANR	6748583	Identifier	con		6748531	0					
ANR	6748584	Identifier	name		6748531	1					
ANR	6748585	SwitchStatement	switch ( c = get_uint8 ( con ) )		6748531	4					
ANR	6748586	Condition	c = get_uint8 ( con )	324:12:9340:9355	6748531	0	True				
ANR	6748587	AssignmentExpression	c = get_uint8 ( con )		6748531	0		=			
ANR	6748588	Identifier	c		6748531	0					
ANR	6748589	CallExpression	get_uint8 ( con )		6748531	1					
ANR	6748590	Callee	get_uint8		6748531	0					
ANR	6748591	Identifier	get_uint8		6748531	0					
ANR	6748592	ArgumentList	con		6748531	1					
ANR	6748593	Argument	con		6748531	0					
ANR	6748594	Identifier	con		6748531	0					
ANR	6748595	CompoundStatement		8:30:208:208	6748531	1					
ANR	6748596	Label	case '1' :	325:8:9368:9377	6748531	0	True				
ANR	6748597	Label	case '2' :	326:8:9387:9396	6748531	1	True				
ANR	6748598	Label	case '3' :	327:8:9406:9415	6748531	2	True				
ANR	6748599	Label	case '4' :	328:8:9425:9434	6748531	3	True				
ANR	6748600	ExpressionStatement	"error ( ""unsupported PNM file type P%c in PNM file %s"" , c , con -> name )"	328:19:9436:9503	6748531	4	True				
ANR	6748601	CallExpression	"error ( ""unsupported PNM file type P%c in PNM file %s"" , c , con -> name )"		6748531	0					
ANR	6748602	Callee	error		6748531	0					
ANR	6748603	Identifier	error		6748531	0					
ANR	6748604	ArgumentList	"""unsupported PNM file type P%c in PNM file %s"""		6748531	1					
ANR	6748605	Argument	"""unsupported PNM file type P%c in PNM file %s"""		6748531	0					
ANR	6748606	PrimaryExpression	"""unsupported PNM file type P%c in PNM file %s"""		6748531	0					
ANR	6748607	Argument	c		6748531	1					
ANR	6748608	Identifier	c		6748531	0					
ANR	6748609	Argument	con -> name		6748531	2					
ANR	6748610	PtrMemberAccess	con -> name		6748531	0					
ANR	6748611	Identifier	con		6748531	0					
ANR	6748612	Identifier	name		6748531	1					
ANR	6748613	Label	case '5' :	329:8:9513:9522	6748531	5	True				
ANR	6748614	ExpressionStatement	con -> ncomp = 1	329:19:9524:9538	6748531	6	True				
ANR	6748615	AssignmentExpression	con -> ncomp = 1		6748531	0		=			
ANR	6748616	PtrMemberAccess	con -> ncomp		6748531	0					
ANR	6748617	Identifier	con		6748531	0					
ANR	6748618	Identifier	ncomp		6748531	1					
ANR	6748619	PrimaryExpression	1		6748531	1					
ANR	6748620	BreakStatement	break ;	329:35:9540:9545	6748531	7	True				
ANR	6748621	Label	case '6' :	330:8:9555:9564	6748531	8	True				
ANR	6748622	ExpressionStatement	con -> ncomp = 3	330:19:9566:9580	6748531	9	True				
ANR	6748623	AssignmentExpression	con -> ncomp = 3		6748531	0		=			
ANR	6748624	PtrMemberAccess	con -> ncomp		6748531	0					
ANR	6748625	Identifier	con		6748531	0					
ANR	6748626	Identifier	ncomp		6748531	1					
ANR	6748627	PrimaryExpression	3		6748531	1					
ANR	6748628	BreakStatement	break ;	330:35:9582:9587	6748531	10	True				
ANR	6748629	Label	default :	331:8:9597:9605	6748531	11	True				
ANR	6748630	Identifier	default		6748531	0					
ANR	6748631	ExpressionStatement	"error ( ""unexpected character 0x%02x (%c) following 'P' in PNM file %s"" , c , c , con -> name )"	331:18:9607:9694	6748531	12	True				
ANR	6748632	CallExpression	"error ( ""unexpected character 0x%02x (%c) following 'P' in PNM file %s"" , c , c , con -> name )"		6748531	0					
ANR	6748633	Callee	error		6748531	0					
ANR	6748634	Identifier	error		6748531	0					
ANR	6748635	ArgumentList	"""unexpected character 0x%02x (%c) following 'P' in PNM file %s"""		6748531	1					
ANR	6748636	Argument	"""unexpected character 0x%02x (%c) following 'P' in PNM file %s"""		6748531	0					
ANR	6748637	PrimaryExpression	"""unexpected character 0x%02x (%c) following 'P' in PNM file %s"""		6748531	0					
ANR	6748638	Argument	c		6748531	1					
ANR	6748639	Identifier	c		6748531	0					
ANR	6748640	Argument	c		6748531	2					
ANR	6748641	Identifier	c		6748531	0					
ANR	6748642	Argument	con -> name		6748531	3					
ANR	6748643	PtrMemberAccess	con -> name		6748531	0					
ANR	6748644	Identifier	con		6748531	0					
ANR	6748645	Identifier	name		6748531	1					
ANR	6748646	ExpressionStatement	con -> wid = read_pnm_number ( con )	334:4:9707:9738	6748531	5	True				
ANR	6748647	AssignmentExpression	con -> wid = read_pnm_number ( con )		6748531	0		=			
ANR	6748648	PtrMemberAccess	con -> wid		6748531	0					
ANR	6748649	Identifier	con		6748531	0					
ANR	6748650	Identifier	wid		6748531	1					
ANR	6748651	CallExpression	read_pnm_number ( con )		6748531	1					
ANR	6748652	Callee	read_pnm_number		6748531	0					
ANR	6748653	Identifier	read_pnm_number		6748531	0					
ANR	6748654	ArgumentList	con		6748531	1					
ANR	6748655	Argument	con		6748531	0					
ANR	6748656	Identifier	con		6748531	0					
ANR	6748657	IfStatement	if ( con -> wid <= 0 )		6748531	6					
ANR	6748658	Condition	con -> wid <= 0	335:8:9748:9758	6748531	0	True				
ANR	6748659	RelationalExpression	con -> wid <= 0		6748531	0		<=			
ANR	6748660	PtrMemberAccess	con -> wid		6748531	0					
ANR	6748661	Identifier	con		6748531	0					
ANR	6748662	Identifier	wid		6748531	1					
ANR	6748663	PrimaryExpression	0		6748531	1					
ANR	6748664	ExpressionStatement	"error ( ""invalid image width %d in PNM file %s"" , con -> wid , con -> name )"	336:8:9769:9835	6748531	1	True				
ANR	6748665	CallExpression	"error ( ""invalid image width %d in PNM file %s"" , con -> wid , con -> name )"		6748531	0					
ANR	6748666	Callee	error		6748531	0					
ANR	6748667	Identifier	error		6748531	0					
ANR	6748668	ArgumentList	"""invalid image width %d in PNM file %s"""		6748531	1					
ANR	6748669	Argument	"""invalid image width %d in PNM file %s"""		6748531	0					
ANR	6748670	PrimaryExpression	"""invalid image width %d in PNM file %s"""		6748531	0					
ANR	6748671	Argument	con -> wid		6748531	1					
ANR	6748672	PtrMemberAccess	con -> wid		6748531	0					
ANR	6748673	Identifier	con		6748531	0					
ANR	6748674	Identifier	wid		6748531	1					
ANR	6748675	Argument	con -> name		6748531	2					
ANR	6748676	PtrMemberAccess	con -> name		6748531	0					
ANR	6748677	Identifier	con		6748531	0					
ANR	6748678	Identifier	name		6748531	1					
ANR	6748679	ExpressionStatement	con -> hei = read_pnm_number ( con )	337:4:9841:9872	6748531	7	True				
ANR	6748680	AssignmentExpression	con -> hei = read_pnm_number ( con )		6748531	0		=			
ANR	6748681	PtrMemberAccess	con -> hei		6748531	0					
ANR	6748682	Identifier	con		6748531	0					
ANR	6748683	Identifier	hei		6748531	1					
ANR	6748684	CallExpression	read_pnm_number ( con )		6748531	1					
ANR	6748685	Callee	read_pnm_number		6748531	0					
ANR	6748686	Identifier	read_pnm_number		6748531	0					
ANR	6748687	ArgumentList	con		6748531	1					
ANR	6748688	Argument	con		6748531	0					
ANR	6748689	Identifier	con		6748531	0					
ANR	6748690	IfStatement	if ( con -> hei <= 0 )		6748531	8					
ANR	6748691	Condition	con -> hei <= 0	338:8:9882:9892	6748531	0	True				
ANR	6748692	RelationalExpression	con -> hei <= 0		6748531	0		<=			
ANR	6748693	PtrMemberAccess	con -> hei		6748531	0					
ANR	6748694	Identifier	con		6748531	0					
ANR	6748695	Identifier	hei		6748531	1					
ANR	6748696	PrimaryExpression	0		6748531	1					
ANR	6748697	ExpressionStatement	"error ( ""invalid image height %d in PNM file %s"" , con -> hei , con -> name )"	339:8:9903:9971	6748531	1	True				
ANR	6748698	CallExpression	"error ( ""invalid image height %d in PNM file %s"" , con -> hei , con -> name )"		6748531	0					
ANR	6748699	Callee	error		6748531	0					
ANR	6748700	Identifier	error		6748531	0					
ANR	6748701	ArgumentList	"""invalid image height %d in PNM file %s"""		6748531	1					
ANR	6748702	Argument	"""invalid image height %d in PNM file %s"""		6748531	0					
ANR	6748703	PrimaryExpression	"""invalid image height %d in PNM file %s"""		6748531	0					
ANR	6748704	Argument	con -> hei		6748531	1					
ANR	6748705	PtrMemberAccess	con -> hei		6748531	0					
ANR	6748706	Identifier	con		6748531	0					
ANR	6748707	Identifier	hei		6748531	1					
ANR	6748708	Argument	con -> name		6748531	2					
ANR	6748709	PtrMemberAccess	con -> name		6748531	0					
ANR	6748710	Identifier	con		6748531	0					
ANR	6748711	Identifier	name		6748531	1					
ANR	6748712	ExpressionStatement	max = read_pnm_number ( con )	340:4:9977:10001	6748531	9	True				
ANR	6748713	AssignmentExpression	max = read_pnm_number ( con )		6748531	0		=			
ANR	6748714	Identifier	max		6748531	0					
ANR	6748715	CallExpression	read_pnm_number ( con )		6748531	1					
ANR	6748716	Callee	read_pnm_number		6748531	0					
ANR	6748717	Identifier	read_pnm_number		6748531	0					
ANR	6748718	ArgumentList	con		6748531	1					
ANR	6748719	Argument	con		6748531	0					
ANR	6748720	Identifier	con		6748531	0					
ANR	6748721	IfStatement	if ( max >= 0x10000 )		6748531	10					
ANR	6748722	Condition	max >= 0x10000	341:8:10011:10022	6748531	0	True				
ANR	6748723	RelationalExpression	max >= 0x10000		6748531	0		>=			
ANR	6748724	Identifier	max		6748531	0					
ANR	6748725	PrimaryExpression	0x10000		6748531	1					
ANR	6748726	ExpressionStatement	"error ( ""invalid maximum value 0x%02x (%d) in PNM file %s"" , max , max , con -> name )"	342:8:10033:10111	6748531	1	True				
ANR	6748727	CallExpression	"error ( ""invalid maximum value 0x%02x (%d) in PNM file %s"" , max , max , con -> name )"		6748531	0					
ANR	6748728	Callee	error		6748531	0					
ANR	6748729	Identifier	error		6748531	0					
ANR	6748730	ArgumentList	"""invalid maximum value 0x%02x (%d) in PNM file %s"""		6748531	1					
ANR	6748731	Argument	"""invalid maximum value 0x%02x (%d) in PNM file %s"""		6748531	0					
ANR	6748732	PrimaryExpression	"""invalid maximum value 0x%02x (%d) in PNM file %s"""		6748531	0					
ANR	6748733	Argument	max		6748531	1					
ANR	6748734	Identifier	max		6748531	0					
ANR	6748735	Argument	max		6748531	2					
ANR	6748736	Identifier	max		6748531	0					
ANR	6748737	Argument	con -> name		6748531	3					
ANR	6748738	PtrMemberAccess	con -> name		6748531	0					
ANR	6748739	Identifier	con		6748531	0					
ANR	6748740	Identifier	name		6748531	1					
ANR	6748741	IfStatement	if ( max < 0x100 )		6748531	11					
ANR	6748742	Condition	max < 0x100	343:8:10121:10129	6748531	0	True				
ANR	6748743	RelationalExpression	max < 0x100		6748531	0		<			
ANR	6748744	Identifier	max		6748531	0					
ANR	6748745	PrimaryExpression	0x100		6748531	1					
ANR	6748746	ExpressionStatement	con -> swap = 0	343:19:10132:10145	6748531	1	True				
ANR	6748747	AssignmentExpression	con -> swap = 0		6748531	0		=			
ANR	6748748	PtrMemberAccess	con -> swap		6748531	0					
ANR	6748749	Identifier	con		6748531	0					
ANR	6748750	Identifier	swap		6748531	1					
ANR	6748751	PrimaryExpression	0		6748531	1					
ANR	6748752	ElseStatement	else		6748531	0					
ANR	6748753	ExpressionStatement	con -> swap = * ( char * ) & one == 1	344:9:10156:10183	6748531	0	True				
ANR	6748754	AssignmentExpression	con -> swap = * ( char * ) & one == 1		6748531	0		=			
ANR	6748755	PtrMemberAccess	con -> swap		6748531	0					
ANR	6748756	Identifier	con		6748531	0					
ANR	6748757	Identifier	swap		6748531	1					
ANR	6748758	EqualityExpression	* ( char * ) & one == 1		6748531	1		==			
ANR	6748759	UnaryOperationExpression	* ( char * ) & one		6748531	0					
ANR	6748760	UnaryOperator	*		6748531	0					
ANR	6748761	CastExpression	( char * ) & one		6748531	1					
ANR	6748762	CastTarget	char *		6748531	0					
ANR	6748763	UnaryOperationExpression	& one		6748531	1					
ANR	6748764	UnaryOperator	&		6748531	0					
ANR	6748765	Identifier	one		6748531	1					
ANR	6748766	PrimaryExpression	1		6748531	1					
ANR	6748767	ForStatement	for ( con -> bpi = 1 ; max > ( 1 << con -> bpi ) ; con -> bpi ++ )		6748531	12					
ANR	6748768	ForInit	con -> bpi = 1 ;	345:9:10194:10204	6748531	0	True				
ANR	6748769	AssignmentExpression	con -> bpi = 1		6748531	0		=			
ANR	6748770	PtrMemberAccess	con -> bpi		6748531	0					
ANR	6748771	Identifier	con		6748531	0					
ANR	6748772	Identifier	bpi		6748531	1					
ANR	6748773	PrimaryExpression	1		6748531	1					
ANR	6748774	Condition	max > ( 1 << con -> bpi )	345:21:10206:10222	6748531	1	True				
ANR	6748775	RelationalExpression	max > ( 1 << con -> bpi )		6748531	0		>			
ANR	6748776	Identifier	max		6748531	0					
ANR	6748777	ShiftExpression	1 << con -> bpi		6748531	1		<<			
ANR	6748778	PrimaryExpression	1		6748531	0					
ANR	6748779	PtrMemberAccess	con -> bpi		6748531	1					
ANR	6748780	Identifier	con		6748531	0					
ANR	6748781	Identifier	bpi		6748531	1					
ANR	6748782	PostIncDecOperationExpression	con -> bpi ++	345:40:10225:10234	6748531	2	True				
ANR	6748783	PtrMemberAccess	con -> bpi		6748531	0					
ANR	6748784	Identifier	con		6748531	0					
ANR	6748785	Identifier	bpi		6748531	1					
ANR	6748786	IncDec	++		6748531	1					
ANR	6748787	ExpressionStatement		345:51:10236:10236	6748531	3	True				
ANR	6748788	ExpressionStatement	con -> nlines = con -> hei	347:4:10243:10265	6748531	13	True				
ANR	6748789	AssignmentExpression	con -> nlines = con -> hei		6748531	0		=			
ANR	6748790	PtrMemberAccess	con -> nlines		6748531	0					
ANR	6748791	Identifier	con		6748531	0					
ANR	6748792	Identifier	nlines		6748531	1					
ANR	6748793	PtrMemberAccess	con -> hei		6748531	1					
ANR	6748794	Identifier	con		6748531	0					
ANR	6748795	Identifier	hei		6748531	1					
ANR	6748796	ReturnType	static void		6748531	1					
ANR	6748797	Identifier	open_pnm_input_file		6748531	2					
ANR	6748798	ParameterList	context * con		6748531	3					
ANR	6748799	Parameter	context * con	316:32:9135:9146	6748531	0	True				
ANR	6748800	ParameterType	context *		6748531	0					
ANR	6748801	Identifier	con		6748531	1					
ANR	6748802	CFGEntryNode	ENTRY		6748531		True				
ANR	6748803	CFGExitNode	EXIT		6748531		True				
ANR	6748804	Symbol	con		6748531						
ANR	6748805	Symbol	c		6748531						
ANR	6748806	Symbol	con -> file		6748531						
ANR	6748807	Symbol	con -> ncomp		6748531						
ANR	6748808	Symbol	con -> hei		6748531						
ANR	6748809	Symbol	max		6748531						
ANR	6748810	Symbol	get_uint8		6748531						
ANR	6748811	Symbol	one		6748531						
ANR	6748812	Symbol	& one		6748531						
ANR	6748813	Symbol	con -> name		6748531						
ANR	6748814	Symbol	con -> swap		6748531						
ANR	6748815	Symbol	read_pnm_number		6748531						
ANR	6748816	Symbol	* con		6748531						
ANR	6748817	Symbol	con -> bpi		6748531						
ANR	6748818	Symbol	con -> nlines		6748531						
ANR	6748819	Symbol	* ( char * ) & one		6748531						
ANR	6748820	Symbol	con -> wid		6748531						
ANR	6748821	Function	start_pnm_output_file	350:0:10270:10653							
ANR	6748822	FunctionDef	start_pnm_output_file (context * con)		6748821	0					
ANR	6748823	CompoundStatement		351:0:10318:10653	6748821	0					
ANR	6748824	IdentifierDeclStatement	"int max , one = 1 ;"	352:4:10324:10338	6748821	0	True				
ANR	6748825	IdentifierDecl	max		6748821	0					
ANR	6748826	IdentifierDeclType	int		6748821	0					
ANR	6748827	Identifier	max		6748821	1					
ANR	6748828	IdentifierDecl	one = 1		6748821	1					
ANR	6748829	IdentifierDeclType	int		6748821	0					
ANR	6748830	Identifier	one		6748821	1					
ANR	6748831	AssignmentExpression	one = 1		6748821	2		=			
ANR	6748832	Identifier	one		6748821	0					
ANR	6748833	PrimaryExpression	1		6748821	1					
ANR	6748834	ExpressionStatement	"con -> file = fopen ( con -> name , ""wb"" )"	353:4:10345:10379	6748821	1	True				
ANR	6748835	AssignmentExpression	"con -> file = fopen ( con -> name , ""wb"" )"		6748821	0		=			
ANR	6748836	PtrMemberAccess	con -> file		6748821	0					
ANR	6748837	Identifier	con		6748821	0					
ANR	6748838	Identifier	file		6748821	1					
ANR	6748839	CallExpression	"fopen ( con -> name , ""wb"" )"		6748821	1					
ANR	6748840	Callee	fopen		6748821	0					
ANR	6748841	Identifier	fopen		6748821	0					
ANR	6748842	ArgumentList	con -> name		6748821	1					
ANR	6748843	Argument	con -> name		6748821	0					
ANR	6748844	PtrMemberAccess	con -> name		6748821	0					
ANR	6748845	Identifier	con		6748821	0					
ANR	6748846	Identifier	name		6748821	1					
ANR	6748847	Argument	"""wb"""		6748821	1					
ANR	6748848	PrimaryExpression	"""wb"""		6748821	0					
ANR	6748849	IfStatement	if ( con -> file == 0 )		6748821	2					
ANR	6748850	Condition	con -> file == 0	354:8:10389:10400	6748821	0	True				
ANR	6748851	EqualityExpression	con -> file == 0		6748821	0		==			
ANR	6748852	PtrMemberAccess	con -> file		6748821	0					
ANR	6748853	Identifier	con		6748821	0					
ANR	6748854	Identifier	file		6748821	1					
ANR	6748855	PrimaryExpression	0		6748821	1					
ANR	6748856	ExpressionStatement	"error ( ""cannot create PNM output file %s"" , con -> name )"	355:8:10411:10462	6748821	1	True				
ANR	6748857	CallExpression	"error ( ""cannot create PNM output file %s"" , con -> name )"		6748821	0					
ANR	6748858	Callee	error		6748821	0					
ANR	6748859	Identifier	error		6748821	0					
ANR	6748860	ArgumentList	"""cannot create PNM output file %s"""		6748821	1					
ANR	6748861	Argument	"""cannot create PNM output file %s"""		6748821	0					
ANR	6748862	PrimaryExpression	"""cannot create PNM output file %s"""		6748821	0					
ANR	6748863	Argument	con -> name		6748821	1					
ANR	6748864	PtrMemberAccess	con -> name		6748821	0					
ANR	6748865	Identifier	con		6748821	0					
ANR	6748866	Identifier	name		6748821	1					
ANR	6748867	ExpressionStatement	max = ( 1 << con -> bpi ) - 1	356:4:10468:10489	6748821	3	True				
ANR	6748868	AssignmentExpression	max = ( 1 << con -> bpi ) - 1		6748821	0		=			
ANR	6748869	Identifier	max		6748821	0					
ANR	6748870	AdditiveExpression	( 1 << con -> bpi ) - 1		6748821	1		-			
ANR	6748871	ShiftExpression	1 << con -> bpi		6748821	0		<<			
ANR	6748872	PrimaryExpression	1		6748821	0					
ANR	6748873	PtrMemberAccess	con -> bpi		6748821	1					
ANR	6748874	Identifier	con		6748821	0					
ANR	6748875	Identifier	bpi		6748821	1					
ANR	6748876	PrimaryExpression	1		6748821	1					
ANR	6748877	IfStatement	if ( max < 256 )		6748821	4					
ANR	6748878	Condition	max < 256	357:8:10499:10505	6748821	0	True				
ANR	6748879	RelationalExpression	max < 256		6748821	0		<			
ANR	6748880	Identifier	max		6748821	0					
ANR	6748881	PrimaryExpression	256		6748821	1					
ANR	6748882	ExpressionStatement	con -> swap = 0	357:17:10508:10521	6748821	1	True				
ANR	6748883	AssignmentExpression	con -> swap = 0		6748821	0		=			
ANR	6748884	PtrMemberAccess	con -> swap		6748821	0					
ANR	6748885	Identifier	con		6748821	0					
ANR	6748886	Identifier	swap		6748821	1					
ANR	6748887	PrimaryExpression	0		6748821	1					
ANR	6748888	ElseStatement	else		6748821	0					
ANR	6748889	ExpressionStatement	con -> swap = * ( char * ) & one == 1	358:9:10532:10559	6748821	0	True				
ANR	6748890	AssignmentExpression	con -> swap = * ( char * ) & one == 1		6748821	0		=			
ANR	6748891	PtrMemberAccess	con -> swap		6748821	0					
ANR	6748892	Identifier	con		6748821	0					
ANR	6748893	Identifier	swap		6748821	1					
ANR	6748894	EqualityExpression	* ( char * ) & one == 1		6748821	1		==			
ANR	6748895	UnaryOperationExpression	* ( char * ) & one		6748821	0					
ANR	6748896	UnaryOperator	*		6748821	0					
ANR	6748897	CastExpression	( char * ) & one		6748821	1					
ANR	6748898	CastTarget	char *		6748821	0					
ANR	6748899	UnaryOperationExpression	& one		6748821	1					
ANR	6748900	UnaryOperator	&		6748821	0					
ANR	6748901	Identifier	one		6748821	1					
ANR	6748902	PrimaryExpression	1		6748821	1					
ANR	6748903	ExpressionStatement	"fprintf ( con -> file , ""P%c\\n%d %d\\n%d\\n"" , con -> ncomp == 1 ? '5' : '6' , con -> wid , con -> hei , max )"	359:4:10565:10651	6748821	5	True				
ANR	6748904	CallExpression	"fprintf ( con -> file , ""P%c\\n%d %d\\n%d\\n"" , con -> ncomp == 1 ? '5' : '6' , con -> wid , con -> hei , max )"		6748821	0					
ANR	6748905	Callee	fprintf		6748821	0					
ANR	6748906	Identifier	fprintf		6748821	0					
ANR	6748907	ArgumentList	con -> file		6748821	1					
ANR	6748908	Argument	con -> file		6748821	0					
ANR	6748909	PtrMemberAccess	con -> file		6748821	0					
ANR	6748910	Identifier	con		6748821	0					
ANR	6748911	Identifier	file		6748821	1					
ANR	6748912	Argument	"""P%c\\n%d %d\\n%d\\n"""		6748821	1					
ANR	6748913	PrimaryExpression	"""P%c\\n%d %d\\n%d\\n"""		6748821	0					
ANR	6748914	Argument	con -> ncomp == 1 ? '5' : '6'		6748821	2					
ANR	6748915	ConditionalExpression	con -> ncomp == 1 ? '5' : '6'		6748821	0					
ANR	6748916	Condition	con -> ncomp == 1		6748821	0					
ANR	6748917	EqualityExpression	con -> ncomp == 1		6748821	0		==			
ANR	6748918	PtrMemberAccess	con -> ncomp		6748821	0					
ANR	6748919	Identifier	con		6748821	0					
ANR	6748920	Identifier	ncomp		6748821	1					
ANR	6748921	PrimaryExpression	1		6748821	1					
ANR	6748922	PrimaryExpression	'5'		6748821	1					
ANR	6748923	PrimaryExpression	'6'		6748821	2					
ANR	6748924	Argument	con -> wid		6748821	3					
ANR	6748925	PtrMemberAccess	con -> wid		6748821	0					
ANR	6748926	Identifier	con		6748821	0					
ANR	6748927	Identifier	wid		6748821	1					
ANR	6748928	Argument	con -> hei		6748821	4					
ANR	6748929	PtrMemberAccess	con -> hei		6748821	0					
ANR	6748930	Identifier	con		6748821	0					
ANR	6748931	Identifier	hei		6748821	1					
ANR	6748932	Argument	max		6748821	5					
ANR	6748933	Identifier	max		6748821	0					
ANR	6748934	ReturnType	static void		6748821	1					
ANR	6748935	Identifier	start_pnm_output_file		6748821	2					
ANR	6748936	ParameterList	context * con		6748821	3					
ANR	6748937	Parameter	context * con	350:34:10304:10315	6748821	0	True				
ANR	6748938	ParameterType	context *		6748821	0					
ANR	6748939	Identifier	con		6748821	1					
ANR	6748940	CFGEntryNode	ENTRY		6748821		True				
ANR	6748941	CFGExitNode	EXIT		6748821		True				
ANR	6748942	Symbol	fopen		6748821						
ANR	6748943	Symbol	con		6748821						
ANR	6748944	Symbol	con -> file		6748821						
ANR	6748945	Symbol	con -> ncomp		6748821						
ANR	6748946	Symbol	con -> hei		6748821						
ANR	6748947	Symbol	max		6748821						
ANR	6748948	Symbol	one		6748821						
ANR	6748949	Symbol	& one		6748821						
ANR	6748950	Symbol	con -> name		6748821						
ANR	6748951	Symbol	con -> swap		6748821						
ANR	6748952	Symbol	* con		6748821						
ANR	6748953	Symbol	con -> bpi		6748821						
ANR	6748954	Symbol	* ( char * ) & one		6748821						
ANR	6748955	Symbol	con -> wid		6748821						
ANR	6748956	Function	read_tif_ifd_entry	376:0:10964:11207							
ANR	6748957	FunctionDef	"read_tif_ifd_entry (context * con , uint32_t ifdoff , uint16_t * tag , uint16_t * type , uint32_t * count)"		6748956	0					
ANR	6748958	CompoundStatement		377:0:11074:11207	6748956	0					
ANR	6748959	ExpressionStatement	"seek_file ( con , ifdoff , SEEK_SET )"	378:4:11080:11112	6748956	0	True				
ANR	6748960	CallExpression	"seek_file ( con , ifdoff , SEEK_SET )"		6748956	0					
ANR	6748961	Callee	seek_file		6748956	0					
ANR	6748962	Identifier	seek_file		6748956	0					
ANR	6748963	ArgumentList	con		6748956	1					
ANR	6748964	Argument	con		6748956	0					
ANR	6748965	Identifier	con		6748956	0					
ANR	6748966	Argument	ifdoff		6748956	1					
ANR	6748967	Identifier	ifdoff		6748956	0					
ANR	6748968	Argument	SEEK_SET		6748956	2					
ANR	6748969	Identifier	SEEK_SET		6748956	0					
ANR	6748970	ExpressionStatement	"read_uint16 ( con , tag , 1 )"	379:4:11118:11142	6748956	1	True				
ANR	6748971	CallExpression	"read_uint16 ( con , tag , 1 )"		6748956	0					
ANR	6748972	Callee	read_uint16		6748956	0					
ANR	6748973	Identifier	read_uint16		6748956	0					
ANR	6748974	ArgumentList	con		6748956	1					
ANR	6748975	Argument	con		6748956	0					
ANR	6748976	Identifier	con		6748956	0					
ANR	6748977	Argument	tag		6748956	1					
ANR	6748978	Identifier	tag		6748956	0					
ANR	6748979	Argument	1		6748956	2					
ANR	6748980	PrimaryExpression	1		6748956	0					
ANR	6748981	ExpressionStatement	"read_uint16 ( con , type , 1 )"	380:4:11148:11173	6748956	2	True				
ANR	6748982	CallExpression	"read_uint16 ( con , type , 1 )"		6748956	0					
ANR	6748983	Callee	read_uint16		6748956	0					
ANR	6748984	Identifier	read_uint16		6748956	0					
ANR	6748985	ArgumentList	con		6748956	1					
ANR	6748986	Argument	con		6748956	0					
ANR	6748987	Identifier	con		6748956	0					
ANR	6748988	Argument	type		6748956	1					
ANR	6748989	Identifier	type		6748956	0					
ANR	6748990	Argument	1		6748956	2					
ANR	6748991	PrimaryExpression	1		6748956	0					
ANR	6748992	ExpressionStatement	"read_uint32 ( con , count , 1 )"	381:4:11179:11205	6748956	3	True				
ANR	6748993	CallExpression	"read_uint32 ( con , count , 1 )"		6748956	0					
ANR	6748994	Callee	read_uint32		6748956	0					
ANR	6748995	Identifier	read_uint32		6748956	0					
ANR	6748996	ArgumentList	con		6748956	1					
ANR	6748997	Argument	con		6748956	0					
ANR	6748998	Identifier	con		6748956	0					
ANR	6748999	Argument	count		6748956	1					
ANR	6749000	Identifier	count		6748956	0					
ANR	6749001	Argument	1		6748956	2					
ANR	6749002	PrimaryExpression	1		6748956	0					
ANR	6749003	ReturnType	static void		6748956	1					
ANR	6749004	Identifier	read_tif_ifd_entry		6748956	2					
ANR	6749005	ParameterList	"context * con , uint32_t ifdoff , uint16_t * tag , uint16_t * type , uint32_t * count"		6748956	3					
ANR	6749006	Parameter	context * con	376:31:10995:11006	6748956	0	True				
ANR	6749007	ParameterType	context *		6748956	0					
ANR	6749008	Identifier	con		6748956	1					
ANR	6749009	Parameter	uint32_t ifdoff	376:45:11009:11023	6748956	1	True				
ANR	6749010	ParameterType	uint32_t		6748956	0					
ANR	6749011	Identifier	ifdoff		6748956	1					
ANR	6749012	Parameter	uint16_t * tag	376:62:11026:11038	6748956	2	True				
ANR	6749013	ParameterType	uint16_t *		6748956	0					
ANR	6749014	Identifier	tag		6748956	1					
ANR	6749015	Parameter	uint16_t * type	376:77:11041:11054	6748956	3	True				
ANR	6749016	ParameterType	uint16_t *		6748956	0					
ANR	6749017	Identifier	type		6748956	1					
ANR	6749018	Parameter	uint32_t * count	376:93:11057:11071	6748956	4	True				
ANR	6749019	ParameterType	uint32_t *		6748956	0					
ANR	6749020	Identifier	count		6748956	1					
ANR	6749021	CFGEntryNode	ENTRY		6748956		True				
ANR	6749022	CFGExitNode	EXIT		6748956		True				
ANR	6749023	Symbol	SEEK_SET		6748956						
ANR	6749024	Symbol	ifdoff		6748956						
ANR	6749025	Symbol	con		6748956						
ANR	6749026	Symbol	count		6748956						
ANR	6749027	Symbol	tag		6748956						
ANR	6749028	Symbol	type		6748956						
ANR	6749029	Function	read_tif_data	384:0:11210:11893							
ANR	6749030	FunctionDef	"read_tif_data (context * con , uint16_t type , uint32_t count , int index , int nval , void * buf)"		6749029	0					
ANR	6749031	CompoundStatement		385:0:11313:11893	6749029	0					
ANR	6749032	IdentifierDeclStatement	int size = 0 ;	386:4:11319:11329	6749029	0	True				
ANR	6749033	IdentifierDecl	size = 0		6749029	0					
ANR	6749034	IdentifierDeclType	int		6749029	0					
ANR	6749035	Identifier	size		6749029	1					
ANR	6749036	AssignmentExpression	size = 0		6749029	2		=			
ANR	6749037	Identifier	size		6749029	0					
ANR	6749038	PrimaryExpression	0		6749029	1					
ANR	6749039	SwitchStatement	switch ( type )		6749029	1					
ANR	6749040	Condition	type	388:12:11344:11347	6749029	0	True				
ANR	6749041	Identifier	type		6749029	0					
ANR	6749042	CompoundStatement		4:18:36:36	6749029	1					
ANR	6749043	Label	case 3 :	389:8:11360:11367	6749029	0	True				
ANR	6749044	ExpressionStatement	size = 2	389:17:11369:11377	6749029	1	True				
ANR	6749045	AssignmentExpression	size = 2		6749029	0		=			
ANR	6749046	Identifier	size		6749029	0					
ANR	6749047	PrimaryExpression	2		6749029	1					
ANR	6749048	BreakStatement	break ;	389:27:11379:11384	6749029	2	True				
ANR	6749049	Label	case 4 :	390:8:11394:11401	6749029	3	True				
ANR	6749050	ExpressionStatement	size = 4	390:17:11403:11411	6749029	4	True				
ANR	6749051	AssignmentExpression	size = 4		6749029	0		=			
ANR	6749052	Identifier	size		6749029	0					
ANR	6749053	PrimaryExpression	4		6749029	1					
ANR	6749054	BreakStatement	break ;	390:27:11413:11418	6749029	5	True				
ANR	6749055	Label	default :	391:8:11428:11436	6749029	6	True				
ANR	6749056	Identifier	default		6749029	0					
ANR	6749057	ReturnStatement	return ;	391:18:11438:11444	6749029	7	True				
ANR	6749058	IfStatement	if ( index + nval > ( int ) count )		6749029	2					
ANR	6749059	Condition	index + nval > ( int ) count	394:8:11461:11481	6749029	0	True				
ANR	6749060	RelationalExpression	index + nval > ( int ) count		6749029	0		>			
ANR	6749061	AdditiveExpression	index + nval		6749029	0		+			
ANR	6749062	Identifier	index		6749029	0					
ANR	6749063	Identifier	nval		6749029	1					
ANR	6749064	CastExpression	( int ) count		6749029	1					
ANR	6749065	CastTarget	int		6749029	0					
ANR	6749066	Identifier	count		6749029	1					
ANR	6749067	ExpressionStatement	"error ( ""data array is to small for read request in TIFF file %s"" , con -> name )"	395:8:11492:11567	6749029	1	True				
ANR	6749068	CallExpression	"error ( ""data array is to small for read request in TIFF file %s"" , con -> name )"		6749029	0					
ANR	6749069	Callee	error		6749029	0					
ANR	6749070	Identifier	error		6749029	0					
ANR	6749071	ArgumentList	"""data array is to small for read request in TIFF file %s"""		6749029	1					
ANR	6749072	Argument	"""data array is to small for read request in TIFF file %s"""		6749029	0					
ANR	6749073	PrimaryExpression	"""data array is to small for read request in TIFF file %s"""		6749029	0					
ANR	6749074	Argument	con -> name		6749029	1					
ANR	6749075	PtrMemberAccess	con -> name		6749029	0					
ANR	6749076	Identifier	con		6749029	0					
ANR	6749077	Identifier	name		6749029	1					
ANR	6749078	ExpressionStatement	index *= size	397:4:11574:11587	6749029	3	True				
ANR	6749079	AssignmentExpression	index *= size		6749029	0		*=			
ANR	6749080	Identifier	index		6749029	0					
ANR	6749081	Identifier	size		6749029	1					
ANR	6749082	ExpressionStatement	size *= count	398:4:11593:11606	6749029	4	True				
ANR	6749083	AssignmentExpression	size *= count		6749029	0		*=			
ANR	6749084	Identifier	size		6749029	0					
ANR	6749085	Identifier	count		6749029	1					
ANR	6749086	IdentifierDeclStatement	uint32_t offset = ftell ( con -> file ) ;	399:4:11612:11646	6749029	5	True				
ANR	6749087	IdentifierDecl	offset = ftell ( con -> file )		6749029	0					
ANR	6749088	IdentifierDeclType	uint32_t		6749029	0					
ANR	6749089	Identifier	offset		6749029	1					
ANR	6749090	AssignmentExpression	offset = ftell ( con -> file )		6749029	2		=			
ANR	6749091	Identifier	offset		6749029	0					
ANR	6749092	CallExpression	ftell ( con -> file )		6749029	1					
ANR	6749093	Callee	ftell		6749029	0					
ANR	6749094	Identifier	ftell		6749029	0					
ANR	6749095	ArgumentList	con -> file		6749029	1					
ANR	6749096	Argument	con -> file		6749029	0					
ANR	6749097	PtrMemberAccess	con -> file		6749029	0					
ANR	6749098	Identifier	con		6749029	0					
ANR	6749099	Identifier	file		6749029	1					
ANR	6749100	IfStatement	if ( size > 4 )		6749029	6					
ANR	6749101	Condition	size > 4	400:8:11656:11661	6749029	0	True				
ANR	6749102	RelationalExpression	size > 4		6749029	0		>			
ANR	6749103	Identifier	size		6749029	0					
ANR	6749104	PrimaryExpression	4		6749029	1					
ANR	6749105	ExpressionStatement	"read_uint32 ( con , & offset , 1 )"	401:8:11672:11700	6749029	1	True				
ANR	6749106	CallExpression	"read_uint32 ( con , & offset , 1 )"		6749029	0					
ANR	6749107	Callee	read_uint32		6749029	0					
ANR	6749108	Identifier	read_uint32		6749029	0					
ANR	6749109	ArgumentList	con		6749029	1					
ANR	6749110	Argument	con		6749029	0					
ANR	6749111	Identifier	con		6749029	0					
ANR	6749112	Argument	& offset		6749029	1					
ANR	6749113	UnaryOperationExpression	& offset		6749029	0					
ANR	6749114	UnaryOperator	&		6749029	0					
ANR	6749115	Identifier	offset		6749029	1					
ANR	6749116	Argument	1		6749029	2					
ANR	6749117	PrimaryExpression	1		6749029	0					
ANR	6749118	ExpressionStatement	"seek_file ( con , offset + index , SEEK_SET )"	402:4:11706:11744	6749029	7	True				
ANR	6749119	CallExpression	"seek_file ( con , offset + index , SEEK_SET )"		6749029	0					
ANR	6749120	Callee	seek_file		6749029	0					
ANR	6749121	Identifier	seek_file		6749029	0					
ANR	6749122	ArgumentList	con		6749029	1					
ANR	6749123	Argument	con		6749029	0					
ANR	6749124	Identifier	con		6749029	0					
ANR	6749125	Argument	offset + index		6749029	1					
ANR	6749126	AdditiveExpression	offset + index		6749029	0		+			
ANR	6749127	Identifier	offset		6749029	0					
ANR	6749128	Identifier	index		6749029	1					
ANR	6749129	Argument	SEEK_SET		6749029	2					
ANR	6749130	Identifier	SEEK_SET		6749029	0					
ANR	6749131	SwitchStatement	switch ( type )		6749029	8					
ANR	6749132	Condition	type	403:12:11758:11761	6749029	0	True				
ANR	6749133	Identifier	type		6749029	0					
ANR	6749134	CompoundStatement		19:18:450:450	6749029	1					
ANR	6749135	Label	case 3 :	404:8:11774:11781	6749029	0	True				
ANR	6749136	ExpressionStatement	"read_uint16 ( con , ( uint16_t * ) buf , nval )"	404:17:11783:11821	6749029	1	True				
ANR	6749137	CallExpression	"read_uint16 ( con , ( uint16_t * ) buf , nval )"		6749029	0					
ANR	6749138	Callee	read_uint16		6749029	0					
ANR	6749139	Identifier	read_uint16		6749029	0					
ANR	6749140	ArgumentList	con		6749029	1					
ANR	6749141	Argument	con		6749029	0					
ANR	6749142	Identifier	con		6749029	0					
ANR	6749143	Argument	( uint16_t * ) buf		6749029	1					
ANR	6749144	CastExpression	( uint16_t * ) buf		6749029	0					
ANR	6749145	CastTarget	uint16_t *		6749029	0					
ANR	6749146	Identifier	buf		6749029	1					
ANR	6749147	Argument	nval		6749029	2					
ANR	6749148	Identifier	nval		6749029	0					
ANR	6749149	BreakStatement	break ;	404:57:11823:11828	6749029	2	True				
ANR	6749150	Label	case 4 :	405:8:11838:11845	6749029	3	True				
ANR	6749151	ExpressionStatement	"read_uint32 ( con , ( uint32_t * ) buf , nval )"	405:17:11847:11885	6749029	4	True				
ANR	6749152	CallExpression	"read_uint32 ( con , ( uint32_t * ) buf , nval )"		6749029	0					
ANR	6749153	Callee	read_uint32		6749029	0					
ANR	6749154	Identifier	read_uint32		6749029	0					
ANR	6749155	ArgumentList	con		6749029	1					
ANR	6749156	Argument	con		6749029	0					
ANR	6749157	Identifier	con		6749029	0					
ANR	6749158	Argument	( uint32_t * ) buf		6749029	1					
ANR	6749159	CastExpression	( uint32_t * ) buf		6749029	0					
ANR	6749160	CastTarget	uint32_t *		6749029	0					
ANR	6749161	Identifier	buf		6749029	1					
ANR	6749162	Argument	nval		6749029	2					
ANR	6749163	Identifier	nval		6749029	0					
ANR	6749164	ReturnType	static void		6749029	1					
ANR	6749165	Identifier	read_tif_data		6749029	2					
ANR	6749166	ParameterList	"context * con , uint16_t type , uint32_t count , int index , int nval , void * buf"		6749029	3					
ANR	6749167	Parameter	context * con	384:26:11236:11247	6749029	0	True				
ANR	6749168	ParameterType	context *		6749029	0					
ANR	6749169	Identifier	con		6749029	1					
ANR	6749170	Parameter	uint16_t type	384:40:11250:11262	6749029	1	True				
ANR	6749171	ParameterType	uint16_t		6749029	0					
ANR	6749172	Identifier	type		6749029	1					
ANR	6749173	Parameter	uint32_t count	384:55:11265:11278	6749029	2	True				
ANR	6749174	ParameterType	uint32_t		6749029	0					
ANR	6749175	Identifier	count		6749029	1					
ANR	6749176	Parameter	int index	384:71:11281:11289	6749029	3	True				
ANR	6749177	ParameterType	int		6749029	0					
ANR	6749178	Identifier	index		6749029	1					
ANR	6749179	Parameter	int nval	384:82:11292:11299	6749029	4	True				
ANR	6749180	ParameterType	int		6749029	0					
ANR	6749181	Identifier	nval		6749029	1					
ANR	6749182	Parameter	void * buf	384:92:11302:11310	6749029	5	True				
ANR	6749183	ParameterType	void *		6749029	0					
ANR	6749184	Identifier	buf		6749029	1					
ANR	6749185	CFGEntryNode	ENTRY		6749029		True				
ANR	6749186	CFGExitNode	EXIT		6749029		True				
ANR	6749187	Symbol	nval		6749029						
ANR	6749188	Symbol	SEEK_SET		6749029						
ANR	6749189	Symbol	con		6749029						
ANR	6749190	Symbol	con -> file		6749029						
ANR	6749191	Symbol	offset		6749029						
ANR	6749192	Symbol	ftell		6749029						
ANR	6749193	Symbol	& offset		6749029						
ANR	6749194	Symbol	count		6749029						
ANR	6749195	Symbol	index		6749029						
ANR	6749196	Symbol	type		6749029						
ANR	6749197	Symbol	con -> name		6749029						
ANR	6749198	Symbol	buf		6749029						
ANR	6749199	Symbol	* con		6749029						
ANR	6749200	Symbol	size		6749029						
ANR	6749201	Function	read_tif_datum	409:0:11896:12214							
ANR	6749202	FunctionDef	"read_tif_datum (context * con , uint16_t type , uint32_t count , int index)"		6749201	0					
ANR	6749203	CompoundStatement		410:0:11983:12214	6749201	0					
ANR	6749204	IdentifierDeclStatement	uint8_t buf [ 4 ] ;	411:4:11989:12003	6749201	0	True				
ANR	6749205	IdentifierDecl	buf [ 4 ]		6749201	0					
ANR	6749206	IdentifierDeclType	uint8_t [ 4 ]		6749201	0					
ANR	6749207	Identifier	buf		6749201	1					
ANR	6749208	PrimaryExpression	4		6749201	2					
ANR	6749209	ExpressionStatement	"read_tif_data ( con , type , count , index , 1 , buf )"	413:4:12010:12056	6749201	1	True				
ANR	6749210	CallExpression	"read_tif_data ( con , type , count , index , 1 , buf )"		6749201	0					
ANR	6749211	Callee	read_tif_data		6749201	0					
ANR	6749212	Identifier	read_tif_data		6749201	0					
ANR	6749213	ArgumentList	con		6749201	1					
ANR	6749214	Argument	con		6749201	0					
ANR	6749215	Identifier	con		6749201	0					
ANR	6749216	Argument	type		6749201	1					
ANR	6749217	Identifier	type		6749201	0					
ANR	6749218	Argument	count		6749201	2					
ANR	6749219	Identifier	count		6749201	0					
ANR	6749220	Argument	index		6749201	3					
ANR	6749221	Identifier	index		6749201	0					
ANR	6749222	Argument	1		6749201	4					
ANR	6749223	PrimaryExpression	1		6749201	0					
ANR	6749224	Argument	buf		6749201	5					
ANR	6749225	Identifier	buf		6749201	0					
ANR	6749226	SwitchStatement	switch ( type )		6749201	2					
ANR	6749227	Condition	type	414:12:12070:12073	6749201	0	True				
ANR	6749228	Identifier	type		6749201	0					
ANR	6749229	CompoundStatement		5:18:92:92	6749201	1					
ANR	6749230	Label	case 3 :	415:8:12086:12093	6749201	0	True				
ANR	6749231	ReturnStatement	return ( uint32_t ) * ( uint16_t * ) buf ;	415:17:12095:12127	6749201	1	True				
ANR	6749232	CastExpression	( uint32_t ) * ( uint16_t * ) buf		6749201	0					
ANR	6749233	CastTarget	uint32_t		6749201	0					
ANR	6749234	UnaryOperationExpression	* ( uint16_t * ) buf		6749201	1					
ANR	6749235	UnaryOperator	*		6749201	0					
ANR	6749236	CastExpression	( uint16_t * ) buf		6749201	1					
ANR	6749237	CastTarget	uint16_t *		6749201	0					
ANR	6749238	Identifier	buf		6749201	1					
ANR	6749239	Label	case 4 :	416:8:12137:12144	6749201	2	True				
ANR	6749240	ReturnStatement	return ( uint32_t ) * ( uint32_t * ) buf ;	416:17:12146:12178	6749201	3	True				
ANR	6749241	CastExpression	( uint32_t ) * ( uint32_t * ) buf		6749201	0					
ANR	6749242	CastTarget	uint32_t		6749201	0					
ANR	6749243	UnaryOperationExpression	* ( uint32_t * ) buf		6749201	1					
ANR	6749244	UnaryOperator	*		6749201	0					
ANR	6749245	CastExpression	( uint32_t * ) buf		6749201	1					
ANR	6749246	CastTarget	uint32_t *		6749201	0					
ANR	6749247	Identifier	buf		6749201	1					
ANR	6749248	Label	default :	417:8:12188:12196	6749201	4	True				
ANR	6749249	Identifier	default		6749201	0					
ANR	6749250	ReturnStatement	return 0 ;	417:18:12198:12206	6749201	5	True				
ANR	6749251	PrimaryExpression	0		6749201	0					
ANR	6749252	ReturnType	static uint32_t		6749201	1					
ANR	6749253	Identifier	read_tif_datum		6749201	2					
ANR	6749254	ParameterList	"context * con , uint16_t type , uint32_t count , int index"		6749201	3					
ANR	6749255	Parameter	context * con	409:31:11927:11938	6749201	0	True				
ANR	6749256	ParameterType	context *		6749201	0					
ANR	6749257	Identifier	con		6749201	1					
ANR	6749258	Parameter	uint16_t type	409:45:11941:11953	6749201	1	True				
ANR	6749259	ParameterType	uint16_t		6749201	0					
ANR	6749260	Identifier	type		6749201	1					
ANR	6749261	Parameter	uint32_t count	409:60:11956:11969	6749201	2	True				
ANR	6749262	ParameterType	uint32_t		6749201	0					
ANR	6749263	Identifier	count		6749201	1					
ANR	6749264	Parameter	int index	409:76:11972:11980	6749201	3	True				
ANR	6749265	ParameterType	int		6749201	0					
ANR	6749266	Identifier	index		6749201	1					
ANR	6749267	CFGEntryNode	ENTRY		6749201		True				
ANR	6749268	CFGExitNode	EXIT		6749201		True				
ANR	6749269	Symbol	buf		6749201						
ANR	6749270	Symbol	* buf		6749201						
ANR	6749271	Symbol	con		6749201						
ANR	6749272	Symbol	* ( uint16_t * ) buf		6749201						
ANR	6749273	Symbol	count		6749201						
ANR	6749274	Symbol	index		6749201						
ANR	6749275	Symbol	type		6749201						
ANR	6749276	Symbol	* ( uint32_t * ) buf		6749201						
ANR	6749277	Function	get_tif_datum	421:0:12217:12446							
ANR	6749278	FunctionDef	"get_tif_datum (context * con , uint32_t ifdoff , int index)"		6749277	0					
ANR	6749279	CompoundStatement		422:0:12289:12446	6749277	0					
ANR	6749280	IdentifierDeclStatement	"uint16_t tag , type ;"	423:4:12295:12313	6749277	0	True				
ANR	6749281	IdentifierDecl	tag		6749277	0					
ANR	6749282	IdentifierDeclType	uint16_t		6749277	0					
ANR	6749283	Identifier	tag		6749277	1					
ANR	6749284	IdentifierDecl	type		6749277	1					
ANR	6749285	IdentifierDeclType	uint16_t		6749277	0					
ANR	6749286	Identifier	type		6749277	1					
ANR	6749287	IdentifierDeclStatement	uint32_t count ;	424:4:12319:12333	6749277	1	True				
ANR	6749288	IdentifierDecl	count		6749277	0					
ANR	6749289	IdentifierDeclType	uint32_t		6749277	0					
ANR	6749290	Identifier	count		6749277	1					
ANR	6749291	ExpressionStatement	"read_tif_ifd_entry ( con , ifdoff , & tag , & type , & count )"	426:4:12340:12392	6749277	2	True				
ANR	6749292	CallExpression	"read_tif_ifd_entry ( con , ifdoff , & tag , & type , & count )"		6749277	0					
ANR	6749293	Callee	read_tif_ifd_entry		6749277	0					
ANR	6749294	Identifier	read_tif_ifd_entry		6749277	0					
ANR	6749295	ArgumentList	con		6749277	1					
ANR	6749296	Argument	con		6749277	0					
ANR	6749297	Identifier	con		6749277	0					
ANR	6749298	Argument	ifdoff		6749277	1					
ANR	6749299	Identifier	ifdoff		6749277	0					
ANR	6749300	Argument	& tag		6749277	2					
ANR	6749301	UnaryOperationExpression	& tag		6749277	0					
ANR	6749302	UnaryOperator	&		6749277	0					
ANR	6749303	Identifier	tag		6749277	1					
ANR	6749304	Argument	& type		6749277	3					
ANR	6749305	UnaryOperationExpression	& type		6749277	0					
ANR	6749306	UnaryOperator	&		6749277	0					
ANR	6749307	Identifier	type		6749277	1					
ANR	6749308	Argument	& count		6749277	4					
ANR	6749309	UnaryOperationExpression	& count		6749277	0					
ANR	6749310	UnaryOperator	&		6749277	0					
ANR	6749311	Identifier	count		6749277	1					
ANR	6749312	ReturnStatement	"return read_tif_datum ( con , type , count , index ) ;"	427:4:12398:12444	6749277	3	True				
ANR	6749313	CallExpression	"read_tif_datum ( con , type , count , index )"		6749277	0					
ANR	6749314	Callee	read_tif_datum		6749277	0					
ANR	6749315	Identifier	read_tif_datum		6749277	0					
ANR	6749316	ArgumentList	con		6749277	1					
ANR	6749317	Argument	con		6749277	0					
ANR	6749318	Identifier	con		6749277	0					
ANR	6749319	Argument	type		6749277	1					
ANR	6749320	Identifier	type		6749277	0					
ANR	6749321	Argument	count		6749277	2					
ANR	6749322	Identifier	count		6749277	0					
ANR	6749323	Argument	index		6749277	3					
ANR	6749324	Identifier	index		6749277	0					
ANR	6749325	ReturnType	static uint32_t		6749277	1					
ANR	6749326	Identifier	get_tif_datum		6749277	2					
ANR	6749327	ParameterList	"context * con , uint32_t ifdoff , int index"		6749277	3					
ANR	6749328	Parameter	context * con	421:30:12247:12258	6749277	0	True				
ANR	6749329	ParameterType	context *		6749277	0					
ANR	6749330	Identifier	con		6749277	1					
ANR	6749331	Parameter	uint32_t ifdoff	421:44:12261:12275	6749277	1	True				
ANR	6749332	ParameterType	uint32_t		6749277	0					
ANR	6749333	Identifier	ifdoff		6749277	1					
ANR	6749334	Parameter	int index	421:61:12278:12286	6749277	2	True				
ANR	6749335	ParameterType	int		6749277	0					
ANR	6749336	Identifier	index		6749277	1					
ANR	6749337	CFGEntryNode	ENTRY		6749277		True				
ANR	6749338	CFGExitNode	EXIT		6749277		True				
ANR	6749339	Symbol	ifdoff		6749277						
ANR	6749340	Symbol	con		6749277						
ANR	6749341	Symbol	& type		6749277						
ANR	6749342	Symbol	& tag		6749277						
ANR	6749343	Symbol	count		6749277						
ANR	6749344	Symbol	read_tif_datum		6749277						
ANR	6749345	Symbol	index		6749277						
ANR	6749346	Symbol	& count		6749277						
ANR	6749347	Symbol	tag		6749277						
ANR	6749348	Symbol	type		6749277						
ANR	6749349	Function	open_tif_input_file	430:0:12449:15074							
ANR	6749350	FunctionDef	open_tif_input_file (context * con)		6749349	0					
ANR	6749351	CompoundStatement		431:0:12495:15074	6749349	0					
ANR	6749352	IdentifierDeclStatement	"int i , one = 1 ;"	432:4:12501:12513	6749349	0	True				
ANR	6749353	IdentifierDecl	i		6749349	0					
ANR	6749354	IdentifierDeclType	int		6749349	0					
ANR	6749355	Identifier	i		6749349	1					
ANR	6749356	IdentifierDecl	one = 1		6749349	1					
ANR	6749357	IdentifierDeclType	int		6749349	0					
ANR	6749358	Identifier	one		6749349	1					
ANR	6749359	AssignmentExpression	one = 1		6749349	2		=			
ANR	6749360	Identifier	one		6749349	0					
ANR	6749361	PrimaryExpression	1		6749349	1					
ANR	6749362	IdentifierDeclStatement	"uint16_t magic , nentry , tag , type ;"	433:4:12519:12552	6749349	1	True				
ANR	6749363	IdentifierDecl	magic		6749349	0					
ANR	6749364	IdentifierDeclType	uint16_t		6749349	0					
ANR	6749365	Identifier	magic		6749349	1					
ANR	6749366	IdentifierDecl	nentry		6749349	1					
ANR	6749367	IdentifierDeclType	uint16_t		6749349	0					
ANR	6749368	Identifier	nentry		6749349	1					
ANR	6749369	IdentifierDecl	tag		6749349	2					
ANR	6749370	IdentifierDeclType	uint16_t		6749349	0					
ANR	6749371	Identifier	tag		6749349	1					
ANR	6749372	IdentifierDecl	type		6749349	3					
ANR	6749373	IdentifierDeclType	uint16_t		6749349	0					
ANR	6749374	Identifier	type		6749349	1					
ANR	6749375	IdentifierDeclStatement	"uint32_t count , diroff ;"	434:4:12558:12580	6749349	2	True				
ANR	6749376	IdentifierDecl	count		6749349	0					
ANR	6749377	IdentifierDeclType	uint32_t		6749349	0					
ANR	6749378	Identifier	count		6749349	1					
ANR	6749379	IdentifierDecl	diroff		6749349	1					
ANR	6749380	IdentifierDeclType	uint32_t		6749349	0					
ANR	6749381	Identifier	diroff		6749349	1					
ANR	6749382	ExpressionStatement	rewind ( con -> file )	436:4:12587:12604	6749349	3	True				
ANR	6749383	CallExpression	rewind ( con -> file )		6749349	0					
ANR	6749384	Callee	rewind		6749349	0					
ANR	6749385	Identifier	rewind		6749349	0					
ANR	6749386	ArgumentList	con -> file		6749349	1					
ANR	6749387	Argument	con -> file		6749349	0					
ANR	6749388	PtrMemberAccess	con -> file		6749349	0					
ANR	6749389	Identifier	con		6749349	0					
ANR	6749390	Identifier	file		6749349	1					
ANR	6749391	ExpressionStatement	"read_uint16 ( con , & magic , 1 )"	437:4:12610:12637	6749349	4	True				
ANR	6749392	CallExpression	"read_uint16 ( con , & magic , 1 )"		6749349	0					
ANR	6749393	Callee	read_uint16		6749349	0					
ANR	6749394	Identifier	read_uint16		6749349	0					
ANR	6749395	ArgumentList	con		6749349	1					
ANR	6749396	Argument	con		6749349	0					
ANR	6749397	Identifier	con		6749349	0					
ANR	6749398	Argument	& magic		6749349	1					
ANR	6749399	UnaryOperationExpression	& magic		6749349	0					
ANR	6749400	UnaryOperator	&		6749349	0					
ANR	6749401	Identifier	magic		6749349	1					
ANR	6749402	Argument	1		6749349	2					
ANR	6749403	PrimaryExpression	1		6749349	0					
ANR	6749404	SwitchStatement	switch ( magic )		6749349	5					
ANR	6749405	Condition	magic	438:12:12651:12655	6749349	0	True				
ANR	6749406	Identifier	magic		6749349	0					
ANR	6749407	CompoundStatement		8:19:162:162	6749349	1					
ANR	6749408	Label	case 0x4949 :	439:8:12668:12680	6749349	0	True				
ANR	6749409	ExpressionStatement	con -> swap = * ( char * ) & one != 1	439:22:12682:12709	6749349	1	True				
ANR	6749410	AssignmentExpression	con -> swap = * ( char * ) & one != 1		6749349	0		=			
ANR	6749411	PtrMemberAccess	con -> swap		6749349	0					
ANR	6749412	Identifier	con		6749349	0					
ANR	6749413	Identifier	swap		6749349	1					
ANR	6749414	EqualityExpression	* ( char * ) & one != 1		6749349	1		!=			
ANR	6749415	UnaryOperationExpression	* ( char * ) & one		6749349	0					
ANR	6749416	UnaryOperator	*		6749349	0					
ANR	6749417	CastExpression	( char * ) & one		6749349	1					
ANR	6749418	CastTarget	char *		6749349	0					
ANR	6749419	UnaryOperationExpression	& one		6749349	1					
ANR	6749420	UnaryOperator	&		6749349	0					
ANR	6749421	Identifier	one		6749349	1					
ANR	6749422	PrimaryExpression	1		6749349	1					
ANR	6749423	BreakStatement	break ;	439:51:12711:12716	6749349	2	True				
ANR	6749424	Label	case 0x4d4d :	440:8:12726:12738	6749349	3	True				
ANR	6749425	ExpressionStatement	con -> swap = * ( char * ) & one == 1	440:22:12740:12767	6749349	4	True				
ANR	6749426	AssignmentExpression	con -> swap = * ( char * ) & one == 1		6749349	0		=			
ANR	6749427	PtrMemberAccess	con -> swap		6749349	0					
ANR	6749428	Identifier	con		6749349	0					
ANR	6749429	Identifier	swap		6749349	1					
ANR	6749430	EqualityExpression	* ( char * ) & one == 1		6749349	1		==			
ANR	6749431	UnaryOperationExpression	* ( char * ) & one		6749349	0					
ANR	6749432	UnaryOperator	*		6749349	0					
ANR	6749433	CastExpression	( char * ) & one		6749349	1					
ANR	6749434	CastTarget	char *		6749349	0					
ANR	6749435	UnaryOperationExpression	& one		6749349	1					
ANR	6749436	UnaryOperator	&		6749349	0					
ANR	6749437	Identifier	one		6749349	1					
ANR	6749438	PrimaryExpression	1		6749349	1					
ANR	6749439	BreakStatement	break ;	440:51:12769:12774	6749349	5	True				
ANR	6749440	Label	default :	441:8:12784:12792	6749349	6	True				
ANR	6749441	Identifier	default		6749349	0					
ANR	6749442	ExpressionStatement	"error ( ""bad magic number 0x%04x found at start of TIFF file %s"" , magic , con -> name )"	441:18:12794:12875	6749349	7	True				
ANR	6749443	CallExpression	"error ( ""bad magic number 0x%04x found at start of TIFF file %s"" , magic , con -> name )"		6749349	0					
ANR	6749444	Callee	error		6749349	0					
ANR	6749445	Identifier	error		6749349	0					
ANR	6749446	ArgumentList	"""bad magic number 0x%04x found at start of TIFF file %s"""		6749349	1					
ANR	6749447	Argument	"""bad magic number 0x%04x found at start of TIFF file %s"""		6749349	0					
ANR	6749448	PrimaryExpression	"""bad magic number 0x%04x found at start of TIFF file %s"""		6749349	0					
ANR	6749449	Argument	magic		6749349	1					
ANR	6749450	Identifier	magic		6749349	0					
ANR	6749451	Argument	con -> name		6749349	2					
ANR	6749452	PtrMemberAccess	con -> name		6749349	0					
ANR	6749453	Identifier	con		6749349	0					
ANR	6749454	Identifier	name		6749349	1					
ANR	6749455	ExpressionStatement	"read_uint16 ( con , & magic , 1 )"	443:4:12887:12914	6749349	6	True				
ANR	6749456	CallExpression	"read_uint16 ( con , & magic , 1 )"		6749349	0					
ANR	6749457	Callee	read_uint16		6749349	0					
ANR	6749458	Identifier	read_uint16		6749349	0					
ANR	6749459	ArgumentList	con		6749349	1					
ANR	6749460	Argument	con		6749349	0					
ANR	6749461	Identifier	con		6749349	0					
ANR	6749462	Argument	& magic		6749349	1					
ANR	6749463	UnaryOperationExpression	& magic		6749349	0					
ANR	6749464	UnaryOperator	&		6749349	0					
ANR	6749465	Identifier	magic		6749349	1					
ANR	6749466	Argument	1		6749349	2					
ANR	6749467	PrimaryExpression	1		6749349	0					
ANR	6749468	IfStatement	if ( magic != 42 )		6749349	7					
ANR	6749469	Condition	magic != 42	444:8:12924:12932	6749349	0	True				
ANR	6749470	EqualityExpression	magic != 42		6749349	0		!=			
ANR	6749471	Identifier	magic		6749349	0					
ANR	6749472	PrimaryExpression	42		6749349	1					
ANR	6749473	ExpressionStatement	"error ( ""magic number 42 not found in TIFF file %s"" , con -> name )"	445:8:12943:13004	6749349	1	True				
ANR	6749474	CallExpression	"error ( ""magic number 42 not found in TIFF file %s"" , con -> name )"		6749349	0					
ANR	6749475	Callee	error		6749349	0					
ANR	6749476	Identifier	error		6749349	0					
ANR	6749477	ArgumentList	"""magic number 42 not found in TIFF file %s"""		6749349	1					
ANR	6749478	Argument	"""magic number 42 not found in TIFF file %s"""		6749349	0					
ANR	6749479	PrimaryExpression	"""magic number 42 not found in TIFF file %s"""		6749349	0					
ANR	6749480	Argument	con -> name		6749349	1					
ANR	6749481	PtrMemberAccess	con -> name		6749349	0					
ANR	6749482	Identifier	con		6749349	0					
ANR	6749483	Identifier	name		6749349	1					
ANR	6749484	ExpressionStatement	"read_uint32 ( con , & diroff , 1 )"	446:4:13010:13038	6749349	8	True				
ANR	6749485	CallExpression	"read_uint32 ( con , & diroff , 1 )"		6749349	0					
ANR	6749486	Callee	read_uint32		6749349	0					
ANR	6749487	Identifier	read_uint32		6749349	0					
ANR	6749488	ArgumentList	con		6749349	1					
ANR	6749489	Argument	con		6749349	0					
ANR	6749490	Identifier	con		6749349	0					
ANR	6749491	Argument	& diroff		6749349	1					
ANR	6749492	UnaryOperationExpression	& diroff		6749349	0					
ANR	6749493	UnaryOperator	&		6749349	0					
ANR	6749494	Identifier	diroff		6749349	1					
ANR	6749495	Argument	1		6749349	2					
ANR	6749496	PrimaryExpression	1		6749349	0					
ANR	6749497	ExpressionStatement	"seek_file ( con , diroff , SEEK_SET )"	448:4:13045:13077	6749349	9	True				
ANR	6749498	CallExpression	"seek_file ( con , diroff , SEEK_SET )"		6749349	0					
ANR	6749499	Callee	seek_file		6749349	0					
ANR	6749500	Identifier	seek_file		6749349	0					
ANR	6749501	ArgumentList	con		6749349	1					
ANR	6749502	Argument	con		6749349	0					
ANR	6749503	Identifier	con		6749349	0					
ANR	6749504	Argument	diroff		6749349	1					
ANR	6749505	Identifier	diroff		6749349	0					
ANR	6749506	Argument	SEEK_SET		6749349	2					
ANR	6749507	Identifier	SEEK_SET		6749349	0					
ANR	6749508	ExpressionStatement	"read_uint16 ( con , & nentry , 1 )"	449:4:13083:13111	6749349	10	True				
ANR	6749509	CallExpression	"read_uint16 ( con , & nentry , 1 )"		6749349	0					
ANR	6749510	Callee	read_uint16		6749349	0					
ANR	6749511	Identifier	read_uint16		6749349	0					
ANR	6749512	ArgumentList	con		6749349	1					
ANR	6749513	Argument	con		6749349	0					
ANR	6749514	Identifier	con		6749349	0					
ANR	6749515	Argument	& nentry		6749349	1					
ANR	6749516	UnaryOperationExpression	& nentry		6749349	0					
ANR	6749517	UnaryOperator	&		6749349	0					
ANR	6749518	Identifier	nentry		6749349	1					
ANR	6749519	Argument	1		6749349	2					
ANR	6749520	PrimaryExpression	1		6749349	0					
ANR	6749521	ForStatement	for ( i = 0 ; i < nentry ; i ++ )		6749349	11					
ANR	6749522	ForInit	i = 0 ;	450:9:13122:13125	6749349	0	True				
ANR	6749523	AssignmentExpression	i = 0		6749349	0		=			
ANR	6749524	Identifier	i		6749349	0					
ANR	6749525	PrimaryExpression	0		6749349	1					
ANR	6749526	Condition	i < nentry	450:14:13127:13134	6749349	1	True				
ANR	6749527	RelationalExpression	i < nentry		6749349	0		<			
ANR	6749528	Identifier	i		6749349	0					
ANR	6749529	Identifier	nentry		6749349	1					
ANR	6749530	PostIncDecOperationExpression	i ++	450:24:13137:13139	6749349	2	True				
ANR	6749531	Identifier	i		6749349	0					
ANR	6749532	IncDec	++		6749349	1					
ANR	6749533	CompoundStatement		23:8:754:805	6749349	3					
ANR	6749534	IdentifierDeclStatement	int ifdoff = diroff + 2 + 12 * i ;	451:8:13152:13178	6749349	0	True				
ANR	6749535	IdentifierDecl	ifdoff = diroff + 2 + 12 * i		6749349	0					
ANR	6749536	IdentifierDeclType	int		6749349	0					
ANR	6749537	Identifier	ifdoff		6749349	1					
ANR	6749538	AssignmentExpression	ifdoff = diroff + 2 + 12 * i		6749349	2		=			
ANR	6749539	Identifier	ifdoff		6749349	0					
ANR	6749540	AdditiveExpression	diroff + 2 + 12 * i		6749349	1		+			
ANR	6749541	Identifier	diroff		6749349	0					
ANR	6749542	AdditiveExpression	2 + 12 * i		6749349	1		+			
ANR	6749543	PrimaryExpression	2		6749349	0					
ANR	6749544	MultiplicativeExpression	12 * i		6749349	1		*			
ANR	6749545	PrimaryExpression	12		6749349	0					
ANR	6749546	Identifier	i		6749349	1					
ANR	6749547	ExpressionStatement	"read_tif_ifd_entry ( con , ifdoff , & tag , & type , & count )"	452:8:13188:13240	6749349	1	True				
ANR	6749548	CallExpression	"read_tif_ifd_entry ( con , ifdoff , & tag , & type , & count )"		6749349	0					
ANR	6749549	Callee	read_tif_ifd_entry		6749349	0					
ANR	6749550	Identifier	read_tif_ifd_entry		6749349	0					
ANR	6749551	ArgumentList	con		6749349	1					
ANR	6749552	Argument	con		6749349	0					
ANR	6749553	Identifier	con		6749349	0					
ANR	6749554	Argument	ifdoff		6749349	1					
ANR	6749555	Identifier	ifdoff		6749349	0					
ANR	6749556	Argument	& tag		6749349	2					
ANR	6749557	UnaryOperationExpression	& tag		6749349	0					
ANR	6749558	UnaryOperator	&		6749349	0					
ANR	6749559	Identifier	tag		6749349	1					
ANR	6749560	Argument	& type		6749349	3					
ANR	6749561	UnaryOperationExpression	& type		6749349	0					
ANR	6749562	UnaryOperator	&		6749349	0					
ANR	6749563	Identifier	type		6749349	1					
ANR	6749564	Argument	& count		6749349	4					
ANR	6749565	UnaryOperationExpression	& count		6749349	0					
ANR	6749566	UnaryOperator	&		6749349	0					
ANR	6749567	Identifier	count		6749349	1					
ANR	6749568	IdentifierDeclStatement	"uint32_t data = read_tif_datum ( con , type , count , 0 ) ;"	453:8:13250:13301	6749349	2	True				
ANR	6749569	IdentifierDecl	"data = read_tif_datum ( con , type , count , 0 )"		6749349	0					
ANR	6749570	IdentifierDeclType	uint32_t		6749349	0					
ANR	6749571	Identifier	data		6749349	1					
ANR	6749572	AssignmentExpression	"data = read_tif_datum ( con , type , count , 0 )"		6749349	2		=			
ANR	6749573	Identifier	data		6749349	0					
ANR	6749574	CallExpression	"read_tif_datum ( con , type , count , 0 )"		6749349	1					
ANR	6749575	Callee	read_tif_datum		6749349	0					
ANR	6749576	Identifier	read_tif_datum		6749349	0					
ANR	6749577	ArgumentList	con		6749349	1					
ANR	6749578	Argument	con		6749349	0					
ANR	6749579	Identifier	con		6749349	0					
ANR	6749580	Argument	type		6749349	1					
ANR	6749581	Identifier	type		6749349	0					
ANR	6749582	Argument	count		6749349	2					
ANR	6749583	Identifier	count		6749349	0					
ANR	6749584	Argument	0		6749349	3					
ANR	6749585	PrimaryExpression	0		6749349	0					
ANR	6749586	SwitchStatement	switch ( tag )		6749349	3					
ANR	6749587	Condition	tag	454:16:13319:13321	6749349	0	True				
ANR	6749588	Identifier	tag		6749349	0					
ANR	6749589	CompoundStatement		24:21:828:828	6749349	1					
ANR	6749590	Label	case ImageWidth :	455:12:13338:13353	6749349	0	True				
ANR	6749591	Identifier	ImageWidth		6749349	0					
ANR	6749592	ExpressionStatement	con -> wid = data	456:16:13372:13387	6749349	1	True				
ANR	6749593	AssignmentExpression	con -> wid = data		6749349	0		=			
ANR	6749594	PtrMemberAccess	con -> wid		6749349	0					
ANR	6749595	Identifier	con		6749349	0					
ANR	6749596	Identifier	wid		6749349	1					
ANR	6749597	Identifier	data		6749349	1					
ANR	6749598	BreakStatement	break ;	457:16:13406:13411	6749349	2	True				
ANR	6749599	Label	case ImageLength :	458:12:13425:13441	6749349	3	True				
ANR	6749600	Identifier	ImageLength		6749349	0					
ANR	6749601	ExpressionStatement	con -> hei = data	459:16:13460:13475	6749349	4	True				
ANR	6749602	AssignmentExpression	con -> hei = data		6749349	0		=			
ANR	6749603	PtrMemberAccess	con -> hei		6749349	0					
ANR	6749604	Identifier	con		6749349	0					
ANR	6749605	Identifier	hei		6749349	1					
ANR	6749606	Identifier	data		6749349	1					
ANR	6749607	BreakStatement	break ;	460:16:13494:13499	6749349	5	True				
ANR	6749608	Label	case BitsPerSample :	461:12:13513:13531	6749349	6	True				
ANR	6749609	Identifier	BitsPerSample		6749349	0					
ANR	6749610	ExpressionStatement	con -> bpi = data	462:16:13550:13565	6749349	7	True				
ANR	6749611	AssignmentExpression	con -> bpi = data		6749349	0		=			
ANR	6749612	PtrMemberAccess	con -> bpi		6749349	0					
ANR	6749613	Identifier	con		6749349	0					
ANR	6749614	Identifier	bpi		6749349	1					
ANR	6749615	Identifier	data		6749349	1					
ANR	6749616	BreakStatement	break ;	463:16:13583:13588	6749349	8	True				
ANR	6749617	Label	case SamplesPerPixel :	464:12:13602:13622	6749349	9	True				
ANR	6749618	Identifier	SamplesPerPixel		6749349	0					
ANR	6749619	ExpressionStatement	con -> ncomp = data	465:16:13640:13657	6749349	10	True				
ANR	6749620	AssignmentExpression	con -> ncomp = data		6749349	0		=			
ANR	6749621	PtrMemberAccess	con -> ncomp		6749349	0					
ANR	6749622	Identifier	con		6749349	0					
ANR	6749623	Identifier	ncomp		6749349	1					
ANR	6749624	Identifier	data		6749349	1					
ANR	6749625	BreakStatement	break ;	466:16:13676:13681	6749349	11	True				
ANR	6749626	Label	case Compression :	467:12:13695:13711	6749349	12	True				
ANR	6749627	Identifier	Compression		6749349	0					
ANR	6749628	IfStatement	if ( data != 1 )		6749349	13					
ANR	6749629	Condition	data != 1	468:20:13734:13740	6749349	0	True				
ANR	6749630	EqualityExpression	data != 1		6749349	0		!=			
ANR	6749631	Identifier	data		6749349	0					
ANR	6749632	PrimaryExpression	1		6749349	1					
ANR	6749633	ExpressionStatement	"error ( ""TIFF input file %s is compressed"" , con -> name )"	469:20:13763:13815	6749349	1	True				
ANR	6749634	CallExpression	"error ( ""TIFF input file %s is compressed"" , con -> name )"		6749349	0					
ANR	6749635	Callee	error		6749349	0					
ANR	6749636	Identifier	error		6749349	0					
ANR	6749637	ArgumentList	"""TIFF input file %s is compressed"""		6749349	1					
ANR	6749638	Argument	"""TIFF input file %s is compressed"""		6749349	0					
ANR	6749639	PrimaryExpression	"""TIFF input file %s is compressed"""		6749349	0					
ANR	6749640	Argument	con -> name		6749349	1					
ANR	6749641	PtrMemberAccess	con -> name		6749349	0					
ANR	6749642	Identifier	con		6749349	0					
ANR	6749643	Identifier	name		6749349	1					
ANR	6749644	BreakStatement	break ;	470:16:13834:13839	6749349	14	True				
ANR	6749645	Label	case StripOffsets :	471:12:13853:13870	6749349	15	True				
ANR	6749646	Identifier	StripOffsets		6749349	0					
ANR	6749647	ExpressionStatement	con -> nstrips = count	472:16:13889:13909	6749349	16	True				
ANR	6749648	AssignmentExpression	con -> nstrips = count		6749349	0		=			
ANR	6749649	PtrMemberAccess	con -> nstrips		6749349	0					
ANR	6749650	Identifier	con		6749349	0					
ANR	6749651	Identifier	nstrips		6749349	1					
ANR	6749652	Identifier	count		6749349	1					
ANR	6749653	ExpressionStatement	con -> offoff = ifdoff	473:16:13927:13947	6749349	17	True				
ANR	6749654	AssignmentExpression	con -> offoff = ifdoff		6749349	0		=			
ANR	6749655	PtrMemberAccess	con -> offoff		6749349	0					
ANR	6749656	Identifier	con		6749349	0					
ANR	6749657	Identifier	offoff		6749349	1					
ANR	6749658	Identifier	ifdoff		6749349	1					
ANR	6749659	BreakStatement	break ;	474:16:13966:13971	6749349	18	True				
ANR	6749660	Label	case RowsPerStrip :	475:12:13985:14002	6749349	19	True				
ANR	6749661	Identifier	RowsPerStrip		6749349	0					
ANR	6749662	ExpressionStatement	con -> nlines = data	476:16:14021:14039	6749349	20	True				
ANR	6749663	AssignmentExpression	con -> nlines = data		6749349	0		=			
ANR	6749664	PtrMemberAccess	con -> nlines		6749349	0					
ANR	6749665	Identifier	con		6749349	0					
ANR	6749666	Identifier	nlines		6749349	1					
ANR	6749667	Identifier	data		6749349	1					
ANR	6749668	BreakStatement	break ;	477:16:14057:14062	6749349	21	True				
ANR	6749669	Label	case SampleFormat :	478:12:14076:14093	6749349	22	True				
ANR	6749670	Identifier	SampleFormat		6749349	0					
ANR	6749671	ExpressionStatement	con -> sf = data	479:16:14111:14125	6749349	23	True				
ANR	6749672	AssignmentExpression	con -> sf = data		6749349	0		=			
ANR	6749673	PtrMemberAccess	con -> sf		6749349	0					
ANR	6749674	Identifier	con		6749349	0					
ANR	6749675	Identifier	sf		6749349	1					
ANR	6749676	Identifier	data		6749349	1					
ANR	6749677	BreakStatement	break ;	480:16:14144:14149	6749349	24	True				
ANR	6749678	Label	case Photometric :	481:12:14164:14180	6749349	25	True				
ANR	6749679	Identifier	Photometric		6749349	0					
ANR	6749680	ExpressionStatement	con -> photometric = data	482:16:14198:14221	6749349	26	True				
ANR	6749681	AssignmentExpression	con -> photometric = data		6749349	0		=			
ANR	6749682	PtrMemberAccess	con -> photometric		6749349	0					
ANR	6749683	Identifier	con		6749349	0					
ANR	6749684	Identifier	photometric		6749349	1					
ANR	6749685	Identifier	data		6749349	1					
ANR	6749686	BreakStatement	break ;	483:16:14240:14245	6749349	27	True				
ANR	6749687	IfStatement	if ( con -> wid <= 0 )		6749349	12					
ANR	6749688	Condition	con -> wid <= 0	488:8:14274:14284	6749349	0	True				
ANR	6749689	RelationalExpression	con -> wid <= 0		6749349	0		<=			
ANR	6749690	PtrMemberAccess	con -> wid		6749349	0					
ANR	6749691	Identifier	con		6749349	0					
ANR	6749692	Identifier	wid		6749349	1					
ANR	6749693	PrimaryExpression	0		6749349	1					
ANR	6749694	ExpressionStatement	"error ( ""valid ImageWidth entry not found in directory of TIFF file %s"" , con -> name )"	489:8:14295:14376	6749349	1	True				
ANR	6749695	CallExpression	"error ( ""valid ImageWidth entry not found in directory of TIFF file %s"" , con -> name )"		6749349	0					
ANR	6749696	Callee	error		6749349	0					
ANR	6749697	Identifier	error		6749349	0					
ANR	6749698	ArgumentList	"""valid ImageWidth entry not found in directory of TIFF file %s"""		6749349	1					
ANR	6749699	Argument	"""valid ImageWidth entry not found in directory of TIFF file %s"""		6749349	0					
ANR	6749700	PrimaryExpression	"""valid ImageWidth entry not found in directory of TIFF file %s"""		6749349	0					
ANR	6749701	Argument	con -> name		6749349	1					
ANR	6749702	PtrMemberAccess	con -> name		6749349	0					
ANR	6749703	Identifier	con		6749349	0					
ANR	6749704	Identifier	name		6749349	1					
ANR	6749705	IfStatement	if ( con -> hei <= 0 )		6749349	13					
ANR	6749706	Condition	con -> hei <= 0	490:8:14386:14396	6749349	0	True				
ANR	6749707	RelationalExpression	con -> hei <= 0		6749349	0		<=			
ANR	6749708	PtrMemberAccess	con -> hei		6749349	0					
ANR	6749709	Identifier	con		6749349	0					
ANR	6749710	Identifier	hei		6749349	1					
ANR	6749711	PrimaryExpression	0		6749349	1					
ANR	6749712	ExpressionStatement	"error ( ""valid ImageLength entry not found in directory of TIFF file %s"" , con -> name )"	491:8:14407:14489	6749349	1	True				
ANR	6749713	CallExpression	"error ( ""valid ImageLength entry not found in directory of TIFF file %s"" , con -> name )"		6749349	0					
ANR	6749714	Callee	error		6749349	0					
ANR	6749715	Identifier	error		6749349	0					
ANR	6749716	ArgumentList	"""valid ImageLength entry not found in directory of TIFF file %s"""		6749349	1					
ANR	6749717	Argument	"""valid ImageLength entry not found in directory of TIFF file %s"""		6749349	0					
ANR	6749718	PrimaryExpression	"""valid ImageLength entry not found in directory of TIFF file %s"""		6749349	0					
ANR	6749719	Argument	con -> name		6749349	1					
ANR	6749720	PtrMemberAccess	con -> name		6749349	0					
ANR	6749721	Identifier	con		6749349	0					
ANR	6749722	Identifier	name		6749349	1					
ANR	6749723	IfStatement	if ( con -> ncomp != 1 && con -> ncomp != 3 && con -> ncomp != 4 && con -> ncomp != 5 )		6749349	14					
ANR	6749724	Condition	con -> ncomp != 1 && con -> ncomp != 3 && con -> ncomp != 4 && con -> ncomp != 5	492:8:14499:14562	6749349	0	True				
ANR	6749725	AndExpression	con -> ncomp != 1 && con -> ncomp != 3 && con -> ncomp != 4 && con -> ncomp != 5		6749349	0		&&			
ANR	6749726	EqualityExpression	con -> ncomp != 1		6749349	0		!=			
ANR	6749727	PtrMemberAccess	con -> ncomp		6749349	0					
ANR	6749728	Identifier	con		6749349	0					
ANR	6749729	Identifier	ncomp		6749349	1					
ANR	6749730	PrimaryExpression	1		6749349	1					
ANR	6749731	AndExpression	con -> ncomp != 3 && con -> ncomp != 4 && con -> ncomp != 5		6749349	1		&&			
ANR	6749732	EqualityExpression	con -> ncomp != 3		6749349	0		!=			
ANR	6749733	PtrMemberAccess	con -> ncomp		6749349	0					
ANR	6749734	Identifier	con		6749349	0					
ANR	6749735	Identifier	ncomp		6749349	1					
ANR	6749736	PrimaryExpression	3		6749349	1					
ANR	6749737	AndExpression	con -> ncomp != 4 && con -> ncomp != 5		6749349	1		&&			
ANR	6749738	EqualityExpression	con -> ncomp != 4		6749349	0		!=			
ANR	6749739	PtrMemberAccess	con -> ncomp		6749349	0					
ANR	6749740	Identifier	con		6749349	0					
ANR	6749741	Identifier	ncomp		6749349	1					
ANR	6749742	PrimaryExpression	4		6749349	1					
ANR	6749743	EqualityExpression	con -> ncomp != 5		6749349	1		!=			
ANR	6749744	PtrMemberAccess	con -> ncomp		6749349	0					
ANR	6749745	Identifier	con		6749349	0					
ANR	6749746	Identifier	ncomp		6749349	1					
ANR	6749747	PrimaryExpression	5		6749349	1					
ANR	6749748	ExpressionStatement	"error ( ""valid SamplesPerPixel entry (1, 3, 4, or 5) not found in directory of TIFF file %s"" , con -> name )"	493:8:14573:14675	6749349	1	True				
ANR	6749749	CallExpression	"error ( ""valid SamplesPerPixel entry (1, 3, 4, or 5) not found in directory of TIFF file %s"" , con -> name )"		6749349	0					
ANR	6749750	Callee	error		6749349	0					
ANR	6749751	Identifier	error		6749349	0					
ANR	6749752	ArgumentList	"""valid SamplesPerPixel entry (1, 3, 4, or 5) not found in directory of TIFF file %s"""		6749349	1					
ANR	6749753	Argument	"""valid SamplesPerPixel entry (1, 3, 4, or 5) not found in directory of TIFF file %s"""		6749349	0					
ANR	6749754	PrimaryExpression	"""valid SamplesPerPixel entry (1, 3, 4, or 5) not found in directory of TIFF file %s"""		6749349	0					
ANR	6749755	Argument	con -> name		6749349	1					
ANR	6749756	PtrMemberAccess	con -> name		6749349	0					
ANR	6749757	Identifier	con		6749349	0					
ANR	6749758	Identifier	name		6749349	1					
ANR	6749759	IfStatement	if ( con -> bpi > 32 )		6749349	15					
ANR	6749760	Condition	con -> bpi > 32	494:8:14685:14695	6749349	0	True				
ANR	6749761	RelationalExpression	con -> bpi > 32		6749349	0		>			
ANR	6749762	PtrMemberAccess	con -> bpi		6749349	0					
ANR	6749763	Identifier	con		6749349	0					
ANR	6749764	Identifier	bpi		6749349	1					
ANR	6749765	PrimaryExpression	32		6749349	1					
ANR	6749766	ExpressionStatement	"error ( ""valid BitsPerSample entry not found in directory of TIFF file %s"" , con -> name )"	495:8:14706:14790	6749349	1	True				
ANR	6749767	CallExpression	"error ( ""valid BitsPerSample entry not found in directory of TIFF file %s"" , con -> name )"		6749349	0					
ANR	6749768	Callee	error		6749349	0					
ANR	6749769	Identifier	error		6749349	0					
ANR	6749770	ArgumentList	"""valid BitsPerSample entry not found in directory of TIFF file %s"""		6749349	1					
ANR	6749771	Argument	"""valid BitsPerSample entry not found in directory of TIFF file %s"""		6749349	0					
ANR	6749772	PrimaryExpression	"""valid BitsPerSample entry not found in directory of TIFF file %s"""		6749349	0					
ANR	6749773	Argument	con -> name		6749349	1					
ANR	6749774	PtrMemberAccess	con -> name		6749349	0					
ANR	6749775	Identifier	con		6749349	0					
ANR	6749776	Identifier	name		6749349	1					
ANR	6749777	IfStatement	if ( con -> nstrips <= 0 || con -> offoff == 0 )		6749349	16					
ANR	6749778	Condition	con -> nstrips <= 0 || con -> offoff == 0	496:8:14800:14832	6749349	0	True				
ANR	6749779	OrExpression	con -> nstrips <= 0 || con -> offoff == 0		6749349	0		||			
ANR	6749780	RelationalExpression	con -> nstrips <= 0		6749349	0		<=			
ANR	6749781	PtrMemberAccess	con -> nstrips		6749349	0					
ANR	6749782	Identifier	con		6749349	0					
ANR	6749783	Identifier	nstrips		6749349	1					
ANR	6749784	PrimaryExpression	0		6749349	1					
ANR	6749785	EqualityExpression	con -> offoff == 0		6749349	1		==			
ANR	6749786	PtrMemberAccess	con -> offoff		6749349	0					
ANR	6749787	Identifier	con		6749349	0					
ANR	6749788	Identifier	offoff		6749349	1					
ANR	6749789	PrimaryExpression	0		6749349	1					
ANR	6749790	ExpressionStatement	"error ( ""valid StripOffsets entry not found in directory of TIFF file %s"" , con -> name )"	497:8:14843:14926	6749349	1	True				
ANR	6749791	CallExpression	"error ( ""valid StripOffsets entry not found in directory of TIFF file %s"" , con -> name )"		6749349	0					
ANR	6749792	Callee	error		6749349	0					
ANR	6749793	Identifier	error		6749349	0					
ANR	6749794	ArgumentList	"""valid StripOffsets entry not found in directory of TIFF file %s"""		6749349	1					
ANR	6749795	Argument	"""valid StripOffsets entry not found in directory of TIFF file %s"""		6749349	0					
ANR	6749796	PrimaryExpression	"""valid StripOffsets entry not found in directory of TIFF file %s"""		6749349	0					
ANR	6749797	Argument	con -> name		6749349	1					
ANR	6749798	PtrMemberAccess	con -> name		6749349	0					
ANR	6749799	Identifier	con		6749349	0					
ANR	6749800	Identifier	name		6749349	1					
ANR	6749801	IfStatement	if ( con -> nlines <= 0 )		6749349	17					
ANR	6749802	Condition	con -> nlines <= 0	498:8:14936:14949	6749349	0	True				
ANR	6749803	RelationalExpression	con -> nlines <= 0		6749349	0		<=			
ANR	6749804	PtrMemberAccess	con -> nlines		6749349	0					
ANR	6749805	Identifier	con		6749349	0					
ANR	6749806	Identifier	nlines		6749349	1					
ANR	6749807	PrimaryExpression	0		6749349	1					
ANR	6749808	ExpressionStatement	"error ( ""valid RowsPerStrip entry not found in directory of TIFF file %s"" , con -> name )"	499:8:14960:15043	6749349	1	True				
ANR	6749809	CallExpression	"error ( ""valid RowsPerStrip entry not found in directory of TIFF file %s"" , con -> name )"		6749349	0					
ANR	6749810	Callee	error		6749349	0					
ANR	6749811	Identifier	error		6749349	0					
ANR	6749812	ArgumentList	"""valid RowsPerStrip entry not found in directory of TIFF file %s"""		6749349	1					
ANR	6749813	Argument	"""valid RowsPerStrip entry not found in directory of TIFF file %s"""		6749349	0					
ANR	6749814	PrimaryExpression	"""valid RowsPerStrip entry not found in directory of TIFF file %s"""		6749349	0					
ANR	6749815	Argument	con -> name		6749349	1					
ANR	6749816	PtrMemberAccess	con -> name		6749349	0					
ANR	6749817	Identifier	con		6749349	0					
ANR	6749818	Identifier	name		6749349	1					
ANR	6749819	ExpressionStatement	con -> line = con -> nlines	500:4:15049:15072	6749349	18	True				
ANR	6749820	AssignmentExpression	con -> line = con -> nlines		6749349	0		=			
ANR	6749821	PtrMemberAccess	con -> line		6749349	0					
ANR	6749822	Identifier	con		6749349	0					
ANR	6749823	Identifier	line		6749349	1					
ANR	6749824	PtrMemberAccess	con -> nlines		6749349	1					
ANR	6749825	Identifier	con		6749349	0					
ANR	6749826	Identifier	nlines		6749349	1					
ANR	6749827	ReturnType	static void		6749349	1					
ANR	6749828	Identifier	open_tif_input_file		6749349	2					
ANR	6749829	ParameterList	context * con		6749349	3					
ANR	6749830	Parameter	context * con	430:32:12481:12492	6749349	0	True				
ANR	6749831	ParameterType	context *		6749349	0					
ANR	6749832	Identifier	con		6749349	1					
ANR	6749833	CFGEntryNode	ENTRY		6749349		True				
ANR	6749834	CFGExitNode	EXIT		6749349		True				
ANR	6749835	Symbol	magic		6749349						
ANR	6749836	Symbol	con		6749349						
ANR	6749837	Symbol	data		6749349						
ANR	6749838	Symbol	con -> ncomp		6749349						
ANR	6749839	Symbol	& magic		6749349						
ANR	6749840	Symbol	& tag		6749349						
ANR	6749841	Symbol	& one		6749349						
ANR	6749842	Symbol	type		6749349						
ANR	6749843	Symbol	con -> swap		6749349						
ANR	6749844	Symbol	ifdoff		6749349						
ANR	6749845	Symbol	& nentry		6749349						
ANR	6749846	Symbol	* con		6749349						
ANR	6749847	Symbol	con -> bpi		6749349						
ANR	6749848	Symbol	con -> nlines		6749349						
ANR	6749849	Symbol	read_tif_datum		6749349						
ANR	6749850	Symbol	* ( char * ) & one		6749349						
ANR	6749851	Symbol	con -> photometric		6749349						
ANR	6749852	Symbol	tag		6749349						
ANR	6749853	Symbol	con -> nstrips		6749349						
ANR	6749854	Symbol	con -> wid		6749349						
ANR	6749855	Symbol	SEEK_SET		6749349						
ANR	6749856	Symbol	diroff		6749349						
ANR	6749857	Symbol	con -> file		6749349						
ANR	6749858	Symbol	con -> hei		6749349						
ANR	6749859	Symbol	& type		6749349						
ANR	6749860	Symbol	con -> offoff		6749349						
ANR	6749861	Symbol	one		6749349						
ANR	6749862	Symbol	count		6749349						
ANR	6749863	Symbol	i		6749349						
ANR	6749864	Symbol	& diroff		6749349						
ANR	6749865	Symbol	con -> name		6749349						
ANR	6749866	Symbol	con -> line		6749349						
ANR	6749867	Symbol	& count		6749349						
ANR	6749868	Symbol	nentry		6749349						
ANR	6749869	Symbol	con -> sf		6749349						
ANR	6749870	Function	put_ifd_entry	504:0:15078:15380							
ANR	6749871	FunctionDef	"put_ifd_entry (context * con , int tag , int type , int count , uint32_t offset)"		6749870	0					
ANR	6749872	CompoundStatement		505:0:15165:15380	6749870	0					
ANR	6749873	ExpressionStatement	"put_uint16 ( con , tag )"	506:4:15171:15191	6749870	0	True				
ANR	6749874	CallExpression	"put_uint16 ( con , tag )"		6749870	0					
ANR	6749875	Callee	put_uint16		6749870	0					
ANR	6749876	Identifier	put_uint16		6749870	0					
ANR	6749877	ArgumentList	con		6749870	1					
ANR	6749878	Argument	con		6749870	0					
ANR	6749879	Identifier	con		6749870	0					
ANR	6749880	Argument	tag		6749870	1					
ANR	6749881	Identifier	tag		6749870	0					
ANR	6749882	ExpressionStatement	"put_uint16 ( con , type )"	507:4:15197:15218	6749870	1	True				
ANR	6749883	CallExpression	"put_uint16 ( con , type )"		6749870	0					
ANR	6749884	Callee	put_uint16		6749870	0					
ANR	6749885	Identifier	put_uint16		6749870	0					
ANR	6749886	ArgumentList	con		6749870	1					
ANR	6749887	Argument	con		6749870	0					
ANR	6749888	Identifier	con		6749870	0					
ANR	6749889	Argument	type		6749870	1					
ANR	6749890	Identifier	type		6749870	0					
ANR	6749891	ExpressionStatement	"put_uint32 ( con , count )"	508:4:15224:15246	6749870	2	True				
ANR	6749892	CallExpression	"put_uint32 ( con , count )"		6749870	0					
ANR	6749893	Callee	put_uint32		6749870	0					
ANR	6749894	Identifier	put_uint32		6749870	0					
ANR	6749895	ArgumentList	con		6749870	1					
ANR	6749896	Argument	con		6749870	0					
ANR	6749897	Identifier	con		6749870	0					
ANR	6749898	Argument	count		6749870	1					
ANR	6749899	Identifier	count		6749870	0					
ANR	6749900	IfStatement	if ( type == 3 && count == 1 )		6749870	3					
ANR	6749901	Condition	type == 3 && count == 1	509:8:15256:15274	6749870	0	True				
ANR	6749902	AndExpression	type == 3 && count == 1		6749870	0		&&			
ANR	6749903	EqualityExpression	type == 3		6749870	0		==			
ANR	6749904	Identifier	type		6749870	0					
ANR	6749905	PrimaryExpression	3		6749870	1					
ANR	6749906	EqualityExpression	count == 1		6749870	1		==			
ANR	6749907	Identifier	count		6749870	0					
ANR	6749908	PrimaryExpression	1		6749870	1					
ANR	6749909	CompoundStatement		5:29:111:111	6749870	1					
ANR	6749910	ExpressionStatement	"put_uint16 ( con , offset )"	510:8:15287:15310	6749870	0	True				
ANR	6749911	CallExpression	"put_uint16 ( con , offset )"		6749870	0					
ANR	6749912	Callee	put_uint16		6749870	0					
ANR	6749913	Identifier	put_uint16		6749870	0					
ANR	6749914	ArgumentList	con		6749870	1					
ANR	6749915	Argument	con		6749870	0					
ANR	6749916	Identifier	con		6749870	0					
ANR	6749917	Argument	offset		6749870	1					
ANR	6749918	Identifier	offset		6749870	0					
ANR	6749919	ExpressionStatement	"put_uint16 ( con , 0 )"	511:8:15320:15338	6749870	1	True				
ANR	6749920	CallExpression	"put_uint16 ( con , 0 )"		6749870	0					
ANR	6749921	Callee	put_uint16		6749870	0					
ANR	6749922	Identifier	put_uint16		6749870	0					
ANR	6749923	ArgumentList	con		6749870	1					
ANR	6749924	Argument	con		6749870	0					
ANR	6749925	Identifier	con		6749870	0					
ANR	6749926	Argument	0		6749870	1					
ANR	6749927	PrimaryExpression	0		6749870	0					
ANR	6749928	ElseStatement	else		6749870	0					
ANR	6749929	ExpressionStatement	"put_uint32 ( con , offset )"	513:9:15355:15378	6749870	0	True				
ANR	6749930	CallExpression	"put_uint32 ( con , offset )"		6749870	0					
ANR	6749931	Callee	put_uint32		6749870	0					
ANR	6749932	Identifier	put_uint32		6749870	0					
ANR	6749933	ArgumentList	con		6749870	1					
ANR	6749934	Argument	con		6749870	0					
ANR	6749935	Identifier	con		6749870	0					
ANR	6749936	Argument	offset		6749870	1					
ANR	6749937	Identifier	offset		6749870	0					
ANR	6749938	ReturnType	static void		6749870	1					
ANR	6749939	Identifier	put_ifd_entry		6749870	2					
ANR	6749940	ParameterList	"context * con , int tag , int type , int count , uint32_t offset"		6749870	3					
ANR	6749941	Parameter	context * con	504:26:15104:15115	6749870	0	True				
ANR	6749942	ParameterType	context *		6749870	0					
ANR	6749943	Identifier	con		6749870	1					
ANR	6749944	Parameter	int tag	504:40:15118:15124	6749870	1	True				
ANR	6749945	ParameterType	int		6749870	0					
ANR	6749946	Identifier	tag		6749870	1					
ANR	6749947	Parameter	int type	504:49:15127:15134	6749870	2	True				
ANR	6749948	ParameterType	int		6749870	0					
ANR	6749949	Identifier	type		6749870	1					
ANR	6749950	Parameter	int count	504:59:15137:15145	6749870	3	True				
ANR	6749951	ParameterType	int		6749870	0					
ANR	6749952	Identifier	count		6749870	1					
ANR	6749953	Parameter	uint32_t offset	504:70:15148:15162	6749870	4	True				
ANR	6749954	ParameterType	uint32_t		6749870	0					
ANR	6749955	Identifier	offset		6749870	1					
ANR	6749956	CFGEntryNode	ENTRY		6749870		True				
ANR	6749957	CFGExitNode	EXIT		6749870		True				
ANR	6749958	Symbol	con		6749870						
ANR	6749959	Symbol	offset		6749870						
ANR	6749960	Symbol	count		6749870						
ANR	6749961	Symbol	tag		6749870						
ANR	6749962	Symbol	type		6749870						
ANR	6749963	Function	validate_tif_output	516:0:15383:18959							
ANR	6749964	FunctionDef	validate_tif_output (jxrc_t_pixelFormat ePixelFormat)		6749963	0					
ANR	6749965	CompoundStatement		517:0:15449:18959	6749963	0					
ANR	6749966	SwitchStatement	switch ( ePixelFormat )		6749963	0					
ANR	6749967	Condition	ePixelFormat	518:11:15462:15473	6749963	0	True				
ANR	6749968	Identifier	ePixelFormat		6749963	0					
ANR	6749969	CompoundStatement		3:4:30:30	6749963	1					
ANR	6749970	Label	case JXRC_FMT_24bppRGB :	520:4:15486:15508	6749963	0	True				
ANR	6749971	Identifier	JXRC_FMT_24bppRGB		6749963	0					
ANR	6749972	ReturnStatement	return 1 ;	520:27:15509:15517	6749963	1	True				
ANR	6749973	PrimaryExpression	1		6749963	0					
ANR	6749974	Label	case JXRC_FMT_24bppBGR :	521:4:15523:15545	6749963	2	True				
ANR	6749975	Identifier	JXRC_FMT_24bppBGR		6749963	0					
ANR	6749976	ReturnStatement	return 0 ;	521:28:15547:15555	6749963	3	True				
ANR	6749977	PrimaryExpression	0		6749963	0					
ANR	6749978	Label	case JXRC_FMT_32bppBGR :	522:4:15561:15583	6749963	4	True				
ANR	6749979	Identifier	JXRC_FMT_32bppBGR		6749963	0					
ANR	6749980	ReturnStatement	return 0 ;	522:27:15584:15592	6749963	5	True				
ANR	6749981	PrimaryExpression	0		6749963	0					
ANR	6749982	Label	case JXRC_FMT_48bppRGB :	523:4:15598:15620	6749963	6	True				
ANR	6749983	Identifier	JXRC_FMT_48bppRGB		6749963	0					
ANR	6749984	ReturnStatement	return 1 ;	523:27:15621:15629	6749963	7	True				
ANR	6749985	PrimaryExpression	1		6749963	0					
ANR	6749986	Label	case JXRC_FMT_48bppRGBFixedPoint :	524:4:15635:15667	6749963	8	True				
ANR	6749987	Identifier	JXRC_FMT_48bppRGBFixedPoint		6749963	0					
ANR	6749988	ReturnStatement	return 1 ;	524:38:15669:15677	6749963	9	True				
ANR	6749989	PrimaryExpression	1		6749963	0					
ANR	6749990	Label	case JXRC_FMT_48bppRGBHalf :	525:4:15683:15709	6749963	10	True				
ANR	6749991	Identifier	JXRC_FMT_48bppRGBHalf		6749963	0					
ANR	6749992	ReturnStatement	return 1 ;	525:32:15711:15719	6749963	11	True				
ANR	6749993	PrimaryExpression	1		6749963	0					
ANR	6749994	Label	case JXRC_FMT_96bppRGBFixedPoint :	526:4:15725:15757	6749963	12	True				
ANR	6749995	Identifier	JXRC_FMT_96bppRGBFixedPoint		6749963	0					
ANR	6749996	ReturnStatement	return 1 ;	526:37:15758:15766	6749963	13	True				
ANR	6749997	PrimaryExpression	1		6749963	0					
ANR	6749998	Label	case JXRC_FMT_64bppRGBFixedPoint :	527:4:15772:15804	6749963	14	True				
ANR	6749999	Identifier	JXRC_FMT_64bppRGBFixedPoint		6749963	0					
ANR	6750000	ReturnStatement	return 1 ;	527:37:15805:15813	6749963	15	True				
ANR	6750001	PrimaryExpression	1		6749963	0					
ANR	6750002	Label	case JXRC_FMT_64bppRGBHalf :	528:4:15819:15845	6749963	16	True				
ANR	6750003	Identifier	JXRC_FMT_64bppRGBHalf		6749963	0					
ANR	6750004	ReturnStatement	return 1 ;	528:31:15846:15854	6749963	17	True				
ANR	6750005	PrimaryExpression	1		6749963	0					
ANR	6750006	Label	case JXRC_FMT_128bppRGBFixedPoint :	529:4:15860:15893	6749963	18	True				
ANR	6750007	Identifier	JXRC_FMT_128bppRGBFixedPoint		6749963	0					
ANR	6750008	ReturnStatement	return 1 ;	529:38:15894:15902	6749963	19	True				
ANR	6750009	PrimaryExpression	1		6749963	0					
ANR	6750010	Label	case JXRC_FMT_128bppRGBFloat :	530:4:15908:15936	6749963	20	True				
ANR	6750011	Identifier	JXRC_FMT_128bppRGBFloat		6749963	0					
ANR	6750012	ReturnStatement	return 1 ;	530:33:15937:15945	6749963	21	True				
ANR	6750013	PrimaryExpression	1		6749963	0					
ANR	6750014	Label	case JXRC_FMT_32bppBGRA :	531:4:15951:15974	6749963	22	True				
ANR	6750015	Identifier	JXRC_FMT_32bppBGRA		6749963	0					
ANR	6750016	ReturnStatement	return 0 ;	531:28:15975:15983	6749963	23	True				
ANR	6750017	PrimaryExpression	0		6749963	0					
ANR	6750018	Label	case JXRC_FMT_64bppRGBA :	532:4:15989:16012	6749963	24	True				
ANR	6750019	Identifier	JXRC_FMT_64bppRGBA		6749963	0					
ANR	6750020	ReturnStatement	return 1 ;	532:28:16013:16021	6749963	25	True				
ANR	6750021	PrimaryExpression	1		6749963	0					
ANR	6750022	Label	case JXRC_FMT_64bppRGBAFixedPoint :	533:4:16027:16060	6749963	26	True				
ANR	6750023	Identifier	JXRC_FMT_64bppRGBAFixedPoint		6749963	0					
ANR	6750024	ReturnStatement	return 1 ;	533:38:16061:16069	6749963	27	True				
ANR	6750025	PrimaryExpression	1		6749963	0					
ANR	6750026	Label	case JXRC_FMT_64bppRGBAHalf :	534:4:16075:16102	6749963	28	True				
ANR	6750027	Identifier	JXRC_FMT_64bppRGBAHalf		6749963	0					
ANR	6750028	ReturnStatement	return 1 ;	534:32:16103:16111	6749963	29	True				
ANR	6750029	PrimaryExpression	1		6749963	0					
ANR	6750030	Label	case JXRC_FMT_128bppRGBAFixedPoint :	535:4:16117:16151	6749963	30	True				
ANR	6750031	Identifier	JXRC_FMT_128bppRGBAFixedPoint		6749963	0					
ANR	6750032	ReturnStatement	return 1 ;	535:39:16152:16160	6749963	31	True				
ANR	6750033	PrimaryExpression	1		6749963	0					
ANR	6750034	Label	case JXRC_FMT_128bppRGBAFloat :	536:4:16166:16195	6749963	32	True				
ANR	6750035	Identifier	JXRC_FMT_128bppRGBAFloat		6749963	0					
ANR	6750036	ReturnStatement	return 1 ;	536:34:16196:16204	6749963	33	True				
ANR	6750037	PrimaryExpression	1		6749963	0					
ANR	6750038	Label	case JXRC_FMT_32bppPBGRA :	537:4:16210:16234	6749963	34	True				
ANR	6750039	Identifier	JXRC_FMT_32bppPBGRA		6749963	0					
ANR	6750040	ReturnStatement	return 0 ;	537:29:16235:16243	6749963	35	True				
ANR	6750041	PrimaryExpression	0		6749963	0					
ANR	6750042	Label	case JXRC_FMT_64bppPRGBA :	538:4:16249:16273	6749963	36	True				
ANR	6750043	Identifier	JXRC_FMT_64bppPRGBA		6749963	0					
ANR	6750044	ReturnStatement	return 0 ;	538:29:16274:16282	6749963	37	True				
ANR	6750045	PrimaryExpression	0		6749963	0					
ANR	6750046	Label	case JXRC_FMT_128bppPRGBAFloat :	539:4:16288:16318	6749963	38	True				
ANR	6750047	Identifier	JXRC_FMT_128bppPRGBAFloat		6749963	0					
ANR	6750048	ReturnStatement	return 0 ;	539:35:16319:16327	6749963	39	True				
ANR	6750049	PrimaryExpression	0		6749963	0					
ANR	6750050	Label	case JXRC_FMT_32bppCMYK :	540:4:16333:16356	6749963	40	True				
ANR	6750051	Identifier	JXRC_FMT_32bppCMYK		6749963	0					
ANR	6750052	ReturnStatement	return 1 ;	540:28:16357:16365	6749963	41	True				
ANR	6750053	PrimaryExpression	1		6749963	0					
ANR	6750054	Label	case JXRC_FMT_40bppCMYKAlpha :	541:4:16371:16399	6749963	42	True				
ANR	6750055	Identifier	JXRC_FMT_40bppCMYKAlpha		6749963	0					
ANR	6750056	ReturnStatement	return 1 ;	541:33:16400:16408	6749963	43	True				
ANR	6750057	PrimaryExpression	1		6749963	0					
ANR	6750058	Label	case JXRC_FMT_64bppCMYK :	542:4:16414:16437	6749963	44	True				
ANR	6750059	Identifier	JXRC_FMT_64bppCMYK		6749963	0					
ANR	6750060	ReturnStatement	return 1 ;	542:28:16438:16446	6749963	45	True				
ANR	6750061	PrimaryExpression	1		6749963	0					
ANR	6750062	Label	case JXRC_FMT_80bppCMYKAlpha :	543:4:16452:16480	6749963	46	True				
ANR	6750063	Identifier	JXRC_FMT_80bppCMYKAlpha		6749963	0					
ANR	6750064	ReturnStatement	return 1 ;	543:33:16481:16489	6749963	47	True				
ANR	6750065	PrimaryExpression	1		6749963	0					
ANR	6750066	Label	case JXRC_FMT_24bpp3Channels :	544:4:16495:16523	6749963	48	True				
ANR	6750067	Identifier	JXRC_FMT_24bpp3Channels		6749963	0					
ANR	6750068	ReturnStatement	return 0 ;	544:33:16524:16532	6749963	49	True				
ANR	6750069	PrimaryExpression	0		6749963	0					
ANR	6750070	Label	case JXRC_FMT_32bpp4Channels :	545:4:16538:16566	6749963	50	True				
ANR	6750071	Identifier	JXRC_FMT_32bpp4Channels		6749963	0					
ANR	6750072	ReturnStatement	return 0 ;	545:33:16567:16575	6749963	51	True				
ANR	6750073	PrimaryExpression	0		6749963	0					
ANR	6750074	Label	case JXRC_FMT_40bpp5Channels :	546:4:16581:16609	6749963	52	True				
ANR	6750075	Identifier	JXRC_FMT_40bpp5Channels		6749963	0					
ANR	6750076	ReturnStatement	return 0 ;	546:33:16610:16618	6749963	53	True				
ANR	6750077	PrimaryExpression	0		6749963	0					
ANR	6750078	Label	case JXRC_FMT_48bpp6Channels :	547:4:16624:16652	6749963	54	True				
ANR	6750079	Identifier	JXRC_FMT_48bpp6Channels		6749963	0					
ANR	6750080	ReturnStatement	return 0 ;	547:33:16653:16661	6749963	55	True				
ANR	6750081	PrimaryExpression	0		6749963	0					
ANR	6750082	Label	case JXRC_FMT_56bpp7Channels :	548:4:16667:16695	6749963	56	True				
ANR	6750083	Identifier	JXRC_FMT_56bpp7Channels		6749963	0					
ANR	6750084	ReturnStatement	return 0 ;	548:33:16696:16704	6749963	57	True				
ANR	6750085	PrimaryExpression	0		6749963	0					
ANR	6750086	Label	case JXRC_FMT_64bpp8Channels :	549:4:16710:16738	6749963	58	True				
ANR	6750087	Identifier	JXRC_FMT_64bpp8Channels		6749963	0					
ANR	6750088	ReturnStatement	return 0 ;	549:33:16739:16747	6749963	59	True				
ANR	6750089	PrimaryExpression	0		6749963	0					
ANR	6750090	Label	case JXRC_FMT_32bpp3ChannelsAlpha :	550:4:16753:16786	6749963	60	True				
ANR	6750091	Identifier	JXRC_FMT_32bpp3ChannelsAlpha		6749963	0					
ANR	6750092	ReturnStatement	return 0 ;	550:38:16787:16795	6749963	61	True				
ANR	6750093	PrimaryExpression	0		6749963	0					
ANR	6750094	Label	case JXRC_FMT_40bpp4ChannelsAlpha :	551:4:16801:16834	6749963	62	True				
ANR	6750095	Identifier	JXRC_FMT_40bpp4ChannelsAlpha		6749963	0					
ANR	6750096	ReturnStatement	return 0 ;	551:38:16835:16843	6749963	63	True				
ANR	6750097	PrimaryExpression	0		6749963	0					
ANR	6750098	Label	case JXRC_FMT_48bpp5ChannelsAlpha :	552:4:16849:16882	6749963	64	True				
ANR	6750099	Identifier	JXRC_FMT_48bpp5ChannelsAlpha		6749963	0					
ANR	6750100	ReturnStatement	return 0 ;	552:38:16883:16891	6749963	65	True				
ANR	6750101	PrimaryExpression	0		6749963	0					
ANR	6750102	Label	case JXRC_FMT_56bpp6ChannelsAlpha :	553:4:16897:16930	6749963	66	True				
ANR	6750103	Identifier	JXRC_FMT_56bpp6ChannelsAlpha		6749963	0					
ANR	6750104	ReturnStatement	return 0 ;	553:38:16931:16939	6749963	67	True				
ANR	6750105	PrimaryExpression	0		6749963	0					
ANR	6750106	Label	case JXRC_FMT_64bpp7ChannelsAlpha :	554:4:16945:16978	6749963	68	True				
ANR	6750107	Identifier	JXRC_FMT_64bpp7ChannelsAlpha		6749963	0					
ANR	6750108	ReturnStatement	return 0 ;	554:38:16979:16987	6749963	69	True				
ANR	6750109	PrimaryExpression	0		6749963	0					
ANR	6750110	Label	case JXRC_FMT_72bpp8ChannelsAlpha :	555:4:16993:17026	6749963	70	True				
ANR	6750111	Identifier	JXRC_FMT_72bpp8ChannelsAlpha		6749963	0					
ANR	6750112	ReturnStatement	return 0 ;	555:38:17027:17035	6749963	71	True				
ANR	6750113	PrimaryExpression	0		6749963	0					
ANR	6750114	Label	case JXRC_FMT_48bpp3Channels :	556:4:17041:17069	6749963	72	True				
ANR	6750115	Identifier	JXRC_FMT_48bpp3Channels		6749963	0					
ANR	6750116	ReturnStatement	return 0 ;	556:33:17070:17078	6749963	73	True				
ANR	6750117	PrimaryExpression	0		6749963	0					
ANR	6750118	Label	case JXRC_FMT_64bpp4Channels :	557:4:17084:17112	6749963	74	True				
ANR	6750119	Identifier	JXRC_FMT_64bpp4Channels		6749963	0					
ANR	6750120	ReturnStatement	return 0 ;	557:33:17113:17121	6749963	75	True				
ANR	6750121	PrimaryExpression	0		6749963	0					
ANR	6750122	Label	case JXRC_FMT_80bpp5Channels :	558:4:17127:17155	6749963	76	True				
ANR	6750123	Identifier	JXRC_FMT_80bpp5Channels		6749963	0					
ANR	6750124	ReturnStatement	return 0 ;	558:33:17156:17164	6749963	77	True				
ANR	6750125	PrimaryExpression	0		6749963	0					
ANR	6750126	Label	case JXRC_FMT_96bpp6Channels :	559:4:17170:17198	6749963	78	True				
ANR	6750127	Identifier	JXRC_FMT_96bpp6Channels		6749963	0					
ANR	6750128	ReturnStatement	return 0 ;	559:33:17199:17207	6749963	79	True				
ANR	6750129	PrimaryExpression	0		6749963	0					
ANR	6750130	Label	case JXRC_FMT_112bpp7Channels :	560:4:17213:17242	6749963	80	True				
ANR	6750131	Identifier	JXRC_FMT_112bpp7Channels		6749963	0					
ANR	6750132	ReturnStatement	return 0 ;	560:34:17243:17251	6749963	81	True				
ANR	6750133	PrimaryExpression	0		6749963	0					
ANR	6750134	Label	case JXRC_FMT_128bpp8Channels :	561:4:17257:17286	6749963	82	True				
ANR	6750135	Identifier	JXRC_FMT_128bpp8Channels		6749963	0					
ANR	6750136	ReturnStatement	return 0 ;	561:34:17287:17295	6749963	83	True				
ANR	6750137	PrimaryExpression	0		6749963	0					
ANR	6750138	Label	case JXRC_FMT_64bpp3ChannelsAlpha :	562:4:17301:17334	6749963	84	True				
ANR	6750139	Identifier	JXRC_FMT_64bpp3ChannelsAlpha		6749963	0					
ANR	6750140	ReturnStatement	return 0 ;	562:38:17335:17343	6749963	85	True				
ANR	6750141	PrimaryExpression	0		6749963	0					
ANR	6750142	Label	case JXRC_FMT_80bpp4ChannelsAlpha :	563:4:17349:17382	6749963	86	True				
ANR	6750143	Identifier	JXRC_FMT_80bpp4ChannelsAlpha		6749963	0					
ANR	6750144	ReturnStatement	return 0 ;	563:38:17383:17391	6749963	87	True				
ANR	6750145	PrimaryExpression	0		6749963	0					
ANR	6750146	Label	case JXRC_FMT_96bpp5ChannelsAlpha :	564:4:17397:17430	6749963	88	True				
ANR	6750147	Identifier	JXRC_FMT_96bpp5ChannelsAlpha		6749963	0					
ANR	6750148	ReturnStatement	return 0 ;	564:38:17431:17439	6749963	89	True				
ANR	6750149	PrimaryExpression	0		6749963	0					
ANR	6750150	Label	case JXRC_FMT_112bpp6ChannelsAlpha :	565:4:17445:17479	6749963	90	True				
ANR	6750151	Identifier	JXRC_FMT_112bpp6ChannelsAlpha		6749963	0					
ANR	6750152	ReturnStatement	return 0 ;	565:39:17480:17488	6749963	91	True				
ANR	6750153	PrimaryExpression	0		6749963	0					
ANR	6750154	Label	case JXRC_FMT_128bpp7ChannelsAlpha :	566:4:17494:17528	6749963	92	True				
ANR	6750155	Identifier	JXRC_FMT_128bpp7ChannelsAlpha		6749963	0					
ANR	6750156	ReturnStatement	return 0 ;	566:39:17529:17537	6749963	93	True				
ANR	6750157	PrimaryExpression	0		6749963	0					
ANR	6750158	Label	case JXRC_FMT_144bpp8ChannelsAlpha :	567:4:17543:17577	6749963	94	True				
ANR	6750159	Identifier	JXRC_FMT_144bpp8ChannelsAlpha		6749963	0					
ANR	6750160	ReturnStatement	return 0 ;	567:39:17578:17586	6749963	95	True				
ANR	6750161	PrimaryExpression	0		6749963	0					
ANR	6750162	Label	case JXRC_FMT_8bppGray :	568:4:17592:17614	6749963	96	True				
ANR	6750163	Identifier	JXRC_FMT_8bppGray		6749963	0					
ANR	6750164	ReturnStatement	return 1 ;	568:27:17615:17623	6749963	97	True				
ANR	6750165	PrimaryExpression	1		6749963	0					
ANR	6750166	Label	case JXRC_FMT_16bppGray :	569:4:17629:17652	6749963	98	True				
ANR	6750167	Identifier	JXRC_FMT_16bppGray		6749963	0					
ANR	6750168	ReturnStatement	return 1 ;	569:28:17653:17661	6749963	99	True				
ANR	6750169	PrimaryExpression	1		6749963	0					
ANR	6750170	Label	case JXRC_FMT_16bppGrayFixedPoint :	570:4:17667:17700	6749963	100	True				
ANR	6750171	Identifier	JXRC_FMT_16bppGrayFixedPoint		6749963	0					
ANR	6750172	ReturnStatement	return 1 ;	570:38:17701:17709	6749963	101	True				
ANR	6750173	PrimaryExpression	1		6749963	0					
ANR	6750174	Label	case JXRC_FMT_16bppGrayHalf :	571:4:17715:17742	6749963	102	True				
ANR	6750175	Identifier	JXRC_FMT_16bppGrayHalf		6749963	0					
ANR	6750176	ReturnStatement	return 1 ;	571:32:17743:17751	6749963	103	True				
ANR	6750177	PrimaryExpression	1		6749963	0					
ANR	6750178	Label	case JXRC_FMT_32bppGrayFixedPoint :	572:4:17757:17790	6749963	104	True				
ANR	6750179	Identifier	JXRC_FMT_32bppGrayFixedPoint		6749963	0					
ANR	6750180	ReturnStatement	return 1 ;	572:38:17791:17799	6749963	105	True				
ANR	6750181	PrimaryExpression	1		6749963	0					
ANR	6750182	Label	case JXRC_FMT_32bppGrayFloat :	573:4:17805:17833	6749963	106	True				
ANR	6750183	Identifier	JXRC_FMT_32bppGrayFloat		6749963	0					
ANR	6750184	ReturnStatement	return 1 ;	573:33:17834:17842	6749963	107	True				
ANR	6750185	PrimaryExpression	1		6749963	0					
ANR	6750186	Label	case JXRC_FMT_BlackWhite :	574:4:17848:17872	6749963	108	True				
ANR	6750187	Identifier	JXRC_FMT_BlackWhite		6749963	0					
ANR	6750188	ReturnStatement	return 1 ;	574:29:17873:17881	6749963	109	True				
ANR	6750189	PrimaryExpression	1		6749963	0					
ANR	6750190	Label	case JXRC_FMT_16bppBGR555 :	575:4:17887:17912	6749963	110	True				
ANR	6750191	Identifier	JXRC_FMT_16bppBGR555		6749963	0					
ANR	6750192	ReturnStatement	return 0 ;	575:30:17913:17921	6749963	111	True				
ANR	6750193	PrimaryExpression	0		6749963	0					
ANR	6750194	Label	case JXRC_FMT_16bppBGR565 :	576:4:17927:17952	6749963	112	True				
ANR	6750195	Identifier	JXRC_FMT_16bppBGR565		6749963	0					
ANR	6750196	ReturnStatement	return 0 ;	576:30:17953:17961	6749963	113	True				
ANR	6750197	PrimaryExpression	0		6749963	0					
ANR	6750198	Label	case JXRC_FMT_32bppBGR101010 :	577:4:17967:17995	6749963	114	True				
ANR	6750199	Identifier	JXRC_FMT_32bppBGR101010		6749963	0					
ANR	6750200	ReturnStatement	return 0 ;	577:33:17996:18004	6749963	115	True				
ANR	6750201	PrimaryExpression	0		6749963	0					
ANR	6750202	Label	case JXRC_FMT_32bppRGBE :	578:4:18010:18033	6749963	116	True				
ANR	6750203	Identifier	JXRC_FMT_32bppRGBE		6749963	0					
ANR	6750204	ReturnStatement	return 0 ;	578:28:18034:18042	6749963	117	True				
ANR	6750205	PrimaryExpression	0		6749963	0					
ANR	6750206	Label	case JXRC_FMT_32bppCMYKDIRECT :	579:4:18048:18077	6749963	118	True				
ANR	6750207	Identifier	JXRC_FMT_32bppCMYKDIRECT		6749963	0					
ANR	6750208	ReturnStatement	return 0 ;	579:34:18078:18086	6749963	119	True				
ANR	6750209	PrimaryExpression	0		6749963	0					
ANR	6750210	Label	case JXRC_FMT_64bppCMYKDIRECT :	580:4:18092:18121	6749963	120	True				
ANR	6750211	Identifier	JXRC_FMT_64bppCMYKDIRECT		6749963	0					
ANR	6750212	ReturnStatement	return 0 ;	580:34:18122:18130	6749963	121	True				
ANR	6750213	PrimaryExpression	0		6749963	0					
ANR	6750214	Label	case JXRC_FMT_40bppCMYKDIRECTAlpha :	581:4:18136:18170	6749963	122	True				
ANR	6750215	Identifier	JXRC_FMT_40bppCMYKDIRECTAlpha		6749963	0					
ANR	6750216	ReturnStatement	return 0 ;	581:39:18171:18179	6749963	123	True				
ANR	6750217	PrimaryExpression	0		6749963	0					
ANR	6750218	Label	case JXRC_FMT_80bppCMYKDIRECTAlpha :	582:4:18185:18219	6749963	124	True				
ANR	6750219	Identifier	JXRC_FMT_80bppCMYKDIRECTAlpha		6749963	0					
ANR	6750220	ReturnStatement	return 0 ;	582:39:18220:18228	6749963	125	True				
ANR	6750221	PrimaryExpression	0		6749963	0					
ANR	6750222	Label	case JXRC_FMT_12bppYCC420 :	583:4:18234:18259	6749963	126	True				
ANR	6750223	Identifier	JXRC_FMT_12bppYCC420		6749963	0					
ANR	6750224	ReturnStatement	return 0 ;	583:30:18260:18268	6749963	127	True				
ANR	6750225	PrimaryExpression	0		6749963	0					
ANR	6750226	Label	case JXRC_FMT_16bppYCC422 :	584:4:18274:18299	6749963	128	True				
ANR	6750227	Identifier	JXRC_FMT_16bppYCC422		6749963	0					
ANR	6750228	ReturnStatement	return 0 ;	584:30:18300:18308	6749963	129	True				
ANR	6750229	PrimaryExpression	0		6749963	0					
ANR	6750230	Label	case JXRC_FMT_20bppYCC422 :	585:4:18314:18339	6749963	130	True				
ANR	6750231	Identifier	JXRC_FMT_20bppYCC422		6749963	0					
ANR	6750232	ReturnStatement	return 0 ;	585:30:18340:18348	6749963	131	True				
ANR	6750233	PrimaryExpression	0		6749963	0					
ANR	6750234	Label	case JXRC_FMT_32bppYCC422 :	586:4:18354:18379	6749963	132	True				
ANR	6750235	Identifier	JXRC_FMT_32bppYCC422		6749963	0					
ANR	6750236	ReturnStatement	return 0 ;	586:30:18380:18388	6749963	133	True				
ANR	6750237	PrimaryExpression	0		6749963	0					
ANR	6750238	Label	case JXRC_FMT_24bppYCC444 :	587:4:18394:18419	6749963	134	True				
ANR	6750239	Identifier	JXRC_FMT_24bppYCC444		6749963	0					
ANR	6750240	ReturnStatement	return 0 ;	587:30:18420:18428	6749963	135	True				
ANR	6750241	PrimaryExpression	0		6749963	0					
ANR	6750242	Label	case JXRC_FMT_30bppYCC444 :	588:4:18434:18459	6749963	136	True				
ANR	6750243	Identifier	JXRC_FMT_30bppYCC444		6749963	0					
ANR	6750244	ReturnStatement	return 0 ;	588:30:18460:18468	6749963	137	True				
ANR	6750245	PrimaryExpression	0		6749963	0					
ANR	6750246	Label	case JXRC_FMT_48bppYCC444 :	589:4:18474:18499	6749963	138	True				
ANR	6750247	Identifier	JXRC_FMT_48bppYCC444		6749963	0					
ANR	6750248	ReturnStatement	return 0 ;	589:30:18500:18508	6749963	139	True				
ANR	6750249	PrimaryExpression	0		6749963	0					
ANR	6750250	Label	case JXRC_FMT_48bppYCC444FixedPoint :	590:4:18514:18549	6749963	140	True				
ANR	6750251	Identifier	JXRC_FMT_48bppYCC444FixedPoint		6749963	0					
ANR	6750252	ReturnStatement	return 0 ;	590:40:18550:18558	6749963	141	True				
ANR	6750253	PrimaryExpression	0		6749963	0					
ANR	6750254	Label	case JXRC_FMT_20bppYCC420Alpha :	591:4:18564:18594	6749963	142	True				
ANR	6750255	Identifier	JXRC_FMT_20bppYCC420Alpha		6749963	0					
ANR	6750256	ReturnStatement	return 0 ;	591:35:18595:18603	6749963	143	True				
ANR	6750257	PrimaryExpression	0		6749963	0					
ANR	6750258	Label	case JXRC_FMT_24bppYCC422Alpha :	592:4:18609:18639	6749963	144	True				
ANR	6750259	Identifier	JXRC_FMT_24bppYCC422Alpha		6749963	0					
ANR	6750260	ReturnStatement	return 0 ;	592:35:18640:18648	6749963	145	True				
ANR	6750261	PrimaryExpression	0		6749963	0					
ANR	6750262	Label	case JXRC_FMT_30bppYCC422Alpha :	593:4:18654:18684	6749963	146	True				
ANR	6750263	Identifier	JXRC_FMT_30bppYCC422Alpha		6749963	0					
ANR	6750264	ReturnStatement	return 0 ;	593:35:18685:18693	6749963	147	True				
ANR	6750265	PrimaryExpression	0		6749963	0					
ANR	6750266	Label	case JXRC_FMT_48bppYCC422Alpha :	594:4:18699:18729	6749963	148	True				
ANR	6750267	Identifier	JXRC_FMT_48bppYCC422Alpha		6749963	0					
ANR	6750268	ReturnStatement	return 0 ;	594:35:18730:18738	6749963	149	True				
ANR	6750269	PrimaryExpression	0		6749963	0					
ANR	6750270	Label	case JXRC_FMT_32bppYCC444Alpha :	595:4:18744:18774	6749963	150	True				
ANR	6750271	Identifier	JXRC_FMT_32bppYCC444Alpha		6749963	0					
ANR	6750272	ReturnStatement	return 0 ;	595:35:18775:18783	6749963	151	True				
ANR	6750273	PrimaryExpression	0		6749963	0					
ANR	6750274	Label	case JXRC_FMT_40bppYCC444Alpha :	596:4:18789:18819	6749963	152	True				
ANR	6750275	Identifier	JXRC_FMT_40bppYCC444Alpha		6749963	0					
ANR	6750276	ReturnStatement	return 0 ;	596:35:18820:18828	6749963	153	True				
ANR	6750277	PrimaryExpression	0		6749963	0					
ANR	6750278	Label	case JXRC_FMT_64bppYCC444Alpha :	597:4:18834:18864	6749963	154	True				
ANR	6750279	Identifier	JXRC_FMT_64bppYCC444Alpha		6749963	0					
ANR	6750280	ReturnStatement	return 0 ;	597:35:18865:18873	6749963	155	True				
ANR	6750281	PrimaryExpression	0		6749963	0					
ANR	6750282	Label	case JXRC_FMT_64bppYCC444AlphaFixedPoint :	598:4:18879:18919	6749963	156	True				
ANR	6750283	Identifier	JXRC_FMT_64bppYCC444AlphaFixedPoint		6749963	0					
ANR	6750284	ReturnStatement	return 0 ;	598:45:18920:18928	6749963	157	True				
ANR	6750285	PrimaryExpression	0		6749963	0					
ANR	6750286	Label	default :	599:4:18934:18941	6749963	158	True				
ANR	6750287	Identifier	default		6749963	0					
ANR	6750288	ReturnStatement	return 0 ;	599:13:18943:18951	6749963	159	True				
ANR	6750289	PrimaryExpression	0		6749963	0					
ANR	6750290	ReturnType	unsigned int		6749963	1					
ANR	6750291	Identifier	validate_tif_output		6749963	2					
ANR	6750292	ParameterList	jxrc_t_pixelFormat ePixelFormat		6749963	3					
ANR	6750293	Parameter	jxrc_t_pixelFormat ePixelFormat	516:33:15416:15446	6749963	0	True				
ANR	6750294	ParameterType	jxrc_t_pixelFormat		6749963	0					
ANR	6750295	Identifier	ePixelFormat		6749963	1					
ANR	6750296	CFGEntryNode	ENTRY		6749963		True				
ANR	6750297	CFGExitNode	EXIT		6749963		True				
ANR	6750298	Symbol	ePixelFormat		6749963						
ANR	6750299	Function	validate_pnm_output	602:0:18961:19170							
ANR	6750300	FunctionDef	validate_pnm_output (jxrc_t_pixelFormat ePixelFormat)		6750299	0					
ANR	6750301	CompoundStatement		603:0:19027:19170	6750299	0					
ANR	6750302	SwitchStatement	switch ( ePixelFormat )		6750299	0					
ANR	6750303	Condition	ePixelFormat	604:11:19040:19051	6750299	0	True				
ANR	6750304	Identifier	ePixelFormat		6750299	0					
ANR	6750305	CompoundStatement		3:4:30:30	6750299	1					
ANR	6750306	Label	case JXRC_FMT_24bppRGB :	606:4:19064:19086	6750299	0	True				
ANR	6750307	Identifier	JXRC_FMT_24bppRGB		6750299	0					
ANR	6750308	ReturnStatement	return 1 ;	606:27:19087:19095	6750299	1	True				
ANR	6750309	PrimaryExpression	1		6750299	0					
ANR	6750310	Label	case JXRC_FMT_8bppGray :	607:4:19101:19123	6750299	2	True				
ANR	6750311	Identifier	JXRC_FMT_8bppGray		6750299	0					
ANR	6750312	ReturnStatement	return 1 ;	607:27:19124:19132	6750299	3	True				
ANR	6750313	PrimaryExpression	1		6750299	0					
ANR	6750314	Label	default :	608:4:19145:19152	6750299	4	True				
ANR	6750315	Identifier	default		6750299	0					
ANR	6750316	ReturnStatement	return 0 ;	608:13:19154:19162	6750299	5	True				
ANR	6750317	PrimaryExpression	0		6750299	0					
ANR	6750318	ReturnType	unsigned int		6750299	1					
ANR	6750319	Identifier	validate_pnm_output		6750299	2					
ANR	6750320	ParameterList	jxrc_t_pixelFormat ePixelFormat		6750299	3					
ANR	6750321	Parameter	jxrc_t_pixelFormat ePixelFormat	602:33:18994:19024	6750299	0	True				
ANR	6750322	ParameterType	jxrc_t_pixelFormat		6750299	0					
ANR	6750323	Identifier	ePixelFormat		6750299	1					
ANR	6750324	CFGEntryNode	ENTRY		6750299		True				
ANR	6750325	CFGExitNode	EXIT		6750299		True				
ANR	6750326	Symbol	ePixelFormat		6750299						
ANR	6750327	Function	start_tif_output_file	612:0:19173:21613							
ANR	6750328	FunctionDef	start_tif_output_file (context * con)		6750327	0					
ANR	6750329	CompoundStatement		613:0:19221:21613	6750327	0					
ANR	6750330	ExpressionStatement	"con -> file = fopen ( con -> name , ""wb"" )"	614:4:19232:19266	6750327	0	True				
ANR	6750331	AssignmentExpression	"con -> file = fopen ( con -> name , ""wb"" )"		6750327	0		=			
ANR	6750332	PtrMemberAccess	con -> file		6750327	0					
ANR	6750333	Identifier	con		6750327	0					
ANR	6750334	Identifier	file		6750327	1					
ANR	6750335	CallExpression	"fopen ( con -> name , ""wb"" )"		6750327	1					
ANR	6750336	Callee	fopen		6750327	0					
ANR	6750337	Identifier	fopen		6750327	0					
ANR	6750338	ArgumentList	con -> name		6750327	1					
ANR	6750339	Argument	con -> name		6750327	0					
ANR	6750340	PtrMemberAccess	con -> name		6750327	0					
ANR	6750341	Identifier	con		6750327	0					
ANR	6750342	Identifier	name		6750327	1					
ANR	6750343	Argument	"""wb"""		6750327	1					
ANR	6750344	PrimaryExpression	"""wb"""		6750327	0					
ANR	6750345	IfStatement	if ( con -> file == 0 )		6750327	1					
ANR	6750346	Condition	con -> file == 0	615:8:19276:19287	6750327	0	True				
ANR	6750347	EqualityExpression	con -> file == 0		6750327	0		==			
ANR	6750348	PtrMemberAccess	con -> file		6750327	0					
ANR	6750349	Identifier	con		6750327	0					
ANR	6750350	Identifier	file		6750327	1					
ANR	6750351	PrimaryExpression	0		6750327	1					
ANR	6750352	ExpressionStatement	"error ( ""cannot create TIFF output file %s"" , con -> name )"	616:8:19298:19351	6750327	1	True				
ANR	6750353	CallExpression	"error ( ""cannot create TIFF output file %s"" , con -> name )"		6750327	0					
ANR	6750354	Callee	error		6750327	0					
ANR	6750355	Identifier	error		6750327	0					
ANR	6750356	ArgumentList	"""cannot create TIFF output file %s"""		6750327	1					
ANR	6750357	Argument	"""cannot create TIFF output file %s"""		6750327	0					
ANR	6750358	PrimaryExpression	"""cannot create TIFF output file %s"""		6750327	0					
ANR	6750359	Argument	con -> name		6750327	1					
ANR	6750360	PtrMemberAccess	con -> name		6750327	0					
ANR	6750361	Identifier	con		6750327	0					
ANR	6750362	Identifier	name		6750327	1					
ANR	6750363	ExpressionStatement	con -> swap = 0	617:4:19357:19370	6750327	2	True				
ANR	6750364	AssignmentExpression	con -> swap = 0		6750327	0		=			
ANR	6750365	PtrMemberAccess	con -> swap		6750327	0					
ANR	6750366	Identifier	con		6750327	0					
ANR	6750367	Identifier	swap		6750327	1					
ANR	6750368	PrimaryExpression	0		6750327	1					
ANR	6750369	IdentifierDeclStatement	int one = 1 ;	619:4:19377:19388	6750327	3	True				
ANR	6750370	IdentifierDecl	one = 1		6750327	0					
ANR	6750371	IdentifierDeclType	int		6750327	0					
ANR	6750372	Identifier	one		6750327	1					
ANR	6750373	AssignmentExpression	one = 1		6750327	2		=			
ANR	6750374	Identifier	one		6750327	0					
ANR	6750375	PrimaryExpression	1		6750327	1					
ANR	6750376	IdentifierDeclStatement	char magic = * ( char * ) & one == 1 ? 'I' : 'M' ;	620:4:19394:19434	6750327	4	True				
ANR	6750377	IdentifierDecl	magic = * ( char * ) & one == 1 ? 'I' : 'M'		6750327	0					
ANR	6750378	IdentifierDeclType	char		6750327	0					
ANR	6750379	Identifier	magic		6750327	1					
ANR	6750380	AssignmentExpression	magic = * ( char * ) & one == 1 ? 'I' : 'M'		6750327	2		=			
ANR	6750381	Identifier	magic		6750327	0					
ANR	6750382	ConditionalExpression	* ( char * ) & one == 1 ? 'I' : 'M'		6750327	1					
ANR	6750383	Condition	* ( char * ) & one == 1		6750327	0					
ANR	6750384	EqualityExpression	* ( char * ) & one == 1		6750327	0		==			
ANR	6750385	UnaryOperationExpression	* ( char * ) & one		6750327	0					
ANR	6750386	UnaryOperator	*		6750327	0					
ANR	6750387	CastExpression	( char * ) & one		6750327	1					
ANR	6750388	CastTarget	char *		6750327	0					
ANR	6750389	UnaryOperationExpression	& one		6750327	1					
ANR	6750390	UnaryOperator	&		6750327	0					
ANR	6750391	Identifier	one		6750327	1					
ANR	6750392	PrimaryExpression	1		6750327	1					
ANR	6750393	PrimaryExpression	'I'		6750327	1					
ANR	6750394	PrimaryExpression	'M'		6750327	2					
ANR	6750395	IdentifierDeclStatement	int nentry = 10 ;	621:4:19440:19455	6750327	5	True				
ANR	6750396	IdentifierDecl	nentry = 10		6750327	0					
ANR	6750397	IdentifierDeclType	int		6750327	0					
ANR	6750398	Identifier	nentry		6750327	1					
ANR	6750399	AssignmentExpression	nentry = 10		6750327	2		=			
ANR	6750400	Identifier	nentry		6750327	0					
ANR	6750401	PrimaryExpression	10		6750327	1					
ANR	6750402	IfStatement	if ( con -> ncomp == 4 && ! con -> alpha )		6750327	6					
ANR	6750403	Condition	con -> ncomp == 4 && ! con -> alpha	622:8:19465:19494	6750327	0	True				
ANR	6750404	AndExpression	con -> ncomp == 4 && ! con -> alpha		6750327	0		&&			
ANR	6750405	EqualityExpression	con -> ncomp == 4		6750327	0		==			
ANR	6750406	PtrMemberAccess	con -> ncomp		6750327	0					
ANR	6750407	Identifier	con		6750327	0					
ANR	6750408	Identifier	ncomp		6750327	1					
ANR	6750409	PrimaryExpression	4		6750327	1					
ANR	6750410	UnaryOperationExpression	! con -> alpha		6750327	1					
ANR	6750411	UnaryOperator	!		6750327	0					
ANR	6750412	PtrMemberAccess	con -> alpha		6750327	1					
ANR	6750413	Identifier	con		6750327	0					
ANR	6750414	Identifier	alpha		6750327	1					
ANR	6750415	ExpressionStatement	nentry += 1	623:8:19516:19527	6750327	1	True				
ANR	6750416	AssignmentExpression	nentry += 1		6750327	0		+=			
ANR	6750417	Identifier	nentry		6750327	0					
ANR	6750418	PrimaryExpression	1		6750327	1					
ANR	6750419	IdentifierDeclStatement	int bitsize = con -> ncomp >= 3 ? 2 * con -> ncomp : 0 ;	624:4:19533:19579	6750327	7	True				
ANR	6750420	IdentifierDecl	bitsize = con -> ncomp >= 3 ? 2 * con -> ncomp : 0		6750327	0					
ANR	6750421	IdentifierDeclType	int		6750327	0					
ANR	6750422	Identifier	bitsize		6750327	1					
ANR	6750423	AssignmentExpression	bitsize = con -> ncomp >= 3 ? 2 * con -> ncomp : 0		6750327	2		=			
ANR	6750424	Identifier	bitsize		6750327	0					
ANR	6750425	ConditionalExpression	con -> ncomp >= 3 ? 2 * con -> ncomp : 0		6750327	1					
ANR	6750426	Condition	con -> ncomp >= 3		6750327	0					
ANR	6750427	RelationalExpression	con -> ncomp >= 3		6750327	0		>=			
ANR	6750428	PtrMemberAccess	con -> ncomp		6750327	0					
ANR	6750429	Identifier	con		6750327	0					
ANR	6750430	Identifier	ncomp		6750327	1					
ANR	6750431	PrimaryExpression	3		6750327	1					
ANR	6750432	MultiplicativeExpression	2 * con -> ncomp		6750327	1		*			
ANR	6750433	PrimaryExpression	2		6750327	0					
ANR	6750434	PtrMemberAccess	con -> ncomp		6750327	1					
ANR	6750435	Identifier	con		6750327	0					
ANR	6750436	Identifier	ncomp		6750327	1					
ANR	6750437	PrimaryExpression	0		6750327	2					
ANR	6750438	IdentifierDeclStatement	int bitoff = 8 + 2 + 12 * nentry + 4 ;	625:4:19585:19619	6750327	8	True				
ANR	6750439	IdentifierDecl	bitoff = 8 + 2 + 12 * nentry + 4		6750327	0					
ANR	6750440	IdentifierDeclType	int		6750327	0					
ANR	6750441	Identifier	bitoff		6750327	1					
ANR	6750442	AssignmentExpression	bitoff = 8 + 2 + 12 * nentry + 4		6750327	2		=			
ANR	6750443	Identifier	bitoff		6750327	0					
ANR	6750444	AdditiveExpression	8 + 2 + 12 * nentry + 4		6750327	1		+			
ANR	6750445	PrimaryExpression	8		6750327	0					
ANR	6750446	AdditiveExpression	2 + 12 * nentry + 4		6750327	1		+			
ANR	6750447	PrimaryExpression	2		6750327	0					
ANR	6750448	AdditiveExpression	12 * nentry + 4		6750327	1		+			
ANR	6750449	MultiplicativeExpression	12 * nentry		6750327	0		*			
ANR	6750450	PrimaryExpression	12		6750327	0					
ANR	6750451	Identifier	nentry		6750327	1					
ANR	6750452	PrimaryExpression	4		6750327	1					
ANR	6750453	IdentifierDeclStatement	int datoff = bitoff + bitsize ;	626:4:19625:19654	6750327	9	True				
ANR	6750454	IdentifierDecl	datoff = bitoff + bitsize		6750327	0					
ANR	6750455	IdentifierDeclType	int		6750327	0					
ANR	6750456	Identifier	datoff		6750327	1					
ANR	6750457	AssignmentExpression	datoff = bitoff + bitsize		6750327	2		=			
ANR	6750458	Identifier	datoff		6750327	0					
ANR	6750459	AdditiveExpression	bitoff + bitsize		6750327	1		+			
ANR	6750460	Identifier	bitoff		6750327	0					
ANR	6750461	Identifier	bitsize		6750327	1					
ANR	6750462	ExpressionStatement	"put_uint8 ( con , magic )"	628:4:19665:19686	6750327	10	True				
ANR	6750463	CallExpression	"put_uint8 ( con , magic )"		6750327	0					
ANR	6750464	Callee	put_uint8		6750327	0					
ANR	6750465	Identifier	put_uint8		6750327	0					
ANR	6750466	ArgumentList	con		6750327	1					
ANR	6750467	Argument	con		6750327	0					
ANR	6750468	Identifier	con		6750327	0					
ANR	6750469	Argument	magic		6750327	1					
ANR	6750470	Identifier	magic		6750327	0					
ANR	6750471	ExpressionStatement	"put_uint8 ( con , magic )"	629:4:19692:19713	6750327	11	True				
ANR	6750472	CallExpression	"put_uint8 ( con , magic )"		6750327	0					
ANR	6750473	Callee	put_uint8		6750327	0					
ANR	6750474	Identifier	put_uint8		6750327	0					
ANR	6750475	ArgumentList	con		6750327	1					
ANR	6750476	Argument	con		6750327	0					
ANR	6750477	Identifier	con		6750327	0					
ANR	6750478	Argument	magic		6750327	1					
ANR	6750479	Identifier	magic		6750327	0					
ANR	6750480	ExpressionStatement	"put_uint16 ( con , 42 )"	630:4:19719:19738	6750327	12	True				
ANR	6750481	CallExpression	"put_uint16 ( con , 42 )"		6750327	0					
ANR	6750482	Callee	put_uint16		6750327	0					
ANR	6750483	Identifier	put_uint16		6750327	0					
ANR	6750484	ArgumentList	con		6750327	1					
ANR	6750485	Argument	con		6750327	0					
ANR	6750486	Identifier	con		6750327	0					
ANR	6750487	Argument	42		6750327	1					
ANR	6750488	PrimaryExpression	42		6750327	0					
ANR	6750489	ExpressionStatement	"put_uint32 ( con , 8 )"	631:4:19744:19762	6750327	13	True				
ANR	6750490	CallExpression	"put_uint32 ( con , 8 )"		6750327	0					
ANR	6750491	Callee	put_uint32		6750327	0					
ANR	6750492	Identifier	put_uint32		6750327	0					
ANR	6750493	ArgumentList	con		6750327	1					
ANR	6750494	Argument	con		6750327	0					
ANR	6750495	Identifier	con		6750327	0					
ANR	6750496	Argument	8		6750327	1					
ANR	6750497	PrimaryExpression	8		6750327	0					
ANR	6750498	ExpressionStatement	"put_uint16 ( con , nentry )"	632:4:19768:19791	6750327	14	True				
ANR	6750499	CallExpression	"put_uint16 ( con , nentry )"		6750327	0					
ANR	6750500	Callee	put_uint16		6750327	0					
ANR	6750501	Identifier	put_uint16		6750327	0					
ANR	6750502	ArgumentList	con		6750327	1					
ANR	6750503	Argument	con		6750327	0					
ANR	6750504	Identifier	con		6750327	0					
ANR	6750505	Argument	nentry		6750327	1					
ANR	6750506	Identifier	nentry		6750327	0					
ANR	6750507	ExpressionStatement	"put_ifd_entry ( con , ImageWidth , 4 , 1 , con -> wid )"	633:4:19797:19843	6750327	15	True				
ANR	6750508	CallExpression	"put_ifd_entry ( con , ImageWidth , 4 , 1 , con -> wid )"		6750327	0					
ANR	6750509	Callee	put_ifd_entry		6750327	0					
ANR	6750510	Identifier	put_ifd_entry		6750327	0					
ANR	6750511	ArgumentList	con		6750327	1					
ANR	6750512	Argument	con		6750327	0					
ANR	6750513	Identifier	con		6750327	0					
ANR	6750514	Argument	ImageWidth		6750327	1					
ANR	6750515	Identifier	ImageWidth		6750327	0					
ANR	6750516	Argument	4		6750327	2					
ANR	6750517	PrimaryExpression	4		6750327	0					
ANR	6750518	Argument	1		6750327	3					
ANR	6750519	PrimaryExpression	1		6750327	0					
ANR	6750520	Argument	con -> wid		6750327	4					
ANR	6750521	PtrMemberAccess	con -> wid		6750327	0					
ANR	6750522	Identifier	con		6750327	0					
ANR	6750523	Identifier	wid		6750327	1					
ANR	6750524	ExpressionStatement	"put_ifd_entry ( con , ImageLength , 4 , 1 , con -> hei )"	634:4:19849:19896	6750327	16	True				
ANR	6750525	CallExpression	"put_ifd_entry ( con , ImageLength , 4 , 1 , con -> hei )"		6750327	0					
ANR	6750526	Callee	put_ifd_entry		6750327	0					
ANR	6750527	Identifier	put_ifd_entry		6750327	0					
ANR	6750528	ArgumentList	con		6750327	1					
ANR	6750529	Argument	con		6750327	0					
ANR	6750530	Identifier	con		6750327	0					
ANR	6750531	Argument	ImageLength		6750327	1					
ANR	6750532	Identifier	ImageLength		6750327	0					
ANR	6750533	Argument	4		6750327	2					
ANR	6750534	PrimaryExpression	4		6750327	0					
ANR	6750535	Argument	1		6750327	3					
ANR	6750536	PrimaryExpression	1		6750327	0					
ANR	6750537	Argument	con -> hei		6750327	4					
ANR	6750538	PtrMemberAccess	con -> hei		6750327	0					
ANR	6750539	Identifier	con		6750327	0					
ANR	6750540	Identifier	hei		6750327	1					
ANR	6750541	ExpressionStatement	"put_ifd_entry ( con , BitsPerSample , 3 , con -> ncomp , con -> ncomp >= 3 ? bitoff : con -> bpi )"	635:4:19902:19985	6750327	17	True				
ANR	6750542	CallExpression	"put_ifd_entry ( con , BitsPerSample , 3 , con -> ncomp , con -> ncomp >= 3 ? bitoff : con -> bpi )"		6750327	0					
ANR	6750543	Callee	put_ifd_entry		6750327	0					
ANR	6750544	Identifier	put_ifd_entry		6750327	0					
ANR	6750545	ArgumentList	con		6750327	1					
ANR	6750546	Argument	con		6750327	0					
ANR	6750547	Identifier	con		6750327	0					
ANR	6750548	Argument	BitsPerSample		6750327	1					
ANR	6750549	Identifier	BitsPerSample		6750327	0					
ANR	6750550	Argument	3		6750327	2					
ANR	6750551	PrimaryExpression	3		6750327	0					
ANR	6750552	Argument	con -> ncomp		6750327	3					
ANR	6750553	PtrMemberAccess	con -> ncomp		6750327	0					
ANR	6750554	Identifier	con		6750327	0					
ANR	6750555	Identifier	ncomp		6750327	1					
ANR	6750556	Argument	con -> ncomp >= 3 ? bitoff : con -> bpi		6750327	4					
ANR	6750557	ConditionalExpression	con -> ncomp >= 3 ? bitoff : con -> bpi		6750327	0					
ANR	6750558	Condition	con -> ncomp >= 3		6750327	0					
ANR	6750559	RelationalExpression	con -> ncomp >= 3		6750327	0		>=			
ANR	6750560	PtrMemberAccess	con -> ncomp		6750327	0					
ANR	6750561	Identifier	con		6750327	0					
ANR	6750562	Identifier	ncomp		6750327	1					
ANR	6750563	PrimaryExpression	3		6750327	1					
ANR	6750564	Identifier	bitoff		6750327	1					
ANR	6750565	PtrMemberAccess	con -> bpi		6750327	2					
ANR	6750566	Identifier	con		6750327	0					
ANR	6750567	Identifier	bpi		6750327	1					
ANR	6750568	SwitchStatement	switch ( con -> format )		6750327	18					
ANR	6750569	Condition	con -> format	636:12:19999:20009	6750327	0	True				
ANR	6750570	PtrMemberAccess	con -> format		6750327	0					
ANR	6750571	Identifier	con		6750327	0					
ANR	6750572	Identifier	format		6750327	1					
ANR	6750573	CompoundStatement		25:4:794:794	6750327	1					
ANR	6750574	Label	case 0 :	638:8:20026:20032	6750327	0	True				
ANR	6750575	Label	case 1 :	639:8:20057:20063	6750327	1	True				
ANR	6750576	Label	case 2 :	640:8:20083:20089	6750327	2	True				
ANR	6750577	Label	case 8 :	642:8:20141:20147	6750327	3	True				
ANR	6750578	Label	case 9 :	643:8:20167:20173	6750327	4	True				
ANR	6750579	Label	case 15 :	644:8:20194:20201	6750327	5	True				
ANR	6750580	ExpressionStatement	con -> sf = 1	645:12:20231:20242	6750327	6	True				
ANR	6750581	AssignmentExpression	con -> sf = 1		6750327	0		=			
ANR	6750582	PtrMemberAccess	con -> sf		6750327	0					
ANR	6750583	Identifier	con		6750327	0					
ANR	6750584	Identifier	sf		6750327	1					
ANR	6750585	PrimaryExpression	1		6750327	1					
ANR	6750586	BreakStatement	break ;	646:12:20256:20261	6750327	7	True				
ANR	6750587	Label	case 3 :	647:8:20271:20277	6750327	8	True				
ANR	6750588	Label	case 6 :	648:8:20299:20305	6750327	9	True				
ANR	6750589	ExpressionStatement	con -> sf = 2	649:12:20331:20342	6750327	10	True				
ANR	6750590	AssignmentExpression	con -> sf = 2		6750327	0		=			
ANR	6750591	PtrMemberAccess	con -> sf		6750327	0					
ANR	6750592	Identifier	con		6750327	0					
ANR	6750593	Identifier	sf		6750327	1					
ANR	6750594	PrimaryExpression	2		6750327	1					
ANR	6750595	BreakStatement	break ;	650:12:20356:20361	6750327	11	True				
ANR	6750596	Label	case 4 :	651:8:20371:20377	6750327	12	True				
ANR	6750597	Label	case 7 :	652:8:20399:20405	6750327	13	True				
ANR	6750598	ExpressionStatement	con -> sf = 3	653:12:20431:20442	6750327	14	True				
ANR	6750599	AssignmentExpression	con -> sf = 3		6750327	0		=			
ANR	6750600	PtrMemberAccess	con -> sf		6750327	0					
ANR	6750601	Identifier	con		6750327	0					
ANR	6750602	Identifier	sf		6750327	1					
ANR	6750603	PrimaryExpression	3		6750327	1					
ANR	6750604	BreakStatement	break ;	654:12:20456:20461	6750327	15	True				
ANR	6750605	Label	default :	655:8:20471:20478	6750327	16	True				
ANR	6750606	Identifier	default		6750327	0					
ANR	6750607	ExpressionStatement	assert ( 0 )	656:12:20492:20501	6750327	17	True				
ANR	6750608	CallExpression	assert ( 0 )		6750327	0					
ANR	6750609	Callee	assert		6750327	0					
ANR	6750610	Identifier	assert		6750327	0					
ANR	6750611	ArgumentList	0		6750327	1					
ANR	6750612	Argument	0		6750327	0					
ANR	6750613	PrimaryExpression	0		6750327	0					
ANR	6750614	ExpressionStatement	"put_ifd_entry ( con , SampleFormat , 3 , 1 , con -> sf )"	658:4:20513:20560	6750327	19	True				
ANR	6750615	CallExpression	"put_ifd_entry ( con , SampleFormat , 3 , 1 , con -> sf )"		6750327	0					
ANR	6750616	Callee	put_ifd_entry		6750327	0					
ANR	6750617	Identifier	put_ifd_entry		6750327	0					
ANR	6750618	ArgumentList	con		6750327	1					
ANR	6750619	Argument	con		6750327	0					
ANR	6750620	Identifier	con		6750327	0					
ANR	6750621	Argument	SampleFormat		6750327	1					
ANR	6750622	Identifier	SampleFormat		6750327	0					
ANR	6750623	Argument	3		6750327	2					
ANR	6750624	PrimaryExpression	3		6750327	0					
ANR	6750625	Argument	1		6750327	3					
ANR	6750626	PrimaryExpression	1		6750327	0					
ANR	6750627	Argument	con -> sf		6750327	4					
ANR	6750628	PtrMemberAccess	con -> sf		6750327	0					
ANR	6750629	Identifier	con		6750327	0					
ANR	6750630	Identifier	sf		6750327	1					
ANR	6750631	ExpressionStatement	"put_ifd_entry ( con , Compression , 3 , 1 , 1 )"	659:4:20566:20606	6750327	20	True				
ANR	6750632	CallExpression	"put_ifd_entry ( con , Compression , 3 , 1 , 1 )"		6750327	0					
ANR	6750633	Callee	put_ifd_entry		6750327	0					
ANR	6750634	Identifier	put_ifd_entry		6750327	0					
ANR	6750635	ArgumentList	con		6750327	1					
ANR	6750636	Argument	con		6750327	0					
ANR	6750637	Identifier	con		6750327	0					
ANR	6750638	Argument	Compression		6750327	1					
ANR	6750639	Identifier	Compression		6750327	0					
ANR	6750640	Argument	3		6750327	2					
ANR	6750641	PrimaryExpression	3		6750327	0					
ANR	6750642	Argument	1		6750327	3					
ANR	6750643	PrimaryExpression	1		6750327	0					
ANR	6750644	Argument	1		6750327	4					
ANR	6750645	PrimaryExpression	1		6750327	0					
ANR	6750646	ExpressionStatement	"put_ifd_entry ( con , Photometric , 3 , 1 , con -> photometric )"	660:4:20612:20667	6750327	21	True				
ANR	6750647	CallExpression	"put_ifd_entry ( con , Photometric , 3 , 1 , con -> photometric )"		6750327	0					
ANR	6750648	Callee	put_ifd_entry		6750327	0					
ANR	6750649	Identifier	put_ifd_entry		6750327	0					
ANR	6750650	ArgumentList	con		6750327	1					
ANR	6750651	Argument	con		6750327	0					
ANR	6750652	Identifier	con		6750327	0					
ANR	6750653	Argument	Photometric		6750327	1					
ANR	6750654	Identifier	Photometric		6750327	0					
ANR	6750655	Argument	3		6750327	2					
ANR	6750656	PrimaryExpression	3		6750327	0					
ANR	6750657	Argument	1		6750327	3					
ANR	6750658	PrimaryExpression	1		6750327	0					
ANR	6750659	Argument	con -> photometric		6750327	4					
ANR	6750660	PtrMemberAccess	con -> photometric		6750327	0					
ANR	6750661	Identifier	con		6750327	0					
ANR	6750662	Identifier	photometric		6750327	1					
ANR	6750663	ExpressionStatement	"put_ifd_entry ( con , StripOffsets , 4 , 1 , datoff )"	661:4:20673:20719	6750327	22	True				
ANR	6750664	CallExpression	"put_ifd_entry ( con , StripOffsets , 4 , 1 , datoff )"		6750327	0					
ANR	6750665	Callee	put_ifd_entry		6750327	0					
ANR	6750666	Identifier	put_ifd_entry		6750327	0					
ANR	6750667	ArgumentList	con		6750327	1					
ANR	6750668	Argument	con		6750327	0					
ANR	6750669	Identifier	con		6750327	0					
ANR	6750670	Argument	StripOffsets		6750327	1					
ANR	6750671	Identifier	StripOffsets		6750327	0					
ANR	6750672	Argument	4		6750327	2					
ANR	6750673	PrimaryExpression	4		6750327	0					
ANR	6750674	Argument	1		6750327	3					
ANR	6750675	PrimaryExpression	1		6750327	0					
ANR	6750676	Argument	datoff		6750327	4					
ANR	6750677	Identifier	datoff		6750327	0					
ANR	6750678	IfStatement	if ( ! con -> padBytes )		6750327	23					
ANR	6750679	Condition	! con -> padBytes	662:7:20728:20741	6750327	0	True				
ANR	6750680	UnaryOperationExpression	! con -> padBytes		6750327	0					
ANR	6750681	UnaryOperator	!		6750327	0					
ANR	6750682	PtrMemberAccess	con -> padBytes		6750327	1					
ANR	6750683	Identifier	con		6750327	0					
ANR	6750684	Identifier	padBytes		6750327	1					
ANR	6750685	ExpressionStatement	"put_ifd_entry ( con , SamplesPerPixel , 3 , 1 , con -> ncomp )"	663:8:20752:20805	6750327	1	True				
ANR	6750686	CallExpression	"put_ifd_entry ( con , SamplesPerPixel , 3 , 1 , con -> ncomp )"		6750327	0					
ANR	6750687	Callee	put_ifd_entry		6750327	0					
ANR	6750688	Identifier	put_ifd_entry		6750327	0					
ANR	6750689	ArgumentList	con		6750327	1					
ANR	6750690	Argument	con		6750327	0					
ANR	6750691	Identifier	con		6750327	0					
ANR	6750692	Argument	SamplesPerPixel		6750327	1					
ANR	6750693	Identifier	SamplesPerPixel		6750327	0					
ANR	6750694	Argument	3		6750327	2					
ANR	6750695	PrimaryExpression	3		6750327	0					
ANR	6750696	Argument	1		6750327	3					
ANR	6750697	PrimaryExpression	1		6750327	0					
ANR	6750698	Argument	con -> ncomp		6750327	4					
ANR	6750699	PtrMemberAccess	con -> ncomp		6750327	0					
ANR	6750700	Identifier	con		6750327	0					
ANR	6750701	Identifier	ncomp		6750327	1					
ANR	6750702	ElseStatement	else		6750327	0					
ANR	6750703	ExpressionStatement	"put_ifd_entry ( con , SamplesPerPixel , 3 , 1 , con -> ncomp + 1 )"	665:8:20824:20881	6750327	0	True				
ANR	6750704	CallExpression	"put_ifd_entry ( con , SamplesPerPixel , 3 , 1 , con -> ncomp + 1 )"		6750327	0					
ANR	6750705	Callee	put_ifd_entry		6750327	0					
ANR	6750706	Identifier	put_ifd_entry		6750327	0					
ANR	6750707	ArgumentList	con		6750327	1					
ANR	6750708	Argument	con		6750327	0					
ANR	6750709	Identifier	con		6750327	0					
ANR	6750710	Argument	SamplesPerPixel		6750327	1					
ANR	6750711	Identifier	SamplesPerPixel		6750327	0					
ANR	6750712	Argument	3		6750327	2					
ANR	6750713	PrimaryExpression	3		6750327	0					
ANR	6750714	Argument	1		6750327	3					
ANR	6750715	PrimaryExpression	1		6750327	0					
ANR	6750716	Argument	con -> ncomp + 1		6750327	4					
ANR	6750717	AdditiveExpression	con -> ncomp + 1		6750327	0		+			
ANR	6750718	PtrMemberAccess	con -> ncomp		6750327	0					
ANR	6750719	Identifier	con		6750327	0					
ANR	6750720	Identifier	ncomp		6750327	1					
ANR	6750721	PrimaryExpression	1		6750327	1					
ANR	6750722	ExpressionStatement	"put_ifd_entry ( con , RowsPerStrip , 4 , 1 , con -> hei )"	667:4:20888:20936	6750327	24	True				
ANR	6750723	CallExpression	"put_ifd_entry ( con , RowsPerStrip , 4 , 1 , con -> hei )"		6750327	0					
ANR	6750724	Callee	put_ifd_entry		6750327	0					
ANR	6750725	Identifier	put_ifd_entry		6750327	0					
ANR	6750726	ArgumentList	con		6750327	1					
ANR	6750727	Argument	con		6750327	0					
ANR	6750728	Identifier	con		6750327	0					
ANR	6750729	Argument	RowsPerStrip		6750327	1					
ANR	6750730	Identifier	RowsPerStrip		6750327	0					
ANR	6750731	Argument	4		6750327	2					
ANR	6750732	PrimaryExpression	4		6750327	0					
ANR	6750733	Argument	1		6750327	3					
ANR	6750734	PrimaryExpression	1		6750327	0					
ANR	6750735	Argument	con -> hei		6750327	4					
ANR	6750736	PtrMemberAccess	con -> hei		6750327	0					
ANR	6750737	Identifier	con		6750327	0					
ANR	6750738	Identifier	hei		6750327	1					
ANR	6750739	IfStatement	if ( con -> bpi == 1 )		6750327	25					
ANR	6750740	Condition	con -> bpi == 1	668:7:20945:20957	6750327	0	True				
ANR	6750741	EqualityExpression	con -> bpi == 1		6750327	0		==			
ANR	6750742	PtrMemberAccess	con -> bpi		6750327	0					
ANR	6750743	Identifier	con		6750327	0					
ANR	6750744	Identifier	bpi		6750327	1					
ANR	6750745	PrimaryExpression	1		6750327	1					
ANR	6750746	ExpressionStatement	"put_ifd_entry ( con , StripByteCounts , 4 , 1 , ( ( con -> wid + 7 ) >> 3 ) * con -> hei * con -> ncomp )"	669:8:20968:21052	6750327	1	True				
ANR	6750747	CallExpression	"put_ifd_entry ( con , StripByteCounts , 4 , 1 , ( ( con -> wid + 7 ) >> 3 ) * con -> hei * con -> ncomp )"		6750327	0					
ANR	6750748	Callee	put_ifd_entry		6750327	0					
ANR	6750749	Identifier	put_ifd_entry		6750327	0					
ANR	6750750	ArgumentList	con		6750327	1					
ANR	6750751	Argument	con		6750327	0					
ANR	6750752	Identifier	con		6750327	0					
ANR	6750753	Argument	StripByteCounts		6750327	1					
ANR	6750754	Identifier	StripByteCounts		6750327	0					
ANR	6750755	Argument	4		6750327	2					
ANR	6750756	PrimaryExpression	4		6750327	0					
ANR	6750757	Argument	1		6750327	3					
ANR	6750758	PrimaryExpression	1		6750327	0					
ANR	6750759	Argument	( ( con -> wid + 7 ) >> 3 ) * con -> hei * con -> ncomp		6750327	4					
ANR	6750760	MultiplicativeExpression	( ( con -> wid + 7 ) >> 3 ) * con -> hei * con -> ncomp		6750327	0		*			
ANR	6750761	ShiftExpression	( con -> wid + 7 ) >> 3		6750327	0		>>			
ANR	6750762	AdditiveExpression	con -> wid + 7		6750327	0		+			
ANR	6750763	PtrMemberAccess	con -> wid		6750327	0					
ANR	6750764	Identifier	con		6750327	0					
ANR	6750765	Identifier	wid		6750327	1					
ANR	6750766	PrimaryExpression	7		6750327	1					
ANR	6750767	PrimaryExpression	3		6750327	1					
ANR	6750768	MultiplicativeExpression	con -> hei * con -> ncomp		6750327	1		*			
ANR	6750769	PtrMemberAccess	con -> hei		6750327	0					
ANR	6750770	Identifier	con		6750327	0					
ANR	6750771	Identifier	hei		6750327	1					
ANR	6750772	PtrMemberAccess	con -> ncomp		6750327	1					
ANR	6750773	Identifier	con		6750327	0					
ANR	6750774	Identifier	ncomp		6750327	1					
ANR	6750775	ElseStatement	else		6750327	0					
ANR	6750776	IfStatement	if ( ! con -> padBytes )		6750327	0					
ANR	6750777	Condition	! con -> padBytes	670:12:21066:21079	6750327	0	True				
ANR	6750778	UnaryOperationExpression	! con -> padBytes		6750327	0					
ANR	6750779	UnaryOperator	!		6750327	0					
ANR	6750780	PtrMemberAccess	con -> padBytes		6750327	1					
ANR	6750781	Identifier	con		6750327	0					
ANR	6750782	Identifier	padBytes		6750327	1					
ANR	6750783	ExpressionStatement	"put_ifd_entry ( con , StripByteCounts , 4 , 1 , con -> wid * con -> hei * con -> ncomp * ( ( con -> bpi + 7 ) / 8 ) )"	671:8:21090:21184	6750327	1	True				
ANR	6750784	CallExpression	"put_ifd_entry ( con , StripByteCounts , 4 , 1 , con -> wid * con -> hei * con -> ncomp * ( ( con -> bpi + 7 ) / 8 ) )"		6750327	0					
ANR	6750785	Callee	put_ifd_entry		6750327	0					
ANR	6750786	Identifier	put_ifd_entry		6750327	0					
ANR	6750787	ArgumentList	con		6750327	1					
ANR	6750788	Argument	con		6750327	0					
ANR	6750789	Identifier	con		6750327	0					
ANR	6750790	Argument	StripByteCounts		6750327	1					
ANR	6750791	Identifier	StripByteCounts		6750327	0					
ANR	6750792	Argument	4		6750327	2					
ANR	6750793	PrimaryExpression	4		6750327	0					
ANR	6750794	Argument	1		6750327	3					
ANR	6750795	PrimaryExpression	1		6750327	0					
ANR	6750796	Argument	con -> wid * con -> hei * con -> ncomp * ( ( con -> bpi + 7 ) / 8 )		6750327	4					
ANR	6750797	MultiplicativeExpression	con -> wid * con -> hei * con -> ncomp * ( ( con -> bpi + 7 ) / 8 )		6750327	0		*			
ANR	6750798	PtrMemberAccess	con -> wid		6750327	0					
ANR	6750799	Identifier	con		6750327	0					
ANR	6750800	Identifier	wid		6750327	1					
ANR	6750801	MultiplicativeExpression	con -> hei * con -> ncomp * ( ( con -> bpi + 7 ) / 8 )		6750327	1		*			
ANR	6750802	PtrMemberAccess	con -> hei		6750327	0					
ANR	6750803	Identifier	con		6750327	0					
ANR	6750804	Identifier	hei		6750327	1					
ANR	6750805	MultiplicativeExpression	con -> ncomp * ( ( con -> bpi + 7 ) / 8 )		6750327	1		*			
ANR	6750806	PtrMemberAccess	con -> ncomp		6750327	0					
ANR	6750807	Identifier	con		6750327	0					
ANR	6750808	Identifier	ncomp		6750327	1					
ANR	6750809	MultiplicativeExpression	( con -> bpi + 7 ) / 8		6750327	1		/			
ANR	6750810	AdditiveExpression	con -> bpi + 7		6750327	0		+			
ANR	6750811	PtrMemberAccess	con -> bpi		6750327	0					
ANR	6750812	Identifier	con		6750327	0					
ANR	6750813	Identifier	bpi		6750327	1					
ANR	6750814	PrimaryExpression	7		6750327	1					
ANR	6750815	PrimaryExpression	8		6750327	1					
ANR	6750816	ElseStatement	else		6750327	0					
ANR	6750817	ExpressionStatement	"put_ifd_entry ( con , StripByteCounts , 4 , 1 , con -> wid * con -> hei * ( con -> ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 ) )"	673:8:21203:21302	6750327	0	True				
ANR	6750818	CallExpression	"put_ifd_entry ( con , StripByteCounts , 4 , 1 , con -> wid * con -> hei * ( con -> ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 ) )"		6750327	0					
ANR	6750819	Callee	put_ifd_entry		6750327	0					
ANR	6750820	Identifier	put_ifd_entry		6750327	0					
ANR	6750821	ArgumentList	con		6750327	1					
ANR	6750822	Argument	con		6750327	0					
ANR	6750823	Identifier	con		6750327	0					
ANR	6750824	Argument	StripByteCounts		6750327	1					
ANR	6750825	Identifier	StripByteCounts		6750327	0					
ANR	6750826	Argument	4		6750327	2					
ANR	6750827	PrimaryExpression	4		6750327	0					
ANR	6750828	Argument	1		6750327	3					
ANR	6750829	PrimaryExpression	1		6750327	0					
ANR	6750830	Argument	con -> wid * con -> hei * ( con -> ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		6750327	4					
ANR	6750831	MultiplicativeExpression	con -> wid * con -> hei * ( con -> ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		6750327	0		*			
ANR	6750832	PtrMemberAccess	con -> wid		6750327	0					
ANR	6750833	Identifier	con		6750327	0					
ANR	6750834	Identifier	wid		6750327	1					
ANR	6750835	MultiplicativeExpression	con -> hei * ( con -> ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		6750327	1		*			
ANR	6750836	PtrMemberAccess	con -> hei		6750327	0					
ANR	6750837	Identifier	con		6750327	0					
ANR	6750838	Identifier	hei		6750327	1					
ANR	6750839	MultiplicativeExpression	( con -> ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		6750327	1		*			
ANR	6750840	AdditiveExpression	con -> ncomp + 1		6750327	0		+			
ANR	6750841	PtrMemberAccess	con -> ncomp		6750327	0					
ANR	6750842	Identifier	con		6750327	0					
ANR	6750843	Identifier	ncomp		6750327	1					
ANR	6750844	PrimaryExpression	1		6750327	1					
ANR	6750845	MultiplicativeExpression	( con -> bpi + 7 ) / 8		6750327	1		/			
ANR	6750846	AdditiveExpression	con -> bpi + 7		6750327	0		+			
ANR	6750847	PtrMemberAccess	con -> bpi		6750327	0					
ANR	6750848	Identifier	con		6750327	0					
ANR	6750849	Identifier	bpi		6750327	1					
ANR	6750850	PrimaryExpression	7		6750327	1					
ANR	6750851	PrimaryExpression	8		6750327	1					
ANR	6750852	IfStatement	if ( con -> ncomp == 4 && ! con -> alpha )		6750327	26					
ANR	6750853	Condition	con -> ncomp == 4 && ! con -> alpha	675:8:21313:21342	6750327	0	True				
ANR	6750854	AndExpression	con -> ncomp == 4 && ! con -> alpha		6750327	0		&&			
ANR	6750855	EqualityExpression	con -> ncomp == 4		6750327	0		==			
ANR	6750856	PtrMemberAccess	con -> ncomp		6750327	0					
ANR	6750857	Identifier	con		6750327	0					
ANR	6750858	Identifier	ncomp		6750327	1					
ANR	6750859	PrimaryExpression	4		6750327	1					
ANR	6750860	UnaryOperationExpression	! con -> alpha		6750327	1					
ANR	6750861	UnaryOperator	!		6750327	0					
ANR	6750862	PtrMemberAccess	con -> alpha		6750327	1					
ANR	6750863	Identifier	con		6750327	0					
ANR	6750864	Identifier	alpha		6750327	1					
ANR	6750865	ExpressionStatement	"put_ifd_entry ( con , InkSet , 3 , 1 , 1 )"	676:8:21353:21388	6750327	1	True				
ANR	6750866	CallExpression	"put_ifd_entry ( con , InkSet , 3 , 1 , 1 )"		6750327	0					
ANR	6750867	Callee	put_ifd_entry		6750327	0					
ANR	6750868	Identifier	put_ifd_entry		6750327	0					
ANR	6750869	ArgumentList	con		6750327	1					
ANR	6750870	Argument	con		6750327	0					
ANR	6750871	Identifier	con		6750327	0					
ANR	6750872	Argument	InkSet		6750327	1					
ANR	6750873	Identifier	InkSet		6750327	0					
ANR	6750874	Argument	3		6750327	2					
ANR	6750875	PrimaryExpression	3		6750327	0					
ANR	6750876	Argument	1		6750327	3					
ANR	6750877	PrimaryExpression	1		6750327	0					
ANR	6750878	Argument	1		6750327	4					
ANR	6750879	PrimaryExpression	1		6750327	0					
ANR	6750880	ExpressionStatement	"put_uint32 ( con , 0 )"	678:4:21395:21413	6750327	27	True				
ANR	6750881	CallExpression	"put_uint32 ( con , 0 )"		6750327	0					
ANR	6750882	Callee	put_uint32		6750327	0					
ANR	6750883	Identifier	put_uint32		6750327	0					
ANR	6750884	ArgumentList	con		6750327	1					
ANR	6750885	Argument	con		6750327	0					
ANR	6750886	Identifier	con		6750327	0					
ANR	6750887	Argument	0		6750327	1					
ANR	6750888	PrimaryExpression	0		6750327	0					
ANR	6750889	ExpressionStatement	assert ( ftell ( con -> file ) == bitoff )	679:4:21419:21451	6750327	28	True				
ANR	6750890	CallExpression	assert ( ftell ( con -> file ) == bitoff )		6750327	0					
ANR	6750891	Callee	assert		6750327	0					
ANR	6750892	Identifier	assert		6750327	0					
ANR	6750893	ArgumentList	ftell ( con -> file ) == bitoff		6750327	1					
ANR	6750894	Argument	ftell ( con -> file ) == bitoff		6750327	0					
ANR	6750895	EqualityExpression	ftell ( con -> file ) == bitoff		6750327	0		==			
ANR	6750896	CallExpression	ftell ( con -> file )		6750327	0					
ANR	6750897	Callee	ftell		6750327	0					
ANR	6750898	Identifier	ftell		6750327	0					
ANR	6750899	ArgumentList	con -> file		6750327	1					
ANR	6750900	Argument	con -> file		6750327	0					
ANR	6750901	PtrMemberAccess	con -> file		6750327	0					
ANR	6750902	Identifier	con		6750327	0					
ANR	6750903	Identifier	file		6750327	1					
ANR	6750904	Identifier	bitoff		6750327	1					
ANR	6750905	IfStatement	if ( con -> ncomp >= 3 )		6750327	29					
ANR	6750906	Condition	con -> ncomp >= 3	680:8:21461:21473	6750327	0	True				
ANR	6750907	RelationalExpression	con -> ncomp >= 3		6750327	0		>=			
ANR	6750908	PtrMemberAccess	con -> ncomp		6750327	0					
ANR	6750909	Identifier	con		6750327	0					
ANR	6750910	Identifier	ncomp		6750327	1					
ANR	6750911	PrimaryExpression	3		6750327	1					
ANR	6750912	CompoundStatement		69:8:2264:2269	6750327	1					
ANR	6750913	IdentifierDeclStatement	int i ;	681:8:21486:21491	6750327	0	True				
ANR	6750914	IdentifierDecl	i		6750327	0					
ANR	6750915	IdentifierDeclType	int		6750327	0					
ANR	6750916	Identifier	i		6750327	1					
ANR	6750917	ForStatement	for ( i = 0 ; i < con -> ncomp ; i ++ )		6750327	1					
ANR	6750918	ForInit	i = 0 ;	682:13:21506:21509	6750327	0	True				
ANR	6750919	AssignmentExpression	i = 0		6750327	0		=			
ANR	6750920	Identifier	i		6750327	0					
ANR	6750921	PrimaryExpression	0		6750327	1					
ANR	6750922	Condition	i < con -> ncomp	682:18:21511:21522	6750327	1	True				
ANR	6750923	RelationalExpression	i < con -> ncomp		6750327	0		<			
ANR	6750924	Identifier	i		6750327	0					
ANR	6750925	PtrMemberAccess	con -> ncomp		6750327	1					
ANR	6750926	Identifier	con		6750327	0					
ANR	6750927	Identifier	ncomp		6750327	1					
ANR	6750928	PostIncDecOperationExpression	i ++	682:32:21525:21527	6750327	2	True				
ANR	6750929	Identifier	i		6750327	0					
ANR	6750930	IncDec	++		6750327	1					
ANR	6750931	ExpressionStatement	"put_uint16 ( con , con -> bpi )"	683:12:21542:21567	6750327	3	True				
ANR	6750932	CallExpression	"put_uint16 ( con , con -> bpi )"		6750327	0					
ANR	6750933	Callee	put_uint16		6750327	0					
ANR	6750934	Identifier	put_uint16		6750327	0					
ANR	6750935	ArgumentList	con		6750327	1					
ANR	6750936	Argument	con		6750327	0					
ANR	6750937	Identifier	con		6750327	0					
ANR	6750938	Argument	con -> bpi		6750327	1					
ANR	6750939	PtrMemberAccess	con -> bpi		6750327	0					
ANR	6750940	Identifier	con		6750327	0					
ANR	6750941	Identifier	bpi		6750327	1					
ANR	6750942	ExpressionStatement	assert ( ftell ( con -> file ) == datoff )	685:4:21579:21611	6750327	30	True				
ANR	6750943	CallExpression	assert ( ftell ( con -> file ) == datoff )		6750327	0					
ANR	6750944	Callee	assert		6750327	0					
ANR	6750945	Identifier	assert		6750327	0					
ANR	6750946	ArgumentList	ftell ( con -> file ) == datoff		6750327	1					
ANR	6750947	Argument	ftell ( con -> file ) == datoff		6750327	0					
ANR	6750948	EqualityExpression	ftell ( con -> file ) == datoff		6750327	0		==			
ANR	6750949	CallExpression	ftell ( con -> file )		6750327	0					
ANR	6750950	Callee	ftell		6750327	0					
ANR	6750951	Identifier	ftell		6750327	0					
ANR	6750952	ArgumentList	con -> file		6750327	1					
ANR	6750953	Argument	con -> file		6750327	0					
ANR	6750954	PtrMemberAccess	con -> file		6750327	0					
ANR	6750955	Identifier	con		6750327	0					
ANR	6750956	Identifier	file		6750327	1					
ANR	6750957	Identifier	datoff		6750327	1					
ANR	6750958	ReturnType	static void		6750327	1					
ANR	6750959	Identifier	start_tif_output_file		6750327	2					
ANR	6750960	ParameterList	context * con		6750327	3					
ANR	6750961	Parameter	context * con	612:34:19207:19218	6750327	0	True				
ANR	6750962	ParameterType	context *		6750327	0					
ANR	6750963	Identifier	con		6750327	1					
ANR	6750964	CFGEntryNode	ENTRY		6750327		True				
ANR	6750965	CFGExitNode	EXIT		6750327		True				
ANR	6750966	Symbol	magic		6750327						
ANR	6750967	Symbol	Compression		6750327						
ANR	6750968	Symbol	con		6750327						
ANR	6750969	Symbol	con -> ncomp		6750327						
ANR	6750970	Symbol	SamplesPerPixel		6750327						
ANR	6750971	Symbol	ftell		6750327						
ANR	6750972	Symbol	datoff		6750327						
ANR	6750973	Symbol	ImageLength		6750327						
ANR	6750974	Symbol	& one		6750327						
ANR	6750975	Symbol	BitsPerSample		6750327						
ANR	6750976	Symbol	con -> swap		6750327						
ANR	6750977	Symbol	* con		6750327						
ANR	6750978	Symbol	con -> bpi		6750327						
ANR	6750979	Symbol	ImageWidth		6750327						
ANR	6750980	Symbol	StripOffsets		6750327						
ANR	6750981	Symbol	Photometric		6750327						
ANR	6750982	Symbol	con -> padBytes		6750327						
ANR	6750983	Symbol	* ( char * ) & one		6750327						
ANR	6750984	Symbol	con -> photometric		6750327						
ANR	6750985	Symbol	con -> wid		6750327						
ANR	6750986	Symbol	fopen		6750327						
ANR	6750987	Symbol	RowsPerStrip		6750327						
ANR	6750988	Symbol	con -> file		6750327						
ANR	6750989	Symbol	con -> hei		6750327						
ANR	6750990	Symbol	bitsize		6750327						
ANR	6750991	Symbol	one		6750327						
ANR	6750992	Symbol	i		6750327						
ANR	6750993	Symbol	con -> name		6750327						
ANR	6750994	Symbol	InkSet		6750327						
ANR	6750995	Symbol	SampleFormat		6750327						
ANR	6750996	Symbol	con -> format		6750327						
ANR	6750997	Symbol	StripByteCounts		6750327						
ANR	6750998	Symbol	con -> alpha		6750327						
ANR	6750999	Symbol	bitoff		6750327						
ANR	6751000	Symbol	nentry		6750327						
ANR	6751001	Symbol	con -> sf		6750327						
ANR	6751002	Function	start_raw_output_file	688:0:21616:21810							
ANR	6751003	FunctionDef	start_raw_output_file (context * con)		6751002	0					
ANR	6751004	CompoundStatement		689:0:21664:21810	6751002	0					
ANR	6751005	ExpressionStatement	"con -> file = fopen ( con -> name , ""w+b"" )"	690:4:21670:21705	6751002	0	True				
ANR	6751006	AssignmentExpression	"con -> file = fopen ( con -> name , ""w+b"" )"		6751002	0		=			
ANR	6751007	PtrMemberAccess	con -> file		6751002	0					
ANR	6751008	Identifier	con		6751002	0					
ANR	6751009	Identifier	file		6751002	1					
ANR	6751010	CallExpression	"fopen ( con -> name , ""w+b"" )"		6751002	1					
ANR	6751011	Callee	fopen		6751002	0					
ANR	6751012	Identifier	fopen		6751002	0					
ANR	6751013	ArgumentList	con -> name		6751002	1					
ANR	6751014	Argument	con -> name		6751002	0					
ANR	6751015	PtrMemberAccess	con -> name		6751002	0					
ANR	6751016	Identifier	con		6751002	0					
ANR	6751017	Identifier	name		6751002	1					
ANR	6751018	Argument	"""w+b"""		6751002	1					
ANR	6751019	PrimaryExpression	"""w+b"""		6751002	0					
ANR	6751020	IfStatement	if ( con -> file == 0 )		6751002	1					
ANR	6751021	Condition	con -> file == 0	691:8:21715:21726	6751002	0	True				
ANR	6751022	EqualityExpression	con -> file == 0		6751002	0		==			
ANR	6751023	PtrMemberAccess	con -> file		6751002	0					
ANR	6751024	Identifier	con		6751002	0					
ANR	6751025	Identifier	file		6751002	1					
ANR	6751026	PrimaryExpression	0		6751002	1					
ANR	6751027	ExpressionStatement	"error ( ""cannot create RAW output file %s"" , con -> name )"	692:8:21737:21789	6751002	1	True				
ANR	6751028	CallExpression	"error ( ""cannot create RAW output file %s"" , con -> name )"		6751002	0					
ANR	6751029	Callee	error		6751002	0					
ANR	6751030	Identifier	error		6751002	0					
ANR	6751031	ArgumentList	"""cannot create RAW output file %s"""		6751002	1					
ANR	6751032	Argument	"""cannot create RAW output file %s"""		6751002	0					
ANR	6751033	PrimaryExpression	"""cannot create RAW output file %s"""		6751002	0					
ANR	6751034	Argument	con -> name		6751002	1					
ANR	6751035	PtrMemberAccess	con -> name		6751002	0					
ANR	6751036	Identifier	con		6751002	0					
ANR	6751037	Identifier	name		6751002	1					
ANR	6751038	ExpressionStatement	con -> swap = 0	693:4:21795:21808	6751002	2	True				
ANR	6751039	AssignmentExpression	con -> swap = 0		6751002	0		=			
ANR	6751040	PtrMemberAccess	con -> swap		6751002	0					
ANR	6751041	Identifier	con		6751002	0					
ANR	6751042	Identifier	swap		6751002	1					
ANR	6751043	PrimaryExpression	0		6751002	1					
ANR	6751044	ReturnType	static void		6751002	1					
ANR	6751045	Identifier	start_raw_output_file		6751002	2					
ANR	6751046	ParameterList	context * con		6751002	3					
ANR	6751047	Parameter	context * con	688:34:21650:21661	6751002	0	True				
ANR	6751048	ParameterType	context *		6751002	0					
ANR	6751049	Identifier	con		6751002	1					
ANR	6751050	CFGEntryNode	ENTRY		6751002		True				
ANR	6751051	CFGExitNode	EXIT		6751002		True				
ANR	6751052	Symbol	con -> swap		6751002						
ANR	6751053	Symbol	fopen		6751002						
ANR	6751054	Symbol	con		6751002						
ANR	6751055	Symbol	con -> file		6751002						
ANR	6751056	Symbol	* con		6751002						
ANR	6751057	Symbol	con -> name		6751002						
ANR	6751058	Function	open_input_file	698:0:21852:27829							
ANR	6751059	FunctionDef	"open_input_file (const char * name , const raw_info * raw_info_t , int * alpha_mode , int * padded_format)"		6751058	0					
ANR	6751060	CompoundStatement		699:0:21957:27829	6751058	0					
ANR	6751061	IdentifierDeclStatement	context * con ;	700:4:21963:21975	6751058	0	True				
ANR	6751062	IdentifierDecl	* con		6751058	0					
ANR	6751063	IdentifierDeclType	context *		6751058	0					
ANR	6751064	Identifier	con		6751058	1					
ANR	6751065	ExpressionStatement	con = ( context * ) malloc ( sizeof ( context ) )	702:4:21982:22021	6751058	1	True				
ANR	6751066	AssignmentExpression	con = ( context * ) malloc ( sizeof ( context ) )		6751058	0		=			
ANR	6751067	Identifier	con		6751058	0					
ANR	6751068	CastExpression	( context * ) malloc ( sizeof ( context ) )		6751058	1					
ANR	6751069	CastTarget	context *		6751058	0					
ANR	6751070	CallExpression	malloc ( sizeof ( context ) )		6751058	1					
ANR	6751071	Callee	malloc		6751058	0					
ANR	6751072	Identifier	malloc		6751058	0					
ANR	6751073	ArgumentList	sizeof ( context )		6751058	1					
ANR	6751074	Argument	sizeof ( context )		6751058	0					
ANR	6751075	SizeofExpression	sizeof ( context )		6751058	0					
ANR	6751076	Sizeof	sizeof		6751058	0					
ANR	6751077	SizeofOperand	context		6751058	1					
ANR	6751078	IfStatement	if ( con == 0 )		6751058	2					
ANR	6751079	Condition	con == 0	703:8:22031:22036	6751058	0	True				
ANR	6751080	EqualityExpression	con == 0		6751058	0		==			
ANR	6751081	Identifier	con		6751058	0					
ANR	6751082	PrimaryExpression	0		6751058	1					
ANR	6751083	ExpressionStatement	"error ( ""unable to allocate memory"" )"	704:8:22047:22081	6751058	1	True				
ANR	6751084	CallExpression	"error ( ""unable to allocate memory"" )"		6751058	0					
ANR	6751085	Callee	error		6751058	0					
ANR	6751086	Identifier	error		6751058	0					
ANR	6751087	ArgumentList	"""unable to allocate memory"""		6751058	1					
ANR	6751088	Argument	"""unable to allocate memory"""		6751058	0					
ANR	6751089	PrimaryExpression	"""unable to allocate memory"""		6751058	0					
ANR	6751090	ExpressionStatement	con -> name = name	706:4:22088:22104	6751058	3	True				
ANR	6751091	AssignmentExpression	con -> name = name		6751058	0		=			
ANR	6751092	PtrMemberAccess	con -> name		6751058	0					
ANR	6751093	Identifier	con		6751058	0					
ANR	6751094	Identifier	name		6751058	1					
ANR	6751095	Identifier	name		6751058	1					
ANR	6751096	ExpressionStatement	con -> wid = 0	707:4:22110:22122	6751058	4	True				
ANR	6751097	AssignmentExpression	con -> wid = 0		6751058	0		=			
ANR	6751098	PtrMemberAccess	con -> wid		6751058	0					
ANR	6751099	Identifier	con		6751058	0					
ANR	6751100	Identifier	wid		6751058	1					
ANR	6751101	PrimaryExpression	0		6751058	1					
ANR	6751102	ExpressionStatement	con -> hei = 0	708:4:22128:22140	6751058	5	True				
ANR	6751103	AssignmentExpression	con -> hei = 0		6751058	0		=			
ANR	6751104	PtrMemberAccess	con -> hei		6751058	0					
ANR	6751105	Identifier	con		6751058	0					
ANR	6751106	Identifier	hei		6751058	1					
ANR	6751107	PrimaryExpression	0		6751058	1					
ANR	6751108	ExpressionStatement	con -> ncomp = 0	709:4:22146:22160	6751058	6	True				
ANR	6751109	AssignmentExpression	con -> ncomp = 0		6751058	0		=			
ANR	6751110	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751111	Identifier	con		6751058	0					
ANR	6751112	Identifier	ncomp		6751058	1					
ANR	6751113	PrimaryExpression	0		6751058	1					
ANR	6751114	ExpressionStatement	con -> bpi = 0	710:4:22166:22178	6751058	7	True				
ANR	6751115	AssignmentExpression	con -> bpi = 0		6751058	0		=			
ANR	6751116	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6751117	Identifier	con		6751058	0					
ANR	6751118	Identifier	bpi		6751058	1					
ANR	6751119	PrimaryExpression	0		6751058	1					
ANR	6751120	ExpressionStatement	con -> format = 0	711:4:22184:22199	6751058	8	True				
ANR	6751121	AssignmentExpression	con -> format = 0		6751058	0		=			
ANR	6751122	PtrMemberAccess	con -> format		6751058	0					
ANR	6751123	Identifier	con		6751058	0					
ANR	6751124	Identifier	format		6751058	1					
ANR	6751125	PrimaryExpression	0		6751058	1					
ANR	6751126	ExpressionStatement	con -> sf = 1	712:4:22205:22216	6751058	9	True				
ANR	6751127	AssignmentExpression	con -> sf = 1		6751058	0		=			
ANR	6751128	PtrMemberAccess	con -> sf		6751058	0					
ANR	6751129	Identifier	con		6751058	0					
ANR	6751130	Identifier	sf		6751058	1					
ANR	6751131	PrimaryExpression	1		6751058	1					
ANR	6751132	ExpressionStatement	con -> swap = 0	713:4:22223:22236	6751058	10	True				
ANR	6751133	AssignmentExpression	con -> swap = 0		6751058	0		=			
ANR	6751134	PtrMemberAccess	con -> swap		6751058	0					
ANR	6751135	Identifier	con		6751058	0					
ANR	6751136	Identifier	swap		6751058	1					
ANR	6751137	PrimaryExpression	0		6751058	1					
ANR	6751138	ExpressionStatement	con -> buf = 0	714:4:22242:22254	6751058	11	True				
ANR	6751139	AssignmentExpression	con -> buf = 0		6751058	0		=			
ANR	6751140	PtrMemberAccess	con -> buf		6751058	0					
ANR	6751141	Identifier	con		6751058	0					
ANR	6751142	Identifier	buf		6751058	1					
ANR	6751143	PrimaryExpression	0		6751058	1					
ANR	6751144	ExpressionStatement	con -> my = - 1	715:4:22260:22272	6751058	12	True				
ANR	6751145	AssignmentExpression	con -> my = - 1		6751058	0		=			
ANR	6751146	PtrMemberAccess	con -> my		6751058	0					
ANR	6751147	Identifier	con		6751058	0					
ANR	6751148	Identifier	my		6751058	1					
ANR	6751149	UnaryOperationExpression	- 1		6751058	1					
ANR	6751150	UnaryOperator	-		6751058	0					
ANR	6751151	PrimaryExpression	1		6751058	1					
ANR	6751152	ExpressionStatement	con -> nstrips = 0	716:4:22278:22294	6751058	13	True				
ANR	6751153	AssignmentExpression	con -> nstrips = 0		6751058	0		=			
ANR	6751154	PtrMemberAccess	con -> nstrips		6751058	0					
ANR	6751155	Identifier	con		6751058	0					
ANR	6751156	Identifier	nstrips		6751058	1					
ANR	6751157	PrimaryExpression	0		6751058	1					
ANR	6751158	ExpressionStatement	con -> strip = 0	717:4:22300:22314	6751058	14	True				
ANR	6751159	AssignmentExpression	con -> strip = 0		6751058	0		=			
ANR	6751160	PtrMemberAccess	con -> strip		6751058	0					
ANR	6751161	Identifier	con		6751058	0					
ANR	6751162	Identifier	strip		6751058	1					
ANR	6751163	PrimaryExpression	0		6751058	1					
ANR	6751164	ExpressionStatement	con -> nlines = 0	718:4:22320:22335	6751058	15	True				
ANR	6751165	AssignmentExpression	con -> nlines = 0		6751058	0		=			
ANR	6751166	PtrMemberAccess	con -> nlines		6751058	0					
ANR	6751167	Identifier	con		6751058	0					
ANR	6751168	Identifier	nlines		6751058	1					
ANR	6751169	PrimaryExpression	0		6751058	1					
ANR	6751170	ExpressionStatement	con -> line = 0	719:4:22341:22354	6751058	16	True				
ANR	6751171	AssignmentExpression	con -> line = 0		6751058	0		=			
ANR	6751172	PtrMemberAccess	con -> line		6751058	0					
ANR	6751173	Identifier	con		6751058	0					
ANR	6751174	Identifier	line		6751058	1					
ANR	6751175	PrimaryExpression	0		6751058	1					
ANR	6751176	ExpressionStatement	con -> photometric = 0	720:4:22360:22380	6751058	17	True				
ANR	6751177	AssignmentExpression	con -> photometric = 0		6751058	0		=			
ANR	6751178	PtrMemberAccess	con -> photometric		6751058	0					
ANR	6751179	Identifier	con		6751058	0					
ANR	6751180	Identifier	photometric		6751058	1					
ANR	6751181	PrimaryExpression	0		6751058	1					
ANR	6751182	ExpressionStatement	con -> offoff = 0	721:4:22387:22402	6751058	18	True				
ANR	6751183	AssignmentExpression	con -> offoff = 0		6751058	0		=			
ANR	6751184	PtrMemberAccess	con -> offoff		6751058	0					
ANR	6751185	Identifier	con		6751058	0					
ANR	6751186	Identifier	offoff		6751058	1					
ANR	6751187	PrimaryExpression	0		6751058	1					
ANR	6751188	ExpressionStatement	con -> ycc_bd10_flag = 0	722:4:22408:22430	6751058	19	True				
ANR	6751189	AssignmentExpression	con -> ycc_bd10_flag = 0		6751058	0		=			
ANR	6751190	PtrMemberAccess	con -> ycc_bd10_flag		6751058	0					
ANR	6751191	Identifier	con		6751058	0					
ANR	6751192	Identifier	ycc_bd10_flag		6751058	1					
ANR	6751193	PrimaryExpression	0		6751058	1					
ANR	6751194	ExpressionStatement	con -> ycc_format = 0	723:4:22436:22455	6751058	20	True				
ANR	6751195	AssignmentExpression	con -> ycc_format = 0		6751058	0		=			
ANR	6751196	PtrMemberAccess	con -> ycc_format		6751058	0					
ANR	6751197	Identifier	con		6751058	0					
ANR	6751198	Identifier	ycc_format		6751058	1					
ANR	6751199	PrimaryExpression	0		6751058	1					
ANR	6751200	ExpressionStatement	"con -> file = fopen ( name , ""rb"" )"	725:4:22462:22491	6751058	21	True				
ANR	6751201	AssignmentExpression	"con -> file = fopen ( name , ""rb"" )"		6751058	0		=			
ANR	6751202	PtrMemberAccess	con -> file		6751058	0					
ANR	6751203	Identifier	con		6751058	0					
ANR	6751204	Identifier	file		6751058	1					
ANR	6751205	CallExpression	"fopen ( name , ""rb"" )"		6751058	1					
ANR	6751206	Callee	fopen		6751058	0					
ANR	6751207	Identifier	fopen		6751058	0					
ANR	6751208	ArgumentList	name		6751058	1					
ANR	6751209	Argument	name		6751058	0					
ANR	6751210	Identifier	name		6751058	0					
ANR	6751211	Argument	"""rb"""		6751058	1					
ANR	6751212	PrimaryExpression	"""rb"""		6751058	0					
ANR	6751213	IfStatement	if ( con -> file == 0 )		6751058	22					
ANR	6751214	Condition	con -> file == 0	726:8:22501:22512	6751058	0	True				
ANR	6751215	EqualityExpression	con -> file == 0		6751058	0		==			
ANR	6751216	PtrMemberAccess	con -> file		6751058	0					
ANR	6751217	Identifier	con		6751058	0					
ANR	6751218	Identifier	file		6751058	1					
ANR	6751219	PrimaryExpression	0		6751058	1					
ANR	6751220	ExpressionStatement	"error ( ""cannot find input file %s"" , name )"	727:8:22523:22563	6751058	1	True				
ANR	6751221	CallExpression	"error ( ""cannot find input file %s"" , name )"		6751058	0					
ANR	6751222	Callee	error		6751058	0					
ANR	6751223	Identifier	error		6751058	0					
ANR	6751224	ArgumentList	"""cannot find input file %s"""		6751058	1					
ANR	6751225	Argument	"""cannot find input file %s"""		6751058	0					
ANR	6751226	PrimaryExpression	"""cannot find input file %s"""		6751058	0					
ANR	6751227	Argument	name		6751058	1					
ANR	6751228	Identifier	name		6751058	0					
ANR	6751229	IfStatement	if ( ! raw_info_t -> is_raw )		6751058	23					
ANR	6751230	Condition	! raw_info_t -> is_raw	729:8:22574:22592	6751058	0	True				
ANR	6751231	UnaryOperationExpression	! raw_info_t -> is_raw		6751058	0					
ANR	6751232	UnaryOperator	!		6751058	0					
ANR	6751233	PtrMemberAccess	raw_info_t -> is_raw		6751058	1					
ANR	6751234	Identifier	raw_info_t		6751058	0					
ANR	6751235	Identifier	is_raw		6751058	1					
ANR	6751236	CompoundStatement		31:29:637:637	6751058	1					
ANR	6751237	SwitchStatement	switch ( get_uint8 ( con ) )		6751058	0					
ANR	6751238	Condition	get_uint8 ( con )	730:16:22613:22626	6751058	0	True				
ANR	6751239	CallExpression	get_uint8 ( con )		6751058	0					
ANR	6751240	Callee	get_uint8		6751058	0					
ANR	6751241	Identifier	get_uint8		6751058	0					
ANR	6751242	ArgumentList	con		6751058	1					
ANR	6751243	Argument	con		6751058	0					
ANR	6751244	Identifier	con		6751058	0					
ANR	6751245	CompoundStatement		32:32:671:671	6751058	1					
ANR	6751246	Label	case 'P' :	731:12:22643:22652	6751058	0	True				
ANR	6751247	ExpressionStatement	open_pnm_input_file ( con )	731:23:22654:22678	6751058	1	True				
ANR	6751248	CallExpression	open_pnm_input_file ( con )		6751058	0					
ANR	6751249	Callee	open_pnm_input_file		6751058	0					
ANR	6751250	Identifier	open_pnm_input_file		6751058	0					
ANR	6751251	ArgumentList	con		6751058	1					
ANR	6751252	Argument	con		6751058	0					
ANR	6751253	Identifier	con		6751058	0					
ANR	6751254	BreakStatement	break ;	731:49:22680:22685	6751058	2	True				
ANR	6751255	Label	case 'I' :	732:12:22699:22708	6751058	3	True				
ANR	6751256	Label	case 'M' :	733:12:22722:22731	6751058	4	True				
ANR	6751257	ExpressionStatement	open_tif_input_file ( con )	733:23:22733:22757	6751058	5	True				
ANR	6751258	CallExpression	open_tif_input_file ( con )		6751058	0					
ANR	6751259	Callee	open_tif_input_file		6751058	0					
ANR	6751260	Identifier	open_tif_input_file		6751058	0					
ANR	6751261	ArgumentList	con		6751058	1					
ANR	6751262	Argument	con		6751058	0					
ANR	6751263	Identifier	con		6751058	0					
ANR	6751264	BreakStatement	break ;	733:49:22759:22764	6751058	6	True				
ANR	6751265	Label	default :	734:12:22778:22786	6751058	7	True				
ANR	6751266	Identifier	default		6751058	0					
ANR	6751267	ExpressionStatement	"error ( ""format of input file %s is unrecognized"" , name )"	734:22:22788:22842	6751058	8	True				
ANR	6751268	CallExpression	"error ( ""format of input file %s is unrecognized"" , name )"		6751058	0					
ANR	6751269	Callee	error		6751058	0					
ANR	6751270	Identifier	error		6751058	0					
ANR	6751271	ArgumentList	"""format of input file %s is unrecognized"""		6751058	1					
ANR	6751272	Argument	"""format of input file %s is unrecognized"""		6751058	0					
ANR	6751273	PrimaryExpression	"""format of input file %s is unrecognized"""		6751058	0					
ANR	6751274	Argument	name		6751058	1					
ANR	6751275	Identifier	name		6751058	0					
ANR	6751276	ExpressionStatement	con -> padBytes = 0	737:8:22871:22888	6751058	1	True				
ANR	6751277	AssignmentExpression	con -> padBytes = 0		6751058	0		=			
ANR	6751278	PtrMemberAccess	con -> padBytes		6751058	0					
ANR	6751279	Identifier	con		6751058	0					
ANR	6751280	Identifier	padBytes		6751058	1					
ANR	6751281	PrimaryExpression	0		6751058	1					
ANR	6751282	IfStatement	if ( con -> photometric == 2 && con -> ncomp == 4 )		6751058	2					
ANR	6751283	Condition	con -> photometric == 2 && con -> ncomp == 4	738:11:22902:22941	6751058	0	True				
ANR	6751284	AndExpression	con -> photometric == 2 && con -> ncomp == 4		6751058	0		&&			
ANR	6751285	EqualityExpression	con -> photometric == 2		6751058	0		==			
ANR	6751286	PtrMemberAccess	con -> photometric		6751058	0					
ANR	6751287	Identifier	con		6751058	0					
ANR	6751288	Identifier	photometric		6751058	1					
ANR	6751289	PrimaryExpression	2		6751058	1					
ANR	6751290	EqualityExpression	con -> ncomp == 4		6751058	1		==			
ANR	6751291	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751292	Identifier	con		6751058	0					
ANR	6751293	Identifier	ncomp		6751058	1					
ANR	6751294	PrimaryExpression	4		6751058	1					
ANR	6751295	IfStatement	if ( * padded_format == 1 )		6751058	1					
ANR	6751296	Condition	* padded_format == 1	739:16:22971:22989	6751058	0	True				
ANR	6751297	EqualityExpression	* padded_format == 1		6751058	0		==			
ANR	6751298	UnaryOperationExpression	* padded_format		6751058	0					
ANR	6751299	UnaryOperator	*		6751058	0					
ANR	6751300	Identifier	padded_format		6751058	1					
ANR	6751301	PrimaryExpression	1		6751058	1					
ANR	6751302	CompoundStatement		41:37:1034:1034	6751058	1					
ANR	6751303	ExpressionStatement	con -> padBytes = 1	740:16:23057:23074	6751058	0	True				
ANR	6751304	AssignmentExpression	con -> padBytes = 1		6751058	0		=			
ANR	6751305	PtrMemberAccess	con -> padBytes		6751058	0					
ANR	6751306	Identifier	con		6751058	0					
ANR	6751307	Identifier	padBytes		6751058	1					
ANR	6751308	PrimaryExpression	1		6751058	1					
ANR	6751309	ExpressionStatement	con -> ncomp --	741:16:23093:23106	6751058	1	True				
ANR	6751310	PostIncDecOperationExpression	con -> ncomp --		6751058	0					
ANR	6751311	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751312	Identifier	con		6751058	0					
ANR	6751313	Identifier	ncomp		6751058	1					
ANR	6751314	IncDec	--		6751058	1					
ANR	6751315	IfStatement	if ( * alpha_mode != 0 )		6751058	2					
ANR	6751316	Condition	* alpha_mode != 0	742:19:23128:23143	6751058	0	True				
ANR	6751317	EqualityExpression	* alpha_mode != 0		6751058	0		!=			
ANR	6751318	UnaryOperationExpression	* alpha_mode		6751058	0					
ANR	6751319	UnaryOperator	*		6751058	0					
ANR	6751320	Identifier	alpha_mode		6751058	1					
ANR	6751321	PrimaryExpression	0		6751058	1					
ANR	6751322	CompoundStatement		45:16:1204:1204	6751058	1					
ANR	6751323	ExpressionStatement	* alpha_mode = 0	744:20:23184:23199	6751058	0	True				
ANR	6751324	AssignmentExpression	* alpha_mode = 0		6751058	0		=			
ANR	6751325	UnaryOperationExpression	* alpha_mode		6751058	0					
ANR	6751326	UnaryOperator	*		6751058	0					
ANR	6751327	Identifier	alpha_mode		6751058	1					
ANR	6751328	PrimaryExpression	0		6751058	1					
ANR	6751329	ExpressionStatement	"fprintf ( stderr , ""Setting alpha_mode to 0 to encode a padded format \\n"" )"	745:20:23247:23318	6751058	1	True				
ANR	6751330	CallExpression	"fprintf ( stderr , ""Setting alpha_mode to 0 to encode a padded format \\n"" )"		6751058	0					
ANR	6751331	Callee	fprintf		6751058	0					
ANR	6751332	Identifier	fprintf		6751058	0					
ANR	6751333	ArgumentList	stderr		6751058	1					
ANR	6751334	Argument	stderr		6751058	0					
ANR	6751335	Identifier	stderr		6751058	0					
ANR	6751336	Argument	"""Setting alpha_mode to 0 to encode a padded format \\n"""		6751058	1					
ANR	6751337	PrimaryExpression	"""Setting alpha_mode to 0 to encode a padded format \\n"""		6751058	0					
ANR	6751338	ElseStatement	else		6751058	0					
ANR	6751339	CompoundStatement		51:12:1423:1423	6751058	0					
ANR	6751340	IfStatement	if ( * alpha_mode == 0 )		6751058	0					
ANR	6751341	Condition	* alpha_mode == 0	750:19:23402:23417	6751058	0	True				
ANR	6751342	EqualityExpression	* alpha_mode == 0		6751058	0		==			
ANR	6751343	UnaryOperationExpression	* alpha_mode		6751058	0					
ANR	6751344	UnaryOperator	*		6751058	0					
ANR	6751345	Identifier	alpha_mode		6751058	1					
ANR	6751346	PrimaryExpression	0		6751058	1					
ANR	6751347	CompoundStatement		53:16:1478:1478	6751058	1					
ANR	6751348	ExpressionStatement	* alpha_mode = 2	752:20:23458:23473	6751058	0	True				
ANR	6751349	AssignmentExpression	* alpha_mode = 2		6751058	0		=			
ANR	6751350	UnaryOperationExpression	* alpha_mode		6751058	0					
ANR	6751351	UnaryOperator	*		6751058	0					
ANR	6751352	Identifier	alpha_mode		6751058	1					
ANR	6751353	PrimaryExpression	2		6751058	1					
ANR	6751354	ElseStatement	else		6751058	0					
ANR	6751355	CompoundStatement		58:9:1613:1613	6751058	0					
ANR	6751356	ExpressionStatement	con -> wid = raw_info_t -> raw_width	757:8:23597:23629	6751058	0	True				
ANR	6751357	AssignmentExpression	con -> wid = raw_info_t -> raw_width		6751058	0		=			
ANR	6751358	PtrMemberAccess	con -> wid		6751058	0					
ANR	6751359	Identifier	con		6751058	0					
ANR	6751360	Identifier	wid		6751058	1					
ANR	6751361	PtrMemberAccess	raw_info_t -> raw_width		6751058	1					
ANR	6751362	Identifier	raw_info_t		6751058	0					
ANR	6751363	Identifier	raw_width		6751058	1					
ANR	6751364	ExpressionStatement	con -> hei = raw_info_t -> raw_height	758:8:23639:23672	6751058	1	True				
ANR	6751365	AssignmentExpression	con -> hei = raw_info_t -> raw_height		6751058	0		=			
ANR	6751366	PtrMemberAccess	con -> hei		6751058	0					
ANR	6751367	Identifier	con		6751058	0					
ANR	6751368	Identifier	hei		6751058	1					
ANR	6751369	PtrMemberAccess	raw_info_t -> raw_height		6751058	1					
ANR	6751370	Identifier	raw_info_t		6751058	0					
ANR	6751371	Identifier	raw_height		6751058	1					
ANR	6751372	ExpressionStatement	con -> nlines = con -> hei	759:8:23682:23704	6751058	2	True				
ANR	6751373	AssignmentExpression	con -> nlines = con -> hei		6751058	0		=			
ANR	6751374	PtrMemberAccess	con -> nlines		6751058	0					
ANR	6751375	Identifier	con		6751058	0					
ANR	6751376	Identifier	nlines		6751058	1					
ANR	6751377	PtrMemberAccess	con -> hei		6751058	1					
ANR	6751378	Identifier	con		6751058	0					
ANR	6751379	Identifier	hei		6751058	1					
ANR	6751380	ExpressionStatement	con -> bpi = raw_info_t -> raw_bpc	760:8:23714:23744	6751058	3	True				
ANR	6751381	AssignmentExpression	con -> bpi = raw_info_t -> raw_bpc		6751058	0		=			
ANR	6751382	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6751383	Identifier	con		6751058	0					
ANR	6751384	Identifier	bpi		6751058	1					
ANR	6751385	PtrMemberAccess	raw_info_t -> raw_bpc		6751058	1					
ANR	6751386	Identifier	raw_info_t		6751058	0					
ANR	6751387	Identifier	raw_bpc		6751058	1					
ANR	6751388	ExpressionStatement	con -> sf = 1	761:8:23754:23765	6751058	4	True				
ANR	6751389	AssignmentExpression	con -> sf = 1		6751058	0		=			
ANR	6751390	PtrMemberAccess	con -> sf		6751058	0					
ANR	6751391	Identifier	con		6751058	0					
ANR	6751392	Identifier	sf		6751058	1					
ANR	6751393	PrimaryExpression	1		6751058	1					
ANR	6751394	ExpressionStatement	con -> padBytes = 0	762:8:23786:23803	6751058	5	True				
ANR	6751395	AssignmentExpression	con -> padBytes = 0		6751058	0		=			
ANR	6751396	PtrMemberAccess	con -> padBytes		6751058	0					
ANR	6751397	Identifier	con		6751058	0					
ANR	6751398	Identifier	padBytes		6751058	1					
ANR	6751399	PrimaryExpression	0		6751058	1					
ANR	6751400	IfStatement	if ( con -> bpi == 10 && raw_info_t -> raw_format > 18 )		6751058	6					
ANR	6751401	Condition	con -> bpi == 10 && raw_info_t -> raw_format > 18	763:12:23818:23862	6751058	0	True				
ANR	6751402	AndExpression	con -> bpi == 10 && raw_info_t -> raw_format > 18		6751058	0		&&			
ANR	6751403	EqualityExpression	con -> bpi == 10		6751058	0		==			
ANR	6751404	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6751405	Identifier	con		6751058	0					
ANR	6751406	Identifier	bpi		6751058	1					
ANR	6751407	PrimaryExpression	10		6751058	1					
ANR	6751408	RelationalExpression	raw_info_t -> raw_format > 18		6751058	1		>			
ANR	6751409	PtrMemberAccess	raw_info_t -> raw_format		6751058	0					
ANR	6751410	Identifier	raw_info_t		6751058	0					
ANR	6751411	Identifier	raw_format		6751058	1					
ANR	6751412	PrimaryExpression	18		6751058	1					
ANR	6751413	CompoundStatement		65:59:1907:1907	6751058	1					
ANR	6751414	ExpressionStatement	con -> ycc_bd10_flag = 1	764:12:23879:23901	6751058	0	True				
ANR	6751415	AssignmentExpression	con -> ycc_bd10_flag = 1		6751058	0		=			
ANR	6751416	PtrMemberAccess	con -> ycc_bd10_flag		6751058	0					
ANR	6751417	Identifier	con		6751058	0					
ANR	6751418	Identifier	ycc_bd10_flag		6751058	1					
ANR	6751419	PrimaryExpression	1		6751058	1					
ANR	6751420	ExpressionStatement	con -> bpi = 16	765:12:23915:23928	6751058	1	True				
ANR	6751421	AssignmentExpression	con -> bpi = 16		6751058	0		=			
ANR	6751422	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6751423	Identifier	con		6751058	0					
ANR	6751424	Identifier	bpi		6751058	1					
ANR	6751425	PrimaryExpression	16		6751058	1					
ANR	6751426	IfStatement	if ( ( raw_info_t -> raw_format >= 3 ) && ( raw_info_t -> raw_format <= 8 ) )		6751058	7					
ANR	6751427	Condition	( raw_info_t -> raw_format >= 3 ) && ( raw_info_t -> raw_format <= 8 )	768:12:23953:24014	6751058	0	True				
ANR	6751428	AndExpression	( raw_info_t -> raw_format >= 3 ) && ( raw_info_t -> raw_format <= 8 )		6751058	0		&&			
ANR	6751429	RelationalExpression	raw_info_t -> raw_format >= 3		6751058	0		>=			
ANR	6751430	PtrMemberAccess	raw_info_t -> raw_format		6751058	0					
ANR	6751431	Identifier	raw_info_t		6751058	0					
ANR	6751432	Identifier	raw_format		6751058	1					
ANR	6751433	PrimaryExpression	3		6751058	1					
ANR	6751434	RelationalExpression	raw_info_t -> raw_format <= 8		6751058	1		<=			
ANR	6751435	PtrMemberAccess	raw_info_t -> raw_format		6751058	0					
ANR	6751436	Identifier	raw_info_t		6751058	0					
ANR	6751437	Identifier	raw_format		6751058	1					
ANR	6751438	PrimaryExpression	8		6751058	1					
ANR	6751439	CompoundStatement		70:76:2059:2059	6751058	1					
ANR	6751440	ExpressionStatement	con -> ncomp = raw_info_t -> raw_format	769:12:24047:24082	6751058	0	True				
ANR	6751441	AssignmentExpression	con -> ncomp = raw_info_t -> raw_format		6751058	0		=			
ANR	6751442	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751443	Identifier	con		6751058	0					
ANR	6751444	Identifier	ncomp		6751058	1					
ANR	6751445	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751446	Identifier	raw_info_t		6751058	0					
ANR	6751447	Identifier	raw_format		6751058	1					
ANR	6751448	ElseStatement	else		6751058	0					
ANR	6751449	IfStatement	if ( ( raw_info_t -> raw_format >= 9 ) && ( raw_info_t -> raw_format <= 14 ) )		6751058	0					
ANR	6751450	Condition	( raw_info_t -> raw_format >= 9 ) && ( raw_info_t -> raw_format <= 14 )	771:17:24111:24173	6751058	0	True				
ANR	6751451	AndExpression	( raw_info_t -> raw_format >= 9 ) && ( raw_info_t -> raw_format <= 14 )		6751058	0		&&			
ANR	6751452	RelationalExpression	raw_info_t -> raw_format >= 9		6751058	0		>=			
ANR	6751453	PtrMemberAccess	raw_info_t -> raw_format		6751058	0					
ANR	6751454	Identifier	raw_info_t		6751058	0					
ANR	6751455	Identifier	raw_format		6751058	1					
ANR	6751456	PrimaryExpression	9		6751058	1					
ANR	6751457	RelationalExpression	raw_info_t -> raw_format <= 14		6751058	1		<=			
ANR	6751458	PtrMemberAccess	raw_info_t -> raw_format		6751058	0					
ANR	6751459	Identifier	raw_info_t		6751058	0					
ANR	6751460	Identifier	raw_format		6751058	1					
ANR	6751461	PrimaryExpression	14		6751058	1					
ANR	6751462	CompoundStatement		73:82:2218:2218	6751058	1					
ANR	6751463	ExpressionStatement	con -> ncomp = raw_info_t -> raw_format - 5	772:12:24217:24256	6751058	0	True				
ANR	6751464	AssignmentExpression	con -> ncomp = raw_info_t -> raw_format - 5		6751058	0		=			
ANR	6751465	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751466	Identifier	con		6751058	0					
ANR	6751467	Identifier	ncomp		6751058	1					
ANR	6751468	AdditiveExpression	raw_info_t -> raw_format - 5		6751058	1		-			
ANR	6751469	PtrMemberAccess	raw_info_t -> raw_format		6751058	0					
ANR	6751470	Identifier	raw_info_t		6751058	0					
ANR	6751471	Identifier	raw_format		6751058	1					
ANR	6751472	PrimaryExpression	5		6751058	1					
ANR	6751473	ElseStatement	else		6751058	0					
ANR	6751474	IfStatement	if ( 15 == raw_info_t -> raw_format )		6751058	0					
ANR	6751475	Condition	15 == raw_info_t -> raw_format	774:17:24285:24312	6751058	0	True				
ANR	6751476	EqualityExpression	15 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751477	PrimaryExpression	15		6751058	0					
ANR	6751478	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751479	Identifier	raw_info_t		6751058	0					
ANR	6751480	Identifier	raw_format		6751058	1					
ANR	6751481	CompoundStatement		76:47:2357:2357	6751058	1					
ANR	6751482	ExpressionStatement	con -> ncomp = 4	775:12:24339:24353	6751058	0	True				
ANR	6751483	AssignmentExpression	con -> ncomp = 4		6751058	0		=			
ANR	6751484	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751485	Identifier	con		6751058	0					
ANR	6751486	Identifier	ncomp		6751058	1					
ANR	6751487	PrimaryExpression	4		6751058	1					
ANR	6751488	ExpressionStatement	con -> sf = 4	776:12:24367:24378	6751058	1	True				
ANR	6751489	AssignmentExpression	con -> sf = 4		6751058	0		=			
ANR	6751490	PtrMemberAccess	con -> sf		6751058	0					
ANR	6751491	Identifier	con		6751058	0					
ANR	6751492	Identifier	sf		6751058	1					
ANR	6751493	PrimaryExpression	4		6751058	1					
ANR	6751494	ElseStatement	else		6751058	0					
ANR	6751495	IfStatement	if ( 16 == raw_info_t -> raw_format )		6751058	0					
ANR	6751496	Condition	16 == raw_info_t -> raw_format	778:17:24407:24434	6751058	0	True				
ANR	6751497	EqualityExpression	16 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751498	PrimaryExpression	16		6751058	0					
ANR	6751499	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751500	Identifier	raw_info_t		6751058	0					
ANR	6751501	Identifier	raw_format		6751058	1					
ANR	6751502	CompoundStatement		80:47:2479:2479	6751058	1					
ANR	6751503	ExpressionStatement	con -> ncomp = 3	779:12:24460:24474	6751058	0	True				
ANR	6751504	AssignmentExpression	con -> ncomp = 3		6751058	0		=			
ANR	6751505	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751506	Identifier	con		6751058	0					
ANR	6751507	Identifier	ncomp		6751058	1					
ANR	6751508	PrimaryExpression	3		6751058	1					
ANR	6751509	ExpressionStatement	con -> bpi = 5	780:12:24488:24500	6751058	1	True				
ANR	6751510	AssignmentExpression	con -> bpi = 5		6751058	0		=			
ANR	6751511	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6751512	Identifier	con		6751058	0					
ANR	6751513	Identifier	bpi		6751058	1					
ANR	6751514	PrimaryExpression	5		6751058	1					
ANR	6751515	ElseStatement	else		6751058	0					
ANR	6751516	IfStatement	if ( 17 == raw_info_t -> raw_format )		6751058	0					
ANR	6751517	Condition	17 == raw_info_t -> raw_format	782:17:24529:24556	6751058	0	True				
ANR	6751518	EqualityExpression	17 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751519	PrimaryExpression	17		6751058	0					
ANR	6751520	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751521	Identifier	raw_info_t		6751058	0					
ANR	6751522	Identifier	raw_format		6751058	1					
ANR	6751523	CompoundStatement		84:47:2601:2601	6751058	1					
ANR	6751524	ExpressionStatement	con -> ncomp = 3	783:12:24582:24596	6751058	0	True				
ANR	6751525	AssignmentExpression	con -> ncomp = 3		6751058	0		=			
ANR	6751526	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751527	Identifier	con		6751058	0					
ANR	6751528	Identifier	ncomp		6751058	1					
ANR	6751529	PrimaryExpression	3		6751058	1					
ANR	6751530	ExpressionStatement	con -> bpi = 6	784:12:24610:24622	6751058	1	True				
ANR	6751531	AssignmentExpression	con -> bpi = 6		6751058	0		=			
ANR	6751532	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6751533	Identifier	con		6751058	0					
ANR	6751534	Identifier	bpi		6751058	1					
ANR	6751535	PrimaryExpression	6		6751058	1					
ANR	6751536	ElseStatement	else		6751058	0					
ANR	6751537	IfStatement	if ( 18 == raw_info_t -> raw_format )		6751058	0					
ANR	6751538	Condition	18 == raw_info_t -> raw_format	786:17:24651:24678	6751058	0	True				
ANR	6751539	EqualityExpression	18 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751540	PrimaryExpression	18		6751058	0					
ANR	6751541	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751542	Identifier	raw_info_t		6751058	0					
ANR	6751543	Identifier	raw_format		6751058	1					
ANR	6751544	CompoundStatement		88:47:2723:2723	6751058	1					
ANR	6751545	ExpressionStatement	con -> ncomp = 3	787:12:24707:24721	6751058	0	True				
ANR	6751546	AssignmentExpression	con -> ncomp = 3		6751058	0		=			
ANR	6751547	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751548	Identifier	con		6751058	0					
ANR	6751549	Identifier	ncomp		6751058	1					
ANR	6751550	PrimaryExpression	3		6751058	1					
ANR	6751551	ExpressionStatement	con -> bpi = 10	788:12:24735:24748	6751058	1	True				
ANR	6751552	AssignmentExpression	con -> bpi = 10		6751058	0		=			
ANR	6751553	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6751554	Identifier	con		6751058	0					
ANR	6751555	Identifier	bpi		6751058	1					
ANR	6751556	PrimaryExpression	10		6751058	1					
ANR	6751557	ElseStatement	else		6751058	0					
ANR	6751558	IfStatement	if ( 19 == raw_info_t -> raw_format )		6751058	0					
ANR	6751559	Condition	19 == raw_info_t -> raw_format	790:17:24777:24804	6751058	0	True				
ANR	6751560	EqualityExpression	19 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751561	PrimaryExpression	19		6751058	0					
ANR	6751562	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751563	Identifier	raw_info_t		6751058	0					
ANR	6751564	Identifier	raw_format		6751058	1					
ANR	6751565	CompoundStatement		92:47:2849:2849	6751058	1					
ANR	6751566	ExpressionStatement	con -> ncomp = 3	791:12:24821:24835	6751058	0	True				
ANR	6751567	AssignmentExpression	con -> ncomp = 3		6751058	0		=			
ANR	6751568	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751569	Identifier	con		6751058	0					
ANR	6751570	Identifier	ncomp		6751058	1					
ANR	6751571	PrimaryExpression	3		6751058	1					
ANR	6751572	ExpressionStatement	con -> ycc_format = 1	792:12:24849:24868	6751058	1	True				
ANR	6751573	AssignmentExpression	con -> ycc_format = 1		6751058	0		=			
ANR	6751574	PtrMemberAccess	con -> ycc_format		6751058	0					
ANR	6751575	Identifier	con		6751058	0					
ANR	6751576	Identifier	ycc_format		6751058	1					
ANR	6751577	PrimaryExpression	1		6751058	1					
ANR	6751578	ElseStatement	else		6751058	0					
ANR	6751579	IfStatement	if ( 20 == raw_info_t -> raw_format )		6751058	0					
ANR	6751580	Condition	20 == raw_info_t -> raw_format	794:17:24897:24924	6751058	0	True				
ANR	6751581	EqualityExpression	20 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751582	PrimaryExpression	20		6751058	0					
ANR	6751583	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751584	Identifier	raw_info_t		6751058	0					
ANR	6751585	Identifier	raw_format		6751058	1					
ANR	6751586	CompoundStatement		96:47:2969:2969	6751058	1					
ANR	6751587	ExpressionStatement	con -> ncomp = 3	795:12:24941:24955	6751058	0	True				
ANR	6751588	AssignmentExpression	con -> ncomp = 3		6751058	0		=			
ANR	6751589	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751590	Identifier	con		6751058	0					
ANR	6751591	Identifier	ncomp		6751058	1					
ANR	6751592	PrimaryExpression	3		6751058	1					
ANR	6751593	ExpressionStatement	con -> ycc_format = 2	796:12:24969:24988	6751058	1	True				
ANR	6751594	AssignmentExpression	con -> ycc_format = 2		6751058	0		=			
ANR	6751595	PtrMemberAccess	con -> ycc_format		6751058	0					
ANR	6751596	Identifier	con		6751058	0					
ANR	6751597	Identifier	ycc_format		6751058	1					
ANR	6751598	PrimaryExpression	2		6751058	1					
ANR	6751599	ElseStatement	else		6751058	0					
ANR	6751600	IfStatement	if ( 21 == raw_info_t -> raw_format )		6751058	0					
ANR	6751601	Condition	21 == raw_info_t -> raw_format	798:17:25017:25044	6751058	0	True				
ANR	6751602	EqualityExpression	21 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751603	PrimaryExpression	21		6751058	0					
ANR	6751604	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751605	Identifier	raw_info_t		6751058	0					
ANR	6751606	Identifier	raw_format		6751058	1					
ANR	6751607	CompoundStatement		100:47:3089:3089	6751058	1					
ANR	6751608	ExpressionStatement	con -> ncomp = 3	799:12:25061:25075	6751058	0	True				
ANR	6751609	AssignmentExpression	con -> ncomp = 3		6751058	0		=			
ANR	6751610	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751611	Identifier	con		6751058	0					
ANR	6751612	Identifier	ncomp		6751058	1					
ANR	6751613	PrimaryExpression	3		6751058	1					
ANR	6751614	ExpressionStatement	con -> ycc_format = 3	800:12:25089:25108	6751058	1	True				
ANR	6751615	AssignmentExpression	con -> ycc_format = 3		6751058	0		=			
ANR	6751616	PtrMemberAccess	con -> ycc_format		6751058	0					
ANR	6751617	Identifier	con		6751058	0					
ANR	6751618	Identifier	ycc_format		6751058	1					
ANR	6751619	PrimaryExpression	3		6751058	1					
ANR	6751620	ElseStatement	else		6751058	0					
ANR	6751621	IfStatement	if ( 22 == raw_info_t -> raw_format )		6751058	0					
ANR	6751622	Condition	22 == raw_info_t -> raw_format	802:17:25137:25164	6751058	0	True				
ANR	6751623	EqualityExpression	22 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751624	PrimaryExpression	22		6751058	0					
ANR	6751625	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751626	Identifier	raw_info_t		6751058	0					
ANR	6751627	Identifier	raw_format		6751058	1					
ANR	6751628	CompoundStatement		104:47:3209:3209	6751058	1					
ANR	6751629	ExpressionStatement	con -> ncomp = 3	803:12:25181:25195	6751058	0	True				
ANR	6751630	AssignmentExpression	con -> ncomp = 3		6751058	0		=			
ANR	6751631	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751632	Identifier	con		6751058	0					
ANR	6751633	Identifier	ncomp		6751058	1					
ANR	6751634	PrimaryExpression	3		6751058	1					
ANR	6751635	ExpressionStatement	con -> sf = 2	804:12:25209:25220	6751058	1	True				
ANR	6751636	AssignmentExpression	con -> sf = 2		6751058	0		=			
ANR	6751637	PtrMemberAccess	con -> sf		6751058	0					
ANR	6751638	Identifier	con		6751058	0					
ANR	6751639	Identifier	sf		6751058	1					
ANR	6751640	PrimaryExpression	2		6751058	1					
ANR	6751641	ExpressionStatement	con -> ycc_format = 3	805:12:25245:25264	6751058	2	True				
ANR	6751642	AssignmentExpression	con -> ycc_format = 3		6751058	0		=			
ANR	6751643	PtrMemberAccess	con -> ycc_format		6751058	0					
ANR	6751644	Identifier	con		6751058	0					
ANR	6751645	Identifier	ycc_format		6751058	1					
ANR	6751646	PrimaryExpression	3		6751058	1					
ANR	6751647	ElseStatement	else		6751058	0					
ANR	6751648	IfStatement	if ( 23 == raw_info_t -> raw_format )		6751058	0					
ANR	6751649	Condition	23 == raw_info_t -> raw_format	807:17:25293:25320	6751058	0	True				
ANR	6751650	EqualityExpression	23 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751651	PrimaryExpression	23		6751058	0					
ANR	6751652	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751653	Identifier	raw_info_t		6751058	0					
ANR	6751654	Identifier	raw_format		6751058	1					
ANR	6751655	CompoundStatement		109:47:3365:3365	6751058	1					
ANR	6751656	ExpressionStatement	con -> ncomp = 4	808:12:25337:25351	6751058	0	True				
ANR	6751657	AssignmentExpression	con -> ncomp = 4		6751058	0		=			
ANR	6751658	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751659	Identifier	con		6751058	0					
ANR	6751660	Identifier	ncomp		6751058	1					
ANR	6751661	PrimaryExpression	4		6751058	1					
ANR	6751662	ExpressionStatement	con -> ycc_format = 1	809:12:25365:25384	6751058	1	True				
ANR	6751663	AssignmentExpression	con -> ycc_format = 1		6751058	0		=			
ANR	6751664	PtrMemberAccess	con -> ycc_format		6751058	0					
ANR	6751665	Identifier	con		6751058	0					
ANR	6751666	Identifier	ycc_format		6751058	1					
ANR	6751667	PrimaryExpression	1		6751058	1					
ANR	6751668	ElseStatement	else		6751058	0					
ANR	6751669	IfStatement	if ( 24 == raw_info_t -> raw_format )		6751058	0					
ANR	6751670	Condition	24 == raw_info_t -> raw_format	811:17:25413:25440	6751058	0	True				
ANR	6751671	EqualityExpression	24 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751672	PrimaryExpression	24		6751058	0					
ANR	6751673	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751674	Identifier	raw_info_t		6751058	0					
ANR	6751675	Identifier	raw_format		6751058	1					
ANR	6751676	CompoundStatement		113:47:3485:3485	6751058	1					
ANR	6751677	ExpressionStatement	con -> ncomp = 4	812:12:25457:25471	6751058	0	True				
ANR	6751678	AssignmentExpression	con -> ncomp = 4		6751058	0		=			
ANR	6751679	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751680	Identifier	con		6751058	0					
ANR	6751681	Identifier	ncomp		6751058	1					
ANR	6751682	PrimaryExpression	4		6751058	1					
ANR	6751683	ExpressionStatement	con -> ycc_format = 2	813:12:25485:25504	6751058	1	True				
ANR	6751684	AssignmentExpression	con -> ycc_format = 2		6751058	0		=			
ANR	6751685	PtrMemberAccess	con -> ycc_format		6751058	0					
ANR	6751686	Identifier	con		6751058	0					
ANR	6751687	Identifier	ycc_format		6751058	1					
ANR	6751688	PrimaryExpression	2		6751058	1					
ANR	6751689	ElseStatement	else		6751058	0					
ANR	6751690	IfStatement	if ( 25 == raw_info_t -> raw_format )		6751058	0					
ANR	6751691	Condition	25 == raw_info_t -> raw_format	815:17:25533:25560	6751058	0	True				
ANR	6751692	EqualityExpression	25 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751693	PrimaryExpression	25		6751058	0					
ANR	6751694	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751695	Identifier	raw_info_t		6751058	0					
ANR	6751696	Identifier	raw_format		6751058	1					
ANR	6751697	CompoundStatement		117:47:3605:3605	6751058	1					
ANR	6751698	ExpressionStatement	con -> ncomp = 4	816:12:25577:25591	6751058	0	True				
ANR	6751699	AssignmentExpression	con -> ncomp = 4		6751058	0		=			
ANR	6751700	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751701	Identifier	con		6751058	0					
ANR	6751702	Identifier	ncomp		6751058	1					
ANR	6751703	PrimaryExpression	4		6751058	1					
ANR	6751704	ExpressionStatement	con -> ycc_format = 3	817:12:25605:25624	6751058	1	True				
ANR	6751705	AssignmentExpression	con -> ycc_format = 3		6751058	0		=			
ANR	6751706	PtrMemberAccess	con -> ycc_format		6751058	0					
ANR	6751707	Identifier	con		6751058	0					
ANR	6751708	Identifier	ycc_format		6751058	1					
ANR	6751709	PrimaryExpression	3		6751058	1					
ANR	6751710	ElseStatement	else		6751058	0					
ANR	6751711	IfStatement	if ( 26 == raw_info_t -> raw_format )		6751058	0					
ANR	6751712	Condition	26 == raw_info_t -> raw_format	819:17:25653:25680	6751058	0	True				
ANR	6751713	EqualityExpression	26 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751714	PrimaryExpression	26		6751058	0					
ANR	6751715	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751716	Identifier	raw_info_t		6751058	0					
ANR	6751717	Identifier	raw_format		6751058	1					
ANR	6751718	CompoundStatement		121:47:3725:3725	6751058	1					
ANR	6751719	ExpressionStatement	con -> ncomp = 4	820:12:25697:25711	6751058	0	True				
ANR	6751720	AssignmentExpression	con -> ncomp = 4		6751058	0		=			
ANR	6751721	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751722	Identifier	con		6751058	0					
ANR	6751723	Identifier	ncomp		6751058	1					
ANR	6751724	PrimaryExpression	4		6751058	1					
ANR	6751725	ExpressionStatement	con -> sf = 2	821:12:25725:25736	6751058	1	True				
ANR	6751726	AssignmentExpression	con -> sf = 2		6751058	0		=			
ANR	6751727	PtrMemberAccess	con -> sf		6751058	0					
ANR	6751728	Identifier	con		6751058	0					
ANR	6751729	Identifier	sf		6751058	1					
ANR	6751730	PrimaryExpression	2		6751058	1					
ANR	6751731	ExpressionStatement	con -> ycc_format = 3	822:12:25761:25780	6751058	2	True				
ANR	6751732	AssignmentExpression	con -> ycc_format = 3		6751058	0		=			
ANR	6751733	PtrMemberAccess	con -> ycc_format		6751058	0					
ANR	6751734	Identifier	con		6751058	0					
ANR	6751735	Identifier	ycc_format		6751058	1					
ANR	6751736	PrimaryExpression	3		6751058	1					
ANR	6751737	ElseStatement	else		6751058	0					
ANR	6751738	IfStatement	if ( 27 == raw_info_t -> raw_format )		6751058	0					
ANR	6751739	Condition	27 == raw_info_t -> raw_format	824:17:25809:25836	6751058	0	True				
ANR	6751740	EqualityExpression	27 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751741	PrimaryExpression	27		6751058	0					
ANR	6751742	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751743	Identifier	raw_info_t		6751058	0					
ANR	6751744	Identifier	raw_format		6751058	1					
ANR	6751745	CompoundStatement		126:47:3881:3881	6751058	1					
ANR	6751746	ExpressionStatement	con -> ncomp = 4	825:12:25853:25867	6751058	0	True				
ANR	6751747	AssignmentExpression	con -> ncomp = 4		6751058	0		=			
ANR	6751748	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751749	Identifier	con		6751058	0					
ANR	6751750	Identifier	ncomp		6751058	1					
ANR	6751751	PrimaryExpression	4		6751058	1					
ANR	6751752	ElseStatement	else		6751058	0					
ANR	6751753	IfStatement	if ( 28 == raw_info_t -> raw_format )		6751058	0					
ANR	6751754	Condition	28 == raw_info_t -> raw_format	827:17:25896:25923	6751058	0	True				
ANR	6751755	EqualityExpression	28 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751756	PrimaryExpression	28		6751058	0					
ANR	6751757	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751758	Identifier	raw_info_t		6751058	0					
ANR	6751759	Identifier	raw_format		6751058	1					
ANR	6751760	CompoundStatement		129:47:3968:3968	6751058	1					
ANR	6751761	ExpressionStatement	con -> ncomp = 5	828:12:25940:25954	6751058	0	True				
ANR	6751762	AssignmentExpression	con -> ncomp = 5		6751058	0		=			
ANR	6751763	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751764	Identifier	con		6751058	0					
ANR	6751765	Identifier	ncomp		6751058	1					
ANR	6751766	PrimaryExpression	5		6751058	1					
ANR	6751767	ElseStatement	else		6751058	0					
ANR	6751768	IfStatement	if ( 29 == raw_info_t -> raw_format )		6751058	0					
ANR	6751769	Condition	29 == raw_info_t -> raw_format	830:16:25982:26009	6751058	0	True				
ANR	6751770	EqualityExpression	29 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751771	PrimaryExpression	29		6751058	0					
ANR	6751772	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751773	Identifier	raw_info_t		6751058	0					
ANR	6751774	Identifier	raw_format		6751058	1					
ANR	6751775	CompoundStatement		132:46:4054:4054	6751058	1					
ANR	6751776	ExpressionStatement	con -> ncomp = 3	831:12:26040:26054	6751058	0	True				
ANR	6751777	AssignmentExpression	con -> ncomp = 3		6751058	0		=			
ANR	6751778	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751779	Identifier	con		6751058	0					
ANR	6751780	Identifier	ncomp		6751058	1					
ANR	6751781	PrimaryExpression	3		6751058	1					
ANR	6751782	ExpressionStatement	con -> bpi = 8	832:12:26068:26080	6751058	1	True				
ANR	6751783	AssignmentExpression	con -> bpi = 8		6751058	0		=			
ANR	6751784	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6751785	Identifier	con		6751058	0					
ANR	6751786	Identifier	bpi		6751058	1					
ANR	6751787	PrimaryExpression	8		6751058	1					
ANR	6751788	ElseStatement	else		6751058	0					
ANR	6751789	IfStatement	if ( 30 == raw_info_t -> raw_format )		6751058	0					
ANR	6751790	Condition	30 == raw_info_t -> raw_format	834:16:26120:26147	6751058	0	True				
ANR	6751791	EqualityExpression	30 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751792	PrimaryExpression	30		6751058	0					
ANR	6751793	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751794	Identifier	raw_info_t		6751058	0					
ANR	6751795	Identifier	raw_format		6751058	1					
ANR	6751796	CompoundStatement		136:46:4192:4192	6751058	1					
ANR	6751797	ExpressionStatement	con -> ncomp = 3	835:12:26178:26192	6751058	0	True				
ANR	6751798	AssignmentExpression	con -> ncomp = 3		6751058	0		=			
ANR	6751799	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751800	Identifier	con		6751058	0					
ANR	6751801	Identifier	ncomp		6751058	1					
ANR	6751802	PrimaryExpression	3		6751058	1					
ANR	6751803	ExpressionStatement	con -> bpi = 8	836:12:26206:26218	6751058	1	True				
ANR	6751804	AssignmentExpression	con -> bpi = 8		6751058	0		=			
ANR	6751805	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6751806	Identifier	con		6751058	0					
ANR	6751807	Identifier	bpi		6751058	1					
ANR	6751808	PrimaryExpression	8		6751058	1					
ANR	6751809	ExpressionStatement	con -> padBytes = 1	837:12:26232:26249	6751058	2	True				
ANR	6751810	AssignmentExpression	con -> padBytes = 1		6751058	0		=			
ANR	6751811	PtrMemberAccess	con -> padBytes		6751058	0					
ANR	6751812	Identifier	con		6751058	0					
ANR	6751813	Identifier	padBytes		6751058	1					
ANR	6751814	PrimaryExpression	1		6751058	1					
ANR	6751815	ExpressionStatement	* padded_format = 1	838:12:26263:26281	6751058	3	True				
ANR	6751816	AssignmentExpression	* padded_format = 1		6751058	0		=			
ANR	6751817	UnaryOperationExpression	* padded_format		6751058	0					
ANR	6751818	UnaryOperator	*		6751058	0					
ANR	6751819	Identifier	padded_format		6751058	1					
ANR	6751820	PrimaryExpression	1		6751058	1					
ANR	6751821	ElseStatement	else		6751058	0					
ANR	6751822	IfStatement	if ( 31 == raw_info_t -> raw_format )		6751058	0					
ANR	6751823	Condition	31 == raw_info_t -> raw_format	840:16:26309:26336	6751058	0	True				
ANR	6751824	EqualityExpression	31 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751825	PrimaryExpression	31		6751058	0					
ANR	6751826	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751827	Identifier	raw_info_t		6751058	0					
ANR	6751828	Identifier	raw_format		6751058	1					
ANR	6751829	CompoundStatement		142:46:4381:4381	6751058	1					
ANR	6751830	ExpressionStatement	con -> ncomp = 4	841:12:26368:26382	6751058	0	True				
ANR	6751831	AssignmentExpression	con -> ncomp = 4		6751058	0		=			
ANR	6751832	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751833	Identifier	con		6751058	0					
ANR	6751834	Identifier	ncomp		6751058	1					
ANR	6751835	PrimaryExpression	4		6751058	1					
ANR	6751836	ExpressionStatement	con -> bpi = 8	842:12:26396:26408	6751058	1	True				
ANR	6751837	AssignmentExpression	con -> bpi = 8		6751058	0		=			
ANR	6751838	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6751839	Identifier	con		6751058	0					
ANR	6751840	Identifier	bpi		6751058	1					
ANR	6751841	PrimaryExpression	8		6751058	1					
ANR	6751842	ElseStatement	else		6751058	0					
ANR	6751843	IfStatement	if ( 32 == raw_info_t -> raw_format )		6751058	0					
ANR	6751844	Condition	32 == raw_info_t -> raw_format	844:16:26448:26475	6751058	0	True				
ANR	6751845	EqualityExpression	32 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751846	PrimaryExpression	32		6751058	0					
ANR	6751847	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751848	Identifier	raw_info_t		6751058	0					
ANR	6751849	Identifier	raw_format		6751058	1					
ANR	6751850	CompoundStatement		146:46:4520:4520	6751058	1					
ANR	6751851	ExpressionStatement	con -> ncomp = 4	845:12:26508:26522	6751058	0	True				
ANR	6751852	AssignmentExpression	con -> ncomp = 4		6751058	0		=			
ANR	6751853	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751854	Identifier	con		6751058	0					
ANR	6751855	Identifier	ncomp		6751058	1					
ANR	6751856	PrimaryExpression	4		6751058	1					
ANR	6751857	ExpressionStatement	con -> bpi = 8	846:12:26536:26548	6751058	1	True				
ANR	6751858	AssignmentExpression	con -> bpi = 8		6751058	0		=			
ANR	6751859	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6751860	Identifier	con		6751058	0					
ANR	6751861	Identifier	bpi		6751058	1					
ANR	6751862	PrimaryExpression	8		6751058	1					
ANR	6751863	ElseStatement	else		6751058	0					
ANR	6751864	IfStatement	if ( 33 == raw_info_t -> raw_format )		6751058	0					
ANR	6751865	Condition	33 == raw_info_t -> raw_format	848:16:26588:26615	6751058	0	True				
ANR	6751866	EqualityExpression	33 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751867	PrimaryExpression	33		6751058	0					
ANR	6751868	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751869	Identifier	raw_info_t		6751058	0					
ANR	6751870	Identifier	raw_format		6751058	1					
ANR	6751871	CompoundStatement		150:46:4660:4660	6751058	1					
ANR	6751872	ExpressionStatement	con -> ncomp = 4	849:12:26648:26662	6751058	0	True				
ANR	6751873	AssignmentExpression	con -> ncomp = 4		6751058	0		=			
ANR	6751874	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751875	Identifier	con		6751058	0					
ANR	6751876	Identifier	ncomp		6751058	1					
ANR	6751877	PrimaryExpression	4		6751058	1					
ANR	6751878	ExpressionStatement	con -> bpi = 16	850:12:26676:26689	6751058	1	True				
ANR	6751879	AssignmentExpression	con -> bpi = 16		6751058	0		=			
ANR	6751880	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6751881	Identifier	con		6751058	0					
ANR	6751882	Identifier	bpi		6751058	1					
ANR	6751883	PrimaryExpression	16		6751058	1					
ANR	6751884	ElseStatement	else		6751058	0					
ANR	6751885	IfStatement	if ( 34 == raw_info_t -> raw_format )		6751058	0					
ANR	6751886	Condition	34 == raw_info_t -> raw_format	852:16:26729:26756	6751058	0	True				
ANR	6751887	EqualityExpression	34 == raw_info_t -> raw_format		6751058	0		==			
ANR	6751888	PrimaryExpression	34		6751058	0					
ANR	6751889	PtrMemberAccess	raw_info_t -> raw_format		6751058	1					
ANR	6751890	Identifier	raw_info_t		6751058	0					
ANR	6751891	Identifier	raw_format		6751058	1					
ANR	6751892	CompoundStatement		154:46:4801:4801	6751058	1					
ANR	6751893	ExpressionStatement	con -> ncomp = 4	853:12:26795:26809	6751058	0	True				
ANR	6751894	AssignmentExpression	con -> ncomp = 4		6751058	0		=			
ANR	6751895	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6751896	Identifier	con		6751058	0					
ANR	6751897	Identifier	ncomp		6751058	1					
ANR	6751898	PrimaryExpression	4		6751058	1					
ANR	6751899	ExpressionStatement	con -> bpi = 32	854:12:26823:26836	6751058	1	True				
ANR	6751900	AssignmentExpression	con -> bpi = 32		6751058	0		=			
ANR	6751901	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6751902	Identifier	con		6751058	0					
ANR	6751903	Identifier	bpi		6751058	1					
ANR	6751904	PrimaryExpression	32		6751058	1					
ANR	6751905	ExpressionStatement	con -> sf = 3	855:12:26862:26873	6751058	2	True				
ANR	6751906	AssignmentExpression	con -> sf = 3		6751058	0		=			
ANR	6751907	PtrMemberAccess	con -> sf		6751058	0					
ANR	6751908	Identifier	con		6751058	0					
ANR	6751909	Identifier	sf		6751058	1					
ANR	6751910	PrimaryExpression	3		6751058	1					
ANR	6751911	ExpressionStatement	con -> photometric = 2	856:12:26887:26907	6751058	3	True				
ANR	6751912	AssignmentExpression	con -> photometric = 2		6751058	0		=			
ANR	6751913	PtrMemberAccess	con -> photometric		6751058	0					
ANR	6751914	Identifier	con		6751058	0					
ANR	6751915	Identifier	photometric		6751058	1					
ANR	6751916	PrimaryExpression	2		6751058	1					
ANR	6751917	IfStatement	if ( con -> padBytes == 0 && * padded_format )		6751058	24					
ANR	6751918	Condition	con -> padBytes == 0 && * padded_format	860:7:26945:26980	6751058	0	True				
ANR	6751919	AndExpression	con -> padBytes == 0 && * padded_format		6751058	0		&&			
ANR	6751920	EqualityExpression	con -> padBytes == 0		6751058	0		==			
ANR	6751921	PtrMemberAccess	con -> padBytes		6751058	0					
ANR	6751922	Identifier	con		6751058	0					
ANR	6751923	Identifier	padBytes		6751058	1					
ANR	6751924	PrimaryExpression	0		6751058	1					
ANR	6751925	UnaryOperationExpression	* padded_format		6751058	1					
ANR	6751926	UnaryOperator	*		6751058	0					
ANR	6751927	Identifier	padded_format		6751058	1					
ANR	6751928	CompoundStatement		163:4:5029:5029	6751058	1					
ANR	6751929	ExpressionStatement	* padded_format = 0	862:8:26997:27015	6751058	0	True				
ANR	6751930	AssignmentExpression	* padded_format = 0		6751058	0		=			
ANR	6751931	UnaryOperationExpression	* padded_format		6751058	0					
ANR	6751932	UnaryOperator	*		6751058	0					
ANR	6751933	Identifier	padded_format		6751058	1					
ANR	6751934	PrimaryExpression	0		6751058	1					
ANR	6751935	ExpressionStatement	"fprintf ( stderr , ""Ignoring -p option from command line \\n"" )"	863:8:27025:27083	6751058	1	True				
ANR	6751936	CallExpression	"fprintf ( stderr , ""Ignoring -p option from command line \\n"" )"		6751058	0					
ANR	6751937	Callee	fprintf		6751058	0					
ANR	6751938	Identifier	fprintf		6751058	0					
ANR	6751939	ArgumentList	stderr		6751058	1					
ANR	6751940	Argument	stderr		6751058	0					
ANR	6751941	Identifier	stderr		6751058	0					
ANR	6751942	Argument	"""Ignoring -p option from command line \\n"""		6751058	1					
ANR	6751943	PrimaryExpression	"""Ignoring -p option from command line \\n"""		6751058	0					
ANR	6751944	IdentifierDeclStatement	size_t strip_bytes ;	866:4:27096:27114	6751058	25	True				
ANR	6751945	IdentifierDecl	strip_bytes		6751058	0					
ANR	6751946	IdentifierDeclType	size_t		6751058	0					
ANR	6751947	Identifier	strip_bytes		6751058	1					
ANR	6751948	IfStatement	if ( con -> ycc_format == 1 )		6751058	26					
ANR	6751949	Condition	con -> ycc_format == 1	867:8:27124:27143	6751058	0	True				
ANR	6751950	EqualityExpression	con -> ycc_format == 1		6751058	0		==			
ANR	6751951	PtrMemberAccess	con -> ycc_format		6751058	0					
ANR	6751952	Identifier	con		6751058	0					
ANR	6751953	Identifier	ycc_format		6751058	1					
ANR	6751954	PrimaryExpression	1		6751058	1					
ANR	6751955	ExpressionStatement	strip_bytes = 8 * ( ( 4 * con -> ncomp - 6 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2	868:8:27154:27249	6751058	1	True				
ANR	6751956	AssignmentExpression	strip_bytes = 8 * ( ( 4 * con -> ncomp - 6 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		6751058	0		=			
ANR	6751957	Identifier	strip_bytes		6751058	0					
ANR	6751958	MultiplicativeExpression	8 * ( ( 4 * con -> ncomp - 6 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		6751058	1		*			
ANR	6751959	PrimaryExpression	8		6751058	0					
ANR	6751960	MultiplicativeExpression	( ( 4 * con -> ncomp - 6 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		6751058	1		*			
ANR	6751961	AdditiveExpression	( 4 * con -> ncomp - 6 ) + con -> padBytes		6751058	0		+			
ANR	6751962	AdditiveExpression	4 * con -> ncomp - 6		6751058	0		-			
ANR	6751963	MultiplicativeExpression	4 * con -> ncomp		6751058	0		*			
ANR	6751964	PrimaryExpression	4		6751058	0					
ANR	6751965	PtrMemberAccess	con -> ncomp		6751058	1					
ANR	6751966	Identifier	con		6751058	0					
ANR	6751967	Identifier	ncomp		6751058	1					
ANR	6751968	PrimaryExpression	6		6751058	1					
ANR	6751969	PtrMemberAccess	con -> padBytes		6751058	1					
ANR	6751970	Identifier	con		6751058	0					
ANR	6751971	Identifier	padBytes		6751058	1					
ANR	6751972	MultiplicativeExpression	( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		6751058	1		*			
ANR	6751973	MultiplicativeExpression	( con -> bpi + 7 ) / 8		6751058	0		/			
ANR	6751974	AdditiveExpression	con -> bpi + 7		6751058	0		+			
ANR	6751975	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6751976	Identifier	con		6751058	0					
ANR	6751977	Identifier	bpi		6751058	1					
ANR	6751978	PrimaryExpression	7		6751058	1					
ANR	6751979	PrimaryExpression	8		6751058	1					
ANR	6751980	MultiplicativeExpression	( ( con -> wid + 15 ) & ~15 ) / 2		6751058	1		/			
ANR	6751981	BitAndExpression	( con -> wid + 15 ) & ~15		6751058	0		&			
ANR	6751982	AdditiveExpression	con -> wid + 15		6751058	0		+			
ANR	6751983	PtrMemberAccess	con -> wid		6751058	0					
ANR	6751984	Identifier	con		6751058	0					
ANR	6751985	Identifier	wid		6751058	1					
ANR	6751986	PrimaryExpression	15		6751058	1					
ANR	6751987	Identifier	~15		6751058	1					
ANR	6751988	PrimaryExpression	2		6751058	1					
ANR	6751989	ElseStatement	else		6751058	0					
ANR	6751990	IfStatement	if ( con -> ycc_format == 2 )		6751058	0					
ANR	6751991	Condition	con -> ycc_format == 2	869:13:27264:27283	6751058	0	True				
ANR	6751992	EqualityExpression	con -> ycc_format == 2		6751058	0		==			
ANR	6751993	PtrMemberAccess	con -> ycc_format		6751058	0					
ANR	6751994	Identifier	con		6751058	0					
ANR	6751995	Identifier	ycc_format		6751058	1					
ANR	6751996	PrimaryExpression	2		6751058	1					
ANR	6751997	ExpressionStatement	strip_bytes = 16 * ( ( 2 * con -> ncomp - 2 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2	870:8:27294:27390	6751058	1	True				
ANR	6751998	AssignmentExpression	strip_bytes = 16 * ( ( 2 * con -> ncomp - 2 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		6751058	0		=			
ANR	6751999	Identifier	strip_bytes		6751058	0					
ANR	6752000	MultiplicativeExpression	16 * ( ( 2 * con -> ncomp - 2 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		6751058	1		*			
ANR	6752001	PrimaryExpression	16		6751058	0					
ANR	6752002	MultiplicativeExpression	( ( 2 * con -> ncomp - 2 ) + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		6751058	1		*			
ANR	6752003	AdditiveExpression	( 2 * con -> ncomp - 2 ) + con -> padBytes		6751058	0		+			
ANR	6752004	AdditiveExpression	2 * con -> ncomp - 2		6751058	0		-			
ANR	6752005	MultiplicativeExpression	2 * con -> ncomp		6751058	0		*			
ANR	6752006	PrimaryExpression	2		6751058	0					
ANR	6752007	PtrMemberAccess	con -> ncomp		6751058	1					
ANR	6752008	Identifier	con		6751058	0					
ANR	6752009	Identifier	ncomp		6751058	1					
ANR	6752010	PrimaryExpression	2		6751058	1					
ANR	6752011	PtrMemberAccess	con -> padBytes		6751058	1					
ANR	6752012	Identifier	con		6751058	0					
ANR	6752013	Identifier	padBytes		6751058	1					
ANR	6752014	MultiplicativeExpression	( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 ) / 2		6751058	1		*			
ANR	6752015	MultiplicativeExpression	( con -> bpi + 7 ) / 8		6751058	0		/			
ANR	6752016	AdditiveExpression	con -> bpi + 7		6751058	0		+			
ANR	6752017	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6752018	Identifier	con		6751058	0					
ANR	6752019	Identifier	bpi		6751058	1					
ANR	6752020	PrimaryExpression	7		6751058	1					
ANR	6752021	PrimaryExpression	8		6751058	1					
ANR	6752022	MultiplicativeExpression	( ( con -> wid + 15 ) & ~15 ) / 2		6751058	1		/			
ANR	6752023	BitAndExpression	( con -> wid + 15 ) & ~15		6751058	0		&			
ANR	6752024	AdditiveExpression	con -> wid + 15		6751058	0		+			
ANR	6752025	PtrMemberAccess	con -> wid		6751058	0					
ANR	6752026	Identifier	con		6751058	0					
ANR	6752027	Identifier	wid		6751058	1					
ANR	6752028	PrimaryExpression	15		6751058	1					
ANR	6752029	Identifier	~15		6751058	1					
ANR	6752030	PrimaryExpression	2		6751058	1					
ANR	6752031	ElseStatement	else		6751058	0					
ANR	6752032	ExpressionStatement	strip_bytes = 16 * ( con -> ncomp + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 )	872:8:27409:27497	6751058	0	True				
ANR	6752033	AssignmentExpression	strip_bytes = 16 * ( con -> ncomp + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 )		6751058	0		=			
ANR	6752034	Identifier	strip_bytes		6751058	0					
ANR	6752035	MultiplicativeExpression	16 * ( con -> ncomp + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 )		6751058	1		*			
ANR	6752036	PrimaryExpression	16		6751058	0					
ANR	6752037	MultiplicativeExpression	( con -> ncomp + con -> padBytes ) * ( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 )		6751058	1		*			
ANR	6752038	AdditiveExpression	con -> ncomp + con -> padBytes		6751058	0		+			
ANR	6752039	PtrMemberAccess	con -> ncomp		6751058	0					
ANR	6752040	Identifier	con		6751058	0					
ANR	6752041	Identifier	ncomp		6751058	1					
ANR	6752042	PtrMemberAccess	con -> padBytes		6751058	1					
ANR	6752043	Identifier	con		6751058	0					
ANR	6752044	Identifier	padBytes		6751058	1					
ANR	6752045	MultiplicativeExpression	( ( con -> bpi + 7 ) / 8 ) * ( ( con -> wid + 15 ) & ~15 )		6751058	1		*			
ANR	6752046	MultiplicativeExpression	( con -> bpi + 7 ) / 8		6751058	0		/			
ANR	6752047	AdditiveExpression	con -> bpi + 7		6751058	0		+			
ANR	6752048	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6752049	Identifier	con		6751058	0					
ANR	6752050	Identifier	bpi		6751058	1					
ANR	6752051	PrimaryExpression	7		6751058	1					
ANR	6752052	PrimaryExpression	8		6751058	1					
ANR	6752053	BitAndExpression	( con -> wid + 15 ) & ~15		6751058	1		&			
ANR	6752054	AdditiveExpression	con -> wid + 15		6751058	0		+			
ANR	6752055	PtrMemberAccess	con -> wid		6751058	0					
ANR	6752056	Identifier	con		6751058	0					
ANR	6752057	Identifier	wid		6751058	1					
ANR	6752058	PrimaryExpression	15		6751058	1					
ANR	6752059	Identifier	~15		6751058	1					
ANR	6752060	IfStatement	if ( con -> bpi == 1 )		6751058	27					
ANR	6752061	Condition	con -> bpi == 1	874:8:27508:27520	6751058	0	True				
ANR	6752062	EqualityExpression	con -> bpi == 1		6751058	0		==			
ANR	6752063	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6752064	Identifier	con		6751058	0					
ANR	6752065	Identifier	bpi		6751058	1					
ANR	6752066	PrimaryExpression	1		6751058	1					
ANR	6752067	ExpressionStatement	strip_bytes >>= 3	875:8:27531:27548	6751058	1	True				
ANR	6752068	AssignmentExpression	strip_bytes >>= 3		6751058	0		>>=			
ANR	6752069	Identifier	strip_bytes		6751058	0					
ANR	6752070	PrimaryExpression	3		6751058	1					
ANR	6752071	ElseStatement	else		6751058	0					
ANR	6752072	IfStatement	if ( ( con -> bpi == 5 ) || ( con -> bpi == 6 ) || ( con -> bpi == 10 && ! con -> ycc_bd10_flag ) )		6751058	0					
ANR	6752073	Condition	( con -> bpi == 5 ) || ( con -> bpi == 6 ) || ( con -> bpi == 10 && ! con -> ycc_bd10_flag )	876:13:27563:27639	6751058	0	True				
ANR	6752074	OrExpression	( con -> bpi == 5 ) || ( con -> bpi == 6 ) || ( con -> bpi == 10 && ! con -> ycc_bd10_flag )		6751058	0		||			
ANR	6752075	EqualityExpression	con -> bpi == 5		6751058	0		==			
ANR	6752076	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6752077	Identifier	con		6751058	0					
ANR	6752078	Identifier	bpi		6751058	1					
ANR	6752079	PrimaryExpression	5		6751058	1					
ANR	6752080	OrExpression	( con -> bpi == 6 ) || ( con -> bpi == 10 && ! con -> ycc_bd10_flag )		6751058	1		||			
ANR	6752081	EqualityExpression	con -> bpi == 6		6751058	0		==			
ANR	6752082	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6752083	Identifier	con		6751058	0					
ANR	6752084	Identifier	bpi		6751058	1					
ANR	6752085	PrimaryExpression	6		6751058	1					
ANR	6752086	AndExpression	con -> bpi == 10 && ! con -> ycc_bd10_flag		6751058	1		&&			
ANR	6752087	EqualityExpression	con -> bpi == 10		6751058	0		==			
ANR	6752088	PtrMemberAccess	con -> bpi		6751058	0					
ANR	6752089	Identifier	con		6751058	0					
ANR	6752090	Identifier	bpi		6751058	1					
ANR	6752091	PrimaryExpression	10		6751058	1					
ANR	6752092	UnaryOperationExpression	! con -> ycc_bd10_flag		6751058	1					
ANR	6752093	UnaryOperator	!		6751058	0					
ANR	6752094	PtrMemberAccess	con -> ycc_bd10_flag		6751058	1					
ANR	6752095	Identifier	con		6751058	0					
ANR	6752096	Identifier	ycc_bd10_flag		6751058	1					
ANR	6752097	ExpressionStatement	strip_bytes = ( strip_bytes << 1 ) / 3	877:8:27650:27686	6751058	1	True				
ANR	6752098	AssignmentExpression	strip_bytes = ( strip_bytes << 1 ) / 3		6751058	0		=			
ANR	6752099	Identifier	strip_bytes		6751058	0					
ANR	6752100	MultiplicativeExpression	( strip_bytes << 1 ) / 3		6751058	1		/			
ANR	6752101	ShiftExpression	strip_bytes << 1		6751058	0		<<			
ANR	6752102	Identifier	strip_bytes		6751058	0					
ANR	6752103	PrimaryExpression	1		6751058	1					
ANR	6752104	PrimaryExpression	3		6751058	1					
ANR	6752105	ExpressionStatement	"con -> buf = calloc ( strip_bytes , 1 )"	879:4:27715:27748	6751058	28	True				
ANR	6752106	AssignmentExpression	"con -> buf = calloc ( strip_bytes , 1 )"		6751058	0		=			
ANR	6752107	PtrMemberAccess	con -> buf		6751058	0					
ANR	6752108	Identifier	con		6751058	0					
ANR	6752109	Identifier	buf		6751058	1					
ANR	6752110	CallExpression	"calloc ( strip_bytes , 1 )"		6751058	1					
ANR	6752111	Callee	calloc		6751058	0					
ANR	6752112	Identifier	calloc		6751058	0					
ANR	6752113	ArgumentList	strip_bytes		6751058	1					
ANR	6752114	Argument	strip_bytes		6751058	0					
ANR	6752115	Identifier	strip_bytes		6751058	0					
ANR	6752116	Argument	1		6751058	1					
ANR	6752117	PrimaryExpression	1		6751058	0					
ANR	6752118	IfStatement	if ( con -> buf == 0 )		6751058	29					
ANR	6752119	Condition	con -> buf == 0	880:8:27758:27768	6751058	0	True				
ANR	6752120	EqualityExpression	con -> buf == 0		6751058	0		==			
ANR	6752121	PtrMemberAccess	con -> buf		6751058	0					
ANR	6752122	Identifier	con		6751058	0					
ANR	6752123	Identifier	buf		6751058	1					
ANR	6752124	PrimaryExpression	0		6751058	1					
ANR	6752125	ExpressionStatement	"error ( ""cannot allocate memory"" )"	881:8:27779:27810	6751058	1	True				
ANR	6752126	CallExpression	"error ( ""cannot allocate memory"" )"		6751058	0					
ANR	6752127	Callee	error		6751058	0					
ANR	6752128	Identifier	error		6751058	0					
ANR	6752129	ArgumentList	"""cannot allocate memory"""		6751058	1					
ANR	6752130	Argument	"""cannot allocate memory"""		6751058	0					
ANR	6752131	PrimaryExpression	"""cannot allocate memory"""		6751058	0					
ANR	6752132	ReturnStatement	return con ;	883:4:27817:27827	6751058	30	True				
ANR	6752133	Identifier	con		6751058	0					
ANR	6752134	ReturnType	void *		6751058	1					
ANR	6752135	Identifier	open_input_file		6751058	2					
ANR	6752136	ParameterList	"const char * name , const raw_info * raw_info_t , int * alpha_mode , int * padded_format"		6751058	3					
ANR	6752137	Parameter	const char * name	698:22:21874:21889	6751058	0	True				
ANR	6752138	ParameterType	const char *		6751058	0					
ANR	6752139	Identifier	name		6751058	1					
ANR	6752140	Parameter	const raw_info * raw_info_t	698:40:21892:21917	6751058	1	True				
ANR	6752141	ParameterType	const raw_info *		6751058	0					
ANR	6752142	Identifier	raw_info_t		6751058	1					
ANR	6752143	Parameter	int * alpha_mode	698:68:21920:21934	6751058	2	True				
ANR	6752144	ParameterType	int *		6751058	0					
ANR	6752145	Identifier	alpha_mode		6751058	1					
ANR	6752146	Parameter	int * padded_format	698:85:21937:21954	6751058	3	True				
ANR	6752147	ParameterType	int *		6751058	0					
ANR	6752148	Identifier	padded_format		6751058	1					
ANR	6752149	CFGEntryNode	ENTRY		6751058		True				
ANR	6752150	CFGExitNode	EXIT		6751058		True				
ANR	6752151	Symbol	con		6751058						
ANR	6752152	Symbol	con -> ncomp		6751058						
ANR	6752153	Symbol	get_uint8		6751058						
ANR	6752154	Symbol	raw_info_t -> raw_bpc		6751058						
ANR	6752155	Symbol	strip_bytes		6751058						
ANR	6752156	Symbol	calloc		6751058						
ANR	6752157	Symbol	raw_info_t -> raw_height		6751058						
ANR	6752158	Symbol	con -> swap		6751058						
ANR	6752159	Symbol	con -> ycc_bd10_flag		6751058						
ANR	6752160	Symbol	* con		6751058						
ANR	6752161	Symbol	con -> bpi		6751058						
ANR	6752162	Symbol	alpha_mode		6751058						
ANR	6752163	Symbol	con -> nlines		6751058						
ANR	6752164	Symbol	raw_info_t -> is_raw		6751058						
ANR	6752165	Symbol	con -> padBytes		6751058						
ANR	6752166	Symbol	con -> photometric		6751058						
ANR	6752167	Symbol	con -> nstrips		6751058						
ANR	6752168	Symbol	con -> wid		6751058						
ANR	6752169	Symbol	malloc		6751058						
ANR	6752170	Symbol	fopen		6751058						
ANR	6752171	Symbol	con -> file		6751058						
ANR	6752172	Symbol	~15		6751058						
ANR	6752173	Symbol	con -> hei		6751058						
ANR	6752174	Symbol	con -> my		6751058						
ANR	6752175	Symbol	con -> offoff		6751058						
ANR	6752176	Symbol	raw_info_t -> raw_format		6751058						
ANR	6752177	Symbol	con -> ycc_format		6751058						
ANR	6752178	Symbol	padded_format		6751058						
ANR	6752179	Symbol	raw_info_t -> raw_width		6751058						
ANR	6752180	Symbol	stderr		6751058						
ANR	6752181	Symbol	con -> name		6751058						
ANR	6752182	Symbol	con -> strip		6751058						
ANR	6752183	Symbol	raw_info_t		6751058						
ANR	6752184	Symbol	con -> format		6751058						
ANR	6752185	Symbol	* raw_info_t		6751058						
ANR	6752186	Symbol	con -> line		6751058						
ANR	6752187	Symbol	* padded_format		6751058						
ANR	6752188	Symbol	* alpha_mode		6751058						
ANR	6752189	Symbol	name		6751058						
ANR	6752190	Symbol	con -> sf		6751058						
ANR	6752191	Symbol	con -> buf		6751058						
ANR	6752192	Function	set_ncomp	885:0:27831:27951							
ANR	6752193	FunctionDef	"set_ncomp (void * input_handle , int ncomp)"		6752192	0					
ANR	6752194	CompoundStatement		886:0:27877:27951	6752192	0					
ANR	6752195	IdentifierDeclStatement	context * con = ( context * ) input_handle ;	887:4:27883:27921	6752192	0	True				
ANR	6752196	IdentifierDecl	* con = ( context * ) input_handle		6752192	0					
ANR	6752197	IdentifierDeclType	context *		6752192	0					
ANR	6752198	Identifier	con		6752192	1					
ANR	6752199	AssignmentExpression	* con = ( context * ) input_handle		6752192	2		=			
ANR	6752200	Identifier	con		6752192	0					
ANR	6752201	CastExpression	( context * ) input_handle		6752192	1					
ANR	6752202	CastTarget	context *		6752192	0					
ANR	6752203	Identifier	input_handle		6752192	1					
ANR	6752204	ExpressionStatement	con -> ncomp = ncomp	888:4:27927:27945	6752192	1	True				
ANR	6752205	AssignmentExpression	con -> ncomp = ncomp		6752192	0		=			
ANR	6752206	PtrMemberAccess	con -> ncomp		6752192	0					
ANR	6752207	Identifier	con		6752192	0					
ANR	6752208	Identifier	ncomp		6752192	1					
ANR	6752209	Identifier	ncomp		6752192	1					
ANR	6752210	ReturnType	void		6752192	1					
ANR	6752211	Identifier	set_ncomp		6752192	2					
ANR	6752212	ParameterList	"void * input_handle , int ncomp"		6752192	3					
ANR	6752213	Parameter	void * input_handle	885:15:27846:27863	6752192	0	True				
ANR	6752214	ParameterType	void *		6752192	0					
ANR	6752215	Identifier	input_handle		6752192	1					
ANR	6752216	Parameter	int ncomp	885:35:27866:27874	6752192	1	True				
ANR	6752217	ParameterType	int		6752192	0					
ANR	6752218	Identifier	ncomp		6752192	1					
ANR	6752219	CFGEntryNode	ENTRY		6752192		True				
ANR	6752220	CFGExitNode	EXIT		6752192		True				
ANR	6752221	Symbol	ncomp		6752192						
ANR	6752222	Symbol	con		6752192						
ANR	6752223	Symbol	* con		6752192						
ANR	6752224	Symbol	con -> ncomp		6752192						
ANR	6752225	Symbol	input_handle		6752192						
ANR	6752226	Function	open_output_file	891:0:27954:28300							
ANR	6752227	FunctionDef	open_output_file (const char * name)		6752226	0					
ANR	6752228	CompoundStatement		892:0:27995:28300	6752226	0					
ANR	6752229	IdentifierDeclStatement	context * con = ( context * ) malloc ( sizeof ( context ) ) ;	893:4:28001:28049	6752226	0	True				
ANR	6752230	IdentifierDecl	* con = ( context * ) malloc ( sizeof ( context ) )		6752226	0					
ANR	6752231	IdentifierDeclType	context *		6752226	0					
ANR	6752232	Identifier	con		6752226	1					
ANR	6752233	AssignmentExpression	* con = ( context * ) malloc ( sizeof ( context ) )		6752226	2		=			
ANR	6752234	Identifier	con		6752226	0					
ANR	6752235	CastExpression	( context * ) malloc ( sizeof ( context ) )		6752226	1					
ANR	6752236	CastTarget	context *		6752226	0					
ANR	6752237	CallExpression	malloc ( sizeof ( context ) )		6752226	1					
ANR	6752238	Callee	malloc		6752226	0					
ANR	6752239	Identifier	malloc		6752226	0					
ANR	6752240	ArgumentList	sizeof ( context )		6752226	1					
ANR	6752241	Argument	sizeof ( context )		6752226	0					
ANR	6752242	SizeofExpression	sizeof ( context )		6752226	0					
ANR	6752243	Sizeof	sizeof		6752226	0					
ANR	6752244	SizeofOperand	context		6752226	1					
ANR	6752245	IfStatement	if ( con == 0 )		6752226	1					
ANR	6752246	Condition	con == 0	894:8:28059:28064	6752226	0	True				
ANR	6752247	EqualityExpression	con == 0		6752226	0		==			
ANR	6752248	Identifier	con		6752226	0					
ANR	6752249	PrimaryExpression	0		6752226	1					
ANR	6752250	ExpressionStatement	"error ( ""unable to allocate memory"" )"	895:8:28075:28109	6752226	1	True				
ANR	6752251	CallExpression	"error ( ""unable to allocate memory"" )"		6752226	0					
ANR	6752252	Callee	error		6752226	0					
ANR	6752253	Identifier	error		6752226	0					
ANR	6752254	ArgumentList	"""unable to allocate memory"""		6752226	1					
ANR	6752255	Argument	"""unable to allocate memory"""		6752226	0					
ANR	6752256	PrimaryExpression	"""unable to allocate memory"""		6752226	0					
ANR	6752257	ExpressionStatement	con -> file = 0	896:4:28115:28128	6752226	2	True				
ANR	6752258	AssignmentExpression	con -> file = 0		6752226	0		=			
ANR	6752259	PtrMemberAccess	con -> file		6752226	0					
ANR	6752260	Identifier	con		6752226	0					
ANR	6752261	Identifier	file		6752226	1					
ANR	6752262	PrimaryExpression	0		6752226	1					
ANR	6752263	ExpressionStatement	con -> name = name	897:4:28134:28150	6752226	3	True				
ANR	6752264	AssignmentExpression	con -> name = name		6752226	0		=			
ANR	6752265	PtrMemberAccess	con -> name		6752226	0					
ANR	6752266	Identifier	con		6752226	0					
ANR	6752267	Identifier	name		6752226	1					
ANR	6752268	Identifier	name		6752226	1					
ANR	6752269	ExpressionStatement	con -> wid = 0	898:4:28156:28168	6752226	4	True				
ANR	6752270	AssignmentExpression	con -> wid = 0		6752226	0		=			
ANR	6752271	PtrMemberAccess	con -> wid		6752226	0					
ANR	6752272	Identifier	con		6752226	0					
ANR	6752273	Identifier	wid		6752226	1					
ANR	6752274	PrimaryExpression	0		6752226	1					
ANR	6752275	ExpressionStatement	con -> hei = 0	899:4:28174:28186	6752226	5	True				
ANR	6752276	AssignmentExpression	con -> hei = 0		6752226	0		=			
ANR	6752277	PtrMemberAccess	con -> hei		6752226	0					
ANR	6752278	Identifier	con		6752226	0					
ANR	6752279	Identifier	hei		6752226	1					
ANR	6752280	PrimaryExpression	0		6752226	1					
ANR	6752281	ExpressionStatement	con -> ncomp = 0	900:4:28192:28206	6752226	6	True				
ANR	6752282	AssignmentExpression	con -> ncomp = 0		6752226	0		=			
ANR	6752283	PtrMemberAccess	con -> ncomp		6752226	0					
ANR	6752284	Identifier	con		6752226	0					
ANR	6752285	Identifier	ncomp		6752226	1					
ANR	6752286	PrimaryExpression	0		6752226	1					
ANR	6752287	ExpressionStatement	con -> bpi = 0	901:4:28212:28224	6752226	7	True				
ANR	6752288	AssignmentExpression	con -> bpi = 0		6752226	0		=			
ANR	6752289	PtrMemberAccess	con -> bpi		6752226	0					
ANR	6752290	Identifier	con		6752226	0					
ANR	6752291	Identifier	bpi		6752226	1					
ANR	6752292	PrimaryExpression	0		6752226	1					
ANR	6752293	ExpressionStatement	con -> format = 0	902:4:28230:28245	6752226	8	True				
ANR	6752294	AssignmentExpression	con -> format = 0		6752226	0		=			
ANR	6752295	PtrMemberAccess	con -> format		6752226	0					
ANR	6752296	Identifier	con		6752226	0					
ANR	6752297	Identifier	format		6752226	1					
ANR	6752298	PrimaryExpression	0		6752226	1					
ANR	6752299	ExpressionStatement	con -> swap = 0	903:4:28251:28264	6752226	9	True				
ANR	6752300	AssignmentExpression	con -> swap = 0		6752226	0		=			
ANR	6752301	PtrMemberAccess	con -> swap		6752226	0					
ANR	6752302	Identifier	con		6752226	0					
ANR	6752303	Identifier	swap		6752226	1					
ANR	6752304	PrimaryExpression	0		6752226	1					
ANR	6752305	ExpressionStatement	con -> buf = 0	904:4:28270:28282	6752226	10	True				
ANR	6752306	AssignmentExpression	con -> buf = 0		6752226	0		=			
ANR	6752307	PtrMemberAccess	con -> buf		6752226	0					
ANR	6752308	Identifier	con		6752226	0					
ANR	6752309	Identifier	buf		6752226	1					
ANR	6752310	PrimaryExpression	0		6752226	1					
ANR	6752311	ReturnStatement	return con ;	905:4:28288:28298	6752226	11	True				
ANR	6752312	Identifier	con		6752226	0					
ANR	6752313	ReturnType	void *		6752226	1					
ANR	6752314	Identifier	open_output_file		6752226	2					
ANR	6752315	ParameterList	const char * name		6752226	3					
ANR	6752316	Parameter	const char * name	891:23:27977:27992	6752226	0	True				
ANR	6752317	ParameterType	const char *		6752226	0					
ANR	6752318	Identifier	name		6752226	1					
ANR	6752319	CFGEntryNode	ENTRY		6752226		True				
ANR	6752320	CFGExitNode	EXIT		6752226		True				
ANR	6752321	Symbol	malloc		6752226						
ANR	6752322	Symbol	con		6752226						
ANR	6752323	Symbol	con -> file		6752226						
ANR	6752324	Symbol	con -> hei		6752226						
ANR	6752325	Symbol	con -> ncomp		6752226						
ANR	6752326	Symbol	con -> name		6752226						
ANR	6752327	Symbol	con -> swap		6752226						
ANR	6752328	Symbol	* con		6752226						
ANR	6752329	Symbol	con -> format		6752226						
ANR	6752330	Symbol	con -> bpi		6752226						
ANR	6752331	Symbol	name		6752226						
ANR	6752332	Symbol	con -> buf		6752226						
ANR	6752333	Symbol	con -> wid		6752226						
ANR	6752334	Function	close_file	908:0:28303:28502							
ANR	6752335	FunctionDef	close_file (void * handle)		6752334	0					
ANR	6752336	CompoundStatement		909:0:28333:28502	6752334	0					
ANR	6752337	IfStatement	if ( handle == NULL )		6752334	0					
ANR	6752338	Condition	handle == NULL	910:7:28342:28355	6752334	0	True				
ANR	6752339	EqualityExpression	handle == NULL		6752334	0		==			
ANR	6752340	Identifier	handle		6752334	0					
ANR	6752341	Identifier	NULL		6752334	1					
ANR	6752342	ReturnStatement	return ;	911:8:28366:28372	6752334	1	True				
ANR	6752343	IdentifierDeclStatement	context * con = ( context * ) handle ;	912:4:28378:28409	6752334	1	True				
ANR	6752344	IdentifierDecl	* con = ( context * ) handle		6752334	0					
ANR	6752345	IdentifierDeclType	context *		6752334	0					
ANR	6752346	Identifier	con		6752334	1					
ANR	6752347	AssignmentExpression	* con = ( context * ) handle		6752334	2		=			
ANR	6752348	Identifier	con		6752334	0					
ANR	6752349	CastExpression	( context * ) handle		6752334	1					
ANR	6752350	CastTarget	context *		6752334	0					
ANR	6752351	Identifier	handle		6752334	1					
ANR	6752352	IfStatement	if ( con -> file )		6752334	2					
ANR	6752353	Condition	con -> file	913:8:28419:28427	6752334	0	True				
ANR	6752354	PtrMemberAccess	con -> file		6752334	0					
ANR	6752355	Identifier	con		6752334	0					
ANR	6752356	Identifier	file		6752334	1					
ANR	6752357	ExpressionStatement	fclose ( con -> file )	913:19:28430:28447	6752334	1	True				
ANR	6752358	CallExpression	fclose ( con -> file )		6752334	0					
ANR	6752359	Callee	fclose		6752334	0					
ANR	6752360	Identifier	fclose		6752334	0					
ANR	6752361	ArgumentList	con -> file		6752334	1					
ANR	6752362	Argument	con -> file		6752334	0					
ANR	6752363	PtrMemberAccess	con -> file		6752334	0					
ANR	6752364	Identifier	con		6752334	0					
ANR	6752365	Identifier	file		6752334	1					
ANR	6752366	IfStatement	if ( con -> buf )		6752334	3					
ANR	6752367	Condition	con -> buf	914:8:28457:28464	6752334	0	True				
ANR	6752368	PtrMemberAccess	con -> buf		6752334	0					
ANR	6752369	Identifier	con		6752334	0					
ANR	6752370	Identifier	buf		6752334	1					
ANR	6752371	ExpressionStatement	free ( con -> buf )	914:18:28467:28481	6752334	1	True				
ANR	6752372	CallExpression	free ( con -> buf )		6752334	0					
ANR	6752373	Callee	free		6752334	0					
ANR	6752374	Identifier	free		6752334	0					
ANR	6752375	ArgumentList	con -> buf		6752334	1					
ANR	6752376	Argument	con -> buf		6752334	0					
ANR	6752377	PtrMemberAccess	con -> buf		6752334	0					
ANR	6752378	Identifier	con		6752334	0					
ANR	6752379	Identifier	buf		6752334	1					
ANR	6752380	ExpressionStatement	free ( con )	915:4:28487:28496	6752334	4	True				
ANR	6752381	CallExpression	free ( con )		6752334	0					
ANR	6752382	Callee	free		6752334	0					
ANR	6752383	Identifier	free		6752334	0					
ANR	6752384	ArgumentList	con		6752334	1					
ANR	6752385	Argument	con		6752334	0					
ANR	6752386	Identifier	con		6752334	0					
ANR	6752387	ReturnType	void		6752334	1					
ANR	6752388	Identifier	close_file		6752334	2					
ANR	6752389	ParameterList	void * handle		6752334	3					
ANR	6752390	Parameter	void * handle	908:16:28319:28330	6752334	0	True				
ANR	6752391	ParameterType	void *		6752334	0					
ANR	6752392	Identifier	handle		6752334	1					
ANR	6752393	CFGEntryNode	ENTRY		6752334		True				
ANR	6752394	CFGExitNode	EXIT		6752334		True				
ANR	6752395	Symbol	NULL		6752334						
ANR	6752396	Symbol	con		6752334						
ANR	6752397	Symbol	con -> file		6752334						
ANR	6752398	Symbol	* con		6752334						
ANR	6752399	Symbol	handle		6752334						
ANR	6752400	Symbol	con -> buf		6752334						
ANR	6752401	Function	get_file_parameters	918:0:28505:28923							
ANR	6752402	FunctionDef	"get_file_parameters (void * handle , int * wid , int * hei , int * ncomp , int * bpi , short * sf , short * photometric , int * padBytes)"		6752401	0					
ANR	6752403	CompoundStatement		919:0:28632:28923	6752401	0					
ANR	6752404	IdentifierDeclStatement	context * con = ( context * ) handle ;	920:4:28638:28669	6752401	0	True				
ANR	6752405	IdentifierDecl	* con = ( context * ) handle		6752401	0					
ANR	6752406	IdentifierDeclType	context *		6752401	0					
ANR	6752407	Identifier	con		6752401	1					
ANR	6752408	AssignmentExpression	* con = ( context * ) handle		6752401	2		=			
ANR	6752409	Identifier	con		6752401	0					
ANR	6752410	CastExpression	( context * ) handle		6752401	1					
ANR	6752411	CastTarget	context *		6752401	0					
ANR	6752412	Identifier	handle		6752401	1					
ANR	6752413	IfStatement	if ( wid )		6752401	1					
ANR	6752414	Condition	wid	921:8:28679:28681	6752401	0	True				
ANR	6752415	Identifier	wid		6752401	0					
ANR	6752416	ExpressionStatement	* wid = con -> wid	921:13:28684:28699	6752401	1	True				
ANR	6752417	AssignmentExpression	* wid = con -> wid		6752401	0		=			
ANR	6752418	UnaryOperationExpression	* wid		6752401	0					
ANR	6752419	UnaryOperator	*		6752401	0					
ANR	6752420	Identifier	wid		6752401	1					
ANR	6752421	PtrMemberAccess	con -> wid		6752401	1					
ANR	6752422	Identifier	con		6752401	0					
ANR	6752423	Identifier	wid		6752401	1					
ANR	6752424	IfStatement	if ( hei )		6752401	2					
ANR	6752425	Condition	hei	922:8:28709:28711	6752401	0	True				
ANR	6752426	Identifier	hei		6752401	0					
ANR	6752427	ExpressionStatement	* hei = con -> hei	922:13:28714:28729	6752401	1	True				
ANR	6752428	AssignmentExpression	* hei = con -> hei		6752401	0		=			
ANR	6752429	UnaryOperationExpression	* hei		6752401	0					
ANR	6752430	UnaryOperator	*		6752401	0					
ANR	6752431	Identifier	hei		6752401	1					
ANR	6752432	PtrMemberAccess	con -> hei		6752401	1					
ANR	6752433	Identifier	con		6752401	0					
ANR	6752434	Identifier	hei		6752401	1					
ANR	6752435	IfStatement	if ( ncomp )		6752401	3					
ANR	6752436	Condition	ncomp	923:8:28739:28743	6752401	0	True				
ANR	6752437	Identifier	ncomp		6752401	0					
ANR	6752438	ExpressionStatement	* ncomp = con -> ncomp	923:15:28746:28765	6752401	1	True				
ANR	6752439	AssignmentExpression	* ncomp = con -> ncomp		6752401	0		=			
ANR	6752440	UnaryOperationExpression	* ncomp		6752401	0					
ANR	6752441	UnaryOperator	*		6752401	0					
ANR	6752442	Identifier	ncomp		6752401	1					
ANR	6752443	PtrMemberAccess	con -> ncomp		6752401	1					
ANR	6752444	Identifier	con		6752401	0					
ANR	6752445	Identifier	ncomp		6752401	1					
ANR	6752446	IfStatement	if ( bpi )		6752401	4					
ANR	6752447	Condition	bpi	924:8:28775:28777	6752401	0	True				
ANR	6752448	Identifier	bpi		6752401	0					
ANR	6752449	ExpressionStatement	* bpi = con -> bpi	924:13:28780:28795	6752401	1	True				
ANR	6752450	AssignmentExpression	* bpi = con -> bpi		6752401	0		=			
ANR	6752451	UnaryOperationExpression	* bpi		6752401	0					
ANR	6752452	UnaryOperator	*		6752401	0					
ANR	6752453	Identifier	bpi		6752401	1					
ANR	6752454	PtrMemberAccess	con -> bpi		6752401	1					
ANR	6752455	Identifier	con		6752401	0					
ANR	6752456	Identifier	bpi		6752401	1					
ANR	6752457	IfStatement	if ( sf )		6752401	5					
ANR	6752458	Condition	sf	925:8:28805:28806	6752401	0	True				
ANR	6752459	Identifier	sf		6752401	0					
ANR	6752460	ExpressionStatement	* sf = con -> sf	925:12:28809:28822	6752401	1	True				
ANR	6752461	AssignmentExpression	* sf = con -> sf		6752401	0		=			
ANR	6752462	UnaryOperationExpression	* sf		6752401	0					
ANR	6752463	UnaryOperator	*		6752401	0					
ANR	6752464	Identifier	sf		6752401	1					
ANR	6752465	PtrMemberAccess	con -> sf		6752401	1					
ANR	6752466	Identifier	con		6752401	0					
ANR	6752467	Identifier	sf		6752401	1					
ANR	6752468	IfStatement	if ( photometric )		6752401	6					
ANR	6752469	Condition	photometric	926:8:28832:28842	6752401	0	True				
ANR	6752470	Identifier	photometric		6752401	0					
ANR	6752471	ExpressionStatement	* photometric = con -> photometric	926:21:28845:28876	6752401	1	True				
ANR	6752472	AssignmentExpression	* photometric = con -> photometric		6752401	0		=			
ANR	6752473	UnaryOperationExpression	* photometric		6752401	0					
ANR	6752474	UnaryOperator	*		6752401	0					
ANR	6752475	Identifier	photometric		6752401	1					
ANR	6752476	PtrMemberAccess	con -> photometric		6752401	1					
ANR	6752477	Identifier	con		6752401	0					
ANR	6752478	Identifier	photometric		6752401	1					
ANR	6752479	IfStatement	if ( padBytes )		6752401	7					
ANR	6752480	Condition	padBytes	927:8:28886:28893	6752401	0	True				
ANR	6752481	Identifier	padBytes		6752401	0					
ANR	6752482	ExpressionStatement	* padBytes = con -> padBytes	927:18:28896:28921	6752401	1	True				
ANR	6752483	AssignmentExpression	* padBytes = con -> padBytes		6752401	0		=			
ANR	6752484	UnaryOperationExpression	* padBytes		6752401	0					
ANR	6752485	UnaryOperator	*		6752401	0					
ANR	6752486	Identifier	padBytes		6752401	1					
ANR	6752487	PtrMemberAccess	con -> padBytes		6752401	1					
ANR	6752488	Identifier	con		6752401	0					
ANR	6752489	Identifier	padBytes		6752401	1					
ANR	6752490	ReturnType	void		6752401	1					
ANR	6752491	Identifier	get_file_parameters		6752401	2					
ANR	6752492	ParameterList	"void * handle , int * wid , int * hei , int * ncomp , int * bpi , short * sf , short * photometric , int * padBytes"		6752401	3					
ANR	6752493	Parameter	void * handle	918:25:28530:28541	6752401	0	True				
ANR	6752494	ParameterType	void *		6752401	0					
ANR	6752495	Identifier	handle		6752401	1					
ANR	6752496	Parameter	int * wid	918:39:28544:28551	6752401	1	True				
ANR	6752497	ParameterType	int *		6752401	0					
ANR	6752498	Identifier	wid		6752401	1					
ANR	6752499	Parameter	int * hei	918:49:28554:28561	6752401	2	True				
ANR	6752500	ParameterType	int *		6752401	0					
ANR	6752501	Identifier	hei		6752401	1					
ANR	6752502	Parameter	int * ncomp	918:59:28564:28573	6752401	3	True				
ANR	6752503	ParameterType	int *		6752401	0					
ANR	6752504	Identifier	ncomp		6752401	1					
ANR	6752505	Parameter	int * bpi	918:71:28576:28583	6752401	4	True				
ANR	6752506	ParameterType	int *		6752401	0					
ANR	6752507	Identifier	bpi		6752401	1					
ANR	6752508	Parameter	short * sf	918:81:28586:28594	6752401	5	True				
ANR	6752509	ParameterType	short *		6752401	0					
ANR	6752510	Identifier	sf		6752401	1					
ANR	6752511	Parameter	short * photometric	918:92:28597:28614	6752401	6	True				
ANR	6752512	ParameterType	short *		6752401	0					
ANR	6752513	Identifier	photometric		6752401	1					
ANR	6752514	Parameter	int * padBytes	918:112:28617:28629	6752401	7	True				
ANR	6752515	ParameterType	int *		6752401	0					
ANR	6752516	Identifier	padBytes		6752401	1					
ANR	6752517	CFGEntryNode	ENTRY		6752401		True				
ANR	6752518	CFGExitNode	EXIT		6752401		True				
ANR	6752519	Symbol	ncomp		6752401						
ANR	6752520	Symbol	con		6752401						
ANR	6752521	Symbol	con -> hei		6752401						
ANR	6752522	Symbol	con -> ncomp		6752401						
ANR	6752523	Symbol	padBytes		6752401						
ANR	6752524	Symbol	* hei		6752401						
ANR	6752525	Symbol	handle		6752401						
ANR	6752526	Symbol	* photometric		6752401						
ANR	6752527	Symbol	hei		6752401						
ANR	6752528	Symbol	photometric		6752401						
ANR	6752529	Symbol	wid		6752401						
ANR	6752530	Symbol	sf		6752401						
ANR	6752531	Symbol	* con		6752401						
ANR	6752532	Symbol	con -> bpi		6752401						
ANR	6752533	Symbol	* padBytes		6752401						
ANR	6752534	Symbol	con -> padBytes		6752401						
ANR	6752535	Symbol	bpi		6752401						
ANR	6752536	Symbol	* ncomp		6752401						
ANR	6752537	Symbol	* bpi		6752401						
ANR	6752538	Symbol	* sf		6752401						
ANR	6752539	Symbol	con -> photometric		6752401						
ANR	6752540	Symbol	* wid		6752401						
ANR	6752541	Symbol	con -> sf		6752401						
ANR	6752542	Symbol	con -> wid		6752401						
ANR	6752543	Function	set_photometric_interp	930:0:28926:29555							
ANR	6752544	FunctionDef	"set_photometric_interp (context * con , jxrc_t_pixelFormat pixelFormat)"		6752543	0					
ANR	6752545	CompoundStatement		931:0:29000:29555	6752543	0					
ANR	6752546	SwitchStatement	switch ( pixelFormat )		6752543	0					
ANR	6752547	Condition	pixelFormat	932:11:29013:29023	6752543	0	True				
ANR	6752548	Identifier	pixelFormat		6752543	0					
ANR	6752549	CompoundStatement		3:4:29:29	6752543	1					
ANR	6752550	Label	case JXRC_FMT_32bppCMYK :	934:4:29036:29059	6752543	0	True				
ANR	6752551	Identifier	JXRC_FMT_32bppCMYK		6752543	0					
ANR	6752552	Label	case JXRC_FMT_40bppCMYKAlpha :	935:4:29065:29093	6752543	1	True				
ANR	6752553	Identifier	JXRC_FMT_40bppCMYKAlpha		6752543	0					
ANR	6752554	Label	case JXRC_FMT_64bppCMYK :	936:4:29099:29122	6752543	2	True				
ANR	6752555	Identifier	JXRC_FMT_64bppCMYK		6752543	0					
ANR	6752556	Label	case JXRC_FMT_80bppCMYKAlpha :	937:4:29128:29156	6752543	3	True				
ANR	6752557	Identifier	JXRC_FMT_80bppCMYKAlpha		6752543	0					
ANR	6752558	ExpressionStatement	con -> photometric = 5	938:8:29166:29186	6752543	4	True				
ANR	6752559	AssignmentExpression	con -> photometric = 5		6752543	0		=			
ANR	6752560	PtrMemberAccess	con -> photometric		6752543	0					
ANR	6752561	Identifier	con		6752543	0					
ANR	6752562	Identifier	photometric		6752543	1					
ANR	6752563	PrimaryExpression	5		6752543	1					
ANR	6752564	ReturnStatement	return ;	939:8:29196:29202	6752543	5	True				
ANR	6752565	Label	case JXRC_FMT_8bppGray :	940:4:29208:29230	6752543	6	True				
ANR	6752566	Identifier	JXRC_FMT_8bppGray		6752543	0					
ANR	6752567	Label	case JXRC_FMT_16bppGray :	941:4:29244:29267	6752543	7	True				
ANR	6752568	Identifier	JXRC_FMT_16bppGray		6752543	0					
ANR	6752569	Label	case JXRC_FMT_16bppGrayFixedPoint :	942:4:29273:29306	6752543	8	True				
ANR	6752570	Identifier	JXRC_FMT_16bppGrayFixedPoint		6752543	0					
ANR	6752571	Label	case JXRC_FMT_16bppGrayHalf :	943:4:29312:29339	6752543	9	True				
ANR	6752572	Identifier	JXRC_FMT_16bppGrayHalf		6752543	0					
ANR	6752573	Label	case JXRC_FMT_32bppGrayFixedPoint :	944:4:29345:29378	6752543	10	True				
ANR	6752574	Identifier	JXRC_FMT_32bppGrayFixedPoint		6752543	0					
ANR	6752575	Label	case JXRC_FMT_32bppGrayFloat :	945:4:29384:29412	6752543	11	True				
ANR	6752576	Identifier	JXRC_FMT_32bppGrayFloat		6752543	0					
ANR	6752577	Label	case JXRC_FMT_BlackWhite :	946:4:29418:29442	6752543	12	True				
ANR	6752578	Identifier	JXRC_FMT_BlackWhite		6752543	0					
ANR	6752579	ExpressionStatement	con -> photometric = 1	947:8:29452:29472	6752543	13	True				
ANR	6752580	AssignmentExpression	con -> photometric = 1		6752543	0		=			
ANR	6752581	PtrMemberAccess	con -> photometric		6752543	0					
ANR	6752582	Identifier	con		6752543	0					
ANR	6752583	Identifier	photometric		6752543	1					
ANR	6752584	PrimaryExpression	1		6752543	1					
ANR	6752585	ReturnStatement	return ;	948:8:29482:29488	6752543	14	True				
ANR	6752586	Label	default :	949:4:29494:29501	6752543	15	True				
ANR	6752587	Identifier	default		6752543	0					
ANR	6752588	ExpressionStatement	con -> photometric = 2	950:8:29511:29531	6752543	16	True				
ANR	6752589	AssignmentExpression	con -> photometric = 2		6752543	0		=			
ANR	6752590	PtrMemberAccess	con -> photometric		6752543	0					
ANR	6752591	Identifier	con		6752543	0					
ANR	6752592	Identifier	photometric		6752543	1					
ANR	6752593	PrimaryExpression	2		6752543	1					
ANR	6752594	ReturnStatement	return ;	951:8:29541:29547	6752543	17	True				
ANR	6752595	ReturnType	void		6752543	1					
ANR	6752596	Identifier	set_photometric_interp		6752543	2					
ANR	6752597	ParameterList	"context * con , jxrc_t_pixelFormat pixelFormat"		6752543	3					
ANR	6752598	Parameter	context * con	930:28:28954:28965	6752543	0	True				
ANR	6752599	ParameterType	context *		6752543	0					
ANR	6752600	Identifier	con		6752543	1					
ANR	6752601	Parameter	jxrc_t_pixelFormat pixelFormat	930:42:28968:28997	6752543	1	True				
ANR	6752602	ParameterType	jxrc_t_pixelFormat		6752543	0					
ANR	6752603	Identifier	pixelFormat		6752543	1					
ANR	6752604	CFGEntryNode	ENTRY		6752543		True				
ANR	6752605	CFGExitNode	EXIT		6752543		True				
ANR	6752606	Symbol	con		6752543						
ANR	6752607	Symbol	pixelFormat		6752543						
ANR	6752608	Symbol	* con		6752543						
ANR	6752609	Symbol	con -> photometric		6752543						
ANR	6752610	Function	start_output_file	955:0:29558:31731							
ANR	6752611	FunctionDef	"start_output_file (context * con , int ext_width , int ext_height , int width , int height , int ncomp , int format , jxrc_t_pixelFormat pixelFormat)"		6752610	0					
ANR	6752612	CompoundStatement		956:0:29711:31731	6752610	0					
ANR	6752613	IdentifierDeclStatement	int bpi = 0 ;	957:4:29717:29726	6752610	0	True				
ANR	6752614	IdentifierDecl	bpi = 0		6752610	0					
ANR	6752615	IdentifierDeclType	int		6752610	0					
ANR	6752616	Identifier	bpi		6752610	1					
ANR	6752617	AssignmentExpression	bpi = 0		6752610	2		=			
ANR	6752618	Identifier	bpi		6752610	0					
ANR	6752619	PrimaryExpression	0		6752610	1					
ANR	6752620	SwitchStatement	switch ( format )		6752610	1					
ANR	6752621	Condition	format	958:12:29740:29745	6752610	0	True				
ANR	6752622	Identifier	format		6752610	0					
ANR	6752623	CompoundStatement		3:20:36:36	6752610	1					
ANR	6752624	Label	case 0 :	959:8:29758:29765	6752610	0	True				
ANR	6752625	ExpressionStatement	bpi = 1	959:17:29767:29772	6752610	1	True				
ANR	6752626	AssignmentExpression	bpi = 1		6752610	0		=			
ANR	6752627	Identifier	bpi		6752610	0					
ANR	6752628	PrimaryExpression	1		6752610	1					
ANR	6752629	BreakStatement	break ;	959:24:29774:29779	6752610	2	True				
ANR	6752630	Label	case 1 :	960:8:29789:29796	6752610	3	True				
ANR	6752631	ExpressionStatement	bpi = 8	960:17:29798:29803	6752610	4	True				
ANR	6752632	AssignmentExpression	bpi = 8		6752610	0		=			
ANR	6752633	Identifier	bpi		6752610	0					
ANR	6752634	PrimaryExpression	8		6752610	1					
ANR	6752635	BreakStatement	break ;	960:24:29805:29810	6752610	5	True				
ANR	6752636	Label	case 2 :	961:8:29820:29827	6752610	6	True				
ANR	6752637	Label	case 3 :	962:8:29837:29844	6752610	7	True				
ANR	6752638	Label	case 4 :	963:8:29854:29861	6752610	8	True				
ANR	6752639	ExpressionStatement	bpi = 16	963:17:29863:29869	6752610	9	True				
ANR	6752640	AssignmentExpression	bpi = 16		6752610	0		=			
ANR	6752641	Identifier	bpi		6752610	0					
ANR	6752642	PrimaryExpression	16		6752610	1					
ANR	6752643	BreakStatement	break ;	963:25:29871:29876	6752610	10	True				
ANR	6752644	Label	case 5 :	964:8:29886:29893	6752610	11	True				
ANR	6752645	Label	case 6 :	965:8:29903:29910	6752610	12	True				
ANR	6752646	Label	case 7 :	966:8:29920:29927	6752610	13	True				
ANR	6752647	ExpressionStatement	bpi = 32	966:17:29929:29935	6752610	14	True				
ANR	6752648	AssignmentExpression	bpi = 32		6752610	0		=			
ANR	6752649	Identifier	bpi		6752610	0					
ANR	6752650	PrimaryExpression	32		6752610	1					
ANR	6752651	BreakStatement	break ;	966:25:29937:29942	6752610	15	True				
ANR	6752652	Label	case 8 :	967:8:29952:29959	6752610	16	True				
ANR	6752653	ExpressionStatement	bpi = 5	967:17:29961:29966	6752610	17	True				
ANR	6752654	AssignmentExpression	bpi = 5		6752610	0		=			
ANR	6752655	Identifier	bpi		6752610	0					
ANR	6752656	PrimaryExpression	5		6752610	1					
ANR	6752657	BreakStatement	break ;	967:24:29968:29973	6752610	18	True				
ANR	6752658	Label	case 9 :	968:8:29983:29990	6752610	19	True				
ANR	6752659	ExpressionStatement	bpi = 10	968:17:29992:29998	6752610	20	True				
ANR	6752660	AssignmentExpression	bpi = 10		6752610	0		=			
ANR	6752661	Identifier	bpi		6752610	0					
ANR	6752662	PrimaryExpression	10		6752610	1					
ANR	6752663	BreakStatement	break ;	968:25:30000:30005	6752610	21	True				
ANR	6752664	Label	case 10 :	969:8:30015:30023	6752610	22	True				
ANR	6752665	ExpressionStatement	bpi = 6	969:18:30025:30030	6752610	23	True				
ANR	6752666	AssignmentExpression	bpi = 6		6752610	0		=			
ANR	6752667	Identifier	bpi		6752610	0					
ANR	6752668	PrimaryExpression	6		6752610	1					
ANR	6752669	BreakStatement	break ;	969:25:30032:30037	6752610	24	True				
ANR	6752670	Label	case 15 :	970:8:30047:30055	6752610	25	True				
ANR	6752671	ExpressionStatement	bpi = 1	970:18:30057:30062	6752610	26	True				
ANR	6752672	AssignmentExpression	bpi = 1		6752610	0		=			
ANR	6752673	Identifier	bpi		6752610	0					
ANR	6752674	PrimaryExpression	1		6752610	1					
ANR	6752675	BreakStatement	break ;	970:25:30064:30069	6752610	27	True				
ANR	6752676	Label	default :	971:8:30079:30087	6752610	28	True				
ANR	6752677	Identifier	default		6752610	0					
ANR	6752678	ExpressionStatement	"error ( ""invalid component format code (%d) for output file %s"" , format , con -> name )"	971:18:30089:30170	6752610	29	True				
ANR	6752679	CallExpression	"error ( ""invalid component format code (%d) for output file %s"" , format , con -> name )"		6752610	0					
ANR	6752680	Callee	error		6752610	0					
ANR	6752681	Identifier	error		6752610	0					
ANR	6752682	ArgumentList	"""invalid component format code (%d) for output file %s"""		6752610	1					
ANR	6752683	Argument	"""invalid component format code (%d) for output file %s"""		6752610	0					
ANR	6752684	PrimaryExpression	"""invalid component format code (%d) for output file %s"""		6752610	0					
ANR	6752685	Argument	format		6752610	1					
ANR	6752686	Identifier	format		6752610	0					
ANR	6752687	Argument	con -> name		6752610	2					
ANR	6752688	PtrMemberAccess	con -> name		6752610	0					
ANR	6752689	Identifier	con		6752610	0					
ANR	6752690	Identifier	name		6752610	1					
ANR	6752691	IfStatement	if ( bpi < 1 || bpi > 32 )		6752610	2					
ANR	6752692	Condition	bpi < 1 || bpi > 32	974:8:30187:30201	6752610	0	True				
ANR	6752693	OrExpression	bpi < 1 || bpi > 32		6752610	0		||			
ANR	6752694	RelationalExpression	bpi < 1		6752610	0		<			
ANR	6752695	Identifier	bpi		6752610	0					
ANR	6752696	PrimaryExpression	1		6752610	1					
ANR	6752697	RelationalExpression	bpi > 32		6752610	1		>			
ANR	6752698	Identifier	bpi		6752610	0					
ANR	6752699	PrimaryExpression	32		6752610	1					
ANR	6752700	ExpressionStatement	"error ( ""invalid bits per sample (%d) for output file %s"" , bpi , con -> name )"	975:8:30212:30284	6752610	1	True				
ANR	6752701	CallExpression	"error ( ""invalid bits per sample (%d) for output file %s"" , bpi , con -> name )"		6752610	0					
ANR	6752702	Callee	error		6752610	0					
ANR	6752703	Identifier	error		6752610	0					
ANR	6752704	ArgumentList	"""invalid bits per sample (%d) for output file %s"""		6752610	1					
ANR	6752705	Argument	"""invalid bits per sample (%d) for output file %s"""		6752610	0					
ANR	6752706	PrimaryExpression	"""invalid bits per sample (%d) for output file %s"""		6752610	0					
ANR	6752707	Argument	bpi		6752610	1					
ANR	6752708	Identifier	bpi		6752610	0					
ANR	6752709	Argument	con -> name		6752610	2					
ANR	6752710	PtrMemberAccess	con -> name		6752610	0					
ANR	6752711	Identifier	con		6752610	0					
ANR	6752712	Identifier	name		6752610	1					
ANR	6752713	IfStatement	if ( width <= 0 || height <= 0 )		6752610	3					
ANR	6752714	Condition	width <= 0 || height <= 0	976:8:30294:30314	6752610	0	True				
ANR	6752715	OrExpression	width <= 0 || height <= 0		6752610	0		||			
ANR	6752716	RelationalExpression	width <= 0		6752610	0		<=			
ANR	6752717	Identifier	width		6752610	0					
ANR	6752718	PrimaryExpression	0		6752610	1					
ANR	6752719	RelationalExpression	height <= 0		6752610	1		<=			
ANR	6752720	Identifier	height		6752610	0					
ANR	6752721	PrimaryExpression	0		6752610	1					
ANR	6752722	ExpressionStatement	"error ( ""invalid dimensions (%d X %d) for output file %s"" , width , height , con -> name )"	977:8:30325:30407	6752610	1	True				
ANR	6752723	CallExpression	"error ( ""invalid dimensions (%d X %d) for output file %s"" , width , height , con -> name )"		6752610	0					
ANR	6752724	Callee	error		6752610	0					
ANR	6752725	Identifier	error		6752610	0					
ANR	6752726	ArgumentList	"""invalid dimensions (%d X %d) for output file %s"""		6752610	1					
ANR	6752727	Argument	"""invalid dimensions (%d X %d) for output file %s"""		6752610	0					
ANR	6752728	PrimaryExpression	"""invalid dimensions (%d X %d) for output file %s"""		6752610	0					
ANR	6752729	Argument	width		6752610	1					
ANR	6752730	Identifier	width		6752610	0					
ANR	6752731	Argument	height		6752610	2					
ANR	6752732	Identifier	height		6752610	0					
ANR	6752733	Argument	con -> name		6752610	3					
ANR	6752734	PtrMemberAccess	con -> name		6752610	0					
ANR	6752735	Identifier	con		6752610	0					
ANR	6752736	Identifier	name		6752610	1					
ANR	6752737	ExpressionStatement	con -> wid = width	979:4:30418:30434	6752610	4	True				
ANR	6752738	AssignmentExpression	con -> wid = width		6752610	0		=			
ANR	6752739	PtrMemberAccess	con -> wid		6752610	0					
ANR	6752740	Identifier	con		6752610	0					
ANR	6752741	Identifier	wid		6752610	1					
ANR	6752742	Identifier	width		6752610	1					
ANR	6752743	ExpressionStatement	con -> hei = height	980:4:30440:30457	6752610	5	True				
ANR	6752744	AssignmentExpression	con -> hei = height		6752610	0		=			
ANR	6752745	PtrMemberAccess	con -> hei		6752610	0					
ANR	6752746	Identifier	con		6752610	0					
ANR	6752747	Identifier	hei		6752610	1					
ANR	6752748	Identifier	height		6752610	1					
ANR	6752749	ExpressionStatement	con -> ncomp = ncomp	981:4:30463:30481	6752610	6	True				
ANR	6752750	AssignmentExpression	con -> ncomp = ncomp		6752610	0		=			
ANR	6752751	PtrMemberAccess	con -> ncomp		6752610	0					
ANR	6752752	Identifier	con		6752610	0					
ANR	6752753	Identifier	ncomp		6752610	1					
ANR	6752754	Identifier	ncomp		6752610	1					
ANR	6752755	ExpressionStatement	con -> bpi = bpi	982:4:30487:30501	6752610	7	True				
ANR	6752756	AssignmentExpression	con -> bpi = bpi		6752610	0		=			
ANR	6752757	PtrMemberAccess	con -> bpi		6752610	0					
ANR	6752758	Identifier	con		6752610	0					
ANR	6752759	Identifier	bpi		6752610	1					
ANR	6752760	Identifier	bpi		6752610	1					
ANR	6752761	ExpressionStatement	con -> format = format	983:4:30507:30527	6752610	8	True				
ANR	6752762	AssignmentExpression	con -> format = format		6752610	0		=			
ANR	6752763	PtrMemberAccess	con -> format		6752610	0					
ANR	6752764	Identifier	con		6752610	0					
ANR	6752765	Identifier	format		6752610	1					
ANR	6752766	Identifier	format		6752610	1					
ANR	6752767	ExpressionStatement	con -> buf = malloc ( ( ( ext_width ) / 16 ) * 256 * ( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 ) )	985:4:30596:30670	6752610	9	True				
ANR	6752768	AssignmentExpression	con -> buf = malloc ( ( ( ext_width ) / 16 ) * 256 * ( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 ) )		6752610	0		=			
ANR	6752769	PtrMemberAccess	con -> buf		6752610	0					
ANR	6752770	Identifier	con		6752610	0					
ANR	6752771	Identifier	buf		6752610	1					
ANR	6752772	CallExpression	malloc ( ( ( ext_width ) / 16 ) * 256 * ( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 ) )		6752610	1					
ANR	6752773	Callee	malloc		6752610	0					
ANR	6752774	Identifier	malloc		6752610	0					
ANR	6752775	ArgumentList	( ( ext_width ) / 16 ) * 256 * ( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		6752610	1					
ANR	6752776	Argument	( ( ext_width ) / 16 ) * 256 * ( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		6752610	0					
ANR	6752777	MultiplicativeExpression	( ( ext_width ) / 16 ) * 256 * ( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		6752610	0		*			
ANR	6752778	MultiplicativeExpression	( ext_width ) / 16		6752610	0		/			
ANR	6752779	Identifier	ext_width		6752610	0					
ANR	6752780	PrimaryExpression	16		6752610	1					
ANR	6752781	MultiplicativeExpression	256 * ( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		6752610	1		*			
ANR	6752782	PrimaryExpression	256		6752610	0					
ANR	6752783	MultiplicativeExpression	( ncomp + 1 ) * ( ( con -> bpi + 7 ) / 8 )		6752610	1		*			
ANR	6752784	AdditiveExpression	ncomp + 1		6752610	0		+			
ANR	6752785	Identifier	ncomp		6752610	0					
ANR	6752786	PrimaryExpression	1		6752610	1					
ANR	6752787	MultiplicativeExpression	( con -> bpi + 7 ) / 8		6752610	1		/			
ANR	6752788	AdditiveExpression	con -> bpi + 7		6752610	0		+			
ANR	6752789	PtrMemberAccess	con -> bpi		6752610	0					
ANR	6752790	Identifier	con		6752610	0					
ANR	6752791	Identifier	bpi		6752610	1					
ANR	6752792	PrimaryExpression	7		6752610	1					
ANR	6752793	PrimaryExpression	8		6752610	1					
ANR	6752794	IfStatement	if ( con -> buf == 0 )		6752610	10					
ANR	6752795	Condition	con -> buf == 0	986:8:30680:30690	6752610	0	True				
ANR	6752796	EqualityExpression	con -> buf == 0		6752610	0		==			
ANR	6752797	PtrMemberAccess	con -> buf		6752610	0					
ANR	6752798	Identifier	con		6752610	0					
ANR	6752799	Identifier	buf		6752610	1					
ANR	6752800	PrimaryExpression	0		6752610	1					
ANR	6752801	ExpressionStatement	"error ( ""unable to allocate memory"" )"	986:21:30693:30727	6752610	1	True				
ANR	6752802	CallExpression	"error ( ""unable to allocate memory"" )"		6752610	0					
ANR	6752803	Callee	error		6752610	0					
ANR	6752804	Identifier	error		6752610	0					
ANR	6752805	ArgumentList	"""unable to allocate memory"""		6752610	1					
ANR	6752806	Argument	"""unable to allocate memory"""		6752610	0					
ANR	6752807	PrimaryExpression	"""unable to allocate memory"""		6752610	0					
ANR	6752808	IdentifierDeclStatement	"const char * p = strrchr ( con -> name , '.' ) ;"	988:4:30734:30773	6752610	11	True				
ANR	6752809	IdentifierDecl	"* p = strrchr ( con -> name , '.' )"		6752610	0					
ANR	6752810	IdentifierDeclType	const char *		6752610	0					
ANR	6752811	Identifier	p		6752610	1					
ANR	6752812	AssignmentExpression	"* p = strrchr ( con -> name , '.' )"		6752610	2		=			
ANR	6752813	Identifier	p		6752610	0					
ANR	6752814	CallExpression	"strrchr ( con -> name , '.' )"		6752610	1					
ANR	6752815	Callee	strrchr		6752610	0					
ANR	6752816	Identifier	strrchr		6752610	0					
ANR	6752817	ArgumentList	con -> name		6752610	1					
ANR	6752818	Argument	con -> name		6752610	0					
ANR	6752819	PtrMemberAccess	con -> name		6752610	0					
ANR	6752820	Identifier	con		6752610	0					
ANR	6752821	Identifier	name		6752610	1					
ANR	6752822	Argument	'.'		6752610	1					
ANR	6752823	PrimaryExpression	'.'		6752610	0					
ANR	6752824	IfStatement	if ( p == 0 )		6752610	12					
ANR	6752825	Condition	p == 0	989:8:30783:30786	6752610	0	True				
ANR	6752826	EqualityExpression	p == 0		6752610	0		==			
ANR	6752827	Identifier	p		6752610	0					
ANR	6752828	PrimaryExpression	0		6752610	1					
ANR	6752829	ExpressionStatement	"error ( ""output file name %s needs a suffix to determine its format"" , con -> name )"	990:8:30797:30875	6752610	1	True				
ANR	6752830	CallExpression	"error ( ""output file name %s needs a suffix to determine its format"" , con -> name )"		6752610	0					
ANR	6752831	Callee	error		6752610	0					
ANR	6752832	Identifier	error		6752610	0					
ANR	6752833	ArgumentList	"""output file name %s needs a suffix to determine its format"""		6752610	1					
ANR	6752834	Argument	"""output file name %s needs a suffix to determine its format"""		6752610	0					
ANR	6752835	PrimaryExpression	"""output file name %s needs a suffix to determine its format"""		6752610	0					
ANR	6752836	Argument	con -> name		6752610	1					
ANR	6752837	PtrMemberAccess	con -> name		6752610	0					
ANR	6752838	Identifier	con		6752610	0					
ANR	6752839	Identifier	name		6752610	1					
ANR	6752840	IfStatement	"if ( ! strcasecmp ( p , "".pnm"" ) || ! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" ) )"		6752610	13					
ANR	6752841	Condition	"! strcasecmp ( p , "".pnm"" ) || ! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" )"	991:8:30885:30958	6752610	0	True				
ANR	6752842	OrExpression	"! strcasecmp ( p , "".pnm"" ) || ! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" )"		6752610	0		||			
ANR	6752843	UnaryOperationExpression	"! strcasecmp ( p , "".pnm"" )"		6752610	0					
ANR	6752844	UnaryOperator	!		6752610	0					
ANR	6752845	CallExpression	"strcasecmp ( p , "".pnm"" )"		6752610	1					
ANR	6752846	Callee	strcasecmp		6752610	0					
ANR	6752847	Identifier	strcasecmp		6752610	0					
ANR	6752848	ArgumentList	p		6752610	1					
ANR	6752849	Argument	p		6752610	0					
ANR	6752850	Identifier	p		6752610	0					
ANR	6752851	Argument	""".pnm"""		6752610	1					
ANR	6752852	PrimaryExpression	""".pnm"""		6752610	0					
ANR	6752853	OrExpression	"! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" )"		6752610	1		||			
ANR	6752854	UnaryOperationExpression	"! strcasecmp ( p , "".pgm"" )"		6752610	0					
ANR	6752855	UnaryOperator	!		6752610	0					
ANR	6752856	CallExpression	"strcasecmp ( p , "".pgm"" )"		6752610	1					
ANR	6752857	Callee	strcasecmp		6752610	0					
ANR	6752858	Identifier	strcasecmp		6752610	0					
ANR	6752859	ArgumentList	p		6752610	1					
ANR	6752860	Argument	p		6752610	0					
ANR	6752861	Identifier	p		6752610	0					
ANR	6752862	Argument	""".pgm"""		6752610	1					
ANR	6752863	PrimaryExpression	""".pgm"""		6752610	0					
ANR	6752864	UnaryOperationExpression	"! strcasecmp ( p , "".ppm"" )"		6752610	1					
ANR	6752865	UnaryOperator	!		6752610	0					
ANR	6752866	CallExpression	"strcasecmp ( p , "".ppm"" )"		6752610	1					
ANR	6752867	Callee	strcasecmp		6752610	0					
ANR	6752868	Identifier	strcasecmp		6752610	0					
ANR	6752869	ArgumentList	p		6752610	1					
ANR	6752870	Argument	p		6752610	0					
ANR	6752871	Identifier	p		6752610	0					
ANR	6752872	Argument	""".ppm"""		6752610	1					
ANR	6752873	PrimaryExpression	""".ppm"""		6752610	0					
ANR	6752874	CompoundStatement		37:4:1253:1253	6752610	1					
ANR	6752875	IfStatement	if ( ! validate_pnm_output ( pixelFormat ) )		6752610	0					
ANR	6752876	Condition	! validate_pnm_output ( pixelFormat )	993:11:30978:31010	6752610	0	True				
ANR	6752877	UnaryOperationExpression	! validate_pnm_output ( pixelFormat )		6752610	0					
ANR	6752878	UnaryOperator	!		6752610	0					
ANR	6752879	CallExpression	validate_pnm_output ( pixelFormat )		6752610	1					
ANR	6752880	Callee	validate_pnm_output		6752610	0					
ANR	6752881	Identifier	validate_pnm_output		6752610	0					
ANR	6752882	ArgumentList	pixelFormat		6752610	1					
ANR	6752883	Argument	pixelFormat		6752610	0					
ANR	6752884	Identifier	pixelFormat		6752610	0					
ANR	6752885	CompoundStatement		39:8:1309:1309	6752610	1					
ANR	6752886	ExpressionStatement	"printf ( ""User error: PixelFormat is incompatible with pnm output, use .raw or .tif extension for output file\\n"" )"	995:12:31035:31146	6752610	0	True				
ANR	6752887	CallExpression	"printf ( ""User error: PixelFormat is incompatible with pnm output, use .raw or .tif extension for output file\\n"" )"		6752610	0					
ANR	6752888	Callee	printf		6752610	0					
ANR	6752889	Identifier	printf		6752610	0					
ANR	6752890	ArgumentList	"""User error: PixelFormat is incompatible with pnm output, use .raw or .tif extension for output file\\n"""		6752610	1					
ANR	6752891	Argument	"""User error: PixelFormat is incompatible with pnm output, use .raw or .tif extension for output file\\n"""		6752610	0					
ANR	6752892	PrimaryExpression	"""User error: PixelFormat is incompatible with pnm output, use .raw or .tif extension for output file\\n"""		6752610	0					
ANR	6752893	ExpressionStatement	assert ( 0 )	996:12:31160:31169	6752610	1	True				
ANR	6752894	CallExpression	assert ( 0 )		6752610	0					
ANR	6752895	Callee	assert		6752610	0					
ANR	6752896	Identifier	assert		6752610	0					
ANR	6752897	ArgumentList	0		6752610	1					
ANR	6752898	Argument	0		6752610	0					
ANR	6752899	PrimaryExpression	0		6752610	0					
ANR	6752900	ExpressionStatement	start_pnm_output_file ( con )	998:8:31189:31215	6752610	1	True				
ANR	6752901	CallExpression	start_pnm_output_file ( con )		6752610	0					
ANR	6752902	Callee	start_pnm_output_file		6752610	0					
ANR	6752903	Identifier	start_pnm_output_file		6752610	0					
ANR	6752904	ArgumentList	con		6752610	1					
ANR	6752905	Argument	con		6752610	0					
ANR	6752906	Identifier	con		6752610	0					
ANR	6752907	ElseStatement	else		6752610	0					
ANR	6752908	IfStatement	"if ( ! strcasecmp ( p , "".tif"" ) )"		6752610	0					
ANR	6752909	Condition	"! strcasecmp ( p , "".tif"" )"	1000:13:31236:31257	6752610	0	True				
ANR	6752910	UnaryOperationExpression	"! strcasecmp ( p , "".tif"" )"		6752610	0					
ANR	6752911	UnaryOperator	!		6752610	0					
ANR	6752912	CallExpression	"strcasecmp ( p , "".tif"" )"		6752610	1					
ANR	6752913	Callee	strcasecmp		6752610	0					
ANR	6752914	Identifier	strcasecmp		6752610	0					
ANR	6752915	ArgumentList	p		6752610	1					
ANR	6752916	Argument	p		6752610	0					
ANR	6752917	Identifier	p		6752610	0					
ANR	6752918	Argument	""".tif"""		6752610	1					
ANR	6752919	PrimaryExpression	""".tif"""		6752610	0					
ANR	6752920	CompoundStatement		46:4:1552:1552	6752610	1					
ANR	6752921	IfStatement	if ( ! validate_tif_output ( pixelFormat ) && ncomp != 1 )		6752610	0					
ANR	6752922	Condition	! validate_tif_output ( pixelFormat ) && ncomp != 1	1002:11:31284:31330	6752610	0	True				
ANR	6752923	AndExpression	! validate_tif_output ( pixelFormat ) && ncomp != 1		6752610	0		&&			
ANR	6752924	UnaryOperationExpression	! validate_tif_output ( pixelFormat )		6752610	0					
ANR	6752925	UnaryOperator	!		6752610	0					
ANR	6752926	CallExpression	validate_tif_output ( pixelFormat )		6752610	1					
ANR	6752927	Callee	validate_tif_output		6752610	0					
ANR	6752928	Identifier	validate_tif_output		6752610	0					
ANR	6752929	ArgumentList	pixelFormat		6752610	1					
ANR	6752930	Argument	pixelFormat		6752610	0					
ANR	6752931	Identifier	pixelFormat		6752610	0					
ANR	6752932	EqualityExpression	ncomp != 1		6752610	1		!=			
ANR	6752933	Identifier	ncomp		6752610	0					
ANR	6752934	PrimaryExpression	1		6752610	1					
ANR	6752935	CompoundStatement		48:8:1629:1629	6752610	1					
ANR	6752936	ExpressionStatement	"printf ( ""User error: PixelFormat is incompatible with tif output, use .raw extension for output file\\n"" )"	1004:12:31355:31458	6752610	0	True				
ANR	6752937	CallExpression	"printf ( ""User error: PixelFormat is incompatible with tif output, use .raw extension for output file\\n"" )"		6752610	0					
ANR	6752938	Callee	printf		6752610	0					
ANR	6752939	Identifier	printf		6752610	0					
ANR	6752940	ArgumentList	"""User error: PixelFormat is incompatible with tif output, use .raw extension for output file\\n"""		6752610	1					
ANR	6752941	Argument	"""User error: PixelFormat is incompatible with tif output, use .raw extension for output file\\n"""		6752610	0					
ANR	6752942	PrimaryExpression	"""User error: PixelFormat is incompatible with tif output, use .raw extension for output file\\n"""		6752610	0					
ANR	6752943	ExpressionStatement	assert ( 0 )	1005:12:31472:31481	6752610	1	True				
ANR	6752944	CallExpression	assert ( 0 )		6752610	0					
ANR	6752945	Callee	assert		6752610	0					
ANR	6752946	Identifier	assert		6752610	0					
ANR	6752947	ArgumentList	0		6752610	1					
ANR	6752948	Argument	0		6752610	0					
ANR	6752949	PrimaryExpression	0		6752610	0					
ANR	6752950	ExpressionStatement	"set_photometric_interp ( con , pixelFormat )"	1007:8:31501:31541	6752610	1	True				
ANR	6752951	CallExpression	"set_photometric_interp ( con , pixelFormat )"		6752610	0					
ANR	6752952	Callee	set_photometric_interp		6752610	0					
ANR	6752953	Identifier	set_photometric_interp		6752610	0					
ANR	6752954	ArgumentList	con		6752610	1					
ANR	6752955	Argument	con		6752610	0					
ANR	6752956	Identifier	con		6752610	0					
ANR	6752957	Argument	pixelFormat		6752610	1					
ANR	6752958	Identifier	pixelFormat		6752610	0					
ANR	6752959	ExpressionStatement	start_tif_output_file ( con )	1008:8:31551:31577	6752610	2	True				
ANR	6752960	CallExpression	start_tif_output_file ( con )		6752610	0					
ANR	6752961	Callee	start_tif_output_file		6752610	0					
ANR	6752962	Identifier	start_tif_output_file		6752610	0					
ANR	6752963	ArgumentList	con		6752610	1					
ANR	6752964	Argument	con		6752610	0					
ANR	6752965	Identifier	con		6752610	0					
ANR	6752966	ElseStatement	else		6752610	0					
ANR	6752967	IfStatement	"if ( ! strcasecmp ( p , "".raw"" ) )"		6752610	0					
ANR	6752968	Condition	"! strcasecmp ( p , "".raw"" )"	1010:13:31598:31619	6752610	0	True				
ANR	6752969	UnaryOperationExpression	"! strcasecmp ( p , "".raw"" )"		6752610	0					
ANR	6752970	UnaryOperator	!		6752610	0					
ANR	6752971	CallExpression	"strcasecmp ( p , "".raw"" )"		6752610	1					
ANR	6752972	Callee	strcasecmp		6752610	0					
ANR	6752973	Identifier	strcasecmp		6752610	0					
ANR	6752974	ArgumentList	p		6752610	1					
ANR	6752975	Argument	p		6752610	0					
ANR	6752976	Identifier	p		6752610	0					
ANR	6752977	Argument	""".raw"""		6752610	1					
ANR	6752978	PrimaryExpression	""".raw"""		6752610	0					
ANR	6752979	ExpressionStatement	start_raw_output_file ( con )	1011:8:31630:31656	6752610	1	True				
ANR	6752980	CallExpression	start_raw_output_file ( con )		6752610	0					
ANR	6752981	Callee	start_raw_output_file		6752610	0					
ANR	6752982	Identifier	start_raw_output_file		6752610	0					
ANR	6752983	ArgumentList	con		6752610	1					
ANR	6752984	Argument	con		6752610	0					
ANR	6752985	Identifier	con		6752610	0					
ANR	6752986	ElseStatement	else		6752610	0					
ANR	6752987	ExpressionStatement	"error ( ""unrecognized suffix on output file name %s"" , con -> name )"	1012:9:31667:31729	6752610	0	True				
ANR	6752988	CallExpression	"error ( ""unrecognized suffix on output file name %s"" , con -> name )"		6752610	0					
ANR	6752989	Callee	error		6752610	0					
ANR	6752990	Identifier	error		6752610	0					
ANR	6752991	ArgumentList	"""unrecognized suffix on output file name %s"""		6752610	1					
ANR	6752992	Argument	"""unrecognized suffix on output file name %s"""		6752610	0					
ANR	6752993	PrimaryExpression	"""unrecognized suffix on output file name %s"""		6752610	0					
ANR	6752994	Argument	con -> name		6752610	1					
ANR	6752995	PtrMemberAccess	con -> name		6752610	0					
ANR	6752996	Identifier	con		6752610	0					
ANR	6752997	Identifier	name		6752610	1					
ANR	6752998	ReturnType	static void		6752610	1					
ANR	6752999	Identifier	start_output_file		6752610	2					
ANR	6753000	ParameterList	"context * con , int ext_width , int ext_height , int width , int height , int ncomp , int format , jxrc_t_pixelFormat pixelFormat"		6752610	3					
ANR	6753001	Parameter	context * con	955:30:29588:29599	6752610	0	True				
ANR	6753002	ParameterType	context *		6752610	0					
ANR	6753003	Identifier	con		6752610	1					
ANR	6753004	Parameter	int ext_width	955:44:29602:29614	6752610	1	True				
ANR	6753005	ParameterType	int		6752610	0					
ANR	6753006	Identifier	ext_width		6752610	1					
ANR	6753007	Parameter	int ext_height	955:59:29617:29630	6752610	2	True				
ANR	6753008	ParameterType	int		6752610	0					
ANR	6753009	Identifier	ext_height		6752610	1					
ANR	6753010	Parameter	int width	955:75:29633:29641	6752610	3	True				
ANR	6753011	ParameterType	int		6752610	0					
ANR	6753012	Identifier	width		6752610	1					
ANR	6753013	Parameter	int height	955:86:29644:29653	6752610	4	True				
ANR	6753014	ParameterType	int		6752610	0					
ANR	6753015	Identifier	height		6752610	1					
ANR	6753016	Parameter	int ncomp	955:98:29656:29664	6752610	5	True				
ANR	6753017	ParameterType	int		6752610	0					
ANR	6753018	Identifier	ncomp		6752610	1					
ANR	6753019	Parameter	int format	955:109:29667:29676	6752610	6	True				
ANR	6753020	ParameterType	int		6752610	0					
ANR	6753021	Identifier	format		6752610	1					
ANR	6753022	Parameter	jxrc_t_pixelFormat pixelFormat	955:121:29679:29708	6752610	7	True				
ANR	6753023	ParameterType	jxrc_t_pixelFormat		6752610	0					
ANR	6753024	Identifier	pixelFormat		6752610	1					
ANR	6753025	CFGEntryNode	ENTRY		6752610		True				
ANR	6753026	CFGExitNode	EXIT		6752610		True				
ANR	6753027	Symbol	ncomp		6752610						
ANR	6753028	Symbol	malloc		6752610						
ANR	6753029	Symbol	con		6752610						
ANR	6753030	Symbol	pixelFormat		6752610						
ANR	6753031	Symbol	con -> hei		6752610						
ANR	6753032	Symbol	con -> ncomp		6752610						
ANR	6753033	Symbol	format		6752610						
ANR	6753034	Symbol	validate_tif_output		6752610						
ANR	6753035	Symbol	con -> name		6752610						
ANR	6753036	Symbol	p		6752610						
ANR	6753037	Symbol	validate_pnm_output		6752610						
ANR	6753038	Symbol	ext_width		6752610						
ANR	6753039	Symbol	* con		6752610						
ANR	6753040	Symbol	con -> format		6752610						
ANR	6753041	Symbol	con -> bpi		6752610						
ANR	6753042	Symbol	strrchr		6752610						
ANR	6753043	Symbol	width		6752610						
ANR	6753044	Symbol	bpi		6752610						
ANR	6753045	Symbol	ext_height		6752610						
ANR	6753046	Symbol	strcasecmp		6752610						
ANR	6753047	Symbol	con -> buf		6752610						
ANR	6753048	Symbol	con -> wid		6752610						
ANR	6753049	Symbol	height		6752610						
ANR	6753050	Function	PreScalingBD16F	1017:0:31773:31905							
ANR	6753051	FunctionDef	PreScalingBD16F (int hHalf)		6753050	0					
ANR	6753052	CompoundStatement		1018:0:31811:31905	6753050	0					
ANR	6753053	IdentifierDeclStatement	int s ;	1019:4:31817:31822	6753050	0	True				
ANR	6753054	IdentifierDecl	s		6753050	0					
ANR	6753055	IdentifierDeclType	int		6753050	0					
ANR	6753056	Identifier	s		6753050	1					
ANR	6753057	ExpressionStatement	s = ( hHalf >> 31 )	1020:4:31828:31845	6753050	1	True				
ANR	6753058	AssignmentExpression	s = ( hHalf >> 31 )		6753050	0		=			
ANR	6753059	Identifier	s		6753050	0					
ANR	6753060	ShiftExpression	hHalf >> 31		6753050	1		>>			
ANR	6753061	Identifier	hHalf		6753050	0					
ANR	6753062	PrimaryExpression	31		6753050	1					
ANR	6753063	ExpressionStatement	hHalf = ( ( hHalf & 0x7fff ) ^ s ) - s	1021:4:31851:31885	6753050	2	True				
ANR	6753064	AssignmentExpression	hHalf = ( ( hHalf & 0x7fff ) ^ s ) - s		6753050	0		=			
ANR	6753065	Identifier	hHalf		6753050	0					
ANR	6753066	AdditiveExpression	( ( hHalf & 0x7fff ) ^ s ) - s		6753050	1		-			
ANR	6753067	ExclusiveOrExpression	( hHalf & 0x7fff ) ^ s		6753050	0		^			
ANR	6753068	BitAndExpression	hHalf & 0x7fff		6753050	0		&			
ANR	6753069	Identifier	hHalf		6753050	0					
ANR	6753070	PrimaryExpression	0x7fff		6753050	1					
ANR	6753071	Identifier	s		6753050	1					
ANR	6753072	Identifier	s		6753050	1					
ANR	6753073	ReturnStatement	return hHalf ;	1022:4:31891:31903	6753050	3	True				
ANR	6753074	Identifier	hHalf		6753050	0					
ANR	6753075	ReturnType	static int		6753050	1					
ANR	6753076	Identifier	PreScalingBD16F		6753050	2					
ANR	6753077	ParameterList	int hHalf		6753050	3					
ANR	6753078	Parameter	int hHalf	1017:27:31800:31808	6753050	0	True				
ANR	6753079	ParameterType	int		6753050	0					
ANR	6753080	Identifier	hHalf		6753050	1					
ANR	6753081	CFGEntryNode	ENTRY		6753050		True				
ANR	6753082	CFGExitNode	EXIT		6753050		True				
ANR	6753083	Symbol	hHalf		6753050						
ANR	6753084	Symbol	s		6753050						
ANR	6753085	Function	PreScalingBD32F	1025:0:31908:33051							
ANR	6753086	FunctionDef	"PreScalingBD32F (int f , const char _c , const unsigned char _lm)"		6753085	0					
ANR	6753087	CompoundStatement		1026:0:31982:33051	6753085	0					
ANR	6753088	IdentifierDeclStatement	"int _h , e , e1 , m , s ;"	1027:4:31988:32007	6753085	0	True				
ANR	6753089	IdentifierDecl	_h		6753085	0					
ANR	6753090	IdentifierDeclType	int		6753085	0					
ANR	6753091	Identifier	_h		6753085	1					
ANR	6753092	IdentifierDecl	e		6753085	1					
ANR	6753093	IdentifierDeclType	int		6753085	0					
ANR	6753094	Identifier	e		6753085	1					
ANR	6753095	IdentifierDecl	e1		6753085	2					
ANR	6753096	IdentifierDeclType	int		6753085	0					
ANR	6753097	Identifier	e1		6753085	1					
ANR	6753098	IdentifierDecl	m		6753085	3					
ANR	6753099	IdentifierDeclType	int		6753085	0					
ANR	6753100	Identifier	m		6753085	1					
ANR	6753101	IdentifierDecl	s		6753085	4					
ANR	6753102	IdentifierDeclType	int		6753085	0					
ANR	6753103	Identifier	s		6753085	1					
ANR	6753104	IfStatement	if ( f == 0 )		6753085	1					
ANR	6753105	Condition	f == 0	1029:8:32018:32023	6753085	0	True				
ANR	6753106	EqualityExpression	f == 0		6753085	0		==			
ANR	6753107	Identifier	f		6753085	0					
ANR	6753108	PrimaryExpression	0		6753085	1					
ANR	6753109	CompoundStatement		5:4:47:47	6753085	1					
ANR	6753110	ExpressionStatement	_h = 0	1031:8:32040:32046	6753085	0	True				
ANR	6753111	AssignmentExpression	_h = 0		6753085	0		=			
ANR	6753112	Identifier	_h		6753085	0					
ANR	6753113	PrimaryExpression	0		6753085	1					
ANR	6753114	ElseStatement	else		6753085	0					
ANR	6753115	CompoundStatement		9:4:84:84	6753085	0					
ANR	6753116	ExpressionStatement	e = ( f >> 23 ) & 0x000000ff	1035:8:32077:32103	6753085	0	True				
ANR	6753117	AssignmentExpression	e = ( f >> 23 ) & 0x000000ff		6753085	0		=			
ANR	6753118	Identifier	e		6753085	0					
ANR	6753119	BitAndExpression	( f >> 23 ) & 0x000000ff		6753085	1		&			
ANR	6753120	ShiftExpression	f >> 23		6753085	0		>>			
ANR	6753121	Identifier	f		6753085	0					
ANR	6753122	PrimaryExpression	23		6753085	1					
ANR	6753123	PrimaryExpression	0x000000ff		6753085	1					
ANR	6753124	ExpressionStatement	m = ( f & 0x007fffff ) | 0x800000	1036:8:32178:32209	6753085	1	True				
ANR	6753125	AssignmentExpression	m = ( f & 0x007fffff ) | 0x800000		6753085	0		=			
ANR	6753126	Identifier	m		6753085	0					
ANR	6753127	InclusiveOrExpression	( f & 0x007fffff ) | 0x800000		6753085	1		|			
ANR	6753128	BitAndExpression	f & 0x007fffff		6753085	0		&			
ANR	6753129	Identifier	f		6753085	0					
ANR	6753130	PrimaryExpression	0x007fffff		6753085	1					
ANR	6753131	PrimaryExpression	0x800000		6753085	1					
ANR	6753132	IfStatement	if ( e == 0 )		6753085	2					
ANR	6753133	Condition	e == 0	1037:12:32262:32267	6753085	0	True				
ANR	6753134	EqualityExpression	e == 0		6753085	0		==			
ANR	6753135	Identifier	e		6753085	0					
ANR	6753136	PrimaryExpression	0		6753085	1					
ANR	6753137	CompoundStatement		12:20:287:287	6753085	1					
ANR	6753138	ExpressionStatement	m ^= 0x800000	1038:12:32304:32317	6753085	0	True				
ANR	6753139	AssignmentExpression	m ^= 0x800000		6753085	0		^=			
ANR	6753140	Identifier	m		6753085	0					
ANR	6753141	PrimaryExpression	0x800000		6753085	1					
ANR	6753142	ExpressionStatement	e ++	1039:12:32375:32378	6753085	1	True				
ANR	6753143	PostIncDecOperationExpression	e ++		6753085	0					
ANR	6753144	Identifier	e		6753085	0					
ANR	6753145	IncDec	++		6753085	1					
ANR	6753146	ExpressionStatement	e1 = e - 127 + _c	1042:8:32426:32443	6753085	3	True				
ANR	6753147	AssignmentExpression	e1 = e - 127 + _c		6753085	0		=			
ANR	6753148	Identifier	e1		6753085	0					
ANR	6753149	AdditiveExpression	e - 127 + _c		6753085	1		-			
ANR	6753150	Identifier	e		6753085	0					
ANR	6753151	AdditiveExpression	127 + _c		6753085	1		+			
ANR	6753152	PrimaryExpression	127		6753085	0					
ANR	6753153	Identifier	_c		6753085	1					
ANR	6753154	IfStatement	if ( e1 <= 1 )		6753085	4					
ANR	6753155	Condition	e1 <= 1	1044:12:32534:32540	6753085	0	True				
ANR	6753156	RelationalExpression	e1 <= 1		6753085	0		<=			
ANR	6753157	Identifier	e1		6753085	0					
ANR	6753158	PrimaryExpression	1		6753085	1					
ANR	6753159	CompoundStatement		19:21:560:560	6753085	1					
ANR	6753160	IfStatement	if ( e1 < 1 )		6753085	0					
ANR	6753161	Condition	e1 < 1	1045:16:32577:32582	6753085	0	True				
ANR	6753162	RelationalExpression	e1 < 1		6753085	0		<			
ANR	6753163	Identifier	e1		6753085	0					
ANR	6753164	PrimaryExpression	1		6753085	1					
ANR	6753165	ExpressionStatement	m >>= ( 1 - e1 )	1046:16:32601:32615	6753085	1	True				
ANR	6753166	AssignmentExpression	m >>= ( 1 - e1 )		6753085	0		>>=			
ANR	6753167	Identifier	m		6753085	0					
ANR	6753168	AdditiveExpression	1 - e1		6753085	1		-			
ANR	6753169	PrimaryExpression	1		6753085	0					
ANR	6753170	Identifier	e1		6753085	1					
ANR	6753171	ExpressionStatement	e1 = 1	1047:12:32676:32682	6753085	1	True				
ANR	6753172	AssignmentExpression	e1 = 1		6753085	0		=			
ANR	6753173	Identifier	e1		6753085	0					
ANR	6753174	PrimaryExpression	1		6753085	1					
ANR	6753175	IfStatement	if ( ( m & 0x800000 ) == 0 )		6753085	2					
ANR	6753176	Condition	( m & 0x800000 ) == 0	1048:16:32700:32718	6753085	0	True				
ANR	6753177	EqualityExpression	( m & 0x800000 ) == 0		6753085	0		==			
ANR	6753178	BitAndExpression	m & 0x800000		6753085	0		&			
ANR	6753179	Identifier	m		6753085	0					
ANR	6753180	PrimaryExpression	0x800000		6753085	1					
ANR	6753181	PrimaryExpression	0		6753085	1					
ANR	6753182	ExpressionStatement	e1 = 0	1049:16:32781:32787	6753085	1	True				
ANR	6753183	AssignmentExpression	e1 = 0		6753085	0		=			
ANR	6753184	Identifier	e1		6753085	0					
ANR	6753185	PrimaryExpression	0		6753085	1					
ANR	6753186	ExpressionStatement	m &= 0x007fffff	1051:8:32807:32822	6753085	5	True				
ANR	6753187	AssignmentExpression	m &= 0x007fffff		6753085	0		&=			
ANR	6753188	Identifier	m		6753085	0					
ANR	6753189	PrimaryExpression	0x007fffff		6753085	1					
ANR	6753190	ExpressionStatement	_h = ( e1 << _lm ) + ( ( m + ( 1 << ( 23 - _lm - 1 ) ) ) >> ( 23 - _lm ) )	1053:8:32833:32895	6753085	6	True				
ANR	6753191	AssignmentExpression	_h = ( e1 << _lm ) + ( ( m + ( 1 << ( 23 - _lm - 1 ) ) ) >> ( 23 - _lm ) )		6753085	0		=			
ANR	6753192	Identifier	_h		6753085	0					
ANR	6753193	AdditiveExpression	( e1 << _lm ) + ( ( m + ( 1 << ( 23 - _lm - 1 ) ) ) >> ( 23 - _lm ) )		6753085	1		+			
ANR	6753194	ShiftExpression	e1 << _lm		6753085	0		<<			
ANR	6753195	Identifier	e1		6753085	0					
ANR	6753196	Identifier	_lm		6753085	1					
ANR	6753197	ShiftExpression	( m + ( 1 << ( 23 - _lm - 1 ) ) ) >> ( 23 - _lm )		6753085	1		>>			
ANR	6753198	AdditiveExpression	m + ( 1 << ( 23 - _lm - 1 ) )		6753085	0		+			
ANR	6753199	Identifier	m		6753085	0					
ANR	6753200	ShiftExpression	1 << ( 23 - _lm - 1 )		6753085	1		<<			
ANR	6753201	PrimaryExpression	1		6753085	0					
ANR	6753202	AdditiveExpression	23 - _lm - 1		6753085	1		-			
ANR	6753203	PrimaryExpression	23		6753085	0					
ANR	6753204	AdditiveExpression	_lm - 1		6753085	1		-			
ANR	6753205	Identifier	_lm		6753085	0					
ANR	6753206	PrimaryExpression	1		6753085	1					
ANR	6753207	AdditiveExpression	23 - _lm		6753085	1		-			
ANR	6753208	PrimaryExpression	23		6753085	0					
ANR	6753209	Identifier	_lm		6753085	1					
ANR	6753210	ExpressionStatement	s = ( f >> 31 )	1054:8:32953:32966	6753085	7	True				
ANR	6753211	AssignmentExpression	s = ( f >> 31 )		6753085	0		=			
ANR	6753212	Identifier	s		6753085	0					
ANR	6753213	ShiftExpression	f >> 31		6753085	1		>>			
ANR	6753214	Identifier	f		6753085	0					
ANR	6753215	PrimaryExpression	31		6753085	1					
ANR	6753216	ExpressionStatement	_h = ( _h ^ s ) - s	1056:8:33009:33026	6753085	8	True				
ANR	6753217	AssignmentExpression	_h = ( _h ^ s ) - s		6753085	0		=			
ANR	6753218	Identifier	_h		6753085	0					
ANR	6753219	AdditiveExpression	( _h ^ s ) - s		6753085	1		-			
ANR	6753220	ExclusiveOrExpression	_h ^ s		6753085	0		^			
ANR	6753221	Identifier	_h		6753085	0					
ANR	6753222	Identifier	s		6753085	1					
ANR	6753223	Identifier	s		6753085	1					
ANR	6753224	ReturnStatement	return _h ;	1059:4:33040:33049	6753085	2	True				
ANR	6753225	Identifier	_h		6753085	0					
ANR	6753226	ReturnType	static int		6753085	1					
ANR	6753227	Identifier	PreScalingBD32F		6753085	2					
ANR	6753228	ParameterList	"int f , const char _c , const unsigned char _lm"		6753085	3					
ANR	6753229	Parameter	int f	1025:27:31935:31939	6753085	0	True				
ANR	6753230	ParameterType	int		6753085	0					
ANR	6753231	Identifier	f		6753085	1					
ANR	6753232	Parameter	const char _c	1025:34:31942:31954	6753085	1	True				
ANR	6753233	ParameterType	const char		6753085	0					
ANR	6753234	Identifier	_c		6753085	1					
ANR	6753235	Parameter	const unsigned char _lm	1025:49:31957:31979	6753085	2	True				
ANR	6753236	ParameterType	const unsigned char		6753085	0					
ANR	6753237	Identifier	_lm		6753085	1					
ANR	6753238	CFGEntryNode	ENTRY		6753085		True				
ANR	6753239	CFGExitNode	EXIT		6753085		True				
ANR	6753240	Symbol	_lm		6753085						
ANR	6753241	Symbol	s		6753085						
ANR	6753242	Symbol	_c		6753085						
ANR	6753243	Symbol	e		6753085						
ANR	6753244	Symbol	f		6753085						
ANR	6753245	Symbol	_h		6753085						
ANR	6753246	Symbol	e1		6753085						
ANR	6753247	Symbol	m		6753085						
ANR	6753248	Function	forwardRGBE	1062:0:33054:33435							
ANR	6753249	FunctionDef	"forwardRGBE (int RGB , int E)"		6753248	0					
ANR	6753250	CompoundStatement		1063:0:33087:33435	6753248	0					
ANR	6753251	IdentifierDeclStatement	"int iResult = 0 , iAppend = 1 ;"	1064:4:33093:33121	6753248	0	True				
ANR	6753252	IdentifierDecl	iResult = 0		6753248	0					
ANR	6753253	IdentifierDeclType	int		6753248	0					
ANR	6753254	Identifier	iResult		6753248	1					
ANR	6753255	AssignmentExpression	iResult = 0		6753248	2		=			
ANR	6753256	Identifier	iResult		6753248	0					
ANR	6753257	PrimaryExpression	0		6753248	1					
ANR	6753258	IdentifierDecl	iAppend = 1		6753248	1					
ANR	6753259	IdentifierDeclType	int		6753248	0					
ANR	6753260	Identifier	iAppend		6753248	1					
ANR	6753261	AssignmentExpression	iAppend = 1		6753248	2		=			
ANR	6753262	Identifier	iAppend		6753248	0					
ANR	6753263	PrimaryExpression	1		6753248	1					
ANR	6753264	IfStatement	if ( E == 0 )		6753248	1					
ANR	6753265	Condition	E == 0	1066:8:33132:33137	6753248	0	True				
ANR	6753266	EqualityExpression	E == 0		6753248	0		==			
ANR	6753267	Identifier	E		6753248	0					
ANR	6753268	PrimaryExpression	0		6753248	1					
ANR	6753269	ReturnStatement	return 0 ;	1067:8:33148:33156	6753248	1	True				
ANR	6753270	PrimaryExpression	0		6753248	0					
ANR	6753271	ExpressionStatement	E --	1069:4:33163:33166	6753248	2	True				
ANR	6753272	PostIncDecOperationExpression	E --		6753248	0					
ANR	6753273	Identifier	E		6753248	0					
ANR	6753274	IncDec	--		6753248	1					
ANR	6753275	WhileStatement	while ( ( ( RGB & 0x80 ) == 0 ) && ( E > 0 ) )		6753248	3					
ANR	6753276	Condition	( ( RGB & 0x80 ) == 0 ) && ( E > 0 )	1070:11:33179:33208	6753248	0	True				
ANR	6753277	AndExpression	( ( RGB & 0x80 ) == 0 ) && ( E > 0 )		6753248	0		&&			
ANR	6753278	EqualityExpression	( RGB & 0x80 ) == 0		6753248	0		==			
ANR	6753279	BitAndExpression	RGB & 0x80		6753248	0		&			
ANR	6753280	Identifier	RGB		6753248	0					
ANR	6753281	PrimaryExpression	0x80		6753248	1					
ANR	6753282	PrimaryExpression	0		6753248	1					
ANR	6753283	RelationalExpression	E > 0		6753248	1		>			
ANR	6753284	Identifier	E		6753248	0					
ANR	6753285	PrimaryExpression	0		6753248	1					
ANR	6753286	CompoundStatement		8:43:123:123	6753248	1					
ANR	6753287	ExpressionStatement	RGB = ( RGB << 1 ) + iAppend	1071:8:33221:33247	6753248	0	True				
ANR	6753288	AssignmentExpression	RGB = ( RGB << 1 ) + iAppend		6753248	0		=			
ANR	6753289	Identifier	RGB		6753248	0					
ANR	6753290	AdditiveExpression	( RGB << 1 ) + iAppend		6753248	1		+			
ANR	6753291	ShiftExpression	RGB << 1		6753248	0		<<			
ANR	6753292	Identifier	RGB		6753248	0					
ANR	6753293	PrimaryExpression	1		6753248	1					
ANR	6753294	Identifier	iAppend		6753248	1					
ANR	6753295	ExpressionStatement	iAppend = 0	1072:8:33257:33268	6753248	1	True				
ANR	6753296	AssignmentExpression	iAppend = 0		6753248	0		=			
ANR	6753297	Identifier	iAppend		6753248	0					
ANR	6753298	PrimaryExpression	0		6753248	1					
ANR	6753299	ExpressionStatement	E --	1073:8:33278:33281	6753248	2	True				
ANR	6753300	PostIncDecOperationExpression	E --		6753248	0					
ANR	6753301	Identifier	E		6753248	0					
ANR	6753302	IncDec	--		6753248	1					
ANR	6753303	IfStatement	if ( E == 0 )		6753248	4					
ANR	6753304	Condition	E == 0	1076:8:33302:33307	6753248	0	True				
ANR	6753305	EqualityExpression	E == 0		6753248	0		==			
ANR	6753306	Identifier	E		6753248	0					
ANR	6753307	PrimaryExpression	0		6753248	1					
ANR	6753308	CompoundStatement		14:16:222:222	6753248	1					
ANR	6753309	ExpressionStatement	iResult = RGB	1077:8:33320:33333	6753248	0	True				
ANR	6753310	AssignmentExpression	iResult = RGB		6753248	0		=			
ANR	6753311	Identifier	iResult		6753248	0					
ANR	6753312	Identifier	RGB		6753248	1					
ANR	6753313	ElseStatement	else		6753248	0					
ANR	6753314	CompoundStatement		17:9:262:262	6753248	0					
ANR	6753315	ExpressionStatement	E ++	1080:8:33360:33363	6753248	0	True				
ANR	6753316	PostIncDecOperationExpression	E ++		6753248	0					
ANR	6753317	Identifier	E		6753248	0					
ANR	6753318	IncDec	++		6753248	1					
ANR	6753319	ExpressionStatement	iResult = ( RGB & 0x7f ) + ( E << 7 )	1081:8:33373:33406	6753248	1	True				
ANR	6753320	AssignmentExpression	iResult = ( RGB & 0x7f ) + ( E << 7 )		6753248	0		=			
ANR	6753321	Identifier	iResult		6753248	0					
ANR	6753322	AdditiveExpression	( RGB & 0x7f ) + ( E << 7 )		6753248	1		+			
ANR	6753323	BitAndExpression	RGB & 0x7f		6753248	0		&			
ANR	6753324	Identifier	RGB		6753248	0					
ANR	6753325	PrimaryExpression	0x7f		6753248	1					
ANR	6753326	ShiftExpression	E << 7		6753248	1		<<			
ANR	6753327	Identifier	E		6753248	0					
ANR	6753328	PrimaryExpression	7		6753248	1					
ANR	6753329	ReturnStatement	return iResult ;	1084:4:33419:33433	6753248	5	True				
ANR	6753330	Identifier	iResult		6753248	0					
ANR	6753331	ReturnType	int		6753248	1					
ANR	6753332	Identifier	forwardRGBE		6753248	2					
ANR	6753333	ParameterList	"int RGB , int E"		6753248	3					
ANR	6753334	Parameter	int RGB	1062:17:33071:33077	6753248	0	True				
ANR	6753335	ParameterType	int		6753248	0					
ANR	6753336	Identifier	RGB		6753248	1					
ANR	6753337	Parameter	int E	1062:26:33080:33084	6753248	1	True				
ANR	6753338	ParameterType	int		6753248	0					
ANR	6753339	Identifier	E		6753248	1					
ANR	6753340	CFGEntryNode	ENTRY		6753248		True				
ANR	6753341	CFGExitNode	EXIT		6753248		True				
ANR	6753342	Symbol	E		6753248						
ANR	6753343	Symbol	iResult		6753248						
ANR	6753344	Symbol	iAppend		6753248						
ANR	6753345	Symbol	RGB		6753248						
ANR	6753346	Function	set_pad_bytes	1087:0:33438:34022							
ANR	6753347	FunctionDef	"set_pad_bytes (context * con , jxr_image_t image)"		6753346	0					
ANR	6753348	CompoundStatement		1088:0:33490:34022	6753346	0					
ANR	6753349	SwitchStatement	switch ( jxr_get_pixel_format ( image ) )		6753346	0					
ANR	6753350	Condition	jxr_get_pixel_format ( image )	1090:12:33570:33596	6753346	0	True				
ANR	6753351	CallExpression	jxr_get_pixel_format ( image )		6753346	0					
ANR	6753352	Callee	jxr_get_pixel_format		6753346	0					
ANR	6753353	Identifier	jxr_get_pixel_format		6753346	0					
ANR	6753354	ArgumentList	image		6753346	1					
ANR	6753355	Argument	image		6753346	0					
ANR	6753356	Identifier	image		6753346	0					
ANR	6753357	CompoundStatement		4:4:112:112	6753346	1					
ANR	6753358	Label	case JXRC_FMT_128bppRGBFloat :	1092:8:33613:33641	6753346	0	True				
ANR	6753359	Identifier	JXRC_FMT_128bppRGBFloat		6753346	0					
ANR	6753360	Label	case JXRC_FMT_128bppRGBFixedPoint :	1093:8:33651:33684	6753346	1	True				
ANR	6753361	Identifier	JXRC_FMT_128bppRGBFixedPoint		6753346	0					
ANR	6753362	ExpressionStatement	con -> padBytes = 32	1094:12:33698:33716	6753346	2	True				
ANR	6753363	AssignmentExpression	con -> padBytes = 32		6753346	0		=			
ANR	6753364	PtrMemberAccess	con -> padBytes		6753346	0					
ANR	6753365	Identifier	con		6753346	0					
ANR	6753366	Identifier	padBytes		6753346	1					
ANR	6753367	PrimaryExpression	32		6753346	1					
ANR	6753368	BreakStatement	break ;	1095:12:33730:33735	6753346	3	True				
ANR	6753369	Label	case JXRC_FMT_64bppRGBFixedPoint :	1096:8:33745:33777	6753346	4	True				
ANR	6753370	Identifier	JXRC_FMT_64bppRGBFixedPoint		6753346	0					
ANR	6753371	Label	case JXRC_FMT_64bppRGBHalf :	1097:8:33787:33813	6753346	5	True				
ANR	6753372	Identifier	JXRC_FMT_64bppRGBHalf		6753346	0					
ANR	6753373	ExpressionStatement	con -> padBytes = 16	1098:12:33827:33845	6753346	6	True				
ANR	6753374	AssignmentExpression	con -> padBytes = 16		6753346	0		=			
ANR	6753375	PtrMemberAccess	con -> padBytes		6753346	0					
ANR	6753376	Identifier	con		6753346	0					
ANR	6753377	Identifier	padBytes		6753346	1					
ANR	6753378	PrimaryExpression	16		6753346	1					
ANR	6753379	BreakStatement	break ;	1099:12:33859:33864	6753346	7	True				
ANR	6753380	Label	case JXRC_FMT_32bppBGR :	1100:8:33874:33896	6753346	8	True				
ANR	6753381	Identifier	JXRC_FMT_32bppBGR		6753346	0					
ANR	6753382	ExpressionStatement	con -> padBytes = 8	1101:12:33910:33927	6753346	9	True				
ANR	6753383	AssignmentExpression	con -> padBytes = 8		6753346	0		=			
ANR	6753384	PtrMemberAccess	con -> padBytes		6753346	0					
ANR	6753385	Identifier	con		6753346	0					
ANR	6753386	Identifier	padBytes		6753346	1					
ANR	6753387	PrimaryExpression	8		6753346	1					
ANR	6753388	BreakStatement	break ;	1102:12:33941:33946	6753346	10	True				
ANR	6753389	Label	default :	1103:8:33956:33963	6753346	11	True				
ANR	6753390	Identifier	default		6753346	0					
ANR	6753391	ExpressionStatement	con -> padBytes = 0	1104:12:33977:33994	6753346	12	True				
ANR	6753392	AssignmentExpression	con -> padBytes = 0		6753346	0		=			
ANR	6753393	PtrMemberAccess	con -> padBytes		6753346	0					
ANR	6753394	Identifier	con		6753346	0					
ANR	6753395	Identifier	padBytes		6753346	1					
ANR	6753396	PrimaryExpression	0		6753346	1					
ANR	6753397	BreakStatement	break ;	1105:12:34008:34013	6753346	13	True				
ANR	6753398	ReturnType	void		6753346	1					
ANR	6753399	Identifier	set_pad_bytes		6753346	2					
ANR	6753400	ParameterList	"context * con , jxr_image_t image"		6753346	3					
ANR	6753401	Parameter	context * con	1087:19:33457:33468	6753346	0	True				
ANR	6753402	ParameterType	context *		6753346	0					
ANR	6753403	Identifier	con		6753346	1					
ANR	6753404	Parameter	jxr_image_t image	1087:33:33471:33487	6753346	1	True				
ANR	6753405	ParameterType	jxr_image_t		6753346	0					
ANR	6753406	Identifier	image		6753346	1					
ANR	6753407	CFGEntryNode	ENTRY		6753346		True				
ANR	6753408	CFGExitNode	EXIT		6753346		True				
ANR	6753409	Symbol	image		6753346						
ANR	6753410	Symbol	con		6753346						
ANR	6753411	Symbol	* con		6753346						
ANR	6753412	Symbol	jxr_get_pixel_format		6753346						
ANR	6753413	Symbol	con -> padBytes		6753346						
ANR	6753414	Function	set_bgr_flag	1110:0:34025:34389							
ANR	6753415	FunctionDef	"set_bgr_flag (context * con , jxr_image_t image)"		6753414	0					
ANR	6753416	CompoundStatement		1111:0:34076:34389	6753414	0					
ANR	6753417	ExpressionStatement	con -> isBgr = 0	1112:4:34082:34096	6753414	0	True				
ANR	6753418	AssignmentExpression	con -> isBgr = 0		6753414	0		=			
ANR	6753419	PtrMemberAccess	con -> isBgr		6753414	0					
ANR	6753420	Identifier	con		6753414	0					
ANR	6753421	Identifier	isBgr		6753414	1					
ANR	6753422	PrimaryExpression	0		6753414	1					
ANR	6753423	SwitchStatement	switch ( jxr_get_pixel_format ( image ) )		6753414	1					
ANR	6753424	Condition	jxr_get_pixel_format ( image )	1113:12:34110:34136	6753414	0	True				
ANR	6753425	CallExpression	jxr_get_pixel_format ( image )		6753414	0					
ANR	6753426	Callee	jxr_get_pixel_format		6753414	0					
ANR	6753427	Identifier	jxr_get_pixel_format		6753414	0					
ANR	6753428	ArgumentList	image		6753414	1					
ANR	6753429	Argument	image		6753414	0					
ANR	6753430	Identifier	image		6753414	0					
ANR	6753431	CompoundStatement		4:4:66:66	6753414	1					
ANR	6753432	Label	case JXRC_FMT_24bppBGR :	1115:8:34153:34175	6753414	0	True				
ANR	6753433	Identifier	JXRC_FMT_24bppBGR		6753414	0					
ANR	6753434	Label	case JXRC_FMT_32bppBGR :	1116:8:34185:34207	6753414	1	True				
ANR	6753435	Identifier	JXRC_FMT_32bppBGR		6753414	0					
ANR	6753436	Label	case JXRC_FMT_32bppBGRA :	1117:8:34217:34240	6753414	2	True				
ANR	6753437	Identifier	JXRC_FMT_32bppBGRA		6753414	0					
ANR	6753438	Label	case JXRC_FMT_32bppPBGRA :	1118:8:34250:34274	6753414	3	True				
ANR	6753439	Identifier	JXRC_FMT_32bppPBGRA		6753414	0					
ANR	6753440	ExpressionStatement	con -> isBgr = 1	1119:12:34296:34310	6753414	4	True				
ANR	6753441	AssignmentExpression	con -> isBgr = 1		6753414	0		=			
ANR	6753442	PtrMemberAccess	con -> isBgr		6753414	0					
ANR	6753443	Identifier	con		6753414	0					
ANR	6753444	Identifier	isBgr		6753414	1					
ANR	6753445	PrimaryExpression	1		6753414	1					
ANR	6753446	BreakStatement	break ;	1120:12:34324:34329	6753414	5	True				
ANR	6753447	Label	default :	1121:8:34339:34346	6753414	6	True				
ANR	6753448	Identifier	default		6753414	0					
ANR	6753449	BreakStatement	break ;	1122:12:34360:34365	6753414	7	True				
ANR	6753450	ReturnStatement	return ;	1124:4:34381:34387	6753414	2	True				
ANR	6753451	ReturnType	void		6753414	1					
ANR	6753452	Identifier	set_bgr_flag		6753414	2					
ANR	6753453	ParameterList	"context * con , jxr_image_t image"		6753414	3					
ANR	6753454	Parameter	context * con	1110:18:34043:34054	6753414	0	True				
ANR	6753455	ParameterType	context *		6753414	0					
ANR	6753456	Identifier	con		6753414	1					
ANR	6753457	Parameter	jxr_image_t image	1110:32:34057:34073	6753414	1	True				
ANR	6753458	ParameterType	jxr_image_t		6753414	0					
ANR	6753459	Identifier	image		6753414	1					
ANR	6753460	CFGEntryNode	ENTRY		6753414		True				
ANR	6753461	CFGExitNode	EXIT		6753414		True				
ANR	6753462	Symbol	image		6753414						
ANR	6753463	Symbol	con		6753414						
ANR	6753464	Symbol	* con		6753414						
ANR	6753465	Symbol	jxr_get_pixel_format		6753414						
ANR	6753466	Symbol	con -> isBgr		6753414						
ANR	6753467	Function	switch_r_b	1127:0:34392:34951							
ANR	6753468	FunctionDef	"switch_r_b (void * data , int bpi)"		6753467	0					
ANR	6753469	CompoundStatement		1128:0:34429:34951	6753467	0					
ANR	6753470	IdentifierDeclStatement	uint32_t tmp ;	1129:4:34435:34447	6753467	0	True				
ANR	6753471	IdentifierDecl	tmp		6753467	0					
ANR	6753472	IdentifierDeclType	uint32_t		6753467	0					
ANR	6753473	Identifier	tmp		6753467	1					
ANR	6753474	ExpressionStatement	data = ( uint8_t * ) data	1130:4:34453:34474	6753467	1	True				
ANR	6753475	AssignmentExpression	data = ( uint8_t * ) data		6753467	0		=			
ANR	6753476	Identifier	data		6753467	0					
ANR	6753477	CastExpression	( uint8_t * ) data		6753467	1					
ANR	6753478	CastTarget	uint8_t *		6753467	0					
ANR	6753479	Identifier	data		6753467	1					
ANR	6753480	IfStatement	if ( bpi == 8 )		6753467	2					
ANR	6753481	Condition	bpi == 8	1131:7:34483:34490	6753467	0	True				
ANR	6753482	EqualityExpression	bpi == 8		6753467	0		==			
ANR	6753483	Identifier	bpi		6753467	0					
ANR	6753484	PrimaryExpression	8		6753467	1					
ANR	6753485	CompoundStatement		6:8:77:104	6753467	1					
ANR	6753486	IdentifierDeclStatement	uint8_t * p = ( uint8_t * ) data ;	1133:8:34507:34534	6753467	0	True				
ANR	6753487	IdentifierDecl	* p = ( uint8_t * ) data		6753467	0					
ANR	6753488	IdentifierDeclType	uint8_t *		6753467	0					
ANR	6753489	Identifier	p		6753467	1					
ANR	6753490	AssignmentExpression	* p = ( uint8_t * ) data		6753467	2		=			
ANR	6753491	Identifier	p		6753467	0					
ANR	6753492	CastExpression	( uint8_t * ) data		6753467	1					
ANR	6753493	CastTarget	uint8_t *		6753467	0					
ANR	6753494	Identifier	data		6753467	1					
ANR	6753495	ExpressionStatement	tmp = p [ 0 ]	1134:8:34544:34554	6753467	1	True				
ANR	6753496	AssignmentExpression	tmp = p [ 0 ]		6753467	0		=			
ANR	6753497	Identifier	tmp		6753467	0					
ANR	6753498	ArrayIndexing	p [ 0 ]		6753467	1					
ANR	6753499	Identifier	p		6753467	0					
ANR	6753500	PrimaryExpression	0		6753467	1					
ANR	6753501	ExpressionStatement	p [ 0 ] = p [ 2 ]	1135:8:34564:34575	6753467	2	True				
ANR	6753502	AssignmentExpression	p [ 0 ] = p [ 2 ]		6753467	0		=			
ANR	6753503	ArrayIndexing	p [ 0 ]		6753467	0					
ANR	6753504	Identifier	p		6753467	0					
ANR	6753505	PrimaryExpression	0		6753467	1					
ANR	6753506	ArrayIndexing	p [ 2 ]		6753467	1					
ANR	6753507	Identifier	p		6753467	0					
ANR	6753508	PrimaryExpression	2		6753467	1					
ANR	6753509	ExpressionStatement	p [ 2 ] = tmp	1136:8:34585:34595	6753467	3	True				
ANR	6753510	AssignmentExpression	p [ 2 ] = tmp		6753467	0		=			
ANR	6753511	ArrayIndexing	p [ 2 ]		6753467	0					
ANR	6753512	Identifier	p		6753467	0					
ANR	6753513	PrimaryExpression	2		6753467	1					
ANR	6753514	Identifier	tmp		6753467	1					
ANR	6753515	ElseStatement	else		6753467	0					
ANR	6753516	IfStatement	if ( bpi == 16 )		6753467	0					
ANR	6753517	Condition	bpi == 16	1140:12:34629:34637	6753467	0	True				
ANR	6753518	EqualityExpression	bpi == 16		6753467	0		==			
ANR	6753519	Identifier	bpi		6753467	0					
ANR	6753520	PrimaryExpression	16		6753467	1					
ANR	6753521	CompoundStatement		15:8:224:253	6753467	1					
ANR	6753522	IdentifierDeclStatement	uint16_t * p = ( uint16_t * ) data ;	1142:8:34654:34683	6753467	0	True				
ANR	6753523	IdentifierDecl	* p = ( uint16_t * ) data		6753467	0					
ANR	6753524	IdentifierDeclType	uint16_t *		6753467	0					
ANR	6753525	Identifier	p		6753467	1					
ANR	6753526	AssignmentExpression	* p = ( uint16_t * ) data		6753467	2		=			
ANR	6753527	Identifier	p		6753467	0					
ANR	6753528	CastExpression	( uint16_t * ) data		6753467	1					
ANR	6753529	CastTarget	uint16_t *		6753467	0					
ANR	6753530	Identifier	data		6753467	1					
ANR	6753531	ExpressionStatement	tmp = p [ 0 ]	1143:8:34693:34703	6753467	1	True				
ANR	6753532	AssignmentExpression	tmp = p [ 0 ]		6753467	0		=			
ANR	6753533	Identifier	tmp		6753467	0					
ANR	6753534	ArrayIndexing	p [ 0 ]		6753467	1					
ANR	6753535	Identifier	p		6753467	0					
ANR	6753536	PrimaryExpression	0		6753467	1					
ANR	6753537	ExpressionStatement	p [ 0 ] = p [ 2 ]	1144:8:34713:34724	6753467	2	True				
ANR	6753538	AssignmentExpression	p [ 0 ] = p [ 2 ]		6753467	0		=			
ANR	6753539	ArrayIndexing	p [ 0 ]		6753467	0					
ANR	6753540	Identifier	p		6753467	0					
ANR	6753541	PrimaryExpression	0		6753467	1					
ANR	6753542	ArrayIndexing	p [ 2 ]		6753467	1					
ANR	6753543	Identifier	p		6753467	0					
ANR	6753544	PrimaryExpression	2		6753467	1					
ANR	6753545	ExpressionStatement	p [ 2 ] = tmp	1145:8:34734:34744	6753467	3	True				
ANR	6753546	AssignmentExpression	p [ 2 ] = tmp		6753467	0		=			
ANR	6753547	ArrayIndexing	p [ 2 ]		6753467	0					
ANR	6753548	Identifier	p		6753467	0					
ANR	6753549	PrimaryExpression	2		6753467	1					
ANR	6753550	Identifier	tmp		6753467	1					
ANR	6753551	ElseStatement	else		6753467	0					
ANR	6753552	IfStatement	if ( bpi == 32 )		6753467	0					
ANR	6753553	Condition	bpi == 32	1147:12:34764:34772	6753467	0	True				
ANR	6753554	EqualityExpression	bpi == 32		6753467	0		==			
ANR	6753555	Identifier	bpi		6753467	0					
ANR	6753556	PrimaryExpression	32		6753467	1					
ANR	6753557	CompoundStatement		22:8:359:389	6753467	1					
ANR	6753558	IdentifierDeclStatement	uint32_t * p = ( uint32_t * ) data ;	1149:8:34789:34819	6753467	0	True				
ANR	6753559	IdentifierDecl	* p = ( uint32_t * ) data		6753467	0					
ANR	6753560	IdentifierDeclType	uint32_t *		6753467	0					
ANR	6753561	Identifier	p		6753467	1					
ANR	6753562	AssignmentExpression	* p = ( uint32_t * ) data		6753467	2		=			
ANR	6753563	Identifier	p		6753467	0					
ANR	6753564	CastExpression	( uint32_t * ) data		6753467	1					
ANR	6753565	CastTarget	uint32_t *		6753467	0					
ANR	6753566	Identifier	data		6753467	1					
ANR	6753567	ExpressionStatement	tmp = p [ 0 ]	1150:8:34829:34839	6753467	1	True				
ANR	6753568	AssignmentExpression	tmp = p [ 0 ]		6753467	0		=			
ANR	6753569	Identifier	tmp		6753467	0					
ANR	6753570	ArrayIndexing	p [ 0 ]		6753467	1					
ANR	6753571	Identifier	p		6753467	0					
ANR	6753572	PrimaryExpression	0		6753467	1					
ANR	6753573	ExpressionStatement	p [ 0 ] = p [ 2 ]	1151:8:34849:34860	6753467	2	True				
ANR	6753574	AssignmentExpression	p [ 0 ] = p [ 2 ]		6753467	0		=			
ANR	6753575	ArrayIndexing	p [ 0 ]		6753467	0					
ANR	6753576	Identifier	p		6753467	0					
ANR	6753577	PrimaryExpression	0		6753467	1					
ANR	6753578	ArrayIndexing	p [ 2 ]		6753467	1					
ANR	6753579	Identifier	p		6753467	0					
ANR	6753580	PrimaryExpression	2		6753467	1					
ANR	6753581	ExpressionStatement	p [ 2 ] = tmp	1152:8:34870:34880	6753467	3	True				
ANR	6753582	AssignmentExpression	p [ 2 ] = tmp		6753467	0		=			
ANR	6753583	ArrayIndexing	p [ 2 ]		6753467	0					
ANR	6753584	Identifier	p		6753467	0					
ANR	6753585	PrimaryExpression	2		6753467	1					
ANR	6753586	Identifier	tmp		6753467	1					
ANR	6753587	ElseStatement	else		6753467	0					
ANR	6753588	CompoundStatement		28:4:479:479	6753467	0					
ANR	6753589	ExpressionStatement	"assert ( ! ""Invalid bpi\\n"" )"	1156:8:34919:34943	6753467	0	True				
ANR	6753590	CallExpression	"assert ( ! ""Invalid bpi\\n"" )"		6753467	0					
ANR	6753591	Callee	assert		6753467	0					
ANR	6753592	Identifier	assert		6753467	0					
ANR	6753593	ArgumentList	"! ""Invalid bpi\\n"""		6753467	1					
ANR	6753594	Argument	"! ""Invalid bpi\\n"""		6753467	0					
ANR	6753595	UnaryOperationExpression	"! ""Invalid bpi\\n"""		6753467	0					
ANR	6753596	UnaryOperator	!		6753467	0					
ANR	6753597	PrimaryExpression	"""Invalid bpi\\n"""		6753467	1					
ANR	6753598	ReturnType	void		6753467	1					
ANR	6753599	Identifier	switch_r_b		6753467	2					
ANR	6753600	ParameterList	"void * data , int bpi"		6753467	3					
ANR	6753601	Parameter	void * data	1127:16:34408:34417	6753467	0	True				
ANR	6753602	ParameterType	void *		6753467	0					
ANR	6753603	Identifier	data		6753467	1					
ANR	6753604	Parameter	int bpi	1127:28:34420:34426	6753467	1	True				
ANR	6753605	ParameterType	int		6753467	0					
ANR	6753606	Identifier	bpi		6753467	1					
ANR	6753607	CFGEntryNode	ENTRY		6753467		True				
ANR	6753608	CFGExitNode	EXIT		6753467		True				
ANR	6753609	Symbol	p		6753467						
ANR	6753610	Symbol	data		6753467						
ANR	6753611	Symbol	tmp		6753467						
ANR	6753612	Symbol	bpi		6753467						
ANR	6753613	Symbol	* p		6753467						
ANR	6753614	Function	read_setup	1160:0:34954:35278							
ANR	6753615	FunctionDef	read_setup (context * con)		6753614	0					
ANR	6753616	CompoundStatement		1161:0:34991:35278	6753614	0					
ANR	6753617	IfStatement	if ( con -> line == con -> nlines )		6753614	0					
ANR	6753618	Condition	con -> line == con -> nlines	1162:8:35001:35024	6753614	0	True				
ANR	6753619	EqualityExpression	con -> line == con -> nlines		6753614	0		==			
ANR	6753620	PtrMemberAccess	con -> line		6753614	0					
ANR	6753621	Identifier	con		6753614	0					
ANR	6753622	Identifier	line		6753614	1					
ANR	6753623	PtrMemberAccess	con -> nlines		6753614	1					
ANR	6753624	Identifier	con		6753614	0					
ANR	6753625	Identifier	nlines		6753614	1					
ANR	6753626	CompoundStatement		2:34:35:35	6753614	1					
ANR	6753627	IfStatement	if ( con -> strip == con -> nstrips )		6753614	0					
ANR	6753628	Condition	con -> strip == con -> nstrips	1163:12:35041:35066	6753614	0	True				
ANR	6753629	EqualityExpression	con -> strip == con -> nstrips		6753614	0		==			
ANR	6753630	PtrMemberAccess	con -> strip		6753614	0					
ANR	6753631	Identifier	con		6753614	0					
ANR	6753632	Identifier	strip		6753614	1					
ANR	6753633	PtrMemberAccess	con -> nstrips		6753614	1					
ANR	6753634	Identifier	con		6753614	0					
ANR	6753635	Identifier	nstrips		6753614	1					
ANR	6753636	ExpressionStatement	"error ( ""unexpected end of data encountered in input file %s"" , con -> name )"	1164:12:35081:35152	6753614	1	True				
ANR	6753637	CallExpression	"error ( ""unexpected end of data encountered in input file %s"" , con -> name )"		6753614	0					
ANR	6753638	Callee	error		6753614	0					
ANR	6753639	Identifier	error		6753614	0					
ANR	6753640	ArgumentList	"""unexpected end of data encountered in input file %s"""		6753614	1					
ANR	6753641	Argument	"""unexpected end of data encountered in input file %s"""		6753614	0					
ANR	6753642	PrimaryExpression	"""unexpected end of data encountered in input file %s"""		6753614	0					
ANR	6753643	Argument	con -> name		6753614	1					
ANR	6753644	PtrMemberAccess	con -> name		6753614	0					
ANR	6753645	Identifier	con		6753614	0					
ANR	6753646	Identifier	name		6753614	1					
ANR	6753647	ExpressionStatement	"seek_file ( con , get_tif_datum ( con , con -> offoff , con -> strip ) , SEEK_SET )"	1165:8:35162:35231	6753614	1	True				
ANR	6753648	CallExpression	"seek_file ( con , get_tif_datum ( con , con -> offoff , con -> strip ) , SEEK_SET )"		6753614	0					
ANR	6753649	Callee	seek_file		6753614	0					
ANR	6753650	Identifier	seek_file		6753614	0					
ANR	6753651	ArgumentList	con		6753614	1					
ANR	6753652	Argument	con		6753614	0					
ANR	6753653	Identifier	con		6753614	0					
ANR	6753654	Argument	"get_tif_datum ( con , con -> offoff , con -> strip )"		6753614	1					
ANR	6753655	CallExpression	"get_tif_datum ( con , con -> offoff , con -> strip )"		6753614	0					
ANR	6753656	Callee	get_tif_datum		6753614	0					
ANR	6753657	Identifier	get_tif_datum		6753614	0					
ANR	6753658	ArgumentList	con		6753614	1					
ANR	6753659	Argument	con		6753614	0					
ANR	6753660	Identifier	con		6753614	0					
ANR	6753661	Argument	con -> offoff		6753614	1					
ANR	6753662	PtrMemberAccess	con -> offoff		6753614	0					
ANR	6753663	Identifier	con		6753614	0					
ANR	6753664	Identifier	offoff		6753614	1					
ANR	6753665	Argument	con -> strip		6753614	2					
ANR	6753666	PtrMemberAccess	con -> strip		6753614	0					
ANR	6753667	Identifier	con		6753614	0					
ANR	6753668	Identifier	strip		6753614	1					
ANR	6753669	Argument	SEEK_SET		6753614	2					
ANR	6753670	Identifier	SEEK_SET		6753614	0					
ANR	6753671	ExpressionStatement	con -> strip ++	1166:8:35241:35253	6753614	2	True				
ANR	6753672	PostIncDecOperationExpression	con -> strip ++		6753614	0					
ANR	6753673	PtrMemberAccess	con -> strip		6753614	0					
ANR	6753674	Identifier	con		6753614	0					
ANR	6753675	Identifier	strip		6753614	1					
ANR	6753676	IncDec	++		6753614	1					
ANR	6753677	ExpressionStatement	con -> line ++	1168:4:35265:35276	6753614	1	True				
ANR	6753678	PostIncDecOperationExpression	con -> line ++		6753614	0					
ANR	6753679	PtrMemberAccess	con -> line		6753614	0					
ANR	6753680	Identifier	con		6753614	0					
ANR	6753681	Identifier	line		6753614	1					
ANR	6753682	IncDec	++		6753614	1					
ANR	6753683	ReturnType	static void		6753614	1					
ANR	6753684	Identifier	read_setup		6753614	2					
ANR	6753685	ParameterList	context * con		6753614	3					
ANR	6753686	Parameter	context * con	1160:23:34977:34988	6753614	0	True				
ANR	6753687	ParameterType	context *		6753614	0					
ANR	6753688	Identifier	con		6753614	1					
ANR	6753689	CFGEntryNode	ENTRY		6753614		True				
ANR	6753690	CFGExitNode	EXIT		6753614		True				
ANR	6753691	Symbol	SEEK_SET		6753614						
ANR	6753692	Symbol	con -> strip		6753614						
ANR	6753693	Symbol	con		6753614						
ANR	6753694	Symbol	* con		6753614						
ANR	6753695	Symbol	con -> line		6753614						
ANR	6753696	Symbol	con -> offoff		6753614						
ANR	6753697	Symbol	con -> nlines		6753614						
ANR	6753698	Symbol	con -> nstrips		6753614						
ANR	6753699	Symbol	get_tif_datum		6753614						
ANR	6753700	Symbol	con -> name		6753614						
ANR	6753701	Function	read_file_YCC	1171:0:35281:43197							
ANR	6753702	FunctionDef	"read_file_YCC (jxr_image_t image , int mx , int my , int * data)"		6753701	0					
ANR	6753703	CompoundStatement		1171:65:35346:43197	6753701	0					
ANR	6753704	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	1173:4:35442:35492	6753701	0	True				
ANR	6753705	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		6753701	0					
ANR	6753706	IdentifierDeclType	context *		6753701	0					
ANR	6753707	Identifier	con		6753701	1					
ANR	6753708	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		6753701	2		=			
ANR	6753709	Identifier	con		6753701	0					
ANR	6753710	CastExpression	( context * ) jxr_get_user_data ( image )		6753701	1					
ANR	6753711	CastTarget	context *		6753701	0					
ANR	6753712	CallExpression	jxr_get_user_data ( image )		6753701	1					
ANR	6753713	Callee	jxr_get_user_data		6753701	0					
ANR	6753714	Identifier	jxr_get_user_data		6753701	0					
ANR	6753715	ArgumentList	image		6753701	1					
ANR	6753716	Argument	image		6753701	0					
ANR	6753717	Identifier	image		6753701	0					
ANR	6753718	IdentifierDeclStatement	int num_channels = con -> ncomp ;	1174:4:35498:35527	6753701	1	True				
ANR	6753719	IdentifierDecl	num_channels = con -> ncomp		6753701	0					
ANR	6753720	IdentifierDeclType	int		6753701	0					
ANR	6753721	Identifier	num_channels		6753701	1					
ANR	6753722	AssignmentExpression	num_channels = con -> ncomp		6753701	2		=			
ANR	6753723	Identifier	num_channels		6753701	0					
ANR	6753724	PtrMemberAccess	con -> ncomp		6753701	1					
ANR	6753725	Identifier	con		6753701	0					
ANR	6753726	Identifier	ncomp		6753701	1					
ANR	6753727	IdentifierDeclStatement	"unsigned int widthY = con -> wid , heightY = con -> hei ;"	1176:4:35534:35584	6753701	2	True				
ANR	6753728	IdentifierDecl	widthY = con -> wid		6753701	0					
ANR	6753729	IdentifierDeclType	unsigned int		6753701	0					
ANR	6753730	Identifier	widthY		6753701	1					
ANR	6753731	AssignmentExpression	widthY = con -> wid		6753701	2		=			
ANR	6753732	Identifier	widthY		6753701	0					
ANR	6753733	PtrMemberAccess	con -> wid		6753701	1					
ANR	6753734	Identifier	con		6753701	0					
ANR	6753735	Identifier	wid		6753701	1					
ANR	6753736	IdentifierDecl	heightY = con -> hei		6753701	1					
ANR	6753737	IdentifierDeclType	unsigned int		6753701	0					
ANR	6753738	Identifier	heightY		6753701	1					
ANR	6753739	AssignmentExpression	heightY = con -> hei		6753701	2		=			
ANR	6753740	Identifier	heightY		6753701	0					
ANR	6753741	PtrMemberAccess	con -> hei		6753701	1					
ANR	6753742	Identifier	con		6753701	0					
ANR	6753743	Identifier	hei		6753701	1					
ANR	6753744	IdentifierDeclStatement	unsigned int widthUV = con -> wid >> ( ( con -> ycc_format == 1 || con -> ycc_format == 2 ) ? 1 : 0 ) ;	1177:4:35590:35681	6753701	3	True				
ANR	6753745	IdentifierDecl	widthUV = con -> wid >> ( ( con -> ycc_format == 1 || con -> ycc_format == 2 ) ? 1 : 0 )		6753701	0					
ANR	6753746	IdentifierDeclType	unsigned int		6753701	0					
ANR	6753747	Identifier	widthUV		6753701	1					
ANR	6753748	AssignmentExpression	widthUV = con -> wid >> ( ( con -> ycc_format == 1 || con -> ycc_format == 2 ) ? 1 : 0 )		6753701	2		=			
ANR	6753749	Identifier	widthUV		6753701	0					
ANR	6753750	ShiftExpression	con -> wid >> ( ( con -> ycc_format == 1 || con -> ycc_format == 2 ) ? 1 : 0 )		6753701	1		>>			
ANR	6753751	PtrMemberAccess	con -> wid		6753701	0					
ANR	6753752	Identifier	con		6753701	0					
ANR	6753753	Identifier	wid		6753701	1					
ANR	6753754	ConditionalExpression	( con -> ycc_format == 1 || con -> ycc_format == 2 ) ? 1 : 0		6753701	1					
ANR	6753755	Condition	con -> ycc_format == 1 || con -> ycc_format == 2		6753701	0					
ANR	6753756	OrExpression	con -> ycc_format == 1 || con -> ycc_format == 2		6753701	0		||			
ANR	6753757	EqualityExpression	con -> ycc_format == 1		6753701	0		==			
ANR	6753758	PtrMemberAccess	con -> ycc_format		6753701	0					
ANR	6753759	Identifier	con		6753701	0					
ANR	6753760	Identifier	ycc_format		6753701	1					
ANR	6753761	PrimaryExpression	1		6753701	1					
ANR	6753762	EqualityExpression	con -> ycc_format == 2		6753701	1		==			
ANR	6753763	PtrMemberAccess	con -> ycc_format		6753701	0					
ANR	6753764	Identifier	con		6753701	0					
ANR	6753765	Identifier	ycc_format		6753701	1					
ANR	6753766	PrimaryExpression	2		6753701	1					
ANR	6753767	PrimaryExpression	1		6753701	1					
ANR	6753768	PrimaryExpression	0		6753701	2					
ANR	6753769	IdentifierDeclStatement	unsigned int heightUV = con -> hei >> ( con -> ycc_format == 1 ? 1 : 0 ) ;	1178:4:35687:35753	6753701	4	True				
ANR	6753770	IdentifierDecl	heightUV = con -> hei >> ( con -> ycc_format == 1 ? 1 : 0 )		6753701	0					
ANR	6753771	IdentifierDeclType	unsigned int		6753701	0					
ANR	6753772	Identifier	heightUV		6753701	1					
ANR	6753773	AssignmentExpression	heightUV = con -> hei >> ( con -> ycc_format == 1 ? 1 : 0 )		6753701	2		=			
ANR	6753774	Identifier	heightUV		6753701	0					
ANR	6753775	ShiftExpression	con -> hei >> ( con -> ycc_format == 1 ? 1 : 0 )		6753701	1		>>			
ANR	6753776	PtrMemberAccess	con -> hei		6753701	0					
ANR	6753777	Identifier	con		6753701	0					
ANR	6753778	Identifier	hei		6753701	1					
ANR	6753779	ConditionalExpression	con -> ycc_format == 1 ? 1 : 0		6753701	1					
ANR	6753780	Condition	con -> ycc_format == 1		6753701	0					
ANR	6753781	EqualityExpression	con -> ycc_format == 1		6753701	0		==			
ANR	6753782	PtrMemberAccess	con -> ycc_format		6753701	0					
ANR	6753783	Identifier	con		6753701	0					
ANR	6753784	Identifier	ycc_format		6753701	1					
ANR	6753785	PrimaryExpression	1		6753701	1					
ANR	6753786	PrimaryExpression	1		6753701	1					
ANR	6753787	PrimaryExpression	0		6753701	2					
ANR	6753788	IdentifierDeclStatement	unsigned int MBheightY = 16 ;	1179:4:35759:35786	6753701	5	True				
ANR	6753789	IdentifierDecl	MBheightY = 16		6753701	0					
ANR	6753790	IdentifierDeclType	unsigned int		6753701	0					
ANR	6753791	Identifier	MBheightY		6753701	1					
ANR	6753792	AssignmentExpression	MBheightY = 16		6753701	2		=			
ANR	6753793	Identifier	MBheightY		6753701	0					
ANR	6753794	PrimaryExpression	16		6753701	1					
ANR	6753795	IdentifierDeclStatement	unsigned int MBheightUV = con -> ycc_format == 1 ? 8 : 16 ;	1180:4:35792:35847	6753701	6	True				
ANR	6753796	IdentifierDecl	MBheightUV = con -> ycc_format == 1 ? 8 : 16		6753701	0					
ANR	6753797	IdentifierDeclType	unsigned int		6753701	0					
ANR	6753798	Identifier	MBheightUV		6753701	1					
ANR	6753799	AssignmentExpression	MBheightUV = con -> ycc_format == 1 ? 8 : 16		6753701	2		=			
ANR	6753800	Identifier	MBheightUV		6753701	0					
ANR	6753801	ConditionalExpression	con -> ycc_format == 1 ? 8 : 16		6753701	1					
ANR	6753802	Condition	con -> ycc_format == 1		6753701	0					
ANR	6753803	EqualityExpression	con -> ycc_format == 1		6753701	0		==			
ANR	6753804	PtrMemberAccess	con -> ycc_format		6753701	0					
ANR	6753805	Identifier	con		6753701	0					
ANR	6753806	Identifier	ycc_format		6753701	1					
ANR	6753807	PrimaryExpression	1		6753701	1					
ANR	6753808	PrimaryExpression	8		6753701	1					
ANR	6753809	PrimaryExpression	16		6753701	2					
ANR	6753810	IdentifierDeclStatement	unsigned int sizeY = widthY * heightY ;	1181:4:35853:35890	6753701	7	True				
ANR	6753811	IdentifierDecl	sizeY = widthY * heightY		6753701	0					
ANR	6753812	IdentifierDeclType	unsigned int		6753701	0					
ANR	6753813	Identifier	sizeY		6753701	1					
ANR	6753814	AssignmentExpression	sizeY = widthY * heightY		6753701	2		=			
ANR	6753815	Identifier	sizeY		6753701	0					
ANR	6753816	MultiplicativeExpression	widthY * heightY		6753701	1		*			
ANR	6753817	Identifier	widthY		6753701	0					
ANR	6753818	Identifier	heightY		6753701	1					
ANR	6753819	IdentifierDeclStatement	unsigned int sizeUV = widthUV * heightUV ;	1182:4:35896:35936	6753701	8	True				
ANR	6753820	IdentifierDecl	sizeUV = widthUV * heightUV		6753701	0					
ANR	6753821	IdentifierDeclType	unsigned int		6753701	0					
ANR	6753822	Identifier	sizeUV		6753701	1					
ANR	6753823	AssignmentExpression	sizeUV = widthUV * heightUV		6753701	2		=			
ANR	6753824	Identifier	sizeUV		6753701	0					
ANR	6753825	MultiplicativeExpression	widthUV * heightUV		6753701	1		*			
ANR	6753826	Identifier	widthUV		6753701	0					
ANR	6753827	Identifier	heightUV		6753701	1					
ANR	6753828	IfStatement	if ( my != con -> my )		6753701	9					
ANR	6753829	Condition	my != con -> my	1184:8:35947:35959	6753701	0	True				
ANR	6753830	EqualityExpression	my != con -> my		6753701	0		!=			
ANR	6753831	Identifier	my		6753701	0					
ANR	6753832	PtrMemberAccess	con -> my		6753701	1					
ANR	6753833	Identifier	con		6753701	0					
ANR	6753834	Identifier	my		6753701	1					
ANR	6753835	CompoundStatement		14:23:615:615	6753701	1					
ANR	6753836	IfStatement	if ( con -> bpi == 8 )		6753701	0					
ANR	6753837	Condition	con -> bpi == 8	1185:12:35976:35988	6753701	0	True				
ANR	6753838	EqualityExpression	con -> bpi == 8		6753701	0		==			
ANR	6753839	PtrMemberAccess	con -> bpi		6753701	0					
ANR	6753840	Identifier	con		6753701	0					
ANR	6753841	Identifier	bpi		6753701	1					
ANR	6753842	PrimaryExpression	8		6753701	1					
ANR	6753843	CompoundStatement		21:12:949:981	6753701	1					
ANR	6753844	IdentifierDeclStatement	unsigned int offsetY = my * MBheightY * widthY ;	1186:12:36005:36051	6753701	0	True				
ANR	6753845	IdentifierDecl	offsetY = my * MBheightY * widthY		6753701	0					
ANR	6753846	IdentifierDeclType	unsigned int		6753701	0					
ANR	6753847	Identifier	offsetY		6753701	1					
ANR	6753848	AssignmentExpression	offsetY = my * MBheightY * widthY		6753701	2		=			
ANR	6753849	Identifier	offsetY		6753701	0					
ANR	6753850	MultiplicativeExpression	my * MBheightY * widthY		6753701	1		*			
ANR	6753851	Identifier	my		6753701	0					
ANR	6753852	MultiplicativeExpression	MBheightY * widthY		6753701	1		*			
ANR	6753853	Identifier	MBheightY		6753701	0					
ANR	6753854	Identifier	widthY		6753701	1					
ANR	6753855	IdentifierDeclStatement	unsigned int offsetU = sizeY + my * MBheightUV * widthUV ;	1187:12:36065:36121	6753701	1	True				
ANR	6753856	IdentifierDecl	offsetU = sizeY + my * MBheightUV * widthUV		6753701	0					
ANR	6753857	IdentifierDeclType	unsigned int		6753701	0					
ANR	6753858	Identifier	offsetU		6753701	1					
ANR	6753859	AssignmentExpression	offsetU = sizeY + my * MBheightUV * widthUV		6753701	2		=			
ANR	6753860	Identifier	offsetU		6753701	0					
ANR	6753861	AdditiveExpression	sizeY + my * MBheightUV * widthUV		6753701	1		+			
ANR	6753862	Identifier	sizeY		6753701	0					
ANR	6753863	MultiplicativeExpression	my * MBheightUV * widthUV		6753701	1		*			
ANR	6753864	Identifier	my		6753701	0					
ANR	6753865	MultiplicativeExpression	MBheightUV * widthUV		6753701	1		*			
ANR	6753866	Identifier	MBheightUV		6753701	0					
ANR	6753867	Identifier	widthUV		6753701	1					
ANR	6753868	IdentifierDeclStatement	unsigned int offsetV = sizeY + sizeUV + my * MBheightUV * widthUV ;	1188:12:36135:36200	6753701	2	True				
ANR	6753869	IdentifierDecl	offsetV = sizeY + sizeUV + my * MBheightUV * widthUV		6753701	0					
ANR	6753870	IdentifierDeclType	unsigned int		6753701	0					
ANR	6753871	Identifier	offsetV		6753701	1					
ANR	6753872	AssignmentExpression	offsetV = sizeY + sizeUV + my * MBheightUV * widthUV		6753701	2		=			
ANR	6753873	Identifier	offsetV		6753701	0					
ANR	6753874	AdditiveExpression	sizeY + sizeUV + my * MBheightUV * widthUV		6753701	1		+			
ANR	6753875	Identifier	sizeY		6753701	0					
ANR	6753876	AdditiveExpression	sizeUV + my * MBheightUV * widthUV		6753701	1		+			
ANR	6753877	Identifier	sizeUV		6753701	0					
ANR	6753878	MultiplicativeExpression	my * MBheightUV * widthUV		6753701	1		*			
ANR	6753879	Identifier	my		6753701	0					
ANR	6753880	MultiplicativeExpression	MBheightUV * widthUV		6753701	1		*			
ANR	6753881	Identifier	MBheightUV		6753701	0					
ANR	6753882	Identifier	widthUV		6753701	1					
ANR	6753883	IdentifierDeclStatement	unsigned int offsetA = sizeY + 2 * sizeUV + my * MBheightY * widthY ;	1189:12:36214:36281	6753701	3	True				
ANR	6753884	IdentifierDecl	offsetA = sizeY + 2 * sizeUV + my * MBheightY * widthY		6753701	0					
ANR	6753885	IdentifierDeclType	unsigned int		6753701	0					
ANR	6753886	Identifier	offsetA		6753701	1					
ANR	6753887	AssignmentExpression	offsetA = sizeY + 2 * sizeUV + my * MBheightY * widthY		6753701	2		=			
ANR	6753888	Identifier	offsetA		6753701	0					
ANR	6753889	AdditiveExpression	sizeY + 2 * sizeUV + my * MBheightY * widthY		6753701	1		+			
ANR	6753890	Identifier	sizeY		6753701	0					
ANR	6753891	AdditiveExpression	2 * sizeUV + my * MBheightY * widthY		6753701	1		+			
ANR	6753892	MultiplicativeExpression	2 * sizeUV		6753701	0		*			
ANR	6753893	PrimaryExpression	2		6753701	0					
ANR	6753894	Identifier	sizeUV		6753701	1					
ANR	6753895	MultiplicativeExpression	my * MBheightY * widthY		6753701	1		*			
ANR	6753896	Identifier	my		6753701	0					
ANR	6753897	MultiplicativeExpression	MBheightY * widthY		6753701	1		*			
ANR	6753898	Identifier	MBheightY		6753701	0					
ANR	6753899	Identifier	widthY		6753701	1					
ANR	6753900	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf ;	1191:12:36296:36328	6753701	4	True				
ANR	6753901	IdentifierDecl	* sp = ( uint8_t * ) con -> buf		6753701	0					
ANR	6753902	IdentifierDeclType	uint8_t *		6753701	0					
ANR	6753903	Identifier	sp		6753701	1					
ANR	6753904	AssignmentExpression	* sp = ( uint8_t * ) con -> buf		6753701	2		=			
ANR	6753905	Identifier	sp		6753701	0					
ANR	6753906	CastExpression	( uint8_t * ) con -> buf		6753701	1					
ANR	6753907	CastTarget	uint8_t *		6753701	0					
ANR	6753908	PtrMemberAccess	con -> buf		6753701	1					
ANR	6753909	Identifier	con		6753701	0					
ANR	6753910	Identifier	buf		6753701	1					
ANR	6753911	ExpressionStatement	"seek_file ( con , offsetY , SEEK_SET )"	1193:12:36343:36376	6753701	5	True				
ANR	6753912	CallExpression	"seek_file ( con , offsetY , SEEK_SET )"		6753701	0					
ANR	6753913	Callee	seek_file		6753701	0					
ANR	6753914	Identifier	seek_file		6753701	0					
ANR	6753915	ArgumentList	con		6753701	1					
ANR	6753916	Argument	con		6753701	0					
ANR	6753917	Identifier	con		6753701	0					
ANR	6753918	Argument	offsetY		6753701	1					
ANR	6753919	Identifier	offsetY		6753701	0					
ANR	6753920	Argument	SEEK_SET		6753701	2					
ANR	6753921	Identifier	SEEK_SET		6753701	0					
ANR	6753922	ExpressionStatement	"memset ( sp , 0 , widthY * MBheightY )"	1194:12:36390:36423	6753701	6	True				
ANR	6753923	CallExpression	"memset ( sp , 0 , widthY * MBheightY )"		6753701	0					
ANR	6753924	Callee	memset		6753701	0					
ANR	6753925	Identifier	memset		6753701	0					
ANR	6753926	ArgumentList	sp		6753701	1					
ANR	6753927	Argument	sp		6753701	0					
ANR	6753928	Identifier	sp		6753701	0					
ANR	6753929	Argument	0		6753701	1					
ANR	6753930	PrimaryExpression	0		6753701	0					
ANR	6753931	Argument	widthY * MBheightY		6753701	2					
ANR	6753932	MultiplicativeExpression	widthY * MBheightY		6753701	0		*			
ANR	6753933	Identifier	widthY		6753701	0					
ANR	6753934	Identifier	MBheightY		6753701	1					
ANR	6753935	ExpressionStatement	"read_data ( con , sp , 1 , widthY * MBheightY )"	1195:12:36437:36478	6753701	7	True				
ANR	6753936	CallExpression	"read_data ( con , sp , 1 , widthY * MBheightY )"		6753701	0					
ANR	6753937	Callee	read_data		6753701	0					
ANR	6753938	Identifier	read_data		6753701	0					
ANR	6753939	ArgumentList	con		6753701	1					
ANR	6753940	Argument	con		6753701	0					
ANR	6753941	Identifier	con		6753701	0					
ANR	6753942	Argument	sp		6753701	1					
ANR	6753943	Identifier	sp		6753701	0					
ANR	6753944	Argument	1		6753701	2					
ANR	6753945	PrimaryExpression	1		6753701	0					
ANR	6753946	Argument	widthY * MBheightY		6753701	3					
ANR	6753947	MultiplicativeExpression	widthY * MBheightY		6753701	0		*			
ANR	6753948	Identifier	widthY		6753701	0					
ANR	6753949	Identifier	MBheightY		6753701	1					
ANR	6753950	ExpressionStatement	sp += widthY * MBheightY	1196:12:36492:36516	6753701	8	True				
ANR	6753951	AssignmentExpression	sp += widthY * MBheightY		6753701	0		+=			
ANR	6753952	Identifier	sp		6753701	0					
ANR	6753953	MultiplicativeExpression	widthY * MBheightY		6753701	1		*			
ANR	6753954	Identifier	widthY		6753701	0					
ANR	6753955	Identifier	MBheightY		6753701	1					
ANR	6753956	ExpressionStatement	"seek_file ( con , offsetU , SEEK_SET )"	1198:12:36531:36564	6753701	9	True				
ANR	6753957	CallExpression	"seek_file ( con , offsetU , SEEK_SET )"		6753701	0					
ANR	6753958	Callee	seek_file		6753701	0					
ANR	6753959	Identifier	seek_file		6753701	0					
ANR	6753960	ArgumentList	con		6753701	1					
ANR	6753961	Argument	con		6753701	0					
ANR	6753962	Identifier	con		6753701	0					
ANR	6753963	Argument	offsetU		6753701	1					
ANR	6753964	Identifier	offsetU		6753701	0					
ANR	6753965	Argument	SEEK_SET		6753701	2					
ANR	6753966	Identifier	SEEK_SET		6753701	0					
ANR	6753967	ExpressionStatement	"memset ( sp , 0 , widthUV * MBheightUV )"	1199:12:36578:36613	6753701	10	True				
ANR	6753968	CallExpression	"memset ( sp , 0 , widthUV * MBheightUV )"		6753701	0					
ANR	6753969	Callee	memset		6753701	0					
ANR	6753970	Identifier	memset		6753701	0					
ANR	6753971	ArgumentList	sp		6753701	1					
ANR	6753972	Argument	sp		6753701	0					
ANR	6753973	Identifier	sp		6753701	0					
ANR	6753974	Argument	0		6753701	1					
ANR	6753975	PrimaryExpression	0		6753701	0					
ANR	6753976	Argument	widthUV * MBheightUV		6753701	2					
ANR	6753977	MultiplicativeExpression	widthUV * MBheightUV		6753701	0		*			
ANR	6753978	Identifier	widthUV		6753701	0					
ANR	6753979	Identifier	MBheightUV		6753701	1					
ANR	6753980	ExpressionStatement	"read_data ( con , sp , 1 , widthUV * MBheightUV )"	1200:12:36627:36670	6753701	11	True				
ANR	6753981	CallExpression	"read_data ( con , sp , 1 , widthUV * MBheightUV )"		6753701	0					
ANR	6753982	Callee	read_data		6753701	0					
ANR	6753983	Identifier	read_data		6753701	0					
ANR	6753984	ArgumentList	con		6753701	1					
ANR	6753985	Argument	con		6753701	0					
ANR	6753986	Identifier	con		6753701	0					
ANR	6753987	Argument	sp		6753701	1					
ANR	6753988	Identifier	sp		6753701	0					
ANR	6753989	Argument	1		6753701	2					
ANR	6753990	PrimaryExpression	1		6753701	0					
ANR	6753991	Argument	widthUV * MBheightUV		6753701	3					
ANR	6753992	MultiplicativeExpression	widthUV * MBheightUV		6753701	0		*			
ANR	6753993	Identifier	widthUV		6753701	0					
ANR	6753994	Identifier	MBheightUV		6753701	1					
ANR	6753995	ExpressionStatement	sp += widthUV * MBheightUV	1201:12:36684:36710	6753701	12	True				
ANR	6753996	AssignmentExpression	sp += widthUV * MBheightUV		6753701	0		+=			
ANR	6753997	Identifier	sp		6753701	0					
ANR	6753998	MultiplicativeExpression	widthUV * MBheightUV		6753701	1		*			
ANR	6753999	Identifier	widthUV		6753701	0					
ANR	6754000	Identifier	MBheightUV		6753701	1					
ANR	6754001	ExpressionStatement	"seek_file ( con , offsetV , SEEK_SET )"	1203:12:36725:36758	6753701	13	True				
ANR	6754002	CallExpression	"seek_file ( con , offsetV , SEEK_SET )"		6753701	0					
ANR	6754003	Callee	seek_file		6753701	0					
ANR	6754004	Identifier	seek_file		6753701	0					
ANR	6754005	ArgumentList	con		6753701	1					
ANR	6754006	Argument	con		6753701	0					
ANR	6754007	Identifier	con		6753701	0					
ANR	6754008	Argument	offsetV		6753701	1					
ANR	6754009	Identifier	offsetV		6753701	0					
ANR	6754010	Argument	SEEK_SET		6753701	2					
ANR	6754011	Identifier	SEEK_SET		6753701	0					
ANR	6754012	ExpressionStatement	"memset ( sp , 0 , widthUV * MBheightUV )"	1204:12:36772:36807	6753701	14	True				
ANR	6754013	CallExpression	"memset ( sp , 0 , widthUV * MBheightUV )"		6753701	0					
ANR	6754014	Callee	memset		6753701	0					
ANR	6754015	Identifier	memset		6753701	0					
ANR	6754016	ArgumentList	sp		6753701	1					
ANR	6754017	Argument	sp		6753701	0					
ANR	6754018	Identifier	sp		6753701	0					
ANR	6754019	Argument	0		6753701	1					
ANR	6754020	PrimaryExpression	0		6753701	0					
ANR	6754021	Argument	widthUV * MBheightUV		6753701	2					
ANR	6754022	MultiplicativeExpression	widthUV * MBheightUV		6753701	0		*			
ANR	6754023	Identifier	widthUV		6753701	0					
ANR	6754024	Identifier	MBheightUV		6753701	1					
ANR	6754025	ExpressionStatement	"read_data ( con , sp , 1 , widthUV * MBheightUV )"	1205:12:36821:36864	6753701	15	True				
ANR	6754026	CallExpression	"read_data ( con , sp , 1 , widthUV * MBheightUV )"		6753701	0					
ANR	6754027	Callee	read_data		6753701	0					
ANR	6754028	Identifier	read_data		6753701	0					
ANR	6754029	ArgumentList	con		6753701	1					
ANR	6754030	Argument	con		6753701	0					
ANR	6754031	Identifier	con		6753701	0					
ANR	6754032	Argument	sp		6753701	1					
ANR	6754033	Identifier	sp		6753701	0					
ANR	6754034	Argument	1		6753701	2					
ANR	6754035	PrimaryExpression	1		6753701	0					
ANR	6754036	Argument	widthUV * MBheightUV		6753701	3					
ANR	6754037	MultiplicativeExpression	widthUV * MBheightUV		6753701	0		*			
ANR	6754038	Identifier	widthUV		6753701	0					
ANR	6754039	Identifier	MBheightUV		6753701	1					
ANR	6754040	ExpressionStatement	sp += widthUV * MBheightUV	1206:12:36878:36904	6753701	16	True				
ANR	6754041	AssignmentExpression	sp += widthUV * MBheightUV		6753701	0		+=			
ANR	6754042	Identifier	sp		6753701	0					
ANR	6754043	MultiplicativeExpression	widthUV * MBheightUV		6753701	1		*			
ANR	6754044	Identifier	widthUV		6753701	0					
ANR	6754045	Identifier	MBheightUV		6753701	1					
ANR	6754046	IfStatement	if ( con -> ncomp == 4 )		6753701	17					
ANR	6754047	Condition	con -> ncomp == 4	1208:16:36923:36937	6753701	0	True				
ANR	6754048	EqualityExpression	con -> ncomp == 4		6753701	0		==			
ANR	6754049	PtrMemberAccess	con -> ncomp		6753701	0					
ANR	6754050	Identifier	con		6753701	0					
ANR	6754051	Identifier	ncomp		6753701	1					
ANR	6754052	PrimaryExpression	4		6753701	1					
ANR	6754053	CompoundStatement		38:33:1593:1593	6753701	1					
ANR	6754054	ExpressionStatement	"seek_file ( con , offsetA , SEEK_SET )"	1209:16:36958:36991	6753701	0	True				
ANR	6754055	CallExpression	"seek_file ( con , offsetA , SEEK_SET )"		6753701	0					
ANR	6754056	Callee	seek_file		6753701	0					
ANR	6754057	Identifier	seek_file		6753701	0					
ANR	6754058	ArgumentList	con		6753701	1					
ANR	6754059	Argument	con		6753701	0					
ANR	6754060	Identifier	con		6753701	0					
ANR	6754061	Argument	offsetA		6753701	1					
ANR	6754062	Identifier	offsetA		6753701	0					
ANR	6754063	Argument	SEEK_SET		6753701	2					
ANR	6754064	Identifier	SEEK_SET		6753701	0					
ANR	6754065	ExpressionStatement	"memset ( sp , 0 , widthY * MBheightY )"	1210:16:37009:37042	6753701	1	True				
ANR	6754066	CallExpression	"memset ( sp , 0 , widthY * MBheightY )"		6753701	0					
ANR	6754067	Callee	memset		6753701	0					
ANR	6754068	Identifier	memset		6753701	0					
ANR	6754069	ArgumentList	sp		6753701	1					
ANR	6754070	Argument	sp		6753701	0					
ANR	6754071	Identifier	sp		6753701	0					
ANR	6754072	Argument	0		6753701	1					
ANR	6754073	PrimaryExpression	0		6753701	0					
ANR	6754074	Argument	widthY * MBheightY		6753701	2					
ANR	6754075	MultiplicativeExpression	widthY * MBheightY		6753701	0		*			
ANR	6754076	Identifier	widthY		6753701	0					
ANR	6754077	Identifier	MBheightY		6753701	1					
ANR	6754078	ExpressionStatement	"read_data ( con , sp , 1 , widthY * MBheightY )"	1211:16:37060:37101	6753701	2	True				
ANR	6754079	CallExpression	"read_data ( con , sp , 1 , widthY * MBheightY )"		6753701	0					
ANR	6754080	Callee	read_data		6753701	0					
ANR	6754081	Identifier	read_data		6753701	0					
ANR	6754082	ArgumentList	con		6753701	1					
ANR	6754083	Argument	con		6753701	0					
ANR	6754084	Identifier	con		6753701	0					
ANR	6754085	Argument	sp		6753701	1					
ANR	6754086	Identifier	sp		6753701	0					
ANR	6754087	Argument	1		6753701	2					
ANR	6754088	PrimaryExpression	1		6753701	0					
ANR	6754089	Argument	widthY * MBheightY		6753701	3					
ANR	6754090	MultiplicativeExpression	widthY * MBheightY		6753701	0		*			
ANR	6754091	Identifier	widthY		6753701	0					
ANR	6754092	Identifier	MBheightY		6753701	1					
ANR	6754093	ExpressionStatement	sp += widthY * MBheightY	1212:16:37119:37143	6753701	3	True				
ANR	6754094	AssignmentExpression	sp += widthY * MBheightY		6753701	0		+=			
ANR	6754095	Identifier	sp		6753701	0					
ANR	6754096	MultiplicativeExpression	widthY * MBheightY		6753701	1		*			
ANR	6754097	Identifier	widthY		6753701	0					
ANR	6754098	Identifier	MBheightY		6753701	1					
ANR	6754099	ElseStatement	else		6753701	0					
ANR	6754100	IfStatement	if ( con -> bpi == 16 )		6753701	0					
ANR	6754101	Condition	con -> bpi == 16	1215:17:37186:37199	6753701	0	True				
ANR	6754102	EqualityExpression	con -> bpi == 16		6753701	0		==			
ANR	6754103	PtrMemberAccess	con -> bpi		6753701	0					
ANR	6754104	Identifier	con		6753701	0					
ANR	6754105	Identifier	bpi		6753701	1					
ANR	6754106	PrimaryExpression	16		6753701	1					
ANR	6754107	CompoundStatement		51:12:2184:2218	6753701	1					
ANR	6754108	IdentifierDeclStatement	unsigned int offsetY = 2 * ( my * MBheightY * widthY ) ;	1216:12:37216:37268	6753701	0	True				
ANR	6754109	IdentifierDecl	offsetY = 2 * ( my * MBheightY * widthY )		6753701	0					
ANR	6754110	IdentifierDeclType	unsigned int		6753701	0					
ANR	6754111	Identifier	offsetY		6753701	1					
ANR	6754112	AssignmentExpression	offsetY = 2 * ( my * MBheightY * widthY )		6753701	2		=			
ANR	6754113	Identifier	offsetY		6753701	0					
ANR	6754114	MultiplicativeExpression	2 * ( my * MBheightY * widthY )		6753701	1		*			
ANR	6754115	PrimaryExpression	2		6753701	0					
ANR	6754116	MultiplicativeExpression	my * MBheightY * widthY		6753701	1		*			
ANR	6754117	Identifier	my		6753701	0					
ANR	6754118	MultiplicativeExpression	MBheightY * widthY		6753701	1		*			
ANR	6754119	Identifier	MBheightY		6753701	0					
ANR	6754120	Identifier	widthY		6753701	1					
ANR	6754121	IdentifierDeclStatement	unsigned int offsetU = 2 * ( sizeY + my * MBheightUV * widthUV ) ;	1217:12:37282:37344	6753701	1	True				
ANR	6754122	IdentifierDecl	offsetU = 2 * ( sizeY + my * MBheightUV * widthUV )		6753701	0					
ANR	6754123	IdentifierDeclType	unsigned int		6753701	0					
ANR	6754124	Identifier	offsetU		6753701	1					
ANR	6754125	AssignmentExpression	offsetU = 2 * ( sizeY + my * MBheightUV * widthUV )		6753701	2		=			
ANR	6754126	Identifier	offsetU		6753701	0					
ANR	6754127	MultiplicativeExpression	2 * ( sizeY + my * MBheightUV * widthUV )		6753701	1		*			
ANR	6754128	PrimaryExpression	2		6753701	0					
ANR	6754129	AdditiveExpression	sizeY + my * MBheightUV * widthUV		6753701	1		+			
ANR	6754130	Identifier	sizeY		6753701	0					
ANR	6754131	MultiplicativeExpression	my * MBheightUV * widthUV		6753701	1		*			
ANR	6754132	Identifier	my		6753701	0					
ANR	6754133	MultiplicativeExpression	MBheightUV * widthUV		6753701	1		*			
ANR	6754134	Identifier	MBheightUV		6753701	0					
ANR	6754135	Identifier	widthUV		6753701	1					
ANR	6754136	IdentifierDeclStatement	unsigned int offsetV = 2 * ( sizeY + sizeUV + my * MBheightUV * widthUV ) ;	1218:12:37358:37429	6753701	2	True				
ANR	6754137	IdentifierDecl	offsetV = 2 * ( sizeY + sizeUV + my * MBheightUV * widthUV )		6753701	0					
ANR	6754138	IdentifierDeclType	unsigned int		6753701	0					
ANR	6754139	Identifier	offsetV		6753701	1					
ANR	6754140	AssignmentExpression	offsetV = 2 * ( sizeY + sizeUV + my * MBheightUV * widthUV )		6753701	2		=			
ANR	6754141	Identifier	offsetV		6753701	0					
ANR	6754142	MultiplicativeExpression	2 * ( sizeY + sizeUV + my * MBheightUV * widthUV )		6753701	1		*			
ANR	6754143	PrimaryExpression	2		6753701	0					
ANR	6754144	AdditiveExpression	sizeY + sizeUV + my * MBheightUV * widthUV		6753701	1		+			
ANR	6754145	Identifier	sizeY		6753701	0					
ANR	6754146	AdditiveExpression	sizeUV + my * MBheightUV * widthUV		6753701	1		+			
ANR	6754147	Identifier	sizeUV		6753701	0					
ANR	6754148	MultiplicativeExpression	my * MBheightUV * widthUV		6753701	1		*			
ANR	6754149	Identifier	my		6753701	0					
ANR	6754150	MultiplicativeExpression	MBheightUV * widthUV		6753701	1		*			
ANR	6754151	Identifier	MBheightUV		6753701	0					
ANR	6754152	Identifier	widthUV		6753701	1					
ANR	6754153	IdentifierDeclStatement	unsigned int offsetA = 2 * ( sizeY + 2 * sizeUV + my * MBheightY * widthY ) ;	1219:12:37443:37516	6753701	3	True				
ANR	6754154	IdentifierDecl	offsetA = 2 * ( sizeY + 2 * sizeUV + my * MBheightY * widthY )		6753701	0					
ANR	6754155	IdentifierDeclType	unsigned int		6753701	0					
ANR	6754156	Identifier	offsetA		6753701	1					
ANR	6754157	AssignmentExpression	offsetA = 2 * ( sizeY + 2 * sizeUV + my * MBheightY * widthY )		6753701	2		=			
ANR	6754158	Identifier	offsetA		6753701	0					
ANR	6754159	MultiplicativeExpression	2 * ( sizeY + 2 * sizeUV + my * MBheightY * widthY )		6753701	1		*			
ANR	6754160	PrimaryExpression	2		6753701	0					
ANR	6754161	AdditiveExpression	sizeY + 2 * sizeUV + my * MBheightY * widthY		6753701	1		+			
ANR	6754162	Identifier	sizeY		6753701	0					
ANR	6754163	AdditiveExpression	2 * sizeUV + my * MBheightY * widthY		6753701	1		+			
ANR	6754164	MultiplicativeExpression	2 * sizeUV		6753701	0		*			
ANR	6754165	PrimaryExpression	2		6753701	0					
ANR	6754166	Identifier	sizeUV		6753701	1					
ANR	6754167	MultiplicativeExpression	my * MBheightY * widthY		6753701	1		*			
ANR	6754168	Identifier	my		6753701	0					
ANR	6754169	MultiplicativeExpression	MBheightY * widthY		6753701	1		*			
ANR	6754170	Identifier	MBheightY		6753701	0					
ANR	6754171	Identifier	widthY		6753701	1					
ANR	6754172	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf ;	1221:12:37531:37565	6753701	4	True				
ANR	6754173	IdentifierDecl	* sp = ( uint16_t * ) con -> buf		6753701	0					
ANR	6754174	IdentifierDeclType	uint16_t *		6753701	0					
ANR	6754175	Identifier	sp		6753701	1					
ANR	6754176	AssignmentExpression	* sp = ( uint16_t * ) con -> buf		6753701	2		=			
ANR	6754177	Identifier	sp		6753701	0					
ANR	6754178	CastExpression	( uint16_t * ) con -> buf		6753701	1					
ANR	6754179	CastTarget	uint16_t *		6753701	0					
ANR	6754180	PtrMemberAccess	con -> buf		6753701	1					
ANR	6754181	Identifier	con		6753701	0					
ANR	6754182	Identifier	buf		6753701	1					
ANR	6754183	ExpressionStatement	"seek_file ( con , offsetY , SEEK_SET )"	1223:12:37580:37613	6753701	5	True				
ANR	6754184	CallExpression	"seek_file ( con , offsetY , SEEK_SET )"		6753701	0					
ANR	6754185	Callee	seek_file		6753701	0					
ANR	6754186	Identifier	seek_file		6753701	0					
ANR	6754187	ArgumentList	con		6753701	1					
ANR	6754188	Argument	con		6753701	0					
ANR	6754189	Identifier	con		6753701	0					
ANR	6754190	Argument	offsetY		6753701	1					
ANR	6754191	Identifier	offsetY		6753701	0					
ANR	6754192	Argument	SEEK_SET		6753701	2					
ANR	6754193	Identifier	SEEK_SET		6753701	0					
ANR	6754194	ExpressionStatement	"memset ( sp , 0 , 2 * widthY * MBheightY )"	1224:12:37627:37664	6753701	6	True				
ANR	6754195	CallExpression	"memset ( sp , 0 , 2 * widthY * MBheightY )"		6753701	0					
ANR	6754196	Callee	memset		6753701	0					
ANR	6754197	Identifier	memset		6753701	0					
ANR	6754198	ArgumentList	sp		6753701	1					
ANR	6754199	Argument	sp		6753701	0					
ANR	6754200	Identifier	sp		6753701	0					
ANR	6754201	Argument	0		6753701	1					
ANR	6754202	PrimaryExpression	0		6753701	0					
ANR	6754203	Argument	2 * widthY * MBheightY		6753701	2					
ANR	6754204	MultiplicativeExpression	2 * widthY * MBheightY		6753701	0		*			
ANR	6754205	PrimaryExpression	2		6753701	0					
ANR	6754206	MultiplicativeExpression	widthY * MBheightY		6753701	1		*			
ANR	6754207	Identifier	widthY		6753701	0					
ANR	6754208	Identifier	MBheightY		6753701	1					
ANR	6754209	ExpressionStatement	"read_data ( con , sp , 2 , widthY * MBheightY )"	1225:12:37678:37719	6753701	7	True				
ANR	6754210	CallExpression	"read_data ( con , sp , 2 , widthY * MBheightY )"		6753701	0					
ANR	6754211	Callee	read_data		6753701	0					
ANR	6754212	Identifier	read_data		6753701	0					
ANR	6754213	ArgumentList	con		6753701	1					
ANR	6754214	Argument	con		6753701	0					
ANR	6754215	Identifier	con		6753701	0					
ANR	6754216	Argument	sp		6753701	1					
ANR	6754217	Identifier	sp		6753701	0					
ANR	6754218	Argument	2		6753701	2					
ANR	6754219	PrimaryExpression	2		6753701	0					
ANR	6754220	Argument	widthY * MBheightY		6753701	3					
ANR	6754221	MultiplicativeExpression	widthY * MBheightY		6753701	0		*			
ANR	6754222	Identifier	widthY		6753701	0					
ANR	6754223	Identifier	MBheightY		6753701	1					
ANR	6754224	ExpressionStatement	sp += widthY * MBheightY	1226:12:37733:37757	6753701	8	True				
ANR	6754225	AssignmentExpression	sp += widthY * MBheightY		6753701	0		+=			
ANR	6754226	Identifier	sp		6753701	0					
ANR	6754227	MultiplicativeExpression	widthY * MBheightY		6753701	1		*			
ANR	6754228	Identifier	widthY		6753701	0					
ANR	6754229	Identifier	MBheightY		6753701	1					
ANR	6754230	ExpressionStatement	"seek_file ( con , offsetU , SEEK_SET )"	1228:12:37772:37805	6753701	9	True				
ANR	6754231	CallExpression	"seek_file ( con , offsetU , SEEK_SET )"		6753701	0					
ANR	6754232	Callee	seek_file		6753701	0					
ANR	6754233	Identifier	seek_file		6753701	0					
ANR	6754234	ArgumentList	con		6753701	1					
ANR	6754235	Argument	con		6753701	0					
ANR	6754236	Identifier	con		6753701	0					
ANR	6754237	Argument	offsetU		6753701	1					
ANR	6754238	Identifier	offsetU		6753701	0					
ANR	6754239	Argument	SEEK_SET		6753701	2					
ANR	6754240	Identifier	SEEK_SET		6753701	0					
ANR	6754241	ExpressionStatement	"memset ( sp , 0 , 2 * widthUV * MBheightUV )"	1229:12:37819:37858	6753701	10	True				
ANR	6754242	CallExpression	"memset ( sp , 0 , 2 * widthUV * MBheightUV )"		6753701	0					
ANR	6754243	Callee	memset		6753701	0					
ANR	6754244	Identifier	memset		6753701	0					
ANR	6754245	ArgumentList	sp		6753701	1					
ANR	6754246	Argument	sp		6753701	0					
ANR	6754247	Identifier	sp		6753701	0					
ANR	6754248	Argument	0		6753701	1					
ANR	6754249	PrimaryExpression	0		6753701	0					
ANR	6754250	Argument	2 * widthUV * MBheightUV		6753701	2					
ANR	6754251	MultiplicativeExpression	2 * widthUV * MBheightUV		6753701	0		*			
ANR	6754252	PrimaryExpression	2		6753701	0					
ANR	6754253	MultiplicativeExpression	widthUV * MBheightUV		6753701	1		*			
ANR	6754254	Identifier	widthUV		6753701	0					
ANR	6754255	Identifier	MBheightUV		6753701	1					
ANR	6754256	ExpressionStatement	"read_data ( con , sp , 2 , widthUV * MBheightUV )"	1230:12:37872:37915	6753701	11	True				
ANR	6754257	CallExpression	"read_data ( con , sp , 2 , widthUV * MBheightUV )"		6753701	0					
ANR	6754258	Callee	read_data		6753701	0					
ANR	6754259	Identifier	read_data		6753701	0					
ANR	6754260	ArgumentList	con		6753701	1					
ANR	6754261	Argument	con		6753701	0					
ANR	6754262	Identifier	con		6753701	0					
ANR	6754263	Argument	sp		6753701	1					
ANR	6754264	Identifier	sp		6753701	0					
ANR	6754265	Argument	2		6753701	2					
ANR	6754266	PrimaryExpression	2		6753701	0					
ANR	6754267	Argument	widthUV * MBheightUV		6753701	3					
ANR	6754268	MultiplicativeExpression	widthUV * MBheightUV		6753701	0		*			
ANR	6754269	Identifier	widthUV		6753701	0					
ANR	6754270	Identifier	MBheightUV		6753701	1					
ANR	6754271	ExpressionStatement	sp += widthUV * MBheightUV	1231:12:37929:37955	6753701	12	True				
ANR	6754272	AssignmentExpression	sp += widthUV * MBheightUV		6753701	0		+=			
ANR	6754273	Identifier	sp		6753701	0					
ANR	6754274	MultiplicativeExpression	widthUV * MBheightUV		6753701	1		*			
ANR	6754275	Identifier	widthUV		6753701	0					
ANR	6754276	Identifier	MBheightUV		6753701	1					
ANR	6754277	ExpressionStatement	"seek_file ( con , offsetV , SEEK_SET )"	1233:12:37970:38003	6753701	13	True				
ANR	6754278	CallExpression	"seek_file ( con , offsetV , SEEK_SET )"		6753701	0					
ANR	6754279	Callee	seek_file		6753701	0					
ANR	6754280	Identifier	seek_file		6753701	0					
ANR	6754281	ArgumentList	con		6753701	1					
ANR	6754282	Argument	con		6753701	0					
ANR	6754283	Identifier	con		6753701	0					
ANR	6754284	Argument	offsetV		6753701	1					
ANR	6754285	Identifier	offsetV		6753701	0					
ANR	6754286	Argument	SEEK_SET		6753701	2					
ANR	6754287	Identifier	SEEK_SET		6753701	0					
ANR	6754288	ExpressionStatement	"memset ( sp , 0 , 2 * widthUV * MBheightUV )"	1234:12:38017:38056	6753701	14	True				
ANR	6754289	CallExpression	"memset ( sp , 0 , 2 * widthUV * MBheightUV )"		6753701	0					
ANR	6754290	Callee	memset		6753701	0					
ANR	6754291	Identifier	memset		6753701	0					
ANR	6754292	ArgumentList	sp		6753701	1					
ANR	6754293	Argument	sp		6753701	0					
ANR	6754294	Identifier	sp		6753701	0					
ANR	6754295	Argument	0		6753701	1					
ANR	6754296	PrimaryExpression	0		6753701	0					
ANR	6754297	Argument	2 * widthUV * MBheightUV		6753701	2					
ANR	6754298	MultiplicativeExpression	2 * widthUV * MBheightUV		6753701	0		*			
ANR	6754299	PrimaryExpression	2		6753701	0					
ANR	6754300	MultiplicativeExpression	widthUV * MBheightUV		6753701	1		*			
ANR	6754301	Identifier	widthUV		6753701	0					
ANR	6754302	Identifier	MBheightUV		6753701	1					
ANR	6754303	ExpressionStatement	"read_data ( con , sp , 2 , widthUV * MBheightUV )"	1235:12:38070:38113	6753701	15	True				
ANR	6754304	CallExpression	"read_data ( con , sp , 2 , widthUV * MBheightUV )"		6753701	0					
ANR	6754305	Callee	read_data		6753701	0					
ANR	6754306	Identifier	read_data		6753701	0					
ANR	6754307	ArgumentList	con		6753701	1					
ANR	6754308	Argument	con		6753701	0					
ANR	6754309	Identifier	con		6753701	0					
ANR	6754310	Argument	sp		6753701	1					
ANR	6754311	Identifier	sp		6753701	0					
ANR	6754312	Argument	2		6753701	2					
ANR	6754313	PrimaryExpression	2		6753701	0					
ANR	6754314	Argument	widthUV * MBheightUV		6753701	3					
ANR	6754315	MultiplicativeExpression	widthUV * MBheightUV		6753701	0		*			
ANR	6754316	Identifier	widthUV		6753701	0					
ANR	6754317	Identifier	MBheightUV		6753701	1					
ANR	6754318	ExpressionStatement	sp += widthUV * MBheightUV	1236:12:38127:38153	6753701	16	True				
ANR	6754319	AssignmentExpression	sp += widthUV * MBheightUV		6753701	0		+=			
ANR	6754320	Identifier	sp		6753701	0					
ANR	6754321	MultiplicativeExpression	widthUV * MBheightUV		6753701	1		*			
ANR	6754322	Identifier	widthUV		6753701	0					
ANR	6754323	Identifier	MBheightUV		6753701	1					
ANR	6754324	IfStatement	if ( con -> ncomp == 4 )		6753701	17					
ANR	6754325	Condition	con -> ncomp == 4	1238:16:38172:38186	6753701	0	True				
ANR	6754326	EqualityExpression	con -> ncomp == 4		6753701	0		==			
ANR	6754327	PtrMemberAccess	con -> ncomp		6753701	0					
ANR	6754328	Identifier	con		6753701	0					
ANR	6754329	Identifier	ncomp		6753701	1					
ANR	6754330	PrimaryExpression	4		6753701	1					
ANR	6754331	CompoundStatement		68:33:2842:2842	6753701	1					
ANR	6754332	ExpressionStatement	"seek_file ( con , offsetA , SEEK_SET )"	1239:16:38207:38240	6753701	0	True				
ANR	6754333	CallExpression	"seek_file ( con , offsetA , SEEK_SET )"		6753701	0					
ANR	6754334	Callee	seek_file		6753701	0					
ANR	6754335	Identifier	seek_file		6753701	0					
ANR	6754336	ArgumentList	con		6753701	1					
ANR	6754337	Argument	con		6753701	0					
ANR	6754338	Identifier	con		6753701	0					
ANR	6754339	Argument	offsetA		6753701	1					
ANR	6754340	Identifier	offsetA		6753701	0					
ANR	6754341	Argument	SEEK_SET		6753701	2					
ANR	6754342	Identifier	SEEK_SET		6753701	0					
ANR	6754343	ExpressionStatement	"memset ( sp , 0 , 2 * widthY * MBheightY )"	1240:16:38258:38295	6753701	1	True				
ANR	6754344	CallExpression	"memset ( sp , 0 , 2 * widthY * MBheightY )"		6753701	0					
ANR	6754345	Callee	memset		6753701	0					
ANR	6754346	Identifier	memset		6753701	0					
ANR	6754347	ArgumentList	sp		6753701	1					
ANR	6754348	Argument	sp		6753701	0					
ANR	6754349	Identifier	sp		6753701	0					
ANR	6754350	Argument	0		6753701	1					
ANR	6754351	PrimaryExpression	0		6753701	0					
ANR	6754352	Argument	2 * widthY * MBheightY		6753701	2					
ANR	6754353	MultiplicativeExpression	2 * widthY * MBheightY		6753701	0		*			
ANR	6754354	PrimaryExpression	2		6753701	0					
ANR	6754355	MultiplicativeExpression	widthY * MBheightY		6753701	1		*			
ANR	6754356	Identifier	widthY		6753701	0					
ANR	6754357	Identifier	MBheightY		6753701	1					
ANR	6754358	ExpressionStatement	"read_data ( con , sp , 2 , widthY * MBheightY )"	1241:16:38313:38354	6753701	2	True				
ANR	6754359	CallExpression	"read_data ( con , sp , 2 , widthY * MBheightY )"		6753701	0					
ANR	6754360	Callee	read_data		6753701	0					
ANR	6754361	Identifier	read_data		6753701	0					
ANR	6754362	ArgumentList	con		6753701	1					
ANR	6754363	Argument	con		6753701	0					
ANR	6754364	Identifier	con		6753701	0					
ANR	6754365	Argument	sp		6753701	1					
ANR	6754366	Identifier	sp		6753701	0					
ANR	6754367	Argument	2		6753701	2					
ANR	6754368	PrimaryExpression	2		6753701	0					
ANR	6754369	Argument	widthY * MBheightY		6753701	3					
ANR	6754370	MultiplicativeExpression	widthY * MBheightY		6753701	0		*			
ANR	6754371	Identifier	widthY		6753701	0					
ANR	6754372	Identifier	MBheightY		6753701	1					
ANR	6754373	ExpressionStatement	sp += widthY * MBheightY	1242:16:38372:38396	6753701	3	True				
ANR	6754374	AssignmentExpression	sp += widthY * MBheightY		6753701	0		+=			
ANR	6754375	Identifier	sp		6753701	0					
ANR	6754376	MultiplicativeExpression	widthY * MBheightY		6753701	1		*			
ANR	6754377	Identifier	widthY		6753701	0					
ANR	6754378	Identifier	MBheightY		6753701	1					
ANR	6754379	ExpressionStatement	con -> my = my	1245:8:38430:38442	6753701	1	True				
ANR	6754380	AssignmentExpression	con -> my = my		6753701	0		=			
ANR	6754381	PtrMemberAccess	con -> my		6753701	0					
ANR	6754382	Identifier	con		6753701	0					
ANR	6754383	Identifier	my		6753701	1					
ANR	6754384	Identifier	my		6753701	1					
ANR	6754385	IdentifierDeclStatement	"int idx1 , idx2 ;"	1248:4:38455:38469	6753701	10	True				
ANR	6754386	IdentifierDecl	idx1		6753701	0					
ANR	6754387	IdentifierDeclType	int		6753701	0					
ANR	6754388	Identifier	idx1		6753701	1					
ANR	6754389	IdentifierDecl	idx2		6753701	1					
ANR	6754390	IdentifierDeclType	int		6753701	0					
ANR	6754391	Identifier	idx2		6753701	1					
ANR	6754392	IdentifierDeclStatement	int xDiv = 16 ;	1249:4:38475:38488	6753701	11	True				
ANR	6754393	IdentifierDecl	xDiv = 16		6753701	0					
ANR	6754394	IdentifierDeclType	int		6753701	0					
ANR	6754395	Identifier	xDiv		6753701	1					
ANR	6754396	AssignmentExpression	xDiv = 16		6753701	2		=			
ANR	6754397	Identifier	xDiv		6753701	0					
ANR	6754398	PrimaryExpression	16		6753701	1					
ANR	6754399	IdentifierDeclStatement	int yDiv = 16 ;	1250:4:38494:38507	6753701	12	True				
ANR	6754400	IdentifierDecl	yDiv = 16		6753701	0					
ANR	6754401	IdentifierDeclType	int		6753701	0					
ANR	6754402	Identifier	yDiv		6753701	1					
ANR	6754403	AssignmentExpression	yDiv = 16		6753701	2		=			
ANR	6754404	Identifier	yDiv		6753701	0					
ANR	6754405	PrimaryExpression	16		6753701	1					
ANR	6754406	IfStatement	if ( con -> bpi == 8 )		6753701	13					
ANR	6754407	Condition	con -> bpi == 8	1252:8:38518:38530	6753701	0	True				
ANR	6754408	EqualityExpression	con -> bpi == 8		6753701	0		==			
ANR	6754409	PtrMemberAccess	con -> bpi		6753701	0					
ANR	6754410	Identifier	con		6753701	0					
ANR	6754411	Identifier	bpi		6753701	1					
ANR	6754412	PrimaryExpression	8		6753701	1					
ANR	6754413	CompoundStatement		84:8:3212:3254	6753701	1					
ANR	6754414	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf + xDiv * mx ;	1254:8:38559:38601	6753701	0	True				
ANR	6754415	IdentifierDecl	* sp = ( uint8_t * ) con -> buf + xDiv * mx		6753701	0					
ANR	6754416	IdentifierDeclType	uint8_t *		6753701	0					
ANR	6754417	Identifier	sp		6753701	1					
ANR	6754418	AssignmentExpression	* sp = ( uint8_t * ) con -> buf + xDiv * mx		6753701	2		=			
ANR	6754419	Identifier	sp		6753701	0					
ANR	6754420	AdditiveExpression	( uint8_t * ) con -> buf + xDiv * mx		6753701	1		+			
ANR	6754421	CastExpression	( uint8_t * ) con -> buf		6753701	0					
ANR	6754422	CastTarget	uint8_t *		6753701	0					
ANR	6754423	PtrMemberAccess	con -> buf		6753701	1					
ANR	6754424	Identifier	con		6753701	0					
ANR	6754425	Identifier	buf		6753701	1					
ANR	6754426	MultiplicativeExpression	xDiv * mx		6753701	1		*			
ANR	6754427	Identifier	xDiv		6753701	0					
ANR	6754428	Identifier	mx		6753701	1					
ANR	6754429	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6753701	1					
ANR	6754430	ForInit	idx1 = 0 ;	1255:13:38616:38624	6753701	0	True				
ANR	6754431	AssignmentExpression	idx1 = 0		6753701	0		=			
ANR	6754432	Identifier	idx1		6753701	0					
ANR	6754433	PrimaryExpression	0		6753701	1					
ANR	6754434	Condition	idx1 < yDiv	1255:23:38626:38636	6753701	1	True				
ANR	6754435	RelationalExpression	idx1 < yDiv		6753701	0		<			
ANR	6754436	Identifier	idx1		6753701	0					
ANR	6754437	Identifier	yDiv		6753701	1					
ANR	6754438	AssignmentExpression	idx1 += 1	1255:36:38639:38647	6753701	2	True	+=			
ANR	6754439	Identifier	idx1		6753701	0					
ANR	6754440	PrimaryExpression	1		6753701	1					
ANR	6754441	CompoundStatement		85:47:3303:3303	6753701	3					
ANR	6754442	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6753701	0					
ANR	6754443	ForInit	idx2 = 0 ;	1256:17:38669:38677	6753701	0	True				
ANR	6754444	AssignmentExpression	idx2 = 0		6753701	0		=			
ANR	6754445	Identifier	idx2		6753701	0					
ANR	6754446	PrimaryExpression	0		6753701	1					
ANR	6754447	Condition	idx2 < xDiv	1256:27:38679:38689	6753701	1	True				
ANR	6754448	RelationalExpression	idx2 < xDiv		6753701	0		<			
ANR	6754449	Identifier	idx2		6753701	0					
ANR	6754450	Identifier	xDiv		6753701	1					
ANR	6754451	AssignmentExpression	idx2 += 1	1256:40:38692:38700	6753701	2	True	+=			
ANR	6754452	Identifier	idx2		6753701	0					
ANR	6754453	PrimaryExpression	1		6753701	1					
ANR	6754454	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]	1257:16:38720:38776	6753701	3	True				
ANR	6754455	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]		6753701	0		=			
ANR	6754456	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ]		6753701	0					
ANR	6754457	Identifier	data		6753701	0					
ANR	6754458	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 0		6753701	1		+			
ANR	6754459	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6753701	0		*			
ANR	6754460	AdditiveExpression	idx1 * xDiv + idx2		6753701	0		+			
ANR	6754461	MultiplicativeExpression	idx1 * xDiv		6753701	0		*			
ANR	6754462	Identifier	idx1		6753701	0					
ANR	6754463	Identifier	xDiv		6753701	1					
ANR	6754464	Identifier	idx2		6753701	1					
ANR	6754465	Identifier	num_channels		6753701	1					
ANR	6754466	PrimaryExpression	0		6753701	1					
ANR	6754467	ArrayIndexing	sp [ idx2 ]		6753701	1					
ANR	6754468	Identifier	sp		6753701	0					
ANR	6754469	Identifier	idx2		6753701	1					
ANR	6754470	ExpressionStatement	sp += widthY	1258:12:38790:38802	6753701	1	True				
ANR	6754471	AssignmentExpression	sp += widthY		6753701	0		+=			
ANR	6754472	Identifier	sp		6753701	0					
ANR	6754473	Identifier	widthY		6753701	1					
ANR	6754474	IfStatement	if ( con -> ycc_format == 2 )		6753701	2					
ANR	6754475	Condition	con -> ycc_format == 2	1261:12:38827:38846	6753701	0	True				
ANR	6754476	EqualityExpression	con -> ycc_format == 2		6753701	0		==			
ANR	6754477	PtrMemberAccess	con -> ycc_format		6753701	0					
ANR	6754478	Identifier	con		6753701	0					
ANR	6754479	Identifier	ycc_format		6753701	1					
ANR	6754480	PrimaryExpression	2		6753701	1					
ANR	6754481	ExpressionStatement	xDiv = 8	1262:12:38861:38869	6753701	1	True				
ANR	6754482	AssignmentExpression	xDiv = 8		6753701	0		=			
ANR	6754483	Identifier	xDiv		6753701	0					
ANR	6754484	PrimaryExpression	8		6753701	1					
ANR	6754485	IfStatement	if ( con -> ycc_format == 1 )		6753701	3					
ANR	6754486	Condition	con -> ycc_format == 1	1264:12:38884:38903	6753701	0	True				
ANR	6754487	EqualityExpression	con -> ycc_format == 1		6753701	0		==			
ANR	6754488	PtrMemberAccess	con -> ycc_format		6753701	0					
ANR	6754489	Identifier	con		6753701	0					
ANR	6754490	Identifier	ycc_format		6753701	1					
ANR	6754491	PrimaryExpression	1		6753701	1					
ANR	6754492	ExpressionStatement	xDiv = yDiv = 8	1265:12:38918:38933	6753701	1	True				
ANR	6754493	AssignmentExpression	xDiv = yDiv = 8		6753701	0		=			
ANR	6754494	Identifier	xDiv		6753701	0					
ANR	6754495	AssignmentExpression	yDiv = 8		6753701	1		=			
ANR	6754496	Identifier	yDiv		6753701	0					
ANR	6754497	PrimaryExpression	8		6753701	1					
ANR	6754498	ExpressionStatement	sp = ( uint8_t * ) con -> buf + widthY * MBheightY + xDiv * mx	1268:8:38960:39014	6753701	4	True				
ANR	6754499	AssignmentExpression	sp = ( uint8_t * ) con -> buf + widthY * MBheightY + xDiv * mx		6753701	0		=			
ANR	6754500	Identifier	sp		6753701	0					
ANR	6754501	AdditiveExpression	( uint8_t * ) con -> buf + widthY * MBheightY + xDiv * mx		6753701	1		+			
ANR	6754502	CastExpression	( uint8_t * ) con -> buf		6753701	0					
ANR	6754503	CastTarget	uint8_t *		6753701	0					
ANR	6754504	PtrMemberAccess	con -> buf		6753701	1					
ANR	6754505	Identifier	con		6753701	0					
ANR	6754506	Identifier	buf		6753701	1					
ANR	6754507	AdditiveExpression	widthY * MBheightY + xDiv * mx		6753701	1		+			
ANR	6754508	MultiplicativeExpression	widthY * MBheightY		6753701	0		*			
ANR	6754509	Identifier	widthY		6753701	0					
ANR	6754510	Identifier	MBheightY		6753701	1					
ANR	6754511	MultiplicativeExpression	xDiv * mx		6753701	1		*			
ANR	6754512	Identifier	xDiv		6753701	0					
ANR	6754513	Identifier	mx		6753701	1					
ANR	6754514	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6753701	5					
ANR	6754515	ForInit	idx1 = 0 ;	1269:13:39029:39037	6753701	0	True				
ANR	6754516	AssignmentExpression	idx1 = 0		6753701	0		=			
ANR	6754517	Identifier	idx1		6753701	0					
ANR	6754518	PrimaryExpression	0		6753701	1					
ANR	6754519	Condition	idx1 < yDiv	1269:23:39039:39049	6753701	1	True				
ANR	6754520	RelationalExpression	idx1 < yDiv		6753701	0		<			
ANR	6754521	Identifier	idx1		6753701	0					
ANR	6754522	Identifier	yDiv		6753701	1					
ANR	6754523	AssignmentExpression	idx1 += 1	1269:36:39052:39060	6753701	2	True	+=			
ANR	6754524	Identifier	idx1		6753701	0					
ANR	6754525	PrimaryExpression	1		6753701	1					
ANR	6754526	CompoundStatement		99:47:3716:3716	6753701	3					
ANR	6754527	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6753701	0					
ANR	6754528	ForInit	idx2 = 0 ;	1270:17:39082:39090	6753701	0	True				
ANR	6754529	AssignmentExpression	idx2 = 0		6753701	0		=			
ANR	6754530	Identifier	idx2		6753701	0					
ANR	6754531	PrimaryExpression	0		6753701	1					
ANR	6754532	Condition	idx2 < xDiv	1270:27:39092:39102	6753701	1	True				
ANR	6754533	RelationalExpression	idx2 < xDiv		6753701	0		<			
ANR	6754534	Identifier	idx2		6753701	0					
ANR	6754535	Identifier	xDiv		6753701	1					
ANR	6754536	AssignmentExpression	idx2 += 1	1270:40:39105:39113	6753701	2	True	+=			
ANR	6754537	Identifier	idx2		6753701	0					
ANR	6754538	PrimaryExpression	1		6753701	1					
ANR	6754539	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]	1271:16:39133:39189	6753701	3	True				
ANR	6754540	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]		6753701	0		=			
ANR	6754541	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ]		6753701	0					
ANR	6754542	Identifier	data		6753701	0					
ANR	6754543	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 1		6753701	1		+			
ANR	6754544	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6753701	0		*			
ANR	6754545	AdditiveExpression	idx1 * xDiv + idx2		6753701	0		+			
ANR	6754546	MultiplicativeExpression	idx1 * xDiv		6753701	0		*			
ANR	6754547	Identifier	idx1		6753701	0					
ANR	6754548	Identifier	xDiv		6753701	1					
ANR	6754549	Identifier	idx2		6753701	1					
ANR	6754550	Identifier	num_channels		6753701	1					
ANR	6754551	PrimaryExpression	1		6753701	1					
ANR	6754552	ArrayIndexing	sp [ idx2 ]		6753701	1					
ANR	6754553	Identifier	sp		6753701	0					
ANR	6754554	Identifier	idx2		6753701	1					
ANR	6754555	ExpressionStatement	sp += widthUV	1272:12:39203:39216	6753701	1	True				
ANR	6754556	AssignmentExpression	sp += widthUV		6753701	0		+=			
ANR	6754557	Identifier	sp		6753701	0					
ANR	6754558	Identifier	widthUV		6753701	1					
ANR	6754559	ExpressionStatement	sp = ( uint8_t * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx	1276:8:39253:39330	6753701	6	True				
ANR	6754560	AssignmentExpression	sp = ( uint8_t * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		6753701	0		=			
ANR	6754561	Identifier	sp		6753701	0					
ANR	6754562	AdditiveExpression	( uint8_t * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6754563	CastExpression	( uint8_t * ) con -> buf		6753701	0					
ANR	6754564	CastTarget	uint8_t *		6753701	0					
ANR	6754565	PtrMemberAccess	con -> buf		6753701	1					
ANR	6754566	Identifier	con		6753701	0					
ANR	6754567	Identifier	buf		6753701	1					
ANR	6754568	AdditiveExpression	widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6754569	MultiplicativeExpression	widthY * MBheightY		6753701	0		*			
ANR	6754570	Identifier	widthY		6753701	0					
ANR	6754571	Identifier	MBheightY		6753701	1					
ANR	6754572	AdditiveExpression	widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6754573	MultiplicativeExpression	widthUV * MBheightUV		6753701	0		*			
ANR	6754574	Identifier	widthUV		6753701	0					
ANR	6754575	Identifier	MBheightUV		6753701	1					
ANR	6754576	MultiplicativeExpression	xDiv * mx		6753701	1		*			
ANR	6754577	Identifier	xDiv		6753701	0					
ANR	6754578	Identifier	mx		6753701	1					
ANR	6754579	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6753701	7					
ANR	6754580	ForInit	idx1 = 0 ;	1277:13:39345:39353	6753701	0	True				
ANR	6754581	AssignmentExpression	idx1 = 0		6753701	0		=			
ANR	6754582	Identifier	idx1		6753701	0					
ANR	6754583	PrimaryExpression	0		6753701	1					
ANR	6754584	Condition	idx1 < yDiv	1277:23:39355:39365	6753701	1	True				
ANR	6754585	RelationalExpression	idx1 < yDiv		6753701	0		<			
ANR	6754586	Identifier	idx1		6753701	0					
ANR	6754587	Identifier	yDiv		6753701	1					
ANR	6754588	AssignmentExpression	idx1 += 1	1277:36:39368:39376	6753701	2	True	+=			
ANR	6754589	Identifier	idx1		6753701	0					
ANR	6754590	PrimaryExpression	1		6753701	1					
ANR	6754591	CompoundStatement		107:47:4032:4032	6753701	3					
ANR	6754592	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6753701	0					
ANR	6754593	ForInit	idx2 = 0 ;	1278:17:39398:39406	6753701	0	True				
ANR	6754594	AssignmentExpression	idx2 = 0		6753701	0		=			
ANR	6754595	Identifier	idx2		6753701	0					
ANR	6754596	PrimaryExpression	0		6753701	1					
ANR	6754597	Condition	idx2 < xDiv	1278:27:39408:39418	6753701	1	True				
ANR	6754598	RelationalExpression	idx2 < xDiv		6753701	0		<			
ANR	6754599	Identifier	idx2		6753701	0					
ANR	6754600	Identifier	xDiv		6753701	1					
ANR	6754601	AssignmentExpression	idx2 += 1	1278:40:39421:39429	6753701	2	True	+=			
ANR	6754602	Identifier	idx2		6753701	0					
ANR	6754603	PrimaryExpression	1		6753701	1					
ANR	6754604	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]	1279:16:39449:39505	6753701	3	True				
ANR	6754605	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]		6753701	0		=			
ANR	6754606	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ]		6753701	0					
ANR	6754607	Identifier	data		6753701	0					
ANR	6754608	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 2		6753701	1		+			
ANR	6754609	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6753701	0		*			
ANR	6754610	AdditiveExpression	idx1 * xDiv + idx2		6753701	0		+			
ANR	6754611	MultiplicativeExpression	idx1 * xDiv		6753701	0		*			
ANR	6754612	Identifier	idx1		6753701	0					
ANR	6754613	Identifier	xDiv		6753701	1					
ANR	6754614	Identifier	idx2		6753701	1					
ANR	6754615	Identifier	num_channels		6753701	1					
ANR	6754616	PrimaryExpression	2		6753701	1					
ANR	6754617	ArrayIndexing	sp [ idx2 ]		6753701	1					
ANR	6754618	Identifier	sp		6753701	0					
ANR	6754619	Identifier	idx2		6753701	1					
ANR	6754620	ExpressionStatement	sp += widthUV	1280:12:39519:39532	6753701	1	True				
ANR	6754621	AssignmentExpression	sp += widthUV		6753701	0		+=			
ANR	6754622	Identifier	sp		6753701	0					
ANR	6754623	Identifier	widthUV		6753701	1					
ANR	6754624	IfStatement	if ( con -> ncomp == 4 )		6753701	8					
ANR	6754625	Condition	con -> ncomp == 4	1283:11:39556:39570	6753701	0	True				
ANR	6754626	EqualityExpression	con -> ncomp == 4		6753701	0		==			
ANR	6754627	PtrMemberAccess	con -> ncomp		6753701	0					
ANR	6754628	Identifier	con		6753701	0					
ANR	6754629	Identifier	ncomp		6753701	1					
ANR	6754630	PrimaryExpression	4		6753701	1					
ANR	6754631	CompoundStatement		114:8:4234:4234	6753701	1					
ANR	6754632	ExpressionStatement	xDiv = yDiv = 16	1285:12:39595:39611	6753701	0	True				
ANR	6754633	AssignmentExpression	xDiv = yDiv = 16		6753701	0		=			
ANR	6754634	Identifier	xDiv		6753701	0					
ANR	6754635	AssignmentExpression	yDiv = 16		6753701	1		=			
ANR	6754636	Identifier	yDiv		6753701	0					
ANR	6754637	PrimaryExpression	16		6753701	1					
ANR	6754638	ExpressionStatement	sp = ( uint8_t * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx	1286:12:39625:39707	6753701	1	True				
ANR	6754639	AssignmentExpression	sp = ( uint8_t * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		6753701	0		=			
ANR	6754640	Identifier	sp		6753701	0					
ANR	6754641	AdditiveExpression	( uint8_t * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6754642	CastExpression	( uint8_t * ) con -> buf		6753701	0					
ANR	6754643	CastTarget	uint8_t *		6753701	0					
ANR	6754644	PtrMemberAccess	con -> buf		6753701	1					
ANR	6754645	Identifier	con		6753701	0					
ANR	6754646	Identifier	buf		6753701	1					
ANR	6754647	AdditiveExpression	widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6754648	MultiplicativeExpression	widthY * MBheightY		6753701	0		*			
ANR	6754649	Identifier	widthY		6753701	0					
ANR	6754650	Identifier	MBheightY		6753701	1					
ANR	6754651	AdditiveExpression	2 * widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6754652	MultiplicativeExpression	2 * widthUV * MBheightUV		6753701	0		*			
ANR	6754653	PrimaryExpression	2		6753701	0					
ANR	6754654	MultiplicativeExpression	widthUV * MBheightUV		6753701	1		*			
ANR	6754655	Identifier	widthUV		6753701	0					
ANR	6754656	Identifier	MBheightUV		6753701	1					
ANR	6754657	MultiplicativeExpression	xDiv * mx		6753701	1		*			
ANR	6754658	Identifier	xDiv		6753701	0					
ANR	6754659	Identifier	mx		6753701	1					
ANR	6754660	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6753701	2					
ANR	6754661	ForInit	idx1 = 0 ;	1287:17:39726:39734	6753701	0	True				
ANR	6754662	AssignmentExpression	idx1 = 0		6753701	0		=			
ANR	6754663	Identifier	idx1		6753701	0					
ANR	6754664	PrimaryExpression	0		6753701	1					
ANR	6754665	Condition	idx1 < yDiv	1287:27:39736:39746	6753701	1	True				
ANR	6754666	RelationalExpression	idx1 < yDiv		6753701	0		<			
ANR	6754667	Identifier	idx1		6753701	0					
ANR	6754668	Identifier	yDiv		6753701	1					
ANR	6754669	AssignmentExpression	idx1 += 1	1287:40:39749:39757	6753701	2	True	+=			
ANR	6754670	Identifier	idx1		6753701	0					
ANR	6754671	PrimaryExpression	1		6753701	1					
ANR	6754672	CompoundStatement		117:51:4413:4413	6753701	3					
ANR	6754673	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6753701	0					
ANR	6754674	ForInit	idx2 = 0 ;	1288:21:39783:39791	6753701	0	True				
ANR	6754675	AssignmentExpression	idx2 = 0		6753701	0		=			
ANR	6754676	Identifier	idx2		6753701	0					
ANR	6754677	PrimaryExpression	0		6753701	1					
ANR	6754678	Condition	idx2 < xDiv	1288:31:39793:39803	6753701	1	True				
ANR	6754679	RelationalExpression	idx2 < xDiv		6753701	0		<			
ANR	6754680	Identifier	idx2		6753701	0					
ANR	6754681	Identifier	xDiv		6753701	1					
ANR	6754682	AssignmentExpression	idx2 += 1	1288:44:39806:39814	6753701	2	True	+=			
ANR	6754683	Identifier	idx2		6753701	0					
ANR	6754684	PrimaryExpression	1		6753701	1					
ANR	6754685	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]	1289:20:39838:39894	6753701	3	True				
ANR	6754686	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]		6753701	0		=			
ANR	6754687	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ]		6753701	0					
ANR	6754688	Identifier	data		6753701	0					
ANR	6754689	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 3		6753701	1		+			
ANR	6754690	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6753701	0		*			
ANR	6754691	AdditiveExpression	idx1 * xDiv + idx2		6753701	0		+			
ANR	6754692	MultiplicativeExpression	idx1 * xDiv		6753701	0		*			
ANR	6754693	Identifier	idx1		6753701	0					
ANR	6754694	Identifier	xDiv		6753701	1					
ANR	6754695	Identifier	idx2		6753701	1					
ANR	6754696	Identifier	num_channels		6753701	1					
ANR	6754697	PrimaryExpression	3		6753701	1					
ANR	6754698	ArrayIndexing	sp [ idx2 ]		6753701	1					
ANR	6754699	Identifier	sp		6753701	0					
ANR	6754700	Identifier	idx2		6753701	1					
ANR	6754701	ExpressionStatement	sp += widthY	1290:16:39912:39924	6753701	1	True				
ANR	6754702	AssignmentExpression	sp += widthY		6753701	0		+=			
ANR	6754703	Identifier	sp		6753701	0					
ANR	6754704	Identifier	widthY		6753701	1					
ANR	6754705	ElseStatement	else		6753701	0					
ANR	6754706	IfStatement	if ( con -> bpi == 16 || con -> bpi == 10 )		6753701	0					
ANR	6754707	Condition	con -> bpi == 16 || con -> bpi == 10	1294:13:39969:40000	6753701	0	True				
ANR	6754708	OrExpression	con -> bpi == 16 || con -> bpi == 10		6753701	0		||			
ANR	6754709	EqualityExpression	con -> bpi == 16		6753701	0		==			
ANR	6754710	PtrMemberAccess	con -> bpi		6753701	0					
ANR	6754711	Identifier	con		6753701	0					
ANR	6754712	Identifier	bpi		6753701	1					
ANR	6754713	PrimaryExpression	16		6753701	1					
ANR	6754714	EqualityExpression	con -> bpi == 10		6753701	1		==			
ANR	6754715	PtrMemberAccess	con -> bpi		6753701	0					
ANR	6754716	Identifier	con		6753701	0					
ANR	6754717	Identifier	bpi		6753701	1					
ANR	6754718	PrimaryExpression	10		6753701	1					
ANR	6754719	CompoundStatement		124:47:4656:4656	6753701	1					
ANR	6754720	IfStatement	if ( con -> sf == 1 )		6753701	0					
ANR	6754721	Condition	con -> sf == 1	1295:12:40017:40028	6753701	0	True				
ANR	6754722	EqualityExpression	con -> sf == 1		6753701	0		==			
ANR	6754723	PtrMemberAccess	con -> sf		6753701	0					
ANR	6754724	Identifier	con		6753701	0					
ANR	6754725	Identifier	sf		6753701	1					
ANR	6754726	PrimaryExpression	1		6753701	1					
ANR	6754727	CompoundStatement		127:12:4718:4762	6753701	1					
ANR	6754728	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf + xDiv * mx ;	1297:12:40065:40109	6753701	0	True				
ANR	6754729	IdentifierDecl	* sp = ( uint16_t * ) con -> buf + xDiv * mx		6753701	0					
ANR	6754730	IdentifierDeclType	uint16_t *		6753701	0					
ANR	6754731	Identifier	sp		6753701	1					
ANR	6754732	AssignmentExpression	* sp = ( uint16_t * ) con -> buf + xDiv * mx		6753701	2		=			
ANR	6754733	Identifier	sp		6753701	0					
ANR	6754734	AdditiveExpression	( uint16_t * ) con -> buf + xDiv * mx		6753701	1		+			
ANR	6754735	CastExpression	( uint16_t * ) con -> buf		6753701	0					
ANR	6754736	CastTarget	uint16_t *		6753701	0					
ANR	6754737	PtrMemberAccess	con -> buf		6753701	1					
ANR	6754738	Identifier	con		6753701	0					
ANR	6754739	Identifier	buf		6753701	1					
ANR	6754740	MultiplicativeExpression	xDiv * mx		6753701	1		*			
ANR	6754741	Identifier	xDiv		6753701	0					
ANR	6754742	Identifier	mx		6753701	1					
ANR	6754743	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6753701	1					
ANR	6754744	ForInit	idx1 = 0 ;	1298:17:40128:40136	6753701	0	True				
ANR	6754745	AssignmentExpression	idx1 = 0		6753701	0		=			
ANR	6754746	Identifier	idx1		6753701	0					
ANR	6754747	PrimaryExpression	0		6753701	1					
ANR	6754748	Condition	idx1 < yDiv	1298:27:40138:40148	6753701	1	True				
ANR	6754749	RelationalExpression	idx1 < yDiv		6753701	0		<			
ANR	6754750	Identifier	idx1		6753701	0					
ANR	6754751	Identifier	yDiv		6753701	1					
ANR	6754752	AssignmentExpression	idx1 += 1	1298:40:40151:40159	6753701	2	True	+=			
ANR	6754753	Identifier	idx1		6753701	0					
ANR	6754754	PrimaryExpression	1		6753701	1					
ANR	6754755	CompoundStatement		128:51:4815:4815	6753701	3					
ANR	6754756	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6753701	0					
ANR	6754757	ForInit	idx2 = 0 ;	1299:21:40185:40193	6753701	0	True				
ANR	6754758	AssignmentExpression	idx2 = 0		6753701	0		=			
ANR	6754759	Identifier	idx2		6753701	0					
ANR	6754760	PrimaryExpression	0		6753701	1					
ANR	6754761	Condition	idx2 < xDiv	1299:31:40195:40205	6753701	1	True				
ANR	6754762	RelationalExpression	idx2 < xDiv		6753701	0		<			
ANR	6754763	Identifier	idx2		6753701	0					
ANR	6754764	Identifier	xDiv		6753701	1					
ANR	6754765	AssignmentExpression	idx2 += 1	1299:44:40208:40216	6753701	2	True	+=			
ANR	6754766	Identifier	idx2		6753701	0					
ANR	6754767	PrimaryExpression	1		6753701	1					
ANR	6754768	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]	1300:20:40240:40296	6753701	3	True				
ANR	6754769	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]		6753701	0		=			
ANR	6754770	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ]		6753701	0					
ANR	6754771	Identifier	data		6753701	0					
ANR	6754772	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 0		6753701	1		+			
ANR	6754773	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6753701	0		*			
ANR	6754774	AdditiveExpression	idx1 * xDiv + idx2		6753701	0		+			
ANR	6754775	MultiplicativeExpression	idx1 * xDiv		6753701	0		*			
ANR	6754776	Identifier	idx1		6753701	0					
ANR	6754777	Identifier	xDiv		6753701	1					
ANR	6754778	Identifier	idx2		6753701	1					
ANR	6754779	Identifier	num_channels		6753701	1					
ANR	6754780	PrimaryExpression	0		6753701	1					
ANR	6754781	ArrayIndexing	sp [ idx2 ]		6753701	1					
ANR	6754782	Identifier	sp		6753701	0					
ANR	6754783	Identifier	idx2		6753701	1					
ANR	6754784	ExpressionStatement	sp += widthY	1301:16:40314:40326	6753701	1	True				
ANR	6754785	AssignmentExpression	sp += widthY		6753701	0		+=			
ANR	6754786	Identifier	sp		6753701	0					
ANR	6754787	Identifier	widthY		6753701	1					
ANR	6754788	IfStatement	if ( con -> ycc_format == 2 )		6753701	2					
ANR	6754789	Condition	con -> ycc_format == 2	1304:16:40359:40378	6753701	0	True				
ANR	6754790	EqualityExpression	con -> ycc_format == 2		6753701	0		==			
ANR	6754791	PtrMemberAccess	con -> ycc_format		6753701	0					
ANR	6754792	Identifier	con		6753701	0					
ANR	6754793	Identifier	ycc_format		6753701	1					
ANR	6754794	PrimaryExpression	2		6753701	1					
ANR	6754795	ExpressionStatement	xDiv = 8	1305:16:40397:40405	6753701	1	True				
ANR	6754796	AssignmentExpression	xDiv = 8		6753701	0		=			
ANR	6754797	Identifier	xDiv		6753701	0					
ANR	6754798	PrimaryExpression	8		6753701	1					
ANR	6754799	IfStatement	if ( con -> ycc_format == 1 )		6753701	3					
ANR	6754800	Condition	con -> ycc_format == 1	1307:16:40424:40443	6753701	0	True				
ANR	6754801	EqualityExpression	con -> ycc_format == 1		6753701	0		==			
ANR	6754802	PtrMemberAccess	con -> ycc_format		6753701	0					
ANR	6754803	Identifier	con		6753701	0					
ANR	6754804	Identifier	ycc_format		6753701	1					
ANR	6754805	PrimaryExpression	1		6753701	1					
ANR	6754806	ExpressionStatement	xDiv = yDiv = 8	1308:16:40462:40477	6753701	1	True				
ANR	6754807	AssignmentExpression	xDiv = yDiv = 8		6753701	0		=			
ANR	6754808	Identifier	xDiv		6753701	0					
ANR	6754809	AssignmentExpression	yDiv = 8		6753701	1		=			
ANR	6754810	Identifier	yDiv		6753701	0					
ANR	6754811	PrimaryExpression	8		6753701	1					
ANR	6754812	ExpressionStatement	sp = ( uint16_t * ) con -> buf + widthY * MBheightY + xDiv * mx	1311:12:40512:40567	6753701	4	True				
ANR	6754813	AssignmentExpression	sp = ( uint16_t * ) con -> buf + widthY * MBheightY + xDiv * mx		6753701	0		=			
ANR	6754814	Identifier	sp		6753701	0					
ANR	6754815	AdditiveExpression	( uint16_t * ) con -> buf + widthY * MBheightY + xDiv * mx		6753701	1		+			
ANR	6754816	CastExpression	( uint16_t * ) con -> buf		6753701	0					
ANR	6754817	CastTarget	uint16_t *		6753701	0					
ANR	6754818	PtrMemberAccess	con -> buf		6753701	1					
ANR	6754819	Identifier	con		6753701	0					
ANR	6754820	Identifier	buf		6753701	1					
ANR	6754821	AdditiveExpression	widthY * MBheightY + xDiv * mx		6753701	1		+			
ANR	6754822	MultiplicativeExpression	widthY * MBheightY		6753701	0		*			
ANR	6754823	Identifier	widthY		6753701	0					
ANR	6754824	Identifier	MBheightY		6753701	1					
ANR	6754825	MultiplicativeExpression	xDiv * mx		6753701	1		*			
ANR	6754826	Identifier	xDiv		6753701	0					
ANR	6754827	Identifier	mx		6753701	1					
ANR	6754828	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6753701	5					
ANR	6754829	ForInit	idx1 = 0 ;	1312:17:40586:40594	6753701	0	True				
ANR	6754830	AssignmentExpression	idx1 = 0		6753701	0		=			
ANR	6754831	Identifier	idx1		6753701	0					
ANR	6754832	PrimaryExpression	0		6753701	1					
ANR	6754833	Condition	idx1 < yDiv	1312:27:40596:40606	6753701	1	True				
ANR	6754834	RelationalExpression	idx1 < yDiv		6753701	0		<			
ANR	6754835	Identifier	idx1		6753701	0					
ANR	6754836	Identifier	yDiv		6753701	1					
ANR	6754837	AssignmentExpression	idx1 += 1	1312:40:40609:40617	6753701	2	True	+=			
ANR	6754838	Identifier	idx1		6753701	0					
ANR	6754839	PrimaryExpression	1		6753701	1					
ANR	6754840	CompoundStatement		142:51:5273:5273	6753701	3					
ANR	6754841	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6753701	0					
ANR	6754842	ForInit	idx2 = 0 ;	1313:21:40643:40651	6753701	0	True				
ANR	6754843	AssignmentExpression	idx2 = 0		6753701	0		=			
ANR	6754844	Identifier	idx2		6753701	0					
ANR	6754845	PrimaryExpression	0		6753701	1					
ANR	6754846	Condition	idx2 < xDiv	1313:31:40653:40663	6753701	1	True				
ANR	6754847	RelationalExpression	idx2 < xDiv		6753701	0		<			
ANR	6754848	Identifier	idx2		6753701	0					
ANR	6754849	Identifier	xDiv		6753701	1					
ANR	6754850	AssignmentExpression	idx2 += 1	1313:44:40666:40674	6753701	2	True	+=			
ANR	6754851	Identifier	idx2		6753701	0					
ANR	6754852	PrimaryExpression	1		6753701	1					
ANR	6754853	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]	1314:20:40698:40754	6753701	3	True				
ANR	6754854	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]		6753701	0		=			
ANR	6754855	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ]		6753701	0					
ANR	6754856	Identifier	data		6753701	0					
ANR	6754857	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 1		6753701	1		+			
ANR	6754858	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6753701	0		*			
ANR	6754859	AdditiveExpression	idx1 * xDiv + idx2		6753701	0		+			
ANR	6754860	MultiplicativeExpression	idx1 * xDiv		6753701	0		*			
ANR	6754861	Identifier	idx1		6753701	0					
ANR	6754862	Identifier	xDiv		6753701	1					
ANR	6754863	Identifier	idx2		6753701	1					
ANR	6754864	Identifier	num_channels		6753701	1					
ANR	6754865	PrimaryExpression	1		6753701	1					
ANR	6754866	ArrayIndexing	sp [ idx2 ]		6753701	1					
ANR	6754867	Identifier	sp		6753701	0					
ANR	6754868	Identifier	idx2		6753701	1					
ANR	6754869	ExpressionStatement	sp += widthUV	1315:16:40772:40785	6753701	1	True				
ANR	6754870	AssignmentExpression	sp += widthUV		6753701	0		+=			
ANR	6754871	Identifier	sp		6753701	0					
ANR	6754872	Identifier	widthUV		6753701	1					
ANR	6754873	ExpressionStatement	sp = ( uint16_t * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx	1319:12:40834:40912	6753701	6	True				
ANR	6754874	AssignmentExpression	sp = ( uint16_t * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		6753701	0		=			
ANR	6754875	Identifier	sp		6753701	0					
ANR	6754876	AdditiveExpression	( uint16_t * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6754877	CastExpression	( uint16_t * ) con -> buf		6753701	0					
ANR	6754878	CastTarget	uint16_t *		6753701	0					
ANR	6754879	PtrMemberAccess	con -> buf		6753701	1					
ANR	6754880	Identifier	con		6753701	0					
ANR	6754881	Identifier	buf		6753701	1					
ANR	6754882	AdditiveExpression	widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6754883	MultiplicativeExpression	widthY * MBheightY		6753701	0		*			
ANR	6754884	Identifier	widthY		6753701	0					
ANR	6754885	Identifier	MBheightY		6753701	1					
ANR	6754886	AdditiveExpression	widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6754887	MultiplicativeExpression	widthUV * MBheightUV		6753701	0		*			
ANR	6754888	Identifier	widthUV		6753701	0					
ANR	6754889	Identifier	MBheightUV		6753701	1					
ANR	6754890	MultiplicativeExpression	xDiv * mx		6753701	1		*			
ANR	6754891	Identifier	xDiv		6753701	0					
ANR	6754892	Identifier	mx		6753701	1					
ANR	6754893	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6753701	7					
ANR	6754894	ForInit	idx1 = 0 ;	1320:17:40931:40939	6753701	0	True				
ANR	6754895	AssignmentExpression	idx1 = 0		6753701	0		=			
ANR	6754896	Identifier	idx1		6753701	0					
ANR	6754897	PrimaryExpression	0		6753701	1					
ANR	6754898	Condition	idx1 < yDiv	1320:27:40941:40951	6753701	1	True				
ANR	6754899	RelationalExpression	idx1 < yDiv		6753701	0		<			
ANR	6754900	Identifier	idx1		6753701	0					
ANR	6754901	Identifier	yDiv		6753701	1					
ANR	6754902	AssignmentExpression	idx1 += 1	1320:40:40954:40962	6753701	2	True	+=			
ANR	6754903	Identifier	idx1		6753701	0					
ANR	6754904	PrimaryExpression	1		6753701	1					
ANR	6754905	CompoundStatement		150:51:5618:5618	6753701	3					
ANR	6754906	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6753701	0					
ANR	6754907	ForInit	idx2 = 0 ;	1321:21:40988:40996	6753701	0	True				
ANR	6754908	AssignmentExpression	idx2 = 0		6753701	0		=			
ANR	6754909	Identifier	idx2		6753701	0					
ANR	6754910	PrimaryExpression	0		6753701	1					
ANR	6754911	Condition	idx2 < xDiv	1321:31:40998:41008	6753701	1	True				
ANR	6754912	RelationalExpression	idx2 < xDiv		6753701	0		<			
ANR	6754913	Identifier	idx2		6753701	0					
ANR	6754914	Identifier	xDiv		6753701	1					
ANR	6754915	AssignmentExpression	idx2 += 1	1321:44:41011:41019	6753701	2	True	+=			
ANR	6754916	Identifier	idx2		6753701	0					
ANR	6754917	PrimaryExpression	1		6753701	1					
ANR	6754918	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]	1322:20:41043:41099	6753701	3	True				
ANR	6754919	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]		6753701	0		=			
ANR	6754920	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ]		6753701	0					
ANR	6754921	Identifier	data		6753701	0					
ANR	6754922	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 2		6753701	1		+			
ANR	6754923	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6753701	0		*			
ANR	6754924	AdditiveExpression	idx1 * xDiv + idx2		6753701	0		+			
ANR	6754925	MultiplicativeExpression	idx1 * xDiv		6753701	0		*			
ANR	6754926	Identifier	idx1		6753701	0					
ANR	6754927	Identifier	xDiv		6753701	1					
ANR	6754928	Identifier	idx2		6753701	1					
ANR	6754929	Identifier	num_channels		6753701	1					
ANR	6754930	PrimaryExpression	2		6753701	1					
ANR	6754931	ArrayIndexing	sp [ idx2 ]		6753701	1					
ANR	6754932	Identifier	sp		6753701	0					
ANR	6754933	Identifier	idx2		6753701	1					
ANR	6754934	ExpressionStatement	sp += widthUV	1323:16:41117:41130	6753701	1	True				
ANR	6754935	AssignmentExpression	sp += widthUV		6753701	0		+=			
ANR	6754936	Identifier	sp		6753701	0					
ANR	6754937	Identifier	widthUV		6753701	1					
ANR	6754938	IfStatement	if ( con -> ncomp == 4 )		6753701	8					
ANR	6754939	Condition	con -> ncomp == 4	1326:15:41162:41176	6753701	0	True				
ANR	6754940	EqualityExpression	con -> ncomp == 4		6753701	0		==			
ANR	6754941	PtrMemberAccess	con -> ncomp		6753701	0					
ANR	6754942	Identifier	con		6753701	0					
ANR	6754943	Identifier	ncomp		6753701	1					
ANR	6754944	PrimaryExpression	4		6753701	1					
ANR	6754945	CompoundStatement		157:12:5844:5844	6753701	1					
ANR	6754946	ExpressionStatement	xDiv = yDiv = 16	1328:16:41209:41225	6753701	0	True				
ANR	6754947	AssignmentExpression	xDiv = yDiv = 16		6753701	0		=			
ANR	6754948	Identifier	xDiv		6753701	0					
ANR	6754949	AssignmentExpression	yDiv = 16		6753701	1		=			
ANR	6754950	Identifier	yDiv		6753701	0					
ANR	6754951	PrimaryExpression	16		6753701	1					
ANR	6754952	ExpressionStatement	sp = ( uint16_t * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx	1329:16:41243:41326	6753701	1	True				
ANR	6754953	AssignmentExpression	sp = ( uint16_t * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		6753701	0		=			
ANR	6754954	Identifier	sp		6753701	0					
ANR	6754955	AdditiveExpression	( uint16_t * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6754956	CastExpression	( uint16_t * ) con -> buf		6753701	0					
ANR	6754957	CastTarget	uint16_t *		6753701	0					
ANR	6754958	PtrMemberAccess	con -> buf		6753701	1					
ANR	6754959	Identifier	con		6753701	0					
ANR	6754960	Identifier	buf		6753701	1					
ANR	6754961	AdditiveExpression	widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6754962	MultiplicativeExpression	widthY * MBheightY		6753701	0		*			
ANR	6754963	Identifier	widthY		6753701	0					
ANR	6754964	Identifier	MBheightY		6753701	1					
ANR	6754965	AdditiveExpression	2 * widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6754966	MultiplicativeExpression	2 * widthUV * MBheightUV		6753701	0		*			
ANR	6754967	PrimaryExpression	2		6753701	0					
ANR	6754968	MultiplicativeExpression	widthUV * MBheightUV		6753701	1		*			
ANR	6754969	Identifier	widthUV		6753701	0					
ANR	6754970	Identifier	MBheightUV		6753701	1					
ANR	6754971	MultiplicativeExpression	xDiv * mx		6753701	1		*			
ANR	6754972	Identifier	xDiv		6753701	0					
ANR	6754973	Identifier	mx		6753701	1					
ANR	6754974	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6753701	2					
ANR	6754975	ForInit	idx1 = 0 ;	1330:21:41349:41357	6753701	0	True				
ANR	6754976	AssignmentExpression	idx1 = 0		6753701	0		=			
ANR	6754977	Identifier	idx1		6753701	0					
ANR	6754978	PrimaryExpression	0		6753701	1					
ANR	6754979	Condition	idx1 < yDiv	1330:31:41359:41369	6753701	1	True				
ANR	6754980	RelationalExpression	idx1 < yDiv		6753701	0		<			
ANR	6754981	Identifier	idx1		6753701	0					
ANR	6754982	Identifier	yDiv		6753701	1					
ANR	6754983	AssignmentExpression	idx1 += 1	1330:44:41372:41380	6753701	2	True	+=			
ANR	6754984	Identifier	idx1		6753701	0					
ANR	6754985	PrimaryExpression	1		6753701	1					
ANR	6754986	CompoundStatement		160:55:6036:6036	6753701	3					
ANR	6754987	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6753701	0					
ANR	6754988	ForInit	idx2 = 0 ;	1331:25:41410:41418	6753701	0	True				
ANR	6754989	AssignmentExpression	idx2 = 0		6753701	0		=			
ANR	6754990	Identifier	idx2		6753701	0					
ANR	6754991	PrimaryExpression	0		6753701	1					
ANR	6754992	Condition	idx2 < xDiv	1331:35:41420:41430	6753701	1	True				
ANR	6754993	RelationalExpression	idx2 < xDiv		6753701	0		<			
ANR	6754994	Identifier	idx2		6753701	0					
ANR	6754995	Identifier	xDiv		6753701	1					
ANR	6754996	AssignmentExpression	idx2 += 1	1331:48:41433:41441	6753701	2	True	+=			
ANR	6754997	Identifier	idx2		6753701	0					
ANR	6754998	PrimaryExpression	1		6753701	1					
ANR	6754999	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]	1332:24:41469:41525	6753701	3	True				
ANR	6755000	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]		6753701	0		=			
ANR	6755001	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ]		6753701	0					
ANR	6755002	Identifier	data		6753701	0					
ANR	6755003	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 3		6753701	1		+			
ANR	6755004	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6753701	0		*			
ANR	6755005	AdditiveExpression	idx1 * xDiv + idx2		6753701	0		+			
ANR	6755006	MultiplicativeExpression	idx1 * xDiv		6753701	0		*			
ANR	6755007	Identifier	idx1		6753701	0					
ANR	6755008	Identifier	xDiv		6753701	1					
ANR	6755009	Identifier	idx2		6753701	1					
ANR	6755010	Identifier	num_channels		6753701	1					
ANR	6755011	PrimaryExpression	3		6753701	1					
ANR	6755012	ArrayIndexing	sp [ idx2 ]		6753701	1					
ANR	6755013	Identifier	sp		6753701	0					
ANR	6755014	Identifier	idx2		6753701	1					
ANR	6755015	ExpressionStatement	sp += widthY	1333:20:41547:41559	6753701	1	True				
ANR	6755016	AssignmentExpression	sp += widthY		6753701	0		+=			
ANR	6755017	Identifier	sp		6753701	0					
ANR	6755018	Identifier	widthY		6753701	1					
ANR	6755019	ElseStatement	else		6753701	0					
ANR	6755020	IfStatement	if ( con -> sf == 2 )		6753701	0					
ANR	6755021	Condition	con -> sf == 2	1337:17:41620:41631	6753701	0	True				
ANR	6755022	EqualityExpression	con -> sf == 2		6753701	0		==			
ANR	6755023	PtrMemberAccess	con -> sf		6753701	0					
ANR	6755024	Identifier	con		6753701	0					
ANR	6755025	Identifier	sf		6753701	1					
ANR	6755026	PrimaryExpression	2		6753701	1					
ANR	6755027	CompoundStatement		169:12:6321:6359	6753701	1					
ANR	6755028	IdentifierDeclStatement	short * sp = ( short * ) con -> buf + xDiv * mx ;	1339:12:41668:41706	6753701	0	True				
ANR	6755029	IdentifierDecl	* sp = ( short * ) con -> buf + xDiv * mx		6753701	0					
ANR	6755030	IdentifierDeclType	short *		6753701	0					
ANR	6755031	Identifier	sp		6753701	1					
ANR	6755032	AssignmentExpression	* sp = ( short * ) con -> buf + xDiv * mx		6753701	2		=			
ANR	6755033	Identifier	sp		6753701	0					
ANR	6755034	AdditiveExpression	( short * ) con -> buf + xDiv * mx		6753701	1		+			
ANR	6755035	CastExpression	( short * ) con -> buf		6753701	0					
ANR	6755036	CastTarget	short *		6753701	0					
ANR	6755037	PtrMemberAccess	con -> buf		6753701	1					
ANR	6755038	Identifier	con		6753701	0					
ANR	6755039	Identifier	buf		6753701	1					
ANR	6755040	MultiplicativeExpression	xDiv * mx		6753701	1		*			
ANR	6755041	Identifier	xDiv		6753701	0					
ANR	6755042	Identifier	mx		6753701	1					
ANR	6755043	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6753701	1					
ANR	6755044	ForInit	idx1 = 0 ;	1340:17:41725:41733	6753701	0	True				
ANR	6755045	AssignmentExpression	idx1 = 0		6753701	0		=			
ANR	6755046	Identifier	idx1		6753701	0					
ANR	6755047	PrimaryExpression	0		6753701	1					
ANR	6755048	Condition	idx1 < yDiv	1340:27:41735:41745	6753701	1	True				
ANR	6755049	RelationalExpression	idx1 < yDiv		6753701	0		<			
ANR	6755050	Identifier	idx1		6753701	0					
ANR	6755051	Identifier	yDiv		6753701	1					
ANR	6755052	AssignmentExpression	idx1 += 1	1340:40:41748:41756	6753701	2	True	+=			
ANR	6755053	Identifier	idx1		6753701	0					
ANR	6755054	PrimaryExpression	1		6753701	1					
ANR	6755055	CompoundStatement		170:51:6412:6412	6753701	3					
ANR	6755056	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6753701	0					
ANR	6755057	ForInit	idx2 = 0 ;	1341:21:41782:41790	6753701	0	True				
ANR	6755058	AssignmentExpression	idx2 = 0		6753701	0		=			
ANR	6755059	Identifier	idx2		6753701	0					
ANR	6755060	PrimaryExpression	0		6753701	1					
ANR	6755061	Condition	idx2 < xDiv	1341:31:41792:41802	6753701	1	True				
ANR	6755062	RelationalExpression	idx2 < xDiv		6753701	0		<			
ANR	6755063	Identifier	idx2		6753701	0					
ANR	6755064	Identifier	xDiv		6753701	1					
ANR	6755065	AssignmentExpression	idx2 += 1	1341:44:41805:41813	6753701	2	True	+=			
ANR	6755066	Identifier	idx2		6753701	0					
ANR	6755067	PrimaryExpression	1		6753701	1					
ANR	6755068	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]	1342:20:41837:41893	6753701	3	True				
ANR	6755069	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]		6753701	0		=			
ANR	6755070	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ]		6753701	0					
ANR	6755071	Identifier	data		6753701	0					
ANR	6755072	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 0		6753701	1		+			
ANR	6755073	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6753701	0		*			
ANR	6755074	AdditiveExpression	idx1 * xDiv + idx2		6753701	0		+			
ANR	6755075	MultiplicativeExpression	idx1 * xDiv		6753701	0		*			
ANR	6755076	Identifier	idx1		6753701	0					
ANR	6755077	Identifier	xDiv		6753701	1					
ANR	6755078	Identifier	idx2		6753701	1					
ANR	6755079	Identifier	num_channels		6753701	1					
ANR	6755080	PrimaryExpression	0		6753701	1					
ANR	6755081	ArrayIndexing	sp [ idx2 ]		6753701	1					
ANR	6755082	Identifier	sp		6753701	0					
ANR	6755083	Identifier	idx2		6753701	1					
ANR	6755084	ExpressionStatement	sp += widthY	1343:16:41911:41923	6753701	1	True				
ANR	6755085	AssignmentExpression	sp += widthY		6753701	0		+=			
ANR	6755086	Identifier	sp		6753701	0					
ANR	6755087	Identifier	widthY		6753701	1					
ANR	6755088	IfStatement	if ( con -> ycc_format == 2 )		6753701	2					
ANR	6755089	Condition	con -> ycc_format == 2	1346:16:41956:41975	6753701	0	True				
ANR	6755090	EqualityExpression	con -> ycc_format == 2		6753701	0		==			
ANR	6755091	PtrMemberAccess	con -> ycc_format		6753701	0					
ANR	6755092	Identifier	con		6753701	0					
ANR	6755093	Identifier	ycc_format		6753701	1					
ANR	6755094	PrimaryExpression	2		6753701	1					
ANR	6755095	ExpressionStatement	xDiv = 8	1347:16:41994:42002	6753701	1	True				
ANR	6755096	AssignmentExpression	xDiv = 8		6753701	0		=			
ANR	6755097	Identifier	xDiv		6753701	0					
ANR	6755098	PrimaryExpression	8		6753701	1					
ANR	6755099	IfStatement	if ( con -> ycc_format == 1 )		6753701	3					
ANR	6755100	Condition	con -> ycc_format == 1	1349:16:42021:42040	6753701	0	True				
ANR	6755101	EqualityExpression	con -> ycc_format == 1		6753701	0		==			
ANR	6755102	PtrMemberAccess	con -> ycc_format		6753701	0					
ANR	6755103	Identifier	con		6753701	0					
ANR	6755104	Identifier	ycc_format		6753701	1					
ANR	6755105	PrimaryExpression	1		6753701	1					
ANR	6755106	ExpressionStatement	xDiv = yDiv = 8	1350:16:42059:42074	6753701	1	True				
ANR	6755107	AssignmentExpression	xDiv = yDiv = 8		6753701	0		=			
ANR	6755108	Identifier	xDiv		6753701	0					
ANR	6755109	AssignmentExpression	yDiv = 8		6753701	1		=			
ANR	6755110	Identifier	yDiv		6753701	0					
ANR	6755111	PrimaryExpression	8		6753701	1					
ANR	6755112	ExpressionStatement	sp = ( short * ) con -> buf + widthY * MBheightY + xDiv * mx	1353:12:42109:42161	6753701	4	True				
ANR	6755113	AssignmentExpression	sp = ( short * ) con -> buf + widthY * MBheightY + xDiv * mx		6753701	0		=			
ANR	6755114	Identifier	sp		6753701	0					
ANR	6755115	AdditiveExpression	( short * ) con -> buf + widthY * MBheightY + xDiv * mx		6753701	1		+			
ANR	6755116	CastExpression	( short * ) con -> buf		6753701	0					
ANR	6755117	CastTarget	short *		6753701	0					
ANR	6755118	PtrMemberAccess	con -> buf		6753701	1					
ANR	6755119	Identifier	con		6753701	0					
ANR	6755120	Identifier	buf		6753701	1					
ANR	6755121	AdditiveExpression	widthY * MBheightY + xDiv * mx		6753701	1		+			
ANR	6755122	MultiplicativeExpression	widthY * MBheightY		6753701	0		*			
ANR	6755123	Identifier	widthY		6753701	0					
ANR	6755124	Identifier	MBheightY		6753701	1					
ANR	6755125	MultiplicativeExpression	xDiv * mx		6753701	1		*			
ANR	6755126	Identifier	xDiv		6753701	0					
ANR	6755127	Identifier	mx		6753701	1					
ANR	6755128	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6753701	5					
ANR	6755129	ForInit	idx1 = 0 ;	1354:17:42180:42188	6753701	0	True				
ANR	6755130	AssignmentExpression	idx1 = 0		6753701	0		=			
ANR	6755131	Identifier	idx1		6753701	0					
ANR	6755132	PrimaryExpression	0		6753701	1					
ANR	6755133	Condition	idx1 < yDiv	1354:27:42190:42200	6753701	1	True				
ANR	6755134	RelationalExpression	idx1 < yDiv		6753701	0		<			
ANR	6755135	Identifier	idx1		6753701	0					
ANR	6755136	Identifier	yDiv		6753701	1					
ANR	6755137	AssignmentExpression	idx1 += 1	1354:40:42203:42211	6753701	2	True	+=			
ANR	6755138	Identifier	idx1		6753701	0					
ANR	6755139	PrimaryExpression	1		6753701	1					
ANR	6755140	CompoundStatement		184:51:6867:6867	6753701	3					
ANR	6755141	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6753701	0					
ANR	6755142	ForInit	idx2 = 0 ;	1355:21:42237:42245	6753701	0	True				
ANR	6755143	AssignmentExpression	idx2 = 0		6753701	0		=			
ANR	6755144	Identifier	idx2		6753701	0					
ANR	6755145	PrimaryExpression	0		6753701	1					
ANR	6755146	Condition	idx2 < xDiv	1355:31:42247:42257	6753701	1	True				
ANR	6755147	RelationalExpression	idx2 < xDiv		6753701	0		<			
ANR	6755148	Identifier	idx2		6753701	0					
ANR	6755149	Identifier	xDiv		6753701	1					
ANR	6755150	AssignmentExpression	idx2 += 1	1355:44:42260:42268	6753701	2	True	+=			
ANR	6755151	Identifier	idx2		6753701	0					
ANR	6755152	PrimaryExpression	1		6753701	1					
ANR	6755153	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]	1356:20:42292:42348	6753701	3	True				
ANR	6755154	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]		6753701	0		=			
ANR	6755155	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ]		6753701	0					
ANR	6755156	Identifier	data		6753701	0					
ANR	6755157	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 1		6753701	1		+			
ANR	6755158	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6753701	0		*			
ANR	6755159	AdditiveExpression	idx1 * xDiv + idx2		6753701	0		+			
ANR	6755160	MultiplicativeExpression	idx1 * xDiv		6753701	0		*			
ANR	6755161	Identifier	idx1		6753701	0					
ANR	6755162	Identifier	xDiv		6753701	1					
ANR	6755163	Identifier	idx2		6753701	1					
ANR	6755164	Identifier	num_channels		6753701	1					
ANR	6755165	PrimaryExpression	1		6753701	1					
ANR	6755166	ArrayIndexing	sp [ idx2 ]		6753701	1					
ANR	6755167	Identifier	sp		6753701	0					
ANR	6755168	Identifier	idx2		6753701	1					
ANR	6755169	ExpressionStatement	sp += widthUV	1357:16:42366:42379	6753701	1	True				
ANR	6755170	AssignmentExpression	sp += widthUV		6753701	0		+=			
ANR	6755171	Identifier	sp		6753701	0					
ANR	6755172	Identifier	widthUV		6753701	1					
ANR	6755173	ExpressionStatement	sp = ( short * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx	1361:12:42428:42503	6753701	6	True				
ANR	6755174	AssignmentExpression	sp = ( short * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		6753701	0		=			
ANR	6755175	Identifier	sp		6753701	0					
ANR	6755176	AdditiveExpression	( short * ) con -> buf + widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6755177	CastExpression	( short * ) con -> buf		6753701	0					
ANR	6755178	CastTarget	short *		6753701	0					
ANR	6755179	PtrMemberAccess	con -> buf		6753701	1					
ANR	6755180	Identifier	con		6753701	0					
ANR	6755181	Identifier	buf		6753701	1					
ANR	6755182	AdditiveExpression	widthY * MBheightY + widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6755183	MultiplicativeExpression	widthY * MBheightY		6753701	0		*			
ANR	6755184	Identifier	widthY		6753701	0					
ANR	6755185	Identifier	MBheightY		6753701	1					
ANR	6755186	AdditiveExpression	widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6755187	MultiplicativeExpression	widthUV * MBheightUV		6753701	0		*			
ANR	6755188	Identifier	widthUV		6753701	0					
ANR	6755189	Identifier	MBheightUV		6753701	1					
ANR	6755190	MultiplicativeExpression	xDiv * mx		6753701	1		*			
ANR	6755191	Identifier	xDiv		6753701	0					
ANR	6755192	Identifier	mx		6753701	1					
ANR	6755193	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6753701	7					
ANR	6755194	ForInit	idx1 = 0 ;	1362:17:42522:42530	6753701	0	True				
ANR	6755195	AssignmentExpression	idx1 = 0		6753701	0		=			
ANR	6755196	Identifier	idx1		6753701	0					
ANR	6755197	PrimaryExpression	0		6753701	1					
ANR	6755198	Condition	idx1 < yDiv	1362:27:42532:42542	6753701	1	True				
ANR	6755199	RelationalExpression	idx1 < yDiv		6753701	0		<			
ANR	6755200	Identifier	idx1		6753701	0					
ANR	6755201	Identifier	yDiv		6753701	1					
ANR	6755202	AssignmentExpression	idx1 += 1	1362:40:42545:42553	6753701	2	True	+=			
ANR	6755203	Identifier	idx1		6753701	0					
ANR	6755204	PrimaryExpression	1		6753701	1					
ANR	6755205	CompoundStatement		192:51:7209:7209	6753701	3					
ANR	6755206	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6753701	0					
ANR	6755207	ForInit	idx2 = 0 ;	1363:21:42579:42587	6753701	0	True				
ANR	6755208	AssignmentExpression	idx2 = 0		6753701	0		=			
ANR	6755209	Identifier	idx2		6753701	0					
ANR	6755210	PrimaryExpression	0		6753701	1					
ANR	6755211	Condition	idx2 < xDiv	1363:31:42589:42599	6753701	1	True				
ANR	6755212	RelationalExpression	idx2 < xDiv		6753701	0		<			
ANR	6755213	Identifier	idx2		6753701	0					
ANR	6755214	Identifier	xDiv		6753701	1					
ANR	6755215	AssignmentExpression	idx2 += 1	1363:44:42602:42610	6753701	2	True	+=			
ANR	6755216	Identifier	idx2		6753701	0					
ANR	6755217	PrimaryExpression	1		6753701	1					
ANR	6755218	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]	1364:20:42634:42690	6753701	3	True				
ANR	6755219	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]		6753701	0		=			
ANR	6755220	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ]		6753701	0					
ANR	6755221	Identifier	data		6753701	0					
ANR	6755222	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 2		6753701	1		+			
ANR	6755223	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6753701	0		*			
ANR	6755224	AdditiveExpression	idx1 * xDiv + idx2		6753701	0		+			
ANR	6755225	MultiplicativeExpression	idx1 * xDiv		6753701	0		*			
ANR	6755226	Identifier	idx1		6753701	0					
ANR	6755227	Identifier	xDiv		6753701	1					
ANR	6755228	Identifier	idx2		6753701	1					
ANR	6755229	Identifier	num_channels		6753701	1					
ANR	6755230	PrimaryExpression	2		6753701	1					
ANR	6755231	ArrayIndexing	sp [ idx2 ]		6753701	1					
ANR	6755232	Identifier	sp		6753701	0					
ANR	6755233	Identifier	idx2		6753701	1					
ANR	6755234	ExpressionStatement	sp += widthUV	1365:16:42708:42721	6753701	1	True				
ANR	6755235	AssignmentExpression	sp += widthUV		6753701	0		+=			
ANR	6755236	Identifier	sp		6753701	0					
ANR	6755237	Identifier	widthUV		6753701	1					
ANR	6755238	IfStatement	if ( con -> ncomp == 4 )		6753701	8					
ANR	6755239	Condition	con -> ncomp == 4	1368:15:42753:42767	6753701	0	True				
ANR	6755240	EqualityExpression	con -> ncomp == 4		6753701	0		==			
ANR	6755241	PtrMemberAccess	con -> ncomp		6753701	0					
ANR	6755242	Identifier	con		6753701	0					
ANR	6755243	Identifier	ncomp		6753701	1					
ANR	6755244	PrimaryExpression	4		6753701	1					
ANR	6755245	CompoundStatement		199:12:7435:7435	6753701	1					
ANR	6755246	ExpressionStatement	xDiv = yDiv = 16	1370:16:42800:42816	6753701	0	True				
ANR	6755247	AssignmentExpression	xDiv = yDiv = 16		6753701	0		=			
ANR	6755248	Identifier	xDiv		6753701	0					
ANR	6755249	AssignmentExpression	yDiv = 16		6753701	1		=			
ANR	6755250	Identifier	yDiv		6753701	0					
ANR	6755251	PrimaryExpression	16		6753701	1					
ANR	6755252	ExpressionStatement	sp = ( short * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx	1371:16:42834:42914	6753701	1	True				
ANR	6755253	AssignmentExpression	sp = ( short * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		6753701	0		=			
ANR	6755254	Identifier	sp		6753701	0					
ANR	6755255	AdditiveExpression	( short * ) con -> buf + widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6755256	CastExpression	( short * ) con -> buf		6753701	0					
ANR	6755257	CastTarget	short *		6753701	0					
ANR	6755258	PtrMemberAccess	con -> buf		6753701	1					
ANR	6755259	Identifier	con		6753701	0					
ANR	6755260	Identifier	buf		6753701	1					
ANR	6755261	AdditiveExpression	widthY * MBheightY + 2 * widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6755262	MultiplicativeExpression	widthY * MBheightY		6753701	0		*			
ANR	6755263	Identifier	widthY		6753701	0					
ANR	6755264	Identifier	MBheightY		6753701	1					
ANR	6755265	AdditiveExpression	2 * widthUV * MBheightUV + xDiv * mx		6753701	1		+			
ANR	6755266	MultiplicativeExpression	2 * widthUV * MBheightUV		6753701	0		*			
ANR	6755267	PrimaryExpression	2		6753701	0					
ANR	6755268	MultiplicativeExpression	widthUV * MBheightUV		6753701	1		*			
ANR	6755269	Identifier	widthUV		6753701	0					
ANR	6755270	Identifier	MBheightUV		6753701	1					
ANR	6755271	MultiplicativeExpression	xDiv * mx		6753701	1		*			
ANR	6755272	Identifier	xDiv		6753701	0					
ANR	6755273	Identifier	mx		6753701	1					
ANR	6755274	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6753701	2					
ANR	6755275	ForInit	idx1 = 0 ;	1372:21:42937:42945	6753701	0	True				
ANR	6755276	AssignmentExpression	idx1 = 0		6753701	0		=			
ANR	6755277	Identifier	idx1		6753701	0					
ANR	6755278	PrimaryExpression	0		6753701	1					
ANR	6755279	Condition	idx1 < yDiv	1372:31:42947:42957	6753701	1	True				
ANR	6755280	RelationalExpression	idx1 < yDiv		6753701	0		<			
ANR	6755281	Identifier	idx1		6753701	0					
ANR	6755282	Identifier	yDiv		6753701	1					
ANR	6755283	AssignmentExpression	idx1 += 1	1372:44:42960:42968	6753701	2	True	+=			
ANR	6755284	Identifier	idx1		6753701	0					
ANR	6755285	PrimaryExpression	1		6753701	1					
ANR	6755286	CompoundStatement		202:55:7624:7624	6753701	3					
ANR	6755287	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6753701	0					
ANR	6755288	ForInit	idx2 = 0 ;	1373:25:42998:43006	6753701	0	True				
ANR	6755289	AssignmentExpression	idx2 = 0		6753701	0		=			
ANR	6755290	Identifier	idx2		6753701	0					
ANR	6755291	PrimaryExpression	0		6753701	1					
ANR	6755292	Condition	idx2 < xDiv	1373:35:43008:43018	6753701	1	True				
ANR	6755293	RelationalExpression	idx2 < xDiv		6753701	0		<			
ANR	6755294	Identifier	idx2		6753701	0					
ANR	6755295	Identifier	xDiv		6753701	1					
ANR	6755296	AssignmentExpression	idx2 += 1	1373:48:43021:43029	6753701	2	True	+=			
ANR	6755297	Identifier	idx2		6753701	0					
ANR	6755298	PrimaryExpression	1		6753701	1					
ANR	6755299	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]	1374:24:43057:43113	6753701	3	True				
ANR	6755300	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]		6753701	0		=			
ANR	6755301	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ]		6753701	0					
ANR	6755302	Identifier	data		6753701	0					
ANR	6755303	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 3		6753701	1		+			
ANR	6755304	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6753701	0		*			
ANR	6755305	AdditiveExpression	idx1 * xDiv + idx2		6753701	0		+			
ANR	6755306	MultiplicativeExpression	idx1 * xDiv		6753701	0		*			
ANR	6755307	Identifier	idx1		6753701	0					
ANR	6755308	Identifier	xDiv		6753701	1					
ANR	6755309	Identifier	idx2		6753701	1					
ANR	6755310	Identifier	num_channels		6753701	1					
ANR	6755311	PrimaryExpression	3		6753701	1					
ANR	6755312	ArrayIndexing	sp [ idx2 ]		6753701	1					
ANR	6755313	Identifier	sp		6753701	0					
ANR	6755314	Identifier	idx2		6753701	1					
ANR	6755315	ExpressionStatement	sp += widthY	1375:20:43135:43147	6753701	1	True				
ANR	6755316	AssignmentExpression	sp += widthY		6753701	0		+=			
ANR	6755317	Identifier	sp		6753701	0					
ANR	6755318	Identifier	widthY		6753701	1					
ANR	6755319	ReturnType	void		6753701	1					
ANR	6755320	Identifier	read_file_YCC		6753701	2					
ANR	6755321	ParameterList	"jxr_image_t image , int mx , int my , int * data"		6753701	3					
ANR	6755322	Parameter	jxr_image_t image	1171:19:35300:35316	6753701	0	True				
ANR	6755323	ParameterType	jxr_image_t		6753701	0					
ANR	6755324	Identifier	image		6753701	1					
ANR	6755325	Parameter	int mx	1171:38:35319:35324	6753701	1	True				
ANR	6755326	ParameterType	int		6753701	0					
ANR	6755327	Identifier	mx		6753701	1					
ANR	6755328	Parameter	int my	1171:46:35327:35332	6753701	2	True				
ANR	6755329	ParameterType	int		6753701	0					
ANR	6755330	Identifier	my		6753701	1					
ANR	6755331	Parameter	int * data	1171:54:35335:35343	6753701	3	True				
ANR	6755332	ParameterType	int *		6753701	0					
ANR	6755333	Identifier	data		6753701	1					
ANR	6755334	CFGEntryNode	ENTRY		6753701		True				
ANR	6755335	CFGExitNode	EXIT		6753701		True				
ANR	6755336	Symbol	num_channels		6753701						
ANR	6755337	Symbol	* sp		6753701						
ANR	6755338	Symbol	con		6753701						
ANR	6755339	Symbol	data		6753701						
ANR	6755340	Symbol	jxr_get_user_data		6753701						
ANR	6755341	Symbol	con -> ncomp		6753701						
ANR	6755342	Symbol	MBheightUV		6753701						
ANR	6755343	Symbol	* xDiv		6753701						
ANR	6755344	Symbol	heightY		6753701						
ANR	6755345	Symbol	widthUV		6753701						
ANR	6755346	Symbol	xDiv		6753701						
ANR	6755347	Symbol	heightUV		6753701						
ANR	6755348	Symbol	* con		6753701						
ANR	6755349	Symbol	offsetY		6753701						
ANR	6755350	Symbol	widthY		6753701						
ANR	6755351	Symbol	* idx2		6753701						
ANR	6755352	Symbol	con -> bpi		6753701						
ANR	6755353	Symbol	* idx1		6753701						
ANR	6755354	Symbol	offsetV		6753701						
ANR	6755355	Symbol	offsetU		6753701						
ANR	6755356	Symbol	sp		6753701						
ANR	6755357	Symbol	con -> wid		6753701						
ANR	6755358	Symbol	sizeUV		6753701						
ANR	6755359	Symbol	SEEK_SET		6753701						
ANR	6755360	Symbol	yDiv		6753701						
ANR	6755361	Symbol	image		6753701						
ANR	6755362	Symbol	MBheightY		6753701						
ANR	6755363	Symbol	con -> hei		6753701						
ANR	6755364	Symbol	idx2		6753701						
ANR	6755365	Symbol	con -> my		6753701						
ANR	6755366	Symbol	idx1		6753701						
ANR	6755367	Symbol	con -> ycc_format		6753701						
ANR	6755368	Symbol	mx		6753701						
ANR	6755369	Symbol	my		6753701						
ANR	6755370	Symbol	* num_channels		6753701						
ANR	6755371	Symbol	offsetA		6753701						
ANR	6755372	Symbol	con -> sf		6753701						
ANR	6755373	Symbol	con -> buf		6753701						
ANR	6755374	Symbol	* data		6753701						
ANR	6755375	Symbol	sizeY		6753701						
ANR	6755376	Function	read_file_CMYK	1382:0:43200:49692							
ANR	6755377	FunctionDef	"read_file_CMYK (jxr_image_t image , int mx , int my , int * data)"		6755376	0					
ANR	6755378	CompoundStatement		1382:66:43266:49692	6755376	0					
ANR	6755379	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	1384:4:43362:43412	6755376	0	True				
ANR	6755380	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		6755376	0					
ANR	6755381	IdentifierDeclType	context *		6755376	0					
ANR	6755382	Identifier	con		6755376	1					
ANR	6755383	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		6755376	2		=			
ANR	6755384	Identifier	con		6755376	0					
ANR	6755385	CastExpression	( context * ) jxr_get_user_data ( image )		6755376	1					
ANR	6755386	CastTarget	context *		6755376	0					
ANR	6755387	CallExpression	jxr_get_user_data ( image )		6755376	1					
ANR	6755388	Callee	jxr_get_user_data		6755376	0					
ANR	6755389	Identifier	jxr_get_user_data		6755376	0					
ANR	6755390	ArgumentList	image		6755376	1					
ANR	6755391	Argument	image		6755376	0					
ANR	6755392	Identifier	image		6755376	0					
ANR	6755393	IdentifierDeclStatement	int num_channels = con -> ncomp ;	1385:4:43418:43447	6755376	1	True				
ANR	6755394	IdentifierDecl	num_channels = con -> ncomp		6755376	0					
ANR	6755395	IdentifierDeclType	int		6755376	0					
ANR	6755396	Identifier	num_channels		6755376	1					
ANR	6755397	AssignmentExpression	num_channels = con -> ncomp		6755376	2		=			
ANR	6755398	Identifier	num_channels		6755376	0					
ANR	6755399	PtrMemberAccess	con -> ncomp		6755376	1					
ANR	6755400	Identifier	con		6755376	0					
ANR	6755401	Identifier	ncomp		6755376	1					
ANR	6755402	IdentifierDeclStatement	"unsigned int width = con -> wid , height = con -> hei ;"	1387:4:43454:43502	6755376	2	True				
ANR	6755403	IdentifierDecl	width = con -> wid		6755376	0					
ANR	6755404	IdentifierDeclType	unsigned int		6755376	0					
ANR	6755405	Identifier	width		6755376	1					
ANR	6755406	AssignmentExpression	width = con -> wid		6755376	2		=			
ANR	6755407	Identifier	width		6755376	0					
ANR	6755408	PtrMemberAccess	con -> wid		6755376	1					
ANR	6755409	Identifier	con		6755376	0					
ANR	6755410	Identifier	wid		6755376	1					
ANR	6755411	IdentifierDecl	height = con -> hei		6755376	1					
ANR	6755412	IdentifierDeclType	unsigned int		6755376	0					
ANR	6755413	Identifier	height		6755376	1					
ANR	6755414	AssignmentExpression	height = con -> hei		6755376	2		=			
ANR	6755415	Identifier	height		6755376	0					
ANR	6755416	PtrMemberAccess	con -> hei		6755376	1					
ANR	6755417	Identifier	con		6755376	0					
ANR	6755418	Identifier	hei		6755376	1					
ANR	6755419	IdentifierDeclStatement	unsigned int MBheight = 16 ;	1388:4:43508:43534	6755376	3	True				
ANR	6755420	IdentifierDecl	MBheight = 16		6755376	0					
ANR	6755421	IdentifierDeclType	unsigned int		6755376	0					
ANR	6755422	Identifier	MBheight		6755376	1					
ANR	6755423	AssignmentExpression	MBheight = 16		6755376	2		=			
ANR	6755424	Identifier	MBheight		6755376	0					
ANR	6755425	PrimaryExpression	16		6755376	1					
ANR	6755426	IdentifierDeclStatement	unsigned int size = width * height ;	1389:4:43540:43574	6755376	4	True				
ANR	6755427	IdentifierDecl	size = width * height		6755376	0					
ANR	6755428	IdentifierDeclType	unsigned int		6755376	0					
ANR	6755429	Identifier	size		6755376	1					
ANR	6755430	AssignmentExpression	size = width * height		6755376	2		=			
ANR	6755431	Identifier	size		6755376	0					
ANR	6755432	MultiplicativeExpression	width * height		6755376	1		*			
ANR	6755433	Identifier	width		6755376	0					
ANR	6755434	Identifier	height		6755376	1					
ANR	6755435	IfStatement	if ( my != con -> my )		6755376	5					
ANR	6755436	Condition	my != con -> my	1391:8:43585:43597	6755376	0	True				
ANR	6755437	EqualityExpression	my != con -> my		6755376	0		!=			
ANR	6755438	Identifier	my		6755376	0					
ANR	6755439	PtrMemberAccess	con -> my		6755376	1					
ANR	6755440	Identifier	con		6755376	0					
ANR	6755441	Identifier	my		6755376	1					
ANR	6755442	CompoundStatement		10:23:333:333	6755376	1					
ANR	6755443	IfStatement	if ( con -> bpi == 8 )		6755376	0					
ANR	6755444	Condition	con -> bpi == 8	1392:12:43614:43626	6755376	0	True				
ANR	6755445	EqualityExpression	con -> bpi == 8		6755376	0		==			
ANR	6755446	PtrMemberAccess	con -> bpi		6755376	0					
ANR	6755447	Identifier	con		6755376	0					
ANR	6755448	Identifier	bpi		6755376	1					
ANR	6755449	PrimaryExpression	8		6755376	1					
ANR	6755450	CompoundStatement		18:12:722:754	6755376	1					
ANR	6755451	IdentifierDeclStatement	unsigned int offsetC = my * MBheight * width + 0 * size ;	1393:12:43643:43698	6755376	0	True				
ANR	6755452	IdentifierDecl	offsetC = my * MBheight * width + 0 * size		6755376	0					
ANR	6755453	IdentifierDeclType	unsigned int		6755376	0					
ANR	6755454	Identifier	offsetC		6755376	1					
ANR	6755455	AssignmentExpression	offsetC = my * MBheight * width + 0 * size		6755376	2		=			
ANR	6755456	Identifier	offsetC		6755376	0					
ANR	6755457	AdditiveExpression	my * MBheight * width + 0 * size		6755376	1		+			
ANR	6755458	MultiplicativeExpression	my * MBheight * width		6755376	0		*			
ANR	6755459	Identifier	my		6755376	0					
ANR	6755460	MultiplicativeExpression	MBheight * width		6755376	1		*			
ANR	6755461	Identifier	MBheight		6755376	0					
ANR	6755462	Identifier	width		6755376	1					
ANR	6755463	MultiplicativeExpression	0 * size		6755376	1		*			
ANR	6755464	PrimaryExpression	0		6755376	0					
ANR	6755465	Identifier	size		6755376	1					
ANR	6755466	IdentifierDeclStatement	unsigned int offsetM = my * MBheight * width + 1 * size ;	1394:12:43712:43767	6755376	1	True				
ANR	6755467	IdentifierDecl	offsetM = my * MBheight * width + 1 * size		6755376	0					
ANR	6755468	IdentifierDeclType	unsigned int		6755376	0					
ANR	6755469	Identifier	offsetM		6755376	1					
ANR	6755470	AssignmentExpression	offsetM = my * MBheight * width + 1 * size		6755376	2		=			
ANR	6755471	Identifier	offsetM		6755376	0					
ANR	6755472	AdditiveExpression	my * MBheight * width + 1 * size		6755376	1		+			
ANR	6755473	MultiplicativeExpression	my * MBheight * width		6755376	0		*			
ANR	6755474	Identifier	my		6755376	0					
ANR	6755475	MultiplicativeExpression	MBheight * width		6755376	1		*			
ANR	6755476	Identifier	MBheight		6755376	0					
ANR	6755477	Identifier	width		6755376	1					
ANR	6755478	MultiplicativeExpression	1 * size		6755376	1		*			
ANR	6755479	PrimaryExpression	1		6755376	0					
ANR	6755480	Identifier	size		6755376	1					
ANR	6755481	IdentifierDeclStatement	unsigned int offsetY = my * MBheight * width + 2 * size ;	1395:12:43781:43836	6755376	2	True				
ANR	6755482	IdentifierDecl	offsetY = my * MBheight * width + 2 * size		6755376	0					
ANR	6755483	IdentifierDeclType	unsigned int		6755376	0					
ANR	6755484	Identifier	offsetY		6755376	1					
ANR	6755485	AssignmentExpression	offsetY = my * MBheight * width + 2 * size		6755376	2		=			
ANR	6755486	Identifier	offsetY		6755376	0					
ANR	6755487	AdditiveExpression	my * MBheight * width + 2 * size		6755376	1		+			
ANR	6755488	MultiplicativeExpression	my * MBheight * width		6755376	0		*			
ANR	6755489	Identifier	my		6755376	0					
ANR	6755490	MultiplicativeExpression	MBheight * width		6755376	1		*			
ANR	6755491	Identifier	MBheight		6755376	0					
ANR	6755492	Identifier	width		6755376	1					
ANR	6755493	MultiplicativeExpression	2 * size		6755376	1		*			
ANR	6755494	PrimaryExpression	2		6755376	0					
ANR	6755495	Identifier	size		6755376	1					
ANR	6755496	IdentifierDeclStatement	unsigned int offsetK = my * MBheight * width + 3 * size ;	1396:12:43850:43905	6755376	3	True				
ANR	6755497	IdentifierDecl	offsetK = my * MBheight * width + 3 * size		6755376	0					
ANR	6755498	IdentifierDeclType	unsigned int		6755376	0					
ANR	6755499	Identifier	offsetK		6755376	1					
ANR	6755500	AssignmentExpression	offsetK = my * MBheight * width + 3 * size		6755376	2		=			
ANR	6755501	Identifier	offsetK		6755376	0					
ANR	6755502	AdditiveExpression	my * MBheight * width + 3 * size		6755376	1		+			
ANR	6755503	MultiplicativeExpression	my * MBheight * width		6755376	0		*			
ANR	6755504	Identifier	my		6755376	0					
ANR	6755505	MultiplicativeExpression	MBheight * width		6755376	1		*			
ANR	6755506	Identifier	MBheight		6755376	0					
ANR	6755507	Identifier	width		6755376	1					
ANR	6755508	MultiplicativeExpression	3 * size		6755376	1		*			
ANR	6755509	PrimaryExpression	3		6755376	0					
ANR	6755510	Identifier	size		6755376	1					
ANR	6755511	IdentifierDeclStatement	unsigned int offsetA = my * MBheight * width + 4 * size ;	1397:12:43919:43974	6755376	4	True				
ANR	6755512	IdentifierDecl	offsetA = my * MBheight * width + 4 * size		6755376	0					
ANR	6755513	IdentifierDeclType	unsigned int		6755376	0					
ANR	6755514	Identifier	offsetA		6755376	1					
ANR	6755515	AssignmentExpression	offsetA = my * MBheight * width + 4 * size		6755376	2		=			
ANR	6755516	Identifier	offsetA		6755376	0					
ANR	6755517	AdditiveExpression	my * MBheight * width + 4 * size		6755376	1		+			
ANR	6755518	MultiplicativeExpression	my * MBheight * width		6755376	0		*			
ANR	6755519	Identifier	my		6755376	0					
ANR	6755520	MultiplicativeExpression	MBheight * width		6755376	1		*			
ANR	6755521	Identifier	MBheight		6755376	0					
ANR	6755522	Identifier	width		6755376	1					
ANR	6755523	MultiplicativeExpression	4 * size		6755376	1		*			
ANR	6755524	PrimaryExpression	4		6755376	0					
ANR	6755525	Identifier	size		6755376	1					
ANR	6755526	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf ;	1399:12:43989:44021	6755376	5	True				
ANR	6755527	IdentifierDecl	* sp = ( uint8_t * ) con -> buf		6755376	0					
ANR	6755528	IdentifierDeclType	uint8_t *		6755376	0					
ANR	6755529	Identifier	sp		6755376	1					
ANR	6755530	AssignmentExpression	* sp = ( uint8_t * ) con -> buf		6755376	2		=			
ANR	6755531	Identifier	sp		6755376	0					
ANR	6755532	CastExpression	( uint8_t * ) con -> buf		6755376	1					
ANR	6755533	CastTarget	uint8_t *		6755376	0					
ANR	6755534	PtrMemberAccess	con -> buf		6755376	1					
ANR	6755535	Identifier	con		6755376	0					
ANR	6755536	Identifier	buf		6755376	1					
ANR	6755537	ExpressionStatement	"seek_file ( con , offsetC , SEEK_SET )"	1401:12:44036:44069	6755376	6	True				
ANR	6755538	CallExpression	"seek_file ( con , offsetC , SEEK_SET )"		6755376	0					
ANR	6755539	Callee	seek_file		6755376	0					
ANR	6755540	Identifier	seek_file		6755376	0					
ANR	6755541	ArgumentList	con		6755376	1					
ANR	6755542	Argument	con		6755376	0					
ANR	6755543	Identifier	con		6755376	0					
ANR	6755544	Argument	offsetC		6755376	1					
ANR	6755545	Identifier	offsetC		6755376	0					
ANR	6755546	Argument	SEEK_SET		6755376	2					
ANR	6755547	Identifier	SEEK_SET		6755376	0					
ANR	6755548	ExpressionStatement	"memset ( sp , 0 , width * MBheight )"	1402:12:44083:44114	6755376	7	True				
ANR	6755549	CallExpression	"memset ( sp , 0 , width * MBheight )"		6755376	0					
ANR	6755550	Callee	memset		6755376	0					
ANR	6755551	Identifier	memset		6755376	0					
ANR	6755552	ArgumentList	sp		6755376	1					
ANR	6755553	Argument	sp		6755376	0					
ANR	6755554	Identifier	sp		6755376	0					
ANR	6755555	Argument	0		6755376	1					
ANR	6755556	PrimaryExpression	0		6755376	0					
ANR	6755557	Argument	width * MBheight		6755376	2					
ANR	6755558	MultiplicativeExpression	width * MBheight		6755376	0		*			
ANR	6755559	Identifier	width		6755376	0					
ANR	6755560	Identifier	MBheight		6755376	1					
ANR	6755561	ExpressionStatement	"read_data ( con , sp , 1 , width * MBheight )"	1403:12:44128:44167	6755376	8	True				
ANR	6755562	CallExpression	"read_data ( con , sp , 1 , width * MBheight )"		6755376	0					
ANR	6755563	Callee	read_data		6755376	0					
ANR	6755564	Identifier	read_data		6755376	0					
ANR	6755565	ArgumentList	con		6755376	1					
ANR	6755566	Argument	con		6755376	0					
ANR	6755567	Identifier	con		6755376	0					
ANR	6755568	Argument	sp		6755376	1					
ANR	6755569	Identifier	sp		6755376	0					
ANR	6755570	Argument	1		6755376	2					
ANR	6755571	PrimaryExpression	1		6755376	0					
ANR	6755572	Argument	width * MBheight		6755376	3					
ANR	6755573	MultiplicativeExpression	width * MBheight		6755376	0		*			
ANR	6755574	Identifier	width		6755376	0					
ANR	6755575	Identifier	MBheight		6755376	1					
ANR	6755576	ExpressionStatement	sp += width * MBheight	1404:12:44181:44203	6755376	9	True				
ANR	6755577	AssignmentExpression	sp += width * MBheight		6755376	0		+=			
ANR	6755578	Identifier	sp		6755376	0					
ANR	6755579	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6755580	Identifier	width		6755376	0					
ANR	6755581	Identifier	MBheight		6755376	1					
ANR	6755582	ExpressionStatement	"seek_file ( con , offsetM , SEEK_SET )"	1406:12:44218:44251	6755376	10	True				
ANR	6755583	CallExpression	"seek_file ( con , offsetM , SEEK_SET )"		6755376	0					
ANR	6755584	Callee	seek_file		6755376	0					
ANR	6755585	Identifier	seek_file		6755376	0					
ANR	6755586	ArgumentList	con		6755376	1					
ANR	6755587	Argument	con		6755376	0					
ANR	6755588	Identifier	con		6755376	0					
ANR	6755589	Argument	offsetM		6755376	1					
ANR	6755590	Identifier	offsetM		6755376	0					
ANR	6755591	Argument	SEEK_SET		6755376	2					
ANR	6755592	Identifier	SEEK_SET		6755376	0					
ANR	6755593	ExpressionStatement	"memset ( sp , 0 , width * MBheight )"	1407:12:44265:44296	6755376	11	True				
ANR	6755594	CallExpression	"memset ( sp , 0 , width * MBheight )"		6755376	0					
ANR	6755595	Callee	memset		6755376	0					
ANR	6755596	Identifier	memset		6755376	0					
ANR	6755597	ArgumentList	sp		6755376	1					
ANR	6755598	Argument	sp		6755376	0					
ANR	6755599	Identifier	sp		6755376	0					
ANR	6755600	Argument	0		6755376	1					
ANR	6755601	PrimaryExpression	0		6755376	0					
ANR	6755602	Argument	width * MBheight		6755376	2					
ANR	6755603	MultiplicativeExpression	width * MBheight		6755376	0		*			
ANR	6755604	Identifier	width		6755376	0					
ANR	6755605	Identifier	MBheight		6755376	1					
ANR	6755606	ExpressionStatement	"read_data ( con , sp , 1 , width * MBheight )"	1408:12:44310:44349	6755376	12	True				
ANR	6755607	CallExpression	"read_data ( con , sp , 1 , width * MBheight )"		6755376	0					
ANR	6755608	Callee	read_data		6755376	0					
ANR	6755609	Identifier	read_data		6755376	0					
ANR	6755610	ArgumentList	con		6755376	1					
ANR	6755611	Argument	con		6755376	0					
ANR	6755612	Identifier	con		6755376	0					
ANR	6755613	Argument	sp		6755376	1					
ANR	6755614	Identifier	sp		6755376	0					
ANR	6755615	Argument	1		6755376	2					
ANR	6755616	PrimaryExpression	1		6755376	0					
ANR	6755617	Argument	width * MBheight		6755376	3					
ANR	6755618	MultiplicativeExpression	width * MBheight		6755376	0		*			
ANR	6755619	Identifier	width		6755376	0					
ANR	6755620	Identifier	MBheight		6755376	1					
ANR	6755621	ExpressionStatement	sp += width * MBheight	1409:12:44363:44385	6755376	13	True				
ANR	6755622	AssignmentExpression	sp += width * MBheight		6755376	0		+=			
ANR	6755623	Identifier	sp		6755376	0					
ANR	6755624	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6755625	Identifier	width		6755376	0					
ANR	6755626	Identifier	MBheight		6755376	1					
ANR	6755627	ExpressionStatement	"seek_file ( con , offsetY , SEEK_SET )"	1411:12:44400:44433	6755376	14	True				
ANR	6755628	CallExpression	"seek_file ( con , offsetY , SEEK_SET )"		6755376	0					
ANR	6755629	Callee	seek_file		6755376	0					
ANR	6755630	Identifier	seek_file		6755376	0					
ANR	6755631	ArgumentList	con		6755376	1					
ANR	6755632	Argument	con		6755376	0					
ANR	6755633	Identifier	con		6755376	0					
ANR	6755634	Argument	offsetY		6755376	1					
ANR	6755635	Identifier	offsetY		6755376	0					
ANR	6755636	Argument	SEEK_SET		6755376	2					
ANR	6755637	Identifier	SEEK_SET		6755376	0					
ANR	6755638	ExpressionStatement	"memset ( sp , 0 , width * MBheight )"	1412:12:44447:44478	6755376	15	True				
ANR	6755639	CallExpression	"memset ( sp , 0 , width * MBheight )"		6755376	0					
ANR	6755640	Callee	memset		6755376	0					
ANR	6755641	Identifier	memset		6755376	0					
ANR	6755642	ArgumentList	sp		6755376	1					
ANR	6755643	Argument	sp		6755376	0					
ANR	6755644	Identifier	sp		6755376	0					
ANR	6755645	Argument	0		6755376	1					
ANR	6755646	PrimaryExpression	0		6755376	0					
ANR	6755647	Argument	width * MBheight		6755376	2					
ANR	6755648	MultiplicativeExpression	width * MBheight		6755376	0		*			
ANR	6755649	Identifier	width		6755376	0					
ANR	6755650	Identifier	MBheight		6755376	1					
ANR	6755651	ExpressionStatement	"read_data ( con , sp , 1 , width * MBheight )"	1413:12:44492:44531	6755376	16	True				
ANR	6755652	CallExpression	"read_data ( con , sp , 1 , width * MBheight )"		6755376	0					
ANR	6755653	Callee	read_data		6755376	0					
ANR	6755654	Identifier	read_data		6755376	0					
ANR	6755655	ArgumentList	con		6755376	1					
ANR	6755656	Argument	con		6755376	0					
ANR	6755657	Identifier	con		6755376	0					
ANR	6755658	Argument	sp		6755376	1					
ANR	6755659	Identifier	sp		6755376	0					
ANR	6755660	Argument	1		6755376	2					
ANR	6755661	PrimaryExpression	1		6755376	0					
ANR	6755662	Argument	width * MBheight		6755376	3					
ANR	6755663	MultiplicativeExpression	width * MBheight		6755376	0		*			
ANR	6755664	Identifier	width		6755376	0					
ANR	6755665	Identifier	MBheight		6755376	1					
ANR	6755666	ExpressionStatement	sp += width * MBheight	1414:12:44545:44567	6755376	17	True				
ANR	6755667	AssignmentExpression	sp += width * MBheight		6755376	0		+=			
ANR	6755668	Identifier	sp		6755376	0					
ANR	6755669	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6755670	Identifier	width		6755376	0					
ANR	6755671	Identifier	MBheight		6755376	1					
ANR	6755672	ExpressionStatement	"seek_file ( con , offsetK , SEEK_SET )"	1416:12:44582:44615	6755376	18	True				
ANR	6755673	CallExpression	"seek_file ( con , offsetK , SEEK_SET )"		6755376	0					
ANR	6755674	Callee	seek_file		6755376	0					
ANR	6755675	Identifier	seek_file		6755376	0					
ANR	6755676	ArgumentList	con		6755376	1					
ANR	6755677	Argument	con		6755376	0					
ANR	6755678	Identifier	con		6755376	0					
ANR	6755679	Argument	offsetK		6755376	1					
ANR	6755680	Identifier	offsetK		6755376	0					
ANR	6755681	Argument	SEEK_SET		6755376	2					
ANR	6755682	Identifier	SEEK_SET		6755376	0					
ANR	6755683	ExpressionStatement	"memset ( sp , 0 , width * MBheight )"	1417:12:44629:44660	6755376	19	True				
ANR	6755684	CallExpression	"memset ( sp , 0 , width * MBheight )"		6755376	0					
ANR	6755685	Callee	memset		6755376	0					
ANR	6755686	Identifier	memset		6755376	0					
ANR	6755687	ArgumentList	sp		6755376	1					
ANR	6755688	Argument	sp		6755376	0					
ANR	6755689	Identifier	sp		6755376	0					
ANR	6755690	Argument	0		6755376	1					
ANR	6755691	PrimaryExpression	0		6755376	0					
ANR	6755692	Argument	width * MBheight		6755376	2					
ANR	6755693	MultiplicativeExpression	width * MBheight		6755376	0		*			
ANR	6755694	Identifier	width		6755376	0					
ANR	6755695	Identifier	MBheight		6755376	1					
ANR	6755696	ExpressionStatement	"read_data ( con , sp , 1 , width * MBheight )"	1418:12:44674:44713	6755376	20	True				
ANR	6755697	CallExpression	"read_data ( con , sp , 1 , width * MBheight )"		6755376	0					
ANR	6755698	Callee	read_data		6755376	0					
ANR	6755699	Identifier	read_data		6755376	0					
ANR	6755700	ArgumentList	con		6755376	1					
ANR	6755701	Argument	con		6755376	0					
ANR	6755702	Identifier	con		6755376	0					
ANR	6755703	Argument	sp		6755376	1					
ANR	6755704	Identifier	sp		6755376	0					
ANR	6755705	Argument	1		6755376	2					
ANR	6755706	PrimaryExpression	1		6755376	0					
ANR	6755707	Argument	width * MBheight		6755376	3					
ANR	6755708	MultiplicativeExpression	width * MBheight		6755376	0		*			
ANR	6755709	Identifier	width		6755376	0					
ANR	6755710	Identifier	MBheight		6755376	1					
ANR	6755711	ExpressionStatement	sp += width * MBheight	1419:12:44727:44749	6755376	21	True				
ANR	6755712	AssignmentExpression	sp += width * MBheight		6755376	0		+=			
ANR	6755713	Identifier	sp		6755376	0					
ANR	6755714	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6755715	Identifier	width		6755376	0					
ANR	6755716	Identifier	MBheight		6755376	1					
ANR	6755717	IfStatement	if ( con -> ncomp == 5 )		6755376	22					
ANR	6755718	Condition	con -> ncomp == 5	1421:16:44768:44782	6755376	0	True				
ANR	6755719	EqualityExpression	con -> ncomp == 5		6755376	0		==			
ANR	6755720	PtrMemberAccess	con -> ncomp		6755376	0					
ANR	6755721	Identifier	con		6755376	0					
ANR	6755722	Identifier	ncomp		6755376	1					
ANR	6755723	PrimaryExpression	5		6755376	1					
ANR	6755724	CompoundStatement		40:33:1518:1518	6755376	1					
ANR	6755725	ExpressionStatement	"seek_file ( con , offsetA , SEEK_SET )"	1422:16:44803:44836	6755376	0	True				
ANR	6755726	CallExpression	"seek_file ( con , offsetA , SEEK_SET )"		6755376	0					
ANR	6755727	Callee	seek_file		6755376	0					
ANR	6755728	Identifier	seek_file		6755376	0					
ANR	6755729	ArgumentList	con		6755376	1					
ANR	6755730	Argument	con		6755376	0					
ANR	6755731	Identifier	con		6755376	0					
ANR	6755732	Argument	offsetA		6755376	1					
ANR	6755733	Identifier	offsetA		6755376	0					
ANR	6755734	Argument	SEEK_SET		6755376	2					
ANR	6755735	Identifier	SEEK_SET		6755376	0					
ANR	6755736	ExpressionStatement	"memset ( sp , 0 , width * MBheight )"	1423:16:44854:44885	6755376	1	True				
ANR	6755737	CallExpression	"memset ( sp , 0 , width * MBheight )"		6755376	0					
ANR	6755738	Callee	memset		6755376	0					
ANR	6755739	Identifier	memset		6755376	0					
ANR	6755740	ArgumentList	sp		6755376	1					
ANR	6755741	Argument	sp		6755376	0					
ANR	6755742	Identifier	sp		6755376	0					
ANR	6755743	Argument	0		6755376	1					
ANR	6755744	PrimaryExpression	0		6755376	0					
ANR	6755745	Argument	width * MBheight		6755376	2					
ANR	6755746	MultiplicativeExpression	width * MBheight		6755376	0		*			
ANR	6755747	Identifier	width		6755376	0					
ANR	6755748	Identifier	MBheight		6755376	1					
ANR	6755749	ExpressionStatement	"read_data ( con , sp , 1 , width * MBheight )"	1424:16:44903:44942	6755376	2	True				
ANR	6755750	CallExpression	"read_data ( con , sp , 1 , width * MBheight )"		6755376	0					
ANR	6755751	Callee	read_data		6755376	0					
ANR	6755752	Identifier	read_data		6755376	0					
ANR	6755753	ArgumentList	con		6755376	1					
ANR	6755754	Argument	con		6755376	0					
ANR	6755755	Identifier	con		6755376	0					
ANR	6755756	Argument	sp		6755376	1					
ANR	6755757	Identifier	sp		6755376	0					
ANR	6755758	Argument	1		6755376	2					
ANR	6755759	PrimaryExpression	1		6755376	0					
ANR	6755760	Argument	width * MBheight		6755376	3					
ANR	6755761	MultiplicativeExpression	width * MBheight		6755376	0		*			
ANR	6755762	Identifier	width		6755376	0					
ANR	6755763	Identifier	MBheight		6755376	1					
ANR	6755764	ExpressionStatement	sp += width * MBheight	1425:16:44960:44982	6755376	3	True				
ANR	6755765	AssignmentExpression	sp += width * MBheight		6755376	0		+=			
ANR	6755766	Identifier	sp		6755376	0					
ANR	6755767	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6755768	Identifier	width		6755376	0					
ANR	6755769	Identifier	MBheight		6755376	1					
ANR	6755770	ElseStatement	else		6755376	0					
ANR	6755771	IfStatement	if ( con -> bpi == 16 )		6755376	0					
ANR	6755772	Condition	con -> bpi == 16	1428:17:45025:45038	6755376	0	True				
ANR	6755773	EqualityExpression	con -> bpi == 16		6755376	0		==			
ANR	6755774	PtrMemberAccess	con -> bpi		6755376	0					
ANR	6755775	Identifier	con		6755376	0					
ANR	6755776	Identifier	bpi		6755376	1					
ANR	6755777	PrimaryExpression	16		6755376	1					
ANR	6755778	CompoundStatement		54:12:2164:2198	6755376	1					
ANR	6755779	IdentifierDeclStatement	unsigned int offsetC = 2 * ( my * MBheight * width + 0 * size ) ;	1429:12:45055:45116	6755376	0	True				
ANR	6755780	IdentifierDecl	offsetC = 2 * ( my * MBheight * width + 0 * size )		6755376	0					
ANR	6755781	IdentifierDeclType	unsigned int		6755376	0					
ANR	6755782	Identifier	offsetC		6755376	1					
ANR	6755783	AssignmentExpression	offsetC = 2 * ( my * MBheight * width + 0 * size )		6755376	2		=			
ANR	6755784	Identifier	offsetC		6755376	0					
ANR	6755785	MultiplicativeExpression	2 * ( my * MBheight * width + 0 * size )		6755376	1		*			
ANR	6755786	PrimaryExpression	2		6755376	0					
ANR	6755787	AdditiveExpression	my * MBheight * width + 0 * size		6755376	1		+			
ANR	6755788	MultiplicativeExpression	my * MBheight * width		6755376	0		*			
ANR	6755789	Identifier	my		6755376	0					
ANR	6755790	MultiplicativeExpression	MBheight * width		6755376	1		*			
ANR	6755791	Identifier	MBheight		6755376	0					
ANR	6755792	Identifier	width		6755376	1					
ANR	6755793	MultiplicativeExpression	0 * size		6755376	1		*			
ANR	6755794	PrimaryExpression	0		6755376	0					
ANR	6755795	Identifier	size		6755376	1					
ANR	6755796	IdentifierDeclStatement	unsigned int offsetM = 2 * ( my * MBheight * width + 1 * size ) ;	1430:12:45130:45191	6755376	1	True				
ANR	6755797	IdentifierDecl	offsetM = 2 * ( my * MBheight * width + 1 * size )		6755376	0					
ANR	6755798	IdentifierDeclType	unsigned int		6755376	0					
ANR	6755799	Identifier	offsetM		6755376	1					
ANR	6755800	AssignmentExpression	offsetM = 2 * ( my * MBheight * width + 1 * size )		6755376	2		=			
ANR	6755801	Identifier	offsetM		6755376	0					
ANR	6755802	MultiplicativeExpression	2 * ( my * MBheight * width + 1 * size )		6755376	1		*			
ANR	6755803	PrimaryExpression	2		6755376	0					
ANR	6755804	AdditiveExpression	my * MBheight * width + 1 * size		6755376	1		+			
ANR	6755805	MultiplicativeExpression	my * MBheight * width		6755376	0		*			
ANR	6755806	Identifier	my		6755376	0					
ANR	6755807	MultiplicativeExpression	MBheight * width		6755376	1		*			
ANR	6755808	Identifier	MBheight		6755376	0					
ANR	6755809	Identifier	width		6755376	1					
ANR	6755810	MultiplicativeExpression	1 * size		6755376	1		*			
ANR	6755811	PrimaryExpression	1		6755376	0					
ANR	6755812	Identifier	size		6755376	1					
ANR	6755813	IdentifierDeclStatement	unsigned int offsetY = 2 * ( my * MBheight * width + 2 * size ) ;	1431:12:45205:45266	6755376	2	True				
ANR	6755814	IdentifierDecl	offsetY = 2 * ( my * MBheight * width + 2 * size )		6755376	0					
ANR	6755815	IdentifierDeclType	unsigned int		6755376	0					
ANR	6755816	Identifier	offsetY		6755376	1					
ANR	6755817	AssignmentExpression	offsetY = 2 * ( my * MBheight * width + 2 * size )		6755376	2		=			
ANR	6755818	Identifier	offsetY		6755376	0					
ANR	6755819	MultiplicativeExpression	2 * ( my * MBheight * width + 2 * size )		6755376	1		*			
ANR	6755820	PrimaryExpression	2		6755376	0					
ANR	6755821	AdditiveExpression	my * MBheight * width + 2 * size		6755376	1		+			
ANR	6755822	MultiplicativeExpression	my * MBheight * width		6755376	0		*			
ANR	6755823	Identifier	my		6755376	0					
ANR	6755824	MultiplicativeExpression	MBheight * width		6755376	1		*			
ANR	6755825	Identifier	MBheight		6755376	0					
ANR	6755826	Identifier	width		6755376	1					
ANR	6755827	MultiplicativeExpression	2 * size		6755376	1		*			
ANR	6755828	PrimaryExpression	2		6755376	0					
ANR	6755829	Identifier	size		6755376	1					
ANR	6755830	IdentifierDeclStatement	unsigned int offsetK = 2 * ( my * MBheight * width + 3 * size ) ;	1432:12:45280:45341	6755376	3	True				
ANR	6755831	IdentifierDecl	offsetK = 2 * ( my * MBheight * width + 3 * size )		6755376	0					
ANR	6755832	IdentifierDeclType	unsigned int		6755376	0					
ANR	6755833	Identifier	offsetK		6755376	1					
ANR	6755834	AssignmentExpression	offsetK = 2 * ( my * MBheight * width + 3 * size )		6755376	2		=			
ANR	6755835	Identifier	offsetK		6755376	0					
ANR	6755836	MultiplicativeExpression	2 * ( my * MBheight * width + 3 * size )		6755376	1		*			
ANR	6755837	PrimaryExpression	2		6755376	0					
ANR	6755838	AdditiveExpression	my * MBheight * width + 3 * size		6755376	1		+			
ANR	6755839	MultiplicativeExpression	my * MBheight * width		6755376	0		*			
ANR	6755840	Identifier	my		6755376	0					
ANR	6755841	MultiplicativeExpression	MBheight * width		6755376	1		*			
ANR	6755842	Identifier	MBheight		6755376	0					
ANR	6755843	Identifier	width		6755376	1					
ANR	6755844	MultiplicativeExpression	3 * size		6755376	1		*			
ANR	6755845	PrimaryExpression	3		6755376	0					
ANR	6755846	Identifier	size		6755376	1					
ANR	6755847	IdentifierDeclStatement	unsigned int offsetA = 2 * ( my * MBheight * width + 4 * size ) ;	1433:12:45355:45416	6755376	4	True				
ANR	6755848	IdentifierDecl	offsetA = 2 * ( my * MBheight * width + 4 * size )		6755376	0					
ANR	6755849	IdentifierDeclType	unsigned int		6755376	0					
ANR	6755850	Identifier	offsetA		6755376	1					
ANR	6755851	AssignmentExpression	offsetA = 2 * ( my * MBheight * width + 4 * size )		6755376	2		=			
ANR	6755852	Identifier	offsetA		6755376	0					
ANR	6755853	MultiplicativeExpression	2 * ( my * MBheight * width + 4 * size )		6755376	1		*			
ANR	6755854	PrimaryExpression	2		6755376	0					
ANR	6755855	AdditiveExpression	my * MBheight * width + 4 * size		6755376	1		+			
ANR	6755856	MultiplicativeExpression	my * MBheight * width		6755376	0		*			
ANR	6755857	Identifier	my		6755376	0					
ANR	6755858	MultiplicativeExpression	MBheight * width		6755376	1		*			
ANR	6755859	Identifier	MBheight		6755376	0					
ANR	6755860	Identifier	width		6755376	1					
ANR	6755861	MultiplicativeExpression	4 * size		6755376	1		*			
ANR	6755862	PrimaryExpression	4		6755376	0					
ANR	6755863	Identifier	size		6755376	1					
ANR	6755864	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf ;	1435:12:45431:45465	6755376	5	True				
ANR	6755865	IdentifierDecl	* sp = ( uint16_t * ) con -> buf		6755376	0					
ANR	6755866	IdentifierDeclType	uint16_t *		6755376	0					
ANR	6755867	Identifier	sp		6755376	1					
ANR	6755868	AssignmentExpression	* sp = ( uint16_t * ) con -> buf		6755376	2		=			
ANR	6755869	Identifier	sp		6755376	0					
ANR	6755870	CastExpression	( uint16_t * ) con -> buf		6755376	1					
ANR	6755871	CastTarget	uint16_t *		6755376	0					
ANR	6755872	PtrMemberAccess	con -> buf		6755376	1					
ANR	6755873	Identifier	con		6755376	0					
ANR	6755874	Identifier	buf		6755376	1					
ANR	6755875	ExpressionStatement	"seek_file ( con , offsetC , SEEK_SET )"	1437:12:45480:45513	6755376	6	True				
ANR	6755876	CallExpression	"seek_file ( con , offsetC , SEEK_SET )"		6755376	0					
ANR	6755877	Callee	seek_file		6755376	0					
ANR	6755878	Identifier	seek_file		6755376	0					
ANR	6755879	ArgumentList	con		6755376	1					
ANR	6755880	Argument	con		6755376	0					
ANR	6755881	Identifier	con		6755376	0					
ANR	6755882	Argument	offsetC		6755376	1					
ANR	6755883	Identifier	offsetC		6755376	0					
ANR	6755884	Argument	SEEK_SET		6755376	2					
ANR	6755885	Identifier	SEEK_SET		6755376	0					
ANR	6755886	ExpressionStatement	"memset ( sp , 0 , 2 * width * MBheight )"	1438:12:45527:45562	6755376	7	True				
ANR	6755887	CallExpression	"memset ( sp , 0 , 2 * width * MBheight )"		6755376	0					
ANR	6755888	Callee	memset		6755376	0					
ANR	6755889	Identifier	memset		6755376	0					
ANR	6755890	ArgumentList	sp		6755376	1					
ANR	6755891	Argument	sp		6755376	0					
ANR	6755892	Identifier	sp		6755376	0					
ANR	6755893	Argument	0		6755376	1					
ANR	6755894	PrimaryExpression	0		6755376	0					
ANR	6755895	Argument	2 * width * MBheight		6755376	2					
ANR	6755896	MultiplicativeExpression	2 * width * MBheight		6755376	0		*			
ANR	6755897	PrimaryExpression	2		6755376	0					
ANR	6755898	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6755899	Identifier	width		6755376	0					
ANR	6755900	Identifier	MBheight		6755376	1					
ANR	6755901	ExpressionStatement	"read_data ( con , sp , 2 , width * MBheight )"	1439:12:45576:45615	6755376	8	True				
ANR	6755902	CallExpression	"read_data ( con , sp , 2 , width * MBheight )"		6755376	0					
ANR	6755903	Callee	read_data		6755376	0					
ANR	6755904	Identifier	read_data		6755376	0					
ANR	6755905	ArgumentList	con		6755376	1					
ANR	6755906	Argument	con		6755376	0					
ANR	6755907	Identifier	con		6755376	0					
ANR	6755908	Argument	sp		6755376	1					
ANR	6755909	Identifier	sp		6755376	0					
ANR	6755910	Argument	2		6755376	2					
ANR	6755911	PrimaryExpression	2		6755376	0					
ANR	6755912	Argument	width * MBheight		6755376	3					
ANR	6755913	MultiplicativeExpression	width * MBheight		6755376	0		*			
ANR	6755914	Identifier	width		6755376	0					
ANR	6755915	Identifier	MBheight		6755376	1					
ANR	6755916	ExpressionStatement	sp += width * MBheight	1440:12:45629:45651	6755376	9	True				
ANR	6755917	AssignmentExpression	sp += width * MBheight		6755376	0		+=			
ANR	6755918	Identifier	sp		6755376	0					
ANR	6755919	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6755920	Identifier	width		6755376	0					
ANR	6755921	Identifier	MBheight		6755376	1					
ANR	6755922	ExpressionStatement	"seek_file ( con , offsetM , SEEK_SET )"	1442:12:45666:45699	6755376	10	True				
ANR	6755923	CallExpression	"seek_file ( con , offsetM , SEEK_SET )"		6755376	0					
ANR	6755924	Callee	seek_file		6755376	0					
ANR	6755925	Identifier	seek_file		6755376	0					
ANR	6755926	ArgumentList	con		6755376	1					
ANR	6755927	Argument	con		6755376	0					
ANR	6755928	Identifier	con		6755376	0					
ANR	6755929	Argument	offsetM		6755376	1					
ANR	6755930	Identifier	offsetM		6755376	0					
ANR	6755931	Argument	SEEK_SET		6755376	2					
ANR	6755932	Identifier	SEEK_SET		6755376	0					
ANR	6755933	ExpressionStatement	"memset ( sp , 0 , 2 * width * MBheight )"	1443:12:45713:45748	6755376	11	True				
ANR	6755934	CallExpression	"memset ( sp , 0 , 2 * width * MBheight )"		6755376	0					
ANR	6755935	Callee	memset		6755376	0					
ANR	6755936	Identifier	memset		6755376	0					
ANR	6755937	ArgumentList	sp		6755376	1					
ANR	6755938	Argument	sp		6755376	0					
ANR	6755939	Identifier	sp		6755376	0					
ANR	6755940	Argument	0		6755376	1					
ANR	6755941	PrimaryExpression	0		6755376	0					
ANR	6755942	Argument	2 * width * MBheight		6755376	2					
ANR	6755943	MultiplicativeExpression	2 * width * MBheight		6755376	0		*			
ANR	6755944	PrimaryExpression	2		6755376	0					
ANR	6755945	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6755946	Identifier	width		6755376	0					
ANR	6755947	Identifier	MBheight		6755376	1					
ANR	6755948	ExpressionStatement	"read_data ( con , sp , 2 , width * MBheight )"	1444:12:45762:45801	6755376	12	True				
ANR	6755949	CallExpression	"read_data ( con , sp , 2 , width * MBheight )"		6755376	0					
ANR	6755950	Callee	read_data		6755376	0					
ANR	6755951	Identifier	read_data		6755376	0					
ANR	6755952	ArgumentList	con		6755376	1					
ANR	6755953	Argument	con		6755376	0					
ANR	6755954	Identifier	con		6755376	0					
ANR	6755955	Argument	sp		6755376	1					
ANR	6755956	Identifier	sp		6755376	0					
ANR	6755957	Argument	2		6755376	2					
ANR	6755958	PrimaryExpression	2		6755376	0					
ANR	6755959	Argument	width * MBheight		6755376	3					
ANR	6755960	MultiplicativeExpression	width * MBheight		6755376	0		*			
ANR	6755961	Identifier	width		6755376	0					
ANR	6755962	Identifier	MBheight		6755376	1					
ANR	6755963	ExpressionStatement	sp += width * MBheight	1445:12:45815:45837	6755376	13	True				
ANR	6755964	AssignmentExpression	sp += width * MBheight		6755376	0		+=			
ANR	6755965	Identifier	sp		6755376	0					
ANR	6755966	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6755967	Identifier	width		6755376	0					
ANR	6755968	Identifier	MBheight		6755376	1					
ANR	6755969	ExpressionStatement	"seek_file ( con , offsetY , SEEK_SET )"	1447:12:45852:45885	6755376	14	True				
ANR	6755970	CallExpression	"seek_file ( con , offsetY , SEEK_SET )"		6755376	0					
ANR	6755971	Callee	seek_file		6755376	0					
ANR	6755972	Identifier	seek_file		6755376	0					
ANR	6755973	ArgumentList	con		6755376	1					
ANR	6755974	Argument	con		6755376	0					
ANR	6755975	Identifier	con		6755376	0					
ANR	6755976	Argument	offsetY		6755376	1					
ANR	6755977	Identifier	offsetY		6755376	0					
ANR	6755978	Argument	SEEK_SET		6755376	2					
ANR	6755979	Identifier	SEEK_SET		6755376	0					
ANR	6755980	ExpressionStatement	"memset ( sp , 0 , 2 * width * MBheight )"	1448:12:45899:45934	6755376	15	True				
ANR	6755981	CallExpression	"memset ( sp , 0 , 2 * width * MBheight )"		6755376	0					
ANR	6755982	Callee	memset		6755376	0					
ANR	6755983	Identifier	memset		6755376	0					
ANR	6755984	ArgumentList	sp		6755376	1					
ANR	6755985	Argument	sp		6755376	0					
ANR	6755986	Identifier	sp		6755376	0					
ANR	6755987	Argument	0		6755376	1					
ANR	6755988	PrimaryExpression	0		6755376	0					
ANR	6755989	Argument	2 * width * MBheight		6755376	2					
ANR	6755990	MultiplicativeExpression	2 * width * MBheight		6755376	0		*			
ANR	6755991	PrimaryExpression	2		6755376	0					
ANR	6755992	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6755993	Identifier	width		6755376	0					
ANR	6755994	Identifier	MBheight		6755376	1					
ANR	6755995	ExpressionStatement	"read_data ( con , sp , 2 , width * MBheight )"	1449:12:45948:45987	6755376	16	True				
ANR	6755996	CallExpression	"read_data ( con , sp , 2 , width * MBheight )"		6755376	0					
ANR	6755997	Callee	read_data		6755376	0					
ANR	6755998	Identifier	read_data		6755376	0					
ANR	6755999	ArgumentList	con		6755376	1					
ANR	6756000	Argument	con		6755376	0					
ANR	6756001	Identifier	con		6755376	0					
ANR	6756002	Argument	sp		6755376	1					
ANR	6756003	Identifier	sp		6755376	0					
ANR	6756004	Argument	2		6755376	2					
ANR	6756005	PrimaryExpression	2		6755376	0					
ANR	6756006	Argument	width * MBheight		6755376	3					
ANR	6756007	MultiplicativeExpression	width * MBheight		6755376	0		*			
ANR	6756008	Identifier	width		6755376	0					
ANR	6756009	Identifier	MBheight		6755376	1					
ANR	6756010	ExpressionStatement	sp += width * MBheight	1450:12:46001:46023	6755376	17	True				
ANR	6756011	AssignmentExpression	sp += width * MBheight		6755376	0		+=			
ANR	6756012	Identifier	sp		6755376	0					
ANR	6756013	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6756014	Identifier	width		6755376	0					
ANR	6756015	Identifier	MBheight		6755376	1					
ANR	6756016	ExpressionStatement	"seek_file ( con , offsetK , SEEK_SET )"	1452:12:46038:46071	6755376	18	True				
ANR	6756017	CallExpression	"seek_file ( con , offsetK , SEEK_SET )"		6755376	0					
ANR	6756018	Callee	seek_file		6755376	0					
ANR	6756019	Identifier	seek_file		6755376	0					
ANR	6756020	ArgumentList	con		6755376	1					
ANR	6756021	Argument	con		6755376	0					
ANR	6756022	Identifier	con		6755376	0					
ANR	6756023	Argument	offsetK		6755376	1					
ANR	6756024	Identifier	offsetK		6755376	0					
ANR	6756025	Argument	SEEK_SET		6755376	2					
ANR	6756026	Identifier	SEEK_SET		6755376	0					
ANR	6756027	ExpressionStatement	"memset ( sp , 0 , 2 * width * MBheight )"	1453:12:46085:46120	6755376	19	True				
ANR	6756028	CallExpression	"memset ( sp , 0 , 2 * width * MBheight )"		6755376	0					
ANR	6756029	Callee	memset		6755376	0					
ANR	6756030	Identifier	memset		6755376	0					
ANR	6756031	ArgumentList	sp		6755376	1					
ANR	6756032	Argument	sp		6755376	0					
ANR	6756033	Identifier	sp		6755376	0					
ANR	6756034	Argument	0		6755376	1					
ANR	6756035	PrimaryExpression	0		6755376	0					
ANR	6756036	Argument	2 * width * MBheight		6755376	2					
ANR	6756037	MultiplicativeExpression	2 * width * MBheight		6755376	0		*			
ANR	6756038	PrimaryExpression	2		6755376	0					
ANR	6756039	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6756040	Identifier	width		6755376	0					
ANR	6756041	Identifier	MBheight		6755376	1					
ANR	6756042	ExpressionStatement	"read_data ( con , sp , 2 , width * MBheight )"	1454:12:46134:46173	6755376	20	True				
ANR	6756043	CallExpression	"read_data ( con , sp , 2 , width * MBheight )"		6755376	0					
ANR	6756044	Callee	read_data		6755376	0					
ANR	6756045	Identifier	read_data		6755376	0					
ANR	6756046	ArgumentList	con		6755376	1					
ANR	6756047	Argument	con		6755376	0					
ANR	6756048	Identifier	con		6755376	0					
ANR	6756049	Argument	sp		6755376	1					
ANR	6756050	Identifier	sp		6755376	0					
ANR	6756051	Argument	2		6755376	2					
ANR	6756052	PrimaryExpression	2		6755376	0					
ANR	6756053	Argument	width * MBheight		6755376	3					
ANR	6756054	MultiplicativeExpression	width * MBheight		6755376	0		*			
ANR	6756055	Identifier	width		6755376	0					
ANR	6756056	Identifier	MBheight		6755376	1					
ANR	6756057	ExpressionStatement	sp += width * MBheight	1455:12:46187:46209	6755376	21	True				
ANR	6756058	AssignmentExpression	sp += width * MBheight		6755376	0		+=			
ANR	6756059	Identifier	sp		6755376	0					
ANR	6756060	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6756061	Identifier	width		6755376	0					
ANR	6756062	Identifier	MBheight		6755376	1					
ANR	6756063	IfStatement	if ( con -> ncomp == 5 )		6755376	22					
ANR	6756064	Condition	con -> ncomp == 5	1457:16:46228:46242	6755376	0	True				
ANR	6756065	EqualityExpression	con -> ncomp == 5		6755376	0		==			
ANR	6756066	PtrMemberAccess	con -> ncomp		6755376	0					
ANR	6756067	Identifier	con		6755376	0					
ANR	6756068	Identifier	ncomp		6755376	1					
ANR	6756069	PrimaryExpression	5		6755376	1					
ANR	6756070	CompoundStatement		76:33:2978:2978	6755376	1					
ANR	6756071	ExpressionStatement	"seek_file ( con , offsetA , SEEK_SET )"	1458:16:46263:46296	6755376	0	True				
ANR	6756072	CallExpression	"seek_file ( con , offsetA , SEEK_SET )"		6755376	0					
ANR	6756073	Callee	seek_file		6755376	0					
ANR	6756074	Identifier	seek_file		6755376	0					
ANR	6756075	ArgumentList	con		6755376	1					
ANR	6756076	Argument	con		6755376	0					
ANR	6756077	Identifier	con		6755376	0					
ANR	6756078	Argument	offsetA		6755376	1					
ANR	6756079	Identifier	offsetA		6755376	0					
ANR	6756080	Argument	SEEK_SET		6755376	2					
ANR	6756081	Identifier	SEEK_SET		6755376	0					
ANR	6756082	ExpressionStatement	"memset ( sp , 0 , 2 * width * MBheight )"	1459:16:46314:46349	6755376	1	True				
ANR	6756083	CallExpression	"memset ( sp , 0 , 2 * width * MBheight )"		6755376	0					
ANR	6756084	Callee	memset		6755376	0					
ANR	6756085	Identifier	memset		6755376	0					
ANR	6756086	ArgumentList	sp		6755376	1					
ANR	6756087	Argument	sp		6755376	0					
ANR	6756088	Identifier	sp		6755376	0					
ANR	6756089	Argument	0		6755376	1					
ANR	6756090	PrimaryExpression	0		6755376	0					
ANR	6756091	Argument	2 * width * MBheight		6755376	2					
ANR	6756092	MultiplicativeExpression	2 * width * MBheight		6755376	0		*			
ANR	6756093	PrimaryExpression	2		6755376	0					
ANR	6756094	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6756095	Identifier	width		6755376	0					
ANR	6756096	Identifier	MBheight		6755376	1					
ANR	6756097	ExpressionStatement	"read_data ( con , sp , 2 , width * MBheight )"	1460:16:46367:46406	6755376	2	True				
ANR	6756098	CallExpression	"read_data ( con , sp , 2 , width * MBheight )"		6755376	0					
ANR	6756099	Callee	read_data		6755376	0					
ANR	6756100	Identifier	read_data		6755376	0					
ANR	6756101	ArgumentList	con		6755376	1					
ANR	6756102	Argument	con		6755376	0					
ANR	6756103	Identifier	con		6755376	0					
ANR	6756104	Argument	sp		6755376	1					
ANR	6756105	Identifier	sp		6755376	0					
ANR	6756106	Argument	2		6755376	2					
ANR	6756107	PrimaryExpression	2		6755376	0					
ANR	6756108	Argument	width * MBheight		6755376	3					
ANR	6756109	MultiplicativeExpression	width * MBheight		6755376	0		*			
ANR	6756110	Identifier	width		6755376	0					
ANR	6756111	Identifier	MBheight		6755376	1					
ANR	6756112	ExpressionStatement	sp += width * MBheight	1461:16:46424:46446	6755376	3	True				
ANR	6756113	AssignmentExpression	sp += width * MBheight		6755376	0		+=			
ANR	6756114	Identifier	sp		6755376	0					
ANR	6756115	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6756116	Identifier	width		6755376	0					
ANR	6756117	Identifier	MBheight		6755376	1					
ANR	6756118	ExpressionStatement	con -> my = my	1464:8:46480:46492	6755376	1	True				
ANR	6756119	AssignmentExpression	con -> my = my		6755376	0		=			
ANR	6756120	PtrMemberAccess	con -> my		6755376	0					
ANR	6756121	Identifier	con		6755376	0					
ANR	6756122	Identifier	my		6755376	1					
ANR	6756123	Identifier	my		6755376	1					
ANR	6756124	IdentifierDeclStatement	"int idx1 , idx2 ;"	1467:4:46505:46519	6755376	6	True				
ANR	6756125	IdentifierDecl	idx1		6755376	0					
ANR	6756126	IdentifierDeclType	int		6755376	0					
ANR	6756127	Identifier	idx1		6755376	1					
ANR	6756128	IdentifierDecl	idx2		6755376	1					
ANR	6756129	IdentifierDeclType	int		6755376	0					
ANR	6756130	Identifier	idx2		6755376	1					
ANR	6756131	IdentifierDeclStatement	int xDiv = 16 ;	1468:4:46525:46538	6755376	7	True				
ANR	6756132	IdentifierDecl	xDiv = 16		6755376	0					
ANR	6756133	IdentifierDeclType	int		6755376	0					
ANR	6756134	Identifier	xDiv		6755376	1					
ANR	6756135	AssignmentExpression	xDiv = 16		6755376	2		=			
ANR	6756136	Identifier	xDiv		6755376	0					
ANR	6756137	PrimaryExpression	16		6755376	1					
ANR	6756138	IdentifierDeclStatement	int yDiv = 16 ;	1469:4:46544:46557	6755376	8	True				
ANR	6756139	IdentifierDecl	yDiv = 16		6755376	0					
ANR	6756140	IdentifierDeclType	int		6755376	0					
ANR	6756141	Identifier	yDiv		6755376	1					
ANR	6756142	AssignmentExpression	yDiv = 16		6755376	2		=			
ANR	6756143	Identifier	yDiv		6755376	0					
ANR	6756144	PrimaryExpression	16		6755376	1					
ANR	6756145	IfStatement	if ( con -> bpi == 8 )		6755376	9					
ANR	6756146	Condition	con -> bpi == 8	1471:8:46568:46580	6755376	0	True				
ANR	6756147	EqualityExpression	con -> bpi == 8		6755376	0		==			
ANR	6756148	PtrMemberAccess	con -> bpi		6755376	0					
ANR	6756149	Identifier	con		6755376	0					
ANR	6756150	Identifier	bpi		6755376	1					
ANR	6756151	PrimaryExpression	8		6755376	1					
ANR	6756152	CompoundStatement		92:8:3342:3407	6755376	1					
ANR	6756153	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf + xDiv * mx + 0 * width * MBheight ;	1473:8:46609:46674	6755376	0	True				
ANR	6756154	IdentifierDecl	* sp = ( uint8_t * ) con -> buf + xDiv * mx + 0 * width * MBheight		6755376	0					
ANR	6756155	IdentifierDeclType	uint8_t *		6755376	0					
ANR	6756156	Identifier	sp		6755376	1					
ANR	6756157	AssignmentExpression	* sp = ( uint8_t * ) con -> buf + xDiv * mx + 0 * width * MBheight		6755376	2		=			
ANR	6756158	Identifier	sp		6755376	0					
ANR	6756159	AdditiveExpression	( uint8_t * ) con -> buf + xDiv * mx + 0 * width * MBheight		6755376	1		+			
ANR	6756160	CastExpression	( uint8_t * ) con -> buf		6755376	0					
ANR	6756161	CastTarget	uint8_t *		6755376	0					
ANR	6756162	PtrMemberAccess	con -> buf		6755376	1					
ANR	6756163	Identifier	con		6755376	0					
ANR	6756164	Identifier	buf		6755376	1					
ANR	6756165	AdditiveExpression	xDiv * mx + 0 * width * MBheight		6755376	1		+			
ANR	6756166	MultiplicativeExpression	xDiv * mx		6755376	0		*			
ANR	6756167	Identifier	xDiv		6755376	0					
ANR	6756168	Identifier	mx		6755376	1					
ANR	6756169	MultiplicativeExpression	0 * width * MBheight		6755376	1		*			
ANR	6756170	PrimaryExpression	0		6755376	0					
ANR	6756171	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6756172	Identifier	width		6755376	0					
ANR	6756173	Identifier	MBheight		6755376	1					
ANR	6756174	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6755376	1					
ANR	6756175	ForInit	idx1 = 0 ;	1474:13:46689:46697	6755376	0	True				
ANR	6756176	AssignmentExpression	idx1 = 0		6755376	0		=			
ANR	6756177	Identifier	idx1		6755376	0					
ANR	6756178	PrimaryExpression	0		6755376	1					
ANR	6756179	Condition	idx1 < yDiv	1474:23:46699:46709	6755376	1	True				
ANR	6756180	RelationalExpression	idx1 < yDiv		6755376	0		<			
ANR	6756181	Identifier	idx1		6755376	0					
ANR	6756182	Identifier	yDiv		6755376	1					
ANR	6756183	AssignmentExpression	idx1 += 1	1474:36:46712:46720	6755376	2	True	+=			
ANR	6756184	Identifier	idx1		6755376	0					
ANR	6756185	PrimaryExpression	1		6755376	1					
ANR	6756186	CompoundStatement		93:47:3456:3456	6755376	3					
ANR	6756187	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6755376	0					
ANR	6756188	ForInit	idx2 = 0 ;	1475:17:46742:46750	6755376	0	True				
ANR	6756189	AssignmentExpression	idx2 = 0		6755376	0		=			
ANR	6756190	Identifier	idx2		6755376	0					
ANR	6756191	PrimaryExpression	0		6755376	1					
ANR	6756192	Condition	idx2 < xDiv	1475:27:46752:46762	6755376	1	True				
ANR	6756193	RelationalExpression	idx2 < xDiv		6755376	0		<			
ANR	6756194	Identifier	idx2		6755376	0					
ANR	6756195	Identifier	xDiv		6755376	1					
ANR	6756196	AssignmentExpression	idx2 += 1	1475:40:46765:46773	6755376	2	True	+=			
ANR	6756197	Identifier	idx2		6755376	0					
ANR	6756198	PrimaryExpression	1		6755376	1					
ANR	6756199	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]	1476:16:46793:46849	6755376	3	True				
ANR	6756200	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]		6755376	0		=			
ANR	6756201	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ]		6755376	0					
ANR	6756202	Identifier	data		6755376	0					
ANR	6756203	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 0		6755376	1		+			
ANR	6756204	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6755376	0		*			
ANR	6756205	AdditiveExpression	idx1 * xDiv + idx2		6755376	0		+			
ANR	6756206	MultiplicativeExpression	idx1 * xDiv		6755376	0		*			
ANR	6756207	Identifier	idx1		6755376	0					
ANR	6756208	Identifier	xDiv		6755376	1					
ANR	6756209	Identifier	idx2		6755376	1					
ANR	6756210	Identifier	num_channels		6755376	1					
ANR	6756211	PrimaryExpression	0		6755376	1					
ANR	6756212	ArrayIndexing	sp [ idx2 ]		6755376	1					
ANR	6756213	Identifier	sp		6755376	0					
ANR	6756214	Identifier	idx2		6755376	1					
ANR	6756215	ExpressionStatement	sp += width	1477:12:46863:46874	6755376	1	True				
ANR	6756216	AssignmentExpression	sp += width		6755376	0		+=			
ANR	6756217	Identifier	sp		6755376	0					
ANR	6756218	Identifier	width		6755376	1					
ANR	6756219	ExpressionStatement	sp = ( uint8_t * ) con -> buf + xDiv * mx + 1 * width * MBheight	1481:8:46911:46967	6755376	2	True				
ANR	6756220	AssignmentExpression	sp = ( uint8_t * ) con -> buf + xDiv * mx + 1 * width * MBheight		6755376	0		=			
ANR	6756221	Identifier	sp		6755376	0					
ANR	6756222	AdditiveExpression	( uint8_t * ) con -> buf + xDiv * mx + 1 * width * MBheight		6755376	1		+			
ANR	6756223	CastExpression	( uint8_t * ) con -> buf		6755376	0					
ANR	6756224	CastTarget	uint8_t *		6755376	0					
ANR	6756225	PtrMemberAccess	con -> buf		6755376	1					
ANR	6756226	Identifier	con		6755376	0					
ANR	6756227	Identifier	buf		6755376	1					
ANR	6756228	AdditiveExpression	xDiv * mx + 1 * width * MBheight		6755376	1		+			
ANR	6756229	MultiplicativeExpression	xDiv * mx		6755376	0		*			
ANR	6756230	Identifier	xDiv		6755376	0					
ANR	6756231	Identifier	mx		6755376	1					
ANR	6756232	MultiplicativeExpression	1 * width * MBheight		6755376	1		*			
ANR	6756233	PrimaryExpression	1		6755376	0					
ANR	6756234	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6756235	Identifier	width		6755376	0					
ANR	6756236	Identifier	MBheight		6755376	1					
ANR	6756237	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6755376	3					
ANR	6756238	ForInit	idx1 = 0 ;	1482:13:46982:46990	6755376	0	True				
ANR	6756239	AssignmentExpression	idx1 = 0		6755376	0		=			
ANR	6756240	Identifier	idx1		6755376	0					
ANR	6756241	PrimaryExpression	0		6755376	1					
ANR	6756242	Condition	idx1 < yDiv	1482:23:46992:47002	6755376	1	True				
ANR	6756243	RelationalExpression	idx1 < yDiv		6755376	0		<			
ANR	6756244	Identifier	idx1		6755376	0					
ANR	6756245	Identifier	yDiv		6755376	1					
ANR	6756246	AssignmentExpression	idx1 += 1	1482:36:47005:47013	6755376	2	True	+=			
ANR	6756247	Identifier	idx1		6755376	0					
ANR	6756248	PrimaryExpression	1		6755376	1					
ANR	6756249	CompoundStatement		101:47:3749:3749	6755376	3					
ANR	6756250	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6755376	0					
ANR	6756251	ForInit	idx2 = 0 ;	1483:17:47035:47043	6755376	0	True				
ANR	6756252	AssignmentExpression	idx2 = 0		6755376	0		=			
ANR	6756253	Identifier	idx2		6755376	0					
ANR	6756254	PrimaryExpression	0		6755376	1					
ANR	6756255	Condition	idx2 < xDiv	1483:27:47045:47055	6755376	1	True				
ANR	6756256	RelationalExpression	idx2 < xDiv		6755376	0		<			
ANR	6756257	Identifier	idx2		6755376	0					
ANR	6756258	Identifier	xDiv		6755376	1					
ANR	6756259	AssignmentExpression	idx2 += 1	1483:40:47058:47066	6755376	2	True	+=			
ANR	6756260	Identifier	idx2		6755376	0					
ANR	6756261	PrimaryExpression	1		6755376	1					
ANR	6756262	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]	1484:16:47086:47142	6755376	3	True				
ANR	6756263	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]		6755376	0		=			
ANR	6756264	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ]		6755376	0					
ANR	6756265	Identifier	data		6755376	0					
ANR	6756266	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 1		6755376	1		+			
ANR	6756267	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6755376	0		*			
ANR	6756268	AdditiveExpression	idx1 * xDiv + idx2		6755376	0		+			
ANR	6756269	MultiplicativeExpression	idx1 * xDiv		6755376	0		*			
ANR	6756270	Identifier	idx1		6755376	0					
ANR	6756271	Identifier	xDiv		6755376	1					
ANR	6756272	Identifier	idx2		6755376	1					
ANR	6756273	Identifier	num_channels		6755376	1					
ANR	6756274	PrimaryExpression	1		6755376	1					
ANR	6756275	ArrayIndexing	sp [ idx2 ]		6755376	1					
ANR	6756276	Identifier	sp		6755376	0					
ANR	6756277	Identifier	idx2		6755376	1					
ANR	6756278	ExpressionStatement	sp += width	1485:12:47156:47167	6755376	1	True				
ANR	6756279	AssignmentExpression	sp += width		6755376	0		+=			
ANR	6756280	Identifier	sp		6755376	0					
ANR	6756281	Identifier	width		6755376	1					
ANR	6756282	ExpressionStatement	sp = ( uint8_t * ) con -> buf + xDiv * mx + 2 * width * MBheight	1489:8:47204:47260	6755376	4	True				
ANR	6756283	AssignmentExpression	sp = ( uint8_t * ) con -> buf + xDiv * mx + 2 * width * MBheight		6755376	0		=			
ANR	6756284	Identifier	sp		6755376	0					
ANR	6756285	AdditiveExpression	( uint8_t * ) con -> buf + xDiv * mx + 2 * width * MBheight		6755376	1		+			
ANR	6756286	CastExpression	( uint8_t * ) con -> buf		6755376	0					
ANR	6756287	CastTarget	uint8_t *		6755376	0					
ANR	6756288	PtrMemberAccess	con -> buf		6755376	1					
ANR	6756289	Identifier	con		6755376	0					
ANR	6756290	Identifier	buf		6755376	1					
ANR	6756291	AdditiveExpression	xDiv * mx + 2 * width * MBheight		6755376	1		+			
ANR	6756292	MultiplicativeExpression	xDiv * mx		6755376	0		*			
ANR	6756293	Identifier	xDiv		6755376	0					
ANR	6756294	Identifier	mx		6755376	1					
ANR	6756295	MultiplicativeExpression	2 * width * MBheight		6755376	1		*			
ANR	6756296	PrimaryExpression	2		6755376	0					
ANR	6756297	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6756298	Identifier	width		6755376	0					
ANR	6756299	Identifier	MBheight		6755376	1					
ANR	6756300	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6755376	5					
ANR	6756301	ForInit	idx1 = 0 ;	1490:13:47275:47283	6755376	0	True				
ANR	6756302	AssignmentExpression	idx1 = 0		6755376	0		=			
ANR	6756303	Identifier	idx1		6755376	0					
ANR	6756304	PrimaryExpression	0		6755376	1					
ANR	6756305	Condition	idx1 < yDiv	1490:23:47285:47295	6755376	1	True				
ANR	6756306	RelationalExpression	idx1 < yDiv		6755376	0		<			
ANR	6756307	Identifier	idx1		6755376	0					
ANR	6756308	Identifier	yDiv		6755376	1					
ANR	6756309	AssignmentExpression	idx1 += 1	1490:36:47298:47306	6755376	2	True	+=			
ANR	6756310	Identifier	idx1		6755376	0					
ANR	6756311	PrimaryExpression	1		6755376	1					
ANR	6756312	CompoundStatement		109:47:4042:4042	6755376	3					
ANR	6756313	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6755376	0					
ANR	6756314	ForInit	idx2 = 0 ;	1491:17:47328:47336	6755376	0	True				
ANR	6756315	AssignmentExpression	idx2 = 0		6755376	0		=			
ANR	6756316	Identifier	idx2		6755376	0					
ANR	6756317	PrimaryExpression	0		6755376	1					
ANR	6756318	Condition	idx2 < xDiv	1491:27:47338:47348	6755376	1	True				
ANR	6756319	RelationalExpression	idx2 < xDiv		6755376	0		<			
ANR	6756320	Identifier	idx2		6755376	0					
ANR	6756321	Identifier	xDiv		6755376	1					
ANR	6756322	AssignmentExpression	idx2 += 1	1491:40:47351:47359	6755376	2	True	+=			
ANR	6756323	Identifier	idx2		6755376	0					
ANR	6756324	PrimaryExpression	1		6755376	1					
ANR	6756325	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]	1492:16:47379:47435	6755376	3	True				
ANR	6756326	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]		6755376	0		=			
ANR	6756327	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ]		6755376	0					
ANR	6756328	Identifier	data		6755376	0					
ANR	6756329	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 2		6755376	1		+			
ANR	6756330	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6755376	0		*			
ANR	6756331	AdditiveExpression	idx1 * xDiv + idx2		6755376	0		+			
ANR	6756332	MultiplicativeExpression	idx1 * xDiv		6755376	0		*			
ANR	6756333	Identifier	idx1		6755376	0					
ANR	6756334	Identifier	xDiv		6755376	1					
ANR	6756335	Identifier	idx2		6755376	1					
ANR	6756336	Identifier	num_channels		6755376	1					
ANR	6756337	PrimaryExpression	2		6755376	1					
ANR	6756338	ArrayIndexing	sp [ idx2 ]		6755376	1					
ANR	6756339	Identifier	sp		6755376	0					
ANR	6756340	Identifier	idx2		6755376	1					
ANR	6756341	ExpressionStatement	sp += width	1493:12:47449:47460	6755376	1	True				
ANR	6756342	AssignmentExpression	sp += width		6755376	0		+=			
ANR	6756343	Identifier	sp		6755376	0					
ANR	6756344	Identifier	width		6755376	1					
ANR	6756345	ExpressionStatement	sp = ( uint8_t * ) con -> buf + xDiv * mx + 3 * width * MBheight	1497:8:47497:47553	6755376	6	True				
ANR	6756346	AssignmentExpression	sp = ( uint8_t * ) con -> buf + xDiv * mx + 3 * width * MBheight		6755376	0		=			
ANR	6756347	Identifier	sp		6755376	0					
ANR	6756348	AdditiveExpression	( uint8_t * ) con -> buf + xDiv * mx + 3 * width * MBheight		6755376	1		+			
ANR	6756349	CastExpression	( uint8_t * ) con -> buf		6755376	0					
ANR	6756350	CastTarget	uint8_t *		6755376	0					
ANR	6756351	PtrMemberAccess	con -> buf		6755376	1					
ANR	6756352	Identifier	con		6755376	0					
ANR	6756353	Identifier	buf		6755376	1					
ANR	6756354	AdditiveExpression	xDiv * mx + 3 * width * MBheight		6755376	1		+			
ANR	6756355	MultiplicativeExpression	xDiv * mx		6755376	0		*			
ANR	6756356	Identifier	xDiv		6755376	0					
ANR	6756357	Identifier	mx		6755376	1					
ANR	6756358	MultiplicativeExpression	3 * width * MBheight		6755376	1		*			
ANR	6756359	PrimaryExpression	3		6755376	0					
ANR	6756360	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6756361	Identifier	width		6755376	0					
ANR	6756362	Identifier	MBheight		6755376	1					
ANR	6756363	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6755376	7					
ANR	6756364	ForInit	idx1 = 0 ;	1498:13:47568:47576	6755376	0	True				
ANR	6756365	AssignmentExpression	idx1 = 0		6755376	0		=			
ANR	6756366	Identifier	idx1		6755376	0					
ANR	6756367	PrimaryExpression	0		6755376	1					
ANR	6756368	Condition	idx1 < yDiv	1498:23:47578:47588	6755376	1	True				
ANR	6756369	RelationalExpression	idx1 < yDiv		6755376	0		<			
ANR	6756370	Identifier	idx1		6755376	0					
ANR	6756371	Identifier	yDiv		6755376	1					
ANR	6756372	AssignmentExpression	idx1 += 1	1498:36:47591:47599	6755376	2	True	+=			
ANR	6756373	Identifier	idx1		6755376	0					
ANR	6756374	PrimaryExpression	1		6755376	1					
ANR	6756375	CompoundStatement		117:47:4335:4335	6755376	3					
ANR	6756376	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6755376	0					
ANR	6756377	ForInit	idx2 = 0 ;	1499:17:47621:47629	6755376	0	True				
ANR	6756378	AssignmentExpression	idx2 = 0		6755376	0		=			
ANR	6756379	Identifier	idx2		6755376	0					
ANR	6756380	PrimaryExpression	0		6755376	1					
ANR	6756381	Condition	idx2 < xDiv	1499:27:47631:47641	6755376	1	True				
ANR	6756382	RelationalExpression	idx2 < xDiv		6755376	0		<			
ANR	6756383	Identifier	idx2		6755376	0					
ANR	6756384	Identifier	xDiv		6755376	1					
ANR	6756385	AssignmentExpression	idx2 += 1	1499:40:47644:47652	6755376	2	True	+=			
ANR	6756386	Identifier	idx2		6755376	0					
ANR	6756387	PrimaryExpression	1		6755376	1					
ANR	6756388	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]	1500:16:47672:47728	6755376	3	True				
ANR	6756389	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]		6755376	0		=			
ANR	6756390	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ]		6755376	0					
ANR	6756391	Identifier	data		6755376	0					
ANR	6756392	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 3		6755376	1		+			
ANR	6756393	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6755376	0		*			
ANR	6756394	AdditiveExpression	idx1 * xDiv + idx2		6755376	0		+			
ANR	6756395	MultiplicativeExpression	idx1 * xDiv		6755376	0		*			
ANR	6756396	Identifier	idx1		6755376	0					
ANR	6756397	Identifier	xDiv		6755376	1					
ANR	6756398	Identifier	idx2		6755376	1					
ANR	6756399	Identifier	num_channels		6755376	1					
ANR	6756400	PrimaryExpression	3		6755376	1					
ANR	6756401	ArrayIndexing	sp [ idx2 ]		6755376	1					
ANR	6756402	Identifier	sp		6755376	0					
ANR	6756403	Identifier	idx2		6755376	1					
ANR	6756404	ExpressionStatement	sp += width	1501:12:47742:47753	6755376	1	True				
ANR	6756405	AssignmentExpression	sp += width		6755376	0		+=			
ANR	6756406	Identifier	sp		6755376	0					
ANR	6756407	Identifier	width		6755376	1					
ANR	6756408	IfStatement	if ( con -> ncomp == 5 )		6755376	8					
ANR	6756409	Condition	con -> ncomp == 5	1504:11:47777:47791	6755376	0	True				
ANR	6756410	EqualityExpression	con -> ncomp == 5		6755376	0		==			
ANR	6756411	PtrMemberAccess	con -> ncomp		6755376	0					
ANR	6756412	Identifier	con		6755376	0					
ANR	6756413	Identifier	ncomp		6755376	1					
ANR	6756414	PrimaryExpression	5		6755376	1					
ANR	6756415	CompoundStatement		124:8:4535:4535	6755376	1					
ANR	6756416	ExpressionStatement	sp = ( uint8_t * ) con -> buf + xDiv * mx + 4 * width * MBheight	1506:12:47816:47872	6755376	0	True				
ANR	6756417	AssignmentExpression	sp = ( uint8_t * ) con -> buf + xDiv * mx + 4 * width * MBheight		6755376	0		=			
ANR	6756418	Identifier	sp		6755376	0					
ANR	6756419	AdditiveExpression	( uint8_t * ) con -> buf + xDiv * mx + 4 * width * MBheight		6755376	1		+			
ANR	6756420	CastExpression	( uint8_t * ) con -> buf		6755376	0					
ANR	6756421	CastTarget	uint8_t *		6755376	0					
ANR	6756422	PtrMemberAccess	con -> buf		6755376	1					
ANR	6756423	Identifier	con		6755376	0					
ANR	6756424	Identifier	buf		6755376	1					
ANR	6756425	AdditiveExpression	xDiv * mx + 4 * width * MBheight		6755376	1		+			
ANR	6756426	MultiplicativeExpression	xDiv * mx		6755376	0		*			
ANR	6756427	Identifier	xDiv		6755376	0					
ANR	6756428	Identifier	mx		6755376	1					
ANR	6756429	MultiplicativeExpression	4 * width * MBheight		6755376	1		*			
ANR	6756430	PrimaryExpression	4		6755376	0					
ANR	6756431	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6756432	Identifier	width		6755376	0					
ANR	6756433	Identifier	MBheight		6755376	1					
ANR	6756434	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6755376	1					
ANR	6756435	ForInit	idx1 = 0 ;	1507:17:47891:47899	6755376	0	True				
ANR	6756436	AssignmentExpression	idx1 = 0		6755376	0		=			
ANR	6756437	Identifier	idx1		6755376	0					
ANR	6756438	PrimaryExpression	0		6755376	1					
ANR	6756439	Condition	idx1 < yDiv	1507:27:47901:47911	6755376	1	True				
ANR	6756440	RelationalExpression	idx1 < yDiv		6755376	0		<			
ANR	6756441	Identifier	idx1		6755376	0					
ANR	6756442	Identifier	yDiv		6755376	1					
ANR	6756443	AssignmentExpression	idx1 += 1	1507:40:47914:47922	6755376	2	True	+=			
ANR	6756444	Identifier	idx1		6755376	0					
ANR	6756445	PrimaryExpression	1		6755376	1					
ANR	6756446	CompoundStatement		126:51:4658:4658	6755376	3					
ANR	6756447	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6755376	0					
ANR	6756448	ForInit	idx2 = 0 ;	1508:21:47948:47956	6755376	0	True				
ANR	6756449	AssignmentExpression	idx2 = 0		6755376	0		=			
ANR	6756450	Identifier	idx2		6755376	0					
ANR	6756451	PrimaryExpression	0		6755376	1					
ANR	6756452	Condition	idx2 < xDiv	1508:31:47958:47968	6755376	1	True				
ANR	6756453	RelationalExpression	idx2 < xDiv		6755376	0		<			
ANR	6756454	Identifier	idx2		6755376	0					
ANR	6756455	Identifier	xDiv		6755376	1					
ANR	6756456	AssignmentExpression	idx2 += 1	1508:44:47971:47979	6755376	2	True	+=			
ANR	6756457	Identifier	idx2		6755376	0					
ANR	6756458	PrimaryExpression	1		6755376	1					
ANR	6756459	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 4 ] = sp [ idx2 ]	1509:20:48003:48059	6755376	3	True				
ANR	6756460	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 4 ] = sp [ idx2 ]		6755376	0		=			
ANR	6756461	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 4 ]		6755376	0					
ANR	6756462	Identifier	data		6755376	0					
ANR	6756463	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 4		6755376	1		+			
ANR	6756464	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6755376	0		*			
ANR	6756465	AdditiveExpression	idx1 * xDiv + idx2		6755376	0		+			
ANR	6756466	MultiplicativeExpression	idx1 * xDiv		6755376	0		*			
ANR	6756467	Identifier	idx1		6755376	0					
ANR	6756468	Identifier	xDiv		6755376	1					
ANR	6756469	Identifier	idx2		6755376	1					
ANR	6756470	Identifier	num_channels		6755376	1					
ANR	6756471	PrimaryExpression	4		6755376	1					
ANR	6756472	ArrayIndexing	sp [ idx2 ]		6755376	1					
ANR	6756473	Identifier	sp		6755376	0					
ANR	6756474	Identifier	idx2		6755376	1					
ANR	6756475	ExpressionStatement	sp += width	1510:16:48077:48088	6755376	1	True				
ANR	6756476	AssignmentExpression	sp += width		6755376	0		+=			
ANR	6756477	Identifier	sp		6755376	0					
ANR	6756478	Identifier	width		6755376	1					
ANR	6756479	ElseStatement	else		6755376	0					
ANR	6756480	IfStatement	if ( con -> bpi == 16 )		6755376	0					
ANR	6756481	Condition	con -> bpi == 16	1514:13:48133:48146	6755376	0	True				
ANR	6756482	EqualityExpression	con -> bpi == 16		6755376	0		==			
ANR	6756483	PtrMemberAccess	con -> bpi		6755376	0					
ANR	6756484	Identifier	con		6755376	0					
ANR	6756485	Identifier	bpi		6755376	1					
ANR	6756486	PrimaryExpression	16		6755376	1					
ANR	6756487	CompoundStatement		135:8:4908:4975	6755376	1					
ANR	6756488	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf + xDiv * mx + 0 * width * MBheight ;	1516:8:48175:48242	6755376	0	True				
ANR	6756489	IdentifierDecl	* sp = ( uint16_t * ) con -> buf + xDiv * mx + 0 * width * MBheight		6755376	0					
ANR	6756490	IdentifierDeclType	uint16_t *		6755376	0					
ANR	6756491	Identifier	sp		6755376	1					
ANR	6756492	AssignmentExpression	* sp = ( uint16_t * ) con -> buf + xDiv * mx + 0 * width * MBheight		6755376	2		=			
ANR	6756493	Identifier	sp		6755376	0					
ANR	6756494	AdditiveExpression	( uint16_t * ) con -> buf + xDiv * mx + 0 * width * MBheight		6755376	1		+			
ANR	6756495	CastExpression	( uint16_t * ) con -> buf		6755376	0					
ANR	6756496	CastTarget	uint16_t *		6755376	0					
ANR	6756497	PtrMemberAccess	con -> buf		6755376	1					
ANR	6756498	Identifier	con		6755376	0					
ANR	6756499	Identifier	buf		6755376	1					
ANR	6756500	AdditiveExpression	xDiv * mx + 0 * width * MBheight		6755376	1		+			
ANR	6756501	MultiplicativeExpression	xDiv * mx		6755376	0		*			
ANR	6756502	Identifier	xDiv		6755376	0					
ANR	6756503	Identifier	mx		6755376	1					
ANR	6756504	MultiplicativeExpression	0 * width * MBheight		6755376	1		*			
ANR	6756505	PrimaryExpression	0		6755376	0					
ANR	6756506	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6756507	Identifier	width		6755376	0					
ANR	6756508	Identifier	MBheight		6755376	1					
ANR	6756509	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6755376	1					
ANR	6756510	ForInit	idx1 = 0 ;	1517:13:48257:48265	6755376	0	True				
ANR	6756511	AssignmentExpression	idx1 = 0		6755376	0		=			
ANR	6756512	Identifier	idx1		6755376	0					
ANR	6756513	PrimaryExpression	0		6755376	1					
ANR	6756514	Condition	idx1 < yDiv	1517:23:48267:48277	6755376	1	True				
ANR	6756515	RelationalExpression	idx1 < yDiv		6755376	0		<			
ANR	6756516	Identifier	idx1		6755376	0					
ANR	6756517	Identifier	yDiv		6755376	1					
ANR	6756518	AssignmentExpression	idx1 += 1	1517:36:48280:48288	6755376	2	True	+=			
ANR	6756519	Identifier	idx1		6755376	0					
ANR	6756520	PrimaryExpression	1		6755376	1					
ANR	6756521	CompoundStatement		136:47:5024:5024	6755376	3					
ANR	6756522	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6755376	0					
ANR	6756523	ForInit	idx2 = 0 ;	1518:17:48310:48318	6755376	0	True				
ANR	6756524	AssignmentExpression	idx2 = 0		6755376	0		=			
ANR	6756525	Identifier	idx2		6755376	0					
ANR	6756526	PrimaryExpression	0		6755376	1					
ANR	6756527	Condition	idx2 < xDiv	1518:27:48320:48330	6755376	1	True				
ANR	6756528	RelationalExpression	idx2 < xDiv		6755376	0		<			
ANR	6756529	Identifier	idx2		6755376	0					
ANR	6756530	Identifier	xDiv		6755376	1					
ANR	6756531	AssignmentExpression	idx2 += 1	1518:40:48333:48341	6755376	2	True	+=			
ANR	6756532	Identifier	idx2		6755376	0					
ANR	6756533	PrimaryExpression	1		6755376	1					
ANR	6756534	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]	1519:16:48361:48417	6755376	3	True				
ANR	6756535	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ] = sp [ idx2 ]		6755376	0		=			
ANR	6756536	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 0 ]		6755376	0					
ANR	6756537	Identifier	data		6755376	0					
ANR	6756538	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 0		6755376	1		+			
ANR	6756539	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6755376	0		*			
ANR	6756540	AdditiveExpression	idx1 * xDiv + idx2		6755376	0		+			
ANR	6756541	MultiplicativeExpression	idx1 * xDiv		6755376	0		*			
ANR	6756542	Identifier	idx1		6755376	0					
ANR	6756543	Identifier	xDiv		6755376	1					
ANR	6756544	Identifier	idx2		6755376	1					
ANR	6756545	Identifier	num_channels		6755376	1					
ANR	6756546	PrimaryExpression	0		6755376	1					
ANR	6756547	ArrayIndexing	sp [ idx2 ]		6755376	1					
ANR	6756548	Identifier	sp		6755376	0					
ANR	6756549	Identifier	idx2		6755376	1					
ANR	6756550	ExpressionStatement	sp += width	1520:12:48431:48442	6755376	1	True				
ANR	6756551	AssignmentExpression	sp += width		6755376	0		+=			
ANR	6756552	Identifier	sp		6755376	0					
ANR	6756553	Identifier	width		6755376	1					
ANR	6756554	ExpressionStatement	sp = ( uint16_t * ) con -> buf + xDiv * mx + 1 * width * MBheight	1524:8:48479:48536	6755376	2	True				
ANR	6756555	AssignmentExpression	sp = ( uint16_t * ) con -> buf + xDiv * mx + 1 * width * MBheight		6755376	0		=			
ANR	6756556	Identifier	sp		6755376	0					
ANR	6756557	AdditiveExpression	( uint16_t * ) con -> buf + xDiv * mx + 1 * width * MBheight		6755376	1		+			
ANR	6756558	CastExpression	( uint16_t * ) con -> buf		6755376	0					
ANR	6756559	CastTarget	uint16_t *		6755376	0					
ANR	6756560	PtrMemberAccess	con -> buf		6755376	1					
ANR	6756561	Identifier	con		6755376	0					
ANR	6756562	Identifier	buf		6755376	1					
ANR	6756563	AdditiveExpression	xDiv * mx + 1 * width * MBheight		6755376	1		+			
ANR	6756564	MultiplicativeExpression	xDiv * mx		6755376	0		*			
ANR	6756565	Identifier	xDiv		6755376	0					
ANR	6756566	Identifier	mx		6755376	1					
ANR	6756567	MultiplicativeExpression	1 * width * MBheight		6755376	1		*			
ANR	6756568	PrimaryExpression	1		6755376	0					
ANR	6756569	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6756570	Identifier	width		6755376	0					
ANR	6756571	Identifier	MBheight		6755376	1					
ANR	6756572	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6755376	3					
ANR	6756573	ForInit	idx1 = 0 ;	1525:13:48551:48559	6755376	0	True				
ANR	6756574	AssignmentExpression	idx1 = 0		6755376	0		=			
ANR	6756575	Identifier	idx1		6755376	0					
ANR	6756576	PrimaryExpression	0		6755376	1					
ANR	6756577	Condition	idx1 < yDiv	1525:23:48561:48571	6755376	1	True				
ANR	6756578	RelationalExpression	idx1 < yDiv		6755376	0		<			
ANR	6756579	Identifier	idx1		6755376	0					
ANR	6756580	Identifier	yDiv		6755376	1					
ANR	6756581	AssignmentExpression	idx1 += 1	1525:36:48574:48582	6755376	2	True	+=			
ANR	6756582	Identifier	idx1		6755376	0					
ANR	6756583	PrimaryExpression	1		6755376	1					
ANR	6756584	CompoundStatement		144:47:5318:5318	6755376	3					
ANR	6756585	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6755376	0					
ANR	6756586	ForInit	idx2 = 0 ;	1526:17:48604:48612	6755376	0	True				
ANR	6756587	AssignmentExpression	idx2 = 0		6755376	0		=			
ANR	6756588	Identifier	idx2		6755376	0					
ANR	6756589	PrimaryExpression	0		6755376	1					
ANR	6756590	Condition	idx2 < xDiv	1526:27:48614:48624	6755376	1	True				
ANR	6756591	RelationalExpression	idx2 < xDiv		6755376	0		<			
ANR	6756592	Identifier	idx2		6755376	0					
ANR	6756593	Identifier	xDiv		6755376	1					
ANR	6756594	AssignmentExpression	idx2 += 1	1526:40:48627:48635	6755376	2	True	+=			
ANR	6756595	Identifier	idx2		6755376	0					
ANR	6756596	PrimaryExpression	1		6755376	1					
ANR	6756597	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]	1527:16:48655:48711	6755376	3	True				
ANR	6756598	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ] = sp [ idx2 ]		6755376	0		=			
ANR	6756599	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 1 ]		6755376	0					
ANR	6756600	Identifier	data		6755376	0					
ANR	6756601	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 1		6755376	1		+			
ANR	6756602	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6755376	0		*			
ANR	6756603	AdditiveExpression	idx1 * xDiv + idx2		6755376	0		+			
ANR	6756604	MultiplicativeExpression	idx1 * xDiv		6755376	0		*			
ANR	6756605	Identifier	idx1		6755376	0					
ANR	6756606	Identifier	xDiv		6755376	1					
ANR	6756607	Identifier	idx2		6755376	1					
ANR	6756608	Identifier	num_channels		6755376	1					
ANR	6756609	PrimaryExpression	1		6755376	1					
ANR	6756610	ArrayIndexing	sp [ idx2 ]		6755376	1					
ANR	6756611	Identifier	sp		6755376	0					
ANR	6756612	Identifier	idx2		6755376	1					
ANR	6756613	ExpressionStatement	sp += width	1528:12:48725:48736	6755376	1	True				
ANR	6756614	AssignmentExpression	sp += width		6755376	0		+=			
ANR	6756615	Identifier	sp		6755376	0					
ANR	6756616	Identifier	width		6755376	1					
ANR	6756617	ExpressionStatement	sp = ( uint16_t * ) con -> buf + xDiv * mx + 2 * width * MBheight	1532:8:48773:48830	6755376	4	True				
ANR	6756618	AssignmentExpression	sp = ( uint16_t * ) con -> buf + xDiv * mx + 2 * width * MBheight		6755376	0		=			
ANR	6756619	Identifier	sp		6755376	0					
ANR	6756620	AdditiveExpression	( uint16_t * ) con -> buf + xDiv * mx + 2 * width * MBheight		6755376	1		+			
ANR	6756621	CastExpression	( uint16_t * ) con -> buf		6755376	0					
ANR	6756622	CastTarget	uint16_t *		6755376	0					
ANR	6756623	PtrMemberAccess	con -> buf		6755376	1					
ANR	6756624	Identifier	con		6755376	0					
ANR	6756625	Identifier	buf		6755376	1					
ANR	6756626	AdditiveExpression	xDiv * mx + 2 * width * MBheight		6755376	1		+			
ANR	6756627	MultiplicativeExpression	xDiv * mx		6755376	0		*			
ANR	6756628	Identifier	xDiv		6755376	0					
ANR	6756629	Identifier	mx		6755376	1					
ANR	6756630	MultiplicativeExpression	2 * width * MBheight		6755376	1		*			
ANR	6756631	PrimaryExpression	2		6755376	0					
ANR	6756632	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6756633	Identifier	width		6755376	0					
ANR	6756634	Identifier	MBheight		6755376	1					
ANR	6756635	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6755376	5					
ANR	6756636	ForInit	idx1 = 0 ;	1533:13:48845:48853	6755376	0	True				
ANR	6756637	AssignmentExpression	idx1 = 0		6755376	0		=			
ANR	6756638	Identifier	idx1		6755376	0					
ANR	6756639	PrimaryExpression	0		6755376	1					
ANR	6756640	Condition	idx1 < yDiv	1533:23:48855:48865	6755376	1	True				
ANR	6756641	RelationalExpression	idx1 < yDiv		6755376	0		<			
ANR	6756642	Identifier	idx1		6755376	0					
ANR	6756643	Identifier	yDiv		6755376	1					
ANR	6756644	AssignmentExpression	idx1 += 1	1533:36:48868:48876	6755376	2	True	+=			
ANR	6756645	Identifier	idx1		6755376	0					
ANR	6756646	PrimaryExpression	1		6755376	1					
ANR	6756647	CompoundStatement		152:47:5612:5612	6755376	3					
ANR	6756648	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6755376	0					
ANR	6756649	ForInit	idx2 = 0 ;	1534:17:48898:48906	6755376	0	True				
ANR	6756650	AssignmentExpression	idx2 = 0		6755376	0		=			
ANR	6756651	Identifier	idx2		6755376	0					
ANR	6756652	PrimaryExpression	0		6755376	1					
ANR	6756653	Condition	idx2 < xDiv	1534:27:48908:48918	6755376	1	True				
ANR	6756654	RelationalExpression	idx2 < xDiv		6755376	0		<			
ANR	6756655	Identifier	idx2		6755376	0					
ANR	6756656	Identifier	xDiv		6755376	1					
ANR	6756657	AssignmentExpression	idx2 += 1	1534:40:48921:48929	6755376	2	True	+=			
ANR	6756658	Identifier	idx2		6755376	0					
ANR	6756659	PrimaryExpression	1		6755376	1					
ANR	6756660	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]	1535:16:48949:49005	6755376	3	True				
ANR	6756661	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ] = sp [ idx2 ]		6755376	0		=			
ANR	6756662	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 2 ]		6755376	0					
ANR	6756663	Identifier	data		6755376	0					
ANR	6756664	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 2		6755376	1		+			
ANR	6756665	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6755376	0		*			
ANR	6756666	AdditiveExpression	idx1 * xDiv + idx2		6755376	0		+			
ANR	6756667	MultiplicativeExpression	idx1 * xDiv		6755376	0		*			
ANR	6756668	Identifier	idx1		6755376	0					
ANR	6756669	Identifier	xDiv		6755376	1					
ANR	6756670	Identifier	idx2		6755376	1					
ANR	6756671	Identifier	num_channels		6755376	1					
ANR	6756672	PrimaryExpression	2		6755376	1					
ANR	6756673	ArrayIndexing	sp [ idx2 ]		6755376	1					
ANR	6756674	Identifier	sp		6755376	0					
ANR	6756675	Identifier	idx2		6755376	1					
ANR	6756676	ExpressionStatement	sp += width	1536:12:49019:49030	6755376	1	True				
ANR	6756677	AssignmentExpression	sp += width		6755376	0		+=			
ANR	6756678	Identifier	sp		6755376	0					
ANR	6756679	Identifier	width		6755376	1					
ANR	6756680	ExpressionStatement	sp = ( uint16_t * ) con -> buf + xDiv * mx + 3 * width * MBheight	1540:8:49067:49124	6755376	6	True				
ANR	6756681	AssignmentExpression	sp = ( uint16_t * ) con -> buf + xDiv * mx + 3 * width * MBheight		6755376	0		=			
ANR	6756682	Identifier	sp		6755376	0					
ANR	6756683	AdditiveExpression	( uint16_t * ) con -> buf + xDiv * mx + 3 * width * MBheight		6755376	1		+			
ANR	6756684	CastExpression	( uint16_t * ) con -> buf		6755376	0					
ANR	6756685	CastTarget	uint16_t *		6755376	0					
ANR	6756686	PtrMemberAccess	con -> buf		6755376	1					
ANR	6756687	Identifier	con		6755376	0					
ANR	6756688	Identifier	buf		6755376	1					
ANR	6756689	AdditiveExpression	xDiv * mx + 3 * width * MBheight		6755376	1		+			
ANR	6756690	MultiplicativeExpression	xDiv * mx		6755376	0		*			
ANR	6756691	Identifier	xDiv		6755376	0					
ANR	6756692	Identifier	mx		6755376	1					
ANR	6756693	MultiplicativeExpression	3 * width * MBheight		6755376	1		*			
ANR	6756694	PrimaryExpression	3		6755376	0					
ANR	6756695	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6756696	Identifier	width		6755376	0					
ANR	6756697	Identifier	MBheight		6755376	1					
ANR	6756698	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6755376	7					
ANR	6756699	ForInit	idx1 = 0 ;	1541:13:49139:49147	6755376	0	True				
ANR	6756700	AssignmentExpression	idx1 = 0		6755376	0		=			
ANR	6756701	Identifier	idx1		6755376	0					
ANR	6756702	PrimaryExpression	0		6755376	1					
ANR	6756703	Condition	idx1 < yDiv	1541:23:49149:49159	6755376	1	True				
ANR	6756704	RelationalExpression	idx1 < yDiv		6755376	0		<			
ANR	6756705	Identifier	idx1		6755376	0					
ANR	6756706	Identifier	yDiv		6755376	1					
ANR	6756707	AssignmentExpression	idx1 += 1	1541:36:49162:49170	6755376	2	True	+=			
ANR	6756708	Identifier	idx1		6755376	0					
ANR	6756709	PrimaryExpression	1		6755376	1					
ANR	6756710	CompoundStatement		160:47:5906:5906	6755376	3					
ANR	6756711	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6755376	0					
ANR	6756712	ForInit	idx2 = 0 ;	1542:17:49192:49200	6755376	0	True				
ANR	6756713	AssignmentExpression	idx2 = 0		6755376	0		=			
ANR	6756714	Identifier	idx2		6755376	0					
ANR	6756715	PrimaryExpression	0		6755376	1					
ANR	6756716	Condition	idx2 < xDiv	1542:27:49202:49212	6755376	1	True				
ANR	6756717	RelationalExpression	idx2 < xDiv		6755376	0		<			
ANR	6756718	Identifier	idx2		6755376	0					
ANR	6756719	Identifier	xDiv		6755376	1					
ANR	6756720	AssignmentExpression	idx2 += 1	1542:40:49215:49223	6755376	2	True	+=			
ANR	6756721	Identifier	idx2		6755376	0					
ANR	6756722	PrimaryExpression	1		6755376	1					
ANR	6756723	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]	1543:16:49243:49299	6755376	3	True				
ANR	6756724	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ] = sp [ idx2 ]		6755376	0		=			
ANR	6756725	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 3 ]		6755376	0					
ANR	6756726	Identifier	data		6755376	0					
ANR	6756727	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 3		6755376	1		+			
ANR	6756728	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6755376	0		*			
ANR	6756729	AdditiveExpression	idx1 * xDiv + idx2		6755376	0		+			
ANR	6756730	MultiplicativeExpression	idx1 * xDiv		6755376	0		*			
ANR	6756731	Identifier	idx1		6755376	0					
ANR	6756732	Identifier	xDiv		6755376	1					
ANR	6756733	Identifier	idx2		6755376	1					
ANR	6756734	Identifier	num_channels		6755376	1					
ANR	6756735	PrimaryExpression	3		6755376	1					
ANR	6756736	ArrayIndexing	sp [ idx2 ]		6755376	1					
ANR	6756737	Identifier	sp		6755376	0					
ANR	6756738	Identifier	idx2		6755376	1					
ANR	6756739	ExpressionStatement	sp += width	1544:12:49313:49324	6755376	1	True				
ANR	6756740	AssignmentExpression	sp += width		6755376	0		+=			
ANR	6756741	Identifier	sp		6755376	0					
ANR	6756742	Identifier	width		6755376	1					
ANR	6756743	IfStatement	if ( con -> ncomp == 5 )		6755376	8					
ANR	6756744	Condition	con -> ncomp == 5	1547:11:49348:49362	6755376	0	True				
ANR	6756745	EqualityExpression	con -> ncomp == 5		6755376	0		==			
ANR	6756746	PtrMemberAccess	con -> ncomp		6755376	0					
ANR	6756747	Identifier	con		6755376	0					
ANR	6756748	Identifier	ncomp		6755376	1					
ANR	6756749	PrimaryExpression	5		6755376	1					
ANR	6756750	CompoundStatement		167:8:6106:6106	6755376	1					
ANR	6756751	ExpressionStatement	sp = ( uint16_t * ) con -> buf + xDiv * mx + 4 * width * MBheight	1549:12:49387:49444	6755376	0	True				
ANR	6756752	AssignmentExpression	sp = ( uint16_t * ) con -> buf + xDiv * mx + 4 * width * MBheight		6755376	0		=			
ANR	6756753	Identifier	sp		6755376	0					
ANR	6756754	AdditiveExpression	( uint16_t * ) con -> buf + xDiv * mx + 4 * width * MBheight		6755376	1		+			
ANR	6756755	CastExpression	( uint16_t * ) con -> buf		6755376	0					
ANR	6756756	CastTarget	uint16_t *		6755376	0					
ANR	6756757	PtrMemberAccess	con -> buf		6755376	1					
ANR	6756758	Identifier	con		6755376	0					
ANR	6756759	Identifier	buf		6755376	1					
ANR	6756760	AdditiveExpression	xDiv * mx + 4 * width * MBheight		6755376	1		+			
ANR	6756761	MultiplicativeExpression	xDiv * mx		6755376	0		*			
ANR	6756762	Identifier	xDiv		6755376	0					
ANR	6756763	Identifier	mx		6755376	1					
ANR	6756764	MultiplicativeExpression	4 * width * MBheight		6755376	1		*			
ANR	6756765	PrimaryExpression	4		6755376	0					
ANR	6756766	MultiplicativeExpression	width * MBheight		6755376	1		*			
ANR	6756767	Identifier	width		6755376	0					
ANR	6756768	Identifier	MBheight		6755376	1					
ANR	6756769	ForStatement	for ( idx1 = 0 ; idx1 < yDiv ; idx1 += 1 )		6755376	1					
ANR	6756770	ForInit	idx1 = 0 ;	1550:17:49463:49471	6755376	0	True				
ANR	6756771	AssignmentExpression	idx1 = 0		6755376	0		=			
ANR	6756772	Identifier	idx1		6755376	0					
ANR	6756773	PrimaryExpression	0		6755376	1					
ANR	6756774	Condition	idx1 < yDiv	1550:27:49473:49483	6755376	1	True				
ANR	6756775	RelationalExpression	idx1 < yDiv		6755376	0		<			
ANR	6756776	Identifier	idx1		6755376	0					
ANR	6756777	Identifier	yDiv		6755376	1					
ANR	6756778	AssignmentExpression	idx1 += 1	1550:40:49486:49494	6755376	2	True	+=			
ANR	6756779	Identifier	idx1		6755376	0					
ANR	6756780	PrimaryExpression	1		6755376	1					
ANR	6756781	CompoundStatement		169:51:6230:6230	6755376	3					
ANR	6756782	ForStatement	for ( idx2 = 0 ; idx2 < xDiv ; idx2 += 1 )		6755376	0					
ANR	6756783	ForInit	idx2 = 0 ;	1551:21:49520:49528	6755376	0	True				
ANR	6756784	AssignmentExpression	idx2 = 0		6755376	0		=			
ANR	6756785	Identifier	idx2		6755376	0					
ANR	6756786	PrimaryExpression	0		6755376	1					
ANR	6756787	Condition	idx2 < xDiv	1551:31:49530:49540	6755376	1	True				
ANR	6756788	RelationalExpression	idx2 < xDiv		6755376	0		<			
ANR	6756789	Identifier	idx2		6755376	0					
ANR	6756790	Identifier	xDiv		6755376	1					
ANR	6756791	AssignmentExpression	idx2 += 1	1551:44:49543:49551	6755376	2	True	+=			
ANR	6756792	Identifier	idx2		6755376	0					
ANR	6756793	PrimaryExpression	1		6755376	1					
ANR	6756794	ExpressionStatement	data [ ( idx1 * xDiv + idx2 ) * num_channels + 4 ] = sp [ idx2 ]	1552:20:49575:49631	6755376	3	True				
ANR	6756795	AssignmentExpression	data [ ( idx1 * xDiv + idx2 ) * num_channels + 4 ] = sp [ idx2 ]		6755376	0		=			
ANR	6756796	ArrayIndexing	data [ ( idx1 * xDiv + idx2 ) * num_channels + 4 ]		6755376	0					
ANR	6756797	Identifier	data		6755376	0					
ANR	6756798	AdditiveExpression	( idx1 * xDiv + idx2 ) * num_channels + 4		6755376	1		+			
ANR	6756799	MultiplicativeExpression	( idx1 * xDiv + idx2 ) * num_channels		6755376	0		*			
ANR	6756800	AdditiveExpression	idx1 * xDiv + idx2		6755376	0		+			
ANR	6756801	MultiplicativeExpression	idx1 * xDiv		6755376	0		*			
ANR	6756802	Identifier	idx1		6755376	0					
ANR	6756803	Identifier	xDiv		6755376	1					
ANR	6756804	Identifier	idx2		6755376	1					
ANR	6756805	Identifier	num_channels		6755376	1					
ANR	6756806	PrimaryExpression	4		6755376	1					
ANR	6756807	ArrayIndexing	sp [ idx2 ]		6755376	1					
ANR	6756808	Identifier	sp		6755376	0					
ANR	6756809	Identifier	idx2		6755376	1					
ANR	6756810	ExpressionStatement	sp += width	1553:16:49649:49660	6755376	1	True				
ANR	6756811	AssignmentExpression	sp += width		6755376	0		+=			
ANR	6756812	Identifier	sp		6755376	0					
ANR	6756813	Identifier	width		6755376	1					
ANR	6756814	ReturnType	void		6755376	1					
ANR	6756815	Identifier	read_file_CMYK		6755376	2					
ANR	6756816	ParameterList	"jxr_image_t image , int mx , int my , int * data"		6755376	3					
ANR	6756817	Parameter	jxr_image_t image	1382:20:43220:43236	6755376	0	True				
ANR	6756818	ParameterType	jxr_image_t		6755376	0					
ANR	6756819	Identifier	image		6755376	1					
ANR	6756820	Parameter	int mx	1382:39:43239:43244	6755376	1	True				
ANR	6756821	ParameterType	int		6755376	0					
ANR	6756822	Identifier	mx		6755376	1					
ANR	6756823	Parameter	int my	1382:47:43247:43252	6755376	2	True				
ANR	6756824	ParameterType	int		6755376	0					
ANR	6756825	Identifier	my		6755376	1					
ANR	6756826	Parameter	int * data	1382:55:43255:43263	6755376	3	True				
ANR	6756827	ParameterType	int *		6755376	0					
ANR	6756828	Identifier	data		6755376	1					
ANR	6756829	CFGEntryNode	ENTRY		6755376		True				
ANR	6756830	CFGExitNode	EXIT		6755376		True				
ANR	6756831	Symbol	num_channels		6755376						
ANR	6756832	Symbol	* sp		6755376						
ANR	6756833	Symbol	con		6755376						
ANR	6756834	Symbol	data		6755376						
ANR	6756835	Symbol	jxr_get_user_data		6755376						
ANR	6756836	Symbol	con -> ncomp		6755376						
ANR	6756837	Symbol	* xDiv		6755376						
ANR	6756838	Symbol	xDiv		6755376						
ANR	6756839	Symbol	* con		6755376						
ANR	6756840	Symbol	offsetY		6755376						
ANR	6756841	Symbol	* idx2		6755376						
ANR	6756842	Symbol	con -> bpi		6755376						
ANR	6756843	Symbol	* idx1		6755376						
ANR	6756844	Symbol	sp		6755376						
ANR	6756845	Symbol	con -> wid		6755376						
ANR	6756846	Symbol	height		6755376						
ANR	6756847	Symbol	SEEK_SET		6755376						
ANR	6756848	Symbol	yDiv		6755376						
ANR	6756849	Symbol	image		6755376						
ANR	6756850	Symbol	con -> hei		6755376						
ANR	6756851	Symbol	idx2		6755376						
ANR	6756852	Symbol	con -> my		6755376						
ANR	6756853	Symbol	offsetC		6755376						
ANR	6756854	Symbol	idx1		6755376						
ANR	6756855	Symbol	mx		6755376						
ANR	6756856	Symbol	my		6755376						
ANR	6756857	Symbol	offsetK		6755376						
ANR	6756858	Symbol	offsetM		6755376						
ANR	6756859	Symbol	MBheight		6755376						
ANR	6756860	Symbol	* num_channels		6755376						
ANR	6756861	Symbol	size		6755376						
ANR	6756862	Symbol	width		6755376						
ANR	6756863	Symbol	offsetA		6755376						
ANR	6756864	Symbol	con -> buf		6755376						
ANR	6756865	Symbol	* data		6755376						
ANR	6756866	Function	read_file	1560:0:49696:60465							
ANR	6756867	FunctionDef	"read_file (jxr_image_t image , int mx , int my , int * data)"		6756866	0					
ANR	6756868	CompoundStatement		1561:0:49757:60465	6756866	0					
ANR	6756869	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	1562:4:49763:49813	6756866	0	True				
ANR	6756870	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		6756866	0					
ANR	6756871	IdentifierDeclType	context *		6756866	0					
ANR	6756872	Identifier	con		6756866	1					
ANR	6756873	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		6756866	2		=			
ANR	6756874	Identifier	con		6756866	0					
ANR	6756875	CastExpression	( context * ) jxr_get_user_data ( image )		6756866	1					
ANR	6756876	CastTarget	context *		6756866	0					
ANR	6756877	CallExpression	jxr_get_user_data ( image )		6756866	1					
ANR	6756878	Callee	jxr_get_user_data		6756866	0					
ANR	6756879	Identifier	jxr_get_user_data		6756866	0					
ANR	6756880	ArgumentList	image		6756866	1					
ANR	6756881	Argument	image		6756866	0					
ANR	6756882	Identifier	image		6756866	0					
ANR	6756883	IdentifierDeclStatement	unsigned char uExternalNcomp = con -> ncomp + con -> padBytes ;	1563:4:49819:49876	6756866	1	True				
ANR	6756884	IdentifierDecl	uExternalNcomp = con -> ncomp + con -> padBytes		6756866	0					
ANR	6756885	IdentifierDeclType	unsigned char		6756866	0					
ANR	6756886	Identifier	uExternalNcomp		6756866	1					
ANR	6756887	AssignmentExpression	uExternalNcomp = con -> ncomp + con -> padBytes		6756866	2		=			
ANR	6756888	Identifier	uExternalNcomp		6756866	0					
ANR	6756889	AdditiveExpression	con -> ncomp + con -> padBytes		6756866	1		+			
ANR	6756890	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6756891	Identifier	con		6756866	0					
ANR	6756892	Identifier	ncomp		6756866	1					
ANR	6756893	PtrMemberAccess	con -> padBytes		6756866	1					
ANR	6756894	Identifier	con		6756866	0					
ANR	6756895	Identifier	padBytes		6756866	1					
ANR	6756896	IdentifierDeclStatement	int block_wid = uExternalNcomp * ( ( con -> wid + 15 ) & ~15 ) ;	1564:4:49882:49934	6756866	2	True				
ANR	6756897	IdentifierDecl	block_wid = uExternalNcomp * ( ( con -> wid + 15 ) & ~15 )		6756866	0					
ANR	6756898	IdentifierDeclType	int		6756866	0					
ANR	6756899	Identifier	block_wid		6756866	1					
ANR	6756900	AssignmentExpression	block_wid = uExternalNcomp * ( ( con -> wid + 15 ) & ~15 )		6756866	2		=			
ANR	6756901	Identifier	block_wid		6756866	0					
ANR	6756902	MultiplicativeExpression	uExternalNcomp * ( ( con -> wid + 15 ) & ~15 )		6756866	1		*			
ANR	6756903	Identifier	uExternalNcomp		6756866	0					
ANR	6756904	BitAndExpression	( con -> wid + 15 ) & ~15		6756866	1		&			
ANR	6756905	AdditiveExpression	con -> wid + 15		6756866	0		+			
ANR	6756906	PtrMemberAccess	con -> wid		6756866	0					
ANR	6756907	Identifier	con		6756866	0					
ANR	6756908	Identifier	wid		6756866	1					
ANR	6756909	PrimaryExpression	15		6756866	1					
ANR	6756910	Identifier	~15		6756866	1					
ANR	6756911	IfStatement	if ( ( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) ) && jxr_get_IMAGE_CHANNELS ( image ) == 3 )		6756866	3					
ANR	6756912	Condition	( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) ) && jxr_get_IMAGE_CHANNELS ( image ) == 3	1566:7:49944:50054	6756866	0	True				
ANR	6756913	AndExpression	( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) ) && jxr_get_IMAGE_CHANNELS ( image ) == 3		6756866	0		&&			
ANR	6756914	OrExpression	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image )		6756866	0		||			
ANR	6756915	CallExpression	isOutputYUV444 ( image )		6756866	0					
ANR	6756916	Callee	isOutputYUV444		6756866	0					
ANR	6756917	Identifier	isOutputYUV444		6756866	0					
ANR	6756918	ArgumentList	image		6756866	1					
ANR	6756919	Argument	image		6756866	0					
ANR	6756920	Identifier	image		6756866	0					
ANR	6756921	OrExpression	isOutputYUV422 ( image ) || isOutputYUV420 ( image )		6756866	1		||			
ANR	6756922	CallExpression	isOutputYUV422 ( image )		6756866	0					
ANR	6756923	Callee	isOutputYUV422		6756866	0					
ANR	6756924	Identifier	isOutputYUV422		6756866	0					
ANR	6756925	ArgumentList	image		6756866	1					
ANR	6756926	Argument	image		6756866	0					
ANR	6756927	Identifier	image		6756866	0					
ANR	6756928	CallExpression	isOutputYUV420 ( image )		6756866	1					
ANR	6756929	Callee	isOutputYUV420		6756866	0					
ANR	6756930	Identifier	isOutputYUV420		6756866	0					
ANR	6756931	ArgumentList	image		6756866	1					
ANR	6756932	Argument	image		6756866	0					
ANR	6756933	Identifier	image		6756866	0					
ANR	6756934	EqualityExpression	jxr_get_IMAGE_CHANNELS ( image ) == 3		6756866	1		==			
ANR	6756935	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		6756866	0					
ANR	6756936	Callee	jxr_get_IMAGE_CHANNELS		6756866	0					
ANR	6756937	Identifier	jxr_get_IMAGE_CHANNELS		6756866	0					
ANR	6756938	ArgumentList	image		6756866	1					
ANR	6756939	Argument	image		6756866	0					
ANR	6756940	Identifier	image		6756866	0					
ANR	6756941	PrimaryExpression	3		6756866	1					
ANR	6756942	CompoundStatement		7:4:303:303	6756866	1					
ANR	6756943	ExpressionStatement	"read_file_YCC ( image , mx , my , data )"	1569:8:50131:50165	6756866	0	True				
ANR	6756944	CallExpression	"read_file_YCC ( image , mx , my , data )"		6756866	0					
ANR	6756945	Callee	read_file_YCC		6756866	0					
ANR	6756946	Identifier	read_file_YCC		6756866	0					
ANR	6756947	ArgumentList	image		6756866	1					
ANR	6756948	Argument	image		6756866	0					
ANR	6756949	Identifier	image		6756866	0					
ANR	6756950	Argument	mx		6756866	1					
ANR	6756951	Identifier	mx		6756866	0					
ANR	6756952	Argument	my		6756866	2					
ANR	6756953	Identifier	my		6756866	0					
ANR	6756954	Argument	data		6756866	3					
ANR	6756955	Identifier	data		6756866	0					
ANR	6756956	ReturnStatement	return ;	1570:8:50175:50181	6756866	1	True				
ANR	6756957	ElseStatement	else		6756866	0					
ANR	6756958	IfStatement	if ( isOutputCMYKDirect ( image ) && jxr_get_IMAGE_CHANNELS ( image ) == 4 )		6756866	0					
ANR	6756959	Condition	isOutputCMYKDirect ( image ) && jxr_get_IMAGE_CHANNELS ( image ) == 4	1572:12:50201:50263	6756866	0	True				
ANR	6756960	AndExpression	isOutputCMYKDirect ( image ) && jxr_get_IMAGE_CHANNELS ( image ) == 4		6756866	0		&&			
ANR	6756961	CallExpression	isOutputCMYKDirect ( image )		6756866	0					
ANR	6756962	Callee	isOutputCMYKDirect		6756866	0					
ANR	6756963	Identifier	isOutputCMYKDirect		6756866	0					
ANR	6756964	ArgumentList	image		6756866	1					
ANR	6756965	Argument	image		6756866	0					
ANR	6756966	Identifier	image		6756866	0					
ANR	6756967	EqualityExpression	jxr_get_IMAGE_CHANNELS ( image ) == 4		6756866	1		==			
ANR	6756968	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		6756866	0					
ANR	6756969	Callee	jxr_get_IMAGE_CHANNELS		6756866	0					
ANR	6756970	Identifier	jxr_get_IMAGE_CHANNELS		6756866	0					
ANR	6756971	ArgumentList	image		6756866	1					
ANR	6756972	Argument	image		6756866	0					
ANR	6756973	Identifier	image		6756866	0					
ANR	6756974	PrimaryExpression	4		6756866	1					
ANR	6756975	CompoundStatement		13:4:512:512	6756866	1					
ANR	6756976	ExpressionStatement	"read_file_CMYK ( image , mx , my , data )"	1575:8:50340:50375	6756866	0	True				
ANR	6756977	CallExpression	"read_file_CMYK ( image , mx , my , data )"		6756866	0					
ANR	6756978	Callee	read_file_CMYK		6756866	0					
ANR	6756979	Identifier	read_file_CMYK		6756866	0					
ANR	6756980	ArgumentList	image		6756866	1					
ANR	6756981	Argument	image		6756866	0					
ANR	6756982	Identifier	image		6756866	0					
ANR	6756983	Argument	mx		6756866	1					
ANR	6756984	Identifier	mx		6756866	0					
ANR	6756985	Argument	my		6756866	2					
ANR	6756986	Identifier	my		6756866	0					
ANR	6756987	Argument	data		6756866	3					
ANR	6756988	Identifier	data		6756866	0					
ANR	6756989	ReturnStatement	return ;	1576:8:50385:50391	6756866	1	True				
ANR	6756990	IfStatement	if ( con -> ncomp == 3 || con -> ncomp == 4 )		6756866	4					
ANR	6756991	Condition	con -> ncomp == 3 || con -> ncomp == 4	1579:7:50407:50440	6756866	0	True				
ANR	6756992	OrExpression	con -> ncomp == 3 || con -> ncomp == 4		6756866	0		||			
ANR	6756993	EqualityExpression	con -> ncomp == 3		6756866	0		==			
ANR	6756994	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6756995	Identifier	con		6756866	0					
ANR	6756996	Identifier	ncomp		6756866	1					
ANR	6756997	PrimaryExpression	3		6756866	1					
ANR	6756998	EqualityExpression	con -> ncomp == 4		6756866	1		==			
ANR	6756999	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6757000	Identifier	con		6756866	0					
ANR	6757001	Identifier	ncomp		6756866	1					
ANR	6757002	PrimaryExpression	4		6756866	1					
ANR	6757003	CompoundStatement		20:4:689:689	6756866	1					
ANR	6757004	ExpressionStatement	"set_bgr_flag ( con , image )"	1581:8:50457:50481	6756866	0	True				
ANR	6757005	CallExpression	"set_bgr_flag ( con , image )"		6756866	0					
ANR	6757006	Callee	set_bgr_flag		6756866	0					
ANR	6757007	Identifier	set_bgr_flag		6756866	0					
ANR	6757008	ArgumentList	con		6756866	1					
ANR	6757009	Argument	con		6756866	0					
ANR	6757010	Identifier	con		6756866	0					
ANR	6757011	Argument	image		6756866	1					
ANR	6757012	Identifier	image		6756866	0					
ANR	6757013	ElseStatement	else		6756866	0					
ANR	6757014	CompoundStatement		24:4:744:744	6756866	0					
ANR	6757015	ExpressionStatement	con -> isBgr = 0	1585:8:50512:50526	6756866	0	True				
ANR	6757016	AssignmentExpression	con -> isBgr = 0		6756866	0		=			
ANR	6757017	PtrMemberAccess	con -> isBgr		6756866	0					
ANR	6757018	Identifier	con		6756866	0					
ANR	6757019	Identifier	isBgr		6756866	1					
ANR	6757020	PrimaryExpression	0		6756866	1					
ANR	6757021	IfStatement	if ( my != con -> my )		6756866	5					
ANR	6757022	Condition	my != con -> my	1588:8:50543:50555	6756866	0	True				
ANR	6757023	EqualityExpression	my != con -> my		6756866	0		!=			
ANR	6757024	Identifier	my		6756866	0					
ANR	6757025	PtrMemberAccess	con -> my		6756866	1					
ANR	6757026	Identifier	con		6756866	0					
ANR	6757027	Identifier	my		6756866	1					
ANR	6757028	CompoundStatement		31:8:924:931	6756866	1					
ANR	6757029	IdentifierDeclStatement	int trans = ( my * 16 + 16 > con -> hei ) ? con -> hei % 16 : 16 ;	1589:8:50568:50622	6756866	0	True				
ANR	6757030	IdentifierDecl	trans = ( my * 16 + 16 > con -> hei ) ? con -> hei % 16 : 16		6756866	0					
ANR	6757031	IdentifierDeclType	int		6756866	0					
ANR	6757032	Identifier	trans		6756866	1					
ANR	6757033	AssignmentExpression	trans = ( my * 16 + 16 > con -> hei ) ? con -> hei % 16 : 16		6756866	2		=			
ANR	6757034	Identifier	trans		6756866	0					
ANR	6757035	ConditionalExpression	( my * 16 + 16 > con -> hei ) ? con -> hei % 16 : 16		6756866	1					
ANR	6757036	Condition	my * 16 + 16 > con -> hei		6756866	0					
ANR	6757037	RelationalExpression	my * 16 + 16 > con -> hei		6756866	0		>			
ANR	6757038	AdditiveExpression	my * 16 + 16		6756866	0		+			
ANR	6757039	MultiplicativeExpression	my * 16		6756866	0		*			
ANR	6757040	Identifier	my		6756866	0					
ANR	6757041	PrimaryExpression	16		6756866	1					
ANR	6757042	PrimaryExpression	16		6756866	1					
ANR	6757043	PtrMemberAccess	con -> hei		6756866	1					
ANR	6757044	Identifier	con		6756866	0					
ANR	6757045	Identifier	hei		6756866	1					
ANR	6757046	MultiplicativeExpression	con -> hei % 16		6756866	1		%			
ANR	6757047	PtrMemberAccess	con -> hei		6756866	0					
ANR	6757048	Identifier	con		6756866	0					
ANR	6757049	Identifier	hei		6756866	1					
ANR	6757050	PrimaryExpression	16		6756866	1					
ANR	6757051	PrimaryExpression	16		6756866	2					
ANR	6757052	IdentifierDeclStatement	int line_wid = uExternalNcomp * con -> wid ;	1590:8:50632:50672	6756866	1	True				
ANR	6757053	IdentifierDecl	line_wid = uExternalNcomp * con -> wid		6756866	0					
ANR	6757054	IdentifierDeclType	int		6756866	0					
ANR	6757055	Identifier	line_wid		6756866	1					
ANR	6757056	AssignmentExpression	line_wid = uExternalNcomp * con -> wid		6756866	2		=			
ANR	6757057	Identifier	line_wid		6756866	0					
ANR	6757058	MultiplicativeExpression	uExternalNcomp * con -> wid		6756866	1		*			
ANR	6757059	Identifier	uExternalNcomp		6756866	0					
ANR	6757060	PtrMemberAccess	con -> wid		6756866	1					
ANR	6757061	Identifier	con		6756866	0					
ANR	6757062	Identifier	wid		6756866	1					
ANR	6757063	IdentifierDeclStatement	int idx ;	1591:8:50682:50689	6756866	2	True				
ANR	6757064	IdentifierDecl	idx		6756866	0					
ANR	6757065	IdentifierDeclType	int		6756866	0					
ANR	6757066	Identifier	idx		6756866	1					
ANR	6757067	IfStatement	if ( con -> bpi == 1 )		6756866	3					
ANR	6757068	Condition	con -> bpi == 1	1592:12:50703:50715	6756866	0	True				
ANR	6757069	EqualityExpression	con -> bpi == 1		6756866	0		==			
ANR	6757070	PtrMemberAccess	con -> bpi		6756866	0					
ANR	6757071	Identifier	con		6756866	0					
ANR	6757072	Identifier	bpi		6756866	1					
ANR	6757073	PrimaryExpression	1		6756866	1					
ANR	6757074	CompoundStatement		33:12:974:1006	6756866	1					
ANR	6757075	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf ;	1593:12:50732:50764	6756866	0	True				
ANR	6757076	IdentifierDecl	* sp = ( uint8_t * ) con -> buf		6756866	0					
ANR	6757077	IdentifierDeclType	uint8_t *		6756866	0					
ANR	6757078	Identifier	sp		6756866	1					
ANR	6757079	AssignmentExpression	* sp = ( uint8_t * ) con -> buf		6756866	2		=			
ANR	6757080	Identifier	sp		6756866	0					
ANR	6757081	CastExpression	( uint8_t * ) con -> buf		6756866	1					
ANR	6757082	CastTarget	uint8_t *		6756866	0					
ANR	6757083	PtrMemberAccess	con -> buf		6756866	1					
ANR	6757084	Identifier	con		6756866	0					
ANR	6757085	Identifier	buf		6756866	1					
ANR	6757086	ExpressionStatement	line_wid = ( ( line_wid + 7 ) >> 3 )	1594:12:50778:50810	6756866	1	True				
ANR	6757087	AssignmentExpression	line_wid = ( ( line_wid + 7 ) >> 3 )		6756866	0		=			
ANR	6757088	Identifier	line_wid		6756866	0					
ANR	6757089	ShiftExpression	( line_wid + 7 ) >> 3		6756866	1		>>			
ANR	6757090	AdditiveExpression	line_wid + 7		6756866	0		+			
ANR	6757091	Identifier	line_wid		6756866	0					
ANR	6757092	PrimaryExpression	7		6756866	1					
ANR	6757093	PrimaryExpression	3		6756866	1					
ANR	6757094	ExpressionStatement	block_wid >>= 3	1595:12:50824:50839	6756866	2	True				
ANR	6757095	AssignmentExpression	block_wid >>= 3		6756866	0		>>=			
ANR	6757096	Identifier	block_wid		6756866	0					
ANR	6757097	PrimaryExpression	3		6756866	1					
ANR	6757098	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		6756866	3					
ANR	6757099	ForInit	idx = 0 ;	1596:17:50858:50865	6756866	0	True				
ANR	6757100	AssignmentExpression	idx = 0		6756866	0		=			
ANR	6757101	Identifier	idx		6756866	0					
ANR	6757102	PrimaryExpression	0		6756866	1					
ANR	6757103	Condition	idx < trans	1596:26:50867:50877	6756866	1	True				
ANR	6757104	RelationalExpression	idx < trans		6756866	0		<			
ANR	6757105	Identifier	idx		6756866	0					
ANR	6757106	Identifier	trans		6756866	1					
ANR	6757107	AssignmentExpression	idx += 1	1596:39:50880:50887	6756866	2	True	+=			
ANR	6757108	Identifier	idx		6756866	0					
ANR	6757109	PrimaryExpression	1		6756866	1					
ANR	6757110	CompoundStatement		36:49:1132:1132	6756866	3					
ANR	6757111	ExpressionStatement	read_setup ( con )	1597:16:50908:50923	6756866	0	True				
ANR	6757112	CallExpression	read_setup ( con )		6756866	0					
ANR	6757113	Callee	read_setup		6756866	0					
ANR	6757114	Identifier	read_setup		6756866	0					
ANR	6757115	ArgumentList	con		6756866	1					
ANR	6757116	Argument	con		6756866	0					
ANR	6757117	Identifier	con		6756866	0					
ANR	6757118	ExpressionStatement	"read_uint8 ( con , sp , line_wid )"	1598:16:50941:50970	6756866	1	True				
ANR	6757119	CallExpression	"read_uint8 ( con , sp , line_wid )"		6756866	0					
ANR	6757120	Callee	read_uint8		6756866	0					
ANR	6757121	Identifier	read_uint8		6756866	0					
ANR	6757122	ArgumentList	con		6756866	1					
ANR	6757123	Argument	con		6756866	0					
ANR	6757124	Identifier	con		6756866	0					
ANR	6757125	Argument	sp		6756866	1					
ANR	6757126	Identifier	sp		6756866	0					
ANR	6757127	Argument	line_wid		6756866	2					
ANR	6757128	Identifier	line_wid		6756866	0					
ANR	6757129	ExpressionStatement	sp += block_wid	1599:16:50988:51003	6756866	2	True				
ANR	6757130	AssignmentExpression	sp += block_wid		6756866	0		+=			
ANR	6757131	Identifier	sp		6756866	0					
ANR	6757132	Identifier	block_wid		6756866	1					
ANR	6757133	ElseStatement	else		6756866	0					
ANR	6757134	IfStatement	if ( ( con -> bpi == 5 ) || ( con -> bpi == 6 ) )		6756866	0					
ANR	6757135	Condition	( con -> bpi == 5 ) || ( con -> bpi == 6 )	1602:17:51048:51081	6756866	0	True				
ANR	6757136	OrExpression	( con -> bpi == 5 ) || ( con -> bpi == 6 )		6756866	0		||			
ANR	6757137	EqualityExpression	con -> bpi == 5		6756866	0		==			
ANR	6757138	PtrMemberAccess	con -> bpi		6756866	0					
ANR	6757139	Identifier	con		6756866	0					
ANR	6757140	Identifier	bpi		6756866	1					
ANR	6757141	PrimaryExpression	5		6756866	1					
ANR	6757142	EqualityExpression	con -> bpi == 6		6756866	1		==			
ANR	6757143	PtrMemberAccess	con -> bpi		6756866	0					
ANR	6757144	Identifier	con		6756866	0					
ANR	6757145	Identifier	bpi		6756866	1					
ANR	6757146	PrimaryExpression	6		6756866	1					
ANR	6757147	CompoundStatement		43:12:1340:1374	6756866	1					
ANR	6757148	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf ;	1603:12:51098:51132	6756866	0	True				
ANR	6757149	IdentifierDecl	* sp = ( uint16_t * ) con -> buf		6756866	0					
ANR	6757150	IdentifierDeclType	uint16_t *		6756866	0					
ANR	6757151	Identifier	sp		6756866	1					
ANR	6757152	AssignmentExpression	* sp = ( uint16_t * ) con -> buf		6756866	2		=			
ANR	6757153	Identifier	sp		6756866	0					
ANR	6757154	CastExpression	( uint16_t * ) con -> buf		6756866	1					
ANR	6757155	CastTarget	uint16_t *		6756866	0					
ANR	6757156	PtrMemberAccess	con -> buf		6756866	1					
ANR	6757157	Identifier	con		6756866	0					
ANR	6757158	Identifier	buf		6756866	1					
ANR	6757159	ExpressionStatement	block_wid = ( ( con -> wid + 15 ) & ~15 )	1604:12:51158:51189	6756866	1	True				
ANR	6757160	AssignmentExpression	block_wid = ( ( con -> wid + 15 ) & ~15 )		6756866	0		=			
ANR	6757161	Identifier	block_wid		6756866	0					
ANR	6757162	BitAndExpression	( con -> wid + 15 ) & ~15		6756866	1		&			
ANR	6757163	AdditiveExpression	con -> wid + 15		6756866	0		+			
ANR	6757164	PtrMemberAccess	con -> wid		6756866	0					
ANR	6757165	Identifier	con		6756866	0					
ANR	6757166	Identifier	wid		6756866	1					
ANR	6757167	PrimaryExpression	15		6756866	1					
ANR	6757168	Identifier	~15		6756866	1					
ANR	6757169	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		6756866	2					
ANR	6757170	ForInit	idx = 0 ;	1605:17:51208:51215	6756866	0	True				
ANR	6757171	AssignmentExpression	idx = 0		6756866	0		=			
ANR	6757172	Identifier	idx		6756866	0					
ANR	6757173	PrimaryExpression	0		6756866	1					
ANR	6757174	Condition	idx < trans	1605:26:51217:51227	6756866	1	True				
ANR	6757175	RelationalExpression	idx < trans		6756866	0		<			
ANR	6757176	Identifier	idx		6756866	0					
ANR	6757177	Identifier	trans		6756866	1					
ANR	6757178	AssignmentExpression	idx += 1	1605:39:51230:51237	6756866	2	True	+=			
ANR	6757179	Identifier	idx		6756866	0					
ANR	6757180	PrimaryExpression	1		6756866	1					
ANR	6757181	CompoundStatement		45:49:1482:1482	6756866	3					
ANR	6757182	ExpressionStatement	read_setup ( con )	1606:16:51258:51273	6756866	0	True				
ANR	6757183	CallExpression	read_setup ( con )		6756866	0					
ANR	6757184	Callee	read_setup		6756866	0					
ANR	6757185	Identifier	read_setup		6756866	0					
ANR	6757186	ArgumentList	con		6756866	1					
ANR	6757187	Argument	con		6756866	0					
ANR	6757188	Identifier	con		6756866	0					
ANR	6757189	ExpressionStatement	"read_uint16 ( con , sp , con -> wid )"	1607:16:51291:51321	6756866	1	True				
ANR	6757190	CallExpression	"read_uint16 ( con , sp , con -> wid )"		6756866	0					
ANR	6757191	Callee	read_uint16		6756866	0					
ANR	6757192	Identifier	read_uint16		6756866	0					
ANR	6757193	ArgumentList	con		6756866	1					
ANR	6757194	Argument	con		6756866	0					
ANR	6757195	Identifier	con		6756866	0					
ANR	6757196	Argument	sp		6756866	1					
ANR	6757197	Identifier	sp		6756866	0					
ANR	6757198	Argument	con -> wid		6756866	2					
ANR	6757199	PtrMemberAccess	con -> wid		6756866	0					
ANR	6757200	Identifier	con		6756866	0					
ANR	6757201	Identifier	wid		6756866	1					
ANR	6757202	ExpressionStatement	sp += block_wid	1608:16:51339:51354	6756866	2	True				
ANR	6757203	AssignmentExpression	sp += block_wid		6756866	0		+=			
ANR	6757204	Identifier	sp		6756866	0					
ANR	6757205	Identifier	block_wid		6756866	1					
ANR	6757206	ElseStatement	else		6756866	0					
ANR	6757207	IfStatement	if ( con -> bpi == 8 )		6756866	0					
ANR	6757208	Condition	con -> bpi == 8	1611:17:51399:51411	6756866	0	True				
ANR	6757209	EqualityExpression	con -> bpi == 8		6756866	0		==			
ANR	6757210	PtrMemberAccess	con -> bpi		6756866	0					
ANR	6757211	Identifier	con		6756866	0					
ANR	6757212	Identifier	bpi		6756866	1					
ANR	6757213	PrimaryExpression	8		6756866	1					
ANR	6757214	CompoundStatement		52:12:1670:1702	6756866	1					
ANR	6757215	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf ;	1612:12:51428:51460	6756866	0	True				
ANR	6757216	IdentifierDecl	* sp = ( uint8_t * ) con -> buf		6756866	0					
ANR	6757217	IdentifierDeclType	uint8_t *		6756866	0					
ANR	6757218	Identifier	sp		6756866	1					
ANR	6757219	AssignmentExpression	* sp = ( uint8_t * ) con -> buf		6756866	2		=			
ANR	6757220	Identifier	sp		6756866	0					
ANR	6757221	CastExpression	( uint8_t * ) con -> buf		6756866	1					
ANR	6757222	CastTarget	uint8_t *		6756866	0					
ANR	6757223	PtrMemberAccess	con -> buf		6756866	1					
ANR	6757224	Identifier	con		6756866	0					
ANR	6757225	Identifier	buf		6756866	1					
ANR	6757226	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		6756866	1					
ANR	6757227	ForInit	idx = 0 ;	1613:17:51479:51486	6756866	0	True				
ANR	6757228	AssignmentExpression	idx = 0		6756866	0		=			
ANR	6757229	Identifier	idx		6756866	0					
ANR	6757230	PrimaryExpression	0		6756866	1					
ANR	6757231	Condition	idx < trans	1613:26:51488:51498	6756866	1	True				
ANR	6757232	RelationalExpression	idx < trans		6756866	0		<			
ANR	6757233	Identifier	idx		6756866	0					
ANR	6757234	Identifier	trans		6756866	1					
ANR	6757235	AssignmentExpression	idx += 1	1613:39:51501:51508	6756866	2	True	+=			
ANR	6757236	Identifier	idx		6756866	0					
ANR	6757237	PrimaryExpression	1		6756866	1					
ANR	6757238	CompoundStatement		53:49:1753:1753	6756866	3					
ANR	6757239	ExpressionStatement	read_setup ( con )	1614:16:51529:51544	6756866	0	True				
ANR	6757240	CallExpression	read_setup ( con )		6756866	0					
ANR	6757241	Callee	read_setup		6756866	0					
ANR	6757242	Identifier	read_setup		6756866	0					
ANR	6757243	ArgumentList	con		6756866	1					
ANR	6757244	Argument	con		6756866	0					
ANR	6757245	Identifier	con		6756866	0					
ANR	6757246	ExpressionStatement	"read_uint8 ( con , sp , line_wid )"	1615:16:51562:51591	6756866	1	True				
ANR	6757247	CallExpression	"read_uint8 ( con , sp , line_wid )"		6756866	0					
ANR	6757248	Callee	read_uint8		6756866	0					
ANR	6757249	Identifier	read_uint8		6756866	0					
ANR	6757250	ArgumentList	con		6756866	1					
ANR	6757251	Argument	con		6756866	0					
ANR	6757252	Identifier	con		6756866	0					
ANR	6757253	Argument	sp		6756866	1					
ANR	6757254	Identifier	sp		6756866	0					
ANR	6757255	Argument	line_wid		6756866	2					
ANR	6757256	Identifier	line_wid		6756866	0					
ANR	6757257	IfStatement	if ( con -> isBgr )		6756866	2					
ANR	6757258	Condition	con -> isBgr	1616:19:51612:51621	6756866	0	True				
ANR	6757259	PtrMemberAccess	con -> isBgr		6756866	0					
ANR	6757260	Identifier	con		6756866	0					
ANR	6757261	Identifier	isBgr		6756866	1					
ANR	6757262	CompoundStatement		58:20:1904:1909	6756866	1					
ANR	6757263	IdentifierDeclStatement	int i ;	1618:20:51662:51667	6756866	0	True				
ANR	6757264	IdentifierDecl	i		6756866	0					
ANR	6757265	IdentifierDeclType	int		6756866	0					
ANR	6757266	Identifier	i		6756866	1					
ANR	6757267	ForStatement	for ( i = 0 ; i < con -> wid ; i ++ )		6756866	1					
ANR	6757268	ForInit	i = 0 ;	1619:24:51693:51698	6756866	0	True				
ANR	6757269	AssignmentExpression	i = 0		6756866	0		=			
ANR	6757270	Identifier	i		6756866	0					
ANR	6757271	PrimaryExpression	0		6756866	1					
ANR	6757272	Condition	i < con -> wid	1619:31:51700:51711	6756866	1	True				
ANR	6757273	RelationalExpression	i < con -> wid		6756866	0		<			
ANR	6757274	Identifier	i		6756866	0					
ANR	6757275	PtrMemberAccess	con -> wid		6756866	1					
ANR	6757276	Identifier	con		6756866	0					
ANR	6757277	Identifier	wid		6756866	1					
ANR	6757278	PostIncDecOperationExpression	i ++	1619:45:51714:51717	6756866	2	True				
ANR	6757279	Identifier	i		6756866	0					
ANR	6757280	IncDec	++		6756866	1					
ANR	6757281	CompoundStatement		61:24:2008:2041	6756866	3					
ANR	6757282	IdentifierDeclStatement	int tmp = sp [ i * ( uExternalNcomp ) ] ;	1621:24:51766:51799	6756866	0	True				
ANR	6757283	IdentifierDecl	tmp = sp [ i * ( uExternalNcomp ) ]		6756866	0					
ANR	6757284	IdentifierDeclType	int		6756866	0					
ANR	6757285	Identifier	tmp		6756866	1					
ANR	6757286	AssignmentExpression	tmp = sp [ i * ( uExternalNcomp ) ]		6756866	2		=			
ANR	6757287	Identifier	tmp		6756866	0					
ANR	6757288	ArrayIndexing	sp [ i * ( uExternalNcomp ) ]		6756866	1					
ANR	6757289	Identifier	sp		6756866	0					
ANR	6757290	MultiplicativeExpression	i * ( uExternalNcomp )		6756866	1		*			
ANR	6757291	Identifier	i		6756866	0					
ANR	6757292	Identifier	uExternalNcomp		6756866	1					
ANR	6757293	ExpressionStatement	sp [ i * ( uExternalNcomp ) ] = sp [ i * ( uExternalNcomp ) + 2 ]	1622:24:51825:51875	6756866	1	True				
ANR	6757294	AssignmentExpression	sp [ i * ( uExternalNcomp ) ] = sp [ i * ( uExternalNcomp ) + 2 ]		6756866	0		=			
ANR	6757295	ArrayIndexing	sp [ i * ( uExternalNcomp ) ]		6756866	0					
ANR	6757296	Identifier	sp		6756866	0					
ANR	6757297	MultiplicativeExpression	i * ( uExternalNcomp )		6756866	1		*			
ANR	6757298	Identifier	i		6756866	0					
ANR	6757299	Identifier	uExternalNcomp		6756866	1					
ANR	6757300	ArrayIndexing	sp [ i * ( uExternalNcomp ) + 2 ]		6756866	1					
ANR	6757301	Identifier	sp		6756866	0					
ANR	6757302	MultiplicativeExpression	i * ( uExternalNcomp ) + 2		6756866	1		*			
ANR	6757303	Identifier	i		6756866	0					
ANR	6757304	CastExpression	( uExternalNcomp ) + 2		6756866	1					
ANR	6757305	CastTarget	uExternalNcomp		6756866	0					
ANR	6757306	UnaryOperationExpression	+ 2		6756866	1					
ANR	6757307	UnaryOperator	+		6756866	0					
ANR	6757308	PrimaryExpression	2		6756866	1					
ANR	6757309	ExpressionStatement	sp [ i * ( uExternalNcomp ) + 2 ] = tmp	1623:24:51901:51932	6756866	2	True				
ANR	6757310	AssignmentExpression	sp [ i * ( uExternalNcomp ) + 2 ] = tmp		6756866	0		=			
ANR	6757311	ArrayIndexing	sp [ i * ( uExternalNcomp ) + 2 ]		6756866	0					
ANR	6757312	Identifier	sp		6756866	0					
ANR	6757313	MultiplicativeExpression	i * ( uExternalNcomp ) + 2		6756866	1		*			
ANR	6757314	Identifier	i		6756866	0					
ANR	6757315	CastExpression	( uExternalNcomp ) + 2		6756866	1					
ANR	6757316	CastTarget	uExternalNcomp		6756866	0					
ANR	6757317	UnaryOperationExpression	+ 2		6756866	1					
ANR	6757318	UnaryOperator	+		6756866	0					
ANR	6757319	PrimaryExpression	2		6756866	1					
ANR	6757320	Identifier	tmp		6756866	1					
ANR	6757321	ExpressionStatement	sp += block_wid	1626:16:51990:52005	6756866	3	True				
ANR	6757322	AssignmentExpression	sp += block_wid		6756866	0		+=			
ANR	6757323	Identifier	sp		6756866	0					
ANR	6757324	Identifier	block_wid		6756866	1					
ANR	6757325	ElseStatement	else		6756866	0					
ANR	6757326	IfStatement	if ( con -> bpi == 10 )		6756866	0					
ANR	6757327	Condition	con -> bpi == 10	1629:17:52050:52063	6756866	0	True				
ANR	6757328	EqualityExpression	con -> bpi == 10		6756866	0		==			
ANR	6757329	PtrMemberAccess	con -> bpi		6756866	0					
ANR	6757330	Identifier	con		6756866	0					
ANR	6757331	Identifier	bpi		6756866	1					
ANR	6757332	PrimaryExpression	10		6756866	1					
ANR	6757333	CompoundStatement		70:12:2322:2356	6756866	1					
ANR	6757334	IdentifierDeclStatement	uint32_t * sp = ( uint32_t * ) con -> buf ;	1630:12:52080:52114	6756866	0	True				
ANR	6757335	IdentifierDecl	* sp = ( uint32_t * ) con -> buf		6756866	0					
ANR	6757336	IdentifierDeclType	uint32_t *		6756866	0					
ANR	6757337	Identifier	sp		6756866	1					
ANR	6757338	AssignmentExpression	* sp = ( uint32_t * ) con -> buf		6756866	2		=			
ANR	6757339	Identifier	sp		6756866	0					
ANR	6757340	CastExpression	( uint32_t * ) con -> buf		6756866	1					
ANR	6757341	CastTarget	uint32_t *		6756866	0					
ANR	6757342	PtrMemberAccess	con -> buf		6756866	1					
ANR	6757343	Identifier	con		6756866	0					
ANR	6757344	Identifier	buf		6756866	1					
ANR	6757345	ExpressionStatement	block_wid = ( ( con -> wid + 15 ) & ~15 )	1631:12:52128:52159	6756866	1	True				
ANR	6757346	AssignmentExpression	block_wid = ( ( con -> wid + 15 ) & ~15 )		6756866	0		=			
ANR	6757347	Identifier	block_wid		6756866	0					
ANR	6757348	BitAndExpression	( con -> wid + 15 ) & ~15		6756866	1		&			
ANR	6757349	AdditiveExpression	con -> wid + 15		6756866	0		+			
ANR	6757350	PtrMemberAccess	con -> wid		6756866	0					
ANR	6757351	Identifier	con		6756866	0					
ANR	6757352	Identifier	wid		6756866	1					
ANR	6757353	PrimaryExpression	15		6756866	1					
ANR	6757354	Identifier	~15		6756866	1					
ANR	6757355	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		6756866	2					
ANR	6757356	ForInit	idx = 0 ;	1632:17:52178:52185	6756866	0	True				
ANR	6757357	AssignmentExpression	idx = 0		6756866	0		=			
ANR	6757358	Identifier	idx		6756866	0					
ANR	6757359	PrimaryExpression	0		6756866	1					
ANR	6757360	Condition	idx < trans	1632:26:52187:52197	6756866	1	True				
ANR	6757361	RelationalExpression	idx < trans		6756866	0		<			
ANR	6757362	Identifier	idx		6756866	0					
ANR	6757363	Identifier	trans		6756866	1					
ANR	6757364	AssignmentExpression	idx += 1	1632:39:52200:52207	6756866	2	True	+=			
ANR	6757365	Identifier	idx		6756866	0					
ANR	6757366	PrimaryExpression	1		6756866	1					
ANR	6757367	CompoundStatement		72:49:2452:2452	6756866	3					
ANR	6757368	ExpressionStatement	read_setup ( con )	1633:16:52228:52243	6756866	0	True				
ANR	6757369	CallExpression	read_setup ( con )		6756866	0					
ANR	6757370	Callee	read_setup		6756866	0					
ANR	6757371	Identifier	read_setup		6756866	0					
ANR	6757372	ArgumentList	con		6756866	1					
ANR	6757373	Argument	con		6756866	0					
ANR	6757374	Identifier	con		6756866	0					
ANR	6757375	ExpressionStatement	"read_uint32 ( con , sp , con -> wid )"	1634:16:52261:52291	6756866	1	True				
ANR	6757376	CallExpression	"read_uint32 ( con , sp , con -> wid )"		6756866	0					
ANR	6757377	Callee	read_uint32		6756866	0					
ANR	6757378	Identifier	read_uint32		6756866	0					
ANR	6757379	ArgumentList	con		6756866	1					
ANR	6757380	Argument	con		6756866	0					
ANR	6757381	Identifier	con		6756866	0					
ANR	6757382	Argument	sp		6756866	1					
ANR	6757383	Identifier	sp		6756866	0					
ANR	6757384	Argument	con -> wid		6756866	2					
ANR	6757385	PtrMemberAccess	con -> wid		6756866	0					
ANR	6757386	Identifier	con		6756866	0					
ANR	6757387	Identifier	wid		6756866	1					
ANR	6757388	ExpressionStatement	sp += block_wid	1635:16:52309:52324	6756866	2	True				
ANR	6757389	AssignmentExpression	sp += block_wid		6756866	0		+=			
ANR	6757390	Identifier	sp		6756866	0					
ANR	6757391	Identifier	block_wid		6756866	1					
ANR	6757392	ElseStatement	else		6756866	0					
ANR	6757393	IfStatement	if ( con -> bpi == 16 )		6756866	0					
ANR	6757394	Condition	con -> bpi == 16	1638:17:52369:52382	6756866	0	True				
ANR	6757395	EqualityExpression	con -> bpi == 16		6756866	0		==			
ANR	6757396	PtrMemberAccess	con -> bpi		6756866	0					
ANR	6757397	Identifier	con		6756866	0					
ANR	6757398	Identifier	bpi		6756866	1					
ANR	6757399	PrimaryExpression	16		6756866	1					
ANR	6757400	CompoundStatement		78:33:2627:2627	6756866	1					
ANR	6757401	IfStatement	if ( con -> sf == 1 )		6756866	0					
ANR	6757402	Condition	con -> sf == 1	1639:16:52403:52414	6756866	0	True				
ANR	6757403	EqualityExpression	con -> sf == 1		6756866	0		==			
ANR	6757404	PtrMemberAccess	con -> sf		6756866	0					
ANR	6757405	Identifier	con		6756866	0					
ANR	6757406	Identifier	sf		6756866	1					
ANR	6757407	PrimaryExpression	1		6756866	1					
ANR	6757408	CompoundStatement		80:16:2688:2722	6756866	1					
ANR	6757409	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf ;	1640:16:52446:52480	6756866	0	True				
ANR	6757410	IdentifierDecl	* sp = ( uint16_t * ) con -> buf		6756866	0					
ANR	6757411	IdentifierDeclType	uint16_t *		6756866	0					
ANR	6757412	Identifier	sp		6756866	1					
ANR	6757413	AssignmentExpression	* sp = ( uint16_t * ) con -> buf		6756866	2		=			
ANR	6757414	Identifier	sp		6756866	0					
ANR	6757415	CastExpression	( uint16_t * ) con -> buf		6756866	1					
ANR	6757416	CastTarget	uint16_t *		6756866	0					
ANR	6757417	PtrMemberAccess	con -> buf		6756866	1					
ANR	6757418	Identifier	con		6756866	0					
ANR	6757419	Identifier	buf		6756866	1					
ANR	6757420	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		6756866	1					
ANR	6757421	ForInit	idx = 0 ;	1641:21:52503:52510	6756866	0	True				
ANR	6757422	AssignmentExpression	idx = 0		6756866	0		=			
ANR	6757423	Identifier	idx		6756866	0					
ANR	6757424	PrimaryExpression	0		6756866	1					
ANR	6757425	Condition	idx < trans	1641:30:52512:52522	6756866	1	True				
ANR	6757426	RelationalExpression	idx < trans		6756866	0		<			
ANR	6757427	Identifier	idx		6756866	0					
ANR	6757428	Identifier	trans		6756866	1					
ANR	6757429	AssignmentExpression	idx += 1	1641:43:52525:52532	6756866	2	True	+=			
ANR	6757430	Identifier	idx		6756866	0					
ANR	6757431	PrimaryExpression	1		6756866	1					
ANR	6757432	CompoundStatement		81:53:2777:2777	6756866	3					
ANR	6757433	ExpressionStatement	read_setup ( con )	1642:20:52557:52572	6756866	0	True				
ANR	6757434	CallExpression	read_setup ( con )		6756866	0					
ANR	6757435	Callee	read_setup		6756866	0					
ANR	6757436	Identifier	read_setup		6756866	0					
ANR	6757437	ArgumentList	con		6756866	1					
ANR	6757438	Argument	con		6756866	0					
ANR	6757439	Identifier	con		6756866	0					
ANR	6757440	ExpressionStatement	"read_uint16 ( con , sp , line_wid )"	1643:20:52594:52624	6756866	1	True				
ANR	6757441	CallExpression	"read_uint16 ( con , sp , line_wid )"		6756866	0					
ANR	6757442	Callee	read_uint16		6756866	0					
ANR	6757443	Identifier	read_uint16		6756866	0					
ANR	6757444	ArgumentList	con		6756866	1					
ANR	6757445	Argument	con		6756866	0					
ANR	6757446	Identifier	con		6756866	0					
ANR	6757447	Argument	sp		6756866	1					
ANR	6757448	Identifier	sp		6756866	0					
ANR	6757449	Argument	line_wid		6756866	2					
ANR	6757450	Identifier	line_wid		6756866	0					
ANR	6757451	ExpressionStatement	sp += block_wid	1644:20:52646:52661	6756866	2	True				
ANR	6757452	AssignmentExpression	sp += block_wid		6756866	0		+=			
ANR	6757453	Identifier	sp		6756866	0					
ANR	6757454	Identifier	block_wid		6756866	1					
ANR	6757455	ElseStatement	else		6756866	0					
ANR	6757456	IfStatement	if ( con -> sf == 2 )		6756866	0					
ANR	6757457	Condition	con -> sf == 2	1647:21:52718:52729	6756866	0	True				
ANR	6757458	EqualityExpression	con -> sf == 2		6756866	0		==			
ANR	6757459	PtrMemberAccess	con -> sf		6756866	0					
ANR	6757460	Identifier	con		6756866	0					
ANR	6757461	Identifier	sf		6756866	1					
ANR	6757462	PrimaryExpression	2		6756866	1					
ANR	6757463	CompoundStatement		88:16:3010:3038	6756866	1					
ANR	6757464	IdentifierDeclStatement	short * sp = ( short * ) con -> buf ;	1648:16:52768:52796	6756866	0	True				
ANR	6757465	IdentifierDecl	* sp = ( short * ) con -> buf		6756866	0					
ANR	6757466	IdentifierDeclType	short *		6756866	0					
ANR	6757467	Identifier	sp		6756866	1					
ANR	6757468	AssignmentExpression	* sp = ( short * ) con -> buf		6756866	2		=			
ANR	6757469	Identifier	sp		6756866	0					
ANR	6757470	CastExpression	( short * ) con -> buf		6756866	1					
ANR	6757471	CastTarget	short *		6756866	0					
ANR	6757472	PtrMemberAccess	con -> buf		6756866	1					
ANR	6757473	Identifier	con		6756866	0					
ANR	6757474	Identifier	buf		6756866	1					
ANR	6757475	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		6756866	1					
ANR	6757476	ForInit	idx = 0 ;	1649:21:52819:52826	6756866	0	True				
ANR	6757477	AssignmentExpression	idx = 0		6756866	0		=			
ANR	6757478	Identifier	idx		6756866	0					
ANR	6757479	PrimaryExpression	0		6756866	1					
ANR	6757480	Condition	idx < trans	1649:30:52828:52838	6756866	1	True				
ANR	6757481	RelationalExpression	idx < trans		6756866	0		<			
ANR	6757482	Identifier	idx		6756866	0					
ANR	6757483	Identifier	trans		6756866	1					
ANR	6757484	AssignmentExpression	idx += 1	1649:43:52841:52848	6756866	2	True	+=			
ANR	6757485	Identifier	idx		6756866	0					
ANR	6757486	PrimaryExpression	1		6756866	1					
ANR	6757487	CompoundStatement		89:53:3093:3093	6756866	3					
ANR	6757488	ExpressionStatement	read_setup ( con )	1650:20:52873:52888	6756866	0	True				
ANR	6757489	CallExpression	read_setup ( con )		6756866	0					
ANR	6757490	Callee	read_setup		6756866	0					
ANR	6757491	Identifier	read_setup		6756866	0					
ANR	6757492	ArgumentList	con		6756866	1					
ANR	6757493	Argument	con		6756866	0					
ANR	6757494	Identifier	con		6756866	0					
ANR	6757495	ExpressionStatement	"read_uint16 ( con , ( uint16_t * ) sp , line_wid )"	1651:20:52910:52952	6756866	1	True				
ANR	6757496	CallExpression	"read_uint16 ( con , ( uint16_t * ) sp , line_wid )"		6756866	0					
ANR	6757497	Callee	read_uint16		6756866	0					
ANR	6757498	Identifier	read_uint16		6756866	0					
ANR	6757499	ArgumentList	con		6756866	1					
ANR	6757500	Argument	con		6756866	0					
ANR	6757501	Identifier	con		6756866	0					
ANR	6757502	Argument	( uint16_t * ) sp		6756866	1					
ANR	6757503	CastExpression	( uint16_t * ) sp		6756866	0					
ANR	6757504	CastTarget	uint16_t *		6756866	0					
ANR	6757505	Identifier	sp		6756866	1					
ANR	6757506	Argument	line_wid		6756866	2					
ANR	6757507	Identifier	line_wid		6756866	0					
ANR	6757508	ExpressionStatement	sp += block_wid	1652:20:52974:52989	6756866	2	True				
ANR	6757509	AssignmentExpression	sp += block_wid		6756866	0		+=			
ANR	6757510	Identifier	sp		6756866	0					
ANR	6757511	Identifier	block_wid		6756866	1					
ANR	6757512	ElseStatement	else		6756866	0					
ANR	6757513	IfStatement	if ( con -> sf == 3 )		6756866	0					
ANR	6757514	Condition	con -> sf == 3	1655:21:53046:53057	6756866	0	True				
ANR	6757515	EqualityExpression	con -> sf == 3		6756866	0		==			
ANR	6757516	PtrMemberAccess	con -> sf		6756866	0					
ANR	6757517	Identifier	con		6756866	0					
ANR	6757518	Identifier	sf		6756866	1					
ANR	6757519	PrimaryExpression	3		6756866	1					
ANR	6757520	CompoundStatement		96:16:3337:3365	6756866	1					
ANR	6757521	IdentifierDeclStatement	short * sp = ( short * ) con -> buf ;	1656:16:53095:53123	6756866	0	True				
ANR	6757522	IdentifierDecl	* sp = ( short * ) con -> buf		6756866	0					
ANR	6757523	IdentifierDeclType	short *		6756866	0					
ANR	6757524	Identifier	sp		6756866	1					
ANR	6757525	AssignmentExpression	* sp = ( short * ) con -> buf		6756866	2		=			
ANR	6757526	Identifier	sp		6756866	0					
ANR	6757527	CastExpression	( short * ) con -> buf		6756866	1					
ANR	6757528	CastTarget	short *		6756866	0					
ANR	6757529	PtrMemberAccess	con -> buf		6756866	1					
ANR	6757530	Identifier	con		6756866	0					
ANR	6757531	Identifier	buf		6756866	1					
ANR	6757532	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		6756866	1					
ANR	6757533	ForInit	idx = 0 ;	1657:21:53146:53153	6756866	0	True				
ANR	6757534	AssignmentExpression	idx = 0		6756866	0		=			
ANR	6757535	Identifier	idx		6756866	0					
ANR	6757536	PrimaryExpression	0		6756866	1					
ANR	6757537	Condition	idx < trans	1657:30:53155:53165	6756866	1	True				
ANR	6757538	RelationalExpression	idx < trans		6756866	0		<			
ANR	6757539	Identifier	idx		6756866	0					
ANR	6757540	Identifier	trans		6756866	1					
ANR	6757541	AssignmentExpression	idx += 1	1657:43:53168:53175	6756866	2	True	+=			
ANR	6757542	Identifier	idx		6756866	0					
ANR	6757543	PrimaryExpression	1		6756866	1					
ANR	6757544	CompoundStatement		97:53:3420:3420	6756866	3					
ANR	6757545	ExpressionStatement	read_setup ( con )	1658:20:53200:53215	6756866	0	True				
ANR	6757546	CallExpression	read_setup ( con )		6756866	0					
ANR	6757547	Callee	read_setup		6756866	0					
ANR	6757548	Identifier	read_setup		6756866	0					
ANR	6757549	ArgumentList	con		6756866	1					
ANR	6757550	Argument	con		6756866	0					
ANR	6757551	Identifier	con		6756866	0					
ANR	6757552	ExpressionStatement	"read_uint16 ( con , ( uint16_t * ) sp , line_wid )"	1659:20:53237:53279	6756866	1	True				
ANR	6757553	CallExpression	"read_uint16 ( con , ( uint16_t * ) sp , line_wid )"		6756866	0					
ANR	6757554	Callee	read_uint16		6756866	0					
ANR	6757555	Identifier	read_uint16		6756866	0					
ANR	6757556	ArgumentList	con		6756866	1					
ANR	6757557	Argument	con		6756866	0					
ANR	6757558	Identifier	con		6756866	0					
ANR	6757559	Argument	( uint16_t * ) sp		6756866	1					
ANR	6757560	CastExpression	( uint16_t * ) sp		6756866	0					
ANR	6757561	CastTarget	uint16_t *		6756866	0					
ANR	6757562	Identifier	sp		6756866	1					
ANR	6757563	Argument	line_wid		6756866	2					
ANR	6757564	Identifier	line_wid		6756866	0					
ANR	6757565	ExpressionStatement	sp += block_wid	1660:20:53301:53316	6756866	2	True				
ANR	6757566	AssignmentExpression	sp += block_wid		6756866	0		+=			
ANR	6757567	Identifier	sp		6756866	0					
ANR	6757568	Identifier	block_wid		6756866	1					
ANR	6757569	ElseStatement	else		6756866	0					
ANR	6757570	IfStatement	if ( con -> bpi == 32 )		6756866	0					
ANR	6757571	Condition	con -> bpi == 32	1664:17:53379:53392	6756866	0	True				
ANR	6757572	EqualityExpression	con -> bpi == 32		6756866	0		==			
ANR	6757573	PtrMemberAccess	con -> bpi		6756866	0					
ANR	6757574	Identifier	con		6756866	0					
ANR	6757575	Identifier	bpi		6756866	1					
ANR	6757576	PrimaryExpression	32		6756866	1					
ANR	6757577	CompoundStatement		104:33:3637:3637	6756866	1					
ANR	6757578	IfStatement	if ( con -> sf == 2 )		6756866	0					
ANR	6757579	Condition	con -> sf == 2	1665:16:53413:53424	6756866	0	True				
ANR	6757580	EqualityExpression	con -> sf == 2		6756866	0		==			
ANR	6757581	PtrMemberAccess	con -> sf		6756866	0					
ANR	6757582	Identifier	con		6756866	0					
ANR	6757583	Identifier	sf		6756866	1					
ANR	6757584	PrimaryExpression	2		6756866	1					
ANR	6757585	CompoundStatement		106:16:3705:3739	6756866	1					
ANR	6757586	IdentifierDeclStatement	uint32_t * sp = ( uint32_t * ) con -> buf ;	1666:16:53463:53497	6756866	0	True				
ANR	6757587	IdentifierDecl	* sp = ( uint32_t * ) con -> buf		6756866	0					
ANR	6757588	IdentifierDeclType	uint32_t *		6756866	0					
ANR	6757589	Identifier	sp		6756866	1					
ANR	6757590	AssignmentExpression	* sp = ( uint32_t * ) con -> buf		6756866	2		=			
ANR	6757591	Identifier	sp		6756866	0					
ANR	6757592	CastExpression	( uint32_t * ) con -> buf		6756866	1					
ANR	6757593	CastTarget	uint32_t *		6756866	0					
ANR	6757594	PtrMemberAccess	con -> buf		6756866	1					
ANR	6757595	Identifier	con		6756866	0					
ANR	6757596	Identifier	buf		6756866	1					
ANR	6757597	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		6756866	1					
ANR	6757598	ForInit	idx = 0 ;	1667:21:53520:53527	6756866	0	True				
ANR	6757599	AssignmentExpression	idx = 0		6756866	0		=			
ANR	6757600	Identifier	idx		6756866	0					
ANR	6757601	PrimaryExpression	0		6756866	1					
ANR	6757602	Condition	idx < trans	1667:30:53529:53539	6756866	1	True				
ANR	6757603	RelationalExpression	idx < trans		6756866	0		<			
ANR	6757604	Identifier	idx		6756866	0					
ANR	6757605	Identifier	trans		6756866	1					
ANR	6757606	AssignmentExpression	idx += 1	1667:43:53542:53549	6756866	2	True	+=			
ANR	6757607	Identifier	idx		6756866	0					
ANR	6757608	PrimaryExpression	1		6756866	1					
ANR	6757609	CompoundStatement		107:53:3794:3794	6756866	3					
ANR	6757610	ExpressionStatement	read_setup ( con )	1668:20:53574:53589	6756866	0	True				
ANR	6757611	CallExpression	read_setup ( con )		6756866	0					
ANR	6757612	Callee	read_setup		6756866	0					
ANR	6757613	Identifier	read_setup		6756866	0					
ANR	6757614	ArgumentList	con		6756866	1					
ANR	6757615	Argument	con		6756866	0					
ANR	6757616	Identifier	con		6756866	0					
ANR	6757617	ExpressionStatement	"read_uint32 ( con , sp , line_wid )"	1669:20:53611:53641	6756866	1	True				
ANR	6757618	CallExpression	"read_uint32 ( con , sp , line_wid )"		6756866	0					
ANR	6757619	Callee	read_uint32		6756866	0					
ANR	6757620	Identifier	read_uint32		6756866	0					
ANR	6757621	ArgumentList	con		6756866	1					
ANR	6757622	Argument	con		6756866	0					
ANR	6757623	Identifier	con		6756866	0					
ANR	6757624	Argument	sp		6756866	1					
ANR	6757625	Identifier	sp		6756866	0					
ANR	6757626	Argument	line_wid		6756866	2					
ANR	6757627	Identifier	line_wid		6756866	0					
ANR	6757628	ExpressionStatement	sp += block_wid	1670:20:53663:53678	6756866	2	True				
ANR	6757629	AssignmentExpression	sp += block_wid		6756866	0		+=			
ANR	6757630	Identifier	sp		6756866	0					
ANR	6757631	Identifier	block_wid		6756866	1					
ANR	6757632	ElseStatement	else		6756866	0					
ANR	6757633	IfStatement	if ( con -> sf == 3 )		6756866	0					
ANR	6757634	Condition	con -> sf == 3	1673:21:53735:53746	6756866	0	True				
ANR	6757635	EqualityExpression	con -> sf == 3		6756866	0		==			
ANR	6757636	PtrMemberAccess	con -> sf		6756866	0					
ANR	6757637	Identifier	con		6756866	0					
ANR	6757638	Identifier	sf		6756866	1					
ANR	6757639	PrimaryExpression	3		6756866	1					
ANR	6757640	CompoundStatement		114:16:4021:4055	6756866	1					
ANR	6757641	IdentifierDeclStatement	uint32_t * sp = ( uint32_t * ) con -> buf ;	1674:16:53779:53813	6756866	0	True				
ANR	6757642	IdentifierDecl	* sp = ( uint32_t * ) con -> buf		6756866	0					
ANR	6757643	IdentifierDeclType	uint32_t *		6756866	0					
ANR	6757644	Identifier	sp		6756866	1					
ANR	6757645	AssignmentExpression	* sp = ( uint32_t * ) con -> buf		6756866	2		=			
ANR	6757646	Identifier	sp		6756866	0					
ANR	6757647	CastExpression	( uint32_t * ) con -> buf		6756866	1					
ANR	6757648	CastTarget	uint32_t *		6756866	0					
ANR	6757649	PtrMemberAccess	con -> buf		6756866	1					
ANR	6757650	Identifier	con		6756866	0					
ANR	6757651	Identifier	buf		6756866	1					
ANR	6757652	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		6756866	1					
ANR	6757653	ForInit	idx = 0 ;	1675:21:53836:53843	6756866	0	True				
ANR	6757654	AssignmentExpression	idx = 0		6756866	0		=			
ANR	6757655	Identifier	idx		6756866	0					
ANR	6757656	PrimaryExpression	0		6756866	1					
ANR	6757657	Condition	idx < trans	1675:30:53845:53855	6756866	1	True				
ANR	6757658	RelationalExpression	idx < trans		6756866	0		<			
ANR	6757659	Identifier	idx		6756866	0					
ANR	6757660	Identifier	trans		6756866	1					
ANR	6757661	AssignmentExpression	idx += 1	1675:43:53858:53865	6756866	2	True	+=			
ANR	6757662	Identifier	idx		6756866	0					
ANR	6757663	PrimaryExpression	1		6756866	1					
ANR	6757664	CompoundStatement		115:53:4110:4110	6756866	3					
ANR	6757665	ExpressionStatement	read_setup ( con )	1676:20:53890:53905	6756866	0	True				
ANR	6757666	CallExpression	read_setup ( con )		6756866	0					
ANR	6757667	Callee	read_setup		6756866	0					
ANR	6757668	Identifier	read_setup		6756866	0					
ANR	6757669	ArgumentList	con		6756866	1					
ANR	6757670	Argument	con		6756866	0					
ANR	6757671	Identifier	con		6756866	0					
ANR	6757672	ExpressionStatement	"read_uint32 ( con , sp , line_wid )"	1677:20:53927:53957	6756866	1	True				
ANR	6757673	CallExpression	"read_uint32 ( con , sp , line_wid )"		6756866	0					
ANR	6757674	Callee	read_uint32		6756866	0					
ANR	6757675	Identifier	read_uint32		6756866	0					
ANR	6757676	ArgumentList	con		6756866	1					
ANR	6757677	Argument	con		6756866	0					
ANR	6757678	Identifier	con		6756866	0					
ANR	6757679	Argument	sp		6756866	1					
ANR	6757680	Identifier	sp		6756866	0					
ANR	6757681	Argument	line_wid		6756866	2					
ANR	6757682	Identifier	line_wid		6756866	0					
ANR	6757683	ExpressionStatement	sp += block_wid	1678:20:53979:53994	6756866	2	True				
ANR	6757684	AssignmentExpression	sp += block_wid		6756866	0		+=			
ANR	6757685	Identifier	sp		6756866	0					
ANR	6757686	Identifier	block_wid		6756866	1					
ANR	6757687	ExpressionStatement	con -> my = my	1682:8:54048:54060	6756866	4	True				
ANR	6757688	AssignmentExpression	con -> my = my		6756866	0		=			
ANR	6757689	PtrMemberAccess	con -> my		6756866	0					
ANR	6757690	Identifier	con		6756866	0					
ANR	6757691	Identifier	my		6756866	1					
ANR	6757692	Identifier	my		6756866	1					
ANR	6757693	IdentifierDeclStatement	"int xdx , ydx , sxdx ;"	1685:4:54073:54091	6756866	6	True				
ANR	6757694	IdentifierDecl	xdx		6756866	0					
ANR	6757695	IdentifierDeclType	int		6756866	0					
ANR	6757696	Identifier	xdx		6756866	1					
ANR	6757697	IdentifierDecl	ydx		6756866	1					
ANR	6757698	IdentifierDeclType	int		6756866	0					
ANR	6757699	Identifier	ydx		6756866	1					
ANR	6757700	IdentifierDecl	sxdx		6756866	2					
ANR	6757701	IdentifierDeclType	int		6756866	0					
ANR	6757702	Identifier	sxdx		6756866	1					
ANR	6757703	IfStatement	if ( con -> bpi == 1 )		6756866	7					
ANR	6757704	Condition	con -> bpi == 1	1686:8:54101:54113	6756866	0	True				
ANR	6757705	EqualityExpression	con -> bpi == 1		6756866	0		==			
ANR	6757706	PtrMemberAccess	con -> bpi		6756866	0					
ANR	6757707	Identifier	con		6756866	0					
ANR	6757708	Identifier	bpi		6756866	1					
ANR	6757709	PrimaryExpression	1		6756866	1					
ANR	6757710	CompoundStatement		126:23:4358:4358	6756866	1					
ANR	6757711	ExpressionStatement	block_wid = ( ( ( con -> wid + 15 ) & ~15 ) >> 3 )	1687:8:54126:54164	6756866	0	True				
ANR	6757712	AssignmentExpression	block_wid = ( ( ( con -> wid + 15 ) & ~15 ) >> 3 )		6756866	0		=			
ANR	6757713	Identifier	block_wid		6756866	0					
ANR	6757714	ShiftExpression	( ( con -> wid + 15 ) & ~15 ) >> 3		6756866	1		>>			
ANR	6757715	BitAndExpression	( con -> wid + 15 ) & ~15		6756866	0		&			
ANR	6757716	AdditiveExpression	con -> wid + 15		6756866	0		+			
ANR	6757717	PtrMemberAccess	con -> wid		6756866	0					
ANR	6757718	Identifier	con		6756866	0					
ANR	6757719	Identifier	wid		6756866	1					
ANR	6757720	PrimaryExpression	15		6756866	1					
ANR	6757721	Identifier	~15		6756866	1					
ANR	6757722	PrimaryExpression	3		6756866	1					
ANR	6757723	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		6756866	1					
ANR	6757724	ForInit	ydx = 0 ;	1688:13:54179:54187	6756866	0	True				
ANR	6757725	AssignmentExpression	ydx = 0		6756866	0		=			
ANR	6757726	Identifier	ydx		6756866	0					
ANR	6757727	PrimaryExpression	0		6756866	1					
ANR	6757728	Condition	ydx < 16	1688:23:54189:54196	6756866	1	True				
ANR	6757729	RelationalExpression	ydx < 16		6756866	0		<			
ANR	6757730	Identifier	ydx		6756866	0					
ANR	6757731	PrimaryExpression	16		6756866	1					
ANR	6757732	AssignmentExpression	ydx += 1	1688:34:54200:54207	6756866	2	True	+=			
ANR	6757733	Identifier	ydx		6756866	0					
ANR	6757734	PrimaryExpression	1		6756866	1					
ANR	6757735	CompoundStatement		128:44:4452:4452	6756866	3					
ANR	6757736	IfStatement	if ( con -> sf == 1 )		6756866	0					
ANR	6757737	Condition	con -> sf == 1	1689:16:54228:54239	6756866	0	True				
ANR	6757738	EqualityExpression	con -> sf == 1		6756866	0		==			
ANR	6757739	PtrMemberAccess	con -> sf		6756866	0					
ANR	6757740	Identifier	con		6756866	0					
ANR	6757741	Identifier	sf		6756866	1					
ANR	6757742	PrimaryExpression	1		6756866	1					
ANR	6757743	CompoundStatement		131:16:4597:4631	6756866	1					
ANR	6757744	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf + ydx * block_wid + ( ( con -> ncomp * 16 * mx ) >> 3 ) ;	1690:16:54261:54337	6756866	0	True				
ANR	6757745	IdentifierDecl	* sp = ( uint8_t * ) con -> buf + ydx * block_wid + ( ( con -> ncomp * 16 * mx ) >> 3 )		6756866	0					
ANR	6757746	IdentifierDeclType	uint8_t *		6756866	0					
ANR	6757747	Identifier	sp		6756866	1					
ANR	6757748	AssignmentExpression	* sp = ( uint8_t * ) con -> buf + ydx * block_wid + ( ( con -> ncomp * 16 * mx ) >> 3 )		6756866	2		=			
ANR	6757749	Identifier	sp		6756866	0					
ANR	6757750	AdditiveExpression	( uint8_t * ) con -> buf + ydx * block_wid + ( ( con -> ncomp * 16 * mx ) >> 3 )		6756866	1		+			
ANR	6757751	CastExpression	( uint8_t * ) con -> buf		6756866	0					
ANR	6757752	CastTarget	uint8_t *		6756866	0					
ANR	6757753	PtrMemberAccess	con -> buf		6756866	1					
ANR	6757754	Identifier	con		6756866	0					
ANR	6757755	Identifier	buf		6756866	1					
ANR	6757756	AdditiveExpression	ydx * block_wid + ( ( con -> ncomp * 16 * mx ) >> 3 )		6756866	1		+			
ANR	6757757	MultiplicativeExpression	ydx * block_wid		6756866	0		*			
ANR	6757758	Identifier	ydx		6756866	0					
ANR	6757759	Identifier	block_wid		6756866	1					
ANR	6757760	ShiftExpression	( con -> ncomp * 16 * mx ) >> 3		6756866	1		>>			
ANR	6757761	MultiplicativeExpression	con -> ncomp * 16 * mx		6756866	0		*			
ANR	6757762	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6757763	Identifier	con		6756866	0					
ANR	6757764	Identifier	ncomp		6756866	1					
ANR	6757765	MultiplicativeExpression	16 * mx		6756866	1		*			
ANR	6757766	PrimaryExpression	16		6756866	0					
ANR	6757767	Identifier	mx		6756866	1					
ANR	6757768	PrimaryExpression	3		6756866	1					
ANR	6757769	IdentifierDeclStatement	int * dp = data + con -> ncomp * 16 * ydx ;	1691:16:54355:54389	6756866	1	True				
ANR	6757770	IdentifierDecl	* dp = data + con -> ncomp * 16 * ydx		6756866	0					
ANR	6757771	IdentifierDeclType	int *		6756866	0					
ANR	6757772	Identifier	dp		6756866	1					
ANR	6757773	AssignmentExpression	* dp = data + con -> ncomp * 16 * ydx		6756866	2		=			
ANR	6757774	Identifier	dp		6756866	0					
ANR	6757775	AdditiveExpression	data + con -> ncomp * 16 * ydx		6756866	1		+			
ANR	6757776	Identifier	data		6756866	0					
ANR	6757777	MultiplicativeExpression	con -> ncomp * 16 * ydx		6756866	1		*			
ANR	6757778	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6757779	Identifier	con		6756866	0					
ANR	6757780	Identifier	ncomp		6756866	1					
ANR	6757781	MultiplicativeExpression	16 * ydx		6756866	1		*			
ANR	6757782	PrimaryExpression	16		6756866	0					
ANR	6757783	Identifier	ydx		6756866	1					
ANR	6757784	IfStatement	if ( ! con -> photometric )		6756866	2					
ANR	6757785	Condition	! con -> photometric	1692:20:54411:54427	6756866	0	True				
ANR	6757786	UnaryOperationExpression	! con -> photometric		6756866	0					
ANR	6757787	UnaryOperator	!		6756866	0					
ANR	6757788	PtrMemberAccess	con -> photometric		6756866	1					
ANR	6757789	Identifier	con		6756866	0					
ANR	6757790	Identifier	photometric		6756866	1					
ANR	6757791	CompoundStatement		132:39:4672:4672	6756866	1					
ANR	6757792	ForStatement	for ( xdx = 0 ; xdx < con -> ncomp * 16 ; xdx ++ )		6756866	0					
ANR	6757793	ForInit	xdx = 0 ;	1693:25:54457:54465	6756866	0	True				
ANR	6757794	AssignmentExpression	xdx = 0		6756866	0		=			
ANR	6757795	Identifier	xdx		6756866	0					
ANR	6757796	PrimaryExpression	0		6756866	1					
ANR	6757797	Condition	xdx < con -> ncomp * 16	1693:35:54467:54485	6756866	1	True				
ANR	6757798	RelationalExpression	xdx < con -> ncomp * 16		6756866	0		<			
ANR	6757799	Identifier	xdx		6756866	0					
ANR	6757800	MultiplicativeExpression	con -> ncomp * 16		6756866	1		*			
ANR	6757801	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6757802	Identifier	con		6756866	0					
ANR	6757803	Identifier	ncomp		6756866	1					
ANR	6757804	PrimaryExpression	16		6756866	1					
ANR	6757805	PostIncDecOperationExpression	xdx ++	1693:57:54489:54493	6756866	2	True				
ANR	6757806	Identifier	xdx		6756866	0					
ANR	6757807	IncDec	++		6756866	1					
ANR	6757808	ExpressionStatement	dp [ xdx ] = ( ( sp [ xdx >> 3 ] >> ( 7 - ( xdx & 7 ) ) ) & 1 )	1694:24:54520:54569	6756866	3	True				
ANR	6757809	AssignmentExpression	dp [ xdx ] = ( ( sp [ xdx >> 3 ] >> ( 7 - ( xdx & 7 ) ) ) & 1 )		6756866	0		=			
ANR	6757810	ArrayIndexing	dp [ xdx ]		6756866	0					
ANR	6757811	Identifier	dp		6756866	0					
ANR	6757812	Identifier	xdx		6756866	1					
ANR	6757813	BitAndExpression	( sp [ xdx >> 3 ] >> ( 7 - ( xdx & 7 ) ) ) & 1		6756866	1		&			
ANR	6757814	ShiftExpression	sp [ xdx >> 3 ] >> ( 7 - ( xdx & 7 ) )		6756866	0		>>			
ANR	6757815	ArrayIndexing	sp [ xdx >> 3 ]		6756866	0					
ANR	6757816	Identifier	sp		6756866	0					
ANR	6757817	ShiftExpression	xdx >> 3		6756866	1		>>			
ANR	6757818	Identifier	xdx		6756866	0					
ANR	6757819	PrimaryExpression	3		6756866	1					
ANR	6757820	AdditiveExpression	7 - ( xdx & 7 )		6756866	1		-			
ANR	6757821	PrimaryExpression	7		6756866	0					
ANR	6757822	BitAndExpression	xdx & 7		6756866	1		&			
ANR	6757823	Identifier	xdx		6756866	0					
ANR	6757824	PrimaryExpression	7		6756866	1					
ANR	6757825	PrimaryExpression	1		6756866	1					
ANR	6757826	ElseStatement	else		6756866	0					
ANR	6757827	CompoundStatement		136:21:4853:4853	6756866	0					
ANR	6757828	ForStatement	for ( xdx = 0 ; xdx < con -> ncomp * 16 ; xdx ++ )		6756866	0					
ANR	6757829	ForInit	xdx = 0 ;	1697:25:54638:54646	6756866	0	True				
ANR	6757830	AssignmentExpression	xdx = 0		6756866	0		=			
ANR	6757831	Identifier	xdx		6756866	0					
ANR	6757832	PrimaryExpression	0		6756866	1					
ANR	6757833	Condition	xdx < con -> ncomp * 16	1697:35:54648:54666	6756866	1	True				
ANR	6757834	RelationalExpression	xdx < con -> ncomp * 16		6756866	0		<			
ANR	6757835	Identifier	xdx		6756866	0					
ANR	6757836	MultiplicativeExpression	con -> ncomp * 16		6756866	1		*			
ANR	6757837	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6757838	Identifier	con		6756866	0					
ANR	6757839	Identifier	ncomp		6756866	1					
ANR	6757840	PrimaryExpression	16		6756866	1					
ANR	6757841	PostIncDecOperationExpression	xdx ++	1697:57:54670:54674	6756866	2	True				
ANR	6757842	Identifier	xdx		6756866	0					
ANR	6757843	IncDec	++		6756866	1					
ANR	6757844	ExpressionStatement	dp [ xdx ] = ( ( ( ~sp [ xdx >> 3 ] ) >> ( 7 - ( xdx & 7 ) ) ) & 1 )	1698:24:54701:54753	6756866	3	True				
ANR	6757845	AssignmentExpression	dp [ xdx ] = ( ( ( ~sp [ xdx >> 3 ] ) >> ( 7 - ( xdx & 7 ) ) ) & 1 )		6756866	0		=			
ANR	6757846	ArrayIndexing	dp [ xdx ]		6756866	0					
ANR	6757847	Identifier	dp		6756866	0					
ANR	6757848	Identifier	xdx		6756866	1					
ANR	6757849	BitAndExpression	( ( ~sp [ xdx >> 3 ] ) >> ( 7 - ( xdx & 7 ) ) ) & 1		6756866	1		&			
ANR	6757850	ShiftExpression	( ~sp [ xdx >> 3 ] ) >> ( 7 - ( xdx & 7 ) )		6756866	0		>>			
ANR	6757851	ArrayIndexing	~sp [ xdx >> 3 ]		6756866	0					
ANR	6757852	Identifier	~sp		6756866	0					
ANR	6757853	ShiftExpression	xdx >> 3		6756866	1		>>			
ANR	6757854	Identifier	xdx		6756866	0					
ANR	6757855	PrimaryExpression	3		6756866	1					
ANR	6757856	AdditiveExpression	7 - ( xdx & 7 )		6756866	1		-			
ANR	6757857	PrimaryExpression	7		6756866	0					
ANR	6757858	BitAndExpression	xdx & 7		6756866	1		&			
ANR	6757859	Identifier	xdx		6756866	0					
ANR	6757860	PrimaryExpression	7		6756866	1					
ANR	6757861	PrimaryExpression	1		6756866	1					
ANR	6757862	ElseStatement	else		6756866	0					
ANR	6757863	IfStatement	if ( con -> bpi == 5 )		6756866	0					
ANR	6757864	Condition	con -> bpi == 5	1703:13:54816:54828	6756866	0	True				
ANR	6757865	EqualityExpression	con -> bpi == 5		6756866	0		==			
ANR	6757866	PtrMemberAccess	con -> bpi		6756866	0					
ANR	6757867	Identifier	con		6756866	0					
ANR	6757868	Identifier	bpi		6756866	1					
ANR	6757869	PrimaryExpression	5		6756866	1					
ANR	6757870	CompoundStatement		143:28:5073:5073	6756866	1					
ANR	6757871	ExpressionStatement	block_wid = ( ( con -> wid + 15 ) & ~15 )	1704:8:54841:54872	6756866	0	True				
ANR	6757872	AssignmentExpression	block_wid = ( ( con -> wid + 15 ) & ~15 )		6756866	0		=			
ANR	6757873	Identifier	block_wid		6756866	0					
ANR	6757874	BitAndExpression	( con -> wid + 15 ) & ~15		6756866	1		&			
ANR	6757875	AdditiveExpression	con -> wid + 15		6756866	0		+			
ANR	6757876	PtrMemberAccess	con -> wid		6756866	0					
ANR	6757877	Identifier	con		6756866	0					
ANR	6757878	Identifier	wid		6756866	1					
ANR	6757879	PrimaryExpression	15		6756866	1					
ANR	6757880	Identifier	~15		6756866	1					
ANR	6757881	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		6756866	1					
ANR	6757882	ForInit	ydx = 0 ;	1705:13:54887:54895	6756866	0	True				
ANR	6757883	AssignmentExpression	ydx = 0		6756866	0		=			
ANR	6757884	Identifier	ydx		6756866	0					
ANR	6757885	PrimaryExpression	0		6756866	1					
ANR	6757886	Condition	ydx < 16	1705:23:54897:54904	6756866	1	True				
ANR	6757887	RelationalExpression	ydx < 16		6756866	0		<			
ANR	6757888	Identifier	ydx		6756866	0					
ANR	6757889	PrimaryExpression	16		6756866	1					
ANR	6757890	AssignmentExpression	ydx += 1	1705:34:54908:54915	6756866	2	True	+=			
ANR	6757891	Identifier	ydx		6756866	0					
ANR	6757892	PrimaryExpression	1		6756866	1					
ANR	6757893	CompoundStatement		147:12:5260:5298	6756866	3					
ANR	6757894	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx ;	1706:12:54946:55004	6756866	0	True				
ANR	6757895	IdentifierDecl	* sp = ( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx		6756866	0					
ANR	6757896	IdentifierDeclType	uint16_t *		6756866	0					
ANR	6757897	Identifier	sp		6756866	1					
ANR	6757898	AssignmentExpression	* sp = ( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx		6756866	2		=			
ANR	6757899	Identifier	sp		6756866	0					
ANR	6757900	AdditiveExpression	( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx		6756866	1		+			
ANR	6757901	CastExpression	( uint16_t * ) con -> buf		6756866	0					
ANR	6757902	CastTarget	uint16_t *		6756866	0					
ANR	6757903	PtrMemberAccess	con -> buf		6756866	1					
ANR	6757904	Identifier	con		6756866	0					
ANR	6757905	Identifier	buf		6756866	1					
ANR	6757906	AdditiveExpression	ydx * block_wid + 16 * mx		6756866	1		+			
ANR	6757907	MultiplicativeExpression	ydx * block_wid		6756866	0		*			
ANR	6757908	Identifier	ydx		6756866	0					
ANR	6757909	Identifier	block_wid		6756866	1					
ANR	6757910	MultiplicativeExpression	16 * mx		6756866	1		*			
ANR	6757911	PrimaryExpression	16		6756866	0					
ANR	6757912	Identifier	mx		6756866	1					
ANR	6757913	IdentifierDeclStatement	int * dp = data + uExternalNcomp * 16 * ydx ;	1707:12:55018:55056	6756866	1	True				
ANR	6757914	IdentifierDecl	* dp = data + uExternalNcomp * 16 * ydx		6756866	0					
ANR	6757915	IdentifierDeclType	int *		6756866	0					
ANR	6757916	Identifier	dp		6756866	1					
ANR	6757917	AssignmentExpression	* dp = data + uExternalNcomp * 16 * ydx		6756866	2		=			
ANR	6757918	Identifier	dp		6756866	0					
ANR	6757919	AdditiveExpression	data + uExternalNcomp * 16 * ydx		6756866	1		+			
ANR	6757920	Identifier	data		6756866	0					
ANR	6757921	MultiplicativeExpression	uExternalNcomp * 16 * ydx		6756866	1		*			
ANR	6757922	Identifier	uExternalNcomp		6756866	0					
ANR	6757923	MultiplicativeExpression	16 * ydx		6756866	1		*			
ANR	6757924	PrimaryExpression	16		6756866	0					
ANR	6757925	Identifier	ydx		6756866	1					
ANR	6757926	ForStatement	"for ( xdx = 0 , sxdx = 0 ; xdx < uExternalNcomp * 16 ; xdx += uExternalNcomp , sxdx ++ )"		6756866	2					
ANR	6757927	ForInit	"xdx = 0 , sxdx = 0 ;"	1708:17:55075:55092	6756866	0	True				
ANR	6757928	Expression	"xdx = 0 , sxdx = 0"		6756866	0					
ANR	6757929	AssignmentExpression	xdx = 0		6756866	0		=			
ANR	6757930	Identifier	xdx		6756866	0					
ANR	6757931	PrimaryExpression	0		6756866	1					
ANR	6757932	AssignmentExpression	sxdx = 0		6756866	1		=			
ANR	6757933	Identifier	sxdx		6756866	0					
ANR	6757934	PrimaryExpression	0		6756866	1					
ANR	6757935	Condition	xdx < uExternalNcomp * 16	1708:36:55094:55116	6756866	1	True				
ANR	6757936	RelationalExpression	xdx < uExternalNcomp * 16		6756866	0		<			
ANR	6757937	Identifier	xdx		6756866	0					
ANR	6757938	MultiplicativeExpression	uExternalNcomp * 16		6756866	1		*			
ANR	6757939	Identifier	uExternalNcomp		6756866	0					
ANR	6757940	PrimaryExpression	16		6756866	1					
ANR	6757941	Expression	"xdx += uExternalNcomp , sxdx ++"	1708:62:55120:55148	6756866	2	True				
ANR	6757942	AssignmentExpression	xdx += uExternalNcomp		6756866	0		+=			
ANR	6757943	Identifier	xdx		6756866	0					
ANR	6757944	Identifier	uExternalNcomp		6756866	1					
ANR	6757945	PostIncDecOperationExpression	sxdx ++		6756866	1					
ANR	6757946	Identifier	sxdx		6756866	0					
ANR	6757947	IncDec	++		6756866	1					
ANR	6757948	CompoundStatement		148:93:5393:5393	6756866	3					
ANR	6757949	ExpressionStatement	dp [ xdx ] = ( sp [ sxdx ] & 0x1f )	1709:16:55169:55196	6756866	0	True				
ANR	6757950	AssignmentExpression	dp [ xdx ] = ( sp [ sxdx ] & 0x1f )		6756866	0		=			
ANR	6757951	ArrayIndexing	dp [ xdx ]		6756866	0					
ANR	6757952	Identifier	dp		6756866	0					
ANR	6757953	Identifier	xdx		6756866	1					
ANR	6757954	BitAndExpression	sp [ sxdx ] & 0x1f		6756866	1		&			
ANR	6757955	ArrayIndexing	sp [ sxdx ]		6756866	0					
ANR	6757956	Identifier	sp		6756866	0					
ANR	6757957	Identifier	sxdx		6756866	1					
ANR	6757958	PrimaryExpression	0x1f		6756866	1					
ANR	6757959	ExpressionStatement	dp [ xdx + 1 ] = ( ( sp [ sxdx ] >> 5 ) & 0x1f )	1710:16:55214:55252	6756866	1	True				
ANR	6757960	AssignmentExpression	dp [ xdx + 1 ] = ( ( sp [ sxdx ] >> 5 ) & 0x1f )		6756866	0		=			
ANR	6757961	ArrayIndexing	dp [ xdx + 1 ]		6756866	0					
ANR	6757962	Identifier	dp		6756866	0					
ANR	6757963	AdditiveExpression	xdx + 1		6756866	1		+			
ANR	6757964	Identifier	xdx		6756866	0					
ANR	6757965	PrimaryExpression	1		6756866	1					
ANR	6757966	BitAndExpression	( sp [ sxdx ] >> 5 ) & 0x1f		6756866	1		&			
ANR	6757967	ShiftExpression	sp [ sxdx ] >> 5		6756866	0		>>			
ANR	6757968	ArrayIndexing	sp [ sxdx ]		6756866	0					
ANR	6757969	Identifier	sp		6756866	0					
ANR	6757970	Identifier	sxdx		6756866	1					
ANR	6757971	PrimaryExpression	5		6756866	1					
ANR	6757972	PrimaryExpression	0x1f		6756866	1					
ANR	6757973	ExpressionStatement	dp [ xdx + 2 ] = ( ( sp [ sxdx ] >> 10 ) & 0x1f )	1711:16:55270:55309	6756866	2	True				
ANR	6757974	AssignmentExpression	dp [ xdx + 2 ] = ( ( sp [ sxdx ] >> 10 ) & 0x1f )		6756866	0		=			
ANR	6757975	ArrayIndexing	dp [ xdx + 2 ]		6756866	0					
ANR	6757976	Identifier	dp		6756866	0					
ANR	6757977	AdditiveExpression	xdx + 2		6756866	1		+			
ANR	6757978	Identifier	xdx		6756866	0					
ANR	6757979	PrimaryExpression	2		6756866	1					
ANR	6757980	BitAndExpression	( sp [ sxdx ] >> 10 ) & 0x1f		6756866	1		&			
ANR	6757981	ShiftExpression	sp [ sxdx ] >> 10		6756866	0		>>			
ANR	6757982	ArrayIndexing	sp [ sxdx ]		6756866	0					
ANR	6757983	Identifier	sp		6756866	0					
ANR	6757984	Identifier	sxdx		6756866	1					
ANR	6757985	PrimaryExpression	10		6756866	1					
ANR	6757986	PrimaryExpression	0x1f		6756866	1					
ANR	6757987	ElseStatement	else		6756866	0					
ANR	6757988	IfStatement	if ( con -> bpi == 6 )		6756866	0					
ANR	6757989	Condition	con -> bpi == 6	1715:13:55354:55366	6756866	0	True				
ANR	6757990	EqualityExpression	con -> bpi == 6		6756866	0		==			
ANR	6757991	PtrMemberAccess	con -> bpi		6756866	0					
ANR	6757992	Identifier	con		6756866	0					
ANR	6757993	Identifier	bpi		6756866	1					
ANR	6757994	PrimaryExpression	6		6756866	1					
ANR	6757995	CompoundStatement		155:28:5611:5611	6756866	1					
ANR	6757996	ExpressionStatement	block_wid = ( ( con -> wid + 15 ) & ~15 )	1716:8:55379:55410	6756866	0	True				
ANR	6757997	AssignmentExpression	block_wid = ( ( con -> wid + 15 ) & ~15 )		6756866	0		=			
ANR	6757998	Identifier	block_wid		6756866	0					
ANR	6757999	BitAndExpression	( con -> wid + 15 ) & ~15		6756866	1		&			
ANR	6758000	AdditiveExpression	con -> wid + 15		6756866	0		+			
ANR	6758001	PtrMemberAccess	con -> wid		6756866	0					
ANR	6758002	Identifier	con		6756866	0					
ANR	6758003	Identifier	wid		6756866	1					
ANR	6758004	PrimaryExpression	15		6756866	1					
ANR	6758005	Identifier	~15		6756866	1					
ANR	6758006	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		6756866	1					
ANR	6758007	ForInit	ydx = 0 ;	1717:13:55425:55433	6756866	0	True				
ANR	6758008	AssignmentExpression	ydx = 0		6756866	0		=			
ANR	6758009	Identifier	ydx		6756866	0					
ANR	6758010	PrimaryExpression	0		6756866	1					
ANR	6758011	Condition	ydx < 16	1717:23:55435:55442	6756866	1	True				
ANR	6758012	RelationalExpression	ydx < 16		6756866	0		<			
ANR	6758013	Identifier	ydx		6756866	0					
ANR	6758014	PrimaryExpression	16		6756866	1					
ANR	6758015	AssignmentExpression	ydx += 1	1717:34:55446:55453	6756866	2	True	+=			
ANR	6758016	Identifier	ydx		6756866	0					
ANR	6758017	PrimaryExpression	1		6756866	1					
ANR	6758018	CompoundStatement		159:12:5796:5834	6756866	3					
ANR	6758019	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx ;	1718:12:55482:55540	6756866	0	True				
ANR	6758020	IdentifierDecl	* sp = ( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx		6756866	0					
ANR	6758021	IdentifierDeclType	uint16_t *		6756866	0					
ANR	6758022	Identifier	sp		6756866	1					
ANR	6758023	AssignmentExpression	* sp = ( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx		6756866	2		=			
ANR	6758024	Identifier	sp		6756866	0					
ANR	6758025	AdditiveExpression	( uint16_t * ) con -> buf + ydx * block_wid + 16 * mx		6756866	1		+			
ANR	6758026	CastExpression	( uint16_t * ) con -> buf		6756866	0					
ANR	6758027	CastTarget	uint16_t *		6756866	0					
ANR	6758028	PtrMemberAccess	con -> buf		6756866	1					
ANR	6758029	Identifier	con		6756866	0					
ANR	6758030	Identifier	buf		6756866	1					
ANR	6758031	AdditiveExpression	ydx * block_wid + 16 * mx		6756866	1		+			
ANR	6758032	MultiplicativeExpression	ydx * block_wid		6756866	0		*			
ANR	6758033	Identifier	ydx		6756866	0					
ANR	6758034	Identifier	block_wid		6756866	1					
ANR	6758035	MultiplicativeExpression	16 * mx		6756866	1		*			
ANR	6758036	PrimaryExpression	16		6756866	0					
ANR	6758037	Identifier	mx		6756866	1					
ANR	6758038	IdentifierDeclStatement	int * dp = data + uExternalNcomp * 16 * ydx ;	1719:12:55554:55592	6756866	1	True				
ANR	6758039	IdentifierDecl	* dp = data + uExternalNcomp * 16 * ydx		6756866	0					
ANR	6758040	IdentifierDeclType	int *		6756866	0					
ANR	6758041	Identifier	dp		6756866	1					
ANR	6758042	AssignmentExpression	* dp = data + uExternalNcomp * 16 * ydx		6756866	2		=			
ANR	6758043	Identifier	dp		6756866	0					
ANR	6758044	AdditiveExpression	data + uExternalNcomp * 16 * ydx		6756866	1		+			
ANR	6758045	Identifier	data		6756866	0					
ANR	6758046	MultiplicativeExpression	uExternalNcomp * 16 * ydx		6756866	1		*			
ANR	6758047	Identifier	uExternalNcomp		6756866	0					
ANR	6758048	MultiplicativeExpression	16 * ydx		6756866	1		*			
ANR	6758049	PrimaryExpression	16		6756866	0					
ANR	6758050	Identifier	ydx		6756866	1					
ANR	6758051	ForStatement	"for ( xdx = 0 , sxdx = 0 ; xdx < uExternalNcomp * 16 ; xdx += uExternalNcomp , sxdx ++ )"		6756866	2					
ANR	6758052	ForInit	"xdx = 0 , sxdx = 0 ;"	1720:17:55611:55628	6756866	0	True				
ANR	6758053	Expression	"xdx = 0 , sxdx = 0"		6756866	0					
ANR	6758054	AssignmentExpression	xdx = 0		6756866	0		=			
ANR	6758055	Identifier	xdx		6756866	0					
ANR	6758056	PrimaryExpression	0		6756866	1					
ANR	6758057	AssignmentExpression	sxdx = 0		6756866	1		=			
ANR	6758058	Identifier	sxdx		6756866	0					
ANR	6758059	PrimaryExpression	0		6756866	1					
ANR	6758060	Condition	xdx < uExternalNcomp * 16	1720:36:55630:55652	6756866	1	True				
ANR	6758061	RelationalExpression	xdx < uExternalNcomp * 16		6756866	0		<			
ANR	6758062	Identifier	xdx		6756866	0					
ANR	6758063	MultiplicativeExpression	uExternalNcomp * 16		6756866	1		*			
ANR	6758064	Identifier	uExternalNcomp		6756866	0					
ANR	6758065	PrimaryExpression	16		6756866	1					
ANR	6758066	Expression	"xdx += uExternalNcomp , sxdx ++"	1720:62:55656:55684	6756866	2	True				
ANR	6758067	AssignmentExpression	xdx += uExternalNcomp		6756866	0		+=			
ANR	6758068	Identifier	xdx		6756866	0					
ANR	6758069	Identifier	uExternalNcomp		6756866	1					
ANR	6758070	PostIncDecOperationExpression	sxdx ++		6756866	1					
ANR	6758071	Identifier	sxdx		6756866	0					
ANR	6758072	IncDec	++		6756866	1					
ANR	6758073	CompoundStatement		160:93:5929:5929	6756866	3					
ANR	6758074	ExpressionStatement	dp [ xdx ] = ( ( sp [ sxdx ] & 0x1f ) << 1 )	1721:16:55705:55739	6756866	0	True				
ANR	6758075	AssignmentExpression	dp [ xdx ] = ( ( sp [ sxdx ] & 0x1f ) << 1 )		6756866	0		=			
ANR	6758076	ArrayIndexing	dp [ xdx ]		6756866	0					
ANR	6758077	Identifier	dp		6756866	0					
ANR	6758078	Identifier	xdx		6756866	1					
ANR	6758079	ShiftExpression	( sp [ sxdx ] & 0x1f ) << 1		6756866	1		<<			
ANR	6758080	BitAndExpression	sp [ sxdx ] & 0x1f		6756866	0		&			
ANR	6758081	ArrayIndexing	sp [ sxdx ]		6756866	0					
ANR	6758082	Identifier	sp		6756866	0					
ANR	6758083	Identifier	sxdx		6756866	1					
ANR	6758084	PrimaryExpression	0x1f		6756866	1					
ANR	6758085	PrimaryExpression	1		6756866	1					
ANR	6758086	ExpressionStatement	dp [ xdx + 1 ] = ( ( sp [ sxdx ] >> 5 ) & 0x3f )	1722:16:55757:55795	6756866	1	True				
ANR	6758087	AssignmentExpression	dp [ xdx + 1 ] = ( ( sp [ sxdx ] >> 5 ) & 0x3f )		6756866	0		=			
ANR	6758088	ArrayIndexing	dp [ xdx + 1 ]		6756866	0					
ANR	6758089	Identifier	dp		6756866	0					
ANR	6758090	AdditiveExpression	xdx + 1		6756866	1		+			
ANR	6758091	Identifier	xdx		6756866	0					
ANR	6758092	PrimaryExpression	1		6756866	1					
ANR	6758093	BitAndExpression	( sp [ sxdx ] >> 5 ) & 0x3f		6756866	1		&			
ANR	6758094	ShiftExpression	sp [ sxdx ] >> 5		6756866	0		>>			
ANR	6758095	ArrayIndexing	sp [ sxdx ]		6756866	0					
ANR	6758096	Identifier	sp		6756866	0					
ANR	6758097	Identifier	sxdx		6756866	1					
ANR	6758098	PrimaryExpression	5		6756866	1					
ANR	6758099	PrimaryExpression	0x3f		6756866	1					
ANR	6758100	ExpressionStatement	dp [ xdx + 2 ] = ( ( ( sp [ sxdx ] >> 11 ) & 0x1f ) << 1 )	1723:16:55813:55859	6756866	2	True				
ANR	6758101	AssignmentExpression	dp [ xdx + 2 ] = ( ( ( sp [ sxdx ] >> 11 ) & 0x1f ) << 1 )		6756866	0		=			
ANR	6758102	ArrayIndexing	dp [ xdx + 2 ]		6756866	0					
ANR	6758103	Identifier	dp		6756866	0					
ANR	6758104	AdditiveExpression	xdx + 2		6756866	1		+			
ANR	6758105	Identifier	xdx		6756866	0					
ANR	6758106	PrimaryExpression	2		6756866	1					
ANR	6758107	ShiftExpression	( ( sp [ sxdx ] >> 11 ) & 0x1f ) << 1		6756866	1		<<			
ANR	6758108	BitAndExpression	( sp [ sxdx ] >> 11 ) & 0x1f		6756866	0		&			
ANR	6758109	ShiftExpression	sp [ sxdx ] >> 11		6756866	0		>>			
ANR	6758110	ArrayIndexing	sp [ sxdx ]		6756866	0					
ANR	6758111	Identifier	sp		6756866	0					
ANR	6758112	Identifier	sxdx		6756866	1					
ANR	6758113	PrimaryExpression	11		6756866	1					
ANR	6758114	PrimaryExpression	0x1f		6756866	1					
ANR	6758115	PrimaryExpression	1		6756866	1					
ANR	6758116	ElseStatement	else		6756866	0					
ANR	6758117	IfStatement	if ( con -> bpi == 8 )		6756866	0					
ANR	6758118	Condition	con -> bpi == 8	1727:13:55904:55916	6756866	0	True				
ANR	6758119	EqualityExpression	con -> bpi == 8		6756866	0		==			
ANR	6758120	PtrMemberAccess	con -> bpi		6756866	0					
ANR	6758121	Identifier	con		6756866	0					
ANR	6758122	Identifier	bpi		6756866	1					
ANR	6758123	PrimaryExpression	8		6756866	1					
ANR	6758124	CompoundStatement		167:28:6161:6161	6756866	1					
ANR	6758125	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		6756866	0					
ANR	6758126	ForInit	ydx = 0 ;	1728:13:55934:55942	6756866	0	True				
ANR	6758127	AssignmentExpression	ydx = 0		6756866	0		=			
ANR	6758128	Identifier	ydx		6756866	0					
ANR	6758129	PrimaryExpression	0		6756866	1					
ANR	6758130	Condition	ydx < 16	1728:23:55944:55951	6756866	1	True				
ANR	6758131	RelationalExpression	ydx < 16		6756866	0		<			
ANR	6758132	Identifier	ydx		6756866	0					
ANR	6758133	PrimaryExpression	16		6756866	1					
ANR	6758134	AssignmentExpression	ydx += 1	1728:34:55955:55962	6756866	2	True	+=			
ANR	6758135	Identifier	ydx		6756866	0					
ANR	6758136	PrimaryExpression	1		6756866	1					
ANR	6758137	CompoundStatement		168:44:6207:6207	6756866	3					
ANR	6758138	IfStatement	if ( con -> sf == 1 )		6756866	0					
ANR	6758139	Condition	con -> sf == 1	1729:16:55983:55994	6756866	0	True				
ANR	6758140	EqualityExpression	con -> sf == 1		6756866	0		==			
ANR	6758141	PtrMemberAccess	con -> sf		6756866	0					
ANR	6758142	Identifier	con		6756866	0					
ANR	6758143	Identifier	sf		6756866	1					
ANR	6758144	PrimaryExpression	1		6756866	1					
ANR	6758145	CompoundStatement		172:16:6410:6417	6756866	1					
ANR	6758146	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx ;	1730:16:56026:56097	6756866	0	True				
ANR	6758147	IdentifierDecl	* sp = ( uint8_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		6756866	0					
ANR	6758148	IdentifierDeclType	uint8_t *		6756866	0					
ANR	6758149	Identifier	sp		6756866	1					
ANR	6758150	AssignmentExpression	* sp = ( uint8_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		6756866	2		=			
ANR	6758151	Identifier	sp		6756866	0					
ANR	6758152	AdditiveExpression	( uint8_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		6756866	1		+			
ANR	6758153	CastExpression	( uint8_t * ) con -> buf		6756866	0					
ANR	6758154	CastTarget	uint8_t *		6756866	0					
ANR	6758155	PtrMemberAccess	con -> buf		6756866	1					
ANR	6758156	Identifier	con		6756866	0					
ANR	6758157	Identifier	buf		6756866	1					
ANR	6758158	AdditiveExpression	ydx * block_wid + uExternalNcomp * 16 * mx		6756866	1		+			
ANR	6758159	MultiplicativeExpression	ydx * block_wid		6756866	0		*			
ANR	6758160	Identifier	ydx		6756866	0					
ANR	6758161	Identifier	block_wid		6756866	1					
ANR	6758162	MultiplicativeExpression	uExternalNcomp * 16 * mx		6756866	1		*			
ANR	6758163	Identifier	uExternalNcomp		6756866	0					
ANR	6758164	MultiplicativeExpression	16 * mx		6756866	1		*			
ANR	6758165	PrimaryExpression	16		6756866	0					
ANR	6758166	Identifier	mx		6756866	1					
ANR	6758167	IdentifierDeclStatement	int * dp = data + con -> ncomp * 16 * ydx ;	1731:16:56115:56150	6756866	1	True				
ANR	6758168	IdentifierDecl	* dp = data + con -> ncomp * 16 * ydx		6756866	0					
ANR	6758169	IdentifierDeclType	int *		6756866	0					
ANR	6758170	Identifier	dp		6756866	1					
ANR	6758171	AssignmentExpression	* dp = data + con -> ncomp * 16 * ydx		6756866	2		=			
ANR	6758172	Identifier	dp		6756866	0					
ANR	6758173	AdditiveExpression	data + con -> ncomp * 16 * ydx		6756866	1		+			
ANR	6758174	Identifier	data		6756866	0					
ANR	6758175	MultiplicativeExpression	con -> ncomp * 16 * ydx		6756866	1		*			
ANR	6758176	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6758177	Identifier	con		6756866	0					
ANR	6758178	Identifier	ncomp		6756866	1					
ANR	6758179	MultiplicativeExpression	16 * ydx		6756866	1		*			
ANR	6758180	PrimaryExpression	16		6756866	0					
ANR	6758181	Identifier	ydx		6756866	1					
ANR	6758182	IdentifierDeclStatement	int iCh ;	1732:16:56168:56175	6756866	2	True				
ANR	6758183	IdentifierDecl	iCh		6756866	0					
ANR	6758184	IdentifierDeclType	int		6756866	0					
ANR	6758185	Identifier	iCh		6756866	1					
ANR	6758186	ForStatement	for ( xdx = 0 ; xdx < 16 ; xdx ++ )		6756866	3					
ANR	6758187	ForInit	xdx = 0 ;	1733:21:56198:56206	6756866	0	True				
ANR	6758188	AssignmentExpression	xdx = 0		6756866	0		=			
ANR	6758189	Identifier	xdx		6756866	0					
ANR	6758190	PrimaryExpression	0		6756866	1					
ANR	6758191	Condition	xdx < 16	1733:31:56208:56215	6756866	1	True				
ANR	6758192	RelationalExpression	xdx < 16		6756866	0		<			
ANR	6758193	Identifier	xdx		6756866	0					
ANR	6758194	PrimaryExpression	16		6756866	1					
ANR	6758195	PostIncDecOperationExpression	xdx ++	1733:42:56219:56223	6756866	2	True				
ANR	6758196	Identifier	xdx		6756866	0					
ANR	6758197	IncDec	++		6756866	1					
ANR	6758198	CompoundStatement		173:49:6468:6468	6756866	3					
ANR	6758199	ForStatement	for ( iCh = 0 ; iCh < con -> ncomp ; iCh ++ )		6756866	0					
ANR	6758200	ForInit	iCh = 0 ;	1734:25:56253:56260	6756866	0	True				
ANR	6758201	AssignmentExpression	iCh = 0		6756866	0		=			
ANR	6758202	Identifier	iCh		6756866	0					
ANR	6758203	PrimaryExpression	0		6756866	1					
ANR	6758204	Condition	iCh < con -> ncomp	1734:34:56262:56277	6756866	1	True				
ANR	6758205	RelationalExpression	iCh < con -> ncomp		6756866	0		<			
ANR	6758206	Identifier	iCh		6756866	0					
ANR	6758207	PtrMemberAccess	con -> ncomp		6756866	1					
ANR	6758208	Identifier	con		6756866	0					
ANR	6758209	Identifier	ncomp		6756866	1					
ANR	6758210	PostIncDecOperationExpression	iCh ++	1734:52:56280:56285	6756866	2	True				
ANR	6758211	Identifier	iCh		6756866	0					
ANR	6758212	IncDec	++		6756866	1					
ANR	6758213	CompoundStatement		174:59:6529:6529	6756866	3					
ANR	6758214	ExpressionStatement	dp [ iCh ] = ( sp [ iCh ] >> image -> shift_bits )	1735:24:56313:56353	6756866	0	True				
ANR	6758215	AssignmentExpression	dp [ iCh ] = ( sp [ iCh ] >> image -> shift_bits )		6756866	0		=			
ANR	6758216	ArrayIndexing	dp [ iCh ]		6756866	0					
ANR	6758217	Identifier	dp		6756866	0					
ANR	6758218	Identifier	iCh		6756866	1					
ANR	6758219	ShiftExpression	sp [ iCh ] >> image -> shift_bits		6756866	1		>>			
ANR	6758220	ArrayIndexing	sp [ iCh ]		6756866	0					
ANR	6758221	Identifier	sp		6756866	0					
ANR	6758222	Identifier	iCh		6756866	1					
ANR	6758223	PtrMemberAccess	image -> shift_bits		6756866	1					
ANR	6758224	Identifier	image		6756866	0					
ANR	6758225	Identifier	shift_bits		6756866	1					
ANR	6758226	ExpressionStatement	dp += con -> ncomp	1737:20:56398:56414	6756866	1	True				
ANR	6758227	AssignmentExpression	dp += con -> ncomp		6756866	0		+=			
ANR	6758228	Identifier	dp		6756866	0					
ANR	6758229	PtrMemberAccess	con -> ncomp		6756866	1					
ANR	6758230	Identifier	con		6756866	0					
ANR	6758231	Identifier	ncomp		6756866	1					
ANR	6758232	ExpressionStatement	sp += uExternalNcomp	1738:20:56436:56456	6756866	2	True				
ANR	6758233	AssignmentExpression	sp += uExternalNcomp		6756866	0		+=			
ANR	6758234	Identifier	sp		6756866	0					
ANR	6758235	Identifier	uExternalNcomp		6756866	1					
ANR	6758236	ElseStatement	else		6756866	0					
ANR	6758237	IfStatement	if ( con -> sf == 4 )		6756866	0					
ANR	6758238	Condition	con -> sf == 4	1741:21:56511:56522	6756866	0	True				
ANR	6758239	EqualityExpression	con -> sf == 4		6756866	0		==			
ANR	6758240	PtrMemberAccess	con -> sf		6756866	0					
ANR	6758241	Identifier	con		6756866	0					
ANR	6758242	Identifier	sf		6756866	1					
ANR	6758243	PrimaryExpression	4		6756866	1					
ANR	6758244	CompoundStatement		183:16:6921:6946	6756866	1					
ANR	6758245	IdentifierDeclStatement	uint8_t * sp = ( uint8_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx ;	1742:16:56553:56620	6756866	0	True				
ANR	6758246	IdentifierDecl	* sp = ( uint8_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx		6756866	0					
ANR	6758247	IdentifierDeclType	uint8_t *		6756866	0					
ANR	6758248	Identifier	sp		6756866	1					
ANR	6758249	AssignmentExpression	* sp = ( uint8_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx		6756866	2		=			
ANR	6758250	Identifier	sp		6756866	0					
ANR	6758251	AdditiveExpression	( uint8_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx		6756866	1		+			
ANR	6758252	CastExpression	( uint8_t * ) con -> buf		6756866	0					
ANR	6758253	CastTarget	uint8_t *		6756866	0					
ANR	6758254	PtrMemberAccess	con -> buf		6756866	1					
ANR	6758255	Identifier	con		6756866	0					
ANR	6758256	Identifier	buf		6756866	1					
ANR	6758257	AdditiveExpression	ydx * block_wid + con -> ncomp * 16 * mx		6756866	1		+			
ANR	6758258	MultiplicativeExpression	ydx * block_wid		6756866	0		*			
ANR	6758259	Identifier	ydx		6756866	0					
ANR	6758260	Identifier	block_wid		6756866	1					
ANR	6758261	MultiplicativeExpression	con -> ncomp * 16 * mx		6756866	1		*			
ANR	6758262	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6758263	Identifier	con		6756866	0					
ANR	6758264	Identifier	ncomp		6756866	1					
ANR	6758265	MultiplicativeExpression	16 * mx		6756866	1		*			
ANR	6758266	PrimaryExpression	16		6756866	0					
ANR	6758267	Identifier	mx		6756866	1					
ANR	6758268	IdentifierDeclStatement	int * dp = data + 3 * 16 * ydx ;	1743:16:56679:56704	6756866	1	True				
ANR	6758269	IdentifierDecl	* dp = data + 3 * 16 * ydx		6756866	0					
ANR	6758270	IdentifierDeclType	int *		6756866	0					
ANR	6758271	Identifier	dp		6756866	1					
ANR	6758272	AssignmentExpression	* dp = data + 3 * 16 * ydx		6756866	2		=			
ANR	6758273	Identifier	dp		6756866	0					
ANR	6758274	AdditiveExpression	data + 3 * 16 * ydx		6756866	1		+			
ANR	6758275	Identifier	data		6756866	0					
ANR	6758276	MultiplicativeExpression	3 * 16 * ydx		6756866	1		*			
ANR	6758277	PrimaryExpression	3		6756866	0					
ANR	6758278	MultiplicativeExpression	16 * ydx		6756866	1		*			
ANR	6758279	PrimaryExpression	16		6756866	0					
ANR	6758280	Identifier	ydx		6756866	1					
ANR	6758281	ForStatement	"for ( xdx = 0 , sxdx = 0 ; xdx < 3 * 16 ; xdx += 3 , sxdx += 4 )"		6756866	2					
ANR	6758282	ForInit	"xdx = 0 , sxdx = 0 ;"	1744:21:56727:56745	6756866	0	True				
ANR	6758283	Expression	"xdx = 0 , sxdx = 0"		6756866	0					
ANR	6758284	AssignmentExpression	xdx = 0		6756866	0		=			
ANR	6758285	Identifier	xdx		6756866	0					
ANR	6758286	PrimaryExpression	0		6756866	1					
ANR	6758287	AssignmentExpression	sxdx = 0		6756866	1		=			
ANR	6758288	Identifier	sxdx		6756866	0					
ANR	6758289	PrimaryExpression	0		6756866	1					
ANR	6758290	Condition	xdx < 3 * 16	1744:41:56747:56756	6756866	1	True				
ANR	6758291	RelationalExpression	xdx < 3 * 16		6756866	0		<			
ANR	6758292	Identifier	xdx		6756866	0					
ANR	6758293	MultiplicativeExpression	3 * 16		6756866	1		*			
ANR	6758294	PrimaryExpression	3		6756866	0					
ANR	6758295	PrimaryExpression	16		6756866	1					
ANR	6758296	Expression	"xdx += 3 , sxdx += 4"	1744:54:56760:56777	6756866	2	True				
ANR	6758297	AssignmentExpression	xdx += 3		6756866	0		+=			
ANR	6758298	Identifier	xdx		6756866	0					
ANR	6758299	PrimaryExpression	3		6756866	1					
ANR	6758300	AssignmentExpression	sxdx += 4		6756866	1		+=			
ANR	6758301	Identifier	sxdx		6756866	0					
ANR	6758302	PrimaryExpression	4		6756866	1					
ANR	6758303	CompoundStatement		184:74:7022:7022	6756866	3					
ANR	6758304	ExpressionStatement	"dp [ xdx ] = forwardRGBE ( ( int ) sp [ sxdx ] , ( int ) sp [ sxdx + 3 ] )"	1745:20:56802:56857	6756866	0	True				
ANR	6758305	AssignmentExpression	"dp [ xdx ] = forwardRGBE ( ( int ) sp [ sxdx ] , ( int ) sp [ sxdx + 3 ] )"		6756866	0		=			
ANR	6758306	ArrayIndexing	dp [ xdx ]		6756866	0					
ANR	6758307	Identifier	dp		6756866	0					
ANR	6758308	Identifier	xdx		6756866	1					
ANR	6758309	CallExpression	"forwardRGBE ( ( int ) sp [ sxdx ] , ( int ) sp [ sxdx + 3 ] )"		6756866	1					
ANR	6758310	Callee	forwardRGBE		6756866	0					
ANR	6758311	Identifier	forwardRGBE		6756866	0					
ANR	6758312	ArgumentList	( int ) sp [ sxdx ]		6756866	1					
ANR	6758313	Argument	( int ) sp [ sxdx ]		6756866	0					
ANR	6758314	CastExpression	( int ) sp [ sxdx ]		6756866	0					
ANR	6758315	CastTarget	int		6756866	0					
ANR	6758316	ArrayIndexing	sp [ sxdx ]		6756866	1					
ANR	6758317	Identifier	sp		6756866	0					
ANR	6758318	Identifier	sxdx		6756866	1					
ANR	6758319	Argument	( int ) sp [ sxdx + 3 ]		6756866	1					
ANR	6758320	CastExpression	( int ) sp [ sxdx + 3 ]		6756866	0					
ANR	6758321	CastTarget	int		6756866	0					
ANR	6758322	ArrayIndexing	sp [ sxdx + 3 ]		6756866	1					
ANR	6758323	Identifier	sp		6756866	0					
ANR	6758324	AdditiveExpression	sxdx + 3		6756866	1		+			
ANR	6758325	Identifier	sxdx		6756866	0					
ANR	6758326	PrimaryExpression	3		6756866	1					
ANR	6758327	ExpressionStatement	"dp [ xdx + 1 ] = forwardRGBE ( ( int ) sp [ sxdx + 1 ] , ( int ) sp [ sxdx + 3 ] )"	1746:20:56880:56943	6756866	1	True				
ANR	6758328	AssignmentExpression	"dp [ xdx + 1 ] = forwardRGBE ( ( int ) sp [ sxdx + 1 ] , ( int ) sp [ sxdx + 3 ] )"		6756866	0		=			
ANR	6758329	ArrayIndexing	dp [ xdx + 1 ]		6756866	0					
ANR	6758330	Identifier	dp		6756866	0					
ANR	6758331	AdditiveExpression	xdx + 1		6756866	1		+			
ANR	6758332	Identifier	xdx		6756866	0					
ANR	6758333	PrimaryExpression	1		6756866	1					
ANR	6758334	CallExpression	"forwardRGBE ( ( int ) sp [ sxdx + 1 ] , ( int ) sp [ sxdx + 3 ] )"		6756866	1					
ANR	6758335	Callee	forwardRGBE		6756866	0					
ANR	6758336	Identifier	forwardRGBE		6756866	0					
ANR	6758337	ArgumentList	( int ) sp [ sxdx + 1 ]		6756866	1					
ANR	6758338	Argument	( int ) sp [ sxdx + 1 ]		6756866	0					
ANR	6758339	CastExpression	( int ) sp [ sxdx + 1 ]		6756866	0					
ANR	6758340	CastTarget	int		6756866	0					
ANR	6758341	ArrayIndexing	sp [ sxdx + 1 ]		6756866	1					
ANR	6758342	Identifier	sp		6756866	0					
ANR	6758343	AdditiveExpression	sxdx + 1		6756866	1		+			
ANR	6758344	Identifier	sxdx		6756866	0					
ANR	6758345	PrimaryExpression	1		6756866	1					
ANR	6758346	Argument	( int ) sp [ sxdx + 3 ]		6756866	1					
ANR	6758347	CastExpression	( int ) sp [ sxdx + 3 ]		6756866	0					
ANR	6758348	CastTarget	int		6756866	0					
ANR	6758349	ArrayIndexing	sp [ sxdx + 3 ]		6756866	1					
ANR	6758350	Identifier	sp		6756866	0					
ANR	6758351	AdditiveExpression	sxdx + 3		6756866	1		+			
ANR	6758352	Identifier	sxdx		6756866	0					
ANR	6758353	PrimaryExpression	3		6756866	1					
ANR	6758354	ExpressionStatement	"dp [ xdx + 2 ] = forwardRGBE ( ( int ) sp [ sxdx + 2 ] , ( int ) sp [ sxdx + 3 ] )"	1747:20:56965:57028	6756866	2	True				
ANR	6758355	AssignmentExpression	"dp [ xdx + 2 ] = forwardRGBE ( ( int ) sp [ sxdx + 2 ] , ( int ) sp [ sxdx + 3 ] )"		6756866	0		=			
ANR	6758356	ArrayIndexing	dp [ xdx + 2 ]		6756866	0					
ANR	6758357	Identifier	dp		6756866	0					
ANR	6758358	AdditiveExpression	xdx + 2		6756866	1		+			
ANR	6758359	Identifier	xdx		6756866	0					
ANR	6758360	PrimaryExpression	2		6756866	1					
ANR	6758361	CallExpression	"forwardRGBE ( ( int ) sp [ sxdx + 2 ] , ( int ) sp [ sxdx + 3 ] )"		6756866	1					
ANR	6758362	Callee	forwardRGBE		6756866	0					
ANR	6758363	Identifier	forwardRGBE		6756866	0					
ANR	6758364	ArgumentList	( int ) sp [ sxdx + 2 ]		6756866	1					
ANR	6758365	Argument	( int ) sp [ sxdx + 2 ]		6756866	0					
ANR	6758366	CastExpression	( int ) sp [ sxdx + 2 ]		6756866	0					
ANR	6758367	CastTarget	int		6756866	0					
ANR	6758368	ArrayIndexing	sp [ sxdx + 2 ]		6756866	1					
ANR	6758369	Identifier	sp		6756866	0					
ANR	6758370	AdditiveExpression	sxdx + 2		6756866	1		+			
ANR	6758371	Identifier	sxdx		6756866	0					
ANR	6758372	PrimaryExpression	2		6756866	1					
ANR	6758373	Argument	( int ) sp [ sxdx + 3 ]		6756866	1					
ANR	6758374	CastExpression	( int ) sp [ sxdx + 3 ]		6756866	0					
ANR	6758375	CastTarget	int		6756866	0					
ANR	6758376	ArrayIndexing	sp [ sxdx + 3 ]		6756866	1					
ANR	6758377	Identifier	sp		6756866	0					
ANR	6758378	AdditiveExpression	sxdx + 3		6756866	1		+			
ANR	6758379	Identifier	sxdx		6756866	0					
ANR	6758380	PrimaryExpression	3		6756866	1					
ANR	6758381	ElseStatement	else		6756866	0					
ANR	6758382	IfStatement	if ( con -> bpi == 10 )		6756866	0					
ANR	6758383	Condition	con -> bpi == 10	1752:13:57091:57104	6756866	0	True				
ANR	6758384	EqualityExpression	con -> bpi == 10		6756866	0		==			
ANR	6758385	PtrMemberAccess	con -> bpi		6756866	0					
ANR	6758386	Identifier	con		6756866	0					
ANR	6758387	Identifier	bpi		6756866	1					
ANR	6758388	PrimaryExpression	10		6756866	1					
ANR	6758389	CompoundStatement		192:29:7349:7349	6756866	1					
ANR	6758390	ExpressionStatement	block_wid = ( ( con -> wid + 15 ) & ~15 )	1753:8:57117:57148	6756866	0	True				
ANR	6758391	AssignmentExpression	block_wid = ( ( con -> wid + 15 ) & ~15 )		6756866	0		=			
ANR	6758392	Identifier	block_wid		6756866	0					
ANR	6758393	BitAndExpression	( con -> wid + 15 ) & ~15		6756866	1		&			
ANR	6758394	AdditiveExpression	con -> wid + 15		6756866	0		+			
ANR	6758395	PtrMemberAccess	con -> wid		6756866	0					
ANR	6758396	Identifier	con		6756866	0					
ANR	6758397	Identifier	wid		6756866	1					
ANR	6758398	PrimaryExpression	15		6756866	1					
ANR	6758399	Identifier	~15		6756866	1					
ANR	6758400	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		6756866	1					
ANR	6758401	ForInit	ydx = 0 ;	1754:13:57163:57171	6756866	0	True				
ANR	6758402	AssignmentExpression	ydx = 0		6756866	0		=			
ANR	6758403	Identifier	ydx		6756866	0					
ANR	6758404	PrimaryExpression	0		6756866	1					
ANR	6758405	Condition	ydx < 16	1754:23:57173:57180	6756866	1	True				
ANR	6758406	RelationalExpression	ydx < 16		6756866	0		<			
ANR	6758407	Identifier	ydx		6756866	0					
ANR	6758408	PrimaryExpression	16		6756866	1					
ANR	6758409	AssignmentExpression	ydx += 1	1754:34:57184:57191	6756866	2	True	+=			
ANR	6758410	Identifier	ydx		6756866	0					
ANR	6758411	PrimaryExpression	1		6756866	1					
ANR	6758412	CompoundStatement		196:12:7534:7572	6756866	3					
ANR	6758413	IdentifierDeclStatement	uint32_t * sp = ( uint32_t * ) con -> buf + ydx * block_wid + 16 * mx ;	1755:12:57220:57278	6756866	0	True				
ANR	6758414	IdentifierDecl	* sp = ( uint32_t * ) con -> buf + ydx * block_wid + 16 * mx		6756866	0					
ANR	6758415	IdentifierDeclType	uint32_t *		6756866	0					
ANR	6758416	Identifier	sp		6756866	1					
ANR	6758417	AssignmentExpression	* sp = ( uint32_t * ) con -> buf + ydx * block_wid + 16 * mx		6756866	2		=			
ANR	6758418	Identifier	sp		6756866	0					
ANR	6758419	AdditiveExpression	( uint32_t * ) con -> buf + ydx * block_wid + 16 * mx		6756866	1		+			
ANR	6758420	CastExpression	( uint32_t * ) con -> buf		6756866	0					
ANR	6758421	CastTarget	uint32_t *		6756866	0					
ANR	6758422	PtrMemberAccess	con -> buf		6756866	1					
ANR	6758423	Identifier	con		6756866	0					
ANR	6758424	Identifier	buf		6756866	1					
ANR	6758425	AdditiveExpression	ydx * block_wid + 16 * mx		6756866	1		+			
ANR	6758426	MultiplicativeExpression	ydx * block_wid		6756866	0		*			
ANR	6758427	Identifier	ydx		6756866	0					
ANR	6758428	Identifier	block_wid		6756866	1					
ANR	6758429	MultiplicativeExpression	16 * mx		6756866	1		*			
ANR	6758430	PrimaryExpression	16		6756866	0					
ANR	6758431	Identifier	mx		6756866	1					
ANR	6758432	IdentifierDeclStatement	int * dp = data + uExternalNcomp * 16 * ydx ;	1756:12:57292:57330	6756866	1	True				
ANR	6758433	IdentifierDecl	* dp = data + uExternalNcomp * 16 * ydx		6756866	0					
ANR	6758434	IdentifierDeclType	int *		6756866	0					
ANR	6758435	Identifier	dp		6756866	1					
ANR	6758436	AssignmentExpression	* dp = data + uExternalNcomp * 16 * ydx		6756866	2		=			
ANR	6758437	Identifier	dp		6756866	0					
ANR	6758438	AdditiveExpression	data + uExternalNcomp * 16 * ydx		6756866	1		+			
ANR	6758439	Identifier	data		6756866	0					
ANR	6758440	MultiplicativeExpression	uExternalNcomp * 16 * ydx		6756866	1		*			
ANR	6758441	Identifier	uExternalNcomp		6756866	0					
ANR	6758442	MultiplicativeExpression	16 * ydx		6756866	1		*			
ANR	6758443	PrimaryExpression	16		6756866	0					
ANR	6758444	Identifier	ydx		6756866	1					
ANR	6758445	ForStatement	"for ( xdx = 0 , sxdx = 0 ; xdx < uExternalNcomp * 16 ; xdx += uExternalNcomp , sxdx ++ )"		6756866	2					
ANR	6758446	ForInit	"xdx = 0 , sxdx = 0 ;"	1757:17:57349:57366	6756866	0	True				
ANR	6758447	Expression	"xdx = 0 , sxdx = 0"		6756866	0					
ANR	6758448	AssignmentExpression	xdx = 0		6756866	0		=			
ANR	6758449	Identifier	xdx		6756866	0					
ANR	6758450	PrimaryExpression	0		6756866	1					
ANR	6758451	AssignmentExpression	sxdx = 0		6756866	1		=			
ANR	6758452	Identifier	sxdx		6756866	0					
ANR	6758453	PrimaryExpression	0		6756866	1					
ANR	6758454	Condition	xdx < uExternalNcomp * 16	1757:36:57368:57390	6756866	1	True				
ANR	6758455	RelationalExpression	xdx < uExternalNcomp * 16		6756866	0		<			
ANR	6758456	Identifier	xdx		6756866	0					
ANR	6758457	MultiplicativeExpression	uExternalNcomp * 16		6756866	1		*			
ANR	6758458	Identifier	uExternalNcomp		6756866	0					
ANR	6758459	PrimaryExpression	16		6756866	1					
ANR	6758460	Expression	"xdx += uExternalNcomp , sxdx ++"	1757:62:57394:57422	6756866	2	True				
ANR	6758461	AssignmentExpression	xdx += uExternalNcomp		6756866	0		+=			
ANR	6758462	Identifier	xdx		6756866	0					
ANR	6758463	Identifier	uExternalNcomp		6756866	1					
ANR	6758464	PostIncDecOperationExpression	sxdx ++		6756866	1					
ANR	6758465	Identifier	sxdx		6756866	0					
ANR	6758466	IncDec	++		6756866	1					
ANR	6758467	CompoundStatement		197:93:7667:7667	6756866	3					
ANR	6758468	ExpressionStatement	dp [ xdx ] = ( sp [ sxdx ] & 0x3ff )	1758:16:57443:57471	6756866	0	True				
ANR	6758469	AssignmentExpression	dp [ xdx ] = ( sp [ sxdx ] & 0x3ff )		6756866	0		=			
ANR	6758470	ArrayIndexing	dp [ xdx ]		6756866	0					
ANR	6758471	Identifier	dp		6756866	0					
ANR	6758472	Identifier	xdx		6756866	1					
ANR	6758473	BitAndExpression	sp [ sxdx ] & 0x3ff		6756866	1		&			
ANR	6758474	ArrayIndexing	sp [ sxdx ]		6756866	0					
ANR	6758475	Identifier	sp		6756866	0					
ANR	6758476	Identifier	sxdx		6756866	1					
ANR	6758477	PrimaryExpression	0x3ff		6756866	1					
ANR	6758478	ExpressionStatement	dp [ xdx + 1 ] = ( ( sp [ sxdx ] >> 10 ) & 0x3ff )	1759:16:57489:57529	6756866	1	True				
ANR	6758479	AssignmentExpression	dp [ xdx + 1 ] = ( ( sp [ sxdx ] >> 10 ) & 0x3ff )		6756866	0		=			
ANR	6758480	ArrayIndexing	dp [ xdx + 1 ]		6756866	0					
ANR	6758481	Identifier	dp		6756866	0					
ANR	6758482	AdditiveExpression	xdx + 1		6756866	1		+			
ANR	6758483	Identifier	xdx		6756866	0					
ANR	6758484	PrimaryExpression	1		6756866	1					
ANR	6758485	BitAndExpression	( sp [ sxdx ] >> 10 ) & 0x3ff		6756866	1		&			
ANR	6758486	ShiftExpression	sp [ sxdx ] >> 10		6756866	0		>>			
ANR	6758487	ArrayIndexing	sp [ sxdx ]		6756866	0					
ANR	6758488	Identifier	sp		6756866	0					
ANR	6758489	Identifier	sxdx		6756866	1					
ANR	6758490	PrimaryExpression	10		6756866	1					
ANR	6758491	PrimaryExpression	0x3ff		6756866	1					
ANR	6758492	ExpressionStatement	dp [ xdx + 2 ] = ( ( sp [ sxdx ] >> 20 ) & 0x3ff )	1760:16:57547:57587	6756866	2	True				
ANR	6758493	AssignmentExpression	dp [ xdx + 2 ] = ( ( sp [ sxdx ] >> 20 ) & 0x3ff )		6756866	0		=			
ANR	6758494	ArrayIndexing	dp [ xdx + 2 ]		6756866	0					
ANR	6758495	Identifier	dp		6756866	0					
ANR	6758496	AdditiveExpression	xdx + 2		6756866	1		+			
ANR	6758497	Identifier	xdx		6756866	0					
ANR	6758498	PrimaryExpression	2		6756866	1					
ANR	6758499	BitAndExpression	( sp [ sxdx ] >> 20 ) & 0x3ff		6756866	1		&			
ANR	6758500	ShiftExpression	sp [ sxdx ] >> 20		6756866	0		>>			
ANR	6758501	ArrayIndexing	sp [ sxdx ]		6756866	0					
ANR	6758502	Identifier	sp		6756866	0					
ANR	6758503	Identifier	sxdx		6756866	1					
ANR	6758504	PrimaryExpression	20		6756866	1					
ANR	6758505	PrimaryExpression	0x3ff		6756866	1					
ANR	6758506	ElseStatement	else		6756866	0					
ANR	6758507	IfStatement	if ( con -> bpi == 16 )		6756866	0					
ANR	6758508	Condition	con -> bpi == 16	1764:13:57632:57645	6756866	0	True				
ANR	6758509	EqualityExpression	con -> bpi == 16		6756866	0		==			
ANR	6758510	PtrMemberAccess	con -> bpi		6756866	0					
ANR	6758511	Identifier	con		6756866	0					
ANR	6758512	Identifier	bpi		6756866	1					
ANR	6758513	PrimaryExpression	16		6756866	1					
ANR	6758514	CompoundStatement		204:29:7890:7890	6756866	1					
ANR	6758515	IfStatement	if ( con -> sf == 1 )		6756866	0					
ANR	6758516	Condition	con -> sf == 1	1765:12:57662:57673	6756866	0	True				
ANR	6758517	EqualityExpression	con -> sf == 1		6756866	0		==			
ANR	6758518	PtrMemberAccess	con -> sf		6756866	0					
ANR	6758519	Identifier	con		6756866	0					
ANR	6758520	Identifier	sf		6756866	1					
ANR	6758521	PrimaryExpression	1		6756866	1					
ANR	6758522	CompoundStatement		205:26:7918:7918	6756866	1					
ANR	6758523	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		6756866	0					
ANR	6758524	ForInit	ydx = 0 ;	1766:17:57706:57714	6756866	0	True				
ANR	6758525	AssignmentExpression	ydx = 0		6756866	0		=			
ANR	6758526	Identifier	ydx		6756866	0					
ANR	6758527	PrimaryExpression	0		6756866	1					
ANR	6758528	Condition	ydx < 16	1766:27:57716:57723	6756866	1	True				
ANR	6758529	RelationalExpression	ydx < 16		6756866	0		<			
ANR	6758530	Identifier	ydx		6756866	0					
ANR	6758531	PrimaryExpression	16		6756866	1					
ANR	6758532	AssignmentExpression	ydx += 1	1766:38:57727:57734	6756866	2	True	+=			
ANR	6758533	Identifier	ydx		6756866	0					
ANR	6758534	PrimaryExpression	1		6756866	1					
ANR	6758535	CompoundStatement		208:16:8084:8118	6756866	3					
ANR	6758536	IdentifierDeclStatement	uint16_t * sp = ( uint16_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx ;	1767:16:57755:57824	6756866	0	True				
ANR	6758537	IdentifierDecl	* sp = ( uint16_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx		6756866	0					
ANR	6758538	IdentifierDeclType	uint16_t *		6756866	0					
ANR	6758539	Identifier	sp		6756866	1					
ANR	6758540	AssignmentExpression	* sp = ( uint16_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx		6756866	2		=			
ANR	6758541	Identifier	sp		6756866	0					
ANR	6758542	AdditiveExpression	( uint16_t * ) con -> buf + ydx * block_wid + con -> ncomp * 16 * mx		6756866	1		+			
ANR	6758543	CastExpression	( uint16_t * ) con -> buf		6756866	0					
ANR	6758544	CastTarget	uint16_t *		6756866	0					
ANR	6758545	PtrMemberAccess	con -> buf		6756866	1					
ANR	6758546	Identifier	con		6756866	0					
ANR	6758547	Identifier	buf		6756866	1					
ANR	6758548	AdditiveExpression	ydx * block_wid + con -> ncomp * 16 * mx		6756866	1		+			
ANR	6758549	MultiplicativeExpression	ydx * block_wid		6756866	0		*			
ANR	6758550	Identifier	ydx		6756866	0					
ANR	6758551	Identifier	block_wid		6756866	1					
ANR	6758552	MultiplicativeExpression	con -> ncomp * 16 * mx		6756866	1		*			
ANR	6758553	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6758554	Identifier	con		6756866	0					
ANR	6758555	Identifier	ncomp		6756866	1					
ANR	6758556	MultiplicativeExpression	16 * mx		6756866	1		*			
ANR	6758557	PrimaryExpression	16		6756866	0					
ANR	6758558	Identifier	mx		6756866	1					
ANR	6758559	IdentifierDeclStatement	int * dp = data + con -> ncomp * 16 * ydx ;	1768:16:57842:57876	6756866	1	True				
ANR	6758560	IdentifierDecl	* dp = data + con -> ncomp * 16 * ydx		6756866	0					
ANR	6758561	IdentifierDeclType	int *		6756866	0					
ANR	6758562	Identifier	dp		6756866	1					
ANR	6758563	AssignmentExpression	* dp = data + con -> ncomp * 16 * ydx		6756866	2		=			
ANR	6758564	Identifier	dp		6756866	0					
ANR	6758565	AdditiveExpression	data + con -> ncomp * 16 * ydx		6756866	1		+			
ANR	6758566	Identifier	data		6756866	0					
ANR	6758567	MultiplicativeExpression	con -> ncomp * 16 * ydx		6756866	1		*			
ANR	6758568	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6758569	Identifier	con		6756866	0					
ANR	6758570	Identifier	ncomp		6756866	1					
ANR	6758571	MultiplicativeExpression	16 * ydx		6756866	1		*			
ANR	6758572	PrimaryExpression	16		6756866	0					
ANR	6758573	Identifier	ydx		6756866	1					
ANR	6758574	ForStatement	for ( xdx = 0 ; xdx < con -> ncomp * 16 ; xdx ++ )		6756866	2					
ANR	6758575	ForInit	xdx = 0 ;	1769:21:57899:57907	6756866	0	True				
ANR	6758576	AssignmentExpression	xdx = 0		6756866	0		=			
ANR	6758577	Identifier	xdx		6756866	0					
ANR	6758578	PrimaryExpression	0		6756866	1					
ANR	6758579	Condition	xdx < con -> ncomp * 16	1769:31:57909:57927	6756866	1	True				
ANR	6758580	RelationalExpression	xdx < con -> ncomp * 16		6756866	0		<			
ANR	6758581	Identifier	xdx		6756866	0					
ANR	6758582	MultiplicativeExpression	con -> ncomp * 16		6756866	1		*			
ANR	6758583	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6758584	Identifier	con		6756866	0					
ANR	6758585	Identifier	ncomp		6756866	1					
ANR	6758586	PrimaryExpression	16		6756866	1					
ANR	6758587	PostIncDecOperationExpression	xdx ++	1769:53:57931:57935	6756866	2	True				
ANR	6758588	Identifier	xdx		6756866	0					
ANR	6758589	IncDec	++		6756866	1					
ANR	6758590	ExpressionStatement	dp [ xdx ] = ( sp [ xdx ] >> image -> shift_bits )	1770:20:57958:57998	6756866	3	True				
ANR	6758591	AssignmentExpression	dp [ xdx ] = ( sp [ xdx ] >> image -> shift_bits )		6756866	0		=			
ANR	6758592	ArrayIndexing	dp [ xdx ]		6756866	0					
ANR	6758593	Identifier	dp		6756866	0					
ANR	6758594	Identifier	xdx		6756866	1					
ANR	6758595	ShiftExpression	sp [ xdx ] >> image -> shift_bits		6756866	1		>>			
ANR	6758596	ArrayIndexing	sp [ xdx ]		6756866	0					
ANR	6758597	Identifier	sp		6756866	0					
ANR	6758598	Identifier	xdx		6756866	1					
ANR	6758599	PtrMemberAccess	image -> shift_bits		6756866	1					
ANR	6758600	Identifier	image		6756866	0					
ANR	6758601	Identifier	shift_bits		6756866	1					
ANR	6758602	ElseStatement	else		6756866	0					
ANR	6758603	IfStatement	if ( con -> sf == 2 )		6756866	0					
ANR	6758604	Condition	con -> sf == 2	1773:17:58043:58054	6756866	0	True				
ANR	6758605	EqualityExpression	con -> sf == 2		6756866	0		==			
ANR	6758606	PtrMemberAccess	con -> sf		6756866	0					
ANR	6758607	Identifier	con		6756866	0					
ANR	6758608	Identifier	sf		6756866	1					
ANR	6758609	PrimaryExpression	2		6756866	1					
ANR	6758610	CompoundStatement		213:31:8299:8299	6756866	1					
ANR	6758611	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		6756866	0					
ANR	6758612	ForInit	ydx = 0 ;	1774:17:58094:58102	6756866	0	True				
ANR	6758613	AssignmentExpression	ydx = 0		6756866	0		=			
ANR	6758614	Identifier	ydx		6756866	0					
ANR	6758615	PrimaryExpression	0		6756866	1					
ANR	6758616	Condition	ydx < 16	1774:27:58104:58111	6756866	1	True				
ANR	6758617	RelationalExpression	ydx < 16		6756866	0		<			
ANR	6758618	Identifier	ydx		6756866	0					
ANR	6758619	PrimaryExpression	16		6756866	1					
ANR	6758620	AssignmentExpression	ydx += 1	1774:38:58115:58122	6756866	2	True	+=			
ANR	6758621	Identifier	ydx		6756866	0					
ANR	6758622	PrimaryExpression	1		6756866	1					
ANR	6758623	CompoundStatement		217:16:8522:8529	6756866	3					
ANR	6758624	IdentifierDeclStatement	short * sp = ( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx ;	1775:16:58143:58210	6756866	0	True				
ANR	6758625	IdentifierDecl	* sp = ( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		6756866	0					
ANR	6758626	IdentifierDeclType	short *		6756866	0					
ANR	6758627	Identifier	sp		6756866	1					
ANR	6758628	AssignmentExpression	* sp = ( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		6756866	2		=			
ANR	6758629	Identifier	sp		6756866	0					
ANR	6758630	AdditiveExpression	( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		6756866	1		+			
ANR	6758631	CastExpression	( short * ) con -> buf		6756866	0					
ANR	6758632	CastTarget	short *		6756866	0					
ANR	6758633	PtrMemberAccess	con -> buf		6756866	1					
ANR	6758634	Identifier	con		6756866	0					
ANR	6758635	Identifier	buf		6756866	1					
ANR	6758636	AdditiveExpression	ydx * block_wid + uExternalNcomp * 16 * mx		6756866	1		+			
ANR	6758637	MultiplicativeExpression	ydx * block_wid		6756866	0		*			
ANR	6758638	Identifier	ydx		6756866	0					
ANR	6758639	Identifier	block_wid		6756866	1					
ANR	6758640	MultiplicativeExpression	uExternalNcomp * 16 * mx		6756866	1		*			
ANR	6758641	Identifier	uExternalNcomp		6756866	0					
ANR	6758642	MultiplicativeExpression	16 * mx		6756866	1		*			
ANR	6758643	PrimaryExpression	16		6756866	0					
ANR	6758644	Identifier	mx		6756866	1					
ANR	6758645	IdentifierDeclStatement	int * dp = data + con -> ncomp * 16 * ydx ;	1776:16:58228:58262	6756866	1	True				
ANR	6758646	IdentifierDecl	* dp = data + con -> ncomp * 16 * ydx		6756866	0					
ANR	6758647	IdentifierDeclType	int *		6756866	0					
ANR	6758648	Identifier	dp		6756866	1					
ANR	6758649	AssignmentExpression	* dp = data + con -> ncomp * 16 * ydx		6756866	2		=			
ANR	6758650	Identifier	dp		6756866	0					
ANR	6758651	AdditiveExpression	data + con -> ncomp * 16 * ydx		6756866	1		+			
ANR	6758652	Identifier	data		6756866	0					
ANR	6758653	MultiplicativeExpression	con -> ncomp * 16 * ydx		6756866	1		*			
ANR	6758654	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6758655	Identifier	con		6756866	0					
ANR	6758656	Identifier	ncomp		6756866	1					
ANR	6758657	MultiplicativeExpression	16 * ydx		6756866	1		*			
ANR	6758658	PrimaryExpression	16		6756866	0					
ANR	6758659	Identifier	ydx		6756866	1					
ANR	6758660	IdentifierDeclStatement	int iCh ;	1777:16:58280:58287	6756866	2	True				
ANR	6758661	IdentifierDecl	iCh		6756866	0					
ANR	6758662	IdentifierDeclType	int		6756866	0					
ANR	6758663	Identifier	iCh		6756866	1					
ANR	6758664	ForStatement	for ( xdx = 0 ; xdx < 16 ; xdx ++ )		6756866	3					
ANR	6758665	ForInit	xdx = 0 ;	1778:21:58310:58318	6756866	0	True				
ANR	6758666	AssignmentExpression	xdx = 0		6756866	0		=			
ANR	6758667	Identifier	xdx		6756866	0					
ANR	6758668	PrimaryExpression	0		6756866	1					
ANR	6758669	Condition	xdx < 16	1778:31:58320:58327	6756866	1	True				
ANR	6758670	RelationalExpression	xdx < 16		6756866	0		<			
ANR	6758671	Identifier	xdx		6756866	0					
ANR	6758672	PrimaryExpression	16		6756866	1					
ANR	6758673	PostIncDecOperationExpression	xdx ++	1778:42:58331:58335	6756866	2	True				
ANR	6758674	Identifier	xdx		6756866	0					
ANR	6758675	IncDec	++		6756866	1					
ANR	6758676	CompoundStatement		218:49:8580:8580	6756866	3					
ANR	6758677	ForStatement	for ( iCh = 0 ; iCh < con -> ncomp ; iCh ++ )		6756866	0					
ANR	6758678	ForInit	iCh = 0 ;	1779:25:58365:58372	6756866	0	True				
ANR	6758679	AssignmentExpression	iCh = 0		6756866	0		=			
ANR	6758680	Identifier	iCh		6756866	0					
ANR	6758681	PrimaryExpression	0		6756866	1					
ANR	6758682	Condition	iCh < con -> ncomp	1779:34:58374:58389	6756866	1	True				
ANR	6758683	RelationalExpression	iCh < con -> ncomp		6756866	0		<			
ANR	6758684	Identifier	iCh		6756866	0					
ANR	6758685	PtrMemberAccess	con -> ncomp		6756866	1					
ANR	6758686	Identifier	con		6756866	0					
ANR	6758687	Identifier	ncomp		6756866	1					
ANR	6758688	PostIncDecOperationExpression	iCh ++	1779:52:58392:58397	6756866	2	True				
ANR	6758689	Identifier	iCh		6756866	0					
ANR	6758690	IncDec	++		6756866	1					
ANR	6758691	CompoundStatement		219:59:8641:8641	6756866	3					
ANR	6758692	ExpressionStatement	dp [ iCh ] = ( sp [ iCh ] >> image -> shift_bits )	1780:24:58425:58465	6756866	0	True				
ANR	6758693	AssignmentExpression	dp [ iCh ] = ( sp [ iCh ] >> image -> shift_bits )		6756866	0		=			
ANR	6758694	ArrayIndexing	dp [ iCh ]		6756866	0					
ANR	6758695	Identifier	dp		6756866	0					
ANR	6758696	Identifier	iCh		6756866	1					
ANR	6758697	ShiftExpression	sp [ iCh ] >> image -> shift_bits		6756866	1		>>			
ANR	6758698	ArrayIndexing	sp [ iCh ]		6756866	0					
ANR	6758699	Identifier	sp		6756866	0					
ANR	6758700	Identifier	iCh		6756866	1					
ANR	6758701	PtrMemberAccess	image -> shift_bits		6756866	1					
ANR	6758702	Identifier	image		6756866	0					
ANR	6758703	Identifier	shift_bits		6756866	1					
ANR	6758704	ExpressionStatement	dp += con -> ncomp	1782:20:58510:58526	6756866	1	True				
ANR	6758705	AssignmentExpression	dp += con -> ncomp		6756866	0		+=			
ANR	6758706	Identifier	dp		6756866	0					
ANR	6758707	PtrMemberAccess	con -> ncomp		6756866	1					
ANR	6758708	Identifier	con		6756866	0					
ANR	6758709	Identifier	ncomp		6756866	1					
ANR	6758710	ExpressionStatement	sp += uExternalNcomp	1783:20:58548:58568	6756866	2	True				
ANR	6758711	AssignmentExpression	sp += uExternalNcomp		6756866	0		+=			
ANR	6758712	Identifier	sp		6756866	0					
ANR	6758713	Identifier	uExternalNcomp		6756866	1					
ANR	6758714	ElseStatement	else		6756866	0					
ANR	6758715	IfStatement	if ( con -> sf == 3 )		6756866	0					
ANR	6758716	Condition	con -> sf == 3	1787:17:58631:58642	6756866	0	True				
ANR	6758717	EqualityExpression	con -> sf == 3		6756866	0		==			
ANR	6758718	PtrMemberAccess	con -> sf		6756866	0					
ANR	6758719	Identifier	con		6756866	0					
ANR	6758720	Identifier	sf		6756866	1					
ANR	6758721	PrimaryExpression	3		6756866	1					
ANR	6758722	CompoundStatement		227:31:8887:8887	6756866	1					
ANR	6758723	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		6756866	0					
ANR	6758724	ForInit	ydx = 0 ;	1788:17:58681:58689	6756866	0	True				
ANR	6758725	AssignmentExpression	ydx = 0		6756866	0		=			
ANR	6758726	Identifier	ydx		6756866	0					
ANR	6758727	PrimaryExpression	0		6756866	1					
ANR	6758728	Condition	ydx < 16	1788:27:58691:58698	6756866	1	True				
ANR	6758729	RelationalExpression	ydx < 16		6756866	0		<			
ANR	6758730	Identifier	ydx		6756866	0					
ANR	6758731	PrimaryExpression	16		6756866	1					
ANR	6758732	AssignmentExpression	ydx += 1	1788:38:58702:58709	6756866	2	True	+=			
ANR	6758733	Identifier	ydx		6756866	0					
ANR	6758734	PrimaryExpression	1		6756866	1					
ANR	6758735	CompoundStatement		231:16:9109:9116	6756866	3					
ANR	6758736	IdentifierDeclStatement	short * sp = ( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx ;	1789:16:58730:58797	6756866	0	True				
ANR	6758737	IdentifierDecl	* sp = ( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		6756866	0					
ANR	6758738	IdentifierDeclType	short *		6756866	0					
ANR	6758739	Identifier	sp		6756866	1					
ANR	6758740	AssignmentExpression	* sp = ( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		6756866	2		=			
ANR	6758741	Identifier	sp		6756866	0					
ANR	6758742	AdditiveExpression	( short * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		6756866	1		+			
ANR	6758743	CastExpression	( short * ) con -> buf		6756866	0					
ANR	6758744	CastTarget	short *		6756866	0					
ANR	6758745	PtrMemberAccess	con -> buf		6756866	1					
ANR	6758746	Identifier	con		6756866	0					
ANR	6758747	Identifier	buf		6756866	1					
ANR	6758748	AdditiveExpression	ydx * block_wid + uExternalNcomp * 16 * mx		6756866	1		+			
ANR	6758749	MultiplicativeExpression	ydx * block_wid		6756866	0		*			
ANR	6758750	Identifier	ydx		6756866	0					
ANR	6758751	Identifier	block_wid		6756866	1					
ANR	6758752	MultiplicativeExpression	uExternalNcomp * 16 * mx		6756866	1		*			
ANR	6758753	Identifier	uExternalNcomp		6756866	0					
ANR	6758754	MultiplicativeExpression	16 * mx		6756866	1		*			
ANR	6758755	PrimaryExpression	16		6756866	0					
ANR	6758756	Identifier	mx		6756866	1					
ANR	6758757	IdentifierDeclStatement	int * dp = data + con -> ncomp * 16 * ydx ;	1790:16:58815:58849	6756866	1	True				
ANR	6758758	IdentifierDecl	* dp = data + con -> ncomp * 16 * ydx		6756866	0					
ANR	6758759	IdentifierDeclType	int *		6756866	0					
ANR	6758760	Identifier	dp		6756866	1					
ANR	6758761	AssignmentExpression	* dp = data + con -> ncomp * 16 * ydx		6756866	2		=			
ANR	6758762	Identifier	dp		6756866	0					
ANR	6758763	AdditiveExpression	data + con -> ncomp * 16 * ydx		6756866	1		+			
ANR	6758764	Identifier	data		6756866	0					
ANR	6758765	MultiplicativeExpression	con -> ncomp * 16 * ydx		6756866	1		*			
ANR	6758766	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6758767	Identifier	con		6756866	0					
ANR	6758768	Identifier	ncomp		6756866	1					
ANR	6758769	MultiplicativeExpression	16 * ydx		6756866	1		*			
ANR	6758770	PrimaryExpression	16		6756866	0					
ANR	6758771	Identifier	ydx		6756866	1					
ANR	6758772	IdentifierDeclStatement	int iCh ;	1791:16:58867:58874	6756866	2	True				
ANR	6758773	IdentifierDecl	iCh		6756866	0					
ANR	6758774	IdentifierDeclType	int		6756866	0					
ANR	6758775	Identifier	iCh		6756866	1					
ANR	6758776	ForStatement	for ( xdx = 0 ; xdx < 16 ; xdx ++ )		6756866	3					
ANR	6758777	ForInit	xdx = 0 ;	1792:21:58897:58905	6756866	0	True				
ANR	6758778	AssignmentExpression	xdx = 0		6756866	0		=			
ANR	6758779	Identifier	xdx		6756866	0					
ANR	6758780	PrimaryExpression	0		6756866	1					
ANR	6758781	Condition	xdx < 16	1792:31:58907:58914	6756866	1	True				
ANR	6758782	RelationalExpression	xdx < 16		6756866	0		<			
ANR	6758783	Identifier	xdx		6756866	0					
ANR	6758784	PrimaryExpression	16		6756866	1					
ANR	6758785	PostIncDecOperationExpression	xdx ++	1792:42:58918:58922	6756866	2	True				
ANR	6758786	Identifier	xdx		6756866	0					
ANR	6758787	IncDec	++		6756866	1					
ANR	6758788	CompoundStatement		232:49:9167:9167	6756866	3					
ANR	6758789	ForStatement	for ( iCh = 0 ; iCh < con -> ncomp ; iCh ++ )		6756866	0					
ANR	6758790	ForInit	iCh = 0 ;	1793:25:58952:58959	6756866	0	True				
ANR	6758791	AssignmentExpression	iCh = 0		6756866	0		=			
ANR	6758792	Identifier	iCh		6756866	0					
ANR	6758793	PrimaryExpression	0		6756866	1					
ANR	6758794	Condition	iCh < con -> ncomp	1793:34:58961:58976	6756866	1	True				
ANR	6758795	RelationalExpression	iCh < con -> ncomp		6756866	0		<			
ANR	6758796	Identifier	iCh		6756866	0					
ANR	6758797	PtrMemberAccess	con -> ncomp		6756866	1					
ANR	6758798	Identifier	con		6756866	0					
ANR	6758799	Identifier	ncomp		6756866	1					
ANR	6758800	PostIncDecOperationExpression	iCh ++	1793:52:58979:58984	6756866	2	True				
ANR	6758801	Identifier	iCh		6756866	0					
ANR	6758802	IncDec	++		6756866	1					
ANR	6758803	CompoundStatement		233:60:9229:9229	6756866	3					
ANR	6758804	ExpressionStatement	dp [ iCh ] = PreScalingBD16F ( ( int ) sp [ iCh ] )	1794:24:59013:59052	6756866	0	True				
ANR	6758805	AssignmentExpression	dp [ iCh ] = PreScalingBD16F ( ( int ) sp [ iCh ] )		6756866	0		=			
ANR	6758806	ArrayIndexing	dp [ iCh ]		6756866	0					
ANR	6758807	Identifier	dp		6756866	0					
ANR	6758808	Identifier	iCh		6756866	1					
ANR	6758809	CallExpression	PreScalingBD16F ( ( int ) sp [ iCh ] )		6756866	1					
ANR	6758810	Callee	PreScalingBD16F		6756866	0					
ANR	6758811	Identifier	PreScalingBD16F		6756866	0					
ANR	6758812	ArgumentList	( int ) sp [ iCh ]		6756866	1					
ANR	6758813	Argument	( int ) sp [ iCh ]		6756866	0					
ANR	6758814	CastExpression	( int ) sp [ iCh ]		6756866	0					
ANR	6758815	CastTarget	int		6756866	0					
ANR	6758816	ArrayIndexing	sp [ iCh ]		6756866	1					
ANR	6758817	Identifier	sp		6756866	0					
ANR	6758818	Identifier	iCh		6756866	1					
ANR	6758819	ExpressionStatement	dp += con -> ncomp	1796:20:59097:59113	6756866	1	True				
ANR	6758820	AssignmentExpression	dp += con -> ncomp		6756866	0		+=			
ANR	6758821	Identifier	dp		6756866	0					
ANR	6758822	PtrMemberAccess	con -> ncomp		6756866	1					
ANR	6758823	Identifier	con		6756866	0					
ANR	6758824	Identifier	ncomp		6756866	1					
ANR	6758825	ExpressionStatement	sp += uExternalNcomp	1797:20:59135:59155	6756866	2	True				
ANR	6758826	AssignmentExpression	sp += uExternalNcomp		6756866	0		+=			
ANR	6758827	Identifier	sp		6756866	0					
ANR	6758828	Identifier	uExternalNcomp		6756866	1					
ANR	6758829	ElseStatement	else		6756866	0					
ANR	6758830	IfStatement	if ( con -> bpi == 32 )		6756866	0					
ANR	6758831	Condition	con -> bpi == 32	1802:13:59218:59231	6756866	0	True				
ANR	6758832	EqualityExpression	con -> bpi == 32		6756866	0		==			
ANR	6758833	PtrMemberAccess	con -> bpi		6756866	0					
ANR	6758834	Identifier	con		6756866	0					
ANR	6758835	Identifier	bpi		6756866	1					
ANR	6758836	PrimaryExpression	32		6756866	1					
ANR	6758837	CompoundStatement		242:29:9476:9476	6756866	1					
ANR	6758838	IfStatement	if ( con -> sf == 2 )		6756866	0					
ANR	6758839	Condition	con -> sf == 2	1804:12:59274:59285	6756866	0	True				
ANR	6758840	EqualityExpression	con -> sf == 2		6756866	0		==			
ANR	6758841	PtrMemberAccess	con -> sf		6756866	0					
ANR	6758842	Identifier	con		6756866	0					
ANR	6758843	Identifier	sf		6756866	1					
ANR	6758844	PrimaryExpression	2		6756866	1					
ANR	6758845	CompoundStatement		244:26:9530:9530	6756866	1					
ANR	6758846	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		6756866	0					
ANR	6758847	ForInit	ydx = 0 ;	1805:17:59325:59333	6756866	0	True				
ANR	6758848	AssignmentExpression	ydx = 0		6756866	0		=			
ANR	6758849	Identifier	ydx		6756866	0					
ANR	6758850	PrimaryExpression	0		6756866	1					
ANR	6758851	Condition	ydx < 16	1805:27:59335:59342	6756866	1	True				
ANR	6758852	RelationalExpression	ydx < 16		6756866	0		<			
ANR	6758853	Identifier	ydx		6756866	0					
ANR	6758854	PrimaryExpression	16		6756866	1					
ANR	6758855	AssignmentExpression	ydx += 1	1805:38:59346:59353	6756866	2	True	+=			
ANR	6758856	Identifier	ydx		6756866	0					
ANR	6758857	PrimaryExpression	1		6756866	1					
ANR	6758858	CompoundStatement		248:16:9757:9764	6756866	3					
ANR	6758859	IdentifierDeclStatement	int32_t * sp = ( int32_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx ;	1806:16:59374:59445	6756866	0	True				
ANR	6758860	IdentifierDecl	* sp = ( int32_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		6756866	0					
ANR	6758861	IdentifierDeclType	int32_t *		6756866	0					
ANR	6758862	Identifier	sp		6756866	1					
ANR	6758863	AssignmentExpression	* sp = ( int32_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		6756866	2		=			
ANR	6758864	Identifier	sp		6756866	0					
ANR	6758865	AdditiveExpression	( int32_t * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		6756866	1		+			
ANR	6758866	CastExpression	( int32_t * ) con -> buf		6756866	0					
ANR	6758867	CastTarget	int32_t *		6756866	0					
ANR	6758868	PtrMemberAccess	con -> buf		6756866	1					
ANR	6758869	Identifier	con		6756866	0					
ANR	6758870	Identifier	buf		6756866	1					
ANR	6758871	AdditiveExpression	ydx * block_wid + uExternalNcomp * 16 * mx		6756866	1		+			
ANR	6758872	MultiplicativeExpression	ydx * block_wid		6756866	0		*			
ANR	6758873	Identifier	ydx		6756866	0					
ANR	6758874	Identifier	block_wid		6756866	1					
ANR	6758875	MultiplicativeExpression	uExternalNcomp * 16 * mx		6756866	1		*			
ANR	6758876	Identifier	uExternalNcomp		6756866	0					
ANR	6758877	MultiplicativeExpression	16 * mx		6756866	1		*			
ANR	6758878	PrimaryExpression	16		6756866	0					
ANR	6758879	Identifier	mx		6756866	1					
ANR	6758880	IdentifierDeclStatement	int * dp = data + con -> ncomp * 16 * ydx ;	1807:16:59463:59497	6756866	1	True				
ANR	6758881	IdentifierDecl	* dp = data + con -> ncomp * 16 * ydx		6756866	0					
ANR	6758882	IdentifierDeclType	int *		6756866	0					
ANR	6758883	Identifier	dp		6756866	1					
ANR	6758884	AssignmentExpression	* dp = data + con -> ncomp * 16 * ydx		6756866	2		=			
ANR	6758885	Identifier	dp		6756866	0					
ANR	6758886	AdditiveExpression	data + con -> ncomp * 16 * ydx		6756866	1		+			
ANR	6758887	Identifier	data		6756866	0					
ANR	6758888	MultiplicativeExpression	con -> ncomp * 16 * ydx		6756866	1		*			
ANR	6758889	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6758890	Identifier	con		6756866	0					
ANR	6758891	Identifier	ncomp		6756866	1					
ANR	6758892	MultiplicativeExpression	16 * ydx		6756866	1		*			
ANR	6758893	PrimaryExpression	16		6756866	0					
ANR	6758894	Identifier	ydx		6756866	1					
ANR	6758895	IdentifierDeclStatement	int iCh ;	1808:16:59515:59522	6756866	2	True				
ANR	6758896	IdentifierDecl	iCh		6756866	0					
ANR	6758897	IdentifierDeclType	int		6756866	0					
ANR	6758898	Identifier	iCh		6756866	1					
ANR	6758899	ForStatement	for ( xdx = 0 ; xdx < 16 ; xdx ++ )		6756866	3					
ANR	6758900	ForInit	xdx = 0 ;	1809:21:59545:59553	6756866	0	True				
ANR	6758901	AssignmentExpression	xdx = 0		6756866	0		=			
ANR	6758902	Identifier	xdx		6756866	0					
ANR	6758903	PrimaryExpression	0		6756866	1					
ANR	6758904	Condition	xdx < 16	1809:31:59555:59562	6756866	1	True				
ANR	6758905	RelationalExpression	xdx < 16		6756866	0		<			
ANR	6758906	Identifier	xdx		6756866	0					
ANR	6758907	PrimaryExpression	16		6756866	1					
ANR	6758908	PostIncDecOperationExpression	xdx ++	1809:42:59566:59570	6756866	2	True				
ANR	6758909	Identifier	xdx		6756866	0					
ANR	6758910	IncDec	++		6756866	1					
ANR	6758911	CompoundStatement		249:49:9815:9815	6756866	3					
ANR	6758912	ForStatement	for ( iCh = 0 ; iCh < con -> ncomp ; iCh ++ )		6756866	0					
ANR	6758913	ForInit	iCh = 0 ;	1810:25:59600:59607	6756866	0	True				
ANR	6758914	AssignmentExpression	iCh = 0		6756866	0		=			
ANR	6758915	Identifier	iCh		6756866	0					
ANR	6758916	PrimaryExpression	0		6756866	1					
ANR	6758917	Condition	iCh < con -> ncomp	1810:34:59609:59624	6756866	1	True				
ANR	6758918	RelationalExpression	iCh < con -> ncomp		6756866	0		<			
ANR	6758919	Identifier	iCh		6756866	0					
ANR	6758920	PtrMemberAccess	con -> ncomp		6756866	1					
ANR	6758921	Identifier	con		6756866	0					
ANR	6758922	Identifier	ncomp		6756866	1					
ANR	6758923	PostIncDecOperationExpression	iCh ++	1810:52:59627:59632	6756866	2	True				
ANR	6758924	Identifier	iCh		6756866	0					
ANR	6758925	IncDec	++		6756866	1					
ANR	6758926	CompoundStatement		250:60:9877:9877	6756866	3					
ANR	6758927	ExpressionStatement	dp [ iCh ] = ( sp [ iCh ] >> image -> shift_bits )	1811:24:59661:59701	6756866	0	True				
ANR	6758928	AssignmentExpression	dp [ iCh ] = ( sp [ iCh ] >> image -> shift_bits )		6756866	0		=			
ANR	6758929	ArrayIndexing	dp [ iCh ]		6756866	0					
ANR	6758930	Identifier	dp		6756866	0					
ANR	6758931	Identifier	iCh		6756866	1					
ANR	6758932	ShiftExpression	sp [ iCh ] >> image -> shift_bits		6756866	1		>>			
ANR	6758933	ArrayIndexing	sp [ iCh ]		6756866	0					
ANR	6758934	Identifier	sp		6756866	0					
ANR	6758935	Identifier	iCh		6756866	1					
ANR	6758936	PtrMemberAccess	image -> shift_bits		6756866	1					
ANR	6758937	Identifier	image		6756866	0					
ANR	6758938	Identifier	shift_bits		6756866	1					
ANR	6758939	ExpressionStatement	dp += con -> ncomp	1813:20:59746:59762	6756866	1	True				
ANR	6758940	AssignmentExpression	dp += con -> ncomp		6756866	0		+=			
ANR	6758941	Identifier	dp		6756866	0					
ANR	6758942	PtrMemberAccess	con -> ncomp		6756866	1					
ANR	6758943	Identifier	con		6756866	0					
ANR	6758944	Identifier	ncomp		6756866	1					
ANR	6758945	ExpressionStatement	sp += uExternalNcomp	1814:20:59784:59804	6756866	2	True				
ANR	6758946	AssignmentExpression	sp += uExternalNcomp		6756866	0		+=			
ANR	6758947	Identifier	sp		6756866	0					
ANR	6758948	Identifier	uExternalNcomp		6756866	1					
ANR	6758949	ElseStatement	else		6756866	0					
ANR	6758950	IfStatement	if ( con -> sf == 3 )		6756866	0					
ANR	6758951	Condition	con -> sf == 3	1818:17:59866:59877	6756866	0	True				
ANR	6758952	EqualityExpression	con -> sf == 3		6756866	0		==			
ANR	6758953	PtrMemberAccess	con -> sf		6756866	0					
ANR	6758954	Identifier	con		6756866	0					
ANR	6758955	Identifier	sf		6756866	1					
ANR	6758956	PrimaryExpression	3		6756866	1					
ANR	6758957	CompoundStatement		258:31:10122:10122	6756866	1					
ANR	6758958	ForStatement	for ( ydx = 0 ; ydx < 16 ; ydx += 1 )		6756866	0					
ANR	6758959	ForInit	ydx = 0 ;	1819:17:59911:59919	6756866	0	True				
ANR	6758960	AssignmentExpression	ydx = 0		6756866	0		=			
ANR	6758961	Identifier	ydx		6756866	0					
ANR	6758962	PrimaryExpression	0		6756866	1					
ANR	6758963	Condition	ydx < 16	1819:27:59921:59928	6756866	1	True				
ANR	6758964	RelationalExpression	ydx < 16		6756866	0		<			
ANR	6758965	Identifier	ydx		6756866	0					
ANR	6758966	PrimaryExpression	16		6756866	1					
ANR	6758967	AssignmentExpression	ydx += 1	1819:38:59932:59939	6756866	2	True	+=			
ANR	6758968	Identifier	ydx		6756866	0					
ANR	6758969	PrimaryExpression	1		6756866	1					
ANR	6758970	CompoundStatement		262:16:10335:10342	6756866	3					
ANR	6758971	IdentifierDeclStatement	int * sp = ( int * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx ;	1820:16:59960:60023	6756866	0	True				
ANR	6758972	IdentifierDecl	* sp = ( int * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		6756866	0					
ANR	6758973	IdentifierDeclType	int *		6756866	0					
ANR	6758974	Identifier	sp		6756866	1					
ANR	6758975	AssignmentExpression	* sp = ( int * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		6756866	2		=			
ANR	6758976	Identifier	sp		6756866	0					
ANR	6758977	AdditiveExpression	( int * ) con -> buf + ydx * block_wid + uExternalNcomp * 16 * mx		6756866	1		+			
ANR	6758978	CastExpression	( int * ) con -> buf		6756866	0					
ANR	6758979	CastTarget	int *		6756866	0					
ANR	6758980	PtrMemberAccess	con -> buf		6756866	1					
ANR	6758981	Identifier	con		6756866	0					
ANR	6758982	Identifier	buf		6756866	1					
ANR	6758983	AdditiveExpression	ydx * block_wid + uExternalNcomp * 16 * mx		6756866	1		+			
ANR	6758984	MultiplicativeExpression	ydx * block_wid		6756866	0		*			
ANR	6758985	Identifier	ydx		6756866	0					
ANR	6758986	Identifier	block_wid		6756866	1					
ANR	6758987	MultiplicativeExpression	uExternalNcomp * 16 * mx		6756866	1		*			
ANR	6758988	Identifier	uExternalNcomp		6756866	0					
ANR	6758989	MultiplicativeExpression	16 * mx		6756866	1		*			
ANR	6758990	PrimaryExpression	16		6756866	0					
ANR	6758991	Identifier	mx		6756866	1					
ANR	6758992	IdentifierDeclStatement	int * dp = data + con -> ncomp * 16 * ydx ;	1821:16:60041:60075	6756866	1	True				
ANR	6758993	IdentifierDecl	* dp = data + con -> ncomp * 16 * ydx		6756866	0					
ANR	6758994	IdentifierDeclType	int *		6756866	0					
ANR	6758995	Identifier	dp		6756866	1					
ANR	6758996	AssignmentExpression	* dp = data + con -> ncomp * 16 * ydx		6756866	2		=			
ANR	6758997	Identifier	dp		6756866	0					
ANR	6758998	AdditiveExpression	data + con -> ncomp * 16 * ydx		6756866	1		+			
ANR	6758999	Identifier	data		6756866	0					
ANR	6759000	MultiplicativeExpression	con -> ncomp * 16 * ydx		6756866	1		*			
ANR	6759001	PtrMemberAccess	con -> ncomp		6756866	0					
ANR	6759002	Identifier	con		6756866	0					
ANR	6759003	Identifier	ncomp		6756866	1					
ANR	6759004	MultiplicativeExpression	16 * ydx		6756866	1		*			
ANR	6759005	PrimaryExpression	16		6756866	0					
ANR	6759006	Identifier	ydx		6756866	1					
ANR	6759007	IdentifierDeclStatement	int iCh ;	1822:16:60093:60100	6756866	2	True				
ANR	6759008	IdentifierDecl	iCh		6756866	0					
ANR	6759009	IdentifierDeclType	int		6756866	0					
ANR	6759010	Identifier	iCh		6756866	1					
ANR	6759011	ForStatement	for ( xdx = 0 ; xdx < 16 ; xdx ++ )		6756866	3					
ANR	6759012	ForInit	xdx = 0 ;	1823:21:60123:60131	6756866	0	True				
ANR	6759013	AssignmentExpression	xdx = 0		6756866	0		=			
ANR	6759014	Identifier	xdx		6756866	0					
ANR	6759015	PrimaryExpression	0		6756866	1					
ANR	6759016	Condition	xdx < 16	1823:31:60133:60140	6756866	1	True				
ANR	6759017	RelationalExpression	xdx < 16		6756866	0		<			
ANR	6759018	Identifier	xdx		6756866	0					
ANR	6759019	PrimaryExpression	16		6756866	1					
ANR	6759020	PostIncDecOperationExpression	xdx ++	1823:42:60144:60148	6756866	2	True				
ANR	6759021	Identifier	xdx		6756866	0					
ANR	6759022	IncDec	++		6756866	1					
ANR	6759023	CompoundStatement		263:49:10393:10393	6756866	3					
ANR	6759024	ForStatement	for ( iCh = 0 ; iCh < con -> ncomp ; iCh ++ )		6756866	0					
ANR	6759025	ForInit	iCh = 0 ;	1824:25:60178:60185	6756866	0	True				
ANR	6759026	AssignmentExpression	iCh = 0		6756866	0		=			
ANR	6759027	Identifier	iCh		6756866	0					
ANR	6759028	PrimaryExpression	0		6756866	1					
ANR	6759029	Condition	iCh < con -> ncomp	1824:34:60187:60202	6756866	1	True				
ANR	6759030	RelationalExpression	iCh < con -> ncomp		6756866	0		<			
ANR	6759031	Identifier	iCh		6756866	0					
ANR	6759032	PtrMemberAccess	con -> ncomp		6756866	1					
ANR	6759033	Identifier	con		6756866	0					
ANR	6759034	Identifier	ncomp		6756866	1					
ANR	6759035	PostIncDecOperationExpression	iCh ++	1824:52:60205:60210	6756866	2	True				
ANR	6759036	Identifier	iCh		6756866	0					
ANR	6759037	IncDec	++		6756866	1					
ANR	6759038	CompoundStatement		264:60:10455:10455	6756866	3					
ANR	6759039	ExpressionStatement	"dp [ iCh ] = PreScalingBD32F ( sp [ iCh ] , image -> exp_bias , image -> len_mantissa )"	1825:24:60239:60311	6756866	0	True				
ANR	6759040	AssignmentExpression	"dp [ iCh ] = PreScalingBD32F ( sp [ iCh ] , image -> exp_bias , image -> len_mantissa )"		6756866	0		=			
ANR	6759041	ArrayIndexing	dp [ iCh ]		6756866	0					
ANR	6759042	Identifier	dp		6756866	0					
ANR	6759043	Identifier	iCh		6756866	1					
ANR	6759044	CallExpression	"PreScalingBD32F ( sp [ iCh ] , image -> exp_bias , image -> len_mantissa )"		6756866	1					
ANR	6759045	Callee	PreScalingBD32F		6756866	0					
ANR	6759046	Identifier	PreScalingBD32F		6756866	0					
ANR	6759047	ArgumentList	sp [ iCh ]		6756866	1					
ANR	6759048	Argument	sp [ iCh ]		6756866	0					
ANR	6759049	ArrayIndexing	sp [ iCh ]		6756866	0					
ANR	6759050	Identifier	sp		6756866	0					
ANR	6759051	Identifier	iCh		6756866	1					
ANR	6759052	Argument	image -> exp_bias		6756866	1					
ANR	6759053	PtrMemberAccess	image -> exp_bias		6756866	0					
ANR	6759054	Identifier	image		6756866	0					
ANR	6759055	Identifier	exp_bias		6756866	1					
ANR	6759056	Argument	image -> len_mantissa		6756866	2					
ANR	6759057	PtrMemberAccess	image -> len_mantissa		6756866	0					
ANR	6759058	Identifier	image		6756866	0					
ANR	6759059	Identifier	len_mantissa		6756866	1					
ANR	6759060	ExpressionStatement	dp += con -> ncomp	1827:20:60356:60372	6756866	1	True				
ANR	6759061	AssignmentExpression	dp += con -> ncomp		6756866	0		+=			
ANR	6759062	Identifier	dp		6756866	0					
ANR	6759063	PtrMemberAccess	con -> ncomp		6756866	1					
ANR	6759064	Identifier	con		6756866	0					
ANR	6759065	Identifier	ncomp		6756866	1					
ANR	6759066	ExpressionStatement	sp += uExternalNcomp	1828:20:60394:60414	6756866	2	True				
ANR	6759067	AssignmentExpression	sp += uExternalNcomp		6756866	0		+=			
ANR	6759068	Identifier	sp		6756866	0					
ANR	6759069	Identifier	uExternalNcomp		6756866	1					
ANR	6759070	ReturnType	void		6756866	1					
ANR	6759071	Identifier	read_file		6756866	2					
ANR	6759072	ParameterList	"jxr_image_t image , int mx , int my , int * data"		6756866	3					
ANR	6759073	Parameter	jxr_image_t image	1560:15:49711:49727	6756866	0	True				
ANR	6759074	ParameterType	jxr_image_t		6756866	0					
ANR	6759075	Identifier	image		6756866	1					
ANR	6759076	Parameter	int mx	1560:34:49730:49735	6756866	1	True				
ANR	6759077	ParameterType	int		6756866	0					
ANR	6759078	Identifier	mx		6756866	1					
ANR	6759079	Parameter	int my	1560:42:49738:49743	6756866	2	True				
ANR	6759080	ParameterType	int		6756866	0					
ANR	6759081	Identifier	my		6756866	1					
ANR	6759082	Parameter	int * data	1560:50:49746:49754	6756866	3	True				
ANR	6759083	ParameterType	int *		6756866	0					
ANR	6759084	Identifier	data		6756866	1					
ANR	6759085	CFGEntryNode	ENTRY		6756866		True				
ANR	6759086	CFGExitNode	EXIT		6756866		True				
ANR	6759087	Symbol	* sp		6756866						
ANR	6759088	Symbol	con		6756866						
ANR	6759089	Symbol	data		6756866						
ANR	6759090	Symbol	con -> ncomp		6756866						
ANR	6759091	Symbol	image -> exp_bias		6756866						
ANR	6759092	Symbol	* ~sp		6756866						
ANR	6759093	Symbol	dp		6756866						
ANR	6759094	Symbol	xdx		6756866						
ANR	6759095	Symbol	sxdx		6756866						
ANR	6759096	Symbol	isOutputYUV444		6756866						
ANR	6759097	Symbol	con -> bpi		6756866						
ANR	6759098	Symbol	* uExternalNcomp		6756866						
ANR	6759099	Symbol	tmp		6756866						
ANR	6759100	Symbol	con -> isBgr		6756866						
ANR	6759101	Symbol	con -> photometric		6756866						
ANR	6759102	Symbol	jxr_get_IMAGE_CHANNELS		6756866						
ANR	6759103	Symbol	con -> wid		6756866						
ANR	6759104	Symbol	image		6756866						
ANR	6759105	Symbol	~15		6756866						
ANR	6759106	Symbol	con -> hei		6756866						
ANR	6759107	Symbol	block_wid		6756866						
ANR	6759108	Symbol	mx		6756866						
ANR	6759109	Symbol	PreScalingBD16F		6756866						
ANR	6759110	Symbol	my		6756866						
ANR	6759111	Symbol	iCh		6756866						
ANR	6759112	Symbol	isOutputCMYKDirect		6756866						
ANR	6759113	Symbol	uExternalNcomp		6756866						
ANR	6759114	Symbol	idx		6756866						
ANR	6759115	Symbol	con -> sf		6756866						
ANR	6759116	Symbol	con -> buf		6756866						
ANR	6759117	Symbol	* image		6756866						
ANR	6759118	Symbol	trans		6756866						
ANR	6759119	Symbol	jxr_get_user_data		6756866						
ANR	6759120	Symbol	* sxdx		6756866						
ANR	6759121	Symbol	ydx		6756866						
ANR	6759122	Symbol	isOutputYUV422		6756866						
ANR	6759123	Symbol	* dp		6756866						
ANR	6759124	Symbol	PreScalingBD32F		6756866						
ANR	6759125	Symbol	* con		6756866						
ANR	6759126	Symbol	image -> len_mantissa		6756866						
ANR	6759127	Symbol	image -> shift_bits		6756866						
ANR	6759128	Symbol	isOutputYUV420		6756866						
ANR	6759129	Symbol	con -> padBytes		6756866						
ANR	6759130	Symbol	line_wid		6756866						
ANR	6759131	Symbol	~sp		6756866						
ANR	6759132	Symbol	sp		6756866						
ANR	6759133	Symbol	con -> my		6756866						
ANR	6759134	Symbol	* iCh		6756866						
ANR	6759135	Symbol	i		6756866						
ANR	6759136	Symbol	* i		6756866						
ANR	6759137	Symbol	forwardRGBE		6756866						
ANR	6759138	Symbol	* xdx		6756866						
ANR	6759139	Function	write_file_YCC	1835:0:60468:73333							
ANR	6759140	FunctionDef	"write_file_YCC (jxr_image_t image , int mx , int my , int * data)"		6759139	0					
ANR	6759141	CompoundStatement		1836:0:60534:73333	6759139	0					
ANR	6759142	IdentifierDeclStatement	int * dataY = data ;	1840:4:60746:60763	6759139	0	True				
ANR	6759143	IdentifierDecl	* dataY = data		6759139	0					
ANR	6759144	IdentifierDeclType	int *		6759139	0					
ANR	6759145	Identifier	dataY		6759139	1					
ANR	6759146	AssignmentExpression	* dataY = data		6759139	2		=			
ANR	6759147	Identifier	data		6759139	0					
ANR	6759148	Identifier	data		6759139	1					
ANR	6759149	IdentifierDeclStatement	int * dataU = dataY + 256 ;	1841:4:60769:60793	6759139	1	True				
ANR	6759150	IdentifierDecl	* dataU = dataY + 256		6759139	0					
ANR	6759151	IdentifierDeclType	int *		6759139	0					
ANR	6759152	Identifier	dataU		6759139	1					
ANR	6759153	AssignmentExpression	* dataU = dataY + 256		6759139	2		=			
ANR	6759154	Identifier	dataU		6759139	0					
ANR	6759155	AdditiveExpression	dataY + 256		6759139	1		+			
ANR	6759156	Identifier	dataY		6759139	0					
ANR	6759157	PrimaryExpression	256		6759139	1					
ANR	6759158	IdentifierDeclStatement	int * dataV = dataU + 256 ;	1842:4:60799:60823	6759139	2	True				
ANR	6759159	IdentifierDecl	* dataV = dataU + 256		6759139	0					
ANR	6759160	IdentifierDeclType	int *		6759139	0					
ANR	6759161	Identifier	dataV		6759139	1					
ANR	6759162	AssignmentExpression	* dataV = dataU + 256		6759139	2		=			
ANR	6759163	Identifier	dataV		6759139	0					
ANR	6759164	AdditiveExpression	dataU + 256		6759139	1		+			
ANR	6759165	Identifier	dataU		6759139	0					
ANR	6759166	PrimaryExpression	256		6759139	1					
ANR	6759167	IdentifierDeclStatement	int * dataA = dataV + 256 ;	1843:4:60829:60853	6759139	3	True				
ANR	6759168	IdentifierDecl	* dataA = dataV + 256		6759139	0					
ANR	6759169	IdentifierDeclType	int *		6759139	0					
ANR	6759170	Identifier	dataA		6759139	1					
ANR	6759171	AssignmentExpression	* dataA = dataV + 256		6759139	2		=			
ANR	6759172	Identifier	dataA		6759139	0					
ANR	6759173	AdditiveExpression	dataV + 256		6759139	1		+			
ANR	6759174	Identifier	dataV		6759139	0					
ANR	6759175	PrimaryExpression	256		6759139	1					
ANR	6759176	Statement	static	1844:4:60859:60864	6759139	4	True				
ANR	6759177	IdentifierDeclStatement	context * conY = NULL ;	1844:11:60866:60886	6759139	5	True				
ANR	6759178	IdentifierDecl	* conY = NULL		6759139	0					
ANR	6759179	IdentifierDeclType	context *		6759139	0					
ANR	6759180	Identifier	conY		6759139	1					
ANR	6759181	AssignmentExpression	* conY = NULL		6759139	2		=			
ANR	6759182	Identifier	NULL		6759139	0					
ANR	6759183	Identifier	NULL		6759139	1					
ANR	6759184	Statement	static	1845:4:60892:60897	6759139	6	True				
ANR	6759185	IdentifierDeclStatement	context * conU = NULL ;	1845:11:60899:60919	6759139	7	True				
ANR	6759186	IdentifierDecl	* conU = NULL		6759139	0					
ANR	6759187	IdentifierDeclType	context *		6759139	0					
ANR	6759188	Identifier	conU		6759139	1					
ANR	6759189	AssignmentExpression	* conU = NULL		6759139	2		=			
ANR	6759190	Identifier	NULL		6759139	0					
ANR	6759191	Identifier	NULL		6759139	1					
ANR	6759192	Statement	static	1846:4:60925:60930	6759139	8	True				
ANR	6759193	IdentifierDeclStatement	context * conV = NULL ;	1846:11:60932:60952	6759139	9	True				
ANR	6759194	IdentifierDecl	* conV = NULL		6759139	0					
ANR	6759195	IdentifierDeclType	context *		6759139	0					
ANR	6759196	Identifier	conV		6759139	1					
ANR	6759197	AssignmentExpression	* conV = NULL		6759139	2		=			
ANR	6759198	Identifier	NULL		6759139	0					
ANR	6759199	Identifier	NULL		6759139	1					
ANR	6759200	Statement	static	1847:4:60958:60963	6759139	10	True				
ANR	6759201	IdentifierDeclStatement	context * conA = NULL ;	1847:11:60965:60985	6759139	11	True				
ANR	6759202	IdentifierDecl	* conA = NULL		6759139	0					
ANR	6759203	IdentifierDeclType	context *		6759139	0					
ANR	6759204	Identifier	conA		6759139	1					
ANR	6759205	AssignmentExpression	* conA = NULL		6759139	2		=			
ANR	6759206	Identifier	NULL		6759139	0					
ANR	6759207	Identifier	NULL		6759139	1					
ANR	6759208	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	1848:4:60991:61041	6759139	12	True				
ANR	6759209	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		6759139	0					
ANR	6759210	IdentifierDeclType	context *		6759139	0					
ANR	6759211	Identifier	con		6759139	1					
ANR	6759212	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		6759139	2		=			
ANR	6759213	Identifier	con		6759139	0					
ANR	6759214	CastExpression	( context * ) jxr_get_user_data ( image )		6759139	1					
ANR	6759215	CastTarget	context *		6759139	0					
ANR	6759216	CallExpression	jxr_get_user_data ( image )		6759139	1					
ANR	6759217	Callee	jxr_get_user_data		6759139	0					
ANR	6759218	Identifier	jxr_get_user_data		6759139	0					
ANR	6759219	ArgumentList	image		6759139	1					
ANR	6759220	Argument	image		6759139	0					
ANR	6759221	Identifier	image		6759139	0					
ANR	6759222	IfStatement	if ( con -> file == 0 )		6759139	13					
ANR	6759223	Condition	con -> file == 0	1851:8:61057:61068	6759139	0	True				
ANR	6759224	EqualityExpression	con -> file == 0		6759139	0		==			
ANR	6759225	PtrMemberAccess	con -> file		6759139	0					
ANR	6759226	Identifier	con		6759139	0					
ANR	6759227	Identifier	file		6759139	1					
ANR	6759228	PrimaryExpression	0		6759139	1					
ANR	6759229	CompoundStatement		17:4:540:540	6759139	1					
ANR	6759230	ExpressionStatement	con -> alpha = jxr_get_ALPHACHANNEL_FLAG ( image )	1853:8:61085:61130	6759139	0	True				
ANR	6759231	AssignmentExpression	con -> alpha = jxr_get_ALPHACHANNEL_FLAG ( image )		6759139	0		=			
ANR	6759232	PtrMemberAccess	con -> alpha		6759139	0					
ANR	6759233	Identifier	con		6759139	0					
ANR	6759234	Identifier	alpha		6759139	1					
ANR	6759235	CallExpression	jxr_get_ALPHACHANNEL_FLAG ( image )		6759139	1					
ANR	6759236	Callee	jxr_get_ALPHACHANNEL_FLAG		6759139	0					
ANR	6759237	Identifier	jxr_get_ALPHACHANNEL_FLAG		6759139	0					
ANR	6759238	ArgumentList	image		6759139	1					
ANR	6759239	Argument	image		6759139	0					
ANR	6759240	Identifier	image		6759139	0					
ANR	6759241	ExpressionStatement	conY = ( context * ) malloc ( sizeof ( context ) )	1855:8:61149:61190	6759139	1	True				
ANR	6759242	AssignmentExpression	conY = ( context * ) malloc ( sizeof ( context ) )		6759139	0		=			
ANR	6759243	Identifier	conY		6759139	0					
ANR	6759244	CastExpression	( context * ) malloc ( sizeof ( context ) )		6759139	1					
ANR	6759245	CastTarget	context *		6759139	0					
ANR	6759246	CallExpression	malloc ( sizeof ( context ) )		6759139	1					
ANR	6759247	Callee	malloc		6759139	0					
ANR	6759248	Identifier	malloc		6759139	0					
ANR	6759249	ArgumentList	sizeof ( context )		6759139	1					
ANR	6759250	Argument	sizeof ( context )		6759139	0					
ANR	6759251	SizeofExpression	sizeof ( context )		6759139	0					
ANR	6759252	Sizeof	sizeof		6759139	0					
ANR	6759253	SizeofOperand	context		6759139	1					
ANR	6759254	ExpressionStatement	conU = ( context * ) malloc ( sizeof ( context ) )	1856:8:61200:61241	6759139	2	True				
ANR	6759255	AssignmentExpression	conU = ( context * ) malloc ( sizeof ( context ) )		6759139	0		=			
ANR	6759256	Identifier	conU		6759139	0					
ANR	6759257	CastExpression	( context * ) malloc ( sizeof ( context ) )		6759139	1					
ANR	6759258	CastTarget	context *		6759139	0					
ANR	6759259	CallExpression	malloc ( sizeof ( context ) )		6759139	1					
ANR	6759260	Callee	malloc		6759139	0					
ANR	6759261	Identifier	malloc		6759139	0					
ANR	6759262	ArgumentList	sizeof ( context )		6759139	1					
ANR	6759263	Argument	sizeof ( context )		6759139	0					
ANR	6759264	SizeofExpression	sizeof ( context )		6759139	0					
ANR	6759265	Sizeof	sizeof		6759139	0					
ANR	6759266	SizeofOperand	context		6759139	1					
ANR	6759267	ExpressionStatement	conV = ( context * ) malloc ( sizeof ( context ) )	1857:8:61251:61292	6759139	3	True				
ANR	6759268	AssignmentExpression	conV = ( context * ) malloc ( sizeof ( context ) )		6759139	0		=			
ANR	6759269	Identifier	conV		6759139	0					
ANR	6759270	CastExpression	( context * ) malloc ( sizeof ( context ) )		6759139	1					
ANR	6759271	CastTarget	context *		6759139	0					
ANR	6759272	CallExpression	malloc ( sizeof ( context ) )		6759139	1					
ANR	6759273	Callee	malloc		6759139	0					
ANR	6759274	Identifier	malloc		6759139	0					
ANR	6759275	ArgumentList	sizeof ( context )		6759139	1					
ANR	6759276	Argument	sizeof ( context )		6759139	0					
ANR	6759277	SizeofExpression	sizeof ( context )		6759139	0					
ANR	6759278	Sizeof	sizeof		6759139	0					
ANR	6759279	SizeofOperand	context		6759139	1					
ANR	6759280	IfStatement	if ( con -> alpha )		6759139	4					
ANR	6759281	Condition	con -> alpha	1858:11:61305:61314	6759139	0	True				
ANR	6759282	PtrMemberAccess	con -> alpha		6759139	0					
ANR	6759283	Identifier	con		6759139	0					
ANR	6759284	Identifier	alpha		6759139	1					
ANR	6759285	ExpressionStatement	conA = ( context * ) malloc ( sizeof ( context ) )	1859:12:61329:61370	6759139	1	True				
ANR	6759286	AssignmentExpression	conA = ( context * ) malloc ( sizeof ( context ) )		6759139	0		=			
ANR	6759287	Identifier	conA		6759139	0					
ANR	6759288	CastExpression	( context * ) malloc ( sizeof ( context ) )		6759139	1					
ANR	6759289	CastTarget	context *		6759139	0					
ANR	6759290	CallExpression	malloc ( sizeof ( context ) )		6759139	1					
ANR	6759291	Callee	malloc		6759139	0					
ANR	6759292	Identifier	malloc		6759139	0					
ANR	6759293	ArgumentList	sizeof ( context )		6759139	1					
ANR	6759294	Argument	sizeof ( context )		6759139	0					
ANR	6759295	SizeofExpression	sizeof ( context )		6759139	0					
ANR	6759296	Sizeof	sizeof		6759139	0					
ANR	6759297	SizeofOperand	context		6759139	1					
ANR	6759298	ExpressionStatement	"memcpy ( conY , con , sizeof ( context ) )"	1860:8:61380:61414	6759139	5	True				
ANR	6759299	CallExpression	"memcpy ( conY , con , sizeof ( context ) )"		6759139	0					
ANR	6759300	Callee	memcpy		6759139	0					
ANR	6759301	Identifier	memcpy		6759139	0					
ANR	6759302	ArgumentList	conY		6759139	1					
ANR	6759303	Argument	conY		6759139	0					
ANR	6759304	Identifier	conY		6759139	0					
ANR	6759305	Argument	con		6759139	1					
ANR	6759306	Identifier	con		6759139	0					
ANR	6759307	Argument	sizeof ( context )		6759139	2					
ANR	6759308	SizeofExpression	sizeof ( context )		6759139	0					
ANR	6759309	Sizeof	sizeof		6759139	0					
ANR	6759310	SizeofOperand	context		6759139	1					
ANR	6759311	ExpressionStatement	"memcpy ( conU , con , sizeof ( context ) )"	1861:8:61424:61458	6759139	6	True				
ANR	6759312	CallExpression	"memcpy ( conU , con , sizeof ( context ) )"		6759139	0					
ANR	6759313	Callee	memcpy		6759139	0					
ANR	6759314	Identifier	memcpy		6759139	0					
ANR	6759315	ArgumentList	conU		6759139	1					
ANR	6759316	Argument	conU		6759139	0					
ANR	6759317	Identifier	conU		6759139	0					
ANR	6759318	Argument	con		6759139	1					
ANR	6759319	Identifier	con		6759139	0					
ANR	6759320	Argument	sizeof ( context )		6759139	2					
ANR	6759321	SizeofExpression	sizeof ( context )		6759139	0					
ANR	6759322	Sizeof	sizeof		6759139	0					
ANR	6759323	SizeofOperand	context		6759139	1					
ANR	6759324	ExpressionStatement	"memcpy ( conV , con , sizeof ( context ) )"	1862:8:61468:61502	6759139	7	True				
ANR	6759325	CallExpression	"memcpy ( conV , con , sizeof ( context ) )"		6759139	0					
ANR	6759326	Callee	memcpy		6759139	0					
ANR	6759327	Identifier	memcpy		6759139	0					
ANR	6759328	ArgumentList	conV		6759139	1					
ANR	6759329	Argument	conV		6759139	0					
ANR	6759330	Identifier	conV		6759139	0					
ANR	6759331	Argument	con		6759139	1					
ANR	6759332	Identifier	con		6759139	0					
ANR	6759333	Argument	sizeof ( context )		6759139	2					
ANR	6759334	SizeofExpression	sizeof ( context )		6759139	0					
ANR	6759335	Sizeof	sizeof		6759139	0					
ANR	6759336	SizeofOperand	context		6759139	1					
ANR	6759337	IfStatement	if ( con -> alpha )		6759139	8					
ANR	6759338	Condition	con -> alpha	1863:11:61515:61524	6759139	0	True				
ANR	6759339	PtrMemberAccess	con -> alpha		6759139	0					
ANR	6759340	Identifier	con		6759139	0					
ANR	6759341	Identifier	alpha		6759139	1					
ANR	6759342	ExpressionStatement	"memcpy ( conA , con , sizeof ( context ) )"	1864:12:61539:61573	6759139	1	True				
ANR	6759343	CallExpression	"memcpy ( conA , con , sizeof ( context ) )"		6759139	0					
ANR	6759344	Callee	memcpy		6759139	0					
ANR	6759345	Identifier	memcpy		6759139	0					
ANR	6759346	ArgumentList	conA		6759139	1					
ANR	6759347	Argument	conA		6759139	0					
ANR	6759348	Identifier	conA		6759139	0					
ANR	6759349	Argument	con		6759139	1					
ANR	6759350	Identifier	con		6759139	0					
ANR	6759351	Argument	sizeof ( context )		6759139	2					
ANR	6759352	SizeofExpression	sizeof ( context )		6759139	0					
ANR	6759353	Sizeof	sizeof		6759139	0					
ANR	6759354	SizeofOperand	context		6759139	1					
ANR	6759355	ExpressionStatement	"conY -> name = ""Y.raw"""	1865:8:61583:61603	6759139	9	True				
ANR	6759356	AssignmentExpression	"conY -> name = ""Y.raw"""		6759139	0		=			
ANR	6759357	PtrMemberAccess	conY -> name		6759139	0					
ANR	6759358	Identifier	conY		6759139	0					
ANR	6759359	Identifier	name		6759139	1					
ANR	6759360	PrimaryExpression	"""Y.raw"""		6759139	1					
ANR	6759361	ExpressionStatement	"conU -> name = ""U.raw"""	1866:8:61613:61633	6759139	10	True				
ANR	6759362	AssignmentExpression	"conU -> name = ""U.raw"""		6759139	0		=			
ANR	6759363	PtrMemberAccess	conU -> name		6759139	0					
ANR	6759364	Identifier	conU		6759139	0					
ANR	6759365	Identifier	name		6759139	1					
ANR	6759366	PrimaryExpression	"""U.raw"""		6759139	1					
ANR	6759367	ExpressionStatement	"conV -> name = ""V.raw"""	1867:8:61643:61663	6759139	11	True				
ANR	6759368	AssignmentExpression	"conV -> name = ""V.raw"""		6759139	0		=			
ANR	6759369	PtrMemberAccess	conV -> name		6759139	0					
ANR	6759370	Identifier	conV		6759139	0					
ANR	6759371	Identifier	name		6759139	1					
ANR	6759372	PrimaryExpression	"""V.raw"""		6759139	1					
ANR	6759373	IfStatement	if ( con -> alpha )		6759139	12					
ANR	6759374	Condition	con -> alpha	1868:11:61676:61685	6759139	0	True				
ANR	6759375	PtrMemberAccess	con -> alpha		6759139	0					
ANR	6759376	Identifier	con		6759139	0					
ANR	6759377	Identifier	alpha		6759139	1					
ANR	6759378	ExpressionStatement	"conA -> name = ""A.raw"""	1869:12:61700:61720	6759139	1	True				
ANR	6759379	AssignmentExpression	"conA -> name = ""A.raw"""		6759139	0		=			
ANR	6759380	PtrMemberAccess	conA -> name		6759139	0					
ANR	6759381	Identifier	conA		6759139	0					
ANR	6759382	Identifier	name		6759139	1					
ANR	6759383	PrimaryExpression	"""A.raw"""		6759139	1					
ANR	6759384	ExpressionStatement	con -> left_pad = image -> window_extra_left	1871:8:61735:61775	6759139	13	True				
ANR	6759385	AssignmentExpression	con -> left_pad = image -> window_extra_left		6759139	0		=			
ANR	6759386	PtrMemberAccess	con -> left_pad		6759139	0					
ANR	6759387	Identifier	con		6759139	0					
ANR	6759388	Identifier	left_pad		6759139	1					
ANR	6759389	PtrMemberAccess	image -> window_extra_left		6759139	1					
ANR	6759390	Identifier	image		6759139	0					
ANR	6759391	Identifier	window_extra_left		6759139	1					
ANR	6759392	ExpressionStatement	con -> top_pad_remaining = image -> window_extra_top	1872:8:61785:61833	6759139	14	True				
ANR	6759393	AssignmentExpression	con -> top_pad_remaining = image -> window_extra_top		6759139	0		=			
ANR	6759394	PtrMemberAccess	con -> top_pad_remaining		6759139	0					
ANR	6759395	Identifier	con		6759139	0					
ANR	6759396	Identifier	top_pad_remaining		6759139	1					
ANR	6759397	PtrMemberAccess	image -> window_extra_top		6759139	1					
ANR	6759398	Identifier	image		6759139	0					
ANR	6759399	Identifier	window_extra_top		6759139	1					
ANR	6759400	ExpressionStatement	con -> top_pad = image -> window_extra_top	1873:8:61843:61881	6759139	15	True				
ANR	6759401	AssignmentExpression	con -> top_pad = image -> window_extra_top		6759139	0		=			
ANR	6759402	PtrMemberAccess	con -> top_pad		6759139	0					
ANR	6759403	Identifier	con		6759139	0					
ANR	6759404	Identifier	top_pad		6759139	1					
ANR	6759405	PtrMemberAccess	image -> window_extra_top		6759139	1					
ANR	6759406	Identifier	image		6759139	0					
ANR	6759407	Identifier	window_extra_top		6759139	1					
ANR	6759408	ExpressionStatement	con -> ncomp = conY -> ncomp = conU -> ncomp = conV -> ncomp = 1	1875:8:61900:61955	6759139	16	True				
ANR	6759409	AssignmentExpression	con -> ncomp = conY -> ncomp = conU -> ncomp = conV -> ncomp = 1		6759139	0		=			
ANR	6759410	PtrMemberAccess	con -> ncomp		6759139	0					
ANR	6759411	Identifier	con		6759139	0					
ANR	6759412	Identifier	ncomp		6759139	1					
ANR	6759413	AssignmentExpression	conY -> ncomp = conU -> ncomp = conV -> ncomp = 1		6759139	1		=			
ANR	6759414	PtrMemberAccess	conY -> ncomp		6759139	0					
ANR	6759415	Identifier	conY		6759139	0					
ANR	6759416	Identifier	ncomp		6759139	1					
ANR	6759417	AssignmentExpression	conU -> ncomp = conV -> ncomp = 1		6759139	1		=			
ANR	6759418	PtrMemberAccess	conU -> ncomp		6759139	0					
ANR	6759419	Identifier	conU		6759139	0					
ANR	6759420	Identifier	ncomp		6759139	1					
ANR	6759421	AssignmentExpression	conV -> ncomp = 1		6759139	1		=			
ANR	6759422	PtrMemberAccess	conV -> ncomp		6759139	0					
ANR	6759423	Identifier	conV		6759139	0					
ANR	6759424	Identifier	ncomp		6759139	1					
ANR	6759425	PrimaryExpression	1		6759139	1					
ANR	6759426	IfStatement	if ( con -> alpha )		6759139	17					
ANR	6759427	Condition	con -> alpha	1876:11:61968:61977	6759139	0	True				
ANR	6759428	PtrMemberAccess	con -> alpha		6759139	0					
ANR	6759429	Identifier	con		6759139	0					
ANR	6759430	Identifier	alpha		6759139	1					
ANR	6759431	ExpressionStatement	conA -> ncomp = 1	1877:12:61992:62007	6759139	1	True				
ANR	6759432	AssignmentExpression	conA -> ncomp = 1		6759139	0		=			
ANR	6759433	PtrMemberAccess	conA -> ncomp		6759139	0					
ANR	6759434	Identifier	conA		6759139	0					
ANR	6759435	Identifier	ncomp		6759139	1					
ANR	6759436	PrimaryExpression	1		6759139	1					
ANR	6759437	ExpressionStatement	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	1878:8:62017:62261	6759139	18	True				
ANR	6759438	CallExpression	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		6759139	0					
ANR	6759439	Callee	start_output_file		6759139	0					
ANR	6759440	Identifier	start_output_file		6759139	0					
ANR	6759441	ArgumentList	con		6759139	1					
ANR	6759442	Argument	con		6759139	0					
ANR	6759443	Identifier	con		6759139	0					
ANR	6759444	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6759139	1					
ANR	6759445	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6759139	0					
ANR	6759446	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		6759139	0					
ANR	6759447	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		6759139	0					
ANR	6759448	ArgumentList	image		6759139	1					
ANR	6759449	Argument	image		6759139	0					
ANR	6759450	Identifier	image		6759139	0					
ANR	6759451	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6759139	2					
ANR	6759452	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6759139	0					
ANR	6759453	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		6759139	0					
ANR	6759454	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		6759139	0					
ANR	6759455	ArgumentList	image		6759139	1					
ANR	6759456	Argument	image		6759139	0					
ANR	6759457	Identifier	image		6759139	0					
ANR	6759458	Argument	jxr_get_IMAGE_WIDTH ( image )		6759139	3					
ANR	6759459	CallExpression	jxr_get_IMAGE_WIDTH ( image )		6759139	0					
ANR	6759460	Callee	jxr_get_IMAGE_WIDTH		6759139	0					
ANR	6759461	Identifier	jxr_get_IMAGE_WIDTH		6759139	0					
ANR	6759462	ArgumentList	image		6759139	1					
ANR	6759463	Argument	image		6759139	0					
ANR	6759464	Identifier	image		6759139	0					
ANR	6759465	Argument	jxr_get_IMAGE_HEIGHT ( image )		6759139	4					
ANR	6759466	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		6759139	0					
ANR	6759467	Callee	jxr_get_IMAGE_HEIGHT		6759139	0					
ANR	6759468	Identifier	jxr_get_IMAGE_HEIGHT		6759139	0					
ANR	6759469	ArgumentList	image		6759139	1					
ANR	6759470	Argument	image		6759139	0					
ANR	6759471	Identifier	image		6759139	0					
ANR	6759472	Argument	1		6759139	5					
ANR	6759473	PrimaryExpression	1		6759139	0					
ANR	6759474	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6759139	6					
ANR	6759475	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6759139	0					
ANR	6759476	Callee	jxr_get_OUTPUT_BITDEPTH		6759139	0					
ANR	6759477	Identifier	jxr_get_OUTPUT_BITDEPTH		6759139	0					
ANR	6759478	ArgumentList	image		6759139	1					
ANR	6759479	Argument	image		6759139	0					
ANR	6759480	Identifier	image		6759139	0					
ANR	6759481	Argument	jxr_get_pixel_format ( image )		6759139	7					
ANR	6759482	CallExpression	jxr_get_pixel_format ( image )		6759139	0					
ANR	6759483	Callee	jxr_get_pixel_format		6759139	0					
ANR	6759484	Identifier	jxr_get_pixel_format		6759139	0					
ANR	6759485	ArgumentList	image		6759139	1					
ANR	6759486	Argument	image		6759139	0					
ANR	6759487	Identifier	image		6759139	0					
ANR	6759488	ExpressionStatement	"start_output_file ( conY , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	1881:8:62271:62516	6759139	19	True				
ANR	6759489	CallExpression	"start_output_file ( conY , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		6759139	0					
ANR	6759490	Callee	start_output_file		6759139	0					
ANR	6759491	Identifier	start_output_file		6759139	0					
ANR	6759492	ArgumentList	conY		6759139	1					
ANR	6759493	Argument	conY		6759139	0					
ANR	6759494	Identifier	conY		6759139	0					
ANR	6759495	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6759139	1					
ANR	6759496	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6759139	0					
ANR	6759497	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		6759139	0					
ANR	6759498	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		6759139	0					
ANR	6759499	ArgumentList	image		6759139	1					
ANR	6759500	Argument	image		6759139	0					
ANR	6759501	Identifier	image		6759139	0					
ANR	6759502	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6759139	2					
ANR	6759503	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6759139	0					
ANR	6759504	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		6759139	0					
ANR	6759505	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		6759139	0					
ANR	6759506	ArgumentList	image		6759139	1					
ANR	6759507	Argument	image		6759139	0					
ANR	6759508	Identifier	image		6759139	0					
ANR	6759509	Argument	jxr_get_IMAGE_WIDTH ( image )		6759139	3					
ANR	6759510	CallExpression	jxr_get_IMAGE_WIDTH ( image )		6759139	0					
ANR	6759511	Callee	jxr_get_IMAGE_WIDTH		6759139	0					
ANR	6759512	Identifier	jxr_get_IMAGE_WIDTH		6759139	0					
ANR	6759513	ArgumentList	image		6759139	1					
ANR	6759514	Argument	image		6759139	0					
ANR	6759515	Identifier	image		6759139	0					
ANR	6759516	Argument	jxr_get_IMAGE_HEIGHT ( image )		6759139	4					
ANR	6759517	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		6759139	0					
ANR	6759518	Callee	jxr_get_IMAGE_HEIGHT		6759139	0					
ANR	6759519	Identifier	jxr_get_IMAGE_HEIGHT		6759139	0					
ANR	6759520	ArgumentList	image		6759139	1					
ANR	6759521	Argument	image		6759139	0					
ANR	6759522	Identifier	image		6759139	0					
ANR	6759523	Argument	1		6759139	5					
ANR	6759524	PrimaryExpression	1		6759139	0					
ANR	6759525	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6759139	6					
ANR	6759526	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6759139	0					
ANR	6759527	Callee	jxr_get_OUTPUT_BITDEPTH		6759139	0					
ANR	6759528	Identifier	jxr_get_OUTPUT_BITDEPTH		6759139	0					
ANR	6759529	ArgumentList	image		6759139	1					
ANR	6759530	Argument	image		6759139	0					
ANR	6759531	Identifier	image		6759139	0					
ANR	6759532	Argument	jxr_get_pixel_format ( image )		6759139	7					
ANR	6759533	CallExpression	jxr_get_pixel_format ( image )		6759139	0					
ANR	6759534	Callee	jxr_get_pixel_format		6759139	0					
ANR	6759535	Identifier	jxr_get_pixel_format		6759139	0					
ANR	6759536	ArgumentList	image		6759139	1					
ANR	6759537	Argument	image		6759139	0					
ANR	6759538	Identifier	image		6759139	0					
ANR	6759539	ExpressionStatement	"start_output_file ( conU , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	1884:8:62526:62771	6759139	20	True				
ANR	6759540	CallExpression	"start_output_file ( conU , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		6759139	0					
ANR	6759541	Callee	start_output_file		6759139	0					
ANR	6759542	Identifier	start_output_file		6759139	0					
ANR	6759543	ArgumentList	conU		6759139	1					
ANR	6759544	Argument	conU		6759139	0					
ANR	6759545	Identifier	conU		6759139	0					
ANR	6759546	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6759139	1					
ANR	6759547	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6759139	0					
ANR	6759548	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		6759139	0					
ANR	6759549	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		6759139	0					
ANR	6759550	ArgumentList	image		6759139	1					
ANR	6759551	Argument	image		6759139	0					
ANR	6759552	Identifier	image		6759139	0					
ANR	6759553	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6759139	2					
ANR	6759554	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6759139	0					
ANR	6759555	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		6759139	0					
ANR	6759556	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		6759139	0					
ANR	6759557	ArgumentList	image		6759139	1					
ANR	6759558	Argument	image		6759139	0					
ANR	6759559	Identifier	image		6759139	0					
ANR	6759560	Argument	jxr_get_IMAGE_WIDTH ( image )		6759139	3					
ANR	6759561	CallExpression	jxr_get_IMAGE_WIDTH ( image )		6759139	0					
ANR	6759562	Callee	jxr_get_IMAGE_WIDTH		6759139	0					
ANR	6759563	Identifier	jxr_get_IMAGE_WIDTH		6759139	0					
ANR	6759564	ArgumentList	image		6759139	1					
ANR	6759565	Argument	image		6759139	0					
ANR	6759566	Identifier	image		6759139	0					
ANR	6759567	Argument	jxr_get_IMAGE_HEIGHT ( image )		6759139	4					
ANR	6759568	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		6759139	0					
ANR	6759569	Callee	jxr_get_IMAGE_HEIGHT		6759139	0					
ANR	6759570	Identifier	jxr_get_IMAGE_HEIGHT		6759139	0					
ANR	6759571	ArgumentList	image		6759139	1					
ANR	6759572	Argument	image		6759139	0					
ANR	6759573	Identifier	image		6759139	0					
ANR	6759574	Argument	1		6759139	5					
ANR	6759575	PrimaryExpression	1		6759139	0					
ANR	6759576	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6759139	6					
ANR	6759577	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6759139	0					
ANR	6759578	Callee	jxr_get_OUTPUT_BITDEPTH		6759139	0					
ANR	6759579	Identifier	jxr_get_OUTPUT_BITDEPTH		6759139	0					
ANR	6759580	ArgumentList	image		6759139	1					
ANR	6759581	Argument	image		6759139	0					
ANR	6759582	Identifier	image		6759139	0					
ANR	6759583	Argument	jxr_get_pixel_format ( image )		6759139	7					
ANR	6759584	CallExpression	jxr_get_pixel_format ( image )		6759139	0					
ANR	6759585	Callee	jxr_get_pixel_format		6759139	0					
ANR	6759586	Identifier	jxr_get_pixel_format		6759139	0					
ANR	6759587	ArgumentList	image		6759139	1					
ANR	6759588	Argument	image		6759139	0					
ANR	6759589	Identifier	image		6759139	0					
ANR	6759590	ExpressionStatement	"start_output_file ( conV , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	1887:8:62781:63026	6759139	21	True				
ANR	6759591	CallExpression	"start_output_file ( conV , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		6759139	0					
ANR	6759592	Callee	start_output_file		6759139	0					
ANR	6759593	Identifier	start_output_file		6759139	0					
ANR	6759594	ArgumentList	conV		6759139	1					
ANR	6759595	Argument	conV		6759139	0					
ANR	6759596	Identifier	conV		6759139	0					
ANR	6759597	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6759139	1					
ANR	6759598	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6759139	0					
ANR	6759599	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		6759139	0					
ANR	6759600	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		6759139	0					
ANR	6759601	ArgumentList	image		6759139	1					
ANR	6759602	Argument	image		6759139	0					
ANR	6759603	Identifier	image		6759139	0					
ANR	6759604	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6759139	2					
ANR	6759605	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6759139	0					
ANR	6759606	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		6759139	0					
ANR	6759607	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		6759139	0					
ANR	6759608	ArgumentList	image		6759139	1					
ANR	6759609	Argument	image		6759139	0					
ANR	6759610	Identifier	image		6759139	0					
ANR	6759611	Argument	jxr_get_IMAGE_WIDTH ( image )		6759139	3					
ANR	6759612	CallExpression	jxr_get_IMAGE_WIDTH ( image )		6759139	0					
ANR	6759613	Callee	jxr_get_IMAGE_WIDTH		6759139	0					
ANR	6759614	Identifier	jxr_get_IMAGE_WIDTH		6759139	0					
ANR	6759615	ArgumentList	image		6759139	1					
ANR	6759616	Argument	image		6759139	0					
ANR	6759617	Identifier	image		6759139	0					
ANR	6759618	Argument	jxr_get_IMAGE_HEIGHT ( image )		6759139	4					
ANR	6759619	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		6759139	0					
ANR	6759620	Callee	jxr_get_IMAGE_HEIGHT		6759139	0					
ANR	6759621	Identifier	jxr_get_IMAGE_HEIGHT		6759139	0					
ANR	6759622	ArgumentList	image		6759139	1					
ANR	6759623	Argument	image		6759139	0					
ANR	6759624	Identifier	image		6759139	0					
ANR	6759625	Argument	1		6759139	5					
ANR	6759626	PrimaryExpression	1		6759139	0					
ANR	6759627	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6759139	6					
ANR	6759628	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6759139	0					
ANR	6759629	Callee	jxr_get_OUTPUT_BITDEPTH		6759139	0					
ANR	6759630	Identifier	jxr_get_OUTPUT_BITDEPTH		6759139	0					
ANR	6759631	ArgumentList	image		6759139	1					
ANR	6759632	Argument	image		6759139	0					
ANR	6759633	Identifier	image		6759139	0					
ANR	6759634	Argument	jxr_get_pixel_format ( image )		6759139	7					
ANR	6759635	CallExpression	jxr_get_pixel_format ( image )		6759139	0					
ANR	6759636	Callee	jxr_get_pixel_format		6759139	0					
ANR	6759637	Identifier	jxr_get_pixel_format		6759139	0					
ANR	6759638	ArgumentList	image		6759139	1					
ANR	6759639	Argument	image		6759139	0					
ANR	6759640	Identifier	image		6759139	0					
ANR	6759641	IfStatement	if ( con -> alpha )		6759139	22					
ANR	6759642	Condition	con -> alpha	1890:11:63039:63048	6759139	0	True				
ANR	6759643	PtrMemberAccess	con -> alpha		6759139	0					
ANR	6759644	Identifier	con		6759139	0					
ANR	6759645	Identifier	alpha		6759139	1					
ANR	6759646	ExpressionStatement	"start_output_file ( conA , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	1891:12:63063:63312	6759139	1	True				
ANR	6759647	CallExpression	"start_output_file ( conA , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		6759139	0					
ANR	6759648	Callee	start_output_file		6759139	0					
ANR	6759649	Identifier	start_output_file		6759139	0					
ANR	6759650	ArgumentList	conA		6759139	1					
ANR	6759651	Argument	conA		6759139	0					
ANR	6759652	Identifier	conA		6759139	0					
ANR	6759653	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6759139	1					
ANR	6759654	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6759139	0					
ANR	6759655	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		6759139	0					
ANR	6759656	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		6759139	0					
ANR	6759657	ArgumentList	image		6759139	1					
ANR	6759658	Argument	image		6759139	0					
ANR	6759659	Identifier	image		6759139	0					
ANR	6759660	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6759139	2					
ANR	6759661	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6759139	0					
ANR	6759662	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		6759139	0					
ANR	6759663	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		6759139	0					
ANR	6759664	ArgumentList	image		6759139	1					
ANR	6759665	Argument	image		6759139	0					
ANR	6759666	Identifier	image		6759139	0					
ANR	6759667	Argument	jxr_get_IMAGE_WIDTH ( image )		6759139	3					
ANR	6759668	CallExpression	jxr_get_IMAGE_WIDTH ( image )		6759139	0					
ANR	6759669	Callee	jxr_get_IMAGE_WIDTH		6759139	0					
ANR	6759670	Identifier	jxr_get_IMAGE_WIDTH		6759139	0					
ANR	6759671	ArgumentList	image		6759139	1					
ANR	6759672	Argument	image		6759139	0					
ANR	6759673	Identifier	image		6759139	0					
ANR	6759674	Argument	jxr_get_IMAGE_HEIGHT ( image )		6759139	4					
ANR	6759675	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		6759139	0					
ANR	6759676	Callee	jxr_get_IMAGE_HEIGHT		6759139	0					
ANR	6759677	Identifier	jxr_get_IMAGE_HEIGHT		6759139	0					
ANR	6759678	ArgumentList	image		6759139	1					
ANR	6759679	Argument	image		6759139	0					
ANR	6759680	Identifier	image		6759139	0					
ANR	6759681	Argument	1		6759139	5					
ANR	6759682	PrimaryExpression	1		6759139	0					
ANR	6759683	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6759139	6					
ANR	6759684	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6759139	0					
ANR	6759685	Callee	jxr_get_OUTPUT_BITDEPTH		6759139	0					
ANR	6759686	Identifier	jxr_get_OUTPUT_BITDEPTH		6759139	0					
ANR	6759687	ArgumentList	image		6759139	1					
ANR	6759688	Argument	image		6759139	0					
ANR	6759689	Identifier	image		6759139	0					
ANR	6759690	Argument	jxr_get_pixel_format ( image )		6759139	7					
ANR	6759691	CallExpression	jxr_get_pixel_format ( image )		6759139	0					
ANR	6759692	Callee	jxr_get_pixel_format		6759139	0					
ANR	6759693	Identifier	jxr_get_pixel_format		6759139	0					
ANR	6759694	ArgumentList	image		6759139	1					
ANR	6759695	Argument	image		6759139	0					
ANR	6759696	Identifier	image		6759139	0					
ANR	6759697	IdentifierDeclStatement	int idx ;	1897:4:63326:63333	6759139	14	True				
ANR	6759698	IdentifierDecl	idx		6759139	0					
ANR	6759699	IdentifierDeclType	int		6759139	0					
ANR	6759700	Identifier	idx		6759139	1					
ANR	6759701	IdentifierDeclStatement	int strip_blocks = ( image -> extended_width ) / 16 ;	1898:4:63339:63384	6759139	15	True				
ANR	6759702	IdentifierDecl	strip_blocks = ( image -> extended_width ) / 16		6759139	0					
ANR	6759703	IdentifierDeclType	int		6759139	0					
ANR	6759704	Identifier	strip_blocks		6759139	1					
ANR	6759705	AssignmentExpression	strip_blocks = ( image -> extended_width ) / 16		6759139	2		=			
ANR	6759706	Identifier	strip_blocks		6759139	0					
ANR	6759707	MultiplicativeExpression	( image -> extended_width ) / 16		6759139	1		/			
ANR	6759708	PtrMemberAccess	image -> extended_width		6759139	0					
ANR	6759709	Identifier	image		6759139	0					
ANR	6759710	Identifier	extended_width		6759139	1					
ANR	6759711	PrimaryExpression	16		6759139	1					
ANR	6759712	IdentifierDeclStatement	int dy = 16 * strip_blocks ;	1899:4:63390:63414	6759139	16	True				
ANR	6759713	IdentifierDecl	dy = 16 * strip_blocks		6759139	0					
ANR	6759714	IdentifierDeclType	int		6759139	0					
ANR	6759715	Identifier	dy		6759139	1					
ANR	6759716	AssignmentExpression	dy = 16 * strip_blocks		6759139	2		=			
ANR	6759717	Identifier	dy		6759139	0					
ANR	6759718	MultiplicativeExpression	16 * strip_blocks		6759139	1		*			
ANR	6759719	PrimaryExpression	16		6759139	0					
ANR	6759720	Identifier	strip_blocks		6759139	1					
ANR	6759721	IfStatement	if ( con -> bpi == 8 )		6759139	17					
ANR	6759722	Condition	con -> bpi == 8	1901:8:63429:63441	6759139	0	True				
ANR	6759723	EqualityExpression	con -> bpi == 8		6759139	0		==			
ANR	6759724	PtrMemberAccess	con -> bpi		6759139	0					
ANR	6759725	Identifier	con		6759139	0					
ANR	6759726	Identifier	bpi		6759139	1					
ANR	6759727	PrimaryExpression	8		6759139	1					
ANR	6759728	CompoundStatement		71:8:2982:3025	6759139	1					
ANR	6759729	IdentifierDeclStatement	int xDiv = 16 ;	1903:8:63455:63468	6759139	0	True				
ANR	6759730	IdentifierDecl	xDiv = 16		6759139	0					
ANR	6759731	IdentifierDeclType	int		6759139	0					
ANR	6759732	Identifier	xDiv		6759139	1					
ANR	6759733	AssignmentExpression	xDiv = 16		6759139	2		=			
ANR	6759734	Identifier	xDiv		6759139	0					
ANR	6759735	PrimaryExpression	16		6759139	1					
ANR	6759736	IdentifierDeclStatement	int yDiv = 16 ;	1904:8:63478:63491	6759139	1	True				
ANR	6759737	IdentifierDecl	yDiv = 16		6759139	0					
ANR	6759738	IdentifierDeclType	int		6759139	0					
ANR	6759739	Identifier	yDiv		6759139	1					
ANR	6759740	AssignmentExpression	yDiv = 16		6759139	2		=			
ANR	6759741	Identifier	yDiv		6759139	0					
ANR	6759742	PrimaryExpression	16		6759139	1					
ANR	6759743	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conY -> buf + xDiv * mx ;	1906:8:63517:63560	6759139	2	True				
ANR	6759744	IdentifierDecl	* dp = ( uint8_t * ) conY -> buf + xDiv * mx		6759139	0					
ANR	6759745	IdentifierDeclType	uint8_t *		6759139	0					
ANR	6759746	Identifier	dp		6759139	1					
ANR	6759747	AssignmentExpression	* dp = ( uint8_t * ) conY -> buf + xDiv * mx		6759139	2		=			
ANR	6759748	Identifier	dp		6759139	0					
ANR	6759749	AdditiveExpression	( uint8_t * ) conY -> buf + xDiv * mx		6759139	1		+			
ANR	6759750	CastExpression	( uint8_t * ) conY -> buf		6759139	0					
ANR	6759751	CastTarget	uint8_t *		6759139	0					
ANR	6759752	PtrMemberAccess	conY -> buf		6759139	1					
ANR	6759753	Identifier	conY		6759139	0					
ANR	6759754	Identifier	buf		6759139	1					
ANR	6759755	MultiplicativeExpression	xDiv * mx		6759139	1		*			
ANR	6759756	Identifier	xDiv		6759139	0					
ANR	6759757	Identifier	mx		6759139	1					
ANR	6759758	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		6759139	3					
ANR	6759759	ForInit	idx = 0 ;	1907:13:63575:63582	6759139	0	True				
ANR	6759760	AssignmentExpression	idx = 0		6759139	0		=			
ANR	6759761	Identifier	idx		6759139	0					
ANR	6759762	PrimaryExpression	0		6759139	1					
ANR	6759763	Condition	idx < xDiv * yDiv	1907:22:63584:63598	6759139	1	True				
ANR	6759764	RelationalExpression	idx < xDiv * yDiv		6759139	0		<			
ANR	6759765	Identifier	idx		6759139	0					
ANR	6759766	MultiplicativeExpression	xDiv * yDiv		6759139	1		*			
ANR	6759767	Identifier	xDiv		6759139	0					
ANR	6759768	Identifier	yDiv		6759139	1					
ANR	6759769	AssignmentExpression	idx += 1	1907:39:63601:63608	6759139	2	True	+=			
ANR	6759770	Identifier	idx		6759139	0					
ANR	6759771	PrimaryExpression	1		6759139	1					
ANR	6759772	CompoundStatement		73:12:3090:3126	6759139	3					
ANR	6759773	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1908:12:63625:63661	6759139	0	True				
ANR	6759774	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	0					
ANR	6759775	IdentifierDeclType	int		6759139	0					
ANR	6759776	Identifier	dix		6759139	1					
ANR	6759777	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	2		=			
ANR	6759778	Identifier	dix		6759139	0					
ANR	6759779	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		6759139	1		+			
ANR	6759780	MultiplicativeExpression	( idx / xDiv ) * dy		6759139	0		*			
ANR	6759781	MultiplicativeExpression	idx / xDiv		6759139	0		/			
ANR	6759782	Identifier	idx		6759139	0					
ANR	6759783	Identifier	xDiv		6759139	1					
ANR	6759784	Identifier	dy		6759139	1					
ANR	6759785	MultiplicativeExpression	idx % xDiv		6759139	1		%			
ANR	6759786	Identifier	idx		6759139	0					
ANR	6759787	Identifier	xDiv		6759139	1					
ANR	6759788	ExpressionStatement	dp [ dix ] = dataY [ idx ]	1909:12:63687:63707	6759139	1	True				
ANR	6759789	AssignmentExpression	dp [ dix ] = dataY [ idx ]		6759139	0		=			
ANR	6759790	ArrayIndexing	dp [ dix ]		6759139	0					
ANR	6759791	Identifier	dp		6759139	0					
ANR	6759792	Identifier	dix		6759139	1					
ANR	6759793	ArrayIndexing	dataY [ idx ]		6759139	1					
ANR	6759794	Identifier	dataY		6759139	0					
ANR	6759795	Identifier	idx		6759139	1					
ANR	6759796	IfStatement	if ( isOutputYUV422 ( image ) )		6759139	4					
ANR	6759797	Condition	isOutputYUV422 ( image )	1912:11:63731:63751	6759139	0	True				
ANR	6759798	CallExpression	isOutputYUV422 ( image )		6759139	0					
ANR	6759799	Callee	isOutputYUV422		6759139	0					
ANR	6759800	Identifier	isOutputYUV422		6759139	0					
ANR	6759801	ArgumentList	image		6759139	1					
ANR	6759802	Argument	image		6759139	0					
ANR	6759803	Identifier	image		6759139	0					
ANR	6759804	CompoundStatement		78:8:3227:3227	6759139	1					
ANR	6759805	ExpressionStatement	dy = 8 * strip_blocks	1914:12:63776:63795	6759139	0	True				
ANR	6759806	AssignmentExpression	dy = 8 * strip_blocks		6759139	0		=			
ANR	6759807	Identifier	dy		6759139	0					
ANR	6759808	MultiplicativeExpression	8 * strip_blocks		6759139	1		*			
ANR	6759809	PrimaryExpression	8		6759139	0					
ANR	6759810	Identifier	strip_blocks		6759139	1					
ANR	6759811	ExpressionStatement	xDiv = 8	1915:12:63809:63817	6759139	1	True				
ANR	6759812	AssignmentExpression	xDiv = 8		6759139	0		=			
ANR	6759813	Identifier	xDiv		6759139	0					
ANR	6759814	PrimaryExpression	8		6759139	1					
ANR	6759815	IfStatement	if ( isOutputYUV420 ( image ) )		6759139	5					
ANR	6759816	Condition	isOutputYUV420 ( image )	1918:11:63849:63869	6759139	0	True				
ANR	6759817	CallExpression	isOutputYUV420 ( image )		6759139	0					
ANR	6759818	Callee	isOutputYUV420		6759139	0					
ANR	6759819	Identifier	isOutputYUV420		6759139	0					
ANR	6759820	ArgumentList	image		6759139	1					
ANR	6759821	Argument	image		6759139	0					
ANR	6759822	Identifier	image		6759139	0					
ANR	6759823	CompoundStatement		84:8:3345:3345	6759139	1					
ANR	6759824	ExpressionStatement	dy = 8 * strip_blocks	1920:12:63894:63913	6759139	0	True				
ANR	6759825	AssignmentExpression	dy = 8 * strip_blocks		6759139	0		=			
ANR	6759826	Identifier	dy		6759139	0					
ANR	6759827	MultiplicativeExpression	8 * strip_blocks		6759139	1		*			
ANR	6759828	PrimaryExpression	8		6759139	0					
ANR	6759829	Identifier	strip_blocks		6759139	1					
ANR	6759830	ExpressionStatement	xDiv = yDiv = 8	1921:12:63927:63942	6759139	1	True				
ANR	6759831	AssignmentExpression	xDiv = yDiv = 8		6759139	0		=			
ANR	6759832	Identifier	xDiv		6759139	0					
ANR	6759833	AssignmentExpression	yDiv = 8		6759139	1		=			
ANR	6759834	Identifier	yDiv		6759139	0					
ANR	6759835	PrimaryExpression	8		6759139	1					
ANR	6759836	ExpressionStatement	dp = ( uint8_t * ) conU -> buf + xDiv * mx	1925:8:63987:64021	6759139	6	True				
ANR	6759837	AssignmentExpression	dp = ( uint8_t * ) conU -> buf + xDiv * mx		6759139	0		=			
ANR	6759838	Identifier	dp		6759139	0					
ANR	6759839	AdditiveExpression	( uint8_t * ) conU -> buf + xDiv * mx		6759139	1		+			
ANR	6759840	CastExpression	( uint8_t * ) conU -> buf		6759139	0					
ANR	6759841	CastTarget	uint8_t *		6759139	0					
ANR	6759842	PtrMemberAccess	conU -> buf		6759139	1					
ANR	6759843	Identifier	conU		6759139	0					
ANR	6759844	Identifier	buf		6759139	1					
ANR	6759845	MultiplicativeExpression	xDiv * mx		6759139	1		*			
ANR	6759846	Identifier	xDiv		6759139	0					
ANR	6759847	Identifier	mx		6759139	1					
ANR	6759848	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		6759139	7					
ANR	6759849	ForInit	idx = 0 ;	1926:13:64036:64043	6759139	0	True				
ANR	6759850	AssignmentExpression	idx = 0		6759139	0		=			
ANR	6759851	Identifier	idx		6759139	0					
ANR	6759852	PrimaryExpression	0		6759139	1					
ANR	6759853	Condition	idx < xDiv * yDiv	1926:22:64045:64059	6759139	1	True				
ANR	6759854	RelationalExpression	idx < xDiv * yDiv		6759139	0		<			
ANR	6759855	Identifier	idx		6759139	0					
ANR	6759856	MultiplicativeExpression	xDiv * yDiv		6759139	1		*			
ANR	6759857	Identifier	xDiv		6759139	0					
ANR	6759858	Identifier	yDiv		6759139	1					
ANR	6759859	AssignmentExpression	idx += 1	1926:39:64062:64069	6759139	2	True	+=			
ANR	6759860	Identifier	idx		6759139	0					
ANR	6759861	PrimaryExpression	1		6759139	1					
ANR	6759862	CompoundStatement		92:12:3551:3587	6759139	3					
ANR	6759863	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1927:12:64086:64122	6759139	0	True				
ANR	6759864	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	0					
ANR	6759865	IdentifierDeclType	int		6759139	0					
ANR	6759866	Identifier	dix		6759139	1					
ANR	6759867	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	2		=			
ANR	6759868	Identifier	dix		6759139	0					
ANR	6759869	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		6759139	1		+			
ANR	6759870	MultiplicativeExpression	( idx / xDiv ) * dy		6759139	0		*			
ANR	6759871	MultiplicativeExpression	idx / xDiv		6759139	0		/			
ANR	6759872	Identifier	idx		6759139	0					
ANR	6759873	Identifier	xDiv		6759139	1					
ANR	6759874	Identifier	dy		6759139	1					
ANR	6759875	MultiplicativeExpression	idx % xDiv		6759139	1		%			
ANR	6759876	Identifier	idx		6759139	0					
ANR	6759877	Identifier	xDiv		6759139	1					
ANR	6759878	ExpressionStatement	dp [ dix ] = dataU [ idx ]	1928:12:64148:64168	6759139	1	True				
ANR	6759879	AssignmentExpression	dp [ dix ] = dataU [ idx ]		6759139	0		=			
ANR	6759880	ArrayIndexing	dp [ dix ]		6759139	0					
ANR	6759881	Identifier	dp		6759139	0					
ANR	6759882	Identifier	dix		6759139	1					
ANR	6759883	ArrayIndexing	dataU [ idx ]		6759139	1					
ANR	6759884	Identifier	dataU		6759139	0					
ANR	6759885	Identifier	idx		6759139	1					
ANR	6759886	ExpressionStatement	dp = ( uint8_t * ) conV -> buf + xDiv * mx	1931:8:64204:64238	6759139	8	True				
ANR	6759887	AssignmentExpression	dp = ( uint8_t * ) conV -> buf + xDiv * mx		6759139	0		=			
ANR	6759888	Identifier	dp		6759139	0					
ANR	6759889	AdditiveExpression	( uint8_t * ) conV -> buf + xDiv * mx		6759139	1		+			
ANR	6759890	CastExpression	( uint8_t * ) conV -> buf		6759139	0					
ANR	6759891	CastTarget	uint8_t *		6759139	0					
ANR	6759892	PtrMemberAccess	conV -> buf		6759139	1					
ANR	6759893	Identifier	conV		6759139	0					
ANR	6759894	Identifier	buf		6759139	1					
ANR	6759895	MultiplicativeExpression	xDiv * mx		6759139	1		*			
ANR	6759896	Identifier	xDiv		6759139	0					
ANR	6759897	Identifier	mx		6759139	1					
ANR	6759898	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		6759139	9					
ANR	6759899	ForInit	idx = 0 ;	1932:13:64253:64260	6759139	0	True				
ANR	6759900	AssignmentExpression	idx = 0		6759139	0		=			
ANR	6759901	Identifier	idx		6759139	0					
ANR	6759902	PrimaryExpression	0		6759139	1					
ANR	6759903	Condition	idx < xDiv * yDiv	1932:22:64262:64276	6759139	1	True				
ANR	6759904	RelationalExpression	idx < xDiv * yDiv		6759139	0		<			
ANR	6759905	Identifier	idx		6759139	0					
ANR	6759906	MultiplicativeExpression	xDiv * yDiv		6759139	1		*			
ANR	6759907	Identifier	xDiv		6759139	0					
ANR	6759908	Identifier	yDiv		6759139	1					
ANR	6759909	AssignmentExpression	idx += 1	1932:39:64279:64286	6759139	2	True	+=			
ANR	6759910	Identifier	idx		6759139	0					
ANR	6759911	PrimaryExpression	1		6759139	1					
ANR	6759912	CompoundStatement		98:12:3768:3804	6759139	3					
ANR	6759913	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1933:12:64303:64339	6759139	0	True				
ANR	6759914	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	0					
ANR	6759915	IdentifierDeclType	int		6759139	0					
ANR	6759916	Identifier	dix		6759139	1					
ANR	6759917	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	2		=			
ANR	6759918	Identifier	dix		6759139	0					
ANR	6759919	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		6759139	1		+			
ANR	6759920	MultiplicativeExpression	( idx / xDiv ) * dy		6759139	0		*			
ANR	6759921	MultiplicativeExpression	idx / xDiv		6759139	0		/			
ANR	6759922	Identifier	idx		6759139	0					
ANR	6759923	Identifier	xDiv		6759139	1					
ANR	6759924	Identifier	dy		6759139	1					
ANR	6759925	MultiplicativeExpression	idx % xDiv		6759139	1		%			
ANR	6759926	Identifier	idx		6759139	0					
ANR	6759927	Identifier	xDiv		6759139	1					
ANR	6759928	ExpressionStatement	dp [ dix ] = dataV [ idx ]	1934:12:64365:64385	6759139	1	True				
ANR	6759929	AssignmentExpression	dp [ dix ] = dataV [ idx ]		6759139	0		=			
ANR	6759930	ArrayIndexing	dp [ dix ]		6759139	0					
ANR	6759931	Identifier	dp		6759139	0					
ANR	6759932	Identifier	dix		6759139	1					
ANR	6759933	ArrayIndexing	dataV [ idx ]		6759139	1					
ANR	6759934	Identifier	dataV		6759139	0					
ANR	6759935	Identifier	idx		6759139	1					
ANR	6759936	IfStatement	if ( con -> alpha )		6759139	10					
ANR	6759937	Condition	con -> alpha	1937:11:64409:64418	6759139	0	True				
ANR	6759938	PtrMemberAccess	con -> alpha		6759139	0					
ANR	6759939	Identifier	con		6759139	0					
ANR	6759940	Identifier	alpha		6759139	1					
ANR	6759941	CompoundStatement		103:8:3894:3894	6759139	1					
ANR	6759942	ExpressionStatement	xDiv = yDiv = 16	1939:12:64443:64459	6759139	0	True				
ANR	6759943	AssignmentExpression	xDiv = yDiv = 16		6759139	0		=			
ANR	6759944	Identifier	xDiv		6759139	0					
ANR	6759945	AssignmentExpression	yDiv = 16		6759139	1		=			
ANR	6759946	Identifier	yDiv		6759139	0					
ANR	6759947	PrimaryExpression	16		6759139	1					
ANR	6759948	ExpressionStatement	dy = 16 * strip_blocks	1940:12:64473:64493	6759139	1	True				
ANR	6759949	AssignmentExpression	dy = 16 * strip_blocks		6759139	0		=			
ANR	6759950	Identifier	dy		6759139	0					
ANR	6759951	MultiplicativeExpression	16 * strip_blocks		6759139	1		*			
ANR	6759952	PrimaryExpression	16		6759139	0					
ANR	6759953	Identifier	strip_blocks		6759139	1					
ANR	6759954	ExpressionStatement	dp = ( uint8_t * ) conA -> buf + xDiv * mx	1941:12:64507:64541	6759139	2	True				
ANR	6759955	AssignmentExpression	dp = ( uint8_t * ) conA -> buf + xDiv * mx		6759139	0		=			
ANR	6759956	Identifier	dp		6759139	0					
ANR	6759957	AdditiveExpression	( uint8_t * ) conA -> buf + xDiv * mx		6759139	1		+			
ANR	6759958	CastExpression	( uint8_t * ) conA -> buf		6759139	0					
ANR	6759959	CastTarget	uint8_t *		6759139	0					
ANR	6759960	PtrMemberAccess	conA -> buf		6759139	1					
ANR	6759961	Identifier	conA		6759139	0					
ANR	6759962	Identifier	buf		6759139	1					
ANR	6759963	MultiplicativeExpression	xDiv * mx		6759139	1		*			
ANR	6759964	Identifier	xDiv		6759139	0					
ANR	6759965	Identifier	mx		6759139	1					
ANR	6759966	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		6759139	3					
ANR	6759967	ForInit	idx = 0 ;	1942:17:64560:64567	6759139	0	True				
ANR	6759968	AssignmentExpression	idx = 0		6759139	0		=			
ANR	6759969	Identifier	idx		6759139	0					
ANR	6759970	PrimaryExpression	0		6759139	1					
ANR	6759971	Condition	idx < xDiv * yDiv	1942:26:64569:64583	6759139	1	True				
ANR	6759972	RelationalExpression	idx < xDiv * yDiv		6759139	0		<			
ANR	6759973	Identifier	idx		6759139	0					
ANR	6759974	MultiplicativeExpression	xDiv * yDiv		6759139	1		*			
ANR	6759975	Identifier	xDiv		6759139	0					
ANR	6759976	Identifier	yDiv		6759139	1					
ANR	6759977	AssignmentExpression	idx += 1	1942:43:64586:64593	6759139	2	True	+=			
ANR	6759978	Identifier	idx		6759139	0					
ANR	6759979	PrimaryExpression	1		6759139	1					
ANR	6759980	CompoundStatement		108:16:4079:4115	6759139	3					
ANR	6759981	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1943:16:64614:64650	6759139	0	True				
ANR	6759982	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	0					
ANR	6759983	IdentifierDeclType	int		6759139	0					
ANR	6759984	Identifier	dix		6759139	1					
ANR	6759985	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	2		=			
ANR	6759986	Identifier	dix		6759139	0					
ANR	6759987	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		6759139	1		+			
ANR	6759988	MultiplicativeExpression	( idx / xDiv ) * dy		6759139	0		*			
ANR	6759989	MultiplicativeExpression	idx / xDiv		6759139	0		/			
ANR	6759990	Identifier	idx		6759139	0					
ANR	6759991	Identifier	xDiv		6759139	1					
ANR	6759992	Identifier	dy		6759139	1					
ANR	6759993	MultiplicativeExpression	idx % xDiv		6759139	1		%			
ANR	6759994	Identifier	idx		6759139	0					
ANR	6759995	Identifier	xDiv		6759139	1					
ANR	6759996	ExpressionStatement	dp [ dix ] = dataA [ idx ]	1944:16:64680:64700	6759139	1	True				
ANR	6759997	AssignmentExpression	dp [ dix ] = dataA [ idx ]		6759139	0		=			
ANR	6759998	ArrayIndexing	dp [ dix ]		6759139	0					
ANR	6759999	Identifier	dp		6759139	0					
ANR	6760000	Identifier	dix		6759139	1					
ANR	6760001	ArrayIndexing	dataA [ idx ]		6759139	1					
ANR	6760002	Identifier	dataA		6759139	0					
ANR	6760003	Identifier	idx		6759139	1					
ANR	6760004	ElseStatement	else		6759139	0					
ANR	6760005	IfStatement	if ( con -> bpi == 16 || con -> bpi == 10 )		6759139	0					
ANR	6760006	Condition	con -> bpi == 16 || con -> bpi == 10	1949:12:64753:64784	6759139	0	True				
ANR	6760007	OrExpression	con -> bpi == 16 || con -> bpi == 10		6759139	0		||			
ANR	6760008	EqualityExpression	con -> bpi == 16		6759139	0		==			
ANR	6760009	PtrMemberAccess	con -> bpi		6759139	0					
ANR	6760010	Identifier	con		6759139	0					
ANR	6760011	Identifier	bpi		6759139	1					
ANR	6760012	PrimaryExpression	16		6759139	1					
ANR	6760013	EqualityExpression	con -> bpi == 10		6759139	1		==			
ANR	6760014	PtrMemberAccess	con -> bpi		6759139	0					
ANR	6760015	Identifier	con		6759139	0					
ANR	6760016	Identifier	bpi		6759139	1					
ANR	6760017	PrimaryExpression	10		6759139	1					
ANR	6760018	CompoundStatement		119:8:4325:4370	6759139	1					
ANR	6760019	IdentifierDeclStatement	int xDiv = 16 ;	1951:8:64798:64811	6759139	0	True				
ANR	6760020	IdentifierDecl	xDiv = 16		6759139	0					
ANR	6760021	IdentifierDeclType	int		6759139	0					
ANR	6760022	Identifier	xDiv		6759139	1					
ANR	6760023	AssignmentExpression	xDiv = 16		6759139	2		=			
ANR	6760024	Identifier	xDiv		6759139	0					
ANR	6760025	PrimaryExpression	16		6759139	1					
ANR	6760026	IdentifierDeclStatement	int yDiv = 16 ;	1952:8:64821:64834	6759139	1	True				
ANR	6760027	IdentifierDecl	yDiv = 16		6759139	0					
ANR	6760028	IdentifierDeclType	int		6759139	0					
ANR	6760029	Identifier	yDiv		6759139	1					
ANR	6760030	AssignmentExpression	yDiv = 16		6759139	2		=			
ANR	6760031	Identifier	yDiv		6759139	0					
ANR	6760032	PrimaryExpression	16		6759139	1					
ANR	6760033	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conY -> buf + xDiv * mx ;	1954:8:64860:64905	6759139	2	True				
ANR	6760034	IdentifierDecl	* dp = ( uint16_t * ) conY -> buf + xDiv * mx		6759139	0					
ANR	6760035	IdentifierDeclType	uint16_t *		6759139	0					
ANR	6760036	Identifier	dp		6759139	1					
ANR	6760037	AssignmentExpression	* dp = ( uint16_t * ) conY -> buf + xDiv * mx		6759139	2		=			
ANR	6760038	Identifier	dp		6759139	0					
ANR	6760039	AdditiveExpression	( uint16_t * ) conY -> buf + xDiv * mx		6759139	1		+			
ANR	6760040	CastExpression	( uint16_t * ) conY -> buf		6759139	0					
ANR	6760041	CastTarget	uint16_t *		6759139	0					
ANR	6760042	PtrMemberAccess	conY -> buf		6759139	1					
ANR	6760043	Identifier	conY		6759139	0					
ANR	6760044	Identifier	buf		6759139	1					
ANR	6760045	MultiplicativeExpression	xDiv * mx		6759139	1		*			
ANR	6760046	Identifier	xDiv		6759139	0					
ANR	6760047	Identifier	mx		6759139	1					
ANR	6760048	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		6759139	3					
ANR	6760049	ForInit	idx = 0 ;	1955:13:64920:64927	6759139	0	True				
ANR	6760050	AssignmentExpression	idx = 0		6759139	0		=			
ANR	6760051	Identifier	idx		6759139	0					
ANR	6760052	PrimaryExpression	0		6759139	1					
ANR	6760053	Condition	idx < xDiv * yDiv	1955:22:64929:64943	6759139	1	True				
ANR	6760054	RelationalExpression	idx < xDiv * yDiv		6759139	0		<			
ANR	6760055	Identifier	idx		6759139	0					
ANR	6760056	MultiplicativeExpression	xDiv * yDiv		6759139	1		*			
ANR	6760057	Identifier	xDiv		6759139	0					
ANR	6760058	Identifier	yDiv		6759139	1					
ANR	6760059	AssignmentExpression	idx += 1	1955:39:64946:64953	6759139	2	True	+=			
ANR	6760060	Identifier	idx		6759139	0					
ANR	6760061	PrimaryExpression	1		6759139	1					
ANR	6760062	CompoundStatement		121:12:4435:4471	6759139	3					
ANR	6760063	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1956:12:64970:65006	6759139	0	True				
ANR	6760064	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	0					
ANR	6760065	IdentifierDeclType	int		6759139	0					
ANR	6760066	Identifier	dix		6759139	1					
ANR	6760067	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	2		=			
ANR	6760068	Identifier	dix		6759139	0					
ANR	6760069	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		6759139	1		+			
ANR	6760070	MultiplicativeExpression	( idx / xDiv ) * dy		6759139	0		*			
ANR	6760071	MultiplicativeExpression	idx / xDiv		6759139	0		/			
ANR	6760072	Identifier	idx		6759139	0					
ANR	6760073	Identifier	xDiv		6759139	1					
ANR	6760074	Identifier	dy		6759139	1					
ANR	6760075	MultiplicativeExpression	idx % xDiv		6759139	1		%			
ANR	6760076	Identifier	idx		6759139	0					
ANR	6760077	Identifier	xDiv		6759139	1					
ANR	6760078	ExpressionStatement	dp [ dix ] = dataY [ idx ]	1957:12:65032:65052	6759139	1	True				
ANR	6760079	AssignmentExpression	dp [ dix ] = dataY [ idx ]		6759139	0		=			
ANR	6760080	ArrayIndexing	dp [ dix ]		6759139	0					
ANR	6760081	Identifier	dp		6759139	0					
ANR	6760082	Identifier	dix		6759139	1					
ANR	6760083	ArrayIndexing	dataY [ idx ]		6759139	1					
ANR	6760084	Identifier	dataY		6759139	0					
ANR	6760085	Identifier	idx		6759139	1					
ANR	6760086	IfStatement	if ( isOutputYUV422 ( image ) )		6759139	4					
ANR	6760087	Condition	isOutputYUV422 ( image )	1960:11:65076:65096	6759139	0	True				
ANR	6760088	CallExpression	isOutputYUV422 ( image )		6759139	0					
ANR	6760089	Callee	isOutputYUV422		6759139	0					
ANR	6760090	Identifier	isOutputYUV422		6759139	0					
ANR	6760091	ArgumentList	image		6759139	1					
ANR	6760092	Argument	image		6759139	0					
ANR	6760093	Identifier	image		6759139	0					
ANR	6760094	CompoundStatement		126:8:4572:4572	6759139	1					
ANR	6760095	ExpressionStatement	dy = 8 * strip_blocks	1962:12:65121:65140	6759139	0	True				
ANR	6760096	AssignmentExpression	dy = 8 * strip_blocks		6759139	0		=			
ANR	6760097	Identifier	dy		6759139	0					
ANR	6760098	MultiplicativeExpression	8 * strip_blocks		6759139	1		*			
ANR	6760099	PrimaryExpression	8		6759139	0					
ANR	6760100	Identifier	strip_blocks		6759139	1					
ANR	6760101	ExpressionStatement	xDiv = 8	1963:12:65154:65162	6759139	1	True				
ANR	6760102	AssignmentExpression	xDiv = 8		6759139	0		=			
ANR	6760103	Identifier	xDiv		6759139	0					
ANR	6760104	PrimaryExpression	8		6759139	1					
ANR	6760105	IfStatement	if ( isOutputYUV420 ( image ) )		6759139	5					
ANR	6760106	Condition	isOutputYUV420 ( image )	1966:11:65194:65214	6759139	0	True				
ANR	6760107	CallExpression	isOutputYUV420 ( image )		6759139	0					
ANR	6760108	Callee	isOutputYUV420		6759139	0					
ANR	6760109	Identifier	isOutputYUV420		6759139	0					
ANR	6760110	ArgumentList	image		6759139	1					
ANR	6760111	Argument	image		6759139	0					
ANR	6760112	Identifier	image		6759139	0					
ANR	6760113	CompoundStatement		132:8:4690:4690	6759139	1					
ANR	6760114	ExpressionStatement	"assert ( ! ""There is no 420 pixel format with bitdepth 16\\n"" )"	1968:12:65239:65297	6759139	0	True				
ANR	6760115	CallExpression	"assert ( ! ""There is no 420 pixel format with bitdepth 16\\n"" )"		6759139	0					
ANR	6760116	Callee	assert		6759139	0					
ANR	6760117	Identifier	assert		6759139	0					
ANR	6760118	ArgumentList	"! ""There is no 420 pixel format with bitdepth 16\\n"""		6759139	1					
ANR	6760119	Argument	"! ""There is no 420 pixel format with bitdepth 16\\n"""		6759139	0					
ANR	6760120	UnaryOperationExpression	"! ""There is no 420 pixel format with bitdepth 16\\n"""		6759139	0					
ANR	6760121	UnaryOperator	!		6759139	0					
ANR	6760122	PrimaryExpression	"""There is no 420 pixel format with bitdepth 16\\n"""		6759139	1					
ANR	6760123	ExpressionStatement	dy = 8 * strip_blocks	1969:12:65311:65330	6759139	1	True				
ANR	6760124	AssignmentExpression	dy = 8 * strip_blocks		6759139	0		=			
ANR	6760125	Identifier	dy		6759139	0					
ANR	6760126	MultiplicativeExpression	8 * strip_blocks		6759139	1		*			
ANR	6760127	PrimaryExpression	8		6759139	0					
ANR	6760128	Identifier	strip_blocks		6759139	1					
ANR	6760129	ExpressionStatement	xDiv = yDiv = 8	1970:12:65344:65359	6759139	2	True				
ANR	6760130	AssignmentExpression	xDiv = yDiv = 8		6759139	0		=			
ANR	6760131	Identifier	xDiv		6759139	0					
ANR	6760132	AssignmentExpression	yDiv = 8		6759139	1		=			
ANR	6760133	Identifier	yDiv		6759139	0					
ANR	6760134	PrimaryExpression	8		6759139	1					
ANR	6760135	ExpressionStatement	dp = ( uint16_t * ) conU -> buf + xDiv * mx	1974:8:65404:65439	6759139	6	True				
ANR	6760136	AssignmentExpression	dp = ( uint16_t * ) conU -> buf + xDiv * mx		6759139	0		=			
ANR	6760137	Identifier	dp		6759139	0					
ANR	6760138	AdditiveExpression	( uint16_t * ) conU -> buf + xDiv * mx		6759139	1		+			
ANR	6760139	CastExpression	( uint16_t * ) conU -> buf		6759139	0					
ANR	6760140	CastTarget	uint16_t *		6759139	0					
ANR	6760141	PtrMemberAccess	conU -> buf		6759139	1					
ANR	6760142	Identifier	conU		6759139	0					
ANR	6760143	Identifier	buf		6759139	1					
ANR	6760144	MultiplicativeExpression	xDiv * mx		6759139	1		*			
ANR	6760145	Identifier	xDiv		6759139	0					
ANR	6760146	Identifier	mx		6759139	1					
ANR	6760147	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		6759139	7					
ANR	6760148	ForInit	idx = 0 ;	1975:13:65454:65461	6759139	0	True				
ANR	6760149	AssignmentExpression	idx = 0		6759139	0		=			
ANR	6760150	Identifier	idx		6759139	0					
ANR	6760151	PrimaryExpression	0		6759139	1					
ANR	6760152	Condition	idx < xDiv * yDiv	1975:22:65463:65477	6759139	1	True				
ANR	6760153	RelationalExpression	idx < xDiv * yDiv		6759139	0		<			
ANR	6760154	Identifier	idx		6759139	0					
ANR	6760155	MultiplicativeExpression	xDiv * yDiv		6759139	1		*			
ANR	6760156	Identifier	xDiv		6759139	0					
ANR	6760157	Identifier	yDiv		6759139	1					
ANR	6760158	AssignmentExpression	idx += 1	1975:39:65480:65487	6759139	2	True	+=			
ANR	6760159	Identifier	idx		6759139	0					
ANR	6760160	PrimaryExpression	1		6759139	1					
ANR	6760161	CompoundStatement		141:12:4969:5005	6759139	3					
ANR	6760162	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1976:12:65504:65540	6759139	0	True				
ANR	6760163	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	0					
ANR	6760164	IdentifierDeclType	int		6759139	0					
ANR	6760165	Identifier	dix		6759139	1					
ANR	6760166	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	2		=			
ANR	6760167	Identifier	dix		6759139	0					
ANR	6760168	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		6759139	1		+			
ANR	6760169	MultiplicativeExpression	( idx / xDiv ) * dy		6759139	0		*			
ANR	6760170	MultiplicativeExpression	idx / xDiv		6759139	0		/			
ANR	6760171	Identifier	idx		6759139	0					
ANR	6760172	Identifier	xDiv		6759139	1					
ANR	6760173	Identifier	dy		6759139	1					
ANR	6760174	MultiplicativeExpression	idx % xDiv		6759139	1		%			
ANR	6760175	Identifier	idx		6759139	0					
ANR	6760176	Identifier	xDiv		6759139	1					
ANR	6760177	ExpressionStatement	dp [ dix ] = dataU [ idx ]	1977:12:65566:65586	6759139	1	True				
ANR	6760178	AssignmentExpression	dp [ dix ] = dataU [ idx ]		6759139	0		=			
ANR	6760179	ArrayIndexing	dp [ dix ]		6759139	0					
ANR	6760180	Identifier	dp		6759139	0					
ANR	6760181	Identifier	dix		6759139	1					
ANR	6760182	ArrayIndexing	dataU [ idx ]		6759139	1					
ANR	6760183	Identifier	dataU		6759139	0					
ANR	6760184	Identifier	idx		6759139	1					
ANR	6760185	ExpressionStatement	dp = ( uint16_t * ) conV -> buf + xDiv * mx	1980:8:65622:65657	6759139	8	True				
ANR	6760186	AssignmentExpression	dp = ( uint16_t * ) conV -> buf + xDiv * mx		6759139	0		=			
ANR	6760187	Identifier	dp		6759139	0					
ANR	6760188	AdditiveExpression	( uint16_t * ) conV -> buf + xDiv * mx		6759139	1		+			
ANR	6760189	CastExpression	( uint16_t * ) conV -> buf		6759139	0					
ANR	6760190	CastTarget	uint16_t *		6759139	0					
ANR	6760191	PtrMemberAccess	conV -> buf		6759139	1					
ANR	6760192	Identifier	conV		6759139	0					
ANR	6760193	Identifier	buf		6759139	1					
ANR	6760194	MultiplicativeExpression	xDiv * mx		6759139	1		*			
ANR	6760195	Identifier	xDiv		6759139	0					
ANR	6760196	Identifier	mx		6759139	1					
ANR	6760197	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		6759139	9					
ANR	6760198	ForInit	idx = 0 ;	1981:13:65672:65679	6759139	0	True				
ANR	6760199	AssignmentExpression	idx = 0		6759139	0		=			
ANR	6760200	Identifier	idx		6759139	0					
ANR	6760201	PrimaryExpression	0		6759139	1					
ANR	6760202	Condition	idx < xDiv * yDiv	1981:22:65681:65695	6759139	1	True				
ANR	6760203	RelationalExpression	idx < xDiv * yDiv		6759139	0		<			
ANR	6760204	Identifier	idx		6759139	0					
ANR	6760205	MultiplicativeExpression	xDiv * yDiv		6759139	1		*			
ANR	6760206	Identifier	xDiv		6759139	0					
ANR	6760207	Identifier	yDiv		6759139	1					
ANR	6760208	AssignmentExpression	idx += 1	1981:39:65698:65705	6759139	2	True	+=			
ANR	6760209	Identifier	idx		6759139	0					
ANR	6760210	PrimaryExpression	1		6759139	1					
ANR	6760211	CompoundStatement		147:12:5187:5223	6759139	3					
ANR	6760212	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1982:12:65722:65758	6759139	0	True				
ANR	6760213	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	0					
ANR	6760214	IdentifierDeclType	int		6759139	0					
ANR	6760215	Identifier	dix		6759139	1					
ANR	6760216	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	2		=			
ANR	6760217	Identifier	dix		6759139	0					
ANR	6760218	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		6759139	1		+			
ANR	6760219	MultiplicativeExpression	( idx / xDiv ) * dy		6759139	0		*			
ANR	6760220	MultiplicativeExpression	idx / xDiv		6759139	0		/			
ANR	6760221	Identifier	idx		6759139	0					
ANR	6760222	Identifier	xDiv		6759139	1					
ANR	6760223	Identifier	dy		6759139	1					
ANR	6760224	MultiplicativeExpression	idx % xDiv		6759139	1		%			
ANR	6760225	Identifier	idx		6759139	0					
ANR	6760226	Identifier	xDiv		6759139	1					
ANR	6760227	ExpressionStatement	dp [ dix ] = dataV [ idx ]	1983:12:65784:65804	6759139	1	True				
ANR	6760228	AssignmentExpression	dp [ dix ] = dataV [ idx ]		6759139	0		=			
ANR	6760229	ArrayIndexing	dp [ dix ]		6759139	0					
ANR	6760230	Identifier	dp		6759139	0					
ANR	6760231	Identifier	dix		6759139	1					
ANR	6760232	ArrayIndexing	dataV [ idx ]		6759139	1					
ANR	6760233	Identifier	dataV		6759139	0					
ANR	6760234	Identifier	idx		6759139	1					
ANR	6760235	IfStatement	if ( con -> alpha )		6759139	10					
ANR	6760236	Condition	con -> alpha	1986:11:65828:65837	6759139	0	True				
ANR	6760237	PtrMemberAccess	con -> alpha		6759139	0					
ANR	6760238	Identifier	con		6759139	0					
ANR	6760239	Identifier	alpha		6759139	1					
ANR	6760240	CompoundStatement		152:8:5313:5313	6759139	1					
ANR	6760241	ExpressionStatement	xDiv = yDiv = 16	1988:12:65862:65878	6759139	0	True				
ANR	6760242	AssignmentExpression	xDiv = yDiv = 16		6759139	0		=			
ANR	6760243	Identifier	xDiv		6759139	0					
ANR	6760244	AssignmentExpression	yDiv = 16		6759139	1		=			
ANR	6760245	Identifier	yDiv		6759139	0					
ANR	6760246	PrimaryExpression	16		6759139	1					
ANR	6760247	ExpressionStatement	dy = 16 * strip_blocks	1989:12:65892:65912	6759139	1	True				
ANR	6760248	AssignmentExpression	dy = 16 * strip_blocks		6759139	0		=			
ANR	6760249	Identifier	dy		6759139	0					
ANR	6760250	MultiplicativeExpression	16 * strip_blocks		6759139	1		*			
ANR	6760251	PrimaryExpression	16		6759139	0					
ANR	6760252	Identifier	strip_blocks		6759139	1					
ANR	6760253	ExpressionStatement	dp = ( uint16_t * ) conA -> buf + xDiv * mx	1990:12:65926:65961	6759139	2	True				
ANR	6760254	AssignmentExpression	dp = ( uint16_t * ) conA -> buf + xDiv * mx		6759139	0		=			
ANR	6760255	Identifier	dp		6759139	0					
ANR	6760256	AdditiveExpression	( uint16_t * ) conA -> buf + xDiv * mx		6759139	1		+			
ANR	6760257	CastExpression	( uint16_t * ) conA -> buf		6759139	0					
ANR	6760258	CastTarget	uint16_t *		6759139	0					
ANR	6760259	PtrMemberAccess	conA -> buf		6759139	1					
ANR	6760260	Identifier	conA		6759139	0					
ANR	6760261	Identifier	buf		6759139	1					
ANR	6760262	MultiplicativeExpression	xDiv * mx		6759139	1		*			
ANR	6760263	Identifier	xDiv		6759139	0					
ANR	6760264	Identifier	mx		6759139	1					
ANR	6760265	ForStatement	for ( idx = 0 ; idx < xDiv * yDiv ; idx += 1 )		6759139	3					
ANR	6760266	ForInit	idx = 0 ;	1991:17:65980:65987	6759139	0	True				
ANR	6760267	AssignmentExpression	idx = 0		6759139	0		=			
ANR	6760268	Identifier	idx		6759139	0					
ANR	6760269	PrimaryExpression	0		6759139	1					
ANR	6760270	Condition	idx < xDiv * yDiv	1991:26:65989:66003	6759139	1	True				
ANR	6760271	RelationalExpression	idx < xDiv * yDiv		6759139	0		<			
ANR	6760272	Identifier	idx		6759139	0					
ANR	6760273	MultiplicativeExpression	xDiv * yDiv		6759139	1		*			
ANR	6760274	Identifier	xDiv		6759139	0					
ANR	6760275	Identifier	yDiv		6759139	1					
ANR	6760276	AssignmentExpression	idx += 1	1991:43:66006:66013	6759139	2	True	+=			
ANR	6760277	Identifier	idx		6759139	0					
ANR	6760278	PrimaryExpression	1		6759139	1					
ANR	6760279	CompoundStatement		157:16:5499:5535	6759139	3					
ANR	6760280	IdentifierDeclStatement	int dix = ( idx / xDiv ) * dy + ( idx % xDiv ) ;	1992:16:66034:66070	6759139	0	True				
ANR	6760281	IdentifierDecl	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	0					
ANR	6760282	IdentifierDeclType	int		6759139	0					
ANR	6760283	Identifier	dix		6759139	1					
ANR	6760284	AssignmentExpression	dix = ( idx / xDiv ) * dy + ( idx % xDiv )		6759139	2		=			
ANR	6760285	Identifier	dix		6759139	0					
ANR	6760286	AdditiveExpression	( idx / xDiv ) * dy + ( idx % xDiv )		6759139	1		+			
ANR	6760287	MultiplicativeExpression	( idx / xDiv ) * dy		6759139	0		*			
ANR	6760288	MultiplicativeExpression	idx / xDiv		6759139	0		/			
ANR	6760289	Identifier	idx		6759139	0					
ANR	6760290	Identifier	xDiv		6759139	1					
ANR	6760291	Identifier	dy		6759139	1					
ANR	6760292	MultiplicativeExpression	idx % xDiv		6759139	1		%			
ANR	6760293	Identifier	idx		6759139	0					
ANR	6760294	Identifier	xDiv		6759139	1					
ANR	6760295	ExpressionStatement	dp [ dix ] = dataA [ idx ]	1993:16:66100:66120	6759139	1	True				
ANR	6760296	AssignmentExpression	dp [ dix ] = dataA [ idx ]		6759139	0		=			
ANR	6760297	ArrayIndexing	dp [ dix ]		6759139	0					
ANR	6760298	Identifier	dp		6759139	0					
ANR	6760299	Identifier	dix		6759139	1					
ANR	6760300	ArrayIndexing	dataA [ idx ]		6759139	1					
ANR	6760301	Identifier	dataA		6759139	0					
ANR	6760302	Identifier	idx		6759139	1					
ANR	6760303	ElseStatement	else		6759139	0					
ANR	6760304	CompoundStatement		164:4:5639:5639	6759139	0					
ANR	6760305	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2000:8:66184:66217	6759139	0	True				
ANR	6760306	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		6759139	0					
ANR	6760307	Callee	assert		6759139	0					
ANR	6760308	Identifier	assert		6759139	0					
ANR	6760309	ArgumentList	"! ""Unsupported bitdepth\\n"""		6759139	1					
ANR	6760310	Argument	"! ""Unsupported bitdepth\\n"""		6759139	0					
ANR	6760311	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		6759139	0					
ANR	6760312	UnaryOperator	!		6759139	0					
ANR	6760313	PrimaryExpression	"""Unsupported bitdepth\\n"""		6759139	1					
ANR	6760314	IfStatement	if ( mx + 1 == strip_blocks )		6759139	18					
ANR	6760315	Condition	mx + 1 == strip_blocks	2003:8:66234:66253	6759139	0	True				
ANR	6760316	EqualityExpression	mx + 1 == strip_blocks		6759139	0		==			
ANR	6760317	AdditiveExpression	mx + 1		6759139	0		+			
ANR	6760318	Identifier	mx		6759139	0					
ANR	6760319	PrimaryExpression	1		6759139	1					
ANR	6760320	Identifier	strip_blocks		6759139	1					
ANR	6760321	CompoundStatement		173:8:5800:5812	6759139	1					
ANR	6760322	IdentifierDeclStatement	int xDiv = 16 ;	2005:8:66267:66280	6759139	0	True				
ANR	6760323	IdentifierDecl	xDiv = 16		6759139	0					
ANR	6760324	IdentifierDeclType	int		6759139	0					
ANR	6760325	Identifier	xDiv		6759139	1					
ANR	6760326	AssignmentExpression	xDiv = 16		6759139	2		=			
ANR	6760327	Identifier	xDiv		6759139	0					
ANR	6760328	PrimaryExpression	16		6759139	1					
ANR	6760329	IdentifierDeclStatement	int yDiv = 16 ;	2006:8:66290:66303	6759139	1	True				
ANR	6760330	IdentifierDecl	yDiv = 16		6759139	0					
ANR	6760331	IdentifierDeclType	int		6759139	0					
ANR	6760332	Identifier	yDiv		6759139	1					
ANR	6760333	AssignmentExpression	yDiv = 16		6759139	2		=			
ANR	6760334	Identifier	yDiv		6759139	0					
ANR	6760335	PrimaryExpression	16		6759139	1					
ANR	6760336	IdentifierDeclStatement	int subX = 1 ;	2007:8:66313:66325	6759139	2	True				
ANR	6760337	IdentifierDecl	subX = 1		6759139	0					
ANR	6760338	IdentifierDeclType	int		6759139	0					
ANR	6760339	Identifier	subX		6759139	1					
ANR	6760340	AssignmentExpression	subX = 1		6759139	2		=			
ANR	6760341	Identifier	subX		6759139	0					
ANR	6760342	PrimaryExpression	1		6759139	1					
ANR	6760343	IdentifierDeclStatement	int subY = 1 ;	2008:8:66335:66347	6759139	3	True				
ANR	6760344	IdentifierDecl	subY = 1		6759139	0					
ANR	6760345	IdentifierDeclType	int		6759139	0					
ANR	6760346	Identifier	subY		6759139	1					
ANR	6760347	AssignmentExpression	subY = 1		6759139	2		=			
ANR	6760348	Identifier	subY		6759139	0					
ANR	6760349	PrimaryExpression	1		6759139	1					
ANR	6760350	IfStatement	if ( con -> bpi == 8 )		6759139	4					
ANR	6760351	Condition	con -> bpi == 8	2010:11:66369:66381	6759139	0	True				
ANR	6760352	EqualityExpression	con -> bpi == 8		6759139	0		==			
ANR	6760353	PtrMemberAccess	con -> bpi		6759139	0					
ANR	6760354	Identifier	con		6759139	0					
ANR	6760355	Identifier	bpi		6759139	1					
ANR	6760356	PrimaryExpression	8		6759139	1					
ANR	6760357	CompoundStatement		180:12:6028:6124	6759139	1					
ANR	6760358	IdentifierDeclStatement	int left_pad_shift = con -> left_pad ;	2013:12:66426:66460	6759139	0	True				
ANR	6760359	IdentifierDecl	left_pad_shift = con -> left_pad		6759139	0					
ANR	6760360	IdentifierDeclType	int		6759139	0					
ANR	6760361	Identifier	left_pad_shift		6759139	1					
ANR	6760362	AssignmentExpression	left_pad_shift = con -> left_pad		6759139	2		=			
ANR	6760363	Identifier	left_pad_shift		6759139	0					
ANR	6760364	PtrMemberAccess	con -> left_pad		6759139	1					
ANR	6760365	Identifier	con		6759139	0					
ANR	6760366	Identifier	left_pad		6759139	1					
ANR	6760367	IdentifierDeclStatement	int first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining ;	2014:12:66474:66549	6759139	1	True				
ANR	6760368	IdentifierDecl	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		6759139	0					
ANR	6760369	IdentifierDeclType	int		6759139	0					
ANR	6760370	Identifier	first		6759139	1					
ANR	6760371	AssignmentExpression	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		6759139	2		=			
ANR	6760372	Identifier	first		6759139	0					
ANR	6760373	ConditionalExpression	( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		6759139	1					
ANR	6760374	Condition	con -> top_pad_remaining > yDiv		6759139	0					
ANR	6760375	RelationalExpression	con -> top_pad_remaining > yDiv		6759139	0		>			
ANR	6760376	PtrMemberAccess	con -> top_pad_remaining		6759139	0					
ANR	6760377	Identifier	con		6759139	0					
ANR	6760378	Identifier	top_pad_remaining		6759139	1					
ANR	6760379	Identifier	yDiv		6759139	1					
ANR	6760380	Identifier	yDiv		6759139	1					
ANR	6760381	PtrMemberAccess	con -> top_pad_remaining		6759139	2					
ANR	6760382	Identifier	con		6759139	0					
ANR	6760383	Identifier	top_pad_remaining		6759139	1					
ANR	6760384	IdentifierDeclStatement	int trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv ;	2015:12:66563:66659	6759139	2	True				
ANR	6760385	IdentifierDecl	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		6759139	0					
ANR	6760386	IdentifierDeclType	int		6759139	0					
ANR	6760387	Identifier	trans		6759139	1					
ANR	6760388	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		6759139	2		=			
ANR	6760389	Identifier	trans		6759139	0					
ANR	6760390	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		6759139	1					
ANR	6760391	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0					
ANR	6760392	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0		>			
ANR	6760393	AdditiveExpression	my * yDiv + yDiv		6759139	0		+			
ANR	6760394	MultiplicativeExpression	my * yDiv		6759139	0		*			
ANR	6760395	Identifier	my		6759139	0					
ANR	6760396	Identifier	yDiv		6759139	1					
ANR	6760397	Identifier	yDiv		6759139	1					
ANR	6760398	AdditiveExpression	con -> hei + con -> top_pad		6759139	1		+			
ANR	6760399	PtrMemberAccess	con -> hei		6759139	0					
ANR	6760400	Identifier	con		6759139	0					
ANR	6760401	Identifier	hei		6759139	1					
ANR	6760402	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6760403	Identifier	con		6759139	0					
ANR	6760404	Identifier	top_pad		6759139	1					
ANR	6760405	MultiplicativeExpression	( con -> hei + con -> top_pad ) % yDiv		6759139	1		%			
ANR	6760406	AdditiveExpression	con -> hei + con -> top_pad		6759139	0		+			
ANR	6760407	PtrMemberAccess	con -> hei		6759139	0					
ANR	6760408	Identifier	con		6759139	0					
ANR	6760409	Identifier	hei		6759139	1					
ANR	6760410	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6760411	Identifier	con		6759139	0					
ANR	6760412	Identifier	top_pad		6759139	1					
ANR	6760413	Identifier	yDiv		6759139	1					
ANR	6760414	Identifier	yDiv		6759139	2					
ANR	6760415	ExpressionStatement	dy = 16 * strip_blocks	2016:12:66678:66698	6759139	3	True				
ANR	6760416	AssignmentExpression	dy = 16 * strip_blocks		6759139	0		=			
ANR	6760417	Identifier	dy		6759139	0					
ANR	6760418	MultiplicativeExpression	16 * strip_blocks		6759139	1		*			
ANR	6760419	PrimaryExpression	16		6759139	0					
ANR	6760420	Identifier	strip_blocks		6759139	1					
ANR	6760421	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6759139	4					
ANR	6760422	ForInit	idx = first ;	2017:17:66717:66728	6759139	0	True				
ANR	6760423	AssignmentExpression	idx = first		6759139	0		=			
ANR	6760424	Identifier	idx		6759139	0					
ANR	6760425	Identifier	first		6759139	1					
ANR	6760426	Condition	idx < trans	2017:30:66730:66740	6759139	1	True				
ANR	6760427	RelationalExpression	idx < trans		6759139	0		<			
ANR	6760428	Identifier	idx		6759139	0					
ANR	6760429	Identifier	trans		6759139	1					
ANR	6760430	AssignmentExpression	idx += 1	2017:43:66743:66750	6759139	2	True	+=			
ANR	6760431	Identifier	idx		6759139	0					
ANR	6760432	PrimaryExpression	1		6759139	1					
ANR	6760433	CompoundStatement		183:16:6236:6294	6759139	3					
ANR	6760434	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conY -> buf + idx * dy + con -> left_pad ;	2018:16:66771:66829	6759139	0	True				
ANR	6760435	IdentifierDecl	* dp = ( uint8_t * ) conY -> buf + idx * dy + con -> left_pad		6759139	0					
ANR	6760436	IdentifierDeclType	uint8_t *		6759139	0					
ANR	6760437	Identifier	dp		6759139	1					
ANR	6760438	AssignmentExpression	* dp = ( uint8_t * ) conY -> buf + idx * dy + con -> left_pad		6759139	2		=			
ANR	6760439	Identifier	dp		6759139	0					
ANR	6760440	AdditiveExpression	( uint8_t * ) conY -> buf + idx * dy + con -> left_pad		6759139	1		+			
ANR	6760441	CastExpression	( uint8_t * ) conY -> buf		6759139	0					
ANR	6760442	CastTarget	uint8_t *		6759139	0					
ANR	6760443	PtrMemberAccess	conY -> buf		6759139	1					
ANR	6760444	Identifier	conY		6759139	0					
ANR	6760445	Identifier	buf		6759139	1					
ANR	6760446	AdditiveExpression	idx * dy + con -> left_pad		6759139	1		+			
ANR	6760447	MultiplicativeExpression	idx * dy		6759139	0		*			
ANR	6760448	Identifier	idx		6759139	0					
ANR	6760449	Identifier	dy		6759139	1					
ANR	6760450	PtrMemberAccess	con -> left_pad		6759139	1					
ANR	6760451	Identifier	con		6759139	0					
ANR	6760452	Identifier	left_pad		6759139	1					
ANR	6760453	ExpressionStatement	"write_uint8 ( conY , dp , conY -> wid )"	2019:16:66863:66896	6759139	1	True				
ANR	6760454	CallExpression	"write_uint8 ( conY , dp , conY -> wid )"		6759139	0					
ANR	6760455	Callee	write_uint8		6759139	0					
ANR	6760456	Identifier	write_uint8		6759139	0					
ANR	6760457	ArgumentList	conY		6759139	1					
ANR	6760458	Argument	conY		6759139	0					
ANR	6760459	Identifier	conY		6759139	0					
ANR	6760460	Argument	dp		6759139	1					
ANR	6760461	Identifier	dp		6759139	0					
ANR	6760462	Argument	conY -> wid		6759139	2					
ANR	6760463	PtrMemberAccess	conY -> wid		6759139	0					
ANR	6760464	Identifier	conY		6759139	0					
ANR	6760465	Identifier	wid		6759139	1					
ANR	6760466	IfStatement	if ( isOutputYUV422 ( image ) )		6759139	5					
ANR	6760467	Condition	isOutputYUV422 ( image )	2022:15:66947:66967	6759139	0	True				
ANR	6760468	CallExpression	isOutputYUV422 ( image )		6759139	0					
ANR	6760469	Callee	isOutputYUV422		6759139	0					
ANR	6760470	Identifier	isOutputYUV422		6759139	0					
ANR	6760471	ArgumentList	image		6759139	1					
ANR	6760472	Argument	image		6759139	0					
ANR	6760473	Identifier	image		6759139	0					
ANR	6760474	CompoundStatement		188:12:6447:6447	6759139	1					
ANR	6760475	ExpressionStatement	dy = 8 * strip_blocks	2024:16:67000:67019	6759139	0	True				
ANR	6760476	AssignmentExpression	dy = 8 * strip_blocks		6759139	0		=			
ANR	6760477	Identifier	dy		6759139	0					
ANR	6760478	MultiplicativeExpression	8 * strip_blocks		6759139	1		*			
ANR	6760479	PrimaryExpression	8		6759139	0					
ANR	6760480	Identifier	strip_blocks		6759139	1					
ANR	6760481	ExpressionStatement	xDiv = 8	2025:16:67037:67045	6759139	1	True				
ANR	6760482	AssignmentExpression	xDiv = 8		6759139	0		=			
ANR	6760483	Identifier	xDiv		6759139	0					
ANR	6760484	PrimaryExpression	8		6759139	1					
ANR	6760485	ExpressionStatement	subX = 2	2026:16:67063:67071	6759139	2	True				
ANR	6760486	AssignmentExpression	subX = 2		6759139	0		=			
ANR	6760487	Identifier	subX		6759139	0					
ANR	6760488	PrimaryExpression	2		6759139	1					
ANR	6760489	ExpressionStatement	left_pad_shift >>= 1	2027:16:67089:67109	6759139	3	True				
ANR	6760490	AssignmentExpression	left_pad_shift >>= 1		6759139	0		>>=			
ANR	6760491	Identifier	left_pad_shift		6759139	0					
ANR	6760492	PrimaryExpression	1		6759139	1					
ANR	6760493	IfStatement	if ( isOutputYUV420 ( image ) )		6759139	6					
ANR	6760494	Condition	isOutputYUV420 ( image )	2030:15:67153:67173	6759139	0	True				
ANR	6760495	CallExpression	isOutputYUV420 ( image )		6759139	0					
ANR	6760496	Callee	isOutputYUV420		6759139	0					
ANR	6760497	Identifier	isOutputYUV420		6759139	0					
ANR	6760498	ArgumentList	image		6759139	1					
ANR	6760499	Argument	image		6759139	0					
ANR	6760500	Identifier	image		6759139	0					
ANR	6760501	CompoundStatement		196:12:6653:6653	6759139	1					
ANR	6760502	ExpressionStatement	dy = 8 * strip_blocks	2032:16:67206:67225	6759139	0	True				
ANR	6760503	AssignmentExpression	dy = 8 * strip_blocks		6759139	0		=			
ANR	6760504	Identifier	dy		6759139	0					
ANR	6760505	MultiplicativeExpression	8 * strip_blocks		6759139	1		*			
ANR	6760506	PrimaryExpression	8		6759139	0					
ANR	6760507	Identifier	strip_blocks		6759139	1					
ANR	6760508	ExpressionStatement	xDiv = yDiv = 8	2033:16:67243:67258	6759139	1	True				
ANR	6760509	AssignmentExpression	xDiv = yDiv = 8		6759139	0		=			
ANR	6760510	Identifier	xDiv		6759139	0					
ANR	6760511	AssignmentExpression	yDiv = 8		6759139	1		=			
ANR	6760512	Identifier	yDiv		6759139	0					
ANR	6760513	PrimaryExpression	8		6759139	1					
ANR	6760514	ExpressionStatement	subX = subY = 2	2034:16:67276:67291	6759139	2	True				
ANR	6760515	AssignmentExpression	subX = subY = 2		6759139	0		=			
ANR	6760516	Identifier	subX		6759139	0					
ANR	6760517	AssignmentExpression	subY = 2		6759139	1		=			
ANR	6760518	Identifier	subY		6759139	0					
ANR	6760519	PrimaryExpression	2		6759139	1					
ANR	6760520	ExpressionStatement	left_pad_shift >>= 1	2035:16:67309:67329	6759139	3	True				
ANR	6760521	AssignmentExpression	left_pad_shift >>= 1		6759139	0		>>=			
ANR	6760522	Identifier	left_pad_shift		6759139	0					
ANR	6760523	PrimaryExpression	1		6759139	1					
ANR	6760524	ExpressionStatement	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY	2037:12:67357:67433	6759139	7	True				
ANR	6760525	AssignmentExpression	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY		6759139	0		=			
ANR	6760526	Identifier	first		6759139	0					
ANR	6760527	ConditionalExpression	( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY		6759139	1					
ANR	6760528	Condition	con -> top_pad_remaining > yDiv		6759139	0					
ANR	6760529	RelationalExpression	con -> top_pad_remaining > yDiv		6759139	0		>			
ANR	6760530	PtrMemberAccess	con -> top_pad_remaining		6759139	0					
ANR	6760531	Identifier	con		6759139	0					
ANR	6760532	Identifier	top_pad_remaining		6759139	1					
ANR	6760533	Identifier	yDiv		6759139	1					
ANR	6760534	Identifier	yDiv		6759139	1					
ANR	6760535	MultiplicativeExpression	con -> top_pad_remaining / subY		6759139	2		/			
ANR	6760536	PtrMemberAccess	con -> top_pad_remaining		6759139	0					
ANR	6760537	Identifier	con		6759139	0					
ANR	6760538	Identifier	top_pad_remaining		6759139	1					
ANR	6760539	Identifier	subY		6759139	1					
ANR	6760540	ExpressionStatement	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv	2038:12:67447:67546	6759139	8	True				
ANR	6760541	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		6759139	0		=			
ANR	6760542	Identifier	trans		6759139	0					
ANR	6760543	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		6759139	1					
ANR	6760544	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0					
ANR	6760545	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0		>			
ANR	6760546	AdditiveExpression	my * yDiv + yDiv		6759139	0		+			
ANR	6760547	MultiplicativeExpression	my * yDiv		6759139	0		*			
ANR	6760548	Identifier	my		6759139	0					
ANR	6760549	Identifier	yDiv		6759139	1					
ANR	6760550	Identifier	yDiv		6759139	1					
ANR	6760551	AdditiveExpression	con -> hei + con -> top_pad		6759139	1		+			
ANR	6760552	PtrMemberAccess	con -> hei		6759139	0					
ANR	6760553	Identifier	con		6759139	0					
ANR	6760554	Identifier	hei		6759139	1					
ANR	6760555	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6760556	Identifier	con		6759139	0					
ANR	6760557	Identifier	top_pad		6759139	1					
ANR	6760558	MultiplicativeExpression	( ( con -> hei + con -> top_pad ) / subY ) % yDiv		6759139	1		%			
ANR	6760559	MultiplicativeExpression	( con -> hei + con -> top_pad ) / subY		6759139	0		/			
ANR	6760560	AdditiveExpression	con -> hei + con -> top_pad		6759139	0		+			
ANR	6760561	PtrMemberAccess	con -> hei		6759139	0					
ANR	6760562	Identifier	con		6759139	0					
ANR	6760563	Identifier	hei		6759139	1					
ANR	6760564	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6760565	Identifier	con		6759139	0					
ANR	6760566	Identifier	top_pad		6759139	1					
ANR	6760567	Identifier	subY		6759139	1					
ANR	6760568	Identifier	yDiv		6759139	1					
ANR	6760569	Identifier	yDiv		6759139	2					
ANR	6760570	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6759139	9					
ANR	6760571	ForInit	idx = first ;	2039:17:67571:67582	6759139	0	True				
ANR	6760572	AssignmentExpression	idx = first		6759139	0		=			
ANR	6760573	Identifier	idx		6759139	0					
ANR	6760574	Identifier	first		6759139	1					
ANR	6760575	Condition	idx < trans	2039:30:67584:67594	6759139	1	True				
ANR	6760576	RelationalExpression	idx < trans		6759139	0		<			
ANR	6760577	Identifier	idx		6759139	0					
ANR	6760578	Identifier	trans		6759139	1					
ANR	6760579	AssignmentExpression	idx += 1	2039:43:67597:67604	6759139	2	True	+=			
ANR	6760580	Identifier	idx		6759139	0					
ANR	6760581	PrimaryExpression	1		6759139	1					
ANR	6760582	CompoundStatement		205:16:7090:7149	6759139	3					
ANR	6760583	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conU -> buf + idx * dy + left_pad_shift ;	2040:16:67625:67684	6759139	0	True				
ANR	6760584	IdentifierDecl	* dp = ( uint8_t * ) conU -> buf + idx * dy + left_pad_shift		6759139	0					
ANR	6760585	IdentifierDeclType	uint8_t *		6759139	0					
ANR	6760586	Identifier	dp		6759139	1					
ANR	6760587	AssignmentExpression	* dp = ( uint8_t * ) conU -> buf + idx * dy + left_pad_shift		6759139	2		=			
ANR	6760588	Identifier	dp		6759139	0					
ANR	6760589	AdditiveExpression	( uint8_t * ) conU -> buf + idx * dy + left_pad_shift		6759139	1		+			
ANR	6760590	CastExpression	( uint8_t * ) conU -> buf		6759139	0					
ANR	6760591	CastTarget	uint8_t *		6759139	0					
ANR	6760592	PtrMemberAccess	conU -> buf		6759139	1					
ANR	6760593	Identifier	conU		6759139	0					
ANR	6760594	Identifier	buf		6759139	1					
ANR	6760595	AdditiveExpression	idx * dy + left_pad_shift		6759139	1		+			
ANR	6760596	MultiplicativeExpression	idx * dy		6759139	0		*			
ANR	6760597	Identifier	idx		6759139	0					
ANR	6760598	Identifier	dy		6759139	1					
ANR	6760599	Identifier	left_pad_shift		6759139	1					
ANR	6760600	ExpressionStatement	"write_uint8 ( conU , dp , ( conU -> wid ) / subX )"	2041:16:67718:67758	6759139	1	True				
ANR	6760601	CallExpression	"write_uint8 ( conU , dp , ( conU -> wid ) / subX )"		6759139	0					
ANR	6760602	Callee	write_uint8		6759139	0					
ANR	6760603	Identifier	write_uint8		6759139	0					
ANR	6760604	ArgumentList	conU		6759139	1					
ANR	6760605	Argument	conU		6759139	0					
ANR	6760606	Identifier	conU		6759139	0					
ANR	6760607	Argument	dp		6759139	1					
ANR	6760608	Identifier	dp		6759139	0					
ANR	6760609	Argument	( conU -> wid ) / subX		6759139	2					
ANR	6760610	MultiplicativeExpression	( conU -> wid ) / subX		6759139	0		/			
ANR	6760611	PtrMemberAccess	conU -> wid		6759139	0					
ANR	6760612	Identifier	conU		6759139	0					
ANR	6760613	Identifier	wid		6759139	1					
ANR	6760614	Identifier	subX		6759139	1					
ANR	6760615	ExpressionStatement	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv	2044:12:67818:67917	6759139	10	True				
ANR	6760616	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		6759139	0		=			
ANR	6760617	Identifier	trans		6759139	0					
ANR	6760618	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		6759139	1					
ANR	6760619	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0					
ANR	6760620	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0		>			
ANR	6760621	AdditiveExpression	my * yDiv + yDiv		6759139	0		+			
ANR	6760622	MultiplicativeExpression	my * yDiv		6759139	0		*			
ANR	6760623	Identifier	my		6759139	0					
ANR	6760624	Identifier	yDiv		6759139	1					
ANR	6760625	Identifier	yDiv		6759139	1					
ANR	6760626	AdditiveExpression	con -> hei + con -> top_pad		6759139	1		+			
ANR	6760627	PtrMemberAccess	con -> hei		6759139	0					
ANR	6760628	Identifier	con		6759139	0					
ANR	6760629	Identifier	hei		6759139	1					
ANR	6760630	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6760631	Identifier	con		6759139	0					
ANR	6760632	Identifier	top_pad		6759139	1					
ANR	6760633	MultiplicativeExpression	( ( con -> hei + con -> top_pad ) / subY ) % yDiv		6759139	1		%			
ANR	6760634	MultiplicativeExpression	( con -> hei + con -> top_pad ) / subY		6759139	0		/			
ANR	6760635	AdditiveExpression	con -> hei + con -> top_pad		6759139	0		+			
ANR	6760636	PtrMemberAccess	con -> hei		6759139	0					
ANR	6760637	Identifier	con		6759139	0					
ANR	6760638	Identifier	hei		6759139	1					
ANR	6760639	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6760640	Identifier	con		6759139	0					
ANR	6760641	Identifier	top_pad		6759139	1					
ANR	6760642	Identifier	subY		6759139	1					
ANR	6760643	Identifier	yDiv		6759139	1					
ANR	6760644	Identifier	yDiv		6759139	2					
ANR	6760645	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6759139	11					
ANR	6760646	ForInit	idx = first ;	2045:17:67942:67953	6759139	0	True				
ANR	6760647	AssignmentExpression	idx = first		6759139	0		=			
ANR	6760648	Identifier	idx		6759139	0					
ANR	6760649	Identifier	first		6759139	1					
ANR	6760650	Condition	idx < trans	2045:30:67955:67965	6759139	1	True				
ANR	6760651	RelationalExpression	idx < trans		6759139	0		<			
ANR	6760652	Identifier	idx		6759139	0					
ANR	6760653	Identifier	trans		6759139	1					
ANR	6760654	AssignmentExpression	idx += 1	2045:43:67968:67975	6759139	2	True	+=			
ANR	6760655	Identifier	idx		6759139	0					
ANR	6760656	PrimaryExpression	1		6759139	1					
ANR	6760657	CompoundStatement		211:16:7461:7520	6759139	3					
ANR	6760658	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conV -> buf + idx * dy + left_pad_shift ;	2046:16:67996:68055	6759139	0	True				
ANR	6760659	IdentifierDecl	* dp = ( uint8_t * ) conV -> buf + idx * dy + left_pad_shift		6759139	0					
ANR	6760660	IdentifierDeclType	uint8_t *		6759139	0					
ANR	6760661	Identifier	dp		6759139	1					
ANR	6760662	AssignmentExpression	* dp = ( uint8_t * ) conV -> buf + idx * dy + left_pad_shift		6759139	2		=			
ANR	6760663	Identifier	dp		6759139	0					
ANR	6760664	AdditiveExpression	( uint8_t * ) conV -> buf + idx * dy + left_pad_shift		6759139	1		+			
ANR	6760665	CastExpression	( uint8_t * ) conV -> buf		6759139	0					
ANR	6760666	CastTarget	uint8_t *		6759139	0					
ANR	6760667	PtrMemberAccess	conV -> buf		6759139	1					
ANR	6760668	Identifier	conV		6759139	0					
ANR	6760669	Identifier	buf		6759139	1					
ANR	6760670	AdditiveExpression	idx * dy + left_pad_shift		6759139	1		+			
ANR	6760671	MultiplicativeExpression	idx * dy		6759139	0		*			
ANR	6760672	Identifier	idx		6759139	0					
ANR	6760673	Identifier	dy		6759139	1					
ANR	6760674	Identifier	left_pad_shift		6759139	1					
ANR	6760675	ExpressionStatement	"write_uint8 ( conV , dp , ( conV -> wid ) / subX )"	2047:16:68089:68129	6759139	1	True				
ANR	6760676	CallExpression	"write_uint8 ( conV , dp , ( conV -> wid ) / subX )"		6759139	0					
ANR	6760677	Callee	write_uint8		6759139	0					
ANR	6760678	Identifier	write_uint8		6759139	0					
ANR	6760679	ArgumentList	conV		6759139	1					
ANR	6760680	Argument	conV		6759139	0					
ANR	6760681	Identifier	conV		6759139	0					
ANR	6760682	Argument	dp		6759139	1					
ANR	6760683	Identifier	dp		6759139	0					
ANR	6760684	Argument	( conV -> wid ) / subX		6759139	2					
ANR	6760685	MultiplicativeExpression	( conV -> wid ) / subX		6759139	0		/			
ANR	6760686	PtrMemberAccess	conV -> wid		6759139	0					
ANR	6760687	Identifier	conV		6759139	0					
ANR	6760688	Identifier	wid		6759139	1					
ANR	6760689	Identifier	subX		6759139	1					
ANR	6760690	IfStatement	if ( con -> alpha )		6759139	12					
ANR	6760691	Condition	con -> alpha	2050:15:68180:68189	6759139	0	True				
ANR	6760692	PtrMemberAccess	con -> alpha		6759139	0					
ANR	6760693	Identifier	con		6759139	0					
ANR	6760694	Identifier	alpha		6759139	1					
ANR	6760695	CompoundStatement		216:12:7669:7669	6759139	1					
ANR	6760696	ExpressionStatement	dy = 16 * strip_blocks	2052:16:68222:68242	6759139	0	True				
ANR	6760697	AssignmentExpression	dy = 16 * strip_blocks		6759139	0		=			
ANR	6760698	Identifier	dy		6759139	0					
ANR	6760699	MultiplicativeExpression	16 * strip_blocks		6759139	1		*			
ANR	6760700	PrimaryExpression	16		6759139	0					
ANR	6760701	Identifier	strip_blocks		6759139	1					
ANR	6760702	ExpressionStatement	xDiv = yDiv = 16	2053:16:68260:68276	6759139	1	True				
ANR	6760703	AssignmentExpression	xDiv = yDiv = 16		6759139	0		=			
ANR	6760704	Identifier	xDiv		6759139	0					
ANR	6760705	AssignmentExpression	yDiv = 16		6759139	1		=			
ANR	6760706	Identifier	yDiv		6759139	0					
ANR	6760707	PrimaryExpression	16		6759139	1					
ANR	6760708	ExpressionStatement	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining	2054:16:68294:68365	6759139	2	True				
ANR	6760709	AssignmentExpression	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		6759139	0		=			
ANR	6760710	Identifier	first		6759139	0					
ANR	6760711	ConditionalExpression	( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		6759139	1					
ANR	6760712	Condition	con -> top_pad_remaining > yDiv		6759139	0					
ANR	6760713	RelationalExpression	con -> top_pad_remaining > yDiv		6759139	0		>			
ANR	6760714	PtrMemberAccess	con -> top_pad_remaining		6759139	0					
ANR	6760715	Identifier	con		6759139	0					
ANR	6760716	Identifier	top_pad_remaining		6759139	1					
ANR	6760717	Identifier	yDiv		6759139	1					
ANR	6760718	Identifier	yDiv		6759139	1					
ANR	6760719	PtrMemberAccess	con -> top_pad_remaining		6759139	2					
ANR	6760720	Identifier	con		6759139	0					
ANR	6760721	Identifier	top_pad_remaining		6759139	1					
ANR	6760722	ExpressionStatement	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv	2055:16:68383:68475	6759139	3	True				
ANR	6760723	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		6759139	0		=			
ANR	6760724	Identifier	trans		6759139	0					
ANR	6760725	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		6759139	1					
ANR	6760726	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0					
ANR	6760727	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0		>			
ANR	6760728	AdditiveExpression	my * yDiv + yDiv		6759139	0		+			
ANR	6760729	MultiplicativeExpression	my * yDiv		6759139	0		*			
ANR	6760730	Identifier	my		6759139	0					
ANR	6760731	Identifier	yDiv		6759139	1					
ANR	6760732	Identifier	yDiv		6759139	1					
ANR	6760733	AdditiveExpression	con -> hei + con -> top_pad		6759139	1		+			
ANR	6760734	PtrMemberAccess	con -> hei		6759139	0					
ANR	6760735	Identifier	con		6759139	0					
ANR	6760736	Identifier	hei		6759139	1					
ANR	6760737	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6760738	Identifier	con		6759139	0					
ANR	6760739	Identifier	top_pad		6759139	1					
ANR	6760740	MultiplicativeExpression	( con -> hei + con -> top_pad ) % yDiv		6759139	1		%			
ANR	6760741	AdditiveExpression	con -> hei + con -> top_pad		6759139	0		+			
ANR	6760742	PtrMemberAccess	con -> hei		6759139	0					
ANR	6760743	Identifier	con		6759139	0					
ANR	6760744	Identifier	hei		6759139	1					
ANR	6760745	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6760746	Identifier	con		6759139	0					
ANR	6760747	Identifier	top_pad		6759139	1					
ANR	6760748	Identifier	yDiv		6759139	1					
ANR	6760749	Identifier	yDiv		6759139	2					
ANR	6760750	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6759139	4					
ANR	6760751	ForInit	idx = first ;	2056:21:68504:68515	6759139	0	True				
ANR	6760752	AssignmentExpression	idx = first		6759139	0		=			
ANR	6760753	Identifier	idx		6759139	0					
ANR	6760754	Identifier	first		6759139	1					
ANR	6760755	Condition	idx < trans	2056:34:68517:68527	6759139	1	True				
ANR	6760756	RelationalExpression	idx < trans		6759139	0		<			
ANR	6760757	Identifier	idx		6759139	0					
ANR	6760758	Identifier	trans		6759139	1					
ANR	6760759	AssignmentExpression	idx += 1	2056:47:68530:68537	6759139	2	True	+=			
ANR	6760760	Identifier	idx		6759139	0					
ANR	6760761	PrimaryExpression	1		6759139	1					
ANR	6760762	CompoundStatement		222:20:8027:8085	6759139	3					
ANR	6760763	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conA -> buf + idx * dy + con -> left_pad ;	2057:20:68562:68620	6759139	0	True				
ANR	6760764	IdentifierDecl	* dp = ( uint8_t * ) conA -> buf + idx * dy + con -> left_pad		6759139	0					
ANR	6760765	IdentifierDeclType	uint8_t *		6759139	0					
ANR	6760766	Identifier	dp		6759139	1					
ANR	6760767	AssignmentExpression	* dp = ( uint8_t * ) conA -> buf + idx * dy + con -> left_pad		6759139	2		=			
ANR	6760768	Identifier	dp		6759139	0					
ANR	6760769	AdditiveExpression	( uint8_t * ) conA -> buf + idx * dy + con -> left_pad		6759139	1		+			
ANR	6760770	CastExpression	( uint8_t * ) conA -> buf		6759139	0					
ANR	6760771	CastTarget	uint8_t *		6759139	0					
ANR	6760772	PtrMemberAccess	conA -> buf		6759139	1					
ANR	6760773	Identifier	conA		6759139	0					
ANR	6760774	Identifier	buf		6759139	1					
ANR	6760775	AdditiveExpression	idx * dy + con -> left_pad		6759139	1		+			
ANR	6760776	MultiplicativeExpression	idx * dy		6759139	0		*			
ANR	6760777	Identifier	idx		6759139	0					
ANR	6760778	Identifier	dy		6759139	1					
ANR	6760779	PtrMemberAccess	con -> left_pad		6759139	1					
ANR	6760780	Identifier	con		6759139	0					
ANR	6760781	Identifier	left_pad		6759139	1					
ANR	6760782	ExpressionStatement	"write_uint8 ( conA , dp , conA -> wid )"	2058:20:68674:68706	6759139	1	True				
ANR	6760783	CallExpression	"write_uint8 ( conA , dp , conA -> wid )"		6759139	0					
ANR	6760784	Callee	write_uint8		6759139	0					
ANR	6760785	Identifier	write_uint8		6759139	0					
ANR	6760786	ArgumentList	conA		6759139	1					
ANR	6760787	Argument	conA		6759139	0					
ANR	6760788	Identifier	conA		6759139	0					
ANR	6760789	Argument	dp		6759139	1					
ANR	6760790	Identifier	dp		6759139	0					
ANR	6760791	Argument	conA -> wid		6759139	2					
ANR	6760792	PtrMemberAccess	conA -> wid		6759139	0					
ANR	6760793	Identifier	conA		6759139	0					
ANR	6760794	Identifier	wid		6759139	1					
ANR	6760795	ExpressionStatement	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining	2061:12:68768:68835	6759139	13	True				
ANR	6760796	AssignmentExpression	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		6759139	0		=			
ANR	6760797	Identifier	first		6759139	0					
ANR	6760798	ConditionalExpression	( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		6759139	1					
ANR	6760799	Condition	con -> top_pad_remaining > 16		6759139	0					
ANR	6760800	RelationalExpression	con -> top_pad_remaining > 16		6759139	0		>			
ANR	6760801	PtrMemberAccess	con -> top_pad_remaining		6759139	0					
ANR	6760802	Identifier	con		6759139	0					
ANR	6760803	Identifier	top_pad_remaining		6759139	1					
ANR	6760804	PrimaryExpression	16		6759139	1					
ANR	6760805	PrimaryExpression	16		6759139	1					
ANR	6760806	PtrMemberAccess	con -> top_pad_remaining		6759139	2					
ANR	6760807	Identifier	con		6759139	0					
ANR	6760808	Identifier	top_pad_remaining		6759139	1					
ANR	6760809	ExpressionStatement	con -> top_pad_remaining -= first	2062:12:68849:68880	6759139	14	True				
ANR	6760810	AssignmentExpression	con -> top_pad_remaining -= first		6759139	0		-=			
ANR	6760811	PtrMemberAccess	con -> top_pad_remaining		6759139	0					
ANR	6760812	Identifier	con		6759139	0					
ANR	6760813	Identifier	top_pad_remaining		6759139	1					
ANR	6760814	Identifier	first		6759139	1					
ANR	6760815	ElseStatement	else		6759139	0					
ANR	6760816	IfStatement	if ( con -> bpi == 16 || con -> bpi == 10 )		6759139	0					
ANR	6760817	Condition	con -> bpi == 16 || con -> bpi == 10	2064:16:68908:68939	6759139	0	True				
ANR	6760818	OrExpression	con -> bpi == 16 || con -> bpi == 10		6759139	0		||			
ANR	6760819	EqualityExpression	con -> bpi == 16		6759139	0		==			
ANR	6760820	PtrMemberAccess	con -> bpi		6759139	0					
ANR	6760821	Identifier	con		6759139	0					
ANR	6760822	Identifier	bpi		6759139	1					
ANR	6760823	PrimaryExpression	16		6759139	1					
ANR	6760824	EqualityExpression	con -> bpi == 10		6759139	1		==			
ANR	6760825	PtrMemberAccess	con -> bpi		6759139	0					
ANR	6760826	Identifier	con		6759139	0					
ANR	6760827	Identifier	bpi		6759139	1					
ANR	6760828	PrimaryExpression	10		6759139	1					
ANR	6760829	CompoundStatement		234:12:8586:8682	6759139	1					
ANR	6760830	IdentifierDeclStatement	int left_pad_shift = con -> left_pad ;	2067:12:68984:69018	6759139	0	True				
ANR	6760831	IdentifierDecl	left_pad_shift = con -> left_pad		6759139	0					
ANR	6760832	IdentifierDeclType	int		6759139	0					
ANR	6760833	Identifier	left_pad_shift		6759139	1					
ANR	6760834	AssignmentExpression	left_pad_shift = con -> left_pad		6759139	2		=			
ANR	6760835	Identifier	left_pad_shift		6759139	0					
ANR	6760836	PtrMemberAccess	con -> left_pad		6759139	1					
ANR	6760837	Identifier	con		6759139	0					
ANR	6760838	Identifier	left_pad		6759139	1					
ANR	6760839	IdentifierDeclStatement	int first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining ;	2068:12:69032:69107	6759139	1	True				
ANR	6760840	IdentifierDecl	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		6759139	0					
ANR	6760841	IdentifierDeclType	int		6759139	0					
ANR	6760842	Identifier	first		6759139	1					
ANR	6760843	AssignmentExpression	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		6759139	2		=			
ANR	6760844	Identifier	first		6759139	0					
ANR	6760845	ConditionalExpression	( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		6759139	1					
ANR	6760846	Condition	con -> top_pad_remaining > yDiv		6759139	0					
ANR	6760847	RelationalExpression	con -> top_pad_remaining > yDiv		6759139	0		>			
ANR	6760848	PtrMemberAccess	con -> top_pad_remaining		6759139	0					
ANR	6760849	Identifier	con		6759139	0					
ANR	6760850	Identifier	top_pad_remaining		6759139	1					
ANR	6760851	Identifier	yDiv		6759139	1					
ANR	6760852	Identifier	yDiv		6759139	1					
ANR	6760853	PtrMemberAccess	con -> top_pad_remaining		6759139	2					
ANR	6760854	Identifier	con		6759139	0					
ANR	6760855	Identifier	top_pad_remaining		6759139	1					
ANR	6760856	IdentifierDeclStatement	int trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv ;	2069:12:69121:69217	6759139	2	True				
ANR	6760857	IdentifierDecl	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		6759139	0					
ANR	6760858	IdentifierDeclType	int		6759139	0					
ANR	6760859	Identifier	trans		6759139	1					
ANR	6760860	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		6759139	2		=			
ANR	6760861	Identifier	trans		6759139	0					
ANR	6760862	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		6759139	1					
ANR	6760863	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0					
ANR	6760864	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0		>			
ANR	6760865	AdditiveExpression	my * yDiv + yDiv		6759139	0		+			
ANR	6760866	MultiplicativeExpression	my * yDiv		6759139	0		*			
ANR	6760867	Identifier	my		6759139	0					
ANR	6760868	Identifier	yDiv		6759139	1					
ANR	6760869	Identifier	yDiv		6759139	1					
ANR	6760870	AdditiveExpression	con -> hei + con -> top_pad		6759139	1		+			
ANR	6760871	PtrMemberAccess	con -> hei		6759139	0					
ANR	6760872	Identifier	con		6759139	0					
ANR	6760873	Identifier	hei		6759139	1					
ANR	6760874	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6760875	Identifier	con		6759139	0					
ANR	6760876	Identifier	top_pad		6759139	1					
ANR	6760877	MultiplicativeExpression	( con -> hei + con -> top_pad ) % yDiv		6759139	1		%			
ANR	6760878	AdditiveExpression	con -> hei + con -> top_pad		6759139	0		+			
ANR	6760879	PtrMemberAccess	con -> hei		6759139	0					
ANR	6760880	Identifier	con		6759139	0					
ANR	6760881	Identifier	hei		6759139	1					
ANR	6760882	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6760883	Identifier	con		6759139	0					
ANR	6760884	Identifier	top_pad		6759139	1					
ANR	6760885	Identifier	yDiv		6759139	1					
ANR	6760886	Identifier	yDiv		6759139	2					
ANR	6760887	ExpressionStatement	dy = 16 * strip_blocks	2070:12:69236:69256	6759139	3	True				
ANR	6760888	AssignmentExpression	dy = 16 * strip_blocks		6759139	0		=			
ANR	6760889	Identifier	dy		6759139	0					
ANR	6760890	MultiplicativeExpression	16 * strip_blocks		6759139	1		*			
ANR	6760891	PrimaryExpression	16		6759139	0					
ANR	6760892	Identifier	strip_blocks		6759139	1					
ANR	6760893	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6759139	4					
ANR	6760894	ForInit	idx = first ;	2071:17:69275:69286	6759139	0	True				
ANR	6760895	AssignmentExpression	idx = first		6759139	0		=			
ANR	6760896	Identifier	idx		6759139	0					
ANR	6760897	Identifier	first		6759139	1					
ANR	6760898	Condition	idx < trans	2071:30:69288:69298	6759139	1	True				
ANR	6760899	RelationalExpression	idx < trans		6759139	0		<			
ANR	6760900	Identifier	idx		6759139	0					
ANR	6760901	Identifier	trans		6759139	1					
ANR	6760902	AssignmentExpression	idx += 1	2071:43:69301:69308	6759139	2	True	+=			
ANR	6760903	Identifier	idx		6759139	0					
ANR	6760904	PrimaryExpression	1		6759139	1					
ANR	6760905	CompoundStatement		237:16:8794:8854	6759139	3					
ANR	6760906	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conY -> buf + idx * dy + con -> left_pad ;	2072:16:69329:69389	6759139	0	True				
ANR	6760907	IdentifierDecl	* dp = ( uint16_t * ) conY -> buf + idx * dy + con -> left_pad		6759139	0					
ANR	6760908	IdentifierDeclType	uint16_t *		6759139	0					
ANR	6760909	Identifier	dp		6759139	1					
ANR	6760910	AssignmentExpression	* dp = ( uint16_t * ) conY -> buf + idx * dy + con -> left_pad		6759139	2		=			
ANR	6760911	Identifier	dp		6759139	0					
ANR	6760912	AdditiveExpression	( uint16_t * ) conY -> buf + idx * dy + con -> left_pad		6759139	1		+			
ANR	6760913	CastExpression	( uint16_t * ) conY -> buf		6759139	0					
ANR	6760914	CastTarget	uint16_t *		6759139	0					
ANR	6760915	PtrMemberAccess	conY -> buf		6759139	1					
ANR	6760916	Identifier	conY		6759139	0					
ANR	6760917	Identifier	buf		6759139	1					
ANR	6760918	AdditiveExpression	idx * dy + con -> left_pad		6759139	1		+			
ANR	6760919	MultiplicativeExpression	idx * dy		6759139	0		*			
ANR	6760920	Identifier	idx		6759139	0					
ANR	6760921	Identifier	dy		6759139	1					
ANR	6760922	PtrMemberAccess	con -> left_pad		6759139	1					
ANR	6760923	Identifier	con		6759139	0					
ANR	6760924	Identifier	left_pad		6759139	1					
ANR	6760925	ExpressionStatement	"write_uint16 ( conY , dp , conY -> wid )"	2073:16:69423:69457	6759139	1	True				
ANR	6760926	CallExpression	"write_uint16 ( conY , dp , conY -> wid )"		6759139	0					
ANR	6760927	Callee	write_uint16		6759139	0					
ANR	6760928	Identifier	write_uint16		6759139	0					
ANR	6760929	ArgumentList	conY		6759139	1					
ANR	6760930	Argument	conY		6759139	0					
ANR	6760931	Identifier	conY		6759139	0					
ANR	6760932	Argument	dp		6759139	1					
ANR	6760933	Identifier	dp		6759139	0					
ANR	6760934	Argument	conY -> wid		6759139	2					
ANR	6760935	PtrMemberAccess	conY -> wid		6759139	0					
ANR	6760936	Identifier	conY		6759139	0					
ANR	6760937	Identifier	wid		6759139	1					
ANR	6760938	IfStatement	if ( isOutputYUV422 ( image ) )		6759139	5					
ANR	6760939	Condition	isOutputYUV422 ( image )	2076:15:69508:69528	6759139	0	True				
ANR	6760940	CallExpression	isOutputYUV422 ( image )		6759139	0					
ANR	6760941	Callee	isOutputYUV422		6759139	0					
ANR	6760942	Identifier	isOutputYUV422		6759139	0					
ANR	6760943	ArgumentList	image		6759139	1					
ANR	6760944	Argument	image		6759139	0					
ANR	6760945	Identifier	image		6759139	0					
ANR	6760946	CompoundStatement		242:12:9008:9008	6759139	1					
ANR	6760947	ExpressionStatement	dy = 8 * strip_blocks	2078:16:69561:69580	6759139	0	True				
ANR	6760948	AssignmentExpression	dy = 8 * strip_blocks		6759139	0		=			
ANR	6760949	Identifier	dy		6759139	0					
ANR	6760950	MultiplicativeExpression	8 * strip_blocks		6759139	1		*			
ANR	6760951	PrimaryExpression	8		6759139	0					
ANR	6760952	Identifier	strip_blocks		6759139	1					
ANR	6760953	ExpressionStatement	xDiv = 8	2079:16:69598:69606	6759139	1	True				
ANR	6760954	AssignmentExpression	xDiv = 8		6759139	0		=			
ANR	6760955	Identifier	xDiv		6759139	0					
ANR	6760956	PrimaryExpression	8		6759139	1					
ANR	6760957	ExpressionStatement	subX = 2	2080:16:69624:69632	6759139	2	True				
ANR	6760958	AssignmentExpression	subX = 2		6759139	0		=			
ANR	6760959	Identifier	subX		6759139	0					
ANR	6760960	PrimaryExpression	2		6759139	1					
ANR	6760961	ExpressionStatement	left_pad_shift >>= 1	2081:16:69650:69670	6759139	3	True				
ANR	6760962	AssignmentExpression	left_pad_shift >>= 1		6759139	0		>>=			
ANR	6760963	Identifier	left_pad_shift		6759139	0					
ANR	6760964	PrimaryExpression	1		6759139	1					
ANR	6760965	IfStatement	if ( isOutputYUV420 ( image ) )		6759139	6					
ANR	6760966	Condition	isOutputYUV420 ( image )	2084:15:69714:69734	6759139	0	True				
ANR	6760967	CallExpression	isOutputYUV420 ( image )		6759139	0					
ANR	6760968	Callee	isOutputYUV420		6759139	0					
ANR	6760969	Identifier	isOutputYUV420		6759139	0					
ANR	6760970	ArgumentList	image		6759139	1					
ANR	6760971	Argument	image		6759139	0					
ANR	6760972	Identifier	image		6759139	0					
ANR	6760973	CompoundStatement		250:12:9214:9214	6759139	1					
ANR	6760974	ExpressionStatement	dy = 8 * strip_blocks	2086:16:69767:69786	6759139	0	True				
ANR	6760975	AssignmentExpression	dy = 8 * strip_blocks		6759139	0		=			
ANR	6760976	Identifier	dy		6759139	0					
ANR	6760977	MultiplicativeExpression	8 * strip_blocks		6759139	1		*			
ANR	6760978	PrimaryExpression	8		6759139	0					
ANR	6760979	Identifier	strip_blocks		6759139	1					
ANR	6760980	ExpressionStatement	xDiv = yDiv = 8	2087:16:69804:69819	6759139	1	True				
ANR	6760981	AssignmentExpression	xDiv = yDiv = 8		6759139	0		=			
ANR	6760982	Identifier	xDiv		6759139	0					
ANR	6760983	AssignmentExpression	yDiv = 8		6759139	1		=			
ANR	6760984	Identifier	yDiv		6759139	0					
ANR	6760985	PrimaryExpression	8		6759139	1					
ANR	6760986	ExpressionStatement	subX = subY = 2	2088:16:69837:69852	6759139	2	True				
ANR	6760987	AssignmentExpression	subX = subY = 2		6759139	0		=			
ANR	6760988	Identifier	subX		6759139	0					
ANR	6760989	AssignmentExpression	subY = 2		6759139	1		=			
ANR	6760990	Identifier	subY		6759139	0					
ANR	6760991	PrimaryExpression	2		6759139	1					
ANR	6760992	ExpressionStatement	left_pad_shift >>= 1	2089:16:69870:69890	6759139	3	True				
ANR	6760993	AssignmentExpression	left_pad_shift >>= 1		6759139	0		>>=			
ANR	6760994	Identifier	left_pad_shift		6759139	0					
ANR	6760995	PrimaryExpression	1		6759139	1					
ANR	6760996	ExpressionStatement	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY	2091:12:69918:69994	6759139	7	True				
ANR	6760997	AssignmentExpression	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY		6759139	0		=			
ANR	6760998	Identifier	first		6759139	0					
ANR	6760999	ConditionalExpression	( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY		6759139	1					
ANR	6761000	Condition	con -> top_pad_remaining > yDiv		6759139	0					
ANR	6761001	RelationalExpression	con -> top_pad_remaining > yDiv		6759139	0		>			
ANR	6761002	PtrMemberAccess	con -> top_pad_remaining		6759139	0					
ANR	6761003	Identifier	con		6759139	0					
ANR	6761004	Identifier	top_pad_remaining		6759139	1					
ANR	6761005	Identifier	yDiv		6759139	1					
ANR	6761006	Identifier	yDiv		6759139	1					
ANR	6761007	MultiplicativeExpression	con -> top_pad_remaining / subY		6759139	2		/			
ANR	6761008	PtrMemberAccess	con -> top_pad_remaining		6759139	0					
ANR	6761009	Identifier	con		6759139	0					
ANR	6761010	Identifier	top_pad_remaining		6759139	1					
ANR	6761011	Identifier	subY		6759139	1					
ANR	6761012	ExpressionStatement	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv	2092:12:70008:70107	6759139	8	True				
ANR	6761013	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		6759139	0		=			
ANR	6761014	Identifier	trans		6759139	0					
ANR	6761015	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		6759139	1					
ANR	6761016	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0					
ANR	6761017	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0		>			
ANR	6761018	AdditiveExpression	my * yDiv + yDiv		6759139	0		+			
ANR	6761019	MultiplicativeExpression	my * yDiv		6759139	0		*			
ANR	6761020	Identifier	my		6759139	0					
ANR	6761021	Identifier	yDiv		6759139	1					
ANR	6761022	Identifier	yDiv		6759139	1					
ANR	6761023	AdditiveExpression	con -> hei + con -> top_pad		6759139	1		+			
ANR	6761024	PtrMemberAccess	con -> hei		6759139	0					
ANR	6761025	Identifier	con		6759139	0					
ANR	6761026	Identifier	hei		6759139	1					
ANR	6761027	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6761028	Identifier	con		6759139	0					
ANR	6761029	Identifier	top_pad		6759139	1					
ANR	6761030	MultiplicativeExpression	( ( con -> hei + con -> top_pad ) / subY ) % yDiv		6759139	1		%			
ANR	6761031	MultiplicativeExpression	( con -> hei + con -> top_pad ) / subY		6759139	0		/			
ANR	6761032	AdditiveExpression	con -> hei + con -> top_pad		6759139	0		+			
ANR	6761033	PtrMemberAccess	con -> hei		6759139	0					
ANR	6761034	Identifier	con		6759139	0					
ANR	6761035	Identifier	hei		6759139	1					
ANR	6761036	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6761037	Identifier	con		6759139	0					
ANR	6761038	Identifier	top_pad		6759139	1					
ANR	6761039	Identifier	subY		6759139	1					
ANR	6761040	Identifier	yDiv		6759139	1					
ANR	6761041	Identifier	yDiv		6759139	2					
ANR	6761042	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6759139	9					
ANR	6761043	ForInit	idx = first ;	2093:17:70132:70143	6759139	0	True				
ANR	6761044	AssignmentExpression	idx = first		6759139	0		=			
ANR	6761045	Identifier	idx		6759139	0					
ANR	6761046	Identifier	first		6759139	1					
ANR	6761047	Condition	idx < trans	2093:30:70145:70155	6759139	1	True				
ANR	6761048	RelationalExpression	idx < trans		6759139	0		<			
ANR	6761049	Identifier	idx		6759139	0					
ANR	6761050	Identifier	trans		6759139	1					
ANR	6761051	AssignmentExpression	idx += 1	2093:43:70158:70165	6759139	2	True	+=			
ANR	6761052	Identifier	idx		6759139	0					
ANR	6761053	PrimaryExpression	1		6759139	1					
ANR	6761054	CompoundStatement		259:16:9651:9712	6759139	3					
ANR	6761055	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conU -> buf + idx * dy + left_pad_shift ;	2094:16:70186:70247	6759139	0	True				
ANR	6761056	IdentifierDecl	* dp = ( uint16_t * ) conU -> buf + idx * dy + left_pad_shift		6759139	0					
ANR	6761057	IdentifierDeclType	uint16_t *		6759139	0					
ANR	6761058	Identifier	dp		6759139	1					
ANR	6761059	AssignmentExpression	* dp = ( uint16_t * ) conU -> buf + idx * dy + left_pad_shift		6759139	2		=			
ANR	6761060	Identifier	dp		6759139	0					
ANR	6761061	AdditiveExpression	( uint16_t * ) conU -> buf + idx * dy + left_pad_shift		6759139	1		+			
ANR	6761062	CastExpression	( uint16_t * ) conU -> buf		6759139	0					
ANR	6761063	CastTarget	uint16_t *		6759139	0					
ANR	6761064	PtrMemberAccess	conU -> buf		6759139	1					
ANR	6761065	Identifier	conU		6759139	0					
ANR	6761066	Identifier	buf		6759139	1					
ANR	6761067	AdditiveExpression	idx * dy + left_pad_shift		6759139	1		+			
ANR	6761068	MultiplicativeExpression	idx * dy		6759139	0		*			
ANR	6761069	Identifier	idx		6759139	0					
ANR	6761070	Identifier	dy		6759139	1					
ANR	6761071	Identifier	left_pad_shift		6759139	1					
ANR	6761072	ExpressionStatement	"write_uint16 ( conU , dp , ( conU -> wid ) / subX )"	2095:16:70281:70322	6759139	1	True				
ANR	6761073	CallExpression	"write_uint16 ( conU , dp , ( conU -> wid ) / subX )"		6759139	0					
ANR	6761074	Callee	write_uint16		6759139	0					
ANR	6761075	Identifier	write_uint16		6759139	0					
ANR	6761076	ArgumentList	conU		6759139	1					
ANR	6761077	Argument	conU		6759139	0					
ANR	6761078	Identifier	conU		6759139	0					
ANR	6761079	Argument	dp		6759139	1					
ANR	6761080	Identifier	dp		6759139	0					
ANR	6761081	Argument	( conU -> wid ) / subX		6759139	2					
ANR	6761082	MultiplicativeExpression	( conU -> wid ) / subX		6759139	0		/			
ANR	6761083	PtrMemberAccess	conU -> wid		6759139	0					
ANR	6761084	Identifier	conU		6759139	0					
ANR	6761085	Identifier	wid		6759139	1					
ANR	6761086	Identifier	subX		6759139	1					
ANR	6761087	ExpressionStatement	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY	2098:12:70373:70449	6759139	10	True				
ANR	6761088	AssignmentExpression	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY		6759139	0		=			
ANR	6761089	Identifier	first		6759139	0					
ANR	6761090	ConditionalExpression	( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining / subY		6759139	1					
ANR	6761091	Condition	con -> top_pad_remaining > yDiv		6759139	0					
ANR	6761092	RelationalExpression	con -> top_pad_remaining > yDiv		6759139	0		>			
ANR	6761093	PtrMemberAccess	con -> top_pad_remaining		6759139	0					
ANR	6761094	Identifier	con		6759139	0					
ANR	6761095	Identifier	top_pad_remaining		6759139	1					
ANR	6761096	Identifier	yDiv		6759139	1					
ANR	6761097	Identifier	yDiv		6759139	1					
ANR	6761098	MultiplicativeExpression	con -> top_pad_remaining / subY		6759139	2		/			
ANR	6761099	PtrMemberAccess	con -> top_pad_remaining		6759139	0					
ANR	6761100	Identifier	con		6759139	0					
ANR	6761101	Identifier	top_pad_remaining		6759139	1					
ANR	6761102	Identifier	subY		6759139	1					
ANR	6761103	ExpressionStatement	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv	2099:12:70463:70562	6759139	11	True				
ANR	6761104	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		6759139	0		=			
ANR	6761105	Identifier	trans		6759139	0					
ANR	6761106	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( ( con -> hei + con -> top_pad ) / subY ) % yDiv : yDiv		6759139	1					
ANR	6761107	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0					
ANR	6761108	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0		>			
ANR	6761109	AdditiveExpression	my * yDiv + yDiv		6759139	0		+			
ANR	6761110	MultiplicativeExpression	my * yDiv		6759139	0		*			
ANR	6761111	Identifier	my		6759139	0					
ANR	6761112	Identifier	yDiv		6759139	1					
ANR	6761113	Identifier	yDiv		6759139	1					
ANR	6761114	AdditiveExpression	con -> hei + con -> top_pad		6759139	1		+			
ANR	6761115	PtrMemberAccess	con -> hei		6759139	0					
ANR	6761116	Identifier	con		6759139	0					
ANR	6761117	Identifier	hei		6759139	1					
ANR	6761118	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6761119	Identifier	con		6759139	0					
ANR	6761120	Identifier	top_pad		6759139	1					
ANR	6761121	MultiplicativeExpression	( ( con -> hei + con -> top_pad ) / subY ) % yDiv		6759139	1		%			
ANR	6761122	MultiplicativeExpression	( con -> hei + con -> top_pad ) / subY		6759139	0		/			
ANR	6761123	AdditiveExpression	con -> hei + con -> top_pad		6759139	0		+			
ANR	6761124	PtrMemberAccess	con -> hei		6759139	0					
ANR	6761125	Identifier	con		6759139	0					
ANR	6761126	Identifier	hei		6759139	1					
ANR	6761127	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6761128	Identifier	con		6759139	0					
ANR	6761129	Identifier	top_pad		6759139	1					
ANR	6761130	Identifier	subY		6759139	1					
ANR	6761131	Identifier	yDiv		6759139	1					
ANR	6761132	Identifier	yDiv		6759139	2					
ANR	6761133	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6759139	12					
ANR	6761134	ForInit	idx = first ;	2100:17:70587:70598	6759139	0	True				
ANR	6761135	AssignmentExpression	idx = first		6759139	0		=			
ANR	6761136	Identifier	idx		6759139	0					
ANR	6761137	Identifier	first		6759139	1					
ANR	6761138	Condition	idx < trans	2100:30:70600:70610	6759139	1	True				
ANR	6761139	RelationalExpression	idx < trans		6759139	0		<			
ANR	6761140	Identifier	idx		6759139	0					
ANR	6761141	Identifier	trans		6759139	1					
ANR	6761142	AssignmentExpression	idx += 1	2100:43:70613:70620	6759139	2	True	+=			
ANR	6761143	Identifier	idx		6759139	0					
ANR	6761144	PrimaryExpression	1		6759139	1					
ANR	6761145	CompoundStatement		266:16:10106:10167	6759139	3					
ANR	6761146	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conV -> buf + idx * dy + left_pad_shift ;	2101:16:70641:70702	6759139	0	True				
ANR	6761147	IdentifierDecl	* dp = ( uint16_t * ) conV -> buf + idx * dy + left_pad_shift		6759139	0					
ANR	6761148	IdentifierDeclType	uint16_t *		6759139	0					
ANR	6761149	Identifier	dp		6759139	1					
ANR	6761150	AssignmentExpression	* dp = ( uint16_t * ) conV -> buf + idx * dy + left_pad_shift		6759139	2		=			
ANR	6761151	Identifier	dp		6759139	0					
ANR	6761152	AdditiveExpression	( uint16_t * ) conV -> buf + idx * dy + left_pad_shift		6759139	1		+			
ANR	6761153	CastExpression	( uint16_t * ) conV -> buf		6759139	0					
ANR	6761154	CastTarget	uint16_t *		6759139	0					
ANR	6761155	PtrMemberAccess	conV -> buf		6759139	1					
ANR	6761156	Identifier	conV		6759139	0					
ANR	6761157	Identifier	buf		6759139	1					
ANR	6761158	AdditiveExpression	idx * dy + left_pad_shift		6759139	1		+			
ANR	6761159	MultiplicativeExpression	idx * dy		6759139	0		*			
ANR	6761160	Identifier	idx		6759139	0					
ANR	6761161	Identifier	dy		6759139	1					
ANR	6761162	Identifier	left_pad_shift		6759139	1					
ANR	6761163	ExpressionStatement	"write_uint16 ( conV , dp , ( conV -> wid ) / subX )"	2102:16:70736:70777	6759139	1	True				
ANR	6761164	CallExpression	"write_uint16 ( conV , dp , ( conV -> wid ) / subX )"		6759139	0					
ANR	6761165	Callee	write_uint16		6759139	0					
ANR	6761166	Identifier	write_uint16		6759139	0					
ANR	6761167	ArgumentList	conV		6759139	1					
ANR	6761168	Argument	conV		6759139	0					
ANR	6761169	Identifier	conV		6759139	0					
ANR	6761170	Argument	dp		6759139	1					
ANR	6761171	Identifier	dp		6759139	0					
ANR	6761172	Argument	( conV -> wid ) / subX		6759139	2					
ANR	6761173	MultiplicativeExpression	( conV -> wid ) / subX		6759139	0		/			
ANR	6761174	PtrMemberAccess	conV -> wid		6759139	0					
ANR	6761175	Identifier	conV		6759139	0					
ANR	6761176	Identifier	wid		6759139	1					
ANR	6761177	Identifier	subX		6759139	1					
ANR	6761178	IfStatement	if ( con -> alpha )		6759139	13					
ANR	6761179	Condition	con -> alpha	2105:15:70828:70837	6759139	0	True				
ANR	6761180	PtrMemberAccess	con -> alpha		6759139	0					
ANR	6761181	Identifier	con		6759139	0					
ANR	6761182	Identifier	alpha		6759139	1					
ANR	6761183	CompoundStatement		271:12:10317:10317	6759139	1					
ANR	6761184	ExpressionStatement	dy = 16 * strip_blocks	2107:16:70870:70890	6759139	0	True				
ANR	6761185	AssignmentExpression	dy = 16 * strip_blocks		6759139	0		=			
ANR	6761186	Identifier	dy		6759139	0					
ANR	6761187	MultiplicativeExpression	16 * strip_blocks		6759139	1		*			
ANR	6761188	PrimaryExpression	16		6759139	0					
ANR	6761189	Identifier	strip_blocks		6759139	1					
ANR	6761190	ExpressionStatement	xDiv = yDiv = 16	2108:16:70908:70924	6759139	1	True				
ANR	6761191	AssignmentExpression	xDiv = yDiv = 16		6759139	0		=			
ANR	6761192	Identifier	xDiv		6759139	0					
ANR	6761193	AssignmentExpression	yDiv = 16		6759139	1		=			
ANR	6761194	Identifier	yDiv		6759139	0					
ANR	6761195	PrimaryExpression	16		6759139	1					
ANR	6761196	ExpressionStatement	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining	2109:16:70942:71013	6759139	2	True				
ANR	6761197	AssignmentExpression	first = ( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		6759139	0		=			
ANR	6761198	Identifier	first		6759139	0					
ANR	6761199	ConditionalExpression	( con -> top_pad_remaining > yDiv ) ? yDiv : con -> top_pad_remaining		6759139	1					
ANR	6761200	Condition	con -> top_pad_remaining > yDiv		6759139	0					
ANR	6761201	RelationalExpression	con -> top_pad_remaining > yDiv		6759139	0		>			
ANR	6761202	PtrMemberAccess	con -> top_pad_remaining		6759139	0					
ANR	6761203	Identifier	con		6759139	0					
ANR	6761204	Identifier	top_pad_remaining		6759139	1					
ANR	6761205	Identifier	yDiv		6759139	1					
ANR	6761206	Identifier	yDiv		6759139	1					
ANR	6761207	PtrMemberAccess	con -> top_pad_remaining		6759139	2					
ANR	6761208	Identifier	con		6759139	0					
ANR	6761209	Identifier	top_pad_remaining		6759139	1					
ANR	6761210	ExpressionStatement	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv	2110:16:71031:71122	6759139	3	True				
ANR	6761211	AssignmentExpression	trans = ( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		6759139	0		=			
ANR	6761212	Identifier	trans		6759139	0					
ANR	6761213	ConditionalExpression	( my * yDiv + yDiv > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % yDiv : yDiv		6759139	1					
ANR	6761214	Condition	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0					
ANR	6761215	RelationalExpression	my * yDiv + yDiv > ( con -> hei + con -> top_pad )		6759139	0		>			
ANR	6761216	AdditiveExpression	my * yDiv + yDiv		6759139	0		+			
ANR	6761217	MultiplicativeExpression	my * yDiv		6759139	0		*			
ANR	6761218	Identifier	my		6759139	0					
ANR	6761219	Identifier	yDiv		6759139	1					
ANR	6761220	Identifier	yDiv		6759139	1					
ANR	6761221	AdditiveExpression	con -> hei + con -> top_pad		6759139	1		+			
ANR	6761222	PtrMemberAccess	con -> hei		6759139	0					
ANR	6761223	Identifier	con		6759139	0					
ANR	6761224	Identifier	hei		6759139	1					
ANR	6761225	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6761226	Identifier	con		6759139	0					
ANR	6761227	Identifier	top_pad		6759139	1					
ANR	6761228	MultiplicativeExpression	( con -> hei + con -> top_pad ) % yDiv		6759139	1		%			
ANR	6761229	AdditiveExpression	con -> hei + con -> top_pad		6759139	0		+			
ANR	6761230	PtrMemberAccess	con -> hei		6759139	0					
ANR	6761231	Identifier	con		6759139	0					
ANR	6761232	Identifier	hei		6759139	1					
ANR	6761233	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6761234	Identifier	con		6759139	0					
ANR	6761235	Identifier	top_pad		6759139	1					
ANR	6761236	Identifier	yDiv		6759139	1					
ANR	6761237	Identifier	yDiv		6759139	2					
ANR	6761238	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6759139	4					
ANR	6761239	ForInit	idx = first ;	2111:21:71151:71162	6759139	0	True				
ANR	6761240	AssignmentExpression	idx = first		6759139	0		=			
ANR	6761241	Identifier	idx		6759139	0					
ANR	6761242	Identifier	first		6759139	1					
ANR	6761243	Condition	idx < trans	2111:34:71164:71174	6759139	1	True				
ANR	6761244	RelationalExpression	idx < trans		6759139	0		<			
ANR	6761245	Identifier	idx		6759139	0					
ANR	6761246	Identifier	trans		6759139	1					
ANR	6761247	AssignmentExpression	idx += 1	2111:47:71177:71184	6759139	2	True	+=			
ANR	6761248	Identifier	idx		6759139	0					
ANR	6761249	PrimaryExpression	1		6759139	1					
ANR	6761250	CompoundStatement		277:20:10674:10734	6759139	3					
ANR	6761251	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conA -> buf + idx * dy + con -> left_pad ;	2112:20:71209:71269	6759139	0	True				
ANR	6761252	IdentifierDecl	* dp = ( uint16_t * ) conA -> buf + idx * dy + con -> left_pad		6759139	0					
ANR	6761253	IdentifierDeclType	uint16_t *		6759139	0					
ANR	6761254	Identifier	dp		6759139	1					
ANR	6761255	AssignmentExpression	* dp = ( uint16_t * ) conA -> buf + idx * dy + con -> left_pad		6759139	2		=			
ANR	6761256	Identifier	dp		6759139	0					
ANR	6761257	AdditiveExpression	( uint16_t * ) conA -> buf + idx * dy + con -> left_pad		6759139	1		+			
ANR	6761258	CastExpression	( uint16_t * ) conA -> buf		6759139	0					
ANR	6761259	CastTarget	uint16_t *		6759139	0					
ANR	6761260	PtrMemberAccess	conA -> buf		6759139	1					
ANR	6761261	Identifier	conA		6759139	0					
ANR	6761262	Identifier	buf		6759139	1					
ANR	6761263	AdditiveExpression	idx * dy + con -> left_pad		6759139	1		+			
ANR	6761264	MultiplicativeExpression	idx * dy		6759139	0		*			
ANR	6761265	Identifier	idx		6759139	0					
ANR	6761266	Identifier	dy		6759139	1					
ANR	6761267	PtrMemberAccess	con -> left_pad		6759139	1					
ANR	6761268	Identifier	con		6759139	0					
ANR	6761269	Identifier	left_pad		6759139	1					
ANR	6761270	ExpressionStatement	"write_uint16 ( conA , dp , conA -> wid )"	2113:20:71323:71356	6759139	1	True				
ANR	6761271	CallExpression	"write_uint16 ( conA , dp , conA -> wid )"		6759139	0					
ANR	6761272	Callee	write_uint16		6759139	0					
ANR	6761273	Identifier	write_uint16		6759139	0					
ANR	6761274	ArgumentList	conA		6759139	1					
ANR	6761275	Argument	conA		6759139	0					
ANR	6761276	Identifier	conA		6759139	0					
ANR	6761277	Argument	dp		6759139	1					
ANR	6761278	Identifier	dp		6759139	0					
ANR	6761279	Argument	conA -> wid		6759139	2					
ANR	6761280	PtrMemberAccess	conA -> wid		6759139	0					
ANR	6761281	Identifier	conA		6759139	0					
ANR	6761282	Identifier	wid		6759139	1					
ANR	6761283	ExpressionStatement	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining	2116:12:71418:71485	6759139	14	True				
ANR	6761284	AssignmentExpression	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		6759139	0		=			
ANR	6761285	Identifier	first		6759139	0					
ANR	6761286	ConditionalExpression	( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		6759139	1					
ANR	6761287	Condition	con -> top_pad_remaining > 16		6759139	0					
ANR	6761288	RelationalExpression	con -> top_pad_remaining > 16		6759139	0		>			
ANR	6761289	PtrMemberAccess	con -> top_pad_remaining		6759139	0					
ANR	6761290	Identifier	con		6759139	0					
ANR	6761291	Identifier	top_pad_remaining		6759139	1					
ANR	6761292	PrimaryExpression	16		6759139	1					
ANR	6761293	PrimaryExpression	16		6759139	1					
ANR	6761294	PtrMemberAccess	con -> top_pad_remaining		6759139	2					
ANR	6761295	Identifier	con		6759139	0					
ANR	6761296	Identifier	top_pad_remaining		6759139	1					
ANR	6761297	ExpressionStatement	con -> top_pad_remaining -= first	2117:12:71499:71530	6759139	15	True				
ANR	6761298	AssignmentExpression	con -> top_pad_remaining -= first		6759139	0		-=			
ANR	6761299	PtrMemberAccess	con -> top_pad_remaining		6759139	0					
ANR	6761300	Identifier	con		6759139	0					
ANR	6761301	Identifier	top_pad_remaining		6759139	1					
ANR	6761302	Identifier	first		6759139	1					
ANR	6761303	ElseStatement	else		6759139	0					
ANR	6761304	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2120:12:71573:71606	6759139	0	True				
ANR	6761305	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		6759139	0					
ANR	6761306	Callee	assert		6759139	0					
ANR	6761307	Identifier	assert		6759139	0					
ANR	6761308	ArgumentList	"! ""Unsupported bitdepth\\n"""		6759139	1					
ANR	6761309	Argument	"! ""Unsupported bitdepth\\n"""		6759139	0					
ANR	6761310	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		6759139	0					
ANR	6761311	UnaryOperator	!		6759139	0					
ANR	6761312	PrimaryExpression	"""Unsupported bitdepth\\n"""		6759139	1					
ANR	6761313	IfStatement	if ( my * 16 + 16 >= ( con -> hei + con -> top_pad ) && mx + 1 == strip_blocks )		6759139	19					
ANR	6761314	Condition	my * 16 + 16 >= ( con -> hei + con -> top_pad ) && mx + 1 == strip_blocks	2122:7:71621:71684	6759139	0	True				
ANR	6761315	AndExpression	my * 16 + 16 >= ( con -> hei + con -> top_pad ) && mx + 1 == strip_blocks		6759139	0		&&			
ANR	6761316	RelationalExpression	my * 16 + 16 >= ( con -> hei + con -> top_pad )		6759139	0		>=			
ANR	6761317	AdditiveExpression	my * 16 + 16		6759139	0		+			
ANR	6761318	MultiplicativeExpression	my * 16		6759139	0		*			
ANR	6761319	Identifier	my		6759139	0					
ANR	6761320	PrimaryExpression	16		6759139	1					
ANR	6761321	PrimaryExpression	16		6759139	1					
ANR	6761322	AdditiveExpression	con -> hei + con -> top_pad		6759139	1		+			
ANR	6761323	PtrMemberAccess	con -> hei		6759139	0					
ANR	6761324	Identifier	con		6759139	0					
ANR	6761325	Identifier	hei		6759139	1					
ANR	6761326	PtrMemberAccess	con -> top_pad		6759139	1					
ANR	6761327	Identifier	con		6759139	0					
ANR	6761328	Identifier	top_pad		6759139	1					
ANR	6761329	EqualityExpression	mx + 1 == strip_blocks		6759139	1		==			
ANR	6761330	AdditiveExpression	mx + 1		6759139	0		+			
ANR	6761331	Identifier	mx		6759139	0					
ANR	6761332	PrimaryExpression	1		6759139	1					
ANR	6761333	Identifier	strip_blocks		6759139	1					
ANR	6761334	CompoundStatement		292:8:11278:11285	6759139	1					
ANR	6761335	IdentifierDeclStatement	long size = ftell ( conY -> file ) ;	2125:8:71737:71766	6759139	0	True				
ANR	6761336	IdentifierDecl	size = ftell ( conY -> file )		6759139	0					
ANR	6761337	IdentifierDeclType	long		6759139	0					
ANR	6761338	Identifier	size		6759139	1					
ANR	6761339	AssignmentExpression	size = ftell ( conY -> file )		6759139	2		=			
ANR	6761340	Identifier	size		6759139	0					
ANR	6761341	CallExpression	ftell ( conY -> file )		6759139	1					
ANR	6761342	Callee	ftell		6759139	0					
ANR	6761343	Identifier	ftell		6759139	0					
ANR	6761344	ArgumentList	conY -> file		6759139	1					
ANR	6761345	Argument	conY -> file		6759139	0					
ANR	6761346	PtrMemberAccess	conY -> file		6759139	0					
ANR	6761347	Identifier	conY		6759139	0					
ANR	6761348	Identifier	file		6759139	1					
ANR	6761349	ExpressionStatement	"fseek ( conY -> file , 0 , 0 )"	2126:8:71778:71801	6759139	1	True				
ANR	6761350	CallExpression	"fseek ( conY -> file , 0 , 0 )"		6759139	0					
ANR	6761351	Callee	fseek		6759139	0					
ANR	6761352	Identifier	fseek		6759139	0					
ANR	6761353	ArgumentList	conY -> file		6759139	1					
ANR	6761354	Argument	conY -> file		6759139	0					
ANR	6761355	PtrMemberAccess	conY -> file		6759139	0					
ANR	6761356	Identifier	conY		6759139	0					
ANR	6761357	Identifier	file		6759139	1					
ANR	6761358	Argument	0		6759139	1					
ANR	6761359	PrimaryExpression	0		6759139	0					
ANR	6761360	Argument	0		6759139	2					
ANR	6761361	PrimaryExpression	0		6759139	0					
ANR	6761362	IdentifierDeclStatement	long ii ;	2127:8:71813:71820	6759139	2	True				
ANR	6761363	IdentifierDecl	ii		6759139	0					
ANR	6761364	IdentifierDeclType	long		6759139	0					
ANR	6761365	Identifier	ii		6759139	1					
ANR	6761366	ForStatement	for ( ii = 0 ; ii < size ; ii ++ )		6759139	3					
ANR	6761367	ForInit	ii = 0 ;	2128:12:71834:71840	6759139	0	True				
ANR	6761368	AssignmentExpression	ii = 0		6759139	0		=			
ANR	6761369	Identifier	ii		6759139	0					
ANR	6761370	PrimaryExpression	0		6759139	1					
ANR	6761371	Condition	ii < size	2128:20:71842:71850	6759139	1	True				
ANR	6761372	RelationalExpression	ii < size		6759139	0		<			
ANR	6761373	Identifier	ii		6759139	0					
ANR	6761374	Identifier	size		6759139	1					
ANR	6761375	PostIncDecOperationExpression	ii ++	2128:31:71853:71856	6759139	2	True				
ANR	6761376	Identifier	ii		6759139	0					
ANR	6761377	IncDec	++		6759139	1					
ANR	6761378	CompoundStatement		295:12:11346:11357	6759139	3					
ANR	6761379	IdentifierDeclStatement	uint8_t val ;	2130:12:71881:71892	6759139	0	True				
ANR	6761380	IdentifierDecl	val		6759139	0					
ANR	6761381	IdentifierDeclType	uint8_t		6759139	0					
ANR	6761382	Identifier	val		6759139	1					
ANR	6761383	ExpressionStatement	"fread ( & val , 1 , 1 , conY -> file )"	2131:12:71906:71935	6759139	1	True				
ANR	6761384	CallExpression	"fread ( & val , 1 , 1 , conY -> file )"		6759139	0					
ANR	6761385	Callee	fread		6759139	0					
ANR	6761386	Identifier	fread		6759139	0					
ANR	6761387	ArgumentList	& val		6759139	1					
ANR	6761388	Argument	& val		6759139	0					
ANR	6761389	UnaryOperationExpression	& val		6759139	0					
ANR	6761390	UnaryOperator	&		6759139	0					
ANR	6761391	Identifier	val		6759139	1					
ANR	6761392	Argument	1		6759139	1					
ANR	6761393	PrimaryExpression	1		6759139	0					
ANR	6761394	Argument	1		6759139	2					
ANR	6761395	PrimaryExpression	1		6759139	0					
ANR	6761396	Argument	conY -> file		6759139	3					
ANR	6761397	PtrMemberAccess	conY -> file		6759139	0					
ANR	6761398	Identifier	conY		6759139	0					
ANR	6761399	Identifier	file		6759139	1					
ANR	6761400	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2132:12:71949:71978	6759139	2	True				
ANR	6761401	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		6759139	0					
ANR	6761402	Callee	fwrite		6759139	0					
ANR	6761403	Identifier	fwrite		6759139	0					
ANR	6761404	ArgumentList	& val		6759139	1					
ANR	6761405	Argument	& val		6759139	0					
ANR	6761406	UnaryOperationExpression	& val		6759139	0					
ANR	6761407	UnaryOperator	&		6759139	0					
ANR	6761408	Identifier	val		6759139	1					
ANR	6761409	Argument	1		6759139	1					
ANR	6761410	PrimaryExpression	1		6759139	0					
ANR	6761411	Argument	1		6759139	2					
ANR	6761412	PrimaryExpression	1		6759139	0					
ANR	6761413	Argument	con -> file		6759139	3					
ANR	6761414	PtrMemberAccess	con -> file		6759139	0					
ANR	6761415	Identifier	con		6759139	0					
ANR	6761416	Identifier	file		6759139	1					
ANR	6761417	ExpressionStatement	size = ftell ( conU -> file )	2134:8:71998:72022	6759139	4	True				
ANR	6761418	AssignmentExpression	size = ftell ( conU -> file )		6759139	0		=			
ANR	6761419	Identifier	size		6759139	0					
ANR	6761420	CallExpression	ftell ( conU -> file )		6759139	1					
ANR	6761421	Callee	ftell		6759139	0					
ANR	6761422	Identifier	ftell		6759139	0					
ANR	6761423	ArgumentList	conU -> file		6759139	1					
ANR	6761424	Argument	conU -> file		6759139	0					
ANR	6761425	PtrMemberAccess	conU -> file		6759139	0					
ANR	6761426	Identifier	conU		6759139	0					
ANR	6761427	Identifier	file		6759139	1					
ANR	6761428	ExpressionStatement	"fseek ( conU -> file , 0 , 0 )"	2135:8:72032:72055	6759139	5	True				
ANR	6761429	CallExpression	"fseek ( conU -> file , 0 , 0 )"		6759139	0					
ANR	6761430	Callee	fseek		6759139	0					
ANR	6761431	Identifier	fseek		6759139	0					
ANR	6761432	ArgumentList	conU -> file		6759139	1					
ANR	6761433	Argument	conU -> file		6759139	0					
ANR	6761434	PtrMemberAccess	conU -> file		6759139	0					
ANR	6761435	Identifier	conU		6759139	0					
ANR	6761436	Identifier	file		6759139	1					
ANR	6761437	Argument	0		6759139	1					
ANR	6761438	PrimaryExpression	0		6759139	0					
ANR	6761439	Argument	0		6759139	2					
ANR	6761440	PrimaryExpression	0		6759139	0					
ANR	6761441	ForStatement	for ( ii = 0 ; ii < size ; ii ++ )		6759139	6					
ANR	6761442	ForInit	ii = 0 ;	2136:13:72078:72084	6759139	0	True				
ANR	6761443	AssignmentExpression	ii = 0		6759139	0		=			
ANR	6761444	Identifier	ii		6759139	0					
ANR	6761445	PrimaryExpression	0		6759139	1					
ANR	6761446	Condition	ii < size	2136:21:72086:72094	6759139	1	True				
ANR	6761447	RelationalExpression	ii < size		6759139	0		<			
ANR	6761448	Identifier	ii		6759139	0					
ANR	6761449	Identifier	size		6759139	1					
ANR	6761450	PostIncDecOperationExpression	ii ++	2136:32:72097:72100	6759139	2	True				
ANR	6761451	Identifier	ii		6759139	0					
ANR	6761452	IncDec	++		6759139	1					
ANR	6761453	CompoundStatement		303:12:11590:11601	6759139	3					
ANR	6761454	IdentifierDeclStatement	uint8_t val ;	2138:12:72125:72136	6759139	0	True				
ANR	6761455	IdentifierDecl	val		6759139	0					
ANR	6761456	IdentifierDeclType	uint8_t		6759139	0					
ANR	6761457	Identifier	val		6759139	1					
ANR	6761458	ExpressionStatement	"fread ( & val , 1 , 1 , conU -> file )"	2139:12:72150:72179	6759139	1	True				
ANR	6761459	CallExpression	"fread ( & val , 1 , 1 , conU -> file )"		6759139	0					
ANR	6761460	Callee	fread		6759139	0					
ANR	6761461	Identifier	fread		6759139	0					
ANR	6761462	ArgumentList	& val		6759139	1					
ANR	6761463	Argument	& val		6759139	0					
ANR	6761464	UnaryOperationExpression	& val		6759139	0					
ANR	6761465	UnaryOperator	&		6759139	0					
ANR	6761466	Identifier	val		6759139	1					
ANR	6761467	Argument	1		6759139	1					
ANR	6761468	PrimaryExpression	1		6759139	0					
ANR	6761469	Argument	1		6759139	2					
ANR	6761470	PrimaryExpression	1		6759139	0					
ANR	6761471	Argument	conU -> file		6759139	3					
ANR	6761472	PtrMemberAccess	conU -> file		6759139	0					
ANR	6761473	Identifier	conU		6759139	0					
ANR	6761474	Identifier	file		6759139	1					
ANR	6761475	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2140:12:72193:72222	6759139	2	True				
ANR	6761476	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		6759139	0					
ANR	6761477	Callee	fwrite		6759139	0					
ANR	6761478	Identifier	fwrite		6759139	0					
ANR	6761479	ArgumentList	& val		6759139	1					
ANR	6761480	Argument	& val		6759139	0					
ANR	6761481	UnaryOperationExpression	& val		6759139	0					
ANR	6761482	UnaryOperator	&		6759139	0					
ANR	6761483	Identifier	val		6759139	1					
ANR	6761484	Argument	1		6759139	1					
ANR	6761485	PrimaryExpression	1		6759139	0					
ANR	6761486	Argument	1		6759139	2					
ANR	6761487	PrimaryExpression	1		6759139	0					
ANR	6761488	Argument	con -> file		6759139	3					
ANR	6761489	PtrMemberAccess	con -> file		6759139	0					
ANR	6761490	Identifier	con		6759139	0					
ANR	6761491	Identifier	file		6759139	1					
ANR	6761492	ExpressionStatement	size = ftell ( conV -> file )	2142:8:72242:72266	6759139	7	True				
ANR	6761493	AssignmentExpression	size = ftell ( conV -> file )		6759139	0		=			
ANR	6761494	Identifier	size		6759139	0					
ANR	6761495	CallExpression	ftell ( conV -> file )		6759139	1					
ANR	6761496	Callee	ftell		6759139	0					
ANR	6761497	Identifier	ftell		6759139	0					
ANR	6761498	ArgumentList	conV -> file		6759139	1					
ANR	6761499	Argument	conV -> file		6759139	0					
ANR	6761500	PtrMemberAccess	conV -> file		6759139	0					
ANR	6761501	Identifier	conV		6759139	0					
ANR	6761502	Identifier	file		6759139	1					
ANR	6761503	ExpressionStatement	"fseek ( conV -> file , 0 , 0 )"	2143:8:72276:72299	6759139	8	True				
ANR	6761504	CallExpression	"fseek ( conV -> file , 0 , 0 )"		6759139	0					
ANR	6761505	Callee	fseek		6759139	0					
ANR	6761506	Identifier	fseek		6759139	0					
ANR	6761507	ArgumentList	conV -> file		6759139	1					
ANR	6761508	Argument	conV -> file		6759139	0					
ANR	6761509	PtrMemberAccess	conV -> file		6759139	0					
ANR	6761510	Identifier	conV		6759139	0					
ANR	6761511	Identifier	file		6759139	1					
ANR	6761512	Argument	0		6759139	1					
ANR	6761513	PrimaryExpression	0		6759139	0					
ANR	6761514	Argument	0		6759139	2					
ANR	6761515	PrimaryExpression	0		6759139	0					
ANR	6761516	ForStatement	for ( ii = 0 ; ii < size ; ii ++ )		6759139	9					
ANR	6761517	ForInit	ii = 0 ;	2144:13:72314:72320	6759139	0	True				
ANR	6761518	AssignmentExpression	ii = 0		6759139	0		=			
ANR	6761519	Identifier	ii		6759139	0					
ANR	6761520	PrimaryExpression	0		6759139	1					
ANR	6761521	Condition	ii < size	2144:21:72322:72330	6759139	1	True				
ANR	6761522	RelationalExpression	ii < size		6759139	0		<			
ANR	6761523	Identifier	ii		6759139	0					
ANR	6761524	Identifier	size		6759139	1					
ANR	6761525	PostIncDecOperationExpression	ii ++	2144:32:72333:72336	6759139	2	True				
ANR	6761526	Identifier	ii		6759139	0					
ANR	6761527	IncDec	++		6759139	1					
ANR	6761528	CompoundStatement		311:12:11826:11837	6759139	3					
ANR	6761529	IdentifierDeclStatement	uint8_t val ;	2146:12:72361:72372	6759139	0	True				
ANR	6761530	IdentifierDecl	val		6759139	0					
ANR	6761531	IdentifierDeclType	uint8_t		6759139	0					
ANR	6761532	Identifier	val		6759139	1					
ANR	6761533	ExpressionStatement	"fread ( & val , 1 , 1 , conV -> file )"	2147:12:72386:72415	6759139	1	True				
ANR	6761534	CallExpression	"fread ( & val , 1 , 1 , conV -> file )"		6759139	0					
ANR	6761535	Callee	fread		6759139	0					
ANR	6761536	Identifier	fread		6759139	0					
ANR	6761537	ArgumentList	& val		6759139	1					
ANR	6761538	Argument	& val		6759139	0					
ANR	6761539	UnaryOperationExpression	& val		6759139	0					
ANR	6761540	UnaryOperator	&		6759139	0					
ANR	6761541	Identifier	val		6759139	1					
ANR	6761542	Argument	1		6759139	1					
ANR	6761543	PrimaryExpression	1		6759139	0					
ANR	6761544	Argument	1		6759139	2					
ANR	6761545	PrimaryExpression	1		6759139	0					
ANR	6761546	Argument	conV -> file		6759139	3					
ANR	6761547	PtrMemberAccess	conV -> file		6759139	0					
ANR	6761548	Identifier	conV		6759139	0					
ANR	6761549	Identifier	file		6759139	1					
ANR	6761550	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2148:12:72429:72458	6759139	2	True				
ANR	6761551	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		6759139	0					
ANR	6761552	Callee	fwrite		6759139	0					
ANR	6761553	Identifier	fwrite		6759139	0					
ANR	6761554	ArgumentList	& val		6759139	1					
ANR	6761555	Argument	& val		6759139	0					
ANR	6761556	UnaryOperationExpression	& val		6759139	0					
ANR	6761557	UnaryOperator	&		6759139	0					
ANR	6761558	Identifier	val		6759139	1					
ANR	6761559	Argument	1		6759139	1					
ANR	6761560	PrimaryExpression	1		6759139	0					
ANR	6761561	Argument	1		6759139	2					
ANR	6761562	PrimaryExpression	1		6759139	0					
ANR	6761563	Argument	con -> file		6759139	3					
ANR	6761564	PtrMemberAccess	con -> file		6759139	0					
ANR	6761565	Identifier	con		6759139	0					
ANR	6761566	Identifier	file		6759139	1					
ANR	6761567	IfStatement	if ( con -> alpha )		6759139	10					
ANR	6761568	Condition	con -> alpha	2150:11:72481:72490	6759139	0	True				
ANR	6761569	PtrMemberAccess	con -> alpha		6759139	0					
ANR	6761570	Identifier	con		6759139	0					
ANR	6761571	Identifier	alpha		6759139	1					
ANR	6761572	CompoundStatement		316:8:11966:11966	6759139	1					
ANR	6761573	ExpressionStatement	size = ftell ( conA -> file )	2152:12:72515:72539	6759139	0	True				
ANR	6761574	AssignmentExpression	size = ftell ( conA -> file )		6759139	0		=			
ANR	6761575	Identifier	size		6759139	0					
ANR	6761576	CallExpression	ftell ( conA -> file )		6759139	1					
ANR	6761577	Callee	ftell		6759139	0					
ANR	6761578	Identifier	ftell		6759139	0					
ANR	6761579	ArgumentList	conA -> file		6759139	1					
ANR	6761580	Argument	conA -> file		6759139	0					
ANR	6761581	PtrMemberAccess	conA -> file		6759139	0					
ANR	6761582	Identifier	conA		6759139	0					
ANR	6761583	Identifier	file		6759139	1					
ANR	6761584	ExpressionStatement	"fseek ( conA -> file , 0 , 0 )"	2153:12:72553:72576	6759139	1	True				
ANR	6761585	CallExpression	"fseek ( conA -> file , 0 , 0 )"		6759139	0					
ANR	6761586	Callee	fseek		6759139	0					
ANR	6761587	Identifier	fseek		6759139	0					
ANR	6761588	ArgumentList	conA -> file		6759139	1					
ANR	6761589	Argument	conA -> file		6759139	0					
ANR	6761590	PtrMemberAccess	conA -> file		6759139	0					
ANR	6761591	Identifier	conA		6759139	0					
ANR	6761592	Identifier	file		6759139	1					
ANR	6761593	Argument	0		6759139	1					
ANR	6761594	PrimaryExpression	0		6759139	0					
ANR	6761595	Argument	0		6759139	2					
ANR	6761596	PrimaryExpression	0		6759139	0					
ANR	6761597	ForStatement	for ( ii = 0 ; ii < size && con -> alpha ; ii ++ )		6759139	2					
ANR	6761598	ForInit	ii = 0 ;	2154:17:72607:72613	6759139	0	True				
ANR	6761599	AssignmentExpression	ii = 0		6759139	0		=			
ANR	6761600	Identifier	ii		6759139	0					
ANR	6761601	PrimaryExpression	0		6759139	1					
ANR	6761602	Condition	ii < size && con -> alpha	2154:25:72615:72637	6759139	1	True				
ANR	6761603	AndExpression	ii < size && con -> alpha		6759139	0		&&			
ANR	6761604	RelationalExpression	ii < size		6759139	0		<			
ANR	6761605	Identifier	ii		6759139	0					
ANR	6761606	Identifier	size		6759139	1					
ANR	6761607	PtrMemberAccess	con -> alpha		6759139	1					
ANR	6761608	Identifier	con		6759139	0					
ANR	6761609	Identifier	alpha		6759139	1					
ANR	6761610	PostIncDecOperationExpression	ii ++	2154:50:72640:72643	6759139	2	True				
ANR	6761611	Identifier	ii		6759139	0					
ANR	6761612	IncDec	++		6759139	1					
ANR	6761613	CompoundStatement		321:16:12141:12152	6759139	3					
ANR	6761614	IdentifierDeclStatement	uint8_t val ;	2156:16:72676:72687	6759139	0	True				
ANR	6761615	IdentifierDecl	val		6759139	0					
ANR	6761616	IdentifierDeclType	uint8_t		6759139	0					
ANR	6761617	Identifier	val		6759139	1					
ANR	6761618	ExpressionStatement	"fread ( & val , 1 , 1 , conA -> file )"	2157:16:72705:72734	6759139	1	True				
ANR	6761619	CallExpression	"fread ( & val , 1 , 1 , conA -> file )"		6759139	0					
ANR	6761620	Callee	fread		6759139	0					
ANR	6761621	Identifier	fread		6759139	0					
ANR	6761622	ArgumentList	& val		6759139	1					
ANR	6761623	Argument	& val		6759139	0					
ANR	6761624	UnaryOperationExpression	& val		6759139	0					
ANR	6761625	UnaryOperator	&		6759139	0					
ANR	6761626	Identifier	val		6759139	1					
ANR	6761627	Argument	1		6759139	1					
ANR	6761628	PrimaryExpression	1		6759139	0					
ANR	6761629	Argument	1		6759139	2					
ANR	6761630	PrimaryExpression	1		6759139	0					
ANR	6761631	Argument	conA -> file		6759139	3					
ANR	6761632	PtrMemberAccess	conA -> file		6759139	0					
ANR	6761633	Identifier	conA		6759139	0					
ANR	6761634	Identifier	file		6759139	1					
ANR	6761635	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2158:16:72752:72781	6759139	2	True				
ANR	6761636	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		6759139	0					
ANR	6761637	Callee	fwrite		6759139	0					
ANR	6761638	Identifier	fwrite		6759139	0					
ANR	6761639	ArgumentList	& val		6759139	1					
ANR	6761640	Argument	& val		6759139	0					
ANR	6761641	UnaryOperationExpression	& val		6759139	0					
ANR	6761642	UnaryOperator	&		6759139	0					
ANR	6761643	Identifier	val		6759139	1					
ANR	6761644	Argument	1		6759139	1					
ANR	6761645	PrimaryExpression	1		6759139	0					
ANR	6761646	Argument	1		6759139	2					
ANR	6761647	PrimaryExpression	1		6759139	0					
ANR	6761648	Argument	con -> file		6759139	3					
ANR	6761649	PtrMemberAccess	con -> file		6759139	0					
ANR	6761650	Identifier	con		6759139	0					
ANR	6761651	Identifier	file		6759139	1					
ANR	6761652	ExpressionStatement	fclose ( conY -> file )	2161:8:72815:72833	6759139	11	True				
ANR	6761653	CallExpression	fclose ( conY -> file )		6759139	0					
ANR	6761654	Callee	fclose		6759139	0					
ANR	6761655	Identifier	fclose		6759139	0					
ANR	6761656	ArgumentList	conY -> file		6759139	1					
ANR	6761657	Argument	conY -> file		6759139	0					
ANR	6761658	PtrMemberAccess	conY -> file		6759139	0					
ANR	6761659	Identifier	conY		6759139	0					
ANR	6761660	Identifier	file		6759139	1					
ANR	6761661	ExpressionStatement	fclose ( conU -> file )	2162:8:72843:72861	6759139	12	True				
ANR	6761662	CallExpression	fclose ( conU -> file )		6759139	0					
ANR	6761663	Callee	fclose		6759139	0					
ANR	6761664	Identifier	fclose		6759139	0					
ANR	6761665	ArgumentList	conU -> file		6759139	1					
ANR	6761666	Argument	conU -> file		6759139	0					
ANR	6761667	PtrMemberAccess	conU -> file		6759139	0					
ANR	6761668	Identifier	conU		6759139	0					
ANR	6761669	Identifier	file		6759139	1					
ANR	6761670	ExpressionStatement	fclose ( conV -> file )	2163:8:72871:72889	6759139	13	True				
ANR	6761671	CallExpression	fclose ( conV -> file )		6759139	0					
ANR	6761672	Callee	fclose		6759139	0					
ANR	6761673	Identifier	fclose		6759139	0					
ANR	6761674	ArgumentList	conV -> file		6759139	1					
ANR	6761675	Argument	conV -> file		6759139	0					
ANR	6761676	PtrMemberAccess	conV -> file		6759139	0					
ANR	6761677	Identifier	conV		6759139	0					
ANR	6761678	Identifier	file		6759139	1					
ANR	6761679	IfStatement	if ( con -> alpha )		6759139	14					
ANR	6761680	Condition	con -> alpha	2164:11:72902:72911	6759139	0	True				
ANR	6761681	PtrMemberAccess	con -> alpha		6759139	0					
ANR	6761682	Identifier	con		6759139	0					
ANR	6761683	Identifier	alpha		6759139	1					
ANR	6761684	ExpressionStatement	fclose ( conA -> file )	2165:12:72926:72944	6759139	1	True				
ANR	6761685	CallExpression	fclose ( conA -> file )		6759139	0					
ANR	6761686	Callee	fclose		6759139	0					
ANR	6761687	Identifier	fclose		6759139	0					
ANR	6761688	ArgumentList	conA -> file		6759139	1					
ANR	6761689	Argument	conA -> file		6759139	0					
ANR	6761690	PtrMemberAccess	conA -> file		6759139	0					
ANR	6761691	Identifier	conA		6759139	0					
ANR	6761692	Identifier	file		6759139	1					
ANR	6761693	ExpressionStatement	free ( conY -> buf )	2167:8:72955:72970	6759139	15	True				
ANR	6761694	CallExpression	free ( conY -> buf )		6759139	0					
ANR	6761695	Callee	free		6759139	0					
ANR	6761696	Identifier	free		6759139	0					
ANR	6761697	ArgumentList	conY -> buf		6759139	1					
ANR	6761698	Argument	conY -> buf		6759139	0					
ANR	6761699	PtrMemberAccess	conY -> buf		6759139	0					
ANR	6761700	Identifier	conY		6759139	0					
ANR	6761701	Identifier	buf		6759139	1					
ANR	6761702	ExpressionStatement	free ( conU -> buf )	2168:8:72980:72995	6759139	16	True				
ANR	6761703	CallExpression	free ( conU -> buf )		6759139	0					
ANR	6761704	Callee	free		6759139	0					
ANR	6761705	Identifier	free		6759139	0					
ANR	6761706	ArgumentList	conU -> buf		6759139	1					
ANR	6761707	Argument	conU -> buf		6759139	0					
ANR	6761708	PtrMemberAccess	conU -> buf		6759139	0					
ANR	6761709	Identifier	conU		6759139	0					
ANR	6761710	Identifier	buf		6759139	1					
ANR	6761711	ExpressionStatement	free ( conV -> buf )	2169:8:73005:73020	6759139	17	True				
ANR	6761712	CallExpression	free ( conV -> buf )		6759139	0					
ANR	6761713	Callee	free		6759139	0					
ANR	6761714	Identifier	free		6759139	0					
ANR	6761715	ArgumentList	conV -> buf		6759139	1					
ANR	6761716	Argument	conV -> buf		6759139	0					
ANR	6761717	PtrMemberAccess	conV -> buf		6759139	0					
ANR	6761718	Identifier	conV		6759139	0					
ANR	6761719	Identifier	buf		6759139	1					
ANR	6761720	IfStatement	if ( con -> alpha )		6759139	18					
ANR	6761721	Condition	con -> alpha	2170:11:73033:73042	6759139	0	True				
ANR	6761722	PtrMemberAccess	con -> alpha		6759139	0					
ANR	6761723	Identifier	con		6759139	0					
ANR	6761724	Identifier	alpha		6759139	1					
ANR	6761725	ExpressionStatement	free ( conA -> buf )	2171:12:73057:73072	6759139	1	True				
ANR	6761726	CallExpression	free ( conA -> buf )		6759139	0					
ANR	6761727	Callee	free		6759139	0					
ANR	6761728	Identifier	free		6759139	0					
ANR	6761729	ArgumentList	conA -> buf		6759139	1					
ANR	6761730	Argument	conA -> buf		6759139	0					
ANR	6761731	PtrMemberAccess	conA -> buf		6759139	0					
ANR	6761732	Identifier	conA		6759139	0					
ANR	6761733	Identifier	buf		6759139	1					
ANR	6761734	ExpressionStatement	free ( conY )	2173:8:73083:73093	6759139	19	True				
ANR	6761735	CallExpression	free ( conY )		6759139	0					
ANR	6761736	Callee	free		6759139	0					
ANR	6761737	Identifier	free		6759139	0					
ANR	6761738	ArgumentList	conY		6759139	1					
ANR	6761739	Argument	conY		6759139	0					
ANR	6761740	Identifier	conY		6759139	0					
ANR	6761741	ExpressionStatement	free ( conU )	2174:8:73103:73113	6759139	20	True				
ANR	6761742	CallExpression	free ( conU )		6759139	0					
ANR	6761743	Callee	free		6759139	0					
ANR	6761744	Identifier	free		6759139	0					
ANR	6761745	ArgumentList	conU		6759139	1					
ANR	6761746	Argument	conU		6759139	0					
ANR	6761747	Identifier	conU		6759139	0					
ANR	6761748	ExpressionStatement	free ( conV )	2175:8:73123:73133	6759139	21	True				
ANR	6761749	CallExpression	free ( conV )		6759139	0					
ANR	6761750	Callee	free		6759139	0					
ANR	6761751	Identifier	free		6759139	0					
ANR	6761752	ArgumentList	conV		6759139	1					
ANR	6761753	Argument	conV		6759139	0					
ANR	6761754	Identifier	conV		6759139	0					
ANR	6761755	IfStatement	if ( con -> alpha )		6759139	22					
ANR	6761756	Condition	con -> alpha	2176:11:73146:73155	6759139	0	True				
ANR	6761757	PtrMemberAccess	con -> alpha		6759139	0					
ANR	6761758	Identifier	con		6759139	0					
ANR	6761759	Identifier	alpha		6759139	1					
ANR	6761760	ExpressionStatement	free ( conA )	2177:12:73170:73180	6759139	1	True				
ANR	6761761	CallExpression	free ( conA )		6759139	0					
ANR	6761762	Callee	free		6759139	0					
ANR	6761763	Identifier	free		6759139	0					
ANR	6761764	ArgumentList	conA		6759139	1					
ANR	6761765	Argument	conA		6759139	0					
ANR	6761766	Identifier	conA		6759139	0					
ANR	6761767	ExpressionStatement	"remove ( ""Y.raw"" )"	2179:8:73199:73214	6759139	23	True				
ANR	6761768	CallExpression	"remove ( ""Y.raw"" )"		6759139	0					
ANR	6761769	Callee	remove		6759139	0					
ANR	6761770	Identifier	remove		6759139	0					
ANR	6761771	ArgumentList	"""Y.raw"""		6759139	1					
ANR	6761772	Argument	"""Y.raw"""		6759139	0					
ANR	6761773	PrimaryExpression	"""Y.raw"""		6759139	0					
ANR	6761774	ExpressionStatement	"remove ( ""U.raw"" )"	2180:8:73224:73239	6759139	24	True				
ANR	6761775	CallExpression	"remove ( ""U.raw"" )"		6759139	0					
ANR	6761776	Callee	remove		6759139	0					
ANR	6761777	Identifier	remove		6759139	0					
ANR	6761778	ArgumentList	"""U.raw"""		6759139	1					
ANR	6761779	Argument	"""U.raw"""		6759139	0					
ANR	6761780	PrimaryExpression	"""U.raw"""		6759139	0					
ANR	6761781	ExpressionStatement	"remove ( ""V.raw"" )"	2181:8:73249:73264	6759139	25	True				
ANR	6761782	CallExpression	"remove ( ""V.raw"" )"		6759139	0					
ANR	6761783	Callee	remove		6759139	0					
ANR	6761784	Identifier	remove		6759139	0					
ANR	6761785	ArgumentList	"""V.raw"""		6759139	1					
ANR	6761786	Argument	"""V.raw"""		6759139	0					
ANR	6761787	PrimaryExpression	"""V.raw"""		6759139	0					
ANR	6761788	IfStatement	if ( con -> alpha )		6759139	26					
ANR	6761789	Condition	con -> alpha	2182:11:73277:73286	6759139	0	True				
ANR	6761790	PtrMemberAccess	con -> alpha		6759139	0					
ANR	6761791	Identifier	con		6759139	0					
ANR	6761792	Identifier	alpha		6759139	1					
ANR	6761793	ExpressionStatement	"remove ( ""A.raw"" )"	2183:12:73301:73316	6759139	1	True				
ANR	6761794	CallExpression	"remove ( ""A.raw"" )"		6759139	0					
ANR	6761795	Callee	remove		6759139	0					
ANR	6761796	Identifier	remove		6759139	0					
ANR	6761797	ArgumentList	"""A.raw"""		6759139	1					
ANR	6761798	Argument	"""A.raw"""		6759139	0					
ANR	6761799	PrimaryExpression	"""A.raw"""		6759139	0					
ANR	6761800	ReturnType	void		6759139	1					
ANR	6761801	Identifier	write_file_YCC		6759139	2					
ANR	6761802	ParameterList	"jxr_image_t image , int mx , int my , int * data"		6759139	3					
ANR	6761803	Parameter	jxr_image_t image	1835:20:60488:60504	6759139	0	True				
ANR	6761804	ParameterType	jxr_image_t		6759139	0					
ANR	6761805	Identifier	image		6759139	1					
ANR	6761806	Parameter	int mx	1835:39:60507:60512	6759139	1	True				
ANR	6761807	ParameterType	int		6759139	0					
ANR	6761808	Identifier	mx		6759139	1					
ANR	6761809	Parameter	int my	1835:47:60515:60520	6759139	2	True				
ANR	6761810	ParameterType	int		6759139	0					
ANR	6761811	Identifier	my		6759139	1					
ANR	6761812	Parameter	int * data	1835:55:60523:60531	6759139	3	True				
ANR	6761813	ParameterType	int *		6759139	0					
ANR	6761814	Identifier	data		6759139	1					
ANR	6761815	CFGEntryNode	ENTRY		6759139		True				
ANR	6761816	CFGExitNode	EXIT		6759139		True				
ANR	6761817	Symbol	& val		6759139						
ANR	6761818	Symbol	con		6759139						
ANR	6761819	Symbol	data		6759139						
ANR	6761820	Symbol	con -> ncomp		6759139						
ANR	6761821	Symbol	strip_blocks		6759139						
ANR	6761822	Symbol	conY -> name		6759139						
ANR	6761823	Symbol	conY -> wid		6759139						
ANR	6761824	Symbol	conU -> name		6759139						
ANR	6761825	Symbol	conY -> ncomp		6759139						
ANR	6761826	Symbol	dp		6759139						
ANR	6761827	Symbol	conV -> wid		6759139						
ANR	6761828	Symbol	conU -> wid		6759139						
ANR	6761829	Symbol	conY -> file		6759139						
ANR	6761830	Symbol	dix		6759139						
ANR	6761831	Symbol	image -> window_extra_top		6759139						
ANR	6761832	Symbol	dy		6759139						
ANR	6761833	Symbol	con -> bpi		6759139						
ANR	6761834	Symbol	conA -> ncomp		6759139						
ANR	6761835	Symbol	jxr_get_pixel_format		6759139						
ANR	6761836	Symbol	* idx		6759139						
ANR	6761837	Symbol	jxr_get_ALPHACHANNEL_FLAG		6759139						
ANR	6761838	Symbol	jxr_get_EXTENDED_IMAGE_HEIGHT		6759139						
ANR	6761839	Symbol	ii		6759139						
ANR	6761840	Symbol	val		6759139						
ANR	6761841	Symbol	image		6759139						
ANR	6761842	Symbol	NULL		6759139						
ANR	6761843	Symbol	con -> hei		6759139						
ANR	6761844	Symbol	* conA		6759139						
ANR	6761845	Symbol	conY -> buf		6759139						
ANR	6761846	Symbol	mx		6759139						
ANR	6761847	Symbol	my		6759139						
ANR	6761848	Symbol	con -> top_pad		6759139						
ANR	6761849	Symbol	conU -> ncomp		6759139						
ANR	6761850	Symbol	conA -> buf		6759139						
ANR	6761851	Symbol	subX		6759139						
ANR	6761852	Symbol	subY		6759139						
ANR	6761853	Symbol	size		6759139						
ANR	6761854	Symbol	con -> top_pad_remaining		6759139						
ANR	6761855	Symbol	conY		6759139						
ANR	6761856	Symbol	conV		6759139						
ANR	6761857	Symbol	conV -> ncomp		6759139						
ANR	6761858	Symbol	conV -> file		6759139						
ANR	6761859	Symbol	idx		6759139						
ANR	6761860	Symbol	conU		6759139						
ANR	6761861	Symbol	* image		6759139						
ANR	6761862	Symbol	trans		6759139						
ANR	6761863	Symbol	dataY		6759139						
ANR	6761864	Symbol	* dix		6759139						
ANR	6761865	Symbol	conA -> file		6759139						
ANR	6761866	Symbol	dataV		6759139						
ANR	6761867	Symbol	dataU		6759139						
ANR	6761868	Symbol	jxr_get_user_data		6759139						
ANR	6761869	Symbol	ftell		6759139						
ANR	6761870	Symbol	conV -> name		6759139						
ANR	6761871	Symbol	conA -> wid		6759139						
ANR	6761872	Symbol	con -> left_pad		6759139						
ANR	6761873	Symbol	xDiv		6759139						
ANR	6761874	Symbol	conU -> buf		6759139						
ANR	6761875	Symbol	* conY		6759139						
ANR	6761876	Symbol	jxr_get_IMAGE_HEIGHT		6759139						
ANR	6761877	Symbol	conA		6759139						
ANR	6761878	Symbol	* dp		6759139						
ANR	6761879	Symbol	isOutputYUV422		6759139						
ANR	6761880	Symbol	* con		6759139						
ANR	6761881	Symbol	* conU		6759139						
ANR	6761882	Symbol	conA -> name		6759139						
ANR	6761883	Symbol	* conV		6759139						
ANR	6761884	Symbol	isOutputYUV420		6759139						
ANR	6761885	Symbol	jxr_get_OUTPUT_BITDEPTH		6759139						
ANR	6761886	Symbol	jxr_get_IMAGE_WIDTH		6759139						
ANR	6761887	Symbol	left_pad_shift		6759139						
ANR	6761888	Symbol	yDiv		6759139						
ANR	6761889	Symbol	malloc		6759139						
ANR	6761890	Symbol	image -> window_extra_left		6759139						
ANR	6761891	Symbol	con -> file		6759139						
ANR	6761892	Symbol	* dataA		6759139						
ANR	6761893	Symbol	image -> extended_width		6759139						
ANR	6761894	Symbol	conV -> buf		6759139						
ANR	6761895	Symbol	* dataY		6759139						
ANR	6761896	Symbol	dataA		6759139						
ANR	6761897	Symbol	jxr_get_EXTENDED_IMAGE_WIDTH		6759139						
ANR	6761898	Symbol	con -> alpha		6759139						
ANR	6761899	Symbol	* dataV		6759139						
ANR	6761900	Symbol	* dataU		6759139						
ANR	6761901	Symbol	first		6759139						
ANR	6761902	Symbol	conU -> file		6759139						
ANR	6761903	Function	write_file_CMYK	2188:0:73336:84468							
ANR	6761904	FunctionDef	"write_file_CMYK (jxr_image_t image , int mx , int my , int * data)"		6761903	0					
ANR	6761905	CompoundStatement		2189:0:73403:84468	6761903	0					
ANR	6761906	IdentifierDeclStatement	int * dataC = data ;	2193:4:73615:73632	6761903	0	True				
ANR	6761907	IdentifierDecl	* dataC = data		6761903	0					
ANR	6761908	IdentifierDeclType	int *		6761903	0					
ANR	6761909	Identifier	dataC		6761903	1					
ANR	6761910	AssignmentExpression	* dataC = data		6761903	2		=			
ANR	6761911	Identifier	data		6761903	0					
ANR	6761912	Identifier	data		6761903	1					
ANR	6761913	IdentifierDeclStatement	int * dataM = dataC + 256 ;	2194:4:73638:73662	6761903	1	True				
ANR	6761914	IdentifierDecl	* dataM = dataC + 256		6761903	0					
ANR	6761915	IdentifierDeclType	int *		6761903	0					
ANR	6761916	Identifier	dataM		6761903	1					
ANR	6761917	AssignmentExpression	* dataM = dataC + 256		6761903	2		=			
ANR	6761918	Identifier	dataM		6761903	0					
ANR	6761919	AdditiveExpression	dataC + 256		6761903	1		+			
ANR	6761920	Identifier	dataC		6761903	0					
ANR	6761921	PrimaryExpression	256		6761903	1					
ANR	6761922	IdentifierDeclStatement	int * dataY = dataM + 256 ;	2195:4:73668:73692	6761903	2	True				
ANR	6761923	IdentifierDecl	* dataY = dataM + 256		6761903	0					
ANR	6761924	IdentifierDeclType	int *		6761903	0					
ANR	6761925	Identifier	dataY		6761903	1					
ANR	6761926	AssignmentExpression	* dataY = dataM + 256		6761903	2		=			
ANR	6761927	Identifier	dataY		6761903	0					
ANR	6761928	AdditiveExpression	dataM + 256		6761903	1		+			
ANR	6761929	Identifier	dataM		6761903	0					
ANR	6761930	PrimaryExpression	256		6761903	1					
ANR	6761931	IdentifierDeclStatement	int * dataK = dataY + 256 ;	2196:4:73698:73722	6761903	3	True				
ANR	6761932	IdentifierDecl	* dataK = dataY + 256		6761903	0					
ANR	6761933	IdentifierDeclType	int *		6761903	0					
ANR	6761934	Identifier	dataK		6761903	1					
ANR	6761935	AssignmentExpression	* dataK = dataY + 256		6761903	2		=			
ANR	6761936	Identifier	dataK		6761903	0					
ANR	6761937	AdditiveExpression	dataY + 256		6761903	1		+			
ANR	6761938	Identifier	dataY		6761903	0					
ANR	6761939	PrimaryExpression	256		6761903	1					
ANR	6761940	IdentifierDeclStatement	int * dataA = dataK + 256 ;	2197:4:73728:73752	6761903	4	True				
ANR	6761941	IdentifierDecl	* dataA = dataK + 256		6761903	0					
ANR	6761942	IdentifierDeclType	int *		6761903	0					
ANR	6761943	Identifier	dataA		6761903	1					
ANR	6761944	AssignmentExpression	* dataA = dataK + 256		6761903	2		=			
ANR	6761945	Identifier	dataA		6761903	0					
ANR	6761946	AdditiveExpression	dataK + 256		6761903	1		+			
ANR	6761947	Identifier	dataK		6761903	0					
ANR	6761948	PrimaryExpression	256		6761903	1					
ANR	6761949	Statement	static	2198:4:73758:73763	6761903	5	True				
ANR	6761950	IdentifierDeclStatement	context * conC = NULL ;	2198:11:73765:73785	6761903	6	True				
ANR	6761951	IdentifierDecl	* conC = NULL		6761903	0					
ANR	6761952	IdentifierDeclType	context *		6761903	0					
ANR	6761953	Identifier	conC		6761903	1					
ANR	6761954	AssignmentExpression	* conC = NULL		6761903	2		=			
ANR	6761955	Identifier	NULL		6761903	0					
ANR	6761956	Identifier	NULL		6761903	1					
ANR	6761957	Statement	static	2199:4:73791:73796	6761903	7	True				
ANR	6761958	IdentifierDeclStatement	context * conM = NULL ;	2199:11:73798:73818	6761903	8	True				
ANR	6761959	IdentifierDecl	* conM = NULL		6761903	0					
ANR	6761960	IdentifierDeclType	context *		6761903	0					
ANR	6761961	Identifier	conM		6761903	1					
ANR	6761962	AssignmentExpression	* conM = NULL		6761903	2		=			
ANR	6761963	Identifier	NULL		6761903	0					
ANR	6761964	Identifier	NULL		6761903	1					
ANR	6761965	Statement	static	2200:4:73824:73829	6761903	9	True				
ANR	6761966	IdentifierDeclStatement	context * conY = NULL ;	2200:11:73831:73851	6761903	10	True				
ANR	6761967	IdentifierDecl	* conY = NULL		6761903	0					
ANR	6761968	IdentifierDeclType	context *		6761903	0					
ANR	6761969	Identifier	conY		6761903	1					
ANR	6761970	AssignmentExpression	* conY = NULL		6761903	2		=			
ANR	6761971	Identifier	NULL		6761903	0					
ANR	6761972	Identifier	NULL		6761903	1					
ANR	6761973	Statement	static	2201:4:73857:73862	6761903	11	True				
ANR	6761974	IdentifierDeclStatement	context * conK = NULL ;	2201:11:73864:73884	6761903	12	True				
ANR	6761975	IdentifierDecl	* conK = NULL		6761903	0					
ANR	6761976	IdentifierDeclType	context *		6761903	0					
ANR	6761977	Identifier	conK		6761903	1					
ANR	6761978	AssignmentExpression	* conK = NULL		6761903	2		=			
ANR	6761979	Identifier	NULL		6761903	0					
ANR	6761980	Identifier	NULL		6761903	1					
ANR	6761981	Statement	static	2202:4:73890:73895	6761903	13	True				
ANR	6761982	IdentifierDeclStatement	context * conA = NULL ;	2202:11:73897:73917	6761903	14	True				
ANR	6761983	IdentifierDecl	* conA = NULL		6761903	0					
ANR	6761984	IdentifierDeclType	context *		6761903	0					
ANR	6761985	Identifier	conA		6761903	1					
ANR	6761986	AssignmentExpression	* conA = NULL		6761903	2		=			
ANR	6761987	Identifier	NULL		6761903	0					
ANR	6761988	Identifier	NULL		6761903	1					
ANR	6761989	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	2203:4:73923:73973	6761903	15	True				
ANR	6761990	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		6761903	0					
ANR	6761991	IdentifierDeclType	context *		6761903	0					
ANR	6761992	Identifier	con		6761903	1					
ANR	6761993	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		6761903	2		=			
ANR	6761994	Identifier	con		6761903	0					
ANR	6761995	CastExpression	( context * ) jxr_get_user_data ( image )		6761903	1					
ANR	6761996	CastTarget	context *		6761903	0					
ANR	6761997	CallExpression	jxr_get_user_data ( image )		6761903	1					
ANR	6761998	Callee	jxr_get_user_data		6761903	0					
ANR	6761999	Identifier	jxr_get_user_data		6761903	0					
ANR	6762000	ArgumentList	image		6761903	1					
ANR	6762001	Argument	image		6761903	0					
ANR	6762002	Identifier	image		6761903	0					
ANR	6762003	IfStatement	if ( con -> file == 0 )		6761903	16					
ANR	6762004	Condition	con -> file == 0	2204:8:73987:73998	6761903	0	True				
ANR	6762005	EqualityExpression	con -> file == 0		6761903	0		==			
ANR	6762006	PtrMemberAccess	con -> file		6761903	0					
ANR	6762007	Identifier	con		6761903	0					
ANR	6762008	Identifier	file		6761903	1					
ANR	6762009	PrimaryExpression	0		6761903	1					
ANR	6762010	CompoundStatement		17:4:601:601	6761903	1					
ANR	6762011	ExpressionStatement	con -> alpha = jxr_get_ALPHACHANNEL_FLAG ( image )	2206:8:74015:74060	6761903	0	True				
ANR	6762012	AssignmentExpression	con -> alpha = jxr_get_ALPHACHANNEL_FLAG ( image )		6761903	0		=			
ANR	6762013	PtrMemberAccess	con -> alpha		6761903	0					
ANR	6762014	Identifier	con		6761903	0					
ANR	6762015	Identifier	alpha		6761903	1					
ANR	6762016	CallExpression	jxr_get_ALPHACHANNEL_FLAG ( image )		6761903	1					
ANR	6762017	Callee	jxr_get_ALPHACHANNEL_FLAG		6761903	0					
ANR	6762018	Identifier	jxr_get_ALPHACHANNEL_FLAG		6761903	0					
ANR	6762019	ArgumentList	image		6761903	1					
ANR	6762020	Argument	image		6761903	0					
ANR	6762021	Identifier	image		6761903	0					
ANR	6762022	ExpressionStatement	conC = ( context * ) malloc ( sizeof ( context ) )	2208:8:74079:74120	6761903	1	True				
ANR	6762023	AssignmentExpression	conC = ( context * ) malloc ( sizeof ( context ) )		6761903	0		=			
ANR	6762024	Identifier	conC		6761903	0					
ANR	6762025	CastExpression	( context * ) malloc ( sizeof ( context ) )		6761903	1					
ANR	6762026	CastTarget	context *		6761903	0					
ANR	6762027	CallExpression	malloc ( sizeof ( context ) )		6761903	1					
ANR	6762028	Callee	malloc		6761903	0					
ANR	6762029	Identifier	malloc		6761903	0					
ANR	6762030	ArgumentList	sizeof ( context )		6761903	1					
ANR	6762031	Argument	sizeof ( context )		6761903	0					
ANR	6762032	SizeofExpression	sizeof ( context )		6761903	0					
ANR	6762033	Sizeof	sizeof		6761903	0					
ANR	6762034	SizeofOperand	context		6761903	1					
ANR	6762035	ExpressionStatement	conM = ( context * ) malloc ( sizeof ( context ) )	2209:8:74130:74171	6761903	2	True				
ANR	6762036	AssignmentExpression	conM = ( context * ) malloc ( sizeof ( context ) )		6761903	0		=			
ANR	6762037	Identifier	conM		6761903	0					
ANR	6762038	CastExpression	( context * ) malloc ( sizeof ( context ) )		6761903	1					
ANR	6762039	CastTarget	context *		6761903	0					
ANR	6762040	CallExpression	malloc ( sizeof ( context ) )		6761903	1					
ANR	6762041	Callee	malloc		6761903	0					
ANR	6762042	Identifier	malloc		6761903	0					
ANR	6762043	ArgumentList	sizeof ( context )		6761903	1					
ANR	6762044	Argument	sizeof ( context )		6761903	0					
ANR	6762045	SizeofExpression	sizeof ( context )		6761903	0					
ANR	6762046	Sizeof	sizeof		6761903	0					
ANR	6762047	SizeofOperand	context		6761903	1					
ANR	6762048	ExpressionStatement	conY = ( context * ) malloc ( sizeof ( context ) )	2210:8:74181:74222	6761903	3	True				
ANR	6762049	AssignmentExpression	conY = ( context * ) malloc ( sizeof ( context ) )		6761903	0		=			
ANR	6762050	Identifier	conY		6761903	0					
ANR	6762051	CastExpression	( context * ) malloc ( sizeof ( context ) )		6761903	1					
ANR	6762052	CastTarget	context *		6761903	0					
ANR	6762053	CallExpression	malloc ( sizeof ( context ) )		6761903	1					
ANR	6762054	Callee	malloc		6761903	0					
ANR	6762055	Identifier	malloc		6761903	0					
ANR	6762056	ArgumentList	sizeof ( context )		6761903	1					
ANR	6762057	Argument	sizeof ( context )		6761903	0					
ANR	6762058	SizeofExpression	sizeof ( context )		6761903	0					
ANR	6762059	Sizeof	sizeof		6761903	0					
ANR	6762060	SizeofOperand	context		6761903	1					
ANR	6762061	ExpressionStatement	conK = ( context * ) malloc ( sizeof ( context ) )	2211:8:74232:74273	6761903	4	True				
ANR	6762062	AssignmentExpression	conK = ( context * ) malloc ( sizeof ( context ) )		6761903	0		=			
ANR	6762063	Identifier	conK		6761903	0					
ANR	6762064	CastExpression	( context * ) malloc ( sizeof ( context ) )		6761903	1					
ANR	6762065	CastTarget	context *		6761903	0					
ANR	6762066	CallExpression	malloc ( sizeof ( context ) )		6761903	1					
ANR	6762067	Callee	malloc		6761903	0					
ANR	6762068	Identifier	malloc		6761903	0					
ANR	6762069	ArgumentList	sizeof ( context )		6761903	1					
ANR	6762070	Argument	sizeof ( context )		6761903	0					
ANR	6762071	SizeofExpression	sizeof ( context )		6761903	0					
ANR	6762072	Sizeof	sizeof		6761903	0					
ANR	6762073	SizeofOperand	context		6761903	1					
ANR	6762074	IfStatement	if ( con -> alpha )		6761903	5					
ANR	6762075	Condition	con -> alpha	2212:11:74286:74295	6761903	0	True				
ANR	6762076	PtrMemberAccess	con -> alpha		6761903	0					
ANR	6762077	Identifier	con		6761903	0					
ANR	6762078	Identifier	alpha		6761903	1					
ANR	6762079	ExpressionStatement	conA = ( context * ) malloc ( sizeof ( context ) )	2213:12:74310:74351	6761903	1	True				
ANR	6762080	AssignmentExpression	conA = ( context * ) malloc ( sizeof ( context ) )		6761903	0		=			
ANR	6762081	Identifier	conA		6761903	0					
ANR	6762082	CastExpression	( context * ) malloc ( sizeof ( context ) )		6761903	1					
ANR	6762083	CastTarget	context *		6761903	0					
ANR	6762084	CallExpression	malloc ( sizeof ( context ) )		6761903	1					
ANR	6762085	Callee	malloc		6761903	0					
ANR	6762086	Identifier	malloc		6761903	0					
ANR	6762087	ArgumentList	sizeof ( context )		6761903	1					
ANR	6762088	Argument	sizeof ( context )		6761903	0					
ANR	6762089	SizeofExpression	sizeof ( context )		6761903	0					
ANR	6762090	Sizeof	sizeof		6761903	0					
ANR	6762091	SizeofOperand	context		6761903	1					
ANR	6762092	ExpressionStatement	"memcpy ( conC , con , sizeof ( context ) )"	2214:8:74361:74395	6761903	6	True				
ANR	6762093	CallExpression	"memcpy ( conC , con , sizeof ( context ) )"		6761903	0					
ANR	6762094	Callee	memcpy		6761903	0					
ANR	6762095	Identifier	memcpy		6761903	0					
ANR	6762096	ArgumentList	conC		6761903	1					
ANR	6762097	Argument	conC		6761903	0					
ANR	6762098	Identifier	conC		6761903	0					
ANR	6762099	Argument	con		6761903	1					
ANR	6762100	Identifier	con		6761903	0					
ANR	6762101	Argument	sizeof ( context )		6761903	2					
ANR	6762102	SizeofExpression	sizeof ( context )		6761903	0					
ANR	6762103	Sizeof	sizeof		6761903	0					
ANR	6762104	SizeofOperand	context		6761903	1					
ANR	6762105	ExpressionStatement	"memcpy ( conM , con , sizeof ( context ) )"	2215:8:74405:74439	6761903	7	True				
ANR	6762106	CallExpression	"memcpy ( conM , con , sizeof ( context ) )"		6761903	0					
ANR	6762107	Callee	memcpy		6761903	0					
ANR	6762108	Identifier	memcpy		6761903	0					
ANR	6762109	ArgumentList	conM		6761903	1					
ANR	6762110	Argument	conM		6761903	0					
ANR	6762111	Identifier	conM		6761903	0					
ANR	6762112	Argument	con		6761903	1					
ANR	6762113	Identifier	con		6761903	0					
ANR	6762114	Argument	sizeof ( context )		6761903	2					
ANR	6762115	SizeofExpression	sizeof ( context )		6761903	0					
ANR	6762116	Sizeof	sizeof		6761903	0					
ANR	6762117	SizeofOperand	context		6761903	1					
ANR	6762118	ExpressionStatement	"memcpy ( conY , con , sizeof ( context ) )"	2216:8:74449:74483	6761903	8	True				
ANR	6762119	CallExpression	"memcpy ( conY , con , sizeof ( context ) )"		6761903	0					
ANR	6762120	Callee	memcpy		6761903	0					
ANR	6762121	Identifier	memcpy		6761903	0					
ANR	6762122	ArgumentList	conY		6761903	1					
ANR	6762123	Argument	conY		6761903	0					
ANR	6762124	Identifier	conY		6761903	0					
ANR	6762125	Argument	con		6761903	1					
ANR	6762126	Identifier	con		6761903	0					
ANR	6762127	Argument	sizeof ( context )		6761903	2					
ANR	6762128	SizeofExpression	sizeof ( context )		6761903	0					
ANR	6762129	Sizeof	sizeof		6761903	0					
ANR	6762130	SizeofOperand	context		6761903	1					
ANR	6762131	ExpressionStatement	"memcpy ( conK , con , sizeof ( context ) )"	2217:8:74493:74527	6761903	9	True				
ANR	6762132	CallExpression	"memcpy ( conK , con , sizeof ( context ) )"		6761903	0					
ANR	6762133	Callee	memcpy		6761903	0					
ANR	6762134	Identifier	memcpy		6761903	0					
ANR	6762135	ArgumentList	conK		6761903	1					
ANR	6762136	Argument	conK		6761903	0					
ANR	6762137	Identifier	conK		6761903	0					
ANR	6762138	Argument	con		6761903	1					
ANR	6762139	Identifier	con		6761903	0					
ANR	6762140	Argument	sizeof ( context )		6761903	2					
ANR	6762141	SizeofExpression	sizeof ( context )		6761903	0					
ANR	6762142	Sizeof	sizeof		6761903	0					
ANR	6762143	SizeofOperand	context		6761903	1					
ANR	6762144	IfStatement	if ( con -> alpha )		6761903	10					
ANR	6762145	Condition	con -> alpha	2218:11:74540:74549	6761903	0	True				
ANR	6762146	PtrMemberAccess	con -> alpha		6761903	0					
ANR	6762147	Identifier	con		6761903	0					
ANR	6762148	Identifier	alpha		6761903	1					
ANR	6762149	ExpressionStatement	"memcpy ( conA , con , sizeof ( context ) )"	2219:12:74564:74598	6761903	1	True				
ANR	6762150	CallExpression	"memcpy ( conA , con , sizeof ( context ) )"		6761903	0					
ANR	6762151	Callee	memcpy		6761903	0					
ANR	6762152	Identifier	memcpy		6761903	0					
ANR	6762153	ArgumentList	conA		6761903	1					
ANR	6762154	Argument	conA		6761903	0					
ANR	6762155	Identifier	conA		6761903	0					
ANR	6762156	Argument	con		6761903	1					
ANR	6762157	Identifier	con		6761903	0					
ANR	6762158	Argument	sizeof ( context )		6761903	2					
ANR	6762159	SizeofExpression	sizeof ( context )		6761903	0					
ANR	6762160	Sizeof	sizeof		6761903	0					
ANR	6762161	SizeofOperand	context		6761903	1					
ANR	6762162	ExpressionStatement	"conC -> name = ""C.raw"""	2220:8:74608:74628	6761903	11	True				
ANR	6762163	AssignmentExpression	"conC -> name = ""C.raw"""		6761903	0		=			
ANR	6762164	PtrMemberAccess	conC -> name		6761903	0					
ANR	6762165	Identifier	conC		6761903	0					
ANR	6762166	Identifier	name		6761903	1					
ANR	6762167	PrimaryExpression	"""C.raw"""		6761903	1					
ANR	6762168	ExpressionStatement	"conM -> name = ""M.raw"""	2221:8:74638:74658	6761903	12	True				
ANR	6762169	AssignmentExpression	"conM -> name = ""M.raw"""		6761903	0		=			
ANR	6762170	PtrMemberAccess	conM -> name		6761903	0					
ANR	6762171	Identifier	conM		6761903	0					
ANR	6762172	Identifier	name		6761903	1					
ANR	6762173	PrimaryExpression	"""M.raw"""		6761903	1					
ANR	6762174	ExpressionStatement	"conY -> name = ""Y.raw"""	2222:8:74668:74688	6761903	13	True				
ANR	6762175	AssignmentExpression	"conY -> name = ""Y.raw"""		6761903	0		=			
ANR	6762176	PtrMemberAccess	conY -> name		6761903	0					
ANR	6762177	Identifier	conY		6761903	0					
ANR	6762178	Identifier	name		6761903	1					
ANR	6762179	PrimaryExpression	"""Y.raw"""		6761903	1					
ANR	6762180	ExpressionStatement	"conK -> name = ""K.raw"""	2223:8:74698:74718	6761903	14	True				
ANR	6762181	AssignmentExpression	"conK -> name = ""K.raw"""		6761903	0		=			
ANR	6762182	PtrMemberAccess	conK -> name		6761903	0					
ANR	6762183	Identifier	conK		6761903	0					
ANR	6762184	Identifier	name		6761903	1					
ANR	6762185	PrimaryExpression	"""K.raw"""		6761903	1					
ANR	6762186	IfStatement	if ( con -> alpha )		6761903	15					
ANR	6762187	Condition	con -> alpha	2224:11:74731:74740	6761903	0	True				
ANR	6762188	PtrMemberAccess	con -> alpha		6761903	0					
ANR	6762189	Identifier	con		6761903	0					
ANR	6762190	Identifier	alpha		6761903	1					
ANR	6762191	ExpressionStatement	"conA -> name = ""A.raw"""	2225:12:74755:74775	6761903	1	True				
ANR	6762192	AssignmentExpression	"conA -> name = ""A.raw"""		6761903	0		=			
ANR	6762193	PtrMemberAccess	conA -> name		6761903	0					
ANR	6762194	Identifier	conA		6761903	0					
ANR	6762195	Identifier	name		6761903	1					
ANR	6762196	PrimaryExpression	"""A.raw"""		6761903	1					
ANR	6762197	ExpressionStatement	con -> left_pad = image -> window_extra_left	2227:8:74790:74830	6761903	16	True				
ANR	6762198	AssignmentExpression	con -> left_pad = image -> window_extra_left		6761903	0		=			
ANR	6762199	PtrMemberAccess	con -> left_pad		6761903	0					
ANR	6762200	Identifier	con		6761903	0					
ANR	6762201	Identifier	left_pad		6761903	1					
ANR	6762202	PtrMemberAccess	image -> window_extra_left		6761903	1					
ANR	6762203	Identifier	image		6761903	0					
ANR	6762204	Identifier	window_extra_left		6761903	1					
ANR	6762205	ExpressionStatement	con -> top_pad_remaining = image -> window_extra_top	2228:8:74840:74888	6761903	17	True				
ANR	6762206	AssignmentExpression	con -> top_pad_remaining = image -> window_extra_top		6761903	0		=			
ANR	6762207	PtrMemberAccess	con -> top_pad_remaining		6761903	0					
ANR	6762208	Identifier	con		6761903	0					
ANR	6762209	Identifier	top_pad_remaining		6761903	1					
ANR	6762210	PtrMemberAccess	image -> window_extra_top		6761903	1					
ANR	6762211	Identifier	image		6761903	0					
ANR	6762212	Identifier	window_extra_top		6761903	1					
ANR	6762213	ExpressionStatement	con -> top_pad = image -> window_extra_top	2229:8:74898:74936	6761903	18	True				
ANR	6762214	AssignmentExpression	con -> top_pad = image -> window_extra_top		6761903	0		=			
ANR	6762215	PtrMemberAccess	con -> top_pad		6761903	0					
ANR	6762216	Identifier	con		6761903	0					
ANR	6762217	Identifier	top_pad		6761903	1					
ANR	6762218	PtrMemberAccess	image -> window_extra_top		6761903	1					
ANR	6762219	Identifier	image		6761903	0					
ANR	6762220	Identifier	window_extra_top		6761903	1					
ANR	6762221	ExpressionStatement	con -> ncomp = conC -> ncomp = conM -> ncomp = conY -> ncomp = conK -> ncomp = 1	2231:8:74963:75033	6761903	19	True				
ANR	6762222	AssignmentExpression	con -> ncomp = conC -> ncomp = conM -> ncomp = conY -> ncomp = conK -> ncomp = 1		6761903	0		=			
ANR	6762223	PtrMemberAccess	con -> ncomp		6761903	0					
ANR	6762224	Identifier	con		6761903	0					
ANR	6762225	Identifier	ncomp		6761903	1					
ANR	6762226	AssignmentExpression	conC -> ncomp = conM -> ncomp = conY -> ncomp = conK -> ncomp = 1		6761903	1		=			
ANR	6762227	PtrMemberAccess	conC -> ncomp		6761903	0					
ANR	6762228	Identifier	conC		6761903	0					
ANR	6762229	Identifier	ncomp		6761903	1					
ANR	6762230	AssignmentExpression	conM -> ncomp = conY -> ncomp = conK -> ncomp = 1		6761903	1		=			
ANR	6762231	PtrMemberAccess	conM -> ncomp		6761903	0					
ANR	6762232	Identifier	conM		6761903	0					
ANR	6762233	Identifier	ncomp		6761903	1					
ANR	6762234	AssignmentExpression	conY -> ncomp = conK -> ncomp = 1		6761903	1		=			
ANR	6762235	PtrMemberAccess	conY -> ncomp		6761903	0					
ANR	6762236	Identifier	conY		6761903	0					
ANR	6762237	Identifier	ncomp		6761903	1					
ANR	6762238	AssignmentExpression	conK -> ncomp = 1		6761903	1		=			
ANR	6762239	PtrMemberAccess	conK -> ncomp		6761903	0					
ANR	6762240	Identifier	conK		6761903	0					
ANR	6762241	Identifier	ncomp		6761903	1					
ANR	6762242	PrimaryExpression	1		6761903	1					
ANR	6762243	IfStatement	if ( con -> alpha )		6761903	20					
ANR	6762244	Condition	con -> alpha	2232:11:75046:75055	6761903	0	True				
ANR	6762245	PtrMemberAccess	con -> alpha		6761903	0					
ANR	6762246	Identifier	con		6761903	0					
ANR	6762247	Identifier	alpha		6761903	1					
ANR	6762248	ExpressionStatement	conA -> ncomp = 1	2233:12:75070:75085	6761903	1	True				
ANR	6762249	AssignmentExpression	conA -> ncomp = 1		6761903	0		=			
ANR	6762250	PtrMemberAccess	conA -> ncomp		6761903	0					
ANR	6762251	Identifier	conA		6761903	0					
ANR	6762252	Identifier	ncomp		6761903	1					
ANR	6762253	PrimaryExpression	1		6761903	1					
ANR	6762254	ExpressionStatement	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2234:8:75095:75339	6761903	21	True				
ANR	6762255	CallExpression	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		6761903	0					
ANR	6762256	Callee	start_output_file		6761903	0					
ANR	6762257	Identifier	start_output_file		6761903	0					
ANR	6762258	ArgumentList	con		6761903	1					
ANR	6762259	Argument	con		6761903	0					
ANR	6762260	Identifier	con		6761903	0					
ANR	6762261	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6761903	1					
ANR	6762262	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6761903	0					
ANR	6762263	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		6761903	0					
ANR	6762264	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		6761903	0					
ANR	6762265	ArgumentList	image		6761903	1					
ANR	6762266	Argument	image		6761903	0					
ANR	6762267	Identifier	image		6761903	0					
ANR	6762268	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6761903	2					
ANR	6762269	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6761903	0					
ANR	6762270	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		6761903	0					
ANR	6762271	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		6761903	0					
ANR	6762272	ArgumentList	image		6761903	1					
ANR	6762273	Argument	image		6761903	0					
ANR	6762274	Identifier	image		6761903	0					
ANR	6762275	Argument	jxr_get_IMAGE_WIDTH ( image )		6761903	3					
ANR	6762276	CallExpression	jxr_get_IMAGE_WIDTH ( image )		6761903	0					
ANR	6762277	Callee	jxr_get_IMAGE_WIDTH		6761903	0					
ANR	6762278	Identifier	jxr_get_IMAGE_WIDTH		6761903	0					
ANR	6762279	ArgumentList	image		6761903	1					
ANR	6762280	Argument	image		6761903	0					
ANR	6762281	Identifier	image		6761903	0					
ANR	6762282	Argument	jxr_get_IMAGE_HEIGHT ( image )		6761903	4					
ANR	6762283	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		6761903	0					
ANR	6762284	Callee	jxr_get_IMAGE_HEIGHT		6761903	0					
ANR	6762285	Identifier	jxr_get_IMAGE_HEIGHT		6761903	0					
ANR	6762286	ArgumentList	image		6761903	1					
ANR	6762287	Argument	image		6761903	0					
ANR	6762288	Identifier	image		6761903	0					
ANR	6762289	Argument	1		6761903	5					
ANR	6762290	PrimaryExpression	1		6761903	0					
ANR	6762291	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6761903	6					
ANR	6762292	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6761903	0					
ANR	6762293	Callee	jxr_get_OUTPUT_BITDEPTH		6761903	0					
ANR	6762294	Identifier	jxr_get_OUTPUT_BITDEPTH		6761903	0					
ANR	6762295	ArgumentList	image		6761903	1					
ANR	6762296	Argument	image		6761903	0					
ANR	6762297	Identifier	image		6761903	0					
ANR	6762298	Argument	jxr_get_pixel_format ( image )		6761903	7					
ANR	6762299	CallExpression	jxr_get_pixel_format ( image )		6761903	0					
ANR	6762300	Callee	jxr_get_pixel_format		6761903	0					
ANR	6762301	Identifier	jxr_get_pixel_format		6761903	0					
ANR	6762302	ArgumentList	image		6761903	1					
ANR	6762303	Argument	image		6761903	0					
ANR	6762304	Identifier	image		6761903	0					
ANR	6762305	ExpressionStatement	"start_output_file ( conC , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2237:8:75349:75594	6761903	22	True				
ANR	6762306	CallExpression	"start_output_file ( conC , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		6761903	0					
ANR	6762307	Callee	start_output_file		6761903	0					
ANR	6762308	Identifier	start_output_file		6761903	0					
ANR	6762309	ArgumentList	conC		6761903	1					
ANR	6762310	Argument	conC		6761903	0					
ANR	6762311	Identifier	conC		6761903	0					
ANR	6762312	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6761903	1					
ANR	6762313	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6761903	0					
ANR	6762314	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		6761903	0					
ANR	6762315	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		6761903	0					
ANR	6762316	ArgumentList	image		6761903	1					
ANR	6762317	Argument	image		6761903	0					
ANR	6762318	Identifier	image		6761903	0					
ANR	6762319	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6761903	2					
ANR	6762320	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6761903	0					
ANR	6762321	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		6761903	0					
ANR	6762322	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		6761903	0					
ANR	6762323	ArgumentList	image		6761903	1					
ANR	6762324	Argument	image		6761903	0					
ANR	6762325	Identifier	image		6761903	0					
ANR	6762326	Argument	jxr_get_IMAGE_WIDTH ( image )		6761903	3					
ANR	6762327	CallExpression	jxr_get_IMAGE_WIDTH ( image )		6761903	0					
ANR	6762328	Callee	jxr_get_IMAGE_WIDTH		6761903	0					
ANR	6762329	Identifier	jxr_get_IMAGE_WIDTH		6761903	0					
ANR	6762330	ArgumentList	image		6761903	1					
ANR	6762331	Argument	image		6761903	0					
ANR	6762332	Identifier	image		6761903	0					
ANR	6762333	Argument	jxr_get_IMAGE_HEIGHT ( image )		6761903	4					
ANR	6762334	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		6761903	0					
ANR	6762335	Callee	jxr_get_IMAGE_HEIGHT		6761903	0					
ANR	6762336	Identifier	jxr_get_IMAGE_HEIGHT		6761903	0					
ANR	6762337	ArgumentList	image		6761903	1					
ANR	6762338	Argument	image		6761903	0					
ANR	6762339	Identifier	image		6761903	0					
ANR	6762340	Argument	1		6761903	5					
ANR	6762341	PrimaryExpression	1		6761903	0					
ANR	6762342	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6761903	6					
ANR	6762343	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6761903	0					
ANR	6762344	Callee	jxr_get_OUTPUT_BITDEPTH		6761903	0					
ANR	6762345	Identifier	jxr_get_OUTPUT_BITDEPTH		6761903	0					
ANR	6762346	ArgumentList	image		6761903	1					
ANR	6762347	Argument	image		6761903	0					
ANR	6762348	Identifier	image		6761903	0					
ANR	6762349	Argument	jxr_get_pixel_format ( image )		6761903	7					
ANR	6762350	CallExpression	jxr_get_pixel_format ( image )		6761903	0					
ANR	6762351	Callee	jxr_get_pixel_format		6761903	0					
ANR	6762352	Identifier	jxr_get_pixel_format		6761903	0					
ANR	6762353	ArgumentList	image		6761903	1					
ANR	6762354	Argument	image		6761903	0					
ANR	6762355	Identifier	image		6761903	0					
ANR	6762356	ExpressionStatement	"start_output_file ( conM , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2240:8:75604:75849	6761903	23	True				
ANR	6762357	CallExpression	"start_output_file ( conM , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		6761903	0					
ANR	6762358	Callee	start_output_file		6761903	0					
ANR	6762359	Identifier	start_output_file		6761903	0					
ANR	6762360	ArgumentList	conM		6761903	1					
ANR	6762361	Argument	conM		6761903	0					
ANR	6762362	Identifier	conM		6761903	0					
ANR	6762363	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6761903	1					
ANR	6762364	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6761903	0					
ANR	6762365	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		6761903	0					
ANR	6762366	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		6761903	0					
ANR	6762367	ArgumentList	image		6761903	1					
ANR	6762368	Argument	image		6761903	0					
ANR	6762369	Identifier	image		6761903	0					
ANR	6762370	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6761903	2					
ANR	6762371	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6761903	0					
ANR	6762372	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		6761903	0					
ANR	6762373	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		6761903	0					
ANR	6762374	ArgumentList	image		6761903	1					
ANR	6762375	Argument	image		6761903	0					
ANR	6762376	Identifier	image		6761903	0					
ANR	6762377	Argument	jxr_get_IMAGE_WIDTH ( image )		6761903	3					
ANR	6762378	CallExpression	jxr_get_IMAGE_WIDTH ( image )		6761903	0					
ANR	6762379	Callee	jxr_get_IMAGE_WIDTH		6761903	0					
ANR	6762380	Identifier	jxr_get_IMAGE_WIDTH		6761903	0					
ANR	6762381	ArgumentList	image		6761903	1					
ANR	6762382	Argument	image		6761903	0					
ANR	6762383	Identifier	image		6761903	0					
ANR	6762384	Argument	jxr_get_IMAGE_HEIGHT ( image )		6761903	4					
ANR	6762385	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		6761903	0					
ANR	6762386	Callee	jxr_get_IMAGE_HEIGHT		6761903	0					
ANR	6762387	Identifier	jxr_get_IMAGE_HEIGHT		6761903	0					
ANR	6762388	ArgumentList	image		6761903	1					
ANR	6762389	Argument	image		6761903	0					
ANR	6762390	Identifier	image		6761903	0					
ANR	6762391	Argument	1		6761903	5					
ANR	6762392	PrimaryExpression	1		6761903	0					
ANR	6762393	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6761903	6					
ANR	6762394	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6761903	0					
ANR	6762395	Callee	jxr_get_OUTPUT_BITDEPTH		6761903	0					
ANR	6762396	Identifier	jxr_get_OUTPUT_BITDEPTH		6761903	0					
ANR	6762397	ArgumentList	image		6761903	1					
ANR	6762398	Argument	image		6761903	0					
ANR	6762399	Identifier	image		6761903	0					
ANR	6762400	Argument	jxr_get_pixel_format ( image )		6761903	7					
ANR	6762401	CallExpression	jxr_get_pixel_format ( image )		6761903	0					
ANR	6762402	Callee	jxr_get_pixel_format		6761903	0					
ANR	6762403	Identifier	jxr_get_pixel_format		6761903	0					
ANR	6762404	ArgumentList	image		6761903	1					
ANR	6762405	Argument	image		6761903	0					
ANR	6762406	Identifier	image		6761903	0					
ANR	6762407	ExpressionStatement	"start_output_file ( conY , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2243:8:75859:76104	6761903	24	True				
ANR	6762408	CallExpression	"start_output_file ( conY , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		6761903	0					
ANR	6762409	Callee	start_output_file		6761903	0					
ANR	6762410	Identifier	start_output_file		6761903	0					
ANR	6762411	ArgumentList	conY		6761903	1					
ANR	6762412	Argument	conY		6761903	0					
ANR	6762413	Identifier	conY		6761903	0					
ANR	6762414	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6761903	1					
ANR	6762415	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6761903	0					
ANR	6762416	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		6761903	0					
ANR	6762417	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		6761903	0					
ANR	6762418	ArgumentList	image		6761903	1					
ANR	6762419	Argument	image		6761903	0					
ANR	6762420	Identifier	image		6761903	0					
ANR	6762421	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6761903	2					
ANR	6762422	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6761903	0					
ANR	6762423	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		6761903	0					
ANR	6762424	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		6761903	0					
ANR	6762425	ArgumentList	image		6761903	1					
ANR	6762426	Argument	image		6761903	0					
ANR	6762427	Identifier	image		6761903	0					
ANR	6762428	Argument	jxr_get_IMAGE_WIDTH ( image )		6761903	3					
ANR	6762429	CallExpression	jxr_get_IMAGE_WIDTH ( image )		6761903	0					
ANR	6762430	Callee	jxr_get_IMAGE_WIDTH		6761903	0					
ANR	6762431	Identifier	jxr_get_IMAGE_WIDTH		6761903	0					
ANR	6762432	ArgumentList	image		6761903	1					
ANR	6762433	Argument	image		6761903	0					
ANR	6762434	Identifier	image		6761903	0					
ANR	6762435	Argument	jxr_get_IMAGE_HEIGHT ( image )		6761903	4					
ANR	6762436	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		6761903	0					
ANR	6762437	Callee	jxr_get_IMAGE_HEIGHT		6761903	0					
ANR	6762438	Identifier	jxr_get_IMAGE_HEIGHT		6761903	0					
ANR	6762439	ArgumentList	image		6761903	1					
ANR	6762440	Argument	image		6761903	0					
ANR	6762441	Identifier	image		6761903	0					
ANR	6762442	Argument	1		6761903	5					
ANR	6762443	PrimaryExpression	1		6761903	0					
ANR	6762444	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6761903	6					
ANR	6762445	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6761903	0					
ANR	6762446	Callee	jxr_get_OUTPUT_BITDEPTH		6761903	0					
ANR	6762447	Identifier	jxr_get_OUTPUT_BITDEPTH		6761903	0					
ANR	6762448	ArgumentList	image		6761903	1					
ANR	6762449	Argument	image		6761903	0					
ANR	6762450	Identifier	image		6761903	0					
ANR	6762451	Argument	jxr_get_pixel_format ( image )		6761903	7					
ANR	6762452	CallExpression	jxr_get_pixel_format ( image )		6761903	0					
ANR	6762453	Callee	jxr_get_pixel_format		6761903	0					
ANR	6762454	Identifier	jxr_get_pixel_format		6761903	0					
ANR	6762455	ArgumentList	image		6761903	1					
ANR	6762456	Argument	image		6761903	0					
ANR	6762457	Identifier	image		6761903	0					
ANR	6762458	ExpressionStatement	"start_output_file ( conK , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2246:8:76114:76359	6761903	25	True				
ANR	6762459	CallExpression	"start_output_file ( conK , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		6761903	0					
ANR	6762460	Callee	start_output_file		6761903	0					
ANR	6762461	Identifier	start_output_file		6761903	0					
ANR	6762462	ArgumentList	conK		6761903	1					
ANR	6762463	Argument	conK		6761903	0					
ANR	6762464	Identifier	conK		6761903	0					
ANR	6762465	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6761903	1					
ANR	6762466	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6761903	0					
ANR	6762467	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		6761903	0					
ANR	6762468	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		6761903	0					
ANR	6762469	ArgumentList	image		6761903	1					
ANR	6762470	Argument	image		6761903	0					
ANR	6762471	Identifier	image		6761903	0					
ANR	6762472	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6761903	2					
ANR	6762473	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6761903	0					
ANR	6762474	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		6761903	0					
ANR	6762475	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		6761903	0					
ANR	6762476	ArgumentList	image		6761903	1					
ANR	6762477	Argument	image		6761903	0					
ANR	6762478	Identifier	image		6761903	0					
ANR	6762479	Argument	jxr_get_IMAGE_WIDTH ( image )		6761903	3					
ANR	6762480	CallExpression	jxr_get_IMAGE_WIDTH ( image )		6761903	0					
ANR	6762481	Callee	jxr_get_IMAGE_WIDTH		6761903	0					
ANR	6762482	Identifier	jxr_get_IMAGE_WIDTH		6761903	0					
ANR	6762483	ArgumentList	image		6761903	1					
ANR	6762484	Argument	image		6761903	0					
ANR	6762485	Identifier	image		6761903	0					
ANR	6762486	Argument	jxr_get_IMAGE_HEIGHT ( image )		6761903	4					
ANR	6762487	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		6761903	0					
ANR	6762488	Callee	jxr_get_IMAGE_HEIGHT		6761903	0					
ANR	6762489	Identifier	jxr_get_IMAGE_HEIGHT		6761903	0					
ANR	6762490	ArgumentList	image		6761903	1					
ANR	6762491	Argument	image		6761903	0					
ANR	6762492	Identifier	image		6761903	0					
ANR	6762493	Argument	1		6761903	5					
ANR	6762494	PrimaryExpression	1		6761903	0					
ANR	6762495	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6761903	6					
ANR	6762496	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6761903	0					
ANR	6762497	Callee	jxr_get_OUTPUT_BITDEPTH		6761903	0					
ANR	6762498	Identifier	jxr_get_OUTPUT_BITDEPTH		6761903	0					
ANR	6762499	ArgumentList	image		6761903	1					
ANR	6762500	Argument	image		6761903	0					
ANR	6762501	Identifier	image		6761903	0					
ANR	6762502	Argument	jxr_get_pixel_format ( image )		6761903	7					
ANR	6762503	CallExpression	jxr_get_pixel_format ( image )		6761903	0					
ANR	6762504	Callee	jxr_get_pixel_format		6761903	0					
ANR	6762505	Identifier	jxr_get_pixel_format		6761903	0					
ANR	6762506	ArgumentList	image		6761903	1					
ANR	6762507	Argument	image		6761903	0					
ANR	6762508	Identifier	image		6761903	0					
ANR	6762509	IfStatement	if ( con -> alpha )		6761903	26					
ANR	6762510	Condition	con -> alpha	2250:11:76381:76390	6761903	0	True				
ANR	6762511	PtrMemberAccess	con -> alpha		6761903	0					
ANR	6762512	Identifier	con		6761903	0					
ANR	6762513	Identifier	alpha		6761903	1					
ANR	6762514	ExpressionStatement	"start_output_file ( conA , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2251:12:76405:76657	6761903	1	True				
ANR	6762515	CallExpression	"start_output_file ( conA , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		6761903	0					
ANR	6762516	Callee	start_output_file		6761903	0					
ANR	6762517	Identifier	start_output_file		6761903	0					
ANR	6762518	ArgumentList	conA		6761903	1					
ANR	6762519	Argument	conA		6761903	0					
ANR	6762520	Identifier	conA		6761903	0					
ANR	6762521	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6761903	1					
ANR	6762522	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6761903	0					
ANR	6762523	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		6761903	0					
ANR	6762524	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		6761903	0					
ANR	6762525	ArgumentList	image		6761903	1					
ANR	6762526	Argument	image		6761903	0					
ANR	6762527	Identifier	image		6761903	0					
ANR	6762528	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6761903	2					
ANR	6762529	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6761903	0					
ANR	6762530	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		6761903	0					
ANR	6762531	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		6761903	0					
ANR	6762532	ArgumentList	image		6761903	1					
ANR	6762533	Argument	image		6761903	0					
ANR	6762534	Identifier	image		6761903	0					
ANR	6762535	Argument	jxr_get_IMAGE_WIDTH ( image )		6761903	3					
ANR	6762536	CallExpression	jxr_get_IMAGE_WIDTH ( image )		6761903	0					
ANR	6762537	Callee	jxr_get_IMAGE_WIDTH		6761903	0					
ANR	6762538	Identifier	jxr_get_IMAGE_WIDTH		6761903	0					
ANR	6762539	ArgumentList	image		6761903	1					
ANR	6762540	Argument	image		6761903	0					
ANR	6762541	Identifier	image		6761903	0					
ANR	6762542	Argument	jxr_get_IMAGE_HEIGHT ( image )		6761903	4					
ANR	6762543	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		6761903	0					
ANR	6762544	Callee	jxr_get_IMAGE_HEIGHT		6761903	0					
ANR	6762545	Identifier	jxr_get_IMAGE_HEIGHT		6761903	0					
ANR	6762546	ArgumentList	image		6761903	1					
ANR	6762547	Argument	image		6761903	0					
ANR	6762548	Identifier	image		6761903	0					
ANR	6762549	Argument	1		6761903	5					
ANR	6762550	PrimaryExpression	1		6761903	0					
ANR	6762551	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6761903	6					
ANR	6762552	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6761903	0					
ANR	6762553	Callee	jxr_get_OUTPUT_BITDEPTH		6761903	0					
ANR	6762554	Identifier	jxr_get_OUTPUT_BITDEPTH		6761903	0					
ANR	6762555	ArgumentList	image		6761903	1					
ANR	6762556	Argument	image		6761903	0					
ANR	6762557	Identifier	image		6761903	0					
ANR	6762558	Argument	jxr_get_pixel_format ( image )		6761903	7					
ANR	6762559	CallExpression	jxr_get_pixel_format ( image )		6761903	0					
ANR	6762560	Callee	jxr_get_pixel_format		6761903	0					
ANR	6762561	Identifier	jxr_get_pixel_format		6761903	0					
ANR	6762562	ArgumentList	image		6761903	1					
ANR	6762563	Argument	image		6761903	0					
ANR	6762564	Identifier	image		6761903	0					
ANR	6762565	IdentifierDeclStatement	int idx ;	2257:4:76671:76678	6761903	17	True				
ANR	6762566	IdentifierDecl	idx		6761903	0					
ANR	6762567	IdentifierDeclType	int		6761903	0					
ANR	6762568	Identifier	idx		6761903	1					
ANR	6762569	IdentifierDeclStatement	int strip_blocks = ( image -> extended_width ) / 16 ;	2258:4:76684:76729	6761903	18	True				
ANR	6762570	IdentifierDecl	strip_blocks = ( image -> extended_width ) / 16		6761903	0					
ANR	6762571	IdentifierDeclType	int		6761903	0					
ANR	6762572	Identifier	strip_blocks		6761903	1					
ANR	6762573	AssignmentExpression	strip_blocks = ( image -> extended_width ) / 16		6761903	2		=			
ANR	6762574	Identifier	strip_blocks		6761903	0					
ANR	6762575	MultiplicativeExpression	( image -> extended_width ) / 16		6761903	1		/			
ANR	6762576	PtrMemberAccess	image -> extended_width		6761903	0					
ANR	6762577	Identifier	image		6761903	0					
ANR	6762578	Identifier	extended_width		6761903	1					
ANR	6762579	PrimaryExpression	16		6761903	1					
ANR	6762580	IdentifierDeclStatement	int dy = 16 * strip_blocks ;	2259:4:76735:76759	6761903	19	True				
ANR	6762581	IdentifierDecl	dy = 16 * strip_blocks		6761903	0					
ANR	6762582	IdentifierDeclType	int		6761903	0					
ANR	6762583	Identifier	dy		6761903	1					
ANR	6762584	AssignmentExpression	dy = 16 * strip_blocks		6761903	2		=			
ANR	6762585	Identifier	dy		6761903	0					
ANR	6762586	MultiplicativeExpression	16 * strip_blocks		6761903	1		*			
ANR	6762587	PrimaryExpression	16		6761903	0					
ANR	6762588	Identifier	strip_blocks		6761903	1					
ANR	6762589	IfStatement	if ( con -> bpi == 8 )		6761903	20					
ANR	6762590	Condition	con -> bpi == 8	2261:8:76774:76786	6761903	0	True				
ANR	6762591	EqualityExpression	con -> bpi == 8		6761903	0		==			
ANR	6762592	PtrMemberAccess	con -> bpi		6761903	0					
ANR	6762593	Identifier	con		6761903	0					
ANR	6762594	Identifier	bpi		6761903	1					
ANR	6762595	PrimaryExpression	8		6761903	1					
ANR	6762596	CompoundStatement		76:8:3412:3453	6761903	1					
ANR	6762597	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conC -> buf + 16 * mx ;	2264:8:76816:76857	6761903	0	True				
ANR	6762598	IdentifierDecl	* dp = ( uint8_t * ) conC -> buf + 16 * mx		6761903	0					
ANR	6762599	IdentifierDeclType	uint8_t *		6761903	0					
ANR	6762600	Identifier	dp		6761903	1					
ANR	6762601	AssignmentExpression	* dp = ( uint8_t * ) conC -> buf + 16 * mx		6761903	2		=			
ANR	6762602	Identifier	dp		6761903	0					
ANR	6762603	AdditiveExpression	( uint8_t * ) conC -> buf + 16 * mx		6761903	1		+			
ANR	6762604	CastExpression	( uint8_t * ) conC -> buf		6761903	0					
ANR	6762605	CastTarget	uint8_t *		6761903	0					
ANR	6762606	PtrMemberAccess	conC -> buf		6761903	1					
ANR	6762607	Identifier	conC		6761903	0					
ANR	6762608	Identifier	buf		6761903	1					
ANR	6762609	MultiplicativeExpression	16 * mx		6761903	1		*			
ANR	6762610	PrimaryExpression	16		6761903	0					
ANR	6762611	Identifier	mx		6761903	1					
ANR	6762612	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		6761903	1					
ANR	6762613	ForInit	idx = 0 ;	2265:13:76872:76879	6761903	0	True				
ANR	6762614	AssignmentExpression	idx = 0		6761903	0		=			
ANR	6762615	Identifier	idx		6761903	0					
ANR	6762616	PrimaryExpression	0		6761903	1					
ANR	6762617	Condition	idx < 256	2265:22:76881:76889	6761903	1	True				
ANR	6762618	RelationalExpression	idx < 256		6761903	0		<			
ANR	6762619	Identifier	idx		6761903	0					
ANR	6762620	PrimaryExpression	256		6761903	1					
ANR	6762621	AssignmentExpression	idx += 1	2265:33:76892:76899	6761903	2	True	+=			
ANR	6762622	Identifier	idx		6761903	0					
ANR	6762623	PrimaryExpression	1		6761903	1					
ANR	6762624	CompoundStatement		78:12:3512:3544	6761903	3					
ANR	6762625	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2266:12:76916:76948	6761903	0	True				
ANR	6762626	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	0					
ANR	6762627	IdentifierDeclType	int		6761903	0					
ANR	6762628	Identifier	dix		6761903	1					
ANR	6762629	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	2		=			
ANR	6762630	Identifier	dix		6761903	0					
ANR	6762631	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		6761903	1		+			
ANR	6762632	MultiplicativeExpression	( idx / 16 ) * dy		6761903	0		*			
ANR	6762633	MultiplicativeExpression	idx / 16		6761903	0		/			
ANR	6762634	Identifier	idx		6761903	0					
ANR	6762635	PrimaryExpression	16		6761903	1					
ANR	6762636	Identifier	dy		6761903	1					
ANR	6762637	MultiplicativeExpression	idx % 16		6761903	1		%			
ANR	6762638	Identifier	idx		6761903	0					
ANR	6762639	PrimaryExpression	16		6761903	1					
ANR	6762640	ExpressionStatement	dp [ dix ] = dataC [ idx ]	2267:12:76974:76994	6761903	1	True				
ANR	6762641	AssignmentExpression	dp [ dix ] = dataC [ idx ]		6761903	0		=			
ANR	6762642	ArrayIndexing	dp [ dix ]		6761903	0					
ANR	6762643	Identifier	dp		6761903	0					
ANR	6762644	Identifier	dix		6761903	1					
ANR	6762645	ArrayIndexing	dataC [ idx ]		6761903	1					
ANR	6762646	Identifier	dataC		6761903	0					
ANR	6762647	Identifier	idx		6761903	1					
ANR	6762648	ExpressionStatement	dp = ( uint8_t * ) conM -> buf + 16 * mx	2271:8:77039:77071	6761903	2	True				
ANR	6762649	AssignmentExpression	dp = ( uint8_t * ) conM -> buf + 16 * mx		6761903	0		=			
ANR	6762650	Identifier	dp		6761903	0					
ANR	6762651	AdditiveExpression	( uint8_t * ) conM -> buf + 16 * mx		6761903	1		+			
ANR	6762652	CastExpression	( uint8_t * ) conM -> buf		6761903	0					
ANR	6762653	CastTarget	uint8_t *		6761903	0					
ANR	6762654	PtrMemberAccess	conM -> buf		6761903	1					
ANR	6762655	Identifier	conM		6761903	0					
ANR	6762656	Identifier	buf		6761903	1					
ANR	6762657	MultiplicativeExpression	16 * mx		6761903	1		*			
ANR	6762658	PrimaryExpression	16		6761903	0					
ANR	6762659	Identifier	mx		6761903	1					
ANR	6762660	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		6761903	3					
ANR	6762661	ForInit	idx = 0 ;	2272:13:77086:77093	6761903	0	True				
ANR	6762662	AssignmentExpression	idx = 0		6761903	0		=			
ANR	6762663	Identifier	idx		6761903	0					
ANR	6762664	PrimaryExpression	0		6761903	1					
ANR	6762665	Condition	idx < 256	2272:22:77095:77103	6761903	1	True				
ANR	6762666	RelationalExpression	idx < 256		6761903	0		<			
ANR	6762667	Identifier	idx		6761903	0					
ANR	6762668	PrimaryExpression	256		6761903	1					
ANR	6762669	AssignmentExpression	idx += 1	2272:33:77106:77113	6761903	2	True	+=			
ANR	6762670	Identifier	idx		6761903	0					
ANR	6762671	PrimaryExpression	1		6761903	1					
ANR	6762672	CompoundStatement		85:12:3726:3758	6761903	3					
ANR	6762673	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2273:12:77130:77162	6761903	0	True				
ANR	6762674	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	0					
ANR	6762675	IdentifierDeclType	int		6761903	0					
ANR	6762676	Identifier	dix		6761903	1					
ANR	6762677	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	2		=			
ANR	6762678	Identifier	dix		6761903	0					
ANR	6762679	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		6761903	1		+			
ANR	6762680	MultiplicativeExpression	( idx / 16 ) * dy		6761903	0		*			
ANR	6762681	MultiplicativeExpression	idx / 16		6761903	0		/			
ANR	6762682	Identifier	idx		6761903	0					
ANR	6762683	PrimaryExpression	16		6761903	1					
ANR	6762684	Identifier	dy		6761903	1					
ANR	6762685	MultiplicativeExpression	idx % 16		6761903	1		%			
ANR	6762686	Identifier	idx		6761903	0					
ANR	6762687	PrimaryExpression	16		6761903	1					
ANR	6762688	ExpressionStatement	dp [ dix ] = dataM [ idx ]	2274:12:77188:77208	6761903	1	True				
ANR	6762689	AssignmentExpression	dp [ dix ] = dataM [ idx ]		6761903	0		=			
ANR	6762690	ArrayIndexing	dp [ dix ]		6761903	0					
ANR	6762691	Identifier	dp		6761903	0					
ANR	6762692	Identifier	dix		6761903	1					
ANR	6762693	ArrayIndexing	dataM [ idx ]		6761903	1					
ANR	6762694	Identifier	dataM		6761903	0					
ANR	6762695	Identifier	idx		6761903	1					
ANR	6762696	ExpressionStatement	dp = ( uint8_t * ) conY -> buf + 16 * mx	2277:8:77244:77276	6761903	4	True				
ANR	6762697	AssignmentExpression	dp = ( uint8_t * ) conY -> buf + 16 * mx		6761903	0		=			
ANR	6762698	Identifier	dp		6761903	0					
ANR	6762699	AdditiveExpression	( uint8_t * ) conY -> buf + 16 * mx		6761903	1		+			
ANR	6762700	CastExpression	( uint8_t * ) conY -> buf		6761903	0					
ANR	6762701	CastTarget	uint8_t *		6761903	0					
ANR	6762702	PtrMemberAccess	conY -> buf		6761903	1					
ANR	6762703	Identifier	conY		6761903	0					
ANR	6762704	Identifier	buf		6761903	1					
ANR	6762705	MultiplicativeExpression	16 * mx		6761903	1		*			
ANR	6762706	PrimaryExpression	16		6761903	0					
ANR	6762707	Identifier	mx		6761903	1					
ANR	6762708	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		6761903	5					
ANR	6762709	ForInit	idx = 0 ;	2278:13:77291:77298	6761903	0	True				
ANR	6762710	AssignmentExpression	idx = 0		6761903	0		=			
ANR	6762711	Identifier	idx		6761903	0					
ANR	6762712	PrimaryExpression	0		6761903	1					
ANR	6762713	Condition	idx < 256	2278:22:77300:77308	6761903	1	True				
ANR	6762714	RelationalExpression	idx < 256		6761903	0		<			
ANR	6762715	Identifier	idx		6761903	0					
ANR	6762716	PrimaryExpression	256		6761903	1					
ANR	6762717	AssignmentExpression	idx += 1	2278:33:77311:77318	6761903	2	True	+=			
ANR	6762718	Identifier	idx		6761903	0					
ANR	6762719	PrimaryExpression	1		6761903	1					
ANR	6762720	CompoundStatement		91:12:3931:3963	6761903	3					
ANR	6762721	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2279:12:77335:77367	6761903	0	True				
ANR	6762722	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	0					
ANR	6762723	IdentifierDeclType	int		6761903	0					
ANR	6762724	Identifier	dix		6761903	1					
ANR	6762725	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	2		=			
ANR	6762726	Identifier	dix		6761903	0					
ANR	6762727	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		6761903	1		+			
ANR	6762728	MultiplicativeExpression	( idx / 16 ) * dy		6761903	0		*			
ANR	6762729	MultiplicativeExpression	idx / 16		6761903	0		/			
ANR	6762730	Identifier	idx		6761903	0					
ANR	6762731	PrimaryExpression	16		6761903	1					
ANR	6762732	Identifier	dy		6761903	1					
ANR	6762733	MultiplicativeExpression	idx % 16		6761903	1		%			
ANR	6762734	Identifier	idx		6761903	0					
ANR	6762735	PrimaryExpression	16		6761903	1					
ANR	6762736	ExpressionStatement	dp [ dix ] = dataY [ idx ]	2280:12:77393:77413	6761903	1	True				
ANR	6762737	AssignmentExpression	dp [ dix ] = dataY [ idx ]		6761903	0		=			
ANR	6762738	ArrayIndexing	dp [ dix ]		6761903	0					
ANR	6762739	Identifier	dp		6761903	0					
ANR	6762740	Identifier	dix		6761903	1					
ANR	6762741	ArrayIndexing	dataY [ idx ]		6761903	1					
ANR	6762742	Identifier	dataY		6761903	0					
ANR	6762743	Identifier	idx		6761903	1					
ANR	6762744	ExpressionStatement	dp = ( uint8_t * ) conK -> buf + 16 * mx	2283:8:77450:77482	6761903	6	True				
ANR	6762745	AssignmentExpression	dp = ( uint8_t * ) conK -> buf + 16 * mx		6761903	0		=			
ANR	6762746	Identifier	dp		6761903	0					
ANR	6762747	AdditiveExpression	( uint8_t * ) conK -> buf + 16 * mx		6761903	1		+			
ANR	6762748	CastExpression	( uint8_t * ) conK -> buf		6761903	0					
ANR	6762749	CastTarget	uint8_t *		6761903	0					
ANR	6762750	PtrMemberAccess	conK -> buf		6761903	1					
ANR	6762751	Identifier	conK		6761903	0					
ANR	6762752	Identifier	buf		6761903	1					
ANR	6762753	MultiplicativeExpression	16 * mx		6761903	1		*			
ANR	6762754	PrimaryExpression	16		6761903	0					
ANR	6762755	Identifier	mx		6761903	1					
ANR	6762756	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		6761903	7					
ANR	6762757	ForInit	idx = 0 ;	2284:13:77497:77504	6761903	0	True				
ANR	6762758	AssignmentExpression	idx = 0		6761903	0		=			
ANR	6762759	Identifier	idx		6761903	0					
ANR	6762760	PrimaryExpression	0		6761903	1					
ANR	6762761	Condition	idx < 256	2284:22:77506:77514	6761903	1	True				
ANR	6762762	RelationalExpression	idx < 256		6761903	0		<			
ANR	6762763	Identifier	idx		6761903	0					
ANR	6762764	PrimaryExpression	256		6761903	1					
ANR	6762765	AssignmentExpression	idx += 1	2284:33:77517:77524	6761903	2	True	+=			
ANR	6762766	Identifier	idx		6761903	0					
ANR	6762767	PrimaryExpression	1		6761903	1					
ANR	6762768	CompoundStatement		97:12:4137:4169	6761903	3					
ANR	6762769	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2285:12:77541:77573	6761903	0	True				
ANR	6762770	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	0					
ANR	6762771	IdentifierDeclType	int		6761903	0					
ANR	6762772	Identifier	dix		6761903	1					
ANR	6762773	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	2		=			
ANR	6762774	Identifier	dix		6761903	0					
ANR	6762775	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		6761903	1		+			
ANR	6762776	MultiplicativeExpression	( idx / 16 ) * dy		6761903	0		*			
ANR	6762777	MultiplicativeExpression	idx / 16		6761903	0		/			
ANR	6762778	Identifier	idx		6761903	0					
ANR	6762779	PrimaryExpression	16		6761903	1					
ANR	6762780	Identifier	dy		6761903	1					
ANR	6762781	MultiplicativeExpression	idx % 16		6761903	1		%			
ANR	6762782	Identifier	idx		6761903	0					
ANR	6762783	PrimaryExpression	16		6761903	1					
ANR	6762784	ExpressionStatement	dp [ dix ] = dataK [ idx ]	2286:12:77599:77619	6761903	1	True				
ANR	6762785	AssignmentExpression	dp [ dix ] = dataK [ idx ]		6761903	0		=			
ANR	6762786	ArrayIndexing	dp [ dix ]		6761903	0					
ANR	6762787	Identifier	dp		6761903	0					
ANR	6762788	Identifier	dix		6761903	1					
ANR	6762789	ArrayIndexing	dataK [ idx ]		6761903	1					
ANR	6762790	Identifier	dataK		6761903	0					
ANR	6762791	Identifier	idx		6761903	1					
ANR	6762792	IfStatement	if ( con -> alpha )		6761903	8					
ANR	6762793	Condition	con -> alpha	2290:11:77644:77653	6761903	0	True				
ANR	6762794	PtrMemberAccess	con -> alpha		6761903	0					
ANR	6762795	Identifier	con		6761903	0					
ANR	6762796	Identifier	alpha		6761903	1					
ANR	6762797	CompoundStatement		103:8:4260:4260	6761903	1					
ANR	6762798	ExpressionStatement	dp = ( uint8_t * ) conA -> buf + 16 * mx	2292:12:77678:77710	6761903	0	True				
ANR	6762799	AssignmentExpression	dp = ( uint8_t * ) conA -> buf + 16 * mx		6761903	0		=			
ANR	6762800	Identifier	dp		6761903	0					
ANR	6762801	AdditiveExpression	( uint8_t * ) conA -> buf + 16 * mx		6761903	1		+			
ANR	6762802	CastExpression	( uint8_t * ) conA -> buf		6761903	0					
ANR	6762803	CastTarget	uint8_t *		6761903	0					
ANR	6762804	PtrMemberAccess	conA -> buf		6761903	1					
ANR	6762805	Identifier	conA		6761903	0					
ANR	6762806	Identifier	buf		6761903	1					
ANR	6762807	MultiplicativeExpression	16 * mx		6761903	1		*			
ANR	6762808	PrimaryExpression	16		6761903	0					
ANR	6762809	Identifier	mx		6761903	1					
ANR	6762810	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		6761903	1					
ANR	6762811	ForInit	idx = 0 ;	2293:17:77729:77736	6761903	0	True				
ANR	6762812	AssignmentExpression	idx = 0		6761903	0		=			
ANR	6762813	Identifier	idx		6761903	0					
ANR	6762814	PrimaryExpression	0		6761903	1					
ANR	6762815	Condition	idx < 256	2293:26:77738:77746	6761903	1	True				
ANR	6762816	RelationalExpression	idx < 256		6761903	0		<			
ANR	6762817	Identifier	idx		6761903	0					
ANR	6762818	PrimaryExpression	256		6761903	1					
ANR	6762819	AssignmentExpression	idx += 1	2293:37:77749:77756	6761903	2	True	+=			
ANR	6762820	Identifier	idx		6761903	0					
ANR	6762821	PrimaryExpression	1		6761903	1					
ANR	6762822	CompoundStatement		106:16:4373:4405	6761903	3					
ANR	6762823	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2294:16:77777:77809	6761903	0	True				
ANR	6762824	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	0					
ANR	6762825	IdentifierDeclType	int		6761903	0					
ANR	6762826	Identifier	dix		6761903	1					
ANR	6762827	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	2		=			
ANR	6762828	Identifier	dix		6761903	0					
ANR	6762829	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		6761903	1		+			
ANR	6762830	MultiplicativeExpression	( idx / 16 ) * dy		6761903	0		*			
ANR	6762831	MultiplicativeExpression	idx / 16		6761903	0		/			
ANR	6762832	Identifier	idx		6761903	0					
ANR	6762833	PrimaryExpression	16		6761903	1					
ANR	6762834	Identifier	dy		6761903	1					
ANR	6762835	MultiplicativeExpression	idx % 16		6761903	1		%			
ANR	6762836	Identifier	idx		6761903	0					
ANR	6762837	PrimaryExpression	16		6761903	1					
ANR	6762838	ExpressionStatement	dp [ dix ] = dataA [ idx ]	2295:16:77839:77859	6761903	1	True				
ANR	6762839	AssignmentExpression	dp [ dix ] = dataA [ idx ]		6761903	0		=			
ANR	6762840	ArrayIndexing	dp [ dix ]		6761903	0					
ANR	6762841	Identifier	dp		6761903	0					
ANR	6762842	Identifier	dix		6761903	1					
ANR	6762843	ArrayIndexing	dataA [ idx ]		6761903	1					
ANR	6762844	Identifier	dataA		6761903	0					
ANR	6762845	Identifier	idx		6761903	1					
ANR	6762846	ElseStatement	else		6761903	0					
ANR	6762847	IfStatement	if ( con -> bpi == 16 || con -> bpi == 10 )		6761903	0					
ANR	6762848	Condition	con -> bpi == 16 || con -> bpi == 10	2300:12:77912:77943	6761903	0	True				
ANR	6762849	OrExpression	con -> bpi == 16 || con -> bpi == 10		6761903	0		||			
ANR	6762850	EqualityExpression	con -> bpi == 16		6761903	0		==			
ANR	6762851	PtrMemberAccess	con -> bpi		6761903	0					
ANR	6762852	Identifier	con		6761903	0					
ANR	6762853	Identifier	bpi		6761903	1					
ANR	6762854	PrimaryExpression	16		6761903	1					
ANR	6762855	EqualityExpression	con -> bpi == 10		6761903	1		==			
ANR	6762856	PtrMemberAccess	con -> bpi		6761903	0					
ANR	6762857	Identifier	con		6761903	0					
ANR	6762858	Identifier	bpi		6761903	1					
ANR	6762859	PrimaryExpression	10		6761903	1					
ANR	6762860	CompoundStatement		115:8:4569:4612	6761903	1					
ANR	6762861	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conC -> buf + 16 * mx ;	2303:8:77973:78016	6761903	0	True				
ANR	6762862	IdentifierDecl	* dp = ( uint16_t * ) conC -> buf + 16 * mx		6761903	0					
ANR	6762863	IdentifierDeclType	uint16_t *		6761903	0					
ANR	6762864	Identifier	dp		6761903	1					
ANR	6762865	AssignmentExpression	* dp = ( uint16_t * ) conC -> buf + 16 * mx		6761903	2		=			
ANR	6762866	Identifier	dp		6761903	0					
ANR	6762867	AdditiveExpression	( uint16_t * ) conC -> buf + 16 * mx		6761903	1		+			
ANR	6762868	CastExpression	( uint16_t * ) conC -> buf		6761903	0					
ANR	6762869	CastTarget	uint16_t *		6761903	0					
ANR	6762870	PtrMemberAccess	conC -> buf		6761903	1					
ANR	6762871	Identifier	conC		6761903	0					
ANR	6762872	Identifier	buf		6761903	1					
ANR	6762873	MultiplicativeExpression	16 * mx		6761903	1		*			
ANR	6762874	PrimaryExpression	16		6761903	0					
ANR	6762875	Identifier	mx		6761903	1					
ANR	6762876	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		6761903	1					
ANR	6762877	ForInit	idx = 0 ;	2304:13:78031:78038	6761903	0	True				
ANR	6762878	AssignmentExpression	idx = 0		6761903	0		=			
ANR	6762879	Identifier	idx		6761903	0					
ANR	6762880	PrimaryExpression	0		6761903	1					
ANR	6762881	Condition	idx < 256	2304:22:78040:78048	6761903	1	True				
ANR	6762882	RelationalExpression	idx < 256		6761903	0		<			
ANR	6762883	Identifier	idx		6761903	0					
ANR	6762884	PrimaryExpression	256		6761903	1					
ANR	6762885	AssignmentExpression	idx += 1	2304:33:78051:78058	6761903	2	True	+=			
ANR	6762886	Identifier	idx		6761903	0					
ANR	6762887	PrimaryExpression	1		6761903	1					
ANR	6762888	CompoundStatement		117:12:4671:4703	6761903	3					
ANR	6762889	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2305:12:78075:78107	6761903	0	True				
ANR	6762890	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	0					
ANR	6762891	IdentifierDeclType	int		6761903	0					
ANR	6762892	Identifier	dix		6761903	1					
ANR	6762893	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	2		=			
ANR	6762894	Identifier	dix		6761903	0					
ANR	6762895	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		6761903	1		+			
ANR	6762896	MultiplicativeExpression	( idx / 16 ) * dy		6761903	0		*			
ANR	6762897	MultiplicativeExpression	idx / 16		6761903	0		/			
ANR	6762898	Identifier	idx		6761903	0					
ANR	6762899	PrimaryExpression	16		6761903	1					
ANR	6762900	Identifier	dy		6761903	1					
ANR	6762901	MultiplicativeExpression	idx % 16		6761903	1		%			
ANR	6762902	Identifier	idx		6761903	0					
ANR	6762903	PrimaryExpression	16		6761903	1					
ANR	6762904	ExpressionStatement	dp [ dix ] = dataC [ idx ]	2306:12:78133:78153	6761903	1	True				
ANR	6762905	AssignmentExpression	dp [ dix ] = dataC [ idx ]		6761903	0		=			
ANR	6762906	ArrayIndexing	dp [ dix ]		6761903	0					
ANR	6762907	Identifier	dp		6761903	0					
ANR	6762908	Identifier	dix		6761903	1					
ANR	6762909	ArrayIndexing	dataC [ idx ]		6761903	1					
ANR	6762910	Identifier	dataC		6761903	0					
ANR	6762911	Identifier	idx		6761903	1					
ANR	6762912	ExpressionStatement	dp = ( uint16_t * ) conM -> buf + 16 * mx	2310:8:78205:78238	6761903	2	True				
ANR	6762913	AssignmentExpression	dp = ( uint16_t * ) conM -> buf + 16 * mx		6761903	0		=			
ANR	6762914	Identifier	dp		6761903	0					
ANR	6762915	AdditiveExpression	( uint16_t * ) conM -> buf + 16 * mx		6761903	1		+			
ANR	6762916	CastExpression	( uint16_t * ) conM -> buf		6761903	0					
ANR	6762917	CastTarget	uint16_t *		6761903	0					
ANR	6762918	PtrMemberAccess	conM -> buf		6761903	1					
ANR	6762919	Identifier	conM		6761903	0					
ANR	6762920	Identifier	buf		6761903	1					
ANR	6762921	MultiplicativeExpression	16 * mx		6761903	1		*			
ANR	6762922	PrimaryExpression	16		6761903	0					
ANR	6762923	Identifier	mx		6761903	1					
ANR	6762924	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		6761903	3					
ANR	6762925	ForInit	idx = 0 ;	2311:13:78253:78260	6761903	0	True				
ANR	6762926	AssignmentExpression	idx = 0		6761903	0		=			
ANR	6762927	Identifier	idx		6761903	0					
ANR	6762928	PrimaryExpression	0		6761903	1					
ANR	6762929	Condition	idx < 256	2311:22:78262:78270	6761903	1	True				
ANR	6762930	RelationalExpression	idx < 256		6761903	0		<			
ANR	6762931	Identifier	idx		6761903	0					
ANR	6762932	PrimaryExpression	256		6761903	1					
ANR	6762933	AssignmentExpression	idx += 1	2311:33:78273:78280	6761903	2	True	+=			
ANR	6762934	Identifier	idx		6761903	0					
ANR	6762935	PrimaryExpression	1		6761903	1					
ANR	6762936	CompoundStatement		124:12:4893:4925	6761903	3					
ANR	6762937	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2312:12:78297:78329	6761903	0	True				
ANR	6762938	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	0					
ANR	6762939	IdentifierDeclType	int		6761903	0					
ANR	6762940	Identifier	dix		6761903	1					
ANR	6762941	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	2		=			
ANR	6762942	Identifier	dix		6761903	0					
ANR	6762943	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		6761903	1		+			
ANR	6762944	MultiplicativeExpression	( idx / 16 ) * dy		6761903	0		*			
ANR	6762945	MultiplicativeExpression	idx / 16		6761903	0		/			
ANR	6762946	Identifier	idx		6761903	0					
ANR	6762947	PrimaryExpression	16		6761903	1					
ANR	6762948	Identifier	dy		6761903	1					
ANR	6762949	MultiplicativeExpression	idx % 16		6761903	1		%			
ANR	6762950	Identifier	idx		6761903	0					
ANR	6762951	PrimaryExpression	16		6761903	1					
ANR	6762952	ExpressionStatement	dp [ dix ] = dataM [ idx ]	2313:12:78355:78375	6761903	1	True				
ANR	6762953	AssignmentExpression	dp [ dix ] = dataM [ idx ]		6761903	0		=			
ANR	6762954	ArrayIndexing	dp [ dix ]		6761903	0					
ANR	6762955	Identifier	dp		6761903	0					
ANR	6762956	Identifier	dix		6761903	1					
ANR	6762957	ArrayIndexing	dataM [ idx ]		6761903	1					
ANR	6762958	Identifier	dataM		6761903	0					
ANR	6762959	Identifier	idx		6761903	1					
ANR	6762960	ExpressionStatement	dp = ( uint16_t * ) conY -> buf + 16 * mx	2316:8:78411:78444	6761903	4	True				
ANR	6762961	AssignmentExpression	dp = ( uint16_t * ) conY -> buf + 16 * mx		6761903	0		=			
ANR	6762962	Identifier	dp		6761903	0					
ANR	6762963	AdditiveExpression	( uint16_t * ) conY -> buf + 16 * mx		6761903	1		+			
ANR	6762964	CastExpression	( uint16_t * ) conY -> buf		6761903	0					
ANR	6762965	CastTarget	uint16_t *		6761903	0					
ANR	6762966	PtrMemberAccess	conY -> buf		6761903	1					
ANR	6762967	Identifier	conY		6761903	0					
ANR	6762968	Identifier	buf		6761903	1					
ANR	6762969	MultiplicativeExpression	16 * mx		6761903	1		*			
ANR	6762970	PrimaryExpression	16		6761903	0					
ANR	6762971	Identifier	mx		6761903	1					
ANR	6762972	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		6761903	5					
ANR	6762973	ForInit	idx = 0 ;	2317:13:78459:78466	6761903	0	True				
ANR	6762974	AssignmentExpression	idx = 0		6761903	0		=			
ANR	6762975	Identifier	idx		6761903	0					
ANR	6762976	PrimaryExpression	0		6761903	1					
ANR	6762977	Condition	idx < 256	2317:22:78468:78476	6761903	1	True				
ANR	6762978	RelationalExpression	idx < 256		6761903	0		<			
ANR	6762979	Identifier	idx		6761903	0					
ANR	6762980	PrimaryExpression	256		6761903	1					
ANR	6762981	AssignmentExpression	idx += 1	2317:33:78479:78486	6761903	2	True	+=			
ANR	6762982	Identifier	idx		6761903	0					
ANR	6762983	PrimaryExpression	1		6761903	1					
ANR	6762984	CompoundStatement		130:12:5099:5131	6761903	3					
ANR	6762985	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2318:12:78503:78535	6761903	0	True				
ANR	6762986	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	0					
ANR	6762987	IdentifierDeclType	int		6761903	0					
ANR	6762988	Identifier	dix		6761903	1					
ANR	6762989	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	2		=			
ANR	6762990	Identifier	dix		6761903	0					
ANR	6762991	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		6761903	1		+			
ANR	6762992	MultiplicativeExpression	( idx / 16 ) * dy		6761903	0		*			
ANR	6762993	MultiplicativeExpression	idx / 16		6761903	0		/			
ANR	6762994	Identifier	idx		6761903	0					
ANR	6762995	PrimaryExpression	16		6761903	1					
ANR	6762996	Identifier	dy		6761903	1					
ANR	6762997	MultiplicativeExpression	idx % 16		6761903	1		%			
ANR	6762998	Identifier	idx		6761903	0					
ANR	6762999	PrimaryExpression	16		6761903	1					
ANR	6763000	ExpressionStatement	dp [ dix ] = dataY [ idx ]	2319:12:78561:78581	6761903	1	True				
ANR	6763001	AssignmentExpression	dp [ dix ] = dataY [ idx ]		6761903	0		=			
ANR	6763002	ArrayIndexing	dp [ dix ]		6761903	0					
ANR	6763003	Identifier	dp		6761903	0					
ANR	6763004	Identifier	dix		6761903	1					
ANR	6763005	ArrayIndexing	dataY [ idx ]		6761903	1					
ANR	6763006	Identifier	dataY		6761903	0					
ANR	6763007	Identifier	idx		6761903	1					
ANR	6763008	ExpressionStatement	dp = ( uint16_t * ) conK -> buf + 16 * mx	2322:8:78617:78650	6761903	6	True				
ANR	6763009	AssignmentExpression	dp = ( uint16_t * ) conK -> buf + 16 * mx		6761903	0		=			
ANR	6763010	Identifier	dp		6761903	0					
ANR	6763011	AdditiveExpression	( uint16_t * ) conK -> buf + 16 * mx		6761903	1		+			
ANR	6763012	CastExpression	( uint16_t * ) conK -> buf		6761903	0					
ANR	6763013	CastTarget	uint16_t *		6761903	0					
ANR	6763014	PtrMemberAccess	conK -> buf		6761903	1					
ANR	6763015	Identifier	conK		6761903	0					
ANR	6763016	Identifier	buf		6761903	1					
ANR	6763017	MultiplicativeExpression	16 * mx		6761903	1		*			
ANR	6763018	PrimaryExpression	16		6761903	0					
ANR	6763019	Identifier	mx		6761903	1					
ANR	6763020	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		6761903	7					
ANR	6763021	ForInit	idx = 0 ;	2323:13:78665:78672	6761903	0	True				
ANR	6763022	AssignmentExpression	idx = 0		6761903	0		=			
ANR	6763023	Identifier	idx		6761903	0					
ANR	6763024	PrimaryExpression	0		6761903	1					
ANR	6763025	Condition	idx < 256	2323:22:78674:78682	6761903	1	True				
ANR	6763026	RelationalExpression	idx < 256		6761903	0		<			
ANR	6763027	Identifier	idx		6761903	0					
ANR	6763028	PrimaryExpression	256		6761903	1					
ANR	6763029	AssignmentExpression	idx += 1	2323:33:78685:78692	6761903	2	True	+=			
ANR	6763030	Identifier	idx		6761903	0					
ANR	6763031	PrimaryExpression	1		6761903	1					
ANR	6763032	CompoundStatement		136:12:5305:5337	6761903	3					
ANR	6763033	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2324:12:78709:78741	6761903	0	True				
ANR	6763034	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	0					
ANR	6763035	IdentifierDeclType	int		6761903	0					
ANR	6763036	Identifier	dix		6761903	1					
ANR	6763037	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	2		=			
ANR	6763038	Identifier	dix		6761903	0					
ANR	6763039	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		6761903	1		+			
ANR	6763040	MultiplicativeExpression	( idx / 16 ) * dy		6761903	0		*			
ANR	6763041	MultiplicativeExpression	idx / 16		6761903	0		/			
ANR	6763042	Identifier	idx		6761903	0					
ANR	6763043	PrimaryExpression	16		6761903	1					
ANR	6763044	Identifier	dy		6761903	1					
ANR	6763045	MultiplicativeExpression	idx % 16		6761903	1		%			
ANR	6763046	Identifier	idx		6761903	0					
ANR	6763047	PrimaryExpression	16		6761903	1					
ANR	6763048	ExpressionStatement	dp [ dix ] = dataK [ idx ]	2325:12:78767:78787	6761903	1	True				
ANR	6763049	AssignmentExpression	dp [ dix ] = dataK [ idx ]		6761903	0		=			
ANR	6763050	ArrayIndexing	dp [ dix ]		6761903	0					
ANR	6763051	Identifier	dp		6761903	0					
ANR	6763052	Identifier	dix		6761903	1					
ANR	6763053	ArrayIndexing	dataK [ idx ]		6761903	1					
ANR	6763054	Identifier	dataK		6761903	0					
ANR	6763055	Identifier	idx		6761903	1					
ANR	6763056	IfStatement	if ( con -> alpha )		6761903	8					
ANR	6763057	Condition	con -> alpha	2329:11:78827:78836	6761903	0	True				
ANR	6763058	PtrMemberAccess	con -> alpha		6761903	0					
ANR	6763059	Identifier	con		6761903	0					
ANR	6763060	Identifier	alpha		6761903	1					
ANR	6763061	CompoundStatement		142:8:5443:5443	6761903	1					
ANR	6763062	ExpressionStatement	dp = ( uint16_t * ) conA -> buf + 16 * mx	2331:12:78861:78894	6761903	0	True				
ANR	6763063	AssignmentExpression	dp = ( uint16_t * ) conA -> buf + 16 * mx		6761903	0		=			
ANR	6763064	Identifier	dp		6761903	0					
ANR	6763065	AdditiveExpression	( uint16_t * ) conA -> buf + 16 * mx		6761903	1		+			
ANR	6763066	CastExpression	( uint16_t * ) conA -> buf		6761903	0					
ANR	6763067	CastTarget	uint16_t *		6761903	0					
ANR	6763068	PtrMemberAccess	conA -> buf		6761903	1					
ANR	6763069	Identifier	conA		6761903	0					
ANR	6763070	Identifier	buf		6761903	1					
ANR	6763071	MultiplicativeExpression	16 * mx		6761903	1		*			
ANR	6763072	PrimaryExpression	16		6761903	0					
ANR	6763073	Identifier	mx		6761903	1					
ANR	6763074	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		6761903	1					
ANR	6763075	ForInit	idx = 0 ;	2332:17:78913:78920	6761903	0	True				
ANR	6763076	AssignmentExpression	idx = 0		6761903	0		=			
ANR	6763077	Identifier	idx		6761903	0					
ANR	6763078	PrimaryExpression	0		6761903	1					
ANR	6763079	Condition	idx < 256	2332:26:78922:78930	6761903	1	True				
ANR	6763080	RelationalExpression	idx < 256		6761903	0		<			
ANR	6763081	Identifier	idx		6761903	0					
ANR	6763082	PrimaryExpression	256		6761903	1					
ANR	6763083	AssignmentExpression	idx += 1	2332:37:78933:78940	6761903	2	True	+=			
ANR	6763084	Identifier	idx		6761903	0					
ANR	6763085	PrimaryExpression	1		6761903	1					
ANR	6763086	CompoundStatement		145:16:5557:5589	6761903	3					
ANR	6763087	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) ;	2333:16:78961:78993	6761903	0	True				
ANR	6763088	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	0					
ANR	6763089	IdentifierDeclType	int		6761903	0					
ANR	6763090	Identifier	dix		6761903	1					
ANR	6763091	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 )		6761903	2		=			
ANR	6763092	Identifier	dix		6761903	0					
ANR	6763093	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 )		6761903	1		+			
ANR	6763094	MultiplicativeExpression	( idx / 16 ) * dy		6761903	0		*			
ANR	6763095	MultiplicativeExpression	idx / 16		6761903	0		/			
ANR	6763096	Identifier	idx		6761903	0					
ANR	6763097	PrimaryExpression	16		6761903	1					
ANR	6763098	Identifier	dy		6761903	1					
ANR	6763099	MultiplicativeExpression	idx % 16		6761903	1		%			
ANR	6763100	Identifier	idx		6761903	0					
ANR	6763101	PrimaryExpression	16		6761903	1					
ANR	6763102	ExpressionStatement	dp [ dix ] = dataA [ idx ]	2334:16:79023:79043	6761903	1	True				
ANR	6763103	AssignmentExpression	dp [ dix ] = dataA [ idx ]		6761903	0		=			
ANR	6763104	ArrayIndexing	dp [ dix ]		6761903	0					
ANR	6763105	Identifier	dp		6761903	0					
ANR	6763106	Identifier	dix		6761903	1					
ANR	6763107	ArrayIndexing	dataA [ idx ]		6761903	1					
ANR	6763108	Identifier	dataA		6761903	0					
ANR	6763109	Identifier	idx		6761903	1					
ANR	6763110	ElseStatement	else		6761903	0					
ANR	6763111	CompoundStatement		151:4:5692:5692	6761903	0					
ANR	6763112	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2340:8:79106:79139	6761903	0	True				
ANR	6763113	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		6761903	0					
ANR	6763114	Callee	assert		6761903	0					
ANR	6763115	Identifier	assert		6761903	0					
ANR	6763116	ArgumentList	"! ""Unsupported bitdepth\\n"""		6761903	1					
ANR	6763117	Argument	"! ""Unsupported bitdepth\\n"""		6761903	0					
ANR	6763118	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		6761903	0					
ANR	6763119	UnaryOperator	!		6761903	0					
ANR	6763120	PrimaryExpression	"""Unsupported bitdepth\\n"""		6761903	1					
ANR	6763121	IfStatement	if ( mx + 1 == strip_blocks )		6761903	21					
ANR	6763122	Condition	mx + 1 == strip_blocks	2343:8:79156:79175	6761903	0	True				
ANR	6763123	EqualityExpression	mx + 1 == strip_blocks		6761903	0		==			
ANR	6763124	AdditiveExpression	mx + 1		6761903	0		+			
ANR	6763125	Identifier	mx		6761903	0					
ANR	6763126	PrimaryExpression	1		6761903	1					
ANR	6763127	Identifier	strip_blocks		6761903	1					
ANR	6763128	CompoundStatement		155:30:5774:5774	6761903	1					
ANR	6763129	IfStatement	if ( con -> bpi == 8 )		6761903	0					
ANR	6763130	Condition	con -> bpi == 8	2345:11:79200:79212	6761903	0	True				
ANR	6763131	EqualityExpression	con -> bpi == 8		6761903	0		==			
ANR	6763132	PtrMemberAccess	con -> bpi		6761903	0					
ANR	6763133	Identifier	con		6761903	0					
ANR	6763134	Identifier	bpi		6761903	1					
ANR	6763135	PrimaryExpression	8		6761903	1					
ANR	6763136	CompoundStatement		160:12:5928:6016	6761903	1					
ANR	6763137	IdentifierDeclStatement	int first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining ;	2347:12:79247:79318	6761903	0	True				
ANR	6763138	IdentifierDecl	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		6761903	0					
ANR	6763139	IdentifierDeclType	int		6761903	0					
ANR	6763140	Identifier	first		6761903	1					
ANR	6763141	AssignmentExpression	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		6761903	2		=			
ANR	6763142	Identifier	first		6761903	0					
ANR	6763143	ConditionalExpression	( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		6761903	1					
ANR	6763144	Condition	con -> top_pad_remaining > 16		6761903	0					
ANR	6763145	RelationalExpression	con -> top_pad_remaining > 16		6761903	0		>			
ANR	6763146	PtrMemberAccess	con -> top_pad_remaining		6761903	0					
ANR	6763147	Identifier	con		6761903	0					
ANR	6763148	Identifier	top_pad_remaining		6761903	1					
ANR	6763149	PrimaryExpression	16		6761903	1					
ANR	6763150	PrimaryExpression	16		6761903	1					
ANR	6763151	PtrMemberAccess	con -> top_pad_remaining		6761903	2					
ANR	6763152	Identifier	con		6761903	0					
ANR	6763153	Identifier	top_pad_remaining		6761903	1					
ANR	6763154	IdentifierDeclStatement	int trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16 ;	2348:12:79332:79420	6761903	1	True				
ANR	6763155	IdentifierDecl	trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		6761903	0					
ANR	6763156	IdentifierDeclType	int		6761903	0					
ANR	6763157	Identifier	trans		6761903	1					
ANR	6763158	AssignmentExpression	trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		6761903	2		=			
ANR	6763159	Identifier	trans		6761903	0					
ANR	6763160	ConditionalExpression	( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		6761903	1					
ANR	6763161	Condition	my * 16 + 16 > ( con -> hei + con -> top_pad )		6761903	0					
ANR	6763162	RelationalExpression	my * 16 + 16 > ( con -> hei + con -> top_pad )		6761903	0		>			
ANR	6763163	AdditiveExpression	my * 16 + 16		6761903	0		+			
ANR	6763164	MultiplicativeExpression	my * 16		6761903	0		*			
ANR	6763165	Identifier	my		6761903	0					
ANR	6763166	PrimaryExpression	16		6761903	1					
ANR	6763167	PrimaryExpression	16		6761903	1					
ANR	6763168	AdditiveExpression	con -> hei + con -> top_pad		6761903	1		+			
ANR	6763169	PtrMemberAccess	con -> hei		6761903	0					
ANR	6763170	Identifier	con		6761903	0					
ANR	6763171	Identifier	hei		6761903	1					
ANR	6763172	PtrMemberAccess	con -> top_pad		6761903	1					
ANR	6763173	Identifier	con		6761903	0					
ANR	6763174	Identifier	top_pad		6761903	1					
ANR	6763175	MultiplicativeExpression	( con -> hei + con -> top_pad ) % 16		6761903	1		%			
ANR	6763176	AdditiveExpression	con -> hei + con -> top_pad		6761903	0		+			
ANR	6763177	PtrMemberAccess	con -> hei		6761903	0					
ANR	6763178	Identifier	con		6761903	0					
ANR	6763179	Identifier	hei		6761903	1					
ANR	6763180	PtrMemberAccess	con -> top_pad		6761903	1					
ANR	6763181	Identifier	con		6761903	0					
ANR	6763182	Identifier	top_pad		6761903	1					
ANR	6763183	PrimaryExpression	16		6761903	1					
ANR	6763184	PrimaryExpression	16		6761903	2					
ANR	6763185	ExpressionStatement	dy = 16 * strip_blocks	2350:12:79440:79460	6761903	2	True				
ANR	6763186	AssignmentExpression	dy = 16 * strip_blocks		6761903	0		=			
ANR	6763187	Identifier	dy		6761903	0					
ANR	6763188	MultiplicativeExpression	16 * strip_blocks		6761903	1		*			
ANR	6763189	PrimaryExpression	16		6761903	0					
ANR	6763190	Identifier	strip_blocks		6761903	1					
ANR	6763191	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6761903	3					
ANR	6763192	ForInit	idx = first ;	2351:17:79479:79490	6761903	0	True				
ANR	6763193	AssignmentExpression	idx = first		6761903	0		=			
ANR	6763194	Identifier	idx		6761903	0					
ANR	6763195	Identifier	first		6761903	1					
ANR	6763196	Condition	idx < trans	2351:30:79492:79502	6761903	1	True				
ANR	6763197	RelationalExpression	idx < trans		6761903	0		<			
ANR	6763198	Identifier	idx		6761903	0					
ANR	6763199	Identifier	trans		6761903	1					
ANR	6763200	AssignmentExpression	idx += 1	2351:43:79505:79512	6761903	2	True	+=			
ANR	6763201	Identifier	idx		6761903	0					
ANR	6763202	PrimaryExpression	1		6761903	1					
ANR	6763203	CompoundStatement		164:16:6129:6187	6761903	3					
ANR	6763204	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conC -> buf + idx * dy + con -> left_pad ;	2352:16:79533:79591	6761903	0	True				
ANR	6763205	IdentifierDecl	* dp = ( uint8_t * ) conC -> buf + idx * dy + con -> left_pad		6761903	0					
ANR	6763206	IdentifierDeclType	uint8_t *		6761903	0					
ANR	6763207	Identifier	dp		6761903	1					
ANR	6763208	AssignmentExpression	* dp = ( uint8_t * ) conC -> buf + idx * dy + con -> left_pad		6761903	2		=			
ANR	6763209	Identifier	dp		6761903	0					
ANR	6763210	AdditiveExpression	( uint8_t * ) conC -> buf + idx * dy + con -> left_pad		6761903	1		+			
ANR	6763211	CastExpression	( uint8_t * ) conC -> buf		6761903	0					
ANR	6763212	CastTarget	uint8_t *		6761903	0					
ANR	6763213	PtrMemberAccess	conC -> buf		6761903	1					
ANR	6763214	Identifier	conC		6761903	0					
ANR	6763215	Identifier	buf		6761903	1					
ANR	6763216	AdditiveExpression	idx * dy + con -> left_pad		6761903	1		+			
ANR	6763217	MultiplicativeExpression	idx * dy		6761903	0		*			
ANR	6763218	Identifier	idx		6761903	0					
ANR	6763219	Identifier	dy		6761903	1					
ANR	6763220	PtrMemberAccess	con -> left_pad		6761903	1					
ANR	6763221	Identifier	con		6761903	0					
ANR	6763222	Identifier	left_pad		6761903	1					
ANR	6763223	ExpressionStatement	"write_uint8 ( conC , dp , conC -> wid )"	2353:16:79625:79658	6761903	1	True				
ANR	6763224	CallExpression	"write_uint8 ( conC , dp , conC -> wid )"		6761903	0					
ANR	6763225	Callee	write_uint8		6761903	0					
ANR	6763226	Identifier	write_uint8		6761903	0					
ANR	6763227	ArgumentList	conC		6761903	1					
ANR	6763228	Argument	conC		6761903	0					
ANR	6763229	Identifier	conC		6761903	0					
ANR	6763230	Argument	dp		6761903	1					
ANR	6763231	Identifier	dp		6761903	0					
ANR	6763232	Argument	conC -> wid		6761903	2					
ANR	6763233	PtrMemberAccess	conC -> wid		6761903	0					
ANR	6763234	Identifier	conC		6761903	0					
ANR	6763235	Identifier	wid		6761903	1					
ANR	6763236	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6761903	4					
ANR	6763237	ForInit	idx = first ;	2355:17:79702:79713	6761903	0	True				
ANR	6763238	AssignmentExpression	idx = first		6761903	0		=			
ANR	6763239	Identifier	idx		6761903	0					
ANR	6763240	Identifier	first		6761903	1					
ANR	6763241	Condition	idx < trans	2355:30:79715:79725	6761903	1	True				
ANR	6763242	RelationalExpression	idx < trans		6761903	0		<			
ANR	6763243	Identifier	idx		6761903	0					
ANR	6763244	Identifier	trans		6761903	1					
ANR	6763245	AssignmentExpression	idx += 1	2355:43:79728:79735	6761903	2	True	+=			
ANR	6763246	Identifier	idx		6761903	0					
ANR	6763247	PrimaryExpression	1		6761903	1					
ANR	6763248	CompoundStatement		168:16:6352:6410	6761903	3					
ANR	6763249	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conM -> buf + idx * dy + con -> left_pad ;	2356:16:79756:79814	6761903	0	True				
ANR	6763250	IdentifierDecl	* dp = ( uint8_t * ) conM -> buf + idx * dy + con -> left_pad		6761903	0					
ANR	6763251	IdentifierDeclType	uint8_t *		6761903	0					
ANR	6763252	Identifier	dp		6761903	1					
ANR	6763253	AssignmentExpression	* dp = ( uint8_t * ) conM -> buf + idx * dy + con -> left_pad		6761903	2		=			
ANR	6763254	Identifier	dp		6761903	0					
ANR	6763255	AdditiveExpression	( uint8_t * ) conM -> buf + idx * dy + con -> left_pad		6761903	1		+			
ANR	6763256	CastExpression	( uint8_t * ) conM -> buf		6761903	0					
ANR	6763257	CastTarget	uint8_t *		6761903	0					
ANR	6763258	PtrMemberAccess	conM -> buf		6761903	1					
ANR	6763259	Identifier	conM		6761903	0					
ANR	6763260	Identifier	buf		6761903	1					
ANR	6763261	AdditiveExpression	idx * dy + con -> left_pad		6761903	1		+			
ANR	6763262	MultiplicativeExpression	idx * dy		6761903	0		*			
ANR	6763263	Identifier	idx		6761903	0					
ANR	6763264	Identifier	dy		6761903	1					
ANR	6763265	PtrMemberAccess	con -> left_pad		6761903	1					
ANR	6763266	Identifier	con		6761903	0					
ANR	6763267	Identifier	left_pad		6761903	1					
ANR	6763268	ExpressionStatement	"write_uint8 ( conM , dp , ( conM -> wid ) )"	2357:16:79848:79882	6761903	1	True				
ANR	6763269	CallExpression	"write_uint8 ( conM , dp , ( conM -> wid ) )"		6761903	0					
ANR	6763270	Callee	write_uint8		6761903	0					
ANR	6763271	Identifier	write_uint8		6761903	0					
ANR	6763272	ArgumentList	conM		6761903	1					
ANR	6763273	Argument	conM		6761903	0					
ANR	6763274	Identifier	conM		6761903	0					
ANR	6763275	Argument	dp		6761903	1					
ANR	6763276	Identifier	dp		6761903	0					
ANR	6763277	Argument	conM -> wid		6761903	2					
ANR	6763278	PtrMemberAccess	conM -> wid		6761903	0					
ANR	6763279	Identifier	conM		6761903	0					
ANR	6763280	Identifier	wid		6761903	1					
ANR	6763281	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6761903	5					
ANR	6763282	ForInit	idx = first ;	2359:17:79927:79938	6761903	0	True				
ANR	6763283	AssignmentExpression	idx = first		6761903	0		=			
ANR	6763284	Identifier	idx		6761903	0					
ANR	6763285	Identifier	first		6761903	1					
ANR	6763286	Condition	idx < trans	2359:30:79940:79950	6761903	1	True				
ANR	6763287	RelationalExpression	idx < trans		6761903	0		<			
ANR	6763288	Identifier	idx		6761903	0					
ANR	6763289	Identifier	trans		6761903	1					
ANR	6763290	AssignmentExpression	idx += 1	2359:43:79953:79960	6761903	2	True	+=			
ANR	6763291	Identifier	idx		6761903	0					
ANR	6763292	PrimaryExpression	1		6761903	1					
ANR	6763293	CompoundStatement		172:16:6577:6635	6761903	3					
ANR	6763294	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conY -> buf + idx * dy + con -> left_pad ;	2360:16:79981:80039	6761903	0	True				
ANR	6763295	IdentifierDecl	* dp = ( uint8_t * ) conY -> buf + idx * dy + con -> left_pad		6761903	0					
ANR	6763296	IdentifierDeclType	uint8_t *		6761903	0					
ANR	6763297	Identifier	dp		6761903	1					
ANR	6763298	AssignmentExpression	* dp = ( uint8_t * ) conY -> buf + idx * dy + con -> left_pad		6761903	2		=			
ANR	6763299	Identifier	dp		6761903	0					
ANR	6763300	AdditiveExpression	( uint8_t * ) conY -> buf + idx * dy + con -> left_pad		6761903	1		+			
ANR	6763301	CastExpression	( uint8_t * ) conY -> buf		6761903	0					
ANR	6763302	CastTarget	uint8_t *		6761903	0					
ANR	6763303	PtrMemberAccess	conY -> buf		6761903	1					
ANR	6763304	Identifier	conY		6761903	0					
ANR	6763305	Identifier	buf		6761903	1					
ANR	6763306	AdditiveExpression	idx * dy + con -> left_pad		6761903	1		+			
ANR	6763307	MultiplicativeExpression	idx * dy		6761903	0		*			
ANR	6763308	Identifier	idx		6761903	0					
ANR	6763309	Identifier	dy		6761903	1					
ANR	6763310	PtrMemberAccess	con -> left_pad		6761903	1					
ANR	6763311	Identifier	con		6761903	0					
ANR	6763312	Identifier	left_pad		6761903	1					
ANR	6763313	ExpressionStatement	"write_uint8 ( conY , dp , ( conY -> wid ) )"	2361:16:80073:80107	6761903	1	True				
ANR	6763314	CallExpression	"write_uint8 ( conY , dp , ( conY -> wid ) )"		6761903	0					
ANR	6763315	Callee	write_uint8		6761903	0					
ANR	6763316	Identifier	write_uint8		6761903	0					
ANR	6763317	ArgumentList	conY		6761903	1					
ANR	6763318	Argument	conY		6761903	0					
ANR	6763319	Identifier	conY		6761903	0					
ANR	6763320	Argument	dp		6761903	1					
ANR	6763321	Identifier	dp		6761903	0					
ANR	6763322	Argument	conY -> wid		6761903	2					
ANR	6763323	PtrMemberAccess	conY -> wid		6761903	0					
ANR	6763324	Identifier	conY		6761903	0					
ANR	6763325	Identifier	wid		6761903	1					
ANR	6763326	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6761903	6					
ANR	6763327	ForInit	idx = first ;	2363:17:80140:80151	6761903	0	True				
ANR	6763328	AssignmentExpression	idx = first		6761903	0		=			
ANR	6763329	Identifier	idx		6761903	0					
ANR	6763330	Identifier	first		6761903	1					
ANR	6763331	Condition	idx < trans	2363:30:80153:80163	6761903	1	True				
ANR	6763332	RelationalExpression	idx < trans		6761903	0		<			
ANR	6763333	Identifier	idx		6761903	0					
ANR	6763334	Identifier	trans		6761903	1					
ANR	6763335	AssignmentExpression	idx += 1	2363:43:80166:80173	6761903	2	True	+=			
ANR	6763336	Identifier	idx		6761903	0					
ANR	6763337	PrimaryExpression	1		6761903	1					
ANR	6763338	CompoundStatement		176:16:6790:6848	6761903	3					
ANR	6763339	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conK -> buf + idx * dy + con -> left_pad ;	2364:16:80194:80252	6761903	0	True				
ANR	6763340	IdentifierDecl	* dp = ( uint8_t * ) conK -> buf + idx * dy + con -> left_pad		6761903	0					
ANR	6763341	IdentifierDeclType	uint8_t *		6761903	0					
ANR	6763342	Identifier	dp		6761903	1					
ANR	6763343	AssignmentExpression	* dp = ( uint8_t * ) conK -> buf + idx * dy + con -> left_pad		6761903	2		=			
ANR	6763344	Identifier	dp		6761903	0					
ANR	6763345	AdditiveExpression	( uint8_t * ) conK -> buf + idx * dy + con -> left_pad		6761903	1		+			
ANR	6763346	CastExpression	( uint8_t * ) conK -> buf		6761903	0					
ANR	6763347	CastTarget	uint8_t *		6761903	0					
ANR	6763348	PtrMemberAccess	conK -> buf		6761903	1					
ANR	6763349	Identifier	conK		6761903	0					
ANR	6763350	Identifier	buf		6761903	1					
ANR	6763351	AdditiveExpression	idx * dy + con -> left_pad		6761903	1		+			
ANR	6763352	MultiplicativeExpression	idx * dy		6761903	0		*			
ANR	6763353	Identifier	idx		6761903	0					
ANR	6763354	Identifier	dy		6761903	1					
ANR	6763355	PtrMemberAccess	con -> left_pad		6761903	1					
ANR	6763356	Identifier	con		6761903	0					
ANR	6763357	Identifier	left_pad		6761903	1					
ANR	6763358	ExpressionStatement	"write_uint8 ( conK , dp , ( conK -> wid ) )"	2365:16:80286:80320	6761903	1	True				
ANR	6763359	CallExpression	"write_uint8 ( conK , dp , ( conK -> wid ) )"		6761903	0					
ANR	6763360	Callee	write_uint8		6761903	0					
ANR	6763361	Identifier	write_uint8		6761903	0					
ANR	6763362	ArgumentList	conK		6761903	1					
ANR	6763363	Argument	conK		6761903	0					
ANR	6763364	Identifier	conK		6761903	0					
ANR	6763365	Argument	dp		6761903	1					
ANR	6763366	Identifier	dp		6761903	0					
ANR	6763367	Argument	conK -> wid		6761903	2					
ANR	6763368	PtrMemberAccess	conK -> wid		6761903	0					
ANR	6763369	Identifier	conK		6761903	0					
ANR	6763370	Identifier	wid		6761903	1					
ANR	6763371	IfStatement	if ( con -> alpha )		6761903	7					
ANR	6763372	Condition	con -> alpha	2368:15:80352:80361	6761903	0	True				
ANR	6763373	PtrMemberAccess	con -> alpha		6761903	0					
ANR	6763374	Identifier	con		6761903	0					
ANR	6763375	Identifier	alpha		6761903	1					
ANR	6763376	CompoundStatement		181:12:6972:6972	6761903	1					
ANR	6763377	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6761903	0					
ANR	6763378	ForInit	idx = first ;	2370:21:80415:80426	6761903	0	True				
ANR	6763379	AssignmentExpression	idx = first		6761903	0		=			
ANR	6763380	Identifier	idx		6761903	0					
ANR	6763381	Identifier	first		6761903	1					
ANR	6763382	Condition	idx < trans	2370:34:80428:80438	6761903	1	True				
ANR	6763383	RelationalExpression	idx < trans		6761903	0		<			
ANR	6763384	Identifier	idx		6761903	0					
ANR	6763385	Identifier	trans		6761903	1					
ANR	6763386	AssignmentExpression	idx += 1	2370:47:80441:80448	6761903	2	True	+=			
ANR	6763387	Identifier	idx		6761903	0					
ANR	6763388	PrimaryExpression	1		6761903	1					
ANR	6763389	CompoundStatement		183:20:7069:7127	6761903	3					
ANR	6763390	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) conA -> buf + idx * dy + con -> left_pad ;	2371:20:80473:80531	6761903	0	True				
ANR	6763391	IdentifierDecl	* dp = ( uint8_t * ) conA -> buf + idx * dy + con -> left_pad		6761903	0					
ANR	6763392	IdentifierDeclType	uint8_t *		6761903	0					
ANR	6763393	Identifier	dp		6761903	1					
ANR	6763394	AssignmentExpression	* dp = ( uint8_t * ) conA -> buf + idx * dy + con -> left_pad		6761903	2		=			
ANR	6763395	Identifier	dp		6761903	0					
ANR	6763396	AdditiveExpression	( uint8_t * ) conA -> buf + idx * dy + con -> left_pad		6761903	1		+			
ANR	6763397	CastExpression	( uint8_t * ) conA -> buf		6761903	0					
ANR	6763398	CastTarget	uint8_t *		6761903	0					
ANR	6763399	PtrMemberAccess	conA -> buf		6761903	1					
ANR	6763400	Identifier	conA		6761903	0					
ANR	6763401	Identifier	buf		6761903	1					
ANR	6763402	AdditiveExpression	idx * dy + con -> left_pad		6761903	1		+			
ANR	6763403	MultiplicativeExpression	idx * dy		6761903	0		*			
ANR	6763404	Identifier	idx		6761903	0					
ANR	6763405	Identifier	dy		6761903	1					
ANR	6763406	PtrMemberAccess	con -> left_pad		6761903	1					
ANR	6763407	Identifier	con		6761903	0					
ANR	6763408	Identifier	left_pad		6761903	1					
ANR	6763409	ExpressionStatement	"write_uint8 ( conA , dp , conA -> wid )"	2372:20:80585:80617	6761903	1	True				
ANR	6763410	CallExpression	"write_uint8 ( conA , dp , conA -> wid )"		6761903	0					
ANR	6763411	Callee	write_uint8		6761903	0					
ANR	6763412	Identifier	write_uint8		6761903	0					
ANR	6763413	ArgumentList	conA		6761903	1					
ANR	6763414	Argument	conA		6761903	0					
ANR	6763415	Identifier	conA		6761903	0					
ANR	6763416	Argument	dp		6761903	1					
ANR	6763417	Identifier	dp		6761903	0					
ANR	6763418	Argument	conA -> wid		6761903	2					
ANR	6763419	PtrMemberAccess	conA -> wid		6761903	0					
ANR	6763420	Identifier	conA		6761903	0					
ANR	6763421	Identifier	wid		6761903	1					
ANR	6763422	ExpressionStatement	con -> top_pad_remaining -= first	2375:12:80691:80722	6761903	8	True				
ANR	6763423	AssignmentExpression	con -> top_pad_remaining -= first		6761903	0		-=			
ANR	6763424	PtrMemberAccess	con -> top_pad_remaining		6761903	0					
ANR	6763425	Identifier	con		6761903	0					
ANR	6763426	Identifier	top_pad_remaining		6761903	1					
ANR	6763427	Identifier	first		6761903	1					
ANR	6763428	ElseStatement	else		6761903	0					
ANR	6763429	IfStatement	if ( con -> bpi == 16 || con -> bpi == 10 )		6761903	0					
ANR	6763430	Condition	con -> bpi == 16 || con -> bpi == 10	2377:16:80750:80781	6761903	0	True				
ANR	6763431	OrExpression	con -> bpi == 16 || con -> bpi == 10		6761903	0		||			
ANR	6763432	EqualityExpression	con -> bpi == 16		6761903	0		==			
ANR	6763433	PtrMemberAccess	con -> bpi		6761903	0					
ANR	6763434	Identifier	con		6761903	0					
ANR	6763435	Identifier	bpi		6761903	1					
ANR	6763436	PrimaryExpression	16		6761903	1					
ANR	6763437	EqualityExpression	con -> bpi == 10		6761903	1		==			
ANR	6763438	PtrMemberAccess	con -> bpi		6761903	0					
ANR	6763439	Identifier	con		6761903	0					
ANR	6763440	Identifier	bpi		6761903	1					
ANR	6763441	PrimaryExpression	10		6761903	1					
ANR	6763442	CompoundStatement		192:12:7490:7578	6761903	1					
ANR	6763443	IdentifierDeclStatement	int first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining ;	2379:12:80809:80880	6761903	0	True				
ANR	6763444	IdentifierDecl	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		6761903	0					
ANR	6763445	IdentifierDeclType	int		6761903	0					
ANR	6763446	Identifier	first		6761903	1					
ANR	6763447	AssignmentExpression	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		6761903	2		=			
ANR	6763448	Identifier	first		6761903	0					
ANR	6763449	ConditionalExpression	( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		6761903	1					
ANR	6763450	Condition	con -> top_pad_remaining > 16		6761903	0					
ANR	6763451	RelationalExpression	con -> top_pad_remaining > 16		6761903	0		>			
ANR	6763452	PtrMemberAccess	con -> top_pad_remaining		6761903	0					
ANR	6763453	Identifier	con		6761903	0					
ANR	6763454	Identifier	top_pad_remaining		6761903	1					
ANR	6763455	PrimaryExpression	16		6761903	1					
ANR	6763456	PrimaryExpression	16		6761903	1					
ANR	6763457	PtrMemberAccess	con -> top_pad_remaining		6761903	2					
ANR	6763458	Identifier	con		6761903	0					
ANR	6763459	Identifier	top_pad_remaining		6761903	1					
ANR	6763460	IdentifierDeclStatement	int trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16 ;	2380:12:80894:80982	6761903	1	True				
ANR	6763461	IdentifierDecl	trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		6761903	0					
ANR	6763462	IdentifierDeclType	int		6761903	0					
ANR	6763463	Identifier	trans		6761903	1					
ANR	6763464	AssignmentExpression	trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		6761903	2		=			
ANR	6763465	Identifier	trans		6761903	0					
ANR	6763466	ConditionalExpression	( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		6761903	1					
ANR	6763467	Condition	my * 16 + 16 > ( con -> hei + con -> top_pad )		6761903	0					
ANR	6763468	RelationalExpression	my * 16 + 16 > ( con -> hei + con -> top_pad )		6761903	0		>			
ANR	6763469	AdditiveExpression	my * 16 + 16		6761903	0		+			
ANR	6763470	MultiplicativeExpression	my * 16		6761903	0		*			
ANR	6763471	Identifier	my		6761903	0					
ANR	6763472	PrimaryExpression	16		6761903	1					
ANR	6763473	PrimaryExpression	16		6761903	1					
ANR	6763474	AdditiveExpression	con -> hei + con -> top_pad		6761903	1		+			
ANR	6763475	PtrMemberAccess	con -> hei		6761903	0					
ANR	6763476	Identifier	con		6761903	0					
ANR	6763477	Identifier	hei		6761903	1					
ANR	6763478	PtrMemberAccess	con -> top_pad		6761903	1					
ANR	6763479	Identifier	con		6761903	0					
ANR	6763480	Identifier	top_pad		6761903	1					
ANR	6763481	MultiplicativeExpression	( con -> hei + con -> top_pad ) % 16		6761903	1		%			
ANR	6763482	AdditiveExpression	con -> hei + con -> top_pad		6761903	0		+			
ANR	6763483	PtrMemberAccess	con -> hei		6761903	0					
ANR	6763484	Identifier	con		6761903	0					
ANR	6763485	Identifier	hei		6761903	1					
ANR	6763486	PtrMemberAccess	con -> top_pad		6761903	1					
ANR	6763487	Identifier	con		6761903	0					
ANR	6763488	Identifier	top_pad		6761903	1					
ANR	6763489	PrimaryExpression	16		6761903	1					
ANR	6763490	PrimaryExpression	16		6761903	2					
ANR	6763491	ExpressionStatement	dy = 16 * strip_blocks	2381:12:81001:81021	6761903	2	True				
ANR	6763492	AssignmentExpression	dy = 16 * strip_blocks		6761903	0		=			
ANR	6763493	Identifier	dy		6761903	0					
ANR	6763494	MultiplicativeExpression	16 * strip_blocks		6761903	1		*			
ANR	6763495	PrimaryExpression	16		6761903	0					
ANR	6763496	Identifier	strip_blocks		6761903	1					
ANR	6763497	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6761903	3					
ANR	6763498	ForInit	idx = first ;	2382:17:81040:81051	6761903	0	True				
ANR	6763499	AssignmentExpression	idx = first		6761903	0		=			
ANR	6763500	Identifier	idx		6761903	0					
ANR	6763501	Identifier	first		6761903	1					
ANR	6763502	Condition	idx < trans	2382:30:81053:81063	6761903	1	True				
ANR	6763503	RelationalExpression	idx < trans		6761903	0		<			
ANR	6763504	Identifier	idx		6761903	0					
ANR	6763505	Identifier	trans		6761903	1					
ANR	6763506	AssignmentExpression	idx += 1	2382:43:81066:81073	6761903	2	True	+=			
ANR	6763507	Identifier	idx		6761903	0					
ANR	6763508	PrimaryExpression	1		6761903	1					
ANR	6763509	CompoundStatement		195:16:7690:7750	6761903	3					
ANR	6763510	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conC -> buf + idx * dy + con -> left_pad ;	2383:16:81094:81154	6761903	0	True				
ANR	6763511	IdentifierDecl	* dp = ( uint16_t * ) conC -> buf + idx * dy + con -> left_pad		6761903	0					
ANR	6763512	IdentifierDeclType	uint16_t *		6761903	0					
ANR	6763513	Identifier	dp		6761903	1					
ANR	6763514	AssignmentExpression	* dp = ( uint16_t * ) conC -> buf + idx * dy + con -> left_pad		6761903	2		=			
ANR	6763515	Identifier	dp		6761903	0					
ANR	6763516	AdditiveExpression	( uint16_t * ) conC -> buf + idx * dy + con -> left_pad		6761903	1		+			
ANR	6763517	CastExpression	( uint16_t * ) conC -> buf		6761903	0					
ANR	6763518	CastTarget	uint16_t *		6761903	0					
ANR	6763519	PtrMemberAccess	conC -> buf		6761903	1					
ANR	6763520	Identifier	conC		6761903	0					
ANR	6763521	Identifier	buf		6761903	1					
ANR	6763522	AdditiveExpression	idx * dy + con -> left_pad		6761903	1		+			
ANR	6763523	MultiplicativeExpression	idx * dy		6761903	0		*			
ANR	6763524	Identifier	idx		6761903	0					
ANR	6763525	Identifier	dy		6761903	1					
ANR	6763526	PtrMemberAccess	con -> left_pad		6761903	1					
ANR	6763527	Identifier	con		6761903	0					
ANR	6763528	Identifier	left_pad		6761903	1					
ANR	6763529	ExpressionStatement	"write_uint16 ( conC , dp , conC -> wid )"	2384:16:81188:81222	6761903	1	True				
ANR	6763530	CallExpression	"write_uint16 ( conC , dp , conC -> wid )"		6761903	0					
ANR	6763531	Callee	write_uint16		6761903	0					
ANR	6763532	Identifier	write_uint16		6761903	0					
ANR	6763533	ArgumentList	conC		6761903	1					
ANR	6763534	Argument	conC		6761903	0					
ANR	6763535	Identifier	conC		6761903	0					
ANR	6763536	Argument	dp		6761903	1					
ANR	6763537	Identifier	dp		6761903	0					
ANR	6763538	Argument	conC -> wid		6761903	2					
ANR	6763539	PtrMemberAccess	conC -> wid		6761903	0					
ANR	6763540	Identifier	conC		6761903	0					
ANR	6763541	Identifier	wid		6761903	1					
ANR	6763542	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6761903	4					
ANR	6763543	ForInit	idx = first ;	2387:17:81268:81279	6761903	0	True				
ANR	6763544	AssignmentExpression	idx = first		6761903	0		=			
ANR	6763545	Identifier	idx		6761903	0					
ANR	6763546	Identifier	first		6761903	1					
ANR	6763547	Condition	idx < trans	2387:30:81281:81291	6761903	1	True				
ANR	6763548	RelationalExpression	idx < trans		6761903	0		<			
ANR	6763549	Identifier	idx		6761903	0					
ANR	6763550	Identifier	trans		6761903	1					
ANR	6763551	AssignmentExpression	idx += 1	2387:43:81294:81301	6761903	2	True	+=			
ANR	6763552	Identifier	idx		6761903	0					
ANR	6763553	PrimaryExpression	1		6761903	1					
ANR	6763554	CompoundStatement		200:16:7918:7978	6761903	3					
ANR	6763555	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conM -> buf + idx * dy + con -> left_pad ;	2388:16:81322:81382	6761903	0	True				
ANR	6763556	IdentifierDecl	* dp = ( uint16_t * ) conM -> buf + idx * dy + con -> left_pad		6761903	0					
ANR	6763557	IdentifierDeclType	uint16_t *		6761903	0					
ANR	6763558	Identifier	dp		6761903	1					
ANR	6763559	AssignmentExpression	* dp = ( uint16_t * ) conM -> buf + idx * dy + con -> left_pad		6761903	2		=			
ANR	6763560	Identifier	dp		6761903	0					
ANR	6763561	AdditiveExpression	( uint16_t * ) conM -> buf + idx * dy + con -> left_pad		6761903	1		+			
ANR	6763562	CastExpression	( uint16_t * ) conM -> buf		6761903	0					
ANR	6763563	CastTarget	uint16_t *		6761903	0					
ANR	6763564	PtrMemberAccess	conM -> buf		6761903	1					
ANR	6763565	Identifier	conM		6761903	0					
ANR	6763566	Identifier	buf		6761903	1					
ANR	6763567	AdditiveExpression	idx * dy + con -> left_pad		6761903	1		+			
ANR	6763568	MultiplicativeExpression	idx * dy		6761903	0		*			
ANR	6763569	Identifier	idx		6761903	0					
ANR	6763570	Identifier	dy		6761903	1					
ANR	6763571	PtrMemberAccess	con -> left_pad		6761903	1					
ANR	6763572	Identifier	con		6761903	0					
ANR	6763573	Identifier	left_pad		6761903	1					
ANR	6763574	ExpressionStatement	"write_uint16 ( conM , dp , ( conM -> wid ) )"	2389:16:81416:81452	6761903	1	True				
ANR	6763575	CallExpression	"write_uint16 ( conM , dp , ( conM -> wid ) )"		6761903	0					
ANR	6763576	Callee	write_uint16		6761903	0					
ANR	6763577	Identifier	write_uint16		6761903	0					
ANR	6763578	ArgumentList	conM		6761903	1					
ANR	6763579	Argument	conM		6761903	0					
ANR	6763580	Identifier	conM		6761903	0					
ANR	6763581	Argument	dp		6761903	1					
ANR	6763582	Identifier	dp		6761903	0					
ANR	6763583	Argument	conM -> wid		6761903	2					
ANR	6763584	PtrMemberAccess	conM -> wid		6761903	0					
ANR	6763585	Identifier	conM		6761903	0					
ANR	6763586	Identifier	wid		6761903	1					
ANR	6763587	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6761903	5					
ANR	6763588	ForInit	idx = first ;	2392:17:81509:81520	6761903	0	True				
ANR	6763589	AssignmentExpression	idx = first		6761903	0		=			
ANR	6763590	Identifier	idx		6761903	0					
ANR	6763591	Identifier	first		6761903	1					
ANR	6763592	Condition	idx < trans	2392:30:81522:81532	6761903	1	True				
ANR	6763593	RelationalExpression	idx < trans		6761903	0		<			
ANR	6763594	Identifier	idx		6761903	0					
ANR	6763595	Identifier	trans		6761903	1					
ANR	6763596	AssignmentExpression	idx += 1	2392:43:81535:81542	6761903	2	True	+=			
ANR	6763597	Identifier	idx		6761903	0					
ANR	6763598	PrimaryExpression	1		6761903	1					
ANR	6763599	CompoundStatement		205:16:8159:8219	6761903	3					
ANR	6763600	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conY -> buf + idx * dy + con -> left_pad ;	2393:16:81563:81623	6761903	0	True				
ANR	6763601	IdentifierDecl	* dp = ( uint16_t * ) conY -> buf + idx * dy + con -> left_pad		6761903	0					
ANR	6763602	IdentifierDeclType	uint16_t *		6761903	0					
ANR	6763603	Identifier	dp		6761903	1					
ANR	6763604	AssignmentExpression	* dp = ( uint16_t * ) conY -> buf + idx * dy + con -> left_pad		6761903	2		=			
ANR	6763605	Identifier	dp		6761903	0					
ANR	6763606	AdditiveExpression	( uint16_t * ) conY -> buf + idx * dy + con -> left_pad		6761903	1		+			
ANR	6763607	CastExpression	( uint16_t * ) conY -> buf		6761903	0					
ANR	6763608	CastTarget	uint16_t *		6761903	0					
ANR	6763609	PtrMemberAccess	conY -> buf		6761903	1					
ANR	6763610	Identifier	conY		6761903	0					
ANR	6763611	Identifier	buf		6761903	1					
ANR	6763612	AdditiveExpression	idx * dy + con -> left_pad		6761903	1		+			
ANR	6763613	MultiplicativeExpression	idx * dy		6761903	0		*			
ANR	6763614	Identifier	idx		6761903	0					
ANR	6763615	Identifier	dy		6761903	1					
ANR	6763616	PtrMemberAccess	con -> left_pad		6761903	1					
ANR	6763617	Identifier	con		6761903	0					
ANR	6763618	Identifier	left_pad		6761903	1					
ANR	6763619	ExpressionStatement	"write_uint16 ( conY , dp , ( conY -> wid ) )"	2394:16:81657:81693	6761903	1	True				
ANR	6763620	CallExpression	"write_uint16 ( conY , dp , ( conY -> wid ) )"		6761903	0					
ANR	6763621	Callee	write_uint16		6761903	0					
ANR	6763622	Identifier	write_uint16		6761903	0					
ANR	6763623	ArgumentList	conY		6761903	1					
ANR	6763624	Argument	conY		6761903	0					
ANR	6763625	Identifier	conY		6761903	0					
ANR	6763626	Argument	dp		6761903	1					
ANR	6763627	Identifier	dp		6761903	0					
ANR	6763628	Argument	conY -> wid		6761903	2					
ANR	6763629	PtrMemberAccess	conY -> wid		6761903	0					
ANR	6763630	Identifier	conY		6761903	0					
ANR	6763631	Identifier	wid		6761903	1					
ANR	6763632	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6761903	6					
ANR	6763633	ForInit	idx = first ;	2397:17:81739:81750	6761903	0	True				
ANR	6763634	AssignmentExpression	idx = first		6761903	0		=			
ANR	6763635	Identifier	idx		6761903	0					
ANR	6763636	Identifier	first		6761903	1					
ANR	6763637	Condition	idx < trans	2397:30:81752:81762	6761903	1	True				
ANR	6763638	RelationalExpression	idx < trans		6761903	0		<			
ANR	6763639	Identifier	idx		6761903	0					
ANR	6763640	Identifier	trans		6761903	1					
ANR	6763641	AssignmentExpression	idx += 1	2397:43:81765:81772	6761903	2	True	+=			
ANR	6763642	Identifier	idx		6761903	0					
ANR	6763643	PrimaryExpression	1		6761903	1					
ANR	6763644	CompoundStatement		210:16:8389:8449	6761903	3					
ANR	6763645	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conK -> buf + idx * dy + con -> left_pad ;	2398:16:81793:81853	6761903	0	True				
ANR	6763646	IdentifierDecl	* dp = ( uint16_t * ) conK -> buf + idx * dy + con -> left_pad		6761903	0					
ANR	6763647	IdentifierDeclType	uint16_t *		6761903	0					
ANR	6763648	Identifier	dp		6761903	1					
ANR	6763649	AssignmentExpression	* dp = ( uint16_t * ) conK -> buf + idx * dy + con -> left_pad		6761903	2		=			
ANR	6763650	Identifier	dp		6761903	0					
ANR	6763651	AdditiveExpression	( uint16_t * ) conK -> buf + idx * dy + con -> left_pad		6761903	1		+			
ANR	6763652	CastExpression	( uint16_t * ) conK -> buf		6761903	0					
ANR	6763653	CastTarget	uint16_t *		6761903	0					
ANR	6763654	PtrMemberAccess	conK -> buf		6761903	1					
ANR	6763655	Identifier	conK		6761903	0					
ANR	6763656	Identifier	buf		6761903	1					
ANR	6763657	AdditiveExpression	idx * dy + con -> left_pad		6761903	1		+			
ANR	6763658	MultiplicativeExpression	idx * dy		6761903	0		*			
ANR	6763659	Identifier	idx		6761903	0					
ANR	6763660	Identifier	dy		6761903	1					
ANR	6763661	PtrMemberAccess	con -> left_pad		6761903	1					
ANR	6763662	Identifier	con		6761903	0					
ANR	6763663	Identifier	left_pad		6761903	1					
ANR	6763664	ExpressionStatement	"write_uint16 ( conK , dp , ( conK -> wid ) )"	2399:16:81887:81923	6761903	1	True				
ANR	6763665	CallExpression	"write_uint16 ( conK , dp , ( conK -> wid ) )"		6761903	0					
ANR	6763666	Callee	write_uint16		6761903	0					
ANR	6763667	Identifier	write_uint16		6761903	0					
ANR	6763668	ArgumentList	conK		6761903	1					
ANR	6763669	Argument	conK		6761903	0					
ANR	6763670	Identifier	conK		6761903	0					
ANR	6763671	Argument	dp		6761903	1					
ANR	6763672	Identifier	dp		6761903	0					
ANR	6763673	Argument	conK -> wid		6761903	2					
ANR	6763674	PtrMemberAccess	conK -> wid		6761903	0					
ANR	6763675	Identifier	conK		6761903	0					
ANR	6763676	Identifier	wid		6761903	1					
ANR	6763677	IfStatement	if ( con -> alpha )		6761903	7					
ANR	6763678	Condition	con -> alpha	2402:15:81967:81976	6761903	0	True				
ANR	6763679	PtrMemberAccess	con -> alpha		6761903	0					
ANR	6763680	Identifier	con		6761903	0					
ANR	6763681	Identifier	alpha		6761903	1					
ANR	6763682	CompoundStatement		215:12:8587:8587	6761903	1					
ANR	6763683	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6761903	0					
ANR	6763684	ForInit	idx = first ;	2404:21:82030:82041	6761903	0	True				
ANR	6763685	AssignmentExpression	idx = first		6761903	0		=			
ANR	6763686	Identifier	idx		6761903	0					
ANR	6763687	Identifier	first		6761903	1					
ANR	6763688	Condition	idx < trans	2404:34:82043:82053	6761903	1	True				
ANR	6763689	RelationalExpression	idx < trans		6761903	0		<			
ANR	6763690	Identifier	idx		6761903	0					
ANR	6763691	Identifier	trans		6761903	1					
ANR	6763692	AssignmentExpression	idx += 1	2404:47:82056:82063	6761903	2	True	+=			
ANR	6763693	Identifier	idx		6761903	0					
ANR	6763694	PrimaryExpression	1		6761903	1					
ANR	6763695	CompoundStatement		217:20:8684:8744	6761903	3					
ANR	6763696	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) conA -> buf + idx * dy + con -> left_pad ;	2405:20:82088:82148	6761903	0	True				
ANR	6763697	IdentifierDecl	* dp = ( uint16_t * ) conA -> buf + idx * dy + con -> left_pad		6761903	0					
ANR	6763698	IdentifierDeclType	uint16_t *		6761903	0					
ANR	6763699	Identifier	dp		6761903	1					
ANR	6763700	AssignmentExpression	* dp = ( uint16_t * ) conA -> buf + idx * dy + con -> left_pad		6761903	2		=			
ANR	6763701	Identifier	dp		6761903	0					
ANR	6763702	AdditiveExpression	( uint16_t * ) conA -> buf + idx * dy + con -> left_pad		6761903	1		+			
ANR	6763703	CastExpression	( uint16_t * ) conA -> buf		6761903	0					
ANR	6763704	CastTarget	uint16_t *		6761903	0					
ANR	6763705	PtrMemberAccess	conA -> buf		6761903	1					
ANR	6763706	Identifier	conA		6761903	0					
ANR	6763707	Identifier	buf		6761903	1					
ANR	6763708	AdditiveExpression	idx * dy + con -> left_pad		6761903	1		+			
ANR	6763709	MultiplicativeExpression	idx * dy		6761903	0		*			
ANR	6763710	Identifier	idx		6761903	0					
ANR	6763711	Identifier	dy		6761903	1					
ANR	6763712	PtrMemberAccess	con -> left_pad		6761903	1					
ANR	6763713	Identifier	con		6761903	0					
ANR	6763714	Identifier	left_pad		6761903	1					
ANR	6763715	ExpressionStatement	"write_uint16 ( conA , dp , conA -> wid )"	2406:20:82202:82235	6761903	1	True				
ANR	6763716	CallExpression	"write_uint16 ( conA , dp , conA -> wid )"		6761903	0					
ANR	6763717	Callee	write_uint16		6761903	0					
ANR	6763718	Identifier	write_uint16		6761903	0					
ANR	6763719	ArgumentList	conA		6761903	1					
ANR	6763720	Argument	conA		6761903	0					
ANR	6763721	Identifier	conA		6761903	0					
ANR	6763722	Argument	dp		6761903	1					
ANR	6763723	Identifier	dp		6761903	0					
ANR	6763724	Argument	conA -> wid		6761903	2					
ANR	6763725	PtrMemberAccess	conA -> wid		6761903	0					
ANR	6763726	Identifier	conA		6761903	0					
ANR	6763727	Identifier	wid		6761903	1					
ANR	6763728	ExpressionStatement	con -> top_pad_remaining -= first	2409:12:82309:82340	6761903	8	True				
ANR	6763729	AssignmentExpression	con -> top_pad_remaining -= first		6761903	0		-=			
ANR	6763730	PtrMemberAccess	con -> top_pad_remaining		6761903	0					
ANR	6763731	Identifier	con		6761903	0					
ANR	6763732	Identifier	top_pad_remaining		6761903	1					
ANR	6763733	Identifier	first		6761903	1					
ANR	6763734	ElseStatement	else		6761903	0					
ANR	6763735	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2412:12:82383:82416	6761903	0	True				
ANR	6763736	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		6761903	0					
ANR	6763737	Callee	assert		6761903	0					
ANR	6763738	Identifier	assert		6761903	0					
ANR	6763739	ArgumentList	"! ""Unsupported bitdepth\\n"""		6761903	1					
ANR	6763740	Argument	"! ""Unsupported bitdepth\\n"""		6761903	0					
ANR	6763741	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		6761903	0					
ANR	6763742	UnaryOperator	!		6761903	0					
ANR	6763743	PrimaryExpression	"""Unsupported bitdepth\\n"""		6761903	1					
ANR	6763744	IfStatement	if ( my * 16 + 16 >= ( con -> hei + con -> top_pad ) && mx + 1 == strip_blocks )		6761903	22					
ANR	6763745	Condition	my * 16 + 16 >= ( con -> hei + con -> top_pad ) && mx + 1 == strip_blocks	2414:7:82431:82494	6761903	0	True				
ANR	6763746	AndExpression	my * 16 + 16 >= ( con -> hei + con -> top_pad ) && mx + 1 == strip_blocks		6761903	0		&&			
ANR	6763747	RelationalExpression	my * 16 + 16 >= ( con -> hei + con -> top_pad )		6761903	0		>=			
ANR	6763748	AdditiveExpression	my * 16 + 16		6761903	0		+			
ANR	6763749	MultiplicativeExpression	my * 16		6761903	0		*			
ANR	6763750	Identifier	my		6761903	0					
ANR	6763751	PrimaryExpression	16		6761903	1					
ANR	6763752	PrimaryExpression	16		6761903	1					
ANR	6763753	AdditiveExpression	con -> hei + con -> top_pad		6761903	1		+			
ANR	6763754	PtrMemberAccess	con -> hei		6761903	0					
ANR	6763755	Identifier	con		6761903	0					
ANR	6763756	Identifier	hei		6761903	1					
ANR	6763757	PtrMemberAccess	con -> top_pad		6761903	1					
ANR	6763758	Identifier	con		6761903	0					
ANR	6763759	Identifier	top_pad		6761903	1					
ANR	6763760	EqualityExpression	mx + 1 == strip_blocks		6761903	1		==			
ANR	6763761	AdditiveExpression	mx + 1		6761903	0		+			
ANR	6763762	Identifier	mx		6761903	0					
ANR	6763763	PrimaryExpression	1		6761903	1					
ANR	6763764	Identifier	strip_blocks		6761903	1					
ANR	6763765	CompoundStatement		230:8:9184:9191	6761903	1					
ANR	6763766	IdentifierDeclStatement	long size = ftell ( conC -> file ) ;	2417:8:82547:82576	6761903	0	True				
ANR	6763767	IdentifierDecl	size = ftell ( conC -> file )		6761903	0					
ANR	6763768	IdentifierDeclType	long		6761903	0					
ANR	6763769	Identifier	size		6761903	1					
ANR	6763770	AssignmentExpression	size = ftell ( conC -> file )		6761903	2		=			
ANR	6763771	Identifier	size		6761903	0					
ANR	6763772	CallExpression	ftell ( conC -> file )		6761903	1					
ANR	6763773	Callee	ftell		6761903	0					
ANR	6763774	Identifier	ftell		6761903	0					
ANR	6763775	ArgumentList	conC -> file		6761903	1					
ANR	6763776	Argument	conC -> file		6761903	0					
ANR	6763777	PtrMemberAccess	conC -> file		6761903	0					
ANR	6763778	Identifier	conC		6761903	0					
ANR	6763779	Identifier	file		6761903	1					
ANR	6763780	IdentifierDeclStatement	long ii ;	2418:8:82588:82595	6761903	1	True				
ANR	6763781	IdentifierDecl	ii		6761903	0					
ANR	6763782	IdentifierDeclType	long		6761903	0					
ANR	6763783	Identifier	ii		6761903	1					
ANR	6763784	ExpressionStatement	"fseek ( conC -> file , 0 , 0 )"	2419:8:82605:82628	6761903	2	True				
ANR	6763785	CallExpression	"fseek ( conC -> file , 0 , 0 )"		6761903	0					
ANR	6763786	Callee	fseek		6761903	0					
ANR	6763787	Identifier	fseek		6761903	0					
ANR	6763788	ArgumentList	conC -> file		6761903	1					
ANR	6763789	Argument	conC -> file		6761903	0					
ANR	6763790	PtrMemberAccess	conC -> file		6761903	0					
ANR	6763791	Identifier	conC		6761903	0					
ANR	6763792	Identifier	file		6761903	1					
ANR	6763793	Argument	0		6761903	1					
ANR	6763794	PrimaryExpression	0		6761903	0					
ANR	6763795	Argument	0		6761903	2					
ANR	6763796	PrimaryExpression	0		6761903	0					
ANR	6763797	ForStatement	for ( ii = 0 ; ii < size ; ii ++ )		6761903	3					
ANR	6763798	ForInit	ii = 0 ;	2420:13:82644:82650	6761903	0	True				
ANR	6763799	AssignmentExpression	ii = 0		6761903	0		=			
ANR	6763800	Identifier	ii		6761903	0					
ANR	6763801	PrimaryExpression	0		6761903	1					
ANR	6763802	Condition	ii < size	2420:21:82652:82660	6761903	1	True				
ANR	6763803	RelationalExpression	ii < size		6761903	0		<			
ANR	6763804	Identifier	ii		6761903	0					
ANR	6763805	Identifier	size		6761903	1					
ANR	6763806	PostIncDecOperationExpression	ii ++	2420:32:82663:82666	6761903	2	True				
ANR	6763807	Identifier	ii		6761903	0					
ANR	6763808	IncDec	++		6761903	1					
ANR	6763809	CompoundStatement		234:12:9287:9298	6761903	3					
ANR	6763810	IdentifierDeclStatement	uint8_t val ;	2422:12:82691:82702	6761903	0	True				
ANR	6763811	IdentifierDecl	val		6761903	0					
ANR	6763812	IdentifierDeclType	uint8_t		6761903	0					
ANR	6763813	Identifier	val		6761903	1					
ANR	6763814	ExpressionStatement	"fread ( & val , 1 , 1 , conC -> file )"	2423:12:82716:82745	6761903	1	True				
ANR	6763815	CallExpression	"fread ( & val , 1 , 1 , conC -> file )"		6761903	0					
ANR	6763816	Callee	fread		6761903	0					
ANR	6763817	Identifier	fread		6761903	0					
ANR	6763818	ArgumentList	& val		6761903	1					
ANR	6763819	Argument	& val		6761903	0					
ANR	6763820	UnaryOperationExpression	& val		6761903	0					
ANR	6763821	UnaryOperator	&		6761903	0					
ANR	6763822	Identifier	val		6761903	1					
ANR	6763823	Argument	1		6761903	1					
ANR	6763824	PrimaryExpression	1		6761903	0					
ANR	6763825	Argument	1		6761903	2					
ANR	6763826	PrimaryExpression	1		6761903	0					
ANR	6763827	Argument	conC -> file		6761903	3					
ANR	6763828	PtrMemberAccess	conC -> file		6761903	0					
ANR	6763829	Identifier	conC		6761903	0					
ANR	6763830	Identifier	file		6761903	1					
ANR	6763831	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2424:12:82759:82788	6761903	2	True				
ANR	6763832	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		6761903	0					
ANR	6763833	Callee	fwrite		6761903	0					
ANR	6763834	Identifier	fwrite		6761903	0					
ANR	6763835	ArgumentList	& val		6761903	1					
ANR	6763836	Argument	& val		6761903	0					
ANR	6763837	UnaryOperationExpression	& val		6761903	0					
ANR	6763838	UnaryOperator	&		6761903	0					
ANR	6763839	Identifier	val		6761903	1					
ANR	6763840	Argument	1		6761903	1					
ANR	6763841	PrimaryExpression	1		6761903	0					
ANR	6763842	Argument	1		6761903	2					
ANR	6763843	PrimaryExpression	1		6761903	0					
ANR	6763844	Argument	con -> file		6761903	3					
ANR	6763845	PtrMemberAccess	con -> file		6761903	0					
ANR	6763846	Identifier	con		6761903	0					
ANR	6763847	Identifier	file		6761903	1					
ANR	6763848	ExpressionStatement	size = ftell ( conM -> file )	2426:8:82808:82832	6761903	4	True				
ANR	6763849	AssignmentExpression	size = ftell ( conM -> file )		6761903	0		=			
ANR	6763850	Identifier	size		6761903	0					
ANR	6763851	CallExpression	ftell ( conM -> file )		6761903	1					
ANR	6763852	Callee	ftell		6761903	0					
ANR	6763853	Identifier	ftell		6761903	0					
ANR	6763854	ArgumentList	conM -> file		6761903	1					
ANR	6763855	Argument	conM -> file		6761903	0					
ANR	6763856	PtrMemberAccess	conM -> file		6761903	0					
ANR	6763857	Identifier	conM		6761903	0					
ANR	6763858	Identifier	file		6761903	1					
ANR	6763859	ExpressionStatement	"fseek ( conM -> file , 0 , 0 )"	2427:8:82842:82865	6761903	5	True				
ANR	6763860	CallExpression	"fseek ( conM -> file , 0 , 0 )"		6761903	0					
ANR	6763861	Callee	fseek		6761903	0					
ANR	6763862	Identifier	fseek		6761903	0					
ANR	6763863	ArgumentList	conM -> file		6761903	1					
ANR	6763864	Argument	conM -> file		6761903	0					
ANR	6763865	PtrMemberAccess	conM -> file		6761903	0					
ANR	6763866	Identifier	conM		6761903	0					
ANR	6763867	Identifier	file		6761903	1					
ANR	6763868	Argument	0		6761903	1					
ANR	6763869	PrimaryExpression	0		6761903	0					
ANR	6763870	Argument	0		6761903	2					
ANR	6763871	PrimaryExpression	0		6761903	0					
ANR	6763872	ForStatement	for ( ii = 0 ; ii < size ; ii ++ )		6761903	6					
ANR	6763873	ForInit	ii = 0 ;	2428:13:82888:82894	6761903	0	True				
ANR	6763874	AssignmentExpression	ii = 0		6761903	0		=			
ANR	6763875	Identifier	ii		6761903	0					
ANR	6763876	PrimaryExpression	0		6761903	1					
ANR	6763877	Condition	ii < size	2428:21:82896:82904	6761903	1	True				
ANR	6763878	RelationalExpression	ii < size		6761903	0		<			
ANR	6763879	Identifier	ii		6761903	0					
ANR	6763880	Identifier	size		6761903	1					
ANR	6763881	PostIncDecOperationExpression	ii ++	2428:32:82907:82910	6761903	2	True				
ANR	6763882	Identifier	ii		6761903	0					
ANR	6763883	IncDec	++		6761903	1					
ANR	6763884	CompoundStatement		242:12:9531:9542	6761903	3					
ANR	6763885	IdentifierDeclStatement	uint8_t val ;	2430:12:82935:82946	6761903	0	True				
ANR	6763886	IdentifierDecl	val		6761903	0					
ANR	6763887	IdentifierDeclType	uint8_t		6761903	0					
ANR	6763888	Identifier	val		6761903	1					
ANR	6763889	ExpressionStatement	"fread ( & val , 1 , 1 , conM -> file )"	2431:12:82960:82989	6761903	1	True				
ANR	6763890	CallExpression	"fread ( & val , 1 , 1 , conM -> file )"		6761903	0					
ANR	6763891	Callee	fread		6761903	0					
ANR	6763892	Identifier	fread		6761903	0					
ANR	6763893	ArgumentList	& val		6761903	1					
ANR	6763894	Argument	& val		6761903	0					
ANR	6763895	UnaryOperationExpression	& val		6761903	0					
ANR	6763896	UnaryOperator	&		6761903	0					
ANR	6763897	Identifier	val		6761903	1					
ANR	6763898	Argument	1		6761903	1					
ANR	6763899	PrimaryExpression	1		6761903	0					
ANR	6763900	Argument	1		6761903	2					
ANR	6763901	PrimaryExpression	1		6761903	0					
ANR	6763902	Argument	conM -> file		6761903	3					
ANR	6763903	PtrMemberAccess	conM -> file		6761903	0					
ANR	6763904	Identifier	conM		6761903	0					
ANR	6763905	Identifier	file		6761903	1					
ANR	6763906	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2432:12:83003:83032	6761903	2	True				
ANR	6763907	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		6761903	0					
ANR	6763908	Callee	fwrite		6761903	0					
ANR	6763909	Identifier	fwrite		6761903	0					
ANR	6763910	ArgumentList	& val		6761903	1					
ANR	6763911	Argument	& val		6761903	0					
ANR	6763912	UnaryOperationExpression	& val		6761903	0					
ANR	6763913	UnaryOperator	&		6761903	0					
ANR	6763914	Identifier	val		6761903	1					
ANR	6763915	Argument	1		6761903	1					
ANR	6763916	PrimaryExpression	1		6761903	0					
ANR	6763917	Argument	1		6761903	2					
ANR	6763918	PrimaryExpression	1		6761903	0					
ANR	6763919	Argument	con -> file		6761903	3					
ANR	6763920	PtrMemberAccess	con -> file		6761903	0					
ANR	6763921	Identifier	con		6761903	0					
ANR	6763922	Identifier	file		6761903	1					
ANR	6763923	ExpressionStatement	size = ftell ( conY -> file )	2434:8:83052:83076	6761903	7	True				
ANR	6763924	AssignmentExpression	size = ftell ( conY -> file )		6761903	0		=			
ANR	6763925	Identifier	size		6761903	0					
ANR	6763926	CallExpression	ftell ( conY -> file )		6761903	1					
ANR	6763927	Callee	ftell		6761903	0					
ANR	6763928	Identifier	ftell		6761903	0					
ANR	6763929	ArgumentList	conY -> file		6761903	1					
ANR	6763930	Argument	conY -> file		6761903	0					
ANR	6763931	PtrMemberAccess	conY -> file		6761903	0					
ANR	6763932	Identifier	conY		6761903	0					
ANR	6763933	Identifier	file		6761903	1					
ANR	6763934	ExpressionStatement	"fseek ( conY -> file , 0 , 0 )"	2435:8:83086:83109	6761903	8	True				
ANR	6763935	CallExpression	"fseek ( conY -> file , 0 , 0 )"		6761903	0					
ANR	6763936	Callee	fseek		6761903	0					
ANR	6763937	Identifier	fseek		6761903	0					
ANR	6763938	ArgumentList	conY -> file		6761903	1					
ANR	6763939	Argument	conY -> file		6761903	0					
ANR	6763940	PtrMemberAccess	conY -> file		6761903	0					
ANR	6763941	Identifier	conY		6761903	0					
ANR	6763942	Identifier	file		6761903	1					
ANR	6763943	Argument	0		6761903	1					
ANR	6763944	PrimaryExpression	0		6761903	0					
ANR	6763945	Argument	0		6761903	2					
ANR	6763946	PrimaryExpression	0		6761903	0					
ANR	6763947	ForStatement	for ( ii = 0 ; ii < size ; ii ++ )		6761903	9					
ANR	6763948	ForInit	ii = 0 ;	2436:13:83124:83130	6761903	0	True				
ANR	6763949	AssignmentExpression	ii = 0		6761903	0		=			
ANR	6763950	Identifier	ii		6761903	0					
ANR	6763951	PrimaryExpression	0		6761903	1					
ANR	6763952	Condition	ii < size	2436:21:83132:83140	6761903	1	True				
ANR	6763953	RelationalExpression	ii < size		6761903	0		<			
ANR	6763954	Identifier	ii		6761903	0					
ANR	6763955	Identifier	size		6761903	1					
ANR	6763956	PostIncDecOperationExpression	ii ++	2436:32:83143:83146	6761903	2	True				
ANR	6763957	Identifier	ii		6761903	0					
ANR	6763958	IncDec	++		6761903	1					
ANR	6763959	CompoundStatement		250:12:9767:9778	6761903	3					
ANR	6763960	IdentifierDeclStatement	uint8_t val ;	2438:12:83171:83182	6761903	0	True				
ANR	6763961	IdentifierDecl	val		6761903	0					
ANR	6763962	IdentifierDeclType	uint8_t		6761903	0					
ANR	6763963	Identifier	val		6761903	1					
ANR	6763964	ExpressionStatement	"fread ( & val , 1 , 1 , conY -> file )"	2439:12:83196:83225	6761903	1	True				
ANR	6763965	CallExpression	"fread ( & val , 1 , 1 , conY -> file )"		6761903	0					
ANR	6763966	Callee	fread		6761903	0					
ANR	6763967	Identifier	fread		6761903	0					
ANR	6763968	ArgumentList	& val		6761903	1					
ANR	6763969	Argument	& val		6761903	0					
ANR	6763970	UnaryOperationExpression	& val		6761903	0					
ANR	6763971	UnaryOperator	&		6761903	0					
ANR	6763972	Identifier	val		6761903	1					
ANR	6763973	Argument	1		6761903	1					
ANR	6763974	PrimaryExpression	1		6761903	0					
ANR	6763975	Argument	1		6761903	2					
ANR	6763976	PrimaryExpression	1		6761903	0					
ANR	6763977	Argument	conY -> file		6761903	3					
ANR	6763978	PtrMemberAccess	conY -> file		6761903	0					
ANR	6763979	Identifier	conY		6761903	0					
ANR	6763980	Identifier	file		6761903	1					
ANR	6763981	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2440:12:83239:83268	6761903	2	True				
ANR	6763982	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		6761903	0					
ANR	6763983	Callee	fwrite		6761903	0					
ANR	6763984	Identifier	fwrite		6761903	0					
ANR	6763985	ArgumentList	& val		6761903	1					
ANR	6763986	Argument	& val		6761903	0					
ANR	6763987	UnaryOperationExpression	& val		6761903	0					
ANR	6763988	UnaryOperator	&		6761903	0					
ANR	6763989	Identifier	val		6761903	1					
ANR	6763990	Argument	1		6761903	1					
ANR	6763991	PrimaryExpression	1		6761903	0					
ANR	6763992	Argument	1		6761903	2					
ANR	6763993	PrimaryExpression	1		6761903	0					
ANR	6763994	Argument	con -> file		6761903	3					
ANR	6763995	PtrMemberAccess	con -> file		6761903	0					
ANR	6763996	Identifier	con		6761903	0					
ANR	6763997	Identifier	file		6761903	1					
ANR	6763998	ExpressionStatement	size = ftell ( conK -> file )	2442:8:83288:83312	6761903	10	True				
ANR	6763999	AssignmentExpression	size = ftell ( conK -> file )		6761903	0		=			
ANR	6764000	Identifier	size		6761903	0					
ANR	6764001	CallExpression	ftell ( conK -> file )		6761903	1					
ANR	6764002	Callee	ftell		6761903	0					
ANR	6764003	Identifier	ftell		6761903	0					
ANR	6764004	ArgumentList	conK -> file		6761903	1					
ANR	6764005	Argument	conK -> file		6761903	0					
ANR	6764006	PtrMemberAccess	conK -> file		6761903	0					
ANR	6764007	Identifier	conK		6761903	0					
ANR	6764008	Identifier	file		6761903	1					
ANR	6764009	ExpressionStatement	"fseek ( conK -> file , 0 , 0 )"	2443:8:83322:83345	6761903	11	True				
ANR	6764010	CallExpression	"fseek ( conK -> file , 0 , 0 )"		6761903	0					
ANR	6764011	Callee	fseek		6761903	0					
ANR	6764012	Identifier	fseek		6761903	0					
ANR	6764013	ArgumentList	conK -> file		6761903	1					
ANR	6764014	Argument	conK -> file		6761903	0					
ANR	6764015	PtrMemberAccess	conK -> file		6761903	0					
ANR	6764016	Identifier	conK		6761903	0					
ANR	6764017	Identifier	file		6761903	1					
ANR	6764018	Argument	0		6761903	1					
ANR	6764019	PrimaryExpression	0		6761903	0					
ANR	6764020	Argument	0		6761903	2					
ANR	6764021	PrimaryExpression	0		6761903	0					
ANR	6764022	ForStatement	for ( ii = 0 ; ii < size ; ii ++ )		6761903	12					
ANR	6764023	ForInit	ii = 0 ;	2444:13:83360:83366	6761903	0	True				
ANR	6764024	AssignmentExpression	ii = 0		6761903	0		=			
ANR	6764025	Identifier	ii		6761903	0					
ANR	6764026	PrimaryExpression	0		6761903	1					
ANR	6764027	Condition	ii < size	2444:21:83368:83376	6761903	1	True				
ANR	6764028	RelationalExpression	ii < size		6761903	0		<			
ANR	6764029	Identifier	ii		6761903	0					
ANR	6764030	Identifier	size		6761903	1					
ANR	6764031	PostIncDecOperationExpression	ii ++	2444:32:83379:83382	6761903	2	True				
ANR	6764032	Identifier	ii		6761903	0					
ANR	6764033	IncDec	++		6761903	1					
ANR	6764034	CompoundStatement		258:12:10003:10014	6761903	3					
ANR	6764035	IdentifierDeclStatement	uint8_t val ;	2446:12:83407:83418	6761903	0	True				
ANR	6764036	IdentifierDecl	val		6761903	0					
ANR	6764037	IdentifierDeclType	uint8_t		6761903	0					
ANR	6764038	Identifier	val		6761903	1					
ANR	6764039	ExpressionStatement	"fread ( & val , 1 , 1 , conK -> file )"	2447:12:83432:83461	6761903	1	True				
ANR	6764040	CallExpression	"fread ( & val , 1 , 1 , conK -> file )"		6761903	0					
ANR	6764041	Callee	fread		6761903	0					
ANR	6764042	Identifier	fread		6761903	0					
ANR	6764043	ArgumentList	& val		6761903	1					
ANR	6764044	Argument	& val		6761903	0					
ANR	6764045	UnaryOperationExpression	& val		6761903	0					
ANR	6764046	UnaryOperator	&		6761903	0					
ANR	6764047	Identifier	val		6761903	1					
ANR	6764048	Argument	1		6761903	1					
ANR	6764049	PrimaryExpression	1		6761903	0					
ANR	6764050	Argument	1		6761903	2					
ANR	6764051	PrimaryExpression	1		6761903	0					
ANR	6764052	Argument	conK -> file		6761903	3					
ANR	6764053	PtrMemberAccess	conK -> file		6761903	0					
ANR	6764054	Identifier	conK		6761903	0					
ANR	6764055	Identifier	file		6761903	1					
ANR	6764056	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2448:12:83475:83504	6761903	2	True				
ANR	6764057	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		6761903	0					
ANR	6764058	Callee	fwrite		6761903	0					
ANR	6764059	Identifier	fwrite		6761903	0					
ANR	6764060	ArgumentList	& val		6761903	1					
ANR	6764061	Argument	& val		6761903	0					
ANR	6764062	UnaryOperationExpression	& val		6761903	0					
ANR	6764063	UnaryOperator	&		6761903	0					
ANR	6764064	Identifier	val		6761903	1					
ANR	6764065	Argument	1		6761903	1					
ANR	6764066	PrimaryExpression	1		6761903	0					
ANR	6764067	Argument	1		6761903	2					
ANR	6764068	PrimaryExpression	1		6761903	0					
ANR	6764069	Argument	con -> file		6761903	3					
ANR	6764070	PtrMemberAccess	con -> file		6761903	0					
ANR	6764071	Identifier	con		6761903	0					
ANR	6764072	Identifier	file		6761903	1					
ANR	6764073	IfStatement	if ( con -> alpha )		6761903	13					
ANR	6764074	Condition	con -> alpha	2450:11:83527:83536	6761903	0	True				
ANR	6764075	PtrMemberAccess	con -> alpha		6761903	0					
ANR	6764076	Identifier	con		6761903	0					
ANR	6764077	Identifier	alpha		6761903	1					
ANR	6764078	CompoundStatement		263:8:10143:10143	6761903	1					
ANR	6764079	ExpressionStatement	size = ftell ( conA -> file )	2452:12:83561:83585	6761903	0	True				
ANR	6764080	AssignmentExpression	size = ftell ( conA -> file )		6761903	0		=			
ANR	6764081	Identifier	size		6761903	0					
ANR	6764082	CallExpression	ftell ( conA -> file )		6761903	1					
ANR	6764083	Callee	ftell		6761903	0					
ANR	6764084	Identifier	ftell		6761903	0					
ANR	6764085	ArgumentList	conA -> file		6761903	1					
ANR	6764086	Argument	conA -> file		6761903	0					
ANR	6764087	PtrMemberAccess	conA -> file		6761903	0					
ANR	6764088	Identifier	conA		6761903	0					
ANR	6764089	Identifier	file		6761903	1					
ANR	6764090	ExpressionStatement	"fseek ( conA -> file , 0 , 0 )"	2453:12:83599:83622	6761903	1	True				
ANR	6764091	CallExpression	"fseek ( conA -> file , 0 , 0 )"		6761903	0					
ANR	6764092	Callee	fseek		6761903	0					
ANR	6764093	Identifier	fseek		6761903	0					
ANR	6764094	ArgumentList	conA -> file		6761903	1					
ANR	6764095	Argument	conA -> file		6761903	0					
ANR	6764096	PtrMemberAccess	conA -> file		6761903	0					
ANR	6764097	Identifier	conA		6761903	0					
ANR	6764098	Identifier	file		6761903	1					
ANR	6764099	Argument	0		6761903	1					
ANR	6764100	PrimaryExpression	0		6761903	0					
ANR	6764101	Argument	0		6761903	2					
ANR	6764102	PrimaryExpression	0		6761903	0					
ANR	6764103	ForStatement	for ( ii = 0 ; ii < size && con -> alpha ; ii ++ )		6761903	2					
ANR	6764104	ForInit	ii = 0 ;	2454:17:83653:83659	6761903	0	True				
ANR	6764105	AssignmentExpression	ii = 0		6761903	0		=			
ANR	6764106	Identifier	ii		6761903	0					
ANR	6764107	PrimaryExpression	0		6761903	1					
ANR	6764108	Condition	ii < size && con -> alpha	2454:25:83661:83683	6761903	1	True				
ANR	6764109	AndExpression	ii < size && con -> alpha		6761903	0		&&			
ANR	6764110	RelationalExpression	ii < size		6761903	0		<			
ANR	6764111	Identifier	ii		6761903	0					
ANR	6764112	Identifier	size		6761903	1					
ANR	6764113	PtrMemberAccess	con -> alpha		6761903	1					
ANR	6764114	Identifier	con		6761903	0					
ANR	6764115	Identifier	alpha		6761903	1					
ANR	6764116	PostIncDecOperationExpression	ii ++	2454:50:83686:83689	6761903	2	True				
ANR	6764117	Identifier	ii		6761903	0					
ANR	6764118	IncDec	++		6761903	1					
ANR	6764119	CompoundStatement		268:16:10318:10329	6761903	3					
ANR	6764120	IdentifierDeclStatement	uint8_t val ;	2456:16:83722:83733	6761903	0	True				
ANR	6764121	IdentifierDecl	val		6761903	0					
ANR	6764122	IdentifierDeclType	uint8_t		6761903	0					
ANR	6764123	Identifier	val		6761903	1					
ANR	6764124	ExpressionStatement	"fread ( & val , 1 , 1 , conA -> file )"	2457:16:83751:83780	6761903	1	True				
ANR	6764125	CallExpression	"fread ( & val , 1 , 1 , conA -> file )"		6761903	0					
ANR	6764126	Callee	fread		6761903	0					
ANR	6764127	Identifier	fread		6761903	0					
ANR	6764128	ArgumentList	& val		6761903	1					
ANR	6764129	Argument	& val		6761903	0					
ANR	6764130	UnaryOperationExpression	& val		6761903	0					
ANR	6764131	UnaryOperator	&		6761903	0					
ANR	6764132	Identifier	val		6761903	1					
ANR	6764133	Argument	1		6761903	1					
ANR	6764134	PrimaryExpression	1		6761903	0					
ANR	6764135	Argument	1		6761903	2					
ANR	6764136	PrimaryExpression	1		6761903	0					
ANR	6764137	Argument	conA -> file		6761903	3					
ANR	6764138	PtrMemberAccess	conA -> file		6761903	0					
ANR	6764139	Identifier	conA		6761903	0					
ANR	6764140	Identifier	file		6761903	1					
ANR	6764141	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2458:16:83798:83827	6761903	2	True				
ANR	6764142	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		6761903	0					
ANR	6764143	Callee	fwrite		6761903	0					
ANR	6764144	Identifier	fwrite		6761903	0					
ANR	6764145	ArgumentList	& val		6761903	1					
ANR	6764146	Argument	& val		6761903	0					
ANR	6764147	UnaryOperationExpression	& val		6761903	0					
ANR	6764148	UnaryOperator	&		6761903	0					
ANR	6764149	Identifier	val		6761903	1					
ANR	6764150	Argument	1		6761903	1					
ANR	6764151	PrimaryExpression	1		6761903	0					
ANR	6764152	Argument	1		6761903	2					
ANR	6764153	PrimaryExpression	1		6761903	0					
ANR	6764154	Argument	con -> file		6761903	3					
ANR	6764155	PtrMemberAccess	con -> file		6761903	0					
ANR	6764156	Identifier	con		6761903	0					
ANR	6764157	Identifier	file		6761903	1					
ANR	6764158	ExpressionStatement	fclose ( conC -> file )	2461:8:83861:83879	6761903	14	True				
ANR	6764159	CallExpression	fclose ( conC -> file )		6761903	0					
ANR	6764160	Callee	fclose		6761903	0					
ANR	6764161	Identifier	fclose		6761903	0					
ANR	6764162	ArgumentList	conC -> file		6761903	1					
ANR	6764163	Argument	conC -> file		6761903	0					
ANR	6764164	PtrMemberAccess	conC -> file		6761903	0					
ANR	6764165	Identifier	conC		6761903	0					
ANR	6764166	Identifier	file		6761903	1					
ANR	6764167	ExpressionStatement	fclose ( conM -> file )	2462:8:83889:83907	6761903	15	True				
ANR	6764168	CallExpression	fclose ( conM -> file )		6761903	0					
ANR	6764169	Callee	fclose		6761903	0					
ANR	6764170	Identifier	fclose		6761903	0					
ANR	6764171	ArgumentList	conM -> file		6761903	1					
ANR	6764172	Argument	conM -> file		6761903	0					
ANR	6764173	PtrMemberAccess	conM -> file		6761903	0					
ANR	6764174	Identifier	conM		6761903	0					
ANR	6764175	Identifier	file		6761903	1					
ANR	6764176	ExpressionStatement	fclose ( conY -> file )	2463:8:83917:83935	6761903	16	True				
ANR	6764177	CallExpression	fclose ( conY -> file )		6761903	0					
ANR	6764178	Callee	fclose		6761903	0					
ANR	6764179	Identifier	fclose		6761903	0					
ANR	6764180	ArgumentList	conY -> file		6761903	1					
ANR	6764181	Argument	conY -> file		6761903	0					
ANR	6764182	PtrMemberAccess	conY -> file		6761903	0					
ANR	6764183	Identifier	conY		6761903	0					
ANR	6764184	Identifier	file		6761903	1					
ANR	6764185	ExpressionStatement	fclose ( conK -> file )	2464:8:83945:83963	6761903	17	True				
ANR	6764186	CallExpression	fclose ( conK -> file )		6761903	0					
ANR	6764187	Callee	fclose		6761903	0					
ANR	6764188	Identifier	fclose		6761903	0					
ANR	6764189	ArgumentList	conK -> file		6761903	1					
ANR	6764190	Argument	conK -> file		6761903	0					
ANR	6764191	PtrMemberAccess	conK -> file		6761903	0					
ANR	6764192	Identifier	conK		6761903	0					
ANR	6764193	Identifier	file		6761903	1					
ANR	6764194	IfStatement	if ( con -> alpha )		6761903	18					
ANR	6764195	Condition	con -> alpha	2465:11:83976:83985	6761903	0	True				
ANR	6764196	PtrMemberAccess	con -> alpha		6761903	0					
ANR	6764197	Identifier	con		6761903	0					
ANR	6764198	Identifier	alpha		6761903	1					
ANR	6764199	ExpressionStatement	fclose ( conA -> file )	2466:12:84000:84018	6761903	1	True				
ANR	6764200	CallExpression	fclose ( conA -> file )		6761903	0					
ANR	6764201	Callee	fclose		6761903	0					
ANR	6764202	Identifier	fclose		6761903	0					
ANR	6764203	ArgumentList	conA -> file		6761903	1					
ANR	6764204	Argument	conA -> file		6761903	0					
ANR	6764205	PtrMemberAccess	conA -> file		6761903	0					
ANR	6764206	Identifier	conA		6761903	0					
ANR	6764207	Identifier	file		6761903	1					
ANR	6764208	ExpressionStatement	free ( conC -> buf )	2468:8:84029:84044	6761903	19	True				
ANR	6764209	CallExpression	free ( conC -> buf )		6761903	0					
ANR	6764210	Callee	free		6761903	0					
ANR	6764211	Identifier	free		6761903	0					
ANR	6764212	ArgumentList	conC -> buf		6761903	1					
ANR	6764213	Argument	conC -> buf		6761903	0					
ANR	6764214	PtrMemberAccess	conC -> buf		6761903	0					
ANR	6764215	Identifier	conC		6761903	0					
ANR	6764216	Identifier	buf		6761903	1					
ANR	6764217	ExpressionStatement	free ( conM -> buf )	2469:8:84054:84069	6761903	20	True				
ANR	6764218	CallExpression	free ( conM -> buf )		6761903	0					
ANR	6764219	Callee	free		6761903	0					
ANR	6764220	Identifier	free		6761903	0					
ANR	6764221	ArgumentList	conM -> buf		6761903	1					
ANR	6764222	Argument	conM -> buf		6761903	0					
ANR	6764223	PtrMemberAccess	conM -> buf		6761903	0					
ANR	6764224	Identifier	conM		6761903	0					
ANR	6764225	Identifier	buf		6761903	1					
ANR	6764226	ExpressionStatement	free ( conY -> buf )	2470:8:84079:84094	6761903	21	True				
ANR	6764227	CallExpression	free ( conY -> buf )		6761903	0					
ANR	6764228	Callee	free		6761903	0					
ANR	6764229	Identifier	free		6761903	0					
ANR	6764230	ArgumentList	conY -> buf		6761903	1					
ANR	6764231	Argument	conY -> buf		6761903	0					
ANR	6764232	PtrMemberAccess	conY -> buf		6761903	0					
ANR	6764233	Identifier	conY		6761903	0					
ANR	6764234	Identifier	buf		6761903	1					
ANR	6764235	ExpressionStatement	free ( conK -> buf )	2471:8:84104:84119	6761903	22	True				
ANR	6764236	CallExpression	free ( conK -> buf )		6761903	0					
ANR	6764237	Callee	free		6761903	0					
ANR	6764238	Identifier	free		6761903	0					
ANR	6764239	ArgumentList	conK -> buf		6761903	1					
ANR	6764240	Argument	conK -> buf		6761903	0					
ANR	6764241	PtrMemberAccess	conK -> buf		6761903	0					
ANR	6764242	Identifier	conK		6761903	0					
ANR	6764243	Identifier	buf		6761903	1					
ANR	6764244	IfStatement	if ( con -> alpha )		6761903	23					
ANR	6764245	Condition	con -> alpha	2472:11:84132:84141	6761903	0	True				
ANR	6764246	PtrMemberAccess	con -> alpha		6761903	0					
ANR	6764247	Identifier	con		6761903	0					
ANR	6764248	Identifier	alpha		6761903	1					
ANR	6764249	ExpressionStatement	free ( conA -> buf )	2473:12:84156:84171	6761903	1	True				
ANR	6764250	CallExpression	free ( conA -> buf )		6761903	0					
ANR	6764251	Callee	free		6761903	0					
ANR	6764252	Identifier	free		6761903	0					
ANR	6764253	ArgumentList	conA -> buf		6761903	1					
ANR	6764254	Argument	conA -> buf		6761903	0					
ANR	6764255	PtrMemberAccess	conA -> buf		6761903	0					
ANR	6764256	Identifier	conA		6761903	0					
ANR	6764257	Identifier	buf		6761903	1					
ANR	6764258	ExpressionStatement	free ( conC )	2475:8:84182:84192	6761903	24	True				
ANR	6764259	CallExpression	free ( conC )		6761903	0					
ANR	6764260	Callee	free		6761903	0					
ANR	6764261	Identifier	free		6761903	0					
ANR	6764262	ArgumentList	conC		6761903	1					
ANR	6764263	Argument	conC		6761903	0					
ANR	6764264	Identifier	conC		6761903	0					
ANR	6764265	ExpressionStatement	free ( conM )	2476:8:84202:84212	6761903	25	True				
ANR	6764266	CallExpression	free ( conM )		6761903	0					
ANR	6764267	Callee	free		6761903	0					
ANR	6764268	Identifier	free		6761903	0					
ANR	6764269	ArgumentList	conM		6761903	1					
ANR	6764270	Argument	conM		6761903	0					
ANR	6764271	Identifier	conM		6761903	0					
ANR	6764272	ExpressionStatement	free ( conY )	2477:8:84222:84232	6761903	26	True				
ANR	6764273	CallExpression	free ( conY )		6761903	0					
ANR	6764274	Callee	free		6761903	0					
ANR	6764275	Identifier	free		6761903	0					
ANR	6764276	ArgumentList	conY		6761903	1					
ANR	6764277	Argument	conY		6761903	0					
ANR	6764278	Identifier	conY		6761903	0					
ANR	6764279	ExpressionStatement	free ( conK )	2478:8:84242:84252	6761903	27	True				
ANR	6764280	CallExpression	free ( conK )		6761903	0					
ANR	6764281	Callee	free		6761903	0					
ANR	6764282	Identifier	free		6761903	0					
ANR	6764283	ArgumentList	conK		6761903	1					
ANR	6764284	Argument	conK		6761903	0					
ANR	6764285	Identifier	conK		6761903	0					
ANR	6764286	IfStatement	if ( con -> alpha )		6761903	28					
ANR	6764287	Condition	con -> alpha	2479:11:84265:84274	6761903	0	True				
ANR	6764288	PtrMemberAccess	con -> alpha		6761903	0					
ANR	6764289	Identifier	con		6761903	0					
ANR	6764290	Identifier	alpha		6761903	1					
ANR	6764291	ExpressionStatement	free ( conA )	2480:12:84289:84299	6761903	1	True				
ANR	6764292	CallExpression	free ( conA )		6761903	0					
ANR	6764293	Callee	free		6761903	0					
ANR	6764294	Identifier	free		6761903	0					
ANR	6764295	ArgumentList	conA		6761903	1					
ANR	6764296	Argument	conA		6761903	0					
ANR	6764297	Identifier	conA		6761903	0					
ANR	6764298	ExpressionStatement	"remove ( ""C.raw"" )"	2482:8:84318:84333	6761903	29	True				
ANR	6764299	CallExpression	"remove ( ""C.raw"" )"		6761903	0					
ANR	6764300	Callee	remove		6761903	0					
ANR	6764301	Identifier	remove		6761903	0					
ANR	6764302	ArgumentList	"""C.raw"""		6761903	1					
ANR	6764303	Argument	"""C.raw"""		6761903	0					
ANR	6764304	PrimaryExpression	"""C.raw"""		6761903	0					
ANR	6764305	ExpressionStatement	"remove ( ""M.raw"" )"	2483:8:84343:84358	6761903	30	True				
ANR	6764306	CallExpression	"remove ( ""M.raw"" )"		6761903	0					
ANR	6764307	Callee	remove		6761903	0					
ANR	6764308	Identifier	remove		6761903	0					
ANR	6764309	ArgumentList	"""M.raw"""		6761903	1					
ANR	6764310	Argument	"""M.raw"""		6761903	0					
ANR	6764311	PrimaryExpression	"""M.raw"""		6761903	0					
ANR	6764312	ExpressionStatement	"remove ( ""Y.raw"" )"	2484:8:84368:84383	6761903	31	True				
ANR	6764313	CallExpression	"remove ( ""Y.raw"" )"		6761903	0					
ANR	6764314	Callee	remove		6761903	0					
ANR	6764315	Identifier	remove		6761903	0					
ANR	6764316	ArgumentList	"""Y.raw"""		6761903	1					
ANR	6764317	Argument	"""Y.raw"""		6761903	0					
ANR	6764318	PrimaryExpression	"""Y.raw"""		6761903	0					
ANR	6764319	ExpressionStatement	"remove ( ""K.raw"" )"	2485:8:84393:84408	6761903	32	True				
ANR	6764320	CallExpression	"remove ( ""K.raw"" )"		6761903	0					
ANR	6764321	Callee	remove		6761903	0					
ANR	6764322	Identifier	remove		6761903	0					
ANR	6764323	ArgumentList	"""K.raw"""		6761903	1					
ANR	6764324	Argument	"""K.raw"""		6761903	0					
ANR	6764325	PrimaryExpression	"""K.raw"""		6761903	0					
ANR	6764326	IfStatement	if ( con -> alpha )		6761903	33					
ANR	6764327	Condition	con -> alpha	2486:11:84421:84430	6761903	0	True				
ANR	6764328	PtrMemberAccess	con -> alpha		6761903	0					
ANR	6764329	Identifier	con		6761903	0					
ANR	6764330	Identifier	alpha		6761903	1					
ANR	6764331	ExpressionStatement	"remove ( ""A.raw"" )"	2487:12:84445:84460	6761903	1	True				
ANR	6764332	CallExpression	"remove ( ""A.raw"" )"		6761903	0					
ANR	6764333	Callee	remove		6761903	0					
ANR	6764334	Identifier	remove		6761903	0					
ANR	6764335	ArgumentList	"""A.raw"""		6761903	1					
ANR	6764336	Argument	"""A.raw"""		6761903	0					
ANR	6764337	PrimaryExpression	"""A.raw"""		6761903	0					
ANR	6764338	ReturnType	void		6761903	1					
ANR	6764339	Identifier	write_file_CMYK		6761903	2					
ANR	6764340	ParameterList	"jxr_image_t image , int mx , int my , int * data"		6761903	3					
ANR	6764341	Parameter	jxr_image_t image	2188:21:73357:73373	6761903	0	True				
ANR	6764342	ParameterType	jxr_image_t		6761903	0					
ANR	6764343	Identifier	image		6761903	1					
ANR	6764344	Parameter	int mx	2188:40:73376:73381	6761903	1	True				
ANR	6764345	ParameterType	int		6761903	0					
ANR	6764346	Identifier	mx		6761903	1					
ANR	6764347	Parameter	int my	2188:48:73384:73389	6761903	2	True				
ANR	6764348	ParameterType	int		6761903	0					
ANR	6764349	Identifier	my		6761903	1					
ANR	6764350	Parameter	int * data	2188:56:73392:73400	6761903	3	True				
ANR	6764351	ParameterType	int *		6761903	0					
ANR	6764352	Identifier	data		6761903	1					
ANR	6764353	CFGEntryNode	ENTRY		6761903		True				
ANR	6764354	CFGExitNode	EXIT		6761903		True				
ANR	6764355	Symbol	& val		6761903						
ANR	6764356	Symbol	con		6761903						
ANR	6764357	Symbol	data		6761903						
ANR	6764358	Symbol	con -> ncomp		6761903						
ANR	6764359	Symbol	strip_blocks		6761903						
ANR	6764360	Symbol	conY -> name		6761903						
ANR	6764361	Symbol	conM -> ncomp		6761903						
ANR	6764362	Symbol	conY -> wid		6761903						
ANR	6764363	Symbol	conY -> ncomp		6761903						
ANR	6764364	Symbol	dp		6761903						
ANR	6764365	Symbol	conY -> file		6761903						
ANR	6764366	Symbol	dix		6761903						
ANR	6764367	Symbol	image -> window_extra_top		6761903						
ANR	6764368	Symbol	dy		6761903						
ANR	6764369	Symbol	con -> bpi		6761903						
ANR	6764370	Symbol	conA -> ncomp		6761903						
ANR	6764371	Symbol	jxr_get_pixel_format		6761903						
ANR	6764372	Symbol	* idx		6761903						
ANR	6764373	Symbol	jxr_get_ALPHACHANNEL_FLAG		6761903						
ANR	6764374	Symbol	jxr_get_EXTENDED_IMAGE_HEIGHT		6761903						
ANR	6764375	Symbol	ii		6761903						
ANR	6764376	Symbol	val		6761903						
ANR	6764377	Symbol	conK -> file		6761903						
ANR	6764378	Symbol	image		6761903						
ANR	6764379	Symbol	* conK		6761903						
ANR	6764380	Symbol	NULL		6761903						
ANR	6764381	Symbol	con -> hei		6761903						
ANR	6764382	Symbol	conM		6761903						
ANR	6764383	Symbol	conK		6761903						
ANR	6764384	Symbol	* conA		6761903						
ANR	6764385	Symbol	conC -> buf		6761903						
ANR	6764386	Symbol	conY -> buf		6761903						
ANR	6764387	Symbol	* conC		6761903						
ANR	6764388	Symbol	mx		6761903						
ANR	6764389	Symbol	conM -> file		6761903						
ANR	6764390	Symbol	my		6761903						
ANR	6764391	Symbol	con -> top_pad		6761903						
ANR	6764392	Symbol	conA -> buf		6761903						
ANR	6764393	Symbol	conC		6761903						
ANR	6764394	Symbol	size		6761903						
ANR	6764395	Symbol	con -> top_pad_remaining		6761903						
ANR	6764396	Symbol	conY		6761903						
ANR	6764397	Symbol	idx		6761903						
ANR	6764398	Symbol	conK -> ncomp		6761903						
ANR	6764399	Symbol	* image		6761903						
ANR	6764400	Symbol	trans		6761903						
ANR	6764401	Symbol	dataY		6761903						
ANR	6764402	Symbol	* dix		6761903						
ANR	6764403	Symbol	conA -> file		6761903						
ANR	6764404	Symbol	jxr_get_user_data		6761903						
ANR	6764405	Symbol	ftell		6761903						
ANR	6764406	Symbol	conC -> wid		6761903						
ANR	6764407	Symbol	dataM		6761903						
ANR	6764408	Symbol	conA -> wid		6761903						
ANR	6764409	Symbol	dataK		6761903						
ANR	6764410	Symbol	conC -> name		6761903						
ANR	6764411	Symbol	con -> left_pad		6761903						
ANR	6764412	Symbol	conM -> buf		6761903						
ANR	6764413	Symbol	conK -> buf		6761903						
ANR	6764414	Symbol	* conY		6761903						
ANR	6764415	Symbol	jxr_get_IMAGE_HEIGHT		6761903						
ANR	6764416	Symbol	conA		6761903						
ANR	6764417	Symbol	* dp		6761903						
ANR	6764418	Symbol	* con		6761903						
ANR	6764419	Symbol	conA -> name		6761903						
ANR	6764420	Symbol	conK -> name		6761903						
ANR	6764421	Symbol	* conM		6761903						
ANR	6764422	Symbol	jxr_get_OUTPUT_BITDEPTH		6761903						
ANR	6764423	Symbol	conC -> file		6761903						
ANR	6764424	Symbol	jxr_get_IMAGE_WIDTH		6761903						
ANR	6764425	Symbol	malloc		6761903						
ANR	6764426	Symbol	image -> window_extra_left		6761903						
ANR	6764427	Symbol	conC -> ncomp		6761903						
ANR	6764428	Symbol	* dataM		6761903						
ANR	6764429	Symbol	con -> file		6761903						
ANR	6764430	Symbol	conM -> name		6761903						
ANR	6764431	Symbol	* dataK		6761903						
ANR	6764432	Symbol	* dataC		6761903						
ANR	6764433	Symbol	* dataA		6761903						
ANR	6764434	Symbol	conM -> wid		6761903						
ANR	6764435	Symbol	conK -> wid		6761903						
ANR	6764436	Symbol	image -> extended_width		6761903						
ANR	6764437	Symbol	dataC		6761903						
ANR	6764438	Symbol	* dataY		6761903						
ANR	6764439	Symbol	dataA		6761903						
ANR	6764440	Symbol	jxr_get_EXTENDED_IMAGE_WIDTH		6761903						
ANR	6764441	Symbol	con -> alpha		6761903						
ANR	6764442	Symbol	first		6761903						
ANR	6764443	Function	write_file	2491:0:84471:94431							
ANR	6764444	FunctionDef	"write_file (jxr_image_t image , int mx , int my , int * data)"		6764443	0					
ANR	6764445	CompoundStatement		2492:0:84532:94431	6764443	0					
ANR	6764446	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	2493:4:84538:84588	6764443	0	True				
ANR	6764447	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		6764443	0					
ANR	6764448	IdentifierDeclType	context *		6764443	0					
ANR	6764449	Identifier	con		6764443	1					
ANR	6764450	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		6764443	2		=			
ANR	6764451	Identifier	con		6764443	0					
ANR	6764452	CastExpression	( context * ) jxr_get_user_data ( image )		6764443	1					
ANR	6764453	CastTarget	context *		6764443	0					
ANR	6764454	CallExpression	jxr_get_user_data ( image )		6764443	1					
ANR	6764455	Callee	jxr_get_user_data		6764443	0					
ANR	6764456	Identifier	jxr_get_user_data		6764443	0					
ANR	6764457	ArgumentList	image		6764443	1					
ANR	6764458	Argument	image		6764443	0					
ANR	6764459	Identifier	image		6764443	0					
ANR	6764460	IfStatement	if ( ( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) ) && jxr_get_IMAGE_CHANNELS ( image ) == 3 )		6764443	1					
ANR	6764461	Condition	( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) ) && jxr_get_IMAGE_CHANNELS ( image ) == 3	2495:7:84602:84712	6764443	0	True				
ANR	6764462	AndExpression	( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) ) && jxr_get_IMAGE_CHANNELS ( image ) == 3		6764443	0		&&			
ANR	6764463	OrExpression	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image )		6764443	0		||			
ANR	6764464	CallExpression	isOutputYUV444 ( image )		6764443	0					
ANR	6764465	Callee	isOutputYUV444		6764443	0					
ANR	6764466	Identifier	isOutputYUV444		6764443	0					
ANR	6764467	ArgumentList	image		6764443	1					
ANR	6764468	Argument	image		6764443	0					
ANR	6764469	Identifier	image		6764443	0					
ANR	6764470	OrExpression	isOutputYUV422 ( image ) || isOutputYUV420 ( image )		6764443	1		||			
ANR	6764471	CallExpression	isOutputYUV422 ( image )		6764443	0					
ANR	6764472	Callee	isOutputYUV422		6764443	0					
ANR	6764473	Identifier	isOutputYUV422		6764443	0					
ANR	6764474	ArgumentList	image		6764443	1					
ANR	6764475	Argument	image		6764443	0					
ANR	6764476	Identifier	image		6764443	0					
ANR	6764477	CallExpression	isOutputYUV420 ( image )		6764443	1					
ANR	6764478	Callee	isOutputYUV420		6764443	0					
ANR	6764479	Identifier	isOutputYUV420		6764443	0					
ANR	6764480	ArgumentList	image		6764443	1					
ANR	6764481	Argument	image		6764443	0					
ANR	6764482	Identifier	image		6764443	0					
ANR	6764483	EqualityExpression	jxr_get_IMAGE_CHANNELS ( image ) == 3		6764443	1		==			
ANR	6764484	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		6764443	0					
ANR	6764485	Callee	jxr_get_IMAGE_CHANNELS		6764443	0					
ANR	6764486	Identifier	jxr_get_IMAGE_CHANNELS		6764443	0					
ANR	6764487	ArgumentList	image		6764443	1					
ANR	6764488	Argument	image		6764443	0					
ANR	6764489	Identifier	image		6764443	0					
ANR	6764490	PrimaryExpression	3		6764443	1					
ANR	6764491	CompoundStatement		5:4:186:186	6764443	1					
ANR	6764492	ExpressionStatement	"write_file_YCC ( image , mx , my , data )"	2498:8:84789:84824	6764443	0	True				
ANR	6764493	CallExpression	"write_file_YCC ( image , mx , my , data )"		6764443	0					
ANR	6764494	Callee	write_file_YCC		6764443	0					
ANR	6764495	Identifier	write_file_YCC		6764443	0					
ANR	6764496	ArgumentList	image		6764443	1					
ANR	6764497	Argument	image		6764443	0					
ANR	6764498	Identifier	image		6764443	0					
ANR	6764499	Argument	mx		6764443	1					
ANR	6764500	Identifier	mx		6764443	0					
ANR	6764501	Argument	my		6764443	2					
ANR	6764502	Identifier	my		6764443	0					
ANR	6764503	Argument	data		6764443	3					
ANR	6764504	Identifier	data		6764443	0					
ANR	6764505	ReturnStatement	return ;	2499:8:84834:84840	6764443	1	True				
ANR	6764506	ElseStatement	else		6764443	0					
ANR	6764507	IfStatement	if ( isOutputCMYKDirect ( image ) && jxr_get_IMAGE_CHANNELS ( image ) == 4 )		6764443	0					
ANR	6764508	Condition	isOutputCMYKDirect ( image ) && jxr_get_IMAGE_CHANNELS ( image ) == 4	2501:12:84860:84922	6764443	0	True				
ANR	6764509	AndExpression	isOutputCMYKDirect ( image ) && jxr_get_IMAGE_CHANNELS ( image ) == 4		6764443	0		&&			
ANR	6764510	CallExpression	isOutputCMYKDirect ( image )		6764443	0					
ANR	6764511	Callee	isOutputCMYKDirect		6764443	0					
ANR	6764512	Identifier	isOutputCMYKDirect		6764443	0					
ANR	6764513	ArgumentList	image		6764443	1					
ANR	6764514	Argument	image		6764443	0					
ANR	6764515	Identifier	image		6764443	0					
ANR	6764516	EqualityExpression	jxr_get_IMAGE_CHANNELS ( image ) == 4		6764443	1		==			
ANR	6764517	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		6764443	0					
ANR	6764518	Callee	jxr_get_IMAGE_CHANNELS		6764443	0					
ANR	6764519	Identifier	jxr_get_IMAGE_CHANNELS		6764443	0					
ANR	6764520	ArgumentList	image		6764443	1					
ANR	6764521	Argument	image		6764443	0					
ANR	6764522	Identifier	image		6764443	0					
ANR	6764523	PrimaryExpression	4		6764443	1					
ANR	6764524	CompoundStatement		11:4:396:396	6764443	1					
ANR	6764525	ExpressionStatement	"write_file_CMYK ( image , mx , my , data )"	2504:8:84999:85035	6764443	0	True				
ANR	6764526	CallExpression	"write_file_CMYK ( image , mx , my , data )"		6764443	0					
ANR	6764527	Callee	write_file_CMYK		6764443	0					
ANR	6764528	Identifier	write_file_CMYK		6764443	0					
ANR	6764529	ArgumentList	image		6764443	1					
ANR	6764530	Argument	image		6764443	0					
ANR	6764531	Identifier	image		6764443	0					
ANR	6764532	Argument	mx		6764443	1					
ANR	6764533	Identifier	mx		6764443	0					
ANR	6764534	Argument	my		6764443	2					
ANR	6764535	Identifier	my		6764443	0					
ANR	6764536	Argument	data		6764443	3					
ANR	6764537	Identifier	data		6764443	0					
ANR	6764538	ReturnStatement	return ;	2505:8:85045:85051	6764443	1	True				
ANR	6764539	IfStatement	if ( con -> file == 0 )		6764443	2					
ANR	6764540	Condition	con -> file == 0	2508:8:85068:85079	6764443	0	True				
ANR	6764541	EqualityExpression	con -> file == 0		6764443	0		==			
ANR	6764542	PtrMemberAccess	con -> file		6764443	0					
ANR	6764543	Identifier	con		6764443	0					
ANR	6764544	Identifier	file		6764443	1					
ANR	6764545	PrimaryExpression	0		6764443	1					
ANR	6764546	CompoundStatement		19:8:563:607	6764443	1					
ANR	6764547	IdentifierDeclStatement	int channels = jxr_get_IMAGE_CHANNELS ( image ) ;	2510:8:85096:85140	6764443	0	True				
ANR	6764548	IdentifierDecl	channels = jxr_get_IMAGE_CHANNELS ( image )		6764443	0					
ANR	6764549	IdentifierDeclType	int		6764443	0					
ANR	6764550	Identifier	channels		6764443	1					
ANR	6764551	AssignmentExpression	channels = jxr_get_IMAGE_CHANNELS ( image )		6764443	2		=			
ANR	6764552	Identifier	channels		6764443	0					
ANR	6764553	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		6764443	1					
ANR	6764554	Callee	jxr_get_IMAGE_CHANNELS		6764443	0					
ANR	6764555	Identifier	jxr_get_IMAGE_CHANNELS		6764443	0					
ANR	6764556	ArgumentList	image		6764443	1					
ANR	6764557	Argument	image		6764443	0					
ANR	6764558	Identifier	image		6764443	0					
ANR	6764559	IfStatement	if ( channels == 3 )		6764443	1					
ANR	6764560	Condition	channels == 3	2511:12:85154:85166	6764443	0	True				
ANR	6764561	EqualityExpression	channels == 3		6764443	0		==			
ANR	6764562	Identifier	channels		6764443	0					
ANR	6764563	PrimaryExpression	3		6764443	1					
ANR	6764564	ExpressionStatement	"set_bgr_flag ( con , image )"	2512:12:85181:85205	6764443	1	True				
ANR	6764565	CallExpression	"set_bgr_flag ( con , image )"		6764443	0					
ANR	6764566	Callee	set_bgr_flag		6764443	0					
ANR	6764567	Identifier	set_bgr_flag		6764443	0					
ANR	6764568	ArgumentList	con		6764443	1					
ANR	6764569	Argument	con		6764443	0					
ANR	6764570	Identifier	con		6764443	0					
ANR	6764571	Argument	image		6764443	1					
ANR	6764572	Identifier	image		6764443	0					
ANR	6764573	ElseStatement	else		6764443	0					
ANR	6764574	ExpressionStatement	con -> isBgr = 0	2514:12:85232:85246	6764443	0	True				
ANR	6764575	AssignmentExpression	con -> isBgr = 0		6764443	0		=			
ANR	6764576	PtrMemberAccess	con -> isBgr		6764443	0					
ANR	6764577	Identifier	con		6764443	0					
ANR	6764578	Identifier	isBgr		6764443	1					
ANR	6764579	PrimaryExpression	0		6764443	1					
ANR	6764580	IfStatement	if ( jxr_get_pixel_format ( image ) == JXRC_FMT_32bppRGBE )		6764443	2					
ANR	6764581	Condition	jxr_get_pixel_format ( image ) == JXRC_FMT_32bppRGBE	2516:11:85260:85308	6764443	0	True				
ANR	6764582	EqualityExpression	jxr_get_pixel_format ( image ) == JXRC_FMT_32bppRGBE		6764443	0		==			
ANR	6764583	CallExpression	jxr_get_pixel_format ( image )		6764443	0					
ANR	6764584	Callee	jxr_get_pixel_format		6764443	0					
ANR	6764585	Identifier	jxr_get_pixel_format		6764443	0					
ANR	6764586	ArgumentList	image		6764443	1					
ANR	6764587	Argument	image		6764443	0					
ANR	6764588	Identifier	image		6764443	0					
ANR	6764589	Identifier	JXRC_FMT_32bppRGBE		6764443	1					
ANR	6764590	CompoundStatement		26:8:786:786	6764443	1					
ANR	6764591	ExpressionStatement	channels ++	2518:12:85344:85354	6764443	0	True				
ANR	6764592	PostIncDecOperationExpression	channels ++		6764443	0					
ANR	6764593	Identifier	channels		6764443	0					
ANR	6764594	IncDec	++		6764443	1					
ANR	6764595	ExpressionStatement	"set_pad_bytes ( con , image )"	2521:8:85375:85400	6764443	3	True				
ANR	6764596	CallExpression	"set_pad_bytes ( con , image )"		6764443	0					
ANR	6764597	Callee	set_pad_bytes		6764443	0					
ANR	6764598	Identifier	set_pad_bytes		6764443	0					
ANR	6764599	ArgumentList	con		6764443	1					
ANR	6764600	Argument	con		6764443	0					
ANR	6764601	Identifier	con		6764443	0					
ANR	6764602	Argument	image		6764443	1					
ANR	6764603	Identifier	image		6764443	0					
ANR	6764604	ExpressionStatement	con -> left_pad = image -> window_extra_left	2523:8:85411:85451	6764443	4	True				
ANR	6764605	AssignmentExpression	con -> left_pad = image -> window_extra_left		6764443	0		=			
ANR	6764606	PtrMemberAccess	con -> left_pad		6764443	0					
ANR	6764607	Identifier	con		6764443	0					
ANR	6764608	Identifier	left_pad		6764443	1					
ANR	6764609	PtrMemberAccess	image -> window_extra_left		6764443	1					
ANR	6764610	Identifier	image		6764443	0					
ANR	6764611	Identifier	window_extra_left		6764443	1					
ANR	6764612	ExpressionStatement	con -> top_pad_remaining = image -> window_extra_top	2524:8:85461:85509	6764443	5	True				
ANR	6764613	AssignmentExpression	con -> top_pad_remaining = image -> window_extra_top		6764443	0		=			
ANR	6764614	PtrMemberAccess	con -> top_pad_remaining		6764443	0					
ANR	6764615	Identifier	con		6764443	0					
ANR	6764616	Identifier	top_pad_remaining		6764443	1					
ANR	6764617	PtrMemberAccess	image -> window_extra_top		6764443	1					
ANR	6764618	Identifier	image		6764443	0					
ANR	6764619	Identifier	window_extra_top		6764443	1					
ANR	6764620	ExpressionStatement	con -> top_pad = image -> window_extra_top	2525:8:85519:85557	6764443	6	True				
ANR	6764621	AssignmentExpression	con -> top_pad = image -> window_extra_top		6764443	0		=			
ANR	6764622	PtrMemberAccess	con -> top_pad		6764443	0					
ANR	6764623	Identifier	con		6764443	0					
ANR	6764624	Identifier	top_pad		6764443	1					
ANR	6764625	PtrMemberAccess	image -> window_extra_top		6764443	1					
ANR	6764626	Identifier	image		6764443	0					
ANR	6764627	Identifier	window_extra_top		6764443	1					
ANR	6764628	ExpressionStatement	con -> alpha = jxr_get_ALPHACHANNEL_FLAG ( image )	2527:8:85568:85613	6764443	7	True				
ANR	6764629	AssignmentExpression	con -> alpha = jxr_get_ALPHACHANNEL_FLAG ( image )		6764443	0		=			
ANR	6764630	PtrMemberAccess	con -> alpha		6764443	0					
ANR	6764631	Identifier	con		6764443	0					
ANR	6764632	Identifier	alpha		6764443	1					
ANR	6764633	CallExpression	jxr_get_ALPHACHANNEL_FLAG ( image )		6764443	1					
ANR	6764634	Callee	jxr_get_ALPHACHANNEL_FLAG		6764443	0					
ANR	6764635	Identifier	jxr_get_ALPHACHANNEL_FLAG		6764443	0					
ANR	6764636	ArgumentList	image		6764443	1					
ANR	6764637	Argument	image		6764443	0					
ANR	6764638	Identifier	image		6764443	0					
ANR	6764639	IfStatement	if ( con -> alpha )		6764443	8					
ANR	6764640	Condition	con -> alpha	2528:12:85627:85636	6764443	0	True				
ANR	6764641	PtrMemberAccess	con -> alpha		6764443	0					
ANR	6764642	Identifier	con		6764443	0					
ANR	6764643	Identifier	alpha		6764443	1					
ANR	6764644	ExpressionStatement	channels ++	2529:12:85677:85688	6764443	1	True				
ANR	6764645	PostIncDecOperationExpression	channels ++		6764443	0					
ANR	6764646	Identifier	channels		6764443	0					
ANR	6764647	IncDec	++		6764443	1					
ANR	6764648	ExpressionStatement	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , channels , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2531:8:85699:85950	6764443	9	True				
ANR	6764649	CallExpression	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , channels , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		6764443	0					
ANR	6764650	Callee	start_output_file		6764443	0					
ANR	6764651	Identifier	start_output_file		6764443	0					
ANR	6764652	ArgumentList	con		6764443	1					
ANR	6764653	Argument	con		6764443	0					
ANR	6764654	Identifier	con		6764443	0					
ANR	6764655	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6764443	1					
ANR	6764656	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6764443	0					
ANR	6764657	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		6764443	0					
ANR	6764658	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		6764443	0					
ANR	6764659	ArgumentList	image		6764443	1					
ANR	6764660	Argument	image		6764443	0					
ANR	6764661	Identifier	image		6764443	0					
ANR	6764662	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6764443	2					
ANR	6764663	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6764443	0					
ANR	6764664	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		6764443	0					
ANR	6764665	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		6764443	0					
ANR	6764666	ArgumentList	image		6764443	1					
ANR	6764667	Argument	image		6764443	0					
ANR	6764668	Identifier	image		6764443	0					
ANR	6764669	Argument	jxr_get_IMAGE_WIDTH ( image )		6764443	3					
ANR	6764670	CallExpression	jxr_get_IMAGE_WIDTH ( image )		6764443	0					
ANR	6764671	Callee	jxr_get_IMAGE_WIDTH		6764443	0					
ANR	6764672	Identifier	jxr_get_IMAGE_WIDTH		6764443	0					
ANR	6764673	ArgumentList	image		6764443	1					
ANR	6764674	Argument	image		6764443	0					
ANR	6764675	Identifier	image		6764443	0					
ANR	6764676	Argument	jxr_get_IMAGE_HEIGHT ( image )		6764443	4					
ANR	6764677	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		6764443	0					
ANR	6764678	Callee	jxr_get_IMAGE_HEIGHT		6764443	0					
ANR	6764679	Identifier	jxr_get_IMAGE_HEIGHT		6764443	0					
ANR	6764680	ArgumentList	image		6764443	1					
ANR	6764681	Argument	image		6764443	0					
ANR	6764682	Identifier	image		6764443	0					
ANR	6764683	Argument	channels		6764443	5					
ANR	6764684	Identifier	channels		6764443	0					
ANR	6764685	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6764443	6					
ANR	6764686	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6764443	0					
ANR	6764687	Callee	jxr_get_OUTPUT_BITDEPTH		6764443	0					
ANR	6764688	Identifier	jxr_get_OUTPUT_BITDEPTH		6764443	0					
ANR	6764689	ArgumentList	image		6764443	1					
ANR	6764690	Argument	image		6764443	0					
ANR	6764691	Identifier	image		6764443	0					
ANR	6764692	Argument	jxr_get_pixel_format ( image )		6764443	7					
ANR	6764693	CallExpression	jxr_get_pixel_format ( image )		6764443	0					
ANR	6764694	Callee	jxr_get_pixel_format		6764443	0					
ANR	6764695	Identifier	jxr_get_pixel_format		6764443	0					
ANR	6764696	ArgumentList	image		6764443	1					
ANR	6764697	Argument	image		6764443	0					
ANR	6764698	Identifier	image		6764443	0					
ANR	6764699	IdentifierDeclStatement	"int idx , jdx ;"	2536:4:85963:85975	6764443	3	True				
ANR	6764700	IdentifierDecl	idx		6764443	0					
ANR	6764701	IdentifierDeclType	int		6764443	0					
ANR	6764702	Identifier	idx		6764443	1					
ANR	6764703	IdentifierDecl	jdx		6764443	1					
ANR	6764704	IdentifierDeclType	int		6764443	0					
ANR	6764705	Identifier	jdx		6764443	1					
ANR	6764706	IdentifierDeclStatement	int strip_blocks = ( image -> extended_width ) / 16 ;	2537:4:85981:86026	6764443	4	True				
ANR	6764707	IdentifierDecl	strip_blocks = ( image -> extended_width ) / 16		6764443	0					
ANR	6764708	IdentifierDeclType	int		6764443	0					
ANR	6764709	Identifier	strip_blocks		6764443	1					
ANR	6764710	AssignmentExpression	strip_blocks = ( image -> extended_width ) / 16		6764443	2		=			
ANR	6764711	Identifier	strip_blocks		6764443	0					
ANR	6764712	MultiplicativeExpression	( image -> extended_width ) / 16		6764443	1		/			
ANR	6764713	PtrMemberAccess	image -> extended_width		6764443	0					
ANR	6764714	Identifier	image		6764443	0					
ANR	6764715	Identifier	extended_width		6764443	1					
ANR	6764716	PrimaryExpression	16		6764443	1					
ANR	6764717	IdentifierDeclStatement	int dy = 16 * con -> ncomp * strip_blocks ;	2538:4:86032:86067	6764443	5	True				
ANR	6764718	IdentifierDecl	dy = 16 * con -> ncomp * strip_blocks		6764443	0					
ANR	6764719	IdentifierDeclType	int		6764443	0					
ANR	6764720	Identifier	dy		6764443	1					
ANR	6764721	AssignmentExpression	dy = 16 * con -> ncomp * strip_blocks		6764443	2		=			
ANR	6764722	Identifier	dy		6764443	0					
ANR	6764723	MultiplicativeExpression	16 * con -> ncomp * strip_blocks		6764443	1		*			
ANR	6764724	PrimaryExpression	16		6764443	0					
ANR	6764725	MultiplicativeExpression	con -> ncomp * strip_blocks		6764443	1		*			
ANR	6764726	PtrMemberAccess	con -> ncomp		6764443	0					
ANR	6764727	Identifier	con		6764443	0					
ANR	6764728	Identifier	ncomp		6764443	1					
ANR	6764729	Identifier	strip_blocks		6764443	1					
ANR	6764730	IfStatement	if ( con -> padBytes != 0 )		6764443	6					
ANR	6764731	Condition	con -> padBytes != 0	2539:7:86076:86092	6764443	0	True				
ANR	6764732	EqualityExpression	con -> padBytes != 0		6764443	0		!=			
ANR	6764733	PtrMemberAccess	con -> padBytes		6764443	0					
ANR	6764734	Identifier	con		6764443	0					
ANR	6764735	Identifier	padBytes		6764443	1					
ANR	6764736	PrimaryExpression	0		6764443	1					
ANR	6764737	ExpressionStatement	dy = dy + 16 * strip_blocks	2540:8:86103:86126	6764443	1	True				
ANR	6764738	AssignmentExpression	dy = dy + 16 * strip_blocks		6764443	0		=			
ANR	6764739	Identifier	dy		6764443	0					
ANR	6764740	AdditiveExpression	dy + 16 * strip_blocks		6764443	1		+			
ANR	6764741	Identifier	dy		6764443	0					
ANR	6764742	MultiplicativeExpression	16 * strip_blocks		6764443	1		*			
ANR	6764743	PrimaryExpression	16		6764443	0					
ANR	6764744	Identifier	strip_blocks		6764443	1					
ANR	6764745	IfStatement	if ( con -> bpi == 1 || con -> bpi == 5 || con -> bpi == 6 || con -> bpi == 8 )		6764443	7					
ANR	6764746	Condition	con -> bpi == 1 || con -> bpi == 5 || con -> bpi == 6 || con -> bpi == 8	2541:8:86136:86199	6764443	0	True				
ANR	6764747	OrExpression	con -> bpi == 1 || con -> bpi == 5 || con -> bpi == 6 || con -> bpi == 8		6764443	0		||			
ANR	6764748	EqualityExpression	con -> bpi == 1		6764443	0		==			
ANR	6764749	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6764750	Identifier	con		6764443	0					
ANR	6764751	Identifier	bpi		6764443	1					
ANR	6764752	PrimaryExpression	1		6764443	1					
ANR	6764753	OrExpression	con -> bpi == 5 || con -> bpi == 6 || con -> bpi == 8		6764443	1		||			
ANR	6764754	EqualityExpression	con -> bpi == 5		6764443	0		==			
ANR	6764755	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6764756	Identifier	con		6764443	0					
ANR	6764757	Identifier	bpi		6764443	1					
ANR	6764758	PrimaryExpression	5		6764443	1					
ANR	6764759	OrExpression	con -> bpi == 6 || con -> bpi == 8		6764443	1		||			
ANR	6764760	EqualityExpression	con -> bpi == 6		6764443	0		==			
ANR	6764761	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6764762	Identifier	con		6764443	0					
ANR	6764763	Identifier	bpi		6764443	1					
ANR	6764764	PrimaryExpression	6		6764443	1					
ANR	6764765	EqualityExpression	con -> bpi == 8		6764443	1		==			
ANR	6764766	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6764767	Identifier	con		6764443	0					
ANR	6764768	Identifier	bpi		6764443	1					
ANR	6764769	PrimaryExpression	8		6764443	1					
ANR	6764770	CompoundStatement		51:8:1679:1730	6764443	1					
ANR	6764771	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) con -> buf + 16 * con -> ncomp * mx ;	2542:8:86212:86263	6764443	0	True				
ANR	6764772	IdentifierDecl	* dp = ( uint8_t * ) con -> buf + 16 * con -> ncomp * mx		6764443	0					
ANR	6764773	IdentifierDeclType	uint8_t *		6764443	0					
ANR	6764774	Identifier	dp		6764443	1					
ANR	6764775	AssignmentExpression	* dp = ( uint8_t * ) con -> buf + 16 * con -> ncomp * mx		6764443	2		=			
ANR	6764776	Identifier	dp		6764443	0					
ANR	6764777	AdditiveExpression	( uint8_t * ) con -> buf + 16 * con -> ncomp * mx		6764443	1		+			
ANR	6764778	CastExpression	( uint8_t * ) con -> buf		6764443	0					
ANR	6764779	CastTarget	uint8_t *		6764443	0					
ANR	6764780	PtrMemberAccess	con -> buf		6764443	1					
ANR	6764781	Identifier	con		6764443	0					
ANR	6764782	Identifier	buf		6764443	1					
ANR	6764783	MultiplicativeExpression	16 * con -> ncomp * mx		6764443	1		*			
ANR	6764784	PrimaryExpression	16		6764443	0					
ANR	6764785	MultiplicativeExpression	con -> ncomp * mx		6764443	1		*			
ANR	6764786	PtrMemberAccess	con -> ncomp		6764443	0					
ANR	6764787	Identifier	con		6764443	0					
ANR	6764788	Identifier	ncomp		6764443	1					
ANR	6764789	Identifier	mx		6764443	1					
ANR	6764790	IfStatement	if ( con -> padBytes != 0 )		6764443	1					
ANR	6764791	Condition	con -> padBytes != 0	2543:11:86276:86293	6764443	0	True				
ANR	6764792	EqualityExpression	con -> padBytes != 0		6764443	0		!=			
ANR	6764793	PtrMemberAccess	con -> padBytes		6764443	0					
ANR	6764794	Identifier	con		6764443	0					
ANR	6764795	Identifier	padBytes		6764443	1					
ANR	6764796	PrimaryExpression	0		6764443	1					
ANR	6764797	CompoundStatement		53:8:1771:1771	6764443	1					
ANR	6764798	ExpressionStatement	dp = dp + 16 * mx	2545:12:86318:86333	6764443	0	True				
ANR	6764799	AssignmentExpression	dp = dp + 16 * mx		6764443	0		=			
ANR	6764800	Identifier	dp		6764443	0					
ANR	6764801	AdditiveExpression	dp + 16 * mx		6764443	1		+			
ANR	6764802	Identifier	dp		6764443	0					
ANR	6764803	MultiplicativeExpression	16 * mx		6764443	1		*			
ANR	6764804	PrimaryExpression	16		6764443	0					
ANR	6764805	Identifier	mx		6764443	1					
ANR	6764806	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		6764443	2					
ANR	6764807	ForInit	idx = 0 ;	2547:13:86391:86398	6764443	0	True				
ANR	6764808	AssignmentExpression	idx = 0		6764443	0		=			
ANR	6764809	Identifier	idx		6764443	0					
ANR	6764810	PrimaryExpression	0		6764443	1					
ANR	6764811	Condition	idx < 256	2547:22:86400:86408	6764443	1	True				
ANR	6764812	RelationalExpression	idx < 256		6764443	0		<			
ANR	6764813	Identifier	idx		6764443	0					
ANR	6764814	PrimaryExpression	256		6764443	1					
ANR	6764815	AssignmentExpression	idx += 1	2547:33:86411:86418	6764443	2	True	+=			
ANR	6764816	Identifier	idx		6764443	0					
ANR	6764817	PrimaryExpression	1		6764443	1					
ANR	6764818	CompoundStatement		61:12:2059:2065	6764443	3					
ANR	6764819	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp ;	2548:12:86435:86478	6764443	0	True				
ANR	6764820	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		6764443	0					
ANR	6764821	IdentifierDeclType	int		6764443	0					
ANR	6764822	Identifier	dix		6764443	1					
ANR	6764823	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		6764443	2		=			
ANR	6764824	Identifier	dix		6764443	0					
ANR	6764825	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		6764443	1		+			
ANR	6764826	MultiplicativeExpression	( idx / 16 ) * dy		6764443	0		*			
ANR	6764827	MultiplicativeExpression	idx / 16		6764443	0		/			
ANR	6764828	Identifier	idx		6764443	0					
ANR	6764829	PrimaryExpression	16		6764443	1					
ANR	6764830	Identifier	dy		6764443	1					
ANR	6764831	MultiplicativeExpression	( idx % 16 ) * con -> ncomp		6764443	1		*			
ANR	6764832	MultiplicativeExpression	idx % 16		6764443	0		%			
ANR	6764833	Identifier	idx		6764443	0					
ANR	6764834	PrimaryExpression	16		6764443	1					
ANR	6764835	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6764836	Identifier	con		6764443	0					
ANR	6764837	Identifier	ncomp		6764443	1					
ANR	6764838	IfStatement	if ( con -> padBytes )		6764443	1					
ANR	6764839	Condition	con -> padBytes	2549:15:86495:86507	6764443	0	True				
ANR	6764840	PtrMemberAccess	con -> padBytes		6764443	0					
ANR	6764841	Identifier	con		6764443	0					
ANR	6764842	Identifier	padBytes		6764443	1					
ANR	6764843	ExpressionStatement	dix += ( idx % 16 )	2550:16:86526:86540	6764443	1	True				
ANR	6764844	AssignmentExpression	dix += ( idx % 16 )		6764443	0		+=			
ANR	6764845	Identifier	dix		6764443	0					
ANR	6764846	MultiplicativeExpression	idx % 16		6764443	1		%			
ANR	6764847	Identifier	idx		6764443	0					
ANR	6764848	PrimaryExpression	16		6764443	1					
ANR	6764849	IdentifierDeclStatement	int six = idx * con -> ncomp ;	2551:12:86554:86578	6764443	2	True				
ANR	6764850	IdentifierDecl	six = idx * con -> ncomp		6764443	0					
ANR	6764851	IdentifierDeclType	int		6764443	0					
ANR	6764852	Identifier	six		6764443	1					
ANR	6764853	AssignmentExpression	six = idx * con -> ncomp		6764443	2		=			
ANR	6764854	Identifier	six		6764443	0					
ANR	6764855	MultiplicativeExpression	idx * con -> ncomp		6764443	1		*			
ANR	6764856	Identifier	idx		6764443	0					
ANR	6764857	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6764858	Identifier	con		6764443	0					
ANR	6764859	Identifier	ncomp		6764443	1					
ANR	6764860	IdentifierDeclStatement	int pl ;	2552:12:86592:86598	6764443	3	True				
ANR	6764861	IdentifierDecl	pl		6764443	0					
ANR	6764862	IdentifierDeclType	int		6764443	0					
ANR	6764863	Identifier	pl		6764443	1					
ANR	6764864	ForStatement	for ( pl = 0 ; pl < con -> ncomp ; pl += 1 )		6764443	4					
ANR	6764865	ForInit	pl = 0 ;	2553:17:86617:86624	6764443	0	True				
ANR	6764866	AssignmentExpression	pl = 0		6764443	0		=			
ANR	6764867	Identifier	pl		6764443	0					
ANR	6764868	PrimaryExpression	0		6764443	1					
ANR	6764869	Condition	pl < con -> ncomp	2553:26:86626:86640	6764443	1	True				
ANR	6764870	RelationalExpression	pl < con -> ncomp		6764443	0		<			
ANR	6764871	Identifier	pl		6764443	0					
ANR	6764872	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6764873	Identifier	con		6764443	0					
ANR	6764874	Identifier	ncomp		6764443	1					
ANR	6764875	AssignmentExpression	pl += 1	2553:44:86644:86650	6764443	2	True	+=			
ANR	6764876	Identifier	pl		6764443	0					
ANR	6764877	PrimaryExpression	1		6764443	1					
ANR	6764878	ExpressionStatement	dp [ dix + pl ] = data [ six + pl ]	2554:16:86669:86698	6764443	3	True				
ANR	6764879	AssignmentExpression	dp [ dix + pl ] = data [ six + pl ]		6764443	0		=			
ANR	6764880	ArrayIndexing	dp [ dix + pl ]		6764443	0					
ANR	6764881	Identifier	dp		6764443	0					
ANR	6764882	AdditiveExpression	dix + pl		6764443	1		+			
ANR	6764883	Identifier	dix		6764443	0					
ANR	6764884	Identifier	pl		6764443	1					
ANR	6764885	ArrayIndexing	data [ six + pl ]		6764443	1					
ANR	6764886	Identifier	data		6764443	0					
ANR	6764887	AdditiveExpression	six + pl		6764443	1		+			
ANR	6764888	Identifier	six		6764443	0					
ANR	6764889	Identifier	pl		6764443	1					
ANR	6764890	IfStatement	if ( con -> padBytes != 0 )		6764443	5					
ANR	6764891	Condition	con -> padBytes != 0	2555:15:86715:86732	6764443	0	True				
ANR	6764892	EqualityExpression	con -> padBytes != 0		6764443	0		!=			
ANR	6764893	PtrMemberAccess	con -> padBytes		6764443	0					
ANR	6764894	Identifier	con		6764443	0					
ANR	6764895	Identifier	padBytes		6764443	1					
ANR	6764896	PrimaryExpression	0		6764443	1					
ANR	6764897	ExpressionStatement	dp [ dix + pl ] = 0	2556:16:86751:86767	6764443	1	True				
ANR	6764898	AssignmentExpression	dp [ dix + pl ] = 0		6764443	0		=			
ANR	6764899	ArrayIndexing	dp [ dix + pl ]		6764443	0					
ANR	6764900	Identifier	dp		6764443	0					
ANR	6764901	AdditiveExpression	dix + pl		6764443	1		+			
ANR	6764902	Identifier	dix		6764443	0					
ANR	6764903	Identifier	pl		6764443	1					
ANR	6764904	PrimaryExpression	0		6764443	1					
ANR	6764905	IfStatement	if ( con -> isBgr )		6764443	6					
ANR	6764906	Condition	con -> isBgr	2557:15:86824:86833	6764443	0	True				
ANR	6764907	PtrMemberAccess	con -> isBgr		6764443	0					
ANR	6764908	Identifier	con		6764443	0					
ANR	6764909	Identifier	isBgr		6764443	1					
ANR	6764910	ExpressionStatement	"switch_r_b ( dp + dix , con -> bpi )"	2558:16:86864:86892	6764443	1	True				
ANR	6764911	CallExpression	"switch_r_b ( dp + dix , con -> bpi )"		6764443	0					
ANR	6764912	Callee	switch_r_b		6764443	0					
ANR	6764913	Identifier	switch_r_b		6764443	0					
ANR	6764914	ArgumentList	dp + dix		6764443	1					
ANR	6764915	Argument	dp + dix		6764443	0					
ANR	6764916	AdditiveExpression	dp + dix		6764443	0		+			
ANR	6764917	Identifier	dp		6764443	0					
ANR	6764918	Identifier	dix		6764443	1					
ANR	6764919	Argument	con -> bpi		6764443	1					
ANR	6764920	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6764921	Identifier	con		6764443	0					
ANR	6764922	Identifier	bpi		6764443	1					
ANR	6764923	ElseStatement	else		6764443	0					
ANR	6764924	IfStatement	if ( con -> bpi == 10 || con -> bpi == 16 )		6764443	0					
ANR	6764925	Condition	con -> bpi == 10 || con -> bpi == 16	2561:12:86938:86969	6764443	0	True				
ANR	6764926	OrExpression	con -> bpi == 10 || con -> bpi == 16		6764443	0		||			
ANR	6764927	EqualityExpression	con -> bpi == 10		6764443	0		==			
ANR	6764928	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6764929	Identifier	con		6764443	0					
ANR	6764930	Identifier	bpi		6764443	1					
ANR	6764931	PrimaryExpression	10		6764443	1					
ANR	6764932	EqualityExpression	con -> bpi == 16		6764443	1		==			
ANR	6764933	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6764934	Identifier	con		6764443	0					
ANR	6764935	Identifier	bpi		6764443	1					
ANR	6764936	PrimaryExpression	16		6764443	1					
ANR	6764937	CompoundStatement		71:8:2448:2501	6764443	1					
ANR	6764938	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) con -> buf + 16 * con -> ncomp * mx ;	2562:8:86981:87034	6764443	0	True				
ANR	6764939	IdentifierDecl	* dp = ( uint16_t * ) con -> buf + 16 * con -> ncomp * mx		6764443	0					
ANR	6764940	IdentifierDeclType	uint16_t *		6764443	0					
ANR	6764941	Identifier	dp		6764443	1					
ANR	6764942	AssignmentExpression	* dp = ( uint16_t * ) con -> buf + 16 * con -> ncomp * mx		6764443	2		=			
ANR	6764943	Identifier	dp		6764443	0					
ANR	6764944	AdditiveExpression	( uint16_t * ) con -> buf + 16 * con -> ncomp * mx		6764443	1		+			
ANR	6764945	CastExpression	( uint16_t * ) con -> buf		6764443	0					
ANR	6764946	CastTarget	uint16_t *		6764443	0					
ANR	6764947	PtrMemberAccess	con -> buf		6764443	1					
ANR	6764948	Identifier	con		6764443	0					
ANR	6764949	Identifier	buf		6764443	1					
ANR	6764950	MultiplicativeExpression	16 * con -> ncomp * mx		6764443	1		*			
ANR	6764951	PrimaryExpression	16		6764443	0					
ANR	6764952	MultiplicativeExpression	con -> ncomp * mx		6764443	1		*			
ANR	6764953	PtrMemberAccess	con -> ncomp		6764443	0					
ANR	6764954	Identifier	con		6764443	0					
ANR	6764955	Identifier	ncomp		6764443	1					
ANR	6764956	Identifier	mx		6764443	1					
ANR	6764957	IfStatement	if ( con -> padBytes != 0 )		6764443	1					
ANR	6764958	Condition	con -> padBytes != 0	2563:11:87047:87064	6764443	0	True				
ANR	6764959	EqualityExpression	con -> padBytes != 0		6764443	0		!=			
ANR	6764960	PtrMemberAccess	con -> padBytes		6764443	0					
ANR	6764961	Identifier	con		6764443	0					
ANR	6764962	Identifier	padBytes		6764443	1					
ANR	6764963	PrimaryExpression	0		6764443	1					
ANR	6764964	CompoundStatement		73:8:2542:2542	6764443	1					
ANR	6764965	ExpressionStatement	dp = dp + 16 * mx	2565:12:87089:87104	6764443	0	True				
ANR	6764966	AssignmentExpression	dp = dp + 16 * mx		6764443	0		=			
ANR	6764967	Identifier	dp		6764443	0					
ANR	6764968	AdditiveExpression	dp + 16 * mx		6764443	1		+			
ANR	6764969	Identifier	dp		6764443	0					
ANR	6764970	MultiplicativeExpression	16 * mx		6764443	1		*			
ANR	6764971	PrimaryExpression	16		6764443	0					
ANR	6764972	Identifier	mx		6764443	1					
ANR	6764973	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		6764443	2					
ANR	6764974	ForInit	idx = 0 ;	2568:13:87163:87170	6764443	0	True				
ANR	6764975	AssignmentExpression	idx = 0		6764443	0		=			
ANR	6764976	Identifier	idx		6764443	0					
ANR	6764977	PrimaryExpression	0		6764443	1					
ANR	6764978	Condition	idx < 256	2568:22:87172:87180	6764443	1	True				
ANR	6764979	RelationalExpression	idx < 256		6764443	0		<			
ANR	6764980	Identifier	idx		6764443	0					
ANR	6764981	PrimaryExpression	256		6764443	1					
ANR	6764982	AssignmentExpression	idx += 1	2568:33:87183:87190	6764443	2	True	+=			
ANR	6764983	Identifier	idx		6764443	0					
ANR	6764984	PrimaryExpression	1		6764443	1					
ANR	6764985	CompoundStatement		82:12:2831:2837	6764443	3					
ANR	6764986	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp ;	2569:12:87207:87250	6764443	0	True				
ANR	6764987	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		6764443	0					
ANR	6764988	IdentifierDeclType	int		6764443	0					
ANR	6764989	Identifier	dix		6764443	1					
ANR	6764990	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		6764443	2		=			
ANR	6764991	Identifier	dix		6764443	0					
ANR	6764992	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		6764443	1		+			
ANR	6764993	MultiplicativeExpression	( idx / 16 ) * dy		6764443	0		*			
ANR	6764994	MultiplicativeExpression	idx / 16		6764443	0		/			
ANR	6764995	Identifier	idx		6764443	0					
ANR	6764996	PrimaryExpression	16		6764443	1					
ANR	6764997	Identifier	dy		6764443	1					
ANR	6764998	MultiplicativeExpression	( idx % 16 ) * con -> ncomp		6764443	1		*			
ANR	6764999	MultiplicativeExpression	idx % 16		6764443	0		%			
ANR	6765000	Identifier	idx		6764443	0					
ANR	6765001	PrimaryExpression	16		6764443	1					
ANR	6765002	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765003	Identifier	con		6764443	0					
ANR	6765004	Identifier	ncomp		6764443	1					
ANR	6765005	IfStatement	if ( con -> padBytes )		6764443	1					
ANR	6765006	Condition	con -> padBytes	2570:15:87267:87279	6764443	0	True				
ANR	6765007	PtrMemberAccess	con -> padBytes		6764443	0					
ANR	6765008	Identifier	con		6764443	0					
ANR	6765009	Identifier	padBytes		6764443	1					
ANR	6765010	ExpressionStatement	dix += ( idx % 16 )	2571:16:87298:87312	6764443	1	True				
ANR	6765011	AssignmentExpression	dix += ( idx % 16 )		6764443	0		+=			
ANR	6765012	Identifier	dix		6764443	0					
ANR	6765013	MultiplicativeExpression	idx % 16		6764443	1		%			
ANR	6765014	Identifier	idx		6764443	0					
ANR	6765015	PrimaryExpression	16		6764443	1					
ANR	6765016	IdentifierDeclStatement	int six = idx * con -> ncomp ;	2572:12:87326:87350	6764443	2	True				
ANR	6765017	IdentifierDecl	six = idx * con -> ncomp		6764443	0					
ANR	6765018	IdentifierDeclType	int		6764443	0					
ANR	6765019	Identifier	six		6764443	1					
ANR	6765020	AssignmentExpression	six = idx * con -> ncomp		6764443	2		=			
ANR	6765021	Identifier	six		6764443	0					
ANR	6765022	MultiplicativeExpression	idx * con -> ncomp		6764443	1		*			
ANR	6765023	Identifier	idx		6764443	0					
ANR	6765024	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765025	Identifier	con		6764443	0					
ANR	6765026	Identifier	ncomp		6764443	1					
ANR	6765027	IdentifierDeclStatement	int pl ;	2573:12:87364:87370	6764443	3	True				
ANR	6765028	IdentifierDecl	pl		6764443	0					
ANR	6765029	IdentifierDeclType	int		6764443	0					
ANR	6765030	Identifier	pl		6764443	1					
ANR	6765031	ForStatement	for ( pl = 0 ; pl < con -> ncomp ; pl += 1 )		6764443	4					
ANR	6765032	ForInit	pl = 0 ;	2574:17:87401:87408	6764443	0	True				
ANR	6765033	AssignmentExpression	pl = 0		6764443	0		=			
ANR	6765034	Identifier	pl		6764443	0					
ANR	6765035	PrimaryExpression	0		6764443	1					
ANR	6765036	Condition	pl < con -> ncomp	2574:26:87410:87424	6764443	1	True				
ANR	6765037	RelationalExpression	pl < con -> ncomp		6764443	0		<			
ANR	6765038	Identifier	pl		6764443	0					
ANR	6765039	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765040	Identifier	con		6764443	0					
ANR	6765041	Identifier	ncomp		6764443	1					
ANR	6765042	AssignmentExpression	pl += 1	2574:44:87428:87434	6764443	2	True	+=			
ANR	6765043	Identifier	pl		6764443	0					
ANR	6765044	PrimaryExpression	1		6764443	1					
ANR	6765045	ExpressionStatement	dp [ dix + pl ] = data [ six + pl ]	2575:16:87453:87482	6764443	3	True				
ANR	6765046	AssignmentExpression	dp [ dix + pl ] = data [ six + pl ]		6764443	0		=			
ANR	6765047	ArrayIndexing	dp [ dix + pl ]		6764443	0					
ANR	6765048	Identifier	dp		6764443	0					
ANR	6765049	AdditiveExpression	dix + pl		6764443	1		+			
ANR	6765050	Identifier	dix		6764443	0					
ANR	6765051	Identifier	pl		6764443	1					
ANR	6765052	ArrayIndexing	data [ six + pl ]		6764443	1					
ANR	6765053	Identifier	data		6764443	0					
ANR	6765054	AdditiveExpression	six + pl		6764443	1		+			
ANR	6765055	Identifier	six		6764443	0					
ANR	6765056	Identifier	pl		6764443	1					
ANR	6765057	IfStatement	if ( con -> padBytes != 0 )		6764443	5					
ANR	6765058	Condition	con -> padBytes != 0	2576:15:87499:87516	6764443	0	True				
ANR	6765059	EqualityExpression	con -> padBytes != 0		6764443	0		!=			
ANR	6765060	PtrMemberAccess	con -> padBytes		6764443	0					
ANR	6765061	Identifier	con		6764443	0					
ANR	6765062	Identifier	padBytes		6764443	1					
ANR	6765063	PrimaryExpression	0		6764443	1					
ANR	6765064	ExpressionStatement	dp [ dix + pl ] = 0	2577:16:87535:87551	6764443	1	True				
ANR	6765065	AssignmentExpression	dp [ dix + pl ] = 0		6764443	0		=			
ANR	6765066	ArrayIndexing	dp [ dix + pl ]		6764443	0					
ANR	6765067	Identifier	dp		6764443	0					
ANR	6765068	AdditiveExpression	dix + pl		6764443	1		+			
ANR	6765069	Identifier	dix		6764443	0					
ANR	6765070	Identifier	pl		6764443	1					
ANR	6765071	PrimaryExpression	0		6764443	1					
ANR	6765072	IfStatement	if ( con -> isBgr )		6764443	6					
ANR	6765073	Condition	con -> isBgr	2578:15:87608:87617	6764443	0	True				
ANR	6765074	PtrMemberAccess	con -> isBgr		6764443	0					
ANR	6765075	Identifier	con		6764443	0					
ANR	6765076	Identifier	isBgr		6764443	1					
ANR	6765077	ExpressionStatement	"switch_r_b ( dp + dix , con -> bpi )"	2579:16:87648:87678	6764443	1	True				
ANR	6765078	CallExpression	"switch_r_b ( dp + dix , con -> bpi )"		6764443	0					
ANR	6765079	Callee	switch_r_b		6764443	0					
ANR	6765080	Identifier	switch_r_b		6764443	0					
ANR	6765081	ArgumentList	dp + dix		6764443	1					
ANR	6765082	Argument	dp + dix		6764443	0					
ANR	6765083	AdditiveExpression	dp + dix		6764443	0		+			
ANR	6765084	Identifier	dp		6764443	0					
ANR	6765085	Identifier	dix		6764443	1					
ANR	6765086	Argument	con -> bpi		6764443	1					
ANR	6765087	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6765088	Identifier	con		6764443	0					
ANR	6765089	Identifier	bpi		6764443	1					
ANR	6765090	ElseStatement	else		6764443	0					
ANR	6765091	IfStatement	if ( con -> bpi == 32 )		6764443	0					
ANR	6765092	Condition	con -> bpi == 32	2582:12:87720:87732	6764443	0	True				
ANR	6765093	EqualityExpression	con -> bpi == 32		6764443	0		==			
ANR	6765094	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6765095	Identifier	con		6764443	0					
ANR	6765096	Identifier	bpi		6764443	1					
ANR	6765097	PrimaryExpression	32		6764443	1					
ANR	6765098	CompoundStatement		92:8:3212:3265	6764443	1					
ANR	6765099	IdentifierDeclStatement	uint32_t * dp = ( uint32_t * ) con -> buf + 16 * con -> ncomp * mx ;	2583:8:87745:87798	6764443	0	True				
ANR	6765100	IdentifierDecl	* dp = ( uint32_t * ) con -> buf + 16 * con -> ncomp * mx		6764443	0					
ANR	6765101	IdentifierDeclType	uint32_t *		6764443	0					
ANR	6765102	Identifier	dp		6764443	1					
ANR	6765103	AssignmentExpression	* dp = ( uint32_t * ) con -> buf + 16 * con -> ncomp * mx		6764443	2		=			
ANR	6765104	Identifier	dp		6764443	0					
ANR	6765105	AdditiveExpression	( uint32_t * ) con -> buf + 16 * con -> ncomp * mx		6764443	1		+			
ANR	6765106	CastExpression	( uint32_t * ) con -> buf		6764443	0					
ANR	6765107	CastTarget	uint32_t *		6764443	0					
ANR	6765108	PtrMemberAccess	con -> buf		6764443	1					
ANR	6765109	Identifier	con		6764443	0					
ANR	6765110	Identifier	buf		6764443	1					
ANR	6765111	MultiplicativeExpression	16 * con -> ncomp * mx		6764443	1		*			
ANR	6765112	PrimaryExpression	16		6764443	0					
ANR	6765113	MultiplicativeExpression	con -> ncomp * mx		6764443	1		*			
ANR	6765114	PtrMemberAccess	con -> ncomp		6764443	0					
ANR	6765115	Identifier	con		6764443	0					
ANR	6765116	Identifier	ncomp		6764443	1					
ANR	6765117	Identifier	mx		6764443	1					
ANR	6765118	IfStatement	if ( con -> padBytes != 0 )		6764443	1					
ANR	6765119	Condition	con -> padBytes != 0	2584:11:87811:87828	6764443	0	True				
ANR	6765120	EqualityExpression	con -> padBytes != 0		6764443	0		!=			
ANR	6765121	PtrMemberAccess	con -> padBytes		6764443	0					
ANR	6765122	Identifier	con		6764443	0					
ANR	6765123	Identifier	padBytes		6764443	1					
ANR	6765124	PrimaryExpression	0		6764443	1					
ANR	6765125	CompoundStatement		94:8:3306:3306	6764443	1					
ANR	6765126	ExpressionStatement	dp = dp + 16 * mx	2586:12:87853:87868	6764443	0	True				
ANR	6765127	AssignmentExpression	dp = dp + 16 * mx		6764443	0		=			
ANR	6765128	Identifier	dp		6764443	0					
ANR	6765129	AdditiveExpression	dp + 16 * mx		6764443	1		+			
ANR	6765130	Identifier	dp		6764443	0					
ANR	6765131	MultiplicativeExpression	16 * mx		6764443	1		*			
ANR	6765132	PrimaryExpression	16		6764443	0					
ANR	6765133	Identifier	mx		6764443	1					
ANR	6765134	ForStatement	for ( idx = 0 ; idx < 256 ; idx += 1 )		6764443	2					
ANR	6765135	ForInit	idx = 0 ;	2588:13:87926:87933	6764443	0	True				
ANR	6765136	AssignmentExpression	idx = 0		6764443	0		=			
ANR	6765137	Identifier	idx		6764443	0					
ANR	6765138	PrimaryExpression	0		6764443	1					
ANR	6765139	Condition	idx < 256	2588:22:87935:87943	6764443	1	True				
ANR	6765140	RelationalExpression	idx < 256		6764443	0		<			
ANR	6765141	Identifier	idx		6764443	0					
ANR	6765142	PrimaryExpression	256		6764443	1					
ANR	6765143	AssignmentExpression	idx += 1	2588:33:87946:87953	6764443	2	True	+=			
ANR	6765144	Identifier	idx		6764443	0					
ANR	6765145	PrimaryExpression	1		6764443	1					
ANR	6765146	CompoundStatement		102:12:3594:3600	6764443	3					
ANR	6765147	IdentifierDeclStatement	int dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp ;	2589:12:87970:88013	6764443	0	True				
ANR	6765148	IdentifierDecl	dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		6764443	0					
ANR	6765149	IdentifierDeclType	int		6764443	0					
ANR	6765150	Identifier	dix		6764443	1					
ANR	6765151	AssignmentExpression	dix = ( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		6764443	2		=			
ANR	6765152	Identifier	dix		6764443	0					
ANR	6765153	AdditiveExpression	( idx / 16 ) * dy + ( idx % 16 ) * con -> ncomp		6764443	1		+			
ANR	6765154	MultiplicativeExpression	( idx / 16 ) * dy		6764443	0		*			
ANR	6765155	MultiplicativeExpression	idx / 16		6764443	0		/			
ANR	6765156	Identifier	idx		6764443	0					
ANR	6765157	PrimaryExpression	16		6764443	1					
ANR	6765158	Identifier	dy		6764443	1					
ANR	6765159	MultiplicativeExpression	( idx % 16 ) * con -> ncomp		6764443	1		*			
ANR	6765160	MultiplicativeExpression	idx % 16		6764443	0		%			
ANR	6765161	Identifier	idx		6764443	0					
ANR	6765162	PrimaryExpression	16		6764443	1					
ANR	6765163	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765164	Identifier	con		6764443	0					
ANR	6765165	Identifier	ncomp		6764443	1					
ANR	6765166	IfStatement	if ( con -> padBytes )		6764443	1					
ANR	6765167	Condition	con -> padBytes	2590:15:88030:88042	6764443	0	True				
ANR	6765168	PtrMemberAccess	con -> padBytes		6764443	0					
ANR	6765169	Identifier	con		6764443	0					
ANR	6765170	Identifier	padBytes		6764443	1					
ANR	6765171	ExpressionStatement	dix += ( idx % 16 )	2591:16:88061:88075	6764443	1	True				
ANR	6765172	AssignmentExpression	dix += ( idx % 16 )		6764443	0		+=			
ANR	6765173	Identifier	dix		6764443	0					
ANR	6765174	MultiplicativeExpression	idx % 16		6764443	1		%			
ANR	6765175	Identifier	idx		6764443	0					
ANR	6765176	PrimaryExpression	16		6764443	1					
ANR	6765177	IdentifierDeclStatement	int six = idx * con -> ncomp ;	2592:12:88089:88113	6764443	2	True				
ANR	6765178	IdentifierDecl	six = idx * con -> ncomp		6764443	0					
ANR	6765179	IdentifierDeclType	int		6764443	0					
ANR	6765180	Identifier	six		6764443	1					
ANR	6765181	AssignmentExpression	six = idx * con -> ncomp		6764443	2		=			
ANR	6765182	Identifier	six		6764443	0					
ANR	6765183	MultiplicativeExpression	idx * con -> ncomp		6764443	1		*			
ANR	6765184	Identifier	idx		6764443	0					
ANR	6765185	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765186	Identifier	con		6764443	0					
ANR	6765187	Identifier	ncomp		6764443	1					
ANR	6765188	IdentifierDeclStatement	int pl ;	2593:12:88127:88133	6764443	3	True				
ANR	6765189	IdentifierDecl	pl		6764443	0					
ANR	6765190	IdentifierDeclType	int		6764443	0					
ANR	6765191	Identifier	pl		6764443	1					
ANR	6765192	ForStatement	for ( pl = 0 ; pl < con -> ncomp ; pl += 1 )		6764443	4					
ANR	6765193	ForInit	pl = 0 ;	2594:17:88152:88159	6764443	0	True				
ANR	6765194	AssignmentExpression	pl = 0		6764443	0		=			
ANR	6765195	Identifier	pl		6764443	0					
ANR	6765196	PrimaryExpression	0		6764443	1					
ANR	6765197	Condition	pl < con -> ncomp	2594:26:88161:88175	6764443	1	True				
ANR	6765198	RelationalExpression	pl < con -> ncomp		6764443	0		<			
ANR	6765199	Identifier	pl		6764443	0					
ANR	6765200	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765201	Identifier	con		6764443	0					
ANR	6765202	Identifier	ncomp		6764443	1					
ANR	6765203	AssignmentExpression	pl += 1	2594:44:88179:88185	6764443	2	True	+=			
ANR	6765204	Identifier	pl		6764443	0					
ANR	6765205	PrimaryExpression	1		6764443	1					
ANR	6765206	ExpressionStatement	dp [ dix + pl ] = data [ six + pl ]	2595:16:88204:88233	6764443	3	True				
ANR	6765207	AssignmentExpression	dp [ dix + pl ] = data [ six + pl ]		6764443	0		=			
ANR	6765208	ArrayIndexing	dp [ dix + pl ]		6764443	0					
ANR	6765209	Identifier	dp		6764443	0					
ANR	6765210	AdditiveExpression	dix + pl		6764443	1		+			
ANR	6765211	Identifier	dix		6764443	0					
ANR	6765212	Identifier	pl		6764443	1					
ANR	6765213	ArrayIndexing	data [ six + pl ]		6764443	1					
ANR	6765214	Identifier	data		6764443	0					
ANR	6765215	AdditiveExpression	six + pl		6764443	1		+			
ANR	6765216	Identifier	six		6764443	0					
ANR	6765217	Identifier	pl		6764443	1					
ANR	6765218	IfStatement	if ( con -> padBytes != 0 )		6764443	5					
ANR	6765219	Condition	con -> padBytes != 0	2596:15:88250:88267	6764443	0	True				
ANR	6765220	EqualityExpression	con -> padBytes != 0		6764443	0		!=			
ANR	6765221	PtrMemberAccess	con -> padBytes		6764443	0					
ANR	6765222	Identifier	con		6764443	0					
ANR	6765223	Identifier	padBytes		6764443	1					
ANR	6765224	PrimaryExpression	0		6764443	1					
ANR	6765225	ExpressionStatement	dp [ dix + pl ] = 0	2597:16:88286:88302	6764443	1	True				
ANR	6765226	AssignmentExpression	dp [ dix + pl ] = 0		6764443	0		=			
ANR	6765227	ArrayIndexing	dp [ dix + pl ]		6764443	0					
ANR	6765228	Identifier	dp		6764443	0					
ANR	6765229	AdditiveExpression	dix + pl		6764443	1		+			
ANR	6765230	Identifier	dix		6764443	0					
ANR	6765231	Identifier	pl		6764443	1					
ANR	6765232	PrimaryExpression	0		6764443	1					
ANR	6765233	IfStatement	if ( con -> isBgr )		6764443	6					
ANR	6765234	Condition	con -> isBgr	2598:15:88359:88368	6764443	0	True				
ANR	6765235	PtrMemberAccess	con -> isBgr		6764443	0					
ANR	6765236	Identifier	con		6764443	0					
ANR	6765237	Identifier	isBgr		6764443	1					
ANR	6765238	ExpressionStatement	"switch_r_b ( dp + dix , con -> bpi )"	2599:16:88399:88430	6764443	1	True				
ANR	6765239	CallExpression	"switch_r_b ( dp + dix , con -> bpi )"		6764443	0					
ANR	6765240	Callee	switch_r_b		6764443	0					
ANR	6765241	Identifier	switch_r_b		6764443	0					
ANR	6765242	ArgumentList	dp + dix		6764443	1					
ANR	6765243	Argument	dp + dix		6764443	0					
ANR	6765244	AdditiveExpression	dp + dix		6764443	0		+			
ANR	6765245	Identifier	dp		6764443	0					
ANR	6765246	Identifier	dix		6764443	1					
ANR	6765247	Argument	con -> bpi		6764443	1					
ANR	6765248	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6765249	Identifier	con		6764443	0					
ANR	6765250	Identifier	bpi		6764443	1					
ANR	6765251	ElseStatement	else		6764443	0					
ANR	6765252	CompoundStatement		112:4:3928:3928	6764443	0					
ANR	6765253	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2604:8:88471:88504	6764443	0	True				
ANR	6765254	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		6764443	0					
ANR	6765255	Callee	assert		6764443	0					
ANR	6765256	Identifier	assert		6764443	0					
ANR	6765257	ArgumentList	"! ""Unsupported bitdepth\\n"""		6764443	1					
ANR	6765258	Argument	"! ""Unsupported bitdepth\\n"""		6764443	0					
ANR	6765259	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		6764443	0					
ANR	6765260	UnaryOperator	!		6764443	0					
ANR	6765261	PrimaryExpression	"""Unsupported bitdepth\\n"""		6764443	1					
ANR	6765262	IfStatement	if ( mx + 1 == strip_blocks )		6764443	8					
ANR	6765263	Condition	mx + 1 == strip_blocks	2607:8:88521:88540	6764443	0	True				
ANR	6765264	EqualityExpression	mx + 1 == strip_blocks		6764443	0		==			
ANR	6765265	AdditiveExpression	mx + 1		6764443	0		+			
ANR	6765266	Identifier	mx		6764443	0					
ANR	6765267	PrimaryExpression	1		6764443	1					
ANR	6765268	Identifier	strip_blocks		6764443	1					
ANR	6765269	CompoundStatement		119:8:4170:4258	6764443	1					
ANR	6765270	IdentifierDeclStatement	int first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining ;	2608:8:88553:88624	6764443	0	True				
ANR	6765271	IdentifierDecl	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		6764443	0					
ANR	6765272	IdentifierDeclType	int		6764443	0					
ANR	6765273	Identifier	first		6764443	1					
ANR	6765274	AssignmentExpression	first = ( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		6764443	2		=			
ANR	6765275	Identifier	first		6764443	0					
ANR	6765276	ConditionalExpression	( con -> top_pad_remaining > 16 ) ? 16 : con -> top_pad_remaining		6764443	1					
ANR	6765277	Condition	con -> top_pad_remaining > 16		6764443	0					
ANR	6765278	RelationalExpression	con -> top_pad_remaining > 16		6764443	0		>			
ANR	6765279	PtrMemberAccess	con -> top_pad_remaining		6764443	0					
ANR	6765280	Identifier	con		6764443	0					
ANR	6765281	Identifier	top_pad_remaining		6764443	1					
ANR	6765282	PrimaryExpression	16		6764443	1					
ANR	6765283	PrimaryExpression	16		6764443	1					
ANR	6765284	PtrMemberAccess	con -> top_pad_remaining		6764443	2					
ANR	6765285	Identifier	con		6764443	0					
ANR	6765286	Identifier	top_pad_remaining		6764443	1					
ANR	6765287	ExpressionStatement	con -> top_pad_remaining -= first	2609:8:88634:88665	6764443	1	True				
ANR	6765288	AssignmentExpression	con -> top_pad_remaining -= first		6764443	0		-=			
ANR	6765289	PtrMemberAccess	con -> top_pad_remaining		6764443	0					
ANR	6765290	Identifier	con		6764443	0					
ANR	6765291	Identifier	top_pad_remaining		6764443	1					
ANR	6765292	Identifier	first		6764443	1					
ANR	6765293	IdentifierDeclStatement	int trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16 ;	2610:8:88703:88791	6764443	2	True				
ANR	6765294	IdentifierDecl	trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		6764443	0					
ANR	6765295	IdentifierDeclType	int		6764443	0					
ANR	6765296	Identifier	trans		6764443	1					
ANR	6765297	AssignmentExpression	trans = ( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		6764443	2		=			
ANR	6765298	Identifier	trans		6764443	0					
ANR	6765299	ConditionalExpression	( my * 16 + 16 > ( con -> hei + con -> top_pad ) ) ? ( con -> hei + con -> top_pad ) % 16 : 16		6764443	1					
ANR	6765300	Condition	my * 16 + 16 > ( con -> hei + con -> top_pad )		6764443	0					
ANR	6765301	RelationalExpression	my * 16 + 16 > ( con -> hei + con -> top_pad )		6764443	0		>			
ANR	6765302	AdditiveExpression	my * 16 + 16		6764443	0		+			
ANR	6765303	MultiplicativeExpression	my * 16		6764443	0		*			
ANR	6765304	Identifier	my		6764443	0					
ANR	6765305	PrimaryExpression	16		6764443	1					
ANR	6765306	PrimaryExpression	16		6764443	1					
ANR	6765307	AdditiveExpression	con -> hei + con -> top_pad		6764443	1		+			
ANR	6765308	PtrMemberAccess	con -> hei		6764443	0					
ANR	6765309	Identifier	con		6764443	0					
ANR	6765310	Identifier	hei		6764443	1					
ANR	6765311	PtrMemberAccess	con -> top_pad		6764443	1					
ANR	6765312	Identifier	con		6764443	0					
ANR	6765313	Identifier	top_pad		6764443	1					
ANR	6765314	MultiplicativeExpression	( con -> hei + con -> top_pad ) % 16		6764443	1		%			
ANR	6765315	AdditiveExpression	con -> hei + con -> top_pad		6764443	0		+			
ANR	6765316	PtrMemberAccess	con -> hei		6764443	0					
ANR	6765317	Identifier	con		6764443	0					
ANR	6765318	Identifier	hei		6764443	1					
ANR	6765319	PtrMemberAccess	con -> top_pad		6764443	1					
ANR	6765320	Identifier	con		6764443	0					
ANR	6765321	Identifier	top_pad		6764443	1					
ANR	6765322	PrimaryExpression	16		6764443	1					
ANR	6765323	PrimaryExpression	16		6764443	2					
ANR	6765324	IfStatement	if ( con -> bpi == 1 )		6764443	3					
ANR	6765325	Condition	con -> bpi == 1	2611:11:88804:88816	6764443	0	True				
ANR	6765326	EqualityExpression	con -> bpi == 1		6764443	0		==			
ANR	6765327	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6765328	Identifier	con		6764443	0					
ANR	6765329	Identifier	bpi		6764443	1					
ANR	6765330	PrimaryExpression	1		6764443	1					
ANR	6765331	CompoundStatement		121:8:4294:4294	6764443	1					
ANR	6765332	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6764443	0					
ANR	6765333	ForInit	idx = first ;	2615:17:88974:88985	6764443	0	True				
ANR	6765334	AssignmentExpression	idx = first		6764443	0		=			
ANR	6765335	Identifier	idx		6764443	0					
ANR	6765336	Identifier	first		6764443	1					
ANR	6765337	Condition	idx < trans	2615:30:88987:88997	6764443	1	True				
ANR	6765338	RelationalExpression	idx < trans		6764443	0		<			
ANR	6765339	Identifier	idx		6764443	0					
ANR	6765340	Identifier	trans		6764443	1					
ANR	6765341	AssignmentExpression	idx += 1	2615:43:89000:89007	6764443	2	True	+=			
ANR	6765342	Identifier	idx		6764443	0					
ANR	6765343	PrimaryExpression	1		6764443	1					
ANR	6765344	CompoundStatement		125:16:4495:4536	6764443	3					
ANR	6765345	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) con -> buf + idx * dy ;	2616:16:89028:89069	6764443	0	True				
ANR	6765346	IdentifierDecl	* dp = ( uint8_t * ) con -> buf + idx * dy		6764443	0					
ANR	6765347	IdentifierDeclType	uint8_t *		6764443	0					
ANR	6765348	Identifier	dp		6764443	1					
ANR	6765349	AssignmentExpression	* dp = ( uint8_t * ) con -> buf + idx * dy		6764443	2		=			
ANR	6765350	Identifier	dp		6764443	0					
ANR	6765351	AdditiveExpression	( uint8_t * ) con -> buf + idx * dy		6764443	1		+			
ANR	6765352	CastExpression	( uint8_t * ) con -> buf		6764443	0					
ANR	6765353	CastTarget	uint8_t *		6764443	0					
ANR	6765354	PtrMemberAccess	con -> buf		6764443	1					
ANR	6765355	Identifier	con		6764443	0					
ANR	6765356	Identifier	buf		6764443	1					
ANR	6765357	MultiplicativeExpression	idx * dy		6764443	1		*			
ANR	6765358	Identifier	idx		6764443	0					
ANR	6765359	Identifier	dy		6764443	1					
ANR	6765360	ForStatement	for ( jdx = con -> left_pad ; jdx < ( con -> wid + con -> left_pad ) ; jdx = jdx + 8 )		6764443	1					
ANR	6765361	ForInit	jdx = con -> left_pad ;	2617:20:89091:89110	6764443	0	True				
ANR	6765362	AssignmentExpression	jdx = con -> left_pad		6764443	0		=			
ANR	6765363	Identifier	jdx		6764443	0					
ANR	6765364	PtrMemberAccess	con -> left_pad		6764443	1					
ANR	6765365	Identifier	con		6764443	0					
ANR	6765366	Identifier	left_pad		6764443	1					
ANR	6765367	Condition	jdx < ( con -> wid + con -> left_pad )	2617:41:89112:89143	6764443	1	True				
ANR	6765368	RelationalExpression	jdx < ( con -> wid + con -> left_pad )		6764443	0		<			
ANR	6765369	Identifier	jdx		6764443	0					
ANR	6765370	AdditiveExpression	con -> wid + con -> left_pad		6764443	1		+			
ANR	6765371	PtrMemberAccess	con -> wid		6764443	0					
ANR	6765372	Identifier	con		6764443	0					
ANR	6765373	Identifier	wid		6764443	1					
ANR	6765374	PtrMemberAccess	con -> left_pad		6764443	1					
ANR	6765375	Identifier	con		6764443	0					
ANR	6765376	Identifier	left_pad		6764443	1					
ANR	6765377	AssignmentExpression	jdx = jdx + 8	2617:75:89146:89158	6764443	2	True	=			
ANR	6765378	Identifier	jdx		6764443	0					
ANR	6765379	AdditiveExpression	jdx + 8		6764443	1		+			
ANR	6765380	Identifier	jdx		6764443	0					
ANR	6765381	PrimaryExpression	8		6764443	1					
ANR	6765382	CompoundStatement		130:20:4744:4790	6764443	3					
ANR	6765383	IdentifierDeclStatement	uint8_t buff [ 8 ] ;	2619:20:89199:89214	6764443	0	True				
ANR	6765384	IdentifierDecl	buff [ 8 ]		6764443	0					
ANR	6765385	IdentifierDeclType	uint8_t [ 8 ]		6764443	0					
ANR	6765386	Identifier	buff		6764443	1					
ANR	6765387	PrimaryExpression	8		6764443	2					
ANR	6765388	IdentifierDeclStatement	uint8_t iResult = 0 ;	2620:20:89236:89255	6764443	1	True				
ANR	6765389	IdentifierDecl	iResult = 0		6764443	0					
ANR	6765390	IdentifierDeclType	uint8_t		6764443	0					
ANR	6765391	Identifier	iResult		6764443	1					
ANR	6765392	AssignmentExpression	iResult = 0		6764443	2		=			
ANR	6765393	Identifier	iResult		6764443	0					
ANR	6765394	PrimaryExpression	0		6764443	1					
ANR	6765395	IdentifierDeclStatement	int end = jdx + 8 > con -> wid ? con -> wid : jdx + 8 ;	2621:20:89277:89323	6764443	2	True				
ANR	6765396	IdentifierDecl	end = jdx + 8 > con -> wid ? con -> wid : jdx + 8		6764443	0					
ANR	6765397	IdentifierDeclType	int		6764443	0					
ANR	6765398	Identifier	end		6764443	1					
ANR	6765399	AssignmentExpression	end = jdx + 8 > con -> wid ? con -> wid : jdx + 8		6764443	2		=			
ANR	6765400	Identifier	end		6764443	0					
ANR	6765401	ConditionalExpression	jdx + 8 > con -> wid ? con -> wid : jdx + 8		6764443	1					
ANR	6765402	Condition	jdx + 8 > con -> wid		6764443	0					
ANR	6765403	RelationalExpression	jdx + 8 > con -> wid		6764443	0		>			
ANR	6765404	AdditiveExpression	jdx + 8		6764443	0		+			
ANR	6765405	Identifier	jdx		6764443	0					
ANR	6765406	PrimaryExpression	8		6764443	1					
ANR	6765407	PtrMemberAccess	con -> wid		6764443	1					
ANR	6765408	Identifier	con		6764443	0					
ANR	6765409	Identifier	wid		6764443	1					
ANR	6765410	PtrMemberAccess	con -> wid		6764443	1					
ANR	6765411	Identifier	con		6764443	0					
ANR	6765412	Identifier	wid		6764443	1					
ANR	6765413	AdditiveExpression	jdx + 8		6764443	2		+			
ANR	6765414	Identifier	jdx		6764443	0					
ANR	6765415	PrimaryExpression	8		6764443	1					
ANR	6765416	ExpressionStatement	"memset ( buff , 0 , 8 * sizeof ( uint8_t ) )"	2622:20:89345:89381	6764443	3	True				
ANR	6765417	CallExpression	"memset ( buff , 0 , 8 * sizeof ( uint8_t ) )"		6764443	0					
ANR	6765418	Callee	memset		6764443	0					
ANR	6765419	Identifier	memset		6764443	0					
ANR	6765420	ArgumentList	buff		6764443	1					
ANR	6765421	Argument	buff		6764443	0					
ANR	6765422	Identifier	buff		6764443	0					
ANR	6765423	Argument	0		6764443	1					
ANR	6765424	PrimaryExpression	0		6764443	0					
ANR	6765425	Argument	8 * sizeof ( uint8_t )		6764443	2					
ANR	6765426	MultiplicativeExpression	8 * sizeof ( uint8_t )		6764443	0		*			
ANR	6765427	PrimaryExpression	8		6764443	0					
ANR	6765428	SizeofExpression	sizeof ( uint8_t )		6764443	1					
ANR	6765429	Sizeof	sizeof		6764443	0					
ANR	6765430	SizeofOperand	uint8_t		6764443	1					
ANR	6765431	ExpressionStatement	"memcpy ( buff , dp + jdx , ( end - jdx ) * sizeof ( uint8_t ) )"	2623:20:89403:89452	6764443	4	True				
ANR	6765432	CallExpression	"memcpy ( buff , dp + jdx , ( end - jdx ) * sizeof ( uint8_t ) )"		6764443	0					
ANR	6765433	Callee	memcpy		6764443	0					
ANR	6765434	Identifier	memcpy		6764443	0					
ANR	6765435	ArgumentList	buff		6764443	1					
ANR	6765436	Argument	buff		6764443	0					
ANR	6765437	Identifier	buff		6764443	0					
ANR	6765438	Argument	dp + jdx		6764443	1					
ANR	6765439	AdditiveExpression	dp + jdx		6764443	0		+			
ANR	6765440	Identifier	dp		6764443	0					
ANR	6765441	Identifier	jdx		6764443	1					
ANR	6765442	Argument	( end - jdx ) * sizeof ( uint8_t )		6764443	2					
ANR	6765443	MultiplicativeExpression	( end - jdx ) * sizeof ( uint8_t )		6764443	0		*			
ANR	6765444	AdditiveExpression	end - jdx		6764443	0		-			
ANR	6765445	Identifier	end		6764443	0					
ANR	6765446	Identifier	jdx		6764443	1					
ANR	6765447	SizeofExpression	sizeof ( uint8_t )		6764443	1					
ANR	6765448	Sizeof	sizeof		6764443	0					
ANR	6765449	SizeofOperand	uint8_t		6764443	1					
ANR	6765450	IfStatement	if ( jxr_get_OUTPUT_BITDEPTH ( image ) == JXR_BD1BLACK1 )		6764443	5					
ANR	6765451	Condition	jxr_get_OUTPUT_BITDEPTH ( image ) == JXR_BD1BLACK1	2624:24:89478:89524	6764443	0	True				
ANR	6765452	EqualityExpression	jxr_get_OUTPUT_BITDEPTH ( image ) == JXR_BD1BLACK1		6764443	0		==			
ANR	6765453	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6764443	0					
ANR	6765454	Callee	jxr_get_OUTPUT_BITDEPTH		6764443	0					
ANR	6765455	Identifier	jxr_get_OUTPUT_BITDEPTH		6764443	0					
ANR	6765456	ArgumentList	image		6764443	1					
ANR	6765457	Argument	image		6764443	0					
ANR	6765458	Identifier	image		6764443	0					
ANR	6765459	Identifier	JXR_BD1BLACK1		6764443	1					
ANR	6765460	CompoundStatement		134:20:5014:5014	6764443	1					
ANR	6765461	ExpressionStatement	iResult = ( 1 - buff [ 7 ] ) + ( ( 1 - buff [ 6 ] ) << 1 ) + ( ( 1 - buff [ 5 ] ) << 2 ) + ( ( 1 - buff [ 4 ] ) << 3 ) + ( ( 1 - buff [ 3 ] ) << 4 ) + ( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )	2626:24:89595:89835	6764443	0	True				
ANR	6765462	AssignmentExpression	iResult = ( 1 - buff [ 7 ] ) + ( ( 1 - buff [ 6 ] ) << 1 ) + ( ( 1 - buff [ 5 ] ) << 2 ) + ( ( 1 - buff [ 4 ] ) << 3 ) + ( ( 1 - buff [ 3 ] ) << 4 ) + ( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		6764443	0		=			
ANR	6765463	Identifier	iResult		6764443	0					
ANR	6765464	AdditiveExpression	( 1 - buff [ 7 ] ) + ( ( 1 - buff [ 6 ] ) << 1 ) + ( ( 1 - buff [ 5 ] ) << 2 ) + ( ( 1 - buff [ 4 ] ) << 3 ) + ( ( 1 - buff [ 3 ] ) << 4 ) + ( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		6764443	1		+			
ANR	6765465	AdditiveExpression	1 - buff [ 7 ]		6764443	0		-			
ANR	6765466	PrimaryExpression	1		6764443	0					
ANR	6765467	ArrayIndexing	buff [ 7 ]		6764443	1					
ANR	6765468	Identifier	buff		6764443	0					
ANR	6765469	PrimaryExpression	7		6764443	1					
ANR	6765470	AdditiveExpression	( ( 1 - buff [ 6 ] ) << 1 ) + ( ( 1 - buff [ 5 ] ) << 2 ) + ( ( 1 - buff [ 4 ] ) << 3 ) + ( ( 1 - buff [ 3 ] ) << 4 ) + ( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		6764443	1		+			
ANR	6765471	ShiftExpression	( 1 - buff [ 6 ] ) << 1		6764443	0		<<			
ANR	6765472	AdditiveExpression	1 - buff [ 6 ]		6764443	0		-			
ANR	6765473	PrimaryExpression	1		6764443	0					
ANR	6765474	ArrayIndexing	buff [ 6 ]		6764443	1					
ANR	6765475	Identifier	buff		6764443	0					
ANR	6765476	PrimaryExpression	6		6764443	1					
ANR	6765477	PrimaryExpression	1		6764443	1					
ANR	6765478	AdditiveExpression	( ( 1 - buff [ 5 ] ) << 2 ) + ( ( 1 - buff [ 4 ] ) << 3 ) + ( ( 1 - buff [ 3 ] ) << 4 ) + ( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		6764443	1		+			
ANR	6765479	ShiftExpression	( 1 - buff [ 5 ] ) << 2		6764443	0		<<			
ANR	6765480	AdditiveExpression	1 - buff [ 5 ]		6764443	0		-			
ANR	6765481	PrimaryExpression	1		6764443	0					
ANR	6765482	ArrayIndexing	buff [ 5 ]		6764443	1					
ANR	6765483	Identifier	buff		6764443	0					
ANR	6765484	PrimaryExpression	5		6764443	1					
ANR	6765485	PrimaryExpression	2		6764443	1					
ANR	6765486	AdditiveExpression	( ( 1 - buff [ 4 ] ) << 3 ) + ( ( 1 - buff [ 3 ] ) << 4 ) + ( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		6764443	1		+			
ANR	6765487	ShiftExpression	( 1 - buff [ 4 ] ) << 3		6764443	0		<<			
ANR	6765488	AdditiveExpression	1 - buff [ 4 ]		6764443	0		-			
ANR	6765489	PrimaryExpression	1		6764443	0					
ANR	6765490	ArrayIndexing	buff [ 4 ]		6764443	1					
ANR	6765491	Identifier	buff		6764443	0					
ANR	6765492	PrimaryExpression	4		6764443	1					
ANR	6765493	PrimaryExpression	3		6764443	1					
ANR	6765494	AdditiveExpression	( ( 1 - buff [ 3 ] ) << 4 ) + ( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		6764443	1		+			
ANR	6765495	ShiftExpression	( 1 - buff [ 3 ] ) << 4		6764443	0		<<			
ANR	6765496	AdditiveExpression	1 - buff [ 3 ]		6764443	0		-			
ANR	6765497	PrimaryExpression	1		6764443	0					
ANR	6765498	ArrayIndexing	buff [ 3 ]		6764443	1					
ANR	6765499	Identifier	buff		6764443	0					
ANR	6765500	PrimaryExpression	3		6764443	1					
ANR	6765501	PrimaryExpression	4		6764443	1					
ANR	6765502	AdditiveExpression	( ( 1 - buff [ 2 ] ) << 5 ) + ( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		6764443	1		+			
ANR	6765503	ShiftExpression	( 1 - buff [ 2 ] ) << 5		6764443	0		<<			
ANR	6765504	AdditiveExpression	1 - buff [ 2 ]		6764443	0		-			
ANR	6765505	PrimaryExpression	1		6764443	0					
ANR	6765506	ArrayIndexing	buff [ 2 ]		6764443	1					
ANR	6765507	Identifier	buff		6764443	0					
ANR	6765508	PrimaryExpression	2		6764443	1					
ANR	6765509	PrimaryExpression	5		6764443	1					
ANR	6765510	AdditiveExpression	( ( 1 - buff [ 1 ] ) << 6 ) + ( ( 1 - buff [ 0 ] ) << 7 )		6764443	1		+			
ANR	6765511	ShiftExpression	( 1 - buff [ 1 ] ) << 6		6764443	0		<<			
ANR	6765512	AdditiveExpression	1 - buff [ 1 ]		6764443	0		-			
ANR	6765513	PrimaryExpression	1		6764443	0					
ANR	6765514	ArrayIndexing	buff [ 1 ]		6764443	1					
ANR	6765515	Identifier	buff		6764443	0					
ANR	6765516	PrimaryExpression	1		6764443	1					
ANR	6765517	PrimaryExpression	6		6764443	1					
ANR	6765518	ShiftExpression	( 1 - buff [ 0 ] ) << 7		6764443	1		<<			
ANR	6765519	AdditiveExpression	1 - buff [ 0 ]		6764443	0		-			
ANR	6765520	PrimaryExpression	1		6764443	0					
ANR	6765521	ArrayIndexing	buff [ 0 ]		6764443	1					
ANR	6765522	Identifier	buff		6764443	0					
ANR	6765523	PrimaryExpression	0		6764443	1					
ANR	6765524	PrimaryExpression	7		6764443	1					
ANR	6765525	ElseStatement	else		6764443	0					
ANR	6765526	CompoundStatement		140:20:5417:5417	6764443	0					
ANR	6765527	ExpressionStatement	iResult = buff [ 7 ] + ( buff [ 6 ] << 1 ) + ( buff [ 5 ] << 2 ) + ( buff [ 4 ] << 3 ) + ( buff [ 3 ] << 4 ) + ( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )	2632:24:89976:90170	6764443	0	True				
ANR	6765528	AssignmentExpression	iResult = buff [ 7 ] + ( buff [ 6 ] << 1 ) + ( buff [ 5 ] << 2 ) + ( buff [ 4 ] << 3 ) + ( buff [ 3 ] << 4 ) + ( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		6764443	0		=			
ANR	6765529	Identifier	iResult		6764443	0					
ANR	6765530	AdditiveExpression	buff [ 7 ] + ( buff [ 6 ] << 1 ) + ( buff [ 5 ] << 2 ) + ( buff [ 4 ] << 3 ) + ( buff [ 3 ] << 4 ) + ( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		6764443	1		+			
ANR	6765531	ArrayIndexing	buff [ 7 ]		6764443	0					
ANR	6765532	Identifier	buff		6764443	0					
ANR	6765533	PrimaryExpression	7		6764443	1					
ANR	6765534	AdditiveExpression	( buff [ 6 ] << 1 ) + ( buff [ 5 ] << 2 ) + ( buff [ 4 ] << 3 ) + ( buff [ 3 ] << 4 ) + ( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		6764443	1		+			
ANR	6765535	ShiftExpression	buff [ 6 ] << 1		6764443	0		<<			
ANR	6765536	ArrayIndexing	buff [ 6 ]		6764443	0					
ANR	6765537	Identifier	buff		6764443	0					
ANR	6765538	PrimaryExpression	6		6764443	1					
ANR	6765539	PrimaryExpression	1		6764443	1					
ANR	6765540	AdditiveExpression	( buff [ 5 ] << 2 ) + ( buff [ 4 ] << 3 ) + ( buff [ 3 ] << 4 ) + ( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		6764443	1		+			
ANR	6765541	ShiftExpression	buff [ 5 ] << 2		6764443	0		<<			
ANR	6765542	ArrayIndexing	buff [ 5 ]		6764443	0					
ANR	6765543	Identifier	buff		6764443	0					
ANR	6765544	PrimaryExpression	5		6764443	1					
ANR	6765545	PrimaryExpression	2		6764443	1					
ANR	6765546	AdditiveExpression	( buff [ 4 ] << 3 ) + ( buff [ 3 ] << 4 ) + ( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		6764443	1		+			
ANR	6765547	ShiftExpression	buff [ 4 ] << 3		6764443	0		<<			
ANR	6765548	ArrayIndexing	buff [ 4 ]		6764443	0					
ANR	6765549	Identifier	buff		6764443	0					
ANR	6765550	PrimaryExpression	4		6764443	1					
ANR	6765551	PrimaryExpression	3		6764443	1					
ANR	6765552	AdditiveExpression	( buff [ 3 ] << 4 ) + ( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		6764443	1		+			
ANR	6765553	ShiftExpression	buff [ 3 ] << 4		6764443	0		<<			
ANR	6765554	ArrayIndexing	buff [ 3 ]		6764443	0					
ANR	6765555	Identifier	buff		6764443	0					
ANR	6765556	PrimaryExpression	3		6764443	1					
ANR	6765557	PrimaryExpression	4		6764443	1					
ANR	6765558	AdditiveExpression	( buff [ 2 ] << 5 ) + ( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		6764443	1		+			
ANR	6765559	ShiftExpression	buff [ 2 ] << 5		6764443	0		<<			
ANR	6765560	ArrayIndexing	buff [ 2 ]		6764443	0					
ANR	6765561	Identifier	buff		6764443	0					
ANR	6765562	PrimaryExpression	2		6764443	1					
ANR	6765563	PrimaryExpression	5		6764443	1					
ANR	6765564	AdditiveExpression	( buff [ 1 ] << 6 ) + ( buff [ 0 ] << 7 )		6764443	1		+			
ANR	6765565	ShiftExpression	buff [ 1 ] << 6		6764443	0		<<			
ANR	6765566	ArrayIndexing	buff [ 1 ]		6764443	0					
ANR	6765567	Identifier	buff		6764443	0					
ANR	6765568	PrimaryExpression	1		6764443	1					
ANR	6765569	PrimaryExpression	6		6764443	1					
ANR	6765570	ShiftExpression	buff [ 0 ] << 7		6764443	1		<<			
ANR	6765571	ArrayIndexing	buff [ 0 ]		6764443	0					
ANR	6765572	Identifier	buff		6764443	0					
ANR	6765573	PrimaryExpression	0		6764443	1					
ANR	6765574	PrimaryExpression	7		6764443	1					
ANR	6765575	ExpressionStatement	"write_uint8 ( con , & iResult , 1 )"	2637:20:90232:90261	6764443	6	True				
ANR	6765576	CallExpression	"write_uint8 ( con , & iResult , 1 )"		6764443	0					
ANR	6765577	Callee	write_uint8		6764443	0					
ANR	6765578	Identifier	write_uint8		6764443	0					
ANR	6765579	ArgumentList	con		6764443	1					
ANR	6765580	Argument	con		6764443	0					
ANR	6765581	Identifier	con		6764443	0					
ANR	6765582	Argument	& iResult		6764443	1					
ANR	6765583	UnaryOperationExpression	& iResult		6764443	0					
ANR	6765584	UnaryOperator	&		6764443	0					
ANR	6765585	Identifier	iResult		6764443	1					
ANR	6765586	Argument	1		6764443	2					
ANR	6765587	PrimaryExpression	1		6764443	0					
ANR	6765588	ElseStatement	else		6764443	0					
ANR	6765589	IfStatement	if ( con -> bpi == 5 )		6764443	0					
ANR	6765590	Condition	con -> bpi == 5	2641:16:90321:90333	6764443	0	True				
ANR	6765591	EqualityExpression	con -> bpi == 5		6764443	0		==			
ANR	6765592	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6765593	Identifier	con		6764443	0					
ANR	6765594	Identifier	bpi		6764443	1					
ANR	6765595	PrimaryExpression	5		6764443	1					
ANR	6765596	CompoundStatement		151:8:5811:5811	6764443	1					
ANR	6765597	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6764443	0					
ANR	6765598	ForInit	idx = first ;	2645:17:90478:90489	6764443	0	True				
ANR	6765599	AssignmentExpression	idx = first		6764443	0		=			
ANR	6765600	Identifier	idx		6764443	0					
ANR	6765601	Identifier	first		6764443	1					
ANR	6765602	Condition	idx < trans	2645:30:90491:90501	6764443	1	True				
ANR	6765603	RelationalExpression	idx < trans		6764443	0		<			
ANR	6765604	Identifier	idx		6764443	0					
ANR	6765605	Identifier	trans		6764443	1					
ANR	6765606	AssignmentExpression	idx += 1	2645:43:90504:90511	6764443	2	True	+=			
ANR	6765607	Identifier	idx		6764443	0					
ANR	6765608	PrimaryExpression	1		6764443	1					
ANR	6765609	CompoundStatement		155:16:5999:6040	6764443	3					
ANR	6765610	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) con -> buf + idx * dy ;	2646:16:90532:90573	6764443	0	True				
ANR	6765611	IdentifierDecl	* dp = ( uint8_t * ) con -> buf + idx * dy		6764443	0					
ANR	6765612	IdentifierDeclType	uint8_t *		6764443	0					
ANR	6765613	Identifier	dp		6764443	1					
ANR	6765614	AssignmentExpression	* dp = ( uint8_t * ) con -> buf + idx * dy		6764443	2		=			
ANR	6765615	Identifier	dp		6764443	0					
ANR	6765616	AdditiveExpression	( uint8_t * ) con -> buf + idx * dy		6764443	1		+			
ANR	6765617	CastExpression	( uint8_t * ) con -> buf		6764443	0					
ANR	6765618	CastTarget	uint8_t *		6764443	0					
ANR	6765619	PtrMemberAccess	con -> buf		6764443	1					
ANR	6765620	Identifier	con		6764443	0					
ANR	6765621	Identifier	buf		6764443	1					
ANR	6765622	MultiplicativeExpression	idx * dy		6764443	1		*			
ANR	6765623	Identifier	idx		6764443	0					
ANR	6765624	Identifier	dy		6764443	1					
ANR	6765625	ExpressionStatement	assert ( con -> ncomp == 3 )	2647:16:90591:90614	6764443	1	True				
ANR	6765626	CallExpression	assert ( con -> ncomp == 3 )		6764443	0					
ANR	6765627	Callee	assert		6764443	0					
ANR	6765628	Identifier	assert		6764443	0					
ANR	6765629	ArgumentList	con -> ncomp == 3		6764443	1					
ANR	6765630	Argument	con -> ncomp == 3		6764443	0					
ANR	6765631	EqualityExpression	con -> ncomp == 3		6764443	0		==			
ANR	6765632	PtrMemberAccess	con -> ncomp		6764443	0					
ANR	6765633	Identifier	con		6764443	0					
ANR	6765634	Identifier	ncomp		6764443	1					
ANR	6765635	PrimaryExpression	3		6764443	1					
ANR	6765636	ForStatement	for ( jdx = con -> left_pad * con -> ncomp ; jdx < ( con -> wid + con -> left_pad ) * con -> ncomp ; jdx = jdx + con -> ncomp )		6764443	2					
ANR	6765637	ForInit	jdx = con -> left_pad * con -> ncomp ;	2648:20:90652:90682	6764443	0	True				
ANR	6765638	AssignmentExpression	jdx = con -> left_pad * con -> ncomp		6764443	0		=			
ANR	6765639	Identifier	jdx		6764443	0					
ANR	6765640	MultiplicativeExpression	con -> left_pad * con -> ncomp		6764443	1		*			
ANR	6765641	PtrMemberAccess	con -> left_pad		6764443	0					
ANR	6765642	Identifier	con		6764443	0					
ANR	6765643	Identifier	left_pad		6764443	1					
ANR	6765644	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765645	Identifier	con		6764443	0					
ANR	6765646	Identifier	ncomp		6764443	1					
ANR	6765647	Condition	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp	2648:52:90684:90726	6764443	1	True				
ANR	6765648	RelationalExpression	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp		6764443	0		<			
ANR	6765649	Identifier	jdx		6764443	0					
ANR	6765650	MultiplicativeExpression	( con -> wid + con -> left_pad ) * con -> ncomp		6764443	1		*			
ANR	6765651	AdditiveExpression	con -> wid + con -> left_pad		6764443	0		+			
ANR	6765652	PtrMemberAccess	con -> wid		6764443	0					
ANR	6765653	Identifier	con		6764443	0					
ANR	6765654	Identifier	wid		6764443	1					
ANR	6765655	PtrMemberAccess	con -> left_pad		6764443	1					
ANR	6765656	Identifier	con		6764443	0					
ANR	6765657	Identifier	left_pad		6764443	1					
ANR	6765658	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765659	Identifier	con		6764443	0					
ANR	6765660	Identifier	ncomp		6764443	1					
ANR	6765661	AssignmentExpression	jdx = jdx + con -> ncomp	2648:97:90729:90750	6764443	2	True	=			
ANR	6765662	Identifier	jdx		6764443	0					
ANR	6765663	AdditiveExpression	jdx + con -> ncomp		6764443	1		+			
ANR	6765664	Identifier	jdx		6764443	0					
ANR	6765665	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765666	Identifier	con		6764443	0					
ANR	6765667	Identifier	ncomp		6764443	1					
ANR	6765668	CompoundStatement		159:20:6258:6278	6764443	3					
ANR	6765669	IdentifierDeclStatement	uint16_t iResult = 0 ;	2650:20:90791:90811	6764443	0	True				
ANR	6765670	IdentifierDecl	iResult = 0		6764443	0					
ANR	6765671	IdentifierDeclType	uint16_t		6764443	0					
ANR	6765672	Identifier	iResult		6764443	1					
ANR	6765673	AssignmentExpression	iResult = 0		6764443	2		=			
ANR	6765674	Identifier	iResult		6764443	0					
ANR	6765675	PrimaryExpression	0		6764443	1					
ANR	6765676	ExpressionStatement	iResult = ( uint16_t ) dp [ jdx ] + ( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 10 )	2651:20:90833:90924	6764443	1	True				
ANR	6765677	AssignmentExpression	iResult = ( uint16_t ) dp [ jdx ] + ( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 10 )		6764443	0		=			
ANR	6765678	Identifier	iResult		6764443	0					
ANR	6765679	AdditiveExpression	( uint16_t ) dp [ jdx ] + ( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 10 )		6764443	1		+			
ANR	6765680	CastExpression	( uint16_t ) dp [ jdx ]		6764443	0					
ANR	6765681	CastTarget	uint16_t		6764443	0					
ANR	6765682	ArrayIndexing	dp [ jdx ]		6764443	1					
ANR	6765683	Identifier	dp		6764443	0					
ANR	6765684	Identifier	jdx		6764443	1					
ANR	6765685	AdditiveExpression	( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 10 )		6764443	1		+			
ANR	6765686	ShiftExpression	( ( uint16_t ) dp [ jdx + 1 ] ) << 5		6764443	0		<<			
ANR	6765687	CastExpression	( uint16_t ) dp [ jdx + 1 ]		6764443	0					
ANR	6765688	CastTarget	uint16_t		6764443	0					
ANR	6765689	ArrayIndexing	dp [ jdx + 1 ]		6764443	1					
ANR	6765690	Identifier	dp		6764443	0					
ANR	6765691	AdditiveExpression	jdx + 1		6764443	1		+			
ANR	6765692	Identifier	jdx		6764443	0					
ANR	6765693	PrimaryExpression	1		6764443	1					
ANR	6765694	PrimaryExpression	5		6764443	1					
ANR	6765695	ShiftExpression	( ( uint16_t ) dp [ jdx + 2 ] ) << 10		6764443	1		<<			
ANR	6765696	CastExpression	( uint16_t ) dp [ jdx + 2 ]		6764443	0					
ANR	6765697	CastTarget	uint16_t		6764443	0					
ANR	6765698	ArrayIndexing	dp [ jdx + 2 ]		6764443	1					
ANR	6765699	Identifier	dp		6764443	0					
ANR	6765700	AdditiveExpression	jdx + 2		6764443	1		+			
ANR	6765701	Identifier	jdx		6764443	0					
ANR	6765702	PrimaryExpression	2		6764443	1					
ANR	6765703	PrimaryExpression	10		6764443	1					
ANR	6765704	ExpressionStatement	"write_uint16 ( con , & iResult , 1 )"	2652:20:90946:90976	6764443	2	True				
ANR	6765705	CallExpression	"write_uint16 ( con , & iResult , 1 )"		6764443	0					
ANR	6765706	Callee	write_uint16		6764443	0					
ANR	6765707	Identifier	write_uint16		6764443	0					
ANR	6765708	ArgumentList	con		6764443	1					
ANR	6765709	Argument	con		6764443	0					
ANR	6765710	Identifier	con		6764443	0					
ANR	6765711	Argument	& iResult		6764443	1					
ANR	6765712	UnaryOperationExpression	& iResult		6764443	0					
ANR	6765713	UnaryOperator	&		6764443	0					
ANR	6765714	Identifier	iResult		6764443	1					
ANR	6765715	Argument	1		6764443	2					
ANR	6765716	PrimaryExpression	1		6764443	0					
ANR	6765717	ElseStatement	else		6764443	0					
ANR	6765718	IfStatement	if ( con -> bpi == 6 )		6764443	0					
ANR	6765719	Condition	con -> bpi == 6	2656:16:91068:91080	6764443	0	True				
ANR	6765720	EqualityExpression	con -> bpi == 6		6764443	0		==			
ANR	6765721	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6765722	Identifier	con		6764443	0					
ANR	6765723	Identifier	bpi		6764443	1					
ANR	6765724	PrimaryExpression	6		6764443	1					
ANR	6765725	CompoundStatement		166:8:6558:6558	6764443	1					
ANR	6765726	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6764443	0					
ANR	6765727	ForInit	idx = first ;	2660:17:91225:91236	6764443	0	True				
ANR	6765728	AssignmentExpression	idx = first		6764443	0		=			
ANR	6765729	Identifier	idx		6764443	0					
ANR	6765730	Identifier	first		6764443	1					
ANR	6765731	Condition	idx < trans	2660:30:91238:91248	6764443	1	True				
ANR	6765732	RelationalExpression	idx < trans		6764443	0		<			
ANR	6765733	Identifier	idx		6764443	0					
ANR	6765734	Identifier	trans		6764443	1					
ANR	6765735	AssignmentExpression	idx += 1	2660:43:91251:91258	6764443	2	True	+=			
ANR	6765736	Identifier	idx		6764443	0					
ANR	6765737	PrimaryExpression	1		6764443	1					
ANR	6765738	CompoundStatement		170:16:6746:6787	6764443	3					
ANR	6765739	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) con -> buf + idx * dy ;	2661:16:91279:91320	6764443	0	True				
ANR	6765740	IdentifierDecl	* dp = ( uint8_t * ) con -> buf + idx * dy		6764443	0					
ANR	6765741	IdentifierDeclType	uint8_t *		6764443	0					
ANR	6765742	Identifier	dp		6764443	1					
ANR	6765743	AssignmentExpression	* dp = ( uint8_t * ) con -> buf + idx * dy		6764443	2		=			
ANR	6765744	Identifier	dp		6764443	0					
ANR	6765745	AdditiveExpression	( uint8_t * ) con -> buf + idx * dy		6764443	1		+			
ANR	6765746	CastExpression	( uint8_t * ) con -> buf		6764443	0					
ANR	6765747	CastTarget	uint8_t *		6764443	0					
ANR	6765748	PtrMemberAccess	con -> buf		6764443	1					
ANR	6765749	Identifier	con		6764443	0					
ANR	6765750	Identifier	buf		6764443	1					
ANR	6765751	MultiplicativeExpression	idx * dy		6764443	1		*			
ANR	6765752	Identifier	idx		6764443	0					
ANR	6765753	Identifier	dy		6764443	1					
ANR	6765754	ExpressionStatement	assert ( con -> ncomp == 3 )	2662:16:91338:91361	6764443	1	True				
ANR	6765755	CallExpression	assert ( con -> ncomp == 3 )		6764443	0					
ANR	6765756	Callee	assert		6764443	0					
ANR	6765757	Identifier	assert		6764443	0					
ANR	6765758	ArgumentList	con -> ncomp == 3		6764443	1					
ANR	6765759	Argument	con -> ncomp == 3		6764443	0					
ANR	6765760	EqualityExpression	con -> ncomp == 3		6764443	0		==			
ANR	6765761	PtrMemberAccess	con -> ncomp		6764443	0					
ANR	6765762	Identifier	con		6764443	0					
ANR	6765763	Identifier	ncomp		6764443	1					
ANR	6765764	PrimaryExpression	3		6764443	1					
ANR	6765765	ForStatement	for ( jdx = con -> left_pad * con -> ncomp ; jdx < ( con -> wid + con -> left_pad ) * con -> ncomp ; jdx = jdx + con -> ncomp )		6764443	2					
ANR	6765766	ForInit	jdx = con -> left_pad * con -> ncomp ;	2663:20:91399:91429	6764443	0	True				
ANR	6765767	AssignmentExpression	jdx = con -> left_pad * con -> ncomp		6764443	0		=			
ANR	6765768	Identifier	jdx		6764443	0					
ANR	6765769	MultiplicativeExpression	con -> left_pad * con -> ncomp		6764443	1		*			
ANR	6765770	PtrMemberAccess	con -> left_pad		6764443	0					
ANR	6765771	Identifier	con		6764443	0					
ANR	6765772	Identifier	left_pad		6764443	1					
ANR	6765773	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765774	Identifier	con		6764443	0					
ANR	6765775	Identifier	ncomp		6764443	1					
ANR	6765776	Condition	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp	2663:52:91431:91473	6764443	1	True				
ANR	6765777	RelationalExpression	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp		6764443	0		<			
ANR	6765778	Identifier	jdx		6764443	0					
ANR	6765779	MultiplicativeExpression	( con -> wid + con -> left_pad ) * con -> ncomp		6764443	1		*			
ANR	6765780	AdditiveExpression	con -> wid + con -> left_pad		6764443	0		+			
ANR	6765781	PtrMemberAccess	con -> wid		6764443	0					
ANR	6765782	Identifier	con		6764443	0					
ANR	6765783	Identifier	wid		6764443	1					
ANR	6765784	PtrMemberAccess	con -> left_pad		6764443	1					
ANR	6765785	Identifier	con		6764443	0					
ANR	6765786	Identifier	left_pad		6764443	1					
ANR	6765787	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765788	Identifier	con		6764443	0					
ANR	6765789	Identifier	ncomp		6764443	1					
ANR	6765790	AssignmentExpression	jdx = jdx + con -> ncomp	2663:97:91476:91497	6764443	2	True	=			
ANR	6765791	Identifier	jdx		6764443	0					
ANR	6765792	AdditiveExpression	jdx + con -> ncomp		6764443	1		+			
ANR	6765793	Identifier	jdx		6764443	0					
ANR	6765794	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765795	Identifier	con		6764443	0					
ANR	6765796	Identifier	ncomp		6764443	1					
ANR	6765797	CompoundStatement		174:20:7005:7025	6764443	3					
ANR	6765798	IdentifierDeclStatement	uint16_t iResult = 0 ;	2665:20:91538:91558	6764443	0	True				
ANR	6765799	IdentifierDecl	iResult = 0		6764443	0					
ANR	6765800	IdentifierDeclType	uint16_t		6764443	0					
ANR	6765801	Identifier	iResult		6764443	1					
ANR	6765802	AssignmentExpression	iResult = 0		6764443	2		=			
ANR	6765803	Identifier	iResult		6764443	0					
ANR	6765804	PrimaryExpression	0		6764443	1					
ANR	6765805	ExpressionStatement	iResult = ( uint16_t ) dp [ jdx ] + ( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 11 )	2666:20:91580:91671	6764443	1	True				
ANR	6765806	AssignmentExpression	iResult = ( uint16_t ) dp [ jdx ] + ( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 11 )		6764443	0		=			
ANR	6765807	Identifier	iResult		6764443	0					
ANR	6765808	AdditiveExpression	( uint16_t ) dp [ jdx ] + ( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 11 )		6764443	1		+			
ANR	6765809	CastExpression	( uint16_t ) dp [ jdx ]		6764443	0					
ANR	6765810	CastTarget	uint16_t		6764443	0					
ANR	6765811	ArrayIndexing	dp [ jdx ]		6764443	1					
ANR	6765812	Identifier	dp		6764443	0					
ANR	6765813	Identifier	jdx		6764443	1					
ANR	6765814	AdditiveExpression	( ( ( uint16_t ) dp [ jdx + 1 ] ) << 5 ) + ( ( ( uint16_t ) dp [ jdx + 2 ] ) << 11 )		6764443	1		+			
ANR	6765815	ShiftExpression	( ( uint16_t ) dp [ jdx + 1 ] ) << 5		6764443	0		<<			
ANR	6765816	CastExpression	( uint16_t ) dp [ jdx + 1 ]		6764443	0					
ANR	6765817	CastTarget	uint16_t		6764443	0					
ANR	6765818	ArrayIndexing	dp [ jdx + 1 ]		6764443	1					
ANR	6765819	Identifier	dp		6764443	0					
ANR	6765820	AdditiveExpression	jdx + 1		6764443	1		+			
ANR	6765821	Identifier	jdx		6764443	0					
ANR	6765822	PrimaryExpression	1		6764443	1					
ANR	6765823	PrimaryExpression	5		6764443	1					
ANR	6765824	ShiftExpression	( ( uint16_t ) dp [ jdx + 2 ] ) << 11		6764443	1		<<			
ANR	6765825	CastExpression	( uint16_t ) dp [ jdx + 2 ]		6764443	0					
ANR	6765826	CastTarget	uint16_t		6764443	0					
ANR	6765827	ArrayIndexing	dp [ jdx + 2 ]		6764443	1					
ANR	6765828	Identifier	dp		6764443	0					
ANR	6765829	AdditiveExpression	jdx + 2		6764443	1		+			
ANR	6765830	Identifier	jdx		6764443	0					
ANR	6765831	PrimaryExpression	2		6764443	1					
ANR	6765832	PrimaryExpression	11		6764443	1					
ANR	6765833	ExpressionStatement	"write_uint16 ( con , & iResult , 1 )"	2667:20:91693:91723	6764443	2	True				
ANR	6765834	CallExpression	"write_uint16 ( con , & iResult , 1 )"		6764443	0					
ANR	6765835	Callee	write_uint16		6764443	0					
ANR	6765836	Identifier	write_uint16		6764443	0					
ANR	6765837	ArgumentList	con		6764443	1					
ANR	6765838	Argument	con		6764443	0					
ANR	6765839	Identifier	con		6764443	0					
ANR	6765840	Argument	& iResult		6764443	1					
ANR	6765841	UnaryOperationExpression	& iResult		6764443	0					
ANR	6765842	UnaryOperator	&		6764443	0					
ANR	6765843	Identifier	iResult		6764443	1					
ANR	6765844	Argument	1		6764443	2					
ANR	6765845	PrimaryExpression	1		6764443	0					
ANR	6765846	ElseStatement	else		6764443	0					
ANR	6765847	IfStatement	if ( con -> bpi == 8 )		6764443	0					
ANR	6765848	Condition	con -> bpi == 8	2671:17:91816:91826	6764443	0	True				
ANR	6765849	EqualityExpression	con -> bpi == 8		6764443	0		==			
ANR	6765850	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6765851	Identifier	con		6764443	0					
ANR	6765852	Identifier	bpi		6764443	1					
ANR	6765853	PrimaryExpression	8		6764443	1					
ANR	6765854	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6764443	1					
ANR	6765855	ForInit	idx = first ;	2672:17:91846:91857	6764443	0	True				
ANR	6765856	AssignmentExpression	idx = first		6764443	0		=			
ANR	6765857	Identifier	idx		6764443	0					
ANR	6765858	Identifier	first		6764443	1					
ANR	6765859	Condition	idx < trans	2672:30:91859:91869	6764443	1	True				
ANR	6765860	RelationalExpression	idx < trans		6764443	0		<			
ANR	6765861	Identifier	idx		6764443	0					
ANR	6765862	Identifier	trans		6764443	1					
ANR	6765863	AssignmentExpression	idx += 1	2672:43:91872:91879	6764443	2	True	+=			
ANR	6765864	Identifier	idx		6764443	0					
ANR	6765865	PrimaryExpression	1		6764443	1					
ANR	6765866	CompoundStatement		183:16:7453:7477	6764443	3					
ANR	6765867	IdentifierDeclStatement	uint8_t * dp = ( uint8_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp ;	2673:16:91900:91968	6764443	0	True				
ANR	6765868	IdentifierDecl	* dp = ( uint8_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		6764443	0					
ANR	6765869	IdentifierDeclType	uint8_t *		6764443	0					
ANR	6765870	Identifier	dp		6764443	1					
ANR	6765871	AssignmentExpression	* dp = ( uint8_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		6764443	2		=			
ANR	6765872	Identifier	dp		6764443	0					
ANR	6765873	AdditiveExpression	( uint8_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		6764443	1		+			
ANR	6765874	CastExpression	( uint8_t * ) con -> buf		6764443	0					
ANR	6765875	CastTarget	uint8_t *		6764443	0					
ANR	6765876	PtrMemberAccess	con -> buf		6764443	1					
ANR	6765877	Identifier	con		6764443	0					
ANR	6765878	Identifier	buf		6764443	1					
ANR	6765879	AdditiveExpression	idx * dy + con -> left_pad * con -> ncomp		6764443	1		+			
ANR	6765880	MultiplicativeExpression	idx * dy		6764443	0		*			
ANR	6765881	Identifier	idx		6764443	0					
ANR	6765882	Identifier	dy		6764443	1					
ANR	6765883	MultiplicativeExpression	con -> left_pad * con -> ncomp		6764443	1		*			
ANR	6765884	PtrMemberAccess	con -> left_pad		6764443	0					
ANR	6765885	Identifier	con		6764443	0					
ANR	6765886	Identifier	left_pad		6764443	1					
ANR	6765887	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765888	Identifier	con		6764443	0					
ANR	6765889	Identifier	ncomp		6764443	1					
ANR	6765890	IdentifierDeclStatement	int padComp = con -> ncomp ;	2674:16:91986:92010	6764443	1	True				
ANR	6765891	IdentifierDecl	padComp = con -> ncomp		6764443	0					
ANR	6765892	IdentifierDeclType	int		6764443	0					
ANR	6765893	Identifier	padComp		6764443	1					
ANR	6765894	AssignmentExpression	padComp = con -> ncomp		6764443	2		=			
ANR	6765895	Identifier	padComp		6764443	0					
ANR	6765896	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765897	Identifier	con		6764443	0					
ANR	6765898	Identifier	ncomp		6764443	1					
ANR	6765899	IfStatement	if ( con -> padBytes != 0 )		6764443	2					
ANR	6765900	Condition	con -> padBytes != 0	2675:19:92031:92048	6764443	0	True				
ANR	6765901	EqualityExpression	con -> padBytes != 0		6764443	0		!=			
ANR	6765902	PtrMemberAccess	con -> padBytes		6764443	0					
ANR	6765903	Identifier	con		6764443	0					
ANR	6765904	Identifier	padBytes		6764443	1					
ANR	6765905	PrimaryExpression	0		6764443	1					
ANR	6765906	ExpressionStatement	padComp ++	2676:20:92072:92082	6764443	1	True				
ANR	6765907	PostIncDecOperationExpression	padComp ++		6764443	0					
ANR	6765908	Identifier	padComp		6764443	0					
ANR	6765909	IncDec	++		6764443	1					
ANR	6765910	ExpressionStatement	"write_uint8 ( con , dp , con -> wid * padComp )"	2677:16:92100:92138	6764443	3	True				
ANR	6765911	CallExpression	"write_uint8 ( con , dp , con -> wid * padComp )"		6764443	0					
ANR	6765912	Callee	write_uint8		6764443	0					
ANR	6765913	Identifier	write_uint8		6764443	0					
ANR	6765914	ArgumentList	con		6764443	1					
ANR	6765915	Argument	con		6764443	0					
ANR	6765916	Identifier	con		6764443	0					
ANR	6765917	Argument	dp		6764443	1					
ANR	6765918	Identifier	dp		6764443	0					
ANR	6765919	Argument	con -> wid * padComp		6764443	2					
ANR	6765920	MultiplicativeExpression	con -> wid * padComp		6764443	0		*			
ANR	6765921	PtrMemberAccess	con -> wid		6764443	0					
ANR	6765922	Identifier	con		6764443	0					
ANR	6765923	Identifier	wid		6764443	1					
ANR	6765924	Identifier	padComp		6764443	1					
ANR	6765925	ElseStatement	else		6764443	0					
ANR	6765926	IfStatement	if ( con -> bpi == 10 && con -> ncomp == 3 )		6764443	0					
ANR	6765927	Condition	con -> bpi == 10 && con -> ncomp == 3	2678:16:92158:92190	6764443	0	True				
ANR	6765928	AndExpression	con -> bpi == 10 && con -> ncomp == 3		6764443	0		&&			
ANR	6765929	EqualityExpression	con -> bpi == 10		6764443	0		==			
ANR	6765930	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6765931	Identifier	con		6764443	0					
ANR	6765932	Identifier	bpi		6764443	1					
ANR	6765933	PrimaryExpression	10		6764443	1					
ANR	6765934	EqualityExpression	con -> ncomp == 3		6764443	1		==			
ANR	6765935	PtrMemberAccess	con -> ncomp		6764443	0					
ANR	6765936	Identifier	con		6764443	0					
ANR	6765937	Identifier	ncomp		6764443	1					
ANR	6765938	PrimaryExpression	3		6764443	1					
ANR	6765939	CompoundStatement		188:8:7668:7668	6764443	1					
ANR	6765940	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6764443	0					
ANR	6765941	ForInit	idx = first ;	2682:17:92334:92345	6764443	0	True				
ANR	6765942	AssignmentExpression	idx = first		6764443	0		=			
ANR	6765943	Identifier	idx		6764443	0					
ANR	6765944	Identifier	first		6764443	1					
ANR	6765945	Condition	idx < trans	2682:30:92347:92357	6764443	1	True				
ANR	6765946	RelationalExpression	idx < trans		6764443	0		<			
ANR	6765947	Identifier	idx		6764443	0					
ANR	6765948	Identifier	trans		6764443	1					
ANR	6765949	AssignmentExpression	idx += 1	2682:43:92360:92367	6764443	2	True	+=			
ANR	6765950	Identifier	idx		6764443	0					
ANR	6765951	PrimaryExpression	1		6764443	1					
ANR	6765952	CompoundStatement		192:16:7855:7898	6764443	3					
ANR	6765953	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) con -> buf + idx * dy ;	2683:16:92388:92431	6764443	0	True				
ANR	6765954	IdentifierDecl	* dp = ( uint16_t * ) con -> buf + idx * dy		6764443	0					
ANR	6765955	IdentifierDeclType	uint16_t *		6764443	0					
ANR	6765956	Identifier	dp		6764443	1					
ANR	6765957	AssignmentExpression	* dp = ( uint16_t * ) con -> buf + idx * dy		6764443	2		=			
ANR	6765958	Identifier	dp		6764443	0					
ANR	6765959	AdditiveExpression	( uint16_t * ) con -> buf + idx * dy		6764443	1		+			
ANR	6765960	CastExpression	( uint16_t * ) con -> buf		6764443	0					
ANR	6765961	CastTarget	uint16_t *		6764443	0					
ANR	6765962	PtrMemberAccess	con -> buf		6764443	1					
ANR	6765963	Identifier	con		6764443	0					
ANR	6765964	Identifier	buf		6764443	1					
ANR	6765965	MultiplicativeExpression	idx * dy		6764443	1		*			
ANR	6765966	Identifier	idx		6764443	0					
ANR	6765967	Identifier	dy		6764443	1					
ANR	6765968	ForStatement	for ( jdx = con -> left_pad * con -> ncomp ; jdx < ( con -> wid + con -> left_pad ) * con -> ncomp ; jdx = jdx + con -> ncomp )		6764443	1					
ANR	6765969	ForInit	jdx = con -> left_pad * con -> ncomp ;	2684:20:92453:92483	6764443	0	True				
ANR	6765970	AssignmentExpression	jdx = con -> left_pad * con -> ncomp		6764443	0		=			
ANR	6765971	Identifier	jdx		6764443	0					
ANR	6765972	MultiplicativeExpression	con -> left_pad * con -> ncomp		6764443	1		*			
ANR	6765973	PtrMemberAccess	con -> left_pad		6764443	0					
ANR	6765974	Identifier	con		6764443	0					
ANR	6765975	Identifier	left_pad		6764443	1					
ANR	6765976	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765977	Identifier	con		6764443	0					
ANR	6765978	Identifier	ncomp		6764443	1					
ANR	6765979	Condition	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp	2684:52:92485:92527	6764443	1	True				
ANR	6765980	RelationalExpression	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp		6764443	0		<			
ANR	6765981	Identifier	jdx		6764443	0					
ANR	6765982	MultiplicativeExpression	( con -> wid + con -> left_pad ) * con -> ncomp		6764443	1		*			
ANR	6765983	AdditiveExpression	con -> wid + con -> left_pad		6764443	0		+			
ANR	6765984	PtrMemberAccess	con -> wid		6764443	0					
ANR	6765985	Identifier	con		6764443	0					
ANR	6765986	Identifier	wid		6764443	1					
ANR	6765987	PtrMemberAccess	con -> left_pad		6764443	1					
ANR	6765988	Identifier	con		6764443	0					
ANR	6765989	Identifier	left_pad		6764443	1					
ANR	6765990	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765991	Identifier	con		6764443	0					
ANR	6765992	Identifier	ncomp		6764443	1					
ANR	6765993	AssignmentExpression	jdx = jdx + con -> ncomp	2684:97:92530:92551	6764443	2	True	=			
ANR	6765994	Identifier	jdx		6764443	0					
ANR	6765995	AdditiveExpression	jdx + con -> ncomp		6764443	1		+			
ANR	6765996	Identifier	jdx		6764443	0					
ANR	6765997	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6765998	Identifier	con		6764443	0					
ANR	6765999	Identifier	ncomp		6764443	1					
ANR	6766000	CompoundStatement		195:20:8059:8079	6764443	3					
ANR	6766001	IdentifierDeclStatement	uint32_t iResult = 0 ;	2686:20:92592:92612	6764443	0	True				
ANR	6766002	IdentifierDecl	iResult = 0		6764443	0					
ANR	6766003	IdentifierDeclType	uint32_t		6764443	0					
ANR	6766004	Identifier	iResult		6764443	1					
ANR	6766005	AssignmentExpression	iResult = 0		6764443	2		=			
ANR	6766006	Identifier	iResult		6764443	0					
ANR	6766007	PrimaryExpression	0		6764443	1					
ANR	6766008	ExpressionStatement	iResult = ( uint32_t ) dp [ jdx ] + ( ( ( uint32_t ) dp [ jdx + 1 ] ) << 10 ) + ( ( ( uint32_t ) dp [ jdx + 2 ] ) << 20 )	2687:20:92634:92726	6764443	1	True				
ANR	6766009	AssignmentExpression	iResult = ( uint32_t ) dp [ jdx ] + ( ( ( uint32_t ) dp [ jdx + 1 ] ) << 10 ) + ( ( ( uint32_t ) dp [ jdx + 2 ] ) << 20 )		6764443	0		=			
ANR	6766010	Identifier	iResult		6764443	0					
ANR	6766011	AdditiveExpression	( uint32_t ) dp [ jdx ] + ( ( ( uint32_t ) dp [ jdx + 1 ] ) << 10 ) + ( ( ( uint32_t ) dp [ jdx + 2 ] ) << 20 )		6764443	1		+			
ANR	6766012	CastExpression	( uint32_t ) dp [ jdx ]		6764443	0					
ANR	6766013	CastTarget	uint32_t		6764443	0					
ANR	6766014	ArrayIndexing	dp [ jdx ]		6764443	1					
ANR	6766015	Identifier	dp		6764443	0					
ANR	6766016	Identifier	jdx		6764443	1					
ANR	6766017	AdditiveExpression	( ( ( uint32_t ) dp [ jdx + 1 ] ) << 10 ) + ( ( ( uint32_t ) dp [ jdx + 2 ] ) << 20 )		6764443	1		+			
ANR	6766018	ShiftExpression	( ( uint32_t ) dp [ jdx + 1 ] ) << 10		6764443	0		<<			
ANR	6766019	CastExpression	( uint32_t ) dp [ jdx + 1 ]		6764443	0					
ANR	6766020	CastTarget	uint32_t		6764443	0					
ANR	6766021	ArrayIndexing	dp [ jdx + 1 ]		6764443	1					
ANR	6766022	Identifier	dp		6764443	0					
ANR	6766023	AdditiveExpression	jdx + 1		6764443	1		+			
ANR	6766024	Identifier	jdx		6764443	0					
ANR	6766025	PrimaryExpression	1		6764443	1					
ANR	6766026	PrimaryExpression	10		6764443	1					
ANR	6766027	ShiftExpression	( ( uint32_t ) dp [ jdx + 2 ] ) << 20		6764443	1		<<			
ANR	6766028	CastExpression	( uint32_t ) dp [ jdx + 2 ]		6764443	0					
ANR	6766029	CastTarget	uint32_t		6764443	0					
ANR	6766030	ArrayIndexing	dp [ jdx + 2 ]		6764443	1					
ANR	6766031	Identifier	dp		6764443	0					
ANR	6766032	AdditiveExpression	jdx + 2		6764443	1		+			
ANR	6766033	Identifier	jdx		6764443	0					
ANR	6766034	PrimaryExpression	2		6764443	1					
ANR	6766035	PrimaryExpression	20		6764443	1					
ANR	6766036	ExpressionStatement	"write_uint32 ( con , & iResult , 1 )"	2688:20:92748:92778	6764443	2	True				
ANR	6766037	CallExpression	"write_uint32 ( con , & iResult , 1 )"		6764443	0					
ANR	6766038	Callee	write_uint32		6764443	0					
ANR	6766039	Identifier	write_uint32		6764443	0					
ANR	6766040	ArgumentList	con		6764443	1					
ANR	6766041	Argument	con		6764443	0					
ANR	6766042	Identifier	con		6764443	0					
ANR	6766043	Argument	& iResult		6764443	1					
ANR	6766044	UnaryOperationExpression	& iResult		6764443	0					
ANR	6766045	UnaryOperator	&		6764443	0					
ANR	6766046	Identifier	iResult		6764443	1					
ANR	6766047	Argument	1		6764443	2					
ANR	6766048	PrimaryExpression	1		6764443	0					
ANR	6766049	ElseStatement	else		6764443	0					
ANR	6766050	IfStatement	if ( con -> bpi == 10 && con -> ncomp == 1 )		6764443	0					
ANR	6766051	Condition	con -> bpi == 10 && con -> ncomp == 1	2692:16:92870:92902	6764443	0	True				
ANR	6766052	AndExpression	con -> bpi == 10 && con -> ncomp == 1		6764443	0		&&			
ANR	6766053	EqualityExpression	con -> bpi == 10		6764443	0		==			
ANR	6766054	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6766055	Identifier	con		6764443	0					
ANR	6766056	Identifier	bpi		6764443	1					
ANR	6766057	PrimaryExpression	10		6764443	1					
ANR	6766058	EqualityExpression	con -> ncomp == 1		6764443	1		==			
ANR	6766059	PtrMemberAccess	con -> ncomp		6764443	0					
ANR	6766060	Identifier	con		6764443	0					
ANR	6766061	Identifier	ncomp		6764443	1					
ANR	6766062	PrimaryExpression	1		6764443	1					
ANR	6766063	CompoundStatement		202:8:8452:8452	6764443	1					
ANR	6766064	ForStatement	for ( idx = 0 ; idx < trans ; idx += 1 )		6764443	0					
ANR	6766065	ForInit	idx = 0 ;	2696:17:93128:93135	6764443	0	True				
ANR	6766066	AssignmentExpression	idx = 0		6764443	0		=			
ANR	6766067	Identifier	idx		6764443	0					
ANR	6766068	PrimaryExpression	0		6764443	1					
ANR	6766069	Condition	idx < trans	2696:26:93137:93147	6764443	1	True				
ANR	6766070	RelationalExpression	idx < trans		6764443	0		<			
ANR	6766071	Identifier	idx		6764443	0					
ANR	6766072	Identifier	trans		6764443	1					
ANR	6766073	AssignmentExpression	idx += 1	2696:39:93150:93157	6764443	2	True	+=			
ANR	6766074	Identifier	idx		6764443	0					
ANR	6766075	PrimaryExpression	1		6764443	1					
ANR	6766076	CompoundStatement		206:16:8645:8688	6764443	3					
ANR	6766077	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) con -> buf + idx * dy ;	2697:16:93178:93221	6764443	0	True				
ANR	6766078	IdentifierDecl	* dp = ( uint16_t * ) con -> buf + idx * dy		6764443	0					
ANR	6766079	IdentifierDeclType	uint16_t *		6764443	0					
ANR	6766080	Identifier	dp		6764443	1					
ANR	6766081	AssignmentExpression	* dp = ( uint16_t * ) con -> buf + idx * dy		6764443	2		=			
ANR	6766082	Identifier	dp		6764443	0					
ANR	6766083	AdditiveExpression	( uint16_t * ) con -> buf + idx * dy		6764443	1		+			
ANR	6766084	CastExpression	( uint16_t * ) con -> buf		6764443	0					
ANR	6766085	CastTarget	uint16_t *		6764443	0					
ANR	6766086	PtrMemberAccess	con -> buf		6764443	1					
ANR	6766087	Identifier	con		6764443	0					
ANR	6766088	Identifier	buf		6764443	1					
ANR	6766089	MultiplicativeExpression	idx * dy		6764443	1		*			
ANR	6766090	Identifier	idx		6764443	0					
ANR	6766091	Identifier	dy		6764443	1					
ANR	6766092	ForStatement	for ( jdx = con -> left_pad * con -> ncomp ; jdx < ( con -> wid + con -> left_pad ) * con -> ncomp ; jdx = jdx + con -> ncomp )		6764443	1					
ANR	6766093	ForInit	jdx = con -> left_pad * con -> ncomp ;	2698:20:93259:93289	6764443	0	True				
ANR	6766094	AssignmentExpression	jdx = con -> left_pad * con -> ncomp		6764443	0		=			
ANR	6766095	Identifier	jdx		6764443	0					
ANR	6766096	MultiplicativeExpression	con -> left_pad * con -> ncomp		6764443	1		*			
ANR	6766097	PtrMemberAccess	con -> left_pad		6764443	0					
ANR	6766098	Identifier	con		6764443	0					
ANR	6766099	Identifier	left_pad		6764443	1					
ANR	6766100	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6766101	Identifier	con		6764443	0					
ANR	6766102	Identifier	ncomp		6764443	1					
ANR	6766103	Condition	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp	2698:52:93291:93333	6764443	1	True				
ANR	6766104	RelationalExpression	jdx < ( con -> wid + con -> left_pad ) * con -> ncomp		6764443	0		<			
ANR	6766105	Identifier	jdx		6764443	0					
ANR	6766106	MultiplicativeExpression	( con -> wid + con -> left_pad ) * con -> ncomp		6764443	1		*			
ANR	6766107	AdditiveExpression	con -> wid + con -> left_pad		6764443	0		+			
ANR	6766108	PtrMemberAccess	con -> wid		6764443	0					
ANR	6766109	Identifier	con		6764443	0					
ANR	6766110	Identifier	wid		6764443	1					
ANR	6766111	PtrMemberAccess	con -> left_pad		6764443	1					
ANR	6766112	Identifier	con		6764443	0					
ANR	6766113	Identifier	left_pad		6764443	1					
ANR	6766114	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6766115	Identifier	con		6764443	0					
ANR	6766116	Identifier	ncomp		6764443	1					
ANR	6766117	AssignmentExpression	jdx = jdx + con -> ncomp	2698:97:93336:93357	6764443	2	True	=			
ANR	6766118	Identifier	jdx		6764443	0					
ANR	6766119	AdditiveExpression	jdx + con -> ncomp		6764443	1		+			
ANR	6766120	Identifier	jdx		6764443	0					
ANR	6766121	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6766122	Identifier	con		6764443	0					
ANR	6766123	Identifier	ncomp		6764443	1					
ANR	6766124	CompoundStatement		209:20:8865:8885	6764443	3					
ANR	6766125	IdentifierDeclStatement	uint16_t iResult = 0 ;	2700:20:93398:93418	6764443	0	True				
ANR	6766126	IdentifierDecl	iResult = 0		6764443	0					
ANR	6766127	IdentifierDeclType	uint16_t		6764443	0					
ANR	6766128	Identifier	iResult		6764443	1					
ANR	6766129	AssignmentExpression	iResult = 0		6764443	2		=			
ANR	6766130	Identifier	iResult		6764443	0					
ANR	6766131	PrimaryExpression	0		6764443	1					
ANR	6766132	ExpressionStatement	iResult = ( uint16_t ) dp [ jdx ]	2701:20:93440:93467	6764443	1	True				
ANR	6766133	AssignmentExpression	iResult = ( uint16_t ) dp [ jdx ]		6764443	0		=			
ANR	6766134	Identifier	iResult		6764443	0					
ANR	6766135	CastExpression	( uint16_t ) dp [ jdx ]		6764443	1					
ANR	6766136	CastTarget	uint16_t		6764443	0					
ANR	6766137	ArrayIndexing	dp [ jdx ]		6764443	1					
ANR	6766138	Identifier	dp		6764443	0					
ANR	6766139	Identifier	jdx		6764443	1					
ANR	6766140	ExpressionStatement	"write_uint16 ( con , & iResult , 1 )"	2702:20:93489:93519	6764443	2	True				
ANR	6766141	CallExpression	"write_uint16 ( con , & iResult , 1 )"		6764443	0					
ANR	6766142	Callee	write_uint16		6764443	0					
ANR	6766143	Identifier	write_uint16		6764443	0					
ANR	6766144	ArgumentList	con		6764443	1					
ANR	6766145	Argument	con		6764443	0					
ANR	6766146	Identifier	con		6764443	0					
ANR	6766147	Argument	& iResult		6764443	1					
ANR	6766148	UnaryOperationExpression	& iResult		6764443	0					
ANR	6766149	UnaryOperator	&		6764443	0					
ANR	6766150	Identifier	iResult		6764443	1					
ANR	6766151	Argument	1		6764443	2					
ANR	6766152	PrimaryExpression	1		6764443	0					
ANR	6766153	ElseStatement	else		6764443	0					
ANR	6766154	IfStatement	if ( con -> bpi == 16 )		6764443	0					
ANR	6766155	Condition	con -> bpi == 16	2706:16:93611:93622	6764443	0	True				
ANR	6766156	EqualityExpression	con -> bpi == 16		6764443	0		==			
ANR	6766157	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6766158	Identifier	con		6764443	0					
ANR	6766159	Identifier	bpi		6764443	1					
ANR	6766160	PrimaryExpression	16		6764443	1					
ANR	6766161	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6764443	1					
ANR	6766162	ForInit	idx = first ;	2707:17:93642:93653	6764443	0	True				
ANR	6766163	AssignmentExpression	idx = first		6764443	0		=			
ANR	6766164	Identifier	idx		6764443	0					
ANR	6766165	Identifier	first		6764443	1					
ANR	6766166	Condition	idx < trans	2707:30:93655:93665	6764443	1	True				
ANR	6766167	RelationalExpression	idx < trans		6764443	0		<			
ANR	6766168	Identifier	idx		6764443	0					
ANR	6766169	Identifier	trans		6764443	1					
ANR	6766170	AssignmentExpression	idx += 1	2707:43:93668:93675	6764443	2	True	+=			
ANR	6766171	Identifier	idx		6764443	0					
ANR	6766172	PrimaryExpression	1		6764443	1					
ANR	6766173	CompoundStatement		218:16:9301:9325	6764443	3					
ANR	6766174	IdentifierDeclStatement	uint16_t * dp = ( uint16_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp ;	2708:16:93696:93766	6764443	0	True				
ANR	6766175	IdentifierDecl	* dp = ( uint16_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		6764443	0					
ANR	6766176	IdentifierDeclType	uint16_t *		6764443	0					
ANR	6766177	Identifier	dp		6764443	1					
ANR	6766178	AssignmentExpression	* dp = ( uint16_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		6764443	2		=			
ANR	6766179	Identifier	dp		6764443	0					
ANR	6766180	AdditiveExpression	( uint16_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		6764443	1		+			
ANR	6766181	CastExpression	( uint16_t * ) con -> buf		6764443	0					
ANR	6766182	CastTarget	uint16_t *		6764443	0					
ANR	6766183	PtrMemberAccess	con -> buf		6764443	1					
ANR	6766184	Identifier	con		6764443	0					
ANR	6766185	Identifier	buf		6764443	1					
ANR	6766186	AdditiveExpression	idx * dy + con -> left_pad * con -> ncomp		6764443	1		+			
ANR	6766187	MultiplicativeExpression	idx * dy		6764443	0		*			
ANR	6766188	Identifier	idx		6764443	0					
ANR	6766189	Identifier	dy		6764443	1					
ANR	6766190	MultiplicativeExpression	con -> left_pad * con -> ncomp		6764443	1		*			
ANR	6766191	PtrMemberAccess	con -> left_pad		6764443	0					
ANR	6766192	Identifier	con		6764443	0					
ANR	6766193	Identifier	left_pad		6764443	1					
ANR	6766194	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6766195	Identifier	con		6764443	0					
ANR	6766196	Identifier	ncomp		6764443	1					
ANR	6766197	IdentifierDeclStatement	int padComp = con -> ncomp ;	2709:16:93834:93858	6764443	1	True				
ANR	6766198	IdentifierDecl	padComp = con -> ncomp		6764443	0					
ANR	6766199	IdentifierDeclType	int		6764443	0					
ANR	6766200	Identifier	padComp		6764443	1					
ANR	6766201	AssignmentExpression	padComp = con -> ncomp		6764443	2		=			
ANR	6766202	Identifier	padComp		6764443	0					
ANR	6766203	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6766204	Identifier	con		6764443	0					
ANR	6766205	Identifier	ncomp		6764443	1					
ANR	6766206	IfStatement	if ( con -> padBytes != 0 )		6764443	2					
ANR	6766207	Condition	con -> padBytes != 0	2710:19:93879:93896	6764443	0	True				
ANR	6766208	EqualityExpression	con -> padBytes != 0		6764443	0		!=			
ANR	6766209	PtrMemberAccess	con -> padBytes		6764443	0					
ANR	6766210	Identifier	con		6764443	0					
ANR	6766211	Identifier	padBytes		6764443	1					
ANR	6766212	PrimaryExpression	0		6764443	1					
ANR	6766213	ExpressionStatement	padComp ++	2711:20:93920:93930	6764443	1	True				
ANR	6766214	PostIncDecOperationExpression	padComp ++		6764443	0					
ANR	6766215	Identifier	padComp		6764443	0					
ANR	6766216	IncDec	++		6764443	1					
ANR	6766217	ExpressionStatement	"write_uint16 ( con , dp , con -> wid * padComp )"	2712:16:93948:93988	6764443	3	True				
ANR	6766218	CallExpression	"write_uint16 ( con , dp , con -> wid * padComp )"		6764443	0					
ANR	6766219	Callee	write_uint16		6764443	0					
ANR	6766220	Identifier	write_uint16		6764443	0					
ANR	6766221	ArgumentList	con		6764443	1					
ANR	6766222	Argument	con		6764443	0					
ANR	6766223	Identifier	con		6764443	0					
ANR	6766224	Argument	dp		6764443	1					
ANR	6766225	Identifier	dp		6764443	0					
ANR	6766226	Argument	con -> wid * padComp		6764443	2					
ANR	6766227	MultiplicativeExpression	con -> wid * padComp		6764443	0		*			
ANR	6766228	PtrMemberAccess	con -> wid		6764443	0					
ANR	6766229	Identifier	con		6764443	0					
ANR	6766230	Identifier	wid		6764443	1					
ANR	6766231	Identifier	padComp		6764443	1					
ANR	6766232	ElseStatement	else		6764443	0					
ANR	6766233	IfStatement	if ( con -> bpi == 32 )		6764443	0					
ANR	6766234	Condition	con -> bpi == 32	2714:16:94020:94033	6764443	0	True				
ANR	6766235	EqualityExpression	con -> bpi == 32		6764443	0		==			
ANR	6766236	PtrMemberAccess	con -> bpi		6764443	0					
ANR	6766237	Identifier	con		6764443	0					
ANR	6766238	Identifier	bpi		6764443	1					
ANR	6766239	PrimaryExpression	32		6764443	1					
ANR	6766240	ForStatement	for ( idx = first ; idx < trans ; idx += 1 )		6764443	1					
ANR	6766241	ForInit	idx = first ;	2715:17:94053:94064	6764443	0	True				
ANR	6766242	AssignmentExpression	idx = first		6764443	0		=			
ANR	6766243	Identifier	idx		6764443	0					
ANR	6766244	Identifier	first		6764443	1					
ANR	6766245	Condition	idx < trans	2715:30:94066:94076	6764443	1	True				
ANR	6766246	RelationalExpression	idx < trans		6764443	0		<			
ANR	6766247	Identifier	idx		6764443	0					
ANR	6766248	Identifier	trans		6764443	1					
ANR	6766249	AssignmentExpression	idx += 1	2715:43:94079:94086	6764443	2	True	+=			
ANR	6766250	Identifier	idx		6764443	0					
ANR	6766251	PrimaryExpression	1		6764443	1					
ANR	6766252	CompoundStatement		226:16:9662:9686	6764443	3					
ANR	6766253	IdentifierDeclStatement	uint32_t * dp = ( uint32_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp ;	2716:16:94107:94177	6764443	0	True				
ANR	6766254	IdentifierDecl	* dp = ( uint32_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		6764443	0					
ANR	6766255	IdentifierDeclType	uint32_t *		6764443	0					
ANR	6766256	Identifier	dp		6764443	1					
ANR	6766257	AssignmentExpression	* dp = ( uint32_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		6764443	2		=			
ANR	6766258	Identifier	dp		6764443	0					
ANR	6766259	AdditiveExpression	( uint32_t * ) con -> buf + idx * dy + con -> left_pad * con -> ncomp		6764443	1		+			
ANR	6766260	CastExpression	( uint32_t * ) con -> buf		6764443	0					
ANR	6766261	CastTarget	uint32_t *		6764443	0					
ANR	6766262	PtrMemberAccess	con -> buf		6764443	1					
ANR	6766263	Identifier	con		6764443	0					
ANR	6766264	Identifier	buf		6764443	1					
ANR	6766265	AdditiveExpression	idx * dy + con -> left_pad * con -> ncomp		6764443	1		+			
ANR	6766266	MultiplicativeExpression	idx * dy		6764443	0		*			
ANR	6766267	Identifier	idx		6764443	0					
ANR	6766268	Identifier	dy		6764443	1					
ANR	6766269	MultiplicativeExpression	con -> left_pad * con -> ncomp		6764443	1		*			
ANR	6766270	PtrMemberAccess	con -> left_pad		6764443	0					
ANR	6766271	Identifier	con		6764443	0					
ANR	6766272	Identifier	left_pad		6764443	1					
ANR	6766273	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6766274	Identifier	con		6764443	0					
ANR	6766275	Identifier	ncomp		6764443	1					
ANR	6766276	IdentifierDeclStatement	int padComp = con -> ncomp ;	2717:16:94195:94219	6764443	1	True				
ANR	6766277	IdentifierDecl	padComp = con -> ncomp		6764443	0					
ANR	6766278	IdentifierDeclType	int		6764443	0					
ANR	6766279	Identifier	padComp		6764443	1					
ANR	6766280	AssignmentExpression	padComp = con -> ncomp		6764443	2		=			
ANR	6766281	Identifier	padComp		6764443	0					
ANR	6766282	PtrMemberAccess	con -> ncomp		6764443	1					
ANR	6766283	Identifier	con		6764443	0					
ANR	6766284	Identifier	ncomp		6764443	1					
ANR	6766285	IfStatement	if ( con -> padBytes != 0 )		6764443	2					
ANR	6766286	Condition	con -> padBytes != 0	2718:19:94240:94257	6764443	0	True				
ANR	6766287	EqualityExpression	con -> padBytes != 0		6764443	0		!=			
ANR	6766288	PtrMemberAccess	con -> padBytes		6764443	0					
ANR	6766289	Identifier	con		6764443	0					
ANR	6766290	Identifier	padBytes		6764443	1					
ANR	6766291	PrimaryExpression	0		6764443	1					
ANR	6766292	ExpressionStatement	padComp ++	2719:20:94281:94291	6764443	1	True				
ANR	6766293	PostIncDecOperationExpression	padComp ++		6764443	0					
ANR	6766294	Identifier	padComp		6764443	0					
ANR	6766295	IncDec	++		6764443	1					
ANR	6766296	ExpressionStatement	"write_uint32 ( con , dp , con -> wid * padComp )"	2720:16:94309:94349	6764443	3	True				
ANR	6766297	CallExpression	"write_uint32 ( con , dp , con -> wid * padComp )"		6764443	0					
ANR	6766298	Callee	write_uint32		6764443	0					
ANR	6766299	Identifier	write_uint32		6764443	0					
ANR	6766300	ArgumentList	con		6764443	1					
ANR	6766301	Argument	con		6764443	0					
ANR	6766302	Identifier	con		6764443	0					
ANR	6766303	Argument	dp		6764443	1					
ANR	6766304	Identifier	dp		6764443	0					
ANR	6766305	Argument	con -> wid * padComp		6764443	2					
ANR	6766306	MultiplicativeExpression	con -> wid * padComp		6764443	0		*			
ANR	6766307	PtrMemberAccess	con -> wid		6764443	0					
ANR	6766308	Identifier	con		6764443	0					
ANR	6766309	Identifier	wid		6764443	1					
ANR	6766310	Identifier	padComp		6764443	1					
ANR	6766311	ElseStatement	else		6764443	0					
ANR	6766312	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2723:12:94390:94423	6764443	0	True				
ANR	6766313	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		6764443	0					
ANR	6766314	Callee	assert		6764443	0					
ANR	6766315	Identifier	assert		6764443	0					
ANR	6766316	ArgumentList	"! ""Unsupported bitdepth\\n"""		6764443	1					
ANR	6766317	Argument	"! ""Unsupported bitdepth\\n"""		6764443	0					
ANR	6766318	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		6764443	0					
ANR	6766319	UnaryOperator	!		6764443	0					
ANR	6766320	PrimaryExpression	"""Unsupported bitdepth\\n"""		6764443	1					
ANR	6766321	ReturnType	void		6764443	1					
ANR	6766322	Identifier	write_file		6764443	2					
ANR	6766323	ParameterList	"jxr_image_t image , int mx , int my , int * data"		6764443	3					
ANR	6766324	Parameter	jxr_image_t image	2491:16:84487:84503	6764443	0	True				
ANR	6766325	ParameterType	jxr_image_t		6764443	0					
ANR	6766326	Identifier	image		6764443	1					
ANR	6766327	Parameter	int mx	2491:35:84506:84511	6764443	1	True				
ANR	6766328	ParameterType	int		6764443	0					
ANR	6766329	Identifier	mx		6764443	1					
ANR	6766330	Parameter	int my	2491:43:84514:84519	6764443	2	True				
ANR	6766331	ParameterType	int		6764443	0					
ANR	6766332	Identifier	my		6764443	1					
ANR	6766333	Parameter	int * data	2491:51:84522:84529	6764443	3	True				
ANR	6766334	ParameterType	int *		6764443	0					
ANR	6766335	Identifier	data		6764443	1					
ANR	6766336	CFGEntryNode	ENTRY		6764443		True				
ANR	6766337	CFGExitNode	EXIT		6764443		True				
ANR	6766338	Symbol	JXR_BD1BLACK1		6764443						
ANR	6766339	Symbol	con		6764443						
ANR	6766340	Symbol	& iResult		6764443						
ANR	6766341	Symbol	data		6764443						
ANR	6766342	Symbol	con -> ncomp		6764443						
ANR	6766343	Symbol	strip_blocks		6764443						
ANR	6766344	Symbol	JXRC_FMT_32bppRGBE		6764443						
ANR	6766345	Symbol	dp		6764443						
ANR	6766346	Symbol	* six		6764443						
ANR	6766347	Symbol	isOutputYUV444		6764443						
ANR	6766348	Symbol	dix		6764443						
ANR	6766349	Symbol	image -> window_extra_top		6764443						
ANR	6766350	Symbol	dy		6764443						
ANR	6766351	Symbol	con -> bpi		6764443						
ANR	6766352	Symbol	* buff		6764443						
ANR	6766353	Symbol	jxr_get_pixel_format		6764443						
ANR	6766354	Symbol	con -> isBgr		6764443						
ANR	6766355	Symbol	jxr_get_ALPHACHANNEL_FLAG		6764443						
ANR	6766356	Symbol	jxr_get_EXTENDED_IMAGE_HEIGHT		6764443						
ANR	6766357	Symbol	jxr_get_IMAGE_CHANNELS		6764443						
ANR	6766358	Symbol	con -> wid		6764443						
ANR	6766359	Symbol	image		6764443						
ANR	6766360	Symbol	* pl		6764443						
ANR	6766361	Symbol	padComp		6764443						
ANR	6766362	Symbol	con -> hei		6764443						
ANR	6766363	Symbol	mx		6764443						
ANR	6766364	Symbol	my		6764443						
ANR	6766365	Symbol	con -> top_pad		6764443						
ANR	6766366	Symbol	isOutputCMYKDirect		6764443						
ANR	6766367	Symbol	channels		6764443						
ANR	6766368	Symbol	con -> top_pad_remaining		6764443						
ANR	6766369	Symbol	idx		6764443						
ANR	6766370	Symbol	con -> buf		6764443						
ANR	6766371	Symbol	* image		6764443						
ANR	6766372	Symbol	trans		6764443						
ANR	6766373	Symbol	* dix		6764443						
ANR	6766374	Symbol	jxr_get_user_data		6764443						
ANR	6766375	Symbol	iResult		6764443						
ANR	6766376	Symbol	con -> left_pad		6764443						
ANR	6766377	Symbol	jxr_get_IMAGE_HEIGHT		6764443						
ANR	6766378	Symbol	isOutputYUV422		6764443						
ANR	6766379	Symbol	* dp		6764443						
ANR	6766380	Symbol	* con		6764443						
ANR	6766381	Symbol	isOutputYUV420		6764443						
ANR	6766382	Symbol	con -> padBytes		6764443						
ANR	6766383	Symbol	end		6764443						
ANR	6766384	Symbol	jxr_get_OUTPUT_BITDEPTH		6764443						
ANR	6766385	Symbol	jxr_get_IMAGE_WIDTH		6764443						
ANR	6766386	Symbol	image -> window_extra_left		6764443						
ANR	6766387	Symbol	con -> file		6764443						
ANR	6766388	Symbol	six		6764443						
ANR	6766389	Symbol	* jdx		6764443						
ANR	6766390	Symbol	image -> extended_width		6764443						
ANR	6766391	Symbol	jxr_get_EXTENDED_IMAGE_WIDTH		6764443						
ANR	6766392	Symbol	con -> alpha		6764443						
ANR	6766393	Symbol	pl		6764443						
ANR	6766394	Symbol	* data		6764443						
ANR	6766395	Symbol	buff		6764443						
ANR	6766396	Symbol	first		6764443						
ANR	6766397	Symbol	jdx		6764443						
ANR	6766398	Function	concatenate_primary_alpha	2728:0:94435:95501							
ANR	6766399	FunctionDef	"concatenate_primary_alpha (jxr_image_t image , FILE * fpPrimary , FILE * fpAlpha)"		6766398	0					
ANR	6766400	CompoundStatement		2729:0:94517:95501	6766398	0					
ANR	6766401	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	2730:4:94523:94573	6766398	0	True				
ANR	6766402	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		6766398	0					
ANR	6766403	IdentifierDeclType	context *		6766398	0					
ANR	6766404	Identifier	con		6766398	1					
ANR	6766405	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		6766398	2		=			
ANR	6766406	Identifier	con		6766398	0					
ANR	6766407	CastExpression	( context * ) jxr_get_user_data ( image )		6766398	1					
ANR	6766408	CastTarget	context *		6766398	0					
ANR	6766409	CallExpression	jxr_get_user_data ( image )		6766398	1					
ANR	6766410	Callee	jxr_get_user_data		6766398	0					
ANR	6766411	Identifier	jxr_get_user_data		6766398	0					
ANR	6766412	ArgumentList	image		6766398	1					
ANR	6766413	Argument	image		6766398	0					
ANR	6766414	Identifier	image		6766398	0					
ANR	6766415	IfStatement	if ( con -> file == 0 )		6766398	1					
ANR	6766416	Condition	con -> file == 0	2731:8:94583:94594	6766398	0	True				
ANR	6766417	EqualityExpression	con -> file == 0		6766398	0		==			
ANR	6766418	PtrMemberAccess	con -> file		6766398	0					
ANR	6766419	Identifier	con		6766398	0					
ANR	6766420	Identifier	file		6766398	1					
ANR	6766421	PrimaryExpression	0		6766398	1					
ANR	6766422	CompoundStatement		4:4:83:83	6766398	1					
ANR	6766423	ExpressionStatement	"set_pad_bytes ( con , image )"	2733:8:94611:94636	6766398	0	True				
ANR	6766424	CallExpression	"set_pad_bytes ( con , image )"		6766398	0					
ANR	6766425	Callee	set_pad_bytes		6766398	0					
ANR	6766426	Identifier	set_pad_bytes		6766398	0					
ANR	6766427	ArgumentList	con		6766398	1					
ANR	6766428	Argument	con		6766398	0					
ANR	6766429	Identifier	con		6766398	0					
ANR	6766430	Argument	image		6766398	1					
ANR	6766431	Identifier	image		6766398	0					
ANR	6766432	ExpressionStatement	con -> alpha = 1	2735:8:94698:94712	6766398	1	True				
ANR	6766433	AssignmentExpression	con -> alpha = 1		6766398	0		=			
ANR	6766434	PtrMemberAccess	con -> alpha		6766398	0					
ANR	6766435	Identifier	con		6766398	0					
ANR	6766436	Identifier	alpha		6766398	1					
ANR	6766437	PrimaryExpression	1		6766398	1					
ANR	6766438	ExpressionStatement	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_CHANNELS ( image ) + 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2736:8:94730:95005	6766398	2	True				
ANR	6766439	CallExpression	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_CHANNELS ( image ) + 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		6766398	0					
ANR	6766440	Callee	start_output_file		6766398	0					
ANR	6766441	Identifier	start_output_file		6766398	0					
ANR	6766442	ArgumentList	con		6766398	1					
ANR	6766443	Argument	con		6766398	0					
ANR	6766444	Identifier	con		6766398	0					
ANR	6766445	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6766398	1					
ANR	6766446	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6766398	0					
ANR	6766447	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		6766398	0					
ANR	6766448	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		6766398	0					
ANR	6766449	ArgumentList	image		6766398	1					
ANR	6766450	Argument	image		6766398	0					
ANR	6766451	Identifier	image		6766398	0					
ANR	6766452	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6766398	2					
ANR	6766453	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6766398	0					
ANR	6766454	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		6766398	0					
ANR	6766455	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		6766398	0					
ANR	6766456	ArgumentList	image		6766398	1					
ANR	6766457	Argument	image		6766398	0					
ANR	6766458	Identifier	image		6766398	0					
ANR	6766459	Argument	jxr_get_IMAGE_WIDTH ( image )		6766398	3					
ANR	6766460	CallExpression	jxr_get_IMAGE_WIDTH ( image )		6766398	0					
ANR	6766461	Callee	jxr_get_IMAGE_WIDTH		6766398	0					
ANR	6766462	Identifier	jxr_get_IMAGE_WIDTH		6766398	0					
ANR	6766463	ArgumentList	image		6766398	1					
ANR	6766464	Argument	image		6766398	0					
ANR	6766465	Identifier	image		6766398	0					
ANR	6766466	Argument	jxr_get_IMAGE_HEIGHT ( image )		6766398	4					
ANR	6766467	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		6766398	0					
ANR	6766468	Callee	jxr_get_IMAGE_HEIGHT		6766398	0					
ANR	6766469	Identifier	jxr_get_IMAGE_HEIGHT		6766398	0					
ANR	6766470	ArgumentList	image		6766398	1					
ANR	6766471	Argument	image		6766398	0					
ANR	6766472	Identifier	image		6766398	0					
ANR	6766473	Argument	jxr_get_IMAGE_CHANNELS ( image ) + 1		6766398	5					
ANR	6766474	AdditiveExpression	jxr_get_IMAGE_CHANNELS ( image ) + 1		6766398	0		+			
ANR	6766475	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		6766398	0					
ANR	6766476	Callee	jxr_get_IMAGE_CHANNELS		6766398	0					
ANR	6766477	Identifier	jxr_get_IMAGE_CHANNELS		6766398	0					
ANR	6766478	ArgumentList	image		6766398	1					
ANR	6766479	Argument	image		6766398	0					
ANR	6766480	Identifier	image		6766398	0					
ANR	6766481	PrimaryExpression	1		6766398	1					
ANR	6766482	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6766398	6					
ANR	6766483	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6766398	0					
ANR	6766484	Callee	jxr_get_OUTPUT_BITDEPTH		6766398	0					
ANR	6766485	Identifier	jxr_get_OUTPUT_BITDEPTH		6766398	0					
ANR	6766486	ArgumentList	image		6766398	1					
ANR	6766487	Argument	image		6766398	0					
ANR	6766488	Identifier	image		6766398	0					
ANR	6766489	Argument	jxr_get_pixel_format ( image )		6766398	7					
ANR	6766490	CallExpression	jxr_get_pixel_format ( image )		6766398	0					
ANR	6766491	Callee	jxr_get_pixel_format		6766398	0					
ANR	6766492	Identifier	jxr_get_pixel_format		6766398	0					
ANR	6766493	ArgumentList	image		6766398	1					
ANR	6766494	Argument	image		6766398	0					
ANR	6766495	Identifier	image		6766398	0					
ANR	6766496	ExpressionStatement	"fseek ( fpPrimary , 0 , SEEK_END )"	2740:4:95017:95046	6766398	2	True				
ANR	6766497	CallExpression	"fseek ( fpPrimary , 0 , SEEK_END )"		6766398	0					
ANR	6766498	Callee	fseek		6766398	0					
ANR	6766499	Identifier	fseek		6766398	0					
ANR	6766500	ArgumentList	fpPrimary		6766398	1					
ANR	6766501	Argument	fpPrimary		6766398	0					
ANR	6766502	Identifier	fpPrimary		6766398	0					
ANR	6766503	Argument	0		6766398	1					
ANR	6766504	PrimaryExpression	0		6766398	0					
ANR	6766505	Argument	SEEK_END		6766398	2					
ANR	6766506	Identifier	SEEK_END		6766398	0					
ANR	6766507	IdentifierDeclStatement	long size = ftell ( fpPrimary ) ;	2741:4:95052:95080	6766398	3	True				
ANR	6766508	IdentifierDecl	size = ftell ( fpPrimary )		6766398	0					
ANR	6766509	IdentifierDeclType	long		6766398	0					
ANR	6766510	Identifier	size		6766398	1					
ANR	6766511	AssignmentExpression	size = ftell ( fpPrimary )		6766398	2		=			
ANR	6766512	Identifier	size		6766398	0					
ANR	6766513	CallExpression	ftell ( fpPrimary )		6766398	1					
ANR	6766514	Callee	ftell		6766398	0					
ANR	6766515	Identifier	ftell		6766398	0					
ANR	6766516	ArgumentList	fpPrimary		6766398	1					
ANR	6766517	Argument	fpPrimary		6766398	0					
ANR	6766518	Identifier	fpPrimary		6766398	0					
ANR	6766519	ExpressionStatement	"fseek ( fpPrimary , 0 , SEEK_SET )"	2742:4:95086:95115	6766398	4	True				
ANR	6766520	CallExpression	"fseek ( fpPrimary , 0 , SEEK_SET )"		6766398	0					
ANR	6766521	Callee	fseek		6766398	0					
ANR	6766522	Identifier	fseek		6766398	0					
ANR	6766523	ArgumentList	fpPrimary		6766398	1					
ANR	6766524	Argument	fpPrimary		6766398	0					
ANR	6766525	Identifier	fpPrimary		6766398	0					
ANR	6766526	Argument	0		6766398	1					
ANR	6766527	PrimaryExpression	0		6766398	0					
ANR	6766528	Argument	SEEK_SET		6766398	2					
ANR	6766529	Identifier	SEEK_SET		6766398	0					
ANR	6766530	IdentifierDeclStatement	long i ;	2743:4:95121:95127	6766398	5	True				
ANR	6766531	IdentifierDecl	i		6766398	0					
ANR	6766532	IdentifierDeclType	long		6766398	0					
ANR	6766533	Identifier	i		6766398	1					
ANR	6766534	ForStatement	for ( i = 0 ; i < size ; i ++ )		6766398	6					
ANR	6766535	ForInit	i = 0 ;	2744:8:95137:95142	6766398	0	True				
ANR	6766536	AssignmentExpression	i = 0		6766398	0		=			
ANR	6766537	Identifier	i		6766398	0					
ANR	6766538	PrimaryExpression	0		6766398	1					
ANR	6766539	Condition	i < size	2744:15:95144:95151	6766398	1	True				
ANR	6766540	RelationalExpression	i < size		6766398	0		<			
ANR	6766541	Identifier	i		6766398	0					
ANR	6766542	Identifier	size		6766398	1					
ANR	6766543	PostIncDecOperationExpression	i ++	2744:25:95154:95156	6766398	2	True				
ANR	6766544	Identifier	i		6766398	0					
ANR	6766545	IncDec	++		6766398	1					
ANR	6766546	CompoundStatement		18:8:655:666	6766398	3					
ANR	6766547	IdentifierDeclStatement	uint8_t val ;	2746:8:95173:95184	6766398	0	True				
ANR	6766548	IdentifierDecl	val		6766398	0					
ANR	6766549	IdentifierDeclType	uint8_t		6766398	0					
ANR	6766550	Identifier	val		6766398	1					
ANR	6766551	ExpressionStatement	"fread ( & val , 1 , 1 , fpPrimary )"	2747:8:95194:95222	6766398	1	True				
ANR	6766552	CallExpression	"fread ( & val , 1 , 1 , fpPrimary )"		6766398	0					
ANR	6766553	Callee	fread		6766398	0					
ANR	6766554	Identifier	fread		6766398	0					
ANR	6766555	ArgumentList	& val		6766398	1					
ANR	6766556	Argument	& val		6766398	0					
ANR	6766557	UnaryOperationExpression	& val		6766398	0					
ANR	6766558	UnaryOperator	&		6766398	0					
ANR	6766559	Identifier	val		6766398	1					
ANR	6766560	Argument	1		6766398	1					
ANR	6766561	PrimaryExpression	1		6766398	0					
ANR	6766562	Argument	1		6766398	2					
ANR	6766563	PrimaryExpression	1		6766398	0					
ANR	6766564	Argument	fpPrimary		6766398	3					
ANR	6766565	Identifier	fpPrimary		6766398	0					
ANR	6766566	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2748:8:95232:95261	6766398	2	True				
ANR	6766567	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		6766398	0					
ANR	6766568	Callee	fwrite		6766398	0					
ANR	6766569	Identifier	fwrite		6766398	0					
ANR	6766570	ArgumentList	& val		6766398	1					
ANR	6766571	Argument	& val		6766398	0					
ANR	6766572	UnaryOperationExpression	& val		6766398	0					
ANR	6766573	UnaryOperator	&		6766398	0					
ANR	6766574	Identifier	val		6766398	1					
ANR	6766575	Argument	1		6766398	1					
ANR	6766576	PrimaryExpression	1		6766398	0					
ANR	6766577	Argument	1		6766398	2					
ANR	6766578	PrimaryExpression	1		6766398	0					
ANR	6766579	Argument	con -> file		6766398	3					
ANR	6766580	PtrMemberAccess	con -> file		6766398	0					
ANR	6766581	Identifier	con		6766398	0					
ANR	6766582	Identifier	file		6766398	1					
ANR	6766583	ExpressionStatement	"fseek ( fpAlpha , 0 , SEEK_END )"	2750:4:95273:95300	6766398	7	True				
ANR	6766584	CallExpression	"fseek ( fpAlpha , 0 , SEEK_END )"		6766398	0					
ANR	6766585	Callee	fseek		6766398	0					
ANR	6766586	Identifier	fseek		6766398	0					
ANR	6766587	ArgumentList	fpAlpha		6766398	1					
ANR	6766588	Argument	fpAlpha		6766398	0					
ANR	6766589	Identifier	fpAlpha		6766398	0					
ANR	6766590	Argument	0		6766398	1					
ANR	6766591	PrimaryExpression	0		6766398	0					
ANR	6766592	Argument	SEEK_END		6766398	2					
ANR	6766593	Identifier	SEEK_END		6766398	0					
ANR	6766594	ExpressionStatement	size = ftell ( fpAlpha )	2751:4:95306:95327	6766398	8	True				
ANR	6766595	AssignmentExpression	size = ftell ( fpAlpha )		6766398	0		=			
ANR	6766596	Identifier	size		6766398	0					
ANR	6766597	CallExpression	ftell ( fpAlpha )		6766398	1					
ANR	6766598	Callee	ftell		6766398	0					
ANR	6766599	Identifier	ftell		6766398	0					
ANR	6766600	ArgumentList	fpAlpha		6766398	1					
ANR	6766601	Argument	fpAlpha		6766398	0					
ANR	6766602	Identifier	fpAlpha		6766398	0					
ANR	6766603	ExpressionStatement	"fseek ( fpAlpha , 0 , SEEK_SET )"	2752:4:95333:95360	6766398	9	True				
ANR	6766604	CallExpression	"fseek ( fpAlpha , 0 , SEEK_SET )"		6766398	0					
ANR	6766605	Callee	fseek		6766398	0					
ANR	6766606	Identifier	fseek		6766398	0					
ANR	6766607	ArgumentList	fpAlpha		6766398	1					
ANR	6766608	Argument	fpAlpha		6766398	0					
ANR	6766609	Identifier	fpAlpha		6766398	0					
ANR	6766610	Argument	0		6766398	1					
ANR	6766611	PrimaryExpression	0		6766398	0					
ANR	6766612	Argument	SEEK_SET		6766398	2					
ANR	6766613	Identifier	SEEK_SET		6766398	0					
ANR	6766614	ForStatement	for ( i = 0 ; i < size ; i ++ )		6766398	10					
ANR	6766615	ForInit	i = 0 ;	2753:8:95370:95375	6766398	0	True				
ANR	6766616	AssignmentExpression	i = 0		6766398	0		=			
ANR	6766617	Identifier	i		6766398	0					
ANR	6766618	PrimaryExpression	0		6766398	1					
ANR	6766619	Condition	i < size	2753:15:95377:95384	6766398	1	True				
ANR	6766620	RelationalExpression	i < size		6766398	0		<			
ANR	6766621	Identifier	i		6766398	0					
ANR	6766622	Identifier	size		6766398	1					
ANR	6766623	PostIncDecOperationExpression	i ++	2753:25:95387:95389	6766398	2	True				
ANR	6766624	Identifier	i		6766398	0					
ANR	6766625	IncDec	++		6766398	1					
ANR	6766626	CompoundStatement		27:8:888:899	6766398	3					
ANR	6766627	IdentifierDeclStatement	uint8_t val ;	2755:8:95406:95417	6766398	0	True				
ANR	6766628	IdentifierDecl	val		6766398	0					
ANR	6766629	IdentifierDeclType	uint8_t		6766398	0					
ANR	6766630	Identifier	val		6766398	1					
ANR	6766631	ExpressionStatement	"fread ( & val , 1 , 1 , fpAlpha )"	2756:8:95427:95453	6766398	1	True				
ANR	6766632	CallExpression	"fread ( & val , 1 , 1 , fpAlpha )"		6766398	0					
ANR	6766633	Callee	fread		6766398	0					
ANR	6766634	Identifier	fread		6766398	0					
ANR	6766635	ArgumentList	& val		6766398	1					
ANR	6766636	Argument	& val		6766398	0					
ANR	6766637	UnaryOperationExpression	& val		6766398	0					
ANR	6766638	UnaryOperator	&		6766398	0					
ANR	6766639	Identifier	val		6766398	1					
ANR	6766640	Argument	1		6766398	1					
ANR	6766641	PrimaryExpression	1		6766398	0					
ANR	6766642	Argument	1		6766398	2					
ANR	6766643	PrimaryExpression	1		6766398	0					
ANR	6766644	Argument	fpAlpha		6766398	3					
ANR	6766645	Identifier	fpAlpha		6766398	0					
ANR	6766646	ExpressionStatement	"fwrite ( & val , 1 , 1 , con -> file )"	2757:8:95463:95492	6766398	2	True				
ANR	6766647	CallExpression	"fwrite ( & val , 1 , 1 , con -> file )"		6766398	0					
ANR	6766648	Callee	fwrite		6766398	0					
ANR	6766649	Identifier	fwrite		6766398	0					
ANR	6766650	ArgumentList	& val		6766398	1					
ANR	6766651	Argument	& val		6766398	0					
ANR	6766652	UnaryOperationExpression	& val		6766398	0					
ANR	6766653	UnaryOperator	&		6766398	0					
ANR	6766654	Identifier	val		6766398	1					
ANR	6766655	Argument	1		6766398	1					
ANR	6766656	PrimaryExpression	1		6766398	0					
ANR	6766657	Argument	1		6766398	2					
ANR	6766658	PrimaryExpression	1		6766398	0					
ANR	6766659	Argument	con -> file		6766398	3					
ANR	6766660	PtrMemberAccess	con -> file		6766398	0					
ANR	6766661	Identifier	con		6766398	0					
ANR	6766662	Identifier	file		6766398	1					
ANR	6766663	ReturnType	void		6766398	1					
ANR	6766664	Identifier	concatenate_primary_alpha		6766398	2					
ANR	6766665	ParameterList	"jxr_image_t image , FILE * fpPrimary , FILE * fpAlpha"		6766398	3					
ANR	6766666	Parameter	jxr_image_t image	2728:31:94466:94482	6766398	0	True				
ANR	6766667	ParameterType	jxr_image_t		6766398	0					
ANR	6766668	Identifier	image		6766398	1					
ANR	6766669	Parameter	FILE * fpPrimary	2728:50:94485:94499	6766398	1	True				
ANR	6766670	ParameterType	FILE *		6766398	0					
ANR	6766671	Identifier	fpPrimary		6766398	1					
ANR	6766672	Parameter	FILE * fpAlpha	2728:67:94502:94514	6766398	2	True				
ANR	6766673	ParameterType	FILE *		6766398	0					
ANR	6766674	Identifier	fpAlpha		6766398	1					
ANR	6766675	CFGEntryNode	ENTRY		6766398		True				
ANR	6766676	CFGExitNode	EXIT		6766398		True				
ANR	6766677	Symbol	SEEK_SET		6766398						
ANR	6766678	Symbol	val		6766398						
ANR	6766679	Symbol	& val		6766398						
ANR	6766680	Symbol	image		6766398						
ANR	6766681	Symbol	con		6766398						
ANR	6766682	Symbol	con -> file		6766398						
ANR	6766683	Symbol	jxr_get_user_data		6766398						
ANR	6766684	Symbol	ftell		6766398						
ANR	6766685	Symbol	fpPrimary		6766398						
ANR	6766686	Symbol	i		6766398						
ANR	6766687	Symbol	SEEK_END		6766398						
ANR	6766688	Symbol	jxr_get_IMAGE_HEIGHT		6766398						
ANR	6766689	Symbol	* con		6766398						
ANR	6766690	Symbol	size		6766398						
ANR	6766691	Symbol	fpAlpha		6766398						
ANR	6766692	Symbol	jxr_get_pixel_format		6766398						
ANR	6766693	Symbol	jxr_get_EXTENDED_IMAGE_WIDTH		6766398						
ANR	6766694	Symbol	con -> alpha		6766398						
ANR	6766695	Symbol	jxr_get_EXTENDED_IMAGE_HEIGHT		6766398						
ANR	6766696	Symbol	jxr_get_IMAGE_CHANNELS		6766398						
ANR	6766697	Symbol	jxr_get_OUTPUT_BITDEPTH		6766398						
ANR	6766698	Symbol	jxr_get_IMAGE_WIDTH		6766398						
ANR	6766699	Function	write_file_combine_primary_alpha	2763:0:95506:97690							
ANR	6766700	FunctionDef	"write_file_combine_primary_alpha (jxr_image_t image , FILE * fpPrimary , FILE * fpAlpha)"		6766699	0					
ANR	6766701	CompoundStatement		2764:0:95595:97690	6766699	0					
ANR	6766702	IdentifierDeclStatement	context * con = ( context * ) jxr_get_user_data ( image ) ;	2765:4:95601:95651	6766699	0	True				
ANR	6766703	IdentifierDecl	* con = ( context * ) jxr_get_user_data ( image )		6766699	0					
ANR	6766704	IdentifierDeclType	context *		6766699	0					
ANR	6766705	Identifier	con		6766699	1					
ANR	6766706	AssignmentExpression	* con = ( context * ) jxr_get_user_data ( image )		6766699	2		=			
ANR	6766707	Identifier	con		6766699	0					
ANR	6766708	CastExpression	( context * ) jxr_get_user_data ( image )		6766699	1					
ANR	6766709	CastTarget	context *		6766699	0					
ANR	6766710	CallExpression	jxr_get_user_data ( image )		6766699	1					
ANR	6766711	Callee	jxr_get_user_data		6766699	0					
ANR	6766712	Identifier	jxr_get_user_data		6766699	0					
ANR	6766713	ArgumentList	image		6766699	1					
ANR	6766714	Argument	image		6766699	0					
ANR	6766715	Identifier	image		6766699	0					
ANR	6766716	IdentifierDeclStatement	int i ;	2766:4:95657:95662	6766699	1	True				
ANR	6766717	IdentifierDecl	i		6766699	0					
ANR	6766718	IdentifierDeclType	int		6766699	0					
ANR	6766719	Identifier	i		6766699	1					
ANR	6766720	IfStatement	if ( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image ) )		6766699	2					
ANR	6766721	Condition	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )	2768:7:95672:95771	6766699	0	True				
ANR	6766722	OrExpression	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		6766699	0		||			
ANR	6766723	CallExpression	isOutputYUV444 ( image )		6766699	0					
ANR	6766724	Callee	isOutputYUV444		6766699	0					
ANR	6766725	Identifier	isOutputYUV444		6766699	0					
ANR	6766726	ArgumentList	image		6766699	1					
ANR	6766727	Argument	image		6766699	0					
ANR	6766728	Identifier	image		6766699	0					
ANR	6766729	OrExpression	isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		6766699	1		||			
ANR	6766730	CallExpression	isOutputYUV422 ( image )		6766699	0					
ANR	6766731	Callee	isOutputYUV422		6766699	0					
ANR	6766732	Identifier	isOutputYUV422		6766699	0					
ANR	6766733	ArgumentList	image		6766699	1					
ANR	6766734	Argument	image		6766699	0					
ANR	6766735	Identifier	image		6766699	0					
ANR	6766736	OrExpression	isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		6766699	1		||			
ANR	6766737	CallExpression	isOutputYUV420 ( image )		6766699	0					
ANR	6766738	Callee	isOutputYUV420		6766699	0					
ANR	6766739	Identifier	isOutputYUV420		6766699	0					
ANR	6766740	ArgumentList	image		6766699	1					
ANR	6766741	Argument	image		6766699	0					
ANR	6766742	Identifier	image		6766699	0					
ANR	6766743	CallExpression	isOutputCMYKDirect ( image )		6766699	1					
ANR	6766744	Callee	isOutputCMYKDirect		6766699	0					
ANR	6766745	Identifier	isOutputCMYKDirect		6766699	0					
ANR	6766746	ArgumentList	image		6766699	1					
ANR	6766747	Argument	image		6766699	0					
ANR	6766748	Identifier	image		6766699	0					
ANR	6766749	CompoundStatement		6:4:182:182	6766699	1					
ANR	6766750	ExpressionStatement	"concatenate_primary_alpha ( image , fpPrimary , fpAlpha )"	2770:8:95788:95840	6766699	0	True				
ANR	6766751	CallExpression	"concatenate_primary_alpha ( image , fpPrimary , fpAlpha )"		6766699	0					
ANR	6766752	Callee	concatenate_primary_alpha		6766699	0					
ANR	6766753	Identifier	concatenate_primary_alpha		6766699	0					
ANR	6766754	ArgumentList	image		6766699	1					
ANR	6766755	Argument	image		6766699	0					
ANR	6766756	Identifier	image		6766699	0					
ANR	6766757	Argument	fpPrimary		6766699	1					
ANR	6766758	Identifier	fpPrimary		6766699	0					
ANR	6766759	Argument	fpAlpha		6766699	2					
ANR	6766760	Identifier	fpAlpha		6766699	0					
ANR	6766761	ReturnStatement	return ;	2771:8:95850:95856	6766699	1	True				
ANR	6766762	IfStatement	if ( con -> file == 0 )		6766699	3					
ANR	6766763	Condition	con -> file == 0	2773:8:95872:95883	6766699	0	True				
ANR	6766764	EqualityExpression	con -> file == 0		6766699	0		==			
ANR	6766765	PtrMemberAccess	con -> file		6766699	0					
ANR	6766766	Identifier	con		6766699	0					
ANR	6766767	Identifier	file		6766699	1					
ANR	6766768	PrimaryExpression	0		6766699	1					
ANR	6766769	CompoundStatement		11:4:294:294	6766699	1					
ANR	6766770	ExpressionStatement	"set_pad_bytes ( con , image )"	2775:8:95900:95925	6766699	0	True				
ANR	6766771	CallExpression	"set_pad_bytes ( con , image )"		6766699	0					
ANR	6766772	Callee	set_pad_bytes		6766699	0					
ANR	6766773	Identifier	set_pad_bytes		6766699	0					
ANR	6766774	ArgumentList	con		6766699	1					
ANR	6766775	Argument	con		6766699	0					
ANR	6766776	Identifier	con		6766699	0					
ANR	6766777	Argument	image		6766699	1					
ANR	6766778	Identifier	image		6766699	0					
ANR	6766779	ExpressionStatement	con -> alpha = 1	2777:8:95987:96001	6766699	1	True				
ANR	6766780	AssignmentExpression	con -> alpha = 1		6766699	0		=			
ANR	6766781	PtrMemberAccess	con -> alpha		6766699	0					
ANR	6766782	Identifier	con		6766699	0					
ANR	6766783	Identifier	alpha		6766699	1					
ANR	6766784	PrimaryExpression	1		6766699	1					
ANR	6766785	ExpressionStatement	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_CHANNELS ( image ) + 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"	2778:8:96019:96294	6766699	2	True				
ANR	6766786	CallExpression	"start_output_file ( con , jxr_get_EXTENDED_IMAGE_WIDTH ( image ) , jxr_get_EXTENDED_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_WIDTH ( image ) , jxr_get_IMAGE_HEIGHT ( image ) , jxr_get_IMAGE_CHANNELS ( image ) + 1 , jxr_get_OUTPUT_BITDEPTH ( image ) , jxr_get_pixel_format ( image ) )"		6766699	0					
ANR	6766787	Callee	start_output_file		6766699	0					
ANR	6766788	Identifier	start_output_file		6766699	0					
ANR	6766789	ArgumentList	con		6766699	1					
ANR	6766790	Argument	con		6766699	0					
ANR	6766791	Identifier	con		6766699	0					
ANR	6766792	Argument	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6766699	1					
ANR	6766793	CallExpression	jxr_get_EXTENDED_IMAGE_WIDTH ( image )		6766699	0					
ANR	6766794	Callee	jxr_get_EXTENDED_IMAGE_WIDTH		6766699	0					
ANR	6766795	Identifier	jxr_get_EXTENDED_IMAGE_WIDTH		6766699	0					
ANR	6766796	ArgumentList	image		6766699	1					
ANR	6766797	Argument	image		6766699	0					
ANR	6766798	Identifier	image		6766699	0					
ANR	6766799	Argument	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6766699	2					
ANR	6766800	CallExpression	jxr_get_EXTENDED_IMAGE_HEIGHT ( image )		6766699	0					
ANR	6766801	Callee	jxr_get_EXTENDED_IMAGE_HEIGHT		6766699	0					
ANR	6766802	Identifier	jxr_get_EXTENDED_IMAGE_HEIGHT		6766699	0					
ANR	6766803	ArgumentList	image		6766699	1					
ANR	6766804	Argument	image		6766699	0					
ANR	6766805	Identifier	image		6766699	0					
ANR	6766806	Argument	jxr_get_IMAGE_WIDTH ( image )		6766699	3					
ANR	6766807	CallExpression	jxr_get_IMAGE_WIDTH ( image )		6766699	0					
ANR	6766808	Callee	jxr_get_IMAGE_WIDTH		6766699	0					
ANR	6766809	Identifier	jxr_get_IMAGE_WIDTH		6766699	0					
ANR	6766810	ArgumentList	image		6766699	1					
ANR	6766811	Argument	image		6766699	0					
ANR	6766812	Identifier	image		6766699	0					
ANR	6766813	Argument	jxr_get_IMAGE_HEIGHT ( image )		6766699	4					
ANR	6766814	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		6766699	0					
ANR	6766815	Callee	jxr_get_IMAGE_HEIGHT		6766699	0					
ANR	6766816	Identifier	jxr_get_IMAGE_HEIGHT		6766699	0					
ANR	6766817	ArgumentList	image		6766699	1					
ANR	6766818	Argument	image		6766699	0					
ANR	6766819	Identifier	image		6766699	0					
ANR	6766820	Argument	jxr_get_IMAGE_CHANNELS ( image ) + 1		6766699	5					
ANR	6766821	AdditiveExpression	jxr_get_IMAGE_CHANNELS ( image ) + 1		6766699	0		+			
ANR	6766822	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		6766699	0					
ANR	6766823	Callee	jxr_get_IMAGE_CHANNELS		6766699	0					
ANR	6766824	Identifier	jxr_get_IMAGE_CHANNELS		6766699	0					
ANR	6766825	ArgumentList	image		6766699	1					
ANR	6766826	Argument	image		6766699	0					
ANR	6766827	Identifier	image		6766699	0					
ANR	6766828	PrimaryExpression	1		6766699	1					
ANR	6766829	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6766699	6					
ANR	6766830	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6766699	0					
ANR	6766831	Callee	jxr_get_OUTPUT_BITDEPTH		6766699	0					
ANR	6766832	Identifier	jxr_get_OUTPUT_BITDEPTH		6766699	0					
ANR	6766833	ArgumentList	image		6766699	1					
ANR	6766834	Argument	image		6766699	0					
ANR	6766835	Identifier	image		6766699	0					
ANR	6766836	Argument	jxr_get_pixel_format ( image )		6766699	7					
ANR	6766837	CallExpression	jxr_get_pixel_format ( image )		6766699	0					
ANR	6766838	Callee	jxr_get_pixel_format		6766699	0					
ANR	6766839	Identifier	jxr_get_pixel_format		6766699	0					
ANR	6766840	ArgumentList	image		6766699	1					
ANR	6766841	Argument	image		6766699	0					
ANR	6766842	Identifier	image		6766699	0					
ANR	6766843	IdentifierDeclStatement	int numPixels = jxr_get_IMAGE_WIDTH ( image ) * jxr_get_IMAGE_HEIGHT ( image ) ;	2782:4:96306:96378	6766699	4	True				
ANR	6766844	IdentifierDecl	numPixels = jxr_get_IMAGE_WIDTH ( image ) * jxr_get_IMAGE_HEIGHT ( image )		6766699	0					
ANR	6766845	IdentifierDeclType	int		6766699	0					
ANR	6766846	Identifier	numPixels		6766699	1					
ANR	6766847	AssignmentExpression	numPixels = jxr_get_IMAGE_WIDTH ( image ) * jxr_get_IMAGE_HEIGHT ( image )		6766699	2		=			
ANR	6766848	Identifier	numPixels		6766699	0					
ANR	6766849	MultiplicativeExpression	jxr_get_IMAGE_WIDTH ( image ) * jxr_get_IMAGE_HEIGHT ( image )		6766699	1		*			
ANR	6766850	CallExpression	jxr_get_IMAGE_WIDTH ( image )		6766699	0					
ANR	6766851	Callee	jxr_get_IMAGE_WIDTH		6766699	0					
ANR	6766852	Identifier	jxr_get_IMAGE_WIDTH		6766699	0					
ANR	6766853	ArgumentList	image		6766699	1					
ANR	6766854	Argument	image		6766699	0					
ANR	6766855	Identifier	image		6766699	0					
ANR	6766856	CallExpression	jxr_get_IMAGE_HEIGHT ( image )		6766699	1					
ANR	6766857	Callee	jxr_get_IMAGE_HEIGHT		6766699	0					
ANR	6766858	Identifier	jxr_get_IMAGE_HEIGHT		6766699	0					
ANR	6766859	ArgumentList	image		6766699	1					
ANR	6766860	Argument	image		6766699	0					
ANR	6766861	Identifier	image		6766699	0					
ANR	6766862	IdentifierDeclStatement	int nPrimaryComp = jxr_get_IMAGE_CHANNELS ( image ) ;	2783:4:96384:96432	6766699	5	True				
ANR	6766863	IdentifierDecl	nPrimaryComp = jxr_get_IMAGE_CHANNELS ( image )		6766699	0					
ANR	6766864	IdentifierDeclType	int		6766699	0					
ANR	6766865	Identifier	nPrimaryComp		6766699	1					
ANR	6766866	AssignmentExpression	nPrimaryComp = jxr_get_IMAGE_CHANNELS ( image )		6766699	2		=			
ANR	6766867	Identifier	nPrimaryComp		6766699	0					
ANR	6766868	CallExpression	jxr_get_IMAGE_CHANNELS ( image )		6766699	1					
ANR	6766869	Callee	jxr_get_IMAGE_CHANNELS		6766699	0					
ANR	6766870	Identifier	jxr_get_IMAGE_CHANNELS		6766699	0					
ANR	6766871	ArgumentList	image		6766699	1					
ANR	6766872	Argument	image		6766699	0					
ANR	6766873	Identifier	image		6766699	0					
ANR	6766874	IfStatement	if ( con -> padBytes )		6766699	6					
ANR	6766875	Condition	con -> padBytes	2784:7:96441:96453	6766699	0	True				
ANR	6766876	PtrMemberAccess	con -> padBytes		6766699	0					
ANR	6766877	Identifier	con		6766699	0					
ANR	6766878	Identifier	padBytes		6766699	1					
ANR	6766879	ExpressionStatement	nPrimaryComp ++	2785:8:96464:96479	6766699	1	True				
ANR	6766880	PostIncDecOperationExpression	nPrimaryComp ++		6766699	0					
ANR	6766881	Identifier	nPrimaryComp		6766699	0					
ANR	6766882	IncDec	++		6766699	1					
ANR	6766883	IfStatement	if ( con -> bpi == 8 )		6766699	7					
ANR	6766884	Condition	con -> bpi == 8	2786:8:96490:96502	6766699	0	True				
ANR	6766885	EqualityExpression	con -> bpi == 8		6766699	0		==			
ANR	6766886	PtrMemberAccess	con -> bpi		6766699	0					
ANR	6766887	Identifier	con		6766699	0					
ANR	6766888	Identifier	bpi		6766699	1					
ANR	6766889	PrimaryExpression	8		6766699	1					
ANR	6766890	CompoundStatement		23:23:909:909	6766699	1					
ANR	6766891	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		6766699	0					
ANR	6766892	ForInit	i = 0 ;	2787:13:96520:96523	6766699	0	True				
ANR	6766893	AssignmentExpression	i = 0		6766699	0		=			
ANR	6766894	Identifier	i		6766699	0					
ANR	6766895	PrimaryExpression	0		6766699	1					
ANR	6766896	Condition	i < numPixels	2787:18:96525:96535	6766699	1	True				
ANR	6766897	RelationalExpression	i < numPixels		6766699	0		<			
ANR	6766898	Identifier	i		6766699	0					
ANR	6766899	Identifier	numPixels		6766699	1					
ANR	6766900	PostIncDecOperationExpression	i ++	2787:31:96538:96540	6766699	2	True				
ANR	6766901	Identifier	i		6766699	0					
ANR	6766902	IncDec	++		6766699	1					
ANR	6766903	CompoundStatement		25:12:961:1004	6766699	3					
ANR	6766904	IdentifierDeclStatement	unsigned char combine [ MAX_CHANNELS + 1 + 1 ] ;	2788:12:96557:96600	6766699	0	True				
ANR	6766905	IdentifierDecl	combine [ MAX_CHANNELS + 1 + 1 ]		6766699	0					
ANR	6766906	IdentifierDeclType	unsigned char [ MAX_CHANNELS + 1 + 1 ]		6766699	0					
ANR	6766907	Identifier	combine		6766699	1					
ANR	6766908	AdditiveExpression	MAX_CHANNELS + 1 + 1		6766699	2		+			
ANR	6766909	Identifier	MAX_CHANNELS		6766699	0					
ANR	6766910	AdditiveExpression	1 + 1		6766699	1		+			
ANR	6766911	PrimaryExpression	1		6766699	0					
ANR	6766912	PrimaryExpression	1		6766699	1					
ANR	6766913	ExpressionStatement	"fread ( & combine [ 0 ] , sizeof ( char ) , nPrimaryComp , fpPrimary )"	2789:12:96655:96710	6766699	1	True				
ANR	6766914	CallExpression	"fread ( & combine [ 0 ] , sizeof ( char ) , nPrimaryComp , fpPrimary )"		6766699	0					
ANR	6766915	Callee	fread		6766699	0					
ANR	6766916	Identifier	fread		6766699	0					
ANR	6766917	ArgumentList	& combine [ 0 ]		6766699	1					
ANR	6766918	Argument	& combine [ 0 ]		6766699	0					
ANR	6766919	UnaryOperationExpression	& combine [ 0 ]		6766699	0					
ANR	6766920	UnaryOperator	&		6766699	0					
ANR	6766921	ArrayIndexing	combine [ 0 ]		6766699	1					
ANR	6766922	Identifier	combine		6766699	0					
ANR	6766923	PrimaryExpression	0		6766699	1					
ANR	6766924	Argument	sizeof ( char )		6766699	1					
ANR	6766925	SizeofExpression	sizeof ( char )		6766699	0					
ANR	6766926	Sizeof	sizeof		6766699	0					
ANR	6766927	SizeofOperand	char		6766699	1					
ANR	6766928	Argument	nPrimaryComp		6766699	2					
ANR	6766929	Identifier	nPrimaryComp		6766699	0					
ANR	6766930	Argument	fpPrimary		6766699	3					
ANR	6766931	Identifier	fpPrimary		6766699	0					
ANR	6766932	ExpressionStatement	"fread ( & ( combine [ nPrimaryComp ] ) , sizeof ( char ) , 1 , fpAlpha )"	2790:12:96724:96779	6766699	2	True				
ANR	6766933	CallExpression	"fread ( & ( combine [ nPrimaryComp ] ) , sizeof ( char ) , 1 , fpAlpha )"		6766699	0					
ANR	6766934	Callee	fread		6766699	0					
ANR	6766935	Identifier	fread		6766699	0					
ANR	6766936	ArgumentList	& ( combine [ nPrimaryComp ] )		6766699	1					
ANR	6766937	Argument	& ( combine [ nPrimaryComp ] )		6766699	0					
ANR	6766938	UnaryOperationExpression	& ( combine [ nPrimaryComp ] )		6766699	0					
ANR	6766939	UnaryOperator	&		6766699	0					
ANR	6766940	ArrayIndexing	combine [ nPrimaryComp ]		6766699	1					
ANR	6766941	Identifier	combine		6766699	0					
ANR	6766942	Identifier	nPrimaryComp		6766699	1					
ANR	6766943	Argument	sizeof ( char )		6766699	1					
ANR	6766944	SizeofExpression	sizeof ( char )		6766699	0					
ANR	6766945	Sizeof	sizeof		6766699	0					
ANR	6766946	SizeofOperand	char		6766699	1					
ANR	6766947	Argument	1		6766699	2					
ANR	6766948	PrimaryExpression	1		6766699	0					
ANR	6766949	Argument	fpAlpha		6766699	3					
ANR	6766950	Identifier	fpAlpha		6766699	0					
ANR	6766951	ExpressionStatement	"write_uint8 ( con , combine , nPrimaryComp + 1 )"	2791:12:96793:96834	6766699	3	True				
ANR	6766952	CallExpression	"write_uint8 ( con , combine , nPrimaryComp + 1 )"		6766699	0					
ANR	6766953	Callee	write_uint8		6766699	0					
ANR	6766954	Identifier	write_uint8		6766699	0					
ANR	6766955	ArgumentList	con		6766699	1					
ANR	6766956	Argument	con		6766699	0					
ANR	6766957	Identifier	con		6766699	0					
ANR	6766958	Argument	combine		6766699	1					
ANR	6766959	Identifier	combine		6766699	0					
ANR	6766960	Argument	nPrimaryComp + 1		6766699	2					
ANR	6766961	AdditiveExpression	nPrimaryComp + 1		6766699	0		+			
ANR	6766962	Identifier	nPrimaryComp		6766699	0					
ANR	6766963	PrimaryExpression	1		6766699	1					
ANR	6766964	ElseStatement	else		6766699	0					
ANR	6766965	IfStatement	if ( con -> bpi == 16 )		6766699	0					
ANR	6766966	Condition	con -> bpi == 16	2794:12:96871:96884	6766699	0	True				
ANR	6766967	EqualityExpression	con -> bpi == 16		6766699	0		==			
ANR	6766968	PtrMemberAccess	con -> bpi		6766699	0					
ANR	6766969	Identifier	con		6766699	0					
ANR	6766970	Identifier	bpi		6766699	1					
ANR	6766971	PrimaryExpression	16		6766699	1					
ANR	6766972	CompoundStatement		32:4:1295:1295	6766699	1					
ANR	6766973	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		6766699	0					
ANR	6766974	ForInit	i = 0 ;	2796:13:96906:96909	6766699	0	True				
ANR	6766975	AssignmentExpression	i = 0		6766699	0		=			
ANR	6766976	Identifier	i		6766699	0					
ANR	6766977	PrimaryExpression	0		6766699	1					
ANR	6766978	Condition	i < numPixels	2796:18:96911:96921	6766699	1	True				
ANR	6766979	RelationalExpression	i < numPixels		6766699	0		<			
ANR	6766980	Identifier	i		6766699	0					
ANR	6766981	Identifier	numPixels		6766699	1					
ANR	6766982	PostIncDecOperationExpression	i ++	2796:31:96924:96926	6766699	2	True				
ANR	6766983	Identifier	i		6766699	0					
ANR	6766984	IncDec	++		6766699	1					
ANR	6766985	CompoundStatement		34:12:1347:1385	6766699	3					
ANR	6766986	IdentifierDeclStatement	uint16_t combine [ MAX_CHANNELS + 1 + 1 ] ;	2797:12:96943:96981	6766699	0	True				
ANR	6766987	IdentifierDecl	combine [ MAX_CHANNELS + 1 + 1 ]		6766699	0					
ANR	6766988	IdentifierDeclType	uint16_t [ MAX_CHANNELS + 1 + 1 ]		6766699	0					
ANR	6766989	Identifier	combine		6766699	1					
ANR	6766990	AdditiveExpression	MAX_CHANNELS + 1 + 1		6766699	2		+			
ANR	6766991	Identifier	MAX_CHANNELS		6766699	0					
ANR	6766992	AdditiveExpression	1 + 1		6766699	1		+			
ANR	6766993	PrimaryExpression	1		6766699	0					
ANR	6766994	PrimaryExpression	1		6766699	1					
ANR	6766995	ExpressionStatement	"fread ( & combine [ 0 ] , sizeof ( uint16_t ) , nPrimaryComp , fpPrimary )"	2798:12:97036:97095	6766699	1	True				
ANR	6766996	CallExpression	"fread ( & combine [ 0 ] , sizeof ( uint16_t ) , nPrimaryComp , fpPrimary )"		6766699	0					
ANR	6766997	Callee	fread		6766699	0					
ANR	6766998	Identifier	fread		6766699	0					
ANR	6766999	ArgumentList	& combine [ 0 ]		6766699	1					
ANR	6767000	Argument	& combine [ 0 ]		6766699	0					
ANR	6767001	UnaryOperationExpression	& combine [ 0 ]		6766699	0					
ANR	6767002	UnaryOperator	&		6766699	0					
ANR	6767003	ArrayIndexing	combine [ 0 ]		6766699	1					
ANR	6767004	Identifier	combine		6766699	0					
ANR	6767005	PrimaryExpression	0		6766699	1					
ANR	6767006	Argument	sizeof ( uint16_t )		6766699	1					
ANR	6767007	SizeofExpression	sizeof ( uint16_t )		6766699	0					
ANR	6767008	Sizeof	sizeof		6766699	0					
ANR	6767009	SizeofOperand	uint16_t		6766699	1					
ANR	6767010	Argument	nPrimaryComp		6766699	2					
ANR	6767011	Identifier	nPrimaryComp		6766699	0					
ANR	6767012	Argument	fpPrimary		6766699	3					
ANR	6767013	Identifier	fpPrimary		6766699	0					
ANR	6767014	ExpressionStatement	"fread ( & ( combine [ nPrimaryComp ] ) , sizeof ( uint16_t ) , 1 , fpAlpha )"	2799:12:97109:97168	6766699	2	True				
ANR	6767015	CallExpression	"fread ( & ( combine [ nPrimaryComp ] ) , sizeof ( uint16_t ) , 1 , fpAlpha )"		6766699	0					
ANR	6767016	Callee	fread		6766699	0					
ANR	6767017	Identifier	fread		6766699	0					
ANR	6767018	ArgumentList	& ( combine [ nPrimaryComp ] )		6766699	1					
ANR	6767019	Argument	& ( combine [ nPrimaryComp ] )		6766699	0					
ANR	6767020	UnaryOperationExpression	& ( combine [ nPrimaryComp ] )		6766699	0					
ANR	6767021	UnaryOperator	&		6766699	0					
ANR	6767022	ArrayIndexing	combine [ nPrimaryComp ]		6766699	1					
ANR	6767023	Identifier	combine		6766699	0					
ANR	6767024	Identifier	nPrimaryComp		6766699	1					
ANR	6767025	Argument	sizeof ( uint16_t )		6766699	1					
ANR	6767026	SizeofExpression	sizeof ( uint16_t )		6766699	0					
ANR	6767027	Sizeof	sizeof		6766699	0					
ANR	6767028	SizeofOperand	uint16_t		6766699	1					
ANR	6767029	Argument	1		6766699	2					
ANR	6767030	PrimaryExpression	1		6766699	0					
ANR	6767031	Argument	fpAlpha		6766699	3					
ANR	6767032	Identifier	fpAlpha		6766699	0					
ANR	6767033	ExpressionStatement	"write_uint16 ( con , combine , nPrimaryComp + 1 )"	2800:12:97182:97224	6766699	3	True				
ANR	6767034	CallExpression	"write_uint16 ( con , combine , nPrimaryComp + 1 )"		6766699	0					
ANR	6767035	Callee	write_uint16		6766699	0					
ANR	6767036	Identifier	write_uint16		6766699	0					
ANR	6767037	ArgumentList	con		6766699	1					
ANR	6767038	Argument	con		6766699	0					
ANR	6767039	Identifier	con		6766699	0					
ANR	6767040	Argument	combine		6766699	1					
ANR	6767041	Identifier	combine		6766699	0					
ANR	6767042	Argument	nPrimaryComp + 1		6766699	2					
ANR	6767043	AdditiveExpression	nPrimaryComp + 1		6766699	0		+			
ANR	6767044	Identifier	nPrimaryComp		6766699	0					
ANR	6767045	PrimaryExpression	1		6766699	1					
ANR	6767046	ElseStatement	else		6766699	0					
ANR	6767047	IfStatement	if ( con -> bpi == 32 )		6766699	0					
ANR	6767048	Condition	con -> bpi == 32	2803:12:97261:97274	6766699	0	True				
ANR	6767049	EqualityExpression	con -> bpi == 32		6766699	0		==			
ANR	6767050	PtrMemberAccess	con -> bpi		6766699	0					
ANR	6767051	Identifier	con		6766699	0					
ANR	6767052	Identifier	bpi		6766699	1					
ANR	6767053	PrimaryExpression	32		6766699	1					
ANR	6767054	CompoundStatement		41:4:1685:1685	6766699	1					
ANR	6767055	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		6766699	0					
ANR	6767056	ForInit	i = 0 ;	2805:13:97296:97299	6766699	0	True				
ANR	6767057	AssignmentExpression	i = 0		6766699	0		=			
ANR	6767058	Identifier	i		6766699	0					
ANR	6767059	PrimaryExpression	0		6766699	1					
ANR	6767060	Condition	i < numPixels	2805:18:97301:97311	6766699	1	True				
ANR	6767061	RelationalExpression	i < numPixels		6766699	0		<			
ANR	6767062	Identifier	i		6766699	0					
ANR	6767063	Identifier	numPixels		6766699	1					
ANR	6767064	PostIncDecOperationExpression	i ++	2805:31:97314:97316	6766699	2	True				
ANR	6767065	Identifier	i		6766699	0					
ANR	6767066	IncDec	++		6766699	1					
ANR	6767067	CompoundStatement		43:12:1737:1775	6766699	3					
ANR	6767068	IdentifierDeclStatement	uint32_t combine [ MAX_CHANNELS + 1 + 1 ] ;	2806:12:97333:97371	6766699	0	True				
ANR	6767069	IdentifierDecl	combine [ MAX_CHANNELS + 1 + 1 ]		6766699	0					
ANR	6767070	IdentifierDeclType	uint32_t [ MAX_CHANNELS + 1 + 1 ]		6766699	0					
ANR	6767071	Identifier	combine		6766699	1					
ANR	6767072	AdditiveExpression	MAX_CHANNELS + 1 + 1		6766699	2		+			
ANR	6767073	Identifier	MAX_CHANNELS		6766699	0					
ANR	6767074	AdditiveExpression	1 + 1		6766699	1		+			
ANR	6767075	PrimaryExpression	1		6766699	0					
ANR	6767076	PrimaryExpression	1		6766699	1					
ANR	6767077	ExpressionStatement	"fread ( & combine [ 0 ] , sizeof ( uint32_t ) , nPrimaryComp , fpPrimary )"	2807:12:97426:97485	6766699	1	True				
ANR	6767078	CallExpression	"fread ( & combine [ 0 ] , sizeof ( uint32_t ) , nPrimaryComp , fpPrimary )"		6766699	0					
ANR	6767079	Callee	fread		6766699	0					
ANR	6767080	Identifier	fread		6766699	0					
ANR	6767081	ArgumentList	& combine [ 0 ]		6766699	1					
ANR	6767082	Argument	& combine [ 0 ]		6766699	0					
ANR	6767083	UnaryOperationExpression	& combine [ 0 ]		6766699	0					
ANR	6767084	UnaryOperator	&		6766699	0					
ANR	6767085	ArrayIndexing	combine [ 0 ]		6766699	1					
ANR	6767086	Identifier	combine		6766699	0					
ANR	6767087	PrimaryExpression	0		6766699	1					
ANR	6767088	Argument	sizeof ( uint32_t )		6766699	1					
ANR	6767089	SizeofExpression	sizeof ( uint32_t )		6766699	0					
ANR	6767090	Sizeof	sizeof		6766699	0					
ANR	6767091	SizeofOperand	uint32_t		6766699	1					
ANR	6767092	Argument	nPrimaryComp		6766699	2					
ANR	6767093	Identifier	nPrimaryComp		6766699	0					
ANR	6767094	Argument	fpPrimary		6766699	3					
ANR	6767095	Identifier	fpPrimary		6766699	0					
ANR	6767096	ExpressionStatement	"fread ( & ( combine [ nPrimaryComp ] ) , sizeof ( uint32_t ) , 1 , fpAlpha )"	2808:12:97499:97558	6766699	2	True				
ANR	6767097	CallExpression	"fread ( & ( combine [ nPrimaryComp ] ) , sizeof ( uint32_t ) , 1 , fpAlpha )"		6766699	0					
ANR	6767098	Callee	fread		6766699	0					
ANR	6767099	Identifier	fread		6766699	0					
ANR	6767100	ArgumentList	& ( combine [ nPrimaryComp ] )		6766699	1					
ANR	6767101	Argument	& ( combine [ nPrimaryComp ] )		6766699	0					
ANR	6767102	UnaryOperationExpression	& ( combine [ nPrimaryComp ] )		6766699	0					
ANR	6767103	UnaryOperator	&		6766699	0					
ANR	6767104	ArrayIndexing	combine [ nPrimaryComp ]		6766699	1					
ANR	6767105	Identifier	combine		6766699	0					
ANR	6767106	Identifier	nPrimaryComp		6766699	1					
ANR	6767107	Argument	sizeof ( uint32_t )		6766699	1					
ANR	6767108	SizeofExpression	sizeof ( uint32_t )		6766699	0					
ANR	6767109	Sizeof	sizeof		6766699	0					
ANR	6767110	SizeofOperand	uint32_t		6766699	1					
ANR	6767111	Argument	1		6766699	2					
ANR	6767112	PrimaryExpression	1		6766699	0					
ANR	6767113	Argument	fpAlpha		6766699	3					
ANR	6767114	Identifier	fpAlpha		6766699	0					
ANR	6767115	ExpressionStatement	"write_uint32 ( con , combine , nPrimaryComp + 1 )"	2809:12:97572:97613	6766699	3	True				
ANR	6767116	CallExpression	"write_uint32 ( con , combine , nPrimaryComp + 1 )"		6766699	0					
ANR	6767117	Callee	write_uint32		6766699	0					
ANR	6767118	Identifier	write_uint32		6766699	0					
ANR	6767119	ArgumentList	con		6766699	1					
ANR	6767120	Argument	con		6766699	0					
ANR	6767121	Identifier	con		6766699	0					
ANR	6767122	Argument	combine		6766699	1					
ANR	6767123	Identifier	combine		6766699	0					
ANR	6767124	Argument	nPrimaryComp + 1		6766699	2					
ANR	6767125	AdditiveExpression	nPrimaryComp + 1		6766699	0		+			
ANR	6767126	Identifier	nPrimaryComp		6766699	0					
ANR	6767127	PrimaryExpression	1		6766699	1					
ANR	6767128	ElseStatement	else		6766699	0					
ANR	6767129	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2813:8:97655:97688	6766699	0	True				
ANR	6767130	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		6766699	0					
ANR	6767131	Callee	assert		6766699	0					
ANR	6767132	Identifier	assert		6766699	0					
ANR	6767133	ArgumentList	"! ""Unsupported bitdepth\\n"""		6766699	1					
ANR	6767134	Argument	"! ""Unsupported bitdepth\\n"""		6766699	0					
ANR	6767135	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		6766699	0					
ANR	6767136	UnaryOperator	!		6766699	0					
ANR	6767137	PrimaryExpression	"""Unsupported bitdepth\\n"""		6766699	1					
ANR	6767138	ReturnType	void		6766699	1					
ANR	6767139	Identifier	write_file_combine_primary_alpha		6766699	2					
ANR	6767140	ParameterList	"jxr_image_t image , FILE * fpPrimary , FILE * fpAlpha"		6766699	3					
ANR	6767141	Parameter	jxr_image_t image	2763:38:95544:95560	6766699	0	True				
ANR	6767142	ParameterType	jxr_image_t		6766699	0					
ANR	6767143	Identifier	image		6766699	1					
ANR	6767144	Parameter	FILE * fpPrimary	2763:57:95563:95577	6766699	1	True				
ANR	6767145	ParameterType	FILE *		6766699	0					
ANR	6767146	Identifier	fpPrimary		6766699	1					
ANR	6767147	Parameter	FILE * fpAlpha	2763:74:95580:95592	6766699	2	True				
ANR	6767148	ParameterType	FILE *		6766699	0					
ANR	6767149	Identifier	fpAlpha		6766699	1					
ANR	6767150	CFGEntryNode	ENTRY		6766699		True				
ANR	6767151	CFGExitNode	EXIT		6766699		True				
ANR	6767152	Symbol	con		6766699						
ANR	6767153	Symbol	jxr_get_user_data		6766699						
ANR	6767154	Symbol	numPixels		6766699						
ANR	6767155	Symbol	jxr_get_IMAGE_HEIGHT		6766699						
ANR	6767156	Symbol	isOutputYUV444		6766699						
ANR	6767157	Symbol	isOutputYUV422		6766699						
ANR	6767158	Symbol	* con		6766699						
ANR	6767159	Symbol	fpAlpha		6766699						
ANR	6767160	Symbol	con -> bpi		6766699						
ANR	6767161	Symbol	jxr_get_pixel_format		6766699						
ANR	6767162	Symbol	isOutputYUV420		6766699						
ANR	6767163	Symbol	con -> padBytes		6766699						
ANR	6767164	Symbol	jxr_get_EXTENDED_IMAGE_HEIGHT		6766699						
ANR	6767165	Symbol	jxr_get_IMAGE_CHANNELS		6766699						
ANR	6767166	Symbol	jxr_get_OUTPUT_BITDEPTH		6766699						
ANR	6767167	Symbol	jxr_get_IMAGE_WIDTH		6766699						
ANR	6767168	Symbol	combine		6766699						
ANR	6767169	Symbol	image		6766699						
ANR	6767170	Symbol	nPrimaryComp		6766699						
ANR	6767171	Symbol	con -> file		6766699						
ANR	6767172	Symbol	fpPrimary		6766699						
ANR	6767173	Symbol	i		6766699						
ANR	6767174	Symbol	isOutputCMYKDirect		6766699						
ANR	6767175	Symbol	jxr_get_EXTENDED_IMAGE_WIDTH		6766699						
ANR	6767176	Symbol	con -> alpha		6766699						
ANR	6767177	Function	split_primary_alpha	2817:0:97694:101149							
ANR	6767178	FunctionDef	"split_primary_alpha (jxr_image_t image , void * input_handle , context * con_primary , context * con_alpha , jxr_container_t container)"		6767177	0					
ANR	6767179	CompoundStatement		2818:0:97826:101149	6767177	0					
ANR	6767180	IdentifierDeclStatement	"int wid , hei , ncomp , bpi ;"	2820:4:97866:97890	6767177	0	True				
ANR	6767181	IdentifierDecl	wid		6767177	0					
ANR	6767182	IdentifierDeclType	int		6767177	0					
ANR	6767183	Identifier	wid		6767177	1					
ANR	6767184	IdentifierDecl	hei		6767177	1					
ANR	6767185	IdentifierDeclType	int		6767177	0					
ANR	6767186	Identifier	hei		6767177	1					
ANR	6767187	IdentifierDecl	ncomp		6767177	2					
ANR	6767188	IdentifierDeclType	int		6767177	0					
ANR	6767189	Identifier	ncomp		6767177	1					
ANR	6767190	IdentifierDecl	bpi		6767177	3					
ANR	6767191	IdentifierDeclType	int		6767177	0					
ANR	6767192	Identifier	bpi		6767177	1					
ANR	6767193	IdentifierDeclStatement	"short sf , photometric ;"	2821:4:97896:97917	6767177	1	True				
ANR	6767194	IdentifierDecl	sf		6767177	0					
ANR	6767195	IdentifierDeclType	short		6767177	0					
ANR	6767196	Identifier	sf		6767177	1					
ANR	6767197	IdentifierDecl	photometric		6767177	1					
ANR	6767198	IdentifierDeclType	short		6767177	0					
ANR	6767199	Identifier	photometric		6767177	1					
ANR	6767200	IdentifierDeclStatement	int padBytes ;	2822:4:97923:97935	6767177	2	True				
ANR	6767201	IdentifierDecl	padBytes		6767177	0					
ANR	6767202	IdentifierDeclType	int		6767177	0					
ANR	6767203	Identifier	padBytes		6767177	1					
ANR	6767204	ExpressionStatement	"get_file_parameters ( input_handle , & wid , & hei , & ncomp , & bpi , & sf , & photometric , & padBytes )"	2824:4:97942:98031	6767177	3	True				
ANR	6767205	CallExpression	"get_file_parameters ( input_handle , & wid , & hei , & ncomp , & bpi , & sf , & photometric , & padBytes )"		6767177	0					
ANR	6767206	Callee	get_file_parameters		6767177	0					
ANR	6767207	Identifier	get_file_parameters		6767177	0					
ANR	6767208	ArgumentList	input_handle		6767177	1					
ANR	6767209	Argument	input_handle		6767177	0					
ANR	6767210	Identifier	input_handle		6767177	0					
ANR	6767211	Argument	& wid		6767177	1					
ANR	6767212	UnaryOperationExpression	& wid		6767177	0					
ANR	6767213	UnaryOperator	&		6767177	0					
ANR	6767214	Identifier	wid		6767177	1					
ANR	6767215	Argument	& hei		6767177	2					
ANR	6767216	UnaryOperationExpression	& hei		6767177	0					
ANR	6767217	UnaryOperator	&		6767177	0					
ANR	6767218	Identifier	hei		6767177	1					
ANR	6767219	Argument	& ncomp		6767177	3					
ANR	6767220	UnaryOperationExpression	& ncomp		6767177	0					
ANR	6767221	UnaryOperator	&		6767177	0					
ANR	6767222	Identifier	ncomp		6767177	1					
ANR	6767223	Argument	& bpi		6767177	4					
ANR	6767224	UnaryOperationExpression	& bpi		6767177	0					
ANR	6767225	UnaryOperator	&		6767177	0					
ANR	6767226	Identifier	bpi		6767177	1					
ANR	6767227	Argument	& sf		6767177	5					
ANR	6767228	UnaryOperationExpression	& sf		6767177	0					
ANR	6767229	UnaryOperator	&		6767177	0					
ANR	6767230	Identifier	sf		6767177	1					
ANR	6767231	Argument	& photometric		6767177	6					
ANR	6767232	UnaryOperationExpression	& photometric		6767177	0					
ANR	6767233	UnaryOperator	&		6767177	0					
ANR	6767234	Identifier	photometric		6767177	1					
ANR	6767235	Argument	& padBytes		6767177	7					
ANR	6767236	UnaryOperationExpression	& padBytes		6767177	0					
ANR	6767237	UnaryOperator	&		6767177	0					
ANR	6767238	Identifier	padBytes		6767177	1					
ANR	6767239	IdentifierDeclStatement	int numPixels = wid * hei ;	2825:4:98037:98062	6767177	4	True				
ANR	6767240	IdentifierDecl	numPixels = wid * hei		6767177	0					
ANR	6767241	IdentifierDeclType	int		6767177	0					
ANR	6767242	Identifier	numPixels		6767177	1					
ANR	6767243	AssignmentExpression	numPixels = wid * hei		6767177	2		=			
ANR	6767244	Identifier	numPixels		6767177	0					
ANR	6767245	MultiplicativeExpression	wid * hei		6767177	1		*			
ANR	6767246	Identifier	wid		6767177	0					
ANR	6767247	Identifier	hei		6767177	1					
ANR	6767248	IdentifierDeclStatement	int nPrimaryComp = ncomp - 1 ;	2826:4:98068:98094	6767177	5	True				
ANR	6767249	IdentifierDecl	nPrimaryComp = ncomp - 1		6767177	0					
ANR	6767250	IdentifierDeclType	int		6767177	0					
ANR	6767251	Identifier	nPrimaryComp		6767177	1					
ANR	6767252	AssignmentExpression	nPrimaryComp = ncomp - 1		6767177	2		=			
ANR	6767253	Identifier	nPrimaryComp		6767177	0					
ANR	6767254	AdditiveExpression	ncomp - 1		6767177	1		-			
ANR	6767255	Identifier	ncomp		6767177	0					
ANR	6767256	PrimaryExpression	1		6767177	1					
ANR	6767257	IdentifierDeclStatement	context * con = ( context * ) input_handle ;	2827:4:98100:98138	6767177	6	True				
ANR	6767258	IdentifierDecl	* con = ( context * ) input_handle		6767177	0					
ANR	6767259	IdentifierDeclType	context *		6767177	0					
ANR	6767260	Identifier	con		6767177	1					
ANR	6767261	AssignmentExpression	* con = ( context * ) input_handle		6767177	2		=			
ANR	6767262	Identifier	con		6767177	0					
ANR	6767263	CastExpression	( context * ) input_handle		6767177	1					
ANR	6767264	CastTarget	context *		6767177	0					
ANR	6767265	Identifier	input_handle		6767177	1					
ANR	6767266	ExpressionStatement	read_setup ( con )	2828:4:98144:98159	6767177	7	True				
ANR	6767267	CallExpression	read_setup ( con )		6767177	0					
ANR	6767268	Callee	read_setup		6767177	0					
ANR	6767269	Identifier	read_setup		6767177	0					
ANR	6767270	ArgumentList	con		6767177	1					
ANR	6767271	Argument	con		6767177	0					
ANR	6767272	Identifier	con		6767177	0					
ANR	6767273	IdentifierDeclStatement	int i ;	2830:4:98166:98171	6767177	8	True				
ANR	6767274	IdentifierDecl	i		6767177	0					
ANR	6767275	IdentifierDeclType	int		6767177	0					
ANR	6767276	Identifier	i		6767177	1					
ANR	6767277	ExpressionStatement	"start_output_file ( con_primary , wid , hei , wid , hei , con_primary -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"	2832:4:98178:98314	6767177	9	True				
ANR	6767278	CallExpression	"start_output_file ( con_primary , wid , hei , wid , hei , con_primary -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"		6767177	0					
ANR	6767279	Callee	start_output_file		6767177	0					
ANR	6767280	Identifier	start_output_file		6767177	0					
ANR	6767281	ArgumentList	con_primary		6767177	1					
ANR	6767282	Argument	con_primary		6767177	0					
ANR	6767283	Identifier	con_primary		6767177	0					
ANR	6767284	Argument	wid		6767177	1					
ANR	6767285	Identifier	wid		6767177	0					
ANR	6767286	Argument	hei		6767177	2					
ANR	6767287	Identifier	hei		6767177	0					
ANR	6767288	Argument	wid		6767177	3					
ANR	6767289	Identifier	wid		6767177	0					
ANR	6767290	Argument	hei		6767177	4					
ANR	6767291	Identifier	hei		6767177	0					
ANR	6767292	Argument	con_primary -> ncomp		6767177	5					
ANR	6767293	PtrMemberAccess	con_primary -> ncomp		6767177	0					
ANR	6767294	Identifier	con_primary		6767177	0					
ANR	6767295	Identifier	ncomp		6767177	1					
ANR	6767296	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6767177	6					
ANR	6767297	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6767177	0					
ANR	6767298	Callee	jxr_get_OUTPUT_BITDEPTH		6767177	0					
ANR	6767299	Identifier	jxr_get_OUTPUT_BITDEPTH		6767177	0					
ANR	6767300	ArgumentList	image		6767177	1					
ANR	6767301	Argument	image		6767177	0					
ANR	6767302	Identifier	image		6767177	0					
ANR	6767303	Argument	jxrc_get_pixel_format ( container )		6767177	7					
ANR	6767304	CallExpression	jxrc_get_pixel_format ( container )		6767177	0					
ANR	6767305	Callee	jxrc_get_pixel_format		6767177	0					
ANR	6767306	Identifier	jxrc_get_pixel_format		6767177	0					
ANR	6767307	ArgumentList	container		6767177	1					
ANR	6767308	Argument	container		6767177	0					
ANR	6767309	Identifier	container		6767177	0					
ANR	6767310	ExpressionStatement	"start_output_file ( con_alpha , wid , hei , wid , hei , con_alpha -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"	2833:4:98320:98452	6767177	10	True				
ANR	6767311	CallExpression	"start_output_file ( con_alpha , wid , hei , wid , hei , con_alpha -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"		6767177	0					
ANR	6767312	Callee	start_output_file		6767177	0					
ANR	6767313	Identifier	start_output_file		6767177	0					
ANR	6767314	ArgumentList	con_alpha		6767177	1					
ANR	6767315	Argument	con_alpha		6767177	0					
ANR	6767316	Identifier	con_alpha		6767177	0					
ANR	6767317	Argument	wid		6767177	1					
ANR	6767318	Identifier	wid		6767177	0					
ANR	6767319	Argument	hei		6767177	2					
ANR	6767320	Identifier	hei		6767177	0					
ANR	6767321	Argument	wid		6767177	3					
ANR	6767322	Identifier	wid		6767177	0					
ANR	6767323	Argument	hei		6767177	4					
ANR	6767324	Identifier	hei		6767177	0					
ANR	6767325	Argument	con_alpha -> ncomp		6767177	5					
ANR	6767326	PtrMemberAccess	con_alpha -> ncomp		6767177	0					
ANR	6767327	Identifier	con_alpha		6767177	0					
ANR	6767328	Identifier	ncomp		6767177	1					
ANR	6767329	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6767177	6					
ANR	6767330	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6767177	0					
ANR	6767331	Callee	jxr_get_OUTPUT_BITDEPTH		6767177	0					
ANR	6767332	Identifier	jxr_get_OUTPUT_BITDEPTH		6767177	0					
ANR	6767333	ArgumentList	image		6767177	1					
ANR	6767334	Argument	image		6767177	0					
ANR	6767335	Identifier	image		6767177	0					
ANR	6767336	Argument	jxrc_get_pixel_format ( container )		6767177	7					
ANR	6767337	CallExpression	jxrc_get_pixel_format ( container )		6767177	0					
ANR	6767338	Callee	jxrc_get_pixel_format		6767177	0					
ANR	6767339	Identifier	jxrc_get_pixel_format		6767177	0					
ANR	6767340	ArgumentList	container		6767177	1					
ANR	6767341	Argument	container		6767177	0					
ANR	6767342	Identifier	container		6767177	0					
ANR	6767343	IfStatement	if ( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image ) )		6767177	11					
ANR	6767344	Condition	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )	2835:7:98462:98561	6767177	0	True				
ANR	6767345	OrExpression	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		6767177	0		||			
ANR	6767346	CallExpression	isOutputYUV444 ( image )		6767177	0					
ANR	6767347	Callee	isOutputYUV444		6767177	0					
ANR	6767348	Identifier	isOutputYUV444		6767177	0					
ANR	6767349	ArgumentList	image		6767177	1					
ANR	6767350	Argument	image		6767177	0					
ANR	6767351	Identifier	image		6767177	0					
ANR	6767352	OrExpression	isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		6767177	1		||			
ANR	6767353	CallExpression	isOutputYUV422 ( image )		6767177	0					
ANR	6767354	Callee	isOutputYUV422		6767177	0					
ANR	6767355	Identifier	isOutputYUV422		6767177	0					
ANR	6767356	ArgumentList	image		6767177	1					
ANR	6767357	Argument	image		6767177	0					
ANR	6767358	Identifier	image		6767177	0					
ANR	6767359	OrExpression	isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		6767177	1		||			
ANR	6767360	CallExpression	isOutputYUV420 ( image )		6767177	0					
ANR	6767361	Callee	isOutputYUV420		6767177	0					
ANR	6767362	Identifier	isOutputYUV420		6767177	0					
ANR	6767363	ArgumentList	image		6767177	1					
ANR	6767364	Argument	image		6767177	0					
ANR	6767365	Identifier	image		6767177	0					
ANR	6767366	CallExpression	isOutputCMYKDirect ( image )		6767177	1					
ANR	6767367	Callee	isOutputCMYKDirect		6767177	0					
ANR	6767368	Identifier	isOutputCMYKDirect		6767177	0					
ANR	6767369	ArgumentList	image		6767177	1					
ANR	6767370	Argument	image		6767177	0					
ANR	6767371	Identifier	image		6767177	0					
ANR	6767372	CompoundStatement		29:8:1101:1122	6767177	1					
ANR	6767373	IdentifierDeclStatement	unsigned bytes = ( con -> bpi + 7 ) / 8 ;	2838:8:98664:98695	6767177	0	True				
ANR	6767374	IdentifierDecl	bytes = ( con -> bpi + 7 ) / 8		6767177	0					
ANR	6767375	IdentifierDeclType	unsigned		6767177	0					
ANR	6767376	Identifier	bytes		6767177	1					
ANR	6767377	AssignmentExpression	bytes = ( con -> bpi + 7 ) / 8		6767177	2		=			
ANR	6767378	Identifier	bytes		6767177	0					
ANR	6767379	MultiplicativeExpression	( con -> bpi + 7 ) / 8		6767177	1		/			
ANR	6767380	AdditiveExpression	con -> bpi + 7		6767177	0		+			
ANR	6767381	PtrMemberAccess	con -> bpi		6767177	0					
ANR	6767382	Identifier	con		6767177	0					
ANR	6767383	Identifier	bpi		6767177	1					
ANR	6767384	PrimaryExpression	7		6767177	1					
ANR	6767385	PrimaryExpression	8		6767177	1					
ANR	6767386	IdentifierDeclStatement	unsigned size_luma = numPixels * bytes ;	2839:8:98705:98743	6767177	1	True				
ANR	6767387	IdentifierDecl	size_luma = numPixels * bytes		6767177	0					
ANR	6767388	IdentifierDeclType	unsigned		6767177	0					
ANR	6767389	Identifier	size_luma		6767177	1					
ANR	6767390	AssignmentExpression	size_luma = numPixels * bytes		6767177	2		=			
ANR	6767391	Identifier	size_luma		6767177	0					
ANR	6767392	MultiplicativeExpression	numPixels * bytes		6767177	1		*			
ANR	6767393	Identifier	numPixels		6767177	0					
ANR	6767394	Identifier	bytes		6767177	1					
ANR	6767395	IdentifierDeclStatement	unsigned size_chroma = size_luma ;	2840:8:98753:98785	6767177	2	True				
ANR	6767396	IdentifierDecl	size_chroma = size_luma		6767177	0					
ANR	6767397	IdentifierDeclType	unsigned		6767177	0					
ANR	6767398	Identifier	size_chroma		6767177	1					
ANR	6767399	AssignmentExpression	size_chroma = size_luma		6767177	2		=			
ANR	6767400	Identifier	size_luma		6767177	0					
ANR	6767401	Identifier	size_luma		6767177	1					
ANR	6767402	IfStatement	if ( isOutputYUV422 ( image ) )		6767177	3					
ANR	6767403	Condition	isOutputYUV422 ( image )	2841:12:98799:98819	6767177	0	True				
ANR	6767404	CallExpression	isOutputYUV422 ( image )		6767177	0					
ANR	6767405	Callee	isOutputYUV422		6767177	0					
ANR	6767406	Identifier	isOutputYUV422		6767177	0					
ANR	6767407	ArgumentList	image		6767177	1					
ANR	6767408	Argument	image		6767177	0					
ANR	6767409	Identifier	image		6767177	0					
ANR	6767410	ExpressionStatement	size_chroma >>= 1	2842:12:98834:98851	6767177	1	True				
ANR	6767411	AssignmentExpression	size_chroma >>= 1		6767177	0		>>=			
ANR	6767412	Identifier	size_chroma		6767177	0					
ANR	6767413	PrimaryExpression	1		6767177	1					
ANR	6767414	IfStatement	if ( isOutputYUV420 ( image ) )		6767177	4					
ANR	6767415	Condition	isOutputYUV420 ( image )	2843:12:98865:98885	6767177	0	True				
ANR	6767416	CallExpression	isOutputYUV420 ( image )		6767177	0					
ANR	6767417	Callee	isOutputYUV420		6767177	0					
ANR	6767418	Identifier	isOutputYUV420		6767177	0					
ANR	6767419	ArgumentList	image		6767177	1					
ANR	6767420	Argument	image		6767177	0					
ANR	6767421	Identifier	image		6767177	0					
ANR	6767422	ExpressionStatement	size_chroma >>= 2	2844:12:98900:98917	6767177	1	True				
ANR	6767423	AssignmentExpression	size_chroma >>= 2		6767177	0		>>=			
ANR	6767424	Identifier	size_chroma		6767177	0					
ANR	6767425	PrimaryExpression	2		6767177	1					
ANR	6767426	IdentifierDeclStatement	uint8_t * combine = 0 ;	2846:8:98928:98949	6767177	5	True				
ANR	6767427	IdentifierDecl	* combine = 0		6767177	0					
ANR	6767428	IdentifierDeclType	uint8_t *		6767177	0					
ANR	6767429	Identifier	combine		6767177	1					
ANR	6767430	AssignmentExpression	* combine = 0		6767177	2		=			
ANR	6767431	Identifier	combine		6767177	0					
ANR	6767432	PrimaryExpression	0		6767177	1					
ANR	6767433	ExpressionStatement	combine = ( uint8_t * ) malloc ( size_luma )	2847:8:98959:98996	6767177	6	True				
ANR	6767434	AssignmentExpression	combine = ( uint8_t * ) malloc ( size_luma )		6767177	0		=			
ANR	6767435	Identifier	combine		6767177	0					
ANR	6767436	CastExpression	( uint8_t * ) malloc ( size_luma )		6767177	1					
ANR	6767437	CastTarget	uint8_t *		6767177	0					
ANR	6767438	CallExpression	malloc ( size_luma )		6767177	1					
ANR	6767439	Callee	malloc		6767177	0					
ANR	6767440	Identifier	malloc		6767177	0					
ANR	6767441	ArgumentList	size_luma		6767177	1					
ANR	6767442	Argument	size_luma		6767177	0					
ANR	6767443	Identifier	size_luma		6767177	0					
ANR	6767444	ExpressionStatement	assert ( combine != 0 )	2848:8:99006:99026	6767177	7	True				
ANR	6767445	CallExpression	assert ( combine != 0 )		6767177	0					
ANR	6767446	Callee	assert		6767177	0					
ANR	6767447	Identifier	assert		6767177	0					
ANR	6767448	ArgumentList	combine != 0		6767177	1					
ANR	6767449	Argument	combine != 0		6767177	0					
ANR	6767450	EqualityExpression	combine != 0		6767177	0		!=			
ANR	6767451	Identifier	combine		6767177	0					
ANR	6767452	PrimaryExpression	0		6767177	1					
ANR	6767453	ExpressionStatement	"read_uint8 ( con , combine , size_luma )"	2850:8:99037:99072	6767177	8	True				
ANR	6767454	CallExpression	"read_uint8 ( con , combine , size_luma )"		6767177	0					
ANR	6767455	Callee	read_uint8		6767177	0					
ANR	6767456	Identifier	read_uint8		6767177	0					
ANR	6767457	ArgumentList	con		6767177	1					
ANR	6767458	Argument	con		6767177	0					
ANR	6767459	Identifier	con		6767177	0					
ANR	6767460	Argument	combine		6767177	1					
ANR	6767461	Identifier	combine		6767177	0					
ANR	6767462	Argument	size_luma		6767177	2					
ANR	6767463	Identifier	size_luma		6767177	0					
ANR	6767464	ExpressionStatement	"write_uint8 ( con_primary , combine , size_luma )"	2851:8:99082:99126	6767177	9	True				
ANR	6767465	CallExpression	"write_uint8 ( con_primary , combine , size_luma )"		6767177	0					
ANR	6767466	Callee	write_uint8		6767177	0					
ANR	6767467	Identifier	write_uint8		6767177	0					
ANR	6767468	ArgumentList	con_primary		6767177	1					
ANR	6767469	Argument	con_primary		6767177	0					
ANR	6767470	Identifier	con_primary		6767177	0					
ANR	6767471	Argument	combine		6767177	1					
ANR	6767472	Identifier	combine		6767177	0					
ANR	6767473	Argument	size_luma		6767177	2					
ANR	6767474	Identifier	size_luma		6767177	0					
ANR	6767475	ForStatement	for ( i = 1 ; i < nPrimaryComp ; i ++ )		6767177	10					
ANR	6767476	ForInit	i = 1 ;	2853:13:99142:99147	6767177	0	True				
ANR	6767477	AssignmentExpression	i = 1		6767177	0		=			
ANR	6767478	Identifier	i		6767177	0					
ANR	6767479	PrimaryExpression	1		6767177	1					
ANR	6767480	Condition	i < nPrimaryComp	2853:20:99149:99164	6767177	1	True				
ANR	6767481	RelationalExpression	i < nPrimaryComp		6767177	0		<			
ANR	6767482	Identifier	i		6767177	0					
ANR	6767483	Identifier	nPrimaryComp		6767177	1					
ANR	6767484	PostIncDecOperationExpression	i ++	2853:38:99167:99169	6767177	2	True				
ANR	6767485	Identifier	i		6767177	0					
ANR	6767486	IncDec	++		6767177	1					
ANR	6767487	CompoundStatement		36:43:1345:1345	6767177	3					
ANR	6767488	ExpressionStatement	"read_uint8 ( con , combine , size_chroma )"	2854:12:99186:99223	6767177	0	True				
ANR	6767489	CallExpression	"read_uint8 ( con , combine , size_chroma )"		6767177	0					
ANR	6767490	Callee	read_uint8		6767177	0					
ANR	6767491	Identifier	read_uint8		6767177	0					
ANR	6767492	ArgumentList	con		6767177	1					
ANR	6767493	Argument	con		6767177	0					
ANR	6767494	Identifier	con		6767177	0					
ANR	6767495	Argument	combine		6767177	1					
ANR	6767496	Identifier	combine		6767177	0					
ANR	6767497	Argument	size_chroma		6767177	2					
ANR	6767498	Identifier	size_chroma		6767177	0					
ANR	6767499	ExpressionStatement	"write_uint8 ( con_primary , combine , size_chroma )"	2855:12:99237:99283	6767177	1	True				
ANR	6767500	CallExpression	"write_uint8 ( con_primary , combine , size_chroma )"		6767177	0					
ANR	6767501	Callee	write_uint8		6767177	0					
ANR	6767502	Identifier	write_uint8		6767177	0					
ANR	6767503	ArgumentList	con_primary		6767177	1					
ANR	6767504	Argument	con_primary		6767177	0					
ANR	6767505	Identifier	con_primary		6767177	0					
ANR	6767506	Argument	combine		6767177	1					
ANR	6767507	Identifier	combine		6767177	0					
ANR	6767508	Argument	size_chroma		6767177	2					
ANR	6767509	Identifier	size_chroma		6767177	0					
ANR	6767510	ExpressionStatement	"read_uint8 ( con , combine , size_luma )"	2858:8:99304:99339	6767177	11	True				
ANR	6767511	CallExpression	"read_uint8 ( con , combine , size_luma )"		6767177	0					
ANR	6767512	Callee	read_uint8		6767177	0					
ANR	6767513	Identifier	read_uint8		6767177	0					
ANR	6767514	ArgumentList	con		6767177	1					
ANR	6767515	Argument	con		6767177	0					
ANR	6767516	Identifier	con		6767177	0					
ANR	6767517	Argument	combine		6767177	1					
ANR	6767518	Identifier	combine		6767177	0					
ANR	6767519	Argument	size_luma		6767177	2					
ANR	6767520	Identifier	size_luma		6767177	0					
ANR	6767521	ExpressionStatement	"write_uint8 ( con_alpha , combine , size_luma )"	2859:8:99349:99391	6767177	12	True				
ANR	6767522	CallExpression	"write_uint8 ( con_alpha , combine , size_luma )"		6767177	0					
ANR	6767523	Callee	write_uint8		6767177	0					
ANR	6767524	Identifier	write_uint8		6767177	0					
ANR	6767525	ArgumentList	con_alpha		6767177	1					
ANR	6767526	Argument	con_alpha		6767177	0					
ANR	6767527	Identifier	con_alpha		6767177	0					
ANR	6767528	Argument	combine		6767177	1					
ANR	6767529	Identifier	combine		6767177	0					
ANR	6767530	Argument	size_luma		6767177	2					
ANR	6767531	Identifier	size_luma		6767177	0					
ANR	6767532	ExpressionStatement	free ( combine )	2861:8:99402:99415	6767177	13	True				
ANR	6767533	CallExpression	free ( combine )		6767177	0					
ANR	6767534	Callee	free		6767177	0					
ANR	6767535	Identifier	free		6767177	0					
ANR	6767536	ArgumentList	combine		6767177	1					
ANR	6767537	Argument	combine		6767177	0					
ANR	6767538	Identifier	combine		6767177	0					
ANR	6767539	ElseStatement	else		6767177	0					
ANR	6767540	CompoundStatement		47:4:1610:1610	6767177	0					
ANR	6767541	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		6767177	0					
ANR	6767542	ForInit	i = 0 ;	2865:13:99452:99455	6767177	0	True				
ANR	6767543	AssignmentExpression	i = 0		6767177	0		=			
ANR	6767544	Identifier	i		6767177	0					
ANR	6767545	PrimaryExpression	0		6767177	1					
ANR	6767546	Condition	i < numPixels	2865:18:99457:99467	6767177	1	True				
ANR	6767547	RelationalExpression	i < numPixels		6767177	0		<			
ANR	6767548	Identifier	i		6767177	0					
ANR	6767549	Identifier	numPixels		6767177	1					
ANR	6767550	PostIncDecOperationExpression	i ++	2865:31:99470:99472	6767177	2	True				
ANR	6767551	Identifier	i		6767177	0					
ANR	6767552	IncDec	++		6767177	1					
ANR	6767553	CompoundStatement		49:8:1656:1656	6767177	3					
ANR	6767554	IfStatement	if ( con -> bpi == 8 )		6767177	0					
ANR	6767555	Condition	con -> bpi == 8	2867:16:99501:99513	6767177	0	True				
ANR	6767556	EqualityExpression	con -> bpi == 8		6767177	0		==			
ANR	6767557	PtrMemberAccess	con -> bpi		6767177	0					
ANR	6767558	Identifier	con		6767177	0					
ANR	6767559	Identifier	bpi		6767177	1					
ANR	6767560	PrimaryExpression	8		6767177	1					
ANR	6767561	CompoundStatement		52:16:1708:1747	6767177	1					
ANR	6767562	IdentifierDeclStatement	unsigned char combine [ MAX_CHANNELS + 1 ] ;	2869:16:99535:99574	6767177	0	True				
ANR	6767563	IdentifierDecl	combine [ MAX_CHANNELS + 1 ]		6767177	0					
ANR	6767564	IdentifierDeclType	unsigned char [ MAX_CHANNELS + 1 ]		6767177	0					
ANR	6767565	Identifier	combine		6767177	1					
ANR	6767566	AdditiveExpression	MAX_CHANNELS + 1		6767177	2		+			
ANR	6767567	Identifier	MAX_CHANNELS		6767177	0					
ANR	6767568	PrimaryExpression	1		6767177	1					
ANR	6767569	ExpressionStatement	"read_uint8 ( con , & combine [ 0 ] , nPrimaryComp )"	2870:16:99619:99660	6767177	1	True				
ANR	6767570	CallExpression	"read_uint8 ( con , & combine [ 0 ] , nPrimaryComp )"		6767177	0					
ANR	6767571	Callee	read_uint8		6767177	0					
ANR	6767572	Identifier	read_uint8		6767177	0					
ANR	6767573	ArgumentList	con		6767177	1					
ANR	6767574	Argument	con		6767177	0					
ANR	6767575	Identifier	con		6767177	0					
ANR	6767576	Argument	& combine [ 0 ]		6767177	1					
ANR	6767577	UnaryOperationExpression	& combine [ 0 ]		6767177	0					
ANR	6767578	UnaryOperator	&		6767177	0					
ANR	6767579	ArrayIndexing	combine [ 0 ]		6767177	1					
ANR	6767580	Identifier	combine		6767177	0					
ANR	6767581	PrimaryExpression	0		6767177	1					
ANR	6767582	Argument	nPrimaryComp		6767177	2					
ANR	6767583	Identifier	nPrimaryComp		6767177	0					
ANR	6767584	ExpressionStatement	"write_uint8 ( con_primary , combine , nPrimaryComp )"	2871:16:99678:99725	6767177	2	True				
ANR	6767585	CallExpression	"write_uint8 ( con_primary , combine , nPrimaryComp )"		6767177	0					
ANR	6767586	Callee	write_uint8		6767177	0					
ANR	6767587	Identifier	write_uint8		6767177	0					
ANR	6767588	ArgumentList	con_primary		6767177	1					
ANR	6767589	Argument	con_primary		6767177	0					
ANR	6767590	Identifier	con_primary		6767177	0					
ANR	6767591	Argument	combine		6767177	1					
ANR	6767592	Identifier	combine		6767177	0					
ANR	6767593	Argument	nPrimaryComp		6767177	2					
ANR	6767594	Identifier	nPrimaryComp		6767177	0					
ANR	6767595	ElseStatement	else		6767177	0					
ANR	6767596	IfStatement	if ( con -> bpi == 16 )		6767177	0					
ANR	6767597	Condition	con -> bpi == 16	2874:20:99762:99775	6767177	0	True				
ANR	6767598	EqualityExpression	con -> bpi == 16		6767177	0		==			
ANR	6767599	PtrMemberAccess	con -> bpi		6767177	0					
ANR	6767600	Identifier	con		6767177	0					
ANR	6767601	Identifier	bpi		6767177	1					
ANR	6767602	PrimaryExpression	16		6767177	1					
ANR	6767603	CompoundStatement		60:16:1982:2016	6767177	1					
ANR	6767604	IdentifierDeclStatement	uint16_t combine [ MAX_CHANNELS + 1 ] ;	2877:16:99809:99843	6767177	0	True				
ANR	6767605	IdentifierDecl	combine [ MAX_CHANNELS + 1 ]		6767177	0					
ANR	6767606	IdentifierDeclType	uint16_t [ MAX_CHANNELS + 1 ]		6767177	0					
ANR	6767607	Identifier	combine		6767177	1					
ANR	6767608	AdditiveExpression	MAX_CHANNELS + 1		6767177	2		+			
ANR	6767609	Identifier	MAX_CHANNELS		6767177	0					
ANR	6767610	PrimaryExpression	1		6767177	1					
ANR	6767611	ExpressionStatement	"read_uint16 ( con , & combine [ 0 ] , nPrimaryComp )"	2878:16:99888:99930	6767177	1	True				
ANR	6767612	CallExpression	"read_uint16 ( con , & combine [ 0 ] , nPrimaryComp )"		6767177	0					
ANR	6767613	Callee	read_uint16		6767177	0					
ANR	6767614	Identifier	read_uint16		6767177	0					
ANR	6767615	ArgumentList	con		6767177	1					
ANR	6767616	Argument	con		6767177	0					
ANR	6767617	Identifier	con		6767177	0					
ANR	6767618	Argument	& combine [ 0 ]		6767177	1					
ANR	6767619	UnaryOperationExpression	& combine [ 0 ]		6767177	0					
ANR	6767620	UnaryOperator	&		6767177	0					
ANR	6767621	ArrayIndexing	combine [ 0 ]		6767177	1					
ANR	6767622	Identifier	combine		6767177	0					
ANR	6767623	PrimaryExpression	0		6767177	1					
ANR	6767624	Argument	nPrimaryComp		6767177	2					
ANR	6767625	Identifier	nPrimaryComp		6767177	0					
ANR	6767626	ExpressionStatement	"write_uint16 ( con_primary , combine , nPrimaryComp )"	2879:16:99948:99996	6767177	2	True				
ANR	6767627	CallExpression	"write_uint16 ( con_primary , combine , nPrimaryComp )"		6767177	0					
ANR	6767628	Callee	write_uint16		6767177	0					
ANR	6767629	Identifier	write_uint16		6767177	0					
ANR	6767630	ArgumentList	con_primary		6767177	1					
ANR	6767631	Argument	con_primary		6767177	0					
ANR	6767632	Identifier	con_primary		6767177	0					
ANR	6767633	Argument	combine		6767177	1					
ANR	6767634	Identifier	combine		6767177	0					
ANR	6767635	Argument	nPrimaryComp		6767177	2					
ANR	6767636	Identifier	nPrimaryComp		6767177	0					
ANR	6767637	ElseStatement	else		6767177	0					
ANR	6767638	IfStatement	if ( con -> bpi == 32 )		6767177	0					
ANR	6767639	Condition	con -> bpi == 32	2882:20:100033:100046	6767177	0	True				
ANR	6767640	EqualityExpression	con -> bpi == 32		6767177	0		==			
ANR	6767641	PtrMemberAccess	con -> bpi		6767177	0					
ANR	6767642	Identifier	con		6767177	0					
ANR	6767643	Identifier	bpi		6767177	1					
ANR	6767644	PrimaryExpression	32		6767177	1					
ANR	6767645	CompoundStatement		68:16:2253:2287	6767177	1					
ANR	6767646	IdentifierDeclStatement	uint32_t combine [ MAX_CHANNELS + 1 ] ;	2885:16:100080:100114	6767177	0	True				
ANR	6767647	IdentifierDecl	combine [ MAX_CHANNELS + 1 ]		6767177	0					
ANR	6767648	IdentifierDeclType	uint32_t [ MAX_CHANNELS + 1 ]		6767177	0					
ANR	6767649	Identifier	combine		6767177	1					
ANR	6767650	AdditiveExpression	MAX_CHANNELS + 1		6767177	2		+			
ANR	6767651	Identifier	MAX_CHANNELS		6767177	0					
ANR	6767652	PrimaryExpression	1		6767177	1					
ANR	6767653	ExpressionStatement	"read_uint32 ( con , & combine [ 0 ] , nPrimaryComp )"	2886:16:100159:100201	6767177	1	True				
ANR	6767654	CallExpression	"read_uint32 ( con , & combine [ 0 ] , nPrimaryComp )"		6767177	0					
ANR	6767655	Callee	read_uint32		6767177	0					
ANR	6767656	Identifier	read_uint32		6767177	0					
ANR	6767657	ArgumentList	con		6767177	1					
ANR	6767658	Argument	con		6767177	0					
ANR	6767659	Identifier	con		6767177	0					
ANR	6767660	Argument	& combine [ 0 ]		6767177	1					
ANR	6767661	UnaryOperationExpression	& combine [ 0 ]		6767177	0					
ANR	6767662	UnaryOperator	&		6767177	0					
ANR	6767663	ArrayIndexing	combine [ 0 ]		6767177	1					
ANR	6767664	Identifier	combine		6767177	0					
ANR	6767665	PrimaryExpression	0		6767177	1					
ANR	6767666	Argument	nPrimaryComp		6767177	2					
ANR	6767667	Identifier	nPrimaryComp		6767177	0					
ANR	6767668	ExpressionStatement	"write_uint32 ( con_primary , combine , nPrimaryComp )"	2887:16:100219:100267	6767177	2	True				
ANR	6767669	CallExpression	"write_uint32 ( con_primary , combine , nPrimaryComp )"		6767177	0					
ANR	6767670	Callee	write_uint32		6767177	0					
ANR	6767671	Identifier	write_uint32		6767177	0					
ANR	6767672	ArgumentList	con_primary		6767177	1					
ANR	6767673	Argument	con_primary		6767177	0					
ANR	6767674	Identifier	con_primary		6767177	0					
ANR	6767675	Argument	combine		6767177	1					
ANR	6767676	Identifier	combine		6767177	0					
ANR	6767677	Argument	nPrimaryComp		6767177	2					
ANR	6767678	Identifier	nPrimaryComp		6767177	0					
ANR	6767679	ElseStatement	else		6767177	0					
ANR	6767680	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2891:16:100317:100350	6767177	0	True				
ANR	6767681	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		6767177	0					
ANR	6767682	Callee	assert		6767177	0					
ANR	6767683	Identifier	assert		6767177	0					
ANR	6767684	ArgumentList	"! ""Unsupported bitdepth\\n"""		6767177	1					
ANR	6767685	Argument	"! ""Unsupported bitdepth\\n"""		6767177	0					
ANR	6767686	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		6767177	0					
ANR	6767687	UnaryOperator	!		6767177	0					
ANR	6767688	PrimaryExpression	"""Unsupported bitdepth\\n"""		6767177	1					
ANR	6767689	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		6767177	1					
ANR	6767690	ForInit	i = 0 ;	2893:13:100375:100378	6767177	0	True				
ANR	6767691	AssignmentExpression	i = 0		6767177	0		=			
ANR	6767692	Identifier	i		6767177	0					
ANR	6767693	PrimaryExpression	0		6767177	1					
ANR	6767694	Condition	i < numPixels	2893:18:100380:100390	6767177	1	True				
ANR	6767695	RelationalExpression	i < numPixels		6767177	0		<			
ANR	6767696	Identifier	i		6767177	0					
ANR	6767697	Identifier	numPixels		6767177	1					
ANR	6767698	PostIncDecOperationExpression	i ++	2893:31:100393:100395	6767177	2	True				
ANR	6767699	Identifier	i		6767177	0					
ANR	6767700	IncDec	++		6767177	1					
ANR	6767701	CompoundStatement		77:8:2579:2579	6767177	3					
ANR	6767702	IfStatement	if ( con -> bpi == 8 )		6767177	0					
ANR	6767703	Condition	con -> bpi == 8	2895:16:100424:100436	6767177	0	True				
ANR	6767704	EqualityExpression	con -> bpi == 8		6767177	0		==			
ANR	6767705	PtrMemberAccess	con -> bpi		6767177	0					
ANR	6767706	Identifier	con		6767177	0					
ANR	6767707	Identifier	bpi		6767177	1					
ANR	6767708	PrimaryExpression	8		6767177	1					
ANR	6767709	CompoundStatement		80:16:2631:2655	6767177	1					
ANR	6767710	IdentifierDeclStatement	unsigned char combine [ 1 ] ;	2897:16:100458:100482	6767177	0	True				
ANR	6767711	IdentifierDecl	combine [ 1 ]		6767177	0					
ANR	6767712	IdentifierDeclType	unsigned char [ 1 ]		6767177	0					
ANR	6767713	Identifier	combine		6767177	1					
ANR	6767714	PrimaryExpression	1		6767177	2					
ANR	6767715	ExpressionStatement	"read_uint8 ( con , & combine [ 0 ] , 1 )"	2898:16:100500:100530	6767177	1	True				
ANR	6767716	CallExpression	"read_uint8 ( con , & combine [ 0 ] , 1 )"		6767177	0					
ANR	6767717	Callee	read_uint8		6767177	0					
ANR	6767718	Identifier	read_uint8		6767177	0					
ANR	6767719	ArgumentList	con		6767177	1					
ANR	6767720	Argument	con		6767177	0					
ANR	6767721	Identifier	con		6767177	0					
ANR	6767722	Argument	& combine [ 0 ]		6767177	1					
ANR	6767723	UnaryOperationExpression	& combine [ 0 ]		6767177	0					
ANR	6767724	UnaryOperator	&		6767177	0					
ANR	6767725	ArrayIndexing	combine [ 0 ]		6767177	1					
ANR	6767726	Identifier	combine		6767177	0					
ANR	6767727	PrimaryExpression	0		6767177	1					
ANR	6767728	Argument	1		6767177	2					
ANR	6767729	PrimaryExpression	1		6767177	0					
ANR	6767730	ExpressionStatement	"write_uint8 ( con_alpha , combine , 1 )"	2899:16:100548:100582	6767177	2	True				
ANR	6767731	CallExpression	"write_uint8 ( con_alpha , combine , 1 )"		6767177	0					
ANR	6767732	Callee	write_uint8		6767177	0					
ANR	6767733	Identifier	write_uint8		6767177	0					
ANR	6767734	ArgumentList	con_alpha		6767177	1					
ANR	6767735	Argument	con_alpha		6767177	0					
ANR	6767736	Identifier	con_alpha		6767177	0					
ANR	6767737	Argument	combine		6767177	1					
ANR	6767738	Identifier	combine		6767177	0					
ANR	6767739	Argument	1		6767177	2					
ANR	6767740	PrimaryExpression	1		6767177	0					
ANR	6767741	ElseStatement	else		6767177	0					
ANR	6767742	IfStatement	if ( con -> bpi == 16 )		6767177	0					
ANR	6767743	Condition	con -> bpi == 16	2902:20:100619:100632	6767177	0	True				
ANR	6767744	EqualityExpression	con -> bpi == 16		6767177	0		==			
ANR	6767745	PtrMemberAccess	con -> bpi		6767177	0					
ANR	6767746	Identifier	con		6767177	0					
ANR	6767747	Identifier	bpi		6767177	1					
ANR	6767748	PrimaryExpression	16		6767177	1					
ANR	6767749	CompoundStatement		88:16:2839:2858	6767177	1					
ANR	6767750	IdentifierDeclStatement	uint16_t combine [ 1 ] ;	2905:16:100666:100685	6767177	0	True				
ANR	6767751	IdentifierDecl	combine [ 1 ]		6767177	0					
ANR	6767752	IdentifierDeclType	uint16_t [ 1 ]		6767177	0					
ANR	6767753	Identifier	combine		6767177	1					
ANR	6767754	PrimaryExpression	1		6767177	2					
ANR	6767755	ExpressionStatement	"read_uint16 ( con , & combine [ 0 ] , 1 )"	2906:16:100703:100734	6767177	1	True				
ANR	6767756	CallExpression	"read_uint16 ( con , & combine [ 0 ] , 1 )"		6767177	0					
ANR	6767757	Callee	read_uint16		6767177	0					
ANR	6767758	Identifier	read_uint16		6767177	0					
ANR	6767759	ArgumentList	con		6767177	1					
ANR	6767760	Argument	con		6767177	0					
ANR	6767761	Identifier	con		6767177	0					
ANR	6767762	Argument	& combine [ 0 ]		6767177	1					
ANR	6767763	UnaryOperationExpression	& combine [ 0 ]		6767177	0					
ANR	6767764	UnaryOperator	&		6767177	0					
ANR	6767765	ArrayIndexing	combine [ 0 ]		6767177	1					
ANR	6767766	Identifier	combine		6767177	0					
ANR	6767767	PrimaryExpression	0		6767177	1					
ANR	6767768	Argument	1		6767177	2					
ANR	6767769	PrimaryExpression	1		6767177	0					
ANR	6767770	ExpressionStatement	"write_uint16 ( con_alpha , combine , 1 )"	2907:16:100752:100787	6767177	2	True				
ANR	6767771	CallExpression	"write_uint16 ( con_alpha , combine , 1 )"		6767177	0					
ANR	6767772	Callee	write_uint16		6767177	0					
ANR	6767773	Identifier	write_uint16		6767177	0					
ANR	6767774	ArgumentList	con_alpha		6767177	1					
ANR	6767775	Argument	con_alpha		6767177	0					
ANR	6767776	Identifier	con_alpha		6767177	0					
ANR	6767777	Argument	combine		6767177	1					
ANR	6767778	Identifier	combine		6767177	0					
ANR	6767779	Argument	1		6767177	2					
ANR	6767780	PrimaryExpression	1		6767177	0					
ANR	6767781	ElseStatement	else		6767177	0					
ANR	6767782	IfStatement	if ( con -> bpi == 32 )		6767177	0					
ANR	6767783	Condition	con -> bpi == 32	2910:20:100824:100837	6767177	0	True				
ANR	6767784	EqualityExpression	con -> bpi == 32		6767177	0		==			
ANR	6767785	PtrMemberAccess	con -> bpi		6767177	0					
ANR	6767786	Identifier	con		6767177	0					
ANR	6767787	Identifier	bpi		6767177	1					
ANR	6767788	PrimaryExpression	32		6767177	1					
ANR	6767789	CompoundStatement		96:16:3044:3063	6767177	1					
ANR	6767790	IdentifierDeclStatement	uint32_t combine [ 1 ] ;	2913:16:100871:100890	6767177	0	True				
ANR	6767791	IdentifierDecl	combine [ 1 ]		6767177	0					
ANR	6767792	IdentifierDeclType	uint32_t [ 1 ]		6767177	0					
ANR	6767793	Identifier	combine		6767177	1					
ANR	6767794	PrimaryExpression	1		6767177	2					
ANR	6767795	ExpressionStatement	"read_uint32 ( con , & combine [ 0 ] , 1 )"	2914:16:100908:100939	6767177	1	True				
ANR	6767796	CallExpression	"read_uint32 ( con , & combine [ 0 ] , 1 )"		6767177	0					
ANR	6767797	Callee	read_uint32		6767177	0					
ANR	6767798	Identifier	read_uint32		6767177	0					
ANR	6767799	ArgumentList	con		6767177	1					
ANR	6767800	Argument	con		6767177	0					
ANR	6767801	Identifier	con		6767177	0					
ANR	6767802	Argument	& combine [ 0 ]		6767177	1					
ANR	6767803	UnaryOperationExpression	& combine [ 0 ]		6767177	0					
ANR	6767804	UnaryOperator	&		6767177	0					
ANR	6767805	ArrayIndexing	combine [ 0 ]		6767177	1					
ANR	6767806	Identifier	combine		6767177	0					
ANR	6767807	PrimaryExpression	0		6767177	1					
ANR	6767808	Argument	1		6767177	2					
ANR	6767809	PrimaryExpression	1		6767177	0					
ANR	6767810	ExpressionStatement	"write_uint32 ( con_alpha , combine , 1 )"	2915:16:100957:100992	6767177	2	True				
ANR	6767811	CallExpression	"write_uint32 ( con_alpha , combine , 1 )"		6767177	0					
ANR	6767812	Callee	write_uint32		6767177	0					
ANR	6767813	Identifier	write_uint32		6767177	0					
ANR	6767814	ArgumentList	con_alpha		6767177	1					
ANR	6767815	Argument	con_alpha		6767177	0					
ANR	6767816	Identifier	con_alpha		6767177	0					
ANR	6767817	Argument	combine		6767177	1					
ANR	6767818	Identifier	combine		6767177	0					
ANR	6767819	Argument	1		6767177	2					
ANR	6767820	PrimaryExpression	1		6767177	0					
ANR	6767821	ElseStatement	else		6767177	0					
ANR	6767822	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	2919:16:101042:101075	6767177	0	True				
ANR	6767823	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		6767177	0					
ANR	6767824	Callee	assert		6767177	0					
ANR	6767825	Identifier	assert		6767177	0					
ANR	6767826	ArgumentList	"! ""Unsupported bitdepth\\n"""		6767177	1					
ANR	6767827	Argument	"! ""Unsupported bitdepth\\n"""		6767177	0					
ANR	6767828	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		6767177	0					
ANR	6767829	UnaryOperator	!		6767177	0					
ANR	6767830	PrimaryExpression	"""Unsupported bitdepth\\n"""		6767177	1					
ANR	6767831	ExpressionStatement	close_file ( con_primary )	2922:4:101097:101120	6767177	12	True				
ANR	6767832	CallExpression	close_file ( con_primary )		6767177	0					
ANR	6767833	Callee	close_file		6767177	0					
ANR	6767834	Identifier	close_file		6767177	0					
ANR	6767835	ArgumentList	con_primary		6767177	1					
ANR	6767836	Argument	con_primary		6767177	0					
ANR	6767837	Identifier	con_primary		6767177	0					
ANR	6767838	ExpressionStatement	close_file ( con_alpha )	2923:4:101126:101147	6767177	13	True				
ANR	6767839	CallExpression	close_file ( con_alpha )		6767177	0					
ANR	6767840	Callee	close_file		6767177	0					
ANR	6767841	Identifier	close_file		6767177	0					
ANR	6767842	ArgumentList	con_alpha		6767177	1					
ANR	6767843	Argument	con_alpha		6767177	0					
ANR	6767844	Identifier	con_alpha		6767177	0					
ANR	6767845	ReturnType	void		6767177	1					
ANR	6767846	Identifier	split_primary_alpha		6767177	2					
ANR	6767847	ParameterList	"jxr_image_t image , void * input_handle , context * con_primary , context * con_alpha , jxr_container_t container"		6767177	3					
ANR	6767848	Parameter	jxr_image_t image	2817:25:97719:97735	6767177	0	True				
ANR	6767849	ParameterType	jxr_image_t		6767177	0					
ANR	6767850	Identifier	image		6767177	1					
ANR	6767851	Parameter	void * input_handle	2817:43:97737:97754	6767177	1	True				
ANR	6767852	ParameterType	void *		6767177	0					
ANR	6767853	Identifier	input_handle		6767177	1					
ANR	6767854	Parameter	context * con_primary	2817:63:97757:97776	6767177	2	True				
ANR	6767855	ParameterType	context *		6767177	0					
ANR	6767856	Identifier	con_primary		6767177	1					
ANR	6767857	Parameter	context * con_alpha	2817:85:97779:97796	6767177	3	True				
ANR	6767858	ParameterType	context *		6767177	0					
ANR	6767859	Identifier	con_alpha		6767177	1					
ANR	6767860	Parameter	jxr_container_t container	2817:105:97799:97823	6767177	4	True				
ANR	6767861	ParameterType	jxr_container_t		6767177	0					
ANR	6767862	Identifier	container		6767177	1					
ANR	6767863	CFGEntryNode	ENTRY		6767177		True				
ANR	6767864	CFGExitNode	EXIT		6767177		True				
ANR	6767865	Symbol	container		6767177						
ANR	6767866	Symbol	con_alpha -> ncomp		6767177						
ANR	6767867	Symbol	ncomp		6767177						
ANR	6767868	Symbol	con		6767177						
ANR	6767869	Symbol	size_luma		6767177						
ANR	6767870	Symbol	& bpi		6767177						
ANR	6767871	Symbol	& ncomp		6767177						
ANR	6767872	Symbol	numPixels		6767177						
ANR	6767873	Symbol	* con_alpha		6767177						
ANR	6767874	Symbol	con_alpha		6767177						
ANR	6767875	Symbol	hei		6767177						
ANR	6767876	Symbol	photometric		6767177						
ANR	6767877	Symbol	isOutputYUV422		6767177						
ANR	6767878	Symbol	isOutputYUV444		6767177						
ANR	6767879	Symbol	wid		6767177						
ANR	6767880	Symbol	sf		6767177						
ANR	6767881	Symbol	* con		6767177						
ANR	6767882	Symbol	con -> bpi		6767177						
ANR	6767883	Symbol	isOutputYUV420		6767177						
ANR	6767884	Symbol	con_primary -> ncomp		6767177						
ANR	6767885	Symbol	bpi		6767177						
ANR	6767886	Symbol	& sf		6767177						
ANR	6767887	Symbol	jxr_get_OUTPUT_BITDEPTH		6767177						
ANR	6767888	Symbol	combine		6767177						
ANR	6767889	Symbol	image		6767177						
ANR	6767890	Symbol	malloc		6767177						
ANR	6767891	Symbol	nPrimaryComp		6767177						
ANR	6767892	Symbol	& padBytes		6767177						
ANR	6767893	Symbol	padBytes		6767177						
ANR	6767894	Symbol	i		6767177						
ANR	6767895	Symbol	size_chroma		6767177						
ANR	6767896	Symbol	& photometric		6767177						
ANR	6767897	Symbol	isOutputCMYKDirect		6767177						
ANR	6767898	Symbol	& hei		6767177						
ANR	6767899	Symbol	bytes		6767177						
ANR	6767900	Symbol	con_primary		6767177						
ANR	6767901	Symbol	input_handle		6767177						
ANR	6767902	Symbol	* con_primary		6767177						
ANR	6767903	Symbol	& wid		6767177						
ANR	6767904	Symbol	jxrc_get_pixel_format		6767177						
ANR	6767905	Function	separate_primary_alpha	2927:0:101153:104644							
ANR	6767906	FunctionDef	"separate_primary_alpha (jxr_image_t image , void * input_handle , char * path_out , char * path_primary , char * path_alpha , jxr_container_t container)"		6767905	0					
ANR	6767907	CompoundStatement		2928:0:101302:104644	6767905	0					
ANR	6767908	IdentifierDeclStatement	context * con ;	2930:4:101309:101321	6767905	0	True				
ANR	6767909	IdentifierDecl	* con		6767905	0					
ANR	6767910	IdentifierDeclType	context *		6767905	0					
ANR	6767911	Identifier	con		6767905	1					
ANR	6767912	IdentifierDeclStatement	int i ;	2932:4:101328:101333	6767905	1	True				
ANR	6767913	IdentifierDecl	i		6767905	0					
ANR	6767914	IdentifierDeclType	int		6767905	0					
ANR	6767915	Identifier	i		6767905	1					
ANR	6767916	IdentifierDeclStatement	"int wid , hei , ncomp , bpi ;"	2933:4:101339:101363	6767905	2	True				
ANR	6767917	IdentifierDecl	wid		6767905	0					
ANR	6767918	IdentifierDeclType	int		6767905	0					
ANR	6767919	Identifier	wid		6767905	1					
ANR	6767920	IdentifierDecl	hei		6767905	1					
ANR	6767921	IdentifierDeclType	int		6767905	0					
ANR	6767922	Identifier	hei		6767905	1					
ANR	6767923	IdentifierDecl	ncomp		6767905	2					
ANR	6767924	IdentifierDeclType	int		6767905	0					
ANR	6767925	Identifier	ncomp		6767905	1					
ANR	6767926	IdentifierDecl	bpi		6767905	3					
ANR	6767927	IdentifierDeclType	int		6767905	0					
ANR	6767928	Identifier	bpi		6767905	1					
ANR	6767929	IdentifierDeclStatement	"short sf , photometric ;"	2934:4:101369:101390	6767905	3	True				
ANR	6767930	IdentifierDecl	sf		6767905	0					
ANR	6767931	IdentifierDeclType	short		6767905	0					
ANR	6767932	Identifier	sf		6767905	1					
ANR	6767933	IdentifierDecl	photometric		6767905	1					
ANR	6767934	IdentifierDeclType	short		6767905	0					
ANR	6767935	Identifier	photometric		6767905	1					
ANR	6767936	IdentifierDeclStatement	int padBytes ;	2935:4:101396:101408	6767905	4	True				
ANR	6767937	IdentifierDecl	padBytes		6767905	0					
ANR	6767938	IdentifierDeclType	int		6767905	0					
ANR	6767939	Identifier	padBytes		6767905	1					
ANR	6767940	ExpressionStatement	con = ( context * ) input_handle	2937:4:101415:101444	6767905	5	True				
ANR	6767941	AssignmentExpression	con = ( context * ) input_handle		6767905	0		=			
ANR	6767942	Identifier	con		6767905	0					
ANR	6767943	CastExpression	( context * ) input_handle		6767905	1					
ANR	6767944	CastTarget	context *		6767905	0					
ANR	6767945	Identifier	input_handle		6767905	1					
ANR	6767946	ExpressionStatement	read_setup ( con )	2938:4:101450:101465	6767905	6	True				
ANR	6767947	CallExpression	read_setup ( con )		6767905	0					
ANR	6767948	Callee	read_setup		6767905	0					
ANR	6767949	Identifier	read_setup		6767905	0					
ANR	6767950	ArgumentList	con		6767905	1					
ANR	6767951	Argument	con		6767905	0					
ANR	6767952	Identifier	con		6767905	0					
ANR	6767953	IdentifierDeclStatement	context * con_primary = ( context * ) malloc ( sizeof ( context ) ) ;	2941:4:101473:101530	6767905	7	True				
ANR	6767954	IdentifierDecl	* con_primary = ( context * ) malloc ( sizeof ( context ) )		6767905	0					
ANR	6767955	IdentifierDeclType	context *		6767905	0					
ANR	6767956	Identifier	con_primary		6767905	1					
ANR	6767957	AssignmentExpression	* con_primary = ( context * ) malloc ( sizeof ( context ) )		6767905	2		=			
ANR	6767958	Identifier	con_primary		6767905	0					
ANR	6767959	CastExpression	( context * ) malloc ( sizeof ( context ) )		6767905	1					
ANR	6767960	CastTarget	context *		6767905	0					
ANR	6767961	CallExpression	malloc ( sizeof ( context ) )		6767905	1					
ANR	6767962	Callee	malloc		6767905	0					
ANR	6767963	Identifier	malloc		6767905	0					
ANR	6767964	ArgumentList	sizeof ( context )		6767905	1					
ANR	6767965	Argument	sizeof ( context )		6767905	0					
ANR	6767966	SizeofExpression	sizeof ( context )		6767905	0					
ANR	6767967	Sizeof	sizeof		6767905	0					
ANR	6767968	SizeofOperand	context		6767905	1					
ANR	6767969	ExpressionStatement	assert ( con_primary != NULL )	2942:4:101536:101563	6767905	8	True				
ANR	6767970	CallExpression	assert ( con_primary != NULL )		6767905	0					
ANR	6767971	Callee	assert		6767905	0					
ANR	6767972	Identifier	assert		6767905	0					
ANR	6767973	ArgumentList	con_primary != NULL		6767905	1					
ANR	6767974	Argument	con_primary != NULL		6767905	0					
ANR	6767975	EqualityExpression	con_primary != NULL		6767905	0		!=			
ANR	6767976	Identifier	con_primary		6767905	0					
ANR	6767977	Identifier	NULL		6767905	1					
ANR	6767978	IdentifierDeclStatement	context * con_alpha = ( context * ) malloc ( sizeof ( context ) ) ;	2943:4:101569:101624	6767905	9	True				
ANR	6767979	IdentifierDecl	* con_alpha = ( context * ) malloc ( sizeof ( context ) )		6767905	0					
ANR	6767980	IdentifierDeclType	context *		6767905	0					
ANR	6767981	Identifier	con_alpha		6767905	1					
ANR	6767982	AssignmentExpression	* con_alpha = ( context * ) malloc ( sizeof ( context ) )		6767905	2		=			
ANR	6767983	Identifier	con_alpha		6767905	0					
ANR	6767984	CastExpression	( context * ) malloc ( sizeof ( context ) )		6767905	1					
ANR	6767985	CastTarget	context *		6767905	0					
ANR	6767986	CallExpression	malloc ( sizeof ( context ) )		6767905	1					
ANR	6767987	Callee	malloc		6767905	0					
ANR	6767988	Identifier	malloc		6767905	0					
ANR	6767989	ArgumentList	sizeof ( context )		6767905	1					
ANR	6767990	Argument	sizeof ( context )		6767905	0					
ANR	6767991	SizeofExpression	sizeof ( context )		6767905	0					
ANR	6767992	Sizeof	sizeof		6767905	0					
ANR	6767993	SizeofOperand	context		6767905	1					
ANR	6767994	ExpressionStatement	assert ( con_alpha != NULL )	2944:4:101630:101655	6767905	10	True				
ANR	6767995	CallExpression	assert ( con_alpha != NULL )		6767905	0					
ANR	6767996	Callee	assert		6767905	0					
ANR	6767997	Identifier	assert		6767905	0					
ANR	6767998	ArgumentList	con_alpha != NULL		6767905	1					
ANR	6767999	Argument	con_alpha != NULL		6767905	0					
ANR	6768000	EqualityExpression	con_alpha != NULL		6767905	0		!=			
ANR	6768001	Identifier	con_alpha		6767905	0					
ANR	6768002	Identifier	NULL		6767905	1					
ANR	6768003	ExpressionStatement	"memcpy ( con_primary , con , sizeof ( * con ) )"	2946:4:101662:101700	6767905	11	True				
ANR	6768004	CallExpression	"memcpy ( con_primary , con , sizeof ( * con ) )"		6767905	0					
ANR	6768005	Callee	memcpy		6767905	0					
ANR	6768006	Identifier	memcpy		6767905	0					
ANR	6768007	ArgumentList	con_primary		6767905	1					
ANR	6768008	Argument	con_primary		6767905	0					
ANR	6768009	Identifier	con_primary		6767905	0					
ANR	6768010	Argument	con		6767905	1					
ANR	6768011	Identifier	con		6767905	0					
ANR	6768012	Argument	sizeof ( * con )		6767905	2					
ANR	6768013	SizeofExpression	sizeof ( * con )		6767905	0					
ANR	6768014	Sizeof	sizeof		6767905	0					
ANR	6768015	UnaryOperationExpression	* con		6767905	1					
ANR	6768016	UnaryOperator	*		6767905	0					
ANR	6768017	Identifier	con		6767905	1					
ANR	6768018	ExpressionStatement	"memcpy ( con_alpha , con , sizeof ( * con ) )"	2947:4:101706:101742	6767905	12	True				
ANR	6768019	CallExpression	"memcpy ( con_alpha , con , sizeof ( * con ) )"		6767905	0					
ANR	6768020	Callee	memcpy		6767905	0					
ANR	6768021	Identifier	memcpy		6767905	0					
ANR	6768022	ArgumentList	con_alpha		6767905	1					
ANR	6768023	Argument	con_alpha		6767905	0					
ANR	6768024	Identifier	con_alpha		6767905	0					
ANR	6768025	Argument	con		6767905	1					
ANR	6768026	Identifier	con		6767905	0					
ANR	6768027	Argument	sizeof ( * con )		6767905	2					
ANR	6768028	SizeofExpression	sizeof ( * con )		6767905	0					
ANR	6768029	Sizeof	sizeof		6767905	0					
ANR	6768030	UnaryOperationExpression	* con		6767905	1					
ANR	6768031	UnaryOperator	*		6767905	0					
ANR	6768032	Identifier	con		6767905	1					
ANR	6768033	ExpressionStatement	con_primary -> alpha = con_alpha -> alpha = 0	2948:4:101748:101789	6767905	13	True				
ANR	6768034	AssignmentExpression	con_primary -> alpha = con_alpha -> alpha = 0		6767905	0		=			
ANR	6768035	PtrMemberAccess	con_primary -> alpha		6767905	0					
ANR	6768036	Identifier	con_primary		6767905	0					
ANR	6768037	Identifier	alpha		6767905	1					
ANR	6768038	AssignmentExpression	con_alpha -> alpha = 0		6767905	1		=			
ANR	6768039	PtrMemberAccess	con_alpha -> alpha		6767905	0					
ANR	6768040	Identifier	con_alpha		6767905	0					
ANR	6768041	Identifier	alpha		6767905	1					
ANR	6768042	PrimaryExpression	0		6767905	1					
ANR	6768043	ExpressionStatement	con_primary -> buf = con_alpha -> buf = 0	2949:4:101795:101832	6767905	14	True				
ANR	6768044	AssignmentExpression	con_primary -> buf = con_alpha -> buf = 0		6767905	0		=			
ANR	6768045	PtrMemberAccess	con_primary -> buf		6767905	0					
ANR	6768046	Identifier	con_primary		6767905	0					
ANR	6768047	Identifier	buf		6767905	1					
ANR	6768048	AssignmentExpression	con_alpha -> buf = 0		6767905	1		=			
ANR	6768049	PtrMemberAccess	con_alpha -> buf		6767905	0					
ANR	6768050	Identifier	con_alpha		6767905	0					
ANR	6768051	Identifier	buf		6767905	1					
ANR	6768052	PrimaryExpression	0		6767905	1					
ANR	6768053	ExpressionStatement	con_primary -> ncomp = con -> ncomp - 1	2950:4:101838:101873	6767905	15	True				
ANR	6768054	AssignmentExpression	con_primary -> ncomp = con -> ncomp - 1		6767905	0		=			
ANR	6768055	PtrMemberAccess	con_primary -> ncomp		6767905	0					
ANR	6768056	Identifier	con_primary		6767905	0					
ANR	6768057	Identifier	ncomp		6767905	1					
ANR	6768058	AdditiveExpression	con -> ncomp - 1		6767905	1		-			
ANR	6768059	PtrMemberAccess	con -> ncomp		6767905	0					
ANR	6768060	Identifier	con		6767905	0					
ANR	6768061	Identifier	ncomp		6767905	1					
ANR	6768062	PrimaryExpression	1		6767905	1					
ANR	6768063	ExpressionStatement	con_alpha -> ncomp = 1	2951:4:101879:101899	6767905	16	True				
ANR	6768064	AssignmentExpression	con_alpha -> ncomp = 1		6767905	0		=			
ANR	6768065	PtrMemberAccess	con_alpha -> ncomp		6767905	0					
ANR	6768066	Identifier	con_alpha		6767905	0					
ANR	6768067	Identifier	ncomp		6767905	1					
ANR	6768068	PrimaryExpression	1		6767905	1					
ANR	6768069	ExpressionStatement	"get_file_parameters ( con , & wid , & hei , & ncomp , & bpi , & sf , & photometric , & padBytes )"	2953:4:101906:101986	6767905	17	True				
ANR	6768070	CallExpression	"get_file_parameters ( con , & wid , & hei , & ncomp , & bpi , & sf , & photometric , & padBytes )"		6767905	0					
ANR	6768071	Callee	get_file_parameters		6767905	0					
ANR	6768072	Identifier	get_file_parameters		6767905	0					
ANR	6768073	ArgumentList	con		6767905	1					
ANR	6768074	Argument	con		6767905	0					
ANR	6768075	Identifier	con		6767905	0					
ANR	6768076	Argument	& wid		6767905	1					
ANR	6768077	UnaryOperationExpression	& wid		6767905	0					
ANR	6768078	UnaryOperator	&		6767905	0					
ANR	6768079	Identifier	wid		6767905	1					
ANR	6768080	Argument	& hei		6767905	2					
ANR	6768081	UnaryOperationExpression	& hei		6767905	0					
ANR	6768082	UnaryOperator	&		6767905	0					
ANR	6768083	Identifier	hei		6767905	1					
ANR	6768084	Argument	& ncomp		6767905	3					
ANR	6768085	UnaryOperationExpression	& ncomp		6767905	0					
ANR	6768086	UnaryOperator	&		6767905	0					
ANR	6768087	Identifier	ncomp		6767905	1					
ANR	6768088	Argument	& bpi		6767905	4					
ANR	6768089	UnaryOperationExpression	& bpi		6767905	0					
ANR	6768090	UnaryOperator	&		6767905	0					
ANR	6768091	Identifier	bpi		6767905	1					
ANR	6768092	Argument	& sf		6767905	5					
ANR	6768093	UnaryOperationExpression	& sf		6767905	0					
ANR	6768094	UnaryOperator	&		6767905	0					
ANR	6768095	Identifier	sf		6767905	1					
ANR	6768096	Argument	& photometric		6767905	6					
ANR	6768097	UnaryOperationExpression	& photometric		6767905	0					
ANR	6768098	UnaryOperator	&		6767905	0					
ANR	6768099	Identifier	photometric		6767905	1					
ANR	6768100	Argument	& padBytes		6767905	7					
ANR	6768101	UnaryOperationExpression	& padBytes		6767905	0					
ANR	6768102	UnaryOperator	&		6767905	0					
ANR	6768103	Identifier	padBytes		6767905	1					
ANR	6768104	IdentifierDeclStatement	"const char * p = strrchr ( con -> name , '.' ) ;"	2955:4:101993:102032	6767905	18	True				
ANR	6768105	IdentifierDecl	"* p = strrchr ( con -> name , '.' )"		6767905	0					
ANR	6768106	IdentifierDeclType	const char *		6767905	0					
ANR	6768107	Identifier	p		6767905	1					
ANR	6768108	AssignmentExpression	"* p = strrchr ( con -> name , '.' )"		6767905	2		=			
ANR	6768109	Identifier	p		6767905	0					
ANR	6768110	CallExpression	"strrchr ( con -> name , '.' )"		6767905	1					
ANR	6768111	Callee	strrchr		6767905	0					
ANR	6768112	Identifier	strrchr		6767905	0					
ANR	6768113	ArgumentList	con -> name		6767905	1					
ANR	6768114	Argument	con -> name		6767905	0					
ANR	6768115	PtrMemberAccess	con -> name		6767905	0					
ANR	6768116	Identifier	con		6767905	0					
ANR	6768117	Identifier	name		6767905	1					
ANR	6768118	Argument	'.'		6767905	1					
ANR	6768119	PrimaryExpression	'.'		6767905	0					
ANR	6768120	IfStatement	if ( p == 0 )		6767905	19					
ANR	6768121	Condition	p == 0	2956:8:102042:102045	6767905	0	True				
ANR	6768122	EqualityExpression	p == 0		6767905	0		==			
ANR	6768123	Identifier	p		6767905	0					
ANR	6768124	PrimaryExpression	0		6767905	1					
ANR	6768125	ExpressionStatement	"error ( ""output file name %s needs a suffix to determine its format"" , con -> name )"	2957:8:102056:102134	6767905	1	True				
ANR	6768126	CallExpression	"error ( ""output file name %s needs a suffix to determine its format"" , con -> name )"		6767905	0					
ANR	6768127	Callee	error		6767905	0					
ANR	6768128	Identifier	error		6767905	0					
ANR	6768129	ArgumentList	"""output file name %s needs a suffix to determine its format"""		6767905	1					
ANR	6768130	Argument	"""output file name %s needs a suffix to determine its format"""		6767905	0					
ANR	6768131	PrimaryExpression	"""output file name %s needs a suffix to determine its format"""		6767905	0					
ANR	6768132	Argument	con -> name		6767905	1					
ANR	6768133	PtrMemberAccess	con -> name		6767905	0					
ANR	6768134	Identifier	con		6767905	0					
ANR	6768135	Identifier	name		6767905	1					
ANR	6768136	IfStatement	"if ( ! strcasecmp ( p , "".pnm"" ) || ! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" ) )"		6767905	20					
ANR	6768137	Condition	"! strcasecmp ( p , "".pnm"" ) || ! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" )"	2958:8:102144:102217	6767905	0	True				
ANR	6768138	OrExpression	"! strcasecmp ( p , "".pnm"" ) || ! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" )"		6767905	0		||			
ANR	6768139	UnaryOperationExpression	"! strcasecmp ( p , "".pnm"" )"		6767905	0					
ANR	6768140	UnaryOperator	!		6767905	0					
ANR	6768141	CallExpression	"strcasecmp ( p , "".pnm"" )"		6767905	1					
ANR	6768142	Callee	strcasecmp		6767905	0					
ANR	6768143	Identifier	strcasecmp		6767905	0					
ANR	6768144	ArgumentList	p		6767905	1					
ANR	6768145	Argument	p		6767905	0					
ANR	6768146	Identifier	p		6767905	0					
ANR	6768147	Argument	""".pnm"""		6767905	1					
ANR	6768148	PrimaryExpression	""".pnm"""		6767905	0					
ANR	6768149	OrExpression	"! strcasecmp ( p , "".pgm"" ) || ! strcasecmp ( p , "".ppm"" )"		6767905	1		||			
ANR	6768150	UnaryOperationExpression	"! strcasecmp ( p , "".pgm"" )"		6767905	0					
ANR	6768151	UnaryOperator	!		6767905	0					
ANR	6768152	CallExpression	"strcasecmp ( p , "".pgm"" )"		6767905	1					
ANR	6768153	Callee	strcasecmp		6767905	0					
ANR	6768154	Identifier	strcasecmp		6767905	0					
ANR	6768155	ArgumentList	p		6767905	1					
ANR	6768156	Argument	p		6767905	0					
ANR	6768157	Identifier	p		6767905	0					
ANR	6768158	Argument	""".pgm"""		6767905	1					
ANR	6768159	PrimaryExpression	""".pgm"""		6767905	0					
ANR	6768160	UnaryOperationExpression	"! strcasecmp ( p , "".ppm"" )"		6767905	1					
ANR	6768161	UnaryOperator	!		6767905	0					
ANR	6768162	CallExpression	"strcasecmp ( p , "".ppm"" )"		6767905	1					
ANR	6768163	Callee	strcasecmp		6767905	0					
ANR	6768164	Identifier	strcasecmp		6767905	0					
ANR	6768165	ArgumentList	p		6767905	1					
ANR	6768166	Argument	p		6767905	0					
ANR	6768167	Identifier	p		6767905	0					
ANR	6768168	Argument	""".ppm"""		6767905	1					
ANR	6768169	PrimaryExpression	""".ppm"""		6767905	0					
ANR	6768170	CompoundStatement		32:4:921:921	6767905	1					
ANR	6768171	ExpressionStatement	"error ( ""Alpha channel not supported by PNM, PGM and PPM"" )"	2960:8:102234:102290	6767905	0	True				
ANR	6768172	CallExpression	"error ( ""Alpha channel not supported by PNM, PGM and PPM"" )"		6767905	0					
ANR	6768173	Callee	error		6767905	0					
ANR	6768174	Identifier	error		6767905	0					
ANR	6768175	ArgumentList	"""Alpha channel not supported by PNM, PGM and PPM"""		6767905	1					
ANR	6768176	Argument	"""Alpha channel not supported by PNM, PGM and PPM"""		6767905	0					
ANR	6768177	PrimaryExpression	"""Alpha channel not supported by PNM, PGM and PPM"""		6767905	0					
ANR	6768178	ElseStatement	else		6767905	0					
ANR	6768179	IfStatement	"if ( ! strcasecmp ( p , "".tif"" ) )"		6767905	0					
ANR	6768180	Condition	"! strcasecmp ( p , "".tif"" )"	2962:13:102311:102332	6767905	0	True				
ANR	6768181	UnaryOperationExpression	"! strcasecmp ( p , "".tif"" )"		6767905	0					
ANR	6768182	UnaryOperator	!		6767905	0					
ANR	6768183	CallExpression	"strcasecmp ( p , "".tif"" )"		6767905	1					
ANR	6768184	Callee	strcasecmp		6767905	0					
ANR	6768185	Identifier	strcasecmp		6767905	0					
ANR	6768186	ArgumentList	p		6767905	1					
ANR	6768187	Argument	p		6767905	0					
ANR	6768188	Identifier	p		6767905	0					
ANR	6768189	Argument	""".tif"""		6767905	1					
ANR	6768190	PrimaryExpression	""".tif"""		6767905	0					
ANR	6768191	CompoundStatement		36:4:1036:1036	6767905	1					
ANR	6768192	ExpressionStatement	"strcpy ( path_primary , path_out )"	2964:8:102349:102379	6767905	0	True				
ANR	6768193	CallExpression	"strcpy ( path_primary , path_out )"		6767905	0					
ANR	6768194	Callee	strcpy		6767905	0					
ANR	6768195	Identifier	strcpy		6767905	0					
ANR	6768196	ArgumentList	path_primary		6767905	1					
ANR	6768197	Argument	path_primary		6767905	0					
ANR	6768198	Identifier	path_primary		6767905	0					
ANR	6768199	Argument	path_out		6767905	1					
ANR	6768200	Identifier	path_out		6767905	0					
ANR	6768201	ExpressionStatement	"strcat ( path_primary , ""_input_primary.tif"" )"	2965:8:102389:102431	6767905	1	True				
ANR	6768202	CallExpression	"strcat ( path_primary , ""_input_primary.tif"" )"		6767905	0					
ANR	6768203	Callee	strcat		6767905	0					
ANR	6768204	Identifier	strcat		6767905	0					
ANR	6768205	ArgumentList	path_primary		6767905	1					
ANR	6768206	Argument	path_primary		6767905	0					
ANR	6768207	Identifier	path_primary		6767905	0					
ANR	6768208	Argument	"""_input_primary.tif"""		6767905	1					
ANR	6768209	PrimaryExpression	"""_input_primary.tif"""		6767905	0					
ANR	6768210	ExpressionStatement	"strcpy ( path_alpha , path_out )"	2966:8:102441:102469	6767905	2	True				
ANR	6768211	CallExpression	"strcpy ( path_alpha , path_out )"		6767905	0					
ANR	6768212	Callee	strcpy		6767905	0					
ANR	6768213	Identifier	strcpy		6767905	0					
ANR	6768214	ArgumentList	path_alpha		6767905	1					
ANR	6768215	Argument	path_alpha		6767905	0					
ANR	6768216	Identifier	path_alpha		6767905	0					
ANR	6768217	Argument	path_out		6767905	1					
ANR	6768218	Identifier	path_out		6767905	0					
ANR	6768219	ExpressionStatement	"strcat ( path_alpha , ""_input_alpha.tif"" )"	2967:8:102479:102517	6767905	3	True				
ANR	6768220	CallExpression	"strcat ( path_alpha , ""_input_alpha.tif"" )"		6767905	0					
ANR	6768221	Callee	strcat		6767905	0					
ANR	6768222	Identifier	strcat		6767905	0					
ANR	6768223	ArgumentList	path_alpha		6767905	1					
ANR	6768224	Argument	path_alpha		6767905	0					
ANR	6768225	Identifier	path_alpha		6767905	0					
ANR	6768226	Argument	"""_input_alpha.tif"""		6767905	1					
ANR	6768227	PrimaryExpression	"""_input_alpha.tif"""		6767905	0					
ANR	6768228	ElseStatement	else		6767905	0					
ANR	6768229	IfStatement	"if ( ! strcasecmp ( p , "".raw"" ) )"		6767905	0					
ANR	6768230	Condition	"! strcasecmp ( p , "".raw"" )"	2970:13:102539:102560	6767905	0	True				
ANR	6768231	UnaryOperationExpression	"! strcasecmp ( p , "".raw"" )"		6767905	0					
ANR	6768232	UnaryOperator	!		6767905	0					
ANR	6768233	CallExpression	"strcasecmp ( p , "".raw"" )"		6767905	1					
ANR	6768234	Callee	strcasecmp		6767905	0					
ANR	6768235	Identifier	strcasecmp		6767905	0					
ANR	6768236	ArgumentList	p		6767905	1					
ANR	6768237	Argument	p		6767905	0					
ANR	6768238	Identifier	p		6767905	0					
ANR	6768239	Argument	""".raw"""		6767905	1					
ANR	6768240	PrimaryExpression	""".raw"""		6767905	0					
ANR	6768241	CompoundStatement		44:4:1264:1264	6767905	1					
ANR	6768242	ExpressionStatement	"strcpy ( path_primary , path_out )"	2972:8:102577:102607	6767905	0	True				
ANR	6768243	CallExpression	"strcpy ( path_primary , path_out )"		6767905	0					
ANR	6768244	Callee	strcpy		6767905	0					
ANR	6768245	Identifier	strcpy		6767905	0					
ANR	6768246	ArgumentList	path_primary		6767905	1					
ANR	6768247	Argument	path_primary		6767905	0					
ANR	6768248	Identifier	path_primary		6767905	0					
ANR	6768249	Argument	path_out		6767905	1					
ANR	6768250	Identifier	path_out		6767905	0					
ANR	6768251	ExpressionStatement	"strcat ( path_primary , ""_input_primary.raw"" )"	2973:8:102617:102659	6767905	1	True				
ANR	6768252	CallExpression	"strcat ( path_primary , ""_input_primary.raw"" )"		6767905	0					
ANR	6768253	Callee	strcat		6767905	0					
ANR	6768254	Identifier	strcat		6767905	0					
ANR	6768255	ArgumentList	path_primary		6767905	1					
ANR	6768256	Argument	path_primary		6767905	0					
ANR	6768257	Identifier	path_primary		6767905	0					
ANR	6768258	Argument	"""_input_primary.raw"""		6767905	1					
ANR	6768259	PrimaryExpression	"""_input_primary.raw"""		6767905	0					
ANR	6768260	ExpressionStatement	"strcpy ( path_alpha , path_out )"	2974:8:102669:102697	6767905	2	True				
ANR	6768261	CallExpression	"strcpy ( path_alpha , path_out )"		6767905	0					
ANR	6768262	Callee	strcpy		6767905	0					
ANR	6768263	Identifier	strcpy		6767905	0					
ANR	6768264	ArgumentList	path_alpha		6767905	1					
ANR	6768265	Argument	path_alpha		6767905	0					
ANR	6768266	Identifier	path_alpha		6767905	0					
ANR	6768267	Argument	path_out		6767905	1					
ANR	6768268	Identifier	path_out		6767905	0					
ANR	6768269	ExpressionStatement	"strcat ( path_alpha , ""_input_alpha.raw"" )"	2975:8:102707:102745	6767905	3	True				
ANR	6768270	CallExpression	"strcat ( path_alpha , ""_input_alpha.raw"" )"		6767905	0					
ANR	6768271	Callee	strcat		6767905	0					
ANR	6768272	Identifier	strcat		6767905	0					
ANR	6768273	ArgumentList	path_alpha		6767905	1					
ANR	6768274	Argument	path_alpha		6767905	0					
ANR	6768275	Identifier	path_alpha		6767905	0					
ANR	6768276	Argument	"""_input_alpha.raw"""		6767905	1					
ANR	6768277	PrimaryExpression	"""_input_alpha.raw"""		6767905	0					
ANR	6768278	ElseStatement	else		6767905	0					
ANR	6768279	ExpressionStatement	"error ( ""unrecognized suffix on output file name %s"" , con -> name )"	2977:9:102762:102824	6767905	0	True				
ANR	6768280	CallExpression	"error ( ""unrecognized suffix on output file name %s"" , con -> name )"		6767905	0					
ANR	6768281	Callee	error		6767905	0					
ANR	6768282	Identifier	error		6767905	0					
ANR	6768283	ArgumentList	"""unrecognized suffix on output file name %s"""		6767905	1					
ANR	6768284	Argument	"""unrecognized suffix on output file name %s"""		6767905	0					
ANR	6768285	PrimaryExpression	"""unrecognized suffix on output file name %s"""		6767905	0					
ANR	6768286	Argument	con -> name		6767905	1					
ANR	6768287	PtrMemberAccess	con -> name		6767905	0					
ANR	6768288	Identifier	con		6767905	0					
ANR	6768289	Identifier	name		6767905	1					
ANR	6768290	ExpressionStatement	con_primary -> name = path_primary	2979:4:102831:102863	6767905	21	True				
ANR	6768291	AssignmentExpression	con_primary -> name = path_primary		6767905	0		=			
ANR	6768292	PtrMemberAccess	con_primary -> name		6767905	0					
ANR	6768293	Identifier	con_primary		6767905	0					
ANR	6768294	Identifier	name		6767905	1					
ANR	6768295	Identifier	path_primary		6767905	1					
ANR	6768296	ExpressionStatement	con_alpha -> name = path_alpha	2980:4:102869:102897	6767905	22	True				
ANR	6768297	AssignmentExpression	con_alpha -> name = path_alpha		6767905	0		=			
ANR	6768298	PtrMemberAccess	con_alpha -> name		6767905	0					
ANR	6768299	Identifier	con_alpha		6767905	0					
ANR	6768300	Identifier	name		6767905	1					
ANR	6768301	Identifier	path_alpha		6767905	1					
ANR	6768302	IfStatement	if ( isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image ) )		6767905	23					
ANR	6768303	Condition	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )	2983:7:102908:103007	6767905	0	True				
ANR	6768304	OrExpression	isOutputYUV444 ( image ) || isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		6767905	0		||			
ANR	6768305	CallExpression	isOutputYUV444 ( image )		6767905	0					
ANR	6768306	Callee	isOutputYUV444		6767905	0					
ANR	6768307	Identifier	isOutputYUV444		6767905	0					
ANR	6768308	ArgumentList	image		6767905	1					
ANR	6768309	Argument	image		6767905	0					
ANR	6768310	Identifier	image		6767905	0					
ANR	6768311	OrExpression	isOutputYUV422 ( image ) || isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		6767905	1		||			
ANR	6768312	CallExpression	isOutputYUV422 ( image )		6767905	0					
ANR	6768313	Callee	isOutputYUV422		6767905	0					
ANR	6768314	Identifier	isOutputYUV422		6767905	0					
ANR	6768315	ArgumentList	image		6767905	1					
ANR	6768316	Argument	image		6767905	0					
ANR	6768317	Identifier	image		6767905	0					
ANR	6768318	OrExpression	isOutputYUV420 ( image ) || isOutputCMYKDirect ( image )		6767905	1		||			
ANR	6768319	CallExpression	isOutputYUV420 ( image )		6767905	0					
ANR	6768320	Callee	isOutputYUV420		6767905	0					
ANR	6768321	Identifier	isOutputYUV420		6767905	0					
ANR	6768322	ArgumentList	image		6767905	1					
ANR	6768323	Argument	image		6767905	0					
ANR	6768324	Identifier	image		6767905	0					
ANR	6768325	CallExpression	isOutputCMYKDirect ( image )		6767905	1					
ANR	6768326	Callee	isOutputCMYKDirect		6767905	0					
ANR	6768327	Identifier	isOutputCMYKDirect		6767905	0					
ANR	6768328	ArgumentList	image		6767905	1					
ANR	6768329	Argument	image		6767905	0					
ANR	6768330	Identifier	image		6767905	0					
ANR	6768331	CompoundStatement		57:4:1711:1711	6767905	1					
ANR	6768332	ExpressionStatement	"split_primary_alpha ( image , input_handle , con_primary , con_alpha , container )"	2985:8:103024:103098	6767905	0	True				
ANR	6768333	CallExpression	"split_primary_alpha ( image , input_handle , con_primary , con_alpha , container )"		6767905	0					
ANR	6768334	Callee	split_primary_alpha		6767905	0					
ANR	6768335	Identifier	split_primary_alpha		6767905	0					
ANR	6768336	ArgumentList	image		6767905	1					
ANR	6768337	Argument	image		6767905	0					
ANR	6768338	Identifier	image		6767905	0					
ANR	6768339	Argument	input_handle		6767905	1					
ANR	6768340	Identifier	input_handle		6767905	0					
ANR	6768341	Argument	con_primary		6767905	2					
ANR	6768342	Identifier	con_primary		6767905	0					
ANR	6768343	Argument	con_alpha		6767905	3					
ANR	6768344	Identifier	con_alpha		6767905	0					
ANR	6768345	Argument	container		6767905	4					
ANR	6768346	Identifier	container		6767905	0					
ANR	6768347	ReturnStatement	return ;	2986:8:103108:103114	6767905	1	True				
ANR	6768348	ExpressionStatement	"start_output_file ( con_primary , wid , hei , wid , hei , con_primary -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"	2989:4:103127:103263	6767905	24	True				
ANR	6768349	CallExpression	"start_output_file ( con_primary , wid , hei , wid , hei , con_primary -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"		6767905	0					
ANR	6768350	Callee	start_output_file		6767905	0					
ANR	6768351	Identifier	start_output_file		6767905	0					
ANR	6768352	ArgumentList	con_primary		6767905	1					
ANR	6768353	Argument	con_primary		6767905	0					
ANR	6768354	Identifier	con_primary		6767905	0					
ANR	6768355	Argument	wid		6767905	1					
ANR	6768356	Identifier	wid		6767905	0					
ANR	6768357	Argument	hei		6767905	2					
ANR	6768358	Identifier	hei		6767905	0					
ANR	6768359	Argument	wid		6767905	3					
ANR	6768360	Identifier	wid		6767905	0					
ANR	6768361	Argument	hei		6767905	4					
ANR	6768362	Identifier	hei		6767905	0					
ANR	6768363	Argument	con_primary -> ncomp		6767905	5					
ANR	6768364	PtrMemberAccess	con_primary -> ncomp		6767905	0					
ANR	6768365	Identifier	con_primary		6767905	0					
ANR	6768366	Identifier	ncomp		6767905	1					
ANR	6768367	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6767905	6					
ANR	6768368	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6767905	0					
ANR	6768369	Callee	jxr_get_OUTPUT_BITDEPTH		6767905	0					
ANR	6768370	Identifier	jxr_get_OUTPUT_BITDEPTH		6767905	0					
ANR	6768371	ArgumentList	image		6767905	1					
ANR	6768372	Argument	image		6767905	0					
ANR	6768373	Identifier	image		6767905	0					
ANR	6768374	Argument	jxrc_get_pixel_format ( container )		6767905	7					
ANR	6768375	CallExpression	jxrc_get_pixel_format ( container )		6767905	0					
ANR	6768376	Callee	jxrc_get_pixel_format		6767905	0					
ANR	6768377	Identifier	jxrc_get_pixel_format		6767905	0					
ANR	6768378	ArgumentList	container		6767905	1					
ANR	6768379	Argument	container		6767905	0					
ANR	6768380	Identifier	container		6767905	0					
ANR	6768381	ExpressionStatement	"start_output_file ( con_alpha , wid , hei , wid , hei , con_alpha -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"	2990:4:103269:103401	6767905	25	True				
ANR	6768382	CallExpression	"start_output_file ( con_alpha , wid , hei , wid , hei , con_alpha -> ncomp , jxr_get_OUTPUT_BITDEPTH ( image ) , jxrc_get_pixel_format ( container ) )"		6767905	0					
ANR	6768383	Callee	start_output_file		6767905	0					
ANR	6768384	Identifier	start_output_file		6767905	0					
ANR	6768385	ArgumentList	con_alpha		6767905	1					
ANR	6768386	Argument	con_alpha		6767905	0					
ANR	6768387	Identifier	con_alpha		6767905	0					
ANR	6768388	Argument	wid		6767905	1					
ANR	6768389	Identifier	wid		6767905	0					
ANR	6768390	Argument	hei		6767905	2					
ANR	6768391	Identifier	hei		6767905	0					
ANR	6768392	Argument	wid		6767905	3					
ANR	6768393	Identifier	wid		6767905	0					
ANR	6768394	Argument	hei		6767905	4					
ANR	6768395	Identifier	hei		6767905	0					
ANR	6768396	Argument	con_alpha -> ncomp		6767905	5					
ANR	6768397	PtrMemberAccess	con_alpha -> ncomp		6767905	0					
ANR	6768398	Identifier	con_alpha		6767905	0					
ANR	6768399	Identifier	ncomp		6767905	1					
ANR	6768400	Argument	jxr_get_OUTPUT_BITDEPTH ( image )		6767905	6					
ANR	6768401	CallExpression	jxr_get_OUTPUT_BITDEPTH ( image )		6767905	0					
ANR	6768402	Callee	jxr_get_OUTPUT_BITDEPTH		6767905	0					
ANR	6768403	Identifier	jxr_get_OUTPUT_BITDEPTH		6767905	0					
ANR	6768404	ArgumentList	image		6767905	1					
ANR	6768405	Argument	image		6767905	0					
ANR	6768406	Identifier	image		6767905	0					
ANR	6768407	Argument	jxrc_get_pixel_format ( container )		6767905	7					
ANR	6768408	CallExpression	jxrc_get_pixel_format ( container )		6767905	0					
ANR	6768409	Callee	jxrc_get_pixel_format		6767905	0					
ANR	6768410	Identifier	jxrc_get_pixel_format		6767905	0					
ANR	6768411	ArgumentList	container		6767905	1					
ANR	6768412	Argument	container		6767905	0					
ANR	6768413	Identifier	container		6767905	0					
ANR	6768414	IdentifierDeclStatement	int numPixels = wid * hei ;	2992:4:103408:103433	6767905	26	True				
ANR	6768415	IdentifierDecl	numPixels = wid * hei		6767905	0					
ANR	6768416	IdentifierDeclType	int		6767905	0					
ANR	6768417	Identifier	numPixels		6767905	1					
ANR	6768418	AssignmentExpression	numPixels = wid * hei		6767905	2		=			
ANR	6768419	Identifier	numPixels		6767905	0					
ANR	6768420	MultiplicativeExpression	wid * hei		6767905	1		*			
ANR	6768421	Identifier	wid		6767905	0					
ANR	6768422	Identifier	hei		6767905	1					
ANR	6768423	IdentifierDeclStatement	int nPrimaryComp = ncomp - 1 ;	2993:4:103439:103465	6767905	27	True				
ANR	6768424	IdentifierDecl	nPrimaryComp = ncomp - 1		6767905	0					
ANR	6768425	IdentifierDeclType	int		6767905	0					
ANR	6768426	Identifier	nPrimaryComp		6767905	1					
ANR	6768427	AssignmentExpression	nPrimaryComp = ncomp - 1		6767905	2		=			
ANR	6768428	Identifier	nPrimaryComp		6767905	0					
ANR	6768429	AdditiveExpression	ncomp - 1		6767905	1		-			
ANR	6768430	Identifier	ncomp		6767905	0					
ANR	6768431	PrimaryExpression	1		6767905	1					
ANR	6768432	IfStatement	if ( con -> bpi == 8 )		6767905	28					
ANR	6768433	Condition	con -> bpi == 8	2995:8:103476:103488	6767905	0	True				
ANR	6768434	EqualityExpression	con -> bpi == 8		6767905	0		==			
ANR	6768435	PtrMemberAccess	con -> bpi		6767905	0					
ANR	6768436	Identifier	con		6767905	0					
ANR	6768437	Identifier	bpi		6767905	1					
ANR	6768438	PrimaryExpression	8		6767905	1					
ANR	6768439	CompoundStatement		68:23:2188:2188	6767905	1					
ANR	6768440	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		6767905	0					
ANR	6768441	ForInit	i = 0 ;	2996:13:103506:103509	6767905	0	True				
ANR	6768442	AssignmentExpression	i = 0		6767905	0		=			
ANR	6768443	Identifier	i		6767905	0					
ANR	6768444	PrimaryExpression	0		6767905	1					
ANR	6768445	Condition	i < numPixels	2996:18:103511:103521	6767905	1	True				
ANR	6768446	RelationalExpression	i < numPixels		6767905	0		<			
ANR	6768447	Identifier	i		6767905	0					
ANR	6768448	Identifier	numPixels		6767905	1					
ANR	6768449	PostIncDecOperationExpression	i ++	2996:31:103524:103526	6767905	2	True				
ANR	6768450	Identifier	i		6767905	0					
ANR	6768451	IncDec	++		6767905	1					
ANR	6768452	CompoundStatement		70:12:2240:2283	6767905	3					
ANR	6768453	IdentifierDeclStatement	unsigned char combine [ MAX_CHANNELS + 1 + 1 ] ;	2997:12:103543:103586	6767905	0	True				
ANR	6768454	IdentifierDecl	combine [ MAX_CHANNELS + 1 + 1 ]		6767905	0					
ANR	6768455	IdentifierDeclType	unsigned char [ MAX_CHANNELS + 1 + 1 ]		6767905	0					
ANR	6768456	Identifier	combine		6767905	1					
ANR	6768457	AdditiveExpression	MAX_CHANNELS + 1 + 1		6767905	2		+			
ANR	6768458	Identifier	MAX_CHANNELS		6767905	0					
ANR	6768459	AdditiveExpression	1 + 1		6767905	1		+			
ANR	6768460	PrimaryExpression	1		6767905	0					
ANR	6768461	PrimaryExpression	1		6767905	1					
ANR	6768462	ExpressionStatement	"read_uint8 ( con , & combine [ 0 ] , ncomp )"	2998:12:103641:103675	6767905	1	True				
ANR	6768463	CallExpression	"read_uint8 ( con , & combine [ 0 ] , ncomp )"		6767905	0					
ANR	6768464	Callee	read_uint8		6767905	0					
ANR	6768465	Identifier	read_uint8		6767905	0					
ANR	6768466	ArgumentList	con		6767905	1					
ANR	6768467	Argument	con		6767905	0					
ANR	6768468	Identifier	con		6767905	0					
ANR	6768469	Argument	& combine [ 0 ]		6767905	1					
ANR	6768470	UnaryOperationExpression	& combine [ 0 ]		6767905	0					
ANR	6768471	UnaryOperator	&		6767905	0					
ANR	6768472	ArrayIndexing	combine [ 0 ]		6767905	1					
ANR	6768473	Identifier	combine		6767905	0					
ANR	6768474	PrimaryExpression	0		6767905	1					
ANR	6768475	Argument	ncomp		6767905	2					
ANR	6768476	Identifier	ncomp		6767905	0					
ANR	6768477	ExpressionStatement	"write_uint8 ( con_primary , combine , nPrimaryComp )"	2999:12:103689:103736	6767905	2	True				
ANR	6768478	CallExpression	"write_uint8 ( con_primary , combine , nPrimaryComp )"		6767905	0					
ANR	6768479	Callee	write_uint8		6767905	0					
ANR	6768480	Identifier	write_uint8		6767905	0					
ANR	6768481	ArgumentList	con_primary		6767905	1					
ANR	6768482	Argument	con_primary		6767905	0					
ANR	6768483	Identifier	con_primary		6767905	0					
ANR	6768484	Argument	combine		6767905	1					
ANR	6768485	Identifier	combine		6767905	0					
ANR	6768486	Argument	nPrimaryComp		6767905	2					
ANR	6768487	Identifier	nPrimaryComp		6767905	0					
ANR	6768488	ExpressionStatement	"write_uint8 ( con_alpha , & ( combine [ nPrimaryComp ] ) , 1 )"	3000:12:103750:103801	6767905	3	True				
ANR	6768489	CallExpression	"write_uint8 ( con_alpha , & ( combine [ nPrimaryComp ] ) , 1 )"		6767905	0					
ANR	6768490	Callee	write_uint8		6767905	0					
ANR	6768491	Identifier	write_uint8		6767905	0					
ANR	6768492	ArgumentList	con_alpha		6767905	1					
ANR	6768493	Argument	con_alpha		6767905	0					
ANR	6768494	Identifier	con_alpha		6767905	0					
ANR	6768495	Argument	& ( combine [ nPrimaryComp ] )		6767905	1					
ANR	6768496	UnaryOperationExpression	& ( combine [ nPrimaryComp ] )		6767905	0					
ANR	6768497	UnaryOperator	&		6767905	0					
ANR	6768498	ArrayIndexing	combine [ nPrimaryComp ]		6767905	1					
ANR	6768499	Identifier	combine		6767905	0					
ANR	6768500	Identifier	nPrimaryComp		6767905	1					
ANR	6768501	Argument	1		6767905	2					
ANR	6768502	PrimaryExpression	1		6767905	0					
ANR	6768503	ElseStatement	else		6767905	0					
ANR	6768504	IfStatement	if ( con -> bpi == 16 )		6767905	0					
ANR	6768505	Condition	con -> bpi == 16	3004:12:103832:103845	6767905	0	True				
ANR	6768506	EqualityExpression	con -> bpi == 16		6767905	0		==			
ANR	6768507	PtrMemberAccess	con -> bpi		6767905	0					
ANR	6768508	Identifier	con		6767905	0					
ANR	6768509	Identifier	bpi		6767905	1					
ANR	6768510	PrimaryExpression	16		6767905	1					
ANR	6768511	CompoundStatement		78:4:2549:2549	6767905	1					
ANR	6768512	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		6767905	0					
ANR	6768513	ForInit	i = 0 ;	3006:13:103867:103870	6767905	0	True				
ANR	6768514	AssignmentExpression	i = 0		6767905	0		=			
ANR	6768515	Identifier	i		6767905	0					
ANR	6768516	PrimaryExpression	0		6767905	1					
ANR	6768517	Condition	i < numPixels	3006:18:103872:103882	6767905	1	True				
ANR	6768518	RelationalExpression	i < numPixels		6767905	0		<			
ANR	6768519	Identifier	i		6767905	0					
ANR	6768520	Identifier	numPixels		6767905	1					
ANR	6768521	PostIncDecOperationExpression	i ++	3006:31:103885:103887	6767905	2	True				
ANR	6768522	Identifier	i		6767905	0					
ANR	6768523	IncDec	++		6767905	1					
ANR	6768524	CompoundStatement		80:12:2601:2639	6767905	3					
ANR	6768525	IdentifierDeclStatement	uint16_t combine [ MAX_CHANNELS + 1 + 1 ] ;	3007:12:103904:103942	6767905	0	True				
ANR	6768526	IdentifierDecl	combine [ MAX_CHANNELS + 1 + 1 ]		6767905	0					
ANR	6768527	IdentifierDeclType	uint16_t [ MAX_CHANNELS + 1 + 1 ]		6767905	0					
ANR	6768528	Identifier	combine		6767905	1					
ANR	6768529	AdditiveExpression	MAX_CHANNELS + 1 + 1		6767905	2		+			
ANR	6768530	Identifier	MAX_CHANNELS		6767905	0					
ANR	6768531	AdditiveExpression	1 + 1		6767905	1		+			
ANR	6768532	PrimaryExpression	1		6767905	0					
ANR	6768533	PrimaryExpression	1		6767905	1					
ANR	6768534	ExpressionStatement	"read_uint16 ( con , & combine [ 0 ] , ncomp )"	3008:12:103997:104032	6767905	1	True				
ANR	6768535	CallExpression	"read_uint16 ( con , & combine [ 0 ] , ncomp )"		6767905	0					
ANR	6768536	Callee	read_uint16		6767905	0					
ANR	6768537	Identifier	read_uint16		6767905	0					
ANR	6768538	ArgumentList	con		6767905	1					
ANR	6768539	Argument	con		6767905	0					
ANR	6768540	Identifier	con		6767905	0					
ANR	6768541	Argument	& combine [ 0 ]		6767905	1					
ANR	6768542	UnaryOperationExpression	& combine [ 0 ]		6767905	0					
ANR	6768543	UnaryOperator	&		6767905	0					
ANR	6768544	ArrayIndexing	combine [ 0 ]		6767905	1					
ANR	6768545	Identifier	combine		6767905	0					
ANR	6768546	PrimaryExpression	0		6767905	1					
ANR	6768547	Argument	ncomp		6767905	2					
ANR	6768548	Identifier	ncomp		6767905	0					
ANR	6768549	ExpressionStatement	"write_uint16 ( con_primary , combine , nPrimaryComp )"	3009:12:104046:104094	6767905	2	True				
ANR	6768550	CallExpression	"write_uint16 ( con_primary , combine , nPrimaryComp )"		6767905	0					
ANR	6768551	Callee	write_uint16		6767905	0					
ANR	6768552	Identifier	write_uint16		6767905	0					
ANR	6768553	ArgumentList	con_primary		6767905	1					
ANR	6768554	Argument	con_primary		6767905	0					
ANR	6768555	Identifier	con_primary		6767905	0					
ANR	6768556	Argument	combine		6767905	1					
ANR	6768557	Identifier	combine		6767905	0					
ANR	6768558	Argument	nPrimaryComp		6767905	2					
ANR	6768559	Identifier	nPrimaryComp		6767905	0					
ANR	6768560	ExpressionStatement	"write_uint16 ( con_alpha , & ( combine [ nPrimaryComp ] ) , 1 )"	3010:12:104108:104160	6767905	3	True				
ANR	6768561	CallExpression	"write_uint16 ( con_alpha , & ( combine [ nPrimaryComp ] ) , 1 )"		6767905	0					
ANR	6768562	Callee	write_uint16		6767905	0					
ANR	6768563	Identifier	write_uint16		6767905	0					
ANR	6768564	ArgumentList	con_alpha		6767905	1					
ANR	6768565	Argument	con_alpha		6767905	0					
ANR	6768566	Identifier	con_alpha		6767905	0					
ANR	6768567	Argument	& ( combine [ nPrimaryComp ] )		6767905	1					
ANR	6768568	UnaryOperationExpression	& ( combine [ nPrimaryComp ] )		6767905	0					
ANR	6768569	UnaryOperator	&		6767905	0					
ANR	6768570	ArrayIndexing	combine [ nPrimaryComp ]		6767905	1					
ANR	6768571	Identifier	combine		6767905	0					
ANR	6768572	Identifier	nPrimaryComp		6767905	1					
ANR	6768573	Argument	1		6767905	2					
ANR	6768574	PrimaryExpression	1		6767905	0					
ANR	6768575	ElseStatement	else		6767905	0					
ANR	6768576	IfStatement	if ( con -> bpi == 32 )		6767905	0					
ANR	6768577	Condition	con -> bpi == 32	3013:12:104190:104203	6767905	0	True				
ANR	6768578	EqualityExpression	con -> bpi == 32		6767905	0		==			
ANR	6768579	PtrMemberAccess	con -> bpi		6767905	0					
ANR	6768580	Identifier	con		6767905	0					
ANR	6768581	Identifier	bpi		6767905	1					
ANR	6768582	PrimaryExpression	32		6767905	1					
ANR	6768583	CompoundStatement		87:4:2907:2907	6767905	1					
ANR	6768584	ForStatement	for ( i = 0 ; i < numPixels ; i ++ )		6767905	0					
ANR	6768585	ForInit	i = 0 ;	3015:13:104225:104228	6767905	0	True				
ANR	6768586	AssignmentExpression	i = 0		6767905	0		=			
ANR	6768587	Identifier	i		6767905	0					
ANR	6768588	PrimaryExpression	0		6767905	1					
ANR	6768589	Condition	i < numPixels	3015:18:104230:104240	6767905	1	True				
ANR	6768590	RelationalExpression	i < numPixels		6767905	0		<			
ANR	6768591	Identifier	i		6767905	0					
ANR	6768592	Identifier	numPixels		6767905	1					
ANR	6768593	PostIncDecOperationExpression	i ++	3015:31:104243:104245	6767905	2	True				
ANR	6768594	Identifier	i		6767905	0					
ANR	6768595	IncDec	++		6767905	1					
ANR	6768596	CompoundStatement		89:12:2959:2997	6767905	3					
ANR	6768597	IdentifierDeclStatement	uint32_t combine [ MAX_CHANNELS + 1 + 1 ] ;	3016:12:104262:104300	6767905	0	True				
ANR	6768598	IdentifierDecl	combine [ MAX_CHANNELS + 1 + 1 ]		6767905	0					
ANR	6768599	IdentifierDeclType	uint32_t [ MAX_CHANNELS + 1 + 1 ]		6767905	0					
ANR	6768600	Identifier	combine		6767905	1					
ANR	6768601	AdditiveExpression	MAX_CHANNELS + 1 + 1		6767905	2		+			
ANR	6768602	Identifier	MAX_CHANNELS		6767905	0					
ANR	6768603	AdditiveExpression	1 + 1		6767905	1		+			
ANR	6768604	PrimaryExpression	1		6767905	0					
ANR	6768605	PrimaryExpression	1		6767905	1					
ANR	6768606	ExpressionStatement	"read_uint32 ( con , & combine [ 0 ] , ncomp )"	3017:12:104355:104390	6767905	1	True				
ANR	6768607	CallExpression	"read_uint32 ( con , & combine [ 0 ] , ncomp )"		6767905	0					
ANR	6768608	Callee	read_uint32		6767905	0					
ANR	6768609	Identifier	read_uint32		6767905	0					
ANR	6768610	ArgumentList	con		6767905	1					
ANR	6768611	Argument	con		6767905	0					
ANR	6768612	Identifier	con		6767905	0					
ANR	6768613	Argument	& combine [ 0 ]		6767905	1					
ANR	6768614	UnaryOperationExpression	& combine [ 0 ]		6767905	0					
ANR	6768615	UnaryOperator	&		6767905	0					
ANR	6768616	ArrayIndexing	combine [ 0 ]		6767905	1					
ANR	6768617	Identifier	combine		6767905	0					
ANR	6768618	PrimaryExpression	0		6767905	1					
ANR	6768619	Argument	ncomp		6767905	2					
ANR	6768620	Identifier	ncomp		6767905	0					
ANR	6768621	ExpressionStatement	"write_uint32 ( con_primary , combine , nPrimaryComp )"	3018:12:104404:104452	6767905	2	True				
ANR	6768622	CallExpression	"write_uint32 ( con_primary , combine , nPrimaryComp )"		6767905	0					
ANR	6768623	Callee	write_uint32		6767905	0					
ANR	6768624	Identifier	write_uint32		6767905	0					
ANR	6768625	ArgumentList	con_primary		6767905	1					
ANR	6768626	Argument	con_primary		6767905	0					
ANR	6768627	Identifier	con_primary		6767905	0					
ANR	6768628	Argument	combine		6767905	1					
ANR	6768629	Identifier	combine		6767905	0					
ANR	6768630	Argument	nPrimaryComp		6767905	2					
ANR	6768631	Identifier	nPrimaryComp		6767905	0					
ANR	6768632	ExpressionStatement	"write_uint32 ( con_alpha , & ( combine [ nPrimaryComp ] ) , 1 )"	3019:12:104466:104518	6767905	3	True				
ANR	6768633	CallExpression	"write_uint32 ( con_alpha , & ( combine [ nPrimaryComp ] ) , 1 )"		6767905	0					
ANR	6768634	Callee	write_uint32		6767905	0					
ANR	6768635	Identifier	write_uint32		6767905	0					
ANR	6768636	ArgumentList	con_alpha		6767905	1					
ANR	6768637	Argument	con_alpha		6767905	0					
ANR	6768638	Identifier	con_alpha		6767905	0					
ANR	6768639	Argument	& ( combine [ nPrimaryComp ] )		6767905	1					
ANR	6768640	UnaryOperationExpression	& ( combine [ nPrimaryComp ] )		6767905	0					
ANR	6768641	UnaryOperator	&		6767905	0					
ANR	6768642	ArrayIndexing	combine [ nPrimaryComp ]		6767905	1					
ANR	6768643	Identifier	combine		6767905	0					
ANR	6768644	Identifier	nPrimaryComp		6767905	1					
ANR	6768645	Argument	1		6767905	2					
ANR	6768646	PrimaryExpression	1		6767905	0					
ANR	6768647	ElseStatement	else		6767905	0					
ANR	6768648	ExpressionStatement	"assert ( ! ""Unsupported bitdepth\\n"" )"	3023:8:104553:104586	6767905	0	True				
ANR	6768649	CallExpression	"assert ( ! ""Unsupported bitdepth\\n"" )"		6767905	0					
ANR	6768650	Callee	assert		6767905	0					
ANR	6768651	Identifier	assert		6767905	0					
ANR	6768652	ArgumentList	"! ""Unsupported bitdepth\\n"""		6767905	1					
ANR	6768653	Argument	"! ""Unsupported bitdepth\\n"""		6767905	0					
ANR	6768654	UnaryOperationExpression	"! ""Unsupported bitdepth\\n"""		6767905	0					
ANR	6768655	UnaryOperator	!		6767905	0					
ANR	6768656	PrimaryExpression	"""Unsupported bitdepth\\n"""		6767905	1					
ANR	6768657	ExpressionStatement	close_file ( con_primary )	3024:4:104592:104615	6767905	29	True				
ANR	6768658	CallExpression	close_file ( con_primary )		6767905	0					
ANR	6768659	Callee	close_file		6767905	0					
ANR	6768660	Identifier	close_file		6767905	0					
ANR	6768661	ArgumentList	con_primary		6767905	1					
ANR	6768662	Argument	con_primary		6767905	0					
ANR	6768663	Identifier	con_primary		6767905	0					
ANR	6768664	ExpressionStatement	close_file ( con_alpha )	3025:4:104621:104642	6767905	30	True				
ANR	6768665	CallExpression	close_file ( con_alpha )		6767905	0					
ANR	6768666	Callee	close_file		6767905	0					
ANR	6768667	Identifier	close_file		6767905	0					
ANR	6768668	ArgumentList	con_alpha		6767905	1					
ANR	6768669	Argument	con_alpha		6767905	0					
ANR	6768670	Identifier	con_alpha		6767905	0					
ANR	6768671	ReturnType	void		6767905	1					
ANR	6768672	Identifier	separate_primary_alpha		6767905	2					
ANR	6768673	ParameterList	"jxr_image_t image , void * input_handle , char * path_out , char * path_primary , char * path_alpha , jxr_container_t container"		6767905	3					
ANR	6768674	Parameter	jxr_image_t image	2927:28:101181:101197	6767905	0	True				
ANR	6768675	ParameterType	jxr_image_t		6767905	0					
ANR	6768676	Identifier	image		6767905	1					
ANR	6768677	Parameter	void * input_handle	2927:47:101200:101217	6767905	1	True				
ANR	6768678	ParameterType	void *		6767905	0					
ANR	6768679	Identifier	input_handle		6767905	1					
ANR	6768680	Parameter	char * path_out	2927:67:101220:101233	6767905	2	True				
ANR	6768681	ParameterType	char *		6767905	0					
ANR	6768682	Identifier	path_out		6767905	1					
ANR	6768683	Parameter	char * path_primary	2927:83:101236:101254	6767905	3	True				
ANR	6768684	ParameterType	char *		6767905	0					
ANR	6768685	Identifier	path_primary		6767905	1					
ANR	6768686	Parameter	char * path_alpha	2927:104:101257:101272	6767905	4	True				
ANR	6768687	ParameterType	char *		6767905	0					
ANR	6768688	Identifier	path_alpha		6767905	1					
ANR	6768689	Parameter	jxr_container_t container	2927:122:101275:101299	6767905	5	True				
ANR	6768690	ParameterType	jxr_container_t		6767905	0					
ANR	6768691	Identifier	container		6767905	1					
ANR	6768692	CFGEntryNode	ENTRY		6767905		True				
ANR	6768693	CFGExitNode	EXIT		6767905		True				
ANR	6768694	Symbol	container		6767905						
ANR	6768695	Symbol	con_alpha -> ncomp		6767905						
ANR	6768696	Symbol	path_alpha		6767905						
ANR	6768697	Symbol	con		6767905						
ANR	6768698	Symbol	con -> ncomp		6767905						
ANR	6768699	Symbol	& ncomp		6767905						
ANR	6768700	Symbol	numPixels		6767905						
ANR	6768701	Symbol	* con_alpha		6767905						
ANR	6768702	Symbol	hei		6767905						
ANR	6768703	Symbol	isOutputYUV444		6767905						
ANR	6768704	Symbol	con_alpha -> name		6767905						
ANR	6768705	Symbol	con -> bpi		6767905						
ANR	6768706	Symbol	& sf		6767905						
ANR	6768707	Symbol	strcasecmp		6767905						
ANR	6768708	Symbol	combine		6767905						
ANR	6768709	Symbol	image		6767905						
ANR	6768710	Symbol	NULL		6767905						
ANR	6768711	Symbol	padBytes		6767905						
ANR	6768712	Symbol	path_primary		6767905						
ANR	6768713	Symbol	path_out		6767905						
ANR	6768714	Symbol	con_alpha -> buf		6767905						
ANR	6768715	Symbol	con_primary -> buf		6767905						
ANR	6768716	Symbol	& photometric		6767905						
ANR	6768717	Symbol	isOutputCMYKDirect		6767905						
ANR	6768718	Symbol	& hei		6767905						
ANR	6768719	Symbol	con_primary		6767905						
ANR	6768720	Symbol	input_handle		6767905						
ANR	6768721	Symbol	ncomp		6767905						
ANR	6768722	Symbol	con_primary -> name		6767905						
ANR	6768723	Symbol	& bpi		6767905						
ANR	6768724	Symbol	con_alpha		6767905						
ANR	6768725	Symbol	photometric		6767905						
ANR	6768726	Symbol	isOutputYUV422		6767905						
ANR	6768727	Symbol	wid		6767905						
ANR	6768728	Symbol	sf		6767905						
ANR	6768729	Symbol	* con		6767905						
ANR	6768730	Symbol	isOutputYUV420		6767905						
ANR	6768731	Symbol	con_primary -> ncomp		6767905						
ANR	6768732	Symbol	bpi		6767905						
ANR	6768733	Symbol	jxr_get_OUTPUT_BITDEPTH		6767905						
ANR	6768734	Symbol	malloc		6767905						
ANR	6768735	Symbol	nPrimaryComp		6767905						
ANR	6768736	Symbol	& padBytes		6767905						
ANR	6768737	Symbol	i		6767905						
ANR	6768738	Symbol	con -> name		6767905						
ANR	6768739	Symbol	p		6767905						
ANR	6768740	Symbol	con_alpha -> alpha		6767905						
ANR	6768741	Symbol	con_primary -> alpha		6767905						
ANR	6768742	Symbol	strrchr		6767905						
ANR	6768743	Symbol	* con_primary		6767905						
ANR	6768744	Symbol	& wid		6767905						
ANR	6768745	Symbol	jxrc_get_pixel_format		6767905						
