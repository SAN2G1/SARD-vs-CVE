command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5858119	File	data/converged/CVE-2018-16863_ghostpdl/gxsync.c								
ANR	5858120	Function	gx_semaphore_alloc	35:0:1188:2277							
ANR	5858121	FunctionDef	gx_semaphore_alloc (gs_memory_t * memory)		5858120	0					
ANR	5858122	CompoundStatement		39:0:1343:2277	5858120	0					
ANR	5858123	IdentifierDeclStatement	gx_semaphore_t * sema ;	40:4:1349:1369	5858120	0	True				
ANR	5858124	IdentifierDecl	* sema		5858120	0					
ANR	5858125	IdentifierDeclType	gx_semaphore_t *		5858120	0					
ANR	5858126	Identifier	sema		5858120	1					
ANR	5858127	IdentifierDeclStatement	unsigned semaSizeof = sizeof ( * sema ) - sizeof ( sema -> native ) + gp_semaphore_sizeof ( ) ;	43:4:1473:1559	5858120	1	True				
ANR	5858128	IdentifierDecl	semaSizeof = sizeof ( * sema ) - sizeof ( sema -> native ) + gp_semaphore_sizeof ( )		5858120	0					
ANR	5858129	IdentifierDeclType	unsigned		5858120	0					
ANR	5858130	Identifier	semaSizeof		5858120	1					
ANR	5858131	AssignmentExpression	semaSizeof = sizeof ( * sema ) - sizeof ( sema -> native ) + gp_semaphore_sizeof ( )		5858120	2		=			
ANR	5858132	Identifier	semaSizeof		5858120	0					
ANR	5858133	AdditiveExpression	sizeof ( * sema ) - sizeof ( sema -> native ) + gp_semaphore_sizeof ( )		5858120	1		-			
ANR	5858134	SizeofExpression	sizeof ( * sema )		5858120	0					
ANR	5858135	Sizeof	sizeof		5858120	0					
ANR	5858136	UnaryOperationExpression	* sema		5858120	1					
ANR	5858137	UnaryOperator	*		5858120	0					
ANR	5858138	Identifier	sema		5858120	1					
ANR	5858139	AdditiveExpression	sizeof ( sema -> native ) + gp_semaphore_sizeof ( )		5858120	1		+			
ANR	5858140	SizeofExpression	sizeof ( sema -> native )		5858120	0					
ANR	5858141	Sizeof	sizeof		5858120	0					
ANR	5858142	PtrMemberAccess	sema -> native		5858120	1					
ANR	5858143	Identifier	sema		5858120	0					
ANR	5858144	Identifier	native		5858120	1					
ANR	5858145	CallExpression	gp_semaphore_sizeof ( )		5858120	1					
ANR	5858146	Callee	gp_semaphore_sizeof		5858120	0					
ANR	5858147	Identifier	gp_semaphore_sizeof		5858120	0					
ANR	5858148	ArgumentList			5858120	1					
ANR	5858149	IfStatement	if ( gp_semaphore_open ( 0 ) == 0 )		5858120	2					
ANR	5858150	Condition	gp_semaphore_open ( 0 ) == 0	46:8:1570:1594	5858120	0	True				
ANR	5858151	EqualityExpression	gp_semaphore_open ( 0 ) == 0		5858120	0		==			
ANR	5858152	CallExpression	gp_semaphore_open ( 0 )		5858120	0					
ANR	5858153	Callee	gp_semaphore_open		5858120	0					
ANR	5858154	Identifier	gp_semaphore_open		5858120	0					
ANR	5858155	ArgumentList	0		5858120	1					
ANR	5858156	Argument	0		5858120	0					
ANR	5858157	PrimaryExpression	0		5858120	0					
ANR	5858158	PrimaryExpression	0		5858120	1					
ANR	5858159	ExpressionStatement	"sema = ( gx_semaphore_t * ) gs_alloc_bytes ( memory , semaSizeof , ""gx_semaphore (create)"" )"	48:8:1666:1800	5858120	1	True				
ANR	5858160	AssignmentExpression	"sema = ( gx_semaphore_t * ) gs_alloc_bytes ( memory , semaSizeof , ""gx_semaphore (create)"" )"		5858120	0		=			
ANR	5858161	Identifier	sema		5858120	0					
ANR	5858162	CastExpression	"( gx_semaphore_t * ) gs_alloc_bytes ( memory , semaSizeof , ""gx_semaphore (create)"" )"		5858120	1					
ANR	5858163	CastTarget	gx_semaphore_t *		5858120	0					
ANR	5858164	CallExpression	"gs_alloc_bytes ( memory , semaSizeof , ""gx_semaphore (create)"" )"		5858120	1					
ANR	5858165	Callee	gs_alloc_bytes		5858120	0					
ANR	5858166	Identifier	gs_alloc_bytes		5858120	0					
ANR	5858167	ArgumentList	memory		5858120	1					
ANR	5858168	Argument	memory		5858120	0					
ANR	5858169	Identifier	memory		5858120	0					
ANR	5858170	Argument	semaSizeof		5858120	1					
ANR	5858171	Identifier	semaSizeof		5858120	0					
ANR	5858172	Argument	"""gx_semaphore (create)"""		5858120	2					
ANR	5858173	PrimaryExpression	"""gx_semaphore (create)"""		5858120	0					
ANR	5858174	ElseStatement	else		5858120	0					
ANR	5858175	ExpressionStatement	"sema = ( gx_semaphore_t * ) gs_alloc_bytes_immovable ( memory , semaSizeof , ""gx_semaphore (create)"" )"	52:8:1843:1989	5858120	0	True				
ANR	5858176	AssignmentExpression	"sema = ( gx_semaphore_t * ) gs_alloc_bytes_immovable ( memory , semaSizeof , ""gx_semaphore (create)"" )"		5858120	0		=			
ANR	5858177	Identifier	sema		5858120	0					
ANR	5858178	CastExpression	"( gx_semaphore_t * ) gs_alloc_bytes_immovable ( memory , semaSizeof , ""gx_semaphore (create)"" )"		5858120	1					
ANR	5858179	CastTarget	gx_semaphore_t *		5858120	0					
ANR	5858180	CallExpression	"gs_alloc_bytes_immovable ( memory , semaSizeof , ""gx_semaphore (create)"" )"		5858120	1					
ANR	5858181	Callee	gs_alloc_bytes_immovable		5858120	0					
ANR	5858182	Identifier	gs_alloc_bytes_immovable		5858120	0					
ANR	5858183	ArgumentList	memory		5858120	1					
ANR	5858184	Argument	memory		5858120	0					
ANR	5858185	Identifier	memory		5858120	0					
ANR	5858186	Argument	semaSizeof		5858120	1					
ANR	5858187	Identifier	semaSizeof		5858120	0					
ANR	5858188	Argument	"""gx_semaphore (create)"""		5858120	2					
ANR	5858189	PrimaryExpression	"""gx_semaphore (create)"""		5858120	0					
ANR	5858190	IfStatement	if ( sema == 0 )		5858120	3					
ANR	5858191	Condition	sema == 0	54:8:1999:2007	5858120	0	True				
ANR	5858192	EqualityExpression	sema == 0		5858120	0		==			
ANR	5858193	Identifier	sema		5858120	0					
ANR	5858194	PrimaryExpression	0		5858120	1					
ANR	5858195	ReturnStatement	return 0 ;	55:8:2018:2026	5858120	1	True				
ANR	5858196	PrimaryExpression	0		5858120	0					
ANR	5858197	ExpressionStatement	sema -> memory = memory	58:4:2102:2123	5858120	4	True				
ANR	5858198	AssignmentExpression	sema -> memory = memory		5858120	0		=			
ANR	5858199	PtrMemberAccess	sema -> memory		5858120	0					
ANR	5858200	Identifier	sema		5858120	0					
ANR	5858201	Identifier	memory		5858120	1					
ANR	5858202	Identifier	memory		5858120	1					
ANR	5858203	IfStatement	if ( gp_semaphore_open ( & sema -> native ) < 0 )		5858120	5					
ANR	5858204	Condition	gp_semaphore_open ( & sema -> native ) < 0	60:8:2134:2169	5858120	0	True				
ANR	5858205	RelationalExpression	gp_semaphore_open ( & sema -> native ) < 0		5858120	0		<			
ANR	5858206	CallExpression	gp_semaphore_open ( & sema -> native )		5858120	0					
ANR	5858207	Callee	gp_semaphore_open		5858120	0					
ANR	5858208	Identifier	gp_semaphore_open		5858120	0					
ANR	5858209	ArgumentList	& sema -> native		5858120	1					
ANR	5858210	Argument	& sema -> native		5858120	0					
ANR	5858211	UnaryOperationExpression	& sema -> native		5858120	0					
ANR	5858212	UnaryOperator	&		5858120	0					
ANR	5858213	PtrMemberAccess	sema -> native		5858120	1					
ANR	5858214	Identifier	sema		5858120	0					
ANR	5858215	Identifier	native		5858120	1					
ANR	5858216	PrimaryExpression	0		5858120	1					
ANR	5858217	CompoundStatement		22:46:828:828	5858120	1					
ANR	5858218	ExpressionStatement	"gs_free_object ( memory , sema , ""gx_semaphore (alloc)"" )"	61:8:2182:2234	5858120	0	True				
ANR	5858219	CallExpression	"gs_free_object ( memory , sema , ""gx_semaphore (alloc)"" )"		5858120	0					
ANR	5858220	Callee	gs_free_object		5858120	0					
ANR	5858221	Identifier	gs_free_object		5858120	0					
ANR	5858222	ArgumentList	memory		5858120	1					
ANR	5858223	Argument	memory		5858120	0					
ANR	5858224	Identifier	memory		5858120	0					
ANR	5858225	Argument	sema		5858120	1					
ANR	5858226	Identifier	sema		5858120	0					
ANR	5858227	Argument	"""gx_semaphore (alloc)"""		5858120	2					
ANR	5858228	PrimaryExpression	"""gx_semaphore (alloc)"""		5858120	0					
ANR	5858229	ReturnStatement	return 0 ;	62:8:2244:2252	5858120	1	True				
ANR	5858230	PrimaryExpression	0		5858120	0					
ANR	5858231	ReturnStatement	return sema ;	64:4:2264:2275	5858120	6	True				
ANR	5858232	Identifier	sema		5858120	0					
ANR	5858233	ReturnType	gx_semaphore_t *		5858120	1					
ANR	5858234	Identifier	gx_semaphore_alloc		5858120	2					
ANR	5858235	ParameterList	gs_memory_t * memory		5858120	3					
ANR	5858236	Parameter	gs_memory_t * memory	37:22:1290:1309	5858120	0	True				
ANR	5858237	ParameterType	gs_memory_t *		5858120	0					
ANR	5858238	Identifier	memory		5858120	1					
ANR	5858239	CFGEntryNode	ENTRY		5858120		True				
ANR	5858240	CFGExitNode	EXIT		5858120		True				
ANR	5858241	Symbol	sema -> memory		5858120						
ANR	5858242	Symbol	gs_alloc_bytes		5858120						
ANR	5858243	Symbol	memory		5858120						
ANR	5858244	Symbol	sema		5858120						
ANR	5858245	Symbol	semaSizeof		5858120						
ANR	5858246	Symbol	gs_alloc_bytes_immovable		5858120						
ANR	5858247	Symbol	gp_semaphore_sizeof		5858120						
ANR	5858248	Symbol	* sema		5858120						
ANR	5858249	Symbol	gp_semaphore_open		5858120						
ANR	5858250	Symbol	sema -> native		5858120						
ANR	5858251	Symbol	& sema -> native		5858120						
ANR	5858252	Function	gx_semaphore_free	68:0:2312:2541							
ANR	5858253	FunctionDef	gx_semaphore_free (gx_semaphore_t * sema)		5858252	0					
ANR	5858254	CompoundStatement		72:0:2407:2541	5858252	0					
ANR	5858255	IfStatement	if ( sema )		5858252	0					
ANR	5858256	Condition	sema	73:8:2417:2420	5858252	0	True				
ANR	5858257	Identifier	sema		5858252	0					
ANR	5858258	CompoundStatement		2:14:15:15	5858252	1					
ANR	5858259	ExpressionStatement	gp_semaphore_close ( & sema -> native )	74:8:2433:2466	5858252	0	True				
ANR	5858260	CallExpression	gp_semaphore_close ( & sema -> native )		5858252	0					
ANR	5858261	Callee	gp_semaphore_close		5858252	0					
ANR	5858262	Identifier	gp_semaphore_close		5858252	0					
ANR	5858263	ArgumentList	& sema -> native		5858252	1					
ANR	5858264	Argument	& sema -> native		5858252	0					
ANR	5858265	UnaryOperationExpression	& sema -> native		5858252	0					
ANR	5858266	UnaryOperator	&		5858252	0					
ANR	5858267	PtrMemberAccess	sema -> native		5858252	1					
ANR	5858268	Identifier	sema		5858252	0					
ANR	5858269	Identifier	native		5858252	1					
ANR	5858270	ExpressionStatement	"gs_free_object ( sema -> memory , sema , ""gx_semaphore (free)"" )"	75:8:2476:2533	5858252	1	True				
ANR	5858271	CallExpression	"gs_free_object ( sema -> memory , sema , ""gx_semaphore (free)"" )"		5858252	0					
ANR	5858272	Callee	gs_free_object		5858252	0					
ANR	5858273	Identifier	gs_free_object		5858252	0					
ANR	5858274	ArgumentList	sema -> memory		5858252	1					
ANR	5858275	Argument	sema -> memory		5858252	0					
ANR	5858276	PtrMemberAccess	sema -> memory		5858252	0					
ANR	5858277	Identifier	sema		5858252	0					
ANR	5858278	Identifier	memory		5858252	1					
ANR	5858279	Argument	sema		5858252	1					
ANR	5858280	Identifier	sema		5858252	0					
ANR	5858281	Argument	"""gx_semaphore (free)"""		5858252	2					
ANR	5858282	PrimaryExpression	"""gx_semaphore (free)"""		5858252	0					
ANR	5858283	ReturnType	void		5858252	1					
ANR	5858284	Identifier	gx_semaphore_free		5858252	2					
ANR	5858285	ParameterList	gx_semaphore_t * sema		5858252	3					
ANR	5858286	Parameter	gx_semaphore_t * sema	70:21:2357:2377	5858252	0	True				
ANR	5858287	ParameterType	gx_semaphore_t *		5858252	0					
ANR	5858288	Identifier	sema		5858252	1					
ANR	5858289	CFGEntryNode	ENTRY		5858252		True				
ANR	5858290	CFGExitNode	EXIT		5858252		True				
ANR	5858291	Symbol	sema -> memory		5858252						
ANR	5858292	Symbol	sema		5858252						
ANR	5858293	Symbol	* sema		5858252						
ANR	5858294	Symbol	& sema -> native		5858252						
ANR	5858295	Function	gx_semaphore_label	79:0:2544:2719							
ANR	5858296	FunctionDef	"gx_semaphore_label (gx_semaphore_t * sema , const char * name)"		5858295	0					
ANR	5858297	CompoundStatement		80:0:2621:2719	5858295	0					
ANR	5858298	ExpressionStatement	( void ) name	81:4:2627:2637	5858295	0	True				
ANR	5858299	CastExpression	( void ) name		5858295	0					
ANR	5858300	CastTarget	void		5858295	0					
ANR	5858301	Identifier	name		5858295	1					
ANR	5858302	IfStatement	if ( sema )		5858295	1					
ANR	5858303	Condition	sema	82:8:2647:2650	5858295	0	True				
ANR	5858304	Identifier	sema		5858295	0					
ANR	5858305	ExpressionStatement	"gp_semaphore_label ( & sema -> native , name )"	83:8:2661:2700	5858295	1	True				
ANR	5858306	CallExpression	"gp_semaphore_label ( & sema -> native , name )"		5858295	0					
ANR	5858307	Callee	gp_semaphore_label		5858295	0					
ANR	5858308	Identifier	gp_semaphore_label		5858295	0					
ANR	5858309	ArgumentList	& sema -> native		5858295	1					
ANR	5858310	Argument	& sema -> native		5858295	0					
ANR	5858311	UnaryOperationExpression	& sema -> native		5858295	0					
ANR	5858312	UnaryOperator	&		5858295	0					
ANR	5858313	PtrMemberAccess	sema -> native		5858295	1					
ANR	5858314	Identifier	sema		5858295	0					
ANR	5858315	Identifier	native		5858295	1					
ANR	5858316	Argument	name		5858295	1					
ANR	5858317	Identifier	name		5858295	0					
ANR	5858318	ReturnStatement	return sema ;	84:4:2706:2717	5858295	2	True				
ANR	5858319	Identifier	sema		5858295	0					
ANR	5858320	ReturnType	gx_semaphore_t *		5858295	1					
ANR	5858321	Identifier	( gx_semaphore_label )		5858295	2					
ANR	5858322	Identifier	gx_semaphore_label		5858295	3					
ANR	5858323	ParameterList	"gx_semaphore_t * sema , const char * name"		5858295	4					
ANR	5858324	Parameter	gx_semaphore_t * sema	79:37:2581:2600	5858295	0	True				
ANR	5858325	ParameterType	gx_semaphore_t *		5858295	0					
ANR	5858326	Identifier	sema		5858295	1					
ANR	5858327	Parameter	const char * name	79:59:2603:2618	5858295	1	True				
ANR	5858328	ParameterType	const char *		5858295	0					
ANR	5858329	Identifier	name		5858295	1					
ANR	5858330	CFGEntryNode	ENTRY		5858295		True				
ANR	5858331	CFGExitNode	EXIT		5858295		True				
ANR	5858332	Symbol	sema		5858295						
ANR	5858333	Symbol	name		5858295						
ANR	5858334	Symbol	& sema -> native		5858295						
ANR	5858335	Function	gx_monitor_alloc	96:0:3144:4190							
ANR	5858336	FunctionDef	gx_monitor_alloc (gs_memory_t * memory)		5858335	0					
ANR	5858337	CompoundStatement		100:0:3292:4190	5858335	0					
ANR	5858338	IdentifierDeclStatement	gx_monitor_t * mon ;	101:4:3298:3315	5858335	0	True				
ANR	5858339	IdentifierDecl	* mon		5858335	0					
ANR	5858340	IdentifierDeclType	gx_monitor_t *		5858335	0					
ANR	5858341	Identifier	mon		5858335	1					
ANR	5858342	IdentifierDeclStatement	unsigned monSizeof = sizeof ( * mon ) - sizeof ( mon -> native ) + gp_monitor_sizeof ( ) ;	104:4:3414:3495	5858335	1	True				
ANR	5858343	IdentifierDecl	monSizeof = sizeof ( * mon ) - sizeof ( mon -> native ) + gp_monitor_sizeof ( )		5858335	0					
ANR	5858344	IdentifierDeclType	unsigned		5858335	0					
ANR	5858345	Identifier	monSizeof		5858335	1					
ANR	5858346	AssignmentExpression	monSizeof = sizeof ( * mon ) - sizeof ( mon -> native ) + gp_monitor_sizeof ( )		5858335	2		=			
ANR	5858347	Identifier	monSizeof		5858335	0					
ANR	5858348	AdditiveExpression	sizeof ( * mon ) - sizeof ( mon -> native ) + gp_monitor_sizeof ( )		5858335	1		-			
ANR	5858349	SizeofExpression	sizeof ( * mon )		5858335	0					
ANR	5858350	Sizeof	sizeof		5858335	0					
ANR	5858351	UnaryOperationExpression	* mon		5858335	1					
ANR	5858352	UnaryOperator	*		5858335	0					
ANR	5858353	Identifier	mon		5858335	1					
ANR	5858354	AdditiveExpression	sizeof ( mon -> native ) + gp_monitor_sizeof ( )		5858335	1		+			
ANR	5858355	SizeofExpression	sizeof ( mon -> native )		5858335	0					
ANR	5858356	Sizeof	sizeof		5858335	0					
ANR	5858357	PtrMemberAccess	mon -> native		5858335	1					
ANR	5858358	Identifier	mon		5858335	0					
ANR	5858359	Identifier	native		5858335	1					
ANR	5858360	CallExpression	gp_monitor_sizeof ( )		5858335	1					
ANR	5858361	Callee	gp_monitor_sizeof		5858335	0					
ANR	5858362	Identifier	gp_monitor_sizeof		5858335	0					
ANR	5858363	ArgumentList			5858335	1					
ANR	5858364	IfStatement	if ( gp_monitor_open ( 0 ) == 0 )		5858335	2					
ANR	5858365	Condition	gp_monitor_open ( 0 ) == 0	107:8:3506:3528	5858335	0	True				
ANR	5858366	EqualityExpression	gp_monitor_open ( 0 ) == 0		5858335	0		==			
ANR	5858367	CallExpression	gp_monitor_open ( 0 )		5858335	0					
ANR	5858368	Callee	gp_monitor_open		5858335	0					
ANR	5858369	Identifier	gp_monitor_open		5858335	0					
ANR	5858370	ArgumentList	0		5858335	1					
ANR	5858371	Argument	0		5858335	0					
ANR	5858372	PrimaryExpression	0		5858335	0					
ANR	5858373	PrimaryExpression	0		5858335	1					
ANR	5858374	ExpressionStatement	"mon = ( gx_monitor_t * ) gs_alloc_bytes ( memory , monSizeof , ""gx_monitor (create)"" )"	109:8:3598:3723	5858335	1	True				
ANR	5858375	AssignmentExpression	"mon = ( gx_monitor_t * ) gs_alloc_bytes ( memory , monSizeof , ""gx_monitor (create)"" )"		5858335	0		=			
ANR	5858376	Identifier	mon		5858335	0					
ANR	5858377	CastExpression	"( gx_monitor_t * ) gs_alloc_bytes ( memory , monSizeof , ""gx_monitor (create)"" )"		5858335	1					
ANR	5858378	CastTarget	gx_monitor_t *		5858335	0					
ANR	5858379	CallExpression	"gs_alloc_bytes ( memory , monSizeof , ""gx_monitor (create)"" )"		5858335	1					
ANR	5858380	Callee	gs_alloc_bytes		5858335	0					
ANR	5858381	Identifier	gs_alloc_bytes		5858335	0					
ANR	5858382	ArgumentList	memory		5858335	1					
ANR	5858383	Argument	memory		5858335	0					
ANR	5858384	Identifier	memory		5858335	0					
ANR	5858385	Argument	monSizeof		5858335	1					
ANR	5858386	Identifier	monSizeof		5858335	0					
ANR	5858387	Argument	"""gx_monitor (create)"""		5858335	2					
ANR	5858388	PrimaryExpression	"""gx_monitor (create)"""		5858335	0					
ANR	5858389	ElseStatement	else		5858335	0					
ANR	5858390	ExpressionStatement	"mon = ( gx_monitor_t * ) gs_alloc_bytes_immovable ( memory , monSizeof , ""gx_monitor (create)"" )"	113:8:3766:3908	5858335	0	True				
ANR	5858391	AssignmentExpression	"mon = ( gx_monitor_t * ) gs_alloc_bytes_immovable ( memory , monSizeof , ""gx_monitor (create)"" )"		5858335	0		=			
ANR	5858392	Identifier	mon		5858335	0					
ANR	5858393	CastExpression	"( gx_monitor_t * ) gs_alloc_bytes_immovable ( memory , monSizeof , ""gx_monitor (create)"" )"		5858335	1					
ANR	5858394	CastTarget	gx_monitor_t *		5858335	0					
ANR	5858395	CallExpression	"gs_alloc_bytes_immovable ( memory , monSizeof , ""gx_monitor (create)"" )"		5858335	1					
ANR	5858396	Callee	gs_alloc_bytes_immovable		5858335	0					
ANR	5858397	Identifier	gs_alloc_bytes_immovable		5858335	0					
ANR	5858398	ArgumentList	memory		5858335	1					
ANR	5858399	Argument	memory		5858335	0					
ANR	5858400	Identifier	memory		5858335	0					
ANR	5858401	Argument	monSizeof		5858335	1					
ANR	5858402	Identifier	monSizeof		5858335	0					
ANR	5858403	Argument	"""gx_monitor (create)"""		5858335	2					
ANR	5858404	PrimaryExpression	"""gx_monitor (create)"""		5858335	0					
ANR	5858405	IfStatement	if ( mon == 0 )		5858335	3					
ANR	5858406	Condition	mon == 0	115:8:3918:3925	5858335	0	True				
ANR	5858407	EqualityExpression	mon == 0		5858335	0		==			
ANR	5858408	Identifier	mon		5858335	0					
ANR	5858409	PrimaryExpression	0		5858335	1					
ANR	5858410	ReturnStatement	return 0 ;	116:8:3936:3944	5858335	1	True				
ANR	5858411	PrimaryExpression	0		5858335	0					
ANR	5858412	ExpressionStatement	mon -> memory = memory	119:4:4023:4043	5858335	4	True				
ANR	5858413	AssignmentExpression	mon -> memory = memory		5858335	0		=			
ANR	5858414	PtrMemberAccess	mon -> memory		5858335	0					
ANR	5858415	Identifier	mon		5858335	0					
ANR	5858416	Identifier	memory		5858335	1					
ANR	5858417	Identifier	memory		5858335	1					
ANR	5858418	IfStatement	if ( gp_monitor_open ( & mon -> native ) < 0 )		5858335	5					
ANR	5858419	Condition	gp_monitor_open ( & mon -> native ) < 0	121:8:4054:4086	5858335	0	True				
ANR	5858420	RelationalExpression	gp_monitor_open ( & mon -> native ) < 0		5858335	0		<			
ANR	5858421	CallExpression	gp_monitor_open ( & mon -> native )		5858335	0					
ANR	5858422	Callee	gp_monitor_open		5858335	0					
ANR	5858423	Identifier	gp_monitor_open		5858335	0					
ANR	5858424	ArgumentList	& mon -> native		5858335	1					
ANR	5858425	Argument	& mon -> native		5858335	0					
ANR	5858426	UnaryOperationExpression	& mon -> native		5858335	0					
ANR	5858427	UnaryOperator	&		5858335	0					
ANR	5858428	PtrMemberAccess	mon -> native		5858335	1					
ANR	5858429	Identifier	mon		5858335	0					
ANR	5858430	Identifier	native		5858335	1					
ANR	5858431	PrimaryExpression	0		5858335	1					
ANR	5858432	CompoundStatement		22:43:796:796	5858335	1					
ANR	5858433	ExpressionStatement	"gs_free_object ( memory , mon , ""gx_monitor (alloc)"" )"	122:8:4099:4148	5858335	0	True				
ANR	5858434	CallExpression	"gs_free_object ( memory , mon , ""gx_monitor (alloc)"" )"		5858335	0					
ANR	5858435	Callee	gs_free_object		5858335	0					
ANR	5858436	Identifier	gs_free_object		5858335	0					
ANR	5858437	ArgumentList	memory		5858335	1					
ANR	5858438	Argument	memory		5858335	0					
ANR	5858439	Identifier	memory		5858335	0					
ANR	5858440	Argument	mon		5858335	1					
ANR	5858441	Identifier	mon		5858335	0					
ANR	5858442	Argument	"""gx_monitor (alloc)"""		5858335	2					
ANR	5858443	PrimaryExpression	"""gx_monitor (alloc)"""		5858335	0					
ANR	5858444	ReturnStatement	return 0 ;	123:8:4158:4166	5858335	1	True				
ANR	5858445	PrimaryExpression	0		5858335	0					
ANR	5858446	ReturnStatement	return mon ;	125:4:4178:4188	5858335	6	True				
ANR	5858447	Identifier	mon		5858335	0					
ANR	5858448	ReturnType	gx_monitor_t *		5858335	1					
ANR	5858449	Identifier	gx_monitor_alloc		5858335	2					
ANR	5858450	ParameterList	gs_memory_t * memory		5858335	3					
ANR	5858451	Parameter	gs_memory_t * memory	98:20:3239:3258	5858335	0	True				
ANR	5858452	ParameterType	gs_memory_t *		5858335	0					
ANR	5858453	Identifier	memory		5858335	1					
ANR	5858454	CFGEntryNode	ENTRY		5858335		True				
ANR	5858455	CFGExitNode	EXIT		5858335		True				
ANR	5858456	Symbol	& mon -> native		5858335						
ANR	5858457	Symbol	mon -> memory		5858335						
ANR	5858458	Symbol	monSizeof		5858335						
ANR	5858459	Symbol	gs_alloc_bytes		5858335						
ANR	5858460	Symbol	memory		5858335						
ANR	5858461	Symbol	gs_alloc_bytes_immovable		5858335						
ANR	5858462	Symbol	* mon		5858335						
ANR	5858463	Symbol	gp_monitor_open		5858335						
ANR	5858464	Symbol	mon		5858335						
ANR	5858465	Symbol	gp_monitor_sizeof		5858335						
ANR	5858466	Symbol	mon -> native		5858335						
ANR	5858467	Function	gx_monitor_free	129:0:4221:4433							
ANR	5858468	FunctionDef	gx_monitor_free (gx_monitor_t * mon)		5858467	0					
ANR	5858469	CompoundStatement		133:0:4307:4433	5858467	0					
ANR	5858470	IfStatement	if ( mon )		5858467	0					
ANR	5858471	Condition	mon	134:8:4317:4319	5858467	0	True				
ANR	5858472	Identifier	mon		5858467	0					
ANR	5858473	CompoundStatement		2:13:14:14	5858467	1					
ANR	5858474	ExpressionStatement	gp_monitor_close ( & mon -> native )	135:8:4332:4362	5858467	0	True				
ANR	5858475	CallExpression	gp_monitor_close ( & mon -> native )		5858467	0					
ANR	5858476	Callee	gp_monitor_close		5858467	0					
ANR	5858477	Identifier	gp_monitor_close		5858467	0					
ANR	5858478	ArgumentList	& mon -> native		5858467	1					
ANR	5858479	Argument	& mon -> native		5858467	0					
ANR	5858480	UnaryOperationExpression	& mon -> native		5858467	0					
ANR	5858481	UnaryOperator	&		5858467	0					
ANR	5858482	PtrMemberAccess	mon -> native		5858467	1					
ANR	5858483	Identifier	mon		5858467	0					
ANR	5858484	Identifier	native		5858467	1					
ANR	5858485	ExpressionStatement	"gs_free_object ( mon -> memory , mon , ""gx_monitor (free)"" )"	136:8:4372:4425	5858467	1	True				
ANR	5858486	CallExpression	"gs_free_object ( mon -> memory , mon , ""gx_monitor (free)"" )"		5858467	0					
ANR	5858487	Callee	gs_free_object		5858467	0					
ANR	5858488	Identifier	gs_free_object		5858467	0					
ANR	5858489	ArgumentList	mon -> memory		5858467	1					
ANR	5858490	Argument	mon -> memory		5858467	0					
ANR	5858491	PtrMemberAccess	mon -> memory		5858467	0					
ANR	5858492	Identifier	mon		5858467	0					
ANR	5858493	Identifier	memory		5858467	1					
ANR	5858494	Argument	mon		5858467	1					
ANR	5858495	Identifier	mon		5858467	0					
ANR	5858496	Argument	"""gx_monitor (free)"""		5858467	2					
ANR	5858497	PrimaryExpression	"""gx_monitor (free)"""		5858467	0					
ANR	5858498	ReturnType	void		5858467	1					
ANR	5858499	Identifier	gx_monitor_free		5858467	2					
ANR	5858500	ParameterList	gx_monitor_t * mon		5858467	3					
ANR	5858501	Parameter	gx_monitor_t * mon	131:19:4262:4279	5858467	0	True				
ANR	5858502	ParameterType	gx_monitor_t *		5858467	0					
ANR	5858503	Identifier	mon		5858467	1					
ANR	5858504	CFGEntryNode	ENTRY		5858467		True				
ANR	5858505	CFGExitNode	EXIT		5858467		True				
ANR	5858506	Symbol	& mon -> native		5858467						
ANR	5858507	Symbol	mon -> memory		5858467						
ANR	5858508	Symbol	* mon		5858467						
ANR	5858509	Symbol	mon		5858467						
ANR	5858510	Function	gx_monitor_label	140:0:4436:4600							
ANR	5858511	FunctionDef	"gx_monitor_label (gx_monitor_t * mon , const char * name)"		5858510	0					
ANR	5858512	CompoundStatement		142:0:4507:4600	5858510	0					
ANR	5858513	ExpressionStatement	( void ) name	143:4:4513:4523	5858510	0	True				
ANR	5858514	CastExpression	( void ) name		5858510	0					
ANR	5858515	CastTarget	void		5858510	0					
ANR	5858516	Identifier	name		5858510	1					
ANR	5858517	IfStatement	if ( mon )		5858510	1					
ANR	5858518	Condition	mon	144:8:4533:4535	5858510	0	True				
ANR	5858519	Identifier	mon		5858510	0					
ANR	5858520	ExpressionStatement	"gp_monitor_label ( & mon -> native , name )"	145:8:4546:4582	5858510	1	True				
ANR	5858521	CallExpression	"gp_monitor_label ( & mon -> native , name )"		5858510	0					
ANR	5858522	Callee	gp_monitor_label		5858510	0					
ANR	5858523	Identifier	gp_monitor_label		5858510	0					
ANR	5858524	ArgumentList	& mon -> native		5858510	1					
ANR	5858525	Argument	& mon -> native		5858510	0					
ANR	5858526	UnaryOperationExpression	& mon -> native		5858510	0					
ANR	5858527	UnaryOperator	&		5858510	0					
ANR	5858528	PtrMemberAccess	mon -> native		5858510	1					
ANR	5858529	Identifier	mon		5858510	0					
ANR	5858530	Identifier	native		5858510	1					
ANR	5858531	Argument	name		5858510	1					
ANR	5858532	Identifier	name		5858510	0					
ANR	5858533	ReturnStatement	return mon ;	146:4:4588:4598	5858510	2	True				
ANR	5858534	Identifier	mon		5858510	0					
ANR	5858535	ReturnType	gx_monitor_t *		5858510	1					
ANR	5858536	Identifier	( gx_monitor_label )		5858510	2					
ANR	5858537	Identifier	gx_monitor_label		5858510	3					
ANR	5858538	ParameterList	"gx_monitor_t * mon , const char * name"		5858510	4					
ANR	5858539	Parameter	gx_monitor_t * mon	141:19:4470:4486	5858510	0	True				
ANR	5858540	ParameterType	gx_monitor_t *		5858510	0					
ANR	5858541	Identifier	mon		5858510	1					
ANR	5858542	Parameter	const char * name	141:38:4489:4504	5858510	1	True				
ANR	5858543	ParameterType	const char *		5858510	0					
ANR	5858544	Identifier	name		5858510	1					
ANR	5858545	CFGEntryNode	ENTRY		5858510		True				
ANR	5858546	CFGExitNode	EXIT		5858510		True				
ANR	5858547	Symbol	& mon -> native		5858510						
ANR	5858548	Symbol	name		5858510						
ANR	5858549	Symbol	mon		5858510						
