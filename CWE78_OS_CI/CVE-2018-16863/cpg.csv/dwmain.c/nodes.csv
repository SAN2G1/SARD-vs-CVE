command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3041817	File	data/converged/CVE-2018-16863_ghostpdl/dwmain.c								
ANR	3041818	DeclStmt									
ANR	3041819	Decl							HINSTANCE	HINSTANCE	ghInstance
ANR	3041820	DeclStmt									
ANR	3041821	Decl							TW	TW *	tw
ANR	3041822	DeclStmt									
ANR	3041823	Decl							const LPSTR	const LPSTR	szAppName
ANR	3041824	DeclStmt									
ANR	3041825	Decl							const LPSTR	const LPSTR	szIniName
ANR	3041826	DeclStmt									
ANR	3041827	Decl							const char	const char *	szDllName
ANR	3041828	DeclStmt									
ANR	3041829	Decl							const LPSTR	const LPSTR	szIniName
ANR	3041830	DeclStmt									
ANR	3041831	Decl							const char	const char *	szDllName
ANR	3041832	DeclStmt									
ANR	3041833	Decl							const LPSTR	const LPSTR	szIniSection
ANR	3041834	DeclStmt									
ANR	3041835	Decl							GSDLL	GSDLL	gsdll
ANR	3041836	DeclStmt									
ANR	3041837	Decl							void	void *	instance
ANR	3041838	DeclStmt									
ANR	3041839	Decl							HWND	HWND	hwndtext
ANR	3041840	DeclStmt									
ANR	3041841	Decl							char	char [ ]	start_string
ANR	3041842	Function	poll	59:0:1396:1676							
ANR	3041843	FunctionDef	poll ()		3041842	0					
ANR	3041844	CompoundStatement		60:0:1418:1676	3041842	0					
ANR	3041845	IdentifierDeclStatement	MSG msg ;	61:4:1424:1431	3041842	0	True				
ANR	3041846	IdentifierDecl	msg		3041842	0					
ANR	3041847	IdentifierDeclType	MSG		3041842	0					
ANR	3041848	Identifier	msg		3041842	1					
ANR	3041849	WhileStatement	"while ( PeekMessage ( & msg , 0 , 0 , 0 , PM_REMOVE ) )"		3041842	1					
ANR	3041850	Condition	"PeekMessage ( & msg , 0 , 0 , 0 , PM_REMOVE )"	62:11:1444:1480	3041842	0	True				
ANR	3041851	CallExpression	"PeekMessage ( & msg , 0 , 0 , 0 , PM_REMOVE )"		3041842	0					
ANR	3041852	Callee	PeekMessage		3041842	0					
ANR	3041853	Identifier	PeekMessage		3041842	0					
ANR	3041854	ArgumentList	& msg		3041842	1					
ANR	3041855	Argument	& msg		3041842	0					
ANR	3041856	UnaryOperationExpression	& msg		3041842	0					
ANR	3041857	UnaryOperator	&		3041842	0					
ANR	3041858	Identifier	msg		3041842	1					
ANR	3041859	Argument	0		3041842	1					
ANR	3041860	PrimaryExpression	0		3041842	0					
ANR	3041861	Argument	0		3041842	2					
ANR	3041862	PrimaryExpression	0		3041842	0					
ANR	3041863	Argument	0		3041842	3					
ANR	3041864	PrimaryExpression	0		3041842	0					
ANR	3041865	Argument	PM_REMOVE		3041842	4					
ANR	3041866	Identifier	PM_REMOVE		3041842	0					
ANR	3041867	CompoundStatement		3:50:64:64	3041842	1					
ANR	3041868	ExpressionStatement	TranslateMessage ( & msg )	63:8:1493:1515	3041842	0	True				
ANR	3041869	CallExpression	TranslateMessage ( & msg )		3041842	0					
ANR	3041870	Callee	TranslateMessage		3041842	0					
ANR	3041871	Identifier	TranslateMessage		3041842	0					
ANR	3041872	ArgumentList	& msg		3041842	1					
ANR	3041873	Argument	& msg		3041842	0					
ANR	3041874	UnaryOperationExpression	& msg		3041842	0					
ANR	3041875	UnaryOperator	&		3041842	0					
ANR	3041876	Identifier	msg		3041842	1					
ANR	3041877	ExpressionStatement	DispatchMessage ( & msg )	64:8:1525:1546	3041842	1	True				
ANR	3041878	CallExpression	DispatchMessage ( & msg )		3041842	0					
ANR	3041879	Callee	DispatchMessage		3041842	0					
ANR	3041880	Identifier	DispatchMessage		3041842	0					
ANR	3041881	ArgumentList	& msg		3041842	1					
ANR	3041882	Argument	& msg		3041842	0					
ANR	3041883	UnaryOperationExpression	& msg		3041842	0					
ANR	3041884	UnaryOperator	&		3041842	0					
ANR	3041885	Identifier	msg		3041842	1					
ANR	3041886	IfStatement	if ( tw -> quitnow )		3041842	2					
ANR	3041887	Condition	tw -> quitnow	67:8:1618:1628	3041842	0	True				
ANR	3041888	PtrMemberAccess	tw -> quitnow		3041842	0					
ANR	3041889	Identifier	tw		3041842	0					
ANR	3041890	Identifier	quitnow		3041842	1					
ANR	3041891	ReturnStatement	return gs_error_Fatal ;	68:8:1639:1660	3041842	1	True				
ANR	3041892	Identifier	gs_error_Fatal		3041842	0					
ANR	3041893	ReturnStatement	return 0 ;	69:4:1666:1674	3041842	3	True				
ANR	3041894	PrimaryExpression	0		3041842	0					
ANR	3041895	ReturnType	static int		3041842	1					
ANR	3041896	Identifier	poll		3041842	2					
ANR	3041897	ParameterList			3041842	3					
ANR	3041898	CFGEntryNode	ENTRY		3041842		True				
ANR	3041899	CFGExitNode	EXIT		3041842		True				
ANR	3041900	Symbol	msg		3041842						
ANR	3041901	Symbol	& msg		3041842						
ANR	3041902	Symbol	gs_error_Fatal		3041842						
ANR	3041903	Symbol	tw		3041842						
ANR	3041904	Symbol	tw -> quitnow		3041842						
ANR	3041905	Symbol	* tw		3041842						
ANR	3041906	Symbol	PM_REMOVE		3041842						
ANR	3041907	Symbol	PeekMessage		3041842						
ANR	3041908	Function	gsdll_stdin	74:0:1773:1885							
ANR	3041909	FunctionDef	"gsdll_stdin (void * instance , char * buf , int len)"		3041908	0					
ANR	3041910	CompoundStatement		76:0:1842:1885	3041908	0					
ANR	3041911	ReturnStatement	"return text_read_line ( tw , buf , len ) ;"	77:4:1848:1883	3041908	0	True				
ANR	3041912	CallExpression	"text_read_line ( tw , buf , len )"		3041908	0					
ANR	3041913	Callee	text_read_line		3041908	0					
ANR	3041914	Identifier	text_read_line		3041908	0					
ANR	3041915	ArgumentList	tw		3041908	1					
ANR	3041916	Argument	tw		3041908	0					
ANR	3041917	Identifier	tw		3041908	0					
ANR	3041918	Argument	buf		3041908	1					
ANR	3041919	Identifier	buf		3041908	0					
ANR	3041920	Argument	len		3041908	2					
ANR	3041921	Identifier	len		3041908	0					
ANR	3041922	ReturnType	static int GSDLLCALL		3041908	1					
ANR	3041923	Identifier	gsdll_stdin		3041908	2					
ANR	3041924	ParameterList	"void * instance , char * buf , int len"		3041908	3					
ANR	3041925	Parameter	void * instance	75:12:1806:1819	3041908	0	True				
ANR	3041926	ParameterType	void *		3041908	0					
ANR	3041927	Identifier	instance		3041908	1					
ANR	3041928	Parameter	char * buf	75:28:1822:1830	3041908	1	True				
ANR	3041929	ParameterType	char *		3041908	0					
ANR	3041930	Identifier	buf		3041908	1					
ANR	3041931	Parameter	int len	75:39:1833:1839	3041908	2	True				
ANR	3041932	ParameterType	int		3041908	0					
ANR	3041933	Identifier	len		3041908	1					
ANR	3041934	CFGEntryNode	ENTRY		3041908		True				
ANR	3041935	CFGExitNode	EXIT		3041908		True				
ANR	3041936	Symbol	buf		3041908						
ANR	3041937	Symbol	instance		3041908						
ANR	3041938	Symbol	tw		3041908						
ANR	3041939	Symbol	len		3041908						
ANR	3041940	Symbol	text_read_line		3041908						
ANR	3041941	Function	gsdll_stdout	80:0:1888:2016							
ANR	3041942	FunctionDef	"gsdll_stdout (void * instance , const char * str , int len)"		3041941	0					
ANR	3041943	CompoundStatement		82:0:1964:2016	3041941	0					
ANR	3041944	ExpressionStatement	"text_write_buf ( tw , str , len )"	83:4:1970:1998	3041941	0	True				
ANR	3041945	CallExpression	"text_write_buf ( tw , str , len )"		3041941	0					
ANR	3041946	Callee	text_write_buf		3041941	0					
ANR	3041947	Identifier	text_write_buf		3041941	0					
ANR	3041948	ArgumentList	tw		3041941	1					
ANR	3041949	Argument	tw		3041941	0					
ANR	3041950	Identifier	tw		3041941	0					
ANR	3041951	Argument	str		3041941	1					
ANR	3041952	Identifier	str		3041941	0					
ANR	3041953	Argument	len		3041941	2					
ANR	3041954	Identifier	len		3041941	0					
ANR	3041955	ReturnStatement	return len ;	84:4:2004:2014	3041941	1	True				
ANR	3041956	Identifier	len		3041941	0					
ANR	3041957	ReturnType	static int GSDLLCALL		3041941	1					
ANR	3041958	Identifier	gsdll_stdout		3041941	2					
ANR	3041959	ParameterList	"void * instance , const char * str , int len"		3041941	3					
ANR	3041960	Parameter	void * instance	81:13:1922:1935	3041941	0	True				
ANR	3041961	ParameterType	void *		3041941	0					
ANR	3041962	Identifier	instance		3041941	1					
ANR	3041963	Parameter	const char * str	81:29:1938:1952	3041941	1	True				
ANR	3041964	ParameterType	const char *		3041941	0					
ANR	3041965	Identifier	str		3041941	1					
ANR	3041966	Parameter	int len	81:46:1955:1961	3041941	2	True				
ANR	3041967	ParameterType	int		3041941	0					
ANR	3041968	Identifier	len		3041941	1					
ANR	3041969	CFGEntryNode	ENTRY		3041941		True				
ANR	3041970	CFGExitNode	EXIT		3041941		True				
ANR	3041971	Symbol	str		3041941						
ANR	3041972	Symbol	instance		3041941						
ANR	3041973	Symbol	tw		3041941						
ANR	3041974	Symbol	len		3041941						
ANR	3041975	Function	gsdll_stderr	87:0:2019:2147							
ANR	3041976	FunctionDef	"gsdll_stderr (void * instance , const char * str , int len)"		3041975	0					
ANR	3041977	CompoundStatement		89:0:2095:2147	3041975	0					
ANR	3041978	ExpressionStatement	"text_write_buf ( tw , str , len )"	90:4:2101:2129	3041975	0	True				
ANR	3041979	CallExpression	"text_write_buf ( tw , str , len )"		3041975	0					
ANR	3041980	Callee	text_write_buf		3041975	0					
ANR	3041981	Identifier	text_write_buf		3041975	0					
ANR	3041982	ArgumentList	tw		3041975	1					
ANR	3041983	Argument	tw		3041975	0					
ANR	3041984	Identifier	tw		3041975	0					
ANR	3041985	Argument	str		3041975	1					
ANR	3041986	Identifier	str		3041975	0					
ANR	3041987	Argument	len		3041975	2					
ANR	3041988	Identifier	len		3041975	0					
ANR	3041989	ReturnStatement	return len ;	91:4:2135:2145	3041975	1	True				
ANR	3041990	Identifier	len		3041975	0					
ANR	3041991	ReturnType	static int GSDLLCALL		3041975	1					
ANR	3041992	Identifier	gsdll_stderr		3041975	2					
ANR	3041993	ParameterList	"void * instance , const char * str , int len"		3041975	3					
ANR	3041994	Parameter	void * instance	88:13:2053:2066	3041975	0	True				
ANR	3041995	ParameterType	void *		3041975	0					
ANR	3041996	Identifier	instance		3041975	1					
ANR	3041997	Parameter	const char * str	88:29:2069:2083	3041975	1	True				
ANR	3041998	ParameterType	const char *		3041975	0					
ANR	3041999	Identifier	str		3041975	1					
ANR	3042000	Parameter	int len	88:46:2086:2092	3041975	2	True				
ANR	3042001	ParameterType	int		3041975	0					
ANR	3042002	Identifier	len		3041975	1					
ANR	3042003	CFGEntryNode	ENTRY		3041975		True				
ANR	3042004	CFGExitNode	EXIT		3041975		True				
ANR	3042005	Symbol	str		3041975						
ANR	3042006	Symbol	instance		3041975						
ANR	3042007	Symbol	tw		3041975						
ANR	3042008	Symbol	len		3041975						
ANR	3042009	Function	gsdll_poll	96:0:2256:2323							
ANR	3042010	FunctionDef	gsdll_poll (void * handle)		3042009	0					
ANR	3042011	CompoundStatement		97:0:2302:2323	3042009	0					
ANR	3042012	ReturnStatement	return poll ( ) ;	98:4:2308:2321	3042009	0	True				
ANR	3042013	CallExpression	poll ( )		3042009	0					
ANR	3042014	Callee	poll		3042009	0					
ANR	3042015	Identifier	poll		3042009	0					
ANR	3042016	ArgumentList			3042009	1					
ANR	3042017	ReturnType	static int GSDLLCALL		3042009	1					
ANR	3042018	Identifier	gsdll_poll		3042009	2					
ANR	3042019	ParameterList	void * handle		3042009	3					
ANR	3042020	Parameter	void * handle	96:32:2288:2299	3042009	0	True				
ANR	3042021	ParameterType	void *		3042009	0					
ANR	3042022	Identifier	handle		3042009	1					
ANR	3042023	CFGEntryNode	ENTRY		3042009		True				
ANR	3042024	CFGExitNode	EXIT		3042009		True				
ANR	3042025	Symbol	handle		3042009						
ANR	3042026	Symbol	poll		3042009						
ANR	3042027	Function	display_open	109:0:2538:2861							
ANR	3042028	FunctionDef	"display_open (void * handle , void * device)"		3042027	0					
ANR	3042029	CompoundStatement		110:0:2590:2861	3042027	0					
ANR	3042030	IdentifierDeclStatement	IMAGE * img ;	111:4:2596:2606	3042027	0	True				
ANR	3042031	IdentifierDecl	* img		3042027	0					
ANR	3042032	IdentifierDeclType	IMAGE *		3042027	0					
ANR	3042033	Identifier	img		3042027	1					
ANR	3042034	IdentifierDeclStatement	char buf [ 256 ] ;	113:4:2633:2646	3042027	1	True				
ANR	3042035	IdentifierDecl	buf [ 256 ]		3042027	0					
ANR	3042036	IdentifierDeclType	char [ 256 ]		3042027	0					
ANR	3042037	Identifier	buf		3042027	1					
ANR	3042038	PrimaryExpression	256		3042027	2					
ANR	3042039	ExpressionStatement	"sprintf ( buf , ""display_open(0x%x, 0x%x)\\n"" , handle , device )"	114:4:2652:2710	3042027	2	True				
ANR	3042040	CallExpression	"sprintf ( buf , ""display_open(0x%x, 0x%x)\\n"" , handle , device )"		3042027	0					
ANR	3042041	Callee	sprintf		3042027	0					
ANR	3042042	Identifier	sprintf		3042027	0					
ANR	3042043	ArgumentList	buf		3042027	1					
ANR	3042044	Argument	buf		3042027	0					
ANR	3042045	Identifier	buf		3042027	0					
ANR	3042046	Argument	"""display_open(0x%x, 0x%x)\\n"""		3042027	1					
ANR	3042047	PrimaryExpression	"""display_open(0x%x, 0x%x)\\n"""		3042027	0					
ANR	3042048	Argument	handle		3042027	2					
ANR	3042049	Identifier	handle		3042027	0					
ANR	3042050	Argument	device		3042027	3					
ANR	3042051	Identifier	device		3042027	0					
ANR	3042052	ExpressionStatement	"text_puts ( tw , buf )"	115:4:2716:2734	3042027	3	True				
ANR	3042053	CallExpression	"text_puts ( tw , buf )"		3042027	0					
ANR	3042054	Callee	text_puts		3042027	0					
ANR	3042055	Identifier	text_puts		3042027	0					
ANR	3042056	ArgumentList	tw		3042027	1					
ANR	3042057	Argument	tw		3042027	0					
ANR	3042058	Identifier	tw		3042027	0					
ANR	3042059	Argument	buf		3042027	1					
ANR	3042060	Identifier	buf		3042027	0					
ANR	3042061	ExpressionStatement	"img = image_new ( handle , device )"	117:4:2747:2778	3042027	4	True				
ANR	3042062	AssignmentExpression	"img = image_new ( handle , device )"		3042027	0		=			
ANR	3042063	Identifier	img		3042027	0					
ANR	3042064	CallExpression	"image_new ( handle , device )"		3042027	1					
ANR	3042065	Callee	image_new		3042027	0					
ANR	3042066	Identifier	image_new		3042027	0					
ANR	3042067	ArgumentList	handle		3042027	1					
ANR	3042068	Argument	handle		3042027	0					
ANR	3042069	Identifier	handle		3042027	0					
ANR	3042070	Argument	device		3042027	1					
ANR	3042071	Identifier	device		3042027	0					
ANR	3042072	IfStatement	if ( img )		3042027	5					
ANR	3042073	Condition	img	118:8:2817:2819	3042027	0	True				
ANR	3042074	Identifier	img		3042027	0					
ANR	3042075	ExpressionStatement	image_open ( img )	119:8:2830:2845	3042027	1	True				
ANR	3042076	CallExpression	image_open ( img )		3042027	0					
ANR	3042077	Callee	image_open		3042027	0					
ANR	3042078	Identifier	image_open		3042027	0					
ANR	3042079	ArgumentList	img		3042027	1					
ANR	3042080	Argument	img		3042027	0					
ANR	3042081	Identifier	img		3042027	0					
ANR	3042082	ReturnStatement	return 0 ;	120:4:2851:2859	3042027	6	True				
ANR	3042083	PrimaryExpression	0		3042027	0					
ANR	3042084	ReturnType	static int		3042027	1					
ANR	3042085	Identifier	display_open		3042027	2					
ANR	3042086	ParameterList	"void * handle , void * device"		3042027	3					
ANR	3042087	Parameter	void * handle	109:24:2562:2573	3042027	0	True				
ANR	3042088	ParameterType	void *		3042027	0					
ANR	3042089	Identifier	handle		3042027	1					
ANR	3042090	Parameter	void * device	109:38:2576:2587	3042027	1	True				
ANR	3042091	ParameterType	void *		3042027	0					
ANR	3042092	Identifier	device		3042027	1					
ANR	3042093	CFGEntryNode	ENTRY		3042027		True				
ANR	3042094	CFGExitNode	EXIT		3042027		True				
ANR	3042095	Symbol	image_new		3042027						
ANR	3042096	Symbol	img		3042027						
ANR	3042097	Symbol	buf		3042027						
ANR	3042098	Symbol	tw		3042027						
ANR	3042099	Symbol	handle		3042027						
ANR	3042100	Symbol	device		3042027						
ANR	3042101	Function	display_preclose	125:0:2961:3227							
ANR	3042102	FunctionDef	"display_preclose (void * handle , void * device)"		3042101	0					
ANR	3042103	CompoundStatement		126:0:3017:3227	3042101	0					
ANR	3042104	IdentifierDeclStatement	char buf [ 256 ] ;	128:4:3044:3057	3042101	0	True				
ANR	3042105	IdentifierDecl	buf [ 256 ]		3042101	0					
ANR	3042106	IdentifierDeclType	char [ 256 ]		3042101	0					
ANR	3042107	Identifier	buf		3042101	1					
ANR	3042108	PrimaryExpression	256		3042101	2					
ANR	3042109	ExpressionStatement	"sprintf ( buf , ""display_preclose(0x%x, 0x$x)\\n"" , handle , device )"	129:4:3063:3125	3042101	1	True				
ANR	3042110	CallExpression	"sprintf ( buf , ""display_preclose(0x%x, 0x$x)\\n"" , handle , device )"		3042101	0					
ANR	3042111	Callee	sprintf		3042101	0					
ANR	3042112	Identifier	sprintf		3042101	0					
ANR	3042113	ArgumentList	buf		3042101	1					
ANR	3042114	Argument	buf		3042101	0					
ANR	3042115	Identifier	buf		3042101	0					
ANR	3042116	Argument	"""display_preclose(0x%x, 0x$x)\\n"""		3042101	1					
ANR	3042117	PrimaryExpression	"""display_preclose(0x%x, 0x$x)\\n"""		3042101	0					
ANR	3042118	Argument	handle		3042101	2					
ANR	3042119	Identifier	handle		3042101	0					
ANR	3042120	Argument	device		3042101	3					
ANR	3042121	Identifier	device		3042101	0					
ANR	3042122	ExpressionStatement	"text_puts ( tw , buf )"	130:4:3131:3149	3042101	2	True				
ANR	3042123	CallExpression	"text_puts ( tw , buf )"		3042101	0					
ANR	3042124	Callee	text_puts		3042101	0					
ANR	3042125	Identifier	text_puts		3042101	0					
ANR	3042126	ArgumentList	tw		3042101	1					
ANR	3042127	Argument	tw		3042101	0					
ANR	3042128	Identifier	tw		3042101	0					
ANR	3042129	Argument	buf		3042101	1					
ANR	3042130	Identifier	buf		3042101	0					
ANR	3042131	ReturnStatement	return 0 ;	133:4:3217:3225	3042101	3	True				
ANR	3042132	PrimaryExpression	0		3042101	0					
ANR	3042133	ReturnType	static int		3042101	1					
ANR	3042134	Identifier	display_preclose		3042101	2					
ANR	3042135	ParameterList	"void * handle , void * device"		3042101	3					
ANR	3042136	Parameter	void * handle	125:28:2989:3000	3042101	0	True				
ANR	3042137	ParameterType	void *		3042101	0					
ANR	3042138	Identifier	handle		3042101	1					
ANR	3042139	Parameter	void * device	125:42:3003:3014	3042101	1	True				
ANR	3042140	ParameterType	void *		3042101	0					
ANR	3042141	Identifier	device		3042101	1					
ANR	3042142	CFGEntryNode	ENTRY		3042101		True				
ANR	3042143	CFGExitNode	EXIT		3042101		True				
ANR	3042144	Symbol	buf		3042101						
ANR	3042145	Symbol	tw		3042101						
ANR	3042146	Symbol	handle		3042101						
ANR	3042147	Symbol	device		3042101						
ANR	3042148	Function	display_close	138:0:3307:3678							
ANR	3042149	FunctionDef	"display_close (void * handle , void * device)"		3042148	0					
ANR	3042150	CompoundStatement		139:0:3360:3678	3042148	0					
ANR	3042151	IdentifierDeclStatement	IMAGE * img ;	140:4:3366:3376	3042148	0	True				
ANR	3042152	IdentifierDecl	* img		3042148	0					
ANR	3042153	IdentifierDeclType	IMAGE *		3042148	0					
ANR	3042154	Identifier	img		3042148	1					
ANR	3042155	IdentifierDeclStatement	char buf [ 256 ] ;	142:4:3403:3416	3042148	1	True				
ANR	3042156	IdentifierDecl	buf [ 256 ]		3042148	0					
ANR	3042157	IdentifierDeclType	char [ 256 ]		3042148	0					
ANR	3042158	Identifier	buf		3042148	1					
ANR	3042159	PrimaryExpression	256		3042148	2					
ANR	3042160	ExpressionStatement	"sprintf ( buf , ""display_close(0x%x, 0x$x)\\n"" , handle , device )"	143:4:3422:3481	3042148	2	True				
ANR	3042161	CallExpression	"sprintf ( buf , ""display_close(0x%x, 0x$x)\\n"" , handle , device )"		3042148	0					
ANR	3042162	Callee	sprintf		3042148	0					
ANR	3042163	Identifier	sprintf		3042148	0					
ANR	3042164	ArgumentList	buf		3042148	1					
ANR	3042165	Argument	buf		3042148	0					
ANR	3042166	Identifier	buf		3042148	0					
ANR	3042167	Argument	"""display_close(0x%x, 0x$x)\\n"""		3042148	1					
ANR	3042168	PrimaryExpression	"""display_close(0x%x, 0x$x)\\n"""		3042148	0					
ANR	3042169	Argument	handle		3042148	2					
ANR	3042170	Identifier	handle		3042148	0					
ANR	3042171	Argument	device		3042148	3					
ANR	3042172	Identifier	device		3042148	0					
ANR	3042173	ExpressionStatement	"text_puts ( tw , buf )"	144:4:3487:3505	3042148	3	True				
ANR	3042174	CallExpression	"text_puts ( tw , buf )"		3042148	0					
ANR	3042175	Callee	text_puts		3042148	0					
ANR	3042176	Identifier	text_puts		3042148	0					
ANR	3042177	ArgumentList	tw		3042148	1					
ANR	3042178	Argument	tw		3042148	0					
ANR	3042179	Identifier	tw		3042148	0					
ANR	3042180	Argument	buf		3042148	1					
ANR	3042181	Identifier	buf		3042148	0					
ANR	3042182	ExpressionStatement	"img = image_find ( handle , device )"	146:4:3518:3550	3042148	4	True				
ANR	3042183	AssignmentExpression	"img = image_find ( handle , device )"		3042148	0		=			
ANR	3042184	Identifier	img		3042148	0					
ANR	3042185	CallExpression	"image_find ( handle , device )"		3042148	1					
ANR	3042186	Callee	image_find		3042148	0					
ANR	3042187	Identifier	image_find		3042148	0					
ANR	3042188	ArgumentList	handle		3042148	1					
ANR	3042189	Argument	handle		3042148	0					
ANR	3042190	Identifier	handle		3042148	0					
ANR	3042191	Argument	device		3042148	1					
ANR	3042192	Identifier	device		3042148	0					
ANR	3042193	IfStatement	if ( img )		3042148	5					
ANR	3042194	Condition	img	147:8:3560:3562	3042148	0	True				
ANR	3042195	Identifier	img		3042148	0					
ANR	3042196	CompoundStatement		9:13:204:204	3042148	1					
ANR	3042197	ExpressionStatement	image_delete ( img )	148:8:3575:3592	3042148	0	True				
ANR	3042198	CallExpression	image_delete ( img )		3042148	0					
ANR	3042199	Callee	image_delete		3042148	0					
ANR	3042200	Identifier	image_delete		3042148	0					
ANR	3042201	ArgumentList	img		3042148	1					
ANR	3042202	Argument	img		3042148	0					
ANR	3042203	Identifier	img		3042148	0					
ANR	3042204	ExpressionStatement	image_close ( img )	149:8:3640:3656	3042148	1	True				
ANR	3042205	CallExpression	image_close ( img )		3042148	0					
ANR	3042206	Callee	image_close		3042148	0					
ANR	3042207	Identifier	image_close		3042148	0					
ANR	3042208	ArgumentList	img		3042148	1					
ANR	3042209	Argument	img		3042148	0					
ANR	3042210	Identifier	img		3042148	0					
ANR	3042211	ReturnStatement	return 0 ;	151:4:3668:3676	3042148	6	True				
ANR	3042212	PrimaryExpression	0		3042148	0					
ANR	3042213	ReturnType	static int		3042148	1					
ANR	3042214	Identifier	display_close		3042148	2					
ANR	3042215	ParameterList	"void * handle , void * device"		3042148	3					
ANR	3042216	Parameter	void * handle	138:25:3332:3343	3042148	0	True				
ANR	3042217	ParameterType	void *		3042148	0					
ANR	3042218	Identifier	handle		3042148	1					
ANR	3042219	Parameter	void * device	138:39:3346:3357	3042148	1	True				
ANR	3042220	ParameterType	void *		3042148	0					
ANR	3042221	Identifier	device		3042148	1					
ANR	3042222	CFGEntryNode	ENTRY		3042148		True				
ANR	3042223	CFGExitNode	EXIT		3042148		True				
ANR	3042224	Symbol	img		3042148						
ANR	3042225	Symbol	buf		3042148						
ANR	3042226	Symbol	tw		3042148						
ANR	3042227	Symbol	image_find		3042148						
ANR	3042228	Symbol	handle		3042148						
ANR	3042229	Symbol	device		3042148						
ANR	3042230	Function	display_presize	156:0:3775:4131							
ANR	3042231	FunctionDef	"display_presize (void * handle , void * device , int width , int height , int raster , unsigned int format)"		3042230	0					
ANR	3042232	CompoundStatement		158:0:3894:4131	3042230	0					
ANR	3042233	IdentifierDeclStatement	char buf [ 256 ] ;	160:4:3921:3934	3042230	0	True				
ANR	3042234	IdentifierDecl	buf [ 256 ]		3042230	0					
ANR	3042235	IdentifierDeclType	char [ 256 ]		3042230	0					
ANR	3042236	Identifier	buf		3042230	1					
ANR	3042237	PrimaryExpression	256		3042230	2					
ANR	3042238	ExpressionStatement	"sprintf ( buf , ""display_presize(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d)\\n"" , handle , device , width , height , raster , format )"	161:4:3940:4084	3042230	1	True				
ANR	3042239	CallExpression	"sprintf ( buf , ""display_presize(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d)\\n"" , handle , device , width , height , raster , format )"		3042230	0					
ANR	3042240	Callee	sprintf		3042230	0					
ANR	3042241	Identifier	sprintf		3042230	0					
ANR	3042242	ArgumentList	buf		3042230	1					
ANR	3042243	Argument	buf		3042230	0					
ANR	3042244	Identifier	buf		3042230	0					
ANR	3042245	Argument	"""display_presize(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d)\\n"""		3042230	1					
ANR	3042246	PrimaryExpression	"""display_presize(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d)\\n"""		3042230	0					
ANR	3042247	Argument	handle		3042230	2					
ANR	3042248	Identifier	handle		3042230	0					
ANR	3042249	Argument	device		3042230	3					
ANR	3042250	Identifier	device		3042230	0					
ANR	3042251	Argument	width		3042230	4					
ANR	3042252	Identifier	width		3042230	0					
ANR	3042253	Argument	height		3042230	5					
ANR	3042254	Identifier	height		3042230	0					
ANR	3042255	Argument	raster		3042230	6					
ANR	3042256	Identifier	raster		3042230	0					
ANR	3042257	Argument	format		3042230	7					
ANR	3042258	Identifier	format		3042230	0					
ANR	3042259	ExpressionStatement	"text_puts ( tw , buf )"	164:4:4090:4108	3042230	2	True				
ANR	3042260	CallExpression	"text_puts ( tw , buf )"		3042230	0					
ANR	3042261	Callee	text_puts		3042230	0					
ANR	3042262	Identifier	text_puts		3042230	0					
ANR	3042263	ArgumentList	tw		3042230	1					
ANR	3042264	Argument	tw		3042230	0					
ANR	3042265	Identifier	tw		3042230	0					
ANR	3042266	Argument	buf		3042230	1					
ANR	3042267	Identifier	buf		3042230	0					
ANR	3042268	ReturnStatement	return 0 ;	166:4:4121:4129	3042230	3	True				
ANR	3042269	PrimaryExpression	0		3042230	0					
ANR	3042270	ReturnType	static int		3042230	1					
ANR	3042271	Identifier	display_presize		3042230	2					
ANR	3042272	ParameterList	"void * handle , void * device , int width , int height , int raster , unsigned int format"		3042230	3					
ANR	3042273	Parameter	void * handle	156:27:3802:3813	3042230	0	True				
ANR	3042274	ParameterType	void *		3042230	0					
ANR	3042275	Identifier	handle		3042230	1					
ANR	3042276	Parameter	void * device	156:41:3816:3827	3042230	1	True				
ANR	3042277	ParameterType	void *		3042230	0					
ANR	3042278	Identifier	device		3042230	1					
ANR	3042279	Parameter	int width	156:55:3830:3838	3042230	2	True				
ANR	3042280	ParameterType	int		3042230	0					
ANR	3042281	Identifier	width		3042230	1					
ANR	3042282	Parameter	int height	156:66:3841:3850	3042230	3	True				
ANR	3042283	ParameterType	int		3042230	0					
ANR	3042284	Identifier	height		3042230	1					
ANR	3042285	Parameter	int raster	157:8:3861:3870	3042230	4	True				
ANR	3042286	ParameterType	int		3042230	0					
ANR	3042287	Identifier	raster		3042230	1					
ANR	3042288	Parameter	unsigned int format	157:20:3873:3891	3042230	5	True				
ANR	3042289	ParameterType	unsigned int		3042230	0					
ANR	3042290	Identifier	format		3042230	1					
ANR	3042291	CFGEntryNode	ENTRY		3042230		True				
ANR	3042292	CFGExitNode	EXIT		3042230		True				
ANR	3042293	Symbol	buf		3042230						
ANR	3042294	Symbol	tw		3042230						
ANR	3042295	Symbol	width		3042230						
ANR	3042296	Symbol	raster		3042230						
ANR	3042297	Symbol	format		3042230						
ANR	3042298	Symbol	handle		3042230						
ANR	3042299	Symbol	device		3042230						
ANR	3042300	Symbol	height		3042230						
ANR	3042301	Function	display_size	171:0:4212:4782							
ANR	3042302	FunctionDef	"display_size (void * handle , void * device , int width , int height , int raster , unsigned int format , unsigned char * pimage)"		3042301	0					
ANR	3042303	CompoundStatement		173:0:4351:4782	3042301	0					
ANR	3042304	IdentifierDeclStatement	IMAGE * img ;	174:4:4357:4367	3042301	0	True				
ANR	3042305	IdentifierDecl	* img		3042301	0					
ANR	3042306	IdentifierDeclType	IMAGE *		3042301	0					
ANR	3042307	Identifier	img		3042301	1					
ANR	3042308	IdentifierDeclStatement	char buf [ 256 ] ;	176:4:4394:4407	3042301	1	True				
ANR	3042309	IdentifierDecl	buf [ 256 ]		3042301	0					
ANR	3042310	IdentifierDeclType	char [ 256 ]		3042301	0					
ANR	3042311	Identifier	buf		3042301	1					
ANR	3042312	PrimaryExpression	256		3042301	2					
ANR	3042313	ExpressionStatement	"sprintf ( buf , ""display_size(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d image=0x%x)\\n"" , handle , device , width , height , raster , format , pimage )"	177:4:4413:4573	3042301	2	True				
ANR	3042314	CallExpression	"sprintf ( buf , ""display_size(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d image=0x%x)\\n"" , handle , device , width , height , raster , format , pimage )"		3042301	0					
ANR	3042315	Callee	sprintf		3042301	0					
ANR	3042316	Identifier	sprintf		3042301	0					
ANR	3042317	ArgumentList	buf		3042301	1					
ANR	3042318	Argument	buf		3042301	0					
ANR	3042319	Identifier	buf		3042301	0					
ANR	3042320	Argument	"""display_size(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d image=0x%x)\\n"""		3042301	1					
ANR	3042321	PrimaryExpression	"""display_size(0x%x, 0x%x, width=%d height=%d raster=%d\\n\\\\n  format=%d image=0x%x)\\n"""		3042301	0					
ANR	3042322	Argument	handle		3042301	2					
ANR	3042323	Identifier	handle		3042301	0					
ANR	3042324	Argument	device		3042301	3					
ANR	3042325	Identifier	device		3042301	0					
ANR	3042326	Argument	width		3042301	4					
ANR	3042327	Identifier	width		3042301	0					
ANR	3042328	Argument	height		3042301	5					
ANR	3042329	Identifier	height		3042301	0					
ANR	3042330	Argument	raster		3042301	6					
ANR	3042331	Identifier	raster		3042301	0					
ANR	3042332	Argument	format		3042301	7					
ANR	3042333	Identifier	format		3042301	0					
ANR	3042334	Argument	pimage		3042301	8					
ANR	3042335	Identifier	pimage		3042301	0					
ANR	3042336	ExpressionStatement	"text_puts ( tw , buf )"	180:4:4579:4597	3042301	3	True				
ANR	3042337	CallExpression	"text_puts ( tw , buf )"		3042301	0					
ANR	3042338	Callee	text_puts		3042301	0					
ANR	3042339	Identifier	text_puts		3042301	0					
ANR	3042340	ArgumentList	tw		3042301	1					
ANR	3042341	Argument	tw		3042301	0					
ANR	3042342	Identifier	tw		3042301	0					
ANR	3042343	Argument	buf		3042301	1					
ANR	3042344	Identifier	buf		3042301	0					
ANR	3042345	ExpressionStatement	"img = image_find ( handle , device )"	182:4:4610:4642	3042301	4	True				
ANR	3042346	AssignmentExpression	"img = image_find ( handle , device )"		3042301	0		=			
ANR	3042347	Identifier	img		3042301	0					
ANR	3042348	CallExpression	"image_find ( handle , device )"		3042301	1					
ANR	3042349	Callee	image_find		3042301	0					
ANR	3042350	Identifier	image_find		3042301	0					
ANR	3042351	ArgumentList	handle		3042301	1					
ANR	3042352	Argument	handle		3042301	0					
ANR	3042353	Identifier	handle		3042301	0					
ANR	3042354	Argument	device		3042301	1					
ANR	3042355	Identifier	device		3042301	0					
ANR	3042356	IfStatement	if ( img != NULL )		3042301	5					
ANR	3042357	Condition	img != NULL	183:8:4652:4662	3042301	0	True				
ANR	3042358	EqualityExpression	img != NULL		3042301	0		!=			
ANR	3042359	Identifier	img		3042301	0					
ANR	3042360	Identifier	NULL		3042301	1					
ANR	3042361	CompoundStatement		11:21:313:313	3042301	1					
ANR	3042362	ExpressionStatement	"image_size ( img , width , height , raster , format , pimage )"	184:8:4675:4729	3042301	0	True				
ANR	3042363	CallExpression	"image_size ( img , width , height , raster , format , pimage )"		3042301	0					
ANR	3042364	Callee	image_size		3042301	0					
ANR	3042365	Identifier	image_size		3042301	0					
ANR	3042366	ArgumentList	img		3042301	1					
ANR	3042367	Argument	img		3042301	0					
ANR	3042368	Identifier	img		3042301	0					
ANR	3042369	Argument	width		3042301	1					
ANR	3042370	Identifier	width		3042301	0					
ANR	3042371	Argument	height		3042301	2					
ANR	3042372	Identifier	height		3042301	0					
ANR	3042373	Argument	raster		3042301	3					
ANR	3042374	Identifier	raster		3042301	0					
ANR	3042375	Argument	format		3042301	4					
ANR	3042376	Identifier	format		3042301	0					
ANR	3042377	Argument	pimage		3042301	5					
ANR	3042378	Identifier	pimage		3042301	0					
ANR	3042379	ExpressionStatement	image_updatesize ( img )	185:8:4739:4760	3042301	1	True				
ANR	3042380	CallExpression	image_updatesize ( img )		3042301	0					
ANR	3042381	Callee	image_updatesize		3042301	0					
ANR	3042382	Identifier	image_updatesize		3042301	0					
ANR	3042383	ArgumentList	img		3042301	1					
ANR	3042384	Argument	img		3042301	0					
ANR	3042385	Identifier	img		3042301	0					
ANR	3042386	ReturnStatement	return 0 ;	187:4:4772:4780	3042301	6	True				
ANR	3042387	PrimaryExpression	0		3042301	0					
ANR	3042388	ReturnType	static int		3042301	1					
ANR	3042389	Identifier	display_size		3042301	2					
ANR	3042390	ParameterList	"void * handle , void * device , int width , int height , int raster , unsigned int format , unsigned char * pimage"		3042301	3					
ANR	3042391	Parameter	void * handle	171:24:4236:4247	3042301	0	True				
ANR	3042392	ParameterType	void *		3042301	0					
ANR	3042393	Identifier	handle		3042301	1					
ANR	3042394	Parameter	void * device	171:38:4250:4261	3042301	1	True				
ANR	3042395	ParameterType	void *		3042301	0					
ANR	3042396	Identifier	device		3042301	1					
ANR	3042397	Parameter	int width	171:52:4264:4272	3042301	2	True				
ANR	3042398	ParameterType	int		3042301	0					
ANR	3042399	Identifier	width		3042301	1					
ANR	3042400	Parameter	int height	171:63:4275:4284	3042301	3	True				
ANR	3042401	ParameterType	int		3042301	0					
ANR	3042402	Identifier	height		3042301	1					
ANR	3042403	Parameter	int raster	172:8:4295:4304	3042301	4	True				
ANR	3042404	ParameterType	int		3042301	0					
ANR	3042405	Identifier	raster		3042301	1					
ANR	3042406	Parameter	unsigned int format	172:20:4307:4325	3042301	5	True				
ANR	3042407	ParameterType	unsigned int		3042301	0					
ANR	3042408	Identifier	format		3042301	1					
ANR	3042409	Parameter	unsigned char * pimage	172:41:4328:4348	3042301	6	True				
ANR	3042410	ParameterType	unsigned char *		3042301	0					
ANR	3042411	Identifier	pimage		3042301	1					
ANR	3042412	CFGEntryNode	ENTRY		3042301		True				
ANR	3042413	CFGExitNode	EXIT		3042301		True				
ANR	3042414	Symbol	pimage		3042301						
ANR	3042415	Symbol	img		3042301						
ANR	3042416	Symbol	buf		3042301						
ANR	3042417	Symbol	tw		3042301						
ANR	3042418	Symbol	NULL		3042301						
ANR	3042419	Symbol	image_find		3042301						
ANR	3042420	Symbol	width		3042301						
ANR	3042421	Symbol	raster		3042301						
ANR	3042422	Symbol	format		3042301						
ANR	3042423	Symbol	handle		3042301						
ANR	3042424	Symbol	device		3042301						
ANR	3042425	Symbol	height		3042301						
ANR	3042426	Function	display_sync	191:0:4801:5104							
ANR	3042427	FunctionDef	"display_sync (void * handle , void * device)"		3042426	0					
ANR	3042428	CompoundStatement		192:0:4853:5104	3042426	0					
ANR	3042429	IdentifierDeclStatement	IMAGE * img ;	193:4:4859:4869	3042426	0	True				
ANR	3042430	IdentifierDecl	* img		3042426	0					
ANR	3042431	IdentifierDeclType	IMAGE *		3042426	0					
ANR	3042432	Identifier	img		3042426	1					
ANR	3042433	IdentifierDeclStatement	char buf [ 256 ] ;	195:4:4896:4909	3042426	1	True				
ANR	3042434	IdentifierDecl	buf [ 256 ]		3042426	0					
ANR	3042435	IdentifierDeclType	char [ 256 ]		3042426	0					
ANR	3042436	Identifier	buf		3042426	1					
ANR	3042437	PrimaryExpression	256		3042426	2					
ANR	3042438	ExpressionStatement	"sprintf ( buf , ""display_sync(0x%x, 0x%x)\\n"" , handle , device )"	196:4:4915:4973	3042426	2	True				
ANR	3042439	CallExpression	"sprintf ( buf , ""display_sync(0x%x, 0x%x)\\n"" , handle , device )"		3042426	0					
ANR	3042440	Callee	sprintf		3042426	0					
ANR	3042441	Identifier	sprintf		3042426	0					
ANR	3042442	ArgumentList	buf		3042426	1					
ANR	3042443	Argument	buf		3042426	0					
ANR	3042444	Identifier	buf		3042426	0					
ANR	3042445	Argument	"""display_sync(0x%x, 0x%x)\\n"""		3042426	1					
ANR	3042446	PrimaryExpression	"""display_sync(0x%x, 0x%x)\\n"""		3042426	0					
ANR	3042447	Argument	handle		3042426	2					
ANR	3042448	Identifier	handle		3042426	0					
ANR	3042449	Argument	device		3042426	3					
ANR	3042450	Identifier	device		3042426	0					
ANR	3042451	ExpressionStatement	"text_puts ( tw , buf )"	197:4:4979:4997	3042426	3	True				
ANR	3042452	CallExpression	"text_puts ( tw , buf )"		3042426	0					
ANR	3042453	Callee	text_puts		3042426	0					
ANR	3042454	Identifier	text_puts		3042426	0					
ANR	3042455	ArgumentList	tw		3042426	1					
ANR	3042456	Argument	tw		3042426	0					
ANR	3042457	Identifier	tw		3042426	0					
ANR	3042458	Argument	buf		3042426	1					
ANR	3042459	Identifier	buf		3042426	0					
ANR	3042460	ExpressionStatement	"img = image_find ( handle , device )"	199:4:5010:5042	3042426	4	True				
ANR	3042461	AssignmentExpression	"img = image_find ( handle , device )"		3042426	0		=			
ANR	3042462	Identifier	img		3042426	0					
ANR	3042463	CallExpression	"image_find ( handle , device )"		3042426	1					
ANR	3042464	Callee	image_find		3042426	0					
ANR	3042465	Identifier	image_find		3042426	0					
ANR	3042466	ArgumentList	handle		3042426	1					
ANR	3042467	Argument	handle		3042426	0					
ANR	3042468	Identifier	handle		3042426	0					
ANR	3042469	Argument	device		3042426	1					
ANR	3042470	Identifier	device		3042426	0					
ANR	3042471	IfStatement	if ( img != NULL )		3042426	5					
ANR	3042472	Condition	img != NULL	200:8:5052:5062	3042426	0	True				
ANR	3042473	EqualityExpression	img != NULL		3042426	0		!=			
ANR	3042474	Identifier	img		3042426	0					
ANR	3042475	Identifier	NULL		3042426	1					
ANR	3042476	ExpressionStatement	image_sync ( img )	201:8:5073:5088	3042426	1	True				
ANR	3042477	CallExpression	image_sync ( img )		3042426	0					
ANR	3042478	Callee	image_sync		3042426	0					
ANR	3042479	Identifier	image_sync		3042426	0					
ANR	3042480	ArgumentList	img		3042426	1					
ANR	3042481	Argument	img		3042426	0					
ANR	3042482	Identifier	img		3042426	0					
ANR	3042483	ReturnStatement	return 0 ;	202:4:5094:5102	3042426	6	True				
ANR	3042484	PrimaryExpression	0		3042426	0					
ANR	3042485	ReturnType	static int		3042426	1					
ANR	3042486	Identifier	display_sync		3042426	2					
ANR	3042487	ParameterList	"void * handle , void * device"		3042426	3					
ANR	3042488	Parameter	void * handle	191:24:4825:4836	3042426	0	True				
ANR	3042489	ParameterType	void *		3042426	0					
ANR	3042490	Identifier	handle		3042426	1					
ANR	3042491	Parameter	void * device	191:38:4839:4850	3042426	1	True				
ANR	3042492	ParameterType	void *		3042426	0					
ANR	3042493	Identifier	device		3042426	1					
ANR	3042494	CFGEntryNode	ENTRY		3042426		True				
ANR	3042495	CFGExitNode	EXIT		3042426		True				
ANR	3042496	Symbol	img		3042426						
ANR	3042497	Symbol	buf		3042426						
ANR	3042498	Symbol	tw		3042426						
ANR	3042499	Symbol	NULL		3042426						
ANR	3042500	Symbol	image_find		3042426						
ANR	3042501	Symbol	handle		3042426						
ANR	3042502	Symbol	device		3042426						
ANR	3042503	Function	display_page	207:0:5192:5561							
ANR	3042504	FunctionDef	"display_page (void * handle , void * device , int copies , int flush)"		3042503	0					
ANR	3042505	CompoundStatement		208:0:5267:5561	3042503	0					
ANR	3042506	IdentifierDeclStatement	IMAGE * img ;	209:4:5273:5283	3042503	0	True				
ANR	3042507	IdentifierDecl	* img		3042503	0					
ANR	3042508	IdentifierDeclType	IMAGE *		3042503	0					
ANR	3042509	Identifier	img		3042503	1					
ANR	3042510	IdentifierDeclStatement	char buf [ 256 ] ;	211:4:5310:5323	3042503	1	True				
ANR	3042511	IdentifierDecl	buf [ 256 ]		3042503	0					
ANR	3042512	IdentifierDeclType	char [ 256 ]		3042503	0					
ANR	3042513	Identifier	buf		3042503	1					
ANR	3042514	PrimaryExpression	256		3042503	2					
ANR	3042515	ExpressionStatement	"sprintf ( buf , ""display_page(0x%x, 0x%x, copies=%d flush=%d)\\n"" , handle , device , copies , flush )"	212:4:5329:5430	3042503	2	True				
ANR	3042516	CallExpression	"sprintf ( buf , ""display_page(0x%x, 0x%x, copies=%d flush=%d)\\n"" , handle , device , copies , flush )"		3042503	0					
ANR	3042517	Callee	sprintf		3042503	0					
ANR	3042518	Identifier	sprintf		3042503	0					
ANR	3042519	ArgumentList	buf		3042503	1					
ANR	3042520	Argument	buf		3042503	0					
ANR	3042521	Identifier	buf		3042503	0					
ANR	3042522	Argument	"""display_page(0x%x, 0x%x, copies=%d flush=%d)\\n"""		3042503	1					
ANR	3042523	PrimaryExpression	"""display_page(0x%x, 0x%x, copies=%d flush=%d)\\n"""		3042503	0					
ANR	3042524	Argument	handle		3042503	2					
ANR	3042525	Identifier	handle		3042503	0					
ANR	3042526	Argument	device		3042503	3					
ANR	3042527	Identifier	device		3042503	0					
ANR	3042528	Argument	copies		3042503	4					
ANR	3042529	Identifier	copies		3042503	0					
ANR	3042530	Argument	flush		3042503	5					
ANR	3042531	Identifier	flush		3042503	0					
ANR	3042532	ExpressionStatement	"text_puts ( tw , buf )"	214:4:5436:5454	3042503	3	True				
ANR	3042533	CallExpression	"text_puts ( tw , buf )"		3042503	0					
ANR	3042534	Callee	text_puts		3042503	0					
ANR	3042535	Identifier	text_puts		3042503	0					
ANR	3042536	ArgumentList	tw		3042503	1					
ANR	3042537	Argument	tw		3042503	0					
ANR	3042538	Identifier	tw		3042503	0					
ANR	3042539	Argument	buf		3042503	1					
ANR	3042540	Identifier	buf		3042503	0					
ANR	3042541	ExpressionStatement	"img = image_find ( handle , device )"	216:4:5467:5499	3042503	4	True				
ANR	3042542	AssignmentExpression	"img = image_find ( handle , device )"		3042503	0		=			
ANR	3042543	Identifier	img		3042503	0					
ANR	3042544	CallExpression	"image_find ( handle , device )"		3042503	1					
ANR	3042545	Callee	image_find		3042503	0					
ANR	3042546	Identifier	image_find		3042503	0					
ANR	3042547	ArgumentList	handle		3042503	1					
ANR	3042548	Argument	handle		3042503	0					
ANR	3042549	Identifier	handle		3042503	0					
ANR	3042550	Argument	device		3042503	1					
ANR	3042551	Identifier	device		3042503	0					
ANR	3042552	IfStatement	if ( img != NULL )		3042503	5					
ANR	3042553	Condition	img != NULL	217:8:5509:5519	3042503	0	True				
ANR	3042554	EqualityExpression	img != NULL		3042503	0		!=			
ANR	3042555	Identifier	img		3042503	0					
ANR	3042556	Identifier	NULL		3042503	1					
ANR	3042557	ExpressionStatement	image_page ( img )	218:8:5530:5545	3042503	1	True				
ANR	3042558	CallExpression	image_page ( img )		3042503	0					
ANR	3042559	Callee	image_page		3042503	0					
ANR	3042560	Identifier	image_page		3042503	0					
ANR	3042561	ArgumentList	img		3042503	1					
ANR	3042562	Argument	img		3042503	0					
ANR	3042563	Identifier	img		3042503	0					
ANR	3042564	ReturnStatement	return 0 ;	219:4:5551:5559	3042503	6	True				
ANR	3042565	PrimaryExpression	0		3042503	0					
ANR	3042566	ReturnType	static int		3042503	1					
ANR	3042567	Identifier	display_page		3042503	2					
ANR	3042568	ParameterList	"void * handle , void * device , int copies , int flush"		3042503	3					
ANR	3042569	Parameter	void * handle	207:24:5216:5227	3042503	0	True				
ANR	3042570	ParameterType	void *		3042503	0					
ANR	3042571	Identifier	handle		3042503	1					
ANR	3042572	Parameter	void * device	207:38:5230:5241	3042503	1	True				
ANR	3042573	ParameterType	void *		3042503	0					
ANR	3042574	Identifier	device		3042503	1					
ANR	3042575	Parameter	int copies	207:52:5244:5253	3042503	2	True				
ANR	3042576	ParameterType	int		3042503	0					
ANR	3042577	Identifier	copies		3042503	1					
ANR	3042578	Parameter	int flush	207:64:5256:5264	3042503	3	True				
ANR	3042579	ParameterType	int		3042503	0					
ANR	3042580	Identifier	flush		3042503	1					
ANR	3042581	CFGEntryNode	ENTRY		3042503		True				
ANR	3042582	CFGExitNode	EXIT		3042503		True				
ANR	3042583	Symbol	img		3042503						
ANR	3042584	Symbol	buf		3042503						
ANR	3042585	Symbol	copies		3042503						
ANR	3042586	Symbol	tw		3042503						
ANR	3042587	Symbol	NULL		3042503						
ANR	3042588	Symbol	flush		3042503						
ANR	3042589	Symbol	image_find		3042503						
ANR	3042590	Symbol	handle		3042503						
ANR	3042591	Symbol	device		3042503						
ANR	3042592	Function	display_update	224:0:5670:5914							
ANR	3042593	FunctionDef	"display_update (void * handle , void * device , int x , int y , int w , int h)"		3042592	0					
ANR	3042594	CompoundStatement		226:0:5756:5914	3042592	0					
ANR	3042595	IdentifierDeclStatement	IMAGE * img ;	227:4:5762:5772	3042592	0	True				
ANR	3042596	IdentifierDecl	* img		3042592	0					
ANR	3042597	IdentifierDeclType	IMAGE *		3042592	0					
ANR	3042598	Identifier	img		3042592	1					
ANR	3042599	ExpressionStatement	"img = image_find ( handle , device )"	228:4:5778:5810	3042592	1	True				
ANR	3042600	AssignmentExpression	"img = image_find ( handle , device )"		3042592	0		=			
ANR	3042601	Identifier	img		3042592	0					
ANR	3042602	CallExpression	"image_find ( handle , device )"		3042592	1					
ANR	3042603	Callee	image_find		3042592	0					
ANR	3042604	Identifier	image_find		3042592	0					
ANR	3042605	ArgumentList	handle		3042592	1					
ANR	3042606	Argument	handle		3042592	0					
ANR	3042607	Identifier	handle		3042592	0					
ANR	3042608	Argument	device		3042592	1					
ANR	3042609	Identifier	device		3042592	0					
ANR	3042610	IfStatement	if ( img != NULL )		3042592	2					
ANR	3042611	Condition	img != NULL	229:8:5820:5830	3042592	0	True				
ANR	3042612	EqualityExpression	img != NULL		3042592	0		!=			
ANR	3042613	Identifier	img		3042592	0					
ANR	3042614	Identifier	NULL		3042592	1					
ANR	3042615	ExpressionStatement	image_poll ( img )	230:8:5841:5856	3042592	1	True				
ANR	3042616	CallExpression	image_poll ( img )		3042592	0					
ANR	3042617	Callee	image_poll		3042592	0					
ANR	3042618	Identifier	image_poll		3042592	0					
ANR	3042619	ArgumentList	img		3042592	1					
ANR	3042620	Argument	img		3042592	0					
ANR	3042621	Identifier	img		3042592	0					
ANR	3042622	ReturnStatement	return poll ( ) ;	231:4:5899:5912	3042592	3	True				
ANR	3042623	CallExpression	poll ( )		3042592	0					
ANR	3042624	Callee	poll		3042592	0					
ANR	3042625	Identifier	poll		3042592	0					
ANR	3042626	ArgumentList			3042592	1					
ANR	3042627	ReturnType	static int		3042592	1					
ANR	3042628	Identifier	display_update		3042592	2					
ANR	3042629	ParameterList	"void * handle , void * device , int x , int y , int w , int h"		3042592	3					
ANR	3042630	Parameter	void * handle	224:26:5696:5707	3042592	0	True				
ANR	3042631	ParameterType	void *		3042592	0					
ANR	3042632	Identifier	handle		3042592	1					
ANR	3042633	Parameter	void * device	224:40:5710:5721	3042592	1	True				
ANR	3042634	ParameterType	void *		3042592	0					
ANR	3042635	Identifier	device		3042592	1					
ANR	3042636	Parameter	int x	225:4:5728:5732	3042592	2	True				
ANR	3042637	ParameterType	int		3042592	0					
ANR	3042638	Identifier	x		3042592	1					
ANR	3042639	Parameter	int y	225:11:5735:5739	3042592	3	True				
ANR	3042640	ParameterType	int		3042592	0					
ANR	3042641	Identifier	y		3042592	1					
ANR	3042642	Parameter	int w	225:18:5742:5746	3042592	4	True				
ANR	3042643	ParameterType	int		3042592	0					
ANR	3042644	Identifier	w		3042592	1					
ANR	3042645	Parameter	int h	225:25:5749:5753	3042592	5	True				
ANR	3042646	ParameterType	int		3042592	0					
ANR	3042647	Identifier	h		3042592	1					
ANR	3042648	CFGEntryNode	ENTRY		3042592		True				
ANR	3042649	CFGExitNode	EXIT		3042592		True				
ANR	3042650	Symbol	img		3042592						
ANR	3042651	Symbol	NULL		3042592						
ANR	3042652	Symbol	w		3042592						
ANR	3042653	Symbol	image_find		3042592						
ANR	3042654	Symbol	x		3042592						
ANR	3042655	Symbol	h		3042592						
ANR	3042656	Symbol	y		3042592						
ANR	3042657	Symbol	handle		3042592						
ANR	3042658	Symbol	poll		3042592						
ANR	3042659	Symbol	device		3042592						
ANR	3042660	Function	display_separation	234:0:5917:6401							
ANR	3042661	FunctionDef	"display_separation (void * handle , void * device , int comp_num , const char * name , unsigned short c , unsigned short m , unsigned short y , unsigned short k)"		3042660	0					
ANR	3042662	CompoundStatement		238:0:6081:6401	3042660	0					
ANR	3042663	IdentifierDeclStatement	IMAGE * img ;	239:4:6087:6097	3042660	0	True				
ANR	3042664	IdentifierDecl	* img		3042660	0					
ANR	3042665	IdentifierDeclType	IMAGE *		3042660	0					
ANR	3042666	Identifier	img		3042660	1					
ANR	3042667	ExpressionStatement	"fprintf ( stdout , ""display_separation(0x%x, 0x%x, %d '%s' %d,%d,%d,%d)\\n"" , handle , device , comp_num , name , ( int ) c , ( int ) m , ( int ) y , ( int ) k )"	241:4:6124:6268	3042660	1	True				
ANR	3042668	CallExpression	"fprintf ( stdout , ""display_separation(0x%x, 0x%x, %d '%s' %d,%d,%d,%d)\\n"" , handle , device , comp_num , name , ( int ) c , ( int ) m , ( int ) y , ( int ) k )"		3042660	0					
ANR	3042669	Callee	fprintf		3042660	0					
ANR	3042670	Identifier	fprintf		3042660	0					
ANR	3042671	ArgumentList	stdout		3042660	1					
ANR	3042672	Argument	stdout		3042660	0					
ANR	3042673	Identifier	stdout		3042660	0					
ANR	3042674	Argument	"""display_separation(0x%x, 0x%x, %d '%s' %d,%d,%d,%d)\\n"""		3042660	1					
ANR	3042675	PrimaryExpression	"""display_separation(0x%x, 0x%x, %d '%s' %d,%d,%d,%d)\\n"""		3042660	0					
ANR	3042676	Argument	handle		3042660	2					
ANR	3042677	Identifier	handle		3042660	0					
ANR	3042678	Argument	device		3042660	3					
ANR	3042679	Identifier	device		3042660	0					
ANR	3042680	Argument	comp_num		3042660	4					
ANR	3042681	Identifier	comp_num		3042660	0					
ANR	3042682	Argument	name		3042660	5					
ANR	3042683	Identifier	name		3042660	0					
ANR	3042684	Argument	( int ) c		3042660	6					
ANR	3042685	CastExpression	( int ) c		3042660	0					
ANR	3042686	CastTarget	int		3042660	0					
ANR	3042687	Identifier	c		3042660	1					
ANR	3042688	Argument	( int ) m		3042660	7					
ANR	3042689	CastExpression	( int ) m		3042660	0					
ANR	3042690	CastTarget	int		3042660	0					
ANR	3042691	Identifier	m		3042660	1					
ANR	3042692	Argument	( int ) y		3042660	8					
ANR	3042693	CastExpression	( int ) y		3042660	0					
ANR	3042694	CastTarget	int		3042660	0					
ANR	3042695	Identifier	y		3042660	1					
ANR	3042696	Argument	( int ) k		3042660	9					
ANR	3042697	CastExpression	( int ) k		3042660	0					
ANR	3042698	CastTarget	int		3042660	0					
ANR	3042699	Identifier	k		3042660	1					
ANR	3042700	ExpressionStatement	"img = image_find ( handle , device )"	244:4:6281:6313	3042660	2	True				
ANR	3042701	AssignmentExpression	"img = image_find ( handle , device )"		3042660	0		=			
ANR	3042702	Identifier	img		3042660	0					
ANR	3042703	CallExpression	"image_find ( handle , device )"		3042660	1					
ANR	3042704	Callee	image_find		3042660	0					
ANR	3042705	Identifier	image_find		3042660	0					
ANR	3042706	ArgumentList	handle		3042660	1					
ANR	3042707	Argument	handle		3042660	0					
ANR	3042708	Identifier	handle		3042660	0					
ANR	3042709	Argument	device		3042660	1					
ANR	3042710	Identifier	device		3042660	0					
ANR	3042711	IfStatement	if ( img )		3042660	3					
ANR	3042712	Condition	img	245:8:6323:6325	3042660	0	True				
ANR	3042713	Identifier	img		3042660	0					
ANR	3042714	ExpressionStatement	"image_separation ( img , comp_num , name , c , m , y , k )"	246:8:6336:6385	3042660	1	True				
ANR	3042715	CallExpression	"image_separation ( img , comp_num , name , c , m , y , k )"		3042660	0					
ANR	3042716	Callee	image_separation		3042660	0					
ANR	3042717	Identifier	image_separation		3042660	0					
ANR	3042718	ArgumentList	img		3042660	1					
ANR	3042719	Argument	img		3042660	0					
ANR	3042720	Identifier	img		3042660	0					
ANR	3042721	Argument	comp_num		3042660	1					
ANR	3042722	Identifier	comp_num		3042660	0					
ANR	3042723	Argument	name		3042660	2					
ANR	3042724	Identifier	name		3042660	0					
ANR	3042725	Argument	c		3042660	3					
ANR	3042726	Identifier	c		3042660	0					
ANR	3042727	Argument	m		3042660	4					
ANR	3042728	Identifier	m		3042660	0					
ANR	3042729	Argument	y		3042660	5					
ANR	3042730	Identifier	y		3042660	0					
ANR	3042731	Argument	k		3042660	6					
ANR	3042732	Identifier	k		3042660	0					
ANR	3042733	ReturnStatement	return 0 ;	247:4:6391:6399	3042660	4	True				
ANR	3042734	PrimaryExpression	0		3042660	0					
ANR	3042735	ReturnType	int		3042660	1					
ANR	3042736	Identifier	display_separation		3042660	2					
ANR	3042737	ParameterList	"void * handle , void * device , int comp_num , const char * name , unsigned short c , unsigned short m , unsigned short y , unsigned short k"		3042660	3					
ANR	3042738	Parameter	void * handle	234:23:5940:5951	3042660	0	True				
ANR	3042739	ParameterType	void *		3042660	0					
ANR	3042740	Identifier	handle		3042660	1					
ANR	3042741	Parameter	void * device	234:37:5954:5965	3042660	1	True				
ANR	3042742	ParameterType	void *		3042660	0					
ANR	3042743	Identifier	device		3042660	1					
ANR	3042744	Parameter	int comp_num	235:3:5971:5982	3042660	2	True				
ANR	3042745	ParameterType	int		3042660	0					
ANR	3042746	Identifier	comp_num		3042660	1					
ANR	3042747	Parameter	const char * name	235:17:5985:6000	3042660	3	True				
ANR	3042748	ParameterType	const char *		3042660	0					
ANR	3042749	Identifier	name		3042660	1					
ANR	3042750	Parameter	unsigned short c	236:3:6006:6021	3042660	4	True				
ANR	3042751	ParameterType	unsigned short		3042660	0					
ANR	3042752	Identifier	c		3042660	1					
ANR	3042753	Parameter	unsigned short m	236:21:6024:6039	3042660	5	True				
ANR	3042754	ParameterType	unsigned short		3042660	0					
ANR	3042755	Identifier	m		3042660	1					
ANR	3042756	Parameter	unsigned short y	237:3:6045:6060	3042660	6	True				
ANR	3042757	ParameterType	unsigned short		3042660	0					
ANR	3042758	Identifier	y		3042660	1					
ANR	3042759	Parameter	unsigned short k	237:21:6063:6078	3042660	7	True				
ANR	3042760	ParameterType	unsigned short		3042660	0					
ANR	3042761	Identifier	k		3042660	1					
ANR	3042762	CFGEntryNode	ENTRY		3042660		True				
ANR	3042763	CFGExitNode	EXIT		3042660		True				
ANR	3042764	Symbol	img		3042660						
ANR	3042765	Symbol	c		3042660						
ANR	3042766	Symbol	stdout		3042660						
ANR	3042767	Symbol	image_find		3042660						
ANR	3042768	Symbol	name		3042660						
ANR	3042769	Symbol	comp_num		3042660						
ANR	3042770	Symbol	y		3042660						
ANR	3042771	Symbol	handle		3042660						
ANR	3042772	Symbol	k		3042660						
ANR	3042773	Symbol	device		3042660						
ANR	3042774	Symbol	m		3042660						
ANR	3042775	DeclStmt									
ANR	3042776	Decl							display_callback	display_callback	display
ANR	3042777	Function	new_main	270:0:6859:10214							
ANR	3042778	FunctionDef	"new_main (int argc , char * argv [ ])"		3042777	0					
ANR	3042779	CompoundStatement		271:0:6896:10214	3042777	0					
ANR	3042780	IdentifierDeclStatement	"int code , code1 ;"	272:4:6902:6917	3042777	0	True				
ANR	3042781	IdentifierDecl	code		3042777	0					
ANR	3042782	IdentifierDeclType	int		3042777	0					
ANR	3042783	Identifier	code		3042777	1					
ANR	3042784	IdentifierDecl	code1		3042777	1					
ANR	3042785	IdentifierDeclType	int		3042777	0					
ANR	3042786	Identifier	code1		3042777	1					
ANR	3042787	IdentifierDeclStatement	int exit_status ;	273:4:6923:6938	3042777	1	True				
ANR	3042788	IdentifierDecl	exit_status		3042777	0					
ANR	3042789	IdentifierDeclType	int		3042777	0					
ANR	3042790	Identifier	exit_status		3042777	1					
ANR	3042791	IdentifierDeclStatement	int exit_code ;	274:4:6944:6957	3042777	2	True				
ANR	3042792	IdentifierDecl	exit_code		3042777	0					
ANR	3042793	IdentifierDeclType	int		3042777	0					
ANR	3042794	Identifier	exit_code		3042777	1					
ANR	3042795	IdentifierDeclStatement	int nargc ;	275:4:6963:6972	3042777	3	True				
ANR	3042796	IdentifierDecl	nargc		3042777	0					
ANR	3042797	IdentifierDeclType	int		3042777	0					
ANR	3042798	Identifier	nargc		3042777	1					
ANR	3042799	IdentifierDeclStatement	char * * nargv ;	276:4:6978:6990	3042777	4	True				
ANR	3042800	IdentifierDecl	* * nargv		3042777	0					
ANR	3042801	IdentifierDeclType	char * *		3042777	0					
ANR	3042802	Identifier	nargv		3042777	1					
ANR	3042803	IdentifierDeclStatement	char dformat [ 64 ] ;	277:4:6996:7012	3042777	5	True				
ANR	3042804	IdentifierDecl	dformat [ 64 ]		3042777	0					
ANR	3042805	IdentifierDeclType	char [ 64 ]		3042777	0					
ANR	3042806	Identifier	dformat		3042777	1					
ANR	3042807	PrimaryExpression	64		3042777	2					
ANR	3042808	IdentifierDeclStatement	char ddpi [ 64 ] ;	278:4:7018:7031	3042777	6	True				
ANR	3042809	IdentifierDecl	ddpi [ 64 ]		3042777	0					
ANR	3042810	IdentifierDeclType	char [ 64 ]		3042777	0					
ANR	3042811	Identifier	ddpi		3042777	1					
ANR	3042812	PrimaryExpression	64		3042777	2					
ANR	3042813	IdentifierDeclStatement	char buf [ 256 ] ;	279:4:7037:7050	3042777	7	True				
ANR	3042814	IdentifierDecl	buf [ 256 ]		3042777	0					
ANR	3042815	IdentifierDeclType	char [ 256 ]		3042777	0					
ANR	3042816	Identifier	buf		3042777	1					
ANR	3042817	PrimaryExpression	256		3042777	2					
ANR	3042818	ExpressionStatement	"memset ( buf , 0 , sizeof ( buf ) )"	281:4:7057:7084	3042777	8	True				
ANR	3042819	CallExpression	"memset ( buf , 0 , sizeof ( buf ) )"		3042777	0					
ANR	3042820	Callee	memset		3042777	0					
ANR	3042821	Identifier	memset		3042777	0					
ANR	3042822	ArgumentList	buf		3042777	1					
ANR	3042823	Argument	buf		3042777	0					
ANR	3042824	Identifier	buf		3042777	0					
ANR	3042825	Argument	0		3042777	1					
ANR	3042826	PrimaryExpression	0		3042777	0					
ANR	3042827	Argument	sizeof ( buf )		3042777	2					
ANR	3042828	SizeofExpression	sizeof ( buf )		3042777	0					
ANR	3042829	Sizeof	sizeof		3042777	0					
ANR	3042830	SizeofOperand	buf		3042777	1					
ANR	3042831	IfStatement	"if ( load_dll ( & gsdll , buf , sizeof ( buf ) ) )"		3042777	9					
ANR	3042832	Condition	"load_dll ( & gsdll , buf , sizeof ( buf ) )"	282:8:7094:7127	3042777	0	True				
ANR	3042833	CallExpression	"load_dll ( & gsdll , buf , sizeof ( buf ) )"		3042777	0					
ANR	3042834	Callee	load_dll		3042777	0					
ANR	3042835	Identifier	load_dll		3042777	0					
ANR	3042836	ArgumentList	& gsdll		3042777	1					
ANR	3042837	Argument	& gsdll		3042777	0					
ANR	3042838	UnaryOperationExpression	& gsdll		3042777	0					
ANR	3042839	UnaryOperator	&		3042777	0					
ANR	3042840	Identifier	gsdll		3042777	1					
ANR	3042841	Argument	buf		3042777	1					
ANR	3042842	Identifier	buf		3042777	0					
ANR	3042843	Argument	sizeof ( buf )		3042777	2					
ANR	3042844	SizeofExpression	sizeof ( buf )		3042777	0					
ANR	3042845	Sizeof	sizeof		3042777	0					
ANR	3042846	SizeofOperand	buf		3042777	1					
ANR	3042847	CompoundStatement		12:44:233:233	3042777	1					
ANR	3042848	ExpressionStatement	"text_puts ( tw , ""Can't load Ghostscript DLL\\n"" )"	283:8:7140:7185	3042777	0	True				
ANR	3042849	CallExpression	"text_puts ( tw , ""Can't load Ghostscript DLL\\n"" )"		3042777	0					
ANR	3042850	Callee	text_puts		3042777	0					
ANR	3042851	Identifier	text_puts		3042777	0					
ANR	3042852	ArgumentList	tw		3042777	1					
ANR	3042853	Argument	tw		3042777	0					
ANR	3042854	Identifier	tw		3042777	0					
ANR	3042855	Argument	"""Can't load Ghostscript DLL\\n"""		3042777	1					
ANR	3042856	PrimaryExpression	"""Can't load Ghostscript DLL\\n"""		3042777	0					
ANR	3042857	ExpressionStatement	"text_puts ( tw , buf )"	284:8:7195:7213	3042777	1	True				
ANR	3042858	CallExpression	"text_puts ( tw , buf )"		3042777	0					
ANR	3042859	Callee	text_puts		3042777	0					
ANR	3042860	Identifier	text_puts		3042777	0					
ANR	3042861	ArgumentList	tw		3042777	1					
ANR	3042862	Argument	tw		3042777	0					
ANR	3042863	Identifier	tw		3042777	0					
ANR	3042864	Argument	buf		3042777	1					
ANR	3042865	Identifier	buf		3042777	0					
ANR	3042866	ExpressionStatement	"text_puts ( tw , ""\\n"" )"	285:8:7223:7242	3042777	2	True				
ANR	3042867	CallExpression	"text_puts ( tw , ""\\n"" )"		3042777	0					
ANR	3042868	Callee	text_puts		3042777	0					
ANR	3042869	Identifier	text_puts		3042777	0					
ANR	3042870	ArgumentList	tw		3042777	1					
ANR	3042871	Argument	tw		3042777	0					
ANR	3042872	Identifier	tw		3042777	0					
ANR	3042873	Argument	"""\\n"""		3042777	1					
ANR	3042874	PrimaryExpression	"""\\n"""		3042777	0					
ANR	3042875	ReturnStatement	return 1 ;	286:8:7252:7260	3042777	3	True				
ANR	3042876	PrimaryExpression	1		3042777	0					
ANR	3042877	IfStatement	"if ( gsdll . new_instance ( & instance , NULL ) < 0 )"		3042777	10					
ANR	3042878	Condition	"gsdll . new_instance ( & instance , NULL ) < 0"	289:8:7277:7315	3042777	0	True				
ANR	3042879	RelationalExpression	"gsdll . new_instance ( & instance , NULL ) < 0"		3042777	0		<			
ANR	3042880	CallExpression	"gsdll . new_instance ( & instance , NULL )"		3042777	0					
ANR	3042881	Callee	gsdll . new_instance		3042777	0					
ANR	3042882	MemberAccess	gsdll . new_instance		3042777	0					
ANR	3042883	Identifier	gsdll		3042777	0					
ANR	3042884	Identifier	new_instance		3042777	1					
ANR	3042885	ArgumentList	& instance		3042777	1					
ANR	3042886	Argument	& instance		3042777	0					
ANR	3042887	UnaryOperationExpression	& instance		3042777	0					
ANR	3042888	UnaryOperator	&		3042777	0					
ANR	3042889	Identifier	instance		3042777	1					
ANR	3042890	Argument	NULL		3042777	1					
ANR	3042891	Identifier	NULL		3042777	0					
ANR	3042892	PrimaryExpression	0		3042777	1					
ANR	3042893	CompoundStatement		19:49:421:421	3042777	1					
ANR	3042894	ExpressionStatement	"text_puts ( tw , ""Can't create Ghostscript instance\\n"" )"	290:8:7328:7380	3042777	0	True				
ANR	3042895	CallExpression	"text_puts ( tw , ""Can't create Ghostscript instance\\n"" )"		3042777	0					
ANR	3042896	Callee	text_puts		3042777	0					
ANR	3042897	Identifier	text_puts		3042777	0					
ANR	3042898	ArgumentList	tw		3042777	1					
ANR	3042899	Argument	tw		3042777	0					
ANR	3042900	Identifier	tw		3042777	0					
ANR	3042901	Argument	"""Can't create Ghostscript instance\\n"""		3042777	1					
ANR	3042902	PrimaryExpression	"""Can't create Ghostscript instance\\n"""		3042777	0					
ANR	3042903	ReturnStatement	return 1 ;	291:8:7390:7398	3042777	1	True				
ANR	3042904	PrimaryExpression	1		3042777	0					
ANR	3042905	ExpressionStatement	"gsdll . set_stdio ( instance , gsdll_stdin , gsdll_stdout , gsdll_stderr )"	294:4:7411:7477	3042777	11	True				
ANR	3042906	CallExpression	"gsdll . set_stdio ( instance , gsdll_stdin , gsdll_stdout , gsdll_stderr )"		3042777	0					
ANR	3042907	Callee	gsdll . set_stdio		3042777	0					
ANR	3042908	MemberAccess	gsdll . set_stdio		3042777	0					
ANR	3042909	Identifier	gsdll		3042777	0					
ANR	3042910	Identifier	set_stdio		3042777	1					
ANR	3042911	ArgumentList	instance		3042777	1					
ANR	3042912	Argument	instance		3042777	0					
ANR	3042913	Identifier	instance		3042777	0					
ANR	3042914	Argument	gsdll_stdin		3042777	1					
ANR	3042915	Identifier	gsdll_stdin		3042777	0					
ANR	3042916	Argument	gsdll_stdout		3042777	2					
ANR	3042917	Identifier	gsdll_stdout		3042777	0					
ANR	3042918	Argument	gsdll_stderr		3042777	3					
ANR	3042919	Identifier	gsdll_stderr		3042777	0					
ANR	3042920	ExpressionStatement	"gsdll . set_poll ( instance , gsdll_poll )"	295:4:7483:7519	3042777	12	True				
ANR	3042921	CallExpression	"gsdll . set_poll ( instance , gsdll_poll )"		3042777	0					
ANR	3042922	Callee	gsdll . set_poll		3042777	0					
ANR	3042923	MemberAccess	gsdll . set_poll		3042777	0					
ANR	3042924	Identifier	gsdll		3042777	0					
ANR	3042925	Identifier	set_poll		3042777	1					
ANR	3042926	ArgumentList	instance		3042777	1					
ANR	3042927	Argument	instance		3042777	0					
ANR	3042928	Identifier	instance		3042777	0					
ANR	3042929	Argument	gsdll_poll		3042777	1					
ANR	3042930	Identifier	gsdll_poll		3042777	0					
ANR	3042931	ExpressionStatement	"gsdll . set_display_callback ( instance , & display )"	296:4:7525:7571	3042777	13	True				
ANR	3042932	CallExpression	"gsdll . set_display_callback ( instance , & display )"		3042777	0					
ANR	3042933	Callee	gsdll . set_display_callback		3042777	0					
ANR	3042934	MemberAccess	gsdll . set_display_callback		3042777	0					
ANR	3042935	Identifier	gsdll		3042777	0					
ANR	3042936	Identifier	set_display_callback		3042777	1					
ANR	3042937	ArgumentList	instance		3042777	1					
ANR	3042938	Argument	instance		3042777	0					
ANR	3042939	Identifier	instance		3042777	0					
ANR	3042940	Argument	& display		3042777	1					
ANR	3042941	UnaryOperationExpression	& display		3042777	0					
ANR	3042942	UnaryOperator	&		3042777	0					
ANR	3042943	Identifier	display		3042777	1					
ANR	3042944	CompoundStatement		32:8:946:1016	3042777	14					
ANR	3042945	IdentifierDeclStatement	int format = DISPLAY_COLORS_NATIVE | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_1 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST ;	299:8:7642:7776	3042777	0	True				
ANR	3042946	IdentifierDecl	format = DISPLAY_COLORS_NATIVE | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_1 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	0					
ANR	3042947	IdentifierDeclType	int		3042777	0					
ANR	3042948	Identifier	format		3042777	1					
ANR	3042949	AssignmentExpression	format = DISPLAY_COLORS_NATIVE | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_1 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	2		=			
ANR	3042950	Identifier	format		3042777	0					
ANR	3042951	InclusiveOrExpression	DISPLAY_COLORS_NATIVE | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_1 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3042952	Identifier	DISPLAY_COLORS_NATIVE		3042777	0					
ANR	3042953	InclusiveOrExpression	DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_1 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3042954	Identifier	DISPLAY_ALPHA_NONE		3042777	0					
ANR	3042955	InclusiveOrExpression	DISPLAY_DEPTH_1 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3042956	Identifier	DISPLAY_DEPTH_1		3042777	0					
ANR	3042957	InclusiveOrExpression	DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3042958	Identifier	DISPLAY_LITTLEENDIAN		3042777	0					
ANR	3042959	Identifier	DISPLAY_BOTTOMFIRST		3042777	1					
ANR	3042960	IdentifierDeclStatement	HDC hdc = GetDC ( NULL ) ;	301:8:7786:7807	3042777	1	True				
ANR	3042961	IdentifierDecl	hdc = GetDC ( NULL )		3042777	0					
ANR	3042962	IdentifierDeclType	HDC		3042777	0					
ANR	3042963	Identifier	hdc		3042777	1					
ANR	3042964	AssignmentExpression	hdc = GetDC ( NULL )		3042777	2		=			
ANR	3042965	Identifier	hdc		3042777	0					
ANR	3042966	CallExpression	GetDC ( NULL )		3042777	1					
ANR	3042967	Callee	GetDC		3042777	0					
ANR	3042968	Identifier	GetDC		3042777	0					
ANR	3042969	ArgumentList	NULL		3042777	1					
ANR	3042970	Argument	NULL		3042777	0					
ANR	3042971	Identifier	NULL		3042777	0					
ANR	3042972	IdentifierDeclStatement	"int depth = GetDeviceCaps ( hdc , PLANES ) * GetDeviceCaps ( hdc , BITSPIXEL ) ;"	302:8:7843:7913	3042777	2	True				
ANR	3042973	IdentifierDecl	"depth = GetDeviceCaps ( hdc , PLANES ) * GetDeviceCaps ( hdc , BITSPIXEL )"		3042777	0					
ANR	3042974	IdentifierDeclType	int		3042777	0					
ANR	3042975	Identifier	depth		3042777	1					
ANR	3042976	AssignmentExpression	"depth = GetDeviceCaps ( hdc , PLANES ) * GetDeviceCaps ( hdc , BITSPIXEL )"		3042777	2		=			
ANR	3042977	Identifier	depth		3042777	0					
ANR	3042978	MultiplicativeExpression	"GetDeviceCaps ( hdc , PLANES ) * GetDeviceCaps ( hdc , BITSPIXEL )"		3042777	1		*			
ANR	3042979	CallExpression	"GetDeviceCaps ( hdc , PLANES )"		3042777	0					
ANR	3042980	Callee	GetDeviceCaps		3042777	0					
ANR	3042981	Identifier	GetDeviceCaps		3042777	0					
ANR	3042982	ArgumentList	hdc		3042777	1					
ANR	3042983	Argument	hdc		3042777	0					
ANR	3042984	Identifier	hdc		3042777	0					
ANR	3042985	Argument	PLANES		3042777	1					
ANR	3042986	Identifier	PLANES		3042777	0					
ANR	3042987	CallExpression	"GetDeviceCaps ( hdc , BITSPIXEL )"		3042777	1					
ANR	3042988	Callee	GetDeviceCaps		3042777	0					
ANR	3042989	Identifier	GetDeviceCaps		3042777	0					
ANR	3042990	ArgumentList	hdc		3042777	1					
ANR	3042991	Argument	hdc		3042777	0					
ANR	3042992	Identifier	hdc		3042777	0					
ANR	3042993	Argument	BITSPIXEL		3042777	1					
ANR	3042994	Identifier	BITSPIXEL		3042777	0					
ANR	3042995	ExpressionStatement	"sprintf ( ddpi , ""-dDisplayResolution=%d"" , GetDeviceCaps ( hdc , LOGPIXELSY ) )"	303:8:7923:7994	3042777	3	True				
ANR	3042996	CallExpression	"sprintf ( ddpi , ""-dDisplayResolution=%d"" , GetDeviceCaps ( hdc , LOGPIXELSY ) )"		3042777	0					
ANR	3042997	Callee	sprintf		3042777	0					
ANR	3042998	Identifier	sprintf		3042777	0					
ANR	3042999	ArgumentList	ddpi		3042777	1					
ANR	3043000	Argument	ddpi		3042777	0					
ANR	3043001	Identifier	ddpi		3042777	0					
ANR	3043002	Argument	"""-dDisplayResolution=%d"""		3042777	1					
ANR	3043003	PrimaryExpression	"""-dDisplayResolution=%d"""		3042777	0					
ANR	3043004	Argument	"GetDeviceCaps ( hdc , LOGPIXELSY )"		3042777	2					
ANR	3043005	CallExpression	"GetDeviceCaps ( hdc , LOGPIXELSY )"		3042777	0					
ANR	3043006	Callee	GetDeviceCaps		3042777	0					
ANR	3043007	Identifier	GetDeviceCaps		3042777	0					
ANR	3043008	ArgumentList	hdc		3042777	1					
ANR	3043009	Argument	hdc		3042777	0					
ANR	3043010	Identifier	hdc		3042777	0					
ANR	3043011	Argument	LOGPIXELSY		3042777	1					
ANR	3043012	Identifier	LOGPIXELSY		3042777	0					
ANR	3043013	ExpressionStatement	"ReleaseDC ( NULL , hdc )"	304:8:8004:8024	3042777	4	True				
ANR	3043014	CallExpression	"ReleaseDC ( NULL , hdc )"		3042777	0					
ANR	3043015	Callee	ReleaseDC		3042777	0					
ANR	3043016	Identifier	ReleaseDC		3042777	0					
ANR	3043017	ArgumentList	NULL		3042777	1					
ANR	3043018	Argument	NULL		3042777	0					
ANR	3043019	Identifier	NULL		3042777	0					
ANR	3043020	Argument	hdc		3042777	1					
ANR	3043021	Identifier	hdc		3042777	0					
ANR	3043022	IfStatement	if ( depth == 32 )		3042777	5					
ANR	3043023	Condition	depth == 32	305:12:8038:8048	3042777	0	True				
ANR	3043024	EqualityExpression	depth == 32		3042777	0		==			
ANR	3043025	Identifier	depth		3042777	0					
ANR	3043026	PrimaryExpression	32		3042777	1					
ANR	3043027	ExpressionStatement	format = DISPLAY_COLORS_RGB | DISPLAY_UNUSED_LAST | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST	306:12:8063:8191	3042777	1	True				
ANR	3043028	AssignmentExpression	format = DISPLAY_COLORS_RGB | DISPLAY_UNUSED_LAST | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	0		=			
ANR	3043029	Identifier	format		3042777	0					
ANR	3043030	InclusiveOrExpression	DISPLAY_COLORS_RGB | DISPLAY_UNUSED_LAST | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043031	Identifier	DISPLAY_COLORS_RGB		3042777	0					
ANR	3043032	InclusiveOrExpression	DISPLAY_UNUSED_LAST | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043033	Identifier	DISPLAY_UNUSED_LAST		3042777	0					
ANR	3043034	InclusiveOrExpression	DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043035	Identifier	DISPLAY_DEPTH_8		3042777	0					
ANR	3043036	InclusiveOrExpression	DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043037	Identifier	DISPLAY_LITTLEENDIAN		3042777	0					
ANR	3043038	Identifier	DISPLAY_BOTTOMFIRST		3042777	1					
ANR	3043039	ElseStatement	else		3042777	0					
ANR	3043040	IfStatement	if ( depth == 16 )		3042777	0					
ANR	3043041	Condition	depth == 16	308:17:8210:8220	3042777	0	True				
ANR	3043042	EqualityExpression	depth == 16		3042777	0		==			
ANR	3043043	Identifier	depth		3042777	0					
ANR	3043044	PrimaryExpression	16		3042777	1					
ANR	3043045	ExpressionStatement	format = DISPLAY_COLORS_NATIVE | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_16 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST | DISPLAY_NATIVE_555	309:12:8235:8403	3042777	1	True				
ANR	3043046	AssignmentExpression	format = DISPLAY_COLORS_NATIVE | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_16 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST | DISPLAY_NATIVE_555		3042777	0		=			
ANR	3043047	Identifier	format		3042777	0					
ANR	3043048	InclusiveOrExpression	DISPLAY_COLORS_NATIVE | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_16 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST | DISPLAY_NATIVE_555		3042777	1		|			
ANR	3043049	Identifier	DISPLAY_COLORS_NATIVE		3042777	0					
ANR	3043050	InclusiveOrExpression	DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_16 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST | DISPLAY_NATIVE_555		3042777	1		|			
ANR	3043051	Identifier	DISPLAY_ALPHA_NONE		3042777	0					
ANR	3043052	InclusiveOrExpression	DISPLAY_DEPTH_16 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST | DISPLAY_NATIVE_555		3042777	1		|			
ANR	3043053	Identifier	DISPLAY_DEPTH_16		3042777	0					
ANR	3043054	InclusiveOrExpression	DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST | DISPLAY_NATIVE_555		3042777	1		|			
ANR	3043055	Identifier	DISPLAY_LITTLEENDIAN		3042777	0					
ANR	3043056	InclusiveOrExpression	DISPLAY_BOTTOMFIRST | DISPLAY_NATIVE_555		3042777	1		|			
ANR	3043057	Identifier	DISPLAY_BOTTOMFIRST		3042777	0					
ANR	3043058	Identifier	DISPLAY_NATIVE_555		3042777	1					
ANR	3043059	ElseStatement	else		3042777	0					
ANR	3043060	IfStatement	if ( depth > 8 )		3042777	0					
ANR	3043061	Condition	depth > 8	312:17:8422:8430	3042777	0	True				
ANR	3043062	RelationalExpression	depth > 8		3042777	0		>			
ANR	3043063	Identifier	depth		3042777	0					
ANR	3043064	PrimaryExpression	8		3042777	1					
ANR	3043065	ExpressionStatement	format = DISPLAY_COLORS_RGB | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST	313:12:8445:8572	3042777	1	True				
ANR	3043066	AssignmentExpression	format = DISPLAY_COLORS_RGB | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	0		=			
ANR	3043067	Identifier	format		3042777	0					
ANR	3043068	InclusiveOrExpression	DISPLAY_COLORS_RGB | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043069	Identifier	DISPLAY_COLORS_RGB		3042777	0					
ANR	3043070	InclusiveOrExpression	DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043071	Identifier	DISPLAY_ALPHA_NONE		3042777	0					
ANR	3043072	InclusiveOrExpression	DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043073	Identifier	DISPLAY_DEPTH_8		3042777	0					
ANR	3043074	InclusiveOrExpression	DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043075	Identifier	DISPLAY_LITTLEENDIAN		3042777	0					
ANR	3043076	Identifier	DISPLAY_BOTTOMFIRST		3042777	1					
ANR	3043077	ElseStatement	else		3042777	0					
ANR	3043078	IfStatement	if ( depth >= 8 )		3042777	0					
ANR	3043079	Condition	depth >= 8	315:17:8591:8600	3042777	0	True				
ANR	3043080	RelationalExpression	depth >= 8		3042777	0		>=			
ANR	3043081	Identifier	depth		3042777	0					
ANR	3043082	PrimaryExpression	8		3042777	1					
ANR	3043083	ExpressionStatement	format = DISPLAY_COLORS_NATIVE | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST	316:12:8615:8745	3042777	1	True				
ANR	3043084	AssignmentExpression	format = DISPLAY_COLORS_NATIVE | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	0		=			
ANR	3043085	Identifier	format		3042777	0					
ANR	3043086	InclusiveOrExpression	DISPLAY_COLORS_NATIVE | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043087	Identifier	DISPLAY_COLORS_NATIVE		3042777	0					
ANR	3043088	InclusiveOrExpression	DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043089	Identifier	DISPLAY_ALPHA_NONE		3042777	0					
ANR	3043090	InclusiveOrExpression	DISPLAY_DEPTH_8 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043091	Identifier	DISPLAY_DEPTH_8		3042777	0					
ANR	3043092	InclusiveOrExpression	DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043093	Identifier	DISPLAY_LITTLEENDIAN		3042777	0					
ANR	3043094	Identifier	DISPLAY_BOTTOMFIRST		3042777	1					
ANR	3043095	ElseStatement	else		3042777	0					
ANR	3043096	IfStatement	if ( depth >= 4 )		3042777	0					
ANR	3043097	Condition	depth >= 4	318:17:8764:8773	3042777	0	True				
ANR	3043098	RelationalExpression	depth >= 4		3042777	0		>=			
ANR	3043099	Identifier	depth		3042777	0					
ANR	3043100	PrimaryExpression	4		3042777	1					
ANR	3043101	ExpressionStatement	format = DISPLAY_COLORS_NATIVE | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_4 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST	319:12:8788:8918	3042777	1	True				
ANR	3043102	AssignmentExpression	format = DISPLAY_COLORS_NATIVE | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_4 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	0		=			
ANR	3043103	Identifier	format		3042777	0					
ANR	3043104	InclusiveOrExpression	DISPLAY_COLORS_NATIVE | DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_4 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043105	Identifier	DISPLAY_COLORS_NATIVE		3042777	0					
ANR	3043106	InclusiveOrExpression	DISPLAY_ALPHA_NONE | DISPLAY_DEPTH_4 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043107	Identifier	DISPLAY_ALPHA_NONE		3042777	0					
ANR	3043108	InclusiveOrExpression	DISPLAY_DEPTH_4 | DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043109	Identifier	DISPLAY_DEPTH_4		3042777	0					
ANR	3043110	InclusiveOrExpression	DISPLAY_LITTLEENDIAN | DISPLAY_BOTTOMFIRST		3042777	1		|			
ANR	3043111	Identifier	DISPLAY_LITTLEENDIAN		3042777	0					
ANR	3043112	Identifier	DISPLAY_BOTTOMFIRST		3042777	1					
ANR	3043113	ExpressionStatement	"sprintf ( dformat , ""-dDisplayFormat=%d"" , format )"	321:8:8928:8974	3042777	6	True				
ANR	3043114	CallExpression	"sprintf ( dformat , ""-dDisplayFormat=%d"" , format )"		3042777	0					
ANR	3043115	Callee	sprintf		3042777	0					
ANR	3043116	Identifier	sprintf		3042777	0					
ANR	3043117	ArgumentList	dformat		3042777	1					
ANR	3043118	Argument	dformat		3042777	0					
ANR	3043119	Identifier	dformat		3042777	0					
ANR	3043120	Argument	"""-dDisplayFormat=%d"""		3042777	1					
ANR	3043121	PrimaryExpression	"""-dDisplayFormat=%d"""		3042777	0					
ANR	3043122	Argument	format		3042777	2					
ANR	3043123	Identifier	format		3042777	0					
ANR	3043124	ExpressionStatement	nargc = argc + 2	323:4:8986:9002	3042777	15	True				
ANR	3043125	AssignmentExpression	nargc = argc + 2		3042777	0		=			
ANR	3043126	Identifier	nargc		3042777	0					
ANR	3043127	AdditiveExpression	argc + 2		3042777	1		+			
ANR	3043128	Identifier	argc		3042777	0					
ANR	3043129	PrimaryExpression	2		3042777	1					
ANR	3043130	ExpressionStatement	nargv = ( char * * ) malloc ( nargc * sizeof ( char * ) )	324:4:9008:9055	3042777	16	True				
ANR	3043131	AssignmentExpression	nargv = ( char * * ) malloc ( nargc * sizeof ( char * ) )		3042777	0		=			
ANR	3043132	Identifier	nargv		3042777	0					
ANR	3043133	CastExpression	( char * * ) malloc ( nargc * sizeof ( char * ) )		3042777	1					
ANR	3043134	CastTarget	char * *		3042777	0					
ANR	3043135	CallExpression	malloc ( nargc * sizeof ( char * ) )		3042777	1					
ANR	3043136	Callee	malloc		3042777	0					
ANR	3043137	Identifier	malloc		3042777	0					
ANR	3043138	ArgumentList	nargc * sizeof ( char * )		3042777	1					
ANR	3043139	Argument	nargc * sizeof ( char * )		3042777	0					
ANR	3043140	MultiplicativeExpression	nargc * sizeof ( char * )		3042777	0		*			
ANR	3043141	Identifier	nargc		3042777	0					
ANR	3043142	SizeofExpression	sizeof ( char * )		3042777	1					
ANR	3043143	Sizeof	sizeof		3042777	0					
ANR	3043144	SizeofOperand	char *		3042777	1					
ANR	3043145	ExpressionStatement	nargv [ 0 ] = argv [ 0 ]	325:4:9061:9079	3042777	17	True				
ANR	3043146	AssignmentExpression	nargv [ 0 ] = argv [ 0 ]		3042777	0		=			
ANR	3043147	ArrayIndexing	nargv [ 0 ]		3042777	0					
ANR	3043148	Identifier	nargv		3042777	0					
ANR	3043149	PrimaryExpression	0		3042777	1					
ANR	3043150	ArrayIndexing	argv [ 0 ]		3042777	1					
ANR	3043151	Identifier	argv		3042777	0					
ANR	3043152	PrimaryExpression	0		3042777	1					
ANR	3043153	ExpressionStatement	nargv [ 1 ] = dformat	326:4:9085:9103	3042777	18	True				
ANR	3043154	AssignmentExpression	nargv [ 1 ] = dformat		3042777	0		=			
ANR	3043155	ArrayIndexing	nargv [ 1 ]		3042777	0					
ANR	3043156	Identifier	nargv		3042777	0					
ANR	3043157	PrimaryExpression	1		3042777	1					
ANR	3043158	Identifier	dformat		3042777	1					
ANR	3043159	ExpressionStatement	nargv [ 2 ] = ddpi	327:4:9109:9124	3042777	19	True				
ANR	3043160	AssignmentExpression	nargv [ 2 ] = ddpi		3042777	0		=			
ANR	3043161	ArrayIndexing	nargv [ 2 ]		3042777	0					
ANR	3043162	Identifier	nargv		3042777	0					
ANR	3043163	PrimaryExpression	2		3042777	1					
ANR	3043164	Identifier	ddpi		3042777	1					
ANR	3043165	ExpressionStatement	"memcpy ( & nargv [ 3 ] , & argv [ 1 ] , ( argc - 1 ) * sizeof ( char * ) )"	328:4:9130:9184	3042777	20	True				
ANR	3043166	CallExpression	"memcpy ( & nargv [ 3 ] , & argv [ 1 ] , ( argc - 1 ) * sizeof ( char * ) )"		3042777	0					
ANR	3043167	Callee	memcpy		3042777	0					
ANR	3043168	Identifier	memcpy		3042777	0					
ANR	3043169	ArgumentList	& nargv [ 3 ]		3042777	1					
ANR	3043170	Argument	& nargv [ 3 ]		3042777	0					
ANR	3043171	UnaryOperationExpression	& nargv [ 3 ]		3042777	0					
ANR	3043172	UnaryOperator	&		3042777	0					
ANR	3043173	ArrayIndexing	nargv [ 3 ]		3042777	1					
ANR	3043174	Identifier	nargv		3042777	0					
ANR	3043175	PrimaryExpression	3		3042777	1					
ANR	3043176	Argument	& argv [ 1 ]		3042777	1					
ANR	3043177	UnaryOperationExpression	& argv [ 1 ]		3042777	0					
ANR	3043178	UnaryOperator	&		3042777	0					
ANR	3043179	ArrayIndexing	argv [ 1 ]		3042777	1					
ANR	3043180	Identifier	argv		3042777	0					
ANR	3043181	PrimaryExpression	1		3042777	1					
ANR	3043182	Argument	( argc - 1 ) * sizeof ( char * )		3042777	2					
ANR	3043183	MultiplicativeExpression	( argc - 1 ) * sizeof ( char * )		3042777	0		*			
ANR	3043184	AdditiveExpression	argc - 1		3042777	0		-			
ANR	3043185	Identifier	argc		3042777	0					
ANR	3043186	PrimaryExpression	1		3042777	1					
ANR	3043187	SizeofExpression	sizeof ( char * )		3042777	1					
ANR	3043188	Sizeof	sizeof		3042777	0					
ANR	3043189	SizeofOperand	char *		3042777	1					
ANR	3043190	Statement	__try	331:4:9238:9242	3042777	21	True				
ANR	3043191	CompoundStatement		61:10:2347:2347	3042777	22					
ANR	3043192	ExpressionStatement	"code = gsdll . set_arg_encoding ( instance , GS_ARG_ENCODING_UTF8 )"	334:4:9276:9337	3042777	0	True				
ANR	3043193	AssignmentExpression	"code = gsdll . set_arg_encoding ( instance , GS_ARG_ENCODING_UTF8 )"		3042777	0		=			
ANR	3043194	Identifier	code		3042777	0					
ANR	3043195	CallExpression	"gsdll . set_arg_encoding ( instance , GS_ARG_ENCODING_UTF8 )"		3042777	1					
ANR	3043196	Callee	gsdll . set_arg_encoding		3042777	0					
ANR	3043197	MemberAccess	gsdll . set_arg_encoding		3042777	0					
ANR	3043198	Identifier	gsdll		3042777	0					
ANR	3043199	Identifier	set_arg_encoding		3042777	1					
ANR	3043200	ArgumentList	instance		3042777	1					
ANR	3043201	Argument	instance		3042777	0					
ANR	3043202	Identifier	instance		3042777	0					
ANR	3043203	Argument	GS_ARG_ENCODING_UTF8		3042777	1					
ANR	3043204	Identifier	GS_ARG_ENCODING_UTF8		3042777	0					
ANR	3043205	IfStatement	if ( code == 0 )		3042777	1					
ANR	3043206	Condition	code == 0	335:8:9347:9355	3042777	0	True				
ANR	3043207	EqualityExpression	code == 0		3042777	0		==			
ANR	3043208	Identifier	code		3042777	0					
ANR	3043209	PrimaryExpression	0		3042777	1					
ANR	3043210	ExpressionStatement	"code = gsdll . init_with_args ( instance , nargc , nargv )"	337:4:9369:9420	3042777	1	True				
ANR	3043211	AssignmentExpression	"code = gsdll . init_with_args ( instance , nargc , nargv )"		3042777	0		=			
ANR	3043212	Identifier	code		3042777	0					
ANR	3043213	CallExpression	"gsdll . init_with_args ( instance , nargc , nargv )"		3042777	1					
ANR	3043214	Callee	gsdll . init_with_args		3042777	0					
ANR	3043215	MemberAccess	gsdll . init_with_args		3042777	0					
ANR	3043216	Identifier	gsdll		3042777	0					
ANR	3043217	Identifier	init_with_args		3042777	1					
ANR	3043218	ArgumentList	instance		3042777	1					
ANR	3043219	Argument	instance		3042777	0					
ANR	3043220	Identifier	instance		3042777	0					
ANR	3043221	Argument	nargc		3042777	1					
ANR	3043222	Identifier	nargc		3042777	0					
ANR	3043223	Argument	nargv		3042777	2					
ANR	3043224	Identifier	nargv		3042777	0					
ANR	3043225	IfStatement	if ( code == 0 )		3042777	2					
ANR	3043226	Condition	code == 0	338:8:9430:9438	3042777	0	True				
ANR	3043227	EqualityExpression	code == 0		3042777	0		==			
ANR	3043228	Identifier	code		3042777	0					
ANR	3043229	PrimaryExpression	0		3042777	1					
ANR	3043230	ExpressionStatement	"code = gsdll . run_string ( instance , start_string , 0 , & exit_code )"	339:8:9449:9511	3042777	1	True				
ANR	3043231	AssignmentExpression	"code = gsdll . run_string ( instance , start_string , 0 , & exit_code )"		3042777	0		=			
ANR	3043232	Identifier	code		3042777	0					
ANR	3043233	CallExpression	"gsdll . run_string ( instance , start_string , 0 , & exit_code )"		3042777	1					
ANR	3043234	Callee	gsdll . run_string		3042777	0					
ANR	3043235	MemberAccess	gsdll . run_string		3042777	0					
ANR	3043236	Identifier	gsdll		3042777	0					
ANR	3043237	Identifier	run_string		3042777	1					
ANR	3043238	ArgumentList	instance		3042777	1					
ANR	3043239	Argument	instance		3042777	0					
ANR	3043240	Identifier	instance		3042777	0					
ANR	3043241	Argument	start_string		3042777	1					
ANR	3043242	Identifier	start_string		3042777	0					
ANR	3043243	Argument	0		3042777	2					
ANR	3043244	PrimaryExpression	0		3042777	0					
ANR	3043245	Argument	& exit_code		3042777	3					
ANR	3043246	UnaryOperationExpression	& exit_code		3042777	0					
ANR	3043247	UnaryOperator	&		3042777	0					
ANR	3043248	Identifier	exit_code		3042777	1					
ANR	3043249	ExpressionStatement	code1 = gsdll . exit ( instance )	340:4:9517:9545	3042777	3	True				
ANR	3043250	AssignmentExpression	code1 = gsdll . exit ( instance )		3042777	0		=			
ANR	3043251	Identifier	code1		3042777	0					
ANR	3043252	CallExpression	gsdll . exit ( instance )		3042777	1					
ANR	3043253	Callee	gsdll . exit		3042777	0					
ANR	3043254	MemberAccess	gsdll . exit		3042777	0					
ANR	3043255	Identifier	gsdll		3042777	0					
ANR	3043256	Identifier	exit		3042777	1					
ANR	3043257	ArgumentList	instance		3042777	1					
ANR	3043258	Argument	instance		3042777	0					
ANR	3043259	Identifier	instance		3042777	0					
ANR	3043260	IfStatement	if ( code == 0 || ( code == gs_error_Quit && code1 != 0 ) )		3042777	4					
ANR	3043261	Condition	code == 0 || ( code == gs_error_Quit && code1 != 0 )	341:8:9555:9604	3042777	0	True				
ANR	3043262	OrExpression	code == 0 || ( code == gs_error_Quit && code1 != 0 )		3042777	0		||			
ANR	3043263	EqualityExpression	code == 0		3042777	0		==			
ANR	3043264	Identifier	code		3042777	0					
ANR	3043265	PrimaryExpression	0		3042777	1					
ANR	3043266	AndExpression	code == gs_error_Quit && code1 != 0		3042777	1		&&			
ANR	3043267	EqualityExpression	code == gs_error_Quit		3042777	0		==			
ANR	3043268	Identifier	code		3042777	0					
ANR	3043269	Identifier	gs_error_Quit		3042777	1					
ANR	3043270	EqualityExpression	code1 != 0		3042777	1		!=			
ANR	3043271	Identifier	code1		3042777	0					
ANR	3043272	PrimaryExpression	0		3042777	1					
ANR	3043273	ExpressionStatement	code = code1	342:8:9615:9627	3042777	1	True				
ANR	3043274	AssignmentExpression	code = code1		3042777	0		=			
ANR	3043275	Identifier	code		3042777	0					
ANR	3043276	Identifier	code1		3042777	1					
ANR	3043277	Statement	__except	344:6:9682:9689	3042777	23	True				
ANR	3043278	Statement	(	344:14:9690:9690	3042777	24	True				
ANR	3043279	Statement	exception_code	344:15:9691:9704	3042777	25	True				
ANR	3043280	Statement	(	344:29:9705:9705	3042777	26	True				
ANR	3043281	Statement	)	344:30:9706:9706	3042777	27	True				
ANR	3043282	Statement	==	344:32:9708:9709	3042777	28	True				
ANR	3043283	Statement	EXCEPTION_STACK_OVERFLOW	344:35:9711:9734	3042777	29	True				
ANR	3043284	Statement	)	344:59:9735:9735	3042777	30	True				
ANR	3043285	CompoundStatement		74:61:2840:2840	3042777	31					
ANR	3043286	ExpressionStatement	code = gs_error_Fatal	345:8:9747:9768	3042777	0	True				
ANR	3043287	AssignmentExpression	code = gs_error_Fatal		3042777	0		=			
ANR	3043288	Identifier	code		3042777	0					
ANR	3043289	Identifier	gs_error_Fatal		3042777	1					
ANR	3043290	ExpressionStatement	"text_puts ( tw , ""*** C stack overflow. Quiting...\\n"" )"	346:8:9778:9829	3042777	1	True				
ANR	3043291	CallExpression	"text_puts ( tw , ""*** C stack overflow. Quiting...\\n"" )"		3042777	0					
ANR	3043292	Callee	text_puts		3042777	0					
ANR	3043293	Identifier	text_puts		3042777	0					
ANR	3043294	ArgumentList	tw		3042777	1					
ANR	3043295	Argument	tw		3042777	0					
ANR	3043296	Identifier	tw		3042777	0					
ANR	3043297	Argument	"""*** C stack overflow. Quiting...\\n"""		3042777	1					
ANR	3043298	PrimaryExpression	"""*** C stack overflow. Quiting...\\n"""		3042777	0					
ANR	3043299	ExpressionStatement	gsdll . delete_instance ( instance )	350:4:9849:9880	3042777	32	True				
ANR	3043300	CallExpression	gsdll . delete_instance ( instance )		3042777	0					
ANR	3043301	Callee	gsdll . delete_instance		3042777	0					
ANR	3043302	MemberAccess	gsdll . delete_instance		3042777	0					
ANR	3043303	Identifier	gsdll		3042777	0					
ANR	3043304	Identifier	delete_instance		3042777	1					
ANR	3043305	ArgumentList	instance		3042777	1					
ANR	3043306	Argument	instance		3042777	0					
ANR	3043307	Identifier	instance		3042777	0					
ANR	3043308	ExpressionStatement	unload_dll ( & gsdll )	352:4:9887:9905	3042777	33	True				
ANR	3043309	CallExpression	unload_dll ( & gsdll )		3042777	0					
ANR	3043310	Callee	unload_dll		3042777	0					
ANR	3043311	Identifier	unload_dll		3042777	0					
ANR	3043312	ArgumentList	& gsdll		3042777	1					
ANR	3043313	Argument	& gsdll		3042777	0					
ANR	3043314	UnaryOperationExpression	& gsdll		3042777	0					
ANR	3043315	UnaryOperator	&		3042777	0					
ANR	3043316	Identifier	gsdll		3042777	1					
ANR	3043317	ExpressionStatement	free ( nargv )	354:4:9912:9923	3042777	34	True				
ANR	3043318	CallExpression	free ( nargv )		3042777	0					
ANR	3043319	Callee	free		3042777	0					
ANR	3043320	Identifier	free		3042777	0					
ANR	3043321	ArgumentList	nargv		3042777	1					
ANR	3043322	Argument	nargv		3042777	0					
ANR	3043323	Identifier	nargv		3042777	0					
ANR	3043324	ExpressionStatement	exit_status = 0	356:4:9930:9945	3042777	35	True				
ANR	3043325	AssignmentExpression	exit_status = 0		3042777	0		=			
ANR	3043326	Identifier	exit_status		3042777	0					
ANR	3043327	PrimaryExpression	0		3042777	1					
ANR	3043328	SwitchStatement	switch ( code )		3042777	36					
ANR	3043329	Condition	code	357:12:9959:9962	3042777	0	True				
ANR	3043330	Identifier	code		3042777	0					
ANR	3043331	CompoundStatement		87:18:3068:3068	3042777	1					
ANR	3043332	Label	case 0 :	358:8:9975:9981	3042777	0	True				
ANR	3043333	Label	case gs_error_Quit :	359:8:9991:10009	3042777	1	True				
ANR	3043334	Identifier	gs_error_Quit		3042777	0					
ANR	3043335	BreakStatement	break ;	360:12:10023:10028	3042777	2	True				
ANR	3043336	Label	case gs_error_Fatal :	361:8:10038:10057	3042777	3	True				
ANR	3043337	Identifier	gs_error_Fatal		3042777	0					
ANR	3043338	ExpressionStatement	exit_status = 1	362:12:10071:10086	3042777	4	True				
ANR	3043339	AssignmentExpression	exit_status = 1		3042777	0		=			
ANR	3043340	Identifier	exit_status		3042777	0					
ANR	3043341	PrimaryExpression	1		3042777	1					
ANR	3043342	BreakStatement	break ;	363:12:10100:10105	3042777	5	True				
ANR	3043343	Label	case gs_error_Info :	364:8:10115:10133	3042777	6	True				
ANR	3043344	Identifier	gs_error_Info		3042777	0					
ANR	3043345	Label	default :	365:8:10143:10150	3042777	7	True				
ANR	3043346	Identifier	default		3042777	0					
ANR	3043347	ExpressionStatement	exit_status = 255	366:12:10164:10181	3042777	8	True				
ANR	3043348	AssignmentExpression	exit_status = 255		3042777	0		=			
ANR	3043349	Identifier	exit_status		3042777	0					
ANR	3043350	PrimaryExpression	255		3042777	1					
ANR	3043351	ReturnStatement	return exit_status ;	369:4:10194:10212	3042777	37	True				
ANR	3043352	Identifier	exit_status		3042777	0					
ANR	3043353	ReturnType	int		3042777	1					
ANR	3043354	Identifier	new_main		3042777	2					
ANR	3043355	ParameterList	"int argc , char * argv [ ]"		3042777	3					
ANR	3043356	Parameter	int argc	270:13:6872:6879	3042777	0	True				
ANR	3043357	ParameterType	int		3042777	0					
ANR	3043358	Identifier	argc		3042777	1					
ANR	3043359	Parameter	char * argv [ ]	270:23:6882:6893	3042777	1	True				
ANR	3043360	ParameterType	char * [ ]		3042777	0					
ANR	3043361	Identifier	argv		3042777	1					
ANR	3043362	CFGEntryNode	ENTRY		3042777		True				
ANR	3043363	CFGExitNode	EXIT		3042777		True				
ANR	3043364	Symbol	nargc		3042777						
ANR	3043365	Symbol	gsdll . new_instance		3042777						
ANR	3043366	Symbol	tw		3042777						
ANR	3043367	Symbol	instance		3042777						
ANR	3043368	Symbol	& exit_code		3042777						
ANR	3043369	Symbol	gsdll . exit		3042777						
ANR	3043370	Symbol	gsdll_stdin		3042777						
ANR	3043371	Symbol	start_string		3042777						
ANR	3043372	Symbol	* argv		3042777						
ANR	3043373	Symbol	gsdll_stderr		3042777						
ANR	3043374	Symbol	load_dll		3042777						
ANR	3043375	Symbol	dformat		3042777						
ANR	3043376	Symbol	gsdll		3042777						
ANR	3043377	Symbol	gsdll . run_string		3042777						
ANR	3043378	Symbol	DISPLAY_DEPTH_8		3042777						
ANR	3043379	Symbol	gs_error_Quit		3042777						
ANR	3043380	Symbol	gs_error_Fatal		3042777						
ANR	3043381	Symbol	NULL		3042777						
ANR	3043382	Symbol	DISPLAY_DEPTH_4		3042777						
ANR	3043383	Symbol	DISPLAY_DEPTH_1		3042777						
ANR	3043384	Symbol	format		3042777						
ANR	3043385	Symbol	DISPLAY_COLORS_RGB		3042777						
ANR	3043386	Symbol	GetDC		3042777						
ANR	3043387	Symbol	BITSPIXEL		3042777						
ANR	3043388	Symbol	DISPLAY_UNUSED_LAST		3042777						
ANR	3043389	Symbol	gsdll . set_arg_encoding		3042777						
ANR	3043390	Symbol	DISPLAY_DEPTH_16		3042777						
ANR	3043391	Symbol	exit_code		3042777						
ANR	3043392	Symbol	& display		3042777						
ANR	3043393	Symbol	gsdll_poll		3042777						
ANR	3043394	Symbol	code		3042777						
ANR	3043395	Symbol	code1		3042777						
ANR	3043396	Symbol	& instance		3042777						
ANR	3043397	Symbol	* nargv		3042777						
ANR	3043398	Symbol	PLANES		3042777						
ANR	3043399	Symbol	gsdll . init_with_args		3042777						
ANR	3043400	Symbol	GetDeviceCaps		3042777						
ANR	3043401	Symbol	DISPLAY_LITTLEENDIAN		3042777						
ANR	3043402	Symbol	exit_status		3042777						
ANR	3043403	Symbol	argv		3042777						
ANR	3043404	Symbol	ddpi		3042777						
ANR	3043405	Symbol	& gsdll		3042777						
ANR	3043406	Symbol	argc		3042777						
ANR	3043407	Symbol	malloc		3042777						
ANR	3043408	Symbol	hdc		3042777						
ANR	3043409	Symbol	DISPLAY_NATIVE_555		3042777						
ANR	3043410	Symbol	GS_ARG_ENCODING_UTF8		3042777						
ANR	3043411	Symbol	DISPLAY_COLORS_NATIVE		3042777						
ANR	3043412	Symbol	gsdll_stdout		3042777						
ANR	3043413	Symbol	buf		3042777						
ANR	3043414	Symbol	depth		3042777						
ANR	3043415	Symbol	LOGPIXELSY		3042777						
ANR	3043416	Symbol	nargv		3042777						
ANR	3043417	Symbol	DISPLAY_BOTTOMFIRST		3042777						
ANR	3043418	Symbol	DISPLAY_ALPHA_NONE		3042777						
ANR	3043419	Function	set_font	372:0:10217:10781							
ANR	3043420	FunctionDef	set_font ()		3043419	0					
ANR	3043421	CompoundStatement		374:0:10237:10781	3043419	0					
ANR	3043422	IdentifierDeclStatement	int fontsize ;	375:4:10243:10255	3043419	0	True				
ANR	3043423	IdentifierDecl	fontsize		3043419	0					
ANR	3043424	IdentifierDeclType	int		3043419	0					
ANR	3043425	Identifier	fontsize		3043419	1					
ANR	3043426	IdentifierDeclStatement	char fontname [ 256 ] ;	376:4:10261:10279	3043419	1	True				
ANR	3043427	IdentifierDecl	fontname [ 256 ]		3043419	0					
ANR	3043428	IdentifierDeclType	char [ 256 ]		3043419	0					
ANR	3043429	Identifier	fontname		3043419	1					
ANR	3043430	PrimaryExpression	256		3043419	2					
ANR	3043431	IdentifierDeclStatement	char buf [ 32 ] ;	377:4:10285:10297	3043419	2	True				
ANR	3043432	IdentifierDecl	buf [ 32 ]		3043419	0					
ANR	3043433	IdentifierDeclType	char [ 32 ]		3043419	0					
ANR	3043434	Identifier	buf		3043419	1					
ANR	3043435	PrimaryExpression	32		3043419	2					
ANR	3043436	ExpressionStatement	"GetPrivateProfileString ( szIniSection , ""FontName"" , ""Courier New"" , fontname , sizeof ( fontname ) , szIniName )"	380:4:10328:10431	3043419	3	True				
ANR	3043437	CallExpression	"GetPrivateProfileString ( szIniSection , ""FontName"" , ""Courier New"" , fontname , sizeof ( fontname ) , szIniName )"		3043419	0					
ANR	3043438	Callee	GetPrivateProfileString		3043419	0					
ANR	3043439	Identifier	GetPrivateProfileString		3043419	0					
ANR	3043440	ArgumentList	szIniSection		3043419	1					
ANR	3043441	Argument	szIniSection		3043419	0					
ANR	3043442	Identifier	szIniSection		3043419	0					
ANR	3043443	Argument	"""FontName"""		3043419	1					
ANR	3043444	PrimaryExpression	"""FontName"""		3043419	0					
ANR	3043445	Argument	"""Courier New"""		3043419	2					
ANR	3043446	PrimaryExpression	"""Courier New"""		3043419	0					
ANR	3043447	Argument	fontname		3043419	3					
ANR	3043448	Identifier	fontname		3043419	0					
ANR	3043449	Argument	sizeof ( fontname )		3043419	4					
ANR	3043450	SizeofExpression	sizeof ( fontname )		3043419	0					
ANR	3043451	Sizeof	sizeof		3043419	0					
ANR	3043452	SizeofOperand	fontname		3043419	1					
ANR	3043453	Argument	szIniName		3043419	5					
ANR	3043454	Identifier	szIniName		3043419	0					
ANR	3043455	ExpressionStatement	"fontsize = GetPrivateProfileInt ( szIniSection , ""FontSize"" , 10 , szIniName )"	381:4:10437:10509	3043419	4	True				
ANR	3043456	AssignmentExpression	"fontsize = GetPrivateProfileInt ( szIniSection , ""FontSize"" , 10 , szIniName )"		3043419	0		=			
ANR	3043457	Identifier	fontsize		3043419	0					
ANR	3043458	CallExpression	"GetPrivateProfileInt ( szIniSection , ""FontSize"" , 10 , szIniName )"		3043419	1					
ANR	3043459	Callee	GetPrivateProfileInt		3043419	0					
ANR	3043460	Identifier	GetPrivateProfileInt		3043419	0					
ANR	3043461	ArgumentList	szIniSection		3043419	1					
ANR	3043462	Argument	szIniSection		3043419	0					
ANR	3043463	Identifier	szIniSection		3043419	0					
ANR	3043464	Argument	"""FontSize"""		3043419	1					
ANR	3043465	PrimaryExpression	"""FontSize"""		3043419	0					
ANR	3043466	Argument	10		3043419	2					
ANR	3043467	PrimaryExpression	10		3043419	0					
ANR	3043468	Argument	szIniName		3043419	3					
ANR	3043469	Identifier	szIniName		3043419	0					
ANR	3043470	ExpressionStatement	"text_font ( tw , fontname , fontsize )"	384:4:10535:10568	3043419	5	True				
ANR	3043471	CallExpression	"text_font ( tw , fontname , fontsize )"		3043419	0					
ANR	3043472	Callee	text_font		3043419	0					
ANR	3043473	Identifier	text_font		3043419	0					
ANR	3043474	ArgumentList	tw		3043419	1					
ANR	3043475	Argument	tw		3043419	0					
ANR	3043476	Identifier	tw		3043419	0					
ANR	3043477	Argument	fontname		3043419	1					
ANR	3043478	Identifier	fontname		3043419	0					
ANR	3043479	Argument	fontsize		3043419	2					
ANR	3043480	Identifier	fontsize		3043419	0					
ANR	3043481	ExpressionStatement	"WritePrivateProfileString ( szIniSection , ""FontName"" , fontname , szIniName )"	387:4:10600:10672	3043419	6	True				
ANR	3043482	CallExpression	"WritePrivateProfileString ( szIniSection , ""FontName"" , fontname , szIniName )"		3043419	0					
ANR	3043483	Callee	WritePrivateProfileString		3043419	0					
ANR	3043484	Identifier	WritePrivateProfileString		3043419	0					
ANR	3043485	ArgumentList	szIniSection		3043419	1					
ANR	3043486	Argument	szIniSection		3043419	0					
ANR	3043487	Identifier	szIniSection		3043419	0					
ANR	3043488	Argument	"""FontName"""		3043419	1					
ANR	3043489	PrimaryExpression	"""FontName"""		3043419	0					
ANR	3043490	Argument	fontname		3043419	2					
ANR	3043491	Identifier	fontname		3043419	0					
ANR	3043492	Argument	szIniName		3043419	3					
ANR	3043493	Identifier	szIniName		3043419	0					
ANR	3043494	ExpressionStatement	"sprintf ( buf , ""%d"" , fontsize )"	388:4:10678:10706	3043419	7	True				
ANR	3043495	CallExpression	"sprintf ( buf , ""%d"" , fontsize )"		3043419	0					
ANR	3043496	Callee	sprintf		3043419	0					
ANR	3043497	Identifier	sprintf		3043419	0					
ANR	3043498	ArgumentList	buf		3043419	1					
ANR	3043499	Argument	buf		3043419	0					
ANR	3043500	Identifier	buf		3043419	0					
ANR	3043501	Argument	"""%d"""		3043419	1					
ANR	3043502	PrimaryExpression	"""%d"""		3043419	0					
ANR	3043503	Argument	fontsize		3043419	2					
ANR	3043504	Identifier	fontsize		3043419	0					
ANR	3043505	ExpressionStatement	"WritePrivateProfileString ( szIniSection , ""FontSize"" , buf , szIniName )"	389:4:10712:10779	3043419	8	True				
ANR	3043506	CallExpression	"WritePrivateProfileString ( szIniSection , ""FontSize"" , buf , szIniName )"		3043419	0					
ANR	3043507	Callee	WritePrivateProfileString		3043419	0					
ANR	3043508	Identifier	WritePrivateProfileString		3043419	0					
ANR	3043509	ArgumentList	szIniSection		3043419	1					
ANR	3043510	Argument	szIniSection		3043419	0					
ANR	3043511	Identifier	szIniSection		3043419	0					
ANR	3043512	Argument	"""FontSize"""		3043419	1					
ANR	3043513	PrimaryExpression	"""FontSize"""		3043419	0					
ANR	3043514	Argument	buf		3043419	2					
ANR	3043515	Identifier	buf		3043419	0					
ANR	3043516	Argument	szIniName		3043419	3					
ANR	3043517	Identifier	szIniName		3043419	0					
ANR	3043518	ReturnType	void		3043419	1					
ANR	3043519	Identifier	set_font		3043419	2					
ANR	3043520	ParameterList			3043419	3					
ANR	3043521	CFGEntryNode	ENTRY		3043419		True				
ANR	3043522	CFGExitNode	EXIT		3043419		True				
ANR	3043523	Symbol	buf		3043419						
ANR	3043524	Symbol	GetPrivateProfileInt		3043419						
ANR	3043525	Symbol	tw		3043419						
ANR	3043526	Symbol	fontsize		3043419						
ANR	3043527	Symbol	fontname		3043419						
ANR	3043528	Symbol	szIniName		3043419						
ANR	3043529	Symbol	szIniSection		3043419						
ANR	3043530	Function	avoid_windows_scale	394:0:10828:11219							
ANR	3043531	FunctionDef	avoid_windows_scale ()		3043530	0					
ANR	3043532	CompoundStatement		396:0:10866:11219	3043530	0					
ANR	3043533	IdentifierDeclStatement	"HMODULE hUser32 = LoadLibrary ( TEXT ( ""user32.dll"" ) ) ;"	399:4:10993:11042	3043530	0	True				
ANR	3043534	IdentifierDecl	"hUser32 = LoadLibrary ( TEXT ( ""user32.dll"" ) )"		3043530	0					
ANR	3043535	IdentifierDeclType	HMODULE		3043530	0					
ANR	3043536	Identifier	hUser32		3043530	1					
ANR	3043537	AssignmentExpression	"hUser32 = LoadLibrary ( TEXT ( ""user32.dll"" ) )"		3043530	2		=			
ANR	3043538	Identifier	hUser32		3043530	0					
ANR	3043539	CallExpression	"LoadLibrary ( TEXT ( ""user32.dll"" ) )"		3043530	1					
ANR	3043540	Callee	LoadLibrary		3043530	0					
ANR	3043541	Identifier	LoadLibrary		3043530	0					
ANR	3043542	ArgumentList	"TEXT ( ""user32.dll"" )"		3043530	1					
ANR	3043543	Argument	"TEXT ( ""user32.dll"" )"		3043530	0					
ANR	3043544	CallExpression	"TEXT ( ""user32.dll"" )"		3043530	0					
ANR	3043545	Callee	TEXT		3043530	0					
ANR	3043546	Identifier	TEXT		3043530	0					
ANR	3043547	ArgumentList	"""user32.dll"""		3043530	1					
ANR	3043548	Argument	"""user32.dll"""		3043530	0					
ANR	3043549	PrimaryExpression	"""user32.dll"""		3043530	0					
ANR	3043550	IdentifierDeclStatement	SetProcessDPIAwareFn * ptr ;	400:4:11048:11073	3043530	1	True				
ANR	3043551	IdentifierDecl	* ptr		3043530	0					
ANR	3043552	IdentifierDeclType	SetProcessDPIAwareFn *		3043530	0					
ANR	3043553	Identifier	ptr		3043530	1					
ANR	3043554	ExpressionStatement	"ptr = ( SetProcessDPIAwareFn * ) GetProcAddress ( hUser32 , ""SetProcessDPIAware"" )"	402:4:11080:11155	3043530	2	True				
ANR	3043555	AssignmentExpression	"ptr = ( SetProcessDPIAwareFn * ) GetProcAddress ( hUser32 , ""SetProcessDPIAware"" )"		3043530	0		=			
ANR	3043556	Identifier	ptr		3043530	0					
ANR	3043557	CastExpression	"( SetProcessDPIAwareFn * ) GetProcAddress ( hUser32 , ""SetProcessDPIAware"" )"		3043530	1					
ANR	3043558	CastTarget	SetProcessDPIAwareFn *		3043530	0					
ANR	3043559	CallExpression	"GetProcAddress ( hUser32 , ""SetProcessDPIAware"" )"		3043530	1					
ANR	3043560	Callee	GetProcAddress		3043530	0					
ANR	3043561	Identifier	GetProcAddress		3043530	0					
ANR	3043562	ArgumentList	hUser32		3043530	1					
ANR	3043563	Argument	hUser32		3043530	0					
ANR	3043564	Identifier	hUser32		3043530	0					
ANR	3043565	Argument	"""SetProcessDPIAware"""		3043530	1					
ANR	3043566	PrimaryExpression	"""SetProcessDPIAware"""		3043530	0					
ANR	3043567	IfStatement	if ( ptr != NULL )		3043530	3					
ANR	3043568	Condition	ptr != NULL	403:8:11165:11175	3043530	0	True				
ANR	3043569	EqualityExpression	ptr != NULL		3043530	0		!=			
ANR	3043570	Identifier	ptr		3043530	0					
ANR	3043571	Identifier	NULL		3043530	1					
ANR	3043572	ExpressionStatement	ptr ( )	404:8:11186:11191	3043530	1	True				
ANR	3043573	CallExpression	ptr ( )		3043530	0					
ANR	3043574	Callee	ptr		3043530	0					
ANR	3043575	Identifier	ptr		3043530	0					
ANR	3043576	ArgumentList			3043530	1					
ANR	3043577	ExpressionStatement	FreeLibrary ( hUser32 )	405:4:11197:11217	3043530	4	True				
ANR	3043578	CallExpression	FreeLibrary ( hUser32 )		3043530	0					
ANR	3043579	Callee	FreeLibrary		3043530	0					
ANR	3043580	Identifier	FreeLibrary		3043530	0					
ANR	3043581	ArgumentList	hUser32		3043530	1					
ANR	3043582	Argument	hUser32		3043530	0					
ANR	3043583	Identifier	hUser32		3043530	0					
ANR	3043584	ReturnType	static void		3043530	1					
ANR	3043585	Identifier	avoid_windows_scale		3043530	2					
ANR	3043586	ParameterList			3043530	3					
ANR	3043587	CFGEntryNode	ENTRY		3043530		True				
ANR	3043588	CFGExitNode	EXIT		3043530		True				
ANR	3043589	Symbol	NULL		3043530						
ANR	3043590	Symbol	LoadLibrary		3043530						
ANR	3043591	Symbol	GetProcAddress		3043530						
ANR	3043592	Symbol	TEXT		3043530						
ANR	3043593	Symbol	hUser32		3043530						
ANR	3043594	Symbol	ptr		3043530						
ANR	3043595	Function	WinMain	408:0:11222:15710							
ANR	3043596	FunctionDef	"WinMain (HINSTANCE hInstance , HINSTANCE hPrevInstance , LPSTR lpszCmdLine , int cmdShow)"		3043595	0					
ANR	3043597	CompoundStatement		410:0:11319:15710	3043595	0					
ANR	3043598	IdentifierDeclStatement	int dll_exit_status ;	411:4:11325:11344	3043595	0	True				
ANR	3043599	IdentifierDecl	dll_exit_status		3043595	0					
ANR	3043600	IdentifierDeclType	int		3043595	0					
ANR	3043601	Identifier	dll_exit_status		3043595	1					
ANR	3043602	Statement	define	412:1:11347:11352	3043595	1	True				
ANR	3043603	Statement	MAXCMDTOKENS	412:8:11354:11365	3043595	2	True				
ANR	3043604	Statement	128	412:21:11367:11369	3043595	3	True				
ANR	3043605	IdentifierDeclStatement	int argc ;	416:4:11570:11578	3043595	4	True				
ANR	3043606	IdentifierDecl	argc		3043595	0					
ANR	3043607	IdentifierDeclType	int		3043595	0					
ANR	3043608	Identifier	argc		3043595	1					
ANR	3043609	IdentifierDeclStatement	LPSTR argv [ MAXCMDTOKENS ] ;	417:4:11584:11608	3043595	5	True				
ANR	3043610	IdentifierDecl	argv [ MAXCMDTOKENS ]		3043595	0					
ANR	3043611	IdentifierDeclType	LPSTR [ MAXCMDTOKENS ]		3043595	0					
ANR	3043612	Identifier	argv		3043595	1					
ANR	3043613	Identifier	MAXCMDTOKENS		3043595	2					
ANR	3043614	IdentifierDeclStatement	LPSTR p ;	418:4:11614:11621	3043595	6	True				
ANR	3043615	IdentifierDecl	p		3043595	0					
ANR	3043616	IdentifierDeclType	LPSTR		3043595	0					
ANR	3043617	Identifier	p		3043595	1					
ANR	3043618	IdentifierDeclStatement	LPSTR pstart ;	420:4:11646:11658	3043595	7	True				
ANR	3043619	IdentifierDecl	pstart		3043595	0					
ANR	3043620	IdentifierDeclType	LPSTR		3043595	0					
ANR	3043621	Identifier	pstart		3043595	1					
ANR	3043622	IdentifierDeclStatement	char command [ 256 ] ;	422:4:11671:11688	3043595	8	True				
ANR	3043623	IdentifierDecl	command [ 256 ]		3043595	0					
ANR	3043624	IdentifierDeclType	char [ 256 ]		3043595	0					
ANR	3043625	Identifier	command		3043595	1					
ANR	3043626	PrimaryExpression	256		3043595	2					
ANR	3043627	IdentifierDeclStatement	char * args ;	423:4:11694:11704	3043595	9	True				
ANR	3043628	IdentifierDecl	* args		3043595	0					
ANR	3043629	IdentifierDeclType	char *		3043595	0					
ANR	3043630	Identifier	args		3043595	1					
ANR	3043631	IdentifierDeclStatement	"char * d , * e ;"	424:4:11710:11721	3043595	10	True				
ANR	3043632	IdentifierDecl	* d		3043595	0					
ANR	3043633	IdentifierDeclType	char *		3043595	0					
ANR	3043634	Identifier	d		3043595	1					
ANR	3043635	IdentifierDecl	* e		3043595	1					
ANR	3043636	IdentifierDeclType	char *		3043595	0					
ANR	3043637	Identifier	e		3043595	1					
ANR	3043638	IdentifierDeclStatement	char winposbuf [ 256 ] ;	425:4:11727:11746	3043595	11	True				
ANR	3043639	IdentifierDecl	winposbuf [ 256 ]		3043595	0					
ANR	3043640	IdentifierDeclType	char [ 256 ]		3043595	0					
ANR	3043641	Identifier	winposbuf		3043595	1					
ANR	3043642	PrimaryExpression	256		3043595	2					
ANR	3043643	IdentifierDeclStatement	int len = sizeof ( winposbuf ) ;	426:4:11752:11779	3043595	12	True				
ANR	3043644	IdentifierDecl	len = sizeof ( winposbuf )		3043595	0					
ANR	3043645	IdentifierDeclType	int		3043595	0					
ANR	3043646	Identifier	len		3043595	1					
ANR	3043647	AssignmentExpression	len = sizeof ( winposbuf )		3043595	2		=			
ANR	3043648	Identifier	len		3043595	0					
ANR	3043649	SizeofExpression	sizeof ( winposbuf )		3043595	1					
ANR	3043650	Sizeof	sizeof		3043595	0					
ANR	3043651	SizeofOperand	winposbuf		3043595	1					
ANR	3043652	IdentifierDeclStatement	"int x , y , cx , cy ;"	427:4:11785:11801	3043595	13	True				
ANR	3043653	IdentifierDecl	x		3043595	0					
ANR	3043654	IdentifierDeclType	int		3043595	0					
ANR	3043655	Identifier	x		3043595	1					
ANR	3043656	IdentifierDecl	y		3043595	1					
ANR	3043657	IdentifierDeclType	int		3043595	0					
ANR	3043658	Identifier	y		3043595	1					
ANR	3043659	IdentifierDecl	cx		3043595	2					
ANR	3043660	IdentifierDeclType	int		3043595	0					
ANR	3043661	Identifier	cx		3043595	1					
ANR	3043662	IdentifierDecl	cy		3043595	3					
ANR	3043663	IdentifierDeclType	int		3043595	0					
ANR	3043664	Identifier	cy		3043595	1					
ANR	3043665	ExpressionStatement	avoid_windows_scale ( )	430:4:11878:11899	3043595	14	True				
ANR	3043666	CallExpression	avoid_windows_scale ( )		3043595	0					
ANR	3043667	Callee	avoid_windows_scale		3043595	0					
ANR	3043668	Identifier	avoid_windows_scale		3043595	0					
ANR	3043669	ArgumentList			3043595	1					
ANR	3043670	ExpressionStatement	ghInstance = hInstance	433:4:11969:11991	3043595	15	True				
ANR	3043671	AssignmentExpression	ghInstance = hInstance		3043595	0		=			
ANR	3043672	Identifier	ghInstance		3043595	0					
ANR	3043673	Identifier	hInstance		3043595	1					
ANR	3043674	IfStatement	if ( hPrevInstance )		3043595	16					
ANR	3043675	Condition	hPrevInstance	435:8:12002:12014	3043595	0	True				
ANR	3043676	Identifier	hPrevInstance		3043595	0					
ANR	3043677	CompoundStatement		26:23:697:697	3043595	1					
ANR	3043678	ExpressionStatement	"MessageBox ( ( HWND ) NULL , ""Can't run twice"" , szAppName , MB_ICONHAND | MB_OK )"	436:8:12027:12115	3043595	0	True				
ANR	3043679	CallExpression	"MessageBox ( ( HWND ) NULL , ""Can't run twice"" , szAppName , MB_ICONHAND | MB_OK )"		3043595	0					
ANR	3043680	Callee	MessageBox		3043595	0					
ANR	3043681	Identifier	MessageBox		3043595	0					
ANR	3043682	ArgumentList	( HWND ) NULL		3043595	1					
ANR	3043683	Argument	( HWND ) NULL		3043595	0					
ANR	3043684	CastExpression	( HWND ) NULL		3043595	0					
ANR	3043685	CastTarget	HWND		3043595	0					
ANR	3043686	Identifier	NULL		3043595	1					
ANR	3043687	Argument	"""Can't run twice"""		3043595	1					
ANR	3043688	PrimaryExpression	"""Can't run twice"""		3043595	0					
ANR	3043689	Argument	szAppName		3043595	2					
ANR	3043690	Identifier	szAppName		3043595	0					
ANR	3043691	Argument	MB_ICONHAND | MB_OK		3043595	3					
ANR	3043692	InclusiveOrExpression	MB_ICONHAND | MB_OK		3043595	0		|			
ANR	3043693	Identifier	MB_ICONHAND		3043595	0					
ANR	3043694	Identifier	MB_OK		3043595	1					
ANR	3043695	ReturnStatement	return FALSE ;	438:8:12125:12137	3043595	1	True				
ANR	3043696	Identifier	FALSE		3043595	0					
ANR	3043697	ExpressionStatement	p = GetCommandLine ( )	453:4:12665:12685	3043595	17	True				
ANR	3043698	AssignmentExpression	p = GetCommandLine ( )		3043595	0		=			
ANR	3043699	Identifier	p		3043595	0					
ANR	3043700	CallExpression	GetCommandLine ( )		3043595	1					
ANR	3043701	Callee	GetCommandLine		3043595	0					
ANR	3043702	Identifier	GetCommandLine		3043595	0					
ANR	3043703	ArgumentList			3043595	1					
ANR	3043704	ExpressionStatement	argc = 0	463:4:12872:12880	3043595	18	True				
ANR	3043705	AssignmentExpression	argc = 0		3043595	0		=			
ANR	3043706	Identifier	argc		3043595	0					
ANR	3043707	PrimaryExpression	0		3043595	1					
ANR	3043708	ExpressionStatement	args = ( char * ) malloc ( lstrlen ( p ) + 1 )	464:4:12886:12921	3043595	19	True				
ANR	3043709	AssignmentExpression	args = ( char * ) malloc ( lstrlen ( p ) + 1 )		3043595	0		=			
ANR	3043710	Identifier	args		3043595	0					
ANR	3043711	CastExpression	( char * ) malloc ( lstrlen ( p ) + 1 )		3043595	1					
ANR	3043712	CastTarget	char *		3043595	0					
ANR	3043713	CallExpression	malloc ( lstrlen ( p ) + 1 )		3043595	1					
ANR	3043714	Callee	malloc		3043595	0					
ANR	3043715	Identifier	malloc		3043595	0					
ANR	3043716	ArgumentList	lstrlen ( p ) + 1		3043595	1					
ANR	3043717	Argument	lstrlen ( p ) + 1		3043595	0					
ANR	3043718	AdditiveExpression	lstrlen ( p ) + 1		3043595	0		+			
ANR	3043719	CallExpression	lstrlen ( p )		3043595	0					
ANR	3043720	Callee	lstrlen		3043595	0					
ANR	3043721	Identifier	lstrlen		3043595	0					
ANR	3043722	ArgumentList	p		3043595	1					
ANR	3043723	Argument	p		3043595	0					
ANR	3043724	Identifier	p		3043595	0					
ANR	3043725	PrimaryExpression	1		3043595	1					
ANR	3043726	IfStatement	if ( args == ( char * ) NULL )		3043595	20					
ANR	3043727	Condition	args == ( char * ) NULL	465:8:12931:12950	3043595	0	True				
ANR	3043728	EqualityExpression	args == ( char * ) NULL		3043595	0		==			
ANR	3043729	Identifier	args		3043595	0					
ANR	3043730	CastExpression	( char * ) NULL		3043595	1					
ANR	3043731	CastTarget	char *		3043595	0					
ANR	3043732	Identifier	NULL		3043595	1					
ANR	3043733	CompoundStatement		56:30:1633:1633	3043595	1					
ANR	3043734	ExpressionStatement	"fprintf ( stdout , ""Insufficient memory in WinMain()\\n"" )"	466:8:12963:13016	3043595	0	True				
ANR	3043735	CallExpression	"fprintf ( stdout , ""Insufficient memory in WinMain()\\n"" )"		3043595	0					
ANR	3043736	Callee	fprintf		3043595	0					
ANR	3043737	Identifier	fprintf		3043595	0					
ANR	3043738	ArgumentList	stdout		3043595	1					
ANR	3043739	Argument	stdout		3043595	0					
ANR	3043740	Identifier	stdout		3043595	0					
ANR	3043741	Argument	"""Insufficient memory in WinMain()\\n"""		3043595	1					
ANR	3043742	PrimaryExpression	"""Insufficient memory in WinMain()\\n"""		3043595	0					
ANR	3043743	ReturnStatement	return 1 ;	467:8:13026:13034	3043595	1	True				
ANR	3043744	PrimaryExpression	1		3043595	0					
ANR	3043745	ExpressionStatement	d = args	471:4:13093:13101	3043595	21	True				
ANR	3043746	AssignmentExpression	d = args		3043595	0		=			
ANR	3043747	Identifier	d		3043595	0					
ANR	3043748	Identifier	args		3043595	1					
ANR	3043749	WhileStatement	while ( * p )		3043595	22					
ANR	3043750	Condition	* p	472:11:13114:13115	3043595	0	True				
ANR	3043751	UnaryOperationExpression	* p		3043595	0					
ANR	3043752	UnaryOperator	*		3043595	0					
ANR	3043753	Identifier	p		3043595	1					
ANR	3043754	CompoundStatement		63:15:1798:1798	3043595	1					
ANR	3043755	IfStatement	if ( argc >= MAXCMDTOKENS - 1 )		3043595	0					
ANR	3043756	Condition	argc >= MAXCMDTOKENS - 1	475:12:13165:13188	3043595	0	True				
ANR	3043757	RelationalExpression	argc >= MAXCMDTOKENS - 1		3043595	0		>=			
ANR	3043758	Identifier	argc		3043595	0					
ANR	3043759	AdditiveExpression	MAXCMDTOKENS - 1		3043595	1		-			
ANR	3043760	Identifier	MAXCMDTOKENS		3043595	0					
ANR	3043761	PrimaryExpression	1		3043595	1					
ANR	3043762	BreakStatement	break ;	476:12:13203:13208	3043595	1	True				
ANR	3043763	ExpressionStatement	e = d	478:8:13219:13224	3043595	1	True				
ANR	3043764	AssignmentExpression	e = d		3043595	0		=			
ANR	3043765	Identifier	e		3043595	0					
ANR	3043766	Identifier	d		3043595	1					
ANR	3043767	WhileStatement	while ( ( * p ) && ( * p != ' ' ) )		3043595	2					
ANR	3043768	Condition	( * p ) && ( * p != ' ' )	479:15:13241:13259	3043595	0	True				
ANR	3043769	AndExpression	( * p ) && ( * p != ' ' )		3043595	0		&&			
ANR	3043770	UnaryOperationExpression	* p		3043595	0					
ANR	3043771	UnaryOperator	*		3043595	0					
ANR	3043772	Identifier	p		3043595	1					
ANR	3043773	EqualityExpression	* p != ' '		3043595	1		!=			
ANR	3043774	UnaryOperationExpression	* p		3043595	0					
ANR	3043775	UnaryOperator	*		3043595	0					
ANR	3043776	Identifier	p		3043595	1					
ANR	3043777	PrimaryExpression	' '		3043595	1					
ANR	3043778	CompoundStatement		70:36:1942:1942	3043595	1					
ANR	3043779	IfStatement	if ( * p == '\\042' )		3043595	0					
ANR	3043780	Condition	* p == '\\042'	480:16:13280:13291	3043595	0	True				
ANR	3043781	EqualityExpression	* p == '\\042'		3043595	0		==			
ANR	3043782	UnaryOperationExpression	* p		3043595	0					
ANR	3043783	UnaryOperator	*		3043595	0					
ANR	3043784	Identifier	p		3043595	1					
ANR	3043785	PrimaryExpression	'\\042'		3043595	1					
ANR	3043786	CompoundStatement		71:30:1974:1974	3043595	1					
ANR	3043787	ExpressionStatement	p ++	483:16:13434:13437	3043595	0	True				
ANR	3043788	PostIncDecOperationExpression	p ++		3043595	0					
ANR	3043789	Identifier	p		3043595	0					
ANR	3043790	IncDec	++		3043595	1					
ANR	3043791	WhileStatement	while ( ( * p ) && ( * p != '\\042' ) )		3043595	1					
ANR	3043792	Condition	( * p ) && ( * p != '\\042' )	484:23:13462:13483	3043595	0	True				
ANR	3043793	AndExpression	( * p ) && ( * p != '\\042' )		3043595	0		&&			
ANR	3043794	UnaryOperationExpression	* p		3043595	0					
ANR	3043795	UnaryOperator	*		3043595	0					
ANR	3043796	Identifier	p		3043595	1					
ANR	3043797	EqualityExpression	* p != '\\042'		3043595	1		!=			
ANR	3043798	UnaryOperationExpression	* p		3043595	0					
ANR	3043799	UnaryOperator	*		3043595	0					
ANR	3043800	Identifier	p		3043595	1					
ANR	3043801	PrimaryExpression	'\\042'		3043595	1					
ANR	3043802	ExpressionStatement	* d ++ = * p ++	485:20:13506:13516	3043595	1	True				
ANR	3043803	AssignmentExpression	* d ++ = * p ++		3043595	0		=			
ANR	3043804	UnaryOperationExpression	* d ++		3043595	0					
ANR	3043805	UnaryOperator	*		3043595	0					
ANR	3043806	PostIncDecOperationExpression	d ++		3043595	1					
ANR	3043807	Identifier	d		3043595	0					
ANR	3043808	IncDec	++		3043595	1					
ANR	3043809	UnaryOperationExpression	* p ++		3043595	1					
ANR	3043810	UnaryOperator	*		3043595	0					
ANR	3043811	PostIncDecOperationExpression	p ++		3043595	1					
ANR	3043812	Identifier	p		3043595	0					
ANR	3043813	IncDec	++		3043595	1					
ANR	3043814	ElseStatement	else		3043595	0					
ANR	3043815	ExpressionStatement	* d ++ = * p	488:16:13565:13574	3043595	0	True				
ANR	3043816	AssignmentExpression	* d ++ = * p		3043595	0		=			
ANR	3043817	UnaryOperationExpression	* d ++		3043595	0					
ANR	3043818	UnaryOperator	*		3043595	0					
ANR	3043819	PostIncDecOperationExpression	d ++		3043595	1					
ANR	3043820	Identifier	d		3043595	0					
ANR	3043821	IncDec	++		3043595	1					
ANR	3043822	UnaryOperationExpression	* p		3043595	1					
ANR	3043823	UnaryOperator	*		3043595	0					
ANR	3043824	Identifier	p		3043595	1					
ANR	3043825	IfStatement	if ( * p )		3043595	1					
ANR	3043826	Condition	* p	489:16:13592:13593	3043595	0	True				
ANR	3043827	UnaryOperationExpression	* p		3043595	0					
ANR	3043828	UnaryOperator	*		3043595	0					
ANR	3043829	Identifier	p		3043595	1					
ANR	3043830	ExpressionStatement	p ++	490:16:13612:13615	3043595	1	True				
ANR	3043831	PostIncDecOperationExpression	p ++		3043595	0					
ANR	3043832	Identifier	p		3043595	0					
ANR	3043833	IncDec	++		3043595	1					
ANR	3043834	ExpressionStatement	* d ++ = '\\0'	492:8:13635:13646	3043595	3	True				
ANR	3043835	AssignmentExpression	* d ++ = '\\0'		3043595	0		=			
ANR	3043836	UnaryOperationExpression	* d ++		3043595	0					
ANR	3043837	UnaryOperator	*		3043595	0					
ANR	3043838	PostIncDecOperationExpression	d ++		3043595	1					
ANR	3043839	Identifier	d		3043595	0					
ANR	3043840	IncDec	++		3043595	1					
ANR	3043841	PrimaryExpression	'\\0'		3043595	1					
ANR	3043842	ExpressionStatement	argv [ argc ++ ] = e	493:8:13656:13672	3043595	4	True				
ANR	3043843	AssignmentExpression	argv [ argc ++ ] = e		3043595	0		=			
ANR	3043844	ArrayIndexing	argv [ argc ++ ]		3043595	0					
ANR	3043845	Identifier	argv		3043595	0					
ANR	3043846	PostIncDecOperationExpression	argc ++		3043595	1					
ANR	3043847	Identifier	argc		3043595	0					
ANR	3043848	IncDec	++		3043595	1					
ANR	3043849	Identifier	e		3043595	1					
ANR	3043850	WhileStatement	while ( ( * p ) && ( * p == ' ' ) )		3043595	5					
ANR	3043851	Condition	( * p ) && ( * p == ' ' )	495:15:13690:13708	3043595	0	True				
ANR	3043852	AndExpression	( * p ) && ( * p == ' ' )		3043595	0		&&			
ANR	3043853	UnaryOperationExpression	* p		3043595	0					
ANR	3043854	UnaryOperator	*		3043595	0					
ANR	3043855	Identifier	p		3043595	1					
ANR	3043856	EqualityExpression	* p == ' '		3043595	1		==			
ANR	3043857	UnaryOperationExpression	* p		3043595	0					
ANR	3043858	UnaryOperator	*		3043595	0					
ANR	3043859	Identifier	p		3043595	1					
ANR	3043860	PrimaryExpression	' '		3043595	1					
ANR	3043861	ExpressionStatement	p ++	496:12:13723:13726	3043595	1	True				
ANR	3043862	PostIncDecOperationExpression	p ++		3043595	0					
ANR	3043863	Identifier	p		3043595	0					
ANR	3043864	IncDec	++		3043595	1					
ANR	3043865	ExpressionStatement	argv [ argc ] = NULL	498:4:13770:13787	3043595	23	True				
ANR	3043866	AssignmentExpression	argv [ argc ] = NULL		3043595	0		=			
ANR	3043867	ArrayIndexing	argv [ argc ]		3043595	0					
ANR	3043868	Identifier	argv		3043595	0					
ANR	3043869	Identifier	argc		3043595	1					
ANR	3043870	Identifier	NULL		3043595	1					
ANR	3043871	ExpressionStatement	free ( pstart )	501:4:13813:13825	3043595	24	True				
ANR	3043872	CallExpression	free ( pstart )		3043595	0					
ANR	3043873	Callee	free		3043595	0					
ANR	3043874	Identifier	free		3043595	0					
ANR	3043875	ArgumentList	pstart		3043595	1					
ANR	3043876	Argument	pstart		3043595	0					
ANR	3043877	Identifier	pstart		3043595	0					
ANR	3043878	IfStatement	if ( strlen ( argv [ 0 ] ) == 0 )		3043595	25					
ANR	3043879	Condition	strlen ( argv [ 0 ] ) == 0	504:8:13843:13862	3043595	0	True				
ANR	3043880	EqualityExpression	strlen ( argv [ 0 ] ) == 0		3043595	0		==			
ANR	3043881	CallExpression	strlen ( argv [ 0 ] )		3043595	0					
ANR	3043882	Callee	strlen		3043595	0					
ANR	3043883	Identifier	strlen		3043595	0					
ANR	3043884	ArgumentList	argv [ 0 ]		3043595	1					
ANR	3043885	Argument	argv [ 0 ]		3043595	0					
ANR	3043886	ArrayIndexing	argv [ 0 ]		3043595	0					
ANR	3043887	Identifier	argv		3043595	0					
ANR	3043888	PrimaryExpression	0		3043595	1					
ANR	3043889	PrimaryExpression	0		3043595	1					
ANR	3043890	CompoundStatement		95:30:2545:2545	3043595	1					
ANR	3043891	ExpressionStatement	"GetModuleFileName ( hInstance , command , sizeof ( command ) - 1 )"	505:8:13875:13931	3043595	0	True				
ANR	3043892	CallExpression	"GetModuleFileName ( hInstance , command , sizeof ( command ) - 1 )"		3043595	0					
ANR	3043893	Callee	GetModuleFileName		3043595	0					
ANR	3043894	Identifier	GetModuleFileName		3043595	0					
ANR	3043895	ArgumentList	hInstance		3043595	1					
ANR	3043896	Argument	hInstance		3043595	0					
ANR	3043897	Identifier	hInstance		3043595	0					
ANR	3043898	Argument	command		3043595	1					
ANR	3043899	Identifier	command		3043595	0					
ANR	3043900	Argument	sizeof ( command ) - 1		3043595	2					
ANR	3043901	AdditiveExpression	sizeof ( command ) - 1		3043595	0		-			
ANR	3043902	SizeofExpression	sizeof ( command )		3043595	0					
ANR	3043903	Sizeof	sizeof		3043595	0					
ANR	3043904	SizeofOperand	command		3043595	1					
ANR	3043905	PrimaryExpression	1		3043595	1					
ANR	3043906	ExpressionStatement	argv [ 0 ] = command	506:8:13941:13958	3043595	1	True				
ANR	3043907	AssignmentExpression	argv [ 0 ] = command		3043595	0		=			
ANR	3043908	ArrayIndexing	argv [ 0 ]		3043595	0					
ANR	3043909	Identifier	argv		3043595	0					
ANR	3043910	PrimaryExpression	0		3043595	1					
ANR	3043911	Identifier	command		3043595	1					
ANR	3043912	ExpressionStatement	tw = text_new ( )	509:4:13971:13986	3043595	26	True				
ANR	3043913	AssignmentExpression	tw = text_new ( )		3043595	0		=			
ANR	3043914	Identifier	tw		3043595	0					
ANR	3043915	CallExpression	text_new ( )		3043595	1					
ANR	3043916	Callee	text_new		3043595	0					
ANR	3043917	Identifier	text_new		3043595	0					
ANR	3043918	ArgumentList			3043595	1					
ANR	3043919	IfStatement	if ( tw == NULL )		3043595	27					
ANR	3043920	Condition	tw == NULL	510:8:13996:14005	3043595	0	True				
ANR	3043921	EqualityExpression	tw == NULL		3043595	0		==			
ANR	3043922	Identifier	tw		3043595	0					
ANR	3043923	Identifier	NULL		3043595	1					
ANR	3043924	CompoundStatement		101:20:2688:2688	3043595	1					
ANR	3043925	ExpressionStatement	"MessageBox ( ( HWND ) NULL , ""Can't create text window"" , szAppName , MB_OK | MB_ICONSTOP )"	511:8:14018:14116	3043595	0	True				
ANR	3043926	CallExpression	"MessageBox ( ( HWND ) NULL , ""Can't create text window"" , szAppName , MB_OK | MB_ICONSTOP )"		3043595	0					
ANR	3043927	Callee	MessageBox		3043595	0					
ANR	3043928	Identifier	MessageBox		3043595	0					
ANR	3043929	ArgumentList	( HWND ) NULL		3043595	1					
ANR	3043930	Argument	( HWND ) NULL		3043595	0					
ANR	3043931	CastExpression	( HWND ) NULL		3043595	0					
ANR	3043932	CastTarget	HWND		3043595	0					
ANR	3043933	Identifier	NULL		3043595	1					
ANR	3043934	Argument	"""Can't create text window"""		3043595	1					
ANR	3043935	PrimaryExpression	"""Can't create text window"""		3043595	0					
ANR	3043936	Argument	szAppName		3043595	2					
ANR	3043937	Identifier	szAppName		3043595	0					
ANR	3043938	Argument	MB_OK | MB_ICONSTOP		3043595	3					
ANR	3043939	InclusiveOrExpression	MB_OK | MB_ICONSTOP		3043595	0		|			
ANR	3043940	Identifier	MB_OK		3043595	0					
ANR	3043941	Identifier	MB_ICONSTOP		3043595	1					
ANR	3043942	ReturnStatement	return 1 ;	513:8:14126:14134	3043595	1	True				
ANR	3043943	PrimaryExpression	1		3043595	0					
ANR	3043944	IfStatement	if ( ! hPrevInstance )		3043595	28					
ANR	3043945	Condition	! hPrevInstance	517:8:14186:14199	3043595	0	True				
ANR	3043946	UnaryOperationExpression	! hPrevInstance		3043595	0					
ANR	3043947	UnaryOperator	!		3043595	0					
ANR	3043948	Identifier	hPrevInstance		3043595	1					
ANR	3043949	CompoundStatement		109:8:2892:2962	3043595	1					
ANR	3043950	IdentifierDeclStatement	"HICON hicon = LoadIcon ( hInstance , ( LPSTR ) MAKEINTRESOURCE ( GSTEXT_ICON ) ) ;"	518:8:14212:14282	3043595	0	True				
ANR	3043951	IdentifierDecl	"hicon = LoadIcon ( hInstance , ( LPSTR ) MAKEINTRESOURCE ( GSTEXT_ICON ) )"		3043595	0					
ANR	3043952	IdentifierDeclType	HICON		3043595	0					
ANR	3043953	Identifier	hicon		3043595	1					
ANR	3043954	AssignmentExpression	"hicon = LoadIcon ( hInstance , ( LPSTR ) MAKEINTRESOURCE ( GSTEXT_ICON ) )"		3043595	2		=			
ANR	3043955	Identifier	hicon		3043595	0					
ANR	3043956	CallExpression	"LoadIcon ( hInstance , ( LPSTR ) MAKEINTRESOURCE ( GSTEXT_ICON ) )"		3043595	1					
ANR	3043957	Callee	LoadIcon		3043595	0					
ANR	3043958	Identifier	LoadIcon		3043595	0					
ANR	3043959	ArgumentList	hInstance		3043595	1					
ANR	3043960	Argument	hInstance		3043595	0					
ANR	3043961	Identifier	hInstance		3043595	0					
ANR	3043962	Argument	( LPSTR ) MAKEINTRESOURCE ( GSTEXT_ICON )		3043595	1					
ANR	3043963	CastExpression	( LPSTR ) MAKEINTRESOURCE ( GSTEXT_ICON )		3043595	0					
ANR	3043964	CastTarget	LPSTR		3043595	0					
ANR	3043965	CallExpression	MAKEINTRESOURCE ( GSTEXT_ICON )		3043595	1					
ANR	3043966	Callee	MAKEINTRESOURCE		3043595	0					
ANR	3043967	Identifier	MAKEINTRESOURCE		3043595	0					
ANR	3043968	ArgumentList	GSTEXT_ICON		3043595	1					
ANR	3043969	Argument	GSTEXT_ICON		3043595	0					
ANR	3043970	Identifier	GSTEXT_ICON		3043595	0					
ANR	3043971	ExpressionStatement	"text_register_class ( tw , hicon )"	519:8:14292:14322	3043595	1	True				
ANR	3043972	CallExpression	"text_register_class ( tw , hicon )"		3043595	0					
ANR	3043973	Callee	text_register_class		3043595	0					
ANR	3043974	Identifier	text_register_class		3043595	0					
ANR	3043975	ArgumentList	tw		3043595	1					
ANR	3043976	Argument	tw		3043595	0					
ANR	3043977	Identifier	tw		3043595	0					
ANR	3043978	Argument	hicon		3043595	1					
ANR	3043979	Identifier	hicon		3043595	0					
ANR	3043980	ExpressionStatement	set_font ( )	521:4:14334:14344	3043595	29	True				
ANR	3043981	CallExpression	set_font ( )		3043595	0					
ANR	3043982	Callee	set_font		3043595	0					
ANR	3043983	Identifier	set_font		3043595	0					
ANR	3043984	ArgumentList			3043595	1					
ANR	3043985	ExpressionStatement	"text_size ( tw , 80 , 80 )"	522:4:14350:14371	3043595	30	True				
ANR	3043986	CallExpression	"text_size ( tw , 80 , 80 )"		3043595	0					
ANR	3043987	Callee	text_size		3043595	0					
ANR	3043988	Identifier	text_size		3043595	0					
ANR	3043989	ArgumentList	tw		3043595	1					
ANR	3043990	Argument	tw		3043595	0					
ANR	3043991	Identifier	tw		3043595	0					
ANR	3043992	Argument	80		3043595	1					
ANR	3043993	PrimaryExpression	80		3043595	0					
ANR	3043994	Argument	80		3043595	2					
ANR	3043995	PrimaryExpression	80		3043595	0					
ANR	3043996	ExpressionStatement	"text_drag ( tw , ""("" , "") run\\r"" )"	523:4:14377:14406	3043595	31	True				
ANR	3043997	CallExpression	"text_drag ( tw , ""("" , "") run\\r"" )"		3043595	0					
ANR	3043998	Callee	text_drag		3043595	0					
ANR	3043999	Identifier	text_drag		3043595	0					
ANR	3044000	ArgumentList	tw		3043595	1					
ANR	3044001	Argument	tw		3043595	0					
ANR	3044002	Identifier	tw		3043595	0					
ANR	3044003	Argument	"""("""		3043595	1					
ANR	3044004	PrimaryExpression	"""("""		3043595	0					
ANR	3044005	Argument	""") run\\r"""		3043595	2					
ANR	3044006	PrimaryExpression	""") run\\r"""		3043595	0					
ANR	3044007	IfStatement	"if ( win_get_reg_value ( ""Text"" , winposbuf , & len ) == 0 )"		3043595	32					
ANR	3044008	Condition	"win_get_reg_value ( ""Text"" , winposbuf , & len ) == 0"	524:8:14416:14462	3043595	0	True				
ANR	3044009	EqualityExpression	"win_get_reg_value ( ""Text"" , winposbuf , & len ) == 0"		3043595	0		==			
ANR	3044010	CallExpression	"win_get_reg_value ( ""Text"" , winposbuf , & len )"		3043595	0					
ANR	3044011	Callee	win_get_reg_value		3043595	0					
ANR	3044012	Identifier	win_get_reg_value		3043595	0					
ANR	3044013	ArgumentList	"""Text"""		3043595	1					
ANR	3044014	Argument	"""Text"""		3043595	0					
ANR	3044015	PrimaryExpression	"""Text"""		3043595	0					
ANR	3044016	Argument	winposbuf		3043595	1					
ANR	3044017	Identifier	winposbuf		3043595	0					
ANR	3044018	Argument	& len		3043595	2					
ANR	3044019	UnaryOperationExpression	& len		3043595	0					
ANR	3044020	UnaryOperator	&		3043595	0					
ANR	3044021	Identifier	len		3043595	1					
ANR	3044022	PrimaryExpression	0		3043595	1					
ANR	3044023	CompoundStatement		115:57:3145:3145	3043595	1					
ANR	3044024	IfStatement	"if ( sscanf ( winposbuf , ""%d %d %d %d"" , & x , & y , & cx , & cy ) == 4 )"		3043595	0					
ANR	3044025	Condition	"sscanf ( winposbuf , ""%d %d %d %d"" , & x , & y , & cx , & cy ) == 4"	525:12:14479:14533	3043595	0	True				
ANR	3044026	EqualityExpression	"sscanf ( winposbuf , ""%d %d %d %d"" , & x , & y , & cx , & cy ) == 4"		3043595	0		==			
ANR	3044027	CallExpression	"sscanf ( winposbuf , ""%d %d %d %d"" , & x , & y , & cx , & cy )"		3043595	0					
ANR	3044028	Callee	sscanf		3043595	0					
ANR	3044029	Identifier	sscanf		3043595	0					
ANR	3044030	ArgumentList	winposbuf		3043595	1					
ANR	3044031	Argument	winposbuf		3043595	0					
ANR	3044032	Identifier	winposbuf		3043595	0					
ANR	3044033	Argument	"""%d %d %d %d"""		3043595	1					
ANR	3044034	PrimaryExpression	"""%d %d %d %d"""		3043595	0					
ANR	3044035	Argument	& x		3043595	2					
ANR	3044036	UnaryOperationExpression	& x		3043595	0					
ANR	3044037	UnaryOperator	&		3043595	0					
ANR	3044038	Identifier	x		3043595	1					
ANR	3044039	Argument	& y		3043595	3					
ANR	3044040	UnaryOperationExpression	& y		3043595	0					
ANR	3044041	UnaryOperator	&		3043595	0					
ANR	3044042	Identifier	y		3043595	1					
ANR	3044043	Argument	& cx		3043595	4					
ANR	3044044	UnaryOperationExpression	& cx		3043595	0					
ANR	3044045	UnaryOperator	&		3043595	0					
ANR	3044046	Identifier	cx		3043595	1					
ANR	3044047	Argument	& cy		3043595	5					
ANR	3044048	UnaryOperationExpression	& cy		3043595	0					
ANR	3044049	UnaryOperator	&		3043595	0					
ANR	3044050	Identifier	cy		3043595	1					
ANR	3044051	PrimaryExpression	4		3043595	1					
ANR	3044052	ExpressionStatement	"text_setpos ( tw , x , y , cx , cy )"	526:12:14548:14577	3043595	1	True				
ANR	3044053	CallExpression	"text_setpos ( tw , x , y , cx , cy )"		3043595	0					
ANR	3044054	Callee	text_setpos		3043595	0					
ANR	3044055	Identifier	text_setpos		3043595	0					
ANR	3044056	ArgumentList	tw		3043595	1					
ANR	3044057	Argument	tw		3043595	0					
ANR	3044058	Identifier	tw		3043595	0					
ANR	3044059	Argument	x		3043595	1					
ANR	3044060	Identifier	x		3043595	0					
ANR	3044061	Argument	y		3043595	2					
ANR	3044062	Identifier	y		3043595	0					
ANR	3044063	Argument	cx		3043595	3					
ANR	3044064	Identifier	cx		3043595	0					
ANR	3044065	Argument	cy		3043595	4					
ANR	3044066	Identifier	cy		3043595	0					
ANR	3044067	IfStatement	"if ( text_create ( tw , szAppName , cmdShow ) )"		3043595	33					
ANR	3044068	Condition	"text_create ( tw , szAppName , cmdShow )"	530:8:14627:14661	3043595	0	True				
ANR	3044069	CallExpression	"text_create ( tw , szAppName , cmdShow )"		3043595	0					
ANR	3044070	Callee	text_create		3043595	0					
ANR	3044071	Identifier	text_create		3043595	0					
ANR	3044072	ArgumentList	tw		3043595	1					
ANR	3044073	Argument	tw		3043595	0					
ANR	3044074	Identifier	tw		3043595	0					
ANR	3044075	Argument	szAppName		3043595	1					
ANR	3044076	Identifier	szAppName		3043595	0					
ANR	3044077	Argument	cmdShow		3043595	2					
ANR	3044078	Identifier	cmdShow		3043595	0					
ANR	3044079	ExpressionStatement	exit ( 1 )	531:8:14672:14679	3043595	1	True				
ANR	3044080	CallExpression	exit ( 1 )		3043595	0					
ANR	3044081	Callee	exit		3043595	0					
ANR	3044082	Identifier	exit		3043595	0					
ANR	3044083	ArgumentList	1		3043595	1					
ANR	3044084	Argument	1		3043595	0					
ANR	3044085	PrimaryExpression	1		3043595	0					
ANR	3044086	ExpressionStatement	hwndtext = text_get_handle ( tw )	533:4:14686:14716	3043595	34	True				
ANR	3044087	AssignmentExpression	hwndtext = text_get_handle ( tw )		3043595	0		=			
ANR	3044088	Identifier	hwndtext		3043595	0					
ANR	3044089	CallExpression	text_get_handle ( tw )		3043595	1					
ANR	3044090	Callee	text_get_handle		3043595	0					
ANR	3044091	Identifier	text_get_handle		3043595	0					
ANR	3044092	ArgumentList	tw		3043595	1					
ANR	3044093	Argument	tw		3043595	0					
ANR	3044094	Identifier	tw		3043595	0					
ANR	3044095	ExpressionStatement	image_textwindow ( hwndtext )	534:4:14722:14748	3043595	35	True				
ANR	3044096	CallExpression	image_textwindow ( hwndtext )		3043595	0					
ANR	3044097	Callee	image_textwindow		3043595	0					
ANR	3044098	Identifier	image_textwindow		3043595	0					
ANR	3044099	ArgumentList	hwndtext		3043595	1					
ANR	3044100	Argument	hwndtext		3043595	0					
ANR	3044101	Identifier	hwndtext		3043595	0					
ANR	3044102	ExpressionStatement	"dll_exit_status = new_main ( argc , argv )"	536:4:14755:14793	3043595	36	True				
ANR	3044103	AssignmentExpression	"dll_exit_status = new_main ( argc , argv )"		3043595	0		=			
ANR	3044104	Identifier	dll_exit_status		3043595	0					
ANR	3044105	CallExpression	"new_main ( argc , argv )"		3043595	1					
ANR	3044106	Callee	new_main		3043595	0					
ANR	3044107	Identifier	new_main		3043595	0					
ANR	3044108	ArgumentList	argc		3043595	1					
ANR	3044109	Argument	argc		3043595	0					
ANR	3044110	Identifier	argc		3043595	0					
ANR	3044111	Argument	argv		3043595	1					
ANR	3044112	Identifier	argv		3043595	0					
ANR	3044113	IfStatement	if ( dll_exit_status && ! tw -> quitnow )		3043595	37					
ANR	3044114	Condition	dll_exit_status && ! tw -> quitnow	538:8:14804:14834	3043595	0	True				
ANR	3044115	AndExpression	dll_exit_status && ! tw -> quitnow		3043595	0		&&			
ANR	3044116	Identifier	dll_exit_status		3043595	0					
ANR	3044117	UnaryOperationExpression	! tw -> quitnow		3043595	1					
ANR	3044118	UnaryOperator	!		3043595	0					
ANR	3044119	PtrMemberAccess	tw -> quitnow		3043595	1					
ANR	3044120	Identifier	tw		3043595	0					
ANR	3044121	Identifier	quitnow		3043595	1					
ANR	3044122	CompoundStatement		131:8:3578:3585	3043595	1					
ANR	3044123	IdentifierDeclStatement	MSG msg ;	540:8:14898:14905	3043595	0	True				
ANR	3044124	IdentifierDecl	msg		3043595	0					
ANR	3044125	IdentifierDeclType	MSG		3043595	0					
ANR	3044126	Identifier	msg		3043595	1					
ANR	3044127	ExpressionStatement	"text_puts ( tw , ""\\nClose this window with the close button on the title bar or the system menu.\\n"" )"	541:8:14915:15012	3043595	1	True				
ANR	3044128	CallExpression	"text_puts ( tw , ""\\nClose this window with the close button on the title bar or the system menu.\\n"" )"		3043595	0					
ANR	3044129	Callee	text_puts		3043595	0					
ANR	3044130	Identifier	text_puts		3043595	0					
ANR	3044131	ArgumentList	tw		3043595	1					
ANR	3044132	Argument	tw		3043595	0					
ANR	3044133	Identifier	tw		3043595	0					
ANR	3044134	Argument	"""\\nClose this window with the close button on the title bar or the system menu.\\n"""		3043595	1					
ANR	3044135	PrimaryExpression	"""\\nClose this window with the close button on the title bar or the system menu.\\n"""		3043595	0					
ANR	3044136	IfStatement	if ( IsIconic ( text_get_handle ( tw ) ) )		3043595	2					
ANR	3044137	Condition	IsIconic ( text_get_handle ( tw ) )	542:12:15026:15054	3043595	0	True				
ANR	3044138	CallExpression	IsIconic ( text_get_handle ( tw ) )		3043595	0					
ANR	3044139	Callee	IsIconic		3043595	0					
ANR	3044140	Identifier	IsIconic		3043595	0					
ANR	3044141	ArgumentList	text_get_handle ( tw )		3043595	1					
ANR	3044142	Argument	text_get_handle ( tw )		3043595	0					
ANR	3044143	CallExpression	text_get_handle ( tw )		3043595	0					
ANR	3044144	Callee	text_get_handle		3043595	0					
ANR	3044145	Identifier	text_get_handle		3043595	0					
ANR	3044146	ArgumentList	tw		3043595	1					
ANR	3044147	Argument	tw		3043595	0					
ANR	3044148	Identifier	tw		3043595	0					
ANR	3044149	ExpressionStatement	"ShowWindow ( text_get_handle ( tw ) , SW_SHOWNORMAL )"	543:12:15069:15115	3043595	1	True				
ANR	3044150	CallExpression	"ShowWindow ( text_get_handle ( tw ) , SW_SHOWNORMAL )"		3043595	0					
ANR	3044151	Callee	ShowWindow		3043595	0					
ANR	3044152	Identifier	ShowWindow		3043595	0					
ANR	3044153	ArgumentList	text_get_handle ( tw )		3043595	1					
ANR	3044154	Argument	text_get_handle ( tw )		3043595	0					
ANR	3044155	CallExpression	text_get_handle ( tw )		3043595	0					
ANR	3044156	Callee	text_get_handle		3043595	0					
ANR	3044157	Identifier	text_get_handle		3043595	0					
ANR	3044158	ArgumentList	tw		3043595	1					
ANR	3044159	Argument	tw		3043595	0					
ANR	3044160	Identifier	tw		3043595	0					
ANR	3044161	Argument	SW_SHOWNORMAL		3043595	1					
ANR	3044162	Identifier	SW_SHOWNORMAL		3043595	0					
ANR	3044163	ExpressionStatement	BringWindowToTop ( text_get_handle ( tw ) )	544:8:15125:15162	3043595	3	True				
ANR	3044164	CallExpression	BringWindowToTop ( text_get_handle ( tw ) )		3043595	0					
ANR	3044165	Callee	BringWindowToTop		3043595	0					
ANR	3044166	Identifier	BringWindowToTop		3043595	0					
ANR	3044167	ArgumentList	text_get_handle ( tw )		3043595	1					
ANR	3044168	Argument	text_get_handle ( tw )		3043595	0					
ANR	3044169	CallExpression	text_get_handle ( tw )		3043595	0					
ANR	3044170	Callee	text_get_handle		3043595	0					
ANR	3044171	Identifier	text_get_handle		3043595	0					
ANR	3044172	ArgumentList	tw		3043595	1					
ANR	3044173	Argument	tw		3043595	0					
ANR	3044174	Identifier	tw		3043595	0					
ANR	3044175	ExpressionStatement	"FlashWindow ( text_get_handle ( tw ) , TRUE )"	545:8:15204:15242	3043595	4	True				
ANR	3044176	CallExpression	"FlashWindow ( text_get_handle ( tw ) , TRUE )"		3043595	0					
ANR	3044177	Callee	FlashWindow		3043595	0					
ANR	3044178	Identifier	FlashWindow		3043595	0					
ANR	3044179	ArgumentList	text_get_handle ( tw )		3043595	1					
ANR	3044180	Argument	text_get_handle ( tw )		3043595	0					
ANR	3044181	CallExpression	text_get_handle ( tw )		3043595	0					
ANR	3044182	Callee	text_get_handle		3043595	0					
ANR	3044183	Identifier	text_get_handle		3043595	0					
ANR	3044184	ArgumentList	tw		3043595	1					
ANR	3044185	Argument	tw		3043595	0					
ANR	3044186	Identifier	tw		3043595	0					
ANR	3044187	Argument	TRUE		3043595	1					
ANR	3044188	Identifier	TRUE		3043595	0					
ANR	3044189	WhileStatement	"while ( ! tw -> quitnow && GetMessage ( & msg , ( HWND ) NULL , 0 , 0 ) )"		3043595	5					
ANR	3044190	Condition	"! tw -> quitnow && GetMessage ( & msg , ( HWND ) NULL , 0 , 0 )"	547:15:15306:15355	3043595	0	True				
ANR	3044191	AndExpression	"! tw -> quitnow && GetMessage ( & msg , ( HWND ) NULL , 0 , 0 )"		3043595	0		&&			
ANR	3044192	UnaryOperationExpression	! tw -> quitnow		3043595	0					
ANR	3044193	UnaryOperator	!		3043595	0					
ANR	3044194	PtrMemberAccess	tw -> quitnow		3043595	1					
ANR	3044195	Identifier	tw		3043595	0					
ANR	3044196	Identifier	quitnow		3043595	1					
ANR	3044197	CallExpression	"GetMessage ( & msg , ( HWND ) NULL , 0 , 0 )"		3043595	1					
ANR	3044198	Callee	GetMessage		3043595	0					
ANR	3044199	Identifier	GetMessage		3043595	0					
ANR	3044200	ArgumentList	& msg		3043595	1					
ANR	3044201	Argument	& msg		3043595	0					
ANR	3044202	UnaryOperationExpression	& msg		3043595	0					
ANR	3044203	UnaryOperator	&		3043595	0					
ANR	3044204	Identifier	msg		3043595	1					
ANR	3044205	Argument	( HWND ) NULL		3043595	1					
ANR	3044206	CastExpression	( HWND ) NULL		3043595	0					
ANR	3044207	CastTarget	HWND		3043595	0					
ANR	3044208	Identifier	NULL		3043595	1					
ANR	3044209	Argument	0		3043595	2					
ANR	3044210	PrimaryExpression	0		3043595	0					
ANR	3044211	Argument	0		3043595	3					
ANR	3044212	PrimaryExpression	0		3043595	0					
ANR	3044213	CompoundStatement		138:67:4038:4038	3043595	1					
ANR	3044214	ExpressionStatement	TranslateMessage ( & msg )	548:12:15372:15394	3043595	0	True				
ANR	3044215	CallExpression	TranslateMessage ( & msg )		3043595	0					
ANR	3044216	Callee	TranslateMessage		3043595	0					
ANR	3044217	Identifier	TranslateMessage		3043595	0					
ANR	3044218	ArgumentList	& msg		3043595	1					
ANR	3044219	Argument	& msg		3043595	0					
ANR	3044220	UnaryOperationExpression	& msg		3043595	0					
ANR	3044221	UnaryOperator	&		3043595	0					
ANR	3044222	Identifier	msg		3043595	1					
ANR	3044223	ExpressionStatement	DispatchMessage ( & msg )	549:12:15408:15429	3043595	1	True				
ANR	3044224	CallExpression	DispatchMessage ( & msg )		3043595	0					
ANR	3044225	Callee	DispatchMessage		3043595	0					
ANR	3044226	Identifier	DispatchMessage		3043595	0					
ANR	3044227	ArgumentList	& msg		3043595	1					
ANR	3044228	Argument	& msg		3043595	0					
ANR	3044229	UnaryOperationExpression	& msg		3043595	0					
ANR	3044230	UnaryOperator	&		3043595	0					
ANR	3044231	Identifier	msg		3043595	1					
ANR	3044232	IfStatement	"if ( text_getpos ( tw , & x , & y , & cx , & cy ) == 0 )"		3043595	38					
ANR	3044233	Condition	"text_getpos ( tw , & x , & y , & cx , & cy ) == 0"	554:8:15492:15529	3043595	0	True				
ANR	3044234	EqualityExpression	"text_getpos ( tw , & x , & y , & cx , & cy ) == 0"		3043595	0		==			
ANR	3044235	CallExpression	"text_getpos ( tw , & x , & y , & cx , & cy )"		3043595	0					
ANR	3044236	Callee	text_getpos		3043595	0					
ANR	3044237	Identifier	text_getpos		3043595	0					
ANR	3044238	ArgumentList	tw		3043595	1					
ANR	3044239	Argument	tw		3043595	0					
ANR	3044240	Identifier	tw		3043595	0					
ANR	3044241	Argument	& x		3043595	1					
ANR	3044242	UnaryOperationExpression	& x		3043595	0					
ANR	3044243	UnaryOperator	&		3043595	0					
ANR	3044244	Identifier	x		3043595	1					
ANR	3044245	Argument	& y		3043595	2					
ANR	3044246	UnaryOperationExpression	& y		3043595	0					
ANR	3044247	UnaryOperator	&		3043595	0					
ANR	3044248	Identifier	y		3043595	1					
ANR	3044249	Argument	& cx		3043595	3					
ANR	3044250	UnaryOperationExpression	& cx		3043595	0					
ANR	3044251	UnaryOperator	&		3043595	0					
ANR	3044252	Identifier	cx		3043595	1					
ANR	3044253	Argument	& cy		3043595	4					
ANR	3044254	UnaryOperationExpression	& cy		3043595	0					
ANR	3044255	UnaryOperator	&		3043595	0					
ANR	3044256	Identifier	cy		3043595	1					
ANR	3044257	PrimaryExpression	0		3043595	1					
ANR	3044258	CompoundStatement		145:48:4212:4212	3043595	1					
ANR	3044259	ExpressionStatement	"sprintf ( winposbuf , ""%d %d %d %d"" , x , y , cx , cy )"	555:8:15542:15589	3043595	0	True				
ANR	3044260	CallExpression	"sprintf ( winposbuf , ""%d %d %d %d"" , x , y , cx , cy )"		3043595	0					
ANR	3044261	Callee	sprintf		3043595	0					
ANR	3044262	Identifier	sprintf		3043595	0					
ANR	3044263	ArgumentList	winposbuf		3043595	1					
ANR	3044264	Argument	winposbuf		3043595	0					
ANR	3044265	Identifier	winposbuf		3043595	0					
ANR	3044266	Argument	"""%d %d %d %d"""		3043595	1					
ANR	3044267	PrimaryExpression	"""%d %d %d %d"""		3043595	0					
ANR	3044268	Argument	x		3043595	2					
ANR	3044269	Identifier	x		3043595	0					
ANR	3044270	Argument	y		3043595	3					
ANR	3044271	Identifier	y		3043595	0					
ANR	3044272	Argument	cx		3043595	4					
ANR	3044273	Identifier	cx		3043595	0					
ANR	3044274	Argument	cy		3043595	5					
ANR	3044275	Identifier	cy		3043595	0					
ANR	3044276	ExpressionStatement	"win_set_reg_value ( ""Text"" , winposbuf )"	556:8:15599:15635	3043595	1	True				
ANR	3044277	CallExpression	"win_set_reg_value ( ""Text"" , winposbuf )"		3043595	0					
ANR	3044278	Callee	win_set_reg_value		3043595	0					
ANR	3044279	Identifier	win_set_reg_value		3043595	0					
ANR	3044280	ArgumentList	"""Text"""		3043595	1					
ANR	3044281	Argument	"""Text"""		3043595	0					
ANR	3044282	PrimaryExpression	"""Text"""		3043595	0					
ANR	3044283	Argument	winposbuf		3043595	1					
ANR	3044284	Identifier	winposbuf		3043595	0					
ANR	3044285	ExpressionStatement	text_destroy ( tw )	559:4:15648:15664	3043595	39	True				
ANR	3044286	CallExpression	text_destroy ( tw )		3043595	0					
ANR	3044287	Callee	text_destroy		3043595	0					
ANR	3044288	Identifier	text_destroy		3043595	0					
ANR	3044289	ArgumentList	tw		3043595	1					
ANR	3044290	Argument	tw		3043595	0					
ANR	3044291	Identifier	tw		3043595	0					
ANR	3044292	ExpressionStatement	tw = NULL	560:4:15670:15679	3043595	40	True				
ANR	3044293	AssignmentExpression	tw = NULL		3043595	0		=			
ANR	3044294	Identifier	tw		3043595	0					
ANR	3044295	Identifier	NULL		3043595	1					
ANR	3044296	ReturnStatement	return dll_exit_status ;	562:4:15686:15708	3043595	41	True				
ANR	3044297	Identifier	dll_exit_status		3043595	0					
ANR	3044298	ReturnType	int PASCAL		3043595	1					
ANR	3044299	Identifier	WinMain		3043595	2					
ANR	3044300	ParameterList	"HINSTANCE hInstance , HINSTANCE hPrevInstance , LPSTR lpszCmdLine , int cmdShow"		3043595	3					
ANR	3044301	Parameter	HINSTANCE hInstance	409:8:11241:11259	3043595	0	True				
ANR	3044302	ParameterType	HINSTANCE		3043595	0					
ANR	3044303	Identifier	hInstance		3043595	1					
ANR	3044304	Parameter	HINSTANCE hPrevInstance	409:29:11262:11284	3043595	1	True				
ANR	3044305	ParameterType	HINSTANCE		3043595	0					
ANR	3044306	Identifier	hPrevInstance		3043595	1					
ANR	3044307	Parameter	LPSTR lpszCmdLine	409:54:11287:11303	3043595	2	True				
ANR	3044308	ParameterType	LPSTR		3043595	0					
ANR	3044309	Identifier	lpszCmdLine		3043595	1					
ANR	3044310	Parameter	int cmdShow	409:73:11306:11316	3043595	3	True				
ANR	3044311	ParameterType	int		3043595	0					
ANR	3044312	Identifier	cmdShow		3043595	1					
ANR	3044313	CFGEntryNode	ENTRY		3043595		True				
ANR	3044314	CFGExitNode	EXIT		3043595		True				
ANR	3044315	Symbol	msg		3043595						
ANR	3044316	Symbol	MB_ICONHAND		3043595						
ANR	3044317	Symbol	tw		3043595						
ANR	3044318	Symbol	stdout		3043595						
ANR	3044319	Symbol	* argv		3043595						
ANR	3044320	Symbol	hicon		3043595						
ANR	3044321	Symbol	strlen		3043595						
ANR	3044322	Symbol	len		3043595						
ANR	3044323	Symbol	szAppName		3043595						
ANR	3044324	Symbol	MB_OK		3043595						
ANR	3044325	Symbol	tw -> quitnow		3043595						
ANR	3044326	Symbol	* argc		3043595						
ANR	3044327	Symbol	dll_exit_status		3043595						
ANR	3044328	Symbol	& msg		3043595						
ANR	3044329	Symbol	& cy		3043595						
ANR	3044330	Symbol	hInstance		3043595						
ANR	3044331	Symbol	NULL		3043595						
ANR	3044332	Symbol	TRUE		3043595						
ANR	3044333	Symbol	* tw		3043595						
ANR	3044334	Symbol	MAXCMDTOKENS		3043595						
ANR	3044335	Symbol	MB_ICONSTOP		3043595						
ANR	3044336	Symbol	sscanf		3043595						
ANR	3044337	Symbol	text_new		3043595						
ANR	3044338	Symbol	& len		3043595						
ANR	3044339	Symbol	& cx		3043595						
ANR	3044340	Symbol	text_get_handle		3043595						
ANR	3044341	Symbol	text_getpos		3043595						
ANR	3044342	Symbol	text_create		3043595						
ANR	3044343	Symbol	SW_SHOWNORMAL		3043595						
ANR	3044344	Symbol	lstrlen		3043595						
ANR	3044345	Symbol	GetCommandLine		3043595						
ANR	3044346	Symbol	LoadIcon		3043595						
ANR	3044347	Symbol	argv		3043595						
ANR	3044348	Symbol	* d ++		3043595						
ANR	3044349	Symbol	pstart		3043595						
ANR	3044350	Symbol	ghInstance		3043595						
ANR	3044351	Symbol	MAKEINTRESOURCE		3043595						
ANR	3044352	Symbol	hwndtext		3043595						
ANR	3044353	Symbol	argc		3043595						
ANR	3044354	Symbol	malloc		3043595						
ANR	3044355	Symbol	d		3043595						
ANR	3044356	Symbol	GSTEXT_ICON		3043595						
ANR	3044357	Symbol	e		3043595						
ANR	3044358	Symbol	cmdShow		3043595						
ANR	3044359	Symbol	IsIconic		3043595						
ANR	3044360	Symbol	* p ++		3043595						
ANR	3044361	Symbol	new_main		3043595						
ANR	3044362	Symbol	command		3043595						
ANR	3044363	Symbol	p		3043595						
ANR	3044364	Symbol	args		3043595						
ANR	3044365	Symbol	win_get_reg_value		3043595						
ANR	3044366	Symbol	lpszCmdLine		3043595						
ANR	3044367	Symbol	winposbuf		3043595						
ANR	3044368	Symbol	cx		3043595						
ANR	3044369	Symbol	cy		3043595						
ANR	3044370	Symbol	x		3043595						
ANR	3044371	Symbol	y		3043595						
ANR	3044372	Symbol	FALSE		3043595						
ANR	3044373	Symbol	* p		3043595						
ANR	3044374	Symbol	hPrevInstance		3043595						
ANR	3044375	Symbol	GetMessage		3043595						
ANR	3044376	Symbol	& x		3043595						
ANR	3044377	Symbol	& y		3043595						
