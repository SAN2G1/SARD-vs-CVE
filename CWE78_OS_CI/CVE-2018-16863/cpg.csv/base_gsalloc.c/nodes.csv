command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	418720	File	data/converged/CVE-2018-16863_ghostpdl/base_gsalloc.c								
ANR	418721	DeclStmt									
ANR	418722	Decl							gs_id	gs_id	hdr_id
ANR	418723	Function	get_mem_hdr_id	34:0:1026:1120							
ANR	418724	FunctionDef	get_mem_hdr_id (void * ptr)		418723	0					
ANR	418725	CompoundStatement		35:0:1059:1120	418723	0					
ANR	418726	ReturnStatement	return ( * ( ( hdr_id_t * ) ( ( byte * ) ptr ) - HDR_ID_OFFSET ) ) ;	36:4:1065:1118	418723	0	True				
ANR	418727	UnaryOperationExpression	* ( ( hdr_id_t * ) ( ( byte * ) ptr ) - HDR_ID_OFFSET )		418723	0					
ANR	418728	UnaryOperator	*		418723	0					
ANR	418729	AdditiveExpression	( hdr_id_t * ) ( ( byte * ) ptr ) - HDR_ID_OFFSET		418723	1		-			
ANR	418730	CastExpression	( hdr_id_t * ) ( ( byte * ) ptr )		418723	0					
ANR	418731	CastTarget	hdr_id_t *		418723	0					
ANR	418732	CastExpression	( byte * ) ptr		418723	1					
ANR	418733	CastTarget	byte *		418723	0					
ANR	418734	Identifier	ptr		418723	1					
ANR	418735	Identifier	HDR_ID_OFFSET		418723	1					
ANR	418736	ReturnType	gs_id		418723	1					
ANR	418737	Identifier	get_mem_hdr_id		418723	2					
ANR	418738	ParameterList	void * ptr		418723	3					
ANR	418739	Parameter	void * ptr	34:22:1048:1056	418723	0	True				
ANR	418740	ParameterType	void *		418723	0					
ANR	418741	Identifier	ptr		418723	1					
ANR	418742	CFGEntryNode	ENTRY		418723		True				
ANR	418743	CFGExitNode	EXIT		418723		True				
ANR	418744	Symbol	* ( ( hdr_id_t * ) ( ( byte * ) ptr ) - HDR_ID_OFFSET )		418723						
ANR	418745	Symbol	HDR_ID_OFFSET		418723						
ANR	418746	Symbol	* ptr		418723						
ANR	418747	Symbol	* HDR_ID_OFFSET		418723						
ANR	418748	Symbol	ptr		418723						
ANR	418749	Function	alloc_trace_space	62:0:1937:2074							
ANR	418750	FunctionDef	alloc_trace_space (const gs_ref_memory_t * imem)		418749	0					
ANR	418751	CompoundStatement		64:0:1995:2074	418749	0					
ANR	418752	ReturnStatement	return imem -> space + ( imem -> stable_memory == ( const gs_memory_t * ) imem ) ;	65:4:2001:2072	418749	0	True				
ANR	418753	AdditiveExpression	imem -> space + ( imem -> stable_memory == ( const gs_memory_t * ) imem )		418749	0		+			
ANR	418754	PtrMemberAccess	imem -> space		418749	0					
ANR	418755	Identifier	imem		418749	0					
ANR	418756	Identifier	space		418749	1					
ANR	418757	EqualityExpression	imem -> stable_memory == ( const gs_memory_t * ) imem		418749	1		==			
ANR	418758	PtrMemberAccess	imem -> stable_memory		418749	0					
ANR	418759	Identifier	imem		418749	0					
ANR	418760	Identifier	stable_memory		418749	1					
ANR	418761	CastExpression	( const gs_memory_t * ) imem		418749	1					
ANR	418762	CastTarget	const gs_memory_t *		418749	0					
ANR	418763	Identifier	imem		418749	1					
ANR	418764	ReturnType	static int		418749	1					
ANR	418765	Identifier	alloc_trace_space		418749	2					
ANR	418766	ParameterList	const gs_ref_memory_t * imem		418749	3					
ANR	418767	Parameter	const gs_ref_memory_t * imem	63:18:1966:1992	418749	0	True				
ANR	418768	ParameterType	const gs_ref_memory_t *		418749	0					
ANR	418769	Identifier	imem		418749	1					
ANR	418770	CFGEntryNode	ENTRY		418749		True				
ANR	418771	CFGExitNode	EXIT		418749		True				
ANR	418772	Symbol	imem -> space		418749						
ANR	418773	Symbol	imem -> stable_memory		418749						
ANR	418774	Symbol	imem		418749						
ANR	418775	Symbol	* imem		418749						
ANR	418776	Function	alloc_trace	67:0:2076:2546							
ANR	418777	FunctionDef	"alloc_trace (const char * chars , gs_ref_memory_t * imem , client_name_t cname , gs_memory_type_ptr_t stype , uint size , const void * ptr)"		418776	0					
ANR	418778	CompoundStatement		70:0:2232:2546	418776	0					
ANR	418779	ExpressionStatement	"if_debug7m ( 'A' , ( const gs_memory_t * ) imem , ""[a%d%s]%s %s(%u) %s0x%lx\\n"" , alloc_trace_space ( imem ) , chars , client_name_string ( cname ) , ( ptr == 0 || stype == 0 ? """" : struct_type_name_string ( stype ) ) , size , ( chars [ 1 ] == '+' ? ""= "" : """" ) , ( ulong ) ptr )"	71:4:2238:2544	418776	0	True				
ANR	418780	CallExpression	"if_debug7m ( 'A' , ( const gs_memory_t * ) imem , ""[a%d%s]%s %s(%u) %s0x%lx\\n"" , alloc_trace_space ( imem ) , chars , client_name_string ( cname ) , ( ptr == 0 || stype == 0 ? """" : struct_type_name_string ( stype ) ) , size , ( chars [ 1 ] == '+' ? ""= "" : """" ) , ( ulong ) ptr )"		418776	0					
ANR	418781	Callee	if_debug7m		418776	0					
ANR	418782	Identifier	if_debug7m		418776	0					
ANR	418783	ArgumentList	'A'		418776	1					
ANR	418784	Argument	'A'		418776	0					
ANR	418785	PrimaryExpression	'A'		418776	0					
ANR	418786	Argument	( const gs_memory_t * ) imem		418776	1					
ANR	418787	CastExpression	( const gs_memory_t * ) imem		418776	0					
ANR	418788	CastTarget	const gs_memory_t *		418776	0					
ANR	418789	Identifier	imem		418776	1					
ANR	418790	Argument	"""[a%d%s]%s %s(%u) %s0x%lx\\n"""		418776	2					
ANR	418791	PrimaryExpression	"""[a%d%s]%s %s(%u) %s0x%lx\\n"""		418776	0					
ANR	418792	Argument	alloc_trace_space ( imem )		418776	3					
ANR	418793	CallExpression	alloc_trace_space ( imem )		418776	0					
ANR	418794	Callee	alloc_trace_space		418776	0					
ANR	418795	Identifier	alloc_trace_space		418776	0					
ANR	418796	ArgumentList	imem		418776	1					
ANR	418797	Argument	imem		418776	0					
ANR	418798	Identifier	imem		418776	0					
ANR	418799	Argument	chars		418776	4					
ANR	418800	Identifier	chars		418776	0					
ANR	418801	Argument	client_name_string ( cname )		418776	5					
ANR	418802	CallExpression	client_name_string ( cname )		418776	0					
ANR	418803	Callee	client_name_string		418776	0					
ANR	418804	Identifier	client_name_string		418776	0					
ANR	418805	ArgumentList	cname		418776	1					
ANR	418806	Argument	cname		418776	0					
ANR	418807	Identifier	cname		418776	0					
ANR	418808	Argument	"ptr == 0 || stype == 0 ? """" : struct_type_name_string ( stype )"		418776	6					
ANR	418809	ConditionalExpression	"ptr == 0 || stype == 0 ? """" : struct_type_name_string ( stype )"		418776	0					
ANR	418810	Condition	ptr == 0 || stype == 0		418776	0					
ANR	418811	OrExpression	ptr == 0 || stype == 0		418776	0		||			
ANR	418812	EqualityExpression	ptr == 0		418776	0		==			
ANR	418813	Identifier	ptr		418776	0					
ANR	418814	PrimaryExpression	0		418776	1					
ANR	418815	EqualityExpression	stype == 0		418776	1		==			
ANR	418816	Identifier	stype		418776	0					
ANR	418817	PrimaryExpression	0		418776	1					
ANR	418818	PrimaryExpression	""""""		418776	1					
ANR	418819	CallExpression	struct_type_name_string ( stype )		418776	2					
ANR	418820	Callee	struct_type_name_string		418776	0					
ANR	418821	Identifier	struct_type_name_string		418776	0					
ANR	418822	ArgumentList	stype		418776	1					
ANR	418823	Argument	stype		418776	0					
ANR	418824	Identifier	stype		418776	0					
ANR	418825	Argument	size		418776	7					
ANR	418826	Identifier	size		418776	0					
ANR	418827	Argument	"chars [ 1 ] == '+' ? ""= "" : """""		418776	8					
ANR	418828	ConditionalExpression	"chars [ 1 ] == '+' ? ""= "" : """""		418776	0					
ANR	418829	Condition	chars [ 1 ] == '+'		418776	0					
ANR	418830	EqualityExpression	chars [ 1 ] == '+'		418776	0		==			
ANR	418831	ArrayIndexing	chars [ 1 ]		418776	0					
ANR	418832	Identifier	chars		418776	0					
ANR	418833	PrimaryExpression	1		418776	1					
ANR	418834	PrimaryExpression	'+'		418776	1					
ANR	418835	PrimaryExpression	"""= """		418776	1					
ANR	418836	PrimaryExpression	""""""		418776	2					
ANR	418837	Argument	( ulong ) ptr		418776	9					
ANR	418838	CastExpression	( ulong ) ptr		418776	0					
ANR	418839	CastTarget	ulong		418776	0					
ANR	418840	Identifier	ptr		418776	1					
ANR	418841	ReturnType	static void		418776	1					
ANR	418842	Identifier	alloc_trace		418776	2					
ANR	418843	ParameterList	"const char * chars , gs_ref_memory_t * imem , client_name_t cname , gs_memory_type_ptr_t stype , uint size , const void * ptr"		418776	3					
ANR	418844	Parameter	const char * chars	68:12:2100:2116	418776	0	True				
ANR	418845	ParameterType	const char *		418776	0					
ANR	418846	Identifier	chars		418776	1					
ANR	418847	Parameter	gs_ref_memory_t * imem	68:31:2119:2140	418776	1	True				
ANR	418848	ParameterType	gs_ref_memory_t *		418776	0					
ANR	418849	Identifier	imem		418776	1					
ANR	418850	Parameter	client_name_t cname	68:55:2143:2161	418776	2	True				
ANR	418851	ParameterType	client_name_t		418776	0					
ANR	418852	Identifier	cname		418776	1					
ANR	418853	Parameter	gs_memory_type_ptr_t stype	69:12:2176:2201	418776	3	True				
ANR	418854	ParameterType	gs_memory_type_ptr_t		418776	0					
ANR	418855	Identifier	stype		418776	1					
ANR	418856	Parameter	uint size	69:40:2204:2212	418776	4	True				
ANR	418857	ParameterType	uint		418776	0					
ANR	418858	Identifier	size		418776	1					
ANR	418859	Parameter	const void * ptr	69:51:2215:2229	418776	5	True				
ANR	418860	ParameterType	const void *		418776	0					
ANR	418861	Identifier	ptr		418776	1					
ANR	418862	CFGEntryNode	ENTRY		418776		True				
ANR	418863	CFGExitNode	EXIT		418776		True				
ANR	418864	Symbol	struct_type_name_string		418776						
ANR	418865	Symbol	* chars		418776						
ANR	418866	Symbol	size		418776						
ANR	418867	Symbol	stype		418776						
ANR	418868	Symbol	cname		418776						
ANR	418869	Symbol	client_name_string		418776						
ANR	418870	Symbol	imem		418776						
ANR	418871	Symbol	chars		418776						
ANR	418872	Symbol	alloc_trace_space		418776						
ANR	418873	Symbol	ptr		418776						
ANR	418874	Function	alloc_size_is_ok	77:0:2548:2665							
ANR	418875	FunctionDef	alloc_size_is_ok (gs_memory_type_ptr_t stype)		418874	0					
ANR	418876	CompoundStatement		79:0:2605:2665	418874	0					
ANR	418877	ReturnStatement	return ( stype -> ssize > 0 && stype -> ssize < 0x200000 ) ;	80:4:2611:2663	418874	0	True				
ANR	418878	AndExpression	stype -> ssize > 0 && stype -> ssize < 0x200000		418874	0		&&			
ANR	418879	RelationalExpression	stype -> ssize > 0		418874	0		>			
ANR	418880	PtrMemberAccess	stype -> ssize		418874	0					
ANR	418881	Identifier	stype		418874	0					
ANR	418882	Identifier	ssize		418874	1					
ANR	418883	PrimaryExpression	0		418874	1					
ANR	418884	RelationalExpression	stype -> ssize < 0x200000		418874	1		<			
ANR	418885	PtrMemberAccess	stype -> ssize		418874	0					
ANR	418886	Identifier	stype		418874	0					
ANR	418887	Identifier	ssize		418874	1					
ANR	418888	PrimaryExpression	0x200000		418874	1					
ANR	418889	ReturnType	static bool		418874	1					
ANR	418890	Identifier	alloc_size_is_ok		418874	2					
ANR	418891	ParameterList	gs_memory_type_ptr_t stype		418874	3					
ANR	418892	Parameter	gs_memory_type_ptr_t stype	78:17:2577:2602	418874	0	True				
ANR	418893	ParameterType	gs_memory_type_ptr_t		418874	0					
ANR	418894	Identifier	stype		418874	1					
ANR	418895	CFGEntryNode	ENTRY		418874		True				
ANR	418896	CFGExitNode	EXIT		418874		True				
ANR	418897	Symbol	stype -> ssize		418874						
ANR	418898	Symbol	stype		418874						
ANR	418899	Symbol	* stype		418874						
ANR	418900	ClassDef	<unnamed>	121:8:3919:4036							
ANR	418901	DeclStmt									
ANR	418902	Decl									alloc_flags_t
ANR	418903	DeclStmt									
ANR	418904	Decl							void	"void ( gs_ref_memory_t * mem , void * bottom , void * top )"	remove_range_from_freelist
ANR	418905	DeclStmt									
ANR	418906	Decl							obj_header_t	"obj_header_t * ( gs_ref_memory_t * mem , uint size )"	large_freelist_alloc
ANR	418907	DeclStmt									
ANR	418908	Decl							obj_header_t	"obj_header_t * ( gs_ref_memory_t * mem , unsigned request_size )"	scavenge_low_free
ANR	418909	DeclStmt									
ANR	418910	Decl							ulong	ulong ( gs_ref_memory_t * )	compute_free_objects
ANR	418911	DeclStmt									
ANR	418912	Decl							obj_header_t	"obj_header_t * ( gs_ref_memory_t * , ulong , gs_memory_type_ptr_t , alloc_flags_t , client_name_t )"	alloc_obj
ANR	418913	DeclStmt									
ANR	418914	Decl							void	"void ( clump_t * cp , gs_ref_memory_t * mem )"	consolidate_clump_free
ANR	418915	DeclStmt									
ANR	418916	Decl							void	"void ( gs_ref_memory_t * mem , obj_header_t * obj , uint size , clump_t * cp )"	trim_obj
ANR	418917	DeclStmt									
ANR	418918	Decl							clump_t	"clump_t * ( gs_ref_memory_t * , ulong , bool , client_name_t )"	alloc_acquire_clump
ANR	418919	DeclStmt									
ANR	418920	Decl							clump_t	"clump_t * ( gs_ref_memory_t * , ulong , client_name_t )"	alloc_add_clump
ANR	418921	DeclStmt									
ANR	418922	Decl							void	void ( gs_ref_memory_t * )	alloc_close_clump
ANR	418923	DeclStmt									
ANR	418924	Decl							const gs_memory_procs_t	const gs_memory_procs_t	gs_ref_memory_procs
ANR	418925	Function	broken_splay	224:0:7948:8015							
ANR	418926	FunctionDef	broken_splay ()		418925	0					
ANR	418927	CompoundStatement		226:0:7975:8015	418925	0					
ANR	418928	ExpressionStatement	"dlprintf ( ""Broken splay tree!\\n"" )"	227:4:7981:8013	418925	0	True				
ANR	418929	CallExpression	"dlprintf ( ""Broken splay tree!\\n"" )"		418925	0					
ANR	418930	Callee	dlprintf		418925	0					
ANR	418931	Identifier	dlprintf		418925	0					
ANR	418932	ArgumentList	"""Broken splay tree!\\n"""		418925	1					
ANR	418933	Argument	"""Broken splay tree!\\n"""		418925	0					
ANR	418934	PrimaryExpression	"""Broken splay tree!\\n"""		418925	0					
ANR	418935	ReturnType	static void		418925	1					
ANR	418936	Identifier	broken_splay		418925	2					
ANR	418937	ParameterList			418925	3					
ANR	418938	CFGEntryNode	ENTRY		418925		True				
ANR	418939	CFGExitNode	EXIT		418925		True				
ANR	418940	Function	sanity_check_rec	230:0:8018:9510							
ANR	418941	FunctionDef	sanity_check_rec (clump_t * cp)		418940	0					
ANR	418942	CompoundStatement		231:0:8053:9510	418940	0					
ANR	418943	IdentifierDeclStatement	splay_dir_t from = SPLAY_FROM_ABOVE ;	232:4:8059:8094	418940	0	True				
ANR	418944	IdentifierDecl	from = SPLAY_FROM_ABOVE		418940	0					
ANR	418945	IdentifierDeclType	splay_dir_t		418940	0					
ANR	418946	Identifier	from		418940	1					
ANR	418947	AssignmentExpression	from = SPLAY_FROM_ABOVE		418940	2		=			
ANR	418948	Identifier	SPLAY_FROM_ABOVE		418940	0					
ANR	418949	Identifier	SPLAY_FROM_ABOVE		418940	1					
ANR	418950	WhileStatement	while ( cp )		418940	1					
ANR	418951	Condition	cp	234:11:8108:8109	418940	0	True				
ANR	418952	Identifier	cp		418940	0					
ANR	418953	CompoundStatement		5:4:62:62	418940	1					
ANR	418954	IfStatement	if ( from == SPLAY_FROM_ABOVE )		418940	0					
ANR	418955	Condition	from == SPLAY_FROM_ABOVE	236:12:8130:8153	418940	0	True				
ANR	418956	EqualityExpression	from == SPLAY_FROM_ABOVE		418940	0		==			
ANR	418957	Identifier	from		418940	0					
ANR	418958	Identifier	SPLAY_FROM_ABOVE		418940	1					
ANR	418959	CompoundStatement		7:8:110:110	418940	1					
ANR	418960	IfStatement	if ( cp -> left )		418940	0					
ANR	418961	Condition	cp -> left	239:16:8239:8246	418940	0	True				
ANR	418962	PtrMemberAccess	cp -> left		418940	0					
ANR	418963	Identifier	cp		418940	0					
ANR	418964	Identifier	left		418940	1					
ANR	418965	CompoundStatement		10:12:207:207	418940	1					
ANR	418966	IfStatement	if ( cp -> left -> cbase > cp -> cbase || cp -> left -> parent != cp )		418940	0					
ANR	418967	Condition	cp -> left -> cbase > cp -> cbase || cp -> left -> parent != cp	241:20:8283:8335	418940	0	True				
ANR	418968	OrExpression	cp -> left -> cbase > cp -> cbase || cp -> left -> parent != cp		418940	0		||			
ANR	418969	RelationalExpression	cp -> left -> cbase > cp -> cbase		418940	0		>			
ANR	418970	PtrMemberAccess	cp -> left -> cbase		418940	0					
ANR	418971	PtrMemberAccess	cp -> left		418940	0					
ANR	418972	Identifier	cp		418940	0					
ANR	418973	Identifier	left		418940	1					
ANR	418974	Identifier	cbase		418940	1					
ANR	418975	PtrMemberAccess	cp -> cbase		418940	1					
ANR	418976	Identifier	cp		418940	0					
ANR	418977	Identifier	cbase		418940	1					
ANR	418978	EqualityExpression	cp -> left -> parent != cp		418940	1		!=			
ANR	418979	PtrMemberAccess	cp -> left -> parent		418940	0					
ANR	418980	PtrMemberAccess	cp -> left		418940	0					
ANR	418981	Identifier	cp		418940	0					
ANR	418982	Identifier	left		418940	1					
ANR	418983	Identifier	parent		418940	1					
ANR	418984	Identifier	cp		418940	1					
ANR	418985	ExpressionStatement	broken_splay ( )	242:20:8358:8372	418940	1	True				
ANR	418986	CallExpression	broken_splay ( )		418940	0					
ANR	418987	Callee	broken_splay		418940	0					
ANR	418988	Identifier	broken_splay		418940	0					
ANR	418989	ArgumentList			418940	1					
ANR	418990	ExpressionStatement	cp = cp -> left	243:16:8390:8403	418940	1	True				
ANR	418991	AssignmentExpression	cp = cp -> left		418940	0		=			
ANR	418992	Identifier	cp		418940	0					
ANR	418993	PtrMemberAccess	cp -> left		418940	1					
ANR	418994	Identifier	cp		418940	0					
ANR	418995	Identifier	left		418940	1					
ANR	418996	ExpressionStatement	from = SPLAY_FROM_ABOVE	244:16:8421:8444	418940	2	True				
ANR	418997	AssignmentExpression	from = SPLAY_FROM_ABOVE		418940	0		=			
ANR	418998	Identifier	from		418940	0					
ANR	418999	Identifier	SPLAY_FROM_ABOVE		418940	1					
ANR	419000	ContinueStatement	continue ;	245:16:8462:8470	418940	3	True				
ANR	419001	ExpressionStatement	from = SPLAY_FROM_LEFT	248:12:8579:8601	418940	1	True				
ANR	419002	AssignmentExpression	from = SPLAY_FROM_LEFT		418940	0		=			
ANR	419003	Identifier	from		418940	0					
ANR	419004	Identifier	SPLAY_FROM_LEFT		418940	1					
ANR	419005	IfStatement	if ( from == SPLAY_FROM_LEFT )		418940	1					
ANR	419006	Condition	from == SPLAY_FROM_LEFT	250:12:8625:8647	418940	0	True				
ANR	419007	EqualityExpression	from == SPLAY_FROM_LEFT		418940	0		==			
ANR	419008	Identifier	from		418940	0					
ANR	419009	Identifier	SPLAY_FROM_LEFT		418940	1					
ANR	419010	CompoundStatement		21:8:604:604	418940	1					
ANR	419011	IfStatement	if ( cp -> right )		418940	0					
ANR	419012	Condition	cp -> right	253:16:8737:8745	418940	0	True				
ANR	419013	PtrMemberAccess	cp -> right		418940	0					
ANR	419014	Identifier	cp		418940	0					
ANR	419015	Identifier	right		418940	1					
ANR	419016	CompoundStatement		24:12:706:706	418940	1					
ANR	419017	IfStatement	if ( cp -> right -> cbase < cp -> cbase || cp -> right -> parent != cp )		418940	0					
ANR	419018	Condition	cp -> right -> cbase < cp -> cbase || cp -> right -> parent != cp	255:20:8782:8836	418940	0	True				
ANR	419019	OrExpression	cp -> right -> cbase < cp -> cbase || cp -> right -> parent != cp		418940	0		||			
ANR	419020	RelationalExpression	cp -> right -> cbase < cp -> cbase		418940	0		<			
ANR	419021	PtrMemberAccess	cp -> right -> cbase		418940	0					
ANR	419022	PtrMemberAccess	cp -> right		418940	0					
ANR	419023	Identifier	cp		418940	0					
ANR	419024	Identifier	right		418940	1					
ANR	419025	Identifier	cbase		418940	1					
ANR	419026	PtrMemberAccess	cp -> cbase		418940	1					
ANR	419027	Identifier	cp		418940	0					
ANR	419028	Identifier	cbase		418940	1					
ANR	419029	EqualityExpression	cp -> right -> parent != cp		418940	1		!=			
ANR	419030	PtrMemberAccess	cp -> right -> parent		418940	0					
ANR	419031	PtrMemberAccess	cp -> right		418940	0					
ANR	419032	Identifier	cp		418940	0					
ANR	419033	Identifier	right		418940	1					
ANR	419034	Identifier	parent		418940	1					
ANR	419035	Identifier	cp		418940	1					
ANR	419036	ExpressionStatement	broken_splay ( )	256:20:8859:8873	418940	1	True				
ANR	419037	CallExpression	broken_splay ( )		418940	0					
ANR	419038	Callee	broken_splay		418940	0					
ANR	419039	Identifier	broken_splay		418940	0					
ANR	419040	ArgumentList			418940	1					
ANR	419041	ExpressionStatement	cp = cp -> right	257:16:8891:8905	418940	1	True				
ANR	419042	AssignmentExpression	cp = cp -> right		418940	0		=			
ANR	419043	Identifier	cp		418940	0					
ANR	419044	PtrMemberAccess	cp -> right		418940	1					
ANR	419045	Identifier	cp		418940	0					
ANR	419046	Identifier	right		418940	1					
ANR	419047	ExpressionStatement	from = SPLAY_FROM_ABOVE	258:16:8923:8946	418940	2	True				
ANR	419048	AssignmentExpression	from = SPLAY_FROM_ABOVE		418940	0		=			
ANR	419049	Identifier	from		418940	0					
ANR	419050	Identifier	SPLAY_FROM_ABOVE		418940	1					
ANR	419051	ContinueStatement	continue ;	259:16:8964:8972	418940	3	True				
ANR	419052	ExpressionStatement	from = SPLAY_FROM_RIGHT	262:12:9083:9106	418940	1	True				
ANR	419053	AssignmentExpression	from = SPLAY_FROM_RIGHT		418940	0		=			
ANR	419054	Identifier	from		418940	0					
ANR	419055	Identifier	SPLAY_FROM_RIGHT		418940	1					
ANR	419056	IfStatement	if ( from == SPLAY_FROM_RIGHT )		418940	2					
ANR	419057	Condition	from == SPLAY_FROM_RIGHT	264:12:9130:9153	418940	0	True				
ANR	419058	EqualityExpression	from == SPLAY_FROM_RIGHT		418940	0		==			
ANR	419059	Identifier	from		418940	0					
ANR	419060	Identifier	SPLAY_FROM_RIGHT		418940	1					
ANR	419061	CompoundStatement		35:8:1110:1110	418940	1					
ANR	419062	IfStatement	if ( cp -> parent == NULL )		418940	0					
ANR	419063	Condition	cp -> parent == NULL	267:16:9241:9258	418940	0	True				
ANR	419064	EqualityExpression	cp -> parent == NULL		418940	0		==			
ANR	419065	PtrMemberAccess	cp -> parent		418940	0					
ANR	419066	Identifier	cp		418940	0					
ANR	419067	Identifier	parent		418940	1					
ANR	419068	Identifier	NULL		418940	1					
ANR	419069	BreakStatement	break ;	268:16:9277:9282	418940	1	True				
ANR	419070	IfStatement	if ( cp -> parent -> left != cp && cp -> parent -> right != cp )		418940	1					
ANR	419071	Condition	cp -> parent -> left != cp && cp -> parent -> right != cp	269:16:9300:9348	418940	0	True				
ANR	419072	AndExpression	cp -> parent -> left != cp && cp -> parent -> right != cp		418940	0		&&			
ANR	419073	EqualityExpression	cp -> parent -> left != cp		418940	0		!=			
ANR	419074	PtrMemberAccess	cp -> parent -> left		418940	0					
ANR	419075	PtrMemberAccess	cp -> parent		418940	0					
ANR	419076	Identifier	cp		418940	0					
ANR	419077	Identifier	parent		418940	1					
ANR	419078	Identifier	left		418940	1					
ANR	419079	Identifier	cp		418940	1					
ANR	419080	EqualityExpression	cp -> parent -> right != cp		418940	1		!=			
ANR	419081	PtrMemberAccess	cp -> parent -> right		418940	0					
ANR	419082	PtrMemberAccess	cp -> parent		418940	0					
ANR	419083	Identifier	cp		418940	0					
ANR	419084	Identifier	parent		418940	1					
ANR	419085	Identifier	right		418940	1					
ANR	419086	Identifier	cp		418940	1					
ANR	419087	ExpressionStatement	broken_splay ( )	270:16:9367:9381	418940	1	True				
ANR	419088	CallExpression	broken_splay ( )		418940	0					
ANR	419089	Callee	broken_splay		418940	0					
ANR	419090	Identifier	broken_splay		418940	0					
ANR	419091	ArgumentList			418940	1					
ANR	419092	ExpressionStatement	from = ( cp -> parent -> left == cp ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT )	271:12:9395:9463	418940	2	True				
ANR	419093	AssignmentExpression	from = ( cp -> parent -> left == cp ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT )		418940	0		=			
ANR	419094	Identifier	from		418940	0					
ANR	419095	ConditionalExpression	cp -> parent -> left == cp ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT		418940	1					
ANR	419096	Condition	cp -> parent -> left == cp		418940	0					
ANR	419097	EqualityExpression	cp -> parent -> left == cp		418940	0		==			
ANR	419098	PtrMemberAccess	cp -> parent -> left		418940	0					
ANR	419099	PtrMemberAccess	cp -> parent		418940	0					
ANR	419100	Identifier	cp		418940	0					
ANR	419101	Identifier	parent		418940	1					
ANR	419102	Identifier	left		418940	1					
ANR	419103	Identifier	cp		418940	1					
ANR	419104	Identifier	SPLAY_FROM_LEFT		418940	1					
ANR	419105	Identifier	SPLAY_FROM_RIGHT		418940	2					
ANR	419106	ExpressionStatement	cp = cp -> parent	272:12:9477:9492	418940	3	True				
ANR	419107	AssignmentExpression	cp = cp -> parent		418940	0		=			
ANR	419108	Identifier	cp		418940	0					
ANR	419109	PtrMemberAccess	cp -> parent		418940	1					
ANR	419110	Identifier	cp		418940	0					
ANR	419111	Identifier	parent		418940	1					
ANR	419112	ReturnType	void		418940	1					
ANR	419113	Identifier	sanity_check_rec		418940	2					
ANR	419114	ParameterList	clump_t * cp		418940	3					
ANR	419115	Parameter	clump_t * cp	230:22:8040:8050	418940	0	True				
ANR	419116	ParameterType	clump_t *		418940	0					
ANR	419117	Identifier	cp		418940	1					
ANR	419118	CFGEntryNode	ENTRY		418940		True				
ANR	419119	CFGExitNode	EXIT		418940		True				
ANR	419120	Symbol	cp -> right -> cbase		418940						
ANR	419121	Symbol	NULL		418940						
ANR	419122	Symbol	SPLAY_FROM_ABOVE		418940						
ANR	419123	Symbol	SPLAY_FROM_RIGHT		418940						
ANR	419124	Symbol	cp -> parent -> right		418940						
ANR	419125	Symbol	cp -> left -> parent		418940						
ANR	419126	Symbol	cp -> right		418940						
ANR	419127	Symbol	* cp -> parent		418940						
ANR	419128	Symbol	cp -> cbase		418940						
ANR	419129	Symbol	* cp -> left		418940						
ANR	419130	Symbol	cp		418940						
ANR	419131	Symbol	* cp		418940						
ANR	419132	Symbol	cp -> parent -> left		418940						
ANR	419133	Symbol	cp -> left		418940						
ANR	419134	Symbol	* cp -> right		418940						
ANR	419135	Symbol	cp -> parent		418940						
ANR	419136	Symbol	SPLAY_FROM_LEFT		418940						
ANR	419137	Symbol	from		418940						
ANR	419138	Symbol	cp -> left -> cbase		418940						
ANR	419139	Symbol	* * cp		418940						
ANR	419140	Symbol	cp -> right -> parent		418940						
ANR	419141	Function	sanity_check	277:0:9513:9572							
ANR	419142	FunctionDef	sanity_check (clump_t * cp)		419141	0					
ANR	419143	CompoundStatement		278:0:9544:9572	419141	0					
ANR	419144	ExpressionStatement	sanity_check_rec ( cp )	279:4:9550:9570	419141	0	True				
ANR	419145	CallExpression	sanity_check_rec ( cp )		419141	0					
ANR	419146	Callee	sanity_check_rec		419141	0					
ANR	419147	Identifier	sanity_check_rec		419141	0					
ANR	419148	ArgumentList	cp		419141	1					
ANR	419149	Argument	cp		419141	0					
ANR	419150	Identifier	cp		419141	0					
ANR	419151	ReturnType	void		419141	1					
ANR	419152	Identifier	sanity_check		419141	2					
ANR	419153	ParameterList	clump_t * cp		419141	3					
ANR	419154	Parameter	clump_t * cp	277:18:9531:9541	419141	0	True				
ANR	419155	ParameterType	clump_t *		419141	0					
ANR	419156	Identifier	cp		419141	1					
ANR	419157	CFGEntryNode	ENTRY		419141		True				
ANR	419158	CFGExitNode	EXIT		419141		True				
ANR	419159	Symbol	cp		419141						
ANR	419160	Function	sanity_check_mid	282:0:9575:9923							
ANR	419161	FunctionDef	sanity_check_mid (clump_t * cp)		419160	0					
ANR	419162	CompoundStatement		283:0:9610:9923	419160	0					
ANR	419163	IdentifierDeclStatement	clump_t * parent ;	284:4:9616:9631	419160	0	True				
ANR	419164	IdentifierDecl	* parent		419160	0					
ANR	419165	IdentifierDeclType	clump_t *		419160	0					
ANR	419166	Identifier	parent		419160	1					
ANR	419167	WhileStatement	while ( ( parent = cp -> parent ) != NULL )		419160	1					
ANR	419168	Condition	( parent = cp -> parent ) != NULL	286:11:9645:9673	419160	0	True				
ANR	419169	EqualityExpression	( parent = cp -> parent ) != NULL		419160	0		!=			
ANR	419170	AssignmentExpression	parent = cp -> parent		419160	0		=			
ANR	419171	Identifier	parent		419160	0					
ANR	419172	PtrMemberAccess	cp -> parent		419160	1					
ANR	419173	Identifier	cp		419160	0					
ANR	419174	Identifier	parent		419160	1					
ANR	419175	Identifier	NULL		419160	1					
ANR	419176	CompoundStatement		5:4:69:69	419160	1					
ANR	419177	IfStatement	if ( parent -> left == cp )		419160	0					
ANR	419178	Condition	parent -> left == cp	288:12:9694:9711	419160	0	True				
ANR	419179	EqualityExpression	parent -> left == cp		419160	0		==			
ANR	419180	PtrMemberAccess	parent -> left		419160	0					
ANR	419181	Identifier	parent		419160	0					
ANR	419182	Identifier	left		419160	1					
ANR	419183	Identifier	cp		419160	1					
ANR	419184	CompoundStatement		7:8:111:111	419160	1					
ANR	419185	IfStatement	if ( parent -> right == cp )		419160	0					
ANR	419186	Condition	parent -> right == cp	290:16:9740:9758	419160	0	True				
ANR	419187	EqualityExpression	parent -> right == cp		419160	0		==			
ANR	419188	PtrMemberAccess	parent -> right		419160	0					
ANR	419189	Identifier	parent		419160	0					
ANR	419190	Identifier	right		419160	1					
ANR	419191	Identifier	cp		419160	1					
ANR	419192	ExpressionStatement	broken_splay ( )	291:16:9777:9791	419160	1	True				
ANR	419193	CallExpression	broken_splay ( )		419160	0					
ANR	419194	Callee	broken_splay		419160	0					
ANR	419195	Identifier	broken_splay		419160	0					
ANR	419196	ArgumentList			419160	1					
ANR	419197	ElseStatement	else		419160	0					
ANR	419198	IfStatement	if ( parent -> right != cp )		419160	0					
ANR	419199	Condition	parent -> right != cp	293:17:9820:9838	419160	0	True				
ANR	419200	EqualityExpression	parent -> right != cp		419160	0		!=			
ANR	419201	PtrMemberAccess	parent -> right		419160	0					
ANR	419202	Identifier	parent		419160	0					
ANR	419203	Identifier	right		419160	1					
ANR	419204	Identifier	cp		419160	1					
ANR	419205	ExpressionStatement	broken_splay ( )	294:12:9853:9867	419160	1	True				
ANR	419206	CallExpression	broken_splay ( )		419160	0					
ANR	419207	Callee	broken_splay		419160	0					
ANR	419208	Identifier	broken_splay		419160	0					
ANR	419209	ArgumentList			419160	1					
ANR	419210	ExpressionStatement	cp = parent	295:8:9877:9888	419160	1	True				
ANR	419211	AssignmentExpression	cp = parent		419160	0		=			
ANR	419212	Identifier	cp		419160	0					
ANR	419213	Identifier	parent		419160	1					
ANR	419214	ExpressionStatement	sanity_check_rec ( cp )	298:4:9901:9921	419160	2	True				
ANR	419215	CallExpression	sanity_check_rec ( cp )		419160	0					
ANR	419216	Callee	sanity_check_rec		419160	0					
ANR	419217	Identifier	sanity_check_rec		419160	0					
ANR	419218	ArgumentList	cp		419160	1					
ANR	419219	Argument	cp		419160	0					
ANR	419220	Identifier	cp		419160	0					
ANR	419221	ReturnType	void		419160	1					
ANR	419222	Identifier	sanity_check_mid		419160	2					
ANR	419223	ParameterList	clump_t * cp		419160	3					
ANR	419224	Parameter	clump_t * cp	282:22:9597:9607	419160	0	True				
ANR	419225	ParameterType	clump_t *		419160	0					
ANR	419226	Identifier	cp		419160	1					
ANR	419227	CFGEntryNode	ENTRY		419160		True				
ANR	419228	CFGExitNode	EXIT		419160		True				
ANR	419229	Symbol	* cp		419160						
ANR	419230	Symbol	parent		419160						
ANR	419231	Symbol	NULL		419160						
ANR	419232	Symbol	* parent		419160						
ANR	419233	Symbol	cp -> parent		419160						
ANR	419234	Symbol	parent -> left		419160						
ANR	419235	Symbol	parent -> right		419160						
ANR	419236	Symbol	cp		419160						
ANR	419237	Function	clump_splay_walk_init	309:0:10173:10500							
ANR	419238	FunctionDef	"clump_splay_walk_init (clump_splay_walker * sw , const gs_ref_memory_t * mem)"		419237	0					
ANR	419239	CompoundStatement		311:0:10257:10500	419237	0					
ANR	419240	IdentifierDeclStatement	clump_t * cp = mem -> root ;	312:4:10263:10286	419237	0	True				
ANR	419241	IdentifierDecl	* cp = mem -> root		419237	0					
ANR	419242	IdentifierDeclType	clump_t *		419237	0					
ANR	419243	Identifier	cp		419237	1					
ANR	419244	AssignmentExpression	* cp = mem -> root		419237	2		=			
ANR	419245	Identifier	cp		419237	0					
ANR	419246	PtrMemberAccess	mem -> root		419237	1					
ANR	419247	Identifier	mem		419237	0					
ANR	419248	Identifier	root		419237	1					
ANR	419249	IfStatement	if ( cp )		419237	1					
ANR	419250	Condition	cp	314:8:10297:10298	419237	0	True				
ANR	419251	Identifier	cp		419237	0					
ANR	419252	CompoundStatement		5:4:47:47	419237	1					
ANR	419253	ExpressionStatement	SANITY_CHECK ( cp )	316:8:10315:10331	419237	0	True				
ANR	419254	CallExpression	SANITY_CHECK ( cp )		419237	0					
ANR	419255	Callee	SANITY_CHECK		419237	0					
ANR	419256	Identifier	SANITY_CHECK		419237	0					
ANR	419257	ArgumentList	cp		419237	1					
ANR	419258	Argument	cp		419237	0					
ANR	419259	Identifier	cp		419237	0					
ANR	419260	ExpressionStatement	sw -> from = SPLAY_FROM_LEFT	318:8:10342:10368	419237	1	True				
ANR	419261	AssignmentExpression	sw -> from = SPLAY_FROM_LEFT		419237	0		=			
ANR	419262	PtrMemberAccess	sw -> from		419237	0					
ANR	419263	Identifier	sw		419237	0					
ANR	419264	Identifier	from		419237	1					
ANR	419265	Identifier	SPLAY_FROM_LEFT		419237	1					
ANR	419266	WhileStatement	while ( cp -> left )		419237	2					
ANR	419267	Condition	cp -> left	319:15:10385:10392	419237	0	True				
ANR	419268	PtrMemberAccess	cp -> left		419237	0					
ANR	419269	Identifier	cp		419237	0					
ANR	419270	Identifier	left		419237	1					
ANR	419271	CompoundStatement		10:8:145:145	419237	1					
ANR	419272	ExpressionStatement	cp = cp -> left	321:12:10417:10430	419237	0	True				
ANR	419273	AssignmentExpression	cp = cp -> left		419237	0		=			
ANR	419274	Identifier	cp		419237	0					
ANR	419275	PtrMemberAccess	cp -> left		419237	1					
ANR	419276	Identifier	cp		419237	0					
ANR	419277	Identifier	left		419237	1					
ANR	419278	ExpressionStatement	sw -> cp = cp	324:4:10452:10463	419237	2	True				
ANR	419279	AssignmentExpression	sw -> cp = cp		419237	0		=			
ANR	419280	PtrMemberAccess	sw -> cp		419237	0					
ANR	419281	Identifier	sw		419237	0					
ANR	419282	Identifier	cp		419237	1					
ANR	419283	Identifier	cp		419237	1					
ANR	419284	ExpressionStatement	sw -> end = NULL	325:4:10469:10483	419237	3	True				
ANR	419285	AssignmentExpression	sw -> end = NULL		419237	0		=			
ANR	419286	PtrMemberAccess	sw -> end		419237	0					
ANR	419287	Identifier	sw		419237	0					
ANR	419288	Identifier	end		419237	1					
ANR	419289	Identifier	NULL		419237	1					
ANR	419290	ReturnStatement	return cp ;	326:4:10489:10498	419237	4	True				
ANR	419291	Identifier	cp		419237	0					
ANR	419292	ReturnType	clump_t *		419237	1					
ANR	419293	Identifier	clump_splay_walk_init		419237	2					
ANR	419294	ParameterList	"clump_splay_walker * sw , const gs_ref_memory_t * mem"		419237	3					
ANR	419295	Parameter	clump_splay_walker * sw	310:22:10205:10226	419237	0	True				
ANR	419296	ParameterType	clump_splay_walker *		419237	0					
ANR	419297	Identifier	sw		419237	1					
ANR	419298	Parameter	const gs_ref_memory_t * mem	310:46:10229:10254	419237	1	True				
ANR	419299	ParameterType	const gs_ref_memory_t *		419237	0					
ANR	419300	Identifier	mem		419237	1					
ANR	419301	CFGEntryNode	ENTRY		419237		True				
ANR	419302	CFGExitNode	EXIT		419237		True				
ANR	419303	Symbol	NULL		419237						
ANR	419304	Symbol	sw		419237						
ANR	419305	Symbol	* sw		419237						
ANR	419306	Symbol	cp		419237						
ANR	419307	Symbol	* cp		419237						
ANR	419308	Symbol	mem		419237						
ANR	419309	Symbol	cp -> left		419237						
ANR	419310	Symbol	sw -> from		419237						
ANR	419311	Symbol	SPLAY_FROM_LEFT		419237						
ANR	419312	Symbol	mem -> root		419237						
ANR	419313	Symbol	sw -> end		419237						
ANR	419314	Symbol	sw -> cp		419237						
ANR	419315	Symbol	* mem		419237						
ANR	419316	Function	clump_splay_walk_bwd_init	329:0:10503:10837							
ANR	419317	FunctionDef	"clump_splay_walk_bwd_init (clump_splay_walker * sw , const gs_ref_memory_t * mem)"		419316	0					
ANR	419318	CompoundStatement		331:0:10591:10837	419316	0					
ANR	419319	IdentifierDeclStatement	clump_t * cp = mem -> root ;	332:4:10597:10620	419316	0	True				
ANR	419320	IdentifierDecl	* cp = mem -> root		419316	0					
ANR	419321	IdentifierDeclType	clump_t *		419316	0					
ANR	419322	Identifier	cp		419316	1					
ANR	419323	AssignmentExpression	* cp = mem -> root		419316	2		=			
ANR	419324	Identifier	cp		419316	0					
ANR	419325	PtrMemberAccess	mem -> root		419316	1					
ANR	419326	Identifier	mem		419316	0					
ANR	419327	Identifier	root		419316	1					
ANR	419328	IfStatement	if ( cp )		419316	1					
ANR	419329	Condition	cp	334:8:10631:10632	419316	0	True				
ANR	419330	Identifier	cp		419316	0					
ANR	419331	CompoundStatement		5:4:47:47	419316	1					
ANR	419332	ExpressionStatement	SANITY_CHECK ( cp )	336:8:10649:10665	419316	0	True				
ANR	419333	CallExpression	SANITY_CHECK ( cp )		419316	0					
ANR	419334	Callee	SANITY_CHECK		419316	0					
ANR	419335	Identifier	SANITY_CHECK		419316	0					
ANR	419336	ArgumentList	cp		419316	1					
ANR	419337	Argument	cp		419316	0					
ANR	419338	Identifier	cp		419316	0					
ANR	419339	ExpressionStatement	sw -> from = SPLAY_FROM_RIGHT	338:8:10676:10703	419316	1	True				
ANR	419340	AssignmentExpression	sw -> from = SPLAY_FROM_RIGHT		419316	0		=			
ANR	419341	PtrMemberAccess	sw -> from		419316	0					
ANR	419342	Identifier	sw		419316	0					
ANR	419343	Identifier	from		419316	1					
ANR	419344	Identifier	SPLAY_FROM_RIGHT		419316	1					
ANR	419345	WhileStatement	while ( cp -> right )		419316	2					
ANR	419346	Condition	cp -> right	339:15:10720:10728	419316	0	True				
ANR	419347	PtrMemberAccess	cp -> right		419316	0					
ANR	419348	Identifier	cp		419316	0					
ANR	419349	Identifier	right		419316	1					
ANR	419350	CompoundStatement		10:8:147:147	419316	1					
ANR	419351	ExpressionStatement	cp = cp -> right	341:12:10753:10767	419316	0	True				
ANR	419352	AssignmentExpression	cp = cp -> right		419316	0		=			
ANR	419353	Identifier	cp		419316	0					
ANR	419354	PtrMemberAccess	cp -> right		419316	1					
ANR	419355	Identifier	cp		419316	0					
ANR	419356	Identifier	right		419316	1					
ANR	419357	ExpressionStatement	sw -> cp = cp	344:4:10789:10800	419316	2	True				
ANR	419358	AssignmentExpression	sw -> cp = cp		419316	0		=			
ANR	419359	PtrMemberAccess	sw -> cp		419316	0					
ANR	419360	Identifier	sw		419316	0					
ANR	419361	Identifier	cp		419316	1					
ANR	419362	Identifier	cp		419316	1					
ANR	419363	ExpressionStatement	sw -> end = NULL	345:4:10806:10820	419316	3	True				
ANR	419364	AssignmentExpression	sw -> end = NULL		419316	0		=			
ANR	419365	PtrMemberAccess	sw -> end		419316	0					
ANR	419366	Identifier	sw		419316	0					
ANR	419367	Identifier	end		419316	1					
ANR	419368	Identifier	NULL		419316	1					
ANR	419369	ReturnStatement	return cp ;	346:4:10826:10835	419316	4	True				
ANR	419370	Identifier	cp		419316	0					
ANR	419371	ReturnType	clump_t *		419316	1					
ANR	419372	Identifier	clump_splay_walk_bwd_init		419316	2					
ANR	419373	ParameterList	"clump_splay_walker * sw , const gs_ref_memory_t * mem"		419316	3					
ANR	419374	Parameter	clump_splay_walker * sw	330:26:10539:10560	419316	0	True				
ANR	419375	ParameterType	clump_splay_walker *		419316	0					
ANR	419376	Identifier	sw		419316	1					
ANR	419377	Parameter	const gs_ref_memory_t * mem	330:50:10563:10588	419316	1	True				
ANR	419378	ParameterType	const gs_ref_memory_t *		419316	0					
ANR	419379	Identifier	mem		419316	1					
ANR	419380	CFGEntryNode	ENTRY		419316		True				
ANR	419381	CFGExitNode	EXIT		419316		True				
ANR	419382	Symbol	NULL		419316						
ANR	419383	Symbol	sw		419316						
ANR	419384	Symbol	SPLAY_FROM_RIGHT		419316						
ANR	419385	Symbol	* sw		419316						
ANR	419386	Symbol	cp -> right		419316						
ANR	419387	Symbol	cp		419316						
ANR	419388	Symbol	* cp		419316						
ANR	419389	Symbol	mem		419316						
ANR	419390	Symbol	sw -> from		419316						
ANR	419391	Symbol	mem -> root		419316						
ANR	419392	Symbol	sw -> end		419316						
ANR	419393	Symbol	sw -> cp		419316						
ANR	419394	Symbol	* mem		419316						
ANR	419395	Function	clump_splay_walk_init_mid	353:0:11009:11220							
ANR	419396	FunctionDef	"clump_splay_walk_init_mid (clump_splay_walker * sw , clump_t * cp)"		419395	0					
ANR	419397	CompoundStatement		355:0:11082:11220	419395	0					
ANR	419398	ExpressionStatement	sw -> from = SPLAY_FROM_LEFT	356:4:11088:11114	419395	0	True				
ANR	419399	AssignmentExpression	sw -> from = SPLAY_FROM_LEFT		419395	0		=			
ANR	419400	PtrMemberAccess	sw -> from		419395	0					
ANR	419401	Identifier	sw		419395	0					
ANR	419402	Identifier	from		419395	1					
ANR	419403	Identifier	SPLAY_FROM_LEFT		419395	1					
ANR	419404	ExpressionStatement	sw -> cp = cp	357:4:11120:11131	419395	1	True				
ANR	419405	AssignmentExpression	sw -> cp = cp		419395	0		=			
ANR	419406	PtrMemberAccess	sw -> cp		419395	0					
ANR	419407	Identifier	sw		419395	0					
ANR	419408	Identifier	cp		419395	1					
ANR	419409	Identifier	cp		419395	1					
ANR	419410	ExpressionStatement	sw -> end = cp	358:4:11137:11149	419395	2	True				
ANR	419411	AssignmentExpression	sw -> end = cp		419395	0		=			
ANR	419412	PtrMemberAccess	sw -> end		419395	0					
ANR	419413	Identifier	sw		419395	0					
ANR	419414	Identifier	end		419395	1					
ANR	419415	Identifier	cp		419395	1					
ANR	419416	IfStatement	if ( cp )		419395	3					
ANR	419417	Condition	cp	359:8:11159:11160	419395	0	True				
ANR	419418	Identifier	cp		419395	0					
ANR	419419	CompoundStatement		6:4:84:84	419395	1					
ANR	419420	ExpressionStatement	SANITY_CHECK_MID ( cp )	361:8:11177:11197	419395	0	True				
ANR	419421	CallExpression	SANITY_CHECK_MID ( cp )		419395	0					
ANR	419422	Callee	SANITY_CHECK_MID		419395	0					
ANR	419423	Identifier	SANITY_CHECK_MID		419395	0					
ANR	419424	ArgumentList	cp		419395	1					
ANR	419425	Argument	cp		419395	0					
ANR	419426	Identifier	cp		419395	0					
ANR	419427	ReturnStatement	return cp ;	363:4:11209:11218	419395	4	True				
ANR	419428	Identifier	cp		419395	0					
ANR	419429	ReturnType	clump_t *		419395	1					
ANR	419430	Identifier	clump_splay_walk_init_mid		419395	2					
ANR	419431	ParameterList	"clump_splay_walker * sw , clump_t * cp"		419395	3					
ANR	419432	Parameter	clump_splay_walker * sw	354:26:11045:11066	419395	0	True				
ANR	419433	ParameterType	clump_splay_walker *		419395	0					
ANR	419434	Identifier	sw		419395	1					
ANR	419435	Parameter	clump_t * cp	354:50:11069:11079	419395	1	True				
ANR	419436	ParameterType	clump_t *		419395	0					
ANR	419437	Identifier	cp		419395	1					
ANR	419438	CFGEntryNode	ENTRY		419395		True				
ANR	419439	CFGExitNode	EXIT		419395		True				
ANR	419440	Symbol	sw		419395						
ANR	419441	Symbol	sw -> from		419395						
ANR	419442	Symbol	SPLAY_FROM_LEFT		419395						
ANR	419443	Symbol	* sw		419395						
ANR	419444	Symbol	sw -> end		419395						
ANR	419445	Symbol	cp		419395						
ANR	419446	Symbol	sw -> cp		419395						
ANR	419447	Function	clump_splay_walk_fwd	366:0:11223:13445							
ANR	419448	FunctionDef	clump_splay_walk_fwd (clump_splay_walker * sw)		419447	0					
ANR	419449	CompoundStatement		368:0:11278:13445	419447	0					
ANR	419450	IdentifierDeclStatement	clump_t * cp = sw -> cp ;	369:4:11284:11304	419447	0	True				
ANR	419451	IdentifierDecl	* cp = sw -> cp		419447	0					
ANR	419452	IdentifierDeclType	clump_t *		419447	0					
ANR	419453	Identifier	cp		419447	1					
ANR	419454	AssignmentExpression	* cp = sw -> cp		419447	2		=			
ANR	419455	Identifier	cp		419447	0					
ANR	419456	PtrMemberAccess	sw -> cp		419447	1					
ANR	419457	Identifier	sw		419447	0					
ANR	419458	Identifier	cp		419447	1					
ANR	419459	IdentifierDeclStatement	int from = sw -> from ;	370:4:11310:11329	419447	1	True				
ANR	419460	IdentifierDecl	from = sw -> from		419447	0					
ANR	419461	IdentifierDeclType	int		419447	0					
ANR	419462	Identifier	from		419447	1					
ANR	419463	AssignmentExpression	from = sw -> from		419447	2		=			
ANR	419464	Identifier	from		419447	0					
ANR	419465	PtrMemberAccess	sw -> from		419447	1					
ANR	419466	Identifier	sw		419447	0					
ANR	419467	Identifier	from		419447	1					
ANR	419468	IfStatement	if ( cp == NULL )		419447	2					
ANR	419469	Condition	cp == NULL	372:8:11340:11349	419447	0	True				
ANR	419470	EqualityExpression	cp == NULL		419447	0		==			
ANR	419471	Identifier	cp		419447	0					
ANR	419472	Identifier	NULL		419447	1					
ANR	419473	ReturnStatement	return NULL ;	373:8:11360:11371	419447	1	True				
ANR	419474	Identifier	NULL		419447	0					
ANR	419475	WhileStatement	while ( 1 )		419447	3					
ANR	419476	Condition	1	378:11:11524:11524	419447	0	True				
ANR	419477	PrimaryExpression	1		419447	0					
ANR	419478	CompoundStatement		12:4:252:252	419447	1					
ANR	419479	IfStatement	if ( from == SPLAY_FROM_ABOVE )		419447	0					
ANR	419480	Condition	from == SPLAY_FROM_ABOVE	380:12:11545:11568	419447	0	True				
ANR	419481	EqualityExpression	from == SPLAY_FROM_ABOVE		419447	0		==			
ANR	419482	Identifier	from		419447	0					
ANR	419483	Identifier	SPLAY_FROM_ABOVE		419447	1					
ANR	419484	CompoundStatement		14:8:300:300	419447	1					
ANR	419485	IfStatement	if ( cp -> left )		419447	0					
ANR	419486	Condition	cp -> left	383:16:11654:11661	419447	0	True				
ANR	419487	PtrMemberAccess	cp -> left		419447	0					
ANR	419488	Identifier	cp		419447	0					
ANR	419489	Identifier	left		419447	1					
ANR	419490	CompoundStatement		17:12:397:397	419447	1					
ANR	419491	ExpressionStatement	cp = cp -> left	385:16:11694:11707	419447	0	True				
ANR	419492	AssignmentExpression	cp = cp -> left		419447	0		=			
ANR	419493	Identifier	cp		419447	0					
ANR	419494	PtrMemberAccess	cp -> left		419447	1					
ANR	419495	Identifier	cp		419447	0					
ANR	419496	Identifier	left		419447	1					
ANR	419497	ExpressionStatement	from = SPLAY_FROM_ABOVE	386:16:11725:11748	419447	1	True				
ANR	419498	AssignmentExpression	from = SPLAY_FROM_ABOVE		419447	0		=			
ANR	419499	Identifier	from		419447	0					
ANR	419500	Identifier	SPLAY_FROM_ABOVE		419447	1					
ANR	419501	ContinueStatement	continue ;	387:16:11766:11774	419447	2	True				
ANR	419502	ExpressionStatement	from = SPLAY_FROM_LEFT	390:12:11883:11905	419447	1	True				
ANR	419503	AssignmentExpression	from = SPLAY_FROM_LEFT		419447	0		=			
ANR	419504	Identifier	from		419447	0					
ANR	419505	Identifier	SPLAY_FROM_LEFT		419447	1					
ANR	419506	IfStatement	if ( cp == sw -> end )		419447	2					
ANR	419507	Condition	cp == sw -> end	392:16:11977:11989	419447	0	True				
ANR	419508	EqualityExpression	cp == sw -> end		419447	0		==			
ANR	419509	Identifier	cp		419447	0					
ANR	419510	PtrMemberAccess	sw -> end		419447	1					
ANR	419511	Identifier	sw		419447	0					
ANR	419512	Identifier	end		419447	1					
ANR	419513	ExpressionStatement	cp = NULL	393:16:12008:12017	419447	1	True				
ANR	419514	AssignmentExpression	cp = NULL		419447	0		=			
ANR	419515	Identifier	cp		419447	0					
ANR	419516	Identifier	NULL		419447	1					
ANR	419517	BreakStatement	break ;	395:12:12120:12125	419447	3	True				
ANR	419518	IfStatement	if ( from == SPLAY_FROM_LEFT )		419447	1					
ANR	419519	Condition	from == SPLAY_FROM_LEFT	397:12:12149:12171	419447	0	True				
ANR	419520	EqualityExpression	from == SPLAY_FROM_LEFT		419447	0		==			
ANR	419521	Identifier	from		419447	0					
ANR	419522	Identifier	SPLAY_FROM_LEFT		419447	1					
ANR	419523	CompoundStatement		31:8:903:903	419447	1					
ANR	419524	IfStatement	if ( cp -> right )		419447	0					
ANR	419525	Condition	cp -> right	400:16:12261:12269	419447	0	True				
ANR	419526	PtrMemberAccess	cp -> right		419447	0					
ANR	419527	Identifier	cp		419447	0					
ANR	419528	Identifier	right		419447	1					
ANR	419529	CompoundStatement		34:12:1005:1005	419447	1					
ANR	419530	ExpressionStatement	cp = cp -> right	402:16:12302:12316	419447	0	True				
ANR	419531	AssignmentExpression	cp = cp -> right		419447	0		=			
ANR	419532	Identifier	cp		419447	0					
ANR	419533	PtrMemberAccess	cp -> right		419447	1					
ANR	419534	Identifier	cp		419447	0					
ANR	419535	Identifier	right		419447	1					
ANR	419536	ExpressionStatement	from = SPLAY_FROM_ABOVE	403:16:12334:12357	419447	1	True				
ANR	419537	AssignmentExpression	from = SPLAY_FROM_ABOVE		419447	0		=			
ANR	419538	Identifier	from		419447	0					
ANR	419539	Identifier	SPLAY_FROM_ABOVE		419447	1					
ANR	419540	ContinueStatement	continue ;	404:16:12375:12383	419447	2	True				
ANR	419541	ExpressionStatement	from = SPLAY_FROM_RIGHT	407:12:12494:12517	419447	1	True				
ANR	419542	AssignmentExpression	from = SPLAY_FROM_RIGHT		419447	0		=			
ANR	419543	Identifier	from		419447	0					
ANR	419544	Identifier	SPLAY_FROM_RIGHT		419447	1					
ANR	419545	IfStatement	if ( from == SPLAY_FROM_RIGHT )		419447	2					
ANR	419546	Condition	from == SPLAY_FROM_RIGHT	409:12:12541:12564	419447	0	True				
ANR	419547	EqualityExpression	from == SPLAY_FROM_RIGHT		419447	0		==			
ANR	419548	Identifier	from		419447	0					
ANR	419549	Identifier	SPLAY_FROM_RIGHT		419447	1					
ANR	419550	CompoundStatement		45:12:1369:1386	419447	1					
ANR	419551	IdentifierDeclStatement	clump_t * old = cp ;	412:12:12648:12665	419447	0	True				
ANR	419552	IdentifierDecl	* old = cp		419447	0					
ANR	419553	IdentifierDeclType	clump_t *		419447	0					
ANR	419554	Identifier	old		419447	1					
ANR	419555	AssignmentExpression	* old = cp		419447	2		=			
ANR	419556	Identifier	cp		419447	0					
ANR	419557	Identifier	cp		419447	1					
ANR	419558	ExpressionStatement	cp = cp -> parent	413:12:12679:12694	419447	1	True				
ANR	419559	AssignmentExpression	cp = cp -> parent		419447	0		=			
ANR	419560	Identifier	cp		419447	0					
ANR	419561	PtrMemberAccess	cp -> parent		419447	1					
ANR	419562	Identifier	cp		419447	0					
ANR	419563	Identifier	parent		419447	1					
ANR	419564	IfStatement	if ( cp == NULL )		419447	2					
ANR	419565	Condition	cp == NULL	414:16:12712:12721	419447	0	True				
ANR	419566	EqualityExpression	cp == NULL		419447	0		==			
ANR	419567	Identifier	cp		419447	0					
ANR	419568	Identifier	NULL		419447	1					
ANR	419569	CompoundStatement		48:12:1457:1457	419447	1					
ANR	419570	IfStatement	if ( sw -> end == NULL )		419447	0					
ANR	419571	Condition	sw -> end == NULL	417:20:12844:12858	419447	0	True				
ANR	419572	EqualityExpression	sw -> end == NULL		419447	0		==			
ANR	419573	PtrMemberAccess	sw -> end		419447	0					
ANR	419574	Identifier	sw		419447	0					
ANR	419575	Identifier	end		419447	1					
ANR	419576	Identifier	NULL		419447	1					
ANR	419577	BreakStatement	break ;	418:20:12881:12886	419447	1	True				
ANR	419578	ExpressionStatement	cp = old	420:16:12943:12951	419447	1	True				
ANR	419579	AssignmentExpression	cp = old		419447	0		=			
ANR	419580	Identifier	cp		419447	0					
ANR	419581	Identifier	old		419447	1					
ANR	419582	ExpressionStatement	from = SPLAY_FROM_ABOVE	421:16:12969:12992	419447	2	True				
ANR	419583	AssignmentExpression	from = SPLAY_FROM_ABOVE		419447	0		=			
ANR	419584	Identifier	from		419447	0					
ANR	419585	Identifier	SPLAY_FROM_ABOVE		419447	1					
ANR	419586	ElseStatement	else		419447	0					
ANR	419587	CompoundStatement		57:12:1758:1758	419447	0					
ANR	419588	ExpressionStatement	from = ( cp -> left == old ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT )	425:16:13055:13116	419447	0	True				
ANR	419589	AssignmentExpression	from = ( cp -> left == old ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT )		419447	0		=			
ANR	419590	Identifier	from		419447	0					
ANR	419591	ConditionalExpression	cp -> left == old ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT		419447	1					
ANR	419592	Condition	cp -> left == old		419447	0					
ANR	419593	EqualityExpression	cp -> left == old		419447	0		==			
ANR	419594	PtrMemberAccess	cp -> left		419447	0					
ANR	419595	Identifier	cp		419447	0					
ANR	419596	Identifier	left		419447	1					
ANR	419597	Identifier	old		419447	1					
ANR	419598	Identifier	SPLAY_FROM_LEFT		419447	1					
ANR	419599	Identifier	SPLAY_FROM_RIGHT		419447	2					
ANR	419600	IfStatement	if ( from == SPLAY_FROM_LEFT )		419447	1					
ANR	419601	Condition	from == SPLAY_FROM_LEFT	426:20:13138:13160	419447	0	True				
ANR	419602	EqualityExpression	from == SPLAY_FROM_LEFT		419447	0		==			
ANR	419603	Identifier	from		419447	0					
ANR	419604	Identifier	SPLAY_FROM_LEFT		419447	1					
ANR	419605	CompoundStatement		60:16:1900:1900	419447	1					
ANR	419606	IfStatement	if ( cp == sw -> end )		419447	0					
ANR	419607	Condition	cp == sw -> end	429:24:13267:13279	419447	0	True				
ANR	419608	EqualityExpression	cp == sw -> end		419447	0		==			
ANR	419609	Identifier	cp		419447	0					
ANR	419610	PtrMemberAccess	sw -> end		419447	1					
ANR	419611	Identifier	sw		419447	0					
ANR	419612	Identifier	end		419447	1					
ANR	419613	ExpressionStatement	cp = NULL	430:24:13306:13315	419447	1	True				
ANR	419614	AssignmentExpression	cp = NULL		419447	0		=			
ANR	419615	Identifier	cp		419447	0					
ANR	419616	Identifier	NULL		419447	1					
ANR	419617	BreakStatement	break ;	431:20:13337:13342	419447	1	True				
ANR	419618	ExpressionStatement	sw -> cp = cp	436:4:13396:13407	419447	4	True				
ANR	419619	AssignmentExpression	sw -> cp = cp		419447	0		=			
ANR	419620	PtrMemberAccess	sw -> cp		419447	0					
ANR	419621	Identifier	sw		419447	0					
ANR	419622	Identifier	cp		419447	1					
ANR	419623	Identifier	cp		419447	1					
ANR	419624	ExpressionStatement	sw -> from = from	437:4:13413:13428	419447	5	True				
ANR	419625	AssignmentExpression	sw -> from = from		419447	0		=			
ANR	419626	PtrMemberAccess	sw -> from		419447	0					
ANR	419627	Identifier	sw		419447	0					
ANR	419628	Identifier	from		419447	1					
ANR	419629	Identifier	from		419447	1					
ANR	419630	ReturnStatement	return cp ;	438:4:13434:13443	419447	6	True				
ANR	419631	Identifier	cp		419447	0					
ANR	419632	ReturnType	clump_t *		419447	1					
ANR	419633	Identifier	clump_splay_walk_fwd		419447	2					
ANR	419634	ParameterList	clump_splay_walker * sw		419447	3					
ANR	419635	Parameter	clump_splay_walker * sw	367:21:11254:11275	419447	0	True				
ANR	419636	ParameterType	clump_splay_walker *		419447	0					
ANR	419637	Identifier	sw		419447	1					
ANR	419638	CFGEntryNode	ENTRY		419447		True				
ANR	419639	CFGExitNode	EXIT		419447		True				
ANR	419640	Symbol	NULL		419447						
ANR	419641	Symbol	sw		419447						
ANR	419642	Symbol	SPLAY_FROM_ABOVE		419447						
ANR	419643	Symbol	old		419447						
ANR	419644	Symbol	SPLAY_FROM_RIGHT		419447						
ANR	419645	Symbol	* sw		419447						
ANR	419646	Symbol	cp -> right		419447						
ANR	419647	Symbol	cp		419447						
ANR	419648	Symbol	* cp		419447						
ANR	419649	Symbol	cp -> left		419447						
ANR	419650	Symbol	cp -> parent		419447						
ANR	419651	Symbol	sw -> from		419447						
ANR	419652	Symbol	SPLAY_FROM_LEFT		419447						
ANR	419653	Symbol	from		419447						
ANR	419654	Symbol	sw -> end		419447						
ANR	419655	Symbol	sw -> cp		419447						
ANR	419656	Function	clump_splay_walk_bwd	441:0:13448:15205							
ANR	419657	FunctionDef	clump_splay_walk_bwd (clump_splay_walker * sw)		419656	0					
ANR	419658	CompoundStatement		443:0:13503:15205	419656	0					
ANR	419659	IdentifierDeclStatement	clump_t * cp = sw -> cp ;	444:4:13509:13529	419656	0	True				
ANR	419660	IdentifierDecl	* cp = sw -> cp		419656	0					
ANR	419661	IdentifierDeclType	clump_t *		419656	0					
ANR	419662	Identifier	cp		419656	1					
ANR	419663	AssignmentExpression	* cp = sw -> cp		419656	2		=			
ANR	419664	Identifier	cp		419656	0					
ANR	419665	PtrMemberAccess	sw -> cp		419656	1					
ANR	419666	Identifier	sw		419656	0					
ANR	419667	Identifier	cp		419656	1					
ANR	419668	IdentifierDeclStatement	int from = sw -> from ;	445:4:13535:13554	419656	1	True				
ANR	419669	IdentifierDecl	from = sw -> from		419656	0					
ANR	419670	IdentifierDeclType	int		419656	0					
ANR	419671	Identifier	from		419656	1					
ANR	419672	AssignmentExpression	from = sw -> from		419656	2		=			
ANR	419673	Identifier	from		419656	0					
ANR	419674	PtrMemberAccess	sw -> from		419656	1					
ANR	419675	Identifier	sw		419656	0					
ANR	419676	Identifier	from		419656	1					
ANR	419677	IfStatement	if ( cp == NULL )		419656	2					
ANR	419678	Condition	cp == NULL	447:8:13565:13574	419656	0	True				
ANR	419679	EqualityExpression	cp == NULL		419656	0		==			
ANR	419680	Identifier	cp		419656	0					
ANR	419681	Identifier	NULL		419656	1					
ANR	419682	ReturnStatement	return NULL ;	448:8:13585:13596	419656	1	True				
ANR	419683	Identifier	NULL		419656	0					
ANR	419684	WhileStatement	while ( 1 )		419656	3					
ANR	419685	Condition	1	453:11:13767:13767	419656	0	True				
ANR	419686	PrimaryExpression	1		419656	0					
ANR	419687	CompoundStatement		12:4:270:270	419656	1					
ANR	419688	IfStatement	if ( from == SPLAY_FROM_ABOVE )		419656	0					
ANR	419689	Condition	from == SPLAY_FROM_ABOVE	455:12:13788:13811	419656	0	True				
ANR	419690	EqualityExpression	from == SPLAY_FROM_ABOVE		419656	0		==			
ANR	419691	Identifier	from		419656	0					
ANR	419692	Identifier	SPLAY_FROM_ABOVE		419656	1					
ANR	419693	CompoundStatement		14:8:318:318	419656	1					
ANR	419694	IfStatement	if ( cp -> right )		419656	0					
ANR	419695	Condition	cp -> right	458:16:13898:13906	419656	0	True				
ANR	419696	PtrMemberAccess	cp -> right		419656	0					
ANR	419697	Identifier	cp		419656	0					
ANR	419698	Identifier	right		419656	1					
ANR	419699	CompoundStatement		17:12:417:417	419656	1					
ANR	419700	ExpressionStatement	cp = cp -> right	460:16:13939:13953	419656	0	True				
ANR	419701	AssignmentExpression	cp = cp -> right		419656	0		=			
ANR	419702	Identifier	cp		419656	0					
ANR	419703	PtrMemberAccess	cp -> right		419656	1					
ANR	419704	Identifier	cp		419656	0					
ANR	419705	Identifier	right		419656	1					
ANR	419706	ExpressionStatement	from = SPLAY_FROM_ABOVE	461:16:13971:13994	419656	1	True				
ANR	419707	AssignmentExpression	from = SPLAY_FROM_ABOVE		419656	0		=			
ANR	419708	Identifier	from		419656	0					
ANR	419709	Identifier	SPLAY_FROM_ABOVE		419656	1					
ANR	419710	ContinueStatement	continue ;	462:16:14012:14020	419656	2	True				
ANR	419711	ExpressionStatement	from = SPLAY_FROM_RIGHT	465:12:14131:14154	419656	1	True				
ANR	419712	AssignmentExpression	from = SPLAY_FROM_RIGHT		419656	0		=			
ANR	419713	Identifier	from		419656	0					
ANR	419714	Identifier	SPLAY_FROM_RIGHT		419656	1					
ANR	419715	IfStatement	if ( cp == sw -> end )		419656	2					
ANR	419716	Condition	cp == sw -> end	467:16:14215:14227	419656	0	True				
ANR	419717	EqualityExpression	cp == sw -> end		419656	0		==			
ANR	419718	Identifier	cp		419656	0					
ANR	419719	PtrMemberAccess	sw -> end		419656	1					
ANR	419720	Identifier	sw		419656	0					
ANR	419721	Identifier	end		419656	1					
ANR	419722	ExpressionStatement	cp = NULL	468:16:14246:14255	419656	1	True				
ANR	419723	AssignmentExpression	cp = NULL		419656	0		=			
ANR	419724	Identifier	cp		419656	0					
ANR	419725	Identifier	NULL		419656	1					
ANR	419726	BreakStatement	break ;	470:12:14317:14322	419656	3	True				
ANR	419727	IfStatement	if ( from == SPLAY_FROM_RIGHT )		419656	1					
ANR	419728	Condition	from == SPLAY_FROM_RIGHT	472:12:14346:14369	419656	0	True				
ANR	419729	EqualityExpression	from == SPLAY_FROM_RIGHT		419656	0		==			
ANR	419730	Identifier	from		419656	0					
ANR	419731	Identifier	SPLAY_FROM_RIGHT		419656	1					
ANR	419732	CompoundStatement		31:8:876:876	419656	1					
ANR	419733	IfStatement	if ( cp -> left )		419656	0					
ANR	419734	Condition	cp -> left	475:16:14459:14466	419656	0	True				
ANR	419735	PtrMemberAccess	cp -> left		419656	0					
ANR	419736	Identifier	cp		419656	0					
ANR	419737	Identifier	left		419656	1					
ANR	419738	CompoundStatement		34:12:977:977	419656	1					
ANR	419739	ExpressionStatement	cp = cp -> left	477:16:14499:14512	419656	0	True				
ANR	419740	AssignmentExpression	cp = cp -> left		419656	0		=			
ANR	419741	Identifier	cp		419656	0					
ANR	419742	PtrMemberAccess	cp -> left		419656	1					
ANR	419743	Identifier	cp		419656	0					
ANR	419744	Identifier	left		419656	1					
ANR	419745	ExpressionStatement	from = SPLAY_FROM_ABOVE	478:16:14530:14553	419656	1	True				
ANR	419746	AssignmentExpression	from = SPLAY_FROM_ABOVE		419656	0		=			
ANR	419747	Identifier	from		419656	0					
ANR	419748	Identifier	SPLAY_FROM_ABOVE		419656	1					
ANR	419749	ContinueStatement	continue ;	479:16:14571:14579	419656	2	True				
ANR	419750	ExpressionStatement	from = SPLAY_FROM_LEFT	482:12:14689:14711	419656	1	True				
ANR	419751	AssignmentExpression	from = SPLAY_FROM_LEFT		419656	0		=			
ANR	419752	Identifier	from		419656	0					
ANR	419753	Identifier	SPLAY_FROM_LEFT		419656	1					
ANR	419754	IfStatement	if ( from == SPLAY_FROM_LEFT )		419656	2					
ANR	419755	Condition	from == SPLAY_FROM_LEFT	484:12:14735:14757	419656	0	True				
ANR	419756	EqualityExpression	from == SPLAY_FROM_LEFT		419656	0		==			
ANR	419757	Identifier	from		419656	0					
ANR	419758	Identifier	SPLAY_FROM_LEFT		419656	1					
ANR	419759	CompoundStatement		45:12:1336:1353	419656	1					
ANR	419760	IdentifierDeclStatement	clump_t * old = cp ;	487:12:14840:14857	419656	0	True				
ANR	419761	IdentifierDecl	* old = cp		419656	0					
ANR	419762	IdentifierDeclType	clump_t *		419656	0					
ANR	419763	Identifier	old		419656	1					
ANR	419764	AssignmentExpression	* old = cp		419656	2		=			
ANR	419765	Identifier	cp		419656	0					
ANR	419766	Identifier	cp		419656	1					
ANR	419767	ExpressionStatement	cp = cp -> parent	488:12:14871:14886	419656	1	True				
ANR	419768	AssignmentExpression	cp = cp -> parent		419656	0		=			
ANR	419769	Identifier	cp		419656	0					
ANR	419770	PtrMemberAccess	cp -> parent		419656	1					
ANR	419771	Identifier	cp		419656	0					
ANR	419772	Identifier	parent		419656	1					
ANR	419773	ExpressionStatement	from = ( cp == NULL || cp -> left != old ? SPLAY_FROM_RIGHT : SPLAY_FROM_LEFT )	489:12:14900:14975	419656	2	True				
ANR	419774	AssignmentExpression	from = ( cp == NULL || cp -> left != old ? SPLAY_FROM_RIGHT : SPLAY_FROM_LEFT )		419656	0		=			
ANR	419775	Identifier	from		419656	0					
ANR	419776	ConditionalExpression	cp == NULL || cp -> left != old ? SPLAY_FROM_RIGHT : SPLAY_FROM_LEFT		419656	1					
ANR	419777	Condition	cp == NULL || cp -> left != old		419656	0					
ANR	419778	OrExpression	cp == NULL || cp -> left != old		419656	0		||			
ANR	419779	EqualityExpression	cp == NULL		419656	0		==			
ANR	419780	Identifier	cp		419656	0					
ANR	419781	Identifier	NULL		419656	1					
ANR	419782	EqualityExpression	cp -> left != old		419656	1		!=			
ANR	419783	PtrMemberAccess	cp -> left		419656	0					
ANR	419784	Identifier	cp		419656	0					
ANR	419785	Identifier	left		419656	1					
ANR	419786	Identifier	old		419656	1					
ANR	419787	Identifier	SPLAY_FROM_RIGHT		419656	1					
ANR	419788	Identifier	SPLAY_FROM_LEFT		419656	2					
ANR	419789	IfStatement	if ( from == SPLAY_FROM_RIGHT )		419656	3					
ANR	419790	Condition	from == SPLAY_FROM_RIGHT	490:16:14993:15016	419656	0	True				
ANR	419791	EqualityExpression	from == SPLAY_FROM_RIGHT		419656	0		==			
ANR	419792	Identifier	from		419656	0					
ANR	419793	Identifier	SPLAY_FROM_RIGHT		419656	1					
ANR	419794	CompoundStatement		49:12:1527:1527	419656	1					
ANR	419795	IfStatement	if ( cp == sw -> end )		419656	0					
ANR	419796	Condition	cp == sw -> end	492:20:15053:15065	419656	0	True				
ANR	419797	EqualityExpression	cp == sw -> end		419656	0		==			
ANR	419798	Identifier	cp		419656	0					
ANR	419799	PtrMemberAccess	sw -> end		419656	1					
ANR	419800	Identifier	sw		419656	0					
ANR	419801	Identifier	end		419656	1					
ANR	419802	ExpressionStatement	cp = NULL	493:20:15088:15097	419656	1	True				
ANR	419803	AssignmentExpression	cp = NULL		419656	0		=			
ANR	419804	Identifier	cp		419656	0					
ANR	419805	Identifier	NULL		419656	1					
ANR	419806	BreakStatement	break ;	494:16:15115:15120	419656	1	True				
ANR	419807	ExpressionStatement	sw -> cp = cp	498:4:15156:15167	419656	4	True				
ANR	419808	AssignmentExpression	sw -> cp = cp		419656	0		=			
ANR	419809	PtrMemberAccess	sw -> cp		419656	0					
ANR	419810	Identifier	sw		419656	0					
ANR	419811	Identifier	cp		419656	1					
ANR	419812	Identifier	cp		419656	1					
ANR	419813	ExpressionStatement	sw -> from = from	499:4:15173:15188	419656	5	True				
ANR	419814	AssignmentExpression	sw -> from = from		419656	0		=			
ANR	419815	PtrMemberAccess	sw -> from		419656	0					
ANR	419816	Identifier	sw		419656	0					
ANR	419817	Identifier	from		419656	1					
ANR	419818	Identifier	from		419656	1					
ANR	419819	ReturnStatement	return cp ;	500:4:15194:15203	419656	6	True				
ANR	419820	Identifier	cp		419656	0					
ANR	419821	ReturnType	clump_t *		419656	1					
ANR	419822	Identifier	clump_splay_walk_bwd		419656	2					
ANR	419823	ParameterList	clump_splay_walker * sw		419656	3					
ANR	419824	Parameter	clump_splay_walker * sw	442:21:13479:13500	419656	0	True				
ANR	419825	ParameterType	clump_splay_walker *		419656	0					
ANR	419826	Identifier	sw		419656	1					
ANR	419827	CFGEntryNode	ENTRY		419656		True				
ANR	419828	CFGExitNode	EXIT		419656		True				
ANR	419829	Symbol	NULL		419656						
ANR	419830	Symbol	sw		419656						
ANR	419831	Symbol	SPLAY_FROM_ABOVE		419656						
ANR	419832	Symbol	old		419656						
ANR	419833	Symbol	SPLAY_FROM_RIGHT		419656						
ANR	419834	Symbol	* sw		419656						
ANR	419835	Symbol	cp -> right		419656						
ANR	419836	Symbol	cp		419656						
ANR	419837	Symbol	* cp		419656						
ANR	419838	Symbol	cp -> left		419656						
ANR	419839	Symbol	cp -> parent		419656						
ANR	419840	Symbol	sw -> from		419656						
ANR	419841	Symbol	SPLAY_FROM_LEFT		419656						
ANR	419842	Symbol	from		419656						
ANR	419843	Symbol	sw -> end		419656						
ANR	419844	Symbol	sw -> cp		419656						
ANR	419845	Function	clump_splay_remove	503:0:15208:16386							
ANR	419846	FunctionDef	"clump_splay_remove (clump_t * cp , gs_ref_memory_t * imem)"		419845	0					
ANR	419847	CompoundStatement		505:0:15280:16386	419845	0					
ANR	419848	IdentifierDeclStatement	clump_t * replacement ;	506:4:15286:15306	419845	0	True				
ANR	419849	IdentifierDecl	* replacement		419845	0					
ANR	419850	IdentifierDeclType	clump_t *		419845	0					
ANR	419851	Identifier	replacement		419845	1					
ANR	419852	IfStatement	if ( cp -> left == NULL )		419845	1					
ANR	419853	Condition	cp -> left == NULL	508:8:15317:15332	419845	0	True				
ANR	419854	EqualityExpression	cp -> left == NULL		419845	0		==			
ANR	419855	PtrMemberAccess	cp -> left		419845	0					
ANR	419856	Identifier	cp		419845	0					
ANR	419857	Identifier	left		419845	1					
ANR	419858	Identifier	NULL		419845	1					
ANR	419859	CompoundStatement		5:4:58:58	419845	1					
ANR	419860	ExpressionStatement	replacement = cp -> right	511:8:15388:15411	419845	0	True				
ANR	419861	AssignmentExpression	replacement = cp -> right		419845	0		=			
ANR	419862	Identifier	replacement		419845	0					
ANR	419863	PtrMemberAccess	cp -> right		419845	1					
ANR	419864	Identifier	cp		419845	0					
ANR	419865	Identifier	right		419845	1					
ANR	419866	ElseStatement	else		419845	0					
ANR	419867	IfStatement	if ( cp -> right == NULL )		419845	0					
ANR	419868	Condition	cp -> right == NULL	513:13:15432:15448	419845	0	True				
ANR	419869	EqualityExpression	cp -> right == NULL		419845	0		==			
ANR	419870	PtrMemberAccess	cp -> right		419845	0					
ANR	419871	Identifier	cp		419845	0					
ANR	419872	Identifier	right		419845	1					
ANR	419873	Identifier	NULL		419845	1					
ANR	419874	CompoundStatement		10:4:174:174	419845	1					
ANR	419875	ExpressionStatement	replacement = cp -> left	516:8:15505:15527	419845	0	True				
ANR	419876	AssignmentExpression	replacement = cp -> left		419845	0		=			
ANR	419877	Identifier	replacement		419845	0					
ANR	419878	PtrMemberAccess	cp -> left		419845	1					
ANR	419879	Identifier	cp		419845	0					
ANR	419880	Identifier	left		419845	1					
ANR	419881	ElseStatement	else		419845	0					
ANR	419882	CompoundStatement		15:4:267:267	419845	0					
ANR	419883	ExpressionStatement	replacement = cp -> left	522:8:15637:15659	419845	0	True				
ANR	419884	AssignmentExpression	replacement = cp -> left		419845	0		=			
ANR	419885	Identifier	replacement		419845	0					
ANR	419886	PtrMemberAccess	cp -> left		419845	1					
ANR	419887	Identifier	cp		419845	0					
ANR	419888	Identifier	left		419845	1					
ANR	419889	WhileStatement	while ( replacement -> right )		419845	1					
ANR	419890	Condition	replacement -> right	523:15:15676:15693	419845	0	True				
ANR	419891	PtrMemberAccess	replacement -> right		419845	0					
ANR	419892	Identifier	replacement		419845	0					
ANR	419893	Identifier	right		419845	1					
ANR	419894	ExpressionStatement	replacement = replacement -> right	524:12:15708:15740	419845	1	True				
ANR	419895	AssignmentExpression	replacement = replacement -> right		419845	0		=			
ANR	419896	Identifier	replacement		419845	0					
ANR	419897	PtrMemberAccess	replacement -> right		419845	1					
ANR	419898	Identifier	replacement		419845	0					
ANR	419899	Identifier	right		419845	1					
ANR	419900	ExpressionStatement	"( void ) clump_splay_remove ( replacement , imem )"	526:8:15808:15851	419845	2	True				
ANR	419901	CastExpression	"( void ) clump_splay_remove ( replacement , imem )"		419845	0					
ANR	419902	CastTarget	void		419845	0					
ANR	419903	CallExpression	"clump_splay_remove ( replacement , imem )"		419845	1					
ANR	419904	Callee	clump_splay_remove		419845	0					
ANR	419905	Identifier	clump_splay_remove		419845	0					
ANR	419906	ArgumentList	replacement		419845	1					
ANR	419907	Argument	replacement		419845	0					
ANR	419908	Identifier	replacement		419845	0					
ANR	419909	Argument	imem		419845	1					
ANR	419910	Identifier	imem		419845	0					
ANR	419911	IfStatement	if ( cp -> left )		419845	3					
ANR	419912	Condition	cp -> left	528:12:15907:15914	419845	0	True				
ANR	419913	PtrMemberAccess	cp -> left		419845	0					
ANR	419914	Identifier	cp		419845	0					
ANR	419915	Identifier	left		419845	1					
ANR	419916	ExpressionStatement	cp -> left -> parent = replacement	529:12:15929:15959	419845	1	True				
ANR	419917	AssignmentExpression	cp -> left -> parent = replacement		419845	0		=			
ANR	419918	PtrMemberAccess	cp -> left -> parent		419845	0					
ANR	419919	PtrMemberAccess	cp -> left		419845	0					
ANR	419920	Identifier	cp		419845	0					
ANR	419921	Identifier	left		419845	1					
ANR	419922	Identifier	parent		419845	1					
ANR	419923	Identifier	replacement		419845	1					
ANR	419924	ExpressionStatement	cp -> right -> parent = replacement	530:8:15969:16000	419845	4	True				
ANR	419925	AssignmentExpression	cp -> right -> parent = replacement		419845	0		=			
ANR	419926	PtrMemberAccess	cp -> right -> parent		419845	0					
ANR	419927	PtrMemberAccess	cp -> right		419845	0					
ANR	419928	Identifier	cp		419845	0					
ANR	419929	Identifier	right		419845	1					
ANR	419930	Identifier	parent		419845	1					
ANR	419931	Identifier	replacement		419845	1					
ANR	419932	ExpressionStatement	replacement -> left = cp -> left	531:8:16010:16038	419845	5	True				
ANR	419933	AssignmentExpression	replacement -> left = cp -> left		419845	0		=			
ANR	419934	PtrMemberAccess	replacement -> left		419845	0					
ANR	419935	Identifier	replacement		419845	0					
ANR	419936	Identifier	left		419845	1					
ANR	419937	PtrMemberAccess	cp -> left		419845	1					
ANR	419938	Identifier	cp		419845	0					
ANR	419939	Identifier	left		419845	1					
ANR	419940	ExpressionStatement	replacement -> right = cp -> right	532:8:16048:16078	419845	6	True				
ANR	419941	AssignmentExpression	replacement -> right = cp -> right		419845	0		=			
ANR	419942	PtrMemberAccess	replacement -> right		419845	0					
ANR	419943	Identifier	replacement		419845	0					
ANR	419944	Identifier	right		419845	1					
ANR	419945	PtrMemberAccess	cp -> right		419845	1					
ANR	419946	Identifier	cp		419845	0					
ANR	419947	Identifier	right		419845	1					
ANR	419948	IfStatement	if ( cp -> parent )		419845	2					
ANR	419949	Condition	cp -> parent	534:8:16094:16103	419845	0	True				
ANR	419950	PtrMemberAccess	cp -> parent		419845	0					
ANR	419951	Identifier	cp		419845	0					
ANR	419952	Identifier	parent		419845	1					
ANR	419953	CompoundStatement		31:4:829:829	419845	1					
ANR	419954	IfStatement	if ( cp -> parent -> left == cp )		419845	0					
ANR	419955	Condition	cp -> parent -> left == cp	536:12:16124:16145	419845	0	True				
ANR	419956	EqualityExpression	cp -> parent -> left == cp		419845	0		==			
ANR	419957	PtrMemberAccess	cp -> parent -> left		419845	0					
ANR	419958	PtrMemberAccess	cp -> parent		419845	0					
ANR	419959	Identifier	cp		419845	0					
ANR	419960	Identifier	parent		419845	1					
ANR	419961	Identifier	left		419845	1					
ANR	419962	Identifier	cp		419845	1					
ANR	419963	ExpressionStatement	cp -> parent -> left = replacement	537:12:16160:16190	419845	1	True				
ANR	419964	AssignmentExpression	cp -> parent -> left = replacement		419845	0		=			
ANR	419965	PtrMemberAccess	cp -> parent -> left		419845	0					
ANR	419966	PtrMemberAccess	cp -> parent		419845	0					
ANR	419967	Identifier	cp		419845	0					
ANR	419968	Identifier	parent		419845	1					
ANR	419969	Identifier	left		419845	1					
ANR	419970	Identifier	replacement		419845	1					
ANR	419971	ElseStatement	else		419845	0					
ANR	419972	ExpressionStatement	cp -> parent -> right = replacement	539:12:16217:16248	419845	0	True				
ANR	419973	AssignmentExpression	cp -> parent -> right = replacement		419845	0		=			
ANR	419974	PtrMemberAccess	cp -> parent -> right		419845	0					
ANR	419975	PtrMemberAccess	cp -> parent		419845	0					
ANR	419976	Identifier	cp		419845	0					
ANR	419977	Identifier	parent		419845	1					
ANR	419978	Identifier	right		419845	1					
ANR	419979	Identifier	replacement		419845	1					
ANR	419980	ElseStatement	else		419845	0					
ANR	419981	ExpressionStatement	imem -> root = replacement	542:8:16273:16297	419845	0	True				
ANR	419982	AssignmentExpression	imem -> root = replacement		419845	0		=			
ANR	419983	PtrMemberAccess	imem -> root		419845	0					
ANR	419984	Identifier	imem		419845	0					
ANR	419985	Identifier	root		419845	1					
ANR	419986	Identifier	replacement		419845	1					
ANR	419987	IfStatement	if ( replacement )		419845	3					
ANR	419988	Condition	replacement	543:8:16307:16317	419845	0	True				
ANR	419989	Identifier	replacement		419845	0					
ANR	419990	ExpressionStatement	replacement -> parent = cp -> parent	544:8:16328:16360	419845	1	True				
ANR	419991	AssignmentExpression	replacement -> parent = cp -> parent		419845	0		=			
ANR	419992	PtrMemberAccess	replacement -> parent		419845	0					
ANR	419993	Identifier	replacement		419845	0					
ANR	419994	Identifier	parent		419845	1					
ANR	419995	PtrMemberAccess	cp -> parent		419845	1					
ANR	419996	Identifier	cp		419845	0					
ANR	419997	Identifier	parent		419845	1					
ANR	419998	ReturnStatement	return replacement ;	545:4:16366:16384	419845	4	True				
ANR	419999	Identifier	replacement		419845	0					
ANR	420000	ReturnType	static clump_t *		419845	1					
ANR	420001	Identifier	clump_splay_remove		419845	2					
ANR	420002	ParameterList	"clump_t * cp , gs_ref_memory_t * imem"		419845	3					
ANR	420003	Parameter	clump_t * cp	504:19:15244:15254	419845	0	True				
ANR	420004	ParameterType	clump_t *		419845	0					
ANR	420005	Identifier	cp		419845	1					
ANR	420006	Parameter	gs_ref_memory_t * imem	504:32:15257:15277	419845	1	True				
ANR	420007	ParameterType	gs_ref_memory_t *		419845	0					
ANR	420008	Identifier	imem		419845	1					
ANR	420009	CFGEntryNode	ENTRY		419845		True				
ANR	420010	CFGExitNode	EXIT		419845		True				
ANR	420011	Symbol	replacement -> parent		419845						
ANR	420012	Symbol	imem -> root		419845						
ANR	420013	Symbol	NULL		419845						
ANR	420014	Symbol	cp -> parent -> right		419845						
ANR	420015	Symbol	cp -> right		419845						
ANR	420016	Symbol	cp -> left -> parent		419845						
ANR	420017	Symbol	* cp -> parent		419845						
ANR	420018	Symbol	* cp -> left		419845						
ANR	420019	Symbol	cp		419845						
ANR	420020	Symbol	* cp		419845						
ANR	420021	Symbol	replacement -> right		419845						
ANR	420022	Symbol	cp -> parent -> left		419845						
ANR	420023	Symbol	cp -> left		419845						
ANR	420024	Symbol	* cp -> right		419845						
ANR	420025	Symbol	cp -> parent		419845						
ANR	420026	Symbol	replacement -> left		419845						
ANR	420027	Symbol	* * cp		419845						
ANR	420028	Symbol	imem		419845						
ANR	420029	Symbol	replacement		419845						
ANR	420030	Symbol	* imem		419845						
ANR	420031	Symbol	* replacement		419845						
ANR	420032	Symbol	cp -> right -> parent		419845						
ANR	420033	Function	clump_splay_app	556:0:16735:18335							
ANR	420034	FunctionDef	"clump_splay_app (clump_t * root , gs_ref_memory_t * imem , splay_app_result_t ( * fn ) ( clump_t * , void * ) , void * arg)"		420033	0					
ANR	420035	CompoundStatement		558:0:16855:18335	420033	0					
ANR	420036	IdentifierDeclStatement	clump_t * step_to ;	559:4:16861:16877	420033	0	True				
ANR	420037	IdentifierDecl	* step_to		420033	0					
ANR	420038	IdentifierDeclType	clump_t *		420033	0					
ANR	420039	Identifier	step_to		420033	1					
ANR	420040	IdentifierDeclStatement	clump_t * cp = root ;	560:4:16883:16901	420033	1	True				
ANR	420041	IdentifierDecl	* cp = root		420033	0					
ANR	420042	IdentifierDeclType	clump_t *		420033	0					
ANR	420043	Identifier	cp		420033	1					
ANR	420044	AssignmentExpression	* cp = root		420033	2		=			
ANR	420045	Identifier	root		420033	0					
ANR	420046	Identifier	root		420033	1					
ANR	420047	IdentifierDeclStatement	int from = SPLAY_FROM_ABOVE ;	561:4:16907:16934	420033	2	True				
ANR	420048	IdentifierDecl	from = SPLAY_FROM_ABOVE		420033	0					
ANR	420049	IdentifierDeclType	int		420033	0					
ANR	420050	Identifier	from		420033	1					
ANR	420051	AssignmentExpression	from = SPLAY_FROM_ABOVE		420033	2		=			
ANR	420052	Identifier	SPLAY_FROM_ABOVE		420033	0					
ANR	420053	Identifier	SPLAY_FROM_ABOVE		420033	1					
ANR	420054	IdentifierDeclStatement	splay_app_result_t res ;	562:4:16940:16962	420033	3	True				
ANR	420055	IdentifierDecl	res		420033	0					
ANR	420056	IdentifierDeclType	splay_app_result_t		420033	0					
ANR	420057	Identifier	res		420033	1					
ANR	420058	ExpressionStatement	SANITY_CHECK ( cp )	564:4:16969:16985	420033	4	True				
ANR	420059	CallExpression	SANITY_CHECK ( cp )		420033	0					
ANR	420060	Callee	SANITY_CHECK		420033	0					
ANR	420061	Identifier	SANITY_CHECK		420033	0					
ANR	420062	ArgumentList	cp		420033	1					
ANR	420063	Argument	cp		420033	0					
ANR	420064	Identifier	cp		420033	0					
ANR	420065	WhileStatement	while ( cp )		420033	5					
ANR	420066	Condition	cp	566:11:16999:17000	420033	0	True				
ANR	420067	Identifier	cp		420033	0					
ANR	420068	CompoundStatement		10:4:151:151	420033	1					
ANR	420069	IfStatement	if ( from == SPLAY_FROM_ABOVE )		420033	0					
ANR	420070	Condition	from == SPLAY_FROM_ABOVE	568:12:17021:17044	420033	0	True				
ANR	420071	EqualityExpression	from == SPLAY_FROM_ABOVE		420033	0		==			
ANR	420072	Identifier	from		420033	0					
ANR	420073	Identifier	SPLAY_FROM_ABOVE		420033	1					
ANR	420074	CompoundStatement		12:8:199:199	420033	1					
ANR	420075	ExpressionStatement	step_to = cp -> left	571:12:17126:17144	420033	0	True				
ANR	420076	AssignmentExpression	step_to = cp -> left		420033	0		=			
ANR	420077	Identifier	step_to		420033	0					
ANR	420078	PtrMemberAccess	cp -> left		420033	1					
ANR	420079	Identifier	cp		420033	0					
ANR	420080	Identifier	left		420033	1					
ANR	420081	IfStatement	if ( step_to )		420033	1					
ANR	420082	Condition	step_to	572:16:17162:17168	420033	0	True				
ANR	420083	Identifier	step_to		420033	0					
ANR	420084	CompoundStatement		16:12:327:327	420033	1					
ANR	420085	ExpressionStatement	from = SPLAY_FROM_ABOVE	574:16:17201:17224	420033	0	True				
ANR	420086	AssignmentExpression	from = SPLAY_FROM_ABOVE		420033	0		=			
ANR	420087	Identifier	from		420033	0					
ANR	420088	Identifier	SPLAY_FROM_ABOVE		420033	1					
ANR	420089	ExpressionStatement	cp = step_to	575:16:17242:17254	420033	1	True				
ANR	420090	AssignmentExpression	cp = step_to		420033	0		=			
ANR	420091	Identifier	cp		420033	0					
ANR	420092	Identifier	step_to		420033	1					
ANR	420093	ElseStatement	else		420033	0					
ANR	420094	CompoundStatement		21:12:443:443	420033	0					
ANR	420095	ExpressionStatement	from = SPLAY_FROM_LEFT	580:16:17405:17427	420033	0	True				
ANR	420096	AssignmentExpression	from = SPLAY_FROM_LEFT		420033	0		=			
ANR	420097	Identifier	from		420033	0					
ANR	420098	Identifier	SPLAY_FROM_LEFT		420033	1					
ANR	420099	IfStatement	if ( from == SPLAY_FROM_LEFT )		420033	1					
ANR	420100	Condition	from == SPLAY_FROM_LEFT	583:12:17465:17487	420033	0	True				
ANR	420101	EqualityExpression	from == SPLAY_FROM_LEFT		420033	0		==			
ANR	420102	Identifier	from		420033	0					
ANR	420103	Identifier	SPLAY_FROM_LEFT		420033	1					
ANR	420104	CompoundStatement		27:8:642:642	420033	1					
ANR	420105	ExpressionStatement	step_to = cp -> right	586:12:17573:17592	420033	0	True				
ANR	420106	AssignmentExpression	step_to = cp -> right		420033	0		=			
ANR	420107	Identifier	step_to		420033	0					
ANR	420108	PtrMemberAccess	cp -> right		420033	1					
ANR	420109	Identifier	cp		420033	0					
ANR	420110	Identifier	right		420033	1					
ANR	420111	IfStatement	if ( step_to )		420033	1					
ANR	420112	Condition	step_to	587:16:17610:17616	420033	0	True				
ANR	420113	Identifier	step_to		420033	0					
ANR	420114	CompoundStatement		31:12:775:775	420033	1					
ANR	420115	ExpressionStatement	from = SPLAY_FROM_ABOVE	589:16:17649:17672	420033	0	True				
ANR	420116	AssignmentExpression	from = SPLAY_FROM_ABOVE		420033	0		=			
ANR	420117	Identifier	from		420033	0					
ANR	420118	Identifier	SPLAY_FROM_ABOVE		420033	1					
ANR	420119	ExpressionStatement	cp = step_to	590:16:17690:17702	420033	1	True				
ANR	420120	AssignmentExpression	cp = step_to		420033	0		=			
ANR	420121	Identifier	cp		420033	0					
ANR	420122	Identifier	step_to		420033	1					
ANR	420123	ElseStatement	else		420033	0					
ANR	420124	CompoundStatement		36:12:891:891	420033	0					
ANR	420125	ExpressionStatement	from = SPLAY_FROM_RIGHT	595:16:17856:17879	420033	0	True				
ANR	420126	AssignmentExpression	from = SPLAY_FROM_RIGHT		420033	0		=			
ANR	420127	Identifier	from		420033	0					
ANR	420128	Identifier	SPLAY_FROM_RIGHT		420033	1					
ANR	420129	IfStatement	if ( from == SPLAY_FROM_RIGHT )		420033	2					
ANR	420130	Condition	from == SPLAY_FROM_RIGHT	598:12:17917:17940	420033	0	True				
ANR	420131	EqualityExpression	from == SPLAY_FROM_RIGHT		420033	0		==			
ANR	420132	Identifier	from		420033	0					
ANR	420133	Identifier	SPLAY_FROM_RIGHT		420033	1					
ANR	420134	CompoundStatement		42:8:1095:1095	420033	1					
ANR	420135	ExpressionStatement	step_to = cp -> parent	601:12:18024:18044	420033	0	True				
ANR	420136	AssignmentExpression	step_to = cp -> parent		420033	0		=			
ANR	420137	Identifier	step_to		420033	0					
ANR	420138	PtrMemberAccess	cp -> parent		420033	1					
ANR	420139	Identifier	cp		420033	0					
ANR	420140	Identifier	parent		420033	1					
ANR	420141	IfStatement	if ( step_to )		420033	1					
ANR	420142	Condition	step_to	602:16:18062:18068	420033	0	True				
ANR	420143	Identifier	step_to		420033	0					
ANR	420144	CompoundStatement		46:12:1227:1227	420033	1					
ANR	420145	ExpressionStatement	from = ( step_to -> left == cp ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT )	604:16:18101:18166	420033	0	True				
ANR	420146	AssignmentExpression	from = ( step_to -> left == cp ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT )		420033	0		=			
ANR	420147	Identifier	from		420033	0					
ANR	420148	ConditionalExpression	step_to -> left == cp ? SPLAY_FROM_LEFT : SPLAY_FROM_RIGHT		420033	1					
ANR	420149	Condition	step_to -> left == cp		420033	0					
ANR	420150	EqualityExpression	step_to -> left == cp		420033	0		==			
ANR	420151	PtrMemberAccess	step_to -> left		420033	0					
ANR	420152	Identifier	step_to		420033	0					
ANR	420153	Identifier	left		420033	1					
ANR	420154	Identifier	cp		420033	1					
ANR	420155	Identifier	SPLAY_FROM_LEFT		420033	1					
ANR	420156	Identifier	SPLAY_FROM_RIGHT		420033	2					
ANR	420157	ExpressionStatement	"res = fn ( cp , arg )"	606:12:18194:18211	420033	2	True				
ANR	420158	AssignmentExpression	"res = fn ( cp , arg )"		420033	0		=			
ANR	420159	Identifier	res		420033	0					
ANR	420160	CallExpression	"fn ( cp , arg )"		420033	1					
ANR	420161	Callee	fn		420033	0					
ANR	420162	Identifier	fn		420033	0					
ANR	420163	ArgumentList	cp		420033	1					
ANR	420164	Argument	cp		420033	0					
ANR	420165	Identifier	cp		420033	0					
ANR	420166	Argument	arg		420033	1					
ANR	420167	Identifier	arg		420033	0					
ANR	420168	IfStatement	if ( res & SPLAY_APP_STOP )		420033	3					
ANR	420169	Condition	res & SPLAY_APP_STOP	607:16:18229:18248	420033	0	True				
ANR	420170	BitAndExpression	res & SPLAY_APP_STOP		420033	0		&			
ANR	420171	Identifier	res		420033	0					
ANR	420172	Identifier	SPLAY_APP_STOP		420033	1					
ANR	420173	ReturnStatement	return cp ;	608:16:18267:18276	420033	1	True				
ANR	420174	Identifier	cp		420033	0					
ANR	420175	ExpressionStatement	cp = step_to	609:12:18290:18302	420033	4	True				
ANR	420176	AssignmentExpression	cp = step_to		420033	0		=			
ANR	420177	Identifier	cp		420033	0					
ANR	420178	Identifier	step_to		420033	1					
ANR	420179	ReturnStatement	return cp ;	612:4:18324:18333	420033	6	True				
ANR	420180	Identifier	cp		420033	0					
ANR	420181	ReturnType	clump_t *		420033	1					
ANR	420182	Identifier	clump_splay_app		420033	2					
ANR	420183	ParameterList	"clump_t * root , gs_ref_memory_t * imem , splay_app_result_t ( * fn ) ( clump_t * , void * ) , void * arg"		420033	3					
ANR	420184	Parameter	clump_t * root	557:16:16761:16773	420033	0	True				
ANR	420185	ParameterType	clump_t *		420033	0					
ANR	420186	Identifier	root		420033	1					
ANR	420187	Parameter	gs_ref_memory_t * imem	557:31:16776:16796	420033	1	True				
ANR	420188	ParameterType	gs_ref_memory_t *		420033	0					
ANR	420189	Identifier	imem		420033	1					
ANR	420190	Parameter	"splay_app_result_t ( * fn ) ( clump_t * , void * )"	557:54:16799:16841	420033	2	True				
ANR	420191	ParameterType	"(( clump_t * , void * ) splay_app_result_t) *"		420033	0					
ANR	420192	Identifier	fn		420033	1					
ANR	420193	Parameter	void * arg	557:99:16844:16852	420033	3	True				
ANR	420194	ParameterType	void *		420033	0					
ANR	420195	Identifier	arg		420033	1					
ANR	420196	CFGEntryNode	ENTRY		420033		True				
ANR	420197	CFGExitNode	EXIT		420033		True				
ANR	420198	Symbol	res		420033						
ANR	420199	Symbol	SPLAY_APP_STOP		420033						
ANR	420200	Symbol	SPLAY_FROM_ABOVE		420033						
ANR	420201	Symbol	SPLAY_FROM_RIGHT		420033						
ANR	420202	Symbol	fn		420033						
ANR	420203	Symbol	cp -> right		420033						
ANR	420204	Symbol	step_to		420033						
ANR	420205	Symbol	cp		420033						
ANR	420206	Symbol	step_to -> left		420033						
ANR	420207	Symbol	* cp		420033						
ANR	420208	Symbol	cp -> left		420033						
ANR	420209	Symbol	cp -> parent		420033						
ANR	420210	Symbol	root		420033						
ANR	420211	Symbol	arg		420033						
ANR	420212	Symbol	SPLAY_FROM_LEFT		420033						
ANR	420213	Symbol	from		420033						
ANR	420214	Symbol	* step_to		420033						
ANR	420215	Symbol	imem		420033						
ANR	420216	Function	splay_move_to_root	643:0:19856:22605							
ANR	420217	FunctionDef	"splay_move_to_root (clump_t * x , gs_ref_memory_t * mem)"		420216	0					
ANR	420218	CompoundStatement		645:0:19921:22605	420216	0					
ANR	420219	IdentifierDeclStatement	"clump_t * y , * z ;"	646:4:19927:19941	420216	0	True				
ANR	420220	IdentifierDecl	* y		420216	0					
ANR	420221	IdentifierDeclType	clump_t *		420216	0					
ANR	420222	Identifier	y		420216	1					
ANR	420223	IdentifierDecl	* z		420216	1					
ANR	420224	IdentifierDeclType	clump_t *		420216	0					
ANR	420225	Identifier	z		420216	1					
ANR	420226	IfStatement	if ( x == NULL )		420216	1					
ANR	420227	Condition	x == NULL	648:8:19952:19960	420216	0	True				
ANR	420228	EqualityExpression	x == NULL		420216	0		==			
ANR	420229	Identifier	x		420216	0					
ANR	420230	Identifier	NULL		420216	1					
ANR	420231	ReturnStatement	return ;	649:8:19971:19977	420216	1	True				
ANR	420232	WhileStatement	while ( ( y = x -> parent ) != NULL )		420216	2					
ANR	420233	Condition	( y = x -> parent ) != NULL	651:11:19991:20013	420216	0	True				
ANR	420234	EqualityExpression	( y = x -> parent ) != NULL		420216	0		!=			
ANR	420235	AssignmentExpression	y = x -> parent		420216	0		=			
ANR	420236	Identifier	y		420216	0					
ANR	420237	PtrMemberAccess	x -> parent		420216	1					
ANR	420238	Identifier	x		420216	0					
ANR	420239	Identifier	parent		420216	1					
ANR	420240	Identifier	NULL		420216	1					
ANR	420241	CompoundStatement		7:36:94:94	420216	1					
ANR	420242	IfStatement	if ( ( z = y -> parent ) != NULL )		420216	0					
ANR	420243	Condition	( z = y -> parent ) != NULL	652:12:20030:20052	420216	0	True				
ANR	420244	EqualityExpression	( z = y -> parent ) != NULL		420216	0		!=			
ANR	420245	AssignmentExpression	z = y -> parent		420216	0		=			
ANR	420246	Identifier	z		420216	0					
ANR	420247	PtrMemberAccess	y -> parent		420216	1					
ANR	420248	Identifier	y		420216	0					
ANR	420249	Identifier	parent		420216	1					
ANR	420250	Identifier	NULL		420216	1					
ANR	420251	CompoundStatement		8:37:133:133	420216	1					
ANR	420252	ExpressionStatement	x -> parent = z -> parent	653:12:20069:20090	420216	0	True				
ANR	420253	AssignmentExpression	x -> parent = z -> parent		420216	0		=			
ANR	420254	PtrMemberAccess	x -> parent		420216	0					
ANR	420255	Identifier	x		420216	0					
ANR	420256	Identifier	parent		420216	1					
ANR	420257	PtrMemberAccess	z -> parent		420216	1					
ANR	420258	Identifier	z		420216	0					
ANR	420259	Identifier	parent		420216	1					
ANR	420260	IfStatement	if ( x -> parent )		420216	1					
ANR	420261	Condition	x -> parent	654:16:20108:20116	420216	0	True				
ANR	420262	PtrMemberAccess	x -> parent		420216	0					
ANR	420263	Identifier	x		420216	0					
ANR	420264	Identifier	parent		420216	1					
ANR	420265	CompoundStatement		10:27:197:197	420216	1					
ANR	420266	IfStatement	if ( x -> parent -> left == z )		420216	0					
ANR	420267	Condition	x -> parent -> left == z	655:20:20141:20160	420216	0	True				
ANR	420268	EqualityExpression	x -> parent -> left == z		420216	0		==			
ANR	420269	PtrMemberAccess	x -> parent -> left		420216	0					
ANR	420270	PtrMemberAccess	x -> parent		420216	0					
ANR	420271	Identifier	x		420216	0					
ANR	420272	Identifier	parent		420216	1					
ANR	420273	Identifier	left		420216	1					
ANR	420274	Identifier	z		420216	1					
ANR	420275	ExpressionStatement	x -> parent -> left = x	656:20:20183:20202	420216	1	True				
ANR	420276	AssignmentExpression	x -> parent -> left = x		420216	0		=			
ANR	420277	PtrMemberAccess	x -> parent -> left		420216	0					
ANR	420278	PtrMemberAccess	x -> parent		420216	0					
ANR	420279	Identifier	x		420216	0					
ANR	420280	Identifier	parent		420216	1					
ANR	420281	Identifier	left		420216	1					
ANR	420282	Identifier	x		420216	1					
ANR	420283	ElseStatement	else		420216	0					
ANR	420284	ExpressionStatement	x -> parent -> right = x	658:20:20245:20266	420216	0	True				
ANR	420285	AssignmentExpression	x -> parent -> right = x		420216	0		=			
ANR	420286	PtrMemberAccess	x -> parent -> right		420216	0					
ANR	420287	PtrMemberAccess	x -> parent		420216	0					
ANR	420288	Identifier	x		420216	0					
ANR	420289	Identifier	parent		420216	1					
ANR	420290	Identifier	right		420216	1					
ANR	420291	Identifier	x		420216	1					
ANR	420292	ExpressionStatement	y -> parent = x	660:12:20294:20307	420216	2	True				
ANR	420293	AssignmentExpression	y -> parent = x		420216	0		=			
ANR	420294	PtrMemberAccess	y -> parent		420216	0					
ANR	420295	Identifier	y		420216	0					
ANR	420296	Identifier	parent		420216	1					
ANR	420297	Identifier	x		420216	1					
ANR	420298	IfStatement	if ( y -> left == x )		420216	3					
ANR	420299	Condition	y -> left == x	662:16:20363:20374	420216	0	True				
ANR	420300	EqualityExpression	y -> left == x		420216	0		==			
ANR	420301	PtrMemberAccess	y -> left		420216	0					
ANR	420302	Identifier	y		420216	0					
ANR	420303	Identifier	left		420216	1					
ANR	420304	Identifier	x		420216	1					
ANR	420305	CompoundStatement		18:30:455:455	420216	1					
ANR	420306	IfStatement	if ( z -> left == y )		420216	0					
ANR	420307	Condition	z -> left == y	664:20:20434:20445	420216	0	True				
ANR	420308	EqualityExpression	z -> left == y		420216	0		==			
ANR	420309	PtrMemberAccess	z -> left		420216	0					
ANR	420310	Identifier	z		420216	0					
ANR	420311	Identifier	left		420216	1					
ANR	420312	Identifier	y		420216	1					
ANR	420313	CompoundStatement		20:34:526:526	420216	1					
ANR	420314	ExpressionStatement	y -> left = x -> right	666:20:20503:20521	420216	0	True				
ANR	420315	AssignmentExpression	y -> left = x -> right		420216	0		=			
ANR	420316	PtrMemberAccess	y -> left		420216	0					
ANR	420317	Identifier	y		420216	0					
ANR	420318	Identifier	left		420216	1					
ANR	420319	PtrMemberAccess	x -> right		420216	1					
ANR	420320	Identifier	x		420216	0					
ANR	420321	Identifier	right		420216	1					
ANR	420322	IfStatement	if ( y -> left )		420216	1					
ANR	420323	Condition	y -> left	667:24:20547:20553	420216	0	True				
ANR	420324	PtrMemberAccess	y -> left		420216	0					
ANR	420325	Identifier	y		420216	0					
ANR	420326	Identifier	left		420216	1					
ANR	420327	ExpressionStatement	y -> left -> parent = y	668:24:20580:20599	420216	1	True				
ANR	420328	AssignmentExpression	y -> left -> parent = y		420216	0		=			
ANR	420329	PtrMemberAccess	y -> left -> parent		420216	0					
ANR	420330	PtrMemberAccess	y -> left		420216	0					
ANR	420331	Identifier	y		420216	0					
ANR	420332	Identifier	left		420216	1					
ANR	420333	Identifier	parent		420216	1					
ANR	420334	Identifier	y		420216	1					
ANR	420335	ExpressionStatement	z -> left = y -> right	669:20:20621:20639	420216	2	True				
ANR	420336	AssignmentExpression	z -> left = y -> right		420216	0		=			
ANR	420337	PtrMemberAccess	z -> left		420216	0					
ANR	420338	Identifier	z		420216	0					
ANR	420339	Identifier	left		420216	1					
ANR	420340	PtrMemberAccess	y -> right		420216	1					
ANR	420341	Identifier	y		420216	0					
ANR	420342	Identifier	right		420216	1					
ANR	420343	IfStatement	if ( z -> left )		420216	3					
ANR	420344	Condition	z -> left	670:24:20665:20671	420216	0	True				
ANR	420345	PtrMemberAccess	z -> left		420216	0					
ANR	420346	Identifier	z		420216	0					
ANR	420347	Identifier	left		420216	1					
ANR	420348	ExpressionStatement	z -> left -> parent = z	671:24:20698:20717	420216	1	True				
ANR	420349	AssignmentExpression	z -> left -> parent = z		420216	0		=			
ANR	420350	PtrMemberAccess	z -> left -> parent		420216	0					
ANR	420351	PtrMemberAccess	z -> left		420216	0					
ANR	420352	Identifier	z		420216	0					
ANR	420353	Identifier	left		420216	1					
ANR	420354	Identifier	parent		420216	1					
ANR	420355	Identifier	z		420216	1					
ANR	420356	ExpressionStatement	y -> right = z	672:20:20739:20751	420216	4	True				
ANR	420357	AssignmentExpression	y -> right = z		420216	0		=			
ANR	420358	PtrMemberAccess	y -> right		420216	0					
ANR	420359	Identifier	y		420216	0					
ANR	420360	Identifier	right		420216	1					
ANR	420361	Identifier	z		420216	1					
ANR	420362	ExpressionStatement	z -> parent = y	673:20:20773:20786	420216	5	True				
ANR	420363	AssignmentExpression	z -> parent = y		420216	0		=			
ANR	420364	PtrMemberAccess	z -> parent		420216	0					
ANR	420365	Identifier	z		420216	0					
ANR	420366	Identifier	parent		420216	1					
ANR	420367	Identifier	y		420216	1					
ANR	420368	ElseStatement	else		420216	0					
ANR	420369	CompoundStatement		30:23:889:889	420216	0					
ANR	420370	ExpressionStatement	z -> right = x -> left	676:20:20867:20885	420216	0	True				
ANR	420371	AssignmentExpression	z -> right = x -> left		420216	0		=			
ANR	420372	PtrMemberAccess	z -> right		420216	0					
ANR	420373	Identifier	z		420216	0					
ANR	420374	Identifier	right		420216	1					
ANR	420375	PtrMemberAccess	x -> left		420216	1					
ANR	420376	Identifier	x		420216	0					
ANR	420377	Identifier	left		420216	1					
ANR	420378	IfStatement	if ( z -> right )		420216	1					
ANR	420379	Condition	z -> right	677:24:20911:20918	420216	0	True				
ANR	420380	PtrMemberAccess	z -> right		420216	0					
ANR	420381	Identifier	z		420216	0					
ANR	420382	Identifier	right		420216	1					
ANR	420383	ExpressionStatement	z -> right -> parent = z	678:24:20945:20965	420216	1	True				
ANR	420384	AssignmentExpression	z -> right -> parent = z		420216	0		=			
ANR	420385	PtrMemberAccess	z -> right -> parent		420216	0					
ANR	420386	PtrMemberAccess	z -> right		420216	0					
ANR	420387	Identifier	z		420216	0					
ANR	420388	Identifier	right		420216	1					
ANR	420389	Identifier	parent		420216	1					
ANR	420390	Identifier	z		420216	1					
ANR	420391	ExpressionStatement	y -> left = x -> right	679:20:20987:21005	420216	2	True				
ANR	420392	AssignmentExpression	y -> left = x -> right		420216	0		=			
ANR	420393	PtrMemberAccess	y -> left		420216	0					
ANR	420394	Identifier	y		420216	0					
ANR	420395	Identifier	left		420216	1					
ANR	420396	PtrMemberAccess	x -> right		420216	1					
ANR	420397	Identifier	x		420216	0					
ANR	420398	Identifier	right		420216	1					
ANR	420399	IfStatement	if ( y -> left )		420216	3					
ANR	420400	Condition	y -> left	680:24:21031:21037	420216	0	True				
ANR	420401	PtrMemberAccess	y -> left		420216	0					
ANR	420402	Identifier	y		420216	0					
ANR	420403	Identifier	left		420216	1					
ANR	420404	ExpressionStatement	y -> left -> parent = y	681:24:21064:21083	420216	1	True				
ANR	420405	AssignmentExpression	y -> left -> parent = y		420216	0		=			
ANR	420406	PtrMemberAccess	y -> left -> parent		420216	0					
ANR	420407	PtrMemberAccess	y -> left		420216	0					
ANR	420408	Identifier	y		420216	0					
ANR	420409	Identifier	left		420216	1					
ANR	420410	Identifier	parent		420216	1					
ANR	420411	Identifier	y		420216	1					
ANR	420412	ExpressionStatement	x -> left = z	682:20:21105:21116	420216	4	True				
ANR	420413	AssignmentExpression	x -> left = z		420216	0		=			
ANR	420414	PtrMemberAccess	x -> left		420216	0					
ANR	420415	Identifier	x		420216	0					
ANR	420416	Identifier	left		420216	1					
ANR	420417	Identifier	z		420216	1					
ANR	420418	ExpressionStatement	z -> parent = x	683:20:21138:21151	420216	5	True				
ANR	420419	AssignmentExpression	z -> parent = x		420216	0		=			
ANR	420420	PtrMemberAccess	z -> parent		420216	0					
ANR	420421	Identifier	z		420216	0					
ANR	420422	Identifier	parent		420216	1					
ANR	420423	Identifier	x		420216	1					
ANR	420424	ExpressionStatement	x -> right = y	685:16:21187:21204	420216	1	True				
ANR	420425	AssignmentExpression	x -> right = y		420216	0		=			
ANR	420426	PtrMemberAccess	x -> right		420216	0					
ANR	420427	Identifier	x		420216	0					
ANR	420428	Identifier	right		420216	1					
ANR	420429	Identifier	y		420216	1					
ANR	420430	ElseStatement	else		420216	0					
ANR	420431	CompoundStatement		42:19:1303:1303	420216	0					
ANR	420432	IfStatement	if ( z -> left == y )		420216	0					
ANR	420433	Condition	z -> left == y	688:20:21282:21293	420216	0	True				
ANR	420434	EqualityExpression	z -> left == y		420216	0		==			
ANR	420435	PtrMemberAccess	z -> left		420216	0					
ANR	420436	Identifier	z		420216	0					
ANR	420437	Identifier	left		420216	1					
ANR	420438	Identifier	y		420216	1					
ANR	420439	CompoundStatement		44:34:1374:1374	420216	1					
ANR	420440	ExpressionStatement	y -> right = x -> left	690:20:21351:21369	420216	0	True				
ANR	420441	AssignmentExpression	y -> right = x -> left		420216	0		=			
ANR	420442	PtrMemberAccess	y -> right		420216	0					
ANR	420443	Identifier	y		420216	0					
ANR	420444	Identifier	right		420216	1					
ANR	420445	PtrMemberAccess	x -> left		420216	1					
ANR	420446	Identifier	x		420216	0					
ANR	420447	Identifier	left		420216	1					
ANR	420448	IfStatement	if ( y -> right )		420216	1					
ANR	420449	Condition	y -> right	691:24:21395:21402	420216	0	True				
ANR	420450	PtrMemberAccess	y -> right		420216	0					
ANR	420451	Identifier	y		420216	0					
ANR	420452	Identifier	right		420216	1					
ANR	420453	ExpressionStatement	y -> right -> parent = y	692:24:21429:21449	420216	1	True				
ANR	420454	AssignmentExpression	y -> right -> parent = y		420216	0		=			
ANR	420455	PtrMemberAccess	y -> right -> parent		420216	0					
ANR	420456	PtrMemberAccess	y -> right		420216	0					
ANR	420457	Identifier	y		420216	0					
ANR	420458	Identifier	right		420216	1					
ANR	420459	Identifier	parent		420216	1					
ANR	420460	Identifier	y		420216	1					
ANR	420461	ExpressionStatement	z -> left = x -> right	693:20:21471:21489	420216	2	True				
ANR	420462	AssignmentExpression	z -> left = x -> right		420216	0		=			
ANR	420463	PtrMemberAccess	z -> left		420216	0					
ANR	420464	Identifier	z		420216	0					
ANR	420465	Identifier	left		420216	1					
ANR	420466	PtrMemberAccess	x -> right		420216	1					
ANR	420467	Identifier	x		420216	0					
ANR	420468	Identifier	right		420216	1					
ANR	420469	IfStatement	if ( z -> left )		420216	3					
ANR	420470	Condition	z -> left	694:24:21515:21521	420216	0	True				
ANR	420471	PtrMemberAccess	z -> left		420216	0					
ANR	420472	Identifier	z		420216	0					
ANR	420473	Identifier	left		420216	1					
ANR	420474	ExpressionStatement	z -> left -> parent = z	695:24:21548:21567	420216	1	True				
ANR	420475	AssignmentExpression	z -> left -> parent = z		420216	0		=			
ANR	420476	PtrMemberAccess	z -> left -> parent		420216	0					
ANR	420477	PtrMemberAccess	z -> left		420216	0					
ANR	420478	Identifier	z		420216	0					
ANR	420479	Identifier	left		420216	1					
ANR	420480	Identifier	parent		420216	1					
ANR	420481	Identifier	z		420216	1					
ANR	420482	ExpressionStatement	x -> right = z	696:20:21589:21601	420216	4	True				
ANR	420483	AssignmentExpression	x -> right = z		420216	0		=			
ANR	420484	PtrMemberAccess	x -> right		420216	0					
ANR	420485	Identifier	x		420216	0					
ANR	420486	Identifier	right		420216	1					
ANR	420487	Identifier	z		420216	1					
ANR	420488	ExpressionStatement	z -> parent = x	697:20:21623:21636	420216	5	True				
ANR	420489	AssignmentExpression	z -> parent = x		420216	0		=			
ANR	420490	PtrMemberAccess	z -> parent		420216	0					
ANR	420491	Identifier	z		420216	0					
ANR	420492	Identifier	parent		420216	1					
ANR	420493	Identifier	x		420216	1					
ANR	420494	ElseStatement	else		420216	0					
ANR	420495	CompoundStatement		54:23:1739:1739	420216	0					
ANR	420496	ExpressionStatement	z -> right = y -> left	700:20:21717:21735	420216	0	True				
ANR	420497	AssignmentExpression	z -> right = y -> left		420216	0		=			
ANR	420498	PtrMemberAccess	z -> right		420216	0					
ANR	420499	Identifier	z		420216	0					
ANR	420500	Identifier	right		420216	1					
ANR	420501	PtrMemberAccess	y -> left		420216	1					
ANR	420502	Identifier	y		420216	0					
ANR	420503	Identifier	left		420216	1					
ANR	420504	IfStatement	if ( z -> right )		420216	1					
ANR	420505	Condition	z -> right	701:24:21761:21768	420216	0	True				
ANR	420506	PtrMemberAccess	z -> right		420216	0					
ANR	420507	Identifier	z		420216	0					
ANR	420508	Identifier	right		420216	1					
ANR	420509	ExpressionStatement	z -> right -> parent = z	702:24:21795:21815	420216	1	True				
ANR	420510	AssignmentExpression	z -> right -> parent = z		420216	0		=			
ANR	420511	PtrMemberAccess	z -> right -> parent		420216	0					
ANR	420512	PtrMemberAccess	z -> right		420216	0					
ANR	420513	Identifier	z		420216	0					
ANR	420514	Identifier	right		420216	1					
ANR	420515	Identifier	parent		420216	1					
ANR	420516	Identifier	z		420216	1					
ANR	420517	ExpressionStatement	y -> right = x -> left	703:20:21837:21855	420216	2	True				
ANR	420518	AssignmentExpression	y -> right = x -> left		420216	0		=			
ANR	420519	PtrMemberAccess	y -> right		420216	0					
ANR	420520	Identifier	y		420216	0					
ANR	420521	Identifier	right		420216	1					
ANR	420522	PtrMemberAccess	x -> left		420216	1					
ANR	420523	Identifier	x		420216	0					
ANR	420524	Identifier	left		420216	1					
ANR	420525	IfStatement	if ( y -> right )		420216	3					
ANR	420526	Condition	y -> right	704:24:21881:21888	420216	0	True				
ANR	420527	PtrMemberAccess	y -> right		420216	0					
ANR	420528	Identifier	y		420216	0					
ANR	420529	Identifier	right		420216	1					
ANR	420530	ExpressionStatement	y -> right -> parent = y	705:24:21915:21935	420216	1	True				
ANR	420531	AssignmentExpression	y -> right -> parent = y		420216	0		=			
ANR	420532	PtrMemberAccess	y -> right -> parent		420216	0					
ANR	420533	PtrMemberAccess	y -> right		420216	0					
ANR	420534	Identifier	y		420216	0					
ANR	420535	Identifier	right		420216	1					
ANR	420536	Identifier	parent		420216	1					
ANR	420537	Identifier	y		420216	1					
ANR	420538	ExpressionStatement	y -> left = z	706:20:21957:21968	420216	4	True				
ANR	420539	AssignmentExpression	y -> left = z		420216	0		=			
ANR	420540	PtrMemberAccess	y -> left		420216	0					
ANR	420541	Identifier	y		420216	0					
ANR	420542	Identifier	left		420216	1					
ANR	420543	Identifier	z		420216	1					
ANR	420544	ExpressionStatement	z -> parent = y	707:20:21990:22003	420216	5	True				
ANR	420545	AssignmentExpression	z -> parent = y		420216	0		=			
ANR	420546	PtrMemberAccess	z -> parent		420216	0					
ANR	420547	Identifier	z		420216	0					
ANR	420548	Identifier	parent		420216	1					
ANR	420549	Identifier	y		420216	1					
ANR	420550	ExpressionStatement	x -> left = y	709:16:22039:22050	420216	1	True				
ANR	420551	AssignmentExpression	x -> left = y		420216	0		=			
ANR	420552	PtrMemberAccess	x -> left		420216	0					
ANR	420553	Identifier	x		420216	0					
ANR	420554	Identifier	left		420216	1					
ANR	420555	Identifier	y		420216	1					
ANR	420556	ElseStatement	else		420216	0					
ANR	420557	CompoundStatement		67:15:2159:2159	420216	0					
ANR	420558	ExpressionStatement	x -> parent = NULL	713:12:22126:22142	420216	0	True				
ANR	420559	AssignmentExpression	x -> parent = NULL		420216	0		=			
ANR	420560	PtrMemberAccess	x -> parent		420216	0					
ANR	420561	Identifier	x		420216	0					
ANR	420562	Identifier	parent		420216	1					
ANR	420563	Identifier	NULL		420216	1					
ANR	420564	ExpressionStatement	y -> parent = x	714:12:22156:22169	420216	1	True				
ANR	420565	AssignmentExpression	y -> parent = x		420216	0		=			
ANR	420566	PtrMemberAccess	y -> parent		420216	0					
ANR	420567	Identifier	y		420216	0					
ANR	420568	Identifier	parent		420216	1					
ANR	420569	Identifier	x		420216	1					
ANR	420570	IfStatement	if ( y -> left == x )		420216	2					
ANR	420571	Condition	y -> left == x	715:16:22187:22198	420216	0	True				
ANR	420572	EqualityExpression	y -> left == x		420216	0		==			
ANR	420573	PtrMemberAccess	y -> left		420216	0					
ANR	420574	Identifier	y		420216	0					
ANR	420575	Identifier	left		420216	1					
ANR	420576	Identifier	x		420216	1					
ANR	420577	CompoundStatement		71:30:2279:2279	420216	1					
ANR	420578	ExpressionStatement	y -> left = x -> right	717:16:22248:22266	420216	0	True				
ANR	420579	AssignmentExpression	y -> left = x -> right		420216	0		=			
ANR	420580	PtrMemberAccess	y -> left		420216	0					
ANR	420581	Identifier	y		420216	0					
ANR	420582	Identifier	left		420216	1					
ANR	420583	PtrMemberAccess	x -> right		420216	1					
ANR	420584	Identifier	x		420216	0					
ANR	420585	Identifier	right		420216	1					
ANR	420586	IfStatement	if ( y -> left )		420216	1					
ANR	420587	Condition	y -> left	718:20:22288:22294	420216	0	True				
ANR	420588	PtrMemberAccess	y -> left		420216	0					
ANR	420589	Identifier	y		420216	0					
ANR	420590	Identifier	left		420216	1					
ANR	420591	ExpressionStatement	y -> left -> parent = y	719:20:22317:22336	420216	1	True				
ANR	420592	AssignmentExpression	y -> left -> parent = y		420216	0		=			
ANR	420593	PtrMemberAccess	y -> left -> parent		420216	0					
ANR	420594	PtrMemberAccess	y -> left		420216	0					
ANR	420595	Identifier	y		420216	0					
ANR	420596	Identifier	left		420216	1					
ANR	420597	Identifier	parent		420216	1					
ANR	420598	Identifier	y		420216	1					
ANR	420599	ExpressionStatement	x -> right = y	720:16:22354:22366	420216	2	True				
ANR	420600	AssignmentExpression	x -> right = y		420216	0		=			
ANR	420601	PtrMemberAccess	x -> right		420216	0					
ANR	420602	Identifier	x		420216	0					
ANR	420603	Identifier	right		420216	1					
ANR	420604	Identifier	y		420216	1					
ANR	420605	ElseStatement	else		420216	0					
ANR	420606	CompoundStatement		77:19:2465:2465	420216	0					
ANR	420607	ExpressionStatement	y -> right = x -> left	723:16:22435:22453	420216	0	True				
ANR	420608	AssignmentExpression	y -> right = x -> left		420216	0		=			
ANR	420609	PtrMemberAccess	y -> right		420216	0					
ANR	420610	Identifier	y		420216	0					
ANR	420611	Identifier	right		420216	1					
ANR	420612	PtrMemberAccess	x -> left		420216	1					
ANR	420613	Identifier	x		420216	0					
ANR	420614	Identifier	left		420216	1					
ANR	420615	IfStatement	if ( y -> right )		420216	1					
ANR	420616	Condition	y -> right	724:20:22475:22482	420216	0	True				
ANR	420617	PtrMemberAccess	y -> right		420216	0					
ANR	420618	Identifier	y		420216	0					
ANR	420619	Identifier	right		420216	1					
ANR	420620	ExpressionStatement	y -> right -> parent = y	725:20:22505:22525	420216	1	True				
ANR	420621	AssignmentExpression	y -> right -> parent = y		420216	0		=			
ANR	420622	PtrMemberAccess	y -> right -> parent		420216	0					
ANR	420623	PtrMemberAccess	y -> right		420216	0					
ANR	420624	Identifier	y		420216	0					
ANR	420625	Identifier	right		420216	1					
ANR	420626	Identifier	parent		420216	1					
ANR	420627	Identifier	y		420216	1					
ANR	420628	ExpressionStatement	x -> left = y	726:16:22543:22554	420216	2	True				
ANR	420629	AssignmentExpression	x -> left = y		420216	0		=			
ANR	420630	PtrMemberAccess	x -> left		420216	0					
ANR	420631	Identifier	x		420216	0					
ANR	420632	Identifier	left		420216	1					
ANR	420633	Identifier	y		420216	1					
ANR	420634	ExpressionStatement	mem -> root = x	730:4:22590:22603	420216	3	True				
ANR	420635	AssignmentExpression	mem -> root = x		420216	0		=			
ANR	420636	PtrMemberAccess	mem -> root		420216	0					
ANR	420637	Identifier	mem		420216	0					
ANR	420638	Identifier	root		420216	1					
ANR	420639	Identifier	x		420216	1					
ANR	420640	ReturnType	static void		420216	1					
ANR	420641	Identifier	splay_move_to_root		420216	2					
ANR	420642	ParameterList	"clump_t * x , gs_ref_memory_t * mem"		420216	3					
ANR	420643	Parameter	clump_t * x	644:19:19887:19896	420216	0	True				
ANR	420644	ParameterType	clump_t *		420216	0					
ANR	420645	Identifier	x		420216	1					
ANR	420646	Parameter	gs_ref_memory_t * mem	644:31:19899:19918	420216	1	True				
ANR	420647	ParameterType	gs_ref_memory_t *		420216	0					
ANR	420648	Identifier	mem		420216	1					
ANR	420649	CFGEntryNode	ENTRY		420216		True				
ANR	420650	CFGExitNode	EXIT		420216		True				
ANR	420651	Symbol	* x		420216						
ANR	420652	Symbol	* y		420216						
ANR	420653	Symbol	* x -> parent		420216						
ANR	420654	Symbol	* y -> right		420216						
ANR	420655	Symbol	* z		420216						
ANR	420656	Symbol	* z -> left		420216						
ANR	420657	Symbol	z -> left		420216						
ANR	420658	Symbol	* * z		420216						
ANR	420659	Symbol	* y -> left		420216						
ANR	420660	Symbol	* * y		420216						
ANR	420661	Symbol	* * x		420216						
ANR	420662	Symbol	mem		420216						
ANR	420663	Symbol	y -> left		420216						
ANR	420664	Symbol	y -> right		420216						
ANR	420665	Symbol	x -> left		420216						
ANR	420666	Symbol	y -> parent		420216						
ANR	420667	Symbol	z -> left -> parent		420216						
ANR	420668	Symbol	NULL		420216						
ANR	420669	Symbol	z -> right		420216						
ANR	420670	Symbol	x -> parent -> left		420216						
ANR	420671	Symbol	x -> right		420216						
ANR	420672	Symbol	x -> parent		420216						
ANR	420673	Symbol	y -> left -> parent		420216						
ANR	420674	Symbol	x		420216						
ANR	420675	Symbol	y		420216						
ANR	420676	Symbol	mem -> root		420216						
ANR	420677	Symbol	z		420216						
ANR	420678	Symbol	* z -> right		420216						
ANR	420679	Symbol	x -> parent -> right		420216						
ANR	420680	Symbol	z -> parent		420216						
ANR	420681	Symbol	y -> right -> parent		420216						
ANR	420682	Symbol	z -> right -> parent		420216						
ANR	420683	Symbol	* mem		420216						
ANR	420684	Function	splay_insert	733:0:22608:23031							
ANR	420685	FunctionDef	"splay_insert (clump_t * cp , gs_ref_memory_t * mem)"		420684	0					
ANR	420686	CompoundStatement		735:0:22668:23031	420684	0					
ANR	420687	IdentifierDeclStatement	clump_t * node = NULL ;	736:4:22674:22694	420684	0	True				
ANR	420688	IdentifierDecl	* node = NULL		420684	0					
ANR	420689	IdentifierDeclType	clump_t *		420684	0					
ANR	420690	Identifier	node		420684	1					
ANR	420691	AssignmentExpression	* node = NULL		420684	2		=			
ANR	420692	Identifier	NULL		420684	0					
ANR	420693	Identifier	NULL		420684	1					
ANR	420694	IdentifierDeclStatement	clump_t * * root = & mem -> root ;	737:4:22700:22727	420684	1	True				
ANR	420695	IdentifierDecl	* * root = & mem -> root		420684	0					
ANR	420696	IdentifierDeclType	clump_t * *		420684	0					
ANR	420697	Identifier	root		420684	1					
ANR	420698	AssignmentExpression	* * root = & mem -> root		420684	2		=			
ANR	420699	Identifier	root		420684	0					
ANR	420700	UnaryOperationExpression	& mem -> root		420684	1					
ANR	420701	UnaryOperator	&		420684	0					
ANR	420702	PtrMemberAccess	mem -> root		420684	1					
ANR	420703	Identifier	mem		420684	0					
ANR	420704	Identifier	root		420684	1					
ANR	420705	WhileStatement	while ( * root )		420684	2					
ANR	420706	Condition	* root	739:11:22741:22745	420684	0	True				
ANR	420707	UnaryOperationExpression	* root		420684	0					
ANR	420708	UnaryOperator	*		420684	0					
ANR	420709	Identifier	root		420684	1					
ANR	420710	CompoundStatement		5:18:79:79	420684	1					
ANR	420711	ExpressionStatement	node = * root	740:8:22758:22770	420684	0	True				
ANR	420712	AssignmentExpression	node = * root		420684	0		=			
ANR	420713	Identifier	node		420684	0					
ANR	420714	UnaryOperationExpression	* root		420684	1					
ANR	420715	UnaryOperator	*		420684	0					
ANR	420716	Identifier	root		420684	1					
ANR	420717	IfStatement	"if ( PTR_LT ( cp -> cbase , node -> cbase ) )"		420684	1					
ANR	420718	Condition	"PTR_LT ( cp -> cbase , node -> cbase )"	741:12:22784:22813	420684	0	True				
ANR	420719	CallExpression	"PTR_LT ( cp -> cbase , node -> cbase )"		420684	0					
ANR	420720	Callee	PTR_LT		420684	0					
ANR	420721	Identifier	PTR_LT		420684	0					
ANR	420722	ArgumentList	cp -> cbase		420684	1					
ANR	420723	Argument	cp -> cbase		420684	0					
ANR	420724	PtrMemberAccess	cp -> cbase		420684	0					
ANR	420725	Identifier	cp		420684	0					
ANR	420726	Identifier	cbase		420684	1					
ANR	420727	Argument	node -> cbase		420684	1					
ANR	420728	PtrMemberAccess	node -> cbase		420684	0					
ANR	420729	Identifier	node		420684	0					
ANR	420730	Identifier	cbase		420684	1					
ANR	420731	CompoundStatement		7:44:147:147	420684	1					
ANR	420732	ExpressionStatement	root = & node -> left	742:12:22830:22848	420684	0	True				
ANR	420733	AssignmentExpression	root = & node -> left		420684	0		=			
ANR	420734	Identifier	root		420684	0					
ANR	420735	UnaryOperationExpression	& node -> left		420684	1					
ANR	420736	UnaryOperator	&		420684	0					
ANR	420737	PtrMemberAccess	node -> left		420684	1					
ANR	420738	Identifier	node		420684	0					
ANR	420739	Identifier	left		420684	1					
ANR	420740	ElseStatement	else		420684	0					
ANR	420741	CompoundStatement		9:15:196:196	420684	0					
ANR	420742	ExpressionStatement	root = & node -> right	744:12:22879:22898	420684	0	True				
ANR	420743	AssignmentExpression	root = & node -> right		420684	0		=			
ANR	420744	Identifier	root		420684	0					
ANR	420745	UnaryOperationExpression	& node -> right		420684	1					
ANR	420746	UnaryOperator	&		420684	0					
ANR	420747	PtrMemberAccess	node -> right		420684	1					
ANR	420748	Identifier	node		420684	0					
ANR	420749	Identifier	right		420684	1					
ANR	420750	ExpressionStatement	* root = cp	747:4:22920:22930	420684	3	True				
ANR	420751	AssignmentExpression	* root = cp		420684	0		=			
ANR	420752	UnaryOperationExpression	* root		420684	0					
ANR	420753	UnaryOperator	*		420684	0					
ANR	420754	Identifier	root		420684	1					
ANR	420755	Identifier	cp		420684	1					
ANR	420756	ExpressionStatement	cp -> left = NULL	748:4:22936:22951	420684	4	True				
ANR	420757	AssignmentExpression	cp -> left = NULL		420684	0		=			
ANR	420758	PtrMemberAccess	cp -> left		420684	0					
ANR	420759	Identifier	cp		420684	0					
ANR	420760	Identifier	left		420684	1					
ANR	420761	Identifier	NULL		420684	1					
ANR	420762	ExpressionStatement	cp -> right = NULL	749:4:22957:22973	420684	5	True				
ANR	420763	AssignmentExpression	cp -> right = NULL		420684	0		=			
ANR	420764	PtrMemberAccess	cp -> right		420684	0					
ANR	420765	Identifier	cp		420684	0					
ANR	420766	Identifier	right		420684	1					
ANR	420767	Identifier	NULL		420684	1					
ANR	420768	ExpressionStatement	cp -> parent = node	750:4:22979:22996	420684	6	True				
ANR	420769	AssignmentExpression	cp -> parent = node		420684	0		=			
ANR	420770	PtrMemberAccess	cp -> parent		420684	0					
ANR	420771	Identifier	cp		420684	0					
ANR	420772	Identifier	parent		420684	1					
ANR	420773	Identifier	node		420684	1					
ANR	420774	ExpressionStatement	"splay_move_to_root ( cp , mem )"	751:4:23002:23029	420684	7	True				
ANR	420775	CallExpression	"splay_move_to_root ( cp , mem )"		420684	0					
ANR	420776	Callee	splay_move_to_root		420684	0					
ANR	420777	Identifier	splay_move_to_root		420684	0					
ANR	420778	ArgumentList	cp		420684	1					
ANR	420779	Argument	cp		420684	0					
ANR	420780	Identifier	cp		420684	0					
ANR	420781	Argument	mem		420684	1					
ANR	420782	Identifier	mem		420684	0					
ANR	420783	ReturnType	static void		420684	1					
ANR	420784	Identifier	splay_insert		420684	2					
ANR	420785	ParameterList	"clump_t * cp , gs_ref_memory_t * mem"		420684	3					
ANR	420786	Parameter	clump_t * cp	734:13:22633:22643	420684	0	True				
ANR	420787	ParameterType	clump_t *		420684	0					
ANR	420788	Identifier	cp		420684	1					
ANR	420789	Parameter	gs_ref_memory_t * mem	734:26:22646:22665	420684	1	True				
ANR	420790	ParameterType	gs_ref_memory_t *		420684	0					
ANR	420791	Identifier	mem		420684	1					
ANR	420792	CFGEntryNode	ENTRY		420684		True				
ANR	420793	CFGExitNode	EXIT		420684		True				
ANR	420794	Symbol	NULL		420684						
ANR	420795	Symbol	node -> cbase		420684						
ANR	420796	Symbol	& node -> left		420684						
ANR	420797	Symbol	cp -> right		420684						
ANR	420798	Symbol	& mem -> root		420684						
ANR	420799	Symbol	cp -> cbase		420684						
ANR	420800	Symbol	cp		420684						
ANR	420801	Symbol	* cp		420684						
ANR	420802	Symbol	node		420684						
ANR	420803	Symbol	PTR_LT		420684						
ANR	420804	Symbol	mem		420684						
ANR	420805	Symbol	& node -> right		420684						
ANR	420806	Symbol	cp -> left		420684						
ANR	420807	Symbol	cp -> parent		420684						
ANR	420808	Symbol	root		420684						
ANR	420809	Symbol	* node		420684						
ANR	420810	Symbol	* root		420684						
ANR	420811	DeclStmt									
ANR	420812	Decl							void	"void * ( gs_memory_t * , gs_memory_type_ptr_t , clump_t * * )"	ialloc_solo
ANR	420813	Function	ialloc_alloc_state	760:0:23271:24579							
ANR	420814	FunctionDef	"ialloc_alloc_state (gs_memory_t * parent , uint clump_size)"		420813	0					
ANR	420815	CompoundStatement		762:0:23347:24579	420813	0					
ANR	420816	IdentifierDeclStatement	clump_t * cp ;	763:4:23353:23364	420813	0	True				
ANR	420817	IdentifierDecl	* cp		420813	0					
ANR	420818	IdentifierDeclType	clump_t *		420813	0					
ANR	420819	Identifier	cp		420813	1					
ANR	420820	IdentifierDeclStatement	"gs_ref_memory_t * iimem = ialloc_solo ( parent , & st_ref_memory , & cp ) ;"	764:4:23370:23435	420813	1	True				
ANR	420821	IdentifierDecl	"* iimem = ialloc_solo ( parent , & st_ref_memory , & cp )"		420813	0					
ANR	420822	IdentifierDeclType	gs_ref_memory_t *		420813	0					
ANR	420823	Identifier	iimem		420813	1					
ANR	420824	AssignmentExpression	"* iimem = ialloc_solo ( parent , & st_ref_memory , & cp )"		420813	2		=			
ANR	420825	Identifier	iimem		420813	0					
ANR	420826	CallExpression	"ialloc_solo ( parent , & st_ref_memory , & cp )"		420813	1					
ANR	420827	Callee	ialloc_solo		420813	0					
ANR	420828	Identifier	ialloc_solo		420813	0					
ANR	420829	ArgumentList	parent		420813	1					
ANR	420830	Argument	parent		420813	0					
ANR	420831	Identifier	parent		420813	0					
ANR	420832	Argument	& st_ref_memory		420813	1					
ANR	420833	UnaryOperationExpression	& st_ref_memory		420813	0					
ANR	420834	UnaryOperator	&		420813	0					
ANR	420835	Identifier	st_ref_memory		420813	1					
ANR	420836	Argument	& cp		420813	2					
ANR	420837	UnaryOperationExpression	& cp		420813	0					
ANR	420838	UnaryOperator	&		420813	0					
ANR	420839	Identifier	cp		420813	1					
ANR	420840	IfStatement	if ( iimem == 0 )		420813	2					
ANR	420841	Condition	iimem == 0	766:8:23446:23455	420813	0	True				
ANR	420842	EqualityExpression	iimem == 0		420813	0		==			
ANR	420843	Identifier	iimem		420813	0					
ANR	420844	PrimaryExpression	0		420813	1					
ANR	420845	ReturnStatement	return 0 ;	767:8:23466:23474	420813	1	True				
ANR	420846	PrimaryExpression	0		420813	0					
ANR	420847	ExpressionStatement	iimem -> stable_memory = ( gs_memory_t * ) iimem	768:4:23480:23523	420813	3	True				
ANR	420848	AssignmentExpression	iimem -> stable_memory = ( gs_memory_t * ) iimem		420813	0		=			
ANR	420849	PtrMemberAccess	iimem -> stable_memory		420813	0					
ANR	420850	Identifier	iimem		420813	0					
ANR	420851	Identifier	stable_memory		420813	1					
ANR	420852	CastExpression	( gs_memory_t * ) iimem		420813	1					
ANR	420853	CastTarget	gs_memory_t *		420813	0					
ANR	420854	Identifier	iimem		420813	1					
ANR	420855	ExpressionStatement	iimem -> procs = gs_ref_memory_procs	769:4:23529:23563	420813	4	True				
ANR	420856	AssignmentExpression	iimem -> procs = gs_ref_memory_procs		420813	0		=			
ANR	420857	PtrMemberAccess	iimem -> procs		420813	0					
ANR	420858	Identifier	iimem		420813	0					
ANR	420859	Identifier	procs		420813	1					
ANR	420860	Identifier	gs_ref_memory_procs		420813	1					
ANR	420861	ExpressionStatement	iimem -> gs_lib_ctx = parent -> gs_lib_ctx	770:4:23569:23607	420813	5	True				
ANR	420862	AssignmentExpression	iimem -> gs_lib_ctx = parent -> gs_lib_ctx		420813	0		=			
ANR	420863	PtrMemberAccess	iimem -> gs_lib_ctx		420813	0					
ANR	420864	Identifier	iimem		420813	0					
ANR	420865	Identifier	gs_lib_ctx		420813	1					
ANR	420866	PtrMemberAccess	parent -> gs_lib_ctx		420813	1					
ANR	420867	Identifier	parent		420813	0					
ANR	420868	Identifier	gs_lib_ctx		420813	1					
ANR	420869	ExpressionStatement	iimem -> non_gc_memory = parent	771:4:23613:23642	420813	6	True				
ANR	420870	AssignmentExpression	iimem -> non_gc_memory = parent		420813	0		=			
ANR	420871	PtrMemberAccess	iimem -> non_gc_memory		420813	0					
ANR	420872	Identifier	iimem		420813	0					
ANR	420873	Identifier	non_gc_memory		420813	1					
ANR	420874	Identifier	parent		420813	1					
ANR	420875	ExpressionStatement	iimem -> thread_safe_memory = parent -> thread_safe_memory	772:4:23648:23702	420813	7	True				
ANR	420876	AssignmentExpression	iimem -> thread_safe_memory = parent -> thread_safe_memory		420813	0		=			
ANR	420877	PtrMemberAccess	iimem -> thread_safe_memory		420813	0					
ANR	420878	Identifier	iimem		420813	0					
ANR	420879	Identifier	thread_safe_memory		420813	1					
ANR	420880	PtrMemberAccess	parent -> thread_safe_memory		420813	1					
ANR	420881	Identifier	parent		420813	0					
ANR	420882	Identifier	thread_safe_memory		420813	1					
ANR	420883	ExpressionStatement	iimem -> clump_size = clump_size	773:4:23708:23738	420813	8	True				
ANR	420884	AssignmentExpression	iimem -> clump_size = clump_size		420813	0		=			
ANR	420885	PtrMemberAccess	iimem -> clump_size		420813	0					
ANR	420886	Identifier	iimem		420813	0					
ANR	420887	Identifier	clump_size		420813	1					
ANR	420888	Identifier	clump_size		420813	1					
ANR	420889	ExpressionStatement	iimem -> large_size = 1	775:4:23810:23831	420813	9	True				
ANR	420890	AssignmentExpression	iimem -> large_size = 1		420813	0		=			
ANR	420891	PtrMemberAccess	iimem -> large_size		420813	0					
ANR	420892	Identifier	iimem		420813	0					
ANR	420893	Identifier	large_size		420813	1					
ANR	420894	PrimaryExpression	1		420813	1					
ANR	420895	ExpressionStatement	iimem -> is_controlled = false	779:4:23915:23943	420813	10	True				
ANR	420896	AssignmentExpression	iimem -> is_controlled = false		420813	0		=			
ANR	420897	PtrMemberAccess	iimem -> is_controlled		420813	0					
ANR	420898	Identifier	iimem		420813	0					
ANR	420899	Identifier	is_controlled		420813	1					
ANR	420900	Identifier	false		420813	1					
ANR	420901	ExpressionStatement	iimem -> gc_status . vm_threshold = clump_size * 3L	780:4:23949:23996	420813	11	True				
ANR	420902	AssignmentExpression	iimem -> gc_status . vm_threshold = clump_size * 3L		420813	0		=			
ANR	420903	MemberAccess	iimem -> gc_status . vm_threshold		420813	0					
ANR	420904	PtrMemberAccess	iimem -> gc_status		420813	0					
ANR	420905	Identifier	iimem		420813	0					
ANR	420906	Identifier	gc_status		420813	1					
ANR	420907	Identifier	vm_threshold		420813	1					
ANR	420908	MultiplicativeExpression	clump_size * 3L		420813	1		*			
ANR	420909	Identifier	clump_size		420813	0					
ANR	420910	PrimaryExpression	3L		420813	1					
ANR	420911	ExpressionStatement	iimem -> gc_status . max_vm = max_long	781:4:24002:24036	420813	12	True				
ANR	420912	AssignmentExpression	iimem -> gc_status . max_vm = max_long		420813	0		=			
ANR	420913	MemberAccess	iimem -> gc_status . max_vm		420813	0					
ANR	420914	PtrMemberAccess	iimem -> gc_status		420813	0					
ANR	420915	Identifier	iimem		420813	0					
ANR	420916	Identifier	gc_status		420813	1					
ANR	420917	Identifier	max_vm		420813	1					
ANR	420918	Identifier	max_long		420813	1					
ANR	420919	ExpressionStatement	iimem -> gc_status . signal_value = 0	782:4:24042:24075	420813	13	True				
ANR	420920	AssignmentExpression	iimem -> gc_status . signal_value = 0		420813	0		=			
ANR	420921	MemberAccess	iimem -> gc_status . signal_value		420813	0					
ANR	420922	PtrMemberAccess	iimem -> gc_status		420813	0					
ANR	420923	Identifier	iimem		420813	0					
ANR	420924	Identifier	gc_status		420813	1					
ANR	420925	Identifier	signal_value		420813	1					
ANR	420926	PrimaryExpression	0		420813	1					
ANR	420927	ExpressionStatement	iimem -> gc_status . enabled = false	783:4:24081:24113	420813	14	True				
ANR	420928	AssignmentExpression	iimem -> gc_status . enabled = false		420813	0		=			
ANR	420929	MemberAccess	iimem -> gc_status . enabled		420813	0					
ANR	420930	PtrMemberAccess	iimem -> gc_status		420813	0					
ANR	420931	Identifier	iimem		420813	0					
ANR	420932	Identifier	gc_status		420813	1					
ANR	420933	Identifier	enabled		420813	1					
ANR	420934	Identifier	false		420813	1					
ANR	420935	ExpressionStatement	iimem -> gc_status . requested = 0	784:4:24119:24149	420813	15	True				
ANR	420936	AssignmentExpression	iimem -> gc_status . requested = 0		420813	0		=			
ANR	420937	MemberAccess	iimem -> gc_status . requested		420813	0					
ANR	420938	PtrMemberAccess	iimem -> gc_status		420813	0					
ANR	420939	Identifier	iimem		420813	0					
ANR	420940	Identifier	gc_status		420813	1					
ANR	420941	Identifier	requested		420813	1					
ANR	420942	PrimaryExpression	0		420813	1					
ANR	420943	ExpressionStatement	iimem -> gc_allocated = 0	785:4:24155:24178	420813	16	True				
ANR	420944	AssignmentExpression	iimem -> gc_allocated = 0		420813	0		=			
ANR	420945	PtrMemberAccess	iimem -> gc_allocated		420813	0					
ANR	420946	Identifier	iimem		420813	0					
ANR	420947	Identifier	gc_allocated		420813	1					
ANR	420948	PrimaryExpression	0		420813	1					
ANR	420949	ExpressionStatement	iimem -> previous_status . allocated = 0	786:4:24184:24220	420813	17	True				
ANR	420950	AssignmentExpression	iimem -> previous_status . allocated = 0		420813	0		=			
ANR	420951	MemberAccess	iimem -> previous_status . allocated		420813	0					
ANR	420952	PtrMemberAccess	iimem -> previous_status		420813	0					
ANR	420953	Identifier	iimem		420813	0					
ANR	420954	Identifier	previous_status		420813	1					
ANR	420955	Identifier	allocated		420813	1					
ANR	420956	PrimaryExpression	0		420813	1					
ANR	420957	ExpressionStatement	iimem -> previous_status . used = 0	787:4:24226:24257	420813	18	True				
ANR	420958	AssignmentExpression	iimem -> previous_status . used = 0		420813	0		=			
ANR	420959	MemberAccess	iimem -> previous_status . used		420813	0					
ANR	420960	PtrMemberAccess	iimem -> previous_status		420813	0					
ANR	420961	Identifier	iimem		420813	0					
ANR	420962	Identifier	previous_status		420813	1					
ANR	420963	Identifier	used		420813	1					
ANR	420964	PrimaryExpression	0		420813	1					
ANR	420965	ExpressionStatement	ialloc_reset ( iimem )	788:4:24263:24282	420813	19	True				
ANR	420966	CallExpression	ialloc_reset ( iimem )		420813	0					
ANR	420967	Callee	ialloc_reset		420813	0					
ANR	420968	Identifier	ialloc_reset		420813	0					
ANR	420969	ArgumentList	iimem		420813	1					
ANR	420970	Argument	iimem		420813	0					
ANR	420971	Identifier	iimem		420813	0					
ANR	420972	ExpressionStatement	iimem -> root = cp	789:4:24288:24304	420813	20	True				
ANR	420973	AssignmentExpression	iimem -> root = cp		420813	0		=			
ANR	420974	PtrMemberAccess	iimem -> root		420813	0					
ANR	420975	Identifier	iimem		420813	0					
ANR	420976	Identifier	root		420813	1					
ANR	420977	Identifier	cp		420813	1					
ANR	420978	ExpressionStatement	ialloc_set_limit ( iimem )	790:4:24310:24333	420813	21	True				
ANR	420979	CallExpression	ialloc_set_limit ( iimem )		420813	0					
ANR	420980	Callee	ialloc_set_limit		420813	0					
ANR	420981	Identifier	ialloc_set_limit		420813	0					
ANR	420982	ArgumentList	iimem		420813	1					
ANR	420983	Argument	iimem		420813	0					
ANR	420984	Identifier	iimem		420813	0					
ANR	420985	ExpressionStatement	iimem -> cc = NULL	791:4:24339:24355	420813	22	True				
ANR	420986	AssignmentExpression	iimem -> cc = NULL		420813	0		=			
ANR	420987	PtrMemberAccess	iimem -> cc		420813	0					
ANR	420988	Identifier	iimem		420813	0					
ANR	420989	Identifier	cc		420813	1					
ANR	420990	Identifier	NULL		420813	1					
ANR	420991	ExpressionStatement	iimem -> save_level = 0	792:4:24361:24382	420813	23	True				
ANR	420992	AssignmentExpression	iimem -> save_level = 0		420813	0		=			
ANR	420993	PtrMemberAccess	iimem -> save_level		420813	0					
ANR	420994	Identifier	iimem		420813	0					
ANR	420995	Identifier	save_level		420813	1					
ANR	420996	PrimaryExpression	0		420813	1					
ANR	420997	ExpressionStatement	iimem -> new_mask = 0	793:4:24388:24407	420813	24	True				
ANR	420998	AssignmentExpression	iimem -> new_mask = 0		420813	0		=			
ANR	420999	PtrMemberAccess	iimem -> new_mask		420813	0					
ANR	421000	Identifier	iimem		420813	0					
ANR	421001	Identifier	new_mask		420813	1					
ANR	421002	PrimaryExpression	0		420813	1					
ANR	421003	ExpressionStatement	iimem -> test_mask = ~0	794:4:24413:24434	420813	25	True				
ANR	421004	AssignmentExpression	iimem -> test_mask = ~0		420813	0		=			
ANR	421005	PtrMemberAccess	iimem -> test_mask		420813	0					
ANR	421006	Identifier	iimem		420813	0					
ANR	421007	Identifier	test_mask		420813	1					
ANR	421008	Identifier	~0		420813	1					
ANR	421009	ExpressionStatement	iimem -> streams = 0	795:4:24440:24458	420813	26	True				
ANR	421010	AssignmentExpression	iimem -> streams = 0		420813	0		=			
ANR	421011	PtrMemberAccess	iimem -> streams		420813	0					
ANR	421012	Identifier	iimem		420813	0					
ANR	421013	Identifier	streams		420813	1					
ANR	421014	PrimaryExpression	0		420813	1					
ANR	421015	ExpressionStatement	iimem -> names_array = 0	796:4:24464:24486	420813	27	True				
ANR	421016	AssignmentExpression	iimem -> names_array = 0		420813	0		=			
ANR	421017	PtrMemberAccess	iimem -> names_array		420813	0					
ANR	421018	Identifier	iimem		420813	0					
ANR	421019	Identifier	names_array		420813	1					
ANR	421020	PrimaryExpression	0		420813	1					
ANR	421021	ExpressionStatement	iimem -> roots = 0	797:4:24492:24508	420813	28	True				
ANR	421022	AssignmentExpression	iimem -> roots = 0		420813	0		=			
ANR	421023	PtrMemberAccess	iimem -> roots		420813	0					
ANR	421024	Identifier	iimem		420813	0					
ANR	421025	Identifier	roots		420813	1					
ANR	421026	PrimaryExpression	0		420813	1					
ANR	421027	ExpressionStatement	iimem -> num_contexts = 0	798:4:24514:24537	420813	29	True				
ANR	421028	AssignmentExpression	iimem -> num_contexts = 0		420813	0		=			
ANR	421029	PtrMemberAccess	iimem -> num_contexts		420813	0					
ANR	421030	Identifier	iimem		420813	0					
ANR	421031	Identifier	num_contexts		420813	1					
ANR	421032	PrimaryExpression	0		420813	1					
ANR	421033	ExpressionStatement	iimem -> saved = 0	799:4:24543:24559	420813	30	True				
ANR	421034	AssignmentExpression	iimem -> saved = 0		420813	0		=			
ANR	421035	PtrMemberAccess	iimem -> saved		420813	0					
ANR	421036	Identifier	iimem		420813	0					
ANR	421037	Identifier	saved		420813	1					
ANR	421038	PrimaryExpression	0		420813	1					
ANR	421039	ReturnStatement	return iimem ;	800:4:24565:24577	420813	31	True				
ANR	421040	Identifier	iimem		420813	0					
ANR	421041	ReturnType	gs_ref_memory_t *		420813	1					
ANR	421042	Identifier	ialloc_alloc_state		420813	2					
ANR	421043	ParameterList	"gs_memory_t * parent , uint clump_size"		420813	3					
ANR	421044	Parameter	gs_memory_t * parent	761:19:23308:23327	420813	0	True				
ANR	421045	ParameterType	gs_memory_t *		420813	0					
ANR	421046	Identifier	parent		420813	1					
ANR	421047	Parameter	uint clump_size	761:41:23330:23344	420813	1	True				
ANR	421048	ParameterType	uint		420813	0					
ANR	421049	Identifier	clump_size		420813	1					
ANR	421050	CFGEntryNode	ENTRY		420813		True				
ANR	421051	CFGExitNode	EXIT		420813		True				
ANR	421052	Symbol	parent		420813						
ANR	421053	Symbol	iimem -> procs		420813						
ANR	421054	Symbol	* parent		420813						
ANR	421055	Symbol	iimem -> new_mask		420813						
ANR	421056	Symbol	iimem -> num_contexts		420813						
ANR	421057	Symbol	iimem		420813						
ANR	421058	Symbol	iimem -> gc_status . max_vm		420813						
ANR	421059	Symbol	iimem -> save_level		420813						
ANR	421060	Symbol	iimem -> thread_safe_memory		420813						
ANR	421061	Symbol	iimem -> non_gc_memory		420813						
ANR	421062	Symbol	iimem -> large_size		420813						
ANR	421063	Symbol	iimem -> previous_status . allocated		420813						
ANR	421064	Symbol	iimem -> cc		420813						
ANR	421065	Symbol	ialloc_solo		420813						
ANR	421066	Symbol	NULL		420813						
ANR	421067	Symbol	iimem -> gs_lib_ctx		420813						
ANR	421068	Symbol	* iimem		420813						
ANR	421069	Symbol	iimem -> is_controlled		420813						
ANR	421070	Symbol	false		420813						
ANR	421071	Symbol	iimem -> gc_status . vm_threshold		420813						
ANR	421072	Symbol	cp		420813						
ANR	421073	Symbol	iimem -> streams		420813						
ANR	421074	Symbol	iimem -> gc_status . requested		420813						
ANR	421075	Symbol	iimem -> gc_status . signal_value		420813						
ANR	421076	Symbol	iimem -> gc_status . enabled		420813						
ANR	421077	Symbol	iimem -> previous_status . used		420813						
ANR	421078	Symbol	iimem -> clump_size		420813						
ANR	421079	Symbol	iimem -> previous_status		420813						
ANR	421080	Symbol	~0		420813						
ANR	421081	Symbol	& st_ref_memory		420813						
ANR	421082	Symbol	clump_size		420813						
ANR	421083	Symbol	iimem -> gc_status		420813						
ANR	421084	Symbol	& cp		420813						
ANR	421085	Symbol	parent -> thread_safe_memory		420813						
ANR	421086	Symbol	iimem -> stable_memory		420813						
ANR	421087	Symbol	gs_ref_memory_procs		420813						
ANR	421088	Symbol	max_long		420813						
ANR	421089	Symbol	iimem -> saved		420813						
ANR	421090	Symbol	parent -> gs_lib_ctx		420813						
ANR	421091	Symbol	iimem -> test_mask		420813						
ANR	421092	Symbol	iimem -> gc_allocated		420813						
ANR	421093	Symbol	iimem -> root		420813						
ANR	421094	Symbol	iimem -> names_array		420813						
ANR	421095	Symbol	iimem -> roots		420813						
ANR	421096	Function	ialloc_solo	804:0:24633:25946							
ANR	421097	FunctionDef	"ialloc_solo (gs_memory_t * parent , gs_memory_type_ptr_t pstype , clump_t * * pcp)"		421096	0					
ANR	421098	CompoundStatement		807:0:24738:25946	421096	0					
ANR	421099	IdentifierDeclStatement	"clump_t * cp = gs_raw_alloc_struct_immovable ( parent , & st_clump , ""ialloc_solo(clump)"" ) ;"	812:4:24959:25089	421096	0	True				
ANR	421100	IdentifierDecl	"* cp = gs_raw_alloc_struct_immovable ( parent , & st_clump , ""ialloc_solo(clump)"" )"		421096	0					
ANR	421101	IdentifierDeclType	clump_t *		421096	0					
ANR	421102	Identifier	cp		421096	1					
ANR	421103	AssignmentExpression	"* cp = gs_raw_alloc_struct_immovable ( parent , & st_clump , ""ialloc_solo(clump)"" )"		421096	2		=			
ANR	421104	Identifier	cp		421096	0					
ANR	421105	CallExpression	"gs_raw_alloc_struct_immovable ( parent , & st_clump , ""ialloc_solo(clump)"" )"		421096	1					
ANR	421106	Callee	gs_raw_alloc_struct_immovable		421096	0					
ANR	421107	Identifier	gs_raw_alloc_struct_immovable		421096	0					
ANR	421108	ArgumentList	parent		421096	1					
ANR	421109	Argument	parent		421096	0					
ANR	421110	Identifier	parent		421096	0					
ANR	421111	Argument	& st_clump		421096	1					
ANR	421112	UnaryOperationExpression	& st_clump		421096	0					
ANR	421113	UnaryOperator	&		421096	0					
ANR	421114	Identifier	st_clump		421096	1					
ANR	421115	Argument	"""ialloc_solo(clump)"""		421096	2					
ANR	421116	PrimaryExpression	"""ialloc_solo(clump)"""		421096	0					
ANR	421117	IdentifierDeclStatement	"uint csize = ROUND_UP ( sizeof ( clump_head_t ) + sizeof ( obj_header_t ) + pstype -> ssize , obj_align_mod ) ;"	815:4:25095:25234	421096	1	True				
ANR	421118	IdentifierDecl	"csize = ROUND_UP ( sizeof ( clump_head_t ) + sizeof ( obj_header_t ) + pstype -> ssize , obj_align_mod )"		421096	0					
ANR	421119	IdentifierDeclType	uint		421096	0					
ANR	421120	Identifier	csize		421096	1					
ANR	421121	AssignmentExpression	"csize = ROUND_UP ( sizeof ( clump_head_t ) + sizeof ( obj_header_t ) + pstype -> ssize , obj_align_mod )"		421096	2		=			
ANR	421122	Identifier	csize		421096	0					
ANR	421123	CallExpression	"ROUND_UP ( sizeof ( clump_head_t ) + sizeof ( obj_header_t ) + pstype -> ssize , obj_align_mod )"		421096	1					
ANR	421124	Callee	ROUND_UP		421096	0					
ANR	421125	Identifier	ROUND_UP		421096	0					
ANR	421126	ArgumentList	sizeof ( clump_head_t ) + sizeof ( obj_header_t ) + pstype -> ssize		421096	1					
ANR	421127	Argument	sizeof ( clump_head_t ) + sizeof ( obj_header_t ) + pstype -> ssize		421096	0					
ANR	421128	AdditiveExpression	sizeof ( clump_head_t ) + sizeof ( obj_header_t ) + pstype -> ssize		421096	0		+			
ANR	421129	SizeofExpression	sizeof ( clump_head_t )		421096	0					
ANR	421130	Sizeof	sizeof		421096	0					
ANR	421131	SizeofOperand	clump_head_t		421096	1					
ANR	421132	AdditiveExpression	sizeof ( obj_header_t ) + pstype -> ssize		421096	1		+			
ANR	421133	SizeofExpression	sizeof ( obj_header_t )		421096	0					
ANR	421134	Sizeof	sizeof		421096	0					
ANR	421135	SizeofOperand	obj_header_t		421096	1					
ANR	421136	PtrMemberAccess	pstype -> ssize		421096	1					
ANR	421137	Identifier	pstype		421096	0					
ANR	421138	Identifier	ssize		421096	1					
ANR	421139	Argument	obj_align_mod		421096	1					
ANR	421140	Identifier	obj_align_mod		421096	0					
ANR	421141	IdentifierDeclStatement	"byte * cdata = gs_alloc_bytes_immovable ( parent , csize , ""ialloc_solo"" ) ;"	819:4:25240:25308	421096	2	True				
ANR	421142	IdentifierDecl	"* cdata = gs_alloc_bytes_immovable ( parent , csize , ""ialloc_solo"" )"		421096	0					
ANR	421143	IdentifierDeclType	byte *		421096	0					
ANR	421144	Identifier	cdata		421096	1					
ANR	421145	AssignmentExpression	"* cdata = gs_alloc_bytes_immovable ( parent , csize , ""ialloc_solo"" )"		421096	2		=			
ANR	421146	Identifier	cdata		421096	0					
ANR	421147	CallExpression	"gs_alloc_bytes_immovable ( parent , csize , ""ialloc_solo"" )"		421096	1					
ANR	421148	Callee	gs_alloc_bytes_immovable		421096	0					
ANR	421149	Identifier	gs_alloc_bytes_immovable		421096	0					
ANR	421150	ArgumentList	parent		421096	1					
ANR	421151	Argument	parent		421096	0					
ANR	421152	Identifier	parent		421096	0					
ANR	421153	Argument	csize		421096	1					
ANR	421154	Identifier	csize		421096	0					
ANR	421155	Argument	"""ialloc_solo"""		421096	2					
ANR	421156	PrimaryExpression	"""ialloc_solo"""		421096	0					
ANR	421157	IdentifierDeclStatement	obj_header_t * obj = ( obj_header_t * ) ( cdata + sizeof ( clump_head_t ) ) ;	820:4:25314:25381	421096	3	True				
ANR	421158	IdentifierDecl	* obj = ( obj_header_t * ) ( cdata + sizeof ( clump_head_t ) )		421096	0					
ANR	421159	IdentifierDeclType	obj_header_t *		421096	0					
ANR	421160	Identifier	obj		421096	1					
ANR	421161	AssignmentExpression	* obj = ( obj_header_t * ) ( cdata + sizeof ( clump_head_t ) )		421096	2		=			
ANR	421162	Identifier	obj		421096	0					
ANR	421163	CastExpression	( obj_header_t * ) ( cdata + sizeof ( clump_head_t ) )		421096	1					
ANR	421164	CastTarget	obj_header_t *		421096	0					
ANR	421165	AdditiveExpression	cdata + sizeof ( clump_head_t )		421096	1		+			
ANR	421166	Identifier	cdata		421096	0					
ANR	421167	SizeofExpression	sizeof ( clump_head_t )		421096	1					
ANR	421168	Sizeof	sizeof		421096	0					
ANR	421169	SizeofOperand	clump_head_t		421096	1					
ANR	421170	IfStatement	if ( cp == 0 || cdata == 0 )		421096	4					
ANR	421171	Condition	cp == 0 || cdata == 0	822:8:25392:25412	421096	0	True				
ANR	421172	OrExpression	cp == 0 || cdata == 0		421096	0		||			
ANR	421173	EqualityExpression	cp == 0		421096	0		==			
ANR	421174	Identifier	cp		421096	0					
ANR	421175	PrimaryExpression	0		421096	1					
ANR	421176	EqualityExpression	cdata == 0		421096	1		==			
ANR	421177	Identifier	cdata		421096	0					
ANR	421178	PrimaryExpression	0		421096	1					
ANR	421179	CompoundStatement		16:31:676:676	421096	1					
ANR	421180	ExpressionStatement	"gs_free_object ( parent , cp , ""ialloc_solo(allocation failure)"" )"	823:8:25425:25486	421096	0	True				
ANR	421181	CallExpression	"gs_free_object ( parent , cp , ""ialloc_solo(allocation failure)"" )"		421096	0					
ANR	421182	Callee	gs_free_object		421096	0					
ANR	421183	Identifier	gs_free_object		421096	0					
ANR	421184	ArgumentList	parent		421096	1					
ANR	421185	Argument	parent		421096	0					
ANR	421186	Identifier	parent		421096	0					
ANR	421187	Argument	cp		421096	1					
ANR	421188	Identifier	cp		421096	0					
ANR	421189	Argument	"""ialloc_solo(allocation failure)"""		421096	2					
ANR	421190	PrimaryExpression	"""ialloc_solo(allocation failure)"""		421096	0					
ANR	421191	ExpressionStatement	"gs_free_object ( parent , cdata , ""ialloc_solo(allocation failure)"" )"	824:8:25496:25560	421096	1	True				
ANR	421192	CallExpression	"gs_free_object ( parent , cdata , ""ialloc_solo(allocation failure)"" )"		421096	0					
ANR	421193	Callee	gs_free_object		421096	0					
ANR	421194	Identifier	gs_free_object		421096	0					
ANR	421195	ArgumentList	parent		421096	1					
ANR	421196	Argument	parent		421096	0					
ANR	421197	Identifier	parent		421096	0					
ANR	421198	Argument	cdata		421096	1					
ANR	421199	Identifier	cdata		421096	0					
ANR	421200	Argument	"""ialloc_solo(allocation failure)"""		421096	2					
ANR	421201	PrimaryExpression	"""ialloc_solo(allocation failure)"""		421096	0					
ANR	421202	ReturnStatement	return 0 ;	825:8:25570:25578	421096	2	True				
ANR	421203	PrimaryExpression	0		421096	0					
ANR	421204	ExpressionStatement	"alloc_init_clump ( cp , cdata , cdata + csize , false , ( clump_t * ) NULL )"	827:4:25590:25657	421096	5	True				
ANR	421205	CallExpression	"alloc_init_clump ( cp , cdata , cdata + csize , false , ( clump_t * ) NULL )"		421096	0					
ANR	421206	Callee	alloc_init_clump		421096	0					
ANR	421207	Identifier	alloc_init_clump		421096	0					
ANR	421208	ArgumentList	cp		421096	1					
ANR	421209	Argument	cp		421096	0					
ANR	421210	Identifier	cp		421096	0					
ANR	421211	Argument	cdata		421096	1					
ANR	421212	Identifier	cdata		421096	0					
ANR	421213	Argument	cdata + csize		421096	2					
ANR	421214	AdditiveExpression	cdata + csize		421096	0		+			
ANR	421215	Identifier	cdata		421096	0					
ANR	421216	Identifier	csize		421096	1					
ANR	421217	Argument	false		421096	3					
ANR	421218	Identifier	false		421096	0					
ANR	421219	Argument	( clump_t * ) NULL		421096	4					
ANR	421220	CastExpression	( clump_t * ) NULL		421096	0					
ANR	421221	CastTarget	clump_t *		421096	0					
ANR	421222	Identifier	NULL		421096	1					
ANR	421223	ExpressionStatement	cp -> cbot = cp -> ctop	828:4:25663:25682	421096	6	True				
ANR	421224	AssignmentExpression	cp -> cbot = cp -> ctop		421096	0		=			
ANR	421225	PtrMemberAccess	cp -> cbot		421096	0					
ANR	421226	Identifier	cp		421096	0					
ANR	421227	Identifier	cbot		421096	1					
ANR	421228	PtrMemberAccess	cp -> ctop		421096	1					
ANR	421229	Identifier	cp		421096	0					
ANR	421230	Identifier	ctop		421096	1					
ANR	421231	ExpressionStatement	cp -> parent = cp -> left = cp -> right = 0	829:4:25688:25725	421096	7	True				
ANR	421232	AssignmentExpression	cp -> parent = cp -> left = cp -> right = 0		421096	0		=			
ANR	421233	PtrMemberAccess	cp -> parent		421096	0					
ANR	421234	Identifier	cp		421096	0					
ANR	421235	Identifier	parent		421096	1					
ANR	421236	AssignmentExpression	cp -> left = cp -> right = 0		421096	1		=			
ANR	421237	PtrMemberAccess	cp -> left		421096	0					
ANR	421238	Identifier	cp		421096	0					
ANR	421239	Identifier	left		421096	1					
ANR	421240	AssignmentExpression	cp -> right = 0		421096	1		=			
ANR	421241	PtrMemberAccess	cp -> right		421096	0					
ANR	421242	Identifier	cp		421096	0					
ANR	421243	Identifier	right		421096	1					
ANR	421244	PrimaryExpression	0		421096	1					
ANR	421245	ExpressionStatement	cp -> c_alone = true	830:4:25731:25749	421096	8	True				
ANR	421246	AssignmentExpression	cp -> c_alone = true		421096	0		=			
ANR	421247	PtrMemberAccess	cp -> c_alone		421096	0					
ANR	421248	Identifier	cp		421096	0					
ANR	421249	Identifier	c_alone		421096	1					
ANR	421250	Identifier	true		421096	1					
ANR	421251	ExpressionStatement	obj -> o_pad = 0	832:4:25804:25818	421096	9	True				
ANR	421252	AssignmentExpression	obj -> o_pad = 0		421096	0		=			
ANR	421253	PtrMemberAccess	obj -> o_pad		421096	0					
ANR	421254	Identifier	obj		421096	0					
ANR	421255	Identifier	o_pad		421096	1					
ANR	421256	PrimaryExpression	0		421096	1					
ANR	421257	ExpressionStatement	obj -> o_alone = 1	833:4:25824:25840	421096	10	True				
ANR	421258	AssignmentExpression	obj -> o_alone = 1		421096	0		=			
ANR	421259	PtrMemberAccess	obj -> o_alone		421096	0					
ANR	421260	Identifier	obj		421096	0					
ANR	421261	Identifier	o_alone		421096	1					
ANR	421262	PrimaryExpression	1		421096	1					
ANR	421263	ExpressionStatement	obj -> o_size = pstype -> ssize	834:4:25846:25873	421096	11	True				
ANR	421264	AssignmentExpression	obj -> o_size = pstype -> ssize		421096	0		=			
ANR	421265	PtrMemberAccess	obj -> o_size		421096	0					
ANR	421266	Identifier	obj		421096	0					
ANR	421267	Identifier	o_size		421096	1					
ANR	421268	PtrMemberAccess	pstype -> ssize		421096	1					
ANR	421269	Identifier	pstype		421096	0					
ANR	421270	Identifier	ssize		421096	1					
ANR	421271	ExpressionStatement	obj -> o_type = pstype	835:4:25879:25899	421096	12	True				
ANR	421272	AssignmentExpression	obj -> o_type = pstype		421096	0		=			
ANR	421273	PtrMemberAccess	obj -> o_type		421096	0					
ANR	421274	Identifier	obj		421096	0					
ANR	421275	Identifier	o_type		421096	1					
ANR	421276	Identifier	pstype		421096	1					
ANR	421277	ExpressionStatement	* pcp = cp	836:4:25905:25914	421096	13	True				
ANR	421278	AssignmentExpression	* pcp = cp		421096	0		=			
ANR	421279	UnaryOperationExpression	* pcp		421096	0					
ANR	421280	UnaryOperator	*		421096	0					
ANR	421281	Identifier	pcp		421096	1					
ANR	421282	Identifier	cp		421096	1					
ANR	421283	ReturnStatement	return ( void * ) ( obj + 1 ) ;	837:4:25920:25944	421096	14	True				
ANR	421284	CastExpression	( void * ) ( obj + 1 )		421096	0					
ANR	421285	CastTarget	void *		421096	0					
ANR	421286	AdditiveExpression	obj + 1		421096	1		+			
ANR	421287	Identifier	obj		421096	0					
ANR	421288	PrimaryExpression	1		421096	1					
ANR	421289	ReturnType	static void *		421096	1					
ANR	421290	Identifier	ialloc_solo		421096	2					
ANR	421291	ParameterList	"gs_memory_t * parent , gs_memory_type_ptr_t pstype , clump_t * * pcp"		421096	3					
ANR	421292	Parameter	gs_memory_t * parent	805:12:24659:24678	421096	0	True				
ANR	421293	ParameterType	gs_memory_t *		421096	0					
ANR	421294	Identifier	parent		421096	1					
ANR	421295	Parameter	gs_memory_type_ptr_t pstype	805:34:24681:24707	421096	1	True				
ANR	421296	ParameterType	gs_memory_type_ptr_t		421096	0					
ANR	421297	Identifier	pstype		421096	1					
ANR	421298	Parameter	clump_t * * pcp	806:12:24722:24735	421096	2	True				
ANR	421299	ParameterType	clump_t * *		421096	0					
ANR	421300	Identifier	pcp		421096	1					
ANR	421301	CFGEntryNode	ENTRY		421096		True				
ANR	421302	CFGExitNode	EXIT		421096		True				
ANR	421303	Symbol	pstype -> ssize		421096						
ANR	421304	Symbol	parent		421096						
ANR	421305	Symbol	* pcp		421096						
ANR	421306	Symbol	cp -> right		421096						
ANR	421307	Symbol	csize		421096						
ANR	421308	Symbol	* pstype		421096						
ANR	421309	Symbol	cp -> cbot		421096						
ANR	421310	Symbol	pstype		421096						
ANR	421311	Symbol	gs_alloc_bytes_immovable		421096						
ANR	421312	Symbol	cp -> left		421096						
ANR	421313	Symbol	obj -> o_size		421096						
ANR	421314	Symbol	obj -> o_type		421096						
ANR	421315	Symbol	obj -> o_pad		421096						
ANR	421316	Symbol	& st_clump		421096						
ANR	421317	Symbol	pcp		421096						
ANR	421318	Symbol	obj_align_mod		421096						
ANR	421319	Symbol	cp -> ctop		421096						
ANR	421320	Symbol	* obj		421096						
ANR	421321	Symbol	NULL		421096						
ANR	421322	Symbol	ROUND_UP		421096						
ANR	421323	Symbol	false		421096						
ANR	421324	Symbol	cp -> c_alone		421096						
ANR	421325	Symbol	cp		421096						
ANR	421326	Symbol	cdata		421096						
ANR	421327	Symbol	* cp		421096						
ANR	421328	Symbol	gs_raw_alloc_struct_immovable		421096						
ANR	421329	Symbol	cp -> parent		421096						
ANR	421330	Symbol	obj		421096						
ANR	421331	Symbol	obj -> o_alone		421096						
ANR	421332	Symbol	true		421096						
ANR	421333	Function	ialloc_free_state	840:0:25949:26301							
ANR	421334	FunctionDef	ialloc_free_state (gs_ref_memory_t * iimem)		421333	0					
ANR	421335	CompoundStatement		842:0:25996:26301	421333	0					
ANR	421336	IdentifierDeclStatement	clump_t * cp ;	843:4:26002:26013	421333	0	True				
ANR	421337	IdentifierDecl	* cp		421333	0					
ANR	421338	IdentifierDeclType	clump_t *		421333	0					
ANR	421339	Identifier	cp		421333	1					
ANR	421340	IdentifierDeclStatement	gs_memory_t * mem ;	844:4:26019:26035	421333	1	True				
ANR	421341	IdentifierDecl	* mem		421333	0					
ANR	421342	IdentifierDeclType	gs_memory_t *		421333	0					
ANR	421343	Identifier	mem		421333	1					
ANR	421344	IfStatement	if ( iimem == NULL )		421333	2					
ANR	421345	Condition	iimem == NULL	845:8:26045:26057	421333	0	True				
ANR	421346	EqualityExpression	iimem == NULL		421333	0		==			
ANR	421347	Identifier	iimem		421333	0					
ANR	421348	Identifier	NULL		421333	1					
ANR	421349	ReturnStatement	return ;	846:8:26068:26074	421333	1	True				
ANR	421350	ExpressionStatement	cp = iimem -> root	847:4:26080:26096	421333	3	True				
ANR	421351	AssignmentExpression	cp = iimem -> root		421333	0		=			
ANR	421352	Identifier	cp		421333	0					
ANR	421353	PtrMemberAccess	iimem -> root		421333	1					
ANR	421354	Identifier	iimem		421333	0					
ANR	421355	Identifier	root		421333	1					
ANR	421356	ExpressionStatement	mem = iimem -> non_gc_memory	848:4:26102:26128	421333	4	True				
ANR	421357	AssignmentExpression	mem = iimem -> non_gc_memory		421333	0		=			
ANR	421358	Identifier	mem		421333	0					
ANR	421359	PtrMemberAccess	iimem -> non_gc_memory		421333	1					
ANR	421360	Identifier	iimem		421333	0					
ANR	421361	Identifier	non_gc_memory		421333	1					
ANR	421362	IfStatement	if ( cp == NULL )		421333	5					
ANR	421363	Condition	cp == NULL	849:8:26138:26147	421333	0	True				
ANR	421364	EqualityExpression	cp == NULL		421333	0		==			
ANR	421365	Identifier	cp		421333	0					
ANR	421366	Identifier	NULL		421333	1					
ANR	421367	ReturnStatement	return ;	850:8:26158:26164	421333	1	True				
ANR	421368	ExpressionStatement	"gs_free_object ( mem , cp -> chead , ""ialloc_solo(allocation failure)"" )"	851:4:26170:26235	421333	6	True				
ANR	421369	CallExpression	"gs_free_object ( mem , cp -> chead , ""ialloc_solo(allocation failure)"" )"		421333	0					
ANR	421370	Callee	gs_free_object		421333	0					
ANR	421371	Identifier	gs_free_object		421333	0					
ANR	421372	ArgumentList	mem		421333	1					
ANR	421373	Argument	mem		421333	0					
ANR	421374	Identifier	mem		421333	0					
ANR	421375	Argument	cp -> chead		421333	1					
ANR	421376	PtrMemberAccess	cp -> chead		421333	0					
ANR	421377	Identifier	cp		421333	0					
ANR	421378	Identifier	chead		421333	1					
ANR	421379	Argument	"""ialloc_solo(allocation failure)"""		421333	2					
ANR	421380	PrimaryExpression	"""ialloc_solo(allocation failure)"""		421333	0					
ANR	421381	ExpressionStatement	"gs_free_object ( mem , cp , ""ialloc_solo(allocation failure)"" )"	852:4:26241:26299	421333	7	True				
ANR	421382	CallExpression	"gs_free_object ( mem , cp , ""ialloc_solo(allocation failure)"" )"		421333	0					
ANR	421383	Callee	gs_free_object		421333	0					
ANR	421384	Identifier	gs_free_object		421333	0					
ANR	421385	ArgumentList	mem		421333	1					
ANR	421386	Argument	mem		421333	0					
ANR	421387	Identifier	mem		421333	0					
ANR	421388	Argument	cp		421333	1					
ANR	421389	Identifier	cp		421333	0					
ANR	421390	Argument	"""ialloc_solo(allocation failure)"""		421333	2					
ANR	421391	PrimaryExpression	"""ialloc_solo(allocation failure)"""		421333	0					
ANR	421392	ReturnType	void		421333	1					
ANR	421393	Identifier	ialloc_free_state		421333	2					
ANR	421394	ParameterList	gs_ref_memory_t * iimem		421333	3					
ANR	421395	Parameter	gs_ref_memory_t * iimem	841:18:25972:25993	421333	0	True				
ANR	421396	ParameterType	gs_ref_memory_t *		421333	0					
ANR	421397	Identifier	iimem		421333	1					
ANR	421398	CFGEntryNode	ENTRY		421333		True				
ANR	421399	CFGExitNode	EXIT		421333		True				
ANR	421400	Symbol	* cp		421333						
ANR	421401	Symbol	cp -> chead		421333						
ANR	421402	Symbol	NULL		421333						
ANR	421403	Symbol	mem		421333						
ANR	421404	Symbol	iimem -> non_gc_memory		421333						
ANR	421405	Symbol	* iimem		421333						
ANR	421406	Symbol	iimem		421333						
ANR	421407	Symbol	iimem -> root		421333						
ANR	421408	Symbol	cp		421333						
ANR	421409	Function	ialloc_add_clump	860:0:26511:27648							
ANR	421410	FunctionDef	"ialloc_add_clump (gs_ref_memory_t * imem , ulong space , client_name_t cname)"		421409	0					
ANR	421411	CompoundStatement		862:0:26589:27648	421409	0					
ANR	421412	IdentifierDeclStatement	clump_t * cp ;	863:4:26595:26606	421409	0	True				
ANR	421413	IdentifierDecl	* cp		421409	0					
ANR	421414	IdentifierDeclType	clump_t *		421409	0					
ANR	421415	Identifier	cp		421409	1					
ANR	421416	ExpressionStatement	imem -> is_controlled = false	866:4:26656:26683	421409	1	True				
ANR	421417	AssignmentExpression	imem -> is_controlled = false		421409	0		=			
ANR	421418	PtrMemberAccess	imem -> is_controlled		421409	0					
ANR	421419	Identifier	imem		421409	0					
ANR	421420	Identifier	is_controlled		421409	1					
ANR	421421	Identifier	false		421409	1					
ANR	421422	ExpressionStatement	imem -> large_size = imem -> clump_size	867:4:26689:26724	421409	2	True				
ANR	421423	AssignmentExpression	imem -> large_size = imem -> clump_size		421409	0		=			
ANR	421424	PtrMemberAccess	imem -> large_size		421409	0					
ANR	421425	Identifier	imem		421409	0					
ANR	421426	Identifier	large_size		421409	1					
ANR	421427	PtrMemberAccess	imem -> clump_size		421409	1					
ANR	421428	Identifier	imem		421409	0					
ANR	421429	Identifier	clump_size		421409	1					
ANR	421430	ExpressionStatement	imem -> limit = max_long	868:4:26730:26752	421409	3	True				
ANR	421431	AssignmentExpression	imem -> limit = max_long		421409	0		=			
ANR	421432	PtrMemberAccess	imem -> limit		421409	0					
ANR	421433	Identifier	imem		421409	0					
ANR	421434	Identifier	limit		421409	1					
ANR	421435	Identifier	max_long		421409	1					
ANR	421436	ExpressionStatement	imem -> gc_status . max_vm = max_long	869:4:26758:26791	421409	4	True				
ANR	421437	AssignmentExpression	imem -> gc_status . max_vm = max_long		421409	0		=			
ANR	421438	MemberAccess	imem -> gc_status . max_vm		421409	0					
ANR	421439	PtrMemberAccess	imem -> gc_status		421409	0					
ANR	421440	Identifier	imem		421409	0					
ANR	421441	Identifier	gc_status		421409	1					
ANR	421442	Identifier	max_vm		421409	1					
ANR	421443	Identifier	max_long		421409	1					
ANR	421444	ExpressionStatement	"cp = alloc_add_clump ( imem , space , cname )"	872:4:26827:26867	421409	5	True				
ANR	421445	AssignmentExpression	"cp = alloc_add_clump ( imem , space , cname )"		421409	0		=			
ANR	421446	Identifier	cp		421409	0					
ANR	421447	CallExpression	"alloc_add_clump ( imem , space , cname )"		421409	1					
ANR	421448	Callee	alloc_add_clump		421409	0					
ANR	421449	Identifier	alloc_add_clump		421409	0					
ANR	421450	ArgumentList	imem		421409	1					
ANR	421451	Argument	imem		421409	0					
ANR	421452	Identifier	imem		421409	0					
ANR	421453	Argument	space		421409	1					
ANR	421454	Identifier	space		421409	0					
ANR	421455	Argument	cname		421409	2					
ANR	421456	Identifier	cname		421409	0					
ANR	421457	ExpressionStatement	imem -> procs . alloc_bytes_immovable = imem -> procs . alloc_bytes	880:4:27137:27196	421409	6	True				
ANR	421458	AssignmentExpression	imem -> procs . alloc_bytes_immovable = imem -> procs . alloc_bytes		421409	0		=			
ANR	421459	MemberAccess	imem -> procs . alloc_bytes_immovable		421409	0					
ANR	421460	PtrMemberAccess	imem -> procs		421409	0					
ANR	421461	Identifier	imem		421409	0					
ANR	421462	Identifier	procs		421409	1					
ANR	421463	Identifier	alloc_bytes_immovable		421409	1					
ANR	421464	MemberAccess	imem -> procs . alloc_bytes		421409	1					
ANR	421465	PtrMemberAccess	imem -> procs		421409	0					
ANR	421466	Identifier	imem		421409	0					
ANR	421467	Identifier	procs		421409	1					
ANR	421468	Identifier	alloc_bytes		421409	1					
ANR	421469	ExpressionStatement	imem -> procs . alloc_struct_immovable = imem -> procs . alloc_struct	881:4:27202:27263	421409	7	True				
ANR	421470	AssignmentExpression	imem -> procs . alloc_struct_immovable = imem -> procs . alloc_struct		421409	0		=			
ANR	421471	MemberAccess	imem -> procs . alloc_struct_immovable		421409	0					
ANR	421472	PtrMemberAccess	imem -> procs		421409	0					
ANR	421473	Identifier	imem		421409	0					
ANR	421474	Identifier	procs		421409	1					
ANR	421475	Identifier	alloc_struct_immovable		421409	1					
ANR	421476	MemberAccess	imem -> procs . alloc_struct		421409	1					
ANR	421477	PtrMemberAccess	imem -> procs		421409	0					
ANR	421478	Identifier	imem		421409	0					
ANR	421479	Identifier	procs		421409	1					
ANR	421480	Identifier	alloc_struct		421409	1					
ANR	421481	ExpressionStatement	imem -> procs . alloc_byte_array_immovable = imem -> procs . alloc_byte_array	882:4:27269:27338	421409	8	True				
ANR	421482	AssignmentExpression	imem -> procs . alloc_byte_array_immovable = imem -> procs . alloc_byte_array		421409	0		=			
ANR	421483	MemberAccess	imem -> procs . alloc_byte_array_immovable		421409	0					
ANR	421484	PtrMemberAccess	imem -> procs		421409	0					
ANR	421485	Identifier	imem		421409	0					
ANR	421486	Identifier	procs		421409	1					
ANR	421487	Identifier	alloc_byte_array_immovable		421409	1					
ANR	421488	MemberAccess	imem -> procs . alloc_byte_array		421409	1					
ANR	421489	PtrMemberAccess	imem -> procs		421409	0					
ANR	421490	Identifier	imem		421409	0					
ANR	421491	Identifier	procs		421409	1					
ANR	421492	Identifier	alloc_byte_array		421409	1					
ANR	421493	ExpressionStatement	imem -> procs . alloc_struct_array_immovable = imem -> procs . alloc_struct_array	883:4:27344:27417	421409	9	True				
ANR	421494	AssignmentExpression	imem -> procs . alloc_struct_array_immovable = imem -> procs . alloc_struct_array		421409	0		=			
ANR	421495	MemberAccess	imem -> procs . alloc_struct_array_immovable		421409	0					
ANR	421496	PtrMemberAccess	imem -> procs		421409	0					
ANR	421497	Identifier	imem		421409	0					
ANR	421498	Identifier	procs		421409	1					
ANR	421499	Identifier	alloc_struct_array_immovable		421409	1					
ANR	421500	MemberAccess	imem -> procs . alloc_struct_array		421409	1					
ANR	421501	PtrMemberAccess	imem -> procs		421409	0					
ANR	421502	Identifier	imem		421409	0					
ANR	421503	Identifier	procs		421409	1					
ANR	421504	Identifier	alloc_struct_array		421409	1					
ANR	421505	ExpressionStatement	imem -> procs . alloc_string_immovable = imem -> procs . alloc_string	884:4:27423:27484	421409	10	True				
ANR	421506	AssignmentExpression	imem -> procs . alloc_string_immovable = imem -> procs . alloc_string		421409	0		=			
ANR	421507	MemberAccess	imem -> procs . alloc_string_immovable		421409	0					
ANR	421508	PtrMemberAccess	imem -> procs		421409	0					
ANR	421509	Identifier	imem		421409	0					
ANR	421510	Identifier	procs		421409	1					
ANR	421511	Identifier	alloc_string_immovable		421409	1					
ANR	421512	MemberAccess	imem -> procs . alloc_string		421409	1					
ANR	421513	PtrMemberAccess	imem -> procs		421409	0					
ANR	421514	Identifier	imem		421409	0					
ANR	421515	Identifier	procs		421409	1					
ANR	421516	Identifier	alloc_string		421409	1					
ANR	421517	ExpressionStatement	imem -> is_controlled = true	887:4:27543:27569	421409	11	True				
ANR	421518	AssignmentExpression	imem -> is_controlled = true		421409	0		=			
ANR	421519	PtrMemberAccess	imem -> is_controlled		421409	0					
ANR	421520	Identifier	imem		421409	0					
ANR	421521	Identifier	is_controlled		421409	1					
ANR	421522	Identifier	true		421409	1					
ANR	421523	ExpressionStatement	imem -> limit = 0	888:4:27575:27590	421409	12	True				
ANR	421524	AssignmentExpression	imem -> limit = 0		421409	0		=			
ANR	421525	PtrMemberAccess	imem -> limit		421409	0					
ANR	421526	Identifier	imem		421409	0					
ANR	421527	Identifier	limit		421409	1					
ANR	421528	PrimaryExpression	0		421409	1					
ANR	421529	ReturnStatement	return ( cp ? 0 : gs_note_error ( gs_error_VMerror ) ) ;	890:4:27597:27646	421409	13	True				
ANR	421530	ConditionalExpression	cp ? 0 : gs_note_error ( gs_error_VMerror )		421409	0					
ANR	421531	Condition	cp		421409	0					
ANR	421532	Identifier	cp		421409	0					
ANR	421533	PrimaryExpression	0		421409	1					
ANR	421534	CallExpression	gs_note_error ( gs_error_VMerror )		421409	2					
ANR	421535	Callee	gs_note_error		421409	0					
ANR	421536	Identifier	gs_note_error		421409	0					
ANR	421537	ArgumentList	gs_error_VMerror		421409	1					
ANR	421538	Argument	gs_error_VMerror		421409	0					
ANR	421539	Identifier	gs_error_VMerror		421409	0					
ANR	421540	ReturnType	int		421409	1					
ANR	421541	Identifier	ialloc_add_clump		421409	2					
ANR	421542	ParameterList	"gs_ref_memory_t * imem , ulong space , client_name_t cname"		421409	3					
ANR	421543	Parameter	gs_ref_memory_t * imem	861:17:26532:26552	421409	0	True				
ANR	421544	ParameterType	gs_ref_memory_t *		421409	0					
ANR	421545	Identifier	imem		421409	1					
ANR	421546	Parameter	ulong space	861:40:26555:26565	421409	1	True				
ANR	421547	ParameterType	ulong		421409	0					
ANR	421548	Identifier	space		421409	1					
ANR	421549	Parameter	client_name_t cname	861:53:26568:26586	421409	2	True				
ANR	421550	ParameterType	client_name_t		421409	0					
ANR	421551	Identifier	cname		421409	1					
ANR	421552	CFGEntryNode	ENTRY		421409		True				
ANR	421553	CFGExitNode	EXIT		421409		True				
ANR	421554	Symbol	imem -> procs		421409						
ANR	421555	Symbol	cname		421409						
ANR	421556	Symbol	imem -> procs . alloc_struct_array_immovable		421409						
ANR	421557	Symbol	imem -> procs . alloc_byte_array		421409						
ANR	421558	Symbol	space		421409						
ANR	421559	Symbol	imem -> gc_status		421409						
ANR	421560	Symbol	imem -> large_size		421409						
ANR	421561	Symbol	* imem		421409						
ANR	421562	Symbol	imem -> procs . alloc_string_immovable		421409						
ANR	421563	Symbol	imem -> procs . alloc_struct_array		421409						
ANR	421564	Symbol	imem -> limit		421409						
ANR	421565	Symbol	imem -> procs . alloc_bytes_immovable		421409						
ANR	421566	Symbol	imem -> procs . alloc_byte_array_immovable		421409						
ANR	421567	Symbol	false		421409						
ANR	421568	Symbol	imem -> clump_size		421409						
ANR	421569	Symbol	cp		421409						
ANR	421570	Symbol	alloc_add_clump		421409						
ANR	421571	Symbol	imem -> procs . alloc_bytes		421409						
ANR	421572	Symbol	gs_error_VMerror		421409						
ANR	421573	Symbol	gs_note_error		421409						
ANR	421574	Symbol	imem -> procs . alloc_struct_immovable		421409						
ANR	421575	Symbol	imem -> gc_status . max_vm		421409						
ANR	421576	Symbol	imem -> is_controlled		421409						
ANR	421577	Symbol	max_long		421409						
ANR	421578	Symbol	true		421409						
ANR	421579	Symbol	imem -> procs . alloc_struct		421409						
ANR	421580	Symbol	imem		421409						
ANR	421581	Symbol	imem -> procs . alloc_string		421409						
ANR	421582	Function	ialloc_gc_prepare	895:0:27750:28080							
ANR	421583	FunctionDef	ialloc_gc_prepare (gs_ref_memory_t * mem)		421582	0					
ANR	421584	CompoundStatement		897:0:27796:28080	421582	0					
ANR	421585	WhileStatement	while ( mem -> streams != 0 )		421582	0					
ANR	421586	Condition	mem -> streams != 0	901:11:27955:27971	421582	0	True				
ANR	421587	EqualityExpression	mem -> streams != 0		421582	0		!=			
ANR	421588	PtrMemberAccess	mem -> streams		421582	0					
ANR	421589	Identifier	mem		421582	0					
ANR	421590	Identifier	streams		421582	1					
ANR	421591	PrimaryExpression	0		421582	1					
ANR	421592	CompoundStatement		6:8:187:211	421582	1					
ANR	421593	IdentifierDeclStatement	stream * s = mem -> streams ;	902:8:27984:28008	421582	0	True				
ANR	421594	IdentifierDecl	* s = mem -> streams		421582	0					
ANR	421595	IdentifierDeclType	stream *		421582	0					
ANR	421596	Identifier	s		421582	1					
ANR	421597	AssignmentExpression	* s = mem -> streams		421582	2		=			
ANR	421598	Identifier	s		421582	0					
ANR	421599	PtrMemberAccess	mem -> streams		421582	1					
ANR	421600	Identifier	mem		421582	0					
ANR	421601	Identifier	streams		421582	1					
ANR	421602	ExpressionStatement	mem -> streams = s -> next	904:8:28019:28041	421582	1	True				
ANR	421603	AssignmentExpression	mem -> streams = s -> next		421582	0		=			
ANR	421604	PtrMemberAccess	mem -> streams		421582	0					
ANR	421605	Identifier	mem		421582	0					
ANR	421606	Identifier	streams		421582	1					
ANR	421607	PtrMemberAccess	s -> next		421582	1					
ANR	421608	Identifier	s		421582	0					
ANR	421609	Identifier	next		421582	1					
ANR	421610	ExpressionStatement	s -> prev = s -> next = 0	905:8:28051:28072	421582	2	True				
ANR	421611	AssignmentExpression	s -> prev = s -> next = 0		421582	0		=			
ANR	421612	PtrMemberAccess	s -> prev		421582	0					
ANR	421613	Identifier	s		421582	0					
ANR	421614	Identifier	prev		421582	1					
ANR	421615	AssignmentExpression	s -> next = 0		421582	1		=			
ANR	421616	PtrMemberAccess	s -> next		421582	0					
ANR	421617	Identifier	s		421582	0					
ANR	421618	Identifier	next		421582	1					
ANR	421619	PrimaryExpression	0		421582	1					
ANR	421620	ReturnType	void		421582	1					
ANR	421621	Identifier	ialloc_gc_prepare		421582	2					
ANR	421622	ParameterList	gs_ref_memory_t * mem		421582	3					
ANR	421623	Parameter	gs_ref_memory_t * mem	896:18:27773:27793	421582	0	True				
ANR	421624	ParameterType	gs_ref_memory_t *		421582	0					
ANR	421625	Identifier	mem		421582	1					
ANR	421626	CFGEntryNode	ENTRY		421582		True				
ANR	421627	CFGExitNode	EXIT		421582		True				
ANR	421628	Symbol	s		421582						
ANR	421629	Symbol	mem		421582						
ANR	421630	Symbol	s -> prev		421582						
ANR	421631	Symbol	s -> next		421582						
ANR	421632	Symbol	* s		421582						
ANR	421633	Symbol	* mem		421582						
ANR	421634	Symbol	mem -> streams		421582						
ANR	421635	Function	ialloc_reset	910:0:28114:28368							
ANR	421636	FunctionDef	ialloc_reset (gs_ref_memory_t * mem)		421635	0					
ANR	421637	CompoundStatement		912:0:28155:28368	421635	0					
ANR	421638	ExpressionStatement	mem -> root = 0	913:4:28161:28174	421635	0	True				
ANR	421639	AssignmentExpression	mem -> root = 0		421635	0		=			
ANR	421640	PtrMemberAccess	mem -> root		421635	0					
ANR	421641	Identifier	mem		421635	0					
ANR	421642	Identifier	root		421635	1					
ANR	421643	PrimaryExpression	0		421635	1					
ANR	421644	ExpressionStatement	mem -> cc = NULL	914:4:28180:28194	421635	1	True				
ANR	421645	AssignmentExpression	mem -> cc = NULL		421635	0		=			
ANR	421646	PtrMemberAccess	mem -> cc		421635	0					
ANR	421647	Identifier	mem		421635	0					
ANR	421648	Identifier	cc		421635	1					
ANR	421649	Identifier	NULL		421635	1					
ANR	421650	ExpressionStatement	mem -> allocated = 0	915:4:28200:28218	421635	2	True				
ANR	421651	AssignmentExpression	mem -> allocated = 0		421635	0		=			
ANR	421652	PtrMemberAccess	mem -> allocated		421635	0					
ANR	421653	Identifier	mem		421635	0					
ANR	421654	Identifier	allocated		421635	1					
ANR	421655	PrimaryExpression	0		421635	1					
ANR	421656	ExpressionStatement	mem -> changes = 0	916:4:28224:28240	421635	3	True				
ANR	421657	AssignmentExpression	mem -> changes = 0		421635	0		=			
ANR	421658	PtrMemberAccess	mem -> changes		421635	0					
ANR	421659	Identifier	mem		421635	0					
ANR	421660	Identifier	changes		421635	1					
ANR	421661	PrimaryExpression	0		421635	1					
ANR	421662	ExpressionStatement	mem -> scan_limit = 0	917:4:28246:28265	421635	4	True				
ANR	421663	AssignmentExpression	mem -> scan_limit = 0		421635	0		=			
ANR	421664	PtrMemberAccess	mem -> scan_limit		421635	0					
ANR	421665	Identifier	mem		421635	0					
ANR	421666	Identifier	scan_limit		421635	1					
ANR	421667	PrimaryExpression	0		421635	1					
ANR	421668	ExpressionStatement	mem -> total_scanned = 0	918:4:28271:28293	421635	5	True				
ANR	421669	AssignmentExpression	mem -> total_scanned = 0		421635	0		=			
ANR	421670	PtrMemberAccess	mem -> total_scanned		421635	0					
ANR	421671	Identifier	mem		421635	0					
ANR	421672	Identifier	total_scanned		421635	1					
ANR	421673	PrimaryExpression	0		421635	1					
ANR	421674	ExpressionStatement	mem -> total_scanned_after_compacting = 0	919:4:28299:28338	421635	6	True				
ANR	421675	AssignmentExpression	mem -> total_scanned_after_compacting = 0		421635	0		=			
ANR	421676	PtrMemberAccess	mem -> total_scanned_after_compacting		421635	0					
ANR	421677	Identifier	mem		421635	0					
ANR	421678	Identifier	total_scanned_after_compacting		421635	1					
ANR	421679	PrimaryExpression	0		421635	1					
ANR	421680	ExpressionStatement	ialloc_reset_free ( mem )	920:4:28344:28366	421635	7	True				
ANR	421681	CallExpression	ialloc_reset_free ( mem )		421635	0					
ANR	421682	Callee	ialloc_reset_free		421635	0					
ANR	421683	Identifier	ialloc_reset_free		421635	0					
ANR	421684	ArgumentList	mem		421635	1					
ANR	421685	Argument	mem		421635	0					
ANR	421686	Identifier	mem		421635	0					
ANR	421687	ReturnType	void		421635	1					
ANR	421688	Identifier	ialloc_reset		421635	2					
ANR	421689	ParameterList	gs_ref_memory_t * mem		421635	3					
ANR	421690	Parameter	gs_ref_memory_t * mem	911:13:28132:28152	421635	0	True				
ANR	421691	ParameterType	gs_ref_memory_t *		421635	0					
ANR	421692	Identifier	mem		421635	1					
ANR	421693	CFGEntryNode	ENTRY		421635		True				
ANR	421694	CFGExitNode	EXIT		421635		True				
ANR	421695	Symbol	mem -> scan_limit		421635						
ANR	421696	Symbol	mem -> total_scanned_after_compacting		421635						
ANR	421697	Symbol	NULL		421635						
ANR	421698	Symbol	mem -> allocated		421635						
ANR	421699	Symbol	mem		421635						
ANR	421700	Symbol	mem -> cc		421635						
ANR	421701	Symbol	mem -> root		421635						
ANR	421702	Symbol	mem -> changes		421635						
ANR	421703	Symbol	mem -> total_scanned		421635						
ANR	421704	Symbol	* mem		421635						
ANR	421705	Function	ialloc_reset_free	924:0:28408:28709							
ANR	421706	FunctionDef	ialloc_reset_free (gs_ref_memory_t * mem)		421705	0					
ANR	421707	CompoundStatement		926:0:28454:28709	421705	0					
ANR	421708	IdentifierDeclStatement	int i ;	927:4:28460:28465	421705	0	True				
ANR	421709	IdentifierDecl	i		421705	0					
ANR	421710	IdentifierDeclType	int		421705	0					
ANR	421711	Identifier	i		421705	1					
ANR	421712	IdentifierDeclStatement	obj_header_t * * p ;	928:4:28471:28487	421705	1	True				
ANR	421713	IdentifierDecl	* * p		421705	0					
ANR	421714	IdentifierDeclType	obj_header_t * *		421705	0					
ANR	421715	Identifier	p		421705	1					
ANR	421716	ExpressionStatement	mem -> lost . objects = 0	930:4:28494:28515	421705	2	True				
ANR	421717	AssignmentExpression	mem -> lost . objects = 0		421705	0		=			
ANR	421718	MemberAccess	mem -> lost . objects		421705	0					
ANR	421719	PtrMemberAccess	mem -> lost		421705	0					
ANR	421720	Identifier	mem		421705	0					
ANR	421721	Identifier	lost		421705	1					
ANR	421722	Identifier	objects		421705	1					
ANR	421723	PrimaryExpression	0		421705	1					
ANR	421724	ExpressionStatement	mem -> lost . refs = 0	931:4:28521:28539	421705	3	True				
ANR	421725	AssignmentExpression	mem -> lost . refs = 0		421705	0		=			
ANR	421726	MemberAccess	mem -> lost . refs		421705	0					
ANR	421727	PtrMemberAccess	mem -> lost		421705	0					
ANR	421728	Identifier	mem		421705	0					
ANR	421729	Identifier	lost		421705	1					
ANR	421730	Identifier	refs		421705	1					
ANR	421731	PrimaryExpression	0		421705	1					
ANR	421732	ExpressionStatement	mem -> lost . strings = 0	932:4:28545:28566	421705	4	True				
ANR	421733	AssignmentExpression	mem -> lost . strings = 0		421705	0		=			
ANR	421734	MemberAccess	mem -> lost . strings		421705	0					
ANR	421735	PtrMemberAccess	mem -> lost		421705	0					
ANR	421736	Identifier	mem		421705	0					
ANR	421737	Identifier	lost		421705	1					
ANR	421738	Identifier	strings		421705	1					
ANR	421739	PrimaryExpression	0		421705	1					
ANR	421740	ExpressionStatement	mem -> cfreed . cp = 0	933:4:28572:28590	421705	5	True				
ANR	421741	AssignmentExpression	mem -> cfreed . cp = 0		421705	0		=			
ANR	421742	MemberAccess	mem -> cfreed . cp		421705	0					
ANR	421743	PtrMemberAccess	mem -> cfreed		421705	0					
ANR	421744	Identifier	mem		421705	0					
ANR	421745	Identifier	cfreed		421705	1					
ANR	421746	Identifier	cp		421705	1					
ANR	421747	PrimaryExpression	0		421705	1					
ANR	421748	ForStatement	"for ( i = 0 , p = & mem -> freelists [ 0 ] ; i < num_freelists ; i ++ , p ++ )"		421705	6					
ANR	421749	ForInit	"i = 0 , p = & mem -> freelists [ 0 ] ;"	934:9:28601:28630	421705	0	True				
ANR	421750	Expression	"i = 0 , p = & mem -> freelists [ 0 ]"		421705	0					
ANR	421751	AssignmentExpression	i = 0		421705	0		=			
ANR	421752	Identifier	i		421705	0					
ANR	421753	PrimaryExpression	0		421705	1					
ANR	421754	AssignmentExpression	p = & mem -> freelists [ 0 ]		421705	1		=			
ANR	421755	Identifier	p		421705	0					
ANR	421756	UnaryOperationExpression	& mem -> freelists [ 0 ]		421705	1					
ANR	421757	UnaryOperator	&		421705	0					
ANR	421758	ArrayIndexing	mem -> freelists [ 0 ]		421705	1					
ANR	421759	PtrMemberAccess	mem -> freelists		421705	0					
ANR	421760	Identifier	mem		421705	0					
ANR	421761	Identifier	freelists		421705	1					
ANR	421762	PrimaryExpression	0		421705	1					
ANR	421763	Condition	i < num_freelists	934:40:28632:28648	421705	1	True				
ANR	421764	RelationalExpression	i < num_freelists		421705	0		<			
ANR	421765	Identifier	i		421705	0					
ANR	421766	Identifier	num_freelists		421705	1					
ANR	421767	Expression	"i ++ , p ++"	934:59:28651:28658	421705	2	True				
ANR	421768	PostIncDecOperationExpression	i ++		421705	0					
ANR	421769	Identifier	i		421705	0					
ANR	421770	IncDec	++		421705	1					
ANR	421771	PostIncDecOperationExpression	p ++		421705	1					
ANR	421772	Identifier	p		421705	0					
ANR	421773	IncDec	++		421705	1					
ANR	421774	ExpressionStatement	* p = 0	935:8:28669:28675	421705	3	True				
ANR	421775	AssignmentExpression	* p = 0		421705	0		=			
ANR	421776	UnaryOperationExpression	* p		421705	0					
ANR	421777	UnaryOperator	*		421705	0					
ANR	421778	Identifier	p		421705	1					
ANR	421779	PrimaryExpression	0		421705	1					
ANR	421780	ExpressionStatement	mem -> largest_free_size = 0	936:4:28681:28707	421705	7	True				
ANR	421781	AssignmentExpression	mem -> largest_free_size = 0		421705	0		=			
ANR	421782	PtrMemberAccess	mem -> largest_free_size		421705	0					
ANR	421783	Identifier	mem		421705	0					
ANR	421784	Identifier	largest_free_size		421705	1					
ANR	421785	PrimaryExpression	0		421705	1					
ANR	421786	ReturnType	void		421705	1					
ANR	421787	Identifier	ialloc_reset_free		421705	2					
ANR	421788	ParameterList	gs_ref_memory_t * mem		421705	3					
ANR	421789	Parameter	gs_ref_memory_t * mem	925:18:28431:28451	421705	0	True				
ANR	421790	ParameterType	gs_ref_memory_t *		421705	0					
ANR	421791	Identifier	mem		421705	1					
ANR	421792	CFGEntryNode	ENTRY		421705		True				
ANR	421793	CFGExitNode	EXIT		421705		True				
ANR	421794	Symbol	mem -> lost . refs		421705						
ANR	421795	Symbol	mem -> freelists		421705						
ANR	421796	Symbol	i		421705						
ANR	421797	Symbol	num_freelists		421705						
ANR	421798	Symbol	mem -> largest_free_size		421705						
ANR	421799	Symbol	mem -> lost . objects		421705						
ANR	421800	Symbol	mem -> cfreed . cp		421705						
ANR	421801	Symbol	p		421705						
ANR	421802	Symbol	mem -> cfreed		421705						
ANR	421803	Symbol	mem		421705						
ANR	421804	Symbol	mem -> lost		421705						
ANR	421805	Symbol	* p		421705						
ANR	421806	Symbol	mem -> lost . strings		421705						
ANR	421807	Symbol	* mem		421705						
ANR	421808	Function	ialloc_set_limit	949:0:29104:30401							
ANR	421809	FunctionDef	ialloc_set_limit (register gs_ref_memory_t * mem)		421808	0					
ANR	421810	CompoundStatement		951:0:29158:30401	421808	0					
ANR	421811	IdentifierDeclStatement	ulong max_allocated = ( mem -> gc_status . max_vm > mem -> previous_status . allocated ? mem -> gc_status . max_vm - mem -> previous_status . allocated : 0 ) ;	957:4:29421:29574	421808	0	True				
ANR	421812	IdentifierDecl	max_allocated = ( mem -> gc_status . max_vm > mem -> previous_status . allocated ? mem -> gc_status . max_vm - mem -> previous_status . allocated : 0 )		421808	0					
ANR	421813	IdentifierDeclType	ulong		421808	0					
ANR	421814	Identifier	max_allocated		421808	1					
ANR	421815	AssignmentExpression	max_allocated = ( mem -> gc_status . max_vm > mem -> previous_status . allocated ? mem -> gc_status . max_vm - mem -> previous_status . allocated : 0 )		421808	2		=			
ANR	421816	Identifier	max_allocated		421808	0					
ANR	421817	ConditionalExpression	mem -> gc_status . max_vm > mem -> previous_status . allocated ? mem -> gc_status . max_vm - mem -> previous_status . allocated : 0		421808	1					
ANR	421818	Condition	mem -> gc_status . max_vm > mem -> previous_status . allocated		421808	0					
ANR	421819	RelationalExpression	mem -> gc_status . max_vm > mem -> previous_status . allocated		421808	0		>			
ANR	421820	MemberAccess	mem -> gc_status . max_vm		421808	0					
ANR	421821	PtrMemberAccess	mem -> gc_status		421808	0					
ANR	421822	Identifier	mem		421808	0					
ANR	421823	Identifier	gc_status		421808	1					
ANR	421824	Identifier	max_vm		421808	1					
ANR	421825	MemberAccess	mem -> previous_status . allocated		421808	1					
ANR	421826	PtrMemberAccess	mem -> previous_status		421808	0					
ANR	421827	Identifier	mem		421808	0					
ANR	421828	Identifier	previous_status		421808	1					
ANR	421829	Identifier	allocated		421808	1					
ANR	421830	AdditiveExpression	mem -> gc_status . max_vm - mem -> previous_status . allocated		421808	1		-			
ANR	421831	MemberAccess	mem -> gc_status . max_vm		421808	0					
ANR	421832	PtrMemberAccess	mem -> gc_status		421808	0					
ANR	421833	Identifier	mem		421808	0					
ANR	421834	Identifier	gc_status		421808	1					
ANR	421835	Identifier	max_vm		421808	1					
ANR	421836	MemberAccess	mem -> previous_status . allocated		421808	1					
ANR	421837	PtrMemberAccess	mem -> previous_status		421808	0					
ANR	421838	Identifier	mem		421808	0					
ANR	421839	Identifier	previous_status		421808	1					
ANR	421840	Identifier	allocated		421808	1					
ANR	421841	PrimaryExpression	0		421808	2					
ANR	421842	IfStatement	if ( mem -> gc_status . enabled )		421808	1					
ANR	421843	Condition	mem -> gc_status . enabled	962:8:29585:29606	421808	0	True				
ANR	421844	MemberAccess	mem -> gc_status . enabled		421808	0					
ANR	421845	PtrMemberAccess	mem -> gc_status		421808	0					
ANR	421846	Identifier	mem		421808	0					
ANR	421847	Identifier	gc_status		421808	1					
ANR	421848	Identifier	enabled		421808	1					
ANR	421849	CompoundStatement		13:8:460:521	421808	1					
ANR	421850	IdentifierDeclStatement	ulong limit = mem -> gc_allocated + mem -> gc_status . vm_threshold ;	963:8:29619:29680	421808	0	True				
ANR	421851	IdentifierDecl	limit = mem -> gc_allocated + mem -> gc_status . vm_threshold		421808	0					
ANR	421852	IdentifierDeclType	ulong		421808	0					
ANR	421853	Identifier	limit		421808	1					
ANR	421854	AssignmentExpression	limit = mem -> gc_allocated + mem -> gc_status . vm_threshold		421808	2		=			
ANR	421855	Identifier	limit		421808	0					
ANR	421856	AdditiveExpression	mem -> gc_allocated + mem -> gc_status . vm_threshold		421808	1		+			
ANR	421857	PtrMemberAccess	mem -> gc_allocated		421808	0					
ANR	421858	Identifier	mem		421808	0					
ANR	421859	Identifier	gc_allocated		421808	1					
ANR	421860	MemberAccess	mem -> gc_status . vm_threshold		421808	1					
ANR	421861	PtrMemberAccess	mem -> gc_status		421808	0					
ANR	421862	Identifier	mem		421808	0					
ANR	421863	Identifier	gc_status		421808	1					
ANR	421864	Identifier	vm_threshold		421808	1					
ANR	421865	IfStatement	if ( limit < mem -> previous_status . allocated )		421808	1					
ANR	421866	Condition	limit < mem -> previous_status . allocated	965:12:29695:29732	421808	0	True				
ANR	421867	RelationalExpression	limit < mem -> previous_status . allocated		421808	0		<			
ANR	421868	Identifier	limit		421808	0					
ANR	421869	MemberAccess	mem -> previous_status . allocated		421808	1					
ANR	421870	PtrMemberAccess	mem -> previous_status		421808	0					
ANR	421871	Identifier	mem		421808	0					
ANR	421872	Identifier	previous_status		421808	1					
ANR	421873	Identifier	allocated		421808	1					
ANR	421874	ExpressionStatement	mem -> limit = 0	966:12:29747:29761	421808	1	True				
ANR	421875	AssignmentExpression	mem -> limit = 0		421808	0		=			
ANR	421876	PtrMemberAccess	mem -> limit		421808	0					
ANR	421877	Identifier	mem		421808	0					
ANR	421878	Identifier	limit		421808	1					
ANR	421879	PrimaryExpression	0		421808	1					
ANR	421880	ElseStatement	else		421808	0					
ANR	421881	CompoundStatement		17:13:617:617	421808	0					
ANR	421882	ExpressionStatement	limit -= mem -> previous_status . allocated	968:12:29790:29829	421808	0	True				
ANR	421883	AssignmentExpression	limit -= mem -> previous_status . allocated		421808	0		-=			
ANR	421884	Identifier	limit		421808	0					
ANR	421885	MemberAccess	mem -> previous_status . allocated		421808	1					
ANR	421886	PtrMemberAccess	mem -> previous_status		421808	0					
ANR	421887	Identifier	mem		421808	0					
ANR	421888	Identifier	previous_status		421808	1					
ANR	421889	Identifier	allocated		421808	1					
ANR	421890	ExpressionStatement	"mem -> limit = min ( limit , max_allocated )"	969:12:29843:29881	421808	1	True				
ANR	421891	AssignmentExpression	"mem -> limit = min ( limit , max_allocated )"		421808	0		=			
ANR	421892	PtrMemberAccess	mem -> limit		421808	0					
ANR	421893	Identifier	mem		421808	0					
ANR	421894	Identifier	limit		421808	1					
ANR	421895	CallExpression	"min ( limit , max_allocated )"		421808	1					
ANR	421896	Callee	min		421808	0					
ANR	421897	Identifier	min		421808	0					
ANR	421898	ArgumentList	limit		421808	1					
ANR	421899	Argument	limit		421808	0					
ANR	421900	Identifier	limit		421808	0					
ANR	421901	Argument	max_allocated		421808	1					
ANR	421902	Identifier	max_allocated		421808	0					
ANR	421903	ElseStatement	else		421808	0					
ANR	421904	ExpressionStatement	"mem -> limit = min ( max_allocated , mem -> gc_allocated + FORCE_GC_LIMIT )"	972:8:29912:29979	421808	0	True				
ANR	421905	AssignmentExpression	"mem -> limit = min ( max_allocated , mem -> gc_allocated + FORCE_GC_LIMIT )"		421808	0		=			
ANR	421906	PtrMemberAccess	mem -> limit		421808	0					
ANR	421907	Identifier	mem		421808	0					
ANR	421908	Identifier	limit		421808	1					
ANR	421909	CallExpression	"min ( max_allocated , mem -> gc_allocated + FORCE_GC_LIMIT )"		421808	1					
ANR	421910	Callee	min		421808	0					
ANR	421911	Identifier	min		421808	0					
ANR	421912	ArgumentList	max_allocated		421808	1					
ANR	421913	Argument	max_allocated		421808	0					
ANR	421914	Identifier	max_allocated		421808	0					
ANR	421915	Argument	mem -> gc_allocated + FORCE_GC_LIMIT		421808	1					
ANR	421916	AdditiveExpression	mem -> gc_allocated + FORCE_GC_LIMIT		421808	0		+			
ANR	421917	PtrMemberAccess	mem -> gc_allocated		421808	0					
ANR	421918	Identifier	mem		421808	0					
ANR	421919	Identifier	gc_allocated		421808	1					
ANR	421920	Identifier	FORCE_GC_LIMIT		421808	1					
ANR	421921	Statement	if_debug7m	973:4:29985:29994	421808	2	True				
ANR	421922	Statement	(	973:14:29995:29995	421808	3	True				
ANR	421923	Statement	'0'	973:15:29996:29998	421808	4	True				
ANR	421924	Statement	","	973:18:29999:29999	421808	5	True				
ANR	421925	Statement	(	973:20:30001:30001	421808	6	True				
ANR	421926	Statement	const	973:21:30002:30006	421808	7	True				
ANR	421927	Statement	gs_memory_t	973:27:30008:30018	421808	8	True				
ANR	421928	Statement	*	973:39:30020:30020	421808	9	True				
ANR	421929	Statement	)	973:40:30021:30021	421808	10	True				
ANR	421930	Statement	mem	973:41:30022:30024	421808	11	True				
ANR	421931	Statement	","	973:44:30025:30025	421808	12	True				
ANR	421932	Statement	"""[0]space=%d, max_vm=%ld, prev.alloc=%ld, enabled=%d, """	974:15:30042:30096	421808	13	True				
ANR	421933	Statement	"""gc_alloc=%ld, threshold=%ld => limit=%ld\\n"""	975:15:30113:30156	421808	14	True				
ANR	421934	Statement	","	975:59:30157:30157	421808	15	True				
ANR	421935	Statement	mem	976:15:30174:30176	421808	16	True				
ANR	421936	Statement	->	976:18:30177:30178	421808	17	True				
ANR	421937	Statement	space	976:20:30179:30183	421808	18	True				
ANR	421938	Statement	","	976:25:30184:30184	421808	19	True				
ANR	421939	Statement	(	976:27:30186:30186	421808	20	True				
ANR	421940	Statement	long	976:28:30187:30190	421808	21	True				
ANR	421941	Statement	)	976:32:30191:30191	421808	22	True				
ANR	421942	Statement	mem	976:33:30192:30194	421808	23	True				
ANR	421943	Statement	->	976:36:30195:30196	421808	24	True				
ANR	421944	Statement	gc_status	976:38:30197:30205	421808	25	True				
ANR	421945	Statement	.	976:47:30206:30206	421808	26	True				
ANR	421946	Statement	max_vm	976:48:30207:30212	421808	27	True				
ANR	421947	Statement	","	976:54:30213:30213	421808	28	True				
ANR	421948	Statement	(	977:15:30230:30230	421808	29	True				
ANR	421949	Statement	long	977:16:30231:30234	421808	30	True				
ANR	421950	Statement	)	977:20:30235:30235	421808	31	True				
ANR	421951	Statement	mem	977:21:30236:30238	421808	32	True				
ANR	421952	Statement	->	977:24:30239:30240	421808	33	True				
ANR	421953	Statement	previous_status	977:26:30241:30255	421808	34	True				
ANR	421954	Statement	.	977:41:30256:30256	421808	35	True				
ANR	421955	Statement	allocated	977:42:30257:30265	421808	36	True				
ANR	421956	Statement	","	977:51:30266:30266	421808	37	True				
ANR	421957	Statement	mem	978:15:30283:30285	421808	38	True				
ANR	421958	Statement	->	978:18:30286:30287	421808	39	True				
ANR	421959	Statement	gc_status	978:20:30288:30296	421808	40	True				
ANR	421960	Statement	.	978:29:30297:30297	421808	41	True				
ANR	421961	Statement	enabled	978:30:30298:30304	421808	42	True				
ANR	421962	Statement	","	978:37:30305:30305	421808	43	True				
ANR	421963	Statement	(	978:39:30307:30307	421808	44	True				
ANR	421964	Statement	long	978:40:30308:30311	421808	45	True				
ANR	421965	Statement	)	978:44:30312:30312	421808	46	True				
ANR	421966	Statement	mem	978:45:30313:30315	421808	47	True				
ANR	421967	Statement	->	978:48:30316:30317	421808	48	True				
ANR	421968	Statement	gc_allocated	978:50:30318:30329	421808	49	True				
ANR	421969	Statement	","	978:62:30330:30330	421808	50	True				
ANR	421970	Statement	(	979:15:30347:30347	421808	51	True				
ANR	421971	Statement	long	979:16:30348:30351	421808	52	True				
ANR	421972	Statement	)	979:20:30352:30352	421808	53	True				
ANR	421973	Statement	mem	979:21:30353:30355	421808	54	True				
ANR	421974	Statement	->	979:24:30356:30357	421808	55	True				
ANR	421975	Statement	gc_status	979:26:30358:30366	421808	56	True				
ANR	421976	Statement	.	979:35:30367:30367	421808	57	True				
ANR	421977	Statement	vm_threshold	979:36:30368:30379	421808	58	True				
ANR	421978	Statement	","	979:48:30380:30380	421808	59	True				
ANR	421979	Statement	(	979:50:30382:30382	421808	60	True				
ANR	421980	Statement	long	979:51:30383:30386	421808	61	True				
ANR	421981	Statement	)	979:55:30387:30387	421808	62	True				
ANR	421982	Statement	mem	979:56:30388:30390	421808	63	True				
ANR	421983	Statement	->	979:59:30391:30392	421808	64	True				
ANR	421984	Statement	limit	979:61:30393:30397	421808	65	True				
ANR	421985	Statement	)	979:66:30398:30398	421808	66	True				
ANR	421986	ExpressionStatement		979:67:30399:30399	421808	67	True				
ANR	421987	ReturnType	void		421808	1					
ANR	421988	Identifier	ialloc_set_limit		421808	2					
ANR	421989	ParameterList	register gs_ref_memory_t * mem		421808	3					
ANR	421990	Parameter	register gs_ref_memory_t * mem	950:17:29126:29155	421808	0	True				
ANR	421991	ParameterType	register gs_ref_memory_t *		421808	0					
ANR	421992	Identifier	mem		421808	1					
ANR	421993	CFGEntryNode	ENTRY		421808		True				
ANR	421994	CFGExitNode	EXIT		421808		True				
ANR	421995	Symbol	mem -> previous_status . allocated		421808						
ANR	421996	Symbol	FORCE_GC_LIMIT		421808						
ANR	421997	Symbol	mem -> gc_status . max_vm		421808						
ANR	421998	Symbol	max_allocated		421808						
ANR	421999	Symbol	mem -> gc_status . vm_threshold		421808						
ANR	422000	Symbol	mem -> limit		421808						
ANR	422001	Symbol	mem -> gc_status		421808						
ANR	422002	Symbol	min		421808						
ANR	422003	Symbol	mem		421808						
ANR	422004	Symbol	mem -> gc_status . enabled		421808						
ANR	422005	Symbol	limit		421808						
ANR	422006	Symbol	mem -> gc_allocated		421808						
ANR	422007	Symbol	mem -> previous_status		421808						
ANR	422008	Symbol	* mem		421808						
ANR	422009	ClassDef	free_data	982:0:30404:30482							
ANR	422010	DeclStmt									
ANR	422011	Decl							gs_ref_memory_t	gs_ref_memory_t *	imem
ANR	422012	DeclStmt									
ANR	422013	Decl							clump_t	clump_t *	allocator
ANR	422014	Function	free_all_not_allocator	988:0:30486:30785							
ANR	422015	FunctionDef	"free_all_not_allocator (clump_t * cp , void * arg)"		422014	0					
ANR	422016	CompoundStatement		990:0:30559:30785	422014	0					
ANR	422017	IdentifierDeclStatement	struct free_data * fd = ( struct free_data * ) arg ;	991:4:30565:30611	422014	0	True				
ANR	422018	IdentifierDecl	* fd = ( struct free_data * ) arg		422014	0					
ANR	422019	IdentifierDeclType	struct free_data *		422014	0					
ANR	422020	Identifier	fd		422014	1					
ANR	422021	AssignmentExpression	* fd = ( struct free_data * ) arg		422014	2		=			
ANR	422022	Identifier	fd		422014	0					
ANR	422023	CastExpression	( struct free_data * ) arg		422014	1					
ANR	422024	CastTarget	struct free_data *		422014	0					
ANR	422025	Identifier	arg		422014	1					
ANR	422026	IfStatement	if ( cp -> cbase + sizeof ( obj_header_t ) != ( byte * ) fd -> imem )		422014	1					
ANR	422027	Condition	cp -> cbase + sizeof ( obj_header_t ) != ( byte * ) fd -> imem	993:8:30622:30673	422014	0	True				
ANR	422028	EqualityExpression	cp -> cbase + sizeof ( obj_header_t ) != ( byte * ) fd -> imem		422014	0		!=			
ANR	422029	AdditiveExpression	cp -> cbase + sizeof ( obj_header_t )		422014	0		+			
ANR	422030	PtrMemberAccess	cp -> cbase		422014	0					
ANR	422031	Identifier	cp		422014	0					
ANR	422032	Identifier	cbase		422014	1					
ANR	422033	SizeofExpression	sizeof ( obj_header_t )		422014	1					
ANR	422034	Sizeof	sizeof		422014	0					
ANR	422035	SizeofOperand	obj_header_t		422014	1					
ANR	422036	CastExpression	( byte * ) fd -> imem		422014	1					
ANR	422037	CastTarget	byte *		422014	0					
ANR	422038	PtrMemberAccess	fd -> imem		422014	1					
ANR	422039	Identifier	fd		422014	0					
ANR	422040	Identifier	imem		422014	1					
ANR	422041	ExpressionStatement	"alloc_free_clump ( cp , fd -> imem )"	994:8:30684:30714	422014	1	True				
ANR	422042	CallExpression	"alloc_free_clump ( cp , fd -> imem )"		422014	0					
ANR	422043	Callee	alloc_free_clump		422014	0					
ANR	422044	Identifier	alloc_free_clump		422014	0					
ANR	422045	ArgumentList	cp		422014	1					
ANR	422046	Argument	cp		422014	0					
ANR	422047	Identifier	cp		422014	0					
ANR	422048	Argument	fd -> imem		422014	1					
ANR	422049	PtrMemberAccess	fd -> imem		422014	0					
ANR	422050	Identifier	fd		422014	0					
ANR	422051	Identifier	imem		422014	1					
ANR	422052	ElseStatement	else		422014	0					
ANR	422053	ExpressionStatement	fd -> allocator = cp	996:8:30733:30751	422014	0	True				
ANR	422054	AssignmentExpression	fd -> allocator = cp		422014	0		=			
ANR	422055	PtrMemberAccess	fd -> allocator		422014	0					
ANR	422056	Identifier	fd		422014	0					
ANR	422057	Identifier	allocator		422014	1					
ANR	422058	Identifier	cp		422014	1					
ANR	422059	ReturnStatement	return SPLAY_APP_CONTINUE ;	998:4:30758:30783	422014	2	True				
ANR	422060	Identifier	SPLAY_APP_CONTINUE		422014	0					
ANR	422061	ReturnType	static splay_app_result_t		422014	1					
ANR	422062	Identifier	free_all_not_allocator		422014	2					
ANR	422063	ParameterList	"clump_t * cp , void * arg"		422014	3					
ANR	422064	Parameter	clump_t * cp	989:23:30535:30545	422014	0	True				
ANR	422065	ParameterType	clump_t *		422014	0					
ANR	422066	Identifier	cp		422014	1					
ANR	422067	Parameter	void * arg	989:36:30548:30556	422014	1	True				
ANR	422068	ParameterType	void *		422014	0					
ANR	422069	Identifier	arg		422014	1					
ANR	422070	CFGEntryNode	ENTRY		422014		True				
ANR	422071	CFGExitNode	EXIT		422014		True				
ANR	422072	Symbol	* cp		422014						
ANR	422073	Symbol	fd -> imem		422014						
ANR	422074	Symbol	arg		422014						
ANR	422075	Symbol	* fd		422014						
ANR	422076	Symbol	fd -> allocator		422014						
ANR	422077	Symbol	cp -> cbase		422014						
ANR	422078	Symbol	cp		422014						
ANR	422079	Symbol	fd		422014						
ANR	422080	Symbol	SPLAY_APP_CONTINUE		422014						
ANR	422081	Function	free_all_allocator	1001:0:30788:31097							
ANR	422082	FunctionDef	"free_all_allocator (clump_t * cp , void * arg)"		422081	0					
ANR	422083	CompoundStatement		1003:0:30857:31097	422081	0					
ANR	422084	IdentifierDeclStatement	struct free_data * fd = ( struct free_data * ) arg ;	1004:4:30863:30909	422081	0	True				
ANR	422085	IdentifierDecl	* fd = ( struct free_data * ) arg		422081	0					
ANR	422086	IdentifierDeclType	struct free_data *		422081	0					
ANR	422087	Identifier	fd		422081	1					
ANR	422088	AssignmentExpression	* fd = ( struct free_data * ) arg		422081	2		=			
ANR	422089	Identifier	fd		422081	0					
ANR	422090	CastExpression	( struct free_data * ) arg		422081	1					
ANR	422091	CastTarget	struct free_data *		422081	0					
ANR	422092	Identifier	arg		422081	1					
ANR	422093	IfStatement	if ( cp -> cbase + sizeof ( obj_header_t ) != ( byte * ) fd -> imem )		422081	1					
ANR	422094	Condition	cp -> cbase + sizeof ( obj_header_t ) != ( byte * ) fd -> imem	1006:8:30920:30971	422081	0	True				
ANR	422095	EqualityExpression	cp -> cbase + sizeof ( obj_header_t ) != ( byte * ) fd -> imem		422081	0		!=			
ANR	422096	AdditiveExpression	cp -> cbase + sizeof ( obj_header_t )		422081	0		+			
ANR	422097	PtrMemberAccess	cp -> cbase		422081	0					
ANR	422098	Identifier	cp		422081	0					
ANR	422099	Identifier	cbase		422081	1					
ANR	422100	SizeofExpression	sizeof ( obj_header_t )		422081	1					
ANR	422101	Sizeof	sizeof		422081	0					
ANR	422102	SizeofOperand	obj_header_t		422081	1					
ANR	422103	CastExpression	( byte * ) fd -> imem		422081	1					
ANR	422104	CastTarget	byte *		422081	0					
ANR	422105	PtrMemberAccess	fd -> imem		422081	1					
ANR	422106	Identifier	fd		422081	0					
ANR	422107	Identifier	imem		422081	1					
ANR	422108	ReturnStatement	return SPLAY_APP_CONTINUE ;	1007:8:30982:31007	422081	1	True				
ANR	422109	Identifier	SPLAY_APP_CONTINUE		422081	0					
ANR	422110	ExpressionStatement	fd -> allocator = cp	1009:4:31014:31032	422081	2	True				
ANR	422111	AssignmentExpression	fd -> allocator = cp		422081	0		=			
ANR	422112	PtrMemberAccess	fd -> allocator		422081	0					
ANR	422113	Identifier	fd		422081	0					
ANR	422114	Identifier	allocator		422081	1					
ANR	422115	Identifier	cp		422081	1					
ANR	422116	ExpressionStatement	"alloc_free_clump ( cp , fd -> imem )"	1010:4:31038:31068	422081	3	True				
ANR	422117	CallExpression	"alloc_free_clump ( cp , fd -> imem )"		422081	0					
ANR	422118	Callee	alloc_free_clump		422081	0					
ANR	422119	Identifier	alloc_free_clump		422081	0					
ANR	422120	ArgumentList	cp		422081	1					
ANR	422121	Argument	cp		422081	0					
ANR	422122	Identifier	cp		422081	0					
ANR	422123	Argument	fd -> imem		422081	1					
ANR	422124	PtrMemberAccess	fd -> imem		422081	0					
ANR	422125	Identifier	fd		422081	0					
ANR	422126	Identifier	imem		422081	1					
ANR	422127	ReturnStatement	return SPLAY_APP_STOP ;	1011:4:31074:31095	422081	4	True				
ANR	422128	Identifier	SPLAY_APP_STOP		422081	0					
ANR	422129	ReturnType	static splay_app_result_t		422081	1					
ANR	422130	Identifier	free_all_allocator		422081	2					
ANR	422131	ParameterList	"clump_t * cp , void * arg"		422081	3					
ANR	422132	Parameter	clump_t * cp	1002:19:30833:30843	422081	0	True				
ANR	422133	ParameterType	clump_t *		422081	0					
ANR	422134	Identifier	cp		422081	1					
ANR	422135	Parameter	void * arg	1002:32:30846:30854	422081	1	True				
ANR	422136	ParameterType	void *		422081	0					
ANR	422137	Identifier	arg		422081	1					
ANR	422138	CFGEntryNode	ENTRY		422081		True				
ANR	422139	CFGExitNode	EXIT		422081		True				
ANR	422140	Symbol	* cp		422081						
ANR	422141	Symbol	SPLAY_APP_STOP		422081						
ANR	422142	Symbol	fd -> imem		422081						
ANR	422143	Symbol	arg		422081						
ANR	422144	Symbol	* fd		422081						
ANR	422145	Symbol	fd -> allocator		422081						
ANR	422146	Symbol	cp -> cbase		422081						
ANR	422147	Symbol	cp		422081						
ANR	422148	Symbol	fd		422081						
ANR	422149	Symbol	SPLAY_APP_CONTINUE		422081						
ANR	422150	Function	i_free_all	1019:0:31324:32088							
ANR	422151	FunctionDef	"i_free_all (gs_memory_t * mem , uint free_mask , client_name_t cname)"		422150	0					
ANR	422152	CompoundStatement		1021:0:31403:32088	422150	0					
ANR	422153	IdentifierDeclStatement	gs_ref_memory_t * imem = ( gs_ref_memory_t * ) mem ;	1022:4:31409:31456	422150	0	True				
ANR	422154	IdentifierDecl	* imem = ( gs_ref_memory_t * ) mem		422150	0					
ANR	422155	IdentifierDeclType	gs_ref_memory_t *		422150	0					
ANR	422156	Identifier	imem		422150	1					
ANR	422157	AssignmentExpression	* imem = ( gs_ref_memory_t * ) mem		422150	2		=			
ANR	422158	Identifier	imem		422150	0					
ANR	422159	CastExpression	( gs_ref_memory_t * ) mem		422150	1					
ANR	422160	CastTarget	gs_ref_memory_t *		422150	0					
ANR	422161	Identifier	mem		422150	1					
ANR	422162	IdentifierDeclStatement	struct free_data fd ;	1023:4:31462:31481	422150	1	True				
ANR	422163	IdentifierDecl	fd		422150	0					
ANR	422164	IdentifierDeclType	struct free_data		422150	0					
ANR	422165	Identifier	fd		422150	1					
ANR	422166	ExpressionStatement	fd . imem = imem	1025:4:31488:31502	422150	2	True				
ANR	422167	AssignmentExpression	fd . imem = imem		422150	0		=			
ANR	422168	MemberAccess	fd . imem		422150	0					
ANR	422169	Identifier	fd		422150	0					
ANR	422170	Identifier	imem		422150	1					
ANR	422171	Identifier	imem		422150	1					
ANR	422172	ExpressionStatement	fd . allocator = NULL	1026:4:31508:31527	422150	3	True				
ANR	422173	AssignmentExpression	fd . allocator = NULL		422150	0		=			
ANR	422174	MemberAccess	fd . allocator		422150	0					
ANR	422175	Identifier	fd		422150	0					
ANR	422176	Identifier	allocator		422150	1					
ANR	422177	Identifier	NULL		422150	1					
ANR	422178	IfStatement	if ( free_mask & FREE_ALL_DATA && imem -> root != NULL )		422150	4					
ANR	422179	Condition	free_mask & FREE_ALL_DATA && imem -> root != NULL	1028:8:31538:31584	422150	0	True				
ANR	422180	AndExpression	free_mask & FREE_ALL_DATA && imem -> root != NULL		422150	0		&&			
ANR	422181	BitAndExpression	free_mask & FREE_ALL_DATA		422150	0		&			
ANR	422182	Identifier	free_mask		422150	0					
ANR	422183	Identifier	FREE_ALL_DATA		422150	1					
ANR	422184	EqualityExpression	imem -> root != NULL		422150	1		!=			
ANR	422185	PtrMemberAccess	imem -> root		422150	0					
ANR	422186	Identifier	imem		422150	0					
ANR	422187	Identifier	root		422150	1					
ANR	422188	Identifier	NULL		422150	1					
ANR	422189	CompoundStatement		8:57:183:183	422150	1					
ANR	422190	ExpressionStatement	"clump_splay_app ( imem -> root , imem , free_all_not_allocator , & fd )"	1030:8:31649:31711	422150	0	True				
ANR	422191	CallExpression	"clump_splay_app ( imem -> root , imem , free_all_not_allocator , & fd )"		422150	0					
ANR	422192	Callee	clump_splay_app		422150	0					
ANR	422193	Identifier	clump_splay_app		422150	0					
ANR	422194	ArgumentList	imem -> root		422150	1					
ANR	422195	Argument	imem -> root		422150	0					
ANR	422196	PtrMemberAccess	imem -> root		422150	0					
ANR	422197	Identifier	imem		422150	0					
ANR	422198	Identifier	root		422150	1					
ANR	422199	Argument	imem		422150	1					
ANR	422200	Identifier	imem		422150	0					
ANR	422201	Argument	free_all_not_allocator		422150	2					
ANR	422202	Identifier	free_all_not_allocator		422150	0					
ANR	422203	Argument	& fd		422150	3					
ANR	422204	UnaryOperationExpression	& fd		422150	0					
ANR	422205	UnaryOperator	&		422150	0					
ANR	422206	Identifier	fd		422150	1					
ANR	422207	ExpressionStatement	imem -> root = fd . allocator	1033:8:31778:31803	422150	1	True				
ANR	422208	AssignmentExpression	imem -> root = fd . allocator		422150	0		=			
ANR	422209	PtrMemberAccess	imem -> root		422150	0					
ANR	422210	Identifier	imem		422150	0					
ANR	422211	Identifier	root		422150	1					
ANR	422212	MemberAccess	fd . allocator		422150	1					
ANR	422213	Identifier	fd		422150	0					
ANR	422214	Identifier	allocator		422150	1					
ANR	422215	IfStatement	if ( fd . allocator )		422150	2					
ANR	422216	Condition	fd . allocator	1034:12:31817:31828	422150	0	True				
ANR	422217	MemberAccess	fd . allocator		422150	0					
ANR	422218	Identifier	fd		422150	0					
ANR	422219	Identifier	allocator		422150	1					
ANR	422220	ExpressionStatement	fd . allocator -> parent = fd . allocator -> left = fd . allocator -> right = NULL	1035:12:31843:31913	422150	1	True				
ANR	422221	AssignmentExpression	fd . allocator -> parent = fd . allocator -> left = fd . allocator -> right = NULL		422150	0		=			
ANR	422222	PtrMemberAccess	fd . allocator -> parent		422150	0					
ANR	422223	MemberAccess	fd . allocator		422150	0					
ANR	422224	Identifier	fd		422150	0					
ANR	422225	Identifier	allocator		422150	1					
ANR	422226	Identifier	parent		422150	1					
ANR	422227	AssignmentExpression	fd . allocator -> left = fd . allocator -> right = NULL		422150	1		=			
ANR	422228	PtrMemberAccess	fd . allocator -> left		422150	0					
ANR	422229	MemberAccess	fd . allocator		422150	0					
ANR	422230	Identifier	fd		422150	0					
ANR	422231	Identifier	allocator		422150	1					
ANR	422232	Identifier	left		422150	1					
ANR	422233	AssignmentExpression	fd . allocator -> right = NULL		422150	1		=			
ANR	422234	PtrMemberAccess	fd . allocator -> right		422150	0					
ANR	422235	MemberAccess	fd . allocator		422150	0					
ANR	422236	Identifier	fd		422150	0					
ANR	422237	Identifier	allocator		422150	1					
ANR	422238	Identifier	right		422150	1					
ANR	422239	Identifier	NULL		422150	1					
ANR	422240	IfStatement	if ( free_mask & FREE_ALL_ALLOCATOR )		422150	5					
ANR	422241	Condition	free_mask & FREE_ALL_ALLOCATOR	1037:8:31929:31958	422150	0	True				
ANR	422242	BitAndExpression	free_mask & FREE_ALL_ALLOCATOR		422150	0		&			
ANR	422243	Identifier	free_mask		422150	0					
ANR	422244	Identifier	FREE_ALL_ALLOCATOR		422150	1					
ANR	422245	CompoundStatement		17:40:557:557	422150	1					
ANR	422246	ExpressionStatement	"clump_splay_app ( imem -> root , imem , free_all_allocator , & fd )"	1039:8:32022:32080	422150	0	True				
ANR	422247	CallExpression	"clump_splay_app ( imem -> root , imem , free_all_allocator , & fd )"		422150	0					
ANR	422248	Callee	clump_splay_app		422150	0					
ANR	422249	Identifier	clump_splay_app		422150	0					
ANR	422250	ArgumentList	imem -> root		422150	1					
ANR	422251	Argument	imem -> root		422150	0					
ANR	422252	PtrMemberAccess	imem -> root		422150	0					
ANR	422253	Identifier	imem		422150	0					
ANR	422254	Identifier	root		422150	1					
ANR	422255	Argument	imem		422150	1					
ANR	422256	Identifier	imem		422150	0					
ANR	422257	Argument	free_all_allocator		422150	2					
ANR	422258	Identifier	free_all_allocator		422150	0					
ANR	422259	Argument	& fd		422150	3					
ANR	422260	UnaryOperationExpression	& fd		422150	0					
ANR	422261	UnaryOperator	&		422150	0					
ANR	422262	Identifier	fd		422150	1					
ANR	422263	ReturnType	static void		422150	1					
ANR	422264	Identifier	i_free_all		422150	2					
ANR	422265	ParameterList	"gs_memory_t * mem , uint free_mask , client_name_t cname"		422150	3					
ANR	422266	Parameter	gs_memory_t * mem	1020:11:31347:31363	422150	0	True				
ANR	422267	ParameterType	gs_memory_t *		422150	0					
ANR	422268	Identifier	mem		422150	1					
ANR	422269	Parameter	uint free_mask	1020:30:31366:31379	422150	1	True				
ANR	422270	ParameterType	uint		422150	0					
ANR	422271	Identifier	free_mask		422150	1					
ANR	422272	Parameter	client_name_t cname	1020:46:31382:31400	422150	2	True				
ANR	422273	ParameterType	client_name_t		422150	0					
ANR	422274	Identifier	cname		422150	1					
ANR	422275	CFGEntryNode	ENTRY		422150		True				
ANR	422276	CFGExitNode	EXIT		422150		True				
ANR	422277	Symbol	free_all_not_allocator		422150						
ANR	422278	Symbol	imem -> root		422150						
ANR	422279	Symbol	fd . allocator -> left		422150						
ANR	422280	Symbol	NULL		422150						
ANR	422281	Symbol	free_all_allocator		422150						
ANR	422282	Symbol	* fd		422150						
ANR	422283	Symbol	cname		422150						
ANR	422284	Symbol	& fd		422150						
ANR	422285	Symbol	fd . allocator -> right		422150						
ANR	422286	Symbol	* fd . allocator		422150						
ANR	422287	Symbol	fd . allocator -> parent		422150						
ANR	422288	Symbol	mem		422150						
ANR	422289	Symbol	fd . imem		422150						
ANR	422290	Symbol	fd . allocator		422150						
ANR	422291	Symbol	free_mask		422150						
ANR	422292	Symbol	FREE_ALL_DATA		422150						
ANR	422293	Symbol	imem		422150						
ANR	422294	Symbol	* imem		422150						
ANR	422295	Symbol	FREE_ALL_ALLOCATOR		422150						
ANR	422296	Symbol	fd		422150						
ANR	422297	Function	i_object_size	1046:0:32191:32338							
ANR	422298	FunctionDef	"i_object_size (gs_memory_t * mem , const void * obj)"		422297	0					
ANR	422299	CompoundStatement		1048:0:32271:32338	422297	0					
ANR	422300	ReturnStatement	return pre_obj_contents_size ( ( const obj_header_t * ) obj - 1 ) ;	1049:4:32277:32336	422297	0	True				
ANR	422301	CallExpression	pre_obj_contents_size ( ( const obj_header_t * ) obj - 1 )		422297	0					
ANR	422302	Callee	pre_obj_contents_size		422297	0					
ANR	422303	Identifier	pre_obj_contents_size		422297	0					
ANR	422304	ArgumentList	( const obj_header_t * ) obj - 1		422297	1					
ANR	422305	Argument	( const obj_header_t * ) obj - 1		422297	0					
ANR	422306	AdditiveExpression	( const obj_header_t * ) obj - 1		422297	0		-			
ANR	422307	CastExpression	( const obj_header_t * ) obj		422297	0					
ANR	422308	CastTarget	const obj_header_t *		422297	0					
ANR	422309	Identifier	obj		422297	1					
ANR	422310	PrimaryExpression	1		422297	1					
ANR	422311	ReturnType	static uint		422297	1					
ANR	422312	Identifier	i_object_size		422297	2					
ANR	422313	ParameterList	"gs_memory_t * mem , const void * obj"		422297	3					
ANR	422314	Parameter	gs_memory_t * mem	1047:14:32217:32233	422297	0	True				
ANR	422315	ParameterType	gs_memory_t *		422297	0					
ANR	422316	Identifier	mem		422297	1					
ANR	422317	Parameter	const void * obj	1047:33:32236:32268	422297	1	True				
ANR	422318	ParameterType	const void *		422297	0					
ANR	422319	Identifier	obj		422297	1					
ANR	422320	CFGEntryNode	ENTRY		422297		True				
ANR	422321	CFGExitNode	EXIT		422297		True				
ANR	422322	Symbol	mem		422297						
ANR	422323	Symbol	obj		422297						
ANR	422324	Symbol	pre_obj_contents_size		422297						
ANR	422325	Function	i_object_type	1053:0:32392:32548							
ANR	422326	FunctionDef	"i_object_type (const gs_memory_t * mem , const void * obj)"		422325	0					
ANR	422327	CompoundStatement		1055:0:32494:32548	422325	0					
ANR	422328	ReturnStatement	return ( ( const obj_header_t * ) obj - 1 ) -> o_type ;	1056:4:32500:32546	422325	0	True				
ANR	422329	PtrMemberAccess	( ( const obj_header_t * ) obj - 1 ) -> o_type		422325	0					
ANR	422330	AdditiveExpression	( const obj_header_t * ) obj - 1		422325	0		-			
ANR	422331	CastExpression	( const obj_header_t * ) obj		422325	0					
ANR	422332	CastTarget	const obj_header_t *		422325	0					
ANR	422333	Identifier	obj		422325	1					
ANR	422334	PrimaryExpression	1		422325	1					
ANR	422335	Identifier	o_type		422325	1					
ANR	422336	ReturnType	static gs_memory_type_ptr_t		422325	1					
ANR	422337	Identifier	i_object_type		422325	2					
ANR	422338	ParameterList	"const gs_memory_t * mem , const void * obj"		422325	3					
ANR	422339	Parameter	const gs_memory_t * mem	1054:14:32434:32456	422325	0	True				
ANR	422340	ParameterType	const gs_memory_t *		422325	0					
ANR	422341	Identifier	mem		422325	1					
ANR	422342	Parameter	const void * obj	1054:39:32459:32491	422325	1	True				
ANR	422343	ParameterType	const void *		422325	0					
ANR	422344	Identifier	obj		422325	1					
ANR	422345	CFGEntryNode	ENTRY		422325		True				
ANR	422346	CFGExitNode	EXIT		422325		True				
ANR	422347	Symbol	* obj		422325						
ANR	422348	Symbol	mem		422325						
ANR	422349	Symbol	obj		422325						
ANR	422350	Symbol	( ( const obj_header_t * ) obj - 1 ) -> o_type		422325						
ANR	422351	Function	gs_memory_gc_status	1060:0:32588:32704							
ANR	422352	FunctionDef	"gs_memory_gc_status (const gs_ref_memory_t * mem , gs_memory_gc_status_t * pstat)"		422351	0					
ANR	422353	CompoundStatement		1062:0:32673:32704	422351	0					
ANR	422354	ExpressionStatement	* pstat = mem -> gc_status	1063:4:32679:32702	422351	0	True				
ANR	422355	AssignmentExpression	* pstat = mem -> gc_status		422351	0		=			
ANR	422356	UnaryOperationExpression	* pstat		422351	0					
ANR	422357	UnaryOperator	*		422351	0					
ANR	422358	Identifier	pstat		422351	1					
ANR	422359	PtrMemberAccess	mem -> gc_status		422351	1					
ANR	422360	Identifier	mem		422351	0					
ANR	422361	Identifier	gc_status		422351	1					
ANR	422362	ReturnType	void		422351	1					
ANR	422363	Identifier	gs_memory_gc_status		422351	2					
ANR	422364	ParameterList	"const gs_ref_memory_t * mem , gs_memory_gc_status_t * pstat"		422351	3					
ANR	422365	Parameter	const gs_ref_memory_t * mem	1061:20:32613:32639	422351	0	True				
ANR	422366	ParameterType	const gs_ref_memory_t *		422351	0					
ANR	422367	Identifier	mem		422351	1					
ANR	422368	Parameter	gs_memory_gc_status_t * pstat	1061:49:32642:32670	422351	1	True				
ANR	422369	ParameterType	gs_memory_gc_status_t *		422351	0					
ANR	422370	Identifier	pstat		422351	1					
ANR	422371	CFGEntryNode	ENTRY		422351		True				
ANR	422372	CFGExitNode	EXIT		422351		True				
ANR	422373	Symbol	mem -> gc_status		422351						
ANR	422374	Symbol	mem		422351						
ANR	422375	Symbol	pstat		422351						
ANR	422376	Symbol	* pstat		422351						
ANR	422377	Symbol	* mem		422351						
ANR	422378	Function	gs_memory_set_gc_status	1067:0:32744:32891							
ANR	422379	FunctionDef	"gs_memory_set_gc_status (gs_ref_memory_t * mem , const gs_memory_gc_status_t * pstat)"		422378	0					
ANR	422380	CompoundStatement		1069:0:32833:32891	422378	0					
ANR	422381	ExpressionStatement	mem -> gc_status = * pstat	1070:4:32839:32862	422378	0	True				
ANR	422382	AssignmentExpression	mem -> gc_status = * pstat		422378	0		=			
ANR	422383	PtrMemberAccess	mem -> gc_status		422378	0					
ANR	422384	Identifier	mem		422378	0					
ANR	422385	Identifier	gc_status		422378	1					
ANR	422386	UnaryOperationExpression	* pstat		422378	1					
ANR	422387	UnaryOperator	*		422378	0					
ANR	422388	Identifier	pstat		422378	1					
ANR	422389	ExpressionStatement	ialloc_set_limit ( mem )	1071:4:32868:32889	422378	1	True				
ANR	422390	CallExpression	ialloc_set_limit ( mem )		422378	0					
ANR	422391	Callee	ialloc_set_limit		422378	0					
ANR	422392	Identifier	ialloc_set_limit		422378	0					
ANR	422393	ArgumentList	mem		422378	1					
ANR	422394	Argument	mem		422378	0					
ANR	422395	Identifier	mem		422378	0					
ANR	422396	ReturnType	void		422378	1					
ANR	422397	Identifier	gs_memory_set_gc_status		422378	2					
ANR	422398	ParameterList	"gs_ref_memory_t * mem , const gs_memory_gc_status_t * pstat"		422378	3					
ANR	422399	Parameter	gs_ref_memory_t * mem	1068:24:32773:32793	422378	0	True				
ANR	422400	ParameterType	gs_ref_memory_t *		422378	0					
ANR	422401	Identifier	mem		422378	1					
ANR	422402	Parameter	const gs_memory_gc_status_t * pstat	1068:47:32796:32830	422378	1	True				
ANR	422403	ParameterType	const gs_memory_gc_status_t *		422378	0					
ANR	422404	Identifier	pstat		422378	1					
ANR	422405	CFGEntryNode	ENTRY		422378		True				
ANR	422406	CFGExitNode	EXIT		422378		True				
ANR	422407	Symbol	mem -> gc_status		422378						
ANR	422408	Symbol	mem		422378						
ANR	422409	Symbol	pstat		422378						
ANR	422410	Symbol	* mem		422378						
ANR	422411	Symbol	* pstat		422378						
ANR	422412	Function	gs_memory_set_vm_threshold	1075:0:32918:33308							
ANR	422413	FunctionDef	"gs_memory_set_vm_threshold (gs_ref_memory_t * mem , long val)"		422412	0					
ANR	422414	CompoundStatement		1077:0:32983:33308	422412	0					
ANR	422415	IdentifierDeclStatement	gs_memory_gc_status_t stat ;	1078:4:32989:33015	422412	0	True				
ANR	422416	IdentifierDecl	stat		422412	0					
ANR	422417	IdentifierDeclType	gs_memory_gc_status_t		422412	0					
ANR	422418	Identifier	stat		422412	1					
ANR	422419	IdentifierDeclStatement	gs_ref_memory_t * stable = ( gs_ref_memory_t * ) mem -> stable_memory ;	1079:4:33021:33085	422412	1	True				
ANR	422420	IdentifierDecl	* stable = ( gs_ref_memory_t * ) mem -> stable_memory		422412	0					
ANR	422421	IdentifierDeclType	gs_ref_memory_t *		422412	0					
ANR	422422	Identifier	stable		422412	1					
ANR	422423	AssignmentExpression	* stable = ( gs_ref_memory_t * ) mem -> stable_memory		422412	2		=			
ANR	422424	Identifier	stable		422412	0					
ANR	422425	CastExpression	( gs_ref_memory_t * ) mem -> stable_memory		422412	1					
ANR	422426	CastTarget	gs_ref_memory_t *		422412	0					
ANR	422427	PtrMemberAccess	mem -> stable_memory		422412	1					
ANR	422428	Identifier	mem		422412	0					
ANR	422429	Identifier	stable_memory		422412	1					
ANR	422430	ExpressionStatement	"gs_memory_gc_status ( mem , & stat )"	1081:4:33092:33123	422412	2	True				
ANR	422431	CallExpression	"gs_memory_gc_status ( mem , & stat )"		422412	0					
ANR	422432	Callee	gs_memory_gc_status		422412	0					
ANR	422433	Identifier	gs_memory_gc_status		422412	0					
ANR	422434	ArgumentList	mem		422412	1					
ANR	422435	Argument	mem		422412	0					
ANR	422436	Identifier	mem		422412	0					
ANR	422437	Argument	& stat		422412	1					
ANR	422438	UnaryOperationExpression	& stat		422412	0					
ANR	422439	UnaryOperator	&		422412	0					
ANR	422440	Identifier	stat		422412	1					
ANR	422441	ExpressionStatement	stat . vm_threshold = val	1082:4:33129:33152	422412	3	True				
ANR	422442	AssignmentExpression	stat . vm_threshold = val		422412	0		=			
ANR	422443	MemberAccess	stat . vm_threshold		422412	0					
ANR	422444	Identifier	stat		422412	0					
ANR	422445	Identifier	vm_threshold		422412	1					
ANR	422446	Identifier	val		422412	1					
ANR	422447	ExpressionStatement	"gs_memory_set_gc_status ( mem , & stat )"	1083:4:33158:33193	422412	4	True				
ANR	422448	CallExpression	"gs_memory_set_gc_status ( mem , & stat )"		422412	0					
ANR	422449	Callee	gs_memory_set_gc_status		422412	0					
ANR	422450	Identifier	gs_memory_set_gc_status		422412	0					
ANR	422451	ArgumentList	mem		422412	1					
ANR	422452	Argument	mem		422412	0					
ANR	422453	Identifier	mem		422412	0					
ANR	422454	Argument	& stat		422412	1					
ANR	422455	UnaryOperationExpression	& stat		422412	0					
ANR	422456	UnaryOperator	&		422412	0					
ANR	422457	Identifier	stat		422412	1					
ANR	422458	ExpressionStatement	"gs_memory_gc_status ( stable , & stat )"	1084:4:33199:33233	422412	5	True				
ANR	422459	CallExpression	"gs_memory_gc_status ( stable , & stat )"		422412	0					
ANR	422460	Callee	gs_memory_gc_status		422412	0					
ANR	422461	Identifier	gs_memory_gc_status		422412	0					
ANR	422462	ArgumentList	stable		422412	1					
ANR	422463	Argument	stable		422412	0					
ANR	422464	Identifier	stable		422412	0					
ANR	422465	Argument	& stat		422412	1					
ANR	422466	UnaryOperationExpression	& stat		422412	0					
ANR	422467	UnaryOperator	&		422412	0					
ANR	422468	Identifier	stat		422412	1					
ANR	422469	ExpressionStatement	stat . vm_threshold = val	1085:4:33239:33262	422412	6	True				
ANR	422470	AssignmentExpression	stat . vm_threshold = val		422412	0		=			
ANR	422471	MemberAccess	stat . vm_threshold		422412	0					
ANR	422472	Identifier	stat		422412	0					
ANR	422473	Identifier	vm_threshold		422412	1					
ANR	422474	Identifier	val		422412	1					
ANR	422475	ExpressionStatement	"gs_memory_set_gc_status ( stable , & stat )"	1086:4:33268:33306	422412	7	True				
ANR	422476	CallExpression	"gs_memory_set_gc_status ( stable , & stat )"		422412	0					
ANR	422477	Callee	gs_memory_set_gc_status		422412	0					
ANR	422478	Identifier	gs_memory_set_gc_status		422412	0					
ANR	422479	ArgumentList	stable		422412	1					
ANR	422480	Argument	stable		422412	0					
ANR	422481	Identifier	stable		422412	0					
ANR	422482	Argument	& stat		422412	1					
ANR	422483	UnaryOperationExpression	& stat		422412	0					
ANR	422484	UnaryOperator	&		422412	0					
ANR	422485	Identifier	stat		422412	1					
ANR	422486	ReturnType	void		422412	1					
ANR	422487	Identifier	gs_memory_set_vm_threshold		422412	2					
ANR	422488	ParameterList	"gs_ref_memory_t * mem , long val"		422412	3					
ANR	422489	Parameter	gs_ref_memory_t * mem	1076:27:32950:32970	422412	0	True				
ANR	422490	ParameterType	gs_ref_memory_t *		422412	0					
ANR	422491	Identifier	mem		422412	1					
ANR	422492	Parameter	long val	1076:50:32973:32980	422412	1	True				
ANR	422493	ParameterType	long		422412	0					
ANR	422494	Identifier	val		422412	1					
ANR	422495	CFGEntryNode	ENTRY		422412		True				
ANR	422496	CFGExitNode	EXIT		422412		True				
ANR	422497	Symbol	val		422412						
ANR	422498	Symbol	stat		422412						
ANR	422499	Symbol	mem -> stable_memory		422412						
ANR	422500	Symbol	mem		422412						
ANR	422501	Symbol	stable		422412						
ANR	422502	Symbol	stat . vm_threshold		422412						
ANR	422503	Symbol	* mem		422412						
ANR	422504	Symbol	& stat		422412						
ANR	422505	Function	gs_memory_set_vm_reclaim	1090:0:33333:33723							
ANR	422506	FunctionDef	"gs_memory_set_vm_reclaim (gs_ref_memory_t * mem , bool enabled)"		422505	0					
ANR	422507	CompoundStatement		1092:0:33400:33723	422505	0					
ANR	422508	IdentifierDeclStatement	gs_memory_gc_status_t stat ;	1093:4:33406:33432	422505	0	True				
ANR	422509	IdentifierDecl	stat		422505	0					
ANR	422510	IdentifierDeclType	gs_memory_gc_status_t		422505	0					
ANR	422511	Identifier	stat		422505	1					
ANR	422512	IdentifierDeclStatement	gs_ref_memory_t * stable = ( gs_ref_memory_t * ) mem -> stable_memory ;	1094:4:33438:33502	422505	1	True				
ANR	422513	IdentifierDecl	* stable = ( gs_ref_memory_t * ) mem -> stable_memory		422505	0					
ANR	422514	IdentifierDeclType	gs_ref_memory_t *		422505	0					
ANR	422515	Identifier	stable		422505	1					
ANR	422516	AssignmentExpression	* stable = ( gs_ref_memory_t * ) mem -> stable_memory		422505	2		=			
ANR	422517	Identifier	stable		422505	0					
ANR	422518	CastExpression	( gs_ref_memory_t * ) mem -> stable_memory		422505	1					
ANR	422519	CastTarget	gs_ref_memory_t *		422505	0					
ANR	422520	PtrMemberAccess	mem -> stable_memory		422505	1					
ANR	422521	Identifier	mem		422505	0					
ANR	422522	Identifier	stable_memory		422505	1					
ANR	422523	ExpressionStatement	"gs_memory_gc_status ( mem , & stat )"	1096:4:33509:33540	422505	2	True				
ANR	422524	CallExpression	"gs_memory_gc_status ( mem , & stat )"		422505	0					
ANR	422525	Callee	gs_memory_gc_status		422505	0					
ANR	422526	Identifier	gs_memory_gc_status		422505	0					
ANR	422527	ArgumentList	mem		422505	1					
ANR	422528	Argument	mem		422505	0					
ANR	422529	Identifier	mem		422505	0					
ANR	422530	Argument	& stat		422505	1					
ANR	422531	UnaryOperationExpression	& stat		422505	0					
ANR	422532	UnaryOperator	&		422505	0					
ANR	422533	Identifier	stat		422505	1					
ANR	422534	ExpressionStatement	stat . enabled = enabled	1097:4:33546:33568	422505	3	True				
ANR	422535	AssignmentExpression	stat . enabled = enabled		422505	0		=			
ANR	422536	MemberAccess	stat . enabled		422505	0					
ANR	422537	Identifier	stat		422505	0					
ANR	422538	Identifier	enabled		422505	1					
ANR	422539	Identifier	enabled		422505	1					
ANR	422540	ExpressionStatement	"gs_memory_set_gc_status ( mem , & stat )"	1098:4:33574:33609	422505	4	True				
ANR	422541	CallExpression	"gs_memory_set_gc_status ( mem , & stat )"		422505	0					
ANR	422542	Callee	gs_memory_set_gc_status		422505	0					
ANR	422543	Identifier	gs_memory_set_gc_status		422505	0					
ANR	422544	ArgumentList	mem		422505	1					
ANR	422545	Argument	mem		422505	0					
ANR	422546	Identifier	mem		422505	0					
ANR	422547	Argument	& stat		422505	1					
ANR	422548	UnaryOperationExpression	& stat		422505	0					
ANR	422549	UnaryOperator	&		422505	0					
ANR	422550	Identifier	stat		422505	1					
ANR	422551	ExpressionStatement	"gs_memory_gc_status ( stable , & stat )"	1099:4:33615:33649	422505	5	True				
ANR	422552	CallExpression	"gs_memory_gc_status ( stable , & stat )"		422505	0					
ANR	422553	Callee	gs_memory_gc_status		422505	0					
ANR	422554	Identifier	gs_memory_gc_status		422505	0					
ANR	422555	ArgumentList	stable		422505	1					
ANR	422556	Argument	stable		422505	0					
ANR	422557	Identifier	stable		422505	0					
ANR	422558	Argument	& stat		422505	1					
ANR	422559	UnaryOperationExpression	& stat		422505	0					
ANR	422560	UnaryOperator	&		422505	0					
ANR	422561	Identifier	stat		422505	1					
ANR	422562	ExpressionStatement	stat . enabled = enabled	1100:4:33655:33677	422505	6	True				
ANR	422563	AssignmentExpression	stat . enabled = enabled		422505	0		=			
ANR	422564	MemberAccess	stat . enabled		422505	0					
ANR	422565	Identifier	stat		422505	0					
ANR	422566	Identifier	enabled		422505	1					
ANR	422567	Identifier	enabled		422505	1					
ANR	422568	ExpressionStatement	"gs_memory_set_gc_status ( stable , & stat )"	1101:4:33683:33721	422505	7	True				
ANR	422569	CallExpression	"gs_memory_set_gc_status ( stable , & stat )"		422505	0					
ANR	422570	Callee	gs_memory_set_gc_status		422505	0					
ANR	422571	Identifier	gs_memory_set_gc_status		422505	0					
ANR	422572	ArgumentList	stable		422505	1					
ANR	422573	Argument	stable		422505	0					
ANR	422574	Identifier	stable		422505	0					
ANR	422575	Argument	& stat		422505	1					
ANR	422576	UnaryOperationExpression	& stat		422505	0					
ANR	422577	UnaryOperator	&		422505	0					
ANR	422578	Identifier	stat		422505	1					
ANR	422579	ReturnType	void		422505	1					
ANR	422580	Identifier	gs_memory_set_vm_reclaim		422505	2					
ANR	422581	ParameterList	"gs_ref_memory_t * mem , bool enabled"		422505	3					
ANR	422582	Parameter	gs_ref_memory_t * mem	1091:25:33363:33383	422505	0	True				
ANR	422583	ParameterType	gs_ref_memory_t *		422505	0					
ANR	422584	Identifier	mem		422505	1					
ANR	422585	Parameter	bool enabled	1091:48:33386:33397	422505	1	True				
ANR	422586	ParameterType	bool		422505	0					
ANR	422587	Identifier	enabled		422505	1					
ANR	422588	CFGEntryNode	ENTRY		422505		True				
ANR	422589	CFGExitNode	EXIT		422505		True				
ANR	422590	Symbol	stat		422505						
ANR	422591	Symbol	mem -> stable_memory		422505						
ANR	422592	Symbol	stat . enabled		422505						
ANR	422593	Symbol	mem		422505						
ANR	422594	Symbol	stable		422505						
ANR	422595	Symbol	enabled		422505						
ANR	422596	Symbol	* mem		422505						
ANR	422597	Symbol	& stat		422505						
ANR	422598	Function	i_alloc_bytes	1152:0:35847:36747							
ANR	422599	FunctionDef	"i_alloc_bytes (gs_memory_t * mem , uint size , client_name_t cname)"		422598	0					
ANR	422600	CompoundStatement		1154:0:35926:36747	422598	0					
ANR	422601	Statement	gs_ref_memory_t	1155:4:35932:35946	422598	0	True				
ANR	422602	Statement	*	1155:20:35948:35948	422598	1	True				
ANR	422603	Statement	const	1155:22:35950:35954	422598	2	True				
ANR	422604	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1155:28:35956:35985	422598	3	True				
ANR	422605	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		422598	0		=			
ANR	422606	Identifier	imem		422598	0					
ANR	422607	CastExpression	( gs_ref_memory_t * ) mem		422598	1					
ANR	422608	CastTarget	gs_ref_memory_t *		422598	0					
ANR	422609	Identifier	mem		422598	1					
ANR	422610	IdentifierDeclStatement	obj_header_t * obj ;	1156:4:35991:36008	422598	4	True				
ANR	422611	IdentifierDecl	* obj		422598	0					
ANR	422612	IdentifierDeclType	obj_header_t *		422598	0					
ANR	422613	Identifier	obj		422598	1					
ANR	422614	IdentifierDeclStatement	obj_header_t * * pfl ;	1157:4:36014:36032	422598	5	True				
ANR	422615	IdentifierDecl	* * pfl		422598	0					
ANR	422616	IdentifierDeclType	obj_header_t * *		422598	0					
ANR	422617	Identifier	pfl		422598	1					
ANR	422618	IfStatement	if ( Memento_failThisEvent ( ) )		422598	6					
ANR	422619	Condition	Memento_failThisEvent ( )	1160:8:36058:36080	422598	0	True				
ANR	422620	CallExpression	Memento_failThisEvent ( )		422598	0					
ANR	422621	Callee	Memento_failThisEvent		422598	0					
ANR	422622	Identifier	Memento_failThisEvent		422598	0					
ANR	422623	ArgumentList			422598	1					
ANR	422624	ReturnStatement	return NULL ;	1161:8:36091:36102	422598	1	True				
ANR	422625	Identifier	NULL		422598	0					
ANR	422626	Statement	IF_FREELIST_ALLOC	1164:4:36116:36132	422598	7	True				
ANR	422627	Statement	(	1164:21:36133:36133	422598	8	True				
ANR	422628	Statement	obj	1164:22:36134:36136	422598	9	True				
ANR	422629	Statement	","	1164:25:36137:36137	422598	10	True				
ANR	422630	Statement	imem	1164:27:36139:36142	422598	11	True				
ANR	422631	Statement	","	1164:31:36143:36143	422598	12	True				
ANR	422632	Statement	size	1164:33:36145:36148	422598	13	True				
ANR	422633	Statement	","	1164:37:36149:36149	422598	14	True				
ANR	422634	Statement	&	1164:39:36151:36151	422598	15	True				
ANR	422635	Statement	st_bytes	1164:40:36152:36159	422598	16	True				
ANR	422636	Statement	","	1164:48:36160:36160	422598	17	True				
ANR	422637	Statement	pfl	1164:50:36162:36164	422598	18	True				
ANR	422638	Statement	)	1164:53:36165:36165	422598	19	True				
ANR	422639	ExpressionStatement	"alloc_trace ( "":+bf"" , imem , cname , NULL , size , obj )"	1165:8:36175:36224	422598	20	True				
ANR	422640	CallExpression	"alloc_trace ( "":+bf"" , imem , cname , NULL , size , obj )"		422598	0					
ANR	422641	Callee	alloc_trace		422598	0					
ANR	422642	Identifier	alloc_trace		422598	0					
ANR	422643	ArgumentList	""":+bf"""		422598	1					
ANR	422644	Argument	""":+bf"""		422598	0					
ANR	422645	PrimaryExpression	""":+bf"""		422598	0					
ANR	422646	Argument	imem		422598	1					
ANR	422647	Identifier	imem		422598	0					
ANR	422648	Argument	cname		422598	2					
ANR	422649	Identifier	cname		422598	0					
ANR	422650	Argument	NULL		422598	3					
ANR	422651	Identifier	NULL		422598	0					
ANR	422652	Argument	size		422598	4					
ANR	422653	Identifier	size		422598	0					
ANR	422654	Argument	obj		422598	5					
ANR	422655	Identifier	obj		422598	0					
ANR	422656	Statement	ELSEIF_BIG_FREELIST_ALLOC	1166:4:36230:36254	422598	21	True				
ANR	422657	Statement	(	1166:29:36255:36255	422598	22	True				
ANR	422658	Statement	obj	1166:30:36256:36258	422598	23	True				
ANR	422659	Statement	","	1166:33:36259:36259	422598	24	True				
ANR	422660	Statement	imem	1166:35:36261:36264	422598	25	True				
ANR	422661	Statement	","	1166:39:36265:36265	422598	26	True				
ANR	422662	Statement	size	1166:41:36267:36270	422598	27	True				
ANR	422663	Statement	","	1166:45:36271:36271	422598	28	True				
ANR	422664	Statement	&	1166:47:36273:36273	422598	29	True				
ANR	422665	Statement	st_bytes	1166:48:36274:36281	422598	30	True				
ANR	422666	Statement	)	1166:56:36282:36282	422598	31	True				
ANR	422667	ExpressionStatement	"alloc_trace ( "":+bF"" , imem , cname , NULL , size , obj )"	1167:8:36292:36341	422598	32	True				
ANR	422668	CallExpression	"alloc_trace ( "":+bF"" , imem , cname , NULL , size , obj )"		422598	0					
ANR	422669	Callee	alloc_trace		422598	0					
ANR	422670	Identifier	alloc_trace		422598	0					
ANR	422671	ArgumentList	""":+bF"""		422598	1					
ANR	422672	Argument	""":+bF"""		422598	0					
ANR	422673	PrimaryExpression	""":+bF"""		422598	0					
ANR	422674	Argument	imem		422598	1					
ANR	422675	Identifier	imem		422598	0					
ANR	422676	Argument	cname		422598	2					
ANR	422677	Identifier	cname		422598	0					
ANR	422678	Argument	NULL		422598	3					
ANR	422679	Identifier	NULL		422598	0					
ANR	422680	Argument	size		422598	4					
ANR	422681	Identifier	size		422598	0					
ANR	422682	Argument	obj		422598	5					
ANR	422683	Identifier	obj		422598	0					
ANR	422684	Statement	ELSEIF_LIFO_ALLOC	1168:4:36347:36363	422598	33	True				
ANR	422685	Statement	(	1168:21:36364:36364	422598	34	True				
ANR	422686	Statement	obj	1168:22:36365:36367	422598	35	True				
ANR	422687	Statement	","	1168:25:36368:36368	422598	36	True				
ANR	422688	Statement	imem	1168:27:36370:36373	422598	37	True				
ANR	422689	Statement	","	1168:31:36374:36374	422598	38	True				
ANR	422690	Statement	size	1168:33:36376:36379	422598	39	True				
ANR	422691	Statement	","	1168:37:36380:36380	422598	40	True				
ANR	422692	Statement	&	1168:39:36382:36382	422598	41	True				
ANR	422693	Statement	st_bytes	1168:40:36383:36390	422598	42	True				
ANR	422694	Statement	)	1168:48:36391:36391	422598	43	True				
ANR	422695	ExpressionStatement	"alloc_trace ( "":+b "" , imem , cname , NULL , size , obj )"	1169:8:36401:36450	422598	44	True				
ANR	422696	CallExpression	"alloc_trace ( "":+b "" , imem , cname , NULL , size , obj )"		422598	0					
ANR	422697	Callee	alloc_trace		422598	0					
ANR	422698	Identifier	alloc_trace		422598	0					
ANR	422699	ArgumentList	""":+b """		422598	1					
ANR	422700	Argument	""":+b """		422598	0					
ANR	422701	PrimaryExpression	""":+b """		422598	0					
ANR	422702	Argument	imem		422598	1					
ANR	422703	Identifier	imem		422598	0					
ANR	422704	Argument	cname		422598	2					
ANR	422705	Identifier	cname		422598	0					
ANR	422706	Argument	NULL		422598	3					
ANR	422707	Identifier	NULL		422598	0					
ANR	422708	Argument	size		422598	4					
ANR	422709	Identifier	size		422598	0					
ANR	422710	Argument	obj		422598	5					
ANR	422711	Identifier	obj		422598	0					
ANR	422712	Statement	ELSE_ALLOC	1170:4:36456:36465	422598	45	True				
ANR	422713	CompoundStatement		18:4:544:544	422598	46					
ANR	422714	ExpressionStatement	"obj = alloc_obj ( imem , size , & st_bytes , 0 , cname )"	1172:8:36481:36529	422598	0	True				
ANR	422715	AssignmentExpression	"obj = alloc_obj ( imem , size , & st_bytes , 0 , cname )"		422598	0		=			
ANR	422716	Identifier	obj		422598	0					
ANR	422717	CallExpression	"alloc_obj ( imem , size , & st_bytes , 0 , cname )"		422598	1					
ANR	422718	Callee	alloc_obj		422598	0					
ANR	422719	Identifier	alloc_obj		422598	0					
ANR	422720	ArgumentList	imem		422598	1					
ANR	422721	Argument	imem		422598	0					
ANR	422722	Identifier	imem		422598	0					
ANR	422723	Argument	size		422598	1					
ANR	422724	Identifier	size		422598	0					
ANR	422725	Argument	& st_bytes		422598	2					
ANR	422726	UnaryOperationExpression	& st_bytes		422598	0					
ANR	422727	UnaryOperator	&		422598	0					
ANR	422728	Identifier	st_bytes		422598	1					
ANR	422729	Argument	0		422598	3					
ANR	422730	PrimaryExpression	0		422598	0					
ANR	422731	Argument	cname		422598	4					
ANR	422732	Identifier	cname		422598	0					
ANR	422733	IfStatement	if ( obj == 0 )		422598	1					
ANR	422734	Condition	obj == 0	1173:12:36543:36550	422598	0	True				
ANR	422735	EqualityExpression	obj == 0		422598	0		==			
ANR	422736	Identifier	obj		422598	0					
ANR	422737	PrimaryExpression	0		422598	1					
ANR	422738	ReturnStatement	return 0 ;	1174:12:36565:36573	422598	1	True				
ANR	422739	PrimaryExpression	0		422598	0					
ANR	422740	ExpressionStatement	"alloc_trace ( "":+b."" , imem , cname , NULL , size , obj )"	1175:8:36583:36632	422598	2	True				
ANR	422741	CallExpression	"alloc_trace ( "":+b."" , imem , cname , NULL , size , obj )"		422598	0					
ANR	422742	Callee	alloc_trace		422598	0					
ANR	422743	Identifier	alloc_trace		422598	0					
ANR	422744	ArgumentList	""":+b."""		422598	1					
ANR	422745	Argument	""":+b."""		422598	0					
ANR	422746	PrimaryExpression	""":+b."""		422598	0					
ANR	422747	Argument	imem		422598	1					
ANR	422748	Identifier	imem		422598	0					
ANR	422749	Argument	cname		422598	2					
ANR	422750	Identifier	cname		422598	0					
ANR	422751	Argument	NULL		422598	3					
ANR	422752	Identifier	NULL		422598	0					
ANR	422753	Argument	size		422598	4					
ANR	422754	Identifier	size		422598	0					
ANR	422755	Argument	obj		422598	5					
ANR	422756	Identifier	obj		422598	0					
ANR	422757	ExpressionStatement	obj [ - 1 ] . d . o . space_id = imem -> space_id	1178:8:36676:36713	422598	47	True				
ANR	422758	AssignmentExpression	obj [ - 1 ] . d . o . space_id = imem -> space_id		422598	0		=			
ANR	422759	MemberAccess	obj [ - 1 ] . d . o . space_id		422598	0					
ANR	422760	MemberAccess	obj [ - 1 ] . d . o		422598	0					
ANR	422761	MemberAccess	obj [ - 1 ] . d		422598	0					
ANR	422762	ArrayIndexing	obj [ - 1 ]		422598	0					
ANR	422763	Identifier	obj		422598	0					
ANR	422764	UnaryOperationExpression	- 1		422598	1					
ANR	422765	UnaryOperator	-		422598	0					
ANR	422766	PrimaryExpression	1		422598	1					
ANR	422767	Identifier	d		422598	1					
ANR	422768	Identifier	o		422598	1					
ANR	422769	Identifier	space_id		422598	1					
ANR	422770	PtrMemberAccess	imem -> space_id		422598	1					
ANR	422771	Identifier	imem		422598	0					
ANR	422772	Identifier	space_id		422598	1					
ANR	422773	ReturnStatement	return ( byte * ) obj ;	1180:4:36726:36745	422598	48	True				
ANR	422774	CastExpression	( byte * ) obj		422598	0					
ANR	422775	CastTarget	byte *		422598	0					
ANR	422776	Identifier	obj		422598	1					
ANR	422777	ReturnType	static byte *		422598	1					
ANR	422778	Identifier	i_alloc_bytes		422598	2					
ANR	422779	ParameterList	"gs_memory_t * mem , uint size , client_name_t cname"		422598	3					
ANR	422780	Parameter	gs_memory_t * mem	1153:14:35875:35891	422598	0	True				
ANR	422781	ParameterType	gs_memory_t *		422598	0					
ANR	422782	Identifier	mem		422598	1					
ANR	422783	Parameter	uint size	1153:33:35894:35902	422598	1	True				
ANR	422784	ParameterType	uint		422598	0					
ANR	422785	Identifier	size		422598	1					
ANR	422786	Parameter	client_name_t cname	1153:44:35905:35923	422598	2	True				
ANR	422787	ParameterType	client_name_t		422598	0					
ANR	422788	Identifier	cname		422598	1					
ANR	422789	CFGEntryNode	ENTRY		422598		True				
ANR	422790	CFGExitNode	EXIT		422598		True				
ANR	422791	Symbol	* obj		422598						
ANR	422792	Symbol	NULL		422598						
ANR	422793	Symbol	obj [ - 1 ] . d . o		422598						
ANR	422794	Symbol	cname		422598						
ANR	422795	Symbol	& st_bytes		422598						
ANR	422796	Symbol	mem		422598						
ANR	422797	Symbol	size		422598						
ANR	422798	Symbol	obj		422598						
ANR	422799	Symbol	pfl		422598						
ANR	422800	Symbol	alloc_obj		422598						
ANR	422801	Symbol	obj [ - 1 ] . d . o . space_id		422598						
ANR	422802	Symbol	imem -> space_id		422598						
ANR	422803	Symbol	imem		422598						
ANR	422804	Symbol	* imem		422598						
ANR	422805	Symbol	Memento_failThisEvent		422598						
ANR	422806	Symbol	obj [ - 1 ] . d		422598						
ANR	422807	Function	i_alloc_bytes_immovable	1182:0:36749:37219							
ANR	422808	FunctionDef	"i_alloc_bytes_immovable (gs_memory_t * mem , uint size , client_name_t cname)"		422807	0					
ANR	422809	CompoundStatement		1184:0:36838:37219	422807	0					
ANR	422810	Statement	gs_ref_memory_t	1185:4:36844:36858	422807	0	True				
ANR	422811	Statement	*	1185:20:36860:36860	422807	1	True				
ANR	422812	Statement	const	1185:22:36862:36866	422807	2	True				
ANR	422813	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1185:28:36868:36897	422807	3	True				
ANR	422814	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		422807	0		=			
ANR	422815	Identifier	imem		422807	0					
ANR	422816	CastExpression	( gs_ref_memory_t * ) mem		422807	1					
ANR	422817	CastTarget	gs_ref_memory_t *		422807	0					
ANR	422818	Identifier	mem		422807	1					
ANR	422819	IdentifierDeclStatement	obj_header_t * obj ;	1186:4:36903:36920	422807	4	True				
ANR	422820	IdentifierDecl	* obj		422807	0					
ANR	422821	IdentifierDeclType	obj_header_t *		422807	0					
ANR	422822	Identifier	obj		422807	1					
ANR	422823	IfStatement	if ( Memento_failThisEvent ( ) )		422807	5					
ANR	422824	Condition	Memento_failThisEvent ( )	1189:8:36946:36968	422807	0	True				
ANR	422825	CallExpression	Memento_failThisEvent ( )		422807	0					
ANR	422826	Callee	Memento_failThisEvent		422807	0					
ANR	422827	Identifier	Memento_failThisEvent		422807	0					
ANR	422828	ArgumentList			422807	1					
ANR	422829	ReturnStatement	return NULL ;	1190:8:36979:36990	422807	1	True				
ANR	422830	Identifier	NULL		422807	0					
ANR	422831	ExpressionStatement	"obj = alloc_obj ( imem , size , & st_bytes , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"	1193:4:37004:37101	422807	6	True				
ANR	422832	AssignmentExpression	"obj = alloc_obj ( imem , size , & st_bytes , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		422807	0		=			
ANR	422833	Identifier	obj		422807	0					
ANR	422834	CallExpression	"alloc_obj ( imem , size , & st_bytes , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		422807	1					
ANR	422835	Callee	alloc_obj		422807	0					
ANR	422836	Identifier	alloc_obj		422807	0					
ANR	422837	ArgumentList	imem		422807	1					
ANR	422838	Argument	imem		422807	0					
ANR	422839	Identifier	imem		422807	0					
ANR	422840	Argument	size		422807	1					
ANR	422841	Identifier	size		422807	0					
ANR	422842	Argument	& st_bytes		422807	2					
ANR	422843	UnaryOperationExpression	& st_bytes		422807	0					
ANR	422844	UnaryOperator	&		422807	0					
ANR	422845	Identifier	st_bytes		422807	1					
ANR	422846	Argument	ALLOC_IMMOVABLE | ALLOC_DIRECT		422807	3					
ANR	422847	InclusiveOrExpression	ALLOC_IMMOVABLE | ALLOC_DIRECT		422807	0		|			
ANR	422848	Identifier	ALLOC_IMMOVABLE		422807	0					
ANR	422849	Identifier	ALLOC_DIRECT		422807	1					
ANR	422850	Argument	cname		422807	4					
ANR	422851	Identifier	cname		422807	0					
ANR	422852	IfStatement	if ( obj == 0 )		422807	7					
ANR	422853	Condition	obj == 0	1195:8:37111:37118	422807	0	True				
ANR	422854	EqualityExpression	obj == 0		422807	0		==			
ANR	422855	Identifier	obj		422807	0					
ANR	422856	PrimaryExpression	0		422807	1					
ANR	422857	ReturnStatement	return 0 ;	1196:8:37129:37137	422807	1	True				
ANR	422858	PrimaryExpression	0		422807	0					
ANR	422859	ExpressionStatement	"alloc_trace ( ""|+b."" , imem , cname , NULL , size , obj )"	1197:4:37143:37192	422807	8	True				
ANR	422860	CallExpression	"alloc_trace ( ""|+b."" , imem , cname , NULL , size , obj )"		422807	0					
ANR	422861	Callee	alloc_trace		422807	0					
ANR	422862	Identifier	alloc_trace		422807	0					
ANR	422863	ArgumentList	"""|+b."""		422807	1					
ANR	422864	Argument	"""|+b."""		422807	0					
ANR	422865	PrimaryExpression	"""|+b."""		422807	0					
ANR	422866	Argument	imem		422807	1					
ANR	422867	Identifier	imem		422807	0					
ANR	422868	Argument	cname		422807	2					
ANR	422869	Identifier	cname		422807	0					
ANR	422870	Argument	NULL		422807	3					
ANR	422871	Identifier	NULL		422807	0					
ANR	422872	Argument	size		422807	4					
ANR	422873	Identifier	size		422807	0					
ANR	422874	Argument	obj		422807	5					
ANR	422875	Identifier	obj		422807	0					
ANR	422876	ReturnStatement	return ( byte * ) obj ;	1198:4:37198:37217	422807	9	True				
ANR	422877	CastExpression	( byte * ) obj		422807	0					
ANR	422878	CastTarget	byte *		422807	0					
ANR	422879	Identifier	obj		422807	1					
ANR	422880	ReturnType	static byte *		422807	1					
ANR	422881	Identifier	i_alloc_bytes_immovable		422807	2					
ANR	422882	ParameterList	"gs_memory_t * mem , uint size , client_name_t cname"		422807	3					
ANR	422883	Parameter	gs_memory_t * mem	1183:24:36787:36803	422807	0	True				
ANR	422884	ParameterType	gs_memory_t *		422807	0					
ANR	422885	Identifier	mem		422807	1					
ANR	422886	Parameter	uint size	1183:43:36806:36814	422807	1	True				
ANR	422887	ParameterType	uint		422807	0					
ANR	422888	Identifier	size		422807	1					
ANR	422889	Parameter	client_name_t cname	1183:54:36817:36835	422807	2	True				
ANR	422890	ParameterType	client_name_t		422807	0					
ANR	422891	Identifier	cname		422807	1					
ANR	422892	CFGEntryNode	ENTRY		422807		True				
ANR	422893	CFGExitNode	EXIT		422807		True				
ANR	422894	Symbol	NULL		422807						
ANR	422895	Symbol	mem		422807						
ANR	422896	Symbol	size		422807						
ANR	422897	Symbol	obj		422807						
ANR	422898	Symbol	cname		422807						
ANR	422899	Symbol	ALLOC_IMMOVABLE		422807						
ANR	422900	Symbol	alloc_obj		422807						
ANR	422901	Symbol	ALLOC_DIRECT		422807						
ANR	422902	Symbol	imem		422807						
ANR	422903	Symbol	Memento_failThisEvent		422807						
ANR	422904	Symbol	& st_bytes		422807						
ANR	422905	Function	i_alloc_struct	1200:0:37221:38207							
ANR	422906	FunctionDef	"i_alloc_struct (gs_memory_t * mem , gs_memory_type_ptr_t pstype , client_name_t cname)"		422905	0					
ANR	422907	CompoundStatement		1203:0:37334:38207	422905	0					
ANR	422908	Statement	gs_ref_memory_t	1204:4:37340:37354	422905	0	True				
ANR	422909	Statement	*	1204:20:37356:37356	422905	1	True				
ANR	422910	Statement	const	1204:22:37358:37362	422905	2	True				
ANR	422911	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1204:28:37364:37393	422905	3	True				
ANR	422912	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		422905	0		=			
ANR	422913	Identifier	imem		422905	0					
ANR	422914	CastExpression	( gs_ref_memory_t * ) mem		422905	1					
ANR	422915	CastTarget	gs_ref_memory_t *		422905	0					
ANR	422916	Identifier	mem		422905	1					
ANR	422917	IdentifierDeclStatement	uint size = pstype -> ssize ;	1205:4:37399:37424	422905	4	True				
ANR	422918	IdentifierDecl	size = pstype -> ssize		422905	0					
ANR	422919	IdentifierDeclType	uint		422905	0					
ANR	422920	Identifier	size		422905	1					
ANR	422921	AssignmentExpression	size = pstype -> ssize		422905	2		=			
ANR	422922	Identifier	size		422905	0					
ANR	422923	PtrMemberAccess	pstype -> ssize		422905	1					
ANR	422924	Identifier	pstype		422905	0					
ANR	422925	Identifier	ssize		422905	1					
ANR	422926	IdentifierDeclStatement	obj_header_t * obj ;	1206:4:37430:37447	422905	5	True				
ANR	422927	IdentifierDecl	* obj		422905	0					
ANR	422928	IdentifierDeclType	obj_header_t *		422905	0					
ANR	422929	Identifier	obj		422905	1					
ANR	422930	IdentifierDeclStatement	obj_header_t * * pfl ;	1207:4:37453:37471	422905	6	True				
ANR	422931	IdentifierDecl	* * pfl		422905	0					
ANR	422932	IdentifierDeclType	obj_header_t * *		422905	0					
ANR	422933	Identifier	pfl		422905	1					
ANR	422934	IfStatement	if ( Memento_failThisEvent ( ) )		422905	7					
ANR	422935	Condition	Memento_failThisEvent ( )	1210:8:37497:37519	422905	0	True				
ANR	422936	CallExpression	Memento_failThisEvent ( )		422905	0					
ANR	422937	Callee	Memento_failThisEvent		422905	0					
ANR	422938	Identifier	Memento_failThisEvent		422905	0					
ANR	422939	ArgumentList			422905	1					
ANR	422940	ReturnStatement	return NULL ;	1211:8:37530:37541	422905	1	True				
ANR	422941	Identifier	NULL		422905	0					
ANR	422942	ExpressionStatement	"ALLOC_CHECK_SIZE ( mem , pstype )"	1214:4:37555:37583	422905	8	True				
ANR	422943	CallExpression	"ALLOC_CHECK_SIZE ( mem , pstype )"		422905	0					
ANR	422944	Callee	ALLOC_CHECK_SIZE		422905	0					
ANR	422945	Identifier	ALLOC_CHECK_SIZE		422905	0					
ANR	422946	ArgumentList	mem		422905	1					
ANR	422947	Argument	mem		422905	0					
ANR	422948	Identifier	mem		422905	0					
ANR	422949	Argument	pstype		422905	1					
ANR	422950	Identifier	pstype		422905	0					
ANR	422951	Statement	IF_FREELIST_ALLOC	1215:4:37589:37605	422905	9	True				
ANR	422952	Statement	(	1215:21:37606:37606	422905	10	True				
ANR	422953	Statement	obj	1215:22:37607:37609	422905	11	True				
ANR	422954	Statement	","	1215:25:37610:37610	422905	12	True				
ANR	422955	Statement	imem	1215:27:37612:37615	422905	13	True				
ANR	422956	Statement	","	1215:31:37616:37616	422905	14	True				
ANR	422957	Statement	size	1215:33:37618:37621	422905	15	True				
ANR	422958	Statement	","	1215:37:37622:37622	422905	16	True				
ANR	422959	Statement	pstype	1215:39:37624:37629	422905	17	True				
ANR	422960	Statement	","	1215:45:37630:37630	422905	18	True				
ANR	422961	Statement	pfl	1215:47:37632:37634	422905	19	True				
ANR	422962	Statement	)	1215:50:37635:37635	422905	20	True				
ANR	422963	ExpressionStatement	"alloc_trace ( "":+<f"" , imem , cname , pstype , size , obj )"	1216:8:37645:37696	422905	21	True				
ANR	422964	CallExpression	"alloc_trace ( "":+<f"" , imem , cname , pstype , size , obj )"		422905	0					
ANR	422965	Callee	alloc_trace		422905	0					
ANR	422966	Identifier	alloc_trace		422905	0					
ANR	422967	ArgumentList	""":+<f"""		422905	1					
ANR	422968	Argument	""":+<f"""		422905	0					
ANR	422969	PrimaryExpression	""":+<f"""		422905	0					
ANR	422970	Argument	imem		422905	1					
ANR	422971	Identifier	imem		422905	0					
ANR	422972	Argument	cname		422905	2					
ANR	422973	Identifier	cname		422905	0					
ANR	422974	Argument	pstype		422905	3					
ANR	422975	Identifier	pstype		422905	0					
ANR	422976	Argument	size		422905	4					
ANR	422977	Identifier	size		422905	0					
ANR	422978	Argument	obj		422905	5					
ANR	422979	Identifier	obj		422905	0					
ANR	422980	Statement	ELSEIF_BIG_FREELIST_ALLOC	1217:4:37702:37726	422905	22	True				
ANR	422981	Statement	(	1217:29:37727:37727	422905	23	True				
ANR	422982	Statement	obj	1217:30:37728:37730	422905	24	True				
ANR	422983	Statement	","	1217:33:37731:37731	422905	25	True				
ANR	422984	Statement	imem	1217:35:37733:37736	422905	26	True				
ANR	422985	Statement	","	1217:39:37737:37737	422905	27	True				
ANR	422986	Statement	size	1217:41:37739:37742	422905	28	True				
ANR	422987	Statement	","	1217:45:37743:37743	422905	29	True				
ANR	422988	Statement	pstype	1217:47:37745:37750	422905	30	True				
ANR	422989	Statement	)	1217:53:37751:37751	422905	31	True				
ANR	422990	ExpressionStatement	"alloc_trace ( "":+<F"" , imem , cname , pstype , size , obj )"	1218:8:37761:37812	422905	32	True				
ANR	422991	CallExpression	"alloc_trace ( "":+<F"" , imem , cname , pstype , size , obj )"		422905	0					
ANR	422992	Callee	alloc_trace		422905	0					
ANR	422993	Identifier	alloc_trace		422905	0					
ANR	422994	ArgumentList	""":+<F"""		422905	1					
ANR	422995	Argument	""":+<F"""		422905	0					
ANR	422996	PrimaryExpression	""":+<F"""		422905	0					
ANR	422997	Argument	imem		422905	1					
ANR	422998	Identifier	imem		422905	0					
ANR	422999	Argument	cname		422905	2					
ANR	423000	Identifier	cname		422905	0					
ANR	423001	Argument	pstype		422905	3					
ANR	423002	Identifier	pstype		422905	0					
ANR	423003	Argument	size		422905	4					
ANR	423004	Identifier	size		422905	0					
ANR	423005	Argument	obj		422905	5					
ANR	423006	Identifier	obj		422905	0					
ANR	423007	Statement	ELSEIF_LIFO_ALLOC	1219:4:37818:37834	422905	33	True				
ANR	423008	Statement	(	1219:21:37835:37835	422905	34	True				
ANR	423009	Statement	obj	1219:22:37836:37838	422905	35	True				
ANR	423010	Statement	","	1219:25:37839:37839	422905	36	True				
ANR	423011	Statement	imem	1219:27:37841:37844	422905	37	True				
ANR	423012	Statement	","	1219:31:37845:37845	422905	38	True				
ANR	423013	Statement	size	1219:33:37847:37850	422905	39	True				
ANR	423014	Statement	","	1219:37:37851:37851	422905	40	True				
ANR	423015	Statement	pstype	1219:39:37853:37858	422905	41	True				
ANR	423016	Statement	)	1219:45:37859:37859	422905	42	True				
ANR	423017	ExpressionStatement	"alloc_trace ( "":+< "" , imem , cname , pstype , size , obj )"	1220:8:37869:37920	422905	43	True				
ANR	423018	CallExpression	"alloc_trace ( "":+< "" , imem , cname , pstype , size , obj )"		422905	0					
ANR	423019	Callee	alloc_trace		422905	0					
ANR	423020	Identifier	alloc_trace		422905	0					
ANR	423021	ArgumentList	""":+< """		422905	1					
ANR	423022	Argument	""":+< """		422905	0					
ANR	423023	PrimaryExpression	""":+< """		422905	0					
ANR	423024	Argument	imem		422905	1					
ANR	423025	Identifier	imem		422905	0					
ANR	423026	Argument	cname		422905	2					
ANR	423027	Identifier	cname		422905	0					
ANR	423028	Argument	pstype		422905	3					
ANR	423029	Identifier	pstype		422905	0					
ANR	423030	Argument	size		422905	4					
ANR	423031	Identifier	size		422905	0					
ANR	423032	Argument	obj		422905	5					
ANR	423033	Identifier	obj		422905	0					
ANR	423034	Statement	ELSE_ALLOC	1221:4:37926:37935	422905	44	True				
ANR	423035	CompoundStatement		20:4:606:606	422905	45					
ANR	423036	ExpressionStatement	"obj = alloc_obj ( imem , size , pstype , 0 , cname )"	1223:8:37951:37996	422905	0	True				
ANR	423037	AssignmentExpression	"obj = alloc_obj ( imem , size , pstype , 0 , cname )"		422905	0		=			
ANR	423038	Identifier	obj		422905	0					
ANR	423039	CallExpression	"alloc_obj ( imem , size , pstype , 0 , cname )"		422905	1					
ANR	423040	Callee	alloc_obj		422905	0					
ANR	423041	Identifier	alloc_obj		422905	0					
ANR	423042	ArgumentList	imem		422905	1					
ANR	423043	Argument	imem		422905	0					
ANR	423044	Identifier	imem		422905	0					
ANR	423045	Argument	size		422905	1					
ANR	423046	Identifier	size		422905	0					
ANR	423047	Argument	pstype		422905	2					
ANR	423048	Identifier	pstype		422905	0					
ANR	423049	Argument	0		422905	3					
ANR	423050	PrimaryExpression	0		422905	0					
ANR	423051	Argument	cname		422905	4					
ANR	423052	Identifier	cname		422905	0					
ANR	423053	IfStatement	if ( obj == 0 )		422905	1					
ANR	423054	Condition	obj == 0	1224:12:38010:38017	422905	0	True				
ANR	423055	EqualityExpression	obj == 0		422905	0		==			
ANR	423056	Identifier	obj		422905	0					
ANR	423057	PrimaryExpression	0		422905	1					
ANR	423058	ReturnStatement	return 0 ;	1225:12:38032:38040	422905	1	True				
ANR	423059	PrimaryExpression	0		422905	0					
ANR	423060	ExpressionStatement	"alloc_trace ( "":+<."" , imem , cname , pstype , size , obj )"	1226:8:38050:38101	422905	2	True				
ANR	423061	CallExpression	"alloc_trace ( "":+<."" , imem , cname , pstype , size , obj )"		422905	0					
ANR	423062	Callee	alloc_trace		422905	0					
ANR	423063	Identifier	alloc_trace		422905	0					
ANR	423064	ArgumentList	""":+<."""		422905	1					
ANR	423065	Argument	""":+<."""		422905	0					
ANR	423066	PrimaryExpression	""":+<."""		422905	0					
ANR	423067	Argument	imem		422905	1					
ANR	423068	Identifier	imem		422905	0					
ANR	423069	Argument	cname		422905	2					
ANR	423070	Identifier	cname		422905	0					
ANR	423071	Argument	pstype		422905	3					
ANR	423072	Identifier	pstype		422905	0					
ANR	423073	Argument	size		422905	4					
ANR	423074	Identifier	size		422905	0					
ANR	423075	Argument	obj		422905	5					
ANR	423076	Identifier	obj		422905	0					
ANR	423077	ExpressionStatement	obj [ - 1 ] . d . o . space_id = imem -> space_id	1229:8:38145:38182	422905	46	True				
ANR	423078	AssignmentExpression	obj [ - 1 ] . d . o . space_id = imem -> space_id		422905	0		=			
ANR	423079	MemberAccess	obj [ - 1 ] . d . o . space_id		422905	0					
ANR	423080	MemberAccess	obj [ - 1 ] . d . o		422905	0					
ANR	423081	MemberAccess	obj [ - 1 ] . d		422905	0					
ANR	423082	ArrayIndexing	obj [ - 1 ]		422905	0					
ANR	423083	Identifier	obj		422905	0					
ANR	423084	UnaryOperationExpression	- 1		422905	1					
ANR	423085	UnaryOperator	-		422905	0					
ANR	423086	PrimaryExpression	1		422905	1					
ANR	423087	Identifier	d		422905	1					
ANR	423088	Identifier	o		422905	1					
ANR	423089	Identifier	space_id		422905	1					
ANR	423090	PtrMemberAccess	imem -> space_id		422905	1					
ANR	423091	Identifier	imem		422905	0					
ANR	423092	Identifier	space_id		422905	1					
ANR	423093	ReturnStatement	return obj ;	1231:4:38195:38205	422905	47	True				
ANR	423094	Identifier	obj		422905	0					
ANR	423095	ReturnType	static void *		422905	1					
ANR	423096	Identifier	i_alloc_struct		422905	2					
ANR	423097	ParameterList	"gs_memory_t * mem , gs_memory_type_ptr_t pstype , client_name_t cname"		422905	3					
ANR	423098	Parameter	gs_memory_t * mem	1201:15:37250:37266	422905	0	True				
ANR	423099	ParameterType	gs_memory_t *		422905	0					
ANR	423100	Identifier	mem		422905	1					
ANR	423101	Parameter	gs_memory_type_ptr_t pstype	1201:34:37269:37295	422905	1	True				
ANR	423102	ParameterType	gs_memory_type_ptr_t		422905	0					
ANR	423103	Identifier	pstype		422905	1					
ANR	423104	Parameter	client_name_t cname	1202:15:37313:37331	422905	2	True				
ANR	423105	ParameterType	client_name_t		422905	0					
ANR	423106	Identifier	cname		422905	1					
ANR	423107	CFGEntryNode	ENTRY		422905		True				
ANR	423108	CFGExitNode	EXIT		422905		True				
ANR	423109	Symbol	pstype -> ssize		422905						
ANR	423110	Symbol	* obj		422905						
ANR	423111	Symbol	NULL		422905						
ANR	423112	Symbol	obj [ - 1 ] . d . o		422905						
ANR	423113	Symbol	cname		422905						
ANR	423114	Symbol	* pstype		422905						
ANR	423115	Symbol	mem		422905						
ANR	423116	Symbol	pstype		422905						
ANR	423117	Symbol	size		422905						
ANR	423118	Symbol	obj		422905						
ANR	423119	Symbol	pfl		422905						
ANR	423120	Symbol	alloc_obj		422905						
ANR	423121	Symbol	obj [ - 1 ] . d . o . space_id		422905						
ANR	423122	Symbol	imem -> space_id		422905						
ANR	423123	Symbol	imem		422905						
ANR	423124	Symbol	* imem		422905						
ANR	423125	Symbol	Memento_failThisEvent		422905						
ANR	423126	Symbol	obj [ - 1 ] . d		422905						
ANR	423127	Function	i_alloc_struct_immovable	1233:0:38209:38722							
ANR	423128	FunctionDef	"i_alloc_struct_immovable (gs_memory_t * mem , gs_memory_type_ptr_t pstype , client_name_t cname)"		423127	0					
ANR	423129	CompoundStatement		1236:0:38342:38722	423127	0					
ANR	423130	Statement	gs_ref_memory_t	1237:4:38348:38362	423127	0	True				
ANR	423131	Statement	*	1237:20:38364:38364	423127	1	True				
ANR	423132	Statement	const	1237:22:38366:38370	423127	2	True				
ANR	423133	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1237:28:38372:38401	423127	3	True				
ANR	423134	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		423127	0		=			
ANR	423135	Identifier	imem		423127	0					
ANR	423136	CastExpression	( gs_ref_memory_t * ) mem		423127	1					
ANR	423137	CastTarget	gs_ref_memory_t *		423127	0					
ANR	423138	Identifier	mem		423127	1					
ANR	423139	IdentifierDeclStatement	uint size = pstype -> ssize ;	1238:4:38407:38432	423127	4	True				
ANR	423140	IdentifierDecl	size = pstype -> ssize		423127	0					
ANR	423141	IdentifierDeclType	uint		423127	0					
ANR	423142	Identifier	size		423127	1					
ANR	423143	AssignmentExpression	size = pstype -> ssize		423127	2		=			
ANR	423144	Identifier	size		423127	0					
ANR	423145	PtrMemberAccess	pstype -> ssize		423127	1					
ANR	423146	Identifier	pstype		423127	0					
ANR	423147	Identifier	ssize		423127	1					
ANR	423148	IdentifierDeclStatement	obj_header_t * obj ;	1239:4:38438:38455	423127	5	True				
ANR	423149	IdentifierDecl	* obj		423127	0					
ANR	423150	IdentifierDeclType	obj_header_t *		423127	0					
ANR	423151	Identifier	obj		423127	1					
ANR	423152	IfStatement	if ( Memento_failThisEvent ( ) )		423127	6					
ANR	423153	Condition	Memento_failThisEvent ( )	1242:8:38481:38503	423127	0	True				
ANR	423154	CallExpression	Memento_failThisEvent ( )		423127	0					
ANR	423155	Callee	Memento_failThisEvent		423127	0					
ANR	423156	Identifier	Memento_failThisEvent		423127	0					
ANR	423157	ArgumentList			423127	1					
ANR	423158	ReturnStatement	return NULL ;	1243:8:38514:38525	423127	1	True				
ANR	423159	Identifier	NULL		423127	0					
ANR	423160	ExpressionStatement	"ALLOC_CHECK_SIZE ( mem , pstype )"	1246:4:38539:38567	423127	7	True				
ANR	423161	CallExpression	"ALLOC_CHECK_SIZE ( mem , pstype )"		423127	0					
ANR	423162	Callee	ALLOC_CHECK_SIZE		423127	0					
ANR	423163	Identifier	ALLOC_CHECK_SIZE		423127	0					
ANR	423164	ArgumentList	mem		423127	1					
ANR	423165	Argument	mem		423127	0					
ANR	423166	Identifier	mem		423127	0					
ANR	423167	Argument	pstype		423127	1					
ANR	423168	Identifier	pstype		423127	0					
ANR	423169	ExpressionStatement	"obj = alloc_obj ( imem , size , pstype , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"	1247:4:38573:38647	423127	8	True				
ANR	423170	AssignmentExpression	"obj = alloc_obj ( imem , size , pstype , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		423127	0		=			
ANR	423171	Identifier	obj		423127	0					
ANR	423172	CallExpression	"alloc_obj ( imem , size , pstype , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		423127	1					
ANR	423173	Callee	alloc_obj		423127	0					
ANR	423174	Identifier	alloc_obj		423127	0					
ANR	423175	ArgumentList	imem		423127	1					
ANR	423176	Argument	imem		423127	0					
ANR	423177	Identifier	imem		423127	0					
ANR	423178	Argument	size		423127	1					
ANR	423179	Identifier	size		423127	0					
ANR	423180	Argument	pstype		423127	2					
ANR	423181	Identifier	pstype		423127	0					
ANR	423182	Argument	ALLOC_IMMOVABLE | ALLOC_DIRECT		423127	3					
ANR	423183	InclusiveOrExpression	ALLOC_IMMOVABLE | ALLOC_DIRECT		423127	0		|			
ANR	423184	Identifier	ALLOC_IMMOVABLE		423127	0					
ANR	423185	Identifier	ALLOC_DIRECT		423127	1					
ANR	423186	Argument	cname		423127	4					
ANR	423187	Identifier	cname		423127	0					
ANR	423188	ExpressionStatement	"alloc_trace ( ""|+<."" , imem , cname , pstype , size , obj )"	1248:4:38653:38704	423127	9	True				
ANR	423189	CallExpression	"alloc_trace ( ""|+<."" , imem , cname , pstype , size , obj )"		423127	0					
ANR	423190	Callee	alloc_trace		423127	0					
ANR	423191	Identifier	alloc_trace		423127	0					
ANR	423192	ArgumentList	"""|+<."""		423127	1					
ANR	423193	Argument	"""|+<."""		423127	0					
ANR	423194	PrimaryExpression	"""|+<."""		423127	0					
ANR	423195	Argument	imem		423127	1					
ANR	423196	Identifier	imem		423127	0					
ANR	423197	Argument	cname		423127	2					
ANR	423198	Identifier	cname		423127	0					
ANR	423199	Argument	pstype		423127	3					
ANR	423200	Identifier	pstype		423127	0					
ANR	423201	Argument	size		423127	4					
ANR	423202	Identifier	size		423127	0					
ANR	423203	Argument	obj		423127	5					
ANR	423204	Identifier	obj		423127	0					
ANR	423205	ReturnStatement	return obj ;	1249:4:38710:38720	423127	10	True				
ANR	423206	Identifier	obj		423127	0					
ANR	423207	ReturnType	static void *		423127	1					
ANR	423208	Identifier	i_alloc_struct_immovable		423127	2					
ANR	423209	ParameterList	"gs_memory_t * mem , gs_memory_type_ptr_t pstype , client_name_t cname"		423127	3					
ANR	423210	Parameter	gs_memory_t * mem	1234:25:38248:38264	423127	0	True				
ANR	423211	ParameterType	gs_memory_t *		423127	0					
ANR	423212	Identifier	mem		423127	1					
ANR	423213	Parameter	gs_memory_type_ptr_t pstype	1234:44:38267:38293	423127	1	True				
ANR	423214	ParameterType	gs_memory_type_ptr_t		423127	0					
ANR	423215	Identifier	pstype		423127	1					
ANR	423216	Parameter	client_name_t cname	1235:25:38321:38339	423127	2	True				
ANR	423217	ParameterType	client_name_t		423127	0					
ANR	423218	Identifier	cname		423127	1					
ANR	423219	CFGEntryNode	ENTRY		423127		True				
ANR	423220	CFGExitNode	EXIT		423127		True				
ANR	423221	Symbol	pstype -> ssize		423127						
ANR	423222	Symbol	NULL		423127						
ANR	423223	Symbol	cname		423127						
ANR	423224	Symbol	ALLOC_IMMOVABLE		423127						
ANR	423225	Symbol	ALLOC_DIRECT		423127						
ANR	423226	Symbol	* pstype		423127						
ANR	423227	Symbol	mem		423127						
ANR	423228	Symbol	pstype		423127						
ANR	423229	Symbol	size		423127						
ANR	423230	Symbol	obj		423127						
ANR	423231	Symbol	alloc_obj		423127						
ANR	423232	Symbol	imem		423127						
ANR	423233	Symbol	Memento_failThisEvent		423127						
ANR	423234	Function	alloc_array_check_size	1252:0:38725:38961							
ANR	423235	FunctionDef	"alloc_array_check_size (ulong num_elements , ulong elt_size , ulong * lsize)"		423234	0					
ANR	423236	CompoundStatement		1254:0:38817:38961	423234	0					
ANR	423237	IdentifierDeclStatement	int64_t s = ( int64_t ) num_elements * elt_size ;	1255:4:38823:38867	423234	0	True				
ANR	423238	IdentifierDecl	s = ( int64_t ) num_elements * elt_size		423234	0					
ANR	423239	IdentifierDeclType	int64_t		423234	0					
ANR	423240	Identifier	s		423234	1					
ANR	423241	AssignmentExpression	s = ( int64_t ) num_elements * elt_size		423234	2		=			
ANR	423242	Identifier	s		423234	0					
ANR	423243	MultiplicativeExpression	( int64_t ) num_elements * elt_size		423234	1		*			
ANR	423244	CastExpression	( int64_t ) num_elements		423234	0					
ANR	423245	CastTarget	int64_t		423234	0					
ANR	423246	Identifier	num_elements		423234	1					
ANR	423247	Identifier	elt_size		423234	1					
ANR	423248	IfStatement	if ( s > max_uint )		423234	1					
ANR	423249	Condition	s > max_uint	1256:8:38877:38888	423234	0	True				
ANR	423250	RelationalExpression	s > max_uint		423234	0		>			
ANR	423251	Identifier	s		423234	0					
ANR	423252	Identifier	max_uint		423234	1					
ANR	423253	CompoundStatement		3:22:73:73	423234	1					
ANR	423254	ReturnStatement	return false ;	1257:8:38901:38913	423234	0	True				
ANR	423255	Identifier	false		423234	0					
ANR	423256	ExpressionStatement	* lsize = ( ulong ) s	1259:4:38925:38942	423234	2	True				
ANR	423257	AssignmentExpression	* lsize = ( ulong ) s		423234	0		=			
ANR	423258	UnaryOperationExpression	* lsize		423234	0					
ANR	423259	UnaryOperator	*		423234	0					
ANR	423260	Identifier	lsize		423234	1					
ANR	423261	CastExpression	( ulong ) s		423234	1					
ANR	423262	CastTarget	ulong		423234	0					
ANR	423263	Identifier	s		423234	1					
ANR	423264	ReturnStatement	return true ;	1260:4:38948:38959	423234	3	True				
ANR	423265	Identifier	true		423234	0					
ANR	423266	ReturnType	static inline bool		423234	1					
ANR	423267	Identifier	alloc_array_check_size		423234	2					
ANR	423268	ParameterList	"ulong num_elements , ulong elt_size , ulong * lsize"		423234	3					
ANR	423269	Parameter	ulong num_elements	1253:23:38767:38784	423234	0	True				
ANR	423270	ParameterType	ulong		423234	0					
ANR	423271	Identifier	num_elements		423234	1					
ANR	423272	Parameter	ulong elt_size	1253:43:38787:38800	423234	1	True				
ANR	423273	ParameterType	ulong		423234	0					
ANR	423274	Identifier	elt_size		423234	1					
ANR	423275	Parameter	ulong * lsize	1253:59:38803:38814	423234	2	True				
ANR	423276	ParameterType	ulong *		423234	0					
ANR	423277	Identifier	lsize		423234	1					
ANR	423278	CFGEntryNode	ENTRY		423234		True				
ANR	423279	CFGExitNode	EXIT		423234		True				
ANR	423280	Symbol	s		423234						
ANR	423281	Symbol	num_elements		423234						
ANR	423282	Symbol	max_uint		423234						
ANR	423283	Symbol	false		423234						
ANR	423284	Symbol	true		423234						
ANR	423285	Symbol	elt_size		423234						
ANR	423286	Symbol	lsize		423234						
ANR	423287	Symbol	* lsize		423234						
ANR	423288	Function	i_alloc_byte_array	1263:0:38964:39711							
ANR	423289	FunctionDef	"i_alloc_byte_array (gs_memory_t * mem , uint num_elements , uint elt_size , client_name_t cname)"		423288	0					
ANR	423290	CompoundStatement		1266:0:39090:39711	423288	0					
ANR	423291	Statement	gs_ref_memory_t	1267:4:39096:39110	423288	0	True				
ANR	423292	Statement	*	1267:20:39112:39112	423288	1	True				
ANR	423293	Statement	const	1267:22:39114:39118	423288	2	True				
ANR	423294	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1267:28:39120:39149	423288	3	True				
ANR	423295	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		423288	0		=			
ANR	423296	Identifier	imem		423288	0					
ANR	423297	CastExpression	( gs_ref_memory_t * ) mem		423288	1					
ANR	423298	CastTarget	gs_ref_memory_t *		423288	0					
ANR	423299	Identifier	mem		423288	1					
ANR	423300	IdentifierDeclStatement	obj_header_t * obj ;	1268:4:39155:39172	423288	4	True				
ANR	423301	IdentifierDecl	* obj		423288	0					
ANR	423302	IdentifierDeclType	obj_header_t *		423288	0					
ANR	423303	Identifier	obj		423288	1					
ANR	423304	IdentifierDeclStatement	ulong lsize ;	1269:4:39178:39189	423288	5	True				
ANR	423305	IdentifierDecl	lsize		423288	0					
ANR	423306	IdentifierDeclType	ulong		423288	0					
ANR	423307	Identifier	lsize		423288	1					
ANR	423308	IfStatement	if ( Memento_failThisEvent ( ) )		423288	6					
ANR	423309	Condition	Memento_failThisEvent ( )	1271:8:39214:39236	423288	0	True				
ANR	423310	CallExpression	Memento_failThisEvent ( )		423288	0					
ANR	423311	Callee	Memento_failThisEvent		423288	0					
ANR	423312	Identifier	Memento_failThisEvent		423288	0					
ANR	423313	ArgumentList			423288	1					
ANR	423314	ReturnStatement	return NULL ;	1272:8:39247:39258	423288	1	True				
ANR	423315	Identifier	NULL		423288	0					
ANR	423316	IfStatement	"if ( alloc_array_check_size ( num_elements , elt_size , & lsize ) == false )"		423288	7					
ANR	423317	Condition	"alloc_array_check_size ( num_elements , elt_size , & lsize ) == false"	1274:8:39275:39337	423288	0	True				
ANR	423318	EqualityExpression	"alloc_array_check_size ( num_elements , elt_size , & lsize ) == false"		423288	0		==			
ANR	423319	CallExpression	"alloc_array_check_size ( num_elements , elt_size , & lsize )"		423288	0					
ANR	423320	Callee	alloc_array_check_size		423288	0					
ANR	423321	Identifier	alloc_array_check_size		423288	0					
ANR	423322	ArgumentList	num_elements		423288	1					
ANR	423323	Argument	num_elements		423288	0					
ANR	423324	Identifier	num_elements		423288	0					
ANR	423325	Argument	elt_size		423288	1					
ANR	423326	Identifier	elt_size		423288	0					
ANR	423327	Argument	& lsize		423288	2					
ANR	423328	UnaryOperationExpression	& lsize		423288	0					
ANR	423329	UnaryOperator	&		423288	0					
ANR	423330	Identifier	lsize		423288	1					
ANR	423331	Identifier	false		423288	1					
ANR	423332	ReturnStatement	return NULL ;	1275:8:39348:39359	423288	1	True				
ANR	423333	Identifier	NULL		423288	0					
ANR	423334	ExpressionStatement	"obj = alloc_obj ( imem , lsize , & st_bytes , ALLOC_DIRECT , cname )"	1276:4:39365:39445	423288	8	True				
ANR	423335	AssignmentExpression	"obj = alloc_obj ( imem , lsize , & st_bytes , ALLOC_DIRECT , cname )"		423288	0		=			
ANR	423336	Identifier	obj		423288	0					
ANR	423337	CallExpression	"alloc_obj ( imem , lsize , & st_bytes , ALLOC_DIRECT , cname )"		423288	1					
ANR	423338	Callee	alloc_obj		423288	0					
ANR	423339	Identifier	alloc_obj		423288	0					
ANR	423340	ArgumentList	imem		423288	1					
ANR	423341	Argument	imem		423288	0					
ANR	423342	Identifier	imem		423288	0					
ANR	423343	Argument	lsize		423288	1					
ANR	423344	Identifier	lsize		423288	0					
ANR	423345	Argument	& st_bytes		423288	2					
ANR	423346	UnaryOperationExpression	& st_bytes		423288	0					
ANR	423347	UnaryOperator	&		423288	0					
ANR	423348	Identifier	st_bytes		423288	1					
ANR	423349	Argument	ALLOC_DIRECT		423288	3					
ANR	423350	Identifier	ALLOC_DIRECT		423288	0					
ANR	423351	Argument	cname		423288	4					
ANR	423352	Identifier	cname		423288	0					
ANR	423353	ExpressionStatement	"if_debug6m ( 'A' , mem , ""[a%d:+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , ( ulong ) num_elements * elt_size , num_elements , elt_size , ( ulong ) obj )"	1279:4:39452:39684	423288	9	True				
ANR	423354	CallExpression	"if_debug6m ( 'A' , mem , ""[a%d:+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , ( ulong ) num_elements * elt_size , num_elements , elt_size , ( ulong ) obj )"		423288	0					
ANR	423355	Callee	if_debug6m		423288	0					
ANR	423356	Identifier	if_debug6m		423288	0					
ANR	423357	ArgumentList	'A'		423288	1					
ANR	423358	Argument	'A'		423288	0					
ANR	423359	PrimaryExpression	'A'		423288	0					
ANR	423360	Argument	mem		423288	1					
ANR	423361	Identifier	mem		423288	0					
ANR	423362	Argument	"""[a%d:+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"""		423288	2					
ANR	423363	PrimaryExpression	"""[a%d:+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"""		423288	0					
ANR	423364	Argument	alloc_trace_space ( imem )		423288	3					
ANR	423365	CallExpression	alloc_trace_space ( imem )		423288	0					
ANR	423366	Callee	alloc_trace_space		423288	0					
ANR	423367	Identifier	alloc_trace_space		423288	0					
ANR	423368	ArgumentList	imem		423288	1					
ANR	423369	Argument	imem		423288	0					
ANR	423370	Identifier	imem		423288	0					
ANR	423371	Argument	client_name_string ( cname )		423288	4					
ANR	423372	CallExpression	client_name_string ( cname )		423288	0					
ANR	423373	Callee	client_name_string		423288	0					
ANR	423374	Identifier	client_name_string		423288	0					
ANR	423375	ArgumentList	cname		423288	1					
ANR	423376	Argument	cname		423288	0					
ANR	423377	Identifier	cname		423288	0					
ANR	423378	Argument	( ulong ) num_elements * elt_size		423288	5					
ANR	423379	MultiplicativeExpression	( ulong ) num_elements * elt_size		423288	0		*			
ANR	423380	CastExpression	( ulong ) num_elements		423288	0					
ANR	423381	CastTarget	ulong		423288	0					
ANR	423382	Identifier	num_elements		423288	1					
ANR	423383	Identifier	elt_size		423288	1					
ANR	423384	Argument	num_elements		423288	6					
ANR	423385	Identifier	num_elements		423288	0					
ANR	423386	Argument	elt_size		423288	7					
ANR	423387	Identifier	elt_size		423288	0					
ANR	423388	Argument	( ulong ) obj		423288	8					
ANR	423389	CastExpression	( ulong ) obj		423288	0					
ANR	423390	CastTarget	ulong		423288	0					
ANR	423391	Identifier	obj		423288	1					
ANR	423392	ReturnStatement	return ( byte * ) obj ;	1283:4:39690:39709	423288	10	True				
ANR	423393	CastExpression	( byte * ) obj		423288	0					
ANR	423394	CastTarget	byte *		423288	0					
ANR	423395	Identifier	obj		423288	1					
ANR	423396	ReturnType	static byte *		423288	1					
ANR	423397	Identifier	i_alloc_byte_array		423288	2					
ANR	423398	ParameterList	"gs_memory_t * mem , uint num_elements , uint elt_size , client_name_t cname"		423288	3					
ANR	423399	Parameter	gs_memory_t * mem	1264:19:38997:39013	423288	0	True				
ANR	423400	ParameterType	gs_memory_t *		423288	0					
ANR	423401	Identifier	mem		423288	1					
ANR	423402	Parameter	uint num_elements	1264:38:39016:39032	423288	1	True				
ANR	423403	ParameterType	uint		423288	0					
ANR	423404	Identifier	num_elements		423288	1					
ANR	423405	Parameter	uint elt_size	1264:57:39035:39047	423288	2	True				
ANR	423406	ParameterType	uint		423288	0					
ANR	423407	Identifier	elt_size		423288	1					
ANR	423408	Parameter	client_name_t cname	1265:19:39069:39087	423288	3	True				
ANR	423409	ParameterType	client_name_t		423288	0					
ANR	423410	Identifier	cname		423288	1					
ANR	423411	CFGEntryNode	ENTRY		423288		True				
ANR	423412	CFGExitNode	EXIT		423288		True				
ANR	423413	Symbol	NULL		423288						
ANR	423414	Symbol	cname		423288						
ANR	423415	Symbol	false		423288						
ANR	423416	Symbol	elt_size		423288						
ANR	423417	Symbol	alloc_array_check_size		423288						
ANR	423418	Symbol	lsize		423288						
ANR	423419	Symbol	ALLOC_DIRECT		423288						
ANR	423420	Symbol	alloc_trace_space		423288						
ANR	423421	Symbol	& st_bytes		423288						
ANR	423422	Symbol	mem		423288						
ANR	423423	Symbol	num_elements		423288						
ANR	423424	Symbol	obj		423288						
ANR	423425	Symbol	client_name_string		423288						
ANR	423426	Symbol	alloc_obj		423288						
ANR	423427	Symbol	& lsize		423288						
ANR	423428	Symbol	imem		423288						
ANR	423429	Symbol	Memento_failThisEvent		423288						
ANR	423430	Function	i_alloc_byte_array_immovable	1285:0:39713:40518							
ANR	423431	FunctionDef	"i_alloc_byte_array_immovable (gs_memory_t * mem , uint num_elements , uint elt_size , client_name_t cname)"		423430	0					
ANR	423432	CompoundStatement		1288:0:39859:40518	423430	0					
ANR	423433	Statement	gs_ref_memory_t	1289:4:39865:39879	423430	0	True				
ANR	423434	Statement	*	1289:20:39881:39881	423430	1	True				
ANR	423435	Statement	const	1289:22:39883:39887	423430	2	True				
ANR	423436	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1289:28:39889:39918	423430	3	True				
ANR	423437	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		423430	0		=			
ANR	423438	Identifier	imem		423430	0					
ANR	423439	CastExpression	( gs_ref_memory_t * ) mem		423430	1					
ANR	423440	CastTarget	gs_ref_memory_t *		423430	0					
ANR	423441	Identifier	mem		423430	1					
ANR	423442	IdentifierDeclStatement	obj_header_t * obj ;	1290:4:39924:39941	423430	4	True				
ANR	423443	IdentifierDecl	* obj		423430	0					
ANR	423444	IdentifierDeclType	obj_header_t *		423430	0					
ANR	423445	Identifier	obj		423430	1					
ANR	423446	IdentifierDeclStatement	ulong lsize ;	1291:4:39947:39958	423430	5	True				
ANR	423447	IdentifierDecl	lsize		423430	0					
ANR	423448	IdentifierDeclType	ulong		423430	0					
ANR	423449	Identifier	lsize		423430	1					
ANR	423450	IfStatement	if ( Memento_failThisEvent ( ) )		423430	6					
ANR	423451	Condition	Memento_failThisEvent ( )	1293:8:39983:40005	423430	0	True				
ANR	423452	CallExpression	Memento_failThisEvent ( )		423430	0					
ANR	423453	Callee	Memento_failThisEvent		423430	0					
ANR	423454	Identifier	Memento_failThisEvent		423430	0					
ANR	423455	ArgumentList			423430	1					
ANR	423456	ReturnStatement	return NULL ;	1294:8:40016:40027	423430	1	True				
ANR	423457	Identifier	NULL		423430	0					
ANR	423458	IfStatement	"if ( alloc_array_check_size ( num_elements , elt_size , & lsize ) == false )"		423430	7					
ANR	423459	Condition	"alloc_array_check_size ( num_elements , elt_size , & lsize ) == false"	1296:8:40044:40106	423430	0	True				
ANR	423460	EqualityExpression	"alloc_array_check_size ( num_elements , elt_size , & lsize ) == false"		423430	0		==			
ANR	423461	CallExpression	"alloc_array_check_size ( num_elements , elt_size , & lsize )"		423430	0					
ANR	423462	Callee	alloc_array_check_size		423430	0					
ANR	423463	Identifier	alloc_array_check_size		423430	0					
ANR	423464	ArgumentList	num_elements		423430	1					
ANR	423465	Argument	num_elements		423430	0					
ANR	423466	Identifier	num_elements		423430	0					
ANR	423467	Argument	elt_size		423430	1					
ANR	423468	Identifier	elt_size		423430	0					
ANR	423469	Argument	& lsize		423430	2					
ANR	423470	UnaryOperationExpression	& lsize		423430	0					
ANR	423471	UnaryOperator	&		423430	0					
ANR	423472	Identifier	lsize		423430	1					
ANR	423473	Identifier	false		423430	1					
ANR	423474	ReturnStatement	return NULL ;	1297:8:40117:40128	423430	1	True				
ANR	423475	Identifier	NULL		423430	0					
ANR	423476	ExpressionStatement	"obj = alloc_obj ( imem , lsize , & st_bytes , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"	1298:4:40134:40252	423430	8	True				
ANR	423477	AssignmentExpression	"obj = alloc_obj ( imem , lsize , & st_bytes , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		423430	0		=			
ANR	423478	Identifier	obj		423430	0					
ANR	423479	CallExpression	"alloc_obj ( imem , lsize , & st_bytes , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		423430	1					
ANR	423480	Callee	alloc_obj		423430	0					
ANR	423481	Identifier	alloc_obj		423430	0					
ANR	423482	ArgumentList	imem		423430	1					
ANR	423483	Argument	imem		423430	0					
ANR	423484	Identifier	imem		423430	0					
ANR	423485	Argument	lsize		423430	1					
ANR	423486	Identifier	lsize		423430	0					
ANR	423487	Argument	& st_bytes		423430	2					
ANR	423488	UnaryOperationExpression	& st_bytes		423430	0					
ANR	423489	UnaryOperator	&		423430	0					
ANR	423490	Identifier	st_bytes		423430	1					
ANR	423491	Argument	ALLOC_IMMOVABLE | ALLOC_DIRECT		423430	3					
ANR	423492	InclusiveOrExpression	ALLOC_IMMOVABLE | ALLOC_DIRECT		423430	0		|			
ANR	423493	Identifier	ALLOC_IMMOVABLE		423430	0					
ANR	423494	Identifier	ALLOC_DIRECT		423430	1					
ANR	423495	Argument	cname		423430	4					
ANR	423496	Identifier	cname		423430	0					
ANR	423497	ExpressionStatement	"if_debug6m ( 'A' , mem , ""[a%d|+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , ( ulong ) num_elements * elt_size , num_elements , elt_size , ( ulong ) obj )"	1302:4:40259:40491	423430	9	True				
ANR	423498	CallExpression	"if_debug6m ( 'A' , mem , ""[a%d|+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , ( ulong ) num_elements * elt_size , num_elements , elt_size , ( ulong ) obj )"		423430	0					
ANR	423499	Callee	if_debug6m		423430	0					
ANR	423500	Identifier	if_debug6m		423430	0					
ANR	423501	ArgumentList	'A'		423430	1					
ANR	423502	Argument	'A'		423430	0					
ANR	423503	PrimaryExpression	'A'		423430	0					
ANR	423504	Argument	mem		423430	1					
ANR	423505	Identifier	mem		423430	0					
ANR	423506	Argument	"""[a%d|+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"""		423430	2					
ANR	423507	PrimaryExpression	"""[a%d|+b.]%s -bytes-*(%lu=%u*%u) = 0x%lx\\n"""		423430	0					
ANR	423508	Argument	alloc_trace_space ( imem )		423430	3					
ANR	423509	CallExpression	alloc_trace_space ( imem )		423430	0					
ANR	423510	Callee	alloc_trace_space		423430	0					
ANR	423511	Identifier	alloc_trace_space		423430	0					
ANR	423512	ArgumentList	imem		423430	1					
ANR	423513	Argument	imem		423430	0					
ANR	423514	Identifier	imem		423430	0					
ANR	423515	Argument	client_name_string ( cname )		423430	4					
ANR	423516	CallExpression	client_name_string ( cname )		423430	0					
ANR	423517	Callee	client_name_string		423430	0					
ANR	423518	Identifier	client_name_string		423430	0					
ANR	423519	ArgumentList	cname		423430	1					
ANR	423520	Argument	cname		423430	0					
ANR	423521	Identifier	cname		423430	0					
ANR	423522	Argument	( ulong ) num_elements * elt_size		423430	5					
ANR	423523	MultiplicativeExpression	( ulong ) num_elements * elt_size		423430	0		*			
ANR	423524	CastExpression	( ulong ) num_elements		423430	0					
ANR	423525	CastTarget	ulong		423430	0					
ANR	423526	Identifier	num_elements		423430	1					
ANR	423527	Identifier	elt_size		423430	1					
ANR	423528	Argument	num_elements		423430	6					
ANR	423529	Identifier	num_elements		423430	0					
ANR	423530	Argument	elt_size		423430	7					
ANR	423531	Identifier	elt_size		423430	0					
ANR	423532	Argument	( ulong ) obj		423430	8					
ANR	423533	CastExpression	( ulong ) obj		423430	0					
ANR	423534	CastTarget	ulong		423430	0					
ANR	423535	Identifier	obj		423430	1					
ANR	423536	ReturnStatement	return ( byte * ) obj ;	1306:4:40497:40516	423430	10	True				
ANR	423537	CastExpression	( byte * ) obj		423430	0					
ANR	423538	CastTarget	byte *		423430	0					
ANR	423539	Identifier	obj		423430	1					
ANR	423540	ReturnType	static byte *		423430	1					
ANR	423541	Identifier	i_alloc_byte_array_immovable		423430	2					
ANR	423542	ParameterList	"gs_memory_t * mem , uint num_elements , uint elt_size , client_name_t cname"		423430	3					
ANR	423543	Parameter	gs_memory_t * mem	1286:29:39756:39772	423430	0	True				
ANR	423544	ParameterType	gs_memory_t *		423430	0					
ANR	423545	Identifier	mem		423430	1					
ANR	423546	Parameter	uint num_elements	1286:48:39775:39791	423430	1	True				
ANR	423547	ParameterType	uint		423430	0					
ANR	423548	Identifier	num_elements		423430	1					
ANR	423549	Parameter	uint elt_size	1287:29:39823:39835	423430	2	True				
ANR	423550	ParameterType	uint		423430	0					
ANR	423551	Identifier	elt_size		423430	1					
ANR	423552	Parameter	client_name_t cname	1287:44:39838:39856	423430	3	True				
ANR	423553	ParameterType	client_name_t		423430	0					
ANR	423554	Identifier	cname		423430	1					
ANR	423555	CFGEntryNode	ENTRY		423430		True				
ANR	423556	CFGExitNode	EXIT		423430		True				
ANR	423557	Symbol	NULL		423430						
ANR	423558	Symbol	cname		423430						
ANR	423559	Symbol	false		423430						
ANR	423560	Symbol	ALLOC_IMMOVABLE		423430						
ANR	423561	Symbol	elt_size		423430						
ANR	423562	Symbol	alloc_array_check_size		423430						
ANR	423563	Symbol	lsize		423430						
ANR	423564	Symbol	ALLOC_DIRECT		423430						
ANR	423565	Symbol	alloc_trace_space		423430						
ANR	423566	Symbol	& st_bytes		423430						
ANR	423567	Symbol	mem		423430						
ANR	423568	Symbol	num_elements		423430						
ANR	423569	Symbol	obj		423430						
ANR	423570	Symbol	client_name_string		423430						
ANR	423571	Symbol	alloc_obj		423430						
ANR	423572	Symbol	& lsize		423430						
ANR	423573	Symbol	imem		423430						
ANR	423574	Symbol	Memento_failThisEvent		423430						
ANR	423575	Function	i_alloc_struct_array	1308:0:40520:41628							
ANR	423576	FunctionDef	"i_alloc_struct_array (gs_memory_t * mem , uint num_elements , gs_memory_type_ptr_t pstype , client_name_t cname)"		423575	0					
ANR	423577	CompoundStatement		1311:0:40664:41628	423575	0					
ANR	423578	Statement	gs_ref_memory_t	1312:4:40670:40684	423575	0	True				
ANR	423579	Statement	*	1312:20:40686:40686	423575	1	True				
ANR	423580	Statement	const	1312:22:40688:40692	423575	2	True				
ANR	423581	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1312:28:40694:40723	423575	3	True				
ANR	423582	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		423575	0		=			
ANR	423583	Identifier	imem		423575	0					
ANR	423584	CastExpression	( gs_ref_memory_t * ) mem		423575	1					
ANR	423585	CastTarget	gs_ref_memory_t *		423575	0					
ANR	423586	Identifier	mem		423575	1					
ANR	423587	IdentifierDeclStatement	obj_header_t * obj ;	1313:4:40729:40746	423575	4	True				
ANR	423588	IdentifierDecl	* obj		423575	0					
ANR	423589	IdentifierDeclType	obj_header_t *		423575	0					
ANR	423590	Identifier	obj		423575	1					
ANR	423591	IdentifierDeclStatement	ulong lsize ;	1314:4:40752:40763	423575	5	True				
ANR	423592	IdentifierDecl	lsize		423575	0					
ANR	423593	IdentifierDeclType	ulong		423575	0					
ANR	423594	Identifier	lsize		423575	1					
ANR	423595	IfStatement	if ( Memento_failThisEvent ( ) )		423575	6					
ANR	423596	Condition	Memento_failThisEvent ( )	1316:8:40788:40810	423575	0	True				
ANR	423597	CallExpression	Memento_failThisEvent ( )		423575	0					
ANR	423598	Callee	Memento_failThisEvent		423575	0					
ANR	423599	Identifier	Memento_failThisEvent		423575	0					
ANR	423600	ArgumentList			423575	1					
ANR	423601	ReturnStatement	return NULL ;	1317:8:40821:40832	423575	1	True				
ANR	423602	Identifier	NULL		423575	0					
ANR	423603	ExpressionStatement	"ALLOC_CHECK_SIZE ( mem , pstype )"	1320:4:40846:40874	423575	7	True				
ANR	423604	CallExpression	"ALLOC_CHECK_SIZE ( mem , pstype )"		423575	0					
ANR	423605	Callee	ALLOC_CHECK_SIZE		423575	0					
ANR	423606	Identifier	ALLOC_CHECK_SIZE		423575	0					
ANR	423607	ArgumentList	mem		423575	1					
ANR	423608	Argument	mem		423575	0					
ANR	423609	Identifier	mem		423575	0					
ANR	423610	Argument	pstype		423575	1					
ANR	423611	Identifier	pstype		423575	0					
ANR	423612	IfStatement	if ( pstype -> enum_ptrs == basic_enum_ptrs )		423575	8					
ANR	423613	Condition	pstype -> enum_ptrs == basic_enum_ptrs	1322:8:40897:40932	423575	0	True				
ANR	423614	EqualityExpression	pstype -> enum_ptrs == basic_enum_ptrs		423575	0		==			
ANR	423615	PtrMemberAccess	pstype -> enum_ptrs		423575	0					
ANR	423616	Identifier	pstype		423575	0					
ANR	423617	Identifier	enum_ptrs		423575	1					
ANR	423618	Identifier	basic_enum_ptrs		423575	1					
ANR	423619	CompoundStatement		12:46:270:270	423575	1					
ANR	423620	ExpressionStatement	"dmprintf2 ( mem , ""  i_alloc_struct_array: called with incorrect structure type (not element), struct='%s', client='%s'\\n"" , pstype -> sname , cname )"	1323:8:40945:41103	423575	0	True				
ANR	423621	CallExpression	"dmprintf2 ( mem , ""  i_alloc_struct_array: called with incorrect structure type (not element), struct='%s', client='%s'\\n"" , pstype -> sname , cname )"		423575	0					
ANR	423622	Callee	dmprintf2		423575	0					
ANR	423623	Identifier	dmprintf2		423575	0					
ANR	423624	ArgumentList	mem		423575	1					
ANR	423625	Argument	mem		423575	0					
ANR	423626	Identifier	mem		423575	0					
ANR	423627	Argument	"""  i_alloc_struct_array: called with incorrect structure type (not element), struct='%s', client='%s'\\n"""		423575	1					
ANR	423628	PrimaryExpression	"""  i_alloc_struct_array: called with incorrect structure type (not element), struct='%s', client='%s'\\n"""		423575	0					
ANR	423629	Argument	pstype -> sname		423575	2					
ANR	423630	PtrMemberAccess	pstype -> sname		423575	0					
ANR	423631	Identifier	pstype		423575	0					
ANR	423632	Identifier	sname		423575	1					
ANR	423633	Argument	cname		423575	3					
ANR	423634	Identifier	cname		423575	0					
ANR	423635	ReturnStatement	return NULL ;	1325:8:41113:41124	423575	1	True				
ANR	423636	Identifier	NULL		423575	0					
ANR	423637	IfStatement	"if ( alloc_array_check_size ( num_elements , pstype -> ssize , & lsize ) == false )"		423575	9					
ANR	423638	Condition	"alloc_array_check_size ( num_elements , pstype -> ssize , & lsize ) == false"	1328:8:41159:41226	423575	0	True				
ANR	423639	EqualityExpression	"alloc_array_check_size ( num_elements , pstype -> ssize , & lsize ) == false"		423575	0		==			
ANR	423640	CallExpression	"alloc_array_check_size ( num_elements , pstype -> ssize , & lsize )"		423575	0					
ANR	423641	Callee	alloc_array_check_size		423575	0					
ANR	423642	Identifier	alloc_array_check_size		423575	0					
ANR	423643	ArgumentList	num_elements		423575	1					
ANR	423644	Argument	num_elements		423575	0					
ANR	423645	Identifier	num_elements		423575	0					
ANR	423646	Argument	pstype -> ssize		423575	1					
ANR	423647	PtrMemberAccess	pstype -> ssize		423575	0					
ANR	423648	Identifier	pstype		423575	0					
ANR	423649	Identifier	ssize		423575	1					
ANR	423650	Argument	& lsize		423575	2					
ANR	423651	UnaryOperationExpression	& lsize		423575	0					
ANR	423652	UnaryOperator	&		423575	0					
ANR	423653	Identifier	lsize		423575	1					
ANR	423654	Identifier	false		423575	1					
ANR	423655	ReturnStatement	return NULL ;	1329:8:41237:41248	423575	1	True				
ANR	423656	Identifier	NULL		423575	0					
ANR	423657	ExpressionStatement	"obj = alloc_obj ( imem , lsize , pstype , ALLOC_DIRECT , cname )"	1330:4:41254:41311	423575	10	True				
ANR	423658	AssignmentExpression	"obj = alloc_obj ( imem , lsize , pstype , ALLOC_DIRECT , cname )"		423575	0		=			
ANR	423659	Identifier	obj		423575	0					
ANR	423660	CallExpression	"alloc_obj ( imem , lsize , pstype , ALLOC_DIRECT , cname )"		423575	1					
ANR	423661	Callee	alloc_obj		423575	0					
ANR	423662	Identifier	alloc_obj		423575	0					
ANR	423663	ArgumentList	imem		423575	1					
ANR	423664	Argument	imem		423575	0					
ANR	423665	Identifier	imem		423575	0					
ANR	423666	Argument	lsize		423575	1					
ANR	423667	Identifier	lsize		423575	0					
ANR	423668	Argument	pstype		423575	2					
ANR	423669	Identifier	pstype		423575	0					
ANR	423670	Argument	ALLOC_DIRECT		423575	3					
ANR	423671	Identifier	ALLOC_DIRECT		423575	0					
ANR	423672	Argument	cname		423575	4					
ANR	423673	Identifier	cname		423575	0					
ANR	423674	ExpressionStatement	"if_debug7m ( 'A' , mem , ""[a%d:+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , struct_type_name_string ( pstype ) , ( ulong ) num_elements * pstype -> ssize , num_elements , pstype -> ssize , ( ulong ) obj )"	1331:4:41317:41602	423575	11	True				
ANR	423675	CallExpression	"if_debug7m ( 'A' , mem , ""[a%d:+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , struct_type_name_string ( pstype ) , ( ulong ) num_elements * pstype -> ssize , num_elements , pstype -> ssize , ( ulong ) obj )"		423575	0					
ANR	423676	Callee	if_debug7m		423575	0					
ANR	423677	Identifier	if_debug7m		423575	0					
ANR	423678	ArgumentList	'A'		423575	1					
ANR	423679	Argument	'A'		423575	0					
ANR	423680	PrimaryExpression	'A'		423575	0					
ANR	423681	Argument	mem		423575	1					
ANR	423682	Identifier	mem		423575	0					
ANR	423683	Argument	"""[a%d:+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"""		423575	2					
ANR	423684	PrimaryExpression	"""[a%d:+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"""		423575	0					
ANR	423685	Argument	alloc_trace_space ( imem )		423575	3					
ANR	423686	CallExpression	alloc_trace_space ( imem )		423575	0					
ANR	423687	Callee	alloc_trace_space		423575	0					
ANR	423688	Identifier	alloc_trace_space		423575	0					
ANR	423689	ArgumentList	imem		423575	1					
ANR	423690	Argument	imem		423575	0					
ANR	423691	Identifier	imem		423575	0					
ANR	423692	Argument	client_name_string ( cname )		423575	4					
ANR	423693	CallExpression	client_name_string ( cname )		423575	0					
ANR	423694	Callee	client_name_string		423575	0					
ANR	423695	Identifier	client_name_string		423575	0					
ANR	423696	ArgumentList	cname		423575	1					
ANR	423697	Argument	cname		423575	0					
ANR	423698	Identifier	cname		423575	0					
ANR	423699	Argument	struct_type_name_string ( pstype )		423575	5					
ANR	423700	CallExpression	struct_type_name_string ( pstype )		423575	0					
ANR	423701	Callee	struct_type_name_string		423575	0					
ANR	423702	Identifier	struct_type_name_string		423575	0					
ANR	423703	ArgumentList	pstype		423575	1					
ANR	423704	Argument	pstype		423575	0					
ANR	423705	Identifier	pstype		423575	0					
ANR	423706	Argument	( ulong ) num_elements * pstype -> ssize		423575	6					
ANR	423707	MultiplicativeExpression	( ulong ) num_elements * pstype -> ssize		423575	0		*			
ANR	423708	CastExpression	( ulong ) num_elements		423575	0					
ANR	423709	CastTarget	ulong		423575	0					
ANR	423710	Identifier	num_elements		423575	1					
ANR	423711	PtrMemberAccess	pstype -> ssize		423575	1					
ANR	423712	Identifier	pstype		423575	0					
ANR	423713	Identifier	ssize		423575	1					
ANR	423714	Argument	num_elements		423575	7					
ANR	423715	Identifier	num_elements		423575	0					
ANR	423716	Argument	pstype -> ssize		423575	8					
ANR	423717	PtrMemberAccess	pstype -> ssize		423575	0					
ANR	423718	Identifier	pstype		423575	0					
ANR	423719	Identifier	ssize		423575	1					
ANR	423720	Argument	( ulong ) obj		423575	9					
ANR	423721	CastExpression	( ulong ) obj		423575	0					
ANR	423722	CastTarget	ulong		423575	0					
ANR	423723	Identifier	obj		423575	1					
ANR	423724	ReturnStatement	return ( char * ) obj ;	1336:4:41608:41626	423575	12	True				
ANR	423725	CastExpression	( char * ) obj		423575	0					
ANR	423726	CastTarget	char *		423575	0					
ANR	423727	Identifier	obj		423575	1					
ANR	423728	ReturnType	static void *		423575	1					
ANR	423729	Identifier	i_alloc_struct_array		423575	2					
ANR	423730	ParameterList	"gs_memory_t * mem , uint num_elements , gs_memory_type_ptr_t pstype , client_name_t cname"		423575	3					
ANR	423731	Parameter	gs_memory_t * mem	1309:21:40555:40571	423575	0	True				
ANR	423732	ParameterType	gs_memory_t *		423575	0					
ANR	423733	Identifier	mem		423575	1					
ANR	423734	Parameter	uint num_elements	1309:40:40574:40590	423575	1	True				
ANR	423735	ParameterType	uint		423575	0					
ANR	423736	Identifier	num_elements		423575	1					
ANR	423737	Parameter	gs_memory_type_ptr_t pstype	1310:21:40614:40640	423575	2	True				
ANR	423738	ParameterType	gs_memory_type_ptr_t		423575	0					
ANR	423739	Identifier	pstype		423575	1					
ANR	423740	Parameter	client_name_t cname	1310:50:40643:40661	423575	3	True				
ANR	423741	ParameterType	client_name_t		423575	0					
ANR	423742	Identifier	cname		423575	1					
ANR	423743	CFGEntryNode	ENTRY		423575		True				
ANR	423744	CFGExitNode	EXIT		423575		True				
ANR	423745	Symbol	pstype -> ssize		423575						
ANR	423746	Symbol	struct_type_name_string		423575						
ANR	423747	Symbol	NULL		423575						
ANR	423748	Symbol	pstype -> enum_ptrs		423575						
ANR	423749	Symbol	cname		423575						
ANR	423750	Symbol	false		423575						
ANR	423751	Symbol	alloc_array_check_size		423575						
ANR	423752	Symbol	lsize		423575						
ANR	423753	Symbol	ALLOC_DIRECT		423575						
ANR	423754	Symbol	basic_enum_ptrs		423575						
ANR	423755	Symbol	alloc_trace_space		423575						
ANR	423756	Symbol	* pstype		423575						
ANR	423757	Symbol	mem		423575						
ANR	423758	Symbol	pstype		423575						
ANR	423759	Symbol	pstype -> sname		423575						
ANR	423760	Symbol	num_elements		423575						
ANR	423761	Symbol	obj		423575						
ANR	423762	Symbol	client_name_string		423575						
ANR	423763	Symbol	alloc_obj		423575						
ANR	423764	Symbol	& lsize		423575						
ANR	423765	Symbol	imem		423575						
ANR	423766	Symbol	Memento_failThisEvent		423575						
ANR	423767	Function	i_alloc_struct_array_immovable	1338:0:41630:42497							
ANR	423768	FunctionDef	"i_alloc_struct_array_immovable (gs_memory_t * mem , uint num_elements , gs_memory_type_ptr_t pstype , client_name_t cname)"		423767	0					
ANR	423769	CompoundStatement		1341:0:41790:42497	423767	0					
ANR	423770	Statement	gs_ref_memory_t	1342:4:41796:41810	423767	0	True				
ANR	423771	Statement	*	1342:20:41812:41812	423767	1	True				
ANR	423772	Statement	const	1342:22:41814:41818	423767	2	True				
ANR	423773	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1342:28:41820:41849	423767	3	True				
ANR	423774	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		423767	0		=			
ANR	423775	Identifier	imem		423767	0					
ANR	423776	CastExpression	( gs_ref_memory_t * ) mem		423767	1					
ANR	423777	CastTarget	gs_ref_memory_t *		423767	0					
ANR	423778	Identifier	mem		423767	1					
ANR	423779	IdentifierDeclStatement	obj_header_t * obj ;	1343:4:41855:41872	423767	4	True				
ANR	423780	IdentifierDecl	* obj		423767	0					
ANR	423781	IdentifierDeclType	obj_header_t *		423767	0					
ANR	423782	Identifier	obj		423767	1					
ANR	423783	IdentifierDeclStatement	ulong lsize ;	1344:4:41878:41889	423767	5	True				
ANR	423784	IdentifierDecl	lsize		423767	0					
ANR	423785	IdentifierDeclType	ulong		423767	0					
ANR	423786	Identifier	lsize		423767	1					
ANR	423787	IfStatement	if ( Memento_failThisEvent ( ) )		423767	6					
ANR	423788	Condition	Memento_failThisEvent ( )	1346:8:41914:41936	423767	0	True				
ANR	423789	CallExpression	Memento_failThisEvent ( )		423767	0					
ANR	423790	Callee	Memento_failThisEvent		423767	0					
ANR	423791	Identifier	Memento_failThisEvent		423767	0					
ANR	423792	ArgumentList			423767	1					
ANR	423793	ReturnStatement	return NULL ;	1347:8:41947:41958	423767	1	True				
ANR	423794	Identifier	NULL		423767	0					
ANR	423795	ExpressionStatement	"ALLOC_CHECK_SIZE ( mem , pstype )"	1350:4:41972:42000	423767	7	True				
ANR	423796	CallExpression	"ALLOC_CHECK_SIZE ( mem , pstype )"		423767	0					
ANR	423797	Callee	ALLOC_CHECK_SIZE		423767	0					
ANR	423798	Identifier	ALLOC_CHECK_SIZE		423767	0					
ANR	423799	ArgumentList	mem		423767	1					
ANR	423800	Argument	mem		423767	0					
ANR	423801	Identifier	mem		423767	0					
ANR	423802	Argument	pstype		423767	1					
ANR	423803	Identifier	pstype		423767	0					
ANR	423804	IfStatement	"if ( alloc_array_check_size ( num_elements , pstype -> ssize , & lsize ) == false )"		423767	8					
ANR	423805	Condition	"alloc_array_check_size ( num_elements , pstype -> ssize , & lsize ) == false"	1351:8:42010:42077	423767	0	True				
ANR	423806	EqualityExpression	"alloc_array_check_size ( num_elements , pstype -> ssize , & lsize ) == false"		423767	0		==			
ANR	423807	CallExpression	"alloc_array_check_size ( num_elements , pstype -> ssize , & lsize )"		423767	0					
ANR	423808	Callee	alloc_array_check_size		423767	0					
ANR	423809	Identifier	alloc_array_check_size		423767	0					
ANR	423810	ArgumentList	num_elements		423767	1					
ANR	423811	Argument	num_elements		423767	0					
ANR	423812	Identifier	num_elements		423767	0					
ANR	423813	Argument	pstype -> ssize		423767	1					
ANR	423814	PtrMemberAccess	pstype -> ssize		423767	0					
ANR	423815	Identifier	pstype		423767	0					
ANR	423816	Identifier	ssize		423767	1					
ANR	423817	Argument	& lsize		423767	2					
ANR	423818	UnaryOperationExpression	& lsize		423767	0					
ANR	423819	UnaryOperator	&		423767	0					
ANR	423820	Identifier	lsize		423767	1					
ANR	423821	Identifier	false		423767	1					
ANR	423822	ReturnStatement	return NULL ;	1352:8:42088:42099	423767	1	True				
ANR	423823	Identifier	NULL		423767	0					
ANR	423824	ExpressionStatement	"obj = alloc_obj ( imem , lsize , pstype , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"	1353:4:42105:42180	423767	9	True				
ANR	423825	AssignmentExpression	"obj = alloc_obj ( imem , lsize , pstype , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		423767	0		=			
ANR	423826	Identifier	obj		423767	0					
ANR	423827	CallExpression	"alloc_obj ( imem , lsize , pstype , ALLOC_IMMOVABLE | ALLOC_DIRECT , cname )"		423767	1					
ANR	423828	Callee	alloc_obj		423767	0					
ANR	423829	Identifier	alloc_obj		423767	0					
ANR	423830	ArgumentList	imem		423767	1					
ANR	423831	Argument	imem		423767	0					
ANR	423832	Identifier	imem		423767	0					
ANR	423833	Argument	lsize		423767	1					
ANR	423834	Identifier	lsize		423767	0					
ANR	423835	Argument	pstype		423767	2					
ANR	423836	Identifier	pstype		423767	0					
ANR	423837	Argument	ALLOC_IMMOVABLE | ALLOC_DIRECT		423767	3					
ANR	423838	InclusiveOrExpression	ALLOC_IMMOVABLE | ALLOC_DIRECT		423767	0		|			
ANR	423839	Identifier	ALLOC_IMMOVABLE		423767	0					
ANR	423840	Identifier	ALLOC_DIRECT		423767	1					
ANR	423841	Argument	cname		423767	4					
ANR	423842	Identifier	cname		423767	0					
ANR	423843	ExpressionStatement	"if_debug7m ( 'A' , mem , ""[a%d|+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , struct_type_name_string ( pstype ) , ( ulong ) num_elements * pstype -> ssize , num_elements , pstype -> ssize , ( ulong ) obj )"	1354:4:42186:42471	423767	10	True				
ANR	423844	CallExpression	"if_debug7m ( 'A' , mem , ""[a%d|+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , struct_type_name_string ( pstype ) , ( ulong ) num_elements * pstype -> ssize , num_elements , pstype -> ssize , ( ulong ) obj )"		423767	0					
ANR	423845	Callee	if_debug7m		423767	0					
ANR	423846	Identifier	if_debug7m		423767	0					
ANR	423847	ArgumentList	'A'		423767	1					
ANR	423848	Argument	'A'		423767	0					
ANR	423849	PrimaryExpression	'A'		423767	0					
ANR	423850	Argument	mem		423767	1					
ANR	423851	Identifier	mem		423767	0					
ANR	423852	Argument	"""[a%d|+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"""		423767	2					
ANR	423853	PrimaryExpression	"""[a%d|+<.]%s %s*(%lu=%u*%u) = 0x%lx\\n"""		423767	0					
ANR	423854	Argument	alloc_trace_space ( imem )		423767	3					
ANR	423855	CallExpression	alloc_trace_space ( imem )		423767	0					
ANR	423856	Callee	alloc_trace_space		423767	0					
ANR	423857	Identifier	alloc_trace_space		423767	0					
ANR	423858	ArgumentList	imem		423767	1					
ANR	423859	Argument	imem		423767	0					
ANR	423860	Identifier	imem		423767	0					
ANR	423861	Argument	client_name_string ( cname )		423767	4					
ANR	423862	CallExpression	client_name_string ( cname )		423767	0					
ANR	423863	Callee	client_name_string		423767	0					
ANR	423864	Identifier	client_name_string		423767	0					
ANR	423865	ArgumentList	cname		423767	1					
ANR	423866	Argument	cname		423767	0					
ANR	423867	Identifier	cname		423767	0					
ANR	423868	Argument	struct_type_name_string ( pstype )		423767	5					
ANR	423869	CallExpression	struct_type_name_string ( pstype )		423767	0					
ANR	423870	Callee	struct_type_name_string		423767	0					
ANR	423871	Identifier	struct_type_name_string		423767	0					
ANR	423872	ArgumentList	pstype		423767	1					
ANR	423873	Argument	pstype		423767	0					
ANR	423874	Identifier	pstype		423767	0					
ANR	423875	Argument	( ulong ) num_elements * pstype -> ssize		423767	6					
ANR	423876	MultiplicativeExpression	( ulong ) num_elements * pstype -> ssize		423767	0		*			
ANR	423877	CastExpression	( ulong ) num_elements		423767	0					
ANR	423878	CastTarget	ulong		423767	0					
ANR	423879	Identifier	num_elements		423767	1					
ANR	423880	PtrMemberAccess	pstype -> ssize		423767	1					
ANR	423881	Identifier	pstype		423767	0					
ANR	423882	Identifier	ssize		423767	1					
ANR	423883	Argument	num_elements		423767	7					
ANR	423884	Identifier	num_elements		423767	0					
ANR	423885	Argument	pstype -> ssize		423767	8					
ANR	423886	PtrMemberAccess	pstype -> ssize		423767	0					
ANR	423887	Identifier	pstype		423767	0					
ANR	423888	Identifier	ssize		423767	1					
ANR	423889	Argument	( ulong ) obj		423767	9					
ANR	423890	CastExpression	( ulong ) obj		423767	0					
ANR	423891	CastTarget	ulong		423767	0					
ANR	423892	Identifier	obj		423767	1					
ANR	423893	ReturnStatement	return ( char * ) obj ;	1359:4:42477:42495	423767	11	True				
ANR	423894	CastExpression	( char * ) obj		423767	0					
ANR	423895	CastTarget	char *		423767	0					
ANR	423896	Identifier	obj		423767	1					
ANR	423897	ReturnType	static void *		423767	1					
ANR	423898	Identifier	i_alloc_struct_array_immovable		423767	2					
ANR	423899	ParameterList	"gs_memory_t * mem , uint num_elements , gs_memory_type_ptr_t pstype , client_name_t cname"		423767	3					
ANR	423900	Parameter	gs_memory_t * mem	1339:31:41675:41691	423767	0	True				
ANR	423901	ParameterType	gs_memory_t *		423767	0					
ANR	423902	Identifier	mem		423767	1					
ANR	423903	Parameter	uint num_elements	1339:50:41694:41710	423767	1	True				
ANR	423904	ParameterType	uint		423767	0					
ANR	423905	Identifier	num_elements		423767	1					
ANR	423906	Parameter	gs_memory_type_ptr_t pstype	1340:27:41740:41766	423767	2	True				
ANR	423907	ParameterType	gs_memory_type_ptr_t		423767	0					
ANR	423908	Identifier	pstype		423767	1					
ANR	423909	Parameter	client_name_t cname	1340:56:41769:41787	423767	3	True				
ANR	423910	ParameterType	client_name_t		423767	0					
ANR	423911	Identifier	cname		423767	1					
ANR	423912	CFGEntryNode	ENTRY		423767		True				
ANR	423913	CFGExitNode	EXIT		423767		True				
ANR	423914	Symbol	pstype -> ssize		423767						
ANR	423915	Symbol	struct_type_name_string		423767						
ANR	423916	Symbol	NULL		423767						
ANR	423917	Symbol	cname		423767						
ANR	423918	Symbol	false		423767						
ANR	423919	Symbol	ALLOC_IMMOVABLE		423767						
ANR	423920	Symbol	alloc_array_check_size		423767						
ANR	423921	Symbol	lsize		423767						
ANR	423922	Symbol	ALLOC_DIRECT		423767						
ANR	423923	Symbol	alloc_trace_space		423767						
ANR	423924	Symbol	* pstype		423767						
ANR	423925	Symbol	mem		423767						
ANR	423926	Symbol	pstype		423767						
ANR	423927	Symbol	num_elements		423767						
ANR	423928	Symbol	obj		423767						
ANR	423929	Symbol	client_name_string		423767						
ANR	423930	Symbol	alloc_obj		423767						
ANR	423931	Symbol	& lsize		423767						
ANR	423932	Symbol	imem		423767						
ANR	423933	Symbol	Memento_failThisEvent		423767						
ANR	423934	Function	i_resize_object	1361:0:42499:44448							
ANR	423935	FunctionDef	"i_resize_object (gs_memory_t * mem , void * obj , uint new_num_elements , client_name_t cname)"		423934	0					
ANR	423936	CompoundStatement		1364:0:42619:44448	423934	0					
ANR	423937	Statement	gs_ref_memory_t	1365:4:42625:42639	423934	0	True				
ANR	423938	Statement	*	1365:20:42641:42641	423934	1	True				
ANR	423939	Statement	const	1365:22:42643:42647	423934	2	True				
ANR	423940	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1365:28:42649:42678	423934	3	True				
ANR	423941	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		423934	0		=			
ANR	423942	Identifier	imem		423934	0					
ANR	423943	CastExpression	( gs_ref_memory_t * ) mem		423934	1					
ANR	423944	CastTarget	gs_ref_memory_t *		423934	0					
ANR	423945	Identifier	mem		423934	1					
ANR	423946	IdentifierDeclStatement	obj_header_t * pp = ( obj_header_t * ) obj - 1 ;	1366:4:42684:42727	423934	4	True				
ANR	423947	IdentifierDecl	* pp = ( obj_header_t * ) obj - 1		423934	0					
ANR	423948	IdentifierDeclType	obj_header_t *		423934	0					
ANR	423949	Identifier	pp		423934	1					
ANR	423950	AssignmentExpression	* pp = ( obj_header_t * ) obj - 1		423934	2		=			
ANR	423951	Identifier	pp		423934	0					
ANR	423952	AdditiveExpression	( obj_header_t * ) obj - 1		423934	1		-			
ANR	423953	CastExpression	( obj_header_t * ) obj		423934	0					
ANR	423954	CastTarget	obj_header_t *		423934	0					
ANR	423955	Identifier	obj		423934	1					
ANR	423956	PrimaryExpression	1		423934	1					
ANR	423957	IdentifierDeclStatement	gs_memory_type_ptr_t pstype = pp -> o_type ;	1367:4:42733:42773	423934	5	True				
ANR	423958	IdentifierDecl	pstype = pp -> o_type		423934	0					
ANR	423959	IdentifierDeclType	gs_memory_type_ptr_t		423934	0					
ANR	423960	Identifier	pstype		423934	1					
ANR	423961	AssignmentExpression	pstype = pp -> o_type		423934	2		=			
ANR	423962	Identifier	pstype		423934	0					
ANR	423963	PtrMemberAccess	pp -> o_type		423934	1					
ANR	423964	Identifier	pp		423934	0					
ANR	423965	Identifier	o_type		423934	1					
ANR	423966	IdentifierDeclStatement	ulong old_size = pre_obj_contents_size ( pp ) ;	1368:4:42779:42821	423934	6	True				
ANR	423967	IdentifierDecl	old_size = pre_obj_contents_size ( pp )		423934	0					
ANR	423968	IdentifierDeclType	ulong		423934	0					
ANR	423969	Identifier	old_size		423934	1					
ANR	423970	AssignmentExpression	old_size = pre_obj_contents_size ( pp )		423934	2		=			
ANR	423971	Identifier	old_size		423934	0					
ANR	423972	CallExpression	pre_obj_contents_size ( pp )		423934	1					
ANR	423973	Callee	pre_obj_contents_size		423934	0					
ANR	423974	Identifier	pre_obj_contents_size		423934	0					
ANR	423975	ArgumentList	pp		423934	1					
ANR	423976	Argument	pp		423934	0					
ANR	423977	Identifier	pp		423934	0					
ANR	423978	IdentifierDeclStatement	ulong new_size = ( ulong ) pstype -> ssize * new_num_elements ;	1369:4:42827:42884	423934	7	True				
ANR	423979	IdentifierDecl	new_size = ( ulong ) pstype -> ssize * new_num_elements		423934	0					
ANR	423980	IdentifierDeclType	ulong		423934	0					
ANR	423981	Identifier	new_size		423934	1					
ANR	423982	AssignmentExpression	new_size = ( ulong ) pstype -> ssize * new_num_elements		423934	2		=			
ANR	423983	Identifier	new_size		423934	0					
ANR	423984	MultiplicativeExpression	( ulong ) pstype -> ssize * new_num_elements		423934	1		*			
ANR	423985	CastExpression	( ulong ) pstype -> ssize		423934	0					
ANR	423986	CastTarget	ulong		423934	0					
ANR	423987	PtrMemberAccess	pstype -> ssize		423934	1					
ANR	423988	Identifier	pstype		423934	0					
ANR	423989	Identifier	ssize		423934	1					
ANR	423990	Identifier	new_num_elements		423934	1					
ANR	423991	IdentifierDeclStatement	ulong old_size_rounded = obj_align_round ( old_size ) ;	1370:4:42890:42940	423934	8	True				
ANR	423992	IdentifierDecl	old_size_rounded = obj_align_round ( old_size )		423934	0					
ANR	423993	IdentifierDeclType	ulong		423934	0					
ANR	423994	Identifier	old_size_rounded		423934	1					
ANR	423995	AssignmentExpression	old_size_rounded = obj_align_round ( old_size )		423934	2		=			
ANR	423996	Identifier	old_size_rounded		423934	0					
ANR	423997	CallExpression	obj_align_round ( old_size )		423934	1					
ANR	423998	Callee	obj_align_round		423934	0					
ANR	423999	Identifier	obj_align_round		423934	0					
ANR	424000	ArgumentList	old_size		423934	1					
ANR	424001	Argument	old_size		423934	0					
ANR	424002	Identifier	old_size		423934	0					
ANR	424003	IdentifierDeclStatement	ulong new_size_rounded = obj_align_round ( new_size ) ;	1371:4:42946:42996	423934	9	True				
ANR	424004	IdentifierDecl	new_size_rounded = obj_align_round ( new_size )		423934	0					
ANR	424005	IdentifierDeclType	ulong		423934	0					
ANR	424006	Identifier	new_size_rounded		423934	1					
ANR	424007	AssignmentExpression	new_size_rounded = obj_align_round ( new_size )		423934	2		=			
ANR	424008	Identifier	new_size_rounded		423934	0					
ANR	424009	CallExpression	obj_align_round ( new_size )		423934	1					
ANR	424010	Callee	obj_align_round		423934	0					
ANR	424011	Identifier	obj_align_round		423934	0					
ANR	424012	ArgumentList	new_size		423934	1					
ANR	424013	Argument	new_size		423934	0					
ANR	424014	Identifier	new_size		423934	0					
ANR	424015	IdentifierDeclStatement	void * new_obj = NULL ;	1372:4:43002:43022	423934	10	True				
ANR	424016	IdentifierDecl	* new_obj = NULL		423934	0					
ANR	424017	IdentifierDeclType	void *		423934	0					
ANR	424018	Identifier	new_obj		423934	1					
ANR	424019	AssignmentExpression	* new_obj = NULL		423934	2		=			
ANR	424020	Identifier	NULL		423934	0					
ANR	424021	Identifier	NULL		423934	1					
ANR	424022	IfStatement	if ( Memento_failThisEvent ( ) )		423934	11					
ANR	424023	Condition	Memento_failThisEvent ( )	1375:8:43048:43070	423934	0	True				
ANR	424024	CallExpression	Memento_failThisEvent ( )		423934	0					
ANR	424025	Callee	Memento_failThisEvent		423934	0					
ANR	424026	Identifier	Memento_failThisEvent		423934	0					
ANR	424027	ArgumentList			423934	1					
ANR	424028	ReturnStatement	return NULL ;	1376:8:43081:43092	423934	1	True				
ANR	424029	Identifier	NULL		423934	0					
ANR	424030	IfStatement	if ( old_size_rounded == new_size_rounded )		423934	12					
ANR	424031	Condition	old_size_rounded == new_size_rounded	1379:8:43110:43145	423934	0	True				
ANR	424032	EqualityExpression	old_size_rounded == new_size_rounded		423934	0		==			
ANR	424033	Identifier	old_size_rounded		423934	0					
ANR	424034	Identifier	new_size_rounded		423934	1					
ANR	424035	CompoundStatement		16:46:528:528	423934	1					
ANR	424036	ExpressionStatement	pp -> o_size = new_size	1380:8:43158:43179	423934	0	True				
ANR	424037	AssignmentExpression	pp -> o_size = new_size		423934	0		=			
ANR	424038	PtrMemberAccess	pp -> o_size		423934	0					
ANR	424039	Identifier	pp		423934	0					
ANR	424040	Identifier	o_size		423934	1					
ANR	424041	Identifier	new_size		423934	1					
ANR	424042	ExpressionStatement	new_obj = obj	1381:8:43189:43202	423934	1	True				
ANR	424043	AssignmentExpression	new_obj = obj		423934	0		=			
ANR	424044	Identifier	new_obj		423934	0					
ANR	424045	Identifier	obj		423934	1					
ANR	424046	ElseStatement	else		423934	0					
ANR	424047	IfStatement	if ( imem -> cc && ( byte * ) obj + old_size_rounded == imem -> cc -> cbot && imem -> cc -> ctop - ( byte * ) obj >= new_size_rounded )		423934	0					
ANR	424048	Condition	imem -> cc && ( byte * ) obj + old_size_rounded == imem -> cc -> cbot && imem -> cc -> ctop - ( byte * ) obj >= new_size_rounded	1383:12:43227:43350	423934	0	True				
ANR	424049	AndExpression	imem -> cc && ( byte * ) obj + old_size_rounded == imem -> cc -> cbot && imem -> cc -> ctop - ( byte * ) obj >= new_size_rounded		423934	0		&&			
ANR	424050	PtrMemberAccess	imem -> cc		423934	0					
ANR	424051	Identifier	imem		423934	0					
ANR	424052	Identifier	cc		423934	1					
ANR	424053	AndExpression	( byte * ) obj + old_size_rounded == imem -> cc -> cbot && imem -> cc -> ctop - ( byte * ) obj >= new_size_rounded		423934	1		&&			
ANR	424054	EqualityExpression	( byte * ) obj + old_size_rounded == imem -> cc -> cbot		423934	0		==			
ANR	424055	AdditiveExpression	( byte * ) obj + old_size_rounded		423934	0		+			
ANR	424056	CastExpression	( byte * ) obj		423934	0					
ANR	424057	CastTarget	byte *		423934	0					
ANR	424058	Identifier	obj		423934	1					
ANR	424059	Identifier	old_size_rounded		423934	1					
ANR	424060	PtrMemberAccess	imem -> cc -> cbot		423934	1					
ANR	424061	PtrMemberAccess	imem -> cc		423934	0					
ANR	424062	Identifier	imem		423934	0					
ANR	424063	Identifier	cc		423934	1					
ANR	424064	Identifier	cbot		423934	1					
ANR	424065	RelationalExpression	imem -> cc -> ctop - ( byte * ) obj >= new_size_rounded		423934	1		>=			
ANR	424066	AdditiveExpression	imem -> cc -> ctop - ( byte * ) obj		423934	0		-			
ANR	424067	PtrMemberAccess	imem -> cc -> ctop		423934	0					
ANR	424068	PtrMemberAccess	imem -> cc		423934	0					
ANR	424069	Identifier	imem		423934	0					
ANR	424070	Identifier	cc		423934	1					
ANR	424071	Identifier	ctop		423934	1					
ANR	424072	CastExpression	( byte * ) obj		423934	1					
ANR	424073	CastTarget	byte *		423934	0					
ANR	424074	Identifier	obj		423934	1					
ANR	424075	Identifier	new_size_rounded		423934	1					
ANR	424076	CompoundStatement		21:63:734:734	423934	1					
ANR	424077	ExpressionStatement	imem -> cc -> cbot = ( byte * ) obj + new_size_rounded	1385:12:43368:43415	423934	0	True				
ANR	424078	AssignmentExpression	imem -> cc -> cbot = ( byte * ) obj + new_size_rounded		423934	0		=			
ANR	424079	PtrMemberAccess	imem -> cc -> cbot		423934	0					
ANR	424080	PtrMemberAccess	imem -> cc		423934	0					
ANR	424081	Identifier	imem		423934	0					
ANR	424082	Identifier	cc		423934	1					
ANR	424083	Identifier	cbot		423934	1					
ANR	424084	AdditiveExpression	( byte * ) obj + new_size_rounded		423934	1		+			
ANR	424085	CastExpression	( byte * ) obj		423934	0					
ANR	424086	CastTarget	byte *		423934	0					
ANR	424087	Identifier	obj		423934	1					
ANR	424088	Identifier	new_size_rounded		423934	1					
ANR	424089	ExpressionStatement	pp -> o_size = new_size	1386:12:43429:43450	423934	1	True				
ANR	424090	AssignmentExpression	pp -> o_size = new_size		423934	0		=			
ANR	424091	PtrMemberAccess	pp -> o_size		423934	0					
ANR	424092	Identifier	pp		423934	0					
ANR	424093	Identifier	o_size		423934	1					
ANR	424094	Identifier	new_size		423934	1					
ANR	424095	ExpressionStatement	new_obj = obj	1387:12:43464:43477	423934	2	True				
ANR	424096	AssignmentExpression	new_obj = obj		423934	0		=			
ANR	424097	Identifier	new_obj		423934	0					
ANR	424098	Identifier	obj		423934	1					
ANR	424099	ElseStatement	else		423934	0					
ANR	424100	IfStatement	if ( new_size_rounded + sizeof ( obj_header_t ) <= old_size_rounded )		423934	0					
ANR	424101	Condition	new_size_rounded + sizeof ( obj_header_t ) <= old_size_rounded	1389:16:43579:43637	423934	0	True				
ANR	424102	RelationalExpression	new_size_rounded + sizeof ( obj_header_t ) <= old_size_rounded		423934	0		<=			
ANR	424103	AdditiveExpression	new_size_rounded + sizeof ( obj_header_t )		423934	0		+			
ANR	424104	Identifier	new_size_rounded		423934	0					
ANR	424105	SizeofExpression	sizeof ( obj_header_t )		423934	1					
ANR	424106	Sizeof	sizeof		423934	0					
ANR	424107	SizeofOperand	obj_header_t		423934	1					
ANR	424108	Identifier	old_size_rounded		423934	1					
ANR	424109	CompoundStatement		26:77:1020:1020	423934	1					
ANR	424110	ExpressionStatement	"trim_obj ( imem , obj , new_size , ( clump_t * ) 0 )"	1390:16:43658:43701	423934	0	True				
ANR	424111	CallExpression	"trim_obj ( imem , obj , new_size , ( clump_t * ) 0 )"		423934	0					
ANR	424112	Callee	trim_obj		423934	0					
ANR	424113	Identifier	trim_obj		423934	0					
ANR	424114	ArgumentList	imem		423934	1					
ANR	424115	Argument	imem		423934	0					
ANR	424116	Identifier	imem		423934	0					
ANR	424117	Argument	obj		423934	1					
ANR	424118	Identifier	obj		423934	0					
ANR	424119	Argument	new_size		423934	2					
ANR	424120	Identifier	new_size		423934	0					
ANR	424121	Argument	( clump_t * ) 0		423934	3					
ANR	424122	CastExpression	( clump_t * ) 0		423934	0					
ANR	424123	CastTarget	clump_t *		423934	0					
ANR	424124	PrimaryExpression	0		423934	1					
ANR	424125	ExpressionStatement	new_obj = obj	1391:16:43719:43732	423934	1	True				
ANR	424126	AssignmentExpression	new_obj = obj		423934	0		=			
ANR	424127	Identifier	new_obj		423934	0					
ANR	424128	Identifier	obj		423934	1					
ANR	424129	IfStatement	if ( new_obj )		423934	13					
ANR	424130	Condition	new_obj	1393:8:43756:43762	423934	0	True				
ANR	424131	Identifier	new_obj		423934	0					
ANR	424132	CompoundStatement		30:17:1145:1145	423934	1					
ANR	424133	ExpressionStatement	"if_debug8m ( 'A' , mem , ""[a%d:%c%c ]%s %s(%lu=>%lu) 0x%lx\\n"" , alloc_trace_space ( imem ) , ( new_size > old_size ? '>' : '<' ) , ( pstype == & st_bytes ? 'b' : '<' ) , client_name_string ( cname ) , struct_type_name_string ( pstype ) , old_size , new_size , ( ulong ) obj )"	1394:8:43775:44135	423934	0	True				
ANR	424134	CallExpression	"if_debug8m ( 'A' , mem , ""[a%d:%c%c ]%s %s(%lu=>%lu) 0x%lx\\n"" , alloc_trace_space ( imem ) , ( new_size > old_size ? '>' : '<' ) , ( pstype == & st_bytes ? 'b' : '<' ) , client_name_string ( cname ) , struct_type_name_string ( pstype ) , old_size , new_size , ( ulong ) obj )"		423934	0					
ANR	424135	Callee	if_debug8m		423934	0					
ANR	424136	Identifier	if_debug8m		423934	0					
ANR	424137	ArgumentList	'A'		423934	1					
ANR	424138	Argument	'A'		423934	0					
ANR	424139	PrimaryExpression	'A'		423934	0					
ANR	424140	Argument	mem		423934	1					
ANR	424141	Identifier	mem		423934	0					
ANR	424142	Argument	"""[a%d:%c%c ]%s %s(%lu=>%lu) 0x%lx\\n"""		423934	2					
ANR	424143	PrimaryExpression	"""[a%d:%c%c ]%s %s(%lu=>%lu) 0x%lx\\n"""		423934	0					
ANR	424144	Argument	alloc_trace_space ( imem )		423934	3					
ANR	424145	CallExpression	alloc_trace_space ( imem )		423934	0					
ANR	424146	Callee	alloc_trace_space		423934	0					
ANR	424147	Identifier	alloc_trace_space		423934	0					
ANR	424148	ArgumentList	imem		423934	1					
ANR	424149	Argument	imem		423934	0					
ANR	424150	Identifier	imem		423934	0					
ANR	424151	Argument	new_size > old_size ? '>' : '<'		423934	4					
ANR	424152	ConditionalExpression	new_size > old_size ? '>' : '<'		423934	0					
ANR	424153	Condition	new_size > old_size		423934	0					
ANR	424154	RelationalExpression	new_size > old_size		423934	0		>			
ANR	424155	Identifier	new_size		423934	0					
ANR	424156	Identifier	old_size		423934	1					
ANR	424157	PrimaryExpression	'>'		423934	1					
ANR	424158	PrimaryExpression	'<'		423934	2					
ANR	424159	Argument	pstype == & st_bytes ? 'b' : '<'		423934	5					
ANR	424160	ConditionalExpression	pstype == & st_bytes ? 'b' : '<'		423934	0					
ANR	424161	Condition	pstype == & st_bytes		423934	0					
ANR	424162	EqualityExpression	pstype == & st_bytes		423934	0		==			
ANR	424163	Identifier	pstype		423934	0					
ANR	424164	UnaryOperationExpression	& st_bytes		423934	1					
ANR	424165	UnaryOperator	&		423934	0					
ANR	424166	Identifier	st_bytes		423934	1					
ANR	424167	PrimaryExpression	'b'		423934	1					
ANR	424168	PrimaryExpression	'<'		423934	2					
ANR	424169	Argument	client_name_string ( cname )		423934	6					
ANR	424170	CallExpression	client_name_string ( cname )		423934	0					
ANR	424171	Callee	client_name_string		423934	0					
ANR	424172	Identifier	client_name_string		423934	0					
ANR	424173	ArgumentList	cname		423934	1					
ANR	424174	Argument	cname		423934	0					
ANR	424175	Identifier	cname		423934	0					
ANR	424176	Argument	struct_type_name_string ( pstype )		423934	7					
ANR	424177	CallExpression	struct_type_name_string ( pstype )		423934	0					
ANR	424178	Callee	struct_type_name_string		423934	0					
ANR	424179	Identifier	struct_type_name_string		423934	0					
ANR	424180	ArgumentList	pstype		423934	1					
ANR	424181	Argument	pstype		423934	0					
ANR	424182	Identifier	pstype		423934	0					
ANR	424183	Argument	old_size		423934	8					
ANR	424184	Identifier	old_size		423934	0					
ANR	424185	Argument	new_size		423934	9					
ANR	424186	Identifier	new_size		423934	0					
ANR	424187	Argument	( ulong ) obj		423934	10					
ANR	424188	CastExpression	( ulong ) obj		423934	0					
ANR	424189	CastTarget	ulong		423934	0					
ANR	424190	Identifier	obj		423934	1					
ANR	424191	ReturnStatement	return new_obj ;	1401:8:44145:44159	423934	1	True				
ANR	424192	Identifier	new_obj		423934	0					
ANR	424193	Statement	new_obj	1404:4:44187:44193	423934	14	True				
ANR	424194	Statement	=	1404:12:44195:44195	423934	15	True				
ANR	424195	Statement	gs_alloc_struct_array	1404:14:44197:44217	423934	16	True				
ANR	424196	Statement	(	1404:35:44218:44218	423934	17	True				
ANR	424197	Statement	mem	1404:36:44219:44221	423934	18	True				
ANR	424198	Statement	","	1404:39:44222:44222	423934	19	True				
ANR	424199	Statement	new_num_elements	1404:41:44224:44239	423934	20	True				
ANR	424200	Statement	","	1404:57:44240:44240	423934	21	True				
ANR	424201	Statement	void	1404:59:44242:44245	423934	22	True				
ANR	424202	Statement	","	1404:63:44246:44246	423934	23	True				
ANR	424203	Statement	pstype	1405:36:44284:44289	423934	24	True				
ANR	424204	Statement	","	1405:42:44290:44290	423934	25	True				
ANR	424205	Statement	cname	1405:44:44292:44296	423934	26	True				
ANR	424206	Statement	)	1405:49:44297:44297	423934	27	True				
ANR	424207	ExpressionStatement		1405:50:44298:44298	423934	28	True				
ANR	424208	IfStatement	if ( new_obj == 0 )		423934	29					
ANR	424209	Condition	new_obj == 0	1406:8:44308:44319	423934	0	True				
ANR	424210	EqualityExpression	new_obj == 0		423934	0		==			
ANR	424211	Identifier	new_obj		423934	0					
ANR	424212	PrimaryExpression	0		423934	1					
ANR	424213	ReturnStatement	return 0 ;	1407:8:44330:44338	423934	1	True				
ANR	424214	PrimaryExpression	0		423934	0					
ANR	424215	ExpressionStatement	"memcpy ( new_obj , obj , min ( old_size , new_size ) )"	1408:4:44344:44389	423934	30	True				
ANR	424216	CallExpression	"memcpy ( new_obj , obj , min ( old_size , new_size ) )"		423934	0					
ANR	424217	Callee	memcpy		423934	0					
ANR	424218	Identifier	memcpy		423934	0					
ANR	424219	ArgumentList	new_obj		423934	1					
ANR	424220	Argument	new_obj		423934	0					
ANR	424221	Identifier	new_obj		423934	0					
ANR	424222	Argument	obj		423934	1					
ANR	424223	Identifier	obj		423934	0					
ANR	424224	Argument	"min ( old_size , new_size )"		423934	2					
ANR	424225	CallExpression	"min ( old_size , new_size )"		423934	0					
ANR	424226	Callee	min		423934	0					
ANR	424227	Identifier	min		423934	0					
ANR	424228	ArgumentList	old_size		423934	1					
ANR	424229	Argument	old_size		423934	0					
ANR	424230	Identifier	old_size		423934	0					
ANR	424231	Argument	new_size		423934	1					
ANR	424232	Identifier	new_size		423934	0					
ANR	424233	ExpressionStatement	"gs_free_object ( mem , obj , cname )"	1409:4:44395:44426	423934	31	True				
ANR	424234	CallExpression	"gs_free_object ( mem , obj , cname )"		423934	0					
ANR	424235	Callee	gs_free_object		423934	0					
ANR	424236	Identifier	gs_free_object		423934	0					
ANR	424237	ArgumentList	mem		423934	1					
ANR	424238	Argument	mem		423934	0					
ANR	424239	Identifier	mem		423934	0					
ANR	424240	Argument	obj		423934	1					
ANR	424241	Identifier	obj		423934	0					
ANR	424242	Argument	cname		423934	2					
ANR	424243	Identifier	cname		423934	0					
ANR	424244	ReturnStatement	return new_obj ;	1410:4:44432:44446	423934	32	True				
ANR	424245	Identifier	new_obj		423934	0					
ANR	424246	ReturnType	static void *		423934	1					
ANR	424247	Identifier	i_resize_object		423934	2					
ANR	424248	ParameterList	"gs_memory_t * mem , void * obj , uint new_num_elements , client_name_t cname"		423934	3					
ANR	424249	Parameter	gs_memory_t * mem	1362:16:42529:42545	423934	0	True				
ANR	424250	ParameterType	gs_memory_t *		423934	0					
ANR	424251	Identifier	mem		423934	1					
ANR	424252	Parameter	void * obj	1362:35:42548:42556	423934	1	True				
ANR	424253	ParameterType	void *		423934	0					
ANR	424254	Identifier	obj		423934	1					
ANR	424255	Parameter	uint new_num_elements	1362:46:42559:42579	423934	2	True				
ANR	424256	ParameterType	uint		423934	0					
ANR	424257	Identifier	new_num_elements		423934	1					
ANR	424258	Parameter	client_name_t cname	1363:16:42598:42616	423934	3	True				
ANR	424259	ParameterType	client_name_t		423934	0					
ANR	424260	Identifier	cname		423934	1					
ANR	424261	CFGEntryNode	ENTRY		423934		True				
ANR	424262	CFGExitNode	EXIT		423934		True				
ANR	424263	Symbol	pp		423934						
ANR	424264	Symbol	pstype -> ssize		423934						
ANR	424265	Symbol	old_size		423934						
ANR	424266	Symbol	obj_align_round		423934						
ANR	424267	Symbol	cname		423934						
ANR	424268	Symbol	imem -> cc		423934						
ANR	424269	Symbol	alloc_trace_space		423934						
ANR	424270	Symbol	* pstype		423934						
ANR	424271	Symbol	min		423934						
ANR	424272	Symbol	mem		423934						
ANR	424273	Symbol	pstype		423934						
ANR	424274	Symbol	new_size		423934						
ANR	424275	Symbol	old_size_rounded		423934						
ANR	424276	Symbol	new_obj		423934						
ANR	424277	Symbol	new_size_rounded		423934						
ANR	424278	Symbol	pre_obj_contents_size		423934						
ANR	424279	Symbol	* imem -> cc		423934						
ANR	424280	Symbol	* imem		423934						
ANR	424281	Symbol	pp -> o_type		423934						
ANR	424282	Symbol	Memento_failThisEvent		423934						
ANR	424283	Symbol	* * imem		423934						
ANR	424284	Symbol	struct_type_name_string		423934						
ANR	424285	Symbol	NULL		423934						
ANR	424286	Symbol	* pp		423934						
ANR	424287	Symbol	imem -> cc -> ctop		423934						
ANR	424288	Symbol	pp -> o_size		423934						
ANR	424289	Symbol	& st_bytes		423934						
ANR	424290	Symbol	new_num_elements		423934						
ANR	424291	Symbol	obj		423934						
ANR	424292	Symbol	imem -> cc -> cbot		423934						
ANR	424293	Symbol	client_name_string		423934						
ANR	424294	Symbol	imem		423934						
ANR	424295	Function	i_free_object	1412:0:44450:50539							
ANR	424296	FunctionDef	"i_free_object (gs_memory_t * mem , void * ptr , client_name_t cname)"		424295	0					
ANR	424297	CompoundStatement		1414:0:44527:50539	424295	0					
ANR	424298	Statement	gs_ref_memory_t	1415:4:44533:44547	424295	0	True				
ANR	424299	Statement	*	1415:20:44549:44549	424295	1	True				
ANR	424300	Statement	const	1415:22:44551:44555	424295	2	True				
ANR	424301	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1415:28:44557:44586	424295	3	True				
ANR	424302	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		424295	0		=			
ANR	424303	Identifier	imem		424295	0					
ANR	424304	CastExpression	( gs_ref_memory_t * ) mem		424295	1					
ANR	424305	CastTarget	gs_ref_memory_t *		424295	0					
ANR	424306	Identifier	mem		424295	1					
ANR	424307	IdentifierDeclStatement	obj_header_t * pp ;	1416:4:44592:44608	424295	4	True				
ANR	424308	IdentifierDecl	* pp		424295	0					
ANR	424309	IdentifierDeclType	obj_header_t *		424295	0					
ANR	424310	Identifier	pp		424295	1					
ANR	424311	IdentifierDeclStatement	gs_memory_type_ptr_t pstype ;	1417:4:44614:44641	424295	5	True				
ANR	424312	IdentifierDecl	pstype		424295	0					
ANR	424313	IdentifierDeclType	gs_memory_type_ptr_t		424295	0					
ANR	424314	Identifier	pstype		424295	1					
ANR	424315	IdentifierDeclStatement	gs_memory_struct_type_t saved_stype ;	1418:4:44647:44682	424295	6	True				
ANR	424316	IdentifierDecl	saved_stype		424295	0					
ANR	424317	IdentifierDeclType	gs_memory_struct_type_t		424295	0					
ANR	424318	Identifier	saved_stype		424295	1					
ANR	424319	ExpressionStatement	struct_proc_finalize ( ( * finalize ) )	1420:4:44689:44722	424295	7	True				
ANR	424320	CallExpression	struct_proc_finalize ( ( * finalize ) )		424295	0					
ANR	424321	Callee	struct_proc_finalize		424295	0					
ANR	424322	Identifier	struct_proc_finalize		424295	0					
ANR	424323	ArgumentList	* finalize		424295	1					
ANR	424324	Argument	* finalize		424295	0					
ANR	424325	UnaryOperationExpression	* finalize		424295	0					
ANR	424326	UnaryOperator	*		424295	0					
ANR	424327	Identifier	finalize		424295	1					
ANR	424328	IdentifierDeclStatement	"uint size , rounded_size ;"	1421:4:44728:44751	424295	8	True				
ANR	424329	IdentifierDecl	size		424295	0					
ANR	424330	IdentifierDeclType	uint		424295	0					
ANR	424331	Identifier	size		424295	1					
ANR	424332	IdentifierDecl	rounded_size		424295	1					
ANR	424333	IdentifierDeclType	uint		424295	0					
ANR	424334	Identifier	rounded_size		424295	1					
ANR	424335	IfStatement	if ( ptr == 0 )		424295	9					
ANR	424336	Condition	ptr == 0	1423:8:44762:44769	424295	0	True				
ANR	424337	EqualityExpression	ptr == 0		424295	0		==			
ANR	424338	Identifier	ptr		424295	0					
ANR	424339	PrimaryExpression	0		424295	1					
ANR	424340	ReturnStatement	return ;	1424:8:44780:44786	424295	1	True				
ANR	424341	ExpressionStatement	pp = ( obj_header_t * ) ptr - 1	1425:4:44792:44821	424295	10	True				
ANR	424342	AssignmentExpression	pp = ( obj_header_t * ) ptr - 1		424295	0		=			
ANR	424343	Identifier	pp		424295	0					
ANR	424344	AdditiveExpression	( obj_header_t * ) ptr - 1		424295	1		-			
ANR	424345	CastExpression	( obj_header_t * ) ptr		424295	0					
ANR	424346	CastTarget	obj_header_t *		424295	0					
ANR	424347	Identifier	ptr		424295	1					
ANR	424348	PrimaryExpression	1		424295	1					
ANR	424349	ExpressionStatement	pstype = pp -> o_type	1426:4:44827:44846	424295	11	True				
ANR	424350	AssignmentExpression	pstype = pp -> o_type		424295	0		=			
ANR	424351	Identifier	pstype		424295	0					
ANR	424352	PtrMemberAccess	pp -> o_type		424295	1					
ANR	424353	Identifier	pp		424295	0					
ANR	424354	Identifier	o_type		424295	1					
ANR	424355	IfStatement	if ( gs_debug_c ( '?' ) )		424295	12					
ANR	424356	Condition	gs_debug_c ( '?' )	1428:8:44869:44883	424295	0	True				
ANR	424357	CallExpression	gs_debug_c ( '?' )		424295	0					
ANR	424358	Callee	gs_debug_c		424295	0					
ANR	424359	Identifier	gs_debug_c		424295	0					
ANR	424360	ArgumentList	'?'		424295	1					
ANR	424361	Argument	'?'		424295	0					
ANR	424362	PrimaryExpression	'?'		424295	0					
ANR	424363	CompoundStatement		16:8:368:387	424295	1					
ANR	424364	IdentifierDeclStatement	clump_locator_t cld ;	1429:8:44896:44915	424295	0	True				
ANR	424365	IdentifierDecl	cld		424295	0					
ANR	424366	IdentifierDeclType	clump_locator_t		424295	0					
ANR	424367	Identifier	cld		424295	1					
ANR	424368	IfStatement	if ( pstype == & st_free )		424295	1					
ANR	424369	Condition	pstype == & st_free	1431:12:44930:44947	424295	0	True				
ANR	424370	EqualityExpression	pstype == & st_free		424295	0		==			
ANR	424371	Identifier	pstype		424295	0					
ANR	424372	UnaryOperationExpression	& st_free		424295	1					
ANR	424373	UnaryOperator	&		424295	0					
ANR	424374	Identifier	st_free		424295	1					
ANR	424375	CompoundStatement		18:32:422:422	424295	1					
ANR	424376	ExpressionStatement	"mlprintf2 ( mem , ""%s: object 0x%lx already free!\\n"" , client_name_string ( cname ) , ( ulong ) ptr )"	1432:12:44964:45076	424295	0	True				
ANR	424377	CallExpression	"mlprintf2 ( mem , ""%s: object 0x%lx already free!\\n"" , client_name_string ( cname ) , ( ulong ) ptr )"		424295	0					
ANR	424378	Callee	mlprintf2		424295	0					
ANR	424379	Identifier	mlprintf2		424295	0					
ANR	424380	ArgumentList	mem		424295	1					
ANR	424381	Argument	mem		424295	0					
ANR	424382	Identifier	mem		424295	0					
ANR	424383	Argument	"""%s: object 0x%lx already free!\\n"""		424295	1					
ANR	424384	PrimaryExpression	"""%s: object 0x%lx already free!\\n"""		424295	0					
ANR	424385	Argument	client_name_string ( cname )		424295	2					
ANR	424386	CallExpression	client_name_string ( cname )		424295	0					
ANR	424387	Callee	client_name_string		424295	0					
ANR	424388	Identifier	client_name_string		424295	0					
ANR	424389	ArgumentList	cname		424295	1					
ANR	424390	Argument	cname		424295	0					
ANR	424391	Identifier	cname		424295	0					
ANR	424392	Argument	( ulong ) ptr		424295	3					
ANR	424393	CastExpression	( ulong ) ptr		424295	0					
ANR	424394	CastTarget	ulong		424295	0					
ANR	424395	Identifier	ptr		424295	1					
ANR	424396	ReturnStatement	return ;	1434:12:45090:45096	424295	1	True				
ANR	424397	ExpressionStatement	cld . memory = imem	1437:8:45203:45220	424295	2	True				
ANR	424398	AssignmentExpression	cld . memory = imem		424295	0		=			
ANR	424399	MemberAccess	cld . memory		424295	0					
ANR	424400	Identifier	cld		424295	0					
ANR	424401	Identifier	memory		424295	1					
ANR	424402	Identifier	imem		424295	1					
ANR	424403	WhileStatement	"while ( ( cld . cp = cld . memory -> root ) , ! clump_locate_ptr ( ptr , & cld ) )"		424295	3					
ANR	424404	Condition	"( cld . cp = cld . memory -> root ) , ! clump_locate_ptr ( ptr , & cld )"	1438:15:45237:45308	424295	0	True				
ANR	424405	Expression	"( cld . cp = cld . memory -> root ) , ! clump_locate_ptr ( ptr , & cld )"		424295	0					
ANR	424406	AssignmentExpression	cld . cp = cld . memory -> root		424295	0		=			
ANR	424407	MemberAccess	cld . cp		424295	0					
ANR	424408	Identifier	cld		424295	0					
ANR	424409	Identifier	cp		424295	1					
ANR	424410	PtrMemberAccess	cld . memory -> root		424295	1					
ANR	424411	MemberAccess	cld . memory		424295	0					
ANR	424412	Identifier	cld		424295	0					
ANR	424413	Identifier	memory		424295	1					
ANR	424414	Identifier	root		424295	1					
ANR	424415	UnaryOperationExpression	"! clump_locate_ptr ( ptr , & cld )"		424295	1					
ANR	424416	UnaryOperator	!		424295	0					
ANR	424417	CallExpression	"clump_locate_ptr ( ptr , & cld )"		424295	1					
ANR	424418	Callee	clump_locate_ptr		424295	0					
ANR	424419	Identifier	clump_locate_ptr		424295	0					
ANR	424420	ArgumentList	ptr		424295	1					
ANR	424421	Argument	ptr		424295	0					
ANR	424422	Identifier	ptr		424295	0					
ANR	424423	Argument	& cld		424295	1					
ANR	424424	UnaryOperationExpression	& cld		424295	0					
ANR	424425	UnaryOperator	&		424295	0					
ANR	424426	Identifier	cld		424295	1					
ANR	424427	CompoundStatement		27:14:796:796	424295	1					
ANR	424428	IfStatement	if ( ! cld . memory -> saved )		424295	0					
ANR	424429	Condition	! cld . memory -> saved	1441:16:45342:45359	424295	0	True				
ANR	424430	UnaryOperationExpression	! cld . memory -> saved		424295	0					
ANR	424431	UnaryOperator	!		424295	0					
ANR	424432	PtrMemberAccess	cld . memory -> saved		424295	1					
ANR	424433	MemberAccess	cld . memory		424295	0					
ANR	424434	Identifier	cld		424295	0					
ANR	424435	Identifier	memory		424295	1					
ANR	424436	Identifier	saved		424295	1					
ANR	424437	CompoundStatement		28:36:834:834	424295	1					
ANR	424438	ExpressionStatement	"mlprintf3 ( mem , ""%s: freeing 0x%lx, not owned by memory 0x%lx!\\n"" , client_name_string ( cname ) , ( ulong ) ptr , ( ulong ) mem )"	1442:16:45380:45550	424295	0	True				
ANR	424439	CallExpression	"mlprintf3 ( mem , ""%s: freeing 0x%lx, not owned by memory 0x%lx!\\n"" , client_name_string ( cname ) , ( ulong ) ptr , ( ulong ) mem )"		424295	0					
ANR	424440	Callee	mlprintf3		424295	0					
ANR	424441	Identifier	mlprintf3		424295	0					
ANR	424442	ArgumentList	mem		424295	1					
ANR	424443	Argument	mem		424295	0					
ANR	424444	Identifier	mem		424295	0					
ANR	424445	Argument	"""%s: freeing 0x%lx, not owned by memory 0x%lx!\\n"""		424295	1					
ANR	424446	PrimaryExpression	"""%s: freeing 0x%lx, not owned by memory 0x%lx!\\n"""		424295	0					
ANR	424447	Argument	client_name_string ( cname )		424295	2					
ANR	424448	CallExpression	client_name_string ( cname )		424295	0					
ANR	424449	Callee	client_name_string		424295	0					
ANR	424450	Identifier	client_name_string		424295	0					
ANR	424451	ArgumentList	cname		424295	1					
ANR	424452	Argument	cname		424295	0					
ANR	424453	Identifier	cname		424295	0					
ANR	424454	Argument	( ulong ) ptr		424295	3					
ANR	424455	CastExpression	( ulong ) ptr		424295	0					
ANR	424456	CastTarget	ulong		424295	0					
ANR	424457	Identifier	ptr		424295	1					
ANR	424458	Argument	( ulong ) mem		424295	4					
ANR	424459	CastExpression	( ulong ) mem		424295	0					
ANR	424460	CastTarget	ulong		424295	0					
ANR	424461	Identifier	mem		424295	1					
ANR	424462	ReturnStatement	return ;	1445:16:45568:45574	424295	1	True				
ANR	424463	ExpressionStatement	cld . memory = ( gs_ref_memory_t * ) cld . memory -> saved	1449:12:45757:45807	424295	1	True				
ANR	424464	AssignmentExpression	cld . memory = ( gs_ref_memory_t * ) cld . memory -> saved		424295	0		=			
ANR	424465	MemberAccess	cld . memory		424295	0					
ANR	424466	Identifier	cld		424295	0					
ANR	424467	Identifier	memory		424295	1					
ANR	424468	CastExpression	( gs_ref_memory_t * ) cld . memory -> saved		424295	1					
ANR	424469	CastTarget	gs_ref_memory_t *		424295	0					
ANR	424470	PtrMemberAccess	cld . memory -> saved		424295	1					
ANR	424471	MemberAccess	cld . memory		424295	0					
ANR	424472	Identifier	cld		424295	0					
ANR	424473	Identifier	memory		424295	1					
ANR	424474	Identifier	saved		424295	1					
ANR	424475	IfStatement	"if ( ! ( PTR_BETWEEN ( ( const byte * ) pp , cld . cp -> cbase , cld . cp -> cbot ) ) )"		424295	4					
ANR	424476	Condition	"! ( PTR_BETWEEN ( ( const byte * ) pp , cld . cp -> cbase , cld . cp -> cbot ) )"	1452:12:45895:45981	424295	0	True				
ANR	424477	UnaryOperationExpression	"! ( PTR_BETWEEN ( ( const byte * ) pp , cld . cp -> cbase , cld . cp -> cbot ) )"		424295	0					
ANR	424478	UnaryOperator	!		424295	0					
ANR	424479	CallExpression	"PTR_BETWEEN ( ( const byte * ) pp , cld . cp -> cbase , cld . cp -> cbot )"		424295	1					
ANR	424480	Callee	PTR_BETWEEN		424295	0					
ANR	424481	Identifier	PTR_BETWEEN		424295	0					
ANR	424482	ArgumentList	( const byte * ) pp		424295	1					
ANR	424483	Argument	( const byte * ) pp		424295	0					
ANR	424484	CastExpression	( const byte * ) pp		424295	0					
ANR	424485	CastTarget	const byte *		424295	0					
ANR	424486	Identifier	pp		424295	1					
ANR	424487	Argument	cld . cp -> cbase		424295	1					
ANR	424488	PtrMemberAccess	cld . cp -> cbase		424295	0					
ANR	424489	MemberAccess	cld . cp		424295	0					
ANR	424490	Identifier	cld		424295	0					
ANR	424491	Identifier	cp		424295	1					
ANR	424492	Identifier	cbase		424295	1					
ANR	424493	Argument	cld . cp -> cbot		424295	2					
ANR	424494	PtrMemberAccess	cld . cp -> cbot		424295	0					
ANR	424495	MemberAccess	cld . cp		424295	0					
ANR	424496	Identifier	cld		424295	0					
ANR	424497	Identifier	cp		424295	1					
ANR	424498	Identifier	cbot		424295	1					
ANR	424499	CompoundStatement		41:14:1469:1469	424295	1					
ANR	424500	ExpressionStatement	"mlprintf5 ( mem , ""%s: freeing 0x%lx,\\n\\toutside clump 0x%lx cbase=0x%lx, cbot=0x%lx!\\n"" , client_name_string ( cname ) , ( ulong ) ptr , ( ulong ) cld . cp , ( ulong ) cld . cp -> cbase , ( ulong ) cld . cp -> cbot )"	1455:12:46011:46264	424295	0	True				
ANR	424501	CallExpression	"mlprintf5 ( mem , ""%s: freeing 0x%lx,\\n\\toutside clump 0x%lx cbase=0x%lx, cbot=0x%lx!\\n"" , client_name_string ( cname ) , ( ulong ) ptr , ( ulong ) cld . cp , ( ulong ) cld . cp -> cbase , ( ulong ) cld . cp -> cbot )"		424295	0					
ANR	424502	Callee	mlprintf5		424295	0					
ANR	424503	Identifier	mlprintf5		424295	0					
ANR	424504	ArgumentList	mem		424295	1					
ANR	424505	Argument	mem		424295	0					
ANR	424506	Identifier	mem		424295	0					
ANR	424507	Argument	"""%s: freeing 0x%lx,\\n\\toutside clump 0x%lx cbase=0x%lx, cbot=0x%lx!\\n"""		424295	1					
ANR	424508	PrimaryExpression	"""%s: freeing 0x%lx,\\n\\toutside clump 0x%lx cbase=0x%lx, cbot=0x%lx!\\n"""		424295	0					
ANR	424509	Argument	client_name_string ( cname )		424295	2					
ANR	424510	CallExpression	client_name_string ( cname )		424295	0					
ANR	424511	Callee	client_name_string		424295	0					
ANR	424512	Identifier	client_name_string		424295	0					
ANR	424513	ArgumentList	cname		424295	1					
ANR	424514	Argument	cname		424295	0					
ANR	424515	Identifier	cname		424295	0					
ANR	424516	Argument	( ulong ) ptr		424295	3					
ANR	424517	CastExpression	( ulong ) ptr		424295	0					
ANR	424518	CastTarget	ulong		424295	0					
ANR	424519	Identifier	ptr		424295	1					
ANR	424520	Argument	( ulong ) cld . cp		424295	4					
ANR	424521	CastExpression	( ulong ) cld . cp		424295	0					
ANR	424522	CastTarget	ulong		424295	0					
ANR	424523	MemberAccess	cld . cp		424295	1					
ANR	424524	Identifier	cld		424295	0					
ANR	424525	Identifier	cp		424295	1					
ANR	424526	Argument	( ulong ) cld . cp -> cbase		424295	5					
ANR	424527	CastExpression	( ulong ) cld . cp -> cbase		424295	0					
ANR	424528	CastTarget	ulong		424295	0					
ANR	424529	PtrMemberAccess	cld . cp -> cbase		424295	1					
ANR	424530	MemberAccess	cld . cp		424295	0					
ANR	424531	Identifier	cld		424295	0					
ANR	424532	Identifier	cp		424295	1					
ANR	424533	Identifier	cbase		424295	1					
ANR	424534	Argument	( ulong ) cld . cp -> cbot		424295	6					
ANR	424535	CastExpression	( ulong ) cld . cp -> cbot		424295	0					
ANR	424536	CastTarget	ulong		424295	0					
ANR	424537	PtrMemberAccess	cld . cp -> cbot		424295	1					
ANR	424538	MemberAccess	cld . cp		424295	0					
ANR	424539	Identifier	cld		424295	0					
ANR	424540	Identifier	cp		424295	1					
ANR	424541	Identifier	cbot		424295	1					
ANR	424542	ReturnStatement	return ;	1459:12:46278:46284	424295	1	True				
ANR	424543	ExpressionStatement	size = pre_obj_contents_size ( pp )	1463:4:46331:46363	424295	13	True				
ANR	424544	AssignmentExpression	size = pre_obj_contents_size ( pp )		424295	0		=			
ANR	424545	Identifier	size		424295	0					
ANR	424546	CallExpression	pre_obj_contents_size ( pp )		424295	1					
ANR	424547	Callee	pre_obj_contents_size		424295	0					
ANR	424548	Identifier	pre_obj_contents_size		424295	0					
ANR	424549	ArgumentList	pp		424295	1					
ANR	424550	Argument	pp		424295	0					
ANR	424551	Identifier	pp		424295	0					
ANR	424552	ExpressionStatement	rounded_size = obj_align_round ( size )	1464:4:46369:46405	424295	14	True				
ANR	424553	AssignmentExpression	rounded_size = obj_align_round ( size )		424295	0		=			
ANR	424554	Identifier	rounded_size		424295	0					
ANR	424555	CallExpression	obj_align_round ( size )		424295	1					
ANR	424556	Callee	obj_align_round		424295	0					
ANR	424557	Identifier	obj_align_round		424295	0					
ANR	424558	ArgumentList	size		424295	1					
ANR	424559	Argument	size		424295	0					
ANR	424560	Identifier	size		424295	0					
ANR	424561	ExpressionStatement	finalize = pstype -> finalize	1465:4:46411:46438	424295	15	True				
ANR	424562	AssignmentExpression	finalize = pstype -> finalize		424295	0		=			
ANR	424563	Identifier	finalize		424295	0					
ANR	424564	PtrMemberAccess	pstype -> finalize		424295	1					
ANR	424565	Identifier	pstype		424295	0					
ANR	424566	Identifier	finalize		424295	1					
ANR	424567	IfStatement	if ( finalize != 0 )		424295	16					
ANR	424568	Condition	finalize != 0	1466:8:46448:46460	424295	0	True				
ANR	424569	EqualityExpression	finalize != 0		424295	0		!=			
ANR	424570	Identifier	finalize		424295	0					
ANR	424571	PrimaryExpression	0		424295	1					
ANR	424572	CompoundStatement		53:23:1935:1935	424295	1					
ANR	424573	IfStatement	if ( gs_debug [ 'a' ] || gs_debug [ 'A' ] )		424295	0					
ANR	424574	Condition	gs_debug [ 'a' ] || gs_debug [ 'A' ]	1471:12:46668:46697	424295	0	True				
ANR	424575	OrExpression	gs_debug [ 'a' ] || gs_debug [ 'A' ]		424295	0		||			
ANR	424576	ArrayIndexing	gs_debug [ 'a' ]		424295	0					
ANR	424577	Identifier	gs_debug		424295	0					
ANR	424578	PrimaryExpression	'a'		424295	1					
ANR	424579	ArrayIndexing	gs_debug [ 'A' ]		424295	1					
ANR	424580	Identifier	gs_debug		424295	0					
ANR	424581	PrimaryExpression	'A'		424295	1					
ANR	424582	ExpressionStatement	saved_stype = * pstype	1472:12:46712:46733	424295	1	True				
ANR	424583	AssignmentExpression	saved_stype = * pstype		424295	0		=			
ANR	424584	Identifier	saved_stype		424295	0					
ANR	424585	UnaryOperationExpression	* pstype		424295	1					
ANR	424586	UnaryOperator	*		424295	0					
ANR	424587	Identifier	pstype		424295	1					
ANR	424588	ExpressionStatement	"if_debug3m ( 'u' , mem , ""[u]finalizing %s 0x%lx (%s)\\n"" , struct_type_name_string ( pstype ) , ( ulong ) ptr , client_name_string ( cname ) )"	1474:8:46744:46908	424295	1	True				
ANR	424589	CallExpression	"if_debug3m ( 'u' , mem , ""[u]finalizing %s 0x%lx (%s)\\n"" , struct_type_name_string ( pstype ) , ( ulong ) ptr , client_name_string ( cname ) )"		424295	0					
ANR	424590	Callee	if_debug3m		424295	0					
ANR	424591	Identifier	if_debug3m		424295	0					
ANR	424592	ArgumentList	'u'		424295	1					
ANR	424593	Argument	'u'		424295	0					
ANR	424594	PrimaryExpression	'u'		424295	0					
ANR	424595	Argument	mem		424295	1					
ANR	424596	Identifier	mem		424295	0					
ANR	424597	Argument	"""[u]finalizing %s 0x%lx (%s)\\n"""		424295	2					
ANR	424598	PrimaryExpression	"""[u]finalizing %s 0x%lx (%s)\\n"""		424295	0					
ANR	424599	Argument	struct_type_name_string ( pstype )		424295	3					
ANR	424600	CallExpression	struct_type_name_string ( pstype )		424295	0					
ANR	424601	Callee	struct_type_name_string		424295	0					
ANR	424602	Identifier	struct_type_name_string		424295	0					
ANR	424603	ArgumentList	pstype		424295	1					
ANR	424604	Argument	pstype		424295	0					
ANR	424605	Identifier	pstype		424295	0					
ANR	424606	Argument	( ulong ) ptr		424295	4					
ANR	424607	CastExpression	( ulong ) ptr		424295	0					
ANR	424608	CastTarget	ulong		424295	0					
ANR	424609	Identifier	ptr		424295	1					
ANR	424610	Argument	client_name_string ( cname )		424295	5					
ANR	424611	CallExpression	client_name_string ( cname )		424295	0					
ANR	424612	Callee	client_name_string		424295	0					
ANR	424613	Identifier	client_name_string		424295	0					
ANR	424614	ArgumentList	cname		424295	1					
ANR	424615	Argument	cname		424295	0					
ANR	424616	Identifier	cname		424295	0					
ANR	424617	ExpressionStatement	"( * finalize ) ( mem , ptr )"	1477:8:46918:46940	424295	2	True				
ANR	424618	CallExpression	"( * finalize ) ( mem , ptr )"		424295	0					
ANR	424619	Callee	* finalize		424295	0					
ANR	424620	UnaryOperationExpression	* finalize		424295	0					
ANR	424621	UnaryOperator	*		424295	0					
ANR	424622	Identifier	finalize		424295	1					
ANR	424623	ArgumentList	mem		424295	1					
ANR	424624	Argument	mem		424295	0					
ANR	424625	Identifier	mem		424295	0					
ANR	424626	Argument	ptr		424295	1					
ANR	424627	Identifier	ptr		424295	0					
ANR	424628	IfStatement	if ( gs_debug [ 'a' ] || gs_debug [ 'A' ] )		424295	3					
ANR	424629	Condition	gs_debug [ 'a' ] || gs_debug [ 'A' ]	1479:12:46955:46984	424295	0	True				
ANR	424630	OrExpression	gs_debug [ 'a' ] || gs_debug [ 'A' ]		424295	0		||			
ANR	424631	ArrayIndexing	gs_debug [ 'a' ]		424295	0					
ANR	424632	Identifier	gs_debug		424295	0					
ANR	424633	PrimaryExpression	'a'		424295	1					
ANR	424634	ArrayIndexing	gs_debug [ 'A' ]		424295	1					
ANR	424635	Identifier	gs_debug		424295	0					
ANR	424636	PrimaryExpression	'A'		424295	1					
ANR	424637	ExpressionStatement	pstype = & saved_stype	1480:12:46999:47020	424295	1	True				
ANR	424638	AssignmentExpression	pstype = & saved_stype		424295	0		=			
ANR	424639	Identifier	pstype		424295	0					
ANR	424640	UnaryOperationExpression	& saved_stype		424295	1					
ANR	424641	UnaryOperator	&		424295	0					
ANR	424642	Identifier	saved_stype		424295	1					
ANR	424643	IfStatement	if ( imem -> cc && ( byte * ) ptr + rounded_size == imem -> cc -> cbot )		424295	17					
ANR	424644	Condition	imem -> cc && ( byte * ) ptr + rounded_size == imem -> cc -> cbot	1482:8:47036:47092	424295	0	True				
ANR	424645	AndExpression	imem -> cc && ( byte * ) ptr + rounded_size == imem -> cc -> cbot		424295	0		&&			
ANR	424646	PtrMemberAccess	imem -> cc		424295	0					
ANR	424647	Identifier	imem		424295	0					
ANR	424648	Identifier	cc		424295	1					
ANR	424649	EqualityExpression	( byte * ) ptr + rounded_size == imem -> cc -> cbot		424295	1		==			
ANR	424650	AdditiveExpression	( byte * ) ptr + rounded_size		424295	0		+			
ANR	424651	CastExpression	( byte * ) ptr		424295	0					
ANR	424652	CastTarget	byte *		424295	0					
ANR	424653	Identifier	ptr		424295	1					
ANR	424654	Identifier	rounded_size		424295	1					
ANR	424655	PtrMemberAccess	imem -> cc -> cbot		424295	1					
ANR	424656	PtrMemberAccess	imem -> cc		424295	0					
ANR	424657	Identifier	imem		424295	0					
ANR	424658	Identifier	cc		424295	1					
ANR	424659	Identifier	cbot		424295	1					
ANR	424660	CompoundStatement		69:67:2567:2567	424295	1					
ANR	424661	ExpressionStatement	"alloc_trace ( "":-o "" , imem , cname , pstype , size , ptr )"	1483:8:47105:47156	424295	0	True				
ANR	424662	CallExpression	"alloc_trace ( "":-o "" , imem , cname , pstype , size , ptr )"		424295	0					
ANR	424663	Callee	alloc_trace		424295	0					
ANR	424664	Identifier	alloc_trace		424295	0					
ANR	424665	ArgumentList	""":-o """		424295	1					
ANR	424666	Argument	""":-o """		424295	0					
ANR	424667	PrimaryExpression	""":-o """		424295	0					
ANR	424668	Argument	imem		424295	1					
ANR	424669	Identifier	imem		424295	0					
ANR	424670	Argument	cname		424295	2					
ANR	424671	Identifier	cname		424295	0					
ANR	424672	Argument	pstype		424295	3					
ANR	424673	Identifier	pstype		424295	0					
ANR	424674	Argument	size		424295	4					
ANR	424675	Identifier	size		424295	0					
ANR	424676	Argument	ptr		424295	5					
ANR	424677	Identifier	ptr		424295	0					
ANR	424678	ExpressionStatement	"gs_alloc_fill ( ptr , gs_alloc_fill_free , size )"	1484:8:47166:47210	424295	1	True				
ANR	424679	CallExpression	"gs_alloc_fill ( ptr , gs_alloc_fill_free , size )"		424295	0					
ANR	424680	Callee	gs_alloc_fill		424295	0					
ANR	424681	Identifier	gs_alloc_fill		424295	0					
ANR	424682	ArgumentList	ptr		424295	1					
ANR	424683	Argument	ptr		424295	0					
ANR	424684	Identifier	ptr		424295	0					
ANR	424685	Argument	gs_alloc_fill_free		424295	1					
ANR	424686	Identifier	gs_alloc_fill_free		424295	0					
ANR	424687	Argument	size		424295	2					
ANR	424688	Identifier	size		424295	0					
ANR	424689	ExpressionStatement	imem -> cc -> cbot = ( byte * ) pp	1485:8:47220:47248	424295	2	True				
ANR	424690	AssignmentExpression	imem -> cc -> cbot = ( byte * ) pp		424295	0		=			
ANR	424691	PtrMemberAccess	imem -> cc -> cbot		424295	0					
ANR	424692	PtrMemberAccess	imem -> cc		424295	0					
ANR	424693	Identifier	imem		424295	0					
ANR	424694	Identifier	cc		424295	1					
ANR	424695	Identifier	cbot		424295	1					
ANR	424696	CastExpression	( byte * ) pp		424295	1					
ANR	424697	CastTarget	byte *		424295	0					
ANR	424698	Identifier	pp		424295	1					
ANR	424699	IfStatement	if ( ( byte * ) pp <= imem -> cc -> int_freed_top )		424295	3					
ANR	424700	Condition	( byte * ) pp <= imem -> cc -> int_freed_top	1488:12:47409:47445	424295	0	True				
ANR	424701	RelationalExpression	( byte * ) pp <= imem -> cc -> int_freed_top		424295	0		<=			
ANR	424702	CastExpression	( byte * ) pp		424295	0					
ANR	424703	CastTarget	byte *		424295	0					
ANR	424704	Identifier	pp		424295	1					
ANR	424705	PtrMemberAccess	imem -> cc -> int_freed_top		424295	1					
ANR	424706	PtrMemberAccess	imem -> cc		424295	0					
ANR	424707	Identifier	imem		424295	0					
ANR	424708	Identifier	cc		424295	1					
ANR	424709	Identifier	int_freed_top		424295	1					
ANR	424710	CompoundStatement		75:51:2920:2920	424295	1					
ANR	424711	ExpressionStatement	"consolidate_clump_free ( imem -> cc , imem )"	1489:12:47462:47500	424295	0	True				
ANR	424712	CallExpression	"consolidate_clump_free ( imem -> cc , imem )"		424295	0					
ANR	424713	Callee	consolidate_clump_free		424295	0					
ANR	424714	Identifier	consolidate_clump_free		424295	0					
ANR	424715	ArgumentList	imem -> cc		424295	1					
ANR	424716	Argument	imem -> cc		424295	0					
ANR	424717	PtrMemberAccess	imem -> cc		424295	0					
ANR	424718	Identifier	imem		424295	0					
ANR	424719	Identifier	cc		424295	1					
ANR	424720	Argument	imem		424295	1					
ANR	424721	Identifier	imem		424295	0					
ANR	424722	ReturnStatement	return ;	1491:8:47520:47526	424295	4	True				
ANR	424723	IfStatement	if ( pp -> o_alone )		424295	18					
ANR	424724	Condition	pp -> o_alone	1493:8:47542:47552	424295	0	True				
ANR	424725	PtrMemberAccess	pp -> o_alone		424295	0					
ANR	424726	Identifier	pp		424295	0					
ANR	424727	Identifier	o_alone		424295	1					
ANR	424728	CompoundStatement		86:8:3273:3291	424295	1					
ANR	424729	IdentifierDeclStatement	clump_locator_t cl ;	1499:8:47801:47819	424295	0	True				
ANR	424730	IdentifierDecl	cl		424295	0					
ANR	424731	IdentifierDeclType	clump_locator_t		424295	0					
ANR	424732	Identifier	cl		424295	1					
ANR	424733	CompoundStatement		90:12:3329:3348	424295	1					
ANR	424734	IdentifierDeclStatement	clump_locator_t cld ;	1503:12:47857:47876	424295	0	True				
ANR	424735	IdentifierDecl	cld		424295	0					
ANR	424736	IdentifierDeclType	clump_locator_t		424295	0					
ANR	424737	Identifier	cld		424295	1					
ANR	424738	ExpressionStatement	cld . memory = imem	1505:12:47891:47908	424295	1	True				
ANR	424739	AssignmentExpression	cld . memory = imem		424295	0		=			
ANR	424740	MemberAccess	cld . memory		424295	0					
ANR	424741	Identifier	cld		424295	0					
ANR	424742	Identifier	memory		424295	1					
ANR	424743	Identifier	imem		424295	1					
ANR	424744	ExpressionStatement	cld . cp = 0	1506:12:47922:47932	424295	2	True				
ANR	424745	AssignmentExpression	cld . cp = 0		424295	0		=			
ANR	424746	MemberAccess	cld . cp		424295	0					
ANR	424747	Identifier	cld		424295	0					
ANR	424748	Identifier	cp		424295	1					
ANR	424749	PrimaryExpression	0		424295	1					
ANR	424750	IfStatement	if ( gs_debug_c ( 'a' ) )		424295	3					
ANR	424751	Condition	gs_debug_c ( 'a' )	1507:16:47950:47964	424295	0	True				
ANR	424752	CallExpression	gs_debug_c ( 'a' )		424295	0					
ANR	424753	Callee	gs_debug_c		424295	0					
ANR	424754	Identifier	gs_debug_c		424295	0					
ANR	424755	ArgumentList	'a'		424295	1					
ANR	424756	Argument	'a'		424295	0					
ANR	424757	PrimaryExpression	'a'		424295	0					
ANR	424758	ExpressionStatement	"alloc_trace ( ( clump_locate_ptr ( ptr , & cld ) ? "":-oL"" : "":-o~"" ) , imem , cname , pstype , size , ptr )"	1508:16:47983:48135	424295	1	True				
ANR	424759	CallExpression	"alloc_trace ( ( clump_locate_ptr ( ptr , & cld ) ? "":-oL"" : "":-o~"" ) , imem , cname , pstype , size , ptr )"		424295	0					
ANR	424760	Callee	alloc_trace		424295	0					
ANR	424761	Identifier	alloc_trace		424295	0					
ANR	424762	ArgumentList	"clump_locate_ptr ( ptr , & cld ) ? "":-oL"" : "":-o~"""		424295	1					
ANR	424763	Argument	"clump_locate_ptr ( ptr , & cld ) ? "":-oL"" : "":-o~"""		424295	0					
ANR	424764	ConditionalExpression	"clump_locate_ptr ( ptr , & cld ) ? "":-oL"" : "":-o~"""		424295	0					
ANR	424765	Condition	"clump_locate_ptr ( ptr , & cld )"		424295	0					
ANR	424766	CallExpression	"clump_locate_ptr ( ptr , & cld )"		424295	0					
ANR	424767	Callee	clump_locate_ptr		424295	0					
ANR	424768	Identifier	clump_locate_ptr		424295	0					
ANR	424769	ArgumentList	ptr		424295	1					
ANR	424770	Argument	ptr		424295	0					
ANR	424771	Identifier	ptr		424295	0					
ANR	424772	Argument	& cld		424295	1					
ANR	424773	UnaryOperationExpression	& cld		424295	0					
ANR	424774	UnaryOperator	&		424295	0					
ANR	424775	Identifier	cld		424295	1					
ANR	424776	PrimaryExpression	""":-oL"""		424295	1					
ANR	424777	PrimaryExpression	""":-o~"""		424295	2					
ANR	424778	Argument	imem		424295	1					
ANR	424779	Identifier	imem		424295	0					
ANR	424780	Argument	cname		424295	2					
ANR	424781	Identifier	cname		424295	0					
ANR	424782	Argument	pstype		424295	3					
ANR	424783	Identifier	pstype		424295	0					
ANR	424784	Argument	size		424295	4					
ANR	424785	Identifier	size		424295	0					
ANR	424786	Argument	ptr		424295	5					
ANR	424787	Identifier	ptr		424295	0					
ANR	424788	ExpressionStatement	cl . memory = imem	1513:8:48162:48178	424295	2	True				
ANR	424789	AssignmentExpression	cl . memory = imem		424295	0		=			
ANR	424790	MemberAccess	cl . memory		424295	0					
ANR	424791	Identifier	cl		424295	0					
ANR	424792	Identifier	memory		424295	1					
ANR	424793	Identifier	imem		424295	1					
ANR	424794	ExpressionStatement	cl . cp = 0	1514:8:48188:48197	424295	3	True				
ANR	424795	AssignmentExpression	cl . cp = 0		424295	0		=			
ANR	424796	MemberAccess	cl . cp		424295	0					
ANR	424797	Identifier	cl		424295	0					
ANR	424798	Identifier	cp		424295	1					
ANR	424799	PrimaryExpression	0		424295	1					
ANR	424800	IfStatement	"if ( clump_locate_ptr ( ptr , & cl ) )"		424295	4					
ANR	424801	Condition	"clump_locate_ptr ( ptr , & cl )"	1515:12:48211:48236	424295	0	True				
ANR	424802	CallExpression	"clump_locate_ptr ( ptr , & cl )"		424295	0					
ANR	424803	Callee	clump_locate_ptr		424295	0					
ANR	424804	Identifier	clump_locate_ptr		424295	0					
ANR	424805	ArgumentList	ptr		424295	1					
ANR	424806	Argument	ptr		424295	0					
ANR	424807	Identifier	ptr		424295	0					
ANR	424808	Argument	& cl		424295	1					
ANR	424809	UnaryOperationExpression	& cl		424295	0					
ANR	424810	UnaryOperator	&		424295	0					
ANR	424811	Identifier	cl		424295	1					
ANR	424812	CompoundStatement		102:40:3711:3711	424295	1					
ANR	424813	IfStatement	if ( ! imem -> is_controlled )		424295	0					
ANR	424814	Condition	! imem -> is_controlled	1516:16:48257:48276	424295	0	True				
ANR	424815	UnaryOperationExpression	! imem -> is_controlled		424295	0					
ANR	424816	UnaryOperator	!		424295	0					
ANR	424817	PtrMemberAccess	imem -> is_controlled		424295	1					
ANR	424818	Identifier	imem		424295	0					
ANR	424819	Identifier	is_controlled		424295	1					
ANR	424820	ExpressionStatement	"alloc_free_clump ( cl . cp , imem )"	1517:16:48295:48324	424295	1	True				
ANR	424821	CallExpression	"alloc_free_clump ( cl . cp , imem )"		424295	0					
ANR	424822	Callee	alloc_free_clump		424295	0					
ANR	424823	Identifier	alloc_free_clump		424295	0					
ANR	424824	ArgumentList	cl . cp		424295	1					
ANR	424825	Argument	cl . cp		424295	0					
ANR	424826	MemberAccess	cl . cp		424295	0					
ANR	424827	Identifier	cl		424295	0					
ANR	424828	Identifier	cp		424295	1					
ANR	424829	Argument	imem		424295	1					
ANR	424830	Identifier	imem		424295	0					
ANR	424831	ReturnStatement	return ;	1518:12:48338:48344	424295	1	True				
ANR	424832	IfStatement	if ( rounded_size >= sizeof ( obj_header_t * ) )		424295	19					
ANR	424833	Condition	rounded_size >= sizeof ( obj_header_t * )	1522:8:48431:48468	424295	0	True				
ANR	424834	RelationalExpression	rounded_size >= sizeof ( obj_header_t * )		424295	0		>=			
ANR	424835	Identifier	rounded_size		424295	0					
ANR	424836	SizeofExpression	sizeof ( obj_header_t * )		424295	1					
ANR	424837	Sizeof	sizeof		424295	0					
ANR	424838	SizeofOperand	obj_header_t *		424295	1					
ANR	424839	CompoundStatement		109:48:3943:3943	424295	1					
ANR	424840	ExpressionStatement	imem -> cfreed . memory = imem	1528:8:48648:48674	424295	0	True				
ANR	424841	AssignmentExpression	imem -> cfreed . memory = imem		424295	0		=			
ANR	424842	MemberAccess	imem -> cfreed . memory		424295	0					
ANR	424843	PtrMemberAccess	imem -> cfreed		424295	0					
ANR	424844	Identifier	imem		424295	0					
ANR	424845	Identifier	cfreed		424295	1					
ANR	424846	Identifier	memory		424295	1					
ANR	424847	Identifier	imem		424295	1					
ANR	424848	IfStatement	"if ( clump_locate ( ptr , & imem -> cfreed ) )"		424295	1					
ANR	424849	Condition	"clump_locate ( ptr , & imem -> cfreed )"	1529:12:48688:48719	424295	0	True				
ANR	424850	CallExpression	"clump_locate ( ptr , & imem -> cfreed )"		424295	0					
ANR	424851	Callee	clump_locate		424295	0					
ANR	424852	Identifier	clump_locate		424295	0					
ANR	424853	ArgumentList	ptr		424295	1					
ANR	424854	Argument	ptr		424295	0					
ANR	424855	Identifier	ptr		424295	0					
ANR	424856	Argument	& imem -> cfreed		424295	1					
ANR	424857	UnaryOperationExpression	& imem -> cfreed		424295	0					
ANR	424858	UnaryOperator	&		424295	0					
ANR	424859	PtrMemberAccess	imem -> cfreed		424295	1					
ANR	424860	Identifier	imem		424295	0					
ANR	424861	Identifier	cfreed		424295	1					
ANR	424862	CompoundStatement		117:12:4208:4226	424295	1					
ANR	424863	IdentifierDeclStatement	obj_header_t * * pfl ;	1530:12:48736:48754	424295	0	True				
ANR	424864	IdentifierDecl	* * pfl		424295	0					
ANR	424865	IdentifierDeclType	obj_header_t * *		424295	0					
ANR	424866	Identifier	pfl		424295	1					
ANR	424867	IfStatement	if ( size > max_freelist_size )		424295	1					
ANR	424868	Condition	size > max_freelist_size	1532:16:48773:48796	424295	0	True				
ANR	424869	RelationalExpression	size > max_freelist_size		424295	0		>			
ANR	424870	Identifier	size		424295	0					
ANR	424871	Identifier	max_freelist_size		424295	1					
ANR	424872	CompoundStatement		119:42:4271:4271	424295	1					
ANR	424873	ExpressionStatement	pfl = & imem -> freelists [ LARGE_FREELIST_INDEX ]	1533:16:48817:48861	424295	0	True				
ANR	424874	AssignmentExpression	pfl = & imem -> freelists [ LARGE_FREELIST_INDEX ]		424295	0		=			
ANR	424875	Identifier	pfl		424295	0					
ANR	424876	UnaryOperationExpression	& imem -> freelists [ LARGE_FREELIST_INDEX ]		424295	1					
ANR	424877	UnaryOperator	&		424295	0					
ANR	424878	ArrayIndexing	imem -> freelists [ LARGE_FREELIST_INDEX ]		424295	1					
ANR	424879	PtrMemberAccess	imem -> freelists		424295	0					
ANR	424880	Identifier	imem		424295	0					
ANR	424881	Identifier	freelists		424295	1					
ANR	424882	Identifier	LARGE_FREELIST_INDEX		424295	1					
ANR	424883	IfStatement	if ( rounded_size > imem -> largest_free_size )		424295	1					
ANR	424884	Condition	rounded_size > imem -> largest_free_size	1534:20:48883:48920	424295	0	True				
ANR	424885	RelationalExpression	rounded_size > imem -> largest_free_size		424295	0		>			
ANR	424886	Identifier	rounded_size		424295	0					
ANR	424887	PtrMemberAccess	imem -> largest_free_size		424295	1					
ANR	424888	Identifier	imem		424295	0					
ANR	424889	Identifier	largest_free_size		424295	1					
ANR	424890	ExpressionStatement	imem -> largest_free_size = rounded_size	1535:20:48943:48981	424295	1	True				
ANR	424891	AssignmentExpression	imem -> largest_free_size = rounded_size		424295	0		=			
ANR	424892	PtrMemberAccess	imem -> largest_free_size		424295	0					
ANR	424893	Identifier	imem		424295	0					
ANR	424894	Identifier	largest_free_size		424295	1					
ANR	424895	Identifier	rounded_size		424295	1					
ANR	424896	ElseStatement	else		424295	0					
ANR	424897	CompoundStatement		123:19:4474:4474	424295	0					
ANR	424898	ExpressionStatement	pfl = & imem -> freelists [ ( size + obj_align_mask ) >> log2_obj_align_mod ]	1537:16:49020:49127	424295	0	True				
ANR	424899	AssignmentExpression	pfl = & imem -> freelists [ ( size + obj_align_mask ) >> log2_obj_align_mod ]		424295	0		=			
ANR	424900	Identifier	pfl		424295	0					
ANR	424901	UnaryOperationExpression	& imem -> freelists [ ( size + obj_align_mask ) >> log2_obj_align_mod ]		424295	1					
ANR	424902	UnaryOperator	&		424295	0					
ANR	424903	ArrayIndexing	imem -> freelists [ ( size + obj_align_mask ) >> log2_obj_align_mod ]		424295	1					
ANR	424904	PtrMemberAccess	imem -> freelists		424295	0					
ANR	424905	Identifier	imem		424295	0					
ANR	424906	Identifier	freelists		424295	1					
ANR	424907	ShiftExpression	( size + obj_align_mask ) >> log2_obj_align_mod		424295	1		>>			
ANR	424908	AdditiveExpression	size + obj_align_mask		424295	0		+			
ANR	424909	Identifier	size		424295	0					
ANR	424910	Identifier	obj_align_mask		424295	1					
ANR	424911	Identifier	log2_obj_align_mod		424295	1					
ANR	424912	IfStatement	if ( imem -> cc && imem -> cfreed . cp -> chead == imem -> cc -> chead )		424295	2					
ANR	424913	Condition	imem -> cc && imem -> cfreed . cp -> chead == imem -> cc -> chead	1545:16:49433:49485	424295	0	True				
ANR	424914	AndExpression	imem -> cc && imem -> cfreed . cp -> chead == imem -> cc -> chead		424295	0		&&			
ANR	424915	PtrMemberAccess	imem -> cc		424295	0					
ANR	424916	Identifier	imem		424295	0					
ANR	424917	Identifier	cc		424295	1					
ANR	424918	EqualityExpression	imem -> cfreed . cp -> chead == imem -> cc -> chead		424295	1		==			
ANR	424919	PtrMemberAccess	imem -> cfreed . cp -> chead		424295	0					
ANR	424920	MemberAccess	imem -> cfreed . cp		424295	0					
ANR	424921	PtrMemberAccess	imem -> cfreed		424295	0					
ANR	424922	Identifier	imem		424295	0					
ANR	424923	Identifier	cfreed		424295	1					
ANR	424924	Identifier	cp		424295	1					
ANR	424925	Identifier	chead		424295	1					
ANR	424926	PtrMemberAccess	imem -> cc -> chead		424295	1					
ANR	424927	PtrMemberAccess	imem -> cc		424295	0					
ANR	424928	Identifier	imem		424295	0					
ANR	424929	Identifier	cc		424295	1					
ANR	424930	Identifier	chead		424295	1					
ANR	424931	CompoundStatement		132:71:4960:4960	424295	1					
ANR	424932	IfStatement	if ( ( byte * ) pp >= imem -> cc -> int_freed_top )		424295	0					
ANR	424933	Condition	( byte * ) pp >= imem -> cc -> int_freed_top	1546:20:49510:49546	424295	0	True				
ANR	424934	RelationalExpression	( byte * ) pp >= imem -> cc -> int_freed_top		424295	0		>=			
ANR	424935	CastExpression	( byte * ) pp		424295	0					
ANR	424936	CastTarget	byte *		424295	0					
ANR	424937	Identifier	pp		424295	1					
ANR	424938	PtrMemberAccess	imem -> cc -> int_freed_top		424295	1					
ANR	424939	PtrMemberAccess	imem -> cc		424295	0					
ANR	424940	Identifier	imem		424295	0					
ANR	424941	Identifier	cc		424295	1					
ANR	424942	Identifier	int_freed_top		424295	1					
ANR	424943	CompoundStatement		133:59:5021:5021	424295	1					
ANR	424944	ExpressionStatement	imem -> cc -> int_freed_top = ( byte * ) ptr + rounded_size	1547:20:49571:49623	424295	0	True				
ANR	424945	AssignmentExpression	imem -> cc -> int_freed_top = ( byte * ) ptr + rounded_size		424295	0		=			
ANR	424946	PtrMemberAccess	imem -> cc -> int_freed_top		424295	0					
ANR	424947	PtrMemberAccess	imem -> cc		424295	0					
ANR	424948	Identifier	imem		424295	0					
ANR	424949	Identifier	cc		424295	1					
ANR	424950	Identifier	int_freed_top		424295	1					
ANR	424951	AdditiveExpression	( byte * ) ptr + rounded_size		424295	1		+			
ANR	424952	CastExpression	( byte * ) ptr		424295	0					
ANR	424953	CastTarget	byte *		424295	0					
ANR	424954	Identifier	ptr		424295	1					
ANR	424955	Identifier	rounded_size		424295	1					
ANR	424956	ElseStatement	else		424295	0					
ANR	424957	CompoundStatement		137:17:5146:5146	424295	0					
ANR	424958	IfStatement	if ( ( byte * ) pp >= imem -> cfreed . cp -> int_freed_top )		424295	0					
ANR	424959	Condition	( byte * ) pp >= imem -> cfreed . cp -> int_freed_top	1551:20:49696:49739	424295	0	True				
ANR	424960	RelationalExpression	( byte * ) pp >= imem -> cfreed . cp -> int_freed_top		424295	0		>=			
ANR	424961	CastExpression	( byte * ) pp		424295	0					
ANR	424962	CastTarget	byte *		424295	0					
ANR	424963	Identifier	pp		424295	1					
ANR	424964	PtrMemberAccess	imem -> cfreed . cp -> int_freed_top		424295	1					
ANR	424965	MemberAccess	imem -> cfreed . cp		424295	0					
ANR	424966	PtrMemberAccess	imem -> cfreed		424295	0					
ANR	424967	Identifier	imem		424295	0					
ANR	424968	Identifier	cfreed		424295	1					
ANR	424969	Identifier	cp		424295	1					
ANR	424970	Identifier	int_freed_top		424295	1					
ANR	424971	CompoundStatement		138:66:5214:5214	424295	1					
ANR	424972	ExpressionStatement	imem -> cfreed . cp -> int_freed_top = ( byte * ) ptr + rounded_size	1552:20:49764:49823	424295	0	True				
ANR	424973	AssignmentExpression	imem -> cfreed . cp -> int_freed_top = ( byte * ) ptr + rounded_size		424295	0		=			
ANR	424974	PtrMemberAccess	imem -> cfreed . cp -> int_freed_top		424295	0					
ANR	424975	MemberAccess	imem -> cfreed . cp		424295	0					
ANR	424976	PtrMemberAccess	imem -> cfreed		424295	0					
ANR	424977	Identifier	imem		424295	0					
ANR	424978	Identifier	cfreed		424295	1					
ANR	424979	Identifier	cp		424295	1					
ANR	424980	Identifier	int_freed_top		424295	1					
ANR	424981	AdditiveExpression	( byte * ) ptr + rounded_size		424295	1		+			
ANR	424982	CastExpression	( byte * ) ptr		424295	0					
ANR	424983	CastTarget	byte *		424295	0					
ANR	424984	Identifier	ptr		424295	1					
ANR	424985	Identifier	rounded_size		424295	1					
ANR	424986	ExpressionStatement	pp -> o_type = & st_free	1555:12:49869:49890	424295	3	True				
ANR	424987	AssignmentExpression	pp -> o_type = & st_free		424295	0		=			
ANR	424988	PtrMemberAccess	pp -> o_type		424295	0					
ANR	424989	Identifier	pp		424295	0					
ANR	424990	Identifier	o_type		424295	1					
ANR	424991	UnaryOperationExpression	& st_free		424295	1					
ANR	424992	UnaryOperator	&		424295	0					
ANR	424993	Identifier	st_free		424295	1					
ANR	424994	ExpressionStatement	o_set_unmarked ( pp )	1556:12:49927:49945	424295	4	True				
ANR	424995	CallExpression	o_set_unmarked ( pp )		424295	0					
ANR	424996	Callee	o_set_unmarked		424295	0					
ANR	424997	Identifier	o_set_unmarked		424295	0					
ANR	424998	ArgumentList	pp		424295	1					
ANR	424999	Argument	pp		424295	0					
ANR	425000	Identifier	pp		424295	0					
ANR	425001	ExpressionStatement	"gs_alloc_fill ( ptr , gs_alloc_fill_free , size )"	1557:12:49959:50003	424295	5	True				
ANR	425002	CallExpression	"gs_alloc_fill ( ptr , gs_alloc_fill_free , size )"		424295	0					
ANR	425003	Callee	gs_alloc_fill		424295	0					
ANR	425004	Identifier	gs_alloc_fill		424295	0					
ANR	425005	ArgumentList	ptr		424295	1					
ANR	425006	Argument	ptr		424295	0					
ANR	425007	Identifier	ptr		424295	0					
ANR	425008	Argument	gs_alloc_fill_free		424295	1					
ANR	425009	Identifier	gs_alloc_fill_free		424295	0					
ANR	425010	Argument	size		424295	2					
ANR	425011	Identifier	size		424295	0					
ANR	425012	ExpressionStatement	* ( obj_header_t * * ) ptr = * pfl	1558:12:50017:50046	424295	6	True				
ANR	425013	AssignmentExpression	* ( obj_header_t * * ) ptr = * pfl		424295	0		=			
ANR	425014	UnaryOperationExpression	* ( obj_header_t * * ) ptr		424295	0					
ANR	425015	UnaryOperator	*		424295	0					
ANR	425016	CastExpression	( obj_header_t * * ) ptr		424295	1					
ANR	425017	CastTarget	obj_header_t * *		424295	0					
ANR	425018	Identifier	ptr		424295	1					
ANR	425019	UnaryOperationExpression	* pfl		424295	1					
ANR	425020	UnaryOperator	*		424295	0					
ANR	425021	Identifier	pfl		424295	1					
ANR	425022	ExpressionStatement	* pfl = ( obj_header_t * ) ptr	1559:12:50060:50087	424295	7	True				
ANR	425023	AssignmentExpression	* pfl = ( obj_header_t * ) ptr		424295	0		=			
ANR	425024	UnaryOperationExpression	* pfl		424295	0					
ANR	425025	UnaryOperator	*		424295	0					
ANR	425026	Identifier	pfl		424295	1					
ANR	425027	CastExpression	( obj_header_t * ) ptr		424295	1					
ANR	425028	CastTarget	obj_header_t *		424295	0					
ANR	425029	Identifier	ptr		424295	1					
ANR	425030	ExpressionStatement	"alloc_trace ( ( size > max_freelist_size ? "":-oF"" : "":-of"" ) , imem , cname , pstype , size , ptr )"	1560:12:50101:50214	424295	8	True				
ANR	425031	CallExpression	"alloc_trace ( ( size > max_freelist_size ? "":-oF"" : "":-of"" ) , imem , cname , pstype , size , ptr )"		424295	0					
ANR	425032	Callee	alloc_trace		424295	0					
ANR	425033	Identifier	alloc_trace		424295	0					
ANR	425034	ArgumentList	"size > max_freelist_size ? "":-oF"" : "":-of"""		424295	1					
ANR	425035	Argument	"size > max_freelist_size ? "":-oF"" : "":-of"""		424295	0					
ANR	425036	ConditionalExpression	"size > max_freelist_size ? "":-oF"" : "":-of"""		424295	0					
ANR	425037	Condition	size > max_freelist_size		424295	0					
ANR	425038	RelationalExpression	size > max_freelist_size		424295	0		>			
ANR	425039	Identifier	size		424295	0					
ANR	425040	Identifier	max_freelist_size		424295	1					
ANR	425041	PrimaryExpression	""":-oF"""		424295	1					
ANR	425042	PrimaryExpression	""":-of"""		424295	2					
ANR	425043	Argument	imem		424295	1					
ANR	425044	Identifier	imem		424295	0					
ANR	425045	Argument	cname		424295	2					
ANR	425046	Identifier	cname		424295	0					
ANR	425047	Argument	pstype		424295	3					
ANR	425048	Identifier	pstype		424295	0					
ANR	425049	Argument	size		424295	4					
ANR	425050	Identifier	size		424295	0					
ANR	425051	Argument	ptr		424295	5					
ANR	425052	Identifier	ptr		424295	0					
ANR	425053	ReturnStatement	return ;	1562:12:50228:50234	424295	9	True				
ANR	425054	ElseStatement	else		424295	0					
ANR	425055	CompoundStatement		152:11:5790:5790	424295	0					
ANR	425056	ExpressionStatement	pp -> o_type = & st_free	1566:8:50328:50349	424295	0	True				
ANR	425057	AssignmentExpression	pp -> o_type = & st_free		424295	0		=			
ANR	425058	PtrMemberAccess	pp -> o_type		424295	0					
ANR	425059	Identifier	pp		424295	0					
ANR	425060	Identifier	o_type		424295	1					
ANR	425061	UnaryOperationExpression	& st_free		424295	1					
ANR	425062	UnaryOperator	&		424295	0					
ANR	425063	Identifier	st_free		424295	1					
ANR	425064	ExpressionStatement	"gs_alloc_fill ( ptr , gs_alloc_fill_free , size )"	1567:8:50382:50426	424295	1	True				
ANR	425065	CallExpression	"gs_alloc_fill ( ptr , gs_alloc_fill_free , size )"		424295	0					
ANR	425066	Callee	gs_alloc_fill		424295	0					
ANR	425067	Identifier	gs_alloc_fill		424295	0					
ANR	425068	ArgumentList	ptr		424295	1					
ANR	425069	Argument	ptr		424295	0					
ANR	425070	Identifier	ptr		424295	0					
ANR	425071	Argument	gs_alloc_fill_free		424295	1					
ANR	425072	Identifier	gs_alloc_fill_free		424295	0					
ANR	425073	Argument	size		424295	2					
ANR	425074	Identifier	size		424295	0					
ANR	425075	ExpressionStatement	"alloc_trace ( "":-o#"" , imem , cname , pstype , size , ptr )"	1569:4:50438:50489	424295	20	True				
ANR	425076	CallExpression	"alloc_trace ( "":-o#"" , imem , cname , pstype , size , ptr )"		424295	0					
ANR	425077	Callee	alloc_trace		424295	0					
ANR	425078	Identifier	alloc_trace		424295	0					
ANR	425079	ArgumentList	""":-o#"""		424295	1					
ANR	425080	Argument	""":-o#"""		424295	0					
ANR	425081	PrimaryExpression	""":-o#"""		424295	0					
ANR	425082	Argument	imem		424295	1					
ANR	425083	Identifier	imem		424295	0					
ANR	425084	Argument	cname		424295	2					
ANR	425085	Identifier	cname		424295	0					
ANR	425086	Argument	pstype		424295	3					
ANR	425087	Identifier	pstype		424295	0					
ANR	425088	Argument	size		424295	4					
ANR	425089	Identifier	size		424295	0					
ANR	425090	Argument	ptr		424295	5					
ANR	425091	Identifier	ptr		424295	0					
ANR	425092	ExpressionStatement	imem -> lost . objects += obj_size_round ( size )	1570:4:50495:50537	424295	21	True				
ANR	425093	AssignmentExpression	imem -> lost . objects += obj_size_round ( size )		424295	0		+=			
ANR	425094	MemberAccess	imem -> lost . objects		424295	0					
ANR	425095	PtrMemberAccess	imem -> lost		424295	0					
ANR	425096	Identifier	imem		424295	0					
ANR	425097	Identifier	lost		424295	1					
ANR	425098	Identifier	objects		424295	1					
ANR	425099	CallExpression	obj_size_round ( size )		424295	1					
ANR	425100	Callee	obj_size_round		424295	0					
ANR	425101	Identifier	obj_size_round		424295	0					
ANR	425102	ArgumentList	size		424295	1					
ANR	425103	Argument	size		424295	0					
ANR	425104	Identifier	size		424295	0					
ANR	425105	ReturnType	static void		424295	1					
ANR	425106	Identifier	i_free_object		424295	2					
ANR	425107	ParameterList	"gs_memory_t * mem , void * ptr , client_name_t cname"		424295	3					
ANR	425108	Parameter	gs_memory_t * mem	1413:14:44476:44492	424295	0	True				
ANR	425109	ParameterType	gs_memory_t *		424295	0					
ANR	425110	Identifier	mem		424295	1					
ANR	425111	Parameter	void * ptr	1413:33:44495:44503	424295	1	True				
ANR	425112	ParameterType	void *		424295	0					
ANR	425113	Identifier	ptr		424295	1					
ANR	425114	Parameter	client_name_t cname	1413:44:44506:44524	424295	2	True				
ANR	425115	ParameterType	client_name_t		424295	0					
ANR	425116	Identifier	cname		424295	1					
ANR	425117	CFGEntryNode	ENTRY		424295		True				
ANR	425118	CFGExitNode	EXIT		424295		True				
ANR	425119	Symbol	pp		424295						
ANR	425120	Symbol	pp -> o_alone		424295						
ANR	425121	Symbol	imem -> largest_free_size		424295						
ANR	425122	Symbol	obj_align_round		424295						
ANR	425123	Symbol	& cld		424295						
ANR	425124	Symbol	& st_free		424295						
ANR	425125	Symbol	pstype -> finalize		424295						
ANR	425126	Symbol	gs_alloc_fill_free		424295						
ANR	425127	Symbol	imem -> cc		424295						
ANR	425128	Symbol	* pstype		424295						
ANR	425129	Symbol	gs_debug		424295						
ANR	425130	Symbol	obj_size_round		424295						
ANR	425131	Symbol	pstype		424295						
ANR	425132	Symbol	* ptr		424295						
ANR	425133	Symbol	PTR_BETWEEN		424295						
ANR	425134	Symbol	imem -> cfreed . memory		424295						
ANR	425135	Symbol	gs_debug_c		424295						
ANR	425136	Symbol	cld		424295						
ANR	425137	Symbol	imem -> lost . objects		424295						
ANR	425138	Symbol	* gs_debug		424295						
ANR	425139	Symbol	* imem -> cc		424295						
ANR	425140	Symbol	* imem		424295						
ANR	425141	Symbol	pp -> o_type		424295						
ANR	425142	Symbol	imem -> freelists		424295						
ANR	425143	Symbol	imem -> cfreed . cp		424295						
ANR	425144	Symbol	* pfl		424295						
ANR	425145	Symbol	struct_type_name_string		424295						
ANR	425146	Symbol	* pp		424295						
ANR	425147	Symbol	imem -> cfreed . cp -> chead		424295						
ANR	425148	Symbol	cld . memory -> saved		424295						
ANR	425149	Symbol	* finalize		424295						
ANR	425150	Symbol	clump_locate		424295						
ANR	425151	Symbol	clump_locate_ptr		424295						
ANR	425152	Symbol	& cl		424295						
ANR	425153	Symbol	size		424295						
ANR	425154	Symbol	max_freelist_size		424295						
ANR	425155	Symbol	cld . cp		424295						
ANR	425156	Symbol	pfl		424295						
ANR	425157	Symbol	client_name_string		424295						
ANR	425158	Symbol	obj_align_mask		424295						
ANR	425159	Symbol	cld . cp -> cbase		424295						
ANR	425160	Symbol	& imem -> cfreed		424295						
ANR	425161	Symbol	cld . cp -> cbot		424295						
ANR	425162	Symbol	cld . memory -> root		424295						
ANR	425163	Symbol	log2_obj_align_mod		424295						
ANR	425164	Symbol	cname		424295						
ANR	425165	Symbol	LARGE_FREELIST_INDEX		424295						
ANR	425166	Symbol	& saved_stype		424295						
ANR	425167	Symbol	imem -> cc -> chead		424295						
ANR	425168	Symbol	rounded_size		424295						
ANR	425169	Symbol	imem -> cfreed . cp -> int_freed_top		424295						
ANR	425170	Symbol	mem		424295						
ANR	425171	Symbol	imem -> cc -> int_freed_top		424295						
ANR	425172	Symbol	cl . cp		424295						
ANR	425173	Symbol	pre_obj_contents_size		424295						
ANR	425174	Symbol	* * imem		424295						
ANR	425175	Symbol	imem -> lost		424295						
ANR	425176	Symbol	cl		424295						
ANR	425177	Symbol	ptr		424295						
ANR	425178	Symbol	cl . memory		424295						
ANR	425179	Symbol	imem -> cfreed		424295						
ANR	425180	Symbol	cld . memory		424295						
ANR	425181	Symbol	* cld . cp		424295						
ANR	425182	Symbol	imem -> cc -> cbot		424295						
ANR	425183	Symbol	imem -> is_controlled		424295						
ANR	425184	Symbol	* ( obj_header_t * * ) ptr		424295						
ANR	425185	Symbol	finalize		424295						
ANR	425186	Symbol	* cld		424295						
ANR	425187	Symbol	* imem -> cfreed . cp		424295						
ANR	425188	Symbol	imem		424295						
ANR	425189	Symbol	saved_stype		424295						
ANR	425190	Symbol	* imem -> cfreed		424295						
ANR	425191	Symbol	* cld . memory		424295						
ANR	425192	Function	i_alloc_string	1572:0:50541:52609							
ANR	425193	FunctionDef	"i_alloc_string (gs_memory_t * mem , uint nbytes , client_name_t cname)"		425192	0					
ANR	425194	CompoundStatement		1574:0:50623:52609	425192	0					
ANR	425195	Statement	gs_ref_memory_t	1575:4:50629:50643	425192	0	True				
ANR	425196	Statement	*	1575:20:50645:50645	425192	1	True				
ANR	425197	Statement	const	1575:22:50647:50651	425192	2	True				
ANR	425198	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1575:28:50653:50682	425192	3	True				
ANR	425199	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		425192	0		=			
ANR	425200	Identifier	imem		425192	0					
ANR	425201	CastExpression	( gs_ref_memory_t * ) mem		425192	1					
ANR	425202	CastTarget	gs_ref_memory_t *		425192	0					
ANR	425203	Identifier	mem		425192	1					
ANR	425204	IdentifierDeclStatement	byte * str ;	1576:4:50688:50697	425192	4	True				
ANR	425205	IdentifierDecl	* str		425192	0					
ANR	425206	IdentifierDeclType	byte *		425192	0					
ANR	425207	Identifier	str		425192	1					
ANR	425208	IdentifierDeclStatement	clump_splay_walker sw ;	1577:4:50703:50724	425192	5	True				
ANR	425209	IdentifierDecl	sw		425192	0					
ANR	425210	IdentifierDeclType	clump_splay_walker		425192	0					
ANR	425211	Identifier	sw		425192	1					
ANR	425212	IdentifierDeclStatement	"clump_t * cp = clump_splay_walk_init_mid ( & sw , imem -> cc ) ;"	1583:4:50850:50904	425192	6	True				
ANR	425213	IdentifierDecl	"* cp = clump_splay_walk_init_mid ( & sw , imem -> cc )"		425192	0					
ANR	425214	IdentifierDeclType	clump_t *		425192	0					
ANR	425215	Identifier	cp		425192	1					
ANR	425216	AssignmentExpression	"* cp = clump_splay_walk_init_mid ( & sw , imem -> cc )"		425192	2		=			
ANR	425217	Identifier	cp		425192	0					
ANR	425218	CallExpression	"clump_splay_walk_init_mid ( & sw , imem -> cc )"		425192	1					
ANR	425219	Callee	clump_splay_walk_init_mid		425192	0					
ANR	425220	Identifier	clump_splay_walk_init_mid		425192	0					
ANR	425221	ArgumentList	& sw		425192	1					
ANR	425222	Argument	& sw		425192	0					
ANR	425223	UnaryOperationExpression	& sw		425192	0					
ANR	425224	UnaryOperator	&		425192	0					
ANR	425225	Identifier	sw		425192	1					
ANR	425226	Argument	imem -> cc		425192	1					
ANR	425227	PtrMemberAccess	imem -> cc		425192	0					
ANR	425228	Identifier	imem		425192	0					
ANR	425229	Identifier	cc		425192	1					
ANR	425230	IfStatement	if ( nbytes + ( uint ) HDR_ID_OFFSET < nbytes )		425192	7					
ANR	425231	Condition	nbytes + ( uint ) HDR_ID_OFFSET < nbytes	1585:8:50915:50951	425192	0	True				
ANR	425232	RelationalExpression	nbytes + ( uint ) HDR_ID_OFFSET < nbytes		425192	0		<			
ANR	425233	AdditiveExpression	nbytes + ( uint ) HDR_ID_OFFSET		425192	0		+			
ANR	425234	Identifier	nbytes		425192	0					
ANR	425235	CastExpression	( uint ) HDR_ID_OFFSET		425192	1					
ANR	425236	CastTarget	uint		425192	0					
ANR	425237	Identifier	HDR_ID_OFFSET		425192	1					
ANR	425238	Identifier	nbytes		425192	1					
ANR	425239	ReturnStatement	return NULL ;	1586:8:50962:50973	425192	1	True				
ANR	425240	Identifier	NULL		425192	0					
ANR	425241	ExpressionStatement	nbytes += HDR_ID_OFFSET	1588:4:50980:51003	425192	8	True				
ANR	425242	AssignmentExpression	nbytes += HDR_ID_OFFSET		425192	0		+=			
ANR	425243	Identifier	nbytes		425192	0					
ANR	425244	Identifier	HDR_ID_OFFSET		425192	1					
ANR	425245	IfStatement	if ( Memento_failThisEvent ( ) )		425192	9					
ANR	425246	Condition	Memento_failThisEvent ( )	1591:8:51029:51051	425192	0	True				
ANR	425247	CallExpression	Memento_failThisEvent ( )		425192	0					
ANR	425248	Callee	Memento_failThisEvent		425192	0					
ANR	425249	Identifier	Memento_failThisEvent		425192	0					
ANR	425250	ArgumentList			425192	1					
ANR	425251	ReturnStatement	return NULL ;	1592:8:51062:51073	425192	1	True				
ANR	425252	Identifier	NULL		425192	0					
ANR	425253	IfStatement	if ( cp == 0 )		425192	10					
ANR	425254	Condition	cp == 0	1594:8:51090:51096	425192	0	True				
ANR	425255	EqualityExpression	cp == 0		425192	0		==			
ANR	425256	Identifier	cp		425192	0					
ANR	425257	PrimaryExpression	0		425192	1					
ANR	425258	CompoundStatement		21:17:475:475	425192	1					
ANR	425259	ExpressionStatement	"imem -> cc = clump_splay_walk_init ( & sw , imem )"	1596:8:51148:51191	425192	0	True				
ANR	425260	AssignmentExpression	"imem -> cc = clump_splay_walk_init ( & sw , imem )"		425192	0		=			
ANR	425261	PtrMemberAccess	imem -> cc		425192	0					
ANR	425262	Identifier	imem		425192	0					
ANR	425263	Identifier	cc		425192	1					
ANR	425264	CallExpression	"clump_splay_walk_init ( & sw , imem )"		425192	1					
ANR	425265	Callee	clump_splay_walk_init		425192	0					
ANR	425266	Identifier	clump_splay_walk_init		425192	0					
ANR	425267	ArgumentList	& sw		425192	1					
ANR	425268	Argument	& sw		425192	0					
ANR	425269	UnaryOperationExpression	& sw		425192	0					
ANR	425270	UnaryOperator	&		425192	0					
ANR	425271	Identifier	sw		425192	1					
ANR	425272	Argument	imem		425192	1					
ANR	425273	Identifier	imem		425192	0					
ANR	425274	ExpressionStatement	alloc_open_clump ( imem )	1597:8:51201:51223	425192	1	True				
ANR	425275	CallExpression	alloc_open_clump ( imem )		425192	0					
ANR	425276	Callee	alloc_open_clump		425192	0					
ANR	425277	Identifier	alloc_open_clump		425192	0					
ANR	425278	ArgumentList	imem		425192	1					
ANR	425279	Argument	imem		425192	0					
ANR	425280	Identifier	imem		425192	0					
ANR	425281	Label	top :	1599:0:51231:51234	425192	11	True				
ANR	425282	Identifier	top		425192	0					
ANR	425283	IfStatement	if ( imem -> cc && ! imem -> cc -> c_alone && imem -> cc -> ctop - imem -> cc -> cbot > nbytes )		425192	12					
ANR	425284	Condition	imem -> cc && ! imem -> cc -> c_alone && imem -> cc -> ctop - imem -> cc -> cbot > nbytes	1600:8:51244:51317	425192	0	True				
ANR	425285	AndExpression	imem -> cc && ! imem -> cc -> c_alone && imem -> cc -> ctop - imem -> cc -> cbot > nbytes		425192	0		&&			
ANR	425286	PtrMemberAccess	imem -> cc		425192	0					
ANR	425287	Identifier	imem		425192	0					
ANR	425288	Identifier	cc		425192	1					
ANR	425289	AndExpression	! imem -> cc -> c_alone && imem -> cc -> ctop - imem -> cc -> cbot > nbytes		425192	1		&&			
ANR	425290	UnaryOperationExpression	! imem -> cc -> c_alone		425192	0					
ANR	425291	UnaryOperator	!		425192	0					
ANR	425292	PtrMemberAccess	imem -> cc -> c_alone		425192	1					
ANR	425293	PtrMemberAccess	imem -> cc		425192	0					
ANR	425294	Identifier	imem		425192	0					
ANR	425295	Identifier	cc		425192	1					
ANR	425296	Identifier	c_alone		425192	1					
ANR	425297	RelationalExpression	imem -> cc -> ctop - imem -> cc -> cbot > nbytes		425192	1		>			
ANR	425298	AdditiveExpression	imem -> cc -> ctop - imem -> cc -> cbot		425192	0		-			
ANR	425299	PtrMemberAccess	imem -> cc -> ctop		425192	0					
ANR	425300	PtrMemberAccess	imem -> cc		425192	0					
ANR	425301	Identifier	imem		425192	0					
ANR	425302	Identifier	cc		425192	1					
ANR	425303	Identifier	ctop		425192	1					
ANR	425304	PtrMemberAccess	imem -> cc -> cbot		425192	1					
ANR	425305	PtrMemberAccess	imem -> cc		425192	0					
ANR	425306	Identifier	imem		425192	0					
ANR	425307	Identifier	cc		425192	1					
ANR	425308	Identifier	cbot		425192	1					
ANR	425309	Identifier	nbytes		425192	1					
ANR	425310	CompoundStatement		27:84:696:696	425192	1					
ANR	425311	ExpressionStatement	"if_debug4m ( 'A' , mem , ""[a%d:+> ]%s(%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) ( imem -> cc -> ctop - nbytes ) )"	1601:8:51330:51512	425192	0	True				
ANR	425312	CallExpression	"if_debug4m ( 'A' , mem , ""[a%d:+> ]%s(%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) ( imem -> cc -> ctop - nbytes ) )"		425192	0					
ANR	425313	Callee	if_debug4m		425192	0					
ANR	425314	Identifier	if_debug4m		425192	0					
ANR	425315	ArgumentList	'A'		425192	1					
ANR	425316	Argument	'A'		425192	0					
ANR	425317	PrimaryExpression	'A'		425192	0					
ANR	425318	Argument	mem		425192	1					
ANR	425319	Identifier	mem		425192	0					
ANR	425320	Argument	"""[a%d:+> ]%s(%u) = 0x%lx\\n"""		425192	2					
ANR	425321	PrimaryExpression	"""[a%d:+> ]%s(%u) = 0x%lx\\n"""		425192	0					
ANR	425322	Argument	alloc_trace_space ( imem )		425192	3					
ANR	425323	CallExpression	alloc_trace_space ( imem )		425192	0					
ANR	425324	Callee	alloc_trace_space		425192	0					
ANR	425325	Identifier	alloc_trace_space		425192	0					
ANR	425326	ArgumentList	imem		425192	1					
ANR	425327	Argument	imem		425192	0					
ANR	425328	Identifier	imem		425192	0					
ANR	425329	Argument	client_name_string ( cname )		425192	4					
ANR	425330	CallExpression	client_name_string ( cname )		425192	0					
ANR	425331	Callee	client_name_string		425192	0					
ANR	425332	Identifier	client_name_string		425192	0					
ANR	425333	ArgumentList	cname		425192	1					
ANR	425334	Argument	cname		425192	0					
ANR	425335	Identifier	cname		425192	0					
ANR	425336	Argument	nbytes		425192	5					
ANR	425337	Identifier	nbytes		425192	0					
ANR	425338	Argument	( ulong ) ( imem -> cc -> ctop - nbytes )		425192	6					
ANR	425339	CastExpression	( ulong ) ( imem -> cc -> ctop - nbytes )		425192	0					
ANR	425340	CastTarget	ulong		425192	0					
ANR	425341	AdditiveExpression	imem -> cc -> ctop - nbytes		425192	1		-			
ANR	425342	PtrMemberAccess	imem -> cc -> ctop		425192	0					
ANR	425343	PtrMemberAccess	imem -> cc		425192	0					
ANR	425344	Identifier	imem		425192	0					
ANR	425345	Identifier	cc		425192	1					
ANR	425346	Identifier	ctop		425192	1					
ANR	425347	Identifier	nbytes		425192	1					
ANR	425348	ExpressionStatement	str = imem -> cc -> ctop -= nbytes	1604:8:51522:51552	425192	1	True				
ANR	425349	AssignmentExpression	str = imem -> cc -> ctop -= nbytes		425192	0		=			
ANR	425350	Identifier	str		425192	0					
ANR	425351	AssignmentExpression	imem -> cc -> ctop -= nbytes		425192	1		-=			
ANR	425352	PtrMemberAccess	imem -> cc -> ctop		425192	0					
ANR	425353	PtrMemberAccess	imem -> cc		425192	0					
ANR	425354	Identifier	imem		425192	0					
ANR	425355	Identifier	cc		425192	1					
ANR	425356	Identifier	ctop		425192	1					
ANR	425357	Identifier	nbytes		425192	1					
ANR	425358	ExpressionStatement	"gs_alloc_fill ( str , gs_alloc_fill_alloc , nbytes )"	1605:8:51562:51609	425192	2	True				
ANR	425359	CallExpression	"gs_alloc_fill ( str , gs_alloc_fill_alloc , nbytes )"		425192	0					
ANR	425360	Callee	gs_alloc_fill		425192	0					
ANR	425361	Identifier	gs_alloc_fill		425192	0					
ANR	425362	ArgumentList	str		425192	1					
ANR	425363	Argument	str		425192	0					
ANR	425364	Identifier	str		425192	0					
ANR	425365	Argument	gs_alloc_fill_alloc		425192	1					
ANR	425366	Identifier	gs_alloc_fill_alloc		425192	0					
ANR	425367	Argument	nbytes		425192	2					
ANR	425368	Identifier	nbytes		425192	0					
ANR	425369	ExpressionStatement	str += HDR_ID_OFFSET	1606:8:51619:51639	425192	3	True				
ANR	425370	AssignmentExpression	str += HDR_ID_OFFSET		425192	0		+=			
ANR	425371	Identifier	str		425192	0					
ANR	425372	Identifier	HDR_ID_OFFSET		425192	1					
ANR	425373	ExpressionStatement	ASSIGN_HDR_ID ( str )	1607:8:51649:51667	425192	4	True				
ANR	425374	CallExpression	ASSIGN_HDR_ID ( str )		425192	0					
ANR	425375	Callee	ASSIGN_HDR_ID		425192	0					
ANR	425376	Identifier	ASSIGN_HDR_ID		425192	0					
ANR	425377	ArgumentList	str		425192	1					
ANR	425378	Argument	str		425192	0					
ANR	425379	Identifier	str		425192	0					
ANR	425380	ReturnStatement	return str ;	1608:8:51677:51687	425192	5	True				
ANR	425381	Identifier	str		425192	0					
ANR	425382	ExpressionStatement	cp = clump_splay_walk_fwd ( & sw )	1611:4:51729:51759	425192	13	True				
ANR	425383	AssignmentExpression	cp = clump_splay_walk_fwd ( & sw )		425192	0		=			
ANR	425384	Identifier	cp		425192	0					
ANR	425385	CallExpression	clump_splay_walk_fwd ( & sw )		425192	1					
ANR	425386	Callee	clump_splay_walk_fwd		425192	0					
ANR	425387	Identifier	clump_splay_walk_fwd		425192	0					
ANR	425388	ArgumentList	& sw		425192	1					
ANR	425389	Argument	& sw		425192	0					
ANR	425390	UnaryOperationExpression	& sw		425192	0					
ANR	425391	UnaryOperator	&		425192	0					
ANR	425392	Identifier	sw		425192	1					
ANR	425393	IfStatement	if ( cp != NULL )		425192	14					
ANR	425394	Condition	cp != NULL	1613:8:51770:51779	425192	0	True				
ANR	425395	EqualityExpression	cp != NULL		425192	0		!=			
ANR	425396	Identifier	cp		425192	0					
ANR	425397	Identifier	NULL		425192	1					
ANR	425398	CompoundStatement		41:4:1162:1162	425192	1					
ANR	425399	ExpressionStatement	alloc_close_clump ( imem )	1615:8:51796:51819	425192	0	True				
ANR	425400	CallExpression	alloc_close_clump ( imem )		425192	0					
ANR	425401	Callee	alloc_close_clump		425192	0					
ANR	425402	Identifier	alloc_close_clump		425192	0					
ANR	425403	ArgumentList	imem		425192	1					
ANR	425404	Argument	imem		425192	0					
ANR	425405	Identifier	imem		425192	0					
ANR	425406	ExpressionStatement	imem -> cc = cp	1616:8:51829:51842	425192	1	True				
ANR	425407	AssignmentExpression	imem -> cc = cp		425192	0		=			
ANR	425408	PtrMemberAccess	imem -> cc		425192	0					
ANR	425409	Identifier	imem		425192	0					
ANR	425410	Identifier	cc		425192	1					
ANR	425411	Identifier	cp		425192	1					
ANR	425412	ExpressionStatement	alloc_open_clump ( imem )	1617:8:51852:51874	425192	2	True				
ANR	425413	CallExpression	alloc_open_clump ( imem )		425192	0					
ANR	425414	Callee	alloc_open_clump		425192	0					
ANR	425415	Identifier	alloc_open_clump		425192	0					
ANR	425416	ArgumentList	imem		425192	1					
ANR	425417	Argument	imem		425192	0					
ANR	425418	Identifier	imem		425192	0					
ANR	425419	GotoStatement	goto top ;	1618:8:51884:51892	425192	3	True				
ANR	425420	Identifier	top		425192	0					
ANR	425421	IfStatement	if ( nbytes > string_space_quanta ( max_uint - sizeof ( clump_head_t ) ) * string_data_quantum )		425192	15					
ANR	425422	Condition	nbytes > string_space_quanta ( max_uint - sizeof ( clump_head_t ) ) * string_data_quantum	1620:8:51908:51998	425192	0	True				
ANR	425423	RelationalExpression	nbytes > string_space_quanta ( max_uint - sizeof ( clump_head_t ) ) * string_data_quantum		425192	0		>			
ANR	425424	Identifier	nbytes		425192	0					
ANR	425425	MultiplicativeExpression	string_space_quanta ( max_uint - sizeof ( clump_head_t ) ) * string_data_quantum		425192	1		*			
ANR	425426	CallExpression	string_space_quanta ( max_uint - sizeof ( clump_head_t ) )		425192	0					
ANR	425427	Callee	string_space_quanta		425192	0					
ANR	425428	Identifier	string_space_quanta		425192	0					
ANR	425429	ArgumentList	max_uint - sizeof ( clump_head_t )		425192	1					
ANR	425430	Argument	max_uint - sizeof ( clump_head_t )		425192	0					
ANR	425431	AdditiveExpression	max_uint - sizeof ( clump_head_t )		425192	0		-			
ANR	425432	Identifier	max_uint		425192	0					
ANR	425433	SizeofExpression	sizeof ( clump_head_t )		425192	1					
ANR	425434	Sizeof	sizeof		425192	0					
ANR	425435	SizeofOperand	clump_head_t		425192	1					
ANR	425436	Identifier	string_data_quantum		425192	1					
ANR	425437	CompoundStatement		49:10:1386:1386	425192	1					
ANR	425438	ReturnStatement	return 0 ;	1623:8:52064:52072	425192	0	True				
ANR	425439	PrimaryExpression	0		425192	0					
ANR	425440	IfStatement	if ( nbytes >= imem -> large_size )		425192	16					
ANR	425441	Condition	nbytes >= imem -> large_size	1625:8:52088:52113	425192	0	True				
ANR	425442	RelationalExpression	nbytes >= imem -> large_size		425192	0		>=			
ANR	425443	Identifier	nbytes		425192	0					
ANR	425444	PtrMemberAccess	imem -> large_size		425192	1					
ANR	425445	Identifier	imem		425192	0					
ANR	425446	Identifier	large_size		425192	1					
ANR	425447	CompoundStatement		52:36:1492:1492	425192	1					
ANR	425448	ReturnStatement	"return i_alloc_string_immovable ( mem , nbytes , cname ) ;"	1626:8:52161:52212	425192	0	True				
ANR	425449	CallExpression	"i_alloc_string_immovable ( mem , nbytes , cname )"		425192	0					
ANR	425450	Callee	i_alloc_string_immovable		425192	0					
ANR	425451	Identifier	i_alloc_string_immovable		425192	0					
ANR	425452	ArgumentList	mem		425192	1					
ANR	425453	Argument	mem		425192	0					
ANR	425454	Identifier	mem		425192	0					
ANR	425455	Argument	nbytes		425192	1					
ANR	425456	Identifier	nbytes		425192	0					
ANR	425457	Argument	cname		425192	2					
ANR	425458	Identifier	cname		425192	0					
ANR	425459	ElseStatement	else		425192	0					
ANR	425460	CompoundStatement		54:11:1601:1601	425192	0					
ANR	425461	ExpressionStatement	"cp = alloc_acquire_clump ( imem , ( ulong ) imem -> clump_size , true , ""clump"" )"	1628:8:52262:52333	425192	0	True				
ANR	425462	AssignmentExpression	"cp = alloc_acquire_clump ( imem , ( ulong ) imem -> clump_size , true , ""clump"" )"		425192	0		=			
ANR	425463	Identifier	cp		425192	0					
ANR	425464	CallExpression	"alloc_acquire_clump ( imem , ( ulong ) imem -> clump_size , true , ""clump"" )"		425192	1					
ANR	425465	Callee	alloc_acquire_clump		425192	0					
ANR	425466	Identifier	alloc_acquire_clump		425192	0					
ANR	425467	ArgumentList	imem		425192	1					
ANR	425468	Argument	imem		425192	0					
ANR	425469	Identifier	imem		425192	0					
ANR	425470	Argument	( ulong ) imem -> clump_size		425192	1					
ANR	425471	CastExpression	( ulong ) imem -> clump_size		425192	0					
ANR	425472	CastTarget	ulong		425192	0					
ANR	425473	PtrMemberAccess	imem -> clump_size		425192	1					
ANR	425474	Identifier	imem		425192	0					
ANR	425475	Identifier	clump_size		425192	1					
ANR	425476	Argument	true		425192	2					
ANR	425477	Identifier	true		425192	0					
ANR	425478	Argument	"""clump"""		425192	3					
ANR	425479	PrimaryExpression	"""clump"""		425192	0					
ANR	425480	IfStatement	if ( cp == 0 )		425192	1					
ANR	425481	Condition	cp == 0	1630:12:52348:52354	425192	0	True				
ANR	425482	EqualityExpression	cp == 0		425192	0		==			
ANR	425483	Identifier	cp		425192	0					
ANR	425484	PrimaryExpression	0		425192	1					
ANR	425485	ReturnStatement	return 0 ;	1631:12:52369:52377	425192	1	True				
ANR	425486	PrimaryExpression	0		425192	0					
ANR	425487	ExpressionStatement	alloc_close_clump ( imem )	1632:8:52387:52410	425192	2	True				
ANR	425488	CallExpression	alloc_close_clump ( imem )		425192	0					
ANR	425489	Callee	alloc_close_clump		425192	0					
ANR	425490	Identifier	alloc_close_clump		425192	0					
ANR	425491	ArgumentList	imem		425192	1					
ANR	425492	Argument	imem		425192	0					
ANR	425493	Identifier	imem		425192	0					
ANR	425494	ExpressionStatement	"imem -> cc = clump_splay_walk_init_mid ( & sw , cp )"	1633:8:52420:52465	425192	3	True				
ANR	425495	AssignmentExpression	"imem -> cc = clump_splay_walk_init_mid ( & sw , cp )"		425192	0		=			
ANR	425496	PtrMemberAccess	imem -> cc		425192	0					
ANR	425497	Identifier	imem		425192	0					
ANR	425498	Identifier	cc		425192	1					
ANR	425499	CallExpression	"clump_splay_walk_init_mid ( & sw , cp )"		425192	1					
ANR	425500	Callee	clump_splay_walk_init_mid		425192	0					
ANR	425501	Identifier	clump_splay_walk_init_mid		425192	0					
ANR	425502	ArgumentList	& sw		425192	1					
ANR	425503	Argument	& sw		425192	0					
ANR	425504	UnaryOperationExpression	& sw		425192	0					
ANR	425505	UnaryOperator	&		425192	0					
ANR	425506	Identifier	sw		425192	1					
ANR	425507	Argument	cp		425192	1					
ANR	425508	Identifier	cp		425192	0					
ANR	425509	ExpressionStatement	"gs_alloc_fill ( imem -> cc -> cbase , gs_alloc_fill_free , imem -> cc -> climit - imem -> cc -> cbase )"	1634:8:52475:52583	425192	4	True				
ANR	425510	CallExpression	"gs_alloc_fill ( imem -> cc -> cbase , gs_alloc_fill_free , imem -> cc -> climit - imem -> cc -> cbase )"		425192	0					
ANR	425511	Callee	gs_alloc_fill		425192	0					
ANR	425512	Identifier	gs_alloc_fill		425192	0					
ANR	425513	ArgumentList	imem -> cc -> cbase		425192	1					
ANR	425514	Argument	imem -> cc -> cbase		425192	0					
ANR	425515	PtrMemberAccess	imem -> cc -> cbase		425192	0					
ANR	425516	PtrMemberAccess	imem -> cc		425192	0					
ANR	425517	Identifier	imem		425192	0					
ANR	425518	Identifier	cc		425192	1					
ANR	425519	Identifier	cbase		425192	1					
ANR	425520	Argument	gs_alloc_fill_free		425192	1					
ANR	425521	Identifier	gs_alloc_fill_free		425192	0					
ANR	425522	Argument	imem -> cc -> climit - imem -> cc -> cbase		425192	2					
ANR	425523	AdditiveExpression	imem -> cc -> climit - imem -> cc -> cbase		425192	0		-			
ANR	425524	PtrMemberAccess	imem -> cc -> climit		425192	0					
ANR	425525	PtrMemberAccess	imem -> cc		425192	0					
ANR	425526	Identifier	imem		425192	0					
ANR	425527	Identifier	cc		425192	1					
ANR	425528	Identifier	climit		425192	1					
ANR	425529	PtrMemberAccess	imem -> cc -> cbase		425192	1					
ANR	425530	PtrMemberAccess	imem -> cc		425192	0					
ANR	425531	Identifier	imem		425192	0					
ANR	425532	Identifier	cc		425192	1					
ANR	425533	Identifier	cbase		425192	1					
ANR	425534	GotoStatement	goto top ;	1636:8:52593:52601	425192	5	True				
ANR	425535	Identifier	top		425192	0					
ANR	425536	ReturnType	static byte *		425192	1					
ANR	425537	Identifier	i_alloc_string		425192	2					
ANR	425538	ParameterList	"gs_memory_t * mem , uint nbytes , client_name_t cname"		425192	3					
ANR	425539	Parameter	gs_memory_t * mem	1573:15:50570:50586	425192	0	True				
ANR	425540	ParameterType	gs_memory_t *		425192	0					
ANR	425541	Identifier	mem		425192	1					
ANR	425542	Parameter	uint nbytes	1573:34:50589:50599	425192	1	True				
ANR	425543	ParameterType	uint		425192	0					
ANR	425544	Identifier	nbytes		425192	1					
ANR	425545	Parameter	client_name_t cname	1573:47:50602:50620	425192	2	True				
ANR	425546	ParameterType	client_name_t		425192	0					
ANR	425547	Identifier	cname		425192	1					
ANR	425548	CFGEntryNode	ENTRY		425192		True				
ANR	425549	CFGExitNode	EXIT		425192		True				
ANR	425550	Symbol	max_uint		425192						
ANR	425551	Symbol	gs_alloc_fill_free		425192						
ANR	425552	Symbol	cname		425192						
ANR	425553	Symbol	imem -> cc		425192						
ANR	425554	Symbol	imem -> cc -> c_alone		425192						
ANR	425555	Symbol	i_alloc_string_immovable		425192						
ANR	425556	Symbol	clump_splay_walk_init_mid		425192						
ANR	425557	Symbol	alloc_trace_space		425192						
ANR	425558	Symbol	& sw		425192						
ANR	425559	Symbol	mem		425192						
ANR	425560	Symbol	HDR_ID_OFFSET		425192						
ANR	425561	Symbol	clump_splay_walk_init		425192						
ANR	425562	Symbol	string_data_quantum		425192						
ANR	425563	Symbol	imem -> cc -> cbase		425192						
ANR	425564	Symbol	string_space_quanta		425192						
ANR	425565	Symbol	imem -> large_size		425192						
ANR	425566	Symbol	* imem -> cc		425192						
ANR	425567	Symbol	* imem		425192						
ANR	425568	Symbol	Memento_failThisEvent		425192						
ANR	425569	Symbol	* * imem		425192						
ANR	425570	Symbol	NULL		425192						
ANR	425571	Symbol	sw		425192						
ANR	425572	Symbol	imem -> cc -> ctop		425192						
ANR	425573	Symbol	clump_splay_walk_fwd		425192						
ANR	425574	Symbol	imem -> clump_size		425192						
ANR	425575	Symbol	alloc_acquire_clump		425192						
ANR	425576	Symbol	cp		425192						
ANR	425577	Symbol	nbytes		425192						
ANR	425578	Symbol	str		425192						
ANR	425579	Symbol	imem -> cc -> climit		425192						
ANR	425580	Symbol	imem -> cc -> cbot		425192						
ANR	425581	Symbol	gs_alloc_fill_alloc		425192						
ANR	425582	Symbol	true		425192						
ANR	425583	Symbol	client_name_string		425192						
ANR	425584	Symbol	imem		425192						
ANR	425585	Function	i_alloc_string_immovable	1639:0:52611:53519							
ANR	425586	FunctionDef	"i_alloc_string_immovable (gs_memory_t * mem , uint nbytes , client_name_t cname)"		425585	0					
ANR	425587	CompoundStatement		1641:0:52703:53519	425585	0					
ANR	425588	Statement	gs_ref_memory_t	1642:4:52709:52723	425585	0	True				
ANR	425589	Statement	*	1642:20:52725:52725	425585	1	True				
ANR	425590	Statement	const	1642:22:52727:52731	425585	2	True				
ANR	425591	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1642:28:52733:52762	425585	3	True				
ANR	425592	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		425585	0		=			
ANR	425593	Identifier	imem		425585	0					
ANR	425594	CastExpression	( gs_ref_memory_t * ) mem		425585	1					
ANR	425595	CastTarget	gs_ref_memory_t *		425585	0					
ANR	425596	Identifier	mem		425585	1					
ANR	425597	IdentifierDeclStatement	byte * str ;	1643:4:52768:52777	425585	4	True				
ANR	425598	IdentifierDecl	* str		425585	0					
ANR	425599	IdentifierDeclType	byte *		425585	0					
ANR	425600	Identifier	str		425585	1					
ANR	425601	IdentifierDeclStatement	uint asize ;	1644:4:52783:52793	425585	5	True				
ANR	425602	IdentifierDecl	asize		425585	0					
ANR	425603	IdentifierDeclType	uint		425585	0					
ANR	425604	Identifier	asize		425585	1					
ANR	425605	IdentifierDeclStatement	clump_t * cp ;	1645:4:52799:52810	425585	6	True				
ANR	425606	IdentifierDecl	* cp		425585	0					
ANR	425607	IdentifierDeclType	clump_t *		425585	0					
ANR	425608	Identifier	cp		425585	1					
ANR	425609	ExpressionStatement	nbytes += HDR_ID_OFFSET	1647:4:52817:52840	425585	7	True				
ANR	425610	AssignmentExpression	nbytes += HDR_ID_OFFSET		425585	0		+=			
ANR	425611	Identifier	nbytes		425585	0					
ANR	425612	Identifier	HDR_ID_OFFSET		425585	1					
ANR	425613	IfStatement	if ( Memento_failThisEvent ( ) )		425585	8					
ANR	425614	Condition	Memento_failThisEvent ( )	1650:8:52866:52888	425585	0	True				
ANR	425615	CallExpression	Memento_failThisEvent ( )		425585	0					
ANR	425616	Callee	Memento_failThisEvent		425585	0					
ANR	425617	Identifier	Memento_failThisEvent		425585	0					
ANR	425618	ArgumentList			425585	1					
ANR	425619	ReturnStatement	return NULL ;	1651:8:52899:52910	425585	1	True				
ANR	425620	Identifier	NULL		425585	0					
ANR	425621	ExpressionStatement	asize = string_clump_space ( nbytes ) + sizeof ( clump_head_t )	1654:4:52962:53019	425585	9	True				
ANR	425622	AssignmentExpression	asize = string_clump_space ( nbytes ) + sizeof ( clump_head_t )		425585	0		=			
ANR	425623	Identifier	asize		425585	0					
ANR	425624	AdditiveExpression	string_clump_space ( nbytes ) + sizeof ( clump_head_t )		425585	1		+			
ANR	425625	CallExpression	string_clump_space ( nbytes )		425585	0					
ANR	425626	Callee	string_clump_space		425585	0					
ANR	425627	Identifier	string_clump_space		425585	0					
ANR	425628	ArgumentList	nbytes		425585	1					
ANR	425629	Argument	nbytes		425585	0					
ANR	425630	Identifier	nbytes		425585	0					
ANR	425631	SizeofExpression	sizeof ( clump_head_t )		425585	1					
ANR	425632	Sizeof	sizeof		425585	0					
ANR	425633	SizeofOperand	clump_head_t		425585	1					
ANR	425634	ExpressionStatement	"cp = alloc_acquire_clump ( imem , ( ulong ) asize , true , ""large string clump"" )"	1655:4:53025:53136	425585	10	True				
ANR	425635	AssignmentExpression	"cp = alloc_acquire_clump ( imem , ( ulong ) asize , true , ""large string clump"" )"		425585	0		=			
ANR	425636	Identifier	cp		425585	0					
ANR	425637	CallExpression	"alloc_acquire_clump ( imem , ( ulong ) asize , true , ""large string clump"" )"		425585	1					
ANR	425638	Callee	alloc_acquire_clump		425585	0					
ANR	425639	Identifier	alloc_acquire_clump		425585	0					
ANR	425640	ArgumentList	imem		425585	1					
ANR	425641	Argument	imem		425585	0					
ANR	425642	Identifier	imem		425585	0					
ANR	425643	Argument	( ulong ) asize		425585	1					
ANR	425644	CastExpression	( ulong ) asize		425585	0					
ANR	425645	CastTarget	ulong		425585	0					
ANR	425646	Identifier	asize		425585	1					
ANR	425647	Argument	true		425585	2					
ANR	425648	Identifier	true		425585	0					
ANR	425649	Argument	"""large string clump"""		425585	3					
ANR	425650	PrimaryExpression	"""large string clump"""		425585	0					
ANR	425651	IfStatement	if ( cp == 0 )		425585	11					
ANR	425652	Condition	cp == 0	1658:8:53147:53153	425585	0	True				
ANR	425653	EqualityExpression	cp == 0		425585	0		==			
ANR	425654	Identifier	cp		425585	0					
ANR	425655	PrimaryExpression	0		425585	1					
ANR	425656	ReturnStatement	return 0 ;	1659:8:53164:53172	425585	1	True				
ANR	425657	PrimaryExpression	0		425585	0					
ANR	425658	ExpressionStatement	cp -> c_alone = true	1660:4:53178:53196	425585	12	True				
ANR	425659	AssignmentExpression	cp -> c_alone = true		425585	0		=			
ANR	425660	PtrMemberAccess	cp -> c_alone		425585	0					
ANR	425661	Identifier	cp		425585	0					
ANR	425662	Identifier	c_alone		425585	1					
ANR	425663	Identifier	true		425585	1					
ANR	425664	ExpressionStatement	str = cp -> ctop = cp -> climit - nbytes	1662:4:53203:53239	425585	13	True				
ANR	425665	AssignmentExpression	str = cp -> ctop = cp -> climit - nbytes		425585	0		=			
ANR	425666	Identifier	str		425585	0					
ANR	425667	AssignmentExpression	cp -> ctop = cp -> climit - nbytes		425585	1		=			
ANR	425668	PtrMemberAccess	cp -> ctop		425585	0					
ANR	425669	Identifier	cp		425585	0					
ANR	425670	Identifier	ctop		425585	1					
ANR	425671	AdditiveExpression	cp -> climit - nbytes		425585	1		-			
ANR	425672	PtrMemberAccess	cp -> climit		425585	0					
ANR	425673	Identifier	cp		425585	0					
ANR	425674	Identifier	climit		425585	1					
ANR	425675	Identifier	nbytes		425585	1					
ANR	425676	ExpressionStatement	"if_debug4m ( 'a' , mem , ""[a%d|+>L]%s(%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) str )"	1663:4:53245:53397	425585	14	True				
ANR	425677	CallExpression	"if_debug4m ( 'a' , mem , ""[a%d|+>L]%s(%u) = 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) str )"		425585	0					
ANR	425678	Callee	if_debug4m		425585	0					
ANR	425679	Identifier	if_debug4m		425585	0					
ANR	425680	ArgumentList	'a'		425585	1					
ANR	425681	Argument	'a'		425585	0					
ANR	425682	PrimaryExpression	'a'		425585	0					
ANR	425683	Argument	mem		425585	1					
ANR	425684	Identifier	mem		425585	0					
ANR	425685	Argument	"""[a%d|+>L]%s(%u) = 0x%lx\\n"""		425585	2					
ANR	425686	PrimaryExpression	"""[a%d|+>L]%s(%u) = 0x%lx\\n"""		425585	0					
ANR	425687	Argument	alloc_trace_space ( imem )		425585	3					
ANR	425688	CallExpression	alloc_trace_space ( imem )		425585	0					
ANR	425689	Callee	alloc_trace_space		425585	0					
ANR	425690	Identifier	alloc_trace_space		425585	0					
ANR	425691	ArgumentList	imem		425585	1					
ANR	425692	Argument	imem		425585	0					
ANR	425693	Identifier	imem		425585	0					
ANR	425694	Argument	client_name_string ( cname )		425585	4					
ANR	425695	CallExpression	client_name_string ( cname )		425585	0					
ANR	425696	Callee	client_name_string		425585	0					
ANR	425697	Identifier	client_name_string		425585	0					
ANR	425698	ArgumentList	cname		425585	1					
ANR	425699	Argument	cname		425585	0					
ANR	425700	Identifier	cname		425585	0					
ANR	425701	Argument	nbytes		425585	5					
ANR	425702	Identifier	nbytes		425585	0					
ANR	425703	Argument	( ulong ) str		425585	6					
ANR	425704	CastExpression	( ulong ) str		425585	0					
ANR	425705	CastTarget	ulong		425585	0					
ANR	425706	Identifier	str		425585	1					
ANR	425707	ExpressionStatement	"gs_alloc_fill ( str , gs_alloc_fill_alloc , nbytes )"	1666:4:53403:53450	425585	15	True				
ANR	425708	CallExpression	"gs_alloc_fill ( str , gs_alloc_fill_alloc , nbytes )"		425585	0					
ANR	425709	Callee	gs_alloc_fill		425585	0					
ANR	425710	Identifier	gs_alloc_fill		425585	0					
ANR	425711	ArgumentList	str		425585	1					
ANR	425712	Argument	str		425585	0					
ANR	425713	Identifier	str		425585	0					
ANR	425714	Argument	gs_alloc_fill_alloc		425585	1					
ANR	425715	Identifier	gs_alloc_fill_alloc		425585	0					
ANR	425716	Argument	nbytes		425585	2					
ANR	425717	Identifier	nbytes		425585	0					
ANR	425718	ExpressionStatement	str += HDR_ID_OFFSET	1667:4:53456:53476	425585	16	True				
ANR	425719	AssignmentExpression	str += HDR_ID_OFFSET		425585	0		+=			
ANR	425720	Identifier	str		425585	0					
ANR	425721	Identifier	HDR_ID_OFFSET		425585	1					
ANR	425722	ExpressionStatement	ASSIGN_HDR_ID ( str )	1668:4:53482:53500	425585	17	True				
ANR	425723	CallExpression	ASSIGN_HDR_ID ( str )		425585	0					
ANR	425724	Callee	ASSIGN_HDR_ID		425585	0					
ANR	425725	Identifier	ASSIGN_HDR_ID		425585	0					
ANR	425726	ArgumentList	str		425585	1					
ANR	425727	Argument	str		425585	0					
ANR	425728	Identifier	str		425585	0					
ANR	425729	ReturnStatement	return str ;	1670:4:53507:53517	425585	18	True				
ANR	425730	Identifier	str		425585	0					
ANR	425731	ReturnType	static byte *		425585	1					
ANR	425732	Identifier	i_alloc_string_immovable		425585	2					
ANR	425733	ParameterList	"gs_memory_t * mem , uint nbytes , client_name_t cname"		425585	3					
ANR	425734	Parameter	gs_memory_t * mem	1640:25:52650:52666	425585	0	True				
ANR	425735	ParameterType	gs_memory_t *		425585	0					
ANR	425736	Identifier	mem		425585	1					
ANR	425737	Parameter	uint nbytes	1640:44:52669:52679	425585	1	True				
ANR	425738	ParameterType	uint		425585	0					
ANR	425739	Identifier	nbytes		425585	1					
ANR	425740	Parameter	client_name_t cname	1640:57:52682:52700	425585	2	True				
ANR	425741	ParameterType	client_name_t		425585	0					
ANR	425742	Identifier	cname		425585	1					
ANR	425743	CFGEntryNode	ENTRY		425585		True				
ANR	425744	CFGExitNode	EXIT		425585		True				
ANR	425745	Symbol	NULL		425585						
ANR	425746	Symbol	cname		425585						
ANR	425747	Symbol	cp -> c_alone		425585						
ANR	425748	Symbol	alloc_acquire_clump		425585						
ANR	425749	Symbol	cp		425585						
ANR	425750	Symbol	asize		425585						
ANR	425751	Symbol	cp -> climit		425585						
ANR	425752	Symbol	alloc_trace_space		425585						
ANR	425753	Symbol	nbytes		425585						
ANR	425754	Symbol	str		425585						
ANR	425755	Symbol	string_clump_space		425585						
ANR	425756	Symbol	* cp		425585						
ANR	425757	Symbol	mem		425585						
ANR	425758	Symbol	HDR_ID_OFFSET		425585						
ANR	425759	Symbol	gs_alloc_fill_alloc		425585						
ANR	425760	Symbol	true		425585						
ANR	425761	Symbol	client_name_string		425585						
ANR	425762	Symbol	imem		425585						
ANR	425763	Symbol	cp -> ctop		425585						
ANR	425764	Symbol	Memento_failThisEvent		425585						
ANR	425765	Function	i_resize_string	1673:0:53522:55720							
ANR	425766	FunctionDef	"i_resize_string (gs_memory_t * mem , byte * data , uint old_num , uint new_num , client_name_t cname)"		425765	0					
ANR	425767	CompoundStatement		1676:0:53649:55720	425765	0					
ANR	425768	Statement	gs_ref_memory_t	1677:4:53655:53669	425765	0	True				
ANR	425769	Statement	*	1677:20:53671:53671	425765	1	True				
ANR	425770	Statement	const	1677:22:53673:53677	425765	2	True				
ANR	425771	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1677:28:53679:53708	425765	3	True				
ANR	425772	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		425765	0		=			
ANR	425773	Identifier	imem		425765	0					
ANR	425774	CastExpression	( gs_ref_memory_t * ) mem		425765	1					
ANR	425775	CastTarget	gs_ref_memory_t *		425765	0					
ANR	425776	Identifier	mem		425765	1					
ANR	425777	IdentifierDeclStatement	byte * ptr ;	1678:4:53714:53723	425765	4	True				
ANR	425778	IdentifierDecl	* ptr		425765	0					
ANR	425779	IdentifierDeclType	byte *		425765	0					
ANR	425780	Identifier	ptr		425765	1					
ANR	425781	IfStatement	if ( old_num == new_num )		425765	5					
ANR	425782	Condition	old_num == new_num	1680:8:53734:53751	425765	0	True				
ANR	425783	EqualityExpression	old_num == new_num		425765	0		==			
ANR	425784	Identifier	old_num		425765	0					
ANR	425785	Identifier	new_num		425765	1					
ANR	425786	ReturnStatement	return data ;	1681:8:53802:53813	425765	1	True				
ANR	425787	Identifier	data		425765	0					
ANR	425788	ExpressionStatement	data -= HDR_ID_OFFSET	1683:4:53820:53841	425765	6	True				
ANR	425789	AssignmentExpression	data -= HDR_ID_OFFSET		425765	0		-=			
ANR	425790	Identifier	data		425765	0					
ANR	425791	Identifier	HDR_ID_OFFSET		425765	1					
ANR	425792	ExpressionStatement	old_num += HDR_ID_OFFSET	1684:4:53847:53871	425765	7	True				
ANR	425793	AssignmentExpression	old_num += HDR_ID_OFFSET		425765	0		+=			
ANR	425794	Identifier	old_num		425765	0					
ANR	425795	Identifier	HDR_ID_OFFSET		425765	1					
ANR	425796	ExpressionStatement	new_num += HDR_ID_OFFSET	1685:4:53877:53901	425765	8	True				
ANR	425797	AssignmentExpression	new_num += HDR_ID_OFFSET		425765	0		+=			
ANR	425798	Identifier	new_num		425765	0					
ANR	425799	Identifier	HDR_ID_OFFSET		425765	1					
ANR	425800	IfStatement	if ( imem -> cc && data == imem -> cc -> ctop && ( new_num < old_num || imem -> cc -> ctop - imem -> cc -> cbot > new_num - old_num ) )		425765	9					
ANR	425801	Condition	imem -> cc && data == imem -> cc -> ctop && ( new_num < old_num || imem -> cc -> ctop - imem -> cc -> cbot > new_num - old_num )	1687:9:53913:54066	425765	0	True				
ANR	425802	AndExpression	imem -> cc && data == imem -> cc -> ctop && ( new_num < old_num || imem -> cc -> ctop - imem -> cc -> cbot > new_num - old_num )		425765	0		&&			
ANR	425803	PtrMemberAccess	imem -> cc		425765	0					
ANR	425804	Identifier	imem		425765	0					
ANR	425805	Identifier	cc		425765	1					
ANR	425806	AndExpression	data == imem -> cc -> ctop && ( new_num < old_num || imem -> cc -> ctop - imem -> cc -> cbot > new_num - old_num )		425765	1		&&			
ANR	425807	EqualityExpression	data == imem -> cc -> ctop		425765	0		==			
ANR	425808	Identifier	data		425765	0					
ANR	425809	PtrMemberAccess	imem -> cc -> ctop		425765	1					
ANR	425810	PtrMemberAccess	imem -> cc		425765	0					
ANR	425811	Identifier	imem		425765	0					
ANR	425812	Identifier	cc		425765	1					
ANR	425813	Identifier	ctop		425765	1					
ANR	425814	OrExpression	new_num < old_num || imem -> cc -> ctop - imem -> cc -> cbot > new_num - old_num		425765	1		||			
ANR	425815	RelationalExpression	new_num < old_num		425765	0		<			
ANR	425816	Identifier	new_num		425765	0					
ANR	425817	Identifier	old_num		425765	1					
ANR	425818	RelationalExpression	imem -> cc -> ctop - imem -> cc -> cbot > new_num - old_num		425765	1		>			
ANR	425819	AdditiveExpression	imem -> cc -> ctop - imem -> cc -> cbot		425765	0		-			
ANR	425820	PtrMemberAccess	imem -> cc -> ctop		425765	0					
ANR	425821	PtrMemberAccess	imem -> cc		425765	0					
ANR	425822	Identifier	imem		425765	0					
ANR	425823	Identifier	cc		425765	1					
ANR	425824	Identifier	ctop		425765	1					
ANR	425825	PtrMemberAccess	imem -> cc -> cbot		425765	1					
ANR	425826	PtrMemberAccess	imem -> cc		425765	0					
ANR	425827	Identifier	imem		425765	0					
ANR	425828	Identifier	cc		425765	1					
ANR	425829	Identifier	cbot		425765	1					
ANR	425830	AdditiveExpression	new_num - old_num		425765	1		-			
ANR	425831	Identifier	new_num		425765	0					
ANR	425832	Identifier	old_num		425765	1					
ANR	425833	CompoundStatement		15:10:428:428	425765	1					
ANR	425834	ExpressionStatement	ptr = data + old_num - new_num	1691:8:54113:54143	425765	0	True				
ANR	425835	AssignmentExpression	ptr = data + old_num - new_num		425765	0		=			
ANR	425836	Identifier	ptr		425765	0					
ANR	425837	AdditiveExpression	data + old_num - new_num		425765	1		+			
ANR	425838	Identifier	data		425765	0					
ANR	425839	AdditiveExpression	old_num - new_num		425765	1		-			
ANR	425840	Identifier	old_num		425765	0					
ANR	425841	Identifier	new_num		425765	1					
ANR	425842	ExpressionStatement	"if_debug6m ( 'A' , mem , ""[a%d:%c> ]%s(%u->%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , ( new_num > old_num ? '>' : '<' ) , client_name_string ( cname ) , old_num , new_num , ( ulong ) ptr )"	1692:8:54153:54397	425765	1	True				
ANR	425843	CallExpression	"if_debug6m ( 'A' , mem , ""[a%d:%c> ]%s(%u->%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , ( new_num > old_num ? '>' : '<' ) , client_name_string ( cname ) , old_num , new_num , ( ulong ) ptr )"		425765	0					
ANR	425844	Callee	if_debug6m		425765	0					
ANR	425845	Identifier	if_debug6m		425765	0					
ANR	425846	ArgumentList	'A'		425765	1					
ANR	425847	Argument	'A'		425765	0					
ANR	425848	PrimaryExpression	'A'		425765	0					
ANR	425849	Argument	mem		425765	1					
ANR	425850	Identifier	mem		425765	0					
ANR	425851	Argument	"""[a%d:%c> ]%s(%u->%u) 0x%lx\\n"""		425765	2					
ANR	425852	PrimaryExpression	"""[a%d:%c> ]%s(%u->%u) 0x%lx\\n"""		425765	0					
ANR	425853	Argument	alloc_trace_space ( imem )		425765	3					
ANR	425854	CallExpression	alloc_trace_space ( imem )		425765	0					
ANR	425855	Callee	alloc_trace_space		425765	0					
ANR	425856	Identifier	alloc_trace_space		425765	0					
ANR	425857	ArgumentList	imem		425765	1					
ANR	425858	Argument	imem		425765	0					
ANR	425859	Identifier	imem		425765	0					
ANR	425860	Argument	new_num > old_num ? '>' : '<'		425765	4					
ANR	425861	ConditionalExpression	new_num > old_num ? '>' : '<'		425765	0					
ANR	425862	Condition	new_num > old_num		425765	0					
ANR	425863	RelationalExpression	new_num > old_num		425765	0		>			
ANR	425864	Identifier	new_num		425765	0					
ANR	425865	Identifier	old_num		425765	1					
ANR	425866	PrimaryExpression	'>'		425765	1					
ANR	425867	PrimaryExpression	'<'		425765	2					
ANR	425868	Argument	client_name_string ( cname )		425765	5					
ANR	425869	CallExpression	client_name_string ( cname )		425765	0					
ANR	425870	Callee	client_name_string		425765	0					
ANR	425871	Identifier	client_name_string		425765	0					
ANR	425872	ArgumentList	cname		425765	1					
ANR	425873	Argument	cname		425765	0					
ANR	425874	Identifier	cname		425765	0					
ANR	425875	Argument	old_num		425765	6					
ANR	425876	Identifier	old_num		425765	0					
ANR	425877	Argument	new_num		425765	7					
ANR	425878	Identifier	new_num		425765	0					
ANR	425879	Argument	( ulong ) ptr		425765	8					
ANR	425880	CastExpression	( ulong ) ptr		425765	0					
ANR	425881	CastTarget	ulong		425765	0					
ANR	425882	Identifier	ptr		425765	1					
ANR	425883	ExpressionStatement	imem -> cc -> ctop = ptr	1697:8:54407:54427	425765	2	True				
ANR	425884	AssignmentExpression	imem -> cc -> ctop = ptr		425765	0		=			
ANR	425885	PtrMemberAccess	imem -> cc -> ctop		425765	0					
ANR	425886	PtrMemberAccess	imem -> cc		425765	0					
ANR	425887	Identifier	imem		425765	0					
ANR	425888	Identifier	cc		425765	1					
ANR	425889	Identifier	ctop		425765	1					
ANR	425890	Identifier	ptr		425765	1					
ANR	425891	ExpressionStatement	"memmove ( ptr , data , min ( old_num , new_num ) )"	1698:8:54437:54478	425765	3	True				
ANR	425892	CallExpression	"memmove ( ptr , data , min ( old_num , new_num ) )"		425765	0					
ANR	425893	Callee	memmove		425765	0					
ANR	425894	Identifier	memmove		425765	0					
ANR	425895	ArgumentList	ptr		425765	1					
ANR	425896	Argument	ptr		425765	0					
ANR	425897	Identifier	ptr		425765	0					
ANR	425898	Argument	data		425765	1					
ANR	425899	Identifier	data		425765	0					
ANR	425900	Argument	"min ( old_num , new_num )"		425765	2					
ANR	425901	CallExpression	"min ( old_num , new_num )"		425765	0					
ANR	425902	Callee	min		425765	0					
ANR	425903	Identifier	min		425765	0					
ANR	425904	ArgumentList	old_num		425765	1					
ANR	425905	Argument	old_num		425765	0					
ANR	425906	Identifier	old_num		425765	0					
ANR	425907	Argument	new_num		425765	1					
ANR	425908	Identifier	new_num		425765	0					
ANR	425909	IfStatement	if ( new_num > old_num )		425765	4					
ANR	425910	Condition	new_num > old_num	1700:12:54505:54521	425765	0	True				
ANR	425911	RelationalExpression	new_num > old_num		425765	0		>			
ANR	425912	Identifier	new_num		425765	0					
ANR	425913	Identifier	old_num		425765	1					
ANR	425914	ExpressionStatement	"gs_alloc_fill ( ptr + old_num , gs_alloc_fill_alloc , new_num - old_num )"	1701:12:54536:54630	425765	1	True				
ANR	425915	CallExpression	"gs_alloc_fill ( ptr + old_num , gs_alloc_fill_alloc , new_num - old_num )"		425765	0					
ANR	425916	Callee	gs_alloc_fill		425765	0					
ANR	425917	Identifier	gs_alloc_fill		425765	0					
ANR	425918	ArgumentList	ptr + old_num		425765	1					
ANR	425919	Argument	ptr + old_num		425765	0					
ANR	425920	AdditiveExpression	ptr + old_num		425765	0		+			
ANR	425921	Identifier	ptr		425765	0					
ANR	425922	Identifier	old_num		425765	1					
ANR	425923	Argument	gs_alloc_fill_alloc		425765	1					
ANR	425924	Identifier	gs_alloc_fill_alloc		425765	0					
ANR	425925	Argument	new_num - old_num		425765	2					
ANR	425926	AdditiveExpression	new_num - old_num		425765	0		-			
ANR	425927	Identifier	new_num		425765	0					
ANR	425928	Identifier	old_num		425765	1					
ANR	425929	ElseStatement	else		425765	0					
ANR	425930	ExpressionStatement	"gs_alloc_fill ( data , gs_alloc_fill_free , old_num - new_num )"	1704:12:54657:54715	425765	0	True				
ANR	425931	CallExpression	"gs_alloc_fill ( data , gs_alloc_fill_free , old_num - new_num )"		425765	0					
ANR	425932	Callee	gs_alloc_fill		425765	0					
ANR	425933	Identifier	gs_alloc_fill		425765	0					
ANR	425934	ArgumentList	data		425765	1					
ANR	425935	Argument	data		425765	0					
ANR	425936	Identifier	data		425765	0					
ANR	425937	Argument	gs_alloc_fill_free		425765	1					
ANR	425938	Identifier	gs_alloc_fill_free		425765	0					
ANR	425939	Argument	old_num - new_num		425765	2					
ANR	425940	AdditiveExpression	old_num - new_num		425765	0		-			
ANR	425941	Identifier	old_num		425765	0					
ANR	425942	Identifier	new_num		425765	1					
ANR	425943	ExpressionStatement	ptr += HDR_ID_OFFSET	1706:8:54732:54752	425765	5	True				
ANR	425944	AssignmentExpression	ptr += HDR_ID_OFFSET		425765	0		+=			
ANR	425945	Identifier	ptr		425765	0					
ANR	425946	Identifier	HDR_ID_OFFSET		425765	1					
ANR	425947	ExpressionStatement	ASSIGN_HDR_ID ( ptr )	1707:8:54762:54780	425765	6	True				
ANR	425948	CallExpression	ASSIGN_HDR_ID ( ptr )		425765	0					
ANR	425949	Callee	ASSIGN_HDR_ID		425765	0					
ANR	425950	Identifier	ASSIGN_HDR_ID		425765	0					
ANR	425951	ArgumentList	ptr		425765	1					
ANR	425952	Argument	ptr		425765	0					
ANR	425953	Identifier	ptr		425765	0					
ANR	425954	ElseStatement	else		425765	0					
ANR	425955	IfStatement	if ( new_num < old_num )		425765	0					
ANR	425956	Condition	new_num < old_num	1709:12:54805:54821	425765	0	True				
ANR	425957	RelationalExpression	new_num < old_num		425765	0		<			
ANR	425958	Identifier	new_num		425765	0					
ANR	425959	Identifier	old_num		425765	1					
ANR	425960	CompoundStatement		34:31:1174:1174	425765	1					
ANR	425961	ExpressionStatement	ptr = data	1711:12:54901:54911	425765	0	True				
ANR	425962	AssignmentExpression	ptr = data		425765	0		=			
ANR	425963	Identifier	ptr		425765	0					
ANR	425964	Identifier	data		425765	1					
ANR	425965	ExpressionStatement	imem -> lost . strings += old_num - new_num	1712:12:54925:54964	425765	1	True				
ANR	425966	AssignmentExpression	imem -> lost . strings += old_num - new_num		425765	0		+=			
ANR	425967	MemberAccess	imem -> lost . strings		425765	0					
ANR	425968	PtrMemberAccess	imem -> lost		425765	0					
ANR	425969	Identifier	imem		425765	0					
ANR	425970	Identifier	lost		425765	1					
ANR	425971	Identifier	strings		425765	1					
ANR	425972	AdditiveExpression	old_num - new_num		425765	1		-			
ANR	425973	Identifier	old_num		425765	0					
ANR	425974	Identifier	new_num		425765	1					
ANR	425975	ExpressionStatement	"gs_alloc_fill ( data + new_num , gs_alloc_fill_free , old_num - new_num )"	1713:12:54978:55072	425765	2	True				
ANR	425976	CallExpression	"gs_alloc_fill ( data + new_num , gs_alloc_fill_free , old_num - new_num )"		425765	0					
ANR	425977	Callee	gs_alloc_fill		425765	0					
ANR	425978	Identifier	gs_alloc_fill		425765	0					
ANR	425979	ArgumentList	data + new_num		425765	1					
ANR	425980	Argument	data + new_num		425765	0					
ANR	425981	AdditiveExpression	data + new_num		425765	0		+			
ANR	425982	Identifier	data		425765	0					
ANR	425983	Identifier	new_num		425765	1					
ANR	425984	Argument	gs_alloc_fill_free		425765	1					
ANR	425985	Identifier	gs_alloc_fill_free		425765	0					
ANR	425986	Argument	old_num - new_num		425765	2					
ANR	425987	AdditiveExpression	old_num - new_num		425765	0		-			
ANR	425988	Identifier	old_num		425765	0					
ANR	425989	Identifier	new_num		425765	1					
ANR	425990	ExpressionStatement	"if_debug5m ( 'A' , mem , ""[a%d:<> ]%s(%u->%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , old_num , new_num , ( ulong ) ptr )"	1715:12:55086:55265	425765	3	True				
ANR	425991	CallExpression	"if_debug5m ( 'A' , mem , ""[a%d:<> ]%s(%u->%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , old_num , new_num , ( ulong ) ptr )"		425765	0					
ANR	425992	Callee	if_debug5m		425765	0					
ANR	425993	Identifier	if_debug5m		425765	0					
ANR	425994	ArgumentList	'A'		425765	1					
ANR	425995	Argument	'A'		425765	0					
ANR	425996	PrimaryExpression	'A'		425765	0					
ANR	425997	Argument	mem		425765	1					
ANR	425998	Identifier	mem		425765	0					
ANR	425999	Argument	"""[a%d:<> ]%s(%u->%u) 0x%lx\\n"""		425765	2					
ANR	426000	PrimaryExpression	"""[a%d:<> ]%s(%u->%u) 0x%lx\\n"""		425765	0					
ANR	426001	Argument	alloc_trace_space ( imem )		425765	3					
ANR	426002	CallExpression	alloc_trace_space ( imem )		425765	0					
ANR	426003	Callee	alloc_trace_space		425765	0					
ANR	426004	Identifier	alloc_trace_space		425765	0					
ANR	426005	ArgumentList	imem		425765	1					
ANR	426006	Argument	imem		425765	0					
ANR	426007	Identifier	imem		425765	0					
ANR	426008	Argument	client_name_string ( cname )		425765	4					
ANR	426009	CallExpression	client_name_string ( cname )		425765	0					
ANR	426010	Callee	client_name_string		425765	0					
ANR	426011	Identifier	client_name_string		425765	0					
ANR	426012	ArgumentList	cname		425765	1					
ANR	426013	Argument	cname		425765	0					
ANR	426014	Identifier	cname		425765	0					
ANR	426015	Argument	old_num		425765	5					
ANR	426016	Identifier	old_num		425765	0					
ANR	426017	Argument	new_num		425765	6					
ANR	426018	Identifier	new_num		425765	0					
ANR	426019	Argument	( ulong ) ptr		425765	7					
ANR	426020	CastExpression	( ulong ) ptr		425765	0					
ANR	426021	CastTarget	ulong		425765	0					
ANR	426022	Identifier	ptr		425765	1					
ANR	426023	ExpressionStatement	ptr += HDR_ID_OFFSET	1718:12:55279:55299	425765	4	True				
ANR	426024	AssignmentExpression	ptr += HDR_ID_OFFSET		425765	0		+=			
ANR	426025	Identifier	ptr		425765	0					
ANR	426026	Identifier	HDR_ID_OFFSET		425765	1					
ANR	426027	ExpressionStatement	ASSIGN_HDR_ID ( ptr )	1719:12:55313:55331	425765	5	True				
ANR	426028	CallExpression	ASSIGN_HDR_ID ( ptr )		425765	0					
ANR	426029	Callee	ASSIGN_HDR_ID		425765	0					
ANR	426030	Identifier	ASSIGN_HDR_ID		425765	0					
ANR	426031	ArgumentList	ptr		425765	1					
ANR	426032	Argument	ptr		425765	0					
ANR	426033	Identifier	ptr		425765	0					
ANR	426034	ElseStatement	else		425765	0					
ANR	426035	CompoundStatement		45:15:1698:1698	425765	0					
ANR	426036	ExpressionStatement	data += HDR_ID_OFFSET	1721:12:55376:55397	425765	0	True				
ANR	426037	AssignmentExpression	data += HDR_ID_OFFSET		425765	0		+=			
ANR	426038	Identifier	data		425765	0					
ANR	426039	Identifier	HDR_ID_OFFSET		425765	1					
ANR	426040	ExpressionStatement	old_num -= HDR_ID_OFFSET	1722:12:55411:55435	425765	1	True				
ANR	426041	AssignmentExpression	old_num -= HDR_ID_OFFSET		425765	0		-=			
ANR	426042	Identifier	old_num		425765	0					
ANR	426043	Identifier	HDR_ID_OFFSET		425765	1					
ANR	426044	ExpressionStatement	new_num -= HDR_ID_OFFSET	1723:12:55449:55473	425765	2	True				
ANR	426045	AssignmentExpression	new_num -= HDR_ID_OFFSET		425765	0		-=			
ANR	426046	Identifier	new_num		425765	0					
ANR	426047	Identifier	HDR_ID_OFFSET		425765	1					
ANR	426048	ExpressionStatement	"ptr = gs_alloc_string ( mem , new_num , cname )"	1725:12:55488:55530	425765	3	True				
ANR	426049	AssignmentExpression	"ptr = gs_alloc_string ( mem , new_num , cname )"		425765	0		=			
ANR	426050	Identifier	ptr		425765	0					
ANR	426051	CallExpression	"gs_alloc_string ( mem , new_num , cname )"		425765	1					
ANR	426052	Callee	gs_alloc_string		425765	0					
ANR	426053	Identifier	gs_alloc_string		425765	0					
ANR	426054	ArgumentList	mem		425765	1					
ANR	426055	Argument	mem		425765	0					
ANR	426056	Identifier	mem		425765	0					
ANR	426057	Argument	new_num		425765	1					
ANR	426058	Identifier	new_num		425765	0					
ANR	426059	Argument	cname		425765	2					
ANR	426060	Identifier	cname		425765	0					
ANR	426061	IfStatement	if ( ptr == 0 )		425765	4					
ANR	426062	Condition	ptr == 0	1726:16:55548:55555	425765	0	True				
ANR	426063	EqualityExpression	ptr == 0		425765	0		==			
ANR	426064	Identifier	ptr		425765	0					
ANR	426065	PrimaryExpression	0		425765	1					
ANR	426066	ReturnStatement	return 0 ;	1727:16:55574:55582	425765	1	True				
ANR	426067	PrimaryExpression	0		425765	0					
ANR	426068	ExpressionStatement	"memcpy ( ptr , data , min ( old_num , new_num ) )"	1728:12:55596:55636	425765	5	True				
ANR	426069	CallExpression	"memcpy ( ptr , data , min ( old_num , new_num ) )"		425765	0					
ANR	426070	Callee	memcpy		425765	0					
ANR	426071	Identifier	memcpy		425765	0					
ANR	426072	ArgumentList	ptr		425765	1					
ANR	426073	Argument	ptr		425765	0					
ANR	426074	Identifier	ptr		425765	0					
ANR	426075	Argument	data		425765	1					
ANR	426076	Identifier	data		425765	0					
ANR	426077	Argument	"min ( old_num , new_num )"		425765	2					
ANR	426078	CallExpression	"min ( old_num , new_num )"		425765	0					
ANR	426079	Callee	min		425765	0					
ANR	426080	Identifier	min		425765	0					
ANR	426081	ArgumentList	old_num		425765	1					
ANR	426082	Argument	old_num		425765	0					
ANR	426083	Identifier	old_num		425765	0					
ANR	426084	Argument	new_num		425765	1					
ANR	426085	Identifier	new_num		425765	0					
ANR	426086	ExpressionStatement	"gs_free_string ( mem , data , old_num , cname )"	1729:12:55650:55691	425765	6	True				
ANR	426087	CallExpression	"gs_free_string ( mem , data , old_num , cname )"		425765	0					
ANR	426088	Callee	gs_free_string		425765	0					
ANR	426089	Identifier	gs_free_string		425765	0					
ANR	426090	ArgumentList	mem		425765	1					
ANR	426091	Argument	mem		425765	0					
ANR	426092	Identifier	mem		425765	0					
ANR	426093	Argument	data		425765	1					
ANR	426094	Identifier	data		425765	0					
ANR	426095	Argument	old_num		425765	2					
ANR	426096	Identifier	old_num		425765	0					
ANR	426097	Argument	cname		425765	3					
ANR	426098	Identifier	cname		425765	0					
ANR	426099	ReturnStatement	return ptr ;	1732:4:55708:55718	425765	10	True				
ANR	426100	Identifier	ptr		425765	0					
ANR	426101	ReturnType	static byte *		425765	1					
ANR	426102	Identifier	i_resize_string		425765	2					
ANR	426103	ParameterList	"gs_memory_t * mem , byte * data , uint old_num , uint new_num , client_name_t cname"		425765	3					
ANR	426104	Parameter	gs_memory_t * mem	1674:16:53552:53568	425765	0	True				
ANR	426105	ParameterType	gs_memory_t *		425765	0					
ANR	426106	Identifier	mem		425765	1					
ANR	426107	Parameter	byte * data	1674:35:53571:53581	425765	1	True				
ANR	426108	ParameterType	byte *		425765	0					
ANR	426109	Identifier	data		425765	1					
ANR	426110	Parameter	uint old_num	1674:48:53584:53595	425765	2	True				
ANR	426111	ParameterType	uint		425765	0					
ANR	426112	Identifier	old_num		425765	1					
ANR	426113	Parameter	uint new_num	1674:62:53598:53609	425765	3	True				
ANR	426114	ParameterType	uint		425765	0					
ANR	426115	Identifier	new_num		425765	1					
ANR	426116	Parameter	client_name_t cname	1675:16:53628:53646	425765	4	True				
ANR	426117	ParameterType	client_name_t		425765	0					
ANR	426118	Identifier	cname		425765	1					
ANR	426119	CFGEntryNode	ENTRY		425765		True				
ANR	426120	CFGExitNode	EXIT		425765		True				
ANR	426121	Symbol	* * imem		425765						
ANR	426122	Symbol	old_num		425765						
ANR	426123	Symbol	data		425765						
ANR	426124	Symbol	imem -> cc -> ctop		425765						
ANR	426125	Symbol	imem -> lost		425765						
ANR	426126	Symbol	new_num		425765						
ANR	426127	Symbol	gs_alloc_fill_free		425765						
ANR	426128	Symbol	cname		425765						
ANR	426129	Symbol	imem -> cc		425765						
ANR	426130	Symbol	alloc_trace_space		425765						
ANR	426131	Symbol	ptr		425765						
ANR	426132	Symbol	imem -> lost . strings		425765						
ANR	426133	Symbol	min		425765						
ANR	426134	Symbol	mem		425765						
ANR	426135	Symbol	HDR_ID_OFFSET		425765						
ANR	426136	Symbol	imem -> cc -> cbot		425765						
ANR	426137	Symbol	gs_alloc_fill_alloc		425765						
ANR	426138	Symbol	client_name_string		425765						
ANR	426139	Symbol	gs_alloc_string		425765						
ANR	426140	Symbol	* imem -> cc		425765						
ANR	426141	Symbol	imem		425765						
ANR	426142	Symbol	* imem		425765						
ANR	426143	Function	i_free_string	1735:0:55723:56553							
ANR	426144	FunctionDef	"i_free_string (gs_memory_t * mem , byte * data , uint nbytes , client_name_t cname)"		426143	0					
ANR	426145	CompoundStatement		1738:0:55829:56553	426143	0					
ANR	426146	Statement	gs_ref_memory_t	1739:4:55835:55849	426143	0	True				
ANR	426147	Statement	*	1739:20:55851:55851	426143	1	True				
ANR	426148	Statement	const	1739:22:55853:55857	426143	2	True				
ANR	426149	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1739:28:55859:55888	426143	3	True				
ANR	426150	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		426143	0		=			
ANR	426151	Identifier	imem		426143	0					
ANR	426152	CastExpression	( gs_ref_memory_t * ) mem		426143	1					
ANR	426153	CastTarget	gs_ref_memory_t *		426143	0					
ANR	426154	Identifier	mem		426143	1					
ANR	426155	IfStatement	if ( data )		426143	4					
ANR	426156	Condition	data	1741:8:55899:55902	426143	0	True				
ANR	426157	Identifier	data		426143	0					
ANR	426158	CompoundStatement		4:14:75:75	426143	1					
ANR	426159	ExpressionStatement	data -= HDR_ID_OFFSET	1742:8:55915:55936	426143	0	True				
ANR	426160	AssignmentExpression	data -= HDR_ID_OFFSET		426143	0		-=			
ANR	426161	Identifier	data		426143	0					
ANR	426162	Identifier	HDR_ID_OFFSET		426143	1					
ANR	426163	ExpressionStatement	nbytes += HDR_ID_OFFSET	1743:8:55946:55969	426143	1	True				
ANR	426164	AssignmentExpression	nbytes += HDR_ID_OFFSET		426143	0		+=			
ANR	426165	Identifier	nbytes		426143	0					
ANR	426166	Identifier	HDR_ID_OFFSET		426143	1					
ANR	426167	IfStatement	if ( imem -> cc && data == imem -> cc -> ctop )		426143	2					
ANR	426168	Condition	imem -> cc && data == imem -> cc -> ctop	1744:12:55983:56016	426143	0	True				
ANR	426169	AndExpression	imem -> cc && data == imem -> cc -> ctop		426143	0		&&			
ANR	426170	PtrMemberAccess	imem -> cc		426143	0					
ANR	426171	Identifier	imem		426143	0					
ANR	426172	Identifier	cc		426143	1					
ANR	426173	EqualityExpression	data == imem -> cc -> ctop		426143	1		==			
ANR	426174	Identifier	data		426143	0					
ANR	426175	PtrMemberAccess	imem -> cc -> ctop		426143	1					
ANR	426176	PtrMemberAccess	imem -> cc		426143	0					
ANR	426177	Identifier	imem		426143	0					
ANR	426178	Identifier	cc		426143	1					
ANR	426179	Identifier	ctop		426143	1					
ANR	426180	CompoundStatement		7:48:189:189	426143	1					
ANR	426181	ExpressionStatement	"if_debug4m ( 'A' , mem , ""[a%d:-> ]%s(%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) data )"	1745:12:56033:56200	426143	0	True				
ANR	426182	CallExpression	"if_debug4m ( 'A' , mem , ""[a%d:-> ]%s(%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) data )"		426143	0					
ANR	426183	Callee	if_debug4m		426143	0					
ANR	426184	Identifier	if_debug4m		426143	0					
ANR	426185	ArgumentList	'A'		426143	1					
ANR	426186	Argument	'A'		426143	0					
ANR	426187	PrimaryExpression	'A'		426143	0					
ANR	426188	Argument	mem		426143	1					
ANR	426189	Identifier	mem		426143	0					
ANR	426190	Argument	"""[a%d:-> ]%s(%u) 0x%lx\\n"""		426143	2					
ANR	426191	PrimaryExpression	"""[a%d:-> ]%s(%u) 0x%lx\\n"""		426143	0					
ANR	426192	Argument	alloc_trace_space ( imem )		426143	3					
ANR	426193	CallExpression	alloc_trace_space ( imem )		426143	0					
ANR	426194	Callee	alloc_trace_space		426143	0					
ANR	426195	Identifier	alloc_trace_space		426143	0					
ANR	426196	ArgumentList	imem		426143	1					
ANR	426197	Argument	imem		426143	0					
ANR	426198	Identifier	imem		426143	0					
ANR	426199	Argument	client_name_string ( cname )		426143	4					
ANR	426200	CallExpression	client_name_string ( cname )		426143	0					
ANR	426201	Callee	client_name_string		426143	0					
ANR	426202	Identifier	client_name_string		426143	0					
ANR	426203	ArgumentList	cname		426143	1					
ANR	426204	Argument	cname		426143	0					
ANR	426205	Identifier	cname		426143	0					
ANR	426206	Argument	nbytes		426143	5					
ANR	426207	Identifier	nbytes		426143	0					
ANR	426208	Argument	( ulong ) data		426143	6					
ANR	426209	CastExpression	( ulong ) data		426143	0					
ANR	426210	CastTarget	ulong		426143	0					
ANR	426211	Identifier	data		426143	1					
ANR	426212	ExpressionStatement	imem -> cc -> ctop += nbytes	1748:12:56214:56238	426143	1	True				
ANR	426213	AssignmentExpression	imem -> cc -> ctop += nbytes		426143	0		+=			
ANR	426214	PtrMemberAccess	imem -> cc -> ctop		426143	0					
ANR	426215	PtrMemberAccess	imem -> cc		426143	0					
ANR	426216	Identifier	imem		426143	0					
ANR	426217	Identifier	cc		426143	1					
ANR	426218	Identifier	ctop		426143	1					
ANR	426219	Identifier	nbytes		426143	1					
ANR	426220	ElseStatement	else		426143	0					
ANR	426221	CompoundStatement		12:15:425:425	426143	0					
ANR	426222	ExpressionStatement	"if_debug4m ( 'A' , mem , ""[a%d:->#]%s(%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) data )"	1750:12:56269:56436	426143	0	True				
ANR	426223	CallExpression	"if_debug4m ( 'A' , mem , ""[a%d:->#]%s(%u) 0x%lx\\n"" , alloc_trace_space ( imem ) , client_name_string ( cname ) , nbytes , ( ulong ) data )"		426143	0					
ANR	426224	Callee	if_debug4m		426143	0					
ANR	426225	Identifier	if_debug4m		426143	0					
ANR	426226	ArgumentList	'A'		426143	1					
ANR	426227	Argument	'A'		426143	0					
ANR	426228	PrimaryExpression	'A'		426143	0					
ANR	426229	Argument	mem		426143	1					
ANR	426230	Identifier	mem		426143	0					
ANR	426231	Argument	"""[a%d:->#]%s(%u) 0x%lx\\n"""		426143	2					
ANR	426232	PrimaryExpression	"""[a%d:->#]%s(%u) 0x%lx\\n"""		426143	0					
ANR	426233	Argument	alloc_trace_space ( imem )		426143	3					
ANR	426234	CallExpression	alloc_trace_space ( imem )		426143	0					
ANR	426235	Callee	alloc_trace_space		426143	0					
ANR	426236	Identifier	alloc_trace_space		426143	0					
ANR	426237	ArgumentList	imem		426143	1					
ANR	426238	Argument	imem		426143	0					
ANR	426239	Identifier	imem		426143	0					
ANR	426240	Argument	client_name_string ( cname )		426143	4					
ANR	426241	CallExpression	client_name_string ( cname )		426143	0					
ANR	426242	Callee	client_name_string		426143	0					
ANR	426243	Identifier	client_name_string		426143	0					
ANR	426244	ArgumentList	cname		426143	1					
ANR	426245	Argument	cname		426143	0					
ANR	426246	Identifier	cname		426143	0					
ANR	426247	Argument	nbytes		426143	5					
ANR	426248	Identifier	nbytes		426143	0					
ANR	426249	Argument	( ulong ) data		426143	6					
ANR	426250	CastExpression	( ulong ) data		426143	0					
ANR	426251	CastTarget	ulong		426143	0					
ANR	426252	Identifier	data		426143	1					
ANR	426253	ExpressionStatement	imem -> lost . strings += nbytes	1753:12:56450:56478	426143	1	True				
ANR	426254	AssignmentExpression	imem -> lost . strings += nbytes		426143	0		+=			
ANR	426255	MemberAccess	imem -> lost . strings		426143	0					
ANR	426256	PtrMemberAccess	imem -> lost		426143	0					
ANR	426257	Identifier	imem		426143	0					
ANR	426258	Identifier	lost		426143	1					
ANR	426259	Identifier	strings		426143	1					
ANR	426260	Identifier	nbytes		426143	1					
ANR	426261	ExpressionStatement	"gs_alloc_fill ( data , gs_alloc_fill_free , nbytes )"	1755:8:56498:56545	426143	3	True				
ANR	426262	CallExpression	"gs_alloc_fill ( data , gs_alloc_fill_free , nbytes )"		426143	0					
ANR	426263	Callee	gs_alloc_fill		426143	0					
ANR	426264	Identifier	gs_alloc_fill		426143	0					
ANR	426265	ArgumentList	data		426143	1					
ANR	426266	Argument	data		426143	0					
ANR	426267	Identifier	data		426143	0					
ANR	426268	Argument	gs_alloc_fill_free		426143	1					
ANR	426269	Identifier	gs_alloc_fill_free		426143	0					
ANR	426270	Argument	nbytes		426143	2					
ANR	426271	Identifier	nbytes		426143	0					
ANR	426272	ReturnType	static void		426143	1					
ANR	426273	Identifier	i_free_string		426143	2					
ANR	426274	ParameterList	"gs_memory_t * mem , byte * data , uint nbytes , client_name_t cname"		426143	3					
ANR	426275	Parameter	gs_memory_t * mem	1736:14:55749:55765	426143	0	True				
ANR	426276	ParameterType	gs_memory_t *		426143	0					
ANR	426277	Identifier	mem		426143	1					
ANR	426278	Parameter	byte * data	1736:33:55768:55778	426143	1	True				
ANR	426279	ParameterType	byte *		426143	0					
ANR	426280	Identifier	data		426143	1					
ANR	426281	Parameter	uint nbytes	1736:46:55781:55791	426143	2	True				
ANR	426282	ParameterType	uint		426143	0					
ANR	426283	Identifier	nbytes		426143	1					
ANR	426284	Parameter	client_name_t cname	1737:14:55808:55826	426143	3	True				
ANR	426285	ParameterType	client_name_t		426143	0					
ANR	426286	Identifier	cname		426143	1					
ANR	426287	CFGEntryNode	ENTRY		426143		True				
ANR	426288	CFGExitNode	EXIT		426143		True				
ANR	426289	Symbol	* * imem		426143						
ANR	426290	Symbol	data		426143						
ANR	426291	Symbol	imem -> cc -> ctop		426143						
ANR	426292	Symbol	imem -> lost		426143						
ANR	426293	Symbol	gs_alloc_fill_free		426143						
ANR	426294	Symbol	cname		426143						
ANR	426295	Symbol	imem -> cc		426143						
ANR	426296	Symbol	alloc_trace_space		426143						
ANR	426297	Symbol	nbytes		426143						
ANR	426298	Symbol	imem -> lost . strings		426143						
ANR	426299	Symbol	mem		426143						
ANR	426300	Symbol	HDR_ID_OFFSET		426143						
ANR	426301	Symbol	client_name_string		426143						
ANR	426302	Symbol	* imem -> cc		426143						
ANR	426303	Symbol	imem		426143						
ANR	426304	Symbol	* imem		426143						
ANR	426305	Function	i_stable	1759:0:56556:56637							
ANR	426306	FunctionDef	i_stable (gs_memory_t * mem)		426305	0					
ANR	426307	CompoundStatement		1761:0:56604:56637	426305	0					
ANR	426308	ReturnStatement	return mem -> stable_memory ;	1762:4:56610:56635	426305	0	True				
ANR	426309	PtrMemberAccess	mem -> stable_memory		426305	0					
ANR	426310	Identifier	mem		426305	0					
ANR	426311	Identifier	stable_memory		426305	1					
ANR	426312	ReturnType	static gs_memory_t *		426305	1					
ANR	426313	Identifier	i_stable		426305	2					
ANR	426314	ParameterList	gs_memory_t * mem		426305	3					
ANR	426315	Parameter	gs_memory_t * mem	1760:9:56586:56601	426305	0	True				
ANR	426316	ParameterType	gs_memory_t *		426305	0					
ANR	426317	Identifier	mem		426305	1					
ANR	426318	CFGEntryNode	ENTRY		426305		True				
ANR	426319	CFGExitNode	EXIT		426305		True				
ANR	426320	Symbol	mem -> stable_memory		426305						
ANR	426321	Symbol	mem		426305						
ANR	426322	Symbol	* mem		426305						
ANR	426323	Function	i_status	1765:0:56640:57661							
ANR	426324	FunctionDef	"i_status (gs_memory_t * mem , gs_memory_status_t * pstat)"		426323	0					
ANR	426325	CompoundStatement		1767:0:56708:57661	426323	0					
ANR	426326	Statement	gs_ref_memory_t	1768:4:56714:56728	426323	0	True				
ANR	426327	Statement	*	1768:20:56730:56730	426323	1	True				
ANR	426328	Statement	const	1768:22:56732:56736	426323	2	True				
ANR	426329	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	1768:28:56738:56767	426323	3	True				
ANR	426330	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		426323	0		=			
ANR	426331	Identifier	imem		426323	0					
ANR	426332	CastExpression	( gs_ref_memory_t * ) mem		426323	1					
ANR	426333	CastTarget	gs_ref_memory_t *		426323	0					
ANR	426334	Identifier	mem		426323	1					
ANR	426335	IdentifierDeclStatement	ulong unused = imem -> lost . refs + imem -> lost . strings ;	1769:4:56773:56824	426323	4	True				
ANR	426336	IdentifierDecl	unused = imem -> lost . refs + imem -> lost . strings		426323	0					
ANR	426337	IdentifierDeclType	ulong		426323	0					
ANR	426338	Identifier	unused		426323	1					
ANR	426339	AssignmentExpression	unused = imem -> lost . refs + imem -> lost . strings		426323	2		=			
ANR	426340	Identifier	unused		426323	0					
ANR	426341	AdditiveExpression	imem -> lost . refs + imem -> lost . strings		426323	1		+			
ANR	426342	MemberAccess	imem -> lost . refs		426323	0					
ANR	426343	PtrMemberAccess	imem -> lost		426323	0					
ANR	426344	Identifier	imem		426323	0					
ANR	426345	Identifier	lost		426323	1					
ANR	426346	Identifier	refs		426323	1					
ANR	426347	MemberAccess	imem -> lost . strings		426323	1					
ANR	426348	PtrMemberAccess	imem -> lost		426323	0					
ANR	426349	Identifier	imem		426323	0					
ANR	426350	Identifier	lost		426323	1					
ANR	426351	Identifier	strings		426323	1					
ANR	426352	IdentifierDeclStatement	ulong inner = 0 ;	1770:4:56830:56845	426323	5	True				
ANR	426353	IdentifierDecl	inner = 0		426323	0					
ANR	426354	IdentifierDeclType	ulong		426323	0					
ANR	426355	Identifier	inner		426323	1					
ANR	426356	AssignmentExpression	inner = 0		426323	2		=			
ANR	426357	Identifier	inner		426323	0					
ANR	426358	PrimaryExpression	0		426323	1					
ANR	426359	IdentifierDeclStatement	clump_splay_walker sw ;	1771:4:56851:56872	426323	6	True				
ANR	426360	IdentifierDecl	sw		426323	0					
ANR	426361	IdentifierDeclType	clump_splay_walker		426323	0					
ANR	426362	Identifier	sw		426323	1					
ANR	426363	IdentifierDeclStatement	clump_t * cp ;	1772:4:56878:56889	426323	7	True				
ANR	426364	IdentifierDecl	* cp		426323	0					
ANR	426365	IdentifierDeclType	clump_t *		426323	0					
ANR	426366	Identifier	cp		426323	1					
ANR	426367	ExpressionStatement	alloc_close_clump ( imem )	1774:4:56896:56919	426323	8	True				
ANR	426368	CallExpression	alloc_close_clump ( imem )		426323	0					
ANR	426369	Callee	alloc_close_clump		426323	0					
ANR	426370	Identifier	alloc_close_clump		426323	0					
ANR	426371	ArgumentList	imem		426323	1					
ANR	426372	Argument	imem		426323	0					
ANR	426373	Identifier	imem		426323	0					
ANR	426374	ForStatement	"for ( cp = clump_splay_walk_init ( & sw , imem ) ; cp != NULL ; cp = clump_splay_walk_fwd ( & sw ) )"		426323	9					
ANR	426375	ForInit	"cp = clump_splay_walk_init ( & sw , imem ) ;"	1778:9:57105:57142	426323	0	True				
ANR	426376	AssignmentExpression	"cp = clump_splay_walk_init ( & sw , imem )"		426323	0		=			
ANR	426377	Identifier	cp		426323	0					
ANR	426378	CallExpression	"clump_splay_walk_init ( & sw , imem )"		426323	1					
ANR	426379	Callee	clump_splay_walk_init		426323	0					
ANR	426380	Identifier	clump_splay_walk_init		426323	0					
ANR	426381	ArgumentList	& sw		426323	1					
ANR	426382	Argument	& sw		426323	0					
ANR	426383	UnaryOperationExpression	& sw		426323	0					
ANR	426384	UnaryOperator	&		426323	0					
ANR	426385	Identifier	sw		426323	1					
ANR	426386	Argument	imem		426323	1					
ANR	426387	Identifier	imem		426323	0					
ANR	426388	Condition	cp != NULL	1778:48:57144:57153	426323	1	True				
ANR	426389	EqualityExpression	cp != NULL		426323	0		!=			
ANR	426390	Identifier	cp		426323	0					
ANR	426391	Identifier	NULL		426323	1					
ANR	426392	AssignmentExpression	cp = clump_splay_walk_fwd ( & sw )	1778:60:57156:57185	426323	2	True	=			
ANR	426393	Identifier	cp		426323	0					
ANR	426394	CallExpression	clump_splay_walk_fwd ( & sw )		426323	1					
ANR	426395	Callee	clump_splay_walk_fwd		426323	0					
ANR	426396	Identifier	clump_splay_walk_fwd		426323	0					
ANR	426397	ArgumentList	& sw		426323	1					
ANR	426398	Argument	& sw		426323	0					
ANR	426399	UnaryOperationExpression	& sw		426323	0					
ANR	426400	UnaryOperator	&		426323	0					
ANR	426401	Identifier	sw		426323	1					
ANR	426402	CompoundStatement		13:4:483:483	426323	3					
ANR	426403	ExpressionStatement	unused += cp -> ctop - cp -> cbot	1780:8:57202:57231	426323	0	True				
ANR	426404	AssignmentExpression	unused += cp -> ctop - cp -> cbot		426323	0		+=			
ANR	426405	Identifier	unused		426323	0					
ANR	426406	AdditiveExpression	cp -> ctop - cp -> cbot		426323	1		-			
ANR	426407	PtrMemberAccess	cp -> ctop		426323	0					
ANR	426408	Identifier	cp		426323	0					
ANR	426409	Identifier	ctop		426323	1					
ANR	426410	PtrMemberAccess	cp -> cbot		426323	1					
ANR	426411	Identifier	cp		426323	0					
ANR	426412	Identifier	cbot		426323	1					
ANR	426413	IfStatement	if ( cp -> outer )		426323	1					
ANR	426414	Condition	cp -> outer	1781:12:57245:57253	426323	0	True				
ANR	426415	PtrMemberAccess	cp -> outer		426323	0					
ANR	426416	Identifier	cp		426323	0					
ANR	426417	Identifier	outer		426323	1					
ANR	426418	ExpressionStatement	inner += cp -> cend - ( byte * ) cp -> chead	1782:12:57268:57306	426323	1	True				
ANR	426419	AssignmentExpression	inner += cp -> cend - ( byte * ) cp -> chead		426323	0		+=			
ANR	426420	Identifier	inner		426323	0					
ANR	426421	AdditiveExpression	cp -> cend - ( byte * ) cp -> chead		426323	1		-			
ANR	426422	PtrMemberAccess	cp -> cend		426323	0					
ANR	426423	Identifier	cp		426323	0					
ANR	426424	Identifier	cend		426323	1					
ANR	426425	CastExpression	( byte * ) cp -> chead		426323	1					
ANR	426426	CastTarget	byte *		426323	0					
ANR	426427	PtrMemberAccess	cp -> chead		426323	1					
ANR	426428	Identifier	cp		426323	0					
ANR	426429	Identifier	chead		426323	1					
ANR	426430	ExpressionStatement	unused += compute_free_objects ( imem )	1784:4:57318:57354	426323	10	True				
ANR	426431	AssignmentExpression	unused += compute_free_objects ( imem )		426323	0		+=			
ANR	426432	Identifier	unused		426323	0					
ANR	426433	CallExpression	compute_free_objects ( imem )		426323	1					
ANR	426434	Callee	compute_free_objects		426323	0					
ANR	426435	Identifier	compute_free_objects		426323	0					
ANR	426436	ArgumentList	imem		426323	1					
ANR	426437	Argument	imem		426323	0					
ANR	426438	Identifier	imem		426323	0					
ANR	426439	ExpressionStatement	pstat -> used = imem -> allocated + inner - unused + imem -> previous_status . used	1785:4:57360:57443	426323	11	True				
ANR	426440	AssignmentExpression	pstat -> used = imem -> allocated + inner - unused + imem -> previous_status . used		426323	0		=			
ANR	426441	PtrMemberAccess	pstat -> used		426323	0					
ANR	426442	Identifier	pstat		426323	0					
ANR	426443	Identifier	used		426323	1					
ANR	426444	AdditiveExpression	imem -> allocated + inner - unused + imem -> previous_status . used		426323	1		+			
ANR	426445	PtrMemberAccess	imem -> allocated		426323	0					
ANR	426446	Identifier	imem		426323	0					
ANR	426447	Identifier	allocated		426323	1					
ANR	426448	AdditiveExpression	inner - unused + imem -> previous_status . used		426323	1		-			
ANR	426449	Identifier	inner		426323	0					
ANR	426450	AdditiveExpression	unused + imem -> previous_status . used		426323	1		+			
ANR	426451	Identifier	unused		426323	0					
ANR	426452	MemberAccess	imem -> previous_status . used		426323	1					
ANR	426453	PtrMemberAccess	imem -> previous_status		426323	0					
ANR	426454	Identifier	imem		426323	0					
ANR	426455	Identifier	previous_status		426323	1					
ANR	426456	Identifier	used		426323	1					
ANR	426457	ExpressionStatement	pstat -> allocated = imem -> allocated + imem -> previous_status . allocated	1787:4:57449:57525	426323	12	True				
ANR	426458	AssignmentExpression	pstat -> allocated = imem -> allocated + imem -> previous_status . allocated		426323	0		=			
ANR	426459	PtrMemberAccess	pstat -> allocated		426323	0					
ANR	426460	Identifier	pstat		426323	0					
ANR	426461	Identifier	allocated		426323	1					
ANR	426462	AdditiveExpression	imem -> allocated + imem -> previous_status . allocated		426323	1		+			
ANR	426463	PtrMemberAccess	imem -> allocated		426323	0					
ANR	426464	Identifier	imem		426323	0					
ANR	426465	Identifier	allocated		426323	1					
ANR	426466	MemberAccess	imem -> previous_status . allocated		426323	1					
ANR	426467	PtrMemberAccess	imem -> previous_status		426323	0					
ANR	426468	Identifier	imem		426323	0					
ANR	426469	Identifier	previous_status		426323	1					
ANR	426470	Identifier	allocated		426323	1					
ANR	426471	ExpressionStatement	pstat -> max_used = 0	1789:4:57531:57550	426323	13	True				
ANR	426472	AssignmentExpression	pstat -> max_used = 0		426323	0		=			
ANR	426473	PtrMemberAccess	pstat -> max_used		426323	0					
ANR	426474	Identifier	pstat		426323	0					
ANR	426475	Identifier	max_used		426323	1					
ANR	426476	PrimaryExpression	0		426323	1					
ANR	426477	ExpressionStatement	pstat -> is_thread_safe = false	1790:4:57590:57619	426323	14	True				
ANR	426478	AssignmentExpression	pstat -> is_thread_safe = false		426323	0		=			
ANR	426479	PtrMemberAccess	pstat -> is_thread_safe		426323	0					
ANR	426480	Identifier	pstat		426323	0					
ANR	426481	Identifier	is_thread_safe		426323	1					
ANR	426482	Identifier	false		426323	1					
ANR	426483	ReturnType	static void		426323	1					
ANR	426484	Identifier	i_status		426323	2					
ANR	426485	ParameterList	"gs_memory_t * mem , gs_memory_status_t * pstat"		426323	3					
ANR	426486	Parameter	gs_memory_t * mem	1766:9:56661:56677	426323	0	True				
ANR	426487	ParameterType	gs_memory_t *		426323	0					
ANR	426488	Identifier	mem		426323	1					
ANR	426489	Parameter	gs_memory_status_t * pstat	1766:28:56680:56705	426323	1	True				
ANR	426490	ParameterType	gs_memory_status_t *		426323	0					
ANR	426491	Identifier	pstat		426323	1					
ANR	426492	CFGEntryNode	ENTRY		426323		True				
ANR	426493	CFGExitNode	EXIT		426323		True				
ANR	426494	Symbol	imem -> lost . refs		426323						
ANR	426495	Symbol	cp -> cend		426323						
ANR	426496	Symbol	pstat -> used		426323						
ANR	426497	Symbol	pstat -> is_thread_safe		426323						
ANR	426498	Symbol	& sw		426323						
ANR	426499	Symbol	* pstat		426323						
ANR	426500	Symbol	cp -> chead		426323						
ANR	426501	Symbol	cp -> cbot		426323						
ANR	426502	Symbol	mem		426323						
ANR	426503	Symbol	pstat -> max_used		426323						
ANR	426504	Symbol	pstat -> allocated		426323						
ANR	426505	Symbol	clump_splay_walk_init		426323						
ANR	426506	Symbol	* imem		426323						
ANR	426507	Symbol	cp -> ctop		426323						
ANR	426508	Symbol	imem -> previous_status . used		426323						
ANR	426509	Symbol	compute_free_objects		426323						
ANR	426510	Symbol	imem -> previous_status		426323						
ANR	426511	Symbol	imem -> allocated		426323						
ANR	426512	Symbol	NULL		426323						
ANR	426513	Symbol	pstat		426323						
ANR	426514	Symbol	sw		426323						
ANR	426515	Symbol	imem -> previous_status . allocated		426323						
ANR	426516	Symbol	imem -> lost		426323						
ANR	426517	Symbol	clump_splay_walk_fwd		426323						
ANR	426518	Symbol	false		426323						
ANR	426519	Symbol	inner		426323						
ANR	426520	Symbol	cp		426323						
ANR	426521	Symbol	* cp		426323						
ANR	426522	Symbol	imem -> lost . strings		426323						
ANR	426523	Symbol	unused		426323						
ANR	426524	Symbol	cp -> outer		426323						
ANR	426525	Symbol	imem		426323						
ANR	426526	Function	i_enable_free	1793:0:57664:57965							
ANR	426527	FunctionDef	"i_enable_free (gs_memory_t * mem , bool enable)"		426526	0					
ANR	426528	CompoundStatement		1795:0:57722:57965	426526	0					
ANR	426529	IfStatement	if ( enable )		426526	0					
ANR	426530	Condition	enable	1796:8:57732:57737	426526	0	True				
ANR	426531	Identifier	enable		426526	0					
ANR	426532	ExpressionStatement	"mem -> procs . free_object = i_free_object , mem -> procs . free_string = i_free_string"	1797:8:57748:57838	426526	1	True				
ANR	426533	Expression	"mem -> procs . free_object = i_free_object , mem -> procs . free_string = i_free_string"		426526	0					
ANR	426534	AssignmentExpression	mem -> procs . free_object = i_free_object		426526	0		=			
ANR	426535	MemberAccess	mem -> procs . free_object		426526	0					
ANR	426536	PtrMemberAccess	mem -> procs		426526	0					
ANR	426537	Identifier	mem		426526	0					
ANR	426538	Identifier	procs		426526	1					
ANR	426539	Identifier	free_object		426526	1					
ANR	426540	Identifier	i_free_object		426526	1					
ANR	426541	AssignmentExpression	mem -> procs . free_string = i_free_string		426526	1		=			
ANR	426542	MemberAccess	mem -> procs . free_string		426526	0					
ANR	426543	PtrMemberAccess	mem -> procs		426526	0					
ANR	426544	Identifier	mem		426526	0					
ANR	426545	Identifier	procs		426526	1					
ANR	426546	Identifier	free_string		426526	1					
ANR	426547	Identifier	i_free_string		426526	1					
ANR	426548	ElseStatement	else		426526	0					
ANR	426549	ExpressionStatement	"mem -> procs . free_object = gs_ignore_free_object , mem -> procs . free_string = gs_ignore_free_string"	1800:8:57857:57963	426526	0	True				
ANR	426550	Expression	"mem -> procs . free_object = gs_ignore_free_object , mem -> procs . free_string = gs_ignore_free_string"		426526	0					
ANR	426551	AssignmentExpression	mem -> procs . free_object = gs_ignore_free_object		426526	0		=			
ANR	426552	MemberAccess	mem -> procs . free_object		426526	0					
ANR	426553	PtrMemberAccess	mem -> procs		426526	0					
ANR	426554	Identifier	mem		426526	0					
ANR	426555	Identifier	procs		426526	1					
ANR	426556	Identifier	free_object		426526	1					
ANR	426557	Identifier	gs_ignore_free_object		426526	1					
ANR	426558	AssignmentExpression	mem -> procs . free_string = gs_ignore_free_string		426526	1		=			
ANR	426559	MemberAccess	mem -> procs . free_string		426526	0					
ANR	426560	PtrMemberAccess	mem -> procs		426526	0					
ANR	426561	Identifier	mem		426526	0					
ANR	426562	Identifier	procs		426526	1					
ANR	426563	Identifier	free_string		426526	1					
ANR	426564	Identifier	gs_ignore_free_string		426526	1					
ANR	426565	ReturnType	static void		426526	1					
ANR	426566	Identifier	i_enable_free		426526	2					
ANR	426567	ParameterList	"gs_memory_t * mem , bool enable"		426526	3					
ANR	426568	Parameter	gs_memory_t * mem	1794:14:57690:57706	426526	0	True				
ANR	426569	ParameterType	gs_memory_t *		426526	0					
ANR	426570	Identifier	mem		426526	1					
ANR	426571	Parameter	bool enable	1794:33:57709:57719	426526	1	True				
ANR	426572	ParameterType	bool		426526	0					
ANR	426573	Identifier	enable		426526	1					
ANR	426574	CFGEntryNode	ENTRY		426526		True				
ANR	426575	CFGExitNode	EXIT		426526		True				
ANR	426576	Symbol	gs_ignore_free_string		426526						
ANR	426577	Symbol	mem		426526						
ANR	426578	Symbol	enable		426526						
ANR	426579	Symbol	i_free_string		426526						
ANR	426580	Symbol	i_free_object		426526						
ANR	426581	Symbol	mem -> procs . free_object		426526						
ANR	426582	Symbol	mem -> procs		426526						
ANR	426583	Symbol	gs_ignore_free_object		426526						
ANR	426584	Symbol	mem -> procs . free_string		426526						
ANR	426585	Symbol	* mem		426526						
ANR	426586	Function	i_set_object_type	1804:0:57968:58171							
ANR	426587	FunctionDef	"i_set_object_type (gs_memory_t * mem , void * ptr , gs_memory_type_ptr_t type)"		426586	0					
ANR	426588	CompoundStatement		1805:0:58054:58171	426586	0					
ANR	426589	IdentifierDeclStatement	obj_header_t * pp ;	1806:4:58060:58076	426586	0	True				
ANR	426590	IdentifierDecl	* pp		426586	0					
ANR	426591	IdentifierDeclType	obj_header_t *		426586	0					
ANR	426592	Identifier	pp		426586	1					
ANR	426593	IfStatement	if ( ptr == 0 )		426586	1					
ANR	426594	Condition	ptr == 0	1808:8:58087:58094	426586	0	True				
ANR	426595	EqualityExpression	ptr == 0		426586	0		==			
ANR	426596	Identifier	ptr		426586	0					
ANR	426597	PrimaryExpression	0		426586	1					
ANR	426598	ReturnStatement	return ;	1809:8:58105:58111	426586	1	True				
ANR	426599	ExpressionStatement	pp = ( obj_header_t * ) ptr - 1	1810:4:58117:58146	426586	2	True				
ANR	426600	AssignmentExpression	pp = ( obj_header_t * ) ptr - 1		426586	0		=			
ANR	426601	Identifier	pp		426586	0					
ANR	426602	AdditiveExpression	( obj_header_t * ) ptr - 1		426586	1		-			
ANR	426603	CastExpression	( obj_header_t * ) ptr		426586	0					
ANR	426604	CastTarget	obj_header_t *		426586	0					
ANR	426605	Identifier	ptr		426586	1					
ANR	426606	PrimaryExpression	1		426586	1					
ANR	426607	ExpressionStatement	pp -> o_type = type	1811:4:58152:58169	426586	3	True				
ANR	426608	AssignmentExpression	pp -> o_type = type		426586	0		=			
ANR	426609	PtrMemberAccess	pp -> o_type		426586	0					
ANR	426610	Identifier	pp		426586	0					
ANR	426611	Identifier	o_type		426586	1					
ANR	426612	Identifier	type		426586	1					
ANR	426613	ReturnType	static void		426586	1					
ANR	426614	Identifier	i_set_object_type		426586	2					
ANR	426615	ParameterList	"gs_memory_t * mem , void * ptr , gs_memory_type_ptr_t type"		426586	3					
ANR	426616	Parameter	gs_memory_t * mem	1804:30:57998:58013	426586	0	True				
ANR	426617	ParameterType	gs_memory_t *		426586	0					
ANR	426618	Identifier	mem		426586	1					
ANR	426619	Parameter	void * ptr	1804:48:58016:58024	426586	1	True				
ANR	426620	ParameterType	void *		426586	0					
ANR	426621	Identifier	ptr		426586	1					
ANR	426622	Parameter	gs_memory_type_ptr_t type	1804:59:58027:58051	426586	2	True				
ANR	426623	ParameterType	gs_memory_type_ptr_t		426586	0					
ANR	426624	Identifier	type		426586	1					
ANR	426625	CFGEntryNode	ENTRY		426586		True				
ANR	426626	CFGExitNode	EXIT		426586		True				
ANR	426627	Symbol	pp		426586						
ANR	426628	Symbol	mem		426586						
ANR	426629	Symbol	* pp		426586						
ANR	426630	Symbol	type		426586						
ANR	426631	Symbol	pp -> o_type		426586						
ANR	426632	Symbol	ptr		426586						
ANR	426633	Function	i_defer_frees	1814:0:58174:58231							
ANR	426634	FunctionDef	"i_defer_frees (gs_memory_t * mem , int defer)"		426633	0					
ANR	426635	CompoundStatement		1815:0:58229:58231	426633	0					
ANR	426636	ReturnType	static void		426633	1					
ANR	426637	Identifier	i_defer_frees		426633	2					
ANR	426638	ParameterList	"gs_memory_t * mem , int defer"		426633	3					
ANR	426639	Parameter	gs_memory_t * mem	1814:26:58200:58215	426633	0	True				
ANR	426640	ParameterType	gs_memory_t *		426633	0					
ANR	426641	Identifier	mem		426633	1					
ANR	426642	Parameter	int defer	1814:44:58218:58226	426633	1	True				
ANR	426643	ParameterType	int		426633	0					
ANR	426644	Identifier	defer		426633	1					
ANR	426645	CFGEntryNode	ENTRY		426633		True				
ANR	426646	CFGExitNode	EXIT		426633		True				
ANR	426647	Symbol	defer		426633						
ANR	426648	Symbol	mem		426633						
ANR	426649	Function	compute_free_objects	1821:0:58345:58776							
ANR	426650	FunctionDef	compute_free_objects (gs_ref_memory_t * mem)		426649	0					
ANR	426651	CompoundStatement		1823:0:58402:58776	426649	0					
ANR	426652	IdentifierDeclStatement	ulong unused = mem -> lost . objects ;	1824:4:58408:58440	426649	0	True				
ANR	426653	IdentifierDecl	unused = mem -> lost . objects		426649	0					
ANR	426654	IdentifierDeclType	ulong		426649	0					
ANR	426655	Identifier	unused		426649	1					
ANR	426656	AssignmentExpression	unused = mem -> lost . objects		426649	2		=			
ANR	426657	Identifier	unused		426649	0					
ANR	426658	MemberAccess	mem -> lost . objects		426649	1					
ANR	426659	PtrMemberAccess	mem -> lost		426649	0					
ANR	426660	Identifier	mem		426649	0					
ANR	426661	Identifier	lost		426649	1					
ANR	426662	Identifier	objects		426649	1					
ANR	426663	IdentifierDeclStatement	int i ;	1825:4:58446:58451	426649	1	True				
ANR	426664	IdentifierDecl	i		426649	0					
ANR	426665	IdentifierDeclType	int		426649	0					
ANR	426666	Identifier	i		426649	1					
ANR	426667	ForStatement	for ( i = 0 ; i < num_freelists ; i ++ )		426649	2					
ANR	426668	ForInit	i = 0 ;	1828:9:58501:58506	426649	0	True				
ANR	426669	AssignmentExpression	i = 0		426649	0		=			
ANR	426670	Identifier	i		426649	0					
ANR	426671	PrimaryExpression	0		426649	1					
ANR	426672	Condition	i < num_freelists	1828:16:58508:58524	426649	1	True				
ANR	426673	RelationalExpression	i < num_freelists		426649	0		<			
ANR	426674	Identifier	i		426649	0					
ANR	426675	Identifier	num_freelists		426649	1					
ANR	426676	PostIncDecOperationExpression	i ++	1828:35:58527:58529	426649	2	True				
ANR	426677	Identifier	i		426649	0					
ANR	426678	IncDec	++		426649	1					
ANR	426679	CompoundStatement		7:8:139:164	426649	3					
ANR	426680	IdentifierDeclStatement	const obj_header_t * pfree ;	1829:8:58542:58567	426649	0	True				
ANR	426681	IdentifierDecl	* pfree		426649	0					
ANR	426682	IdentifierDeclType	const obj_header_t *		426649	0					
ANR	426683	Identifier	pfree		426649	1					
ANR	426684	Statement	for	1831:8:58578:58580	426649	1	True				
ANR	426685	Statement	(	1831:12:58582:58582	426649	2	True				
ANR	426686	ExpressionStatement	pfree = mem -> freelists [ i ]	1831:13:58583:58608	426649	3	True				
ANR	426687	AssignmentExpression	pfree = mem -> freelists [ i ]		426649	0		=			
ANR	426688	Identifier	pfree		426649	0					
ANR	426689	ArrayIndexing	mem -> freelists [ i ]		426649	1					
ANR	426690	PtrMemberAccess	mem -> freelists		426649	0					
ANR	426691	Identifier	mem		426649	0					
ANR	426692	Identifier	freelists		426649	1					
ANR	426693	Identifier	i		426649	1					
ANR	426694	ExpressionStatement	pfree != 0	1831:40:58610:58620	426649	4	True				
ANR	426695	EqualityExpression	pfree != 0		426649	0		!=			
ANR	426696	Identifier	pfree		426649	0					
ANR	426697	PrimaryExpression	0		426649	1					
ANR	426698	Statement	pfree	1832:13:58635:58639	426649	5	True				
ANR	426699	Statement	=	1832:19:58641:58641	426649	6	True				
ANR	426700	Statement	*	1832:21:58643:58643	426649	7	True				
ANR	426701	Statement	(	1832:22:58644:58644	426649	8	True				
ANR	426702	Statement	const	1832:23:58645:58649	426649	9	True				
ANR	426703	Statement	obj_header_t	1832:29:58651:58662	426649	10	True				
ANR	426704	Statement	*	1832:42:58664:58664	426649	11	True				
ANR	426705	Statement	const	1832:44:58666:58670	426649	12	True				
ANR	426706	Statement	*	1832:50:58672:58672	426649	13	True				
ANR	426707	Statement	)	1832:51:58673:58673	426649	14	True				
ANR	426708	Statement	pfree	1832:52:58674:58678	426649	15	True				
ANR	426709	Statement	)	1833:12:58692:58692	426649	16	True				
ANR	426710	ExpressionStatement	unused += obj_align_round ( pfree [ - 1 ] . o_size )	1834:12:58706:58749	426649	17	True				
ANR	426711	AssignmentExpression	unused += obj_align_round ( pfree [ - 1 ] . o_size )		426649	0		+=			
ANR	426712	Identifier	unused		426649	0					
ANR	426713	CallExpression	obj_align_round ( pfree [ - 1 ] . o_size )		426649	1					
ANR	426714	Callee	obj_align_round		426649	0					
ANR	426715	Identifier	obj_align_round		426649	0					
ANR	426716	ArgumentList	pfree [ - 1 ] . o_size		426649	1					
ANR	426717	Argument	pfree [ - 1 ] . o_size		426649	0					
ANR	426718	MemberAccess	pfree [ - 1 ] . o_size		426649	0					
ANR	426719	ArrayIndexing	pfree [ - 1 ]		426649	0					
ANR	426720	Identifier	pfree		426649	0					
ANR	426721	UnaryOperationExpression	- 1		426649	1					
ANR	426722	UnaryOperator	-		426649	0					
ANR	426723	PrimaryExpression	1		426649	1					
ANR	426724	Identifier	o_size		426649	1					
ANR	426725	ReturnStatement	return unused ;	1836:4:58761:58774	426649	3	True				
ANR	426726	Identifier	unused		426649	0					
ANR	426727	ReturnType	static ulong		426649	1					
ANR	426728	Identifier	compute_free_objects		426649	2					
ANR	426729	ParameterList	gs_ref_memory_t * mem		426649	3					
ANR	426730	Parameter	gs_ref_memory_t * mem	1822:21:58379:58399	426649	0	True				
ANR	426731	ParameterType	gs_ref_memory_t *		426649	0					
ANR	426732	Identifier	mem		426649	1					
ANR	426733	CFGEntryNode	ENTRY		426649		True				
ANR	426734	CFGExitNode	EXIT		426649		True				
ANR	426735	Symbol	obj_align_round		426649						
ANR	426736	Symbol	pfree		426649						
ANR	426737	Symbol	mem -> freelists		426649						
ANR	426738	Symbol	pfree [ - 1 ] . o_size		426649						
ANR	426739	Symbol	i		426649						
ANR	426740	Symbol	* * mem		426649						
ANR	426741	Symbol	num_freelists		426649						
ANR	426742	Symbol	mem -> lost . objects		426649						
ANR	426743	Symbol	* i		426649						
ANR	426744	Symbol	mem		426649						
ANR	426745	Symbol	mem -> lost		426649						
ANR	426746	Symbol	* mem -> freelists		426649						
ANR	426747	Symbol	unused		426649						
ANR	426748	Symbol	* pfree		426649						
ANR	426749	Symbol	* mem		426649						
ANR	426750	Function	large_freelist_alloc	1840:0:58835:60845							
ANR	426751	FunctionDef	"large_freelist_alloc (gs_ref_memory_t * mem , uint size)"		426750	0					
ANR	426752	CompoundStatement		1842:0:58947:60845	426750	0					
ANR	426753	IdentifierDeclStatement	uint aligned_size = obj_align_round ( size ) ;	1845:4:59085:59126	426750	0	True				
ANR	426754	IdentifierDecl	aligned_size = obj_align_round ( size )		426750	0					
ANR	426755	IdentifierDeclType	uint		426750	0					
ANR	426756	Identifier	aligned_size		426750	1					
ANR	426757	AssignmentExpression	aligned_size = obj_align_round ( size )		426750	2		=			
ANR	426758	Identifier	aligned_size		426750	0					
ANR	426759	CallExpression	obj_align_round ( size )		426750	1					
ANR	426760	Callee	obj_align_round		426750	0					
ANR	426761	Identifier	obj_align_round		426750	0					
ANR	426762	ArgumentList	size		426750	1					
ANR	426763	Argument	size		426750	0					
ANR	426764	Identifier	size		426750	0					
ANR	426765	IdentifierDeclStatement	uint aligned_min_size = aligned_size + sizeof ( obj_header_t ) ;	1846:4:59132:59191	426750	1	True				
ANR	426766	IdentifierDecl	aligned_min_size = aligned_size + sizeof ( obj_header_t )		426750	0					
ANR	426767	IdentifierDeclType	uint		426750	0					
ANR	426768	Identifier	aligned_min_size		426750	1					
ANR	426769	AssignmentExpression	aligned_min_size = aligned_size + sizeof ( obj_header_t )		426750	2		=			
ANR	426770	Identifier	aligned_min_size		426750	0					
ANR	426771	AdditiveExpression	aligned_size + sizeof ( obj_header_t )		426750	1		+			
ANR	426772	Identifier	aligned_size		426750	0					
ANR	426773	SizeofExpression	sizeof ( obj_header_t )		426750	1					
ANR	426774	Sizeof	sizeof		426750	0					
ANR	426775	SizeofOperand	obj_header_t		426750	1					
ANR	426776	IdentifierDeclStatement	uint aligned_max_size = aligned_min_size + obj_align_round ( aligned_min_size / 8 ) ;	1847:4:59197:59285	426750	2	True				
ANR	426777	IdentifierDecl	aligned_max_size = aligned_min_size + obj_align_round ( aligned_min_size / 8 )		426750	0					
ANR	426778	IdentifierDeclType	uint		426750	0					
ANR	426779	Identifier	aligned_max_size		426750	1					
ANR	426780	AssignmentExpression	aligned_max_size = aligned_min_size + obj_align_round ( aligned_min_size / 8 )		426750	2		=			
ANR	426781	Identifier	aligned_max_size		426750	0					
ANR	426782	AdditiveExpression	aligned_min_size + obj_align_round ( aligned_min_size / 8 )		426750	1		+			
ANR	426783	Identifier	aligned_min_size		426750	0					
ANR	426784	CallExpression	obj_align_round ( aligned_min_size / 8 )		426750	1					
ANR	426785	Callee	obj_align_round		426750	0					
ANR	426786	Identifier	obj_align_round		426750	0					
ANR	426787	ArgumentList	aligned_min_size / 8		426750	1					
ANR	426788	Argument	aligned_min_size / 8		426750	0					
ANR	426789	MultiplicativeExpression	aligned_min_size / 8		426750	0		/			
ANR	426790	Identifier	aligned_min_size		426750	0					
ANR	426791	PrimaryExpression	8		426750	1					
ANR	426792	IdentifierDeclStatement	obj_header_t * best_fit = 0 ;	1849:4:59291:59317	426750	3	True				
ANR	426793	IdentifierDecl	* best_fit = 0		426750	0					
ANR	426794	IdentifierDeclType	obj_header_t *		426750	0					
ANR	426795	Identifier	best_fit		426750	1					
ANR	426796	AssignmentExpression	* best_fit = 0		426750	2		=			
ANR	426797	Identifier	best_fit		426750	0					
ANR	426798	PrimaryExpression	0		426750	1					
ANR	426799	IdentifierDeclStatement	obj_header_t * * best_fit_prev = NULL ;	1850:4:59323:59358	426750	4	True				
ANR	426800	IdentifierDecl	* * best_fit_prev = NULL		426750	0					
ANR	426801	IdentifierDeclType	obj_header_t * *		426750	0					
ANR	426802	Identifier	best_fit_prev		426750	1					
ANR	426803	AssignmentExpression	* * best_fit_prev = NULL		426750	2		=			
ANR	426804	Identifier	NULL		426750	0					
ANR	426805	Identifier	NULL		426750	1					
ANR	426806	IdentifierDeclStatement	uint best_fit_size = max_uint ;	1851:4:59403:59432	426750	5	True				
ANR	426807	IdentifierDecl	best_fit_size = max_uint		426750	0					
ANR	426808	IdentifierDeclType	uint		426750	0					
ANR	426809	Identifier	best_fit_size		426750	1					
ANR	426810	AssignmentExpression	best_fit_size = max_uint		426750	2		=			
ANR	426811	Identifier	max_uint		426750	0					
ANR	426812	Identifier	max_uint		426750	1					
ANR	426813	IdentifierDeclStatement	obj_header_t * pfree ;	1852:4:59438:59457	426750	6	True				
ANR	426814	IdentifierDecl	* pfree		426750	0					
ANR	426815	IdentifierDeclType	obj_header_t *		426750	0					
ANR	426816	Identifier	pfree		426750	1					
ANR	426817	IdentifierDeclStatement	obj_header_t * * ppfprev = & mem -> freelists [ LARGE_FREELIST_INDEX ] ;	1853:4:59463:59525	426750	7	True				
ANR	426818	IdentifierDecl	* * ppfprev = & mem -> freelists [ LARGE_FREELIST_INDEX ]		426750	0					
ANR	426819	IdentifierDeclType	obj_header_t * *		426750	0					
ANR	426820	Identifier	ppfprev		426750	1					
ANR	426821	AssignmentExpression	* * ppfprev = & mem -> freelists [ LARGE_FREELIST_INDEX ]		426750	2		=			
ANR	426822	Identifier	ppfprev		426750	0					
ANR	426823	UnaryOperationExpression	& mem -> freelists [ LARGE_FREELIST_INDEX ]		426750	1					
ANR	426824	UnaryOperator	&		426750	0					
ANR	426825	ArrayIndexing	mem -> freelists [ LARGE_FREELIST_INDEX ]		426750	1					
ANR	426826	PtrMemberAccess	mem -> freelists		426750	0					
ANR	426827	Identifier	mem		426750	0					
ANR	426828	Identifier	freelists		426750	1					
ANR	426829	Identifier	LARGE_FREELIST_INDEX		426750	1					
ANR	426830	IdentifierDeclStatement	uint largest_size = 0 ;	1854:4:59531:59552	426750	8	True				
ANR	426831	IdentifierDecl	largest_size = 0		426750	0					
ANR	426832	IdentifierDeclType	uint		426750	0					
ANR	426833	Identifier	largest_size		426750	1					
ANR	426834	AssignmentExpression	largest_size = 0		426750	2		=			
ANR	426835	Identifier	largest_size		426750	0					
ANR	426836	PrimaryExpression	0		426750	1					
ANR	426837	IfStatement	if ( aligned_size > mem -> largest_free_size )		426750	9					
ANR	426838	Condition	aligned_size > mem -> largest_free_size	1856:8:59563:59599	426750	0	True				
ANR	426839	RelationalExpression	aligned_size > mem -> largest_free_size		426750	0		>			
ANR	426840	Identifier	aligned_size		426750	0					
ANR	426841	PtrMemberAccess	mem -> largest_free_size		426750	1					
ANR	426842	Identifier	mem		426750	0					
ANR	426843	Identifier	largest_free_size		426750	1					
ANR	426844	ReturnStatement	return 0 ;	1857:8:59610:59618	426750	1	True				
ANR	426845	PrimaryExpression	0		426750	0					
ANR	426846	WhileStatement	while ( ( pfree = * ppfprev ) != 0 )		426750	10					
ANR	426847	Condition	( pfree = * ppfprev ) != 0	1859:11:59672:59694	426750	0	True				
ANR	426848	EqualityExpression	( pfree = * ppfprev ) != 0		426750	0		!=			
ANR	426849	AssignmentExpression	pfree = * ppfprev		426750	0		=			
ANR	426850	Identifier	pfree		426750	0					
ANR	426851	UnaryOperationExpression	* ppfprev		426750	1					
ANR	426852	UnaryOperator	*		426750	0					
ANR	426853	Identifier	ppfprev		426750	1					
ANR	426854	PrimaryExpression	0		426750	1					
ANR	426855	CompoundStatement		19:8:759:809	426750	1					
ANR	426856	IdentifierDeclStatement	uint free_size = obj_align_round ( pfree [ - 1 ] . o_size ) ;	1860:8:59707:59757	426750	0	True				
ANR	426857	IdentifierDecl	free_size = obj_align_round ( pfree [ - 1 ] . o_size )		426750	0					
ANR	426858	IdentifierDeclType	uint		426750	0					
ANR	426859	Identifier	free_size		426750	1					
ANR	426860	AssignmentExpression	free_size = obj_align_round ( pfree [ - 1 ] . o_size )		426750	2		=			
ANR	426861	Identifier	free_size		426750	0					
ANR	426862	CallExpression	obj_align_round ( pfree [ - 1 ] . o_size )		426750	1					
ANR	426863	Callee	obj_align_round		426750	0					
ANR	426864	Identifier	obj_align_round		426750	0					
ANR	426865	ArgumentList	pfree [ - 1 ] . o_size		426750	1					
ANR	426866	Argument	pfree [ - 1 ] . o_size		426750	0					
ANR	426867	MemberAccess	pfree [ - 1 ] . o_size		426750	0					
ANR	426868	ArrayIndexing	pfree [ - 1 ]		426750	0					
ANR	426869	Identifier	pfree		426750	0					
ANR	426870	UnaryOperationExpression	- 1		426750	1					
ANR	426871	UnaryOperator	-		426750	0					
ANR	426872	PrimaryExpression	1		426750	1					
ANR	426873	Identifier	o_size		426750	1					
ANR	426874	IfStatement	if ( free_size == aligned_size || ( free_size >= aligned_min_size && free_size < best_fit_size ) )		426750	1					
ANR	426875	Condition	free_size == aligned_size || ( free_size >= aligned_min_size && free_size < best_fit_size )	1862:12:59772:59872	426750	0	True				
ANR	426876	OrExpression	free_size == aligned_size || ( free_size >= aligned_min_size && free_size < best_fit_size )		426750	0		||			
ANR	426877	EqualityExpression	free_size == aligned_size		426750	0		==			
ANR	426878	Identifier	free_size		426750	0					
ANR	426879	Identifier	aligned_size		426750	1					
ANR	426880	AndExpression	free_size >= aligned_min_size && free_size < best_fit_size		426750	1		&&			
ANR	426881	RelationalExpression	free_size >= aligned_min_size		426750	0		>=			
ANR	426882	Identifier	free_size		426750	0					
ANR	426883	Identifier	aligned_min_size		426750	1					
ANR	426884	RelationalExpression	free_size < best_fit_size		426750	1		<			
ANR	426885	Identifier	free_size		426750	0					
ANR	426886	Identifier	best_fit_size		426750	1					
ANR	426887	CompoundStatement		23:14:940:940	426750	1					
ANR	426888	ExpressionStatement	best_fit = pfree	1865:12:59902:59918	426750	0	True				
ANR	426889	AssignmentExpression	best_fit = pfree		426750	0		=			
ANR	426890	Identifier	best_fit		426750	0					
ANR	426891	Identifier	pfree		426750	1					
ANR	426892	ExpressionStatement	best_fit_prev = ppfprev	1866:12:59932:59955	426750	1	True				
ANR	426893	AssignmentExpression	best_fit_prev = ppfprev		426750	0		=			
ANR	426894	Identifier	best_fit_prev		426750	0					
ANR	426895	Identifier	ppfprev		426750	1					
ANR	426896	ExpressionStatement	best_fit_size = pfree [ - 1 ] . o_size	1867:12:59969:60001	426750	2	True				
ANR	426897	AssignmentExpression	best_fit_size = pfree [ - 1 ] . o_size		426750	0		=			
ANR	426898	Identifier	best_fit_size		426750	0					
ANR	426899	MemberAccess	pfree [ - 1 ] . o_size		426750	1					
ANR	426900	ArrayIndexing	pfree [ - 1 ]		426750	0					
ANR	426901	Identifier	pfree		426750	0					
ANR	426902	UnaryOperationExpression	- 1		426750	1					
ANR	426903	UnaryOperator	-		426750	0					
ANR	426904	PrimaryExpression	1		426750	1					
ANR	426905	Identifier	o_size		426750	1					
ANR	426906	IfStatement	if ( best_fit_size <= aligned_max_size )		426750	3					
ANR	426907	Condition	best_fit_size <= aligned_max_size	1868:16:60019:60051	426750	0	True				
ANR	426908	RelationalExpression	best_fit_size <= aligned_max_size		426750	0		<=			
ANR	426909	Identifier	best_fit_size		426750	0					
ANR	426910	Identifier	aligned_max_size		426750	1					
ANR	426911	BreakStatement	break ;	1869:16:60070:60075	426750	1	True				
ANR	426912	ExpressionStatement	ppfprev = ( obj_header_t * * ) pfree	1871:8:60146:60179	426750	2	True				
ANR	426913	AssignmentExpression	ppfprev = ( obj_header_t * * ) pfree		426750	0		=			
ANR	426914	Identifier	ppfprev		426750	0					
ANR	426915	CastExpression	( obj_header_t * * ) pfree		426750	1					
ANR	426916	CastTarget	obj_header_t * *		426750	0					
ANR	426917	Identifier	pfree		426750	1					
ANR	426918	IfStatement	if ( free_size > largest_size )		426750	3					
ANR	426919	Condition	free_size > largest_size	1872:12:60193:60216	426750	0	True				
ANR	426920	RelationalExpression	free_size > largest_size		426750	0		>			
ANR	426921	Identifier	free_size		426750	0					
ANR	426922	Identifier	largest_size		426750	1					
ANR	426923	ExpressionStatement	largest_size = free_size	1873:12:60231:60255	426750	1	True				
ANR	426924	AssignmentExpression	largest_size = free_size		426750	0		=			
ANR	426925	Identifier	largest_size		426750	0					
ANR	426926	Identifier	free_size		426750	1					
ANR	426927	IfStatement	if ( best_fit == 0 )		426750	11					
ANR	426928	Condition	best_fit == 0	1875:8:60271:60283	426750	0	True				
ANR	426929	EqualityExpression	best_fit == 0		426750	0		==			
ANR	426930	Identifier	best_fit		426750	0					
ANR	426931	PrimaryExpression	0		426750	1					
ANR	426932	CompoundStatement		34:23:1338:1338	426750	1					
ANR	426933	ExpressionStatement	mem -> largest_free_size = largest_size	1881:8:60489:60526	426750	0	True				
ANR	426934	AssignmentExpression	mem -> largest_free_size = largest_size		426750	0		=			
ANR	426935	PtrMemberAccess	mem -> largest_free_size		426750	0					
ANR	426936	Identifier	mem		426750	0					
ANR	426937	Identifier	largest_free_size		426750	1					
ANR	426938	Identifier	largest_size		426750	1					
ANR	426939	ReturnStatement	return 0 ;	1882:8:60536:60544	426750	1	True				
ANR	426940	PrimaryExpression	0		426750	0					
ANR	426941	ExpressionStatement	* best_fit_prev = * ( obj_header_t * * ) best_fit	1886:4:60619:60662	426750	12	True				
ANR	426942	AssignmentExpression	* best_fit_prev = * ( obj_header_t * * ) best_fit		426750	0		=			
ANR	426943	UnaryOperationExpression	* best_fit_prev		426750	0					
ANR	426944	UnaryOperator	*		426750	0					
ANR	426945	Identifier	best_fit_prev		426750	1					
ANR	426946	UnaryOperationExpression	* ( obj_header_t * * ) best_fit		426750	1					
ANR	426947	UnaryOperator	*		426750	0					
ANR	426948	CastExpression	( obj_header_t * * ) best_fit		426750	1					
ANR	426949	CastTarget	obj_header_t * *		426750	0					
ANR	426950	Identifier	best_fit		426750	1					
ANR	426951	ExpressionStatement	"trim_obj ( mem , best_fit , aligned_size , ( clump_t * ) 0 )"	1887:4:60668:60719	426750	13	True				
ANR	426952	CallExpression	"trim_obj ( mem , best_fit , aligned_size , ( clump_t * ) 0 )"		426750	0					
ANR	426953	Callee	trim_obj		426750	0					
ANR	426954	Identifier	trim_obj		426750	0					
ANR	426955	ArgumentList	mem		426750	1					
ANR	426956	Argument	mem		426750	0					
ANR	426957	Identifier	mem		426750	0					
ANR	426958	Argument	best_fit		426750	1					
ANR	426959	Identifier	best_fit		426750	0					
ANR	426960	Argument	aligned_size		426750	2					
ANR	426961	Identifier	aligned_size		426750	0					
ANR	426962	Argument	( clump_t * ) 0		426750	3					
ANR	426963	CastExpression	( clump_t * ) 0		426750	0					
ANR	426964	CastTarget	clump_t *		426750	0					
ANR	426965	PrimaryExpression	0		426750	1					
ANR	426966	ExpressionStatement	best_fit [ - 1 ] . o_size = size	1890:4:60795:60821	426750	14	True				
ANR	426967	AssignmentExpression	best_fit [ - 1 ] . o_size = size		426750	0		=			
ANR	426968	MemberAccess	best_fit [ - 1 ] . o_size		426750	0					
ANR	426969	ArrayIndexing	best_fit [ - 1 ]		426750	0					
ANR	426970	Identifier	best_fit		426750	0					
ANR	426971	UnaryOperationExpression	- 1		426750	1					
ANR	426972	UnaryOperator	-		426750	0					
ANR	426973	PrimaryExpression	1		426750	1					
ANR	426974	Identifier	o_size		426750	1					
ANR	426975	Identifier	size		426750	1					
ANR	426976	ReturnStatement	return best_fit ;	1892:4:60828:60843	426750	15	True				
ANR	426977	Identifier	best_fit		426750	0					
ANR	426978	ReturnType	static obj_header_t *		426750	1					
ANR	426979	Identifier	large_freelist_alloc		426750	2					
ANR	426980	ParameterList	"gs_ref_memory_t * mem , uint size"		426750	3					
ANR	426981	Parameter	gs_ref_memory_t * mem	1841:21:58914:58933	426750	0	True				
ANR	426982	ParameterType	gs_ref_memory_t *		426750	0					
ANR	426983	Identifier	mem		426750	1					
ANR	426984	Parameter	uint size	1841:43:58936:58944	426750	1	True				
ANR	426985	ParameterType	uint		426750	0					
ANR	426986	Identifier	size		426750	1					
ANR	426987	CFGEntryNode	ENTRY		426750		True				
ANR	426988	CFGExitNode	EXIT		426750		True				
ANR	426989	Symbol	* best_fit_prev		426750						
ANR	426990	Symbol	* best_fit		426750						
ANR	426991	Symbol	obj_align_round		426750						
ANR	426992	Symbol	max_uint		426750						
ANR	426993	Symbol	pfree		426750						
ANR	426994	Symbol	mem -> freelists		426750						
ANR	426995	Symbol	LARGE_FREELIST_INDEX		426750						
ANR	426996	Symbol	aligned_max_size		426750						
ANR	426997	Symbol	mem		426750						
ANR	426998	Symbol	best_fit [ - 1 ] . o_size		426750						
ANR	426999	Symbol	aligned_min_size		426750						
ANR	427000	Symbol	best_fit_size		426750						
ANR	427001	Symbol	free_size		426750						
ANR	427002	Symbol	* pfree		426750						
ANR	427003	Symbol	aligned_size		426750						
ANR	427004	Symbol	best_fit		426750						
ANR	427005	Symbol	NULL		426750						
ANR	427006	Symbol	pfree [ - 1 ] . o_size		426750						
ANR	427007	Symbol	* ppfprev		426750						
ANR	427008	Symbol	* ( obj_header_t * * ) best_fit		426750						
ANR	427009	Symbol	mem -> largest_free_size		426750						
ANR	427010	Symbol	best_fit_prev		426750						
ANR	427011	Symbol	ppfprev		426750						
ANR	427012	Symbol	size		426750						
ANR	427013	Symbol	largest_size		426750						
ANR	427014	Symbol	* mem		426750						
ANR	427015	Function	alloc_obj	1896:0:60924:65739							
ANR	427016	FunctionDef	"alloc_obj (gs_ref_memory_t * mem , ulong lsize , gs_memory_type_ptr_t pstype , alloc_flags_t flags , client_name_t cname)"		427015	0					
ANR	427017	CompoundStatement		1899:0:61072:65739	427015	0					
ANR	427018	IdentifierDeclStatement	obj_header_t * ptr ;	1900:4:61078:61095	427015	0	True				
ANR	427019	IdentifierDecl	* ptr		427015	0					
ANR	427020	IdentifierDeclType	obj_header_t *		427015	0					
ANR	427021	Identifier	ptr		427015	1					
ANR	427022	IfStatement	if ( lsize >= mem -> large_size || ( flags & ALLOC_IMMOVABLE ) )		427015	1					
ANR	427023	Condition	lsize >= mem -> large_size || ( flags & ALLOC_IMMOVABLE )	1902:8:61106:61158	427015	0	True				
ANR	427024	OrExpression	lsize >= mem -> large_size || ( flags & ALLOC_IMMOVABLE )		427015	0		||			
ANR	427025	RelationalExpression	lsize >= mem -> large_size		427015	0		>=			
ANR	427026	Identifier	lsize		427015	0					
ANR	427027	PtrMemberAccess	mem -> large_size		427015	1					
ANR	427028	Identifier	mem		427015	0					
ANR	427029	Identifier	large_size		427015	1					
ANR	427030	BitAndExpression	flags & ALLOC_IMMOVABLE		427015	1		&			
ANR	427031	Identifier	flags		427015	0					
ANR	427032	Identifier	ALLOC_IMMOVABLE		427015	1					
ANR	427033	CompoundStatement		12:8:356:497	427015	1					
ANR	427034	IdentifierDeclStatement	ulong asize = ( ( lsize + obj_align_mask ) & - obj_align_mod ) + sizeof ( obj_header_t ) ;	1907:8:61315:61419	427015	0	True				
ANR	427035	IdentifierDecl	asize = ( ( lsize + obj_align_mask ) & - obj_align_mod ) + sizeof ( obj_header_t )		427015	0					
ANR	427036	IdentifierDeclType	ulong		427015	0					
ANR	427037	Identifier	asize		427015	1					
ANR	427038	AssignmentExpression	asize = ( ( lsize + obj_align_mask ) & - obj_align_mod ) + sizeof ( obj_header_t )		427015	2		=			
ANR	427039	Identifier	asize		427015	0					
ANR	427040	AdditiveExpression	( ( lsize + obj_align_mask ) & - obj_align_mod ) + sizeof ( obj_header_t )		427015	1		+			
ANR	427041	BitAndExpression	( lsize + obj_align_mask ) & - obj_align_mod		427015	0		&			
ANR	427042	AdditiveExpression	lsize + obj_align_mask		427015	0		+			
ANR	427043	Identifier	lsize		427015	0					
ANR	427044	Identifier	obj_align_mask		427015	1					
ANR	427045	UnaryOperationExpression	- obj_align_mod		427015	1					
ANR	427046	UnaryOperator	-		427015	0					
ANR	427047	Identifier	obj_align_mod		427015	1					
ANR	427048	SizeofExpression	sizeof ( obj_header_t )		427015	1					
ANR	427049	Sizeof	sizeof		427015	0					
ANR	427050	SizeofOperand	obj_header_t		427015	1					
ANR	427051	IdentifierDeclStatement	"clump_t * cp = alloc_acquire_clump ( mem , asize + sizeof ( clump_head_t ) , false , ""large object clump"" ) ;"	1910:8:61429:61570	427015	1	True				
ANR	427052	IdentifierDecl	"* cp = alloc_acquire_clump ( mem , asize + sizeof ( clump_head_t ) , false , ""large object clump"" )"		427015	0					
ANR	427053	IdentifierDeclType	clump_t *		427015	0					
ANR	427054	Identifier	cp		427015	1					
ANR	427055	AssignmentExpression	"* cp = alloc_acquire_clump ( mem , asize + sizeof ( clump_head_t ) , false , ""large object clump"" )"		427015	2		=			
ANR	427056	Identifier	cp		427015	0					
ANR	427057	CallExpression	"alloc_acquire_clump ( mem , asize + sizeof ( clump_head_t ) , false , ""large object clump"" )"		427015	1					
ANR	427058	Callee	alloc_acquire_clump		427015	0					
ANR	427059	Identifier	alloc_acquire_clump		427015	0					
ANR	427060	ArgumentList	mem		427015	1					
ANR	427061	Argument	mem		427015	0					
ANR	427062	Identifier	mem		427015	0					
ANR	427063	Argument	asize + sizeof ( clump_head_t )		427015	1					
ANR	427064	AdditiveExpression	asize + sizeof ( clump_head_t )		427015	0		+			
ANR	427065	Identifier	asize		427015	0					
ANR	427066	SizeofExpression	sizeof ( clump_head_t )		427015	1					
ANR	427067	Sizeof	sizeof		427015	0					
ANR	427068	SizeofOperand	clump_head_t		427015	1					
ANR	427069	Argument	false		427015	2					
ANR	427070	Identifier	false		427015	0					
ANR	427071	Argument	"""large object clump"""		427015	3					
ANR	427072	PrimaryExpression	"""large object clump"""		427015	0					
ANR	427073	Statement	if	1914:8:61581:61582	427015	2	True				
ANR	427074	Statement	(	1914:11:61584:61584	427015	3	True				
ANR	427075	Statement	asize	1916:12:61637:61641	427015	4	True				
ANR	427076	Statement	>	1916:18:61643:61643	427015	5	True				
ANR	427077	Statement	max_uint	1916:20:61645:61652	427015	6	True				
ANR	427078	Statement	)	1920:12:61705:61705	427015	7	True				
ANR	427079	ReturnStatement	return 0 ;	1921:12:61719:61727	427015	8	True				
ANR	427080	PrimaryExpression	0		427015	0					
ANR	427081	IfStatement	if ( cp == 0 )		427015	9					
ANR	427082	Condition	cp == 0	1922:12:61741:61747	427015	0	True				
ANR	427083	EqualityExpression	cp == 0		427015	0		==			
ANR	427084	Identifier	cp		427015	0					
ANR	427085	PrimaryExpression	0		427015	1					
ANR	427086	ReturnStatement	return 0 ;	1923:12:61762:61770	427015	1	True				
ANR	427087	PrimaryExpression	0		427015	0					
ANR	427088	ExpressionStatement	cp -> c_alone = true	1924:8:61780:61798	427015	10	True				
ANR	427089	AssignmentExpression	cp -> c_alone = true		427015	0		=			
ANR	427090	PtrMemberAccess	cp -> c_alone		427015	0					
ANR	427091	Identifier	cp		427015	0					
ANR	427092	Identifier	c_alone		427015	1					
ANR	427093	Identifier	true		427015	1					
ANR	427094	ExpressionStatement	ptr = ( obj_header_t * ) cp -> cbot	1925:8:61808:61839	427015	11	True				
ANR	427095	AssignmentExpression	ptr = ( obj_header_t * ) cp -> cbot		427015	0		=			
ANR	427096	Identifier	ptr		427015	0					
ANR	427097	CastExpression	( obj_header_t * ) cp -> cbot		427015	1					
ANR	427098	CastTarget	obj_header_t *		427015	0					
ANR	427099	PtrMemberAccess	cp -> cbot		427015	1					
ANR	427100	Identifier	cp		427015	0					
ANR	427101	Identifier	cbot		427015	1					
ANR	427102	ExpressionStatement	cp -> cbot += asize	1926:8:61849:61866	427015	12	True				
ANR	427103	AssignmentExpression	cp -> cbot += asize		427015	0		+=			
ANR	427104	PtrMemberAccess	cp -> cbot		427015	0					
ANR	427105	Identifier	cp		427015	0					
ANR	427106	Identifier	cbot		427015	1					
ANR	427107	Identifier	asize		427015	1					
ANR	427108	ExpressionStatement	ptr -> o_pad = 0	1927:8:61876:61890	427015	13	True				
ANR	427109	AssignmentExpression	ptr -> o_pad = 0		427015	0		=			
ANR	427110	PtrMemberAccess	ptr -> o_pad		427015	0					
ANR	427111	Identifier	ptr		427015	0					
ANR	427112	Identifier	o_pad		427015	1					
ANR	427113	PrimaryExpression	0		427015	1					
ANR	427114	ExpressionStatement	ptr -> o_alone = 1	1928:8:61900:61916	427015	14	True				
ANR	427115	AssignmentExpression	ptr -> o_alone = 1		427015	0		=			
ANR	427116	PtrMemberAccess	ptr -> o_alone		427015	0					
ANR	427117	Identifier	ptr		427015	0					
ANR	427118	Identifier	o_alone		427015	1					
ANR	427119	PrimaryExpression	1		427015	1					
ANR	427120	ExpressionStatement	ptr -> o_size = lsize	1929:8:61926:61945	427015	15	True				
ANR	427121	AssignmentExpression	ptr -> o_size = lsize		427015	0		=			
ANR	427122	PtrMemberAccess	ptr -> o_size		427015	0					
ANR	427123	Identifier	ptr		427015	0					
ANR	427124	Identifier	o_size		427015	1					
ANR	427125	Identifier	lsize		427015	1					
ANR	427126	ElseStatement	else		427015	0					
ANR	427127	CompoundStatement		40:8:1175:1204	427015	0					
ANR	427128	IdentifierDeclStatement	clump_splay_walker sw ;	1935:8:62103:62124	427015	0	True				
ANR	427129	IdentifierDecl	sw		427015	0					
ANR	427130	IdentifierDeclType	clump_splay_walker		427015	0					
ANR	427131	Identifier	sw		427015	1					
ANR	427132	IdentifierDeclStatement	"clump_t * cp = clump_splay_walk_init_mid ( & sw , mem -> cc ) ;"	1936:8:62134:62187	427015	1	True				
ANR	427133	IdentifierDecl	"* cp = clump_splay_walk_init_mid ( & sw , mem -> cc )"		427015	0					
ANR	427134	IdentifierDeclType	clump_t *		427015	0					
ANR	427135	Identifier	cp		427015	1					
ANR	427136	AssignmentExpression	"* cp = clump_splay_walk_init_mid ( & sw , mem -> cc )"		427015	2		=			
ANR	427137	Identifier	cp		427015	0					
ANR	427138	CallExpression	"clump_splay_walk_init_mid ( & sw , mem -> cc )"		427015	1					
ANR	427139	Callee	clump_splay_walk_init_mid		427015	0					
ANR	427140	Identifier	clump_splay_walk_init_mid		427015	0					
ANR	427141	ArgumentList	& sw		427015	1					
ANR	427142	Argument	& sw		427015	0					
ANR	427143	UnaryOperationExpression	& sw		427015	0					
ANR	427144	UnaryOperator	&		427015	0					
ANR	427145	Identifier	sw		427015	1					
ANR	427146	Argument	mem -> cc		427015	1					
ANR	427147	PtrMemberAccess	mem -> cc		427015	0					
ANR	427148	Identifier	mem		427015	0					
ANR	427149	Identifier	cc		427015	1					
ANR	427150	IdentifierDeclStatement	uint asize = obj_size_round ( ( uint ) lsize ) ;	1937:8:62197:62238	427015	2	True				
ANR	427151	IdentifierDecl	asize = obj_size_round ( ( uint ) lsize )		427015	0					
ANR	427152	IdentifierDeclType	uint		427015	0					
ANR	427153	Identifier	asize		427015	1					
ANR	427154	AssignmentExpression	asize = obj_size_round ( ( uint ) lsize )		427015	2		=			
ANR	427155	Identifier	asize		427015	0					
ANR	427156	CallExpression	obj_size_round ( ( uint ) lsize )		427015	1					
ANR	427157	Callee	obj_size_round		427015	0					
ANR	427158	Identifier	obj_size_round		427015	0					
ANR	427159	ArgumentList	( uint ) lsize		427015	1					
ANR	427160	Argument	( uint ) lsize		427015	0					
ANR	427161	CastExpression	( uint ) lsize		427015	0					
ANR	427162	CastTarget	uint		427015	0					
ANR	427163	Identifier	lsize		427015	1					
ANR	427164	IdentifierDeclStatement	bool allocate_success = false ;	1938:8:62248:62277	427015	3	True				
ANR	427165	IdentifierDecl	allocate_success = false		427015	0					
ANR	427166	IdentifierDeclType	bool		427015	0					
ANR	427167	Identifier	allocate_success		427015	1					
ANR	427168	AssignmentExpression	allocate_success = false		427015	2		=			
ANR	427169	Identifier	false		427015	0					
ANR	427170	Identifier	false		427015	1					
ANR	427171	IfStatement	if ( lsize > max_freelist_size && ( flags & ALLOC_DIRECT ) )		427015	4					
ANR	427172	Condition	lsize > max_freelist_size && ( flags & ALLOC_DIRECT )	1940:12:62292:62342	427015	0	True				
ANR	427173	AndExpression	lsize > max_freelist_size && ( flags & ALLOC_DIRECT )		427015	0		&&			
ANR	427174	RelationalExpression	lsize > max_freelist_size		427015	0		>			
ANR	427175	Identifier	lsize		427015	0					
ANR	427176	Identifier	max_freelist_size		427015	1					
ANR	427177	BitAndExpression	flags & ALLOC_DIRECT		427015	1		&			
ANR	427178	Identifier	flags		427015	0					
ANR	427179	Identifier	ALLOC_DIRECT		427015	1					
ANR	427180	CompoundStatement		42:65:1272:1272	427015	1					
ANR	427181	IfStatement	"if ( ( ptr = large_freelist_alloc ( mem , lsize ) ) != 0 )"		427015	0					
ANR	427182	Condition	"( ptr = large_freelist_alloc ( mem , lsize ) ) != 0"	1942:16:62430:62474	427015	0	True				
ANR	427183	EqualityExpression	"( ptr = large_freelist_alloc ( mem , lsize ) ) != 0"		427015	0		!=			
ANR	427184	AssignmentExpression	"ptr = large_freelist_alloc ( mem , lsize )"		427015	0		=			
ANR	427185	Identifier	ptr		427015	0					
ANR	427186	CallExpression	"large_freelist_alloc ( mem , lsize )"		427015	1					
ANR	427187	Callee	large_freelist_alloc		427015	0					
ANR	427188	Identifier	large_freelist_alloc		427015	0					
ANR	427189	ArgumentList	mem		427015	1					
ANR	427190	Argument	mem		427015	0					
ANR	427191	Identifier	mem		427015	0					
ANR	427192	Argument	lsize		427015	1					
ANR	427193	Identifier	lsize		427015	0					
ANR	427194	PrimaryExpression	0		427015	1					
ANR	427195	CompoundStatement		44:63:1404:1404	427015	1					
ANR	427196	ExpressionStatement	-- ptr	1943:16:62495:62500	427015	0	True				
ANR	427197	UnaryExpression	-- ptr		427015	0					
ANR	427198	IncDec	--		427015	0					
ANR	427199	Identifier	ptr		427015	1					
ANR	427200	GotoStatement	goto done ;	1944:16:62547:62556	427015	1	True				
ANR	427201	Identifier	done		427015	0					
ANR	427202	IfStatement	if ( cp == 0 )		427015	5					
ANR	427203	Condition	cp == 0	1948:12:62595:62601	427015	0	True				
ANR	427204	EqualityExpression	cp == 0		427015	0		==			
ANR	427205	Identifier	cp		427015	0					
ANR	427206	PrimaryExpression	0		427015	1					
ANR	427207	CompoundStatement		50:21:1531:1531	427015	1					
ANR	427208	ExpressionStatement	"mem -> cc = clump_splay_walk_init ( & sw , mem )"	1950:12:62661:62702	427015	0	True				
ANR	427209	AssignmentExpression	"mem -> cc = clump_splay_walk_init ( & sw , mem )"		427015	0		=			
ANR	427210	PtrMemberAccess	mem -> cc		427015	0					
ANR	427211	Identifier	mem		427015	0					
ANR	427212	Identifier	cc		427015	1					
ANR	427213	CallExpression	"clump_splay_walk_init ( & sw , mem )"		427015	1					
ANR	427214	Callee	clump_splay_walk_init		427015	0					
ANR	427215	Identifier	clump_splay_walk_init		427015	0					
ANR	427216	ArgumentList	& sw		427015	1					
ANR	427217	Argument	& sw		427015	0					
ANR	427218	UnaryOperationExpression	& sw		427015	0					
ANR	427219	UnaryOperator	&		427015	0					
ANR	427220	Identifier	sw		427015	1					
ANR	427221	Argument	mem		427015	1					
ANR	427222	Identifier	mem		427015	0					
ANR	427223	ExpressionStatement	alloc_open_clump ( mem )	1951:12:62716:62737	427015	1	True				
ANR	427224	CallExpression	alloc_open_clump ( mem )		427015	0					
ANR	427225	Callee	alloc_open_clump		427015	0					
ANR	427226	Identifier	alloc_open_clump		427015	0					
ANR	427227	ArgumentList	mem		427015	1					
ANR	427228	Argument	mem		427015	0					
ANR	427229	Identifier	mem		427015	0					
ANR	427230	Statement	define	1954:1:62751:62756	427015	6	True				
ANR	427231	Statement	CAN_ALLOC_AT_END	1954:8:62758:62773	427015	7	True				
ANR	427232	Statement	(	1954:24:62774:62774	427015	8	True				
ANR	427233	Statement	cp	1954:25:62775:62776	427015	9	True				
ANR	427234	Statement	)	1954:27:62777:62777	427015	10	True				
ANR	427235	Statement	(	1955:2:62782:62782	427015	11	True				
ANR	427236	Statement	(	1955:3:62783:62783	427015	12	True				
ANR	427237	Statement	cp	1955:4:62784:62785	427015	13	True				
ANR	427238	Statement	)	1955:6:62786:62786	427015	14	True				
ANR	427239	Statement	&&	1955:8:62788:62789	427015	15	True				
ANR	427240	Statement	!	1955:11:62791:62791	427015	16	True				
ANR	427241	Statement	(	1955:12:62792:62792	427015	17	True				
ANR	427242	Statement	(	1955:13:62793:62793	427015	18	True				
ANR	427243	Statement	cp	1955:14:62794:62795	427015	19	True				
ANR	427244	Statement	)	1955:16:62796:62796	427015	20	True				
ANR	427245	Statement	->	1955:17:62797:62798	427015	21	True				
ANR	427246	Statement	c_alone	1955:19:62799:62805	427015	22	True				
ANR	427247	Statement	)	1955:26:62806:62806	427015	23	True				
ANR	427248	Statement	&&	1955:28:62808:62809	427015	24	True				
ANR	427249	Statement	(	1955:31:62811:62811	427015	25	True				
ANR	427250	Statement	cp	1955:32:62812:62813	427015	26	True				
ANR	427251	Statement	)	1955:34:62814:62814	427015	27	True				
ANR	427252	Statement	->	1955:35:62815:62816	427015	28	True				
ANR	427253	Statement	ctop	1955:37:62817:62820	427015	29	True				
ANR	427254	Statement	-	1955:42:62822:62822	427015	30	True				
ANR	427255	Statement	(	1955:44:62824:62824	427015	31	True				
ANR	427256	Statement	byte	1955:45:62825:62828	427015	32	True				
ANR	427257	Statement	*	1955:50:62830:62830	427015	33	True				
ANR	427258	Statement	)	1955:51:62831:62831	427015	34	True				
ANR	427259	Statement	(	1955:53:62833:62833	427015	35	True				
ANR	427260	Statement	ptr	1955:54:62834:62836	427015	36	True				
ANR	427261	Statement	=	1955:58:62838:62838	427015	37	True				
ANR	427262	Statement	(	1955:60:62840:62840	427015	38	True				
ANR	427263	Statement	obj_header_t	1955:61:62841:62852	427015	39	True				
ANR	427264	Statement	*	1955:74:62854:62854	427015	40	True				
ANR	427265	Statement	)	1955:75:62855:62855	427015	41	True				
ANR	427266	Statement	(	1955:77:62857:62857	427015	42	True				
ANR	427267	Statement	cp	1955:78:62858:62859	427015	43	True				
ANR	427268	Statement	)	1955:80:62860:62860	427015	44	True				
ANR	427269	Statement	->	1955:81:62861:62862	427015	45	True				
ANR	427270	Statement	cbot	1955:83:62863:62866	427015	46	True				
ANR	427271	Statement	)	1955:87:62867:62867	427015	47	True				
ANR	427272	Statement	>	1956:3:62873:62873	427015	48	True				
ANR	427273	Statement	asize	1956:5:62875:62879	427015	49	True				
ANR	427274	Statement	+	1956:11:62881:62881	427015	50	True				
ANR	427275	Statement	sizeof	1956:13:62883:62888	427015	51	True				
ANR	427276	Statement	(	1956:19:62889:62889	427015	52	True				
ANR	427277	Statement	obj_header_t	1956:20:62890:62901	427015	53	True				
ANR	427278	Statement	)	1956:32:62902:62902	427015	54	True				
ANR	427279	Statement	)	1956:33:62903:62903	427015	55	True				
ANR	427280	DoStatement	do		427015	56					
ANR	427281	CompoundStatement		60:11:1844:1844	427015	0					
ANR	427282	IfStatement	if ( CAN_ALLOC_AT_END ( mem -> cc ) )		427015	0					
ANR	427283	Condition	CAN_ALLOC_AT_END ( mem -> cc )	1959:16:62935:62959	427015	0	True				
ANR	427284	CallExpression	CAN_ALLOC_AT_END ( mem -> cc )		427015	0					
ANR	427285	Callee	CAN_ALLOC_AT_END		427015	0					
ANR	427286	Identifier	CAN_ALLOC_AT_END		427015	0					
ANR	427287	ArgumentList	mem -> cc		427015	1					
ANR	427288	Argument	mem -> cc		427015	0					
ANR	427289	PtrMemberAccess	mem -> cc		427015	0					
ANR	427290	Identifier	mem		427015	0					
ANR	427291	Identifier	cc		427015	1					
ANR	427292	CompoundStatement		61:43:1889:1889	427015	1					
ANR	427293	ExpressionStatement	allocate_success = true	1960:16:62980:63003	427015	0	True				
ANR	427294	AssignmentExpression	allocate_success = true		427015	0		=			
ANR	427295	Identifier	allocate_success		427015	0					
ANR	427296	Identifier	true		427015	1					
ANR	427297	BreakStatement	break ;	1961:16:63021:63026	427015	1	True				
ANR	427298	ElseStatement	else		427015	0					
ANR	427299	IfStatement	if ( mem -> is_controlled )		427015	0					
ANR	427300	Condition	mem -> is_controlled	1962:23:63051:63068	427015	0	True				
ANR	427301	PtrMemberAccess	mem -> is_controlled		427015	0					
ANR	427302	Identifier	mem		427015	0					
ANR	427303	Identifier	is_controlled		427015	1					
ANR	427304	CompoundStatement		64:43:1998:1998	427015	1					
ANR	427305	ExpressionStatement	gs_consolidate_free ( ( gs_memory_t * ) mem )	1964:16:63141:63180	427015	0	True				
ANR	427306	CallExpression	gs_consolidate_free ( ( gs_memory_t * ) mem )		427015	0					
ANR	427307	Callee	gs_consolidate_free		427015	0					
ANR	427308	Identifier	gs_consolidate_free		427015	0					
ANR	427309	ArgumentList	( gs_memory_t * ) mem		427015	1					
ANR	427310	Argument	( gs_memory_t * ) mem		427015	0					
ANR	427311	CastExpression	( gs_memory_t * ) mem		427015	0					
ANR	427312	CastTarget	gs_memory_t *		427015	0					
ANR	427313	Identifier	mem		427015	1					
ANR	427314	IfStatement	if ( CAN_ALLOC_AT_END ( mem -> cc ) )		427015	1					
ANR	427315	Condition	CAN_ALLOC_AT_END ( mem -> cc )	1965:20:63202:63226	427015	0	True				
ANR	427316	CallExpression	CAN_ALLOC_AT_END ( mem -> cc )		427015	0					
ANR	427317	Callee	CAN_ALLOC_AT_END		427015	0					
ANR	427318	Identifier	CAN_ALLOC_AT_END		427015	0					
ANR	427319	ArgumentList	mem -> cc		427015	1					
ANR	427320	Argument	mem -> cc		427015	0					
ANR	427321	PtrMemberAccess	mem -> cc		427015	0					
ANR	427322	Identifier	mem		427015	0					
ANR	427323	Identifier	cc		427015	1					
ANR	427324	CompoundStatement		67:47:2156:2156	427015	1					
ANR	427325	ExpressionStatement	allocate_success = true	1966:20:63251:63274	427015	0	True				
ANR	427326	AssignmentExpression	allocate_success = true		427015	0		=			
ANR	427327	Identifier	allocate_success		427015	0					
ANR	427328	Identifier	true		427015	1					
ANR	427329	BreakStatement	break ;	1967:20:63296:63301	427015	1	True				
ANR	427330	ExpressionStatement	cp = clump_splay_walk_fwd ( & sw )	1971:12:63399:63429	427015	1	True				
ANR	427331	AssignmentExpression	cp = clump_splay_walk_fwd ( & sw )		427015	0		=			
ANR	427332	Identifier	cp		427015	0					
ANR	427333	CallExpression	clump_splay_walk_fwd ( & sw )		427015	1					
ANR	427334	Callee	clump_splay_walk_fwd		427015	0					
ANR	427335	Identifier	clump_splay_walk_fwd		427015	0					
ANR	427336	ArgumentList	& sw		427015	1					
ANR	427337	Argument	& sw		427015	0					
ANR	427338	UnaryOperationExpression	& sw		427015	0					
ANR	427339	UnaryOperator	&		427015	0					
ANR	427340	Identifier	sw		427015	1					
ANR	427341	IfStatement	if ( cp == NULL )		427015	2					
ANR	427342	Condition	cp == NULL	1972:16:63447:63456	427015	0	True				
ANR	427343	EqualityExpression	cp == NULL		427015	0		==			
ANR	427344	Identifier	cp		427015	0					
ANR	427345	Identifier	NULL		427015	1					
ANR	427346	BreakStatement	break ;	1973:16:63475:63480	427015	1	True				
ANR	427347	ExpressionStatement	alloc_close_clump ( mem )	1975:12:63495:63517	427015	3	True				
ANR	427348	CallExpression	alloc_close_clump ( mem )		427015	0					
ANR	427349	Callee	alloc_close_clump		427015	0					
ANR	427350	Identifier	alloc_close_clump		427015	0					
ANR	427351	ArgumentList	mem		427015	1					
ANR	427352	Argument	mem		427015	0					
ANR	427353	Identifier	mem		427015	0					
ANR	427354	ExpressionStatement	mem -> cc = cp	1976:12:63531:63543	427015	4	True				
ANR	427355	AssignmentExpression	mem -> cc = cp		427015	0		=			
ANR	427356	PtrMemberAccess	mem -> cc		427015	0					
ANR	427357	Identifier	mem		427015	0					
ANR	427358	Identifier	cc		427015	1					
ANR	427359	Identifier	cp		427015	1					
ANR	427360	ExpressionStatement	alloc_open_clump ( mem )	1977:12:63557:63578	427015	5	True				
ANR	427361	CallExpression	alloc_open_clump ( mem )		427015	0					
ANR	427362	Callee	alloc_open_clump		427015	0					
ANR	427363	Identifier	alloc_open_clump		427015	0					
ANR	427364	ArgumentList	mem		427015	1					
ANR	427365	Argument	mem		427015	0					
ANR	427366	Identifier	mem		427015	0					
ANR	427367	Condition	1	1979:15:63605:63605	427015	1	True				
ANR	427368	PrimaryExpression	1		427015	0					
ANR	427369	IfStatement	if ( ! allocate_success )		427015	57					
ANR	427370	Condition	! allocate_success	1982:12:63661:63677	427015	0	True				
ANR	427371	UnaryOperationExpression	! allocate_success		427015	0					
ANR	427372	UnaryOperator	!		427015	0					
ANR	427373	Identifier	allocate_success		427015	1					
ANR	427374	CompoundStatement		84:31:2607:2607	427015	1					
ANR	427375	IfStatement	if ( ! mem -> is_controlled )		427015	0					
ANR	427376	Condition	! mem -> is_controlled	1988:16:63943:63961	427015	0	True				
ANR	427377	UnaryOperationExpression	! mem -> is_controlled		427015	0					
ANR	427378	UnaryOperator	!		427015	0					
ANR	427379	PtrMemberAccess	mem -> is_controlled		427015	1					
ANR	427380	Identifier	mem		427015	0					
ANR	427381	Identifier	is_controlled		427015	1					
ANR	427382	CompoundStatement		91:16:2946:2957	427015	1					
ANR	427383	IdentifierDeclStatement	clump_t * cp ;	1989:16:64019:64030	427015	0	True				
ANR	427384	IdentifierDecl	* cp		427015	0					
ANR	427385	IdentifierDeclType	clump_t *		427015	0					
ANR	427386	Identifier	cp		427015	1					
ANR	427387	ExpressionStatement	alloc_close_clump ( mem )	1991:16:64049:64071	427015	1	True				
ANR	427388	CallExpression	alloc_close_clump ( mem )		427015	0					
ANR	427389	Callee	alloc_close_clump		427015	0					
ANR	427390	Identifier	alloc_close_clump		427015	0					
ANR	427391	ArgumentList	mem		427015	1					
ANR	427392	Argument	mem		427015	0					
ANR	427393	Identifier	mem		427015	0					
ANR	427394	ForStatement	"for ( cp = clump_splay_walk_init_mid ( & sw , cp_orig ) ; cp != NULL ; cp = clump_splay_walk_fwd ( & sw ) )"		427015	2					
ANR	427395	ForInit	"cp = clump_splay_walk_init_mid ( & sw , cp_orig ) ;"	1992:21:64094:64138	427015	0	True				
ANR	427396	AssignmentExpression	"cp = clump_splay_walk_init_mid ( & sw , cp_orig )"		427015	0		=			
ANR	427397	Identifier	cp		427015	0					
ANR	427398	CallExpression	"clump_splay_walk_init_mid ( & sw , cp_orig )"		427015	1					
ANR	427399	Callee	clump_splay_walk_init_mid		427015	0					
ANR	427400	Identifier	clump_splay_walk_init_mid		427015	0					
ANR	427401	ArgumentList	& sw		427015	1					
ANR	427402	Argument	& sw		427015	0					
ANR	427403	UnaryOperationExpression	& sw		427015	0					
ANR	427404	UnaryOperator	&		427015	0					
ANR	427405	Identifier	sw		427015	1					
ANR	427406	Argument	cp_orig		427015	1					
ANR	427407	Identifier	cp_orig		427015	0					
ANR	427408	Condition	cp != NULL	1992:67:64140:64149	427015	1	True				
ANR	427409	EqualityExpression	cp != NULL		427015	0		!=			
ANR	427410	Identifier	cp		427015	0					
ANR	427411	Identifier	NULL		427015	1					
ANR	427412	AssignmentExpression	cp = clump_splay_walk_fwd ( & sw )	1992:79:64152:64181	427015	2	True	=			
ANR	427413	Identifier	cp		427015	0					
ANR	427414	CallExpression	clump_splay_walk_fwd ( & sw )		427015	1					
ANR	427415	Callee	clump_splay_walk_fwd		427015	0					
ANR	427416	Identifier	clump_splay_walk_fwd		427015	0					
ANR	427417	ArgumentList	& sw		427015	1					
ANR	427418	Argument	& sw		427015	0					
ANR	427419	UnaryOperationExpression	& sw		427015	0					
ANR	427420	UnaryOperator	&		427015	0					
ANR	427421	Identifier	sw		427015	1					
ANR	427422	CompoundStatement		95:16:3127:3127	427015	3					
ANR	427423	ExpressionStatement	"consolidate_clump_free ( cp , mem )"	1994:20:64222:64253	427015	0	True				
ANR	427424	CallExpression	"consolidate_clump_free ( cp , mem )"		427015	0					
ANR	427425	Callee	consolidate_clump_free		427015	0					
ANR	427426	Identifier	consolidate_clump_free		427015	0					
ANR	427427	ArgumentList	cp		427015	1					
ANR	427428	Argument	cp		427015	0					
ANR	427429	Identifier	cp		427015	0					
ANR	427430	Argument	mem		427015	1					
ANR	427431	Identifier	mem		427015	0					
ANR	427432	IfStatement	if ( CAN_ALLOC_AT_END ( cp ) )		427015	1					
ANR	427433	Condition	CAN_ALLOC_AT_END ( cp )	1995:24:64279:64298	427015	0	True				
ANR	427434	CallExpression	CAN_ALLOC_AT_END ( cp )		427015	0					
ANR	427435	Callee	CAN_ALLOC_AT_END		427015	0					
ANR	427436	Identifier	CAN_ALLOC_AT_END		427015	0					
ANR	427437	ArgumentList	cp		427015	1					
ANR	427438	Argument	cp		427015	0					
ANR	427439	Identifier	cp		427015	0					
ANR	427440	CompoundStatement		97:46:3228:3228	427015	1					
ANR	427441	ExpressionStatement	mem -> cc = cp	1996:24:64327:64339	427015	0	True				
ANR	427442	AssignmentExpression	mem -> cc = cp		427015	0		=			
ANR	427443	PtrMemberAccess	mem -> cc		427015	0					
ANR	427444	Identifier	mem		427015	0					
ANR	427445	Identifier	cc		427015	1					
ANR	427446	Identifier	cp		427015	1					
ANR	427447	ExpressionStatement	alloc_open_clump ( mem )	1997:24:64365:64386	427015	1	True				
ANR	427448	CallExpression	alloc_open_clump ( mem )		427015	0					
ANR	427449	Callee	alloc_open_clump		427015	0					
ANR	427450	Identifier	alloc_open_clump		427015	0					
ANR	427451	ArgumentList	mem		427015	1					
ANR	427452	Argument	mem		427015	0					
ANR	427453	Identifier	mem		427015	0					
ANR	427454	ExpressionStatement	allocate_success = true	1998:24:64412:64435	427015	2	True				
ANR	427455	AssignmentExpression	allocate_success = true		427015	0		=			
ANR	427456	Identifier	allocate_success		427015	0					
ANR	427457	Identifier	true		427015	1					
ANR	427458	BreakStatement	break ;	1999:24:64461:64466	427015	3	True				
ANR	427459	Statement	undef	2006:1:64541:64545	427015	58	True				
ANR	427460	Statement	CAN_ALLOC_AT_END	2006:7:64547:64562	427015	59	True				
ANR	427461	IfStatement	if ( ! allocate_success )		427015	60					
ANR	427462	Condition	! allocate_success	2008:12:64577:64593	427015	0	True				
ANR	427463	UnaryOperationExpression	! allocate_success		427015	0					
ANR	427464	UnaryOperator	!		427015	0					
ANR	427465	Identifier	allocate_success		427015	1					
ANR	427466	CompoundStatement		112:12:3574:3657	427015	1					
ANR	427467	IdentifierDeclStatement	"clump_t * cp = alloc_add_clump ( mem , ( ulong ) mem -> clump_size , ""clump"" ) ;"	2010:12:64647:64730	427015	0	True				
ANR	427468	IdentifierDecl	"* cp = alloc_add_clump ( mem , ( ulong ) mem -> clump_size , ""clump"" )"		427015	0					
ANR	427469	IdentifierDeclType	clump_t *		427015	0					
ANR	427470	Identifier	cp		427015	1					
ANR	427471	AssignmentExpression	"* cp = alloc_add_clump ( mem , ( ulong ) mem -> clump_size , ""clump"" )"		427015	2		=			
ANR	427472	Identifier	cp		427015	0					
ANR	427473	CallExpression	"alloc_add_clump ( mem , ( ulong ) mem -> clump_size , ""clump"" )"		427015	1					
ANR	427474	Callee	alloc_add_clump		427015	0					
ANR	427475	Identifier	alloc_add_clump		427015	0					
ANR	427476	ArgumentList	mem		427015	1					
ANR	427477	Argument	mem		427015	0					
ANR	427478	Identifier	mem		427015	0					
ANR	427479	Argument	( ulong ) mem -> clump_size		427015	1					
ANR	427480	CastExpression	( ulong ) mem -> clump_size		427015	0					
ANR	427481	CastTarget	ulong		427015	0					
ANR	427482	PtrMemberAccess	mem -> clump_size		427015	1					
ANR	427483	Identifier	mem		427015	0					
ANR	427484	Identifier	clump_size		427015	1					
ANR	427485	Argument	"""clump"""		427015	2					
ANR	427486	PrimaryExpression	"""clump"""		427015	0					
ANR	427487	IfStatement	if ( cp )		427015	1					
ANR	427488	Condition	cp	2013:16:64749:64750	427015	0	True				
ANR	427489	Identifier	cp		427015	0					
ANR	427490	CompoundStatement		115:20:3680:3680	427015	1					
ANR	427491	ExpressionStatement	ptr = ( obj_header_t * ) cp -> cbot	2015:16:64807:64837	427015	0	True				
ANR	427492	AssignmentExpression	ptr = ( obj_header_t * ) cp -> cbot		427015	0		=			
ANR	427493	Identifier	ptr		427015	0					
ANR	427494	CastExpression	( obj_header_t * ) cp -> cbot		427015	1					
ANR	427495	CastTarget	obj_header_t *		427015	0					
ANR	427496	PtrMemberAccess	cp -> cbot		427015	1					
ANR	427497	Identifier	cp		427015	0					
ANR	427498	Identifier	cbot		427015	1					
ANR	427499	ExpressionStatement	allocate_success = true	2016:16:64855:64878	427015	1	True				
ANR	427500	AssignmentExpression	allocate_success = true		427015	0		=			
ANR	427501	Identifier	allocate_success		427015	0					
ANR	427502	Identifier	true		427015	1					
ANR	427503	IfStatement	if ( allocate_success )		427015	61					
ANR	427504	Condition	allocate_success	2026:12:65207:65222	427015	0	True				
ANR	427505	Identifier	allocate_success		427015	0					
ANR	427506	ExpressionStatement	mem -> cc -> cbot = ( byte * ) ptr + asize	2027:12:65237:65273	427015	1	True				
ANR	427507	AssignmentExpression	mem -> cc -> cbot = ( byte * ) ptr + asize		427015	0		=			
ANR	427508	PtrMemberAccess	mem -> cc -> cbot		427015	0					
ANR	427509	PtrMemberAccess	mem -> cc		427015	0					
ANR	427510	Identifier	mem		427015	0					
ANR	427511	Identifier	cc		427015	1					
ANR	427512	Identifier	cbot		427015	1					
ANR	427513	AdditiveExpression	( byte * ) ptr + asize		427015	1		+			
ANR	427514	CastExpression	( byte * ) ptr		427015	0					
ANR	427515	CastTarget	byte *		427015	0					
ANR	427516	Identifier	ptr		427015	1					
ANR	427517	Identifier	asize		427015	1					
ANR	427518	ElseStatement	else		427015	0					
ANR	427519	IfStatement	"if ( ! mem -> is_controlled || ( ptr = scavenge_low_free ( mem , ( uint ) lsize ) ) == 0 )"		427015	0					
ANR	427520	Condition	"! mem -> is_controlled || ( ptr = scavenge_low_free ( mem , ( uint ) lsize ) ) == 0"	2028:17:65292:65379	427015	0	True				
ANR	427521	OrExpression	"! mem -> is_controlled || ( ptr = scavenge_low_free ( mem , ( uint ) lsize ) ) == 0"		427015	0		||			
ANR	427522	UnaryOperationExpression	! mem -> is_controlled		427015	0					
ANR	427523	UnaryOperator	!		427015	0					
ANR	427524	PtrMemberAccess	mem -> is_controlled		427015	1					
ANR	427525	Identifier	mem		427015	0					
ANR	427526	Identifier	is_controlled		427015	1					
ANR	427527	EqualityExpression	"( ptr = scavenge_low_free ( mem , ( uint ) lsize ) ) == 0"		427015	1		==			
ANR	427528	AssignmentExpression	"ptr = scavenge_low_free ( mem , ( uint ) lsize )"		427015	0		=			
ANR	427529	Identifier	ptr		427015	0					
ANR	427530	CallExpression	"scavenge_low_free ( mem , ( uint ) lsize )"		427015	1					
ANR	427531	Callee	scavenge_low_free		427015	0					
ANR	427532	Identifier	scavenge_low_free		427015	0					
ANR	427533	ArgumentList	mem		427015	1					
ANR	427534	Argument	mem		427015	0					
ANR	427535	Identifier	mem		427015	0					
ANR	427536	Argument	( uint ) lsize		427015	1					
ANR	427537	CastExpression	( uint ) lsize		427015	0					
ANR	427538	CastTarget	uint		427015	0					
ANR	427539	Identifier	lsize		427015	1					
ANR	427540	PrimaryExpression	0		427015	1					
ANR	427541	ReturnStatement	return 0 ;	2030:12:65394:65402	427015	1	True				
ANR	427542	PrimaryExpression	0		427015	0					
ANR	427543	ExpressionStatement	ptr -> o_pad = 0	2031:8:65436:65450	427015	62	True				
ANR	427544	AssignmentExpression	ptr -> o_pad = 0		427015	0		=			
ANR	427545	PtrMemberAccess	ptr -> o_pad		427015	0					
ANR	427546	Identifier	ptr		427015	0					
ANR	427547	Identifier	o_pad		427015	1					
ANR	427548	PrimaryExpression	0		427015	1					
ANR	427549	ExpressionStatement	ptr -> o_alone = 0	2032:8:65460:65476	427015	63	True				
ANR	427550	AssignmentExpression	ptr -> o_alone = 0		427015	0		=			
ANR	427551	PtrMemberAccess	ptr -> o_alone		427015	0					
ANR	427552	Identifier	ptr		427015	0					
ANR	427553	Identifier	o_alone		427015	1					
ANR	427554	PrimaryExpression	0		427015	1					
ANR	427555	ExpressionStatement	ptr -> o_size = ( uint ) lsize	2033:8:65486:65512	427015	64	True				
ANR	427556	AssignmentExpression	ptr -> o_size = ( uint ) lsize		427015	0		=			
ANR	427557	PtrMemberAccess	ptr -> o_size		427015	0					
ANR	427558	Identifier	ptr		427015	0					
ANR	427559	Identifier	o_size		427015	1					
ANR	427560	CastExpression	( uint ) lsize		427015	1					
ANR	427561	CastTarget	uint		427015	0					
ANR	427562	Identifier	lsize		427015	1					
ANR	427563	Label	done :	2035:0:65520:65524	427015	2	True				
ANR	427564	Identifier	done		427015	0					
ANR	427565	ExpressionStatement	ptr -> o_type = pstype	2036:4:65530:65550	427015	3	True				
ANR	427566	AssignmentExpression	ptr -> o_type = pstype		427015	0		=			
ANR	427567	PtrMemberAccess	ptr -> o_type		427015	0					
ANR	427568	Identifier	ptr		427015	0					
ANR	427569	Identifier	o_type		427015	1					
ANR	427570	Identifier	pstype		427015	1					
ANR	427571	Statement	if	2037:4:65556:65557	427015	4	True				
ANR	427572	Statement	IGC_PTR_STABILITY_CHECK	2037:7:65559:65581	427015	5	True				
ANR	427573	ExpressionStatement	ptr -> d . o . space_id = mem -> space_id	2038:8:65591:65624	427015	6	True				
ANR	427574	AssignmentExpression	ptr -> d . o . space_id = mem -> space_id		427015	0		=			
ANR	427575	MemberAccess	ptr -> d . o . space_id		427015	0					
ANR	427576	MemberAccess	ptr -> d . o		427015	0					
ANR	427577	PtrMemberAccess	ptr -> d		427015	0					
ANR	427578	Identifier	ptr		427015	0					
ANR	427579	Identifier	d		427015	1					
ANR	427580	Identifier	o		427015	1					
ANR	427581	Identifier	space_id		427015	1					
ANR	427582	PtrMemberAccess	mem -> space_id		427015	1					
ANR	427583	Identifier	mem		427015	0					
ANR	427584	Identifier	space_id		427015	1					
ANR	427585	Statement	endif	2039:4:65630:65634	427015	7	True				
ANR	427586	ExpressionStatement	ptr ++	2040:4:65640:65645	427015	8	True				
ANR	427587	PostIncDecOperationExpression	ptr ++		427015	0					
ANR	427588	Identifier	ptr		427015	0					
ANR	427589	IncDec	++		427015	1					
ANR	427590	ExpressionStatement	ASSIGN_HDR_ID ( ptr )	2041:4:65651:65669	427015	9	True				
ANR	427591	CallExpression	ASSIGN_HDR_ID ( ptr )		427015	0					
ANR	427592	Callee	ASSIGN_HDR_ID		427015	0					
ANR	427593	Identifier	ASSIGN_HDR_ID		427015	0					
ANR	427594	ArgumentList	ptr		427015	1					
ANR	427595	Argument	ptr		427015	0					
ANR	427596	Identifier	ptr		427015	0					
ANR	427597	ExpressionStatement	"gs_alloc_fill ( ptr , gs_alloc_fill_alloc , lsize )"	2042:4:65675:65721	427015	10	True				
ANR	427598	CallExpression	"gs_alloc_fill ( ptr , gs_alloc_fill_alloc , lsize )"		427015	0					
ANR	427599	Callee	gs_alloc_fill		427015	0					
ANR	427600	Identifier	gs_alloc_fill		427015	0					
ANR	427601	ArgumentList	ptr		427015	1					
ANR	427602	Argument	ptr		427015	0					
ANR	427603	Identifier	ptr		427015	0					
ANR	427604	Argument	gs_alloc_fill_alloc		427015	1					
ANR	427605	Identifier	gs_alloc_fill_alloc		427015	0					
ANR	427606	Argument	lsize		427015	2					
ANR	427607	Identifier	lsize		427015	0					
ANR	427608	ReturnStatement	return ptr ;	2043:4:65727:65737	427015	11	True				
ANR	427609	Identifier	ptr		427015	0					
ANR	427610	ReturnType	static obj_header_t *		427015	1					
ANR	427611	Identifier	alloc_obj		427015	2					
ANR	427612	ParameterList	"gs_ref_memory_t * mem , ulong lsize , gs_memory_type_ptr_t pstype , alloc_flags_t flags , client_name_t cname"		427015	3					
ANR	427613	Parameter	gs_ref_memory_t * mem	1897:10:60956:60975	427015	0	True				
ANR	427614	ParameterType	gs_ref_memory_t *		427015	0					
ANR	427615	Identifier	mem		427015	1					
ANR	427616	Parameter	ulong lsize	1897:32:60978:60988	427015	1	True				
ANR	427617	ParameterType	ulong		427015	0					
ANR	427618	Identifier	lsize		427015	1					
ANR	427619	Parameter	gs_memory_type_ptr_t pstype	1897:45:60991:61017	427015	2	True				
ANR	427620	ParameterType	gs_memory_type_ptr_t		427015	0					
ANR	427621	Identifier	pstype		427015	1					
ANR	427622	Parameter	alloc_flags_t flags	1898:10:61030:61048	427015	3	True				
ANR	427623	ParameterType	alloc_flags_t		427015	0					
ANR	427624	Identifier	flags		427015	1					
ANR	427625	Parameter	client_name_t cname	1898:31:61051:61069	427015	4	True				
ANR	427626	ParameterType	client_name_t		427015	0					
ANR	427627	Identifier	cname		427015	1					
ANR	427628	CFGEntryNode	ENTRY		427015		True				
ANR	427629	CFGExitNode	EXIT		427015		True				
ANR	427630	Symbol	ALLOC_IMMOVABLE		427015						
ANR	427631	Symbol	mem -> large_size		427015						
ANR	427632	Symbol	& sw		427015						
ANR	427633	Symbol	ptr -> d		427015						
ANR	427634	Symbol	obj_size_round		427015						
ANR	427635	Symbol	pstype		427015						
ANR	427636	Symbol	large_freelist_alloc		427015						
ANR	427637	Symbol	mem -> cc		427015						
ANR	427638	Symbol	clump_splay_walk_init		427015						
ANR	427639	Symbol	* ptr		427015						
ANR	427640	Symbol	ptr -> d . o		427015						
ANR	427641	Symbol	allocate_success		427015						
ANR	427642	Symbol	obj_align_mod		427015						
ANR	427643	Symbol	mem -> is_controlled		427015						
ANR	427644	Symbol	NULL		427015						
ANR	427645	Symbol	* * mem		427015						
ANR	427646	Symbol	ALLOC_DIRECT		427015						
ANR	427647	Symbol	ptr -> o_type		427015						
ANR	427648	Symbol	* cp		427015						
ANR	427649	Symbol	max_freelist_size		427015						
ANR	427650	Symbol	gs_alloc_fill_alloc		427015						
ANR	427651	Symbol	true		427015						
ANR	427652	Symbol	ptr -> o_alone		427015						
ANR	427653	Symbol	obj_align_mask		427015						
ANR	427654	Symbol	* mem		427015						
ANR	427655	Symbol	cp_orig		427015						
ANR	427656	Symbol	scavenge_low_free		427015						
ANR	427657	Symbol	mem -> space_id		427015						
ANR	427658	Symbol	flags		427015						
ANR	427659	Symbol	cname		427015						
ANR	427660	Symbol	* mem -> cc		427015						
ANR	427661	Symbol	lsize		427015						
ANR	427662	Symbol	clump_splay_walk_init_mid		427015						
ANR	427663	Symbol	ptr -> o_pad		427015						
ANR	427664	Symbol	cp -> cbot		427015						
ANR	427665	Symbol	mem		427015						
ANR	427666	Symbol	mem -> clump_size		427015						
ANR	427667	Symbol	CAN_ALLOC_AT_END		427015						
ANR	427668	Symbol	sw		427015						
ANR	427669	Symbol	ptr -> o_size		427015						
ANR	427670	Symbol	clump_splay_walk_fwd		427015						
ANR	427671	Symbol	false		427015						
ANR	427672	Symbol	cp -> c_alone		427015						
ANR	427673	Symbol	alloc_acquire_clump		427015						
ANR	427674	Symbol	cp		427015						
ANR	427675	Symbol	asize		427015						
ANR	427676	Symbol	ptr		427015						
ANR	427677	Symbol	alloc_add_clump		427015						
ANR	427678	Symbol	ptr -> d . o . space_id		427015						
ANR	427679	Symbol	mem -> cc -> cbot		427015						
ANR	427680	Function	consolidate_clump_free	2051:0:65908:66952							
ANR	427681	FunctionDef	"consolidate_clump_free (clump_t * cp , gs_ref_memory_t * mem)"		427680	0					
ANR	427682	CompoundStatement		2053:0:65978:66952	427680	0					
ANR	427683	IdentifierDeclStatement	obj_header_t * begin_free = 0 ;	2054:4:65984:66012	427680	0	True				
ANR	427684	IdentifierDecl	* begin_free = 0		427680	0					
ANR	427685	IdentifierDeclType	obj_header_t *		427680	0					
ANR	427686	Identifier	begin_free		427680	1					
ANR	427687	AssignmentExpression	* begin_free = 0		427680	2		=			
ANR	427688	Identifier	begin_free		427680	0					
ANR	427689	PrimaryExpression	0		427680	1					
ANR	427690	ExpressionStatement	cp -> int_freed_top = cp -> cbase	2056:4:66019:66048	427680	1	True				
ANR	427691	AssignmentExpression	cp -> int_freed_top = cp -> cbase		427680	0		=			
ANR	427692	PtrMemberAccess	cp -> int_freed_top		427680	0					
ANR	427693	Identifier	cp		427680	0					
ANR	427694	Identifier	int_freed_top		427680	1					
ANR	427695	PtrMemberAccess	cp -> cbase		427680	1					
ANR	427696	Identifier	cp		427680	0					
ANR	427697	Identifier	cbase		427680	1					
ANR	427698	Statement	SCAN_CLUMP_OBJECTS	2057:4:66087:66104	427680	2	True				
ANR	427699	Statement	(	2057:22:66105:66105	427680	3	True				
ANR	427700	Statement	cp	2057:23:66106:66107	427680	4	True				
ANR	427701	Statement	)	2057:25:66108:66108	427680	5	True				
ANR	427702	Statement	DO_ALL	2058:4:66114:66119	427680	6	True				
ANR	427703	IfStatement	if ( pre -> o_type == & st_free )		427680	7					
ANR	427704	Condition	pre -> o_type == & st_free	2059:12:66133:66155	427680	0	True				
ANR	427705	EqualityExpression	pre -> o_type == & st_free		427680	0		==			
ANR	427706	PtrMemberAccess	pre -> o_type		427680	0					
ANR	427707	Identifier	pre		427680	0					
ANR	427708	Identifier	o_type		427680	1					
ANR	427709	UnaryOperationExpression	& st_free		427680	1					
ANR	427710	UnaryOperator	&		427680	0					
ANR	427711	Identifier	st_free		427680	1					
ANR	427712	CompoundStatement		7:37:179:179	427680	1					
ANR	427713	IfStatement	if ( begin_free == 0 )		427680	0					
ANR	427714	Condition	begin_free == 0	2060:16:66176:66190	427680	0	True				
ANR	427715	EqualityExpression	begin_free == 0		427680	0		==			
ANR	427716	Identifier	begin_free		427680	0					
ANR	427717	PrimaryExpression	0		427680	1					
ANR	427718	ExpressionStatement	begin_free = pre	2061:16:66209:66225	427680	1	True				
ANR	427719	AssignmentExpression	begin_free = pre		427680	0		=			
ANR	427720	Identifier	begin_free		427680	0					
ANR	427721	Identifier	pre		427680	1					
ANR	427722	ElseStatement	else		427680	0					
ANR	427723	CompoundStatement		10:15:263:263	427680	0					
ANR	427724	IfStatement	if ( begin_free )		427680	0					
ANR	427725	Condition	begin_free	2063:16:66260:66269	427680	0	True				
ANR	427726	Identifier	begin_free		427680	0					
ANR	427727	ExpressionStatement	cp -> int_freed_top = ( byte * ) pre	2064:16:66288:66319	427680	1	True				
ANR	427728	AssignmentExpression	cp -> int_freed_top = ( byte * ) pre		427680	0		=			
ANR	427729	PtrMemberAccess	cp -> int_freed_top		427680	0					
ANR	427730	Identifier	cp		427680	0					
ANR	427731	Identifier	int_freed_top		427680	1					
ANR	427732	CastExpression	( byte * ) pre		427680	1					
ANR	427733	CastTarget	byte *		427680	0					
ANR	427734	Identifier	pre		427680	1					
ANR	427735	ExpressionStatement	begin_free = 0	2065:12:66374:66388	427680	1	True				
ANR	427736	AssignmentExpression	begin_free = 0		427680	0		=			
ANR	427737	Identifier	begin_free		427680	0					
ANR	427738	PrimaryExpression	0		427680	1					
ANR	427739	Statement	END_OBJECTS_SCAN	2067:4:66404:66419	427680	8	True				
ANR	427740	IfStatement	if ( begin_free )		427680	9					
ANR	427741	Condition	begin_free	2068:8:66429:66438	427680	0	True				
ANR	427742	Identifier	begin_free		427680	0					
ANR	427743	CompoundStatement		16:20:462:462	427680	1					
ANR	427744	ExpressionStatement	"remove_range_from_freelist ( mem , begin_free , cp -> cbot )"	2071:8:66576:66629	427680	0	True				
ANR	427745	CallExpression	"remove_range_from_freelist ( mem , begin_free , cp -> cbot )"		427680	0					
ANR	427746	Callee	remove_range_from_freelist		427680	0					
ANR	427747	Identifier	remove_range_from_freelist		427680	0					
ANR	427748	ArgumentList	mem		427680	1					
ANR	427749	Argument	mem		427680	0					
ANR	427750	Identifier	mem		427680	0					
ANR	427751	Argument	begin_free		427680	1					
ANR	427752	Identifier	begin_free		427680	0					
ANR	427753	Argument	cp -> cbot		427680	2					
ANR	427754	PtrMemberAccess	cp -> cbot		427680	0					
ANR	427755	Identifier	cp		427680	0					
ANR	427756	Identifier	cbot		427680	1					
ANR	427757	ExpressionStatement	"if_debug4m ( 'a' , ( const gs_memory_t * ) mem , ""[a]resetting clump 0x%lx cbot from 0x%lx to 0x%lx (%lu free)\\n"" , ( ulong ) cp , ( ulong ) cp -> cbot , ( ulong ) begin_free , ( ulong ) ( ( byte * ) cp -> cbot - ( byte * ) begin_free ) )"	2072:8:66639:66904	427680	1	True				
ANR	427758	CallExpression	"if_debug4m ( 'a' , ( const gs_memory_t * ) mem , ""[a]resetting clump 0x%lx cbot from 0x%lx to 0x%lx (%lu free)\\n"" , ( ulong ) cp , ( ulong ) cp -> cbot , ( ulong ) begin_free , ( ulong ) ( ( byte * ) cp -> cbot - ( byte * ) begin_free ) )"		427680	0					
ANR	427759	Callee	if_debug4m		427680	0					
ANR	427760	Identifier	if_debug4m		427680	0					
ANR	427761	ArgumentList	'a'		427680	1					
ANR	427762	Argument	'a'		427680	0					
ANR	427763	PrimaryExpression	'a'		427680	0					
ANR	427764	Argument	( const gs_memory_t * ) mem		427680	1					
ANR	427765	CastExpression	( const gs_memory_t * ) mem		427680	0					
ANR	427766	CastTarget	const gs_memory_t *		427680	0					
ANR	427767	Identifier	mem		427680	1					
ANR	427768	Argument	"""[a]resetting clump 0x%lx cbot from 0x%lx to 0x%lx (%lu free)\\n"""		427680	2					
ANR	427769	PrimaryExpression	"""[a]resetting clump 0x%lx cbot from 0x%lx to 0x%lx (%lu free)\\n"""		427680	0					
ANR	427770	Argument	( ulong ) cp		427680	3					
ANR	427771	CastExpression	( ulong ) cp		427680	0					
ANR	427772	CastTarget	ulong		427680	0					
ANR	427773	Identifier	cp		427680	1					
ANR	427774	Argument	( ulong ) cp -> cbot		427680	4					
ANR	427775	CastExpression	( ulong ) cp -> cbot		427680	0					
ANR	427776	CastTarget	ulong		427680	0					
ANR	427777	PtrMemberAccess	cp -> cbot		427680	1					
ANR	427778	Identifier	cp		427680	0					
ANR	427779	Identifier	cbot		427680	1					
ANR	427780	Argument	( ulong ) begin_free		427680	5					
ANR	427781	CastExpression	( ulong ) begin_free		427680	0					
ANR	427782	CastTarget	ulong		427680	0					
ANR	427783	Identifier	begin_free		427680	1					
ANR	427784	Argument	( ulong ) ( ( byte * ) cp -> cbot - ( byte * ) begin_free )		427680	6					
ANR	427785	CastExpression	( ulong ) ( ( byte * ) cp -> cbot - ( byte * ) begin_free )		427680	0					
ANR	427786	CastTarget	ulong		427680	0					
ANR	427787	AdditiveExpression	( byte * ) cp -> cbot - ( byte * ) begin_free		427680	1		-			
ANR	427788	CastExpression	( byte * ) cp -> cbot		427680	0					
ANR	427789	CastTarget	byte *		427680	0					
ANR	427790	PtrMemberAccess	cp -> cbot		427680	1					
ANR	427791	Identifier	cp		427680	0					
ANR	427792	Identifier	cbot		427680	1					
ANR	427793	CastExpression	( byte * ) begin_free		427680	1					
ANR	427794	CastTarget	byte *		427680	0					
ANR	427795	Identifier	begin_free		427680	1					
ANR	427796	ExpressionStatement	cp -> cbot = ( byte * ) begin_free	2076:8:66914:66944	427680	2	True				
ANR	427797	AssignmentExpression	cp -> cbot = ( byte * ) begin_free		427680	0		=			
ANR	427798	PtrMemberAccess	cp -> cbot		427680	0					
ANR	427799	Identifier	cp		427680	0					
ANR	427800	Identifier	cbot		427680	1					
ANR	427801	CastExpression	( byte * ) begin_free		427680	1					
ANR	427802	CastTarget	byte *		427680	0					
ANR	427803	Identifier	begin_free		427680	1					
ANR	427804	ReturnType	static void		427680	1					
ANR	427805	Identifier	consolidate_clump_free		427680	2					
ANR	427806	ParameterList	"clump_t * cp , gs_ref_memory_t * mem"		427680	3					
ANR	427807	Parameter	clump_t * cp	2052:23:65943:65953	427680	0	True				
ANR	427808	ParameterType	clump_t *		427680	0					
ANR	427809	Identifier	cp		427680	1					
ANR	427810	Parameter	gs_ref_memory_t * mem	2052:36:65956:65975	427680	1	True				
ANR	427811	ParameterType	gs_ref_memory_t *		427680	0					
ANR	427812	Identifier	mem		427680	1					
ANR	427813	CFGEntryNode	ENTRY		427680		True				
ANR	427814	CFGExitNode	EXIT		427680		True				
ANR	427815	Symbol	* cp		427680						
ANR	427816	Symbol	pre		427680						
ANR	427817	Symbol	cp -> cbot		427680						
ANR	427818	Symbol	mem		427680						
ANR	427819	Symbol	begin_free		427680						
ANR	427820	Symbol	pre -> o_type		427680						
ANR	427821	Symbol	& st_free		427680						
ANR	427822	Symbol	cp -> cbase		427680						
ANR	427823	Symbol	cp		427680						
ANR	427824	Symbol	cp -> int_freed_top		427680						
ANR	427825	Symbol	* pre		427680						
ANR	427826	Function	consolidate	2080:0:66955:67392							
ANR	427827	FunctionDef	"consolidate (clump_t * cp , void * arg)"		427826	0					
ANR	427828	CompoundStatement		2082:0:67017:67392	427826	0					
ANR	427829	IdentifierDeclStatement	gs_ref_memory_t * mem = ( gs_ref_memory_t * ) arg ;	2083:4:67023:67068	427826	0	True				
ANR	427830	IdentifierDecl	* mem = ( gs_ref_memory_t * ) arg		427826	0					
ANR	427831	IdentifierDeclType	gs_ref_memory_t *		427826	0					
ANR	427832	Identifier	mem		427826	1					
ANR	427833	AssignmentExpression	* mem = ( gs_ref_memory_t * ) arg		427826	2		=			
ANR	427834	Identifier	mem		427826	0					
ANR	427835	CastExpression	( gs_ref_memory_t * ) arg		427826	1					
ANR	427836	CastTarget	gs_ref_memory_t *		427826	0					
ANR	427837	Identifier	arg		427826	1					
ANR	427838	ExpressionStatement	"consolidate_clump_free ( cp , mem )"	2085:4:67075:67106	427826	1	True				
ANR	427839	CallExpression	"consolidate_clump_free ( cp , mem )"		427826	0					
ANR	427840	Callee	consolidate_clump_free		427826	0					
ANR	427841	Identifier	consolidate_clump_free		427826	0					
ANR	427842	ArgumentList	cp		427826	1					
ANR	427843	Argument	cp		427826	0					
ANR	427844	Identifier	cp		427826	0					
ANR	427845	Argument	mem		427826	1					
ANR	427846	Identifier	mem		427826	0					
ANR	427847	IfStatement	if ( cp -> cbot == cp -> cbase && cp -> ctop == cp -> climit )		427826	2					
ANR	427848	Condition	cp -> cbot == cp -> cbase && cp -> ctop == cp -> climit	2086:8:67116:67162	427826	0	True				
ANR	427849	AndExpression	cp -> cbot == cp -> cbase && cp -> ctop == cp -> climit		427826	0		&&			
ANR	427850	EqualityExpression	cp -> cbot == cp -> cbase		427826	0		==			
ANR	427851	PtrMemberAccess	cp -> cbot		427826	0					
ANR	427852	Identifier	cp		427826	0					
ANR	427853	Identifier	cbot		427826	1					
ANR	427854	PtrMemberAccess	cp -> cbase		427826	1					
ANR	427855	Identifier	cp		427826	0					
ANR	427856	Identifier	cbase		427826	1					
ANR	427857	EqualityExpression	cp -> ctop == cp -> climit		427826	1		==			
ANR	427858	PtrMemberAccess	cp -> ctop		427826	0					
ANR	427859	Identifier	cp		427826	0					
ANR	427860	Identifier	ctop		427826	1					
ANR	427861	PtrMemberAccess	cp -> climit		427826	1					
ANR	427862	Identifier	cp		427826	0					
ANR	427863	Identifier	climit		427826	1					
ANR	427864	CompoundStatement		5:57:147:147	427826	1					
ANR	427865	IfStatement	if ( ! mem -> is_controlled )		427826	0					
ANR	427866	Condition	! mem -> is_controlled	2088:12:67219:67237	427826	0	True				
ANR	427867	UnaryOperationExpression	! mem -> is_controlled		427826	0					
ANR	427868	UnaryOperator	!		427826	0					
ANR	427869	PtrMemberAccess	mem -> is_controlled		427826	1					
ANR	427870	Identifier	mem		427826	0					
ANR	427871	Identifier	is_controlled		427826	1					
ANR	427872	CompoundStatement		7:33:222:222	427826	1					
ANR	427873	ExpressionStatement	"alloc_free_clump ( cp , mem )"	2089:12:67254:67279	427826	0	True				
ANR	427874	CallExpression	"alloc_free_clump ( cp , mem )"		427826	0					
ANR	427875	Callee	alloc_free_clump		427826	0					
ANR	427876	Identifier	alloc_free_clump		427826	0					
ANR	427877	ArgumentList	cp		427826	1					
ANR	427878	Argument	cp		427826	0					
ANR	427879	Identifier	cp		427826	0					
ANR	427880	Argument	mem		427826	1					
ANR	427881	Identifier	mem		427826	0					
ANR	427882	IfStatement	if ( mem -> cc == cp )		427826	1					
ANR	427883	Condition	mem -> cc == cp	2090:16:67297:67309	427826	0	True				
ANR	427884	EqualityExpression	mem -> cc == cp		427826	0		==			
ANR	427885	PtrMemberAccess	mem -> cc		427826	0					
ANR	427886	Identifier	mem		427826	0					
ANR	427887	Identifier	cc		427826	1					
ANR	427888	Identifier	cp		427826	1					
ANR	427889	ExpressionStatement	mem -> cc = NULL	2091:16:67328:67342	427826	1	True				
ANR	427890	AssignmentExpression	mem -> cc = NULL		427826	0		=			
ANR	427891	PtrMemberAccess	mem -> cc		427826	0					
ANR	427892	Identifier	mem		427826	0					
ANR	427893	Identifier	cc		427826	1					
ANR	427894	Identifier	NULL		427826	1					
ANR	427895	ReturnStatement	return SPLAY_APP_CONTINUE ;	2095:4:67365:67390	427826	3	True				
ANR	427896	Identifier	SPLAY_APP_CONTINUE		427826	0					
ANR	427897	ReturnType	static splay_app_result_t		427826	1					
ANR	427898	Identifier	consolidate		427826	2					
ANR	427899	ParameterList	"clump_t * cp , void * arg"		427826	3					
ANR	427900	Parameter	clump_t * cp	2081:12:66993:67003	427826	0	True				
ANR	427901	ParameterType	clump_t *		427826	0					
ANR	427902	Identifier	cp		427826	1					
ANR	427903	Parameter	void * arg	2081:25:67006:67014	427826	1	True				
ANR	427904	ParameterType	void *		427826	0					
ANR	427905	Identifier	arg		427826	1					
ANR	427906	CFGEntryNode	ENTRY		427826		True				
ANR	427907	CFGExitNode	EXIT		427826		True				
ANR	427908	Symbol	NULL		427826						
ANR	427909	Symbol	cp -> cbase		427826						
ANR	427910	Symbol	cp		427826						
ANR	427911	Symbol	cp -> climit		427826						
ANR	427912	Symbol	* cp		427826						
ANR	427913	Symbol	cp -> cbot		427826						
ANR	427914	Symbol	mem		427826						
ANR	427915	Symbol	arg		427826						
ANR	427916	Symbol	mem -> cc		427826						
ANR	427917	Symbol	cp -> ctop		427826						
ANR	427918	Symbol	mem -> is_controlled		427826						
ANR	427919	Symbol	* mem		427826						
ANR	427920	Symbol	SPLAY_APP_CONTINUE		427826						
ANR	427921	Function	ialloc_consolidate_free	2099:0:67427:68043							
ANR	427922	FunctionDef	ialloc_consolidate_free (gs_ref_memory_t * mem)		427921	0					
ANR	427923	CompoundStatement		2101:0:67478:68043	427921	0					
ANR	427924	ExpressionStatement	alloc_close_clump ( mem )	2102:4:67484:67506	427921	0	True				
ANR	427925	CallExpression	alloc_close_clump ( mem )		427921	0					
ANR	427926	Callee	alloc_close_clump		427921	0					
ANR	427927	Identifier	alloc_close_clump		427921	0					
ANR	427928	ArgumentList	mem		427921	1					
ANR	427929	Argument	mem		427921	0					
ANR	427930	Identifier	mem		427921	0					
ANR	427931	ExpressionStatement	"clump_splay_app ( mem -> root , mem , consolidate , mem )"	2108:4:67758:67807	427921	1	True				
ANR	427932	CallExpression	"clump_splay_app ( mem -> root , mem , consolidate , mem )"		427921	0					
ANR	427933	Callee	clump_splay_app		427921	0					
ANR	427934	Identifier	clump_splay_app		427921	0					
ANR	427935	ArgumentList	mem -> root		427921	1					
ANR	427936	Argument	mem -> root		427921	0					
ANR	427937	PtrMemberAccess	mem -> root		427921	0					
ANR	427938	Identifier	mem		427921	0					
ANR	427939	Identifier	root		427921	1					
ANR	427940	Argument	mem		427921	1					
ANR	427941	Identifier	mem		427921	0					
ANR	427942	Argument	consolidate		427921	2					
ANR	427943	Identifier	consolidate		427921	0					
ANR	427944	Argument	mem		427921	3					
ANR	427945	Identifier	mem		427921	0					
ANR	427946	IfStatement	if ( mem -> cc == NULL )		427921	2					
ANR	427947	Condition	mem -> cc == NULL	2112:8:67969:67983	427921	0	True				
ANR	427948	EqualityExpression	mem -> cc == NULL		427921	0		==			
ANR	427949	PtrMemberAccess	mem -> cc		427921	0					
ANR	427950	Identifier	mem		427921	0					
ANR	427951	Identifier	cc		427921	1					
ANR	427952	Identifier	NULL		427921	1					
ANR	427953	ExpressionStatement	mem -> cc = mem -> root	2113:8:67994:68013	427921	1	True				
ANR	427954	AssignmentExpression	mem -> cc = mem -> root		427921	0		=			
ANR	427955	PtrMemberAccess	mem -> cc		427921	0					
ANR	427956	Identifier	mem		427921	0					
ANR	427957	Identifier	cc		427921	1					
ANR	427958	PtrMemberAccess	mem -> root		427921	1					
ANR	427959	Identifier	mem		427921	0					
ANR	427960	Identifier	root		427921	1					
ANR	427961	ExpressionStatement	alloc_open_clump ( mem )	2115:4:68020:68041	427921	3	True				
ANR	427962	CallExpression	alloc_open_clump ( mem )		427921	0					
ANR	427963	Callee	alloc_open_clump		427921	0					
ANR	427964	Identifier	alloc_open_clump		427921	0					
ANR	427965	ArgumentList	mem		427921	1					
ANR	427966	Argument	mem		427921	0					
ANR	427967	Identifier	mem		427921	0					
ANR	427968	ReturnType	void		427921	1					
ANR	427969	Identifier	ialloc_consolidate_free		427921	2					
ANR	427970	ParameterList	gs_ref_memory_t * mem		427921	3					
ANR	427971	Parameter	gs_ref_memory_t * mem	2100:24:67456:67475	427921	0	True				
ANR	427972	ParameterType	gs_ref_memory_t *		427921	0					
ANR	427973	Identifier	mem		427921	1					
ANR	427974	CFGEntryNode	ENTRY		427921		True				
ANR	427975	CFGExitNode	EXIT		427921		True				
ANR	427976	Symbol	NULL		427921						
ANR	427977	Symbol	mem		427921						
ANR	427978	Symbol	consolidate		427921						
ANR	427979	Symbol	mem -> cc		427921						
ANR	427980	Symbol	mem -> root		427921						
ANR	427981	Symbol	* mem		427921						
ANR	427982	Function	i_consolidate_free	2117:0:68045:68149							
ANR	427983	FunctionDef	i_consolidate_free (gs_memory_t * mem)		427982	0					
ANR	427984	CompoundStatement		2119:0:68094:68149	427982	0					
ANR	427985	ExpressionStatement	ialloc_consolidate_free ( ( gs_ref_memory_t * ) mem )	2120:4:68100:68147	427982	0	True				
ANR	427986	CallExpression	ialloc_consolidate_free ( ( gs_ref_memory_t * ) mem )		427982	0					
ANR	427987	Callee	ialloc_consolidate_free		427982	0					
ANR	427988	Identifier	ialloc_consolidate_free		427982	0					
ANR	427989	ArgumentList	( gs_ref_memory_t * ) mem		427982	1					
ANR	427990	Argument	( gs_ref_memory_t * ) mem		427982	0					
ANR	427991	CastExpression	( gs_ref_memory_t * ) mem		427982	0					
ANR	427992	CastTarget	gs_ref_memory_t *		427982	0					
ANR	427993	Identifier	mem		427982	1					
ANR	427994	ReturnType	static void		427982	1					
ANR	427995	Identifier	i_consolidate_free		427982	2					
ANR	427996	ParameterList	gs_memory_t * mem		427982	3					
ANR	427997	Parameter	gs_memory_t * mem	2118:19:68076:68091	427982	0	True				
ANR	427998	ParameterType	gs_memory_t *		427982	0					
ANR	427999	Identifier	mem		427982	1					
ANR	428000	CFGEntryNode	ENTRY		427982		True				
ANR	428001	CFGExitNode	EXIT		427982		True				
ANR	428002	Symbol	mem		427982						
ANR	428003	ClassDef	<unnamed>	2123:8:68160:68286							
ANR	428004	DeclStmt									
ANR	428005	Decl							uint	uint	need_free
ANR	428006	DeclStmt									
ANR	428007	Decl							obj_header_t	obj_header_t *	found_pre
ANR	428008	DeclStmt									
ANR	428009	Decl							gs_ref_memory_t	gs_ref_memory_t *	mem
ANR	428010	DeclStmt									
ANR	428011	Decl							unsigned	unsigned	request_size
ANR	428012	DeclStmt									
ANR	428013	Decl									scavenge_data
ANR	428014	Function	scavenge	2131:0:68289:69565							
ANR	428015	FunctionDef	"scavenge (clump_t * cp , void * arg)"		428014	0					
ANR	428016	CompoundStatement		2133:0:68348:69565	428014	0					
ANR	428017	IdentifierDeclStatement	scavenge_data * sd = ( scavenge_data * ) arg ;	2134:4:68354:68394	428014	0	True				
ANR	428018	IdentifierDecl	* sd = ( scavenge_data * ) arg		428014	0					
ANR	428019	IdentifierDeclType	scavenge_data *		428014	0					
ANR	428020	Identifier	sd		428014	1					
ANR	428021	AssignmentExpression	* sd = ( scavenge_data * ) arg		428014	2		=			
ANR	428022	Identifier	sd		428014	0					
ANR	428023	CastExpression	( scavenge_data * ) arg		428014	1					
ANR	428024	CastTarget	scavenge_data *		428014	0					
ANR	428025	Identifier	arg		428014	1					
ANR	428026	IdentifierDeclStatement	obj_header_t * begin_free = NULL ;	2135:4:68400:68431	428014	1	True				
ANR	428027	IdentifierDecl	* begin_free = NULL		428014	0					
ANR	428028	IdentifierDeclType	obj_header_t *		428014	0					
ANR	428029	Identifier	begin_free		428014	1					
ANR	428030	AssignmentExpression	* begin_free = NULL		428014	2		=			
ANR	428031	Identifier	NULL		428014	0					
ANR	428032	Identifier	NULL		428014	1					
ANR	428033	IdentifierDeclStatement	uint found_free = 0 ;	2136:4:68437:68456	428014	2	True				
ANR	428034	IdentifierDecl	found_free = 0		428014	0					
ANR	428035	IdentifierDeclType	uint		428014	0					
ANR	428036	Identifier	found_free		428014	1					
ANR	428037	AssignmentExpression	found_free = 0		428014	2		=			
ANR	428038	Identifier	found_free		428014	0					
ANR	428039	PrimaryExpression	0		428014	1					
ANR	428040	ExpressionStatement	sd -> found_pre = NULL	2138:4:68463:68483	428014	3	True				
ANR	428041	AssignmentExpression	sd -> found_pre = NULL		428014	0		=			
ANR	428042	PtrMemberAccess	sd -> found_pre		428014	0					
ANR	428043	Identifier	sd		428014	0					
ANR	428044	Identifier	found_pre		428014	1					
ANR	428045	Identifier	NULL		428014	1					
ANR	428046	Statement	SCAN_CLUMP_OBJECTS	2140:4:68490:68507	428014	4	True				
ANR	428047	Statement	(	2140:22:68508:68508	428014	5	True				
ANR	428048	Statement	cp	2140:23:68509:68510	428014	6	True				
ANR	428049	Statement	)	2140:25:68511:68511	428014	7	True				
ANR	428050	Statement	DO_ALL	2141:4:68517:68522	428014	8	True				
ANR	428051	IfStatement	if ( pre -> o_type == & st_free )		428014	9					
ANR	428052	Condition	pre -> o_type == & st_free	2142:12:68536:68558	428014	0	True				
ANR	428053	EqualityExpression	pre -> o_type == & st_free		428014	0		==			
ANR	428054	PtrMemberAccess	pre -> o_type		428014	0					
ANR	428055	Identifier	pre		428014	0					
ANR	428056	Identifier	o_type		428014	1					
ANR	428057	UnaryOperationExpression	& st_free		428014	1					
ANR	428058	UnaryOperator	&		428014	0					
ANR	428059	Identifier	st_free		428014	1					
ANR	428060	CompoundStatement		10:37:212:212	428014	1					
ANR	428061	IfStatement	if ( begin_free == 0 )		428014	0					
ANR	428062	Condition	begin_free == 0	2143:16:68579:68593	428014	0	True				
ANR	428063	EqualityExpression	begin_free == 0		428014	0		==			
ANR	428064	Identifier	begin_free		428014	0					
ANR	428065	PrimaryExpression	0		428014	1					
ANR	428066	CompoundStatement		11:33:247:247	428014	1					
ANR	428067	ExpressionStatement	found_free = 0	2144:16:68614:68628	428014	0	True				
ANR	428068	AssignmentExpression	found_free = 0		428014	0		=			
ANR	428069	Identifier	found_free		428014	0					
ANR	428070	PrimaryExpression	0		428014	1					
ANR	428071	ExpressionStatement	begin_free = pre	2145:16:68646:68662	428014	1	True				
ANR	428072	AssignmentExpression	begin_free = pre		428014	0		=			
ANR	428073	Identifier	begin_free		428014	0					
ANR	428074	Identifier	pre		428014	1					
ANR	428075	ExpressionStatement	found_free += pre_obj_rounded_size ( pre )	2147:12:68690:68729	428014	1	True				
ANR	428076	AssignmentExpression	found_free += pre_obj_rounded_size ( pre )		428014	0		+=			
ANR	428077	Identifier	found_free		428014	0					
ANR	428078	CallExpression	pre_obj_rounded_size ( pre )		428014	1					
ANR	428079	Callee	pre_obj_rounded_size		428014	0					
ANR	428080	Identifier	pre_obj_rounded_size		428014	0					
ANR	428081	ArgumentList	pre		428014	1					
ANR	428082	Argument	pre		428014	0					
ANR	428083	Identifier	pre		428014	0					
ANR	428084	IfStatement	if ( begin_free != 0 && found_free >= sd -> need_free )		428014	2					
ANR	428085	Condition	begin_free != 0 && found_free >= sd -> need_free	2148:16:68747:68792	428014	0	True				
ANR	428086	AndExpression	begin_free != 0 && found_free >= sd -> need_free		428014	0		&&			
ANR	428087	EqualityExpression	begin_free != 0		428014	0		!=			
ANR	428088	Identifier	begin_free		428014	0					
ANR	428089	PrimaryExpression	0		428014	1					
ANR	428090	RelationalExpression	found_free >= sd -> need_free		428014	1		>=			
ANR	428091	Identifier	found_free		428014	0					
ANR	428092	PtrMemberAccess	sd -> need_free		428014	1					
ANR	428093	Identifier	sd		428014	0					
ANR	428094	Identifier	need_free		428014	1					
ANR	428095	BreakStatement	break ;	2149:16:68811:68816	428014	1	True				
ANR	428096	ElseStatement	else		428014	0					
ANR	428097	ExpressionStatement	begin_free = 0	2151:12:68845:68859	428014	0	True				
ANR	428098	AssignmentExpression	begin_free = 0		428014	0		=			
ANR	428099	Identifier	begin_free		428014	0					
ANR	428100	PrimaryExpression	0		428014	1					
ANR	428101	Statement	END_OBJECTS_SCAN_NO_ABORT	2152:4:68865:68889	428014	10	True				
ANR	428102	IfStatement	if ( begin_free != 0 && found_free >= sd -> need_free )		428014	11					
ANR	428103	Condition	begin_free != 0 && found_free >= sd -> need_free	2154:8:68900:68945	428014	0	True				
ANR	428104	AndExpression	begin_free != 0 && found_free >= sd -> need_free		428014	0		&&			
ANR	428105	EqualityExpression	begin_free != 0		428014	0		!=			
ANR	428106	Identifier	begin_free		428014	0					
ANR	428107	PrimaryExpression	0		428014	1					
ANR	428108	RelationalExpression	found_free >= sd -> need_free		428014	1		>=			
ANR	428109	Identifier	found_free		428014	0					
ANR	428110	PtrMemberAccess	sd -> need_free		428014	1					
ANR	428111	Identifier	sd		428014	0					
ANR	428112	Identifier	need_free		428014	1					
ANR	428113	CompoundStatement		22:56:599:599	428014	1					
ANR	428114	ExpressionStatement	"remove_range_from_freelist ( sd -> mem , ( char * ) begin_free , ( char * ) begin_free + found_free )"	2156:8:69015:69136	428014	0	True				
ANR	428115	CallExpression	"remove_range_from_freelist ( sd -> mem , ( char * ) begin_free , ( char * ) begin_free + found_free )"		428014	0					
ANR	428116	Callee	remove_range_from_freelist		428014	0					
ANR	428117	Identifier	remove_range_from_freelist		428014	0					
ANR	428118	ArgumentList	sd -> mem		428014	1					
ANR	428119	Argument	sd -> mem		428014	0					
ANR	428120	PtrMemberAccess	sd -> mem		428014	0					
ANR	428121	Identifier	sd		428014	0					
ANR	428122	Identifier	mem		428014	1					
ANR	428123	Argument	( char * ) begin_free		428014	1					
ANR	428124	CastExpression	( char * ) begin_free		428014	0					
ANR	428125	CastTarget	char *		428014	0					
ANR	428126	Identifier	begin_free		428014	1					
ANR	428127	Argument	( char * ) begin_free + found_free		428014	2					
ANR	428128	AdditiveExpression	( char * ) begin_free + found_free		428014	0		+			
ANR	428129	CastExpression	( char * ) begin_free		428014	0					
ANR	428130	CastTarget	char *		428014	0					
ANR	428131	Identifier	begin_free		428014	1					
ANR	428132	Identifier	found_free		428014	1					
ANR	428133	ExpressionStatement	sd -> found_pre = begin_free	2160:8:69182:69208	428014	1	True				
ANR	428134	AssignmentExpression	sd -> found_pre = begin_free		428014	0		=			
ANR	428135	PtrMemberAccess	sd -> found_pre		428014	0					
ANR	428136	Identifier	sd		428014	0					
ANR	428137	Identifier	found_pre		428014	1					
ANR	428138	Identifier	begin_free		428014	1					
ANR	428139	ExpressionStatement	sd -> found_pre -> o_type = & st_free	2161:8:69218:69250	428014	2	True				
ANR	428140	AssignmentExpression	sd -> found_pre -> o_type = & st_free		428014	0		=			
ANR	428141	PtrMemberAccess	sd -> found_pre -> o_type		428014	0					
ANR	428142	PtrMemberAccess	sd -> found_pre		428014	0					
ANR	428143	Identifier	sd		428014	0					
ANR	428144	Identifier	found_pre		428014	1					
ANR	428145	Identifier	o_type		428014	1					
ANR	428146	UnaryOperationExpression	& st_free		428014	1					
ANR	428147	UnaryOperator	&		428014	0					
ANR	428148	Identifier	st_free		428014	1					
ANR	428149	ExpressionStatement	sd -> found_pre -> o_size = found_free - sizeof ( obj_header_t )	2162:8:69297:69354	428014	3	True				
ANR	428150	AssignmentExpression	sd -> found_pre -> o_size = found_free - sizeof ( obj_header_t )		428014	0		=			
ANR	428151	PtrMemberAccess	sd -> found_pre -> o_size		428014	0					
ANR	428152	PtrMemberAccess	sd -> found_pre		428014	0					
ANR	428153	Identifier	sd		428014	0					
ANR	428154	Identifier	found_pre		428014	1					
ANR	428155	Identifier	o_size		428014	1					
ANR	428156	AdditiveExpression	found_free - sizeof ( obj_header_t )		428014	1		-			
ANR	428157	Identifier	found_free		428014	0					
ANR	428158	SizeofExpression	sizeof ( obj_header_t )		428014	1					
ANR	428159	Sizeof	sizeof		428014	0					
ANR	428160	SizeofOperand	obj_header_t		428014	1					
ANR	428161	ExpressionStatement	"trim_obj ( sd -> mem , sd -> found_pre + 1 , sd -> request_size , cp )"	2165:8:69436:69494	428014	4	True				
ANR	428162	CallExpression	"trim_obj ( sd -> mem , sd -> found_pre + 1 , sd -> request_size , cp )"		428014	0					
ANR	428163	Callee	trim_obj		428014	0					
ANR	428164	Identifier	trim_obj		428014	0					
ANR	428165	ArgumentList	sd -> mem		428014	1					
ANR	428166	Argument	sd -> mem		428014	0					
ANR	428167	PtrMemberAccess	sd -> mem		428014	0					
ANR	428168	Identifier	sd		428014	0					
ANR	428169	Identifier	mem		428014	1					
ANR	428170	Argument	sd -> found_pre + 1		428014	1					
ANR	428171	AdditiveExpression	sd -> found_pre + 1		428014	0		+			
ANR	428172	PtrMemberAccess	sd -> found_pre		428014	0					
ANR	428173	Identifier	sd		428014	0					
ANR	428174	Identifier	found_pre		428014	1					
ANR	428175	PrimaryExpression	1		428014	1					
ANR	428176	Argument	sd -> request_size		428014	2					
ANR	428177	PtrMemberAccess	sd -> request_size		428014	0					
ANR	428178	Identifier	sd		428014	0					
ANR	428179	Identifier	request_size		428014	1					
ANR	428180	Argument	cp		428014	3					
ANR	428181	Identifier	cp		428014	0					
ANR	428182	ReturnStatement	return SPLAY_APP_STOP ;	2166:8:69504:69525	428014	5	True				
ANR	428183	Identifier	SPLAY_APP_STOP		428014	0					
ANR	428184	ReturnStatement	return SPLAY_APP_CONTINUE ;	2169:4:69538:69563	428014	12	True				
ANR	428185	Identifier	SPLAY_APP_CONTINUE		428014	0					
ANR	428186	ReturnType	static splay_app_result_t		428014	1					
ANR	428187	Identifier	scavenge		428014	2					
ANR	428188	ParameterList	"clump_t * cp , void * arg"		428014	3					
ANR	428189	Parameter	clump_t * cp	2132:9:68324:68334	428014	0	True				
ANR	428190	ParameterType	clump_t *		428014	0					
ANR	428191	Identifier	cp		428014	1					
ANR	428192	Parameter	void * arg	2132:22:68337:68345	428014	1	True				
ANR	428193	ParameterType	void *		428014	0					
ANR	428194	Identifier	arg		428014	1					
ANR	428195	CFGEntryNode	ENTRY		428014		True				
ANR	428196	CFGExitNode	EXIT		428014		True				
ANR	428197	CFGErrorNode	ERROR		428014		True				
ANR	428198	Symbol	pre		428014						
ANR	428199	Symbol	pre_obj_rounded_size		428014						
ANR	428200	Symbol	SPLAY_APP_STOP		428014						
ANR	428201	Symbol	NULL		428014						
ANR	428202	Symbol	sd -> found_pre		428014						
ANR	428203	Symbol	begin_free		428014						
ANR	428204	Symbol	& st_free		428014						
ANR	428205	Symbol	sd -> request_size		428014						
ANR	428206	Symbol	sd -> mem		428014						
ANR	428207	Symbol	* sd -> found_pre		428014						
ANR	428208	Symbol	sd -> found_pre -> o_size		428014						
ANR	428209	Symbol	cp		428014						
ANR	428210	Symbol	* pre		428014						
ANR	428211	Symbol	sd		428014						
ANR	428212	Symbol	* sd		428014						
ANR	428213	Symbol	sd -> found_pre -> o_type		428014						
ANR	428214	Symbol	pre -> o_type		428014						
ANR	428215	Symbol	sd -> need_free		428014						
ANR	428216	Symbol	arg		428014						
ANR	428217	Symbol	found_free		428014						
ANR	428218	Symbol	* * sd		428014						
ANR	428219	Symbol	SPLAY_APP_CONTINUE		428014						
ANR	428220	Function	scavenge_low_free	2173:0:69643:70208							
ANR	428221	FunctionDef	"scavenge_low_free (gs_ref_memory_t * mem , unsigned request_size)"		428220	0					
ANR	428222	CompoundStatement		2175:0:69787:70208	428220	0					
ANR	428223	IdentifierDeclStatement	scavenge_data sd ;	2177:4:69876:69892	428220	0	True				
ANR	428224	IdentifierDecl	sd		428220	0					
ANR	428225	IdentifierDeclType	scavenge_data		428220	0					
ANR	428226	Identifier	sd		428220	1					
ANR	428227	IdentifierDeclStatement	uint request_size_rounded = obj_size_round ( request_size ) ;	2178:4:69898:69954	428220	1	True				
ANR	428228	IdentifierDecl	request_size_rounded = obj_size_round ( request_size )		428220	0					
ANR	428229	IdentifierDeclType	uint		428220	0					
ANR	428230	Identifier	request_size_rounded		428220	1					
ANR	428231	AssignmentExpression	request_size_rounded = obj_size_round ( request_size )		428220	2		=			
ANR	428232	Identifier	request_size_rounded		428220	0					
ANR	428233	CallExpression	obj_size_round ( request_size )		428220	1					
ANR	428234	Callee	obj_size_round		428220	0					
ANR	428235	Identifier	obj_size_round		428220	0					
ANR	428236	ArgumentList	request_size		428220	1					
ANR	428237	Argument	request_size		428220	0					
ANR	428238	Identifier	request_size		428220	0					
ANR	428239	ExpressionStatement	sd . found_pre = 0	2180:4:69961:69977	428220	2	True				
ANR	428240	AssignmentExpression	sd . found_pre = 0		428220	0		=			
ANR	428241	MemberAccess	sd . found_pre		428220	0					
ANR	428242	Identifier	sd		428220	0					
ANR	428243	Identifier	found_pre		428220	1					
ANR	428244	PrimaryExpression	0		428220	1					
ANR	428245	ExpressionStatement	sd . need_free = request_size_rounded + sizeof ( obj_header_t )	2181:4:69983:70041	428220	3	True				
ANR	428246	AssignmentExpression	sd . need_free = request_size_rounded + sizeof ( obj_header_t )		428220	0		=			
ANR	428247	MemberAccess	sd . need_free		428220	0					
ANR	428248	Identifier	sd		428220	0					
ANR	428249	Identifier	need_free		428220	1					
ANR	428250	AdditiveExpression	request_size_rounded + sizeof ( obj_header_t )		428220	1		+			
ANR	428251	Identifier	request_size_rounded		428220	0					
ANR	428252	SizeofExpression	sizeof ( obj_header_t )		428220	1					
ANR	428253	Sizeof	sizeof		428220	0					
ANR	428254	SizeofOperand	obj_header_t		428220	1					
ANR	428255	ExpressionStatement	sd . mem = mem	2182:4:70080:70092	428220	4	True				
ANR	428256	AssignmentExpression	sd . mem = mem		428220	0		=			
ANR	428257	MemberAccess	sd . mem		428220	0					
ANR	428258	Identifier	sd		428220	0					
ANR	428259	Identifier	mem		428220	1					
ANR	428260	Identifier	mem		428220	1					
ANR	428261	ExpressionStatement	sd . request_size = request_size	2183:4:70098:70128	428220	5	True				
ANR	428262	AssignmentExpression	sd . request_size = request_size		428220	0		=			
ANR	428263	MemberAccess	sd . request_size		428220	0					
ANR	428264	Identifier	sd		428220	0					
ANR	428265	Identifier	request_size		428220	1					
ANR	428266	Identifier	request_size		428220	1					
ANR	428267	ExpressionStatement	"clump_splay_app ( mem -> root , mem , scavenge , & sd )"	2185:4:70135:70181	428220	6	True				
ANR	428268	CallExpression	"clump_splay_app ( mem -> root , mem , scavenge , & sd )"		428220	0					
ANR	428269	Callee	clump_splay_app		428220	0					
ANR	428270	Identifier	clump_splay_app		428220	0					
ANR	428271	ArgumentList	mem -> root		428220	1					
ANR	428272	Argument	mem -> root		428220	0					
ANR	428273	PtrMemberAccess	mem -> root		428220	0					
ANR	428274	Identifier	mem		428220	0					
ANR	428275	Identifier	root		428220	1					
ANR	428276	Argument	mem		428220	1					
ANR	428277	Identifier	mem		428220	0					
ANR	428278	Argument	scavenge		428220	2					
ANR	428279	Identifier	scavenge		428220	0					
ANR	428280	Argument	& sd		428220	3					
ANR	428281	UnaryOperationExpression	& sd		428220	0					
ANR	428282	UnaryOperator	&		428220	0					
ANR	428283	Identifier	sd		428220	1					
ANR	428284	ReturnStatement	return sd . found_pre ;	2186:4:70187:70206	428220	7	True				
ANR	428285	MemberAccess	sd . found_pre		428220	0					
ANR	428286	Identifier	sd		428220	0					
ANR	428287	Identifier	found_pre		428220	1					
ANR	428288	ReturnType	static obj_header_t *		428220	1					
ANR	428289	Identifier	scavenge_low_free		428220	2					
ANR	428290	ParameterList	"gs_ref_memory_t * mem , unsigned request_size"		428220	3					
ANR	428291	Parameter	gs_ref_memory_t * mem	2174:18:69742:69761	428220	0	True				
ANR	428292	ParameterType	gs_ref_memory_t *		428220	0					
ANR	428293	Identifier	mem		428220	1					
ANR	428294	Parameter	unsigned request_size	2174:40:69764:69784	428220	1	True				
ANR	428295	ParameterType	unsigned		428220	0					
ANR	428296	Identifier	request_size		428220	1					
ANR	428297	CFGEntryNode	ENTRY		428220		True				
ANR	428298	CFGExitNode	EXIT		428220		True				
ANR	428299	Symbol	sd . found_pre		428220						
ANR	428300	Symbol	scavenge		428220						
ANR	428301	Symbol	sd . request_size		428220						
ANR	428302	Symbol	sd		428220						
ANR	428303	Symbol	obj_size_round		428220						
ANR	428304	Symbol	mem		428220						
ANR	428305	Symbol	request_size_rounded		428220						
ANR	428306	Symbol	mem -> root		428220						
ANR	428307	Symbol	sd . need_free		428220						
ANR	428308	Symbol	& sd		428220						
ANR	428309	Symbol	request_size		428220						
ANR	428310	Symbol	sd . mem		428220						
ANR	428311	Symbol	* mem		428220						
ANR	428312	Function	remove_range_from_freelist	2190:0:70263:72462							
ANR	428313	FunctionDef	"remove_range_from_freelist (gs_ref_memory_t * mem , void * bottom , void * top)"		428312	0					
ANR	428314	CompoundStatement		2192:0:70349:72462	428312	0					
ANR	428315	IdentifierDeclStatement	int num_free [ num_freelists ] ;	2193:4:70355:70382	428312	0	True				
ANR	428316	IdentifierDecl	num_free [ num_freelists ]		428312	0					
ANR	428317	IdentifierDeclType	int [ num_freelists ]		428312	0					
ANR	428318	Identifier	num_free		428312	1					
ANR	428319	Identifier	num_freelists		428312	2					
ANR	428320	IdentifierDeclStatement	"int smallest = num_freelists , largest = - 1 ;"	2194:4:70388:70430	428312	1	True				
ANR	428321	IdentifierDecl	smallest = num_freelists		428312	0					
ANR	428322	IdentifierDeclType	int		428312	0					
ANR	428323	Identifier	smallest		428312	1					
ANR	428324	AssignmentExpression	smallest = num_freelists		428312	2		=			
ANR	428325	Identifier	num_freelists		428312	0					
ANR	428326	Identifier	num_freelists		428312	1					
ANR	428327	IdentifierDecl	largest = - 1		428312	1					
ANR	428328	IdentifierDeclType	int		428312	0					
ANR	428329	Identifier	largest		428312	1					
ANR	428330	AssignmentExpression	largest = - 1		428312	2		=			
ANR	428331	Identifier	largest		428312	0					
ANR	428332	UnaryOperationExpression	- 1		428312	1					
ANR	428333	UnaryOperator	-		428312	0					
ANR	428334	PrimaryExpression	1		428312	1					
ANR	428335	IdentifierDeclStatement	const obj_header_t * cur ;	2195:4:70436:70459	428312	2	True				
ANR	428336	IdentifierDecl	* cur		428312	0					
ANR	428337	IdentifierDeclType	const obj_header_t *		428312	0					
ANR	428338	Identifier	cur		428312	1					
ANR	428339	IdentifierDeclStatement	uint size ;	2196:4:70465:70474	428312	3	True				
ANR	428340	IdentifierDecl	size		428312	0					
ANR	428341	IdentifierDeclType	uint		428312	0					
ANR	428342	Identifier	size		428312	1					
ANR	428343	IdentifierDeclStatement	int i ;	2197:4:70480:70485	428312	4	True				
ANR	428344	IdentifierDecl	i		428312	0					
ANR	428345	IdentifierDeclType	int		428312	0					
ANR	428346	Identifier	i		428312	1					
ANR	428347	IdentifierDeclStatement	uint removed = 0 ;	2198:4:70491:70507	428312	5	True				
ANR	428348	IdentifierDecl	removed = 0		428312	0					
ANR	428349	IdentifierDeclType	uint		428312	0					
ANR	428350	Identifier	removed		428312	1					
ANR	428351	AssignmentExpression	removed = 0		428312	2		=			
ANR	428352	Identifier	removed		428312	0					
ANR	428353	PrimaryExpression	0		428312	1					
ANR	428354	ForStatement	for ( cur = bottom ; cur != top ; cur = ( const obj_header_t * ) ( ( const byte * ) cur + obj_size_round ( size ) ) )		428312	6					
ANR	428355	ForInit	cur = bottom ;	2205:9:70657:70669	428312	0	True				
ANR	428356	AssignmentExpression	cur = bottom		428312	0		=			
ANR	428357	Identifier	cur		428312	0					
ANR	428358	Identifier	bottom		428312	1					
ANR	428359	Condition	cur != top	2205:23:70671:70680	428312	1	True				
ANR	428360	EqualityExpression	cur != top		428312	0		!=			
ANR	428361	Identifier	cur		428312	0					
ANR	428362	Identifier	top		428312	1					
ANR	428363	AssignmentExpression	cur = ( const obj_header_t * ) ( ( const byte * ) cur + obj_size_round ( size ) )	2206:9:70692:70775	428312	2	True	=			
ANR	428364	Identifier	cur		428312	0					
ANR	428365	CastExpression	( const obj_header_t * ) ( ( const byte * ) cur + obj_size_round ( size ) )		428312	1					
ANR	428366	CastTarget	const obj_header_t *		428312	0					
ANR	428367	AdditiveExpression	( const byte * ) cur + obj_size_round ( size )		428312	1		+			
ANR	428368	CastExpression	( const byte * ) cur		428312	0					
ANR	428369	CastTarget	const byte *		428312	0					
ANR	428370	Identifier	cur		428312	1					
ANR	428371	CallExpression	obj_size_round ( size )		428312	1					
ANR	428372	Callee	obj_size_round		428312	0					
ANR	428373	Identifier	obj_size_round		428312	0					
ANR	428374	ArgumentList	size		428312	1					
ANR	428375	Argument	size		428312	0					
ANR	428376	Identifier	size		428312	0					
ANR	428377	CompoundStatement		17:10:437:437	428312	3					
ANR	428378	ExpressionStatement	size = cur -> o_size	2209:8:70797:70815	428312	0	True				
ANR	428379	AssignmentExpression	size = cur -> o_size		428312	0		=			
ANR	428380	Identifier	size		428312	0					
ANR	428381	PtrMemberAccess	cur -> o_size		428312	1					
ANR	428382	Identifier	cur		428312	0					
ANR	428383	Identifier	o_size		428312	1					
ANR	428384	ExpressionStatement	i = ( size > max_freelist_size ? LARGE_FREELIST_INDEX : ( size + obj_align_mask ) >> log2_obj_align_mod )	2210:8:70825:70939	428312	1	True				
ANR	428385	AssignmentExpression	i = ( size > max_freelist_size ? LARGE_FREELIST_INDEX : ( size + obj_align_mask ) >> log2_obj_align_mod )		428312	0		=			
ANR	428386	Identifier	i		428312	0					
ANR	428387	ConditionalExpression	size > max_freelist_size ? LARGE_FREELIST_INDEX : ( size + obj_align_mask ) >> log2_obj_align_mod		428312	1					
ANR	428388	Condition	size > max_freelist_size		428312	0					
ANR	428389	RelationalExpression	size > max_freelist_size		428312	0		>			
ANR	428390	Identifier	size		428312	0					
ANR	428391	Identifier	max_freelist_size		428312	1					
ANR	428392	Identifier	LARGE_FREELIST_INDEX		428312	1					
ANR	428393	ShiftExpression	( size + obj_align_mask ) >> log2_obj_align_mod		428312	2		>>			
ANR	428394	AdditiveExpression	size + obj_align_mask		428312	0		+			
ANR	428395	Identifier	size		428312	0					
ANR	428396	Identifier	obj_align_mask		428312	1					
ANR	428397	Identifier	log2_obj_align_mod		428312	1					
ANR	428398	IfStatement	if ( i < smallest )		428312	2					
ANR	428399	Condition	i < smallest	2212:12:70953:70964	428312	0	True				
ANR	428400	RelationalExpression	i < smallest		428312	0		<			
ANR	428401	Identifier	i		428312	0					
ANR	428402	Identifier	smallest		428312	1					
ANR	428403	CompoundStatement		21:26:617:617	428312	1					
ANR	428404	IfStatement	if ( i == 0 )		428312	0					
ANR	428405	Condition	i == 0	2217:16:71136:71141	428312	0	True				
ANR	428406	EqualityExpression	i == 0		428312	0		==			
ANR	428407	Identifier	i		428312	0					
ANR	428408	PrimaryExpression	0		428312	1					
ANR	428409	ContinueStatement	continue ;	2218:16:71160:71168	428312	1	True				
ANR	428410	IfStatement	if ( smallest < num_freelists )		428312	1					
ANR	428411	Condition	smallest < num_freelists	2219:16:71186:71209	428312	0	True				
ANR	428412	RelationalExpression	smallest < num_freelists		428312	0		<			
ANR	428413	Identifier	smallest		428312	0					
ANR	428414	Identifier	num_freelists		428312	1					
ANR	428415	ExpressionStatement	"memset ( & num_free [ i ] , 0 , ( smallest - i ) * sizeof ( int ) )"	2220:16:71228:71281	428312	1	True				
ANR	428416	CallExpression	"memset ( & num_free [ i ] , 0 , ( smallest - i ) * sizeof ( int ) )"		428312	0					
ANR	428417	Callee	memset		428312	0					
ANR	428418	Identifier	memset		428312	0					
ANR	428419	ArgumentList	& num_free [ i ]		428312	1					
ANR	428420	Argument	& num_free [ i ]		428312	0					
ANR	428421	UnaryOperationExpression	& num_free [ i ]		428312	0					
ANR	428422	UnaryOperator	&		428312	0					
ANR	428423	ArrayIndexing	num_free [ i ]		428312	1					
ANR	428424	Identifier	num_free		428312	0					
ANR	428425	Identifier	i		428312	1					
ANR	428426	Argument	0		428312	1					
ANR	428427	PrimaryExpression	0		428312	0					
ANR	428428	Argument	( smallest - i ) * sizeof ( int )		428312	2					
ANR	428429	MultiplicativeExpression	( smallest - i ) * sizeof ( int )		428312	0		*			
ANR	428430	AdditiveExpression	smallest - i		428312	0		-			
ANR	428431	Identifier	smallest		428312	0					
ANR	428432	Identifier	i		428312	1					
ANR	428433	SizeofExpression	sizeof ( int )		428312	1					
ANR	428434	Sizeof	sizeof		428312	0					
ANR	428435	SizeofOperand	int		428312	1					
ANR	428436	ElseStatement	else		428312	0					
ANR	428437	ExpressionStatement	num_free [ i ] = 0	2222:16:71316:71331	428312	0	True				
ANR	428438	AssignmentExpression	num_free [ i ] = 0		428312	0		=			
ANR	428439	ArrayIndexing	num_free [ i ]		428312	0					
ANR	428440	Identifier	num_free		428312	0					
ANR	428441	Identifier	i		428312	1					
ANR	428442	PrimaryExpression	0		428312	1					
ANR	428443	ExpressionStatement	smallest = i	2223:12:71345:71357	428312	2	True				
ANR	428444	AssignmentExpression	smallest = i		428312	0		=			
ANR	428445	Identifier	smallest		428312	0					
ANR	428446	Identifier	i		428312	1					
ANR	428447	IfStatement	if ( i > largest )		428312	3					
ANR	428448	Condition	i > largest	2225:12:71381:71391	428312	0	True				
ANR	428449	RelationalExpression	i > largest		428312	0		>			
ANR	428450	Identifier	i		428312	0					
ANR	428451	Identifier	largest		428312	1					
ANR	428452	CompoundStatement		34:25:1044:1044	428312	1					
ANR	428453	IfStatement	if ( largest >= 0 )		428312	0					
ANR	428454	Condition	largest >= 0	2226:16:71412:71423	428312	0	True				
ANR	428455	RelationalExpression	largest >= 0		428312	0		>=			
ANR	428456	Identifier	largest		428312	0					
ANR	428457	PrimaryExpression	0		428312	1					
ANR	428458	ExpressionStatement	"memset ( & num_free [ largest + 1 ] , 0 , ( i - largest ) * sizeof ( int ) )"	2227:16:71442:71504	428312	1	True				
ANR	428459	CallExpression	"memset ( & num_free [ largest + 1 ] , 0 , ( i - largest ) * sizeof ( int ) )"		428312	0					
ANR	428460	Callee	memset		428312	0					
ANR	428461	Identifier	memset		428312	0					
ANR	428462	ArgumentList	& num_free [ largest + 1 ]		428312	1					
ANR	428463	Argument	& num_free [ largest + 1 ]		428312	0					
ANR	428464	UnaryOperationExpression	& num_free [ largest + 1 ]		428312	0					
ANR	428465	UnaryOperator	&		428312	0					
ANR	428466	ArrayIndexing	num_free [ largest + 1 ]		428312	1					
ANR	428467	Identifier	num_free		428312	0					
ANR	428468	AdditiveExpression	largest + 1		428312	1		+			
ANR	428469	Identifier	largest		428312	0					
ANR	428470	PrimaryExpression	1		428312	1					
ANR	428471	Argument	0		428312	1					
ANR	428472	PrimaryExpression	0		428312	0					
ANR	428473	Argument	( i - largest ) * sizeof ( int )		428312	2					
ANR	428474	MultiplicativeExpression	( i - largest ) * sizeof ( int )		428312	0		*			
ANR	428475	AdditiveExpression	i - largest		428312	0		-			
ANR	428476	Identifier	i		428312	0					
ANR	428477	Identifier	largest		428312	1					
ANR	428478	SizeofExpression	sizeof ( int )		428312	1					
ANR	428479	Sizeof	sizeof		428312	0					
ANR	428480	SizeofOperand	int		428312	1					
ANR	428481	ExpressionStatement	largest = i	2228:12:71518:71529	428312	1	True				
ANR	428482	AssignmentExpression	largest = i		428312	0		=			
ANR	428483	Identifier	largest		428312	0					
ANR	428484	Identifier	i		428312	1					
ANR	428485	ExpressionStatement	num_free [ i ] ++	2230:8:71549:71562	428312	4	True				
ANR	428486	PostIncDecOperationExpression	num_free [ i ] ++		428312	0					
ANR	428487	ArrayIndexing	num_free [ i ]		428312	0					
ANR	428488	Identifier	num_free		428312	0					
ANR	428489	Identifier	i		428312	1					
ANR	428490	IncDec	++		428312	1					
ANR	428491	ForStatement	for ( i = smallest ; i <= largest ; i ++ )		428312	7					
ANR	428492	ForInit	i = smallest ;	2239:9:71771:71783	428312	0	True				
ANR	428493	AssignmentExpression	i = smallest		428312	0		=			
ANR	428494	Identifier	i		428312	0					
ANR	428495	Identifier	smallest		428312	1					
ANR	428496	Condition	i <= largest	2239:23:71785:71796	428312	1	True				
ANR	428497	RelationalExpression	i <= largest		428312	0		<=			
ANR	428498	Identifier	i		428312	0					
ANR	428499	Identifier	largest		428312	1					
ANR	428500	PostIncDecOperationExpression	i ++	2239:37:71799:71801	428312	2	True				
ANR	428501	Identifier	i		428312	0					
ANR	428502	IncDec	++		428312	1					
ANR	428503	CompoundStatement		51:8:1526:1548	428312	3					
ANR	428504	IdentifierDeclStatement	int count = num_free [ i ] ;	2240:8:71814:71837	428312	0	True				
ANR	428505	IdentifierDecl	count = num_free [ i ]		428312	0					
ANR	428506	IdentifierDeclType	int		428312	0					
ANR	428507	Identifier	count		428312	1					
ANR	428508	AssignmentExpression	count = num_free [ i ]		428312	2		=			
ANR	428509	Identifier	count		428312	0					
ANR	428510	ArrayIndexing	num_free [ i ]		428312	1					
ANR	428511	Identifier	num_free		428312	0					
ANR	428512	Identifier	i		428312	1					
ANR	428513	IdentifierDeclStatement	obj_header_t * pfree ;	2241:8:71847:71866	428312	1	True				
ANR	428514	IdentifierDecl	* pfree		428312	0					
ANR	428515	IdentifierDeclType	obj_header_t *		428312	0					
ANR	428516	Identifier	pfree		428312	1					
ANR	428517	IdentifierDeclStatement	obj_header_t * * ppfprev ;	2242:8:71876:71898	428312	2	True				
ANR	428518	IdentifierDecl	* * ppfprev		428312	0					
ANR	428519	IdentifierDeclType	obj_header_t * *		428312	0					
ANR	428520	Identifier	ppfprev		428312	1					
ANR	428521	IfStatement	if ( ! count )		428312	3					
ANR	428522	Condition	! count	2244:12:71913:71918	428312	0	True				
ANR	428523	UnaryOperationExpression	! count		428312	0					
ANR	428524	UnaryOperator	!		428312	0					
ANR	428525	Identifier	count		428312	1					
ANR	428526	ContinueStatement	continue ;	2245:12:71933:71941	428312	1	True				
ANR	428527	ExpressionStatement	ppfprev = & mem -> freelists [ i ]	2246:8:71951:71979	428312	4	True				
ANR	428528	AssignmentExpression	ppfprev = & mem -> freelists [ i ]		428312	0		=			
ANR	428529	Identifier	ppfprev		428312	0					
ANR	428530	UnaryOperationExpression	& mem -> freelists [ i ]		428312	1					
ANR	428531	UnaryOperator	&		428312	0					
ANR	428532	ArrayIndexing	mem -> freelists [ i ]		428312	1					
ANR	428533	PtrMemberAccess	mem -> freelists		428312	0					
ANR	428534	Identifier	mem		428312	0					
ANR	428535	Identifier	freelists		428312	1					
ANR	428536	Identifier	i		428312	1					
ANR	428537	ForStatement	for ( ; ; )		428312	5					
ANR	428538	CompoundStatement		56:17:1648:1648	428312	0					
ANR	428539	ExpressionStatement	pfree = * ppfprev	2248:12:72012:72028	428312	0	True				
ANR	428540	AssignmentExpression	pfree = * ppfprev		428312	0		=			
ANR	428541	Identifier	pfree		428312	0					
ANR	428542	UnaryOperationExpression	* ppfprev		428312	1					
ANR	428543	UnaryOperator	*		428312	0					
ANR	428544	Identifier	ppfprev		428312	1					
ANR	428545	IfStatement	"if ( PTR_GE ( pfree , bottom ) && PTR_LT ( pfree , top ) )"		428312	1					
ANR	428546	Condition	"PTR_GE ( pfree , bottom ) && PTR_LT ( pfree , top )"	2249:16:72046:72088	428312	0	True				
ANR	428547	AndExpression	"PTR_GE ( pfree , bottom ) && PTR_LT ( pfree , top )"		428312	0		&&			
ANR	428548	CallExpression	"PTR_GE ( pfree , bottom )"		428312	0					
ANR	428549	Callee	PTR_GE		428312	0					
ANR	428550	Identifier	PTR_GE		428312	0					
ANR	428551	ArgumentList	pfree		428312	1					
ANR	428552	Argument	pfree		428312	0					
ANR	428553	Identifier	pfree		428312	0					
ANR	428554	Argument	bottom		428312	1					
ANR	428555	Identifier	bottom		428312	0					
ANR	428556	CallExpression	"PTR_LT ( pfree , top )"		428312	1					
ANR	428557	Callee	PTR_LT		428312	0					
ANR	428558	Identifier	PTR_LT		428312	0					
ANR	428559	ArgumentList	pfree		428312	1					
ANR	428560	Argument	pfree		428312	0					
ANR	428561	Identifier	pfree		428312	0					
ANR	428562	Argument	top		428312	1					
ANR	428563	Identifier	top		428312	0					
ANR	428564	CompoundStatement		58:61:1741:1741	428312	1					
ANR	428565	ExpressionStatement	* ppfprev = * ( obj_header_t * * ) pfree	2251:16:72157:72192	428312	0	True				
ANR	428566	AssignmentExpression	* ppfprev = * ( obj_header_t * * ) pfree		428312	0		=			
ANR	428567	UnaryOperationExpression	* ppfprev		428312	0					
ANR	428568	UnaryOperator	*		428312	0					
ANR	428569	Identifier	ppfprev		428312	1					
ANR	428570	UnaryOperationExpression	* ( obj_header_t * * ) pfree		428312	1					
ANR	428571	UnaryOperator	*		428312	0					
ANR	428572	CastExpression	( obj_header_t * * ) pfree		428312	1					
ANR	428573	CastTarget	obj_header_t * *		428312	0					
ANR	428574	Identifier	pfree		428312	1					
ANR	428575	ExpressionStatement	removed += obj_align_round ( pfree [ - 1 ] . o_size )	2252:16:72210:72254	428312	1	True				
ANR	428576	AssignmentExpression	removed += obj_align_round ( pfree [ - 1 ] . o_size )		428312	0		+=			
ANR	428577	Identifier	removed		428312	0					
ANR	428578	CallExpression	obj_align_round ( pfree [ - 1 ] . o_size )		428312	1					
ANR	428579	Callee	obj_align_round		428312	0					
ANR	428580	Identifier	obj_align_round		428312	0					
ANR	428581	ArgumentList	pfree [ - 1 ] . o_size		428312	1					
ANR	428582	Argument	pfree [ - 1 ] . o_size		428312	0					
ANR	428583	MemberAccess	pfree [ - 1 ] . o_size		428312	0					
ANR	428584	ArrayIndexing	pfree [ - 1 ]		428312	0					
ANR	428585	Identifier	pfree		428312	0					
ANR	428586	UnaryOperationExpression	- 1		428312	1					
ANR	428587	UnaryOperator	-		428312	0					
ANR	428588	PrimaryExpression	1		428312	1					
ANR	428589	Identifier	o_size		428312	1					
ANR	428590	IfStatement	if ( ! -- count )		428312	2					
ANR	428591	Condition	! -- count	2253:20:72276:72283	428312	0	True				
ANR	428592	UnaryOperationExpression	! -- count		428312	0					
ANR	428593	UnaryOperator	!		428312	0					
ANR	428594	UnaryExpression	-- count		428312	1					
ANR	428595	IncDec	--		428312	0					
ANR	428596	Identifier	count		428312	1					
ANR	428597	BreakStatement	break ;	2254:20:72306:72311	428312	1	True				
ANR	428598	ElseStatement	else		428312	0					
ANR	428599	ExpressionStatement	ppfprev = ( obj_header_t * * ) pfree	2256:16:72348:72381	428312	0	True				
ANR	428600	AssignmentExpression	ppfprev = ( obj_header_t * * ) pfree		428312	0		=			
ANR	428601	Identifier	ppfprev		428312	0					
ANR	428602	CastExpression	( obj_header_t * * ) pfree		428312	1					
ANR	428603	CastTarget	obj_header_t * *		428312	0					
ANR	428604	Identifier	pfree		428312	1					
ANR	428605	ExpressionStatement	mem -> lost . objects -= ( char * ) top - ( char * ) bottom - removed	2259:4:72403:72460	428312	8	True				
ANR	428606	AssignmentExpression	mem -> lost . objects -= ( char * ) top - ( char * ) bottom - removed		428312	0		-=			
ANR	428607	MemberAccess	mem -> lost . objects		428312	0					
ANR	428608	PtrMemberAccess	mem -> lost		428312	0					
ANR	428609	Identifier	mem		428312	0					
ANR	428610	Identifier	lost		428312	1					
ANR	428611	Identifier	objects		428312	1					
ANR	428612	AdditiveExpression	( char * ) top - ( char * ) bottom - removed		428312	1		-			
ANR	428613	CastExpression	( char * ) top		428312	0					
ANR	428614	CastTarget	char *		428312	0					
ANR	428615	Identifier	top		428312	1					
ANR	428616	AdditiveExpression	( char * ) bottom - removed		428312	1		-			
ANR	428617	CastExpression	( char * ) bottom		428312	0					
ANR	428618	CastTarget	char *		428312	0					
ANR	428619	Identifier	bottom		428312	1					
ANR	428620	Identifier	removed		428312	1					
ANR	428621	ReturnType	static void		428312	1					
ANR	428622	Identifier	remove_range_from_freelist		428312	2					
ANR	428623	ParameterList	"gs_ref_memory_t * mem , void * bottom , void * top"		428312	3					
ANR	428624	Parameter	gs_ref_memory_t * mem	2191:27:70302:70321	428312	0	True				
ANR	428625	ParameterType	gs_ref_memory_t *		428312	0					
ANR	428626	Identifier	mem		428312	1					
ANR	428627	Parameter	void * bottom	2191:49:70324:70335	428312	1	True				
ANR	428628	ParameterType	void *		428312	0					
ANR	428629	Identifier	bottom		428312	1					
ANR	428630	Parameter	void * top	2191:63:70338:70346	428312	2	True				
ANR	428631	ParameterType	void *		428312	0					
ANR	428632	Identifier	top		428312	1					
ANR	428633	CFGEntryNode	ENTRY		428312		True				
ANR	428634	CFGExitNode	EXIT		428312		True				
ANR	428635	InfiniteForNode	true		428312		True				
ANR	428636	Symbol	largest		428312						
ANR	428637	Symbol	cur		428312						
ANR	428638	Symbol	* num_free		428312						
ANR	428639	Symbol	obj_align_round		428312						
ANR	428640	Symbol	smallest		428312						
ANR	428641	Symbol	log2_obj_align_mod		428312						
ANR	428642	Symbol	pfree		428312						
ANR	428643	Symbol	mem -> freelists		428312						
ANR	428644	Symbol	LARGE_FREELIST_INDEX		428312						
ANR	428645	Symbol	num_freelists		428312						
ANR	428646	Symbol	mem -> lost . objects		428312						
ANR	428647	Symbol	* ( obj_header_t * * ) pfree		428312						
ANR	428648	Symbol	obj_size_round		428312						
ANR	428649	Symbol	PTR_LT		428312						
ANR	428650	Symbol	mem		428312						
ANR	428651	Symbol	top		428312						
ANR	428652	Symbol	cur -> o_size		428312						
ANR	428653	Symbol	* cur		428312						
ANR	428654	Symbol	* pfree		428312						
ANR	428655	Symbol	num_free		428312						
ANR	428656	Symbol	PTR_GE		428312						
ANR	428657	Symbol	bottom		428312						
ANR	428658	Symbol	pfree [ - 1 ] . o_size		428312						
ANR	428659	Symbol	count		428312						
ANR	428660	Symbol	i		428312						
ANR	428661	Symbol	* ppfprev		428312						
ANR	428662	Symbol	* i		428312						
ANR	428663	Symbol	ppfprev		428312						
ANR	428664	Symbol	size		428312						
ANR	428665	Symbol	removed		428312						
ANR	428666	Symbol	max_freelist_size		428312						
ANR	428667	Symbol	mem -> lost		428312						
ANR	428668	Symbol	obj_align_mask		428312						
ANR	428669	Symbol	* mem		428312						
ANR	428670	Function	trim_obj	2263:0:72513:75208							
ANR	428671	FunctionDef	"trim_obj (gs_ref_memory_t * mem , obj_header_t * obj , uint size , clump_t * cp)"		428670	0					
ANR	428672	CompoundStatement		2267:0:72703:75208	428670	0					
ANR	428673	IdentifierDeclStatement	uint rounded_size = obj_align_round ( size ) ;	2268:4:72709:72750	428670	0	True				
ANR	428674	IdentifierDecl	rounded_size = obj_align_round ( size )		428670	0					
ANR	428675	IdentifierDeclType	uint		428670	0					
ANR	428676	Identifier	rounded_size		428670	1					
ANR	428677	AssignmentExpression	rounded_size = obj_align_round ( size )		428670	2		=			
ANR	428678	Identifier	rounded_size		428670	0					
ANR	428679	CallExpression	obj_align_round ( size )		428670	1					
ANR	428680	Callee	obj_align_round		428670	0					
ANR	428681	Identifier	obj_align_round		428670	0					
ANR	428682	ArgumentList	size		428670	1					
ANR	428683	Argument	size		428670	0					
ANR	428684	Identifier	size		428670	0					
ANR	428685	IdentifierDeclStatement	obj_header_t * pre_obj = obj - 1 ;	2269:4:72756:72787	428670	1	True				
ANR	428686	IdentifierDecl	* pre_obj = obj - 1		428670	0					
ANR	428687	IdentifierDeclType	obj_header_t *		428670	0					
ANR	428688	Identifier	pre_obj		428670	1					
ANR	428689	AssignmentExpression	* pre_obj = obj - 1		428670	2		=			
ANR	428690	Identifier	pre_obj		428670	0					
ANR	428691	AdditiveExpression	obj - 1		428670	1		-			
ANR	428692	Identifier	obj		428670	0					
ANR	428693	PrimaryExpression	1		428670	1					
ANR	428694	IdentifierDeclStatement	obj_header_t * excess_pre = ( obj_header_t * ) ( ( char * ) obj + rounded_size ) ;	2270:4:72793:72862	428670	2	True				
ANR	428695	IdentifierDecl	* excess_pre = ( obj_header_t * ) ( ( char * ) obj + rounded_size )		428670	0					
ANR	428696	IdentifierDeclType	obj_header_t *		428670	0					
ANR	428697	Identifier	excess_pre		428670	1					
ANR	428698	AssignmentExpression	* excess_pre = ( obj_header_t * ) ( ( char * ) obj + rounded_size )		428670	2		=			
ANR	428699	Identifier	excess_pre		428670	0					
ANR	428700	CastExpression	( obj_header_t * ) ( ( char * ) obj + rounded_size )		428670	1					
ANR	428701	CastTarget	obj_header_t *		428670	0					
ANR	428702	AdditiveExpression	( char * ) obj + rounded_size		428670	1		+			
ANR	428703	CastExpression	( char * ) obj		428670	0					
ANR	428704	CastTarget	char *		428670	0					
ANR	428705	Identifier	obj		428670	1					
ANR	428706	Identifier	rounded_size		428670	1					
ANR	428707	IdentifierDeclStatement	uint old_rounded_size = obj_align_round ( pre_obj -> o_size ) ;	2271:4:72868:72924	428670	3	True				
ANR	428708	IdentifierDecl	old_rounded_size = obj_align_round ( pre_obj -> o_size )		428670	0					
ANR	428709	IdentifierDeclType	uint		428670	0					
ANR	428710	Identifier	old_rounded_size		428670	1					
ANR	428711	AssignmentExpression	old_rounded_size = obj_align_round ( pre_obj -> o_size )		428670	2		=			
ANR	428712	Identifier	old_rounded_size		428670	0					
ANR	428713	CallExpression	obj_align_round ( pre_obj -> o_size )		428670	1					
ANR	428714	Callee	obj_align_round		428670	0					
ANR	428715	Identifier	obj_align_round		428670	0					
ANR	428716	ArgumentList	pre_obj -> o_size		428670	1					
ANR	428717	Argument	pre_obj -> o_size		428670	0					
ANR	428718	PtrMemberAccess	pre_obj -> o_size		428670	0					
ANR	428719	Identifier	pre_obj		428670	0					
ANR	428720	Identifier	o_size		428670	1					
ANR	428721	IdentifierDeclStatement	uint excess_size = old_rounded_size - rounded_size - sizeof ( obj_header_t ) ;	2272:4:72930:73003	428670	4	True				
ANR	428722	IdentifierDecl	excess_size = old_rounded_size - rounded_size - sizeof ( obj_header_t )		428670	0					
ANR	428723	IdentifierDeclType	uint		428670	0					
ANR	428724	Identifier	excess_size		428670	1					
ANR	428725	AssignmentExpression	excess_size = old_rounded_size - rounded_size - sizeof ( obj_header_t )		428670	2		=			
ANR	428726	Identifier	excess_size		428670	0					
ANR	428727	AdditiveExpression	old_rounded_size - rounded_size - sizeof ( obj_header_t )		428670	1		-			
ANR	428728	Identifier	old_rounded_size		428670	0					
ANR	428729	AdditiveExpression	rounded_size - sizeof ( obj_header_t )		428670	1		-			
ANR	428730	Identifier	rounded_size		428670	0					
ANR	428731	SizeofExpression	sizeof ( obj_header_t )		428670	1					
ANR	428732	Sizeof	sizeof		428670	0					
ANR	428733	SizeofOperand	obj_header_t		428670	1					
ANR	428734	ExpressionStatement	pre_obj -> o_size = size	2275:4:73050:73072	428670	5	True				
ANR	428735	AssignmentExpression	pre_obj -> o_size = size		428670	0		=			
ANR	428736	PtrMemberAccess	pre_obj -> o_size		428670	0					
ANR	428737	Identifier	pre_obj		428670	0					
ANR	428738	Identifier	o_size		428670	1					
ANR	428739	Identifier	size		428670	1					
ANR	428740	IfStatement	if ( old_rounded_size == rounded_size )		428670	6					
ANR	428741	Condition	old_rounded_size == rounded_size	2276:8:73082:73113	428670	0	True				
ANR	428742	EqualityExpression	old_rounded_size == rounded_size		428670	0		==			
ANR	428743	Identifier	old_rounded_size		428670	0					
ANR	428744	Identifier	rounded_size		428670	1					
ANR	428745	ReturnStatement	return ;	2277:8:73124:73130	428670	1	True				
ANR	428746	IfStatement	if ( pre_obj -> o_alone )		428670	7					
ANR	428747	Condition	pre_obj -> o_alone	2282:8:73281:73296	428670	0	True				
ANR	428748	PtrMemberAccess	pre_obj -> o_alone		428670	0					
ANR	428749	Identifier	pre_obj		428670	0					
ANR	428750	Identifier	o_alone		428670	1					
ANR	428751	CompoundStatement		16:26:595:595	428670	1					
ANR	428752	IfStatement	if ( ! cp )		428670	0					
ANR	428753	Condition	! cp	2283:12:73313:73315	428670	0	True				
ANR	428754	UnaryOperationExpression	! cp		428670	0					
ANR	428755	UnaryOperator	!		428670	0					
ANR	428756	Identifier	cp		428670	1					
ANR	428757	CompoundStatement		17:17:614:614	428670	1					
ANR	428758	ExpressionStatement	mem -> cfreed . memory = mem	2284:12:73332:73356	428670	0	True				
ANR	428759	AssignmentExpression	mem -> cfreed . memory = mem		428670	0		=			
ANR	428760	MemberAccess	mem -> cfreed . memory		428670	0					
ANR	428761	PtrMemberAccess	mem -> cfreed		428670	0					
ANR	428762	Identifier	mem		428670	0					
ANR	428763	Identifier	cfreed		428670	1					
ANR	428764	Identifier	memory		428670	1					
ANR	428765	Identifier	mem		428670	1					
ANR	428766	IfStatement	"if ( clump_locate ( obj , & mem -> cfreed ) )"		428670	1					
ANR	428767	Condition	"clump_locate ( obj , & mem -> cfreed )"	2285:16:73374:73404	428670	0	True				
ANR	428768	CallExpression	"clump_locate ( obj , & mem -> cfreed )"		428670	0					
ANR	428769	Callee	clump_locate		428670	0					
ANR	428770	Identifier	clump_locate		428670	0					
ANR	428771	ArgumentList	obj		428670	1					
ANR	428772	Argument	obj		428670	0					
ANR	428773	Identifier	obj		428670	0					
ANR	428774	Argument	& mem -> cfreed		428670	1					
ANR	428775	UnaryOperationExpression	& mem -> cfreed		428670	0					
ANR	428776	UnaryOperator	&		428670	0					
ANR	428777	PtrMemberAccess	mem -> cfreed		428670	1					
ANR	428778	Identifier	mem		428670	0					
ANR	428779	Identifier	cfreed		428670	1					
ANR	428780	CompoundStatement		19:49:703:703	428670	1					
ANR	428781	ExpressionStatement	cp = mem -> cfreed . cp	2286:16:73425:73444	428670	0	True				
ANR	428782	AssignmentExpression	cp = mem -> cfreed . cp		428670	0		=			
ANR	428783	Identifier	cp		428670	0					
ANR	428784	MemberAccess	mem -> cfreed . cp		428670	1					
ANR	428785	PtrMemberAccess	mem -> cfreed		428670	0					
ANR	428786	Identifier	mem		428670	0					
ANR	428787	Identifier	cfreed		428670	1					
ANR	428788	Identifier	cp		428670	1					
ANR	428789	IfStatement	if ( cp )		428670	1					
ANR	428790	Condition	cp	2289:12:73482:73483	428670	0	True				
ANR	428791	Identifier	cp		428670	0					
ANR	428792	CompoundStatement		23:16:782:782	428670	1					
ANR	428793	IfStatement	if ( cp -> cbot != ( byte * ) obj + old_rounded_size )		428670	0					
ANR	428794	Condition	cp -> cbot != ( byte * ) obj + old_rounded_size	2291:16:73517:73558	428670	0	True				
ANR	428795	EqualityExpression	cp -> cbot != ( byte * ) obj + old_rounded_size		428670	0		!=			
ANR	428796	PtrMemberAccess	cp -> cbot		428670	0					
ANR	428797	Identifier	cp		428670	0					
ANR	428798	Identifier	cbot		428670	1					
ANR	428799	AdditiveExpression	( byte * ) obj + old_rounded_size		428670	1		+			
ANR	428800	CastExpression	( byte * ) obj		428670	0					
ANR	428801	CastTarget	byte *		428670	0					
ANR	428802	Identifier	obj		428670	1					
ANR	428803	Identifier	old_rounded_size		428670	1					
ANR	428804	CompoundStatement		25:60:857:857	428670	1					
ANR	428805	ExpressionStatement	"lprintf3 ( ""resizing 0x%lx, old size %u, new size %u, cbot wrong!\\n"" , ( ulong ) obj , old_rounded_size , size )"	2292:16:73579:73707	428670	0	True				
ANR	428806	CallExpression	"lprintf3 ( ""resizing 0x%lx, old size %u, new size %u, cbot wrong!\\n"" , ( ulong ) obj , old_rounded_size , size )"		428670	0					
ANR	428807	Callee	lprintf3		428670	0					
ANR	428808	Identifier	lprintf3		428670	0					
ANR	428809	ArgumentList	"""resizing 0x%lx, old size %u, new size %u, cbot wrong!\\n"""		428670	1					
ANR	428810	Argument	"""resizing 0x%lx, old size %u, new size %u, cbot wrong!\\n"""		428670	0					
ANR	428811	PrimaryExpression	"""resizing 0x%lx, old size %u, new size %u, cbot wrong!\\n"""		428670	0					
ANR	428812	Argument	( ulong ) obj		428670	1					
ANR	428813	CastExpression	( ulong ) obj		428670	0					
ANR	428814	CastTarget	ulong		428670	0					
ANR	428815	Identifier	obj		428670	1					
ANR	428816	Argument	old_rounded_size		428670	2					
ANR	428817	Identifier	old_rounded_size		428670	0					
ANR	428818	Argument	size		428670	3					
ANR	428819	Identifier	size		428670	0					
ANR	428820	ElseStatement	else		428670	0					
ANR	428821	CompoundStatement		31:16:1078:1078	428670	0					
ANR	428822	ExpressionStatement	cp -> cbot = ( byte * ) excess_pre	2298:20:73804:73833	428670	0	True				
ANR	428823	AssignmentExpression	cp -> cbot = ( byte * ) excess_pre		428670	0		=			
ANR	428824	PtrMemberAccess	cp -> cbot		428670	0					
ANR	428825	Identifier	cp		428670	0					
ANR	428826	Identifier	cbot		428670	1					
ANR	428827	CastExpression	( byte * ) excess_pre		428670	1					
ANR	428828	CastTarget	byte *		428670	0					
ANR	428829	Identifier	excess_pre		428670	1					
ANR	428830	ReturnStatement	return ;	2299:20:73855:73861	428670	1	True				
ANR	428831	ExpressionStatement	pre_obj -> o_pad = 0	2306:8:74035:74053	428670	2	True				
ANR	428832	AssignmentExpression	pre_obj -> o_pad = 0		428670	0		=			
ANR	428833	PtrMemberAccess	pre_obj -> o_pad		428670	0					
ANR	428834	Identifier	pre_obj		428670	0					
ANR	428835	Identifier	o_pad		428670	1					
ANR	428836	PrimaryExpression	0		428670	1					
ANR	428837	ExpressionStatement	pre_obj -> o_alone = 0	2307:8:74063:74083	428670	3	True				
ANR	428838	AssignmentExpression	pre_obj -> o_alone = 0		428670	0		=			
ANR	428839	PtrMemberAccess	pre_obj -> o_alone		428670	0					
ANR	428840	Identifier	pre_obj		428670	0					
ANR	428841	Identifier	o_alone		428670	1					
ANR	428842	PrimaryExpression	0		428670	1					
ANR	428843	ExpressionStatement	excess_pre -> o_type = & st_free	2310:4:74131:74160	428670	8	True				
ANR	428844	AssignmentExpression	excess_pre -> o_type = & st_free		428670	0		=			
ANR	428845	PtrMemberAccess	excess_pre -> o_type		428670	0					
ANR	428846	Identifier	excess_pre		428670	0					
ANR	428847	Identifier	o_type		428670	1					
ANR	428848	UnaryOperationExpression	& st_free		428670	1					
ANR	428849	UnaryOperator	&		428670	0					
ANR	428850	Identifier	st_free		428670	1					
ANR	428851	ExpressionStatement	excess_pre -> o_size = excess_size	2311:4:74190:74222	428670	9	True				
ANR	428852	AssignmentExpression	excess_pre -> o_size = excess_size		428670	0		=			
ANR	428853	PtrMemberAccess	excess_pre -> o_size		428670	0					
ANR	428854	Identifier	excess_pre		428670	0					
ANR	428855	Identifier	o_size		428670	1					
ANR	428856	Identifier	excess_size		428670	1					
ANR	428857	ExpressionStatement	excess_pre -> o_pad = 0	2312:4:74228:74249	428670	10	True				
ANR	428858	AssignmentExpression	excess_pre -> o_pad = 0		428670	0		=			
ANR	428859	PtrMemberAccess	excess_pre -> o_pad		428670	0					
ANR	428860	Identifier	excess_pre		428670	0					
ANR	428861	Identifier	o_pad		428670	1					
ANR	428862	PrimaryExpression	0		428670	1					
ANR	428863	ExpressionStatement	excess_pre -> o_alone = 0	2313:4:74255:74278	428670	11	True				
ANR	428864	AssignmentExpression	excess_pre -> o_alone = 0		428670	0		=			
ANR	428865	PtrMemberAccess	excess_pre -> o_alone		428670	0					
ANR	428866	Identifier	excess_pre		428670	0					
ANR	428867	Identifier	o_alone		428670	1					
ANR	428868	PrimaryExpression	0		428670	1					
ANR	428869	IfStatement	if ( excess_size >= obj_align_mod )		428670	12					
ANR	428870	Condition	excess_size >= obj_align_mod	2314:8:74288:74315	428670	0	True				
ANR	428871	RelationalExpression	excess_size >= obj_align_mod		428670	0		>=			
ANR	428872	Identifier	excess_size		428670	0					
ANR	428873	Identifier	obj_align_mod		428670	1					
ANR	428874	CompoundStatement		50:8:1670:1688	428670	1					
ANR	428875	IdentifierDeclStatement	obj_header_t * * pfl ;	2316:8:74374:74392	428670	0	True				
ANR	428876	IdentifierDecl	* * pfl		428670	0					
ANR	428877	IdentifierDeclType	obj_header_t * *		428670	0					
ANR	428878	Identifier	pfl		428670	1					
ANR	428879	IfStatement	if ( mem -> cc && ( byte * ) excess_pre >= mem -> cc -> int_freed_top )		428670	1					
ANR	428880	Condition	mem -> cc && ( byte * ) excess_pre >= mem -> cc -> int_freed_top	2318:12:74407:74461	428670	0	True				
ANR	428881	AndExpression	mem -> cc && ( byte * ) excess_pre >= mem -> cc -> int_freed_top		428670	0		&&			
ANR	428882	PtrMemberAccess	mem -> cc		428670	0					
ANR	428883	Identifier	mem		428670	0					
ANR	428884	Identifier	cc		428670	1					
ANR	428885	RelationalExpression	( byte * ) excess_pre >= mem -> cc -> int_freed_top		428670	1		>=			
ANR	428886	CastExpression	( byte * ) excess_pre		428670	0					
ANR	428887	CastTarget	byte *		428670	0					
ANR	428888	Identifier	excess_pre		428670	1					
ANR	428889	PtrMemberAccess	mem -> cc -> int_freed_top		428670	1					
ANR	428890	PtrMemberAccess	mem -> cc		428670	0					
ANR	428891	Identifier	mem		428670	0					
ANR	428892	Identifier	cc		428670	1					
ANR	428893	Identifier	int_freed_top		428670	1					
ANR	428894	ExpressionStatement	mem -> cc -> int_freed_top = ( byte * ) excess_pre + excess_size	2319:12:74476:74533	428670	1	True				
ANR	428895	AssignmentExpression	mem -> cc -> int_freed_top = ( byte * ) excess_pre + excess_size		428670	0		=			
ANR	428896	PtrMemberAccess	mem -> cc -> int_freed_top		428670	0					
ANR	428897	PtrMemberAccess	mem -> cc		428670	0					
ANR	428898	Identifier	mem		428670	0					
ANR	428899	Identifier	cc		428670	1					
ANR	428900	Identifier	int_freed_top		428670	1					
ANR	428901	AdditiveExpression	( byte * ) excess_pre + excess_size		428670	1		+			
ANR	428902	CastExpression	( byte * ) excess_pre		428670	0					
ANR	428903	CastTarget	byte *		428670	0					
ANR	428904	Identifier	excess_pre		428670	1					
ANR	428905	Identifier	excess_size		428670	1					
ANR	428906	IfStatement	if ( excess_size <= max_freelist_size )		428670	2					
ANR	428907	Condition	excess_size <= max_freelist_size	2320:12:74547:74578	428670	0	True				
ANR	428908	RelationalExpression	excess_size <= max_freelist_size		428670	0		<=			
ANR	428909	Identifier	excess_size		428670	0					
ANR	428910	Identifier	max_freelist_size		428670	1					
ANR	428911	ExpressionStatement	pfl = & mem -> freelists [ ( excess_size + obj_align_mask ) >> log2_obj_align_mod ]	2321:12:74593:74701	428670	1	True				
ANR	428912	AssignmentExpression	pfl = & mem -> freelists [ ( excess_size + obj_align_mask ) >> log2_obj_align_mod ]		428670	0		=			
ANR	428913	Identifier	pfl		428670	0					
ANR	428914	UnaryOperationExpression	& mem -> freelists [ ( excess_size + obj_align_mask ) >> log2_obj_align_mod ]		428670	1					
ANR	428915	UnaryOperator	&		428670	0					
ANR	428916	ArrayIndexing	mem -> freelists [ ( excess_size + obj_align_mask ) >> log2_obj_align_mod ]		428670	1					
ANR	428917	PtrMemberAccess	mem -> freelists		428670	0					
ANR	428918	Identifier	mem		428670	0					
ANR	428919	Identifier	freelists		428670	1					
ANR	428920	ShiftExpression	( excess_size + obj_align_mask ) >> log2_obj_align_mod		428670	1		>>			
ANR	428921	AdditiveExpression	excess_size + obj_align_mask		428670	0		+			
ANR	428922	Identifier	excess_size		428670	0					
ANR	428923	Identifier	obj_align_mask		428670	1					
ANR	428924	Identifier	log2_obj_align_mod		428670	1					
ANR	428925	ElseStatement	else		428670	0					
ANR	428926	CompoundStatement		58:12:2026:2074	428670	0					
ANR	428927	IdentifierDeclStatement	uint rounded_size = obj_align_round ( excess_size ) ;	2324:12:74730:74778	428670	0	True				
ANR	428928	IdentifierDecl	rounded_size = obj_align_round ( excess_size )		428670	0					
ANR	428929	IdentifierDeclType	uint		428670	0					
ANR	428930	Identifier	rounded_size		428670	1					
ANR	428931	AssignmentExpression	rounded_size = obj_align_round ( excess_size )		428670	2		=			
ANR	428932	Identifier	rounded_size		428670	0					
ANR	428933	CallExpression	obj_align_round ( excess_size )		428670	1					
ANR	428934	Callee	obj_align_round		428670	0					
ANR	428935	Identifier	obj_align_round		428670	0					
ANR	428936	ArgumentList	excess_size		428670	1					
ANR	428937	Argument	excess_size		428670	0					
ANR	428938	Identifier	excess_size		428670	0					
ANR	428939	ExpressionStatement	pfl = & mem -> freelists [ LARGE_FREELIST_INDEX ]	2326:12:74793:74836	428670	1	True				
ANR	428940	AssignmentExpression	pfl = & mem -> freelists [ LARGE_FREELIST_INDEX ]		428670	0		=			
ANR	428941	Identifier	pfl		428670	0					
ANR	428942	UnaryOperationExpression	& mem -> freelists [ LARGE_FREELIST_INDEX ]		428670	1					
ANR	428943	UnaryOperator	&		428670	0					
ANR	428944	ArrayIndexing	mem -> freelists [ LARGE_FREELIST_INDEX ]		428670	1					
ANR	428945	PtrMemberAccess	mem -> freelists		428670	0					
ANR	428946	Identifier	mem		428670	0					
ANR	428947	Identifier	freelists		428670	1					
ANR	428948	Identifier	LARGE_FREELIST_INDEX		428670	1					
ANR	428949	IfStatement	if ( rounded_size > mem -> largest_free_size )		428670	2					
ANR	428950	Condition	rounded_size > mem -> largest_free_size	2327:16:74854:74890	428670	0	True				
ANR	428951	RelationalExpression	rounded_size > mem -> largest_free_size		428670	0		>			
ANR	428952	Identifier	rounded_size		428670	0					
ANR	428953	PtrMemberAccess	mem -> largest_free_size		428670	1					
ANR	428954	Identifier	mem		428670	0					
ANR	428955	Identifier	largest_free_size		428670	1					
ANR	428956	ExpressionStatement	mem -> largest_free_size = rounded_size	2328:16:74909:74946	428670	1	True				
ANR	428957	AssignmentExpression	mem -> largest_free_size = rounded_size		428670	0		=			
ANR	428958	PtrMemberAccess	mem -> largest_free_size		428670	0					
ANR	428959	Identifier	mem		428670	0					
ANR	428960	Identifier	largest_free_size		428670	1					
ANR	428961	Identifier	rounded_size		428670	1					
ANR	428962	ExpressionStatement	* ( obj_header_t * * ) ( excess_pre + 1 ) = * pfl	2330:8:74966:75008	428670	3	True				
ANR	428963	AssignmentExpression	* ( obj_header_t * * ) ( excess_pre + 1 ) = * pfl		428670	0		=			
ANR	428964	UnaryOperationExpression	* ( obj_header_t * * ) ( excess_pre + 1 )		428670	0					
ANR	428965	UnaryOperator	*		428670	0					
ANR	428966	CastExpression	( obj_header_t * * ) ( excess_pre + 1 )		428670	1					
ANR	428967	CastTarget	obj_header_t * *		428670	0					
ANR	428968	AdditiveExpression	excess_pre + 1		428670	1		+			
ANR	428969	Identifier	excess_pre		428670	0					
ANR	428970	PrimaryExpression	1		428670	1					
ANR	428971	UnaryOperationExpression	* pfl		428670	1					
ANR	428972	UnaryOperator	*		428670	0					
ANR	428973	Identifier	pfl		428670	1					
ANR	428974	ExpressionStatement	* pfl = excess_pre + 1	2331:8:75018:75039	428670	4	True				
ANR	428975	AssignmentExpression	* pfl = excess_pre + 1		428670	0		=			
ANR	428976	UnaryOperationExpression	* pfl		428670	0					
ANR	428977	UnaryOperator	*		428670	0					
ANR	428978	Identifier	pfl		428670	1					
ANR	428979	AdditiveExpression	excess_pre + 1		428670	1		+			
ANR	428980	Identifier	excess_pre		428670	0					
ANR	428981	PrimaryExpression	1		428670	1					
ANR	428982	ExpressionStatement	mem -> cfreed . memory = mem	2332:8:75049:75073	428670	5	True				
ANR	428983	AssignmentExpression	mem -> cfreed . memory = mem		428670	0		=			
ANR	428984	MemberAccess	mem -> cfreed . memory		428670	0					
ANR	428985	PtrMemberAccess	mem -> cfreed		428670	0					
ANR	428986	Identifier	mem		428670	0					
ANR	428987	Identifier	cfreed		428670	1					
ANR	428988	Identifier	memory		428670	1					
ANR	428989	Identifier	mem		428670	1					
ANR	428990	ElseStatement	else		428670	0					
ANR	428991	CompoundStatement		67:11:2382:2382	428670	0					
ANR	428992	ExpressionStatement	mem -> lost . objects += excess_size + sizeof ( obj_header_t )	2335:8:75145:75200	428670	0	True				
ANR	428993	AssignmentExpression	mem -> lost . objects += excess_size + sizeof ( obj_header_t )		428670	0		+=			
ANR	428994	MemberAccess	mem -> lost . objects		428670	0					
ANR	428995	PtrMemberAccess	mem -> lost		428670	0					
ANR	428996	Identifier	mem		428670	0					
ANR	428997	Identifier	lost		428670	1					
ANR	428998	Identifier	objects		428670	1					
ANR	428999	AdditiveExpression	excess_size + sizeof ( obj_header_t )		428670	1		+			
ANR	429000	Identifier	excess_size		428670	0					
ANR	429001	SizeofExpression	sizeof ( obj_header_t )		428670	1					
ANR	429002	Sizeof	sizeof		428670	0					
ANR	429003	SizeofOperand	obj_header_t		428670	1					
ANR	429004	ReturnType	static void		428670	1					
ANR	429005	Identifier	trim_obj		428670	2					
ANR	429006	ParameterList	"gs_ref_memory_t * mem , obj_header_t * obj , uint size , clump_t * cp"		428670	3					
ANR	429007	Parameter	gs_ref_memory_t * mem	2264:9:72534:72553	428670	0	True				
ANR	429008	ParameterType	gs_ref_memory_t *		428670	0					
ANR	429009	Identifier	mem		428670	1					
ANR	429010	Parameter	obj_header_t * obj	2264:31:72556:72572	428670	1	True				
ANR	429011	ParameterType	obj_header_t *		428670	0					
ANR	429012	Identifier	obj		428670	1					
ANR	429013	Parameter	uint size	2264:50:72575:72583	428670	2	True				
ANR	429014	ParameterType	uint		428670	0					
ANR	429015	Identifier	size		428670	1					
ANR	429016	Parameter	clump_t * cp	2264:61:72586:72596	428670	3	True				
ANR	429017	ParameterType	clump_t *		428670	0					
ANR	429018	Identifier	cp		428670	1					
ANR	429019	CFGEntryNode	ENTRY		428670		True				
ANR	429020	CFGExitNode	EXIT		428670		True				
ANR	429021	Symbol	pre_obj -> o_alone		428670						
ANR	429022	Symbol	old_rounded_size		428670						
ANR	429023	Symbol	excess_size		428670						
ANR	429024	Symbol	obj_align_round		428670						
ANR	429025	Symbol	mem -> freelists		428670						
ANR	429026	Symbol	log2_obj_align_mod		428670						
ANR	429027	Symbol	& st_free		428670						
ANR	429028	Symbol	excess_pre -> o_type		428670						
ANR	429029	Symbol	excess_pre -> o_pad		428670						
ANR	429030	Symbol	* mem -> cc		428670						
ANR	429031	Symbol	LARGE_FREELIST_INDEX		428670						
ANR	429032	Symbol	mem -> cfreed . cp		428670						
ANR	429033	Symbol	mem -> lost . objects		428670						
ANR	429034	Symbol	excess_pre -> o_size		428670						
ANR	429035	Symbol	rounded_size		428670						
ANR	429036	Symbol	excess_pre -> o_alone		428670						
ANR	429037	Symbol	pre_obj -> o_pad		428670						
ANR	429038	Symbol	pre_obj -> o_size		428670						
ANR	429039	Symbol	cp -> cbot		428670						
ANR	429040	Symbol	mem		428670						
ANR	429041	Symbol	mem -> cc		428670						
ANR	429042	Symbol	mem -> cfreed . memory		428670						
ANR	429043	Symbol	obj_align_mod		428670						
ANR	429044	Symbol	* pfl		428670						
ANR	429045	Symbol	pre_obj		428670						
ANR	429046	Symbol	* ( obj_header_t * * ) ( excess_pre + 1 )		428670						
ANR	429047	Symbol	* * mem		428670						
ANR	429048	Symbol	mem -> cc -> int_freed_top		428670						
ANR	429049	Symbol	mem -> largest_free_size		428670						
ANR	429050	Symbol	& mem -> cfreed		428670						
ANR	429051	Symbol	cp		428670						
ANR	429052	Symbol	clump_locate		428670						
ANR	429053	Symbol	excess_pre		428670						
ANR	429054	Symbol	* cp		428670						
ANR	429055	Symbol	mem -> cfreed		428670						
ANR	429056	Symbol	size		428670						
ANR	429057	Symbol	max_freelist_size		428670						
ANR	429058	Symbol	mem -> lost		428670						
ANR	429059	Symbol	obj		428670						
ANR	429060	Symbol	pfl		428670						
ANR	429061	Symbol	* pre_obj		428670						
ANR	429062	Symbol	obj_align_mask		428670						
ANR	429063	Symbol	* excess_pre		428670						
ANR	429064	Symbol	* mem		428670						
ANR	429065	Function	i_register_root	2342:0:75281:76030							
ANR	429066	FunctionDef	"i_register_root (gs_memory_t * mem , gs_gc_root_t * rp , gs_ptr_type_t ptype , void * * up , client_name_t cname)"		429065	0					
ANR	429067	CompoundStatement		2345:0:75415:76030	429065	0					
ANR	429068	Statement	gs_ref_memory_t	2346:4:75421:75435	429065	0	True				
ANR	429069	Statement	*	2346:20:75437:75437	429065	1	True				
ANR	429070	Statement	const	2346:22:75439:75443	429065	2	True				
ANR	429071	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	2346:28:75445:75474	429065	3	True				
ANR	429072	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		429065	0		=			
ANR	429073	Identifier	imem		429065	0					
ANR	429074	CastExpression	( gs_ref_memory_t * ) mem		429065	1					
ANR	429075	CastTarget	gs_ref_memory_t *		429065	0					
ANR	429076	Identifier	mem		429065	1					
ANR	429077	IfStatement	if ( rp == NULL )		429065	4					
ANR	429078	Condition	rp == NULL	2348:8:75485:75494	429065	0	True				
ANR	429079	EqualityExpression	rp == NULL		429065	0		==			
ANR	429080	Identifier	rp		429065	0					
ANR	429081	Identifier	NULL		429065	1					
ANR	429082	CompoundStatement		4:20:81:81	429065	1					
ANR	429083	ExpressionStatement	"rp = gs_raw_alloc_struct_immovable ( imem -> non_gc_memory , & st_gc_root_t , ""i_register_root"" )"	2349:8:75507:75639	429065	0	True				
ANR	429084	AssignmentExpression	"rp = gs_raw_alloc_struct_immovable ( imem -> non_gc_memory , & st_gc_root_t , ""i_register_root"" )"		429065	0		=			
ANR	429085	Identifier	rp		429065	0					
ANR	429086	CallExpression	"gs_raw_alloc_struct_immovable ( imem -> non_gc_memory , & st_gc_root_t , ""i_register_root"" )"		429065	1					
ANR	429087	Callee	gs_raw_alloc_struct_immovable		429065	0					
ANR	429088	Identifier	gs_raw_alloc_struct_immovable		429065	0					
ANR	429089	ArgumentList	imem -> non_gc_memory		429065	1					
ANR	429090	Argument	imem -> non_gc_memory		429065	0					
ANR	429091	PtrMemberAccess	imem -> non_gc_memory		429065	0					
ANR	429092	Identifier	imem		429065	0					
ANR	429093	Identifier	non_gc_memory		429065	1					
ANR	429094	Argument	& st_gc_root_t		429065	1					
ANR	429095	UnaryOperationExpression	& st_gc_root_t		429065	0					
ANR	429096	UnaryOperator	&		429065	0					
ANR	429097	Identifier	st_gc_root_t		429065	1					
ANR	429098	Argument	"""i_register_root"""		429065	2					
ANR	429099	PrimaryExpression	"""i_register_root"""		429065	0					
ANR	429100	IfStatement	if ( rp == 0 )		429065	1					
ANR	429101	Condition	rp == 0	2351:12:75653:75659	429065	0	True				
ANR	429102	EqualityExpression	rp == 0		429065	0		==			
ANR	429103	Identifier	rp		429065	0					
ANR	429104	PrimaryExpression	0		429065	1					
ANR	429105	ExpressionStatement	return_error ( gs_error_VMerror )	2352:12:75674:75704	429065	1	True				
ANR	429106	CallExpression	return_error ( gs_error_VMerror )		429065	0					
ANR	429107	Callee	return_error		429065	0					
ANR	429108	Identifier	return_error		429065	0					
ANR	429109	ArgumentList	gs_error_VMerror		429065	1					
ANR	429110	Argument	gs_error_VMerror		429065	0					
ANR	429111	Identifier	gs_error_VMerror		429065	0					
ANR	429112	ExpressionStatement	rp -> free_on_unregister = true	2353:8:75714:75743	429065	2	True				
ANR	429113	AssignmentExpression	rp -> free_on_unregister = true		429065	0		=			
ANR	429114	PtrMemberAccess	rp -> free_on_unregister		429065	0					
ANR	429115	Identifier	rp		429065	0					
ANR	429116	Identifier	free_on_unregister		429065	1					
ANR	429117	Identifier	true		429065	1					
ANR	429118	ElseStatement	else		429065	0					
ANR	429119	ExpressionStatement	rp -> free_on_unregister = false	2355:8:75764:75794	429065	0	True				
ANR	429120	AssignmentExpression	rp -> free_on_unregister = false		429065	0		=			
ANR	429121	PtrMemberAccess	rp -> free_on_unregister		429065	0					
ANR	429122	Identifier	rp		429065	0					
ANR	429123	Identifier	free_on_unregister		429065	1					
ANR	429124	Identifier	false		429065	1					
ANR	429125	ExpressionStatement	"if_debug3m ( '8' , mem , ""[8]register root(%s) 0x%lx -> 0x%lx\\n"" , client_name_string ( cname ) , ( ulong ) rp , ( ulong ) up )"	2356:4:75800:75925	429065	5	True				
ANR	429126	CallExpression	"if_debug3m ( '8' , mem , ""[8]register root(%s) 0x%lx -> 0x%lx\\n"" , client_name_string ( cname ) , ( ulong ) rp , ( ulong ) up )"		429065	0					
ANR	429127	Callee	if_debug3m		429065	0					
ANR	429128	Identifier	if_debug3m		429065	0					
ANR	429129	ArgumentList	'8'		429065	1					
ANR	429130	Argument	'8'		429065	0					
ANR	429131	PrimaryExpression	'8'		429065	0					
ANR	429132	Argument	mem		429065	1					
ANR	429133	Identifier	mem		429065	0					
ANR	429134	Argument	"""[8]register root(%s) 0x%lx -> 0x%lx\\n"""		429065	2					
ANR	429135	PrimaryExpression	"""[8]register root(%s) 0x%lx -> 0x%lx\\n"""		429065	0					
ANR	429136	Argument	client_name_string ( cname )		429065	3					
ANR	429137	CallExpression	client_name_string ( cname )		429065	0					
ANR	429138	Callee	client_name_string		429065	0					
ANR	429139	Identifier	client_name_string		429065	0					
ANR	429140	ArgumentList	cname		429065	1					
ANR	429141	Argument	cname		429065	0					
ANR	429142	Identifier	cname		429065	0					
ANR	429143	Argument	( ulong ) rp		429065	4					
ANR	429144	CastExpression	( ulong ) rp		429065	0					
ANR	429145	CastTarget	ulong		429065	0					
ANR	429146	Identifier	rp		429065	1					
ANR	429147	Argument	( ulong ) up		429065	5					
ANR	429148	CastExpression	( ulong ) up		429065	0					
ANR	429149	CastTarget	ulong		429065	0					
ANR	429150	Identifier	up		429065	1					
ANR	429151	ExpressionStatement	rp -> ptype = ptype	2358:4:75931:75948	429065	6	True				
ANR	429152	AssignmentExpression	rp -> ptype = ptype		429065	0		=			
ANR	429153	PtrMemberAccess	rp -> ptype		429065	0					
ANR	429154	Identifier	rp		429065	0					
ANR	429155	Identifier	ptype		429065	1					
ANR	429156	Identifier	ptype		429065	1					
ANR	429157	ExpressionStatement	rp -> p = up	2359:4:75954:75964	429065	7	True				
ANR	429158	AssignmentExpression	rp -> p = up		429065	0		=			
ANR	429159	PtrMemberAccess	rp -> p		429065	0					
ANR	429160	Identifier	rp		429065	0					
ANR	429161	Identifier	p		429065	1					
ANR	429162	Identifier	up		429065	1					
ANR	429163	ExpressionStatement	rp -> next = imem -> roots	2360:4:75970:75992	429065	8	True				
ANR	429164	AssignmentExpression	rp -> next = imem -> roots		429065	0		=			
ANR	429165	PtrMemberAccess	rp -> next		429065	0					
ANR	429166	Identifier	rp		429065	0					
ANR	429167	Identifier	next		429065	1					
ANR	429168	PtrMemberAccess	imem -> roots		429065	1					
ANR	429169	Identifier	imem		429065	0					
ANR	429170	Identifier	roots		429065	1					
ANR	429171	ExpressionStatement	imem -> roots = rp	2361:4:75998:76014	429065	9	True				
ANR	429172	AssignmentExpression	imem -> roots = rp		429065	0		=			
ANR	429173	PtrMemberAccess	imem -> roots		429065	0					
ANR	429174	Identifier	imem		429065	0					
ANR	429175	Identifier	roots		429065	1					
ANR	429176	Identifier	rp		429065	1					
ANR	429177	ReturnStatement	return 0 ;	2362:4:76020:76028	429065	10	True				
ANR	429178	PrimaryExpression	0		429065	0					
ANR	429179	ReturnType	static int		429065	1					
ANR	429180	Identifier	i_register_root		429065	2					
ANR	429181	ParameterList	"gs_memory_t * mem , gs_gc_root_t * rp , gs_ptr_type_t ptype , void * * up , client_name_t cname"		429065	3					
ANR	429182	Parameter	gs_memory_t * mem	2343:16:75308:75324	429065	0	True				
ANR	429183	ParameterType	gs_memory_t *		429065	0					
ANR	429184	Identifier	mem		429065	1					
ANR	429185	Parameter	gs_gc_root_t * rp	2343:35:75327:75343	429065	1	True				
ANR	429186	ParameterType	gs_gc_root_t *		429065	0					
ANR	429187	Identifier	rp		429065	1					
ANR	429188	Parameter	gs_ptr_type_t ptype	2343:54:75346:75364	429065	2	True				
ANR	429189	ParameterType	gs_ptr_type_t		429065	0					
ANR	429190	Identifier	ptype		429065	1					
ANR	429191	Parameter	void * * up	2344:16:75383:75391	429065	3	True				
ANR	429192	ParameterType	void * *		429065	0					
ANR	429193	Identifier	up		429065	1					
ANR	429194	Parameter	client_name_t cname	2344:27:75394:75412	429065	4	True				
ANR	429195	ParameterType	client_name_t		429065	0					
ANR	429196	Identifier	cname		429065	1					
ANR	429197	CFGEntryNode	ENTRY		429065		True				
ANR	429198	CFGExitNode	EXIT		429065		True				
ANR	429199	Symbol	NULL		429065						
ANR	429200	Symbol	rp -> next		429065						
ANR	429201	Symbol	* rp		429065						
ANR	429202	Symbol	rp -> ptype		429065						
ANR	429203	Symbol	cname		429065						
ANR	429204	Symbol	false		429065						
ANR	429205	Symbol	ptype		429065						
ANR	429206	Symbol	imem -> roots		429065						
ANR	429207	Symbol	gs_error_VMerror		429065						
ANR	429208	Symbol	rp -> free_on_unregister		429065						
ANR	429209	Symbol	mem		429065						
ANR	429210	Symbol	gs_raw_alloc_struct_immovable		429065						
ANR	429211	Symbol	imem -> non_gc_memory		429065						
ANR	429212	Symbol	& st_gc_root_t		429065						
ANR	429213	Symbol	true		429065						
ANR	429214	Symbol	client_name_string		429065						
ANR	429215	Symbol	up		429065						
ANR	429216	Symbol	imem		429065						
ANR	429217	Symbol	* imem		429065						
ANR	429218	Symbol	rp		429065						
ANR	429219	Symbol	rp -> p		429065						
ANR	429220	Function	i_unregister_root	2366:0:76058:76541							
ANR	429221	FunctionDef	"i_unregister_root (gs_memory_t * mem , gs_gc_root_t * rp , client_name_t cname)"		429220	0					
ANR	429222	CompoundStatement		2368:0:76147:76541	429220	0					
ANR	429223	Statement	gs_ref_memory_t	2369:4:76153:76167	429220	0	True				
ANR	429224	Statement	*	2369:20:76169:76169	429220	1	True				
ANR	429225	Statement	const	2369:22:76171:76175	429220	2	True				
ANR	429226	ExpressionStatement	imem = ( gs_ref_memory_t * ) mem	2369:28:76177:76206	429220	3	True				
ANR	429227	AssignmentExpression	imem = ( gs_ref_memory_t * ) mem		429220	0		=			
ANR	429228	Identifier	imem		429220	0					
ANR	429229	CastExpression	( gs_ref_memory_t * ) mem		429220	1					
ANR	429230	CastTarget	gs_ref_memory_t *		429220	0					
ANR	429231	Identifier	mem		429220	1					
ANR	429232	IdentifierDeclStatement	gs_gc_root_t * * rpp = & imem -> roots ;	2370:4:76212:76245	429220	4	True				
ANR	429233	IdentifierDecl	* * rpp = & imem -> roots		429220	0					
ANR	429234	IdentifierDeclType	gs_gc_root_t * *		429220	0					
ANR	429235	Identifier	rpp		429220	1					
ANR	429236	AssignmentExpression	* * rpp = & imem -> roots		429220	2		=			
ANR	429237	Identifier	rpp		429220	0					
ANR	429238	UnaryOperationExpression	& imem -> roots		429220	1					
ANR	429239	UnaryOperator	&		429220	0					
ANR	429240	PtrMemberAccess	imem -> roots		429220	1					
ANR	429241	Identifier	imem		429220	0					
ANR	429242	Identifier	roots		429220	1					
ANR	429243	ExpressionStatement	"if_debug2m ( '8' , mem , ""[8]unregister root(%s) 0x%lx\\n"" , client_name_string ( cname ) , ( ulong ) rp )"	2372:4:76252:76360	429220	5	True				
ANR	429244	CallExpression	"if_debug2m ( '8' , mem , ""[8]unregister root(%s) 0x%lx\\n"" , client_name_string ( cname ) , ( ulong ) rp )"		429220	0					
ANR	429245	Callee	if_debug2m		429220	0					
ANR	429246	Identifier	if_debug2m		429220	0					
ANR	429247	ArgumentList	'8'		429220	1					
ANR	429248	Argument	'8'		429220	0					
ANR	429249	PrimaryExpression	'8'		429220	0					
ANR	429250	Argument	mem		429220	1					
ANR	429251	Identifier	mem		429220	0					
ANR	429252	Argument	"""[8]unregister root(%s) 0x%lx\\n"""		429220	2					
ANR	429253	PrimaryExpression	"""[8]unregister root(%s) 0x%lx\\n"""		429220	0					
ANR	429254	Argument	client_name_string ( cname )		429220	3					
ANR	429255	CallExpression	client_name_string ( cname )		429220	0					
ANR	429256	Callee	client_name_string		429220	0					
ANR	429257	Identifier	client_name_string		429220	0					
ANR	429258	ArgumentList	cname		429220	1					
ANR	429259	Argument	cname		429220	0					
ANR	429260	Identifier	cname		429220	0					
ANR	429261	Argument	( ulong ) rp		429220	4					
ANR	429262	CastExpression	( ulong ) rp		429220	0					
ANR	429263	CastTarget	ulong		429220	0					
ANR	429264	Identifier	rp		429220	1					
ANR	429265	WhileStatement	while ( * rpp != rp )		429220	6					
ANR	429266	Condition	* rpp != rp	2374:11:76373:76382	429220	0	True				
ANR	429267	EqualityExpression	* rpp != rp		429220	0		!=			
ANR	429268	UnaryOperationExpression	* rpp		429220	0					
ANR	429269	UnaryOperator	*		429220	0					
ANR	429270	Identifier	rpp		429220	1					
ANR	429271	Identifier	rp		429220	1					
ANR	429272	ExpressionStatement	rpp = & ( * rpp ) -> next	2375:8:76393:76412	429220	1	True				
ANR	429273	AssignmentExpression	rpp = & ( * rpp ) -> next		429220	0		=			
ANR	429274	Identifier	rpp		429220	0					
ANR	429275	UnaryOperationExpression	& ( * rpp ) -> next		429220	1					
ANR	429276	UnaryOperator	&		429220	0					
ANR	429277	PtrMemberAccess	( * rpp ) -> next		429220	1					
ANR	429278	UnaryOperationExpression	* rpp		429220	0					
ANR	429279	UnaryOperator	*		429220	0					
ANR	429280	Identifier	rpp		429220	1					
ANR	429281	Identifier	next		429220	1					
ANR	429282	ExpressionStatement	* rpp = ( * rpp ) -> next	2376:4:76418:76437	429220	7	True				
ANR	429283	AssignmentExpression	* rpp = ( * rpp ) -> next		429220	0		=			
ANR	429284	UnaryOperationExpression	* rpp		429220	0					
ANR	429285	UnaryOperator	*		429220	0					
ANR	429286	Identifier	rpp		429220	1					
ANR	429287	PtrMemberAccess	( * rpp ) -> next		429220	1					
ANR	429288	UnaryOperationExpression	* rpp		429220	0					
ANR	429289	UnaryOperator	*		429220	0					
ANR	429290	Identifier	rpp		429220	1					
ANR	429291	Identifier	next		429220	1					
ANR	429292	IfStatement	if ( rp -> free_on_unregister )		429220	8					
ANR	429293	Condition	rp -> free_on_unregister	2377:8:76447:76468	429220	0	True				
ANR	429294	PtrMemberAccess	rp -> free_on_unregister		429220	0					
ANR	429295	Identifier	rp		429220	0					
ANR	429296	Identifier	free_on_unregister		429220	1					
ANR	429297	ExpressionStatement	"gs_free_object ( imem -> non_gc_memory , rp , ""i_unregister_root"" )"	2378:8:76479:76539	429220	1	True				
ANR	429298	CallExpression	"gs_free_object ( imem -> non_gc_memory , rp , ""i_unregister_root"" )"		429220	0					
ANR	429299	Callee	gs_free_object		429220	0					
ANR	429300	Identifier	gs_free_object		429220	0					
ANR	429301	ArgumentList	imem -> non_gc_memory		429220	1					
ANR	429302	Argument	imem -> non_gc_memory		429220	0					
ANR	429303	PtrMemberAccess	imem -> non_gc_memory		429220	0					
ANR	429304	Identifier	imem		429220	0					
ANR	429305	Identifier	non_gc_memory		429220	1					
ANR	429306	Argument	rp		429220	1					
ANR	429307	Identifier	rp		429220	0					
ANR	429308	Argument	"""i_unregister_root"""		429220	2					
ANR	429309	PrimaryExpression	"""i_unregister_root"""		429220	0					
ANR	429310	ReturnType	static void		429220	1					
ANR	429311	Identifier	i_unregister_root		429220	2					
ANR	429312	ParameterList	"gs_memory_t * mem , gs_gc_root_t * rp , client_name_t cname"		429220	3					
ANR	429313	Parameter	gs_memory_t * mem	2367:18:76088:76104	429220	0	True				
ANR	429314	ParameterType	gs_memory_t *		429220	0					
ANR	429315	Identifier	mem		429220	1					
ANR	429316	Parameter	gs_gc_root_t * rp	2367:37:76107:76123	429220	1	True				
ANR	429317	ParameterType	gs_gc_root_t *		429220	0					
ANR	429318	Identifier	rp		429220	1					
ANR	429319	Parameter	client_name_t cname	2367:56:76126:76144	429220	2	True				
ANR	429320	ParameterType	client_name_t		429220	0					
ANR	429321	Identifier	cname		429220	1					
ANR	429322	CFGEntryNode	ENTRY		429220		True				
ANR	429323	CFGExitNode	EXIT		429220		True				
ANR	429324	Symbol	* * rpp		429220						
ANR	429325	Symbol	* rp		429220						
ANR	429326	Symbol	cname		429220						
ANR	429327	Symbol	( * rpp ) -> next		429220						
ANR	429328	Symbol	rpp		429220						
ANR	429329	Symbol	rp -> free_on_unregister		429220						
ANR	429330	Symbol	mem		429220						
ANR	429331	Symbol	imem -> non_gc_memory		429220						
ANR	429332	Symbol	client_name_string		429220						
ANR	429333	Symbol	& imem -> roots		429220						
ANR	429334	Symbol	* rpp		429220						
ANR	429335	Symbol	imem		429220						
ANR	429336	Symbol	* imem		429220						
ANR	429337	Symbol	rp		429220						
ANR	429338	Symbol	& ( * rpp ) -> next		429220						
ANR	429339	Function	alloc_link_clump	2387:0:76717:76829							
ANR	429340	FunctionDef	"alloc_link_clump (clump_t * cp , gs_ref_memory_t * imem)"		429339	0					
ANR	429341	CompoundStatement		2389:0:76777:76829	429339	0					
ANR	429342	ExpressionStatement	"splay_insert ( cp , imem )"	2390:4:76783:76805	429339	0	True				
ANR	429343	CallExpression	"splay_insert ( cp , imem )"		429339	0					
ANR	429344	Callee	splay_insert		429339	0					
ANR	429345	Identifier	splay_insert		429339	0					
ANR	429346	ArgumentList	cp		429339	1					
ANR	429347	Argument	cp		429339	0					
ANR	429348	Identifier	cp		429339	0					
ANR	429349	Argument	imem		429339	1					
ANR	429350	Identifier	imem		429339	0					
ANR	429351	ExpressionStatement	SANITY_CHECK ( cp )	2391:4:76811:76827	429339	1	True				
ANR	429352	CallExpression	SANITY_CHECK ( cp )		429339	0					
ANR	429353	Callee	SANITY_CHECK		429339	0					
ANR	429354	Identifier	SANITY_CHECK		429339	0					
ANR	429355	ArgumentList	cp		429339	1					
ANR	429356	Argument	cp		429339	0					
ANR	429357	Identifier	cp		429339	0					
ANR	429358	ReturnType	void		429339	1					
ANR	429359	Identifier	alloc_link_clump		429339	2					
ANR	429360	ParameterList	"clump_t * cp , gs_ref_memory_t * imem"		429339	3					
ANR	429361	Parameter	clump_t * cp	2388:17:76739:76750	429339	0	True				
ANR	429362	ParameterType	clump_t *		429339	0					
ANR	429363	Identifier	cp		429339	1					
ANR	429364	Parameter	gs_ref_memory_t * imem	2388:31:76753:76774	429339	1	True				
ANR	429365	ParameterType	gs_ref_memory_t *		429339	0					
ANR	429366	Identifier	imem		429339	1					
ANR	429367	CFGEntryNode	ENTRY		429339		True				
ANR	429368	CFGExitNode	EXIT		429339		True				
ANR	429369	Symbol	cp		429339						
ANR	429370	Symbol	imem		429339						
ANR	429371	Function	alloc_add_clump	2395:0:76875:77236							
ANR	429372	FunctionDef	"alloc_add_clump (gs_ref_memory_t * mem , ulong csize , client_name_t cname)"		429371	0					
ANR	429373	CompoundStatement		2397:0:76965:77236	429371	0					
ANR	429374	IdentifierDeclStatement	"clump_t * cp = alloc_acquire_clump ( mem , csize , true , cname ) ;"	2398:4:76971:77029	429371	0	True				
ANR	429375	IdentifierDecl	"* cp = alloc_acquire_clump ( mem , csize , true , cname )"		429371	0					
ANR	429376	IdentifierDeclType	clump_t *		429371	0					
ANR	429377	Identifier	cp		429371	1					
ANR	429378	AssignmentExpression	"* cp = alloc_acquire_clump ( mem , csize , true , cname )"		429371	2		=			
ANR	429379	Identifier	cp		429371	0					
ANR	429380	CallExpression	"alloc_acquire_clump ( mem , csize , true , cname )"		429371	1					
ANR	429381	Callee	alloc_acquire_clump		429371	0					
ANR	429382	Identifier	alloc_acquire_clump		429371	0					
ANR	429383	ArgumentList	mem		429371	1					
ANR	429384	Argument	mem		429371	0					
ANR	429385	Identifier	mem		429371	0					
ANR	429386	Argument	csize		429371	1					
ANR	429387	Identifier	csize		429371	0					
ANR	429388	Argument	true		429371	2					
ANR	429389	Identifier	true		429371	0					
ANR	429390	Argument	cname		429371	3					
ANR	429391	Identifier	cname		429371	0					
ANR	429392	IfStatement	if ( cp )		429371	1					
ANR	429393	Condition	cp	2400:8:77040:77041	429371	0	True				
ANR	429394	Identifier	cp		429371	0					
ANR	429395	CompoundStatement		4:12:78:78	429371	1					
ANR	429396	ExpressionStatement	alloc_close_clump ( mem )	2401:8:77054:77076	429371	0	True				
ANR	429397	CallExpression	alloc_close_clump ( mem )		429371	0					
ANR	429398	Callee	alloc_close_clump		429371	0					
ANR	429399	Identifier	alloc_close_clump		429371	0					
ANR	429400	ArgumentList	mem		429371	1					
ANR	429401	Argument	mem		429371	0					
ANR	429402	Identifier	mem		429371	0					
ANR	429403	ExpressionStatement	mem -> cc = cp	2402:8:77086:77098	429371	1	True				
ANR	429404	AssignmentExpression	mem -> cc = cp		429371	0		=			
ANR	429405	PtrMemberAccess	mem -> cc		429371	0					
ANR	429406	Identifier	mem		429371	0					
ANR	429407	Identifier	cc		429371	1					
ANR	429408	Identifier	cp		429371	1					
ANR	429409	ExpressionStatement	"gs_alloc_fill ( mem -> cc -> cbase , gs_alloc_fill_free , mem -> cc -> climit - mem -> cc -> cbase )"	2403:8:77108:77213	429371	2	True				
ANR	429410	CallExpression	"gs_alloc_fill ( mem -> cc -> cbase , gs_alloc_fill_free , mem -> cc -> climit - mem -> cc -> cbase )"		429371	0					
ANR	429411	Callee	gs_alloc_fill		429371	0					
ANR	429412	Identifier	gs_alloc_fill		429371	0					
ANR	429413	ArgumentList	mem -> cc -> cbase		429371	1					
ANR	429414	Argument	mem -> cc -> cbase		429371	0					
ANR	429415	PtrMemberAccess	mem -> cc -> cbase		429371	0					
ANR	429416	PtrMemberAccess	mem -> cc		429371	0					
ANR	429417	Identifier	mem		429371	0					
ANR	429418	Identifier	cc		429371	1					
ANR	429419	Identifier	cbase		429371	1					
ANR	429420	Argument	gs_alloc_fill_free		429371	1					
ANR	429421	Identifier	gs_alloc_fill_free		429371	0					
ANR	429422	Argument	mem -> cc -> climit - mem -> cc -> cbase		429371	2					
ANR	429423	AdditiveExpression	mem -> cc -> climit - mem -> cc -> cbase		429371	0		-			
ANR	429424	PtrMemberAccess	mem -> cc -> climit		429371	0					
ANR	429425	PtrMemberAccess	mem -> cc		429371	0					
ANR	429426	Identifier	mem		429371	0					
ANR	429427	Identifier	cc		429371	1					
ANR	429428	Identifier	climit		429371	1					
ANR	429429	PtrMemberAccess	mem -> cc -> cbase		429371	1					
ANR	429430	PtrMemberAccess	mem -> cc		429371	0					
ANR	429431	Identifier	mem		429371	0					
ANR	429432	Identifier	cc		429371	1					
ANR	429433	Identifier	cbase		429371	1					
ANR	429434	ReturnStatement	return cp ;	2406:4:77225:77234	429371	2	True				
ANR	429435	Identifier	cp		429371	0					
ANR	429436	ReturnType	static clump_t *		429371	1					
ANR	429437	Identifier	alloc_add_clump		429371	2					
ANR	429438	ParameterList	"gs_ref_memory_t * mem , ulong csize , client_name_t cname"		429371	3					
ANR	429439	Parameter	gs_ref_memory_t * mem	2396:16:76908:76928	429371	0	True				
ANR	429440	ParameterType	gs_ref_memory_t *		429371	0					
ANR	429441	Identifier	mem		429371	1					
ANR	429442	Parameter	ulong csize	2396:39:76931:76941	429371	1	True				
ANR	429443	ParameterType	ulong		429371	0					
ANR	429444	Identifier	csize		429371	1					
ANR	429445	Parameter	client_name_t cname	2396:52:76944:76962	429371	2	True				
ANR	429446	ParameterType	client_name_t		429371	0					
ANR	429447	Identifier	cname		429371	1					
ANR	429448	CFGEntryNode	ENTRY		429371		True				
ANR	429449	CFGExitNode	EXIT		429371		True				
ANR	429450	Symbol	mem -> cc -> climit		429371						
ANR	429451	Symbol	gs_alloc_fill_free		429371						
ANR	429452	Symbol	cname		429371						
ANR	429453	Symbol	* mem -> cc		429371						
ANR	429454	Symbol	* * mem		429371						
ANR	429455	Symbol	alloc_acquire_clump		429371						
ANR	429456	Symbol	csize		429371						
ANR	429457	Symbol	cp		429371						
ANR	429458	Symbol	mem -> cc -> cbase		429371						
ANR	429459	Symbol	mem		429371						
ANR	429460	Symbol	mem -> cc		429371						
ANR	429461	Symbol	true		429371						
ANR	429462	Symbol	* mem		429371						
ANR	429463	Function	alloc_acquire_clump	2413:0:77497:79293							
ANR	429464	FunctionDef	"alloc_acquire_clump (gs_ref_memory_t * mem , ulong csize , bool has_strings , client_name_t cname)"		429463	0					
ANR	429465	CompoundStatement		2416:0:77629:79293	429463	0					
ANR	429466	IdentifierDeclStatement	gs_memory_t * parent = mem -> non_gc_memory ;	2417:4:77635:77675	429463	0	True				
ANR	429467	IdentifierDecl	* parent = mem -> non_gc_memory		429463	0					
ANR	429468	IdentifierDeclType	gs_memory_t *		429463	0					
ANR	429469	Identifier	parent		429463	1					
ANR	429470	AssignmentExpression	* parent = mem -> non_gc_memory		429463	2		=			
ANR	429471	Identifier	parent		429463	0					
ANR	429472	PtrMemberAccess	mem -> non_gc_memory		429463	1					
ANR	429473	Identifier	mem		429463	0					
ANR	429474	Identifier	non_gc_memory		429463	1					
ANR	429475	IdentifierDeclStatement	clump_t * cp ;	2418:4:77681:77692	429463	1	True				
ANR	429476	IdentifierDecl	* cp		429463	0					
ANR	429477	IdentifierDeclType	clump_t *		429463	0					
ANR	429478	Identifier	cp		429463	1					
ANR	429479	IdentifierDeclStatement	byte * cdata ;	2419:4:77698:77709	429463	2	True				
ANR	429480	IdentifierDecl	* cdata		429463	0					
ANR	429481	IdentifierDeclType	byte *		429463	0					
ANR	429482	Identifier	cdata		429463	1					
ANR	429483	IfStatement	if ( csize != ( uint ) csize )		429463	3					
ANR	429484	Condition	csize != ( uint ) csize	2423:8:77809:77829	429463	0	True				
ANR	429485	EqualityExpression	csize != ( uint ) csize		429463	0		!=			
ANR	429486	Identifier	csize		429463	0					
ANR	429487	CastExpression	( uint ) csize		429463	1					
ANR	429488	CastTarget	uint		429463	0					
ANR	429489	Identifier	csize		429463	1					
ANR	429490	ReturnStatement	return 0 ;	2424:8:77840:77848	429463	1	True				
ANR	429491	PrimaryExpression	0		429463	0					
ANR	429492	ExpressionStatement	"cp = gs_raw_alloc_struct_immovable ( parent , & st_clump , cname )"	2426:4:77861:77921	429463	4	True				
ANR	429493	AssignmentExpression	"cp = gs_raw_alloc_struct_immovable ( parent , & st_clump , cname )"		429463	0		=			
ANR	429494	Identifier	cp		429463	0					
ANR	429495	CallExpression	"gs_raw_alloc_struct_immovable ( parent , & st_clump , cname )"		429463	1					
ANR	429496	Callee	gs_raw_alloc_struct_immovable		429463	0					
ANR	429497	Identifier	gs_raw_alloc_struct_immovable		429463	0					
ANR	429498	ArgumentList	parent		429463	1					
ANR	429499	Argument	parent		429463	0					
ANR	429500	Identifier	parent		429463	0					
ANR	429501	Argument	& st_clump		429463	1					
ANR	429502	UnaryOperationExpression	& st_clump		429463	0					
ANR	429503	UnaryOperator	&		429463	0					
ANR	429504	Identifier	st_clump		429463	1					
ANR	429505	Argument	cname		429463	2					
ANR	429506	Identifier	cname		429463	0					
ANR	429507	IfStatement	if ( mem -> gc_status . signal_value != 0 )		429463	5					
ANR	429508	Condition	mem -> gc_status . signal_value != 0	2433:8:78169:78200	429463	0	True				
ANR	429509	EqualityExpression	mem -> gc_status . signal_value != 0		429463	0		!=			
ANR	429510	MemberAccess	mem -> gc_status . signal_value		429463	0					
ANR	429511	PtrMemberAccess	mem -> gc_status		429463	0					
ANR	429512	Identifier	mem		429463	0					
ANR	429513	Identifier	gc_status		429463	1					
ANR	429514	Identifier	signal_value		429463	1					
ANR	429515	PrimaryExpression	0		429463	1					
ANR	429516	CompoundStatement		18:42:573:573	429463	1					
ANR	429517	IfStatement	if ( ( ulong ) ( mem -> allocated ) >= mem -> limit )		429463	0					
ANR	429518	Condition	( ulong ) ( mem -> allocated ) >= mem -> limit	2435:12:78259:78296	429463	0	True				
ANR	429519	RelationalExpression	( ulong ) ( mem -> allocated ) >= mem -> limit		429463	0		>=			
ANR	429520	CastExpression	( ulong ) ( mem -> allocated )		429463	0					
ANR	429521	CastTarget	ulong		429463	0					
ANR	429522	PtrMemberAccess	mem -> allocated		429463	1					
ANR	429523	Identifier	mem		429463	0					
ANR	429524	Identifier	allocated		429463	1					
ANR	429525	PtrMemberAccess	mem -> limit		429463	1					
ANR	429526	Identifier	mem		429463	0					
ANR	429527	Identifier	limit		429463	1					
ANR	429528	CompoundStatement		20:52:669:669	429463	1					
ANR	429529	ExpressionStatement	mem -> gc_status . requested += csize	2436:12:78313:78346	429463	0	True				
ANR	429530	AssignmentExpression	mem -> gc_status . requested += csize		429463	0		+=			
ANR	429531	MemberAccess	mem -> gc_status . requested		429463	0					
ANR	429532	PtrMemberAccess	mem -> gc_status		429463	0					
ANR	429533	Identifier	mem		429463	0					
ANR	429534	Identifier	gc_status		429463	1					
ANR	429535	Identifier	requested		429463	1					
ANR	429536	Identifier	csize		429463	1					
ANR	429537	IfStatement	if ( mem -> limit >= mem -> gc_status . max_vm )		429463	1					
ANR	429538	Condition	mem -> limit >= mem -> gc_status . max_vm	2437:16:78364:78398	429463	0	True				
ANR	429539	RelationalExpression	mem -> limit >= mem -> gc_status . max_vm		429463	0		>=			
ANR	429540	PtrMemberAccess	mem -> limit		429463	0					
ANR	429541	Identifier	mem		429463	0					
ANR	429542	Identifier	limit		429463	1					
ANR	429543	MemberAccess	mem -> gc_status . max_vm		429463	1					
ANR	429544	PtrMemberAccess	mem -> gc_status		429463	0					
ANR	429545	Identifier	mem		429463	0					
ANR	429546	Identifier	gc_status		429463	1					
ANR	429547	Identifier	max_vm		429463	1					
ANR	429548	CompoundStatement		22:53:771:771	429463	1					
ANR	429549	ExpressionStatement	"gs_free_object ( parent , cp , cname )"	2438:16:78419:78452	429463	0	True				
ANR	429550	CallExpression	"gs_free_object ( parent , cp , cname )"		429463	0					
ANR	429551	Callee	gs_free_object		429463	0					
ANR	429552	Identifier	gs_free_object		429463	0					
ANR	429553	ArgumentList	parent		429463	1					
ANR	429554	Argument	parent		429463	0					
ANR	429555	Identifier	parent		429463	0					
ANR	429556	Argument	cp		429463	1					
ANR	429557	Identifier	cp		429463	0					
ANR	429558	Argument	cname		429463	2					
ANR	429559	Identifier	cname		429463	0					
ANR	429560	ReturnStatement	return 0 ;	2439:16:78470:78478	429463	1	True				
ANR	429561	PrimaryExpression	0		429463	0					
ANR	429562	ExpressionStatement	"if_debug4m ( '0' , ( const gs_memory_t * ) mem , ""[0]signaling space=%d, allocated=%ld, limit=%ld, requested=%ld\\n"" , mem -> space , ( long ) mem -> allocated , ( long ) mem -> limit , ( long ) mem -> gc_status . requested )"	2441:12:78506:78768	429463	2	True				
ANR	429563	CallExpression	"if_debug4m ( '0' , ( const gs_memory_t * ) mem , ""[0]signaling space=%d, allocated=%ld, limit=%ld, requested=%ld\\n"" , mem -> space , ( long ) mem -> allocated , ( long ) mem -> limit , ( long ) mem -> gc_status . requested )"		429463	0					
ANR	429564	Callee	if_debug4m		429463	0					
ANR	429565	Identifier	if_debug4m		429463	0					
ANR	429566	ArgumentList	'0'		429463	1					
ANR	429567	Argument	'0'		429463	0					
ANR	429568	PrimaryExpression	'0'		429463	0					
ANR	429569	Argument	( const gs_memory_t * ) mem		429463	1					
ANR	429570	CastExpression	( const gs_memory_t * ) mem		429463	0					
ANR	429571	CastTarget	const gs_memory_t *		429463	0					
ANR	429572	Identifier	mem		429463	1					
ANR	429573	Argument	"""[0]signaling space=%d, allocated=%ld, limit=%ld, requested=%ld\\n"""		429463	2					
ANR	429574	PrimaryExpression	"""[0]signaling space=%d, allocated=%ld, limit=%ld, requested=%ld\\n"""		429463	0					
ANR	429575	Argument	mem -> space		429463	3					
ANR	429576	PtrMemberAccess	mem -> space		429463	0					
ANR	429577	Identifier	mem		429463	0					
ANR	429578	Identifier	space		429463	1					
ANR	429579	Argument	( long ) mem -> allocated		429463	4					
ANR	429580	CastExpression	( long ) mem -> allocated		429463	0					
ANR	429581	CastTarget	long		429463	0					
ANR	429582	PtrMemberAccess	mem -> allocated		429463	1					
ANR	429583	Identifier	mem		429463	0					
ANR	429584	Identifier	allocated		429463	1					
ANR	429585	Argument	( long ) mem -> limit		429463	5					
ANR	429586	CastExpression	( long ) mem -> limit		429463	0					
ANR	429587	CastTarget	long		429463	0					
ANR	429588	PtrMemberAccess	mem -> limit		429463	1					
ANR	429589	Identifier	mem		429463	0					
ANR	429590	Identifier	limit		429463	1					
ANR	429591	Argument	( long ) mem -> gc_status . requested		429463	6					
ANR	429592	CastExpression	( long ) mem -> gc_status . requested		429463	0					
ANR	429593	CastTarget	long		429463	0					
ANR	429594	MemberAccess	mem -> gc_status . requested		429463	1					
ANR	429595	PtrMemberAccess	mem -> gc_status		429463	0					
ANR	429596	Identifier	mem		429463	0					
ANR	429597	Identifier	gc_status		429463	1					
ANR	429598	Identifier	requested		429463	1					
ANR	429599	ExpressionStatement	mem -> gs_lib_ctx -> gcsignal = mem -> gc_status . signal_value	2445:12:78782:78837	429463	3	True				
ANR	429600	AssignmentExpression	mem -> gs_lib_ctx -> gcsignal = mem -> gc_status . signal_value		429463	0		=			
ANR	429601	PtrMemberAccess	mem -> gs_lib_ctx -> gcsignal		429463	0					
ANR	429602	PtrMemberAccess	mem -> gs_lib_ctx		429463	0					
ANR	429603	Identifier	mem		429463	0					
ANR	429604	Identifier	gs_lib_ctx		429463	1					
ANR	429605	Identifier	gcsignal		429463	1					
ANR	429606	MemberAccess	mem -> gc_status . signal_value		429463	1					
ANR	429607	PtrMemberAccess	mem -> gc_status		429463	0					
ANR	429608	Identifier	mem		429463	0					
ANR	429609	Identifier	gc_status		429463	1					
ANR	429610	Identifier	signal_value		429463	1					
ANR	429611	ExpressionStatement	"cdata = gs_alloc_bytes_immovable ( parent , csize , cname )"	2448:4:78859:78913	429463	6	True				
ANR	429612	AssignmentExpression	"cdata = gs_alloc_bytes_immovable ( parent , csize , cname )"		429463	0		=			
ANR	429613	Identifier	cdata		429463	0					
ANR	429614	CallExpression	"gs_alloc_bytes_immovable ( parent , csize , cname )"		429463	1					
ANR	429615	Callee	gs_alloc_bytes_immovable		429463	0					
ANR	429616	Identifier	gs_alloc_bytes_immovable		429463	0					
ANR	429617	ArgumentList	parent		429463	1					
ANR	429618	Argument	parent		429463	0					
ANR	429619	Identifier	parent		429463	0					
ANR	429620	Argument	csize		429463	1					
ANR	429621	Identifier	csize		429463	0					
ANR	429622	Argument	cname		429463	2					
ANR	429623	Identifier	cname		429463	0					
ANR	429624	IfStatement	if ( cp == 0 || cdata == 0 )		429463	7					
ANR	429625	Condition	cp == 0 || cdata == 0	2449:8:78923:78943	429463	0	True				
ANR	429626	OrExpression	cp == 0 || cdata == 0		429463	0		||			
ANR	429627	EqualityExpression	cp == 0		429463	0		==			
ANR	429628	Identifier	cp		429463	0					
ANR	429629	PrimaryExpression	0		429463	1					
ANR	429630	EqualityExpression	cdata == 0		429463	1		==			
ANR	429631	Identifier	cdata		429463	0					
ANR	429632	PrimaryExpression	0		429463	1					
ANR	429633	CompoundStatement		34:31:1316:1316	429463	1					
ANR	429634	ExpressionStatement	"gs_free_object ( parent , cdata , cname )"	2450:8:78956:78992	429463	0	True				
ANR	429635	CallExpression	"gs_free_object ( parent , cdata , cname )"		429463	0					
ANR	429636	Callee	gs_free_object		429463	0					
ANR	429637	Identifier	gs_free_object		429463	0					
ANR	429638	ArgumentList	parent		429463	1					
ANR	429639	Argument	parent		429463	0					
ANR	429640	Identifier	parent		429463	0					
ANR	429641	Argument	cdata		429463	1					
ANR	429642	Identifier	cdata		429463	0					
ANR	429643	Argument	cname		429463	2					
ANR	429644	Identifier	cname		429463	0					
ANR	429645	ExpressionStatement	"gs_free_object ( parent , cp , cname )"	2451:8:79002:79035	429463	1	True				
ANR	429646	CallExpression	"gs_free_object ( parent , cp , cname )"		429463	0					
ANR	429647	Callee	gs_free_object		429463	0					
ANR	429648	Identifier	gs_free_object		429463	0					
ANR	429649	ArgumentList	parent		429463	1					
ANR	429650	Argument	parent		429463	0					
ANR	429651	Identifier	parent		429463	0					
ANR	429652	Argument	cp		429463	1					
ANR	429653	Identifier	cp		429463	0					
ANR	429654	Argument	cname		429463	2					
ANR	429655	Identifier	cname		429463	0					
ANR	429656	ExpressionStatement	mem -> gc_status . requested = csize	2452:8:79045:79077	429463	2	True				
ANR	429657	AssignmentExpression	mem -> gc_status . requested = csize		429463	0		=			
ANR	429658	MemberAccess	mem -> gc_status . requested		429463	0					
ANR	429659	PtrMemberAccess	mem -> gc_status		429463	0					
ANR	429660	Identifier	mem		429463	0					
ANR	429661	Identifier	gc_status		429463	1					
ANR	429662	Identifier	requested		429463	1					
ANR	429663	Identifier	csize		429463	1					
ANR	429664	ReturnStatement	return 0 ;	2453:8:79087:79095	429463	3	True				
ANR	429665	PrimaryExpression	0		429463	0					
ANR	429666	ExpressionStatement	"alloc_init_clump ( cp , cdata , cdata + csize , has_strings , ( clump_t * ) 0 )"	2455:4:79107:79177	429463	8	True				
ANR	429667	CallExpression	"alloc_init_clump ( cp , cdata , cdata + csize , has_strings , ( clump_t * ) 0 )"		429463	0					
ANR	429668	Callee	alloc_init_clump		429463	0					
ANR	429669	Identifier	alloc_init_clump		429463	0					
ANR	429670	ArgumentList	cp		429463	1					
ANR	429671	Argument	cp		429463	0					
ANR	429672	Identifier	cp		429463	0					
ANR	429673	Argument	cdata		429463	1					
ANR	429674	Identifier	cdata		429463	0					
ANR	429675	Argument	cdata + csize		429463	2					
ANR	429676	AdditiveExpression	cdata + csize		429463	0		+			
ANR	429677	Identifier	cdata		429463	0					
ANR	429678	Identifier	csize		429463	1					
ANR	429679	Argument	has_strings		429463	3					
ANR	429680	Identifier	has_strings		429463	0					
ANR	429681	Argument	( clump_t * ) 0		429463	4					
ANR	429682	CastExpression	( clump_t * ) 0		429463	0					
ANR	429683	CastTarget	clump_t *		429463	0					
ANR	429684	PrimaryExpression	0		429463	1					
ANR	429685	ExpressionStatement	"alloc_link_clump ( cp , mem )"	2456:4:79183:79208	429463	9	True				
ANR	429686	CallExpression	"alloc_link_clump ( cp , mem )"		429463	0					
ANR	429687	Callee	alloc_link_clump		429463	0					
ANR	429688	Identifier	alloc_link_clump		429463	0					
ANR	429689	ArgumentList	cp		429463	1					
ANR	429690	Argument	cp		429463	0					
ANR	429691	Identifier	cp		429463	0					
ANR	429692	Argument	mem		429463	1					
ANR	429693	Identifier	mem		429463	0					
ANR	429694	ExpressionStatement	mem -> allocated += st_clump . ssize + csize	2457:4:79214:79254	429463	10	True				
ANR	429695	AssignmentExpression	mem -> allocated += st_clump . ssize + csize		429463	0		+=			
ANR	429696	PtrMemberAccess	mem -> allocated		429463	0					
ANR	429697	Identifier	mem		429463	0					
ANR	429698	Identifier	allocated		429463	1					
ANR	429699	AdditiveExpression	st_clump . ssize + csize		429463	1		+			
ANR	429700	MemberAccess	st_clump . ssize		429463	0					
ANR	429701	Identifier	st_clump		429463	0					
ANR	429702	Identifier	ssize		429463	1					
ANR	429703	Identifier	csize		429463	1					
ANR	429704	ExpressionStatement	SANITY_CHECK ( cp )	2458:4:79260:79276	429463	11	True				
ANR	429705	CallExpression	SANITY_CHECK ( cp )		429463	0					
ANR	429706	Callee	SANITY_CHECK		429463	0					
ANR	429707	Identifier	SANITY_CHECK		429463	0					
ANR	429708	ArgumentList	cp		429463	1					
ANR	429709	Argument	cp		429463	0					
ANR	429710	Identifier	cp		429463	0					
ANR	429711	ReturnStatement	return cp ;	2459:4:79282:79291	429463	12	True				
ANR	429712	Identifier	cp		429463	0					
ANR	429713	ReturnType	static clump_t *		429463	1					
ANR	429714	Identifier	alloc_acquire_clump		429463	2					
ANR	429715	ParameterList	"gs_ref_memory_t * mem , ulong csize , bool has_strings , client_name_t cname"		429463	3					
ANR	429716	Parameter	gs_ref_memory_t * mem	2414:20:77534:77554	429463	0	True				
ANR	429717	ParameterType	gs_ref_memory_t *		429463	0					
ANR	429718	Identifier	mem		429463	1					
ANR	429719	Parameter	ulong csize	2414:43:77557:77567	429463	1	True				
ANR	429720	ParameterType	ulong		429463	0					
ANR	429721	Identifier	csize		429463	1					
ANR	429722	Parameter	bool has_strings	2414:56:77570:77585	429463	2	True				
ANR	429723	ParameterType	bool		429463	0					
ANR	429724	Identifier	has_strings		429463	1					
ANR	429725	Parameter	client_name_t cname	2415:20:77608:77626	429463	3	True				
ANR	429726	ParameterType	client_name_t		429463	0					
ANR	429727	Identifier	cname		429463	1					
ANR	429728	CFGEntryNode	ENTRY		429463		True				
ANR	429729	CFGExitNode	EXIT		429463		True				
ANR	429730	Symbol	parent		429463						
ANR	429731	Symbol	cname		429463						
ANR	429732	Symbol	mem -> gc_status . max_vm		429463						
ANR	429733	Symbol	csize		429463						
ANR	429734	Symbol	st_clump		429463						
ANR	429735	Symbol	st_clump . ssize		429463						
ANR	429736	Symbol	mem -> gc_status		429463						
ANR	429737	Symbol	mem		429463						
ANR	429738	Symbol	gs_alloc_bytes_immovable		429463						
ANR	429739	Symbol	mem -> gc_status . signal_value		429463						
ANR	429740	Symbol	mem -> gs_lib_ctx -> gcsignal		429463						
ANR	429741	Symbol	& st_clump		429463						
ANR	429742	Symbol	mem -> gc_status . requested		429463						
ANR	429743	Symbol	mem -> allocated		429463						
ANR	429744	Symbol	* * mem		429463						
ANR	429745	Symbol	mem -> non_gc_memory		429463						
ANR	429746	Symbol	cp		429463						
ANR	429747	Symbol	mem -> space		429463						
ANR	429748	Symbol	cdata		429463						
ANR	429749	Symbol	mem -> limit		429463						
ANR	429750	Symbol	gs_raw_alloc_struct_immovable		429463						
ANR	429751	Symbol	* mem -> gs_lib_ctx		429463						
ANR	429752	Symbol	has_strings		429463						
ANR	429753	Symbol	mem -> gs_lib_ctx		429463						
ANR	429754	Symbol	* mem		429463						
ANR	429755	Function	alloc_init_clump	2465:0:79463:80815							
ANR	429756	FunctionDef	"alloc_init_clump (clump_t * cp , byte * bot , byte * top , bool has_strings , clump_t * outer)"		429755	0					
ANR	429757	CompoundStatement		2468:0:79575:80815	429755	0					
ANR	429758	IdentifierDeclStatement	byte * cdata = bot ;	2469:4:79581:79598	429755	0	True				
ANR	429759	IdentifierDecl	* cdata = bot		429755	0					
ANR	429760	IdentifierDeclType	byte *		429755	0					
ANR	429761	Identifier	cdata		429755	1					
ANR	429762	AssignmentExpression	* cdata = bot		429755	2		=			
ANR	429763	Identifier	bot		429755	0					
ANR	429764	Identifier	bot		429755	1					
ANR	429765	IfStatement	if ( outer != 0 )		429755	1					
ANR	429766	Condition	outer != 0	2471:8:79609:79618	429755	0	True				
ANR	429767	EqualityExpression	outer != 0		429755	0		!=			
ANR	429768	Identifier	outer		429755	0					
ANR	429769	PrimaryExpression	0		429755	1					
ANR	429770	ExpressionStatement	outer -> inner_count ++	2472:8:79629:79649	429755	1	True				
ANR	429771	PostIncDecOperationExpression	outer -> inner_count ++		429755	0					
ANR	429772	PtrMemberAccess	outer -> inner_count		429755	0					
ANR	429773	Identifier	outer		429755	0					
ANR	429774	Identifier	inner_count		429755	1					
ANR	429775	IncDec	++		429755	1					
ANR	429776	ExpressionStatement	cp -> chead = ( clump_head_t * ) cdata	2473:4:79655:79689	429755	2	True				
ANR	429777	AssignmentExpression	cp -> chead = ( clump_head_t * ) cdata		429755	0		=			
ANR	429778	PtrMemberAccess	cp -> chead		429755	0					
ANR	429779	Identifier	cp		429755	0					
ANR	429780	Identifier	chead		429755	1					
ANR	429781	CastExpression	( clump_head_t * ) cdata		429755	1					
ANR	429782	CastTarget	clump_head_t *		429755	0					
ANR	429783	Identifier	cdata		429755	1					
ANR	429784	ExpressionStatement	cdata += sizeof ( clump_head_t )	2474:4:79695:79724	429755	3	True				
ANR	429785	AssignmentExpression	cdata += sizeof ( clump_head_t )		429755	0		+=			
ANR	429786	Identifier	cdata		429755	0					
ANR	429787	SizeofExpression	sizeof ( clump_head_t )		429755	1					
ANR	429788	Sizeof	sizeof		429755	0					
ANR	429789	SizeofOperand	clump_head_t		429755	1					
ANR	429790	ExpressionStatement	cp -> cbot = cp -> cbase = cp -> int_freed_top = cdata	2475:4:79730:79778	429755	4	True				
ANR	429791	AssignmentExpression	cp -> cbot = cp -> cbase = cp -> int_freed_top = cdata		429755	0		=			
ANR	429792	PtrMemberAccess	cp -> cbot		429755	0					
ANR	429793	Identifier	cp		429755	0					
ANR	429794	Identifier	cbot		429755	1					
ANR	429795	AssignmentExpression	cp -> cbase = cp -> int_freed_top = cdata		429755	1		=			
ANR	429796	PtrMemberAccess	cp -> cbase		429755	0					
ANR	429797	Identifier	cp		429755	0					
ANR	429798	Identifier	cbase		429755	1					
ANR	429799	AssignmentExpression	cp -> int_freed_top = cdata		429755	1		=			
ANR	429800	PtrMemberAccess	cp -> int_freed_top		429755	0					
ANR	429801	Identifier	cp		429755	0					
ANR	429802	Identifier	int_freed_top		429755	1					
ANR	429803	Identifier	cdata		429755	1					
ANR	429804	ExpressionStatement	cp -> cend = top	2476:4:79784:79798	429755	5	True				
ANR	429805	AssignmentExpression	cp -> cend = top		429755	0		=			
ANR	429806	PtrMemberAccess	cp -> cend		429755	0					
ANR	429807	Identifier	cp		429755	0					
ANR	429808	Identifier	cend		429755	1					
ANR	429809	Identifier	top		429755	1					
ANR	429810	ExpressionStatement	cp -> rcur = 0	2477:4:79804:79816	429755	6	True				
ANR	429811	AssignmentExpression	cp -> rcur = 0		429755	0		=			
ANR	429812	PtrMemberAccess	cp -> rcur		429755	0					
ANR	429813	Identifier	cp		429755	0					
ANR	429814	Identifier	rcur		429755	1					
ANR	429815	PrimaryExpression	0		429755	1					
ANR	429816	ExpressionStatement	cp -> rtop = 0	2478:4:79822:79834	429755	7	True				
ANR	429817	AssignmentExpression	cp -> rtop = 0		429755	0		=			
ANR	429818	PtrMemberAccess	cp -> rtop		429755	0					
ANR	429819	Identifier	cp		429755	0					
ANR	429820	Identifier	rtop		429755	1					
ANR	429821	PrimaryExpression	0		429755	1					
ANR	429822	ExpressionStatement	cp -> outer = outer	2479:4:79840:79857	429755	8	True				
ANR	429823	AssignmentExpression	cp -> outer = outer		429755	0		=			
ANR	429824	PtrMemberAccess	cp -> outer		429755	0					
ANR	429825	Identifier	cp		429755	0					
ANR	429826	Identifier	outer		429755	1					
ANR	429827	Identifier	outer		429755	1					
ANR	429828	ExpressionStatement	cp -> inner_count = 0	2480:4:79863:79882	429755	9	True				
ANR	429829	AssignmentExpression	cp -> inner_count = 0		429755	0		=			
ANR	429830	PtrMemberAccess	cp -> inner_count		429755	0					
ANR	429831	Identifier	cp		429755	0					
ANR	429832	Identifier	inner_count		429755	1					
ANR	429833	PrimaryExpression	0		429755	1					
ANR	429834	ExpressionStatement	cp -> has_refs = false	2481:4:79888:79908	429755	10	True				
ANR	429835	AssignmentExpression	cp -> has_refs = false		429755	0		=			
ANR	429836	PtrMemberAccess	cp -> has_refs		429755	0					
ANR	429837	Identifier	cp		429755	0					
ANR	429838	Identifier	has_refs		429755	1					
ANR	429839	Identifier	false		429755	1					
ANR	429840	ExpressionStatement	cp -> sbase = cdata	2482:4:79914:79931	429755	11	True				
ANR	429841	AssignmentExpression	cp -> sbase = cdata		429755	0		=			
ANR	429842	PtrMemberAccess	cp -> sbase		429755	0					
ANR	429843	Identifier	cp		429755	0					
ANR	429844	Identifier	sbase		429755	1					
ANR	429845	Identifier	cdata		429755	1					
ANR	429846	ExpressionStatement	cp -> c_alone = false	2483:4:79937:79956	429755	12	True				
ANR	429847	AssignmentExpression	cp -> c_alone = false		429755	0		=			
ANR	429848	PtrMemberAccess	cp -> c_alone		429755	0					
ANR	429849	Identifier	cp		429755	0					
ANR	429850	Identifier	c_alone		429755	1					
ANR	429851	Identifier	false		429755	1					
ANR	429852	IfStatement	if ( has_strings && top - cdata >= string_space_quantum + sizeof ( long ) - 1 )		429755	13					
ANR	429853	Condition	has_strings && top - cdata >= string_space_quantum + sizeof ( long ) - 1	2484:8:80006:80074	429755	0	True				
ANR	429854	AndExpression	has_strings && top - cdata >= string_space_quantum + sizeof ( long ) - 1		429755	0		&&			
ANR	429855	Identifier	has_strings		429755	0					
ANR	429856	RelationalExpression	top - cdata >= string_space_quantum + sizeof ( long ) - 1		429755	1		>=			
ANR	429857	AdditiveExpression	top - cdata		429755	0		-			
ANR	429858	Identifier	top		429755	0					
ANR	429859	Identifier	cdata		429755	1					
ANR	429860	AdditiveExpression	string_space_quantum + sizeof ( long ) - 1		429755	1		+			
ANR	429861	Identifier	string_space_quantum		429755	0					
ANR	429862	AdditiveExpression	sizeof ( long ) - 1		429755	1		-			
ANR	429863	SizeofExpression	sizeof ( long )		429755	0					
ANR	429864	Sizeof	sizeof		429755	0					
ANR	429865	SizeofOperand	long		429755	1					
ANR	429866	PrimaryExpression	1		429755	1					
ANR	429867	CompoundStatement		22:8:641:688	429755	1					
ANR	429868	IdentifierDeclStatement	uint nquanta = string_space_quanta ( top - cdata ) ;	2489:8:80217:80264	429755	0	True				
ANR	429869	IdentifierDecl	nquanta = string_space_quanta ( top - cdata )		429755	0					
ANR	429870	IdentifierDeclType	uint		429755	0					
ANR	429871	Identifier	nquanta		429755	1					
ANR	429872	AssignmentExpression	nquanta = string_space_quanta ( top - cdata )		429755	2		=			
ANR	429873	Identifier	nquanta		429755	0					
ANR	429874	CallExpression	string_space_quanta ( top - cdata )		429755	1					
ANR	429875	Callee	string_space_quanta		429755	0					
ANR	429876	Identifier	string_space_quanta		429755	0					
ANR	429877	ArgumentList	top - cdata		429755	1					
ANR	429878	Argument	top - cdata		429755	0					
ANR	429879	AdditiveExpression	top - cdata		429755	0		-			
ANR	429880	Identifier	top		429755	0					
ANR	429881	Identifier	cdata		429755	1					
ANR	429882	ExpressionStatement	cp -> climit = cdata + nquanta * string_data_quantum	2491:8:80275:80325	429755	1	True				
ANR	429883	AssignmentExpression	cp -> climit = cdata + nquanta * string_data_quantum		429755	0		=			
ANR	429884	PtrMemberAccess	cp -> climit		429755	0					
ANR	429885	Identifier	cp		429755	0					
ANR	429886	Identifier	climit		429755	1					
ANR	429887	AdditiveExpression	cdata + nquanta * string_data_quantum		429755	1		+			
ANR	429888	Identifier	cdata		429755	0					
ANR	429889	MultiplicativeExpression	nquanta * string_data_quantum		429755	1		*			
ANR	429890	Identifier	nquanta		429755	0					
ANR	429891	Identifier	string_data_quantum		429755	1					
ANR	429892	ExpressionStatement	cp -> smark = cp -> climit	2492:8:80335:80357	429755	2	True				
ANR	429893	AssignmentExpression	cp -> smark = cp -> climit		429755	0		=			
ANR	429894	PtrMemberAccess	cp -> smark		429755	0					
ANR	429895	Identifier	cp		429755	0					
ANR	429896	Identifier	smark		429755	1					
ANR	429897	PtrMemberAccess	cp -> climit		429755	1					
ANR	429898	Identifier	cp		429755	0					
ANR	429899	Identifier	climit		429755	1					
ANR	429900	ExpressionStatement	cp -> smark_size = string_quanta_mark_size ( nquanta )	2493:8:80367:80416	429755	3	True				
ANR	429901	AssignmentExpression	cp -> smark_size = string_quanta_mark_size ( nquanta )		429755	0		=			
ANR	429902	PtrMemberAccess	cp -> smark_size		429755	0					
ANR	429903	Identifier	cp		429755	0					
ANR	429904	Identifier	smark_size		429755	1					
ANR	429905	CallExpression	string_quanta_mark_size ( nquanta )		429755	1					
ANR	429906	Callee	string_quanta_mark_size		429755	0					
ANR	429907	Identifier	string_quanta_mark_size		429755	0					
ANR	429908	ArgumentList	nquanta		429755	1					
ANR	429909	Argument	nquanta		429755	0					
ANR	429910	Identifier	nquanta		429755	0					
ANR	429911	ExpressionStatement	cp -> sreloc = ( string_reloc_offset * ) ( cp -> smark + cp -> smark_size )	2494:8:80426:80503	429755	4	True				
ANR	429912	AssignmentExpression	cp -> sreloc = ( string_reloc_offset * ) ( cp -> smark + cp -> smark_size )		429755	0		=			
ANR	429913	PtrMemberAccess	cp -> sreloc		429755	0					
ANR	429914	Identifier	cp		429755	0					
ANR	429915	Identifier	sreloc		429755	1					
ANR	429916	CastExpression	( string_reloc_offset * ) ( cp -> smark + cp -> smark_size )		429755	1					
ANR	429917	CastTarget	string_reloc_offset *		429755	0					
ANR	429918	AdditiveExpression	cp -> smark + cp -> smark_size		429755	1		+			
ANR	429919	PtrMemberAccess	cp -> smark		429755	0					
ANR	429920	Identifier	cp		429755	0					
ANR	429921	Identifier	smark		429755	1					
ANR	429922	PtrMemberAccess	cp -> smark_size		429755	1					
ANR	429923	Identifier	cp		429755	0					
ANR	429924	Identifier	smark_size		429755	1					
ANR	429925	ExpressionStatement	cp -> sfree1 = ( uint * ) cp -> sreloc	2496:8:80513:80545	429755	5	True				
ANR	429926	AssignmentExpression	cp -> sfree1 = ( uint * ) cp -> sreloc		429755	0		=			
ANR	429927	PtrMemberAccess	cp -> sfree1		429755	0					
ANR	429928	Identifier	cp		429755	0					
ANR	429929	Identifier	sfree1		429755	1					
ANR	429930	CastExpression	( uint * ) cp -> sreloc		429755	1					
ANR	429931	CastTarget	uint *		429755	0					
ANR	429932	PtrMemberAccess	cp -> sreloc		429755	1					
ANR	429933	Identifier	cp		429755	0					
ANR	429934	Identifier	sreloc		429755	1					
ANR	429935	ElseStatement	else		429755	0					
ANR	429936	CompoundStatement		30:11:982:982	429755	0					
ANR	429937	ExpressionStatement	cp -> climit = cp -> cend	2499:8:80627:80648	429755	0	True				
ANR	429938	AssignmentExpression	cp -> climit = cp -> cend		429755	0		=			
ANR	429939	PtrMemberAccess	cp -> climit		429755	0					
ANR	429940	Identifier	cp		429755	0					
ANR	429941	Identifier	climit		429755	1					
ANR	429942	PtrMemberAccess	cp -> cend		429755	1					
ANR	429943	Identifier	cp		429755	0					
ANR	429944	Identifier	cend		429755	1					
ANR	429945	ExpressionStatement	cp -> sfree1 = 0	2500:8:80658:80672	429755	1	True				
ANR	429946	AssignmentExpression	cp -> sfree1 = 0		429755	0		=			
ANR	429947	PtrMemberAccess	cp -> sfree1		429755	0					
ANR	429948	Identifier	cp		429755	0					
ANR	429949	Identifier	sfree1		429755	1					
ANR	429950	PrimaryExpression	0		429755	1					
ANR	429951	ExpressionStatement	cp -> smark = 0	2501:8:80682:80695	429755	2	True				
ANR	429952	AssignmentExpression	cp -> smark = 0		429755	0		=			
ANR	429953	PtrMemberAccess	cp -> smark		429755	0					
ANR	429954	Identifier	cp		429755	0					
ANR	429955	Identifier	smark		429755	1					
ANR	429956	PrimaryExpression	0		429755	1					
ANR	429957	ExpressionStatement	cp -> smark_size = 0	2502:8:80705:80723	429755	3	True				
ANR	429958	AssignmentExpression	cp -> smark_size = 0		429755	0		=			
ANR	429959	PtrMemberAccess	cp -> smark_size		429755	0					
ANR	429960	Identifier	cp		429755	0					
ANR	429961	Identifier	smark_size		429755	1					
ANR	429962	PrimaryExpression	0		429755	1					
ANR	429963	ExpressionStatement	cp -> sreloc = 0	2503:8:80733:80747	429755	4	True				
ANR	429964	AssignmentExpression	cp -> sreloc = 0		429755	0		=			
ANR	429965	PtrMemberAccess	cp -> sreloc		429755	0					
ANR	429966	Identifier	cp		429755	0					
ANR	429967	Identifier	sreloc		429755	1					
ANR	429968	PrimaryExpression	0		429755	1					
ANR	429969	ExpressionStatement	cp -> ctop = cp -> climit	2505:4:80759:80780	429755	14	True				
ANR	429970	AssignmentExpression	cp -> ctop = cp -> climit		429755	0		=			
ANR	429971	PtrMemberAccess	cp -> ctop		429755	0					
ANR	429972	Identifier	cp		429755	0					
ANR	429973	Identifier	ctop		429755	1					
ANR	429974	PtrMemberAccess	cp -> climit		429755	1					
ANR	429975	Identifier	cp		429755	0					
ANR	429976	Identifier	climit		429755	1					
ANR	429977	ExpressionStatement	alloc_init_free_strings ( cp )	2506:4:80786:80813	429755	15	True				
ANR	429978	CallExpression	alloc_init_free_strings ( cp )		429755	0					
ANR	429979	Callee	alloc_init_free_strings		429755	0					
ANR	429980	Identifier	alloc_init_free_strings		429755	0					
ANR	429981	ArgumentList	cp		429755	1					
ANR	429982	Argument	cp		429755	0					
ANR	429983	Identifier	cp		429755	0					
ANR	429984	ReturnType	void		429755	1					
ANR	429985	Identifier	alloc_init_clump		429755	2					
ANR	429986	ParameterList	"clump_t * cp , byte * bot , byte * top , bool has_strings , clump_t * outer"		429755	3					
ANR	429987	Parameter	clump_t * cp	2466:17:79485:79496	429755	0	True				
ANR	429988	ParameterType	clump_t *		429755	0					
ANR	429989	Identifier	cp		429755	1					
ANR	429990	Parameter	byte * bot	2466:31:79499:79508	429755	1	True				
ANR	429991	ParameterType	byte *		429755	0					
ANR	429992	Identifier	bot		429755	1					
ANR	429993	Parameter	byte * top	2466:43:79511:79520	429755	2	True				
ANR	429994	ParameterType	byte *		429755	0					
ANR	429995	Identifier	top		429755	1					
ANR	429996	Parameter	bool has_strings	2466:55:79523:79538	429755	3	True				
ANR	429997	ParameterType	bool		429755	0					
ANR	429998	Identifier	has_strings		429755	1					
ANR	429999	Parameter	clump_t * outer	2467:17:79558:79572	429755	4	True				
ANR	430000	ParameterType	clump_t *		429755	0					
ANR	430001	Identifier	outer		429755	1					
ANR	430002	CFGEntryNode	ENTRY		429755		True				
ANR	430003	CFGExitNode	EXIT		429755		True				
ANR	430004	Symbol	cp -> rtop		429755						
ANR	430005	Symbol	bot		429755						
ANR	430006	Symbol	cp -> cend		429755						
ANR	430007	Symbol	cp -> inner_count		429755						
ANR	430008	Symbol	cp -> sreloc		429755						
ANR	430009	Symbol	cp -> climit		429755						
ANR	430010	Symbol	cp -> rcur		429755						
ANR	430011	Symbol	cp -> chead		429755						
ANR	430012	Symbol	cp -> cbot		429755						
ANR	430013	Symbol	top		429755						
ANR	430014	Symbol	string_data_quantum		429755						
ANR	430015	Symbol	cp -> sfree1		429755						
ANR	430016	Symbol	cp -> has_refs		429755						
ANR	430017	Symbol	string_space_quanta		429755						
ANR	430018	Symbol	string_quanta_mark_size		429755						
ANR	430019	Symbol	cp -> ctop		429755						
ANR	430020	Symbol	outer -> inner_count		429755						
ANR	430021	Symbol	string_space_quantum		429755						
ANR	430022	Symbol	outer		429755						
ANR	430023	Symbol	false		429755						
ANR	430024	Symbol	cp -> c_alone		429755						
ANR	430025	Symbol	cp -> cbase		429755						
ANR	430026	Symbol	cp		429755						
ANR	430027	Symbol	cp -> int_freed_top		429755						
ANR	430028	Symbol	cdata		429755						
ANR	430029	Symbol	* cp		429755						
ANR	430030	Symbol	nquanta		429755						
ANR	430031	Symbol	* outer		429755						
ANR	430032	Symbol	cp -> smark_size		429755						
ANR	430033	Symbol	cp -> outer		429755						
ANR	430034	Symbol	has_strings		429755						
ANR	430035	Symbol	cp -> sbase		429755						
ANR	430036	Symbol	cp -> smark		429755						
ANR	430037	Function	alloc_init_free_strings	2510:0:80868:81010							
ANR	430038	FunctionDef	alloc_init_free_strings (clump_t * cp)		430037	0					
ANR	430039	CompoundStatement		2512:0:80911:81010	430037	0					
ANR	430040	IfStatement	if ( cp -> sfree1 )		430037	0					
ANR	430041	Condition	cp -> sfree1	2513:8:80921:80930	430037	0	True				
ANR	430042	PtrMemberAccess	cp -> sfree1		430037	0					
ANR	430043	Identifier	cp		430037	0					
ANR	430044	Identifier	sfree1		430037	1					
ANR	430045	ExpressionStatement	"memset ( cp -> sfree1 , 0 , STRING_FREELIST_SPACE ( cp ) )"	2514:8:80941:80989	430037	1	True				
ANR	430046	CallExpression	"memset ( cp -> sfree1 , 0 , STRING_FREELIST_SPACE ( cp ) )"		430037	0					
ANR	430047	Callee	memset		430037	0					
ANR	430048	Identifier	memset		430037	0					
ANR	430049	ArgumentList	cp -> sfree1		430037	1					
ANR	430050	Argument	cp -> sfree1		430037	0					
ANR	430051	PtrMemberAccess	cp -> sfree1		430037	0					
ANR	430052	Identifier	cp		430037	0					
ANR	430053	Identifier	sfree1		430037	1					
ANR	430054	Argument	0		430037	1					
ANR	430055	PrimaryExpression	0		430037	0					
ANR	430056	Argument	STRING_FREELIST_SPACE ( cp )		430037	2					
ANR	430057	CallExpression	STRING_FREELIST_SPACE ( cp )		430037	0					
ANR	430058	Callee	STRING_FREELIST_SPACE		430037	0					
ANR	430059	Identifier	STRING_FREELIST_SPACE		430037	0					
ANR	430060	ArgumentList	cp		430037	1					
ANR	430061	Argument	cp		430037	0					
ANR	430062	Identifier	cp		430037	0					
ANR	430063	ExpressionStatement	cp -> sfree = 0	2515:4:80995:81008	430037	1	True				
ANR	430064	AssignmentExpression	cp -> sfree = 0		430037	0		=			
ANR	430065	PtrMemberAccess	cp -> sfree		430037	0					
ANR	430066	Identifier	cp		430037	0					
ANR	430067	Identifier	sfree		430037	1					
ANR	430068	PrimaryExpression	0		430037	1					
ANR	430069	ReturnType	void		430037	1					
ANR	430070	Identifier	alloc_init_free_strings		430037	2					
ANR	430071	ParameterList	clump_t * cp		430037	3					
ANR	430072	Parameter	clump_t * cp	2511:24:80897:80908	430037	0	True				
ANR	430073	ParameterType	clump_t *		430037	0					
ANR	430074	Identifier	cp		430037	1					
ANR	430075	CFGEntryNode	ENTRY		430037		True				
ANR	430076	CFGExitNode	EXIT		430037		True				
ANR	430077	Symbol	* cp		430037						
ANR	430078	Symbol	cp -> sfree		430037						
ANR	430079	Symbol	cp -> sfree1		430037						
ANR	430080	Symbol	STRING_FREELIST_SPACE		430037						
ANR	430081	Symbol	cp		430037						
ANR	430082	Function	alloc_close_clump	2520:0:81099:81355							
ANR	430083	FunctionDef	alloc_close_clump (gs_ref_memory_t * mem)		430082	0					
ANR	430084	CompoundStatement		2522:0:81145:81355	430082	0					
ANR	430085	IfStatement	if ( gs_debug_c ( 'A' ) )		430082	0					
ANR	430086	Condition	gs_debug_c ( 'A' )	2524:8:81168:81182	430082	0	True				
ANR	430087	CallExpression	gs_debug_c ( 'A' )		430082	0					
ANR	430088	Callee	gs_debug_c		430082	0					
ANR	430089	Identifier	gs_debug_c		430082	0					
ANR	430090	ArgumentList	'A'		430082	1					
ANR	430091	Argument	'A'		430082	0					
ANR	430092	PrimaryExpression	'A'		430082	0					
ANR	430093	CompoundStatement		3:25:39:39	430082	1					
ANR	430094	ExpressionStatement	"dmlprintf1 ( ( const gs_memory_t * ) mem , ""[a%d]"" , alloc_trace_space ( mem ) )"	2525:8:81195:81264	430082	0	True				
ANR	430095	CallExpression	"dmlprintf1 ( ( const gs_memory_t * ) mem , ""[a%d]"" , alloc_trace_space ( mem ) )"		430082	0					
ANR	430096	Callee	dmlprintf1		430082	0					
ANR	430097	Identifier	dmlprintf1		430082	0					
ANR	430098	ArgumentList	( const gs_memory_t * ) mem		430082	1					
ANR	430099	Argument	( const gs_memory_t * ) mem		430082	0					
ANR	430100	CastExpression	( const gs_memory_t * ) mem		430082	0					
ANR	430101	CastTarget	const gs_memory_t *		430082	0					
ANR	430102	Identifier	mem		430082	1					
ANR	430103	Argument	"""[a%d]"""		430082	1					
ANR	430104	PrimaryExpression	"""[a%d]"""		430082	0					
ANR	430105	Argument	alloc_trace_space ( mem )		430082	2					
ANR	430106	CallExpression	alloc_trace_space ( mem )		430082	0					
ANR	430107	Callee	alloc_trace_space		430082	0					
ANR	430108	Identifier	alloc_trace_space		430082	0					
ANR	430109	ArgumentList	mem		430082	1					
ANR	430110	Argument	mem		430082	0					
ANR	430111	Identifier	mem		430082	0					
ANR	430112	ExpressionStatement	"dmprintf_clump ( ( const gs_memory_t * ) mem , ""closing clump"" , mem -> cc )"	2526:8:81274:81340	430082	1	True				
ANR	430113	CallExpression	"dmprintf_clump ( ( const gs_memory_t * ) mem , ""closing clump"" , mem -> cc )"		430082	0					
ANR	430114	Callee	dmprintf_clump		430082	0					
ANR	430115	Identifier	dmprintf_clump		430082	0					
ANR	430116	ArgumentList	( const gs_memory_t * ) mem		430082	1					
ANR	430117	Argument	( const gs_memory_t * ) mem		430082	0					
ANR	430118	CastExpression	( const gs_memory_t * ) mem		430082	0					
ANR	430119	CastTarget	const gs_memory_t *		430082	0					
ANR	430120	Identifier	mem		430082	1					
ANR	430121	Argument	"""closing clump"""		430082	1					
ANR	430122	PrimaryExpression	"""closing clump"""		430082	0					
ANR	430123	Argument	mem -> cc		430082	2					
ANR	430124	PtrMemberAccess	mem -> cc		430082	0					
ANR	430125	Identifier	mem		430082	0					
ANR	430126	Identifier	cc		430082	1					
ANR	430127	ReturnType	void		430082	1					
ANR	430128	Identifier	alloc_close_clump		430082	2					
ANR	430129	ParameterList	gs_ref_memory_t * mem		430082	3					
ANR	430130	Parameter	gs_ref_memory_t * mem	2521:18:81122:81142	430082	0	True				
ANR	430131	ParameterType	gs_ref_memory_t *		430082	0					
ANR	430132	Identifier	mem		430082	1					
ANR	430133	CFGEntryNode	ENTRY		430082		True				
ANR	430134	CFGExitNode	EXIT		430082		True				
ANR	430135	Symbol	mem		430082						
ANR	430136	Symbol	mem -> cc		430082						
ANR	430137	Symbol	gs_debug_c		430082						
ANR	430138	Symbol	alloc_trace_space		430082						
ANR	430139	Symbol	* mem		430082						
ANR	430140	Function	alloc_open_clump	2532:0:81412:81667							
ANR	430141	FunctionDef	alloc_open_clump (gs_ref_memory_t * mem)		430140	0					
ANR	430142	CompoundStatement		2534:0:81457:81667	430140	0					
ANR	430143	IfStatement	if ( gs_debug_c ( 'A' ) )		430140	0					
ANR	430144	Condition	gs_debug_c ( 'A' )	2536:8:81480:81494	430140	0	True				
ANR	430145	CallExpression	gs_debug_c ( 'A' )		430140	0					
ANR	430146	Callee	gs_debug_c		430140	0					
ANR	430147	Identifier	gs_debug_c		430140	0					
ANR	430148	ArgumentList	'A'		430140	1					
ANR	430149	Argument	'A'		430140	0					
ANR	430150	PrimaryExpression	'A'		430140	0					
ANR	430151	CompoundStatement		3:25:39:39	430140	1					
ANR	430152	ExpressionStatement	"dmlprintf1 ( ( const gs_memory_t * ) mem , ""[a%d]"" , alloc_trace_space ( mem ) )"	2537:8:81507:81576	430140	0	True				
ANR	430153	CallExpression	"dmlprintf1 ( ( const gs_memory_t * ) mem , ""[a%d]"" , alloc_trace_space ( mem ) )"		430140	0					
ANR	430154	Callee	dmlprintf1		430140	0					
ANR	430155	Identifier	dmlprintf1		430140	0					
ANR	430156	ArgumentList	( const gs_memory_t * ) mem		430140	1					
ANR	430157	Argument	( const gs_memory_t * ) mem		430140	0					
ANR	430158	CastExpression	( const gs_memory_t * ) mem		430140	0					
ANR	430159	CastTarget	const gs_memory_t *		430140	0					
ANR	430160	Identifier	mem		430140	1					
ANR	430161	Argument	"""[a%d]"""		430140	1					
ANR	430162	PrimaryExpression	"""[a%d]"""		430140	0					
ANR	430163	Argument	alloc_trace_space ( mem )		430140	2					
ANR	430164	CallExpression	alloc_trace_space ( mem )		430140	0					
ANR	430165	Callee	alloc_trace_space		430140	0					
ANR	430166	Identifier	alloc_trace_space		430140	0					
ANR	430167	ArgumentList	mem		430140	1					
ANR	430168	Argument	mem		430140	0					
ANR	430169	Identifier	mem		430140	0					
ANR	430170	ExpressionStatement	"dmprintf_clump ( ( const gs_memory_t * ) mem , ""opening clump"" , mem -> cc )"	2538:8:81586:81652	430140	1	True				
ANR	430171	CallExpression	"dmprintf_clump ( ( const gs_memory_t * ) mem , ""opening clump"" , mem -> cc )"		430140	0					
ANR	430172	Callee	dmprintf_clump		430140	0					
ANR	430173	Identifier	dmprintf_clump		430140	0					
ANR	430174	ArgumentList	( const gs_memory_t * ) mem		430140	1					
ANR	430175	Argument	( const gs_memory_t * ) mem		430140	0					
ANR	430176	CastExpression	( const gs_memory_t * ) mem		430140	0					
ANR	430177	CastTarget	const gs_memory_t *		430140	0					
ANR	430178	Identifier	mem		430140	1					
ANR	430179	Argument	"""opening clump"""		430140	1					
ANR	430180	PrimaryExpression	"""opening clump"""		430140	0					
ANR	430181	Argument	mem -> cc		430140	2					
ANR	430182	PtrMemberAccess	mem -> cc		430140	0					
ANR	430183	Identifier	mem		430140	0					
ANR	430184	Identifier	cc		430140	1					
ANR	430185	ReturnType	void		430140	1					
ANR	430186	Identifier	alloc_open_clump		430140	2					
ANR	430187	ParameterList	gs_ref_memory_t * mem		430140	3					
ANR	430188	Parameter	gs_ref_memory_t * mem	2533:17:81434:81454	430140	0	True				
ANR	430189	ParameterType	gs_ref_memory_t *		430140	0					
ANR	430190	Identifier	mem		430140	1					
ANR	430191	CFGEntryNode	ENTRY		430140		True				
ANR	430192	CFGExitNode	EXIT		430140		True				
ANR	430193	Symbol	mem		430140						
ANR	430194	Symbol	mem -> cc		430140						
ANR	430195	Symbol	gs_debug_c		430140						
ANR	430196	Symbol	alloc_trace_space		430140						
ANR	430197	Symbol	* mem		430140						
ANR	430198	Function	check_in_clump	2544:0:81683:81888							
ANR	430199	FunctionDef	"check_in_clump (clump_t * cp , void * arg)"		430198	0					
ANR	430200	CompoundStatement		2546:0:81748:81888	430198	0					
ANR	430201	IdentifierDeclStatement	clump_t * * cpp = ( clump_t * * ) arg ;	2547:4:81754:81785	430198	0	True				
ANR	430202	IdentifierDecl	* * cpp = ( clump_t * * ) arg		430198	0					
ANR	430203	IdentifierDeclType	clump_t * *		430198	0					
ANR	430204	Identifier	cpp		430198	1					
ANR	430205	AssignmentExpression	* * cpp = ( clump_t * * ) arg		430198	2		=			
ANR	430206	Identifier	cpp		430198	0					
ANR	430207	CastExpression	( clump_t * * ) arg		430198	1					
ANR	430208	CastTarget	clump_t * *		430198	0					
ANR	430209	Identifier	arg		430198	1					
ANR	430210	IfStatement	if ( * cpp != cp )		430198	1					
ANR	430211	Condition	* cpp != cp	2549:8:81796:81805	430198	0	True				
ANR	430212	EqualityExpression	* cpp != cp		430198	0		!=			
ANR	430213	UnaryOperationExpression	* cpp		430198	0					
ANR	430214	UnaryOperator	*		430198	0					
ANR	430215	Identifier	cpp		430198	1					
ANR	430216	Identifier	cp		430198	1					
ANR	430217	ReturnStatement	return SPLAY_APP_CONTINUE ;	2550:8:81816:81841	430198	1	True				
ANR	430218	Identifier	SPLAY_APP_CONTINUE		430198	0					
ANR	430219	ExpressionStatement	* cpp = NULL	2551:4:81847:81858	430198	2	True				
ANR	430220	AssignmentExpression	* cpp = NULL		430198	0		=			
ANR	430221	UnaryOperationExpression	* cpp		430198	0					
ANR	430222	UnaryOperator	*		430198	0					
ANR	430223	Identifier	cpp		430198	1					
ANR	430224	Identifier	NULL		430198	1					
ANR	430225	ReturnStatement	return SPLAY_APP_STOP ;	2553:4:81865:81886	430198	3	True				
ANR	430226	Identifier	SPLAY_APP_STOP		430198	0					
ANR	430227	ReturnType	static splay_app_result_t		430198	1					
ANR	430228	Identifier	check_in_clump		430198	2					
ANR	430229	ParameterList	"clump_t * cp , void * arg"		430198	3					
ANR	430230	Parameter	clump_t * cp	2545:15:81724:81734	430198	0	True				
ANR	430231	ParameterType	clump_t *		430198	0					
ANR	430232	Identifier	cp		430198	1					
ANR	430233	Parameter	void * arg	2545:28:81737:81745	430198	1	True				
ANR	430234	ParameterType	void *		430198	0					
ANR	430235	Identifier	arg		430198	1					
ANR	430236	CFGEntryNode	ENTRY		430198		True				
ANR	430237	CFGExitNode	EXIT		430198		True				
ANR	430238	Symbol	cpp		430198						
ANR	430239	Symbol	* cpp		430198						
ANR	430240	Symbol	SPLAY_APP_STOP		430198						
ANR	430241	Symbol	NULL		430198						
ANR	430242	Symbol	arg		430198						
ANR	430243	Symbol	cp		430198						
ANR	430244	Symbol	SPLAY_APP_CONTINUE		430198						
ANR	430245	Function	alloc_unlink_clump	2558:0:81965:82582							
ANR	430246	FunctionDef	"alloc_unlink_clump (clump_t * cp , gs_ref_memory_t * mem)"		430245	0					
ANR	430247	CompoundStatement		2560:0:82026:82582	430245	0					
ANR	430248	ExpressionStatement	SANITY_CHECK_MID ( cp )	2561:4:82032:82052	430245	0	True				
ANR	430249	CallExpression	SANITY_CHECK_MID ( cp )		430245	0					
ANR	430250	Callee	SANITY_CHECK_MID		430245	0					
ANR	430251	Identifier	SANITY_CHECK_MID		430245	0					
ANR	430252	ArgumentList	cp		430245	1					
ANR	430253	Argument	cp		430245	0					
ANR	430254	Identifier	cp		430245	0					
ANR	430255	IfStatement	if ( gs_alloc_debug )		430245	1					
ANR	430256	Condition	gs_alloc_debug	2563:8:82075:82088	430245	0	True				
ANR	430257	Identifier	gs_alloc_debug		430245	0					
ANR	430258	CompoundStatement		5:8:137:156	430245	1					
ANR	430259	IdentifierDeclStatement	clump_t * found = cp ;	2564:8:82164:82183	430245	0	True				
ANR	430260	IdentifierDecl	* found = cp		430245	0					
ANR	430261	IdentifierDeclType	clump_t *		430245	0					
ANR	430262	Identifier	found		430245	1					
ANR	430263	AssignmentExpression	* found = cp		430245	2		=			
ANR	430264	Identifier	cp		430245	0					
ANR	430265	Identifier	cp		430245	1					
ANR	430266	ExpressionStatement	"clump_splay_app ( mem -> root , mem , check_in_clump , & found )"	2565:8:82193:82248	430245	1	True				
ANR	430267	CallExpression	"clump_splay_app ( mem -> root , mem , check_in_clump , & found )"		430245	0					
ANR	430268	Callee	clump_splay_app		430245	0					
ANR	430269	Identifier	clump_splay_app		430245	0					
ANR	430270	ArgumentList	mem -> root		430245	1					
ANR	430271	Argument	mem -> root		430245	0					
ANR	430272	PtrMemberAccess	mem -> root		430245	0					
ANR	430273	Identifier	mem		430245	0					
ANR	430274	Identifier	root		430245	1					
ANR	430275	Argument	mem		430245	1					
ANR	430276	Identifier	mem		430245	0					
ANR	430277	Argument	check_in_clump		430245	2					
ANR	430278	Identifier	check_in_clump		430245	0					
ANR	430279	Argument	& found		430245	3					
ANR	430280	UnaryOperationExpression	& found		430245	0					
ANR	430281	UnaryOperator	&		430245	0					
ANR	430282	Identifier	found		430245	1					
ANR	430283	IfStatement	if ( found != NULL )		430245	2					
ANR	430284	Condition	found != NULL	2567:12:82263:82275	430245	0	True				
ANR	430285	EqualityExpression	found != NULL		430245	0		!=			
ANR	430286	Identifier	found		430245	0					
ANR	430287	Identifier	NULL		430245	1					
ANR	430288	CompoundStatement		8:27:251:251	430245	1					
ANR	430289	ExpressionStatement	"mlprintf2 ( ( const gs_memory_t * ) mem , ""unlink_clump 0x%lx not owned by memory 0x%lx!\\n"" , ( ulong ) cp , ( ulong ) mem )"	2568:12:82292:82425	430245	0	True				
ANR	430290	CallExpression	"mlprintf2 ( ( const gs_memory_t * ) mem , ""unlink_clump 0x%lx not owned by memory 0x%lx!\\n"" , ( ulong ) cp , ( ulong ) mem )"		430245	0					
ANR	430291	Callee	mlprintf2		430245	0					
ANR	430292	Identifier	mlprintf2		430245	0					
ANR	430293	ArgumentList	( const gs_memory_t * ) mem		430245	1					
ANR	430294	Argument	( const gs_memory_t * ) mem		430245	0					
ANR	430295	CastExpression	( const gs_memory_t * ) mem		430245	0					
ANR	430296	CastTarget	const gs_memory_t *		430245	0					
ANR	430297	Identifier	mem		430245	1					
ANR	430298	Argument	"""unlink_clump 0x%lx not owned by memory 0x%lx!\\n"""		430245	1					
ANR	430299	PrimaryExpression	"""unlink_clump 0x%lx not owned by memory 0x%lx!\\n"""		430245	0					
ANR	430300	Argument	( ulong ) cp		430245	2					
ANR	430301	CastExpression	( ulong ) cp		430245	0					
ANR	430302	CastTarget	ulong		430245	0					
ANR	430303	Identifier	cp		430245	1					
ANR	430304	Argument	( ulong ) mem		430245	3					
ANR	430305	CastExpression	( ulong ) mem		430245	0					
ANR	430306	CastTarget	ulong		430245	0					
ANR	430307	Identifier	mem		430245	1					
ANR	430308	ReturnStatement	return ;	2570:12:82439:82445	430245	1	True				
ANR	430309	ExpressionStatement	"( void ) clump_splay_remove ( cp , mem )"	2574:4:82492:82525	430245	2	True				
ANR	430310	CastExpression	"( void ) clump_splay_remove ( cp , mem )"		430245	0					
ANR	430311	CastTarget	void		430245	0					
ANR	430312	CallExpression	"clump_splay_remove ( cp , mem )"		430245	1					
ANR	430313	Callee	clump_splay_remove		430245	0					
ANR	430314	Identifier	clump_splay_remove		430245	0					
ANR	430315	ArgumentList	cp		430245	1					
ANR	430316	Argument	cp		430245	0					
ANR	430317	Identifier	cp		430245	0					
ANR	430318	Argument	mem		430245	1					
ANR	430319	Identifier	mem		430245	0					
ANR	430320	IfStatement	if ( mem -> cc == cp )		430245	3					
ANR	430321	Condition	mem -> cc == cp	2575:8:82535:82547	430245	0	True				
ANR	430322	EqualityExpression	mem -> cc == cp		430245	0		==			
ANR	430323	PtrMemberAccess	mem -> cc		430245	0					
ANR	430324	Identifier	mem		430245	0					
ANR	430325	Identifier	cc		430245	1					
ANR	430326	Identifier	cp		430245	1					
ANR	430327	CompoundStatement		16:23:523:523	430245	1					
ANR	430328	ExpressionStatement	mem -> cc = NULL	2576:8:82560:82574	430245	0	True				
ANR	430329	AssignmentExpression	mem -> cc = NULL		430245	0		=			
ANR	430330	PtrMemberAccess	mem -> cc		430245	0					
ANR	430331	Identifier	mem		430245	0					
ANR	430332	Identifier	cc		430245	1					
ANR	430333	Identifier	NULL		430245	1					
ANR	430334	ReturnType	void		430245	1					
ANR	430335	Identifier	alloc_unlink_clump		430245	2					
ANR	430336	ParameterList	"clump_t * cp , gs_ref_memory_t * mem"		430245	3					
ANR	430337	Parameter	clump_t * cp	2559:19:81989:82000	430245	0	True				
ANR	430338	ParameterType	clump_t *		430245	0					
ANR	430339	Identifier	cp		430245	1					
ANR	430340	Parameter	gs_ref_memory_t * mem	2559:33:82003:82023	430245	1	True				
ANR	430341	ParameterType	gs_ref_memory_t *		430245	0					
ANR	430342	Identifier	mem		430245	1					
ANR	430343	CFGEntryNode	ENTRY		430245		True				
ANR	430344	CFGExitNode	EXIT		430245		True				
ANR	430345	Symbol	& found		430245						
ANR	430346	Symbol	found		430245						
ANR	430347	Symbol	NULL		430245						
ANR	430348	Symbol	mem		430245						
ANR	430349	Symbol	check_in_clump		430245						
ANR	430350	Symbol	mem -> cc		430245						
ANR	430351	Symbol	gs_alloc_debug		430245						
ANR	430352	Symbol	mem -> root		430245						
ANR	430353	Symbol	cp		430245						
ANR	430354	Symbol	* mem		430245						
ANR	430355	Function	alloc_free_clump	2586:0:82821:83439							
ANR	430356	FunctionDef	"alloc_free_clump (clump_t * cp , gs_ref_memory_t * mem)"		430355	0					
ANR	430357	CompoundStatement		2588:0:82880:83439	430355	0					
ANR	430358	IdentifierDeclStatement	gs_memory_t * parent = mem -> non_gc_memory ;	2589:4:82886:82926	430355	0	True				
ANR	430359	IdentifierDecl	* parent = mem -> non_gc_memory		430355	0					
ANR	430360	IdentifierDeclType	gs_memory_t *		430355	0					
ANR	430361	Identifier	parent		430355	1					
ANR	430362	AssignmentExpression	* parent = mem -> non_gc_memory		430355	2		=			
ANR	430363	Identifier	parent		430355	0					
ANR	430364	PtrMemberAccess	mem -> non_gc_memory		430355	1					
ANR	430365	Identifier	mem		430355	0					
ANR	430366	Identifier	non_gc_memory		430355	1					
ANR	430367	IdentifierDeclStatement	byte * cdata = ( byte * ) cp -> chead ;	2590:4:82932:82963	430355	1	True				
ANR	430368	IdentifierDecl	* cdata = ( byte * ) cp -> chead		430355	0					
ANR	430369	IdentifierDeclType	byte *		430355	0					
ANR	430370	Identifier	cdata		430355	1					
ANR	430371	AssignmentExpression	* cdata = ( byte * ) cp -> chead		430355	2		=			
ANR	430372	Identifier	cdata		430355	0					
ANR	430373	CastExpression	( byte * ) cp -> chead		430355	1					
ANR	430374	CastTarget	byte *		430355	0					
ANR	430375	PtrMemberAccess	cp -> chead		430355	1					
ANR	430376	Identifier	cp		430355	0					
ANR	430377	Identifier	chead		430355	1					
ANR	430378	IdentifierDeclStatement	ulong csize = ( byte * ) cp -> cend - cdata ;	2591:4:82969:83007	430355	2	True				
ANR	430379	IdentifierDecl	csize = ( byte * ) cp -> cend - cdata		430355	0					
ANR	430380	IdentifierDeclType	ulong		430355	0					
ANR	430381	Identifier	csize		430355	1					
ANR	430382	AssignmentExpression	csize = ( byte * ) cp -> cend - cdata		430355	2		=			
ANR	430383	Identifier	csize		430355	0					
ANR	430384	AdditiveExpression	( byte * ) cp -> cend - cdata		430355	1		-			
ANR	430385	CastExpression	( byte * ) cp -> cend		430355	0					
ANR	430386	CastTarget	byte *		430355	0					
ANR	430387	PtrMemberAccess	cp -> cend		430355	1					
ANR	430388	Identifier	cp		430355	0					
ANR	430389	Identifier	cend		430355	1					
ANR	430390	Identifier	cdata		430355	1					
ANR	430391	ExpressionStatement	"alloc_unlink_clump ( cp , mem )"	2593:4:83014:83041	430355	3	True				
ANR	430392	CallExpression	"alloc_unlink_clump ( cp , mem )"		430355	0					
ANR	430393	Callee	alloc_unlink_clump		430355	0					
ANR	430394	Identifier	alloc_unlink_clump		430355	0					
ANR	430395	ArgumentList	cp		430355	1					
ANR	430396	Argument	cp		430355	0					
ANR	430397	Identifier	cp		430355	0					
ANR	430398	Argument	mem		430355	1					
ANR	430399	Identifier	mem		430355	0					
ANR	430400	ExpressionStatement	mem -> allocated -= st_clump . ssize	2594:4:83047:83079	430355	4	True				
ANR	430401	AssignmentExpression	mem -> allocated -= st_clump . ssize		430355	0		-=			
ANR	430402	PtrMemberAccess	mem -> allocated		430355	0					
ANR	430403	Identifier	mem		430355	0					
ANR	430404	Identifier	allocated		430355	1					
ANR	430405	MemberAccess	st_clump . ssize		430355	1					
ANR	430406	Identifier	st_clump		430355	0					
ANR	430407	Identifier	ssize		430355	1					
ANR	430408	IfStatement	if ( mem -> cfreed . cp == cp )		430355	5					
ANR	430409	Condition	mem -> cfreed . cp == cp	2595:8:83089:83108	430355	0	True				
ANR	430410	EqualityExpression	mem -> cfreed . cp == cp		430355	0		==			
ANR	430411	MemberAccess	mem -> cfreed . cp		430355	0					
ANR	430412	PtrMemberAccess	mem -> cfreed		430355	0					
ANR	430413	Identifier	mem		430355	0					
ANR	430414	Identifier	cfreed		430355	1					
ANR	430415	Identifier	cp		430355	1					
ANR	430416	Identifier	cp		430355	1					
ANR	430417	ExpressionStatement	mem -> cfreed . cp = 0	2596:8:83119:83137	430355	1	True				
ANR	430418	AssignmentExpression	mem -> cfreed . cp = 0		430355	0		=			
ANR	430419	MemberAccess	mem -> cfreed . cp		430355	0					
ANR	430420	PtrMemberAccess	mem -> cfreed		430355	0					
ANR	430421	Identifier	mem		430355	0					
ANR	430422	Identifier	cfreed		430355	1					
ANR	430423	Identifier	cp		430355	1					
ANR	430424	PrimaryExpression	0		430355	1					
ANR	430425	IfStatement	if ( cp -> outer == 0 )		430355	6					
ANR	430426	Condition	cp -> outer == 0	2597:8:83147:83160	430355	0	True				
ANR	430427	EqualityExpression	cp -> outer == 0		430355	0		==			
ANR	430428	PtrMemberAccess	cp -> outer		430355	0					
ANR	430429	Identifier	cp		430355	0					
ANR	430430	Identifier	outer		430355	1					
ANR	430431	PrimaryExpression	0		430355	1					
ANR	430432	CompoundStatement		10:24:282:282	430355	1					
ANR	430433	ExpressionStatement	mem -> allocated -= csize	2598:8:83173:83196	430355	0	True				
ANR	430434	AssignmentExpression	mem -> allocated -= csize		430355	0		-=			
ANR	430435	PtrMemberAccess	mem -> allocated		430355	0					
ANR	430436	Identifier	mem		430355	0					
ANR	430437	Identifier	allocated		430355	1					
ANR	430438	Identifier	csize		430355	1					
ANR	430439	ExpressionStatement	"gs_free_object ( parent , cdata , ""alloc_free_clump(data)"" )"	2599:8:83206:83261	430355	1	True				
ANR	430440	CallExpression	"gs_free_object ( parent , cdata , ""alloc_free_clump(data)"" )"		430355	0					
ANR	430441	Callee	gs_free_object		430355	0					
ANR	430442	Identifier	gs_free_object		430355	0					
ANR	430443	ArgumentList	parent		430355	1					
ANR	430444	Argument	parent		430355	0					
ANR	430445	Identifier	parent		430355	0					
ANR	430446	Argument	cdata		430355	1					
ANR	430447	Identifier	cdata		430355	0					
ANR	430448	Argument	"""alloc_free_clump(data)"""		430355	2					
ANR	430449	PrimaryExpression	"""alloc_free_clump(data)"""		430355	0					
ANR	430450	ElseStatement	else		430355	0					
ANR	430451	CompoundStatement		13:11:393:393	430355	0					
ANR	430452	ExpressionStatement	cp -> outer -> inner_count --	2601:8:83284:83308	430355	0	True				
ANR	430453	PostIncDecOperationExpression	cp -> outer -> inner_count --		430355	0					
ANR	430454	PtrMemberAccess	cp -> outer -> inner_count		430355	0					
ANR	430455	PtrMemberAccess	cp -> outer		430355	0					
ANR	430456	Identifier	cp		430355	0					
ANR	430457	Identifier	outer		430355	1					
ANR	430458	Identifier	inner_count		430355	1					
ANR	430459	IncDec	--		430355	1					
ANR	430460	ExpressionStatement	"gs_alloc_fill ( cdata , gs_alloc_fill_free , csize )"	2602:8:83318:83365	430355	1	True				
ANR	430461	CallExpression	"gs_alloc_fill ( cdata , gs_alloc_fill_free , csize )"		430355	0					
ANR	430462	Callee	gs_alloc_fill		430355	0					
ANR	430463	Identifier	gs_alloc_fill		430355	0					
ANR	430464	ArgumentList	cdata		430355	1					
ANR	430465	Argument	cdata		430355	0					
ANR	430466	Identifier	cdata		430355	0					
ANR	430467	Argument	gs_alloc_fill_free		430355	1					
ANR	430468	Identifier	gs_alloc_fill_free		430355	0					
ANR	430469	Argument	csize		430355	2					
ANR	430470	Identifier	csize		430355	0					
ANR	430471	ExpressionStatement	"gs_free_object ( parent , cp , ""alloc_free_clump(clump struct)"" )"	2604:4:83377:83437	430355	7	True				
ANR	430472	CallExpression	"gs_free_object ( parent , cp , ""alloc_free_clump(clump struct)"" )"		430355	0					
ANR	430473	Callee	gs_free_object		430355	0					
ANR	430474	Identifier	gs_free_object		430355	0					
ANR	430475	ArgumentList	parent		430355	1					
ANR	430476	Argument	parent		430355	0					
ANR	430477	Identifier	parent		430355	0					
ANR	430478	Argument	cp		430355	1					
ANR	430479	Identifier	cp		430355	0					
ANR	430480	Argument	"""alloc_free_clump(clump struct)"""		430355	2					
ANR	430481	PrimaryExpression	"""alloc_free_clump(clump struct)"""		430355	0					
ANR	430482	ReturnType	void		430355	1					
ANR	430483	Identifier	alloc_free_clump		430355	2					
ANR	430484	ParameterList	"clump_t * cp , gs_ref_memory_t * mem"		430355	3					
ANR	430485	Parameter	clump_t * cp	2587:17:82843:82854	430355	0	True				
ANR	430486	ParameterType	clump_t *		430355	0					
ANR	430487	Identifier	cp		430355	1					
ANR	430488	Parameter	gs_ref_memory_t * mem	2587:31:82857:82877	430355	1	True				
ANR	430489	ParameterType	gs_ref_memory_t *		430355	0					
ANR	430490	Identifier	mem		430355	1					
ANR	430491	CFGEntryNode	ENTRY		430355		True				
ANR	430492	CFGExitNode	EXIT		430355		True				
ANR	430493	Symbol	parent		430355						
ANR	430494	Symbol	mem -> allocated		430355						
ANR	430495	Symbol	cp -> cend		430355						
ANR	430496	Symbol	gs_alloc_fill_free		430355						
ANR	430497	Symbol	mem -> cfreed . cp		430355						
ANR	430498	Symbol	csize		430355						
ANR	430499	Symbol	cp		430355						
ANR	430500	Symbol	mem -> non_gc_memory		430355						
ANR	430501	Symbol	st_clump		430355						
ANR	430502	Symbol	cp -> outer -> inner_count		430355						
ANR	430503	Symbol	cdata		430355						
ANR	430504	Symbol	* cp		430355						
ANR	430505	Symbol	st_clump . ssize		430355						
ANR	430506	Symbol	* cp -> outer		430355						
ANR	430507	Symbol	cp -> chead		430355						
ANR	430508	Symbol	mem -> cfreed		430355						
ANR	430509	Symbol	mem		430355						
ANR	430510	Symbol	cp -> outer		430355						
ANR	430511	Symbol	* * cp		430355						
ANR	430512	Symbol	* mem		430355						
ANR	430513	Function	clump_locate_ptr	2612:0:83722:84218							
ANR	430514	FunctionDef	"clump_locate_ptr (const void * ptr , clump_locator_t * clp)"		430513	0					
ANR	430515	CompoundStatement		2614:0:83784:84218	430513	0					
ANR	430516	IdentifierDeclStatement	clump_t * cp = clp -> memory -> root ;	2615:4:83790:83821	430513	0	True				
ANR	430517	IdentifierDecl	* cp = clp -> memory -> root		430513	0					
ANR	430518	IdentifierDeclType	clump_t *		430513	0					
ANR	430519	Identifier	cp		430513	1					
ANR	430520	AssignmentExpression	* cp = clp -> memory -> root		430513	2		=			
ANR	430521	Identifier	cp		430513	0					
ANR	430522	PtrMemberAccess	clp -> memory -> root		430513	1					
ANR	430523	PtrMemberAccess	clp -> memory		430513	0					
ANR	430524	Identifier	clp		430513	0					
ANR	430525	Identifier	memory		430513	1					
ANR	430526	Identifier	root		430513	1					
ANR	430527	WhileStatement	while ( cp )		430513	1					
ANR	430528	Condition	cp	2617:11:83835:83836	430513	0	True				
ANR	430529	Identifier	cp		430513	0					
ANR	430530	CompoundStatement		5:4:58:58	430513	1					
ANR	430531	IfStatement	"if ( PTR_LT ( ptr , cp -> cbase ) )"		430513	0					
ANR	430532	Condition	"PTR_LT ( ptr , cp -> cbase )"	2619:12:83857:83878	430513	0	True				
ANR	430533	CallExpression	"PTR_LT ( ptr , cp -> cbase )"		430513	0					
ANR	430534	Callee	PTR_LT		430513	0					
ANR	430535	Identifier	PTR_LT		430513	0					
ANR	430536	ArgumentList	ptr		430513	1					
ANR	430537	Argument	ptr		430513	0					
ANR	430538	Identifier	ptr		430513	0					
ANR	430539	Argument	cp -> cbase		430513	1					
ANR	430540	PtrMemberAccess	cp -> cbase		430513	0					
ANR	430541	Identifier	cp		430513	0					
ANR	430542	Identifier	cbase		430513	1					
ANR	430543	CompoundStatement		7:8:104:104	430513	1					
ANR	430544	ExpressionStatement	cp = cp -> left	2621:12:83903:83916	430513	0	True				
ANR	430545	AssignmentExpression	cp = cp -> left		430513	0		=			
ANR	430546	Identifier	cp		430513	0					
ANR	430547	PtrMemberAccess	cp -> left		430513	1					
ANR	430548	Identifier	cp		430513	0					
ANR	430549	Identifier	left		430513	1					
ANR	430550	ContinueStatement	continue ;	2622:12:83930:83938	430513	1	True				
ANR	430551	IfStatement	"if ( PTR_GE ( ptr , cp -> cend ) )"		430513	1					
ANR	430552	Condition	"PTR_GE ( ptr , cp -> cend )"	2624:12:83962:83982	430513	0	True				
ANR	430553	CallExpression	"PTR_GE ( ptr , cp -> cend )"		430513	0					
ANR	430554	Callee	PTR_GE		430513	0					
ANR	430555	Identifier	PTR_GE		430513	0					
ANR	430556	ArgumentList	ptr		430513	1					
ANR	430557	Argument	ptr		430513	0					
ANR	430558	Identifier	ptr		430513	0					
ANR	430559	Argument	cp -> cend		430513	1					
ANR	430560	PtrMemberAccess	cp -> cend		430513	0					
ANR	430561	Identifier	cp		430513	0					
ANR	430562	Identifier	cend		430513	1					
ANR	430563	CompoundStatement		12:8:208:208	430513	1					
ANR	430564	ExpressionStatement	cp = cp -> right	2626:12:84007:84021	430513	0	True				
ANR	430565	AssignmentExpression	cp = cp -> right		430513	0		=			
ANR	430566	Identifier	cp		430513	0					
ANR	430567	PtrMemberAccess	cp -> right		430513	1					
ANR	430568	Identifier	cp		430513	0					
ANR	430569	Identifier	right		430513	1					
ANR	430570	ContinueStatement	continue ;	2627:12:84035:84043	430513	1	True				
ANR	430571	ExpressionStatement	"splay_move_to_root ( cp , clp -> memory )"	2630:8:84087:84122	430513	2	True				
ANR	430572	CallExpression	"splay_move_to_root ( cp , clp -> memory )"		430513	0					
ANR	430573	Callee	splay_move_to_root		430513	0					
ANR	430574	Identifier	splay_move_to_root		430513	0					
ANR	430575	ArgumentList	cp		430513	1					
ANR	430576	Argument	cp		430513	0					
ANR	430577	Identifier	cp		430513	0					
ANR	430578	Argument	clp -> memory		430513	1					
ANR	430579	PtrMemberAccess	clp -> memory		430513	0					
ANR	430580	Identifier	clp		430513	0					
ANR	430581	Identifier	memory		430513	1					
ANR	430582	ExpressionStatement	clp -> cp = cp	2631:8:84132:84144	430513	3	True				
ANR	430583	AssignmentExpression	clp -> cp = cp		430513	0		=			
ANR	430584	PtrMemberAccess	clp -> cp		430513	0					
ANR	430585	Identifier	clp		430513	0					
ANR	430586	Identifier	cp		430513	1					
ANR	430587	Identifier	cp		430513	1					
ANR	430588	ReturnStatement	"return ! ptr_is_in_inner_clump ( ptr , cp ) ;"	2632:8:84154:84192	430513	4	True				
ANR	430589	UnaryOperationExpression	"! ptr_is_in_inner_clump ( ptr , cp )"		430513	0					
ANR	430590	UnaryOperator	!		430513	0					
ANR	430591	CallExpression	"ptr_is_in_inner_clump ( ptr , cp )"		430513	1					
ANR	430592	Callee	ptr_is_in_inner_clump		430513	0					
ANR	430593	Identifier	ptr_is_in_inner_clump		430513	0					
ANR	430594	ArgumentList	ptr		430513	1					
ANR	430595	Argument	ptr		430513	0					
ANR	430596	Identifier	ptr		430513	0					
ANR	430597	Argument	cp		430513	1					
ANR	430598	Identifier	cp		430513	0					
ANR	430599	ReturnStatement	return false ;	2634:4:84204:84216	430513	2	True				
ANR	430600	Identifier	false		430513	0					
ANR	430601	ReturnType	bool		430513	1					
ANR	430602	Identifier	clump_locate_ptr		430513	2					
ANR	430603	ParameterList	"const void * ptr , clump_locator_t * clp"		430513	3					
ANR	430604	Parameter	const void * ptr	2613:17:83744:83758	430513	0	True				
ANR	430605	ParameterType	const void *		430513	0					
ANR	430606	Identifier	ptr		430513	1					
ANR	430607	Parameter	clump_locator_t * clp	2613:34:83761:83781	430513	1	True				
ANR	430608	ParameterType	clump_locator_t *		430513	0					
ANR	430609	Identifier	clp		430513	1					
ANR	430610	CFGEntryNode	ENTRY		430513		True				
ANR	430611	CFGExitNode	EXIT		430513		True				
ANR	430612	Symbol	clp -> cp		430513						
ANR	430613	Symbol	clp -> memory		430513						
ANR	430614	Symbol	PTR_GE		430513						
ANR	430615	Symbol	clp		430513						
ANR	430616	Symbol	clp -> memory -> root		430513						
ANR	430617	Symbol	ptr_is_in_inner_clump		430513						
ANR	430618	Symbol	cp -> cend		430513						
ANR	430619	Symbol	false		430513						
ANR	430620	Symbol	cp -> right		430513						
ANR	430621	Symbol	cp -> cbase		430513						
ANR	430622	Symbol	* clp -> memory		430513						
ANR	430623	Symbol	cp		430513						
ANR	430624	Symbol	* clp		430513						
ANR	430625	Symbol	ptr		430513						
ANR	430626	Symbol	* cp		430513						
ANR	430627	Symbol	PTR_LT		430513						
ANR	430628	Symbol	cp -> left		430513						
ANR	430629	Symbol	* * clp		430513						
ANR	430630	Function	ptr_is_within_mem_clumps	2637:0:84221:84659							
ANR	430631	FunctionDef	"ptr_is_within_mem_clumps (const void * ptr , gs_ref_memory_t * mem)"		430630	0					
ANR	430632	CompoundStatement		2638:0:84290:84659	430630	0					
ANR	430633	IdentifierDeclStatement	clump_t * cp = mem -> root ;	2639:4:84296:84319	430630	0	True				
ANR	430634	IdentifierDecl	* cp = mem -> root		430630	0					
ANR	430635	IdentifierDeclType	clump_t *		430630	0					
ANR	430636	Identifier	cp		430630	1					
ANR	430637	AssignmentExpression	* cp = mem -> root		430630	2		=			
ANR	430638	Identifier	cp		430630	0					
ANR	430639	PtrMemberAccess	mem -> root		430630	1					
ANR	430640	Identifier	mem		430630	0					
ANR	430641	Identifier	root		430630	1					
ANR	430642	WhileStatement	while ( cp )		430630	1					
ANR	430643	Condition	cp	2641:11:84333:84334	430630	0	True				
ANR	430644	Identifier	cp		430630	0					
ANR	430645	CompoundStatement		5:4:50:50	430630	1					
ANR	430646	IfStatement	"if ( PTR_LT ( ptr , cp -> cbase ) )"		430630	0					
ANR	430647	Condition	"PTR_LT ( ptr , cp -> cbase )"	2643:12:84355:84376	430630	0	True				
ANR	430648	CallExpression	"PTR_LT ( ptr , cp -> cbase )"		430630	0					
ANR	430649	Callee	PTR_LT		430630	0					
ANR	430650	Identifier	PTR_LT		430630	0					
ANR	430651	ArgumentList	ptr		430630	1					
ANR	430652	Argument	ptr		430630	0					
ANR	430653	Identifier	ptr		430630	0					
ANR	430654	Argument	cp -> cbase		430630	1					
ANR	430655	PtrMemberAccess	cp -> cbase		430630	0					
ANR	430656	Identifier	cp		430630	0					
ANR	430657	Identifier	cbase		430630	1					
ANR	430658	CompoundStatement		7:8:96:96	430630	1					
ANR	430659	ExpressionStatement	cp = cp -> left	2645:12:84401:84414	430630	0	True				
ANR	430660	AssignmentExpression	cp = cp -> left		430630	0		=			
ANR	430661	Identifier	cp		430630	0					
ANR	430662	PtrMemberAccess	cp -> left		430630	1					
ANR	430663	Identifier	cp		430630	0					
ANR	430664	Identifier	left		430630	1					
ANR	430665	ContinueStatement	continue ;	2646:12:84428:84436	430630	1	True				
ANR	430666	IfStatement	"if ( PTR_GE ( ptr , cp -> cend ) )"		430630	1					
ANR	430667	Condition	"PTR_GE ( ptr , cp -> cend )"	2648:12:84460:84480	430630	0	True				
ANR	430668	CallExpression	"PTR_GE ( ptr , cp -> cend )"		430630	0					
ANR	430669	Callee	PTR_GE		430630	0					
ANR	430670	Identifier	PTR_GE		430630	0					
ANR	430671	ArgumentList	ptr		430630	1					
ANR	430672	Argument	ptr		430630	0					
ANR	430673	Identifier	ptr		430630	0					
ANR	430674	Argument	cp -> cend		430630	1					
ANR	430675	PtrMemberAccess	cp -> cend		430630	0					
ANR	430676	Identifier	cp		430630	0					
ANR	430677	Identifier	cend		430630	1					
ANR	430678	CompoundStatement		12:8:200:200	430630	1					
ANR	430679	ExpressionStatement	cp = cp -> right	2650:12:84505:84519	430630	0	True				
ANR	430680	AssignmentExpression	cp = cp -> right		430630	0		=			
ANR	430681	Identifier	cp		430630	0					
ANR	430682	PtrMemberAccess	cp -> right		430630	1					
ANR	430683	Identifier	cp		430630	0					
ANR	430684	Identifier	right		430630	1					
ANR	430685	ContinueStatement	continue ;	2651:12:84533:84541	430630	1	True				
ANR	430686	ExpressionStatement	"splay_move_to_root ( cp , mem )"	2654:8:84585:84612	430630	2	True				
ANR	430687	CallExpression	"splay_move_to_root ( cp , mem )"		430630	0					
ANR	430688	Callee	splay_move_to_root		430630	0					
ANR	430689	Identifier	splay_move_to_root		430630	0					
ANR	430690	ArgumentList	cp		430630	1					
ANR	430691	Argument	cp		430630	0					
ANR	430692	Identifier	cp		430630	0					
ANR	430693	Argument	mem		430630	1					
ANR	430694	Identifier	mem		430630	0					
ANR	430695	ReturnStatement	return true ;	2655:8:84622:84633	430630	3	True				
ANR	430696	Identifier	true		430630	0					
ANR	430697	ReturnStatement	return false ;	2657:4:84645:84657	430630	2	True				
ANR	430698	Identifier	false		430630	0					
ANR	430699	ReturnType	bool		430630	1					
ANR	430700	Identifier	ptr_is_within_mem_clumps		430630	2					
ANR	430701	ParameterList	"const void * ptr , gs_ref_memory_t * mem"		430630	3					
ANR	430702	Parameter	const void * ptr	2637:30:84251:84265	430630	0	True				
ANR	430703	ParameterType	const void *		430630	0					
ANR	430704	Identifier	ptr		430630	1					
ANR	430705	Parameter	gs_ref_memory_t * mem	2637:47:84268:84287	430630	1	True				
ANR	430706	ParameterType	gs_ref_memory_t *		430630	0					
ANR	430707	Identifier	mem		430630	1					
ANR	430708	CFGEntryNode	ENTRY		430630		True				
ANR	430709	CFGExitNode	EXIT		430630		True				
ANR	430710	Symbol	PTR_GE		430630						
ANR	430711	Symbol	cp -> cend		430630						
ANR	430712	Symbol	false		430630						
ANR	430713	Symbol	cp -> right		430630						
ANR	430714	Symbol	cp -> cbase		430630						
ANR	430715	Symbol	cp		430630						
ANR	430716	Symbol	ptr		430630						
ANR	430717	Symbol	* cp		430630						
ANR	430718	Symbol	PTR_LT		430630						
ANR	430719	Symbol	mem		430630						
ANR	430720	Symbol	cp -> left		430630						
ANR	430721	Symbol	true		430630						
ANR	430722	Symbol	mem -> root		430630						
ANR	430723	Symbol	* mem		430630						
ANR	430724	Function	obj_in_control_region	2666:0:84729:84987							
ANR	430725	FunctionDef	"obj_in_control_region (const void * obot , const void * otop , const dump_control_t * pdc)"		430724	0					
ANR	430726	CompoundStatement		2669:0:84855:84987	430724	0					
ANR	430727	ReturnStatement	"return ( ( pdc -> bottom == NULL || PTR_GT ( otop , pdc -> bottom ) ) && ( pdc -> top == NULL || PTR_LT ( obot , pdc -> top ) ) ) ;"	2670:4:84861:84985	430724	0	True				
ANR	430728	AndExpression	"( pdc -> bottom == NULL || PTR_GT ( otop , pdc -> bottom ) ) && ( pdc -> top == NULL || PTR_LT ( obot , pdc -> top ) )"		430724	0		&&			
ANR	430729	OrExpression	"pdc -> bottom == NULL || PTR_GT ( otop , pdc -> bottom )"		430724	0		||			
ANR	430730	EqualityExpression	pdc -> bottom == NULL		430724	0		==			
ANR	430731	PtrMemberAccess	pdc -> bottom		430724	0					
ANR	430732	Identifier	pdc		430724	0					
ANR	430733	Identifier	bottom		430724	1					
ANR	430734	Identifier	NULL		430724	1					
ANR	430735	CallExpression	"PTR_GT ( otop , pdc -> bottom )"		430724	1					
ANR	430736	Callee	PTR_GT		430724	0					
ANR	430737	Identifier	PTR_GT		430724	0					
ANR	430738	ArgumentList	otop		430724	1					
ANR	430739	Argument	otop		430724	0					
ANR	430740	Identifier	otop		430724	0					
ANR	430741	Argument	pdc -> bottom		430724	1					
ANR	430742	PtrMemberAccess	pdc -> bottom		430724	0					
ANR	430743	Identifier	pdc		430724	0					
ANR	430744	Identifier	bottom		430724	1					
ANR	430745	OrExpression	"pdc -> top == NULL || PTR_LT ( obot , pdc -> top )"		430724	1		||			
ANR	430746	EqualityExpression	pdc -> top == NULL		430724	0		==			
ANR	430747	PtrMemberAccess	pdc -> top		430724	0					
ANR	430748	Identifier	pdc		430724	0					
ANR	430749	Identifier	top		430724	1					
ANR	430750	Identifier	NULL		430724	1					
ANR	430751	CallExpression	"PTR_LT ( obot , pdc -> top )"		430724	1					
ANR	430752	Callee	PTR_LT		430724	0					
ANR	430753	Identifier	PTR_LT		430724	0					
ANR	430754	ArgumentList	obot		430724	1					
ANR	430755	Argument	obot		430724	0					
ANR	430756	Identifier	obot		430724	0					
ANR	430757	Argument	pdc -> top		430724	1					
ANR	430758	PtrMemberAccess	pdc -> top		430724	0					
ANR	430759	Identifier	pdc		430724	0					
ANR	430760	Identifier	top		430724	1					
ANR	430761	ReturnType	static inline bool		430724	1					
ANR	430762	Identifier	obj_in_control_region		430724	2					
ANR	430763	ParameterList	"const void * obot , const void * otop , const dump_control_t * pdc"		430724	3					
ANR	430764	Parameter	const void * obot	2667:22:84770:84785	430724	0	True				
ANR	430765	ParameterType	const void *		430724	0					
ANR	430766	Identifier	obot		430724	1					
ANR	430767	Parameter	const void * otop	2667:40:84788:84803	430724	1	True				
ANR	430768	ParameterType	const void *		430724	0					
ANR	430769	Identifier	otop		430724	1					
ANR	430770	Parameter	const dump_control_t * pdc	2668:22:84828:84852	430724	2	True				
ANR	430771	ParameterType	const dump_control_t *		430724	0					
ANR	430772	Identifier	pdc		430724	1					
ANR	430773	CFGEntryNode	ENTRY		430724		True				
ANR	430774	CFGExitNode	EXIT		430724		True				
ANR	430775	Symbol	otop		430724						
ANR	430776	Symbol	PTR_LT		430724						
ANR	430777	Symbol	NULL		430724						
ANR	430778	Symbol	PTR_GT		430724						
ANR	430779	Symbol	pdc -> bottom		430724						
ANR	430780	Symbol	* pdc		430724						
ANR	430781	Symbol	obot		430724						
ANR	430782	Symbol	pdc -> top		430724						
ANR	430783	Symbol	pdc		430724						
ANR	430784	DeclStmt									
ANR	430785	Decl							const dump_control_t	const dump_control_t	dump_control_default
ANR	430786	DeclStmt									
ANR	430787	Decl							const dump_control_t	const dump_control_t	dump_control_all
ANR	430788	DeclStmt									
ANR	430789	Decl							const dump_control_t	const dump_control_t	dump_control_no_contents
ANR	430790	Function	debug_indent	2695:0:85503:85637							
ANR	430791	FunctionDef	"debug_indent (const gs_memory_t * mem , int indent)"		430790	0					
ANR	430792	CompoundStatement		2697:0:85564:85637	430790	0					
ANR	430793	IdentifierDeclStatement	int i ;	2698:4:85570:85575	430790	0	True				
ANR	430794	IdentifierDecl	i		430790	0					
ANR	430795	IdentifierDeclType	int		430790	0					
ANR	430796	Identifier	i		430790	1					
ANR	430797	ForStatement	for ( i = indent ; i > 0 ; -- i )		430790	1					
ANR	430798	ForInit	i = indent ;	2700:9:85587:85597	430790	0	True				
ANR	430799	AssignmentExpression	i = indent		430790	0		=			
ANR	430800	Identifier	i		430790	0					
ANR	430801	Identifier	indent		430790	1					
ANR	430802	Condition	i > 0	2700:21:85599:85603	430790	1	True				
ANR	430803	RelationalExpression	i > 0		430790	0		>			
ANR	430804	Identifier	i		430790	0					
ANR	430805	PrimaryExpression	0		430790	1					
ANR	430806	UnaryExpression	-- i	2700:28:85606:85608	430790	2	True				
ANR	430807	IncDec	--		430790	0					
ANR	430808	Identifier	i		430790	1					
ANR	430809	ExpressionStatement	"dmputc ( mem , ' ' )"	2701:8:85619:85635	430790	3	True				
ANR	430810	CallExpression	"dmputc ( mem , ' ' )"		430790	0					
ANR	430811	Callee	dmputc		430790	0					
ANR	430812	Identifier	dmputc		430790	0					
ANR	430813	ArgumentList	mem		430790	1					
ANR	430814	Argument	mem		430790	0					
ANR	430815	Identifier	mem		430790	0					
ANR	430816	Argument	' '		430790	1					
ANR	430817	PrimaryExpression	' '		430790	0					
ANR	430818	ReturnType	static void		430790	1					
ANR	430819	Identifier	debug_indent		430790	2					
ANR	430820	ParameterList	"const gs_memory_t * mem , int indent"		430790	3					
ANR	430821	Parameter	const gs_memory_t * mem	2696:13:85528:85549	430790	0	True				
ANR	430822	ParameterType	const gs_memory_t *		430790	0					
ANR	430823	Identifier	mem		430790	1					
ANR	430824	Parameter	int indent	2696:37:85552:85561	430790	1	True				
ANR	430825	ParameterType	int		430790	0					
ANR	430826	Identifier	indent		430790	1					
ANR	430827	CFGEntryNode	ENTRY		430790		True				
ANR	430828	CFGExitNode	EXIT		430790		True				
ANR	430829	Symbol	mem		430790						
ANR	430830	Symbol	indent		430790						
ANR	430831	Symbol	i		430790						
ANR	430832	Function	debug_dump_contents	2703:0:85639:87560							
ANR	430833	FunctionDef	"debug_dump_contents (const gs_memory_t * mem , const byte * bot , const byte * top , int indent , bool as_chars)"		430832	0					
ANR	430834	CompoundStatement		2706:0:85778:87560	430832	0					
ANR	430835	IdentifierDeclStatement	const byte * block ;	2707:4:85784:85801	430832	0	True				
ANR	430836	IdentifierDecl	* block		430832	0					
ANR	430837	IdentifierDeclType	const byte *		430832	0					
ANR	430838	Identifier	block		430832	1					
ANR	430839	Statement	define	2709:1:85805:85810	430832	1	True				
ANR	430840	Statement	block_size	2709:8:85812:85821	430832	2	True				
ANR	430841	Statement	16	2709:19:85823:85824	430832	3	True				
ANR	430842	IfStatement	if ( bot >= top )		430832	4					
ANR	430843	Condition	bot >= top	2711:8:85835:85844	430832	0	True				
ANR	430844	RelationalExpression	bot >= top		430832	0		>=			
ANR	430845	Identifier	bot		430832	0					
ANR	430846	Identifier	top		430832	1					
ANR	430847	ReturnStatement	return ;	2712:8:85855:85861	430832	1	True				
ANR	430848	ForStatement	for ( block = bot - ( ( bot - ( byte * ) 0 ) & ( block_size - 1 ) ) ; block < top ; block += block_size )		430832	5					
ANR	430849	ForInit	block = bot - ( ( bot - ( byte * ) 0 ) & ( block_size - 1 ) ) ;	2713:9:85872:85925	430832	0	True				
ANR	430850	AssignmentExpression	block = bot - ( ( bot - ( byte * ) 0 ) & ( block_size - 1 ) )		430832	0		=			
ANR	430851	Identifier	block		430832	0					
ANR	430852	AdditiveExpression	bot - ( ( bot - ( byte * ) 0 ) & ( block_size - 1 ) )		430832	1		-			
ANR	430853	Identifier	bot		430832	0					
ANR	430854	BitAndExpression	( bot - ( byte * ) 0 ) & ( block_size - 1 )		430832	1		&			
ANR	430855	AdditiveExpression	bot - ( byte * ) 0		430832	0		-			
ANR	430856	Identifier	bot		430832	0					
ANR	430857	CastExpression	( byte * ) 0		430832	1					
ANR	430858	CastTarget	byte *		430832	0					
ANR	430859	PrimaryExpression	0		430832	1					
ANR	430860	AdditiveExpression	block_size - 1		430832	1		-			
ANR	430861	Identifier	block_size		430832	0					
ANR	430862	PrimaryExpression	1		430832	1					
ANR	430863	Condition	block < top	2714:9:85936:85946	430832	1	True				
ANR	430864	RelationalExpression	block < top		430832	0		<			
ANR	430865	Identifier	block		430832	0					
ANR	430866	Identifier	top		430832	1					
ANR	430867	AssignmentExpression	block += block_size	2714:22:85949:85967	430832	2	True	+=			
ANR	430868	Identifier	block		430832	0					
ANR	430869	Identifier	block_size		430832	1					
ANR	430870	CompoundStatement		12:8:225:239	430832	3					
ANR	430871	IdentifierDeclStatement	int i ;	2716:8:85989:85994	430832	0	True				
ANR	430872	IdentifierDecl	i		430832	0					
ANR	430873	IdentifierDeclType	int		430832	0					
ANR	430874	Identifier	i		430832	1					
ANR	430875	IdentifierDeclStatement	char label [ 12 ] ;	2717:8:86004:86018	430832	1	True				
ANR	430876	IdentifierDecl	label [ 12 ]		430832	0					
ANR	430877	IdentifierDeclType	char [ 12 ]		430832	0					
ANR	430878	Identifier	label		430832	1					
ANR	430879	PrimaryExpression	12		430832	2					
ANR	430880	IfStatement	"if ( block >= bot + block_size && block <= top - ( block_size * 2 ) && ! memcmp ( block , block - block_size , block_size ) && ! memcmp ( block , block + block_size , block_size ) )"		430832	2					
ANR	430881	Condition	"block >= bot + block_size && block <= top - ( block_size * 2 ) && ! memcmp ( block , block - block_size , block_size ) && ! memcmp ( block , block + block_size , block_size )"	2720:12:86074:86269	430832	0	True				
ANR	430882	AndExpression	"block >= bot + block_size && block <= top - ( block_size * 2 ) && ! memcmp ( block , block - block_size , block_size ) && ! memcmp ( block , block + block_size , block_size )"		430832	0		&&			
ANR	430883	RelationalExpression	block >= bot + block_size		430832	0		>=			
ANR	430884	Identifier	block		430832	0					
ANR	430885	AdditiveExpression	bot + block_size		430832	1		+			
ANR	430886	Identifier	bot		430832	0					
ANR	430887	Identifier	block_size		430832	1					
ANR	430888	AndExpression	"block <= top - ( block_size * 2 ) && ! memcmp ( block , block - block_size , block_size ) && ! memcmp ( block , block + block_size , block_size )"		430832	1		&&			
ANR	430889	RelationalExpression	block <= top - ( block_size * 2 )		430832	0		<=			
ANR	430890	Identifier	block		430832	0					
ANR	430891	AdditiveExpression	top - ( block_size * 2 )		430832	1		-			
ANR	430892	Identifier	top		430832	0					
ANR	430893	MultiplicativeExpression	block_size * 2		430832	1		*			
ANR	430894	Identifier	block_size		430832	0					
ANR	430895	PrimaryExpression	2		430832	1					
ANR	430896	AndExpression	"! memcmp ( block , block - block_size , block_size ) && ! memcmp ( block , block + block_size , block_size )"		430832	1		&&			
ANR	430897	UnaryOperationExpression	"! memcmp ( block , block - block_size , block_size )"		430832	0					
ANR	430898	UnaryOperator	!		430832	0					
ANR	430899	CallExpression	"memcmp ( block , block - block_size , block_size )"		430832	1					
ANR	430900	Callee	memcmp		430832	0					
ANR	430901	Identifier	memcmp		430832	0					
ANR	430902	ArgumentList	block		430832	1					
ANR	430903	Argument	block		430832	0					
ANR	430904	Identifier	block		430832	0					
ANR	430905	Argument	block - block_size		430832	1					
ANR	430906	AdditiveExpression	block - block_size		430832	0		-			
ANR	430907	Identifier	block		430832	0					
ANR	430908	Identifier	block_size		430832	1					
ANR	430909	Argument	block_size		430832	2					
ANR	430910	Identifier	block_size		430832	0					
ANR	430911	UnaryOperationExpression	"! memcmp ( block , block + block_size , block_size )"		430832	1					
ANR	430912	UnaryOperator	!		430832	0					
ANR	430913	CallExpression	"memcmp ( block , block + block_size , block_size )"		430832	1					
ANR	430914	Callee	memcmp		430832	0					
ANR	430915	Identifier	memcmp		430832	0					
ANR	430916	ArgumentList	block		430832	1					
ANR	430917	Argument	block		430832	0					
ANR	430918	Identifier	block		430832	0					
ANR	430919	Argument	block + block_size		430832	1					
ANR	430920	AdditiveExpression	block + block_size		430832	0		+			
ANR	430921	Identifier	block		430832	0					
ANR	430922	Identifier	block_size		430832	1					
ANR	430923	Argument	block_size		430832	2					
ANR	430924	Identifier	block_size		430832	0					
ANR	430925	CompoundStatement		19:14:506:506	430832	1					
ANR	430926	IfStatement	"if ( block < bot + block_size * 2 || memcmp ( block , block - block_size * 2 , block_size ) )"		430832	0					
ANR	430927	Condition	"block < bot + block_size * 2 || memcmp ( block , block - block_size * 2 , block_size )"	2725:16:86303:86399	430832	0	True				
ANR	430928	OrExpression	"block < bot + block_size * 2 || memcmp ( block , block - block_size * 2 , block_size )"		430832	0		||			
ANR	430929	RelationalExpression	block < bot + block_size * 2		430832	0		<			
ANR	430930	Identifier	block		430832	0					
ANR	430931	AdditiveExpression	bot + block_size * 2		430832	1		+			
ANR	430932	Identifier	bot		430832	0					
ANR	430933	MultiplicativeExpression	block_size * 2		430832	1		*			
ANR	430934	Identifier	block_size		430832	0					
ANR	430935	PrimaryExpression	2		430832	1					
ANR	430936	CallExpression	"memcmp ( block , block - block_size * 2 , block_size )"		430832	1					
ANR	430937	Callee	memcmp		430832	0					
ANR	430938	Identifier	memcmp		430832	0					
ANR	430939	ArgumentList	block		430832	1					
ANR	430940	Argument	block		430832	0					
ANR	430941	Identifier	block		430832	0					
ANR	430942	Argument	block - block_size * 2		430832	1					
ANR	430943	AdditiveExpression	block - block_size * 2		430832	0		-			
ANR	430944	Identifier	block		430832	0					
ANR	430945	MultiplicativeExpression	block_size * 2		430832	1		*			
ANR	430946	Identifier	block_size		430832	0					
ANR	430947	PrimaryExpression	2		430832	1					
ANR	430948	Argument	block_size		430832	2					
ANR	430949	Identifier	block_size		430832	0					
ANR	430950	CompoundStatement		22:18:640:640	430832	1					
ANR	430951	ExpressionStatement	"debug_indent ( mem , indent )"	2728:16:86437:86462	430832	0	True				
ANR	430952	CallExpression	"debug_indent ( mem , indent )"		430832	0					
ANR	430953	Callee	debug_indent		430832	0					
ANR	430954	Identifier	debug_indent		430832	0					
ANR	430955	ArgumentList	mem		430832	1					
ANR	430956	Argument	mem		430832	0					
ANR	430957	Identifier	mem		430832	0					
ANR	430958	Argument	indent		430832	1					
ANR	430959	Identifier	indent		430832	0					
ANR	430960	ExpressionStatement	"dmputs ( mem , ""  ...\\n"" )"	2729:16:86480:86502	430832	1	True				
ANR	430961	CallExpression	"dmputs ( mem , ""  ...\\n"" )"		430832	0					
ANR	430962	Callee	dmputs		430832	0					
ANR	430963	Identifier	dmputs		430832	0					
ANR	430964	ArgumentList	mem		430832	1					
ANR	430965	Argument	mem		430832	0					
ANR	430966	Identifier	mem		430832	0					
ANR	430967	Argument	"""  ...\\n"""		430832	1					
ANR	430968	PrimaryExpression	"""  ...\\n"""		430832	0					
ANR	430969	ContinueStatement	continue ;	2731:12:86530:86538	430832	1	True				
ANR	430970	ExpressionStatement	"gs_sprintf ( label , ""0x%lx:"" , ( ulong ) block )"	2733:8:86558:86600	430832	3	True				
ANR	430971	CallExpression	"gs_sprintf ( label , ""0x%lx:"" , ( ulong ) block )"		430832	0					
ANR	430972	Callee	gs_sprintf		430832	0					
ANR	430973	Identifier	gs_sprintf		430832	0					
ANR	430974	ArgumentList	label		430832	1					
ANR	430975	Argument	label		430832	0					
ANR	430976	Identifier	label		430832	0					
ANR	430977	Argument	"""0x%lx:"""		430832	1					
ANR	430978	PrimaryExpression	"""0x%lx:"""		430832	0					
ANR	430979	Argument	( ulong ) block		430832	2					
ANR	430980	CastExpression	( ulong ) block		430832	0					
ANR	430981	CastTarget	ulong		430832	0					
ANR	430982	Identifier	block		430832	1					
ANR	430983	ExpressionStatement	"debug_indent ( mem , indent )"	2734:8:86610:86635	430832	4	True				
ANR	430984	CallExpression	"debug_indent ( mem , indent )"		430832	0					
ANR	430985	Callee	debug_indent		430832	0					
ANR	430986	Identifier	debug_indent		430832	0					
ANR	430987	ArgumentList	mem		430832	1					
ANR	430988	Argument	mem		430832	0					
ANR	430989	Identifier	mem		430832	0					
ANR	430990	Argument	indent		430832	1					
ANR	430991	Identifier	indent		430832	0					
ANR	430992	ExpressionStatement	"dmputs ( mem , label )"	2735:8:86645:86663	430832	5	True				
ANR	430993	CallExpression	"dmputs ( mem , label )"		430832	0					
ANR	430994	Callee	dmputs		430832	0					
ANR	430995	Identifier	dmputs		430832	0					
ANR	430996	ArgumentList	mem		430832	1					
ANR	430997	Argument	mem		430832	0					
ANR	430998	Identifier	mem		430832	0					
ANR	430999	Argument	label		430832	1					
ANR	431000	Identifier	label		430832	0					
ANR	431001	ForStatement	for ( i = 0 ; i < block_size ; ++ i )		430832	6					
ANR	431002	ForInit	i = 0 ;	2736:13:86678:86683	430832	0	True				
ANR	431003	AssignmentExpression	i = 0		430832	0		=			
ANR	431004	Identifier	i		430832	0					
ANR	431005	PrimaryExpression	0		430832	1					
ANR	431006	Condition	i < block_size	2736:20:86685:86698	430832	1	True				
ANR	431007	RelationalExpression	i < block_size		430832	0		<			
ANR	431008	Identifier	i		430832	0					
ANR	431009	Identifier	block_size		430832	1					
ANR	431010	UnaryExpression	++ i	2736:36:86701:86703	430832	2	True				
ANR	431011	IncDec	++		430832	0					
ANR	431012	Identifier	i		430832	1					
ANR	431013	CompoundStatement		32:12:941:997	430832	3					
ANR	431014	IdentifierDeclStatement	"const char * sepr = ( ( i & 3 ) == 0 && i != 0 ? ""  "" : "" "" ) ;"	2737:12:86720:86776	430832	0	True				
ANR	431015	IdentifierDecl	"* sepr = ( ( i & 3 ) == 0 && i != 0 ? ""  "" : "" "" )"		430832	0					
ANR	431016	IdentifierDeclType	const char *		430832	0					
ANR	431017	Identifier	sepr		430832	1					
ANR	431018	AssignmentExpression	"* sepr = ( ( i & 3 ) == 0 && i != 0 ? ""  "" : "" "" )"		430832	2		=			
ANR	431019	Identifier	sepr		430832	0					
ANR	431020	ConditionalExpression	"( i & 3 ) == 0 && i != 0 ? ""  "" : "" """		430832	1					
ANR	431021	Condition	( i & 3 ) == 0 && i != 0		430832	0					
ANR	431022	AndExpression	( i & 3 ) == 0 && i != 0		430832	0		&&			
ANR	431023	EqualityExpression	( i & 3 ) == 0		430832	0		==			
ANR	431024	BitAndExpression	i & 3		430832	0		&			
ANR	431025	Identifier	i		430832	0					
ANR	431026	PrimaryExpression	3		430832	1					
ANR	431027	PrimaryExpression	0		430832	1					
ANR	431028	EqualityExpression	i != 0		430832	1		!=			
ANR	431029	Identifier	i		430832	0					
ANR	431030	PrimaryExpression	0		430832	1					
ANR	431031	PrimaryExpression	"""  """		430832	1					
ANR	431032	PrimaryExpression	""" """		430832	2					
ANR	431033	ExpressionStatement	"dmputs ( mem , sepr )"	2739:12:86791:86808	430832	1	True				
ANR	431034	CallExpression	"dmputs ( mem , sepr )"		430832	0					
ANR	431035	Callee	dmputs		430832	0					
ANR	431036	Identifier	dmputs		430832	0					
ANR	431037	ArgumentList	mem		430832	1					
ANR	431038	Argument	mem		430832	0					
ANR	431039	Identifier	mem		430832	0					
ANR	431040	Argument	sepr		430832	1					
ANR	431041	Identifier	sepr		430832	0					
ANR	431042	IfStatement	if ( block + i >= bot && block + i < top )		430832	2					
ANR	431043	Condition	block + i >= bot && block + i < top	2740:16:86826:86860	430832	0	True				
ANR	431044	AndExpression	block + i >= bot && block + i < top		430832	0		&&			
ANR	431045	RelationalExpression	block + i >= bot		430832	0		>=			
ANR	431046	AdditiveExpression	block + i		430832	0		+			
ANR	431047	Identifier	block		430832	0					
ANR	431048	Identifier	i		430832	1					
ANR	431049	Identifier	bot		430832	1					
ANR	431050	RelationalExpression	block + i < top		430832	1		<			
ANR	431051	AdditiveExpression	block + i		430832	0		+			
ANR	431052	Identifier	block		430832	0					
ANR	431053	Identifier	i		430832	1					
ANR	431054	Identifier	top		430832	1					
ANR	431055	ExpressionStatement	"dmprintf1 ( mem , ""%02x"" , block [ i ] )"	2741:16:86879:86911	430832	1	True				
ANR	431056	CallExpression	"dmprintf1 ( mem , ""%02x"" , block [ i ] )"		430832	0					
ANR	431057	Callee	dmprintf1		430832	0					
ANR	431058	Identifier	dmprintf1		430832	0					
ANR	431059	ArgumentList	mem		430832	1					
ANR	431060	Argument	mem		430832	0					
ANR	431061	Identifier	mem		430832	0					
ANR	431062	Argument	"""%02x"""		430832	1					
ANR	431063	PrimaryExpression	"""%02x"""		430832	0					
ANR	431064	Argument	block [ i ]		430832	2					
ANR	431065	ArrayIndexing	block [ i ]		430832	0					
ANR	431066	Identifier	block		430832	0					
ANR	431067	Identifier	i		430832	1					
ANR	431068	ElseStatement	else		430832	0					
ANR	431069	ExpressionStatement	"dmputs ( mem , ""  "" )"	2743:16:86946:86963	430832	0	True				
ANR	431070	CallExpression	"dmputs ( mem , ""  "" )"		430832	0					
ANR	431071	Callee	dmputs		430832	0					
ANR	431072	Identifier	dmputs		430832	0					
ANR	431073	ArgumentList	mem		430832	1					
ANR	431074	Argument	mem		430832	0					
ANR	431075	Identifier	mem		430832	0					
ANR	431076	Argument	"""  """		430832	1					
ANR	431077	PrimaryExpression	"""  """		430832	0					
ANR	431078	ExpressionStatement	"dmputc ( mem , '\\n' )"	2745:8:86983:87000	430832	7	True				
ANR	431079	CallExpression	"dmputc ( mem , '\\n' )"		430832	0					
ANR	431080	Callee	dmputc		430832	0					
ANR	431081	Identifier	dmputc		430832	0					
ANR	431082	ArgumentList	mem		430832	1					
ANR	431083	Argument	mem		430832	0					
ANR	431084	Identifier	mem		430832	0					
ANR	431085	Argument	'\\n'		430832	1					
ANR	431086	PrimaryExpression	'\\n'		430832	0					
ANR	431087	IfStatement	if ( as_chars )		430832	8					
ANR	431088	Condition	as_chars	2746:12:87014:87021	430832	0	True				
ANR	431089	Identifier	as_chars		430832	0					
ANR	431090	CompoundStatement		41:22:1245:1245	430832	1					
ANR	431091	ExpressionStatement	"debug_indent ( mem , indent + strlen ( label ) )"	2747:12:87038:87079	430832	0	True				
ANR	431092	CallExpression	"debug_indent ( mem , indent + strlen ( label ) )"		430832	0					
ANR	431093	Callee	debug_indent		430832	0					
ANR	431094	Identifier	debug_indent		430832	0					
ANR	431095	ArgumentList	mem		430832	1					
ANR	431096	Argument	mem		430832	0					
ANR	431097	Identifier	mem		430832	0					
ANR	431098	Argument	indent + strlen ( label )		430832	1					
ANR	431099	AdditiveExpression	indent + strlen ( label )		430832	0		+			
ANR	431100	Identifier	indent		430832	0					
ANR	431101	CallExpression	strlen ( label )		430832	1					
ANR	431102	Callee	strlen		430832	0					
ANR	431103	Identifier	strlen		430832	0					
ANR	431104	ArgumentList	label		430832	1					
ANR	431105	Argument	label		430832	0					
ANR	431106	Identifier	label		430832	0					
ANR	431107	ForStatement	for ( i = 0 ; i < block_size ; ++ i )		430832	1					
ANR	431108	ForInit	i = 0 ;	2748:17:87098:87103	430832	0	True				
ANR	431109	AssignmentExpression	i = 0		430832	0		=			
ANR	431110	Identifier	i		430832	0					
ANR	431111	PrimaryExpression	0		430832	1					
ANR	431112	Condition	i < block_size	2748:24:87105:87118	430832	1	True				
ANR	431113	RelationalExpression	i < block_size		430832	0		<			
ANR	431114	Identifier	i		430832	0					
ANR	431115	Identifier	block_size		430832	1					
ANR	431116	UnaryExpression	++ i	2748:40:87121:87123	430832	2	True				
ANR	431117	IncDec	++		430832	0					
ANR	431118	Identifier	i		430832	1					
ANR	431119	CompoundStatement		44:16:1365:1372	430832	3					
ANR	431120	IdentifierDeclStatement	byte ch ;	2749:16:87144:87151	430832	0	True				
ANR	431121	IdentifierDecl	ch		430832	0					
ANR	431122	IdentifierDeclType	byte		430832	0					
ANR	431123	Identifier	ch		430832	1					
ANR	431124	IfStatement	if ( ( i & 3 ) == 0 && i != 0 )		430832	1					
ANR	431125	Condition	( i & 3 ) == 0 && i != 0	2751:20:87174:87195	430832	0	True				
ANR	431126	AndExpression	( i & 3 ) == 0 && i != 0		430832	0		&&			
ANR	431127	EqualityExpression	( i & 3 ) == 0		430832	0		==			
ANR	431128	BitAndExpression	i & 3		430832	0		&			
ANR	431129	Identifier	i		430832	0					
ANR	431130	PrimaryExpression	3		430832	1					
ANR	431131	PrimaryExpression	0		430832	1					
ANR	431132	EqualityExpression	i != 0		430832	1		!=			
ANR	431133	Identifier	i		430832	0					
ANR	431134	PrimaryExpression	0		430832	1					
ANR	431135	ExpressionStatement	"dmputc ( mem , ' ' )"	2752:20:87218:87234	430832	1	True				
ANR	431136	CallExpression	"dmputc ( mem , ' ' )"		430832	0					
ANR	431137	Callee	dmputc		430832	0					
ANR	431138	Identifier	dmputc		430832	0					
ANR	431139	ArgumentList	mem		430832	1					
ANR	431140	Argument	mem		430832	0					
ANR	431141	Identifier	mem		430832	0					
ANR	431142	Argument	' '		430832	1					
ANR	431143	PrimaryExpression	' '		430832	0					
ANR	431144	IfStatement	if ( block + i >= bot && block + i < top && ( ch = block [ i ] ) >= 32 && ch <= 126 )		430832	2					
ANR	431145	Condition	block + i >= bot && block + i < top && ( ch = block [ i ] ) >= 32 && ch <= 126	2753:20:87256:87348	430832	0	True				
ANR	431146	AndExpression	block + i >= bot && block + i < top && ( ch = block [ i ] ) >= 32 && ch <= 126		430832	0		&&			
ANR	431147	RelationalExpression	block + i >= bot		430832	0		>=			
ANR	431148	AdditiveExpression	block + i		430832	0		+			
ANR	431149	Identifier	block		430832	0					
ANR	431150	Identifier	i		430832	1					
ANR	431151	Identifier	bot		430832	1					
ANR	431152	AndExpression	block + i < top && ( ch = block [ i ] ) >= 32 && ch <= 126		430832	1		&&			
ANR	431153	RelationalExpression	block + i < top		430832	0		<			
ANR	431154	AdditiveExpression	block + i		430832	0		+			
ANR	431155	Identifier	block		430832	0					
ANR	431156	Identifier	i		430832	1					
ANR	431157	Identifier	top		430832	1					
ANR	431158	AndExpression	( ch = block [ i ] ) >= 32 && ch <= 126		430832	1		&&			
ANR	431159	RelationalExpression	( ch = block [ i ] ) >= 32		430832	0		>=			
ANR	431160	AssignmentExpression	ch = block [ i ]		430832	0		=			
ANR	431161	Identifier	ch		430832	0					
ANR	431162	ArrayIndexing	block [ i ]		430832	1					
ANR	431163	Identifier	block		430832	0					
ANR	431164	Identifier	i		430832	1					
ANR	431165	PrimaryExpression	32		430832	1					
ANR	431166	RelationalExpression	ch <= 126		430832	1		<=			
ANR	431167	Identifier	ch		430832	0					
ANR	431168	PrimaryExpression	126		430832	1					
ANR	431169	ExpressionStatement	"dmprintf1 ( mem , ""  %c"" , ch )"	2756:20:87392:87418	430832	1	True				
ANR	431170	CallExpression	"dmprintf1 ( mem , ""  %c"" , ch )"		430832	0					
ANR	431171	Callee	dmprintf1		430832	0					
ANR	431172	Identifier	dmprintf1		430832	0					
ANR	431173	ArgumentList	mem		430832	1					
ANR	431174	Argument	mem		430832	0					
ANR	431175	Identifier	mem		430832	0					
ANR	431176	Argument	"""  %c"""		430832	1					
ANR	431177	PrimaryExpression	"""  %c"""		430832	0					
ANR	431178	Argument	ch		430832	2					
ANR	431179	Identifier	ch		430832	0					
ANR	431180	ElseStatement	else		430832	0					
ANR	431181	ExpressionStatement	"dmputs ( mem , ""   "" )"	2758:20:87461:87479	430832	0	True				
ANR	431182	CallExpression	"dmputs ( mem , ""   "" )"		430832	0					
ANR	431183	Callee	dmputs		430832	0					
ANR	431184	Identifier	dmputs		430832	0					
ANR	431185	ArgumentList	mem		430832	1					
ANR	431186	Argument	mem		430832	0					
ANR	431187	Identifier	mem		430832	0					
ANR	431188	Argument	"""   """		430832	1					
ANR	431189	PrimaryExpression	"""   """		430832	0					
ANR	431190	ExpressionStatement	"dmputc ( mem , '\\n' )"	2760:12:87507:87524	430832	2	True				
ANR	431191	CallExpression	"dmputc ( mem , '\\n' )"		430832	0					
ANR	431192	Callee	dmputc		430832	0					
ANR	431193	Identifier	dmputc		430832	0					
ANR	431194	ArgumentList	mem		430832	1					
ANR	431195	Argument	mem		430832	0					
ANR	431196	Identifier	mem		430832	0					
ANR	431197	Argument	'\\n'		430832	1					
ANR	431198	PrimaryExpression	'\\n'		430832	0					
ANR	431199	Statement	undef	2763:1:87543:87547	430832	6	True				
ANR	431200	Statement	block_size	2763:7:87549:87558	430832	7	True				
ANR	431201	ReturnType	static void		430832	1					
ANR	431202	Identifier	debug_dump_contents		430832	2					
ANR	431203	ParameterList	"const gs_memory_t * mem , const byte * bot , const byte * top , int indent , bool as_chars"		430832	3					
ANR	431204	Parameter	const gs_memory_t * mem	2704:20:85671:85692	430832	0	True				
ANR	431205	ParameterType	const gs_memory_t *		430832	0					
ANR	431206	Identifier	mem		430832	1					
ANR	431207	Parameter	const byte * bot	2704:44:85695:85710	430832	1	True				
ANR	431208	ParameterType	const byte *		430832	0					
ANR	431209	Identifier	bot		430832	1					
ANR	431210	Parameter	const byte * top	2705:20:85733:85748	430832	2	True				
ANR	431211	ParameterType	const byte *		430832	0					
ANR	431212	Identifier	top		430832	1					
ANR	431213	Parameter	int indent	2705:38:85751:85760	430832	3	True				
ANR	431214	ParameterType	int		430832	0					
ANR	431215	Identifier	indent		430832	1					
ANR	431216	Parameter	bool as_chars	2705:50:85763:85775	430832	4	True				
ANR	431217	ParameterType	bool		430832	0					
ANR	431218	Identifier	as_chars		430832	1					
ANR	431219	CFGEntryNode	ENTRY		430832		True				
ANR	431220	CFGExitNode	EXIT		430832		True				
ANR	431221	Symbol	sepr		430832						
ANR	431222	Symbol	indent		430832						
ANR	431223	Symbol	ch		430832						
ANR	431224	Symbol	bot		430832						
ANR	431225	Symbol	i		430832						
ANR	431226	Symbol	label		430832						
ANR	431227	Symbol	as_chars		430832						
ANR	431228	Symbol	* block		430832						
ANR	431229	Symbol	strlen		430832						
ANR	431230	Symbol	memcmp		430832						
ANR	431231	Symbol	* i		430832						
ANR	431232	Symbol	mem		430832						
ANR	431233	Symbol	top		430832						
ANR	431234	Symbol	block		430832						
ANR	431235	Symbol	block_size		430832						
ANR	431236	Function	debug_print_object	2769:0:87703:90781							
ANR	431237	FunctionDef	"debug_print_object (const gs_memory_t * mem , const void * obj , const dump_control_t * control)"		431236	0					
ANR	431238	CompoundStatement		2771:0:87800:90781	431236	0					
ANR	431239	IdentifierDeclStatement	const obj_header_t * pre = ( ( const obj_header_t * ) obj ) - 1 ;	2772:4:87806:87863	431236	0	True				
ANR	431240	IdentifierDecl	* pre = ( ( const obj_header_t * ) obj ) - 1		431236	0					
ANR	431241	IdentifierDeclType	const obj_header_t *		431236	0					
ANR	431242	Identifier	pre		431236	1					
ANR	431243	AssignmentExpression	* pre = ( ( const obj_header_t * ) obj ) - 1		431236	2		=			
ANR	431244	Identifier	pre		431236	0					
ANR	431245	AdditiveExpression	( ( const obj_header_t * ) obj ) - 1		431236	1		-			
ANR	431246	CastExpression	( const obj_header_t * ) obj		431236	0					
ANR	431247	CastTarget	const obj_header_t *		431236	0					
ANR	431248	Identifier	obj		431236	1					
ANR	431249	PrimaryExpression	1		431236	1					
ANR	431250	IdentifierDeclStatement	ulong size = pre_obj_contents_size ( pre ) ;	2773:4:87869:87908	431236	1	True				
ANR	431251	IdentifierDecl	size = pre_obj_contents_size ( pre )		431236	0					
ANR	431252	IdentifierDeclType	ulong		431236	0					
ANR	431253	Identifier	size		431236	1					
ANR	431254	AssignmentExpression	size = pre_obj_contents_size ( pre )		431236	2		=			
ANR	431255	Identifier	size		431236	0					
ANR	431256	CallExpression	pre_obj_contents_size ( pre )		431236	1					
ANR	431257	Callee	pre_obj_contents_size		431236	0					
ANR	431258	Identifier	pre_obj_contents_size		431236	0					
ANR	431259	ArgumentList	pre		431236	1					
ANR	431260	Argument	pre		431236	0					
ANR	431261	Identifier	pre		431236	0					
ANR	431262	IdentifierDeclStatement	const gs_memory_struct_type_t * type = pre -> o_type ;	2774:4:87914:87963	431236	2	True				
ANR	431263	IdentifierDecl	* type = pre -> o_type		431236	0					
ANR	431264	IdentifierDeclType	const gs_memory_struct_type_t *		431236	0					
ANR	431265	Identifier	type		431236	1					
ANR	431266	AssignmentExpression	* type = pre -> o_type		431236	2		=			
ANR	431267	Identifier	type		431236	0					
ANR	431268	PtrMemberAccess	pre -> o_type		431236	1					
ANR	431269	Identifier	pre		431236	0					
ANR	431270	Identifier	o_type		431236	1					
ANR	431271	IdentifierDeclStatement	dump_options_t options = control -> options ;	2775:4:87969:88010	431236	3	True				
ANR	431272	IdentifierDecl	options = control -> options		431236	0					
ANR	431273	IdentifierDeclType	dump_options_t		431236	0					
ANR	431274	Identifier	options		431236	1					
ANR	431275	AssignmentExpression	options = control -> options		431236	2		=			
ANR	431276	Identifier	options		431236	0					
ANR	431277	PtrMemberAccess	control -> options		431236	1					
ANR	431278	Identifier	control		431236	0					
ANR	431279	Identifier	options		431236	1					
ANR	431280	ExpressionStatement	"dmprintf3 ( mem , ""  pre=0x%lx(obj=0x%lx) size=%lu"" , ( ulong ) pre , ( ulong ) obj , size )"	2777:4:88017:88111	431236	4	True				
ANR	431281	CallExpression	"dmprintf3 ( mem , ""  pre=0x%lx(obj=0x%lx) size=%lu"" , ( ulong ) pre , ( ulong ) obj , size )"		431236	0					
ANR	431282	Callee	dmprintf3		431236	0					
ANR	431283	Identifier	dmprintf3		431236	0					
ANR	431284	ArgumentList	mem		431236	1					
ANR	431285	Argument	mem		431236	0					
ANR	431286	Identifier	mem		431236	0					
ANR	431287	Argument	"""  pre=0x%lx(obj=0x%lx) size=%lu"""		431236	1					
ANR	431288	PrimaryExpression	"""  pre=0x%lx(obj=0x%lx) size=%lu"""		431236	0					
ANR	431289	Argument	( ulong ) pre		431236	2					
ANR	431290	CastExpression	( ulong ) pre		431236	0					
ANR	431291	CastTarget	ulong		431236	0					
ANR	431292	Identifier	pre		431236	1					
ANR	431293	Argument	( ulong ) obj		431236	3					
ANR	431294	CastExpression	( ulong ) obj		431236	0					
ANR	431295	CastTarget	ulong		431236	0					
ANR	431296	Identifier	obj		431236	1					
ANR	431297	Argument	size		431236	4					
ANR	431298	Identifier	size		431236	0					
ANR	431299	SwitchStatement	switch ( options & ( dump_do_type_addresses | dump_do_no_types ) )		431236	5					
ANR	431300	Condition	options & ( dump_do_type_addresses | dump_do_no_types )	2779:12:88125:88177	431236	0	True				
ANR	431301	BitAndExpression	options & ( dump_do_type_addresses | dump_do_no_types )		431236	0		&			
ANR	431302	Identifier	options		431236	0					
ANR	431303	InclusiveOrExpression	dump_do_type_addresses | dump_do_no_types		431236	1		|			
ANR	431304	Identifier	dump_do_type_addresses		431236	0					
ANR	431305	Identifier	dump_do_no_types		431236	1					
ANR	431306	CompoundStatement		9:67:379:379	431236	1					
ANR	431307	Statement	case	2780:4:88186:88189	431236	0	True				
ANR	431308	Statement	dump_do_type_addresses	2780:9:88191:88212	431236	1	True				
ANR	431309	Statement	+	2780:32:88214:88214	431236	2	True				
ANR	431310	Label	dump_do_no_types :	2780:34:88216:88232	431236	3	True				
ANR	431311	Identifier	dump_do_no_types		431236	0					
ANR	431312	ExpressionStatement	"dmprintf1 ( mem , "" type=0x%lx"" , ( ulong ) type )"	2781:8:88263:88306	431236	4	True				
ANR	431313	CallExpression	"dmprintf1 ( mem , "" type=0x%lx"" , ( ulong ) type )"		431236	0					
ANR	431314	Callee	dmprintf1		431236	0					
ANR	431315	Identifier	dmprintf1		431236	0					
ANR	431316	ArgumentList	mem		431236	1					
ANR	431317	Argument	mem		431236	0					
ANR	431318	Identifier	mem		431236	0					
ANR	431319	Argument	""" type=0x%lx"""		431236	1					
ANR	431320	PrimaryExpression	""" type=0x%lx"""		431236	0					
ANR	431321	Argument	( ulong ) type		431236	2					
ANR	431322	CastExpression	( ulong ) type		431236	0					
ANR	431323	CastTarget	ulong		431236	0					
ANR	431324	Identifier	type		431236	1					
ANR	431325	BreakStatement	break ;	2782:8:88316:88321	431236	5	True				
ANR	431326	Label	case dump_do_type_addresses :	2783:4:88327:88354	431236	6	True				
ANR	431327	Identifier	dump_do_type_addresses		431236	0					
ANR	431328	ExpressionStatement	"dmprintf2 ( mem , "" type=%s(0x%lx)"" , struct_type_name_string ( type ) , ( ulong ) type )"	2784:8:88388:88483	431236	7	True				
ANR	431329	CallExpression	"dmprintf2 ( mem , "" type=%s(0x%lx)"" , struct_type_name_string ( type ) , ( ulong ) type )"		431236	0					
ANR	431330	Callee	dmprintf2		431236	0					
ANR	431331	Identifier	dmprintf2		431236	0					
ANR	431332	ArgumentList	mem		431236	1					
ANR	431333	Argument	mem		431236	0					
ANR	431334	Identifier	mem		431236	0					
ANR	431335	Argument	""" type=%s(0x%lx)"""		431236	1					
ANR	431336	PrimaryExpression	""" type=%s(0x%lx)"""		431236	0					
ANR	431337	Argument	struct_type_name_string ( type )		431236	2					
ANR	431338	CallExpression	struct_type_name_string ( type )		431236	0					
ANR	431339	Callee	struct_type_name_string		431236	0					
ANR	431340	Identifier	struct_type_name_string		431236	0					
ANR	431341	ArgumentList	type		431236	1					
ANR	431342	Argument	type		431236	0					
ANR	431343	Identifier	type		431236	0					
ANR	431344	Argument	( ulong ) type		431236	3					
ANR	431345	CastExpression	( ulong ) type		431236	0					
ANR	431346	CastTarget	ulong		431236	0					
ANR	431347	Identifier	type		431236	1					
ANR	431348	BreakStatement	break ;	2786:8:88493:88498	431236	8	True				
ANR	431349	Label	case 0 :	2787:4:88504:88510	431236	9	True				
ANR	431350	ExpressionStatement	"dmprintf1 ( mem , "" type=%s"" , struct_type_name_string ( type ) )"	2788:8:88538:88595	431236	10	True				
ANR	431351	CallExpression	"dmprintf1 ( mem , "" type=%s"" , struct_type_name_string ( type ) )"		431236	0					
ANR	431352	Callee	dmprintf1		431236	0					
ANR	431353	Identifier	dmprintf1		431236	0					
ANR	431354	ArgumentList	mem		431236	1					
ANR	431355	Argument	mem		431236	0					
ANR	431356	Identifier	mem		431236	0					
ANR	431357	Argument	""" type=%s"""		431236	1					
ANR	431358	PrimaryExpression	""" type=%s"""		431236	0					
ANR	431359	Argument	struct_type_name_string ( type )		431236	2					
ANR	431360	CallExpression	struct_type_name_string ( type )		431236	0					
ANR	431361	Callee	struct_type_name_string		431236	0					
ANR	431362	Identifier	struct_type_name_string		431236	0					
ANR	431363	ArgumentList	type		431236	1					
ANR	431364	Argument	type		431236	0					
ANR	431365	Identifier	type		431236	0					
ANR	431366	Label	case dump_do_no_types :	2789:4:88601:88622	431236	11	True				
ANR	431367	Identifier	dump_do_no_types		431236	0					
ANR	431368	ExpressionStatement		2790:8:88646:88646	431236	12	True				
ANR	431369	IfStatement	if ( options & dump_do_marks )		431236	6					
ANR	431370	Condition	options & dump_do_marks	2792:8:88662:88684	431236	0	True				
ANR	431371	BitAndExpression	options & dump_do_marks		431236	0		&			
ANR	431372	Identifier	options		431236	0					
ANR	431373	Identifier	dump_do_marks		431236	1					
ANR	431374	CompoundStatement		22:33:886:886	431236	1					
ANR	431375	ExpressionStatement	"dmprintf2 ( mem , "" smark/back=%u (0x%x)"" , pre -> o_smark , pre -> o_smark )"	2793:8:88697:88764	431236	0	True				
ANR	431376	CallExpression	"dmprintf2 ( mem , "" smark/back=%u (0x%x)"" , pre -> o_smark , pre -> o_smark )"		431236	0					
ANR	431377	Callee	dmprintf2		431236	0					
ANR	431378	Identifier	dmprintf2		431236	0					
ANR	431379	ArgumentList	mem		431236	1					
ANR	431380	Argument	mem		431236	0					
ANR	431381	Identifier	mem		431236	0					
ANR	431382	Argument	""" smark/back=%u (0x%x)"""		431236	1					
ANR	431383	PrimaryExpression	""" smark/back=%u (0x%x)"""		431236	0					
ANR	431384	Argument	pre -> o_smark		431236	2					
ANR	431385	PtrMemberAccess	pre -> o_smark		431236	0					
ANR	431386	Identifier	pre		431236	0					
ANR	431387	Identifier	o_smark		431236	1					
ANR	431388	Argument	pre -> o_smark		431236	3					
ANR	431389	PtrMemberAccess	pre -> o_smark		431236	0					
ANR	431390	Identifier	pre		431236	0					
ANR	431391	Identifier	o_smark		431236	1					
ANR	431392	ExpressionStatement	"dmputc ( mem , '\\n' )"	2795:4:88776:88793	431236	7	True				
ANR	431393	CallExpression	"dmputc ( mem , '\\n' )"		431236	0					
ANR	431394	Callee	dmputc		431236	0					
ANR	431395	Identifier	dmputc		431236	0					
ANR	431396	ArgumentList	mem		431236	1					
ANR	431397	Argument	mem		431236	0					
ANR	431398	Identifier	mem		431236	0					
ANR	431399	Argument	'\\n'		431236	1					
ANR	431400	PrimaryExpression	'\\n'		431236	0					
ANR	431401	IfStatement	if ( type == & st_free )		431236	8					
ANR	431402	Condition	type == & st_free	2796:8:88803:88818	431236	0	True				
ANR	431403	EqualityExpression	type == & st_free		431236	0		==			
ANR	431404	Identifier	type		431236	0					
ANR	431405	UnaryOperationExpression	& st_free		431236	1					
ANR	431406	UnaryOperator	&		431236	0					
ANR	431407	Identifier	st_free		431236	1					
ANR	431408	ReturnStatement	return ;	2797:8:88829:88835	431236	1	True				
ANR	431409	IfStatement	if ( options & dump_do_pointers )		431236	9					
ANR	431410	Condition	options & dump_do_pointers	2798:8:88845:88870	431236	0	True				
ANR	431411	BitAndExpression	options & dump_do_pointers		431236	0		&			
ANR	431412	Identifier	options		431236	0					
ANR	431413	Identifier	dump_do_pointers		431236	1					
ANR	431414	CompoundStatement		32:8:1189:1208	431236	1					
ANR	431415	ExpressionStatement	struct_proc_enum_ptrs ( ( * proc ) ) = type -> enum_ptrs	2799:8:88883:88931	431236	0	True				
ANR	431416	AssignmentExpression	struct_proc_enum_ptrs ( ( * proc ) ) = type -> enum_ptrs		431236	0		=			
ANR	431417	CallExpression	struct_proc_enum_ptrs ( ( * proc ) )		431236	0					
ANR	431418	Callee	struct_proc_enum_ptrs		431236	0					
ANR	431419	Identifier	struct_proc_enum_ptrs		431236	0					
ANR	431420	ArgumentList	* proc		431236	1					
ANR	431421	Argument	* proc		431236	0					
ANR	431422	UnaryOperationExpression	* proc		431236	0					
ANR	431423	UnaryOperator	*		431236	0					
ANR	431424	Identifier	proc		431236	1					
ANR	431425	PtrMemberAccess	type -> enum_ptrs		431236	1					
ANR	431426	Identifier	type		431236	0					
ANR	431427	Identifier	enum_ptrs		431236	1					
ANR	431428	IdentifierDeclStatement	uint index = 0 ;	2800:8:88941:88955	431236	1	True				
ANR	431429	IdentifierDecl	index = 0		431236	0					
ANR	431430	IdentifierDeclType	uint		431236	0					
ANR	431431	Identifier	index		431236	1					
ANR	431432	AssignmentExpression	index = 0		431236	2		=			
ANR	431433	Identifier	index		431236	0					
ANR	431434	PrimaryExpression	0		431236	1					
ANR	431435	IdentifierDeclStatement	enum_ptr_t eptr ;	2801:8:88965:88980	431236	2	True				
ANR	431436	IdentifierDecl	eptr		431236	0					
ANR	431437	IdentifierDeclType	enum_ptr_t		431236	0					
ANR	431438	Identifier	eptr		431236	1					
ANR	431439	IdentifierDeclStatement	gs_ptr_type_t ptype ;	2802:8:88990:89009	431236	3	True				
ANR	431440	IdentifierDecl	ptype		431236	0					
ANR	431441	IdentifierDeclType	gs_ptr_type_t		431236	0					
ANR	431442	Identifier	ptype		431236	1					
ANR	431443	IfStatement	if ( proc != gs_no_struct_enum_ptrs )		431236	4					
ANR	431444	Condition	proc != gs_no_struct_enum_ptrs	2804:12:89024:89053	431236	0	True				
ANR	431445	EqualityExpression	proc != gs_no_struct_enum_ptrs		431236	0		!=			
ANR	431446	Identifier	proc		431236	0					
ANR	431447	Identifier	gs_no_struct_enum_ptrs		431236	1					
ANR	431448	CompoundStatement		34:44:1255:1255	431236	1					
ANR	431449	IfStatement	if ( proc != 0 )		431236	0					
ANR	431450	Condition	proc != 0	2805:16:89074:89082	431236	0	True				
ANR	431451	EqualityExpression	proc != 0		431236	0		!=			
ANR	431452	Identifier	proc		431236	0					
ANR	431453	PrimaryExpression	0		431236	1					
ANR	431454	CompoundStatement		35:27:1284:1284	431236	1					
ANR	431455	ForStatement	"for ( ; ( ptype = ( * proc ) ( mem , pre + 1 , size , index , & eptr , type , NULL ) ) != 0 ; ++ index )"		431236	0					
ANR	431456	Condition	"( ptype = ( * proc ) ( mem , pre + 1 , size , index , & eptr , type , NULL ) ) != 0"	2806:23:89110:89177	431236	0	True				
ANR	431457	EqualityExpression	"( ptype = ( * proc ) ( mem , pre + 1 , size , index , & eptr , type , NULL ) ) != 0"		431236	0		!=			
ANR	431458	AssignmentExpression	"ptype = ( * proc ) ( mem , pre + 1 , size , index , & eptr , type , NULL )"		431236	0		=			
ANR	431459	Identifier	ptype		431236	0					
ANR	431460	CallExpression	"( * proc ) ( mem , pre + 1 , size , index , & eptr , type , NULL )"		431236	1					
ANR	431461	Callee	* proc		431236	0					
ANR	431462	UnaryOperationExpression	* proc		431236	0					
ANR	431463	UnaryOperator	*		431236	0					
ANR	431464	Identifier	proc		431236	1					
ANR	431465	ArgumentList	mem		431236	1					
ANR	431466	Argument	mem		431236	0					
ANR	431467	Identifier	mem		431236	0					
ANR	431468	Argument	pre + 1		431236	1					
ANR	431469	AdditiveExpression	pre + 1		431236	0		+			
ANR	431470	Identifier	pre		431236	0					
ANR	431471	PrimaryExpression	1		431236	1					
ANR	431472	Argument	size		431236	2					
ANR	431473	Identifier	size		431236	0					
ANR	431474	Argument	index		431236	3					
ANR	431475	Identifier	index		431236	0					
ANR	431476	Argument	& eptr		431236	4					
ANR	431477	UnaryOperationExpression	& eptr		431236	0					
ANR	431478	UnaryOperator	&		431236	0					
ANR	431479	Identifier	eptr		431236	1					
ANR	431480	Argument	type		431236	5					
ANR	431481	Identifier	type		431236	0					
ANR	431482	Argument	NULL		431236	6					
ANR	431483	Identifier	NULL		431236	0					
ANR	431484	PrimaryExpression	0		431236	1					
ANR	431485	UnaryExpression	++ index	2807:21:89201:89207	431236	1	True				
ANR	431486	IncDec	++		431236	0					
ANR	431487	Identifier	index		431236	1					
ANR	431488	CompoundStatement		39:20:1453:1479	431236	2					
ANR	431489	IdentifierDeclStatement	const void * ptr = eptr . ptr ;	2809:20:89254:89280	431236	0	True				
ANR	431490	IdentifierDecl	* ptr = eptr . ptr		431236	0					
ANR	431491	IdentifierDeclType	const void *		431236	0					
ANR	431492	Identifier	ptr		431236	1					
ANR	431493	AssignmentExpression	* ptr = eptr . ptr		431236	2		=			
ANR	431494	Identifier	ptr		431236	0					
ANR	431495	MemberAccess	eptr . ptr		431236	1					
ANR	431496	Identifier	eptr		431236	0					
ANR	431497	Identifier	ptr		431236	1					
ANR	431498	ExpressionStatement	"dmprintf1 ( mem , ""    ptr %u: "" , index )"	2811:20:89303:89340	431236	1	True				
ANR	431499	CallExpression	"dmprintf1 ( mem , ""    ptr %u: "" , index )"		431236	0					
ANR	431500	Callee	dmprintf1		431236	0					
ANR	431501	Identifier	dmprintf1		431236	0					
ANR	431502	ArgumentList	mem		431236	1					
ANR	431503	Argument	mem		431236	0					
ANR	431504	Identifier	mem		431236	0					
ANR	431505	Argument	"""    ptr %u: """		431236	1					
ANR	431506	PrimaryExpression	"""    ptr %u: """		431236	0					
ANR	431507	Argument	index		431236	2					
ANR	431508	Identifier	index		431236	0					
ANR	431509	IfStatement	if ( ptype == ptr_string_type || ptype == ptr_const_string_type )		431236	2					
ANR	431510	Condition	ptype == ptr_string_type || ptype == ptr_const_string_type	2812:24:89366:89423	431236	0	True				
ANR	431511	OrExpression	ptype == ptr_string_type || ptype == ptr_const_string_type		431236	0		||			
ANR	431512	EqualityExpression	ptype == ptr_string_type		431236	0		==			
ANR	431513	Identifier	ptype		431236	0					
ANR	431514	Identifier	ptr_string_type		431236	1					
ANR	431515	EqualityExpression	ptype == ptr_const_string_type		431236	1		==			
ANR	431516	Identifier	ptype		431236	0					
ANR	431517	Identifier	ptr_const_string_type		431236	1					
ANR	431518	CompoundStatement		43:24:1651:1710	431236	1					
ANR	431519	IdentifierDeclStatement	const gs_const_string * str = ( const gs_const_string * ) & eptr ;	2813:24:89452:89511	431236	0	True				
ANR	431520	IdentifierDecl	* str = ( const gs_const_string * ) & eptr		431236	0					
ANR	431521	IdentifierDeclType	const gs_const_string *		431236	0					
ANR	431522	Identifier	str		431236	1					
ANR	431523	AssignmentExpression	* str = ( const gs_const_string * ) & eptr		431236	2		=			
ANR	431524	Identifier	str		431236	0					
ANR	431525	CastExpression	( const gs_const_string * ) & eptr		431236	1					
ANR	431526	CastTarget	const gs_const_string *		431236	0					
ANR	431527	UnaryOperationExpression	& eptr		431236	1					
ANR	431528	UnaryOperator	&		431236	0					
ANR	431529	Identifier	eptr		431236	1					
ANR	431530	IfStatement	if ( ! str )		431236	1					
ANR	431531	Condition	! str	2814:28:89541:89544	431236	0	True				
ANR	431532	UnaryOperationExpression	! str		431236	0					
ANR	431533	UnaryOperator	!		431236	0					
ANR	431534	Identifier	str		431236	1					
ANR	431535	ExpressionStatement	"dmprintf ( mem , ""0x0"" )"	2815:28:89575:89595	431236	1	True				
ANR	431536	CallExpression	"dmprintf ( mem , ""0x0"" )"		431236	0					
ANR	431537	Callee	dmprintf		431236	0					
ANR	431538	Identifier	dmprintf		431236	0					
ANR	431539	ArgumentList	mem		431236	1					
ANR	431540	Argument	mem		431236	0					
ANR	431541	Identifier	mem		431236	0					
ANR	431542	Argument	"""0x0"""		431236	1					
ANR	431543	PrimaryExpression	"""0x0"""		431236	0					
ANR	431544	ElseStatement	else		431236	0					
ANR	431545	ExpressionStatement	"dmprintf2 ( mem , ""0x%lx(%u)"" , ( ulong ) str -> data , str -> size )"	2817:28:89654:89711	431236	0	True				
ANR	431546	CallExpression	"dmprintf2 ( mem , ""0x%lx(%u)"" , ( ulong ) str -> data , str -> size )"		431236	0					
ANR	431547	Callee	dmprintf2		431236	0					
ANR	431548	Identifier	dmprintf2		431236	0					
ANR	431549	ArgumentList	mem		431236	1					
ANR	431550	Argument	mem		431236	0					
ANR	431551	Identifier	mem		431236	0					
ANR	431552	Argument	"""0x%lx(%u)"""		431236	1					
ANR	431553	PrimaryExpression	"""0x%lx(%u)"""		431236	0					
ANR	431554	Argument	( ulong ) str -> data		431236	2					
ANR	431555	CastExpression	( ulong ) str -> data		431236	0					
ANR	431556	CastTarget	ulong		431236	0					
ANR	431557	PtrMemberAccess	str -> data		431236	1					
ANR	431558	Identifier	str		431236	0					
ANR	431559	Identifier	data		431236	1					
ANR	431560	Argument	str -> size		431236	3					
ANR	431561	PtrMemberAccess	str -> size		431236	0					
ANR	431562	Identifier	str		431236	0					
ANR	431563	Identifier	size		431236	1					
ANR	431564	IfStatement	if ( options & dump_do_pointed_strings )		431236	2					
ANR	431565	Condition	options & dump_do_pointed_strings	2818:28:89741:89773	431236	0	True				
ANR	431566	BitAndExpression	options & dump_do_pointed_strings		431236	0		&			
ANR	431567	Identifier	options		431236	0					
ANR	431568	Identifier	dump_do_pointed_strings		431236	1					
ANR	431569	CompoundStatement		48:63:1975:1975	431236	1					
ANR	431570	ExpressionStatement	"dmputs ( mem , "" =>\\n"" )"	2819:28:89806:89826	431236	0	True				
ANR	431571	CallExpression	"dmputs ( mem , "" =>\\n"" )"		431236	0					
ANR	431572	Callee	dmputs		431236	0					
ANR	431573	Identifier	dmputs		431236	0					
ANR	431574	ArgumentList	mem		431236	1					
ANR	431575	Argument	mem		431236	0					
ANR	431576	Identifier	mem		431236	0					
ANR	431577	Argument	""" =>\\n"""		431236	1					
ANR	431578	PrimaryExpression	""" =>\\n"""		431236	0					
ANR	431579	IfStatement	if ( ! str )		431236	1					
ANR	431580	Condition	! str	2820:32:89860:89863	431236	0	True				
ANR	431581	UnaryOperationExpression	! str		431236	0					
ANR	431582	UnaryOperator	!		431236	0					
ANR	431583	Identifier	str		431236	1					
ANR	431584	ExpressionStatement	"dmprintf ( mem , ""(null)\\n"" )"	2821:32:89898:89923	431236	1	True				
ANR	431585	CallExpression	"dmprintf ( mem , ""(null)\\n"" )"		431236	0					
ANR	431586	Callee	dmprintf		431236	0					
ANR	431587	Identifier	dmprintf		431236	0					
ANR	431588	ArgumentList	mem		431236	1					
ANR	431589	Argument	mem		431236	0					
ANR	431590	Identifier	mem		431236	0					
ANR	431591	Argument	"""(null)\\n"""		431236	1					
ANR	431592	PrimaryExpression	"""(null)\\n"""		431236	0					
ANR	431593	ElseStatement	else		431236	0					
ANR	431594	ExpressionStatement	"debug_dump_contents ( mem , str -> data , str -> data + str -> size , 6 , true )"	2823:32:89990:90109	431236	0	True				
ANR	431595	CallExpression	"debug_dump_contents ( mem , str -> data , str -> data + str -> size , 6 , true )"		431236	0					
ANR	431596	Callee	debug_dump_contents		431236	0					
ANR	431597	Identifier	debug_dump_contents		431236	0					
ANR	431598	ArgumentList	mem		431236	1					
ANR	431599	Argument	mem		431236	0					
ANR	431600	Identifier	mem		431236	0					
ANR	431601	Argument	str -> data		431236	1					
ANR	431602	PtrMemberAccess	str -> data		431236	0					
ANR	431603	Identifier	str		431236	0					
ANR	431604	Identifier	data		431236	1					
ANR	431605	Argument	str -> data + str -> size		431236	2					
ANR	431606	AdditiveExpression	str -> data + str -> size		431236	0		+			
ANR	431607	PtrMemberAccess	str -> data		431236	0					
ANR	431608	Identifier	str		431236	0					
ANR	431609	Identifier	data		431236	1					
ANR	431610	PtrMemberAccess	str -> size		431236	1					
ANR	431611	Identifier	str		431236	0					
ANR	431612	Identifier	size		431236	1					
ANR	431613	Argument	6		431236	3					
ANR	431614	PrimaryExpression	6		431236	0					
ANR	431615	Argument	true		431236	4					
ANR	431616	Identifier	true		431236	0					
ANR	431617	ElseStatement	else		431236	0					
ANR	431618	CompoundStatement		55:31:2341:2341	431236	0					
ANR	431619	ExpressionStatement	"dmputc ( mem , '\\n' )"	2826:28:90172:90189	431236	0	True				
ANR	431620	CallExpression	"dmputc ( mem , '\\n' )"		431236	0					
ANR	431621	Callee	dmputc		431236	0					
ANR	431622	Identifier	dmputc		431236	0					
ANR	431623	ArgumentList	mem		431236	1					
ANR	431624	Argument	mem		431236	0					
ANR	431625	Identifier	mem		431236	0					
ANR	431626	Argument	'\\n'		431236	1					
ANR	431627	PrimaryExpression	'\\n'		431236	0					
ANR	431628	ElseStatement	else		431236	0					
ANR	431629	CompoundStatement		58:27:2443:2443	431236	0					
ANR	431630	ExpressionStatement	"dmprintf1 ( mem , ( PTR_BETWEEN ( ptr , obj , ( const byte * ) obj + size ) ? ""(0x%lx)\\n"" : ""0x%lx\\n"" ) , ( ulong ) ptr )"	2829:24:90270:90408	431236	0	True				
ANR	431631	CallExpression	"dmprintf1 ( mem , ( PTR_BETWEEN ( ptr , obj , ( const byte * ) obj + size ) ? ""(0x%lx)\\n"" : ""0x%lx\\n"" ) , ( ulong ) ptr )"		431236	0					
ANR	431632	Callee	dmprintf1		431236	0					
ANR	431633	Identifier	dmprintf1		431236	0					
ANR	431634	ArgumentList	mem		431236	1					
ANR	431635	Argument	mem		431236	0					
ANR	431636	Identifier	mem		431236	0					
ANR	431637	Argument	"PTR_BETWEEN ( ptr , obj , ( const byte * ) obj + size ) ? ""(0x%lx)\\n"" : ""0x%lx\\n"""		431236	1					
ANR	431638	ConditionalExpression	"PTR_BETWEEN ( ptr , obj , ( const byte * ) obj + size ) ? ""(0x%lx)\\n"" : ""0x%lx\\n"""		431236	0					
ANR	431639	Condition	"PTR_BETWEEN ( ptr , obj , ( const byte * ) obj + size )"		431236	0					
ANR	431640	CallExpression	"PTR_BETWEEN ( ptr , obj , ( const byte * ) obj + size )"		431236	0					
ANR	431641	Callee	PTR_BETWEEN		431236	0					
ANR	431642	Identifier	PTR_BETWEEN		431236	0					
ANR	431643	ArgumentList	ptr		431236	1					
ANR	431644	Argument	ptr		431236	0					
ANR	431645	Identifier	ptr		431236	0					
ANR	431646	Argument	obj		431236	1					
ANR	431647	Identifier	obj		431236	0					
ANR	431648	Argument	( const byte * ) obj + size		431236	2					
ANR	431649	AdditiveExpression	( const byte * ) obj + size		431236	0		+			
ANR	431650	CastExpression	( const byte * ) obj		431236	0					
ANR	431651	CastTarget	const byte *		431236	0					
ANR	431652	Identifier	obj		431236	1					
ANR	431653	Identifier	size		431236	1					
ANR	431654	PrimaryExpression	"""(0x%lx)\\n"""		431236	1					
ANR	431655	PrimaryExpression	"""0x%lx\\n"""		431236	2					
ANR	431656	Argument	( ulong ) ptr		431236	2					
ANR	431657	CastExpression	( ulong ) ptr		431236	0					
ANR	431658	CastTarget	ulong		431236	0					
ANR	431659	Identifier	ptr		431236	1					
ANR	431660	ElseStatement	else		431236	0					
ANR	431661	CompoundStatement		63:19:2668:2668	431236	0					
ANR	431662	ExpressionStatement	"dmprintf ( mem , ""previous line should be a ref\\n"" )"	2834:16:90503:90551	431236	0	True				
ANR	431663	CallExpression	"dmprintf ( mem , ""previous line should be a ref\\n"" )"		431236	0					
ANR	431664	Callee	dmprintf		431236	0					
ANR	431665	Identifier	dmprintf		431236	0					
ANR	431666	ArgumentList	mem		431236	1					
ANR	431667	Argument	mem		431236	0					
ANR	431668	Identifier	mem		431236	0					
ANR	431669	Argument	"""previous line should be a ref\\n"""		431236	1					
ANR	431670	PrimaryExpression	"""previous line should be a ref\\n"""		431236	0					
ANR	431671	IfStatement	if ( options & dump_do_contents )		431236	10					
ANR	431672	Condition	options & dump_do_contents	2838:8:90628:90653	431236	0	True				
ANR	431673	BitAndExpression	options & dump_do_contents		431236	0		&			
ANR	431674	Identifier	options		431236	0					
ANR	431675	Identifier	dump_do_contents		431236	1					
ANR	431676	CompoundStatement		68:36:2855:2855	431236	1					
ANR	431677	ExpressionStatement	"debug_dump_contents ( mem , ( const byte * ) obj , ( const byte * ) obj + size , 0 , false )"	2839:8:90666:90773	431236	0	True				
ANR	431678	CallExpression	"debug_dump_contents ( mem , ( const byte * ) obj , ( const byte * ) obj + size , 0 , false )"		431236	0					
ANR	431679	Callee	debug_dump_contents		431236	0					
ANR	431680	Identifier	debug_dump_contents		431236	0					
ANR	431681	ArgumentList	mem		431236	1					
ANR	431682	Argument	mem		431236	0					
ANR	431683	Identifier	mem		431236	0					
ANR	431684	Argument	( const byte * ) obj		431236	1					
ANR	431685	CastExpression	( const byte * ) obj		431236	0					
ANR	431686	CastTarget	const byte *		431236	0					
ANR	431687	Identifier	obj		431236	1					
ANR	431688	Argument	( const byte * ) obj + size		431236	2					
ANR	431689	AdditiveExpression	( const byte * ) obj + size		431236	0		+			
ANR	431690	CastExpression	( const byte * ) obj		431236	0					
ANR	431691	CastTarget	const byte *		431236	0					
ANR	431692	Identifier	obj		431236	1					
ANR	431693	Identifier	size		431236	1					
ANR	431694	Argument	0		431236	3					
ANR	431695	PrimaryExpression	0		431236	0					
ANR	431696	Argument	false		431236	4					
ANR	431697	Identifier	false		431236	0					
ANR	431698	ReturnType	void		431236	1					
ANR	431699	Identifier	debug_print_object		431236	2					
ANR	431700	ParameterList	"const gs_memory_t * mem , const void * obj , const dump_control_t * control"		431236	3					
ANR	431701	Parameter	const gs_memory_t * mem	2770:19:87727:87748	431236	0	True				
ANR	431702	ParameterType	const gs_memory_t *		431236	0					
ANR	431703	Identifier	mem		431236	1					
ANR	431704	Parameter	const void * obj	2770:43:87751:87765	431236	1	True				
ANR	431705	ParameterType	const void *		431236	0					
ANR	431706	Identifier	obj		431236	1					
ANR	431707	Parameter	const dump_control_t * control	2770:60:87768:87797	431236	2	True				
ANR	431708	ParameterType	const dump_control_t *		431236	0					
ANR	431709	Identifier	control		431236	1					
ANR	431710	CFGEntryNode	ENTRY		431236		True				
ANR	431711	CFGExitNode	EXIT		431236		True				
ANR	431712	Symbol	str -> size		431236						
ANR	431713	Symbol	dump_do_type_addresses		431236						
ANR	431714	Symbol	type -> enum_ptrs		431236						
ANR	431715	Symbol	eptr		431236						
ANR	431716	Symbol	& st_free		431236						
ANR	431717	Symbol	ptype		431236						
ANR	431718	Symbol	dump_do_pointed_strings		431236						
ANR	431719	Symbol	type		431236						
ANR	431720	Symbol	* pre		431236						
ANR	431721	Symbol	str -> data		431236						
ANR	431722	Symbol	mem		431236						
ANR	431723	Symbol	struct_proc_enum_ptrs		431236						
ANR	431724	Symbol	* type		431236						
ANR	431725	Symbol	pre -> o_type		431236						
ANR	431726	Symbol	options		431236						
ANR	431727	Symbol	PTR_BETWEEN		431236						
ANR	431728	Symbol	ptr_const_string_type		431236						
ANR	431729	Symbol	* str		431236						
ANR	431730	Symbol	pre_obj_contents_size		431236						
ANR	431731	Symbol	pre		431236						
ANR	431732	Symbol	struct_type_name_string		431236						
ANR	431733	Symbol	proc		431236						
ANR	431734	Symbol	NULL		431236						
ANR	431735	Symbol	dump_do_marks		431236						
ANR	431736	Symbol	false		431236						
ANR	431737	Symbol	index		431236						
ANR	431738	Symbol	& eptr		431236						
ANR	431739	Symbol	eptr . ptr		431236						
ANR	431740	Symbol	control		431236						
ANR	431741	Symbol	ptr_string_type		431236						
ANR	431742	Symbol	gs_no_struct_enum_ptrs		431236						
ANR	431743	Symbol	* proc		431236						
ANR	431744	Symbol	ptr		431236						
ANR	431745	Symbol	* control		431236						
ANR	431746	Symbol	str		431236						
ANR	431747	Symbol	dump_do_contents		431236						
ANR	431748	Symbol	size		431236						
ANR	431749	Symbol	dump_do_no_types		431236						
ANR	431750	Symbol	dump_do_pointers		431236						
ANR	431751	Symbol	obj		431236						
ANR	431752	Symbol	pre -> o_smark		431236						
ANR	431753	Symbol	true		431236						
ANR	431754	Symbol	control -> options		431236						
ANR	431755	Function	debug_dump_clump	2846:0:90873:92558							
ANR	431756	FunctionDef	"debug_dump_clump (const gs_memory_t * mem , const clump_t * cp , const dump_control_t * control)"		431755	0					
ANR	431757	CompoundStatement		2848:0:90971:92558	431755	0					
ANR	431758	ExpressionStatement	"dmprintf1 ( mem , ""clump at 0x%lx:\\n"" , ( ulong ) cp )"	2849:4:90977:91024	431755	0	True				
ANR	431759	CallExpression	"dmprintf1 ( mem , ""clump at 0x%lx:\\n"" , ( ulong ) cp )"		431755	0					
ANR	431760	Callee	dmprintf1		431755	0					
ANR	431761	Identifier	dmprintf1		431755	0					
ANR	431762	ArgumentList	mem		431755	1					
ANR	431763	Argument	mem		431755	0					
ANR	431764	Identifier	mem		431755	0					
ANR	431765	Argument	"""clump at 0x%lx:\\n"""		431755	1					
ANR	431766	PrimaryExpression	"""clump at 0x%lx:\\n"""		431755	0					
ANR	431767	Argument	( ulong ) cp		431755	2					
ANR	431768	CastExpression	( ulong ) cp		431755	0					
ANR	431769	CastTarget	ulong		431755	0					
ANR	431770	Identifier	cp		431755	1					
ANR	431771	ExpressionStatement	"dmprintf3 ( mem , ""   chead=0x%lx  cbase=0x%lx sbase=0x%lx\\n"" , ( ulong ) cp -> chead , ( ulong ) cp -> cbase , ( ulong ) cp -> sbase )"	2850:4:91030:91160	431755	1	True				
ANR	431772	CallExpression	"dmprintf3 ( mem , ""   chead=0x%lx  cbase=0x%lx sbase=0x%lx\\n"" , ( ulong ) cp -> chead , ( ulong ) cp -> cbase , ( ulong ) cp -> sbase )"		431755	0					
ANR	431773	Callee	dmprintf3		431755	0					
ANR	431774	Identifier	dmprintf3		431755	0					
ANR	431775	ArgumentList	mem		431755	1					
ANR	431776	Argument	mem		431755	0					
ANR	431777	Identifier	mem		431755	0					
ANR	431778	Argument	"""   chead=0x%lx  cbase=0x%lx sbase=0x%lx\\n"""		431755	1					
ANR	431779	PrimaryExpression	"""   chead=0x%lx  cbase=0x%lx sbase=0x%lx\\n"""		431755	0					
ANR	431780	Argument	( ulong ) cp -> chead		431755	2					
ANR	431781	CastExpression	( ulong ) cp -> chead		431755	0					
ANR	431782	CastTarget	ulong		431755	0					
ANR	431783	PtrMemberAccess	cp -> chead		431755	1					
ANR	431784	Identifier	cp		431755	0					
ANR	431785	Identifier	chead		431755	1					
ANR	431786	Argument	( ulong ) cp -> cbase		431755	3					
ANR	431787	CastExpression	( ulong ) cp -> cbase		431755	0					
ANR	431788	CastTarget	ulong		431755	0					
ANR	431789	PtrMemberAccess	cp -> cbase		431755	1					
ANR	431790	Identifier	cp		431755	0					
ANR	431791	Identifier	cbase		431755	1					
ANR	431792	Argument	( ulong ) cp -> sbase		431755	4					
ANR	431793	CastExpression	( ulong ) cp -> sbase		431755	0					
ANR	431794	CastTarget	ulong		431755	0					
ANR	431795	PtrMemberAccess	cp -> sbase		431755	1					
ANR	431796	Identifier	cp		431755	0					
ANR	431797	Identifier	sbase		431755	1					
ANR	431798	ExpressionStatement	"dmprintf3 ( mem , ""    rcur=0x%lx   rtop=0x%lx  cbot=0x%lx\\n"" , ( ulong ) cp -> rcur , ( ulong ) cp -> rtop , ( ulong ) cp -> cbot )"	2852:4:91166:91293	431755	2	True				
ANR	431799	CallExpression	"dmprintf3 ( mem , ""    rcur=0x%lx   rtop=0x%lx  cbot=0x%lx\\n"" , ( ulong ) cp -> rcur , ( ulong ) cp -> rtop , ( ulong ) cp -> cbot )"		431755	0					
ANR	431800	Callee	dmprintf3		431755	0					
ANR	431801	Identifier	dmprintf3		431755	0					
ANR	431802	ArgumentList	mem		431755	1					
ANR	431803	Argument	mem		431755	0					
ANR	431804	Identifier	mem		431755	0					
ANR	431805	Argument	"""    rcur=0x%lx   rtop=0x%lx  cbot=0x%lx\\n"""		431755	1					
ANR	431806	PrimaryExpression	"""    rcur=0x%lx   rtop=0x%lx  cbot=0x%lx\\n"""		431755	0					
ANR	431807	Argument	( ulong ) cp -> rcur		431755	2					
ANR	431808	CastExpression	( ulong ) cp -> rcur		431755	0					
ANR	431809	CastTarget	ulong		431755	0					
ANR	431810	PtrMemberAccess	cp -> rcur		431755	1					
ANR	431811	Identifier	cp		431755	0					
ANR	431812	Identifier	rcur		431755	1					
ANR	431813	Argument	( ulong ) cp -> rtop		431755	3					
ANR	431814	CastExpression	( ulong ) cp -> rtop		431755	0					
ANR	431815	CastTarget	ulong		431755	0					
ANR	431816	PtrMemberAccess	cp -> rtop		431755	1					
ANR	431817	Identifier	cp		431755	0					
ANR	431818	Identifier	rtop		431755	1					
ANR	431819	Argument	( ulong ) cp -> cbot		431755	4					
ANR	431820	CastExpression	( ulong ) cp -> cbot		431755	0					
ANR	431821	CastTarget	ulong		431755	0					
ANR	431822	PtrMemberAccess	cp -> cbot		431755	1					
ANR	431823	Identifier	cp		431755	0					
ANR	431824	Identifier	cbot		431755	1					
ANR	431825	ExpressionStatement	"dmprintf4 ( mem , ""    ctop=0x%lx climit=0x%lx smark=0x%lx, size=%u\\n"" , ( ulong ) cp -> ctop , ( ulong ) cp -> climit , ( ulong ) cp -> smark , cp -> smark_size )"	2854:4:91299:91468	431755	3	True				
ANR	431826	CallExpression	"dmprintf4 ( mem , ""    ctop=0x%lx climit=0x%lx smark=0x%lx, size=%u\\n"" , ( ulong ) cp -> ctop , ( ulong ) cp -> climit , ( ulong ) cp -> smark , cp -> smark_size )"		431755	0					
ANR	431827	Callee	dmprintf4		431755	0					
ANR	431828	Identifier	dmprintf4		431755	0					
ANR	431829	ArgumentList	mem		431755	1					
ANR	431830	Argument	mem		431755	0					
ANR	431831	Identifier	mem		431755	0					
ANR	431832	Argument	"""    ctop=0x%lx climit=0x%lx smark=0x%lx, size=%u\\n"""		431755	1					
ANR	431833	PrimaryExpression	"""    ctop=0x%lx climit=0x%lx smark=0x%lx, size=%u\\n"""		431755	0					
ANR	431834	Argument	( ulong ) cp -> ctop		431755	2					
ANR	431835	CastExpression	( ulong ) cp -> ctop		431755	0					
ANR	431836	CastTarget	ulong		431755	0					
ANR	431837	PtrMemberAccess	cp -> ctop		431755	1					
ANR	431838	Identifier	cp		431755	0					
ANR	431839	Identifier	ctop		431755	1					
ANR	431840	Argument	( ulong ) cp -> climit		431755	3					
ANR	431841	CastExpression	( ulong ) cp -> climit		431755	0					
ANR	431842	CastTarget	ulong		431755	0					
ANR	431843	PtrMemberAccess	cp -> climit		431755	1					
ANR	431844	Identifier	cp		431755	0					
ANR	431845	Identifier	climit		431755	1					
ANR	431846	Argument	( ulong ) cp -> smark		431755	4					
ANR	431847	CastExpression	( ulong ) cp -> smark		431755	0					
ANR	431848	CastTarget	ulong		431755	0					
ANR	431849	PtrMemberAccess	cp -> smark		431755	1					
ANR	431850	Identifier	cp		431755	0					
ANR	431851	Identifier	smark		431755	1					
ANR	431852	Argument	cp -> smark_size		431755	5					
ANR	431853	PtrMemberAccess	cp -> smark_size		431755	0					
ANR	431854	Identifier	cp		431755	0					
ANR	431855	Identifier	smark_size		431755	1					
ANR	431856	ExpressionStatement	"dmprintf2 ( mem , ""  sreloc=0x%lx   cend=0x%lx\\n"" , ( ulong ) cp -> sreloc , ( ulong ) cp -> cend )"	2857:4:91474:91573	431755	4	True				
ANR	431857	CallExpression	"dmprintf2 ( mem , ""  sreloc=0x%lx   cend=0x%lx\\n"" , ( ulong ) cp -> sreloc , ( ulong ) cp -> cend )"		431755	0					
ANR	431858	Callee	dmprintf2		431755	0					
ANR	431859	Identifier	dmprintf2		431755	0					
ANR	431860	ArgumentList	mem		431755	1					
ANR	431861	Argument	mem		431755	0					
ANR	431862	Identifier	mem		431755	0					
ANR	431863	Argument	"""  sreloc=0x%lx   cend=0x%lx\\n"""		431755	1					
ANR	431864	PrimaryExpression	"""  sreloc=0x%lx   cend=0x%lx\\n"""		431755	0					
ANR	431865	Argument	( ulong ) cp -> sreloc		431755	2					
ANR	431866	CastExpression	( ulong ) cp -> sreloc		431755	0					
ANR	431867	CastTarget	ulong		431755	0					
ANR	431868	PtrMemberAccess	cp -> sreloc		431755	1					
ANR	431869	Identifier	cp		431755	0					
ANR	431870	Identifier	sreloc		431755	1					
ANR	431871	Argument	( ulong ) cp -> cend		431755	3					
ANR	431872	CastExpression	( ulong ) cp -> cend		431755	0					
ANR	431873	CastTarget	ulong		431755	0					
ANR	431874	PtrMemberAccess	cp -> cend		431755	1					
ANR	431875	Identifier	cp		431755	0					
ANR	431876	Identifier	cend		431755	1					
ANR	431877	ExpressionStatement	"dmprintf6 ( mem , ""left=0x%lx right=0x%lx parent=0x%lx outer=0x%lx inner_count=%u has_refs=%s\\n"" , ( ulong ) cp -> left , ( ulong ) cp -> right , ( ulong ) cp -> parent , ( ulong ) cp -> outer , cp -> inner_count , ( cp -> has_refs ? ""true"" : ""false"" ) )"	2859:4:91579:91829	431755	5	True				
ANR	431878	CallExpression	"dmprintf6 ( mem , ""left=0x%lx right=0x%lx parent=0x%lx outer=0x%lx inner_count=%u has_refs=%s\\n"" , ( ulong ) cp -> left , ( ulong ) cp -> right , ( ulong ) cp -> parent , ( ulong ) cp -> outer , cp -> inner_count , ( cp -> has_refs ? ""true"" : ""false"" ) )"		431755	0					
ANR	431879	Callee	dmprintf6		431755	0					
ANR	431880	Identifier	dmprintf6		431755	0					
ANR	431881	ArgumentList	mem		431755	1					
ANR	431882	Argument	mem		431755	0					
ANR	431883	Identifier	mem		431755	0					
ANR	431884	Argument	"""left=0x%lx right=0x%lx parent=0x%lx outer=0x%lx inner_count=%u has_refs=%s\\n"""		431755	1					
ANR	431885	PrimaryExpression	"""left=0x%lx right=0x%lx parent=0x%lx outer=0x%lx inner_count=%u has_refs=%s\\n"""		431755	0					
ANR	431886	Argument	( ulong ) cp -> left		431755	2					
ANR	431887	CastExpression	( ulong ) cp -> left		431755	0					
ANR	431888	CastTarget	ulong		431755	0					
ANR	431889	PtrMemberAccess	cp -> left		431755	1					
ANR	431890	Identifier	cp		431755	0					
ANR	431891	Identifier	left		431755	1					
ANR	431892	Argument	( ulong ) cp -> right		431755	3					
ANR	431893	CastExpression	( ulong ) cp -> right		431755	0					
ANR	431894	CastTarget	ulong		431755	0					
ANR	431895	PtrMemberAccess	cp -> right		431755	1					
ANR	431896	Identifier	cp		431755	0					
ANR	431897	Identifier	right		431755	1					
ANR	431898	Argument	( ulong ) cp -> parent		431755	4					
ANR	431899	CastExpression	( ulong ) cp -> parent		431755	0					
ANR	431900	CastTarget	ulong		431755	0					
ANR	431901	PtrMemberAccess	cp -> parent		431755	1					
ANR	431902	Identifier	cp		431755	0					
ANR	431903	Identifier	parent		431755	1					
ANR	431904	Argument	( ulong ) cp -> outer		431755	5					
ANR	431905	CastExpression	( ulong ) cp -> outer		431755	0					
ANR	431906	CastTarget	ulong		431755	0					
ANR	431907	PtrMemberAccess	cp -> outer		431755	1					
ANR	431908	Identifier	cp		431755	0					
ANR	431909	Identifier	outer		431755	1					
ANR	431910	Argument	cp -> inner_count		431755	6					
ANR	431911	PtrMemberAccess	cp -> inner_count		431755	0					
ANR	431912	Identifier	cp		431755	0					
ANR	431913	Identifier	inner_count		431755	1					
ANR	431914	Argument	"cp -> has_refs ? ""true"" : ""false"""		431755	7					
ANR	431915	ConditionalExpression	"cp -> has_refs ? ""true"" : ""false"""		431755	0					
ANR	431916	Condition	cp -> has_refs		431755	0					
ANR	431917	PtrMemberAccess	cp -> has_refs		431755	0					
ANR	431918	Identifier	cp		431755	0					
ANR	431919	Identifier	has_refs		431755	1					
ANR	431920	PrimaryExpression	"""true"""		431755	1					
ANR	431921	PrimaryExpression	"""false"""		431755	2					
ANR	431922	ExpressionStatement	"dmprintf2 ( mem , ""  sfree1=0x%lx   sfree=0x%x\\n"" , ( ulong ) cp -> sfree1 , cp -> sfree )"	2863:4:91836:91928	431755	6	True				
ANR	431923	CallExpression	"dmprintf2 ( mem , ""  sfree1=0x%lx   sfree=0x%x\\n"" , ( ulong ) cp -> sfree1 , cp -> sfree )"		431755	0					
ANR	431924	Callee	dmprintf2		431755	0					
ANR	431925	Identifier	dmprintf2		431755	0					
ANR	431926	ArgumentList	mem		431755	1					
ANR	431927	Argument	mem		431755	0					
ANR	431928	Identifier	mem		431755	0					
ANR	431929	Argument	"""  sfree1=0x%lx   sfree=0x%x\\n"""		431755	1					
ANR	431930	PrimaryExpression	"""  sfree1=0x%lx   sfree=0x%x\\n"""		431755	0					
ANR	431931	Argument	( ulong ) cp -> sfree1		431755	2					
ANR	431932	CastExpression	( ulong ) cp -> sfree1		431755	0					
ANR	431933	CastTarget	ulong		431755	0					
ANR	431934	PtrMemberAccess	cp -> sfree1		431755	1					
ANR	431935	Identifier	cp		431755	0					
ANR	431936	Identifier	sfree1		431755	1					
ANR	431937	Argument	cp -> sfree		431755	3					
ANR	431938	PtrMemberAccess	cp -> sfree		431755	0					
ANR	431939	Identifier	cp		431755	0					
ANR	431940	Identifier	sfree		431755	1					
ANR	431941	IfStatement	if ( control -> options & dump_do_strings )		431755	7					
ANR	431942	Condition	control -> options & dump_do_strings	2865:8:91938:91971	431755	0	True				
ANR	431943	BitAndExpression	control -> options & dump_do_strings		431755	0		&			
ANR	431944	PtrMemberAccess	control -> options		431755	0					
ANR	431945	Identifier	control		431755	0					
ANR	431946	Identifier	options		431755	1					
ANR	431947	Identifier	dump_do_strings		431755	1					
ANR	431948	CompoundStatement		18:44:1002:1002	431755	1					
ANR	431949	ExpressionStatement	"debug_dump_contents ( mem , ( control -> bottom == 0 ? cp -> ctop : max ( control -> bottom , cp -> ctop ) ) , ( control -> top == 0 ? cp -> climit : min ( control -> top , cp -> climit ) ) , 0 , true )"	2866:8:91984:92265	431755	0	True				
ANR	431950	CallExpression	"debug_dump_contents ( mem , ( control -> bottom == 0 ? cp -> ctop : max ( control -> bottom , cp -> ctop ) ) , ( control -> top == 0 ? cp -> climit : min ( control -> top , cp -> climit ) ) , 0 , true )"		431755	0					
ANR	431951	Callee	debug_dump_contents		431755	0					
ANR	431952	Identifier	debug_dump_contents		431755	0					
ANR	431953	ArgumentList	mem		431755	1					
ANR	431954	Argument	mem		431755	0					
ANR	431955	Identifier	mem		431755	0					
ANR	431956	Argument	"control -> bottom == 0 ? cp -> ctop : max ( control -> bottom , cp -> ctop )"		431755	1					
ANR	431957	ConditionalExpression	"control -> bottom == 0 ? cp -> ctop : max ( control -> bottom , cp -> ctop )"		431755	0					
ANR	431958	Condition	control -> bottom == 0		431755	0					
ANR	431959	EqualityExpression	control -> bottom == 0		431755	0		==			
ANR	431960	PtrMemberAccess	control -> bottom		431755	0					
ANR	431961	Identifier	control		431755	0					
ANR	431962	Identifier	bottom		431755	1					
ANR	431963	PrimaryExpression	0		431755	1					
ANR	431964	PtrMemberAccess	cp -> ctop		431755	1					
ANR	431965	Identifier	cp		431755	0					
ANR	431966	Identifier	ctop		431755	1					
ANR	431967	CallExpression	"max ( control -> bottom , cp -> ctop )"		431755	2					
ANR	431968	Callee	max		431755	0					
ANR	431969	Identifier	max		431755	0					
ANR	431970	ArgumentList	control -> bottom		431755	1					
ANR	431971	Argument	control -> bottom		431755	0					
ANR	431972	PtrMemberAccess	control -> bottom		431755	0					
ANR	431973	Identifier	control		431755	0					
ANR	431974	Identifier	bottom		431755	1					
ANR	431975	Argument	cp -> ctop		431755	1					
ANR	431976	PtrMemberAccess	cp -> ctop		431755	0					
ANR	431977	Identifier	cp		431755	0					
ANR	431978	Identifier	ctop		431755	1					
ANR	431979	Argument	"control -> top == 0 ? cp -> climit : min ( control -> top , cp -> climit )"		431755	2					
ANR	431980	ConditionalExpression	"control -> top == 0 ? cp -> climit : min ( control -> top , cp -> climit )"		431755	0					
ANR	431981	Condition	control -> top == 0		431755	0					
ANR	431982	EqualityExpression	control -> top == 0		431755	0		==			
ANR	431983	PtrMemberAccess	control -> top		431755	0					
ANR	431984	Identifier	control		431755	0					
ANR	431985	Identifier	top		431755	1					
ANR	431986	PrimaryExpression	0		431755	1					
ANR	431987	PtrMemberAccess	cp -> climit		431755	1					
ANR	431988	Identifier	cp		431755	0					
ANR	431989	Identifier	climit		431755	1					
ANR	431990	CallExpression	"min ( control -> top , cp -> climit )"		431755	2					
ANR	431991	Callee	min		431755	0					
ANR	431992	Identifier	min		431755	0					
ANR	431993	ArgumentList	control -> top		431755	1					
ANR	431994	Argument	control -> top		431755	0					
ANR	431995	PtrMemberAccess	control -> top		431755	0					
ANR	431996	Identifier	control		431755	0					
ANR	431997	Identifier	top		431755	1					
ANR	431998	Argument	cp -> climit		431755	1					
ANR	431999	PtrMemberAccess	cp -> climit		431755	0					
ANR	432000	Identifier	cp		431755	0					
ANR	432001	Identifier	climit		431755	1					
ANR	432002	Argument	0		431755	3					
ANR	432003	PrimaryExpression	0		431755	0					
ANR	432004	Argument	true		431755	4					
ANR	432005	Identifier	true		431755	0					
ANR	432006	Statement	SCAN_CLUMP_OBJECTS	2872:4:92277:92294	431755	8	True				
ANR	432007	Statement	(	2872:22:92295:92295	431755	9	True				
ANR	432008	Statement	cp	2872:23:92296:92297	431755	10	True				
ANR	432009	Statement	)	2872:25:92298:92298	431755	11	True				
ANR	432010	Statement	DO_ALL	2873:8:92308:92313	431755	12	True				
ANR	432011	IfStatement	"if ( obj_in_control_region ( pre + 1 , ( const byte * ) ( pre + 1 ) + size , control ) )"		431755	13					
ANR	432012	Condition	"obj_in_control_region ( pre + 1 , ( const byte * ) ( pre + 1 ) + size , control )"	2874:12:92327:92465	431755	0	True				
ANR	432013	CallExpression	"obj_in_control_region ( pre + 1 , ( const byte * ) ( pre + 1 ) + size , control )"		431755	0					
ANR	432014	Callee	obj_in_control_region		431755	0					
ANR	432015	Identifier	obj_in_control_region		431755	0					
ANR	432016	ArgumentList	pre + 1		431755	1					
ANR	432017	Argument	pre + 1		431755	0					
ANR	432018	AdditiveExpression	pre + 1		431755	0		+			
ANR	432019	Identifier	pre		431755	0					
ANR	432020	PrimaryExpression	1		431755	1					
ANR	432021	Argument	( const byte * ) ( pre + 1 ) + size		431755	1					
ANR	432022	AdditiveExpression	( const byte * ) ( pre + 1 ) + size		431755	0		+			
ANR	432023	CastExpression	( const byte * ) ( pre + 1 )		431755	0					
ANR	432024	CastTarget	const byte *		431755	0					
ANR	432025	AdditiveExpression	pre + 1		431755	1		+			
ANR	432026	Identifier	pre		431755	0					
ANR	432027	PrimaryExpression	1		431755	1					
ANR	432028	Identifier	size		431755	1					
ANR	432029	Argument	control		431755	2					
ANR	432030	Identifier	control		431755	0					
ANR	432031	ExpressionStatement	"debug_print_object ( mem , pre + 1 , control )"	2878:8:92485:92526	431755	1	True				
ANR	432032	CallExpression	"debug_print_object ( mem , pre + 1 , control )"		431755	0					
ANR	432033	Callee	debug_print_object		431755	0					
ANR	432034	Identifier	debug_print_object		431755	0					
ANR	432035	ArgumentList	mem		431755	1					
ANR	432036	Argument	mem		431755	0					
ANR	432037	Identifier	mem		431755	0					
ANR	432038	Argument	pre + 1		431755	1					
ANR	432039	AdditiveExpression	pre + 1		431755	0		+			
ANR	432040	Identifier	pre		431755	0					
ANR	432041	PrimaryExpression	1		431755	1					
ANR	432042	Argument	control		431755	2					
ANR	432043	Identifier	control		431755	0					
ANR	432044	Statement	END_OBJECTS_SCAN_NO_ABORT	2879:4:92532:92556	431755	14	True				
ANR	432045	ReturnType	void		431755	1					
ANR	432046	Identifier	debug_dump_clump		431755	2					
ANR	432047	ParameterList	"const gs_memory_t * mem , const clump_t * cp , const dump_control_t * control"		431755	3					
ANR	432048	Parameter	const gs_memory_t * mem	2847:17:90895:90916	431755	0	True				
ANR	432049	ParameterType	const gs_memory_t *		431755	0					
ANR	432050	Identifier	mem		431755	1					
ANR	432051	Parameter	const clump_t * cp	2847:41:90919:90936	431755	1	True				
ANR	432052	ParameterType	const clump_t *		431755	0					
ANR	432053	Identifier	cp		431755	1					
ANR	432054	Parameter	const dump_control_t * control	2847:61:90939:90968	431755	2	True				
ANR	432055	ParameterType	const dump_control_t *		431755	0					
ANR	432056	Identifier	control		431755	1					
ANR	432057	CFGEntryNode	ENTRY		431755		True				
ANR	432058	CFGExitNode	EXIT		431755		True				
ANR	432059	Symbol	cp -> rtop		431755						
ANR	432060	Symbol	cp -> cend		431755						
ANR	432061	Symbol	cp -> inner_count		431755						
ANR	432062	Symbol	cp -> right		431755						
ANR	432063	Symbol	cp -> sreloc		431755						
ANR	432064	Symbol	dump_do_strings		431755						
ANR	432065	Symbol	cp -> climit		431755						
ANR	432066	Symbol	cp -> rcur		431755						
ANR	432067	Symbol	cp -> chead		431755						
ANR	432068	Symbol	control -> bottom		431755						
ANR	432069	Symbol	cp -> cbot		431755						
ANR	432070	Symbol	min		431755						
ANR	432071	Symbol	mem		431755						
ANR	432072	Symbol	cp -> left		431755						
ANR	432073	Symbol	cp -> sfree		431755						
ANR	432074	Symbol	cp -> sfree1		431755						
ANR	432075	Symbol	cp -> has_refs		431755						
ANR	432076	Symbol	cp -> ctop		431755						
ANR	432077	Symbol	pre		431755						
ANR	432078	Symbol	max		431755						
ANR	432079	Symbol	control		431755						
ANR	432080	Symbol	cp -> cbase		431755						
ANR	432081	Symbol	cp		431755						
ANR	432082	Symbol	* cp		431755						
ANR	432083	Symbol	* control		431755						
ANR	432084	Symbol	cp -> parent		431755						
ANR	432085	Symbol	size		431755						
ANR	432086	Symbol	obj_in_control_region		431755						
ANR	432087	Symbol	true		431755						
ANR	432088	Symbol	cp -> smark_size		431755						
ANR	432089	Symbol	cp -> outer		431755						
ANR	432090	Symbol	control -> options		431755						
ANR	432091	Symbol	control -> top		431755						
ANR	432092	Symbol	cp -> sbase		431755						
ANR	432093	Symbol	cp -> smark		431755						
ANR	432094	Function	debug_print_clump	2881:0:92560:92735							
ANR	432095	FunctionDef	"debug_print_clump (const gs_memory_t * mem , const clump_t * cp)"		432094	0					
ANR	432096	CompoundStatement		2883:0:92627:92735	432094	0					
ANR	432097	IdentifierDeclStatement	dump_control_t control ;	2884:4:92633:92655	432094	0	True				
ANR	432098	IdentifierDecl	control		432094	0					
ANR	432099	IdentifierDeclType	dump_control_t		432094	0					
ANR	432100	Identifier	control		432094	1					
ANR	432101	ExpressionStatement	control = dump_control_default	2886:4:92662:92692	432094	1	True				
ANR	432102	AssignmentExpression	control = dump_control_default		432094	0		=			
ANR	432103	Identifier	control		432094	0					
ANR	432104	Identifier	dump_control_default		432094	1					
ANR	432105	ExpressionStatement	"debug_dump_clump ( mem , cp , & control )"	2887:4:92698:92733	432094	2	True				
ANR	432106	CallExpression	"debug_dump_clump ( mem , cp , & control )"		432094	0					
ANR	432107	Callee	debug_dump_clump		432094	0					
ANR	432108	Identifier	debug_dump_clump		432094	0					
ANR	432109	ArgumentList	mem		432094	1					
ANR	432110	Argument	mem		432094	0					
ANR	432111	Identifier	mem		432094	0					
ANR	432112	Argument	cp		432094	1					
ANR	432113	Identifier	cp		432094	0					
ANR	432114	Argument	& control		432094	2					
ANR	432115	UnaryOperationExpression	& control		432094	0					
ANR	432116	UnaryOperator	&		432094	0					
ANR	432117	Identifier	control		432094	1					
ANR	432118	ReturnType	void		432094	1					
ANR	432119	Identifier	debug_print_clump		432094	2					
ANR	432120	ParameterList	"const gs_memory_t * mem , const clump_t * cp"		432094	3					
ANR	432121	Parameter	const gs_memory_t * mem	2882:18:92583:92604	432094	0	True				
ANR	432122	ParameterType	const gs_memory_t *		432094	0					
ANR	432123	Identifier	mem		432094	1					
ANR	432124	Parameter	const clump_t * cp	2882:42:92607:92624	432094	1	True				
ANR	432125	ParameterType	const clump_t *		432094	0					
ANR	432126	Identifier	cp		432094	1					
ANR	432127	CFGEntryNode	ENTRY		432094		True				
ANR	432128	CFGExitNode	EXIT		432094		True				
ANR	432129	Symbol	mem		432094						
ANR	432130	Symbol	& control		432094						
ANR	432131	Symbol	control		432094						
ANR	432132	Symbol	dump_control_default		432094						
ANR	432133	Symbol	cp		432094						
ANR	432134	Function	debug_dump_memory	2892:0:92831:93205							
ANR	432135	FunctionDef	"debug_dump_memory (const gs_ref_memory_t * mem , const dump_control_t * control)"		432134	0					
ANR	432136	CompoundStatement		2894:0:92915:93205	432134	0					
ANR	432137	IdentifierDeclStatement	const clump_t * cp ;	2895:4:92921:92938	432134	0	True				
ANR	432138	IdentifierDecl	* cp		432134	0					
ANR	432139	IdentifierDeclType	const clump_t *		432134	0					
ANR	432140	Identifier	cp		432134	1					
ANR	432141	IdentifierDeclStatement	clump_splay_walker sw ;	2896:4:92944:92965	432134	1	True				
ANR	432142	IdentifierDecl	sw		432134	0					
ANR	432143	IdentifierDeclType	clump_splay_walker		432134	0					
ANR	432144	Identifier	sw		432134	1					
ANR	432145	ForStatement	"for ( cp = clump_splay_walk_init ( & sw , mem ) ; cp != NULL ; cp = clump_splay_walk_fwd ( & sw ) )"		432134	2					
ANR	432146	ForInit	"cp = clump_splay_walk_init ( & sw , mem ) ;"	2898:9:92977:93013	432134	0	True				
ANR	432147	AssignmentExpression	"cp = clump_splay_walk_init ( & sw , mem )"		432134	0		=			
ANR	432148	Identifier	cp		432134	0					
ANR	432149	CallExpression	"clump_splay_walk_init ( & sw , mem )"		432134	1					
ANR	432150	Callee	clump_splay_walk_init		432134	0					
ANR	432151	Identifier	clump_splay_walk_init		432134	0					
ANR	432152	ArgumentList	& sw		432134	1					
ANR	432153	Argument	& sw		432134	0					
ANR	432154	UnaryOperationExpression	& sw		432134	0					
ANR	432155	UnaryOperator	&		432134	0					
ANR	432156	Identifier	sw		432134	1					
ANR	432157	Argument	mem		432134	1					
ANR	432158	Identifier	mem		432134	0					
ANR	432159	Condition	cp != NULL	2898:47:93015:93024	432134	1	True				
ANR	432160	EqualityExpression	cp != NULL		432134	0		!=			
ANR	432161	Identifier	cp		432134	0					
ANR	432162	Identifier	NULL		432134	1					
ANR	432163	AssignmentExpression	cp = clump_splay_walk_fwd ( & sw )	2898:59:93027:93056	432134	2	True	=			
ANR	432164	Identifier	cp		432134	0					
ANR	432165	CallExpression	clump_splay_walk_fwd ( & sw )		432134	1					
ANR	432166	Callee	clump_splay_walk_fwd		432134	0					
ANR	432167	Identifier	clump_splay_walk_fwd		432134	0					
ANR	432168	ArgumentList	& sw		432134	1					
ANR	432169	Argument	& sw		432134	0					
ANR	432170	UnaryOperationExpression	& sw		432134	0					
ANR	432171	UnaryOperator	&		432134	0					
ANR	432172	Identifier	sw		432134	1					
ANR	432173	CompoundStatement		6:4:147:147	432134	3					
ANR	432174	IfStatement	"if ( obj_in_control_region ( cp -> cbase , cp -> cend , control ) )"		432134	0					
ANR	432175	Condition	"obj_in_control_region ( cp -> cbase , cp -> cend , control )"	2900:12:93077:93127	432134	0	True				
ANR	432176	CallExpression	"obj_in_control_region ( cp -> cbase , cp -> cend , control )"		432134	0					
ANR	432177	Callee	obj_in_control_region		432134	0					
ANR	432178	Identifier	obj_in_control_region		432134	0					
ANR	432179	ArgumentList	cp -> cbase		432134	1					
ANR	432180	Argument	cp -> cbase		432134	0					
ANR	432181	PtrMemberAccess	cp -> cbase		432134	0					
ANR	432182	Identifier	cp		432134	0					
ANR	432183	Identifier	cbase		432134	1					
ANR	432184	Argument	cp -> cend		432134	1					
ANR	432185	PtrMemberAccess	cp -> cend		432134	0					
ANR	432186	Identifier	cp		432134	0					
ANR	432187	Identifier	cend		432134	1					
ANR	432188	Argument	control		432134	2					
ANR	432189	Identifier	control		432134	0					
ANR	432190	ExpressionStatement	"debug_dump_clump ( ( const gs_memory_t * ) mem , cp , control )"	2901:12:93142:93197	432134	1	True				
ANR	432191	CallExpression	"debug_dump_clump ( ( const gs_memory_t * ) mem , cp , control )"		432134	0					
ANR	432192	Callee	debug_dump_clump		432134	0					
ANR	432193	Identifier	debug_dump_clump		432134	0					
ANR	432194	ArgumentList	( const gs_memory_t * ) mem		432134	1					
ANR	432195	Argument	( const gs_memory_t * ) mem		432134	0					
ANR	432196	CastExpression	( const gs_memory_t * ) mem		432134	0					
ANR	432197	CastTarget	const gs_memory_t *		432134	0					
ANR	432198	Identifier	mem		432134	1					
ANR	432199	Argument	cp		432134	1					
ANR	432200	Identifier	cp		432134	0					
ANR	432201	Argument	control		432134	2					
ANR	432202	Identifier	control		432134	0					
ANR	432203	ReturnType	void		432134	1					
ANR	432204	Identifier	debug_dump_memory		432134	2					
ANR	432205	ParameterList	"const gs_ref_memory_t * mem , const dump_control_t * control"		432134	3					
ANR	432206	Parameter	const gs_ref_memory_t * mem	2893:18:92854:92880	432134	0	True				
ANR	432207	ParameterType	const gs_ref_memory_t *		432134	0					
ANR	432208	Identifier	mem		432134	1					
ANR	432209	Parameter	const dump_control_t * control	2893:47:92883:92912	432134	1	True				
ANR	432210	ParameterType	const dump_control_t *		432134	0					
ANR	432211	Identifier	control		432134	1					
ANR	432212	CFGEntryNode	ENTRY		432134		True				
ANR	432213	CFGExitNode	EXIT		432134		True				
ANR	432214	Symbol	* cp		432134						
ANR	432215	Symbol	NULL		432134						
ANR	432216	Symbol	mem		432134						
ANR	432217	Symbol	sw		432134						
ANR	432218	Symbol	obj_in_control_region		432134						
ANR	432219	Symbol	clump_splay_walk_init		432134						
ANR	432220	Symbol	clump_splay_walk_fwd		432134						
ANR	432221	Symbol	cp -> cend		432134						
ANR	432222	Symbol	control		432134						
ANR	432223	Symbol	cp -> cbase		432134						
ANR	432224	Symbol	cp		432134						
ANR	432225	Symbol	& sw		432134						
ANR	432226	Function	debug_dump_allocator	2905:0:93208:93319							
ANR	432227	FunctionDef	debug_dump_allocator (const gs_ref_memory_t * mem)		432226	0					
ANR	432228	CompoundStatement		2907:0:93262:93319	432226	0					
ANR	432229	ExpressionStatement	"debug_dump_memory ( mem , & dump_control_no_contents )"	2908:4:93268:93317	432226	0	True				
ANR	432230	CallExpression	"debug_dump_memory ( mem , & dump_control_no_contents )"		432226	0					
ANR	432231	Callee	debug_dump_memory		432226	0					
ANR	432232	Identifier	debug_dump_memory		432226	0					
ANR	432233	ArgumentList	mem		432226	1					
ANR	432234	Argument	mem		432226	0					
ANR	432235	Identifier	mem		432226	0					
ANR	432236	Argument	& dump_control_no_contents		432226	1					
ANR	432237	UnaryOperationExpression	& dump_control_no_contents		432226	0					
ANR	432238	UnaryOperator	&		432226	0					
ANR	432239	Identifier	dump_control_no_contents		432226	1					
ANR	432240	ReturnType	void		432226	1					
ANR	432241	Identifier	debug_dump_allocator		432226	2					
ANR	432242	ParameterList	const gs_ref_memory_t * mem		432226	3					
ANR	432243	Parameter	const gs_ref_memory_t * mem	2906:21:93234:93259	432226	0	True				
ANR	432244	ParameterType	const gs_ref_memory_t *		432226	0					
ANR	432245	Identifier	mem		432226	1					
ANR	432246	CFGEntryNode	ENTRY		432226		True				
ANR	432247	CFGExitNode	EXIT		432226		True				
ANR	432248	Symbol	mem		432226						
ANR	432249	Symbol	& dump_control_no_contents		432226						
ANR	432250	Function	debug_find_pointers	2912:0:93379:94327							
ANR	432251	FunctionDef	"debug_find_pointers (const gs_ref_memory_t * mem , const void * target)"		432250	0					
ANR	432252	CompoundStatement		2914:0:93452:94327	432250	0					
ANR	432253	IdentifierDeclStatement	clump_splay_walker sw ;	2915:4:93458:93479	432250	0	True				
ANR	432254	IdentifierDecl	sw		432250	0					
ANR	432255	IdentifierDeclType	clump_splay_walker		432250	0					
ANR	432256	Identifier	sw		432250	1					
ANR	432257	IdentifierDeclStatement	dump_control_t control ;	2916:4:93485:93507	432250	1	True				
ANR	432258	IdentifierDecl	control		432250	0					
ANR	432259	IdentifierDeclType	dump_control_t		432250	0					
ANR	432260	Identifier	control		432250	1					
ANR	432261	IdentifierDeclStatement	const clump_t * cp ;	2917:4:93513:93530	432250	2	True				
ANR	432262	IdentifierDecl	* cp		432250	0					
ANR	432263	IdentifierDeclType	const clump_t *		432250	0					
ANR	432264	Identifier	cp		432250	1					
ANR	432265	ExpressionStatement	control . options = 0	2919:4:93537:93556	432250	3	True				
ANR	432266	AssignmentExpression	control . options = 0		432250	0		=			
ANR	432267	MemberAccess	control . options		432250	0					
ANR	432268	Identifier	control		432250	0					
ANR	432269	Identifier	options		432250	1					
ANR	432270	PrimaryExpression	0		432250	1					
ANR	432271	ForStatement	"for ( cp = clump_splay_walk_init ( & sw , mem ) ; cp ; cp = clump_splay_walk_fwd ( & sw ) )"		432250	4					
ANR	432272	ForInit	"cp = clump_splay_walk_init ( & sw , mem ) ;"	2920:9:93567:93603	432250	0	True				
ANR	432273	AssignmentExpression	"cp = clump_splay_walk_init ( & sw , mem )"		432250	0		=			
ANR	432274	Identifier	cp		432250	0					
ANR	432275	CallExpression	"clump_splay_walk_init ( & sw , mem )"		432250	1					
ANR	432276	Callee	clump_splay_walk_init		432250	0					
ANR	432277	Identifier	clump_splay_walk_init		432250	0					
ANR	432278	ArgumentList	& sw		432250	1					
ANR	432279	Argument	& sw		432250	0					
ANR	432280	UnaryOperationExpression	& sw		432250	0					
ANR	432281	UnaryOperator	&		432250	0					
ANR	432282	Identifier	sw		432250	1					
ANR	432283	Argument	mem		432250	1					
ANR	432284	Identifier	mem		432250	0					
ANR	432285	Condition	cp	2920:47:93605:93606	432250	1	True				
ANR	432286	Identifier	cp		432250	0					
ANR	432287	AssignmentExpression	cp = clump_splay_walk_fwd ( & sw )	2920:51:93609:93638	432250	2	True	=			
ANR	432288	Identifier	cp		432250	0					
ANR	432289	CallExpression	clump_splay_walk_fwd ( & sw )		432250	1					
ANR	432290	Callee	clump_splay_walk_fwd		432250	0					
ANR	432291	Identifier	clump_splay_walk_fwd		432250	0					
ANR	432292	ArgumentList	& sw		432250	1					
ANR	432293	Argument	& sw		432250	0					
ANR	432294	UnaryOperationExpression	& sw		432250	0					
ANR	432295	UnaryOperator	&		432250	0					
ANR	432296	Identifier	sw		432250	1					
ANR	432297	CompoundStatement		13:12:350:365	432250	3					
ANR	432298	ExpressionStatement	SCAN_CLUMP_OBJECTS ( cp )	2922:8:93655:93677	432250	0	True				
ANR	432299	CallExpression	SCAN_CLUMP_OBJECTS ( cp )		432250	0					
ANR	432300	Callee	SCAN_CLUMP_OBJECTS		432250	0					
ANR	432301	Identifier	SCAN_CLUMP_OBJECTS		432250	0					
ANR	432302	ArgumentList	cp		432250	1					
ANR	432303	Argument	cp		432250	0					
ANR	432304	Identifier	cp		432250	0					
ANR	432305	Statement	DO_ALL	2923:8:93687:93692	432250	1	True				
ANR	432306	ExpressionStatement	struct_proc_enum_ptrs ( ( * proc ) ) = pre -> o_type -> enum_ptrs	2924:12:93706:93761	432250	2	True				
ANR	432307	AssignmentExpression	struct_proc_enum_ptrs ( ( * proc ) ) = pre -> o_type -> enum_ptrs		432250	0		=			
ANR	432308	CallExpression	struct_proc_enum_ptrs ( ( * proc ) )		432250	0					
ANR	432309	Callee	struct_proc_enum_ptrs		432250	0					
ANR	432310	Identifier	struct_proc_enum_ptrs		432250	0					
ANR	432311	ArgumentList	* proc		432250	1					
ANR	432312	Argument	* proc		432250	0					
ANR	432313	UnaryOperationExpression	* proc		432250	0					
ANR	432314	UnaryOperator	*		432250	0					
ANR	432315	Identifier	proc		432250	1					
ANR	432316	PtrMemberAccess	pre -> o_type -> enum_ptrs		432250	1					
ANR	432317	PtrMemberAccess	pre -> o_type		432250	0					
ANR	432318	Identifier	pre		432250	0					
ANR	432319	Identifier	o_type		432250	1					
ANR	432320	Identifier	enum_ptrs		432250	1					
ANR	432321	IdentifierDeclStatement	uint index = 0 ;	2925:12:93775:93789	432250	3	True				
ANR	432322	IdentifierDecl	index = 0		432250	0					
ANR	432323	IdentifierDeclType	uint		432250	0					
ANR	432324	Identifier	index		432250	1					
ANR	432325	AssignmentExpression	index = 0		432250	2		=			
ANR	432326	Identifier	index		432250	0					
ANR	432327	PrimaryExpression	0		432250	1					
ANR	432328	IdentifierDeclStatement	enum_ptr_t eptr ;	2926:12:93803:93818	432250	4	True				
ANR	432329	IdentifierDecl	eptr		432250	0					
ANR	432330	IdentifierDeclType	enum_ptr_t		432250	0					
ANR	432331	Identifier	eptr		432250	1					
ANR	432332	IfStatement	if ( proc )		432250	5					
ANR	432333	Condition	proc	2928:16:93837:93840	432250	0	True				
ANR	432334	Identifier	proc		432250	0					
ANR	432335	ForStatement	"for ( ; ( * proc ) ( ( const gs_memory_t * ) mem , pre + 1 , size , index , & eptr , pre -> o_type , NULL ) ; ++ index )"		432250	1					
ANR	432336	Condition	"( * proc ) ( ( const gs_memory_t * ) mem , pre + 1 , size , index , & eptr , pre -> o_type , NULL )"	2929:23:93903:94014	432250	0	True				
ANR	432337	CallExpression	"( * proc ) ( ( const gs_memory_t * ) mem , pre + 1 , size , index , & eptr , pre -> o_type , NULL )"		432250	0					
ANR	432338	Callee	* proc		432250	0					
ANR	432339	UnaryOperationExpression	* proc		432250	0					
ANR	432340	UnaryOperator	*		432250	0					
ANR	432341	Identifier	proc		432250	1					
ANR	432342	ArgumentList	( const gs_memory_t * ) mem		432250	1					
ANR	432343	Argument	( const gs_memory_t * ) mem		432250	0					
ANR	432344	CastExpression	( const gs_memory_t * ) mem		432250	0					
ANR	432345	CastTarget	const gs_memory_t *		432250	0					
ANR	432346	Identifier	mem		432250	1					
ANR	432347	Argument	pre + 1		432250	1					
ANR	432348	AdditiveExpression	pre + 1		432250	0		+			
ANR	432349	Identifier	pre		432250	0					
ANR	432350	PrimaryExpression	1		432250	1					
ANR	432351	Argument	size		432250	2					
ANR	432352	Identifier	size		432250	0					
ANR	432353	Argument	index		432250	3					
ANR	432354	Identifier	index		432250	0					
ANR	432355	Argument	& eptr		432250	4					
ANR	432356	UnaryOperationExpression	& eptr		432250	0					
ANR	432357	UnaryOperator	&		432250	0					
ANR	432358	Identifier	eptr		432250	1					
ANR	432359	Argument	pre -> o_type		432250	5					
ANR	432360	PtrMemberAccess	pre -> o_type		432250	0					
ANR	432361	Identifier	pre		432250	0					
ANR	432362	Identifier	o_type		432250	1					
ANR	432363	Argument	NULL		432250	6					
ANR	432364	Identifier	NULL		432250	0					
ANR	432365	UnaryExpression	++ index	2931:21:94038:94044	432250	1	True				
ANR	432366	IncDec	++		432250	0					
ANR	432367	Identifier	index		432250	1					
ANR	432368	IfStatement	if ( eptr . ptr == target )		432250	2					
ANR	432369	Condition	eptr . ptr == target	2932:24:94071:94088	432250	0	True				
ANR	432370	EqualityExpression	eptr . ptr == target		432250	0		==			
ANR	432371	MemberAccess	eptr . ptr		432250	0					
ANR	432372	Identifier	eptr		432250	0					
ANR	432373	Identifier	ptr		432250	1					
ANR	432374	Identifier	target		432250	1					
ANR	432375	CompoundStatement		19:44:638:638	432250	1					
ANR	432376	ExpressionStatement	"dmprintf1 ( ( const gs_memory_t * ) mem , ""Index %d in"" , index )"	2933:24:94117:94174	432250	0	True				
ANR	432377	CallExpression	"dmprintf1 ( ( const gs_memory_t * ) mem , ""Index %d in"" , index )"		432250	0					
ANR	432378	Callee	dmprintf1		432250	0					
ANR	432379	Identifier	dmprintf1		432250	0					
ANR	432380	ArgumentList	( const gs_memory_t * ) mem		432250	1					
ANR	432381	Argument	( const gs_memory_t * ) mem		432250	0					
ANR	432382	CastExpression	( const gs_memory_t * ) mem		432250	0					
ANR	432383	CastTarget	const gs_memory_t *		432250	0					
ANR	432384	Identifier	mem		432250	1					
ANR	432385	Argument	"""Index %d in"""		432250	1					
ANR	432386	PrimaryExpression	"""Index %d in"""		432250	0					
ANR	432387	Argument	index		432250	2					
ANR	432388	Identifier	index		432250	0					
ANR	432389	ExpressionStatement	"debug_print_object ( ( const gs_memory_t * ) mem , pre + 1 , & control )"	2934:24:94200:94263	432250	1	True				
ANR	432390	CallExpression	"debug_print_object ( ( const gs_memory_t * ) mem , pre + 1 , & control )"		432250	0					
ANR	432391	Callee	debug_print_object		432250	0					
ANR	432392	Identifier	debug_print_object		432250	0					
ANR	432393	ArgumentList	( const gs_memory_t * ) mem		432250	1					
ANR	432394	Argument	( const gs_memory_t * ) mem		432250	0					
ANR	432395	CastExpression	( const gs_memory_t * ) mem		432250	0					
ANR	432396	CastTarget	const gs_memory_t *		432250	0					
ANR	432397	Identifier	mem		432250	1					
ANR	432398	Argument	pre + 1		432250	1					
ANR	432399	AdditiveExpression	pre + 1		432250	0		+			
ANR	432400	Identifier	pre		432250	0					
ANR	432401	PrimaryExpression	1		432250	1					
ANR	432402	Argument	& control		432250	2					
ANR	432403	UnaryOperationExpression	& control		432250	0					
ANR	432404	UnaryOperator	&		432250	0					
ANR	432405	Identifier	control		432250	1					
ANR	432406	Statement	END_OBJECTS_SCAN_NO_ABORT	2936:8:94295:94319	432250	6	True				
ANR	432407	ReturnType	void		432250	1					
ANR	432408	Identifier	debug_find_pointers		432250	2					
ANR	432409	ParameterList	"const gs_ref_memory_t * mem , const void * target"		432250	3					
ANR	432410	Parameter	const gs_ref_memory_t * mem	2913:20:93404:93429	432250	0	True				
ANR	432411	ParameterType	const gs_ref_memory_t *		432250	0					
ANR	432412	Identifier	mem		432250	1					
ANR	432413	Parameter	const void * target	2913:48:93432:93449	432250	1	True				
ANR	432414	ParameterType	const void *		432250	0					
ANR	432415	Identifier	target		432250	1					
ANR	432416	CFGEntryNode	ENTRY		432250		True				
ANR	432417	CFGExitNode	EXIT		432250		True				
ANR	432418	Symbol	eptr		432250						
ANR	432419	Symbol	* pre		432250						
ANR	432420	Symbol	& sw		432250						
ANR	432421	Symbol	control . options		432250						
ANR	432422	Symbol	mem		432250						
ANR	432423	Symbol	struct_proc_enum_ptrs		432250						
ANR	432424	Symbol	pre -> o_type		432250						
ANR	432425	Symbol	clump_splay_walk_init		432250						
ANR	432426	Symbol	pre		432250						
ANR	432427	Symbol	proc		432250						
ANR	432428	Symbol	NULL		432250						
ANR	432429	Symbol	sw		432250						
ANR	432430	Symbol	* pre -> o_type		432250						
ANR	432431	Symbol	& control		432250						
ANR	432432	Symbol	clump_splay_walk_fwd		432250						
ANR	432433	Symbol	index		432250						
ANR	432434	Symbol	& eptr		432250						
ANR	432435	Symbol	eptr . ptr		432250						
ANR	432436	Symbol	control		432250						
ANR	432437	Symbol	pre -> o_type -> enum_ptrs		432250						
ANR	432438	Symbol	cp		432250						
ANR	432439	Symbol	target		432250						
ANR	432440	Symbol	* proc		432250						
ANR	432441	Symbol	size		432250						
ANR	432442	Symbol	* * pre		432250						
ANR	432443	Function	ddct	2939:0:94329:94899							
ANR	432444	FunctionDef	"ddct (const gs_memory_t * mem , clump_t * cp , clump_t * parent , int depth)"		432443	0					
ANR	432445	CompoundStatement		2940:0:94411:94899	432443	0					
ANR	432446	IdentifierDeclStatement	int i ;	2941:4:94417:94422	432443	0	True				
ANR	432447	IdentifierDecl	i		432443	0					
ANR	432448	IdentifierDeclType	int		432443	0					
ANR	432449	Identifier	i		432443	1					
ANR	432450	IfStatement	if ( cp == NULL )		432443	1					
ANR	432451	Condition	cp == NULL	2943:8:94433:94442	432443	0	True				
ANR	432452	EqualityExpression	cp == NULL		432443	0		==			
ANR	432453	Identifier	cp		432443	0					
ANR	432454	Identifier	NULL		432443	1					
ANR	432455	ReturnStatement	return ;	2944:8:94453:94459	432443	1	True				
ANR	432456	ForStatement	for ( i = 0 ; i < depth ; i ++ )		432443	2					
ANR	432457	ForInit	i = 0 ;	2945:9:94470:94475	432443	0	True				
ANR	432458	AssignmentExpression	i = 0		432443	0		=			
ANR	432459	Identifier	i		432443	0					
ANR	432460	PrimaryExpression	0		432443	1					
ANR	432461	Condition	i < depth	2945:16:94477:94485	432443	1	True				
ANR	432462	RelationalExpression	i < depth		432443	0		<			
ANR	432463	Identifier	i		432443	0					
ANR	432464	Identifier	depth		432443	1					
ANR	432465	PostIncDecOperationExpression	i ++	2945:27:94488:94490	432443	2	True				
ANR	432466	Identifier	i		432443	0					
ANR	432467	IncDec	++		432443	1					
ANR	432468	ExpressionStatement	"dmlprintf ( mem , "" "" )"	2946:8:94501:94520	432443	3	True				
ANR	432469	CallExpression	"dmlprintf ( mem , "" "" )"		432443	0					
ANR	432470	Callee	dmlprintf		432443	0					
ANR	432471	Identifier	dmlprintf		432443	0					
ANR	432472	ArgumentList	mem		432443	1					
ANR	432473	Argument	mem		432443	0					
ANR	432474	Identifier	mem		432443	0					
ANR	432475	Argument	""" """		432443	1					
ANR	432476	PrimaryExpression	""" """		432443	0					
ANR	432477	ExpressionStatement	"dmlprintf7 ( mem , ""Clump %p:%p parent=%p left=%p:%p right=%p:%p\\n"" , cp , cp -> cbase , cp -> parent , cp -> left , cp -> left ? cp -> left -> cbase : NULL , cp -> right , cp -> right ? cp -> right -> cbase : NULL )"	2948:4:94527:94736	432443	3	True				
ANR	432478	CallExpression	"dmlprintf7 ( mem , ""Clump %p:%p parent=%p left=%p:%p right=%p:%p\\n"" , cp , cp -> cbase , cp -> parent , cp -> left , cp -> left ? cp -> left -> cbase : NULL , cp -> right , cp -> right ? cp -> right -> cbase : NULL )"		432443	0					
ANR	432479	Callee	dmlprintf7		432443	0					
ANR	432480	Identifier	dmlprintf7		432443	0					
ANR	432481	ArgumentList	mem		432443	1					
ANR	432482	Argument	mem		432443	0					
ANR	432483	Identifier	mem		432443	0					
ANR	432484	Argument	"""Clump %p:%p parent=%p left=%p:%p right=%p:%p\\n"""		432443	1					
ANR	432485	PrimaryExpression	"""Clump %p:%p parent=%p left=%p:%p right=%p:%p\\n"""		432443	0					
ANR	432486	Argument	cp		432443	2					
ANR	432487	Identifier	cp		432443	0					
ANR	432488	Argument	cp -> cbase		432443	3					
ANR	432489	PtrMemberAccess	cp -> cbase		432443	0					
ANR	432490	Identifier	cp		432443	0					
ANR	432491	Identifier	cbase		432443	1					
ANR	432492	Argument	cp -> parent		432443	4					
ANR	432493	PtrMemberAccess	cp -> parent		432443	0					
ANR	432494	Identifier	cp		432443	0					
ANR	432495	Identifier	parent		432443	1					
ANR	432496	Argument	cp -> left		432443	5					
ANR	432497	PtrMemberAccess	cp -> left		432443	0					
ANR	432498	Identifier	cp		432443	0					
ANR	432499	Identifier	left		432443	1					
ANR	432500	Argument	cp -> left ? cp -> left -> cbase : NULL		432443	6					
ANR	432501	ConditionalExpression	cp -> left ? cp -> left -> cbase : NULL		432443	0					
ANR	432502	Condition	cp -> left		432443	0					
ANR	432503	PtrMemberAccess	cp -> left		432443	0					
ANR	432504	Identifier	cp		432443	0					
ANR	432505	Identifier	left		432443	1					
ANR	432506	PtrMemberAccess	cp -> left -> cbase		432443	1					
ANR	432507	PtrMemberAccess	cp -> left		432443	0					
ANR	432508	Identifier	cp		432443	0					
ANR	432509	Identifier	left		432443	1					
ANR	432510	Identifier	cbase		432443	1					
ANR	432511	Identifier	NULL		432443	2					
ANR	432512	Argument	cp -> right		432443	7					
ANR	432513	PtrMemberAccess	cp -> right		432443	0					
ANR	432514	Identifier	cp		432443	0					
ANR	432515	Identifier	right		432443	1					
ANR	432516	Argument	cp -> right ? cp -> right -> cbase : NULL		432443	8					
ANR	432517	ConditionalExpression	cp -> right ? cp -> right -> cbase : NULL		432443	0					
ANR	432518	Condition	cp -> right		432443	0					
ANR	432519	PtrMemberAccess	cp -> right		432443	0					
ANR	432520	Identifier	cp		432443	0					
ANR	432521	Identifier	right		432443	1					
ANR	432522	PtrMemberAccess	cp -> right -> cbase		432443	1					
ANR	432523	PtrMemberAccess	cp -> right		432443	0					
ANR	432524	Identifier	cp		432443	0					
ANR	432525	Identifier	right		432443	1					
ANR	432526	Identifier	cbase		432443	1					
ANR	432527	Identifier	NULL		432443	2					
ANR	432528	IfStatement	if ( cp -> parent != parent )		432443	4					
ANR	432529	Condition	cp -> parent != parent	2952:8:94746:94765	432443	0	True				
ANR	432530	EqualityExpression	cp -> parent != parent		432443	0		!=			
ANR	432531	PtrMemberAccess	cp -> parent		432443	0					
ANR	432532	Identifier	cp		432443	0					
ANR	432533	Identifier	parent		432443	1					
ANR	432534	Identifier	parent		432443	1					
ANR	432535	ExpressionStatement	"dmlprintf ( mem , ""Parent pointer mismatch!\\n"" )"	2953:8:94776:94820	432443	1	True				
ANR	432536	CallExpression	"dmlprintf ( mem , ""Parent pointer mismatch!\\n"" )"		432443	0					
ANR	432537	Callee	dmlprintf		432443	0					
ANR	432538	Identifier	dmlprintf		432443	0					
ANR	432539	ArgumentList	mem		432443	1					
ANR	432540	Argument	mem		432443	0					
ANR	432541	Identifier	mem		432443	0					
ANR	432542	Argument	"""Parent pointer mismatch!\\n"""		432443	1					
ANR	432543	PrimaryExpression	"""Parent pointer mismatch!\\n"""		432443	0					
ANR	432544	ExpressionStatement	"ddct ( mem , cp -> left , cp , depth + 1 )"	2954:4:94826:94858	432443	5	True				
ANR	432545	CallExpression	"ddct ( mem , cp -> left , cp , depth + 1 )"		432443	0					
ANR	432546	Callee	ddct		432443	0					
ANR	432547	Identifier	ddct		432443	0					
ANR	432548	ArgumentList	mem		432443	1					
ANR	432549	Argument	mem		432443	0					
ANR	432550	Identifier	mem		432443	0					
ANR	432551	Argument	cp -> left		432443	1					
ANR	432552	PtrMemberAccess	cp -> left		432443	0					
ANR	432553	Identifier	cp		432443	0					
ANR	432554	Identifier	left		432443	1					
ANR	432555	Argument	cp		432443	2					
ANR	432556	Identifier	cp		432443	0					
ANR	432557	Argument	depth + 1		432443	3					
ANR	432558	AdditiveExpression	depth + 1		432443	0		+			
ANR	432559	Identifier	depth		432443	0					
ANR	432560	PrimaryExpression	1		432443	1					
ANR	432561	ExpressionStatement	"ddct ( mem , cp -> right , cp , depth + 1 )"	2955:4:94864:94897	432443	6	True				
ANR	432562	CallExpression	"ddct ( mem , cp -> right , cp , depth + 1 )"		432443	0					
ANR	432563	Callee	ddct		432443	0					
ANR	432564	Identifier	ddct		432443	0					
ANR	432565	ArgumentList	mem		432443	1					
ANR	432566	Argument	mem		432443	0					
ANR	432567	Identifier	mem		432443	0					
ANR	432568	Argument	cp -> right		432443	1					
ANR	432569	PtrMemberAccess	cp -> right		432443	0					
ANR	432570	Identifier	cp		432443	0					
ANR	432571	Identifier	right		432443	1					
ANR	432572	Argument	cp		432443	2					
ANR	432573	Identifier	cp		432443	0					
ANR	432574	Argument	depth + 1		432443	3					
ANR	432575	AdditiveExpression	depth + 1		432443	0		+			
ANR	432576	Identifier	depth		432443	0					
ANR	432577	PrimaryExpression	1		432443	1					
ANR	432578	ReturnType	static void		432443	1					
ANR	432579	Identifier	ddct		432443	2					
ANR	432580	ParameterList	"const gs_memory_t * mem , clump_t * cp , clump_t * parent , int depth"		432443	3					
ANR	432581	Parameter	const gs_memory_t * mem	2939:17:94346:94367	432443	0	True				
ANR	432582	ParameterType	const gs_memory_t *		432443	0					
ANR	432583	Identifier	mem		432443	1					
ANR	432584	Parameter	clump_t * cp	2939:41:94370:94380	432443	1	True				
ANR	432585	ParameterType	clump_t *		432443	0					
ANR	432586	Identifier	cp		432443	1					
ANR	432587	Parameter	clump_t * parent	2939:54:94383:94397	432443	2	True				
ANR	432588	ParameterType	clump_t *		432443	0					
ANR	432589	Identifier	parent		432443	1					
ANR	432590	Parameter	int depth	2939:71:94400:94408	432443	3	True				
ANR	432591	ParameterType	int		432443	0					
ANR	432592	Identifier	depth		432443	1					
ANR	432593	CFGEntryNode	ENTRY		432443		True				
ANR	432594	CFGExitNode	EXIT		432443		True				
ANR	432595	Symbol	parent		432443						
ANR	432596	Symbol	NULL		432443						
ANR	432597	Symbol	cp -> right -> cbase		432443						
ANR	432598	Symbol	i		432443						
ANR	432599	Symbol	cp -> right		432443						
ANR	432600	Symbol	cp -> cbase		432443						
ANR	432601	Symbol	* cp -> left		432443						
ANR	432602	Symbol	cp		432443						
ANR	432603	Symbol	* cp		432443						
ANR	432604	Symbol	depth		432443						
ANR	432605	Symbol	mem		432443						
ANR	432606	Symbol	cp -> left		432443						
ANR	432607	Symbol	cp -> parent		432443						
ANR	432608	Symbol	* cp -> right		432443						
ANR	432609	Symbol	cp -> left -> cbase		432443						
ANR	432610	Symbol	* * cp		432443						
ANR	432611	Function	debug_dump_clump_tree	2957:0:94901:95014							
ANR	432612	FunctionDef	debug_dump_clump_tree (const gs_ref_memory_t * mem)		432611	0					
ANR	432613	CompoundStatement		2959:0:94956:95014	432611	0					
ANR	432614	ExpressionStatement	"ddct ( ( const gs_memory_t * ) mem , mem -> root , NULL , 0 )"	2960:4:94962:95012	432611	0	True				
ANR	432615	CallExpression	"ddct ( ( const gs_memory_t * ) mem , mem -> root , NULL , 0 )"		432611	0					
ANR	432616	Callee	ddct		432611	0					
ANR	432617	Identifier	ddct		432611	0					
ANR	432618	ArgumentList	( const gs_memory_t * ) mem		432611	1					
ANR	432619	Argument	( const gs_memory_t * ) mem		432611	0					
ANR	432620	CastExpression	( const gs_memory_t * ) mem		432611	0					
ANR	432621	CastTarget	const gs_memory_t *		432611	0					
ANR	432622	Identifier	mem		432611	1					
ANR	432623	Argument	mem -> root		432611	1					
ANR	432624	PtrMemberAccess	mem -> root		432611	0					
ANR	432625	Identifier	mem		432611	0					
ANR	432626	Identifier	root		432611	1					
ANR	432627	Argument	NULL		432611	2					
ANR	432628	Identifier	NULL		432611	0					
ANR	432629	Argument	0		432611	3					
ANR	432630	PrimaryExpression	0		432611	0					
ANR	432631	ReturnType	void		432611	1					
ANR	432632	Identifier	debug_dump_clump_tree		432611	2					
ANR	432633	ParameterList	const gs_ref_memory_t * mem		432611	3					
ANR	432634	Parameter	const gs_ref_memory_t * mem	2958:22:94928:94953	432611	0	True				
ANR	432635	ParameterType	const gs_ref_memory_t *		432611	0					
ANR	432636	Identifier	mem		432611	1					
ANR	432637	CFGEntryNode	ENTRY		432611		True				
ANR	432638	CFGExitNode	EXIT		432611		True				
ANR	432639	Symbol	NULL		432611						
ANR	432640	Symbol	mem		432611						
ANR	432641	Symbol	mem -> root		432611						
ANR	432642	Symbol	* mem		432611						
