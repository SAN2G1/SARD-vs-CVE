command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3899877	File	data/converged/CVE-2018-16863_ghostpdl/gdevabuf.c								
ANR	3899878	Function	gs_make_mem_alpha_device	42:0:1519:2330							
ANR	3899879	FunctionDef	"gs_make_mem_alpha_device (gx_device_memory * adev , gs_memory_t * mem , gx_device * target , int alpha_bits)"		3899878	0					
ANR	3899880	CompoundStatement		45:0:1654:2330	3899878	0					
ANR	3899881	ExpressionStatement	"gs_make_mem_device ( adev , gdev_mem_device_for_bits ( alpha_bits ) , mem , 0 , target )"	46:4:1660:1761	3899878	0	True				
ANR	3899882	CallExpression	"gs_make_mem_device ( adev , gdev_mem_device_for_bits ( alpha_bits ) , mem , 0 , target )"		3899878	0					
ANR	3899883	Callee	gs_make_mem_device		3899878	0					
ANR	3899884	Identifier	gs_make_mem_device		3899878	0					
ANR	3899885	ArgumentList	adev		3899878	1					
ANR	3899886	Argument	adev		3899878	0					
ANR	3899887	Identifier	adev		3899878	0					
ANR	3899888	Argument	gdev_mem_device_for_bits ( alpha_bits )		3899878	1					
ANR	3899889	CallExpression	gdev_mem_device_for_bits ( alpha_bits )		3899878	0					
ANR	3899890	Callee	gdev_mem_device_for_bits		3899878	0					
ANR	3899891	Identifier	gdev_mem_device_for_bits		3899878	0					
ANR	3899892	ArgumentList	alpha_bits		3899878	1					
ANR	3899893	Argument	alpha_bits		3899878	0					
ANR	3899894	Identifier	alpha_bits		3899878	0					
ANR	3899895	Argument	mem		3899878	2					
ANR	3899896	Identifier	mem		3899878	0					
ANR	3899897	Argument	0		3899878	3					
ANR	3899898	PrimaryExpression	0		3899878	0					
ANR	3899899	Argument	target		3899878	4					
ANR	3899900	Identifier	target		3899878	0					
ANR	3899901	ExpressionStatement	adev -> color_info = gdev_mem_device_for_bits ( 1 ) -> color_info	49:4:1814:1872	3899878	1	True				
ANR	3899902	AssignmentExpression	adev -> color_info = gdev_mem_device_for_bits ( 1 ) -> color_info		3899878	0		=			
ANR	3899903	PtrMemberAccess	adev -> color_info		3899878	0					
ANR	3899904	Identifier	adev		3899878	0					
ANR	3899905	Identifier	color_info		3899878	1					
ANR	3899906	PtrMemberAccess	gdev_mem_device_for_bits ( 1 ) -> color_info		3899878	1					
ANR	3899907	CallExpression	gdev_mem_device_for_bits ( 1 )		3899878	0					
ANR	3899908	Callee	gdev_mem_device_for_bits		3899878	0					
ANR	3899909	Identifier	gdev_mem_device_for_bits		3899878	0					
ANR	3899910	ArgumentList	1		3899878	1					
ANR	3899911	Argument	1		3899878	0					
ANR	3899912	PrimaryExpression	1		3899878	0					
ANR	3899913	Identifier	color_info		3899878	1					
ANR	3899914	ExpressionStatement	adev -> color_info . depth = alpha_bits	51:4:1931:1966	3899878	2	True				
ANR	3899915	AssignmentExpression	adev -> color_info . depth = alpha_bits		3899878	0		=			
ANR	3899916	MemberAccess	adev -> color_info . depth		3899878	0					
ANR	3899917	PtrMemberAccess	adev -> color_info		3899878	0					
ANR	3899918	Identifier	adev		3899878	0					
ANR	3899919	Identifier	color_info		3899878	1					
ANR	3899920	Identifier	depth		3899878	1					
ANR	3899921	Identifier	alpha_bits		3899878	1					
ANR	3899922	ExpressionStatement	adev -> graphics_type_tag = target -> graphics_type_tag	52:4:1972:2023	3899878	3	True				
ANR	3899923	AssignmentExpression	adev -> graphics_type_tag = target -> graphics_type_tag		3899878	0		=			
ANR	3899924	PtrMemberAccess	adev -> graphics_type_tag		3899878	0					
ANR	3899925	Identifier	adev		3899878	0					
ANR	3899926	Identifier	graphics_type_tag		3899878	1					
ANR	3899927	PtrMemberAccess	target -> graphics_type_tag		3899878	1					
ANR	3899928	Identifier	target		3899878	0					
ANR	3899929	Identifier	graphics_type_tag		3899878	1					
ANR	3899930	ExpressionStatement	"set_dev_proc ( adev , map_rgb_color , mem_alpha_map_rgb_color )"	54:4:2072:2130	3899878	4	True				
ANR	3899931	CallExpression	"set_dev_proc ( adev , map_rgb_color , mem_alpha_map_rgb_color )"		3899878	0					
ANR	3899932	Callee	set_dev_proc		3899878	0					
ANR	3899933	Identifier	set_dev_proc		3899878	0					
ANR	3899934	ArgumentList	adev		3899878	1					
ANR	3899935	Argument	adev		3899878	0					
ANR	3899936	Identifier	adev		3899878	0					
ANR	3899937	Argument	map_rgb_color		3899878	1					
ANR	3899938	Identifier	map_rgb_color		3899878	0					
ANR	3899939	Argument	mem_alpha_map_rgb_color		3899878	2					
ANR	3899940	Identifier	mem_alpha_map_rgb_color		3899878	0					
ANR	3899941	ExpressionStatement	"set_dev_proc ( adev , map_color_rgb , mem_alpha_map_color_rgb )"	55:4:2136:2194	3899878	5	True				
ANR	3899942	CallExpression	"set_dev_proc ( adev , map_color_rgb , mem_alpha_map_color_rgb )"		3899878	0					
ANR	3899943	Callee	set_dev_proc		3899878	0					
ANR	3899944	Identifier	set_dev_proc		3899878	0					
ANR	3899945	ArgumentList	adev		3899878	1					
ANR	3899946	Argument	adev		3899878	0					
ANR	3899947	Identifier	adev		3899878	0					
ANR	3899948	Argument	map_color_rgb		3899878	1					
ANR	3899949	Identifier	map_color_rgb		3899878	0					
ANR	3899950	Argument	mem_alpha_map_color_rgb		3899878	2					
ANR	3899951	Identifier	mem_alpha_map_color_rgb		3899878	0					
ANR	3899952	ExpressionStatement	"set_dev_proc ( adev , map_rgb_alpha_color , mem_alpha_map_rgb_alpha_color )"	56:4:2200:2270	3899878	6	True				
ANR	3899953	CallExpression	"set_dev_proc ( adev , map_rgb_alpha_color , mem_alpha_map_rgb_alpha_color )"		3899878	0					
ANR	3899954	Callee	set_dev_proc		3899878	0					
ANR	3899955	Identifier	set_dev_proc		3899878	0					
ANR	3899956	ArgumentList	adev		3899878	1					
ANR	3899957	Argument	adev		3899878	0					
ANR	3899958	Identifier	adev		3899878	0					
ANR	3899959	Argument	map_rgb_alpha_color		3899878	1					
ANR	3899960	Identifier	map_rgb_alpha_color		3899878	0					
ANR	3899961	Argument	mem_alpha_map_rgb_alpha_color		3899878	2					
ANR	3899962	Identifier	mem_alpha_map_rgb_alpha_color		3899878	0					
ANR	3899963	ExpressionStatement	"set_dev_proc ( adev , copy_alpha , mem_alpha_copy_alpha )"	57:4:2276:2328	3899878	7	True				
ANR	3899964	CallExpression	"set_dev_proc ( adev , copy_alpha , mem_alpha_copy_alpha )"		3899878	0					
ANR	3899965	Callee	set_dev_proc		3899878	0					
ANR	3899966	Identifier	set_dev_proc		3899878	0					
ANR	3899967	ArgumentList	adev		3899878	1					
ANR	3899968	Argument	adev		3899878	0					
ANR	3899969	Identifier	adev		3899878	0					
ANR	3899970	Argument	copy_alpha		3899878	1					
ANR	3899971	Identifier	copy_alpha		3899878	0					
ANR	3899972	Argument	mem_alpha_copy_alpha		3899878	2					
ANR	3899973	Identifier	mem_alpha_copy_alpha		3899878	0					
ANR	3899974	ReturnType	void		3899878	1					
ANR	3899975	Identifier	gs_make_mem_alpha_device		3899878	2					
ANR	3899976	ParameterList	"gx_device_memory * adev , gs_memory_t * mem , gx_device * target , int alpha_bits"		3899878	3					
ANR	3899977	Parameter	gx_device_memory * adev	43:25:1549:1571	3899878	0	True				
ANR	3899978	ParameterType	gx_device_memory *		3899878	0					
ANR	3899979	Identifier	adev		3899878	1					
ANR	3899980	Parameter	gs_memory_t * mem	43:50:1574:1590	3899878	1	True				
ANR	3899981	ParameterType	gs_memory_t *		3899878	0					
ANR	3899982	Identifier	mem		3899878	1					
ANR	3899983	Parameter	gx_device * target	44:25:1618:1635	3899878	2	True				
ANR	3899984	ParameterType	gx_device *		3899878	0					
ANR	3899985	Identifier	target		3899878	1					
ANR	3899986	Parameter	int alpha_bits	44:45:1638:1651	3899878	3	True				
ANR	3899987	ParameterType	int		3899878	0					
ANR	3899988	Identifier	alpha_bits		3899878	1					
ANR	3899989	CFGEntryNode	ENTRY		3899878		True				
ANR	3899990	CFGExitNode	EXIT		3899878		True				
ANR	3899991	Symbol	gdev_mem_device_for_bits ( 1 ) -> color_info		3899878						
ANR	3899992	Symbol	target -> graphics_type_tag		3899878						
ANR	3899993	Symbol	mem_alpha_copy_alpha		3899878						
ANR	3899994	Symbol	adev -> color_info		3899878						
ANR	3899995	Symbol	alpha_bits		3899878						
ANR	3899996	Symbol	gdev_mem_device_for_bits		3899878						
ANR	3899997	Symbol	mem_alpha_map_color_rgb		3899878						
ANR	3899998	Symbol	map_color_rgb		3899878						
ANR	3899999	Symbol	target		3899878						
ANR	3900000	Symbol	adev -> graphics_type_tag		3899878						
ANR	3900001	Symbol	map_rgb_color		3899878						
ANR	3900002	Symbol	* target		3899878						
ANR	3900003	Symbol	mem_alpha_map_rgb_color		3899878						
ANR	3900004	Symbol	mem		3899878						
ANR	3900005	Symbol	map_rgb_alpha_color		3899878						
ANR	3900006	Symbol	adev -> color_info . depth		3899878						
ANR	3900007	Symbol	* adev		3899878						
ANR	3900008	Symbol	* gdev_mem_device_for_bits		3899878						
ANR	3900009	Symbol	adev		3899878						
ANR	3900010	Symbol	copy_alpha		3899878						
ANR	3900011	Symbol	mem_alpha_map_rgb_alpha_color		3899878						
ANR	3900012	Function	mem_alpha_map_rgb_color	61:0:2366:2710							
ANR	3900013	FunctionDef	"mem_alpha_map_rgb_color (gx_device * dev , const gx_color_value cv [ ])"		3900012	0					
ANR	3900014	CompoundStatement		63:0:2456:2710	3900012	0					
ANR	3900015	Statement	gx_device_memory	64:4:2462:2477	3900012	0	True				
ANR	3900016	Statement	*	64:21:2479:2479	3900012	1	True				
ANR	3900017	Statement	const	64:23:2481:2485	3900012	2	True				
ANR	3900018	ExpressionStatement	mdev = ( gx_device_memory * ) dev	64:29:2487:2517	3900012	3	True				
ANR	3900019	AssignmentExpression	mdev = ( gx_device_memory * ) dev		3900012	0		=			
ANR	3900020	Identifier	mdev		3900012	0					
ANR	3900021	CastExpression	( gx_device_memory * ) dev		3900012	1					
ANR	3900022	CastTarget	gx_device_memory *		3900012	0					
ANR	3900023	Identifier	dev		3900012	1					
ANR	3900024	IdentifierDeclStatement	"gx_color_index color = gx_forward_map_rgb_color ( dev , cv ) ;"	65:4:2523:2579	3900012	4	True				
ANR	3900025	IdentifierDecl	"color = gx_forward_map_rgb_color ( dev , cv )"		3900012	0					
ANR	3900026	IdentifierDeclType	gx_color_index		3900012	0					
ANR	3900027	Identifier	color		3900012	1					
ANR	3900028	AssignmentExpression	"color = gx_forward_map_rgb_color ( dev , cv )"		3900012	2		=			
ANR	3900029	Identifier	color		3900012	0					
ANR	3900030	CallExpression	"gx_forward_map_rgb_color ( dev , cv )"		3900012	1					
ANR	3900031	Callee	gx_forward_map_rgb_color		3900012	0					
ANR	3900032	Identifier	gx_forward_map_rgb_color		3900012	0					
ANR	3900033	ArgumentList	dev		3900012	1					
ANR	3900034	Argument	dev		3900012	0					
ANR	3900035	Identifier	dev		3900012	0					
ANR	3900036	Argument	cv		3900012	1					
ANR	3900037	Identifier	cv		3900012	0					
ANR	3900038	ReturnStatement	return ( color == 0 || color == gx_no_color_index ? color : ( ( ( gx_color_index ) 1 << mdev -> log2_alpha_bits ) - 1 ) ) ;	67:4:2586:2708	3900012	5	True				
ANR	3900039	ConditionalExpression	color == 0 || color == gx_no_color_index ? color : ( ( ( gx_color_index ) 1 << mdev -> log2_alpha_bits ) - 1 )		3900012	0					
ANR	3900040	Condition	color == 0 || color == gx_no_color_index		3900012	0					
ANR	3900041	OrExpression	color == 0 || color == gx_no_color_index		3900012	0		||			
ANR	3900042	EqualityExpression	color == 0		3900012	0		==			
ANR	3900043	Identifier	color		3900012	0					
ANR	3900044	PrimaryExpression	0		3900012	1					
ANR	3900045	EqualityExpression	color == gx_no_color_index		3900012	1		==			
ANR	3900046	Identifier	color		3900012	0					
ANR	3900047	Identifier	gx_no_color_index		3900012	1					
ANR	3900048	Identifier	color		3900012	1					
ANR	3900049	AdditiveExpression	( ( gx_color_index ) 1 << mdev -> log2_alpha_bits ) - 1		3900012	2		-			
ANR	3900050	ShiftExpression	( gx_color_index ) 1 << mdev -> log2_alpha_bits		3900012	0		<<			
ANR	3900051	CastExpression	( gx_color_index ) 1		3900012	0					
ANR	3900052	CastTarget	gx_color_index		3900012	0					
ANR	3900053	PrimaryExpression	1		3900012	1					
ANR	3900054	PtrMemberAccess	mdev -> log2_alpha_bits		3900012	1					
ANR	3900055	Identifier	mdev		3900012	0					
ANR	3900056	Identifier	log2_alpha_bits		3900012	1					
ANR	3900057	PrimaryExpression	1		3900012	1					
ANR	3900058	ReturnType	static gx_color_index		3900012	1					
ANR	3900059	Identifier	mem_alpha_map_rgb_color		3900012	2					
ANR	3900060	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		3900012	3					
ANR	3900061	Parameter	gx_device * dev	62:24:2412:2426	3900012	0	True				
ANR	3900062	ParameterType	gx_device *		3900012	0					
ANR	3900063	Identifier	dev		3900012	1					
ANR	3900064	Parameter	const gx_color_value cv [ ]	62:41:2429:2453	3900012	1	True				
ANR	3900065	ParameterType	const gx_color_value [ ]		3900012	0					
ANR	3900066	Identifier	cv		3900012	1					
ANR	3900067	CFGEntryNode	ENTRY		3900012		True				
ANR	3900068	CFGExitNode	EXIT		3900012		True				
ANR	3900069	Symbol	gx_forward_map_rgb_color		3900012						
ANR	3900070	Symbol	cv		3900012						
ANR	3900071	Symbol	gx_no_color_index		3900012						
ANR	3900072	Symbol	dev		3900012						
ANR	3900073	Symbol	color		3900012						
ANR	3900074	Symbol	mdev		3900012						
ANR	3900075	Symbol	* mdev		3900012						
ANR	3900076	Symbol	mdev -> log2_alpha_bits		3900012						
ANR	3900077	Function	mem_alpha_map_color_rgb	70:0:2712:3001							
ANR	3900078	FunctionDef	"mem_alpha_map_color_rgb (gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ])"		3900077	0					
ANR	3900079	CompoundStatement		73:0:2834:3001	3900077	0					
ANR	3900080	ReturnStatement	"return gx_forward_map_color_rgb ( dev , ( color == 0 ? color : ( gx_color_index ) 1 ) , prgb ) ;"	74:4:2840:2999	3900077	0	True				
ANR	3900081	CallExpression	"gx_forward_map_color_rgb ( dev , ( color == 0 ? color : ( gx_color_index ) 1 ) , prgb )"		3900077	0					
ANR	3900082	Callee	gx_forward_map_color_rgb		3900077	0					
ANR	3900083	Identifier	gx_forward_map_color_rgb		3900077	0					
ANR	3900084	ArgumentList	dev		3900077	1					
ANR	3900085	Argument	dev		3900077	0					
ANR	3900086	Identifier	dev		3900077	0					
ANR	3900087	Argument	color == 0 ? color : ( gx_color_index ) 1		3900077	1					
ANR	3900088	ConditionalExpression	color == 0 ? color : ( gx_color_index ) 1		3900077	0					
ANR	3900089	Condition	color == 0		3900077	0					
ANR	3900090	EqualityExpression	color == 0		3900077	0		==			
ANR	3900091	Identifier	color		3900077	0					
ANR	3900092	PrimaryExpression	0		3900077	1					
ANR	3900093	Identifier	color		3900077	1					
ANR	3900094	CastExpression	( gx_color_index ) 1		3900077	2					
ANR	3900095	CastTarget	gx_color_index		3900077	0					
ANR	3900096	PrimaryExpression	1		3900077	1					
ANR	3900097	Argument	prgb		3900077	2					
ANR	3900098	Identifier	prgb		3900077	0					
ANR	3900099	ReturnType	static int		3900077	1					
ANR	3900100	Identifier	mem_alpha_map_color_rgb		3900077	2					
ANR	3900101	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ]"		3900077	3					
ANR	3900102	Parameter	gx_device * dev	71:24:2747:2761	3900077	0	True				
ANR	3900103	ParameterType	gx_device *		3900077	0					
ANR	3900104	Identifier	dev		3900077	1					
ANR	3900105	Parameter	gx_color_index color	71:41:2764:2783	3900077	1	True				
ANR	3900106	ParameterType	gx_color_index		3900077	0					
ANR	3900107	Identifier	color		3900077	1					
ANR	3900108	Parameter	gx_color_value prgb [ 3 ]	72:24:2810:2831	3900077	2	True				
ANR	3900109	ParameterType	gx_color_value [ 3 ]		3900077	0					
ANR	3900110	Identifier	prgb		3900077	1					
ANR	3900111	CFGEntryNode	ENTRY		3900077		True				
ANR	3900112	CFGExitNode	EXIT		3900077		True				
ANR	3900113	Symbol	dev		3900077						
ANR	3900114	Symbol	color		3900077						
ANR	3900115	Symbol	gx_forward_map_color_rgb		3900077						
ANR	3900116	Symbol	prgb		3900077						
ANR	3900117	Function	mem_alpha_map_rgb_alpha_color	79:0:3003:3559							
ANR	3900118	FunctionDef	"mem_alpha_map_rgb_alpha_color (gx_device * dev , gx_color_value r , gx_color_value g , gx_color_value b , gx_color_value alpha)"		3900117	0					
ANR	3900119	CompoundStatement		82:0:3167:3559	3900117	0					
ANR	3900120	Statement	gx_device_memory	83:4:3173:3188	3900117	0	True				
ANR	3900121	Statement	*	83:21:3190:3190	3900117	1	True				
ANR	3900122	Statement	const	83:23:3192:3196	3900117	2	True				
ANR	3900123	ExpressionStatement	mdev = ( gx_device_memory * ) dev	83:29:3198:3228	3900117	3	True				
ANR	3900124	AssignmentExpression	mdev = ( gx_device_memory * ) dev		3900117	0		=			
ANR	3900125	Identifier	mdev		3900117	0					
ANR	3900126	CastExpression	( gx_device_memory * ) dev		3900117	1					
ANR	3900127	CastTarget	gx_device_memory *		3900117	0					
ANR	3900128	Identifier	dev		3900117	1					
ANR	3900129	IdentifierDeclStatement	gx_color_index color ;	84:4:3234:3254	3900117	4	True				
ANR	3900130	IdentifierDecl	color		3900117	0					
ANR	3900131	IdentifierDeclType	gx_color_index		3900117	0					
ANR	3900132	Identifier	color		3900117	1					
ANR	3900133	IdentifierDeclStatement	gx_color_value cv [ 3 ] ;	85:4:3260:3280	3900117	5	True				
ANR	3900134	IdentifierDecl	cv [ 3 ]		3900117	0					
ANR	3900135	IdentifierDeclType	gx_color_value [ 3 ]		3900117	0					
ANR	3900136	Identifier	cv		3900117	1					
ANR	3900137	PrimaryExpression	3		3900117	2					
ANR	3900138	ExpressionStatement	cv [ 0 ] = r	87:4:3287:3296	3900117	6	True				
ANR	3900139	AssignmentExpression	cv [ 0 ] = r		3900117	0		=			
ANR	3900140	ArrayIndexing	cv [ 0 ]		3900117	0					
ANR	3900141	Identifier	cv		3900117	0					
ANR	3900142	PrimaryExpression	0		3900117	1					
ANR	3900143	Identifier	r		3900117	1					
ANR	3900144	ExpressionStatement	cv [ 1 ] = g	87:15:3298:3307	3900117	7	True				
ANR	3900145	AssignmentExpression	cv [ 1 ] = g		3900117	0		=			
ANR	3900146	ArrayIndexing	cv [ 1 ]		3900117	0					
ANR	3900147	Identifier	cv		3900117	0					
ANR	3900148	PrimaryExpression	1		3900117	1					
ANR	3900149	Identifier	g		3900117	1					
ANR	3900150	ExpressionStatement	cv [ 2 ] = b	87:26:3309:3318	3900117	8	True				
ANR	3900151	AssignmentExpression	cv [ 2 ] = b		3900117	0		=			
ANR	3900152	ArrayIndexing	cv [ 2 ]		3900117	0					
ANR	3900153	Identifier	cv		3900117	0					
ANR	3900154	PrimaryExpression	2		3900117	1					
ANR	3900155	Identifier	b		3900117	1					
ANR	3900156	ExpressionStatement	"color = gx_forward_map_rgb_color ( dev , cv )"	88:4:3324:3365	3900117	9	True				
ANR	3900157	AssignmentExpression	"color = gx_forward_map_rgb_color ( dev , cv )"		3900117	0		=			
ANR	3900158	Identifier	color		3900117	0					
ANR	3900159	CallExpression	"gx_forward_map_rgb_color ( dev , cv )"		3900117	1					
ANR	3900160	Callee	gx_forward_map_rgb_color		3900117	0					
ANR	3900161	Identifier	gx_forward_map_rgb_color		3900117	0					
ANR	3900162	ArgumentList	dev		3900117	1					
ANR	3900163	Argument	dev		3900117	0					
ANR	3900164	Identifier	dev		3900117	0					
ANR	3900165	Argument	cv		3900117	1					
ANR	3900166	Identifier	cv		3900117	0					
ANR	3900167	ReturnStatement	return ( color == 0 || color == gx_no_color_index ? color : ( gx_color_index ) ( alpha >> ( gx_color_value_bits - mdev -> log2_alpha_bits ) ) ) ;	90:4:3372:3557	3900117	10	True				
ANR	3900168	ConditionalExpression	color == 0 || color == gx_no_color_index ? color : ( gx_color_index ) ( alpha >> ( gx_color_value_bits - mdev -> log2_alpha_bits ) )		3900117	0					
ANR	3900169	Condition	color == 0 || color == gx_no_color_index		3900117	0					
ANR	3900170	OrExpression	color == 0 || color == gx_no_color_index		3900117	0		||			
ANR	3900171	EqualityExpression	color == 0		3900117	0		==			
ANR	3900172	Identifier	color		3900117	0					
ANR	3900173	PrimaryExpression	0		3900117	1					
ANR	3900174	EqualityExpression	color == gx_no_color_index		3900117	1		==			
ANR	3900175	Identifier	color		3900117	0					
ANR	3900176	Identifier	gx_no_color_index		3900117	1					
ANR	3900177	Identifier	color		3900117	1					
ANR	3900178	CastExpression	( gx_color_index ) ( alpha >> ( gx_color_value_bits - mdev -> log2_alpha_bits ) )		3900117	2					
ANR	3900179	CastTarget	gx_color_index		3900117	0					
ANR	3900180	ShiftExpression	alpha >> ( gx_color_value_bits - mdev -> log2_alpha_bits )		3900117	1		>>			
ANR	3900181	Identifier	alpha		3900117	0					
ANR	3900182	AdditiveExpression	gx_color_value_bits - mdev -> log2_alpha_bits		3900117	1		-			
ANR	3900183	Identifier	gx_color_value_bits		3900117	0					
ANR	3900184	PtrMemberAccess	mdev -> log2_alpha_bits		3900117	1					
ANR	3900185	Identifier	mdev		3900117	0					
ANR	3900186	Identifier	log2_alpha_bits		3900117	1					
ANR	3900187	ReturnType	static gx_color_index		3900117	1					
ANR	3900188	Identifier	mem_alpha_map_rgb_alpha_color		3900117	2					
ANR	3900189	ParameterList	"gx_device * dev , gx_color_value r , gx_color_value g , gx_color_value b , gx_color_value alpha"		3900117	3					
ANR	3900190	Parameter	gx_device * dev	80:30:3055:3069	3900117	0	True				
ANR	3900191	ParameterType	gx_device *		3900117	0					
ANR	3900192	Identifier	dev		3900117	1					
ANR	3900193	Parameter	gx_color_value r	80:47:3072:3087	3900117	1	True				
ANR	3900194	ParameterType	gx_color_value		3900117	0					
ANR	3900195	Identifier	r		3900117	1					
ANR	3900196	Parameter	gx_color_value g	81:19:3109:3124	3900117	2	True				
ANR	3900197	ParameterType	gx_color_value		3900117	0					
ANR	3900198	Identifier	g		3900117	1					
ANR	3900199	Parameter	gx_color_value b	81:37:3127:3142	3900117	3	True				
ANR	3900200	ParameterType	gx_color_value		3900117	0					
ANR	3900201	Identifier	b		3900117	1					
ANR	3900202	Parameter	gx_color_value alpha	81:55:3145:3164	3900117	4	True				
ANR	3900203	ParameterType	gx_color_value		3900117	0					
ANR	3900204	Identifier	alpha		3900117	1					
ANR	3900205	CFGEntryNode	ENTRY		3900117		True				
ANR	3900206	CFGExitNode	EXIT		3900117		True				
ANR	3900207	Symbol	b		3900117						
ANR	3900208	Symbol	gx_forward_map_rgb_color		3900117						
ANR	3900209	Symbol	color		3900117						
ANR	3900210	Symbol	g		3900117						
ANR	3900211	Symbol	mdev -> log2_alpha_bits		3900117						
ANR	3900212	Symbol	r		3900117						
ANR	3900213	Symbol	cv		3900117						
ANR	3900214	Symbol	gx_no_color_index		3900117						
ANR	3900215	Symbol	dev		3900117						
ANR	3900216	Symbol	alpha		3900117						
ANR	3900217	Symbol	* cv		3900117						
ANR	3900218	Symbol	mdev		3900117						
ANR	3900219	Symbol	gx_color_value_bits		3900117						
ANR	3900220	Symbol	* mdev		3900117						
ANR	3900221	Function	mem_alpha_copy_alpha	95:0:3592:5358							
ANR	3900222	FunctionDef	"mem_alpha_copy_alpha (gx_device * dev , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int width , int height , gx_color_index color , int depth)"		3900221	0					
ANR	3900223	CompoundStatement		99:0:3803:5358	3900221	0					
ANR	3900224	IfStatement	if ( depth == 8 )		3900221	0					
ANR	3900225	Condition	depth == 8	100:8:3843:3852	3900221	0	True				
ANR	3900226	EqualityExpression	depth == 8		3900221	0		==			
ANR	3900227	Identifier	depth		3900221	0					
ANR	3900228	PrimaryExpression	8		3900221	1					
ANR	3900229	CompoundStatement		2:20:51:51	3900221	1					
ANR	3900230	ExpressionStatement	return_error ( gs_error_unknownerror )	120:8:5025:5060	3900221	0	True				
ANR	3900231	CallExpression	return_error ( gs_error_unknownerror )		3900221	0					
ANR	3900232	Callee	return_error		3900221	0					
ANR	3900233	Identifier	return_error		3900221	0					
ANR	3900234	ArgumentList	gs_error_unknownerror		3900221	1					
ANR	3900235	Argument	gs_error_unknownerror		3900221	0					
ANR	3900236	Identifier	gs_error_unknownerror		3900221	0					
ANR	3900237	ReturnStatement	"return ( color == 0 ? ( * dev_proc ( dev , fill_rectangle ) ) ( dev , x , y , width , height , color ) : ( * dev_proc ( dev , copy_color ) ) ( dev , data , data_x , raster , id , x , y , width , height ) ) ;"	122:4:5072:5356	3900221	1	True				
ANR	3900238	ConditionalExpression	"color == 0 ? ( * dev_proc ( dev , fill_rectangle ) ) ( dev , x , y , width , height , color ) : ( * dev_proc ( dev , copy_color ) ) ( dev , data , data_x , raster , id , x , y , width , height )"		3900221	0					
ANR	3900239	Condition	color == 0		3900221	0					
ANR	3900240	EqualityExpression	color == 0		3900221	0		==			
ANR	3900241	Identifier	color		3900221	0					
ANR	3900242	PrimaryExpression	0		3900221	1					
ANR	3900243	CallExpression	"( * dev_proc ( dev , fill_rectangle ) ) ( dev , x , y , width , height , color )"		3900221	1					
ANR	3900244	Callee	"* dev_proc ( dev , fill_rectangle )"		3900221	0					
ANR	3900245	UnaryOperationExpression	"* dev_proc ( dev , fill_rectangle )"		3900221	0					
ANR	3900246	UnaryOperator	*		3900221	0					
ANR	3900247	CallExpression	"dev_proc ( dev , fill_rectangle )"		3900221	1					
ANR	3900248	Callee	dev_proc		3900221	0					
ANR	3900249	Identifier	dev_proc		3900221	0					
ANR	3900250	ArgumentList	dev		3900221	1					
ANR	3900251	Argument	dev		3900221	0					
ANR	3900252	Identifier	dev		3900221	0					
ANR	3900253	Argument	fill_rectangle		3900221	1					
ANR	3900254	Identifier	fill_rectangle		3900221	0					
ANR	3900255	ArgumentList	dev		3900221	1					
ANR	3900256	Argument	dev		3900221	0					
ANR	3900257	Identifier	dev		3900221	0					
ANR	3900258	Argument	x		3900221	1					
ANR	3900259	Identifier	x		3900221	0					
ANR	3900260	Argument	y		3900221	2					
ANR	3900261	Identifier	y		3900221	0					
ANR	3900262	Argument	width		3900221	3					
ANR	3900263	Identifier	width		3900221	0					
ANR	3900264	Argument	height		3900221	4					
ANR	3900265	Identifier	height		3900221	0					
ANR	3900266	Argument	color		3900221	5					
ANR	3900267	Identifier	color		3900221	0					
ANR	3900268	CallExpression	"( * dev_proc ( dev , copy_color ) ) ( dev , data , data_x , raster , id , x , y , width , height )"		3900221	2					
ANR	3900269	Callee	"* dev_proc ( dev , copy_color )"		3900221	0					
ANR	3900270	UnaryOperationExpression	"* dev_proc ( dev , copy_color )"		3900221	0					
ANR	3900271	UnaryOperator	*		3900221	0					
ANR	3900272	CallExpression	"dev_proc ( dev , copy_color )"		3900221	1					
ANR	3900273	Callee	dev_proc		3900221	0					
ANR	3900274	Identifier	dev_proc		3900221	0					
ANR	3900275	ArgumentList	dev		3900221	1					
ANR	3900276	Argument	dev		3900221	0					
ANR	3900277	Identifier	dev		3900221	0					
ANR	3900278	Argument	copy_color		3900221	1					
ANR	3900279	Identifier	copy_color		3900221	0					
ANR	3900280	ArgumentList	dev		3900221	1					
ANR	3900281	Argument	dev		3900221	0					
ANR	3900282	Identifier	dev		3900221	0					
ANR	3900283	Argument	data		3900221	1					
ANR	3900284	Identifier	data		3900221	0					
ANR	3900285	Argument	data_x		3900221	2					
ANR	3900286	Identifier	data_x		3900221	0					
ANR	3900287	Argument	raster		3900221	3					
ANR	3900288	Identifier	raster		3900221	0					
ANR	3900289	Argument	id		3900221	4					
ANR	3900290	Identifier	id		3900221	0					
ANR	3900291	Argument	x		3900221	5					
ANR	3900292	Identifier	x		3900221	0					
ANR	3900293	Argument	y		3900221	6					
ANR	3900294	Identifier	y		3900221	0					
ANR	3900295	Argument	width		3900221	7					
ANR	3900296	Identifier	width		3900221	0					
ANR	3900297	Argument	height		3900221	8					
ANR	3900298	Identifier	height		3900221	0					
ANR	3900299	ReturnType	static int		3900221	1					
ANR	3900300	Identifier	mem_alpha_copy_alpha		3900221	2					
ANR	3900301	ParameterList	"gx_device * dev , const byte * data , int data_x , int raster , gx_bitmap_id id , int x , int y , int width , int height , gx_color_index color , int depth"		3900221	3					
ANR	3900302	Parameter	gx_device * dev	96:21:3624:3638	3900221	0	True				
ANR	3900303	ParameterType	gx_device *		3900221	0					
ANR	3900304	Identifier	dev		3900221	1					
ANR	3900305	Parameter	const byte * data	96:38:3641:3657	3900221	1	True				
ANR	3900306	ParameterType	const byte *		3900221	0					
ANR	3900307	Identifier	data		3900221	1					
ANR	3900308	Parameter	int data_x	96:57:3660:3669	3900221	2	True				
ANR	3900309	ParameterType	int		3900221	0					
ANR	3900310	Identifier	data_x		3900221	1					
ANR	3900311	Parameter	int raster	97:11:3683:3692	3900221	3	True				
ANR	3900312	ParameterType	int		3900221	0					
ANR	3900313	Identifier	raster		3900221	1					
ANR	3900314	Parameter	gx_bitmap_id id	97:23:3695:3709	3900221	4	True				
ANR	3900315	ParameterType	gx_bitmap_id		3900221	0					
ANR	3900316	Identifier	id		3900221	1					
ANR	3900317	Parameter	int x	97:40:3712:3716	3900221	5	True				
ANR	3900318	ParameterType	int		3900221	0					
ANR	3900319	Identifier	x		3900221	1					
ANR	3900320	Parameter	int y	97:47:3719:3723	3900221	6	True				
ANR	3900321	ParameterType	int		3900221	0					
ANR	3900322	Identifier	y		3900221	1					
ANR	3900323	Parameter	int width	97:54:3726:3734	3900221	7	True				
ANR	3900324	ParameterType	int		3900221	0					
ANR	3900325	Identifier	width		3900221	1					
ANR	3900326	Parameter	int height	97:65:3737:3746	3900221	8	True				
ANR	3900327	ParameterType	int		3900221	0					
ANR	3900328	Identifier	height		3900221	1					
ANR	3900329	Parameter	gx_color_index color	98:21:3770:3789	3900221	9	True				
ANR	3900330	ParameterType	gx_color_index		3900221	0					
ANR	3900331	Identifier	color		3900221	1					
ANR	3900332	Parameter	int depth	98:43:3792:3800	3900221	10	True				
ANR	3900333	ParameterType	int		3900221	0					
ANR	3900334	Identifier	depth		3900221	1					
ANR	3900335	CFGEntryNode	ENTRY		3900221		True				
ANR	3900336	CFGExitNode	EXIT		3900221		True				
ANR	3900337	Symbol	"* dev_proc ( dev , copy_color )"		3900221						
ANR	3900338	Symbol	data		3900221						
ANR	3900339	Symbol	color		3900221						
ANR	3900340	Symbol	* dev_proc		3900221						
ANR	3900341	Symbol	raster		3900221						
ANR	3900342	Symbol	"* dev_proc ( dev , fill_rectangle )"		3900221						
ANR	3900343	Symbol	fill_rectangle		3900221						
ANR	3900344	Symbol	data_x		3900221						
ANR	3900345	Symbol	depth		3900221						
ANR	3900346	Symbol	dev		3900221						
ANR	3900347	Symbol	copy_color		3900221						
ANR	3900348	Symbol	dev_proc		3900221						
ANR	3900349	Symbol	x		3900221						
ANR	3900350	Symbol	width		3900221						
ANR	3900351	Symbol	y		3900221						
ANR	3900352	Symbol	id		3900221						
ANR	3900353	Symbol	height		3900221						
ANR	3900354	Symbol	gs_error_unknownerror		3900221						
ANR	3900355	DeclStmt									
ANR	3900356	Decl							const gx_device_memory	const gx_device_memory	mem_alpha_buffer_device
ANR	3900357	Function	gs_make_mem_abuf_device	182:0:7996:8968							
ANR	3900358	FunctionDef	"gs_make_mem_abuf_device (gx_device_memory * adev , gs_memory_t * mem , gx_device * target , const gs_log2_scale_point * pscale , int alpha_bits , int mapped_x , bool devn)"		3900357	0					
ANR	3900359	CompoundStatement		186:0:8211:8968	3900357	0					
ANR	3900360	ExpressionStatement	"gs_make_mem_device ( adev , & mem_alpha_buffer_device , mem , 0 , target )"	187:4:8217:8283	3900357	0	True				
ANR	3900361	CallExpression	"gs_make_mem_device ( adev , & mem_alpha_buffer_device , mem , 0 , target )"		3900357	0					
ANR	3900362	Callee	gs_make_mem_device		3900357	0					
ANR	3900363	Identifier	gs_make_mem_device		3900357	0					
ANR	3900364	ArgumentList	adev		3900357	1					
ANR	3900365	Argument	adev		3900357	0					
ANR	3900366	Identifier	adev		3900357	0					
ANR	3900367	Argument	& mem_alpha_buffer_device		3900357	1					
ANR	3900368	UnaryOperationExpression	& mem_alpha_buffer_device		3900357	0					
ANR	3900369	UnaryOperator	&		3900357	0					
ANR	3900370	Identifier	mem_alpha_buffer_device		3900357	1					
ANR	3900371	Argument	mem		3900357	2					
ANR	3900372	Identifier	mem		3900357	0					
ANR	3900373	Argument	0		3900357	3					
ANR	3900374	PrimaryExpression	0		3900357	0					
ANR	3900375	Argument	target		3900357	4					
ANR	3900376	Identifier	target		3900357	0					
ANR	3900377	ExpressionStatement	adev -> max_fill_band = 1 << pscale -> y	188:4:8289:8325	3900357	1	True				
ANR	3900378	AssignmentExpression	adev -> max_fill_band = 1 << pscale -> y		3900357	0		=			
ANR	3900379	PtrMemberAccess	adev -> max_fill_band		3900357	0					
ANR	3900380	Identifier	adev		3900357	0					
ANR	3900381	Identifier	max_fill_band		3900357	1					
ANR	3900382	ShiftExpression	1 << pscale -> y		3900357	1		<<			
ANR	3900383	PrimaryExpression	1		3900357	0					
ANR	3900384	PtrMemberAccess	pscale -> y		3900357	1					
ANR	3900385	Identifier	pscale		3900357	0					
ANR	3900386	Identifier	y		3900357	1					
ANR	3900387	ExpressionStatement	adev -> log2_scale = * pscale	189:4:8331:8357	3900357	2	True				
ANR	3900388	AssignmentExpression	adev -> log2_scale = * pscale		3900357	0		=			
ANR	3900389	PtrMemberAccess	adev -> log2_scale		3900357	0					
ANR	3900390	Identifier	adev		3900357	0					
ANR	3900391	Identifier	log2_scale		3900357	1					
ANR	3900392	UnaryOperationExpression	* pscale		3900357	1					
ANR	3900393	UnaryOperator	*		3900357	0					
ANR	3900394	Identifier	pscale		3900357	1					
ANR	3900395	ExpressionStatement	adev -> log2_alpha_bits = alpha_bits >> 1	190:4:8363:8402	3900357	3	True				
ANR	3900396	AssignmentExpression	adev -> log2_alpha_bits = alpha_bits >> 1		3900357	0		=			
ANR	3900397	PtrMemberAccess	adev -> log2_alpha_bits		3900357	0					
ANR	3900398	Identifier	adev		3900357	0					
ANR	3900399	Identifier	log2_alpha_bits		3900357	1					
ANR	3900400	ShiftExpression	alpha_bits >> 1		3900357	1		>>			
ANR	3900401	Identifier	alpha_bits		3900357	0					
ANR	3900402	PrimaryExpression	1		3900357	1					
ANR	3900403	ExpressionStatement	adev -> mapped_x = mapped_x	191:4:8430:8455	3900357	4	True				
ANR	3900404	AssignmentExpression	adev -> mapped_x = mapped_x		3900357	0		=			
ANR	3900405	PtrMemberAccess	adev -> mapped_x		3900357	0					
ANR	3900406	Identifier	adev		3900357	0					
ANR	3900407	Identifier	mapped_x		3900357	1					
ANR	3900408	Identifier	mapped_x		3900357	1					
ANR	3900409	ExpressionStatement	"set_dev_proc ( adev , close_device , mem_abuf_close )"	192:4:8461:8509	3900357	5	True				
ANR	3900410	CallExpression	"set_dev_proc ( adev , close_device , mem_abuf_close )"		3900357	0					
ANR	3900411	Callee	set_dev_proc		3900357	0					
ANR	3900412	Identifier	set_dev_proc		3900357	0					
ANR	3900413	ArgumentList	adev		3900357	1					
ANR	3900414	Argument	adev		3900357	0					
ANR	3900415	Identifier	adev		3900357	0					
ANR	3900416	Argument	close_device		3900357	1					
ANR	3900417	Identifier	close_device		3900357	0					
ANR	3900418	Argument	mem_abuf_close		3900357	2					
ANR	3900419	Identifier	mem_abuf_close		3900357	0					
ANR	3900420	ExpressionStatement	"set_dev_proc ( adev , get_clipping_box , mem_abuf_get_clipping_box )"	193:4:8515:8578	3900357	6	True				
ANR	3900421	CallExpression	"set_dev_proc ( adev , get_clipping_box , mem_abuf_get_clipping_box )"		3900357	0					
ANR	3900422	Callee	set_dev_proc		3900357	0					
ANR	3900423	Identifier	set_dev_proc		3900357	0					
ANR	3900424	ArgumentList	adev		3900357	1					
ANR	3900425	Argument	adev		3900357	0					
ANR	3900426	Identifier	adev		3900357	0					
ANR	3900427	Argument	get_clipping_box		3900357	1					
ANR	3900428	Identifier	get_clipping_box		3900357	0					
ANR	3900429	Argument	mem_abuf_get_clipping_box		3900357	2					
ANR	3900430	Identifier	mem_abuf_get_clipping_box		3900357	0					
ANR	3900431	IfStatement	if ( ! devn )		3900357	7					
ANR	3900432	Condition	! devn	194:8:8588:8592	3900357	0	True				
ANR	3900433	UnaryOperationExpression	! devn		3900357	0					
ANR	3900434	UnaryOperator	!		3900357	0					
ANR	3900435	Identifier	devn		3900357	1					
ANR	3900436	ExpressionStatement	adev -> save_hl_color = NULL	195:8:8604:8630	3900357	1	True				
ANR	3900437	AssignmentExpression	adev -> save_hl_color = NULL		3900357	0		=			
ANR	3900438	PtrMemberAccess	adev -> save_hl_color		3900357	0					
ANR	3900439	Identifier	adev		3900357	0					
ANR	3900440	Identifier	save_hl_color		3900357	1					
ANR	3900441	Identifier	NULL		3900357	1					
ANR	3900442	ExpressionStatement	adev -> color_info . anti_alias . text_bits = adev -> color_info . anti_alias . graphics_bits = alpha_bits	198:4:8801:8909	3900357	8	True				
ANR	3900443	AssignmentExpression	adev -> color_info . anti_alias . text_bits = adev -> color_info . anti_alias . graphics_bits = alpha_bits		3900357	0		=			
ANR	3900444	MemberAccess	adev -> color_info . anti_alias . text_bits		3900357	0					
ANR	3900445	MemberAccess	adev -> color_info . anti_alias		3900357	0					
ANR	3900446	PtrMemberAccess	adev -> color_info		3900357	0					
ANR	3900447	Identifier	adev		3900357	0					
ANR	3900448	Identifier	color_info		3900357	1					
ANR	3900449	Identifier	anti_alias		3900357	1					
ANR	3900450	Identifier	text_bits		3900357	1					
ANR	3900451	AssignmentExpression	adev -> color_info . anti_alias . graphics_bits = alpha_bits		3900357	1		=			
ANR	3900452	MemberAccess	adev -> color_info . anti_alias . graphics_bits		3900357	0					
ANR	3900453	MemberAccess	adev -> color_info . anti_alias		3900357	0					
ANR	3900454	PtrMemberAccess	adev -> color_info		3900357	0					
ANR	3900455	Identifier	adev		3900357	0					
ANR	3900456	Identifier	color_info		3900357	1					
ANR	3900457	Identifier	anti_alias		3900357	1					
ANR	3900458	Identifier	graphics_bits		3900357	1					
ANR	3900459	Identifier	alpha_bits		3900357	1					
ANR	3900460	ExpressionStatement	adev -> graphics_type_tag = target -> graphics_type_tag	201:4:8915:8966	3900357	9	True				
ANR	3900461	AssignmentExpression	adev -> graphics_type_tag = target -> graphics_type_tag		3900357	0		=			
ANR	3900462	PtrMemberAccess	adev -> graphics_type_tag		3900357	0					
ANR	3900463	Identifier	adev		3900357	0					
ANR	3900464	Identifier	graphics_type_tag		3900357	1					
ANR	3900465	PtrMemberAccess	target -> graphics_type_tag		3900357	1					
ANR	3900466	Identifier	target		3900357	0					
ANR	3900467	Identifier	graphics_type_tag		3900357	1					
ANR	3900468	ReturnType	void		3900357	1					
ANR	3900469	Identifier	gs_make_mem_abuf_device		3900357	2					
ANR	3900470	ParameterList	"gx_device_memory * adev , gs_memory_t * mem , gx_device * target , const gs_log2_scale_point * pscale , int alpha_bits , int mapped_x , bool devn"		3900357	3					
ANR	3900471	Parameter	gx_device_memory * adev	183:24:8025:8047	3900357	0	True				
ANR	3900472	ParameterType	gx_device_memory *		3900357	0					
ANR	3900473	Identifier	adev		3900357	1					
ANR	3900474	Parameter	gs_memory_t * mem	183:49:8050:8066	3900357	1	True				
ANR	3900475	ParameterType	gs_memory_t *		3900357	0					
ANR	3900476	Identifier	mem		3900357	1					
ANR	3900477	Parameter	gx_device * target	184:21:8090:8107	3900357	2	True				
ANR	3900478	ParameterType	gx_device *		3900357	0					
ANR	3900479	Identifier	target		3900357	1					
ANR	3900480	Parameter	const gs_log2_scale_point * pscale	184:41:8110:8143	3900357	3	True				
ANR	3900481	ParameterType	const gs_log2_scale_point *		3900357	0					
ANR	3900482	Identifier	pscale		3900357	1					
ANR	3900483	Parameter	int alpha_bits	185:24:8170:8183	3900357	4	True				
ANR	3900484	ParameterType	int		3900357	0					
ANR	3900485	Identifier	alpha_bits		3900357	1					
ANR	3900486	Parameter	int mapped_x	185:40:8186:8197	3900357	5	True				
ANR	3900487	ParameterType	int		3900357	0					
ANR	3900488	Identifier	mapped_x		3900357	1					
ANR	3900489	Parameter	bool devn	185:54:8200:8208	3900357	6	True				
ANR	3900490	ParameterType	bool		3900357	0					
ANR	3900491	Identifier	devn		3900357	1					
ANR	3900492	CFGEntryNode	ENTRY		3900357		True				
ANR	3900493	CFGExitNode	EXIT		3900357		True				
ANR	3900494	Symbol	target -> graphics_type_tag		3900357						
ANR	3900495	Symbol	adev -> color_info		3900357						
ANR	3900496	Symbol	* pscale		3900357						
ANR	3900497	Symbol	get_clipping_box		3900357						
ANR	3900498	Symbol	close_device		3900357						
ANR	3900499	Symbol	adev -> max_fill_band		3900357						
ANR	3900500	Symbol	adev -> color_info . anti_alias . text_bits		3900357						
ANR	3900501	Symbol	adev -> color_info . anti_alias		3900357						
ANR	3900502	Symbol	mem		3900357						
ANR	3900503	Symbol	* adev		3900357						
ANR	3900504	Symbol	devn		3900357						
ANR	3900505	Symbol	& mem_alpha_buffer_device		3900357						
ANR	3900506	Symbol	mem_abuf_close		3900357						
ANR	3900507	Symbol	adev -> mapped_x		3900357						
ANR	3900508	Symbol	mem_abuf_get_clipping_box		3900357						
ANR	3900509	Symbol	NULL		3900357						
ANR	3900510	Symbol	alpha_bits		3900357						
ANR	3900511	Symbol	adev -> color_info . anti_alias . graphics_bits		3900357						
ANR	3900512	Symbol	target		3900357						
ANR	3900513	Symbol	adev -> log2_alpha_bits		3900357						
ANR	3900514	Symbol	adev -> graphics_type_tag		3900357						
ANR	3900515	Symbol	* target		3900357						
ANR	3900516	Symbol	adev -> save_hl_color		3900357						
ANR	3900517	Symbol	pscale -> y		3900357						
ANR	3900518	Symbol	adev		3900357						
ANR	3900519	Symbol	mapped_x		3900357						
ANR	3900520	Symbol	adev -> log2_scale		3900357						
ANR	3900521	Symbol	pscale		3900357						
ANR	3900522	Function	gs_device_is_abuf	205:0:9029:9301							
ANR	3900523	FunctionDef	gs_device_is_abuf (const gx_device * dev)		3900522	0					
ANR	3900524	CompoundStatement		207:0:9075:9301	3900522	0					
ANR	3900525	ReturnStatement	return dev -> dname == mem_alpha_buffer_device . dname ;	210:4:9249:9299	3900522	0	True				
ANR	3900526	EqualityExpression	dev -> dname == mem_alpha_buffer_device . dname		3900522	0		==			
ANR	3900527	PtrMemberAccess	dev -> dname		3900522	0					
ANR	3900528	Identifier	dev		3900522	0					
ANR	3900529	Identifier	dname		3900522	1					
ANR	3900530	MemberAccess	mem_alpha_buffer_device . dname		3900522	1					
ANR	3900531	Identifier	mem_alpha_buffer_device		3900522	0					
ANR	3900532	Identifier	dname		3900522	1					
ANR	3900533	ReturnType	bool		3900522	1					
ANR	3900534	Identifier	gs_device_is_abuf		3900522	2					
ANR	3900535	ParameterList	const gx_device * dev		3900522	3					
ANR	3900536	Parameter	const gx_device * dev	206:18:9052:9072	3900522	0	True				
ANR	3900537	ParameterType	const gx_device *		3900522	0					
ANR	3900538	Identifier	dev		3900522	1					
ANR	3900539	CFGEntryNode	ENTRY		3900522		True				
ANR	3900540	CFGExitNode	EXIT		3900522		True				
ANR	3900541	Symbol	mem_alpha_buffer_device		3900522						
ANR	3900542	Symbol	* dev		3900522						
ANR	3900543	Symbol	mem_alpha_buffer_device . dname		3900522						
ANR	3900544	Symbol	dev		3900522						
ANR	3900545	Symbol	dev -> dname		3900522						
ANR	3900546	Function	abuf_flush_block	216:0:9491:12072							
ANR	3900547	FunctionDef	"abuf_flush_block (gx_device_memory * adev , int y)"		3900546	0					
ANR	3900548	CompoundStatement		218:0:9551:12072	3900546	0					
ANR	3900549	IdentifierDeclStatement	gx_device * target = adev -> target ;	219:4:9557:9589	3900546	0	True				
ANR	3900550	IdentifierDecl	* target = adev -> target		3900546	0					
ANR	3900551	IdentifierDeclType	gx_device *		3900546	0					
ANR	3900552	Identifier	target		3900546	1					
ANR	3900553	AssignmentExpression	* target = adev -> target		3900546	2		=			
ANR	3900554	Identifier	target		3900546	0					
ANR	3900555	PtrMemberAccess	adev -> target		3900546	1					
ANR	3900556	Identifier	adev		3900546	0					
ANR	3900557	Identifier	target		3900546	1					
ANR	3900558	IdentifierDeclStatement	int block_height = 1 << adev -> log2_scale . y ;	220:4:9595:9637	3900546	1	True				
ANR	3900559	IdentifierDecl	block_height = 1 << adev -> log2_scale . y		3900546	0					
ANR	3900560	IdentifierDeclType	int		3900546	0					
ANR	3900561	Identifier	block_height		3900546	1					
ANR	3900562	AssignmentExpression	block_height = 1 << adev -> log2_scale . y		3900546	2		=			
ANR	3900563	Identifier	block_height		3900546	0					
ANR	3900564	ShiftExpression	1 << adev -> log2_scale . y		3900546	1		<<			
ANR	3900565	PrimaryExpression	1		3900546	0					
ANR	3900566	MemberAccess	adev -> log2_scale . y		3900546	1					
ANR	3900567	PtrMemberAccess	adev -> log2_scale		3900546	0					
ANR	3900568	Identifier	adev		3900546	0					
ANR	3900569	Identifier	log2_scale		3900546	1					
ANR	3900570	Identifier	y		3900546	1					
ANR	3900571	IdentifierDeclStatement	int alpha_bits = 1 << adev -> log2_alpha_bits ;	221:4:9643:9686	3900546	2	True				
ANR	3900572	IdentifierDecl	alpha_bits = 1 << adev -> log2_alpha_bits		3900546	0					
ANR	3900573	IdentifierDeclType	int		3900546	0					
ANR	3900574	Identifier	alpha_bits		3900546	1					
ANR	3900575	AssignmentExpression	alpha_bits = 1 << adev -> log2_alpha_bits		3900546	2		=			
ANR	3900576	Identifier	alpha_bits		3900546	0					
ANR	3900577	ShiftExpression	1 << adev -> log2_alpha_bits		3900546	1		<<			
ANR	3900578	PrimaryExpression	1		3900546	0					
ANR	3900579	PtrMemberAccess	adev -> log2_alpha_bits		3900546	1					
ANR	3900580	Identifier	adev		3900546	0					
ANR	3900581	Identifier	log2_alpha_bits		3900546	1					
ANR	3900582	IdentifierDeclStatement	int ddepth = ( adev -> width >> adev -> log2_scale . x ) << adev -> log2_alpha_bits ;	222:4:9692:9769	3900546	3	True				
ANR	3900583	IdentifierDecl	ddepth = ( adev -> width >> adev -> log2_scale . x ) << adev -> log2_alpha_bits		3900546	0					
ANR	3900584	IdentifierDeclType	int		3900546	0					
ANR	3900585	Identifier	ddepth		3900546	1					
ANR	3900586	AssignmentExpression	ddepth = ( adev -> width >> adev -> log2_scale . x ) << adev -> log2_alpha_bits		3900546	2		=			
ANR	3900587	Identifier	ddepth		3900546	0					
ANR	3900588	ShiftExpression	( adev -> width >> adev -> log2_scale . x ) << adev -> log2_alpha_bits		3900546	1		<<			
ANR	3900589	ShiftExpression	adev -> width >> adev -> log2_scale . x		3900546	0		>>			
ANR	3900590	PtrMemberAccess	adev -> width		3900546	0					
ANR	3900591	Identifier	adev		3900546	0					
ANR	3900592	Identifier	width		3900546	1					
ANR	3900593	MemberAccess	adev -> log2_scale . x		3900546	1					
ANR	3900594	PtrMemberAccess	adev -> log2_scale		3900546	0					
ANR	3900595	Identifier	adev		3900546	0					
ANR	3900596	Identifier	log2_scale		3900546	1					
ANR	3900597	Identifier	x		3900546	1					
ANR	3900598	PtrMemberAccess	adev -> log2_alpha_bits		3900546	1					
ANR	3900599	Identifier	adev		3900546	0					
ANR	3900600	Identifier	log2_alpha_bits		3900546	1					
ANR	3900601	IdentifierDeclStatement	uint draster = bitmap_raster ( ddepth ) ;	224:4:9775:9811	3900546	4	True				
ANR	3900602	IdentifierDecl	draster = bitmap_raster ( ddepth )		3900546	0					
ANR	3900603	IdentifierDeclType	uint		3900546	0					
ANR	3900604	Identifier	draster		3900546	1					
ANR	3900605	AssignmentExpression	draster = bitmap_raster ( ddepth )		3900546	2		=			
ANR	3900606	Identifier	draster		3900546	0					
ANR	3900607	CallExpression	bitmap_raster ( ddepth )		3900546	1					
ANR	3900608	Callee	bitmap_raster		3900546	0					
ANR	3900609	Identifier	bitmap_raster		3900546	0					
ANR	3900610	ArgumentList	ddepth		3900546	1					
ANR	3900611	Argument	ddepth		3900546	0					
ANR	3900612	Identifier	ddepth		3900546	0					
ANR	3900613	IdentifierDeclStatement	int buffer_y = y - adev -> mapped_y + adev -> mapped_start ;	225:4:9817:9871	3900546	5	True				
ANR	3900614	IdentifierDecl	buffer_y = y - adev -> mapped_y + adev -> mapped_start		3900546	0					
ANR	3900615	IdentifierDeclType	int		3900546	0					
ANR	3900616	Identifier	buffer_y		3900546	1					
ANR	3900617	AssignmentExpression	buffer_y = y - adev -> mapped_y + adev -> mapped_start		3900546	2		=			
ANR	3900618	Identifier	buffer_y		3900546	0					
ANR	3900619	AdditiveExpression	y - adev -> mapped_y + adev -> mapped_start		3900546	1		-			
ANR	3900620	Identifier	y		3900546	0					
ANR	3900621	AdditiveExpression	adev -> mapped_y + adev -> mapped_start		3900546	1		+			
ANR	3900622	PtrMemberAccess	adev -> mapped_y		3900546	0					
ANR	3900623	Identifier	adev		3900546	0					
ANR	3900624	Identifier	mapped_y		3900546	1					
ANR	3900625	PtrMemberAccess	adev -> mapped_start		3900546	1					
ANR	3900626	Identifier	adev		3900546	0					
ANR	3900627	Identifier	mapped_start		3900546	1					
ANR	3900628	IdentifierDeclStatement	byte * bits ;	226:4:9877:9887	3900546	6	True				
ANR	3900629	IdentifierDecl	* bits		3900546	0					
ANR	3900630	IdentifierDeclType	byte *		3900546	0					
ANR	3900631	Identifier	bits		3900546	1					
ANR	3900632	IfStatement	if ( buffer_y >= adev -> height )		3900546	7					
ANR	3900633	Condition	buffer_y >= adev -> height	228:8:9898:9921	3900546	0	True				
ANR	3900634	RelationalExpression	buffer_y >= adev -> height		3900546	0		>=			
ANR	3900635	Identifier	buffer_y		3900546	0					
ANR	3900636	PtrMemberAccess	adev -> height		3900546	1					
ANR	3900637	Identifier	adev		3900546	0					
ANR	3900638	Identifier	height		3900546	1					
ANR	3900639	ExpressionStatement	buffer_y -= adev -> height	229:8:9932:9956	3900546	1	True				
ANR	3900640	AssignmentExpression	buffer_y -= adev -> height		3900546	0		-=			
ANR	3900641	Identifier	buffer_y		3900546	0					
ANR	3900642	PtrMemberAccess	adev -> height		3900546	1					
ANR	3900643	Identifier	adev		3900546	0					
ANR	3900644	Identifier	height		3900546	1					
ANR	3900645	ExpressionStatement	"bits = scan_line_base ( adev , buffer_y )"	230:4:9962:9999	3900546	8	True				
ANR	3900646	AssignmentExpression	"bits = scan_line_base ( adev , buffer_y )"		3900546	0		=			
ANR	3900647	Identifier	bits		3900546	0					
ANR	3900648	CallExpression	"scan_line_base ( adev , buffer_y )"		3900546	1					
ANR	3900649	Callee	scan_line_base		3900546	0					
ANR	3900650	Identifier	scan_line_base		3900546	0					
ANR	3900651	ArgumentList	adev		3900546	1					
ANR	3900652	Argument	adev		3900546	0					
ANR	3900653	Identifier	adev		3900546	0					
ANR	3900654	Argument	buffer_y		3900546	1					
ANR	3900655	Identifier	buffer_y		3900546	0					
ANR	3900656	CompoundStatement		25:8:909:918	3900546	9					
ANR	3900657	IdentifierDeclStatement	int alpha_mask = ~7 ;	240:8:10406:10425	3900546	0	True				
ANR	3900658	IdentifierDecl	alpha_mask = ~7		3900546	0					
ANR	3900659	IdentifierDeclType	int		3900546	0					
ANR	3900660	Identifier	alpha_mask		3900546	1					
ANR	3900661	AssignmentExpression	alpha_mask = ~7		3900546	2		=			
ANR	3900662	Identifier	~7		3900546	0					
ANR	3900663	Identifier	~7		3900546	1					
ANR	3900664	IdentifierDeclStatement	gs_int_rect bbox ;	241:8:10435:10451	3900546	1	True				
ANR	3900665	IdentifierDecl	bbox		3900546	0					
ANR	3900666	IdentifierDeclType	gs_int_rect		3900546	0					
ANR	3900667	Identifier	bbox		3900546	1					
ANR	3900668	IdentifierDeclStatement	int width ;	242:8:10461:10470	3900546	2	True				
ANR	3900669	IdentifierDecl	width		3900546	0					
ANR	3900670	IdentifierDeclType	int		3900546	0					
ANR	3900671	Identifier	width		3900546	1					
ANR	3900672	ExpressionStatement	"bits_bounding_box ( bits , block_height , adev -> raster , & bbox )"	244:8:10481:10539	3900546	3	True				
ANR	3900673	CallExpression	"bits_bounding_box ( bits , block_height , adev -> raster , & bbox )"		3900546	0					
ANR	3900674	Callee	bits_bounding_box		3900546	0					
ANR	3900675	Identifier	bits_bounding_box		3900546	0					
ANR	3900676	ArgumentList	bits		3900546	1					
ANR	3900677	Argument	bits		3900546	0					
ANR	3900678	Identifier	bits		3900546	0					
ANR	3900679	Argument	block_height		3900546	1					
ANR	3900680	Identifier	block_height		3900546	0					
ANR	3900681	Argument	adev -> raster		3900546	2					
ANR	3900682	PtrMemberAccess	adev -> raster		3900546	0					
ANR	3900683	Identifier	adev		3900546	0					
ANR	3900684	Identifier	raster		3900546	1					
ANR	3900685	Argument	& bbox		3900546	3					
ANR	3900686	UnaryOperationExpression	& bbox		3900546	0					
ANR	3900687	UnaryOperator	&		3900546	0					
ANR	3900688	Identifier	bbox		3900546	1					
ANR	3900689	ExpressionStatement	bbox . p . x &= alpha_mask	245:8:10549:10571	3900546	4	True				
ANR	3900690	AssignmentExpression	bbox . p . x &= alpha_mask		3900546	0		&=			
ANR	3900691	MemberAccess	bbox . p . x		3900546	0					
ANR	3900692	MemberAccess	bbox . p		3900546	0					
ANR	3900693	Identifier	bbox		3900546	0					
ANR	3900694	Identifier	p		3900546	1					
ANR	3900695	Identifier	x		3900546	1					
ANR	3900696	Identifier	alpha_mask		3900546	1					
ANR	3900697	ExpressionStatement	bbox . q . x = ( bbox . q . x + ~alpha_mask ) & alpha_mask	246:8:10581:10629	3900546	5	True				
ANR	3900698	AssignmentExpression	bbox . q . x = ( bbox . q . x + ~alpha_mask ) & alpha_mask		3900546	0		=			
ANR	3900699	MemberAccess	bbox . q . x		3900546	0					
ANR	3900700	MemberAccess	bbox . q		3900546	0					
ANR	3900701	Identifier	bbox		3900546	0					
ANR	3900702	Identifier	q		3900546	1					
ANR	3900703	Identifier	x		3900546	1					
ANR	3900704	BitAndExpression	( bbox . q . x + ~alpha_mask ) & alpha_mask		3900546	1		&			
ANR	3900705	AdditiveExpression	bbox . q . x + ~alpha_mask		3900546	0		+			
ANR	3900706	MemberAccess	bbox . q . x		3900546	0					
ANR	3900707	MemberAccess	bbox . q		3900546	0					
ANR	3900708	Identifier	bbox		3900546	0					
ANR	3900709	Identifier	q		3900546	1					
ANR	3900710	Identifier	x		3900546	1					
ANR	3900711	Identifier	~alpha_mask		3900546	1					
ANR	3900712	Identifier	alpha_mask		3900546	1					
ANR	3900713	ExpressionStatement	width = bbox . q . x - bbox . p . x	247:8:10639:10666	3900546	6	True				
ANR	3900714	AssignmentExpression	width = bbox . q . x - bbox . p . x		3900546	0		=			
ANR	3900715	Identifier	width		3900546	0					
ANR	3900716	AdditiveExpression	bbox . q . x - bbox . p . x		3900546	1		-			
ANR	3900717	MemberAccess	bbox . q . x		3900546	0					
ANR	3900718	MemberAccess	bbox . q		3900546	0					
ANR	3900719	Identifier	bbox		3900546	0					
ANR	3900720	Identifier	q		3900546	1					
ANR	3900721	Identifier	x		3900546	1					
ANR	3900722	MemberAccess	bbox . p . x		3900546	1					
ANR	3900723	MemberAccess	bbox . p		3900546	0					
ANR	3900724	Identifier	bbox		3900546	0					
ANR	3900725	Identifier	p		3900546	1					
ANR	3900726	Identifier	x		3900546	1					
ANR	3900727	ExpressionStatement	"bits_compress_scaled ( bits , bbox . p . x , width , block_height , adev -> raster , bits , draster , & adev -> log2_scale , adev -> log2_alpha_bits )"	248:8:10676:10862	3900546	7	True				
ANR	3900728	CallExpression	"bits_compress_scaled ( bits , bbox . p . x , width , block_height , adev -> raster , bits , draster , & adev -> log2_scale , adev -> log2_alpha_bits )"		3900546	0					
ANR	3900729	Callee	bits_compress_scaled		3900546	0					
ANR	3900730	Identifier	bits_compress_scaled		3900546	0					
ANR	3900731	ArgumentList	bits		3900546	1					
ANR	3900732	Argument	bits		3900546	0					
ANR	3900733	Identifier	bits		3900546	0					
ANR	3900734	Argument	bbox . p . x		3900546	1					
ANR	3900735	MemberAccess	bbox . p . x		3900546	0					
ANR	3900736	MemberAccess	bbox . p		3900546	0					
ANR	3900737	Identifier	bbox		3900546	0					
ANR	3900738	Identifier	p		3900546	1					
ANR	3900739	Identifier	x		3900546	1					
ANR	3900740	Argument	width		3900546	2					
ANR	3900741	Identifier	width		3900546	0					
ANR	3900742	Argument	block_height		3900546	3					
ANR	3900743	Identifier	block_height		3900546	0					
ANR	3900744	Argument	adev -> raster		3900546	4					
ANR	3900745	PtrMemberAccess	adev -> raster		3900546	0					
ANR	3900746	Identifier	adev		3900546	0					
ANR	3900747	Identifier	raster		3900546	1					
ANR	3900748	Argument	bits		3900546	5					
ANR	3900749	Identifier	bits		3900546	0					
ANR	3900750	Argument	draster		3900546	6					
ANR	3900751	Identifier	draster		3900546	0					
ANR	3900752	Argument	& adev -> log2_scale		3900546	7					
ANR	3900753	UnaryOperationExpression	& adev -> log2_scale		3900546	0					
ANR	3900754	UnaryOperator	&		3900546	0					
ANR	3900755	PtrMemberAccess	adev -> log2_scale		3900546	1					
ANR	3900756	Identifier	adev		3900546	0					
ANR	3900757	Identifier	log2_scale		3900546	1					
ANR	3900758	Argument	adev -> log2_alpha_bits		3900546	8					
ANR	3900759	PtrMemberAccess	adev -> log2_alpha_bits		3900546	0					
ANR	3900760	Identifier	adev		3900546	0					
ANR	3900761	Identifier	log2_alpha_bits		3900546	1					
ANR	3900762	IfStatement	if ( adev -> save_hl_color == NULL )		3900546	8					
ANR	3900763	Condition	adev -> save_hl_color == NULL	252:12:10929:10955	3900546	0	True				
ANR	3900764	EqualityExpression	adev -> save_hl_color == NULL		3900546	0		==			
ANR	3900765	PtrMemberAccess	adev -> save_hl_color		3900546	0					
ANR	3900766	Identifier	adev		3900546	0					
ANR	3900767	Identifier	save_hl_color		3900546	1					
ANR	3900768	Identifier	NULL		3900546	1					
ANR	3900769	CompoundStatement		35:41:1406:1406	3900546	1					
ANR	3900770	ReturnStatement	"return ( * dev_proc ( target , copy_alpha ) ) ( target , bits , 0 , draster , gx_no_bitmap_id , ( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x , y >> adev -> log2_scale . y , width >> adev -> log2_scale . x , 1 , adev -> save_color , alpha_bits ) ;"	253:12:10973:11492	3900546	0	True				
ANR	3900771	CallExpression	"( * dev_proc ( target , copy_alpha ) ) ( target , bits , 0 , draster , gx_no_bitmap_id , ( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x , y >> adev -> log2_scale . y , width >> adev -> log2_scale . x , 1 , adev -> save_color , alpha_bits )"		3900546	0					
ANR	3900772	Callee	"* dev_proc ( target , copy_alpha )"		3900546	0					
ANR	3900773	UnaryOperationExpression	"* dev_proc ( target , copy_alpha )"		3900546	0					
ANR	3900774	UnaryOperator	*		3900546	0					
ANR	3900775	CallExpression	"dev_proc ( target , copy_alpha )"		3900546	1					
ANR	3900776	Callee	dev_proc		3900546	0					
ANR	3900777	Identifier	dev_proc		3900546	0					
ANR	3900778	ArgumentList	target		3900546	1					
ANR	3900779	Argument	target		3900546	0					
ANR	3900780	Identifier	target		3900546	0					
ANR	3900781	Argument	copy_alpha		3900546	1					
ANR	3900782	Identifier	copy_alpha		3900546	0					
ANR	3900783	ArgumentList	target		3900546	1					
ANR	3900784	Argument	target		3900546	0					
ANR	3900785	Identifier	target		3900546	0					
ANR	3900786	Argument	bits		3900546	1					
ANR	3900787	Identifier	bits		3900546	0					
ANR	3900788	Argument	0		3900546	2					
ANR	3900789	PrimaryExpression	0		3900546	0					
ANR	3900790	Argument	draster		3900546	3					
ANR	3900791	Identifier	draster		3900546	0					
ANR	3900792	Argument	gx_no_bitmap_id		3900546	4					
ANR	3900793	Identifier	gx_no_bitmap_id		3900546	0					
ANR	3900794	Argument	( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x		3900546	5					
ANR	3900795	ShiftExpression	( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x		3900546	0		>>			
ANR	3900796	AdditiveExpression	adev -> mapped_x + bbox . p . x		3900546	0		+			
ANR	3900797	PtrMemberAccess	adev -> mapped_x		3900546	0					
ANR	3900798	Identifier	adev		3900546	0					
ANR	3900799	Identifier	mapped_x		3900546	1					
ANR	3900800	MemberAccess	bbox . p . x		3900546	1					
ANR	3900801	MemberAccess	bbox . p		3900546	0					
ANR	3900802	Identifier	bbox		3900546	0					
ANR	3900803	Identifier	p		3900546	1					
ANR	3900804	Identifier	x		3900546	1					
ANR	3900805	MemberAccess	adev -> log2_scale . x		3900546	1					
ANR	3900806	PtrMemberAccess	adev -> log2_scale		3900546	0					
ANR	3900807	Identifier	adev		3900546	0					
ANR	3900808	Identifier	log2_scale		3900546	1					
ANR	3900809	Identifier	x		3900546	1					
ANR	3900810	Argument	y >> adev -> log2_scale . y		3900546	6					
ANR	3900811	ShiftExpression	y >> adev -> log2_scale . y		3900546	0		>>			
ANR	3900812	Identifier	y		3900546	0					
ANR	3900813	MemberAccess	adev -> log2_scale . y		3900546	1					
ANR	3900814	PtrMemberAccess	adev -> log2_scale		3900546	0					
ANR	3900815	Identifier	adev		3900546	0					
ANR	3900816	Identifier	log2_scale		3900546	1					
ANR	3900817	Identifier	y		3900546	1					
ANR	3900818	Argument	width >> adev -> log2_scale . x		3900546	7					
ANR	3900819	ShiftExpression	width >> adev -> log2_scale . x		3900546	0		>>			
ANR	3900820	Identifier	width		3900546	0					
ANR	3900821	MemberAccess	adev -> log2_scale . x		3900546	1					
ANR	3900822	PtrMemberAccess	adev -> log2_scale		3900546	0					
ANR	3900823	Identifier	adev		3900546	0					
ANR	3900824	Identifier	log2_scale		3900546	1					
ANR	3900825	Identifier	x		3900546	1					
ANR	3900826	Argument	1		3900546	8					
ANR	3900827	PrimaryExpression	1		3900546	0					
ANR	3900828	Argument	adev -> save_color		3900546	9					
ANR	3900829	PtrMemberAccess	adev -> save_color		3900546	0					
ANR	3900830	Identifier	adev		3900546	0					
ANR	3900831	Identifier	save_color		3900546	1					
ANR	3900832	Argument	alpha_bits		3900546	10					
ANR	3900833	Identifier	alpha_bits		3900546	0					
ANR	3900834	ElseStatement	else		3900546	0					
ANR	3900835	CompoundStatement		43:15:1957:1957	3900546	0					
ANR	3900836	ReturnStatement	"return ( * dev_proc ( target , copy_alpha_hl_color ) ) ( target , bits , 0 , draster , gx_no_bitmap_id , ( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x , y >> adev -> log2_scale . y , width >> adev -> log2_scale . x , 1 , adev -> save_hl_color , alpha_bits ) ;"	261:12:11523:12054	3900546	0	True				
ANR	3900837	CallExpression	"( * dev_proc ( target , copy_alpha_hl_color ) ) ( target , bits , 0 , draster , gx_no_bitmap_id , ( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x , y >> adev -> log2_scale . y , width >> adev -> log2_scale . x , 1 , adev -> save_hl_color , alpha_bits )"		3900546	0					
ANR	3900838	Callee	"* dev_proc ( target , copy_alpha_hl_color )"		3900546	0					
ANR	3900839	UnaryOperationExpression	"* dev_proc ( target , copy_alpha_hl_color )"		3900546	0					
ANR	3900840	UnaryOperator	*		3900546	0					
ANR	3900841	CallExpression	"dev_proc ( target , copy_alpha_hl_color )"		3900546	1					
ANR	3900842	Callee	dev_proc		3900546	0					
ANR	3900843	Identifier	dev_proc		3900546	0					
ANR	3900844	ArgumentList	target		3900546	1					
ANR	3900845	Argument	target		3900546	0					
ANR	3900846	Identifier	target		3900546	0					
ANR	3900847	Argument	copy_alpha_hl_color		3900546	1					
ANR	3900848	Identifier	copy_alpha_hl_color		3900546	0					
ANR	3900849	ArgumentList	target		3900546	1					
ANR	3900850	Argument	target		3900546	0					
ANR	3900851	Identifier	target		3900546	0					
ANR	3900852	Argument	bits		3900546	1					
ANR	3900853	Identifier	bits		3900546	0					
ANR	3900854	Argument	0		3900546	2					
ANR	3900855	PrimaryExpression	0		3900546	0					
ANR	3900856	Argument	draster		3900546	3					
ANR	3900857	Identifier	draster		3900546	0					
ANR	3900858	Argument	gx_no_bitmap_id		3900546	4					
ANR	3900859	Identifier	gx_no_bitmap_id		3900546	0					
ANR	3900860	Argument	( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x		3900546	5					
ANR	3900861	ShiftExpression	( adev -> mapped_x + bbox . p . x ) >> adev -> log2_scale . x		3900546	0		>>			
ANR	3900862	AdditiveExpression	adev -> mapped_x + bbox . p . x		3900546	0		+			
ANR	3900863	PtrMemberAccess	adev -> mapped_x		3900546	0					
ANR	3900864	Identifier	adev		3900546	0					
ANR	3900865	Identifier	mapped_x		3900546	1					
ANR	3900866	MemberAccess	bbox . p . x		3900546	1					
ANR	3900867	MemberAccess	bbox . p		3900546	0					
ANR	3900868	Identifier	bbox		3900546	0					
ANR	3900869	Identifier	p		3900546	1					
ANR	3900870	Identifier	x		3900546	1					
ANR	3900871	MemberAccess	adev -> log2_scale . x		3900546	1					
ANR	3900872	PtrMemberAccess	adev -> log2_scale		3900546	0					
ANR	3900873	Identifier	adev		3900546	0					
ANR	3900874	Identifier	log2_scale		3900546	1					
ANR	3900875	Identifier	x		3900546	1					
ANR	3900876	Argument	y >> adev -> log2_scale . y		3900546	6					
ANR	3900877	ShiftExpression	y >> adev -> log2_scale . y		3900546	0		>>			
ANR	3900878	Identifier	y		3900546	0					
ANR	3900879	MemberAccess	adev -> log2_scale . y		3900546	1					
ANR	3900880	PtrMemberAccess	adev -> log2_scale		3900546	0					
ANR	3900881	Identifier	adev		3900546	0					
ANR	3900882	Identifier	log2_scale		3900546	1					
ANR	3900883	Identifier	y		3900546	1					
ANR	3900884	Argument	width >> adev -> log2_scale . x		3900546	7					
ANR	3900885	ShiftExpression	width >> adev -> log2_scale . x		3900546	0		>>			
ANR	3900886	Identifier	width		3900546	0					
ANR	3900887	MemberAccess	adev -> log2_scale . x		3900546	1					
ANR	3900888	PtrMemberAccess	adev -> log2_scale		3900546	0					
ANR	3900889	Identifier	adev		3900546	0					
ANR	3900890	Identifier	log2_scale		3900546	1					
ANR	3900891	Identifier	x		3900546	1					
ANR	3900892	Argument	1		3900546	8					
ANR	3900893	PrimaryExpression	1		3900546	0					
ANR	3900894	Argument	adev -> save_hl_color		3900546	9					
ANR	3900895	PtrMemberAccess	adev -> save_hl_color		3900546	0					
ANR	3900896	Identifier	adev		3900546	0					
ANR	3900897	Identifier	save_hl_color		3900546	1					
ANR	3900898	Argument	alpha_bits		3900546	10					
ANR	3900899	Identifier	alpha_bits		3900546	0					
ANR	3900900	ReturnType	static int		3900546	1					
ANR	3900901	Identifier	abuf_flush_block		3900546	2					
ANR	3900902	ParameterList	"gx_device_memory * adev , int y"		3900546	3					
ANR	3900903	Parameter	gx_device_memory * adev	217:17:9519:9541	3900546	0	True				
ANR	3900904	ParameterType	gx_device_memory *		3900546	0					
ANR	3900905	Identifier	adev		3900546	1					
ANR	3900906	Parameter	int y	217:42:9544:9548	3900546	1	True				
ANR	3900907	ParameterType	int		3900546	0					
ANR	3900908	Identifier	y		3900546	1					
ANR	3900909	CFGEntryNode	ENTRY		3900546		True				
ANR	3900910	CFGExitNode	EXIT		3900546		True				
ANR	3900911	Symbol	adev -> log2_scale . x		3900546						
ANR	3900912	Symbol	adev -> mapped_y		3900546						
ANR	3900913	Symbol	adev -> log2_scale . y		3900546						
ANR	3900914	Symbol	* dev_proc		3900546						
ANR	3900915	Symbol	bbox		3900546						
ANR	3900916	Symbol	ddepth		3900546						
ANR	3900917	Symbol	block_height		3900546						
ANR	3900918	Symbol	bbox . q . x		3900546						
ANR	3900919	Symbol	"* dev_proc ( target , copy_alpha_hl_color )"		3900546						
ANR	3900920	Symbol	adev -> raster		3900546						
ANR	3900921	Symbol	* adev		3900546						
ANR	3900922	Symbol	dev_proc		3900546						
ANR	3900923	Symbol	adev -> save_color		3900546						
ANR	3900924	Symbol	copy_alpha		3900546						
ANR	3900925	Symbol	adev -> mapped_x		3900546						
ANR	3900926	Symbol	adev -> height		3900546						
ANR	3900927	Symbol	alpha_mask		3900546						
ANR	3900928	Symbol	"* dev_proc ( target , copy_alpha )"		3900546						
ANR	3900929	Symbol	bbox . q		3900546						
ANR	3900930	Symbol	NULL		3900546						
ANR	3900931	Symbol	draster		3900546						
ANR	3900932	Symbol	adev -> target		3900546						
ANR	3900933	Symbol	bits		3900546						
ANR	3900934	Symbol	~alpha_mask		3900546						
ANR	3900935	Symbol	alpha_bits		3900546						
ANR	3900936	Symbol	& bbox		3900546						
ANR	3900937	Symbol	bbox . p		3900546						
ANR	3900938	Symbol	& adev -> log2_scale		3900546						
ANR	3900939	Symbol	copy_alpha_hl_color		3900546						
ANR	3900940	Symbol	target		3900546						
ANR	3900941	Symbol	adev -> log2_alpha_bits		3900546						
ANR	3900942	Symbol	bitmap_raster		3900546						
ANR	3900943	Symbol	gx_no_bitmap_id		3900546						
ANR	3900944	Symbol	adev -> mapped_start		3900546						
ANR	3900945	Symbol	adev -> save_hl_color		3900546						
ANR	3900946	Symbol	scan_line_base		3900546						
ANR	3900947	Symbol	width		3900546						
ANR	3900948	Symbol	adev		3900546						
ANR	3900949	Symbol	y		3900546						
ANR	3900950	Symbol	~7		3900546						
ANR	3900951	Symbol	adev -> log2_scale		3900546						
ANR	3900952	Symbol	buffer_y		3900546						
ANR	3900953	Symbol	adev -> width		3900546						
ANR	3900954	Symbol	bbox . p . x		3900546						
ANR	3900955	Function	abuf_flush	272:0:12105:12442							
ANR	3900956	FunctionDef	abuf_flush (gx_device_memory * adev)		3900955	0					
ANR	3900957	CompoundStatement		274:0:12152:12442	3900955	0					
ANR	3900958	IdentifierDeclStatement	"int y , code = 0 ;"	275:4:12158:12173	3900955	0	True				
ANR	3900959	IdentifierDecl	y		3900955	0					
ANR	3900960	IdentifierDeclType	int		3900955	0					
ANR	3900961	Identifier	y		3900955	1					
ANR	3900962	IdentifierDecl	code = 0		3900955	1					
ANR	3900963	IdentifierDeclType	int		3900955	0					
ANR	3900964	Identifier	code		3900955	1					
ANR	3900965	AssignmentExpression	code = 0		3900955	2		=			
ANR	3900966	Identifier	code		3900955	0					
ANR	3900967	PrimaryExpression	0		3900955	1					
ANR	3900968	IdentifierDeclStatement	int block_height = 1 << adev -> log2_scale . y ;	276:4:12179:12221	3900955	1	True				
ANR	3900969	IdentifierDecl	block_height = 1 << adev -> log2_scale . y		3900955	0					
ANR	3900970	IdentifierDeclType	int		3900955	0					
ANR	3900971	Identifier	block_height		3900955	1					
ANR	3900972	AssignmentExpression	block_height = 1 << adev -> log2_scale . y		3900955	2		=			
ANR	3900973	Identifier	block_height		3900955	0					
ANR	3900974	ShiftExpression	1 << adev -> log2_scale . y		3900955	1		<<			
ANR	3900975	PrimaryExpression	1		3900955	0					
ANR	3900976	MemberAccess	adev -> log2_scale . y		3900955	1					
ANR	3900977	PtrMemberAccess	adev -> log2_scale		3900955	0					
ANR	3900978	Identifier	adev		3900955	0					
ANR	3900979	Identifier	log2_scale		3900955	1					
ANR	3900980	Identifier	y		3900955	1					
ANR	3900981	ForStatement	for ( y = 0 ; y < adev -> mapped_height ; y += block_height )		3900955	2					
ANR	3900982	ForInit	y = 0 ;	278:9:12233:12238	3900955	0	True				
ANR	3900983	AssignmentExpression	y = 0		3900955	0		=			
ANR	3900984	Identifier	y		3900955	0					
ANR	3900985	PrimaryExpression	0		3900955	1					
ANR	3900986	Condition	y < adev -> mapped_height	278:16:12240:12262	3900955	1	True				
ANR	3900987	RelationalExpression	y < adev -> mapped_height		3900955	0		<			
ANR	3900988	Identifier	y		3900955	0					
ANR	3900989	PtrMemberAccess	adev -> mapped_height		3900955	1					
ANR	3900990	Identifier	adev		3900955	0					
ANR	3900991	Identifier	mapped_height		3900955	1					
ANR	3900992	AssignmentExpression	y += block_height	278:41:12265:12281	3900955	2	True	+=			
ANR	3900993	Identifier	y		3900955	0					
ANR	3900994	Identifier	block_height		3900955	1					
ANR	3900995	IfStatement	"if ( ( code = abuf_flush_block ( adev , adev -> mapped_y + y ) ) < 0 )"		3900955	3					
ANR	3900996	Condition	"( code = abuf_flush_block ( adev , adev -> mapped_y + y ) ) < 0"	279:12:12296:12350	3900955	0	True				
ANR	3900997	RelationalExpression	"( code = abuf_flush_block ( adev , adev -> mapped_y + y ) ) < 0"		3900955	0		<			
ANR	3900998	AssignmentExpression	"code = abuf_flush_block ( adev , adev -> mapped_y + y )"		3900955	0		=			
ANR	3900999	Identifier	code		3900955	0					
ANR	3901000	CallExpression	"abuf_flush_block ( adev , adev -> mapped_y + y )"		3900955	1					
ANR	3901001	Callee	abuf_flush_block		3900955	0					
ANR	3901002	Identifier	abuf_flush_block		3900955	0					
ANR	3901003	ArgumentList	adev		3900955	1					
ANR	3901004	Argument	adev		3900955	0					
ANR	3901005	Identifier	adev		3900955	0					
ANR	3901006	Argument	adev -> mapped_y + y		3900955	1					
ANR	3901007	AdditiveExpression	adev -> mapped_y + y		3900955	0		+			
ANR	3901008	PtrMemberAccess	adev -> mapped_y		3900955	0					
ANR	3901009	Identifier	adev		3900955	0					
ANR	3901010	Identifier	mapped_y		3900955	1					
ANR	3901011	Identifier	y		3900955	1					
ANR	3901012	PrimaryExpression	0		3900955	1					
ANR	3901013	ReturnStatement	return code ;	280:12:12365:12376	3900955	1	True				
ANR	3901014	Identifier	code		3900955	0					
ANR	3901015	ExpressionStatement	adev -> mapped_height = adev -> mapped_start = 0	281:4:12382:12426	3900955	3	True				
ANR	3901016	AssignmentExpression	adev -> mapped_height = adev -> mapped_start = 0		3900955	0		=			
ANR	3901017	PtrMemberAccess	adev -> mapped_height		3900955	0					
ANR	3901018	Identifier	adev		3900955	0					
ANR	3901019	Identifier	mapped_height		3900955	1					
ANR	3901020	AssignmentExpression	adev -> mapped_start = 0		3900955	1		=			
ANR	3901021	PtrMemberAccess	adev -> mapped_start		3900955	0					
ANR	3901022	Identifier	adev		3900955	0					
ANR	3901023	Identifier	mapped_start		3900955	1					
ANR	3901024	PrimaryExpression	0		3900955	1					
ANR	3901025	ReturnStatement	return 0 ;	282:4:12432:12440	3900955	4	True				
ANR	3901026	PrimaryExpression	0		3900955	0					
ANR	3901027	ReturnType	static int		3900955	1					
ANR	3901028	Identifier	abuf_flush		3900955	2					
ANR	3901029	ParameterList	gx_device_memory * adev		3900955	3					
ANR	3901030	Parameter	gx_device_memory * adev	273:11:12127:12149	3900955	0	True				
ANR	3901031	ParameterType	gx_device_memory *		3900955	0					
ANR	3901032	Identifier	adev		3900955	1					
ANR	3901033	CFGEntryNode	ENTRY		3900955		True				
ANR	3901034	CFGExitNode	EXIT		3900955		True				
ANR	3901035	Symbol	code		3900955						
ANR	3901036	Symbol	abuf_flush_block		3900955						
ANR	3901037	Symbol	adev -> mapped_start		3900955						
ANR	3901038	Symbol	adev -> mapped_y		3900955						
ANR	3901039	Symbol	adev -> log2_scale . y		3900955						
ANR	3901040	Symbol	* adev		3900955						
ANR	3901041	Symbol	adev -> mapped_height		3900955						
ANR	3901042	Symbol	adev		3900955						
ANR	3901043	Symbol	y		3900955						
ANR	3901044	Symbol	adev -> log2_scale		3900955						
ANR	3901045	Symbol	block_height		3900955						
ANR	3901046	Function	mem_abuf_close	286:0:12490:12696							
ANR	3901047	FunctionDef	mem_abuf_close (gx_device * dev)		3901046	0					
ANR	3901048	CompoundStatement		288:0:12533:12696	3901046	0					
ANR	3901049	Statement	gx_device_memory	289:4:12539:12554	3901046	0	True				
ANR	3901050	Statement	*	289:21:12556:12556	3901046	1	True				
ANR	3901051	Statement	const	289:23:12558:12562	3901046	2	True				
ANR	3901052	ExpressionStatement	mdev = ( gx_device_memory * ) dev	289:29:12564:12594	3901046	3	True				
ANR	3901053	AssignmentExpression	mdev = ( gx_device_memory * ) dev		3901046	0		=			
ANR	3901054	Identifier	mdev		3901046	0					
ANR	3901055	CastExpression	( gx_device_memory * ) dev		3901046	1					
ANR	3901056	CastTarget	gx_device_memory *		3901046	0					
ANR	3901057	Identifier	dev		3901046	1					
ANR	3901058	IdentifierDeclStatement	int code = abuf_flush ( mdev ) ;	290:4:12600:12627	3901046	4	True				
ANR	3901059	IdentifierDecl	code = abuf_flush ( mdev )		3901046	0					
ANR	3901060	IdentifierDeclType	int		3901046	0					
ANR	3901061	Identifier	code		3901046	1					
ANR	3901062	AssignmentExpression	code = abuf_flush ( mdev )		3901046	2		=			
ANR	3901063	Identifier	code		3901046	0					
ANR	3901064	CallExpression	abuf_flush ( mdev )		3901046	1					
ANR	3901065	Callee	abuf_flush		3901046	0					
ANR	3901066	Identifier	abuf_flush		3901046	0					
ANR	3901067	ArgumentList	mdev		3901046	1					
ANR	3901068	Argument	mdev		3901046	0					
ANR	3901069	Identifier	mdev		3901046	0					
ANR	3901070	IfStatement	if ( code < 0 )		3901046	5					
ANR	3901071	Condition	code < 0	292:8:12638:12645	3901046	0	True				
ANR	3901072	RelationalExpression	code < 0		3901046	0		<			
ANR	3901073	Identifier	code		3901046	0					
ANR	3901074	PrimaryExpression	0		3901046	1					
ANR	3901075	ReturnStatement	return code ;	293:8:12656:12667	3901046	1	True				
ANR	3901076	Identifier	code		3901046	0					
ANR	3901077	ReturnStatement	return mem_close ( dev ) ;	294:4:12673:12694	3901046	6	True				
ANR	3901078	CallExpression	mem_close ( dev )		3901046	0					
ANR	3901079	Callee	mem_close		3901046	0					
ANR	3901080	Identifier	mem_close		3901046	0					
ANR	3901081	ArgumentList	dev		3901046	1					
ANR	3901082	Argument	dev		3901046	0					
ANR	3901083	Identifier	dev		3901046	0					
ANR	3901084	ReturnType	static int		3901046	1					
ANR	3901085	Identifier	mem_abuf_close		3901046	2					
ANR	3901086	ParameterList	gx_device * dev		3901046	3					
ANR	3901087	Parameter	gx_device * dev	287:15:12516:12530	3901046	0	True				
ANR	3901088	ParameterType	gx_device *		3901046	0					
ANR	3901089	Identifier	dev		3901046	1					
ANR	3901090	CFGEntryNode	ENTRY		3901046		True				
ANR	3901091	CFGExitNode	EXIT		3901046		True				
ANR	3901092	Symbol	code		3901046						
ANR	3901093	Symbol	dev		3901046						
ANR	3901094	Symbol	mdev		3901046						
ANR	3901095	Symbol	mem_close		3901046						
ANR	3901096	Symbol	abuf_flush		3901046						
ANR	3901097	ClassDef	y_transfer_s	301:8:12863:12979							
ANR	3901098	DeclStmt									
ANR	3901099	Decl							int	int	y_next
ANR	3901100	DeclStmt									
ANR	3901101	Decl							int	int	height_left
ANR	3901102	DeclStmt									
ANR	3901103	Decl							int	int	transfer_y
ANR	3901104	DeclStmt									
ANR	3901105	Decl							int	int	transfer_height
ANR	3901106	DeclStmt									
ANR	3901107	Decl							y_transfer_s	y_transfer_s	y_transfer
ANR	3901108	Function	y_transfer_init	307:0:12981:13481							
ANR	3901109	FunctionDef	"y_transfer_init (y_transfer * pyt , gx_device * dev , int ty , int th)"		3901108	0					
ANR	3901110	CompoundStatement		309:0:13060:13481	3901108	0					
ANR	3901111	Statement	gx_device_memory	310:4:13066:13081	3901108	0	True				
ANR	3901112	Statement	*	310:21:13083:13083	3901108	1	True				
ANR	3901113	Statement	const	310:23:13085:13089	3901108	2	True				
ANR	3901114	ExpressionStatement	mdev = ( gx_device_memory * ) dev	310:29:13091:13121	3901108	3	True				
ANR	3901115	AssignmentExpression	mdev = ( gx_device_memory * ) dev		3901108	0		=			
ANR	3901116	Identifier	mdev		3901108	0					
ANR	3901117	CastExpression	( gx_device_memory * ) dev		3901108	1					
ANR	3901118	CastTarget	gx_device_memory *		3901108	0					
ANR	3901119	Identifier	dev		3901108	1					
ANR	3901120	IdentifierDeclStatement	int bh = 1 << mdev -> log2_scale . y ;	311:4:13127:13159	3901108	4	True				
ANR	3901121	IdentifierDecl	bh = 1 << mdev -> log2_scale . y		3901108	0					
ANR	3901122	IdentifierDeclType	int		3901108	0					
ANR	3901123	Identifier	bh		3901108	1					
ANR	3901124	AssignmentExpression	bh = 1 << mdev -> log2_scale . y		3901108	2		=			
ANR	3901125	Identifier	bh		3901108	0					
ANR	3901126	ShiftExpression	1 << mdev -> log2_scale . y		3901108	1		<<			
ANR	3901127	PrimaryExpression	1		3901108	0					
ANR	3901128	MemberAccess	mdev -> log2_scale . y		3901108	1					
ANR	3901129	PtrMemberAccess	mdev -> log2_scale		3901108	0					
ANR	3901130	Identifier	mdev		3901108	0					
ANR	3901131	Identifier	log2_scale		3901108	1					
ANR	3901132	Identifier	y		3901108	1					
ANR	3901133	IfStatement	if ( ty < mdev -> mapped_y || ty > mdev -> mapped_y + mdev -> mapped_height )		3901108	5					
ANR	3901134	Condition	ty < mdev -> mapped_y || ty > mdev -> mapped_y + mdev -> mapped_height	313:8:13170:13233	3901108	0	True				
ANR	3901135	OrExpression	ty < mdev -> mapped_y || ty > mdev -> mapped_y + mdev -> mapped_height		3901108	0		||			
ANR	3901136	RelationalExpression	ty < mdev -> mapped_y		3901108	0		<			
ANR	3901137	Identifier	ty		3901108	0					
ANR	3901138	PtrMemberAccess	mdev -> mapped_y		3901108	1					
ANR	3901139	Identifier	mdev		3901108	0					
ANR	3901140	Identifier	mapped_y		3901108	1					
ANR	3901141	RelationalExpression	ty > mdev -> mapped_y + mdev -> mapped_height		3901108	1		>			
ANR	3901142	Identifier	ty		3901108	0					
ANR	3901143	AdditiveExpression	mdev -> mapped_y + mdev -> mapped_height		3901108	1		+			
ANR	3901144	PtrMemberAccess	mdev -> mapped_y		3901108	0					
ANR	3901145	Identifier	mdev		3901108	0					
ANR	3901146	Identifier	mapped_y		3901108	1					
ANR	3901147	PtrMemberAccess	mdev -> mapped_height		3901108	1					
ANR	3901148	Identifier	mdev		3901108	0					
ANR	3901149	Identifier	mapped_height		3901108	1					
ANR	3901150	CompoundStatement		5:74:175:175	3901108	1					
ANR	3901151	ExpressionStatement	abuf_flush ( mdev )	314:8:13246:13262	3901108	0	True				
ANR	3901152	CallExpression	abuf_flush ( mdev )		3901108	0					
ANR	3901153	Callee	abuf_flush		3901108	0					
ANR	3901154	Identifier	abuf_flush		3901108	0					
ANR	3901155	ArgumentList	mdev		3901108	1					
ANR	3901156	Argument	mdev		3901108	0					
ANR	3901157	Identifier	mdev		3901108	0					
ANR	3901158	ExpressionStatement	mdev -> mapped_y = ty & - bh	315:8:13272:13297	3901108	1	True				
ANR	3901159	AssignmentExpression	mdev -> mapped_y = ty & - bh		3901108	0		=			
ANR	3901160	PtrMemberAccess	mdev -> mapped_y		3901108	0					
ANR	3901161	Identifier	mdev		3901108	0					
ANR	3901162	Identifier	mapped_y		3901108	1					
ANR	3901163	BitAndExpression	ty & - bh		3901108	1		&			
ANR	3901164	Identifier	ty		3901108	0					
ANR	3901165	UnaryOperationExpression	- bh		3901108	1					
ANR	3901166	UnaryOperator	-		3901108	0					
ANR	3901167	Identifier	bh		3901108	1					
ANR	3901168	ExpressionStatement	mdev -> mapped_height = bh	316:8:13307:13331	3901108	2	True				
ANR	3901169	AssignmentExpression	mdev -> mapped_height = bh		3901108	0		=			
ANR	3901170	PtrMemberAccess	mdev -> mapped_height		3901108	0					
ANR	3901171	Identifier	mdev		3901108	0					
ANR	3901172	Identifier	mapped_height		3901108	1					
ANR	3901173	Identifier	bh		3901108	1					
ANR	3901174	ExpressionStatement	"memset ( scan_line_base ( mdev , 0 ) , 0 , bh * mdev -> raster )"	317:8:13341:13394	3901108	3	True				
ANR	3901175	CallExpression	"memset ( scan_line_base ( mdev , 0 ) , 0 , bh * mdev -> raster )"		3901108	0					
ANR	3901176	Callee	memset		3901108	0					
ANR	3901177	Identifier	memset		3901108	0					
ANR	3901178	ArgumentList	"scan_line_base ( mdev , 0 )"		3901108	1					
ANR	3901179	Argument	"scan_line_base ( mdev , 0 )"		3901108	0					
ANR	3901180	CallExpression	"scan_line_base ( mdev , 0 )"		3901108	0					
ANR	3901181	Callee	scan_line_base		3901108	0					
ANR	3901182	Identifier	scan_line_base		3901108	0					
ANR	3901183	ArgumentList	mdev		3901108	1					
ANR	3901184	Argument	mdev		3901108	0					
ANR	3901185	Identifier	mdev		3901108	0					
ANR	3901186	Argument	0		3901108	1					
ANR	3901187	PrimaryExpression	0		3901108	0					
ANR	3901188	Argument	0		3901108	1					
ANR	3901189	PrimaryExpression	0		3901108	0					
ANR	3901190	Argument	bh * mdev -> raster		3901108	2					
ANR	3901191	MultiplicativeExpression	bh * mdev -> raster		3901108	0		*			
ANR	3901192	Identifier	bh		3901108	0					
ANR	3901193	PtrMemberAccess	mdev -> raster		3901108	1					
ANR	3901194	Identifier	mdev		3901108	0					
ANR	3901195	Identifier	raster		3901108	1					
ANR	3901196	ExpressionStatement	pyt -> y_next = ty	319:4:13406:13422	3901108	6	True				
ANR	3901197	AssignmentExpression	pyt -> y_next = ty		3901108	0		=			
ANR	3901198	PtrMemberAccess	pyt -> y_next		3901108	0					
ANR	3901199	Identifier	pyt		3901108	0					
ANR	3901200	Identifier	y_next		3901108	1					
ANR	3901201	Identifier	ty		3901108	1					
ANR	3901202	ExpressionStatement	pyt -> height_left = th	320:4:13428:13449	3901108	7	True				
ANR	3901203	AssignmentExpression	pyt -> height_left = th		3901108	0		=			
ANR	3901204	PtrMemberAccess	pyt -> height_left		3901108	0					
ANR	3901205	Identifier	pyt		3901108	0					
ANR	3901206	Identifier	height_left		3901108	1					
ANR	3901207	Identifier	th		3901108	1					
ANR	3901208	ExpressionStatement	pyt -> transfer_height = 0	321:4:13455:13479	3901108	8	True				
ANR	3901209	AssignmentExpression	pyt -> transfer_height = 0		3901108	0		=			
ANR	3901210	PtrMemberAccess	pyt -> transfer_height		3901108	0					
ANR	3901211	Identifier	pyt		3901108	0					
ANR	3901212	Identifier	transfer_height		3901108	1					
ANR	3901213	PrimaryExpression	0		3901108	1					
ANR	3901214	ReturnType	static void		3901108	1					
ANR	3901215	Identifier	y_transfer_init		3901108	2					
ANR	3901216	ParameterList	"y_transfer * pyt , gx_device * dev , int ty , int th"		3901108	3					
ANR	3901217	Parameter	y_transfer * pyt	308:16:13009:13024	3901108	0	True				
ANR	3901218	ParameterType	y_transfer *		3901108	0					
ANR	3901219	Identifier	pyt		3901108	1					
ANR	3901220	Parameter	gx_device * dev	308:34:13027:13041	3901108	1	True				
ANR	3901221	ParameterType	gx_device *		3901108	0					
ANR	3901222	Identifier	dev		3901108	1					
ANR	3901223	Parameter	int ty	308:51:13044:13049	3901108	2	True				
ANR	3901224	ParameterType	int		3901108	0					
ANR	3901225	Identifier	ty		3901108	1					
ANR	3901226	Parameter	int th	308:59:13052:13057	3901108	3	True				
ANR	3901227	ParameterType	int		3901108	0					
ANR	3901228	Identifier	th		3901108	1					
ANR	3901229	CFGEntryNode	ENTRY		3901108		True				
ANR	3901230	CFGExitNode	EXIT		3901108		True				
ANR	3901231	Symbol	ty		3901108						
ANR	3901232	Symbol	bh		3901108						
ANR	3901233	Symbol	pyt -> height_left		3901108						
ANR	3901234	Symbol	pyt		3901108						
ANR	3901235	Symbol	pyt -> y_next		3901108						
ANR	3901236	Symbol	pyt -> transfer_height		3901108						
ANR	3901237	Symbol	mdev -> log2_scale		3901108						
ANR	3901238	Symbol	mdev -> raster		3901108						
ANR	3901239	Symbol	mdev -> mapped_height		3901108						
ANR	3901240	Symbol	mdev -> mapped_y		3901108						
ANR	3901241	Symbol	dev		3901108						
ANR	3901242	Symbol	th		3901108						
ANR	3901243	Symbol	* pyt		3901108						
ANR	3901244	Symbol	scan_line_base		3901108						
ANR	3901245	Symbol	mdev		3901108						
ANR	3901246	Symbol	mdev -> log2_scale . y		3901108						
ANR	3901247	Symbol	* mdev		3901108						
ANR	3901248	Function	y_transfer_next	324:0:13554:15205							
ANR	3901249	FunctionDef	"y_transfer_next (y_transfer * pyt , gx_device * dev)"		3901248	0					
ANR	3901250	CompoundStatement		326:0:13616:15205	3901248	0					
ANR	3901251	Statement	gx_device_memory	327:4:13622:13637	3901248	0	True				
ANR	3901252	Statement	*	327:21:13639:13639	3901248	1	True				
ANR	3901253	Statement	const	327:23:13641:13645	3901248	2	True				
ANR	3901254	ExpressionStatement	mdev = ( gx_device_memory * ) dev	327:29:13647:13677	3901248	3	True				
ANR	3901255	AssignmentExpression	mdev = ( gx_device_memory * ) dev		3901248	0		=			
ANR	3901256	Identifier	mdev		3901248	0					
ANR	3901257	CastExpression	( gx_device_memory * ) dev		3901248	1					
ANR	3901258	CastTarget	gx_device_memory *		3901248	0					
ANR	3901259	Identifier	dev		3901248	1					
ANR	3901260	IdentifierDeclStatement	"int my = mdev -> mapped_y , mh = mdev -> mapped_height ;"	328:4:13683:13732	3901248	4	True				
ANR	3901261	IdentifierDecl	my = mdev -> mapped_y		3901248	0					
ANR	3901262	IdentifierDeclType	int		3901248	0					
ANR	3901263	Identifier	my		3901248	1					
ANR	3901264	AssignmentExpression	my = mdev -> mapped_y		3901248	2		=			
ANR	3901265	Identifier	my		3901248	0					
ANR	3901266	PtrMemberAccess	mdev -> mapped_y		3901248	1					
ANR	3901267	Identifier	mdev		3901248	0					
ANR	3901268	Identifier	mapped_y		3901248	1					
ANR	3901269	IdentifierDecl	mh = mdev -> mapped_height		3901248	1					
ANR	3901270	IdentifierDeclType	int		3901248	0					
ANR	3901271	Identifier	mh		3901248	1					
ANR	3901272	AssignmentExpression	mh = mdev -> mapped_height		3901248	2		=			
ANR	3901273	Identifier	mh		3901248	0					
ANR	3901274	PtrMemberAccess	mdev -> mapped_height		3901248	1					
ANR	3901275	Identifier	mdev		3901248	0					
ANR	3901276	Identifier	mapped_height		3901248	1					
ANR	3901277	IdentifierDeclStatement	int ms = mdev -> mapped_start ;	329:4:13738:13765	3901248	5	True				
ANR	3901278	IdentifierDecl	ms = mdev -> mapped_start		3901248	0					
ANR	3901279	IdentifierDeclType	int		3901248	0					
ANR	3901280	Identifier	ms		3901248	1					
ANR	3901281	AssignmentExpression	ms = mdev -> mapped_start		3901248	2		=			
ANR	3901282	Identifier	ms		3901248	0					
ANR	3901283	PtrMemberAccess	mdev -> mapped_start		3901248	1					
ANR	3901284	Identifier	mdev		3901248	0					
ANR	3901285	Identifier	mapped_start		3901248	1					
ANR	3901286	IdentifierDeclStatement	int ty = pyt -> y_next += pyt -> transfer_height ;	330:4:13771:13815	3901248	6	True				
ANR	3901287	IdentifierDecl	ty = pyt -> y_next += pyt -> transfer_height		3901248	0					
ANR	3901288	IdentifierDeclType	int		3901248	0					
ANR	3901289	Identifier	ty		3901248	1					
ANR	3901290	AssignmentExpression	ty = pyt -> y_next += pyt -> transfer_height		3901248	2		=			
ANR	3901291	Identifier	ty		3901248	0					
ANR	3901292	AssignmentExpression	pyt -> y_next += pyt -> transfer_height		3901248	1		+=			
ANR	3901293	PtrMemberAccess	pyt -> y_next		3901248	0					
ANR	3901294	Identifier	pyt		3901248	0					
ANR	3901295	Identifier	y_next		3901248	1					
ANR	3901296	PtrMemberAccess	pyt -> transfer_height		3901248	1					
ANR	3901297	Identifier	pyt		3901248	0					
ANR	3901298	Identifier	transfer_height		3901248	1					
ANR	3901299	IdentifierDeclStatement	int th = pyt -> height_left ;	331:4:13821:13846	3901248	7	True				
ANR	3901300	IdentifierDecl	th = pyt -> height_left		3901248	0					
ANR	3901301	IdentifierDeclType	int		3901248	0					
ANR	3901302	Identifier	th		3901248	1					
ANR	3901303	AssignmentExpression	th = pyt -> height_left		3901248	2		=			
ANR	3901304	Identifier	th		3901248	0					
ANR	3901305	PtrMemberAccess	pyt -> height_left		3901248	1					
ANR	3901306	Identifier	pyt		3901248	0					
ANR	3901307	Identifier	height_left		3901248	1					
ANR	3901308	IdentifierDeclStatement	int bh = 1 << mdev -> log2_scale . y ;	332:4:13852:13884	3901248	8	True				
ANR	3901309	IdentifierDecl	bh = 1 << mdev -> log2_scale . y		3901248	0					
ANR	3901310	IdentifierDeclType	int		3901248	0					
ANR	3901311	Identifier	bh		3901248	1					
ANR	3901312	AssignmentExpression	bh = 1 << mdev -> log2_scale . y		3901248	2		=			
ANR	3901313	Identifier	bh		3901248	0					
ANR	3901314	ShiftExpression	1 << mdev -> log2_scale . y		3901248	1		<<			
ANR	3901315	PrimaryExpression	1		3901248	0					
ANR	3901316	MemberAccess	mdev -> log2_scale . y		3901248	1					
ANR	3901317	PtrMemberAccess	mdev -> log2_scale		3901248	0					
ANR	3901318	Identifier	mdev		3901248	0					
ANR	3901319	Identifier	log2_scale		3901248	1					
ANR	3901320	Identifier	y		3901248	1					
ANR	3901321	IdentifierDeclStatement	"int tby , tbh ;"	335:4:13949:13961	3901248	9	True				
ANR	3901322	IdentifierDecl	tby		3901248	0					
ANR	3901323	IdentifierDeclType	int		3901248	0					
ANR	3901324	Identifier	tby		3901248	1					
ANR	3901325	IdentifierDecl	tbh		3901248	1					
ANR	3901326	IdentifierDeclType	int		3901248	0					
ANR	3901327	Identifier	tbh		3901248	1					
ANR	3901328	IfStatement	if ( ty == my + mh )		3901248	10					
ANR	3901329	Condition	ty == my + mh	337:8:13972:13984	3901248	0	True				
ANR	3901330	EqualityExpression	ty == my + mh		3901248	0		==			
ANR	3901331	Identifier	ty		3901248	0					
ANR	3901332	AdditiveExpression	my + mh		3901248	1		+			
ANR	3901333	Identifier	my		3901248	0					
ANR	3901334	Identifier	mh		3901248	1					
ANR	3901335	CompoundStatement		12:23:370:370	3901248	1					
ANR	3901336	IfStatement	if ( mh == mdev -> height )		3901248	0					
ANR	3901337	Condition	mh == mdev -> height	338:12:14031:14048	3901248	0	True				
ANR	3901338	EqualityExpression	mh == mdev -> height		3901248	0		==			
ANR	3901339	Identifier	mh		3901248	0					
ANR	3901340	PtrMemberAccess	mdev -> height		3901248	1					
ANR	3901341	Identifier	mdev		3901248	0					
ANR	3901342	Identifier	height		3901248	1					
ANR	3901343	CompoundStatement		14:12:448:485	3901248	1					
ANR	3901344	IdentifierDeclStatement	"int code = abuf_flush_block ( mdev , my ) ;"	339:12:14065:14102	3901248	0	True				
ANR	3901345	IdentifierDecl	"code = abuf_flush_block ( mdev , my )"		3901248	0					
ANR	3901346	IdentifierDeclType	int		3901248	0					
ANR	3901347	Identifier	code		3901248	1					
ANR	3901348	AssignmentExpression	"code = abuf_flush_block ( mdev , my )"		3901248	2		=			
ANR	3901349	Identifier	code		3901248	0					
ANR	3901350	CallExpression	"abuf_flush_block ( mdev , my )"		3901248	1					
ANR	3901351	Callee	abuf_flush_block		3901248	0					
ANR	3901352	Identifier	abuf_flush_block		3901248	0					
ANR	3901353	ArgumentList	mdev		3901248	1					
ANR	3901354	Argument	mdev		3901248	0					
ANR	3901355	Identifier	mdev		3901248	0					
ANR	3901356	Argument	my		3901248	1					
ANR	3901357	Identifier	my		3901248	0					
ANR	3901358	IfStatement	if ( code < 0 )		3901248	1					
ANR	3901359	Condition	code < 0	341:16:14121:14128	3901248	0	True				
ANR	3901360	RelationalExpression	code < 0		3901248	0		<			
ANR	3901361	Identifier	code		3901248	0					
ANR	3901362	PrimaryExpression	0		3901248	1					
ANR	3901363	ReturnStatement	return code ;	342:16:14147:14158	3901248	1	True				
ANR	3901364	Identifier	code		3901248	0					
ANR	3901365	ExpressionStatement	mdev -> mapped_y = my += bh	343:12:14172:14197	3901248	2	True				
ANR	3901366	AssignmentExpression	mdev -> mapped_y = my += bh		3901248	0		=			
ANR	3901367	PtrMemberAccess	mdev -> mapped_y		3901248	0					
ANR	3901368	Identifier	mdev		3901248	0					
ANR	3901369	Identifier	mapped_y		3901248	1					
ANR	3901370	AssignmentExpression	my += bh		3901248	1		+=			
ANR	3901371	Identifier	my		3901248	0					
ANR	3901372	Identifier	bh		3901248	1					
ANR	3901373	IfStatement	if ( ( mdev -> mapped_start = ms += bh ) == mh )		3901248	3					
ANR	3901374	Condition	( mdev -> mapped_start = ms += bh ) == mh	344:16:14215:14251	3901248	0	True				
ANR	3901375	EqualityExpression	( mdev -> mapped_start = ms += bh ) == mh		3901248	0		==			
ANR	3901376	AssignmentExpression	mdev -> mapped_start = ms += bh		3901248	0		=			
ANR	3901377	PtrMemberAccess	mdev -> mapped_start		3901248	0					
ANR	3901378	Identifier	mdev		3901248	0					
ANR	3901379	Identifier	mapped_start		3901248	1					
ANR	3901380	AssignmentExpression	ms += bh		3901248	1		+=			
ANR	3901381	Identifier	ms		3901248	0					
ANR	3901382	Identifier	bh		3901248	1					
ANR	3901383	Identifier	mh		3901248	1					
ANR	3901384	ExpressionStatement	mdev -> mapped_start = ms = 0	345:16:14270:14297	3901248	1	True				
ANR	3901385	AssignmentExpression	mdev -> mapped_start = ms = 0		3901248	0		=			
ANR	3901386	PtrMemberAccess	mdev -> mapped_start		3901248	0					
ANR	3901387	Identifier	mdev		3901248	0					
ANR	3901388	Identifier	mapped_start		3901248	1					
ANR	3901389	AssignmentExpression	ms = 0		3901248	1		=			
ANR	3901390	Identifier	ms		3901248	0					
ANR	3901391	PrimaryExpression	0		3901248	1					
ANR	3901392	ElseStatement	else		3901248	0					
ANR	3901393	CompoundStatement		21:15:697:697	3901248	0					
ANR	3901394	ExpressionStatement	mdev -> mapped_height = mh += bh	348:12:14441:14471	3901248	0	True				
ANR	3901395	AssignmentExpression	mdev -> mapped_height = mh += bh		3901248	0		=			
ANR	3901396	PtrMemberAccess	mdev -> mapped_height		3901248	0					
ANR	3901397	Identifier	mdev		3901248	0					
ANR	3901398	Identifier	mapped_height		3901248	1					
ANR	3901399	AssignmentExpression	mh += bh		3901248	1		+=			
ANR	3901400	Identifier	mh		3901248	0					
ANR	3901401	Identifier	bh		3901248	1					
ANR	3901402	ExpressionStatement	"memset ( scan_line_base ( mdev , ( ms == 0 ? mh : ms ) - bh ) , 0 , bh * mdev -> raster )"	350:8:14491:14582	3901248	1	True				
ANR	3901403	CallExpression	"memset ( scan_line_base ( mdev , ( ms == 0 ? mh : ms ) - bh ) , 0 , bh * mdev -> raster )"		3901248	0					
ANR	3901404	Callee	memset		3901248	0					
ANR	3901405	Identifier	memset		3901248	0					
ANR	3901406	ArgumentList	"scan_line_base ( mdev , ( ms == 0 ? mh : ms ) - bh )"		3901248	1					
ANR	3901407	Argument	"scan_line_base ( mdev , ( ms == 0 ? mh : ms ) - bh )"		3901248	0					
ANR	3901408	CallExpression	"scan_line_base ( mdev , ( ms == 0 ? mh : ms ) - bh )"		3901248	0					
ANR	3901409	Callee	scan_line_base		3901248	0					
ANR	3901410	Identifier	scan_line_base		3901248	0					
ANR	3901411	ArgumentList	mdev		3901248	1					
ANR	3901412	Argument	mdev		3901248	0					
ANR	3901413	Identifier	mdev		3901248	0					
ANR	3901414	Argument	( ms == 0 ? mh : ms ) - bh		3901248	1					
ANR	3901415	AdditiveExpression	( ms == 0 ? mh : ms ) - bh		3901248	0		-			
ANR	3901416	ConditionalExpression	ms == 0 ? mh : ms		3901248	0					
ANR	3901417	Condition	ms == 0		3901248	0					
ANR	3901418	EqualityExpression	ms == 0		3901248	0		==			
ANR	3901419	Identifier	ms		3901248	0					
ANR	3901420	PrimaryExpression	0		3901248	1					
ANR	3901421	Identifier	mh		3901248	1					
ANR	3901422	Identifier	ms		3901248	2					
ANR	3901423	Identifier	bh		3901248	1					
ANR	3901424	Argument	0		3901248	1					
ANR	3901425	PrimaryExpression	0		3901248	0					
ANR	3901426	Argument	bh * mdev -> raster		3901248	2					
ANR	3901427	MultiplicativeExpression	bh * mdev -> raster		3901248	0		*			
ANR	3901428	Identifier	bh		3901248	0					
ANR	3901429	PtrMemberAccess	mdev -> raster		3901248	1					
ANR	3901430	Identifier	mdev		3901248	0					
ANR	3901431	Identifier	raster		3901248	1					
ANR	3901432	ExpressionStatement	tby = ty - my + ms	354:4:14641:14659	3901248	11	True				
ANR	3901433	AssignmentExpression	tby = ty - my + ms		3901248	0		=			
ANR	3901434	Identifier	tby		3901248	0					
ANR	3901435	AdditiveExpression	ty - my + ms		3901248	1		-			
ANR	3901436	Identifier	ty		3901248	0					
ANR	3901437	AdditiveExpression	my + ms		3901248	1		+			
ANR	3901438	Identifier	my		3901248	0					
ANR	3901439	Identifier	ms		3901248	1					
ANR	3901440	IfStatement	if ( tby < mdev -> height )		3901248	12					
ANR	3901441	Condition	tby < mdev -> height	355:8:14669:14686	3901248	0	True				
ANR	3901442	RelationalExpression	tby < mdev -> height		3901248	0		<			
ANR	3901443	Identifier	tby		3901248	0					
ANR	3901444	PtrMemberAccess	mdev -> height		3901248	1					
ANR	3901445	Identifier	mdev		3901248	0					
ANR	3901446	Identifier	height		3901248	1					
ANR	3901447	CompoundStatement		30:28:1072:1072	3901248	1					
ANR	3901448	ExpressionStatement	tbh = mdev -> height - ms	356:8:14699:14722	3901248	0	True				
ANR	3901449	AssignmentExpression	tbh = mdev -> height - ms		3901248	0		=			
ANR	3901450	Identifier	tbh		3901248	0					
ANR	3901451	AdditiveExpression	mdev -> height - ms		3901248	1		-			
ANR	3901452	PtrMemberAccess	mdev -> height		3901248	0					
ANR	3901453	Identifier	mdev		3901248	0					
ANR	3901454	Identifier	height		3901248	1					
ANR	3901455	Identifier	ms		3901248	1					
ANR	3901456	IfStatement	if ( tbh > mh )		3901248	1					
ANR	3901457	Condition	tbh > mh	357:12:14736:14743	3901248	0	True				
ANR	3901458	RelationalExpression	tbh > mh		3901248	0		>			
ANR	3901459	Identifier	tbh		3901248	0					
ANR	3901460	Identifier	mh		3901248	1					
ANR	3901461	ExpressionStatement	tbh = mh	358:12:14758:14766	3901248	1	True				
ANR	3901462	AssignmentExpression	tbh = mh		3901248	0		=			
ANR	3901463	Identifier	tbh		3901248	0					
ANR	3901464	Identifier	mh		3901248	1					
ANR	3901465	ExpressionStatement	tbh -= tby - ms	359:8:14776:14791	3901248	2	True				
ANR	3901466	AssignmentExpression	tbh -= tby - ms		3901248	0		-=			
ANR	3901467	Identifier	tbh		3901248	0					
ANR	3901468	AdditiveExpression	tby - ms		3901248	1		-			
ANR	3901469	Identifier	tby		3901248	0					
ANR	3901470	Identifier	ms		3901248	1					
ANR	3901471	ElseStatement	else		3901248	0					
ANR	3901472	CompoundStatement		35:11:1187:1187	3901248	0					
ANR	3901473	ExpressionStatement	tby -= mdev -> height	361:8:14834:14853	3901248	0	True				
ANR	3901474	AssignmentExpression	tby -= mdev -> height		3901248	0		-=			
ANR	3901475	Identifier	tby		3901248	0					
ANR	3901476	PtrMemberAccess	mdev -> height		3901248	1					
ANR	3901477	Identifier	mdev		3901248	0					
ANR	3901478	Identifier	height		3901248	1					
ANR	3901479	ExpressionStatement	tbh = ms + mh - dev -> height - tby	362:8:14863:14896	3901248	1	True				
ANR	3901480	AssignmentExpression	tbh = ms + mh - dev -> height - tby		3901248	0		=			
ANR	3901481	Identifier	tbh		3901248	0					
ANR	3901482	AdditiveExpression	ms + mh - dev -> height - tby		3901248	1		+			
ANR	3901483	Identifier	ms		3901248	0					
ANR	3901484	AdditiveExpression	mh - dev -> height - tby		3901248	1		-			
ANR	3901485	Identifier	mh		3901248	0					
ANR	3901486	AdditiveExpression	dev -> height - tby		3901248	1		-			
ANR	3901487	PtrMemberAccess	dev -> height		3901248	0					
ANR	3901488	Identifier	dev		3901248	0					
ANR	3901489	Identifier	height		3901248	1					
ANR	3901490	Identifier	tby		3901248	1					
ANR	3901491	ExpressionStatement	"if_debug7m ( 'V' , mdev -> memory , ""[V]abuf: my=%d, mh=%d, ms=%d, ty=%d, th=%d, tby=%d, tbh=%d\\n"" , my , mh , ms , ty , th , tby , tbh )"	364:4:14908:15061	3901248	13	True				
ANR	3901492	CallExpression	"if_debug7m ( 'V' , mdev -> memory , ""[V]abuf: my=%d, mh=%d, ms=%d, ty=%d, th=%d, tby=%d, tbh=%d\\n"" , my , mh , ms , ty , th , tby , tbh )"		3901248	0					
ANR	3901493	Callee	if_debug7m		3901248	0					
ANR	3901494	Identifier	if_debug7m		3901248	0					
ANR	3901495	ArgumentList	'V'		3901248	1					
ANR	3901496	Argument	'V'		3901248	0					
ANR	3901497	PrimaryExpression	'V'		3901248	0					
ANR	3901498	Argument	mdev -> memory		3901248	1					
ANR	3901499	PtrMemberAccess	mdev -> memory		3901248	0					
ANR	3901500	Identifier	mdev		3901248	0					
ANR	3901501	Identifier	memory		3901248	1					
ANR	3901502	Argument	"""[V]abuf: my=%d, mh=%d, ms=%d, ty=%d, th=%d, tby=%d, tbh=%d\\n"""		3901248	2					
ANR	3901503	PrimaryExpression	"""[V]abuf: my=%d, mh=%d, ms=%d, ty=%d, th=%d, tby=%d, tbh=%d\\n"""		3901248	0					
ANR	3901504	Argument	my		3901248	3					
ANR	3901505	Identifier	my		3901248	0					
ANR	3901506	Argument	mh		3901248	4					
ANR	3901507	Identifier	mh		3901248	0					
ANR	3901508	Argument	ms		3901248	5					
ANR	3901509	Identifier	ms		3901248	0					
ANR	3901510	Argument	ty		3901248	6					
ANR	3901511	Identifier	ty		3901248	0					
ANR	3901512	Argument	th		3901248	7					
ANR	3901513	Identifier	th		3901248	0					
ANR	3901514	Argument	tby		3901248	8					
ANR	3901515	Identifier	tby		3901248	0					
ANR	3901516	Argument	tbh		3901248	9					
ANR	3901517	Identifier	tbh		3901248	0					
ANR	3901518	IfStatement	if ( tbh > th )		3901248	14					
ANR	3901519	Condition	tbh > th	367:8:15071:15078	3901248	0	True				
ANR	3901520	RelationalExpression	tbh > th		3901248	0		>			
ANR	3901521	Identifier	tbh		3901248	0					
ANR	3901522	Identifier	th		3901248	1					
ANR	3901523	ExpressionStatement	tbh = th	368:8:15089:15097	3901248	1	True				
ANR	3901524	AssignmentExpression	tbh = th		3901248	0		=			
ANR	3901525	Identifier	tbh		3901248	0					
ANR	3901526	Identifier	th		3901248	1					
ANR	3901527	ExpressionStatement	pyt -> height_left = th - tbh	369:4:15103:15130	3901248	15	True				
ANR	3901528	AssignmentExpression	pyt -> height_left = th - tbh		3901248	0		=			
ANR	3901529	PtrMemberAccess	pyt -> height_left		3901248	0					
ANR	3901530	Identifier	pyt		3901248	0					
ANR	3901531	Identifier	height_left		3901248	1					
ANR	3901532	AdditiveExpression	th - tbh		3901248	1		-			
ANR	3901533	Identifier	th		3901248	0					
ANR	3901534	Identifier	tbh		3901248	1					
ANR	3901535	ExpressionStatement	pyt -> transfer_y = tby	370:4:15136:15157	3901248	16	True				
ANR	3901536	AssignmentExpression	pyt -> transfer_y = tby		3901248	0		=			
ANR	3901537	PtrMemberAccess	pyt -> transfer_y		3901248	0					
ANR	3901538	Identifier	pyt		3901248	0					
ANR	3901539	Identifier	transfer_y		3901248	1					
ANR	3901540	Identifier	tby		3901248	1					
ANR	3901541	ExpressionStatement	pyt -> transfer_height = tbh	371:4:15163:15189	3901248	17	True				
ANR	3901542	AssignmentExpression	pyt -> transfer_height = tbh		3901248	0		=			
ANR	3901543	PtrMemberAccess	pyt -> transfer_height		3901248	0					
ANR	3901544	Identifier	pyt		3901248	0					
ANR	3901545	Identifier	transfer_height		3901248	1					
ANR	3901546	Identifier	tbh		3901248	1					
ANR	3901547	ReturnStatement	return 0 ;	372:4:15195:15203	3901248	18	True				
ANR	3901548	PrimaryExpression	0		3901248	0					
ANR	3901549	ReturnType	static int		3901248	1					
ANR	3901550	Identifier	y_transfer_next		3901248	2					
ANR	3901551	ParameterList	"y_transfer * pyt , gx_device * dev"		3901248	3					
ANR	3901552	Parameter	y_transfer * pyt	325:16:13581:13596	3901248	0	True				
ANR	3901553	ParameterType	y_transfer *		3901248	0					
ANR	3901554	Identifier	pyt		3901248	1					
ANR	3901555	Parameter	gx_device * dev	325:34:13599:13613	3901248	1	True				
ANR	3901556	ParameterType	gx_device *		3901248	0					
ANR	3901557	Identifier	dev		3901248	1					
ANR	3901558	CFGEntryNode	ENTRY		3901248		True				
ANR	3901559	CFGExitNode	EXIT		3901248		True				
ANR	3901560	Symbol	* dev		3901248						
ANR	3901561	Symbol	mdev -> height		3901248						
ANR	3901562	Symbol	code		3901248						
ANR	3901563	Symbol	abuf_flush_block		3901248						
ANR	3901564	Symbol	ty		3901248						
ANR	3901565	Symbol	bh		3901248						
ANR	3901566	Symbol	dev -> height		3901248						
ANR	3901567	Symbol	pyt -> transfer_y		3901248						
ANR	3901568	Symbol	pyt		3901248						
ANR	3901569	Symbol	pyt -> transfer_height		3901248						
ANR	3901570	Symbol	tby		3901248						
ANR	3901571	Symbol	mdev -> mapped_start		3901248						
ANR	3901572	Symbol	mdev -> raster		3901248						
ANR	3901573	Symbol	dev		3901248						
ANR	3901574	Symbol	mh		3901248						
ANR	3901575	Symbol	mdev -> memory		3901248						
ANR	3901576	Symbol	* mdev		3901248						
ANR	3901577	Symbol	ms		3901248						
ANR	3901578	Symbol	pyt -> height_left		3901248						
ANR	3901579	Symbol	pyt -> y_next		3901248						
ANR	3901580	Symbol	my		3901248						
ANR	3901581	Symbol	mdev -> log2_scale		3901248						
ANR	3901582	Symbol	mdev -> mapped_height		3901248						
ANR	3901583	Symbol	mdev -> mapped_y		3901248						
ANR	3901584	Symbol	th		3901248						
ANR	3901585	Symbol	* pyt		3901248						
ANR	3901586	Symbol	scan_line_base		3901248						
ANR	3901587	Symbol	mdev		3901248						
ANR	3901588	Symbol	tbh		3901248						
ANR	3901589	Symbol	mdev -> log2_scale . y		3901248						
ANR	3901590	Function	mem_abuf_copy_mono	376:0:15236:16358							
ANR	3901591	FunctionDef	"mem_abuf_copy_mono (gx_device * dev , const byte * base , int sourcex , int sraster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index zero , gx_color_index one)"		3901590	0					
ANR	3901592	CompoundStatement		380:0:15437:16358	3901590	0					
ANR	3901593	Statement	gx_device_memory	381:4:15443:15458	3901590	0	True				
ANR	3901594	Statement	*	381:21:15460:15460	3901590	1	True				
ANR	3901595	Statement	const	381:23:15462:15466	3901590	2	True				
ANR	3901596	ExpressionStatement	mdev = ( gx_device_memory * ) dev	381:29:15468:15498	3901590	3	True				
ANR	3901597	AssignmentExpression	mdev = ( gx_device_memory * ) dev		3901590	0		=			
ANR	3901598	Identifier	mdev		3901590	0					
ANR	3901599	CastExpression	( gx_device_memory * ) dev		3901590	1					
ANR	3901600	CastTarget	gx_device_memory *		3901590	0					
ANR	3901601	Identifier	dev		3901590	1					
ANR	3901602	IdentifierDeclStatement	y_transfer yt ;	382:4:15504:15517	3901590	4	True				
ANR	3901603	IdentifierDecl	yt		3901590	0					
ANR	3901604	IdentifierDeclType	y_transfer		3901590	0					
ANR	3901605	Identifier	yt		3901590	1					
ANR	3901606	IfStatement	if ( zero != gx_no_color_index || one == gx_no_color_index )		3901590	5					
ANR	3901607	Condition	zero != gx_no_color_index || one == gx_no_color_index	384:8:15528:15580	3901590	0	True				
ANR	3901608	OrExpression	zero != gx_no_color_index || one == gx_no_color_index		3901590	0		||			
ANR	3901609	EqualityExpression	zero != gx_no_color_index		3901590	0		!=			
ANR	3901610	Identifier	zero		3901590	0					
ANR	3901611	Identifier	gx_no_color_index		3901590	1					
ANR	3901612	EqualityExpression	one == gx_no_color_index		3901590	1		==			
ANR	3901613	Identifier	one		3901590	0					
ANR	3901614	Identifier	gx_no_color_index		3901590	1					
ANR	3901615	ExpressionStatement	return_error ( gs_error_undefinedresult )	385:8:15591:15629	3901590	1	True				
ANR	3901616	CallExpression	return_error ( gs_error_undefinedresult )		3901590	0					
ANR	3901617	Callee	return_error		3901590	0					
ANR	3901618	Identifier	return_error		3901590	0					
ANR	3901619	ArgumentList	gs_error_undefinedresult		3901590	1					
ANR	3901620	Argument	gs_error_undefinedresult		3901590	0					
ANR	3901621	Identifier	gs_error_undefinedresult		3901590	0					
ANR	3901622	ExpressionStatement	x -= mdev -> mapped_x	386:4:15635:15654	3901590	6	True				
ANR	3901623	AssignmentExpression	x -= mdev -> mapped_x		3901590	0		-=			
ANR	3901624	Identifier	x		3901590	0					
ANR	3901625	PtrMemberAccess	mdev -> mapped_x		3901590	1					
ANR	3901626	Identifier	mdev		3901590	0					
ANR	3901627	Identifier	mapped_x		3901590	1					
ANR	3901628	ExpressionStatement	"fit_copy_xyw ( dev , base , sourcex , sraster , id , x , y , w , h )"	387:4:15660:15717	3901590	7	True				
ANR	3901629	CallExpression	"fit_copy_xyw ( dev , base , sourcex , sraster , id , x , y , w , h )"		3901590	0					
ANR	3901630	Callee	fit_copy_xyw		3901590	0					
ANR	3901631	Identifier	fit_copy_xyw		3901590	0					
ANR	3901632	ArgumentList	dev		3901590	1					
ANR	3901633	Argument	dev		3901590	0					
ANR	3901634	Identifier	dev		3901590	0					
ANR	3901635	Argument	base		3901590	1					
ANR	3901636	Identifier	base		3901590	0					
ANR	3901637	Argument	sourcex		3901590	2					
ANR	3901638	Identifier	sourcex		3901590	0					
ANR	3901639	Argument	sraster		3901590	3					
ANR	3901640	Identifier	sraster		3901590	0					
ANR	3901641	Argument	id		3901590	4					
ANR	3901642	Identifier	id		3901590	0					
ANR	3901643	Argument	x		3901590	5					
ANR	3901644	Identifier	x		3901590	0					
ANR	3901645	Argument	y		3901590	6					
ANR	3901646	Identifier	y		3901590	0					
ANR	3901647	Argument	w		3901590	7					
ANR	3901648	Identifier	w		3901590	0					
ANR	3901649	Argument	h		3901590	8					
ANR	3901650	Identifier	h		3901590	0					
ANR	3901651	IfStatement	if ( w <= 0 || h <= 0 )		3901590	8					
ANR	3901652	Condition	w <= 0 || h <= 0	388:8:15747:15762	3901590	0	True				
ANR	3901653	OrExpression	w <= 0 || h <= 0		3901590	0		||			
ANR	3901654	RelationalExpression	w <= 0		3901590	0		<=			
ANR	3901655	Identifier	w		3901590	0					
ANR	3901656	PrimaryExpression	0		3901590	1					
ANR	3901657	RelationalExpression	h <= 0		3901590	1		<=			
ANR	3901658	Identifier	h		3901590	0					
ANR	3901659	PrimaryExpression	0		3901590	1					
ANR	3901660	ReturnStatement	return 0 ;	389:8:15773:15781	3901590	1	True				
ANR	3901661	PrimaryExpression	0		3901590	0					
ANR	3901662	ExpressionStatement	mdev -> save_color = one	390:4:15787:15809	3901590	9	True				
ANR	3901663	AssignmentExpression	mdev -> save_color = one		3901590	0		=			
ANR	3901664	PtrMemberAccess	mdev -> save_color		3901590	0					
ANR	3901665	Identifier	mdev		3901590	0					
ANR	3901666	Identifier	save_color		3901590	1					
ANR	3901667	Identifier	one		3901590	1					
ANR	3901668	ExpressionStatement	"y_transfer_init ( & yt , dev , y , h )"	391:4:15815:15846	3901590	10	True				
ANR	3901669	CallExpression	"y_transfer_init ( & yt , dev , y , h )"		3901590	0					
ANR	3901670	Callee	y_transfer_init		3901590	0					
ANR	3901671	Identifier	y_transfer_init		3901590	0					
ANR	3901672	ArgumentList	& yt		3901590	1					
ANR	3901673	Argument	& yt		3901590	0					
ANR	3901674	UnaryOperationExpression	& yt		3901590	0					
ANR	3901675	UnaryOperator	&		3901590	0					
ANR	3901676	Identifier	yt		3901590	1					
ANR	3901677	Argument	dev		3901590	1					
ANR	3901678	Identifier	dev		3901590	0					
ANR	3901679	Argument	y		3901590	2					
ANR	3901680	Identifier	y		3901590	0					
ANR	3901681	Argument	h		3901590	3					
ANR	3901682	Identifier	h		3901590	0					
ANR	3901683	WhileStatement	while ( yt . height_left > 0 )		3901590	11					
ANR	3901684	Condition	yt . height_left > 0	392:11:15859:15876	3901590	0	True				
ANR	3901685	RelationalExpression	yt . height_left > 0		3901590	0		>			
ANR	3901686	MemberAccess	yt . height_left		3901590	0					
ANR	3901687	Identifier	yt		3901590	0					
ANR	3901688	Identifier	height_left		3901590	1					
ANR	3901689	PrimaryExpression	0		3901590	1					
ANR	3901690	CompoundStatement		14:8:451:487	3901590	1					
ANR	3901691	IdentifierDeclStatement	"int code = y_transfer_next ( & yt , dev ) ;"	393:8:15889:15925	3901590	0	True				
ANR	3901692	IdentifierDecl	"code = y_transfer_next ( & yt , dev )"		3901590	0					
ANR	3901693	IdentifierDeclType	int		3901590	0					
ANR	3901694	Identifier	code		3901590	1					
ANR	3901695	AssignmentExpression	"code = y_transfer_next ( & yt , dev )"		3901590	2		=			
ANR	3901696	Identifier	code		3901590	0					
ANR	3901697	CallExpression	"y_transfer_next ( & yt , dev )"		3901590	1					
ANR	3901698	Callee	y_transfer_next		3901590	0					
ANR	3901699	Identifier	y_transfer_next		3901590	0					
ANR	3901700	ArgumentList	& yt		3901590	1					
ANR	3901701	Argument	& yt		3901590	0					
ANR	3901702	UnaryOperationExpression	& yt		3901590	0					
ANR	3901703	UnaryOperator	&		3901590	0					
ANR	3901704	Identifier	yt		3901590	1					
ANR	3901705	Argument	dev		3901590	1					
ANR	3901706	Identifier	dev		3901590	0					
ANR	3901707	IfStatement	if ( code < 0 )		3901590	1					
ANR	3901708	Condition	code < 0	395:12:15940:15947	3901590	0	True				
ANR	3901709	RelationalExpression	code < 0		3901590	0		<			
ANR	3901710	Identifier	code		3901590	0					
ANR	3901711	PrimaryExpression	0		3901590	1					
ANR	3901712	ReturnStatement	return code ;	396:12:15962:15973	3901590	1	True				
ANR	3901713	Identifier	code		3901590	0					
ANR	3901714	ExpressionStatement	"( * dev_proc ( & mem_mono_device , copy_mono ) ) ( dev , base + ( yt . y_next - y ) * sraster , sourcex , sraster , gx_no_bitmap_id , x , yt . transfer_y , w , yt . transfer_height , gx_no_color_index , ( gx_color_index ) 1 )"	397:8:15983:16336	3901590	2	True				
ANR	3901715	CallExpression	"( * dev_proc ( & mem_mono_device , copy_mono ) ) ( dev , base + ( yt . y_next - y ) * sraster , sourcex , sraster , gx_no_bitmap_id , x , yt . transfer_y , w , yt . transfer_height , gx_no_color_index , ( gx_color_index ) 1 )"		3901590	0					
ANR	3901716	Callee	"* dev_proc ( & mem_mono_device , copy_mono )"		3901590	0					
ANR	3901717	UnaryOperationExpression	"* dev_proc ( & mem_mono_device , copy_mono )"		3901590	0					
ANR	3901718	UnaryOperator	*		3901590	0					
ANR	3901719	CallExpression	"dev_proc ( & mem_mono_device , copy_mono )"		3901590	1					
ANR	3901720	Callee	dev_proc		3901590	0					
ANR	3901721	Identifier	dev_proc		3901590	0					
ANR	3901722	ArgumentList	& mem_mono_device		3901590	1					
ANR	3901723	Argument	& mem_mono_device		3901590	0					
ANR	3901724	UnaryOperationExpression	& mem_mono_device		3901590	0					
ANR	3901725	UnaryOperator	&		3901590	0					
ANR	3901726	Identifier	mem_mono_device		3901590	1					
ANR	3901727	Argument	copy_mono		3901590	1					
ANR	3901728	Identifier	copy_mono		3901590	0					
ANR	3901729	ArgumentList	dev		3901590	1					
ANR	3901730	Argument	dev		3901590	0					
ANR	3901731	Identifier	dev		3901590	0					
ANR	3901732	Argument	base + ( yt . y_next - y ) * sraster		3901590	1					
ANR	3901733	AdditiveExpression	base + ( yt . y_next - y ) * sraster		3901590	0		+			
ANR	3901734	Identifier	base		3901590	0					
ANR	3901735	MultiplicativeExpression	( yt . y_next - y ) * sraster		3901590	1		*			
ANR	3901736	AdditiveExpression	yt . y_next - y		3901590	0		-			
ANR	3901737	MemberAccess	yt . y_next		3901590	0					
ANR	3901738	Identifier	yt		3901590	0					
ANR	3901739	Identifier	y_next		3901590	1					
ANR	3901740	Identifier	y		3901590	1					
ANR	3901741	Identifier	sraster		3901590	1					
ANR	3901742	Argument	sourcex		3901590	2					
ANR	3901743	Identifier	sourcex		3901590	0					
ANR	3901744	Argument	sraster		3901590	3					
ANR	3901745	Identifier	sraster		3901590	0					
ANR	3901746	Argument	gx_no_bitmap_id		3901590	4					
ANR	3901747	Identifier	gx_no_bitmap_id		3901590	0					
ANR	3901748	Argument	x		3901590	5					
ANR	3901749	Identifier	x		3901590	0					
ANR	3901750	Argument	yt . transfer_y		3901590	6					
ANR	3901751	MemberAccess	yt . transfer_y		3901590	0					
ANR	3901752	Identifier	yt		3901590	0					
ANR	3901753	Identifier	transfer_y		3901590	1					
ANR	3901754	Argument	w		3901590	7					
ANR	3901755	Identifier	w		3901590	0					
ANR	3901756	Argument	yt . transfer_height		3901590	8					
ANR	3901757	MemberAccess	yt . transfer_height		3901590	0					
ANR	3901758	Identifier	yt		3901590	0					
ANR	3901759	Identifier	transfer_height		3901590	1					
ANR	3901760	Argument	gx_no_color_index		3901590	9					
ANR	3901761	Identifier	gx_no_color_index		3901590	0					
ANR	3901762	Argument	( gx_color_index ) 1		3901590	10					
ANR	3901763	CastExpression	( gx_color_index ) 1		3901590	0					
ANR	3901764	CastTarget	gx_color_index		3901590	0					
ANR	3901765	PrimaryExpression	1		3901590	1					
ANR	3901766	ReturnStatement	return 0 ;	403:4:16348:16356	3901590	12	True				
ANR	3901767	PrimaryExpression	0		3901590	0					
ANR	3901768	ReturnType	static int		3901590	1					
ANR	3901769	Identifier	mem_abuf_copy_mono		3901590	2					
ANR	3901770	ParameterList	"gx_device * dev , const byte * base , int sourcex , int sraster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index zero , gx_color_index one"		3901590	3					
ANR	3901771	Parameter	gx_device * dev	377:19:15266:15280	3901590	0	True				
ANR	3901772	ParameterType	gx_device *		3901590	0					
ANR	3901773	Identifier	dev		3901590	1					
ANR	3901774	Parameter	const byte * base	378:15:15298:15314	3901590	1	True				
ANR	3901775	ParameterType	const byte *		3901590	0					
ANR	3901776	Identifier	base		3901590	1					
ANR	3901777	Parameter	int sourcex	378:34:15317:15327	3901590	2	True				
ANR	3901778	ParameterType	int		3901590	0					
ANR	3901779	Identifier	sourcex		3901590	1					
ANR	3901780	Parameter	int sraster	378:47:15330:15340	3901590	3	True				
ANR	3901781	ParameterType	int		3901590	0					
ANR	3901782	Identifier	sraster		3901590	1					
ANR	3901783	Parameter	gx_bitmap_id id	378:60:15343:15357	3901590	4	True				
ANR	3901784	ParameterType	gx_bitmap_id		3901590	0					
ANR	3901785	Identifier	id		3901590	1					
ANR	3901786	Parameter	int x	379:8:15368:15372	3901590	5	True				
ANR	3901787	ParameterType	int		3901590	0					
ANR	3901788	Identifier	x		3901590	1					
ANR	3901789	Parameter	int y	379:15:15375:15379	3901590	6	True				
ANR	3901790	ParameterType	int		3901590	0					
ANR	3901791	Identifier	y		3901590	1					
ANR	3901792	Parameter	int w	379:22:15382:15386	3901590	7	True				
ANR	3901793	ParameterType	int		3901590	0					
ANR	3901794	Identifier	w		3901590	1					
ANR	3901795	Parameter	int h	379:29:15389:15393	3901590	8	True				
ANR	3901796	ParameterType	int		3901590	0					
ANR	3901797	Identifier	h		3901590	1					
ANR	3901798	Parameter	gx_color_index zero	379:36:15396:15414	3901590	9	True				
ANR	3901799	ParameterType	gx_color_index		3901590	0					
ANR	3901800	Identifier	zero		3901590	1					
ANR	3901801	Parameter	gx_color_index one	379:57:15417:15434	3901590	10	True				
ANR	3901802	ParameterType	gx_color_index		3901590	0					
ANR	3901803	Identifier	one		3901590	1					
ANR	3901804	CFGEntryNode	ENTRY		3901590		True				
ANR	3901805	CFGExitNode	EXIT		3901590		True				
ANR	3901806	Symbol	sourcex		3901590						
ANR	3901807	Symbol	code		3901590						
ANR	3901808	Symbol	yt . y_next		3901590						
ANR	3901809	Symbol	& yt		3901590						
ANR	3901810	Symbol	mdev -> save_color		3901590						
ANR	3901811	Symbol	yt . transfer_height		3901590						
ANR	3901812	Symbol	gs_error_undefinedresult		3901590						
ANR	3901813	Symbol	zero		3901590						
ANR	3901814	Symbol	gx_no_color_index		3901590						
ANR	3901815	Symbol	dev		3901590						
ANR	3901816	Symbol	dev_proc		3901590						
ANR	3901817	Symbol	copy_mono		3901590						
ANR	3901818	Symbol	id		3901590						
ANR	3901819	Symbol	yt		3901590						
ANR	3901820	Symbol	yt . transfer_y		3901590						
ANR	3901821	Symbol	* mdev		3901590						
ANR	3901822	Symbol	yt . height_left		3901590						
ANR	3901823	Symbol	one		3901590						
ANR	3901824	Symbol	h		3901590						
ANR	3901825	Symbol	mdev -> mapped_x		3901590						
ANR	3901826	Symbol	sraster		3901590						
ANR	3901827	Symbol	gx_no_bitmap_id		3901590						
ANR	3901828	Symbol	y_transfer_next		3901590						
ANR	3901829	Symbol	w		3901590						
ANR	3901830	Symbol	x		3901590						
ANR	3901831	Symbol	y		3901590						
ANR	3901832	Symbol	mdev		3901590						
ANR	3901833	Symbol	& mem_mono_device		3901590						
ANR	3901834	Symbol	base		3901590						
ANR	3901835	Function	mem_abuf_fill_rectangle	407:0:16385:17161							
ANR	3901836	FunctionDef	"mem_abuf_fill_rectangle (gx_device * dev , int x , int y , int w , int h , gx_color_index color)"		3901835	0					
ANR	3901837	CompoundStatement		410:0:16511:17161	3901835	0					
ANR	3901838	Statement	gx_device_memory	411:4:16517:16532	3901835	0	True				
ANR	3901839	Statement	*	411:21:16534:16534	3901835	1	True				
ANR	3901840	Statement	const	411:23:16536:16540	3901835	2	True				
ANR	3901841	ExpressionStatement	mdev = ( gx_device_memory * ) dev	411:29:16542:16572	3901835	3	True				
ANR	3901842	AssignmentExpression	mdev = ( gx_device_memory * ) dev		3901835	0		=			
ANR	3901843	Identifier	mdev		3901835	0					
ANR	3901844	CastExpression	( gx_device_memory * ) dev		3901835	1					
ANR	3901845	CastTarget	gx_device_memory *		3901835	0					
ANR	3901846	Identifier	dev		3901835	1					
ANR	3901847	IdentifierDeclStatement	y_transfer yt ;	412:4:16578:16591	3901835	4	True				
ANR	3901848	IdentifierDecl	yt		3901835	0					
ANR	3901849	IdentifierDeclType	y_transfer		3901835	0					
ANR	3901850	Identifier	yt		3901835	1					
ANR	3901851	ExpressionStatement	x -= mdev -> mapped_x	414:4:16598:16617	3901835	5	True				
ANR	3901852	AssignmentExpression	x -= mdev -> mapped_x		3901835	0		-=			
ANR	3901853	Identifier	x		3901835	0					
ANR	3901854	PtrMemberAccess	mdev -> mapped_x		3901835	1					
ANR	3901855	Identifier	mdev		3901835	0					
ANR	3901856	Identifier	mapped_x		3901835	1					
ANR	3901857	ExpressionStatement	"fit_fill_xy ( dev , x , y , w , h )"	415:4:16623:16651	3901835	6	True				
ANR	3901858	CallExpression	"fit_fill_xy ( dev , x , y , w , h )"		3901835	0					
ANR	3901859	Callee	fit_fill_xy		3901835	0					
ANR	3901860	Identifier	fit_fill_xy		3901835	0					
ANR	3901861	ArgumentList	dev		3901835	1					
ANR	3901862	Argument	dev		3901835	0					
ANR	3901863	Identifier	dev		3901835	0					
ANR	3901864	Argument	x		3901835	1					
ANR	3901865	Identifier	x		3901835	0					
ANR	3901866	Argument	y		3901835	2					
ANR	3901867	Identifier	y		3901835	0					
ANR	3901868	Argument	w		3901835	3					
ANR	3901869	Identifier	w		3901835	0					
ANR	3901870	Argument	h		3901835	4					
ANR	3901871	Identifier	h		3901835	0					
ANR	3901872	ExpressionStatement	"fit_fill_w ( dev , x , w )"	416:4:16657:16678	3901835	7	True				
ANR	3901873	CallExpression	"fit_fill_w ( dev , x , w )"		3901835	0					
ANR	3901874	Callee	fit_fill_w		3901835	0					
ANR	3901875	Identifier	fit_fill_w		3901835	0					
ANR	3901876	ArgumentList	dev		3901835	1					
ANR	3901877	Argument	dev		3901835	0					
ANR	3901878	Identifier	dev		3901835	0					
ANR	3901879	Argument	x		3901835	1					
ANR	3901880	Identifier	x		3901835	0					
ANR	3901881	Argument	w		3901835	2					
ANR	3901882	Identifier	w		3901835	0					
ANR	3901883	ExpressionStatement	mdev -> save_color = color	418:4:16738:16762	3901835	8	True				
ANR	3901884	AssignmentExpression	mdev -> save_color = color		3901835	0		=			
ANR	3901885	PtrMemberAccess	mdev -> save_color		3901835	0					
ANR	3901886	Identifier	mdev		3901835	0					
ANR	3901887	Identifier	save_color		3901835	1					
ANR	3901888	Identifier	color		3901835	1					
ANR	3901889	ExpressionStatement	"y_transfer_init ( & yt , dev , y , h )"	419:4:16768:16799	3901835	9	True				
ANR	3901890	CallExpression	"y_transfer_init ( & yt , dev , y , h )"		3901835	0					
ANR	3901891	Callee	y_transfer_init		3901835	0					
ANR	3901892	Identifier	y_transfer_init		3901835	0					
ANR	3901893	ArgumentList	& yt		3901835	1					
ANR	3901894	Argument	& yt		3901835	0					
ANR	3901895	UnaryOperationExpression	& yt		3901835	0					
ANR	3901896	UnaryOperator	&		3901835	0					
ANR	3901897	Identifier	yt		3901835	1					
ANR	3901898	Argument	dev		3901835	1					
ANR	3901899	Identifier	dev		3901835	0					
ANR	3901900	Argument	y		3901835	2					
ANR	3901901	Identifier	y		3901835	0					
ANR	3901902	Argument	h		3901835	3					
ANR	3901903	Identifier	h		3901835	0					
ANR	3901904	WhileStatement	while ( yt . height_left > 0 )		3901835	10					
ANR	3901905	Condition	yt . height_left > 0	420:11:16812:16829	3901835	0	True				
ANR	3901906	RelationalExpression	yt . height_left > 0		3901835	0		>			
ANR	3901907	MemberAccess	yt . height_left		3901835	0					
ANR	3901908	Identifier	yt		3901835	0					
ANR	3901909	Identifier	height_left		3901835	1					
ANR	3901910	PrimaryExpression	0		3901835	1					
ANR	3901911	CompoundStatement		12:8:330:366	3901835	1					
ANR	3901912	IdentifierDeclStatement	"int code = y_transfer_next ( & yt , dev ) ;"	421:8:16842:16878	3901835	0	True				
ANR	3901913	IdentifierDecl	"code = y_transfer_next ( & yt , dev )"		3901835	0					
ANR	3901914	IdentifierDeclType	int		3901835	0					
ANR	3901915	Identifier	code		3901835	1					
ANR	3901916	AssignmentExpression	"code = y_transfer_next ( & yt , dev )"		3901835	2		=			
ANR	3901917	Identifier	code		3901835	0					
ANR	3901918	CallExpression	"y_transfer_next ( & yt , dev )"		3901835	1					
ANR	3901919	Callee	y_transfer_next		3901835	0					
ANR	3901920	Identifier	y_transfer_next		3901835	0					
ANR	3901921	ArgumentList	& yt		3901835	1					
ANR	3901922	Argument	& yt		3901835	0					
ANR	3901923	UnaryOperationExpression	& yt		3901835	0					
ANR	3901924	UnaryOperator	&		3901835	0					
ANR	3901925	Identifier	yt		3901835	1					
ANR	3901926	Argument	dev		3901835	1					
ANR	3901927	Identifier	dev		3901835	0					
ANR	3901928	IfStatement	if ( code < 0 )		3901835	1					
ANR	3901929	Condition	code < 0	423:12:16893:16900	3901835	0	True				
ANR	3901930	RelationalExpression	code < 0		3901835	0		<			
ANR	3901931	Identifier	code		3901835	0					
ANR	3901932	PrimaryExpression	0		3901835	1					
ANR	3901933	ReturnStatement	return code ;	424:12:16915:16926	3901835	1	True				
ANR	3901934	Identifier	code		3901835	0					
ANR	3901935	ExpressionStatement	"( * dev_proc ( & mem_mono_device , fill_rectangle ) ) ( dev , x , yt . transfer_y , w , yt . transfer_height , ( gx_color_index ) 1 )"	425:8:16936:17139	3901835	2	True				
ANR	3901936	CallExpression	"( * dev_proc ( & mem_mono_device , fill_rectangle ) ) ( dev , x , yt . transfer_y , w , yt . transfer_height , ( gx_color_index ) 1 )"		3901835	0					
ANR	3901937	Callee	"* dev_proc ( & mem_mono_device , fill_rectangle )"		3901835	0					
ANR	3901938	UnaryOperationExpression	"* dev_proc ( & mem_mono_device , fill_rectangle )"		3901835	0					
ANR	3901939	UnaryOperator	*		3901835	0					
ANR	3901940	CallExpression	"dev_proc ( & mem_mono_device , fill_rectangle )"		3901835	1					
ANR	3901941	Callee	dev_proc		3901835	0					
ANR	3901942	Identifier	dev_proc		3901835	0					
ANR	3901943	ArgumentList	& mem_mono_device		3901835	1					
ANR	3901944	Argument	& mem_mono_device		3901835	0					
ANR	3901945	UnaryOperationExpression	& mem_mono_device		3901835	0					
ANR	3901946	UnaryOperator	&		3901835	0					
ANR	3901947	Identifier	mem_mono_device		3901835	1					
ANR	3901948	Argument	fill_rectangle		3901835	1					
ANR	3901949	Identifier	fill_rectangle		3901835	0					
ANR	3901950	ArgumentList	dev		3901835	1					
ANR	3901951	Argument	dev		3901835	0					
ANR	3901952	Identifier	dev		3901835	0					
ANR	3901953	Argument	x		3901835	1					
ANR	3901954	Identifier	x		3901835	0					
ANR	3901955	Argument	yt . transfer_y		3901835	2					
ANR	3901956	MemberAccess	yt . transfer_y		3901835	0					
ANR	3901957	Identifier	yt		3901835	0					
ANR	3901958	Identifier	transfer_y		3901835	1					
ANR	3901959	Argument	w		3901835	3					
ANR	3901960	Identifier	w		3901835	0					
ANR	3901961	Argument	yt . transfer_height		3901835	4					
ANR	3901962	MemberAccess	yt . transfer_height		3901835	0					
ANR	3901963	Identifier	yt		3901835	0					
ANR	3901964	Identifier	transfer_height		3901835	1					
ANR	3901965	Argument	( gx_color_index ) 1		3901835	5					
ANR	3901966	CastExpression	( gx_color_index ) 1		3901835	0					
ANR	3901967	CastTarget	gx_color_index		3901835	0					
ANR	3901968	PrimaryExpression	1		3901835	1					
ANR	3901969	ReturnStatement	return 0 ;	429:4:17151:17159	3901835	11	True				
ANR	3901970	PrimaryExpression	0		3901835	0					
ANR	3901971	ReturnType	static int		3901835	1					
ANR	3901972	Identifier	mem_abuf_fill_rectangle		3901835	2					
ANR	3901973	ParameterList	"gx_device * dev , int x , int y , int w , int h , gx_color_index color"		3901835	3					
ANR	3901974	Parameter	gx_device * dev	408:24:16420:16434	3901835	0	True				
ANR	3901975	ParameterType	gx_device *		3901835	0					
ANR	3901976	Identifier	dev		3901835	1					
ANR	3901977	Parameter	int x	408:41:16437:16441	3901835	1	True				
ANR	3901978	ParameterType	int		3901835	0					
ANR	3901979	Identifier	x		3901835	1					
ANR	3901980	Parameter	int y	408:48:16444:16448	3901835	2	True				
ANR	3901981	ParameterType	int		3901835	0					
ANR	3901982	Identifier	y		3901835	1					
ANR	3901983	Parameter	int w	408:55:16451:16455	3901835	3	True				
ANR	3901984	ParameterType	int		3901835	0					
ANR	3901985	Identifier	w		3901835	1					
ANR	3901986	Parameter	int h	408:62:16458:16462	3901835	4	True				
ANR	3901987	ParameterType	int		3901835	0					
ANR	3901988	Identifier	h		3901835	1					
ANR	3901989	Parameter	gx_color_index color	409:24:16489:16508	3901835	5	True				
ANR	3901990	ParameterType	gx_color_index		3901835	0					
ANR	3901991	Identifier	color		3901835	1					
ANR	3901992	CFGEntryNode	ENTRY		3901835		True				
ANR	3901993	CFGExitNode	EXIT		3901835		True				
ANR	3901994	Symbol	yt . height_left		3901835						
ANR	3901995	Symbol	code		3901835						
ANR	3901996	Symbol	color		3901835						
ANR	3901997	Symbol	& yt		3901835						
ANR	3901998	Symbol	h		3901835						
ANR	3901999	Symbol	mdev -> mapped_x		3901835						
ANR	3902000	Symbol	mdev -> save_color		3901835						
ANR	3902001	Symbol	yt . transfer_height		3901835						
ANR	3902002	Symbol	fill_rectangle		3901835						
ANR	3902003	Symbol	dev		3901835						
ANR	3902004	Symbol	y_transfer_next		3901835						
ANR	3902005	Symbol	dev_proc		3901835						
ANR	3902006	Symbol	w		3901835						
ANR	3902007	Symbol	x		3901835						
ANR	3902008	Symbol	y		3901835						
ANR	3902009	Symbol	mdev		3901835						
ANR	3902010	Symbol	yt		3901835						
ANR	3902011	Symbol	& mem_mono_device		3901835						
ANR	3902012	Symbol	yt . transfer_y		3901835						
ANR	3902013	Symbol	* mdev		3901835						
ANR	3902014	Function	mem_abuf_fill_rectangle_hl_color	433:0:17188:18272							
ANR	3902015	FunctionDef	"mem_abuf_fill_rectangle_hl_color (gx_device * dev , const gs_fixed_rect * rect , const gs_gstate * pgs , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath)"		3902014	0					
ANR	3902016	CompoundStatement		438:0:17458:18272	3902014	0					
ANR	3902017	Statement	gx_device_memory	439:4:17464:17479	3902014	0	True				
ANR	3902018	Statement	*	439:21:17481:17481	3902014	1	True				
ANR	3902019	Statement	const	439:23:17483:17487	3902014	2	True				
ANR	3902020	ExpressionStatement	mdev = ( gx_device_memory * ) dev	439:29:17489:17519	3902014	3	True				
ANR	3902021	AssignmentExpression	mdev = ( gx_device_memory * ) dev		3902014	0		=			
ANR	3902022	Identifier	mdev		3902014	0					
ANR	3902023	CastExpression	( gx_device_memory * ) dev		3902014	1					
ANR	3902024	CastTarget	gx_device_memory *		3902014	0					
ANR	3902025	Identifier	dev		3902014	1					
ANR	3902026	IdentifierDeclStatement	y_transfer yt ;	440:4:17525:17538	3902014	4	True				
ANR	3902027	IdentifierDecl	yt		3902014	0					
ANR	3902028	IdentifierDeclType	y_transfer		3902014	0					
ANR	3902029	Identifier	yt		3902014	1					
ANR	3902030	IdentifierDeclStatement	int x = fixed2int ( rect -> p . x ) ;	441:4:17544:17572	3902014	5	True				
ANR	3902031	IdentifierDecl	x = fixed2int ( rect -> p . x )		3902014	0					
ANR	3902032	IdentifierDeclType	int		3902014	0					
ANR	3902033	Identifier	x		3902014	1					
ANR	3902034	AssignmentExpression	x = fixed2int ( rect -> p . x )		3902014	2		=			
ANR	3902035	Identifier	x		3902014	0					
ANR	3902036	CallExpression	fixed2int ( rect -> p . x )		3902014	1					
ANR	3902037	Callee	fixed2int		3902014	0					
ANR	3902038	Identifier	fixed2int		3902014	0					
ANR	3902039	ArgumentList	rect -> p . x		3902014	1					
ANR	3902040	Argument	rect -> p . x		3902014	0					
ANR	3902041	MemberAccess	rect -> p . x		3902014	0					
ANR	3902042	PtrMemberAccess	rect -> p		3902014	0					
ANR	3902043	Identifier	rect		3902014	0					
ANR	3902044	Identifier	p		3902014	1					
ANR	3902045	Identifier	x		3902014	1					
ANR	3902046	IdentifierDeclStatement	int y = fixed2int ( rect -> p . y ) ;	442:4:17578:17606	3902014	6	True				
ANR	3902047	IdentifierDecl	y = fixed2int ( rect -> p . y )		3902014	0					
ANR	3902048	IdentifierDeclType	int		3902014	0					
ANR	3902049	Identifier	y		3902014	1					
ANR	3902050	AssignmentExpression	y = fixed2int ( rect -> p . y )		3902014	2		=			
ANR	3902051	Identifier	y		3902014	0					
ANR	3902052	CallExpression	fixed2int ( rect -> p . y )		3902014	1					
ANR	3902053	Callee	fixed2int		3902014	0					
ANR	3902054	Identifier	fixed2int		3902014	0					
ANR	3902055	ArgumentList	rect -> p . y		3902014	1					
ANR	3902056	Argument	rect -> p . y		3902014	0					
ANR	3902057	MemberAccess	rect -> p . y		3902014	0					
ANR	3902058	PtrMemberAccess	rect -> p		3902014	0					
ANR	3902059	Identifier	rect		3902014	0					
ANR	3902060	Identifier	p		3902014	1					
ANR	3902061	Identifier	y		3902014	1					
ANR	3902062	IdentifierDeclStatement	int w = fixed2int ( rect -> q . x ) - x ;	443:4:17612:17644	3902014	7	True				
ANR	3902063	IdentifierDecl	w = fixed2int ( rect -> q . x ) - x		3902014	0					
ANR	3902064	IdentifierDeclType	int		3902014	0					
ANR	3902065	Identifier	w		3902014	1					
ANR	3902066	AssignmentExpression	w = fixed2int ( rect -> q . x ) - x		3902014	2		=			
ANR	3902067	Identifier	w		3902014	0					
ANR	3902068	AdditiveExpression	fixed2int ( rect -> q . x ) - x		3902014	1		-			
ANR	3902069	CallExpression	fixed2int ( rect -> q . x )		3902014	0					
ANR	3902070	Callee	fixed2int		3902014	0					
ANR	3902071	Identifier	fixed2int		3902014	0					
ANR	3902072	ArgumentList	rect -> q . x		3902014	1					
ANR	3902073	Argument	rect -> q . x		3902014	0					
ANR	3902074	MemberAccess	rect -> q . x		3902014	0					
ANR	3902075	PtrMemberAccess	rect -> q		3902014	0					
ANR	3902076	Identifier	rect		3902014	0					
ANR	3902077	Identifier	q		3902014	1					
ANR	3902078	Identifier	x		3902014	1					
ANR	3902079	Identifier	x		3902014	1					
ANR	3902080	IdentifierDeclStatement	int h = fixed2int ( rect -> q . y ) - y ;	444:4:17650:17682	3902014	8	True				
ANR	3902081	IdentifierDecl	h = fixed2int ( rect -> q . y ) - y		3902014	0					
ANR	3902082	IdentifierDeclType	int		3902014	0					
ANR	3902083	Identifier	h		3902014	1					
ANR	3902084	AssignmentExpression	h = fixed2int ( rect -> q . y ) - y		3902014	2		=			
ANR	3902085	Identifier	h		3902014	0					
ANR	3902086	AdditiveExpression	fixed2int ( rect -> q . y ) - y		3902014	1		-			
ANR	3902087	CallExpression	fixed2int ( rect -> q . y )		3902014	0					
ANR	3902088	Callee	fixed2int		3902014	0					
ANR	3902089	Identifier	fixed2int		3902014	0					
ANR	3902090	ArgumentList	rect -> q . y		3902014	1					
ANR	3902091	Argument	rect -> q . y		3902014	0					
ANR	3902092	MemberAccess	rect -> q . y		3902014	0					
ANR	3902093	PtrMemberAccess	rect -> q		3902014	0					
ANR	3902094	Identifier	rect		3902014	0					
ANR	3902095	Identifier	q		3902014	1					
ANR	3902096	Identifier	y		3902014	1					
ANR	3902097	Identifier	y		3902014	1					
ANR	3902098	ExpressionStatement	( void ) pgs	445:4:17688:17697	3902014	9	True				
ANR	3902099	CastExpression	( void ) pgs		3902014	0					
ANR	3902100	CastTarget	void		3902014	0					
ANR	3902101	Identifier	pgs		3902014	1					
ANR	3902102	ExpressionStatement	x -= mdev -> mapped_x	447:4:17704:17723	3902014	10	True				
ANR	3902103	AssignmentExpression	x -= mdev -> mapped_x		3902014	0		-=			
ANR	3902104	Identifier	x		3902014	0					
ANR	3902105	PtrMemberAccess	mdev -> mapped_x		3902014	1					
ANR	3902106	Identifier	mdev		3902014	0					
ANR	3902107	Identifier	mapped_x		3902014	1					
ANR	3902108	ExpressionStatement	"fit_fill_xy ( dev , x , y , w , h )"	448:4:17729:17757	3902014	11	True				
ANR	3902109	CallExpression	"fit_fill_xy ( dev , x , y , w , h )"		3902014	0					
ANR	3902110	Callee	fit_fill_xy		3902014	0					
ANR	3902111	Identifier	fit_fill_xy		3902014	0					
ANR	3902112	ArgumentList	dev		3902014	1					
ANR	3902113	Argument	dev		3902014	0					
ANR	3902114	Identifier	dev		3902014	0					
ANR	3902115	Argument	x		3902014	1					
ANR	3902116	Identifier	x		3902014	0					
ANR	3902117	Argument	y		3902014	2					
ANR	3902118	Identifier	y		3902014	0					
ANR	3902119	Argument	w		3902014	3					
ANR	3902120	Identifier	w		3902014	0					
ANR	3902121	Argument	h		3902014	4					
ANR	3902122	Identifier	h		3902014	0					
ANR	3902123	ExpressionStatement	"fit_fill_w ( dev , x , w )"	449:4:17763:17784	3902014	12	True				
ANR	3902124	CallExpression	"fit_fill_w ( dev , x , w )"		3902014	0					
ANR	3902125	Callee	fit_fill_w		3902014	0					
ANR	3902126	Identifier	fit_fill_w		3902014	0					
ANR	3902127	ArgumentList	dev		3902014	1					
ANR	3902128	Argument	dev		3902014	0					
ANR	3902129	Identifier	dev		3902014	0					
ANR	3902130	Argument	x		3902014	1					
ANR	3902131	Identifier	x		3902014	0					
ANR	3902132	Argument	w		3902014	2					
ANR	3902133	Identifier	w		3902014	0					
ANR	3902134	ExpressionStatement	mdev -> save_hl_color = pdcolor	451:4:17844:17873	3902014	13	True				
ANR	3902135	AssignmentExpression	mdev -> save_hl_color = pdcolor		3902014	0		=			
ANR	3902136	PtrMemberAccess	mdev -> save_hl_color		3902014	0					
ANR	3902137	Identifier	mdev		3902014	0					
ANR	3902138	Identifier	save_hl_color		3902014	1					
ANR	3902139	Identifier	pdcolor		3902014	1					
ANR	3902140	ExpressionStatement	"y_transfer_init ( & yt , dev , y , h )"	452:4:17879:17910	3902014	14	True				
ANR	3902141	CallExpression	"y_transfer_init ( & yt , dev , y , h )"		3902014	0					
ANR	3902142	Callee	y_transfer_init		3902014	0					
ANR	3902143	Identifier	y_transfer_init		3902014	0					
ANR	3902144	ArgumentList	& yt		3902014	1					
ANR	3902145	Argument	& yt		3902014	0					
ANR	3902146	UnaryOperationExpression	& yt		3902014	0					
ANR	3902147	UnaryOperator	&		3902014	0					
ANR	3902148	Identifier	yt		3902014	1					
ANR	3902149	Argument	dev		3902014	1					
ANR	3902150	Identifier	dev		3902014	0					
ANR	3902151	Argument	y		3902014	2					
ANR	3902152	Identifier	y		3902014	0					
ANR	3902153	Argument	h		3902014	3					
ANR	3902154	Identifier	h		3902014	0					
ANR	3902155	WhileStatement	while ( yt . height_left > 0 )		3902014	15					
ANR	3902156	Condition	yt . height_left > 0	453:11:17923:17940	3902014	0	True				
ANR	3902157	RelationalExpression	yt . height_left > 0		3902014	0		>			
ANR	3902158	MemberAccess	yt . height_left		3902014	0					
ANR	3902159	Identifier	yt		3902014	0					
ANR	3902160	Identifier	height_left		3902014	1					
ANR	3902161	PrimaryExpression	0		3902014	1					
ANR	3902162	CompoundStatement		17:8:494:530	3902014	1					
ANR	3902163	IdentifierDeclStatement	"int code = y_transfer_next ( & yt , dev ) ;"	454:8:17953:17989	3902014	0	True				
ANR	3902164	IdentifierDecl	"code = y_transfer_next ( & yt , dev )"		3902014	0					
ANR	3902165	IdentifierDeclType	int		3902014	0					
ANR	3902166	Identifier	code		3902014	1					
ANR	3902167	AssignmentExpression	"code = y_transfer_next ( & yt , dev )"		3902014	2		=			
ANR	3902168	Identifier	code		3902014	0					
ANR	3902169	CallExpression	"y_transfer_next ( & yt , dev )"		3902014	1					
ANR	3902170	Callee	y_transfer_next		3902014	0					
ANR	3902171	Identifier	y_transfer_next		3902014	0					
ANR	3902172	ArgumentList	& yt		3902014	1					
ANR	3902173	Argument	& yt		3902014	0					
ANR	3902174	UnaryOperationExpression	& yt		3902014	0					
ANR	3902175	UnaryOperator	&		3902014	0					
ANR	3902176	Identifier	yt		3902014	1					
ANR	3902177	Argument	dev		3902014	1					
ANR	3902178	Identifier	dev		3902014	0					
ANR	3902179	IfStatement	if ( code < 0 )		3902014	1					
ANR	3902180	Condition	code < 0	456:12:18004:18011	3902014	0	True				
ANR	3902181	RelationalExpression	code < 0		3902014	0		<			
ANR	3902182	Identifier	code		3902014	0					
ANR	3902183	PrimaryExpression	0		3902014	1					
ANR	3902184	ReturnStatement	return code ;	457:12:18026:18037	3902014	1	True				
ANR	3902185	Identifier	code		3902014	0					
ANR	3902186	ExpressionStatement	"( * dev_proc ( & mem_mono_device , fill_rectangle ) ) ( dev , x , yt . transfer_y , w , yt . transfer_height , ( gx_color_index ) 1 )"	458:8:18047:18250	3902014	2	True				
ANR	3902187	CallExpression	"( * dev_proc ( & mem_mono_device , fill_rectangle ) ) ( dev , x , yt . transfer_y , w , yt . transfer_height , ( gx_color_index ) 1 )"		3902014	0					
ANR	3902188	Callee	"* dev_proc ( & mem_mono_device , fill_rectangle )"		3902014	0					
ANR	3902189	UnaryOperationExpression	"* dev_proc ( & mem_mono_device , fill_rectangle )"		3902014	0					
ANR	3902190	UnaryOperator	*		3902014	0					
ANR	3902191	CallExpression	"dev_proc ( & mem_mono_device , fill_rectangle )"		3902014	1					
ANR	3902192	Callee	dev_proc		3902014	0					
ANR	3902193	Identifier	dev_proc		3902014	0					
ANR	3902194	ArgumentList	& mem_mono_device		3902014	1					
ANR	3902195	Argument	& mem_mono_device		3902014	0					
ANR	3902196	UnaryOperationExpression	& mem_mono_device		3902014	0					
ANR	3902197	UnaryOperator	&		3902014	0					
ANR	3902198	Identifier	mem_mono_device		3902014	1					
ANR	3902199	Argument	fill_rectangle		3902014	1					
ANR	3902200	Identifier	fill_rectangle		3902014	0					
ANR	3902201	ArgumentList	dev		3902014	1					
ANR	3902202	Argument	dev		3902014	0					
ANR	3902203	Identifier	dev		3902014	0					
ANR	3902204	Argument	x		3902014	1					
ANR	3902205	Identifier	x		3902014	0					
ANR	3902206	Argument	yt . transfer_y		3902014	2					
ANR	3902207	MemberAccess	yt . transfer_y		3902014	0					
ANR	3902208	Identifier	yt		3902014	0					
ANR	3902209	Identifier	transfer_y		3902014	1					
ANR	3902210	Argument	w		3902014	3					
ANR	3902211	Identifier	w		3902014	0					
ANR	3902212	Argument	yt . transfer_height		3902014	4					
ANR	3902213	MemberAccess	yt . transfer_height		3902014	0					
ANR	3902214	Identifier	yt		3902014	0					
ANR	3902215	Identifier	transfer_height		3902014	1					
ANR	3902216	Argument	( gx_color_index ) 1		3902014	5					
ANR	3902217	CastExpression	( gx_color_index ) 1		3902014	0					
ANR	3902218	CastTarget	gx_color_index		3902014	0					
ANR	3902219	PrimaryExpression	1		3902014	1					
ANR	3902220	ReturnStatement	return 0 ;	462:4:18262:18270	3902014	16	True				
ANR	3902221	PrimaryExpression	0		3902014	0					
ANR	3902222	ReturnType	static int		3902014	1					
ANR	3902223	Identifier	mem_abuf_fill_rectangle_hl_color		3902014	2					
ANR	3902224	ParameterList	"gx_device * dev , const gs_fixed_rect * rect , const gs_gstate * pgs , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath"		3902014	3					
ANR	3902225	Parameter	gx_device * dev	434:33:17232:17246	3902014	0	True				
ANR	3902226	ParameterType	gx_device *		3902014	0					
ANR	3902227	Identifier	dev		3902014	1					
ANR	3902228	Parameter	const gs_fixed_rect * rect	434:50:17249:17273	3902014	1	True				
ANR	3902229	ParameterType	const gs_fixed_rect *		3902014	0					
ANR	3902230	Identifier	rect		3902014	1					
ANR	3902231	Parameter	const gs_gstate * pgs	435:33:17309:17328	3902014	2	True				
ANR	3902232	ParameterType	const gs_gstate *		3902014	0					
ANR	3902233	Identifier	pgs		3902014	1					
ANR	3902234	Parameter	const gx_drawing_color * pdcolor	436:33:17364:17394	3902014	3	True				
ANR	3902235	ParameterType	const gx_drawing_color *		3902014	0					
ANR	3902236	Identifier	pdcolor		3902014	1					
ANR	3902237	Parameter	const gx_clip_path * pcpath	437:33:17430:17455	3902014	4	True				
ANR	3902238	ParameterType	const gx_clip_path *		3902014	0					
ANR	3902239	Identifier	pcpath		3902014	1					
ANR	3902240	CFGEntryNode	ENTRY		3902014		True				
ANR	3902241	CFGExitNode	EXIT		3902014		True				
ANR	3902242	Symbol	rect -> p . x		3902014						
ANR	3902243	Symbol	code		3902014						
ANR	3902244	Symbol	& yt		3902014						
ANR	3902245	Symbol	rect -> p . y		3902014						
ANR	3902246	Symbol	rect -> q . y		3902014						
ANR	3902247	Symbol	rect -> q . x		3902014						
ANR	3902248	Symbol	mdev -> save_hl_color		3902014						
ANR	3902249	Symbol	yt . transfer_height		3902014						
ANR	3902250	Symbol	fixed2int		3902014						
ANR	3902251	Symbol	rect		3902014						
ANR	3902252	Symbol	dev		3902014						
ANR	3902253	Symbol	dev_proc		3902014						
ANR	3902254	Symbol	yt		3902014						
ANR	3902255	Symbol	pgs		3902014						
ANR	3902256	Symbol	rect -> q		3902014						
ANR	3902257	Symbol	yt . transfer_y		3902014						
ANR	3902258	Symbol	pcpath		3902014						
ANR	3902259	Symbol	rect -> p		3902014						
ANR	3902260	Symbol	* mdev		3902014						
ANR	3902261	Symbol	yt . height_left		3902014						
ANR	3902262	Symbol	h		3902014						
ANR	3902263	Symbol	mdev -> mapped_x		3902014						
ANR	3902264	Symbol	pdcolor		3902014						
ANR	3902265	Symbol	fill_rectangle		3902014						
ANR	3902266	Symbol	y_transfer_next		3902014						
ANR	3902267	Symbol	w		3902014						
ANR	3902268	Symbol	x		3902014						
ANR	3902269	Symbol	* rect		3902014						
ANR	3902270	Symbol	y		3902014						
ANR	3902271	Symbol	mdev		3902014						
ANR	3902272	Symbol	& mem_mono_device		3902014						
ANR	3902273	Function	mem_abuf_get_clipping_box	466:0:18355:18738							
ANR	3902274	FunctionDef	"mem_abuf_get_clipping_box (gx_device * dev , gs_fixed_rect * pbox)"		3902273	0					
ANR	3902275	CompoundStatement		468:0:18432:18738	3902273	0					
ANR	3902276	Statement	gx_device_memory	469:4:18438:18453	3902273	0	True				
ANR	3902277	Statement	*	469:21:18455:18455	3902273	1	True				
ANR	3902278	Statement	const	469:23:18457:18461	3902273	2	True				
ANR	3902279	ExpressionStatement	mdev = ( gx_device_memory * ) dev	469:29:18463:18493	3902273	3	True				
ANR	3902280	AssignmentExpression	mdev = ( gx_device_memory * ) dev		3902273	0		=			
ANR	3902281	Identifier	mdev		3902273	0					
ANR	3902282	CastExpression	( gx_device_memory * ) dev		3902273	1					
ANR	3902283	CastTarget	gx_device_memory *		3902273	0					
ANR	3902284	Identifier	dev		3902273	1					
ANR	3902285	IdentifierDeclStatement	gx_device * tdev = mdev -> target ;	470:4:18499:18529	3902273	4	True				
ANR	3902286	IdentifierDecl	* tdev = mdev -> target		3902273	0					
ANR	3902287	IdentifierDeclType	gx_device *		3902273	0					
ANR	3902288	Identifier	tdev		3902273	1					
ANR	3902289	AssignmentExpression	* tdev = mdev -> target		3902273	2		=			
ANR	3902290	Identifier	tdev		3902273	0					
ANR	3902291	PtrMemberAccess	mdev -> target		3902273	1					
ANR	3902292	Identifier	mdev		3902273	0					
ANR	3902293	Identifier	target		3902273	1					
ANR	3902294	ExpressionStatement	"( * dev_proc ( tdev , get_clipping_box ) ) ( tdev , pbox )"	472:4:18536:18584	3902273	5	True				
ANR	3902295	CallExpression	"( * dev_proc ( tdev , get_clipping_box ) ) ( tdev , pbox )"		3902273	0					
ANR	3902296	Callee	"* dev_proc ( tdev , get_clipping_box )"		3902273	0					
ANR	3902297	UnaryOperationExpression	"* dev_proc ( tdev , get_clipping_box )"		3902273	0					
ANR	3902298	UnaryOperator	*		3902273	0					
ANR	3902299	CallExpression	"dev_proc ( tdev , get_clipping_box )"		3902273	1					
ANR	3902300	Callee	dev_proc		3902273	0					
ANR	3902301	Identifier	dev_proc		3902273	0					
ANR	3902302	ArgumentList	tdev		3902273	1					
ANR	3902303	Argument	tdev		3902273	0					
ANR	3902304	Identifier	tdev		3902273	0					
ANR	3902305	Argument	get_clipping_box		3902273	1					
ANR	3902306	Identifier	get_clipping_box		3902273	0					
ANR	3902307	ArgumentList	tdev		3902273	1					
ANR	3902308	Argument	tdev		3902273	0					
ANR	3902309	Identifier	tdev		3902273	0					
ANR	3902310	Argument	pbox		3902273	1					
ANR	3902311	Identifier	pbox		3902273	0					
ANR	3902312	ExpressionStatement	pbox -> p . x <<= mdev -> log2_scale . x	473:4:18590:18622	3902273	6	True				
ANR	3902313	AssignmentExpression	pbox -> p . x <<= mdev -> log2_scale . x		3902273	0		<<=			
ANR	3902314	MemberAccess	pbox -> p . x		3902273	0					
ANR	3902315	PtrMemberAccess	pbox -> p		3902273	0					
ANR	3902316	Identifier	pbox		3902273	0					
ANR	3902317	Identifier	p		3902273	1					
ANR	3902318	Identifier	x		3902273	1					
ANR	3902319	MemberAccess	mdev -> log2_scale . x		3902273	1					
ANR	3902320	PtrMemberAccess	mdev -> log2_scale		3902273	0					
ANR	3902321	Identifier	mdev		3902273	0					
ANR	3902322	Identifier	log2_scale		3902273	1					
ANR	3902323	Identifier	x		3902273	1					
ANR	3902324	ExpressionStatement	pbox -> p . y <<= mdev -> log2_scale . y	474:4:18628:18660	3902273	7	True				
ANR	3902325	AssignmentExpression	pbox -> p . y <<= mdev -> log2_scale . y		3902273	0		<<=			
ANR	3902326	MemberAccess	pbox -> p . y		3902273	0					
ANR	3902327	PtrMemberAccess	pbox -> p		3902273	0					
ANR	3902328	Identifier	pbox		3902273	0					
ANR	3902329	Identifier	p		3902273	1					
ANR	3902330	Identifier	y		3902273	1					
ANR	3902331	MemberAccess	mdev -> log2_scale . y		3902273	1					
ANR	3902332	PtrMemberAccess	mdev -> log2_scale		3902273	0					
ANR	3902333	Identifier	mdev		3902273	0					
ANR	3902334	Identifier	log2_scale		3902273	1					
ANR	3902335	Identifier	y		3902273	1					
ANR	3902336	ExpressionStatement	pbox -> q . x <<= mdev -> log2_scale . x	475:4:18666:18698	3902273	8	True				
ANR	3902337	AssignmentExpression	pbox -> q . x <<= mdev -> log2_scale . x		3902273	0		<<=			
ANR	3902338	MemberAccess	pbox -> q . x		3902273	0					
ANR	3902339	PtrMemberAccess	pbox -> q		3902273	0					
ANR	3902340	Identifier	pbox		3902273	0					
ANR	3902341	Identifier	q		3902273	1					
ANR	3902342	Identifier	x		3902273	1					
ANR	3902343	MemberAccess	mdev -> log2_scale . x		3902273	1					
ANR	3902344	PtrMemberAccess	mdev -> log2_scale		3902273	0					
ANR	3902345	Identifier	mdev		3902273	0					
ANR	3902346	Identifier	log2_scale		3902273	1					
ANR	3902347	Identifier	x		3902273	1					
ANR	3902348	ExpressionStatement	pbox -> q . y <<= mdev -> log2_scale . y	476:4:18704:18736	3902273	9	True				
ANR	3902349	AssignmentExpression	pbox -> q . y <<= mdev -> log2_scale . y		3902273	0		<<=			
ANR	3902350	MemberAccess	pbox -> q . y		3902273	0					
ANR	3902351	PtrMemberAccess	pbox -> q		3902273	0					
ANR	3902352	Identifier	pbox		3902273	0					
ANR	3902353	Identifier	q		3902273	1					
ANR	3902354	Identifier	y		3902273	1					
ANR	3902355	MemberAccess	mdev -> log2_scale . y		3902273	1					
ANR	3902356	PtrMemberAccess	mdev -> log2_scale		3902273	0					
ANR	3902357	Identifier	mdev		3902273	0					
ANR	3902358	Identifier	log2_scale		3902273	1					
ANR	3902359	Identifier	y		3902273	1					
ANR	3902360	ReturnType	static void		3902273	1					
ANR	3902361	Identifier	mem_abuf_get_clipping_box		3902273	2					
ANR	3902362	ParameterList	"gx_device * dev , gs_fixed_rect * pbox"		3902273	3					
ANR	3902363	Parameter	gx_device * dev	467:26:18393:18407	3902273	0	True				
ANR	3902364	ParameterType	gx_device *		3902273	0					
ANR	3902365	Identifier	dev		3902273	1					
ANR	3902366	Parameter	gs_fixed_rect * pbox	467:43:18410:18429	3902273	1	True				
ANR	3902367	ParameterType	gs_fixed_rect *		3902273	0					
ANR	3902368	Identifier	pbox		3902273	1					
ANR	3902369	CFGEntryNode	ENTRY		3902273		True				
ANR	3902370	CFGExitNode	EXIT		3902273		True				
ANR	3902371	Symbol	pbox -> p . x		3902273						
ANR	3902372	Symbol	pbox -> p . y		3902273						
ANR	3902373	Symbol	mdev -> target		3902273						
ANR	3902374	Symbol	get_clipping_box		3902273						
ANR	3902375	Symbol	mdev -> log2_scale		3902273						
ANR	3902376	Symbol	pbox		3902273						
ANR	3902377	Symbol	pbox -> q		3902273						
ANR	3902378	Symbol	pbox -> p		3902273						
ANR	3902379	Symbol	* pbox		3902273						
ANR	3902380	Symbol	dev		3902273						
ANR	3902381	Symbol	dev_proc		3902273						
ANR	3902382	Symbol	tdev		3902273						
ANR	3902383	Symbol	mdev		3902273						
ANR	3902384	Symbol	mdev -> log2_scale . y		3902273						
ANR	3902385	Symbol	pbox -> q . y		3902273						
ANR	3902386	Symbol	mdev -> log2_scale . x		3902273						
ANR	3902387	Symbol	* mdev		3902273						
ANR	3902388	Symbol	pbox -> q . x		3902273						
ANR	3902389	Function	alpha_buffer_bits	483:0:18872:19196							
ANR	3902390	FunctionDef	alpha_buffer_bits (gs_gstate * pgs)		3902389	0					
ANR	3902391	CompoundStatement		485:0:18911:19196	3902389	0					
ANR	3902392	IdentifierDeclStatement	gx_device * dev ;	486:4:18917:18931	3902389	0	True				
ANR	3902393	IdentifierDecl	* dev		3902389	0					
ANR	3902394	IdentifierDeclType	gx_device *		3902389	0					
ANR	3902395	Identifier	dev		3902389	1					
ANR	3902396	ExpressionStatement	dev = gs_currentdevice_inline ( pgs )	488:4:18938:18972	3902389	1	True				
ANR	3902397	AssignmentExpression	dev = gs_currentdevice_inline ( pgs )		3902389	0		=			
ANR	3902398	Identifier	dev		3902389	0					
ANR	3902399	CallExpression	gs_currentdevice_inline ( pgs )		3902389	1					
ANR	3902400	Callee	gs_currentdevice_inline		3902389	0					
ANR	3902401	Identifier	gs_currentdevice_inline		3902389	0					
ANR	3902402	ArgumentList	pgs		3902389	1					
ANR	3902403	Argument	pgs		3902389	0					
ANR	3902404	Identifier	pgs		3902389	0					
ANR	3902405	IfStatement	if ( gs_device_is_abuf ( dev ) )		3902389	2					
ANR	3902406	Condition	gs_device_is_abuf ( dev )	489:8:18982:19003	3902389	0	True				
ANR	3902407	CallExpression	gs_device_is_abuf ( dev )		3902389	0					
ANR	3902408	Callee	gs_device_is_abuf		3902389	0					
ANR	3902409	Identifier	gs_device_is_abuf		3902389	0					
ANR	3902410	ArgumentList	dev		3902389	1					
ANR	3902411	Argument	dev		3902389	0					
ANR	3902412	Identifier	dev		3902389	0					
ANR	3902413	CompoundStatement		5:32:94:94	3902389	1					
ANR	3902414	ReturnStatement	return 0 ;	491:8:19074:19082	3902389	0	True				
ANR	3902415	PrimaryExpression	0		3902389	0					
ANR	3902416	ReturnStatement	"return ( * dev_proc ( dev , get_alpha_bits ) ) ( dev , ( pgs -> in_cachedevice ? go_text : go_graphics ) ) ;"	493:4:19094:19194	3902389	3	True				
ANR	3902417	CallExpression	"( * dev_proc ( dev , get_alpha_bits ) ) ( dev , ( pgs -> in_cachedevice ? go_text : go_graphics ) )"		3902389	0					
ANR	3902418	Callee	"* dev_proc ( dev , get_alpha_bits )"		3902389	0					
ANR	3902419	UnaryOperationExpression	"* dev_proc ( dev , get_alpha_bits )"		3902389	0					
ANR	3902420	UnaryOperator	*		3902389	0					
ANR	3902421	CallExpression	"dev_proc ( dev , get_alpha_bits )"		3902389	1					
ANR	3902422	Callee	dev_proc		3902389	0					
ANR	3902423	Identifier	dev_proc		3902389	0					
ANR	3902424	ArgumentList	dev		3902389	1					
ANR	3902425	Argument	dev		3902389	0					
ANR	3902426	Identifier	dev		3902389	0					
ANR	3902427	Argument	get_alpha_bits		3902389	1					
ANR	3902428	Identifier	get_alpha_bits		3902389	0					
ANR	3902429	ArgumentList	dev		3902389	1					
ANR	3902430	Argument	dev		3902389	0					
ANR	3902431	Identifier	dev		3902389	0					
ANR	3902432	Argument	pgs -> in_cachedevice ? go_text : go_graphics		3902389	1					
ANR	3902433	ConditionalExpression	pgs -> in_cachedevice ? go_text : go_graphics		3902389	0					
ANR	3902434	Condition	pgs -> in_cachedevice		3902389	0					
ANR	3902435	PtrMemberAccess	pgs -> in_cachedevice		3902389	0					
ANR	3902436	Identifier	pgs		3902389	0					
ANR	3902437	Identifier	in_cachedevice		3902389	1					
ANR	3902438	Identifier	go_text		3902389	1					
ANR	3902439	Identifier	go_graphics		3902389	2					
ANR	3902440	ReturnType	int		3902389	1					
ANR	3902441	Identifier	alpha_buffer_bits		3902389	2					
ANR	3902442	ParameterList	gs_gstate * pgs		3902389	3					
ANR	3902443	Parameter	gs_gstate * pgs	484:18:18894:18908	3902389	0	True				
ANR	3902444	ParameterType	gs_gstate *		3902389	0					
ANR	3902445	Identifier	pgs		3902389	1					
ANR	3902446	CFGEntryNode	ENTRY		3902389		True				
ANR	3902447	CFGExitNode	EXIT		3902389		True				
ANR	3902448	Symbol	"* dev_proc ( dev , get_alpha_bits )"		3902389						
ANR	3902449	Symbol	go_graphics		3902389						
ANR	3902450	Symbol	dev		3902389						
ANR	3902451	Symbol	gs_currentdevice_inline		3902389						
ANR	3902452	Symbol	* pgs		3902389						
ANR	3902453	Symbol	* dev_proc		3902389						
ANR	3902454	Symbol	dev_proc		3902389						
ANR	3902455	Symbol	gs_device_is_abuf		3902389						
ANR	3902456	Symbol	get_alpha_bits		3902389						
ANR	3902457	Symbol	go_text		3902389						
ANR	3902458	Symbol	pgs -> in_cachedevice		3902389						
ANR	3902459	Symbol	pgs		3902389						
